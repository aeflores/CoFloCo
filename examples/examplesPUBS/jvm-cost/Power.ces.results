result(ubs,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[power('$VAR'(2))],[])
,input_eq(m1,2,cost([],[],[],[],0),[],[])
,input_eq(m3('$VAR'(2)),4,cost([],[],[],[],2),[m1],[1*'$VAR'(2)=0])
,input_eq(power('$VAR'(2)),(12,11683581),cost([],[],[],[],10),[m1,power('$VAR'(3))],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,input_eq(power('$VAR'(2)),(13,14859794),cost([],[],[],[],2),[m3('$VAR'(3))],['$VAR'(2)='$VAR'(3)])
]
)
,predicateRes(entry_eq/2,
[entry_eq(power('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m1)
,ground_equation_header(m0('$VAR'(0)))
,ground_equation_header(m2('$VAR'(0)))
,ground_equation_header(m3('$VAR'(0)))
,ground_equation_header(m4('$VAR'(1)))
,ground_equation_header(m5('$VAR'(0)))
,ground_equation_header(power('$VAR'(0)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_ubs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/examplesPUBS/jvm-cost/Power.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-power/1,m0/1-m2/1,m2/1-m5/1,m3/1-m1/0,m4/1-m1/0,m4/1-power/1,m5/1-m3/1,m5/1-m4/1,power/1-m0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[m1/0],[],[m1/0],[])
,crs_scc(1,non_recursive,[m3/1],[],[m3/1],[])
,crs_scc(2,recursive,[m0/1,m2/1,m4/1,m5/1,power/1],[power/1-m0/1,m0/1-m2/1,m5/1-m4/1,m2/1-m5/1,m4/1-power/1],[power/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(power('$VAR'(2)),(1,0),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
,eq_ph(power('$VAR'(2)),(1,1),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
,eq_ph(power('$VAR'(2)),(2,0),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],terminating)
,eq_ph(power('$VAR'(2)),(2,1),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1],terminating)
,eq_ph(power('$VAR'(2)),(3,2),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],terminating)
,eq_ph(power('$VAR'(2)),(4,2),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(power('$VAR'(2)),(1,0),[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],[2],terminating)
,loop_ph(power('$VAR'(2)),(2,0),[],[1*'$VAR'(2)=0],[1],terminating)
,loop_ph(power('$VAR'(2)),(3,2),[],[1*'$VAR'(2)=0],[4],terminating)
,loop_ph(power('$VAR'(2)),(4,2),[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,phase_loop([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(chain/3,
[chain(power('$VAR'(2)),0,[2])
,chain(power('$VAR'(2)),0,[[1]])
,chain(power('$VAR'(2)),0,[[1],2])
,chain(power('$VAR'(2)),2,[3])
,chain(power('$VAR'(2)),2,[[4],3])
]
)
,predicateRes(phase/3,
[phase(2,power('$VAR'(2)),0)
,phase(3,power('$VAR'(2)),2)
,phase([1],power('$VAR'(2)),0)
,phase([4],power('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(power('$VAR'(2)),([3],2),5697057,[1*'$VAR'(2)=0])
,backward_invariant(power('$VAR'(2)),([[4],3],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(power('$VAR'(2)),[4],[1*'$VAR'(2)>=0])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(power('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([2,[1]],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(power('$VAR'(2)),([3,[4]],2),11527763,[])
,forward_invariant(power('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(power('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(power('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(power('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=0])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(power('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+0)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(power('$VAR'(2)),'$VAR'(3),[4],[4:1],[('$VAR'(2),1)]+0,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(power('$VAR'(2)),[3],yes,trivial)
,termination_argument(power('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(power('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+0))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(power('$VAR'(2)),0,[[1]])
,non_terminating_chain(power('$VAR'(2)),2,[[4]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([4],power('$VAR'(2)),[power('$VAR'(3))],cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)]),bound(ub,[('$VAR'(2),1),('$VAR'(3),-1)]+0,[it(4)])],[],[],[(it(4),10)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(power('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],4))
,loop_cost(power('$VAR'(2)),[power('$VAR'(3))],(0,[1*'$VAR'(3)>=0]),4,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(power('$VAR'(2)),[3],(0,[]),cost([],[],[],[],4),[1*'$VAR'(2)=0])
,chain_cost(power('$VAR'(2)),[[4],3],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)])],[],[],[(it(4),10)],4),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(power('$VAR'(2)),[3],14715383,cost([],[],[],[],4))
,upper_bound(power('$VAR'(2)),[[4],3],6175679,cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)])],[],[],[(it(4),10)],4))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(power('$VAR'(2)),[3],max([add([mult([],4)])]))
,closed_upper_bound(power('$VAR'(2)),[[4],3],max([add([mult([],4),mult([nat('$VAR'(2))],10)])]))
]
)
,predicateRes(closed_lower_bound/3,
[]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(power('$VAR'(2)),(4,0),[[1*'$VAR'(2)=0]])
,conditional_bound(power('$VAR'(2)),(10*'$VAR'(2)+4,0),[[1*'$VAR'(2)>=1]])
]
)
]
)
]
,none).


result(lbs,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[power('$VAR'(2))],[])
,input_eq(m1,2,cost([],[],[],[],0),[],[])
,input_eq(m3('$VAR'(2)),4,cost([],[],[],[],2),[m1],[1*'$VAR'(2)=0])
,input_eq(power('$VAR'(2)),(12,11683581),cost([],[],[],[],10),[m1,power('$VAR'(3))],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,input_eq(power('$VAR'(2)),(13,14859794),cost([],[],[],[],2),[m3('$VAR'(3))],['$VAR'(2)='$VAR'(3)])
]
)
,predicateRes(entry_eq/2,
[entry_eq(power('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m1)
,ground_equation_header(m0('$VAR'(0)))
,ground_equation_header(m2('$VAR'(0)))
,ground_equation_header(m3('$VAR'(0)))
,ground_equation_header(m4('$VAR'(1)))
,ground_equation_header(m5('$VAR'(0)))
,ground_equation_header(power('$VAR'(0)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(conditional_lbs,[])
,param(context_sensitive,[1])
,param(input,['../examples/examplesPUBS/jvm-cost/Power.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-power/1,m0/1-m2/1,m2/1-m5/1,m3/1-m1/0,m4/1-m1/0,m4/1-power/1,m5/1-m3/1,m5/1-m4/1,power/1-m0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[m1/0],[],[m1/0],[])
,crs_scc(1,non_recursive,[m3/1],[],[m3/1],[])
,crs_scc(2,recursive,[m0/1,m2/1,m4/1,m5/1,power/1],[power/1-m0/1,m0/1-m2/1,m5/1-m4/1,m2/1-m5/1,m4/1-power/1],[power/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(power('$VAR'(2)),(1,0),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
,eq_ph(power('$VAR'(2)),(1,1),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
,eq_ph(power('$VAR'(2)),(2,0),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],terminating)
,eq_ph(power('$VAR'(2)),(2,1),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1],terminating)
,eq_ph(power('$VAR'(2)),(3,2),cost([],[],[],[],10),[],[power('$VAR'(3))],[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],terminating)
,eq_ph(power('$VAR'(2)),(4,2),cost([],[],[],[],4),[],[],[],[1*'$VAR'(2)=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(power('$VAR'(2)),(1,0),[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],[2],terminating)
,loop_ph(power('$VAR'(2)),(2,0),[],[1*'$VAR'(2)=0],[1],terminating)
,loop_ph(power('$VAR'(2)),(3,2),[],[1*'$VAR'(2)=0],[4],terminating)
,loop_ph(power('$VAR'(2)),(4,2),[power('$VAR'(3))],[-1*'$VAR'(2)+1*'$VAR'(3)= -1,1*'$VAR'(3)>=0],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,phase_loop([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(chain/3,
[chain(power('$VAR'(2)),0,[2])
,chain(power('$VAR'(2)),0,[[1]])
,chain(power('$VAR'(2)),0,[[1],2])
,chain(power('$VAR'(2)),2,[3])
,chain(power('$VAR'(2)),2,[[4],3])
]
)
,predicateRes(phase/3,
[phase(2,power('$VAR'(2)),0)
,phase(3,power('$VAR'(2)),2)
,phase([1],power('$VAR'(2)),0)
,phase([4],power('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(power('$VAR'(2)),([3],2),5697057,[1*'$VAR'(2)=0])
,backward_invariant(power('$VAR'(2)),([[4],3],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(power('$VAR'(2)),[4],[1*'$VAR'(2)>=0])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(power('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([2,[1]],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(power('$VAR'(2)),([3,[4]],2),11527763,[])
,forward_invariant(power('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(power('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(power('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(power('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(power('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,power('$VAR'(2)),power('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=0])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(power('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+0)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(power('$VAR'(2)),'$VAR'(3),[4],[4:1],[('$VAR'(2),1)]+0,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(power('$VAR'(2)),[3],yes,trivial)
,termination_argument(power('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(power('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+0))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(power('$VAR'(2)),0,[[1]])
,non_terminating_chain(power('$VAR'(2)),2,[[4]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([4],power('$VAR'(2)),[power('$VAR'(3))],cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)]),bound(ub,[('$VAR'(2),1),('$VAR'(3),-1)]+0,[it(4)])],[bound(lb,[('$VAR'(2),1),('$VAR'(3),-1)]+0,[it(4)])],[],[(it(4),10)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(power('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],4))
,loop_cost(power('$VAR'(2)),[power('$VAR'(3))],(0,[1*'$VAR'(3)>=0]),4,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(power('$VAR'(2)),[3],(0,[]),cost([],[],[],[],4),[1*'$VAR'(2)=0])
,chain_cost(power('$VAR'(2)),[[4],3],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)])],[bound(lb,[('$VAR'(2),1)]+0,[it(4)])],[],[(it(4),10)],4),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(power('$VAR'(2)),[3],14715383,cost([],[],[],[],4))
,upper_bound(power('$VAR'(2)),[[4],3],9957816,cost([bound(ub,[('$VAR'(2),1)]+0,[it(4)])],[bound(lb,[('$VAR'(2),1)]+0,[it(4)])],[],[(it(4),10)],4))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(power('$VAR'(2)),[3],min([add([mult([],4)])]))
,closed_lower_bound(power('$VAR'(2)),[[4],3],min([add([mult([],4),mult([nat('$VAR'(2))],10)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(power('$VAR'(2)),(inf,4),[[1*'$VAR'(2)=0]])
,conditional_bound(power('$VAR'(2)),(inf,10*'$VAR'(2)+4),[[1*'$VAR'(2)>=1]])
]
)
]
)
]
,none).


