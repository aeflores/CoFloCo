result(ubs,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[fibonacciMethod('$VAR'(2))],[])
,input_eq('3'('$VAR'(2)),5,cost([],[],[],[],2),['6'('$VAR'(3),'$VAR'(4))],[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(fibonacciMethod('$VAR'(2)),1,cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0])
,input_eq('pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(2)),6,cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0])
,input_eq('6'('$VAR'(2),'$VAR'(3)),8,cost([],[],[],[],0),[],[])
,input_eq('7'('$VAR'(2),'$VAR'(3),'$VAR'(4)),11,cost([],[],[],[],2),['6'('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)+1*'$VAR'(4)=0])
,input_eq('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),3,cost([],[],[],[],0),['3'('$VAR'(5))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(3)+1*'$VAR'(4)>=0])
,input_eq('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(14,12891106),cost([],[],[],[],8),['pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(5)),'pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(6)),'10_normal'('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],['$VAR'(2)='$VAR'(7),1*'$VAR'(2)+ -1*'$VAR'(6)=2,1*'$VAR'(2)+ -1*'$VAR'(5)=1,1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(8)>=1,1*'$VAR'(9)>=1])
,input_eq('10_normal'('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),10,cost([],[],[],[],0),['7'('$VAR'(6),'$VAR'(7),'$VAR'(8))],[-1*'$VAR'(6)+1*'$VAR'(2)=0,-1*'$VAR'(7)+1*'$VAR'(3)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(fibonacciMethod('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header('2'('$VAR'(0)))
,ground_equation_header('3'('$VAR'(0)))
,ground_equation_header(fibonacciMethod('$VAR'(0)))
,ground_equation_header('pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(0)))
,ground_equation_header('4'('$VAR'(0),'$VAR'(1)))
,ground_equation_header('6'('$VAR'(0),'$VAR'(1)))
,ground_equation_header('7'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('8'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('9_normal'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('10_normal'('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_ubs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/examplesPUBS/jvm-cost/FibonacciNew.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-fibonacciMethod/1,'10_normal'/4-'7'/3,'2'/1-'9_normal'/3,'2'/1-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'3'/1-'6'/2,'4'/2-'10_normal'/4,'4'/2-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'7'/3-'6'/2,'8'/3-'2'/1,'8'/3-'3'/1,'9_normal'/3-'4'/2,fibonacciMethod/1-'8'/3,'pubs/Fibonacci_fibonacciMethod(I)I'/1-'8'/3])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,['6'/2],[],['6'/2],[])
,crs_scc(1,non_recursive,['7'/3],[],['7'/3],[])
,crs_scc(2,non_recursive,['10_normal'/4],[],['10_normal'/4],[])
,crs_scc(3,non_recursive,['3'/1],[],['3'/1],[])
,crs_scc(4,recursive,['2'/1,'4'/2,'8'/3,'9_normal'/3,'pubs/Fibonacci_fibonacciMethod(I)I'/1],['8'/3-'2'/1,'9_normal'/3-'4'/2,'pubs/Fibonacci_fibonacciMethod(I)I'/1-'8'/3,'2'/1-'9_normal'/3,'2'/1-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'4'/2-'pubs/Fibonacci_fibonacciMethod(I)I'/1],['8'/3],[non_tail,multiple])
,crs_scc(5,non_recursive,[fibonacciMethod/1],[],[fibonacciMethod/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(fibonacciMethod('$VAR'(2)),(1,0),cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[],['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(1,1),cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[],['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(2)+ -1*'$VAR'(4)=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(5)=1],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(6,2),cost([],[],[],[],3),[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([5]))],[],[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([5]))],[1*'$VAR'(5)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(4)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(7,2),cost([],[],[],[],3),[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([multiple([4],[[5]])]))],[],[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([multiple([4],[[5]])]))],[1*'$VAR'(5)=1,-1*'$VAR'(2)+1*'$VAR'(4)=0,-1*'$VAR'(3)+1*'$VAR'(4)=0,1*'$VAR'(4)>=2],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(8)= -2,-1*'$VAR'(5)+1*'$VAR'(8)= -1,-1*'$VAR'(6)+1*'$VAR'(8)= -1,-1*'$VAR'(9)+1*'$VAR'(8)=0,-1*'$VAR'(4)+1*'$VAR'(3)>=1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(8)+ -1*'$VAR'(9)=0,1*'$VAR'(8)+ -1*'$VAR'(6)= -1,1*'$VAR'(8)+ -1*'$VAR'(5)= -1,1*'$VAR'(2)+ -1*'$VAR'(8)=2,1*'$VAR'(10)=1,1*'$VAR'(7)=1,1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,0),cost([],[],[],[],2),[],[],[],[-1*'$VAR'(3)+1*'$VAR'(4)>=0],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,1),cost([],[],[],[],2),[],[],[],[1*'$VAR'(4)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(4,2),cost([],[],[],[],2),[],[],[],[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(5,2),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(4)=1,1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(5)+1*'$VAR'(3)=1,-1*'$VAR'(6)+1*'$VAR'(3)=1,-1*'$VAR'(8)+1*'$VAR'(3)=2,-1*'$VAR'(9)+1*'$VAR'(3)=2,1*'$VAR'(3)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(fibonacciMethod('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(fibonacciMethod('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=2],[7],terminating)
,loop_ph(fibonacciMethod('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>= -1],[6],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[-1*'$VAR'(3)+1*'$VAR'(4)>=0],[3],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,0),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(8)= -2,-1*'$VAR'(5)+1*'$VAR'(8)= -1,-1*'$VAR'(6)+1*'$VAR'(8)= -1,-1*'$VAR'(9)+1*'$VAR'(8)=0,-1*'$VAR'(4)+1*'$VAR'(3)>=1],[2],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(4,2),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(4)=1,1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(5)+1*'$VAR'(2)=1,-1*'$VAR'(6)+1*'$VAR'(2)=1,-1*'$VAR'(8)+1*'$VAR'(2)=2,-1*'$VAR'(9)+1*'$VAR'(2)=2,1*'$VAR'(2)>=2],[5],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(5,2),[],[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(2)>= -1],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([3],0,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(6)>=1,-1*'$VAR'(2)+1*'$VAR'(6)>= -2,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(7)=1])
,phase_loop([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(6)>=1,-1*'$VAR'(2)+1*'$VAR'(6)>= -2,1*'$VAR'(4)=1,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(7)=1])
]
)
,predicateRes(chain/3,
[chain(fibonacciMethod('$VAR'(2)),0,[1])
,chain(fibonacciMethod('$VAR'(2)),2,[6])
,chain(fibonacciMethod('$VAR'(2)),2,[7])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[multiple([3],[[],[2]])])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[5])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[multiple([4],[[5]])])
]
)
,predicateRes(phase/3,
[phase(1,fibonacciMethod('$VAR'(2)),0)
,phase(2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(5,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(6,fibonacciMethod('$VAR'(2)),2)
,phase(7,fibonacciMethod('$VAR'(2)),2)
,phase([3],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase([4],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(fibonacciMethod('$VAR'(2)),([6],2),8201273,[1*'$VAR'(2)>=2])
,backward_invariant(fibonacciMethod('$VAR'(2)),([7],2),12137574,[-1*'$VAR'(2)>= -1])
,backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5],2),9795318,[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1])
,backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([multiple([4],[[5]])],2),12712732,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),multiple([4],[[5]]),[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(fibonacciMethod('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(fibonacciMethod('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(fibonacciMethod('$VAR'(2)),([7],2),11527763,[])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2,[3]],0),8870909,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,1*'$VAR'(2)>=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5],2),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5,[4]],2),13475191,[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([[3]],0),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([[4]],2),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(fibonacciMethod('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(fibonacciMethod('$VAR'(2)),7,[])
,context_insensitive_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0])
,context_insensitive_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[4],[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(fibonacciMethod('$VAR'(2)),0,[])
,scc_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)>=2,1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(4)=1,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(7)=1])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)+ -1*'$VAR'(6)>=0,1*'$VAR'(6)>=0,1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(4)=1,1*'$VAR'(7)=1])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:1],[('$VAR'(2),1)]+ -1,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:1],[('$VAR'(3),1)]+ -1,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:2],[('$VAR'(2),1/2)]+ -1/2,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:2],[('$VAR'(3),1/2)]+ -1/2,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(fibonacciMethod('$VAR'(2)),[6],yes,trivial)
,termination_argument(fibonacciMethod('$VAR'(2)),[7],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5,[4]],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[multiple([3],[[],[2]])])
,non_terminating_chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[multiple([4],[[],[5]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[5]])],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],cost([],[],[],[(it(4),16),(it([5]),2)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(fibonacciMethod('$VAR'(2)),[],(0,[]),6,cost([],[],[],[(s(1),18)],3))
,loop_cost(fibonacciMethod('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],5))
,loop_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0]),5,cost([],[],[],[],2))
,loop_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],(0,[1*'$VAR'(10)=1,1*'$VAR'(9)+ -1*'$VAR'(8)=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1,1*'$VAR'(6)+ -1*'$VAR'(5)=0,1*'$VAR'(7)=1]),4,cost([],[],[],[],16))
]
)
,predicateRes(chain_cost/5,
[chain_cost(fibonacciMethod('$VAR'(2)),[6],(0,[]),cost([],[],[],[(s(1),18)],3),[1*'$VAR'(2)>=2])
,chain_cost(fibonacciMethod('$VAR'(2)),[7],(0,[]),cost([],[],[],[],5),[-1*'$VAR'(2)>= -1])
,chain_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],(0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0]),cost([],[],[],[],2),[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(2)>= -1])
,chain_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[multiple([4],[[5]])],(0,[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1]),cost([],[],[],[(it(4),16),(it([5]),2)],0),[1*'$VAR'(2)>=2,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1,1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(2)=0])
]
)
,predicateRes(upper_bound/4,
[upper_bound(fibonacciMethod('$VAR'(2)),[6],10192945,cost([],[],[],[(s(1),18)],3))
,upper_bound(fibonacciMethod('$VAR'(2)),[7],609637,cost([],[],[],[],5))
,upper_bound('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],5787060,cost([],[],[],[],2))
,upper_bound('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[multiple([4],[[5]])],15622205,cost([],[],[],[(it(4),16),(it([5]),2)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(fibonacciMethod('$VAR'(2)),[6],max([inf]))
,closed_upper_bound(fibonacciMethod('$VAR'(2)),[7],max([add([mult([],5)])]))
]
)
,predicateRes(closed_lower_bound/3,
[]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(fibonacciMethod('$VAR'(2)),(5,0),[[-1*'$VAR'(2)>= -1]])
,conditional_bound(fibonacciMethod('$VAR'(2)),(inf,0),[[1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


result(lbs,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[fibonacciMethod('$VAR'(2))],[])
,input_eq('3'('$VAR'(2)),5,cost([],[],[],[],2),['6'('$VAR'(3),'$VAR'(4))],[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(fibonacciMethod('$VAR'(2)),1,cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0])
,input_eq('pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(2)),6,cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0])
,input_eq('6'('$VAR'(2),'$VAR'(3)),8,cost([],[],[],[],0),[],[])
,input_eq('7'('$VAR'(2),'$VAR'(3),'$VAR'(4)),11,cost([],[],[],[],2),['6'('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)+1*'$VAR'(4)=0])
,input_eq('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),3,cost([],[],[],[],0),['3'('$VAR'(5))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(3)+1*'$VAR'(4)>=0])
,input_eq('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(14,12891106),cost([],[],[],[],8),['pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(5)),'pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(6)),'10_normal'('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],['$VAR'(2)='$VAR'(7),1*'$VAR'(2)+ -1*'$VAR'(6)=2,1*'$VAR'(2)+ -1*'$VAR'(5)=1,1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(8)>=1,1*'$VAR'(9)>=1])
,input_eq('10_normal'('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),10,cost([],[],[],[],0),['7'('$VAR'(6),'$VAR'(7),'$VAR'(8))],[-1*'$VAR'(6)+1*'$VAR'(2)=0,-1*'$VAR'(7)+1*'$VAR'(3)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(fibonacciMethod('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header('2'('$VAR'(0)))
,ground_equation_header('3'('$VAR'(0)))
,ground_equation_header(fibonacciMethod('$VAR'(0)))
,ground_equation_header('pubs/Fibonacci_fibonacciMethod(I)I'('$VAR'(0)))
,ground_equation_header('4'('$VAR'(0),'$VAR'(1)))
,ground_equation_header('6'('$VAR'(0),'$VAR'(1)))
,ground_equation_header('7'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('8'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('9_normal'('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header('10_normal'('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(conditional_lbs,[])
,param(context_sensitive,[1])
,param(input,['../examples/examplesPUBS/jvm-cost/FibonacciNew.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-fibonacciMethod/1,'10_normal'/4-'7'/3,'2'/1-'9_normal'/3,'2'/1-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'3'/1-'6'/2,'4'/2-'10_normal'/4,'4'/2-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'7'/3-'6'/2,'8'/3-'2'/1,'8'/3-'3'/1,'9_normal'/3-'4'/2,fibonacciMethod/1-'8'/3,'pubs/Fibonacci_fibonacciMethod(I)I'/1-'8'/3])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,['6'/2],[],['6'/2],[])
,crs_scc(1,non_recursive,['7'/3],[],['7'/3],[])
,crs_scc(2,non_recursive,['10_normal'/4],[],['10_normal'/4],[])
,crs_scc(3,non_recursive,['3'/1],[],['3'/1],[])
,crs_scc(4,recursive,['2'/1,'4'/2,'8'/3,'9_normal'/3,'pubs/Fibonacci_fibonacciMethod(I)I'/1],['8'/3-'2'/1,'9_normal'/3-'4'/2,'pubs/Fibonacci_fibonacciMethod(I)I'/1-'8'/3,'2'/1-'9_normal'/3,'2'/1-'pubs/Fibonacci_fibonacciMethod(I)I'/1,'4'/2-'pubs/Fibonacci_fibonacciMethod(I)I'/1],['8'/3],[non_tail,multiple])
,crs_scc(5,non_recursive,[fibonacciMethod/1],[],[fibonacciMethod/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(fibonacciMethod('$VAR'(2)),(1,0),cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[],['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(5)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(4)+1*'$VAR'(2)=0],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(1,1),cost([],[],[],[],3),['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[],['8'('$VAR'(3),'$VAR'(4),'$VAR'(5))],[1*'$VAR'(2)+ -1*'$VAR'(4)=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(5)=1],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(6,2),cost([],[],[],[],3),[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([5]))],[],[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([5]))],[1*'$VAR'(5)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(4)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1],terminating)
,eq_ph(fibonacciMethod('$VAR'(2)),(7,2),cost([],[],[],[],3),[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([multiple([4],[[5]])]))],[],[('8'('$VAR'(3),'$VAR'(4),'$VAR'(5)),chain([multiple([4],[[5]])]))],[1*'$VAR'(5)=1,-1*'$VAR'(2)+1*'$VAR'(4)=0,-1*'$VAR'(3)+1*'$VAR'(4)=0,1*'$VAR'(4)>=2],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(8)= -2,-1*'$VAR'(5)+1*'$VAR'(8)= -1,-1*'$VAR'(6)+1*'$VAR'(8)= -1,-1*'$VAR'(9)+1*'$VAR'(8)=0,-1*'$VAR'(4)+1*'$VAR'(3)>=1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(8)+ -1*'$VAR'(9)=0,1*'$VAR'(8)+ -1*'$VAR'(6)= -1,1*'$VAR'(8)+ -1*'$VAR'(5)= -1,1*'$VAR'(2)+ -1*'$VAR'(8)=2,1*'$VAR'(10)=1,1*'$VAR'(7)=1,1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,0),cost([],[],[],[],2),[],[],[],[-1*'$VAR'(3)+1*'$VAR'(4)>=0],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,1),cost([],[],[],[],2),[],[],[],[1*'$VAR'(4)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(4,2),cost([],[],[],[],2),[],[],[],[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1],terminating)
,eq_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(5,2),cost([],[],[],[],16),[],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(4)=1,1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(5)+1*'$VAR'(3)=1,-1*'$VAR'(6)+1*'$VAR'(3)=1,-1*'$VAR'(8)+1*'$VAR'(3)=2,-1*'$VAR'(9)+1*'$VAR'(3)=2,1*'$VAR'(3)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(fibonacciMethod('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(fibonacciMethod('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=2],[7],terminating)
,loop_ph(fibonacciMethod('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>= -1],[6],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[-1*'$VAR'(3)+1*'$VAR'(4)>=0],[3],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(3,0),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(2)+1*'$VAR'(8)= -2,-1*'$VAR'(5)+1*'$VAR'(8)= -1,-1*'$VAR'(6)+1*'$VAR'(8)= -1,-1*'$VAR'(9)+1*'$VAR'(8)=0,-1*'$VAR'(4)+1*'$VAR'(3)>=1],[2],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(4,2),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],[1*'$VAR'(4)=1,1*'$VAR'(7)=1,1*'$VAR'(10)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(5)+1*'$VAR'(2)=1,-1*'$VAR'(6)+1*'$VAR'(2)=1,-1*'$VAR'(8)+1*'$VAR'(2)=2,-1*'$VAR'(9)+1*'$VAR'(2)=2,1*'$VAR'(2)>=2],[5],terminating)
,loop_ph('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),(5,2),[],[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(2)>= -1],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([3],0,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(3)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(6)>=1,-1*'$VAR'(2)+1*'$VAR'(6)>= -2,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(7)=1])
,phase_loop([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(6)>=1,-1*'$VAR'(2)+1*'$VAR'(6)>= -2,1*'$VAR'(4)=1,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(7)=1])
]
)
,predicateRes(chain/3,
[chain(fibonacciMethod('$VAR'(2)),0,[1])
,chain(fibonacciMethod('$VAR'(2)),2,[6])
,chain(fibonacciMethod('$VAR'(2)),2,[7])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[multiple([3],[[],[2]])])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[5])
,chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[multiple([4],[[5]])])
]
)
,predicateRes(phase/3,
[phase(1,fibonacciMethod('$VAR'(2)),0)
,phase(2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(5,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(6,fibonacciMethod('$VAR'(2)),2)
,phase(7,fibonacciMethod('$VAR'(2)),2)
,phase([3],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase([4],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(fibonacciMethod('$VAR'(2)),([6],2),8201273,[1*'$VAR'(2)>=2])
,backward_invariant(fibonacciMethod('$VAR'(2)),([7],2),12137574,[-1*'$VAR'(2)>= -1])
,backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5],2),9795318,[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>= -1])
,backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([multiple([4],[[5]])],2),12712732,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),multiple([4],[[5]]),[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(fibonacciMethod('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(fibonacciMethod('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(fibonacciMethod('$VAR'(2)),([7],2),11527763,[])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2,[3]],0),8870909,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,1*'$VAR'(2)>=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5],2),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([5,[4]],2),13475191,[1*'$VAR'(4)=1,-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([[3]],0),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
,forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),([[4]],2),2987667,[1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(fibonacciMethod('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(fibonacciMethod('$VAR'(2)),7,[])
,context_insensitive_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0])
,context_insensitive_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[4],[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(fibonacciMethod('$VAR'(2)),0,[])
,scc_forward_invariant('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)>=2,1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(4)=1,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(7)=1])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),[1*'$VAR'(2)+ -1*'$VAR'(6)>=0,1*'$VAR'(6)>=0,1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(6)=0,1*'$VAR'(4)=1,1*'$VAR'(7)=1])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:1],[('$VAR'(2),1)]+ -1,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:1],[('$VAR'(3),1)]+ -1,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:2],[('$VAR'(2),1/2)]+ -1/2,[],[])
,partial_ranking_function('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),'$VAR'(5),[4],[4:2],[('$VAR'(3),1/2)]+ -1/2,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(fibonacciMethod('$VAR'(2)),[6],yes,trivial)
,termination_argument(fibonacciMethod('$VAR'(2)),[7],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5,[4]],yes,trivial)
,termination_argument('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[multiple([3],[[],[2]])])
,non_terminating_chain('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[multiple([4],[[],[5]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[5]])],'8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],cost([],[],[],[(it(4),16),(it([5]),2)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(fibonacciMethod('$VAR'(2)),[],(0,[]),6,cost([],[],[],[(s(1),18)],3))
,loop_cost(fibonacciMethod('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],5))
,loop_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0]),5,cost([],[],[],[],2))
,loop_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),['8'('$VAR'(5),'$VAR'(6),'$VAR'(7)),'8'('$VAR'(8),'$VAR'(9),'$VAR'(10))],(0,[1*'$VAR'(10)=1,1*'$VAR'(9)+ -1*'$VAR'(8)=0,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1,1*'$VAR'(6)+ -1*'$VAR'(5)=0,1*'$VAR'(7)=1]),4,cost([],[],[],[],16))
]
)
,predicateRes(chain_cost/5,
[chain_cost(fibonacciMethod('$VAR'(2)),[6],(0,[]),cost([],[],[],[(s(1),18)],3),[1*'$VAR'(2)>=2])
,chain_cost(fibonacciMethod('$VAR'(2)),[7],(0,[]),cost([],[],[],[],5),[-1*'$VAR'(2)>= -1])
,chain_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],(0,[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0]),cost([],[],[],[],2),[1*'$VAR'(4)=1,1*'$VAR'(2)+ -1*'$VAR'(3)=0,1*'$VAR'(4)=1,-1*'$VAR'(3)+1*'$VAR'(2)=0,-1*'$VAR'(2)>= -1])
,chain_cost('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[multiple([4],[[5]])],(0,[1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1]),cost([],[],[],[(it(4),16),(it([5]),2)],0),[1*'$VAR'(2)>=2,1*'$VAR'(3)+ -1*'$VAR'(2)=0,1*'$VAR'(4)=1,1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(2)=0])
]
)
,predicateRes(upper_bound/4,
[upper_bound(fibonacciMethod('$VAR'(2)),[6],10192945,cost([],[],[],[(s(1),18)],3))
,upper_bound(fibonacciMethod('$VAR'(2)),[7],609637,cost([],[],[],[],5))
,upper_bound('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[5],5787060,cost([],[],[],[],2))
,upper_bound('8'('$VAR'(2),'$VAR'(3),'$VAR'(4)),[multiple([4],[[5]])],15622205,cost([],[],[],[(it(4),16),(it([5]),2)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(fibonacciMethod('$VAR'(2)),[6],min([add([mult([],3)])]))
,closed_lower_bound(fibonacciMethod('$VAR'(2)),[7],min([add([mult([],5)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(fibonacciMethod('$VAR'(2)),(inf,3),[[1*'$VAR'(2)>=2]])
,conditional_bound(fibonacciMethod('$VAR'(2)),(inf,5),[[-1*'$VAR'(2)>= -1]])
]
)
]
)
]
,none).


