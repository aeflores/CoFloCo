result(default,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4))],[])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(7,11915817),cost([],[],[],[],3),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(8,8687955),cost([],[],[],[],6),[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,input_eq(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,cost([],[],[],[],4),[sizeL('$VAR'(5),'$VAR'(6)),case_2('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],[-1*'$VAR'(3)+1*'$VAR'(10)= -1,-1*'$VAR'(7)+1*'$VAR'(6)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0,-1*'$VAR'(2)+1*'$VAR'(5)+1*'$VAR'(9)=0,1*'$VAR'(5)>=1,1*'$VAR'(9)>=0,1*'$VAR'(10)>=1])
,input_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),6,cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0])
,input_eq(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),4,cost([],[],[],[],2),[],[-1*'$VAR'(3)+1*'$VAR'(2)>=1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(case_0('$VAR'(0),'$VAR'(1)))
,ground_equation_header(neg('$VAR'(0),'$VAR'(1)))
,ground_equation_header(sizeL('$VAR'(0),'$VAR'(1)))
,ground_equation_header(and_op('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_1('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(check_lists('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(eq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(geq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(gt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(leq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(lt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(maxNorm('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(neq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(or('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_2('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[input_output_vars(case_0('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(neg('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(sizeL('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(and_op('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(eq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(geq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(gt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(leq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(lt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(maxNorm('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(neq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(or('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),['$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)],[])
]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/check_lists.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-check_lists/3,case_0/2-sizeL/2,case_1/3-case_2/4,case_1/3-sizeL/2,check_lists/3-case_1/3,sizeL/2-case_0/2])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[case_2/4],[],[case_2/4],[])
,crs_scc(1,recursive,[case_0/2,sizeL/2],[sizeL/2-case_0/2,case_0/2-sizeL/2],[sizeL/2],[])
,crs_scc(2,non_recursive,[case_1/3],[],[case_1/3],[])
,crs_scc(3,non_recursive,[check_lists/3],[],[check_lists/3],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,1),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(5)+ -1*'$VAR'(3)= -1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,1),cost([],[],[],[],3),[],[],[],[1*'$VAR'(3)=0,1*'$VAR'(2)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(3)+1*'$VAR'(5)= -1,1*'$VAR'(4)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[1*'$VAR'(3)>=2,1*'$VAR'(5)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(5)+1*'$VAR'(2)>=0],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)>=0,-1*'$VAR'(4)+1*'$VAR'(6)>=1,1*'$VAR'(5)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),chain([[5],6]))],[],[(sizeL('$VAR'(5),'$VAR'(6)),chain([[5],6]))],[-1*'$VAR'(5)+1*'$VAR'(6)= -1,1*'$VAR'(3)>=2,1*'$VAR'(6)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(6)+1*'$VAR'(2)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),chain([6]))],[],[(sizeL('$VAR'(5),'$VAR'(6)),chain([6]))],[1*'$VAR'(5)=1,1*'$VAR'(6)=0,-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,1),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[1*'$VAR'(7)+ -1*'$VAR'(4)=0,1*'$VAR'(6)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([8]))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([8]))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,-1*'$VAR'(7)>=1,1*'$VAR'(5)>=1,1*'$VAR'(6)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([7]))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([7]))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,1*'$VAR'(5)>=2,1*'$VAR'(6)>=2,-1*'$VAR'(7)+1*'$VAR'(5)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,9)
,eq_refined(1,10)
,eq_refined(2,7)
,eq_refined(2,8)
,eq_refined(3,6)
,eq_refined(4,5)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
,eq_refined(none,4)
]
)
,predicateRes(loop_ph/6,
[loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[4],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[3],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[6],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[5],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[2],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[7],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[8],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),[],[],[1],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[10],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[9],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([4],0,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,phase_loop([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
]
)
,predicateRes(chain/3,
[chain(sizeL('$VAR'(2),'$VAR'(3)),0,[3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4],3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[6])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5],6])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[7])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[8])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[9])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[10])
]
)
,predicateRes(phase/3,
[phase(1,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(2,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(3,sizeL('$VAR'(2),'$VAR'(3)),0)
,phase(6,sizeL('$VAR'(2),'$VAR'(3)),2)
,phase(7,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(8,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(9,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(10,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase([4],sizeL('$VAR'(2),'$VAR'(3)),0)
,phase([5],sizeL('$VAR'(2),'$VAR'(3)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),7904653,[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5],6],2),10818448,[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3,[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6,[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([1],0),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),6,[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),7,[])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),8,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),9,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),10,[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),0,[1*'$VAR'(2)>=1])
,scc_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
,scc_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(5)=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(4)+ -1*'$VAR'(3)+1*'$VAR'(5)=0])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[5:1],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6,[5]],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[[5]],yes,[([5],rf([('$VAR'(2),1)]+ -1))])
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],yes,trivial)
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],yes,trivial)
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],cost([bound(ub,[('$VAR'(2),1)]+ -1,[it(5)]),bound(ub,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[bound(lb,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[],[(it(5),6)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[],(0,[1*'$VAR'(2)>=1]),6,cost([],[],[],[],3))
,loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],(0,[1*'$VAR'(5)+ -1*'$VAR'(4)= -1,1*'$VAR'(5)>=0,1*'$VAR'(2)>=1]),5,cost([],[],[],[],6))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),7,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),8,cost([],[],[],[],9))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),9,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),10,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[6],(0,[1*'$VAR'(2)>=1]),cost([],[],[],[],3),[1*'$VAR'(2)>=1,1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],(0,[1*'$VAR'(2)>=1]),cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],(0,[]),cost([],[],[],[],9),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],(0,[]),cost([],[],[],[],10),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[6],7698625,cost([],[],[],[],3))
,upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],4019206,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],8862123,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],10520291,cost([],[],[],[],9))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],8016486,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],6758006,cost([],[],[],[],10))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],max([add([mult([],10),mult([nat('$VAR'(2)-1)],6)])]))
,closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],max([add([mult([],10)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],min([add([mult([],10),mult([nat('$VAR'(4)+1)],6)])]))
,closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],min([add([mult([],10)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[single_closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),6*'$VAR'(2)+4)
]
)
,predicateRes(conditional_bound/3,
[]
)
]
)
]
,none).


result(complete,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4))],[])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(7,11915817),cost([],[],[],[],3),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(8,8687955),cost([],[],[],[],6),[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,input_eq(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,cost([],[],[],[],4),[sizeL('$VAR'(5),'$VAR'(6)),case_2('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],[-1*'$VAR'(3)+1*'$VAR'(10)= -1,-1*'$VAR'(7)+1*'$VAR'(6)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0,-1*'$VAR'(2)+1*'$VAR'(5)+1*'$VAR'(9)=0,1*'$VAR'(5)>=1,1*'$VAR'(9)>=0,1*'$VAR'(10)>=1])
,input_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),6,cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0])
,input_eq(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),4,cost([],[],[],[],2),[],[-1*'$VAR'(3)+1*'$VAR'(2)>=1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(case_0('$VAR'(0),'$VAR'(1)))
,ground_equation_header(neg('$VAR'(0),'$VAR'(1)))
,ground_equation_header(sizeL('$VAR'(0),'$VAR'(1)))
,ground_equation_header(and_op('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_1('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(check_lists('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(eq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(geq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(gt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(leq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(lt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(maxNorm('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(neq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(or('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_2('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[input_output_vars(case_0('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(neg('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(sizeL('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(and_op('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(eq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(geq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(gt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(leq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(lt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(maxNorm('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(neq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(or('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),['$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)],[])
]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(debug,[])
,param(input,['../examples/testing/check_lists.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[3])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-check_lists/3,case_0/2-sizeL/2,case_1/3-case_2/4,case_1/3-sizeL/2,check_lists/3-case_1/3,sizeL/2-case_0/2])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[case_2/4],[],[case_2/4],[])
,crs_scc(1,recursive,[case_0/2,sizeL/2],[sizeL/2-case_0/2,case_0/2-sizeL/2],[sizeL/2],[])
,crs_scc(2,non_recursive,[case_1/3],[],[case_1/3],[])
,crs_scc(3,non_recursive,[check_lists/3],[],[check_lists/3],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,1),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(5)+ -1*'$VAR'(3)= -1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,1),cost([],[],[],[],3),[],[],[],[1*'$VAR'(3)=0,1*'$VAR'(2)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(3)+1*'$VAR'(5)= -1,1*'$VAR'(4)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[1*'$VAR'(3)>=2,1*'$VAR'(5)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(5)+1*'$VAR'(2)>=0],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)>=0,-1*'$VAR'(4)+1*'$VAR'(6)>=1,1*'$VAR'(5)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),chain([[5],6]))],[],[(sizeL('$VAR'(5),'$VAR'(6)),chain([[5],6]))],[-1*'$VAR'(5)+1*'$VAR'(6)= -1,1*'$VAR'(3)>=2,1*'$VAR'(6)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(6)+1*'$VAR'(2)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),chain([6]))],[],[(sizeL('$VAR'(5),'$VAR'(6)),chain([6]))],[1*'$VAR'(5)=1,1*'$VAR'(6)=0,-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,1),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[1*'$VAR'(7)+ -1*'$VAR'(4)=0,1*'$VAR'(6)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([8]))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([8]))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,-1*'$VAR'(7)>=1,1*'$VAR'(5)>=1,1*'$VAR'(6)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([7]))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),chain([7]))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,1*'$VAR'(5)>=2,1*'$VAR'(6)>=2,-1*'$VAR'(7)+1*'$VAR'(5)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,9)
,eq_refined(1,10)
,eq_refined(2,7)
,eq_refined(2,8)
,eq_refined(3,6)
,eq_refined(4,5)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
,eq_refined(none,4)
]
)
,predicateRes(loop_ph/6,
[loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[4],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[3],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[6],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[5],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[2],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[7],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[8],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),[],[],[1],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[10],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[9],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([4],0,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,phase_loop([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
]
)
,predicateRes(chain/3,
[chain(sizeL('$VAR'(2),'$VAR'(3)),0,[3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4],3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[6])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5],6])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[7])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[8])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[9])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[10])
]
)
,predicateRes(phase/3,
[phase(1,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(2,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(3,sizeL('$VAR'(2),'$VAR'(3)),0)
,phase(6,sizeL('$VAR'(2),'$VAR'(3)),2)
,phase(7,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(8,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(9,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(10,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase([4],sizeL('$VAR'(2),'$VAR'(3)),0)
,phase([5],sizeL('$VAR'(2),'$VAR'(3)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),7904653,[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5],6],2),10818448,[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3,[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6,[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([1],0),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),6,[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),7,[])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),8,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),9,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),10,[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),0,[1*'$VAR'(2)>=1])
,scc_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
,scc_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(5)=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(4)+ -1*'$VAR'(3)+1*'$VAR'(5)=0])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[5:1],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6,[5]],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[[5]],yes,[([5],rf([('$VAR'(2),1)]+ -1))])
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],yes,trivial)
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],yes,trivial)
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],cost([bound(ub,[('$VAR'(2),1)]+ -1,[it(5)]),bound(ub,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[bound(lb,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[],[(it(5),6)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[],(0,[1*'$VAR'(2)>=1]),6,cost([],[],[],[],3))
,loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],(0,[1*'$VAR'(5)+ -1*'$VAR'(4)= -1,1*'$VAR'(5)>=0,1*'$VAR'(2)>=1]),5,cost([],[],[],[],6))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),7,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),8,cost([],[],[],[],9))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),9,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),10,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[6],(0,[1*'$VAR'(2)>=1]),cost([],[],[],[],3),[1*'$VAR'(2)>=1,1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],(0,[1*'$VAR'(2)>=1]),cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],(0,[]),cost([],[],[],[],9),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],(0,[]),cost([],[],[],[],10),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[6],7698625,cost([],[],[],[],3))
,upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],4019206,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],8862123,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],10520291,cost([],[],[],[],9))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],8016486,cost([bound(ub,[('$VAR'(2),1)]+ -1,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],6758006,cost([],[],[],[],10))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],max([add([mult([],10),mult([nat('$VAR'(2)-1)],6)])]))
,closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],max([add([mult([],10)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],min([add([mult([],10),mult([nat('$VAR'(4)+1)],6)])]))
,closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],min([add([mult([],10)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,10),[[1*'$VAR'(2)=1,-1*'$VAR'(4)>=1,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+4,10),[[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=2,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+4,6*'$VAR'(4)+16),[[1*'$VAR'(3)>=2,1*'$VAR'(4)>=0,-1*'$VAR'(4)+1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


result(completeCompress1,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4))],[])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(7,11915817),cost([],[],[],[],3),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(8,8687955),cost([],[],[],[],6),[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,input_eq(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,cost([],[],[],[],4),[sizeL('$VAR'(5),'$VAR'(6)),case_2('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],[-1*'$VAR'(3)+1*'$VAR'(10)= -1,-1*'$VAR'(7)+1*'$VAR'(6)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0,-1*'$VAR'(2)+1*'$VAR'(5)+1*'$VAR'(9)=0,1*'$VAR'(5)>=1,1*'$VAR'(9)>=0,1*'$VAR'(10)>=1])
,input_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),6,cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0])
,input_eq(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),4,cost([],[],[],[],2),[],[-1*'$VAR'(3)+1*'$VAR'(2)>=1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(case_0('$VAR'(0),'$VAR'(1)))
,ground_equation_header(neg('$VAR'(0),'$VAR'(1)))
,ground_equation_header(sizeL('$VAR'(0),'$VAR'(1)))
,ground_equation_header(and_op('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_1('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(check_lists('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(eq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(geq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(gt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(leq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(lt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(maxNorm('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(neq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(or('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_2('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[input_output_vars(case_0('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(neg('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(sizeL('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(and_op('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(eq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(geq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(gt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(leq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(lt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(maxNorm('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(neq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(or('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),['$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)],[])
]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[1])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/check_lists.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-check_lists/3,case_0/2-sizeL/2,case_1/3-case_2/4,case_1/3-sizeL/2,check_lists/3-case_1/3,sizeL/2-case_0/2])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[case_2/4],[],[case_2/4],[])
,crs_scc(1,recursive,[case_0/2,sizeL/2],[sizeL/2-case_0/2,case_0/2-sizeL/2],[sizeL/2],[])
,crs_scc(2,non_recursive,[case_1/3],[],[case_1/3],[])
,crs_scc(3,non_recursive,[check_lists/3],[],[check_lists/3],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,1),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(5)+ -1*'$VAR'(3)= -1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,1),cost([],[],[],[],3),[],[],[],[1*'$VAR'(3)=0,1*'$VAR'(2)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(3)+1*'$VAR'(5)= -1,1*'$VAR'(4)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[1*'$VAR'(3)>=2,1*'$VAR'(5)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(5)+1*'$VAR'(2)>=0],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)>=0,-1*'$VAR'(4)+1*'$VAR'(6)>=1,1*'$VAR'(5)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(1))],[],[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(1))],[1*'$VAR'(5)=1,1*'$VAR'(6)=0,-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(2))],[],[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(2))],[-1*'$VAR'(5)+1*'$VAR'(6)= -1,1*'$VAR'(3)>=2,1*'$VAR'(6)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(6)+1*'$VAR'(2)>=1],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,1),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[1*'$VAR'(7)+ -1*'$VAR'(4)=0,1*'$VAR'(6)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(1))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(1))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,-1*'$VAR'(7)>=1,1*'$VAR'(5)>=1,1*'$VAR'(6)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(2))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(2))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,1*'$VAR'(5)>=2,1*'$VAR'(6)>=2,-1*'$VAR'(7)+1*'$VAR'(5)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,9)
,eq_refined(1,10)
,eq_refined(2,7)
,eq_refined(2,8)
,eq_refined(3,6)
,eq_refined(4,5)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
,eq_refined(none,4)
]
)
,predicateRes(loop_ph/6,
[loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[4],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[3],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[6],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[5],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[2],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[8],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[7],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),[],[],[1],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[10],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[9],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([4],0,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,phase_loop([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
]
)
,predicateRes(chain/3,
[chain(sizeL('$VAR'(2),'$VAR'(3)),0,[3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4],3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[6])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5],6])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[7])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[8])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[9])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[10])
]
)
,predicateRes(phase/3,
[phase(1,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(2,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(3,sizeL('$VAR'(2),'$VAR'(3)),0)
,phase(6,sizeL('$VAR'(2),'$VAR'(3)),2)
,phase(7,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(8,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(9,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(10,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase([4],sizeL('$VAR'(2),'$VAR'(3)),0)
,phase([5],sizeL('$VAR'(2),'$VAR'(3)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),7904653,[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5],6],2),10818448,[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3,[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6,[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([1],0),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),6,[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),7,[])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),8,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),9,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),10,[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),0,[1*'$VAR'(2)>=1])
,scc_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
,scc_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(5)=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(4)+ -1*'$VAR'(3)+1*'$VAR'(5)=0])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(sizeL('$VAR'(2),'$VAR'(3)),(1,2),terminating,[[6]],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,external_call_pattern(sizeL('$VAR'(2),'$VAR'(3)),(2,2),terminating,[[[5],6]],[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,external_call_pattern(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,2),terminating,[[8]],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,external_call_pattern(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,2),terminating,[[7]],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,external_call_pattern(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,2),terminating,[[10]],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,external_call_pattern(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,2),terminating,[[9]],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[5:1],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6,[5]],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[[5]],yes,[([5],rf([('$VAR'(2),1)]+ -1))])
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],yes,trivial)
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],yes,trivial)
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],cost([bound(ub,[('$VAR'(2),1)]+0,[it(5)]),bound(ub,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[bound(lb,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[],[(it(5),6)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[],(0,[1*'$VAR'(2)>=1]),6,cost([],[],[],[],3))
,loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],(0,[1*'$VAR'(5)+ -1*'$VAR'(4)= -1,1*'$VAR'(5)>=0,1*'$VAR'(2)>=1]),5,cost([],[],[],[],6))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),7,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),8,cost([],[],[],[],9))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),9,cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),10,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[6],(0,[1*'$VAR'(2)>=1]),cost([],[],[],[],3),[1*'$VAR'(2)>=1,1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],(0,[1*'$VAR'(2)>=1]),cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],(0,[]),cost([],[],[],[],9),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],(0,[]),cost([],[],[],[],10),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[6],7698625,cost([],[],[],[],3))
,upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],4019206,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],2191003,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],10520291,cost([],[],[],[],9))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],2609638,cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],6758006,cost([],[],[],[],10))
]
)
,predicateRes(external_upper_bound/3,
[external_upper_bound(sizeL('$VAR'(2),'$VAR'(3)),1,cost([],[],[],[],3))
,external_upper_bound(sizeL('$VAR'(2),'$VAR'(3)),2,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,external_upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),1,cost([],[],[],[],9))
,external_upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],max([add([mult([],10),mult([nat('$VAR'(2))],6)])]))
,closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],max([add([mult([],10)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],min([add([mult([],10),mult([nat('$VAR'(4)+1)],6)])]))
,closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],min([add([mult([],10)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,10),[[1*'$VAR'(2)=1,-1*'$VAR'(4)>=1,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+10,10),[[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=2,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+10,6*'$VAR'(4)+16),[[1*'$VAR'(3)>=2,1*'$VAR'(4)>=0,-1*'$VAR'(4)+1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


result(completeCompress2,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4))],[])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(7,11915817),cost([],[],[],[],3),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,input_eq(sizeL('$VAR'(2),'$VAR'(3)),(8,8687955),cost([],[],[],[],6),[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,input_eq(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),5,cost([],[],[],[],4),[sizeL('$VAR'(5),'$VAR'(6)),case_2('$VAR'(7),'$VAR'(8),'$VAR'(9),'$VAR'(10))],[-1*'$VAR'(3)+1*'$VAR'(10)= -1,-1*'$VAR'(7)+1*'$VAR'(6)=0,-1*'$VAR'(8)+1*'$VAR'(4)=0,-1*'$VAR'(2)+1*'$VAR'(5)+1*'$VAR'(9)=0,1*'$VAR'(5)>=1,1*'$VAR'(9)>=0,1*'$VAR'(10)>=1])
,input_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),6,cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0])
,input_eq(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),4,cost([],[],[],[],2),[],[-1*'$VAR'(3)+1*'$VAR'(2)>=1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(case_0('$VAR'(0),'$VAR'(1)))
,ground_equation_header(neg('$VAR'(0),'$VAR'(1)))
,ground_equation_header(sizeL('$VAR'(0),'$VAR'(1)))
,ground_equation_header(and_op('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_1('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(check_lists('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(eq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(geq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(gt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(leq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(lt('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(maxNorm('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(neq('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(or('$VAR'(0),'$VAR'(1),'$VAR'(2)))
,ground_equation_header(case_2('$VAR'(0),'$VAR'(1),'$VAR'(2),'$VAR'(3)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[input_output_vars(case_0('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(neg('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(sizeL('$VAR'(2),'$VAR'(3)),['$VAR'(2)],['$VAR'(3)])
,input_output_vars(and_op('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3),'$VAR'(4)],[])
,input_output_vars(eq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(geq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(gt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(leq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(lt('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(maxNorm('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(neq('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(or('$VAR'(2),'$VAR'(3),'$VAR'(4)),['$VAR'(2),'$VAR'(3)],['$VAR'(4)])
,input_output_vars(case_2('$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)),['$VAR'(2),'$VAR'(3),'$VAR'(4),'$VAR'(5)],[])
]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[2])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/check_lists.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-check_lists/3,case_0/2-sizeL/2,case_1/3-case_2/4,case_1/3-sizeL/2,check_lists/3-case_1/3,sizeL/2-case_0/2])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,non_recursive,[case_2/4],[],[case_2/4],[])
,crs_scc(1,recursive,[case_0/2,sizeL/2],[sizeL/2-case_0/2,case_0/2-sizeL/2],[sizeL/2],[])
,crs_scc(2,non_recursive,[case_1/3],[],[case_1/3],[])
,crs_scc(3,non_recursive,[check_lists/3],[],[check_lists/3],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,1),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[1*'$VAR'(4)>=1,1*'$VAR'(5)+ -1*'$VAR'(3)= -1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,1),cost([],[],[],[],3),[],[],[],[1*'$VAR'(3)=0,1*'$VAR'(2)=1,1*'$VAR'(2)>=1],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),cost([],[],[],[],3),[],[],[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],terminating)
,eq_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),cost([],[],[],[],6),[],[sizeL('$VAR'(4),'$VAR'(5))],[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(3)+1*'$VAR'(5)= -1,1*'$VAR'(4)>=1],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[1*'$VAR'(3)>=2,1*'$VAR'(5)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(5)+1*'$VAR'(2)>=0],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,1),cost([],[],[],[],6),[sizeL('$VAR'(5),'$VAR'(6))],[],[sizeL('$VAR'(5),'$VAR'(6))],[-1*'$VAR'(5)+1*'$VAR'(2)>=0,-1*'$VAR'(4)+1*'$VAR'(6)>=1,1*'$VAR'(5)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(1))],[],[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(1))],[1*'$VAR'(5)=1,1*'$VAR'(6)=0,-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],terminating)
,eq_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),cost([],[],[],[],6),[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(2))],[],[(sizeL('$VAR'(5),'$VAR'(6)),external_pattern(2))],[-1*'$VAR'(5)+1*'$VAR'(6)= -1,1*'$VAR'(3)>=2,1*'$VAR'(6)>=1,-1*'$VAR'(4)+1*'$VAR'(6)>=1,-1*'$VAR'(6)+1*'$VAR'(2)>=1],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[-1*'$VAR'(5)+1*'$VAR'(2)=0,-1*'$VAR'(6)+1*'$VAR'(3)=0,-1*'$VAR'(7)+1*'$VAR'(4)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,1),cost([],[],[],[],1),[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[],[case_1('$VAR'(5),'$VAR'(6),'$VAR'(7))],[1*'$VAR'(7)+ -1*'$VAR'(4)=0,1*'$VAR'(6)+ -1*'$VAR'(3)=0,1*'$VAR'(5)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(1))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(1))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,-1*'$VAR'(7)>=1,1*'$VAR'(5)>=1,1*'$VAR'(6)>=2],terminating)
,eq_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),cost([],[],[],[],1),[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(2))],[],[(case_1('$VAR'(5),'$VAR'(6),'$VAR'(7)),external_pattern(2))],[-1*'$VAR'(2)+1*'$VAR'(5)=0,-1*'$VAR'(3)+1*'$VAR'(6)=0,-1*'$VAR'(4)+1*'$VAR'(7)=0,1*'$VAR'(5)>=2,1*'$VAR'(6)>=2,-1*'$VAR'(7)+1*'$VAR'(5)>=2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,9)
,eq_refined(1,10)
,eq_refined(2,7)
,eq_refined(2,8)
,eq_refined(3,6)
,eq_refined(4,5)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
,eq_refined(none,4)
]
)
,predicateRes(loop_ph/6,
[loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(3,0),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[4],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(4,0),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[3],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(5,2),[sizeL('$VAR'(4),'$VAR'(5))],[-1*'$VAR'(2)+1*'$VAR'(4)= -1,-1*'$VAR'(5)+1*'$VAR'(3)=1,1*'$VAR'(4)>=1],[6],terminating)
,loop_ph(sizeL('$VAR'(2),'$VAR'(3)),(6,2),[],[1*'$VAR'(2)=1,1*'$VAR'(3)=0],[5],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,0),[],[1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[2],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(7,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[8],terminating)
,loop_ph(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(8,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[7],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,0),[],[],[1],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(9,2),[],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2],[10],terminating)
,loop_ph(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,2),[],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2],[9],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([4],0,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
,phase_loop([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(4)=1,1*'$VAR'(3)+ -1*'$VAR'(5)=1])
]
)
,predicateRes(chain/3,
[chain(sizeL('$VAR'(2),'$VAR'(3)),0,[3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4],3])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[6])
,chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5],6])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[2])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[7])
,chain(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[8])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[1])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[9])
,chain(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,[10])
]
)
,predicateRes(phase/3,
[phase(1,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(2,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0)
,phase(3,sizeL('$VAR'(2),'$VAR'(3)),0)
,phase(6,sizeL('$VAR'(2),'$VAR'(3)),2)
,phase(7,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(8,case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(9,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase(10,check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),2)
,phase([4],sizeL('$VAR'(2),'$VAR'(3)),0)
,phase([5],sizeL('$VAR'(2),'$VAR'(3)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),7904653,[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5],6],2),10818448,[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),728574,[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,backward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),4789610,[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([3,[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([6,[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[4]],0),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),([[5]],2),3857194,[1*'$VAR'(2)>=1])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([2],0),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([7],2),11527763,[])
,forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),([8],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([1],0),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([9],2),11527763,[])
,forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),([10],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),6,[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),[5],[1*'$VAR'(2)>=1])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),7,[])
,context_insensitive_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),8,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),9,[])
,context_insensitive_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),10,[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(sizeL('$VAR'(2),'$VAR'(3)),0,[1*'$VAR'(2)>=1])
,scc_forward_invariant(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
,scc_forward_invariant(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(5)=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,sizeL('$VAR'(2),'$VAR'(3)),sizeL('$VAR'(4),'$VAR'(5)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)+1*'$VAR'(5)>=1,1*'$VAR'(3)+ -1*'$VAR'(5)>=0,1*'$VAR'(2)+ -1*'$VAR'(4)+ -1*'$VAR'(3)+1*'$VAR'(5)=0])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(sizeL('$VAR'(2),'$VAR'(3)),(1,2),terminating,[[6]],[1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,external_call_pattern(sizeL('$VAR'(2),'$VAR'(3)),(2,2),terminating,[[[5],6]],[-1*'$VAR'(3)+1*'$VAR'(2)=1,1*'$VAR'(2)>=2])
,external_call_pattern(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,2),terminating,[[8]],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,external_call_pattern(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,2),terminating,[[7]],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,external_call_pattern(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(1,2),terminating,[[10]],[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,external_call_pattern(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(2,2),terminating,[[9]],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(sizeL('$VAR'(2),'$VAR'(3)),'$VAR'(4),[5],[5:1],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[6,[5]],yes,trivial)
,termination_argument(sizeL('$VAR'(2),'$VAR'(3)),[[5]],yes,[([5],rf([('$VAR'(2),1)]+ -1))])
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],yes,trivial)
,termination_argument(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],yes,trivial)
,termination_argument(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],yes,trivial)
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),0,[[4]])
,non_terminating_chain(sizeL('$VAR'(2),'$VAR'(3)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],cost([bound(ub,[('$VAR'(2),1)]+0,[it(5)]),bound(ub,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[bound(lb,[('$VAR'(2),1),('$VAR'(4),-1)]+0,[it(5)])],[],[(it(5),6)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[],(0,[1*'$VAR'(2)>=1]),6,cost([],[],[],[],3))
,loop_cost(sizeL('$VAR'(2),'$VAR'(3)),[sizeL('$VAR'(4),'$VAR'(5))],(0,[1*'$VAR'(5)+ -1*'$VAR'(4)= -1,1*'$VAR'(5)>=0,1*'$VAR'(2)>=1]),5,cost([],[],[],[],6))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),7,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,loop_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),8,cost([],[],[],[],9))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),9,cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,loop_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[],(0,[]),10,cost([],[],[],[],10))
]
)
,predicateRes(chain_cost/5,
[chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[6],(0,[1*'$VAR'(2)>=1]),cost([],[],[],[],3),[1*'$VAR'(2)>=1,1*'$VAR'(2)=1,1*'$VAR'(3)=0])
,chain_cost(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],(0,[1*'$VAR'(2)>=1]),cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)=1])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],(0,[]),cost([],[],[],[],9),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],(0,[]),cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10),[1*'$VAR'(2)>=2,1*'$VAR'(3)>=2,-1*'$VAR'(4)+1*'$VAR'(2)>=2])
,chain_cost(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],(0,[]),cost([],[],[],[],10),[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=1,1*'$VAR'(3)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[6],7698625,cost([],[],[],[],3))
,upper_bound(sizeL('$VAR'(2),'$VAR'(3)),[[5],6],4019206,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[7],2191003,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
,upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),[8],10520291,cost([],[],[],[],9))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],2609638,cost([bound(ub,[('$VAR'(2),1)]+0,[s(2)])],[bound(lb,[('$VAR'(4),1)]+1,[s(2)])],[],[(s(2),6)],10))
,upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],6758006,cost([],[],[],[],10))
]
)
,predicateRes(external_upper_bound/3,
[external_upper_bound(sizeL('$VAR'(2),'$VAR'(3)),1,cost([],[],[],[],3))
,external_upper_bound(sizeL('$VAR'(2),'$VAR'(3)),2,cost([bound(ub,[('$VAR'(3),1)]+0,[it(5)])],[bound(lb,[('$VAR'(3),1)]+0,[it(5)])],[],[(it(5),6)],3))
,external_upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),1,cost([],[],[],[],9))
,external_upper_bound(case_1('$VAR'(2),'$VAR'(3),'$VAR'(4)),2,cost([bound(ub,[('$VAR'(2),1)]+0,[s(1)])],[bound(lb,[('$VAR'(4),1)]+1,[s(1)])],[],[(s(1),6)],9))
]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],max([add([mult([],10),mult([nat('$VAR'(2))],6)])]))
,closed_upper_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],max([add([mult([],10)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[9],min([add([mult([],10),mult([nat('$VAR'(4)+1)],6)])]))
,closed_lower_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),[10],min([add([mult([],10)])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(10,10),[[1*'$VAR'(2)=1,-1*'$VAR'(4)>=1,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+10,10),[[-1*'$VAR'(4)>=1,1*'$VAR'(2)>=2,1*'$VAR'(3)>=2]])
,conditional_bound(check_lists('$VAR'(2),'$VAR'(3),'$VAR'(4)),(6*'$VAR'(2)+10,6*'$VAR'(4)+16),[[1*'$VAR'(3)>=2,1*'$VAR'(4)>=0,-1*'$VAR'(4)+1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


