result(default,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[m('$VAR'(2))],[])
,input_eq(m('$VAR'(2)),1,cost([],[],[],[],1),[],[-1*'$VAR'(2)>= -2])
,input_eq(m('$VAR'(2)),2,cost([],[],[],[],1),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(m('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/multiple_recursion/divide_bad.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-m/1,m/1-m/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[m/1],[m/1-m/1],[m/1],[multiple])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(m('$VAR'(2)),(1,0),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(1,1),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(2,0),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(2,1),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)>= -1,1*'$VAR'(2)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(4)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2],terminating)
,eq_ph(m('$VAR'(2)),(3,2),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(m('$VAR'(2)),(1,0),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[2],terminating)
,loop_ph(m('$VAR'(2)),(2,0),[],[-1*'$VAR'(2)>= -2],[1],terminating)
,loop_ph(m('$VAR'(2)),(3,2),[],[-1*'$VAR'(2)>= -2],[4],terminating)
,loop_ph(m('$VAR'(2)),(4,2),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
,phase_loop([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
]
)
,predicateRes(chain/3,
[chain(m('$VAR'(2)),0,[2])
,chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,chain(m('$VAR'(2)),2,[3])
,chain(m('$VAR'(2)),2,[multiple([4],[[3]])])
]
)
,predicateRes(phase/3,
[phase(2,m('$VAR'(2)),0)
,phase(3,m('$VAR'(2)),2)
,phase([1],m('$VAR'(2)),0)
,phase([4],m('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(m('$VAR'(2)),([3],2),16274275,[-1*'$VAR'(2)>= -2])
,backward_invariant(m('$VAR'(2)),([multiple([4],[[3]])],2),8201273,[1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(m('$VAR'(2)),multiple([4],[[3]]),[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(m('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([2,[1]],0),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(m('$VAR'(2)),([3,[4]],2),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(m('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(m('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(m('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(2)>=2])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[4:1,4:2],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(m('$VAR'(2)),[3],yes,trivial)
,termination_argument(m('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(m('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,non_terminating_chain(m('$VAR'(2)),2,[multiple([4],[[],[3]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[3]])],m('$VAR'(2)),[],cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(m('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],1))
,loop_cost(m('$VAR'(2)),[m('$VAR'(3)),m('$VAR'(4))],(0,[]),4,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(m('$VAR'(2)),[3],(0,[]),cost([],[],[],[],1),[-1*'$VAR'(2)>= -2])
,chain_cost(m('$VAR'(2)),[multiple([4],[[3]])],(0,[]),cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0),[1*'$VAR'(2)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(m('$VAR'(2)),[3],2265487,cost([],[],[],[],1))
,upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],8587959,cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(m('$VAR'(2)),[3],max([add([mult([],1)])]))
,closed_upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],max([add([mult([],1),mult([nat(2*'$VAR'(2)-3)],2)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(m('$VAR'(2)),[3],min([add([mult([],1)])]))
,closed_lower_bound(m('$VAR'(2)),[multiple([4],[[3]])],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[single_closed_upper_bound(m('$VAR'(2)),nat(2*'$VAR'(2)-3)*2+1)
]
)
,predicateRes(conditional_bound/3,
[]
)
]
)
]
,none).


result(complete,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[m('$VAR'(2))],[])
,input_eq(m('$VAR'(2)),1,cost([],[],[],[],1),[],[-1*'$VAR'(2)>= -2])
,input_eq(m('$VAR'(2)),2,cost([],[],[],[],1),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(m('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(debug,[])
,param(input,['../examples/testing/multiple_recursion/divide_bad.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[3])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-m/1,m/1-m/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[m/1],[m/1-m/1],[m/1],[multiple])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(m('$VAR'(2)),(1,0),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(1,1),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(2,0),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(2,1),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)>= -1,1*'$VAR'(2)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(4)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2],terminating)
,eq_ph(m('$VAR'(2)),(3,2),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(m('$VAR'(2)),(1,0),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[2],terminating)
,loop_ph(m('$VAR'(2)),(2,0),[],[-1*'$VAR'(2)>= -2],[1],terminating)
,loop_ph(m('$VAR'(2)),(3,2),[],[-1*'$VAR'(2)>= -2],[4],terminating)
,loop_ph(m('$VAR'(2)),(4,2),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
,phase_loop([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
]
)
,predicateRes(chain/3,
[chain(m('$VAR'(2)),0,[2])
,chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,chain(m('$VAR'(2)),2,[3])
,chain(m('$VAR'(2)),2,[multiple([4],[[3]])])
]
)
,predicateRes(phase/3,
[phase(2,m('$VAR'(2)),0)
,phase(3,m('$VAR'(2)),2)
,phase([1],m('$VAR'(2)),0)
,phase([4],m('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(m('$VAR'(2)),([3],2),16274275,[-1*'$VAR'(2)>= -2])
,backward_invariant(m('$VAR'(2)),([multiple([4],[[3]])],2),8201273,[1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(m('$VAR'(2)),multiple([4],[[3]]),[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(m('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([2,[1]],0),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(m('$VAR'(2)),([3,[4]],2),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(m('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(m('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(m('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(2)>=2])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[4:1,4:2],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(m('$VAR'(2)),[3],yes,trivial)
,termination_argument(m('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(m('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,non_terminating_chain(m('$VAR'(2)),2,[multiple([4],[[],[3]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[3]])],m('$VAR'(2)),[],cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(m('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],1))
,loop_cost(m('$VAR'(2)),[m('$VAR'(3)),m('$VAR'(4))],(0,[]),4,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(m('$VAR'(2)),[3],(0,[]),cost([],[],[],[],1),[-1*'$VAR'(2)>= -2])
,chain_cost(m('$VAR'(2)),[multiple([4],[[3]])],(0,[]),cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0),[1*'$VAR'(2)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(m('$VAR'(2)),[3],2265487,cost([],[],[],[],1))
,upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],8587959,cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+ -3,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(m('$VAR'(2)),[3],max([add([mult([],1)])]))
,closed_upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],max([add([mult([],1),mult([nat(2*'$VAR'(2)-3)],2)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(m('$VAR'(2)),[3],min([add([mult([],1)])]))
,closed_lower_bound(m('$VAR'(2)),[multiple([4],[[3]])],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(m('$VAR'(2)),(1,1),[[-1*'$VAR'(2)>= -1]])
,conditional_bound(m('$VAR'(2)),(4*'$VAR'(2)-5,0),[[1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


result(completeCompress1,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[m('$VAR'(2))],[])
,input_eq(m('$VAR'(2)),1,cost([],[],[],[],1),[],[-1*'$VAR'(2)>= -2])
,input_eq(m('$VAR'(2)),2,cost([],[],[],[],1),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(m('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[1])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/multiple_recursion/divide_bad.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-m/1,m/1-m/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[m/1],[m/1-m/1],[m/1],[multiple])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(m('$VAR'(2)),(1,0),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(1,1),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(2,0),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(2,1),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)>= -1,1*'$VAR'(2)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(4)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2],terminating)
,eq_ph(m('$VAR'(2)),(3,2),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(m('$VAR'(2)),(1,0),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[2],terminating)
,loop_ph(m('$VAR'(2)),(2,0),[],[-1*'$VAR'(2)>= -2],[1],terminating)
,loop_ph(m('$VAR'(2)),(3,2),[],[-1*'$VAR'(2)>= -2],[4],terminating)
,loop_ph(m('$VAR'(2)),(4,2),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
,phase_loop([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
]
)
,predicateRes(chain/3,
[chain(m('$VAR'(2)),0,[2])
,chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,chain(m('$VAR'(2)),2,[3])
,chain(m('$VAR'(2)),2,[multiple([4],[[3]])])
]
)
,predicateRes(phase/3,
[phase(2,m('$VAR'(2)),0)
,phase(3,m('$VAR'(2)),2)
,phase([1],m('$VAR'(2)),0)
,phase([4],m('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(m('$VAR'(2)),([3],2),16274275,[-1*'$VAR'(2)>= -2])
,backward_invariant(m('$VAR'(2)),([multiple([4],[[3]])],2),8201273,[1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(m('$VAR'(2)),multiple([4],[[3]]),[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(m('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([2,[1]],0),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(m('$VAR'(2)),([3,[4]],2),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(m('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(m('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(m('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(2)>=2])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(m('$VAR'(2)),(1,2),terminating,[[3]],[-1*'$VAR'(2)>= -2])
,external_call_pattern(m('$VAR'(2)),(2,2),terminating,[[multiple([4],[[3]])]],[1*'$VAR'(2)>=2])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[4:1,4:2],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(m('$VAR'(2)),[3],yes,trivial)
,termination_argument(m('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(m('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,non_terminating_chain(m('$VAR'(2)),2,[multiple([4],[[],[3]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[3]])],m('$VAR'(2)),[],cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(m('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],1))
,loop_cost(m('$VAR'(2)),[m('$VAR'(3)),m('$VAR'(4))],(0,[]),4,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(m('$VAR'(2)),[3],(0,[]),cost([],[],[],[],1),[-1*'$VAR'(2)>= -2])
,chain_cost(m('$VAR'(2)),[multiple([4],[[3]])],(0,[]),cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0),[1*'$VAR'(2)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(m('$VAR'(2)),[3],2265487,cost([],[],[],[],1))
,upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],15774142,cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(m('$VAR'(2)),[3],max([add([mult([],1)])]))
,closed_upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],max([add([mult([],1),mult([nat(2*'$VAR'(2))],2)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(m('$VAR'(2)),[3],min([add([mult([],1)])]))
,closed_lower_bound(m('$VAR'(2)),[multiple([4],[[3]])],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(m('$VAR'(2)),(1,1),[[-1*'$VAR'(2)>= -1]])
,conditional_bound(m('$VAR'(2)),(4*'$VAR'(2)+1,0),[[1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


result(completeCompress2,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[m('$VAR'(2))],[])
,input_eq(m('$VAR'(2)),1,cost([],[],[],[],1),[],[-1*'$VAR'(2)>= -2])
,input_eq(m('$VAR'(2)),2,cost([],[],[],[],1),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1])
]
)
,predicateRes(entry_eq/2,
[entry_eq(m('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(m('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[2])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/multiple_recursion/divide_bad.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-m/1,m/1-m/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[m/1],[m/1-m/1],[m/1],[multiple])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(m('$VAR'(2)),(1,0),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(1,1),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
,eq_ph(m('$VAR'(2)),(2,0),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(2,1),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)+ -1*'$VAR'(3)+ -1*'$VAR'(4)>= -1,1*'$VAR'(2)+ -1*'$VAR'(4)>=1,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(4)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2],terminating)
,eq_ph(m('$VAR'(2)),(3,2),cost([],[],[],[],1),[],[m('$VAR'(3)),m('$VAR'(4))],[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],terminating)
,eq_ph(m('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[],[],[-1*'$VAR'(2)>= -2],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,4)
,eq_refined(2,3)
,eq_refined(none,1)
,eq_refined(none,2)
]
)
,predicateRes(loop_ph/6,
[loop_ph(m('$VAR'(2)),(1,0),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[2],terminating)
,loop_ph(m('$VAR'(2)),(2,0),[],[-1*'$VAR'(2)>= -2],[1],terminating)
,loop_ph(m('$VAR'(2)),(3,2),[],[-1*'$VAR'(2)>= -2],[4],terminating)
,loop_ph(m('$VAR'(2)),(4,2),[m('$VAR'(3)),m('$VAR'(4))],[1*'$VAR'(2)>=2,1*'$VAR'(3)>=0,1*'$VAR'(4)>=0,-1*'$VAR'(3)+1*'$VAR'(2)>=1,-1*'$VAR'(4)+1*'$VAR'(2)>=1,-1*'$VAR'(3)+ -1*'$VAR'(4)+1*'$VAR'(2)>= -1],[3],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([1],0,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
,phase_loop([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)>=2,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(3)>=0])
]
)
,predicateRes(chain/3,
[chain(m('$VAR'(2)),0,[2])
,chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,chain(m('$VAR'(2)),2,[3])
,chain(m('$VAR'(2)),2,[multiple([4],[[3]])])
]
)
,predicateRes(phase/3,
[phase(2,m('$VAR'(2)),0)
,phase(3,m('$VAR'(2)),2)
,phase([1],m('$VAR'(2)),0)
,phase([4],m('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(m('$VAR'(2)),([3],2),16274275,[-1*'$VAR'(2)>= -2])
,backward_invariant(m('$VAR'(2)),([multiple([4],[[3]])],2),8201273,[1*'$VAR'(2)>=2])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(m('$VAR'(2)),multiple([4],[[3]]),[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(m('$VAR'(2)),([2],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([2,[1]],0),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([3],2),11527763,[])
,forward_invariant(m('$VAR'(2)),([3,[4]],2),7202650,[1*'$VAR'(2)>=0])
,forward_invariant(m('$VAR'(2)),([[1]],0),11527763,[])
,forward_invariant(m('$VAR'(2)),([[4]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(m('$VAR'(2)),3,[])
,context_insensitive_forward_invariant(m('$VAR'(2)),[4],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(m('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(3)>=0,1*'$VAR'(2)+ -1*'$VAR'(3)>=1,1*'$VAR'(2)>=2])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([4],2,m('$VAR'(2)),m('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(3)>=0,1*'$VAR'(2)>=2])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(m('$VAR'(2)),(1,2),terminating,[[3]],[-1*'$VAR'(2)>= -2])
,external_call_pattern(m('$VAR'(2)),(2,2),terminating,[[multiple([4],[[3]])]],[1*'$VAR'(2)>=2])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[('$VAR'(2),1)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(m('$VAR'(2)),'$VAR'(3),[4],[4:1,4:2],[('$VAR'(2),1)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(m('$VAR'(2)),[3],yes,trivial)
,termination_argument(m('$VAR'(2)),[3,[4]],yes,trivial)
,termination_argument(m('$VAR'(2)),[[4]],yes,[([4],rf([('$VAR'(2),1)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(m('$VAR'(2)),0,[multiple([1],[[],[2]])])
,non_terminating_chain(m('$VAR'(2)),2,[multiple([4],[[],[3]])])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([multiple([4],[[3]])],m('$VAR'(2)),[],cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(m('$VAR'(2)),[],(0,[]),3,cost([],[],[],[],1))
,loop_cost(m('$VAR'(2)),[m('$VAR'(3)),m('$VAR'(4))],(0,[]),4,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(m('$VAR'(2)),[3],(0,[]),cost([],[],[],[],1),[-1*'$VAR'(2)>= -2])
,chain_cost(m('$VAR'(2)),[multiple([4],[[3]])],(0,[]),cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0),[1*'$VAR'(2)>=2])
]
)
,predicateRes(upper_bound/4,
[upper_bound(m('$VAR'(2)),[3],2265487,cost([],[],[],[],1))
,upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],15774142,cost([bound(ub,[]+1,[aux(8)]),bound(ub,[('$VAR'(2),2)]+0,[aux(9)])],[],[bound(ub,exp([(aux(9),'$VAR'(3))],[],add([mult(['$VAR'(3)])]),add([])),[it(4)]),bound(ub,exp([(aux(8),'$VAR'(4)),(it(4),'$VAR'(5))],[],add([mult(['$VAR'(5)]),mult(['$VAR'(4)])]),add([])),[it([3])])],[(it(4),1),(it([3]),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(m('$VAR'(2)),[3],max([add([mult([],1)])]))
,closed_upper_bound(m('$VAR'(2)),[multiple([4],[[3]])],max([add([mult([],1),mult([nat(2*'$VAR'(2))],2)])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(m('$VAR'(2)),[3],min([add([mult([],1)])]))
,closed_lower_bound(m('$VAR'(2)),[multiple([4],[[3]])],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(m('$VAR'(2)),(1,1),[[-1*'$VAR'(2)>= -1]])
,conditional_bound(m('$VAR'(2)),(4*'$VAR'(2)+1,0),[[1*'$VAR'(2)>=2]])
]
)
]
)
]
,none).


