result(default,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[nested_loop('$VAR'(2))],[])
,input_eq(nested_loop('$VAR'(2)),1,cost([],[],[],[],0),[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(while_0('$VAR'(2)),2,cost([],[],[],[],0),[],[-1*'$VAR'(2)>=0])
,input_eq(while_0('$VAR'(2)),3,cost([],[],[],[],1),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(nested_loop('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(nested_loop('$VAR'(23)))
,ground_equation_header(while_0('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/log_ranking.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-nested_loop/1,nested_loop/1-while_0/1,while_0/1-while_0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[while_0/1],[while_0/1-while_0/1],[while_0/1],[])
,crs_scc(1,non_recursive,[nested_loop/1],[],[nested_loop/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(nested_loop('$VAR'(2)),(1,0),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(1,1),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(6,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),chain([[5],4]))],[],[(while_0('$VAR'(3)),chain([[5],4]))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=1],terminating)
,eq_ph(nested_loop('$VAR'(2)),(7,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),chain([4]))],[],[(while_0('$VAR'(3)),chain([4]))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,0),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,1),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,0),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,1),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(5,2),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(nested_loop('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(nested_loop('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=1],[6],terminating)
,loop_ph(nested_loop('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>=0],[7],terminating)
,loop_ph(while_0('$VAR'(2)),(2,0),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[3],terminating)
,loop_ph(while_0('$VAR'(2)),(3,0),[],[-1*'$VAR'(2)>=0],[2],terminating)
,loop_ph(while_0('$VAR'(2)),(4,2),[],[-1*'$VAR'(2)>=0],[5],terminating)
,loop_ph(while_0('$VAR'(2)),(5,2),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([2],0,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
,phase_loop([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(chain/3,
[chain(nested_loop('$VAR'(2)),0,[1])
,chain(nested_loop('$VAR'(2)),2,[6])
,chain(nested_loop('$VAR'(2)),2,[7])
,chain(while_0('$VAR'(2)),0,[3])
,chain(while_0('$VAR'(2)),0,[[2]])
,chain(while_0('$VAR'(2)),0,[[2],3])
,chain(while_0('$VAR'(2)),2,[4])
,chain(while_0('$VAR'(2)),2,[[5],4])
]
)
,predicateRes(phase/3,
[phase(1,nested_loop('$VAR'(2)),0)
,phase(3,while_0('$VAR'(2)),0)
,phase(4,while_0('$VAR'(2)),2)
,phase(6,nested_loop('$VAR'(2)),2)
,phase(7,nested_loop('$VAR'(2)),2)
,phase([2],while_0('$VAR'(2)),0)
,phase([5],while_0('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(nested_loop('$VAR'(2)),([6],2),3857194,[1*'$VAR'(2)>=1])
,backward_invariant(nested_loop('$VAR'(2)),([7],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([4],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([[5],4],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(nested_loop('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([7],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3,[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4,[5]],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[5]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(nested_loop('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(nested_loop('$VAR'(2)),7,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),4,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(nested_loop('$VAR'(2)),0,[])
,scc_forward_invariant(while_0('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(2)+ -2*'$VAR'(3)>=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[('$VAR'(2),2)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[5:1],[('$VAR'(2),2)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(nested_loop('$VAR'(2)),[6],yes,trivial)
,termination_argument(nested_loop('$VAR'(2)),[7],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4,[5]],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[[5]],yes,[([5],rf([('$VAR'(2),2)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(while_0('$VAR'(2)),0,[[2]])
,non_terminating_chain(while_0('$VAR'(2)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],while_0('$VAR'(2)),[while_0('$VAR'(3))],cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)]),bound(ub,[('$VAR'(2),2),('$VAR'(3),-2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(nested_loop('$VAR'(2)),[],(0,[]),6,cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0))
,loop_cost(nested_loop('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[],(0,[]),4,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[while_0('$VAR'(3))],(0,[]),5,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(nested_loop('$VAR'(2)),[6],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0),[1*'$VAR'(2)>=1])
,chain_cost(nested_loop('$VAR'(2)),[7],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[4],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[[5],4],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)])],[],[],[(it(5),1)],0),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(nested_loop('$VAR'(2)),[6],7252233,cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0))
,upper_bound(nested_loop('$VAR'(2)),[7],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[4],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[[5],4],11003515,cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(nested_loop('$VAR'(2)),[6],max([add([mult([nat(2*'$VAR'(2)-1)],1)])]))
,closed_upper_bound(nested_loop('$VAR'(2)),[7],max([add([])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(nested_loop('$VAR'(2)),[6],min([add([])]))
,closed_lower_bound(nested_loop('$VAR'(2)),[7],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[single_closed_upper_bound(nested_loop('$VAR'(2)),nat(2*'$VAR'(2)-1))
]
)
,predicateRes(conditional_bound/3,
[]
)
]
)
]
,none).


result(complete,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[nested_loop('$VAR'(2))],[])
,input_eq(nested_loop('$VAR'(2)),1,cost([],[],[],[],0),[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(while_0('$VAR'(2)),2,cost([],[],[],[],0),[],[-1*'$VAR'(2)>=0])
,input_eq(while_0('$VAR'(2)),3,cost([],[],[],[],1),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(nested_loop('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(nested_loop('$VAR'(23)))
,ground_equation_header(while_0('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(debug,[])
,param(input,['../examples/testing/log_ranking.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(v,[3])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-nested_loop/1,nested_loop/1-while_0/1,while_0/1-while_0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[while_0/1],[while_0/1-while_0/1],[while_0/1],[])
,crs_scc(1,non_recursive,[nested_loop/1],[],[nested_loop/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(nested_loop('$VAR'(2)),(1,0),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(1,1),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(6,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),chain([[5],4]))],[],[(while_0('$VAR'(3)),chain([[5],4]))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=1],terminating)
,eq_ph(nested_loop('$VAR'(2)),(7,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),chain([4]))],[],[(while_0('$VAR'(3)),chain([4]))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,0),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,1),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,0),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,1),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(5,2),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(nested_loop('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(nested_loop('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=1],[6],terminating)
,loop_ph(nested_loop('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>=0],[7],terminating)
,loop_ph(while_0('$VAR'(2)),(2,0),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[3],terminating)
,loop_ph(while_0('$VAR'(2)),(3,0),[],[-1*'$VAR'(2)>=0],[2],terminating)
,loop_ph(while_0('$VAR'(2)),(4,2),[],[-1*'$VAR'(2)>=0],[5],terminating)
,loop_ph(while_0('$VAR'(2)),(5,2),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([2],0,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
,phase_loop([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(chain/3,
[chain(nested_loop('$VAR'(2)),0,[1])
,chain(nested_loop('$VAR'(2)),2,[6])
,chain(nested_loop('$VAR'(2)),2,[7])
,chain(while_0('$VAR'(2)),0,[3])
,chain(while_0('$VAR'(2)),0,[[2]])
,chain(while_0('$VAR'(2)),0,[[2],3])
,chain(while_0('$VAR'(2)),2,[4])
,chain(while_0('$VAR'(2)),2,[[5],4])
]
)
,predicateRes(phase/3,
[phase(1,nested_loop('$VAR'(2)),0)
,phase(3,while_0('$VAR'(2)),0)
,phase(4,while_0('$VAR'(2)),2)
,phase(6,nested_loop('$VAR'(2)),2)
,phase(7,nested_loop('$VAR'(2)),2)
,phase([2],while_0('$VAR'(2)),0)
,phase([5],while_0('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(nested_loop('$VAR'(2)),([6],2),3857194,[1*'$VAR'(2)>=1])
,backward_invariant(nested_loop('$VAR'(2)),([7],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([4],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([[5],4],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(nested_loop('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([7],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3,[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4,[5]],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[5]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(nested_loop('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(nested_loop('$VAR'(2)),7,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),4,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(nested_loop('$VAR'(2)),0,[])
,scc_forward_invariant(while_0('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(2)+ -2*'$VAR'(3)>=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(external_call_pattern/5,
[]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[('$VAR'(2),2)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[5:1],[('$VAR'(2),2)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(nested_loop('$VAR'(2)),[6],yes,trivial)
,termination_argument(nested_loop('$VAR'(2)),[7],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4,[5]],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[[5]],yes,[([5],rf([('$VAR'(2),2)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(while_0('$VAR'(2)),0,[[2]])
,non_terminating_chain(while_0('$VAR'(2)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],while_0('$VAR'(2)),[while_0('$VAR'(3))],cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)]),bound(ub,[('$VAR'(2),2),('$VAR'(3),-2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(nested_loop('$VAR'(2)),[],(0,[]),6,cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0))
,loop_cost(nested_loop('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[],(0,[]),4,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[while_0('$VAR'(3))],(0,[]),5,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(nested_loop('$VAR'(2)),[6],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0),[1*'$VAR'(2)>=1])
,chain_cost(nested_loop('$VAR'(2)),[7],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[4],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[[5],4],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)])],[],[],[(it(5),1)],0),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(nested_loop('$VAR'(2)),[6],7252233,cost([bound(ub,[('$VAR'(2),2)]+ -1,[s(1)])],[],[],[(s(1),1)],0))
,upper_bound(nested_loop('$VAR'(2)),[7],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[4],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[[5],4],11003515,cost([bound(ub,[('$VAR'(2),2)]+ -1,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(nested_loop('$VAR'(2)),[6],max([add([mult([nat(2*'$VAR'(2)-1)],1)])]))
,closed_upper_bound(nested_loop('$VAR'(2)),[7],max([add([])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(nested_loop('$VAR'(2)),[6],min([add([])]))
,closed_lower_bound(nested_loop('$VAR'(2)),[7],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(nested_loop('$VAR'(2)),(0,0),[[-1*'$VAR'(2)>=0]])
,conditional_bound(nested_loop('$VAR'(2)),(2*'$VAR'(2)-1,0),[[1*'$VAR'(2)>=1]])
]
)
]
)
]
,none).


result(completeCompress1,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[nested_loop('$VAR'(2))],[])
,input_eq(nested_loop('$VAR'(2)),1,cost([],[],[],[],0),[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(while_0('$VAR'(2)),2,cost([],[],[],[],0),[],[-1*'$VAR'(2)>=0])
,input_eq(while_0('$VAR'(2)),3,cost([],[],[],[],1),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(nested_loop('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(nested_loop('$VAR'(23)))
,ground_equation_header(while_0('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[1])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/log_ranking.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-nested_loop/1,nested_loop/1-while_0/1,while_0/1-while_0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[while_0/1],[while_0/1-while_0/1],[while_0/1],[])
,crs_scc(1,non_recursive,[nested_loop/1],[],[nested_loop/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(nested_loop('$VAR'(2)),(1,0),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(1,1),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(6,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),external_pattern(1))],[],[(while_0('$VAR'(3)),external_pattern(1))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(7,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),external_pattern(2))],[],[(while_0('$VAR'(3)),external_pattern(2))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(2,0),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,1),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,0),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,1),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(5,2),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(nested_loop('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(nested_loop('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=1],[7],terminating)
,loop_ph(nested_loop('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>=0],[6],terminating)
,loop_ph(while_0('$VAR'(2)),(2,0),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[3],terminating)
,loop_ph(while_0('$VAR'(2)),(3,0),[],[-1*'$VAR'(2)>=0],[2],terminating)
,loop_ph(while_0('$VAR'(2)),(4,2),[],[-1*'$VAR'(2)>=0],[5],terminating)
,loop_ph(while_0('$VAR'(2)),(5,2),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([2],0,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
,phase_loop([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(chain/3,
[chain(nested_loop('$VAR'(2)),0,[1])
,chain(nested_loop('$VAR'(2)),2,[6])
,chain(nested_loop('$VAR'(2)),2,[7])
,chain(while_0('$VAR'(2)),0,[3])
,chain(while_0('$VAR'(2)),0,[[2]])
,chain(while_0('$VAR'(2)),0,[[2],3])
,chain(while_0('$VAR'(2)),2,[4])
,chain(while_0('$VAR'(2)),2,[[5],4])
]
)
,predicateRes(phase/3,
[phase(1,nested_loop('$VAR'(2)),0)
,phase(3,while_0('$VAR'(2)),0)
,phase(4,while_0('$VAR'(2)),2)
,phase(6,nested_loop('$VAR'(2)),2)
,phase(7,nested_loop('$VAR'(2)),2)
,phase([2],while_0('$VAR'(2)),0)
,phase([5],while_0('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(nested_loop('$VAR'(2)),([6],2),3857194,[1*'$VAR'(2)>=1])
,backward_invariant(nested_loop('$VAR'(2)),([7],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([4],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([[5],4],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(nested_loop('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([7],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3,[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4,[5]],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[5]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(nested_loop('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(nested_loop('$VAR'(2)),7,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),4,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(nested_loop('$VAR'(2)),0,[])
,scc_forward_invariant(while_0('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(2)+ -2*'$VAR'(3)>=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(nested_loop('$VAR'(2)),(1,2),terminating,[[7]],[-1*'$VAR'(2)>=0])
,external_call_pattern(nested_loop('$VAR'(2)),(2,2),terminating,[[6]],[1*'$VAR'(2)>=1])
,external_call_pattern(while_0('$VAR'(2)),(1,2),terminating,[[4]],[-1*'$VAR'(2)>=0])
,external_call_pattern(while_0('$VAR'(2)),(2,2),terminating,[[[5],4]],[1*'$VAR'(2)>=1])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[('$VAR'(2),2)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[5:1],[('$VAR'(2),2)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(nested_loop('$VAR'(2)),[6],yes,trivial)
,termination_argument(nested_loop('$VAR'(2)),[7],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4,[5]],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[[5]],yes,[([5],rf([('$VAR'(2),2)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(while_0('$VAR'(2)),0,[[2]])
,non_terminating_chain(while_0('$VAR'(2)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],while_0('$VAR'(2)),[while_0('$VAR'(3))],cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)]),bound(ub,[('$VAR'(2),2),('$VAR'(3),-2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(nested_loop('$VAR'(2)),[],(0,[]),6,cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0))
,loop_cost(nested_loop('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[],(0,[]),4,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[while_0('$VAR'(3))],(0,[]),5,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(nested_loop('$VAR'(2)),[6],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0),[1*'$VAR'(2)>=1])
,chain_cost(nested_loop('$VAR'(2)),[7],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[4],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[[5],4],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(nested_loop('$VAR'(2)),[6],5533375,cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0))
,upper_bound(nested_loop('$VAR'(2)),[7],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[4],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[[5],4],14145944,cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[external_upper_bound(while_0('$VAR'(2)),1,cost([],[],[],[],0))
,external_upper_bound(while_0('$VAR'(2)),2,cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(nested_loop('$VAR'(2)),[6],max([add([mult([nat(2*'$VAR'(2))],1)])]))
,closed_upper_bound(nested_loop('$VAR'(2)),[7],max([add([])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(nested_loop('$VAR'(2)),[6],min([add([])]))
,closed_lower_bound(nested_loop('$VAR'(2)),[7],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(nested_loop('$VAR'(2)),(0,0),[[-1*'$VAR'(2)>=0]])
,conditional_bound(nested_loop('$VAR'(2)),(2*'$VAR'(2),0),[[1*'$VAR'(2)>=1]])
]
)
]
)
]
,none).


result(completeCompress2,
[categoryRes(initial_problem,
[predicateRes(input_eq/5,
[input_eq('$cofloco_aux_entry$',0,cost([],[],[],[],0),[nested_loop('$VAR'(2))],[])
,input_eq(nested_loop('$VAR'(2)),1,cost([],[],[],[],0),[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0])
,input_eq(while_0('$VAR'(2)),2,cost([],[],[],[],0),[],[-1*'$VAR'(2)>=0])
,input_eq(while_0('$VAR'(2)),3,cost([],[],[],[],1),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0])
]
)
,predicateRes(entry_eq/2,
[entry_eq(nested_loop('$VAR'(2)),[])
]
)
,predicateRes(ground_equation_header/1,
[ground_equation_header(nested_loop('$VAR'(23)))
,ground_equation_header(while_0('$VAR'(23)))
]
)
,predicateRes(reset_scc/3,
[]
)
,predicateRes(input_output_vars/3,
[]
)
]
)
,categoryRes(parameters,
[predicateRes(param/2,
[param(compress_chains,[2])
,param(compute_lbs,[])
,param(compute_ubs,[])
,param(conditional_lbs,[])
,param(conditional_ubs,[])
,param(context_sensitive,[1])
,param(input,['../examples/testing/log_ranking.ces'])
,param(linear_phase_strategy,[mixed])
,param(n_candidates,[1])
,param(solve_fast,[])
,param(v,[2])
]
)
]
)
,categoryRes(preprocessing,
[predicateRes(crs_graph/1,
[crs_graph(['$cofloco_aux_entry$'/0-nested_loop/1,nested_loop/1-while_0/1,while_0/1-while_0/1])
]
)
,predicateRes(crs_scc/6,
[crs_scc(0,recursive,[while_0/1],[while_0/1-while_0/1],[while_0/1],[])
,crs_scc(1,non_recursive,[nested_loop/1],[],[nested_loop/1],[])
]
)
]
)
,categoryRes(refinement,
[predicateRes(eq_ph/8,
[eq_ph(nested_loop('$VAR'(2)),(1,0),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[-1*'$VAR'(3)+1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(1,1),cost([],[],[],[],0),[while_0('$VAR'(3))],[],[while_0('$VAR'(3))],[1*'$VAR'(3)+ -1*'$VAR'(2)=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(6,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),external_pattern(1))],[],[(while_0('$VAR'(3)),external_pattern(1))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,-1*'$VAR'(3)>=0],terminating)
,eq_ph(nested_loop('$VAR'(2)),(7,2),cost([],[],[],[],0),[(while_0('$VAR'(3)),external_pattern(2))],[],[(while_0('$VAR'(3)),external_pattern(2))],[-1*'$VAR'(2)+1*'$VAR'(3)=0,1*'$VAR'(3)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(2,0),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(2,1),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,0),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(3,1),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1],terminating)
,eq_ph(while_0('$VAR'(2)),(4,2),cost([],[],[],[],1),[],[while_0('$VAR'(3))],[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],terminating)
,eq_ph(while_0('$VAR'(2)),(5,2),cost([],[],[],[],0),[],[],[],[-1*'$VAR'(2)>=0],terminating)
]
)
,predicateRes(eq_refined/2,
[eq_refined(1,6)
,eq_refined(1,7)
,eq_refined(2,5)
,eq_refined(3,4)
,eq_refined(none,1)
,eq_refined(none,2)
,eq_refined(none,3)
]
)
,predicateRes(loop_ph/6,
[loop_ph(nested_loop('$VAR'(2)),(1,0),[],[],[1],terminating)
,loop_ph(nested_loop('$VAR'(2)),(6,2),[],[1*'$VAR'(2)>=1],[7],terminating)
,loop_ph(nested_loop('$VAR'(2)),(7,2),[],[-1*'$VAR'(2)>=0],[6],terminating)
,loop_ph(while_0('$VAR'(2)),(2,0),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[3],terminating)
,loop_ph(while_0('$VAR'(2)),(3,0),[],[-1*'$VAR'(2)>=0],[2],terminating)
,loop_ph(while_0('$VAR'(2)),(4,2),[],[-1*'$VAR'(2)>=0],[5],terminating)
,loop_ph(while_0('$VAR'(2)),(5,2),[while_0('$VAR'(3))],[1*'$VAR'(2)>=1,-2*'$VAR'(3)+1*'$VAR'(2)>=0],[4],terminating)
]
)
,predicateRes(phase_loop/5,
[phase_loop([2],0,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
,phase_loop([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -2*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(chain/3,
[chain(nested_loop('$VAR'(2)),0,[1])
,chain(nested_loop('$VAR'(2)),2,[6])
,chain(nested_loop('$VAR'(2)),2,[7])
,chain(while_0('$VAR'(2)),0,[3])
,chain(while_0('$VAR'(2)),0,[[2]])
,chain(while_0('$VAR'(2)),0,[[2],3])
,chain(while_0('$VAR'(2)),2,[4])
,chain(while_0('$VAR'(2)),2,[[5],4])
]
)
,predicateRes(phase/3,
[phase(1,nested_loop('$VAR'(2)),0)
,phase(3,while_0('$VAR'(2)),0)
,phase(4,while_0('$VAR'(2)),2)
,phase(6,nested_loop('$VAR'(2)),2)
,phase(7,nested_loop('$VAR'(2)),2)
,phase([2],while_0('$VAR'(2)),0)
,phase([5],while_0('$VAR'(2)),2)
]
)
]
)
,categoryRes(invariants,
[predicateRes(backward_invariant/4,
[backward_invariant(nested_loop('$VAR'(2)),([6],2),3857194,[1*'$VAR'(2)>=1])
,backward_invariant(nested_loop('$VAR'(2)),([7],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([4],2),4618183,[-1*'$VAR'(2)>=0])
,backward_invariant(while_0('$VAR'(2)),([[5],4],2),3857194,[1*'$VAR'(2)>=1])
]
)
,predicateRes(context_insensitive_backward_invariant/3,
[context_insensitive_backward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(forward_invariant/4,
[forward_invariant(nested_loop('$VAR'(2)),([1],0),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([6],2),11527763,[])
,forward_invariant(nested_loop('$VAR'(2)),([7],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([3,[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([4,[5]],2),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[2]],0),11527763,[])
,forward_invariant(while_0('$VAR'(2)),([[5]],2),11527763,[])
]
)
,predicateRes(context_insensitive_forward_invariant/3,
[context_insensitive_forward_invariant(nested_loop('$VAR'(2)),6,[])
,context_insensitive_forward_invariant(nested_loop('$VAR'(2)),7,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),4,[])
,context_insensitive_forward_invariant(while_0('$VAR'(2)),[5],[])
]
)
,predicateRes(scc_forward_invariant/3,
[scc_forward_invariant(nested_loop('$VAR'(2)),0,[])
,scc_forward_invariant(while_0('$VAR'(2)),0,[])
]
)
,predicateRes(phase_transitive_closure/5,
[phase_transitive_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)>=1,1*'$VAR'(2)+ -2*'$VAR'(3)>=0])
]
)
,predicateRes(phase_transitive_star_closure/5,
[phase_transitive_star_closure([5],2,while_0('$VAR'(2)),while_0('$VAR'(3)),[1*'$VAR'(2)+ -1*'$VAR'(3)>=0,1*'$VAR'(2)>=1])
]
)
,predicateRes(external_call_pattern/5,
[external_call_pattern(nested_loop('$VAR'(2)),(1,2),terminating,[[7]],[-1*'$VAR'(2)>=0])
,external_call_pattern(nested_loop('$VAR'(2)),(2,2),terminating,[[6]],[1*'$VAR'(2)>=1])
,external_call_pattern(while_0('$VAR'(2)),(1,2),terminating,[[4]],[-1*'$VAR'(2)>=0])
,external_call_pattern(while_0('$VAR'(2)),(2,2),terminating,[[[5],4]],[1*'$VAR'(2)>=1])
]
)
]
)
,categoryRes(termination,
[predicateRes(ranking_function/4,
[ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[('$VAR'(2),2)]+ -1)
]
)
,predicateRes(partial_ranking_function/7,
[partial_ranking_function(while_0('$VAR'(2)),'$VAR'(3),[5],[5:1],[('$VAR'(2),2)]+ -1,[],[])
]
)
,predicateRes(termination_argument/4,
[termination_argument(nested_loop('$VAR'(2)),[6],yes,trivial)
,termination_argument(nested_loop('$VAR'(2)),[7],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[4,[5]],yes,trivial)
,termination_argument(while_0('$VAR'(2)),[[5]],yes,[([5],rf([('$VAR'(2),2)]+ -1))])
]
)
,predicateRes(non_terminating_chain/3,
[non_terminating_chain(while_0('$VAR'(2)),0,[[2]])
,non_terminating_chain(while_0('$VAR'(2)),2,[[5]])
]
)
]
)
,categoryRes(bounds,
[predicateRes(phase_cost/4,
[phase_cost([5],while_0('$VAR'(2)),[while_0('$VAR'(3))],cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)]),bound(ub,[('$VAR'(2),2),('$VAR'(3),-2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(loop_cost/5,
[loop_cost(nested_loop('$VAR'(2)),[],(0,[]),6,cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0))
,loop_cost(nested_loop('$VAR'(2)),[],(0,[]),7,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[],(0,[]),4,cost([],[],[],[],0))
,loop_cost(while_0('$VAR'(2)),[while_0('$VAR'(3))],(0,[]),5,cost([],[],[],[],1))
]
)
,predicateRes(chain_cost/5,
[chain_cost(nested_loop('$VAR'(2)),[6],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0),[1*'$VAR'(2)>=1])
,chain_cost(nested_loop('$VAR'(2)),[7],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[4],(0,[]),cost([],[],[],[],0),[-1*'$VAR'(2)>=0])
,chain_cost(while_0('$VAR'(2)),[[5],4],(0,[]),cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0),[1*'$VAR'(2)>=1])
]
)
,predicateRes(upper_bound/4,
[upper_bound(nested_loop('$VAR'(2)),[6],5533375,cost([bound(ub,[('$VAR'(2),2)]+0,[s(1)])],[],[],[(s(1),1)],0))
,upper_bound(nested_loop('$VAR'(2)),[7],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[4],4408260,cost([],[],[],[],0))
,upper_bound(while_0('$VAR'(2)),[[5],4],14145944,cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
,predicateRes(external_upper_bound/3,
[external_upper_bound(while_0('$VAR'(2)),1,cost([],[],[],[],0))
,external_upper_bound(while_0('$VAR'(2)),2,cost([bound(ub,[('$VAR'(2),2)]+0,[it(5)])],[],[],[(it(5),1)],0))
]
)
]
)
,categoryRes(closed_bounds,
[predicateRes(closed_upper_bound/3,
[closed_upper_bound(nested_loop('$VAR'(2)),[6],max([add([mult([nat(2*'$VAR'(2))],1)])]))
,closed_upper_bound(nested_loop('$VAR'(2)),[7],max([add([])]))
]
)
,predicateRes(closed_lower_bound/3,
[closed_lower_bound(nested_loop('$VAR'(2)),[6],min([add([])]))
,closed_lower_bound(nested_loop('$VAR'(2)),[7],min([add([])]))
]
)
,predicateRes(single_closed_upper_bound/2,
[]
)
,predicateRes(conditional_bound/3,
[conditional_bound(nested_loop('$VAR'(2)),(0,0),[[-1*'$VAR'(2)>=0]])
,conditional_bound(nested_loop('$VAR'(2)),(2*'$VAR'(2),0),[[1*'$VAR'(2)>=1]])
]
)
]
)
]
,none).


