
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eq/2]
2. recursive : [remove/3]
3. recursive : [nub/2]
Warning: the following predicates are never called:[remove/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eq/2
2. SCC is partially evaluated into remove/3
3. SCC is completely evaluated into other SCCs

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eq/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 
* CE 2 is refined into CE [7] 


#### Refined cost equations eq/2 
* CE 5: eq(L1,L2) = 1+ eq(M2,N2)
     [L2>=1,L1>=1,L2=N2+1,L1=M2+1] 
* CE 6: eq(L1,L2) = 1
     [L1>=1,L2=0] 
* CE 7: eq(L1,L2) = 1
     [L1=0] 

### Cost equations --> "Loop" of eq/2 
* CEs [6] --> Loop 4 
* CEs [7] --> Loop 5 
* CEs [5] --> Loop 6 

#### Loops of eq/2 
* Loop 4: eq(L1,L2) [L1>=1,L2=0] 
* Loop 5: eq(L1,L2) [L1=0] 
* Loop 6: eq(L1,L2)->  eq(L1',L2')
                  [L2>=1,L1>=1,L2=L2'+1,L1=L1'+1] 

### Ranking functions of CR eq(L1,L2) 
* RF of phase [6]: [L1,L2]

#### Partial ranking functions of CR eq(L1,L2) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    L1
    L2


### Resulting Chains:eq(L1,L2) 
* [[6],5]
* [[6],4]
* [5]
* [4]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eq(L1,L2) -> [eq(L1',L2')] 
1
#### Cost of phase [6]:eq(L1,L2) -> [eq(L1',L2')] 
1*it(6)+0
  Such that:it(6) =< L1
it(6) =< L1-L1'
it(6) =< L2
it(6) =< L2-L2'
it(6) >= L1-L1'
it(6) >= L2-L2'

#### Cost of phase [6]:eq(L1,L2) -> [eq(L1',L2')] 
1*it(6)+0
  Such that:it(6) =< L1
it(6) =< L1-L1'
it(6) =< L2
it(6) =< L2-L2'
it(6) >= L1-L1'
it(6) >= L2-L2'

#### Cost of chains of eq(L1,L2):
* Chain [[6],5]: 1*it(6)+1
  Such that:it(6) =< L1
it(6) >= L1

  with precondition: [L1>=1,L2>=L1] 

* Chain [[6],4]: 1*it(6)+1
  Such that:it(6) =< L2
it(6) >= L2

  with precondition: [L2>=1,L1>=L2+1] 

* Chain [5]: 1
  with precondition: [L1=0] 

* Chain [4]: 1
  with precondition: [L2=0,L1>=1] 


Closed-form bounds of eq(L1,L2): 
-------------------------------------
* Chain [[6],5] with precondition: [L1>=1,L2>=L1] 
    - Lower bound: L1+1 
    - Complexity: n
 * Chain [[6],4] with precondition: [L2>=1,L1>=L2+1] 
    - Lower bound: L2+1 
    - Complexity: n
 * Chain [5] with precondition: [L1=0] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [4] with precondition: [L2=0,L1>=1] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eq(L1,L2): 
* 1 
 if [L2=0,L1>=1]
 or [L1=0]
* L1+1 
 if [L1>=1,L2>=L1]
* L2+1 
 if [L2>=1,L1>=L2+1]
Possible lower bounds : [1,L1+1,L2+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 15 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 51 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 116 ms.

