
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [append/2]
1. recursive : [split/2]
2. recursive : [qs/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into append/2
1. SCC is partially evaluated into split/2
2. SCC is partially evaluated into qs/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations append/2 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


#### Refined cost equations append/2 
* CE 8: append(L1,L2) = 1+ append(M2,L2)
     [L1>=1,L1=M2+1] 
* CE 9: append(L1,L2) = 1
     [] 

### Cost equations --> "Loop" of append/2 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of append/2 
* Loop 7: append(L1,L2) [] 
* Loop 8: append(L1,L2)->  append(L1',L2)
                  [L1>=1,L1=L1'+1] 

### Ranking functions of CR append(L1,L2) 
* RF of phase [8]: [L1]

#### Partial ranking functions of CR append(L1,L2) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    L1


### Resulting Chains:append(L1,L2) 
* [[8],7]
* [7]


### Specialization of cost equations split/2 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations split/2 
* CE 10: split(P,L) = 1+ split(P,Q)
     [Q>=1,Q+1=L] 
* CE 11: split(P,L) = 1
     [L=0] 

### Cost equations --> "Loop" of split/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of split/2 
* Loop 9: split(P,L) [L=0] 
* Loop 10: split(P,L)->  split(P,L')
                  [L'>=1,L'+1=L] 

### Ranking functions of CR split(P,L) 
* RF of phase [10]: [L-1]

#### Partial ranking functions of CR split(P,L) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    L-1


### Resulting Chains:split(P,L) 
* [9]


### Specialization of cost equations qs/1 
* CE 3 is refined into CE [12] 
* CE 2 is refined into CE [13] 


#### Refined cost equations qs/1 
* CE 12: qs(L) = 1+ append(M,N):[7]+ split(O,P):[9]+ qs(M)+ qs(N)
     [0>=N,0>=M,P=0,L=1] 
* CE 13: qs(L) = 1
     [L=0] 

### Cost equations --> "Loop" of qs/1 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of qs/1 
* Loop 11: qs(L) [L=0] 
* Loop 12: qs(L)->  qs(L')  qs(L'2)
                  [0>=L'2,0>=L',L=1] 

### Ranking functions of CR qs(L) 

#### Partial ranking functions of CR qs(L) 


### Resulting Chains:qs(L) 
* [multiple(12,[[11]])]
* [11]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:append(L1,L2) -> [append(L1',L2')] 
1
#### Cost of phase [8]:append(L1,L2) -> [append(L1',L2')] 
1*it(8)+0
  Such that:it(8) =< L1
it(8) =< L1-L1'
it(8) >= L1-L1'

#### Cost of chains of append(L1,L2):
* Chain [[8],7]: 1*it(8)+1
  Such that:it(8) =< L1
it(8) >= 1

  with precondition: [L1>=1] 

* Chain [7]: 1
  with precondition: [] 


#### Cost of chains of split(P,L):
* Chain [9]: 1
  with precondition: [L=0] 


#### Cost of chains of qs(L):
* Chain [multiple(12,[[11]])]: 5
  with precondition: [L=1] 

* Chain [11]: 1
  with precondition: [L=0] 


Closed-form bounds of qs(L): 
-------------------------------------
* Chain [multiple(12,[[11]])] with precondition: [L=1] 
    - Lower bound: 5 
    - Complexity: constant
 * Chain [11] with precondition: [L=0] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of qs(L): 
* 1 
 if [L=0]
* 5 
 if [L=1]
Possible lower bounds : [1,5]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 31 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 21 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 117 ms.

