
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [15_loop/3]
1. recursive : [4_loop/9]
2. recursive : [20_loop/2]
3. non_recursive : [amor/atva/QNode_length()I/1]
4. non_recursive : [amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into 15_loop/3
1. SCC is partially evaluated into 4_loop/9
2. SCC is partially evaluated into 20_loop/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations 15_loop/3 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 


#### Refined cost equations 15_loop/3 
* CE 16: 15_loop(A,B,B) = 3
     [B>=A,A>=1] 
* CE 17: 15_loop(A,B,B) = 6+ 15_loop(A,C,D)
     [A>=B+1,B>=0,B+1=D,B+1=C] 

### Cost equations --> "Loop" of 15_loop/3 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of 15_loop/3 
* Loop 15: 15_loop(A,B,B)->  15_loop(A,B',C')
                  [A>=B+1,B>=0,B+1=C',B+1=B'] 
* Loop 16: 15_loop(A,B,B) [B>=A,A>=1] 

### Ranking functions of CR 15_loop(A,B,C) 
* RF of phase [15]: [A-B,A-C]

#### Partial ranking functions of CR 15_loop(A,B,C) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A-B
    A-C


### Resulting Chains:15_loop(A,B,C) 
* [[15],16]


### Specialization of cost equations 4_loop/9 
* CE 9 is discarded (unfeasible) 
* CE 10 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 13 is discarded (unfeasible) 
* CE 11 is refined into CE [20] 
* CE 8 is refined into CE [21] 
* CE 7 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 5 is refined into CE [24] 


#### Refined cost equations 4_loop/9 
* CE 18: 4_loop(A,B,C,D,E,F,A,G,H) = 26
     [A+C+F>=D+E+H,D+F+G>=A+C+E+1,E+H+1>=F+G,F+1>=E+H,B>=G+1,G>=1,A>=0,E>=0,D>=0,C>=0] 
* CE 19: 4_loop(A,B,C,C,D,D,E,F,G) = 7
     [D>=0,C>=0,A>=0,0>=B+1,G=0,F=0,E=0] 
* CE 20: 4_loop(A,B,C,D,E,F,A,B,G) = 15
     [A+C+F>=D+E+G,E+G+1>=B+F,B+F>=E+G,D+G>=A+C,E+G>=F,F+1>=E+G,E>=0,D>=0,C>=0,A>=0] 
* CE 21: 4_loop(A,B,C,D,E,E,F,G,H) = 33+ 4_loop(A,B,C,I,E,E,J,K,L)
     [A>=F+1,F>=0,E>=0,C>=0,B>=0,C+F+1=I,C+F=D,F+1=J,L=0,K=0,H=0,G=0] 
* CE 22: 4_loop(A,B,C,D,E,F,A,G,H) = 33+ 4_loop(A,B,C,D,I,F,A,J,K)
     [D+F+G>=A+C,A+C>=D+G,B>=G+1,G>=0,F>=1,D>=0,C>=0,A>=0,1>=G,D+F+G=A+C+I,D+F+G=A+C+E,A+C=D+K,A+C=D+H,G+1=J] 
* CE 23: 4_loop(A,B,C,D,E,F,A,G,G) = 35+ 4_loop(A,B,H,I,J,K,A,L,G)
     [B>=G+1,G>=A,A>=0,1>=G,G=A+H,G=A+C,G+1=L,K=0,J=0,I=0,F=0,E=0,D=0] 
* CE 24: 4_loop(A,B,C,D,E,F,A,G,H) = 41+ 15_loop(D,I,J):[[15],16]+ 4_loop(A,B,K,L,M,N,A,O,P)
     [P>=D,D>=A,D>=1,B>=1,A>=0,D=A+K,D=A+C,P=N+1,O=1,M=0,L=0,J=0,I=0,H=0,G=0,F=0,E=0] 

### Cost equations --> "Loop" of 4_loop/9 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [18] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [19] --> Loop 23 

#### Loops of 4_loop/9 
* Loop 17: 4_loop(A,B,C,D,E,F,A,G,H)->  4_loop(A,B,C,D,A',F,A,B',C')
                  [D+F+G>=A+C,A+C>=D+G,B>=G+1,G>=0,F>=1,D>=0,C>=0,A>=0,1>=G,A+C+A'=D+F+G,A+C+E=D+F+G,A+C=D+C',A+C=D+H,G+1=B'] 
* Loop 18: 4_loop(A,B,C,D,E,E,F,G,H)->  4_loop(A,B,C,A',E,E,B',C',D')
                  [A>=F+1,F>=0,E>=0,C>=0,B>=0,C+F+1=A',C+F=D,F+1=B',D'=0,C'=0,H=0,G=0] 
* Loop 19: 4_loop(A,B,C,D,E,F,A,G,H)->  4_loop(A,B,A',B',C',D',A,E',F')
                  [F'>=D,D>=A,D>=1,B>=1,A>=0,A+A'=D,A+C=D,F'=D'+1,E'=1,C'=0,B'=0,H=0,G=0,F=0,E=0] 
* Loop 20: 4_loop(A,B,C,D,E,F,A,G,G)->  4_loop(A,B,A',B',C',D',A,E',G)
                  [B>=G+1,G>=A,A>=0,1>=G,G=A+A',G=A+C,G+1=E',D'=0,C'=0,B'=0,F=0,E=0,D=0] 
* Loop 21: 4_loop(A,B,C,D,E,F,A,G,H) [A+C+F>=D+E+H,D+F+G>=A+C+E+1,E+H+1>=F+G,F+1>=E+H,B>=G+1,G>=1,E>=0,D>=0,C>=0,A>=0] 
* Loop 22: 4_loop(A,B,C,D,E,F,A,B,G) [A+C+F>=D+E+G,B+F>=E+G,E+G+1>=B+F,D+G>=A+C,E+G>=F,F+1>=E+G,E>=0,D>=0,C>=0,A>=0] 
* Loop 23: 4_loop(A,B,C,C,D,D,E,F,G) [D>=0,C>=0,A>=0,0>=B+1,G=0,F=0,E=0] 

### Ranking functions of CR 4_loop(A,B,C,D,E,F,G,H,I) 
* RF of phase [18]: [A+C-D,A-G]

#### Partial ranking functions of CR 4_loop(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    A+C-D
    A-G


### Resulting Chains:4_loop(A,B,C,D,E,F,G,H,I) 
* [[18],22]
* [[18],19,22]
* [[18],19,21]
* [[18],19,20,22]
* [[18],19,20,21]
* [[18],19,17,22]
* [[18],19,17,21]
* [[18],17,22]
* [[18],17,21]
* [23]
* [22]
* [20,22]
* [20,21]
* [19,22]
* [19,21]
* [19,20,22]
* [19,20,21]
* [19,17,22]
* [19,17,21]
* [17,22]
* [17,21]


### Specialization of cost equations 20_loop/2 
* CE 4 is refined into CE [25] 
* CE 3 is refined into CE [26] 


#### Refined cost equations 20_loop/2 
* CE 25: 20_loop(A,B) = 2
     [A>=0,B=0] 
* CE 26: 20_loop(A,B) = 7+ 20_loop(C,D)
     [B>=D+1,D>=0,A>=0,A+1=C] 

### Cost equations --> "Loop" of 20_loop/2 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of 20_loop/2 
* Loop 24: 20_loop(A,B)->  20_loop(A',B')
                  [B>=B'+1,B'>=0,A>=0,A+1=A'] 
* Loop 25: 20_loop(A,B) [A>=0,B=0] 

### Ranking functions of CR 20_loop(A,B) 
* RF of phase [24]: [B]

#### Partial ranking functions of CR 20_loop(A,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    B


### Resulting Chains:20_loop(A,B) 
* [[24],25]
* [25]


### Specialization of cost equations amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4 
* CE 2 is refined into CE [27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90] 


#### Refined cost equations amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4 
* CE 27: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,G,H,H,I,I,J,K,L):[[18],22]
     [B>=I,A>=H,I>=0,H>=0,C>=1,B>=1,A>=1,L=0,K=0,J=0,G=0,F=0,E=0,D=0] 
* CE 28: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,G,H,H,I,J,K,L,M):[[18],19,22]
     [A>=H,H>=0,C>=1,B>=1,A>=1,M=0,L=0,K=0,J=0,I=0,G=1,F=0,E=0,D=1] 
* CE 29: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,D,G,G,H,I,J,K,L):[[18],19,21]
     [A>=G,G>=0,D>=2,C>=1,B>=1,A>=1,L=0,K=0,J=0,I=0,H=0,F=0,E=0] 
* CE 30: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,J,K,L,M,N,O):[[18],19,20,22]
     [B>=1,A>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=2,G=1,F=0,E=0,D=2,C=1] 
* CE 31: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,I,J,K,L,M,N):[[18],19,20,21]
     [D>=3,B>=1,A>=1,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=1,F=0,E=0,C=1] 
* CE 32: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,G,H,H,I,J,K,L,M):[[18],19,17,22]
     [C+H>=2,A>=H,H>=0,C>=1,B>=1,A>=1,M=0,L=0,K=0,J=0,I=0,G=2,F=0,E=0,D=2] 
* CE 33: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,D,G,G,H,I,J,K,L):[[18],19,17,21]
     [C+G>=2,A>=G,G>=0,D>=3,C>=1,B>=1,A>=1,L=0,K=0,J=0,I=0,H=0,F=0,E=0] 
* CE 34: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,G,H,H,I,I,J,K,L):[[18],17,22]
     [B>=I,A>=H,I>=1,H>=0,C>=1,A>=1,L=0,K=0,J=0,G=1,F=0,E=0,D=1] 
* CE 35: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,D,G,G,H,H,I,J,K):[[18],17,21]
     [B>=H,A>=G,H>=1,G>=0,D>=2,C>=1,A>=1,K=0,J=0,I=0,F=0,E=0] 
* CE 36: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(C,D,G,G,H,H,I,J,K):[23]
     [B>=H,A>=G,H>=0,G>=0,C>=0,B>=1,A>=1,0>=D+1,K=0,J=0,I=0,F=0,E=0] 
* CE 37: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,I,J,J,K,L,M):[22]
     [B>=J,A>=I,J>=0,I>=0,B>=1,A>=1,M=0,L=0,K=0,H=0,G=0,F=0,E=0,D=0,C=0] 
* CE 38: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,J,K,L,M,N,O):[20,22]
     [B>=1,A>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=1,G=0,F=0,E=0,D=1,C=0] 
* CE 39: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,I,J,K,L,M,N):[20,21]
     [D>=2,B>=1,A>=1,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0] 
* CE 40: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,I,J,K,L,M,N):[19,22]
     [A>=I,I>=1,B>=1,N=0,M=0,L=0,K=0,J=0,H=1,G=0,F=0,E=0,D=1,C=0] 
* CE 41: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,H,I,J,K,L,M):[19,21]
     [A>=H,H>=1,D>=2,B>=1,M=0,L=0,K=0,J=0,I=0,G=0,F=0,E=0,C=0] 
* CE 42: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,J,K,L,M,N,O):[19,20,22]
     [B>=1,A>=1,O=0,N=0,M=0,L=0,K=0,J=1,I=1,H=2,G=0,F=0,E=0,D=2,C=0] 
* CE 43: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,I,J,K,L,M,N):[19,20,21]
     [D>=3,B>=1,A>=1,N=0,M=0,L=0,K=0,J=0,I=1,H=1,G=0,F=0,E=0,C=0] 
* CE 44: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,I,J,K,L,M,N):[19,17,22]
     [A>=I,I>=2,B>=1,N=0,M=0,L=0,K=0,J=0,H=2,G=0,F=0,E=0,D=2,C=0] 
* CE 45: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,H,I,J,K,L,M):[19,17,21]
     [A>=H,H>=2,D>=3,B>=1,M=0,L=0,K=0,J=0,I=0,G=0,F=0,E=0,C=0] 
* CE 46: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,H,I,I,J,J,K,L,M):[17,22]
     [B>=J,A>=I,J>=1,I>=0,A>=1,M=0,L=0,K=0,H=1,G=0,F=0,E=0,D=1,C=0] 
* CE 47: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,B):[[24],25]+ 4_loop(G,D,H,H,I,I,J,K,L):[17,21]
     [B>=I,A>=H,I>=1,H>=0,D>=2,A>=1,L=0,K=0,J=0,G=0,F=0,E=0,C=0] 
* CE 48: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,H,I,I,J,K,L,M,N):[[18],22]
     [A>=I,I>=0,C>=1,A>=1,N=0,M=0,L=0,K=0,J=0,H=0,G=0,F=0,E=0,D=0,B=0] 
* CE 49: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,H,I,I,J,K,L,M,N):[[18],19,22]
     [A>=I,I>=0,C>=1,A>=1,N=0,M=0,L=0,K=0,J=0,H=1,G=0,F=0,E=0,D=1,B=0] 
* CE 50: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,D,H,H,I,J,K,L,M):[[18],19,21]
     [A>=H,H>=0,D>=2,C>=1,A>=1,M=0,L=0,K=0,J=0,I=0,G=0,F=0,E=0,B=0] 
* CE 51: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,K,L,M,N,O,P):[[18],19,20,22]
     [A>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=2,H=1,G=0,F=0,E=0,D=2,C=1,B=0] 
* CE 52: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,D,I,J,K,L,M,N,O):[[18],19,20,21]
     [D>=3,A>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=1,G=0,F=0,E=0,C=1,B=0] 
* CE 53: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,H,I,I,J,K,L,M,N):[[18],19,17,22]
     [C+I>=2,A>=I,I>=0,C>=1,A>=1,N=0,M=0,L=0,K=0,J=0,H=2,G=0,F=0,E=0,D=2,B=0] 
* CE 54: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,D,H,H,I,J,K,L,M):[[18],19,17,21]
     [C+H>=2,A>=H,H>=0,D>=3,C>=1,A>=1,M=0,L=0,K=0,J=0,I=0,G=0,F=0,E=0,B=0] 
* CE 55: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(C,D,H,H,I,J,K,L,M):[23]
     [A>=H,H>=0,C>=0,A>=1,0>=D+1,M=0,L=0,K=0,J=0,I=0,G=0,F=0,E=0,B=0] 
* CE 56: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,J,K,L,M,N,O):[22]
     [A>=J,J>=0,A>=1,O=0,N=0,M=0,L=0,K=0,I=0,H=0,G=0,F=0,E=0,D=0,C=0,B=0] 
* CE 57: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,K,L,M,N,O,P):[20,22]
     [A>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=1,H=0,G=0,F=0,E=0,D=1,C=0,B=0] 
* CE 58: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,D,I,J,K,L,M,N,O):[20,21]
     [D>=2,A>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0,B=0] 
* CE 59: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,J,K,L,M,N,O):[19,22]
     [A>=J,J>=1,O=0,N=0,M=0,L=0,K=0,I=1,H=0,G=0,F=0,E=0,D=1,C=0,B=0] 
* CE 60: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,D,I,I,J,K,L,M,N):[19,21]
     [A>=I,I>=1,D>=2,N=0,M=0,L=0,K=0,J=0,H=0,G=0,F=0,E=0,C=0,B=0] 
* CE 61: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,K,L,M,N,O,P):[19,20,22]
     [A>=1,P=0,O=0,N=0,M=0,L=0,K=1,J=1,I=2,H=0,G=0,F=0,E=0,D=2,C=0,B=0] 
* CE 62: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,D,I,J,K,L,M,N,O):[19,20,21]
     [D>=3,A>=1,O=0,N=0,M=0,L=0,K=0,J=1,I=1,H=0,G=0,F=0,E=0,C=0,B=0] 
* CE 63: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,I,J,J,K,L,M,N,O):[19,17,22]
     [A>=J,J>=2,O=0,N=0,M=0,L=0,K=0,I=2,H=0,G=0,F=0,E=0,D=2,C=0,B=0] 
* CE 64: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,A):[[24],25]+ 20_loop(F,G):[25]+ 4_loop(H,D,I,I,J,K,L,M,N):[19,17,21]
     [A>=I,I>=2,D>=3,N=0,M=0,L=0,K=0,J=0,H=0,G=0,F=0,E=0,C=0,B=0] 
* CE 65: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,H,I,J,K,K,L,M,N):[[18],22]
     [B>=K,K>=0,C>=1,B>=1,N=0,M=0,L=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,A=0] 
* CE 66: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,H,I,J,K,L,M,N,O):[[18],19,22]
     [C>=1,B>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=1,G=0,F=0,E=0,D=1,A=0] 
* CE 67: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,D,H,I,J,K,L,M,N):[[18],19,21]
     [D>=2,C>=1,B>=1,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,A=0] 
* CE 68: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,I,J,K,L,M,N,O,P):[[18],19,20,22]
     [B>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=2,H=1,G=0,F=0,E=0,D=2,C=1,A=0] 
* CE 69: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,D,I,J,K,L,M,N,O):[[18],19,20,21]
     [D>=3,B>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=1,G=0,F=0,E=0,C=1,A=0] 
* CE 70: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,H,I,J,K,L,M,N,O):[[18],19,17,22]
     [C>=2,B>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=2,G=0,F=0,E=0,D=2,A=0] 
* CE 71: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,D,H,I,J,K,L,M,N):[[18],19,17,21]
     [D>=3,C>=2,B>=1,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,A=0] 
* CE 72: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,H,I,J,K,K,L,M,N):[[18],17,22]
     [B>=K,K>=1,C>=1,N=0,M=0,L=0,J=0,I=0,H=1,G=0,F=0,E=0,D=1,A=0] 
* CE 73: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,D,H,I,J,J,K,L,M):[[18],17,21]
     [B>=J,J>=1,D>=2,C>=1,M=0,L=0,K=0,I=0,H=0,G=0,F=0,E=0,A=0] 
* CE 74: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(C,D,H,I,J,J,K,L,M):[23]
     [B>=J,J>=0,C>=0,B>=1,0>=D+1,M=0,L=0,K=0,I=0,H=0,G=0,F=0,E=0,A=0] 
* CE 75: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,I,J,K,L,L,M,N,O):[22]
     [B>=L,L>=0,B>=1,O=0,N=0,M=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,C=0,A=0] 
* CE 76: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,I,J,K,L,M,N,O,P):[20,22]
     [B>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=1,H=0,G=0,F=0,E=0,D=1,C=0,A=0] 
* CE 77: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,D,I,J,K,L,M,N,O):[20,21]
     [D>=2,B>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0,A=0] 
* CE 78: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,I,J,K,L,L,M,N,O):[17,22]
     [B>=L,L>=1,O=0,N=0,M=0,K=0,J=0,I=1,H=0,G=0,F=0,E=0,D=1,C=0,A=0] 
* CE 79: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,B):[[24],25]+ 4_loop(H,D,I,J,K,K,L,M,N):[17,21]
     [B>=K,K>=1,D>=2,N=0,M=0,L=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0,A=0] 
* CE 80: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,I,J,K,L,M,N,O,P):[[18],22]
     [C>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,B=0,A=0] 
* CE 81: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,I,J,K,L,M,N,O,P):[[18],19,22]
     [C>=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=1,H=0,G=0,F=0,E=0,D=1,B=0,A=0] 
* CE 82: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,D,I,J,K,L,M,N,O):[[18],19,21]
     [D>=2,C>=1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,B=0,A=0] 
* CE 83: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(I,J,K,L,M,N,O,P,Q):[[18],19,20,22]
     [Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=2,I=1,H=0,G=0,F=0,E=0,D=2,C=1,B=0,A=0] 
* CE 84: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(I,D,J,K,L,M,N,O,P):[[18],19,20,21]
     [D>=3,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=1,H=0,G=0,F=0,E=0,C=1,B=0,A=0] 
* CE 85: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,I,J,K,L,M,N,O,P):[[18],19,17,22]
     [C>=2,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=2,H=0,G=0,F=0,E=0,D=2,B=0,A=0] 
* CE 86: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,D,I,J,K,L,M,N,O):[[18],19,17,21]
     [D>=3,C>=2,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,B=0,A=0] 
* CE 87: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(C,D,I,J,K,L,M,N,O):[23]
     [C>=0,0>=D+1,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,B=0,A=0] 
* CE 88: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(I,J,K,L,M,N,O,P,Q):[22]
     [Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,C=0,B=0,A=0] 
* CE 89: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(I,J,K,L,M,N,O,P,Q):[20,22]
     [Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=1,I=0,H=0,G=0,F=0,E=0,D=1,C=0,B=0,A=0] 
* CE 90: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) = 27+ 20_loop(E,F):[25]+ 20_loop(G,H):[25]+ 4_loop(I,D,J,K,L,M,N,O,P):[20,21]
     [D>=2,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0,B=0,A=0] 

### Cost equations --> "Loop" of amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4 
* CEs [33] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [34] --> Loop 31 
* CEs [28] --> Loop 32 
* CEs [27] --> Loop 33 
* CEs [31] --> Loop 34 
* CEs [30] --> Loop 35 
* CEs [45] --> Loop 36 
* CEs [43] --> Loop 37 
* CEs [47] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [39] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [42] --> Loop 42 
* CEs [46] --> Loop 43 
* CEs [40] --> Loop 44 
* CEs [38] --> Loop 45 
* CEs [37] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [50] --> Loop 48 
* CEs [55] --> Loop 49 
* CEs [53] --> Loop 50 
* CEs [49] --> Loop 51 
* CEs [48] --> Loop 52 
* CEs [52] --> Loop 53 
* CEs [51] --> Loop 54 
* CEs [64] --> Loop 55 
* CEs [62] --> Loop 56 
* CEs [60] --> Loop 57 
* CEs [58] --> Loop 58 
* CEs [63] --> Loop 59 
* CEs [61] --> Loop 60 
* CEs [59] --> Loop 61 
* CEs [57] --> Loop 62 
* CEs [56] --> Loop 63 
* CEs [71] --> Loop 64 
* CEs [73] --> Loop 65 
* CEs [67] --> Loop 66 
* CEs [74] --> Loop 67 
* CEs [70] --> Loop 68 
* CEs [72] --> Loop 69 
* CEs [66] --> Loop 70 
* CEs [65] --> Loop 71 
* CEs [69] --> Loop 72 
* CEs [68] --> Loop 73 
* CEs [79] --> Loop 74 
* CEs [77] --> Loop 75 
* CEs [78] --> Loop 76 
* CEs [76] --> Loop 77 
* CEs [75] --> Loop 78 
* CEs [86] --> Loop 79 
* CEs [82] --> Loop 80 
* CEs [87] --> Loop 81 
* CEs [85] --> Loop 82 
* CEs [81] --> Loop 83 
* CEs [80] --> Loop 84 
* CEs [84] --> Loop 85 
* CEs [83] --> Loop 86 
* CEs [90] --> Loop 87 
* CEs [89] --> Loop 88 
* CEs [88] --> Loop 89 

#### Loops of amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V/4 
* Loop 26: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,C>=1,B>=1,A>=1] 
* Loop 27: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,B>=1,A>=1] 
* Loop 28: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,B>=1,A>=1] 
* Loop 29: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=0,B>=1,A>=1,0>=D+1] 
* Loop 30: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,A>=1,D=2] 
* Loop 31: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,A>=1,D=1] 
* Loop 32: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,A>=1,D=1] 
* Loop 33: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,A>=1,D=0] 
* Loop 34: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,B>=1,A>=1,C=1] 
* Loop 35: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=2,C=1] 
* Loop 36: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,B>=1,A>=2,C=0] 
* Loop 37: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,B>=1,A>=1,C=0] 
* Loop 38: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,B>=1,A>=1,C=0] 
* Loop 39: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,B>=1,A>=1,C=0] 
* Loop 40: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,B>=1,A>=1,C=0] 
* Loop 41: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=2,D=2,C=0] 
* Loop 42: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=2,C=0] 
* Loop 43: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=1,C=0] 
* Loop 44: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=1,C=0] 
* Loop 45: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=1,C=0] 
* Loop 46: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,A>=1,D=0,C=0] 
* Loop 47: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,C>=1,A>=1,B=0] 
* Loop 48: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,A>=1,B=0] 
* Loop 49: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=0,A>=1,0>=D+1,B=0] 
* Loop 50: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,A>=1,D=2,B=0] 
* Loop 51: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,A>=1,D=1,B=0] 
* Loop 52: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,A>=1,D=0,B=0] 
* Loop 53: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,A>=1,C=1,B=0] 
* Loop 54: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=1,D=2,C=1,B=0] 
* Loop 55: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,A>=2,C=0,B=0] 
* Loop 56: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,A>=1,C=0,B=0] 
* Loop 57: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,A>=1,C=0,B=0] 
* Loop 58: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,A>=1,C=0,B=0] 
* Loop 59: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=2,D=2,C=0,B=0] 
* Loop 60: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=1,D=2,C=0,B=0] 
* Loop 61: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=1,D=1,C=0,B=0] 
* Loop 62: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=1,D=1,C=0,B=0] 
* Loop 63: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [A>=1,D=0,C=0,B=0] 
* Loop 64: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,C>=2,B>=1,A=0] 
* Loop 65: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,B>=1,A=0] 
* Loop 66: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,B>=1,A=0] 
* Loop 67: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=0,B>=1,0>=D+1,A=0] 
* Loop 68: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=2,B>=1,D=2,A=0] 
* Loop 69: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,D=1,A=0] 
* Loop 70: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,D=1,A=0] 
* Loop 71: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,B>=1,D=0,A=0] 
* Loop 72: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,B>=1,C=1,A=0] 
* Loop 73: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,D=2,C=1,A=0] 
* Loop 74: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,B>=1,C=0,A=0] 
* Loop 75: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,B>=1,C=0,A=0] 
* Loop 76: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,D=1,C=0,A=0] 
* Loop 77: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,D=1,C=0,A=0] 
* Loop 78: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [B>=1,D=0,C=0,A=0] 
* Loop 79: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,C>=2,B=0,A=0] 
* Loop 80: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C>=1,B=0,A=0] 
* Loop 81: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=0,0>=D+1,B=0,A=0] 
* Loop 82: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=2,D=2,B=0,A=0] 
* Loop 83: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,D=1,B=0,A=0] 
* Loop 84: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [C>=1,D=0,B=0,A=0] 
* Loop 85: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=3,C=1,B=0,A=0] 
* Loop 86: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D=2,C=1,B=0,A=0] 
* Loop 87: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D>=2,C=0,B=0,A=0] 
* Loop 88: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D=1,C=0,B=0,A=0] 
* Loop 89: amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) [D=0,C=0,B=0,A=0] 

### Ranking functions of CR amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) 

#### Partial ranking functions of CR amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) 


### Resulting Chains:amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D) 
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:15_loop(A,B,C) -> [15_loop(A',B',C')] 
6
#### Cost of phase [15]:15_loop(A,B,C) -> [15_loop(A',B',C')] 
6*it(15)+0
  Such that:it(15) =< A-B
it(15) =< A-B-A'+B'
it(15) =< A-C
it(15) =< A-C-A'+C'
it(15) >= A-B-A'+B'
it(15) >= A-C-A'+C'

#### Cost of chains of 15_loop(A,B,C):
* Chain [[15],16]: 6*it(15)+3
  Such that:it(15) =< A-C
it(15) >= A-B

  with precondition: [B=C,B>=0,A>=B+1] 


#### Cost of loops [18] 

 * loop 18:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33
#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of phase [18]:4_loop(A,B,C,D,E,F,G,H,I) -> [4_loop(A',B',C',D',E',F',G',H',I')] 
33*it(18)+0
  Such that:it(18) =< A+C-D
it(18) =< A+C-D-A'-C'+D'
it(18) =< A-G
it(18) =< A-G-A'+G'
it(18) >= A+C-D-A'-C'+D'
it(18) >= A-G-A'+G'

#### Cost of chains of 4_loop(A,B,C,D,E,F,G,H,I):
* Chain [[18],22]: 33*it(18)+15
  Such that:it(18) =< A-G
it(18) >= A-G

  with precondition: [B=0,H=0,I=0,E=F,C+G=D,C>=0,E>=0,G>=0,A>=G+1] 

* Chain [[18],19,22]: 33*it(18)+6*s(1)+59
  Such that:s(1) =< A+C
it(18) =< A-G
s(1) >= A+C
it(18) >= A-G

  with precondition: [B=1,E=0,F=0,H=0,I=0,C+G=D,C>=0,G>=0,A>=G+1] 

* Chain [[18],19,21]: 33*it(18)+6*s(1)+70
  Such that:s(1) =< A+C
it(18) =< A-G
s(1) >= A+C
it(18) >= A-G

  with precondition: [E=0,F=0,H=0,I=0,C+G=D,B>=2,C>=0,G>=0,A>=G+1] 

* Chain [[18],19,20,22]: 39*it(18)+94
  Such that:aux(1) =< 1
it(18) =< aux(1)
aux(2) >= 1
it(18) >= aux(2)

  with precondition: [A=1,B=2,C=0,D=0,E=0,F=0,G=0,H=0,I=0] 

* Chain [[18],19,20,21]: 39*it(18)+105
  Such that:aux(3) =< 1
it(18) =< aux(3)
aux(4) >= 1
it(18) >= aux(4)

  with precondition: [A=1,C=0,D=0,E=0,F=0,G=0,H=0,I=0,B>=3] 

* Chain [[18],19,17,22]: 33*it(18)+6*s(1)+92
  Such that:s(1) =< A+C
it(18) =< A-G
s(1) >= A+C
it(18) >= A-G

  with precondition: [B=2,E=0,F=0,H=0,I=0,C+G=D,C>=0,G>=0,A>=G+1,A+C>=2] 

* Chain [[18],19,17,21]: 33*it(18)+6*s(1)+103
  Such that:s(1) =< A+C
it(18) =< A-G
s(1) >= A+C
it(18) >= A-G

  with precondition: [E=0,F=0,H=0,I=0,C+G=D,B>=3,C>=0,G>=0,A>=G+1,A+C>=2] 

* Chain [[18],17,22]: 33*it(18)+48
  Such that:it(18) =< A-G
it(18) >= A-G

  with precondition: [B=1,H=0,I=0,E=F,C+G=D,C>=0,E>=1,G>=0,A>=G+1] 

* Chain [[18],17,21]: 33*it(18)+59
  Such that:it(18) =< A-G
it(18) >= A-G

  with precondition: [H=0,I=0,E=F,C+G=D,B>=2,C>=0,E>=1,G>=0,A>=G+1] 

* Chain [23]: 7
  with precondition: [G=0,H=0,I=0,D=C,F=E,0>=B+1,A>=0,D>=0,F>=0] 

* Chain [22]: 15
  with precondition: [G=A,H=B,C>=0,D>=0,E>=0,G>=0,F+1>=E+I,E+I>=F,D+I>=C+G,F+H>=E+I,E+I+1>=F+H,C+F+G>=D+E+I] 

* Chain [20,22]: 50
  with precondition: [D=0,E=0,F=0,H+1=B,A=G,H=I,H=A+C,1>=H,A>=0,H>=A] 

* Chain [20,21]: 61
  with precondition: [D=0,E=0,F=0,A=G,H=I,H=A+C,1>=H,A>=0,H>=A,B>=H+2] 

* Chain [19,22]: 6*s(1)+59
  Such that:s(1) =< C+G
s(1) >= C+G

  with precondition: [B=1,E=0,F=0,H=0,I=0,A=G,A+C=D,A>=0,D>=1,D>=A] 

* Chain [19,21]: 6*s(1)+70
  Such that:s(1) =< A+C
s(1) >= A+C

  with precondition: [E=0,F=0,H=0,I=0,A=G,A+C=D,A>=0,B>=2,C>=0,A+C>=1] 

* Chain [19,20,22]: 6*s(1)+94
  Such that:s(1) =< 1
s(1) >= 1

  with precondition: [B=2,D=1,E=0,F=0,H=0,I=0,A=G,A+C=1,1>=A,A>=0] 

* Chain [19,20,21]: 6*s(1)+105
  Such that:s(1) =< 1
s(1) >= 1

  with precondition: [D=1,E=0,F=0,H=0,I=0,A=G,A+C=1,1>=A,A>=0,B>=3] 

* Chain [19,17,22]: 6*s(1)+92
  Such that:s(1) =< A+C
s(1) >= A+C

  with precondition: [B=2,E=0,F=0,H=0,I=0,A=G,A+C=D,A>=0,D>=2,D>=A] 

* Chain [19,17,21]: 6*s(1)+103
  Such that:s(1) =< A+C
s(1) >= A+C

  with precondition: [E=0,F=0,H=0,I=0,A=G,A+C=D,A>=0,B>=3,C>=0,A+C>=2] 

* Chain [17,22]: 48
  with precondition: [A=G,B=H+1,A+C=D+I,A+C+E+1=B+D+F,2>=B,A>=0,B>=1,C>=0,D>=0,E>=0,A+C+1>=B+D,A+C+E>=B+D] 

* Chain [17,21]: 59
  with precondition: [A=G,A+C=D+I,A+C+E=D+F+H,A>=0,C>=0,D>=0,E>=0,F>=1,F>=E,D+F+1>=A+C+E,A+C+E>=D+F,B+D+F>=A+C+E+2] 


#### Cost of loops [24] 

 * loop 24:20_loop(A,B) -> [20_loop(A',B')] 
7
#### Cost of phase [24]:20_loop(A,B) -> [20_loop(A',B')] 
7*it(24)+0
  Such that:it(24) =< B
it(24) =< B-B'

#### Cost of chains of 20_loop(A,B):
* Chain [[24],25]: 7*it(24)+2
  Such that:it(24) =< B

  with precondition: [A>=0,B>=1] 

* Chain [25]: 2
  with precondition: [B=0,A>=0] 


#### Cost of chains of amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D):
* Chain [89]: 46
  with precondition: [A=0,B=0,C=0,D=0] 

* Chain [88]: 81
  with precondition: [A=0,B=0,C=0,D=1] 

* Chain [87]: 92
  with precondition: [A=0,B=0,C=0,D>=2] 

* Chain [86]: 39*s(4)+125
  Such that:s(2) =< 1
s(4) =< s(2)
s(3) >= 1
s(4) >= s(3)

  with precondition: [A=0,B=0,C=1,D=2] 

* Chain [85]: 39*s(7)+136
  Such that:s(5) =< 1
s(7) =< s(5)
s(6) >= 1
s(7) >= s(6)

  with precondition: [A=0,B=0,C=1,D>=3] 

* Chain [84]: 33*s(8)+46
  Such that:s(8) =< C
s(8) >= C

  with precondition: [A=0,B=0,D=0,C>=1] 

* Chain [83]: 39*s(9)+90
  Such that:aux(5) =< C
s(9) =< aux(5)
aux(6) >= C
s(9) >= aux(6)

  with precondition: [A=0,B=0,D=1,C>=1] 

* Chain [82]: 39*s(11)+123
  Such that:aux(7) =< C
s(11) =< aux(7)
aux(8) >= C
s(11) >= aux(8)

  with precondition: [A=0,B=0,D=2,C>=2] 

* Chain [81]: 38
  with precondition: [A=0,B=0,0>=D+1,C>=0] 

* Chain [80]: 39*s(13)+101
  Such that:aux(9) =< C
s(13) =< aux(9)
aux(10) >= C
s(13) >= aux(10)

  with precondition: [A=0,B=0,C>=1,D>=2] 

* Chain [79]: 39*s(15)+134
  Such that:aux(11) =< C
s(15) =< aux(11)
aux(12) >= C
s(15) >= aux(12)

  with precondition: [A=0,B=0,C>=2,D>=3] 

* Chain [78]: 7*s(17)+46
  Such that:s(17) =< B

  with precondition: [A=0,C=0,D=0,B>=1] 

* Chain [77]: 7*s(18)+81
  Such that:s(18) =< B

  with precondition: [A=0,C=0,D=1,B>=1] 

* Chain [76]: 7*s(19)+79
  Such that:s(19) =< B

  with precondition: [A=0,C=0,D=1,B>=1] 

* Chain [75]: 7*s(20)+92
  Such that:s(20) =< B

  with precondition: [A=0,C=0,B>=1,D>=2] 

* Chain [74]: 7*s(21)+90
  Such that:s(21) =< B

  with precondition: [A=0,C=0,B>=1,D>=2] 

* Chain [73]: 7*s(22)+39*s(25)+125
  Such that:s(23) =< 1
s(22) =< B
s(25) =< s(23)
s(24) >= 1
s(25) >= s(24)

  with precondition: [A=0,C=1,D=2,B>=1] 

* Chain [72]: 7*s(26)+39*s(29)+136
  Such that:s(27) =< 1
s(26) =< B
s(29) =< s(27)
s(28) >= 1
s(29) >= s(28)

  with precondition: [A=0,C=1,B>=1,D>=3] 

* Chain [71]: 7*s(30)+33*s(31)+46
  Such that:s(30) =< B
s(31) =< C
s(31) >= C

  with precondition: [A=0,D=0,B>=1,C>=1] 

* Chain [70]: 7*s(32)+39*s(33)+90
  Such that:s(32) =< B
aux(13) =< C
s(33) =< aux(13)
aux(14) >= C
s(33) >= aux(14)

  with precondition: [A=0,D=1,B>=1,C>=1] 

* Chain [69]: 7*s(35)+33*s(36)+79
  Such that:s(35) =< B
s(36) =< C
s(36) >= C

  with precondition: [A=0,D=1,B>=1,C>=1] 

* Chain [68]: 7*s(37)+39*s(38)+123
  Such that:s(37) =< B
aux(15) =< C
s(38) =< aux(15)
aux(16) >= C
s(38) >= aux(16)

  with precondition: [A=0,D=2,B>=1,C>=2] 

* Chain [67]: 7*s(40)+38
  Such that:s(40) =< B

  with precondition: [A=0,0>=D+1,B>=1,C>=0] 

* Chain [66]: 7*s(41)+39*s(42)+101
  Such that:s(41) =< B
aux(17) =< C
s(42) =< aux(17)
aux(18) >= C
s(42) >= aux(18)

  with precondition: [A=0,B>=1,C>=1,D>=2] 

* Chain [65]: 7*s(44)+33*s(45)+90
  Such that:s(44) =< B
s(45) =< C
s(45) >= C

  with precondition: [A=0,B>=1,C>=1,D>=2] 

* Chain [64]: 7*s(46)+39*s(47)+134
  Such that:s(46) =< B
aux(19) =< C
s(47) =< aux(19)
aux(20) >= C
s(47) >= aux(20)

  with precondition: [A=0,B>=1,C>=2,D>=3] 

* Chain [63]: 7*s(49)+46
  Such that:s(49) =< A

  with precondition: [B=0,C=0,D=0,A>=1] 

* Chain [62]: 7*s(50)+81
  Such that:s(50) =< A

  with precondition: [B=0,C=0,D=1,A>=1] 

* Chain [61]: 7*s(51)+6*s(52)+90
  Such that:aux(21) =< A
s(51) =< aux(21)
s(52) =< aux(21)
s(52) >= 1

  with precondition: [B=0,C=0,D=1,A>=1] 

* Chain [60]: 7*s(53)+6*s(54)+125
  Such that:s(54) =< 1
s(53) =< A
s(54) >= 1

  with precondition: [B=0,C=0,D=2,A>=1] 

* Chain [59]: 7*s(55)+6*s(56)+123
  Such that:aux(22) =< A
s(55) =< aux(22)
s(56) =< aux(22)
s(56) >= 2

  with precondition: [B=0,C=0,D=2,A>=2] 

* Chain [58]: 7*s(57)+92
  Such that:s(57) =< A

  with precondition: [B=0,C=0,A>=1,D>=2] 

* Chain [57]: 7*s(58)+6*s(59)+101
  Such that:aux(23) =< A
s(58) =< aux(23)
s(59) =< aux(23)
s(59) >= 1

  with precondition: [B=0,C=0,A>=1,D>=2] 

* Chain [56]: 7*s(60)+6*s(61)+136
  Such that:s(61) =< 1
s(60) =< A
s(61) >= 1

  with precondition: [B=0,C=0,A>=1,D>=3] 

* Chain [55]: 7*s(62)+6*s(63)+134
  Such that:aux(24) =< A
s(62) =< aux(24)
s(63) =< aux(24)
s(63) >= 2

  with precondition: [B=0,C=0,A>=2,D>=3] 

* Chain [54]: 7*s(64)+39*s(67)+125
  Such that:s(65) =< 1
s(64) =< A
s(67) =< s(65)
s(66) >= 1
s(67) >= s(66)

  with precondition: [B=0,C=1,D=2,A>=1] 

* Chain [53]: 7*s(68)+39*s(71)+136
  Such that:s(69) =< 1
s(68) =< A
s(71) =< s(69)
s(70) >= 1
s(71) >= s(70)

  with precondition: [B=0,C=1,A>=1,D>=3] 

* Chain [52]: 7*s(72)+33*s(73)+46
  Such that:s(72) =< A
s(73) =< C
s(73) >= C

  with precondition: [B=0,D=0,A>=1,C>=1] 

* Chain [51]: 7*s(74)+6*s(75)+33*s(76)+90
  Such that:s(74) =< A
s(75) =< A+C
s(76) =< C
aux(25) >= C
s(75) >= aux(25)
s(76) >= aux(25)

  with precondition: [B=0,D=1,A>=1,C>=1] 

* Chain [50]: 7*s(77)+6*s(78)+33*s(79)+123
  Such that:s(77) =< A
s(78) =< A+C
s(79) =< C
aux(26) >= C
s(78) >= aux(26)
s(79) >= aux(26)

  with precondition: [B=0,D=2,A>=1,C>=1] 

* Chain [49]: 7*s(80)+38
  Such that:s(80) =< A

  with precondition: [B=0,0>=D+1,A>=1,C>=0] 

* Chain [48]: 7*s(81)+6*s(82)+33*s(83)+101
  Such that:s(81) =< A
s(82) =< A+C
s(83) =< C
aux(27) >= C
s(82) >= aux(27)
s(83) >= aux(27)

  with precondition: [B=0,A>=1,C>=1,D>=2] 

* Chain [47]: 7*s(84)+6*s(85)+33*s(86)+134
  Such that:s(84) =< A
s(85) =< A+C
s(86) =< C
aux(28) >= C
s(85) >= aux(28)
s(86) >= aux(28)

  with precondition: [B=0,A>=1,C>=1,D>=3] 

* Chain [46]: 7*s(87)+7*s(88)+46
  Such that:s(87) =< A
s(88) =< B

  with precondition: [C=0,D=0,A>=1,B>=1] 

* Chain [45]: 7*s(89)+7*s(90)+81
  Such that:s(89) =< A
s(90) =< B

  with precondition: [C=0,D=1,A>=1,B>=1] 

* Chain [44]: 7*s(91)+7*s(92)+6*s(93)+90
  Such that:s(92) =< B
aux(29) =< A
s(91) =< aux(29)
s(93) =< aux(29)
s(93) >= 1

  with precondition: [C=0,D=1,A>=1,B>=1] 

* Chain [43]: 7*s(94)+7*s(95)+79
  Such that:s(94) =< A
s(95) =< B

  with precondition: [C=0,D=1,A>=1,B>=1] 

* Chain [42]: 7*s(96)+7*s(97)+6*s(98)+125
  Such that:s(98) =< 1
s(96) =< A
s(97) =< B
s(98) >= 1

  with precondition: [C=0,D=2,A>=1,B>=1] 

* Chain [41]: 7*s(99)+7*s(100)+6*s(101)+123
  Such that:s(100) =< B
aux(30) =< A
s(99) =< aux(30)
s(101) =< aux(30)
s(101) >= 2

  with precondition: [C=0,D=2,A>=2,B>=1] 

* Chain [40]: 7*s(102)+7*s(103)+92
  Such that:s(102) =< A
s(103) =< B

  with precondition: [C=0,A>=1,B>=1,D>=2] 

* Chain [39]: 7*s(104)+7*s(105)+6*s(106)+101
  Such that:s(105) =< B
aux(31) =< A
s(104) =< aux(31)
s(106) =< aux(31)
s(106) >= 1

  with precondition: [C=0,A>=1,B>=1,D>=2] 

* Chain [38]: 7*s(107)+7*s(108)+90
  Such that:s(107) =< A
s(108) =< B

  with precondition: [C=0,A>=1,B>=1,D>=2] 

* Chain [37]: 7*s(109)+7*s(110)+6*s(111)+136
  Such that:s(111) =< 1
s(109) =< A
s(110) =< B
s(111) >= 1

  with precondition: [C=0,A>=1,B>=1,D>=3] 

* Chain [36]: 7*s(112)+7*s(113)+6*s(114)+134
  Such that:s(113) =< B
aux(32) =< A
s(112) =< aux(32)
s(114) =< aux(32)
s(114) >= 2

  with precondition: [C=0,A>=2,B>=1,D>=3] 

* Chain [35]: 7*s(115)+7*s(116)+39*s(119)+125
  Such that:s(117) =< 1
s(115) =< A
s(116) =< B
s(119) =< s(117)
s(118) >= 1
s(119) >= s(118)

  with precondition: [C=1,D=2,A>=1,B>=1] 

* Chain [34]: 7*s(120)+7*s(121)+39*s(124)+136
  Such that:s(122) =< 1
s(120) =< A
s(121) =< B
s(124) =< s(122)
s(123) >= 1
s(124) >= s(123)

  with precondition: [C=1,A>=1,B>=1,D>=3] 

* Chain [33]: 7*s(125)+7*s(126)+33*s(127)+46
  Such that:s(125) =< A
s(126) =< B
s(127) =< C
s(127) >= C

  with precondition: [D=0,A>=1,B>=1,C>=1] 

* Chain [32]: 7*s(128)+7*s(129)+6*s(130)+33*s(131)+90
  Such that:s(128) =< A
s(130) =< A+C
s(129) =< B
s(131) =< C
aux(33) >= C
s(130) >= aux(33)
s(131) >= aux(33)

  with precondition: [D=1,A>=1,B>=1,C>=1] 

* Chain [31]: 7*s(132)+7*s(133)+33*s(134)+79
  Such that:s(132) =< A
s(133) =< B
s(134) =< C
s(134) >= C

  with precondition: [D=1,A>=1,B>=1,C>=1] 

* Chain [30]: 7*s(135)+7*s(136)+6*s(137)+33*s(138)+123
  Such that:s(135) =< A
s(137) =< A+C
s(136) =< B
s(138) =< C
aux(34) >= C
s(137) >= aux(34)
s(138) >= aux(34)

  with precondition: [D=2,A>=1,B>=1,C>=1] 

* Chain [29]: 7*s(139)+7*s(140)+38
  Such that:s(139) =< A
s(140) =< B

  with precondition: [0>=D+1,A>=1,B>=1,C>=0] 

* Chain [28]: 7*s(141)+7*s(142)+6*s(143)+33*s(144)+101
  Such that:s(141) =< A
s(143) =< A+C
s(142) =< B
s(144) =< C
aux(35) >= C
s(143) >= aux(35)
s(144) >= aux(35)

  with precondition: [A>=1,B>=1,C>=1,D>=2] 

* Chain [27]: 7*s(145)+7*s(146)+33*s(147)+90
  Such that:s(145) =< A
s(146) =< B
s(147) =< C
s(147) >= C

  with precondition: [A>=1,B>=1,C>=1,D>=2] 

* Chain [26]: 7*s(148)+7*s(149)+6*s(150)+33*s(151)+134
  Such that:s(148) =< A
s(150) =< A+C
s(149) =< B
s(151) =< C
aux(36) >= C
s(150) >= aux(36)
s(151) >= aux(36)

  with precondition: [A>=1,B>=1,C>=1,D>=3] 


Closed-form bounds of amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D): 
-------------------------------------
* Chain [89] with precondition: [A=0,B=0,C=0,D=0] 
    - Lower bound: 46 
    - Complexity: constant
 * Chain [88] with precondition: [A=0,B=0,C=0,D=1] 
    - Lower bound: 81 
    - Complexity: constant
 * Chain [87] with precondition: [A=0,B=0,C=0,D>=2] 
    - Lower bound: 92 
    - Complexity: constant
 * Chain [86] with precondition: [A=0,B=0,C=1,D=2] 
    - Lower bound: 164 
    - Complexity: constant
 * Chain [85] with precondition: [A=0,B=0,C=1,D>=3] 
    - Lower bound: 175 
    - Complexity: constant
 * Chain [84] with precondition: [A=0,B=0,D=0,C>=1] 
    - Lower bound: 33*C+46 
    - Complexity: n
 * Chain [83] with precondition: [A=0,B=0,D=1,C>=1] 
    - Lower bound: 39*C+90 
    - Complexity: n
 * Chain [82] with precondition: [A=0,B=0,D=2,C>=2] 
    - Lower bound: 39*C+123 
    - Complexity: n
 * Chain [81] with precondition: [A=0,B=0,0>=D+1,C>=0] 
    - Lower bound: 38 
    - Complexity: constant
 * Chain [80] with precondition: [A=0,B=0,C>=1,D>=2] 
    - Lower bound: 39*C+101 
    - Complexity: n
 * Chain [79] with precondition: [A=0,B=0,C>=2,D>=3] 
    - Lower bound: 39*C+134 
    - Complexity: n
 * Chain [78] with precondition: [A=0,C=0,D=0,B>=1] 
    - Lower bound: 46 
    - Complexity: constant
 * Chain [77] with precondition: [A=0,C=0,D=1,B>=1] 
    - Lower bound: 81 
    - Complexity: constant
 * Chain [76] with precondition: [A=0,C=0,D=1,B>=1] 
    - Lower bound: 79 
    - Complexity: constant
 * Chain [75] with precondition: [A=0,C=0,B>=1,D>=2] 
    - Lower bound: 92 
    - Complexity: constant
 * Chain [74] with precondition: [A=0,C=0,B>=1,D>=2] 
    - Lower bound: 90 
    - Complexity: constant
 * Chain [73] with precondition: [A=0,C=1,D=2,B>=1] 
    - Lower bound: 164 
    - Complexity: constant
 * Chain [72] with precondition: [A=0,C=1,B>=1,D>=3] 
    - Lower bound: 175 
    - Complexity: constant
 * Chain [71] with precondition: [A=0,D=0,B>=1,C>=1] 
    - Lower bound: 33*C+46 
    - Complexity: n
 * Chain [70] with precondition: [A=0,D=1,B>=1,C>=1] 
    - Lower bound: 39*C+90 
    - Complexity: n
 * Chain [69] with precondition: [A=0,D=1,B>=1,C>=1] 
    - Lower bound: 33*C+79 
    - Complexity: n
 * Chain [68] with precondition: [A=0,D=2,B>=1,C>=2] 
    - Lower bound: 39*C+123 
    - Complexity: n
 * Chain [67] with precondition: [A=0,0>=D+1,B>=1,C>=0] 
    - Lower bound: 38 
    - Complexity: constant
 * Chain [66] with precondition: [A=0,B>=1,C>=1,D>=2] 
    - Lower bound: 39*C+101 
    - Complexity: n
 * Chain [65] with precondition: [A=0,B>=1,C>=1,D>=2] 
    - Lower bound: 33*C+90 
    - Complexity: n
 * Chain [64] with precondition: [A=0,B>=1,C>=2,D>=3] 
    - Lower bound: 39*C+134 
    - Complexity: n
 * Chain [63] with precondition: [B=0,C=0,D=0,A>=1] 
    - Lower bound: 46 
    - Complexity: constant
 * Chain [62] with precondition: [B=0,C=0,D=1,A>=1] 
    - Lower bound: 81 
    - Complexity: constant
 * Chain [61] with precondition: [B=0,C=0,D=1,A>=1] 
    - Lower bound: 96 
    - Complexity: constant
 * Chain [60] with precondition: [B=0,C=0,D=2,A>=1] 
    - Lower bound: 131 
    - Complexity: constant
 * Chain [59] with precondition: [B=0,C=0,D=2,A>=2] 
    - Lower bound: 135 
    - Complexity: constant
 * Chain [58] with precondition: [B=0,C=0,A>=1,D>=2] 
    - Lower bound: 92 
    - Complexity: constant
 * Chain [57] with precondition: [B=0,C=0,A>=1,D>=2] 
    - Lower bound: 107 
    - Complexity: constant
 * Chain [56] with precondition: [B=0,C=0,A>=1,D>=3] 
    - Lower bound: 142 
    - Complexity: constant
 * Chain [55] with precondition: [B=0,C=0,A>=2,D>=3] 
    - Lower bound: 146 
    - Complexity: constant
 * Chain [54] with precondition: [B=0,C=1,D=2,A>=1] 
    - Lower bound: 164 
    - Complexity: constant
 * Chain [53] with precondition: [B=0,C=1,A>=1,D>=3] 
    - Lower bound: 175 
    - Complexity: constant
 * Chain [52] with precondition: [B=0,D=0,A>=1,C>=1] 
    - Lower bound: 33*C+46 
    - Complexity: n
 * Chain [51] with precondition: [B=0,D=1,A>=1,C>=1] 
    - Lower bound: 39*C+90 
    - Complexity: n
 * Chain [50] with precondition: [B=0,D=2,A>=1,C>=1] 
    - Lower bound: 39*C+123 
    - Complexity: n
 * Chain [49] with precondition: [B=0,0>=D+1,A>=1,C>=0] 
    - Lower bound: 38 
    - Complexity: constant
 * Chain [48] with precondition: [B=0,A>=1,C>=1,D>=2] 
    - Lower bound: 39*C+101 
    - Complexity: n
 * Chain [47] with precondition: [B=0,A>=1,C>=1,D>=3] 
    - Lower bound: 39*C+134 
    - Complexity: n
 * Chain [46] with precondition: [C=0,D=0,A>=1,B>=1] 
    - Lower bound: 46 
    - Complexity: constant
 * Chain [45] with precondition: [C=0,D=1,A>=1,B>=1] 
    - Lower bound: 81 
    - Complexity: constant
 * Chain [44] with precondition: [C=0,D=1,A>=1,B>=1] 
    - Lower bound: 96 
    - Complexity: constant
 * Chain [43] with precondition: [C=0,D=1,A>=1,B>=1] 
    - Lower bound: 79 
    - Complexity: constant
 * Chain [42] with precondition: [C=0,D=2,A>=1,B>=1] 
    - Lower bound: 131 
    - Complexity: constant
 * Chain [41] with precondition: [C=0,D=2,A>=2,B>=1] 
    - Lower bound: 135 
    - Complexity: constant
 * Chain [40] with precondition: [C=0,A>=1,B>=1,D>=2] 
    - Lower bound: 92 
    - Complexity: constant
 * Chain [39] with precondition: [C=0,A>=1,B>=1,D>=2] 
    - Lower bound: 107 
    - Complexity: constant
 * Chain [38] with precondition: [C=0,A>=1,B>=1,D>=2] 
    - Lower bound: 90 
    - Complexity: constant
 * Chain [37] with precondition: [C=0,A>=1,B>=1,D>=3] 
    - Lower bound: 142 
    - Complexity: constant
 * Chain [36] with precondition: [C=0,A>=2,B>=1,D>=3] 
    - Lower bound: 146 
    - Complexity: constant
 * Chain [35] with precondition: [C=1,D=2,A>=1,B>=1] 
    - Lower bound: 164 
    - Complexity: constant
 * Chain [34] with precondition: [C=1,A>=1,B>=1,D>=3] 
    - Lower bound: 175 
    - Complexity: constant
 * Chain [33] with precondition: [D=0,A>=1,B>=1,C>=1] 
    - Lower bound: 33*C+46 
    - Complexity: n
 * Chain [32] with precondition: [D=1,A>=1,B>=1,C>=1] 
    - Lower bound: 39*C+90 
    - Complexity: n
 * Chain [31] with precondition: [D=1,A>=1,B>=1,C>=1] 
    - Lower bound: 33*C+79 
    - Complexity: n
 * Chain [30] with precondition: [D=2,A>=1,B>=1,C>=1] 
    - Lower bound: 39*C+123 
    - Complexity: n
 * Chain [29] with precondition: [0>=D+1,A>=1,B>=1,C>=0] 
    - Lower bound: 38 
    - Complexity: constant
 * Chain [28] with precondition: [A>=1,B>=1,C>=1,D>=2] 
    - Lower bound: 39*C+101 
    - Complexity: n
 * Chain [27] with precondition: [A>=1,B>=1,C>=1,D>=2] 
    - Lower bound: 33*C+90 
    - Complexity: n
 * Chain [26] with precondition: [A>=1,B>=1,C>=1,D>=3] 
    - Lower bound: 39*C+134 
    - Complexity: n
 
### Partitioned lower bound of amor/atva/Queue_enqueG(Lamor/atva/QNode;Lamor/atva/QNode;[CI)V(A,B,C,D): 
* 38 
 if [0>=D+1,A>=0,B>=0,C>=0]
* 46 
 if [C=0,D=0,A>=0,B>=0]
* 79 
 if [C=0,D=1,A>=0,B>=1]
* 81 
 if [B=0,C=0,D=1,A>=0]
* 90 
 if [C=0,A>=0,B>=1,D>=2]
* 92 
 if [B=0,C=0,A>=0,D>=2]
* 33*C+46 
 if [D=0,A>=0,B>=0,C>=1]
* 33*C+79 
 if [D=1,A>=0,B>=1,C>=1]
* 33*C+90 
 if [A>=0,B>=1,C>=1,D>=2]
* 39*C+90 
 if [B=0,D=1,A>=0,C>=1]
* 39*C+101 
 if [B=0,A>=0,C>=1,D>=2]
Possible lower bounds : [38,46,79,81,90,92,33*C+46,33*C+79,33*C+90,39*C+90,39*C+101]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 69 ms.
* Invariants computed in 845 ms.
   - Backward Invariants 418 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 1114 ms.
* Termination proved in 40 ms.
* Upper bounds computed in 2099 ms.
   - Equation cost structures 582 ms.
   - Phase cost structures 89 ms.
   - Chain cost structures 535 ms.
   - Solving cost expressions 60 ms.
* Total analysis performed in 4633 ms.

