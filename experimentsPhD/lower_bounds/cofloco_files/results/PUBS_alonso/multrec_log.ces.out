
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [14_loop/2]
1. recursive : [amor/atva/MultipleRecursion_logx(II)V/2]
2. non_recursive : [amor/atva/MultipleRecursion_log(II)V/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into 14_loop/2
1. SCC is partially evaluated into amor/atva/MultipleRecursion_logx(II)V/2
2. SCC is partially evaluated into amor/atva/MultipleRecursion_log(II)V/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations 14_loop/2 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 


#### Refined cost equations 14_loop/2 
* CE 11: 14_loop(A,A) = 3
     [A>=0] 
* CE 12: 14_loop(A,B) = 5+ 14_loop(A,C)
     [A>=B+1,B>=0,B+1=C] 

### Cost equations --> "Loop" of 14_loop/2 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of 14_loop/2 
* Loop 10: 14_loop(A,B)->  14_loop(A,B')
                  [A>=B+1,B>=0,B+1=B'] 
* Loop 11: 14_loop(A,A) [A>=0] 

### Ranking functions of CR 14_loop(A,B) 
* RF of phase [10]: [A-B]

#### Partial ranking functions of CR 14_loop(A,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    A-B


### Resulting Chains:14_loop(A,B) 
* [[10],11]
* [11]


### Specialization of cost equations amor/atva/MultipleRecursion_logx(II)V/2 
* CE 8 is refined into CE [13,14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17] 


#### Refined cost equations amor/atva/MultipleRecursion_logx(II)V/2 
* CE 13: amor/atva/MultipleRecursion_logx(II)V(A,B) = 37+ 14_loop(A,C):[[10],11]+ amor/atva/MultipleRecursion_logx(II)V(D,E)+ amor/atva/MultipleRecursion_logx(II)V(F,G)
     [A>=F,2*G+1>=B,2*E+1>=B,B>=2*G,B>=2*E,F>=0,A>=1,B>=2,A=D+F,C=0] 
* CE 14: amor/atva/MultipleRecursion_logx(II)V(A,B) = 37+ 14_loop(C,D):[11]+ amor/atva/MultipleRecursion_logx(II)V(E,F)+ amor/atva/MultipleRecursion_logx(II)V(G,H)
     [2*H+1>=B,2*F+1>=B,B>=2*H,B>=2*F,B>=2,G=0,E=0,D=0,C=0,A=0] 
* CE 15: amor/atva/MultipleRecursion_logx(II)V(A,B) = 25
     [B>=0,A>=0,1>=B] 
* CE 16: amor/atva/MultipleRecursion_logx(II)V(A,B) = 17
     [B>=0,A>=0] 
* CE 17: amor/atva/MultipleRecursion_logx(II)V(A,B) = 14
     [B>=0,A>=0] 

### Cost equations --> "Loop" of amor/atva/MultipleRecursion_logx(II)V/2 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [13] --> Loop 15 
* CEs [14] --> Loop 16 

#### Loops of amor/atva/MultipleRecursion_logx(II)V/2 
* Loop 12: amor/atva/MultipleRecursion_logx(II)V(A,B) [B>=0,A>=0] 
* Loop 13: amor/atva/MultipleRecursion_logx(II)V(A,B) [B>=0,A>=0] 
* Loop 14: amor/atva/MultipleRecursion_logx(II)V(A,B) [B>=0,A>=0,1>=B] 
* Loop 15: amor/atva/MultipleRecursion_logx(II)V(A,B)->  amor/atva/MultipleRecursion_logx(II)V(A',B')  amor/atva/MultipleRecursion_logx(II)V(A'2,B'2)
                  [A>=A'2,2*B'2+1>=B,2*B'+1>=B,B>=2*B'2,B>=2*B',A'2>=0,B>=2,A>=1,A=A'+A'2] 
* Loop 16: amor/atva/MultipleRecursion_logx(II)V(A,B)->  amor/atva/MultipleRecursion_logx(II)V(A',B')  amor/atva/MultipleRecursion_logx(II)V(A'2,B'2)
                  [2*B'2+1>=B,2*B'+1>=B,B>=2*B'2,B>=2*B',B>=2,A'2=0,A'=0,A=0] 

### Ranking functions of CR amor/atva/MultipleRecursion_logx(II)V(A,B) 
* RF of phase [15]: [B-1]
* RF of phase [16]: [B-1]

#### Partial ranking functions of CR amor/atva/MultipleRecursion_logx(II)V(A,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1,15:2]:
    B-1
* Partial RF of phase [16]:
  - RF of loop [16:1,16:2]:
    B-1


### Resulting Chains:amor/atva/MultipleRecursion_logx(II)V(A,B) 
* [14]
* [13]
* [12]
* [multiple([15],[[multiple([16],[[14],[13],[12]])],[14],[13],[12]])]


### Specialization of cost equations amor/atva/MultipleRecursion_log(II)V/2 
* CE 2 is refined into CE [18] 
* CE 4 is refined into CE [19,20,21,22] 
* CE 3 is refined into CE [23] 


#### Refined cost equations amor/atva/MultipleRecursion_log(II)V/2 
* CE 18: amor/atva/MultipleRecursion_log(II)V(A,B) = 4
     [B>=A+1] 
* CE 19: amor/atva/MultipleRecursion_log(II)V(A,B) = 9+ amor/atva/MultipleRecursion_logx(II)V(A,B):[14]
     [A>=B,B>=0,1>=B] 
* CE 20: amor/atva/MultipleRecursion_log(II)V(A,B) = 9+ amor/atva/MultipleRecursion_logx(II)V(A,B):[13]
     [A>=B,B>=0] 
* CE 21: amor/atva/MultipleRecursion_log(II)V(A,B) = 9+ amor/atva/MultipleRecursion_logx(II)V(A,B):[12]
     [A>=B,B>=0] 
* CE 22: amor/atva/MultipleRecursion_log(II)V(A,B) = 9+ amor/atva/MultipleRecursion_logx(II)V(A,B):[multiple([15],[[multiple([16],[[14],[13],[12]])],[14],[13],[12]])]
     [A>=B,B>=2] 
* CE 23: amor/atva/MultipleRecursion_log(II)V(A,B) = 6
     [A>=B,0>=B+1] 

### Cost equations --> "Loop" of amor/atva/MultipleRecursion_log(II)V/2 
* CEs [18] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [19] --> Loop 22 

#### Loops of amor/atva/MultipleRecursion_log(II)V/2 
* Loop 17: amor/atva/MultipleRecursion_log(II)V(A,B) [B>=A+1] 
* Loop 18: amor/atva/MultipleRecursion_log(II)V(A,B) [A>=B,B>=2] 
* Loop 19: amor/atva/MultipleRecursion_log(II)V(A,B) [A>=B,B>=0] 
* Loop 20: amor/atva/MultipleRecursion_log(II)V(A,B) [A>=B,B>=0] 
* Loop 21: amor/atva/MultipleRecursion_log(II)V(A,B) [A>=B,0>=B+1] 
* Loop 22: amor/atva/MultipleRecursion_log(II)V(A,B) [A>=B,B>=0,1>=B] 

### Ranking functions of CR amor/atva/MultipleRecursion_log(II)V(A,B) 

#### Partial ranking functions of CR amor/atva/MultipleRecursion_log(II)V(A,B) 


### Resulting Chains:amor/atva/MultipleRecursion_log(II)V(A,B) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:14_loop(A,B) -> [14_loop(A',B')] 
5
#### Cost of phase [10]:14_loop(A,B) -> [14_loop(A',B')] 
5*it(10)+0
  Such that:it(10) =< A-B
it(10) =< A-B-A'+B'
it(10) >= A-B-A'+B'

#### Cost of chains of 14_loop(A,B):
* Chain [[10],11]: 5*it(10)+3
  Such that:it(10) =< A-B
it(10) >= A-B

  with precondition: [B>=0,A>=B+1] 

* Chain [11]: 3
  with precondition: [B=A,B>=0] 


#### Cost of loops [16] 

 * loop 16:amor/atva/MultipleRecursion_logx(II)V(A,B) -> [amor/atva/MultipleRecursion_logx(II)V(A',B'),amor/atva/MultipleRecursion_logx(II)V(A'2,B'2)] 
40
#### Cost of phase [16]:amor/atva/MultipleRecursion_logx(II)V(A,B) -> [] 
40*it(16)+14*it([12])+17*it([13])+25*it([14])+0
  Such that:it([12])+it([13])+it([14]) =< 2*B
aux(11) =< B-1
it(16) =< aux(11)
it(16) =< it([12])* (1/2)+it([13])* (1/2)+it([14])* (1/2)+aux(11)

#### Cost of loops [15] 

 * loop 15:amor/atva/MultipleRecursion_logx(II)V(A,B) -> [amor/atva/MultipleRecursion_logx(II)V(A',B'),amor/atva/MultipleRecursion_logx(II)V(A'2,B'2)] 
5*s(2)+40
  Such that:s(2) =< A
s(2) >= A

#### Cost of phase [15]:amor/atva/MultipleRecursion_logx(II)V(A,B) -> [] 
40*it(15)+14*it([12])+17*it([13])+25*it([14])+5*s(3)+40*s(4)+14*s(5)+17*s(6)+25*s(7)+0
  Such that:aux(19) =< A
it([multiple([16],[[14],[13],[12]])]) =< B/2
aux(32) =< B-1
aux(33) =< 2*B
it(15)+it([multiple([16],[[14],[13],[12]])]) =< aux(32)
s(8) =< aux(32)
it([12])+it([13])+it([14])+it([multiple([16],[[14],[13],[12]])]) =< aux(33)
it([12])+it([13])+it([14])+s(5)+s(6)+s(7) =< aux(33)
s(8) =< it([12])* (1/2)+it([13])* (1/2)+it([14])* (1/2)+aux(32)
it(15)+it([multiple([16],[[14],[13],[12]])]) =< it([12])* (1/2)+it([13])* (1/2)+it([14])* (1/2)+aux(32)
s(8) =< it([multiple([16],[[14],[13],[12]])])*aux(32)
s(3) =< it(15)*aux(19)
s(4) =< s(8)
s(4) =< s(5)* (1/2)+s(6)* (1/2)+s(7)* (1/2)+s(8)

#### Cost of chains of amor/atva/MultipleRecursion_logx(II)V(A,B):
* Chain [14]: 25
  with precondition: [1>=B,A>=0,B>=0] 

* Chain [13]: 17
  with precondition: [A>=0,B>=0] 

* Chain [12]: 14
  with precondition: [A>=0,B>=0] 

* Chain [multiple([15],[[multiple([16],[[14],[13],[12]])],[14],[13],[12]])]: 40*it(15)+14*it([12])+17*it([13])+25*it([14])+5*s(3)+40*s(4)+14*s(5)+17*s(6)+25*s(7)+0
  Such that:aux(19) =< A
it([multiple([16],[[14],[13],[12]])]) =< B/2
aux(32) =< B-1
aux(33) =< 2*B
it(15)+it([multiple([16],[[14],[13],[12]])]) =< aux(32)
s(8) =< aux(32)
it([12])+it([13])+it([14])+it([multiple([16],[[14],[13],[12]])]) =< aux(33)
it([12])+it([13])+it([14])+s(5)+s(6)+s(7) =< aux(33)
s(8) =< it([12])* (1/2)+it([13])* (1/2)+it([14])* (1/2)+aux(32)
it(15)+it([multiple([16],[[14],[13],[12]])]) =< it([12])* (1/2)+it([13])* (1/2)+it([14])* (1/2)+aux(32)
s(8) =< it([multiple([16],[[14],[13],[12]])])*aux(32)
s(3) =< it(15)*aux(19)
s(4) =< s(8)
s(4) =< s(5)* (1/2)+s(6)* (1/2)+s(7)* (1/2)+s(8)

  with precondition: [A>=1,B>=2] 


#### Cost of chains of amor/atva/MultipleRecursion_log(II)V(A,B):
* Chain [22]: 34
  with precondition: [1>=B,B>=0,A>=B] 

* Chain [21]: 6
  with precondition: [0>=B+1,A>=B] 

* Chain [20]: 26
  with precondition: [B>=0,A>=B] 

* Chain [19]: 23
  with precondition: [B>=0,A>=B] 

* Chain [18]: 40*s(13)+14*s(15)+17*s(16)+25*s(17)+14*s(18)+17*s(19)+25*s(20)+5*s(21)+40*s(22)+9
  Such that:s(9) =< A
s(11) =< B-1
s(12) =< 2*B
s(10) =< B/2
s(10)+s(13) =< s(11)
s(14) =< s(11)
s(10)+s(15)+s(16)+s(17) =< s(12)
s(15)+s(16)+s(17)+s(18)+s(19)+s(20) =< s(12)
s(14) =< s(15)* (1/2)+s(16)* (1/2)+s(17)* (1/2)+s(11)
s(10)+s(13) =< s(15)* (1/2)+s(16)* (1/2)+s(17)* (1/2)+s(11)
s(14) =< s(10)*s(11)
s(21) =< s(13)*s(9)
s(22) =< s(14)
s(22) =< s(18)* (1/2)+s(19)* (1/2)+s(20)* (1/2)+s(14)

  with precondition: [B>=2,A>=B] 

* Chain [17]: 4
  with precondition: [B>=A+1] 


Closed-form bounds of amor/atva/MultipleRecursion_log(II)V(A,B): 
-------------------------------------
* Chain [22] with precondition: [1>=B,B>=0,A>=B] 
    - Lower bound: 34 
    - Complexity: constant
 * Chain [21] with precondition: [0>=B+1,A>=B] 
    - Lower bound: 6 
    - Complexity: constant
 * Chain [20] with precondition: [B>=0,A>=B] 
    - Lower bound: 26 
    - Complexity: constant
 * Chain [19] with precondition: [B>=0,A>=B] 
    - Lower bound: 23 
    - Complexity: constant
 * Chain [18] with precondition: [B>=2,A>=B] 
    - Lower bound: 9 
    - Complexity: constant
 * Chain [17] with precondition: [B>=A+1] 
    - Lower bound: 4 
    - Complexity: constant
 
### Partitioned lower bound of amor/atva/MultipleRecursion_log(II)V(A,B): 
* 4 
 if [B>=A+1]
* 6 
 if [0>=B+1,A>=B]
* 9 
 if [B>=2,A>=B]
* 23 
 if [1>=B,B>=0,A>=B]
Possible lower bounds : [4,6,9,23]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 91 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 97 ms.
* Termination proved in 26 ms.
* Upper bounds computed in 274 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 219 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 556 ms.

