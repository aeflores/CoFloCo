
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [java/lang/Object_<init>()V/1]
1. non_recursive : [java/lang/Character_<init>(C)V/2]
2. non_recursive : [java/lang/Number_<init>()V/1]
3. non_recursive : [java/lang/Double_<init>(D)V/3]
4. recursive : [6_loop/5]
5. recursive : [2_loop/6]
6. non_recursive : [amor/atva/Peak_peak(I)V/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into 6_loop/5
5. SCC is partially evaluated into 2_loop/6
6. SCC is partially evaluated into amor/atva/Peak_peak(I)V/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations 6_loop/5 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations 6_loop/5 
* CE 7: 6_loop(A,B,C,C,D) = 0
     [2*C+3*B+1>=A,A>=2*C+B,2*C>=D+1,D>=C,B>=0] 
* CE 8: 6_loop(A,B,C,C,D) = 10+ 6_loop(A,B,C,C,E)
     [2*C+3*B+1>=A,A>=2*C+B,C>=D+1,D>=0,B>=0,D+1=E] 

### Cost equations --> "Loop" of 6_loop/5 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of 6_loop/5 
* Loop 6: 6_loop(A,B,C,C,D)->  6_loop(A,B,C,C,A')
                  [2*C+3*B+1>=A,A>=2*C+B,C>=D+1,D>=0,B>=0,D+1=A'] 
* Loop 7: 6_loop(A,B,C,C,D) [2*C+3*B+1>=A,A>=2*C+B,2*C>=D+1,D>=C,B>=0] 

### Ranking functions of CR 6_loop(A,B,C,D,E) 
* RF of phase [6]: [A/2-B/2-E-1/2,A/2-E-1/2,C-E,D-E]

#### Partial ranking functions of CR 6_loop(A,B,C,D,E) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    A/2-B/2-E-1/2
    A/2-E-1/2
    C-E
    D-E


### Resulting Chains:6_loop(A,B,C,D,E) 
* [[6],7]


### Specialization of cost equations 2_loop/6 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 


#### Refined cost equations 2_loop/6 
* CE 9: 2_loop(A,B,C,D,D,E) = 0
     [A+3*C+1>=2*D+B,A+3*C>=B,B>=A+C,E>=D,C>=D,A>=D,1>=A] 
* CE 10: 2_loop(A,B,C,D,D,E) = 1*aux(2)+0
  Such that:aux(2) =< -C+4*F
aux(2) >= -C+4*F
+ 6_loop(B,C,G,G,H):[[6],7]+ 2_loop(G,B,F,G,G,I)
     [A+3*C+1>=2*D+B,A+3*C>=B,B>=A+C,I>=G,C>=D,E>=D,A>=D,2*G+1>=A,A>=2*G,G>=1,C+G=F,H=0] 

### Cost equations --> "Loop" of 2_loop/6 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of 2_loop/6 
* Loop 8: 2_loop(A,B,C,D,D,E)->  2_loop(A',B,B',A',A',C')
                  [A+3*C+1>=2*D+B,A+3*C>=B,B>=A+C,C'>=A',E>=D,C>=D,A>=D,2*A'+1>=A,A>=2*A',A'>=1,C+A'=B'] 
* Loop 9: 2_loop(A,B,C,D,D,E) [A+3*C+1>=2*D+B,A+3*C>=B,B>=A+C,E>=D,C>=D,A>=D,1>=A] 

### Ranking functions of CR 2_loop(A,B,C,D,E,F) 
* RF of phase [8]: [A-1,B-C-1]

#### Partial ranking functions of CR 2_loop(A,B,C,D,E,F) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    A-1
    B-C-1


### Resulting Chains:2_loop(A,B,C,D,E,F) 
* [[8],9]
* [9]


### Specialization of cost equations amor/atva/Peak_peak(I)V/1 
* CE 2 is refined into CE [11,12] 


#### Refined cost equations amor/atva/Peak_peak(I)V/1 
* CE 11: amor/atva/Peak_peak(I)V(A) = 1*aux(1)+0
  Such that:aux(1) =< 4*A
aux(1) >= 4*A
+ 2_loop(A,A,B,C,D,E):[[8],9]
     [A>=2,E=0,D=0,C=0,B=0] 
* CE 12: amor/atva/Peak_peak(I)V(A) = 1*aux(1)+0
  Such that:aux(1) =< 4*A
aux(1) >= 4*A
+ 2_loop(A,A,B,C,D,E):[9]
     [A>=0,1>=A,E=0,D=0,C=0,B=0] 

### Cost equations --> "Loop" of amor/atva/Peak_peak(I)V/1 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of amor/atva/Peak_peak(I)V/1 
* Loop 10: amor/atva/Peak_peak(I)V(A) [A>=2] 
* Loop 11: amor/atva/Peak_peak(I)V(A) [A>=0,1>=A] 

### Ranking functions of CR amor/atva/Peak_peak(I)V(A) 

#### Partial ranking functions of CR amor/atva/Peak_peak(I)V(A) 


### Resulting Chains:amor/atva/Peak_peak(I)V(A) 
* [11]
* [10]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:6_loop(A,B,C,D,E) -> [6_loop(A',B',C',D',E')] 
10
#### Cost of phase [6]:6_loop(A,B,C,D,E) -> [6_loop(A',B',C',D',E')] 
10*it(6)+0
  Such that:it(6) =< A/2-B/2-E-1/2
it(6) =< A/2-B/2-E-A'/2+B'/2+E'
it(6) =< A/2-E-1/2
it(6) =< A/2-E-A'/2+E'
it(6) =< C-E
it(6) =< C-E-C'+E'
it(6) =< D-E
it(6) =< D-E-D'+E'
it(6) >= A/2-B/2-E-A'/2+B'/2+E'
it(6) >= A/2-E-A'/2+E'
it(6) >= C-E-C'+E'
it(6) >= D-E-D'+E'

#### Cost of chains of 6_loop(A,B,C,D,E):
* Chain [[6],7]: 10*it(6)+0
  Such that:it(6) =< C-E
it(6) >= C-E

  with precondition: [C=D,B>=0,E>=0,C>=E+1,A>=2*C+B,2*C+3*B+1>=A] 


#### Cost of loops [8] 

 * loop 8:2_loop(A,B,C,D,E,F) -> [2_loop(A',B',C',D',E',F')] 
1*s(3)+10*s(2)+0
  Such that:s(2) =< A'
s(3) =< A'+3*C'
s(2) >= A'
s(3) >= A'+3*C'

#### Cost of phase [8]:2_loop(A,B,C,D,E,F) -> [2_loop(A',B',C',D',E',F')] 
1*s(4)+10*s(5)+0
  Such that:s(5) =< -A+3*B-3*C-3
s(5) =< -A+3*B-3*C+A'-3*B'+3*C'
it(8) =< A-1
it(8) =< A-A'
aux(7) =< 3*A+3*C-2
it(8) =< B-C-1
it(8) =< B-C-B'+C'
s(4) =< it(8)*aux(7)
s(5) >= -C+C'

#### Cost of chains of 2_loop(A,B,C,D,E,F):
* Chain [[8],9]: 1*s(4)+10*s(5)+0
  Such that:s(5) =< -A+3*B-3*C-3
it(8) =< A-1
aux(7) =< 3*A+3*C-2
s(4) =< it(8)*aux(7)
s(5) >= 3/4*A-5/4

  with precondition: [D=E,A>=2,A>=D,C>=D,F>=D,B>=A+C,A+2*C>=B,A+2*C+1>=B+D] 

* Chain [9]: 0
  with precondition: [E=D,1>=A,A>=E,C>=E,F>=E,B>=A+C,A+2*C>=B] 


#### Cost of chains of amor/atva/Peak_peak(I)V(A):
* Chain [11]: 1*aux(1)+0
  Such that:aux(1) =< 4*A
aux(1) >= 4*A

  with precondition: [1>=A,A>=0] 

* Chain [10]: 1*aux(1)+10*s(6)+1*s(9)+0
  Such that:s(7) =< A-1
s(6) =< 2*A-3
s(8) =< 3*A-2
aux(1) =< 4*A
s(9) =< s(7)*s(8)
aux(1) >= 4*A
s(6) >= 3/4*A-5/4

  with precondition: [A>=2] 


Closed-form bounds of amor/atva/Peak_peak(I)V(A): 
-------------------------------------
* Chain [11] with precondition: [1>=A,A>=0] 
    - Lower bound: 4*A 
    - Complexity: n
 * Chain [10] with precondition: [A>=2] 
    - Lower bound: 23/2*A-25/2 
    - Complexity: n
 
### Partitioned lower bound of amor/atva/Peak_peak(I)V(A): 
* 4*A 
 if [1>=A,A>=0]
* 23/2*A-25/2 
 if [A>=2]
Possible lower bounds : [4*A,23/2*A-25/2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 127 ms.
   - Backward Invariants 49 ms.
   - Transitive Invariants 35 ms.
* Refinement performed in 98 ms.
* Termination proved in 53 ms.
* Upper bounds computed in 376 ms.
   - Equation cost structures 67 ms.
   - Phase cost structures 224 ms.
   - Chain cost structures 110 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 742 ms.

