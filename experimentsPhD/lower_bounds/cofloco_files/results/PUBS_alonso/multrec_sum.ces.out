
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [13_loop/2]
1. recursive : [amor/atva/MultipleRecursion_sumx(I)V/1]
2. non_recursive : [amor/atva/MultipleRecursion_sum(I)V/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into 13_loop/2
1. SCC is partially evaluated into amor/atva/MultipleRecursion_sumx(I)V/1
2. SCC is partially evaluated into amor/atva/MultipleRecursion_sum(I)V/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations 13_loop/2 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations 13_loop/2 
* CE 10: 13_loop(A,B) = 3
     [B>=A,A>=1] 
* CE 11: 13_loop(A,B) = 5+ 13_loop(A,C)
     [A>=B+1,B>=0,B+1=C] 

### Cost equations --> "Loop" of 13_loop/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of 13_loop/2 
* Loop 9: 13_loop(A,B)->  13_loop(A,B')
                  [A>=B+1,B>=0,B+1=B'] 
* Loop 10: 13_loop(A,B) [B>=A,A>=1] 

### Ranking functions of CR 13_loop(A,B) 
* RF of phase [9]: [A-B]

#### Partial ranking functions of CR 13_loop(A,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A-B


### Resulting Chains:13_loop(A,B) 
* [[9],10]


### Specialization of cost equations amor/atva/MultipleRecursion_sumx(I)V/1 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15] 


#### Refined cost equations amor/atva/MultipleRecursion_sumx(I)V/1 
* CE 12: amor/atva/MultipleRecursion_sumx(I)V(A) = 37+ 13_loop(B,C):[[9],10]+ amor/atva/MultipleRecursion_sumx(I)V(D)+ amor/atva/MultipleRecursion_sumx(I)V(E)
     [A>=B+D,D>=0,B>=1,B+D+E=A,C=0] 
* CE 13: amor/atva/MultipleRecursion_sumx(I)V(A) = 24
     [A>=0] 
* CE 14: amor/atva/MultipleRecursion_sumx(I)V(A) = 21
     [A>=0] 
* CE 15: amor/atva/MultipleRecursion_sumx(I)V(A) = 19
     [A>=0] 

### Cost equations --> "Loop" of amor/atva/MultipleRecursion_sumx(I)V/1 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of amor/atva/MultipleRecursion_sumx(I)V/1 
* Loop 11: amor/atva/MultipleRecursion_sumx(I)V(A) [A>=0] 
* Loop 12: amor/atva/MultipleRecursion_sumx(I)V(A) [A>=0] 
* Loop 13: amor/atva/MultipleRecursion_sumx(I)V(A) [A>=0] 
* Loop 14: amor/atva/MultipleRecursion_sumx(I)V(A)->  amor/atva/MultipleRecursion_sumx(I)V(A')  amor/atva/MultipleRecursion_sumx(I)V(A'2)
                  [A>=A'+A'2+1,A'2>=0,A'>=0] 

### Ranking functions of CR amor/atva/MultipleRecursion_sumx(I)V(A) 
* RF of phase [14]: [A]

#### Partial ranking functions of CR amor/atva/MultipleRecursion_sumx(I)V(A) 
* Partial RF of phase [14]:
  - RF of loop [14:1,14:2]:
    A


### Resulting Chains:amor/atva/MultipleRecursion_sumx(I)V(A) 
* [13]
* [12]
* [11]
* [multiple([14],[[13],[12],[11]])]


### Specialization of cost equations amor/atva/MultipleRecursion_sum(I)V/1 
* CE 3 is refined into CE [16,17,18,19] 
* CE 2 is refined into CE [20] 


#### Refined cost equations amor/atva/MultipleRecursion_sum(I)V/1 
* CE 16: amor/atva/MultipleRecursion_sum(I)V(A) = 5+ amor/atva/MultipleRecursion_sumx(I)V(A):[13]
     [A>=0] 
* CE 17: amor/atva/MultipleRecursion_sum(I)V(A) = 5+ amor/atva/MultipleRecursion_sumx(I)V(A):[12]
     [A>=0] 
* CE 18: amor/atva/MultipleRecursion_sum(I)V(A) = 5+ amor/atva/MultipleRecursion_sumx(I)V(A):[11]
     [A>=0] 
* CE 19: amor/atva/MultipleRecursion_sum(I)V(A) = 5+ amor/atva/MultipleRecursion_sumx(I)V(A):[multiple([14],[[13],[12],[11]])]
     [A>=1] 
* CE 20: amor/atva/MultipleRecursion_sum(I)V(A) = 3
     [0>=A+1] 

### Cost equations --> "Loop" of amor/atva/MultipleRecursion_sum(I)V/1 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of amor/atva/MultipleRecursion_sum(I)V/1 
* Loop 15: amor/atva/MultipleRecursion_sum(I)V(A) [A>=1] 
* Loop 16: amor/atva/MultipleRecursion_sum(I)V(A) [A>=0] 
* Loop 17: amor/atva/MultipleRecursion_sum(I)V(A) [A>=0] 
* Loop 18: amor/atva/MultipleRecursion_sum(I)V(A) [A>=0] 
* Loop 19: amor/atva/MultipleRecursion_sum(I)V(A) [0>=A+1] 

### Ranking functions of CR amor/atva/MultipleRecursion_sum(I)V(A) 

#### Partial ranking functions of CR amor/atva/MultipleRecursion_sum(I)V(A) 


### Resulting Chains:amor/atva/MultipleRecursion_sum(I)V(A) 
* [19]
* [18]
* [17]
* [16]
* [15]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:13_loop(A,B) -> [13_loop(A',B')] 
5
#### Cost of phase [9]:13_loop(A,B) -> [13_loop(A',B')] 
5*it(9)+0
  Such that:it(9) =< A-B
it(9) =< A-B-A'+B'
it(9) >= A-B-A'+B'

#### Cost of chains of 13_loop(A,B):
* Chain [[9],10]: 5*it(9)+3
  Such that:it(9) =< A-B
it(9) >= A-B

  with precondition: [B>=0,A>=B+1] 


#### Cost of loops [14] 

 * loop 14:amor/atva/MultipleRecursion_sumx(I)V(A) -> [amor/atva/MultipleRecursion_sumx(I)V(A'),amor/atva/MultipleRecursion_sumx(I)V(A'2)] 
5*s(2)+40
  Such that:s(2) =< A-A'-A'2
s(2) >= A-A'-A'2

#### Cost of phase [14]:amor/atva/MultipleRecursion_sumx(I)V(A) -> [] 
45*it(14)+19*it([11])+21*it([12])+24*it([13])+0
  Such that:it([11])+it([12])+it([13]) =< A+1
aux(11) =< A
it(14) =< aux(11)

#### Cost of chains of amor/atva/MultipleRecursion_sumx(I)V(A):
* Chain [13]: 24
  with precondition: [A>=0] 

* Chain [12]: 21
  with precondition: [A>=0] 

* Chain [11]: 19
  with precondition: [A>=0] 

* Chain [multiple([14],[[13],[12],[11]])]: 45*it(14)+19*it([11])+21*it([12])+24*it([13])+0
  Such that:it([11])+it([12])+it([13]) =< A+1
aux(11) =< A
it(14) =< aux(11)

  with precondition: [A>=1] 


#### Cost of chains of amor/atva/MultipleRecursion_sum(I)V(A):
* Chain [19]: 3
  with precondition: [0>=A+1] 

* Chain [18]: 29
  with precondition: [A>=0] 

* Chain [17]: 26
  with precondition: [A>=0] 

* Chain [16]: 24
  with precondition: [A>=0] 

* Chain [15]: 19*s(4)+21*s(5)+24*s(6)+45*s(8)+5
  Such that:s(7) =< A
s(6)+s(5)+s(4) =< A+1
s(8) =< s(7)

  with precondition: [A>=1] 


Closed-form bounds of amor/atva/MultipleRecursion_sum(I)V(A): 
-------------------------------------
* Chain [19] with precondition: [0>=A+1] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [18] with precondition: [A>=0] 
    - Lower bound: 29 
    - Complexity: constant
 * Chain [17] with precondition: [A>=0] 
    - Lower bound: 26 
    - Complexity: constant
 * Chain [16] with precondition: [A>=0] 
    - Lower bound: 24 
    - Complexity: constant
 * Chain [15] with precondition: [A>=1] 
    - Lower bound: 5 
    - Complexity: constant
 
### Partitioned lower bound of amor/atva/MultipleRecursion_sum(I)V(A): 
* 3 
 if [0>=A+1]
* 5 
 if [A>=1]
* 24 
 if [A=0]
Possible lower bounds : [3,5,24]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 30 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 40 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 100 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 66 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 217 ms.

