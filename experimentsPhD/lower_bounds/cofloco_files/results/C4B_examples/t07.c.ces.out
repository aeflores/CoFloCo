Warning: Ignored call to eval_t07_stop/1 in equation eval_t07_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t07_bb1_in/4,eval_t07_bb2_in/4]
1. recursive : [eval_t07_bb3_in/3,eval_t07_bb4_in/3]
2. recursive : [eval_t07_bb5_in/2,eval_t07_bb6_in/2]
3. non_recursive : [eval_t07_bb7_in/1]
4. non_recursive : [loop_cont_eval_t07_bb5_in/2]
5. non_recursive : [loop_cont_eval_t07_bb3_in/3]
6. non_recursive : [loop_cont_eval_t07_bb1_in/3]
7. non_recursive : [eval_t07_4/3]
8. non_recursive : [eval_t07_3/3]
9. non_recursive : [eval_t07_2/3]
10. non_recursive : [eval_t07_1/3]
11. non_recursive : [eval_t07_0/3]
12. non_recursive : [eval_t07_bb0_in/3]
13. non_recursive : [eval_t07_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t07_bb1_in/4
1. SCC is partially evaluated into eval_t07_bb3_in/3
2. SCC is partially evaluated into eval_t07_bb5_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_t07_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t07_bb1_in/4 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 


#### Refined cost equations eval_t07_bb1_in/4 
* CE 9: eval_t07_bb1_in(A,B,C,A) = 0
     [0>=B,C=4] 
* CE 10: eval_t07_bb1_in(V__01,V__0,B,C) = 1+ eval_t07_bb1_in(D,E,F,C)
     [V__0>=1,V__0=E+1,D=V__01+2,F=4,B=4] 

### Cost equations --> "Loop" of eval_t07_bb1_in/4 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_t07_bb1_in/4 
* Loop 8: eval_t07_bb1_in(V__01,V__0,B,C)->  eval_t07_bb1_in(V__01',V__0',B',C)
                  [V__0>=1,V__0=V__0'+1,V__01+2=V__01',B'=4,B=4] 
* Loop 9: eval_t07_bb1_in(A,B,C,A) [0>=B,C=4] 

### Ranking functions of CR eval_t07_bb1_in(V__01,V__0,B,C) 
* RF of phase [8]: [V__0]

#### Partial ranking functions of CR eval_t07_bb1_in(V__01,V__0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__0


### Resulting Chains:eval_t07_bb1_in(V__01,V__0,B,C) 
* [[8],9]
* [9]


### Specialization of cost equations eval_t07_bb3_in/3 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_t07_bb3_in/3 
* CE 11: eval_t07_bb3_in(A,B,A) = 0
     [0>=A,B=3] 
* CE 12: eval_t07_bb3_in(V__1,B,C) = 1+ eval_t07_bb3_in(D,E,C)
     [V__1>=1,V__1=D+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_t07_bb3_in/3 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_t07_bb3_in/3 
* Loop 10: eval_t07_bb3_in(V__1,B,C)->  eval_t07_bb3_in(V__1',B',C)
                  [V__1>=1,V__1=V__1'+1,B'=3,B=3] 
* Loop 11: eval_t07_bb3_in(A,B,A) [0>=A,B=3] 

### Ranking functions of CR eval_t07_bb3_in(V__1,B,C) 
* RF of phase [10]: [V__1]

#### Partial ranking functions of CR eval_t07_bb3_in(V__1,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__1


### Resulting Chains:eval_t07_bb3_in(V__1,B,C) 
* [[10],11]
* [11]


### Specialization of cost equations eval_t07_bb5_in/2 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_t07_bb5_in/2 
* CE 13: eval_t07_bb5_in(V__2,B) = 0
     [0>=V__2,B=2] 
* CE 14: eval_t07_bb5_in(V__2,B) = 1+ eval_t07_bb5_in(C,D)
     [V__2>=1,V__2=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_t07_bb5_in/2 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_t07_bb5_in/2 
* Loop 12: eval_t07_bb5_in(V__2,B)->  eval_t07_bb5_in(V__2',B')
                  [V__2>=1,V__2=V__2'+1,B'=2,B=2] 
* Loop 13: eval_t07_bb5_in(V__2,B) [0>=V__2,B=2] 

### Ranking functions of CR eval_t07_bb5_in(V__2,B) 
* RF of phase [12]: [V__2]

#### Partial ranking functions of CR eval_t07_bb5_in(V__2,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__2


### Resulting Chains:eval_t07_bb5_in(V__2,B) 
* [[12],13]
* [13]


### Specialization of cost equations eval_t07_start/3 
* CE 2 is refined into CE [15,16,17,18] 


#### Refined cost equations eval_t07_start/3 
* CE 15: eval_t07_start(V_x,V_y,B) = 3+ eval_t07_bb1_in(V_y,C,D,E):[[8],9]+ eval_t07_bb3_in(E,F,G):[[10],11]+ eval_t07_bb5_in(H,I):[13]
     [E>=V_y+2,E>=1,E=2*C+V_y,E=2*V_x+V_y,I=2,H=0,G=0,F=3,D=4] 
* CE 16: eval_t07_start(V_x,V_y,B) = 3+ eval_t07_bb1_in(V_y,C,D,E):[[8],9]+ eval_t07_bb3_in(E,F,E):[11]+ eval_t07_bb5_in(E,G):[13]
     [E>=V_y+2,0>=E,E=2*C+V_y,E=2*V_x+V_y,G=2,F=3,D=4] 
* CE 17: eval_t07_start(V_x,V_y,B) = 3+ eval_t07_bb1_in(V_y,V_x,C,V_y):[9]+ eval_t07_bb3_in(V_y,D,E):[[10],11]+ eval_t07_bb5_in(F,G):[13]
     [V_y>=1,0>=V_x,G=2,F=0,E=0,D=3,C=4] 
* CE 18: eval_t07_start(V_x,V_y,B) = 3+ eval_t07_bb1_in(V_y,V_x,C,V_y):[9]+ eval_t07_bb3_in(V_y,D,V_y):[11]+ eval_t07_bb5_in(V_y,E):[13]
     [0>=V_y,0>=V_x,E=2,D=3,C=4] 

### Cost equations --> "Loop" of eval_t07_start/3 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_t07_start/3 
* Loop 14: eval_t07_start(V_x,V_y,B) [V_y+2*V_x>=1,V_x>=1] 
* Loop 15: eval_t07_start(V_x,V_y,B) [0>=2*V_x+V_y,V_x>=1] 
* Loop 16: eval_t07_start(V_x,V_y,B) [V_y>=1,0>=V_x] 
* Loop 17: eval_t07_start(V_x,V_y,B) [0>=V_y,0>=V_x] 

### Ranking functions of CR eval_t07_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t07_start(V_x,V_y,B) 


### Resulting Chains:eval_t07_start(V_x,V_y,B) 
* [17]
* [16]
* [15]
* [14]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_t07_bb1_in(V__01,V__0,B,C) -> [eval_t07_bb1_in(V__01',V__0',B',C')] 
1
#### Cost of phase [8]:eval_t07_bb1_in(V__01,V__0,B,C) -> [eval_t07_bb1_in(V__01',V__0',B',C')] 
1*it(8)+0
  Such that:it(8) =< V__0
it(8) =< V__0-V__0'
it(8) >= V__0-V__0'

#### Cost of chains of eval_t07_bb1_in(V__01,V__0,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V__01/2+C/2
it(8) >= -V__01/2+C/2

  with precondition: [B=4,V__01+2*V__0=C,V__0>=1] 

* Chain [9]: 0
  with precondition: [B=4,C=V__01,0>=V__0] 


#### Cost of loops [10] 

 * loop 10:eval_t07_bb3_in(V__1,B,C) -> [eval_t07_bb3_in(V__1',B',C')] 
1
#### Cost of phase [10]:eval_t07_bb3_in(V__1,B,C) -> [eval_t07_bb3_in(V__1',B',C')] 
1*it(10)+0
  Such that:it(10) =< V__1
it(10) =< V__1-V__1'
it(10) >= V__1-V__1'

#### Cost of chains of eval_t07_bb3_in(V__1,B,C):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V__1
it(10) >= V__1

  with precondition: [B=3,C=0,V__1>=1] 

* Chain [11]: 0
  with precondition: [B=3,V__1=C,0>=V__1] 


#### Cost of loops [12] 

 * loop 12:eval_t07_bb5_in(V__2,B) -> [eval_t07_bb5_in(V__2',B')] 
1
#### Cost of phase [12]:eval_t07_bb5_in(V__2,B) -> [eval_t07_bb5_in(V__2',B')] 
1*it(12)+0
  Such that:it(12) =< V__2
it(12) =< V__2-V__2'
it(12) >= V__2-V__2'

#### Cost of chains of eval_t07_bb5_in(V__2,B):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V__2
it(12) >= V__2

  with precondition: [B=2,V__2>=1] 

* Chain [13]: 0
  with precondition: [B=2,0>=V__2] 


#### Cost of chains of eval_t07_start(V_x,V_y,B):
* Chain [17]: 3
  with precondition: [0>=V_x,0>=V_y] 

* Chain [16]: 1*s(1)+3
  Such that:s(1) =< V_y
s(1) >= V_y

  with precondition: [0>=V_x,V_y>=1] 

* Chain [15]: 1*s(2)+3
  Such that:s(2) =< V_x
s(2) >= V_x

  with precondition: [V_x>=1,0>=2*V_x+V_y] 

* Chain [14]: 1*s(3)+1*s(4)+3
  Such that:s(3) =< V_x
s(4) =< 2*V_x+V_y
s(3) >= V_x
s(4) >= 2*V_x+V_y

  with precondition: [V_x>=1,V_y+2*V_x>=1] 


Closed-form bounds of eval_t07_start(V_x,V_y,B): 
-------------------------------------
* Chain [17] with precondition: [0>=V_x,0>=V_y] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [16] with precondition: [0>=V_x,V_y>=1] 
    - Lower bound: V_y+3 
    - Complexity: n
 * Chain [15] with precondition: [V_x>=1,0>=2*V_x+V_y] 
    - Lower bound: V_x+3 
    - Complexity: n
 * Chain [14] with precondition: [V_x>=1,V_y+2*V_x>=1] 
    - Lower bound: 3*V_x+V_y+3 
    - Complexity: n
 
### Partitioned lower bound of eval_t07_start(V_x,V_y,B): 
* 3 
 if [0>=V_x,0>=V_y]
* V_x+3 
 if [V_x>=1,0>=2*V_x+V_y]
* V_y+3 
 if [0>=V_x,V_y>=1]
* 3*V_x+V_y+3 
 if [V_x>=1,V_y+2*V_x>=1]
Possible lower bounds : [3,V_x+3,V_y+3,3*V_x+V_y+3]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 33 ms.
* Invariants computed in 57 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 82 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 96 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 335 ms.

