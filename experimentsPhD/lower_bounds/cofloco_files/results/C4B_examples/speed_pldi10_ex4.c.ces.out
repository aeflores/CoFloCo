Warning: Ignored call to eval_speed_pldi10_ex4_stop/1 in equation eval_speed_pldi10_ex4_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speed_pldi10_ex4_bb2_in/7,eval_speed_pldi10_ex4_bb3_in/7]
1. recursive : [eval_speed_pldi10_ex4_bb1_in/3,loop_cont_eval_speed_pldi10_ex4_bb2_in/4]
2. non_recursive : [eval_speed_pldi10_ex4_bb4_in/1]
3. non_recursive : [loop_cont_eval_speed_pldi10_ex4_bb1_in/2]
4. non_recursive : [eval_speed_pldi10_ex4_5/2]
5. non_recursive : [eval_speed_pldi10_ex4_4/2]
6. non_recursive : [eval_speed_pldi10_ex4_3/2]
7. non_recursive : [eval_speed_pldi10_ex4_2/2]
8. non_recursive : [eval_speed_pldi10_ex4_1/2]
9. non_recursive : [eval_speed_pldi10_ex4_0/2]
10. non_recursive : [eval_speed_pldi10_ex4_bb0_in/2]
11. non_recursive : [eval_speed_pldi10_ex4_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_pldi10_ex4_bb2_in/7
1. SCC is partially evaluated into eval_speed_pldi10_ex4_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_speed_pldi10_ex4_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_pldi10_ex4_bb2_in/7 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_speed_pldi10_ex4_bb2_in/7 
* CE 7: eval_speed_pldi10_ex4_bb2_in(A,B,C,D,E,C,D) = 0
     [A>=1,0>=D,1>=C,E=2] 
* CE 8: eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) = 1+ eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,E,F,G,C,D)
     [V__1>=1,V_flag_0>=1,1>=V_flag_1,V__1=F+1,G=2,E=1,B=2] 

### Cost equations --> "Loop" of eval_speed_pldi10_ex4_bb2_in/7 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_speed_pldi10_ex4_bb2_in/7 
* Loop 6: eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D)->  eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1',V__1',B',C,D)
                  [V__1>=1,V_flag_0>=1,1>=V_flag_1,V__1=V__1'+1,B'=2,V_flag_1'=1,B=2] 
* Loop 7: eval_speed_pldi10_ex4_bb2_in(A,B,C,D,E,C,D) [A>=1,0>=D,1>=C,E=2] 

### Ranking functions of CR eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) 
* RF of phase [6]: [V__1]

#### Partial ranking functions of CR eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V__1


### Resulting Chains:eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) 
* [[6],7]
* [7]


### Specialization of cost equations eval_speed_pldi10_ex4_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_speed_pldi10_ex4_bb1_in/3 
* CE 9: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) = 0
     [0>=V_flag_0,B=3] 
* CE 10: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) = 2+ eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,C,V__0,D,E,F):[[6],7]+ eval_speed_pldi10_ex4_bb1_in(G,H,I)
     [V__0>=1,V_flag_0>=1,I=3,H=0,G=1,F=0,E=1,D=2,C=0,B=3] 
* CE 11: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) = 2+ eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,C,V__0,D,E,V__0):[7]+ eval_speed_pldi10_ex4_bb1_in(F,V__0,G)
     [V_flag_0>=1,0>=V__0,G=3,F=0,E=0,D=2,C=0,B=3] 

### Cost equations --> "Loop" of eval_speed_pldi10_ex4_bb1_in/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_speed_pldi10_ex4_bb1_in/3 
* Loop 8: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B)->  eval_speed_pldi10_ex4_bb1_in(V_flag_0',V__0',B')
                  [V__0>=1,V_flag_0>=1,B'=3,V__0'=0,V_flag_0'=1,B=3] 
* Loop 9: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B)->  eval_speed_pldi10_ex4_bb1_in(V_flag_0',V__0,B')
                  [V_flag_0>=1,0>=V__0,B'=3,V_flag_0'=0,B=3] 
* Loop 10: eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) [0>=V_flag_0,B=3] 

### Ranking functions of CR eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) 


### Resulting Chains:eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) 
* [9,10]
* [8,9,10]


### Specialization of cost equations eval_speed_pldi10_ex4_start/2 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_speed_pldi10_ex4_start/2 
* CE 12: eval_speed_pldi10_ex4_start(V_n,B) = 1+ eval_speed_pldi10_ex4_bb1_in(C,V_n,D):[9,10]
     [0>=V_n,D=3,C=1] 
* CE 13: eval_speed_pldi10_ex4_start(V_n,B) = 1+ eval_speed_pldi10_ex4_bb1_in(C,V_n,D):[8,9,10]
     [V_n>=1,D=3,C=1] 

### Cost equations --> "Loop" of eval_speed_pldi10_ex4_start/2 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_speed_pldi10_ex4_start/2 
* Loop 11: eval_speed_pldi10_ex4_start(V_n,B) [V_n>=1] 
* Loop 12: eval_speed_pldi10_ex4_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_speed_pldi10_ex4_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex4_start(V_n,B) 


### Resulting Chains:eval_speed_pldi10_ex4_start(V_n,B) 
* [12]
* [11]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) -> [eval_speed_pldi10_ex4_bb2_in(V_flag_0',V__0',V_flag_1',V__1',B',C',D')] 
1
#### Cost of phase [6]:eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) -> [eval_speed_pldi10_ex4_bb2_in(V_flag_0',V__0',V_flag_1',V__1',B',C',D')] 
1*it(6)+0
  Such that:it(6) =< V__1
it(6) =< V__1-V__1'
it(6) >= V__1-V__1'

#### Cost of chains of eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V__1
it(6) >= V__1

  with precondition: [B=2,C=1,D=0,1>=V_flag_1,V_flag_0>=1,V__1>=1] 

* Chain [7]: 0
  with precondition: [B=2,V_flag_1=C,V__1=D,1>=V_flag_1,0>=V__1,V_flag_0>=1] 


#### Cost of chains of eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B):
* Chain [9,10]: 2
  with precondition: [V_flag_0=1,B=3,0>=V__0] 

* Chain [8,9,10]: 1*s(1)+4
  Such that:s(1) =< V__0
s(1) >= V__0

  with precondition: [V_flag_0=1,B=3,V__0>=1] 


#### Cost of chains of eval_speed_pldi10_ex4_start(V_n,B):
* Chain [12]: 3
  with precondition: [0>=V_n] 

* Chain [11]: 1*s(2)+5
  Such that:s(2) =< V_n
s(2) >= V_n

  with precondition: [V_n>=1] 


Closed-form bounds of eval_speed_pldi10_ex4_start(V_n,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_n] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [11] with precondition: [V_n>=1] 
    - Lower bound: V_n+5 
    - Complexity: n
 
### Partitioned lower bound of eval_speed_pldi10_ex4_start(V_n,B): 
* 3 
 if [0>=V_n]
* V_n+5 
 if [V_n>=1]
Possible lower bounds : [3,V_n+5]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 69 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 63 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 14 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 310 ms.

