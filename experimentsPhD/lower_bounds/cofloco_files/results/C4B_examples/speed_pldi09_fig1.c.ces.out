Warning: Ignored call to eval_speed_pldi09_fig1_stop/1 in equation eval_speed_pldi09_fig1_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speed_pldi09_fig1_bb1_in/4,eval_speed_pldi09_fig1_bb2_in/4,eval_speed_pldi09_fig1_bb3_in/4,eval_speed_pldi09_fig1_bb4_in/4]
1. non_recursive : [eval_speed_pldi09_fig1_bb5_in/1]
2. non_recursive : [loop_cont_eval_speed_pldi09_fig1_bb1_in/2]
3. non_recursive : [eval_speed_pldi09_fig1_6/2]
4. non_recursive : [eval_speed_pldi09_fig1_5/2]
5. non_recursive : [eval_speed_pldi09_fig1_4/2]
6. non_recursive : [eval_speed_pldi09_fig1_3/2]
7. non_recursive : [eval_speed_pldi09_fig1_2/2]
8. non_recursive : [eval_speed_pldi09_fig1_1/2]
9. non_recursive : [eval_speed_pldi09_fig1_0/2]
10. non_recursive : [eval_speed_pldi09_fig1_bb0_in/2]
11. non_recursive : [eval_speed_pldi09_fig1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_pldi09_fig1_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_speed_pldi09_fig1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_pldi09_fig1_bb1_in/4 
* CE 4 is refined into CE [6] 
* CE 5 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_speed_pldi09_fig1_bb1_in/4 
* CE 6: eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) = 1+ eval_speed_pldi09_fig1_bb1_in(V_n,C,V_x_0,D)
     [V_x_0>=V_y_0,V_x_0>=V_n,V_y_0>=1,V_y_0=C+1,D=2,B=2] 
* CE 7: eval_speed_pldi09_fig1_bb1_in(A,B,B,C) = 1+ eval_speed_pldi09_fig1_bb1_in(A,D,E,F)
     [A>=B+1,B>=0,B+1=E,B+1=D,F=2,C=2] 
* CE 8: eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) = 0
     [V_x_0>=V_n,V_x_0>=0,B=2,V_y_0=0] 

### Cost equations --> "Loop" of eval_speed_pldi09_fig1_bb1_in/4 
* CEs [8] --> Loop 5 
* CEs [6] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_speed_pldi09_fig1_bb1_in/4 
* Loop 5: eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) [V_x_0>=V_n,V_x_0>=0,B=2,V_y_0=0] 
* Loop 6: eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B)->  eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0',V_x_0,B')
                  [V_x_0>=V_y_0,V_x_0>=V_n,V_y_0>=1,V_y_0=V_y_0'+1,B'=2,B=2] 
* Loop 7: eval_speed_pldi09_fig1_bb1_in(A,B,B,C)->  eval_speed_pldi09_fig1_bb1_in(A,A',B',C')
                  [A>=B+1,B>=0,B+1=B',B+1=A',C'=2,C=2] 

### Ranking functions of CR eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) 
* RF of phase [6]: [V_y_0]
* RF of phase [7]: [V_n-V_x_0,V_n-V_y_0]

#### Partial ranking functions of CR eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_y_0
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_n-V_x_0
    V_n-V_y_0


### Resulting Chains:eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) 
* [[7],[6],5]
* [5]


### Specialization of cost equations eval_speed_pldi09_fig1_start/2 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations eval_speed_pldi09_fig1_start/2 
* CE 9: eval_speed_pldi09_fig1_start(V_n,B) = 1+ eval_speed_pldi09_fig1_bb1_in(V_n,C,D,E):[[7],[6],5]
     [V_n>=1,E=2,D=0,C=0] 
* CE 10: eval_speed_pldi09_fig1_start(V_n,B) = 1+ eval_speed_pldi09_fig1_bb1_in(V_n,C,D,E):[5]
     [0>=V_n,E=2,D=0,C=0] 

### Cost equations --> "Loop" of eval_speed_pldi09_fig1_start/2 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_speed_pldi09_fig1_start/2 
* Loop 8: eval_speed_pldi09_fig1_start(V_n,B) [V_n>=1] 
* Loop 9: eval_speed_pldi09_fig1_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_speed_pldi09_fig1_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi09_fig1_start(V_n,B) 


### Resulting Chains:eval_speed_pldi09_fig1_start(V_n,B) 
* [9]
* [8]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) -> [eval_speed_pldi09_fig1_bb1_in(V_n',V_y_0',V_x_0',B')] 
1
#### Cost of phase [6]:eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) -> [eval_speed_pldi09_fig1_bb1_in(V_n',V_y_0',V_x_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_y_0
it(6) =< V_y_0-V_y_0'
it(6) >= V_y_0-V_y_0'

#### Cost of loops [7] 

 * loop 7:eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) -> [eval_speed_pldi09_fig1_bb1_in(V_n',V_y_0',V_x_0',B')] 
1
#### Cost of phase [7]:eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B) -> [eval_speed_pldi09_fig1_bb1_in(V_n',V_y_0',V_x_0',B')] 
1*it(7)+0
  Such that:it(7) =< V_n-V_y_0
it(7) =< V_n-V_y_0-V_n'+V_y_0'
it(7) =< V_n-V_x_0
it(7) =< V_n-V_x_0-V_n'+V_x_0'
it(7) >= V_n-V_y_0-V_n'+V_y_0'
it(7) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of chains of eval_speed_pldi09_fig1_bb1_in(V_n,V_y_0,V_x_0,B):
* Chain [[7],[6],5]: 1*it(6)+1*it(7)+0
  Such that:it(6) =< V_n
it(7) =< V_n-V_x_0
it(6) >= V_n
it(7) >= V_n-V_x_0

  with precondition: [B=2,V_y_0=V_x_0,V_y_0>=0,V_n>=V_y_0+1] 

* Chain [5]: 0
  with precondition: [V_y_0=0,B=2,V_x_0>=0,V_x_0>=V_n] 


#### Cost of chains of eval_speed_pldi09_fig1_start(V_n,B):
* Chain [9]: 1
  with precondition: [0>=V_n] 

* Chain [8]: 2*s(1)+1
  Such that:aux(1) =< V_n
s(1) =< aux(1)
aux(2) >= V_n
s(1) >= aux(2)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_speed_pldi09_fig1_start(V_n,B): 
-------------------------------------
* Chain [9] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [8] with precondition: [V_n>=1] 
    - Lower bound: 2*V_n+1 
    - Complexity: n
 
### Partitioned lower bound of eval_speed_pldi09_fig1_start(V_n,B): 
* 1 
 if [0>=V_n]
* 2*V_n+1 
 if [V_n>=1]
Possible lower bounds : [1,2*V_n+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 47 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 51 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 68 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 278 ms.

