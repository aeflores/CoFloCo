Warning: Ignored call to eval_t11_stop/1 in equation eval_t11_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t11_bb1_in/5,eval_t11_bb2_in/5]
1. non_recursive : [eval_t11_bb3_in/1]
2. non_recursive : [loop_cont_eval_t11_bb1_in/2]
3. non_recursive : [eval_t11_6/5]
4. non_recursive : [eval_t11_5/5]
5. non_recursive : [eval_t11_4/5]
6. non_recursive : [eval_t11_3/5]
7. non_recursive : [eval_t11_2/5]
8. non_recursive : [eval_t11_1/5]
9. non_recursive : [eval_t11_0/5]
10. non_recursive : [eval_t11_bb0_in/5]
11. non_recursive : [eval_t11_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t11_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_t11_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t11_bb1_in/5 
* CE 5 is refined into CE [6] 
* CE 3 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_t11_bb1_in/5 
* CE 6: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) = 0
     [V__0>=V_n,B=2] 
* CE 7: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) = 1+ eval_t11_bb1_in(V_n,V_m,V__01,C,D)
     [V_n>=V__0+1,V__01>=V_m,V__0+1=C,D=2,B=2] 
* CE 8: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) = 1+ eval_t11_bb1_in(V_n,V_m,C,V__0,D)
     [V_n>=V__0+1,V_m>=V__01+1,V__01+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_t11_bb1_in/5 
* CEs [7] --> Loop 5 
* CEs [8] --> Loop 6 
* CEs [6] --> Loop 7 

#### Loops of eval_t11_bb1_in/5 
* Loop 5: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_t11_bb1_in(V_n,V_m,V__01,V__0',B')
                  [V_n>=V__0+1,V__01>=V_m,V__0+1=V__0',B'=2,B=2] 
* Loop 6: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_t11_bb1_in(V_n,V_m,V__01',V__0,B')
                  [V_n>=V__0+1,V_m>=V__01+1,V__01+1=V__01',B'=2,B=2] 
* Loop 7: eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) [V__0>=V_n,B=2] 

### Ranking functions of CR eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) 
* RF of phase [5]: [V_n-V__0]
* RF of phase [6]: [V_m-V__01]

#### Partial ranking functions of CR eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V_n-V__0
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_m-V__01


### Resulting Chains:eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) 
* [[6],[5],7]
* [[5],7]
* [7]


### Specialization of cost equations eval_t11_start/5 
* CE 2 is refined into CE [9,10,11] 


#### Refined cost equations eval_t11_start/5 
* CE 9: eval_t11_start(V_x,V_y,V_n,V_m,B) = 1+ eval_t11_bb1_in(V_n,V_m,V_y,V_x,C):[[6],[5],7]
     [V_n>=V_x+1,V_m>=V_y+1,C=2] 
* CE 10: eval_t11_start(V_x,V_y,V_n,V_m,B) = 1+ eval_t11_bb1_in(V_n,V_m,V_y,V_x,C):[[5],7]
     [V_n>=V_x+1,V_y>=V_m,C=2] 
* CE 11: eval_t11_start(V_x,V_y,V_n,V_m,B) = 1+ eval_t11_bb1_in(V_n,V_m,V_y,V_x,C):[7]
     [V_x>=V_n,C=2] 

### Cost equations --> "Loop" of eval_t11_start/5 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_t11_start/5 
* Loop 8: eval_t11_start(V_x,V_y,V_n,V_m,B) [V_x>=V_n] 
* Loop 9: eval_t11_start(V_x,V_y,V_n,V_m,B) [V_y>=V_m,V_n>=V_x+1] 
* Loop 10: eval_t11_start(V_x,V_y,V_n,V_m,B) [V_m>=V_y+1,V_n>=V_x+1] 

### Ranking functions of CR eval_t11_start(V_x,V_y,V_n,V_m,B) 

#### Partial ranking functions of CR eval_t11_start(V_x,V_y,V_n,V_m,B) 


### Resulting Chains:eval_t11_start(V_x,V_y,V_n,V_m,B) 
* [10]
* [9]
* [8]


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_t11_bb1_in(V_n',V_m',V__01',V__0',B')] 
1
#### Cost of phase [5]:eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_t11_bb1_in(V_n',V_m',V__01',V__0',B')] 
1*it(5)+0
  Such that:it(5) =< V_n-V__0
it(5) =< V_n-V__0-V_n'+V__0'
it(5) >= V_n-V__0-V_n'+V__0'

#### Cost of loops [6] 

 * loop 6:eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_t11_bb1_in(V_n',V_m',V__01',V__0',B')] 
1
#### Cost of phase [6]:eval_t11_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_t11_bb1_in(V_n',V_m',V__01',V__0',B')] 
1*it(6)+0
  Such that:it(6) =< V_m-V__01
it(6) =< V_m-V__01-V_m'+V__01'
it(6) >= V_m-V__01-V_m'+V__01'

#### Cost of chains of eval_t11_bb1_in(V_n,V_m,V__01,V__0,B):
* Chain [[6],[5],7]: 1*it(5)+1*it(6)+0
  Such that:it(5) =< V_n-V__0
it(6) =< V_m-V__01
it(5) >= V_n-V__0
it(6) >= V_m-V__01

  with precondition: [B=2,V_m>=V__01+1,V_n>=V__0+1] 

* Chain [[5],7]: 1*it(5)+0
  Such that:it(5) =< V_n-V__0
it(5) >= V_n-V__0

  with precondition: [B=2,V__01>=V_m,V_n>=V__0+1] 

* Chain [7]: 0
  with precondition: [B=2,V__0>=V_n] 


#### Cost of chains of eval_t11_start(V_x,V_y,V_n,V_m,B):
* Chain [10]: 1*s(1)+1*s(2)+1
  Such that:s(1) =< -V_x+V_n
s(2) =< -V_y+V_m
s(1) >= -V_x+V_n
s(2) >= -V_y+V_m

  with precondition: [V_n>=V_x+1,V_m>=V_y+1] 

* Chain [9]: 1*s(3)+1
  Such that:s(3) =< -V_x+V_n
s(3) >= -V_x+V_n

  with precondition: [V_n>=V_x+1,V_y>=V_m] 

* Chain [8]: 1
  with precondition: [V_x>=V_n] 


Closed-form bounds of eval_t11_start(V_x,V_y,V_n,V_m,B): 
-------------------------------------
* Chain [10] with precondition: [V_n>=V_x+1,V_m>=V_y+1] 
    - Lower bound: -V_x-V_y+V_n+V_m+1 
    - Complexity: n
 * Chain [9] with precondition: [V_n>=V_x+1,V_y>=V_m] 
    - Lower bound: -V_x+V_n+1 
    - Complexity: n
 * Chain [8] with precondition: [V_x>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_t11_start(V_x,V_y,V_n,V_m,B): 
* 1 
 if [V_x>=V_n]
* -V_x+V_n+1 
 if [V_n>=V_x+1,V_y>=V_m]
* -V_x-V_y+V_n+V_m+1 
 if [V_n>=V_x+1,V_m>=V_y+1]
Possible lower bounds : [1,-V_x+V_n+1,-V_x-V_y+V_n+V_m+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 40 ms.
* Invariants computed in 59 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 86 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 77 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 20 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 354 ms.

