Warning: Ignored call to eval_gcd_stop/1 in equation eval_gcd_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_gcd_bb1_in/3,eval_gcd_bb2_in/3]
1. non_recursive : [eval_gcd_bb3_in/1]
2. non_recursive : [loop_cont_eval_gcd_bb1_in/2]
3. non_recursive : [eval_gcd_4/3]
4. non_recursive : [eval_gcd_3/3]
5. non_recursive : [eval_gcd_2/3]
6. non_recursive : [eval_gcd_1/3]
7. non_recursive : [eval_gcd_0/3]
8. non_recursive : [eval_gcd_bb0_in/3]
9. non_recursive : [eval_gcd_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gcd_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_gcd_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gcd_bb1_in/3 
* CE 5 is refined into CE [7] 
* CE 6 is refined into CE [8] 
* CE 3 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_gcd_bb1_in/3 
* CE 7: eval_gcd_bb1_in(V__01,V__0,B) = 0
     [0>=V__0,B=2] 
* CE 8: eval_gcd_bb1_in(V__01,V__0,B) = 0
     [0>=V__01,B=2] 
* CE 9: eval_gcd_bb1_in(V__01,V__0,B) = 1+ eval_gcd_bb1_in(C,V__0,D)
     [V__01>=V__0,V__0>=1,V__0+C=V__01,D=2,B=2] 
* CE 10: eval_gcd_bb1_in(V__01,V__0,B) = 1+ eval_gcd_bb1_in(V__01,C,D)
     [V__0>=V__01+1,V__01>=1,V__01+C=V__0,D=2,B=2] 

### Cost equations --> "Loop" of eval_gcd_bb1_in/3 
* CEs [9] --> Loop 6 
* CEs [10] --> Loop 7 
* CEs [7] --> Loop 8 
* CEs [8] --> Loop 9 

#### Loops of eval_gcd_bb1_in/3 
* Loop 6: eval_gcd_bb1_in(V__01,V__0,B)->  eval_gcd_bb1_in(V__01',V__0,B')
                  [V__01>=V__0,V__0>=1,V__0+V__01'=V__01,B'=2,B=2] 
* Loop 7: eval_gcd_bb1_in(V__01,V__0,B)->  eval_gcd_bb1_in(V__01,V__0',B')
                  [V__0>=V__01+1,V__01>=1,V__01+V__0'=V__0,B'=2,B=2] 
* Loop 8: eval_gcd_bb1_in(V__01,V__0,B) [0>=V__0,B=2] 
* Loop 9: eval_gcd_bb1_in(V__01,V__0,B) [0>=V__01,B=2] 

### Ranking functions of CR eval_gcd_bb1_in(V__01,V__0,B) 
* RF of phase [6,7]: [V__01+V__0-1]

#### Partial ranking functions of CR eval_gcd_bb1_in(V__01,V__0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    V__01
    V__01-V__0+1 depends on loops [7:1] 
  - RF of loop [7:1]:
    V__0-1
    -V__01+V__0 depends on loops [6:1] 


### Resulting Chains:eval_gcd_bb1_in(V__01,V__0,B) 
* [[6,7],9]
* [9]
* [8]


### Specialization of cost equations eval_gcd_start/3 
* CE 2 is refined into CE [11,12,13] 


#### Refined cost equations eval_gcd_start/3 
* CE 11: eval_gcd_start(V_x,V_y,B) = 1+ eval_gcd_bb1_in(V_y,V_x,C):[[6,7],9]
     [V_x>=1,V_y>=1,C=2] 
* CE 12: eval_gcd_start(V_x,V_y,B) = 1+ eval_gcd_bb1_in(V_y,V_x,C):[9]
     [0>=V_y,C=2] 
* CE 13: eval_gcd_start(V_x,V_y,B) = 1+ eval_gcd_bb1_in(V_y,V_x,C):[8]
     [0>=V_x,C=2] 

### Cost equations --> "Loop" of eval_gcd_start/3 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_gcd_start/3 
* Loop 10: eval_gcd_start(V_x,V_y,B) [V_y>=1,V_x>=1] 
* Loop 11: eval_gcd_start(V_x,V_y,B) [0>=V_y] 
* Loop 12: eval_gcd_start(V_x,V_y,B) [0>=V_x] 

### Ranking functions of CR eval_gcd_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_gcd_start(V_x,V_y,B) 


### Resulting Chains:eval_gcd_start(V_x,V_y,B) 
* [12]
* [11]
* [10]


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_gcd_bb1_in(V__01,V__0,B) -> [eval_gcd_bb1_in(V__01',V__0',B')] 
1
 * loop 7:eval_gcd_bb1_in(V__01,V__0,B) -> [eval_gcd_bb1_in(V__01',V__0',B')] 
1
#### Cost of phase [6,7]:eval_gcd_bb1_in(V__01,V__0,B) -> [eval_gcd_bb1_in(V__01',V__0',B')] 
1*it(6)+1*it(7)+0
  Such that:aux(4) =< -V__01+V__0
aux(2) =< V__01-V__0+1
it(6)+it(7) =< V__01+V__0-1
it(6)+it(7) =< V__01+V__0-V__01'-V__0'
aux(5) =< V__01
aux(6) =< V__01-V__01'
aux(7) =< V__0-1
aux(8) =< V__0-V__0'
aux(3) =< aux(5)
it(6) =< aux(5)
aux(3) =< aux(6)
it(6) =< aux(6)
aux(1) =< aux(7)
it(7) =< aux(7)
aux(1) =< aux(8)
it(7) =< aux(8)
it(7) =< aux(3)+aux(4)
it(6) =< aux(1)+aux(2)

#### Cost of chains of eval_gcd_bb1_in(V__01,V__0,B):
* Chain [[6,7],9]: 1*it(6)+1*it(7)+0
  Such that:aux(4) =< -V__01+V__0
aux(2) =< V__01-V__0+1
it(7)+it(6) =< V__01+V__0-1
aux(9) =< V__01
aux(10) =< V__0-1
it(6) =< aux(9)
it(7) =< aux(10)
it(7) =< aux(9)+aux(4)
it(6) =< aux(10)+aux(2)

  with precondition: [B=2,V__01>=1,V__0>=1] 

* Chain [9]: 0
  with precondition: [B=2,0>=V__01] 

* Chain [8]: 0
  with precondition: [B=2,0>=V__0] 


#### Cost of chains of eval_gcd_start(V_x,V_y,B):
* Chain [12]: 1
  with precondition: [0>=V_x] 

* Chain [11]: 1
  with precondition: [0>=V_y] 

* Chain [10]: 1*s(3)+1*s(4)+1
  Such that:s(2) =< -V_x+V_y+1
s(6) =< V_x-1
s(1) =< V_x-V_y
s(4)+s(3) =< V_x+V_y-1
s(5) =< V_y
s(4) =< s(5)
s(3) =< s(6)
s(3) =< s(5)+s(1)
s(4) =< s(6)+s(2)

  with precondition: [V_x>=1,V_y>=1] 


Closed-form bounds of eval_gcd_start(V_x,V_y,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_x] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [11] with precondition: [0>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [10] with precondition: [V_x>=1,V_y>=1] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_gcd_start(V_x,V_y,B): 
* 1 
 if []
Possible lower bounds : [1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 36 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 49 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 173 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 103 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 341 ms.

