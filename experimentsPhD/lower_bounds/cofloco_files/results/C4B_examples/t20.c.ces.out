Warning: Ignored call to eval_t20_stop/1 in equation eval_t20_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t20_bb1_in/5,eval_t20_bb2_in/5]
1. recursive : [eval_t20_bb3_in/3,eval_t20_bb4_in/3]
2. non_recursive : [eval_t20_bb5_in/1]
3. non_recursive : [loop_cont_eval_t20_bb3_in/2]
4. non_recursive : [loop_cont_eval_t20_bb1_in/4]
5. non_recursive : [eval_t20_3/3]
6. non_recursive : [eval_t20_2/3]
7. non_recursive : [eval_t20_1/3]
8. non_recursive : [eval_t20_0/3]
9. non_recursive : [eval_t20_bb0_in/3]
10. non_recursive : [eval_t20_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t20_bb1_in/5
1. SCC is partially evaluated into eval_t20_bb3_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_t20_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t20_bb1_in/5 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_t20_bb1_in/5 
* CE 7: eval_t20_bb1_in(A,B,C,B,A) = 0
     [B>=A,C=3] 
* CE 8: eval_t20_bb1_in(V_y,V__0,B,C,D) = 1+ eval_t20_bb1_in(V_y,E,F,C,D)
     [V_y>=V__0+1,V__0+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_t20_bb1_in/5 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_t20_bb1_in/5 
* Loop 6: eval_t20_bb1_in(V_y,V__0,B,C,D)->  eval_t20_bb1_in(V_y,V__0',B',C,D)
                  [V_y>=V__0+1,V__0+1=V__0',B'=3,B=3] 
* Loop 7: eval_t20_bb1_in(A,B,C,B,A) [B>=A,C=3] 

### Ranking functions of CR eval_t20_bb1_in(V_y,V__0,B,C,D) 
* RF of phase [6]: [V_y-V__0]

#### Partial ranking functions of CR eval_t20_bb1_in(V_y,V__0,B,C,D) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_y-V__0


### Resulting Chains:eval_t20_bb1_in(V_y,V__0,B,C,D) 
* [[6],7]
* [7]


### Specialization of cost equations eval_t20_bb3_in/3 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_t20_bb3_in/3 
* CE 9: eval_t20_bb3_in(V__0,V__01,B) = 0
     [V__01>=V__0,B=2] 
* CE 10: eval_t20_bb3_in(V__0,V__01,B) = 1+ eval_t20_bb3_in(V__0,C,D)
     [V__0>=V__01+1,V__01+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_t20_bb3_in/3 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_t20_bb3_in/3 
* Loop 8: eval_t20_bb3_in(V__0,V__01,B)->  eval_t20_bb3_in(V__0,V__01',B')
                  [V__0>=V__01+1,V__01+1=V__01',B'=2,B=2] 
* Loop 9: eval_t20_bb3_in(V__0,V__01,B) [V__01>=V__0,B=2] 

### Ranking functions of CR eval_t20_bb3_in(V__0,V__01,B) 
* RF of phase [8]: [V__0-V__01]

#### Partial ranking functions of CR eval_t20_bb3_in(V__0,V__01,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__0-V__01


### Resulting Chains:eval_t20_bb3_in(V__0,V__01,B) 
* [[8],9]
* [9]


### Specialization of cost equations eval_t20_start/3 
* CE 2 is refined into CE [11,12,13] 


#### Refined cost equations eval_t20_start/3 
* CE 11: eval_t20_start(V_x,V_y,B) = 2+ eval_t20_bb1_in(V_y,V_x,C,V_y,V_y):[[6],7]+ eval_t20_bb3_in(V_y,V_y,D):[9]
     [V_y>=V_x+1,D=2,C=3] 
* CE 12: eval_t20_start(V_x,V_y,B) = 2+ eval_t20_bb1_in(V_y,V_x,C,V_x,V_y):[7]+ eval_t20_bb3_in(V_x,V_y,D):[[8],9]
     [V_x>=V_y+1,D=2,C=3] 
* CE 13: eval_t20_start(A,A,B) = 2+ eval_t20_bb1_in(A,A,C,A,A):[7]+ eval_t20_bb3_in(A,A,D):[9]
     [D=2,C=3] 

### Cost equations --> "Loop" of eval_t20_start/3 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_t20_start/3 
* Loop 10: eval_t20_start(V_x,V_y,B) [V_x>=V_y+1] 
* Loop 11: eval_t20_start(V_x,V_y,B) [V_y>=V_x+1] 
* Loop 12: eval_t20_start(A,A,B) [] 

### Ranking functions of CR eval_t20_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t20_start(V_x,V_y,B) 


### Resulting Chains:eval_t20_start(V_x,V_y,B) 
* [12]
* [11]
* [10]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_t20_bb1_in(V_y,V__0,B,C,D) -> [eval_t20_bb1_in(V_y',V__0',B',C',D')] 
1
#### Cost of phase [6]:eval_t20_bb1_in(V_y,V__0,B,C,D) -> [eval_t20_bb1_in(V_y',V__0',B',C',D')] 
1*it(6)+0
  Such that:it(6) =< V_y-V__0
it(6) =< V_y-V__0-V_y'+V__0'
it(6) >= V_y-V__0-V_y'+V__0'

#### Cost of chains of eval_t20_bb1_in(V_y,V__0,B,C,D):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_y-V__0
it(6) >= V_y-V__0

  with precondition: [B=3,V_y=C,V_y=D,V_y>=V__0+1] 

* Chain [7]: 0
  with precondition: [B=3,V__0=C,V_y=D,V__0>=V_y] 


#### Cost of loops [8] 

 * loop 8:eval_t20_bb3_in(V__0,V__01,B) -> [eval_t20_bb3_in(V__0',V__01',B')] 
1
#### Cost of phase [8]:eval_t20_bb3_in(V__0,V__01,B) -> [eval_t20_bb3_in(V__0',V__01',B')] 
1*it(8)+0
  Such that:it(8) =< V__0-V__01
it(8) =< V__0-V__01-V__0'+V__01'
it(8) >= V__0-V__01-V__0'+V__01'

#### Cost of chains of eval_t20_bb3_in(V__0,V__01,B):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__0-V__01
it(8) >= V__0-V__01

  with precondition: [B=2,V__0>=V__01+1] 

* Chain [9]: 0
  with precondition: [B=2,V__01>=V__0] 


#### Cost of chains of eval_t20_start(V_x,V_y,B):
* Chain [12]: 2
  with precondition: [V_y=V_x] 

* Chain [11]: 1*s(1)+2
  Such that:s(1) =< -V_x+V_y
s(1) >= -V_x+V_y

  with precondition: [V_y>=V_x+1] 

* Chain [10]: 1*s(2)+2
  Such that:s(2) =< V_x-V_y
s(2) >= V_x-V_y

  with precondition: [V_x>=V_y+1] 


Closed-form bounds of eval_t20_start(V_x,V_y,B): 
-------------------------------------
* Chain [12] with precondition: [V_y=V_x] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [11] with precondition: [V_y>=V_x+1] 
    - Lower bound: -V_x+V_y+2 
    - Complexity: n
 * Chain [10] with precondition: [V_x>=V_y+1] 
    - Lower bound: V_x-V_y+2 
    - Complexity: n
 
### Partitioned lower bound of eval_t20_start(V_x,V_y,B): 
* 2 
 if [V_x=V_y]
* -V_x+V_y+2 
 if [V_y>=V_x+1]
* V_x-V_y+2 
 if [V_x>=V_y+1]
Possible lower bounds : [2,-V_x+V_y+2,V_x-V_y+2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 37 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 57 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 242 ms.

