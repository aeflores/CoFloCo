Warning: Ignored call to eval_t08_stop/1 in equation eval_t08_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t08_bb1_in/4,eval_t08_bb2_in/4]
1. recursive : [eval_t08_bb3_in/2,eval_t08_bb4_in/2]
2. non_recursive : [eval_t08_bb5_in/1]
3. non_recursive : [loop_cont_eval_t08_bb3_in/2]
4. non_recursive : [loop_cont_eval_t08_bb1_in/3]
5. non_recursive : [eval_t08_3/3]
6. non_recursive : [eval_t08_2/3]
7. non_recursive : [eval_t08_1/3]
8. non_recursive : [eval_t08_0/3]
9. non_recursive : [eval_t08_bb0_in/3]
10. non_recursive : [eval_t08_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t08_bb1_in/4
1. SCC is partially evaluated into eval_t08_bb3_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_t08_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t08_bb1_in/4 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_t08_bb1_in/4 
* CE 7: eval_t08_bb1_in(A,B,C,B) = 0
     [B>=A,C=3] 
* CE 8: eval_t08_bb1_in(V_z,V__0,B,C) = 1+ eval_t08_bb1_in(V_z,D,E,C)
     [V_z>=V__0+1,V__0+1=D,E=3,B=3] 

### Cost equations --> "Loop" of eval_t08_bb1_in/4 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_t08_bb1_in/4 
* Loop 6: eval_t08_bb1_in(V_z,V__0,B,C)->  eval_t08_bb1_in(V_z,V__0',B',C)
                  [V_z>=V__0+1,V__0+1=V__0',B'=3,B=3] 
* Loop 7: eval_t08_bb1_in(A,B,C,B) [B>=A,C=3] 

### Ranking functions of CR eval_t08_bb1_in(V_z,V__0,B,C) 
* RF of phase [6]: [V_z-V__0]

#### Partial ranking functions of CR eval_t08_bb1_in(V_z,V__0,B,C) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_z-V__0


### Resulting Chains:eval_t08_bb1_in(V_z,V__0,B,C) 
* [[6],7]
* [7]


### Specialization of cost equations eval_t08_bb3_in/2 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_t08_bb3_in/2 
* CE 9: eval_t08_bb3_in(V__1,B) = 0
     [2>=V__1,B=2] 
* CE 10: eval_t08_bb3_in(V__1,B) = 1+ eval_t08_bb3_in(C,D)
     [V__1>=3,V__1=C+3,D=2,B=2] 

### Cost equations --> "Loop" of eval_t08_bb3_in/2 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_t08_bb3_in/2 
* Loop 8: eval_t08_bb3_in(V__1,B)->  eval_t08_bb3_in(V__1',B')
                  [V__1>=3,V__1=V__1'+3,B'=2,B=2] 
* Loop 9: eval_t08_bb3_in(V__1,B) [2>=V__1,B=2] 

### Ranking functions of CR eval_t08_bb3_in(V__1,B) 
* RF of phase [8]: [V__1-2]

#### Partial ranking functions of CR eval_t08_bb3_in(V__1,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__1-2


### Resulting Chains:eval_t08_bb3_in(V__1,B) 
* [[8],9]
* [9]


### Specialization of cost equations eval_t08_start/3 
* CE 2 is refined into CE [11,12,13,14] 


#### Refined cost equations eval_t08_start/3 
* CE 11: eval_t08_start(V_y,V_z,B) = 2+ eval_t08_bb1_in(V_z,V_y,C,V_z):[[6],7]+ eval_t08_bb3_in(V_z,D):[[8],9]
     [V_z>=V_y+1,V_z>=3,D=2,C=3] 
* CE 12: eval_t08_start(V_y,V_z,B) = 2+ eval_t08_bb1_in(V_z,V_y,C,V_z):[[6],7]+ eval_t08_bb3_in(V_z,D):[9]
     [V_z>=V_y+1,2>=V_z,D=2,C=3] 
* CE 13: eval_t08_start(V_y,V_z,B) = 2+ eval_t08_bb1_in(V_z,V_y,C,V_y):[7]+ eval_t08_bb3_in(V_y,D):[[8],9]
     [V_y>=V_z,V_y>=3,D=2,C=3] 
* CE 14: eval_t08_start(V_y,V_z,B) = 2+ eval_t08_bb1_in(V_z,V_y,C,V_y):[7]+ eval_t08_bb3_in(V_y,D):[9]
     [V_y>=V_z,2>=V_y,D=2,C=3] 

### Cost equations --> "Loop" of eval_t08_start/3 
* CEs [11] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_t08_start/3 
* Loop 10: eval_t08_start(V_y,V_z,B) [V_z>=V_y+1,V_z>=3] 
* Loop 11: eval_t08_start(V_y,V_z,B) [V_y>=V_z,V_y>=3] 
* Loop 12: eval_t08_start(V_y,V_z,B) [V_z>=V_y+1,2>=V_z] 
* Loop 13: eval_t08_start(V_y,V_z,B) [V_y>=V_z,2>=V_y] 

### Ranking functions of CR eval_t08_start(V_y,V_z,B) 

#### Partial ranking functions of CR eval_t08_start(V_y,V_z,B) 


### Resulting Chains:eval_t08_start(V_y,V_z,B) 
* [13]
* [12]
* [11]
* [10]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_t08_bb1_in(V_z,V__0,B,C) -> [eval_t08_bb1_in(V_z',V__0',B',C')] 
1
#### Cost of phase [6]:eval_t08_bb1_in(V_z,V__0,B,C) -> [eval_t08_bb1_in(V_z',V__0',B',C')] 
1*it(6)+0
  Such that:it(6) =< V_z-V__0
it(6) =< V_z-V__0-V_z'+V__0'
it(6) >= V_z-V__0-V_z'+V__0'

#### Cost of chains of eval_t08_bb1_in(V_z,V__0,B,C):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_z-V__0
it(6) >= V_z-V__0

  with precondition: [B=3,V_z=C,V_z>=V__0+1] 

* Chain [7]: 0
  with precondition: [B=3,V__0=C,V__0>=V_z] 


#### Cost of loops [8] 

 * loop 8:eval_t08_bb3_in(V__1,B) -> [eval_t08_bb3_in(V__1',B')] 
1
#### Cost of phase [8]:eval_t08_bb3_in(V__1,B) -> [eval_t08_bb3_in(V__1',B')] 
1*it(8)+0
  Such that:it(8) =< V__1-2
it(8) =< V__1-V__1'
it(8) >= V__1/3-V__1'/3

#### Cost of chains of eval_t08_bb3_in(V__1,B):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__1-2
it(8) >= V__1/3-2/3

  with precondition: [B=2,V__1>=3] 

* Chain [9]: 0
  with precondition: [B=2,2>=V__1] 


#### Cost of chains of eval_t08_start(V_y,V_z,B):
* Chain [13]: 2
  with precondition: [2>=V_y,V_y>=V_z] 

* Chain [12]: 1*s(1)+2
  Such that:s(1) =< -V_y+V_z
s(1) >= -V_y+V_z

  with precondition: [2>=V_z,V_z>=V_y+1] 

* Chain [11]: 1*s(2)+2
  Such that:s(2) =< V_y-2
s(2) >= V_y/3-2/3

  with precondition: [V_y>=3,V_y>=V_z] 

* Chain [10]: 1*s(3)+1*s(4)+2
  Such that:s(3) =< -V_y+V_z
s(4) =< V_z-2
s(3) >= -V_y+V_z
s(4) >= V_z/3-2/3

  with precondition: [V_z>=3,V_z>=V_y+1] 


Closed-form bounds of eval_t08_start(V_y,V_z,B): 
-------------------------------------
* Chain [13] with precondition: [2>=V_y,V_y>=V_z] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [12] with precondition: [2>=V_z,V_z>=V_y+1] 
    - Lower bound: -V_y+V_z+2 
    - Complexity: n
 * Chain [11] with precondition: [V_y>=3,V_y>=V_z] 
    - Lower bound: V_y/3+4/3 
    - Complexity: n
 * Chain [10] with precondition: [V_z>=3,V_z>=V_y+1] 
    - Lower bound: -V_y+4/3*V_z+4/3 
    - Complexity: n
 
### Partitioned lower bound of eval_t08_start(V_y,V_z,B): 
* 2 
 if [2>=V_y,V_y>=V_z]
* -V_y+V_z+2 
 if [2>=V_z,V_z>=V_y+1]
* -V_y+4/3*V_z+4/3 
 if [V_z>=3,V_z>=V_y+1]
* V_y/3+4/3 
 if [V_y>=3,V_y>=V_z]
Possible lower bounds : [2,-V_y+V_z+2,-V_y+4/3*V_z+4/3,V_y/3+4/3]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 44 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 58 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 78 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 295 ms.

