Warning: Ignored call to eval_t13_stop/1 in equation eval_t13_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t13_bb4_in/8,eval_t13_bb5_in/8]
1. recursive : [eval_t13_7/4,eval_t13_8/5,eval_t13_bb1_in/3,eval_t13_bb2_in/3,eval_t13_bb3_in/5,loop_cont_eval_t13_bb4_in/4]
2. non_recursive : [eval_t13_bb6_in/1]
3. non_recursive : [loop_cont_eval_t13_bb1_in/2]
4. non_recursive : [eval_t13_5/3]
5. non_recursive : [eval_t13_4/3]
6. non_recursive : [eval_t13_3/3]
7. non_recursive : [eval_t13_2/3]
8. non_recursive : [eval_t13_1/3]
9. non_recursive : [eval_t13_0/3]
10. non_recursive : [eval_t13_bb0_in/3]
11. non_recursive : [eval_t13_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t13_bb4_in/8
1. SCC is partially evaluated into eval_t13_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_t13_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t13_bb4_in/8 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_t13_bb4_in/8 
* CE 8: eval_t13_bb4_in(A,B,C,D,E,F,E,C) = 0
     [A>=E,C>=0,0>=E,0>=D,C+1=B,F=2] 
* CE 9: eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) = 1+ eval_t13_bb4_in(V__01,E,V_1,V_2,F,G,C,D)
     [V__01>=V__1,V__1>=1,V_1>=0,0>=V_2,V__1=F+1,V_1+1=E,V_1+1=V__0,G=2,B=2] 

### Cost equations --> "Loop" of eval_t13_bb4_in/8 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_t13_bb4_in/8 
* Loop 7: eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D)->  eval_t13_bb4_in(V__01,V__0',V_1,V_2,V__1',B',C,D)
                  [V__01>=V__1,V__1>=1,V_1>=0,0>=V_2,V__1=V__1'+1,V_1+1=V__0',V_1+1=V__0,B'=2,B=2] 
* Loop 8: eval_t13_bb4_in(A,B,C,D,E,F,E,C) [A>=E,C>=0,0>=E,0>=D,C+1=B,F=2] 

### Ranking functions of CR eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) 
* RF of phase [7]: [V__1]

#### Partial ranking functions of CR eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__1


### Resulting Chains:eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) 
* [[7],8]
* [8]


### Specialization of cost equations eval_t13_bb1_in/3 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_t13_bb1_in/3 
* CE 10: eval_t13_bb1_in(V__01,V__0,B) = 0
     [0>=V__0,B=3] 
* CE 11: eval_t13_bb1_in(V__01,V__0,B) = 2+ eval_t13_bb4_in(V__01,C,D,E,V__01,F,G,D):[[7],8]+ eval_t13_bb1_in(H,D,I)
     [V__01>=1,D>=0,0>=E,D+1=C,D+1=V__0,I=3,H=0,G=0,F=2,B=3] 
* CE 12: eval_t13_bb1_in(V__01,V__0,B) = 2+ eval_t13_bb4_in(V__01,C,D,E,V__01,F,V__01,D):[8]+ eval_t13_bb1_in(V__01,D,G)
     [D>=0,0>=V__01,0>=E,D+1=C,D+1=V__0,G=3,F=2,B=3] 
* CE 13: eval_t13_bb1_in(V__01,V__0,B) = 1+ eval_t13_bb1_in(C,D,E)
     [V__0>=1,V__0=D+1,C=V__01+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_t13_bb1_in/3 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [10] --> Loop 12 

#### Loops of eval_t13_bb1_in/3 
* Loop 9: eval_t13_bb1_in(V__01,V__0,B)->  eval_t13_bb1_in(V__01',V__0',B')
                  [V__0>=1,V__0=V__0'+1,V__01+1=V__01',B'=3,B=3] 
* Loop 10: eval_t13_bb1_in(V__01,V__0,B)->  eval_t13_bb1_in(V__01,V__0',B')
                  [V__0'>=0,0>=V__01,V__0'+1=V__0,B'=3,B=3] 
* Loop 11: eval_t13_bb1_in(V__01,V__0,B)->  eval_t13_bb1_in(V__01',V__0',B')
                  [V__0'>=0,V__01>=1,V__0'+1=V__0,B'=3,V__01'=0,B=3] 
* Loop 12: eval_t13_bb1_in(V__01,V__0,B) [0>=V__0,B=3] 

### Ranking functions of CR eval_t13_bb1_in(V__01,V__0,B) 
* RF of phase [9,10,11]: [V__0]

#### Partial ranking functions of CR eval_t13_bb1_in(V__01,V__0,B) 
* Partial RF of phase [9,10,11]:
  - RF of loop [9:1,10:1,11:1]:
    V__0
  - RF of loop [11:1]:
    V__01 depends on loops [9:1] 


### Resulting Chains:eval_t13_bb1_in(V__01,V__0,B) 
* [[9,10,11],12]
* [12]


### Specialization of cost equations eval_t13_start/3 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_t13_start/3 
* CE 14: eval_t13_start(V_x,V_y,B) = 1+ eval_t13_bb1_in(V_y,V_x,C):[[9,10,11],12]
     [V_x>=1,C=3] 
* CE 15: eval_t13_start(V_x,V_y,B) = 1+ eval_t13_bb1_in(V_y,V_x,C):[12]
     [0>=V_x,C=3] 

### Cost equations --> "Loop" of eval_t13_start/3 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_t13_start/3 
* Loop 13: eval_t13_start(V_x,V_y,B) [V_x>=1] 
* Loop 14: eval_t13_start(V_x,V_y,B) [0>=V_x] 

### Ranking functions of CR eval_t13_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t13_start(V_x,V_y,B) 


### Resulting Chains:eval_t13_start(V_x,V_y,B) 
* [14]
* [13]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) -> [eval_t13_bb4_in(V__01',V__0',V_1',V_2',V__1',B',C',D')] 
1
#### Cost of phase [7]:eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D) -> [eval_t13_bb4_in(V__01',V__0',V_1',V_2',V__1',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V__1
it(7) =< V__1-V__1'
it(7) >= V__1-V__1'

#### Cost of chains of eval_t13_bb4_in(V__01,V__0,V_1,V_2,V__1,B,C,D):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__1
it(7) >= V__1

  with precondition: [B=2,C=0,V__0=V_1+1,V__0=D+1,0>=V_2,V__0>=1,V__1>=1,V__01>=V__1] 

* Chain [8]: 0
  with precondition: [B=2,V__0=V_1+1,V__1=C,V__0=D+1,0>=V_2,0>=V__1,V__0>=1,V__01>=V__1] 


#### Cost of loops [9,10,11] 

 * loop 9:eval_t13_bb1_in(V__01,V__0,B) -> [eval_t13_bb1_in(V__01',V__0',B')] 
1
 * loop 10:eval_t13_bb1_in(V__01,V__0,B) -> [eval_t13_bb1_in(V__01',V__0',B')] 
2
 * loop 11:eval_t13_bb1_in(V__01,V__0,B) -> [eval_t13_bb1_in(V__01',V__0',B')] 
1*s(2)+2
  Such that:s(2) =< V__01
s(2) >= V__01

#### Cost of phase [9,10,11]:eval_t13_bb1_in(V__01,V__0,B) -> [eval_t13_bb1_in(V__01',V__0',B')] 
1*it(9)+2*it(10)+2*it(11)+1*s(3)+0
  Such that:aux(2) =< -V__01+V__01'
aux(10) =< V__01+V__0-1
it(9)+it(10)+it(11) =< V__0
it(9)+it(10)+it(11) =< V__0-V__0'
aux(11) =< V__01
aux(12) =< V__01-V__01'
s(3) =< it(9)+aux(12)
s(3) =< it(9)+aux(11)
it(11) =< it(9)+aux(12)
it(11) =< it(9)+aux(11)
s(3) =< it(11)*aux(10)
aux(4) >= V__01
aux(1) >= V__01-V__01'
it(9)+it(10)+it(11) >= V__0-V__0'
aux(3) >= min([aux(4),aux(5)])
s(3) >= it(9)+aux(1)-aux(2)
s(3) >= it(11)*aux(3)

#### Cost of chains of eval_t13_bb1_in(V__01,V__0,B):
* Chain [[9,10,11],12]: 1*it(9)+2*it(10)+2*it(11)+1*s(3)+0
  Such that:aux(11) =< V__01
aux(10) =< V__01+V__0-1
aux(13) =< V__0
it(9)+it(10)+it(11) =< aux(13)
s(3) =< it(9)+aux(11)
it(11) =< it(9)+aux(11)
s(3) =< it(11)*aux(10)
it(11)+it(10)+it(9) >= V__0

  with precondition: [B=3,V__0>=1] 

* Chain [12]: 0
  with precondition: [B=3,0>=V__0] 


#### Cost of chains of eval_t13_start(V_x,V_y,B):
* Chain [14]: 1
  with precondition: [0>=V_x] 

* Chain [13]: 2*s(7)+2*s(8)+1*s(9)+1*s(10)+1
  Such that:s(6) =< V_x
s(5) =< V_x+V_y-1
s(4) =< V_y
s(7)+s(8)+s(9) =< s(6)
s(10) =< s(9)+s(4)
s(7) =< s(9)+s(4)
s(10) =< s(7)*s(5)
s(9)+s(8)+s(7) >= V_x

  with precondition: [V_x>=1] 


Closed-form bounds of eval_t13_start(V_x,V_y,B): 
-------------------------------------
* Chain [14] with precondition: [0>=V_x] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [13] with precondition: [V_x>=1] 
    - Lower bound: V_x+1 
    - Complexity: n
 
### Partitioned lower bound of eval_t13_start(V_x,V_y,B): 
* 1 
 if [0>=V_x]
* V_x+1 
 if [V_x>=1]
Possible lower bounds : [1,V_x+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 75 ms.
* Invariants computed in 77 ms.
   - Backward Invariants 28 ms.
   - Transitive Invariants 22 ms.
* Refinement performed in 96 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 143 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 80 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 514 ms.

