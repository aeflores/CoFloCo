Warning: Ignored call to eval_speed_popl10_nested_single_stop/1 in equation eval_speed_popl10_nested_single_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speed_popl10_nested_single_6/7,eval_speed_popl10_nested_single_7/8,eval_speed_popl10_nested_single_bb2_in/6,eval_speed_popl10_nested_single_bb3_in/7]
1. recursive : [eval_speed_popl10_nested_single_bb1_in/3,loop_cont_eval_speed_popl10_nested_single_bb2_in/4]
2. non_recursive : [eval_speed_popl10_nested_single_bb4_in/1]
3. non_recursive : [loop_cont_eval_speed_popl10_nested_single_bb1_in/2]
4. non_recursive : [eval_speed_popl10_nested_single_3/2]
5. non_recursive : [eval_speed_popl10_nested_single_2/2]
6. non_recursive : [eval_speed_popl10_nested_single_1/2]
7. non_recursive : [eval_speed_popl10_nested_single_0/2]
8. non_recursive : [eval_speed_popl10_nested_single_bb0_in/2]
9. non_recursive : [eval_speed_popl10_nested_single_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_popl10_nested_single_bb2_in/6
1. SCC is partially evaluated into eval_speed_popl10_nested_single_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_speed_popl10_nested_single_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_popl10_nested_single_bb2_in/6 
* CE 6 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_speed_popl10_nested_single_bb2_in/6 
* CE 8: eval_speed_popl10_nested_single_bb2_in(A,B,C,D,A,E) = 0
     [A>=C+2,C>=B,C+1=E,D=2] 
* CE 9: eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) = 0
     [V_x_0_sink>=V_x_0,V_x_0_sink+1=D,V_x_0_sink+1=C,V_x_0_sink+1=V_n,B=2] 
* CE 10: eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) = 1+ eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,E,F,C,D)
     [V_n>=V_x_0_sink+2,V_x_0_sink>=V_x_0,V_x_0_sink+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_speed_popl10_nested_single_bb2_in/6 
* CEs [10] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_speed_popl10_nested_single_bb2_in/6 
* Loop 7: eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D)->  eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink',B',C,D)
                  [V_n>=V_x_0_sink+2,V_x_0_sink>=V_x_0,V_x_0_sink+1=V_x_0_sink',B'=2,B=2] 
* Loop 8: eval_speed_popl10_nested_single_bb2_in(A,B,C,D,A,E) [A>=C+2,C>=B,C+1=E,D=2] 
* Loop 9: eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) [V_x_0_sink>=V_x_0,V_x_0_sink+1=D,V_x_0_sink+1=C,V_x_0_sink+1=V_n,B=2] 

### Ranking functions of CR eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* RF of phase [7]: [V_n-V_x_0_sink-1]

#### Partial ranking functions of CR eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_n-V_x_0_sink-1


### Resulting Chains:eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* [[7],9]
* [[7],8]
* [9]
* [8]


### Specialization of cost equations eval_speed_popl10_nested_single_bb1_in/3 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_speed_popl10_nested_single_bb1_in/3 
* CE 11: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) = 0
     [V_x_0>=V_n,B=3] 
* CE 12: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) = 2+ eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0,C,V_n,V_n):[[7],9]+ eval_speed_popl10_nested_single_bb1_in(V_n,V_n,D)
     [V_n>=V_x_0+2,D=3,C=2,B=3] 
* CE 13: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) = 2+ eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0,C,V_n,D):[[7],8]+ eval_speed_popl10_nested_single_bb1_in(V_n,D,E)
     [V_n>=D+1,D>=V_x_0+2,E=3,C=2,B=3] 
* CE 14: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) = 2+ eval_speed_popl10_nested_single_bb2_in(V_n,C,D,E,V_n,V_n):[9]+ eval_speed_popl10_nested_single_bb1_in(V_n,V_n,F)
     [V_n=D+1,V_n=C+1,V_n=V_x_0+1,F=3,E=2,B=3] 
* CE 15: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) = 2+ eval_speed_popl10_nested_single_bb2_in(V_n,C,D,E,V_n,F):[8]+ eval_speed_popl10_nested_single_bb1_in(V_n,F,G)
     [V_n>=F+1,F=D+1,F=C+1,F=V_x_0+1,G=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_speed_popl10_nested_single_bb1_in/3 
* CEs [13] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [11] --> Loop 14 

#### Loops of eval_speed_popl10_nested_single_bb1_in/3 
* Loop 10: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B)->  eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0',B')
                  [V_n>=V_x_0'+1,V_x_0'>=V_x_0+2,B'=3,B=3] 
* Loop 11: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B)->  eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0',B')
                  [V_n>=V_x_0+2,V_x_0+1=V_x_0',B'=3,B=3] 
* Loop 12: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B)->  eval_speed_popl10_nested_single_bb1_in(V_n,V_n,A')
                  [V_n>=V_x_0+2,A'=3,B=3] 
* Loop 13: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B)->  eval_speed_popl10_nested_single_bb1_in(V_n,V_n,A')
                  [V_n=V_x_0+1,A'=3,B=3] 
* Loop 14: eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) [V_x_0>=V_n,B=3] 

### Ranking functions of CR eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) 
* RF of phase [10,11]: [V_n-V_x_0-1]

#### Partial ranking functions of CR eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    V_n/2-V_x_0/2-1
  - RF of loop [11:1]:
    V_n-V_x_0-1


### Resulting Chains:eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) 
* [[10,11],13,14]
* [[10,11],12,14]
* [14]
* [13,14]
* [12,14]


### Specialization of cost equations eval_speed_popl10_nested_single_start/2 
* CE 2 is refined into CE [16,17,18,19,20] 


#### Refined cost equations eval_speed_popl10_nested_single_start/2 
* CE 16: eval_speed_popl10_nested_single_start(V_n,B) = 1+ eval_speed_popl10_nested_single_bb1_in(V_n,C,D):[[10,11],13,14]
     [V_n>=2,D=3,C=0] 
* CE 17: eval_speed_popl10_nested_single_start(V_n,B) = 1+ eval_speed_popl10_nested_single_bb1_in(V_n,C,D):[[10,11],12,14]
     [V_n>=3,D=3,C=0] 
* CE 18: eval_speed_popl10_nested_single_start(V_n,B) = 1+ eval_speed_popl10_nested_single_bb1_in(V_n,C,D):[14]
     [0>=V_n,D=3,C=0] 
* CE 19: eval_speed_popl10_nested_single_start(V_n,B) = 1+ eval_speed_popl10_nested_single_bb1_in(C,D,E):[13,14]
     [E=3,D=0,C=1,V_n=1] 
* CE 20: eval_speed_popl10_nested_single_start(V_n,B) = 1+ eval_speed_popl10_nested_single_bb1_in(V_n,C,D):[12,14]
     [V_n>=2,D=3,C=0] 

### Cost equations --> "Loop" of eval_speed_popl10_nested_single_start/2 
* CEs [17] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_speed_popl10_nested_single_start/2 
* Loop 15: eval_speed_popl10_nested_single_start(V_n,B) [V_n>=3] 
* Loop 16: eval_speed_popl10_nested_single_start(V_n,B) [V_n>=2] 
* Loop 17: eval_speed_popl10_nested_single_start(V_n,B) [V_n>=2] 
* Loop 18: eval_speed_popl10_nested_single_start(V_n,B) [0>=V_n] 
* Loop 19: eval_speed_popl10_nested_single_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_speed_popl10_nested_single_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_popl10_nested_single_start(V_n,B) 


### Resulting Chains:eval_speed_popl10_nested_single_start(V_n,B) 
* [19]
* [18]
* [17]
* [16]
* [15]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_speed_popl10_nested_single_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1
#### Cost of phase [7]:eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_speed_popl10_nested_single_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_n-V_x_0_sink-1
it(7) =< V_n-V_x_0_sink-V_n'+V_x_0_sink'
it(7) >= V_n-V_x_0_sink-V_n'+V_x_0_sink'

#### Cost of phase [7]:eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_speed_popl10_nested_single_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_n-V_x_0_sink-1
it(7) =< V_n-V_x_0_sink-V_n'+V_x_0_sink'
it(7) >= V_n-V_x_0_sink-V_n'+V_x_0_sink'

#### Cost of chains of eval_speed_popl10_nested_single_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D):
* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V_n-V_x_0_sink-1
it(7) >= V_n-V_x_0_sink-1

  with precondition: [B=2,V_n=C,V_n=D,V_x_0_sink>=V_x_0,V_n>=V_x_0_sink+2] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_x_0_sink+D-1
it(7) >= -V_x_0_sink+D-1

  with precondition: [B=2,V_n=C,V_x_0_sink>=V_x_0,D>=V_x_0_sink+2,V_n>=D+1] 

* Chain [9]: 0
  with precondition: [B=2,V_x_0_sink+1=V_n,V_x_0_sink+1=C,V_x_0_sink+1=D,V_x_0_sink>=V_x_0] 

* Chain [8]: 0
  with precondition: [B=2,V_n=C,V_x_0_sink+1=D,V_x_0_sink>=V_x_0,V_n>=V_x_0_sink+2] 


#### Cost of loops [10,11] 

 * loop 10:eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) -> [eval_speed_popl10_nested_single_bb1_in(V_n',V_x_0',B')] 
1*s(2)+2
  Such that:s(2) =< -V_x_0+V_x_0'-1
s(2) >= -V_x_0+V_x_0'-1

 * loop 11:eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) -> [eval_speed_popl10_nested_single_bb1_in(V_n',V_x_0',B')] 
2
#### Cost of phase [10,11]:eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) -> [eval_speed_popl10_nested_single_bb1_in(V_n',V_x_0',B')] 
2*it(10)+2*it(11)+1*s(3)+0
  Such that:it(11)+s(3) =< V_n-V_x_0-2
it(10)+it(11) =< V_n-V_x_0-1
it(10) =< V_n/2-V_x_0/2-1
it(10) =< V_n/2-V_x_0/2-V_n'/2+V_x_0'/2
aux(2) =< V_n-V_x_0-V_n'+V_x_0'
it(10)+it(11) =< aux(2)
it(11)+s(3) =< aux(2)
it(11)+s(3) >= -V_x_0/2+V_x_0'/2

#### Cost of phase [10,11]:eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B) -> [eval_speed_popl10_nested_single_bb1_in(V_n',V_x_0',B')] 
2*it(10)+2*it(11)+1*s(3)+0
  Such that:it(11)+s(3) =< V_n-V_x_0-2
it(10)+it(11) =< V_n-V_x_0-1
it(10) =< V_n/2-V_x_0/2-1
it(10) =< V_n/2-V_x_0/2-V_n'/2+V_x_0'/2
aux(2) =< V_n-V_x_0-V_n'+V_x_0'
it(10)+it(11) =< aux(2)
it(11)+s(3) =< aux(2)
it(11)+s(3) >= -V_x_0/2+V_x_0'/2

#### Cost of chains of eval_speed_popl10_nested_single_bb1_in(V_n,V_x_0,B):
* Chain [[10,11],13,14]: 2*it(10)+2*it(11)+1*s(3)+2
  Such that:s(3)+it(11) =< V_n-V_x_0-2
aux(3) =< V_n-V_x_0-1
it(10)+it(11) =< aux(3)
it(11)+s(3) =< aux(3)
s(3)+it(11) >= V_n/2-V_x_0/2-1/2

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+2] 

* Chain [[10,11],12,14]: 2*it(10)+2*it(11)+1*s(3)+1*s(4)+2
  Such that:s(3)+it(11) =< V_n-V_x_0-2
aux(4) =< V_n-V_x_0-1
it(10)+it(11) =< aux(4)
it(10)+s(4) =< aux(4)
it(11)+s(3) =< aux(4)
s(4) >= 1
s(3)+it(11) >= 1/2
s(3)+it(11)+s(4) >= V_n-V_x_0-1

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+3] 

* Chain [14]: 0
  with precondition: [B=3,V_x_0>=0,V_x_0>=V_n] 

* Chain [13,14]: 2
  with precondition: [B=3,V_x_0+1=V_n,V_x_0>=0] 

* Chain [12,14]: 1*s(4)+2
  Such that:s(4) =< V_n-V_x_0-1
s(4) >= V_n-V_x_0-1

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+2] 


#### Cost of chains of eval_speed_popl10_nested_single_start(V_n,B):
* Chain [19]: 3
  with precondition: [V_n=1] 

* Chain [18]: 1
  with precondition: [0>=V_n] 

* Chain [17]: 1*s(5)+2*s(6)+2*s(8)+3
  Such that:s(6)+s(5) =< V_n-2
s(7) =< V_n-1
s(6)+s(8) =< s(7)
s(5)+s(6) =< s(7)
s(6)+s(5) >= V_n/2-1/2

  with precondition: [V_n>=2] 

* Chain [16]: 1*s(9)+3
  Such that:s(9) =< V_n-1
s(9) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [15]: 1*s(10)+2*s(11)+1*s(13)+2*s(14)+3
  Such that:s(11)+s(10) =< V_n-2
s(12) =< V_n-1
s(11)+s(14) =< s(12)
s(13)+s(14) =< s(12)
s(10)+s(11) =< s(12)
s(13) >= 1
s(10)+s(11) >= 1/2
s(11)+s(10)+s(13) >= V_n-1

  with precondition: [V_n>=3] 


Closed-form bounds of eval_speed_popl10_nested_single_start(V_n,B): 
-------------------------------------
* Chain [19] with precondition: [V_n=1] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [18] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [17] with precondition: [V_n>=2] 
    - Lower bound: V_n/2+5/2 
    - Complexity: n
 * Chain [16] with precondition: [V_n>=2] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [15] with precondition: [V_n>=3] 
    - Lower bound: V_n+2 
    - Complexity: n
 
### Partitioned lower bound of eval_speed_popl10_nested_single_start(V_n,B): 
* 1 
 if [0>=V_n]
* 3 
 if [V_n=1]
* V_n/2+5/2 
 if [V_n>=2]
Possible lower bounds : [1,3,V_n/2+5/2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 108 ms.
   - Backward Invariants 60 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 106 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 205 ms.
   - Equation cost structures 42 ms.
   - Phase cost structures 71 ms.
   - Chain cost structures 63 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 545 ms.

