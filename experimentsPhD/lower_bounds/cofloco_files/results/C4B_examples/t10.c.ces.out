Warning: Ignored call to eval_t10_stop/1 in equation eval_t10_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t10_5/3,eval_t10_6/4,eval_t10_bb1_in/3,eval_t10_bb2_in/3]
1. non_recursive : [eval_t10_bb3_in/1]
2. non_recursive : [loop_cont_eval_t10_bb1_in/2]
3. non_recursive : [eval_t10_4/3]
4. non_recursive : [eval_t10_3/3]
5. non_recursive : [eval_t10_2/3]
6. non_recursive : [eval_t10_1/3]
7. non_recursive : [eval_t10_0/3]
8. non_recursive : [eval_t10_bb0_in/3]
9. non_recursive : [eval_t10_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t10_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_t10_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t10_bb1_in/3 
* CE 5 is refined into CE [6] 
* CE 3 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_t10_bb1_in/3 
* CE 6: eval_t10_bb1_in(V__01,V__0,B) = 0
     [V__01>=V__0,B=2] 
* CE 7: eval_t10_bb1_in(V__01,V__0,B) = 1+ eval_t10_bb1_in(V__01,C,D)
     [V__0>=V__01+1,V__0=C+1,D=2,B=2] 
* CE 8: eval_t10_bb1_in(V__01,V__0,B) = 1+ eval_t10_bb1_in(C,V__0,D)
     [V__0>=V__01+1,V__01+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_t10_bb1_in/3 
* CEs [7] --> Loop 5 
* CEs [8] --> Loop 6 
* CEs [6] --> Loop 7 

#### Loops of eval_t10_bb1_in/3 
* Loop 5: eval_t10_bb1_in(V__01,V__0,B)->  eval_t10_bb1_in(V__01,V__0',B')
                  [V__0>=V__01+1,V__0=V__0'+1,B'=2,B=2] 
* Loop 6: eval_t10_bb1_in(V__01,V__0,B)->  eval_t10_bb1_in(V__01',V__0,B')
                  [V__0>=V__01+1,V__01+1=V__01',B'=2,B=2] 
* Loop 7: eval_t10_bb1_in(V__01,V__0,B) [V__01>=V__0,B=2] 

### Ranking functions of CR eval_t10_bb1_in(V__01,V__0,B) 
* RF of phase [5,6]: [-V__01+V__0]

#### Partial ranking functions of CR eval_t10_bb1_in(V__01,V__0,B) 
* Partial RF of phase [5,6]:
  - RF of loop [5:1,6:1]:
    -V__01+V__0


### Resulting Chains:eval_t10_bb1_in(V__01,V__0,B) 
* [[5,6],7]
* [7]


### Specialization of cost equations eval_t10_start/3 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations eval_t10_start/3 
* CE 9: eval_t10_start(V_x,V_y,B) = 1+ eval_t10_bb1_in(V_y,V_x,C):[[5,6],7]
     [V_x>=V_y+1,C=2] 
* CE 10: eval_t10_start(V_x,V_y,B) = 1+ eval_t10_bb1_in(V_y,V_x,C):[7]
     [V_y>=V_x,C=2] 

### Cost equations --> "Loop" of eval_t10_start/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_t10_start/3 
* Loop 8: eval_t10_start(V_x,V_y,B) [V_x>=V_y+1] 
* Loop 9: eval_t10_start(V_x,V_y,B) [V_y>=V_x] 

### Ranking functions of CR eval_t10_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t10_start(V_x,V_y,B) 


### Resulting Chains:eval_t10_start(V_x,V_y,B) 
* [9]
* [8]


Computing Bounds
=====================================

#### Cost of loops [5,6] 

 * loop 5:eval_t10_bb1_in(V__01,V__0,B) -> [eval_t10_bb1_in(V__01',V__0',B')] 
1
 * loop 6:eval_t10_bb1_in(V__01,V__0,B) -> [eval_t10_bb1_in(V__01',V__0',B')] 
1
#### Cost of phase [5,6]:eval_t10_bb1_in(V__01,V__0,B) -> [eval_t10_bb1_in(V__01',V__0',B')] 
1*it(5)+1*it(6)+0
  Such that:it(5)+it(6) =< -V__01+V__0
it(5)+it(6) =< -V__01+V__0+V__01'-V__0'
it(5)+it(6) >= -V__01+V__0+V__01'-V__0'

#### Cost of chains of eval_t10_bb1_in(V__01,V__0,B):
* Chain [[5,6],7]: 1*it(5)+1*it(6)+0
  Such that:it(6)+it(5) =< -V__01+V__0
it(6)+it(5) >= -V__01+V__0

  with precondition: [B=2,V__0>=V__01+1] 

* Chain [7]: 0
  with precondition: [B=2,V__01>=V__0] 


#### Cost of chains of eval_t10_start(V_x,V_y,B):
* Chain [9]: 1
  with precondition: [V_y>=V_x] 

* Chain [8]: 1*s(1)+1*s(2)+1
  Such that:s(2)+s(1) =< V_x-V_y
s(2)+s(1) >= V_x-V_y

  with precondition: [V_x>=V_y+1] 


Closed-form bounds of eval_t10_start(V_x,V_y,B): 
-------------------------------------
* Chain [9] with precondition: [V_y>=V_x] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [8] with precondition: [V_x>=V_y+1] 
    - Lower bound: V_x-V_y+1 
    - Complexity: n
 
### Partitioned lower bound of eval_t10_start(V_x,V_y,B): 
* 1 
 if [V_y>=V_x]
* V_x-V_y+1 
 if [V_x>=V_y+1]
Possible lower bounds : [1,V_x-V_y+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 35 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 189 ms.

