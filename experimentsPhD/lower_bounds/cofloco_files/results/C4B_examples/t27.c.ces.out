Warning: Ignored call to eval_t27_stop/1 in equation eval_t27_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t27_bb3_in/7,eval_t27_bb4_in/7]
1. recursive : [eval_t27_bb1_in/3,eval_t27_bb2_in/3,loop_cont_eval_t27_bb3_in/4]
2. non_recursive : [eval_t27_bb5_in/1]
3. non_recursive : [loop_cont_eval_t27_bb1_in/2]
4. non_recursive : [eval_t27_5/3]
5. non_recursive : [eval_t27_4/3]
6. non_recursive : [eval_t27_3/3]
7. non_recursive : [eval_t27_2/3]
8. non_recursive : [eval_t27_1/3]
9. non_recursive : [eval_t27_0/3]
10. non_recursive : [eval_t27_bb0_in/3]
11. non_recursive : [eval_t27_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t27_bb3_in/7
1. SCC is partially evaluated into eval_t27_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_t27_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t27_bb3_in/7 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_t27_bb3_in/7 
* CE 7: eval_t27_bb3_in(A,B,C,D,E,D,C) = 0
     [A+1000>=D,99>=D,0>=C,C=B+1,E=2] 
* CE 8: eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) = 1+ eval_t27_bb3_in(V__01,E,V_1,F,G,C,D)
     [V__01+1000>=V__1,V__1>=100,0>=V_1,V__1=F+100,V_1=E+1,V_1=V__0+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_t27_bb3_in/7 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_t27_bb3_in/7 
* Loop 6: eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D)->  eval_t27_bb3_in(V__01,V__0',V_1,V__1',B',C,D)
                  [V__01+1000>=V__1,V__1>=100,0>=V_1,V__1=V__1'+100,V_1=V__0'+1,V_1=V__0+1,B'=2,B=2] 
* Loop 7: eval_t27_bb3_in(A,B,C,D,E,D,C) [A+1000>=D,99>=D,0>=C,C=B+1,E=2] 

### Ranking functions of CR eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) 
* RF of phase [6]: [V__1/100-99/100]

#### Partial ranking functions of CR eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V__1/100-99/100


### Resulting Chains:eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) 
* [[6],7]
* [7]


### Specialization of cost equations eval_t27_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_t27_bb1_in/3 
* CE 9: eval_t27_bb1_in(V__01,V__0,B) = 0
     [V__0>=0,B=3] 
* CE 10: eval_t27_bb1_in(V__01,V__0,B) = 2+ eval_t27_bb3_in(C,D,E,F,G,H,E):[[6],7]+ eval_t27_bb1_in(H,E,I)
     [F>=H+100,H>=0,99>=H,0>=E,E=D+1,F=C+1000,E=V__0+1,F=V__01+1000,I=3,G=2,B=3] 
* CE 11: eval_t27_bb1_in(V__01,V__0,B) = 2+ eval_t27_bb3_in(C,D,E,F,G,F,E):[7]+ eval_t27_bb1_in(F,E,H)
     [99>=F,0>=E,E=D+1,F=C+1000,E=V__0+1,F=V__01+1000,H=3,G=2,B=3] 

### Cost equations --> "Loop" of eval_t27_bb1_in/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_t27_bb1_in/3 
* Loop 8: eval_t27_bb1_in(V__01,V__0,B)->  eval_t27_bb1_in(V__01',V__0',B')
                  [V__01+900>=V__01',V__01'>=0,99>=V__01',0>=V__0+1,V__0+1=V__0',B'=3,B=3] 
* Loop 9: eval_t27_bb1_in(V__01,V__0,B)->  eval_t27_bb1_in(V__01',V__0',B')
                  [99>=V__01',0>=V__0+1,V__0+1=V__0',V__01'=V__01+1000,B'=3,B=3] 
* Loop 10: eval_t27_bb1_in(V__01,V__0,B) [V__0>=0,B=3] 

### Ranking functions of CR eval_t27_bb1_in(V__01,V__0,B) 
* RF of phase [8]: [-V__0]
* RF of phase [9]: [-V__0,-V__01/1000-9/10]

#### Partial ranking functions of CR eval_t27_bb1_in(V__01,V__0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -V__0
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__0
    -V__01/1000-9/10


### Resulting Chains:eval_t27_bb1_in(V__01,V__0,B) 
* [[9],[8],10]
* [[9],10]
* [[8],10]
* [10]


### Specialization of cost equations eval_t27_start/3 
* CE 2 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_t27_start/3 
* CE 12: eval_t27_start(V_n,V_y,B) = 1+ eval_t27_bb1_in(V_y,V_n,C):[[9],[8],10]
     [V_y>=1000*V_n+100,0>=V_n+2,0>=V_y+901,C=3] 
* CE 13: eval_t27_start(V_n,V_y,B) = 1+ eval_t27_bb1_in(V_y,V_n,C):[[9],10]
     [1000*V_n+99>=V_y,0>=V_n+1,C=3] 
* CE 14: eval_t27_start(V_n,V_y,B) = 1+ eval_t27_bb1_in(V_y,V_n,C):[[8],10]
     [V_y+900>=0,0>=V_n+1,C=3] 
* CE 15: eval_t27_start(V_n,V_y,B) = 1+ eval_t27_bb1_in(V_y,V_n,C):[10]
     [V_n>=0,C=3] 

### Cost equations --> "Loop" of eval_t27_start/3 
* CEs [15] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_t27_start/3 
* Loop 11: eval_t27_start(V_n,V_y,B) [V_n>=0] 
* Loop 12: eval_t27_start(V_n,V_y,B) [V_y>=1000*V_n+100,0>=V_y+901,0>=V_n+2] 
* Loop 13: eval_t27_start(V_n,V_y,B) [1000*V_n+99>=V_y,0>=V_n+1] 
* Loop 14: eval_t27_start(V_n,V_y,B) [V_y+900>=0,0>=V_n+1] 

### Ranking functions of CR eval_t27_start(V_n,V_y,B) 

#### Partial ranking functions of CR eval_t27_start(V_n,V_y,B) 


### Resulting Chains:eval_t27_start(V_n,V_y,B) 
* [14]
* [13]
* [12]
* [11]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) -> [eval_t27_bb3_in(V__01',V__0',V_1',V__1',B',C',D')] 
1
#### Cost of phase [6]:eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D) -> [eval_t27_bb3_in(V__01',V__0',V_1',V__1',B',C',D')] 
1*it(6)+0
  Such that:it(6) =< V__1/100-99/100
it(6) =< V__1/100-V__1'/100
it(6) >= V__1/100-V__1'/100

#### Cost of chains of eval_t27_bb3_in(V__01,V__0,V_1,V__1,B,C,D):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V__1/100-99/100
it(6) >= V__1/100-C/100

  with precondition: [B=2,V__0+1=V_1,V__0+1=D,0>=V__0+1,99>=C,C>=0,V__01+1000>=V__1,V__1>=C+100] 

* Chain [7]: 0
  with precondition: [B=2,V__0+1=V_1,V__1=C,V__0+1=D,0>=V__0+1,99>=V__1,V__01+1000>=V__1] 


#### Cost of loops [8] 

 * loop 8:eval_t27_bb1_in(V__01,V__0,B) -> [eval_t27_bb1_in(V__01',V__0',B')] 
1*s(2)+2
  Such that:s(2) =< V__01/100+901/100
s(2) >= V__01/100-V__01'/100+10

#### Cost of phase [8]:eval_t27_bb1_in(V__01,V__0,B) -> [eval_t27_bb1_in(V__01',V__0',B')] 
2*it(8)+1*s(3)+0
  Such that:s(3) =< V__01/100-10*V__0-99/100
s(3) =< V__01/100-10*V__0-V__01'/100+10*V__0'
it(8) =< -V__0
it(8) =< -V__0+V__0'
aux(1) >= 1
s(3) >= V__01/100-10*V__0-V__01'/100+10*V__0'
it(8) >= -V__0+V__0'
s(3) >= it(8)*aux(1)

#### Cost of loops [9] 

 * loop 9:eval_t27_bb1_in(V__01,V__0,B) -> [eval_t27_bb1_in(V__01',V__0',B')] 
2
#### Cost of phase [9]:eval_t27_bb1_in(V__01,V__0,B) -> [eval_t27_bb1_in(V__01',V__0',B')] 
2*it(9)+0
  Such that:it(9) =< -V__01/1000-9/10
it(9) =< -V__01/1000+V__01'/1000
it(9) =< -V__0
it(9) =< -V__0+V__0'
it(9) >= -V__01/1000+V__01'/1000
it(9) >= -V__0+V__0'

#### Cost of phase [9]:eval_t27_bb1_in(V__01,V__0,B) -> [eval_t27_bb1_in(V__01',V__0',B')] 
2*it(9)+0
  Such that:it(9) =< -V__01/1000-9/10
it(9) =< -V__01/1000+V__01'/1000
it(9) =< -V__0
it(9) =< -V__0+V__0'
it(9) >= -V__01/1000+V__01'/1000
it(9) >= -V__0+V__0'

#### Cost of chains of eval_t27_bb1_in(V__01,V__0,B):
* Chain [[9],[8],10]: 2*it(8)+2*it(9)+1*s(3)+0
  Such that:it(9) =< -V__01/1000-9/10
s(3) =< V__01/100-10*V__0-99/100
it(8) =< V__01/1000-V__0+9/10
it(9) >= -V__01/1000-9/10
s(3) >= V__01/100-10*V__0-99/100
it(8) >= V__01/1000-V__0-99/1000
it(9)+s(3) >= -901*V__0-801
it(9)+it(8) >= -V__0
aux(2) >= 1
aux(2) >= aux(2)
it(8) >= aux(2)
it(9) >= aux(2)
s(3) >= aux(2)
s(3) >= it(8)*aux(2)

  with precondition: [B=3,0>=V__01+901,0>=V__0+2,V__01>=1000*V__0+100] 

* Chain [[9],10]: 2*it(9)+0
  Such that:it(9) =< -V__01/1000-9/10
it(9) >= -V__0

  with precondition: [B=3,0>=V__0+1,1000*V__0+99>=V__01] 

* Chain [[8],10]: 2*it(8)+1*s(3)+0
  Such that:s(3) =< V__01/100-10*V__0-99/100
it(8) =< -V__0
aux(1) >= 1
s(3) >= V__01/100-10*V__0-99/100
it(8) >= -V__0
s(3) >= -901/100*V__0-801/100
s(3) >= it(8)*aux(1)

  with precondition: [B=3,0>=V__0+1,V__01+900>=0] 

* Chain [10]: 0
  with precondition: [B=3,V__0>=0] 


#### Cost of chains of eval_t27_start(V_n,V_y,B):
* Chain [14]: 1*s(4)+2*s(5)+1
  Such that:s(4) =< -10*V_n+V_y/100-99/100
s(5) =< -V_n
s(6) >= 1
s(4) >= -10*V_n+V_y/100-99/100
s(5) >= -V_n
s(4) >= -901/100*V_n-801/100
s(4) >= s(5)*s(6)

  with precondition: [0>=V_n+1,V_y+900>=0] 

* Chain [13]: 2*s(7)+1
  Such that:s(7) =< -V_y/1000-9/10
s(7) >= -V_n

  with precondition: [0>=V_n+1,1000*V_n+99>=V_y] 

* Chain [12]: 2*s(8)+1*s(9)+2*s(10)+1
  Such that:s(9) =< -10*V_n+V_y/100-99/100
s(10) =< -V_n+V_y/1000+9/10
s(8) =< -V_y/1000-9/10
s(11) >= 1
s(9)+s(8) >= -901*V_n-801
s(9) >= -10*V_n+V_y/100-99/100
s(10)+s(8) >= -V_n
s(10) >= -V_n+V_y/1000-99/1000
s(8) >= -V_y/1000-9/10
s(11) >= s(11)
s(10) >= s(11)
s(8) >= s(11)
s(9) >= s(11)
s(9) >= s(10)*s(11)

  with precondition: [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100] 

* Chain [11]: 1
  with precondition: [V_n>=0] 


Closed-form bounds of eval_t27_start(V_n,V_y,B): 
-------------------------------------
* Chain [14] with precondition: [0>=V_n+1,V_y+900>=0] 
    - Lower bound: -12*V_n+V_y/100+1/100 
    - Complexity: n
 * Chain [13] with precondition: [0>=V_n+1,1000*V_n+99>=V_y] 
    - Lower bound: -2*V_n+1 
    - Complexity: n
 * Chain [12] with precondition: [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100] 
    - Lower bound: -12*V_n+V_y/100-497/250 
    - Complexity: n
 * Chain [11] with precondition: [V_n>=0] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_t27_start(V_n,V_y,B): 
* 1 
 if [V_n>=0]
* -2*V_n+1 
 if [0>=V_n+1,1000*V_n+99>=V_y]
* -12*V_n+V_y/100+1/100 
 if [0>=V_n+1,V_y+900>=0]
* -12*V_n+V_y/100-497/250 
 if [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100]
Possible lower bounds : [1,-2*V_n+1,-12*V_n+V_y/100+1/100,-12*V_n+V_y/100-497/250]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 94 ms.
   - Backward Invariants 44 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 83 ms.
* Termination proved in 26 ms.
* Upper bounds computed in 211 ms.
   - Equation cost structures 51 ms.
   - Phase cost structures 78 ms.
   - Chain cost structures 66 ms.
   - Solving cost expressions 10 ms.
* Total analysis performed in 502 ms.

