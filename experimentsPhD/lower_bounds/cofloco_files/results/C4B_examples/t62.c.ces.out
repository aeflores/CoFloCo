Warning: Ignored call to eval_t62_stop/1 in equation eval_t62_16/1 
Warning: Ignored call to eval_t62_stop/1 in equation eval_t62_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_t62_4/10,eval_t62_5/10,eval_t62_6/10,eval_t62_7/11,eval_t62_bb2_in/9,eval_t62_bb3_in/10]
1. recursive : [eval_t62_10/13,eval_t62_11/13,eval_t62_12/14,eval_t62_9/13,eval_t62__critedge_in/12,eval_t62_bb4_in/13]
2. recursive : [eval_t62_13/7,eval_t62_14/7,eval_t62__critedge3_in/7,eval_t62_bb1_in/3,eval_t62_bb6_in/7,loop_cont_eval_t62__critedge_in/8,loop_cont_eval_t62_bb2_in/7]
3. non_recursive : [eval_t62_16/1]
4. non_recursive : [eval_t62_15/1]
5. non_recursive : [eval_t62_bb7_in/1]
6. non_recursive : [eval_t62_bb5_in/1]
7. non_recursive : [loop_cont_eval_t62_bb1_in/2]
8. non_recursive : [eval_t62_2/3]
9. non_recursive : [eval_t62_1/3]
10. non_recursive : [eval_t62_0/3]
11. non_recursive : [eval_t62_bb0_in/3]
12. non_recursive : [eval_t62_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t62_bb2_in/9
1. SCC is partially evaluated into eval_t62__critedge_in/12
2. SCC is partially evaluated into eval_t62_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_t62_2/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_t62_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t62_bb2_in/9 
* CE 9 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 8 is refined into CE [15] 


#### Refined cost equations eval_t62_bb2_in/9 
* CE 13: eval_t62_bb2_in(A,B,C,D,A,B,C,E,A) = 0
     [A>=C+2,C>=B,C+1=E,D=2] 
* CE 14: eval_t62_bb2_in(A,B,C,D,E,B,C,F,G) = 0
     [C>=B,C+1=G,C+1=F,C+1=E,C+1=A,D=2] 
* CE 15: eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) = 1+ eval_t62_bb2_in(V__01,V__0,H,I,C,D,E,F,G)
     [V__01>=H+1,H>=V__0+1,H=V__1+1,I=2,B=2] 

### Cost equations --> "Loop" of eval_t62_bb2_in/9 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_t62_bb2_in/9 
* Loop 12: eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G)->  eval_t62_bb2_in(V__01,V__0,V__1',B',C,D,E,F,G)
                  [V__01>=V__1'+1,V__1'>=V__0+1,V__1'=V__1+1,B'=2,B=2] 
* Loop 13: eval_t62_bb2_in(A,B,C,D,A,B,C,E,A) [A>=C+2,C>=B,C+1=E,D=2] 
* Loop 14: eval_t62_bb2_in(A,B,C,D,E,B,C,F,G) [C>=B,C+1=G,C+1=F,C+1=E,C+1=A,D=2] 

### Ranking functions of CR eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* RF of phase [12]: [V__01-V__1-1]

#### Partial ranking functions of CR eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__01-V__1-1


### Resulting Chains:eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Specialization of cost equations eval_t62__critedge_in/12 
* CE 10 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


#### Refined cost equations eval_t62__critedge_in/12 
* CE 16: eval_t62__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [D+1>=E,E=G+1,F=3] 
* CE 17: eval_t62__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [E>=D+2,E=G+1,F=3] 
* CE 18: eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) = 1+ eval_t62__critedge_in(V__01,V__0,V__1,V_1,I,J,C,D,E,F,G,H)
     [I>=V_1+1,I+1=V__12,J=3,B=3] 

### Cost equations --> "Loop" of eval_t62__critedge_in/12 
* CEs [18] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_t62__critedge_in/12 
* Loop 15: eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H)->  eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12',B',C,D,E,F,G,H)
                  [V__12'>=V_1+1,V__12'+1=V__12,B'=3,B=3] 
* Loop 16: eval_t62__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) [D+1>=E,E=G+1,F=3] 
* Loop 17: eval_t62__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) [E>=D+2,E=G+1,F=3] 

### Ranking functions of CR eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* RF of phase [15]: [-V_1+V__12-1]

#### Partial ranking functions of CR eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V_1+V__12-1


### Resulting Chains:eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Specialization of cost equations eval_t62_bb1_in/3 
* CE 6 is refined into CE [19,20,21,22] 
* CE 5 is refined into CE [23,24,25,26,27,28] 


#### Refined cost equations eval_t62_bb1_in/3 
* CE 19: eval_t62_bb1_in(V__01,V__0,B) = 3+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_t62__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,I,J):[[15],17]+ eval_t62_bb1_in(J,K,L)
     [V__01>=J+2,J>=D+2,D>=V__0+1,D+1=K,J+1=I,D+1=H,D+1=F,D+1=E,L=4,G=3,C=2,B=4] 
* CE 20: eval_t62_bb1_in(V__01,V__0,B) = 3+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_t62__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,V__01,I):[17]+ eval_t62_bb1_in(J,K,L)
     [V__01>=D+3,D>=V__0+1,D+1=K,V__01=J+1,V__01=I+1,D+1=H,D+1=F,D+1=E,L=4,G=3,C=2,B=4] 
* CE 21: eval_t62_bb1_in(V__01,V__0,B) = 3+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_t62__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,H,I):[[15],17]+ eval_t62_bb1_in(I,J,K)
     [V__01>=I+2,I>=V__0+2,V__0+1=J,I+1=H,V__0+1=G,V__0+1=E,V__0+1=D,K=4,F=3,C=2,B=4] 
* CE 22: eval_t62_bb1_in(V__01,V__0,B) = 3+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_t62__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,V__01,H):[17]+ eval_t62_bb1_in(I,J,K)
     [V__01>=V__0+3,V__0+1=J,V__01=I+1,V__01=H+1,V__0+1=G,V__0+1=E,V__0+1=D,K=4,F=3,C=2,B=4] 
* CE 23: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,V__01,V__01):[[12],14]+ eval_t62__critedge_in(V__01,V__0,E,V__01,V__01,F,V__01,V__0,G,V__01,V__01,H):[16]
     [V__01>=V__0+2,V__01=H+1,V__01=G+1,V__01=E+1,V__01=D+1,F=3,C=2,B=4] 
* CE 24: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_t62__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,I,J):[[15],16]
     [V__01>=D+3,D>=V__0+1,D+1=J,D+2=I,D+1=H,D+1=F,D+1=E,G=3,C=2,B=4] 
* CE 25: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_t62__critedge_in(V__01,V__0,F,G,V__01,H,V__01,V__0,I,J,V__01,K):[16]
     [V__01>=V__0+3,V__01=K+1,V__01=J+1,V__01=I+2,V__01=G+1,V__01=F+2,V__01=E+1,V__01=D+2,H=3,C=2,B=4] 
* CE 26: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,C,D,E,V__01,F,G,V__01,V__01):[14]+ eval_t62__critedge_in(V__01,H,I,V__01,V__01,J,V__01,K,L,V__01,V__01,M):[16]
     [V__01=M+1,V__01=L+1,V__01=K+1,V__01=I+1,V__01=H+1,V__01=G+1,V__01=F+1,V__01=D+1,V__01=C+1,V__01=V__0+1,J=3,E=2,B=4] 
* CE 27: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_t62__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,H,I):[[15],16]
     [V__01>=V__0+3,V__0+1=I,V__0+2=H,V__0+1=G,V__0+1=E,V__0+1=D,F=3,C=2,B=4] 
* CE 28: eval_t62_bb1_in(V__01,V__0,B) = 2+ eval_t62_bb2_in(V__01,C,D,E,V__01,F,G,H,V__01):[13]+ eval_t62__critedge_in(V__01,I,J,K,V__01,L,V__01,M,N,O,V__01,P):[16]
     [V__01=P+1,V__01=O+1,V__01=N+2,V__01=M+2,V__01=K+1,V__01=J+2,V__01=I+2,V__01=H+1,V__01=G+2,V__01=F+2,V__01=D+2,V__01=C+2,V__01=V__0+2,L=3,E=2,B=4] 

### Cost equations --> "Loop" of eval_t62_bb1_in/3 
* CEs [24] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [19] --> Loop 24 
* CEs [21] --> Loop 25 
* CEs [20] --> Loop 26 
* CEs [22] --> Loop 27 

#### Loops of eval_t62_bb1_in/3 
* Loop 18: eval_t62_bb1_in(V__01,V__0,B) [V__01>=V__0+4,B=4] 
* Loop 19: eval_t62_bb1_in(V__01,V__0,B) [V__01>=V__0+3,B=4] 
* Loop 20: eval_t62_bb1_in(V__01,V__0,B) [V__01>=V__0+3,B=4] 
* Loop 21: eval_t62_bb1_in(V__01,V__0,B) [V__01>=V__0+2,B=4] 
* Loop 22: eval_t62_bb1_in(V__01,V__0,B) [V__01=V__0+2,B=4] 
* Loop 23: eval_t62_bb1_in(V__01,V__0,B) [V__01=V__0+1,B=4] 
* Loop 24: eval_t62_bb1_in(V__01,V__0,B)->  eval_t62_bb1_in(V__01',V__0',B')
                  [V__01'>=V__0'+1,V__01>=V__01'+2,V__0'>=V__0+2,B'=4,B=4] 
* Loop 25: eval_t62_bb1_in(V__01,V__0,B)->  eval_t62_bb1_in(V__01',V__0',B')
                  [V__01>=V__01'+2,V__01'>=V__0+2,V__0+1=V__0',B'=4,B=4] 
* Loop 26: eval_t62_bb1_in(V__01,V__0,B)->  eval_t62_bb1_in(V__01',V__0',B')
                  [V__01>=V__0'+2,V__0'>=V__0+2,V__01=V__01'+1,B'=4,B=4] 
* Loop 27: eval_t62_bb1_in(V__01,V__0,B)->  eval_t62_bb1_in(V__01',V__0',B')
                  [V__01>=V__0'+2,V__01=V__01'+1,V__0'=V__0+1,B'=4,B=4] 

### Ranking functions of CR eval_t62_bb1_in(V__01,V__0,B) 
* RF of phase [24,25,26,27]: [V__01/2-V__0/2-1]

#### Partial ranking functions of CR eval_t62_bb1_in(V__01,V__0,B) 
* Partial RF of phase [24,25,26,27]:
  - RF of loop [24:1]:
    V__01/4-V__0/4-1
  - RF of loop [25:1,26:1]:
    V__01/3-V__0/3-1
  - RF of loop [27:1]:
    V__01/2-V__0/2-1


### Resulting Chains:eval_t62_bb1_in(V__01,V__0,B) 
* [[24,25,26,27],23]
* [[24,25,26,27],22]
* [[24,25,26,27],21]
* [[24,25,26,27],20]
* [[24,25,26,27],19]
* [[24,25,26,27],18]
* [23]
* [22]
* [21]
* [20]
* [19]
* [18]


### Specialization of cost equations eval_t62_2/3 
* CE 4 is refined into CE [29] 
* CE 3 is refined into CE [30,31,32,33,34,35,36,37,38,39,40,41] 


#### Refined cost equations eval_t62_2/3 
* CE 29: eval_t62_2(V_l,V_h,B) = 0
     [V_l>=V_h] 
* CE 30: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],23]
     [V_h>=V_l+3,C=4] 
* CE 31: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],22]
     [V_h>=V_l+4,C=4] 
* CE 32: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],21]
     [V_h>=V_l+4,C=4] 
* CE 33: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],20]
     [V_h>=V_l+5,C=4] 
* CE 34: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],19]
     [V_h>=V_l+5,C=4] 
* CE 35: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[[24,25,26,27],18]
     [V_h>=V_l+6,C=4] 
* CE 36: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,C,D):[23]
     [V_h=C+1,V_h=V_l+1,D=4] 
* CE 37: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,C,D):[22]
     [V_h=C+2,V_h=V_l+2,D=4] 
* CE 38: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[21]
     [V_h>=V_l+2,C=4] 
* CE 39: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[20]
     [V_h>=V_l+3,C=4] 
* CE 40: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[19]
     [V_h>=V_l+3,C=4] 
* CE 41: eval_t62_2(V_l,V_h,B) = 1+ eval_t62_bb1_in(V_h,V_l,C):[18]
     [V_h>=V_l+4,C=4] 

### Cost equations --> "Loop" of eval_t62_2/3 
* CEs [29] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [41] --> Loop 32 
* CEs [32] --> Loop 33 
* CEs [31] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [39] --> Loop 36 
* CEs [30] --> Loop 37 
* CEs [38] --> Loop 38 
* CEs [36] --> Loop 39 
* CEs [37] --> Loop 40 

#### Loops of eval_t62_2/3 
* Loop 28: eval_t62_2(V_l,V_h,B) [V_l>=V_h] 
* Loop 29: eval_t62_2(V_l,V_h,B) [V_h>=V_l+6] 
* Loop 30: eval_t62_2(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 31: eval_t62_2(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 32: eval_t62_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 33: eval_t62_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 34: eval_t62_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 35: eval_t62_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 36: eval_t62_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 37: eval_t62_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 38: eval_t62_2(V_l,V_h,B) [V_h>=V_l+2] 
* Loop 39: eval_t62_2(V_l,V_h,B) [V_l+1=V_h] 
* Loop 40: eval_t62_2(V_l,V_h,B) [V_l+2=V_h] 

### Ranking functions of CR eval_t62_2(V_l,V_h,B) 

#### Partial ranking functions of CR eval_t62_2(V_l,V_h,B) 


### Resulting Chains:eval_t62_2(V_l,V_h,B) 
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]


### Specialization of cost equations eval_t62_start/3 
* CE 2 is refined into CE [42,43,44,45,46,47,48,49,50,51,52,53,54] 


#### Refined cost equations eval_t62_start/3 
* CE 42: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,C,B):[40]
     [V_l+2=C,V_l+2=V_h] 
* CE 43: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,C,B):[39]
     [V_l+1=C,V_l+1=V_h] 
* CE 44: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[38]
     [V_h>=V_l+2] 
* CE 45: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[37]
     [V_h>=V_l+3] 
* CE 46: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[36]
     [V_h>=V_l+3] 
* CE 47: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[35]
     [V_h>=V_l+3] 
* CE 48: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[34]
     [V_h>=V_l+4] 
* CE 49: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[33]
     [V_h>=V_l+4] 
* CE 50: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[32]
     [V_h>=V_l+4] 
* CE 51: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[31]
     [V_h>=V_l+5] 
* CE 52: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[30]
     [V_h>=V_l+5] 
* CE 53: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[29]
     [V_h>=V_l+6] 
* CE 54: eval_t62_start(V_l,V_h,B) = 0+ eval_t62_2(V_l,V_h,B):[28]
     [V_l>=V_h] 

### Cost equations --> "Loop" of eval_t62_start/3 
* CEs [54] --> Loop 41 
* CEs [53] --> Loop 42 
* CEs [52] --> Loop 43 
* CEs [51] --> Loop 44 
* CEs [50] --> Loop 45 
* CEs [49] --> Loop 46 
* CEs [48] --> Loop 47 
* CEs [47] --> Loop 48 
* CEs [46] --> Loop 49 
* CEs [45] --> Loop 50 
* CEs [44] --> Loop 51 
* CEs [43] --> Loop 52 
* CEs [42] --> Loop 53 

#### Loops of eval_t62_start/3 
* Loop 41: eval_t62_start(V_l,V_h,B) [V_l>=V_h] 
* Loop 42: eval_t62_start(V_l,V_h,B) [V_h>=V_l+6] 
* Loop 43: eval_t62_start(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 44: eval_t62_start(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 45: eval_t62_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 46: eval_t62_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 47: eval_t62_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 48: eval_t62_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 49: eval_t62_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 50: eval_t62_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 51: eval_t62_start(V_l,V_h,B) [V_h>=V_l+2] 
* Loop 52: eval_t62_start(V_l,V_h,B) [V_l+1=V_h] 
* Loop 53: eval_t62_start(V_l,V_h,B) [V_l+2=V_h] 

### Ranking functions of CR eval_t62_start(V_l,V_h,B) 

#### Partial ranking functions of CR eval_t62_start(V_l,V_h,B) 


### Resulting Chains:eval_t62_start(V_l,V_h,B) 
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_t62_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1
#### Cost of phase [12]:eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_t62_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(12)+0
  Such that:it(12) =< V__01-V__1-1
it(12) =< V__01-V__1-V__01'+V__1'
it(12) >= V__01-V__1-V__01'+V__1'

#### Cost of phase [12]:eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_t62_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(12)+0
  Such that:it(12) =< V__01-V__1-1
it(12) =< V__01-V__1-V__01'+V__1'
it(12) >= V__01-V__1-V__01'+V__1'

#### Cost of chains of eval_t62_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V__01-V__1-1
it(12) >= V__01-V__1-1

  with precondition: [B=2,V__01=C,V__0=D,V__01=E+1,V__01=F,V__01=G,V__1>=V__0,V__01>=V__1+2] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -V__1+F-1
it(12) >= -V__1+F-1

  with precondition: [B=2,V__01=C,V__0=D,E+1=F,V__01=G,V__1>=V__0,E>=V__1+1,V__01>=E+2] 

* Chain [14]: 0
  with precondition: [B=2,V__1+1=V__01,V__1+1=C,V__0=D,V__1=E,V__1+1=F,V__1+1=G,V__1>=V__0] 

* Chain [13]: 0
  with precondition: [B=2,V__01=C,V__0=D,V__1=E,V__1+1=F,V__01=G,V__1>=V__0,V__01>=V__1+2] 


#### Cost of loops [15] 

 * loop 15:eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_t62__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1
#### Cost of phase [15]:eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_t62__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1*it(15)+0
  Such that:it(15) =< -V_1+V__12-1
it(15) =< -V_1+V__12+V_1'-V__12'
it(15) >= -V_1+V__12+V_1'-V__12'

#### Cost of phase [15]:eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_t62__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1*it(15)+0
  Such that:it(15) =< -V_1+V__12-1
it(15) =< -V_1+V__12+V_1'-V__12'
it(15) >= -V_1+V__12+V_1'-V__12'

#### Cost of chains of eval_t62__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V__12-G
it(15) >= V__12-G

  with precondition: [B=3,V__01=C,V__0=D,V__1=E,V_1=F,G=H+1,G>=V_1+2,V__12>=G+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_1+V__12-1
it(15) >= -V_1+V__12-1

  with precondition: [B=3,V__01=C,V__0=D,V__1=E,V_1=F,V_1+1=G,V_1=H,V__12>=V_1+2] 

* Chain [17]: 0
  with precondition: [B=3,C=V__01,D=V__0,E=V__1,V_1=F,V__12=G,V__12=H+1,V__12>=V_1+2] 

* Chain [16]: 0
  with precondition: [B=3,C=V__01,D=V__0,E=V__1,V_1=F,V__12=G,V__12=H+1,V_1+1>=V__12] 


#### Cost of loops [24,25,26,27] 

 * loop 24:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
1*s(4)+1*s(3)+3
  Such that:s(3) =< V__01-V__01'-1
s(4) =< -V__0+V__0'-1
s(3) >= V__01-V__01'-1
s(4) >= -V__0+V__0'-1

 * loop 25:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
1*s(6)+3
  Such that:s(6) =< V__01-V__01'-1
s(6) >= V__01-V__01'-1

 * loop 26:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
1*s(8)+3
  Such that:s(8) =< -V__0+V__0'-1
s(8) >= -V__0+V__0'-1

 * loop 27:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3
#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of phase [24,25,26,27]:eval_t62_bb1_in(V__01,V__0,B) -> [eval_t62_bb1_in(V__01',V__0',B')] 
3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+0
  Such that:it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-V__01'+V__0'
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(26)+it(27) =< aux(18)
it(24)+it(25)+it(27) =< aux(18)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(26) =< aux(19)
it(25) =< aux(19)
it(25)+it(26) =< aux(19)
it(26) =< aux(20)
it(25) =< aux(20)
it(25)+it(26) =< aux(20)
it(26)+it(27)+s(10)+s(11) >= V__01/2-V__01'/2
aux(21) >= 1
aux(21) >= aux(21)
s(12) >= it(26)*aux(21)

#### Cost of chains of eval_t62_bb1_in(V__01,V__0,B):
* Chain [[24,25,26,27],23]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-1
aux(17) =< V__01/2-V__0/2-1
aux(18) =< V__01/2-V__0/2-1/2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-1/3
it(24) =< V__01/4-V__0/4-1
it(24) =< V__01/4-V__0/4-1/4
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(18)
it(25)+it(26) =< aux(19)
it(25)+it(26) =< aux(20)
s(11)+s(10)+it(27)+it(26) >= 1/2

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [[24,25,26,27],22]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(16) =< V__01-V__0-2
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-2/3
it(24) =< V__01/4-V__0/4-1
aux(22) =< V__01/2-V__0/2-1
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(16)
it(27)+s(11)+s(12) =< aux(16)
it(25)+it(26)+it(27)+s(9) =< aux(16)
it(25)+it(26)+it(27)+s(10) =< aux(16)
it(24)+it(25)+it(26)+it(27) =< aux(22)
it(25)+it(26) =< aux(19)
it(25)+it(26) =< aux(20)
s(11)+s(10)+it(27)+it(26) >= 1/2

  with precondition: [B=4,V__01>=V__0+4] 

* Chain [[24,25,26,27],21]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+1*s(13)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(17) =< V__01/2-V__0/2-1
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-2/3
aux(23) =< V__01-V__0-1
aux(20)+s(13) =< aux(23)
it(24) =< aux(23)
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(23)
it(27)+s(11)+s(12) =< aux(23)
it(25)+it(26)+it(27)+s(9) =< aux(23)
it(25)+it(26)+it(27)+s(10) =< aux(23)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(23)
it(25)+it(26) =< aux(19)
it(25)+it(26) =< aux(20)
s(11)+s(10)+it(27)+it(26) >= 1/2
aux(24) >= 1
s(13) >= aux(24)

  with precondition: [B=4,V__01>=V__0+4] 

* Chain [[24,25,26,27],20]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+1*s(14)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(17) =< V__01/2-V__0/2-1
aux(25) =< V__01-V__0-2
aux(26) =< V__01/3-V__0/3-1
aux(20)+s(14) =< aux(25)
it(24) =< aux(25)
aux(20) =< aux(26)
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(25)
it(27)+s(11)+s(12) =< aux(25)
it(25)+it(26)+it(27)+s(9) =< aux(25)
it(25)+it(26)+it(27)+s(10) =< aux(25)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(25)
it(25)+it(26) =< aux(26)
it(25)+it(26) =< aux(20)
s(11)+s(10)+it(27)+it(26) >= 1/2
aux(27) >= 1
s(14) >= aux(27)

  with precondition: [B=4,V__01>=V__0+5] 

* Chain [[24,25,26,27],19]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+1*s(15)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(17) =< V__01/2-V__0/2-1
aux(28) =< V__01-V__0-2
aux(29) =< V__01/3-V__0/3-1
aux(20)+s(15) =< aux(28)
it(24) =< aux(28)
aux(20) =< aux(29)
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(28)
it(27)+s(11)+s(12) =< aux(28)
it(25)+it(26)+it(27)+s(9) =< aux(28)
it(25)+it(26)+it(27)+s(10) =< aux(28)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(28)
it(25)+it(26) =< aux(29)
it(25)+it(26) =< aux(20)
s(11)+s(10)+it(27)+it(26) >= 1/2
aux(30) >= 1
s(15) >= aux(30)

  with precondition: [B=4,V__01>=V__0+5] 

* Chain [[24,25,26,27],18]: 3*it(24)+3*it(25)+3*it(26)+3*it(27)+1*s(9)+1*s(10)+1*s(11)+1*s(12)+1*s(16)+1*s(17)+2
  Such that:aux(14) =< V__01-V__0-4
aux(15) =< V__01-V__0-3
aux(17) =< V__01/2-V__0/2-1
aux(19) =< V__01/3-V__0/3-1
aux(20) =< V__01/3-V__0/3-4/3
it(24) =< V__01/4-V__0/4-1
aux(31) =< V__01-V__0-2
aux(20)+s(16) =< aux(31)
it(24)+s(16)+s(17) =< aux(31)
it(25)+it(26)+it(27)+s(9) =< aux(14)
it(25)+it(26)+it(27)+s(10) =< aux(14)
it(26)+it(27)+s(11) =< aux(15)
it(27)+s(11)+s(12) =< aux(15)
it(26)+it(27)+s(11) =< aux(31)
it(27)+s(11)+s(12) =< aux(31)
it(25)+it(26)+it(27)+s(9) =< aux(31)
it(25)+it(26)+it(27)+s(10) =< aux(31)
it(24)+it(25)+it(26)+it(27) =< aux(17)
it(24)+it(25)+it(26)+it(27) =< aux(31)
it(25)+it(26) =< aux(19)
it(25)+it(26) =< aux(20)
s(17)+s(16) >= 2
s(11)+s(10)+it(27)+it(26) >= 1/2

  with precondition: [B=4,V__01>=V__0+6] 

* Chain [23]: 2
  with precondition: [B=4,V__0+1=V__01] 

* Chain [22]: 2
  with precondition: [B=4,V__0+2=V__01] 

* Chain [21]: 1*s(13)+2
  Such that:s(13) =< V__01-V__0-1
s(13) >= V__01-V__0-1

  with precondition: [B=4,V__01>=V__0+2] 

* Chain [20]: 1*s(14)+2
  Such that:s(14) =< V__01-V__0-2
s(14) >= V__01-V__0-2

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [19]: 1*s(15)+2
  Such that:s(15) =< V__01-V__0-2
s(15) >= V__01-V__0-2

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [18]: 1*s(16)+1*s(17)+2
  Such that:s(16)+s(17) =< V__01-V__0-2
s(16)+s(17) >= V__01-V__0-2

  with precondition: [B=4,V__01>=V__0+4] 


#### Cost of chains of eval_t62_2(V_l,V_h,B):
* Chain [40]: 3
  with precondition: [V_h=V_l+2] 

* Chain [39]: 3
  with precondition: [V_h=V_l+1] 

* Chain [38]: 1*s(18)+3
  Such that:s(18) =< -V_l+V_h-1
s(18) >= -V_l+V_h-1

  with precondition: [V_h>=V_l+2] 

* Chain [37]: 3*s(26)+1*s(27)+1*s(28)+3*s(29)+3*s(30)+3*s(31)+1*s(32)+1*s(33)+3
  Such that:s(19) =< -V_l+V_h-4
s(20) =< -V_l+V_h-3
s(21) =< -V_l+V_h-1
s(22) =< -V_l/2+V_h/2-1
s(23) =< -V_l/2+V_h/2-1/2
s(24) =< -V_l/3+V_h/3-1
s(25) =< -V_l/3+V_h/3-1/3
s(26) =< -V_l/4+V_h/4-1
s(26) =< -V_l/4+V_h/4-1/4
s(29)+s(30)+s(31)+s(32) =< s(19)
s(28)+s(29)+s(30)+s(31) =< s(19)
s(27)+s(29)+s(30) =< s(20)
s(27)+s(29)+s(33) =< s(20)
s(27)+s(29)+s(30) =< s(21)
s(27)+s(29)+s(33) =< s(21)
s(29)+s(30)+s(31)+s(32) =< s(21)
s(28)+s(29)+s(30)+s(31) =< s(21)
s(26)+s(29)+s(30)+s(31) =< s(22)
s(26)+s(29)+s(30)+s(31) =< s(23)
s(30)+s(31) =< s(24)
s(30)+s(31) =< s(25)
s(27)+s(28)+s(29)+s(30) >= 1/2

  with precondition: [V_h>=V_l+3] 

* Chain [36]: 1*s(34)+3
  Such that:s(34) =< -V_l+V_h-2
s(34) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+3] 

* Chain [35]: 1*s(35)+3
  Such that:s(35) =< -V_l+V_h-2
s(35) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+3] 

* Chain [34]: 3*s(41)+1*s(43)+1*s(44)+3*s(45)+3*s(46)+3*s(47)+1*s(48)+1*s(49)+3
  Such that:s(36) =< -V_l+V_h-4
s(37) =< -V_l+V_h-3
s(38) =< -V_l+V_h-2
s(42) =< -V_l/2+V_h/2-1
s(39) =< -V_l/3+V_h/3-1
s(40) =< -V_l/3+V_h/3-2/3
s(41) =< -V_l/4+V_h/4-1
s(45)+s(46)+s(47)+s(48) =< s(36)
s(44)+s(45)+s(46)+s(47) =< s(36)
s(43)+s(45)+s(46) =< s(37)
s(43)+s(45)+s(49) =< s(37)
s(43)+s(45)+s(46) =< s(38)
s(43)+s(45)+s(49) =< s(38)
s(45)+s(46)+s(47)+s(48) =< s(38)
s(44)+s(45)+s(46)+s(47) =< s(38)
s(41)+s(45)+s(46)+s(47) =< s(42)
s(46)+s(47) =< s(39)
s(46)+s(47) =< s(40)
s(43)+s(44)+s(45)+s(46) >= 1/2

  with precondition: [V_h>=V_l+4] 

* Chain [33]: 1*s(56)+1*s(57)+3*s(58)+3*s(59)+1*s(61)+3*s(62)+3*s(63)+1*s(64)+1*s(65)+3
  Such that:s(50) =< -V_l+V_h-4
s(51) =< -V_l+V_h-3
s(55) =< -V_l+V_h-1
s(52) =< -V_l/2+V_h/2-1
s(53) =< -V_l/3+V_h/3-1
s(54) =< -V_l/3+V_h/3-2/3
s(54)+s(61) =< s(55)
s(58)+s(59)+s(63)+s(64) =< s(50)
s(57)+s(58)+s(59)+s(63) =< s(50)
s(56)+s(58)+s(59) =< s(51)
s(56)+s(58)+s(65) =< s(51)
s(56)+s(58)+s(59) =< s(55)
s(56)+s(58)+s(65) =< s(55)
s(58)+s(59)+s(63)+s(64) =< s(55)
s(57)+s(58)+s(59)+s(63) =< s(55)
s(58)+s(59)+s(62)+s(63) =< s(52)
s(58)+s(59)+s(62)+s(63) =< s(55)
s(59)+s(63) =< s(53)
s(59)+s(63) =< s(54)
s(60) >= 1
s(56)+s(57)+s(58)+s(59) >= 1/2
s(61) >= s(60)

  with precondition: [V_h>=V_l+4] 

* Chain [32]: 1*s(66)+1*s(67)+3
  Such that:s(67)+s(66) =< -V_l+V_h-2
s(67)+s(66) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+4] 

* Chain [31]: 1*s(73)+1*s(74)+3*s(75)+3*s(76)+1*s(79)+3*s(80)+3*s(81)+1*s(82)+1*s(83)+3
  Such that:s(68) =< -V_l+V_h-4
s(69) =< -V_l+V_h-3
s(71) =< -V_l+V_h-2
s(70) =< -V_l/2+V_h/2-1
s(72) =< -V_l/3+V_h/3-1
s(78)+s(79) =< s(71)
s(78) =< s(72)
s(75)+s(76)+s(81)+s(82) =< s(68)
s(74)+s(75)+s(76)+s(81) =< s(68)
s(73)+s(75)+s(76) =< s(69)
s(73)+s(75)+s(83) =< s(69)
s(73)+s(75)+s(76) =< s(71)
s(73)+s(75)+s(83) =< s(71)
s(75)+s(76)+s(81)+s(82) =< s(71)
s(74)+s(75)+s(76)+s(81) =< s(71)
s(75)+s(76)+s(80)+s(81) =< s(70)
s(75)+s(76)+s(80)+s(81) =< s(71)
s(76)+s(81) =< s(72)
s(76)+s(81) =< s(78)
s(77) >= 1
s(73)+s(74)+s(75)+s(76) >= 1/2
s(79) >= s(77)

  with precondition: [V_h>=V_l+5] 

* Chain [30]: 1*s(89)+1*s(90)+3*s(91)+3*s(92)+1*s(95)+3*s(96)+3*s(97)+1*s(98)+1*s(99)+3
  Such that:s(84) =< -V_l+V_h-4
s(85) =< -V_l+V_h-3
s(87) =< -V_l+V_h-2
s(86) =< -V_l/2+V_h/2-1
s(88) =< -V_l/3+V_h/3-1
s(94)+s(95) =< s(87)
s(94) =< s(88)
s(91)+s(92)+s(97)+s(98) =< s(84)
s(90)+s(91)+s(92)+s(97) =< s(84)
s(89)+s(91)+s(92) =< s(85)
s(89)+s(91)+s(99) =< s(85)
s(89)+s(91)+s(92) =< s(87)
s(89)+s(91)+s(99) =< s(87)
s(91)+s(92)+s(97)+s(98) =< s(87)
s(90)+s(91)+s(92)+s(97) =< s(87)
s(91)+s(92)+s(96)+s(97) =< s(86)
s(91)+s(92)+s(96)+s(97) =< s(87)
s(92)+s(97) =< s(88)
s(92)+s(97) =< s(94)
s(93) >= 1
s(89)+s(90)+s(91)+s(92) >= 1/2
s(95) >= s(93)

  with precondition: [V_h>=V_l+5] 

* Chain [29]: 3*s(105)+1*s(107)+1*s(108)+1*s(109)+1*s(110)+3*s(111)+3*s(112)+3*s(113)+1*s(114)+1*s(115)+3
  Such that:s(100) =< -V_l+V_h-4
s(101) =< -V_l+V_h-3
s(106) =< -V_l+V_h-2
s(102) =< -V_l/2+V_h/2-1
s(103) =< -V_l/3+V_h/3-1
s(104) =< -V_l/3+V_h/3-4/3
s(105) =< -V_l/4+V_h/4-1
s(104)+s(108) =< s(106)
s(105)+s(107)+s(108) =< s(106)
s(111)+s(112)+s(113)+s(114) =< s(100)
s(110)+s(111)+s(112)+s(113) =< s(100)
s(109)+s(111)+s(112) =< s(101)
s(109)+s(111)+s(115) =< s(101)
s(109)+s(111)+s(112) =< s(106)
s(109)+s(111)+s(115) =< s(106)
s(111)+s(112)+s(113)+s(114) =< s(106)
s(110)+s(111)+s(112)+s(113) =< s(106)
s(105)+s(111)+s(112)+s(113) =< s(102)
s(105)+s(111)+s(112)+s(113) =< s(106)
s(112)+s(113) =< s(103)
s(112)+s(113) =< s(104)
s(107)+s(108) >= 2
s(109)+s(110)+s(111)+s(112) >= 1/2

  with precondition: [V_h>=V_l+6] 

* Chain [28]: 0
  with precondition: [V_l>=V_h] 


#### Cost of chains of eval_t62_start(V_l,V_h,B):
* Chain [53]: 3
  with precondition: [V_h=V_l+2] 

* Chain [52]: 3
  with precondition: [V_h=V_l+1] 

* Chain [51]: 1*s(116)+3
  Such that:s(116) =< -V_l+V_h-1
s(116) >= -V_l+V_h-1

  with precondition: [V_h>=V_l+2] 

* Chain [50]: 3*s(124)+1*s(125)+1*s(126)+3*s(127)+3*s(128)+3*s(129)+1*s(130)+1*s(131)+3
  Such that:s(117) =< -V_l+V_h-4
s(118) =< -V_l+V_h-3
s(119) =< -V_l+V_h-1
s(120) =< -V_l/2+V_h/2-1
s(121) =< -V_l/2+V_h/2-1/2
s(122) =< -V_l/3+V_h/3-1
s(123) =< -V_l/3+V_h/3-1/3
s(124) =< -V_l/4+V_h/4-1
s(124) =< -V_l/4+V_h/4-1/4
s(127)+s(128)+s(129)+s(130) =< s(117)
s(126)+s(127)+s(128)+s(129) =< s(117)
s(125)+s(127)+s(128) =< s(118)
s(125)+s(127)+s(131) =< s(118)
s(125)+s(127)+s(128) =< s(119)
s(125)+s(127)+s(131) =< s(119)
s(127)+s(128)+s(129)+s(130) =< s(119)
s(126)+s(127)+s(128)+s(129) =< s(119)
s(124)+s(127)+s(128)+s(129) =< s(120)
s(124)+s(127)+s(128)+s(129) =< s(121)
s(128)+s(129) =< s(122)
s(128)+s(129) =< s(123)
s(125)+s(126)+s(127)+s(128) >= 1/2

  with precondition: [V_h>=V_l+3] 

* Chain [49]: 1*s(132)+3
  Such that:s(132) =< -V_l+V_h-2
s(132) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+3] 

* Chain [48]: 1*s(133)+3
  Such that:s(133) =< -V_l+V_h-2
s(133) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+3] 

* Chain [47]: 3*s(140)+1*s(141)+1*s(142)+3*s(143)+3*s(144)+3*s(145)+1*s(146)+1*s(147)+3
  Such that:s(134) =< -V_l+V_h-4
s(135) =< -V_l+V_h-3
s(136) =< -V_l+V_h-2
s(137) =< -V_l/2+V_h/2-1
s(138) =< -V_l/3+V_h/3-1
s(139) =< -V_l/3+V_h/3-2/3
s(140) =< -V_l/4+V_h/4-1
s(143)+s(144)+s(145)+s(146) =< s(134)
s(142)+s(143)+s(144)+s(145) =< s(134)
s(141)+s(143)+s(144) =< s(135)
s(141)+s(143)+s(147) =< s(135)
s(141)+s(143)+s(144) =< s(136)
s(141)+s(143)+s(147) =< s(136)
s(143)+s(144)+s(145)+s(146) =< s(136)
s(142)+s(143)+s(144)+s(145) =< s(136)
s(140)+s(143)+s(144)+s(145) =< s(137)
s(144)+s(145) =< s(138)
s(144)+s(145) =< s(139)
s(141)+s(142)+s(143)+s(144) >= 1/2

  with precondition: [V_h>=V_l+4] 

* Chain [46]: 1*s(155)+1*s(156)+3*s(157)+3*s(158)+1*s(159)+3*s(160)+1*s(161)+1*s(162)+3*s(163)+3
  Such that:s(148) =< -V_l+V_h-4
s(149) =< -V_l+V_h-3
s(150) =< -V_l+V_h-1
s(151) =< -V_l/2+V_h/2-1
s(152) =< -V_l/3+V_h/3-1
s(153) =< -V_l/3+V_h/3-2/3
s(153)+s(159) =< s(150)
s(157)+s(158)+s(160)+s(161) =< s(148)
s(156)+s(157)+s(158)+s(160) =< s(148)
s(155)+s(157)+s(158) =< s(149)
s(155)+s(157)+s(162) =< s(149)
s(155)+s(157)+s(158) =< s(150)
s(155)+s(157)+s(162) =< s(150)
s(157)+s(158)+s(160)+s(161) =< s(150)
s(156)+s(157)+s(158)+s(160) =< s(150)
s(157)+s(158)+s(160)+s(163) =< s(151)
s(157)+s(158)+s(160)+s(163) =< s(150)
s(158)+s(160) =< s(152)
s(158)+s(160) =< s(153)
s(154) >= 1
s(155)+s(156)+s(157)+s(158) >= 1/2
s(159) >= s(154)

  with precondition: [V_h>=V_l+4] 

* Chain [45]: 1*s(164)+1*s(165)+3
  Such that:s(165)+s(164) =< -V_l+V_h-2
s(165)+s(164) >= -V_l+V_h-2

  with precondition: [V_h>=V_l+4] 

* Chain [44]: 1*s(172)+1*s(173)+3*s(174)+3*s(175)+1*s(177)+3*s(178)+1*s(179)+1*s(180)+3*s(181)+3
  Such that:s(166) =< -V_l+V_h-4
s(167) =< -V_l+V_h-3
s(168) =< -V_l+V_h-2
s(169) =< -V_l/2+V_h/2-1
s(170) =< -V_l/3+V_h/3-1
s(176)+s(177) =< s(168)
s(176) =< s(170)
s(174)+s(175)+s(178)+s(179) =< s(166)
s(173)+s(174)+s(175)+s(178) =< s(166)
s(172)+s(174)+s(175) =< s(167)
s(172)+s(174)+s(180) =< s(167)
s(172)+s(174)+s(175) =< s(168)
s(172)+s(174)+s(180) =< s(168)
s(174)+s(175)+s(178)+s(179) =< s(168)
s(173)+s(174)+s(175)+s(178) =< s(168)
s(174)+s(175)+s(178)+s(181) =< s(169)
s(174)+s(175)+s(178)+s(181) =< s(168)
s(175)+s(178) =< s(170)
s(175)+s(178) =< s(176)
s(171) >= 1
s(172)+s(173)+s(174)+s(175) >= 1/2
s(177) >= s(171)

  with precondition: [V_h>=V_l+5] 

* Chain [43]: 1*s(188)+1*s(189)+3*s(190)+3*s(191)+1*s(193)+3*s(194)+1*s(195)+1*s(196)+3*s(197)+3
  Such that:s(182) =< -V_l+V_h-4
s(183) =< -V_l+V_h-3
s(184) =< -V_l+V_h-2
s(185) =< -V_l/2+V_h/2-1
s(186) =< -V_l/3+V_h/3-1
s(192)+s(193) =< s(184)
s(192) =< s(186)
s(190)+s(191)+s(194)+s(195) =< s(182)
s(189)+s(190)+s(191)+s(194) =< s(182)
s(188)+s(190)+s(191) =< s(183)
s(188)+s(190)+s(196) =< s(183)
s(188)+s(190)+s(191) =< s(184)
s(188)+s(190)+s(196) =< s(184)
s(190)+s(191)+s(194)+s(195) =< s(184)
s(189)+s(190)+s(191)+s(194) =< s(184)
s(190)+s(191)+s(194)+s(197) =< s(185)
s(190)+s(191)+s(194)+s(197) =< s(184)
s(191)+s(194) =< s(186)
s(191)+s(194) =< s(192)
s(187) >= 1
s(188)+s(189)+s(190)+s(191) >= 1/2
s(193) >= s(187)

  with precondition: [V_h>=V_l+5] 

* Chain [42]: 3*s(204)+1*s(205)+1*s(206)+1*s(207)+1*s(208)+3*s(209)+3*s(210)+3*s(211)+1*s(212)+1*s(213)+3
  Such that:s(198) =< -V_l+V_h-4
s(199) =< -V_l+V_h-3
s(200) =< -V_l+V_h-2
s(201) =< -V_l/2+V_h/2-1
s(202) =< -V_l/3+V_h/3-1
s(203) =< -V_l/3+V_h/3-4/3
s(204) =< -V_l/4+V_h/4-1
s(203)+s(206) =< s(200)
s(204)+s(205)+s(206) =< s(200)
s(209)+s(210)+s(211)+s(212) =< s(198)
s(208)+s(209)+s(210)+s(211) =< s(198)
s(207)+s(209)+s(210) =< s(199)
s(207)+s(209)+s(213) =< s(199)
s(207)+s(209)+s(210) =< s(200)
s(207)+s(209)+s(213) =< s(200)
s(209)+s(210)+s(211)+s(212) =< s(200)
s(208)+s(209)+s(210)+s(211) =< s(200)
s(204)+s(209)+s(210)+s(211) =< s(201)
s(204)+s(209)+s(210)+s(211) =< s(200)
s(210)+s(211) =< s(202)
s(210)+s(211) =< s(203)
s(205)+s(206) >= 2
s(207)+s(208)+s(209)+s(210) >= 1/2

  with precondition: [V_h>=V_l+6] 

* Chain [41]: 0
  with precondition: [V_l>=V_h] 


Closed-form bounds of eval_t62_start(V_l,V_h,B): 
-------------------------------------
* Chain [53] with precondition: [V_h=V_l+2] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [52] with precondition: [V_h=V_l+1] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [51] with precondition: [V_h>=V_l+2] 
    - Lower bound: -V_l+V_h+2 
    - Complexity: n
 * Chain [50] with precondition: [V_h>=V_l+3] 
    - Lower bound: 7/2 
    - Complexity: constant
 * Chain [49] with precondition: [V_h>=V_l+3] 
    - Lower bound: -V_l+V_h+1 
    - Complexity: n
 * Chain [48] with precondition: [V_h>=V_l+3] 
    - Lower bound: -V_l+V_h+1 
    - Complexity: n
 * Chain [47] with precondition: [V_h>=V_l+4] 
    - Lower bound: 7/2 
    - Complexity: constant
 * Chain [46] with precondition: [V_h>=V_l+4] 
    - Lower bound: 9/2 
    - Complexity: constant
 * Chain [45] with precondition: [V_h>=V_l+4] 
    - Lower bound: -V_l+V_h+1 
    - Complexity: n
 * Chain [44] with precondition: [V_h>=V_l+5] 
    - Lower bound: 9/2 
    - Complexity: constant
 * Chain [43] with precondition: [V_h>=V_l+5] 
    - Lower bound: 9/2 
    - Complexity: constant
 * Chain [42] with precondition: [V_h>=V_l+6] 
    - Lower bound: 11/2 
    - Complexity: constant
 * Chain [41] with precondition: [V_l>=V_h] 
    - Lower bound: 0 
    - Complexity: constant
 
### Partitioned lower bound of eval_t62_start(V_l,V_h,B): 
* 0 
 if [V_l>=V_h]
* 3 
 if [V_l+1=V_h]
 or [V_l+2=V_h]
* 7/2 
 if [V_h>=V_l+3]
Possible lower bounds : [0,3,7/2]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 201 ms.
* Invariants computed in 262 ms.
   - Backward Invariants 165 ms.
   - Transitive Invariants 31 ms.
* Refinement performed in 635 ms.
* Termination proved in 45 ms.
* Upper bounds computed in 1240 ms.
   - Equation cost structures 438 ms.
   - Phase cost structures 315 ms.
   - Chain cost structures 351 ms.
   - Solving cost expressions 60 ms.
* Total analysis performed in 2641 ms.

