Warning: Ignored call to eval_speed_popl10_simple_single_2_stop/1 in equation eval_speed_popl10_simple_single_2_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speed_popl10_simple_single_2_bb1_in/5,eval_speed_popl10_simple_single_2_bb2_in/5,eval_speed_popl10_simple_single_2_bb3_in/5,eval_speed_popl10_simple_single_2_bb4_in/5]
1. non_recursive : [eval_speed_popl10_simple_single_2_bb5_in/1]
2. non_recursive : [loop_cont_eval_speed_popl10_simple_single_2_bb1_in/2]
3. non_recursive : [eval_speed_popl10_simple_single_2_8/3]
4. non_recursive : [eval_speed_popl10_simple_single_2_7/3]
5. non_recursive : [eval_speed_popl10_simple_single_2_6/3]
6. non_recursive : [eval_speed_popl10_simple_single_2_5/3]
7. non_recursive : [eval_speed_popl10_simple_single_2_4/3]
8. non_recursive : [eval_speed_popl10_simple_single_2_3/3]
9. non_recursive : [eval_speed_popl10_simple_single_2_2/3]
10. non_recursive : [eval_speed_popl10_simple_single_2_1/3]
11. non_recursive : [eval_speed_popl10_simple_single_2_0/3]
12. non_recursive : [eval_speed_popl10_simple_single_2_bb0_in/3]
13. non_recursive : [eval_speed_popl10_simple_single_2_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_popl10_simple_single_2_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_speed_popl10_simple_single_2_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_popl10_simple_single_2_bb1_in/5 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_speed_popl10_simple_single_2_bb1_in/5 
* CE 6: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D) = 1+ eval_speed_popl10_simple_single_2_bb1_in(A,B,E,F,G)
     [A>=C+1,C>=0,C+1=F,C+1=E,G=2,D=2] 
* CE 7: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D) = 1+ eval_speed_popl10_simple_single_2_bb1_in(A,B,E,F,G)
     [B>=C+1,C>=A,C>=0,C+1=F,C+1=E,G=2,D=2] 
* CE 8: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D) = 0
     [C>=B,C>=A,C>=0,D=2] 

### Cost equations --> "Loop" of eval_speed_popl10_simple_single_2_bb1_in/5 
* CEs [8] --> Loop 5 
* CEs [6] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_speed_popl10_simple_single_2_bb1_in/5 
* Loop 5: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D) [C>=B,C>=A,C>=0,D=2] 
* Loop 6: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D)->  eval_speed_popl10_simple_single_2_bb1_in(A,B,A',B',C')
                  [A>=C+1,C>=0,C+1=B',C+1=A',C'=2,D=2] 
* Loop 7: eval_speed_popl10_simple_single_2_bb1_in(A,B,C,C,D)->  eval_speed_popl10_simple_single_2_bb1_in(A,B,A',B',C')
                  [B>=C+1,C>=A,C>=0,C+1=B',C+1=A',C'=2,D=2] 

### Ranking functions of CR eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* RF of phase [6]: [V_n-V_x_0,V_n-V_y_0]
* RF of phase [7]: [V_m-V_x_0,V_m-V_y_0]

#### Partial ranking functions of CR eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_n-V_x_0
    V_n-V_y_0
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_m-V_x_0
    V_m-V_y_0


### Resulting Chains:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* [[7],5]
* [[6],[7],5]
* [[6],5]
* [5]


### Specialization of cost equations eval_speed_popl10_simple_single_2_start/3 
* CE 2 is refined into CE [9,10,11,12] 


#### Refined cost equations eval_speed_popl10_simple_single_2_start/3 
* CE 9: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) = 1+ eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,C,D,E):[[7],5]
     [V_m>=1,0>=V_n,E=2,D=0,C=0] 
* CE 10: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) = 1+ eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,C,D,E):[[6],[7],5]
     [V_m>=V_n+1,V_n>=1,E=2,D=0,C=0] 
* CE 11: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) = 1+ eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,C,D,E):[[6],5]
     [V_n>=V_m,V_n>=1,E=2,D=0,C=0] 
* CE 12: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) = 1+ eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,C,D,E):[5]
     [0>=V_m,0>=V_n,E=2,D=0,C=0] 

### Cost equations --> "Loop" of eval_speed_popl10_simple_single_2_start/3 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_speed_popl10_simple_single_2_start/3 
* Loop 8: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) [V_n>=V_m,V_n>=1] 
* Loop 9: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) [V_m>=V_n+1,V_n>=1] 
* Loop 10: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) [V_m>=1,0>=V_n] 
* Loop 11: eval_speed_popl10_simple_single_2_start(V_n,V_m,B) [0>=V_m,0>=V_n] 

### Ranking functions of CR eval_speed_popl10_simple_single_2_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speed_popl10_simple_single_2_start(V_n,V_m,B) 


### Resulting Chains:eval_speed_popl10_simple_single_2_start(V_n,V_m,B) 
* [11]
* [10]
* [9]
* [8]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speed_popl10_simple_single_2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
#### Cost of phase [7]:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speed_popl10_simple_single_2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(7)+0
  Such that:it(7) =< V_m-V_y_0
it(7) =< V_m-V_y_0-V_m'+V_y_0'
it(7) =< V_m-V_x_0
it(7) =< V_m-V_x_0-V_m'+V_x_0'
it(7) >= V_m-V_y_0-V_m'+V_y_0'
it(7) >= V_m-V_x_0-V_m'+V_x_0'

#### Cost of loops [6] 

 * loop 6:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speed_popl10_simple_single_2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
#### Cost of phase [6]:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speed_popl10_simple_single_2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_n-V_y_0
it(6) =< V_n-V_y_0-V_n'+V_y_0'
it(6) =< V_n-V_x_0
it(6) =< V_n-V_x_0-V_n'+V_x_0'
it(6) >= V_n-V_y_0-V_n'+V_y_0'
it(6) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of phase [6]:eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speed_popl10_simple_single_2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_n-V_y_0
it(6) =< V_n-V_y_0-V_n'+V_y_0'
it(6) =< V_n-V_x_0
it(6) =< V_n-V_x_0-V_n'+V_x_0'
it(6) >= V_n-V_y_0-V_n'+V_y_0'
it(6) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of chains of eval_speed_popl10_simple_single_2_bb1_in(V_n,V_m,V_y_0,V_x_0,B):
* Chain [[7],5]: 1*it(7)+0
  Such that:it(7) =< V_m-V_x_0
it(7) >= V_m-V_y_0

  with precondition: [B=2,V_y_0=V_x_0,V_y_0>=0,V_y_0>=V_n,V_m>=V_y_0+1] 

* Chain [[6],[7],5]: 1*it(6)+1*it(7)+0
  Such that:it(7) =< -V_n+V_m
it(6) =< V_n-V_x_0
it(7) >= -V_n+V_m
it(6) >= V_n-V_y_0

  with precondition: [B=2,V_y_0=V_x_0,V_y_0>=0,V_m>=V_n+1,V_n>=V_y_0+1] 

* Chain [[6],5]: 1*it(6)+0
  Such that:it(6) =< V_n-V_y_0
it(6) >= V_n-V_y_0

  with precondition: [B=2,V_y_0=V_x_0,V_y_0>=0,V_n>=V_m,V_n>=V_y_0+1] 

* Chain [5]: 0
  with precondition: [B=2,V_x_0=V_y_0,V_x_0>=0,V_x_0>=V_n,V_x_0>=V_m] 


#### Cost of chains of eval_speed_popl10_simple_single_2_start(V_n,V_m,B):
* Chain [11]: 1
  with precondition: [0>=V_n,0>=V_m] 

* Chain [10]: 1*s(1)+1
  Such that:s(1) =< V_m
s(1) >= V_m

  with precondition: [0>=V_n,V_m>=1] 

* Chain [9]: 1*s(2)+1*s(3)+1
  Such that:s(2) =< -V_n+V_m
s(3) =< V_n
s(2) >= -V_n+V_m
s(3) >= V_n

  with precondition: [V_n>=1,V_m>=V_n+1] 

* Chain [8]: 1*s(4)+1
  Such that:s(4) =< V_n
s(4) >= V_n

  with precondition: [V_n>=1,V_n>=V_m] 


Closed-form bounds of eval_speed_popl10_simple_single_2_start(V_n,V_m,B): 
-------------------------------------
* Chain [11] with precondition: [0>=V_n,0>=V_m] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [10] with precondition: [0>=V_n,V_m>=1] 
    - Lower bound: V_m+1 
    - Complexity: n
 * Chain [9] with precondition: [V_n>=1,V_m>=V_n+1] 
    - Lower bound: V_m+1 
    - Complexity: n
 * Chain [8] with precondition: [V_n>=1,V_n>=V_m] 
    - Lower bound: V_n+1 
    - Complexity: n
 
### Partitioned lower bound of eval_speed_popl10_simple_single_2_start(V_n,V_m,B): 
* 1 
 if [0>=V_n,0>=V_m]
* V_n+1 
 if [V_n>=1,V_n>=V_m]
* V_m+1 
 if [0>=V_n,V_m>=1]
 or [V_n>=1,V_m>=V_n+1]
Possible lower bounds : [1,V_n+1,V_m+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 97 ms.
   - Backward Invariants 44 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 87 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 190 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 40 ms.
   - Chain cost structures 91 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 510 ms.

