Warning: Ignored call to eval_knuth_morris_pratt_stop/1 in equation eval_knuth_morris_pratt_25/1 
Warning: Ignored call to eval_knuth_morris_pratt_stop/1 in equation eval_knuth_morris_pratt_27/1 
Warning: Ignored call to eval_knuth_morris_pratt_stop/1 in equation eval_knuth_morris_pratt_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_knuth_morris_pratt_bb3_in/13,eval_knuth_morris_pratt_bb4_in/13,eval_knuth_morris_pratt_bb5_in/13,eval_knuth_morris_pratt_bb6_in/14,eval_knuth_morris_pratt_bb7_in/14]
1. recursive : [eval_knuth_morris_pratt_29/8,eval_knuth_morris_pratt_30/8,eval_knuth_morris_pratt_31/9,eval_knuth_morris_pratt_32/9,eval_knuth_morris_pratt__critedge_in/7,eval_knuth_morris_pratt_bb1_in/5,eval_knuth_morris_pratt_bb2_in/5,loop_cont_eval_knuth_morris_pratt_bb3_in/8]
2. non_recursive : [eval_knuth_morris_pratt_bb10_in/1]
3. non_recursive : [eval_knuth_morris_pratt_25/1]
4. non_recursive : [eval_knuth_morris_pratt_24/1]
5. non_recursive : [eval_knuth_morris_pratt_bb8_in/1]
6. non_recursive : [eval_knuth_morris_pratt_27/1]
7. non_recursive : [eval_knuth_morris_pratt_26/1]
8. non_recursive : [eval_knuth_morris_pratt_bb9_in/1]
9. non_recursive : [loop_cont_eval_knuth_morris_pratt_bb1_in/2]
10. non_recursive : [eval_knuth_morris_pratt_10/3]
11. non_recursive : [eval_knuth_morris_pratt_9/3]
12. non_recursive : [eval_knuth_morris_pratt_8/3]
13. non_recursive : [eval_knuth_morris_pratt_7/3]
14. non_recursive : [eval_knuth_morris_pratt_6/3]
15. non_recursive : [eval_knuth_morris_pratt_5/3]
16. non_recursive : [eval_knuth_morris_pratt_4/3]
17. non_recursive : [eval_knuth_morris_pratt_3/3]
18. non_recursive : [eval_knuth_morris_pratt_2/3]
19. non_recursive : [eval_knuth_morris_pratt_1/3]
20. non_recursive : [eval_knuth_morris_pratt_0/3]
21. non_recursive : [eval_knuth_morris_pratt_bb0_in/3]
22. non_recursive : [eval_knuth_morris_pratt_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_knuth_morris_pratt_bb3_in/13
1. SCC is partially evaluated into eval_knuth_morris_pratt_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_knuth_morris_pratt_bb1_in/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_knuth_morris_pratt_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_knuth_morris_pratt_bb3_in/13 
* CE 14 is refined into CE [17] 
* CE 12 is refined into CE [18] 
* CE 15 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 13 is refined into CE [21] 


#### Refined cost equations eval_knuth_morris_pratt_bb3_in/13 
* CE 17: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 0
     [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=4] 
* CE 18: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 0
     [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=3] 
* CE 19: eval_knuth_morris_pratt_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [C>=F,A>=D+1,F>=0,G=2] 
* CE 20: eval_knuth_morris_pratt_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [C>=F,A>=D+1,0>=F+1,G=2] 
* CE 21: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,I,B,C,D,E,F,G,H)
     [V_j_1>=I+1,V_j_0>=V_j_1,V_n>=V_i_0+1,I+1>=0,B>=2,4>=B] 

### Cost equations --> "Loop" of eval_knuth_morris_pratt_bb3_in/13 
* CEs [21] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of eval_knuth_morris_pratt_bb3_in/13 
* Loop 16: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H)->  eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1',B,C,D,E,F,G,H)
                  [V_j_1>=V_j_1'+1,V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1'+1>=0,B>=2,4>=B] 
* Loop 17: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=4] 
* Loop 18: eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=3] 
* Loop 19: eval_knuth_morris_pratt_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [C>=F,A>=D+1,F>=0,G=2] 
* Loop 20: eval_knuth_morris_pratt_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [C>=F,A>=D+1,0>=F+1,G=2] 

### Ranking functions of CR eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* RF of phase [16]: [V_j_1+1]

#### Partial ranking functions of CR eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_j_1+1


### Resulting Chains:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* [[16],20]
* [[16],19]
* [[16],18]
* [[16],17]
* [20]
* [19]
* [18]
* [17]


### Specialization of cost equations eval_knuth_morris_pratt_bb1_in/5 
* CE 5 is refined into CE [22,23,24,25] 
* CE 8 is refined into CE [26] 
* CE 3 is refined into CE [27,28] 
* CE 4 is refined into CE [29,30] 
* CE 6 is refined into CE [31,32,33,34] 
* CE 7 is refined into CE [35,36,37,38] 


#### Refined cost equations eval_knuth_morris_pratt_bb1_in/5 
* CE 22: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,C,V_j_0,V_i_0,D,V_j_0,E,V_n,F,V_j_0,V_i_0,D,G):[[16],20]
     [V_n>=V_i_0+1,V_j_0>=0,G+1=0,F=0,E=2,C=0,B=5,V_m=0] 
* CE 23: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[16],19]
     [V_n>=V_i_0+1,V_j_0>=V_m,V_m>=1,V_m=E+1,D=2,B=5] 
* CE 24: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,C,V_i_0,D,E,F,V_n,V_m,G,V_i_0,D,H):[20]
     [V_n>=V_i_0+1,0>=V_m,V_m=H+1,V_m=G+1,V_m=E+1,V_m=C+1,V_m=V_j_0+1,F=2,B=5] 
* CE 25: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,C,V_i_0,D,E,F,V_n,V_m,G,V_i_0,D,H):[19]
     [V_n>=V_i_0+1,V_m>=1,V_m=H+1,V_m=G+1,V_m=E+1,V_m=C+1,V_m=V_j_0+1,F=2,B=5] 
* CE 26: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 0
     [V_i_0>=V_n,B=5] 
* CE 27: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[[16],17]
     [V_n>=V_i_0+1,V_j_0>=1,D=4,B=4] 
* CE 28: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[17]
     [V_n>=V_i_0+1,V_j_0>=0,D=4,B=4] 
* CE 29: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[[16],18]
     [V_n>=V_i_0+1,V_j_0>=1,D=3,B=3] 
* CE 30: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[18]
     [V_n>=V_i_0+1,V_j_0>=0,D=3,B=3] 
* CE 31: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[16],20]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,F,G,B)
     [V_n>=V_i_0+1,V_j_0>=0,V_m>=1,V_i_0+1=G,F=0,E+1=0,D=2] 
* CE 32: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[16],19]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,F,G,B)
     [V_j_0>=E+1,V_m>=E+2,V_n>=V_i_0+1,E>=0,V_i_0+1=G,E+1=F,D=2] 
* CE 33: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[20]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_m>=V_j_0+2,0>=V_j_0+1,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 34: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[19]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_m>=V_j_0+2,V_j_0>=0,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 35: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[16],20]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,F,G,B)
     [V_n>=V_i_0+1,V_j_0>=0,0>=V_m+1,V_i_0+1=G,F=0,E+1=0,D=2] 
* CE 36: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[16],19]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,F,G,B)
     [V_j_0>=E+1,V_n>=V_i_0+1,E>=V_m,E>=0,V_i_0+1=G,E+1=F,D=2] 
* CE 37: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[20]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_j_0>=V_m,0>=V_j_0+1,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 38: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[19]+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_j_0>=V_m,V_j_0>=0,V_i_0+1=F,V_j_0+1=E,D=2] 

### Cost equations --> "Loop" of eval_knuth_morris_pratt_bb1_in/5 
* CEs [32] --> Loop 21 
* CEs [36] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [38] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [37] --> Loop 26 
* CEs [31] --> Loop 27 
* CEs [35] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [23] --> Loop 30 
* CEs [24] --> Loop 31 
* CEs [25] --> Loop 32 
* CEs [27] --> Loop 33 
* CEs [28] --> Loop 34 
* CEs [29] --> Loop 35 
* CEs [30] --> Loop 36 
* CEs [22] --> Loop 37 

#### Loops of eval_knuth_morris_pratt_bb1_in/5 
* Loop 21: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_j_0>=V_j_0',V_m>=V_j_0'+1,V_n>=V_i_0+1,V_j_0'>=1,V_i_0+1=V_i_0'] 
* Loop 22: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_j_0>=V_j_0',V_n>=V_i_0+1,V_j_0'>=V_m+1,V_j_0'>=1,V_i_0+1=V_i_0'] 
* Loop 23: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_m>=V_j_0+2,V_j_0>=0,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 24: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=V_m,V_j_0>=0,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 25: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_m>=V_j_0+2,0>=V_j_0+1,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 26: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=V_m,0>=V_j_0+1,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 27: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=0,V_m>=1,V_i_0+1=V_i_0',V_j_0'=0] 
* Loop 28: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=0,0>=V_m+1,V_i_0+1=V_i_0',V_j_0'=0] 
* Loop 29: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_i_0>=V_n,B=5] 
* Loop 30: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=V_m,V_m>=1,B=5] 
* Loop 31: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,0>=V_m,V_m=V_j_0+1,B=5] 
* Loop 32: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,V_j_0+1=V_m,B=5] 
* Loop 33: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=1,B=4] 
* Loop 34: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=4] 
* Loop 35: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=1,B=3] 
* Loop 36: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=3] 
* Loop 37: eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=5,V_m=0] 

### Ranking functions of CR eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* RF of phase [21,23,27]: [V_n-V_i_0]
* RF of phase [22,24,28]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* Partial RF of phase [21,23,27]:
  - RF of loop [21:1,23:1,27:1]:
    V_n-V_i_0
  - RF of loop [23:1]:
    V_m-V_j_0-1 depends on loops [21:1,27:1] 
    V_n-V_j_0 depends on loops [21:1,27:1] 
* Partial RF of phase [22,24,28]:
  - RF of loop [22:1,24:1,28:1]:
    V_n-V_i_0
  - RF of loop [24:1]:
    V_n-V_j_0 depends on loops [22:1,28:1] 


### Resulting Chains:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* [[22,24,28],[21,23,27],36]
* [[22,24,28],[21,23,27],35]
* [[22,24,28],[21,23,27],34]
* [[22,24,28],[21,23,27],33]
* [[22,24,28],[21,23,27],32]
* [[22,24,28],[21,23,27],29]
* [[22,24,28],37]
* [[22,24,28],36]
* [[22,24,28],35]
* [[22,24,28],34]
* [[22,24,28],33]
* [[22,24,28],30]
* [[22,24,28],29]
* [[21,23,27],36]
* [[21,23,27],35]
* [[21,23,27],34]
* [[21,23,27],33]
* [[21,23,27],32]
* [[21,23,27],29]
* [37]
* [36]
* [34]
* [32]
* [29]


### Specialization of cost equations loop_cont_eval_knuth_morris_pratt_bb1_in/2 
* CE 9 is refined into CE [39] 
* CE 11 is refined into CE [40] 
* CE 10 is refined into CE [41] 


#### Refined cost equations loop_cont_eval_knuth_morris_pratt_bb1_in/2 
* CE 39: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) = 0
     [D=5] 
* CE 40: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) = 0
     [D=4] 
* CE 41: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) = 0
     [D=3] 

### Cost equations --> "Loop" of loop_cont_eval_knuth_morris_pratt_bb1_in/2 
* CEs [39] --> Loop 38 
* CEs [40] --> Loop 39 
* CEs [41] --> Loop 40 

#### Loops of loop_cont_eval_knuth_morris_pratt_bb1_in/2 
* Loop 38: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) [D=5] 
* Loop 39: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) [D=4] 
* Loop 40: loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) [D=3] 

### Ranking functions of CR loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) 


### Resulting Chains:loop_cont_eval_knuth_morris_pratt_bb1_in(D,A) 
* [40]
* [39]
* [38]


### Specialization of cost equations eval_knuth_morris_pratt_start/3 
* CE 2 is refined into CE [42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58] 


#### Refined cost equations eval_knuth_morris_pratt_start/3 
* CE 42: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,C,D,E,F):[[22,24,28],37]+ loop_cont_eval_knuth_morris_pratt_bb1_in(G,B):[38]
     [V_n>=2,G=5,F=5,E=0,D=0,C=0,V_m=0] 
* CE 43: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[22,24,28],36]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[40]
     [V_n>=2,0>=V_m,F=3,E=3,D=0,C=0] 
* CE 44: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[22,24,28],35]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[40]
     [V_n>=2,0>=V_m,F=3,E=3,D=0,C=0] 
* CE 45: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[22,24,28],34]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[39]
     [V_n>=2,0>=V_m,F=4,E=4,D=0,C=0] 
* CE 46: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[22,24,28],33]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[39]
     [V_n>=2,0>=V_m,F=4,E=4,D=0,C=0] 
* CE 47: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[22,24,28],29]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[38]
     [V_n>=1,0>=V_m,F=5,E=5,D=0,C=0] 
* CE 48: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],36]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[40]
     [V_m>=1,V_n>=2,F=3,E=3,D=0,C=0] 
* CE 49: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],35]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[40]
     [V_m>=2,V_n>=2,F=3,E=3,D=0,C=0] 
* CE 50: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],34]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[39]
     [V_m>=1,V_n>=2,F=4,E=4,D=0,C=0] 
* CE 51: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],33]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[39]
     [V_m>=2,V_n>=2,F=4,E=4,D=0,C=0] 
* CE 52: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],32]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[38]
     [V_n>=V_m,V_m>=1,V_n>=2,F=5,E=5,D=0,C=0] 
* CE 53: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[[21,23,27],29]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[38]
     [V_m>=1,V_n>=1,F=5,E=5,D=0,C=0] 
* CE 54: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,C,D,E,F):[37]+ loop_cont_eval_knuth_morris_pratt_bb1_in(G,B):[38]
     [V_n>=1,G=5,F=5,E=0,D=0,C=0,V_m=0] 
* CE 55: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[36]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[40]
     [V_n>=1,F=3,E=3,D=0,C=0] 
* CE 56: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[34]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[39]
     [V_n>=1,F=4,E=4,D=0,C=0] 
* CE 57: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,C,D,E,F):[32]+ loop_cont_eval_knuth_morris_pratt_bb1_in(G,B):[38]
     [V_n>=1,G=5,F=5,E=0,D=0,C=1,V_m=1] 
* CE 58: eval_knuth_morris_pratt_start(V_n,V_m,B) = 1+ eval_knuth_morris_pratt_bb1_in(V_n,V_m,C,D,E):[29]+ loop_cont_eval_knuth_morris_pratt_bb1_in(F,B):[38]
     [0>=V_n,F=5,E=5,D=0,C=0] 

### Cost equations --> "Loop" of eval_knuth_morris_pratt_start/3 
* CEs [51] --> Loop 41 
* CEs [49] --> Loop 42 
* CEs [52] --> Loop 43 
* CEs [50] --> Loop 44 
* CEs [48] --> Loop 45 
* CEs [53] --> Loop 46 
* CEs [56] --> Loop 47 
* CEs [55] --> Loop 48 
* CEs [46] --> Loop 49 
* CEs [45] --> Loop 50 
* CEs [44] --> Loop 51 
* CEs [43] --> Loop 52 
* CEs [47] --> Loop 53 
* CEs [58] --> Loop 54 
* CEs [57] --> Loop 55 
* CEs [42] --> Loop 56 
* CEs [54] --> Loop 57 

#### Loops of eval_knuth_morris_pratt_start/3 
* Loop 41: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 42: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 43: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=V_m,V_m>=1,V_n>=2] 
* Loop 44: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 45: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 46: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 47: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=1] 
* Loop 48: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=1] 
* Loop 49: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 50: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 51: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 52: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 53: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=1,0>=V_m] 
* Loop 54: eval_knuth_morris_pratt_start(V_n,V_m,B) [0>=V_n] 
* Loop 55: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=1,V_m=1] 
* Loop 56: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=2,V_m=0] 
* Loop 57: eval_knuth_morris_pratt_start(V_n,V_m,B) [V_n>=1,V_m=0] 

### Ranking functions of CR eval_knuth_morris_pratt_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_knuth_morris_pratt_start(V_n,V_m,B) 


### Resulting Chains:eval_knuth_morris_pratt_start(V_n,V_m,B) 
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_knuth_morris_pratt_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [16]:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_knuth_morris_pratt_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(16)+0
  Such that:it(16) =< V_j_1+1
it(16) =< V_j_1-V_j_1'

#### Cost of phase [16]:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_knuth_morris_pratt_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(16)+0
  Such that:it(16) =< V_j_1+1
it(16) =< V_j_1-V_j_1'

#### Cost of phase [16]:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_knuth_morris_pratt_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(16)+0
  Such that:it(16) =< V_j_1+1
it(16) =< V_j_1-V_j_1'

#### Cost of phase [16]:eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_knuth_morris_pratt_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(16)+0
  Such that:it(16) =< V_j_1+1
it(16) =< V_j_1-V_j_1'

#### Cost of chains of eval_knuth_morris_pratt_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H):
* Chain [[16],20]: 1*it(16)+0
  Such that:it(16) =< V_j_1+1

  with precondition: [B=2,H+1=0,V_n=C,V_m=D,V_j_0=E,V_i_0=F,V_3=G,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [[16],19]: 1*it(16)+0
  Such that:it(16) =< V_j_1-H

  with precondition: [B=2,V_n=C,V_m=D,V_j_0=E,V_i_0=F,V_3=G,H>=0,V_n>=V_i_0+1,V_j_0>=V_j_1,V_j_1>=H+1] 

* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_j_1

  with precondition: [B=3,V_j_1>=1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_j_1

  with precondition: [B=4,V_j_1>=1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [20]: 0
  with precondition: [B=2,D=V_m,G=V_3,V_n=C,V_j_0=E,V_i_0=F,V_j_1=H,0>=V_j_1+1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [19]: 0
  with precondition: [B=2,D=V_m,G=V_3,V_n=C,V_j_0=E,V_i_0=F,V_j_1=H,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [18]: 0
  with precondition: [B=3,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [17]: 0
  with precondition: [B=4,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 


#### Cost of loops [21,23,27] 

 * loop 21:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_j_0-V_j_0'+1

 * loop 23:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 27:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_j_0+1

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],36])+1*s(11)+1*s(12)+2*s(13)+2*s(14)+2*s(15)+1*s(16)+1*s(17)+0
  Such that:it([[21,23,27],36]) =< 1
aux(56) =< V_n-2
s(13)+s(14)+s(15) =< V_n-V_m-2
it(28)+it([[21,23,27],36])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(18) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],36]) =< V_n-V_i_0
aux(61) =< V_n-V_j_0
aux(62) =< V_n+V_j_0-V_i_0
it([[21,23,27],36])+s(12) =< aux(62)
s(17) =< aux(62)
aux(58) =< aux(56)+1
aux(50) =< it(22)*aux(56)
aux(51) =< it(28)*aux(58)
it(24)+it([[21,23,27],36]) =< aux(51)+aux(50)+aux(61)
s(15)+s(16) =< s(18)
s(17) =< s(18)
aux(63) >= 1
aux(63) >= aux(63)
it([[21,23,27],36]) >= aux(63)
s(13)+s(14)+s(15) >= aux(63)

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],35])+1*s(11)+1*s(12)+2*s(20)+2*s(21)+2*s(22)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it([[21,23,27],35]) =< 1
aux(74) =< V_n-2
s(20)+s(21)+s(22) =< V_n-V_m-2
it(28)+it([[21,23,27],35])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(27) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],35]) =< V_n-V_i_0
aux(79) =< V_n-V_j_0
aux(80) =< V_n+V_j_0-V_i_0
it([[21,23,27],35])+s(12) =< aux(80)
s(24) =< aux(80)
aux(76) =< aux(74)+1
aux(68) =< it(22)*aux(74)
aux(69) =< it(28)*aux(76)
it(24)+it([[21,23,27],35]) =< aux(69)+aux(68)+aux(79)
s(25)+s(26) =< s(27)
s(22)+s(23) =< s(27)
s(22)+s(23) =< s(26)
s(24) =< s(26)
aux(81) >= 1
aux(81) >= aux(81)
it([[21,23,27],35]) >= aux(81)
s(20)+s(21)+s(22) >= aux(81)

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],34])+1*s(11)+1*s(12)+2*s(28)+2*s(29)+2*s(30)+1*s(31)+1*s(32)+0
  Such that:it([[21,23,27],34]) =< 1
aux(92) =< V_n-2
s(28)+s(29)+s(30) =< V_n-V_m-2
it(28)+it([[21,23,27],34])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(33) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],34]) =< V_n-V_i_0
aux(97) =< V_n-V_j_0
aux(98) =< V_n+V_j_0-V_i_0
it([[21,23,27],34])+s(12) =< aux(98)
s(32) =< aux(98)
aux(94) =< aux(92)+1
aux(86) =< it(22)*aux(92)
aux(87) =< it(28)*aux(94)
it(24)+it([[21,23,27],34]) =< aux(87)+aux(86)+aux(97)
s(30)+s(31) =< s(33)
s(32) =< s(33)
aux(99) >= 1
aux(99) >= aux(99)
it([[21,23,27],34]) >= aux(99)
s(28)+s(29)+s(30) >= aux(99)

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],33])+1*s(11)+1*s(12)+2*s(35)+2*s(36)+2*s(37)+1*s(38)+1*s(39)+1*s(40)+0
  Such that:it([[21,23,27],33]) =< 1
aux(110) =< V_n-2
s(35)+s(36)+s(37) =< V_n-V_m-2
it(28)+it([[21,23,27],33])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(42) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],33]) =< V_n-V_i_0
aux(115) =< V_n-V_j_0
aux(116) =< V_n+V_j_0-V_i_0
it([[21,23,27],33])+s(12) =< aux(116)
s(39) =< aux(116)
aux(112) =< aux(110)+1
aux(104) =< it(22)*aux(110)
aux(105) =< it(28)*aux(112)
it(24)+it([[21,23,27],33]) =< aux(105)+aux(104)+aux(115)
s(40)+s(41) =< s(42)
s(37)+s(38) =< s(42)
s(37)+s(38) =< s(41)
s(39) =< s(41)
aux(117) >= 1
aux(117) >= aux(117)
it([[21,23,27],33]) >= aux(117)
s(35)+s(36)+s(37) >= aux(117)

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],32])+1*s(11)+1*s(12)+2*s(43)+2*s(44)+2*s(45)+1*s(46)+1*s(47)+0
  Such that:it([[21,23,27],32]) =< 1
aux(127) =< V_n-2
s(43)+s(44)+s(45) =< V_n-V_m-2
it(28)+it([[21,23,27],32])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(48) =< V_n-V_m+V_j_0-V_i_0
s(45)+s(46) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],32]) =< V_n-V_i_0
aux(133) =< V_n-V_j_0
aux(134) =< V_n+V_j_0-V_i_0
it([[21,23,27],32])+s(12) =< aux(134)
s(47) =< aux(134)
aux(129) =< aux(127)+1
aux(121) =< it(22)*aux(127)
aux(122) =< it(28)*aux(129)
it(24)+it([[21,23,27],32]) =< aux(122)+aux(121)+aux(133)
s(45)+s(46) =< s(48)
s(47) =< s(48)
aux(132) >= -V_n+V_m-V_j_0+V_i_0
aux(135) >= 1
aux(135) >= aux(135)
it([[21,23,27],32]) >= aux(135)
s(43)+s(44)+s(45) >= it([[21,23,27],32])*aux(132)
s(43)+s(44)+s(45) >= aux(135)

#### Cost of phase [21,23,27]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
aux(17) =< V_n-V_j_0-V_n'+V_j_0'
it(27)+s(5) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0
it(21)+it(23)+it(27) =< V_n-V_i_0-V_n'+V_i_0'
aux(14) =< V_m-V_j_0-1
aux(20) =< V_m-V_j_0-V_m'+V_j_0'
aux(30) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(20)
it(23) =< aux(10)+aux(9)+aux(17)
it(21)+it(23)+it(27) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [22,24,28] 

 * loop 22:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 24:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+2*s(49)+2*s(50)+2*s(51)+1*s(52)+1*s(53)+0
  Such that:it(28)+it([[21,23,27],29])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(51)+s(52) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],29]) =< V_n-V_i_0
aux(151) =< V_n-2
aux(152) =< V_n-V_m-1
aux(153) =< V_n-V_j_0
aux(154) =< V_n+V_j_0-V_i_0
s(12) =< aux(154)
aux(25) =< aux(151)+1
aux(140) =< it(22)*aux(151)
aux(141) =< it(28)*aux(25)
it(24) =< aux(141)+aux(140)+aux(153)
s(53) =< aux(154)
s(49)+s(50)+s(51) =< aux(152)
s(51)+s(52) =< aux(154)
s(55) =< s(49)*aux(151)
s(56) =< s(51)*aux(25)
s(50) =< s(56)+s(55)
s(50) =< s(56)+s(55)+aux(152)
it(22)+it(24)+it(28)+s(49)+s(50)+s(51) >= V_n-V_i_0
aux(155) >= 1
aux(155) >= aux(155)
it([[21,23,27],29]) >= aux(155)
s(49)+s(50)+s(51) >= it([[21,23,27],29])*aux(155)

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [22,24,28]:eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_knuth_morris_pratt_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-1
it(28)+s(11) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(39) =< V_n-V_j_0
aux(42) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
it(22)+it(24)+it(28) =< V_n-V_i_0
it(22)+it(24)+it(28) =< V_n-V_i_0-V_n'+V_i_0'
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(42)
it(22)+it(24)+it(28) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of chains of eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B):
* Chain [[22,24,28],[21,23,27],36]: 2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],36])+1*s(11)+1*s(12)+2*s(13)+2*s(14)+2*s(15)+1*s(16)+1*s(17)+0
  Such that:it([[21,23,27],36]) =< 1
aux(56) =< V_n-2
s(13)+s(14)+s(15) =< V_n-V_m-2
it(28)+it([[21,23,27],36])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(18) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],36]) =< V_n-V_i_0
aux(61) =< V_n-V_j_0
aux(62) =< V_n+V_j_0-V_i_0
it([[21,23,27],36])+s(12) =< aux(62)
s(17) =< aux(62)
aux(58) =< aux(56)+1
aux(50) =< it(22)*aux(56)
aux(51) =< it(28)*aux(58)
it(24)+it([[21,23,27],36]) =< aux(51)+aux(50)+aux(61)
s(15)+s(16) =< s(18)
s(17) =< s(18)
aux(63) >= 1
aux(63) >= aux(63)
it([[21,23,27],36]) >= aux(63)
s(13)+s(14)+s(15) >= aux(63)

  with precondition: [B=3,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[22,24,28],[21,23,27],35]: 2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],35])+1*s(11)+1*s(12)+2*s(20)+2*s(21)+2*s(22)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it([[21,23,27],35]) =< 1
aux(74) =< V_n-2
s(20)+s(21)+s(22) =< V_n-V_m-2
it(28)+it([[21,23,27],35])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(27) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],35]) =< V_n-V_i_0
aux(79) =< V_n-V_j_0
aux(80) =< V_n+V_j_0-V_i_0
it([[21,23,27],35])+s(12) =< aux(80)
s(24) =< aux(80)
aux(76) =< aux(74)+1
aux(68) =< it(22)*aux(74)
aux(69) =< it(28)*aux(76)
it(24)+it([[21,23,27],35]) =< aux(69)+aux(68)+aux(79)
s(25)+s(26) =< s(27)
s(22)+s(23) =< s(27)
s(22)+s(23) =< s(26)
s(24) =< s(26)
aux(81) >= 1
aux(81) >= aux(81)
it([[21,23,27],35]) >= aux(81)
s(20)+s(21)+s(22) >= aux(81)

  with precondition: [B=3,V_m>=2,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[22,24,28],[21,23,27],34]: 2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],34])+1*s(11)+1*s(12)+2*s(28)+2*s(29)+2*s(30)+1*s(31)+1*s(32)+0
  Such that:it([[21,23,27],34]) =< 1
aux(92) =< V_n-2
s(28)+s(29)+s(30) =< V_n-V_m-2
it(28)+it([[21,23,27],34])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(33) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],34]) =< V_n-V_i_0
aux(97) =< V_n-V_j_0
aux(98) =< V_n+V_j_0-V_i_0
it([[21,23,27],34])+s(12) =< aux(98)
s(32) =< aux(98)
aux(94) =< aux(92)+1
aux(86) =< it(22)*aux(92)
aux(87) =< it(28)*aux(94)
it(24)+it([[21,23,27],34]) =< aux(87)+aux(86)+aux(97)
s(30)+s(31) =< s(33)
s(32) =< s(33)
aux(99) >= 1
aux(99) >= aux(99)
it([[21,23,27],34]) >= aux(99)
s(28)+s(29)+s(30) >= aux(99)

  with precondition: [B=4,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[22,24,28],[21,23,27],33]: 2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],33])+1*s(11)+1*s(12)+2*s(35)+2*s(36)+2*s(37)+1*s(38)+1*s(39)+1*s(40)+0
  Such that:it([[21,23,27],33]) =< 1
aux(110) =< V_n-2
s(35)+s(36)+s(37) =< V_n-V_m-2
it(28)+it([[21,23,27],33])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(42) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],33]) =< V_n-V_i_0
aux(115) =< V_n-V_j_0
aux(116) =< V_n+V_j_0-V_i_0
it([[21,23,27],33])+s(12) =< aux(116)
s(39) =< aux(116)
aux(112) =< aux(110)+1
aux(104) =< it(22)*aux(110)
aux(105) =< it(28)*aux(112)
it(24)+it([[21,23,27],33]) =< aux(105)+aux(104)+aux(115)
s(40)+s(41) =< s(42)
s(37)+s(38) =< s(42)
s(37)+s(38) =< s(41)
s(39) =< s(41)
aux(117) >= 1
aux(117) >= aux(117)
it([[21,23,27],33]) >= aux(117)
s(35)+s(36)+s(37) >= aux(117)

  with precondition: [B=4,V_m>=2,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[22,24,28],[21,23,27],32]: 2*it(22)+2*it(24)+2*it(28)+1*it([[21,23,27],32])+1*s(11)+1*s(12)+2*s(43)+2*s(44)+2*s(45)+1*s(46)+1*s(47)+0
  Such that:it([[21,23,27],32]) =< 1
aux(127) =< V_n-2
s(43)+s(44)+s(45) =< V_n-V_m-2
it(28)+it([[21,23,27],32])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(48) =< V_n-V_m+V_j_0-V_i_0
s(45)+s(46) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],32]) =< V_n-V_i_0
aux(133) =< V_n-V_j_0
aux(134) =< V_n+V_j_0-V_i_0
it([[21,23,27],32])+s(12) =< aux(134)
s(47) =< aux(134)
aux(129) =< aux(127)+1
aux(121) =< it(22)*aux(127)
aux(122) =< it(28)*aux(129)
it(24)+it([[21,23,27],32]) =< aux(122)+aux(121)+aux(133)
s(45)+s(46) =< s(48)
s(47) =< s(48)
aux(132) >= -V_n+V_m-V_j_0+V_i_0
aux(135) >= 1
aux(135) >= aux(135)
it([[21,23,27],32]) >= aux(135)
s(43)+s(44)+s(45) >= it([[21,23,27],32])*aux(132)
s(43)+s(44)+s(45) >= aux(135)

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[22,24,28],[21,23,27],29]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+2*s(49)+2*s(50)+2*s(51)+1*s(52)+1*s(53)+0
  Such that:it(28)+it([[21,23,27],29])+s(11) =< V_n-V_m+V_j_0-V_i_0-1
s(51)+s(52) =< V_n+V_j_0-V_i_0-1
it(22)+it(24)+it(28)+it([[21,23,27],29]) =< V_n-V_i_0
aux(151) =< V_n-2
aux(152) =< V_n-V_m-1
aux(153) =< V_n-V_j_0
aux(154) =< V_n+V_j_0-V_i_0
s(12) =< aux(154)
aux(25) =< aux(151)+1
aux(140) =< it(22)*aux(151)
aux(141) =< it(28)*aux(25)
it(24) =< aux(141)+aux(140)+aux(153)
s(53) =< aux(154)
s(49)+s(50)+s(51) =< aux(152)
s(51)+s(52) =< aux(154)
s(55) =< s(49)*aux(151)
s(56) =< s(51)*aux(25)
s(50) =< s(56)+s(55)
s(50) =< s(56)+s(55)+aux(152)
it(22)+it(24)+it(28)+s(49)+s(50)+s(51) >= V_n-V_i_0
aux(155) >= 1
aux(155) >= aux(155)
it([[21,23,27],29]) >= aux(155)
s(49)+s(50)+s(51) >= it([[21,23,27],29])*aux(155)

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],37]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1*s(60)+1
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
aux(156) =< V_n+V_j_0-V_i_0
aux(157) =< V_n-V_i_0-1
it(28)+s(11)+s(60) =< aux(156)
s(12) =< aux(156)
it(22)+it(24)+it(28) =< aux(157)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(157)
it(28)+it(24)+it(22) >= 1

  with precondition: [V_m=0,B=5,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],36]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
it(28) =< V_n+V_j_0-V_i_0-1
aux(158) =< V_n-V_m+V_j_0-V_i_0-2
aux(159) =< V_n-V_i_0-1
it(28)+s(11) =< aux(158)
s(12) =< aux(158)
it(22)+it(24)+it(28) =< aux(159)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(159)
it(28)+it(24)+it(22) >= 1

  with precondition: [B=3,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],35]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1*s(19)+1
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
aux(160) =< V_n+V_j_0-V_i_0-1
aux(161) =< V_n-V_i_0-1
it(28)+s(11)+s(19) =< aux(160)
s(12) =< aux(160)
it(22)+it(24)+it(28) =< aux(161)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(161)
it(28)+it(24)+it(22) >= 1

  with precondition: [B=3,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],34]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
it(28) =< V_n+V_j_0-V_i_0-1
aux(162) =< V_n-V_m+V_j_0-V_i_0-2
aux(163) =< V_n-V_i_0-1
it(28)+s(11) =< aux(162)
s(12) =< aux(162)
it(22)+it(24)+it(28) =< aux(163)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(163)
it(28)+it(24)+it(22) >= 1

  with precondition: [B=4,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],33]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1*s(34)+1
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
aux(164) =< V_n+V_j_0-V_i_0-1
aux(165) =< V_n-V_i_0-1
it(28)+s(11)+s(34) =< aux(164)
s(12) =< aux(164)
it(22)+it(24)+it(28) =< aux(165)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(165)
it(28)+it(24)+it(22) >= 1

  with precondition: [B=4,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],30]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+1*s(61)+1
  Such that:aux(43) =< V_n-2
it(28) =< V_n-V_m+V_j_0-V_i_0-2
aux(39) =< V_n-V_j_0
aux(166) =< V_n-V_m+V_j_0-V_i_0
aux(167) =< V_n-V_i_0-1
it(28)+s(11)+s(61) =< aux(166)
s(12) =< aux(166)
it(22)+it(24)+it(28) =< aux(167)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(167)
it(28)+it(24)+it(22) >= 1

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],29]: 2*it(22)+2*it(24)+2*it(28)+1*s(11)+1*s(12)+0
  Such that:aux(43) =< V_n-2
aux(39) =< V_n-V_j_0
it(28) =< V_n+V_j_0-V_i_0
aux(168) =< V_n-V_m+V_j_0-V_i_0-1
aux(169) =< V_n-V_i_0
it(28)+s(11) =< aux(168)
s(12) =< aux(168)
it(22)+it(24)+it(28) =< aux(169)
aux(45) =< aux(43)+1
aux(37) =< it(22)*aux(43)
aux(38) =< it(28)*aux(45)
it(24) =< aux(38)+aux(37)+aux(39)
it(24) =< aux(38)+aux(37)+aux(169)
it(28)+it(24)+it(22) >= V_n-V_i_0

  with precondition: [B=5,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [[21,23,27],36]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+1
  Such that:s(6) =< V_n+V_j_0-V_i_0
it(23)+it(21)+it(27) =< V_n-V_i_0-1
aux(31) =< V_n+V_j_0-V_i_0-1
it(27)+s(5) =< aux(31)
s(6) =< aux(31)
it(27)+it(23)+it(21) >= 1

  with precondition: [B=3,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[21,23,27],35]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+1*s(19)+1
  Such that:s(6) =< V_n+V_j_0-V_i_0
it(23)+it(21)+it(27) =< V_n-V_i_0-1
aux(64) =< V_n+V_j_0-V_i_0-1
aux(30)+s(19) =< aux(64)
it(27)+s(5) =< aux(64)
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
it(27)+it(23)+it(21) >= 1

  with precondition: [B=3,V_m>=2,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[21,23,27],34]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+1
  Such that:s(6) =< V_n+V_j_0-V_i_0
it(23)+it(21)+it(27) =< V_n-V_i_0-1
aux(82) =< V_n+V_j_0-V_i_0-1
it(27)+s(5) =< aux(82)
s(6) =< aux(82)
it(27)+it(23)+it(21) >= 1

  with precondition: [B=4,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[21,23,27],33]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+1*s(34)+1
  Such that:s(6) =< V_n+V_j_0-V_i_0
it(23)+it(21)+it(27) =< V_n-V_i_0-1
aux(100) =< V_n+V_j_0-V_i_0-1
aux(30)+s(34) =< aux(100)
it(27)+s(5) =< aux(100)
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
it(27)+it(23)+it(21) >= 1

  with precondition: [B=4,V_m>=2,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[21,23,27],32]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+1
  Such that:aux(30) =< V_n-V_m+V_j_0-V_i_0
s(5)+it(27) =< V_n+V_j_0-V_i_0-1
s(6) =< V_n+V_j_0-V_i_0
it(23)+it(21)+it(27) =< V_n-V_i_0-1
it(27)+s(5) =< aux(30)
s(6) =< aux(30)
it(27)+it(23)+it(21) >= 1
it(27)+it(23)+it(21) >= V_m-V_j_0-1

  with precondition: [B=5,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2,V_j_0+V_n>=V_i_0+V_m] 

* Chain [[21,23,27],29]: 2*it(21)+2*it(23)+2*it(27)+1*s(5)+1*s(6)+0
  Such that:aux(21) =< V_n-2
aux(11) =< V_n-V_j_0
s(5)+it(27) =< V_n+V_j_0-V_i_0-1
aux(14) =< V_m-V_j_0-1
aux(136) =< V_n+V_j_0-V_i_0
aux(137) =< V_n-V_i_0
s(6) =< aux(136)
it(21)+it(23)+it(27) =< aux(137)
it(27)+s(5) =< aux(136)
aux(25) =< aux(21)+1
aux(9) =< it(21)*aux(21)
aux(10) =< it(27)*aux(25)
it(23) =< aux(10)+aux(9)+aux(14)
it(23) =< aux(10)+aux(9)+aux(11)
it(23) =< aux(10)+aux(9)+aux(137)
it(27)+it(23)+it(21) >= V_n-V_i_0

  with precondition: [B=5,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [37]: 1*s(60)+1
  Such that:s(60) =< V_j_0+1

  with precondition: [V_m=0,B=5,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [36]: 1
  with precondition: [B=3,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [34]: 1
  with precondition: [B=4,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [32]: 1
  with precondition: [B=5,V_j_0+1=V_m,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [29]: 0
  with precondition: [B=5,V_j_0>=0,V_i_0>=V_n,V_i_0>=V_j_0] 


#### Cost of chains of loop_cont_eval_knuth_morris_pratt_bb1_in(D,A):
* Chain [40]: 0
  with precondition: [D=3] 

* Chain [39]: 0
  with precondition: [D=4] 

* Chain [38]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_knuth_morris_pratt_start(V_n,V_m,B):
* Chain [57]: 1*s(62)+2
  Such that:s(62) =< 1

  with precondition: [V_m=0,V_n>=1] 

* Chain [56]: 2*s(67)+2*s(68)+2*s(69)+1*s(70)+1*s(71)+1*s(72)+2
  Such that:s(63) =< V_n-2
s(66) =< V_n-1
aux(170) =< V_n
s(67)+s(70)+s(71) =< aux(170)
s(72) =< aux(170)
s(67)+s(68)+s(69) =< s(66)
s(73) =< s(63)+1
s(74) =< s(69)*s(63)
s(75) =< s(67)*s(73)
s(68) =< s(75)+s(74)+aux(170)
s(68) =< s(75)+s(74)+s(66)
s(67)+s(68)+s(69) >= 1

  with precondition: [V_m=0,V_n>=2] 

* Chain [55]: 2
  with precondition: [V_m=1,V_n>=1] 

* Chain [54]: 1
  with precondition: [0>=V_n] 

* Chain [53]: 2*s(78)+2*s(81)+2*s(82)+1*s(83)+1*s(84)+1
  Such that:s(76) =< V_n-2
s(79) =< V_n-V_m-1
aux(171) =< V_n
s(78) =< aux(171)
s(78)+s(83) =< s(79)
s(84) =< s(79)
s(78)+s(81)+s(82) =< aux(171)
s(85) =< s(76)+1
s(86) =< s(82)*s(76)
s(87) =< s(78)*s(85)
s(81) =< s(87)+s(86)+aux(171)
s(82)+s(81)+s(78) >= V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [52]: 2*s(90)+2*s(93)+2*s(94)+1*s(95)+1*s(96)+2
  Such that:s(88) =< V_n-2
s(89) =< V_n
s(91) =< V_n-V_m-2
aux(172) =< V_n-1
s(90) =< aux(172)
s(90)+s(95) =< s(91)
s(96) =< s(91)
s(90)+s(93)+s(94) =< aux(172)
s(97) =< s(88)+1
s(98) =< s(94)*s(88)
s(99) =< s(90)*s(97)
s(93) =< s(99)+s(98)+s(89)
s(93) =< s(99)+s(98)+aux(172)
s(90)+s(93)+s(94) >= 1

  with precondition: [0>=V_m,V_n>=2] 

* Chain [51]: 2*s(104)+2*s(105)+2*s(106)+1*s(107)+1*s(108)+1*s(109)+2
  Such that:s(100) =< V_n-2
s(101) =< V_n
aux(173) =< V_n-1
s(104)+s(107)+s(108) =< aux(173)
s(109) =< aux(173)
s(104)+s(105)+s(106) =< aux(173)
s(110) =< s(100)+1
s(111) =< s(106)*s(100)
s(112) =< s(104)*s(110)
s(105) =< s(112)+s(111)+s(101)
s(105) =< s(112)+s(111)+aux(173)
s(104)+s(105)+s(106) >= 1

  with precondition: [0>=V_m,V_n>=2] 

* Chain [50]: 2*s(115)+2*s(118)+2*s(119)+1*s(120)+1*s(121)+2
  Such that:s(113) =< V_n-2
s(114) =< V_n
s(116) =< V_n-V_m-2
aux(174) =< V_n-1
s(115) =< aux(174)
s(115)+s(120) =< s(116)
s(121) =< s(116)
s(115)+s(118)+s(119) =< aux(174)
s(122) =< s(113)+1
s(123) =< s(119)*s(113)
s(124) =< s(115)*s(122)
s(118) =< s(124)+s(123)+s(114)
s(118) =< s(124)+s(123)+aux(174)
s(115)+s(118)+s(119) >= 1

  with precondition: [0>=V_m,V_n>=2] 

* Chain [49]: 2*s(129)+2*s(130)+2*s(131)+1*s(132)+1*s(133)+1*s(134)+2
  Such that:s(125) =< V_n-2
s(126) =< V_n
aux(175) =< V_n-1
s(129)+s(132)+s(133) =< aux(175)
s(134) =< aux(175)
s(129)+s(130)+s(131) =< aux(175)
s(135) =< s(125)+1
s(136) =< s(131)*s(125)
s(137) =< s(129)*s(135)
s(130) =< s(137)+s(136)+s(126)
s(130) =< s(137)+s(136)+aux(175)
s(129)+s(130)+s(131) >= 1

  with precondition: [0>=V_m,V_n>=2] 

* Chain [48]: 2
  with precondition: [V_n>=1] 

* Chain [47]: 2
  with precondition: [V_n>=1] 

* Chain [46]: 1*s(140)+2*s(141)+2*s(145)+2*s(146)+1*s(147)+1
  Such that:s(138) =< V_n-2
s(141)+s(140) =< V_n-1
s(142) =< V_m-1
aux(176) =< V_n
s(147) =< aux(176)
s(141)+s(145)+s(146) =< aux(176)
s(140)+s(141) =< aux(176)
s(148) =< s(138)+1
s(149) =< s(146)*s(138)
s(150) =< s(141)*s(148)
s(145) =< s(150)+s(149)+s(142)
s(145) =< s(150)+s(149)+aux(176)
s(146)+s(145)+s(141) >= V_n

  with precondition: [V_n>=1,V_m>=1] 

* Chain [45]: 1*s(151)+2*s(152)+2*s(153)+2*s(154)+1*s(156)+2
  Such that:s(151) =< V_n
aux(177) =< V_n-1
s(152)+s(153)+s(154) =< aux(177)
s(154)+s(156) =< aux(177)
s(151) =< aux(177)
s(152)+s(153)+s(154) >= 1

  with precondition: [V_n>=2,V_m>=1] 

* Chain [44]: 1*s(157)+2*s(158)+2*s(159)+2*s(160)+1*s(162)+2
  Such that:s(157) =< V_n
aux(178) =< V_n-1
s(158)+s(159)+s(160) =< aux(178)
s(160)+s(162) =< aux(178)
s(157) =< aux(178)
s(158)+s(159)+s(160) >= 1

  with precondition: [V_n>=2,V_m>=1] 

* Chain [43]: 1*s(164)+2*s(165)+1*s(166)+2*s(167)+2*s(168)+2
  Such that:s(166) =< V_n
s(163) =< V_n-V_m
aux(179) =< V_n-1
s(164)+s(165) =< aux(179)
s(165)+s(167)+s(168) =< aux(179)
s(164)+s(165) =< s(163)
s(166) =< s(163)
s(165)+s(167)+s(168) >= 1
s(168)+s(167)+s(165) >= V_m-1

  with precondition: [V_n>=2,V_m>=1,V_n>=V_m] 

* Chain [42]: 1*s(169)+2*s(170)+2*s(171)+2*s(172)+1*s(175)+1*s(176)+2
  Such that:s(169) =< V_n
aux(180) =< V_n-1
s(170)+s(171)+s(172) =< aux(180)
s(174)+s(175) =< aux(180)
s(172)+s(176) =< aux(180)
s(172)+s(176) =< s(174)
s(169) =< s(174)
s(170)+s(171)+s(172) >= 1

  with precondition: [V_n>=2,V_m>=2] 

* Chain [41]: 1*s(177)+2*s(178)+2*s(179)+2*s(180)+1*s(183)+1*s(184)+2
  Such that:s(177) =< V_n
aux(181) =< V_n-1
s(178)+s(179)+s(180) =< aux(181)
s(182)+s(183) =< aux(181)
s(180)+s(184) =< aux(181)
s(180)+s(184) =< s(182)
s(177) =< s(182)
s(178)+s(179)+s(180) >= 1

  with precondition: [V_n>=2,V_m>=2] 


Closed-form bounds of eval_knuth_morris_pratt_start(V_n,V_m,B): 
-------------------------------------
* Chain [57] with precondition: [V_m=0,V_n>=1] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [56] with precondition: [V_m=0,V_n>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [55] with precondition: [V_m=1,V_n>=1] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [54] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [53] with precondition: [0>=V_m,V_n>=1] 
    - Lower bound: 2*V_n+1 
    - Complexity: n
 * Chain [52] with precondition: [0>=V_m,V_n>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [51] with precondition: [0>=V_m,V_n>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [50] with precondition: [0>=V_m,V_n>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [49] with precondition: [0>=V_m,V_n>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [48] with precondition: [V_n>=1] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [47] with precondition: [V_n>=1] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [46] with precondition: [V_n>=1,V_m>=1] 
    - Lower bound: 2*V_n+1 
    - Complexity: n
 * Chain [45] with precondition: [V_n>=2,V_m>=1] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [44] with precondition: [V_n>=2,V_m>=1] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [43] with precondition: [V_n>=2,V_m>=1,V_n>=V_m] 
    - Lower bound: 2*V_m 
    - Complexity: n
 * Chain [42] with precondition: [V_n>=2,V_m>=2] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [41] with precondition: [V_n>=2,V_m>=2] 
    - Lower bound: 4 
    - Complexity: constant
 
### Partitioned lower bound of eval_knuth_morris_pratt_start(V_n,V_m,B): 
* 1 
 if [0>=V_n]
* 2 
 if [V_m>=2,V_n>=V_m]
 or [V_n>=2,V_m>=V_n+1]
 or [1>=V_m,V_n>=2]
 or [V_n=1]
Possible lower bounds : [1,2]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 211 ms.
* Invariants computed in 672 ms.
   - Backward Invariants 468 ms.
   - Transitive Invariants 92 ms.
* Refinement performed in 645 ms.
* Termination proved in 58 ms.
* Upper bounds computed in 5287 ms.
   - Equation cost structures 366 ms.
   - Phase cost structures 3364 ms.
   - Chain cost structures 1000 ms.
   - Solving cost expressions 46 ms.
* Total analysis performed in 7045 ms.

