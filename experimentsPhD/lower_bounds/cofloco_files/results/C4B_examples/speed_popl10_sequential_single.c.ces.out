Warning: Ignored call to eval_speed_popl10_sequential_single_stop/1 in equation eval_speed_popl10_sequential_single_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speed_popl10_sequential_single_4/5,eval_speed_popl10_sequential_single_5/6,eval_speed_popl10_sequential_single_bb1_in/5,eval_speed_popl10_sequential_single_bb2_in/5,eval_speed_popl10_sequential_single_bb3_in/6]
1. recursive : [eval_speed_popl10_sequential_single_bb4_in/3,eval_speed_popl10_sequential_single_bb5_in/3]
2. non_recursive : [eval_speed_popl10_sequential_single_bb6_in/1]
3. non_recursive : [loop_cont_eval_speed_popl10_sequential_single_bb4_in/2]
4. non_recursive : [loop_cont_eval_speed_popl10_sequential_single_bb1_in/4]
5. non_recursive : [eval_speed_popl10_sequential_single_3/2]
6. non_recursive : [eval_speed_popl10_sequential_single_2/2]
7. non_recursive : [eval_speed_popl10_sequential_single_1/2]
8. non_recursive : [eval_speed_popl10_sequential_single_0/2]
9. non_recursive : [eval_speed_popl10_sequential_single_bb0_in/2]
10. non_recursive : [eval_speed_popl10_sequential_single_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_popl10_sequential_single_bb1_in/5
1. SCC is partially evaluated into eval_speed_popl10_sequential_single_bb4_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_speed_popl10_sequential_single_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_popl10_sequential_single_bb1_in/5 
* CE 3 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_speed_popl10_sequential_single_bb1_in/5 
* CE 8: eval_speed_popl10_sequential_single_bb1_in(A,B,C,A,B) = 0
     [A>=B+1,B>=0,C=3] 
* CE 9: eval_speed_popl10_sequential_single_bb1_in(A,B,C,A,B) = 0
     [B>=A,B>=0,C=3] 
* CE 10: eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) = 1+ eval_speed_popl10_sequential_single_bb1_in(V_n,E,F,C,D)
     [V_n>=V_x_0+1,V_x_0>=0,V_x_0+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_speed_popl10_sequential_single_bb1_in/5 
* CEs [10] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_speed_popl10_sequential_single_bb1_in/5 
* Loop 7: eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D)->  eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0',B',C,D)
                  [V_n>=V_x_0+1,V_x_0>=0,V_x_0+1=V_x_0',B'=3,B=3] 
* Loop 8: eval_speed_popl10_sequential_single_bb1_in(A,B,C,A,B) [A>=B+1,B>=0,C=3] 
* Loop 9: eval_speed_popl10_sequential_single_bb1_in(A,B,C,A,B) [B>=A,B>=0,C=3] 

### Ranking functions of CR eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) 
* RF of phase [7]: [V_n-V_x_0]

#### Partial ranking functions of CR eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_n-V_x_0


### Resulting Chains:eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) 
* [[7],9]
* [[7],8]
* [9]
* [8]


### Specialization of cost equations eval_speed_popl10_sequential_single_bb4_in/3 
* CE 7 is refined into CE [11] 
* CE 6 is refined into CE [12] 


#### Refined cost equations eval_speed_popl10_sequential_single_bb4_in/3 
* CE 11: eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) = 0
     [V_x_1>=V_n,B=2] 
* CE 12: eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) = 1+ eval_speed_popl10_sequential_single_bb4_in(V_n,C,D)
     [V_n>=V_x_1+1,V_x_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_speed_popl10_sequential_single_bb4_in/3 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_speed_popl10_sequential_single_bb4_in/3 
* Loop 10: eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B)->  eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1',B')
                  [V_n>=V_x_1+1,V_x_1+1=V_x_1',B'=2,B=2] 
* Loop 11: eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) [V_x_1>=V_n,B=2] 

### Ranking functions of CR eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) 
* RF of phase [10]: [V_n-V_x_1]

#### Partial ranking functions of CR eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_n-V_x_1


### Resulting Chains:eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) 
* [[10],11]
* [11]


### Specialization of cost equations eval_speed_popl10_sequential_single_start/2 
* CE 2 is refined into CE [13,14,15,16] 


#### Refined cost equations eval_speed_popl10_sequential_single_start/2 
* CE 13: eval_speed_popl10_sequential_single_start(V_n,B) = 2+ eval_speed_popl10_sequential_single_bb1_in(V_n,C,D,V_n,V_n):[[7],9]+ eval_speed_popl10_sequential_single_bb4_in(V_n,V_n,E):[11]
     [V_n>=1,E=2,D=3,C=0] 
* CE 14: eval_speed_popl10_sequential_single_start(V_n,B) = 2+ eval_speed_popl10_sequential_single_bb1_in(V_n,C,D,V_n,E):[[7],8]+ eval_speed_popl10_sequential_single_bb4_in(V_n,E,F):[[10],11]
     [V_n>=E+1,E>=1,F=2,D=3,C=0] 
* CE 15: eval_speed_popl10_sequential_single_start(V_n,B) = 2+ eval_speed_popl10_sequential_single_bb1_in(V_n,C,D,V_n,E):[9]+ eval_speed_popl10_sequential_single_bb4_in(V_n,F,G):[11]
     [0>=V_n,G=2,F=0,E=0,D=3,C=0] 
* CE 16: eval_speed_popl10_sequential_single_start(V_n,B) = 2+ eval_speed_popl10_sequential_single_bb1_in(V_n,C,D,V_n,E):[8]+ eval_speed_popl10_sequential_single_bb4_in(V_n,F,G):[[10],11]
     [V_n>=1,G=2,F=0,E=0,D=3,C=0] 

### Cost equations --> "Loop" of eval_speed_popl10_sequential_single_start/2 
* CEs [14] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_speed_popl10_sequential_single_start/2 
* Loop 12: eval_speed_popl10_sequential_single_start(V_n,B) [V_n>=2] 
* Loop 13: eval_speed_popl10_sequential_single_start(V_n,B) [V_n>=1] 
* Loop 14: eval_speed_popl10_sequential_single_start(V_n,B) [V_n>=1] 
* Loop 15: eval_speed_popl10_sequential_single_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_speed_popl10_sequential_single_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_popl10_sequential_single_start(V_n,B) 


### Resulting Chains:eval_speed_popl10_sequential_single_start(V_n,B) 
* [15]
* [14]
* [13]
* [12]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) -> [eval_speed_popl10_sequential_single_bb1_in(V_n',V_x_0',B',C',D')] 
1
#### Cost of phase [7]:eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) -> [eval_speed_popl10_sequential_single_bb1_in(V_n',V_x_0',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_n-V_x_0
it(7) =< V_n-V_x_0-V_n'+V_x_0'
it(7) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of phase [7]:eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D) -> [eval_speed_popl10_sequential_single_bb1_in(V_n',V_x_0',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_n-V_x_0
it(7) =< V_n-V_x_0-V_n'+V_x_0'
it(7) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of chains of eval_speed_popl10_sequential_single_bb1_in(V_n,V_x_0,B,C,D):
* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< -V_x_0+D
it(7) >= V_n-V_x_0

  with precondition: [B=3,V_n=C,V_n=D,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_x_0+D
it(7) >= -V_x_0+D

  with precondition: [B=3,V_n=C,V_x_0>=0,D>=V_x_0+1,V_n>=D+1] 

* Chain [9]: 0
  with precondition: [B=3,V_n=C,V_x_0=D,V_x_0>=0,V_x_0>=V_n] 

* Chain [8]: 0
  with precondition: [B=3,V_n=C,V_x_0=D,V_x_0>=0,V_n>=V_x_0+1] 


#### Cost of loops [10] 

 * loop 10:eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) -> [eval_speed_popl10_sequential_single_bb4_in(V_n',V_x_1',B')] 
1
#### Cost of phase [10]:eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B) -> [eval_speed_popl10_sequential_single_bb4_in(V_n',V_x_1',B')] 
1*it(10)+0
  Such that:it(10) =< V_n-V_x_1
it(10) =< V_n-V_x_1-V_n'+V_x_1'
it(10) >= V_n-V_x_1-V_n'+V_x_1'

#### Cost of chains of eval_speed_popl10_sequential_single_bb4_in(V_n,V_x_1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_n-V_x_1
it(10) >= V_n-V_x_1

  with precondition: [B=2,V_n>=V_x_1+1] 

* Chain [11]: 0
  with precondition: [B=2,V_x_1>=V_n] 


#### Cost of chains of eval_speed_popl10_sequential_single_start(V_n,B):
* Chain [15]: 2
  with precondition: [0>=V_n] 

* Chain [14]: 1*s(1)+2
  Such that:s(1) =< V_n
s(1) >= V_n

  with precondition: [V_n>=1] 

* Chain [13]: 1*s(2)+2
  Such that:s(2) =< V_n
s(2) >= V_n

  with precondition: [V_n>=1] 

* Chain [12]: 1*s(3)+1*s(4)+2
  Such that:s(3)+s(4) =< V_n
s(3)+s(4) >= V_n

  with precondition: [V_n>=2] 


Closed-form bounds of eval_speed_popl10_sequential_single_start(V_n,B): 
-------------------------------------
* Chain [15] with precondition: [0>=V_n] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [14] with precondition: [V_n>=1] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [13] with precondition: [V_n>=1] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [12] with precondition: [V_n>=2] 
    - Lower bound: V_n+2 
    - Complexity: n
 
### Partitioned lower bound of eval_speed_popl10_sequential_single_start(V_n,B): 
* 2 
 if [0>=V_n]
* V_n+2 
 if [V_n>=1]
Possible lower bounds : [2,V_n+2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 43 ms.
* Invariants computed in 61 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 78 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 99 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 355 ms.

