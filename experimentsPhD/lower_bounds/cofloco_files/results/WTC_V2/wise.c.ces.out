Warning: Ignored call to eval_wise_stop/1 in equation eval_wise_bb2_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_wise__critedge_in/3,eval_wise_bb1_in/3]
1. non_recursive : [eval_wise_bb2_in/1]
2. non_recursive : [loop_cont_eval_wise_bb1_in/2]
3. non_recursive : [eval_wise_2/3]
4. non_recursive : [eval_wise_1/3]
5. non_recursive : [eval_wise_0/3]
6. non_recursive : [eval_wise_bb0_in/3]
7. non_recursive : [eval_wise_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_wise_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_wise_2/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_wise_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_wise_bb1_in/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations eval_wise_bb1_in/3 
* CE 9: eval_wise_bb1_in(V__01,V__0,B) = 0
     [V__01+2>=V__0,V__0+2>=V__01,V__0>=0,V__01>=0,B=2] 
* CE 10: eval_wise_bb1_in(V__01,V__0,B) = 1+ eval_wise_bb1_in(V__01,C,D)
     [V__01>=V__0+3,V__0>=0,V__0+1=C,D=2,B=2] 
* CE 11: eval_wise_bb1_in(V__01,V__0,B) = 1+ eval_wise_bb1_in(C,V__0,D)
     [V__0>=V__01+3,V__01>=0,V__01+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_wise_bb1_in/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_wise_bb1_in/3 
* Loop 8: eval_wise_bb1_in(V__01,V__0,B)->  eval_wise_bb1_in(V__01,V__0',B')
                  [V__01>=V__0+3,V__0>=0,V__0+1=V__0',B'=2,B=2] 
* Loop 9: eval_wise_bb1_in(V__01,V__0,B)->  eval_wise_bb1_in(V__01',V__0,B')
                  [V__0>=V__01+3,V__01>=0,V__01+1=V__01',B'=2,B=2] 
* Loop 10: eval_wise_bb1_in(V__01,V__0,B) [V__01+2>=V__0,V__0+2>=V__01,V__0>=0,V__01>=0,B=2] 

### Ranking functions of CR eval_wise_bb1_in(V__01,V__0,B) 
* RF of phase [8]: [V__01-V__0-2]
* RF of phase [9]: [-V__01+V__0-2]

#### Partial ranking functions of CR eval_wise_bb1_in(V__01,V__0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__01-V__0-2
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__01+V__0-2


### Resulting Chains:eval_wise_bb1_in(V__01,V__0,B) 
* [[9],10]
* [[8],10]
* [10]


### Specialization of cost equations eval_wise_2/3 
* CE 5 is refined into CE [12,13,14] 
* CE 4 is refined into CE [15] 
* CE 3 is refined into CE [16] 


#### Refined cost equations eval_wise_2/3 
* CE 12: eval_wise_2(V_x,V_y,B) = 1+ eval_wise_bb1_in(V_y,V_x,C):[[9],10]
     [V_x>=V_y+3,V_y>=0,C=2] 
* CE 13: eval_wise_2(V_x,V_y,B) = 1+ eval_wise_bb1_in(V_y,V_x,C):[[8],10]
     [V_y>=V_x+3,V_x>=0,C=2] 
* CE 14: eval_wise_2(V_x,V_y,B) = 1+ eval_wise_bb1_in(V_y,V_x,C):[10]
     [V_y+2>=V_x,V_x+2>=V_y,V_x>=0,V_y>=0,C=2] 
* CE 15: eval_wise_2(V_x,V_y,B) = 0
     [0>=V_y+1] 
* CE 16: eval_wise_2(V_x,V_y,B) = 0
     [0>=V_x+1] 

### Cost equations --> "Loop" of eval_wise_2/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 

#### Loops of eval_wise_2/3 
* Loop 11: eval_wise_2(V_x,V_y,B) [V_x>=V_y+3,V_y>=0] 
* Loop 12: eval_wise_2(V_x,V_y,B) [V_y>=V_x+3,V_x>=0] 
* Loop 13: eval_wise_2(V_x,V_y,B) [V_x+2>=V_y,V_y+2>=V_x,V_y>=0,V_x>=0] 
* Loop 14: eval_wise_2(V_x,V_y,B) [0>=V_y+1] 
* Loop 15: eval_wise_2(V_x,V_y,B) [0>=V_x+1] 

### Ranking functions of CR eval_wise_2(V_x,V_y,B) 

#### Partial ranking functions of CR eval_wise_2(V_x,V_y,B) 


### Resulting Chains:eval_wise_2(V_x,V_y,B) 
* [15]
* [14]
* [13]
* [12]
* [11]


### Specialization of cost equations eval_wise_start/3 
* CE 2 is refined into CE [17,18,19,20,21] 


#### Refined cost equations eval_wise_start/3 
* CE 17: eval_wise_start(V_x,V_y,B) = 0+ eval_wise_2(V_x,V_y,B):[15]
     [0>=V_x+1] 
* CE 18: eval_wise_start(V_x,V_y,B) = 0+ eval_wise_2(V_x,V_y,B):[14]
     [0>=V_y+1] 
* CE 19: eval_wise_start(V_x,V_y,B) = 0+ eval_wise_2(V_x,V_y,B):[13]
     [V_x+2>=V_y,V_y+2>=V_x,V_y>=0,V_x>=0] 
* CE 20: eval_wise_start(V_x,V_y,B) = 0+ eval_wise_2(V_x,V_y,B):[12]
     [V_y>=V_x+3,V_x>=0] 
* CE 21: eval_wise_start(V_x,V_y,B) = 0+ eval_wise_2(V_x,V_y,B):[11]
     [V_x>=V_y+3,V_y>=0] 

### Cost equations --> "Loop" of eval_wise_start/3 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [17] --> Loop 20 

#### Loops of eval_wise_start/3 
* Loop 16: eval_wise_start(V_x,V_y,B) [V_x>=V_y+3,V_y>=0] 
* Loop 17: eval_wise_start(V_x,V_y,B) [V_y>=V_x+3,V_x>=0] 
* Loop 18: eval_wise_start(V_x,V_y,B) [V_x+2>=V_y,V_y+2>=V_x,V_y>=0,V_x>=0] 
* Loop 19: eval_wise_start(V_x,V_y,B) [0>=V_y+1] 
* Loop 20: eval_wise_start(V_x,V_y,B) [0>=V_x+1] 

### Ranking functions of CR eval_wise_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_wise_start(V_x,V_y,B) 


### Resulting Chains:eval_wise_start(V_x,V_y,B) 
* [20]
* [19]
* [18]
* [17]
* [16]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_wise_bb1_in(V__01,V__0,B) -> [eval_wise_bb1_in(V__01',V__0',B')] 
1
#### Cost of phase [9]:eval_wise_bb1_in(V__01,V__0,B) -> [eval_wise_bb1_in(V__01',V__0',B')] 
1*it(9)+0
  Such that:it(9) =< -V__01+V__0-2
it(9) =< -V__01+V__0+V__01'-V__0'
it(9) >= -V__01+V__0+V__01'-V__0'

#### Cost of loops [8] 

 * loop 8:eval_wise_bb1_in(V__01,V__0,B) -> [eval_wise_bb1_in(V__01',V__0',B')] 
1
#### Cost of phase [8]:eval_wise_bb1_in(V__01,V__0,B) -> [eval_wise_bb1_in(V__01',V__0',B')] 
1*it(8)+0
  Such that:it(8) =< V__01-V__0-2
it(8) =< V__01-V__0-V__01'+V__0'
it(8) >= V__01-V__0-V__01'+V__0'

#### Cost of chains of eval_wise_bb1_in(V__01,V__0,B):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V__01+V__0-2
it(9) >= -V__01+V__0-2

  with precondition: [B=2,V__01>=0,V__0>=V__01+3] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__01-V__0-2
it(8) >= V__01-V__0-2

  with precondition: [B=2,V__0>=0,V__01>=V__0+3] 

* Chain [10]: 0
  with precondition: [B=2,V__01>=0,V__0>=0,V__0+2>=V__01,V__01+2>=V__0] 


#### Cost of chains of eval_wise_2(V_x,V_y,B):
* Chain [15]: 0
  with precondition: [0>=V_x+1] 

* Chain [14]: 0
  with precondition: [0>=V_y+1] 

* Chain [13]: 1
  with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 

* Chain [12]: 1*s(1)+1
  Such that:s(1) =< -V_x+V_y-2
s(1) >= -V_x+V_y-2

  with precondition: [V_x>=0,V_y>=V_x+3] 

* Chain [11]: 1*s(2)+1
  Such that:s(2) =< V_x-V_y-2
s(2) >= V_x-V_y-2

  with precondition: [V_y>=0,V_x>=V_y+3] 


#### Cost of chains of eval_wise_start(V_x,V_y,B):
* Chain [20]: 0
  with precondition: [0>=V_x+1] 

* Chain [19]: 0
  with precondition: [0>=V_y+1] 

* Chain [18]: 1
  with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 

* Chain [17]: 1*s(3)+1
  Such that:s(3) =< -V_x+V_y-2
s(3) >= -V_x+V_y-2

  with precondition: [V_x>=0,V_y>=V_x+3] 

* Chain [16]: 1*s(4)+1
  Such that:s(4) =< V_x-V_y-2
s(4) >= V_x-V_y-2

  with precondition: [V_y>=0,V_x>=V_y+3] 


Closed-form bounds of eval_wise_start(V_x,V_y,B): 
-------------------------------------
* Chain [20] with precondition: [0>=V_x+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [19] with precondition: [0>=V_y+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [18] with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [17] with precondition: [V_x>=0,V_y>=V_x+3] 
    - Lower bound: -V_x+V_y-1 
    - Complexity: n
 * Chain [16] with precondition: [V_y>=0,V_x>=V_y+3] 
    - Lower bound: V_x-V_y-1 
    - Complexity: n
 
### Partitioned lower bound of eval_wise_start(V_x,V_y,B): 
* 0 
 if [0>=V_x+1,V_y>=0]
 or [0>=V_y+1]
* 1 
 if [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y]
* -V_x+V_y-1 
 if [V_x>=0,V_y>=V_x+3]
* V_x-V_y-1 
 if [V_y>=0,V_x>=V_y+3]
Possible lower bounds : [0,1,-V_x+V_y-1,V_x-V_y-1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 53 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 75 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 109 ms.
   - Equation cost structures 35 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 319 ms.

