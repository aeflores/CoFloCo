Warning: Ignored call to eval_aaron2_stop/1 in equation eval_aaron2_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_aaron2_4/4,eval_aaron2_5/5,eval_aaron2_bb1_in/4,eval_aaron2_bb2_in/4,eval_aaron2_bb3_in/5,eval_aaron2_bb4_in/5]
1. non_recursive : [eval_aaron2_bb5_in/1]
2. non_recursive : [loop_cont_eval_aaron2_bb1_in/2]
3. non_recursive : [eval_aaron2_3/4]
4. non_recursive : [eval_aaron2_2/4]
5. non_recursive : [eval_aaron2_1/4]
6. non_recursive : [eval_aaron2_0/4]
7. non_recursive : [eval_aaron2_bb0_in/4]
8. non_recursive : [eval_aaron2_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_aaron2_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_aaron2_3/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_aaron2_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_aaron2_bb1_in/4 
* CE 7 is refined into CE [9] 
* CE 8 is discarded (unfeasible) 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations eval_aaron2_bb1_in/4 
* CE 9: eval_aaron2_bb1_in(V_tx,V__02,V__01,B) = 0
     [V__02>=V__01+1,V_tx>=0,B=2] 
* CE 10: eval_aaron2_bb1_in(V_tx,V__02,V__01,B) = 1+ eval_aaron2_bb1_in(V_tx,C,V__01,D)
     [V__01>=V__02,V_tx>=0,V_tx+V__02+1=C,D=2,B=2] 
* CE 11: eval_aaron2_bb1_in(V_tx,V__02,V__01,B) = 1+ eval_aaron2_bb1_in(V_tx,V__02,C,D)
     [V__01>=V__02,V_tx>=0,V__01=V_tx+C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_aaron2_bb1_in/4 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_aaron2_bb1_in/4 
* Loop 8: eval_aaron2_bb1_in(V_tx,V__02,V__01,B)->  eval_aaron2_bb1_in(V_tx,V__02',V__01,B')
                  [V__01>=V__02,V_tx>=0,V_tx+V__02+1=V__02',B'=2,B=2] 
* Loop 9: eval_aaron2_bb1_in(V_tx,V__02,V__01,B)->  eval_aaron2_bb1_in(V_tx,V__02,V__01',B')
                  [V__01>=V__02,V_tx>=0,V_tx+V__01'+1=V__01,B'=2,B=2] 
* Loop 10: eval_aaron2_bb1_in(V_tx,V__02,V__01,B) [V__02>=V__01+1,V_tx>=0,B=2] 

### Ranking functions of CR eval_aaron2_bb1_in(V_tx,V__02,V__01,B) 
* RF of phase [8,9]: [-V__02+V__01+1]

#### Partial ranking functions of CR eval_aaron2_bb1_in(V_tx,V__02,V__01,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1,9:1]:
    -V__02+V__01+1


### Resulting Chains:eval_aaron2_bb1_in(V_tx,V__02,V__01,B) 
* [[8,9],10]
* [10]


### Specialization of cost equations eval_aaron2_3/4 
* CE 3 is refined into CE [12,13] 
* CE 4 is refined into CE [14] 


#### Refined cost equations eval_aaron2_3/4 
* CE 12: eval_aaron2_3(V_tx,V_x,V_y,B) = 1+ eval_aaron2_bb1_in(V_tx,V_y,V_x,C):[[8,9],10]
     [V_x>=V_y,V_tx>=0,C=2] 
* CE 13: eval_aaron2_3(V_tx,V_x,V_y,B) = 1+ eval_aaron2_bb1_in(V_tx,V_y,V_x,C):[10]
     [V_y>=V_x+1,V_tx>=0,C=2] 
* CE 14: eval_aaron2_3(V_tx,V_x,V_y,B) = 0
     [0>=V_tx+1] 

### Cost equations --> "Loop" of eval_aaron2_3/4 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_aaron2_3/4 
* Loop 11: eval_aaron2_3(V_tx,V_x,V_y,B) [V_x>=V_y,V_tx>=0] 
* Loop 12: eval_aaron2_3(V_tx,V_x,V_y,B) [V_y>=V_x+1,V_tx>=0] 
* Loop 13: eval_aaron2_3(V_tx,V_x,V_y,B) [0>=V_tx+1] 

### Ranking functions of CR eval_aaron2_3(V_tx,V_x,V_y,B) 

#### Partial ranking functions of CR eval_aaron2_3(V_tx,V_x,V_y,B) 


### Resulting Chains:eval_aaron2_3(V_tx,V_x,V_y,B) 
* [13]
* [12]
* [11]


### Specialization of cost equations eval_aaron2_start/4 
* CE 2 is refined into CE [15,16,17] 


#### Refined cost equations eval_aaron2_start/4 
* CE 15: eval_aaron2_start(V_tx,V_x,V_y,B) = 0+ eval_aaron2_3(V_tx,V_x,V_y,B):[13]
     [0>=V_tx+1] 
* CE 16: eval_aaron2_start(V_tx,V_x,V_y,B) = 0+ eval_aaron2_3(V_tx,V_x,V_y,B):[12]
     [V_y>=V_x+1,V_tx>=0] 
* CE 17: eval_aaron2_start(V_tx,V_x,V_y,B) = 0+ eval_aaron2_3(V_tx,V_x,V_y,B):[11]
     [V_x>=V_y,V_tx>=0] 

### Cost equations --> "Loop" of eval_aaron2_start/4 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 

#### Loops of eval_aaron2_start/4 
* Loop 14: eval_aaron2_start(V_tx,V_x,V_y,B) [V_x>=V_y,V_tx>=0] 
* Loop 15: eval_aaron2_start(V_tx,V_x,V_y,B) [V_y>=V_x+1,V_tx>=0] 
* Loop 16: eval_aaron2_start(V_tx,V_x,V_y,B) [0>=V_tx+1] 

### Ranking functions of CR eval_aaron2_start(V_tx,V_x,V_y,B) 

#### Partial ranking functions of CR eval_aaron2_start(V_tx,V_x,V_y,B) 


### Resulting Chains:eval_aaron2_start(V_tx,V_x,V_y,B) 
* [16]
* [15]
* [14]


Computing Bounds
=====================================

#### Cost of loops [8,9] 

 * loop 8:eval_aaron2_bb1_in(V_tx,V__02,V__01,B) -> [eval_aaron2_bb1_in(V_tx',V__02',V__01',B')] 
1
 * loop 9:eval_aaron2_bb1_in(V_tx,V__02,V__01,B) -> [eval_aaron2_bb1_in(V_tx',V__02',V__01',B')] 
1
#### Cost of phase [8,9]:eval_aaron2_bb1_in(V_tx,V__02,V__01,B) -> [eval_aaron2_bb1_in(V_tx',V__02',V__01',B')] 
1*it(8)+1*it(9)+0
  Such that:it(8)+it(9) =< -V__02+V__01+V__02'-V__01'
aux(1) =< -V__02+V__01+1
it(8)+it(9) =< aux(1)

#### Cost of chains of eval_aaron2_bb1_in(V_tx,V__02,V__01,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(9)+it(8) =< V_tx-V__02+V__01+1
aux(1) =< -V__02+V__01+1
it(8)+it(9) =< aux(1)

  with precondition: [B=2,V_tx>=0,V__01>=V__02] 

* Chain [10]: 0
  with precondition: [B=2,V_tx>=0,V__02>=V__01+1] 


#### Cost of chains of eval_aaron2_3(V_tx,V_x,V_y,B):
* Chain [13]: 0
  with precondition: [0>=V_tx+1] 

* Chain [12]: 1
  with precondition: [V_tx>=0,V_y>=V_x+1] 

* Chain [11]: 1*s(1)+1*s(2)+1
  Such that:s(2)+s(1) =< V_tx+V_x-V_y+1
s(3) =< V_x-V_y+1
s(1)+s(2) =< s(3)

  with precondition: [V_tx>=0,V_x>=V_y] 


#### Cost of chains of eval_aaron2_start(V_tx,V_x,V_y,B):
* Chain [16]: 0
  with precondition: [0>=V_tx+1] 

* Chain [15]: 1
  with precondition: [V_tx>=0,V_y>=V_x+1] 

* Chain [14]: 1*s(4)+1*s(5)+1
  Such that:s(5)+s(4) =< V_tx+V_x-V_y+1
s(6) =< V_x-V_y+1
s(4)+s(5) =< s(6)

  with precondition: [V_tx>=0,V_x>=V_y] 


Closed-form bounds of eval_aaron2_start(V_tx,V_x,V_y,B): 
-------------------------------------
* Chain [16] with precondition: [0>=V_tx+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [15] with precondition: [V_tx>=0,V_y>=V_x+1] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [14] with precondition: [V_tx>=0,V_x>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_aaron2_start(V_tx,V_x,V_y,B): 
* 0 
 if [0>=V_tx+1]
* 1 
 if [V_tx>=0]
Possible lower bounds : [0,1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 41 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 69 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 71 ms.
   - Equation cost structures 30 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 294 ms.

