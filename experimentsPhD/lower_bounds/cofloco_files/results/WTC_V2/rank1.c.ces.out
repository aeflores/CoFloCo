Warning: Ignored call to eval_rank1_stop/1 in equation eval_rank1_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_rank1_8/11,eval_rank1_9/12,eval_rank1_bb3_in/11,eval_rank1_bb4_in/11,eval_rank1_bb5_in/12]
1. recursive : [eval_rank1_13/7,eval_rank1_14/7,eval_rank1_6/4,eval_rank1_7/5,eval_rank1__critedge_in/6,eval_rank1_bb1_in/4,eval_rank1_bb2_in/4,eval_rank1_bb6_in/7,loop_cont_eval_rank1_bb3_in/7]
2. non_recursive : [eval_rank1_bb7_in/1]
3. non_recursive : [loop_cont_eval_rank1_bb1_in/2]
4. non_recursive : [eval_rank1_5/2]
5. non_recursive : [eval_rank1_4/2]
6. non_recursive : [eval_rank1_3/2]
7. non_recursive : [eval_rank1_2/2]
8. non_recursive : [eval_rank1_1/2]
9. non_recursive : [eval_rank1_0/2]
10. non_recursive : [eval_rank1_bb0_in/2]
11. non_recursive : [eval_rank1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rank1_bb3_in/11
1. SCC is partially evaluated into eval_rank1_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_rank1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rank1_bb3_in/11 
* CE 7 is refined into CE [10] 
* CE 9 is refined into CE [11] 
* CE 8 is refined into CE [12] 


#### Refined cost equations eval_rank1_bb3_in/11 
* CE 10: eval_rank1_bb3_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [A>=E,E>=C,D>=1,C>=0,B>=0,F=2] 
* CE 11: eval_rank1_bb3_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [E>=C,E>=A+1,D>=1,C>=0,B>=0,F=2] 
* CE 12: eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) = 1+ eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,H,I,C,D,E,F,G)
     [V_m>=V_y_1,V_y_1>=V_y_0,V_2>=1,V_y_0>=0,V_x_0>=0,V_y_1+1=H,I=2,B=2] 

### Cost equations --> "Loop" of eval_rank1_bb3_in/11 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_rank1_bb3_in/11 
* Loop 9: eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G)->  eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1',B',C,D,E,F,G)
                  [V_m>=V_y_1,V_y_1>=V_y_0,V_2>=1,V_y_0>=0,V_x_0>=0,V_y_1+1=V_y_1',B'=2,B=2] 
* Loop 10: eval_rank1_bb3_in(A,B,C,D,E,F,A,B,C,D,E) [A>=E,E>=C,D>=1,C>=0,B>=0,F=2] 
* Loop 11: eval_rank1_bb3_in(A,B,C,D,E,F,A,B,C,D,E) [E>=C,E>=A+1,D>=1,C>=0,B>=0,F=2] 

### Ranking functions of CR eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) 
* RF of phase [9]: [V_m-V_y_1+1]

#### Partial ranking functions of CR eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_m-V_y_1+1


### Resulting Chains:eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Specialization of cost equations eval_rank1_bb1_in/4 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15,16,17,18] 
* CE 3 is refined into CE [19] 


#### Refined cost equations eval_rank1_bb1_in/4 
* CE 13: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 0
     [0>=V_y_0+1,B=3] 
* CE 14: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 0
     [0>=V_x_0+1,B=3] 
* CE 15: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 2+ eval_rank1_bb3_in(V_m,V_x_0,V_y_0,C,V_y_0,D,V_m,V_x_0,V_y_0,C,E):[[9],11]+ eval_rank1_bb1_in(V_m,F,V_m,G)
     [V_m>=V_y_0,C>=1,V_y_0>=0,V_x_0>=0,V_x_0=F+1,V_m+1=E,G=3,D=2,B=3] 
* CE 16: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 2+ eval_rank1_bb3_in(V_m,V_x_0,V_y_0,C,V_y_0,D,V_m,V_x_0,V_y_0,C,E):[[9],10]+ eval_rank1_bb1_in(V_m,F,G,H)
     [V_m>=E,E>=V_y_0+1,C>=1,V_y_0>=0,V_x_0>=0,E=G+1,V_x_0=F+1,H=3,D=2,B=3] 
* CE 17: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 2+ eval_rank1_bb3_in(V_m,V_x_0,V_y_0,C,V_y_0,D,V_m,V_x_0,V_y_0,C,V_y_0):[11]+ eval_rank1_bb1_in(V_m,E,F,G)
     [V_y_0>=V_m+1,C>=1,V_y_0>=0,V_x_0>=0,V_y_0=F+1,V_x_0=E+1,G=3,D=2,B=3] 
* CE 18: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 2+ eval_rank1_bb3_in(V_m,V_x_0,V_y_0,C,V_y_0,D,V_m,V_x_0,V_y_0,C,V_y_0):[10]+ eval_rank1_bb1_in(V_m,E,F,G)
     [V_m>=V_y_0,C>=1,V_y_0>=0,V_x_0>=0,V_y_0=F+1,V_x_0=E+1,G=3,D=2,B=3] 
* CE 19: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) = 1+ eval_rank1_bb1_in(V_m,V_x_0,C,D)
     [V_y_0>=0,V_x_0>=0,V_y_0=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_rank1_bb1_in/4 
* CEs [16] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [13] --> Loop 17 
* CEs [14] --> Loop 18 

#### Loops of eval_rank1_bb1_in/4 
* Loop 12: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B)->  eval_rank1_bb1_in(V_m,V_x_0',V_y_0',B')
                  [V_m>=V_y_0'+1,V_y_0'>=V_y_0,V_y_0>=0,V_x_0>=0,V_x_0=V_x_0'+1,B'=3,B=3] 
* Loop 13: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B)->  eval_rank1_bb1_in(V_m,V_x_0',V_y_0',B')
                  [V_m>=V_y_0,V_y_0>=0,V_x_0>=0,V_y_0=V_y_0'+1,V_x_0=V_x_0'+1,B'=3,B=3] 
* Loop 14: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B)->  eval_rank1_bb1_in(V_m,V_x_0',V_y_0',B')
                  [V_y_0>=V_m+1,V_y_0>=0,V_x_0>=0,V_y_0=V_y_0'+1,V_x_0=V_x_0'+1,B'=3,B=3] 
* Loop 15: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B)->  eval_rank1_bb1_in(V_m,A',V_m,B')
                  [V_m>=V_y_0,V_y_0>=0,V_x_0>=0,V_x_0=A'+1,B'=3,B=3] 
* Loop 16: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B)->  eval_rank1_bb1_in(V_m,V_x_0,V_y_0',B')
                  [V_y_0>=0,V_x_0>=0,V_y_0=V_y_0'+1,B'=3,B=3] 
* Loop 17: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) [0>=V_y_0+1,B=3] 
* Loop 18: eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) [0>=V_x_0+1,B=3] 

### Ranking functions of CR eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) 

#### Partial ranking functions of CR eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) 
* Partial RF of phase [12,13,14,15,16]:
  - RF of loop [12:1,13:1,14:1,15:1]:
    V_x_0+1
  - RF of loop [13:1,16:1]:
    V_y_0+1 depends on loops [12:1,15:1] 
  - RF of loop [14:1]:
    -V_m+V_y_0 depends on loops [12:1,15:1] 
    V_y_0 depends on loops [12:1,15:1] 


### Resulting Chains:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) 
* [[12,13,14,15,16],18]
* [[12,13,14,15,16],17]
* [18]


### Specialization of cost equations eval_rank1_start/2 
* CE 2 is refined into CE [20,21,22] 


#### Refined cost equations eval_rank1_start/2 
* CE 20: eval_rank1_start(V_m,B) = 1+ eval_rank1_bb1_in(V_m,V_m,C,D):[[12,13,14,15,16],18]
     [V_m>=0,D=3,C=0] 
* CE 21: eval_rank1_start(V_m,B) = 1+ eval_rank1_bb1_in(V_m,V_m,C,D):[[12,13,14,15,16],17]
     [V_m>=0,D=3,C=0] 
* CE 22: eval_rank1_start(V_m,B) = 1+ eval_rank1_bb1_in(V_m,V_m,C,D):[18]
     [0>=V_m+1,D=3,C=0] 

### Cost equations --> "Loop" of eval_rank1_start/2 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [22] --> Loop 21 

#### Loops of eval_rank1_start/2 
* Loop 19: eval_rank1_start(V_m,B) [V_m>=0] 
* Loop 20: eval_rank1_start(V_m,B) [V_m>=0] 
* Loop 21: eval_rank1_start(V_m,B) [0>=V_m+1] 

### Ranking functions of CR eval_rank1_start(V_m,B) 

#### Partial ranking functions of CR eval_rank1_start(V_m,B) 


### Resulting Chains:eval_rank1_start(V_m,B) 
* [21]
* [20]
* [19]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) -> [eval_rank1_bb3_in(V_m',V_x_0',V_y_0',V_2',V_y_1',B',C',D',E',F',G')] 
1
#### Cost of phase [9]:eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) -> [eval_rank1_bb3_in(V_m',V_x_0',V_y_0',V_2',V_y_1',B',C',D',E',F',G')] 
1*it(9)+0
  Such that:it(9) =< V_m-V_y_1+1
it(9) =< V_m-V_y_1-V_m'+V_y_1'
it(9) >= V_m-V_y_1-V_m'+V_y_1'

#### Cost of phase [9]:eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G) -> [eval_rank1_bb3_in(V_m',V_x_0',V_y_0',V_2',V_y_1',B',C',D',E',F',G')] 
1*it(9)+0
  Such that:it(9) =< V_m-V_y_1+1
it(9) =< V_m-V_y_1-V_m'+V_y_1'
it(9) >= V_m-V_y_1-V_m'+V_y_1'

#### Cost of chains of eval_rank1_bb3_in(V_m,V_x_0,V_y_0,V_2,V_y_1,B,C,D,E,F,G):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -V_y_1+G
it(9) >= V_m-V_y_1+1

  with precondition: [B=2,V_m=C,V_x_0=D,V_y_0=E,V_2=F,V_m+1=G,V_x_0>=0,V_y_0>=0,V_2>=1,V_y_1>=V_y_0,V_m>=V_y_1] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_y_1+G
it(9) >= -V_y_1+G

  with precondition: [B=2,V_m=C,V_x_0=D,V_y_0=E,V_2=F,V_x_0>=0,V_y_0>=0,V_2>=1,V_y_1>=V_y_0,G>=V_y_1+1,V_m>=G] 

* Chain [11]: 0
  with precondition: [B=2,V_m=C,V_x_0=D,V_y_0=E,V_2=F,V_y_1=G,V_x_0>=0,V_y_0>=0,V_2>=1,V_y_1>=V_m+1,V_y_1>=V_y_0] 

* Chain [10]: 0
  with precondition: [B=2,V_m=C,V_x_0=D,V_y_0=E,V_2=F,V_y_1=G,V_x_0>=0,V_y_0>=0,V_2>=1,V_y_1>=V_y_0,V_m>=V_y_1] 


#### Cost of loops [12,13,14,15,16] 

 * loop 12:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
1*s(2)+2
  Such that:s(2) =< -V_y_0+V_y_0'+1
s(2) >= -V_y_0+V_y_0'+1

 * loop 13:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
2
 * loop 14:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
2
 * loop 15:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
1*s(4)+2
  Such that:s(4) =< -V_y_0+V_y_0'+1
s(4) >= V_m-V_y_0+1

 * loop 16:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
1
#### Cost of phase [12,13,14,15,16]:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(32) =< -V_m+V_y_0
aux(17) =< V_m-1
aux(6) =< V_m
aux(44) =< V_m+V_x_0-V_y_0+1
aux(56) =< V_m+V_x_0-V_y_0-V_m'-V_x_0'+V_y_0'
aux(58) =< V_x_0+1
aux(59) =< V_x_0-V_x_0'
aux(61) =< V_y_0+1
aux(62) =< V_y_0-V_y_0'
it(12)+it(13) =< aux(58)
it(12)+it(14) =< aux(58)
it(12)+it(15) =< aux(58)
aux(30) =< aux(58)
aux(30)+it(13)+it(14)+it(15) =< aux(59)
it(12)+it(13)+it(14)+it(15) =< aux(59)
aux(47) =< aux(17)+1
aux(46) =< aux(6)+1
aux(11) =< it(12)*aux(17)
it(14) =< aux(30)+aux(32)
s(5) =< it(12)*aux(6)
aux(12) =< it(15)*aux(47)
s(6) =< it(15)*aux(46)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(61)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(62)
it(14)+it(16) =< aux(12)+aux(11)+aux(62)
s(6) =< it(16)+aux(56)
s(6) =< it(16)+aux(44)
aux(42) >= 2
aux(41) >= V_m-V_y_0+1
it(12)+it(13)+it(14)+it(15) >= V_x_0-V_x_0'
aux(63) >= 1
aux(63) >= aux(63)
aux(40) >= min([aux(41),aux(42),aux(63)])
s(5) >= it(12)*aux(63)
s(6) >= it(15)*aux(40)

#### Cost of phase [12,13,14,15,16]:eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) -> [eval_rank1_bb1_in(V_m',V_x_0',V_y_0',B')] 
2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(32) =< -V_m+V_y_0
aux(17) =< V_m-1
aux(6) =< V_m
aux(44) =< V_m+V_x_0-V_y_0+1
aux(56) =< V_m+V_x_0-V_y_0-V_m'-V_x_0'+V_y_0'
aux(58) =< V_x_0+1
aux(59) =< V_x_0-V_x_0'
aux(61) =< V_y_0+1
aux(62) =< V_y_0-V_y_0'
it(12)+it(13) =< aux(58)
it(12)+it(14) =< aux(58)
it(12)+it(15) =< aux(58)
aux(30) =< aux(58)
aux(30)+it(13)+it(14)+it(15) =< aux(59)
it(12)+it(13)+it(14)+it(15) =< aux(59)
aux(47) =< aux(17)+1
aux(46) =< aux(6)+1
aux(11) =< it(12)*aux(17)
it(14) =< aux(30)+aux(32)
s(5) =< it(12)*aux(6)
aux(12) =< it(15)*aux(47)
s(6) =< it(15)*aux(46)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(61)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(62)
it(14)+it(16) =< aux(12)+aux(11)+aux(62)
s(6) =< it(16)+aux(56)
s(6) =< it(16)+aux(44)
aux(42) >= 2
aux(41) >= V_m-V_y_0+1
it(12)+it(13)+it(14)+it(15) >= V_x_0-V_x_0'
aux(63) >= 1
aux(63) >= aux(63)
aux(40) >= min([aux(41),aux(42),aux(63)])
s(5) >= it(12)*aux(63)
s(6) >= it(15)*aux(40)

#### Cost of chains of eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B):
* Chain [[12,13,14,15,16],18]: 2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(32) =< -V_m+V_y_0
aux(17) =< V_m-1
aux(6) =< V_m
aux(44) =< V_m+V_x_0-V_y_0+1
aux(66) =< V_x_0+1
aux(67) =< V_y_0+1
it(12)+it(13) =< aux(66)
it(12)+it(14) =< aux(66)
it(12)+it(15) =< aux(66)
aux(30) =< aux(66)
aux(30)+it(13)+it(14)+it(15) =< aux(66)
it(12)+it(13)+it(14)+it(15) =< aux(66)
aux(47) =< aux(17)+1
aux(46) =< aux(6)+1
aux(11) =< it(12)*aux(17)
it(14) =< aux(30)+aux(32)
s(5) =< it(12)*aux(6)
aux(12) =< it(15)*aux(47)
s(6) =< it(15)*aux(46)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(67)
s(6) =< it(16)+aux(44)
aux(63) >= 1
aux(42) >= 2
aux(41) >= V_m-V_y_0+1
it(15)+it(14)+it(13)+it(12) >= V_x_0+1
aux(63) >= aux(63)
aux(40) >= min([aux(41),aux(42),aux(63)])
s(6) >= it(15)*aux(40)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [[12,13,14,15,16],17]: 2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(32) =< -V_m+V_y_0
aux(17) =< V_m-1
aux(6) =< V_m
aux(44) =< V_m+V_x_0-V_y_0+1
aux(56) =< V_x_0-V_y_0
aux(68) =< V_x_0+1
aux(69) =< V_y_0+1
it(12)+it(13) =< aux(68)
it(12)+it(14) =< aux(68)
it(12)+it(15) =< aux(68)
aux(30) =< aux(68)
aux(30)+it(13)+it(14)+it(15) =< aux(68)
it(12)+it(13)+it(14)+it(15) =< aux(68)
aux(47) =< aux(17)+1
aux(46) =< aux(6)+1
aux(11) =< it(12)*aux(17)
it(14) =< aux(30)+aux(32)
s(5) =< it(12)*aux(6)
aux(12) =< it(15)*aux(47)
s(6) =< it(15)*aux(46)
it(13)+it(14)+it(16) =< aux(12)+aux(11)+aux(69)
s(6) =< it(16)+aux(56)
s(6) =< it(16)+aux(44)
aux(63) >= 1
aux(42) >= 2
aux(41) >= V_m-V_y_0+1
aux(63) >= aux(63)
aux(40) >= min([aux(41),aux(42),aux(63)])
s(6) >= it(15)*aux(40)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [18]: 0
  with precondition: [B=3,0>=V_x_0+1,V_y_0+1>=0,V_m>=V_x_0] 


#### Cost of chains of eval_rank1_start(V_m,B):
* Chain [21]: 1
  with precondition: [0>=V_m+1] 

* Chain [20]: 2*s(16)+2*s(17)+2*s(18)+2*s(19)+1*s(25)+1*s(26)+1*s(28)+1
  Such that:s(12) =< 1
s(7) =< -V_m
s(8) =< V_m-1
s(9) =< V_m
s(11) =< V_m+1
s(10) =< 2*V_m+1
s(16)+s(17)+s(18)+s(20) =< s(11)
s(16)+s(17)+s(18)+s(19) =< s(11)
s(21) =< s(8)+1
s(22) =< s(9)+1
s(24) =< s(19)*s(8)
s(17) =< s(20)+s(7)
s(25) =< s(19)*s(9)
s(27) =< s(16)*s(21)
s(26) =< s(16)*s(22)
s(17)+s(18)+s(28) =< s(27)+s(24)+s(12)
s(26) =< s(28)+s(10)
s(13) >= 1
s(14) >= 2
aux(70) >= V_m+1
aux(70) >= aux(70)
s(16)+s(17)+s(18)+s(19) >= aux(70)
s(13) >= s(13)
s(23) >= min([aux(70),s(14),s(13)])
s(26) >= s(16)*s(23)

  with precondition: [V_m>=0] 

* Chain [19]: 2*s(39)+2*s(40)+2*s(41)+2*s(42)+1*s(48)+1*s(49)+1*s(51)+1
  Such that:s(35) =< 1
s(29) =< -V_m
s(30) =< V_m-1
s(34) =< V_m+1
s(32) =< 2*V_m+1
aux(71) =< V_m
s(40)+s(41)+s(42)+s(43) =< s(34)
s(39)+s(40)+s(41)+s(42) =< s(34)
s(44) =< s(30)+1
s(45) =< aux(71)+1
s(47) =< s(39)*s(30)
s(41) =< s(43)+s(29)
s(48) =< s(39)*aux(71)
s(50) =< s(42)*s(44)
s(49) =< s(42)*s(45)
s(40)+s(41)+s(51) =< s(50)+s(47)+s(35)
s(49) =< s(51)+aux(71)
s(49) =< s(51)+s(32)

  with precondition: [V_m>=0] 


Closed-form bounds of eval_rank1_start(V_m,B): 
-------------------------------------
* Chain [21] with precondition: [0>=V_m+1] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [20] with precondition: [V_m>=0] 
    - Lower bound: 2*V_m+3 
    - Complexity: n
 * Chain [19] with precondition: [V_m>=0] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_rank1_start(V_m,B): 
* 1 
 if []
Possible lower bounds : [1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 101 ms.
* Invariants computed in 179 ms.
   - Backward Invariants 89 ms.
   - Transitive Invariants 39 ms.
* Refinement performed in 184 ms.
* Termination proved in 62 ms.
* Upper bounds computed in 571 ms.
   - Equation cost structures 93 ms.
   - Phase cost structures 387 ms.
   - Chain cost structures 116 ms.
   - Solving cost expressions 9 ms.
* Total analysis performed in 1212 ms.

