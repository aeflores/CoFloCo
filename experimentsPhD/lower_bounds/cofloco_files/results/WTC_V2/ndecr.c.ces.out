Warning: Ignored call to eval_ndecr_stop/1 in equation eval_ndecr_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_ndecr_bb1_in/2,eval_ndecr_bb2_in/2]
1. non_recursive : [eval_ndecr_bb3_in/1]
2. non_recursive : [loop_cont_eval_ndecr_bb1_in/2]
3. non_recursive : [eval_ndecr_4/2]
4. non_recursive : [eval_ndecr_3/2]
5. non_recursive : [eval_ndecr_2/2]
6. non_recursive : [eval_ndecr_1/2]
7. non_recursive : [eval_ndecr_0/2]
8. non_recursive : [eval_ndecr_bb0_in/2]
9. non_recursive : [eval_ndecr_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ndecr_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_ndecr_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ndecr_bb1_in/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations eval_ndecr_bb1_in/2 
* CE 5: eval_ndecr_bb1_in(V_i_0,B) = 0
     [1>=V_i_0,B=2] 
* CE 6: eval_ndecr_bb1_in(V_i_0,B) = 1+ eval_ndecr_bb1_in(C,D)
     [V_i_0>=2,V_i_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_ndecr_bb1_in/2 
* CEs [6] --> Loop 4 
* CEs [5] --> Loop 5 

#### Loops of eval_ndecr_bb1_in/2 
* Loop 4: eval_ndecr_bb1_in(V_i_0,B)->  eval_ndecr_bb1_in(V_i_0',B')
                  [V_i_0>=2,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 5: eval_ndecr_bb1_in(V_i_0,B) [1>=V_i_0,B=2] 

### Ranking functions of CR eval_ndecr_bb1_in(V_i_0,B) 
* RF of phase [4]: [V_i_0-1]

#### Partial ranking functions of CR eval_ndecr_bb1_in(V_i_0,B) 
* Partial RF of phase [4]:
  - RF of loop [4:1]:
    V_i_0-1


### Resulting Chains:eval_ndecr_bb1_in(V_i_0,B) 
* [[4],5]
* [5]


### Specialization of cost equations eval_ndecr_start/2 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations eval_ndecr_start/2 
* CE 7: eval_ndecr_start(V_n,B) = 1+ eval_ndecr_bb1_in(C,D):[[4],5]
     [C>=2,C+1=V_n,D=2] 
* CE 8: eval_ndecr_start(V_n,B) = 1+ eval_ndecr_bb1_in(C,D):[5]
     [1>=C,C+1=V_n,D=2] 

### Cost equations --> "Loop" of eval_ndecr_start/2 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_ndecr_start/2 
* Loop 6: eval_ndecr_start(V_n,B) [V_n>=3] 
* Loop 7: eval_ndecr_start(V_n,B) [2>=V_n] 

### Ranking functions of CR eval_ndecr_start(V_n,B) 

#### Partial ranking functions of CR eval_ndecr_start(V_n,B) 


### Resulting Chains:eval_ndecr_start(V_n,B) 
* [7]
* [6]


Computing Bounds
=====================================

#### Cost of loops [4] 

 * loop 4:eval_ndecr_bb1_in(V_i_0,B) -> [eval_ndecr_bb1_in(V_i_0',B')] 
1
#### Cost of phase [4]:eval_ndecr_bb1_in(V_i_0,B) -> [eval_ndecr_bb1_in(V_i_0',B')] 
1*it(4)+0
  Such that:it(4) =< V_i_0-1
it(4) =< V_i_0-V_i_0'
it(4) >= V_i_0-V_i_0'

#### Cost of chains of eval_ndecr_bb1_in(V_i_0,B):
* Chain [[4],5]: 1*it(4)+0
  Such that:it(4) =< V_i_0-1
it(4) >= V_i_0-1

  with precondition: [B=2,V_i_0>=2] 

* Chain [5]: 0
  with precondition: [B=2,1>=V_i_0] 


#### Cost of chains of eval_ndecr_start(V_n,B):
* Chain [7]: 1
  with precondition: [2>=V_n] 

* Chain [6]: 1*s(1)+1
  Such that:s(1) =< V_n-2
s(1) >= V_n-2

  with precondition: [V_n>=3] 


Closed-form bounds of eval_ndecr_start(V_n,B): 
-------------------------------------
* Chain [7] with precondition: [2>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [6] with precondition: [V_n>=3] 
    - Lower bound: V_n-1 
    - Complexity: n
 
### Partitioned lower bound of eval_ndecr_start(V_n,B): 
* 1 
 if [2>=V_n]
* V_n-1 
 if [V_n>=3]
Possible lower bounds : [1,V_n-1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 18 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 25 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 102 ms.

