Warning: Ignored call to eval_wcet2_stop/1 in equation eval_wcet2_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_wcet2_bb2_in/5,eval_wcet2_bb3_in/5]
1. recursive : [eval_wcet2_7/4,eval_wcet2_8/4,eval_wcet2_bb1_in/2,eval_wcet2_bb4_in/3,loop_cont_eval_wcet2_bb2_in/4]
2. non_recursive : [eval_wcet2_bb5_in/1]
3. non_recursive : [loop_cont_eval_wcet2_bb1_in/2]
4. non_recursive : [eval_wcet2_3/2]
5. non_recursive : [eval_wcet2_2/2]
6. non_recursive : [eval_wcet2_1/2]
7. non_recursive : [eval_wcet2_0/2]
8. non_recursive : [eval_wcet2_bb0_in/2]
9. non_recursive : [eval_wcet2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_wcet2_bb2_in/5
1. SCC is partially evaluated into eval_wcet2_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_wcet2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_wcet2_bb2_in/5 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_wcet2_bb2_in/5 
* CE 8: eval_wcet2_bb2_in(A,B,C,A,B) = 0
     [B>=10,4>=A,C=2] 
* CE 9: eval_wcet2_bb2_in(A,B,C,A,D) = 0
     [2>=A,D=0,C=2,B=0] 
* CE 10: eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) = 1+ eval_wcet2_bb2_in(V__0,E,F,C,D)
     [V_j_0>=0,V__0>=3,9>=V_j_0,4>=V__0,V_j_0+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_wcet2_bb2_in/5 
* CEs [10] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_wcet2_bb2_in/5 
* Loop 7: eval_wcet2_bb2_in(V__0,V_j_0,B,C,D)->  eval_wcet2_bb2_in(V__0,V_j_0',B',C,D)
                  [V_j_0>=0,V__0>=3,9>=V_j_0,4>=V__0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 8: eval_wcet2_bb2_in(A,B,C,A,B) [B>=10,4>=A,C=2] 
* Loop 9: eval_wcet2_bb2_in(A,B,C,A,D) [2>=A,D=0,C=2,B=0] 

### Ranking functions of CR eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) 
* RF of phase [7]: [-V_j_0+10]

#### Partial ranking functions of CR eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V_j_0+10


### Resulting Chains:eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) 
* [[7],8]
* [9]


### Specialization of cost equations eval_wcet2_bb1_in/2 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13] 


#### Refined cost equations eval_wcet2_bb1_in/2 
* CE 11: eval_wcet2_bb1_in(V__0,B) = 0
     [V__0>=5,B=3] 
* CE 12: eval_wcet2_bb1_in(V__0,B) = 2+ eval_wcet2_bb2_in(V__0,C,D,V__0,E):[[7],8]+ eval_wcet2_bb1_in(F,G)
     [V__0>=3,4>=V__0,V__0+1=F,G=3,E=10,D=2,C=0,B=3] 
* CE 13: eval_wcet2_bb1_in(V__0,B) = 2+ eval_wcet2_bb2_in(V__0,C,D,V__0,E):[9]+ eval_wcet2_bb1_in(F,G)
     [2>=V__0,V__0+1=F,G=3,E=0,D=2,C=0,B=3] 

### Cost equations --> "Loop" of eval_wcet2_bb1_in/2 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_wcet2_bb1_in/2 
* Loop 10: eval_wcet2_bb1_in(V__0,B)->  eval_wcet2_bb1_in(V__0',B')
                  [2>=V__0,V__0+1=V__0',B'=3,B=3] 
* Loop 11: eval_wcet2_bb1_in(V__0,B)->  eval_wcet2_bb1_in(V__0',B')
                  [V__0>=3,4>=V__0,V__0+1=V__0',B'=3,B=3] 
* Loop 12: eval_wcet2_bb1_in(V__0,B) [V__0>=5,B=3] 

### Ranking functions of CR eval_wcet2_bb1_in(V__0,B) 
* RF of phase [10]: [-V__0+3]
* RF of phase [11]: [-V__0+5]

#### Partial ranking functions of CR eval_wcet2_bb1_in(V__0,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V__0+3
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V__0+5


### Resulting Chains:eval_wcet2_bb1_in(V__0,B) 
* [[11],12]
* [[10],[11],12]
* [12]


### Specialization of cost equations eval_wcet2_start/2 
* CE 2 is refined into CE [14,15,16] 


#### Refined cost equations eval_wcet2_start/2 
* CE 14: eval_wcet2_start(V_i,B) = 1+ eval_wcet2_bb1_in(V_i,C):[[11],12]
     [V_i>=3,4>=V_i,C=3] 
* CE 15: eval_wcet2_start(V_i,B) = 1+ eval_wcet2_bb1_in(V_i,C):[[10],[11],12]
     [2>=V_i,C=3] 
* CE 16: eval_wcet2_start(V_i,B) = 1+ eval_wcet2_bb1_in(V_i,C):[12]
     [V_i>=5,C=3] 

### Cost equations --> "Loop" of eval_wcet2_start/2 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of eval_wcet2_start/2 
* Loop 13: eval_wcet2_start(V_i,B) [V_i>=5] 
* Loop 14: eval_wcet2_start(V_i,B) [2>=V_i] 
* Loop 15: eval_wcet2_start(V_i,B) [V_i>=3,4>=V_i] 

### Ranking functions of CR eval_wcet2_start(V_i,B) 

#### Partial ranking functions of CR eval_wcet2_start(V_i,B) 


### Resulting Chains:eval_wcet2_start(V_i,B) 
* [15]
* [14]
* [13]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) -> [eval_wcet2_bb2_in(V__0',V_j_0',B',C',D')] 
1
#### Cost of phase [7]:eval_wcet2_bb2_in(V__0,V_j_0,B,C,D) -> [eval_wcet2_bb2_in(V__0',V_j_0',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< -V_j_0+10
it(7) =< -V_j_0+V_j_0'
it(7) >= -V_j_0+V_j_0'

#### Cost of chains of eval_wcet2_bb2_in(V__0,V_j_0,B,C,D):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_j_0+10
it(7) >= -V_j_0+10

  with precondition: [B=2,D=10,V__0=C,4>=V__0,9>=V_j_0,V__0>=3,V_j_0>=0] 

* Chain [9]: 0
  with precondition: [V_j_0=0,B=2,D=0,V__0=C,2>=V__0] 


#### Cost of loops [11] 

 * loop 11:eval_wcet2_bb1_in(V__0,B) -> [eval_wcet2_bb1_in(V__0',B')] 
1*s(2)+2
  Such that:s(2) =< 10
s(2) >= 10

#### Cost of phase [11]:eval_wcet2_bb1_in(V__0,B) -> [eval_wcet2_bb1_in(V__0',B')] 
2*it(11)+1*s(3)+0
  Such that:aux(3) =< -V__0+5
aux(4) =< -V__0+V__0'
aux(2) =< aux(3)
it(11) =< aux(3)
aux(2) =< aux(4)
it(11) =< aux(4)
s(3) =< aux(2)*10
aux(5) >= -V__0+V__0'
aux(5) >= aux(5)
it(11) >= aux(5)
s(3) >= aux(5)*10

#### Cost of loops [10] 

 * loop 10:eval_wcet2_bb1_in(V__0,B) -> [eval_wcet2_bb1_in(V__0',B')] 
2
#### Cost of phase [10]:eval_wcet2_bb1_in(V__0,B) -> [eval_wcet2_bb1_in(V__0',B')] 
2*it(10)+0
  Such that:it(10) =< -V__0+3
it(10) =< -V__0+V__0'
it(10) >= -V__0+V__0'

#### Cost of chains of eval_wcet2_bb1_in(V__0,B):
* Chain [[11],12]: 2*it(11)+1*s(3)+0
  Such that:aux(6) =< -V__0+5
it(11) =< aux(6)
s(3) =< aux(6)*10
aux(5) >= -V__0+5
aux(5) >= aux(5)
it(11) >= aux(5)
s(3) >= aux(5)*10

  with precondition: [B=3,4>=V__0,V__0>=3] 

* Chain [[10],[11],12]: 2*it(10)+2*it(11)+1*s(3)+0
  Such that:aux(6) =< 2
it(10) =< -V__0+3
it(11) =< aux(6)
s(3) =< aux(6)*10
aux(5) >= 2
it(10) >= -V__0+3
aux(5) >= aux(5)
it(11) >= aux(5)
s(3) >= aux(5)*10

  with precondition: [B=3,2>=V__0] 

* Chain [12]: 0
  with precondition: [B=3,V__0>=5] 


#### Cost of chains of eval_wcet2_start(V_i,B):
* Chain [15]: 2*s(6)+1*s(7)+1
  Such that:s(4) =< -V_i+5
s(6) =< s(4)
s(7) =< s(4)*10
s(5) >= -V_i+5
s(5) >= s(5)
s(6) >= s(5)
s(7) >= s(5)*10

  with precondition: [4>=V_i,V_i>=3] 

* Chain [14]: 2*s(9)+2*s(11)+1*s(12)+1
  Such that:s(8) =< 2
s(9) =< -V_i+3
s(11) =< s(8)
s(12) =< s(8)*10
s(10) >= 2
s(9) >= -V_i+3
s(10) >= s(10)
s(11) >= s(10)
s(12) >= s(10)*10

  with precondition: [2>=V_i] 

* Chain [13]: 1
  with precondition: [V_i>=5] 


Closed-form bounds of eval_wcet2_start(V_i,B): 
-------------------------------------
* Chain [15] with precondition: [4>=V_i,V_i>=3] 
    - Lower bound: -12*V_i+61 
    - Complexity: n
 * Chain [14] with precondition: [2>=V_i] 
    - Lower bound: -2*V_i+31 
    - Complexity: n
 * Chain [13] with precondition: [V_i>=5] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_wcet2_start(V_i,B): 
* 1 
 if [V_i>=5]
* -12*V_i+61 
 if [4>=V_i,V_i>=3]
* -2*V_i+31 
 if [2>=V_i]
Possible lower bounds : [1,-12*V_i+61,-2*V_i+31]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 33 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 65 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 96 ms.
   - Equation cost structures 27 ms.
   - Phase cost structures 32 ms.
   - Chain cost structures 32 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 329 ms.

