Warning: Ignored call to eval_rank2_stop/1 in equation eval_rank2_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_rank2_10/9,eval_rank2_11/10,eval_rank2_bb3_in/9,eval_rank2_bb4_in/9,eval_rank2_bb5_in/10]
1. recursive : [eval_rank2_15/6,eval_rank2_16/6,eval_rank2_17/7,eval_rank2_18/7,eval_rank2__critedge_in/5,eval_rank2_bb1_in/3,eval_rank2_bb2_in/3,loop_cont_eval_rank2_bb3_in/6]
2. non_recursive : [eval_rank2_bb6_in/1]
3. non_recursive : [loop_cont_eval_rank2_bb1_in/2]
4. non_recursive : [eval_rank2_6/2]
5. non_recursive : [eval_rank2_5/2]
6. non_recursive : [eval_rank2_4/2]
7. non_recursive : [eval_rank2_3/2]
8. non_recursive : [eval_rank2_2/2]
9. non_recursive : [eval_rank2_1/2]
10. non_recursive : [eval_rank2_0/2]
11. non_recursive : [eval_rank2_bb0_in/2]
12. non_recursive : [eval_rank2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rank2_bb3_in/9
1. SCC is partially evaluated into eval_rank2_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_rank2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rank2_bb3_in/9 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_rank2_bb3_in/9 
* CE 8: eval_rank2_bb3_in(A,B,C,D,E,F,B,C,D) = 0
     [B+C>=D,C>=D+1,C>=1,C+1=F,C+1=A,E=2] 
* CE 9: eval_rank2_bb3_in(A,B,C,D,E,F,B,C,D) = 0
     [B+C>=D,D>=C,C>=1,C+1=F,C+1=A,E=2] 
* CE 10: eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) = 1+ eval_rank2_bb3_in(G,V_y_0,V_1,H,I,C,D,E,F)
     [V_y_0+V_1>=V_y_1,V_y_1>=V_1,V_1>=1,V_y_1=H+1,V_1+1=G,V_1+1=V_x_0,I=2,B=2] 

### Cost equations --> "Loop" of eval_rank2_bb3_in/9 
* CEs [10] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_rank2_bb3_in/9 
* Loop 7: eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F)->  eval_rank2_bb3_in(V_x_0',V_y_0,V_1,V_y_1',B',C,D,E,F)
                  [V_y_0+V_1>=V_y_1,V_y_1>=V_1,V_1>=1,V_y_1=V_y_1'+1,V_1+1=V_x_0',V_1+1=V_x_0,B'=2,B=2] 
* Loop 8: eval_rank2_bb3_in(A,B,C,D,E,F,B,C,D) [B+C>=D,C>=D+1,C>=1,C+1=F,C+1=A,E=2] 
* Loop 9: eval_rank2_bb3_in(A,B,C,D,E,F,B,C,D) [B+C>=D,D>=C,C>=1,C+1=F,C+1=A,E=2] 

### Ranking functions of CR eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) 
* RF of phase [7]: [-V_1+V_y_1+1,-V_x_0+V_y_1+2,V_y_1]

#### Partial ranking functions of CR eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V_1+V_y_1+1
    -V_x_0+V_y_1+2
    V_y_1


### Resulting Chains:eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) 
* [[7],9]
* [[7],8]
* [9]
* [8]


### Specialization of cost equations eval_rank2_bb1_in/3 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_rank2_bb1_in/3 
* CE 11: eval_rank2_bb1_in(V_x_0,V_y_0,B) = 0
     [1>=V_x_0,B=3] 
* CE 12: eval_rank2_bb1_in(V_x_0,V_y_0,B) = 2+ eval_rank2_bb3_in(C,V_y_0,D,E,F,G,V_y_0,D,H):[[7],9]+ eval_rank2_bb1_in(I,J,K)
     [V_y_0+D>=H+1,H>=D,D>=1,D+J=H+1,V_y_0+D=E,D=I+1,D+1=G,D+1=C,D+1=V_x_0,K=3,F=2,B=3] 
* CE 13: eval_rank2_bb1_in(V_x_0,V_y_0,B) = 2+ eval_rank2_bb3_in(C,V_y_0,D,E,F,G,V_y_0,D,H):[[7],8]+ eval_rank2_bb1_in(I,J,K)
     [V_y_0>=0,D>=1,V_y_0+D=E,D=I+1,D=H+1,D+1=G,D+1=C,D+1=V_x_0,K=3,J=0,F=2,B=3] 
* CE 14: eval_rank2_bb1_in(V_x_0,V_y_0,B) = 2+ eval_rank2_bb3_in(C,V_y_0,D,E,F,G,V_y_0,D,H):[9]+ eval_rank2_bb1_in(I,J,K)
     [V_y_0>=0,D>=1,V_y_0+D=H,V_y_0+D=E,V_y_0+1=J,D=I+1,D+1=G,D+1=C,D+1=V_x_0,K=3,F=2,B=3] 
* CE 15: eval_rank2_bb1_in(V_x_0,V_y_0,B) = 2+ eval_rank2_bb3_in(C,V_y_0,D,E,F,G,V_y_0,D,H):[8]+ eval_rank2_bb1_in(I,J,K)
     [D>=1,0>=V_y_0+1,V_y_0+D=H,V_y_0+D=E,V_y_0+1=J,D=I+1,D+1=G,D+1=C,D+1=V_x_0,K=3,F=2,B=3] 

### Cost equations --> "Loop" of eval_rank2_bb1_in/3 
* CEs [12] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [11] --> Loop 14 

#### Loops of eval_rank2_bb1_in/3 
* Loop 10: eval_rank2_bb1_in(V_x_0,V_y_0,B)->  eval_rank2_bb1_in(V_x_0',V_y_0',B')
                  [V_y_0>=V_y_0',V_y_0'>=1,V_x_0>=2,V_x_0=V_x_0'+2,B'=3,B=3] 
* Loop 11: eval_rank2_bb1_in(V_x_0,V_y_0,B)->  eval_rank2_bb1_in(V_x_0',V_y_0',B')
                  [V_y_0>=0,V_x_0>=2,V_y_0+1=V_y_0',V_x_0=V_x_0'+2,B'=3,B=3] 
* Loop 12: eval_rank2_bb1_in(V_x_0,V_y_0,B)->  eval_rank2_bb1_in(V_x_0',V_y_0',B')
                  [V_x_0>=2,0>=V_y_0+1,V_y_0+1=V_y_0',V_x_0=V_x_0'+2,B'=3,B=3] 
* Loop 13: eval_rank2_bb1_in(V_x_0,V_y_0,B)->  eval_rank2_bb1_in(V_x_0',V_y_0',B')
                  [V_y_0>=0,V_x_0>=2,V_x_0=V_x_0'+2,B'=3,V_y_0'=0,B=3] 
* Loop 14: eval_rank2_bb1_in(V_x_0,V_y_0,B) [1>=V_x_0,B=3] 

### Ranking functions of CR eval_rank2_bb1_in(V_x_0,V_y_0,B) 
* RF of phase [10,11,13]: [V_x_0/2-1/2]

#### Partial ranking functions of CR eval_rank2_bb1_in(V_x_0,V_y_0,B) 
* Partial RF of phase [10,11,13]:
  - RF of loop [10:1,11:1]:
    V_x_0/2-1/2
  - RF of loop [13:1]:
    V_x_0-1


### Resulting Chains:eval_rank2_bb1_in(V_x_0,V_y_0,B) 
* [[10,11,13],14]
* [14]


### Specialization of cost equations eval_rank2_start/2 
* CE 2 is refined into CE [16,17] 


#### Refined cost equations eval_rank2_start/2 
* CE 16: eval_rank2_start(V_m,B) = 1+ eval_rank2_bb1_in(V_m,V_m,C):[[10,11,13],14]
     [V_m>=2,C=3] 
* CE 17: eval_rank2_start(V_m,B) = 1+ eval_rank2_bb1_in(V_m,V_m,C):[14]
     [1>=V_m,C=3] 

### Cost equations --> "Loop" of eval_rank2_start/2 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_rank2_start/2 
* Loop 15: eval_rank2_start(V_m,B) [V_m>=2] 
* Loop 16: eval_rank2_start(V_m,B) [1>=V_m] 

### Ranking functions of CR eval_rank2_start(V_m,B) 

#### Partial ranking functions of CR eval_rank2_start(V_m,B) 


### Resulting Chains:eval_rank2_start(V_m,B) 
* [16]
* [15]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) -> [eval_rank2_bb3_in(V_x_0',V_y_0',V_1',V_y_1',B',C',D',E',F')] 
1
#### Cost of phase [7]:eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) -> [eval_rank2_bb3_in(V_x_0',V_y_0',V_1',V_y_1',B',C',D',E',F')] 
1*it(7)+0
  Such that:it(7) =< -V_x_0+V_y_1+2
it(7) =< -V_x_0+V_y_1+V_x_0'-V_y_1'
it(7) =< -V_1+V_y_1+1
it(7) =< -V_1+V_y_1+V_1'-V_y_1'
it(7) =< V_y_1
it(7) =< V_y_1-V_y_1'
it(7) >= -V_x_0+V_y_1+V_x_0'-V_y_1'
it(7) >= -V_1+V_y_1+V_1'-V_y_1'
it(7) >= V_y_1-V_y_1'

#### Cost of phase [7]:eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F) -> [eval_rank2_bb3_in(V_x_0',V_y_0',V_1',V_y_1',B',C',D',E',F')] 
1*it(7)+0
  Such that:it(7) =< -V_x_0+V_y_1+2
it(7) =< -V_x_0+V_y_1+V_x_0'-V_y_1'
it(7) =< -V_1+V_y_1+1
it(7) =< -V_1+V_y_1+V_1'-V_y_1'
it(7) =< V_y_1
it(7) =< V_y_1-V_y_1'
it(7) >= -V_x_0+V_y_1+V_x_0'-V_y_1'
it(7) >= -V_1+V_y_1+V_1'-V_y_1'
it(7) >= V_y_1-V_y_1'

#### Cost of chains of eval_rank2_bb3_in(V_x_0,V_y_0,V_1,V_y_1,B,C,D,E,F):
* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V_y_1-F
it(7) >= V_y_1-F

  with precondition: [B=2,V_x_0=V_1+1,V_x_0=C,V_y_0=D,V_x_0=E+1,V_x_0>=2,F+1>=V_x_0,V_y_1>=F+1,V_x_0+V_y_0>=V_y_1+1] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_y_1-F
it(7) >= -V_x_0+V_y_1+2

  with precondition: [B=2,V_x_0=V_1+1,V_x_0=C,V_y_0=D,V_x_0=E+1,V_x_0=F+2,V_x_0>=2,V_y_1+1>=V_x_0,V_x_0+V_y_0>=V_y_1+1] 

* Chain [9]: 0
  with precondition: [B=2,V_x_0=V_1+1,V_x_0=C,V_y_0=D,V_x_0=E+1,V_y_1=F,V_x_0>=2,V_y_1+1>=V_x_0,V_x_0+V_y_0>=V_y_1+1] 

* Chain [8]: 0
  with precondition: [B=2,V_x_0=V_1+1,V_x_0=C,V_y_0=D,V_x_0=E+1,V_y_1=F,V_x_0>=2,V_x_0>=V_y_1+2,V_x_0+V_y_0>=V_y_1+1] 


#### Cost of loops [10,11,13] 

 * loop 10:eval_rank2_bb1_in(V_x_0,V_y_0,B) -> [eval_rank2_bb1_in(V_x_0',V_y_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_y_0-V_y_0'+1
s(2) >= V_y_0-V_y_0'+1

 * loop 11:eval_rank2_bb1_in(V_x_0,V_y_0,B) -> [eval_rank2_bb1_in(V_x_0',V_y_0',B')] 
2
 * loop 13:eval_rank2_bb1_in(V_x_0,V_y_0,B) -> [eval_rank2_bb1_in(V_x_0',V_y_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_y_0+1
s(4) >= V_y_0+1

#### Cost of phase [10,11,13]:eval_rank2_bb1_in(V_x_0,V_y_0,B) -> [eval_rank2_bb1_in(V_x_0',V_y_0',B')] 
2*it(10)+2*it(11)+2*it(13)+1*s(5)+1*s(6)+0
  Such that:it(13) =< V_x_0-1
it(13) =< V_x_0-V_x_0'
it(10)+it(11)+it(13) =< V_x_0/2-1/2
it(13)+s(5) =< V_x_0/2+V_y_0-1
s(6) =< V_x_0/2+V_y_0
it(10)+it(11)+it(13) =< V_x_0/2-V_x_0'/2
aux(3) =< V_x_0/2+V_y_0-V_x_0'/2-V_y_0'
it(13)+s(5) =< aux(3)
s(6) =< aux(3)
s(5)+s(6) >= V_x_0/2+V_y_0-V_x_0'/2-V_y_0'
it(10)+it(11)+it(13) >= V_x_0/2-V_x_0'/2
aux(4) >= 1
aux(4) >= aux(4)
s(6) >= it(13)*aux(4)
s(5) >= it(10)*aux(4)

#### Cost of chains of eval_rank2_bb1_in(V_x_0,V_y_0,B):
* Chain [[10,11,13],14]: 2*it(10)+2*it(11)+2*it(13)+1*s(5)+1*s(6)+0
  Such that:it(11)+it(10)+it(13) =< V_x_0/2-1/2
s(5)+it(13) =< V_x_0/2+V_y_0-1
aux(5) =< V_x_0/2+V_y_0
s(6) =< aux(5)
it(13)+s(5) =< aux(5)
it(13)+it(11)+it(10) >= V_x_0/2-1/2
aux(6) >= 1
aux(4) >= aux(6)
it(10)+it(11)+it(13) >= aux(6)
aux(4) >= aux(4)
s(6) >= it(13)*aux(4)
s(5) >= it(10)*aux(4)

  with precondition: [B=3,V_x_0>=2,V_y_0>=0] 

* Chain [14]: 0
  with precondition: [B=3,1>=V_x_0] 


#### Cost of chains of eval_rank2_start(V_m,B):
* Chain [16]: 1
  with precondition: [1>=V_m] 

* Chain [15]: 2*s(7)+2*s(8)+2*s(9)+1*s(10)+1*s(13)+1
  Such that:s(9)+s(8)+s(7) =< V_m/2-1/2
s(10)+s(9) =< 3/2*V_m-1
s(11) =< 3/2*V_m
s(13) =< s(11)
s(9)+s(10) =< s(11)
s(12) >= 1
s(9)+s(8)+s(7) >= V_m/2-1/2
s(14) >= s(12)
s(7)+s(8)+s(9) >= s(12)
s(14) >= s(14)
s(13) >= s(9)*s(14)
s(10) >= s(8)*s(14)

  with precondition: [V_m>=2] 


Closed-form bounds of eval_rank2_start(V_m,B): 
-------------------------------------
* Chain [16] with precondition: [1>=V_m] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [15] with precondition: [V_m>=2] 
    - Lower bound: V_m 
    - Complexity: n
 
### Partitioned lower bound of eval_rank2_start(V_m,B): 
* V_m 
 if [V_m>=2]
* 1 
 if [1>=V_m]
Possible lower bounds : [V_m,1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 79 ms.
* Invariants computed in 125 ms.
   - Backward Invariants 57 ms.
   - Transitive Invariants 29 ms.
* Refinement performed in 138 ms.
* Termination proved in 36 ms.
* Upper bounds computed in 271 ms.
   - Equation cost structures 49 ms.
   - Phase cost structures 122 ms.
   - Chain cost structures 115 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 748 ms.

