Warning: Ignored call to eval_random2d_stop/1 in equation eval_random2d_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_random2d_12/4,eval_random2d_13/5,eval_random2d_LeafBlock1_in/5,eval_random2d_LeafBlock3_in/5,eval_random2d_LeafBlock5_in/5,eval_random2d_LeafBlock_in/5,eval_random2d_NewDefault_in/5,eval_random2d_NodeBlock7_in/5,eval_random2d_NodeBlock9_in/5,eval_random2d_NodeBlock_in/5,eval_random2d_bb1_in/3,eval_random2d_bb2_in/3,eval_random2d_bb3_in/5,eval_random2d_bb4_in/5,eval_random2d_bb5_in/5,eval_random2d_bb6_in/5,eval_random2d_bb7_in/5]
1. non_recursive : [eval_random2d_bb8_in/1]
2. non_recursive : [loop_cont_eval_random2d_bb1_in/2]
3. non_recursive : [eval_random2d_10/2]
4. non_recursive : [eval_random2d_9/2]
5. non_recursive : [eval_random2d_8/2]
6. non_recursive : [eval_random2d_7/2]
7. non_recursive : [eval_random2d_6/2]
8. non_recursive : [eval_random2d_5/2]
9. non_recursive : [eval_random2d_4/2]
10. non_recursive : [eval_random2d_3/2]
11. non_recursive : [eval_random2d_2/2]
12. non_recursive : [eval_random2d_1/2]
13. non_recursive : [eval_random2d_0/2]
14. non_recursive : [eval_random2d_bb0_in/2]
15. non_recursive : [eval_random2d_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_random2d_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_random2d_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_random2d_bb1_in/3 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations eval_random2d_bb1_in/3 
* CE 5: eval_random2d_bb1_in(V_N,V_i_0,B) = 0
     [V_i_0>=V_N,V_i_0>=0,B=2] 
* CE 6: eval_random2d_bb1_in(V_N,V_i_0,B) = 1+ eval_random2d_bb1_in(V_N,C,D)
     [V_N>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_random2d_bb1_in/3 
* CEs [6] --> Loop 4 
* CEs [5] --> Loop 5 

#### Loops of eval_random2d_bb1_in/3 
* Loop 4: eval_random2d_bb1_in(V_N,V_i_0,B)->  eval_random2d_bb1_in(V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 5: eval_random2d_bb1_in(V_N,V_i_0,B) [V_i_0>=V_N,V_i_0>=0,B=2] 

### Ranking functions of CR eval_random2d_bb1_in(V_N,V_i_0,B) 
* RF of phase [4]: [V_N-V_i_0]

#### Partial ranking functions of CR eval_random2d_bb1_in(V_N,V_i_0,B) 
* Partial RF of phase [4]:
  - RF of loop [4:1]:
    V_N-V_i_0


### Resulting Chains:eval_random2d_bb1_in(V_N,V_i_0,B) 
* [[4],5]
* [5]


### Specialization of cost equations eval_random2d_start/2 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations eval_random2d_start/2 
* CE 7: eval_random2d_start(V_N,B) = 1+ eval_random2d_bb1_in(V_N,C,D):[[4],5]
     [V_N>=1,D=2,C=0] 
* CE 8: eval_random2d_start(V_N,B) = 1+ eval_random2d_bb1_in(V_N,C,D):[5]
     [0>=V_N,D=2,C=0] 

### Cost equations --> "Loop" of eval_random2d_start/2 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_random2d_start/2 
* Loop 6: eval_random2d_start(V_N,B) [V_N>=1] 
* Loop 7: eval_random2d_start(V_N,B) [0>=V_N] 

### Ranking functions of CR eval_random2d_start(V_N,B) 

#### Partial ranking functions of CR eval_random2d_start(V_N,B) 


### Resulting Chains:eval_random2d_start(V_N,B) 
* [7]
* [6]


Computing Bounds
=====================================

#### Cost of loops [4] 

 * loop 4:eval_random2d_bb1_in(V_N,V_i_0,B) -> [eval_random2d_bb1_in(V_N',V_i_0',B')] 
1
#### Cost of phase [4]:eval_random2d_bb1_in(V_N,V_i_0,B) -> [eval_random2d_bb1_in(V_N',V_i_0',B')] 
1*it(4)+0
  Such that:it(4) =< V_N-V_i_0
it(4) =< V_N-V_i_0-V_N'+V_i_0'
it(4) >= V_N-V_i_0-V_N'+V_i_0'

#### Cost of chains of eval_random2d_bb1_in(V_N,V_i_0,B):
* Chain [[4],5]: 1*it(4)+0
  Such that:it(4) =< V_N-V_i_0
it(4) >= V_N-V_i_0

  with precondition: [B=2,V_i_0>=0,V_N>=V_i_0+1] 

* Chain [5]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_N] 


#### Cost of chains of eval_random2d_start(V_N,B):
* Chain [7]: 1
  with precondition: [0>=V_N] 

* Chain [6]: 1*s(1)+1
  Such that:s(1) =< V_N
s(1) >= V_N

  with precondition: [V_N>=1] 


Closed-form bounds of eval_random2d_start(V_N,B): 
-------------------------------------
* Chain [7] with precondition: [0>=V_N] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [6] with precondition: [V_N>=1] 
    - Lower bound: V_N+1 
    - Complexity: n
 
### Partitioned lower bound of eval_random2d_start(V_N,B): 
* 1 
 if [0>=V_N]
* V_N+1 
 if [V_N>=1]
Possible lower bounds : [1,V_N+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 119 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 24 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 299 ms.

