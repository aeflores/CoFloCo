Warning: Ignored call to eval_sipmamergesort_init_stop/1 in equation eval_sipmamergesort_init_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_sipmamergesort_init_bb3_in/16,eval_sipmamergesort_init_bb4_in/16,eval_sipmamergesort_init_bb5_in/16,eval_sipmamergesort_init_bb6_in/16]
1. recursive : [eval_sipmamergesort_init_bb7_in/18,eval_sipmamergesort_init_bb8_in/18]
2. recursive : [eval_sipmamergesort_init_bb10_in/19,eval_sipmamergesort_init_bb9_in/19]
3. recursive : [eval_sipmamergesort_init_77/19,eval_sipmamergesort_init_78/19,eval_sipmamergesort_init_79/19,eval_sipmamergesort_init_80/19,eval_sipmamergesort_init_81/19,eval_sipmamergesort_init_bb11_in/19,eval_sipmamergesort_init_bb2_in/14,loop_cont_eval_sipmamergesort_init_bb3_in/19,loop_cont_eval_sipmamergesort_init_bb7_in/20,loop_cont_eval_sipmamergesort_init_bb9_in/20]
4. recursive : [eval_sipmamergesort_init_83/13,eval_sipmamergesort_init_84/13,eval_sipmamergesort_init_85/14,eval_sipmamergesort_init_86/14,eval_sipmamergesort_init_bb12_in/12,eval_sipmamergesort_init_bb1_in/6,loop_cont_eval_sipmamergesort_init_bb2_in/13]
5. recursive : [eval_sipmamergesort_init_bb14_in/3,eval_sipmamergesort_init_bb15_in/3]
6. non_recursive : [eval_sipmamergesort_init_bb16_in/1]
7. non_recursive : [loop_cont_eval_sipmamergesort_init_bb14_in/2]
8. non_recursive : [eval_sipmamergesort_init_bb13_in/3]
9. non_recursive : [loop_cont_eval_sipmamergesort_init_bb1_in/4]
10. non_recursive : [eval_sipmamergesort_init_26/2]
11. non_recursive : [eval_sipmamergesort_init_25/2]
12. non_recursive : [eval_sipmamergesort_init_24/2]
13. non_recursive : [eval_sipmamergesort_init_23/2]
14. non_recursive : [eval_sipmamergesort_init_22/2]
15. non_recursive : [eval_sipmamergesort_init_21/2]
16. non_recursive : [eval_sipmamergesort_init_20/2]
17. non_recursive : [eval_sipmamergesort_init_19/2]
18. non_recursive : [eval_sipmamergesort_init_18/2]
19. non_recursive : [eval_sipmamergesort_init_17/2]
20. non_recursive : [eval_sipmamergesort_init_16/2]
21. non_recursive : [eval_sipmamergesort_init_15/2]
22. non_recursive : [eval_sipmamergesort_init_14/2]
23. non_recursive : [eval_sipmamergesort_init_13/2]
24. non_recursive : [eval_sipmamergesort_init_12/2]
25. non_recursive : [eval_sipmamergesort_init_11/2]
26. non_recursive : [eval_sipmamergesort_init_10/2]
27. non_recursive : [eval_sipmamergesort_init_9/2]
28. non_recursive : [eval_sipmamergesort_init_8/2]
29. non_recursive : [eval_sipmamergesort_init_7/2]
30. non_recursive : [eval_sipmamergesort_init_6/2]
31. non_recursive : [eval_sipmamergesort_init_5/2]
32. non_recursive : [eval_sipmamergesort_init_4/2]
33. non_recursive : [eval_sipmamergesort_init_3/2]
34. non_recursive : [eval_sipmamergesort_init_2/2]
35. non_recursive : [eval_sipmamergesort_init_1/2]
36. non_recursive : [eval_sipmamergesort_init_0/2]
37. non_recursive : [eval_sipmamergesort_init_bb0_in/2]
38. non_recursive : [eval_sipmamergesort_init_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_sipmamergesort_init_bb3_in/16
1. SCC is partially evaluated into eval_sipmamergesort_init_bb7_in/18
2. SCC is partially evaluated into eval_sipmamergesort_init_bb9_in/19
3. SCC is partially evaluated into eval_sipmamergesort_init_bb2_in/14
4. SCC is partially evaluated into eval_sipmamergesort_init_bb1_in/6
5. SCC is partially evaluated into eval_sipmamergesort_init_bb14_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_sipmamergesort_init_bb13_in/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_sipmamergesort_init_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_sipmamergesort_init_bb3_in/16 
* CE 24 is refined into CE [30] 
* CE 25 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 


#### Refined cost equations eval_sipmamergesort_init_bb3_in/16 
* CE 30: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) = 0
     [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,E>=0,0>=G,H=2] 
* CE 31: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) = 0
     [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,0>=F,H=2] 
* CE 32: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) = 1+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,K,V_q_1,L,C,D,E,F,G,H,I,J)
     [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_r_1=K+1,L=2,B=2] 
* CE 33: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) = 1+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,K,L,C,D,E,F,G,H,I,J)
     [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_q_1=K+1,L=2,B=2] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb3_in/16 
* CEs [32] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [31] --> Loop 32 

#### Loops of eval_sipmamergesort_init_bb3_in/16 
* Loop 29: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J)->  eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1',V_q_1,B',C,D,E,F,G,H,I,J)
                  [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_r_1=V_r_1'+1,B'=2,B=2] 
* Loop 30: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J)->  eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1',B',C,D,E,F,G,H,I,J)
                  [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_q_1=V_q_1'+1,B'=2,B=2] 
* Loop 31: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,E>=0,0>=G,H=2] 
* Loop 32: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,0>=F,H=2] 

### Ranking functions of CR eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* RF of phase [29,30]: [V_r_1+V_q_1-1]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1]:
    V_r_1
  - RF of loop [30:1]:
    V_q_1


### Resulting Chains:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* [[29,30],32]
* [[29,30],31]
* [32]
* [31]


### Specialization of cost equations eval_sipmamergesort_init_bb7_in/18 
* CE 27 is refined into CE [34] 
* CE 26 is refined into CE [35] 


#### Refined cost equations eval_sipmamergesort_init_bb7_in/18 
* CE 34: eval_sipmamergesort_init_bb7_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H,G) = 0
     [0>=H,I=3] 
* CE 35: eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) = 1+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,L,M,C,D,E,F,G,H,I,J,K)
     [V_r_3>=1,V_r_3=L+1,M=3,B=3] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb7_in/18 
* CEs [35] --> Loop 33 
* CEs [34] --> Loop 34 

#### Loops of eval_sipmamergesort_init_bb7_in/18 
* Loop 33: eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3',B',C,D,E,F,G,H,I,J,K)
                  [V_r_3>=1,V_r_3=V_r_3'+1,B'=3,B=3] 
* Loop 34: eval_sipmamergesort_init_bb7_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H,G) [0>=H,I=3] 

### Ranking functions of CR eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [33]: [V_r_3]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_r_3


### Resulting Chains:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* [[33],34]
* [34]


### Specialization of cost equations eval_sipmamergesort_init_bb9_in/19 
* CE 29 is refined into CE [36] 
* CE 28 is refined into CE [37] 


#### Refined cost equations eval_sipmamergesort_init_bb9_in/19 
* CE 36: eval_sipmamergesort_init_bb9_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I) = 0
     [0>=I,J=4] 
* CE 37: eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) = 1+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,L,M,C,D,E,F,G,H,I,J,K)
     [V_q_3>=1,V_q_3=L+1,M=4,B=4] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb9_in/19 
* CEs [37] --> Loop 35 
* CEs [36] --> Loop 36 

#### Loops of eval_sipmamergesort_init_bb9_in/19 
* Loop 35: eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3',B',C,D,E,F,G,H,I,J,K)
                  [V_q_3>=1,V_q_3=V_q_3'+1,B'=4,B=4] 
* Loop 36: eval_sipmamergesort_init_bb9_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I) [0>=I,J=4] 

### Ranking functions of CR eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [35]: [V_q_3]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_q_3


### Resulting Chains:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* [[35],36]
* [36]


### Specialization of cost equations eval_sipmamergesort_init_bb2_in/14 
* CE 18 is discarded (unfeasible) 
* CE 19 is refined into CE [38,39,40,41] 
* CE 16 is discarded (unfeasible) 
* CE 17 is refined into CE [42,43] 
* CE 14 is refined into CE [44,45,46] 
* CE 15 is refined into CE [47,48,49,50] 
* CE 12 is refined into CE [51,52,53] 
* CE 13 is refined into CE [54,55] 


#### Refined cost equations eval_sipmamergesort_init_bb2_in/14 
* CE 38: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,O,P,Q):[[29,30],32]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,R,S,P,T,U,V_n,V_up_0,V_p_0,V_m_0,V,W,P,X,P):[34]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,Y,Z,P,A1,P,B1,V_n,V_up_0,V_p_0,V_m_0,C1,D1,P,E1,F1):[[35],36]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,G1,H1,C,D,E,F,G,H,I,J,K)
     [V_p_0>=P,V_m_0>=2*V_p_0+1,P>=1,G1+2*V_p_0=V_m_0,C1+2*V_p_0=V_m_0,Y+2*V_p_0=V_m_0,V+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,H1=5,F1=0,E1=0,D1=0,B1=4,A1=0,Z=0,X=0,W=0,U=3,T=0,S=0,Q=0,O=0,M=2,B=5] 
* CE 39: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,O,P,O):[[29,30],31]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,Q,O,R,O,S,V_n,V_up_0,V_p_0,V_m_0,T,O,U,V,W):[[33],34]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,X,O,Y,Z,A1,B1,V_n,V_up_0,V_p_0,V_m_0,C1,O,D1,E1,F1):[36]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,G1,H1,C,D,E,F,G,H,I,J,K)
     [V_p_0>=O,V_m_0>=2*V_p_0+1,O>=1,G1+2*V_p_0=V_m_0,C1+2*V_p_0=V_m_0,X+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,H1=5,F1=0,E1=0,D1=0,B1=4,A1=0,Z=0,Y=0,W=0,V=0,U=0,S=3,R=0,P=0,M=2,B=5] 
* CE 40: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,V_p_0,V_p_0,V_p_0):[32]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,O,V_p_0,V_p_0,V_p_0,P,V_n,V_up_0,V_p_0,V_m_0,Q,V_p_0,V_p_0,V_p_0,V_p_0):[34]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,R,V_p_0,V_p_0,V_p_0,V_p_0,S,V_n,V_up_0,V_p_0,V_m_0,T,V_p_0,V_p_0,V_p_0,V_p_0):[36]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,U,V,C,D,E,F,G,H,I,J,K)
     [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,U+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,O+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,V=5,S=4,P=3,M=2,B=5] 
* CE 41: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,V_p_0,V_p_0,V_p_0):[31]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,O,V_p_0,V_p_0,V_p_0,P,V_n,V_up_0,V_p_0,V_m_0,Q,V_p_0,V_p_0,V_p_0,V_p_0):[34]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,R,V_p_0,V_p_0,V_p_0,V_p_0,S,V_n,V_up_0,V_p_0,V_m_0,T,V_p_0,V_p_0,V_p_0,V_p_0):[36]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,U,V,C,D,E,F,G,H,I,J,K)
     [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,U+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,O+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,V=5,S=4,P=3,M=2,B=5] 
* CE 42: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M) = 4+ eval_sipmamergesort_init_bb3_in(A,B,C,A,N,C,A,O,A,B,C,A,P,C,A,C):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,A,Q,C,A,C,R,A,B,C,A,S,C,A,C,A):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,A,T,C,A,C,A,U,A,B,C,A,V,C,A,C,A):[36]+ eval_sipmamergesort_init_bb2_in(A,B,C,W,X,E,F,G,H,I,J,K,L,M)
     [C>=A+1,0>=C+1,C+W=0,C+V=0,C+T=0,C+S=0,C+Q=0,C+P=0,C+N=0,X=5,U=4,R=3,O=2,D=5] 
* CE 43: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M) = 4+ eval_sipmamergesort_init_bb3_in(A,B,C,A,N,C,A,O,A,B,C,A,P,C,A,C):[31]+ eval_sipmamergesort_init_bb7_in(A,B,C,A,Q,C,A,C,R,A,B,C,A,S,C,A,C,A):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,A,T,C,A,C,A,U,A,B,C,A,V,C,A,C,A):[36]+ eval_sipmamergesort_init_bb2_in(A,B,C,W,X,E,F,G,H,I,J,K,L,M)
     [C>=A+1,0>=C+1,C+W=0,C+V=0,C+T=0,C+S=0,C+Q=0,C+P=0,C+N=0,X=5,U=4,R=3,O=2,D=5] 
* CE 44: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,K,L,C,M,A,B,C,D,N,O,H,P):[[29,30],32]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,Q,R,H,S,T,A,B,C,D,U,V,H,W,H):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,X,Y,H,Z,H,A1,A,B,C,D,B1,C1,H,D1,E1):[[35],36]
     [C>=H,2*C>=D+1,D>=C+1,H>=1,C+L=D,E1=0,D1=0,C1=0,B1=0,A1=4,Z=0,Y=0,X=0,W=0,V=0,U=0,T=3,S=0,R=0,Q=0,P=0,O=0,N=0,M=2,K=0,J=0,I=0,G=0,F=0,E=5] 
* CE 45: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,K,L,C,M,A,B,C,D,N,G,O,G):[[29,30],31]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,P,G,Q,G,R,A,B,C,D,S,G,T,U,V):[[33],34]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,W,G,X,Y,Z,A1,A,B,C,D,B1,G,C1,D1,E1):[36]
     [D>=C+G,2*C>=D+1,G>=1,C+L=D,E1=0,D1=0,C1=0,B1=0,A1=4,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=2,K=0,J=0,I=0,H=0,F=0,E=5] 
* CE 46: eval_sipmamergesort_init_bb2_in(A,B,C,C,D,A,B,C,C,E,F,C,G,H) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,C,I,J,C,K,A,B,C,C,L,M,C,N):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,C,O,P,C,Q,R,A,B,C,C,S,T,C,U,C):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,C,V,W,C,X,C,Y,A,B,C,C,Z,A1,C,B1,C1):[[35],36]
     [C>=1,C1=0,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=0,D=5] 
* CE 47: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,L,M,C,C,N,A,B,C,O,P,Q,I,R):[[29,30],32]+ eval_sipmamergesort_init_bb7_in(A,B,C,S,T,U,I,V,W,A,B,C,X,Y,Z,I,A1,I):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,B1,C1,D1,I,E1,I,F1,A,B,C,G1,H1,I1,I,J1,K1):[[35],36]
     [C>=I,I>=1,2*C=G1,2*C=B1,2*C=X,2*C=S,2*C=O,2*C=L,2*C=F,2*C=D,K1=0,J1=0,I1=0,H1=0,F1=4,E1=0,D1=0,C1=0,A1=0,Z=0,Y=0,W=3,V=0,U=0,T=0,R=0,Q=0,P=0,N=2,M=0,K=0,J=0,H=0,G=0,E=5] 
* CE 48: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,L,M,C,C,N,A,B,C,O,P,H,Q,H):[[29,30],31]+ eval_sipmamergesort_init_bb7_in(A,B,C,R,S,H,T,H,U,A,B,C,V,W,H,X,Y,Z):[[33],34]+ eval_sipmamergesort_init_bb9_in(A,B,C,A1,B1,H,C1,D1,E1,F1,A,B,C,G1,H1,H,I1,J1,K1):[36]
     [C>=H,H>=1,2*C=G1,2*C=A1,2*C=V,2*C=R,2*C=O,2*C=L,2*C=F,2*C=D,K1=0,J1=0,I1=0,H1=0,F1=4,E1=0,D1=0,C1=0,B1=0,Z=0,Y=0,X=0,W=0,U=3,T=0,S=0,Q=0,P=0,N=2,M=0,K=0,J=0,I=0,G=0,E=5] 
* CE 49: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) = 3+ eval_sipmamergesort_init_bb3_in(A,B,M,N,O,P,Q,R,A,B,S,T,U,V,W,X):[32]+ eval_sipmamergesort_init_bb7_in(A,B,Y,Z,A1,B1,C1,D1,E1,A,B,F1,G1,H1,I1,J1,K1,L1):[34]+ eval_sipmamergesort_init_bb9_in(A,B,M1,N1,O1,P1,Q1,R1,S1,T1,A,B,U1,V1,W1,X1,Y1,Z1,A2):[36]
     [A2=0,Z1=0,Y1=0,X1=0,W1=0,V1=0,U1=0,T1=4,S1=0,R1=0,Q1=0,P1=0,O1=0,N1=0,M1=0,L1=0,K1=0,J1=0,I1=0,H1=0,G1=0,F1=0,E1=3,D1=0,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=2,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* CE 50: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) = 3+ eval_sipmamergesort_init_bb3_in(A,B,M,N,O,P,Q,R,A,B,S,T,U,V,W,X):[31]+ eval_sipmamergesort_init_bb7_in(A,B,Y,Z,A1,B1,C1,D1,E1,A,B,F1,G1,H1,I1,J1,K1,L1):[34]+ eval_sipmamergesort_init_bb9_in(A,B,M1,N1,O1,P1,Q1,R1,S1,T1,A,B,U1,V1,W1,X1,Y1,Z1,A2):[36]
     [A2=0,Z1=0,Y1=0,X1=0,W1=0,V1=0,U1=0,T1=4,S1=0,R1=0,Q1=0,P1=0,O1=0,N1=0,M1=0,L1=0,K1=0,J1=0,I1=0,H1=0,G1=0,F1=0,E1=3,D1=0,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=2,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* CE 51: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,I) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,J,K,D,L,A,B,C,D,M,N,D,O):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,P,Q,D,R,S,A,B,C,D,T,U,D,V,D):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,W,X,D,Y,D,Z,A,B,C,D,A1,B1,D,C1,D1):[[35],36]
     [C>=D+1,D>=1,D1=0,C1=0,B1=0,A1=0,Z=4,Y=0,X=0,W=0,V=0,U=0,T=0,S=3,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 52: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,I,J,D,K,A,B,C,D,L,M,D,N):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,O,P,D,Q,R,A,B,C,D,S,T,D,U,D):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,V,W,D,X,D,Y,A,B,C,D,Z,A1,D,B1,D):[36]
     [C>=1,0>=D,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 53: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,I,J,D,K,A,B,C,D,L,M,D,N):[31]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,O,P,D,Q,R,A,B,C,D,S,T,D,U,D):[34]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,V,W,D,X,D,Y,A,B,C,D,Z,A1,D,B1,D):[36]
     [C>=1,0>=D,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 54: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) = 3+ eval_sipmamergesort_init_bb3_in(A,B,I,A,J,K,A,L,A,B,M,A,N,O,A,P):[32]+ eval_sipmamergesort_init_bb7_in(A,B,Q,A,R,S,A,T,U,A,B,V,A,W,X,A,Y,A):[34]+ eval_sipmamergesort_init_bb9_in(A,B,Z,A,A1,B1,A,C1,A,D1,A,B,E1,A,F1,G1,A,H1,A):[36]
     [0>=A+1,H1=0,G1=0,F1=0,E1=0,D1=4,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=3,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=5,C=0] 
* CE 55: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) = 3+ eval_sipmamergesort_init_bb3_in(A,B,I,A,J,K,A,L,A,B,M,A,N,O,A,P):[31]+ eval_sipmamergesort_init_bb7_in(A,B,Q,A,R,S,A,T,U,A,B,V,A,W,X,A,Y,A):[34]+ eval_sipmamergesort_init_bb9_in(A,B,Z,A,A1,B1,A,C1,A,D1,A,B,E1,A,F1,G1,A,H1,A):[36]
     [0>=A+1,H1=0,G1=0,F1=0,E1=0,D1=4,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=3,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=5,C=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb2_in/14 
* CEs [45] --> Loop 37 
* CEs [48] --> Loop 38 
* CEs [53] --> Loop 39 
* CEs [52] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [51] --> Loop 42 
* CEs [47] --> Loop 43 
* CEs [46] --> Loop 44 
* CEs [55] --> Loop 45 
* CEs [54] --> Loop 46 
* CEs [50] --> Loop 47 
* CEs [49] --> Loop 48 
* CEs [39] --> Loop 49 
* CEs [38] --> Loop 50 
* CEs [41] --> Loop 51 
* CEs [40] --> Loop 52 
* CEs [43] --> Loop 53 
* CEs [42] --> Loop 54 

#### Loops of eval_sipmamergesort_init_bb2_in/14 
* Loop 37: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) [D>=C+G,2*C>=D+1,G>=1,J=0,I=0,H=0,F=0,E=5] 
* Loop 38: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) [C>=H,H>=1,2*C=F,2*C=D,K=0,J=0,I=0,G=0,E=5] 
* Loop 39: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) [C>=1,0>=D,H=0,G=0,F=0,E=5] 
* Loop 40: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) [C>=1,0>=D,H=0,G=0,F=0,E=5] 
* Loop 41: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) [C>=H,2*C>=D+1,D>=C+1,H>=1,J=0,I=0,G=0,F=0,E=5] 
* Loop 42: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,I) [C>=D+1,D>=1,I=0,H=0,G=0,F=0,E=5] 
* Loop 43: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) [C>=I,I>=1,2*C=F,2*C=D,K=0,J=0,H=0,G=0,E=5] 
* Loop 44: eval_sipmamergesort_init_bb2_in(A,B,C,C,D,A,B,C,C,E,F,C,G,H) [C>=1,H=0,G=0,F=0,E=0,D=5] 
* Loop 45: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) [0>=A+1,H=0,G=0,F=0,E=0,D=5,C=0] 
* Loop 46: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) [0>=A+1,H=0,G=0,F=0,E=0,D=5,C=0] 
* Loop 47: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) [L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* Loop 48: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) [L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* Loop 49: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=2*V_p_0+1,V_p_0>=1,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 50: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=2*V_p_0+1,V_p_0>=1,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 51: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 52: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 53: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M)->  eval_sipmamergesort_init_bb2_in(A,B,C,A',B',E,F,G,H,I,J,K,L,M)
                  [C>=A+1,0>=C+1,C+A'=0,B'=5,D=5] 
* Loop 54: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M)->  eval_sipmamergesort_init_bb2_in(A,B,C,A',B',E,F,G,H,I,J,K,L,M)
                  [C>=A+1,0>=C+1,C+A'=0,B'=5,D=5] 

### Ranking functions of CR eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [49,50]: [V_m_0/2-1,-V_p_0+V_m_0/2]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [49,50]:
  - RF of loop [49:1,50:1]:
    V_m_0/2-1
    -V_p_0+V_m_0/2


### Resulting Chains:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* [[51,52]]...
* [[49,50],44]
* [[49,50],43]
* [[49,50],42]
* [[49,50],41]
* [[49,50],38]
* [[49,50],37]
* [54,[51,52]]...
* [53,[51,52]]...
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]


### Specialization of cost equations eval_sipmamergesort_init_bb1_in/6 
* CE 7 is refined into CE [56,57,58,59,60,61,62,63,64] 
* CE 8 is refined into CE [65,66,67,68,69,70,71,72,73] 
* CE 6 is refined into CE [74,75,76,77,78,79,80,81,82] 
* CE 4 is refined into CE [83,84,85,86,87,88,89,90,91,92,93,94,95,96,97] 
* CE 5 is refined into CE [98,99,100,101,102,103,104,105,106,107,108,109,110,111,112] 
* CE 3 is refined into CE [113,114,115,116,117,118,119,120,121,122,123,124,125,126,127] 


#### Refined cost equations eval_sipmamergesort_init_bb1_in/6 
* CE 56: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[[51,52]]
     [F>=O+1,V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 57: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,V_p_0,F,G,V_p_0,H,I):[[49,50],44]+ eval_sipmamergesort_init_bb1_in(V_n,J,K,L,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,V_up_0>=1,V_up_0+J=1,2*V_p_0=K,L=6,I=0,H=0,G=0,F=0,E=5,B=6] 
* CE 58: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],43]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=I,V_n>=4*V_p_0,I>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 59: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,F,I,J):[[49,50],42]+ eval_sipmamergesort_init_bb1_in(V_n,K,L,M,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=F+1,F>=1,V_up_0>=1,V_up_0+K=1,2*V_p_0=L,M=6,J=0,I=0,H=0,G=0,E=5,B=6] 
* CE 60: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],41]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=I,2*V_p_0>=F+1,F>=V_p_0+1,I>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 61: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],38]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=H,V_n>=4*V_p_0,H>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 62: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],37]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [F>=V_p_0+H,V_n>=2*V_p_0+F,2*V_p_0>=F+1,H>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 63: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[54,[51,52]]
     [F>=O+1,V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 64: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[53,[51,52]]
     [F>=O+1,V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 65: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[[51,52]]
     [F>=O+1,V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 66: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,V_p_0,F,G,V_p_0,H,I):[[49,50],44]+ eval_sipmamergesort_init_bb1_in(V_n,J,K,L,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,0>=V_up_0+1,V_up_0+J=1,2*V_p_0=K,L=6,I=0,H=0,G=0,F=0,E=5,B=6] 
* CE 67: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],43]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=I,V_n>=4*V_p_0,I>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 68: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,F,I,J):[[49,50],42]+ eval_sipmamergesort_init_bb1_in(V_n,K,L,M,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=F+1,F>=1,0>=V_up_0+1,V_up_0+K=1,2*V_p_0=L,M=6,J=0,I=0,H=0,G=0,E=5,B=6] 
* CE 69: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],41]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=I,2*V_p_0>=F+1,F>=V_p_0+1,I>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 70: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],38]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=H,V_n>=4*V_p_0,H>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 71: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[49,50],37]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [F>=V_p_0+H,V_n>=2*V_p_0+F,2*V_p_0>=F+1,H>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 72: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[54,[51,52]]
     [F>=O+1,V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 73: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[53,[51,52]]
     [F>=O+1,V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 74: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[[51,52]]
     [G>=P+1,V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 75: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,V_p_0,H,I,V_p_0,J,K):[[49,50],44]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,2*V_p_0=M,N=6,L=1,K=0,J=0,I=0,H=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 76: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[49,50],43]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_p_0>=K,V_n>=4*V_p_0,K>=1,2*V_p_0=O,2*V_p_0=H,P=6,N=1,M=0,L=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 77: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,H,K,L):[[49,50],42]+ eval_sipmamergesort_init_bb1_in(V_n,M,N,O,C,D)
     [V_n>=2*V_p_0+H,V_p_0>=H+1,H>=1,2*V_p_0=N,O=6,M=1,L=0,K=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 78: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[49,50],41]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_n>=2*V_p_0+H,V_p_0>=K,2*V_p_0>=H+1,H>=V_p_0+1,K>=1,2*V_p_0=O,P=6,N=1,M=0,L=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 79: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[49,50],38]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_p_0>=J,V_n>=4*V_p_0,J>=1,2*V_p_0=O,2*V_p_0=H,P=6,N=1,M=0,L=0,K=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 80: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[49,50],37]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [H>=V_p_0+J,V_n>=2*V_p_0+H,2*V_p_0>=H+1,J>=1,2*V_p_0=O,P=6,N=1,M=0,L=0,K=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 81: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[54,[51,52]]
     [G>=P+1,V_p_0>=V_n+1,0>=V_p_0+1,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 82: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[53,[51,52]]
     [G>=P+1,V_p_0>=V_n+1,0>=V_p_0+1,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 83: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[[51,52]]
     [V_n>=V_p_0,2*G>=C,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,D+F=1,E=5,B=6] 
* CE 84: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[54,[51,52]]
     [V_p_0>=V_n+1,2*G>=C,V_up_0>=1,0>=V_p_0+1,D+F=1,E=5,B=6] 
* CE 85: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[53,[51,52]]
     [V_p_0>=V_n+1,2*G>=C,V_up_0>=1,0>=V_p_0+1,D+F=1,E=5,B=6] 
* CE 86: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[48]
     [V_up_0>=1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 87: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[47]
     [V_up_0>=1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 88: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[46]
     [B>=1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 89: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[45]
     [B>=1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 90: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,B,A,A,E,A,B,A,A,F,G,A,H,I):[44]
     [A>=1,B>=1,B+D=1,I=0,H=0,G=0,F=0,E=5,C=6] 
* CE 91: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[43]
     [V_p_0>=L,L>=1,V_up_0>=1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,K=0,J=0,G=5,B=6] 
* CE 92: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,J):[42]
     [C>=A+1,A>=1,B>=1,B+E=1,J=0,I=0,H=0,G=0,F=5,D=6] 
* CE 93: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[41]
     [C>=I,A>=C+1,2*C>=A+1,I>=1,B>=1,B+E=1,K=0,J=0,H=0,G=0,F=5,D=6] 
* CE 94: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[40]
     [C>=1,B>=1,0>=A,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 95: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[39]
     [C>=1,B>=1,0>=A,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 96: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[38]
     [V_p_0>=K,K>=1,V_up_0>=1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,L=0,J=0,G=5,B=6] 
* CE 97: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[37]
     [A>=C+H,2*C>=A+1,H>=1,B>=1,B+E=1,K=0,J=0,I=0,G=0,F=5,D=6] 
* CE 98: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[[51,52]]
     [V_n>=V_p_0,2*G>=C,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 99: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[54,[51,52]]
     [V_p_0>=V_n+1,2*G>=C,0>=V_p_0+1,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 100: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[53,[51,52]]
     [V_p_0>=V_n+1,2*G>=C,0>=V_p_0+1,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 101: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[48]
     [0>=V_up_0+1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 102: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[47]
     [0>=V_up_0+1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 103: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[46]
     [0>=B+1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 104: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[45]
     [0>=B+1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 105: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,B,A,A,E,A,B,A,A,F,G,A,H,I):[44]
     [A>=1,0>=B+1,B+D=1,I=0,H=0,G=0,F=0,E=5,C=6] 
* CE 106: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[43]
     [V_p_0>=L,L>=1,0>=V_up_0+1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,K=0,J=0,G=5,B=6] 
* CE 107: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,J):[42]
     [C>=A+1,A>=1,0>=B+1,B+E=1,J=0,I=0,H=0,G=0,F=5,D=6] 
* CE 108: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[41]
     [C>=I,A>=C+1,2*C>=A+1,I>=1,0>=B+1,B+E=1,K=0,J=0,H=0,G=0,F=5,D=6] 
* CE 109: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[40]
     [C>=1,0>=A,0>=B+1,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 110: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[39]
     [C>=1,0>=A,0>=B+1,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 111: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[38]
     [V_p_0>=K,K>=1,0>=V_up_0+1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,L=0,J=0,G=5,B=6] 
* CE 112: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[37]
     [A>=C+H,2*C>=A+1,H>=1,0>=B+1,B+E=1,K=0,J=0,I=0,G=0,F=5,D=6] 
* CE 113: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[[51,52]]
     [V_n>=V_p_0,2*H>=C,V_n>=2*V_p_0+1,0>=V_p_0,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 114: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[54,[51,52]]
     [V_p_0>=V_n+1,2*H>=C,0>=V_p_0+1,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 115: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[53,[51,52]]
     [V_p_0>=V_n+1,2*H>=C,0>=V_p_0+1,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 116: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,G,H,I,J,K,L,M,N,O,P,Q,R):[48]
     [R=0,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=5,H=0,G=0,F=0,E=0,D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* CE 117: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,G,H,I,J,K,L,M,N,O,P,Q,R):[47]
     [R=0,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=5,H=0,G=0,F=0,E=0,D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* CE 118: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,G,A,H,A,I,J,A,K,L,A,M,A):[46]
     [0>=A+1,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=1,D=6,C=0,B=0] 
* CE 119: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,G,A,H,A,I,J,A,K,L,A,M,A):[45]
     [0>=A+1,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=1,D=6,C=0,B=0] 
* CE 120: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,E,A,A,F,A,G,A,A,H,I,A,J,K):[44]
     [A>=1,K=0,J=0,I=0,H=0,G=0,F=5,E=0,D=1,C=6,B=0] 
* CE 121: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,V_p_0,G,H,I,J,V_p_0,K,L,M,N,O,P):[43]
     [V_p_0>=N,N>=1,2*V_p_0=K,2*V_p_0=I,2*V_p_0=G,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,P=0,O=0,M=0,L=0,J=0,H=5,F=0,D=1,B=6,V_up_0=0] 
* CE 122: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,L):[42]
     [C>=A+1,A>=1,L=0,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 123: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,K,L,M):[41]
     [C>=K,A>=C+1,2*C>=A+1,K>=1,M=0,L=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 124: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,A):[40]
     [C>=1,0>=A,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 125: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,A):[39]
     [C>=1,0>=A,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 126: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,V_p_0,G,H,I,J,V_p_0,K,L,M,N,O,P):[38]
     [V_p_0>=M,M>=1,2*V_p_0=K,2*V_p_0=I,2*V_p_0=G,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,P=0,O=0,N=0,L=0,J=0,H=5,F=0,D=1,B=6,V_up_0=0] 
* CE 127: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,K,L,M):[37]
     [A>=C+J,2*C>=A+1,J>=1,M=0,L=0,K=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb1_in/6 
* CEs [97] --> Loop 55 
* CEs [93] --> Loop 56 
* CEs [92] --> Loop 57 
* CEs [112] --> Loop 58 
* CEs [108] --> Loop 59 
* CEs [107] --> Loop 60 
* CEs [95] --> Loop 61 
* CEs [94] --> Loop 62 
* CEs [110] --> Loop 63 
* CEs [109] --> Loop 64 
* CEs [90] --> Loop 65 
* CEs [105] --> Loop 66 
* CEs [96] --> Loop 67 
* CEs [91] --> Loop 68 
* CEs [111] --> Loop 69 
* CEs [106] --> Loop 70 
* CEs [89] --> Loop 71 
* CEs [88] --> Loop 72 
* CEs [104] --> Loop 73 
* CEs [103] --> Loop 74 
* CEs [127] --> Loop 75 
* CEs [123] --> Loop 76 
* CEs [122] --> Loop 77 
* CEs [125] --> Loop 78 
* CEs [124] --> Loop 79 
* CEs [120] --> Loop 80 
* CEs [126] --> Loop 81 
* CEs [121] --> Loop 82 
* CEs [119] --> Loop 83 
* CEs [118] --> Loop 84 
* CEs [87] --> Loop 85 
* CEs [86] --> Loop 86 
* CEs [102] --> Loop 87 
* CEs [101] --> Loop 88 
* CEs [117] --> Loop 89 
* CEs [116] --> Loop 90 
* CEs [85] --> Loop 91 
* CEs [84] --> Loop 92 
* CEs [64] --> Loop 93 
* CEs [63] --> Loop 94 
* CEs [83] --> Loop 95 
* CEs [56] --> Loop 96 
* CEs [100] --> Loop 97 
* CEs [99] --> Loop 98 
* CEs [73] --> Loop 99 
* CEs [72] --> Loop 100 
* CEs [98] --> Loop 101 
* CEs [65] --> Loop 102 
* CEs [115] --> Loop 103 
* CEs [114] --> Loop 104 
* CEs [82] --> Loop 105 
* CEs [81] --> Loop 106 
* CEs [113] --> Loop 107 
* CEs [74] --> Loop 108 
* CEs [57] --> Loop 109 
* CEs [66] --> Loop 110 
* CEs [59] --> Loop 111 
* CEs [62] --> Loop 112 
* CEs [60] --> Loop 113 
* CEs [61] --> Loop 114 
* CEs [58] --> Loop 115 
* CEs [68] --> Loop 116 
* CEs [71] --> Loop 117 
* CEs [69] --> Loop 118 
* CEs [70] --> Loop 119 
* CEs [67] --> Loop 120 
* CEs [75] --> Loop 121 
* CEs [77] --> Loop 122 
* CEs [80] --> Loop 123 
* CEs [78] --> Loop 124 
* CEs [79] --> Loop 125 
* CEs [76] --> Loop 126 

#### Loops of eval_sipmamergesort_init_bb1_in/6 
* Loop 55: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,B>=1,B+E=1,D=6] 
* Loop 56: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,B>=1,B+E=1,D=6] 
* Loop 57: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,B>=1,A>=1,B+E=1,D=6] 
* Loop 58: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,0>=B+1,B+E=1,D=6] 
* Loop 59: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,0>=B+1,B+E=1,D=6] 
* Loop 60: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,A>=1,0>=B+1,B+E=1,D=6] 
* Loop 61: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,B>=1,0>=A,B+E=1,D=6] 
* Loop 62: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,B>=1,0>=A,B+E=1,D=6] 
* Loop 63: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=B+1,0>=A,B+E=1,D=6] 
* Loop 64: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=B+1,0>=A,B+E=1,D=6] 
* Loop 65: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [B>=1,A>=1,B+D=1,C=6] 
* Loop 66: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [A>=1,0>=B+1,B+D=1,C=6] 
* Loop 67: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,A>=2,B+E=1,A=2*C,D=6] 
* Loop 68: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,A>=2,B+E=1,A=2*C,D=6] 
* Loop 69: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,0>=B+1,B+E=1,A=2*C,D=6] 
* Loop 70: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,0>=B+1,B+E=1,A=2*C,D=6] 
* Loop 71: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 72: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 73: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=B+1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 74: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=B+1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 75: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,E=1,D=6,B=0] 
* Loop 76: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,E=1,D=6,B=0] 
* Loop 77: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,A>=1,E=1,D=6,B=0] 
* Loop 78: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=A,E=1,D=6,B=0] 
* Loop 79: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=A,E=1,D=6,B=0] 
* Loop 80: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [A>=1,D=1,C=6,B=0] 
* Loop 81: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,A=2*C,E=1,D=6,B=0] 
* Loop 82: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,A=2*C,E=1,D=6,B=0] 
* Loop 83: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=A+1,E=1,D=6,C=0,B=0] 
* Loop 84: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=A+1,E=1,D=6,C=0,B=0] 
* Loop 85: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_up_0>=1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 86: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_up_0>=1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 87: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [0>=V_up_0+1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 88: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [0>=V_up_0+1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 89: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* Loop 90: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* Loop 91: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 92: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 93: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 94: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 95: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,B=6] 
* Loop 96: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,B=6] 
* Loop 97: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 98: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 99: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 100: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 101: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,B=6] 
* Loop 102: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,B=6] 
* Loop 103: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 104: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 105: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 106: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 107: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,B=6,V_up_0=0] 
* Loop 108: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,B=6,V_up_0=0] 
* Loop 109: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,V_up_0>=1,V_up_0+V_up_0'=1,2*V_p_0=V_p_0',B'=6,B=6] 
* Loop 110: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,0>=V_up_0+1,V_up_0+V_up_0'=1,2*V_p_0=V_p_0',B'=6,B=6] 
* Loop 111: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 112: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 113: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 114: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 115: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 116: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 117: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 118: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 119: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 120: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 121: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,2*V_p_0=V_p_0',B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 122: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 123: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 124: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 125: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 126: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 

### Ranking functions of CR eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 
* RF of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]: [V_n/2-V_p_0,V_n/2+V_up_0/3-2/3*V_p_0-1,V_n/3+V_up_0/3-2/3*V_p_0]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 


### Resulting Chains:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],82]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],81]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],76]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],75]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],68]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],67]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],56]
* [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],55]
* [68]
* [67]
* [65]
* [62]
* [61]


### Specialization of cost equations eval_sipmamergesort_init_bb14_in/3 
* CE 21 is refined into CE [128] 
* CE 20 is refined into CE [129] 


#### Refined cost equations eval_sipmamergesort_init_bb14_in/3 
* CE 128: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) = 0
     [V_i_5>=V_n+1,V_i_5>=1,B=7] 
* CE 129: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D)
     [V_n>=V_i_5,V_i_5>=1,V_i_5+1=C,D=7,B=7] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb14_in/3 
* CEs [129] --> Loop 127 
* CEs [128] --> Loop 128 

#### Loops of eval_sipmamergesort_init_bb14_in/3 
* Loop 127: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B)->  eval_sipmamergesort_init_bb14_in(V_n,V_i_5',B')
                  [V_n>=V_i_5,V_i_5>=1,V_i_5+1=V_i_5',B'=7,B=7] 
* Loop 128: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) [V_i_5>=V_n+1,V_i_5>=1,B=7] 

### Ranking functions of CR eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* RF of phase [127]: [V_n-V_i_5+1]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* Partial RF of phase [127]:
  - RF of loop [127:1]:
    V_n-V_i_5+1


### Resulting Chains:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* [[127],128]
* [128]


### Specialization of cost equations eval_sipmamergesort_init_bb13_in/3 
* CE 11 is refined into CE [130] 
* CE 10 is refined into CE [131] 
* CE 9 is refined into CE [132,133] 


#### Refined cost equations eval_sipmamergesort_init_bb13_in/3 
* CE 130: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 0
     [V_52>=1] 
* CE 131: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 0
     [0>=V_52+1] 
* CE 132: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D):[[127],128]
     [V_n>=1,D=7,C=1,V_52=0] 
* CE 133: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D):[128]
     [0>=V_n,D=7,C=1,V_52=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb13_in/3 
* CEs [130] --> Loop 129 
* CEs [131] --> Loop 130 
* CEs [132] --> Loop 131 
* CEs [133] --> Loop 132 

#### Loops of eval_sipmamergesort_init_bb13_in/3 
* Loop 129: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [V_52>=1] 
* Loop 130: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [0>=V_52+1] 
* Loop 131: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [V_n>=1,V_52=0] 
* Loop 132: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [0>=V_n,V_52=0] 

### Ranking functions of CR eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 

#### Partial ranking functions of CR eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 


### Resulting Chains:eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 
* [132]
* [131]
* [130]
* [129]


### Specialization of cost equations eval_sipmamergesort_init_start/2 
* CE 2 is refined into CE [134,135,136,137,138,139,140,141,142,143,144,145,146] 


#### Refined cost equations eval_sipmamergesort_init_start/2 
* CE 134: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],82]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[129]
     [V_n>=4,G=1,F=1,E=6,D=1,C=1] 
* CE 135: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],81]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[129]
     [V_n>=4,G=1,F=1,E=6,D=1,C=1] 
* CE 136: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],76]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[129]
     [V_n>=3,G=1,F=1,E=6,D=1,C=1] 
* CE 137: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],75]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[129]
     [V_n>=3,G=1,F=1,E=6,D=1,C=1] 
* CE 138: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],68]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[131]
     [V_n>=8,G=0,F=0,E=6,D=1,C=1] 
* CE 139: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],67]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[131]
     [V_n>=8,G=0,F=0,E=6,D=1,C=1] 
* CE 140: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],56]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[131]
     [V_n>=5,G=0,F=0,E=6,D=1,C=1] 
* CE 141: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],55]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[131]
     [V_n>=5,G=0,F=0,E=6,D=1,C=1] 
* CE 142: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[68]+ eval_sipmamergesort_init_bb13_in(I,J,B):[131]
     [J=0,I=2,H=0,G=2,F=6,E=1,D=1,C=2,V_n=2] 
* CE 143: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[67]+ eval_sipmamergesort_init_bb13_in(I,J,B):[131]
     [J=0,I=2,H=0,G=2,F=6,E=1,D=1,C=2,V_n=2] 
* CE 144: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[65]+ eval_sipmamergesort_init_bb13_in(I,J,B):[131]
     [J=0,I=1,H=0,G=1,F=6,E=1,D=1,C=1,V_n=1] 
* CE 145: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[62]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [0>=V_n,G=0,F=0,E=6,D=1,C=1] 
* CE 146: eval_sipmamergesort_init_start(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[61]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [0>=V_n,G=0,F=0,E=6,D=1,C=1] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_start/2 
* CEs [139] --> Loop 133 
* CEs [138] --> Loop 134 
* CEs [141] --> Loop 135 
* CEs [140] --> Loop 136 
* CEs [135] --> Loop 137 
* CEs [134] --> Loop 138 
* CEs [137] --> Loop 139 
* CEs [136] --> Loop 140 
* CEs [146] --> Loop 141 
* CEs [145] --> Loop 142 
* CEs [143] --> Loop 143 
* CEs [142] --> Loop 144 
* CEs [144] --> Loop 145 

#### Loops of eval_sipmamergesort_init_start/2 
* Loop 133: eval_sipmamergesort_init_start(V_n,B) [V_n>=8] 
* Loop 134: eval_sipmamergesort_init_start(V_n,B) [V_n>=8] 
* Loop 135: eval_sipmamergesort_init_start(V_n,B) [V_n>=5] 
* Loop 136: eval_sipmamergesort_init_start(V_n,B) [V_n>=5] 
* Loop 137: eval_sipmamergesort_init_start(V_n,B) [V_n>=4] 
* Loop 138: eval_sipmamergesort_init_start(V_n,B) [V_n>=4] 
* Loop 139: eval_sipmamergesort_init_start(V_n,B) [V_n>=3] 
* Loop 140: eval_sipmamergesort_init_start(V_n,B) [V_n>=3] 
* Loop 141: eval_sipmamergesort_init_start(V_n,B) [0>=V_n] 
* Loop 142: eval_sipmamergesort_init_start(V_n,B) [0>=V_n] 
* Loop 143: eval_sipmamergesort_init_start(V_n,B) [V_n=2] 
* Loop 144: eval_sipmamergesort_init_start(V_n,B) [V_n=2] 
* Loop 145: eval_sipmamergesort_init_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_sipmamergesort_init_start(V_n,B) 

#### Partial ranking functions of CR eval_sipmamergesort_init_start(V_n,B) 


### Resulting Chains:eval_sipmamergesort_init_start(V_n,B) 
* [145]
* [144]
* [143]
* [142]
* [141]
* [140]
* [139]
* [138]
* [137]
* [136]
* [135]
* [134]
* [133]


Computing Bounds
=====================================

#### Cost of loops [29,30] 

 * loop 29:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1
 * loop 30:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1
#### Cost of phase [29,30]:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1*it(29)+1*it(30)+0
  Such that:it(29) =< V_r_1
it(29)+it(30) =< V_r_1+V_q_1-1
it(29)+it(30) =< V_r_1+V_q_1-V_r_1'-V_q_1'
it(29) =< V_r_1-V_r_1'
it(30) =< V_q_1
it(30) =< V_q_1-V_q_1'
it(29)+it(30) >= V_r_1+V_q_1-V_r_1'-V_q_1'
it(29) >= V_r_1-V_r_1'
it(30) >= V_q_1-V_q_1'

#### Cost of phase [29,30]:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1*it(29)+1*it(30)+0
  Such that:it(29) =< V_r_1
it(29)+it(30) =< V_r_1+V_q_1-1
it(29)+it(30) =< V_r_1+V_q_1-V_r_1'-V_q_1'
it(29) =< V_r_1-V_r_1'
it(30) =< V_q_1
it(30) =< V_q_1-V_q_1'
it(29)+it(30) >= V_r_1+V_q_1-V_r_1'-V_q_1'
it(29) >= V_r_1-V_r_1'
it(30) >= V_q_1-V_q_1'

#### Cost of chains of eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J):
* Chain [[29,30],32]: 1*it(29)+1*it(30)+0
  Such that:it(29) =< V_r_1
it(30) =< V_q_1-I
it(29) >= V_r_1
it(30) >= V_q_1-I

  with precondition: [B=2,H=0,J=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_6>=0,V_r_1>=1,I>=1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_q_1>=I,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [[29,30],31]: 1*it(29)+1*it(30)+0
  Such that:it(29) =< V_r_1-H
it(30) =< V_q_1
it(29) >= V_r_1-J
it(30) >= V_q_1

  with precondition: [B=2,I=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,H=J,V_6>=0,V_q_1>=1,H>=1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_r_1>=H,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [32]: 0
  with precondition: [B=2,C=V_n,D=V_up_0,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_1=J,0>=V_r_1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_6+V_r_1>=0,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [31]: 0
  with precondition: [B=2,C=V_n,D=V_up_0,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_1=J,0>=V_q_1,V_6>=0,V_p_0>=V_r_1,V_p_0>=V_q_1,V_6+V_r_1>=0,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 


#### Cost of loops [33] 

 * loop 33:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb7_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [33]:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb7_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',B',C',D',E',F',G',H',I',J',K')] 
1*it(33)+0
  Such that:it(33) =< V_r_3
it(33) =< V_r_3-V_r_3'
it(33) >= V_r_3-V_r_3'

#### Cost of chains of eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< V_r_3
it(33) >= V_r_3

  with precondition: [B=3,J=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_q_1=K,V_r_3>=1] 

* Chain [34]: 0
  with precondition: [B=3,C=V_n,D=V_up_0,E=V_p_0,F=V_m_0,G=V_6,H=V_r_1,V_q_1=I,V_r_3=J,V_q_1=K,0>=V_r_3] 


#### Cost of loops [35] 

 * loop 35:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb9_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',V_q_3',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [35]:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb9_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',V_q_3',B',C',D',E',F',G',H',I',J',K')] 
1*it(35)+0
  Such that:it(35) =< V_q_3
it(35) =< V_q_3-V_q_3'
it(35) >= V_q_3-V_q_3'

#### Cost of chains of eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K):
* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< V_q_3
it(35) >= V_q_3

  with precondition: [B=4,K=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_3=J,V_q_3>=1] 

* Chain [36]: 0
  with precondition: [B=4,C=V_n,D=V_up_0,E=V_p_0,F=V_m_0,G=V_6,H=V_r_1,I=V_q_1,J=V_r_3,V_q_3=K,0>=V_q_3] 


#### Cost of loops [51,52] 

 * loop 51:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4
 * loop 52:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4
#### Cost of phase [51,52]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
8*it(51)+0
#### Cost of loops [49,50] 

 * loop 49:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(7)+1*s(9)+1*s(8)+4
  Such that:s(5) =< V_p_0'
s(7)+s(8) =< s(5)
s(9) =< s(5)
s(6) >= V_m_0/2-V_m_0'/2
s(7)+s(8) >= s(6)
s(9) >= s(6)

 * loop 50:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(17)+1*s(15)+1*s(16)+4
  Such that:s(13) =< V_p_0'
s(15)+s(16) =< s(13)
s(17) =< s(13)
s(14) >= V_p_0
s(17) >= s(14)
s(15)+s(16) >= s(14)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of loops [49,50] 

 * loop 49:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(7)+1*s(9)+1*s(8)+4
  Such that:s(5) =< V_p_0'
s(7)+s(8) =< s(5)
s(9) =< s(5)
s(6) >= V_m_0/2-V_m_0'/2
s(7)+s(8) >= s(6)
s(9) >= s(6)

 * loop 50:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(17)+1*s(15)+1*s(16)+4
  Such that:s(13) =< V_p_0'
s(15)+s(16) =< s(13)
s(17) =< s(13)
s(14) >= V_p_0
s(17) >= s(14)
s(15)+s(16) >= s(14)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [] 
4*it(49)+4*it(50)+3*it([41])+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(35)+1*s(36)+1*s(37)+0
  Such that:it([41]) =< 1
s(35) =< V_n-3*V_p_0
s(36)+s(37) =< V_p_0
aux(15) =< V_p_0/2-1/2
it(49)+it(50) =< V_m_0/2-1
aux(23) =< -V_p_0+V_m_0
aux(24) =< -V_p_0+V_m_0/2
it(50)+it([41])+s(22) =< aux(23)
it([41])+s(22)+s(27) =< aux(23)
it(49)+it(50) =< aux(24)
it(49)+it(50) =< aux(15)+aux(24)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
it([41]) >= 1
aux(21) >= V_p_0+1
s(21)+s(26)+s(36)+s(37) >= V_m_0/2
aux(25) >= V_p_0
aux(25) >= aux(25)
s(36)+s(37) >= aux(25)
aux(18) >= aux(25)
s(35) >= it([41])*aux(21)
s(36)+s(37) >= it([41])*aux(18)
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:it(49)+it(50) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
it(49)+it(50) =< V_m_0/2-1
it(49)+it(50) =< V_m_0/2-V_m_0'/2
aux(7) =< -V_p_0+V_m_0
aux(8) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(9) =< -V_p_0+V_m_0/2
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(21)+s(26) >= V_m_0/2-V_m_0'/2
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of loops [49,50] 

 * loop 49:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(7)+1*s(9)+1*s(8)+4
  Such that:s(5) =< V_p_0'
s(7)+s(8) =< s(5)
s(9) =< s(5)
s(6) >= V_m_0/2-V_m_0'/2
s(7)+s(8) >= s(6)
s(9) >= s(6)

 * loop 50:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
1*s(17)+1*s(15)+1*s(16)+4
  Such that:s(13) =< V_p_0'
s(15)+s(16) =< s(13)
s(17) =< s(13)
s(14) >= V_p_0
s(17) >= s(14)
s(15)+s(16) >= s(14)

#### Cost of phase [49,50]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [] 
4*it(49)+4*it(50)+3*it([37])+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(44)+1*s(45)+1*s(46)+0
  Such that:it([37]) =< 1
s(44)+s(46) =< V_n-3*V_p_0
s(45) =< V_p_0
aux(30) =< V_p_0/2-1/2
it(49)+it(50) =< V_m_0/2-1
aux(38) =< -V_p_0+V_m_0
aux(39) =< -V_p_0+V_m_0/2
it(50)+it([37])+s(22) =< aux(38)
it([37])+s(22)+s(27) =< aux(38)
it(49)+it(50) =< aux(39)
it(49)+it(50) =< aux(30)+aux(39)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
it([37]) >= 1
aux(36) >= V_p_0+1
s(21)+s(26)+s(45) >= V_m_0/2
aux(40) >= V_p_0
aux(40) >= aux(40)
s(45) >= aux(40)
aux(33) >= aux(40)
s(44)+s(46) >= it([37])*aux(36)
s(45) >= it([37])*aux(33)
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

#### Cost of chains of eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K):
* Chain [[51,52]]...: 8*it(51)+0
  with precondition: [V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0>=V_p_0,B=5] 

* Chain [[49,50],44]: 4*it(49)+4*it(50)+1*s(1)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+3
  Such that:it(50)+it(49) =< V_m_0/2-1
aux(9) =< V_m_0/2-I
it(49) =< V_m_0/2-I/2
s(1) =< I
aux(10) =< V_m_0-I
it(50)+s(22) =< aux(10)
s(22)+s(27) =< aux(10)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(1) >= F
s(23) >= s(26)
s(24)+s(25) >= s(26)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,V_p_0=F,V_p_0=I,V_p_0>=1,V_m_0>=3*V_p_0,V_n>=V_m_0] 

* Chain [[49,50],43]: 4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(28)+1*s(29)+1*s(30)+3
  Such that:aux(8) =< V_m_0-F
aux(7) =< V_m_0-F/2
aux(11) =< F/2
aux(13) =< V_m_0/2-F/2
it(49)+it(50) =< aux(13)
s(29)+s(30) =< aux(11)
s(28) =< aux(11)
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
aux(12) >= F/2
s(28) >= aux(12)
s(29)+s(30) >= aux(12)
s(23) >= s(26)
s(24)+s(25) >= s(26)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,2*V_p_0=F,I>=1,V_m_0>=4*V_p_0,V_n>=V_m_0,V_p_0>=I] 

* Chain [[49,50],42]: 4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(31)+3
  Such that:aux(7) =< V_m_0-E
aux(8) =< V_m_0-I
it(50)+it(49) =< V_m_0/2-1
aux(9) =< V_m_0/2-E
it(49) =< V_m_0/2-I/2
s(31) =< I
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
it(49)+it(50) =< aux(9)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
s(31) >= I
s(23) >= s(26)
s(24)+s(25) >= s(26)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,F=I,F>=1,V_n>=V_m_0,V_p_0>=F+1,V_m_0>=2*V_p_0+F] 

* Chain [[49,50],41]: 4*it(49)+4*it(50)+3*it([41])+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(35)+1*s(36)+1*s(37)+0
  Such that:it([41]) =< 1
s(35) =< V_n-3*V_p_0
s(36)+s(37) =< V_p_0
aux(15) =< V_p_0/2-1/2
it(49)+it(50) =< V_m_0/2-1
aux(23) =< -V_p_0+V_m_0
aux(24) =< -V_p_0+V_m_0/2
it(50)+it([41])+s(22) =< aux(23)
it([41])+s(22)+s(27) =< aux(23)
it(49)+it(50) =< aux(24)
it(49)+it(50) =< aux(15)+aux(24)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
it([41]) >= 1
aux(21) >= V_p_0+1
s(21)+s(26)+s(36)+s(37) >= V_m_0/2
aux(25) >= V_p_0
aux(25) >= aux(25)
s(36)+s(37) >= aux(25)
aux(18) >= aux(25)
s(35) >= it([41])*aux(21)
s(36)+s(37) >= it([41])*aux(18)
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,I>=1,F>=V_p_0+1,V_n>=V_m_0,2*V_p_0>=F+1,V_p_0>=I,V_m_0>=2*V_p_0+F] 

* Chain [[49,50],38]: 4*it(49)+4*it(50)+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(38)+1*s(39)+1*s(40)+3
  Such that:aux(8) =< V_m_0-F
aux(7) =< V_m_0-F/2
aux(26) =< F/2
aux(28) =< V_m_0/2-F/2
it(49)+it(50) =< aux(28)
s(38)+s(40) =< aux(26)
s(39) =< aux(26)
it(50)+s(22) =< aux(7)
s(22)+s(27) =< aux(7)
it(50)+s(22) =< aux(8)
s(22)+s(27) =< aux(8)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
aux(27) >= F/2
s(38)+s(40) >= aux(27)
s(39) >= aux(27)
s(23) >= s(26)
s(24)+s(25) >= s(26)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,2*V_p_0=F,H>=1,V_m_0>=4*V_p_0,V_n>=V_m_0,V_p_0>=H] 

* Chain [[49,50],37]: 4*it(49)+4*it(50)+3*it([37])+1*s(18)+1*s(19)+1*s(20)+1*s(23)+1*s(24)+1*s(25)+1*s(44)+1*s(45)+1*s(46)+0
  Such that:it([37]) =< 1
s(44)+s(46) =< V_n-3*V_p_0
s(45) =< V_p_0
aux(30) =< V_p_0/2-1/2
it(49)+it(50) =< V_m_0/2-1
aux(38) =< -V_p_0+V_m_0
aux(39) =< -V_p_0+V_m_0/2
it(50)+it([37])+s(22) =< aux(38)
it([37])+s(22)+s(27) =< aux(38)
it(49)+it(50) =< aux(39)
it(49)+it(50) =< aux(30)+aux(39)
s(24)+s(25) =< s(27)
s(23) =< s(27)
s(18)+s(20) =< s(22)
s(19) =< s(22)
it([37]) >= 1
aux(36) >= V_p_0+1
s(21)+s(26)+s(45) >= V_m_0/2
aux(40) >= V_p_0
aux(40) >= aux(40)
s(45) >= aux(40)
aux(33) >= aux(40)
s(44)+s(46) >= it([37])*aux(36)
s(45) >= it([37])*aux(33)
s(23) >= s(26)
s(24)+s(25) >= s(26)
s(18)+s(20) >= s(21)
s(19) >= s(21)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,H>=1,V_n>=V_m_0,2*V_p_0>=F+1,V_m_0>=2*V_p_0+F,F>=V_p_0+H] 

* Chain [54,[51,52]]...: 8*it(51)+4
  with precondition: [B=5,V_n=V_m_0,0>=V_p_0+1,V_p_0>=V_n+1] 

* Chain [53,[51,52]]...: 8*it(51)+4
  with precondition: [B=5,V_n=V_m_0,0>=V_p_0+1,V_p_0>=V_n+1] 

* Chain [48]: 3
  with precondition: [V_n=0,V_p_0=0,V_m_0=0,B=5,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,D=V_up_0] 

* Chain [47]: 3
  with precondition: [V_n=0,V_p_0=0,V_m_0=0,B=5,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,D=V_up_0] 

* Chain [46]: 3
  with precondition: [V_p_0=0,B=5,E=0,G=0,H=0,J=0,V_m_0=V_n,D=V_up_0,V_m_0=C,V_m_0=F,V_m_0=I,V_m_0=K,0>=V_m_0+1] 

* Chain [45]: 3
  with precondition: [V_p_0=0,B=5,E=0,G=0,H=0,J=0,V_m_0=V_n,D=V_up_0,V_m_0=C,V_m_0=F,V_m_0=I,V_m_0=K,0>=V_m_0+1] 

* Chain [44]: 1*s(1)+3
  Such that:s(1) =< V_p_0
s(1) >= V_m_0

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_m_0=V_p_0,V_n=C,V_m_0=E,V_m_0=F,V_m_0=I,V_m_0>=1,V_n>=V_m_0] 

* Chain [43]: 1*s(28)+1*s(29)+1*s(30)+3
  Such that:aux(11) =< V_p_0
s(29)+s(30) =< aux(11)
s(28) =< aux(11)
aux(12) >= V_m_0/2
s(28) >= aux(12)
s(29)+s(30) >= aux(12)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_m_0=2*V_p_0,V_m_0=2*E,D=V_up_0,V_n=C,V_m_0=F,I>=1,V_m_0>=2*I,V_n>=V_m_0] 

* Chain [42]: 1*s(31)+3
  Such that:s(31) =< V_m_0
s(31) >= V_m_0

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,V_m_0=I,V_m_0>=1,V_n>=V_m_0,V_p_0>=V_m_0+1] 

* Chain [41]: 1*s(32)+1*s(33)+1*s(34)+3
  Such that:s(32) =< -V_p_0+V_m_0
s(33)+s(34) =< V_p_0
s(32) >= -V_p_0+V_m_0
s(33)+s(34) >= V_p_0

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,I>=1,V_m_0>=V_p_0+1,V_n>=V_m_0,2*V_p_0>=V_m_0+1,V_p_0>=I] 

* Chain [40]: 3
  with precondition: [B=5,G=0,H=0,J=0,D=V_up_0,V_n=V_m_0,V_n=C,V_p_0=E,V_n=F,V_n=I,V_n=K,0>=V_n,V_p_0>=1] 

* Chain [39]: 3
  with precondition: [B=5,G=0,H=0,J=0,D=V_up_0,V_n=V_m_0,V_n=C,V_p_0=E,V_n=F,V_n=I,V_n=K,0>=V_n,V_p_0>=1] 

* Chain [38]: 1*s(38)+1*s(39)+1*s(40)+3
  Such that:aux(26) =< V_p_0
s(38)+s(40) =< aux(26)
s(39) =< aux(26)
aux(27) >= V_p_0
s(38)+s(40) >= aux(27)
s(39) >= aux(27)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_m_0=2*V_p_0,V_m_0=2*E,D=V_up_0,V_n=C,V_m_0=F,H>=1,V_m_0>=2*H,V_n>=V_m_0] 

* Chain [37]: 1*s(41)+1*s(42)+1*s(43)+3
  Such that:s(41)+s(43) =< -V_p_0+V_m_0
s(42) =< V_p_0
s(41)+s(43) >= -V_p_0+V_m_0
s(42) >= V_p_0

  with precondition: [B=5,G=0,I=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,H>=1,V_n>=V_m_0,2*V_p_0>=V_m_0+1,V_m_0>=V_p_0+H] 


#### Cost of loops [109,111,112,113,114,115,121,122,123,124,125,126] 

 * loop 109:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(68)+4*s(67)+1*s(70)+1*s(73)+1*s(74)+1*s(75)+1*s(76)+1*s(77)+1*s(78)+5
  Such that:s(66) =< V_n-V_p_0'/2
s(67)+s(68) =< V_n/2-1
s(69) =< V_n/2-V_p_0'/2
s(70) =< V_p_0'/2
s(68)+s(71) =< s(66)
s(71)+s(72) =< s(66)
s(67)+s(68) =< s(69)
s(73)+s(74) =< s(72)
s(75) =< s(72)
s(76)+s(77) =< s(71)
s(78) =< s(71)
s(70) >= V_p_0'/2

 * loop 111:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(97)+4*s(96)+1*s(100)+1*s(103)+1*s(104)+1*s(105)+1*s(106)+1*s(107)+1*s(108)+5
  Such that:s(94) =< V_n'-1
s(95) =< V_n'-V_p_0'/2
s(96)+s(97) =< V_n'/2-1
s(98) =< V_n'/2-V_p_0'/2
s(99) =< V_n'
s(94)+s(100) =< s(99)
s(96) =< s(99)
s(97)+s(101) =< s(95)
s(101)+s(102) =< s(95)
s(97)+s(101) =< s(94)
s(101)+s(102) =< s(94)
s(96)+s(97) =< s(98)
s(103)+s(104) =< s(102)
s(105) =< s(102)
s(106)+s(107) =< s(101)
s(108) =< s(101)
s(100) >= 1

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(131)+1*s(133)+1*s(132)+1*s(138)+4*s(136)+4*s(135)+1*s(145)+1*s(146)+1*s(147)+1*s(149)+1*s(150)+1*s(151)+2
  Such that:s(131) =< 1
s(132)+s(133) =< V_n'-3/2*V_p_0'
s(134) =< V_n'-V_p_0'/2
s(135)+s(136) =< V_n'/2-1
s(137) =< V_n'/2-V_p_0'/2
s(138) =< V_p_0'/2
s(139) =< V_p_0'/4-1/2
s(131)+s(135)+s(142) =< s(134)
s(131)+s(142)+s(143) =< s(134)
s(135)+s(136) =< s(137)
s(135)+s(136) =< s(139)+s(137)
s(145)+s(146) =< s(143)
s(147) =< s(143)
s(149)+s(150) =< s(142)
s(151) =< s(142)
s(131) >= 1
s(140) >= V_p_0
s(141) >= V_p_0+1
s(140) >= s(140)
s(138) >= s(140)
s(144) >= s(140)
s(132)+s(133) >= s(131)*s(141)
s(138) >= s(131)*s(144)
s(147) >= s(148)
s(145)+s(146) >= s(148)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(174)+1*s(175)+1*s(181)+1*s(180)+4*s(178)+4*s(177)+1*s(188)+1*s(189)+1*s(190)+1*s(192)+1*s(193)+1*s(194)+2
  Such that:s(174) =< 1
s(175) =< V_n'-3/2*V_p_0'
s(176) =< V_n'-V_p_0'/2
s(177)+s(178) =< V_n'/2-1
s(179) =< V_n'/2-V_p_0'/2
s(180)+s(181) =< V_p_0'/2
s(182) =< V_p_0'/4-1/2
s(174)+s(177)+s(185) =< s(176)
s(174)+s(185)+s(186) =< s(176)
s(177)+s(178) =< s(179)
s(177)+s(178) =< s(182)+s(179)
s(188)+s(189) =< s(186)
s(190) =< s(186)
s(192)+s(193) =< s(185)
s(194) =< s(185)
s(174) >= 1
s(183) >= V_p_0
s(184) >= V_p_0+1
s(183) >= s(183)
s(180)+s(181) >= s(183)
s(187) >= s(183)
s(175) >= s(174)*s(184)
s(180)+s(181) >= s(174)*s(187)
s(190) >= s(191)
s(188)+s(189) >= s(191)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(219)+4*s(220)+1*s(221)+1*s(222)+1*s(223)+1*s(226)+1*s(227)+1*s(228)+1*s(229)+1*s(230)+1*s(231)+5
  Such that:s(214) =< V_n'-V_p_0'
s(215) =< V_n'-V_p_0'/2
s(216) =< V_n'/2-V_p_0'/2
s(217) =< V_p_0'/2
s(219)+s(220) =< s(216)
s(221)+s(222) =< s(217)
s(223) =< s(217)
s(220)+s(224) =< s(215)
s(224)+s(225) =< s(215)
s(220)+s(224) =< s(214)
s(224)+s(225) =< s(214)
s(226)+s(227) =< s(225)
s(228) =< s(225)
s(229)+s(230) =< s(224)
s(231) =< s(224)
s(218) >= V_p_0'/2
s(221)+s(222) >= s(218)
s(223) >= s(218)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(256)+4*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(263)+1*s(264)+1*s(265)+1*s(266)+1*s(267)+1*s(268)+5
  Such that:s(251) =< V_n'-V_p_0'
s(252) =< V_n'-V_p_0'/2
s(253) =< V_n'/2-V_p_0'/2
s(254) =< V_p_0'/2
s(256)+s(257) =< s(253)
s(258)+s(259) =< s(254)
s(260) =< s(254)
s(257)+s(261) =< s(252)
s(261)+s(262) =< s(252)
s(257)+s(261) =< s(251)
s(261)+s(262) =< s(251)
s(263)+s(264) =< s(262)
s(265) =< s(262)
s(266)+s(267) =< s(261)
s(268) =< s(261)
s(255) >= V_p_0'/2
s(260) >= s(255)
s(258)+s(259) >= s(255)

 * loop 121:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(285)+4*s(284)+1*s(287)+1*s(290)+1*s(291)+1*s(292)+1*s(293)+1*s(294)+1*s(295)+5
  Such that:s(283) =< V_n-V_p_0
s(284)+s(285) =< V_n/2-1
s(286) =< V_n/2-V_p_0
s(287) =< V_p_0
s(285)+s(288) =< s(283)
s(288)+s(289) =< s(283)
s(284)+s(285) =< s(286)
s(290)+s(291) =< s(289)
s(292) =< s(289)
s(293)+s(294) =< s(288)
s(295) =< s(288)
s(287) >= V_p_0'/2

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(314)+4*s(313)+1*s(317)+1*s(320)+1*s(321)+1*s(322)+1*s(323)+1*s(324)+1*s(325)+5
  Such that:s(311) =< V_n'-1
s(312) =< V_n'-V_p_0'/2
s(313)+s(314) =< V_n'/2-1
s(315) =< V_n'/2-V_p_0'/2
s(316) =< V_n'
s(311)+s(317) =< s(316)
s(313) =< s(316)
s(314)+s(318) =< s(312)
s(318)+s(319) =< s(312)
s(314)+s(318) =< s(311)
s(318)+s(319) =< s(311)
s(313)+s(314) =< s(315)
s(320)+s(321) =< s(319)
s(322) =< s(319)
s(323)+s(324) =< s(318)
s(325) =< s(318)
s(317) >= 1

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(348)+1*s(350)+1*s(349)+1*s(355)+4*s(353)+4*s(352)+1*s(362)+1*s(363)+1*s(364)+1*s(366)+1*s(367)+1*s(368)+2
  Such that:s(348) =< 1
s(349)+s(350) =< V_n'-3/2*V_p_0'
s(351) =< V_n'-V_p_0'/2
s(352)+s(353) =< V_n'/2-1
s(354) =< V_n'/2-V_p_0'/2
s(355) =< V_p_0'/2
s(356) =< V_p_0'/4-1/2
s(348)+s(352)+s(359) =< s(351)
s(348)+s(359)+s(360) =< s(351)
s(352)+s(353) =< s(354)
s(352)+s(353) =< s(356)+s(354)
s(362)+s(363) =< s(360)
s(364) =< s(360)
s(366)+s(367) =< s(359)
s(368) =< s(359)
s(348) >= 1
s(357) >= V_p_0
s(358) >= V_p_0+1
s(357) >= s(357)
s(355) >= s(357)
s(361) >= s(357)
s(349)+s(350) >= s(348)*s(358)
s(355) >= s(348)*s(361)
s(364) >= s(365)
s(362)+s(363) >= s(365)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(391)+1*s(392)+1*s(398)+1*s(397)+4*s(395)+4*s(394)+1*s(405)+1*s(406)+1*s(407)+1*s(409)+1*s(410)+1*s(411)+2
  Such that:s(391) =< 1
s(392) =< V_n'-3/2*V_p_0'
s(393) =< V_n'-V_p_0'/2
s(394)+s(395) =< V_n'/2-1
s(396) =< V_n'/2-V_p_0'/2
s(397)+s(398) =< V_p_0'/2
s(399) =< V_p_0'/4-1/2
s(391)+s(394)+s(402) =< s(393)
s(391)+s(402)+s(403) =< s(393)
s(394)+s(395) =< s(396)
s(394)+s(395) =< s(399)+s(396)
s(405)+s(406) =< s(403)
s(407) =< s(403)
s(409)+s(410) =< s(402)
s(411) =< s(402)
s(391) >= 1
s(400) >= V_p_0
s(401) >= V_p_0+1
s(400) >= s(400)
s(397)+s(398) >= s(400)
s(404) >= s(400)
s(392) >= s(391)*s(401)
s(397)+s(398) >= s(391)*s(404)
s(407) >= s(408)
s(405)+s(406) >= s(408)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(436)+4*s(437)+1*s(438)+1*s(439)+1*s(440)+1*s(443)+1*s(444)+1*s(445)+1*s(446)+1*s(447)+1*s(448)+5
  Such that:s(431) =< V_n'-V_p_0'
s(432) =< V_n'-V_p_0'/2
s(433) =< V_n'/2-V_p_0'/2
s(434) =< V_p_0'/2
s(436)+s(437) =< s(433)
s(438)+s(439) =< s(434)
s(440) =< s(434)
s(437)+s(441) =< s(432)
s(441)+s(442) =< s(432)
s(437)+s(441) =< s(431)
s(441)+s(442) =< s(431)
s(443)+s(444) =< s(442)
s(445) =< s(442)
s(446)+s(447) =< s(441)
s(448) =< s(441)
s(435) >= V_p_0'/2
s(438)+s(439) >= s(435)
s(440) >= s(435)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(473)+4*s(474)+1*s(475)+1*s(476)+1*s(477)+1*s(480)+1*s(481)+1*s(482)+1*s(483)+1*s(484)+1*s(485)+5
  Such that:s(468) =< V_n'-V_p_0'
s(469) =< V_n'-V_p_0'/2
s(470) =< V_n'/2-V_p_0'/2
s(471) =< V_p_0'/2
s(473)+s(474) =< s(470)
s(475)+s(476) =< s(471)
s(477) =< s(471)
s(474)+s(478) =< s(469)
s(478)+s(479) =< s(469)
s(474)+s(478) =< s(468)
s(478)+s(479) =< s(468)
s(480)+s(481) =< s(479)
s(482) =< s(479)
s(483)+s(484) =< s(478)
s(485) =< s(478)
s(472) >= V_p_0'/2
s(477) >= s(472)
s(475)+s(476) >= s(472)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of loops [109,111,112,113,114,115,121,122,123,124,125,126] 

 * loop 109:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(68)+4*s(67)+1*s(70)+1*s(73)+1*s(74)+1*s(75)+1*s(76)+1*s(77)+1*s(78)+5
  Such that:s(66) =< V_n-V_p_0'/2
s(67)+s(68) =< V_n/2-1
s(69) =< V_n/2-V_p_0'/2
s(70) =< V_p_0'/2
s(68)+s(71) =< s(66)
s(71)+s(72) =< s(66)
s(67)+s(68) =< s(69)
s(73)+s(74) =< s(72)
s(75) =< s(72)
s(76)+s(77) =< s(71)
s(78) =< s(71)
s(70) >= V_p_0'/2

 * loop 111:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(97)+4*s(96)+1*s(100)+1*s(103)+1*s(104)+1*s(105)+1*s(106)+1*s(107)+1*s(108)+5
  Such that:s(94) =< V_n'-1
s(95) =< V_n'-V_p_0'/2
s(96)+s(97) =< V_n'/2-1
s(98) =< V_n'/2-V_p_0'/2
s(99) =< V_n'
s(94)+s(100) =< s(99)
s(96) =< s(99)
s(97)+s(101) =< s(95)
s(101)+s(102) =< s(95)
s(97)+s(101) =< s(94)
s(101)+s(102) =< s(94)
s(96)+s(97) =< s(98)
s(103)+s(104) =< s(102)
s(105) =< s(102)
s(106)+s(107) =< s(101)
s(108) =< s(101)
s(100) >= 1

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(131)+1*s(133)+1*s(132)+1*s(138)+4*s(136)+4*s(135)+1*s(145)+1*s(146)+1*s(147)+1*s(149)+1*s(150)+1*s(151)+2
  Such that:s(131) =< 1
s(132)+s(133) =< V_n'-3/2*V_p_0'
s(134) =< V_n'-V_p_0'/2
s(135)+s(136) =< V_n'/2-1
s(137) =< V_n'/2-V_p_0'/2
s(138) =< V_p_0'/2
s(139) =< V_p_0'/4-1/2
s(131)+s(135)+s(142) =< s(134)
s(131)+s(142)+s(143) =< s(134)
s(135)+s(136) =< s(137)
s(135)+s(136) =< s(139)+s(137)
s(145)+s(146) =< s(143)
s(147) =< s(143)
s(149)+s(150) =< s(142)
s(151) =< s(142)
s(131) >= 1
s(140) >= V_p_0
s(141) >= V_p_0+1
s(140) >= s(140)
s(138) >= s(140)
s(144) >= s(140)
s(132)+s(133) >= s(131)*s(141)
s(138) >= s(131)*s(144)
s(147) >= s(148)
s(145)+s(146) >= s(148)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(174)+1*s(175)+1*s(181)+1*s(180)+4*s(178)+4*s(177)+1*s(188)+1*s(189)+1*s(190)+1*s(192)+1*s(193)+1*s(194)+2
  Such that:s(174) =< 1
s(175) =< V_n'-3/2*V_p_0'
s(176) =< V_n'-V_p_0'/2
s(177)+s(178) =< V_n'/2-1
s(179) =< V_n'/2-V_p_0'/2
s(180)+s(181) =< V_p_0'/2
s(182) =< V_p_0'/4-1/2
s(174)+s(177)+s(185) =< s(176)
s(174)+s(185)+s(186) =< s(176)
s(177)+s(178) =< s(179)
s(177)+s(178) =< s(182)+s(179)
s(188)+s(189) =< s(186)
s(190) =< s(186)
s(192)+s(193) =< s(185)
s(194) =< s(185)
s(174) >= 1
s(183) >= V_p_0
s(184) >= V_p_0+1
s(183) >= s(183)
s(180)+s(181) >= s(183)
s(187) >= s(183)
s(175) >= s(174)*s(184)
s(180)+s(181) >= s(174)*s(187)
s(190) >= s(191)
s(188)+s(189) >= s(191)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(219)+4*s(220)+1*s(221)+1*s(222)+1*s(223)+1*s(226)+1*s(227)+1*s(228)+1*s(229)+1*s(230)+1*s(231)+5
  Such that:s(214) =< V_n'-V_p_0'
s(215) =< V_n'-V_p_0'/2
s(216) =< V_n'/2-V_p_0'/2
s(217) =< V_p_0'/2
s(219)+s(220) =< s(216)
s(221)+s(222) =< s(217)
s(223) =< s(217)
s(220)+s(224) =< s(215)
s(224)+s(225) =< s(215)
s(220)+s(224) =< s(214)
s(224)+s(225) =< s(214)
s(226)+s(227) =< s(225)
s(228) =< s(225)
s(229)+s(230) =< s(224)
s(231) =< s(224)
s(218) >= V_p_0'/2
s(221)+s(222) >= s(218)
s(223) >= s(218)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(256)+4*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(263)+1*s(264)+1*s(265)+1*s(266)+1*s(267)+1*s(268)+5
  Such that:s(251) =< V_n'-V_p_0'
s(252) =< V_n'-V_p_0'/2
s(253) =< V_n'/2-V_p_0'/2
s(254) =< V_p_0'/2
s(256)+s(257) =< s(253)
s(258)+s(259) =< s(254)
s(260) =< s(254)
s(257)+s(261) =< s(252)
s(261)+s(262) =< s(252)
s(257)+s(261) =< s(251)
s(261)+s(262) =< s(251)
s(263)+s(264) =< s(262)
s(265) =< s(262)
s(266)+s(267) =< s(261)
s(268) =< s(261)
s(255) >= V_p_0'/2
s(260) >= s(255)
s(258)+s(259) >= s(255)

 * loop 121:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(285)+4*s(284)+1*s(287)+1*s(290)+1*s(291)+1*s(292)+1*s(293)+1*s(294)+1*s(295)+5
  Such that:s(283) =< V_n-V_p_0
s(284)+s(285) =< V_n/2-1
s(286) =< V_n/2-V_p_0
s(287) =< V_p_0
s(285)+s(288) =< s(283)
s(288)+s(289) =< s(283)
s(284)+s(285) =< s(286)
s(290)+s(291) =< s(289)
s(292) =< s(289)
s(293)+s(294) =< s(288)
s(295) =< s(288)
s(287) >= V_p_0'/2

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(314)+4*s(313)+1*s(317)+1*s(320)+1*s(321)+1*s(322)+1*s(323)+1*s(324)+1*s(325)+5
  Such that:s(311) =< V_n'-1
s(312) =< V_n'-V_p_0'/2
s(313)+s(314) =< V_n'/2-1
s(315) =< V_n'/2-V_p_0'/2
s(316) =< V_n'
s(311)+s(317) =< s(316)
s(313) =< s(316)
s(314)+s(318) =< s(312)
s(318)+s(319) =< s(312)
s(314)+s(318) =< s(311)
s(318)+s(319) =< s(311)
s(313)+s(314) =< s(315)
s(320)+s(321) =< s(319)
s(322) =< s(319)
s(323)+s(324) =< s(318)
s(325) =< s(318)
s(317) >= 1

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(348)+1*s(350)+1*s(349)+1*s(355)+4*s(353)+4*s(352)+1*s(362)+1*s(363)+1*s(364)+1*s(366)+1*s(367)+1*s(368)+2
  Such that:s(348) =< 1
s(349)+s(350) =< V_n'-3/2*V_p_0'
s(351) =< V_n'-V_p_0'/2
s(352)+s(353) =< V_n'/2-1
s(354) =< V_n'/2-V_p_0'/2
s(355) =< V_p_0'/2
s(356) =< V_p_0'/4-1/2
s(348)+s(352)+s(359) =< s(351)
s(348)+s(359)+s(360) =< s(351)
s(352)+s(353) =< s(354)
s(352)+s(353) =< s(356)+s(354)
s(362)+s(363) =< s(360)
s(364) =< s(360)
s(366)+s(367) =< s(359)
s(368) =< s(359)
s(348) >= 1
s(357) >= V_p_0
s(358) >= V_p_0+1
s(357) >= s(357)
s(355) >= s(357)
s(361) >= s(357)
s(349)+s(350) >= s(348)*s(358)
s(355) >= s(348)*s(361)
s(364) >= s(365)
s(362)+s(363) >= s(365)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(391)+1*s(392)+1*s(398)+1*s(397)+4*s(395)+4*s(394)+1*s(405)+1*s(406)+1*s(407)+1*s(409)+1*s(410)+1*s(411)+2
  Such that:s(391) =< 1
s(392) =< V_n'-3/2*V_p_0'
s(393) =< V_n'-V_p_0'/2
s(394)+s(395) =< V_n'/2-1
s(396) =< V_n'/2-V_p_0'/2
s(397)+s(398) =< V_p_0'/2
s(399) =< V_p_0'/4-1/2
s(391)+s(394)+s(402) =< s(393)
s(391)+s(402)+s(403) =< s(393)
s(394)+s(395) =< s(396)
s(394)+s(395) =< s(399)+s(396)
s(405)+s(406) =< s(403)
s(407) =< s(403)
s(409)+s(410) =< s(402)
s(411) =< s(402)
s(391) >= 1
s(400) >= V_p_0
s(401) >= V_p_0+1
s(400) >= s(400)
s(397)+s(398) >= s(400)
s(404) >= s(400)
s(392) >= s(391)*s(401)
s(397)+s(398) >= s(391)*s(404)
s(407) >= s(408)
s(405)+s(406) >= s(408)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(436)+4*s(437)+1*s(438)+1*s(439)+1*s(440)+1*s(443)+1*s(444)+1*s(445)+1*s(446)+1*s(447)+1*s(448)+5
  Such that:s(431) =< V_n'-V_p_0'
s(432) =< V_n'-V_p_0'/2
s(433) =< V_n'/2-V_p_0'/2
s(434) =< V_p_0'/2
s(436)+s(437) =< s(433)
s(438)+s(439) =< s(434)
s(440) =< s(434)
s(437)+s(441) =< s(432)
s(441)+s(442) =< s(432)
s(437)+s(441) =< s(431)
s(441)+s(442) =< s(431)
s(443)+s(444) =< s(442)
s(445) =< s(442)
s(446)+s(447) =< s(441)
s(448) =< s(441)
s(435) >= V_p_0'/2
s(438)+s(439) >= s(435)
s(440) >= s(435)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(473)+4*s(474)+1*s(475)+1*s(476)+1*s(477)+1*s(480)+1*s(481)+1*s(482)+1*s(483)+1*s(484)+1*s(485)+5
  Such that:s(468) =< V_n'-V_p_0'
s(469) =< V_n'-V_p_0'/2
s(470) =< V_n'/2-V_p_0'/2
s(471) =< V_p_0'/2
s(473)+s(474) =< s(470)
s(475)+s(476) =< s(471)
s(477) =< s(471)
s(474)+s(478) =< s(469)
s(478)+s(479) =< s(469)
s(474)+s(478) =< s(468)
s(478)+s(479) =< s(468)
s(480)+s(481) =< s(479)
s(482) =< s(479)
s(483)+s(484) =< s(478)
s(485) =< s(478)
s(472) >= V_p_0'/2
s(477) >= s(472)
s(475)+s(476) >= s(472)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([76])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(698)+1*s(699)+1*s(700)+0
  Such that:it([76]) =< 1
s(699)+s(700) =< V_n-1
s(698) =< V_n-V_up_0-V_p_0
aux(142) =< V_n-3*V_p_0
aux(123) =< V_n-V_p_0
aux(128) =< V_n/2-1/2
aux(126) =< V_n/3-1
aux(146) =< V_n/3-1/3
aux(276) =< V_n/2-1
aux(277) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(278) =< V_n/2-V_p_0
aux(279) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(280) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(281) =< V_n/3-V_p_0/2-5/6
aux(282) =< V_n/6+1/3
aux(283) =< 2/3*V_n-V_p_0
aux(284) =< 2/3*V_n-V_p_0-2/3
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(277)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(141)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
aux(156)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
aux(204)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(278)
aux(218)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(278)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(278)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(278)
s(632)+s(651) =< aux(279)
aux(141)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
aux(156)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
aux(204)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(280)
aux(218)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(280)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(281)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(281)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(283)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(283)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(284)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(284)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(284)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(284)
aux(148) =< aux(128)
aux(134) =< aux(123)
aux(169) =< aux(278)*2
aux(151) =< aux(128)* (1/2)-1/2
aux(136) =< aux(278)
aux(135) =< aux(276)
aux(157) =< aux(142)
aux(133) =< aux(276)*2+2
aux(132) =< aux(276)*2+1
aux(119) =< aux(276)* (2/3)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(276)+aux(278)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(146)+aux(284)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(276)+aux(278)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(282)+aux(277)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(146)+aux(284)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(126)+aux(283)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(276)+aux(278)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(146)+aux(284)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(146)+aux(284)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(126)+aux(283)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
s(632)+s(651) =< aux(282)+aux(279)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(119)+aux(280)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(282)+aux(281)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(282)+aux(281)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
s(688) =< it(126)*aux(148)
aux(242) =< it(126)*aux(169)
s(686) =< it(126)*aux(134)
s(670) =< it(125)*aux(148)
aux(233) =< it(125)*aux(169)
s(668) =< it(125)*aux(134)
s(651) =< it(124)*aux(151)
s(637)+s(638) =< it(124)*aux(148)
s(650) =< it(124)*aux(136)
s(639)+s(640) =< it(124)*aux(135)
s(653) =< it(124)*aux(134)
s(636) =< it(124)*aux(157)
s(635) =< aux(218)
s(632) =< it(123)*aux(151)
s(619) =< it(123)*aux(148)
s(631) =< it(123)*aux(136)
s(620)+s(621) =< it(123)*aux(135)
s(634) =< it(123)*aux(134)
s(617)+s(618) =< it(123)*aux(157)
s(616) =< aux(204)
s(612) =< it(122)*aux(136)
s(601)+s(602) =< it(122)*aux(135)
s(614) =< it(122)*aux(134)
s(615) =< it(122)*aux(133)
s(613) =< it(122)*aux(132)
s(590) =< it(121)*aux(148)
s(599) =< it(121)*aux(136)
s(588)+s(589) =< it(121)*aux(135)
s(600) =< it(121)*aux(134)
s(586) =< it(115)*aux(148)
aux(180) =< it(115)*aux(169)
s(584) =< it(115)*aux(134)
s(568) =< it(114)*aux(148)
aux(171) =< it(114)*aux(169)
s(566) =< it(114)*aux(134)
s(549) =< it(113)*aux(151)
s(535)+s(536) =< it(113)*aux(148)
s(548) =< it(113)*aux(136)
s(537)+s(538) =< it(113)*aux(135)
s(551) =< it(113)*aux(134)
s(534) =< it(113)*aux(157)
s(533) =< aux(156)
s(530) =< it(112)*aux(151)
s(517) =< it(112)*aux(148)
s(529) =< it(112)*aux(136)
s(518)+s(519) =< it(112)*aux(135)
s(532) =< it(112)*aux(134)
s(515)+s(516) =< it(112)*aux(142)
s(514) =< aux(141)
s(510) =< it(111)*aux(136)
s(499)+s(500) =< it(111)*aux(135)
s(512) =< it(111)*aux(134)
s(513) =< it(111)*aux(133)
s(511) =< it(111)*aux(132)
s(488) =< it(109)*aux(128)
s(497) =< it(109)*aux(278)
s(486)+s(487) =< it(109)*aux(276)
s(498) =< it(109)*aux(123)
s(689) =< aux(242)* (1/2)
s(671) =< aux(233)* (1/2)
s(587) =< aux(180)* (1/2)
s(569) =< aux(171)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(242)
s(683)+s(684) =< aux(242)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(233)
s(665)+s(666) =< aux(233)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(180)
s(581)+s(582) =< aux(180)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(171)
s(563)+s(564) =< aux(171)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
it([76]) >= 1
aux(245) >= V_n/2+1/2
aux(285) >= V_p_0
aux(285) >= aux(285)
s(140) >= aux(285)
aux(116) >= s(140)
s(698) >= it([76])*aux(245)
s(699)+s(700) >= it([76])*aux(116)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of loops [109,111,112,113,114,115,121,122,123,124,125,126] 

 * loop 109:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(68)+4*s(67)+1*s(70)+1*s(73)+1*s(74)+1*s(75)+1*s(76)+1*s(77)+1*s(78)+5
  Such that:s(66) =< V_n-V_p_0'/2
s(67)+s(68) =< V_n/2-1
s(69) =< V_n/2-V_p_0'/2
s(70) =< V_p_0'/2
s(68)+s(71) =< s(66)
s(71)+s(72) =< s(66)
s(67)+s(68) =< s(69)
s(73)+s(74) =< s(72)
s(75) =< s(72)
s(76)+s(77) =< s(71)
s(78) =< s(71)
s(70) >= V_p_0'/2

 * loop 111:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(97)+4*s(96)+1*s(100)+1*s(103)+1*s(104)+1*s(105)+1*s(106)+1*s(107)+1*s(108)+5
  Such that:s(94) =< V_n'-1
s(95) =< V_n'-V_p_0'/2
s(96)+s(97) =< V_n'/2-1
s(98) =< V_n'/2-V_p_0'/2
s(99) =< V_n'
s(94)+s(100) =< s(99)
s(96) =< s(99)
s(97)+s(101) =< s(95)
s(101)+s(102) =< s(95)
s(97)+s(101) =< s(94)
s(101)+s(102) =< s(94)
s(96)+s(97) =< s(98)
s(103)+s(104) =< s(102)
s(105) =< s(102)
s(106)+s(107) =< s(101)
s(108) =< s(101)
s(100) >= 1

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(131)+1*s(133)+1*s(132)+1*s(138)+4*s(136)+4*s(135)+1*s(145)+1*s(146)+1*s(147)+1*s(149)+1*s(150)+1*s(151)+2
  Such that:s(131) =< 1
s(132)+s(133) =< V_n'-3/2*V_p_0'
s(134) =< V_n'-V_p_0'/2
s(135)+s(136) =< V_n'/2-1
s(137) =< V_n'/2-V_p_0'/2
s(138) =< V_p_0'/2
s(139) =< V_p_0'/4-1/2
s(131)+s(135)+s(142) =< s(134)
s(131)+s(142)+s(143) =< s(134)
s(135)+s(136) =< s(137)
s(135)+s(136) =< s(139)+s(137)
s(145)+s(146) =< s(143)
s(147) =< s(143)
s(149)+s(150) =< s(142)
s(151) =< s(142)
s(131) >= 1
s(140) >= V_p_0
s(141) >= V_p_0+1
s(140) >= s(140)
s(138) >= s(140)
s(144) >= s(140)
s(132)+s(133) >= s(131)*s(141)
s(138) >= s(131)*s(144)
s(147) >= s(148)
s(145)+s(146) >= s(148)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(174)+1*s(175)+1*s(181)+1*s(180)+4*s(178)+4*s(177)+1*s(188)+1*s(189)+1*s(190)+1*s(192)+1*s(193)+1*s(194)+2
  Such that:s(174) =< 1
s(175) =< V_n'-3/2*V_p_0'
s(176) =< V_n'-V_p_0'/2
s(177)+s(178) =< V_n'/2-1
s(179) =< V_n'/2-V_p_0'/2
s(180)+s(181) =< V_p_0'/2
s(182) =< V_p_0'/4-1/2
s(174)+s(177)+s(185) =< s(176)
s(174)+s(185)+s(186) =< s(176)
s(177)+s(178) =< s(179)
s(177)+s(178) =< s(182)+s(179)
s(188)+s(189) =< s(186)
s(190) =< s(186)
s(192)+s(193) =< s(185)
s(194) =< s(185)
s(174) >= 1
s(183) >= V_p_0
s(184) >= V_p_0+1
s(183) >= s(183)
s(180)+s(181) >= s(183)
s(187) >= s(183)
s(175) >= s(174)*s(184)
s(180)+s(181) >= s(174)*s(187)
s(190) >= s(191)
s(188)+s(189) >= s(191)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(219)+4*s(220)+1*s(221)+1*s(222)+1*s(223)+1*s(226)+1*s(227)+1*s(228)+1*s(229)+1*s(230)+1*s(231)+5
  Such that:s(214) =< V_n'-V_p_0'
s(215) =< V_n'-V_p_0'/2
s(216) =< V_n'/2-V_p_0'/2
s(217) =< V_p_0'/2
s(219)+s(220) =< s(216)
s(221)+s(222) =< s(217)
s(223) =< s(217)
s(220)+s(224) =< s(215)
s(224)+s(225) =< s(215)
s(220)+s(224) =< s(214)
s(224)+s(225) =< s(214)
s(226)+s(227) =< s(225)
s(228) =< s(225)
s(229)+s(230) =< s(224)
s(231) =< s(224)
s(218) >= V_p_0'/2
s(221)+s(222) >= s(218)
s(223) >= s(218)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(256)+4*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(263)+1*s(264)+1*s(265)+1*s(266)+1*s(267)+1*s(268)+5
  Such that:s(251) =< V_n'-V_p_0'
s(252) =< V_n'-V_p_0'/2
s(253) =< V_n'/2-V_p_0'/2
s(254) =< V_p_0'/2
s(256)+s(257) =< s(253)
s(258)+s(259) =< s(254)
s(260) =< s(254)
s(257)+s(261) =< s(252)
s(261)+s(262) =< s(252)
s(257)+s(261) =< s(251)
s(261)+s(262) =< s(251)
s(263)+s(264) =< s(262)
s(265) =< s(262)
s(266)+s(267) =< s(261)
s(268) =< s(261)
s(255) >= V_p_0'/2
s(260) >= s(255)
s(258)+s(259) >= s(255)

 * loop 121:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(285)+4*s(284)+1*s(287)+1*s(290)+1*s(291)+1*s(292)+1*s(293)+1*s(294)+1*s(295)+5
  Such that:s(283) =< V_n-V_p_0
s(284)+s(285) =< V_n/2-1
s(286) =< V_n/2-V_p_0
s(287) =< V_p_0
s(285)+s(288) =< s(283)
s(288)+s(289) =< s(283)
s(284)+s(285) =< s(286)
s(290)+s(291) =< s(289)
s(292) =< s(289)
s(293)+s(294) =< s(288)
s(295) =< s(288)
s(287) >= V_p_0'/2

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(314)+4*s(313)+1*s(317)+1*s(320)+1*s(321)+1*s(322)+1*s(323)+1*s(324)+1*s(325)+5
  Such that:s(311) =< V_n'-1
s(312) =< V_n'-V_p_0'/2
s(313)+s(314) =< V_n'/2-1
s(315) =< V_n'/2-V_p_0'/2
s(316) =< V_n'
s(311)+s(317) =< s(316)
s(313) =< s(316)
s(314)+s(318) =< s(312)
s(318)+s(319) =< s(312)
s(314)+s(318) =< s(311)
s(318)+s(319) =< s(311)
s(313)+s(314) =< s(315)
s(320)+s(321) =< s(319)
s(322) =< s(319)
s(323)+s(324) =< s(318)
s(325) =< s(318)
s(317) >= 1

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(348)+1*s(350)+1*s(349)+1*s(355)+4*s(353)+4*s(352)+1*s(362)+1*s(363)+1*s(364)+1*s(366)+1*s(367)+1*s(368)+2
  Such that:s(348) =< 1
s(349)+s(350) =< V_n'-3/2*V_p_0'
s(351) =< V_n'-V_p_0'/2
s(352)+s(353) =< V_n'/2-1
s(354) =< V_n'/2-V_p_0'/2
s(355) =< V_p_0'/2
s(356) =< V_p_0'/4-1/2
s(348)+s(352)+s(359) =< s(351)
s(348)+s(359)+s(360) =< s(351)
s(352)+s(353) =< s(354)
s(352)+s(353) =< s(356)+s(354)
s(362)+s(363) =< s(360)
s(364) =< s(360)
s(366)+s(367) =< s(359)
s(368) =< s(359)
s(348) >= 1
s(357) >= V_p_0
s(358) >= V_p_0+1
s(357) >= s(357)
s(355) >= s(357)
s(361) >= s(357)
s(349)+s(350) >= s(348)*s(358)
s(355) >= s(348)*s(361)
s(364) >= s(365)
s(362)+s(363) >= s(365)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(391)+1*s(392)+1*s(398)+1*s(397)+4*s(395)+4*s(394)+1*s(405)+1*s(406)+1*s(407)+1*s(409)+1*s(410)+1*s(411)+2
  Such that:s(391) =< 1
s(392) =< V_n'-3/2*V_p_0'
s(393) =< V_n'-V_p_0'/2
s(394)+s(395) =< V_n'/2-1
s(396) =< V_n'/2-V_p_0'/2
s(397)+s(398) =< V_p_0'/2
s(399) =< V_p_0'/4-1/2
s(391)+s(394)+s(402) =< s(393)
s(391)+s(402)+s(403) =< s(393)
s(394)+s(395) =< s(396)
s(394)+s(395) =< s(399)+s(396)
s(405)+s(406) =< s(403)
s(407) =< s(403)
s(409)+s(410) =< s(402)
s(411) =< s(402)
s(391) >= 1
s(400) >= V_p_0
s(401) >= V_p_0+1
s(400) >= s(400)
s(397)+s(398) >= s(400)
s(404) >= s(400)
s(392) >= s(391)*s(401)
s(397)+s(398) >= s(391)*s(404)
s(407) >= s(408)
s(405)+s(406) >= s(408)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(436)+4*s(437)+1*s(438)+1*s(439)+1*s(440)+1*s(443)+1*s(444)+1*s(445)+1*s(446)+1*s(447)+1*s(448)+5
  Such that:s(431) =< V_n'-V_p_0'
s(432) =< V_n'-V_p_0'/2
s(433) =< V_n'/2-V_p_0'/2
s(434) =< V_p_0'/2
s(436)+s(437) =< s(433)
s(438)+s(439) =< s(434)
s(440) =< s(434)
s(437)+s(441) =< s(432)
s(441)+s(442) =< s(432)
s(437)+s(441) =< s(431)
s(441)+s(442) =< s(431)
s(443)+s(444) =< s(442)
s(445) =< s(442)
s(446)+s(447) =< s(441)
s(448) =< s(441)
s(435) >= V_p_0'/2
s(438)+s(439) >= s(435)
s(440) >= s(435)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(473)+4*s(474)+1*s(475)+1*s(476)+1*s(477)+1*s(480)+1*s(481)+1*s(482)+1*s(483)+1*s(484)+1*s(485)+5
  Such that:s(468) =< V_n'-V_p_0'
s(469) =< V_n'-V_p_0'/2
s(470) =< V_n'/2-V_p_0'/2
s(471) =< V_p_0'/2
s(473)+s(474) =< s(470)
s(475)+s(476) =< s(471)
s(477) =< s(471)
s(474)+s(478) =< s(469)
s(478)+s(479) =< s(469)
s(474)+s(478) =< s(468)
s(478)+s(479) =< s(468)
s(480)+s(481) =< s(479)
s(482) =< s(479)
s(483)+s(484) =< s(478)
s(485) =< s(478)
s(472) >= V_p_0'/2
s(477) >= s(472)
s(475)+s(476) >= s(472)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([75])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(704)+1*s(705)+1*s(706)+0
  Such that:it([75]) =< 1
s(706) =< V_n-1
s(704)+s(705) =< V_n-V_up_0-V_p_0
aux(312) =< V_n-3*V_p_0
aux(293) =< V_n-V_p_0
aux(298) =< V_n/2-1/2
aux(296) =< V_n/3-1
aux(316) =< V_n/3-1/3
aux(446) =< V_n/2-1
aux(447) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(448) =< V_n/2-V_p_0
aux(449) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(450) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(451) =< V_n/3-V_p_0/2-5/6
aux(452) =< V_n/6+1/3
aux(453) =< 2/3*V_n-V_p_0
aux(454) =< 2/3*V_n-V_p_0-2/3
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(447)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(311)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
aux(326)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
aux(374)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(448)
aux(388)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(448)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(448)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(448)
s(632)+s(651) =< aux(449)
aux(311)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
aux(326)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
aux(374)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(450)
aux(388)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(450)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(451)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(451)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(453)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(453)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(454)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(454)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(454)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(454)
aux(318) =< aux(298)
aux(304) =< aux(293)
aux(339) =< aux(448)*2
aux(321) =< aux(298)* (1/2)-1/2
aux(306) =< aux(448)
aux(305) =< aux(446)
aux(327) =< aux(312)
aux(303) =< aux(446)*2+2
aux(302) =< aux(446)*2+1
aux(289) =< aux(446)* (2/3)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(446)+aux(448)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(316)+aux(454)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(446)+aux(448)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(452)+aux(447)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(316)+aux(454)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(296)+aux(453)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(446)+aux(448)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(316)+aux(454)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(316)+aux(454)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(296)+aux(453)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
s(632)+s(651) =< aux(452)+aux(449)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(289)+aux(450)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(452)+aux(451)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(452)+aux(451)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
s(688) =< it(126)*aux(318)
aux(412) =< it(126)*aux(339)
s(686) =< it(126)*aux(304)
s(670) =< it(125)*aux(318)
aux(403) =< it(125)*aux(339)
s(668) =< it(125)*aux(304)
s(651) =< it(124)*aux(321)
s(637)+s(638) =< it(124)*aux(318)
s(650) =< it(124)*aux(306)
s(639)+s(640) =< it(124)*aux(305)
s(653) =< it(124)*aux(304)
s(636) =< it(124)*aux(327)
s(635) =< aux(388)
s(632) =< it(123)*aux(321)
s(619) =< it(123)*aux(318)
s(631) =< it(123)*aux(306)
s(620)+s(621) =< it(123)*aux(305)
s(634) =< it(123)*aux(304)
s(617)+s(618) =< it(123)*aux(327)
s(616) =< aux(374)
s(612) =< it(122)*aux(306)
s(601)+s(602) =< it(122)*aux(305)
s(614) =< it(122)*aux(304)
s(615) =< it(122)*aux(303)
s(613) =< it(122)*aux(302)
s(590) =< it(121)*aux(318)
s(599) =< it(121)*aux(306)
s(588)+s(589) =< it(121)*aux(305)
s(600) =< it(121)*aux(304)
s(586) =< it(115)*aux(318)
aux(350) =< it(115)*aux(339)
s(584) =< it(115)*aux(304)
s(568) =< it(114)*aux(318)
aux(341) =< it(114)*aux(339)
s(566) =< it(114)*aux(304)
s(549) =< it(113)*aux(321)
s(535)+s(536) =< it(113)*aux(318)
s(548) =< it(113)*aux(306)
s(537)+s(538) =< it(113)*aux(305)
s(551) =< it(113)*aux(304)
s(534) =< it(113)*aux(327)
s(533) =< aux(326)
s(530) =< it(112)*aux(321)
s(517) =< it(112)*aux(318)
s(529) =< it(112)*aux(306)
s(518)+s(519) =< it(112)*aux(305)
s(532) =< it(112)*aux(304)
s(515)+s(516) =< it(112)*aux(312)
s(514) =< aux(311)
s(510) =< it(111)*aux(306)
s(499)+s(500) =< it(111)*aux(305)
s(512) =< it(111)*aux(304)
s(513) =< it(111)*aux(303)
s(511) =< it(111)*aux(302)
s(488) =< it(109)*aux(298)
s(497) =< it(109)*aux(448)
s(486)+s(487) =< it(109)*aux(446)
s(498) =< it(109)*aux(293)
s(689) =< aux(412)* (1/2)
s(671) =< aux(403)* (1/2)
s(587) =< aux(350)* (1/2)
s(569) =< aux(341)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(412)
s(683)+s(684) =< aux(412)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(403)
s(665)+s(666) =< aux(403)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(350)
s(581)+s(582) =< aux(350)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(341)
s(563)+s(564) =< aux(341)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
it([75]) >= 1
aux(415) >= V_n/2+1/2
aux(455) >= V_p_0
aux(455) >= aux(455)
s(140) >= aux(455)
aux(286) >= s(140)
s(704)+s(705) >= it([75])*aux(415)
s(706) >= it([75])*aux(286)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of loops [109,111,112,113,114,115,121,122,123,124,125,126] 

 * loop 109:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(68)+4*s(67)+1*s(70)+1*s(73)+1*s(74)+1*s(75)+1*s(76)+1*s(77)+1*s(78)+5
  Such that:s(66) =< V_n-V_p_0'/2
s(67)+s(68) =< V_n/2-1
s(69) =< V_n/2-V_p_0'/2
s(70) =< V_p_0'/2
s(68)+s(71) =< s(66)
s(71)+s(72) =< s(66)
s(67)+s(68) =< s(69)
s(73)+s(74) =< s(72)
s(75) =< s(72)
s(76)+s(77) =< s(71)
s(78) =< s(71)
s(70) >= V_p_0'/2

 * loop 111:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(97)+4*s(96)+1*s(100)+1*s(103)+1*s(104)+1*s(105)+1*s(106)+1*s(107)+1*s(108)+5
  Such that:s(94) =< V_n'-1
s(95) =< V_n'-V_p_0'/2
s(96)+s(97) =< V_n'/2-1
s(98) =< V_n'/2-V_p_0'/2
s(99) =< V_n'
s(94)+s(100) =< s(99)
s(96) =< s(99)
s(97)+s(101) =< s(95)
s(101)+s(102) =< s(95)
s(97)+s(101) =< s(94)
s(101)+s(102) =< s(94)
s(96)+s(97) =< s(98)
s(103)+s(104) =< s(102)
s(105) =< s(102)
s(106)+s(107) =< s(101)
s(108) =< s(101)
s(100) >= 1

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(131)+1*s(133)+1*s(132)+1*s(138)+4*s(136)+4*s(135)+1*s(145)+1*s(146)+1*s(147)+1*s(149)+1*s(150)+1*s(151)+2
  Such that:s(131) =< 1
s(132)+s(133) =< V_n'-3/2*V_p_0'
s(134) =< V_n'-V_p_0'/2
s(135)+s(136) =< V_n'/2-1
s(137) =< V_n'/2-V_p_0'/2
s(138) =< V_p_0'/2
s(139) =< V_p_0'/4-1/2
s(131)+s(135)+s(142) =< s(134)
s(131)+s(142)+s(143) =< s(134)
s(135)+s(136) =< s(137)
s(135)+s(136) =< s(139)+s(137)
s(145)+s(146) =< s(143)
s(147) =< s(143)
s(149)+s(150) =< s(142)
s(151) =< s(142)
s(131) >= 1
s(140) >= V_p_0
s(141) >= V_p_0+1
s(140) >= s(140)
s(138) >= s(140)
s(144) >= s(140)
s(132)+s(133) >= s(131)*s(141)
s(138) >= s(131)*s(144)
s(147) >= s(148)
s(145)+s(146) >= s(148)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(174)+1*s(175)+1*s(181)+1*s(180)+4*s(178)+4*s(177)+1*s(188)+1*s(189)+1*s(190)+1*s(192)+1*s(193)+1*s(194)+2
  Such that:s(174) =< 1
s(175) =< V_n'-3/2*V_p_0'
s(176) =< V_n'-V_p_0'/2
s(177)+s(178) =< V_n'/2-1
s(179) =< V_n'/2-V_p_0'/2
s(180)+s(181) =< V_p_0'/2
s(182) =< V_p_0'/4-1/2
s(174)+s(177)+s(185) =< s(176)
s(174)+s(185)+s(186) =< s(176)
s(177)+s(178) =< s(179)
s(177)+s(178) =< s(182)+s(179)
s(188)+s(189) =< s(186)
s(190) =< s(186)
s(192)+s(193) =< s(185)
s(194) =< s(185)
s(174) >= 1
s(183) >= V_p_0
s(184) >= V_p_0+1
s(183) >= s(183)
s(180)+s(181) >= s(183)
s(187) >= s(183)
s(175) >= s(174)*s(184)
s(180)+s(181) >= s(174)*s(187)
s(190) >= s(191)
s(188)+s(189) >= s(191)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(219)+4*s(220)+1*s(221)+1*s(222)+1*s(223)+1*s(226)+1*s(227)+1*s(228)+1*s(229)+1*s(230)+1*s(231)+5
  Such that:s(214) =< V_n'-V_p_0'
s(215) =< V_n'-V_p_0'/2
s(216) =< V_n'/2-V_p_0'/2
s(217) =< V_p_0'/2
s(219)+s(220) =< s(216)
s(221)+s(222) =< s(217)
s(223) =< s(217)
s(220)+s(224) =< s(215)
s(224)+s(225) =< s(215)
s(220)+s(224) =< s(214)
s(224)+s(225) =< s(214)
s(226)+s(227) =< s(225)
s(228) =< s(225)
s(229)+s(230) =< s(224)
s(231) =< s(224)
s(218) >= V_p_0'/2
s(221)+s(222) >= s(218)
s(223) >= s(218)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(256)+4*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(263)+1*s(264)+1*s(265)+1*s(266)+1*s(267)+1*s(268)+5
  Such that:s(251) =< V_n'-V_p_0'
s(252) =< V_n'-V_p_0'/2
s(253) =< V_n'/2-V_p_0'/2
s(254) =< V_p_0'/2
s(256)+s(257) =< s(253)
s(258)+s(259) =< s(254)
s(260) =< s(254)
s(257)+s(261) =< s(252)
s(261)+s(262) =< s(252)
s(257)+s(261) =< s(251)
s(261)+s(262) =< s(251)
s(263)+s(264) =< s(262)
s(265) =< s(262)
s(266)+s(267) =< s(261)
s(268) =< s(261)
s(255) >= V_p_0'/2
s(260) >= s(255)
s(258)+s(259) >= s(255)

 * loop 121:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(285)+4*s(284)+1*s(287)+1*s(290)+1*s(291)+1*s(292)+1*s(293)+1*s(294)+1*s(295)+5
  Such that:s(283) =< V_n-V_p_0
s(284)+s(285) =< V_n/2-1
s(286) =< V_n/2-V_p_0
s(287) =< V_p_0
s(285)+s(288) =< s(283)
s(288)+s(289) =< s(283)
s(284)+s(285) =< s(286)
s(290)+s(291) =< s(289)
s(292) =< s(289)
s(293)+s(294) =< s(288)
s(295) =< s(288)
s(287) >= V_p_0'/2

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(314)+4*s(313)+1*s(317)+1*s(320)+1*s(321)+1*s(322)+1*s(323)+1*s(324)+1*s(325)+5
  Such that:s(311) =< V_n'-1
s(312) =< V_n'-V_p_0'/2
s(313)+s(314) =< V_n'/2-1
s(315) =< V_n'/2-V_p_0'/2
s(316) =< V_n'
s(311)+s(317) =< s(316)
s(313) =< s(316)
s(314)+s(318) =< s(312)
s(318)+s(319) =< s(312)
s(314)+s(318) =< s(311)
s(318)+s(319) =< s(311)
s(313)+s(314) =< s(315)
s(320)+s(321) =< s(319)
s(322) =< s(319)
s(323)+s(324) =< s(318)
s(325) =< s(318)
s(317) >= 1

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(348)+1*s(350)+1*s(349)+1*s(355)+4*s(353)+4*s(352)+1*s(362)+1*s(363)+1*s(364)+1*s(366)+1*s(367)+1*s(368)+2
  Such that:s(348) =< 1
s(349)+s(350) =< V_n'-3/2*V_p_0'
s(351) =< V_n'-V_p_0'/2
s(352)+s(353) =< V_n'/2-1
s(354) =< V_n'/2-V_p_0'/2
s(355) =< V_p_0'/2
s(356) =< V_p_0'/4-1/2
s(348)+s(352)+s(359) =< s(351)
s(348)+s(359)+s(360) =< s(351)
s(352)+s(353) =< s(354)
s(352)+s(353) =< s(356)+s(354)
s(362)+s(363) =< s(360)
s(364) =< s(360)
s(366)+s(367) =< s(359)
s(368) =< s(359)
s(348) >= 1
s(357) >= V_p_0
s(358) >= V_p_0+1
s(357) >= s(357)
s(355) >= s(357)
s(361) >= s(357)
s(349)+s(350) >= s(348)*s(358)
s(355) >= s(348)*s(361)
s(364) >= s(365)
s(362)+s(363) >= s(365)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(391)+1*s(392)+1*s(398)+1*s(397)+4*s(395)+4*s(394)+1*s(405)+1*s(406)+1*s(407)+1*s(409)+1*s(410)+1*s(411)+2
  Such that:s(391) =< 1
s(392) =< V_n'-3/2*V_p_0'
s(393) =< V_n'-V_p_0'/2
s(394)+s(395) =< V_n'/2-1
s(396) =< V_n'/2-V_p_0'/2
s(397)+s(398) =< V_p_0'/2
s(399) =< V_p_0'/4-1/2
s(391)+s(394)+s(402) =< s(393)
s(391)+s(402)+s(403) =< s(393)
s(394)+s(395) =< s(396)
s(394)+s(395) =< s(399)+s(396)
s(405)+s(406) =< s(403)
s(407) =< s(403)
s(409)+s(410) =< s(402)
s(411) =< s(402)
s(391) >= 1
s(400) >= V_p_0
s(401) >= V_p_0+1
s(400) >= s(400)
s(397)+s(398) >= s(400)
s(404) >= s(400)
s(392) >= s(391)*s(401)
s(397)+s(398) >= s(391)*s(404)
s(407) >= s(408)
s(405)+s(406) >= s(408)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(436)+4*s(437)+1*s(438)+1*s(439)+1*s(440)+1*s(443)+1*s(444)+1*s(445)+1*s(446)+1*s(447)+1*s(448)+5
  Such that:s(431) =< V_n'-V_p_0'
s(432) =< V_n'-V_p_0'/2
s(433) =< V_n'/2-V_p_0'/2
s(434) =< V_p_0'/2
s(436)+s(437) =< s(433)
s(438)+s(439) =< s(434)
s(440) =< s(434)
s(437)+s(441) =< s(432)
s(441)+s(442) =< s(432)
s(437)+s(441) =< s(431)
s(441)+s(442) =< s(431)
s(443)+s(444) =< s(442)
s(445) =< s(442)
s(446)+s(447) =< s(441)
s(448) =< s(441)
s(435) >= V_p_0'/2
s(438)+s(439) >= s(435)
s(440) >= s(435)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(473)+4*s(474)+1*s(475)+1*s(476)+1*s(477)+1*s(480)+1*s(481)+1*s(482)+1*s(483)+1*s(484)+1*s(485)+5
  Such that:s(468) =< V_n'-V_p_0'
s(469) =< V_n'-V_p_0'/2
s(470) =< V_n'/2-V_p_0'/2
s(471) =< V_p_0'/2
s(473)+s(474) =< s(470)
s(475)+s(476) =< s(471)
s(477) =< s(471)
s(474)+s(478) =< s(469)
s(478)+s(479) =< s(469)
s(474)+s(478) =< s(468)
s(478)+s(479) =< s(468)
s(480)+s(481) =< s(479)
s(482) =< s(479)
s(483)+s(484) =< s(478)
s(485) =< s(478)
s(472) >= V_p_0'/2
s(477) >= s(472)
s(475)+s(476) >= s(472)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([56])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(720)+1*s(721)+1*s(722)+0
  Such that:it([56]) =< 1
s(721)+s(722) =< V_n-1
s(720) =< V_n-V_up_0-V_p_0+1
aux(486) =< V_n-3*V_p_0
aux(467) =< V_n-V_p_0
aux(472) =< V_n/2-1/2
aux(461) =< V_n/6
aux(493) =< V_n/6+1/3
aux(621) =< V_n/2-1
aux(622) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(623) =< V_n/2-V_p_0
aux(624) =< V_n/3-1
aux(625) =< V_n/3-1/3
aux(626) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(627) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(628) =< V_n/3-V_p_0/2-5/6
aux(629) =< 2/3*V_n-V_p_0
aux(630) =< 2/3*V_n-V_p_0-2/3
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(622)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(622)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(485)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
aux(500)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
aux(548)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(623)
aux(562)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(623)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(623)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(623)
s(632)+s(651) =< aux(626)
aux(485)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
aux(500)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
aux(548)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(627)
aux(562)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(627)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(628)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(628)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(629)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(629)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(630)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(630)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(630)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(630)
aux(492) =< aux(472)
aux(478) =< aux(467)
aux(513) =< aux(623)*2
aux(495) =< aux(472)* (1/2)-1/2
aux(480) =< aux(623)
aux(479) =< aux(621)
aux(501) =< aux(486)
aux(477) =< aux(621)*2+2
aux(476) =< aux(621)*2+1
aux(555) =< aux(625)* (1/2)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(621)+aux(623)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(625)+aux(630)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(621)+aux(623)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(624)+aux(627)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(461)+aux(622)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(625)+aux(630)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(621)+aux(623)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(493)+aux(628)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(625)+aux(630)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(493)+aux(628)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(625)+aux(630)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
s(632)+s(651) =< aux(555)+aux(626)
s(635) =< aux(562)
s(616) =< aux(548)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(624)+aux(629)
s(533) =< aux(500)
s(514) =< aux(485)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(624)+aux(629)
s(488) =< it(109)*aux(472)
s(497) =< it(109)*aux(623)
s(486)+s(487) =< it(109)*aux(621)
s(498) =< it(109)*aux(467)
s(688) =< it(126)*aux(492)
aux(586) =< it(126)*aux(513)
s(686) =< it(126)*aux(478)
s(670) =< it(125)*aux(492)
aux(577) =< it(125)*aux(513)
s(668) =< it(125)*aux(478)
s(651) =< it(124)*aux(495)
s(637)+s(638) =< it(124)*aux(492)
s(650) =< it(124)*aux(480)
s(639)+s(640) =< it(124)*aux(479)
s(653) =< it(124)*aux(478)
s(636) =< it(124)*aux(501)
s(632) =< it(123)*aux(495)
s(619) =< it(123)*aux(492)
s(631) =< it(123)*aux(480)
s(620)+s(621) =< it(123)*aux(479)
s(634) =< it(123)*aux(478)
s(617)+s(618) =< it(123)*aux(501)
s(612) =< it(122)*aux(480)
s(601)+s(602) =< it(122)*aux(479)
s(614) =< it(122)*aux(478)
s(615) =< it(122)*aux(477)
s(613) =< it(122)*aux(476)
s(590) =< it(121)*aux(492)
s(599) =< it(121)*aux(480)
s(588)+s(589) =< it(121)*aux(479)
s(600) =< it(121)*aux(478)
s(586) =< it(115)*aux(492)
aux(524) =< it(115)*aux(513)
s(584) =< it(115)*aux(478)
s(568) =< it(114)*aux(492)
aux(515) =< it(114)*aux(513)
s(566) =< it(114)*aux(478)
s(549) =< it(113)*aux(495)
s(535)+s(536) =< it(113)*aux(492)
s(548) =< it(113)*aux(480)
s(537)+s(538) =< it(113)*aux(479)
s(551) =< it(113)*aux(478)
s(534) =< it(113)*aux(501)
s(530) =< it(112)*aux(495)
s(517) =< it(112)*aux(492)
s(529) =< it(112)*aux(480)
s(518)+s(519) =< it(112)*aux(479)
s(532) =< it(112)*aux(478)
s(515)+s(516) =< it(112)*aux(486)
s(510) =< it(111)*aux(480)
s(499)+s(500) =< it(111)*aux(479)
s(512) =< it(111)*aux(478)
s(513) =< it(111)*aux(477)
s(511) =< it(111)*aux(476)
s(689) =< aux(586)* (1/2)
s(671) =< aux(577)* (1/2)
s(587) =< aux(524)* (1/2)
s(569) =< aux(515)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(586)
s(683)+s(684) =< aux(586)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(577)
s(665)+s(666) =< aux(577)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(524)
s(581)+s(582) =< aux(524)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(515)
s(563)+s(564) =< aux(515)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+0
  Such that:aux(54) =< V_n-3*V_p_0
aux(44) =< V_n-V_p_0
aux(45) =< V_n/2-1
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-5/6
s(632)+s(651) =< V_n/3+V_up_0/2-V_p_0/2-V_n'/3-V_up_0'/2+V_p_0'/2
aux(101) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(102) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(103) =< V_n/2-V_p_0
aux(104) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(105) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(106) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(107) =< V_n/3-V_p_0/2-5/6
aux(108) =< V_n/3-V_p_0/2-V_n'/3+V_p_0'/2
aux(109) =< 2/3*V_n-V_p_0
aux(110) =< 2/3*V_n-V_p_0-2/3
aux(111) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(102)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(102)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(102)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(103)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(103)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(103)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(103)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(103)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(104)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(104)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(104)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(106)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(106)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(106)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(111)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(111)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(111)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(111)
aux(49) =< aux(44)
aux(65) =< aux(103)*2
aux(51) =< aux(103)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(103)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of loops [109,111,112,113,114,115,121,122,123,124,125,126] 

 * loop 109:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(68)+4*s(67)+1*s(70)+1*s(73)+1*s(74)+1*s(75)+1*s(76)+1*s(77)+1*s(78)+5
  Such that:s(66) =< V_n-V_p_0'/2
s(67)+s(68) =< V_n/2-1
s(69) =< V_n/2-V_p_0'/2
s(70) =< V_p_0'/2
s(68)+s(71) =< s(66)
s(71)+s(72) =< s(66)
s(67)+s(68) =< s(69)
s(73)+s(74) =< s(72)
s(75) =< s(72)
s(76)+s(77) =< s(71)
s(78) =< s(71)
s(70) >= V_p_0'/2

 * loop 111:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(97)+4*s(96)+1*s(100)+1*s(103)+1*s(104)+1*s(105)+1*s(106)+1*s(107)+1*s(108)+5
  Such that:s(94) =< V_n'-1
s(95) =< V_n'-V_p_0'/2
s(96)+s(97) =< V_n'/2-1
s(98) =< V_n'/2-V_p_0'/2
s(99) =< V_n'
s(94)+s(100) =< s(99)
s(96) =< s(99)
s(97)+s(101) =< s(95)
s(101)+s(102) =< s(95)
s(97)+s(101) =< s(94)
s(101)+s(102) =< s(94)
s(96)+s(97) =< s(98)
s(103)+s(104) =< s(102)
s(105) =< s(102)
s(106)+s(107) =< s(101)
s(108) =< s(101)
s(100) >= 1

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(131)+1*s(133)+1*s(132)+1*s(138)+4*s(136)+4*s(135)+1*s(145)+1*s(146)+1*s(147)+1*s(149)+1*s(150)+1*s(151)+2
  Such that:s(131) =< 1
s(132)+s(133) =< V_n'-3/2*V_p_0'
s(134) =< V_n'-V_p_0'/2
s(135)+s(136) =< V_n'/2-1
s(137) =< V_n'/2-V_p_0'/2
s(138) =< V_p_0'/2
s(139) =< V_p_0'/4-1/2
s(131)+s(135)+s(142) =< s(134)
s(131)+s(142)+s(143) =< s(134)
s(135)+s(136) =< s(137)
s(135)+s(136) =< s(139)+s(137)
s(145)+s(146) =< s(143)
s(147) =< s(143)
s(149)+s(150) =< s(142)
s(151) =< s(142)
s(131) >= 1
s(140) >= V_p_0
s(141) >= V_p_0+1
s(140) >= s(140)
s(138) >= s(140)
s(144) >= s(140)
s(132)+s(133) >= s(131)*s(141)
s(138) >= s(131)*s(144)
s(147) >= s(148)
s(145)+s(146) >= s(148)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(174)+1*s(175)+1*s(181)+1*s(180)+4*s(178)+4*s(177)+1*s(188)+1*s(189)+1*s(190)+1*s(192)+1*s(193)+1*s(194)+2
  Such that:s(174) =< 1
s(175) =< V_n'-3/2*V_p_0'
s(176) =< V_n'-V_p_0'/2
s(177)+s(178) =< V_n'/2-1
s(179) =< V_n'/2-V_p_0'/2
s(180)+s(181) =< V_p_0'/2
s(182) =< V_p_0'/4-1/2
s(174)+s(177)+s(185) =< s(176)
s(174)+s(185)+s(186) =< s(176)
s(177)+s(178) =< s(179)
s(177)+s(178) =< s(182)+s(179)
s(188)+s(189) =< s(186)
s(190) =< s(186)
s(192)+s(193) =< s(185)
s(194) =< s(185)
s(174) >= 1
s(183) >= V_p_0
s(184) >= V_p_0+1
s(183) >= s(183)
s(180)+s(181) >= s(183)
s(187) >= s(183)
s(175) >= s(174)*s(184)
s(180)+s(181) >= s(174)*s(187)
s(190) >= s(191)
s(188)+s(189) >= s(191)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(219)+4*s(220)+1*s(221)+1*s(222)+1*s(223)+1*s(226)+1*s(227)+1*s(228)+1*s(229)+1*s(230)+1*s(231)+5
  Such that:s(214) =< V_n'-V_p_0'
s(215) =< V_n'-V_p_0'/2
s(216) =< V_n'/2-V_p_0'/2
s(217) =< V_p_0'/2
s(219)+s(220) =< s(216)
s(221)+s(222) =< s(217)
s(223) =< s(217)
s(220)+s(224) =< s(215)
s(224)+s(225) =< s(215)
s(220)+s(224) =< s(214)
s(224)+s(225) =< s(214)
s(226)+s(227) =< s(225)
s(228) =< s(225)
s(229)+s(230) =< s(224)
s(231) =< s(224)
s(218) >= V_p_0'/2
s(221)+s(222) >= s(218)
s(223) >= s(218)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(256)+4*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(263)+1*s(264)+1*s(265)+1*s(266)+1*s(267)+1*s(268)+5
  Such that:s(251) =< V_n'-V_p_0'
s(252) =< V_n'-V_p_0'/2
s(253) =< V_n'/2-V_p_0'/2
s(254) =< V_p_0'/2
s(256)+s(257) =< s(253)
s(258)+s(259) =< s(254)
s(260) =< s(254)
s(257)+s(261) =< s(252)
s(261)+s(262) =< s(252)
s(257)+s(261) =< s(251)
s(261)+s(262) =< s(251)
s(263)+s(264) =< s(262)
s(265) =< s(262)
s(266)+s(267) =< s(261)
s(268) =< s(261)
s(255) >= V_p_0'/2
s(260) >= s(255)
s(258)+s(259) >= s(255)

 * loop 121:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(285)+4*s(284)+1*s(287)+1*s(290)+1*s(291)+1*s(292)+1*s(293)+1*s(294)+1*s(295)+5
  Such that:s(283) =< V_n-V_p_0
s(284)+s(285) =< V_n/2-1
s(286) =< V_n/2-V_p_0
s(287) =< V_p_0
s(285)+s(288) =< s(283)
s(288)+s(289) =< s(283)
s(284)+s(285) =< s(286)
s(290)+s(291) =< s(289)
s(292) =< s(289)
s(293)+s(294) =< s(288)
s(295) =< s(288)
s(287) >= V_p_0'/2

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(314)+4*s(313)+1*s(317)+1*s(320)+1*s(321)+1*s(322)+1*s(323)+1*s(324)+1*s(325)+5
  Such that:s(311) =< V_n'-1
s(312) =< V_n'-V_p_0'/2
s(313)+s(314) =< V_n'/2-1
s(315) =< V_n'/2-V_p_0'/2
s(316) =< V_n'
s(311)+s(317) =< s(316)
s(313) =< s(316)
s(314)+s(318) =< s(312)
s(318)+s(319) =< s(312)
s(314)+s(318) =< s(311)
s(318)+s(319) =< s(311)
s(313)+s(314) =< s(315)
s(320)+s(321) =< s(319)
s(322) =< s(319)
s(323)+s(324) =< s(318)
s(325) =< s(318)
s(317) >= 1

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(348)+1*s(350)+1*s(349)+1*s(355)+4*s(353)+4*s(352)+1*s(362)+1*s(363)+1*s(364)+1*s(366)+1*s(367)+1*s(368)+2
  Such that:s(348) =< 1
s(349)+s(350) =< V_n'-3/2*V_p_0'
s(351) =< V_n'-V_p_0'/2
s(352)+s(353) =< V_n'/2-1
s(354) =< V_n'/2-V_p_0'/2
s(355) =< V_p_0'/2
s(356) =< V_p_0'/4-1/2
s(348)+s(352)+s(359) =< s(351)
s(348)+s(359)+s(360) =< s(351)
s(352)+s(353) =< s(354)
s(352)+s(353) =< s(356)+s(354)
s(362)+s(363) =< s(360)
s(364) =< s(360)
s(366)+s(367) =< s(359)
s(368) =< s(359)
s(348) >= 1
s(357) >= V_p_0
s(358) >= V_p_0+1
s(357) >= s(357)
s(355) >= s(357)
s(361) >= s(357)
s(349)+s(350) >= s(348)*s(358)
s(355) >= s(348)*s(361)
s(364) >= s(365)
s(362)+s(363) >= s(365)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
3*s(391)+1*s(392)+1*s(398)+1*s(397)+4*s(395)+4*s(394)+1*s(405)+1*s(406)+1*s(407)+1*s(409)+1*s(410)+1*s(411)+2
  Such that:s(391) =< 1
s(392) =< V_n'-3/2*V_p_0'
s(393) =< V_n'-V_p_0'/2
s(394)+s(395) =< V_n'/2-1
s(396) =< V_n'/2-V_p_0'/2
s(397)+s(398) =< V_p_0'/2
s(399) =< V_p_0'/4-1/2
s(391)+s(394)+s(402) =< s(393)
s(391)+s(402)+s(403) =< s(393)
s(394)+s(395) =< s(396)
s(394)+s(395) =< s(399)+s(396)
s(405)+s(406) =< s(403)
s(407) =< s(403)
s(409)+s(410) =< s(402)
s(411) =< s(402)
s(391) >= 1
s(400) >= V_p_0
s(401) >= V_p_0+1
s(400) >= s(400)
s(397)+s(398) >= s(400)
s(404) >= s(400)
s(392) >= s(391)*s(401)
s(397)+s(398) >= s(391)*s(404)
s(407) >= s(408)
s(405)+s(406) >= s(408)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(436)+4*s(437)+1*s(438)+1*s(439)+1*s(440)+1*s(443)+1*s(444)+1*s(445)+1*s(446)+1*s(447)+1*s(448)+5
  Such that:s(431) =< V_n'-V_p_0'
s(432) =< V_n'-V_p_0'/2
s(433) =< V_n'/2-V_p_0'/2
s(434) =< V_p_0'/2
s(436)+s(437) =< s(433)
s(438)+s(439) =< s(434)
s(440) =< s(434)
s(437)+s(441) =< s(432)
s(441)+s(442) =< s(432)
s(437)+s(441) =< s(431)
s(441)+s(442) =< s(431)
s(443)+s(444) =< s(442)
s(445) =< s(442)
s(446)+s(447) =< s(441)
s(448) =< s(441)
s(435) >= V_p_0'/2
s(438)+s(439) >= s(435)
s(440) >= s(435)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
4*s(473)+4*s(474)+1*s(475)+1*s(476)+1*s(477)+1*s(480)+1*s(481)+1*s(482)+1*s(483)+1*s(484)+1*s(485)+5
  Such that:s(468) =< V_n'-V_p_0'
s(469) =< V_n'-V_p_0'/2
s(470) =< V_n'/2-V_p_0'/2
s(471) =< V_p_0'/2
s(473)+s(474) =< s(470)
s(475)+s(476) =< s(471)
s(477) =< s(471)
s(474)+s(478) =< s(469)
s(478)+s(479) =< s(469)
s(474)+s(478) =< s(468)
s(478)+s(479) =< s(468)
s(480)+s(481) =< s(479)
s(482) =< s(479)
s(483)+s(484) =< s(478)
s(485) =< s(478)
s(472) >= V_p_0'/2
s(477) >= s(472)
s(475)+s(476) >= s(472)

#### Cost of phase [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [] 
5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([55])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(726)+1*s(727)+1*s(728)+0
  Such that:it([55]) =< 1
s(728) =< V_n-1
s(726)+s(727) =< V_n-V_up_0-V_p_0+1
aux(658) =< V_n-3*V_p_0
aux(639) =< V_n-V_p_0
aux(644) =< V_n/2-1/2
aux(633) =< V_n/6
aux(665) =< V_n/6+1/3
aux(793) =< V_n/2-1
aux(794) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(795) =< V_n/2-V_p_0
aux(796) =< V_n/3-1
aux(797) =< V_n/3-1/3
aux(798) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(799) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(800) =< V_n/3-V_p_0/2-5/6
aux(801) =< 2/3*V_n-V_p_0
aux(802) =< 2/3*V_n-V_p_0-2/3
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(794)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(794)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(657)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
aux(672)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
aux(720)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(795)
aux(734)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(795)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(795)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(795)
s(632)+s(651) =< aux(798)
aux(657)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
aux(672)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
aux(720)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(799)
aux(734)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(799)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(800)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(800)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(801)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(801)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(802)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(802)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(802)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(802)
aux(664) =< aux(644)
aux(650) =< aux(639)
aux(685) =< aux(795)*2
aux(667) =< aux(644)* (1/2)-1/2
aux(652) =< aux(795)
aux(651) =< aux(793)
aux(673) =< aux(658)
aux(649) =< aux(793)*2+2
aux(648) =< aux(793)*2+1
aux(727) =< aux(797)* (1/2)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(793)+aux(795)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(797)+aux(802)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(793)+aux(795)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(796)+aux(799)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(633)+aux(794)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(797)+aux(802)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(793)+aux(795)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(665)+aux(800)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(797)+aux(802)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(665)+aux(800)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(797)+aux(802)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
s(632)+s(651) =< aux(727)+aux(798)
s(635) =< aux(734)
s(616) =< aux(720)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(796)+aux(801)
s(533) =< aux(672)
s(514) =< aux(657)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(796)+aux(801)
s(488) =< it(109)*aux(644)
s(497) =< it(109)*aux(795)
s(486)+s(487) =< it(109)*aux(793)
s(498) =< it(109)*aux(639)
s(688) =< it(126)*aux(664)
aux(758) =< it(126)*aux(685)
s(686) =< it(126)*aux(650)
s(670) =< it(125)*aux(664)
aux(749) =< it(125)*aux(685)
s(668) =< it(125)*aux(650)
s(651) =< it(124)*aux(667)
s(637)+s(638) =< it(124)*aux(664)
s(650) =< it(124)*aux(652)
s(639)+s(640) =< it(124)*aux(651)
s(653) =< it(124)*aux(650)
s(636) =< it(124)*aux(673)
s(632) =< it(123)*aux(667)
s(619) =< it(123)*aux(664)
s(631) =< it(123)*aux(652)
s(620)+s(621) =< it(123)*aux(651)
s(634) =< it(123)*aux(650)
s(617)+s(618) =< it(123)*aux(673)
s(612) =< it(122)*aux(652)
s(601)+s(602) =< it(122)*aux(651)
s(614) =< it(122)*aux(650)
s(615) =< it(122)*aux(649)
s(613) =< it(122)*aux(648)
s(590) =< it(121)*aux(664)
s(599) =< it(121)*aux(652)
s(588)+s(589) =< it(121)*aux(651)
s(600) =< it(121)*aux(650)
s(586) =< it(115)*aux(664)
aux(696) =< it(115)*aux(685)
s(584) =< it(115)*aux(650)
s(568) =< it(114)*aux(664)
aux(687) =< it(114)*aux(685)
s(566) =< it(114)*aux(650)
s(549) =< it(113)*aux(667)
s(535)+s(536) =< it(113)*aux(664)
s(548) =< it(113)*aux(652)
s(537)+s(538) =< it(113)*aux(651)
s(551) =< it(113)*aux(650)
s(534) =< it(113)*aux(673)
s(530) =< it(112)*aux(667)
s(517) =< it(112)*aux(664)
s(529) =< it(112)*aux(652)
s(518)+s(519) =< it(112)*aux(651)
s(532) =< it(112)*aux(650)
s(515)+s(516) =< it(112)*aux(658)
s(510) =< it(111)*aux(652)
s(499)+s(500) =< it(111)*aux(651)
s(512) =< it(111)*aux(650)
s(513) =< it(111)*aux(649)
s(511) =< it(111)*aux(648)
s(689) =< aux(758)* (1/2)
s(671) =< aux(749)* (1/2)
s(587) =< aux(696)* (1/2)
s(569) =< aux(687)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(758)
s(683)+s(684) =< aux(758)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(749)
s(665)+s(666) =< aux(749)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(696)
s(581)+s(582) =< aux(696)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(687)
s(563)+s(564) =< aux(687)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

#### Cost of chains of eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D):
* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],82]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+1*s(49)+1*s(50)+1*s(51)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+4
  Such that:s(632) =< V_up_0/2-V_p_0/2+C/3-5/6
s(651)+s(632) =< V_up_0/2-V_p_0/2+C/4
aux(101) =< V_up_0/3-2/3*V_p_0+C/2-1
aux(54) =< -3*V_p_0+C
aux(44) =< -V_p_0+C
aux(109) =< -V_p_0+2/3*C
aux(110) =< -V_p_0+2/3*C-2/3
aux(107) =< -V_p_0/2+C/3-5/6
aux(108) =< -V_p_0/2+C/4
aux(45) =< C/2-1
s(47) =< C/2
aux(112) =< V_up_0/3-2/3*V_p_0+C/3
aux(113) =< -V_p_0+C/2
s(49)+s(50) =< s(47)
s(51) =< s(47)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(112)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(112)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(112)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(112)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(112)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(113)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(113)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(113)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(113)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(113)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(113)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(113)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(113)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(113)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(113)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(113)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(113)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(113)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(113)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(112)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(112)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(112)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(112)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(112)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(112)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(112)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(113)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(113)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(113)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(113)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(113)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(113)
aux(49) =< aux(44)
aux(65) =< aux(113)*2
aux(51) =< aux(113)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(113)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
s(48) >= V_n/2
s(51) >= s(48)
s(49)+s(50) >= s(48)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n+8*V_up_0>=4*V_p_0+8] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],81]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(692)+1*s(693)+1*s(694)+4
  Such that:s(632) =< V_up_0/2-V_p_0/2+C/3-5/6
s(651)+s(632) =< V_up_0/2-V_p_0/2+C/4
aux(101) =< V_up_0/3-2/3*V_p_0+C/2-1
aux(54) =< -3*V_p_0+C
aux(44) =< -V_p_0+C
aux(109) =< -V_p_0+2/3*C
aux(110) =< -V_p_0+2/3*C-2/3
aux(107) =< -V_p_0/2+C/3-5/6
aux(108) =< -V_p_0/2+C/4
aux(45) =< C/2-1
s(690) =< C/2
aux(114) =< V_up_0/3-2/3*V_p_0+C/3
aux(115) =< -V_p_0+C/2
s(692)+s(693) =< s(690)
s(694) =< s(690)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(114)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(114)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(114)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(114)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(114)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(115)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(115)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(115)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(115)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(115)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(115)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(115)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(115)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(115)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(115)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(115)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(115)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(115)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(115)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(114)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(114)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(114)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(114)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(114)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(114)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(114)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(115)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(115)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(115)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(115)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(115)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(115)
aux(49) =< aux(44)
aux(65) =< aux(115)*2
aux(51) =< aux(115)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(115)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
s(691) >= V_n/2
s(692)+s(693) >= s(691)
s(694) >= s(691)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n+8*V_up_0>=4*V_p_0+8] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],76]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([76])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(698)+1*s(699)+1*s(700)+0
  Such that:it([76]) =< 1
s(699)+s(700) =< V_n-1
s(698) =< V_n-V_up_0-V_p_0
aux(142) =< V_n-3*V_p_0
aux(123) =< V_n-V_p_0
aux(128) =< V_n/2-1/2
aux(126) =< V_n/3-1
aux(146) =< V_n/3-1/3
aux(276) =< V_n/2-1
aux(277) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(278) =< V_n/2-V_p_0
aux(279) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(280) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(281) =< V_n/3-V_p_0/2-5/6
aux(282) =< V_n/6+1/3
aux(283) =< 2/3*V_n-V_p_0
aux(284) =< 2/3*V_n-V_p_0-2/3
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(277)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(277)
aux(141)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
aux(156)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
aux(204)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(278)
aux(218)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(278)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(278)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(278)
s(632)+s(651) =< aux(279)
aux(141)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
aux(156)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
aux(204)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(280)
aux(218)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(280)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(280)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(281)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(281)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(283)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(283)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(284)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(284)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(284)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(284)
aux(148) =< aux(128)
aux(134) =< aux(123)
aux(169) =< aux(278)*2
aux(151) =< aux(128)* (1/2)-1/2
aux(136) =< aux(278)
aux(135) =< aux(276)
aux(157) =< aux(142)
aux(133) =< aux(276)*2+2
aux(132) =< aux(276)*2+1
aux(119) =< aux(276)* (2/3)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(276)+aux(278)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(146)+aux(284)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(276)+aux(278)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(282)+aux(277)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(146)+aux(284)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(126)+aux(283)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(276)+aux(278)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(276)+aux(278)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(146)+aux(284)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(146)+aux(284)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(276)+aux(278)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(282)+aux(277)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(126)+aux(283)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
s(632)+s(651) =< aux(282)+aux(279)
aux(218)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(119)+aux(280)
aux(204)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(282)+aux(281)
aux(156)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(282)+aux(281)
aux(141)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(119)+aux(280)
s(688) =< it(126)*aux(148)
aux(242) =< it(126)*aux(169)
s(686) =< it(126)*aux(134)
s(670) =< it(125)*aux(148)
aux(233) =< it(125)*aux(169)
s(668) =< it(125)*aux(134)
s(651) =< it(124)*aux(151)
s(637)+s(638) =< it(124)*aux(148)
s(650) =< it(124)*aux(136)
s(639)+s(640) =< it(124)*aux(135)
s(653) =< it(124)*aux(134)
s(636) =< it(124)*aux(157)
s(635) =< aux(218)
s(632) =< it(123)*aux(151)
s(619) =< it(123)*aux(148)
s(631) =< it(123)*aux(136)
s(620)+s(621) =< it(123)*aux(135)
s(634) =< it(123)*aux(134)
s(617)+s(618) =< it(123)*aux(157)
s(616) =< aux(204)
s(612) =< it(122)*aux(136)
s(601)+s(602) =< it(122)*aux(135)
s(614) =< it(122)*aux(134)
s(615) =< it(122)*aux(133)
s(613) =< it(122)*aux(132)
s(590) =< it(121)*aux(148)
s(599) =< it(121)*aux(136)
s(588)+s(589) =< it(121)*aux(135)
s(600) =< it(121)*aux(134)
s(586) =< it(115)*aux(148)
aux(180) =< it(115)*aux(169)
s(584) =< it(115)*aux(134)
s(568) =< it(114)*aux(148)
aux(171) =< it(114)*aux(169)
s(566) =< it(114)*aux(134)
s(549) =< it(113)*aux(151)
s(535)+s(536) =< it(113)*aux(148)
s(548) =< it(113)*aux(136)
s(537)+s(538) =< it(113)*aux(135)
s(551) =< it(113)*aux(134)
s(534) =< it(113)*aux(157)
s(533) =< aux(156)
s(530) =< it(112)*aux(151)
s(517) =< it(112)*aux(148)
s(529) =< it(112)*aux(136)
s(518)+s(519) =< it(112)*aux(135)
s(532) =< it(112)*aux(134)
s(515)+s(516) =< it(112)*aux(142)
s(514) =< aux(141)
s(510) =< it(111)*aux(136)
s(499)+s(500) =< it(111)*aux(135)
s(512) =< it(111)*aux(134)
s(513) =< it(111)*aux(133)
s(511) =< it(111)*aux(132)
s(488) =< it(109)*aux(128)
s(497) =< it(109)*aux(278)
s(486)+s(487) =< it(109)*aux(276)
s(498) =< it(109)*aux(123)
s(689) =< aux(242)* (1/2)
s(671) =< aux(233)* (1/2)
s(587) =< aux(180)* (1/2)
s(569) =< aux(171)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(242)
s(683)+s(684) =< aux(242)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(233)
s(665)+s(666) =< aux(233)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(180)
s(581)+s(582) =< aux(180)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(171)
s(563)+s(564) =< aux(171)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
it([76]) >= 1
aux(245) >= V_n/2+1/2
aux(285) >= V_p_0
aux(285) >= aux(285)
s(140) >= aux(285)
aux(116) >= s(140)
s(698) >= it([76])*aux(245)
s(699)+s(700) >= it([76])*aux(116)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n+4*V_up_0>=2*V_p_0+5] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],75]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([75])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(704)+1*s(705)+1*s(706)+0
  Such that:it([75]) =< 1
s(706) =< V_n-1
s(704)+s(705) =< V_n-V_up_0-V_p_0
aux(312) =< V_n-3*V_p_0
aux(293) =< V_n-V_p_0
aux(298) =< V_n/2-1/2
aux(296) =< V_n/3-1
aux(316) =< V_n/3-1/3
aux(446) =< V_n/2-1
aux(447) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(448) =< V_n/2-V_p_0
aux(449) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(450) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(451) =< V_n/3-V_p_0/2-5/6
aux(452) =< V_n/6+1/3
aux(453) =< 2/3*V_n-V_p_0
aux(454) =< 2/3*V_n-V_p_0-2/3
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(447)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(447)
aux(311)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
aux(326)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
aux(374)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(448)
aux(388)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(448)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(448)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(448)
s(632)+s(651) =< aux(449)
aux(311)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
aux(326)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
aux(374)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(450)
aux(388)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(450)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(450)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(451)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(451)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(453)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(453)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(454)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(454)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(454)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(454)
aux(318) =< aux(298)
aux(304) =< aux(293)
aux(339) =< aux(448)*2
aux(321) =< aux(298)* (1/2)-1/2
aux(306) =< aux(448)
aux(305) =< aux(446)
aux(327) =< aux(312)
aux(303) =< aux(446)*2+2
aux(302) =< aux(446)*2+1
aux(289) =< aux(446)* (2/3)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(446)+aux(448)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(316)+aux(454)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(446)+aux(448)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(452)+aux(447)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(316)+aux(454)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(296)+aux(453)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(446)+aux(448)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(446)+aux(448)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(316)+aux(454)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(316)+aux(454)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(446)+aux(448)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(452)+aux(447)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(296)+aux(453)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
s(632)+s(651) =< aux(452)+aux(449)
aux(388)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(289)+aux(450)
aux(374)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(452)+aux(451)
aux(326)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(452)+aux(451)
aux(311)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(289)+aux(450)
s(688) =< it(126)*aux(318)
aux(412) =< it(126)*aux(339)
s(686) =< it(126)*aux(304)
s(670) =< it(125)*aux(318)
aux(403) =< it(125)*aux(339)
s(668) =< it(125)*aux(304)
s(651) =< it(124)*aux(321)
s(637)+s(638) =< it(124)*aux(318)
s(650) =< it(124)*aux(306)
s(639)+s(640) =< it(124)*aux(305)
s(653) =< it(124)*aux(304)
s(636) =< it(124)*aux(327)
s(635) =< aux(388)
s(632) =< it(123)*aux(321)
s(619) =< it(123)*aux(318)
s(631) =< it(123)*aux(306)
s(620)+s(621) =< it(123)*aux(305)
s(634) =< it(123)*aux(304)
s(617)+s(618) =< it(123)*aux(327)
s(616) =< aux(374)
s(612) =< it(122)*aux(306)
s(601)+s(602) =< it(122)*aux(305)
s(614) =< it(122)*aux(304)
s(615) =< it(122)*aux(303)
s(613) =< it(122)*aux(302)
s(590) =< it(121)*aux(318)
s(599) =< it(121)*aux(306)
s(588)+s(589) =< it(121)*aux(305)
s(600) =< it(121)*aux(304)
s(586) =< it(115)*aux(318)
aux(350) =< it(115)*aux(339)
s(584) =< it(115)*aux(304)
s(568) =< it(114)*aux(318)
aux(341) =< it(114)*aux(339)
s(566) =< it(114)*aux(304)
s(549) =< it(113)*aux(321)
s(535)+s(536) =< it(113)*aux(318)
s(548) =< it(113)*aux(306)
s(537)+s(538) =< it(113)*aux(305)
s(551) =< it(113)*aux(304)
s(534) =< it(113)*aux(327)
s(533) =< aux(326)
s(530) =< it(112)*aux(321)
s(517) =< it(112)*aux(318)
s(529) =< it(112)*aux(306)
s(518)+s(519) =< it(112)*aux(305)
s(532) =< it(112)*aux(304)
s(515)+s(516) =< it(112)*aux(312)
s(514) =< aux(311)
s(510) =< it(111)*aux(306)
s(499)+s(500) =< it(111)*aux(305)
s(512) =< it(111)*aux(304)
s(513) =< it(111)*aux(303)
s(511) =< it(111)*aux(302)
s(488) =< it(109)*aux(298)
s(497) =< it(109)*aux(448)
s(486)+s(487) =< it(109)*aux(446)
s(498) =< it(109)*aux(293)
s(689) =< aux(412)* (1/2)
s(671) =< aux(403)* (1/2)
s(587) =< aux(350)* (1/2)
s(569) =< aux(341)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(412)
s(683)+s(684) =< aux(412)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(403)
s(665)+s(666) =< aux(403)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(350)
s(581)+s(582) =< aux(350)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(341)
s(563)+s(564) =< aux(341)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
it([75]) >= 1
aux(415) >= V_n/2+1/2
aux(455) >= V_p_0
aux(455) >= aux(455)
s(140) >= aux(455)
aux(286) >= s(140)
s(704)+s(705) >= it([75])*aux(415)
s(706) >= it([75])*aux(286)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n+4*V_up_0>=2*V_p_0+5] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],68]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(709)+1*s(710)+1*s(711)+4
  Such that:s(651)+s(632) =< V_up_0/2-V_p_0/2+C/4-1/2
aux(101) =< V_up_0/3-2/3*V_p_0+C/2-1
aux(105) =< V_up_0/3-2/3*V_p_0+C/3
aux(54) =< -3*V_p_0+C
aux(44) =< -V_p_0+C
aux(109) =< -V_p_0+2/3*C
aux(110) =< -V_p_0+2/3*C-2/3
aux(107) =< -V_p_0/2+C/3-5/6
aux(108) =< -V_p_0/2+C/4
aux(45) =< C/2-1
s(707) =< C/2
aux(456) =< V_up_0/3-2/3*V_p_0+C/3-1/3
aux(457) =< -V_p_0+C/2
s(709)+s(710) =< s(707)
s(711) =< s(707)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(456)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(456)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(456)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(456)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(456)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(457)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(457)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(457)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(457)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(457)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(457)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(457)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(457)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(457)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(457)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(457)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(457)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(457)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(457)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(457)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(457)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(457)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(457)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(457)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(457)
aux(49) =< aux(44)
aux(65) =< aux(457)*2
aux(51) =< aux(457)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(457)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
s(708) >= V_n/2
s(711) >= s(708)
s(709)+s(710) >= s(708)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n>=4*V_p_0+4*V_up_0] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],67]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(714)+1*s(715)+1*s(716)+4
  Such that:s(651)+s(632) =< V_up_0/2-V_p_0/2+C/4-1/2
aux(101) =< V_up_0/3-2/3*V_p_0+C/2-1
aux(105) =< V_up_0/3-2/3*V_p_0+C/3
aux(54) =< -3*V_p_0+C
aux(44) =< -V_p_0+C
aux(109) =< -V_p_0+2/3*C
aux(110) =< -V_p_0+2/3*C-2/3
aux(107) =< -V_p_0/2+C/3-5/6
aux(108) =< -V_p_0/2+C/4
aux(45) =< C/2-1
s(712) =< C/2
aux(458) =< V_up_0/3-2/3*V_p_0+C/3-1/3
aux(459) =< -V_p_0+C/2
s(714)+s(715) =< s(712)
s(716) =< s(712)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(101)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(101)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(101)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(458)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(458)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(458)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(458)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(458)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(459)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(459)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(459)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(459)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(459)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(459)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(459)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(459)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(459)
aux(53)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(459)
aux(59)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(459)
aux(82)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(459)
aux(88)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(459)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(459)
aux(53)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(59)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
aux(82)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(105)
aux(88)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(105)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(105)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(107)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(107)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(108)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(108)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(109)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(109)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(110)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(110)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(459)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(459)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(459)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(459)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(459)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(459)
aux(49) =< aux(44)
aux(65) =< aux(459)*2
aux(51) =< aux(459)
aux(50) =< aux(45)
aux(60) =< aux(54)
aux(48) =< aux(45)*2+2
aux(47) =< aux(45)*2+1
s(635) =< aux(88)
s(616) =< aux(82)
s(533) =< aux(59)
s(515)+s(516) =< it(112)*aux(54)
s(514) =< aux(53)
s(497) =< it(109)*aux(459)
s(486)+s(487) =< it(109)*aux(45)
s(498) =< it(109)*aux(44)
aux(100) =< it(126)*aux(65)
s(686) =< it(126)*aux(49)
aux(96) =< it(125)*aux(65)
s(668) =< it(125)*aux(49)
s(650) =< it(124)*aux(51)
s(639)+s(640) =< it(124)*aux(50)
s(653) =< it(124)*aux(49)
s(636) =< it(124)*aux(60)
s(631) =< it(123)*aux(51)
s(620)+s(621) =< it(123)*aux(50)
s(634) =< it(123)*aux(49)
s(617)+s(618) =< it(123)*aux(60)
s(612) =< it(122)*aux(51)
s(601)+s(602) =< it(122)*aux(50)
s(614) =< it(122)*aux(49)
s(615) =< it(122)*aux(48)
s(613) =< it(122)*aux(47)
s(599) =< it(121)*aux(51)
s(588)+s(589) =< it(121)*aux(50)
s(600) =< it(121)*aux(49)
aux(71) =< it(115)*aux(65)
s(584) =< it(115)*aux(49)
aux(67) =< it(114)*aux(65)
s(566) =< it(114)*aux(49)
s(548) =< it(113)*aux(51)
s(537)+s(538) =< it(113)*aux(50)
s(551) =< it(113)*aux(49)
s(534) =< it(113)*aux(60)
s(529) =< it(112)*aux(51)
s(518)+s(519) =< it(112)*aux(50)
s(532) =< it(112)*aux(49)
s(510) =< it(111)*aux(51)
s(499)+s(500) =< it(111)*aux(50)
s(512) =< it(111)*aux(49)
s(513) =< it(111)*aux(48)
s(511) =< it(111)*aux(47)
s(689) =< aux(100)* (1/2)
s(671) =< aux(96)* (1/2)
s(587) =< aux(71)* (1/2)
s(569) =< aux(67)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(100)
s(683)+s(684) =< aux(100)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(96)
s(665)+s(666) =< aux(96)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(71)
s(581)+s(582) =< aux(71)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(67)
s(563)+s(564) =< aux(67)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)
s(713) >= V_n/2
s(714)+s(715) >= s(713)
s(716) >= s(713)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n>=4*V_p_0+4*V_up_0] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],56]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([56])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(720)+1*s(721)+1*s(722)+0
  Such that:it([56]) =< 1
s(721)+s(722) =< V_n-1
s(720) =< V_n-V_up_0-V_p_0+1
aux(486) =< V_n-3*V_p_0
aux(467) =< V_n-V_p_0
aux(472) =< V_n/2-1/2
aux(461) =< V_n/6
aux(493) =< V_n/6+1/3
aux(621) =< V_n/2-1
aux(622) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(623) =< V_n/2-V_p_0
aux(624) =< V_n/3-1
aux(625) =< V_n/3-1/3
aux(626) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(627) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(628) =< V_n/3-V_p_0/2-5/6
aux(629) =< 2/3*V_n-V_p_0
aux(630) =< 2/3*V_n-V_p_0-2/3
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(622)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(622)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(622)
aux(485)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
aux(500)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
aux(548)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(623)
aux(562)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(623)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(623)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(623)
s(632)+s(651) =< aux(626)
aux(485)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
aux(500)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
aux(548)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(627)
aux(562)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(627)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(627)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(628)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(628)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(629)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(629)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(630)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(630)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(630)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(630)
aux(492) =< aux(472)
aux(478) =< aux(467)
aux(513) =< aux(623)*2
aux(495) =< aux(472)* (1/2)-1/2
aux(480) =< aux(623)
aux(479) =< aux(621)
aux(501) =< aux(486)
aux(477) =< aux(621)*2+2
aux(476) =< aux(621)*2+1
aux(555) =< aux(625)* (1/2)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(621)+aux(623)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(625)+aux(630)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(621)+aux(623)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(624)+aux(627)
aux(562)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(461)+aux(622)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(625)+aux(630)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(548)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(621)+aux(623)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(621)+aux(623)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(493)+aux(628)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(625)+aux(630)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(500)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(493)+aux(628)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(625)+aux(630)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(621)+aux(623)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(624)+aux(627)
aux(485)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(461)+aux(622)
s(632)+s(651) =< aux(555)+aux(626)
s(635) =< aux(562)
s(616) =< aux(548)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(624)+aux(629)
s(533) =< aux(500)
s(514) =< aux(485)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(624)+aux(629)
s(488) =< it(109)*aux(472)
s(497) =< it(109)*aux(623)
s(486)+s(487) =< it(109)*aux(621)
s(498) =< it(109)*aux(467)
s(688) =< it(126)*aux(492)
aux(586) =< it(126)*aux(513)
s(686) =< it(126)*aux(478)
s(670) =< it(125)*aux(492)
aux(577) =< it(125)*aux(513)
s(668) =< it(125)*aux(478)
s(651) =< it(124)*aux(495)
s(637)+s(638) =< it(124)*aux(492)
s(650) =< it(124)*aux(480)
s(639)+s(640) =< it(124)*aux(479)
s(653) =< it(124)*aux(478)
s(636) =< it(124)*aux(501)
s(632) =< it(123)*aux(495)
s(619) =< it(123)*aux(492)
s(631) =< it(123)*aux(480)
s(620)+s(621) =< it(123)*aux(479)
s(634) =< it(123)*aux(478)
s(617)+s(618) =< it(123)*aux(501)
s(612) =< it(122)*aux(480)
s(601)+s(602) =< it(122)*aux(479)
s(614) =< it(122)*aux(478)
s(615) =< it(122)*aux(477)
s(613) =< it(122)*aux(476)
s(590) =< it(121)*aux(492)
s(599) =< it(121)*aux(480)
s(588)+s(589) =< it(121)*aux(479)
s(600) =< it(121)*aux(478)
s(586) =< it(115)*aux(492)
aux(524) =< it(115)*aux(513)
s(584) =< it(115)*aux(478)
s(568) =< it(114)*aux(492)
aux(515) =< it(114)*aux(513)
s(566) =< it(114)*aux(478)
s(549) =< it(113)*aux(495)
s(535)+s(536) =< it(113)*aux(492)
s(548) =< it(113)*aux(480)
s(537)+s(538) =< it(113)*aux(479)
s(551) =< it(113)*aux(478)
s(534) =< it(113)*aux(501)
s(530) =< it(112)*aux(495)
s(517) =< it(112)*aux(492)
s(529) =< it(112)*aux(480)
s(518)+s(519) =< it(112)*aux(479)
s(532) =< it(112)*aux(478)
s(515)+s(516) =< it(112)*aux(486)
s(510) =< it(111)*aux(480)
s(499)+s(500) =< it(111)*aux(479)
s(512) =< it(111)*aux(478)
s(513) =< it(111)*aux(477)
s(511) =< it(111)*aux(476)
s(689) =< aux(586)* (1/2)
s(671) =< aux(577)* (1/2)
s(587) =< aux(524)* (1/2)
s(569) =< aux(515)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(586)
s(683)+s(684) =< aux(586)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(577)
s(665)+s(666) =< aux(577)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(524)
s(581)+s(582) =< aux(524)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(515)
s(563)+s(564) =< aux(515)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n>=2*V_p_0+2*V_up_0+1] 

* Chain [[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],55]: 5*it(109)+5*it(111)+2*it(112)+2*it(113)+5*it(114)+5*it(115)+5*it(121)+5*it(122)+2*it(123)+2*it(124)+5*it(125)+5*it(126)+4*it([55])+4*s(486)+4*s(487)+1*s(488)+1*s(489)+1*s(490)+1*s(491)+1*s(492)+1*s(493)+1*s(494)+4*s(499)+4*s(500)+1*s(501)+1*s(502)+1*s(503)+1*s(504)+1*s(505)+1*s(506)+1*s(507)+3*s(514)+1*s(515)+1*s(516)+1*s(517)+4*s(518)+4*s(519)+1*s(520)+1*s(521)+1*s(522)+1*s(523)+1*s(524)+1*s(525)+3*s(533)+1*s(534)+1*s(535)+1*s(536)+4*s(537)+4*s(538)+1*s(539)+1*s(540)+1*s(541)+1*s(542)+1*s(543)+1*s(544)+4*s(552)+4*s(553)+1*s(554)+1*s(555)+1*s(556)+1*s(557)+1*s(558)+1*s(559)+1*s(560)+1*s(561)+1*s(562)+4*s(570)+4*s(571)+1*s(572)+1*s(573)+1*s(574)+1*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+4*s(588)+4*s(589)+1*s(590)+1*s(591)+1*s(592)+1*s(593)+1*s(594)+1*s(595)+1*s(596)+4*s(601)+4*s(602)+1*s(603)+1*s(604)+1*s(605)+1*s(606)+1*s(607)+1*s(608)+1*s(609)+3*s(616)+1*s(617)+1*s(618)+1*s(619)+4*s(620)+4*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+3*s(635)+1*s(636)+1*s(637)+1*s(638)+4*s(639)+4*s(640)+1*s(641)+1*s(642)+1*s(643)+1*s(644)+1*s(645)+1*s(646)+4*s(654)+4*s(655)+1*s(656)+1*s(657)+1*s(658)+1*s(659)+1*s(660)+1*s(661)+1*s(662)+1*s(663)+1*s(664)+4*s(672)+4*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+1*s(679)+1*s(680)+1*s(681)+1*s(682)+1*s(726)+1*s(727)+1*s(728)+0
  Such that:it([55]) =< 1
s(728) =< V_n-1
s(726)+s(727) =< V_n-V_up_0-V_p_0+1
aux(658) =< V_n-3*V_p_0
aux(639) =< V_n-V_p_0
aux(644) =< V_n/2-1/2
aux(633) =< V_n/6
aux(665) =< V_n/6+1/3
aux(793) =< V_n/2-1
aux(794) =< V_n/2+V_up_0/3-2/3*V_p_0-1
aux(795) =< V_n/2-V_p_0
aux(796) =< V_n/3-1
aux(797) =< V_n/3-1/3
aux(798) =< V_n/3+V_up_0/2-V_p_0/2-5/6
aux(799) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(800) =< V_n/3-V_p_0/2-5/6
aux(801) =< 2/3*V_n-V_p_0
aux(802) =< 2/3*V_n-V_p_0-2/3
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(794)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(794)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(794)
aux(657)+it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
aux(672)+it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
aux(720)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(795)
aux(734)+it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(795)
it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+s(688) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(126)+s(670) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(121)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(795)
it(109)+it(112)+it(113)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(795)
s(632)+s(651) =< aux(798)
aux(657)+it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
aux(672)+it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
aux(720)+it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(799)
aux(734)+it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(799)
it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(799)
it(113)+it(121)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(800)
it(121)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(800)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(801)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(801)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(802)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(802)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(802)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(802)
aux(664) =< aux(644)
aux(650) =< aux(639)
aux(685) =< aux(795)*2
aux(667) =< aux(644)* (1/2)-1/2
aux(652) =< aux(795)
aux(651) =< aux(793)
aux(673) =< aux(658)
aux(649) =< aux(793)*2+2
aux(648) =< aux(793)*2+1
aux(727) =< aux(797)* (1/2)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+s(688) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(126)+s(670) =< aux(793)+aux(795)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126)+s(517)+s(637)+s(638) =< aux(797)+aux(802)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(793)+aux(795)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(796)+aux(799)
aux(734)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(125)+it(126) =< aux(633)+aux(794)
it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126)+s(517)+s(619) =< aux(797)+aux(802)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(720)+it(109)+it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(109)+it(111)+it(112)+it(113)+it(114)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(586) =< aux(793)+aux(795)
it(109)+it(111)+it(112)+it(113)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(568) =< aux(793)+aux(795)
it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530)+s(549) =< aux(665)+aux(800)
it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517)+s(535)+s(536) =< aux(797)+aux(802)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(672)+it(109)+it(111)+it(112)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
it(113)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(530) =< aux(665)+aux(800)
it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(517) =< aux(797)+aux(802)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(793)+aux(795)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(796)+aux(799)
aux(657)+it(109)+it(111)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126) =< aux(633)+aux(794)
s(632)+s(651) =< aux(727)+aux(798)
s(635) =< aux(734)
s(616) =< aux(720)
it(111)+it(112)+it(113)+it(114)+it(115)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488)+s(590) =< aux(796)+aux(801)
s(533) =< aux(672)
s(514) =< aux(657)
it(111)+it(112)+it(113)+it(114)+it(115)+it(121)+it(122)+it(123)+it(124)+it(125)+it(126)+s(488) =< aux(796)+aux(801)
s(488) =< it(109)*aux(644)
s(497) =< it(109)*aux(795)
s(486)+s(487) =< it(109)*aux(793)
s(498) =< it(109)*aux(639)
s(688) =< it(126)*aux(664)
aux(758) =< it(126)*aux(685)
s(686) =< it(126)*aux(650)
s(670) =< it(125)*aux(664)
aux(749) =< it(125)*aux(685)
s(668) =< it(125)*aux(650)
s(651) =< it(124)*aux(667)
s(637)+s(638) =< it(124)*aux(664)
s(650) =< it(124)*aux(652)
s(639)+s(640) =< it(124)*aux(651)
s(653) =< it(124)*aux(650)
s(636) =< it(124)*aux(673)
s(632) =< it(123)*aux(667)
s(619) =< it(123)*aux(664)
s(631) =< it(123)*aux(652)
s(620)+s(621) =< it(123)*aux(651)
s(634) =< it(123)*aux(650)
s(617)+s(618) =< it(123)*aux(673)
s(612) =< it(122)*aux(652)
s(601)+s(602) =< it(122)*aux(651)
s(614) =< it(122)*aux(650)
s(615) =< it(122)*aux(649)
s(613) =< it(122)*aux(648)
s(590) =< it(121)*aux(664)
s(599) =< it(121)*aux(652)
s(588)+s(589) =< it(121)*aux(651)
s(600) =< it(121)*aux(650)
s(586) =< it(115)*aux(664)
aux(696) =< it(115)*aux(685)
s(584) =< it(115)*aux(650)
s(568) =< it(114)*aux(664)
aux(687) =< it(114)*aux(685)
s(566) =< it(114)*aux(650)
s(549) =< it(113)*aux(667)
s(535)+s(536) =< it(113)*aux(664)
s(548) =< it(113)*aux(652)
s(537)+s(538) =< it(113)*aux(651)
s(551) =< it(113)*aux(650)
s(534) =< it(113)*aux(673)
s(530) =< it(112)*aux(667)
s(517) =< it(112)*aux(664)
s(529) =< it(112)*aux(652)
s(518)+s(519) =< it(112)*aux(651)
s(532) =< it(112)*aux(650)
s(515)+s(516) =< it(112)*aux(658)
s(510) =< it(111)*aux(652)
s(499)+s(500) =< it(111)*aux(651)
s(512) =< it(111)*aux(650)
s(513) =< it(111)*aux(649)
s(511) =< it(111)*aux(648)
s(689) =< aux(758)* (1/2)
s(671) =< aux(749)* (1/2)
s(587) =< aux(696)* (1/2)
s(569) =< aux(687)* (1/2)
s(672)+s(673) =< s(689)
s(674)+s(675) =< s(688)
s(676) =< s(688)
s(673)+s(683) =< s(686)
s(683)+s(684) =< s(686)
s(673)+s(683) =< aux(758)
s(683)+s(684) =< aux(758)
s(677)+s(678) =< s(684)
s(679) =< s(684)
s(680)+s(681) =< s(683)
s(682) =< s(683)
s(654)+s(655) =< s(671)
s(656)+s(657) =< s(670)
s(658) =< s(670)
s(655)+s(665) =< s(668)
s(665)+s(666) =< s(668)
s(655)+s(665) =< aux(749)
s(665)+s(666) =< aux(749)
s(659)+s(660) =< s(666)
s(661) =< s(666)
s(662)+s(663) =< s(665)
s(664) =< s(665)
s(635)+s(640)+s(647) =< s(653)
s(635)+s(647)+s(649) =< s(653)
s(639)+s(640) =< s(650)
s(639)+s(640) =< s(651)+s(650)
s(641)+s(642) =< s(649)
s(643) =< s(649)
s(644)+s(645) =< s(647)
s(646) =< s(647)
s(616)+s(621)+s(628) =< s(634)
s(616)+s(628)+s(630) =< s(634)
s(620)+s(621) =< s(631)
s(620)+s(621) =< s(632)+s(631)
s(622)+s(623) =< s(630)
s(624) =< s(630)
s(625)+s(626) =< s(628)
s(627) =< s(628)
s(603)+s(613) =< s(615)
s(602) =< s(615)
s(601)+s(610) =< s(614)
s(610)+s(611) =< s(614)
s(601)+s(610) =< s(613)
s(610)+s(611) =< s(613)
s(601)+s(602) =< s(612)
s(604)+s(605) =< s(611)
s(606) =< s(611)
s(607)+s(608) =< s(610)
s(609) =< s(610)
s(588)+s(597) =< s(600)
s(597)+s(598) =< s(600)
s(588)+s(589) =< s(599)
s(591)+s(592) =< s(598)
s(593) =< s(598)
s(594)+s(595) =< s(597)
s(596) =< s(597)
s(570)+s(571) =< s(587)
s(572)+s(573) =< s(586)
s(574) =< s(586)
s(571)+s(581) =< s(584)
s(581)+s(582) =< s(584)
s(571)+s(581) =< aux(696)
s(581)+s(582) =< aux(696)
s(575)+s(576) =< s(582)
s(577) =< s(582)
s(578)+s(579) =< s(581)
s(580) =< s(581)
s(552)+s(553) =< s(569)
s(554)+s(555) =< s(568)
s(556) =< s(568)
s(553)+s(563) =< s(566)
s(563)+s(564) =< s(566)
s(553)+s(563) =< aux(687)
s(563)+s(564) =< aux(687)
s(557)+s(558) =< s(564)
s(559) =< s(564)
s(560)+s(561) =< s(563)
s(562) =< s(563)
s(533)+s(538)+s(545) =< s(551)
s(533)+s(545)+s(547) =< s(551)
s(537)+s(538) =< s(548)
s(537)+s(538) =< s(549)+s(548)
s(539)+s(540) =< s(547)
s(541) =< s(547)
s(542)+s(543) =< s(545)
s(544) =< s(545)
s(514)+s(519)+s(526) =< s(532)
s(514)+s(526)+s(528) =< s(532)
s(518)+s(519) =< s(529)
s(518)+s(519) =< s(530)+s(529)
s(520)+s(521) =< s(528)
s(522) =< s(528)
s(523)+s(524) =< s(526)
s(525) =< s(526)
s(501)+s(511) =< s(513)
s(500) =< s(513)
s(499)+s(508) =< s(512)
s(508)+s(509) =< s(512)
s(499)+s(508) =< s(511)
s(508)+s(509) =< s(511)
s(499)+s(500) =< s(510)
s(502)+s(503) =< s(509)
s(504) =< s(509)
s(505)+s(506) =< s(508)
s(507) =< s(508)
s(486)+s(495) =< s(498)
s(495)+s(496) =< s(498)
s(486)+s(487) =< s(497)
s(489)+s(490) =< s(496)
s(491) =< s(496)
s(492)+s(493) =< s(495)
s(494) =< s(495)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n>=2*V_p_0+2*V_up_0+1] 

* Chain [68]: 1*s(709)+1*s(710)+1*s(711)+4
  Such that:s(707) =< V_p_0
s(709)+s(710) =< s(707)
s(711) =< s(707)
s(708) >= V_p_0
s(711) >= s(708)
s(709)+s(710) >= s(708)

  with precondition: [V_up_0=1,B=6,D=0,2*V_p_0=V_n,2*V_p_0=C,V_p_0>=1] 

* Chain [67]: 1*s(714)+1*s(715)+1*s(716)+4
  Such that:s(712) =< V_p_0
s(714)+s(715) =< s(712)
s(716) =< s(712)
s(713) >= V_p_0
s(714)+s(715) >= s(713)
s(716) >= s(713)

  with precondition: [V_up_0=1,B=6,D=0,2*V_p_0=V_n,2*V_p_0=C,V_p_0>=1] 

* Chain [65]: 1*s(729)+4
  Such that:s(729) =< 1
s(729) >= 1

  with precondition: [V_n=1,V_up_0=1,V_p_0=1,B=6,C=1,D=0] 

* Chain [62]: 4
  with precondition: [V_up_0=1,V_p_0=1,B=6,D=0,V_n=C,0>=V_n] 

* Chain [61]: 4
  with precondition: [V_up_0=1,V_p_0=1,B=6,D=0,V_n=C,0>=V_n] 


#### Cost of loops [127] 

 * loop 127:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) -> [eval_sipmamergesort_init_bb14_in(V_n',V_i_5',B')] 
1
#### Cost of phase [127]:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) -> [eval_sipmamergesort_init_bb14_in(V_n',V_i_5',B')] 
1*it(127)+0
  Such that:it(127) =< V_n-V_i_5+1
it(127) =< V_n-V_i_5-V_n'+V_i_5'
it(127) >= V_n-V_i_5-V_n'+V_i_5'

#### Cost of chains of eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B):
* Chain [[127],128]: 1*it(127)+0
  Such that:it(127) =< V_n-V_i_5+1
it(127) >= V_n-V_i_5+1

  with precondition: [B=7,V_i_5>=1,V_n>=V_i_5] 

* Chain [128]: 0
  with precondition: [B=7,V_i_5>=1,V_i_5>=V_n+1] 


#### Cost of chains of eval_sipmamergesort_init_bb13_in(V_n,V_52,B):
* Chain [132]: 1
  with precondition: [V_52=0,0>=V_n] 

* Chain [131]: 1*s(730)+1
  Such that:s(730) =< V_n
s(730) >= V_n

  with precondition: [V_52=0,V_n>=1] 

* Chain [130]: 0
  with precondition: [0>=V_52+1] 

* Chain [129]: 0
  with precondition: [V_52>=1] 


#### Cost of chains of eval_sipmamergesort_init_start(V_n,B):
* Chain [145]: 2*s(731)+6
  Such that:aux(804) =< 1
s(731) =< aux(804)
aux(805) >= 1
s(731) >= aux(805)

  with precondition: [V_n=1] 

* Chain [144]: 1*s(735)+1*s(736)+1*s(737)+1*s(738)+6
  Such that:s(733) =< 1
s(738) =< 2
s(735)+s(736) =< s(733)
s(737) =< s(733)
s(734) >= 1
s(738) >= 2
s(737) >= s(734)
s(735)+s(736) >= s(734)

  with precondition: [V_n=2] 

* Chain [143]: 1*s(741)+1*s(742)+1*s(743)+1*s(744)+6
  Such that:s(739) =< 1
s(744) =< 2
s(741)+s(742) =< s(739)
s(743) =< s(739)
s(740) >= 1
s(744) >= 2
s(741)+s(742) >= s(740)
s(743) >= s(740)

  with precondition: [V_n=2] 

* Chain [142]: 6
  with precondition: [0>=V_n] 

* Chain [141]: 6
  with precondition: [0>=V_n] 

* Chain [140]: 4*s(745)+1*s(746)+1*s(747)+1*s(748)+5*s(766)+5*s(767)+2*s(768)+5*s(769)+5*s(770)+5*s(771)+5*s(772)+2*s(773)+2*s(774)+5*s(775)+5*s(776)+2*s(778)+1*s(789)+1*s(790)+1*s(791)+1*s(792)+1*s(793)+1*s(794)+1*s(795)+1*s(796)+4*s(814)+4*s(815)+1*s(817)+3*s(818)+4*s(820)+4*s(821)+1*s(823)+1*s(824)+3*s(825)+4*s(827)+4*s(828)+4*s(833)+4*s(834)+4*s(841)+4*s(842)+1*s(844)+3*s(845)+4*s(847)+4*s(848)+1*s(850)+1*s(851)+3*s(852)+4*s(854)+4*s(855)+4*s(860)+4*s(861)+4*s(867)+4*s(868)+1*s(869)+1*s(870)+1*s(871)+1*s(874)+1*s(875)+1*s(876)+1*s(877)+1*s(878)+1*s(879)+4*s(880)+4*s(881)+1*s(882)+1*s(883)+1*s(884)+1*s(887)+1*s(888)+1*s(889)+1*s(890)+1*s(891)+1*s(892)+1*s(895)+1*s(896)+1*s(897)+1*s(898)+1*s(899)+1*s(900)+1*s(903)+1*s(904)+1*s(905)+1*s(906)+1*s(907)+1*s(908)+1*s(909)+1*s(912)+1*s(913)+1*s(914)+1*s(915)+1*s(916)+1*s(917)+1*s(920)+1*s(921)+1*s(922)+1*s(923)+1*s(924)+1*s(925)+4*s(926)+4*s(927)+1*s(928)+1*s(929)+1*s(930)+1*s(933)+1*s(934)+1*s(935)+1*s(936)+1*s(937)+1*s(938)+4*s(939)+4*s(940)+1*s(941)+1*s(942)+1*s(943)+1*s(946)+1*s(947)+1*s(948)+1*s(949)+1*s(950)+1*s(951)+1*s(954)+1*s(955)+1*s(956)+1*s(957)+1*s(958)+1*s(959)+1*s(962)+1*s(963)+1*s(964)+1*s(965)+1*s(966)+1*s(967)+1*s(968)+1*s(971)+1*s(972)+1*s(973)+1*s(974)+1*s(975)+1*s(976)+1*s(979)+1*s(980)+1*s(981)+1*s(982)+1*s(983)+1*s(984)+1
  Such that:s(745) =< 1
s(749) =< V_n-3
s(748) =< V_n-2
s(755) =< V_n/2-4/3
s(751) =< V_n/2-1/2
s(752) =< V_n/3-1
s(757) =< V_n/3-5/6
s(759) =< V_n/3-4/3
s(760) =< V_n/6+1/3
s(761) =< 2/3*V_n-1
s(762) =< 2/3*V_n-5/3
aux(806) =< V_n-1
aux(807) =< V_n/2-1
aux(808) =< V_n/3-1/3
s(746)+s(747) =< aux(806)
s(765)+s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776) =< s(755)
s(766)+s(767)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< s(755)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(778)+s(779) =< s(755)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(778)+s(780) =< s(755)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< s(755)
s(765)+s(766)+s(768)+s(769)+s(770)+s(771)+s(773)+s(774)+s(775)+s(776) =< aux(807)
s(766)+s(769)+s(770)+s(771)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< aux(807)
s(766)+s(768)+s(769)+s(770)+s(771)+s(774)+s(775)+s(776)+s(778)+s(779) =< aux(807)
s(766)+s(768)+s(769)+s(770)+s(771)+s(773)+s(775)+s(776)+s(778)+s(780) =< aux(807)
s(766)+s(768)+s(769)+s(770)+s(771)+s(773)+s(774)+s(775)+s(778)+s(781) =< aux(807)
s(766)+s(768)+s(769)+s(770)+s(771)+s(773)+s(774)+s(776)+s(778)+s(782) =< aux(807)
s(766)+s(768)+s(769)+s(771)+s(773)+s(774)+s(775)+s(776)+s(778)+s(783) =< aux(807)
s(766)+s(768)+s(770)+s(771)+s(773)+s(774)+s(775)+s(776)+s(778)+s(784) =< aux(807)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(807)
s(766)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(807)
s(785)+s(786) =< s(757)
s(765)+s(766)+s(768)+s(769)+s(770)+s(773)+s(774)+s(775)+s(776) =< aux(808)
s(766)+s(769)+s(770)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< aux(808)
s(766)+s(768)+s(769)+s(770)+s(774)+s(775)+s(776)+s(778)+s(779) =< aux(808)
s(766)+s(768)+s(769)+s(770)+s(773)+s(775)+s(776)+s(778)+s(780) =< aux(808)
s(766)+s(767)+s(768)+s(769)+s(770)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(808)
s(766)+s(768)+s(769)+s(770)+s(771)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(808)
s(766)+s(768)+s(769)+s(770)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(808)
s(768)+s(771)+s(773)+s(774)+s(775)+s(776)+s(787) =< s(759)
s(771)+s(773)+s(774)+s(775)+s(776)+s(787)+s(788) =< s(759)
s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(789) =< s(761)
s(767)+s(768)+s(769)+s(770)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(789)+s(790) =< s(761)
s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(791) =< s(762)
s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(791)+s(792) =< s(762)
s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(791)+s(793)+s(794) =< s(762)
s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(791)+s(795)+s(796) =< s(762)
s(799) =< s(751)
s(800) =< aux(806)
s(801) =< aux(807)*2
s(802) =< s(751)* (1/2)-1/2
s(803) =< aux(807)
s(805) =< s(749)
s(806) =< aux(807)*2+2
s(807) =< aux(807)*2+1
s(808) =< aux(807)* (2/3)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(778)+s(781) =< aux(807)+aux(807)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< aux(807)+aux(807)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< s(760)+s(755)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(776)+s(778)+s(782) =< aux(807)+aux(807)
s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(791)+s(793)+s(794) =< aux(808)+s(762)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(778)+s(780) =< aux(807)+aux(807)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(778)+s(780) =< s(760)+s(755)
s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(791)+s(792) =< aux(808)+s(762)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(778)+s(779) =< aux(807)+aux(807)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(778)+s(779) =< s(760)+s(755)
s(767)+s(768)+s(769)+s(770)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(789)+s(790) =< s(752)+s(761)
s(766)+s(767)+s(768)+s(769)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(783) =< aux(807)+aux(807)
s(766)+s(767)+s(768)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(784) =< aux(807)+aux(807)
s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(791)+s(795)+s(796) =< aux(808)+s(762)
s(766)+s(767)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< aux(807)+aux(807)
s(766)+s(767)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< s(760)+s(755)
s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(791) =< aux(808)+s(762)
s(765)+s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776) =< aux(807)+aux(807)
s(765)+s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776) =< s(760)+s(755)
s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778)+s(789) =< s(752)+s(761)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(778) =< s(808)+aux(808)
s(785)+s(786) =< s(760)+s(757)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(775)+s(776)+s(778)+s(780) =< s(808)+aux(808)
s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(774)+s(775)+s(776)+s(778)+s(779) =< s(808)+aux(808)
s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(787)+s(788) =< s(760)+s(759)
s(766)+s(767)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(777)+s(778) =< s(808)+aux(808)
s(768)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776)+s(787) =< s(760)+s(759)
s(765)+s(766)+s(767)+s(768)+s(769)+s(770)+s(771)+s(772)+s(773)+s(774)+s(775)+s(776) =< s(808)+aux(808)
s(781) =< s(776)*s(799)
s(809) =< s(776)*s(801)
s(810) =< s(776)*s(800)
s(782) =< s(775)*s(799)
s(811) =< s(775)*s(801)
s(812) =< s(775)*s(800)
s(786) =< s(774)*s(802)
s(793)+s(794) =< s(774)*s(799)
s(813) =< s(774)*s(803)
s(814)+s(815) =< s(774)*s(803)
s(816) =< s(774)*s(800)
s(817) =< s(774)*s(805)
s(818) =< s(780)
s(785) =< s(773)*s(802)
s(792) =< s(773)*s(799)
s(819) =< s(773)*s(803)
s(820)+s(821) =< s(773)*s(803)
s(822) =< s(773)*s(800)
s(823)+s(824) =< s(773)*s(805)
s(825) =< s(779)
s(826) =< s(772)*s(803)
s(827)+s(828) =< s(772)*s(803)
s(829) =< s(772)*s(800)
s(830) =< s(772)*s(806)
s(831) =< s(772)*s(807)
s(790) =< s(771)*s(799)
s(832) =< s(771)*s(803)
s(833)+s(834) =< s(771)*s(803)
s(835) =< s(771)*s(800)
s(783) =< s(770)*s(799)
s(836) =< s(770)*s(801)
s(837) =< s(770)*s(800)
s(784) =< s(769)*s(799)
s(838) =< s(769)*s(801)
s(839) =< s(769)*s(800)
s(788) =< s(768)*s(802)
s(795)+s(796) =< s(768)*s(799)
s(840) =< s(768)*s(803)
s(841)+s(842) =< s(768)*s(803)
s(843) =< s(768)*s(800)
s(844) =< s(768)*s(805)
s(845) =< s(777)
s(787) =< s(778)*s(802)
s(791) =< s(778)*s(799)
s(846) =< s(778)*s(803)
s(847)+s(848) =< s(778)*s(803)
s(849) =< s(778)*s(800)
s(850)+s(851) =< s(778)*s(749)
s(852) =< s(765)
s(853) =< s(767)*s(803)
s(854)+s(855) =< s(767)*s(803)
s(856) =< s(767)*s(800)
s(857) =< s(767)*s(806)
s(858) =< s(767)*s(807)
s(789) =< s(766)*s(751)
s(859) =< s(766)*aux(807)
s(860)+s(861) =< s(766)*aux(807)
s(862) =< s(766)*aux(806)
s(863) =< s(809)* (1/2)
s(864) =< s(811)* (1/2)
s(865) =< s(836)* (1/2)
s(866) =< s(838)* (1/2)
s(867)+s(868) =< s(863)
s(869)+s(870) =< s(781)
s(871) =< s(781)
s(868)+s(872) =< s(810)
s(872)+s(873) =< s(810)
s(868)+s(872) =< s(809)
s(872)+s(873) =< s(809)
s(874)+s(875) =< s(873)
s(876) =< s(873)
s(877)+s(878) =< s(872)
s(879) =< s(872)
s(880)+s(881) =< s(864)
s(882)+s(883) =< s(782)
s(884) =< s(782)
s(881)+s(885) =< s(812)
s(885)+s(886) =< s(812)
s(881)+s(885) =< s(811)
s(885)+s(886) =< s(811)
s(887)+s(888) =< s(886)
s(889) =< s(886)
s(890)+s(891) =< s(885)
s(892) =< s(885)
s(815)+s(818)+s(893) =< s(816)
s(818)+s(893)+s(894) =< s(816)
s(814)+s(815) =< s(813)
s(814)+s(815) =< s(786)+s(813)
s(895)+s(896) =< s(894)
s(897) =< s(894)
s(898)+s(899) =< s(893)
s(900) =< s(893)
s(821)+s(825)+s(901) =< s(822)
s(825)+s(901)+s(902) =< s(822)
s(820)+s(821) =< s(819)
s(820)+s(821) =< s(785)+s(819)
s(903)+s(904) =< s(902)
s(905) =< s(902)
s(906)+s(907) =< s(901)
s(908) =< s(901)
s(831)+s(909) =< s(830)
s(828) =< s(830)
s(827)+s(910) =< s(829)
s(910)+s(911) =< s(829)
s(827)+s(910) =< s(831)
s(910)+s(911) =< s(831)
s(827)+s(828) =< s(826)
s(912)+s(913) =< s(911)
s(914) =< s(911)
s(915)+s(916) =< s(910)
s(917) =< s(910)
s(833)+s(918) =< s(835)
s(918)+s(919) =< s(835)
s(833)+s(834) =< s(832)
s(920)+s(921) =< s(919)
s(922) =< s(919)
s(923)+s(924) =< s(918)
s(925) =< s(918)
s(926)+s(927) =< s(865)
s(928)+s(929) =< s(783)
s(930) =< s(783)
s(927)+s(931) =< s(837)
s(931)+s(932) =< s(837)
s(927)+s(931) =< s(836)
s(931)+s(932) =< s(836)
s(933)+s(934) =< s(932)
s(935) =< s(932)
s(936)+s(937) =< s(931)
s(938) =< s(931)
s(939)+s(940) =< s(866)
s(941)+s(942) =< s(784)
s(943) =< s(784)
s(940)+s(944) =< s(839)
s(944)+s(945) =< s(839)
s(940)+s(944) =< s(838)
s(944)+s(945) =< s(838)
s(946)+s(947) =< s(945)
s(948) =< s(945)
s(949)+s(950) =< s(944)
s(951) =< s(944)
s(842)+s(845)+s(952) =< s(843)
s(845)+s(952)+s(953) =< s(843)
s(841)+s(842) =< s(840)
s(841)+s(842) =< s(788)+s(840)
s(954)+s(955) =< s(953)
s(956) =< s(953)
s(957)+s(958) =< s(952)
s(959) =< s(952)
s(848)+s(852)+s(960) =< s(849)
s(852)+s(960)+s(961) =< s(849)
s(847)+s(848) =< s(846)
s(847)+s(848) =< s(787)+s(846)
s(962)+s(963) =< s(961)
s(964) =< s(961)
s(965)+s(966) =< s(960)
s(967) =< s(960)
s(858)+s(968) =< s(857)
s(855) =< s(857)
s(854)+s(969) =< s(856)
s(969)+s(970) =< s(856)
s(854)+s(969) =< s(858)
s(969)+s(970) =< s(858)
s(854)+s(855) =< s(853)
s(971)+s(972) =< s(970)
s(973) =< s(970)
s(974)+s(975) =< s(969)
s(976) =< s(969)
s(860)+s(977) =< s(862)
s(977)+s(978) =< s(862)
s(860)+s(861) =< s(859)
s(979)+s(980) =< s(978)
s(981) =< s(978)
s(982)+s(983) =< s(977)
s(984) =< s(977)
s(763) >= V_n/2+1/2
aux(809) >= 1
s(745) >= aux(809)
s(764) >= aux(809)
s(764) >= s(764)
s(798) >= s(764)
s(748) >= s(745)*s(763)
s(746)+s(747) >= s(745)*s(798)

  with precondition: [V_n>=3] 

* Chain [139]: 4*s(985)+1*s(986)+1*s(987)+1*s(988)+5*s(1006)+5*s(1007)+2*s(1008)+5*s(1009)+5*s(1010)+5*s(1011)+5*s(1012)+2*s(1013)+2*s(1014)+5*s(1015)+5*s(1016)+2*s(1018)+1*s(1029)+1*s(1030)+1*s(1031)+1*s(1032)+1*s(1033)+1*s(1034)+1*s(1035)+1*s(1036)+4*s(1054)+4*s(1055)+1*s(1057)+3*s(1058)+4*s(1060)+4*s(1061)+1*s(1063)+1*s(1064)+3*s(1065)+4*s(1067)+4*s(1068)+4*s(1073)+4*s(1074)+4*s(1081)+4*s(1082)+1*s(1084)+3*s(1085)+4*s(1087)+4*s(1088)+1*s(1090)+1*s(1091)+3*s(1092)+4*s(1094)+4*s(1095)+4*s(1100)+4*s(1101)+4*s(1107)+4*s(1108)+1*s(1109)+1*s(1110)+1*s(1111)+1*s(1114)+1*s(1115)+1*s(1116)+1*s(1117)+1*s(1118)+1*s(1119)+4*s(1120)+4*s(1121)+1*s(1122)+1*s(1123)+1*s(1124)+1*s(1127)+1*s(1128)+1*s(1129)+1*s(1130)+1*s(1131)+1*s(1132)+1*s(1135)+1*s(1136)+1*s(1137)+1*s(1138)+1*s(1139)+1*s(1140)+1*s(1143)+1*s(1144)+1*s(1145)+1*s(1146)+1*s(1147)+1*s(1148)+1*s(1149)+1*s(1152)+1*s(1153)+1*s(1154)+1*s(1155)+1*s(1156)+1*s(1157)+1*s(1160)+1*s(1161)+1*s(1162)+1*s(1163)+1*s(1164)+1*s(1165)+4*s(1166)+4*s(1167)+1*s(1168)+1*s(1169)+1*s(1170)+1*s(1173)+1*s(1174)+1*s(1175)+1*s(1176)+1*s(1177)+1*s(1178)+4*s(1179)+4*s(1180)+1*s(1181)+1*s(1182)+1*s(1183)+1*s(1186)+1*s(1187)+1*s(1188)+1*s(1189)+1*s(1190)+1*s(1191)+1*s(1194)+1*s(1195)+1*s(1196)+1*s(1197)+1*s(1198)+1*s(1199)+1*s(1202)+1*s(1203)+1*s(1204)+1*s(1205)+1*s(1206)+1*s(1207)+1*s(1208)+1*s(1211)+1*s(1212)+1*s(1213)+1*s(1214)+1*s(1215)+1*s(1216)+1*s(1219)+1*s(1220)+1*s(1221)+1*s(1222)+1*s(1223)+1*s(1224)+1
  Such that:s(985) =< 1
s(989) =< V_n-3
s(988)+s(987) =< V_n-2
s(995) =< V_n/2-4/3
s(991) =< V_n/2-1/2
s(992) =< V_n/3-1
s(997) =< V_n/3-5/6
s(999) =< V_n/3-4/3
s(1000) =< V_n/6+1/3
s(1001) =< 2/3*V_n-1
s(1002) =< 2/3*V_n-5/3
aux(810) =< V_n-1
aux(811) =< V_n/2-1
aux(812) =< V_n/3-1/3
s(986) =< aux(810)
s(1005)+s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016) =< s(995)
s(1006)+s(1007)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< s(995)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< s(995)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< s(995)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< s(995)
s(1005)+s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016) =< aux(811)
s(1006)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1018)+s(1021) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1016)+s(1018)+s(1022) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1023) =< aux(811)
s(1006)+s(1008)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1024) =< aux(811)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(811)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(811)
s(1025)+s(1026) =< s(997)
s(1005)+s(1006)+s(1008)+s(1009)+s(1010)+s(1013)+s(1014)+s(1015)+s(1016) =< aux(812)
s(1006)+s(1009)+s(1010)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< aux(812)
s(1006)+s(1008)+s(1009)+s(1010)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< aux(812)
s(1006)+s(1008)+s(1009)+s(1010)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< aux(812)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(812)
s(1006)+s(1008)+s(1009)+s(1010)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(812)
s(1006)+s(1008)+s(1009)+s(1010)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(812)
s(1008)+s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1027) =< s(999)
s(1011)+s(1013)+s(1014)+s(1015)+s(1016)+s(1027)+s(1028) =< s(999)
s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1029) =< s(1001)
s(1007)+s(1008)+s(1009)+s(1010)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1029)+s(1030) =< s(1001)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1031) =< s(1002)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1031)+s(1032) =< s(1002)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1031)+s(1033)+s(1034) =< s(1002)
s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1031)+s(1035)+s(1036) =< s(1002)
s(1039) =< s(991)
s(1040) =< aux(810)
s(1041) =< aux(811)*2
s(1042) =< s(991)* (1/2)-1/2
s(1043) =< aux(811)
s(1045) =< s(989)
s(1046) =< aux(811)*2+2
s(1047) =< aux(811)*2+1
s(1048) =< aux(811)* (2/3)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1018)+s(1021) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< s(1000)+s(995)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1016)+s(1018)+s(1022) =< aux(811)+aux(811)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1031)+s(1033)+s(1034) =< aux(812)+s(1002)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< s(1000)+s(995)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1031)+s(1032) =< aux(812)+s(1002)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< s(1000)+s(995)
s(1007)+s(1008)+s(1009)+s(1010)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1029)+s(1030) =< s(992)+s(1001)
s(1006)+s(1007)+s(1008)+s(1009)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1023) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1008)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1024) =< aux(811)+aux(811)
s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1031)+s(1035)+s(1036) =< aux(812)+s(1002)
s(1006)+s(1007)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< aux(811)+aux(811)
s(1006)+s(1007)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< s(1000)+s(995)
s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1031) =< aux(812)+s(1002)
s(1005)+s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016) =< aux(811)+aux(811)
s(1005)+s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016) =< s(1000)+s(995)
s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018)+s(1029) =< s(992)+s(1001)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1018) =< s(1048)+aux(812)
s(1025)+s(1026) =< s(1000)+s(997)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1015)+s(1016)+s(1018)+s(1020) =< s(1048)+aux(812)
s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1014)+s(1015)+s(1016)+s(1018)+s(1019) =< s(1048)+aux(812)
s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1027)+s(1028) =< s(1000)+s(999)
s(1006)+s(1007)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1017)+s(1018) =< s(1048)+aux(812)
s(1008)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016)+s(1027) =< s(1000)+s(999)
s(1005)+s(1006)+s(1007)+s(1008)+s(1009)+s(1010)+s(1011)+s(1012)+s(1013)+s(1014)+s(1015)+s(1016) =< s(1048)+aux(812)
s(1021) =< s(1016)*s(1039)
s(1049) =< s(1016)*s(1041)
s(1050) =< s(1016)*s(1040)
s(1022) =< s(1015)*s(1039)
s(1051) =< s(1015)*s(1041)
s(1052) =< s(1015)*s(1040)
s(1026) =< s(1014)*s(1042)
s(1033)+s(1034) =< s(1014)*s(1039)
s(1053) =< s(1014)*s(1043)
s(1054)+s(1055) =< s(1014)*s(1043)
s(1056) =< s(1014)*s(1040)
s(1057) =< s(1014)*s(1045)
s(1058) =< s(1020)
s(1025) =< s(1013)*s(1042)
s(1032) =< s(1013)*s(1039)
s(1059) =< s(1013)*s(1043)
s(1060)+s(1061) =< s(1013)*s(1043)
s(1062) =< s(1013)*s(1040)
s(1063)+s(1064) =< s(1013)*s(1045)
s(1065) =< s(1019)
s(1066) =< s(1012)*s(1043)
s(1067)+s(1068) =< s(1012)*s(1043)
s(1069) =< s(1012)*s(1040)
s(1070) =< s(1012)*s(1046)
s(1071) =< s(1012)*s(1047)
s(1030) =< s(1011)*s(1039)
s(1072) =< s(1011)*s(1043)
s(1073)+s(1074) =< s(1011)*s(1043)
s(1075) =< s(1011)*s(1040)
s(1023) =< s(1010)*s(1039)
s(1076) =< s(1010)*s(1041)
s(1077) =< s(1010)*s(1040)
s(1024) =< s(1009)*s(1039)
s(1078) =< s(1009)*s(1041)
s(1079) =< s(1009)*s(1040)
s(1028) =< s(1008)*s(1042)
s(1035)+s(1036) =< s(1008)*s(1039)
s(1080) =< s(1008)*s(1043)
s(1081)+s(1082) =< s(1008)*s(1043)
s(1083) =< s(1008)*s(1040)
s(1084) =< s(1008)*s(1045)
s(1085) =< s(1017)
s(1027) =< s(1018)*s(1042)
s(1031) =< s(1018)*s(1039)
s(1086) =< s(1018)*s(1043)
s(1087)+s(1088) =< s(1018)*s(1043)
s(1089) =< s(1018)*s(1040)
s(1090)+s(1091) =< s(1018)*s(989)
s(1092) =< s(1005)
s(1093) =< s(1007)*s(1043)
s(1094)+s(1095) =< s(1007)*s(1043)
s(1096) =< s(1007)*s(1040)
s(1097) =< s(1007)*s(1046)
s(1098) =< s(1007)*s(1047)
s(1029) =< s(1006)*s(991)
s(1099) =< s(1006)*aux(811)
s(1100)+s(1101) =< s(1006)*aux(811)
s(1102) =< s(1006)*aux(810)
s(1103) =< s(1049)* (1/2)
s(1104) =< s(1051)* (1/2)
s(1105) =< s(1076)* (1/2)
s(1106) =< s(1078)* (1/2)
s(1107)+s(1108) =< s(1103)
s(1109)+s(1110) =< s(1021)
s(1111) =< s(1021)
s(1108)+s(1112) =< s(1050)
s(1112)+s(1113) =< s(1050)
s(1108)+s(1112) =< s(1049)
s(1112)+s(1113) =< s(1049)
s(1114)+s(1115) =< s(1113)
s(1116) =< s(1113)
s(1117)+s(1118) =< s(1112)
s(1119) =< s(1112)
s(1120)+s(1121) =< s(1104)
s(1122)+s(1123) =< s(1022)
s(1124) =< s(1022)
s(1121)+s(1125) =< s(1052)
s(1125)+s(1126) =< s(1052)
s(1121)+s(1125) =< s(1051)
s(1125)+s(1126) =< s(1051)
s(1127)+s(1128) =< s(1126)
s(1129) =< s(1126)
s(1130)+s(1131) =< s(1125)
s(1132) =< s(1125)
s(1055)+s(1058)+s(1133) =< s(1056)
s(1058)+s(1133)+s(1134) =< s(1056)
s(1054)+s(1055) =< s(1053)
s(1054)+s(1055) =< s(1026)+s(1053)
s(1135)+s(1136) =< s(1134)
s(1137) =< s(1134)
s(1138)+s(1139) =< s(1133)
s(1140) =< s(1133)
s(1061)+s(1065)+s(1141) =< s(1062)
s(1065)+s(1141)+s(1142) =< s(1062)
s(1060)+s(1061) =< s(1059)
s(1060)+s(1061) =< s(1025)+s(1059)
s(1143)+s(1144) =< s(1142)
s(1145) =< s(1142)
s(1146)+s(1147) =< s(1141)
s(1148) =< s(1141)
s(1071)+s(1149) =< s(1070)
s(1068) =< s(1070)
s(1067)+s(1150) =< s(1069)
s(1150)+s(1151) =< s(1069)
s(1067)+s(1150) =< s(1071)
s(1150)+s(1151) =< s(1071)
s(1067)+s(1068) =< s(1066)
s(1152)+s(1153) =< s(1151)
s(1154) =< s(1151)
s(1155)+s(1156) =< s(1150)
s(1157) =< s(1150)
s(1073)+s(1158) =< s(1075)
s(1158)+s(1159) =< s(1075)
s(1073)+s(1074) =< s(1072)
s(1160)+s(1161) =< s(1159)
s(1162) =< s(1159)
s(1163)+s(1164) =< s(1158)
s(1165) =< s(1158)
s(1166)+s(1167) =< s(1105)
s(1168)+s(1169) =< s(1023)
s(1170) =< s(1023)
s(1167)+s(1171) =< s(1077)
s(1171)+s(1172) =< s(1077)
s(1167)+s(1171) =< s(1076)
s(1171)+s(1172) =< s(1076)
s(1173)+s(1174) =< s(1172)
s(1175) =< s(1172)
s(1176)+s(1177) =< s(1171)
s(1178) =< s(1171)
s(1179)+s(1180) =< s(1106)
s(1181)+s(1182) =< s(1024)
s(1183) =< s(1024)
s(1180)+s(1184) =< s(1079)
s(1184)+s(1185) =< s(1079)
s(1180)+s(1184) =< s(1078)
s(1184)+s(1185) =< s(1078)
s(1186)+s(1187) =< s(1185)
s(1188) =< s(1185)
s(1189)+s(1190) =< s(1184)
s(1191) =< s(1184)
s(1082)+s(1085)+s(1192) =< s(1083)
s(1085)+s(1192)+s(1193) =< s(1083)
s(1081)+s(1082) =< s(1080)
s(1081)+s(1082) =< s(1028)+s(1080)
s(1194)+s(1195) =< s(1193)
s(1196) =< s(1193)
s(1197)+s(1198) =< s(1192)
s(1199) =< s(1192)
s(1088)+s(1092)+s(1200) =< s(1089)
s(1092)+s(1200)+s(1201) =< s(1089)
s(1087)+s(1088) =< s(1086)
s(1087)+s(1088) =< s(1027)+s(1086)
s(1202)+s(1203) =< s(1201)
s(1204) =< s(1201)
s(1205)+s(1206) =< s(1200)
s(1207) =< s(1200)
s(1098)+s(1208) =< s(1097)
s(1095) =< s(1097)
s(1094)+s(1209) =< s(1096)
s(1209)+s(1210) =< s(1096)
s(1094)+s(1209) =< s(1098)
s(1209)+s(1210) =< s(1098)
s(1094)+s(1095) =< s(1093)
s(1211)+s(1212) =< s(1210)
s(1213) =< s(1210)
s(1214)+s(1215) =< s(1209)
s(1216) =< s(1209)
s(1100)+s(1217) =< s(1102)
s(1217)+s(1218) =< s(1102)
s(1100)+s(1101) =< s(1099)
s(1219)+s(1220) =< s(1218)
s(1221) =< s(1218)
s(1222)+s(1223) =< s(1217)
s(1224) =< s(1217)
s(1003) >= V_n/2+1/2
aux(813) >= 1
s(985) >= aux(813)
s(1004) >= aux(813)
s(1004) >= s(1004)
s(1038) >= s(1004)
s(987)+s(988) >= s(985)*s(1003)
s(986) >= s(985)*s(1038)

  with precondition: [V_n>=3] 

* Chain [138]: 1*s(1239)+1*s(1240)+1*s(1241)+5*s(1243)+5*s(1244)+2*s(1245)+5*s(1246)+5*s(1247)+5*s(1248)+5*s(1249)+2*s(1250)+2*s(1251)+5*s(1252)+5*s(1253)+2*s(1255)+1*s(1264)+1*s(1265)+1*s(1266)+1*s(1267)+1*s(1268)+1*s(1269)+1*s(1270)+1*s(1271)+3*s(1279)+3*s(1280)+3*s(1281)+1*s(1282)+1*s(1283)+3*s(1284)+4*s(1286)+4*s(1287)+4*s(1294)+4*s(1295)+1*s(1297)+4*s(1299)+4*s(1300)+1*s(1302)+1*s(1303)+4*s(1305)+4*s(1306)+4*s(1311)+4*s(1312)+4*s(1319)+4*s(1320)+1*s(1322)+4*s(1324)+4*s(1325)+4*s(1328)+4*s(1329)+4*s(1337)+4*s(1338)+1*s(1339)+1*s(1340)+1*s(1341)+1*s(1344)+1*s(1345)+1*s(1346)+1*s(1347)+1*s(1348)+1*s(1349)+4*s(1350)+4*s(1351)+1*s(1352)+1*s(1353)+1*s(1354)+1*s(1357)+1*s(1358)+1*s(1359)+1*s(1360)+1*s(1361)+1*s(1362)+1*s(1365)+1*s(1366)+1*s(1367)+1*s(1368)+1*s(1369)+1*s(1370)+1*s(1373)+1*s(1374)+1*s(1375)+1*s(1376)+1*s(1377)+1*s(1378)+1*s(1379)+1*s(1382)+1*s(1383)+1*s(1384)+1*s(1385)+1*s(1386)+1*s(1387)+1*s(1390)+1*s(1391)+1*s(1392)+1*s(1393)+1*s(1394)+1*s(1395)+4*s(1396)+4*s(1397)+1*s(1398)+1*s(1399)+1*s(1400)+1*s(1403)+1*s(1404)+1*s(1405)+1*s(1406)+1*s(1407)+1*s(1408)+4*s(1409)+4*s(1410)+1*s(1411)+1*s(1412)+1*s(1413)+1*s(1416)+1*s(1417)+1*s(1418)+1*s(1419)+1*s(1420)+1*s(1421)+1*s(1424)+1*s(1425)+1*s(1426)+1*s(1427)+1*s(1428)+1*s(1429)+1*s(1432)+1*s(1433)+1*s(1434)+1*s(1435)+1*s(1436)+1*s(1437)+1*s(1438)+1*s(1441)+1*s(1442)+1*s(1443)+1*s(1444)+1*s(1445)+1*s(1446)+1*s(1449)+1*s(1450)+1*s(1451)+1*s(1452)+1*s(1453)+1*s(1454)+5
  Such that:s(1228) =< V_n-3
s(1229) =< V_n-1
s(1235) =< V_n/2
s(1227) =< V_n/2-4/3
s(1225) =< V_n/3-5/6
s(1232) =< V_n/3-4/3
s(1236) =< V_n/3-1/3
s(1226)+s(1225) =< V_n/4
s(1233) =< V_n/4-1/2
s(1230) =< 2/3*V_n-1
s(1231) =< 2/3*V_n-5/3
aux(814) =< V_n/2-1
s(1239)+s(1240) =< s(1235)
s(1241) =< s(1235)
s(1242)+s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253) =< s(1227)
s(1243)+s(1244)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1254)+s(1255) =< s(1227)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1251)+s(1252)+s(1253)+s(1255)+s(1256) =< s(1227)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1252)+s(1253)+s(1255)+s(1257) =< s(1227)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255) =< s(1227)
s(1242)+s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253) =< s(1236)
s(1243)+s(1244)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1254)+s(1255) =< s(1236)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1251)+s(1252)+s(1253)+s(1255)+s(1256) =< s(1236)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1252)+s(1253)+s(1255)+s(1257) =< s(1236)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255) =< s(1236)
s(1242)+s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253) =< aux(814)
s(1243)+s(1244)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1254)+s(1255) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1251)+s(1252)+s(1253)+s(1255)+s(1256) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1252)+s(1253)+s(1255)+s(1257) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1255)+s(1258) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1253)+s(1255)+s(1259) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1246)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1260) =< aux(814)
s(1243)+s(1244)+s(1245)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1261) =< aux(814)
s(1245)+s(1248)+s(1250)+s(1251)+s(1252)+s(1253)+s(1262) =< s(1232)
s(1248)+s(1250)+s(1251)+s(1252)+s(1253)+s(1262)+s(1263) =< s(1232)
s(1245)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1262) =< s(1233)
s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1262)+s(1263) =< s(1233)
s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1264) =< s(1230)
s(1244)+s(1245)+s(1246)+s(1247)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1264)+s(1265) =< s(1230)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1266) =< s(1231)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1251)+s(1252)+s(1253)+s(1266)+s(1267) =< s(1231)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1252)+s(1253)+s(1266)+s(1268)+s(1269) =< s(1231)
s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1266)+s(1270)+s(1271) =< s(1231)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1266) =< aux(814)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1251)+s(1252)+s(1253)+s(1266)+s(1267) =< aux(814)
s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1252)+s(1253)+s(1266)+s(1268)+s(1269) =< aux(814)
s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1266)+s(1270)+s(1271) =< aux(814)
s(1244)+s(1245)+s(1246)+s(1247)+s(1248)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1264) =< aux(814)
s(1244)+s(1245)+s(1246)+s(1247)+s(1249)+s(1250)+s(1251)+s(1252)+s(1253)+s(1255)+s(1264)+s(1265) =< aux(814)
s(1272) =< s(1229)
s(1273) =< aux(814)*2
s(1274) =< aux(814)
s(1276) =< s(1228)
s(1277) =< aux(814)*2+2
s(1278) =< aux(814)*2+1
s(1279) =< s(1257)
s(1280) =< s(1256)
s(1281) =< s(1254)
s(1282)+s(1283) =< s(1255)*s(1228)
s(1284) =< s(1242)
s(1285) =< s(1243)*aux(814)
s(1286)+s(1287) =< s(1243)*aux(814)
s(1288) =< s(1243)*s(1229)
s(1289) =< s(1253)*s(1273)
s(1290) =< s(1253)*s(1272)
s(1291) =< s(1252)*s(1273)
s(1292) =< s(1252)*s(1272)
s(1293) =< s(1251)*s(1274)
s(1294)+s(1295) =< s(1251)*s(1274)
s(1296) =< s(1251)*s(1272)
s(1297) =< s(1251)*s(1276)
s(1298) =< s(1250)*s(1274)
s(1299)+s(1300) =< s(1250)*s(1274)
s(1301) =< s(1250)*s(1272)
s(1302)+s(1303) =< s(1250)*s(1276)
s(1304) =< s(1249)*s(1274)
s(1305)+s(1306) =< s(1249)*s(1274)
s(1307) =< s(1249)*s(1272)
s(1308) =< s(1249)*s(1277)
s(1309) =< s(1249)*s(1278)
s(1310) =< s(1248)*s(1274)
s(1311)+s(1312) =< s(1248)*s(1274)
s(1313) =< s(1248)*s(1272)
s(1314) =< s(1247)*s(1273)
s(1315) =< s(1247)*s(1272)
s(1316) =< s(1246)*s(1273)
s(1317) =< s(1246)*s(1272)
s(1318) =< s(1245)*s(1274)
s(1319)+s(1320) =< s(1245)*s(1274)
s(1321) =< s(1245)*s(1272)
s(1322) =< s(1245)*s(1276)
s(1323) =< s(1255)*s(1274)
s(1324)+s(1325) =< s(1255)*s(1274)
s(1326) =< s(1255)*s(1272)
s(1327) =< s(1244)*s(1274)
s(1328)+s(1329) =< s(1244)*s(1274)
s(1330) =< s(1244)*s(1272)
s(1331) =< s(1244)*s(1277)
s(1332) =< s(1244)*s(1278)
s(1333) =< s(1289)* (1/2)
s(1334) =< s(1291)* (1/2)
s(1335) =< s(1314)* (1/2)
s(1336) =< s(1316)* (1/2)
s(1337)+s(1338) =< s(1333)
s(1339)+s(1340) =< s(1258)
s(1341) =< s(1258)
s(1338)+s(1342) =< s(1290)
s(1342)+s(1343) =< s(1290)
s(1338)+s(1342) =< s(1289)
s(1342)+s(1343) =< s(1289)
s(1344)+s(1345) =< s(1343)
s(1346) =< s(1343)
s(1347)+s(1348) =< s(1342)
s(1349) =< s(1342)
s(1350)+s(1351) =< s(1334)
s(1352)+s(1353) =< s(1259)
s(1354) =< s(1259)
s(1351)+s(1355) =< s(1292)
s(1355)+s(1356) =< s(1292)
s(1351)+s(1355) =< s(1291)
s(1355)+s(1356) =< s(1291)
s(1357)+s(1358) =< s(1356)
s(1359) =< s(1356)
s(1360)+s(1361) =< s(1355)
s(1362) =< s(1355)
s(1279)+s(1295)+s(1363) =< s(1296)
s(1279)+s(1363)+s(1364) =< s(1296)
s(1294)+s(1295) =< s(1293)
s(1294)+s(1295) =< s(1226)+s(1293)
s(1365)+s(1366) =< s(1364)
s(1367) =< s(1364)
s(1368)+s(1369) =< s(1363)
s(1370) =< s(1363)
s(1280)+s(1300)+s(1371) =< s(1301)
s(1280)+s(1371)+s(1372) =< s(1301)
s(1299)+s(1300) =< s(1298)
s(1299)+s(1300) =< s(1225)+s(1298)
s(1373)+s(1374) =< s(1372)
s(1375) =< s(1372)
s(1376)+s(1377) =< s(1371)
s(1378) =< s(1371)
s(1309)+s(1379) =< s(1308)
s(1306) =< s(1308)
s(1305)+s(1380) =< s(1307)
s(1380)+s(1381) =< s(1307)
s(1305)+s(1380) =< s(1309)
s(1380)+s(1381) =< s(1309)
s(1305)+s(1306) =< s(1304)
s(1382)+s(1383) =< s(1381)
s(1384) =< s(1381)
s(1385)+s(1386) =< s(1380)
s(1387) =< s(1380)
s(1311)+s(1388) =< s(1313)
s(1388)+s(1389) =< s(1313)
s(1311)+s(1312) =< s(1310)
s(1390)+s(1391) =< s(1389)
s(1392) =< s(1389)
s(1393)+s(1394) =< s(1388)
s(1395) =< s(1388)
s(1396)+s(1397) =< s(1335)
s(1398)+s(1399) =< s(1260)
s(1400) =< s(1260)
s(1397)+s(1401) =< s(1315)
s(1401)+s(1402) =< s(1315)
s(1397)+s(1401) =< s(1314)
s(1401)+s(1402) =< s(1314)
s(1403)+s(1404) =< s(1402)
s(1405) =< s(1402)
s(1406)+s(1407) =< s(1401)
s(1408) =< s(1401)
s(1409)+s(1410) =< s(1336)
s(1411)+s(1412) =< s(1261)
s(1413) =< s(1261)
s(1410)+s(1414) =< s(1317)
s(1414)+s(1415) =< s(1317)
s(1410)+s(1414) =< s(1316)
s(1414)+s(1415) =< s(1316)
s(1416)+s(1417) =< s(1415)
s(1418) =< s(1415)
s(1419)+s(1420) =< s(1414)
s(1421) =< s(1414)
s(1281)+s(1320)+s(1422) =< s(1321)
s(1281)+s(1422)+s(1423) =< s(1321)
s(1319)+s(1320) =< s(1318)
s(1319)+s(1320) =< s(1263)+s(1318)
s(1424)+s(1425) =< s(1423)
s(1426) =< s(1423)
s(1427)+s(1428) =< s(1422)
s(1429) =< s(1422)
s(1284)+s(1325)+s(1430) =< s(1326)
s(1284)+s(1430)+s(1431) =< s(1326)
s(1324)+s(1325) =< s(1323)
s(1324)+s(1325) =< s(1262)+s(1323)
s(1432)+s(1433) =< s(1431)
s(1434) =< s(1431)
s(1435)+s(1436) =< s(1430)
s(1437) =< s(1430)
s(1332)+s(1438) =< s(1331)
s(1329) =< s(1331)
s(1328)+s(1439) =< s(1330)
s(1439)+s(1440) =< s(1330)
s(1328)+s(1439) =< s(1332)
s(1439)+s(1440) =< s(1332)
s(1328)+s(1329) =< s(1327)
s(1441)+s(1442) =< s(1440)
s(1443) =< s(1440)
s(1444)+s(1445) =< s(1439)
s(1446) =< s(1439)
s(1286)+s(1447) =< s(1288)
s(1447)+s(1448) =< s(1288)
s(1286)+s(1287) =< s(1285)
s(1449)+s(1450) =< s(1448)
s(1451) =< s(1448)
s(1452)+s(1453) =< s(1447)
s(1454) =< s(1447)
s(1238) >= V_n/2
s(1241) >= s(1238)
s(1239)+s(1240) >= s(1238)

  with precondition: [V_n>=4] 

* Chain [137]: 1*s(1469)+1*s(1470)+1*s(1471)+5*s(1473)+5*s(1474)+2*s(1475)+5*s(1476)+5*s(1477)+5*s(1478)+5*s(1479)+2*s(1480)+2*s(1481)+5*s(1482)+5*s(1483)+2*s(1485)+1*s(1494)+1*s(1495)+1*s(1496)+1*s(1497)+1*s(1498)+1*s(1499)+1*s(1500)+1*s(1501)+3*s(1509)+3*s(1510)+3*s(1511)+1*s(1512)+1*s(1513)+3*s(1514)+4*s(1516)+4*s(1517)+4*s(1524)+4*s(1525)+1*s(1527)+4*s(1529)+4*s(1530)+1*s(1532)+1*s(1533)+4*s(1535)+4*s(1536)+4*s(1541)+4*s(1542)+4*s(1549)+4*s(1550)+1*s(1552)+4*s(1554)+4*s(1555)+4*s(1558)+4*s(1559)+4*s(1567)+4*s(1568)+1*s(1569)+1*s(1570)+1*s(1571)+1*s(1574)+1*s(1575)+1*s(1576)+1*s(1577)+1*s(1578)+1*s(1579)+4*s(1580)+4*s(1581)+1*s(1582)+1*s(1583)+1*s(1584)+1*s(1587)+1*s(1588)+1*s(1589)+1*s(1590)+1*s(1591)+1*s(1592)+1*s(1595)+1*s(1596)+1*s(1597)+1*s(1598)+1*s(1599)+1*s(1600)+1*s(1603)+1*s(1604)+1*s(1605)+1*s(1606)+1*s(1607)+1*s(1608)+1*s(1609)+1*s(1612)+1*s(1613)+1*s(1614)+1*s(1615)+1*s(1616)+1*s(1617)+1*s(1620)+1*s(1621)+1*s(1622)+1*s(1623)+1*s(1624)+1*s(1625)+4*s(1626)+4*s(1627)+1*s(1628)+1*s(1629)+1*s(1630)+1*s(1633)+1*s(1634)+1*s(1635)+1*s(1636)+1*s(1637)+1*s(1638)+4*s(1639)+4*s(1640)+1*s(1641)+1*s(1642)+1*s(1643)+1*s(1646)+1*s(1647)+1*s(1648)+1*s(1649)+1*s(1650)+1*s(1651)+1*s(1654)+1*s(1655)+1*s(1656)+1*s(1657)+1*s(1658)+1*s(1659)+1*s(1662)+1*s(1663)+1*s(1664)+1*s(1665)+1*s(1666)+1*s(1667)+1*s(1668)+1*s(1671)+1*s(1672)+1*s(1673)+1*s(1674)+1*s(1675)+1*s(1676)+1*s(1679)+1*s(1680)+1*s(1681)+1*s(1682)+1*s(1683)+1*s(1684)+5
  Such that:s(1458) =< V_n-3
s(1459) =< V_n-1
s(1465) =< V_n/2
s(1457) =< V_n/2-4/3
s(1455) =< V_n/3-5/6
s(1462) =< V_n/3-4/3
s(1466) =< V_n/3-1/3
s(1456)+s(1455) =< V_n/4
s(1463) =< V_n/4-1/2
s(1460) =< 2/3*V_n-1
s(1461) =< 2/3*V_n-5/3
aux(815) =< V_n/2-1
s(1469)+s(1470) =< s(1465)
s(1471) =< s(1465)
s(1472)+s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483) =< s(1457)
s(1473)+s(1474)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1484)+s(1485) =< s(1457)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1481)+s(1482)+s(1483)+s(1485)+s(1486) =< s(1457)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1482)+s(1483)+s(1485)+s(1487) =< s(1457)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485) =< s(1457)
s(1472)+s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483) =< s(1466)
s(1473)+s(1474)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1484)+s(1485) =< s(1466)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1481)+s(1482)+s(1483)+s(1485)+s(1486) =< s(1466)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1482)+s(1483)+s(1485)+s(1487) =< s(1466)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485) =< s(1466)
s(1472)+s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483) =< aux(815)
s(1473)+s(1474)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1484)+s(1485) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1481)+s(1482)+s(1483)+s(1485)+s(1486) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1482)+s(1483)+s(1485)+s(1487) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1485)+s(1488) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1483)+s(1485)+s(1489) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1476)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1490) =< aux(815)
s(1473)+s(1474)+s(1475)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1491) =< aux(815)
s(1475)+s(1478)+s(1480)+s(1481)+s(1482)+s(1483)+s(1492) =< s(1462)
s(1478)+s(1480)+s(1481)+s(1482)+s(1483)+s(1492)+s(1493) =< s(1462)
s(1475)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1492) =< s(1463)
s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1492)+s(1493) =< s(1463)
s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1494) =< s(1460)
s(1474)+s(1475)+s(1476)+s(1477)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1494)+s(1495) =< s(1460)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1496) =< s(1461)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1481)+s(1482)+s(1483)+s(1496)+s(1497) =< s(1461)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1482)+s(1483)+s(1496)+s(1498)+s(1499) =< s(1461)
s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1496)+s(1500)+s(1501) =< s(1461)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1496) =< aux(815)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1481)+s(1482)+s(1483)+s(1496)+s(1497) =< aux(815)
s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1482)+s(1483)+s(1496)+s(1498)+s(1499) =< aux(815)
s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1496)+s(1500)+s(1501) =< aux(815)
s(1474)+s(1475)+s(1476)+s(1477)+s(1478)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1494) =< aux(815)
s(1474)+s(1475)+s(1476)+s(1477)+s(1479)+s(1480)+s(1481)+s(1482)+s(1483)+s(1485)+s(1494)+s(1495) =< aux(815)
s(1502) =< s(1459)
s(1503) =< aux(815)*2
s(1504) =< aux(815)
s(1506) =< s(1458)
s(1507) =< aux(815)*2+2
s(1508) =< aux(815)*2+1
s(1509) =< s(1487)
s(1510) =< s(1486)
s(1511) =< s(1484)
s(1512)+s(1513) =< s(1485)*s(1458)
s(1514) =< s(1472)
s(1515) =< s(1473)*aux(815)
s(1516)+s(1517) =< s(1473)*aux(815)
s(1518) =< s(1473)*s(1459)
s(1519) =< s(1483)*s(1503)
s(1520) =< s(1483)*s(1502)
s(1521) =< s(1482)*s(1503)
s(1522) =< s(1482)*s(1502)
s(1523) =< s(1481)*s(1504)
s(1524)+s(1525) =< s(1481)*s(1504)
s(1526) =< s(1481)*s(1502)
s(1527) =< s(1481)*s(1506)
s(1528) =< s(1480)*s(1504)
s(1529)+s(1530) =< s(1480)*s(1504)
s(1531) =< s(1480)*s(1502)
s(1532)+s(1533) =< s(1480)*s(1506)
s(1534) =< s(1479)*s(1504)
s(1535)+s(1536) =< s(1479)*s(1504)
s(1537) =< s(1479)*s(1502)
s(1538) =< s(1479)*s(1507)
s(1539) =< s(1479)*s(1508)
s(1540) =< s(1478)*s(1504)
s(1541)+s(1542) =< s(1478)*s(1504)
s(1543) =< s(1478)*s(1502)
s(1544) =< s(1477)*s(1503)
s(1545) =< s(1477)*s(1502)
s(1546) =< s(1476)*s(1503)
s(1547) =< s(1476)*s(1502)
s(1548) =< s(1475)*s(1504)
s(1549)+s(1550) =< s(1475)*s(1504)
s(1551) =< s(1475)*s(1502)
s(1552) =< s(1475)*s(1506)
s(1553) =< s(1485)*s(1504)
s(1554)+s(1555) =< s(1485)*s(1504)
s(1556) =< s(1485)*s(1502)
s(1557) =< s(1474)*s(1504)
s(1558)+s(1559) =< s(1474)*s(1504)
s(1560) =< s(1474)*s(1502)
s(1561) =< s(1474)*s(1507)
s(1562) =< s(1474)*s(1508)
s(1563) =< s(1519)* (1/2)
s(1564) =< s(1521)* (1/2)
s(1565) =< s(1544)* (1/2)
s(1566) =< s(1546)* (1/2)
s(1567)+s(1568) =< s(1563)
s(1569)+s(1570) =< s(1488)
s(1571) =< s(1488)
s(1568)+s(1572) =< s(1520)
s(1572)+s(1573) =< s(1520)
s(1568)+s(1572) =< s(1519)
s(1572)+s(1573) =< s(1519)
s(1574)+s(1575) =< s(1573)
s(1576) =< s(1573)
s(1577)+s(1578) =< s(1572)
s(1579) =< s(1572)
s(1580)+s(1581) =< s(1564)
s(1582)+s(1583) =< s(1489)
s(1584) =< s(1489)
s(1581)+s(1585) =< s(1522)
s(1585)+s(1586) =< s(1522)
s(1581)+s(1585) =< s(1521)
s(1585)+s(1586) =< s(1521)
s(1587)+s(1588) =< s(1586)
s(1589) =< s(1586)
s(1590)+s(1591) =< s(1585)
s(1592) =< s(1585)
s(1509)+s(1525)+s(1593) =< s(1526)
s(1509)+s(1593)+s(1594) =< s(1526)
s(1524)+s(1525) =< s(1523)
s(1524)+s(1525) =< s(1456)+s(1523)
s(1595)+s(1596) =< s(1594)
s(1597) =< s(1594)
s(1598)+s(1599) =< s(1593)
s(1600) =< s(1593)
s(1510)+s(1530)+s(1601) =< s(1531)
s(1510)+s(1601)+s(1602) =< s(1531)
s(1529)+s(1530) =< s(1528)
s(1529)+s(1530) =< s(1455)+s(1528)
s(1603)+s(1604) =< s(1602)
s(1605) =< s(1602)
s(1606)+s(1607) =< s(1601)
s(1608) =< s(1601)
s(1539)+s(1609) =< s(1538)
s(1536) =< s(1538)
s(1535)+s(1610) =< s(1537)
s(1610)+s(1611) =< s(1537)
s(1535)+s(1610) =< s(1539)
s(1610)+s(1611) =< s(1539)
s(1535)+s(1536) =< s(1534)
s(1612)+s(1613) =< s(1611)
s(1614) =< s(1611)
s(1615)+s(1616) =< s(1610)
s(1617) =< s(1610)
s(1541)+s(1618) =< s(1543)
s(1618)+s(1619) =< s(1543)
s(1541)+s(1542) =< s(1540)
s(1620)+s(1621) =< s(1619)
s(1622) =< s(1619)
s(1623)+s(1624) =< s(1618)
s(1625) =< s(1618)
s(1626)+s(1627) =< s(1565)
s(1628)+s(1629) =< s(1490)
s(1630) =< s(1490)
s(1627)+s(1631) =< s(1545)
s(1631)+s(1632) =< s(1545)
s(1627)+s(1631) =< s(1544)
s(1631)+s(1632) =< s(1544)
s(1633)+s(1634) =< s(1632)
s(1635) =< s(1632)
s(1636)+s(1637) =< s(1631)
s(1638) =< s(1631)
s(1639)+s(1640) =< s(1566)
s(1641)+s(1642) =< s(1491)
s(1643) =< s(1491)
s(1640)+s(1644) =< s(1547)
s(1644)+s(1645) =< s(1547)
s(1640)+s(1644) =< s(1546)
s(1644)+s(1645) =< s(1546)
s(1646)+s(1647) =< s(1645)
s(1648) =< s(1645)
s(1649)+s(1650) =< s(1644)
s(1651) =< s(1644)
s(1511)+s(1550)+s(1652) =< s(1551)
s(1511)+s(1652)+s(1653) =< s(1551)
s(1549)+s(1550) =< s(1548)
s(1549)+s(1550) =< s(1493)+s(1548)
s(1654)+s(1655) =< s(1653)
s(1656) =< s(1653)
s(1657)+s(1658) =< s(1652)
s(1659) =< s(1652)
s(1514)+s(1555)+s(1660) =< s(1556)
s(1514)+s(1660)+s(1661) =< s(1556)
s(1554)+s(1555) =< s(1553)
s(1554)+s(1555) =< s(1492)+s(1553)
s(1662)+s(1663) =< s(1661)
s(1664) =< s(1661)
s(1665)+s(1666) =< s(1660)
s(1667) =< s(1660)
s(1562)+s(1668) =< s(1561)
s(1559) =< s(1561)
s(1558)+s(1669) =< s(1560)
s(1669)+s(1670) =< s(1560)
s(1558)+s(1669) =< s(1562)
s(1669)+s(1670) =< s(1562)
s(1558)+s(1559) =< s(1557)
s(1671)+s(1672) =< s(1670)
s(1673) =< s(1670)
s(1674)+s(1675) =< s(1669)
s(1676) =< s(1669)
s(1516)+s(1677) =< s(1518)
s(1677)+s(1678) =< s(1518)
s(1516)+s(1517) =< s(1515)
s(1679)+s(1680) =< s(1678)
s(1681) =< s(1678)
s(1682)+s(1683) =< s(1677)
s(1684) =< s(1677)
s(1468) >= V_n/2
s(1469)+s(1470) >= s(1468)
s(1471) >= s(1468)

  with precondition: [V_n>=4] 

* Chain [136]: 4*s(1685)+1*s(1686)+1*s(1687)+1*s(1688)+5*s(1705)+5*s(1706)+2*s(1707)+5*s(1708)+5*s(1709)+5*s(1710)+5*s(1711)+2*s(1712)+2*s(1713)+5*s(1714)+5*s(1715)+2*s(1717)+1*s(1728)+1*s(1729)+1*s(1730)+1*s(1731)+1*s(1732)+1*s(1733)+1*s(1734)+1*s(1735)+3*s(1746)+3*s(1747)+3*s(1748)+3*s(1749)+4*s(1751)+4*s(1752)+4*s(1759)+4*s(1760)+1*s(1762)+4*s(1764)+4*s(1765)+1*s(1767)+1*s(1768)+4*s(1770)+4*s(1771)+4*s(1776)+4*s(1777)+4*s(1784)+4*s(1785)+1*s(1787)+4*s(1789)+4*s(1790)+1*s(1792)+1*s(1793)+4*s(1795)+4*s(1796)+4*s(1804)+4*s(1805)+1*s(1806)+1*s(1807)+1*s(1808)+1*s(1811)+1*s(1812)+1*s(1813)+1*s(1814)+1*s(1815)+1*s(1816)+4*s(1817)+4*s(1818)+1*s(1819)+1*s(1820)+1*s(1821)+1*s(1824)+1*s(1825)+1*s(1826)+1*s(1827)+1*s(1828)+1*s(1829)+1*s(1832)+1*s(1833)+1*s(1834)+1*s(1835)+1*s(1836)+1*s(1837)+1*s(1840)+1*s(1841)+1*s(1842)+1*s(1843)+1*s(1844)+1*s(1845)+1*s(1846)+1*s(1849)+1*s(1850)+1*s(1851)+1*s(1852)+1*s(1853)+1*s(1854)+1*s(1857)+1*s(1858)+1*s(1859)+1*s(1860)+1*s(1861)+1*s(1862)+4*s(1863)+4*s(1864)+1*s(1865)+1*s(1866)+1*s(1867)+1*s(1870)+1*s(1871)+1*s(1872)+1*s(1873)+1*s(1874)+1*s(1875)+4*s(1876)+4*s(1877)+1*s(1878)+1*s(1879)+1*s(1880)+1*s(1883)+1*s(1884)+1*s(1885)+1*s(1886)+1*s(1887)+1*s(1888)+1*s(1891)+1*s(1892)+1*s(1893)+1*s(1894)+1*s(1895)+1*s(1896)+1*s(1899)+1*s(1900)+1*s(1901)+1*s(1902)+1*s(1903)+1*s(1904)+1*s(1905)+1*s(1908)+1*s(1909)+1*s(1910)+1*s(1911)+1*s(1912)+1*s(1913)+1*s(1916)+1*s(1917)+1*s(1918)+1*s(1919)+1*s(1920)+1*s(1921)+1*s(1922)+2
  Such that:s(1685) =< 1
s(1689) =< V_n-3
s(1922) =< V_n
s(1695) =< V_n/2-4/3
s(1691) =< V_n/2-1/2
s(1697) =< V_n/3-1
s(1699) =< V_n/3-5/6
s(1701) =< V_n/3-4/3
s(1692) =< V_n/6
s(1693) =< V_n/6+1/3
s(1702) =< 2/3*V_n-1
s(1703) =< 2/3*V_n-5/3
aux(816) =< V_n-1
aux(817) =< V_n/2-1
aux(818) =< V_n/3-1/3
s(1686)+s(1687) =< aux(816)
s(1688) =< aux(816)
s(1704)+s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715) =< s(1695)
s(1705)+s(1706)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< s(1695)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< s(1695)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< s(1695)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< s(1695)
s(1704)+s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715) =< aux(817)
s(1705)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1717)+s(1720) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1715)+s(1717)+s(1721) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1722) =< aux(817)
s(1705)+s(1707)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1723) =< aux(817)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(817)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(817)
s(1724)+s(1725) =< s(1699)
s(1704)+s(1705)+s(1707)+s(1708)+s(1709)+s(1712)+s(1713)+s(1714)+s(1715) =< aux(818)
s(1705)+s(1708)+s(1709)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< aux(818)
s(1705)+s(1707)+s(1708)+s(1709)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< aux(818)
s(1705)+s(1707)+s(1708)+s(1709)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< aux(818)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(818)
s(1705)+s(1707)+s(1708)+s(1709)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(818)
s(1705)+s(1707)+s(1708)+s(1709)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(818)
s(1707)+s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1726) =< s(1701)
s(1710)+s(1712)+s(1713)+s(1714)+s(1715)+s(1726)+s(1727) =< s(1701)
s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1728) =< s(1702)
s(1706)+s(1707)+s(1708)+s(1709)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1728)+s(1729) =< s(1702)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1730) =< s(1703)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1730)+s(1731) =< s(1703)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1730)+s(1732)+s(1733) =< s(1703)
s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1730)+s(1734)+s(1735) =< s(1703)
s(1736) =< s(1691)
s(1737) =< aux(816)
s(1738) =< aux(817)*2
s(1739) =< s(1691)* (1/2)-1/2
s(1740) =< aux(817)
s(1742) =< s(1689)
s(1743) =< aux(817)*2+2
s(1744) =< aux(817)*2+1
s(1745) =< aux(818)* (1/2)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1717)+s(1720) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< s(1697)+aux(818)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717) =< s(1692)+s(1695)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1715)+s(1717)+s(1721) =< aux(817)+aux(817)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1730)+s(1732)+s(1733) =< aux(818)+s(1703)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< s(1697)+aux(818)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1714)+s(1715)+s(1717)+s(1719) =< s(1692)+s(1695)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1730)+s(1731) =< aux(818)+s(1703)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< s(1697)+aux(818)
s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1713)+s(1714)+s(1715)+s(1717)+s(1718) =< s(1692)+s(1695)
s(1705)+s(1706)+s(1707)+s(1708)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1722) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1707)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1723) =< aux(817)+aux(817)
s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1726)+s(1727) =< s(1693)+s(1701)
s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1730)+s(1734)+s(1735) =< aux(818)+s(1703)
s(1705)+s(1706)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< aux(817)+aux(817)
s(1705)+s(1706)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< s(1697)+aux(818)
s(1705)+s(1706)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1716)+s(1717) =< s(1692)+s(1695)
s(1707)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1726) =< s(1693)+s(1701)
s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1730) =< aux(818)+s(1703)
s(1704)+s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715) =< aux(817)+aux(817)
s(1704)+s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715) =< s(1697)+aux(818)
s(1704)+s(1705)+s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715) =< s(1692)+s(1695)
s(1724)+s(1725) =< s(1745)+s(1699)
s(1746) =< s(1719)
s(1747) =< s(1718)
s(1706)+s(1707)+s(1708)+s(1709)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1728)+s(1729) =< s(1697)+s(1702)
s(1748) =< s(1716)
s(1749) =< s(1704)
s(1706)+s(1707)+s(1708)+s(1709)+s(1710)+s(1711)+s(1712)+s(1713)+s(1714)+s(1715)+s(1717)+s(1728) =< s(1697)+s(1702)
s(1728) =< s(1705)*s(1691)
s(1750) =< s(1705)*aux(817)
s(1751)+s(1752) =< s(1705)*aux(817)
s(1753) =< s(1705)*aux(816)
s(1720) =< s(1715)*s(1736)
s(1754) =< s(1715)*s(1738)
s(1755) =< s(1715)*s(1737)
s(1721) =< s(1714)*s(1736)
s(1756) =< s(1714)*s(1738)
s(1757) =< s(1714)*s(1737)
s(1725) =< s(1713)*s(1739)
s(1732)+s(1733) =< s(1713)*s(1736)
s(1758) =< s(1713)*s(1740)
s(1759)+s(1760) =< s(1713)*s(1740)
s(1761) =< s(1713)*s(1737)
s(1762) =< s(1713)*s(1742)
s(1724) =< s(1712)*s(1739)
s(1731) =< s(1712)*s(1736)
s(1763) =< s(1712)*s(1740)
s(1764)+s(1765) =< s(1712)*s(1740)
s(1766) =< s(1712)*s(1737)
s(1767)+s(1768) =< s(1712)*s(1742)
s(1769) =< s(1711)*s(1740)
s(1770)+s(1771) =< s(1711)*s(1740)
s(1772) =< s(1711)*s(1737)
s(1773) =< s(1711)*s(1743)
s(1774) =< s(1711)*s(1744)
s(1729) =< s(1710)*s(1736)
s(1775) =< s(1710)*s(1740)
s(1776)+s(1777) =< s(1710)*s(1740)
s(1778) =< s(1710)*s(1737)
s(1722) =< s(1709)*s(1736)
s(1779) =< s(1709)*s(1738)
s(1780) =< s(1709)*s(1737)
s(1723) =< s(1708)*s(1736)
s(1781) =< s(1708)*s(1738)
s(1782) =< s(1708)*s(1737)
s(1727) =< s(1707)*s(1739)
s(1734)+s(1735) =< s(1707)*s(1736)
s(1783) =< s(1707)*s(1740)
s(1784)+s(1785) =< s(1707)*s(1740)
s(1786) =< s(1707)*s(1737)
s(1787) =< s(1707)*s(1742)
s(1726) =< s(1717)*s(1739)
s(1730) =< s(1717)*s(1736)
s(1788) =< s(1717)*s(1740)
s(1789)+s(1790) =< s(1717)*s(1740)
s(1791) =< s(1717)*s(1737)
s(1792)+s(1793) =< s(1717)*s(1689)
s(1794) =< s(1706)*s(1740)
s(1795)+s(1796) =< s(1706)*s(1740)
s(1797) =< s(1706)*s(1737)
s(1798) =< s(1706)*s(1743)
s(1799) =< s(1706)*s(1744)
s(1800) =< s(1754)* (1/2)
s(1801) =< s(1756)* (1/2)
s(1802) =< s(1779)* (1/2)
s(1803) =< s(1781)* (1/2)
s(1804)+s(1805) =< s(1800)
s(1806)+s(1807) =< s(1720)
s(1808) =< s(1720)
s(1805)+s(1809) =< s(1755)
s(1809)+s(1810) =< s(1755)
s(1805)+s(1809) =< s(1754)
s(1809)+s(1810) =< s(1754)
s(1811)+s(1812) =< s(1810)
s(1813) =< s(1810)
s(1814)+s(1815) =< s(1809)
s(1816) =< s(1809)
s(1817)+s(1818) =< s(1801)
s(1819)+s(1820) =< s(1721)
s(1821) =< s(1721)
s(1818)+s(1822) =< s(1757)
s(1822)+s(1823) =< s(1757)
s(1818)+s(1822) =< s(1756)
s(1822)+s(1823) =< s(1756)
s(1824)+s(1825) =< s(1823)
s(1826) =< s(1823)
s(1827)+s(1828) =< s(1822)
s(1829) =< s(1822)
s(1746)+s(1760)+s(1830) =< s(1761)
s(1746)+s(1830)+s(1831) =< s(1761)
s(1759)+s(1760) =< s(1758)
s(1759)+s(1760) =< s(1725)+s(1758)
s(1832)+s(1833) =< s(1831)
s(1834) =< s(1831)
s(1835)+s(1836) =< s(1830)
s(1837) =< s(1830)
s(1747)+s(1765)+s(1838) =< s(1766)
s(1747)+s(1838)+s(1839) =< s(1766)
s(1764)+s(1765) =< s(1763)
s(1764)+s(1765) =< s(1724)+s(1763)
s(1840)+s(1841) =< s(1839)
s(1842) =< s(1839)
s(1843)+s(1844) =< s(1838)
s(1845) =< s(1838)
s(1774)+s(1846) =< s(1773)
s(1771) =< s(1773)
s(1770)+s(1847) =< s(1772)
s(1847)+s(1848) =< s(1772)
s(1770)+s(1847) =< s(1774)
s(1847)+s(1848) =< s(1774)
s(1770)+s(1771) =< s(1769)
s(1849)+s(1850) =< s(1848)
s(1851) =< s(1848)
s(1852)+s(1853) =< s(1847)
s(1854) =< s(1847)
s(1776)+s(1855) =< s(1778)
s(1855)+s(1856) =< s(1778)
s(1776)+s(1777) =< s(1775)
s(1857)+s(1858) =< s(1856)
s(1859) =< s(1856)
s(1860)+s(1861) =< s(1855)
s(1862) =< s(1855)
s(1863)+s(1864) =< s(1802)
s(1865)+s(1866) =< s(1722)
s(1867) =< s(1722)
s(1864)+s(1868) =< s(1780)
s(1868)+s(1869) =< s(1780)
s(1864)+s(1868) =< s(1779)
s(1868)+s(1869) =< s(1779)
s(1870)+s(1871) =< s(1869)
s(1872) =< s(1869)
s(1873)+s(1874) =< s(1868)
s(1875) =< s(1868)
s(1876)+s(1877) =< s(1803)
s(1878)+s(1879) =< s(1723)
s(1880) =< s(1723)
s(1877)+s(1881) =< s(1782)
s(1881)+s(1882) =< s(1782)
s(1877)+s(1881) =< s(1781)
s(1881)+s(1882) =< s(1781)
s(1883)+s(1884) =< s(1882)
s(1885) =< s(1882)
s(1886)+s(1887) =< s(1881)
s(1888) =< s(1881)
s(1748)+s(1785)+s(1889) =< s(1786)
s(1748)+s(1889)+s(1890) =< s(1786)
s(1784)+s(1785) =< s(1783)
s(1784)+s(1785) =< s(1727)+s(1783)
s(1891)+s(1892) =< s(1890)
s(1893) =< s(1890)
s(1894)+s(1895) =< s(1889)
s(1896) =< s(1889)
s(1749)+s(1790)+s(1897) =< s(1791)
s(1749)+s(1897)+s(1898) =< s(1791)
s(1789)+s(1790) =< s(1788)
s(1789)+s(1790) =< s(1726)+s(1788)
s(1899)+s(1900) =< s(1898)
s(1901) =< s(1898)
s(1902)+s(1903) =< s(1897)
s(1904) =< s(1897)
s(1799)+s(1905) =< s(1798)
s(1796) =< s(1798)
s(1795)+s(1906) =< s(1797)
s(1906)+s(1907) =< s(1797)
s(1795)+s(1906) =< s(1799)
s(1906)+s(1907) =< s(1799)
s(1795)+s(1796) =< s(1794)
s(1908)+s(1909) =< s(1907)
s(1910) =< s(1907)
s(1911)+s(1912) =< s(1906)
s(1913) =< s(1906)
s(1751)+s(1914) =< s(1753)
s(1914)+s(1915) =< s(1753)
s(1751)+s(1752) =< s(1750)
s(1916)+s(1917) =< s(1915)
s(1918) =< s(1915)
s(1919)+s(1920) =< s(1914)
s(1921) =< s(1914)
s(1922) >= V_n

  with precondition: [V_n>=5] 

* Chain [135]: 4*s(1923)+1*s(1924)+1*s(1925)+1*s(1926)+5*s(1943)+5*s(1944)+2*s(1945)+5*s(1946)+5*s(1947)+5*s(1948)+5*s(1949)+2*s(1950)+2*s(1951)+5*s(1952)+5*s(1953)+2*s(1955)+1*s(1966)+1*s(1967)+1*s(1968)+1*s(1969)+1*s(1970)+1*s(1971)+1*s(1972)+1*s(1973)+3*s(1984)+3*s(1985)+3*s(1986)+3*s(1987)+4*s(1989)+4*s(1990)+4*s(1997)+4*s(1998)+1*s(2000)+4*s(2002)+4*s(2003)+1*s(2005)+1*s(2006)+4*s(2008)+4*s(2009)+4*s(2014)+4*s(2015)+4*s(2022)+4*s(2023)+1*s(2025)+4*s(2027)+4*s(2028)+1*s(2030)+1*s(2031)+4*s(2033)+4*s(2034)+4*s(2042)+4*s(2043)+1*s(2044)+1*s(2045)+1*s(2046)+1*s(2049)+1*s(2050)+1*s(2051)+1*s(2052)+1*s(2053)+1*s(2054)+4*s(2055)+4*s(2056)+1*s(2057)+1*s(2058)+1*s(2059)+1*s(2062)+1*s(2063)+1*s(2064)+1*s(2065)+1*s(2066)+1*s(2067)+1*s(2070)+1*s(2071)+1*s(2072)+1*s(2073)+1*s(2074)+1*s(2075)+1*s(2078)+1*s(2079)+1*s(2080)+1*s(2081)+1*s(2082)+1*s(2083)+1*s(2084)+1*s(2087)+1*s(2088)+1*s(2089)+1*s(2090)+1*s(2091)+1*s(2092)+1*s(2095)+1*s(2096)+1*s(2097)+1*s(2098)+1*s(2099)+1*s(2100)+4*s(2101)+4*s(2102)+1*s(2103)+1*s(2104)+1*s(2105)+1*s(2108)+1*s(2109)+1*s(2110)+1*s(2111)+1*s(2112)+1*s(2113)+4*s(2114)+4*s(2115)+1*s(2116)+1*s(2117)+1*s(2118)+1*s(2121)+1*s(2122)+1*s(2123)+1*s(2124)+1*s(2125)+1*s(2126)+1*s(2129)+1*s(2130)+1*s(2131)+1*s(2132)+1*s(2133)+1*s(2134)+1*s(2137)+1*s(2138)+1*s(2139)+1*s(2140)+1*s(2141)+1*s(2142)+1*s(2143)+1*s(2146)+1*s(2147)+1*s(2148)+1*s(2149)+1*s(2150)+1*s(2151)+1*s(2154)+1*s(2155)+1*s(2156)+1*s(2157)+1*s(2158)+1*s(2159)+1*s(2160)+2
  Such that:s(1923) =< 1
s(1927) =< V_n-3
s(2160) =< V_n
s(1933) =< V_n/2-4/3
s(1929) =< V_n/2-1/2
s(1935) =< V_n/3-1
s(1937) =< V_n/3-5/6
s(1939) =< V_n/3-4/3
s(1930) =< V_n/6
s(1931) =< V_n/6+1/3
s(1940) =< 2/3*V_n-1
s(1941) =< 2/3*V_n-5/3
aux(819) =< V_n-1
aux(820) =< V_n/2-1
aux(821) =< V_n/3-1/3
s(1925)+s(1926) =< aux(819)
s(1924) =< aux(819)
s(1942)+s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953) =< s(1933)
s(1943)+s(1944)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< s(1933)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< s(1933)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< s(1933)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< s(1933)
s(1942)+s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953) =< aux(820)
s(1943)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1955)+s(1958) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1953)+s(1955)+s(1959) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1960) =< aux(820)
s(1943)+s(1945)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1961) =< aux(820)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(820)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(820)
s(1962)+s(1963) =< s(1937)
s(1942)+s(1943)+s(1945)+s(1946)+s(1947)+s(1950)+s(1951)+s(1952)+s(1953) =< aux(821)
s(1943)+s(1946)+s(1947)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< aux(821)
s(1943)+s(1945)+s(1946)+s(1947)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< aux(821)
s(1943)+s(1945)+s(1946)+s(1947)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< aux(821)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(821)
s(1943)+s(1945)+s(1946)+s(1947)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(821)
s(1943)+s(1945)+s(1946)+s(1947)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(821)
s(1945)+s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1964) =< s(1939)
s(1948)+s(1950)+s(1951)+s(1952)+s(1953)+s(1964)+s(1965) =< s(1939)
s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1966) =< s(1940)
s(1944)+s(1945)+s(1946)+s(1947)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1966)+s(1967) =< s(1940)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1968) =< s(1941)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1968)+s(1969) =< s(1941)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1968)+s(1970)+s(1971) =< s(1941)
s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1968)+s(1972)+s(1973) =< s(1941)
s(1974) =< s(1929)
s(1975) =< aux(819)
s(1976) =< aux(820)*2
s(1977) =< s(1929)* (1/2)-1/2
s(1978) =< aux(820)
s(1980) =< s(1927)
s(1981) =< aux(820)*2+2
s(1982) =< aux(820)*2+1
s(1983) =< aux(821)* (1/2)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1955)+s(1958) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< s(1935)+aux(821)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955) =< s(1930)+s(1933)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1953)+s(1955)+s(1959) =< aux(820)+aux(820)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1968)+s(1970)+s(1971) =< aux(821)+s(1941)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< s(1935)+aux(821)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1952)+s(1953)+s(1955)+s(1957) =< s(1930)+s(1933)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1968)+s(1969) =< aux(821)+s(1941)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< s(1935)+aux(821)
s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1951)+s(1952)+s(1953)+s(1955)+s(1956) =< s(1930)+s(1933)
s(1943)+s(1944)+s(1945)+s(1946)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1960) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1945)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1961) =< aux(820)+aux(820)
s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1964)+s(1965) =< s(1931)+s(1939)
s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1968)+s(1972)+s(1973) =< aux(821)+s(1941)
s(1943)+s(1944)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< aux(820)+aux(820)
s(1943)+s(1944)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< s(1935)+aux(821)
s(1943)+s(1944)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1954)+s(1955) =< s(1930)+s(1933)
s(1945)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1964) =< s(1931)+s(1939)
s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1968) =< aux(821)+s(1941)
s(1942)+s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953) =< aux(820)+aux(820)
s(1942)+s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953) =< s(1935)+aux(821)
s(1942)+s(1943)+s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953) =< s(1930)+s(1933)
s(1962)+s(1963) =< s(1983)+s(1937)
s(1984) =< s(1957)
s(1985) =< s(1956)
s(1944)+s(1945)+s(1946)+s(1947)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1966)+s(1967) =< s(1935)+s(1940)
s(1986) =< s(1954)
s(1987) =< s(1942)
s(1944)+s(1945)+s(1946)+s(1947)+s(1948)+s(1949)+s(1950)+s(1951)+s(1952)+s(1953)+s(1955)+s(1966) =< s(1935)+s(1940)
s(1966) =< s(1943)*s(1929)
s(1988) =< s(1943)*aux(820)
s(1989)+s(1990) =< s(1943)*aux(820)
s(1991) =< s(1943)*aux(819)
s(1958) =< s(1953)*s(1974)
s(1992) =< s(1953)*s(1976)
s(1993) =< s(1953)*s(1975)
s(1959) =< s(1952)*s(1974)
s(1994) =< s(1952)*s(1976)
s(1995) =< s(1952)*s(1975)
s(1963) =< s(1951)*s(1977)
s(1970)+s(1971) =< s(1951)*s(1974)
s(1996) =< s(1951)*s(1978)
s(1997)+s(1998) =< s(1951)*s(1978)
s(1999) =< s(1951)*s(1975)
s(2000) =< s(1951)*s(1980)
s(1962) =< s(1950)*s(1977)
s(1969) =< s(1950)*s(1974)
s(2001) =< s(1950)*s(1978)
s(2002)+s(2003) =< s(1950)*s(1978)
s(2004) =< s(1950)*s(1975)
s(2005)+s(2006) =< s(1950)*s(1980)
s(2007) =< s(1949)*s(1978)
s(2008)+s(2009) =< s(1949)*s(1978)
s(2010) =< s(1949)*s(1975)
s(2011) =< s(1949)*s(1981)
s(2012) =< s(1949)*s(1982)
s(1967) =< s(1948)*s(1974)
s(2013) =< s(1948)*s(1978)
s(2014)+s(2015) =< s(1948)*s(1978)
s(2016) =< s(1948)*s(1975)
s(1960) =< s(1947)*s(1974)
s(2017) =< s(1947)*s(1976)
s(2018) =< s(1947)*s(1975)
s(1961) =< s(1946)*s(1974)
s(2019) =< s(1946)*s(1976)
s(2020) =< s(1946)*s(1975)
s(1965) =< s(1945)*s(1977)
s(1972)+s(1973) =< s(1945)*s(1974)
s(2021) =< s(1945)*s(1978)
s(2022)+s(2023) =< s(1945)*s(1978)
s(2024) =< s(1945)*s(1975)
s(2025) =< s(1945)*s(1980)
s(1964) =< s(1955)*s(1977)
s(1968) =< s(1955)*s(1974)
s(2026) =< s(1955)*s(1978)
s(2027)+s(2028) =< s(1955)*s(1978)
s(2029) =< s(1955)*s(1975)
s(2030)+s(2031) =< s(1955)*s(1927)
s(2032) =< s(1944)*s(1978)
s(2033)+s(2034) =< s(1944)*s(1978)
s(2035) =< s(1944)*s(1975)
s(2036) =< s(1944)*s(1981)
s(2037) =< s(1944)*s(1982)
s(2038) =< s(1992)* (1/2)
s(2039) =< s(1994)* (1/2)
s(2040) =< s(2017)* (1/2)
s(2041) =< s(2019)* (1/2)
s(2042)+s(2043) =< s(2038)
s(2044)+s(2045) =< s(1958)
s(2046) =< s(1958)
s(2043)+s(2047) =< s(1993)
s(2047)+s(2048) =< s(1993)
s(2043)+s(2047) =< s(1992)
s(2047)+s(2048) =< s(1992)
s(2049)+s(2050) =< s(2048)
s(2051) =< s(2048)
s(2052)+s(2053) =< s(2047)
s(2054) =< s(2047)
s(2055)+s(2056) =< s(2039)
s(2057)+s(2058) =< s(1959)
s(2059) =< s(1959)
s(2056)+s(2060) =< s(1995)
s(2060)+s(2061) =< s(1995)
s(2056)+s(2060) =< s(1994)
s(2060)+s(2061) =< s(1994)
s(2062)+s(2063) =< s(2061)
s(2064) =< s(2061)
s(2065)+s(2066) =< s(2060)
s(2067) =< s(2060)
s(1984)+s(1998)+s(2068) =< s(1999)
s(1984)+s(2068)+s(2069) =< s(1999)
s(1997)+s(1998) =< s(1996)
s(1997)+s(1998) =< s(1963)+s(1996)
s(2070)+s(2071) =< s(2069)
s(2072) =< s(2069)
s(2073)+s(2074) =< s(2068)
s(2075) =< s(2068)
s(1985)+s(2003)+s(2076) =< s(2004)
s(1985)+s(2076)+s(2077) =< s(2004)
s(2002)+s(2003) =< s(2001)
s(2002)+s(2003) =< s(1962)+s(2001)
s(2078)+s(2079) =< s(2077)
s(2080) =< s(2077)
s(2081)+s(2082) =< s(2076)
s(2083) =< s(2076)
s(2012)+s(2084) =< s(2011)
s(2009) =< s(2011)
s(2008)+s(2085) =< s(2010)
s(2085)+s(2086) =< s(2010)
s(2008)+s(2085) =< s(2012)
s(2085)+s(2086) =< s(2012)
s(2008)+s(2009) =< s(2007)
s(2087)+s(2088) =< s(2086)
s(2089) =< s(2086)
s(2090)+s(2091) =< s(2085)
s(2092) =< s(2085)
s(2014)+s(2093) =< s(2016)
s(2093)+s(2094) =< s(2016)
s(2014)+s(2015) =< s(2013)
s(2095)+s(2096) =< s(2094)
s(2097) =< s(2094)
s(2098)+s(2099) =< s(2093)
s(2100) =< s(2093)
s(2101)+s(2102) =< s(2040)
s(2103)+s(2104) =< s(1960)
s(2105) =< s(1960)
s(2102)+s(2106) =< s(2018)
s(2106)+s(2107) =< s(2018)
s(2102)+s(2106) =< s(2017)
s(2106)+s(2107) =< s(2017)
s(2108)+s(2109) =< s(2107)
s(2110) =< s(2107)
s(2111)+s(2112) =< s(2106)
s(2113) =< s(2106)
s(2114)+s(2115) =< s(2041)
s(2116)+s(2117) =< s(1961)
s(2118) =< s(1961)
s(2115)+s(2119) =< s(2020)
s(2119)+s(2120) =< s(2020)
s(2115)+s(2119) =< s(2019)
s(2119)+s(2120) =< s(2019)
s(2121)+s(2122) =< s(2120)
s(2123) =< s(2120)
s(2124)+s(2125) =< s(2119)
s(2126) =< s(2119)
s(1986)+s(2023)+s(2127) =< s(2024)
s(1986)+s(2127)+s(2128) =< s(2024)
s(2022)+s(2023) =< s(2021)
s(2022)+s(2023) =< s(1965)+s(2021)
s(2129)+s(2130) =< s(2128)
s(2131) =< s(2128)
s(2132)+s(2133) =< s(2127)
s(2134) =< s(2127)
s(1987)+s(2028)+s(2135) =< s(2029)
s(1987)+s(2135)+s(2136) =< s(2029)
s(2027)+s(2028) =< s(2026)
s(2027)+s(2028) =< s(1964)+s(2026)
s(2137)+s(2138) =< s(2136)
s(2139) =< s(2136)
s(2140)+s(2141) =< s(2135)
s(2142) =< s(2135)
s(2037)+s(2143) =< s(2036)
s(2034) =< s(2036)
s(2033)+s(2144) =< s(2035)
s(2144)+s(2145) =< s(2035)
s(2033)+s(2144) =< s(2037)
s(2144)+s(2145) =< s(2037)
s(2033)+s(2034) =< s(2032)
s(2146)+s(2147) =< s(2145)
s(2148) =< s(2145)
s(2149)+s(2150) =< s(2144)
s(2151) =< s(2144)
s(1989)+s(2152) =< s(1991)
s(2152)+s(2153) =< s(1991)
s(1989)+s(1990) =< s(1988)
s(2154)+s(2155) =< s(2153)
s(2156) =< s(2153)
s(2157)+s(2158) =< s(2152)
s(2159) =< s(2152)
s(2160) >= V_n

  with precondition: [V_n>=5] 

* Chain [134]: 1*s(2176)+1*s(2177)+1*s(2178)+5*s(2180)+5*s(2181)+2*s(2182)+5*s(2183)+5*s(2184)+5*s(2185)+5*s(2186)+2*s(2187)+2*s(2188)+5*s(2189)+5*s(2190)+2*s(2192)+1*s(2201)+1*s(2202)+1*s(2203)+1*s(2204)+1*s(2205)+1*s(2206)+1*s(2207)+1*s(2208)+3*s(2216)+3*s(2217)+3*s(2218)+1*s(2219)+1*s(2220)+3*s(2221)+4*s(2223)+4*s(2224)+4*s(2231)+4*s(2232)+1*s(2234)+4*s(2236)+4*s(2237)+1*s(2239)+1*s(2240)+4*s(2242)+4*s(2243)+4*s(2248)+4*s(2249)+4*s(2256)+4*s(2257)+1*s(2259)+4*s(2261)+4*s(2262)+4*s(2265)+4*s(2266)+4*s(2274)+4*s(2275)+1*s(2276)+1*s(2277)+1*s(2278)+1*s(2281)+1*s(2282)+1*s(2283)+1*s(2284)+1*s(2285)+1*s(2286)+4*s(2287)+4*s(2288)+1*s(2289)+1*s(2290)+1*s(2291)+1*s(2294)+1*s(2295)+1*s(2296)+1*s(2297)+1*s(2298)+1*s(2299)+1*s(2302)+1*s(2303)+1*s(2304)+1*s(2305)+1*s(2306)+1*s(2307)+1*s(2310)+1*s(2311)+1*s(2312)+1*s(2313)+1*s(2314)+1*s(2315)+1*s(2316)+1*s(2319)+1*s(2320)+1*s(2321)+1*s(2322)+1*s(2323)+1*s(2324)+1*s(2327)+1*s(2328)+1*s(2329)+1*s(2330)+1*s(2331)+1*s(2332)+4*s(2333)+4*s(2334)+1*s(2335)+1*s(2336)+1*s(2337)+1*s(2340)+1*s(2341)+1*s(2342)+1*s(2343)+1*s(2344)+1*s(2345)+4*s(2346)+4*s(2347)+1*s(2348)+1*s(2349)+1*s(2350)+1*s(2353)+1*s(2354)+1*s(2355)+1*s(2356)+1*s(2357)+1*s(2358)+1*s(2361)+1*s(2362)+1*s(2363)+1*s(2364)+1*s(2365)+1*s(2366)+1*s(2369)+1*s(2370)+1*s(2371)+1*s(2372)+1*s(2373)+1*s(2374)+1*s(2375)+1*s(2378)+1*s(2379)+1*s(2380)+1*s(2381)+1*s(2382)+1*s(2383)+1*s(2386)+1*s(2387)+1*s(2388)+1*s(2389)+1*s(2390)+1*s(2391)+1*s(2392)+6
  Such that:s(2165) =< V_n-3
s(2166) =< V_n-1
s(2392) =< V_n
s(2172) =< V_n/2
s(2163) =< V_n/2-4/3
s(2169) =< V_n/3-4/3
s(2173) =< V_n/3-2/3
s(2164) =< V_n/3-1/3
s(2167) =< 2/3*V_n-1
s(2168) =< 2/3*V_n-5/3
aux(822) =< V_n/2-1
aux(823) =< V_n/4-1/2
s(2161) =< aux(823)
s(2176)+s(2177) =< s(2172)
s(2178) =< s(2172)
s(2179)+s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190) =< s(2163)
s(2180)+s(2181)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2191)+s(2192) =< s(2163)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2188)+s(2189)+s(2190)+s(2192)+s(2193) =< s(2163)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2189)+s(2190)+s(2192)+s(2194) =< s(2163)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< s(2163)
s(2179)+s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190) =< s(2173)
s(2180)+s(2181)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2191)+s(2192) =< s(2173)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2188)+s(2189)+s(2190)+s(2192)+s(2193) =< s(2173)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2189)+s(2190)+s(2192)+s(2194) =< s(2173)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< s(2173)
s(2179)+s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190) =< aux(822)
s(2180)+s(2181)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2191)+s(2192) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2188)+s(2189)+s(2190)+s(2192)+s(2193) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2189)+s(2190)+s(2192)+s(2194) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2192)+s(2195) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2190)+s(2192)+s(2196) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2183)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2197) =< aux(822)
s(2180)+s(2181)+s(2182)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2198) =< aux(822)
s(2179)+s(2180)+s(2182)+s(2183)+s(2184)+s(2187)+s(2188)+s(2189)+s(2190) =< s(2164)
s(2180)+s(2183)+s(2184)+s(2187)+s(2188)+s(2189)+s(2190)+s(2191)+s(2192) =< s(2164)
s(2180)+s(2182)+s(2183)+s(2184)+s(2188)+s(2189)+s(2190)+s(2192)+s(2193) =< s(2164)
s(2180)+s(2182)+s(2183)+s(2184)+s(2187)+s(2189)+s(2190)+s(2192)+s(2194) =< s(2164)
s(2180)+s(2181)+s(2182)+s(2183)+s(2184)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< s(2164)
s(2180)+s(2182)+s(2183)+s(2184)+s(2185)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< s(2164)
s(2180)+s(2182)+s(2183)+s(2184)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192) =< s(2164)
s(2182)+s(2185)+s(2187)+s(2188)+s(2189)+s(2190)+s(2199) =< s(2169)
s(2185)+s(2187)+s(2188)+s(2189)+s(2190)+s(2199)+s(2200) =< s(2169)
s(2182)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2199) =< aux(823)
s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2199)+s(2200) =< aux(823)
s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2201) =< s(2167)
s(2181)+s(2182)+s(2183)+s(2184)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2201)+s(2202) =< s(2167)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2203) =< s(2168)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2188)+s(2189)+s(2190)+s(2203)+s(2204) =< s(2168)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2189)+s(2190)+s(2203)+s(2205)+s(2206) =< s(2168)
s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2203)+s(2207)+s(2208) =< s(2168)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2203) =< aux(822)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2188)+s(2189)+s(2190)+s(2203)+s(2204) =< aux(822)
s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2189)+s(2190)+s(2203)+s(2205)+s(2206) =< aux(822)
s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2203)+s(2207)+s(2208) =< aux(822)
s(2181)+s(2182)+s(2183)+s(2184)+s(2185)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2201) =< aux(822)
s(2181)+s(2182)+s(2183)+s(2184)+s(2186)+s(2187)+s(2188)+s(2189)+s(2190)+s(2192)+s(2201)+s(2202) =< aux(822)
s(2209) =< s(2166)
s(2210) =< aux(822)*2
s(2211) =< aux(822)
s(2213) =< s(2165)
s(2214) =< aux(822)*2+2
s(2215) =< aux(822)*2+1
s(2216) =< s(2194)
s(2217) =< s(2193)
s(2218) =< s(2191)
s(2219)+s(2220) =< s(2192)*s(2165)
s(2221) =< s(2179)
s(2222) =< s(2180)*aux(822)
s(2223)+s(2224) =< s(2180)*aux(822)
s(2225) =< s(2180)*s(2166)
s(2226) =< s(2190)*s(2210)
s(2227) =< s(2190)*s(2209)
s(2228) =< s(2189)*s(2210)
s(2229) =< s(2189)*s(2209)
s(2230) =< s(2188)*s(2211)
s(2231)+s(2232) =< s(2188)*s(2211)
s(2233) =< s(2188)*s(2209)
s(2234) =< s(2188)*s(2213)
s(2235) =< s(2187)*s(2211)
s(2236)+s(2237) =< s(2187)*s(2211)
s(2238) =< s(2187)*s(2209)
s(2239)+s(2240) =< s(2187)*s(2213)
s(2241) =< s(2186)*s(2211)
s(2242)+s(2243) =< s(2186)*s(2211)
s(2244) =< s(2186)*s(2209)
s(2245) =< s(2186)*s(2214)
s(2246) =< s(2186)*s(2215)
s(2247) =< s(2185)*s(2211)
s(2248)+s(2249) =< s(2185)*s(2211)
s(2250) =< s(2185)*s(2209)
s(2251) =< s(2184)*s(2210)
s(2252) =< s(2184)*s(2209)
s(2253) =< s(2183)*s(2210)
s(2254) =< s(2183)*s(2209)
s(2255) =< s(2182)*s(2211)
s(2256)+s(2257) =< s(2182)*s(2211)
s(2258) =< s(2182)*s(2209)
s(2259) =< s(2182)*s(2213)
s(2260) =< s(2192)*s(2211)
s(2261)+s(2262) =< s(2192)*s(2211)
s(2263) =< s(2192)*s(2209)
s(2264) =< s(2181)*s(2211)
s(2265)+s(2266) =< s(2181)*s(2211)
s(2267) =< s(2181)*s(2209)
s(2268) =< s(2181)*s(2214)
s(2269) =< s(2181)*s(2215)
s(2270) =< s(2226)* (1/2)
s(2271) =< s(2228)* (1/2)
s(2272) =< s(2251)* (1/2)
s(2273) =< s(2253)* (1/2)
s(2274)+s(2275) =< s(2270)
s(2276)+s(2277) =< s(2195)
s(2278) =< s(2195)
s(2275)+s(2279) =< s(2227)
s(2279)+s(2280) =< s(2227)
s(2275)+s(2279) =< s(2226)
s(2279)+s(2280) =< s(2226)
s(2281)+s(2282) =< s(2280)
s(2283) =< s(2280)
s(2284)+s(2285) =< s(2279)
s(2286) =< s(2279)
s(2287)+s(2288) =< s(2271)
s(2289)+s(2290) =< s(2196)
s(2291) =< s(2196)
s(2288)+s(2292) =< s(2229)
s(2292)+s(2293) =< s(2229)
s(2288)+s(2292) =< s(2228)
s(2292)+s(2293) =< s(2228)
s(2294)+s(2295) =< s(2293)
s(2296) =< s(2293)
s(2297)+s(2298) =< s(2292)
s(2299) =< s(2292)
s(2216)+s(2232)+s(2300) =< s(2233)
s(2216)+s(2300)+s(2301) =< s(2233)
s(2231)+s(2232) =< s(2230)
s(2231)+s(2232) =< s(2161)+s(2230)
s(2302)+s(2303) =< s(2301)
s(2304) =< s(2301)
s(2305)+s(2306) =< s(2300)
s(2307) =< s(2300)
s(2217)+s(2237)+s(2308) =< s(2238)
s(2217)+s(2308)+s(2309) =< s(2238)
s(2236)+s(2237) =< s(2235)
s(2310)+s(2311) =< s(2309)
s(2312) =< s(2309)
s(2313)+s(2314) =< s(2308)
s(2315) =< s(2308)
s(2246)+s(2316) =< s(2245)
s(2243) =< s(2245)
s(2242)+s(2317) =< s(2244)
s(2317)+s(2318) =< s(2244)
s(2242)+s(2317) =< s(2246)
s(2317)+s(2318) =< s(2246)
s(2242)+s(2243) =< s(2241)
s(2319)+s(2320) =< s(2318)
s(2321) =< s(2318)
s(2322)+s(2323) =< s(2317)
s(2324) =< s(2317)
s(2248)+s(2325) =< s(2250)
s(2325)+s(2326) =< s(2250)
s(2248)+s(2249) =< s(2247)
s(2327)+s(2328) =< s(2326)
s(2329) =< s(2326)
s(2330)+s(2331) =< s(2325)
s(2332) =< s(2325)
s(2333)+s(2334) =< s(2272)
s(2335)+s(2336) =< s(2197)
s(2337) =< s(2197)
s(2334)+s(2338) =< s(2252)
s(2338)+s(2339) =< s(2252)
s(2334)+s(2338) =< s(2251)
s(2338)+s(2339) =< s(2251)
s(2340)+s(2341) =< s(2339)
s(2342) =< s(2339)
s(2343)+s(2344) =< s(2338)
s(2345) =< s(2338)
s(2346)+s(2347) =< s(2273)
s(2348)+s(2349) =< s(2198)
s(2350) =< s(2198)
s(2347)+s(2351) =< s(2254)
s(2351)+s(2352) =< s(2254)
s(2347)+s(2351) =< s(2253)
s(2351)+s(2352) =< s(2253)
s(2353)+s(2354) =< s(2352)
s(2355) =< s(2352)
s(2356)+s(2357) =< s(2351)
s(2358) =< s(2351)
s(2218)+s(2257)+s(2359) =< s(2258)
s(2218)+s(2359)+s(2360) =< s(2258)
s(2256)+s(2257) =< s(2255)
s(2256)+s(2257) =< s(2200)+s(2255)
s(2361)+s(2362) =< s(2360)
s(2363) =< s(2360)
s(2364)+s(2365) =< s(2359)
s(2366) =< s(2359)
s(2221)+s(2262)+s(2367) =< s(2263)
s(2221)+s(2367)+s(2368) =< s(2263)
s(2261)+s(2262) =< s(2260)
s(2261)+s(2262) =< s(2199)+s(2260)
s(2369)+s(2370) =< s(2368)
s(2371) =< s(2368)
s(2372)+s(2373) =< s(2367)
s(2374) =< s(2367)
s(2269)+s(2375) =< s(2268)
s(2266) =< s(2268)
s(2265)+s(2376) =< s(2267)
s(2376)+s(2377) =< s(2267)
s(2265)+s(2376) =< s(2269)
s(2376)+s(2377) =< s(2269)
s(2265)+s(2266) =< s(2264)
s(2378)+s(2379) =< s(2377)
s(2380) =< s(2377)
s(2381)+s(2382) =< s(2376)
s(2383) =< s(2376)
s(2223)+s(2384) =< s(2225)
s(2384)+s(2385) =< s(2225)
s(2223)+s(2224) =< s(2222)
s(2386)+s(2387) =< s(2385)
s(2388) =< s(2385)
s(2389)+s(2390) =< s(2384)
s(2391) =< s(2384)
s(2392) >= V_n
s(2175) >= V_n/2
s(2178) >= s(2175)
s(2176)+s(2177) >= s(2175)

  with precondition: [V_n>=8] 

* Chain [133]: 1*s(2408)+1*s(2409)+1*s(2410)+5*s(2412)+5*s(2413)+2*s(2414)+5*s(2415)+5*s(2416)+5*s(2417)+5*s(2418)+2*s(2419)+2*s(2420)+5*s(2421)+5*s(2422)+2*s(2424)+1*s(2433)+1*s(2434)+1*s(2435)+1*s(2436)+1*s(2437)+1*s(2438)+1*s(2439)+1*s(2440)+3*s(2448)+3*s(2449)+3*s(2450)+1*s(2451)+1*s(2452)+3*s(2453)+4*s(2455)+4*s(2456)+4*s(2463)+4*s(2464)+1*s(2466)+4*s(2468)+4*s(2469)+1*s(2471)+1*s(2472)+4*s(2474)+4*s(2475)+4*s(2480)+4*s(2481)+4*s(2488)+4*s(2489)+1*s(2491)+4*s(2493)+4*s(2494)+4*s(2497)+4*s(2498)+4*s(2506)+4*s(2507)+1*s(2508)+1*s(2509)+1*s(2510)+1*s(2513)+1*s(2514)+1*s(2515)+1*s(2516)+1*s(2517)+1*s(2518)+4*s(2519)+4*s(2520)+1*s(2521)+1*s(2522)+1*s(2523)+1*s(2526)+1*s(2527)+1*s(2528)+1*s(2529)+1*s(2530)+1*s(2531)+1*s(2534)+1*s(2535)+1*s(2536)+1*s(2537)+1*s(2538)+1*s(2539)+1*s(2542)+1*s(2543)+1*s(2544)+1*s(2545)+1*s(2546)+1*s(2547)+1*s(2548)+1*s(2551)+1*s(2552)+1*s(2553)+1*s(2554)+1*s(2555)+1*s(2556)+1*s(2559)+1*s(2560)+1*s(2561)+1*s(2562)+1*s(2563)+1*s(2564)+4*s(2565)+4*s(2566)+1*s(2567)+1*s(2568)+1*s(2569)+1*s(2572)+1*s(2573)+1*s(2574)+1*s(2575)+1*s(2576)+1*s(2577)+4*s(2578)+4*s(2579)+1*s(2580)+1*s(2581)+1*s(2582)+1*s(2585)+1*s(2586)+1*s(2587)+1*s(2588)+1*s(2589)+1*s(2590)+1*s(2593)+1*s(2594)+1*s(2595)+1*s(2596)+1*s(2597)+1*s(2598)+1*s(2601)+1*s(2602)+1*s(2603)+1*s(2604)+1*s(2605)+1*s(2606)+1*s(2607)+1*s(2610)+1*s(2611)+1*s(2612)+1*s(2613)+1*s(2614)+1*s(2615)+1*s(2618)+1*s(2619)+1*s(2620)+1*s(2621)+1*s(2622)+1*s(2623)+1*s(2624)+6
  Such that:s(2397) =< V_n-3
s(2398) =< V_n-1
s(2624) =< V_n
s(2404) =< V_n/2
s(2395) =< V_n/2-4/3
s(2401) =< V_n/3-4/3
s(2405) =< V_n/3-2/3
s(2396) =< V_n/3-1/3
s(2399) =< 2/3*V_n-1
s(2400) =< 2/3*V_n-5/3
aux(824) =< V_n/2-1
aux(825) =< V_n/4-1/2
s(2393) =< aux(825)
s(2408)+s(2409) =< s(2404)
s(2410) =< s(2404)
s(2411)+s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422) =< s(2395)
s(2412)+s(2413)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2423)+s(2424) =< s(2395)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2420)+s(2421)+s(2422)+s(2424)+s(2425) =< s(2395)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2421)+s(2422)+s(2424)+s(2426) =< s(2395)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< s(2395)
s(2411)+s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422) =< s(2405)
s(2412)+s(2413)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2423)+s(2424) =< s(2405)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2420)+s(2421)+s(2422)+s(2424)+s(2425) =< s(2405)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2421)+s(2422)+s(2424)+s(2426) =< s(2405)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< s(2405)
s(2411)+s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422) =< aux(824)
s(2412)+s(2413)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2423)+s(2424) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2420)+s(2421)+s(2422)+s(2424)+s(2425) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2421)+s(2422)+s(2424)+s(2426) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2424)+s(2427) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2422)+s(2424)+s(2428) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2415)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2429) =< aux(824)
s(2412)+s(2413)+s(2414)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2430) =< aux(824)
s(2411)+s(2412)+s(2414)+s(2415)+s(2416)+s(2419)+s(2420)+s(2421)+s(2422) =< s(2396)
s(2412)+s(2415)+s(2416)+s(2419)+s(2420)+s(2421)+s(2422)+s(2423)+s(2424) =< s(2396)
s(2412)+s(2414)+s(2415)+s(2416)+s(2420)+s(2421)+s(2422)+s(2424)+s(2425) =< s(2396)
s(2412)+s(2414)+s(2415)+s(2416)+s(2419)+s(2421)+s(2422)+s(2424)+s(2426) =< s(2396)
s(2412)+s(2413)+s(2414)+s(2415)+s(2416)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< s(2396)
s(2412)+s(2414)+s(2415)+s(2416)+s(2417)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< s(2396)
s(2412)+s(2414)+s(2415)+s(2416)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424) =< s(2396)
s(2414)+s(2417)+s(2419)+s(2420)+s(2421)+s(2422)+s(2431) =< s(2401)
s(2417)+s(2419)+s(2420)+s(2421)+s(2422)+s(2431)+s(2432) =< s(2401)
s(2414)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2431) =< aux(825)
s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2431)+s(2432) =< aux(825)
s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2433) =< s(2399)
s(2413)+s(2414)+s(2415)+s(2416)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2433)+s(2434) =< s(2399)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2435) =< s(2400)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2420)+s(2421)+s(2422)+s(2435)+s(2436) =< s(2400)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2421)+s(2422)+s(2435)+s(2437)+s(2438) =< s(2400)
s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2435)+s(2439)+s(2440) =< s(2400)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2435) =< aux(824)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2420)+s(2421)+s(2422)+s(2435)+s(2436) =< aux(824)
s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2421)+s(2422)+s(2435)+s(2437)+s(2438) =< aux(824)
s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2435)+s(2439)+s(2440) =< aux(824)
s(2413)+s(2414)+s(2415)+s(2416)+s(2417)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2433) =< aux(824)
s(2413)+s(2414)+s(2415)+s(2416)+s(2418)+s(2419)+s(2420)+s(2421)+s(2422)+s(2424)+s(2433)+s(2434) =< aux(824)
s(2441) =< s(2398)
s(2442) =< aux(824)*2
s(2443) =< aux(824)
s(2445) =< s(2397)
s(2446) =< aux(824)*2+2
s(2447) =< aux(824)*2+1
s(2448) =< s(2426)
s(2449) =< s(2425)
s(2450) =< s(2423)
s(2451)+s(2452) =< s(2424)*s(2397)
s(2453) =< s(2411)
s(2454) =< s(2412)*aux(824)
s(2455)+s(2456) =< s(2412)*aux(824)
s(2457) =< s(2412)*s(2398)
s(2458) =< s(2422)*s(2442)
s(2459) =< s(2422)*s(2441)
s(2460) =< s(2421)*s(2442)
s(2461) =< s(2421)*s(2441)
s(2462) =< s(2420)*s(2443)
s(2463)+s(2464) =< s(2420)*s(2443)
s(2465) =< s(2420)*s(2441)
s(2466) =< s(2420)*s(2445)
s(2467) =< s(2419)*s(2443)
s(2468)+s(2469) =< s(2419)*s(2443)
s(2470) =< s(2419)*s(2441)
s(2471)+s(2472) =< s(2419)*s(2445)
s(2473) =< s(2418)*s(2443)
s(2474)+s(2475) =< s(2418)*s(2443)
s(2476) =< s(2418)*s(2441)
s(2477) =< s(2418)*s(2446)
s(2478) =< s(2418)*s(2447)
s(2479) =< s(2417)*s(2443)
s(2480)+s(2481) =< s(2417)*s(2443)
s(2482) =< s(2417)*s(2441)
s(2483) =< s(2416)*s(2442)
s(2484) =< s(2416)*s(2441)
s(2485) =< s(2415)*s(2442)
s(2486) =< s(2415)*s(2441)
s(2487) =< s(2414)*s(2443)
s(2488)+s(2489) =< s(2414)*s(2443)
s(2490) =< s(2414)*s(2441)
s(2491) =< s(2414)*s(2445)
s(2492) =< s(2424)*s(2443)
s(2493)+s(2494) =< s(2424)*s(2443)
s(2495) =< s(2424)*s(2441)
s(2496) =< s(2413)*s(2443)
s(2497)+s(2498) =< s(2413)*s(2443)
s(2499) =< s(2413)*s(2441)
s(2500) =< s(2413)*s(2446)
s(2501) =< s(2413)*s(2447)
s(2502) =< s(2458)* (1/2)
s(2503) =< s(2460)* (1/2)
s(2504) =< s(2483)* (1/2)
s(2505) =< s(2485)* (1/2)
s(2506)+s(2507) =< s(2502)
s(2508)+s(2509) =< s(2427)
s(2510) =< s(2427)
s(2507)+s(2511) =< s(2459)
s(2511)+s(2512) =< s(2459)
s(2507)+s(2511) =< s(2458)
s(2511)+s(2512) =< s(2458)
s(2513)+s(2514) =< s(2512)
s(2515) =< s(2512)
s(2516)+s(2517) =< s(2511)
s(2518) =< s(2511)
s(2519)+s(2520) =< s(2503)
s(2521)+s(2522) =< s(2428)
s(2523) =< s(2428)
s(2520)+s(2524) =< s(2461)
s(2524)+s(2525) =< s(2461)
s(2520)+s(2524) =< s(2460)
s(2524)+s(2525) =< s(2460)
s(2526)+s(2527) =< s(2525)
s(2528) =< s(2525)
s(2529)+s(2530) =< s(2524)
s(2531) =< s(2524)
s(2448)+s(2464)+s(2532) =< s(2465)
s(2448)+s(2532)+s(2533) =< s(2465)
s(2463)+s(2464) =< s(2462)
s(2463)+s(2464) =< s(2393)+s(2462)
s(2534)+s(2535) =< s(2533)
s(2536) =< s(2533)
s(2537)+s(2538) =< s(2532)
s(2539) =< s(2532)
s(2449)+s(2469)+s(2540) =< s(2470)
s(2449)+s(2540)+s(2541) =< s(2470)
s(2468)+s(2469) =< s(2467)
s(2542)+s(2543) =< s(2541)
s(2544) =< s(2541)
s(2545)+s(2546) =< s(2540)
s(2547) =< s(2540)
s(2478)+s(2548) =< s(2477)
s(2475) =< s(2477)
s(2474)+s(2549) =< s(2476)
s(2549)+s(2550) =< s(2476)
s(2474)+s(2549) =< s(2478)
s(2549)+s(2550) =< s(2478)
s(2474)+s(2475) =< s(2473)
s(2551)+s(2552) =< s(2550)
s(2553) =< s(2550)
s(2554)+s(2555) =< s(2549)
s(2556) =< s(2549)
s(2480)+s(2557) =< s(2482)
s(2557)+s(2558) =< s(2482)
s(2480)+s(2481) =< s(2479)
s(2559)+s(2560) =< s(2558)
s(2561) =< s(2558)
s(2562)+s(2563) =< s(2557)
s(2564) =< s(2557)
s(2565)+s(2566) =< s(2504)
s(2567)+s(2568) =< s(2429)
s(2569) =< s(2429)
s(2566)+s(2570) =< s(2484)
s(2570)+s(2571) =< s(2484)
s(2566)+s(2570) =< s(2483)
s(2570)+s(2571) =< s(2483)
s(2572)+s(2573) =< s(2571)
s(2574) =< s(2571)
s(2575)+s(2576) =< s(2570)
s(2577) =< s(2570)
s(2578)+s(2579) =< s(2505)
s(2580)+s(2581) =< s(2430)
s(2582) =< s(2430)
s(2579)+s(2583) =< s(2486)
s(2583)+s(2584) =< s(2486)
s(2579)+s(2583) =< s(2485)
s(2583)+s(2584) =< s(2485)
s(2585)+s(2586) =< s(2584)
s(2587) =< s(2584)
s(2588)+s(2589) =< s(2583)
s(2590) =< s(2583)
s(2450)+s(2489)+s(2591) =< s(2490)
s(2450)+s(2591)+s(2592) =< s(2490)
s(2488)+s(2489) =< s(2487)
s(2488)+s(2489) =< s(2432)+s(2487)
s(2593)+s(2594) =< s(2592)
s(2595) =< s(2592)
s(2596)+s(2597) =< s(2591)
s(2598) =< s(2591)
s(2453)+s(2494)+s(2599) =< s(2495)
s(2453)+s(2599)+s(2600) =< s(2495)
s(2493)+s(2494) =< s(2492)
s(2493)+s(2494) =< s(2431)+s(2492)
s(2601)+s(2602) =< s(2600)
s(2603) =< s(2600)
s(2604)+s(2605) =< s(2599)
s(2606) =< s(2599)
s(2501)+s(2607) =< s(2500)
s(2498) =< s(2500)
s(2497)+s(2608) =< s(2499)
s(2608)+s(2609) =< s(2499)
s(2497)+s(2608) =< s(2501)
s(2608)+s(2609) =< s(2501)
s(2497)+s(2498) =< s(2496)
s(2610)+s(2611) =< s(2609)
s(2612) =< s(2609)
s(2613)+s(2614) =< s(2608)
s(2615) =< s(2608)
s(2455)+s(2616) =< s(2457)
s(2616)+s(2617) =< s(2457)
s(2455)+s(2456) =< s(2454)
s(2618)+s(2619) =< s(2617)
s(2620) =< s(2617)
s(2621)+s(2622) =< s(2616)
s(2623) =< s(2616)
s(2624) >= V_n
s(2407) >= V_n/2
s(2408)+s(2409) >= s(2407)
s(2410) >= s(2407)

  with precondition: [V_n>=8] 


Closed-form bounds of eval_sipmamergesort_init_start(V_n,B): 
-------------------------------------
* Chain [145] with precondition: [V_n=1] 
    - Lower bound: 8 
    - Complexity: constant
 * Chain [144] with precondition: [V_n=2] 
    - Lower bound: 10 
    - Complexity: constant
 * Chain [143] with precondition: [V_n=2] 
    - Lower bound: 10 
    - Complexity: constant
 * Chain [142] with precondition: [0>=V_n] 
    - Lower bound: 6 
    - Complexity: constant
 * Chain [141] with precondition: [0>=V_n] 
    - Lower bound: 6 
    - Complexity: constant
 * Chain [140] with precondition: [V_n>=3] 
    - Lower bound: V_n/2+13/2 
    - Complexity: n
 * Chain [139] with precondition: [V_n>=3] 
    - Lower bound: V_n/2+13/2 
    - Complexity: n
 * Chain [138] with precondition: [V_n>=4] 
    - Lower bound: V_n+5 
    - Complexity: n
 * Chain [137] with precondition: [V_n>=4] 
    - Lower bound: V_n+5 
    - Complexity: n
 * Chain [136] with precondition: [V_n>=5] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [135] with precondition: [V_n>=5] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [134] with precondition: [V_n>=8] 
    - Lower bound: 2*V_n+6 
    - Complexity: n
 * Chain [133] with precondition: [V_n>=8] 
    - Lower bound: 2*V_n+6 
    - Complexity: n
 
### Partitioned lower bound of eval_sipmamergesort_init_start(V_n,B): 
* 6 
 if [0>=V_n]
* 8 
 if [V_n=1]
* 10 
 if [V_n=2]
* V_n+2 
 if [7>=V_n,V_n>=5]
* min([V_n/2+9/2,V_n])+2 
 if [V_n>=8]
* V_n/2+13/2 
 if [V_n=4]
 or [V_n=3]
Possible lower bounds : [6,8,10,V_n+2,min([V_n/2+9/2,V_n])+2,V_n/2+13/2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 1270 ms.
* Invariants computed in 1590 ms.
   - Backward Invariants 975 ms.
   - Transitive Invariants 220 ms.
* Refinement performed in 4785 ms.
* Termination proved in 250 ms.
* Upper bounds computed in 39057 ms.
   - Equation cost structures 6989 ms.
   - Phase cost structures 26486 ms.
   - Chain cost structures 2498 ms.
   - Solving cost expressions 2488 ms.
* Total analysis performed in 47889 ms.

