Warning: Ignored call to eval_wcet1_stop/1 in equation eval_wcet1_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_wcet1_4/4,eval_wcet1_5/5,eval_wcet1_bb1_in/4,eval_wcet1_bb2_in/5,eval_wcet1_bb3_in/5,eval_wcet1_bb4_in/6]
1. non_recursive : [eval_wcet1_bb5_in/1]
2. non_recursive : [loop_cont_eval_wcet1_bb1_in/2]
3. non_recursive : [eval_wcet1_3/2]
4. non_recursive : [eval_wcet1_2/2]
5. non_recursive : [eval_wcet1_1/2]
6. non_recursive : [eval_wcet1_0/2]
7. non_recursive : [eval_wcet1_bb0_in/2]
8. non_recursive : [eval_wcet1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_wcet1_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_wcet1_3/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_wcet1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_wcet1_bb1_in/4 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is discarded (unfeasible) 
* CE 9 is refined into CE [19] 


#### Refined cost equations eval_wcet1_bb1_in/4 
* CE 13: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 0
     [V_n>=V_j_0+2,V_j_0>=0,B=2,V_i_0=1] 
* CE 14: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 0
     [V_j_0>=0,V_j_0+1=V_n,B=2,V_i_0=1] 
* CE 15: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 0
     [V_n>=V_j_0+1,V_j_0>=2,B=2,V_i_0=1] 
* CE 16: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 0
     [V_n>=V_j_0+1,V_j_0>=0,1>=V_j_0,B=2,V_i_0=1] 
* CE 17: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 1+ eval_wcet1_bb1_in(V_n,C,D,E)
     [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=2,V_i_0=D+1,V_j_0=C+1,E=2,B=2] 
* CE 18: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 1+ eval_wcet1_bb1_in(V_n,C,D,E)
     [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=0,V_i_0=D+1,V_j_0+1=C,E=2,B=2] 
* CE 19: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) = 1+ eval_wcet1_bb1_in(V_n,C,D,E)
     [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=0,1>=V_j_0,V_i_0=D+1,E=2,C=0,B=2] 

### Cost equations --> "Loop" of eval_wcet1_bb1_in/4 
* CEs [17] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [13] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [14] --> Loop 18 

#### Loops of eval_wcet1_bb1_in/4 
* Loop 12: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B)->  eval_wcet1_bb1_in(V_n,V_j_0',V_i_0',B')
                  [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=2,V_i_0=V_i_0'+1,V_j_0=V_j_0'+1,B'=2,B=2] 
* Loop 13: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B)->  eval_wcet1_bb1_in(V_n,V_j_0',V_i_0',B')
                  [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=0,V_i_0=V_i_0'+1,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 14: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B)->  eval_wcet1_bb1_in(V_n,V_j_0',V_i_0',B')
                  [V_n>=V_j_0+V_i_0,V_i_0>=2,V_j_0>=0,1>=V_j_0,V_i_0=V_i_0'+1,B'=2,V_j_0'=0,B=2] 
* Loop 15: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) [V_n>=V_j_0+1,V_j_0>=2,B=2,V_i_0=1] 
* Loop 16: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) [V_n>=V_j_0+2,V_j_0>=0,B=2,V_i_0=1] 
* Loop 17: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) [V_n>=V_j_0+1,V_j_0>=0,1>=V_j_0,B=2,V_i_0=1] 
* Loop 18: eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) [V_j_0>=0,V_j_0+1=V_n,B=2,V_i_0=1] 

### Ranking functions of CR eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) 
* RF of phase [12,13,14]: [V_i_0-1]

#### Partial ranking functions of CR eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) 
* Partial RF of phase [12,13,14]:
  - RF of loop [12:1]:
    V_j_0-1 depends on loops [13:1] 
  - RF of loop [12:1,13:1,14:1]:
    V_i_0-1
  - RF of loop [13:1]:
    V_n-V_j_0-1 depends on loops [12:1,14:1] 


### Resulting Chains:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) 
* [[12,13,14],18]
* [[12,13,14],17]
* [[12,13,14],16]
* [[12,13,14],15]
* [18]
* [17]


### Specialization of cost equations eval_wcet1_3/2 
* CE 3 is refined into CE [20,21,22,23,24,25] 
* CE 4 is refined into CE [26] 


#### Refined cost equations eval_wcet1_3/2 
* CE 20: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(V_n,C,V_n,D):[[12,13,14],18]
     [V_n>=2,D=2,C=0] 
* CE 21: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(V_n,C,V_n,D):[[12,13,14],17]
     [V_n>=2,D=2,C=0] 
* CE 22: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(V_n,C,V_n,D):[[12,13,14],16]
     [V_n>=2,D=2,C=0] 
* CE 23: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(V_n,C,V_n,D):[[12,13,14],15]
     [V_n>=3,D=2,C=0] 
* CE 24: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(C,D,E,F):[18]
     [F=2,E=1,D=0,C=1,V_n=1] 
* CE 25: eval_wcet1_3(V_n,B) = 1+ eval_wcet1_bb1_in(C,D,E,F):[17]
     [F=2,E=1,D=0,C=1,V_n=1] 
* CE 26: eval_wcet1_3(V_n,B) = 0
     [0>=V_n] 

### Cost equations --> "Loop" of eval_wcet1_3/2 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 

#### Loops of eval_wcet1_3/2 
* Loop 19: eval_wcet1_3(V_n,B) [V_n>=3] 
* Loop 20: eval_wcet1_3(V_n,B) [V_n>=2] 
* Loop 21: eval_wcet1_3(V_n,B) [V_n>=2] 
* Loop 22: eval_wcet1_3(V_n,B) [V_n>=2] 
* Loop 23: eval_wcet1_3(V_n,B) [0>=V_n] 
* Loop 24: eval_wcet1_3(V_n,B) [V_n=1] 
* Loop 25: eval_wcet1_3(V_n,B) [V_n=1] 

### Ranking functions of CR eval_wcet1_3(V_n,B) 

#### Partial ranking functions of CR eval_wcet1_3(V_n,B) 


### Resulting Chains:eval_wcet1_3(V_n,B) 
* [25]
* [24]
* [23]
* [22]
* [21]
* [20]
* [19]


### Specialization of cost equations eval_wcet1_start/2 
* CE 2 is refined into CE [27,28,29,30,31,32,33] 


#### Refined cost equations eval_wcet1_start/2 
* CE 27: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(C,B):[25]
     [C=1,V_n=1] 
* CE 28: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(C,B):[24]
     [C=1,V_n=1] 
* CE 29: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(V_n,B):[23]
     [0>=V_n] 
* CE 30: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(V_n,B):[22]
     [V_n>=2] 
* CE 31: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(V_n,B):[21]
     [V_n>=2] 
* CE 32: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(V_n,B):[20]
     [V_n>=2] 
* CE 33: eval_wcet1_start(V_n,B) = 0+ eval_wcet1_3(V_n,B):[19]
     [V_n>=3] 

### Cost equations --> "Loop" of eval_wcet1_start/2 
* CEs [33] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [29] --> Loop 30 
* CEs [28] --> Loop 31 
* CEs [27] --> Loop 32 

#### Loops of eval_wcet1_start/2 
* Loop 26: eval_wcet1_start(V_n,B) [V_n>=3] 
* Loop 27: eval_wcet1_start(V_n,B) [V_n>=2] 
* Loop 28: eval_wcet1_start(V_n,B) [V_n>=2] 
* Loop 29: eval_wcet1_start(V_n,B) [V_n>=2] 
* Loop 30: eval_wcet1_start(V_n,B) [0>=V_n] 
* Loop 31: eval_wcet1_start(V_n,B) [V_n=1] 
* Loop 32: eval_wcet1_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_wcet1_start(V_n,B) 

#### Partial ranking functions of CR eval_wcet1_start(V_n,B) 


### Resulting Chains:eval_wcet1_start(V_n,B) 
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]


Computing Bounds
=====================================

#### Cost of loops [12,13,14] 

 * loop 12:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1
 * loop 13:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1
 * loop 14:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1
#### Cost of phase [12,13,14]:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(12)+it(13)+it(14) =< V_i_0-1
it(12)+it(13)+it(14) =< V_i_0-V_i_0'
it(12)+it(13)+it(14) >= V_i_0-V_i_0'

#### Cost of phase [12,13,14]:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(12)+it(13)+it(14) =< V_i_0-1
it(12)+it(13)+it(14) =< V_i_0-V_i_0'
it(12)+it(13)+it(14) >= V_i_0-V_i_0'

#### Cost of phase [12,13,14]:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(12)+it(13)+it(14) =< V_i_0-1
it(12)+it(13)+it(14) =< V_i_0-V_i_0'
it(12)+it(13)+it(14) >= V_i_0-V_i_0'

#### Cost of phase [12,13,14]:eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B) -> [eval_wcet1_bb1_in(V_n',V_j_0',V_i_0',B')] 
1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(12)+it(13)+it(14) =< V_i_0-1
it(12)+it(13)+it(14) =< V_i_0-V_i_0'
it(12)+it(13)+it(14) >= V_i_0-V_i_0'

#### Cost of chains of eval_wcet1_bb1_in(V_n,V_j_0,V_i_0,B):
* Chain [[12,13,14],18]: 1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(14)+it(13)+it(12) =< V_i_0-1
it(14)+it(13)+it(12) >= V_i_0-1

  with precondition: [B=2,V_i_0+V_j_0=V_n,V_j_0>=0,V_n>=V_j_0+2] 

* Chain [[12,13,14],17]: 1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(14)+it(13)+it(12) =< V_i_0-1
it(14)+it(13)+it(12) >= V_i_0-1

  with precondition: [B=2,V_j_0>=0,V_i_0>=2,V_i_0>=V_j_0,V_n>=V_i_0+V_j_0] 

* Chain [[12,13,14],16]: 1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(14)+it(13)+it(12) =< V_i_0-1
it(14)+it(13)+it(12) >= V_i_0-1

  with precondition: [B=2,V_j_0>=0,V_i_0>=2,V_n>=V_i_0+V_j_0] 

* Chain [[12,13,14],15]: 1*it(12)+1*it(13)+1*it(14)+0
  Such that:it(14)+it(13)+it(12) =< V_i_0-1
it(14)+it(13)+it(12) >= V_i_0-1

  with precondition: [B=2,V_j_0>=0,V_i_0>=2,V_i_0+V_j_0>=3,V_n>=V_i_0+V_j_0] 

* Chain [18]: 0
  with precondition: [V_i_0=1,B=2,V_n=V_j_0+1,V_n>=1] 

* Chain [17]: 0
  with precondition: [V_i_0=1,B=2,1>=V_j_0,V_j_0>=0,V_n>=V_j_0+1] 


#### Cost of chains of eval_wcet1_3(V_n,B):
* Chain [25]: 1
  with precondition: [V_n=1] 

* Chain [24]: 1
  with precondition: [V_n=1] 

* Chain [23]: 0
  with precondition: [0>=V_n] 

* Chain [22]: 1*s(1)+1*s(2)+1*s(3)+1
  Such that:s(3)+s(2)+s(1) =< V_n-1
s(3)+s(2)+s(1) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [21]: 1*s(4)+1*s(5)+1*s(6)+1
  Such that:s(6)+s(5)+s(4) =< V_n-1
s(6)+s(5)+s(4) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [20]: 1*s(7)+1*s(8)+1*s(9)+1
  Such that:s(9)+s(8)+s(7) =< V_n-1
s(9)+s(8)+s(7) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [19]: 1*s(10)+1*s(11)+1*s(12)+1
  Such that:s(12)+s(11)+s(10) =< V_n-1
s(12)+s(11)+s(10) >= V_n-1

  with precondition: [V_n>=3] 


#### Cost of chains of eval_wcet1_start(V_n,B):
* Chain [32]: 1
  with precondition: [V_n=1] 

* Chain [31]: 1
  with precondition: [V_n=1] 

* Chain [30]: 0
  with precondition: [0>=V_n] 

* Chain [29]: 1*s(13)+1*s(14)+1*s(15)+1
  Such that:s(15)+s(14)+s(13) =< V_n-1
s(15)+s(14)+s(13) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [28]: 1*s(16)+1*s(17)+1*s(18)+1
  Such that:s(18)+s(17)+s(16) =< V_n-1
s(18)+s(17)+s(16) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [27]: 1*s(19)+1*s(20)+1*s(21)+1
  Such that:s(21)+s(20)+s(19) =< V_n-1
s(21)+s(20)+s(19) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [26]: 1*s(22)+1*s(23)+1*s(24)+1
  Such that:s(24)+s(23)+s(22) =< V_n-1
s(24)+s(23)+s(22) >= V_n-1

  with precondition: [V_n>=3] 


Closed-form bounds of eval_wcet1_start(V_n,B): 
-------------------------------------
* Chain [32] with precondition: [V_n=1] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [31] with precondition: [V_n=1] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [30] with precondition: [0>=V_n] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [29] with precondition: [V_n>=2] 
    - Lower bound: V_n 
    - Complexity: n
 * Chain [28] with precondition: [V_n>=2] 
    - Lower bound: V_n 
    - Complexity: n
 * Chain [27] with precondition: [V_n>=2] 
    - Lower bound: V_n 
    - Complexity: n
 * Chain [26] with precondition: [V_n>=3] 
    - Lower bound: V_n 
    - Complexity: n
 
### Partitioned lower bound of eval_wcet1_start(V_n,B): 
* V_n 
 if [V_n>=2]
* 0 
 if [0>=V_n]
* 1 
 if [V_n=1]
Possible lower bounds : [V_n,0,1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 88 ms.
* Invariants computed in 123 ms.
   - Backward Invariants 74 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 131 ms.
* Termination proved in 30 ms.
* Upper bounds computed in 208 ms.
   - Equation cost structures 60 ms.
   - Phase cost structures 59 ms.
   - Chain cost structures 69 ms.
   - Solving cost expressions 9 ms.
* Total analysis performed in 659 ms.

