Warning: Ignored call to eval_sipma91_stop/1 in equation eval_sipma91_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_sipma91_bb1_in/5,eval_sipma91_bb2_in/5]
1. non_recursive : [eval_sipma91_bb8_in/1]
2. recursive : [eval_sipma91_bb3_in/3,eval_sipma91_bb4_in/3,eval_sipma91_bb5_in/5,eval_sipma91_bb6_in/5,eval_sipma91_bb7_in/7]
3. non_recursive : [loop_cont_eval_sipma91_bb3_in/2]
4. non_recursive : [loop_cont_eval_sipma91_bb1_in/4]
5. non_recursive : [eval_sipma91_3/2]
6. non_recursive : [eval_sipma91_2/2]
7. non_recursive : [eval_sipma91_1/2]
8. non_recursive : [eval_sipma91_0/2]
9. non_recursive : [eval_sipma91_bb0_in/2]
10. non_recursive : [eval_sipma91_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_sipma91_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_sipma91_bb3_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_sipma91_3/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_sipma91_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_sipma91_bb1_in/5 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_sipma91_bb1_in/5 
* CE 11: eval_sipma91_bb1_in(A,B,C,A,B) = 0
     [11*A+89>=B,B>=101,C=3] 
* CE 12: eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) = 1+ eval_sipma91_bb1_in(E,F,G,C,D)
     [V_y2_0>=1,100>=V_y1_0,V_y1_0+11=F,V_y2_0+1=E,G=3,B=3] 

### Cost equations --> "Loop" of eval_sipma91_bb1_in/5 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_sipma91_bb1_in/5 
* Loop 10: eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D)->  eval_sipma91_bb1_in(V_y2_0',V_y1_0',B',C,D)
                  [V_y2_0>=1,100>=V_y1_0,V_y1_0+11=V_y1_0',V_y2_0+1=V_y2_0',B'=3,B=3] 
* Loop 11: eval_sipma91_bb1_in(A,B,C,A,B) [11*A+89>=B,B>=101,C=3] 

### Ranking functions of CR eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) 
* RF of phase [10]: [-V_y1_0/11+101/11]

#### Partial ranking functions of CR eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_y1_0/11+101/11


### Resulting Chains:eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) 
* [[10],11]


### Specialization of cost equations eval_sipma91_bb3_in/3 
* CE 10 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 7 is refined into CE [16] 


#### Refined cost equations eval_sipma91_bb3_in/3 
* CE 13: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) = 0
     [1>=V_y2_1,B=2] 
* CE 14: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) = 1+ eval_sipma91_bb3_in(C,D,E)
     [V_y1_1>=111,V_y2_1>=3,V_y1_1=D+9,V_y2_1=C+1,E=2,B=2] 
* CE 15: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) = 1+ eval_sipma91_bb3_in(V_y2_1,C,D)
     [V_y2_1>=2,110>=V_y1_1,V_y1_1+1=C,D=2,B=2] 
* CE 16: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) = 1+ eval_sipma91_bb3_in(C,D,E)
     [V_y1_1>=111,V_y1_1=D+10,E=2,C=1,B=2,V_y2_1=2] 

### Cost equations --> "Loop" of eval_sipma91_bb3_in/3 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [13] --> Loop 15 

#### Loops of eval_sipma91_bb3_in/3 
* Loop 12: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B)->  eval_sipma91_bb3_in(V_y2_1',V_y1_1',B')
                  [V_y1_1>=111,V_y2_1>=3,V_y1_1=V_y1_1'+9,V_y2_1=V_y2_1'+1,B'=2,B=2] 
* Loop 13: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B)->  eval_sipma91_bb3_in(V_y2_1,V_y1_1',B')
                  [V_y2_1>=2,110>=V_y1_1,V_y1_1+1=V_y1_1',B'=2,B=2] 
* Loop 14: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B)->  eval_sipma91_bb3_in(V_y2_1',V_y1_1',B')
                  [V_y1_1>=111,V_y1_1=V_y1_1'+10,B'=2,V_y2_1'=1,B=2,V_y2_1=2] 
* Loop 15: eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) [1>=V_y2_1,B=2] 

### Ranking functions of CR eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) 

#### Partial ranking functions of CR eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1]:
    V_y1_1/9-110/9 depends on loops [13:1] 
    V_y2_1-2
  - RF of loop [13:1]:
    -V_y1_1+111 depends on loops [12:1] 


### Resulting Chains:eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) 
* [[12,13],14,15]
* [15]
* [14,15]


### Specialization of cost equations eval_sipma91_3/2 
* CE 3 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


#### Refined cost equations eval_sipma91_3/2 
* CE 17: eval_sipma91_3(V_x,B) = 0
     [V_x>=101] 
* CE 18: eval_sipma91_3(V_x,B) = 2+ eval_sipma91_bb1_in(C,V_x,D,E,F):[[10],11]+ eval_sipma91_bb3_in(E,G,H):[[12,13],14,15]
     [V_x+11*E>=112,122>=11*E+V_x,E>=2,V_x+11*E=G+11,V_x+11*E=F+11,H=2,D=3,C=1] 
* CE 19: eval_sipma91_3(V_x,B) = 2+ eval_sipma91_bb1_in(C,D,E,F,G):[[10],11]+ eval_sipma91_bb3_in(H,I,J):[14,15]
     [J=2,I=111,H=2,G=111,F=2,E=3,D=100,C=1,V_x=100] 

### Cost equations --> "Loop" of eval_sipma91_3/2 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_sipma91_3/2 
* Loop 16: eval_sipma91_3(V_x,B) [V_x>=101] 
* Loop 17: eval_sipma91_3(V_x,B) [100>=V_x] 
* Loop 18: eval_sipma91_3(V_x,B) [V_x=100] 

### Ranking functions of CR eval_sipma91_3(V_x,B) 

#### Partial ranking functions of CR eval_sipma91_3(V_x,B) 


### Resulting Chains:eval_sipma91_3(V_x,B) 
* [18]
* [17]
* [16]


### Specialization of cost equations eval_sipma91_start/2 
* CE 2 is refined into CE [20,21,22] 


#### Refined cost equations eval_sipma91_start/2 
* CE 20: eval_sipma91_start(V_x,B) = 0+ eval_sipma91_3(C,B):[18]
     [C=100,V_x=100] 
* CE 21: eval_sipma91_start(V_x,B) = 0+ eval_sipma91_3(V_x,B):[17]
     [100>=V_x] 
* CE 22: eval_sipma91_start(V_x,B) = 0+ eval_sipma91_3(V_x,B):[16]
     [V_x>=101] 

### Cost equations --> "Loop" of eval_sipma91_start/2 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of eval_sipma91_start/2 
* Loop 19: eval_sipma91_start(V_x,B) [V_x>=101] 
* Loop 20: eval_sipma91_start(V_x,B) [100>=V_x] 
* Loop 21: eval_sipma91_start(V_x,B) [V_x=100] 

### Ranking functions of CR eval_sipma91_start(V_x,B) 

#### Partial ranking functions of CR eval_sipma91_start(V_x,B) 


### Resulting Chains:eval_sipma91_start(V_x,B) 
* [21]
* [20]
* [19]


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) -> [eval_sipma91_bb1_in(V_y2_0',V_y1_0',B',C',D')] 
1
#### Cost of phase [10]:eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D) -> [eval_sipma91_bb1_in(V_y2_0',V_y1_0',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< -V_y1_0/11+101/11
it(10) =< -V_y1_0/11+V_y1_0'/11
it(10) >= -V_y1_0/11+V_y1_0'/11

#### Cost of chains of eval_sipma91_bb1_in(V_y2_0,V_y1_0,B,C,D):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_y1_0/11+101/11
it(10) >= -V_y2_0+C

  with precondition: [B=3,D+11*V_y2_0=11*C+V_y1_0,V_y2_0>=1,C>=V_y2_0+1,V_y1_0+11*C>=11*V_y2_0+101,11*V_y2_0+111>=11*C+V_y1_0] 


#### Cost of loops [12,13] 

 * loop 12:eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) -> [eval_sipma91_bb3_in(V_y2_1',V_y1_1',B')] 
1
 * loop 13:eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) -> [eval_sipma91_bb3_in(V_y2_1',V_y1_1',B')] 
1
#### Cost of phase [12,13]:eval_sipma91_bb3_in(V_y2_1,V_y1_1,B) -> [eval_sipma91_bb3_in(V_y2_1',V_y1_1',B')] 
1*it(12)+1*it(13)+0
  Such that:it(12) =< V_y2_1-2
it(12) =< V_y2_1-V_y2_1'
aux(7) =< -V_y1_1+111
aux(8) =< -V_y1_1+V_y1_1'
aux(6) =< V_y1_1-V_y1_1'
it(13) =< it(12)*9+aux(8)
it(13) =< it(12)*9+aux(7)
it(12) >= V_y2_1-V_y2_1'
aux(5) >= -V_y1_1+V_y1_1'
it(13) >= it(12)*9+aux(5)-aux(6)

#### Cost of chains of eval_sipma91_bb3_in(V_y2_1,V_y1_1,B):
* Chain [[12,13],14,15]: 1*it(12)+1*it(13)+1
  Such that:it(12) =< V_y2_1-2
aux(7) =< -V_y1_1+111
aux(6) =< V_y1_1-111
it(13) =< it(12)*9+aux(7)
aux(5) >= -10*V_y2_1+21
it(12) >= V_y2_1-2
it(13) >= it(12)*9+aux(5)-aux(6)

  with precondition: [B=2,V_y2_1>=2] 

* Chain [15]: 0
  with precondition: [B=2,1>=V_y2_1] 

* Chain [14,15]: 1
  with precondition: [V_y2_1=2,B=2,V_y1_1>=111] 


#### Cost of chains of eval_sipma91_3(V_x,B):
* Chain [18]: 1*s(1)+3
  Such that:s(1) =< 1/11
s(1) >= 1

  with precondition: [V_x=100] 

* Chain [17]: 1*s(2)+1*s(3)+1*s(7)+3
  Such that:s(4) =< 10
s(3) =< -V_x+100
s(2) =< -V_x/11+101/11
s(7) =< s(3)*9+s(4)
s(2) >= 1
s(3) >= -V_x/11+90/11
s(2) >= -V_x/11+101/11
s(6) >= 10/11*V_x-989/11
s(7) >= s(3)*9+s(6)

  with precondition: [100>=V_x] 

* Chain [16]: 0
  with precondition: [V_x>=101] 


#### Cost of chains of eval_sipma91_start(V_x,B):
* Chain [21]: 1*s(8)+3
  Such that:s(8) =< 1/11
s(8) >= 1

  with precondition: [V_x=100] 

* Chain [20]: 1*s(10)+1*s(11)+1*s(13)+3
  Such that:s(9) =< 10
s(10) =< -V_x+100
s(11) =< -V_x/11+101/11
s(13) =< s(10)*9+s(9)
s(11) >= 1
s(10) >= -V_x/11+90/11
s(11) >= -V_x/11+101/11
s(12) >= 10/11*V_x-989/11
s(13) >= s(10)*9+s(12)

  with precondition: [100>=V_x] 

* Chain [19]: 0
  with precondition: [V_x>=101] 


Closed-form bounds of eval_sipma91_start(V_x,B): 
-------------------------------------
* Chain [21] with precondition: [V_x=100] 
    - Lower bound: 4 
    - Complexity: constant
 * Chain [20] with precondition: [100>=V_x] 
    - Lower bound: -V_x/11+101/11+ (nat(-V_x/11+90/11)*10+3)+nat(10/11*V_x-989/11) 
    - Complexity: n
 * Chain [19] with precondition: [V_x>=101] 
    - Lower bound: 0 
    - Complexity: constant
 
### Partitioned lower bound of eval_sipma91_start(V_x,B): 
* 0 
 if [V_x>=101]
* 4 
 if [V_x=100]
* -V_x/11+101/11+ (nat(-V_x/11+90/11)*10+3)+nat(10/11*V_x-989/11) 
 if [99>=V_x]
Possible lower bounds : [0,4,-V_x/11+101/11+ (nat(-V_x/11+90/11)*10+3)+nat(10/11*V_x-989/11)]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 85 ms.
* Invariants computed in 66 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 100 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 133 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 40 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 483 ms.

