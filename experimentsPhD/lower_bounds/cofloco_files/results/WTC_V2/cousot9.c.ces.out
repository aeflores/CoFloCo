Warning: Ignored call to eval_cousot9_stop/1 in equation eval_cousot9_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_cousot9_bb1_in/4,eval_cousot9_bb2_in/4]
1. non_recursive : [eval_cousot9_bb3_in/1]
2. non_recursive : [loop_cont_eval_cousot9_bb1_in/2]
3. non_recursive : [eval_cousot9_6/3]
4. non_recursive : [eval_cousot9_5/3]
5. non_recursive : [eval_cousot9_4/3]
6. non_recursive : [eval_cousot9_3/3]
7. non_recursive : [eval_cousot9_2/3]
8. non_recursive : [eval_cousot9_1/3]
9. non_recursive : [eval_cousot9_0/3]
10. non_recursive : [eval_cousot9_bb0_in/3]
11. non_recursive : [eval_cousot9_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cousot9_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_cousot9_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cousot9_bb1_in/4 
* CE 5 is refined into CE [6] 
* CE 3 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_cousot9_bb1_in/4 
* CE 6: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 0
     [V_N>=V_i_0,0>=V_i_0,B=2] 
* CE 7: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 1+ eval_cousot9_bb1_in(V_N,C,V_N,D)
     [V_N>=V_i_0,V_i_0>=1,0>=V__0,V_i_0=C+1,D=2,B=2] 
* CE 8: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 1+ eval_cousot9_bb1_in(V_N,V_i_0,C,D)
     [V_N>=V_i_0,V__0>=1,V_i_0>=1,V__0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_cousot9_bb1_in/4 
* CEs [7] --> Loop 5 
* CEs [8] --> Loop 6 
* CEs [6] --> Loop 7 

#### Loops of eval_cousot9_bb1_in/4 
* Loop 5: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B)->  eval_cousot9_bb1_in(V_N,A',V_N,B')
                  [V_N>=V_i_0,V_i_0>=1,0>=V__0,V_i_0=A'+1,B'=2,B=2] 
* Loop 6: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B)->  eval_cousot9_bb1_in(V_N,V_i_0,V__0',B')
                  [V_N>=V_i_0,V__0>=1,V_i_0>=1,V__0=V__0'+1,B'=2,B=2] 
* Loop 7: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) [V_N>=V_i_0,0>=V_i_0,B=2] 

### Ranking functions of CR eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 

#### Partial ranking functions of CR eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 
* Partial RF of phase [5,6]:
  - RF of loop [5:1]:
    -V__0+1 depends on loops [6:1] 
    V_i_0
  - RF of loop [6:1]:
    V__0 depends on loops [5:1] 


### Resulting Chains:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 
* [[5,6],7]
* [7]


### Specialization of cost equations eval_cousot9_start/3 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations eval_cousot9_start/3 
* CE 9: eval_cousot9_start(V_j,V_N,B) = 1+ eval_cousot9_bb1_in(V_N,V_N,V_j,C):[[5,6],7]
     [V_N>=1,C=2] 
* CE 10: eval_cousot9_start(V_j,V_N,B) = 1+ eval_cousot9_bb1_in(V_N,V_N,V_j,C):[7]
     [0>=V_N,C=2] 

### Cost equations --> "Loop" of eval_cousot9_start/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_cousot9_start/3 
* Loop 8: eval_cousot9_start(V_j,V_N,B) [V_N>=1] 
* Loop 9: eval_cousot9_start(V_j,V_N,B) [0>=V_N] 

### Ranking functions of CR eval_cousot9_start(V_j,V_N,B) 

#### Partial ranking functions of CR eval_cousot9_start(V_j,V_N,B) 


### Resulting Chains:eval_cousot9_start(V_j,V_N,B) 
* [9]
* [8]


Computing Bounds
=====================================

#### Cost of loops [5,6] 

 * loop 5:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1
 * loop 6:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1
#### Cost of phase [5,6]:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1*it(5)+1*it(6)+0
  Such that:aux(8) =< V_N
it(5) =< V_i_0
it(5) =< V_i_0-V_i_0'
aux(10) =< V__0
aux(3) =< it(5)*aux(8)
it(6) =< aux(3)+aux(10)
it(5) >= V_i_0-V_i_0'

#### Cost of chains of eval_cousot9_bb1_in(V_N,V_i_0,V__0,B):
* Chain [[5,6],7]: 1*it(5)+1*it(6)+0
  Such that:aux(8) =< V_N
it(5) =< V_i_0
aux(10) =< V__0
aux(3) =< it(5)*aux(8)
it(6) =< aux(3)+aux(10)
it(5) >= V_i_0

  with precondition: [B=2,V_i_0>=1,V_N>=V_i_0] 

* Chain [7]: 0
  with precondition: [B=2,0>=V_i_0,V_N>=V_i_0] 


#### Cost of chains of eval_cousot9_start(V_j,V_N,B):
* Chain [9]: 1
  with precondition: [0>=V_N] 

* Chain [8]: 1*s(2)+1*s(5)+1
  Such that:s(3) =< V_j
aux(13) =< V_N
s(2) =< aux(13)
s(4) =< s(2)*aux(13)
s(5) =< s(4)+s(3)
s(2) >= V_N

  with precondition: [V_N>=1] 


Closed-form bounds of eval_cousot9_start(V_j,V_N,B): 
-------------------------------------
* Chain [9] with precondition: [0>=V_N] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [8] with precondition: [V_N>=1] 
    - Lower bound: V_N+1 
    - Complexity: n
 
### Partitioned lower bound of eval_cousot9_start(V_j,V_N,B): 
* 1 
 if [0>=V_N]
* V_N+1 
 if [V_N>=1]
Possible lower bounds : [1,V_N+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 36 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 45 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 109 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 67 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 281 ms.

