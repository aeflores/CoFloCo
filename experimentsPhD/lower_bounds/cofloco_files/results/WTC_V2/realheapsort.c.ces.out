Warning: Ignored call to eval_realheapsort_stop/1 in equation eval_realheapsort_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [eval_realheapsort_bb16_in/1]
1. recursive : [eval_realheapsort_bb2_in/7,eval_realheapsort_bb3_in/7,eval_realheapsort_bb4_in/7]
2. recursive : [eval_realheapsort_28/6,eval_realheapsort_29/6,eval_realheapsort__critedge_in/5,eval_realheapsort_bb1_in/4,loop_cont_eval_realheapsort_bb2_in/6]
3. recursive : [eval_realheapsort_bb10_in/7,eval_realheapsort_bb11_in/7,eval_realheapsort_bb12_in/7,eval_realheapsort_bb13_in/8,eval_realheapsort_bb14_in/8,eval_realheapsort_bb8_in/7,eval_realheapsort_bb9_in/7]
4. recursive : [eval_realheapsort_85/5,eval_realheapsort_86/5,eval_realheapsort_bb15_in/4,eval_realheapsort_bb6_in/3,eval_realheapsort_bb7_in/3,loop_cont_eval_realheapsort_bb8_in/5]
5. non_recursive : [loop_cont_eval_realheapsort_bb6_in/2]
6. non_recursive : [eval_realheapsort_39/2]
7. non_recursive : [eval_realheapsort_38/2]
8. non_recursive : [eval_realheapsort_37/2]
9. non_recursive : [eval_realheapsort_36/2]
10. non_recursive : [eval_realheapsort_35/2]
11. non_recursive : [eval_realheapsort_34/2]
12. non_recursive : [eval_realheapsort_33/2]
13. non_recursive : [eval_realheapsort_32/2]
14. non_recursive : [eval_realheapsort_31/2]
15. non_recursive : [eval_realheapsort_30/2]
16. non_recursive : [eval_realheapsort_bb5_in/2]
17. non_recursive : [loop_cont_eval_realheapsort_bb1_in/3]
18. non_recursive : [eval_realheapsort_2/2]
19. non_recursive : [eval_realheapsort_1/2]
20. non_recursive : [eval_realheapsort_0/2]
21. non_recursive : [eval_realheapsort_bb0_in/2]
22. non_recursive : [eval_realheapsort_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_realheapsort_bb2_in/7
2. SCC is partially evaluated into eval_realheapsort_bb1_in/4
3. SCC is partially evaluated into eval_realheapsort_bb8_in/7
4. SCC is partially evaluated into eval_realheapsort_bb6_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_realheapsort_2/2
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_realheapsort_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realheapsort_bb2_in/7 
* CE 9 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations eval_realheapsort_bb2_in/7 
* CE 18: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) = 0
     [B>=C,A>=B+1,C>=1,D=3] 
* CE 19: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) = 0
     [B>=C,A>=B+1,0>=C,D=3] 
* CE 20: eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) = 1+ eval_realheapsort_bb2_in(V_N,V_k_0,F,G,C,D,E)
     [2*F+2>=V_j_0,V_k_0>=V_j_0,V_N>=V_k_0+1,V_j_0>=2*F+1,V_j_0>=1,G=3,B=3] 

### Cost equations --> "Loop" of eval_realheapsort_bb2_in/7 
* CEs [20] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_realheapsort_bb2_in/7 
* Loop 17: eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E)->  eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0',B',C,D,E)
                  [2*V_j_0'+2>=V_j_0,V_k_0>=V_j_0,V_N>=V_k_0+1,V_j_0>=2*V_j_0'+1,V_j_0>=1,B'=3,B=3] 
* Loop 18: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) [B>=C,A>=B+1,C>=1,D=3] 
* Loop 19: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) [B>=C,A>=B+1,0>=C,D=3] 

### Ranking functions of CR eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* RF of phase [17]: [V_j_0]

#### Partial ranking functions of CR eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_j_0


### Resulting Chains:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Specialization of cost equations eval_realheapsort_bb1_in/4 
* CE 6 is refined into CE [21] 
* CE 5 is refined into CE [22,23,24,25] 


#### Refined cost equations eval_realheapsort_bb1_in/4 
* CE 21: eval_realheapsort_bb1_in(A,B,C,A) = 0
     [B>=A,C=5] 
* CE 22: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,E):[[17],19]+ eval_realheapsort_bb1_in(V_N,F,G,C)
     [V_N>=V_k_0+1,2*E+1>=0,V_k_0>=1,0>=E,V_k_0+1=F,G=5,D=3,B=5] 
* CE 23: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,E):[[17],18]+ eval_realheapsort_bb1_in(V_N,F,G,C)
     [V_N>=V_k_0+1,V_k_0>=2*E+1,E>=1,V_k_0+1=F,G=5,D=3,B=5] 
* CE 24: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,V_k_0):[19]+ eval_realheapsort_bb1_in(V_N,E,F,C)
     [V_N>=V_k_0+1,0>=V_k_0,V_k_0+1=E,F=5,D=3,B=5] 
* CE 25: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,V_k_0):[18]+ eval_realheapsort_bb1_in(V_N,E,F,C)
     [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=E,F=5,D=3,B=5] 

### Cost equations --> "Loop" of eval_realheapsort_bb1_in/4 
* CEs [25] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [21] --> Loop 24 

#### Loops of eval_realheapsort_bb1_in/4 
* Loop 20: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 21: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 22: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,0>=V_k_0,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 23: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0',V_k_0'>=4,V_k_0'=V_k_0+1,B'=5,B=5] 
* Loop 24: eval_realheapsort_bb1_in(A,B,C,A) [B>=A,C=5] 

### Ranking functions of CR eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* RF of phase [20,21,23]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* Partial RF of phase [20,21,23]:
  - RF of loop [20:1,21:1,23:1]:
    V_N-V_k_0


### Resulting Chains:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* [[20,21,23],24]


### Specialization of cost equations eval_realheapsort_bb8_in/7 
* CE 17 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 16 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 14 is refined into CE [30] 
* CE 13 is refined into CE [31] 


#### Refined cost equations eval_realheapsort_bb8_in/7 
* CE 26: eval_realheapsort_bb8_in(A,B,C,D,A,B,C) = 0
     [B+2*C+2>=A,A>=B+2,D=2] 
* CE 27: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,V_k_1+F+2=V_N,G=2,B=2] 
* CE 28: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+1=F,G=2,B=2] 
* CE 29: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+2=F,G=2,B=2] 
* CE 30: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,V_N,F,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,F=2,B=2] 
* CE 31: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,V_N,F,C,D,E)
     [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,F=2,B=2] 

### Cost equations --> "Loop" of eval_realheapsort_bb8_in/7 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [26] --> Loop 30 

#### Loops of eval_realheapsort_bb8_in/7 
* Loop 25: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,V_k_1+V_j_1'+2=V_N,B'=2,B=2] 
* Loop 26: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+1=V_j_1',B'=2,B=2] 
* Loop 27: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+2=V_j_1',B'=2,B=2] 
* Loop 28: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_N,A',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,A'=2,B=2] 
* Loop 29: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_N,A',C,D,E)
                  [V_N>=V_k_1+2,V_N=2*V_j_1+V_k_1+3,A'=2,B=2] 
* Loop 30: eval_realheapsort_bb8_in(A,B,C,D,A,B,C) [B+2*C+2>=A,A>=B+2,D=2] 

### Ranking functions of CR eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 

#### Partial ranking functions of CR eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 


### Resulting Chains:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 
* [[26,27,28,29]]...
* [[26,27,28,29],30]
* [[26,27,28,29],25,30]
* [30]
* [25,30]


### Specialization of cost equations eval_realheapsort_bb6_in/3 
* CE 8 is refined into CE [32] 
* CE 7 is refined into CE [33,34,35,36,37] 


#### Refined cost equations eval_realheapsort_bb6_in/3 
* CE 32: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 0
     [V_k_1+1>=V_N,B=4] 
* CE 33: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,E,F,G):[[26,27,28,29]]
     [V_N>=V_k_1+3,H=F+1,I=4,D=2,C=0,B=4] 
* CE 34: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,V_N,V_k_1,E):[[26,27,28,29],30]+ eval_realheapsort_bb6_in(V_N,F,G)
     [V_k_1+2*E+2>=V_N,V_N>=V_k_1+3,V_k_1+1=F,G=4,D=2,C=0,B=4] 
* CE 35: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,V_N,V_k_1,E):[[26,27,28,29],25,30]+ eval_realheapsort_bb6_in(V_N,F,G)
     [V_N>=V_k_1+3,V_k_1+E+2=V_N,V_k_1+1=F,G=4,D=2,C=0,B=4] 
* CE 36: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,C,D,E,V_N,F,G):[30]+ eval_realheapsort_bb6_in(V_N,H,I)
     [V_N=H+1,V_N=F+2,V_N=C+2,V_N=V_k_1+2,I=4,G=0,E=2,D=0,B=4] 
* CE 37: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,C,D,E,V_N,F,G):[25,30]+ eval_realheapsort_bb6_in(V_N,H,I)
     [V_N=H+2,V_N=F+3,V_N=C+3,V_N=V_k_1+3,I=4,G=1,E=2,D=0,B=4] 

### Cost equations --> "Loop" of eval_realheapsort_bb6_in/3 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [32] --> Loop 36 

#### Loops of eval_realheapsort_bb6_in/3 
* Loop 31: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N>=V_k_1+3,V_k_1+1=V_k_1',B'=4,B=4] 
* Loop 32: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N>=V_k_1+3,V_k_1+1=V_k_1',B'=4,B=4] 
* Loop 33: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N=V_k_1'+2,V_N=V_k_1+3,B'=4,B=4] 
* Loop 34: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N=V_k_1'+1,V_N=V_k_1+2,B'=4,B=4] 
* Loop 35: eval_realheapsort_bb6_in(V_N,V_k_1,B) [V_N>=V_k_1+3,B=4] 
* Loop 36: eval_realheapsort_bb6_in(V_N,V_k_1,B) [V_k_1+1>=V_N,B=4] 

### Ranking functions of CR eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* RF of phase [31,32]: [V_N-V_k_1-2]

#### Partial ranking functions of CR eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* Partial RF of phase [31,32]:
  - RF of loop [31:1,32:1]:
    V_N-V_k_1-2


### Resulting Chains:eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* [[31,32],35]...
* [[31,32],34,36]
* [[31,32],33,34,36]
* [36]
* [35]...
* [34,36]
* [33,34,36]


### Specialization of cost equations eval_realheapsort_2/2 
* CE 3 is refined into CE [38,39,40,41,42] 
* CE 4 is refined into CE [43] 


#### Refined cost equations eval_realheapsort_2/2 
* CE 38: eval_realheapsort_2(V_N,B) = 2+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[20,21,23],24]+ eval_realheapsort_bb6_in(V_N,E,F):[[31,32],35]
     [V_N>=4,F=4,E=0,D=5,C=1] 
* CE 39: eval_realheapsort_2(V_N,B) = 2+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[20,21,23],24]+ eval_realheapsort_bb6_in(V_N,E,F):[[31,32],34,36]
     [V_N>=3,F=4,E=0,D=5,C=1] 
* CE 40: eval_realheapsort_2(V_N,B) = 2+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[20,21,23],24]+ eval_realheapsort_bb6_in(V_N,E,F):[[31,32],33,34,36]
     [V_N>=4,F=4,E=0,D=5,C=1] 
* CE 41: eval_realheapsort_2(V_N,B) = 2+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[20,21,23],24]+ eval_realheapsort_bb6_in(V_N,E,F):[35]
     [V_N>=3,F=4,E=0,D=5,C=1] 
* CE 42: eval_realheapsort_2(V_N,B) = 2+ eval_realheapsort_bb1_in(C,D,E,F):[[20,21,23],24]+ eval_realheapsort_bb6_in(G,H,I):[33,34,36]
     [I=4,H=0,G=3,F=3,E=5,D=1,C=3,V_N=3] 
* CE 43: eval_realheapsort_2(V_N,B) = 0
     [2>=V_N] 

### Cost equations --> "Loop" of eval_realheapsort_2/2 
* CEs [40] --> Loop 37 
* CEs [39] --> Loop 38 
* CEs [43] --> Loop 39 
* CEs [42] --> Loop 40 
* CEs [38] --> Loop 41 
* CEs [41] --> Loop 42 

#### Loops of eval_realheapsort_2/2 
* Loop 37: eval_realheapsort_2(V_N,B) [V_N>=4] 
* Loop 38: eval_realheapsort_2(V_N,B) [V_N>=3] 
* Loop 39: eval_realheapsort_2(V_N,B) [2>=V_N] 
* Loop 40: eval_realheapsort_2(V_N,B) [V_N=3] 
* Loop 41: eval_realheapsort_2(V_N,B) [V_N>=4] 
* Loop 42: eval_realheapsort_2(V_N,B) [V_N>=3] 

### Ranking functions of CR eval_realheapsort_2(V_N,B) 

#### Partial ranking functions of CR eval_realheapsort_2(V_N,B) 


### Resulting Chains:eval_realheapsort_2(V_N,B) 
* [42]...
* [41]...
* [40]
* [39]
* [38]
* [37]


### Specialization of cost equations eval_realheapsort_start/2 
* CE 2 is refined into CE [44,45,46,47,48,49] 


#### Refined cost equations eval_realheapsort_start/2 
* CE 44: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[42]
     [V_N>=3] 
* CE 45: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[41]
     [V_N>=4] 
* CE 46: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(C,B):[40]
     [C=3,V_N=3] 
* CE 47: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[39]
     [2>=V_N] 
* CE 48: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[38]
     [V_N>=3] 
* CE 49: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[37]
     [V_N>=4] 

### Cost equations --> "Loop" of eval_realheapsort_start/2 
* CEs [49] --> Loop 43 
* CEs [48] --> Loop 44 
* CEs [47] --> Loop 45 
* CEs [46] --> Loop 46 
* CEs [45] --> Loop 47 
* CEs [44] --> Loop 48 

#### Loops of eval_realheapsort_start/2 
* Loop 43: eval_realheapsort_start(V_N,B) [V_N>=4] 
* Loop 44: eval_realheapsort_start(V_N,B) [V_N>=3] 
* Loop 45: eval_realheapsort_start(V_N,B) [2>=V_N] 
* Loop 46: eval_realheapsort_start(V_N,B) [V_N=3] 
* Loop 47: eval_realheapsort_start(V_N,B) [V_N>=4] 
* Loop 48: eval_realheapsort_start(V_N,B) [V_N>=3] 

### Ranking functions of CR eval_realheapsort_start(V_N,B) 

#### Partial ranking functions of CR eval_realheapsort_start(V_N,B) 


### Resulting Chains:eval_realheapsort_start(V_N,B) 
* [48]...
* [47]...
* [46]
* [45]
* [44]
* [43]


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [17]:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1*it(17)+0
  Such that:it(17) =< V_j_0
it(17) =< V_j_0-V_j_0'

#### Cost of phase [17]:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1*it(17)+0
  Such that:it(17) =< V_j_0
it(17) =< V_j_0-V_j_0'

#### Cost of chains of eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< V_j_0

  with precondition: [B=3,V_N=C,V_k_0=D,0>=E,V_j_0>=1,2*E+1>=0,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V_j_0-E

  with precondition: [B=3,V_N=C,V_k_0=D,E>=1,V_j_0>=2*E+1,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [19]: 0
  with precondition: [B=3,V_N=C,V_k_0=D,V_j_0=E,0>=V_j_0,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [18]: 0
  with precondition: [B=3,V_N=C,V_k_0=D,V_j_0=E,V_j_0>=1,V_N>=V_k_0+1,V_k_0>=V_j_0] 


#### Cost of loops [20,21,23] 

 * loop 20:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
2
 * loop 21:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
1*s(2)+2
  Such that:s(2) =< V_k_0'-1

 * loop 23:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
1*s(4)+2
  Such that:s(4) =< V_k_0'-2

#### Cost of phase [20,21,23]:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
2*it(20)+2*it(21)+2*it(23)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< V_N-1
it(20)+it(21)+it(23) =< V_N-V_k_0
it(20)+it(21)+it(23) =< V_N-V_k_0-V_N'+V_k_0'
aux(2) =< aux(1)-1
s(5) =< it(21)*aux(1)
s(6) =< it(23)*aux(2)
it(20)+it(21)+it(23) >= V_N-V_k_0-V_N'+V_k_0'

#### Cost of chains of eval_realheapsort_bb1_in(V_N,V_k_0,B,C):
* Chain [[20,21,23],24]: 2*it(20)+2*it(21)+2*it(23)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< V_N-1
it(23)+it(21)+it(20) =< V_N-V_k_0
aux(2) =< aux(1)-1
s(6) =< it(23)*aux(2)
it(23)+it(21)+it(20) >= -V_k_0+C

  with precondition: [B=5,V_N=C,V_N>=3,V_k_0>=1,V_N>=V_k_0+1] 


#### Cost of loops [26,27,28,29] 

 * loop 26:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 27:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 28:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 29:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
#### Cost of phase [26,27,28,29]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(26)+0
#### Cost of phase [26,27,28,29]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(26)+0
#### Cost of phase [26,27,28,29]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(26)+0
#### Cost of chains of eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E):
* Chain [[26,27,28,29]]...: 4*it(26)+0
  with precondition: [V_N>=2*V_j_1+V_k_1+3,V_N>=V_k_1+2,B=2] 

* Chain [[26,27,28,29],30]: 4*it(26)+0
  with precondition: [B=2,V_N=C,V_k_1=D,V_N>=V_k_1+2,V_N>=2*V_j_1+V_k_1+3,V_k_1+2*E+2>=V_N] 

* Chain [[26,27,28,29],25,30]: 4*it(26)+1
  with precondition: [B=2,D=V_k_1,V_N=C,V_N=D+E+2,V_N>=D+2,V_N>=2*V_j_1+D+3] 

* Chain [30]: 0
  with precondition: [B=2,V_N=C,V_k_1=D,V_j_1=E,V_N>=V_k_1+2,V_k_1+2*V_j_1+2>=V_N] 

* Chain [25,30]: 1
  with precondition: [B=2,V_N=C,V_k_1=D,V_k_1+E+2=V_N,V_k_1+2*V_j_1+3=V_N,V_N>=V_k_1+2] 


#### Cost of loops [31,32] 

 * loop 31:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
4*s(9)+3
 * loop 32:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
4*s(11)+2
#### Cost of phase [31,32]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
3*it(31)+2*it(32)+8*s(12)+0
  Such that:it(31)+it(32) =< V_N-V_k_1-2
it(31)+it(32) =< V_N-V_k_1-V_N'+V_k_1'
it(31)+it(32) >= V_N-V_k_1-V_N'+V_k_1'

#### Cost of phase [31,32]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
3*it(31)+2*it(32)+8*s(12)+0
  Such that:it(31)+it(32) =< V_N-V_k_1-2
it(31)+it(32) =< V_N-V_k_1-V_N'+V_k_1'
it(31)+it(32) >= V_N-V_k_1-V_N'+V_k_1'

#### Cost of phase [31,32]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
3*it(31)+2*it(32)+8*s(12)+0
  Such that:it(31)+it(32) =< V_N-V_k_1-2
it(31)+it(32) =< V_N-V_k_1-V_N'+V_k_1'
it(31)+it(32) >= V_N-V_k_1-V_N'+V_k_1'

#### Cost of chains of eval_realheapsort_bb6_in(V_N,V_k_1,B):
* Chain [[31,32],35]...: 3*it(31)+2*it(32)+12*s(7)+2
  Such that:it(32)+it(31) =< V_N-V_k_1-3
it(32)+it(31) >= 1

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[31,32],34,36]: 3*it(31)+2*it(32)+8*s(12)+2
  Such that:it(32)+it(31) =< V_N-V_k_1-2
it(32)+it(31) >= V_N-V_k_1-2

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [[31,32],33,34,36]: 3*it(31)+2*it(32)+8*s(12)+5
  Such that:it(32)+it(31) =< V_N-V_k_1-3
it(32)+it(31) >= V_N-V_k_1-3

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [36]: 0
  with precondition: [B=4,V_k_1>=0,V_k_1+1>=V_N] 

* Chain [35]...: 4*s(7)+2
  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [34,36]: 2
  with precondition: [B=4,V_N=V_k_1+2,V_N>=2] 

* Chain [33,34,36]: 5
  with precondition: [B=4,V_N=V_k_1+3,V_N>=3] 


#### Cost of chains of eval_realheapsort_2(V_N,B):
* Chain [42]...: 2*s(15)+2*s(16)+2*s(17)+1*s(19)+5*s(20)+4
  Such that:aux(3) =< V_N-1
s(15)+s(16)+s(17) =< aux(3)
s(18) =< aux(3)-1
s(19) =< s(15)*s(18)
s(17)+s(16)+s(15) >= V_N-1

  with precondition: [V_N>=3] 

* Chain [41]...: 2*s(23)+2*s(24)+2*s(25)+1*s(27)+13*s(28)+2*s(29)+3*s(30)+4
  Such that:s(30)+s(29) =< V_N-3
aux(4) =< V_N-1
s(23)+s(24)+s(25) =< aux(4)
s(26) =< aux(4)-1
s(27) =< s(23)*s(26)
s(29)+s(30) >= 1
s(25)+s(24)+s(23) >= V_N-1

  with precondition: [V_N>=4] 

* Chain [40]: 2*s(33)+2*s(34)+2*s(35)+1*s(37)+1*s(38)+7
  Such that:aux(5) =< 2
s(33)+s(34)+s(35) =< aux(5)
s(36) =< aux(5)-1
s(37) =< s(33)*s(36)
s(35)+s(34)+s(33) >= 2

  with precondition: [V_N=3] 

* Chain [39]: 0
  with precondition: [2>=V_N] 

* Chain [38]: 2*s(40)+2*s(41)+2*s(42)+1*s(44)+9*s(45)+2*s(46)+3*s(47)+4
  Such that:s(47)+s(46) =< V_N-2
aux(6) =< V_N-1
s(40)+s(41)+s(42) =< aux(6)
s(43) =< aux(6)-1
s(44) =< s(40)*s(43)
s(47)+s(46) >= V_N-2
s(42)+s(41)+s(40) >= V_N-1

  with precondition: [V_N>=3] 

* Chain [37]: 2*s(50)+2*s(51)+2*s(52)+1*s(54)+9*s(55)+2*s(56)+3*s(57)+7
  Such that:s(57)+s(56) =< V_N-3
aux(7) =< V_N-1
s(50)+s(51)+s(52) =< aux(7)
s(53) =< aux(7)-1
s(54) =< s(50)*s(53)
s(57)+s(56) >= V_N-3
s(52)+s(51)+s(50) >= V_N-1

  with precondition: [V_N>=4] 


#### Cost of chains of eval_realheapsort_start(V_N,B):
* Chain [48]...: 2*s(60)+2*s(61)+2*s(62)+1*s(64)+5*s(65)+4
  Such that:s(59) =< V_N-1
s(60)+s(61)+s(62) =< s(59)
s(63) =< s(59)-1
s(64) =< s(62)*s(63)
s(62)+s(61)+s(60) >= V_N-1

  with precondition: [V_N>=3] 

* Chain [47]...: 3*s(66)+2*s(67)+2*s(69)+2*s(70)+2*s(71)+1*s(73)+13*s(74)+4
  Such that:s(67)+s(66) =< V_N-3
s(68) =< V_N-1
s(69)+s(70)+s(71) =< s(68)
s(72) =< s(68)-1
s(73) =< s(71)*s(72)
s(66)+s(67) >= 1
s(71)+s(70)+s(69) >= V_N-1

  with precondition: [V_N>=4] 

* Chain [46]: 2*s(76)+2*s(77)+2*s(78)+1*s(80)+1*s(81)+7
  Such that:s(75) =< 2
s(76)+s(77)+s(78) =< s(75)
s(79) =< s(75)-1
s(80) =< s(78)*s(79)
s(76)+s(77)+s(78) >= 2

  with precondition: [V_N=3] 

* Chain [45]: 0
  with precondition: [2>=V_N] 

* Chain [44]: 3*s(82)+2*s(83)+2*s(85)+2*s(86)+2*s(87)+1*s(89)+9*s(90)+4
  Such that:s(83)+s(82) =< V_N-2
s(84) =< V_N-1
s(85)+s(86)+s(87) =< s(84)
s(88) =< s(84)-1
s(89) =< s(87)*s(88)
s(83)+s(82) >= V_N-2
s(87)+s(86)+s(85) >= V_N-1

  with precondition: [V_N>=3] 

* Chain [43]: 3*s(91)+2*s(92)+2*s(94)+2*s(95)+2*s(96)+1*s(98)+9*s(99)+7
  Such that:s(92)+s(91) =< V_N-3
s(93) =< V_N-1
s(94)+s(95)+s(96) =< s(93)
s(97) =< s(93)-1
s(98) =< s(96)*s(97)
s(92)+s(91) >= V_N-3
s(96)+s(95)+s(94) >= V_N-1

  with precondition: [V_N>=4] 


Closed-form bounds of eval_realheapsort_start(V_N,B): 
-------------------------------------
* Chain [48]... with precondition: [V_N>=3] 
    - Lower bound: 2*V_N+2 
    - Complexity: n
 * Chain [47]... with precondition: [V_N>=4] 
    - Lower bound: 2*V_N+4 
    - Complexity: n
 * Chain [46] with precondition: [V_N=3] 
    - Lower bound: 11 
    - Complexity: constant
 * Chain [45] with precondition: [2>=V_N] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [44] with precondition: [V_N>=3] 
    - Lower bound: 4*V_N-2 
    - Complexity: n
 * Chain [43] with precondition: [V_N>=4] 
    - Lower bound: 4*V_N-1 
    - Complexity: n
 
### Partitioned lower bound of eval_realheapsort_start(V_N,B): 
* 0 
 if [2>=V_N]
* 2*V_N+2 
 if [V_N>=3]
Possible lower bounds : [0,2*V_N+2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 243 ms.
* Invariants computed in 295 ms.
   - Backward Invariants 138 ms.
   - Transitive Invariants 47 ms.
* Refinement performed in 356 ms.
* Termination proved in 43 ms.
* Upper bounds computed in 425 ms.
   - Equation cost structures 129 ms.
   - Phase cost structures 170 ms.
   - Chain cost structures 106 ms.
   - Solving cost expressions 13 ms.
* Total analysis performed in 1642 ms.

