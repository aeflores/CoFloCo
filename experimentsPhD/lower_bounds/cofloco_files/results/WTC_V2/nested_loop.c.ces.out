Warning: Ignored call to eval_nested_loop_stop/1 in equation eval_nested_loop__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [eval_nested_loop__critedge_in/1]
1. recursive : [eval_nested_loop_10/18,eval_nested_loop_11/19,eval_nested_loop_bb5_in/18,eval_nested_loop_bb6_in/18,eval_nested_loop_bb7_in/19]
2. recursive : [eval_nested_loop_6/15,eval_nested_loop_7/16,eval_nested_loop__critedge3_in/15,eval_nested_loop_bb3_in/15,eval_nested_loop_bb4_in/16,loop_cont_eval_nested_loop_bb5_in/16]
3. recursive : [eval_nested_loop_15/9,eval_nested_loop_16/9,eval_nested_loop_4/5,eval_nested_loop_5/6,eval_nested_loop__critedge2_in/8,eval_nested_loop_bb1_in/5,eval_nested_loop_bb2_in/5,loop_cont_eval_nested_loop__critedge3_in/9]
4. non_recursive : [loop_cont_eval_nested_loop_bb1_in/2]
5. non_recursive : [eval_nested_loop_3/4]
6. non_recursive : [eval_nested_loop_2/4]
7. non_recursive : [eval_nested_loop_1/4]
8. non_recursive : [eval_nested_loop_0/4]
9. non_recursive : [eval_nested_loop_bb0_in/4]
10. non_recursive : [eval_nested_loop_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_nested_loop_bb5_in/18
2. SCC is partially evaluated into eval_nested_loop__critedge3_in/15
3. SCC is partially evaluated into eval_nested_loop_bb1_in/5
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_nested_loop_3/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_nested_loop_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nested_loop_bb5_in/18 
* CE 13 is refined into CE [16] 
* CE 15 is refined into CE [17] 
* CE 14 is refined into CE [18] 


#### Refined cost equations eval_nested_loop_bb5_in/18 
* CE 16: eval_nested_loop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) = 0
     [C>=J+1,B>=I,J>=G,H>=1,I=F+1,K=2] 
* CE 17: eval_nested_loop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) = 0
     [B>=I,J>=G,J>=C,H>=1,I=F+1,K=2] 
* CE 18: eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) = 1+ eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,V_7,V_9,K,L,C,D,E,F,G,H,I)
     [V_N>=V_k_0+1,V_m>=V_9,V_k_0>=V_i_1,V_7>=1,V_k_0+1=K,V_9=J+1,V_9=V_j_0+1,L=2,B=2] 

### Cost equations --> "Loop" of eval_nested_loop_bb5_in/18 
* CEs [18] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_nested_loop_bb5_in/18 
* Loop 15: eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I)->  eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,V_7,V_9,V_k_0',B',C,D,E,F,G,H,I)
                  [V_N>=V_k_0+1,V_m>=V_9,V_k_0>=V_i_1,V_7>=1,V_k_0+1=V_k_0',V_9=V_j_0'+1,V_9=V_j_0+1,B'=2,B=2] 
* Loop 16: eval_nested_loop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) [C>=J+1,B>=I,J>=G,H>=1,I=F+1,K=2] 
* Loop 17: eval_nested_loop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) [B>=I,J>=G,J>=C,H>=1,I=F+1,K=2] 

### Ranking functions of CR eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_N-V_k_0


### Resulting Chains:eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Specialization of cost equations eval_nested_loop__critedge3_in/15 
* CE 10 is refined into CE [19] 
* CE 12 is refined into CE [20] 
* CE 11 is refined into CE [21,22,23,24] 


#### Refined cost equations eval_nested_loop__critedge3_in/15 
* CE 19: eval_nested_loop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [B>=F+1,H=3] 
* CE 20: eval_nested_loop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [F>=B,H=3] 
* CE 21: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_N):[[15],17]+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_N,N,C,D,E,F,G,H,I)
     [V_m>=L,V_N>=V_i_1+1,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 
* CE 22: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,N):[[15],16]+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,N,O,C,D,E,F,G,H,I)
     [V_N>=N+1,V_m>=L,N>=V_i_1+1,K>=1,L=J+1,L=V_j_0+1,O=3,M=2,B=3] 
* CE 23: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_i_1):[17]+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_i_1,N,C,D,E,F,G,H,I)
     [V_i_1>=V_N,V_m>=L,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 
* CE 24: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_i_1):[16]+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_i_1,N,C,D,E,F,G,H,I)
     [V_N>=V_i_1+1,V_m>=L,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 

### Cost equations --> "Loop" of eval_nested_loop__critedge3_in/15 
* CEs [22] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [20] --> Loop 23 

#### Loops of eval_nested_loop__critedge3_in/15 
* Loop 18: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1',B',C,D,E,F,G,H,I)
                  [V_N>=V_i_1'+1,V_m>=V_j_0',V_i_1'>=V_i_1+1,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 19: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,B',C,D,E,F,G,H,I)
                  [V_m>=V_j_0',V_N>=V_i_1+1,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 20: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,B',C,D,E,F,G,H,I)
                  [V_m>=V_j_0',V_i_1>=V_N,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 21: eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,A',V_N,B',C,D,E,F,G,H,I)
                  [V_m>=A',V_N>=V_i_1+1,A'=V_j_0+1,B'=3,B=3] 
* Loop 22: eval_nested_loop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [B>=F+1,H=3] 
* Loop 23: eval_nested_loop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [F>=B,H=3] 

### Ranking functions of CR eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* RF of phase [18,19]: [V_m-V_j_0]
* RF of phase [20]: [V_m-V_j_0]

#### Partial ranking functions of CR eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1]:
    V_N-V_i_1-1
  - RF of loop [18:1,19:1]:
    V_m-V_j_0
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_m-V_j_0


### Resulting Chains:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* [[20],23]
* [[20],22]
* [[18,19],23]
* [[18,19],22]
* [[18,19],21,[20],23]
* [[18,19],21,[20],22]
* [[18,19],21,23]
* [[18,19],21,22]
* [23]
* [22]
* [21,[20],23]
* [21,[20],22]
* [21,23]
* [21,22]


### Specialization of cost equations eval_nested_loop_bb1_in/5 
* CE 7 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 8 is refined into CE [27,28,29,30,31,32,33,34,35,36,37,38,39,40] 


#### Refined cost equations eval_nested_loop_bb1_in/5 
* CE 25: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 0
     [V_n>=V_i_0+1,B=4] 
* CE 26: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 0
     [V_i_0>=V_n,B=4] 
* CE 27: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_i_0):[[20],23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,F,G)
     [V_n>=V_i_0+1,V_i_0>=V_N,C>=1,V_m>=1,V_i_0+1=F,G=4,E=3,D=0,B=4] 
* CE 28: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[[20],22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_n>=V_i_0+1,V_i_0>=V_N,F>=1,C>=1,V_i_0+1=G,H=4,E=3,D=0,B=4] 
* CE 29: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,F):[[18,19],23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_N>=F+1,F>=V_i_0,V_n>=V_i_0+1,C>=1,V_m>=1,F+1=G,H=4,E=3,D=0,B=4] 
* CE 30: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,G):[[18,19],22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,H,I)
     [V_N>=G+1,V_m>=F+1,G>=V_i_0,V_n>=V_i_0+1,F>=1,C>=1,G+1=H,I=4,E=3,D=0,B=4] 
* CE 31: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[[18,19],21,[20],23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=3,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 32: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[[18,19],21,[20],22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_n>=V_i_0+1,V_N>=V_i_0+1,F>=3,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 33: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[[18,19],21,23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 34: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[[18,19],21,22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_N>=V_i_0+1,V_n>=V_i_0+1,F>=2,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 35: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_n>=V_i_0+1,C>=1,0>=V_m,V_i_0+1=G,H=4,F=0,E=3,D=0,B=4] 
* CE 36: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_n>=V_i_0+1,C>=1,V_m>=1,V_i_0+1=G,H=4,F=0,E=3,D=0,B=4] 
* CE 37: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[21,[20],23]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 38: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[21,[20],22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_N>=V_i_0+1,V_n>=V_i_0+1,F>=2,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 39: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,C,V_N,V_i_0,D,E,V_i_0,F,V_n,G,V_N,V_i_0,D,H,V_N):[21,23]+ eval_nested_loop_bb1_in(V_n,I,V_N,J,K)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,D>=1,V_N+1=J,K=4,I=1,H=1,G=1,F=3,E=0,C=1,B=4,V_m=1] 
* CE 40: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[21,22]+ eval_nested_loop_bb1_in(V_n,V_m,V_N,G,H)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=G,H=4,F=1,E=3,D=0,B=4] 

### Cost equations --> "Loop" of eval_nested_loop_bb1_in/5 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [38] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [31] --> Loop 33 
* CEs [40] --> Loop 34 
* CEs [37] --> Loop 35 
* CEs [33] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [25] --> Loop 38 
* CEs [26] --> Loop 39 

#### Loops of eval_nested_loop_bb1_in/5 
* Loop 24: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0',V_i_0'>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,B'=4,B=4] 
* Loop 25: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0',V_i_0'>=V_i_0+1,V_n>=V_i_0+1,V_m>=1,B'=4,B=4] 
* Loop 26: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_i_0>=V_N,V_m>=2,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 27: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_m>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 28: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_i_0>=V_N,V_m>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 29: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,0>=V_m,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 30: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=4,V_N+1=V_i_0',B'=4,B=4] 
* Loop 31: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 32: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 33: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 34: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 35: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 36: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 37: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nested_loop_bb1_in(V_n,V_m',V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_N+1=V_i_0',B'=4,V_m'=1,B=4,V_m=1] 
* Loop 38: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) [V_n>=V_i_0+1,B=4] 
* Loop 39: eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) [V_i_0>=V_n,B=4] 

### Ranking functions of CR eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* RF of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]: [V_n-V_i_0]
* RF of phase [29]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* Partial RF of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:
  - RF of loop [24:1,25:1]:
    V_N-V_i_0
  - RF of loop [24:1,25:1,26:1,27:1,28:1]:
    V_n-V_i_0
  - RF of loop [30:1,31:1,32:1,33:1,34:1,35:1,36:1,37:1]:
    V_N/2-V_i_0/2
    V_n/2-V_i_0/2
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_n-V_i_0


### Resulting Chains:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* [[29],39]
* [[29],38]
* [[24,25,26,27,28,30,31,32,33,34,35,36,37],39]
* [[24,25,26,27,28,30,31,32,33,34,35,36,37],38]
* [39]
* [38]


### Specialization of cost equations eval_nested_loop_3/4 
* CE 3 is refined into CE [41,42,43,44,45,46] 
* CE 6 is refined into CE [47] 
* CE 5 is refined into CE [48] 
* CE 4 is refined into CE [49] 


#### Refined cost equations eval_nested_loop_3/4 
* CE 41: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(V_n,C,V_N,D,E):[[29],39]
     [V_N>=0,V_n>=1,E=4,D=0,C=0,V_m=0] 
* CE 42: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(V_n,C,V_N,D,E):[[29],38]
     [V_N>=0,V_n>=2,E=4,D=0,C=0,V_m=0] 
* CE 43: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(V_n,V_m,V_N,C,D):[[24,25,26,27,28,30,31,32,33,34,35,36,37],39]
     [V_N>=0,V_m>=1,V_n>=1,D=4,C=0] 
* CE 44: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(V_n,V_m,V_N,C,D):[[24,25,26,27,28,30,31,32,33,34,35,36,37],38]
     [V_N>=0,V_m>=1,V_n>=2,D=4,C=0] 
* CE 45: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(C,V_m,V_N,D,E):[39]
     [V_N>=0,V_m>=0,E=4,D=0,C=0,V_n=0] 
* CE 46: eval_nested_loop_3(V_n,V_m,V_N,B) = 1+ eval_nested_loop_bb1_in(V_n,V_m,V_N,C,D):[38]
     [V_N>=0,V_m>=0,V_n>=1,D=4,C=0] 
* CE 47: eval_nested_loop_3(V_n,V_m,V_N,B) = 0
     [0>=V_N+1] 
* CE 48: eval_nested_loop_3(V_n,V_m,V_N,B) = 0
     [0>=V_m+1] 
* CE 49: eval_nested_loop_3(V_n,V_m,V_N,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_nested_loop_3/4 
* CEs [44] --> Loop 40 
* CEs [43] --> Loop 41 
* CEs [46] --> Loop 42 
* CEs [47] --> Loop 43 
* CEs [48] --> Loop 44 
* CEs [49] --> Loop 45 
* CEs [42] --> Loop 46 
* CEs [41] --> Loop 47 
* CEs [45] --> Loop 48 

#### Loops of eval_nested_loop_3/4 
* Loop 40: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=2] 
* Loop 41: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=1] 
* Loop 42: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n>=1] 
* Loop 43: eval_nested_loop_3(V_n,V_m,V_N,B) [0>=V_N+1] 
* Loop 44: eval_nested_loop_3(V_n,V_m,V_N,B) [0>=V_m+1] 
* Loop 45: eval_nested_loop_3(V_n,V_m,V_N,B) [0>=V_n+1] 
* Loop 46: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_n>=2,V_m=0] 
* Loop 47: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_n>=1,V_m=0] 
* Loop 48: eval_nested_loop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n=0] 

### Ranking functions of CR eval_nested_loop_3(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nested_loop_3(V_n,V_m,V_N,B) 


### Resulting Chains:eval_nested_loop_3(V_n,V_m,V_N,B) 
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]


### Specialization of cost equations eval_nested_loop_start/4 
* CE 2 is refined into CE [50,51,52,53,54,55,56,57,58] 


#### Refined cost equations eval_nested_loop_start/4 
* CE 50: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(C,V_m,V_N,B):[48]
     [V_N>=0,V_m>=0,C=0,V_n=0] 
* CE 51: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,C,V_N,B):[47]
     [V_N>=0,V_n>=1,C=0,V_m=0] 
* CE 52: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,C,V_N,B):[46]
     [V_N>=0,V_n>=2,C=0,V_m=0] 
* CE 53: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[45]
     [0>=V_n+1] 
* CE 54: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[44]
     [0>=V_m+1] 
* CE 55: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[43]
     [0>=V_N+1] 
* CE 56: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[42]
     [V_N>=0,V_m>=0,V_n>=1] 
* CE 57: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[41]
     [V_N>=0,V_m>=1,V_n>=1] 
* CE 58: eval_nested_loop_start(V_n,V_m,V_N,B) = 0+ eval_nested_loop_3(V_n,V_m,V_N,B):[40]
     [V_N>=0,V_m>=1,V_n>=2] 

### Cost equations --> "Loop" of eval_nested_loop_start/4 
* CEs [58] --> Loop 49 
* CEs [57] --> Loop 50 
* CEs [56] --> Loop 51 
* CEs [55] --> Loop 52 
* CEs [54] --> Loop 53 
* CEs [53] --> Loop 54 
* CEs [52] --> Loop 55 
* CEs [51] --> Loop 56 
* CEs [50] --> Loop 57 

#### Loops of eval_nested_loop_start/4 
* Loop 49: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=2] 
* Loop 50: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=1] 
* Loop 51: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n>=1] 
* Loop 52: eval_nested_loop_start(V_n,V_m,V_N,B) [0>=V_N+1] 
* Loop 53: eval_nested_loop_start(V_n,V_m,V_N,B) [0>=V_m+1] 
* Loop 54: eval_nested_loop_start(V_n,V_m,V_N,B) [0>=V_n+1] 
* Loop 55: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_n>=2,V_m=0] 
* Loop 56: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_n>=1,V_m=0] 
* Loop 57: eval_nested_loop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n=0] 

### Ranking functions of CR eval_nested_loop_start(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nested_loop_start(V_n,V_m,V_N,B) 


### Resulting Chains:eval_nested_loop_start(V_n,V_m,V_N,B) 
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nested_loop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [15]:eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nested_loop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(15)+0
  Such that:it(15) =< V_N-V_k_0
it(15) =< V_N-V_k_0-V_N'+V_k_0'
it(15) >= V_N-V_k_0-V_N'+V_k_0'

#### Cost of phase [15]:eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nested_loop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(15)+0
  Such that:it(15) =< V_N-V_k_0
it(15) =< V_N-V_k_0-V_N'+V_k_0'
it(15) >= V_N-V_k_0-V_N'+V_k_0'

#### Cost of chains of eval_nested_loop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_N-V_k_0
it(15) >= V_N-V_k_0

  with precondition: [B=2,V_j_0+1=V_9,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_j_0+1=H,V_N=I,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,V_N>=V_k_0+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_k_0+I
it(15) >= -V_k_0+I

  with precondition: [B=2,V_j_0+1=V_9,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_j_0+1=H,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,I>=V_k_0+1,V_N>=I+1] 

* Chain [17]: 0
  with precondition: [B=2,C=V_n,F=V_i_0,G=V_4,V_j_0+1=V_9,V_m=D,V_N=E,V_j_0+1=H,V_k_0=I,V_7>=1,V_k_0>=V_N,V_m>=V_j_0+1,V_k_0>=V_i_1] 

* Chain [16]: 0
  with precondition: [B=2,C=V_n,F=V_i_0,G=V_4,V_j_0+1=V_9,V_m=D,V_N=E,V_j_0+1=H,V_k_0=I,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,V_N>=V_k_0+1] 


#### Cost of loops [20] 

 * loop 20:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2
#### Cost of phase [20]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(20)+0
  Such that:it(20) =< V_m-V_j_0
it(20) =< V_m-V_j_0-V_m'+V_j_0'
it(20) >= V_m-V_j_0-V_m'+V_j_0'

#### Cost of phase [20]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(20)+0
  Such that:it(20) =< V_m-V_j_0
it(20) =< V_m-V_j_0-V_m'+V_j_0'
it(20) >= V_m-V_j_0-V_m'+V_j_0'

#### Cost of loops [18,19] 

 * loop 18:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
1*s(2)+2
  Such that:s(2) =< -V_i_1+V_i_1'
s(2) >= -V_i_1+V_i_1'

 * loop 19:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2
#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of phase [18,19]:eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nested_loop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(18)+it(19) =< V_m-V_j_0
it(18)+it(19) =< V_m-V_j_0-V_m'+V_j_0'
aux(2) =< V_N-V_i_1-1
aux(3) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
aux(1) >= 1
it(18)+it(19) >= V_m-V_j_0-V_m'+V_j_0'
s(3) >= -V_i_1+V_i_1'
s(3) >= it(18)*aux(1)

#### Cost of chains of eval_nested_loop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I):
* Chain [[20],23]: 2*it(20)+0
  Such that:it(20) =< -V_j_0+H
it(20) >= -V_j_0+H

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_i_1=I,V_4>=1,V_j_0>=0,V_i_1>=V_N,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1] 

* Chain [[20],22]: 2*it(20)+0
  Such that:it(20) =< -V_j_0+H
it(20) >= -V_j_0+H

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_i_1=I,V_4>=1,V_j_0>=0,V_i_1>=V_N,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+1,V_m>=H+1] 

* Chain [[18,19],23]: 2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(19)+it(18) =< -V_j_0+H
aux(2) =< -V_i_1+E-1
aux(3) =< -V_i_1+I
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18) >= -V_j_0+D
s(3) >= -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1,I>=V_i_1,V_N>=I+1] 

* Chain [[18,19],22]: 2*it(18)+2*it(19)+1*s(3)+0
  Such that:it(19)+it(18) =< -V_j_0+H
aux(2) =< -V_i_1+E-1
aux(3) =< -V_i_1+I
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18) >= -V_j_0+H
s(3) >= -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+1,I>=V_i_1,V_m>=H+1,V_N>=I+1] 

* Chain [[18,19],21,[20],23]: 2*it(18)+2*it(19)+2*it(20)+1*s(3)+1*s(4)+2
  Such that:it(18) =< -V_j_0+H-2
it(19)+it(18)+it(20) =< -V_j_0+H-1
aux(2) =< -V_i_1+E-1
aux(3)+s(4) =< -V_i_1+E
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18)+it(20) >= -V_j_0+H-1
s(3)+s(4) >= -V_i_1+I
aux(4) >= 1
aux(4) >= aux(4)
it(18)+it(19) >= aux(4)
it(20) >= aux(4)
s(4) >= aux(4)
s(3) >= it(18)*aux(4)

  with precondition: [B=3,H=V_m,V_n=C,H=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+3,V_N>=V_i_1+1] 

* Chain [[18,19],21,[20],22]: 2*it(18)+2*it(19)+2*it(20)+1*s(3)+1*s(4)+2
  Such that:it(18) =< -V_j_0+H-2
it(19)+it(18)+it(20) =< -V_j_0+H-1
aux(2) =< -V_i_1+E-1
aux(3)+s(4) =< -V_i_1+E
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18)+it(20) >= -V_j_0+H-1
s(3)+s(4) >= -V_i_1+I
aux(5) >= 1
aux(5) >= aux(5)
it(18)+it(19) >= aux(5)
it(20) >= aux(5)
s(4) >= aux(5)
s(3) >= it(18)*aux(5)

  with precondition: [B=3,I=V_N,V_n=C,V_m=D,I=E,V_i_0=F,V_4=G,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+3,I>=V_i_1+1,V_m>=H+1] 

* Chain [[18,19],21,23]: 2*it(18)+2*it(19)+1*s(3)+1*s(4)+2
  Such that:it(19)+it(18) =< -V_j_0+H-1
aux(2) =< -V_i_1+E-1
aux(3)+s(4) =< -V_i_1+E
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18) >= -V_j_0+H-1
s(3)+s(4) >= -V_i_1+I
aux(6) >= 1
aux(6) >= aux(6)
s(4) >= aux(6)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [[18,19],21,22]: 2*it(18)+2*it(19)+1*s(3)+1*s(4)+2
  Such that:it(19)+it(18) =< -V_j_0+H-1
aux(2) =< -V_i_1+E-1
aux(3)+s(4) =< -V_i_1+E
it(18) =< aux(2)
s(3) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(19)+it(18) >= -V_j_0+H-1
s(3)+s(4) >= -V_i_1+I
aux(7) >= 1
aux(7) >= aux(7)
s(4) >= aux(7)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+2,V_N>=V_i_1+1,V_m>=H+1] 

* Chain [23]: 0
  with precondition: [B=3,E=V_N,V_n=C,V_m=D,V_i_0=F,V_4=G,V_j_0=H,V_i_1=I,V_4>=1,V_j_0>=0,V_j_0>=V_m,V_n>=V_i_0+1,V_i_1>=V_i_0] 

* Chain [22]: 0
  with precondition: [B=3,E=V_N,V_n=C,V_m=D,V_i_0=F,V_4=G,V_j_0=H,V_i_1=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1] 

* Chain [21,[20],23]: 2*it(20)+1*s(4)+2
  Such that:it(20) =< -V_j_0+H-1
s(4) =< -V_i_1+I
it(20) >= -V_j_0+H-1
s(4) >= -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [21,[20],22]: 2*it(20)+1*s(4)+2
  Such that:it(20) =< -V_j_0+H-1
s(4) =< -V_i_1+I
it(20) >= -V_j_0+H-1
s(4) >= -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+2,V_N>=V_i_1+1,V_m>=H+1] 

* Chain [21,23]: 1*s(4)+2
  Such that:s(4) =< -V_i_1+I
s(4) >= -V_i_1+I

  with precondition: [B=3,V_m=V_j_0+1,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_m>=1,V_4>=1,V_n>=V_i_0+1,V_i_1>=V_i_0,V_N>=V_i_1+1] 

* Chain [21,22]: 1*s(4)+2
  Such that:s(4) =< -V_i_1+I
s(4) >= -V_i_1+I

  with precondition: [B=3,H=V_j_0+1,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,H>=1,V_n>=V_i_0+1,V_i_1>=V_i_0,V_N>=V_i_1+1,V_m>=H+1] 


#### Cost of loops [29] 

 * loop 29:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2
#### Cost of phase [29]:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(29)+0
  Such that:it(29) =< V_n-V_i_0
it(29) =< V_n-V_i_0-V_n'+V_i_0'
it(29) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [29]:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(29)+0
  Such that:it(29) =< V_n-V_i_0
it(29) =< V_n-V_i_0-V_n'+V_i_0'
it(29) >= V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [24,25,26,27,28,30,31,32,33,34,35,36,37] 

 * loop 24:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(13)+2*s(12)+1*s(14)+2
  Such that:s(10) =< -V_i_0+V_N'-1
s(11) =< -V_i_0+V_i_0'-1
s(12)+s(13) =< V_m'-1
s(12) =< s(10)
s(14) =< s(10)
s(12) =< s(11)
s(14) =< s(11)
s(12)+s(13) >= 1
s(14) >= -V_i_0+V_i_0'-1

 * loop 25:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(21)+2*s(20)+1*s(24)+2
  Such that:s(20)+s(21) =< V_m
s(22) =< V_N-V_i_0-1
s(23) =< -V_i_0+V_i_0'-1
s(20) =< s(22)
s(24) =< s(22)
s(20) =< s(23)
s(24) =< s(23)
s(20)+s(21) >= V_m
s(24) >= -V_i_0+V_i_0'-1

 * loop 26:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(26)+2
  Such that:s(26) =< V_m-1
s(26) >= 1

 * loop 27:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2
 * loop 28:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(28)+2
  Such that:s(28) =< V_m'
s(28) >= V_m'

 * loop 30:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(40)+2*s(42)+2*s(41)+1*s(38)+1*s(44)+4
  Such that:s(37) =< -V_i_0+V_N'-1
s(38)+s(39) =< -V_i_0+V_N'
s(40) =< V_m'-3
s(40)+s(41)+s(42) =< V_m'-2
s(40) =< s(37)
s(44) =< s(37)
s(43) >= 1
s(40)+s(41)+s(42) >= 2
s(38)+s(44) >= V_N-V_i_0
s(43) >= s(43)
s(40)+s(42) >= s(43)
s(41) >= s(43)
s(38) >= s(43)
s(44) >= s(40)*s(43)

 * loop 31:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(47)+1*s(48)+4
  Such that:s(47) =< V_m-2
s(48) =< -V_i_0+V_i_0'-1
s(47) >= 1
s(48) >= -V_i_0+V_N'

 * loop 32:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(60)+2*s(59)+1*s(57)+1*s(61)+4
  Such that:s(56) =< -V_i_0+V_N'-1
s(57)+s(58) =< -V_i_0+V_N'
s(59)+s(60) =< V_m'-2
s(59) =< s(56)
s(61) =< s(56)
s(57)+s(61) >= V_N-V_i_0
s(62) >= 1
s(59)+s(60) >= s(62)
s(63) >= s(62)
s(63) >= s(63)
s(57) >= s(63)

 * loop 33:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(75)+2*s(77)+2*s(76)+1*s(73)+1*s(79)+4
  Such that:s(72) =< -V_i_0+V_N'-1
s(73)+s(74) =< -V_i_0+V_N'
s(75) =< V_m'-2
s(75)+s(76)+s(77) =< V_m'-1
s(75) =< s(72)
s(79) =< s(72)
s(78) >= 1
s(73)+s(79) >= V_N-V_i_0
s(75)+s(76)+s(77) >= V_m'-1
s(78) >= s(78)
s(75)+s(77) >= s(78)
s(76) >= s(78)
s(73) >= s(78)
s(79) >= s(75)*s(78)

 * loop 34:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
1*s(81)+4
  Such that:s(81) =< -V_i_0+V_i_0'-1
s(81) >= -V_i_0+V_N'

 * loop 35:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(85)+1*s(84)+4
  Such that:s(84) =< -V_i_0+V_i_0'-1
s(85) =< V_m'-1
s(84) >= -V_i_0+V_i_0'-1
s(85) >= V_m'-1

 * loop 36:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(94)+2*s(93)+1*s(96)+1*s(99)+4
  Such that:s(93)+s(94) =< V_m-1
s(95) =< -V_i_0+V_N'-1
s(96)+s(97) =< -V_i_0+V_N'
s(93) =< s(95)
s(99) =< s(95)
s(98) >= 1
s(96)+s(99) >= -V_i_0+V_N'
s(93)+s(94) >= V_m'-1
s(98) >= s(98)
s(96) >= s(98)

 * loop 37:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
1*s(101)+4
  Such that:s(101) =< -V_i_0+V_i_0'-1
s(101) >= -V_i_0+V_i_0'-1

#### Cost of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(24)+2*it(25)+2*it(26)+2*it(27)+2*it(28)+4*it(30)+4*it(31)+4*it(32)+4*it(33)+4*it(34)+4*it(35)+4*it(36)+4*it(37)+2*s(102)+2*s(103)+1*s(104)+2*s(107)+2*s(108)+1*s(109)+2*s(112)+2*s(113)+2*s(114)+2*s(115)+2*s(116)+1*s(117)+1*s(118)+2*s(121)+1*s(122)+2*s(123)+2*s(124)+1*s(125)+1*s(126)+2*s(130)+2*s(131)+2*s(132)+1*s(133)+1*s(134)+1*s(137)+2*s(138)+1*s(139)+2*s(140)+2*s(141)+1*s(142)+1*s(143)+1*s(146)+0
  Such that:it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n-V_i_0
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n-V_i_0-V_n'+V_i_0'
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n/2-V_i_0/2-V_n'/2+V_i_0'/2
aux(11) =< V_m-1
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_N/2-V_i_0/2-V_N'/2+V_i_0'/2
aux(39) =< V_n/2-V_i_0/2
aux(40) =< V_N-V_i_0-1
aux(41) =< V_N-V_i_0
aux(42) =< V_N-V_i_0-V_N'+V_i_0'
aux(43) =< V_N/2-V_i_0/2
it(30)+it(31) =< aux(39)
it(30)+it(32) =< aux(39)
it(30)+it(33) =< aux(39)
it(30)+it(34) =< aux(39)
it(30)+it(35) =< aux(39)
it(30)+it(36) =< aux(39)
it(30)+it(37) =< aux(39)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(40)
it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(40)
it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(40)
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(40)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(41)
it(24)+it(25)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(41)
it(24)+it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(41)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(42)
it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(42)
it(30)+it(31) =< aux(43)
it(30)+it(32) =< aux(43)
it(30)+it(33) =< aux(43)
it(30)+it(34) =< aux(43)
it(30)+it(35) =< aux(43)
it(30)+it(36) =< aux(43)
it(30)+it(37) =< aux(43)
aux(16) =< aux(11)
aux(22) =< aux(11)-1
aux(21) =< aux(11)-2
aux(14) =< aux(11)+1
aux(15) =< aux(40)
s(102)+s(103) =< it(24)*aux(11)
s(106) =< it(24)*aux(40)
s(140)+s(141) =< it(36)*aux(16)
s(138) =< it(35)*aux(16)
s(130)+s(131)+s(132) =< it(33)*aux(16)
s(130) =< it(33)*aux(22)
s(123)+s(124) =< it(32)*aux(22)
s(121) =< it(31)*aux(22)
s(114)+s(115)+s(116) =< it(30)*aux(22)
s(114) =< it(30)*aux(21)
s(113) =< it(28)*aux(14)
s(112) =< it(26)*aux(16)
s(111) =< it(25)*aux(15)
s(107)+s(108) =< it(25)*aux(14)
s(141) =< s(144)
s(143) =< s(144)
s(130) =< s(135)
s(134) =< s(135)
s(124) =< s(127)
s(126) =< s(127)
s(114) =< s(119)
s(118) =< s(119)
s(108) =< s(111)
s(109) =< s(111)
s(108) =< s(110)
s(109) =< s(110)
s(103) =< s(106)
s(104) =< s(106)
s(103) =< s(105)
s(104) =< s(105)
aux(45) >= 1
aux(44) >= aux(44)
s(104) >= aux(44)
s(104)+s(107)+s(108) >= aux(44)
s(104)+s(109) >= aux(44)
s(104)+s(130)+s(131)+s(132) >= aux(44)
s(104)+s(138) >= aux(44)
s(104)+s(140)+s(141) >= aux(44)
s(78) >= aux(45)
s(78) >= s(78)
s(134) >= s(130)*s(78)

#### Cost of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nested_loop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(24)+2*it(25)+2*it(26)+2*it(27)+2*it(28)+4*it(30)+4*it(31)+4*it(32)+4*it(33)+4*it(34)+4*it(35)+4*it(36)+4*it(37)+2*s(102)+2*s(103)+1*s(104)+2*s(107)+2*s(108)+1*s(109)+2*s(112)+2*s(113)+2*s(114)+2*s(115)+2*s(116)+1*s(117)+1*s(118)+2*s(121)+1*s(122)+2*s(123)+2*s(124)+1*s(125)+1*s(126)+2*s(130)+2*s(131)+2*s(132)+1*s(133)+1*s(134)+1*s(137)+2*s(138)+1*s(139)+2*s(140)+2*s(141)+1*s(142)+1*s(143)+1*s(146)+0
  Such that:it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n-V_i_0
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n-V_i_0-V_n'+V_i_0'
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_n/2-V_i_0/2-V_n'/2+V_i_0'/2
aux(11) =< V_m-1
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< V_N/2-V_i_0/2-V_N'/2+V_i_0'/2
aux(39) =< V_n/2-V_i_0/2
aux(40) =< V_N-V_i_0-1
aux(41) =< V_N-V_i_0
aux(42) =< V_N-V_i_0-V_N'+V_i_0'
aux(43) =< V_N/2-V_i_0/2
it(30)+it(31) =< aux(39)
it(30)+it(32) =< aux(39)
it(30)+it(33) =< aux(39)
it(30)+it(34) =< aux(39)
it(30)+it(35) =< aux(39)
it(30)+it(36) =< aux(39)
it(30)+it(37) =< aux(39)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(40)
it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(40)
it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(40)
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(40)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(41)
it(24)+it(25)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(41)
it(24)+it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(41)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(42)
it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(42)
it(30)+it(31) =< aux(43)
it(30)+it(32) =< aux(43)
it(30)+it(33) =< aux(43)
it(30)+it(34) =< aux(43)
it(30)+it(35) =< aux(43)
it(30)+it(36) =< aux(43)
it(30)+it(37) =< aux(43)
aux(16) =< aux(11)
aux(22) =< aux(11)-1
aux(21) =< aux(11)-2
aux(14) =< aux(11)+1
aux(15) =< aux(40)
s(102)+s(103) =< it(24)*aux(11)
s(106) =< it(24)*aux(40)
s(140)+s(141) =< it(36)*aux(16)
s(138) =< it(35)*aux(16)
s(130)+s(131)+s(132) =< it(33)*aux(16)
s(130) =< it(33)*aux(22)
s(123)+s(124) =< it(32)*aux(22)
s(121) =< it(31)*aux(22)
s(114)+s(115)+s(116) =< it(30)*aux(22)
s(114) =< it(30)*aux(21)
s(113) =< it(28)*aux(14)
s(112) =< it(26)*aux(16)
s(111) =< it(25)*aux(15)
s(107)+s(108) =< it(25)*aux(14)
s(141) =< s(144)
s(143) =< s(144)
s(130) =< s(135)
s(134) =< s(135)
s(124) =< s(127)
s(126) =< s(127)
s(114) =< s(119)
s(118) =< s(119)
s(108) =< s(111)
s(109) =< s(111)
s(108) =< s(110)
s(109) =< s(110)
s(103) =< s(106)
s(104) =< s(106)
s(103) =< s(105)
s(104) =< s(105)
aux(45) >= 1
aux(44) >= aux(44)
s(104) >= aux(44)
s(104)+s(107)+s(108) >= aux(44)
s(104)+s(109) >= aux(44)
s(104)+s(130)+s(131)+s(132) >= aux(44)
s(104)+s(138) >= aux(44)
s(104)+s(140)+s(141) >= aux(44)
s(78) >= aux(45)
s(78) >= s(78)
s(134) >= s(130)*s(78)

#### Cost of chains of eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B):
* Chain [[29],39]: 2*it(29)+0
  Such that:it(29) =< V_n-V_i_0
it(29) >= V_n-V_i_0

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[29],38]: 2*it(29)+0
  Such that:it(29) =< V_n-V_i_0-1
it(29) >= 1

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[24,25,26,27,28,30,31,32,33,34,35,36,37],39]: 2*it(24)+2*it(25)+2*it(26)+2*it(27)+2*it(28)+4*it(30)+4*it(31)+4*it(32)+4*it(33)+4*it(34)+4*it(35)+4*it(36)+4*it(37)+2*s(102)+2*s(103)+1*s(104)+2*s(107)+2*s(108)+1*s(109)+2*s(112)+2*s(113)+2*s(114)+2*s(115)+2*s(116)+1*s(117)+1*s(118)+2*s(121)+1*s(122)+2*s(123)+2*s(124)+1*s(125)+1*s(126)+2*s(130)+2*s(131)+2*s(132)+1*s(133)+1*s(134)+1*s(137)+2*s(138)+1*s(139)+2*s(140)+2*s(141)+1*s(142)+1*s(143)+1*s(146)+0
  Such that:aux(42) =< V_n+V_N-V_i_0
it(37)+it(36)+it(35)+it(34)+it(33)+it(32)+it(31)+it(30)+it(28)+it(27)+it(26)+it(25)+it(24) =< V_n-V_i_0
it(36)+it(35)+it(34)+it(33)+it(32)+it(31)+it(30) =< V_n/2+V_N/2-V_i_0/2
aux(39) =< V_n/2-V_i_0/2
aux(11) =< V_m-1
aux(40) =< V_N-V_i_0-1
aux(41) =< V_N-V_i_0
aux(43) =< V_N/2-V_i_0/2
it(30)+it(31) =< aux(39)
it(30)+it(32) =< aux(39)
it(30)+it(33) =< aux(39)
it(30)+it(34) =< aux(39)
it(30)+it(35) =< aux(39)
it(30)+it(36) =< aux(39)
it(30)+it(37) =< aux(39)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(40)
it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(40)
it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(40)
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(40)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(41)
it(24)+it(25)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(41)
it(24)+it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(41)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(42)
it(24)+it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(42)
it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(42)
it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(42)
it(30)+it(31) =< aux(43)
it(30)+it(32) =< aux(43)
it(30)+it(33) =< aux(43)
it(30)+it(34) =< aux(43)
it(30)+it(35) =< aux(43)
it(30)+it(36) =< aux(43)
it(30)+it(37) =< aux(43)
aux(16) =< aux(11)
aux(22) =< aux(11)-1
aux(21) =< aux(11)-2
aux(14) =< aux(11)+1
aux(15) =< aux(40)
s(102)+s(103) =< it(24)*aux(11)
s(106) =< it(24)*aux(40)
s(140)+s(141) =< it(36)*aux(16)
s(138) =< it(35)*aux(16)
s(130)+s(131)+s(132) =< it(33)*aux(16)
s(130) =< it(33)*aux(22)
s(123)+s(124) =< it(32)*aux(22)
s(121) =< it(31)*aux(22)
s(114)+s(115)+s(116) =< it(30)*aux(22)
s(114) =< it(30)*aux(21)
s(113) =< it(28)*aux(14)
s(112) =< it(26)*aux(16)
s(111) =< it(25)*aux(15)
s(107)+s(108) =< it(25)*aux(14)
s(141) =< s(144)
s(143) =< s(144)
s(130) =< s(135)
s(134) =< s(135)
s(124) =< s(127)
s(126) =< s(127)
s(114) =< s(119)
s(118) =< s(119)
s(108) =< s(111)
s(109) =< s(111)
s(108) =< s(110)
s(109) =< s(110)
s(103) =< s(106)
s(104) =< s(106)
s(103) =< s(105)
s(104) =< s(105)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[24,25,26,27,28,30,31,32,33,34,35,36,37],38]: 2*it(24)+2*it(25)+2*it(26)+2*it(27)+2*it(28)+4*it(30)+4*it(31)+4*it(32)+4*it(33)+4*it(34)+4*it(35)+4*it(36)+4*it(37)+2*s(102)+2*s(103)+1*s(104)+2*s(107)+2*s(108)+1*s(109)+2*s(112)+2*s(113)+2*s(114)+2*s(115)+2*s(116)+1*s(117)+1*s(118)+2*s(121)+1*s(122)+2*s(123)+2*s(124)+1*s(125)+1*s(126)+2*s(130)+2*s(131)+2*s(132)+1*s(133)+1*s(134)+1*s(137)+2*s(138)+1*s(139)+2*s(140)+2*s(141)+1*s(142)+1*s(143)+1*s(146)+0
  Such that:aux(39) =< V_n/2-V_i_0/2
it(36)+it(35)+it(34)+it(33)+it(32)+it(31)+it(30) =< V_n/2-V_i_0/2-1/2
aux(11) =< V_m-1
aux(40) =< V_N-V_i_0-1
aux(41) =< V_N-V_i_0
aux(43) =< V_N/2-V_i_0/2
aux(46) =< V_n-V_i_0-1
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(46)
it(30)+it(31) =< aux(39)
it(30)+it(32) =< aux(39)
it(30)+it(33) =< aux(39)
it(30)+it(34) =< aux(39)
it(30)+it(35) =< aux(39)
it(30)+it(36) =< aux(39)
it(30)+it(37) =< aux(39)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(40)
it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(40)
it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(40)
it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(40)
it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(40)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(41)
it(24)+it(25)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(41)
it(24)+it(25)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(41)
it(24)+it(25)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(41)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+s(146) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(142) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(36)+it(37)+s(139) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37)+s(137) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(133) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(125) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(122) =< aux(46)
it(24)+it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(117) =< aux(46)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105) =< aux(46)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(105)+s(144) =< aux(46)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37)+s(105)+s(135) =< aux(46)
it(25)+it(26)+it(27)+it(28)+it(30)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(127) =< aux(46)
it(25)+it(26)+it(27)+it(28)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(119) =< aux(46)
it(26)+it(27)+it(28)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37)+s(105)+s(110) =< aux(46)
it(30)+it(31) =< aux(43)
it(30)+it(32) =< aux(43)
it(30)+it(33) =< aux(43)
it(30)+it(34) =< aux(43)
it(30)+it(35) =< aux(43)
it(30)+it(36) =< aux(43)
it(30)+it(37) =< aux(43)
aux(16) =< aux(11)
aux(22) =< aux(11)-1
aux(21) =< aux(11)-2
aux(14) =< aux(11)+1
aux(15) =< aux(40)
s(102)+s(103) =< it(24)*aux(11)
s(106) =< it(24)*aux(40)
s(140)+s(141) =< it(36)*aux(16)
s(138) =< it(35)*aux(16)
s(130)+s(131)+s(132) =< it(33)*aux(16)
s(130) =< it(33)*aux(22)
s(123)+s(124) =< it(32)*aux(22)
s(121) =< it(31)*aux(22)
s(114)+s(115)+s(116) =< it(30)*aux(22)
s(114) =< it(30)*aux(21)
s(113) =< it(28)*aux(14)
s(112) =< it(26)*aux(16)
s(111) =< it(25)*aux(15)
s(107)+s(108) =< it(25)*aux(14)
s(141) =< s(144)
s(143) =< s(144)
s(130) =< s(135)
s(134) =< s(135)
s(124) =< s(127)
s(126) =< s(127)
s(114) =< s(119)
s(118) =< s(119)
s(108) =< s(111)
s(109) =< s(111)
s(108) =< s(110)
s(109) =< s(110)
s(103) =< s(106)
s(104) =< s(106)
s(103) =< s(105)
s(104) =< s(105)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [39]: 0
  with precondition: [B=4,V_n>=0,V_m>=0,V_i_0>=V_n,V_N+V_n>=V_i_0] 

* Chain [38]: 0
  with precondition: [B=4,V_m>=0,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 


#### Cost of chains of eval_nested_loop_3(V_n,V_m,V_N,B):
* Chain [48]: 1
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [47]: 2*s(147)+1
  Such that:s(147) =< V_n
s(147) >= V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [46]: 2*s(148)+1
  Such that:s(148) =< V_n-1
s(148) >= 1

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [45]: 0
  with precondition: [0>=V_n+1] 

* Chain [44]: 0
  with precondition: [0>=V_m+1] 

* Chain [43]: 0
  with precondition: [0>=V_N+1] 

* Chain [42]: 1
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [41]: 4*s(150)+4*s(151)+4*s(152)+4*s(153)+4*s(154)+4*s(155)+4*s(156)+4*s(157)+2*s(158)+2*s(159)+2*s(160)+2*s(161)+2*s(162)+1*s(174)+1*s(175)+1*s(176)+1*s(177)+1*s(178)+1*s(179)+1*s(180)+1*s(181)+2*s(187)+2*s(188)+2*s(190)+2*s(191)+2*s(192)+2*s(193)+2*s(194)+2*s(195)+2*s(196)+2*s(197)+2*s(198)+2*s(199)+2*s(200)+2*s(201)+2*s(202)+2*s(203)+2*s(205)+2*s(206)+1*s(207)+1*s(208)+1*s(209)+1*s(210)+1*s(211)+1*s(212)+1
  Such that:s(162)+s(161)+s(160)+s(159)+s(158)+s(157)+s(156)+s(155)+s(154)+s(153)+s(152)+s(151)+s(150) =< V_n
s(149) =< V_n+V_N
s(163) =< V_n/2
s(157)+s(156)+s(155)+s(154)+s(153)+s(152)+s(151) =< V_n/2+V_N/2
s(164) =< V_m-1
s(165) =< V_N-1
s(166) =< V_N
s(167) =< V_N/2
s(156)+s(157) =< s(163)
s(155)+s(157) =< s(163)
s(154)+s(157) =< s(163)
s(153)+s(157) =< s(163)
s(152)+s(157) =< s(163)
s(151)+s(157) =< s(163)
s(150)+s(157) =< s(163)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(168) =< s(165)
s(150)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(168)+s(169) =< s(165)
s(150)+s(151)+s(152)+s(153)+s(155)+s(156)+s(157)+s(161)+s(168)+s(170) =< s(165)
s(150)+s(151)+s(152)+s(153)+s(154)+s(156)+s(157)+s(161)+s(168)+s(171) =< s(165)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(161)+s(168)+s(172) =< s(165)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(168)+s(173) =< s(165)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(162) =< s(166)
s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(162)+s(174) =< s(166)
s(150)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(162)+s(175) =< s(166)
s(150)+s(151)+s(153)+s(154)+s(155)+s(156)+s(157)+s(161)+s(162)+s(176) =< s(166)
s(150)+s(151)+s(152)+s(154)+s(155)+s(156)+s(157)+s(161)+s(162)+s(177) =< s(166)
s(150)+s(151)+s(152)+s(153)+s(155)+s(156)+s(157)+s(161)+s(162)+s(178) =< s(166)
s(150)+s(151)+s(152)+s(153)+s(154)+s(156)+s(157)+s(161)+s(162)+s(179) =< s(166)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(157)+s(161)+s(162)+s(180) =< s(166)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(161)+s(162)+s(181) =< s(166)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162) =< s(149)
s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(174) =< s(149)
s(150)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(175) =< s(149)
s(150)+s(151)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(176) =< s(149)
s(150)+s(151)+s(152)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(177) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(178) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(179) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(157)+s(158)+s(159)+s(160)+s(161)+s(162)+s(180) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(158)+s(159)+s(160)+s(161)+s(162)+s(181) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(168) =< s(149)
s(150)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(168)+s(169) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(168)+s(170) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(156)+s(157)+s(158)+s(159)+s(160)+s(161)+s(168)+s(171) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(158)+s(159)+s(160)+s(161)+s(168)+s(172) =< s(149)
s(150)+s(151)+s(152)+s(153)+s(154)+s(155)+s(156)+s(157)+s(158)+s(159)+s(160)+s(168)+s(173) =< s(149)
s(156)+s(157) =< s(167)
s(155)+s(157) =< s(167)
s(154)+s(157) =< s(167)
s(153)+s(157) =< s(167)
s(152)+s(157) =< s(167)
s(151)+s(157) =< s(167)
s(150)+s(157) =< s(167)
s(182) =< s(164)
s(183) =< s(164)-1
s(184) =< s(164)-2
s(185) =< s(164)+1
s(186) =< s(165)
s(187)+s(188) =< s(162)*s(164)
s(189) =< s(162)*s(165)
s(190)+s(191) =< s(151)*s(182)
s(192) =< s(152)*s(182)
s(193)+s(194)+s(195) =< s(154)*s(182)
s(193) =< s(154)*s(183)
s(196)+s(197) =< s(155)*s(183)
s(198) =< s(156)*s(183)
s(199)+s(200)+s(201) =< s(157)*s(183)
s(199) =< s(157)*s(184)
s(202) =< s(158)*s(185)
s(203) =< s(160)*s(182)
s(204) =< s(161)*s(186)
s(205)+s(206) =< s(161)*s(185)
s(191) =< s(169)
s(207) =< s(169)
s(193) =< s(170)
s(208) =< s(170)
s(197) =< s(171)
s(209) =< s(171)
s(199) =< s(172)
s(210) =< s(172)
s(206) =< s(204)
s(211) =< s(204)
s(206) =< s(173)
s(211) =< s(173)
s(188) =< s(189)
s(212) =< s(189)
s(188) =< s(168)
s(212) =< s(168)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [40]: 4*s(214)+4*s(215)+4*s(216)+4*s(217)+4*s(218)+4*s(219)+4*s(220)+2*s(226)+2*s(227)+2*s(228)+2*s(229)+2*s(230)+4*s(231)+1*s(238)+1*s(239)+1*s(240)+1*s(241)+1*s(242)+1*s(243)+1*s(244)+1*s(245)+2*s(251)+2*s(252)+2*s(254)+2*s(255)+2*s(256)+2*s(257)+2*s(258)+2*s(259)+2*s(260)+2*s(261)+2*s(262)+2*s(263)+2*s(264)+2*s(265)+2*s(266)+2*s(267)+2*s(269)+2*s(270)+1*s(271)+1*s(272)+1*s(273)+1*s(274)+1*s(275)+1*s(276)+1
  Such that:s(225) =< V_n-1
s(213) =< V_n/2
s(220)+s(219)+s(218)+s(217)+s(216)+s(215)+s(214) =< V_n/2-1/2
s(221) =< V_m-1
s(222) =< V_N-1
s(223) =< V_N
s(224) =< V_N/2
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231) =< s(225)
s(219)+s(220) =< s(213)
s(218)+s(220) =< s(213)
s(217)+s(220) =< s(213)
s(216)+s(220) =< s(213)
s(215)+s(220) =< s(213)
s(214)+s(220) =< s(213)
s(220)+s(231) =< s(213)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(227)+s(231)+s(232) =< s(222)
s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(227)+s(231)+s(232)+s(233) =< s(222)
s(214)+s(215)+s(216)+s(218)+s(219)+s(220)+s(227)+s(231)+s(232)+s(234) =< s(222)
s(214)+s(215)+s(216)+s(217)+s(219)+s(220)+s(227)+s(231)+s(232)+s(235) =< s(222)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(227)+s(231)+s(232)+s(236) =< s(222)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(231)+s(232)+s(237) =< s(222)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(231) =< s(223)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(238) =< s(223)
s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(231)+s(239) =< s(223)
s(214)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(231)+s(240) =< s(223)
s(214)+s(215)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(231)+s(241) =< s(223)
s(214)+s(215)+s(216)+s(218)+s(219)+s(220)+s(226)+s(227)+s(231)+s(242) =< s(223)
s(214)+s(215)+s(216)+s(217)+s(219)+s(220)+s(226)+s(227)+s(231)+s(243) =< s(223)
s(214)+s(215)+s(216)+s(217)+s(218)+s(220)+s(226)+s(227)+s(231)+s(244) =< s(223)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(226)+s(227)+s(231)+s(245) =< s(223)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(238) =< s(225)
s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(239) =< s(225)
s(214)+s(216)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(240) =< s(225)
s(214)+s(215)+s(217)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(241) =< s(225)
s(214)+s(215)+s(216)+s(218)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(242) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(219)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(243) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(218)+s(220)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(244) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(226)+s(227)+s(228)+s(229)+s(230)+s(231)+s(245) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(227)+s(228)+s(229)+s(230)+s(231)+s(232) =< s(225)
s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(227)+s(228)+s(229)+s(230)+s(231)+s(232)+s(233) =< s(225)
s(214)+s(215)+s(216)+s(218)+s(219)+s(220)+s(227)+s(228)+s(229)+s(230)+s(231)+s(232)+s(234) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(219)+s(220)+s(227)+s(228)+s(229)+s(230)+s(231)+s(232)+s(235) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(227)+s(228)+s(229)+s(230)+s(231)+s(232)+s(236) =< s(225)
s(214)+s(215)+s(216)+s(217)+s(218)+s(219)+s(220)+s(228)+s(229)+s(230)+s(231)+s(232)+s(237) =< s(225)
s(219)+s(220) =< s(224)
s(218)+s(220) =< s(224)
s(217)+s(220) =< s(224)
s(216)+s(220) =< s(224)
s(215)+s(220) =< s(224)
s(214)+s(220) =< s(224)
s(220)+s(231) =< s(224)
s(246) =< s(221)
s(247) =< s(221)-1
s(248) =< s(221)-2
s(249) =< s(221)+1
s(250) =< s(222)
s(251)+s(252) =< s(226)*s(221)
s(253) =< s(226)*s(222)
s(254)+s(255) =< s(214)*s(246)
s(256) =< s(215)*s(246)
s(257)+s(258)+s(259) =< s(217)*s(246)
s(257) =< s(217)*s(247)
s(260)+s(261) =< s(218)*s(247)
s(262) =< s(219)*s(247)
s(263)+s(264)+s(265) =< s(220)*s(247)
s(263) =< s(220)*s(248)
s(266) =< s(230)*s(249)
s(267) =< s(228)*s(246)
s(268) =< s(227)*s(250)
s(269)+s(270) =< s(227)*s(249)
s(255) =< s(233)
s(271) =< s(233)
s(257) =< s(234)
s(272) =< s(234)
s(261) =< s(235)
s(273) =< s(235)
s(263) =< s(236)
s(274) =< s(236)
s(270) =< s(268)
s(275) =< s(268)
s(270) =< s(237)
s(275) =< s(237)
s(252) =< s(253)
s(276) =< s(253)
s(252) =< s(232)
s(276) =< s(232)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


#### Cost of chains of eval_nested_loop_start(V_n,V_m,V_N,B):
* Chain [57]: 1
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [56]: 2*s(277)+1
  Such that:s(277) =< V_n
s(277) >= V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [55]: 2*s(278)+1
  Such that:s(278) =< V_n-1
s(278) >= 1

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [54]: 0
  with precondition: [0>=V_n+1] 

* Chain [53]: 0
  with precondition: [0>=V_m+1] 

* Chain [52]: 0
  with precondition: [0>=V_N+1] 

* Chain [51]: 1
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [50]: 2*s(279)+2*s(280)+2*s(281)+2*s(282)+2*s(283)+4*s(284)+4*s(285)+4*s(286)+4*s(287)+4*s(288)+4*s(289)+4*s(290)+4*s(291)+1*s(304)+1*s(305)+1*s(306)+1*s(307)+1*s(308)+1*s(309)+1*s(310)+1*s(311)+2*s(317)+2*s(318)+2*s(320)+2*s(321)+2*s(322)+2*s(323)+2*s(324)+2*s(325)+2*s(326)+2*s(327)+2*s(328)+2*s(329)+2*s(330)+2*s(331)+2*s(332)+2*s(333)+2*s(335)+2*s(336)+1*s(337)+1*s(338)+1*s(339)+1*s(340)+1*s(341)+1*s(342)+1
  Such that:s(291)+s(290)+s(289)+s(288)+s(287)+s(286)+s(285)+s(284)+s(283)+s(282)+s(281)+s(280)+s(279) =< V_n
s(292) =< V_n+V_N
s(293) =< V_n/2
s(290)+s(289)+s(288)+s(287)+s(286)+s(285)+s(284) =< V_n/2+V_N/2
s(294) =< V_m-1
s(295) =< V_N-1
s(296) =< V_N
s(297) =< V_N/2
s(284)+s(285) =< s(293)
s(284)+s(286) =< s(293)
s(284)+s(287) =< s(293)
s(284)+s(288) =< s(293)
s(284)+s(289) =< s(293)
s(284)+s(290) =< s(293)
s(284)+s(291) =< s(293)
s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298) =< s(295)
s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(291)+s(298)+s(299) =< s(295)
s(280)+s(284)+s(285)+s(286)+s(288)+s(289)+s(290)+s(291)+s(298)+s(300) =< s(295)
s(280)+s(284)+s(285)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(301) =< s(295)
s(280)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(302) =< s(295)
s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(303) =< s(295)
s(279)+s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(304) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(291)+s(305) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(286)+s(287)+s(288)+s(290)+s(291)+s(306) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(286)+s(287)+s(289)+s(290)+s(291)+s(307) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(286)+s(288)+s(289)+s(290)+s(291)+s(308) =< s(296)
s(279)+s(280)+s(284)+s(285)+s(287)+s(288)+s(289)+s(290)+s(291)+s(309) =< s(296)
s(279)+s(280)+s(284)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(310) =< s(296)
s(279)+s(280)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(311) =< s(296)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(304) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(291)+s(305) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(290)+s(291)+s(306) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(289)+s(290)+s(291)+s(307) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(288)+s(289)+s(290)+s(291)+s(308) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(287)+s(288)+s(289)+s(290)+s(291)+s(309) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(284)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(310) =< s(292)
s(279)+s(280)+s(281)+s(282)+s(283)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(311) =< s(292)
s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298) =< s(292)
s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(291)+s(298)+s(299) =< s(292)
s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(288)+s(289)+s(290)+s(291)+s(298)+s(300) =< s(292)
s(280)+s(281)+s(282)+s(283)+s(284)+s(285)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(301) =< s(292)
s(280)+s(281)+s(282)+s(283)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(302) =< s(292)
s(281)+s(282)+s(283)+s(284)+s(285)+s(286)+s(287)+s(288)+s(289)+s(290)+s(291)+s(298)+s(303) =< s(292)
s(284)+s(285) =< s(297)
s(284)+s(286) =< s(297)
s(284)+s(287) =< s(297)
s(284)+s(288) =< s(297)
s(284)+s(289) =< s(297)
s(284)+s(290) =< s(297)
s(284)+s(291) =< s(297)
s(312) =< s(294)
s(313) =< s(294)-1
s(314) =< s(294)-2
s(315) =< s(294)+1
s(316) =< s(295)
s(317)+s(318) =< s(279)*s(294)
s(319) =< s(279)*s(295)
s(320)+s(321) =< s(290)*s(312)
s(322) =< s(289)*s(312)
s(323)+s(324)+s(325) =< s(287)*s(312)
s(323) =< s(287)*s(313)
s(326)+s(327) =< s(286)*s(313)
s(328) =< s(285)*s(313)
s(329)+s(330)+s(331) =< s(284)*s(313)
s(329) =< s(284)*s(314)
s(332) =< s(283)*s(315)
s(333) =< s(281)*s(312)
s(334) =< s(280)*s(316)
s(335)+s(336) =< s(280)*s(315)
s(321) =< s(299)
s(337) =< s(299)
s(323) =< s(300)
s(338) =< s(300)
s(327) =< s(301)
s(339) =< s(301)
s(329) =< s(302)
s(340) =< s(302)
s(336) =< s(334)
s(341) =< s(334)
s(336) =< s(303)
s(341) =< s(303)
s(318) =< s(319)
s(342) =< s(319)
s(318) =< s(298)
s(342) =< s(298)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [49]: 4*s(345)+4*s(346)+4*s(347)+4*s(348)+4*s(349)+4*s(350)+4*s(351)+2*s(356)+2*s(357)+2*s(358)+2*s(359)+2*s(360)+4*s(361)+1*s(368)+1*s(369)+1*s(370)+1*s(371)+1*s(372)+1*s(373)+1*s(374)+1*s(375)+2*s(381)+2*s(382)+2*s(384)+2*s(385)+2*s(386)+2*s(387)+2*s(388)+2*s(389)+2*s(390)+2*s(391)+2*s(392)+2*s(393)+2*s(394)+2*s(395)+2*s(396)+2*s(397)+2*s(399)+2*s(400)+1*s(401)+1*s(402)+1*s(403)+1*s(404)+1*s(405)+1*s(406)+1
  Such that:s(343) =< V_n-1
s(344) =< V_n/2
s(351)+s(350)+s(349)+s(348)+s(347)+s(346)+s(345) =< V_n/2-1/2
s(352) =< V_m-1
s(353) =< V_N-1
s(354) =< V_N
s(355) =< V_N/2
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361) =< s(343)
s(345)+s(346) =< s(344)
s(345)+s(347) =< s(344)
s(345)+s(348) =< s(344)
s(345)+s(349) =< s(344)
s(345)+s(350) =< s(344)
s(345)+s(351) =< s(344)
s(345)+s(361) =< s(344)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(357)+s(361)+s(362) =< s(353)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(357)+s(361)+s(362)+s(363) =< s(353)
s(345)+s(346)+s(347)+s(349)+s(350)+s(351)+s(357)+s(361)+s(362)+s(364) =< s(353)
s(345)+s(346)+s(348)+s(349)+s(350)+s(351)+s(357)+s(361)+s(362)+s(365) =< s(353)
s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(357)+s(361)+s(362)+s(366) =< s(353)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(361)+s(362)+s(367) =< s(353)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(361) =< s(354)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(368) =< s(354)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(356)+s(357)+s(361)+s(369) =< s(354)
s(345)+s(346)+s(347)+s(348)+s(349)+s(351)+s(356)+s(357)+s(361)+s(370) =< s(354)
s(345)+s(346)+s(347)+s(348)+s(350)+s(351)+s(356)+s(357)+s(361)+s(371) =< s(354)
s(345)+s(346)+s(347)+s(349)+s(350)+s(351)+s(356)+s(357)+s(361)+s(372) =< s(354)
s(345)+s(346)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(361)+s(373) =< s(354)
s(345)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(361)+s(374) =< s(354)
s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(361)+s(375) =< s(354)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(368) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(369) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(349)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(370) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(371) =< s(343)
s(345)+s(346)+s(347)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(372) =< s(343)
s(345)+s(346)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(373) =< s(343)
s(345)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(374) =< s(343)
s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(356)+s(357)+s(358)+s(359)+s(360)+s(361)+s(375) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(357)+s(358)+s(359)+s(360)+s(361)+s(362) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(357)+s(358)+s(359)+s(360)+s(361)+s(362)+s(363) =< s(343)
s(345)+s(346)+s(347)+s(349)+s(350)+s(351)+s(357)+s(358)+s(359)+s(360)+s(361)+s(362)+s(364) =< s(343)
s(345)+s(346)+s(348)+s(349)+s(350)+s(351)+s(357)+s(358)+s(359)+s(360)+s(361)+s(362)+s(365) =< s(343)
s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(357)+s(358)+s(359)+s(360)+s(361)+s(362)+s(366) =< s(343)
s(345)+s(346)+s(347)+s(348)+s(349)+s(350)+s(351)+s(358)+s(359)+s(360)+s(361)+s(362)+s(367) =< s(343)
s(345)+s(346) =< s(355)
s(345)+s(347) =< s(355)
s(345)+s(348) =< s(355)
s(345)+s(349) =< s(355)
s(345)+s(350) =< s(355)
s(345)+s(351) =< s(355)
s(345)+s(361) =< s(355)
s(376) =< s(352)
s(377) =< s(352)-1
s(378) =< s(352)-2
s(379) =< s(352)+1
s(380) =< s(353)
s(381)+s(382) =< s(356)*s(352)
s(383) =< s(356)*s(353)
s(384)+s(385) =< s(351)*s(376)
s(386) =< s(350)*s(376)
s(387)+s(388)+s(389) =< s(348)*s(376)
s(387) =< s(348)*s(377)
s(390)+s(391) =< s(347)*s(377)
s(392) =< s(346)*s(377)
s(393)+s(394)+s(395) =< s(345)*s(377)
s(393) =< s(345)*s(378)
s(396) =< s(360)*s(379)
s(397) =< s(358)*s(376)
s(398) =< s(357)*s(380)
s(399)+s(400) =< s(357)*s(379)
s(385) =< s(363)
s(401) =< s(363)
s(387) =< s(364)
s(402) =< s(364)
s(391) =< s(365)
s(403) =< s(365)
s(393) =< s(366)
s(404) =< s(366)
s(400) =< s(398)
s(405) =< s(398)
s(400) =< s(367)
s(405) =< s(367)
s(382) =< s(383)
s(406) =< s(383)
s(382) =< s(362)
s(406) =< s(362)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


Closed-form bounds of eval_nested_loop_start(V_n,V_m,V_N,B): 
-------------------------------------
* Chain [57] with precondition: [V_n=0,V_m>=0,V_N>=0] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [56] with precondition: [V_m=0,V_n>=1,V_N>=0] 
    - Lower bound: 2*V_n+1 
    - Complexity: n
 * Chain [55] with precondition: [V_m=0,V_n>=2,V_N>=0] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [54] with precondition: [0>=V_n+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [53] with precondition: [0>=V_m+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [52] with precondition: [0>=V_N+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [51] with precondition: [V_n>=1,V_m>=0,V_N>=0] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [50] with precondition: [V_n>=1,V_m>=1,V_N>=0] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [49] with precondition: [V_n>=2,V_m>=1,V_N>=0] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_nested_loop_start(V_n,V_m,V_N,B): 
* 0 
 if [0>=V_n+1,V_m>=0]
 or [0>=V_N+1,V_n>=0,V_m>=0]
 or [0>=V_m+1]
* 1 
 if [V_n>=0,V_m>=0,V_N>=0]
Possible lower bounds : [0,1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 246 ms.
* Invariants computed in 928 ms.
   - Backward Invariants 536 ms.
   - Transitive Invariants 97 ms.
* Refinement performed in 793 ms.
* Termination proved in 194 ms.
* Upper bounds computed in 3324 ms.
   - Equation cost structures 676 ms.
   - Phase cost structures 1953 ms.
   - Chain cost structures 701 ms.
   - Solving cost expressions 83 ms.
* Total analysis performed in 5708 ms.

