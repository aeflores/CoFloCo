Warning: Ignored call to eval_aaron3_stop/1 in equation eval_aaron3_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_aaron3_10/5,eval_aaron3_12/6,eval_aaron3_13/7,eval_aaron3_9/4,eval_aaron3_bb1_in/4,eval_aaron3_bb2_in/4,eval_aaron3_bb3_in/5,eval_aaron3_bb4_in/5]
1. non_recursive : [eval_aaron3_bb5_in/1]
2. non_recursive : [loop_cont_eval_aaron3_bb1_in/2]
3. non_recursive : [eval_aaron3_8/4]
4. non_recursive : [eval_aaron3_7/4]
5. non_recursive : [eval_aaron3_6/4]
6. non_recursive : [eval_aaron3_5/4]
7. non_recursive : [eval_aaron3_4/4]
8. non_recursive : [eval_aaron3_3/4]
9. non_recursive : [eval_aaron3_2/4]
10. non_recursive : [eval_aaron3_1/4]
11. non_recursive : [eval_aaron3_0/4]
12. non_recursive : [eval_aaron3_bb0_in/4]
13. non_recursive : [eval_aaron3_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_aaron3_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_aaron3_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_aaron3_bb1_in/4 
* CE 6 is refined into CE [7] 
* CE 4 is refined into CE [8] 
* CE 3 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_aaron3_bb1_in/4 
* CE 7: eval_aaron3_bb1_in(V__04,V__02,V__01,B) = 0
     [V__02>=V__01+1,B=2] 
* CE 8: eval_aaron3_bb1_in(V__04,V__02,V__01,B) = 0
     [V__01>=V__02,B=2] 
* CE 9: eval_aaron3_bb1_in(V__04,V__02,V__01,B) = 1+ eval_aaron3_bb1_in(V__04,C,V__01,D)
     [V__01>=V__02,V__02+1=C,D=2,B=2] 
* CE 10: eval_aaron3_bb1_in(V__04,V__02,V__01,B) = 1+ eval_aaron3_bb1_in(C,V__02,D,E)
     [V__01+C>=D,V__01>=V__02,C+1=V__04,E=2,B=2] 

### Cost equations --> "Loop" of eval_aaron3_bb1_in/4 
* CEs [9] --> Loop 6 
* CEs [10] --> Loop 7 
* CEs [7] --> Loop 8 
* CEs [8] --> Loop 9 

#### Loops of eval_aaron3_bb1_in/4 
* Loop 6: eval_aaron3_bb1_in(V__04,V__02,V__01,B)->  eval_aaron3_bb1_in(V__04,V__02',V__01,B')
                  [V__01>=V__02,V__02+1=V__02',B'=2,B=2] 
* Loop 7: eval_aaron3_bb1_in(V__04,V__02,V__01,B)->  eval_aaron3_bb1_in(V__04',V__02,V__01',B')
                  [V__01+V__04'>=V__01',V__01>=V__02,V__04'+1=V__04,B'=2,B=2] 
* Loop 8: eval_aaron3_bb1_in(V__04,V__02,V__01,B) [V__02>=V__01+1,B=2] 
* Loop 9: eval_aaron3_bb1_in(V__04,V__02,V__01,B) [V__01>=V__02,B=2] 

### Ranking functions of CR eval_aaron3_bb1_in(V__04,V__02,V__01,B) 

#### Partial ranking functions of CR eval_aaron3_bb1_in(V__04,V__02,V__01,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    -V__02+V__01+1 depends on loops [7:1] 


### Resulting Chains:eval_aaron3_bb1_in(V__04,V__02,V__01,B) 
* [[6,7]]...
* [[6,7],9]
* [[6,7],8]
* [9]
* [8]


### Specialization of cost equations eval_aaron3_start/5 
* CE 2 is refined into CE [11,12,13,14,15] 


#### Refined cost equations eval_aaron3_start/5 
* CE 11: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) = 1+ eval_aaron3_bb1_in(V_z,V_y,V_x,C):[[6,7]]
     [V_x>=V_y,C=2] 
* CE 12: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) = 1+ eval_aaron3_bb1_in(V_z,V_y,V_x,C):[[6,7],9]
     [V_x>=V_y,C=2] 
* CE 13: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) = 1+ eval_aaron3_bb1_in(V_z,V_y,V_x,C):[[6,7],8]
     [V_x>=V_y,C=2] 
* CE 14: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) = 1+ eval_aaron3_bb1_in(V_z,V_y,V_x,C):[9]
     [V_x>=V_y,C=2] 
* CE 15: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) = 1+ eval_aaron3_bb1_in(V_z,V_y,V_x,C):[8]
     [V_y>=V_x+1,C=2] 

### Cost equations --> "Loop" of eval_aaron3_start/5 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [11] --> Loop 14 

#### Loops of eval_aaron3_start/5 
* Loop 10: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) [V_x>=V_y] 
* Loop 11: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) [V_x>=V_y] 
* Loop 12: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) [V_x>=V_y] 
* Loop 13: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) [V_y>=V_x+1] 
* Loop 14: eval_aaron3_start(V_x,V_y,V_z,V_tx,B) [V_x>=V_y] 

### Ranking functions of CR eval_aaron3_start(V_x,V_y,V_z,V_tx,B) 

#### Partial ranking functions of CR eval_aaron3_start(V_x,V_y,V_z,V_tx,B) 


### Resulting Chains:eval_aaron3_start(V_x,V_y,V_z,V_tx,B) 
* [14]...
* [13]
* [12]
* [11]
* [10]


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_aaron3_bb1_in(V__04,V__02,V__01,B) -> [eval_aaron3_bb1_in(V__04',V__02',V__01',B')] 
1
 * loop 7:eval_aaron3_bb1_in(V__04,V__02,V__01,B) -> [eval_aaron3_bb1_in(V__04',V__02',V__01',B')] 
1
#### Cost of phase [6,7]:eval_aaron3_bb1_in(V__04,V__02,V__01,B) -> [eval_aaron3_bb1_in(V__04',V__02',V__01',B')] 
1*it(6)+1*it(7)+0
#### Cost of phase [6,7]:eval_aaron3_bb1_in(V__04,V__02,V__01,B) -> [eval_aaron3_bb1_in(V__04',V__02',V__01',B')] 
1*it(6)+1*it(7)+0
#### Cost of phase [6,7]:eval_aaron3_bb1_in(V__04,V__02,V__01,B) -> [eval_aaron3_bb1_in(V__04',V__02',V__01',B')] 
1*it(6)+1*it(7)+0
#### Cost of chains of eval_aaron3_bb1_in(V__04,V__02,V__01,B):
* Chain [[6,7]]...: 2*it(6)+0
  with precondition: [V__01>=V__02,B=2] 

* Chain [[6,7],9]: 2*it(6)+0
  with precondition: [B=2,V__01>=V__02] 

* Chain [[6,7],8]: 2*it(6)+0
  with precondition: [B=2,V__01>=V__02] 

* Chain [9]: 0
  with precondition: [B=2,V__01>=V__02] 

* Chain [8]: 0
  with precondition: [B=2,V__02>=V__01+1] 


#### Cost of chains of eval_aaron3_start(V_x,V_y,V_z,V_tx,B):
* Chain [14]...: 2*s(1)+1
  with precondition: [V_x>=V_y] 

* Chain [13]: 1
  with precondition: [V_y>=V_x+1] 

* Chain [12]: 2*s(2)+1
  with precondition: [V_x>=V_y] 

* Chain [11]: 2*s(3)+1
  with precondition: [V_x>=V_y] 

* Chain [10]: 1
  with precondition: [V_x>=V_y] 


Closed-form bounds of eval_aaron3_start(V_x,V_y,V_z,V_tx,B): 
-------------------------------------
* Chain [14]... with precondition: [V_x>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [13] with precondition: [V_y>=V_x+1] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [12] with precondition: [V_x>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [11] with precondition: [V_x>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [10] with precondition: [V_x>=V_y] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_aaron3_start(V_x,V_y,V_z,V_tx,B): 
* 1 
 if []
Possible lower bounds : [1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 57 ms.
* Invariants computed in 40 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 59 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 87 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 50 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 317 ms.

