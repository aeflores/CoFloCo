Warning: Ignored call to eval_speedSingleSingle2_stop/1 in equation eval_speedSingleSingle2_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_speedSingleSingle2_3/5,eval_speedSingleSingle2_4/6,eval_speedSingleSingle2_bb1_in/5,eval_speedSingleSingle2_bb2_in/6,eval_speedSingleSingle2_bb3_in/6,eval_speedSingleSingle2_bb4_in/6,eval_speedSingleSingle2_bb5_in/6]
1. non_recursive : [eval_speedSingleSingle2_bb6_in/1]
2. non_recursive : [loop_cont_eval_speedSingleSingle2_bb1_in/2]
3. non_recursive : [eval_speedSingleSingle2_2/3]
4. non_recursive : [eval_speedSingleSingle2_1/3]
5. non_recursive : [eval_speedSingleSingle2_0/3]
6. non_recursive : [eval_speedSingleSingle2_bb0_in/3]
7. non_recursive : [eval_speedSingleSingle2_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedSingleSingle2_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_speedSingleSingle2_2/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_speedSingleSingle2_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedSingleSingle2_bb1_in/5 
* CE 8 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_speedSingleSingle2_bb1_in/5 
* CE 9: eval_speedSingleSingle2_bb1_in(A,B,C,C,D) = 0
     [A+B>=C,C>=0,B>=0,A>=0,D=2] 
* CE 10: eval_speedSingleSingle2_bb1_in(A,B,C,C,D) = 1+ eval_speedSingleSingle2_bb1_in(A,B,E,F,G)
     [A>=C+1,C>=0,B>=0,C+1=F,C+1=E,G=2,D=2] 
* CE 11: eval_speedSingleSingle2_bb1_in(A,B,C,C,D) = 1+ eval_speedSingleSingle2_bb1_in(A,B,E,F,G)
     [B>=C+1,C>=A,A>=0,C+1=F,C+1=E,G=2,D=2] 

### Cost equations --> "Loop" of eval_speedSingleSingle2_bb1_in/5 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_speedSingleSingle2_bb1_in/5 
* Loop 8: eval_speedSingleSingle2_bb1_in(A,B,C,C,D)->  eval_speedSingleSingle2_bb1_in(A,B,A',B',C')
                  [A>=C+1,C>=0,B>=0,C+1=B',C+1=A',C'=2,D=2] 
* Loop 9: eval_speedSingleSingle2_bb1_in(A,B,C,C,D)->  eval_speedSingleSingle2_bb1_in(A,B,A',B',C')
                  [B>=C+1,C>=A,A>=0,C+1=B',C+1=A',C'=2,D=2] 
* Loop 10: eval_speedSingleSingle2_bb1_in(A,B,C,C,D) [A+B>=C,C>=0,B>=0,A>=0,D=2] 

### Ranking functions of CR eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* RF of phase [8]: [V_n-V_x_0,V_n-V_y_0]
* RF of phase [9]: [V_m-V_x_0,V_m-V_y_0]

#### Partial ranking functions of CR eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n-V_x_0
    V_n-V_y_0
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_m-V_x_0
    V_m-V_y_0


### Resulting Chains:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* [[9],10]
* [[8],[9],10]
* [[8],10]
* [10]


### Specialization of cost equations eval_speedSingleSingle2_2/3 
* CE 5 is refined into CE [12,13,14,15] 
* CE 4 is refined into CE [16] 
* CE 3 is refined into CE [17] 


#### Refined cost equations eval_speedSingleSingle2_2/3 
* CE 12: eval_speedSingleSingle2_2(V_n,V_m,B) = 1+ eval_speedSingleSingle2_bb1_in(C,V_m,D,E,F):[[9],10]
     [V_m>=1,F=2,E=0,D=0,C=0,V_n=0] 
* CE 13: eval_speedSingleSingle2_2(V_n,V_m,B) = 1+ eval_speedSingleSingle2_bb1_in(V_n,V_m,C,D,E):[[8],[9],10]
     [V_m>=V_n+1,V_n>=1,E=2,D=0,C=0] 
* CE 14: eval_speedSingleSingle2_2(V_n,V_m,B) = 1+ eval_speedSingleSingle2_bb1_in(V_n,V_m,C,D,E):[[8],10]
     [V_m>=0,V_n>=1,E=2,D=0,C=0] 
* CE 15: eval_speedSingleSingle2_2(V_n,V_m,B) = 1+ eval_speedSingleSingle2_bb1_in(V_n,V_m,C,D,E):[10]
     [V_m>=0,V_n>=0,E=2,D=0,C=0] 
* CE 16: eval_speedSingleSingle2_2(V_n,V_m,B) = 0
     [0>=V_m+1] 
* CE 17: eval_speedSingleSingle2_2(V_n,V_m,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_speedSingleSingle2_2/3 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [12] --> Loop 16 

#### Loops of eval_speedSingleSingle2_2/3 
* Loop 11: eval_speedSingleSingle2_2(V_n,V_m,B) [V_m>=V_n+1,V_n>=1] 
* Loop 12: eval_speedSingleSingle2_2(V_n,V_m,B) [V_m>=0,V_n>=1] 
* Loop 13: eval_speedSingleSingle2_2(V_n,V_m,B) [V_m>=0,V_n>=0] 
* Loop 14: eval_speedSingleSingle2_2(V_n,V_m,B) [0>=V_m+1] 
* Loop 15: eval_speedSingleSingle2_2(V_n,V_m,B) [0>=V_n+1] 
* Loop 16: eval_speedSingleSingle2_2(V_n,V_m,B) [V_m>=1,V_n=0] 

### Ranking functions of CR eval_speedSingleSingle2_2(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSingleSingle2_2(V_n,V_m,B) 


### Resulting Chains:eval_speedSingleSingle2_2(V_n,V_m,B) 
* [16]
* [15]
* [14]
* [13]
* [12]
* [11]


### Specialization of cost equations eval_speedSingleSingle2_start/3 
* CE 2 is refined into CE [18,19,20,21,22,23] 


#### Refined cost equations eval_speedSingleSingle2_start/3 
* CE 18: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(C,V_m,B):[16]
     [V_m>=1,C=0,V_n=0] 
* CE 19: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(V_n,V_m,B):[15]
     [0>=V_n+1] 
* CE 20: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(V_n,V_m,B):[14]
     [0>=V_m+1] 
* CE 21: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(V_n,V_m,B):[13]
     [V_m>=0,V_n>=0] 
* CE 22: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(V_n,V_m,B):[12]
     [V_m>=0,V_n>=1] 
* CE 23: eval_speedSingleSingle2_start(V_n,V_m,B) = 0+ eval_speedSingleSingle2_2(V_n,V_m,B):[11]
     [V_m>=V_n+1,V_n>=1] 

### Cost equations --> "Loop" of eval_speedSingleSingle2_start/3 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [18] --> Loop 22 

#### Loops of eval_speedSingleSingle2_start/3 
* Loop 17: eval_speedSingleSingle2_start(V_n,V_m,B) [V_m>=V_n+1,V_n>=1] 
* Loop 18: eval_speedSingleSingle2_start(V_n,V_m,B) [V_m>=0,V_n>=1] 
* Loop 19: eval_speedSingleSingle2_start(V_n,V_m,B) [V_m>=0,V_n>=0] 
* Loop 20: eval_speedSingleSingle2_start(V_n,V_m,B) [0>=V_m+1] 
* Loop 21: eval_speedSingleSingle2_start(V_n,V_m,B) [0>=V_n+1] 
* Loop 22: eval_speedSingleSingle2_start(V_n,V_m,B) [V_m>=1,V_n=0] 

### Ranking functions of CR eval_speedSingleSingle2_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSingleSingle2_start(V_n,V_m,B) 


### Resulting Chains:eval_speedSingleSingle2_start(V_n,V_m,B) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSingleSingle2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
#### Cost of phase [9]:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSingleSingle2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(9)+0
  Such that:it(9) =< V_m-V_y_0
it(9) =< V_m-V_y_0-V_m'+V_y_0'
it(9) =< V_m-V_x_0
it(9) =< V_m-V_x_0-V_m'+V_x_0'
it(9) >= V_m-V_y_0-V_m'+V_y_0'
it(9) >= V_m-V_x_0-V_m'+V_x_0'

#### Cost of loops [8] 

 * loop 8:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSingleSingle2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
#### Cost of phase [8]:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSingleSingle2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_y_0
it(8) =< V_n-V_y_0-V_n'+V_y_0'
it(8) =< V_n-V_x_0
it(8) =< V_n-V_x_0-V_n'+V_x_0'
it(8) >= V_n-V_y_0-V_n'+V_y_0'
it(8) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of phase [8]:eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSingleSingle2_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_y_0
it(8) =< V_n-V_y_0-V_n'+V_y_0'
it(8) =< V_n-V_x_0
it(8) =< V_n-V_x_0-V_n'+V_x_0'
it(8) >= V_n-V_y_0-V_n'+V_y_0'
it(8) >= V_n-V_x_0-V_n'+V_x_0'

#### Cost of chains of eval_speedSingleSingle2_bb1_in(V_n,V_m,V_y_0,V_x_0,B):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_m-V_x_0
it(9) >= 1

  with precondition: [B=2,V_y_0=V_x_0,V_n>=0,V_y_0>=V_n,V_m>=V_y_0+1] 

* Chain [[8],[9],10]: 1*it(8)+1*it(9)+0
  Such that:it(9) =< -V_n+V_m
it(8) =< V_n-V_x_0
it(9) >= 1
it(8) >= V_n-V_x_0

  with precondition: [B=2,V_y_0=V_x_0,V_y_0>=0,V_m>=V_n+1,V_n>=V_y_0+1] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_n-V_y_0
it(8) >= 1

  with precondition: [B=2,V_y_0=V_x_0,V_m>=0,V_y_0>=0,V_n>=V_y_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_x_0=V_y_0,V_n>=0,V_m>=0,V_x_0>=0,V_m+V_n>=V_x_0] 


#### Cost of chains of eval_speedSingleSingle2_2(V_n,V_m,B):
* Chain [16]: 1*s(1)+1
  Such that:s(1) =< V_m
s(1) >= 1

  with precondition: [V_n=0,V_m>=1] 

* Chain [15]: 0
  with precondition: [0>=V_n+1] 

* Chain [14]: 0
  with precondition: [0>=V_m+1] 

* Chain [13]: 1
  with precondition: [V_n>=0,V_m>=0] 

* Chain [12]: 1*s(2)+1
  Such that:s(2) =< V_n
s(2) >= 1

  with precondition: [V_n>=1,V_m>=0] 

* Chain [11]: 1*s(3)+1*s(4)+1
  Such that:s(3) =< -V_n+V_m
s(4) =< V_n
s(3) >= 1
s(4) >= V_n

  with precondition: [V_n>=1,V_m>=V_n+1] 


#### Cost of chains of eval_speedSingleSingle2_start(V_n,V_m,B):
* Chain [22]: 1*s(5)+1
  Such that:s(5) =< V_m
s(5) >= 1

  with precondition: [V_n=0,V_m>=1] 

* Chain [21]: 0
  with precondition: [0>=V_n+1] 

* Chain [20]: 0
  with precondition: [0>=V_m+1] 

* Chain [19]: 1
  with precondition: [V_n>=0,V_m>=0] 

* Chain [18]: 1*s(6)+1
  Such that:s(6) =< V_n
s(6) >= 1

  with precondition: [V_n>=1,V_m>=0] 

* Chain [17]: 1*s(7)+1*s(8)+1
  Such that:s(7) =< -V_n+V_m
s(8) =< V_n
s(7) >= 1
s(8) >= V_n

  with precondition: [V_n>=1,V_m>=V_n+1] 


Closed-form bounds of eval_speedSingleSingle2_start(V_n,V_m,B): 
-------------------------------------
* Chain [22] with precondition: [V_n=0,V_m>=1] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [21] with precondition: [0>=V_n+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [20] with precondition: [0>=V_m+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [19] with precondition: [V_n>=0,V_m>=0] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [18] with precondition: [V_n>=1,V_m>=0] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [17] with precondition: [V_n>=1,V_m>=V_n+1] 
    - Lower bound: V_n+2 
    - Complexity: n
 
### Partitioned lower bound of eval_speedSingleSingle2_start(V_n,V_m,B): 
* 0 
 if [0>=V_m+1,V_n>=0]
 or [0>=V_n+1]
* 1 
 if [V_n>=1,V_m>=0,V_n>=V_m]
 or [V_n>=1,V_m>=V_n+1]
 or [V_n=0,V_m>=0]
Possible lower bounds : [0,1]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 55 ms.
* Invariants computed in 100 ms.
   - Backward Invariants 47 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 92 ms.
* Termination proved in 27 ms.
* Upper bounds computed in 163 ms.
   - Equation cost structures 46 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 64 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 515 ms.

