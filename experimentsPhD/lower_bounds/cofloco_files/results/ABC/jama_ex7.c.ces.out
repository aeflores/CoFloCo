Warning: Ignored call to eval_jama_ex7_stop/1 in equation eval_jama_ex7_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_jama_ex7_bb2_in/7,eval_jama_ex7_bb3_in/7]
1. recursive : [eval_jama_ex7_10/5,eval_jama_ex7_9/5,eval_jama_ex7_bb1_in/3,eval_jama_ex7_bb4_in/4,loop_cont_eval_jama_ex7_bb2_in/5]
2. non_recursive : [eval_jama_ex7_bb5_in/1]
3. non_recursive : [loop_cont_eval_jama_ex7_bb1_in/2]
4. non_recursive : [eval_jama_ex7_5/3]
5. non_recursive : [eval_jama_ex7_4/3]
6. non_recursive : [eval_jama_ex7_3/3]
7. non_recursive : [eval_jama_ex7_2/3]
8. non_recursive : [eval_jama_ex7_1/3]
9. non_recursive : [eval_jama_ex7_0/3]
10. non_recursive : [eval_jama_ex7_bb0_in/3]
11. non_recursive : [eval_jama_ex7_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_jama_ex7_bb2_in/7
1. SCC is partially evaluated into eval_jama_ex7_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_jama_ex7_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_jama_ex7_bb2_in/7 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_jama_ex7_bb2_in/7 
* CE 7: eval_jama_ex7_bb2_in(A,B,C,D,A,B,C) = 0
     [A>=C,B>=1,0>=C,D=2] 
* CE 8: eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) = 1+ eval_jama_ex7_bb2_in(V_m,V_i_0,F,G,C,D,E)
     [V_m>=V_j_0,V_j_0>=1,V_i_0>=1,V_j_0=F+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_jama_ex7_bb2_in/7 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_jama_ex7_bb2_in/7 
* Loop 6: eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E)->  eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0',B',C,D,E)
                  [V_m>=V_j_0,V_j_0>=1,V_i_0>=1,V_j_0=V_j_0'+1,B'=2,B=2] 
* Loop 7: eval_jama_ex7_bb2_in(A,B,C,D,A,B,C) [A>=C,B>=1,0>=C,D=2] 

### Ranking functions of CR eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [6]: [V_j_0]

#### Partial ranking functions of CR eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_j_0


### Resulting Chains:eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) 
* [[6],7]
* [7]


### Specialization of cost equations eval_jama_ex7_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_jama_ex7_bb1_in/3 
* CE 9: eval_jama_ex7_bb1_in(V_m,V_i_0,B) = 0
     [0>=V_i_0,B=3] 
* CE 10: eval_jama_ex7_bb1_in(V_m,V_i_0,B) = 2+ eval_jama_ex7_bb2_in(V_m,V_i_0,V_m,C,V_m,V_i_0,D):[[6],7]+ eval_jama_ex7_bb1_in(V_m,E,F)
     [V_i_0>=1,V_m>=1,V_i_0=E+1,F=3,D=0,C=2,B=3] 
* CE 11: eval_jama_ex7_bb1_in(V_m,V_i_0,B) = 2+ eval_jama_ex7_bb2_in(V_m,V_i_0,V_m,C,V_m,V_i_0,V_m):[7]+ eval_jama_ex7_bb1_in(V_m,D,E)
     [V_i_0>=1,0>=V_m,V_i_0=D+1,E=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_jama_ex7_bb1_in/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_jama_ex7_bb1_in/3 
* Loop 8: eval_jama_ex7_bb1_in(V_m,V_i_0,B)->  eval_jama_ex7_bb1_in(V_m,V_i_0',B')
                  [V_i_0>=1,V_m>=1,V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 9: eval_jama_ex7_bb1_in(V_m,V_i_0,B)->  eval_jama_ex7_bb1_in(V_m,V_i_0',B')
                  [V_i_0>=1,0>=V_m,V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 10: eval_jama_ex7_bb1_in(V_m,V_i_0,B) [0>=V_i_0,B=3] 

### Ranking functions of CR eval_jama_ex7_bb1_in(V_m,V_i_0,B) 
* RF of phase [8]: [V_i_0]
* RF of phase [9]: [V_i_0]

#### Partial ranking functions of CR eval_jama_ex7_bb1_in(V_m,V_i_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_i_0
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_i_0


### Resulting Chains:eval_jama_ex7_bb1_in(V_m,V_i_0,B) 
* [[9],10]
* [[8],10]
* [10]


### Specialization of cost equations eval_jama_ex7_start/3 
* CE 2 is refined into CE [12,13,14] 


#### Refined cost equations eval_jama_ex7_start/3 
* CE 12: eval_jama_ex7_start(V_n,V_m,B) = 1+ eval_jama_ex7_bb1_in(V_m,V_n,C):[[9],10]
     [V_n>=1,0>=V_m,C=3] 
* CE 13: eval_jama_ex7_start(V_n,V_m,B) = 1+ eval_jama_ex7_bb1_in(V_m,V_n,C):[[8],10]
     [V_n>=1,V_m>=1,C=3] 
* CE 14: eval_jama_ex7_start(V_n,V_m,B) = 1+ eval_jama_ex7_bb1_in(V_m,V_n,C):[10]
     [0>=V_n,C=3] 

### Cost equations --> "Loop" of eval_jama_ex7_start/3 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_jama_ex7_start/3 
* Loop 11: eval_jama_ex7_start(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 12: eval_jama_ex7_start(V_n,V_m,B) [V_n>=1,0>=V_m] 
* Loop 13: eval_jama_ex7_start(V_n,V_m,B) [0>=V_n] 

### Ranking functions of CR eval_jama_ex7_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_jama_ex7_start(V_n,V_m,B) 


### Resulting Chains:eval_jama_ex7_start(V_n,V_m,B) 
* [13]
* [12]
* [11]


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) -> [eval_jama_ex7_bb2_in(V_m',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [6]:eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E) -> [eval_jama_ex7_bb2_in(V_m',V_i_0',V_j_0',B',C',D',E')] 
1*it(6)+0
  Such that:it(6) =< V_j_0
it(6) =< V_j_0-V_j_0'
it(6) >= V_j_0-V_j_0'

#### Cost of chains of eval_jama_ex7_bb2_in(V_m,V_i_0,V_j_0,B,C,D,E):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_j_0
it(6) >= V_j_0

  with precondition: [B=2,E=0,V_m=C,V_i_0=D,V_i_0>=1,V_j_0>=1,V_m>=V_j_0] 

* Chain [7]: 0
  with precondition: [B=2,V_m=C,V_i_0=D,V_j_0=E,0>=V_j_0,V_i_0>=1,V_m>=V_j_0] 


#### Cost of loops [9] 

 * loop 9:eval_jama_ex7_bb1_in(V_m,V_i_0,B) -> [eval_jama_ex7_bb1_in(V_m',V_i_0',B')] 
2
#### Cost of phase [9]:eval_jama_ex7_bb1_in(V_m,V_i_0,B) -> [eval_jama_ex7_bb1_in(V_m',V_i_0',B')] 
2*it(9)+0
  Such that:it(9) =< V_i_0
it(9) =< V_i_0-V_i_0'
it(9) >= V_i_0-V_i_0'

#### Cost of loops [8] 

 * loop 8:eval_jama_ex7_bb1_in(V_m,V_i_0,B) -> [eval_jama_ex7_bb1_in(V_m',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_m'
s(2) >= V_m'

#### Cost of phase [8]:eval_jama_ex7_bb1_in(V_m,V_i_0,B) -> [eval_jama_ex7_bb1_in(V_m',V_i_0',B')] 
2*it(8)+1*s(3)+0
  Such that:aux(2) =< V_m
it(8) =< V_i_0
it(8) =< V_i_0-V_i_0'
s(3) =< it(8)*aux(2)
aux(1) >= V_m
aux(3) >= V_i_0-V_i_0'
it(8) >= aux(3)
s(3) >= aux(3)
s(3) >= it(8)*aux(1)

#### Cost of chains of eval_jama_ex7_bb1_in(V_m,V_i_0,B):
* Chain [[9],10]: 2*it(9)+0
  Such that:it(9) =< V_i_0
it(9) >= V_i_0

  with precondition: [B=3,0>=V_m,V_i_0>=1] 

* Chain [[8],10]: 2*it(8)+1*s(3)+0
  Such that:aux(2) =< V_m
it(8) =< V_i_0
s(3) =< it(8)*aux(2)
aux(1) >= V_m
aux(3) >= V_i_0
it(8) >= aux(3)
s(3) >= aux(3)
s(3) >= it(8)*aux(1)

  with precondition: [B=3,V_m>=1,V_i_0>=1] 

* Chain [10]: 0
  with precondition: [B=3,0>=V_i_0] 


#### Cost of chains of eval_jama_ex7_start(V_n,V_m,B):
* Chain [13]: 1
  with precondition: [0>=V_n] 

* Chain [12]: 2*s(4)+1
  Such that:s(4) =< V_n
s(4) >= V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [11]: 2*s(6)+1*s(9)+1
  Such that:s(6) =< V_n
s(5) =< V_m
s(9) =< s(6)*s(5)
s(8) >= V_n
s(7) >= V_m
s(6) >= s(8)
s(9) >= s(8)
s(9) >= s(6)*s(7)

  with precondition: [V_n>=1,V_m>=1] 


Closed-form bounds of eval_jama_ex7_start(V_n,V_m,B): 
-------------------------------------
* Chain [13] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [12] with precondition: [0>=V_m,V_n>=1] 
    - Lower bound: 2*V_n+1 
    - Complexity: n
 * Chain [11] with precondition: [V_n>=1,V_m>=1] 
    - Lower bound: 2*V_n+1+V_m*V_n 
    - Complexity: n^2
 
### Partitioned lower bound of eval_jama_ex7_start(V_n,V_m,B): 
* 1 
 if [0>=V_n]
* 2*V_n+1 
 if [0>=V_m,V_n>=1]
* 2*V_n+1+V_m*V_n 
 if [V_n>=1,V_m>=1]
Possible lower bounds : [1,2*V_n+1,2*V_n+1+V_m*V_n]
Maximum lower bound complexity: n^2

Time statistics: 
-------------------------------------
* Partial evaluation computed in 37 ms.
* Invariants computed in 61 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 69 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 115 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 57 ms.
   - Chain cost structures 31 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 358 ms.

