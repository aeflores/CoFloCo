Warning: Ignored call to eval_jama_ex6_stop/1 in equation eval_jama_ex6_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_jama_ex6_bb4_in/13,eval_jama_ex6_bb5_in/13]
1. recursive : [eval_jama_ex6_16/13,eval_jama_ex6_17/13,eval_jama_ex6_bb2_in/11,eval_jama_ex6_bb3_in/11,eval_jama_ex6_bb6_in/12,loop_cont_eval_jama_ex6_bb4_in/13]
2. recursive : [eval_jama_ex6_19/7,eval_jama_ex6_20/7,eval_jama_ex6_bb1_in/5,eval_jama_ex6_bb7_in/6,loop_cont_eval_jama_ex6_bb2_in/7]
3. non_recursive : [eval_jama_ex6_bb8_in/1]
4. non_recursive : [loop_cont_eval_jama_ex6_bb1_in/2]
5. non_recursive : [eval_jama_ex6_8/5]
6. non_recursive : [eval_jama_ex6_7/5]
7. non_recursive : [eval_jama_ex6_6/5]
8. non_recursive : [eval_jama_ex6_5/5]
9. non_recursive : [eval_jama_ex6_4/5]
10. non_recursive : [eval_jama_ex6_3/5]
11. non_recursive : [eval_jama_ex6_2/5]
12. non_recursive : [eval_jama_ex6_1/5]
13. non_recursive : [eval_jama_ex6_0/5]
14. non_recursive : [eval_jama_ex6_bb0_in/5]
15. non_recursive : [eval_jama_ex6_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_jama_ex6_bb4_in/13
1. SCC is partially evaluated into eval_jama_ex6_bb2_in/11
2. SCC is partially evaluated into eval_jama_ex6_bb1_in/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_jama_ex6_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_jama_ex6_bb4_in/13 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_jama_ex6_bb4_in/13 
* CE 9: eval_jama_ex6_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [E+F>=D,F>=D+E+1,C>=E,G=2] 
* CE 10: eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) = 1+ eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,I,J,C,D,E,F,G,H)
     [V_i_0+V_j_0>=V_k_0,V_j_0+V_k_0>=V_i_0,V_d>=V_j_0,V_k_0+1=I,J=2,B=2] 

### Cost equations --> "Loop" of eval_jama_ex6_bb4_in/13 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_jama_ex6_bb4_in/13 
* Loop 8: eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H)->  eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0',B',C,D,E,F,G,H)
                  [V_i_0+V_j_0>=V_k_0,V_j_0+V_k_0>=V_i_0,V_d>=V_j_0,V_k_0+1=V_k_0',B'=2,B=2] 
* Loop 9: eval_jama_ex6_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [E+F>=D,F>=D+E+1,C>=E,G=2] 

### Ranking functions of CR eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* RF of phase [8]: [V_d+V_i_0-V_k_0+1,V_i_0+V_j_0-V_k_0+1]

#### Partial ranking functions of CR eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_d+V_i_0-V_k_0+1
    V_i_0+V_j_0-V_k_0+1


### Resulting Chains:eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* [[8],9]
* [9]


### Specialization of cost equations eval_jama_ex6_bb2_in/11 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12,13] 


#### Refined cost equations eval_jama_ex6_bb2_in/11 
* CE 11: eval_jama_ex6_bb2_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [E>=C+1,F=3] 
* CE 12: eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) = 2+ eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,H,I,V_b,V_c,V_d,V_i_0,V_j_0,J):[[8],9]+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,K,L,C,D,E,F,G)
     [V_d>=V_j_0,V_j_0>=0,V_i_0+V_j_0+1=J,V_i_0=V_j_0+H,V_j_0+1=K,L=3,I=2,B=3] 
* CE 13: eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) = 2+ eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,H,I,V_b,V_c,V_d,V_i_0,V_j_0,J):[9]+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,K,L,C,D,E,F,G)
     [V_d>=V_j_0,0>=2*V_j_0+1,V_i_0=V_j_0+J,V_i_0=V_j_0+H,V_j_0+1=K,L=3,I=2,B=3] 

### Cost equations --> "Loop" of eval_jama_ex6_bb2_in/11 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_jama_ex6_bb2_in/11 
* Loop 10: eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G)->  eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0',B',C,D,E,F,G)
                  [V_d>=V_j_0,V_j_0>=0,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 11: eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G)->  eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0',B',C,D,E,F,G)
                  [V_d+1>=V_j_0',1>=2*V_j_0',V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 12: eval_jama_ex6_bb2_in(A,B,C,D,E,F,A,B,C,D,E) [E>=C+1,F=3] 

### Ranking functions of CR eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* RF of phase [10]: [V_d-V_j_0+1]
* RF of phase [11]: [V_d-V_j_0+1,-V_j_0+1]

#### Partial ranking functions of CR eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_d-V_j_0+1
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_d-V_j_0+1
    -V_j_0+1


### Resulting Chains:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* [[11],[10],12]
* [[11],12]
* [[10],12]
* [12]


### Specialization of cost equations eval_jama_ex6_bb1_in/5 
* CE 4 is refined into CE [14] 
* CE 3 is refined into CE [15,16,17,18] 


#### Refined cost equations eval_jama_ex6_bb1_in/5 
* CE 14: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) = 0
     [V_i_0>=V_b+1,B=4] 
* CE 15: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[11],[10],12]+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 16: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[11],12]+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c,0>=2*V_d+1,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 17: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[10],12]+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c,V_c>=0,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 18: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,V_c):[12]+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,D,E)
     [V_b>=V_i_0,V_c>=V_d+1,V_i_0+1=D,E=4,C=3,B=4] 

### Cost equations --> "Loop" of eval_jama_ex6_bb1_in/5 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [14] --> Loop 17 

#### Loops of eval_jama_ex6_bb1_in/5 
* Loop 13: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_c>=V_d+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 14: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c,V_c>=0,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 15: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c,0>=2*V_d+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 16: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 17: eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) [V_i_0>=V_b+1,B=4] 

### Ranking functions of CR eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* RF of phase [13]: [V_b-V_i_0+1]
* RF of phase [14]: [V_b-V_i_0+1]
* RF of phase [15]: [V_b-V_i_0+1]
* RF of phase [16]: [V_b-V_i_0+1]

#### Partial ranking functions of CR eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_b-V_i_0+1
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_b-V_i_0+1
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_b-V_i_0+1
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_b-V_i_0+1


### Resulting Chains:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* [[16],17]
* [[15],17]
* [[14],17]
* [[13],17]
* [17]


### Specialization of cost equations eval_jama_ex6_start/5 
* CE 2 is refined into CE [19,20,21,22,23] 


#### Refined cost equations eval_jama_ex6_start/5 
* CE 19: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) = 1+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_a,C):[[16],17]
     [V_b>=V_a,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,C=4] 
* CE 20: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) = 1+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_a,C):[[15],17]
     [V_b>=V_a,V_d>=V_c,0>=2*V_d+1,C=4] 
* CE 21: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) = 1+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_a,C):[[14],17]
     [V_b>=V_a,V_d>=V_c,V_c>=0,C=4] 
* CE 22: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) = 1+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_a,C):[[13],17]
     [V_b>=V_a,V_c>=V_d+1,C=4] 
* CE 23: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) = 1+ eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_a,C):[17]
     [V_a>=V_b+1,C=4] 

### Cost equations --> "Loop" of eval_jama_ex6_start/5 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [19] --> Loop 22 

#### Loops of eval_jama_ex6_start/5 
* Loop 18: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) [V_a>=V_b+1] 
* Loop 19: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) [V_c>=V_d+1,V_b>=V_a] 
* Loop 20: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,V_c>=0] 
* Loop 21: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,0>=2*V_d+1] 
* Loop 22: eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c+1,V_b>=V_a,V_d>=0,0>=2*V_c+1] 

### Ranking functions of CR eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) 


### Resulting Chains:eval_jama_ex6_start(V_a,V_b,V_c,V_d,B) 
* [22]
* [21]
* [20]
* [19]
* [18]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) -> [eval_jama_ex6_bb4_in(V_b',V_c',V_d',V_i_0',V_j_0',V_k_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [8]:eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) -> [eval_jama_ex6_bb4_in(V_b',V_c',V_d',V_i_0',V_j_0',V_k_0',B',C',D',E',F',G',H')] 
1*it(8)+0
  Such that:it(8) =< V_d+V_i_0-V_k_0+1
it(8) =< V_d+V_i_0-V_k_0-V_d'-V_i_0'+V_k_0'
it(8) =< V_i_0+V_j_0-V_k_0+1
it(8) =< V_i_0+V_j_0-V_k_0-V_i_0'-V_j_0'+V_k_0'
it(8) >= V_d+V_i_0-V_k_0-V_d'-V_i_0'+V_k_0'
it(8) >= V_i_0+V_j_0-V_k_0-V_i_0'-V_j_0'+V_k_0'

#### Cost of chains of eval_jama_ex6_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_i_0-V_k_0+G+1
it(8) >= V_i_0-V_k_0+G+1

  with precondition: [B=2,V_b=C,V_c=D,V_d=E,V_i_0=F,V_j_0=G,V_i_0+V_j_0+1=H,V_d>=V_j_0,V_j_0+V_k_0>=V_i_0,V_i_0+V_j_0>=V_k_0] 

* Chain [9]: 0
  with precondition: [B=2,C=V_b,D=V_c,V_d=E,V_i_0=F,V_j_0=G,V_k_0=H,V_d>=V_j_0,V_k_0>=V_i_0+V_j_0+1,V_j_0+V_k_0>=V_i_0] 


#### Cost of loops [10] 

 * loop 10:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_jama_ex6_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
1*s(2)+2
  Such that:s(2) =< 2*V_j_0+1
s(2) >= 2*V_j_0+1

#### Cost of phase [10]:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_jama_ex6_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(10)+1*s(3)+0
  Such that:it(10) =< V_d-V_j_0+1
it(10) =< V_d-V_j_0-V_d'+V_j_0'
aux(4) =< 2*V_d+1
aux(3) =< -2*V_j_0-1
s(3) =< it(10)*aux(4)
aux(1) =< it(10)
it(10) >= V_d-V_j_0-V_d'+V_j_0'
aux(2) >= 2*V_j_0+1
aux(1) >= it(10)
s(3) >= aux(1)*aux(2)+aux(1)*aux(1)- (aux(3)*aux(1)+aux(1))

#### Cost of loops [11] 

 * loop 11:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_jama_ex6_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2
#### Cost of phase [11]:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_jama_ex6_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(11)+0
  Such that:it(11) =< V_d-V_j_0+1
it(11) =< V_d-V_j_0-V_d'+V_j_0'
it(11) =< -V_j_0+1
it(11) =< -V_j_0+V_j_0'
it(11) >= V_d-V_j_0-V_d'+V_j_0'
it(11) >= -V_j_0+V_j_0'

#### Cost of phase [11]:eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_jama_ex6_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(11)+0
  Such that:it(11) =< V_d-V_j_0+1
it(11) =< V_d-V_j_0-V_d'+V_j_0'
it(11) =< -V_j_0+1
it(11) =< -V_j_0+V_j_0'
it(11) >= V_d-V_j_0-V_d'+V_j_0'
it(11) >= -V_j_0+V_j_0'

#### Cost of chains of eval_jama_ex6_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G):
* Chain [[11],[10],12]: 2*it(10)+2*it(11)+1*s(3)+0
  Such that:it(10) =< V_d+1
it(11)+it(10) =< V_d-V_j_0+1
aux(4) =< 2*V_d+1
s(3) =< it(10)*aux(4)
aux(1) =< it(10)
it(11) >= -V_j_0
aux(2) >= 2*V_j_0+3
it(10) >= G-1/2
aux(1) >= it(10)
s(3) >= aux(1)*aux(2)+aux(1)*aux(1)-aux(1)

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,0>=2*V_j_0+1,V_d>=0,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0+1] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< -V_j_0+G
it(11) >= -V_j_0+G

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,0>=2*V_d+1,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0] 

* Chain [[10],12]: 2*it(10)+1*s(3)+0
  Such that:aux(3) =< -2*V_j_0-1
it(10) =< -V_j_0+E+1
aux(4) =< 2*E+1
s(3) =< it(10)*aux(4)
aux(1) =< it(10)
it(10) >= -V_j_0+G
aux(2) >= 2*V_j_0+1
aux(1) >= it(10)
s(3) >= aux(1)*aux(2)+aux(1)*aux(1)- (aux(3)*aux(1)+aux(1))

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,V_j_0>=0,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0] 

* Chain [12]: 0
  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_j_0=G,V_j_0>=V_c,V_j_0>=V_d+1,V_b>=V_i_0] 


#### Cost of loops [16] 

 * loop 16:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*s(11)+2*s(10)+1*s(14)+2
  Such that:s(10)+s(11) =< -V_c'+V_d'+1
s(11) =< V_d'+1
s(12) =< 2*V_d'+1
s(14) =< s(11)*s(12)
s(15) =< s(11)
s(13) >= 2*V_c+3
s(11) >= V_d+1/2
s(10) >= -V_c'
s(15) >= s(11)
s(14) >= s(15)*s(13)+s(15)*s(15)-s(15)

#### Cost of phase [16]:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(16)+2*s(16)+2*s(17)+1*s(18)+0
  Such that:it(16) =< V_b-V_i_0+1
it(16) =< V_b-V_i_0-V_b'+V_i_0'
s(11) =< -V_c+V_d+1
s(11) =< V_d+1
aux(7) =< s(11)
s(12) =< s(11)*2-1
s(16) =< it(16)*aux(7)
s(16)+s(17) =< it(16)*aux(7)
s(18) =< s(16)*s(12)
s(19) =< s(16)
it(16) >= V_b-V_i_0-V_b'+V_i_0'
aux(6) >= -V_c
s(13) >= 2*V_c+3
s(11) >= V_d+1/2
aux(9) >= -V_i_0/2+V_i_0'/2
s(16) >= aux(9)
s(17) >= aux(9)
aux(5) >= s(11)
s(17) >= it(16)*aux(6)
s(16) >= it(16)*aux(5)
s(19) >= s(16)
s(15) >= s(11)
s(18) >= s(19)*s(13)+s(19)*s(15)-s(19)

#### Cost of loops [15] 

 * loop 15:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*s(21)+2
  Such that:s(21) =< -V_c'+V_d'+1
s(21) >= -V_c+V_d'+1

#### Cost of phase [15]:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(15)+2*s(22)+0
  Such that:it(15) =< V_b-V_i_0+1
it(15) =< V_b-V_i_0-V_b'+V_i_0'
aux(11) =< -V_c+V_d+1
s(22) =< it(15)*aux(11)
it(15) >= V_b-V_i_0-V_b'+V_i_0'
aux(10) >= -V_c+V_d+1
s(22) >= -V_i_0+V_i_0'
s(22) >= it(15)*aux(10)

#### Cost of loops [14] 

 * loop 14:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*s(30)+1*s(33)+2
  Such that:s(29) =< -2*V_c-1
s(30) =< -V_c+V_d'+1
s(31) =< 2*V_d'+1
s(33) =< s(30)*s(31)
s(34) =< s(30)
s(30) >= -V_c'+V_d'+1
s(32) >= 2*V_c'+1
s(34) >= s(30)
s(33) >= s(34)*s(32)+s(34)*s(34)- (s(29)*s(34)+s(34))

#### Cost of phase [14]:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(14)+2*s(35)+1*s(36)+0
  Such that:it(14) =< V_b-V_i_0+1
it(14) =< V_b-V_i_0-V_b'+V_i_0'
s(38) =< -2*V_c-1
s(38) =< -2*V_c+2*V_c'
s(30) =< -V_c+V_d+1
s(31) =< 2*V_d+1
aux(14) =< s(30)
s(35) =< it(14)*aux(14)
s(36) =< s(35)*s(31)
s(37) =< s(35)
s(34) =< s(30)
it(14) >= V_b-V_i_0-V_b'+V_i_0'
s(30) >= -V_c+V_d+1
s(32) >= 2*V_c+1
s(35) >= -V_i_0+V_i_0'
aux(13) >= s(30)
s(35) >= it(14)*aux(13)
s(37) >= s(35)
s(34) >= s(30)
s(36) >= s(37)*s(32)+s(37)*s(34)- (s(38)*s(34)+s(37))

#### Cost of loops [13] 

 * loop 13:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2
#### Cost of phase [13]:eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_jama_ex6_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(13)+0
  Such that:it(13) =< V_b-V_i_0+1
it(13) =< V_b-V_i_0-V_b'+V_i_0'
it(13) >= V_b-V_i_0-V_b'+V_i_0'

#### Cost of chains of eval_jama_ex6_bb1_in(V_b,V_c,V_d,V_i_0,B):
* Chain [[16],17]: 2*it(16)+2*s(16)+2*s(17)+1*s(18)+0
  Such that:it(16) =< V_b-V_i_0+1
s(11) =< V_d+1
aux(7) =< s(11)
s(12) =< s(11)*2-1
s(16)+s(17) =< it(16)*aux(7)
s(18) =< s(16)*s(12)
s(19) =< s(16)
it(16) >= V_b-V_i_0+1
aux(9) >= V_b/2-V_i_0/2+1/2
aux(6) >= -V_c
s(13) >= 2*V_c+3
s(11) >= V_d+1/2
s(16) >= aux(9)
s(17) >= aux(9)
aux(5) >= s(11)
s(17) >= it(16)*aux(6)
s(16) >= it(16)*aux(5)
s(19) >= s(16)
s(11) >= s(11)
s(18) >= s(19)*s(13)+s(19)*s(11)-s(19)

  with precondition: [B=4,0>=2*V_c+1,V_d>=0,V_d>=V_c+1,V_b>=V_i_0] 

* Chain [[15],17]: 2*it(15)+2*s(22)+0
  Such that:it(15) =< V_b-V_i_0+1
aux(11) =< -V_c+V_d+1
s(22) =< it(15)*aux(11)
aux(10) >= -V_c+V_d+1
aux(12) >= V_b-V_i_0+1
it(15) >= aux(12)
s(22) >= aux(12)
s(22) >= it(15)*aux(10)

  with precondition: [B=4,0>=2*V_d+1,V_d>=V_c,V_b>=V_i_0] 

* Chain [[14],17]: 2*it(14)+2*s(35)+1*s(36)+0
  Such that:it(14) =< V_b-V_i_0+1
s(30) =< -V_c+V_d+1
s(31) =< 2*V_d+1
aux(14) =< s(30)
s(35) =< it(14)*aux(14)
s(36) =< s(35)*s(31)
s(37) =< s(35)
s(34) =< s(30)
s(30) >= -V_c+V_d+1
s(32) >= 2*V_c+1
aux(15) >= V_b-V_i_0+1
it(14) >= aux(15)
s(35) >= aux(15)
aux(13) >= s(30)
s(35) >= it(14)*aux(13)
s(37) >= s(35)
s(34) >= s(30)
s(36) >= s(37)*s(32)+s(37)*s(34)-s(37)

  with precondition: [B=4,V_c>=0,V_d>=V_c,V_b>=V_i_0] 

* Chain [[13],17]: 2*it(13)+0
  Such that:it(13) =< V_b-V_i_0+1
it(13) >= V_b-V_i_0+1

  with precondition: [B=4,V_c>=V_d+1,V_b>=V_i_0] 

* Chain [17]: 0
  with precondition: [B=4,V_i_0>=V_b+1] 


#### Cost of chains of eval_jama_ex6_start(V_a,V_b,V_c,V_d,B):
* Chain [22]: 2*s(39)+2*s(44)+2*s(45)+1*s(49)+1
  Such that:s(39) =< -V_a+V_b+1
s(40) =< V_d+1
s(46) =< s(40)
s(48) =< s(40)*2-1
s(44)+s(45) =< s(39)*s(46)
s(49) =< s(44)*s(48)
s(50) =< s(44)
s(39) >= -V_a+V_b+1
s(41) >= -V_a/2+V_b/2+1/2
s(42) >= -V_c
s(43) >= 2*V_c+3
s(40) >= V_d+1/2
s(44) >= s(41)
s(45) >= s(41)
s(47) >= s(40)
s(45) >= s(39)*s(42)
s(44) >= s(39)*s(47)
s(50) >= s(44)
s(40) >= s(40)
s(49) >= s(50)*s(43)+s(50)*s(40)-s(50)

  with precondition: [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1] 

* Chain [21]: 2*s(51)+2*s(55)+1
  Such that:s(51) =< -V_a+V_b+1
s(52) =< -V_c+V_d+1
s(55) =< s(51)*s(52)
s(54) >= -V_a+V_b+1
s(53) >= -V_c+V_d+1
s(51) >= s(54)
s(55) >= s(54)
s(55) >= s(51)*s(53)

  with precondition: [0>=2*V_d+1,V_b>=V_a,V_d>=V_c] 

* Chain [20]: 2*s(56)+2*s(61)+1*s(64)+1
  Such that:s(56) =< -V_a+V_b+1
s(57) =< -V_c+V_d+1
s(58) =< 2*V_d+1
s(62) =< s(57)
s(61) =< s(56)*s(62)
s(64) =< s(61)*s(58)
s(65) =< s(61)
s(66) =< s(57)
s(60) >= -V_a+V_b+1
s(57) >= -V_c+V_d+1
s(59) >= 2*V_c+1
s(56) >= s(60)
s(61) >= s(60)
s(63) >= s(57)
s(61) >= s(56)*s(63)
s(65) >= s(61)
s(66) >= s(57)
s(64) >= s(65)*s(59)+s(65)*s(66)-s(65)

  with precondition: [V_c>=0,V_b>=V_a,V_d>=V_c] 

* Chain [19]: 2*s(67)+1
  Such that:s(67) =< -V_a+V_b+1
s(67) >= -V_a+V_b+1

  with precondition: [V_b>=V_a,V_c>=V_d+1] 

* Chain [18]: 1
  with precondition: [V_a>=V_b+1] 


Closed-form bounds of eval_jama_ex6_start(V_a,V_b,V_c,V_d,B): 
-------------------------------------
* Chain [22] with precondition: [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1] 
    - Lower bound: (-V_a+V_b+1)* (-2*V_c)+1+nat((V_d+1/2)* ((-V_a+V_b+1)* (V_d+1/2))+ (V_d+1/2)* ((-V_a+V_b+1)*nat(2*V_c+3))+ (V_d+1)* - (-V_a+V_b+1))+ (-2*V_a+2*V_b+2)+ (-2*V_a+2*V_b+2)* (V_d+1/2) 
    - Complexity: n^3
 * Chain [21] with precondition: [0>=2*V_d+1,V_b>=V_a,V_d>=V_c] 
    - Lower bound: -2*V_a+2*V_b+3+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1) 
    - Complexity: n^2
 * Chain [20] with precondition: [V_c>=0,V_b>=V_a,V_d>=V_c] 
    - Lower bound: -2*V_a+2*V_b+2+ (nat((-V_c+V_d+1)* - (-V_a+V_b+1)+ (-V_a+V_b+1)* ((-V_c+V_d+1)* (2*V_c+1))+ (-V_c+V_d+1)* ((-V_c+V_d+1)* (-V_a+V_b+1)))+1)+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1) 
    - Complexity: n^3
 * Chain [19] with precondition: [V_b>=V_a,V_c>=V_d+1] 
    - Lower bound: -2*V_a+2*V_b+3 
    - Complexity: n
 * Chain [18] with precondition: [V_a>=V_b+1] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_jama_ex6_start(V_a,V_b,V_c,V_d,B): 
* 1 
 if [V_a>=V_b+1]
* -2*V_a+2*V_b+3 
 if [V_b>=V_a,V_c>=V_d+1]
* -2*V_a+2*V_b+3+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1) 
 if [0>=V_d+1,V_b>=V_a,V_d>=V_c]
* -2*V_a+2*V_b+2+ (nat((-V_c+V_d+1)* - (-V_a+V_b+1)+ (-V_a+V_b+1)* ((-V_c+V_d+1)* (2*V_c+1))+ (-V_c+V_d+1)* ((-V_c+V_d+1)* (-V_a+V_b+1)))+1)+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1) 
 if [V_c>=0,V_b>=V_a,V_d>=V_c]
* (-V_a+V_b+1)* (-2*V_c)+1+nat((V_d+1/2)* ((-V_a+V_b+1)* (V_d+1/2))+ (V_d+1/2)* ((-V_a+V_b+1)*nat(2*V_c+3))+ (V_d+1)* - (-V_a+V_b+1))+ (-2*V_a+2*V_b+2)+ (-2*V_a+2*V_b+2)* (V_d+1/2) 
 if [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1]
Possible lower bounds : [1,-2*V_a+2*V_b+3,-2*V_a+2*V_b+3+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1),-2*V_a+2*V_b+2+ (nat((-V_c+V_d+1)* - (-V_a+V_b+1)+ (-V_a+V_b+1)* ((-V_c+V_d+1)* (2*V_c+1))+ (-V_c+V_d+1)* ((-V_c+V_d+1)* (-V_a+V_b+1)))+1)+ (-2*V_c+2*V_d+2)* (-V_a+V_b+1), (-V_a+V_b+1)* (-2*V_c)+1+nat((V_d+1/2)* ((-V_a+V_b+1)* (V_d+1/2))+ (V_d+1/2)* ((-V_a+V_b+1)*nat(2*V_c+3))+ (V_d+1)* - (-V_a+V_b+1))+ (-2*V_a+2*V_b+2)+ (-2*V_a+2*V_b+2)* (V_d+1/2)]
Maximum lower bound complexity: n^3

Time statistics: 
-------------------------------------
* Partial evaluation computed in 38 ms.
* Invariants computed in 80 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 81 ms.
* Termination proved in 24 ms.
* Upper bounds computed in 247 ms.
   - Equation cost structures 45 ms.
   - Phase cost structures 133 ms.
   - Chain cost structures 72 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 513 ms.

