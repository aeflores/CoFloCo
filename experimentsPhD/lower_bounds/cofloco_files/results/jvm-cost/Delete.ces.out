
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [m9/1]
1. non_recursive : [o0/1]
2. non_recursive : [n9/3]
3. non_recursive : [o1/3]
4. recursive : [m0/4,m1/6,o3/6,o4/6,o6/6]
5. non_recursive : [o2/2]
6. recursive : [m2/2,m3/4,o5/4]
7. non_recursive : [n8/1]
8. non_recursive : [n7/3]
9. non_recursive : [n6/3]
10. non_recursive : [n5/3]
11. recursive : [m4/6,m5/7,n0/7,n1/6,n2/8,n3/8,n4/8]
12. non_recursive : [m8/0]
13. non_recursive : [m7/6]
14. non_recursive : [m6/6]
15. non_recursive : [delete/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into m0/4
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into m2/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n7/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into m4/6
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into delete/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations m0/4 
* CE 7 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations m0/4 
* CE 12: m0(A,D,E,F) = 3
     [D>=F,F>=E,F>=0] 
* CE 13: m0(A,D,E,F) = 8
     [E>=F+1,D>=E,F>=0] 
* CE 14: m0(A,D,E,F) = 10+ m0(A,D,E,G)
     [E>=F+1,D>=E,F>=0,F+1=G] 

### Cost equations --> "Loop" of m0/4 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of m0/4 
* Loop 11: m0(A,D,E,F)->  m0(A,D,E,F')
                  [E>=F+1,D>=E,F>=0,F+1=F'] 
* Loop 12: m0(A,D,E,F) [D>=F,F>=E,F>=0] 
* Loop 13: m0(A,D,E,F) [E>=F+1,D>=E,F>=0] 

### Ranking functions of CR m0(A,D,E,F) 
* RF of phase [11]: [D-F,E-F]

#### Partial ranking functions of CR m0(A,D,E,F) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    D-F
    E-F


### Resulting Chains:m0(A,D,E,F) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Specialization of cost equations m2/2 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations m2/2 
* CE 15: m2(A,B) = 15+ m2(A,C)
     [A>=C+1,C>=1,C=B+1] 
* CE 16: m2(A,B) = 5
     [B>=0] 

### Cost equations --> "Loop" of m2/2 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of m2/2 
* Loop 14: m2(A,B) [B>=0] 
* Loop 15: m2(A,B)->  m2(A,B')
                  [A>=B'+1,B'>=1,B'=B+1] 

### Ranking functions of CR m2(A,B) 
* RF of phase [15]: [A-B-1]

#### Partial ranking functions of CR m2(A,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A-B-1


### Resulting Chains:m2(A,B) 
* [[15],14]
* [14]


### Specialization of cost equations n7/3 
* CE 6 is refined into CE [17,18,19,20,21,22,23] 


#### Refined cost equations n7/3 
* CE 17: n7(A,B,C) = 8+ m0(A,B,C,D):[[11],13]+ m2(C,E):[[15],14]
     [C>=E+2,B>=C,E>=0,D=0] 
* CE 18: n7(A,B,C) = 8+ m0(A,B,C,D):[[11],13]+ m2(C,E):[14]
     [B>=C,E>=0,C>=2,D=0] 
* CE 19: n7(A,B,C) = 8+ m0(A,B,C,D):[[11],12]+ m2(C,E):[[15],14]
     [C>=E+2,B>=C,E>=0,D=0] 
* CE 20: n7(A,B,C) = 8+ m0(A,B,C,D):[[11],12]+ m2(C,E):[14]
     [B>=C,E>=0,C>=1,D=0] 
* CE 21: n7(A,B,C) = 8+ m0(A,B,C,D):[13]+ m2(C,E):[[15],14]
     [C>=E+2,B>=C,E>=0,D=0] 
* CE 22: n7(A,B,C) = 8+ m0(A,B,C,D):[13]+ m2(C,E):[14]
     [B>=C,E>=0,C>=1,D=0] 
* CE 23: n7(A,B,C) = 8+ m0(A,B,C,D):[12]+ m2(C,E):[14]
     [E>=0,B>=0,0>=C,D=0] 

### Cost equations --> "Loop" of n7/3 
* CEs [21] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of n7/3 
* Loop 16: n7(A,B,C) [B>=C,C>=2] 
* Loop 17: n7(A,B,C) [B>=C,C>=2] 
* Loop 18: n7(A,B,C) [B>=C,C>=2] 
* Loop 19: n7(A,B,C) [B>=C,C>=2] 
* Loop 20: n7(A,B,C) [B>=C,C>=1] 
* Loop 21: n7(A,B,C) [B>=C,C>=1] 
* Loop 22: n7(A,B,C) [B>=0,0>=C] 

### Ranking functions of CR n7(A,B,C) 

#### Partial ranking functions of CR n7(A,B,C) 


### Resulting Chains:n7(A,B,C) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]


### Specialization of cost equations m4/6 
* CE 4 is refined into CE [24,25,26,27,28,29,30] 
* CE 5 is refined into CE [31,32,33,34,35,36,37] 
* CE 3 is refined into CE [38] 


#### Refined cost equations m4/6 
* CE 24: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[22]
     [A>=G+1,E>=F,G>=0,C>=0,E>=0,B>=0,0>=D,D=H+1] 
* CE 25: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[21]
     [A>=G+1,C>=D,E>=F,G>=0,D>=1,E>=0,B>=0,D=H+1] 
* CE 26: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[20]
     [A>=G+1,C>=D,E>=F,G>=0,D>=1,E>=0,B>=0,D=H+1] 
* CE 27: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[19]
     [A>=G+1,C>=D,E>=F,G>=0,D>=2,E>=0,B>=0,D=H+1] 
* CE 28: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[18]
     [A>=G+1,C>=D,E>=F,G>=0,D>=2,E>=0,B>=0,D=H+1] 
* CE 29: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[17]
     [A>=G+1,C>=D,E>=F,G>=0,D>=2,E>=0,B>=0,D=H+1] 
* CE 30: m4(A,B,C,D,E,F) = 17+ m4(G,B,C,H,E,F)+ n7(I,C,D):[16]
     [A>=G+1,C>=D,E>=F,G>=0,D>=2,E>=0,B>=0,D=H+1] 
* CE 31: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[22]
     [A>=G+1,C>=D,G>=0,E>=0,C>=0,B>=0,0>=F,F=H+1] 
* CE 32: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[21]
     [A>=G+1,E>=F,C>=D,G>=0,F>=1,C>=0,B>=0,F=H+1] 
* CE 33: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[20]
     [A>=G+1,E>=F,C>=D,G>=0,F>=1,C>=0,B>=0,F=H+1] 
* CE 34: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[19]
     [A>=G+1,E>=F,C>=D,G>=0,F>=2,C>=0,B>=0,F=H+1] 
* CE 35: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[18]
     [A>=G+1,E>=F,C>=D,G>=0,F>=2,C>=0,B>=0,F=H+1] 
* CE 36: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[17]
     [A>=G+1,E>=F,C>=D,G>=0,F>=2,C>=0,B>=0,F=H+1] 
* CE 37: m4(A,B,C,D,E,F) = 16+ m4(G,B,C,D,E,H)+ n7(I,E,F):[16]
     [A>=G+1,E>=F,C>=D,G>=0,F>=2,C>=0,B>=0,F=H+1] 
* CE 38: m4(A,B,C,D,E,F) = 2
     [E>=F,C>=D,E>=0,C>=0,B>=0,A>=0] 

### Cost equations --> "Loop" of m4/6 
* CEs [38] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [25] --> Loop 29 
* CEs [24] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [34] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [32] --> Loop 36 
* CEs [31] --> Loop 37 

#### Loops of m4/6 
* Loop 23: m4(A,B,C,D,E,F) [E>=F,C>=D,E>=0,C>=0,B>=0,A>=0] 
* Loop 24: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=2,B>=0,D=D'+1] 
* Loop 25: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=2,B>=0,D=D'+1] 
* Loop 26: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=2,B>=0,D=D'+1] 
* Loop 27: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=2,B>=0,D=D'+1] 
* Loop 28: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=1,B>=0,D=D'+1] 
* Loop 29: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,C>=D,A'>=0,E>=0,D>=1,B>=0,D=D'+1] 
* Loop 30: m4(A,B,C,D,E,F)->  m4(A',B,C,D',E,F)
                  [A>=A'+1,E>=F,A'>=0,E>=0,C>=0,B>=0,0>=D,D=D'+1] 
* Loop 31: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=2,C>=0,B>=0,F=F'+1] 
* Loop 32: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=2,C>=0,B>=0,F=F'+1] 
* Loop 33: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=2,C>=0,B>=0,F=F'+1] 
* Loop 34: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=2,C>=0,B>=0,F=F'+1] 
* Loop 35: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=1,C>=0,B>=0,F=F'+1] 
* Loop 36: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,E>=F,C>=D,A'>=0,F>=1,C>=0,B>=0,F=F'+1] 
* Loop 37: m4(A,B,C,D,E,F)->  m4(A',B,C,D,E,F')
                  [A>=A'+1,C>=D,A'>=0,E>=0,C>=0,B>=0,0>=F,F=F'+1] 

### Ranking functions of CR m4(A,B,C,D,E,F) 
* RF of phase [24,25,26,27,28,29,30,31,32,33,34,35,36,37]: [A]

#### Partial ranking functions of CR m4(A,B,C,D,E,F) 
* Partial RF of phase [24,25,26,27,28,29,30,31,32,33,34,35,36,37]:
  - RF of loop [24:1,25:1,26:1,27:1]:
    D-1
  - RF of loop [24:1,25:1,26:1,27:1,28:1,29:1,30:1,31:1,32:1,33:1,34:1,35:1,36:1,37:1]:
    A
  - RF of loop [28:1,29:1]:
    D
  - RF of loop [31:1,32:1,33:1,34:1]:
    F-1
  - RF of loop [35:1,36:1]:
    F


### Resulting Chains:m4(A,B,C,D,E,F) 
* [[24,25,26,27,28,29,30,31,32,33,34,35,36,37],23]
* [23]


### Specialization of cost equations delete/6 
* CE 2 is refined into CE [39,40] 


#### Refined cost equations delete/6 
* CE 39: delete(A,B,C,D,E,F) = 1+ m4(A,B,C,D,E,F):[[24,25,26,27,28,29,30,31,32,33,34,35,36,37],23]
     [E>=F,C>=D,F>=0,D>=0,B>=0,A>=1] 
* CE 40: delete(A,B,C,D,E,F) = 1+ m4(A,B,C,D,E,F):[23]
     [E>=F,C>=D,F>=0,D>=0,B>=0,A>=0] 

### Cost equations --> "Loop" of delete/6 
* CEs [39] --> Loop 38 
* CEs [40] --> Loop 39 

#### Loops of delete/6 
* Loop 38: delete(A,B,C,D,E,F) [E>=F,C>=D,F>=0,D>=0,B>=0,A>=1] 
* Loop 39: delete(A,B,C,D,E,F) [E>=F,C>=D,F>=0,D>=0,B>=0,A>=0] 

### Ranking functions of CR delete(A,B,C,D,E,F) 

#### Partial ranking functions of CR delete(A,B,C,D,E,F) 


### Resulting Chains:delete(A,B,C,D,E,F) 
* [39]
* [38]


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:m0(A,D,E,F) -> [m0(A',D',E',F')] 
10
#### Cost of phase [11]:m0(A,D,E,F) -> [m0(A',D',E',F')] 
10*it(11)+0
  Such that:it(11) =< D-F
it(11) =< D-F-D'+F'
it(11) =< E-F
it(11) =< E-F-E'+F'
it(11) >= D-F-D'+F'
it(11) >= E-F-E'+F'

#### Cost of phase [11]:m0(A,D,E,F) -> [m0(A',D',E',F')] 
10*it(11)+0
  Such that:it(11) =< D-F
it(11) =< D-F-D'+F'
it(11) =< E-F
it(11) =< E-F-E'+F'
it(11) >= D-F-D'+F'
it(11) >= E-F-E'+F'

#### Cost of chains of m0(A,D,E,F):
* Chain [[11],13]: 10*it(11)+8
  Such that:it(11) =< E-F-1
it(11) >= 1

  with precondition: [F>=0,D>=E,E>=F+2] 

* Chain [[11],12]: 10*it(11)+3
  Such that:it(11) =< E-F
it(11) >= E-F

  with precondition: [F>=0,D>=E,E>=F+1] 

* Chain [13]: 8
  with precondition: [F>=0,D>=E,E>=F+1] 

* Chain [12]: 3
  with precondition: [F>=0,F>=E,D>=F] 


#### Cost of loops [15] 

 * loop 15:m2(A,B) -> [m2(A',B')] 
15
#### Cost of phase [15]:m2(A,B) -> [m2(A',B')] 
15*it(15)+0
  Such that:it(15) =< A-B-1
it(15) =< A-B-A'+B'
it(15) >= A-B-A'+B'

#### Cost of chains of m2(A,B):
* Chain [[15],14]: 15*it(15)+5
  Such that:it(15) =< A-B-1
it(15) >= 1

  with precondition: [B>=0,A>=B+2] 

* Chain [14]: 5
  with precondition: [B>=0] 


#### Cost of chains of n7(A,B,C):
* Chain [22]: 16
  with precondition: [0>=C,B>=0] 

* Chain [21]: 10*s(1)+16
  Such that:s(1) =< C
s(1) >= C

  with precondition: [C>=1,B>=C] 

* Chain [20]: 21
  with precondition: [C>=1,B>=C] 

* Chain [19]: 25*s(2)+21
  Such that:aux(1) =< C-1
s(2) =< aux(1)
aux(2) >= 1
s(2) >= aux(2)

  with precondition: [C>=2,B>=C] 

* Chain [18]: 10*s(4)+21
  Such that:s(4) =< C-1
s(4) >= 1

  with precondition: [C>=2,B>=C] 

* Chain [17]: 10*s(5)+15*s(6)+16
  Such that:s(6) =< C-1
s(5) =< C
s(6) >= 1
s(5) >= C

  with precondition: [C>=2,B>=C] 

* Chain [16]: 15*s(7)+21
  Such that:s(7) =< C-1
s(7) >= 1

  with precondition: [C>=2,B>=C] 


#### Cost of loops [24,25,26,27,28,29,30,31,32,33,34,35,36,37] 

 * loop 24:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
15*s(9)+38
  Such that:s(9) =< D'
s(9) >= 1

 * loop 25:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
15*s(12)+10*s(13)+33
  Such that:s(12) =< D'
s(13) =< D'+1
s(12) >= 1
s(13) >= D'+1

 * loop 26:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
10*s(15)+38
  Such that:s(15) =< D'
s(15) >= 1

 * loop 27:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
25*s(21)+38
  Such that:s(19) =< D'
s(21) =< s(19)
s(20) >= 1
s(21) >= s(20)

 * loop 28:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
38
 * loop 29:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
10*s(23)+33
  Such that:s(23) =< D'+1
s(23) >= D'+1

 * loop 30:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
33
 * loop 31:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
15*s(25)+37
  Such that:s(25) =< F'
s(25) >= 1

 * loop 32:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
15*s(28)+10*s(29)+32
  Such that:s(28) =< F'
s(29) =< F'+1
s(28) >= 1
s(29) >= F'+1

 * loop 33:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
10*s(31)+37
  Such that:s(31) =< F'
s(31) >= 1

 * loop 34:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
25*s(37)+37
  Such that:s(35) =< F'
s(37) =< s(35)
s(36) >= 1
s(37) >= s(36)

 * loop 35:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
37
 * loop 36:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
10*s(39)+32
  Such that:s(39) =< F'+1
s(39) >= F

 * loop 37:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
32
#### Cost of phase [24,25,26,27,28,29,30,31,32,33,34,35,36,37]:m4(A,B,C,D,E,F) -> [m4(A',B',C',D',E',F')] 
38*it(24)+33*it(25)+38*it(26)+38*it(27)+38*it(28)+33*it(29)+33*it(30)+37*it(31)+32*it(32)+37*it(33)+37*it(34)+37*it(35)+32*it(36)+32*it(37)+15*s(40)+15*s(41)+10*s(42)+10*s(43)+25*s(44)+10*s(47)+15*s(48)+15*s(49)+10*s(50)+10*s(51)+25*s(52)+10*s(55)+0
  Such that:it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< A
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< A-A'
it(28)+it(29) =< D
it(35)+it(36) =< F
aux(27) =< D-1
aux(28) =< D-D'
aux(29) =< F-1
aux(30) =< F-F'
it(24)+it(25)+it(26)+it(27)+it(28)+it(29) =< aux(27)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) =< aux(28)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36) =< aux(29)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(30)
aux(20) =< aux(29)+1
aux(19) =< aux(29)
aux(8) =< aux(27)+1
aux(7) =< aux(27)
s(48) =< it(31)*aux(29)
s(40) =< it(24)*aux(27)
s(55) =< it(36)*aux(20)
s(54) =< it(34)*aux(19)
s(51) =< it(33)*aux(19)
s(50) =< it(32)*aux(20)
s(49) =< it(32)*aux(19)
s(47) =< it(29)*aux(8)
s(46) =< it(27)*aux(7)
s(43) =< it(26)*aux(7)
s(42) =< it(25)*aux(8)
s(41) =< it(25)*aux(7)
s(52) =< s(54)
s(44) =< s(46)
aux(6) >= -A+D+1
aux(18) >= -A+F+1
aux(31) >= D-D'
aux(32) >= F-F'
aux(3)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(5)+it(24)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(9)+it(24)+it(25)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(11)+it(24)+it(25)+it(26)+it(28)+it(29)+it(30) >= aux(31)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+s(47) >= aux(31)
aux(15)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(17)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(21)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(23)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37) >= aux(32)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(55) >= aux(32)
aux(25) >= aux(18)
aux(13) >= aux(6)
aux(23) >= aux(23)
s(51) >= aux(21)
s(50) >= it(32)*aux(18)
s(49) >= aux(17)
s(48) >= aux(15)
aux(11) >= aux(11)
s(43) >= aux(9)
s(42) >= it(25)*aux(6)
s(41) >= aux(5)
s(40) >= aux(3)
s(55) >= it(36)*aux(25)
s(47) >= it(29)*aux(13)
s(52) >= aux(23)
s(44) >= aux(11)

#### Cost of chains of m4(A,B,C,D,E,F):
* Chain [[24,25,26,27,28,29,30,31,32,33,34,35,36,37],23]: 38*it(24)+33*it(25)+38*it(26)+38*it(27)+38*it(28)+33*it(29)+33*it(30)+37*it(31)+32*it(32)+37*it(33)+37*it(34)+37*it(35)+32*it(36)+32*it(37)+15*s(40)+15*s(41)+10*s(42)+10*s(43)+25*s(44)+10*s(47)+15*s(48)+15*s(49)+10*s(50)+10*s(51)+25*s(52)+10*s(55)+2
  Such that:aux(27) =< D-1
it(28)+it(29) =< D
aux(29) =< F-1
it(35)+it(36) =< F
aux(33) =< A
aux(28)+aux(30) =< aux(33)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30)+it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(33)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29) =< aux(27)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) =< aux(28)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36) =< aux(29)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) =< aux(30)
aux(20) =< aux(29)+1
aux(19) =< aux(29)
aux(8) =< aux(27)+1
aux(7) =< aux(27)
s(48) =< it(31)*aux(29)
s(40) =< it(24)*aux(27)
s(55) =< it(36)*aux(20)
s(54) =< it(34)*aux(19)
s(51) =< it(33)*aux(19)
s(50) =< it(32)*aux(20)
s(49) =< it(32)*aux(19)
s(47) =< it(29)*aux(8)
s(46) =< it(27)*aux(7)
s(43) =< it(26)*aux(7)
s(42) =< it(25)*aux(8)
s(41) =< it(25)*aux(7)
s(52) =< s(54)
s(44) =< s(46)
aux(32)+aux(31) >= 1
aux(6) >= -A+D+1
aux(18) >= -A+F+1
aux(31) >= aux(34)
aux(32) >= aux(34)
aux(3)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(5)+it(24)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(9)+it(24)+it(25)+it(27)+it(28)+it(29)+it(30) >= aux(31)
aux(11)+it(24)+it(25)+it(26)+it(28)+it(29)+it(30) >= aux(31)
it(24)+it(25)+it(26)+it(27)+it(28)+it(29)+it(30) >= aux(31)
it(24)+it(25)+it(26)+it(27)+it(28)+it(30)+s(47) >= aux(31)
aux(15)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(17)+it(31)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(21)+it(31)+it(32)+it(34)+it(35)+it(36)+it(37) >= aux(32)
aux(23)+it(31)+it(32)+it(33)+it(35)+it(36)+it(37) >= aux(32)
it(31)+it(32)+it(33)+it(34)+it(35)+it(36)+it(37) >= aux(32)
it(31)+it(32)+it(33)+it(34)+it(35)+it(37)+s(55) >= aux(32)
aux(25) >= aux(18)
aux(13) >= aux(6)
aux(23) >= aux(23)
s(51) >= aux(21)
s(50) >= it(32)*aux(18)
s(49) >= aux(17)
s(48) >= aux(15)
aux(11) >= aux(11)
s(43) >= aux(9)
s(42) >= it(25)*aux(6)
s(41) >= aux(5)
s(40) >= aux(3)
s(55) >= it(36)*aux(25)
s(47) >= it(29)*aux(13)
s(52) >= aux(23)
s(44) >= aux(11)

  with precondition: [A>=1,B>=0,C>=0,E>=0,C>=D,E>=F] 

* Chain [23]: 2
  with precondition: [A>=0,B>=0,C>=0,E>=0,C>=D,E>=F] 


#### Cost of chains of delete(A,B,C,D,E,F):
* Chain [39]: 3
  with precondition: [A>=0,B>=0,D>=0,F>=0,C>=D,E>=F] 

* Chain [38]: 38*s(57)+33*s(58)+37*s(60)+32*s(61)+38*s(69)+33*s(70)+38*s(71)+38*s(72)+33*s(73)+37*s(74)+32*s(75)+37*s(76)+37*s(77)+32*s(78)+10*s(84)+10*s(89)+10*s(96)+10*s(97)+15*s(98)+15*s(99)+10*s(100)+10*s(101)+15*s(102)+15*s(103)+25*s(106)+25*s(107)+3
  Such that:s(62) =< A
s(56) =< D-1
s(58)+s(57) =< D
s(59) =< F-1
s(61)+s(60) =< F
s(67)+s(68) =< s(62)
s(57)+s(58)+s(60)+s(61)+s(69)+s(70)+s(71)+s(72)+s(73)+s(74)+s(75)+s(76)+s(77)+s(78) =< s(62)
s(57)+s(58)+s(69)+s(70)+s(71)+s(72) =< s(56)
s(57)+s(58)+s(69)+s(70)+s(71)+s(72)+s(73) =< s(67)
s(60)+s(61)+s(74)+s(75)+s(76)+s(77) =< s(59)
s(60)+s(61)+s(74)+s(75)+s(76)+s(77)+s(78) =< s(68)
s(90) =< s(59)+1
s(92) =< s(59)
s(93) =< s(56)+1
s(95) =< s(56)
s(99) =< s(74)*s(59)
s(103) =< s(69)*s(56)
s(89) =< s(61)*s(90)
s(104) =< s(77)*s(92)
s(96) =< s(76)*s(92)
s(97) =< s(75)*s(90)
s(98) =< s(75)*s(92)
s(84) =< s(58)*s(93)
s(105) =< s(72)*s(95)
s(100) =< s(71)*s(95)
s(101) =< s(70)*s(93)
s(102) =< s(70)*s(95)
s(106) =< s(104)
s(107) =< s(105)
s(63)+s(64) >= 1
s(65) >= -A+D+1
s(66) >= -A+F+1
s(57)+s(58)+s(70)+s(71)+s(72)+s(73)+s(80) >= s(64)
s(57)+s(58)+s(69)+s(71)+s(72)+s(73)+s(81) >= s(64)
s(57)+s(58)+s(69)+s(70)+s(72)+s(73)+s(82) >= s(64)
s(57)+s(58)+s(69)+s(70)+s(71)+s(73)+s(83) >= s(64)
s(57)+s(58)+s(69)+s(70)+s(71)+s(72)+s(73) >= s(64)
s(57)+s(69)+s(70)+s(71)+s(72)+s(73)+s(84) >= s(64)
s(60)+s(61)+s(75)+s(76)+s(77)+s(78)+s(85) >= s(63)
s(60)+s(61)+s(74)+s(76)+s(77)+s(78)+s(86) >= s(63)
s(60)+s(61)+s(74)+s(75)+s(77)+s(78)+s(87) >= s(63)
s(60)+s(61)+s(74)+s(75)+s(76)+s(78)+s(88) >= s(63)
s(60)+s(61)+s(74)+s(75)+s(76)+s(77)+s(78) >= s(63)
s(60)+s(74)+s(75)+s(76)+s(77)+s(78)+s(89) >= s(63)
s(91) >= s(66)
s(94) >= s(65)
s(88) >= s(88)
s(96) >= s(87)
s(97) >= s(75)*s(66)
s(98) >= s(86)
s(99) >= s(85)
s(83) >= s(83)
s(100) >= s(82)
s(101) >= s(70)*s(65)
s(102) >= s(81)
s(103) >= s(80)
s(89) >= s(61)*s(91)
s(84) >= s(58)*s(94)
s(106) >= s(88)
s(107) >= s(83)

  with precondition: [A>=1,B>=0,D>=0,F>=0,C>=D,E>=F] 


Closed-form bounds of delete(A,B,C,D,E,F): 
-------------------------------------
* Chain [39] with precondition: [A>=0,B>=0,D>=0,F>=0,C>=D,E>=F] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [38] with precondition: [A>=1,B>=0,D>=0,F>=0,C>=D,E>=F] 
    - Lower bound: 78 
    - Complexity: constant
 
### Partitioned lower bound of delete(A,B,C,D,E,F): 
* 3 
 if [A>=0,B>=0,D>=0,F>=0,C>=D,E>=F]
Possible lower bounds : [3]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 173 ms.
* Invariants computed in 315 ms.
   - Backward Invariants 85 ms.
   - Transitive Invariants 97 ms.
* Refinement performed in 412 ms.
* Termination proved in 172 ms.
* Upper bounds computed in 1836 ms.
   - Equation cost structures 329 ms.
   - Phase cost structures 1446 ms.
   - Chain cost structures 149 ms.
   - Solving cost expressions 89 ms.
* Total analysis performed in 3043 ms.

