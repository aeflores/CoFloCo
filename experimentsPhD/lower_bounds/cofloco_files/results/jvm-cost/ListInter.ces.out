
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [n3/1]
1. non_recursive : [o0/1]
2. non_recursive : [o1/2]
3. non_recursive : [o2/2]
4. recursive : [m0/2,m1/2,o7/2,o8/3,o9/3]
5. non_recursive : [m6/1]
6. non_recursive : [o4/1]
7. non_recursive : [o5/1]
8. non_recursive : [o6/1]
9. non_recursive : [o3/2]
10. non_recursive : [n9/2]
11. non_recursive : [n7/2]
12. non_recursive : [m7/0]
13. non_recursive : [p0/0]
14. non_recursive : [m8/1]
15. non_recursive : [m5/1]
16. non_recursive : [m4/1]
17. recursive : [m2/3,m3/3,n1/4,n2/3,n4/3,n6/4,n8/4]
18. non_recursive : [n0/0]
19. non_recursive : [n5/2]
20. non_recursive : [m9/2]
21. non_recursive : [listInter/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into m0/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into o6/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into m2/3
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into n5/2
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into listInter/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations m0/2 
* CE 10 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 9 is refined into CE [13] 


#### Refined cost equations m0/2 
* CE 11: m0(A,B) = 6
     [B>=0] 
* CE 12: m0(A,B) = 2
     [B=0] 
* CE 13: m0(A,B) = 10+ m0(A,C)
     [B>=C+1,C>=0] 

### Cost equations --> "Loop" of m0/2 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of m0/2 
* Loop 10: m0(A,B)->  m0(A,B')
                  [B>=B'+1,B'>=0] 
* Loop 11: m0(A,B) [B>=0] 
* Loop 12: m0(A,B) [B=0] 

### Ranking functions of CR m0(A,B) 
* RF of phase [10]: [B]

#### Partial ranking functions of CR m0(A,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    B


### Resulting Chains:m0(A,B) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Specialization of cost equations o6/1 
* CE 7 is refined into CE [14] 


#### Refined cost equations o6/1 
* CE 14: o6(A) = 2
     [A>=0] 

### Cost equations --> "Loop" of o6/1 
* CEs [14] --> Loop 13 

#### Loops of o6/1 
* Loop 13: o6(A) [A>=0] 

### Ranking functions of CR o6(A) 

#### Partial ranking functions of CR o6(A) 


### Resulting Chains:o6(A) 
* [13]


### Specialization of cost equations m2/3 
* CE 5 is refined into CE [15,16,17,18] 
* CE 6 is refined into CE [19,20,21,22] 
* CE 4 is refined into CE [23] 


#### Refined cost equations m2/3 
* CE 15: m2(A,B,C) = 35+ m2(A,D,E)+ o6(F):[13]+ m0(G,A):[[10],12]
     [C>=E+1,A>=F,E>=0,D>=1,A>=1,F>=0,B>=1] 
* CE 16: m2(A,B,C) = 35+ m2(A,D,E)+ o6(F):[13]+ m0(G,A):[[10],11]
     [C>=E+1,A>=F,E>=0,D>=1,A>=1,F>=0,B>=1] 
* CE 17: m2(A,B,C) = 35+ m2(D,E,F)+ o6(G):[13]+ m0(H,I):[12]
     [C>=F+1,F>=0,E>=1,B>=1,D=0,I=0,G=0,A=0] 
* CE 18: m2(A,B,C) = 35+ m2(A,D,E)+ o6(F):[13]+ m0(G,A):[11]
     [C>=E+1,A>=F,E>=0,D>=1,F>=0,B>=1] 
* CE 19: m2(A,B,C) = 16+ m2(A,B,D)+ o6(E):[13]+ m0(F,A):[[10],12]
     [C>=D+1,A>=E,D>=0,A>=1,E>=0,B>=1] 
* CE 20: m2(A,B,C) = 16+ m2(A,B,D)+ o6(E):[13]+ m0(F,A):[[10],11]
     [C>=D+1,A>=E,D>=0,A>=1,E>=0,B>=1] 
* CE 21: m2(A,B,C) = 16+ m2(D,B,E)+ o6(F):[13]+ m0(G,H):[12]
     [C>=E+1,E>=0,B>=1,D=0,H=0,F=0,A=0] 
* CE 22: m2(A,B,C) = 16+ m2(A,B,D)+ o6(E):[13]+ m0(F,A):[11]
     [C>=D+1,A>=E,D>=0,E>=0,B>=1] 
* CE 23: m2(A,B,C) = 2
     [C>=0,B>=1,A>=0] 

### Cost equations --> "Loop" of m2/3 
* CEs [23] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [21] --> Loop 22 

#### Loops of m2/3 
* Loop 14: m2(A,B,C) [C>=0,B>=1,A>=0] 
* Loop 15: m2(A,B,C)->  m2(A,B',C')
                  [C>=C'+1,C'>=0,B'>=1,B>=1,A>=1] 
* Loop 16: m2(A,B,C)->  m2(A,B',C')
                  [C>=C'+1,C'>=0,B'>=1,B>=1,A>=1] 
* Loop 17: m2(A,B,C)->  m2(A,B',C')
                  [C>=C'+1,C'>=0,B'>=1,B>=1,A>=0] 
* Loop 18: m2(A,B,C)->  m2(A,B,C')
                  [C>=C'+1,C'>=0,B>=1,A>=1] 
* Loop 19: m2(A,B,C)->  m2(A,B,C')
                  [C>=C'+1,C'>=0,B>=1,A>=1] 
* Loop 20: m2(A,B,C)->  m2(A,B,C')
                  [C>=C'+1,C'>=0,B>=1,A>=0] 
* Loop 21: m2(A,B,C)->  m2(A',B',C')
                  [C>=C'+1,C'>=0,B'>=1,B>=1,A'=0,A=0] 
* Loop 22: m2(A,B,C)->  m2(A',B,C')
                  [C>=C'+1,C'>=0,B>=1,A'=0,A=0] 

### Ranking functions of CR m2(A,B,C) 
* RF of phase [15,16,17,18,19,20,21,22]: [C]

#### Partial ranking functions of CR m2(A,B,C) 
* Partial RF of phase [15,16,17,18,19,20,21,22]:
  - RF of loop [15:1,16:1,17:1,18:1,19:1,20:1,21:1,22:1]:
    C


### Resulting Chains:m2(A,B,C) 
* [[15,16,17,18,19,20,21,22],14]
* [14]


### Specialization of cost equations n5/2 
* CE 3 is refined into CE [24,25] 


#### Refined cost equations n5/2 
* CE 24: n5(D,B) = 19+ m2(B,E,D):[[15,16,17,18,19,20,21,22],14]
     [D>=1,E>=1,B>=0] 
* CE 25: n5(D,B) = 19+ m2(B,E,D):[14]
     [D>=0,E>=1,B>=0] 

### Cost equations --> "Loop" of n5/2 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of n5/2 
* Loop 23: n5(D,B) [B>=0,D>=1] 
* Loop 24: n5(D,B) [B>=0,D>=0] 

### Ranking functions of CR n5(D,B) 

#### Partial ranking functions of CR n5(D,B) 


### Resulting Chains:n5(D,B) 
* [24]
* [23]


### Specialization of cost equations listInter/2 
* CE 2 is refined into CE [26,27] 


#### Refined cost equations listInter/2 
* CE 26: listInter(A,B) = 0+ n5(A,B):[24]
     [B>=0,A>=0] 
* CE 27: listInter(A,B) = 0+ n5(A,B):[23]
     [B>=0,A>=1] 

### Cost equations --> "Loop" of listInter/2 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of listInter/2 
* Loop 25: listInter(A,B) [B>=0,A>=1] 
* Loop 26: listInter(A,B) [B>=0,A>=0] 

### Ranking functions of CR listInter(A,B) 

#### Partial ranking functions of CR listInter(A,B) 


### Resulting Chains:listInter(A,B) 
* [26]
* [25]


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:m0(A,B) -> [m0(A',B')] 
10
#### Cost of phase [10]:m0(A,B) -> [m0(A',B')] 
10*it(10)+0
  Such that:it(10) =< B
it(10) =< B-B'

#### Cost of phase [10]:m0(A,B) -> [m0(A',B')] 
10*it(10)+0
  Such that:it(10) =< B
it(10) =< B-B'

#### Cost of chains of m0(A,B):
* Chain [[10],12]: 10*it(10)+2
  Such that:it(10) =< B

  with precondition: [B>=1] 

* Chain [[10],11]: 10*it(10)+6
  Such that:it(10) =< B

  with precondition: [B>=1] 

* Chain [12]: 2
  with precondition: [B=0] 

* Chain [11]: 6
  with precondition: [B>=0] 


#### Cost of chains of o6(A):
* Chain [13]: 2
  with precondition: [A>=0] 


#### Cost of loops [15,16,17,18,19,20,21,22] 

 * loop 15:m2(A,B,C) -> [m2(A',B',C')] 
10*s(2)+43
  Such that:s(2) =< A'

 * loop 16:m2(A,B,C) -> [m2(A',B',C')] 
10*s(4)+39
  Such that:s(4) =< A'

 * loop 17:m2(A,B,C) -> [m2(A',B',C')] 
43
 * loop 18:m2(A,B,C) -> [m2(A',B',C')] 
10*s(6)+24
  Such that:s(6) =< A'

 * loop 19:m2(A,B,C) -> [m2(A',B',C')] 
10*s(8)+20
  Such that:s(8) =< A'

 * loop 20:m2(A,B,C) -> [m2(A',B',C')] 
24
 * loop 21:m2(A,B,C) -> [m2(A',B',C')] 
39
 * loop 22:m2(A,B,C) -> [m2(A',B',C')] 
20
#### Cost of phase [15,16,17,18,19,20,21,22]:m2(A,B,C) -> [m2(A',B',C')] 
43*it(15)+39*it(16)+43*it(17)+24*it(18)+20*it(19)+24*it(20)+39*it(21)+20*it(22)+10*s(9)+10*s(10)+10*s(11)+10*s(12)+0
  Such that:aux(1) =< A
it(15)+it(16)+it(17)+it(18)+it(19)+it(20)+it(21)+it(22) =< C
it(15)+it(16)+it(17)+it(18)+it(19)+it(20)+it(21)+it(22) =< C-C'
aux(2) =< aux(1)
s(9) =< it(15)*aux(1)
s(12) =< it(19)*aux(2)
s(11) =< it(18)*aux(2)
s(10) =< it(16)*aux(2)

#### Cost of chains of m2(A,B,C):
* Chain [[15,16,17,18,19,20,21,22],14]: 43*it(15)+39*it(16)+43*it(17)+24*it(18)+20*it(19)+24*it(20)+39*it(21)+20*it(22)+10*s(9)+10*s(10)+10*s(11)+10*s(12)+2
  Such that:it(22)+it(21)+it(20)+it(19)+it(18)+it(17)+it(16)+it(15) =< C

  with precondition: [A>=0,B>=1,C>=1] 

* Chain [14]: 2
  with precondition: [A>=0,B>=1,C>=0] 


#### Cost of chains of n5(D,B):
* Chain [24]: 21
  with precondition: [D>=0,B>=0] 

* Chain [23]: 20*s(13)+39*s(14)+24*s(15)+20*s(16)+24*s(17)+43*s(18)+39*s(19)+43*s(20)+40*s(21)+21
  Such that:s(20)+s(19)+s(18)+s(17)+s(16)+s(15)+s(14)+s(13) =< D

  with precondition: [D>=1,B>=0] 


#### Cost of chains of listInter(A,B):
* Chain [26]: 21
  with precondition: [A>=0,B>=0] 

* Chain [25]: 43*s(25)+39*s(26)+43*s(27)+24*s(28)+20*s(29)+24*s(30)+39*s(31)+20*s(32)+40*s(33)+21
  Such that:s(32)+s(31)+s(30)+s(29)+s(28)+s(27)+s(26)+s(25) =< A

  with precondition: [A>=1,B>=0] 


Closed-form bounds of listInter(A,B): 
-------------------------------------
* Chain [26] with precondition: [A>=0,B>=0] 
    - Lower bound: 21 
    - Complexity: constant
 * Chain [25] with precondition: [A>=1,B>=0] 
    - Lower bound: 21 
    - Complexity: constant
 
### Partitioned lower bound of listInter(A,B): 
* 21 
 if [A>=0,B>=0]
Possible lower bounds : [21]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 90 ms.
* Invariants computed in 79 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 122 ms.
* Termination proved in 25 ms.
* Upper bounds computed in 171 ms.
   - Equation cost structures 52 ms.
   - Phase cost structures 132 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 555 ms.

