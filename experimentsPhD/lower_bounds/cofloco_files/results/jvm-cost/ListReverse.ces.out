
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [m4/1]
1. recursive : [m0/2,m1/2,m6/2]
2. non_recursive : [m3/0]
3. non_recursive : [m5/1]
4. non_recursive : [m2/1]
5. non_recursive : [listReverse/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into m0/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into listReverse/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations m0/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations m0/2 
* CE 5: m0(A,B) = 13+ m0(C,A)
     [A>=C+1,C>=0,B>=0] 
* CE 6: m0(A,B) = 2
     [B>=0] 

### Cost equations --> "Loop" of m0/2 
* CEs [6] --> Loop 4 
* CEs [5] --> Loop 5 

#### Loops of m0/2 
* Loop 4: m0(A,B) [B>=0] 
* Loop 5: m0(A,B)->  m0(A',A)
                  [A>=A'+1,A'>=0,B>=0] 

### Ranking functions of CR m0(A,B) 
* RF of phase [5]: [A]

#### Partial ranking functions of CR m0(A,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    A


### Resulting Chains:m0(A,B) 
* [[5],4]
* [4]


### Specialization of cost equations listReverse/1 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations listReverse/1 
* CE 7: listReverse(A) = 6+ m0(A,B):[[5],4]
     [A>=1,B=0] 
* CE 8: listReverse(A) = 6+ m0(A,B):[4]
     [B=0] 

### Cost equations --> "Loop" of listReverse/1 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of listReverse/1 
* Loop 6: listReverse(A) [A>=1] 
* Loop 7: listReverse(A) [] 

### Ranking functions of CR listReverse(A) 

#### Partial ranking functions of CR listReverse(A) 


### Resulting Chains:listReverse(A) 
* [7]
* [6]


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:m0(A,B) -> [m0(A',B')] 
13
#### Cost of phase [5]:m0(A,B) -> [m0(A',B')] 
13*it(5)+0
  Such that:it(5) =< A
it(5) =< A-A'

#### Cost of chains of m0(A,B):
* Chain [[5],4]: 13*it(5)+2
  Such that:it(5) =< A

  with precondition: [A>=1,B>=0] 

* Chain [4]: 2
  with precondition: [B>=0] 


#### Cost of chains of listReverse(A):
* Chain [7]: 8
  with precondition: [] 

* Chain [6]: 13*s(1)+8
  Such that:s(1) =< A

  with precondition: [A>=1] 


Closed-form bounds of listReverse(A): 
-------------------------------------
* Chain [7] with precondition: [] 
    - Lower bound: 8 
    - Complexity: constant
 * Chain [6] with precondition: [A>=1] 
    - Lower bound: 8 
    - Complexity: constant
 
### Partitioned lower bound of listReverse(A): 
* 8 
 if []
Possible lower bounds : [8]
Maximum lower bound complexity: constant

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 15 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 79 ms.

