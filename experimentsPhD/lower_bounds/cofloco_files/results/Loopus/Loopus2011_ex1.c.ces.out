Warning: Ignored call to eval_Loopus2011_ex1_stop/1 in equation eval_Loopus2011_ex1_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Loopus2011_ex1_10/10,eval_Loopus2011_ex1_9/9,eval_Loopus2011_ex1_bb3_in/9,eval_Loopus2011_ex1_bb4_in/9,eval_Loopus2011_ex1_bb5_in/10]
1. recursive : [eval_Loopus2011_ex1_15/6,eval_Loopus2011_ex1_16/6,eval_Loopus2011_ex1__critedge_in/5,eval_Loopus2011_ex1_bb1_in/3,eval_Loopus2011_ex1_bb2_in/3,loop_cont_eval_Loopus2011_ex1_bb3_in/6]
2. non_recursive : [eval_Loopus2011_ex1_bb6_in/1]
3. non_recursive : [loop_cont_eval_Loopus2011_ex1_bb1_in/2]
4. non_recursive : [eval_Loopus2011_ex1_6/2]
5. non_recursive : [eval_Loopus2011_ex1_5/2]
6. non_recursive : [eval_Loopus2011_ex1_4/2]
7. non_recursive : [eval_Loopus2011_ex1_3/2]
8. non_recursive : [eval_Loopus2011_ex1_2/2]
9. non_recursive : [eval_Loopus2011_ex1_1/2]
10. non_recursive : [eval_Loopus2011_ex1_0/2]
11. non_recursive : [eval_Loopus2011_ex1_bb0_in/2]
12. non_recursive : [eval_Loopus2011_ex1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2011_ex1_bb3_in/9
1. SCC is partially evaluated into eval_Loopus2011_ex1_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_Loopus2011_ex1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2011_ex1_bb3_in/9 
* CE 6 is refined into CE [9] 
* CE 8 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_Loopus2011_ex1_bb3_in/9 
* CE 9: eval_Loopus2011_ex1_bb3_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D+1,C>=0,D=C+F+1,D=B+C+1,E=2] 
* CE 10: eval_Loopus2011_ex1_bb3_in(A,B,C,A,D,A,E,C,A) = 0
     [C>=0,A=C+E+1,A=B+C+1,D=2] 
* CE 11: eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) = 1+ eval_Loopus2011_ex1_bb3_in(V_n,G,H,I,J,C,D,E,F)
     [V_n>=V_i_1+1,V_j_0>=0,V_i_1=V_j_0+G+1,V_i_1=V_i_0+V_j_0+1,V_i_1+1=I,V_j_0+1=H,J=2,B=2] 

### Cost equations --> "Loop" of eval_Loopus2011_ex1_bb3_in/9 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_Loopus2011_ex1_bb3_in/9 
* Loop 8: eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F)->  eval_Loopus2011_ex1_bb3_in(V_n,V_i_0',V_j_0',V_i_1',B',C,D,E,F)
                  [V_n>=V_i_1+1,V_j_0>=0,V_i_1=V_j_0+V_i_0'+1,V_i_1=V_i_0+V_j_0+1,V_i_1+1=V_i_1',V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 9: eval_Loopus2011_ex1_bb3_in(A,B,C,D,E,A,F,C,D) [A>=D+1,C>=0,D=C+F+1,D=B+C+1,E=2] 
* Loop 10: eval_Loopus2011_ex1_bb3_in(A,B,C,A,D,A,E,C,A) [C>=0,A=C+E+1,A=B+C+1,D=2] 

### Ranking functions of CR eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) 
* RF of phase [8]: [V_n-V_i_0-V_j_0-1,V_n-V_i_1]

#### Partial ranking functions of CR eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n-V_i_0-V_j_0-1
    V_n-V_i_1


### Resulting Chains:eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Specialization of cost equations eval_Loopus2011_ex1_bb1_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 
* CE 3 is refined into CE [15,16] 


#### Refined cost equations eval_Loopus2011_ex1_bb1_in/3 
* CE 12: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) = 0
     [V_i_0>=V_n,B=3] 
* CE 13: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) = 2+ eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,C,D,E,V_n,V_i_0,F,V_n):[[8],10]+ eval_Loopus2011_ex1_bb1_in(V_n,G,H)
     [V_n>=V_i_0+2,V_n=V_i_0+F+1,V_n=G+1,V_i_0+1=D,H=3,E=2,C=0,B=3] 
* CE 14: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) = 2+ eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,C,D,E,V_n,V_i_0,F,G):[[8],9]+ eval_Loopus2011_ex1_bb1_in(V_n,H,I)
     [V_n>=G+1,G>=V_i_0+2,V_i_0+F+1=G,G=H+1,V_i_0+1=D,I=3,E=2,C=0,B=3] 
* CE 15: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) = 2+ eval_Loopus2011_ex1_bb3_in(V_n,C,D,V_n,E,V_n,F,G,V_n):[10]+ eval_Loopus2011_ex1_bb1_in(V_n,V_n,H)
     [V_n=F+1,V_n=C+1,V_n=V_i_0+1,H=3,G=0,E=2,D=0,B=3] 
* CE 16: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) = 2+ eval_Loopus2011_ex1_bb3_in(V_n,C,D,E,F,V_n,G,H,E):[9]+ eval_Loopus2011_ex1_bb1_in(V_n,E,I)
     [V_n>=E+1,E=G+1,E=C+1,E=V_i_0+1,I=3,H=0,F=2,D=0,B=3] 

### Cost equations --> "Loop" of eval_Loopus2011_ex1_bb1_in/3 
* CEs [14] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [12] --> Loop 15 

#### Loops of eval_Loopus2011_ex1_bb1_in/3 
* Loop 11: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B)->  eval_Loopus2011_ex1_bb1_in(V_n,V_i_0',B')
                  [V_n>=V_i_0'+2,V_i_0'>=V_i_0+1,B'=3,B=3] 
* Loop 12: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B)->  eval_Loopus2011_ex1_bb1_in(V_n,V_i_0',B')
                  [V_n>=V_i_0+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 13: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B)->  eval_Loopus2011_ex1_bb1_in(V_n,V_i_0',B')
                  [V_n>=V_i_0+2,V_n=V_i_0'+1,B'=3,B=3] 
* Loop 14: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B)->  eval_Loopus2011_ex1_bb1_in(V_n,V_n,A')
                  [V_n=V_i_0+1,A'=3,B=3] 
* Loop 15: eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) [V_i_0>=V_n,B=3] 

### Ranking functions of CR eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) 
* RF of phase [11,12]: [V_n-V_i_0-1]

#### Partial ranking functions of CR eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V_n-V_i_0-2
  - RF of loop [12:1]:
    V_n-V_i_0-1


### Resulting Chains:eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) 
* [[11,12],14,15]
* [[11,12],13,14,15]
* [15]
* [14,15]
* [13,14,15]


### Specialization of cost equations eval_Loopus2011_ex1_start/2 
* CE 2 is refined into CE [17,18,19,20,21] 


#### Refined cost equations eval_Loopus2011_ex1_start/2 
* CE 17: eval_Loopus2011_ex1_start(V_n,B) = 1+ eval_Loopus2011_ex1_bb1_in(V_n,C,D):[[11,12],14,15]
     [V_n>=2,D=3,C=0] 
* CE 18: eval_Loopus2011_ex1_start(V_n,B) = 1+ eval_Loopus2011_ex1_bb1_in(V_n,C,D):[[11,12],13,14,15]
     [V_n>=3,D=3,C=0] 
* CE 19: eval_Loopus2011_ex1_start(V_n,B) = 1+ eval_Loopus2011_ex1_bb1_in(V_n,C,D):[15]
     [0>=V_n,D=3,C=0] 
* CE 20: eval_Loopus2011_ex1_start(V_n,B) = 1+ eval_Loopus2011_ex1_bb1_in(C,D,E):[14,15]
     [E=3,D=0,C=1,V_n=1] 
* CE 21: eval_Loopus2011_ex1_start(V_n,B) = 1+ eval_Loopus2011_ex1_bb1_in(V_n,C,D):[13,14,15]
     [V_n>=2,D=3,C=0] 

### Cost equations --> "Loop" of eval_Loopus2011_ex1_start/2 
* CEs [18] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of eval_Loopus2011_ex1_start/2 
* Loop 16: eval_Loopus2011_ex1_start(V_n,B) [V_n>=3] 
* Loop 17: eval_Loopus2011_ex1_start(V_n,B) [V_n>=2] 
* Loop 18: eval_Loopus2011_ex1_start(V_n,B) [V_n>=2] 
* Loop 19: eval_Loopus2011_ex1_start(V_n,B) [0>=V_n] 
* Loop 20: eval_Loopus2011_ex1_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_Loopus2011_ex1_start(V_n,B) 

#### Partial ranking functions of CR eval_Loopus2011_ex1_start(V_n,B) 


### Resulting Chains:eval_Loopus2011_ex1_start(V_n,B) 
* [20]
* [19]
* [18]
* [17]
* [16]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) -> [eval_Loopus2011_ex1_bb3_in(V_n',V_i_0',V_j_0',V_i_1',B',C',D',E',F')] 
1
#### Cost of phase [8]:eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) -> [eval_Loopus2011_ex1_bb3_in(V_n',V_i_0',V_j_0',V_i_1',B',C',D',E',F')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_i_0-V_j_0-1
it(8) =< V_n-V_i_0-V_j_0-V_n'+V_i_0'+V_j_0'
it(8) =< V_n-V_i_1
it(8) =< V_n-V_i_1-V_n'+V_i_1'
it(8) >= V_n-V_i_0-V_j_0-V_n'+V_i_0'+V_j_0'
it(8) >= V_n-V_i_1-V_n'+V_i_1'

#### Cost of phase [8]:eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F) -> [eval_Loopus2011_ex1_bb3_in(V_n',V_i_0',V_j_0',V_i_1',B',C',D',E',F')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_i_0-V_j_0-1
it(8) =< V_n-V_i_0-V_j_0-V_n'+V_i_0'+V_j_0'
it(8) =< V_n-V_i_1
it(8) =< V_n-V_i_1-V_n'+V_i_1'
it(8) >= V_n-V_i_0-V_j_0-V_n'+V_i_0'+V_j_0'
it(8) >= V_n-V_i_1-V_n'+V_i_1'

#### Cost of chains of eval_Loopus2011_ex1_bb3_in(V_n,V_i_0,V_j_0,V_i_1,B,C,D,E,F):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< -V_j_0+E
it(8) >= V_n-V_i_0-V_j_0-1

  with precondition: [B=2,V_n=C,V_i_0=D,V_n=F,V_n=V_i_0+E+1,V_i_0+V_j_0+1=V_i_1,V_i_1>=V_i_0+1,V_n>=V_i_1+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V_j_0+E
it(8) >= -V_i_0-V_j_0+F-1

  with precondition: [B=2,V_n=C,V_i_0=D,V_i_0+V_j_0+1=V_i_1,V_i_0+E+1=F,V_i_1>=V_i_0+1,V_n>=V_i_0+E+2,V_i_0+E>=V_i_1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_1=V_n,V_i_1=C,V_j_0=E,V_i_1=F,V_i_1=V_i_0+V_j_0+1,V_i_1=V_j_0+D+1,V_j_0>=0] 

* Chain [9]: 0
  with precondition: [B=2,V_n=C,V_j_0=E,V_i_1=F,V_i_0+V_j_0+1=V_i_1,V_j_0+D+1=V_i_1,V_j_0>=0,V_n>=V_i_1+1] 


#### Cost of loops [11,12] 

 * loop 11:eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) -> [eval_Loopus2011_ex1_bb1_in(V_n',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< -V_i_0+V_i_0'
s(2) >= -V_i_0+V_i_0'

 * loop 12:eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) -> [eval_Loopus2011_ex1_bb1_in(V_n',V_i_0',B')] 
2
#### Cost of phase [11,12]:eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) -> [eval_Loopus2011_ex1_bb1_in(V_n',V_i_0',B')] 
2*it(11)+2*it(12)+1*s(3)+0
  Such that:it(11)+it(12) =< V_n-V_i_0-1
aux(2) =< V_n-V_i_0-2
aux(3) =< V_n-V_i_0-V_n'+V_i_0'
it(11)+it(12) =< aux(2)
it(12)+s(3) =< aux(2)
it(11)+it(12) =< aux(3)
it(12)+s(3) =< aux(3)
it(12)+s(3) >= V_n-V_i_0-V_n'+V_i_0'
it(12)+s(3) >= -V_i_0+V_i_0'

#### Cost of phase [11,12]:eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B) -> [eval_Loopus2011_ex1_bb1_in(V_n',V_i_0',B')] 
2*it(11)+2*it(12)+1*s(3)+0
  Such that:it(11)+it(12) =< V_n-V_i_0-1
aux(2) =< V_n-V_i_0-2
aux(3) =< V_n-V_i_0-V_n'+V_i_0'
it(11)+it(12) =< aux(2)
it(12)+s(3) =< aux(2)
it(11)+it(12) =< aux(3)
it(12)+s(3) =< aux(3)
it(12)+s(3) >= V_n-V_i_0-V_n'+V_i_0'
it(12)+s(3) >= -V_i_0+V_i_0'

#### Cost of chains of eval_Loopus2011_ex1_bb1_in(V_n,V_i_0,B):
* Chain [[11,12],14,15]: 2*it(11)+2*it(12)+1*s(3)+2
  Such that:aux(2) =< V_n-V_i_0-2
aux(4) =< V_n-V_i_0-1
it(11)+it(12) =< aux(4)
it(11)+it(12) =< aux(2)
it(12)+s(3) =< aux(2)
it(12)+s(3) =< aux(4)
s(3)+it(12) >= V_n-V_i_0-1

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[11,12],13,14,15]: 2*it(11)+2*it(12)+1*s(3)+1*s(4)+4
  Such that:aux(2) =< V_n-V_i_0-2
aux(5) =< V_n-V_i_0-1
aux(3)+s(4) =< aux(5)
it(11)+it(12) =< aux(5)
it(11)+it(12) =< aux(2)
it(12)+s(3) =< aux(2)
it(11)+it(12) =< aux(3)
it(12)+s(3) =< aux(3)
s(3)+it(12)+s(4) >= V_n-V_i_0-1
aux(6) >= 1
it(12)+s(3) >= aux(6)
s(4) >= aux(6)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+3] 

* Chain [15]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V_n] 

* Chain [14,15]: 2
  with precondition: [B=3,V_i_0+1=V_n,V_i_0>=0] 

* Chain [13,14,15]: 1*s(4)+4
  Such that:s(4) =< V_n-V_i_0-1
s(4) >= V_n-V_i_0-1

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 


#### Cost of chains of eval_Loopus2011_ex1_start(V_n,B):
* Chain [20]: 3
  with precondition: [V_n=1] 

* Chain [19]: 1
  with precondition: [0>=V_n] 

* Chain [18]: 1*s(7)+2*s(8)+2*s(9)+3
  Such that:s(5) =< V_n-2
s(6) =< V_n-1
s(8)+s(9) =< s(6)
s(8)+s(9) =< s(5)
s(7)+s(8) =< s(5)
s(7)+s(8) =< s(6)
s(8)+s(7) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [17]: 1*s(10)+5
  Such that:s(10) =< V_n-1
s(10) >= V_n-1

  with precondition: [V_n>=2] 

* Chain [16]: 1*s(13)+2*s(14)+1*s(15)+2*s(18)+5
  Such that:s(11) =< V_n-2
s(12) =< V_n-1
s(15)+s(17) =< s(12)
s(14)+s(18) =< s(12)
s(14)+s(18) =< s(11)
s(13)+s(14) =< s(11)
s(14)+s(18) =< s(17)
s(13)+s(14) =< s(17)
s(16) >= 1
s(15)+s(14)+s(13) >= V_n-1
s(13)+s(14) >= s(16)
s(15) >= s(16)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_Loopus2011_ex1_start(V_n,B): 
-------------------------------------
* Chain [20] with precondition: [V_n=1] 
    - Lower bound: 3 
    - Complexity: constant
 * Chain [19] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [18] with precondition: [V_n>=2] 
    - Lower bound: V_n+2 
    - Complexity: n
 * Chain [17] with precondition: [V_n>=2] 
    - Lower bound: V_n+4 
    - Complexity: n
 * Chain [16] with precondition: [V_n>=3] 
    - Lower bound: V_n+4 
    - Complexity: n
 
### Partitioned lower bound of eval_Loopus2011_ex1_start(V_n,B): 
* 1 
 if [0>=V_n]
* 3 
 if [V_n=1]
* V_n+2 
 if [V_n>=2]
Possible lower bounds : [1,3,V_n+2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 94 ms.
* Invariants computed in 144 ms.
   - Backward Invariants 73 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 157 ms.
* Termination proved in 26 ms.
* Upper bounds computed in 280 ms.
   - Equation cost structures 50 ms.
   - Phase cost structures 87 ms.
   - Chain cost structures 111 ms.
   - Solving cost expressions 8 ms.
* Total analysis performed in 800 ms.

