Warning: Ignored call to eval_Loopus2014_ex2_stop/1 in equation eval_Loopus2014_ex2_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Loopus2014_ex2_12/8,eval_Loopus2014_ex2_13/9,eval_Loopus2014_ex2_bb3_in/8,eval_Loopus2014_ex2_bb4_in/8,eval_Loopus2014_ex2_bb5_in/9]
1. recursive : [eval_Loopus2014_ex2_8/4,eval_Loopus2014_ex2_9/5,eval_Loopus2014_ex2__critedge_in/3,eval_Loopus2014_ex2_bb1_in/3,eval_Loopus2014_ex2_bb2_in/5,loop_cont_eval_Loopus2014_ex2_bb3_in/4]
2. non_recursive : [eval_Loopus2014_ex2_bb6_in/1]
3. non_recursive : [loop_cont_eval_Loopus2014_ex2__critedge_in/2]
4. non_recursive : [eval_Loopus2014_ex2_6/2]
5. non_recursive : [eval_Loopus2014_ex2_5/2]
6. non_recursive : [eval_Loopus2014_ex2_4/2]
7. non_recursive : [eval_Loopus2014_ex2_3/2]
8. non_recursive : [eval_Loopus2014_ex2_2/2]
9. non_recursive : [eval_Loopus2014_ex2_1/2]
10. non_recursive : [eval_Loopus2014_ex2_0/2]
11. non_recursive : [eval_Loopus2014_ex2_bb0_in/2]
12. non_recursive : [eval_Loopus2014_ex2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2014_ex2_bb3_in/8
1. SCC is partially evaluated into eval_Loopus2014_ex2__critedge_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_Loopus2014_ex2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2014_ex2_bb3_in/8 
* CE 6 is refined into CE [9] 
* CE 8 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_Loopus2014_ex2_bb3_in/8 
* CE 9: eval_Loopus2014_ex2_bb3_in(A,B,C,D,E,F,C,E) = 0
     [B>=E,E>=1,C>=0,0>=D,C+1=A,F=2] 
* CE 10: eval_Loopus2014_ex2_bb3_in(A,B,C,D,E,F,C,E) = 0
     [B>=E,C>=0,0>=E,0>=D,C+1=A,F=2] 
* CE 11: eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) = 1+ eval_Loopus2014_ex2_bb3_in(E,V_n_0,V_1,V_2,F,G,C,D)
     [V_n_0>=V_n_1,V_n_1>=1,V_1>=0,0>=V_2,V_n_1=F+1,V_1+1=E,V_1+1=V_i_0,G=2,B=2] 

### Cost equations --> "Loop" of eval_Loopus2014_ex2_bb3_in/8 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_Loopus2014_ex2_bb3_in/8 
* Loop 8: eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D)->  eval_Loopus2014_ex2_bb3_in(V_i_0',V_n_0,V_1,V_2,V_n_1',B',C,D)
                  [V_n_0>=V_n_1,V_n_1>=1,V_1>=0,0>=V_2,V_n_1=V_n_1'+1,V_1+1=V_i_0',V_1+1=V_i_0,B'=2,B=2] 
* Loop 9: eval_Loopus2014_ex2_bb3_in(A,B,C,D,E,F,C,E) [B>=E,E>=1,C>=0,0>=D,C+1=A,F=2] 
* Loop 10: eval_Loopus2014_ex2_bb3_in(A,B,C,D,E,F,C,E) [B>=E,C>=0,0>=E,0>=D,C+1=A,F=2] 

### Ranking functions of CR eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* RF of phase [8]: [V_n_1]

#### Partial ranking functions of CR eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n_1


### Resulting Chains:eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Specialization of cost equations eval_Loopus2014_ex2__critedge_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14,15,16] 
* CE 3 is refined into CE [17] 


#### Refined cost equations eval_Loopus2014_ex2__critedge_in/3 
* CE 12: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 0
     [0>=V_i_0,B=3] 
* CE 13: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 2+ eval_Loopus2014_ex2_bb3_in(C,V_n_0,D,E,V_n_0,F,D,G):[[8],10]+ eval_Loopus2014_ex2__critedge_in(D,H,I)
     [V_n_0>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,I=3,H=0,G=0,F=2,B=3] 
* CE 14: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 2+ eval_Loopus2014_ex2_bb3_in(C,V_n_0,D,E,V_n_0,F,D,G):[[8],9]+ eval_Loopus2014_ex2__critedge_in(D,G,H)
     [V_n_0>=G+1,G>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,H=3,F=2,B=3] 
* CE 15: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 2+ eval_Loopus2014_ex2_bb3_in(C,V_n_0,D,E,V_n_0,F,D,V_n_0):[10]+ eval_Loopus2014_ex2__critedge_in(D,V_n_0,G)
     [D>=0,0>=V_n_0,0>=E,D+1=C,D+1=V_i_0,G=3,F=2,B=3] 
* CE 16: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 2+ eval_Loopus2014_ex2_bb3_in(C,V_n_0,D,E,V_n_0,F,D,V_n_0):[9]+ eval_Loopus2014_ex2__critedge_in(D,V_n_0,G)
     [V_n_0>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,G=3,F=2,B=3] 
* CE 17: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) = 1+ eval_Loopus2014_ex2__critedge_in(C,D,E)
     [V_i_0>=1,V_i_0=C+1,D=V_n_0+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_Loopus2014_ex2__critedge_in/3 
* CEs [17] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [13] --> Loop 15 
* CEs [12] --> Loop 16 

#### Loops of eval_Loopus2014_ex2__critedge_in/3 
* Loop 11: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B)->  eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')
                  [V_i_0>=1,V_n_0+1=V_n_0',V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 12: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B)->  eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')
                  [V_n_0>=V_n_0'+1,V_n_0'>=1,V_i_0'>=0,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 13: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B)->  eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0,B')
                  [V_i_0'>=0,V_n_0>=1,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 14: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B)->  eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0,B')
                  [V_i_0'>=0,0>=V_n_0,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 15: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B)->  eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')
                  [V_i_0'>=0,V_n_0>=1,V_i_0'+1=V_i_0,B'=3,V_n_0'=0,B=3] 
* Loop 16: eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) [0>=V_i_0,B=3] 

### Ranking functions of CR eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) 
* RF of phase [11,12,13,14,15]: [V_i_0]

#### Partial ranking functions of CR eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) 
* Partial RF of phase [11,12,13,14,15]:
  - RF of loop [11:1,12:1,13:1,14:1,15:1]:
    V_i_0
  - RF of loop [12:1]:
    V_n_0-1 depends on loops [11:1] 
  - RF of loop [15:1]:
    V_n_0 depends on loops [11:1] 


### Resulting Chains:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) 
* [[11,12,13,14,15],16]
* [16]


### Specialization of cost equations eval_Loopus2014_ex2_start/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_Loopus2014_ex2_start/2 
* CE 18: eval_Loopus2014_ex2_start(V_m,B) = 1+ eval_Loopus2014_ex2__critedge_in(V_m,C,D):[[11,12,13,14,15],16]
     [V_m>=1,D=3,C=0] 
* CE 19: eval_Loopus2014_ex2_start(V_m,B) = 1+ eval_Loopus2014_ex2__critedge_in(V_m,C,D):[16]
     [0>=V_m,D=3,C=0] 

### Cost equations --> "Loop" of eval_Loopus2014_ex2_start/2 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_Loopus2014_ex2_start/2 
* Loop 17: eval_Loopus2014_ex2_start(V_m,B) [V_m>=1] 
* Loop 18: eval_Loopus2014_ex2_start(V_m,B) [0>=V_m] 

### Ranking functions of CR eval_Loopus2014_ex2_start(V_m,B) 

#### Partial ranking functions of CR eval_Loopus2014_ex2_start(V_m,B) 


### Resulting Chains:eval_Loopus2014_ex2_start(V_m,B) 
* [18]
* [17]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_Loopus2014_ex2_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1
#### Cost of phase [8]:eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_Loopus2014_ex2_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V_n_1
it(8) =< V_n_1-V_n_1'
it(8) >= V_n_1-V_n_1'

#### Cost of phase [8]:eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_Loopus2014_ex2_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V_n_1
it(8) =< V_n_1-V_n_1'
it(8) >= V_n_1-V_n_1'

#### Cost of chains of eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_n_1
it(8) >= V_n_1

  with precondition: [B=2,D=0,V_i_0=V_1+1,V_i_0=C+1,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_n_1-D
it(8) >= V_n_1-D

  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,0>=V_2,V_i_0>=1,D>=1,V_n_0>=V_n_1,V_n_1>=D+1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,V_n_1=D,0>=V_2,0>=V_n_1,V_i_0>=1,V_n_0>=V_n_1] 

* Chain [9]: 0
  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,V_n_1=D,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 


#### Cost of loops [11,12,13,14,15] 

 * loop 11:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
1
 * loop 12:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_n_0-V_n_0'
s(2) >= V_n_0-V_n_0'

 * loop 13:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
2
 * loop 14:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
2
 * loop 15:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_n_0
s(4) >= V_n_0

#### Cost of phase [11,12,13,14,15]:eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) -> [eval_Loopus2014_ex2__critedge_in(V_i_0',V_n_0',B')] 
1*it(11)+2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*s(5)+1*s(6)+0
  Such that:it(11)+it(12)+it(13)+it(14)+it(15) =< V_i_0
aux(8) =< V_i_0+V_n_0-2
it(11)+it(12)+it(13)+it(14)+it(15) =< V_i_0-V_i_0'
aux(20) =< -V_n_0+V_n_0'
aux(21) =< V_n_0-1
aux(22) =< V_n_0
aux(23) =< V_n_0-V_n_0'
aux(19) =< aux(8)+1
s(6) =< it(11)+aux(23)
s(6) =< it(11)+aux(22)
it(15) =< it(11)+aux(23)
it(15) =< it(11)+aux(22)
it(15)+s(5) =< it(11)+aux(23)
it(15)+s(5) =< it(11)+aux(21)
it(12)+it(15) =< it(11)+aux(23)
it(12)+it(15) =< it(11)+aux(21)
s(6) =< it(15)*aux(19)
s(5) =< it(12)*aux(8)
it(11)+it(12)+it(13)+it(14)+it(15) >= V_i_0-V_i_0'
aux(12) >= V_n_0
aux(24) >= 1
aux(25) >= V_n_0-V_n_0'
aux(24) >= aux(24)
aux(25) >= aux(25)
aux(11) >= min([aux(12),aux(24),aux(14)])
s(5)+s(6) >= it(11)+aux(25)-aux(20)
s(5) >= it(12)*aux(24)
s(6) >= it(15)*aux(11)

#### Cost of chains of eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B):
* Chain [[11,12,13,14,15],16]: 1*it(11)+2*it(12)+2*it(13)+2*it(14)+2*it(15)+1*s(5)+1*s(6)+0
  Such that:aux(8) =< V_i_0+V_n_0-2
aux(21) =< V_n_0-1
aux(26) =< V_i_0
aux(27) =< V_n_0
it(11)+it(12)+it(13)+it(14)+it(15) =< aux(26)
aux(19) =< aux(8)+1
s(6) =< it(11)+aux(27)
it(15) =< it(11)+aux(27)
it(15)+s(5) =< it(11)+aux(27)
it(15)+s(5) =< it(11)+aux(21)
it(12)+it(15) =< it(11)+aux(27)
it(12)+it(15) =< it(11)+aux(21)
s(6) =< it(15)*aux(19)
s(5) =< it(12)*aux(8)
it(15)+it(14)+it(13)+it(12)+it(11) >= V_i_0

  with precondition: [B=3,V_i_0>=1,V_n_0>=0] 

* Chain [16]: 0
  with precondition: [B=3,0>=V_i_0,V_n_0>=0] 


#### Cost of chains of eval_Loopus2014_ex2_start(V_m,B):
* Chain [18]: 1
  with precondition: [0>=V_m] 

* Chain [17]: 2*s(11)+2*s(12)+2*s(13)+2*s(14)+1*s(15)+1*s(17)+1*s(18)+1
  Such that:s(7) =< V_m-2
s(9) =< V_m
s(11)+s(12)+s(13)+s(14)+s(15) =< s(9)
s(16) =< s(7)+1
s(17) =< s(15)
s(11)+s(18) =< s(15)
s(11)+s(18) =< s(15)
s(11)+s(14) =< s(15)
s(11)+s(14) =< s(15)
s(17) =< s(11)*s(16)
s(18) =< s(14)*s(7)
s(15)+s(14)+s(13)+s(12)+s(11) >= V_m

  with precondition: [V_m>=1] 


Closed-form bounds of eval_Loopus2014_ex2_start(V_m,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_m] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [17] with precondition: [V_m>=1] 
    - Lower bound: V_m+1 
    - Complexity: n
 
### Partitioned lower bound of eval_Loopus2014_ex2_start(V_m,B): 
* 1 
 if [0>=V_m]
* V_m+1 
 if [V_m>=1]
Possible lower bounds : [1,V_m+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 66 ms.
* Invariants computed in 122 ms.
   - Backward Invariants 58 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 131 ms.
* Termination proved in 36 ms.
* Upper bounds computed in 254 ms.
   - Equation cost structures 53 ms.
   - Phase cost structures 153 ms.
   - Chain cost structures 69 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 699 ms.

