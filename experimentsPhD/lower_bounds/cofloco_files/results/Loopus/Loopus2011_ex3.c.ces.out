Warning: Ignored call to eval_Loopus2011_ex3_stop/1 in equation eval_Loopus2011_ex3_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Loopus2011_ex3_bb1_in/3,eval_Loopus2011_ex3_bb2_in/3]
1. non_recursive : [eval_Loopus2011_ex3_bb3_in/1]
2. non_recursive : [loop_cont_eval_Loopus2011_ex3_bb1_in/2]
3. non_recursive : [eval_Loopus2011_ex3_4/3]
4. non_recursive : [eval_Loopus2011_ex3_3/3]
5. non_recursive : [eval_Loopus2011_ex3_2/3]
6. non_recursive : [eval_Loopus2011_ex3_1/3]
7. non_recursive : [eval_Loopus2011_ex3_0/3]
8. non_recursive : [eval_Loopus2011_ex3_bb0_in/3]
9. non_recursive : [eval_Loopus2011_ex3_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2011_ex3_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_Loopus2011_ex3_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2011_ex3_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations eval_Loopus2011_ex3_bb1_in/3 
* CE 8: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) = 0
     [V__0>=255,B=2] 
* CE 9: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) = 0
     [0>=V__0,B=2] 
* CE 10: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,C,D)
     [V__0>=1,V_b>=1,254>=V__0,V__0+1=C,D=2,B=2] 
* CE 11: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,C,D)
     [V__0>=1,254>=V__0,0>=V_b+1,V__0+1=C,D=2,B=2] 
* CE 12: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) = 1+ eval_Loopus2011_ex3_bb1_in(C,D,E)
     [V__0>=1,254>=V__0,V__0=D+1,E=2,C=0,B=2,V_b=0] 

### Cost equations --> "Loop" of eval_Loopus2011_ex3_bb1_in/3 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [8] --> Loop 10 
* CEs [9] --> Loop 11 

#### Loops of eval_Loopus2011_ex3_bb1_in/3 
* Loop 7: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B)->  eval_Loopus2011_ex3_bb1_in(V_b,V__0',B')
                  [V__0>=1,V_b>=1,254>=V__0,V__0+1=V__0',B'=2,B=2] 
* Loop 8: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B)->  eval_Loopus2011_ex3_bb1_in(V_b,V__0',B')
                  [V__0>=1,254>=V__0,0>=V_b+1,V__0+1=V__0',B'=2,B=2] 
* Loop 9: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B)->  eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')
                  [V__0>=1,254>=V__0,V__0=V__0'+1,B'=2,V_b'=0,B=2,V_b=0] 
* Loop 10: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) [V__0>=255,B=2] 
* Loop 11: eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) [0>=V__0,B=2] 

### Ranking functions of CR eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) 
* RF of phase [7]: [-V__0+255]
* RF of phase [8]: [-V__0+255]
* RF of phase [9]: [V__0]

#### Partial ranking functions of CR eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V__0+255
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -V__0+255
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__0


### Resulting Chains:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) 
* [[9],11]
* [[8],10]
* [[7],10]
* [11]
* [10]


### Specialization of cost equations eval_Loopus2011_ex3_start/3 
* CE 2 is refined into CE [13,14,15,16,17] 


#### Refined cost equations eval_Loopus2011_ex3_start/3 
* CE 13: eval_Loopus2011_ex3_start(V_x,V_b,B) = 1+ eval_Loopus2011_ex3_bb1_in(C,V_x,D):[[9],11]
     [V_x>=1,254>=V_x,D=2,C=0,V_b=0] 
* CE 14: eval_Loopus2011_ex3_start(V_x,V_b,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,V_x,C):[[8],10]
     [V_x>=1,254>=V_x,0>=V_b+1,C=2] 
* CE 15: eval_Loopus2011_ex3_start(V_x,V_b,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,V_x,C):[[7],10]
     [V_x>=1,V_b>=1,254>=V_x,C=2] 
* CE 16: eval_Loopus2011_ex3_start(V_x,V_b,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,V_x,C):[11]
     [0>=V_x,C=2] 
* CE 17: eval_Loopus2011_ex3_start(V_x,V_b,B) = 1+ eval_Loopus2011_ex3_bb1_in(V_b,V_x,C):[10]
     [V_x>=255,C=2] 

### Cost equations --> "Loop" of eval_Loopus2011_ex3_start/3 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [13] --> Loop 16 

#### Loops of eval_Loopus2011_ex3_start/3 
* Loop 12: eval_Loopus2011_ex3_start(V_x,V_b,B) [V_x>=255] 
* Loop 13: eval_Loopus2011_ex3_start(V_x,V_b,B) [0>=V_x] 
* Loop 14: eval_Loopus2011_ex3_start(V_x,V_b,B) [V_b>=1,V_x>=1,254>=V_x] 
* Loop 15: eval_Loopus2011_ex3_start(V_x,V_b,B) [V_x>=1,0>=V_b+1,254>=V_x] 
* Loop 16: eval_Loopus2011_ex3_start(V_x,V_b,B) [V_x>=1,254>=V_x,V_b=0] 

### Ranking functions of CR eval_Loopus2011_ex3_start(V_x,V_b,B) 

#### Partial ranking functions of CR eval_Loopus2011_ex3_start(V_x,V_b,B) 


### Resulting Chains:eval_Loopus2011_ex3_start(V_x,V_b,B) 
* [16]
* [15]
* [14]
* [13]
* [12]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1
#### Cost of phase [9]:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1*it(9)+0
  Such that:it(9) =< V__0
it(9) =< V__0-V__0'
it(9) >= V__0-V__0'

#### Cost of loops [8] 

 * loop 8:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1
#### Cost of phase [8]:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1*it(8)+0
  Such that:it(8) =< -V__0+255
it(8) =< -V__0+V__0'
it(8) >= -V__0+V__0'

#### Cost of loops [7] 

 * loop 7:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1
#### Cost of phase [7]:eval_Loopus2011_ex3_bb1_in(V_b,V__0,B) -> [eval_Loopus2011_ex3_bb1_in(V_b',V__0',B')] 
1*it(7)+0
  Such that:it(7) =< -V__0+255
it(7) =< -V__0+V__0'
it(7) >= -V__0+V__0'

#### Cost of chains of eval_Loopus2011_ex3_bb1_in(V_b,V__0,B):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V__0
it(9) >= V__0

  with precondition: [V_b=0,B=2,254>=V__0,V__0>=1] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< -V__0+255
it(8) >= -V__0+255

  with precondition: [B=2,0>=V_b+1,254>=V__0,V__0>=1] 

* Chain [[7],10]: 1*it(7)+0
  Such that:it(7) =< -V__0+255
it(7) >= -V__0+255

  with precondition: [B=2,254>=V__0,V_b>=1,V__0>=1] 

* Chain [11]: 0
  with precondition: [B=2,0>=V__0] 

* Chain [10]: 0
  with precondition: [B=2,V__0>=255] 


#### Cost of chains of eval_Loopus2011_ex3_start(V_x,V_b,B):
* Chain [16]: 1*s(1)+1
  Such that:s(1) =< V_x
s(1) >= V_x

  with precondition: [V_b=0,254>=V_x,V_x>=1] 

* Chain [15]: 1*s(2)+1
  Such that:s(2) =< -V_x+255
s(2) >= -V_x+255

  with precondition: [254>=V_x,0>=V_b+1,V_x>=1] 

* Chain [14]: 1*s(3)+1
  Such that:s(3) =< -V_x+255
s(3) >= -V_x+255

  with precondition: [254>=V_x,V_x>=1,V_b>=1] 

* Chain [13]: 1
  with precondition: [0>=V_x] 

* Chain [12]: 1
  with precondition: [V_x>=255] 


Closed-form bounds of eval_Loopus2011_ex3_start(V_x,V_b,B): 
-------------------------------------
* Chain [16] with precondition: [V_b=0,254>=V_x,V_x>=1] 
    - Lower bound: V_x+1 
    - Complexity: n
 * Chain [15] with precondition: [254>=V_x,0>=V_b+1,V_x>=1] 
    - Lower bound: -V_x+256 
    - Complexity: n
 * Chain [14] with precondition: [254>=V_x,V_x>=1,V_b>=1] 
    - Lower bound: -V_x+256 
    - Complexity: n
 * Chain [13] with precondition: [0>=V_x] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [12] with precondition: [V_x>=255] 
    - Lower bound: 1 
    - Complexity: constant
 
### Partitioned lower bound of eval_Loopus2011_ex3_start(V_x,V_b,B): 
* 1 
 if [V_x>=255]
 or [0>=V_x]
* V_x+1 
 if [V_b=0,254>=V_x,V_x>=1]
* -V_x+256 
 if [254>=V_x,V_x>=1,V_b>=1]
 or [254>=V_x,0>=V_b+1,V_x>=1]
Possible lower bounds : [1,V_x+1,-V_x+256]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 30 ms.
* Invariants computed in 69 ms.
   - Backward Invariants 36 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 74 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 91 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 27 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 333 ms.

