Warning: Ignored call to eval_Loopus2015_ex2_stop/1 in equation eval_Loopus2015_ex2_16/1 
Warning: Ignored call to eval_Loopus2015_ex2_stop/1 in equation eval_Loopus2015_ex2_18/1 
Warning: Ignored call to eval_Loopus2015_ex2_stop/1 in equation eval_Loopus2015_ex2_20/1 
Warning: Ignored call to eval_Loopus2015_ex2_stop/1 in equation eval_Loopus2015_ex2_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive : [eval_Loopus2015_ex2_20/1]
1. non_recursive : [eval_Loopus2015_ex2_19/1]
2. non_recursive : [eval_Loopus2015_ex2_bb11_in/1]
3. non_recursive : [eval_Loopus2015_ex2_18/1]
4. non_recursive : [eval_Loopus2015_ex2_17/1]
5. non_recursive : [eval_Loopus2015_ex2_bb10_in/1]
6. recursive : [eval_Loopus2015_ex2_bb4_in/4,eval_Loopus2015_ex2_bb5_in/4]
7. recursive : [eval_Loopus2015_ex2_bb6_in/2,eval_Loopus2015_ex2_bb7_in/2]
8. non_recursive : [eval_Loopus2015_ex2_bb8_in/1]
9. non_recursive : [loop_cont_eval_Loopus2015_ex2_bb6_in/2]
10. non_recursive : [loop_cont_eval_Loopus2015_ex2_bb4_in/3]
11. non_recursive : [eval_Loopus2015_ex2_9/3]
12. non_recursive : [eval_Loopus2015_ex2_8/3]
13. non_recursive : [eval_Loopus2015_ex2_7/3]
14. non_recursive : [eval_Loopus2015_ex2_6/5]
15. non_recursive : [eval_Loopus2015_ex2_5/4]
16. non_recursive : [eval_Loopus2015_ex2_4/4]
17. non_recursive : [eval_Loopus2015_ex2_bb3_in/4]
18. non_recursive : [eval_Loopus2015_ex2_16/1]
19. non_recursive : [eval_Loopus2015_ex2_15/1]
20. non_recursive : [eval_Loopus2015_ex2_bb9_in/1]
21. non_recursive : [eval_Loopus2015_ex2_bb2_in/4]
22. non_recursive : [eval_Loopus2015_ex2_bb1_in/4]
23. non_recursive : [eval_Loopus2015_ex2_3/4]
24. non_recursive : [eval_Loopus2015_ex2_2/4]
25. non_recursive : [eval_Loopus2015_ex2_1/4]
26. non_recursive : [eval_Loopus2015_ex2_0/4]
27. non_recursive : [eval_Loopus2015_ex2_bb0_in/4]
28. non_recursive : [eval_Loopus2015_ex2_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_Loopus2015_ex2_bb4_in/4
7. SCC is partially evaluated into eval_Loopus2015_ex2_bb6_in/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_Loopus2015_ex2_6/5
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_Loopus2015_ex2_bb2_in/4
22. SCC is partially evaluated into eval_Loopus2015_ex2_bb1_in/4
23. SCC is partially evaluated into eval_Loopus2015_ex2_3/4
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_Loopus2015_ex2_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2015_ex2_bb4_in/4 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations eval_Loopus2015_ex2_bb4_in/4 
* CE 15: eval_Loopus2015_ex2_bb4_in(A,B,C,A) = 0
     [A>=0,C=3,B=0] 
* CE 16: eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) = 1+ eval_Loopus2015_ex2_bb4_in(D,E,F,C)
     [V_y_0>=1,V_x_1>=0,V_y_0=E+1,V_x_1+2=D,F=3,B=3] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_bb4_in/4 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_Loopus2015_ex2_bb4_in/4 
* Loop 14: eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C)->  eval_Loopus2015_ex2_bb4_in(V_x_1',V_y_0',B',C)
                  [V_y_0>=1,V_x_1>=0,V_y_0=V_y_0'+1,V_x_1+2=V_x_1',B'=3,B=3] 
* Loop 15: eval_Loopus2015_ex2_bb4_in(A,B,C,A) [A>=0,C=3,B=0] 

### Ranking functions of CR eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) 
* RF of phase [14]: [V_y_0]

#### Partial ranking functions of CR eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_y_0


### Resulting Chains:eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) 
* [[14],15]
* [15]


### Specialization of cost equations eval_Loopus2015_ex2_bb6_in/2 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


#### Refined cost equations eval_Loopus2015_ex2_bb6_in/2 
* CE 17: eval_Loopus2015_ex2_bb6_in(V_z_0,B) = 0
     [0>=V_z_0,B=2] 
* CE 18: eval_Loopus2015_ex2_bb6_in(V_z_0,B) = 1+ eval_Loopus2015_ex2_bb6_in(C,D)
     [V_z_0>=1,V_z_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_bb6_in/2 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_Loopus2015_ex2_bb6_in/2 
* Loop 16: eval_Loopus2015_ex2_bb6_in(V_z_0,B)->  eval_Loopus2015_ex2_bb6_in(V_z_0',B')
                  [V_z_0>=1,V_z_0=V_z_0'+1,B'=2,B=2] 
* Loop 17: eval_Loopus2015_ex2_bb6_in(V_z_0,B) [0>=V_z_0,B=2] 

### Ranking functions of CR eval_Loopus2015_ex2_bb6_in(V_z_0,B) 
* RF of phase [16]: [V_z_0]

#### Partial ranking functions of CR eval_Loopus2015_ex2_bb6_in(V_z_0,B) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_z_0


### Resulting Chains:eval_Loopus2015_ex2_bb6_in(V_z_0,B) 
* [[16],17]
* [17]


### Specialization of cost equations eval_Loopus2015_ex2_6/5 
* CE 9 is refined into CE [19,20,21] 
* CE 10 is refined into CE [22,23,24] 


#### Refined cost equations eval_Loopus2015_ex2_6/5 
* CE 19: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(V_m1,C,D,E):[[14],15]+ eval_Loopus2015_ex2_bb6_in(E,F):[[16],17]
     [E>=V_m1+2,V_m1>=0,V_3>=1,V_m2>=0,E=2*C+V_m1,E=2*V_n+V_m1,F=2,D=3] 
* CE 20: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(V_m1,C,D,V_m1):[15]+ eval_Loopus2015_ex2_bb6_in(V_m1,E):[[16],17]
     [V_m1>=1,V_3>=1,V_m2>=0,E=2,D=3,C=0,V_n=0] 
* CE 21: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(C,D,E,F):[15]+ eval_Loopus2015_ex2_bb6_in(G,H):[17]
     [V_3>=1,V_m2>=0,H=2,G=0,F=0,E=3,D=0,C=0,V_m1=0,V_n=0] 
* CE 22: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(V_m2,C,D,E):[[14],15]+ eval_Loopus2015_ex2_bb6_in(E,F):[[16],17]
     [E>=V_m2+2,V_m2>=0,V_m1>=0,0>=V_3,E=2*C+V_m2,E=2*V_n+V_m2,F=2,D=3] 
* CE 23: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(V_m2,C,D,V_m2):[15]+ eval_Loopus2015_ex2_bb6_in(V_m2,E):[[16],17]
     [V_m2>=1,V_m1>=0,0>=V_3,E=2,D=3,C=0,V_n=0] 
* CE 24: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) = 2+ eval_Loopus2015_ex2_bb4_in(C,D,E,F):[15]+ eval_Loopus2015_ex2_bb6_in(G,H):[17]
     [V_m1>=0,0>=V_3,H=2,G=0,F=0,E=3,D=0,C=0,V_m2=0,V_n=0] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_6/5 
* CEs [19] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [21] --> Loop 23 

#### Loops of eval_Loopus2015_ex2_6/5 
* Loop 18: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 19: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_m2>=0,V_m1>=0,V_n>=1,0>=V_3] 
* Loop 20: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1>=1,V_n=0] 
* Loop 21: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_m2>=1,V_m1>=0,0>=V_3,V_n=0] 
* Loop 22: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_m1>=0,0>=V_3,V_m2=0,V_n=0] 
* Loop 23: eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) 


### Resulting Chains:eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B) 
* [23]
* [22]
* [21]
* [20]
* [19]
* [18]


### Specialization of cost equations eval_Loopus2015_ex2_bb2_in/4 
* CE 7 is refined into CE [25,26,27,28,29,30] 
* CE 8 is refined into CE [31] 


#### Refined cost equations eval_Loopus2015_ex2_bb2_in/4 
* CE 25: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(C,D,V_m2,E,B):[23]
     [E>=1,V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 26: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(C,V_m1,D,E,B):[22]
     [V_m1>=0,0>=E,D=0,C=0,V_m2=0,V_n=0] 
* CE 27: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(C,V_m1,V_m2,D,B):[21]
     [V_m2>=1,V_m1>=0,0>=D,C=0,V_n=0] 
* CE 28: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(C,V_m1,V_m2,D,B):[20]
     [D>=1,V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 29: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,C,B):[19]
     [V_m2>=0,V_m1>=0,V_n>=1,0>=C] 
* CE 30: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,C,B):[18]
     [C>=1,V_m2>=0,V_m1>=0,V_n>=1] 
* CE 31: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) = 0
     [V_m1>=0,V_n>=0,0>=V_m2+1] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_bb2_in/4 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [25] --> Loop 30 

#### Loops of eval_Loopus2015_ex2_bb2_in/4 
* Loop 24: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 25: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 26: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 27: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 28: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 29: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 30: eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B) 
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]


### Specialization of cost equations eval_Loopus2015_ex2_bb1_in/4 
* CE 5 is refined into CE [32,33,34,35,36,37,38] 
* CE 6 is refined into CE [39] 


#### Refined cost equations eval_Loopus2015_ex2_bb1_in/4 
* CE 32: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(C,D,V_m2,B):[30]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 33: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(C,V_m1,D,B):[29]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 34: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(C,V_m1,V_m2,B):[28]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 35: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(C,V_m1,V_m2,B):[27]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 36: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B):[26]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 37: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B):[25]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 38: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B):[24]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 39: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) = 0
     [V_n>=0,0>=V_m1+1] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_bb1_in/4 
* CEs [38] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [36] --> Loop 33 
* CEs [39] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [34] --> Loop 36 
* CEs [33] --> Loop 37 
* CEs [32] --> Loop 38 

#### Loops of eval_Loopus2015_ex2_bb1_in/4 
* Loop 31: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 32: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 33: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 34: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 35: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 36: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 37: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 38: eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B) 
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]


### Specialization of cost equations eval_Loopus2015_ex2_3/4 
* CE 3 is refined into CE [40,41,42,43,44,45,46,47] 
* CE 4 is refined into CE [48] 


#### Refined cost equations eval_Loopus2015_ex2_3/4 
* CE 40: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(C,D,V_m2,B):[38]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 41: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(C,V_m1,D,B):[37]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 42: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(C,V_m1,V_m2,B):[36]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 43: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(C,V_m1,V_m2,B):[35]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 44: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B):[34]
     [V_n>=0,0>=V_m1+1] 
* CE 45: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B):[33]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 46: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B):[32]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 47: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B):[31]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 48: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_3/4 
* CEs [47] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [48] --> Loop 43 
* CEs [43] --> Loop 44 
* CEs [42] --> Loop 45 
* CEs [41] --> Loop 46 
* CEs [40] --> Loop 47 

#### Loops of eval_Loopus2015_ex2_3/4 
* Loop 39: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 40: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 41: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 42: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 43: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [0>=V_n+1] 
* Loop 44: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 45: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 46: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 47: eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B) 
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]


### Specialization of cost equations eval_Loopus2015_ex2_start/4 
* CE 2 is refined into CE [49,50,51,52,53,54,55,56,57] 


#### Refined cost equations eval_Loopus2015_ex2_start/4 
* CE 49: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(C,D,V_m2,B):[47]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 50: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(C,V_m1,D,B):[46]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 51: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(C,V_m1,V_m2,B):[45]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 52: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(C,V_m1,V_m2,B):[44]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 53: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):[43]
     [0>=V_n+1] 
* CE 54: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):[42]
     [V_n>=0,0>=V_m1+1] 
* CE 55: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):[41]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 56: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):[40]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 57: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) = 0+ eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):[39]
     [V_m2>=0,V_m1>=0,V_n>=1] 

### Cost equations --> "Loop" of eval_Loopus2015_ex2_start/4 
* CEs [57] --> Loop 48 
* CEs [56] --> Loop 49 
* CEs [55] --> Loop 50 
* CEs [54] --> Loop 51 
* CEs [53] --> Loop 52 
* CEs [52] --> Loop 53 
* CEs [51] --> Loop 54 
* CEs [50] --> Loop 55 
* CEs [49] --> Loop 56 

#### Loops of eval_Loopus2015_ex2_start/4 
* Loop 48: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 49: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 50: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 51: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 52: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [0>=V_n+1] 
* Loop 53: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 54: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 55: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 56: eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B) 
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) -> [eval_Loopus2015_ex2_bb4_in(V_x_1',V_y_0',B',C')] 
1
#### Cost of phase [14]:eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C) -> [eval_Loopus2015_ex2_bb4_in(V_x_1',V_y_0',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_y_0
it(14) =< V_y_0-V_y_0'
it(14) >= V_y_0-V_y_0'

#### Cost of chains of eval_Loopus2015_ex2_bb4_in(V_x_1,V_y_0,B,C):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -V_x_1/2+C/2
it(14) >= -V_x_1/2+C/2

  with precondition: [B=3,V_x_1+2*V_y_0=C,V_x_1>=0,V_y_0>=1] 

* Chain [15]: 0
  with precondition: [V_y_0=0,B=3,V_x_1=C,V_x_1>=0] 


#### Cost of loops [16] 

 * loop 16:eval_Loopus2015_ex2_bb6_in(V_z_0,B) -> [eval_Loopus2015_ex2_bb6_in(V_z_0',B')] 
1
#### Cost of phase [16]:eval_Loopus2015_ex2_bb6_in(V_z_0,B) -> [eval_Loopus2015_ex2_bb6_in(V_z_0',B')] 
1*it(16)+0
  Such that:it(16) =< V_z_0
it(16) =< V_z_0-V_z_0'
it(16) >= V_z_0-V_z_0'

#### Cost of chains of eval_Loopus2015_ex2_bb6_in(V_z_0,B):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_z_0
it(16) >= V_z_0

  with precondition: [B=2,V_z_0>=1] 

* Chain [17]: 0
  with precondition: [B=2,0>=V_z_0] 


#### Cost of chains of eval_Loopus2015_ex2_6(V_n,V_m1,V_m2,V_3,B):
* Chain [23]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0,V_3>=1] 

* Chain [22]: 2
  with precondition: [V_n=0,V_m2=0,0>=V_3,V_m1>=0] 

* Chain [21]: 1*s(1)+2
  Such that:s(1) =< V_m2
s(1) >= V_m2

  with precondition: [V_n=0,0>=V_3,V_m1>=0,V_m2>=1] 

* Chain [20]: 1*s(2)+2
  Such that:s(2) =< V_m1
s(2) >= V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0,V_3>=1] 

* Chain [19]: 1*s(3)+1*s(4)+2
  Such that:s(3) =< V_n
s(4) =< 2*V_n+V_m2
s(3) >= V_n
s(4) >= 2*V_n+V_m2

  with precondition: [0>=V_3,V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [18]: 1*s(5)+1*s(6)+2
  Such that:s(5) =< V_n
s(6) =< 2*V_n+V_m1
s(5) >= V_n
s(6) >= 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0,V_3>=1] 


#### Cost of chains of eval_Loopus2015_ex2_bb2_in(V_n,V_m1,V_m2,B):
* Chain [30]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [29]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [28]: 1*s(7)+2
  Such that:s(7) =< V_m2
s(7) >= V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [27]: 1*s(8)+2
  Such that:s(8) =< V_m1
s(8) >= V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [26]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [25]: 1*s(9)+1*s(10)+2
  Such that:s(9) =< V_n
s(10) =< 2*V_n+V_m2
s(9) >= V_n
s(10) >= 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [24]: 1*s(11)+1*s(12)+2
  Such that:s(11) =< V_n
s(12) =< 2*V_n+V_m1
s(11) >= V_n
s(12) >= 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_Loopus2015_ex2_bb1_in(V_n,V_m1,V_m2,B):
* Chain [38]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [37]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [36]: 1*s(13)+2
  Such that:s(13) =< V_m2
s(13) >= V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [35]: 1*s(14)+2
  Such that:s(14) =< V_m1
s(14) >= V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [34]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [33]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [32]: 1*s(15)+1*s(16)+2
  Such that:s(15) =< V_n
s(16) =< 2*V_n+V_m2
s(15) >= V_n
s(16) >= 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [31]: 1*s(17)+1*s(18)+2
  Such that:s(17) =< V_n
s(18) =< 2*V_n+V_m1
s(17) >= V_n
s(18) >= 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_Loopus2015_ex2_3(V_n,V_m1,V_m2,B):
* Chain [47]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [46]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [45]: 1*s(19)+2
  Such that:s(19) =< V_m2
s(19) >= V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [44]: 1*s(20)+2
  Such that:s(20) =< V_m1
s(20) >= V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [43]: 0
  with precondition: [0>=V_n+1] 

* Chain [42]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [41]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [40]: 1*s(21)+1*s(22)+2
  Such that:s(21) =< V_n
s(22) =< 2*V_n+V_m2
s(21) >= V_n
s(22) >= 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [39]: 1*s(23)+1*s(24)+2
  Such that:s(23) =< V_n
s(24) =< 2*V_n+V_m1
s(23) >= V_n
s(24) >= 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B):
* Chain [56]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [55]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [54]: 1*s(25)+2
  Such that:s(25) =< V_m2
s(25) >= V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [53]: 1*s(26)+2
  Such that:s(26) =< V_m1
s(26) >= V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [52]: 0
  with precondition: [0>=V_n+1] 

* Chain [51]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [50]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [49]: 1*s(27)+1*s(28)+2
  Such that:s(27) =< V_n
s(28) =< 2*V_n+V_m2
s(27) >= V_n
s(28) >= 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [48]: 1*s(29)+1*s(30)+2
  Such that:s(29) =< V_n
s(30) =< 2*V_n+V_m1
s(29) >= V_n
s(30) >= 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


Closed-form bounds of eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B): 
-------------------------------------
* Chain [56] with precondition: [V_n=0,V_m1=0,V_m2>=0] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [55] with precondition: [V_n=0,V_m2=0,V_m1>=0] 
    - Lower bound: 2 
    - Complexity: constant
 * Chain [54] with precondition: [V_n=0,V_m1>=0,V_m2>=1] 
    - Lower bound: V_m2+2 
    - Complexity: n
 * Chain [53] with precondition: [V_n=0,V_m1>=1,V_m2>=0] 
    - Lower bound: V_m1+2 
    - Complexity: n
 * Chain [52] with precondition: [0>=V_n+1] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [51] with precondition: [0>=V_m1+1,V_n>=0] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [50] with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 
    - Lower bound: 0 
    - Complexity: constant
 * Chain [49] with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 
    - Lower bound: 3*V_n+V_m2+2 
    - Complexity: n
 * Chain [48] with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 
    - Lower bound: 3*V_n+V_m1+2 
    - Complexity: n
 
### Partitioned lower bound of eval_Loopus2015_ex2_start(V_n,V_m1,V_m2,B): 
* 0 
 if [V_n=0,0>=V_m2+1,V_m1>=0]
 or [V_n=0,0>=V_m1+1]
 or [0>=V_n+1]
 or [0=1]
* 2 
 if [V_n=0,V_m1=0,V_m2>=1]
 or [V_n=0,V_m2=0,V_m1>=0]
* min([V_m2,V_m1])+2 
 if [V_n=0,V_m1>=1,V_m2>=1]
Possible lower bounds : [0,2,min([V_m2,V_m1])+2]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 74 ms.
* Invariants computed in 112 ms.
   - Backward Invariants 61 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 255 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 236 ms.
   - Equation cost structures 148 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 6 ms.
* Total analysis performed in 780 ms.

