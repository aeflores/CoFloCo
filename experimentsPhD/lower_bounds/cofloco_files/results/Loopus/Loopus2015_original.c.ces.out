Warning: Ignored call to eval_Loopus2015_original_stop/1 in equation eval_Loopus2015_original_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Loopus2015_original_15/15,eval_Loopus2015_original_16/15,eval_Loopus2015_original_bb3_in/14,eval_Loopus2015_original_bb4_in/14]
1. recursive : [eval_Loopus2015_original_10/6,eval_Loopus2015_original_11/7,eval_Loopus2015_original_12/8,eval_Loopus2015_original_13/9,eval_Loopus2015_original_bb1_in/5,eval_Loopus2015_original_bb2_in/5,loop_cont_eval_Loopus2015_original_bb3_in/6]
2. non_recursive : [eval_Loopus2015_original_bb5_in/1]
3. non_recursive : [loop_cont_eval_Loopus2015_original_bb1_in/2]
4. non_recursive : [eval_Loopus2015_original_8/2]
5. non_recursive : [eval_Loopus2015_original_7/2]
6. non_recursive : [eval_Loopus2015_original_6/2]
7. non_recursive : [eval_Loopus2015_original_5/2]
8. non_recursive : [eval_Loopus2015_original_4/2]
9. non_recursive : [eval_Loopus2015_original_3/2]
10. non_recursive : [eval_Loopus2015_original_2/2]
11. non_recursive : [eval_Loopus2015_original_1/2]
12. non_recursive : [eval_Loopus2015_original_0/2]
13. non_recursive : [eval_Loopus2015_original_bb0_in/2]
14. non_recursive : [eval_Loopus2015_original_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2015_original_bb3_in/14
1. SCC is partially evaluated into eval_Loopus2015_original_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_Loopus2015_original_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2015_original_bb3_in/14 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_Loopus2015_original_bb3_in/14 
* CE 10: eval_Loopus2015_original_bb3_in(A,B,C,D,E,F,G,H,I,J,A,E,E,E) = 0
     [I>=G,A>=E,I>=D,H>=1,E=B+1,J=2] 
* CE 11: eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) = 1+ eval_Loopus2015_original_bb3_in(V_len,G,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,H,I,C,D,E,F)
     [V__end_0>=V_k_0+1,V_len>=V_1,V_k_0>=V_beg_0,V_4>=1,V_k_0+1=H,V_1=G+1,V_1=V_i_0+1,I=2,B=2] 

### Cost equations --> "Loop" of eval_Loopus2015_original_bb3_in/14 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_Loopus2015_original_bb3_in/14 
* Loop 9: eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F)->  eval_Loopus2015_original_bb3_in(V_len,V_i_0',V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0',B',C,D,E,F)
                  [V__end_0>=V_k_0+1,V_len>=V_1,V_k_0>=V_beg_0,V_4>=1,V_k_0+1=V_k_0',V_1=V_i_0'+1,V_1=V_i_0+1,B'=2,B=2] 
* Loop 10: eval_Loopus2015_original_bb3_in(A,B,C,D,E,F,G,H,I,J,A,E,E,E) [I>=G,A>=E,I>=D,H>=1,E=B+1,J=2] 

### Ranking functions of CR eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) 
* RF of phase [9]: [V__end_0-V_k_0]

#### Partial ranking functions of CR eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__end_0-V_k_0


### Resulting Chains:eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) 
* [[9],10]
* [10]


### Specialization of cost equations eval_Loopus2015_original_bb1_in/5 
* CE 7 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 
* CE 3 is refined into CE [15,16] 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 


#### Refined cost equations eval_Loopus2015_original_bb1_in/5 
* CE 12: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 0
     [V_i_0>=V_len,B=3] 
* CE 13: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 2+ eval_Loopus2015_original_bb3_in(V_len,C,V_end_0,V_beg_0,D,E,V_end_0,F,V_beg_0,G,V_len,D,D,D):[[9],10]+ eval_Loopus2015_original_bb1_in(V_len,D,D,D,H)
     [V_len>=D,V_end_0>=V_beg_0+1,F>=1,0>=E,D=C+1,D=V_i_0+1,H=3,G=2,B=3] 
* CE 14: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 2+ eval_Loopus2015_original_bb3_in(V_len,C,V_end_0,V_beg_0,D,E,V_end_0,F,V_beg_0,G,V_len,D,D,D):[10]+ eval_Loopus2015_original_bb1_in(V_len,D,D,D,H)
     [V_beg_0>=V_end_0,V_len>=D,F>=1,0>=E,D=C+1,D=V_i_0+1,H=3,G=2,B=3] 
* CE 15: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 2+ eval_Loopus2015_original_bb3_in(V_len,C,V_end_0,V_beg_0,D,E,D,F,V_beg_0,G,V_len,D,D,D):[[9],10]+ eval_Loopus2015_original_bb1_in(V_len,D,D,D,H)
     [V_len>=D,D>=V_beg_0+1,F>=1,E>=1,D=C+1,D=V_i_0+1,H=3,G=2,B=3] 
* CE 16: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 2+ eval_Loopus2015_original_bb3_in(V_len,C,V_end_0,V_beg_0,D,E,D,F,V_beg_0,G,V_len,D,D,D):[10]+ eval_Loopus2015_original_bb1_in(V_len,D,D,D,H)
     [V_len>=D,V_beg_0>=D,F>=1,E>=1,D=C+1,D=V_i_0+1,H=3,G=2,B=3] 
* CE 17: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 1+ eval_Loopus2015_original_bb1_in(V_len,C,V_end_0,V_beg_0,D)
     [V_len>=V_i_0+1,V_i_0+1=C,D=3,B=3] 
* CE 18: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) = 1+ eval_Loopus2015_original_bb1_in(V_len,C,C,V_beg_0,D)
     [V_len>=C,C=V_i_0+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_Loopus2015_original_bb1_in/5 
* CEs [17] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [12] --> Loop 17 

#### Loops of eval_Loopus2015_original_bb1_in/5 
* Loop 11: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,V_i_0',V_end_0,V_beg_0,B')
                  [V_len>=V_i_0+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 12: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,A',A',A',B')
                  [V_beg_0>=A',V_len>=A',A'=V_i_0+1,B'=3,B=3] 
* Loop 13: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,A',A',A',B')
                  [V_len>=A',A'>=V_beg_0+1,A'=V_i_0+1,B'=3,B=3] 
* Loop 14: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,A',A',A',B')
                  [V_len>=A',V_end_0>=V_beg_0+1,A'=V_i_0+1,B'=3,B=3] 
* Loop 15: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,A',A',A',B')
                  [V_len>=A',V_beg_0>=V_end_0,A'=V_i_0+1,B'=3,B=3] 
* Loop 16: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B)->  eval_Loopus2015_original_bb1_in(V_len,A',A',V_beg_0,B')
                  [V_len>=A',A'=V_i_0+1,B'=3,B=3] 
* Loop 17: eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) [V_i_0>=V_len,B=3] 

### Ranking functions of CR eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) 
* RF of phase [11,12,13,14,15,16]: [V_len-V_i_0]

#### Partial ranking functions of CR eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) 


### Resulting Chains:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) 
* [[11,12,13,14,15,16],17]
* [17]


### Specialization of cost equations eval_Loopus2015_original_start/2 
* CE 2 is refined into CE [19,20] 


#### Refined cost equations eval_Loopus2015_original_start/2 
* CE 19: eval_Loopus2015_original_start(V_len,B) = 1+ eval_Loopus2015_original_bb1_in(V_len,C,D,E,F):[[11,12,13,14,15,16],17]
     [V_len>=1,F=3,E=0,D=0,C=0] 
* CE 20: eval_Loopus2015_original_start(V_len,B) = 1+ eval_Loopus2015_original_bb1_in(V_len,C,D,E,F):[17]
     [0>=V_len,F=3,E=0,D=0,C=0] 

### Cost equations --> "Loop" of eval_Loopus2015_original_start/2 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of eval_Loopus2015_original_start/2 
* Loop 18: eval_Loopus2015_original_start(V_len,B) [V_len>=1] 
* Loop 19: eval_Loopus2015_original_start(V_len,B) [0>=V_len] 

### Ranking functions of CR eval_Loopus2015_original_start(V_len,B) 

#### Partial ranking functions of CR eval_Loopus2015_original_start(V_len,B) 


### Resulting Chains:eval_Loopus2015_original_start(V_len,B) 
* [19]
* [18]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) -> [eval_Loopus2015_original_bb3_in(V_len',V_i_0',V_end_0',V_beg_0',V_1',V_2',V__end_0',V_4',V_k_0',B',C',D',E',F')] 
1
#### Cost of phase [9]:eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F) -> [eval_Loopus2015_original_bb3_in(V_len',V_i_0',V_end_0',V_beg_0',V_1',V_2',V__end_0',V_4',V_k_0',B',C',D',E',F')] 
1*it(9)+0
  Such that:it(9) =< V__end_0-V_k_0
it(9) =< V__end_0-V_k_0-V__end_0'+V_k_0'
it(9) >= V__end_0-V_k_0-V__end_0'+V_k_0'

#### Cost of chains of eval_Loopus2015_original_bb3_in(V_len,V_i_0,V_end_0,V_beg_0,V_1,V_2,V__end_0,V_4,V_k_0,B,C,D,E,F):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V__end_0-V_k_0
it(9) >= V__end_0-V_k_0

  with precondition: [B=2,V_i_0+1=V_1,V_len=C,V_i_0+1=D,V_i_0+1=E,V_i_0+1=F,V_4>=1,V_len>=V_i_0+1,V_k_0>=V_beg_0,V__end_0>=V_k_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0+1=V_1,V_len=C,V_i_0+1=D,V_i_0+1=E,V_i_0+1=F,V_4>=1,V_len>=V_i_0+1,V_k_0>=V_beg_0,V_k_0>=V__end_0] 


#### Cost of loops [11,13,14,15,16] 

 * loop 11:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
1
 * loop 13:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
1*s(2)+2
  Such that:s(2) =< -V_beg_0+V_beg_0'
s(2) >= -V_beg_0+V_beg_0'

 * loop 14:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_end_0-V_beg_0
s(4) >= V_end_0-V_beg_0

 * loop 15:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
2
 * loop 16:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
1
#### Cost of phase [11,12,13,14,15,16]:eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) -> [eval_Loopus2015_original_bb1_in(V_len',V_i_0',V_end_0',V_beg_0',B')] 
1*it(11)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(18) =< V_len-V_end_0-1
it(15)+s(6) =< V_len-V_beg_0-1
it(14)+it(15)+s(5) =< V_len-V_beg_0
aux(20) =< V_len-1
aux(21) =< V_len-V_i_0
aux(22) =< V_len-V_i_0-V_len'+V_i_0'
aux(23) =< V_len-V_beg_0-V_len'+V_beg_0'
it(11)+it(13)+it(14)+it(15) =< aux(21)
it(11)+it(13)+it(14)+it(15)+it(16) =< aux(21)
it(11)+it(13)+it(14)+it(15) =< aux(22)
it(11)+it(13)+it(14)+it(15)+it(16) =< aux(22)
it(15)+s(6) =< aux(23)
it(14)+it(15)+s(5) =< aux(23)
aux(15) =< aux(20)
aux(3) =< it(13)*aux(20)
aux(5) =< it(15)*aux(18)
aux(4) =< it(14)*aux(15)
it(11)+it(13)+it(14)+it(15)+it(16) >= V_len-V_i_0-V_len'+V_i_0'
aux(2) >= V_i_0-V_beg_0+1
aux(11) >= V_end_0-V_beg_0
aux(10) >= aux(11)- (aux(3)+aux(4))
aux(1) >= aux(2)- (aux(3)+aux(4)+aux(5))
s(6) >= it(14)*aux(10)
s(5) >= it(13)*aux(1)

#### Cost of chains of eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B):
* Chain [[11,12,13,14,15,16],17]: 1*it(11)+2*it(13)+2*it(14)+2*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:s(6)+it(15) =< V_len-V_beg_0-1
aux(24) =< V_len-V_i_0
aux(25) =< V_len-V_beg_0
it(14)+it(15)+s(5) =< aux(25)
it(11)+it(13)+it(14)+it(15)+it(16) =< aux(24)
it(15)+s(6) =< aux(25)
it(16)+it(15)+it(14)+it(13)+it(11) >= V_len-V_i_0

  with precondition: [B=3,V_beg_0>=0,V_len>=V_i_0+1,V_i_0>=V_end_0,V_end_0>=V_beg_0] 

* Chain [17]: 0
  with precondition: [B=3,V_beg_0>=0,V_i_0>=V_len,V_i_0>=V_end_0,V_end_0>=V_beg_0] 


#### Cost of chains of eval_Loopus2015_original_start(V_len,B):
* Chain [19]: 1
  with precondition: [0>=V_len] 

* Chain [18]: 1*s(7)+2*s(8)+1*s(11)+2*s(12)+2*s(13)+1*s(14)+1*s(15)+1
  Such that:s(8)+s(7) =< V_len-1
aux(26) =< V_len
s(8)+s(12)+s(15) =< aux(26)
s(8)+s(11)+s(12)+s(13)+s(14) =< aux(26)
s(7)+s(8) =< aux(26)
s(14)+s(13)+s(12)+s(11)+s(8) >= V_len

  with precondition: [V_len>=1] 


Closed-form bounds of eval_Loopus2015_original_start(V_len,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_len] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [18] with precondition: [V_len>=1] 
    - Lower bound: V_len+1 
    - Complexity: n
 
### Partitioned lower bound of eval_Loopus2015_original_start(V_len,B): 
* 1 
 if [0>=V_len]
* V_len+1 
 if [V_len>=1]
Possible lower bounds : [1,V_len+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 145 ms.
* Invariants computed in 153 ms.
   - Backward Invariants 58 ms.
   - Transitive Invariants 39 ms.
* Refinement performed in 202 ms.
* Termination proved in 48 ms.
* Upper bounds computed in 493 ms.
   - Equation cost structures 80 ms.
   - Phase cost structures 399 ms.
   - Chain cost structures 67 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 1169 ms.

