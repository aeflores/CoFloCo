Warning: Ignored call to eval_Loopus2015_ex1_stop/1 in equation eval_Loopus2015_ex1_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Loopus2015_ex1_bb3_in/9,eval_Loopus2015_ex1_bb4_in/9]
1. recursive : [eval_Loopus2015_ex1_10/5,eval_Loopus2015_ex1_11/6,eval_Loopus2015_ex1_bb1_in/3,eval_Loopus2015_ex1_bb2_in/3,loop_cont_eval_Loopus2015_ex1_bb3_in/4]
2. non_recursive : [eval_Loopus2015_ex1_bb5_in/1]
3. non_recursive : [loop_cont_eval_Loopus2015_ex1_bb1_in/2]
4. non_recursive : [eval_Loopus2015_ex1_7/2]
5. non_recursive : [eval_Loopus2015_ex1_6/2]
6. non_recursive : [eval_Loopus2015_ex1_5/2]
7. non_recursive : [eval_Loopus2015_ex1_4/2]
8. non_recursive : [eval_Loopus2015_ex1_3/2]
9. non_recursive : [eval_Loopus2015_ex1_2/2]
10. non_recursive : [eval_Loopus2015_ex1_1/2]
11. non_recursive : [eval_Loopus2015_ex1_0/2]
12. non_recursive : [eval_Loopus2015_ex1_bb0_in/2]
13. non_recursive : [eval_Loopus2015_ex1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2015_ex1_bb3_in/9
1. SCC is partially evaluated into eval_Loopus2015_ex1_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_Loopus2015_ex1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2015_ex1_bb3_in/9 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_Loopus2015_ex1_bb3_in/9 
* CE 8: eval_Loopus2015_ex1_bb3_in(A,B,C,D,E,F,G,H,C) = 0
     [A+1>=F,E>=1,C>=0,0>=F,A+1=D,C+1=B,H=0,G=2] 
* CE 9: eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) = 1+ eval_Loopus2015_ex1_bb3_in(E,F,V_1,V_2,V_3,G,H,C,D)
     [V_2>=V_p_0,V_p_0>=1,V_3>=1,V_1>=0,V_p_0=G+1,V_1+1=F,V_2=E+1,V_1+1=V_x_0,V_2=V_r_0+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_Loopus2015_ex1_bb3_in/9 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_Loopus2015_ex1_bb3_in/9 
* Loop 7: eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D)->  eval_Loopus2015_ex1_bb3_in(V_r_0',V_x_0',V_1,V_2,V_3,V_p_0',B',C,D)
                  [V_2>=V_p_0,V_p_0>=1,V_3>=1,V_1>=0,V_p_0=V_p_0'+1,V_1+1=V_x_0',V_2=V_r_0'+1,V_1+1=V_x_0,V_2=V_r_0+1,B'=2,B=2] 
* Loop 8: eval_Loopus2015_ex1_bb3_in(A,B,C,D,E,F,G,H,C) [A+1>=F,E>=1,C>=0,0>=F,A+1=D,C+1=B,H=0,G=2] 

### Ranking functions of CR eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* RF of phase [7]: [V_p_0]

#### Partial ranking functions of CR eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_p_0


### Resulting Chains:eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* [[7],8]
* [8]


### Specialization of cost equations eval_Loopus2015_ex1_bb1_in/3 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_Loopus2015_ex1_bb1_in/3 
* CE 10: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) = 0
     [0>=V_x_0,B=3] 
* CE 11: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) = 2+ eval_Loopus2015_ex1_bb3_in(C,D,E,F,G,F,H,I,E):[[7],8]+ eval_Loopus2015_ex1_bb1_in(J,E,K)
     [G>=1,F>=1,E>=0,E+1=D,F=C+1,E+1=V_x_0,F=V_r_0+1,K=3,J=0,I=0,H=2,B=3] 
* CE 12: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) = 2+ eval_Loopus2015_ex1_bb3_in(V_r_0,C,D,E,F,G,H,I,D):[8]+ eval_Loopus2015_ex1_bb1_in(J,D,K)
     [F>=1,D>=0,0>=V_r_0+1,V_r_0+1=G,V_r_0+1=E,D+1=C,D+1=V_x_0,K=3,J=0,I=0,H=2,B=3] 
* CE 13: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) = 1+ eval_Loopus2015_ex1_bb1_in(C,D,E)
     [V_x_0>=1,V_x_0=D+1,C=V_r_0+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_Loopus2015_ex1_bb1_in/3 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [10] --> Loop 12 

#### Loops of eval_Loopus2015_ex1_bb1_in/3 
* Loop 9: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B)->  eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0>=1,V_x_0=V_x_0'+1,V_r_0+1=V_r_0',B'=3,B=3] 
* Loop 10: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B)->  eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0'>=0,V_r_0>=0,V_x_0'+1=V_x_0,B'=3,V_r_0'=0,B=3] 
* Loop 11: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B)->  eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0'>=0,0>=V_r_0+1,V_x_0'+1=V_x_0,B'=3,V_r_0'=0,B=3] 
* Loop 12: eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) [0>=V_x_0,B=3] 

### Ranking functions of CR eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) 
* RF of phase [9,10,11]: [V_x_0]

#### Partial ranking functions of CR eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) 


### Resulting Chains:eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) 
* [[9,10,11],12]
* [12]


### Specialization of cost equations eval_Loopus2015_ex1_start/2 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_Loopus2015_ex1_start/2 
* CE 14: eval_Loopus2015_ex1_start(V_n,B) = 1+ eval_Loopus2015_ex1_bb1_in(C,V_n,D):[[9,10,11],12]
     [V_n>=1,D=3,C=0] 
* CE 15: eval_Loopus2015_ex1_start(V_n,B) = 1+ eval_Loopus2015_ex1_bb1_in(C,V_n,D):[12]
     [0>=V_n,D=3,C=0] 

### Cost equations --> "Loop" of eval_Loopus2015_ex1_start/2 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_Loopus2015_ex1_start/2 
* Loop 13: eval_Loopus2015_ex1_start(V_n,B) [V_n>=1] 
* Loop 14: eval_Loopus2015_ex1_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_Loopus2015_ex1_start(V_n,B) 

#### Partial ranking functions of CR eval_Loopus2015_ex1_start(V_n,B) 


### Resulting Chains:eval_Loopus2015_ex1_start(V_n,B) 
* [14]
* [13]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) -> [eval_Loopus2015_ex1_bb3_in(V_r_0',V_x_0',V_1',V_2',V_3',V_p_0',B',C',D')] 
1
#### Cost of phase [7]:eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) -> [eval_Loopus2015_ex1_bb3_in(V_r_0',V_x_0',V_1',V_2',V_3',V_p_0',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_p_0
it(7) =< V_p_0-V_p_0'
it(7) >= V_p_0-V_p_0'

#### Cost of chains of eval_Loopus2015_ex1_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_p_0
it(7) >= V_p_0

  with precondition: [B=2,C=0,V_x_0=V_1+1,V_r_0+1=V_2,V_x_0=D+1,V_x_0>=1,V_3>=1,V_p_0>=1,V_r_0+1>=V_p_0] 

* Chain [8]: 0
  with precondition: [B=2,C=0,V_2=V_r_0+1,V_x_0=V_1+1,V_x_0=D+1,0>=V_p_0,V_x_0>=1,V_3>=1,V_2>=V_p_0] 


#### Cost of loops [9,10] 

 * loop 9:eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) -> [eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')] 
1
 * loop 10:eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) -> [eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_r_0+1
s(2) >= V_r_0+1

#### Cost of phase [9,10,11]:eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B) -> [eval_Loopus2015_ex1_bb1_in(V_r_0',V_x_0',B')] 
1*it(9)+2*it(10)+1*s(3)+0
  Such that:s(3) =< V_r_0+V_x_0
s(3) =< V_r_0+V_x_0-V_r_0'-V_x_0'
it(9)+it(10) =< V_x_0
it(9)+it(10) =< V_x_0-V_x_0'
aux(3) >= 1
aux(2) >= V_r_0+1
s(3) >= V_r_0+V_x_0-V_r_0'-V_x_0'
it(9)+it(10) >= V_x_0-V_x_0'
aux(1) >= min([aux(2),aux(3)])
s(3) >= it(10)*aux(1)

#### Cost of chains of eval_Loopus2015_ex1_bb1_in(V_r_0,V_x_0,B):
* Chain [[9,10,11],12]: 1*it(9)+2*it(10)+1*s(3)+0
  Such that:s(3) =< V_r_0+V_x_0
it(10)+it(9) =< V_x_0
aux(3) >= 1
aux(2) >= V_r_0+1
it(10)+it(9) >= V_x_0
aux(1) >= min([aux(2),aux(3)])
s(3) >= it(10)*aux(1)

  with precondition: [B=3,V_r_0>=0,V_x_0>=1] 

* Chain [12]: 0
  with precondition: [B=3,0>=V_x_0,V_r_0>=0] 


#### Cost of chains of eval_Loopus2015_ex1_start(V_n,B):
* Chain [14]: 1
  with precondition: [0>=V_n] 

* Chain [13]: 1*s(4)+2*s(5)+1*s(6)+1
  Such that:aux(4) =< V_n
s(5)+s(6) =< aux(4)
s(4) =< aux(4)
s(6)+s(5) >= V_n

  with precondition: [V_n>=1] 


Closed-form bounds of eval_Loopus2015_ex1_start(V_n,B): 
-------------------------------------
* Chain [14] with precondition: [0>=V_n] 
    - Lower bound: 1 
    - Complexity: constant
 * Chain [13] with precondition: [V_n>=1] 
    - Lower bound: V_n+1 
    - Complexity: n
 
### Partitioned lower bound of eval_Loopus2015_ex1_start(V_n,B): 
* 1 
 if [0>=V_n]
* V_n+1 
 if [V_n>=1]
Possible lower bounds : [1,V_n+1]
Maximum lower bound complexity: n

Time statistics: 
-------------------------------------
* Partial evaluation computed in 51 ms.
* Invariants computed in 87 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 25 ms.
* Refinement performed in 98 ms.
* Termination proved in 43 ms.
* Upper bounds computed in 125 ms.
   - Equation cost structures 30 ms.
   - Phase cost structures 69 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 481 ms.

