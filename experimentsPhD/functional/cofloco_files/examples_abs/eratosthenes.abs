/* * * * * * * * * * *
 Translation to ABS
 * * * * * * * * * * *
 *
 * * *  Use Cases  * *
 *
 * File:
 *   examples/eratosthenes.raml
 *

 * 
 * Description:
 *   Sieve of Eratosthenes.
 */

module Erastothenes;


def List<Int> filter(Int p,List<Int> l) =
	case l {
	Nil => Nil ;
        Cons(x,xs) =>
		let (List<Int> xsp) = filter(p, xs) in
		if (x % p) == 0 then xsp
		else Cons(x,xsp);
		};

def List<Int> eratos(List<Int> l) =
	case l {
	Nil => Nil ;
	Cons(x,xs) =>
		  Cons(x,eratos(filter( x, xs)));
		  };

{}

