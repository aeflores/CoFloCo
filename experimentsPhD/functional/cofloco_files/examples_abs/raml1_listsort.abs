/* * * * * * * * * * *
 * Resource Aware ML *
 * * * * * * * * * * *
 *
 * * *  Use Cases  * *
 *
 * File:
 *   tests/listsort.raml
 *
 * Author:
 *   Ankush Das, Jan Hoffmann (2015)
 * 
 * Description:
 *   Insertion sort for lists of lists.
 */
module Listsort;


def Bool leqL(List<Int> l1,List<Int> l2) =
	case l1 {
	Nil => True;
	Cons(x,xs) =>
		case l2 {
		Nil => False;
		Cons(y,ys) =>
			 x <= y && leqL(xs,ys);
		 };
	};

def List<List<Int>> insertL(List<Int> x,List<List<Int>> l) = 
	case l {
	Nil => Cons(x,Nil);
	Cons(y,ys) =>	
		if leqL(y,x) then Cons(y,insertL(x,ys))
		else Cons(x,Cons(y,ys));
		};

def List<List<Int>> isortlist(List<List<Int>> l) =
	case l {
	Nil => Nil;
	Cons(x,xs) =>  insertL(x,isortlist(xs));
	};


{}