
Resource Aware ML, Version 1.3.1, October 2016

Typechecking module ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing function empty ...

  Trying degree: 1

== empty :

  'a -> 'b list * 'c list

  Non-zero annotations of the argument:
      3.00  <--  *

  Non-zero annotations of result:

  Simplified bound:
     3.00
--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.00 seconds
  #Constraints:  4

====

Analyzing function enqueue ...

  Trying degree: 1

== enqueue :

  ['a; 'a list * 'b] -> 'a list * 'b

  Non-zero annotations of the argument:
     10.00  <--  (*, ([], *))

  Non-zero annotations of result:

  Simplified bound:
     10.00
--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.01 seconds
  #Constraints:  13

====

Analyzing function enqueues ...

  Trying degree: 1

== enqueues :

  ['a list; 'a list * 'b] -> 'a list * 'b

  Non-zero annotations of the argument:
     21.00  <--  ([::(*)], ([], *))
      3.00  <--  ([], ([], *))

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 21.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.02 seconds
  #Constraints:  47

====

Analyzing function copyover ...

  Trying degree: 1

== copyover :

  'a list * 'a list -> 'b list * 'a list

  Non-zero annotations of the argument:
     14.00  <--  ([::(*)], [])
      7.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     7.00 + 14.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.02 seconds
  #Constraints:  42

====

Analyzing function dequeue ...

  Trying degree: 1, 2

== dequeue :

  'a list * 'a list -> ('a list * 'a list) * 'a list

  Non-zero annotations of the argument:
     39.00  <--  ([::(*)], [])
     14.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     14.00 + 39.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.11 seconds
  #Constraints:  267

====

Analyzing function children ...

  Trying degree: 1

== children :

  'a * 'b * 'b list * 'b list ->
                   ('a * 'b) * ('b * 'b * 'b list * 'b list) list

  Non-zero annotations of the argument:
     27.00  <--  (*, *, [], [])

  Non-zero annotations of result:

  Simplified bound:
     27.00
--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.04 seconds
  #Constraints:  83

====

Analyzing function breadth ...

  Trying degree: 1, 2, 3

== breadth :

  ('a * 'a * 'a list * 'a list) list *
                  ('a * 'a * 'a list * 'a list) list -> ('a * 'a) list

  Non-zero annotations of the argument:
    118.00  <--  ([::(*, *, [::(*)], [::(*)])], [])
    118.00  <--  ([], [::(*, *, [::(*)], [::(*)])])
    118.00  <--  ([::(*, *, [], [::(*)])], [])
    118.00  <--  ([], [::(*, *, [], [::(*)])])
     88.00  <--  ([::(*, *, [], [])], [])
     49.00  <--  ([], [::(*, *, [], [])])
     18.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     18.00 + 118.00*B*R + 118.00*B*R*T + 118.00*L*M*Y
                               + 88.00*M + 118.00*M*Y + 49.00*R
   where
     R is the number of ::-nodes of the 2nd component of the argument
     B is the maximal number of ::-nodes of the 4th component in the ::-nodes of the 2nd component of the argument
     T is the maximal number of ::-nodes of the 3rd component in the ::-nodes of the 2nd component of the argument
     M is the number of ::-nodes of the 1st component of the argument
     Y is the maximal number of ::-nodes of the 4th component in the ::-nodes of the 1st component of the argument
     L is the maximal number of ::-nodes of the 3rd component in the ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      2.17 seconds
  #Constraints:  3271

====

Analyzing function startBreadth ...

  Trying degree: 1, 2, 3

== startBreadth :

  'a list -> ('a * 'a) list

  Non-zero annotations of the argument:
    118.00  <--  [::(*); ::(*)]
    116.00  <--  [::(*)]
     19.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     19.00 + 57.00*M + 59.00*M^2
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      2.37 seconds
  #Constraints:  3392

====

Analyzing function appendD ...

  Trying degree: 1

== appendD :

  ['a list; 'a list] -> 'a list

  Non-zero annotations of the argument:
     11.00  <--  ([::(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.09 seconds
  #Constraints:  35

====

Analyzing function depth ...

  Trying degree: 1, 2, 3, 4

== depth :

  'a * 'a * 'a list * 'a list -> ('a * 'a) list

  Non-zero annotations of the argument:
     53.00  <--  (*, *, [::(*)], [::(*)])
     42.00  <--  (*, *, [], [::(*)])
     27.00  <--  (*, *, [], [])

  Non-zero annotations of result:

  Simplified bound:
     27.00 + 42.00*L + 53.00*L*M
   where
     L is the number of ::-nodes of the 4th component of the argument
     M is the number of ::-nodes of the 3rd component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      19.18 seconds
  #Constraints:  18896

====

Analyzing function startDepth ...

  Trying degree: 1, 2, 3, 4

== startDepth :

  'a list -> ('a * 'a) list

  Non-zero annotations of the argument:
     53.00  <--  [::(*); ::(*)]
     42.00  <--  [::(*)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 15.50*M + 26.50*M^2
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      15.51 seconds
  #Constraints:  18932

====

