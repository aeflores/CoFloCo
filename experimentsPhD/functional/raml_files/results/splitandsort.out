
Resource Aware ML, Version 1.3.1, October 2016

Typechecking module ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing function insert ...

  Trying degree: 1

== insert :

  ['a * int; ('a list * int) list] -> ('a list * int) list

  Non-zero annotations of the argument:
     23.00  <--  ((*, *), [::([], *)])
     13.00  <--  ((*, *), [])

  Non-zero annotations of result:

  Simplified bound:
     13.00 + 23.00*M
   where
     M is the number of ::-nodes of the 2nd component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.03 seconds
  #Constraints:  75

====

Analyzing function split ...

  Trying degree: 1, 2

== split :

  ('a * int) list -> ('a list * int) list

  Non-zero annotations of the argument:
     23.00  <--  [::(*, *); ::(*, *)]
     23.00  <--  [::(*, *)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.50*M + 11.50*M^2
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.13 seconds
  #Constraints:  274

====

Analyzing function splitqs ...

  Trying degree: 1

== splitqs :

  int * int list -> int list * int list

  Non-zero annotations of the argument:
     24.00  <--  (*, [::(*)])
      7.00  <--  (*, [])

  Non-zero annotations of result:

  Simplified bound:
     7.00 + 24.00*M
   where
     M is the number of ::-nodes of the 2nd component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.02 seconds
  #Constraints:  62

====

Analyzing function append ...

  Trying degree: 1

== append :

  ['a list; 'a list] -> 'a list

  Non-zero annotations of the argument:
     11.00  <--  ([::(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.02 seconds
  #Constraints:  35

====

Analyzing function quicksort ...

  Trying degree: 1, 2

== quicksort :

  int list -> int list

  Non-zero annotations of the argument:
     35.00  <--  [::(*); ::(*)]
     34.00  <--  [::(*)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 16.50*M + 17.50*M^2
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.16 seconds
  #Constraints:  555

====

Analyzing function sortAll ...

  Trying degree: 1, 2, 3

== sortAll :

  (int list * 'a) list -> (int list * 'a) list

  Non-zero annotations of the argument:
     35.00  <--  [::([::(*); ::(*)], *)]
     34.00  <--  [::([::(*)], *)]
     19.00  <--  [::([], *)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 16.50*L*M + 17.50*L^2*M + 19.00*M
   where
     M is the number of ::-nodes of the argument
     L is the maximal number of ::-nodes of the 1st component in the ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      0.97 seconds
  #Constraints:  3165

====

Analyzing function splitAndSort ...

  Trying degree: 1, 2, 3

== splitAndSort :

  (int * int) list -> (int list * int) list

  Non-zero annotations of the argument:
     58.00  <--  [::(*, *); ::(*, *)]
     76.00  <--  [::(*, *)]
     11.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     11.00 + 47.00*M + 29.00*M^2
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      1.24 seconds
  #Constraints:  3786

====

