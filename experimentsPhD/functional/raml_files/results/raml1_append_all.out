
Resource Aware ML, Version 1.3.1, October 2016

Typechecking module ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing function append ...

  Trying degree: 1

== append :

  ['a list; 'a list] -> 'a list

  Non-zero annotations of the argument:
      9.00  <--  ([::(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 9.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.01 seconds
  #Constraints:  33

====

Analyzing function append_all ...

  Trying degree: 1, 2

== append_all :

  'a list list -> 'a list

  Non-zero annotations of the argument:
      9.00  <--  [::([::(*)])]
     11.00  <--  [::([])]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 9.00*L*M + 11.00*M
   where
     M is the number of ::-nodes of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.07 seconds
  #Constraints:  201

====

Analyzing function append_all2 ...

  Trying degree: 1, 2, 3

== append_all2 :

  'a list list list -> 'a list

  Non-zero annotations of the argument:
     18.00  <--  [::([::([::(*)])])]
     11.00  <--  [::([::([])])]
     16.00  <--  [::([])]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*L*M + 18.00*L*M*Y + 16.00*M
   where
     M is the number of ::-nodes of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the argument
     Y is the maximal number of ::-nodes in the ::-nodes in the ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      0.41 seconds
  #Constraints:  1561

====

Analyzing function append_all3 ...

  Trying degree: 1, 2, 3, 4

== append_all3 :

  'a list list list list -> 'a list

  Non-zero annotations of the argument:
     27.00  <--  [::([::([::([::(*)])])])]
     11.00  <--  [::([::([::([])])])]
     16.00  <--  [::([::([])])]
     16.00  <--  [::([])]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 16.00*L*M + 27.00*L*M*R*Y + 11.00*L*M*Y
                               + 16.00*M
   where
     M is the number of ::-nodes of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the argument
     Y is the maximal number of ::-nodes in the ::-nodes in the ::-nodes of the argument
     R is the maximal number of ::-nodes in the ::-nodes in the ::-nodes in the ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      3.00 seconds
  #Constraints:  12779

====

