
Resource Aware ML, Version 1.3.1, October 2016

Typechecking module ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing function size ...

  Trying degree: 1

== size :

  'a list -> int

  Non-zero annotations of the argument:
     11.00  <--  [::(*)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*M
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.01 seconds
  #Constraints:  29

====

Analyzing function get_elem ...

  Trying degree: 1

== get_elem :

  ['a list; int] -> 'a

  Non-zero annotations of the argument:
     18.00  <--  ([::(*)], *)
      2.00  <--  ([], *)

  Non-zero annotations of result:

  Simplified bound:
     2.00 + 18.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.01 seconds
  #Constraints:  41

====

Analyzing function get_2elems ...

  Trying degree: 1

== get_2elems :

  ['a list; 'b list; int] -> 'a * 'b

  Non-zero annotations of the argument:
     21.00  <--  ([::(*)], [], *)
      2.00  <--  ([], [], *)

  Non-zero annotations of result:

  Simplified bound:
     2.00 + 21.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.02 seconds
  #Constraints:  59

====

Analyzing function subtract_row_helper ...

  Trying degree: 1

== subtract_row_helper :

  [float list; float list; float] -> float list

  Non-zero annotations of the argument:
      2.00  <--  ([::(*)], [], *)
     20.00  <--  ([], [::(*)], *)
      3.00  <--  ([], [], *)

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 20.00*L + 2.00*M
   where
     L is the number of ::-nodes of the 2nd component of the argument
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.03 seconds
  #Constraints:  58

====

Analyzing function subtract_row ...

  Trying degree: 1

== subtract_row :

  [float list; float list; int] -> float list

  Non-zero annotations of the argument:
     23.00  <--  ([::(*)], [], *)
     20.00  <--  ([], [::(*)], *)
     12.00  <--  ([], [], *)

  Non-zero annotations of result:

  Simplified bound:
     12.00 + 20.00*L + 23.00*M
   where
     L is the number of ::-nodes of the 2nd component of the argument
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.05 seconds
  #Constraints:  147

====

Analyzing function subtract_helper ...

  Trying degree: 1, 2

== subtract_helper :

  [float list list; float list; int] -> float list list

  Non-zero annotations of the argument:
     20.00  <--  ([::([::(*)])], [], *)
     23.00  <--  ([::([])], [::(*)], *)
     28.00  <--  ([::([])], [], *)
      3.00  <--  ([], [], *)

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 20.00*L*M + 28.00*M + 23.00*M*Y
   where
     Y is the number of ::-nodes of the 2nd component of the argument
     M is the number of ::-nodes of the 1st component of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.28 seconds
  #Constraints:  826

====

Analyzing function concat ...

  Trying degree: 1

== concat :

  ['a list; 'a list] -> 'a list

  Non-zero annotations of the argument:
     11.00  <--  ([::(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.04 seconds
  #Constraints:  35

====

Analyzing function tl ...

  Trying degree: 1

== tl :

  ['a list; int] -> 'a list

  Non-zero annotations of the argument:
     18.00  <--  ([::(*)], *)
      8.00  <--  ([], *)

  Non-zero annotations of result:

  Simplified bound:
     8.00 + 18.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.05 seconds
  #Constraints:  44

====

Analyzing function hd_helper ...

  Trying degree: 1

== hd_helper :

  ['a list; int; 'a list] -> 'a list

  Non-zero annotations of the argument:
     22.00  <--  ([::(*)], *, [])
      8.00  <--  ([], *, [])

  Non-zero annotations of result:

  Simplified bound:
     8.00 + 22.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.06 seconds
  #Constraints:  53

====

Analyzing function reverse_helper ...

  Trying degree: 1

== reverse_helper :

  ['a list; 'a list] -> 'a list

  Non-zero annotations of the argument:
     11.00  <--  ([::(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 11.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.05 seconds
  #Constraints:  35

====

Analyzing function reverse ...

  Trying degree: 1

== reverse :

  'a list -> 'a list

  Non-zero annotations of the argument:
     11.00  <--  [::(*)]
      7.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     7.00 + 11.00*M
   where
     M is the number of ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.05 seconds
  #Constraints:  41

====

Analyzing function hd ...

  Trying degree: 1

== hd :

  ['a list; int] -> 'a list

  Non-zero annotations of the argument:
     33.00  <--  ([::(*)], *)
     21.00  <--  ([], *)

  Non-zero annotations of result:

  Simplified bound:
     21.00 + 33.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.07 seconds
  #Constraints:  103

====

Analyzing function split_helper ...

  Trying degree: 1

== split_helper :

  ['a list; int; int; 'a list] -> 'a list * 'a list

  Non-zero annotations of the argument:
     34.00  <--  ([::(*)], *, *, [])
     11.00  <--  ([], *, *, [::(*)])
     18.00  <--  ([], *, *, [])

  Non-zero annotations of result:

  Simplified bound:
     18.00 + 11.00*L + 34.00*M
   where
     L is the number of ::-nodes of the 4th component of the argument
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.10 seconds
  #Constraints:  102

====

Analyzing function split ...

  Trying degree: 1

== split :

  ['a list; int] -> 'a list * 'a list

  Non-zero annotations of the argument:
     34.00  <--  ([::(*)], *)
     24.00  <--  ([], *)

  Non-zero annotations of result:

  Simplified bound:
     24.00 + 34.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        1
  Run time:      0.10 seconds
  #Constraints:  110

====

Analyzing function subtract ...

  Trying degree: 1, 2

== subtract :

  [float list list; int] -> float list list

  Non-zero annotations of the argument:
     43.00  <--  ([::([::(*)])], *)
     63.00  <--  ([::([])], *)
     45.00  <--  ([], *)

  Non-zero annotations of result:

  Simplified bound:
     45.00 + 43.00*L*M + 63.00*M
   where
     M is the number of ::-nodes of the 1st component of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        2
  Run time:      0.57 seconds
  #Constraints:  1608

====

Analyzing function echelon_helper ...

  Trying degree: 1, 2, 3

== echelon_helper :

  [float list list; int; 'a list] -> float list list

  Non-zero annotations of the argument:
     43.00  <--  ([::([::(*)])], *, [::(*)])
     63.00  <--  ([::([])], *, [::(*)])
     59.00  <--  ([], *, [::(*)])
      3.00  <--  ([], *, [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 43.00*L*M*Y + 63.00*M*Y + 59.00*Y
   where
     Y is the number of ::-nodes of the 3rd component of the argument
     M is the number of ::-nodes of the 1st component of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      2.96 seconds
  #Constraints:  8051

====

Analyzing function echelon_form ...

  Trying degree: 1, 2, 3

== echelon_form :

  float list list -> float list list

  Non-zero annotations of the argument:
     43.00  <--  [::([::(*)]); ::([])]
     43.00  <--  [::([]); ::([::(*)])]
    126.00  <--  [::([]); ::([])]
     43.00  <--  [::([::(*)])]
    122.00  <--  [::([])]
      8.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     8.00 + 43.00*L*M^2 + 59.00*M + 63.00*M^2
   where
     M is the number of ::-nodes of the argument
     L is the maximal number of ::-nodes in the ::-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        3
  Run time:      3.07 seconds
  #Constraints:  8326

====

Analyzing function echelon_helper_old ...

  Trying degree: 1, 2, 3, 4, 5, 6

  A bound for echelon_helper_old could not be derived. The linear program is infeasible.

--
  Mode:          upper
  Metric:        steps
  Degree:        6
  Run time:      113.36 seconds
  #Constraints:  177326

====

Analyzing function echelon_form_old ...

  Trying degree: 1, 2, 3, 4, 5, 6

  A bound for echelon_form_old could not be derived. The linear program is infeasible.

--
  Mode:          upper
  Metric:        steps
  Degree:        6
  Run time:      151.96 seconds
  #Constraints:  177332

====

