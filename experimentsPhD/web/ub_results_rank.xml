<?xml version='1.0' encoding='UTF-8'?>
<examples>
<example name="ABC/jama_ex1.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(n__o'*n__o'))+n__o')+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.066s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex2.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+n__o')+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.047s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex3.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+n__o')+1]) </result>
<complexity>n^2</complexity>
<time>0m0.057s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex4.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+((((1+d__o')+(-1*c__o'))+(((1+d__o')+(-1*c__o'))*b__o'))+(((-1+(-1*d__o'))+c__o')*a__o')))+((1+b__o')+(-1*a__o')))+1,((1+1)+((1+b__o')+(-1*a__o')))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.116s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex5.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((1+(2*n__o'))+(n__o'*n__o')))+(1+n__o'))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.052s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex6.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((1+b__o')+(-1*a__o')))+1,(1+1)+1,(1+1)+1,((((1+1)+(((((1+(2*d__o'))+(d__o'*d__o'))+(-1*(c__o'*c__o')))+((((1+(2*d__o'))+(d__o'*d__o'))+(-1*(c__o'*c__o')))*b__o'))+((((-1+(-2*d__o'))+(-1*(d__o'*d__o')))+(c__o'*c__o'))*a__o')))+((((1+d__o')+(-1*c__o'))+(((1+d__o')+(-1*c__o'))*b__o'))+(((-1+(-1*d__o'))+c__o')*a__o')))+((1+b__o')+(-1*a__o')))+1,((((1+1)+((((1+(2*d__o'))+(d__o'*d__o'))+(((1+(2*d__o'))+(d__o'*d__o'))*b__o'))+(((-1+(-2*d__o'))+(-1*(d__o'*d__o')))*a__o')))+((((1+d__o')+(-1*c__o'))+(((1+d__o')+(-1*c__o'))*b__o'))+(((-1+(-1*d__o'))+c__o')*a__o')))+((1+b__o')+(-1*a__o')))+1,(1+1)+1]) </result>
<complexity>n^3</complexity>
<time>0m0.362s </time>
<error></error>
</rank>
</example>
<example name="ABC/jama_ex7.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(n__o'*m__o'))+n__o')+1,((1+1)+n__o')+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.078s </time>
<error></error>
</rank>
</example>
<example name="ABC/textbook_ex1.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((1+1)+((1+b__o')+(-1*a__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.039s </time>
<error></error>
</rank>
</example>
<example name="ABC/textbook_ex2.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+n__o')+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.062s </time>
<error></error>
</rank>
</example>
<example name="ABC/textbook_ex3.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(((1/2)*m__o')+((1/2)*(m__o'*m__o'))))+m__o')+1,(((((1+1)+(((((-1/12)*m__o')+((-1/8)*(m__o'*m__o')))+((1/12)*((m__o'*m__o')*m__o')))+((1/8)*(((m__o'*m__o')*m__o')*m__o'))))+(((-1/6)*m__o')+((1/6)*((m__o'*m__o')*m__o'))))+(((1/2)*m__o')+((1/2)*(m__o'*m__o'))))+m__o')+1,(1+1)+1]) </result>
<complexity>n^4</complexity>
<time>0m0.183s </time>
<error></error>
</rank>
</example>
<example name="ABC/textbook_ex4.c">
<rank>
<entry> </entry>
<result>max([((1+1)+-1)+1,(1+1)+1,(((1+1)+-1)+-1)+1,(1+1)+1]) </result>
<complexity> </complexity>
<time>0m0.071s </time>
<error>UNSOUND
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/gcd.c">
<rank>
<entry> </entry>
<result>max([((1+1)+y__o')+1,(((1+1)+(-1+x__o'))+y__o')+1,(1+1)+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.053s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/knuth_morris_pratt.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time> </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi09_fig1.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((1+1)+(2*n__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.042s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi09_fig4_2.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+n__o')+(n__o'+(-1*m__o')))+1,(1+1)+1,(1+1)+1,((1+1)+n__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.074s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi09_fig4_4.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(-1+m__o'))+((1+n__o')+(-1*m__o')))+1,(1+1)+1,((1+1)+((1+n__o')+(-1*m__o')))+1,((1+1)+n__o')+1,((1+1)+(-1+m__o'))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.058s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi09_fig4_5.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.214s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="C4B_examples/speed_pldi10_ex1.c">
<rank>
<entry> </entry>
<result>max([((1+1)+n__o')+1,(1+1)+1,(((1+1)+n__o')+((-1+((1/2)*n__o'))+((1/2)*(n__o'*n__o'))))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.071s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi10_ex3.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+(-1+n__o'))+(-1+n__o'))+1)+1,((1+1)+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.048s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_pldi10_ex4.c">
<rank>
<entry> </entry>
<result>max([((1+1)+-1)+1,(((1+1)+(-1+(2*n__o')))+-1)+1,(((1+1)+(1+n__o'))+-1)+1]) </result>
<complexity>n</complexity>
<time>0m0.048s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_fig2_1.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-1*x__o')+n__o'))+1,(((1+1)+((-1*y__o')+m__o'))+((-1*x__o')+n__o'))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.061s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_fig2_2.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-1*x__o')+n__o'))+1,(((1+1)+((-1*x__o')+n__o'))+(((-1+(-1*z__o'))+(-1*x__o'))+(2*n__o')))+1,(((1+1)+((-1*x__o')+n__o'))+((-1+(-2*z__o'))+(2*n__o')))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.068s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_nested_multiple.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((-1*x__o')+n__o'))+(((y__o'*x__o')+((-1*y__o')*n__o'))+(((-1*x__o')+n__o')*m__o')))+1,((1+1)+((-1*x__o')+n__o'))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.090s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_nested_single.c">
<rank>
<entry> </entry>
<result>max([((1+1)+1)+1,(1+1)+1,((((1+1)+(-1+n__o'))+(-1+n__o'))+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.058s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_sequential_single.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+n__o')+n__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.048s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_simple_multiple.c">
<rank>
<entry> </entry>
<result>max([((1+1)+n__o')+1,(((1+1)+m__o')+n__o')+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.047s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_simple_single_2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.069s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="C4B_examples/speed_popl10_simple_single.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+n__o')+n__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.049s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t07.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+-1)+x__o')+1,((1+1)+-1)+1]) </result>
<complexity>n</complexity>
<time>0m0.055s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/t08.c">
<rank>
<entry> </entry>
<result>max([((1+1)+-1)+1,(((1+1)+-1)+(z__o'+(-1*y__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.045s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/t10.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+((-1*y__o')+x__o'))+((-1*y__o')+x__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.054s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t11.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-1*x__o')+n__o'))+1,(((1+1)+((-1*y__o')+m__o'))+((-1*x__o')+n__o'))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.058s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t13.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+-1)+(((((-1/2)*y__o')+((1/2)*(y__o'*y__o')))+(((-1/2)+y__o')*x__o'))+((1/2)*(x__o'*x__o'))))+-1)+1,(((1+1)+-1)+-1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.074s </time>
<error>count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/t15.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-1*y__o')+x__o'))+1,(1+1)+1,(1+1)+1,(((1+1)+(-1+x__o'))+((-1*y__o')+x__o'))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.073s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t16.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((-1+(-99*y__o'))+(101*x__o')))+((-1*y__o')+x__o'))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.055s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t19.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((51+k__o')+i__o'))+1,(((1+1)+(151+k__o'))+(-100+i__o'))+1,((1+1)+(151+k__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.070s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t20.c">
<rank>
<entry> </entry>
<result>max([((1+1)+-1)+1,(((1+1)+-1)+(y__o'+(-1*x__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.039s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/t27.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.076s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t28.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+-1)+((-1*y__o')+x__o'))+1,((1+1)+-1)+1]) </result>
<complexity>n</complexity>
<time>0m0.093s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="C4B_examples/t30.c">
<rank>
<entry> </entry>
<result>max([((1+1)+x__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.037s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t47.c">
<rank>
<entry> </entry>
<result>max([((1+1)+1)+1,(((1+1)+n__o')+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.066s </time>
<error></error>
</rank>
</example>
<example name="C4B_examples/t62.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+1)+((-1+(-1*l__o'))+h__o'))+1,(((((1+1)+1)+((-2+(-1*l__o'))+h__o'))+((-1+(-1*l__o'))+h__o'))+((-2+(-1*l__o'))+h__o'))+1,(1+1)+1,((1+1)+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.112s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2011_ex1.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+n__o')+(-1+n__o'))+(-1+n__o'))+1,((1+1)+n__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.143s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2011_ex2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.215s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2011_ex3.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.075s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="Loopus/Loopus2014_ex1.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+-1)+n__o')+1,(1+1)+1,((((1+1)+-1)+-1)+n__o')+1]) </result>
<complexity> </complexity>
<time>0m0.485s </time>
<error>UNSOUND
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="Loopus/Loopus2014_ex2.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+(1+(2*m__o')))+(-3+(2*m__o')))+(-1+(2*m__o')))+1,((1+1)+(1+(2*m__o')))+1,(((1+1)+(1+(2*m__o')))+(-1+(2*m__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.115s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2015_big.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.177s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2015_ex1.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+(-1+(2*n__o')))+n__o')+(-1+(2*n__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.088s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2015_ex2.c">
<rank>
<entry> </entry>
<result>max([((1+1)+1)+1,(((1+1)+(((2*n__o')+m2__o')+m1__o'))+1)+1,((((1+1)+(((2*n__o')+m2__o')+m1__o'))+n__o')+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.314s </time>
<error></error>
</rank>
</example>
<example name="Loopus/Loopus2015_original.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+(-1+(2*len__o')))+(-1+(2*len__o')))+len__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.393s </time>
<error></error>
</rank>
</example>
<example name="Other/ex_paper1.c">
<rank>
<entry> </entry>
<result>max([((((((1+1)+((-1+y__o')+(2*x__o')))+((z__o'*y__o')+(z__o'*x__o')))+(y__o'+(2*x__o')))+(y__o'+x__o'))+1)+1,(((((1+1)+((-1+y__o')+(2*x__o')))+(y__o'+(2*x__o')))+(y__o'+x__o'))+1)+1,((1+1)+1)+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.627s </time>
<error></error>
</rank>
</example>
<example name="Other/ex_paper2.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+n__o')+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.068s </time>
<error></error>
</rank>
</example>
<example name="Other/ex_paper3.c">
<rank>
<entry> </entry>
<result>max([(((((1+1)+-1)+x__o')+x__o')+x__o')+1,(1+1)+1]) </result>
<complexity> </complexity>
<time>0m0.109s </time>
<error>UNSOUND
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="WTC_V2/aaron12.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.045s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/aaron2.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+((1+(-1*y__o'))+x__o'))+((1+(-1*y__o'))+x__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.058s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/aaron3.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.070s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/alain.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.035s </time>
<error>Syntax error: file main.fst, line 19, characters 20-21: '?'.
Fatal error: exception Pervasives.Exit</error>
</rank>
</example>
<example name="WTC_V2/ax.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((1+(-2*n__o'))+(n__o'*n__o')))+1,(((1+1)+((1+(-2*n__o'))+(n__o'*n__o')))+(-2+n__o'))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.062s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/catmouse.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.042s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/complex.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+-1)+-1)+1,(((1+1)+-1)+((1619+(-6*b__o'))+(-48*a__o')))+1,(((1+1)+-1)+((1616+(-9*b__o'))+(-45*a__o')))+1,((1+1)+-1)+1,((1+1)+-1)+1]) </result>
<complexity>n</complexity>
<time>0m0.098s </time>
<error>count_points: ? infinite domain</error>
</rank>
</example>
<example name="WTC_V2/counterex1a.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.263s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/counterex1b.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+-1)+-1)+(1+x__o'))+1]) </result>
<complexity> </complexity>
<time>0m0.106s </time>
<error>UNSOUND
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="WTC_V2/counterex1c.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.259s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/cousot9.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+-1)+N__o')+1,(1+1)+1]) </result>
<complexity> </complexity>
<time>0m0.072s </time>
<error>UNSOUND
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain
count_points: ? infinite domain</error>
</rank>
</example>
<example name="WTC_V2/easy1.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.050s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/easy2.c">
<rank>
<entry> </entry>
<result>max([((1+1)+z__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.053s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/exmini.c">
<rank>
<entry> </entry>
<result>max([((1+1)+(((101+k__o')+(-1*j__o'))+(-1*i__o')))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.048s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/gcd.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+(-1+y__o'))+(-1+x__o'))+1)+1,(((1+1)+(-1+x__o'))+1)+1,(((1+1)+(-1+y__o'))+1)+1,((1+1)+1)+1,(1+1)+1,((1+1)+1)+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.080s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/heapsort.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+1)+(-1+size__o'))+1,((1+1)+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.119s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/insertsort.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+(((-1/2)*length__o')+((1/2)*(length__o'*length__o'))))+(-1+length__o'))+(-1+length__o'))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.088s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/loops.c">
<rank>
<entry> </entry>
<result>max([((1+1)+(1+n__o'))+1,(((1+1)+(1+n__o'))+((-1*n__o')+(n__o'*n__o')))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.043s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/ndecr.c">
<rank>
<entry> </entry>
<result>max([((1+1)+(-2+n__o'))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.034s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/nd_loop.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.032s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/nested_loop.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.195s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/nestedLoop.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.199s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/perfect1.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.107s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/perfect2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.119s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/perfect.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.085s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/perfectg.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.077s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/random1d.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((1+1)+max__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.047s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/random2d.c">
<rank>
<entry> </entry>
<result>max([(((((((1+1)+N__o')+N__o')+N__o')+N__o')+N__o')+N__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.207s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/rank1.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((6+(5*m__o'))+(m__o'*m__o')))+((1+(2*m__o'))+(m__o'*m__o')))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.103s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/rank2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.070s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/rank3.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.212s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/real2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time> </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/realbubble.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+(((-1/2)*length__o')+((1/2)*(length__o'*length__o'))))+(((-1/2)*length__o')+((1/2)*(length__o'*length__o'))))+(-1+length__o'))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.126s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/realheapsort.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.119s </time>
<error>Illegal character with code 47 on line #215</error>
</rank>
</example>
<example name="WTC_V2/realheapsort_step1.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.035s </time>
<error>Illegal character with code 47 on line #39</error>
</rank>
</example>
<example name="WTC_V2/realheapsort_step2.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+((-3+((1/2)*N__o'))+((1/2)*(N__o'*N__o'))))+(-2+N__o'))+(-1+N__o'))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.504s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/realselect.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((((1+1)+(-1+array_size__o'))+(((-1/2)*array_size__o')+((1/2)*(array_size__o'*array_size__o'))))+(-1+array_size__o'))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.108s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/realshellsort.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.061s </time>
<error>Illegal character with code 47 on line #15</error>
</rank>
</example>
<example name="WTC_V2/relation1.c">
<rank>
<entry> </entry>
<result>max([((1+1)+1)+1]) </result>
<complexity>constant</complexity>
<time>0m0.038s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/rsd.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(1+(4*r__o')))+(1+(4*r__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.083s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/serpent.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((((1+1)+((2+(3*n__o'))+(n__o'*n__o')))+((3+(4*n__o'))+(n__o'*n__o')))+(1+n__o'))+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.101s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/sipma91.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.222s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/sipmabubble.c">
<rank>
<entry> </entry>
<result>max([((1+1)+(1+n__o'))+1,((((1+1)+(1+n__o'))+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+(((1/2)*n__o')+((1/2)*(n__o'*n__o'))))+1]) </result>
<complexity>n^2</complexity>
<time>0m0.094s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/sipmamergesort2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m27.238s </time>
<error>Chernikova: out of table space</error>
</rank>
</example>
<example name="WTC_V2/sipmamergesort.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.002s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedDis1.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((-1*y__o')+m__o'))+((-1*x__o')+n__o'))+1,((1+1)+((-1*x__o')+n__o'))+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.215s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedDis2.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-1*x__o')+n__o'))+1,(1+1)+1,(((1+1)+((-1*x__o')+n__o'))+((-1+(-2*z__o'))+(2*n__o')))+1,(1+1)+1,(((1+1)+((-1*x__o')+n__o'))+(((-1+(-1*z__o'))+(-1*x__o'))+(2*n__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.207s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedFails1.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.101s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/speedFails2.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.148s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/speedFails3.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.244s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/speedFails4.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((1+(-1*x__o'))+n__o'))+1,(1+1)+1,(1+1)+1,((1+1)+((1+(-1*x__o'))+n__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.235s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedNestedMultiple.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+((-1*x__o')+n__o'))+(((y__o'*x__o')+((-1*y__o')*n__o'))+(((-1*x__o')+n__o')*m__o')))+1,((1+1)+((-1*x__o')+n__o'))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.228s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedNestedMultipleDep.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(n__o'*m__o'))+n__o')+1,((1+1)+n__o')+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.244s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedpldi2.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(((1+1)+n__o')+(n__o'+(-1*m__o')))+1,(1+1)+1,(1+1)+1,((1+1)+n__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.220s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedpldi3.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+(n__o'*m__o'))+n__o')+1)+1,((1+1)+1)+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.269s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedpldi4.c">
<rank>
<entry> </entry>
<result>max([((1+1)+1)+1,((((1+1)+(-1+m__o'))+((1+n__o')+(-1*m__o')))+1)+1,(1+1)+1,(((1+1)+((1+n__o')+(-1*m__o')))+1)+1,((((1+1)+(n__o'+(-1*m__o')))+((1+n__o')+(-1*m__o')))+1)+1,((1+1)+1)+1,((1+1)+1)+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.275s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedSimpleMultiple.c">
<rank>
<entry> </entry>
<result>max([((1+1)+n__o')+1,(((1+1)+m__o')+n__o')+1,(1+1)+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.257s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedSimpleMultipleDep.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.152s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/speedSingleSingle2.c">
<rank>
<entry> </entry>
<result>max([((((1+1)+1)+n__o')+((-1*n__o')+m__o'))+1,(((1+1)+1)+((-1*n__o')+m__o'))+1,((1+1)+1)+1,(((1+1)+1)+n__o')+1]) </result>
<complexity>n</complexity>
<time>0m0.673s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/speedSingleSingle.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+n__o')+n__o')+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.173s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/terminate.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,(1+1)+1,((1+1)+(((101+k__o')+(-1*j__o'))+(-1*i__o')))+1]) </result>
<complexity>n</complexity>
<time>0m0.157s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/terminatorbubble.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.082s </time>
<error>Syntax error: file main.fst, line 85, characters 20-21: '?'.
Fatal error: exception Pervasives.Exit</error>
</rank>
</example>
<example name="WTC_V2/unperfect.c">
<rank>
<entry> </entry>
<result> </result>
<complexity> </complexity>
<time>0m0.109s </time>
<error>Ranking::get_ranking_function: No ranking function</error>
</rank>
</example>
<example name="WTC_V2/wcet0.c">
<rank>
<entry> </entry>
<result>max([(1+1)+1,((1+1)+(-1+n__o'))+1]) </result>
<complexity>n</complexity>
<time>0m0.102s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/wcet1.c">
<rank>
<entry> </entry>
<result>max([((1+1)+(-1+n__o'))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.091s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/wcet2.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+(6+(-1*i__o')))+(54+(-11*i__o')))+1,(((1+1)+(6+(-1*i__o')))+21)+1,((1+1)+(6+(-1*i__o')))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.736s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/while2.c">
<rank>
<entry> </entry>
<result>max([(((1+1)+N__o')+(N__o'*N__o'))+1,(1+1)+1]) </result>
<complexity>n^2</complexity>
<time>0m0.062s </time>
<error></error>
</rank>
</example>
<example name="WTC_V2/wise.c">
<rank>
<entry> </entry>
<result>max([((1+1)+((-2+(-1*y__o'))+x__o'))+1,((1+1)+((-2+y__o')+(-1*x__o')))+1,(1+1)+1]) </result>
<complexity>n</complexity>
<time>0m0.052s </time>
<error></error>
</rank>
</example>
</examples>
