This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_start(D,E,F) -> eval_send_tree_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_start(A,B,C) -> eval_send_tree_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_bb0_in(D,E,F) -> eval_send_tree_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_bb0_in(A,B,C) -> eval_send_tree_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_0(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_0(D,E,F) -> eval_send_tree_0(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_0(A,B,C) -> eval_send_tree_0(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_1(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_1(D,E,F) -> eval_send_tree_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_1(A,B,C) -> eval_send_tree_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_2(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_2(D,E,F) -> eval_send_tree_2(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_2(A,B,C) -> eval_send_tree_2(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_3(D,E,F) -> eval_send_tree_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_3(A,B,C) -> eval_send_tree_3(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_4(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_4(D,E,F) -> eval_send_tree_4(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_4(A,B,C) -> eval_send_tree_4(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_5(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_5(D,E,F) -> eval_send_tree_5(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_5(A,B,C) -> eval_send_tree_5(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_6(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_6(D,E,F) -> eval_send_tree_6(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_6(A,B,C) -> eval_send_tree_6(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_7(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_7(D,E,F) -> eval_send_tree_7(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_7(A,B,C) -> eval_send_tree_7(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_8(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_8(D,E,F) -> eval_send_tree_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_8(A,B,C) -> eval_send_tree_8(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_send_tree_9(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A+1)+10*nat(A+1)+2*nat(A) 

  * LOOPS eval_send_tree_9(D,E,F) -> eval_send_tree_9(G,H,I)

  * Ranking function: N/A

  * Invariants eval_send_tree_9(A,B,C) -> eval_send_tree_9(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_send_tree_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_send_tree_bb1_in(C,D) -> loop_cont_eval_send_tree_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_send_tree_bb1_in(A,B) -> loop_cont_eval_send_tree_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_send_tree_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_send_tree_bb9_in -> eval_send_tree_bb9_in

  * Ranking function: N/A

  * Invariants eval_send_tree_bb9_in -> eval_send_tree_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_send_tree_bb1_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 2*nat(A-E+1)+10*nat(A+D-E+1)+2*nat(A+D-E) 

  * LOOPS eval_send_tree_bb1_in(F,G,H,I,J) -> eval_send_tree_bb1_in(K,L,M,N,O)
     - [F=K,G=L,H=M,J+1=O,I+1=N,G>=N+1,F>=J]
     - [F=K,G=L,H=M,J+1=O,I+1=N,G>=N+1,F>=J]
     - [M>=I+2,G>=I+2,F+1>=O,F=K,H=M,J+1=O,N=0,G=L]
     - [J+1=O,G=L,N=0,H=M,F=K,F+1>=O,G>=I+2,I+1>=M]
     - [J+1=O,G=L,N=0,H=M,F=K,F+1>=O,G>=I+2,I+1>=M]
     - [G=L,F=K,N=0,H=M,J+1=O,F+1>=O,G>=I+2,I+1>=M]
     - [I+1>=G,M>=I+2,F+1>=O,F=K,H=M,J+1=O,N=0,G=L]
     - [J+1=O,G=L,N=0,H=M,F=K,F>=J,I+1>=M,I+1>=G]
     - [F=K,G=L,N=0,H=M,J+1=O,I+1>=M,F>=J,I+1>=G]
     - [G=L,F=K,N=0,H=M,J+1=O,F+1>=O,I+1>=M,I+1>=G]

  * Ranking function: nat(F-J+1)

  * Invariants eval_send_tree_bb1_in(A,B,C,D,E) -> eval_send_tree_bb1_in(F,G,H,I,J)

     entry  : [E=0,D=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,E=0,D=0]
     rec    : [C=H,B=G,A=F,E=0,D=0,A+1>=J,J>=I,I>=0,J>=1]
     inv    : [I>=0,J>=I,A=F,B=G,C=H,E=0,D=0]

CRS eval_send_tree_bb5_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: nat(G-1) 

  * LOOPS eval_send_tree_bb5_in(H,I,J,K,L,M,N) -> eval_send_tree_bb5_in(O,P,Q,R,S,T,U)
     - [N=U+1,I=P,J=Q,K=R,L=S,M=T,H=O,U>=1]

  * Ranking function: nat(N-1)

  * Invariants eval_send_tree_bb5_in(A,B,C,D,E,F,G) -> eval_send_tree_bb5_in(H,I,J,K,L,M,N)

     entry  : [C>=D+2,E>=D,D>=0,A>=E,D+1=F,D+1=G]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,C>=D+2,E>=D,D>=0,A>=E,D+1=F,D+1=G]
     rec    : [D+1=M,E=L,D=K,C=J,B=I,A=H,D+1=G,D+1=F,E>=D,A>=E,N>=1,C>=D+2,D>=N]
     inv    : [D+1>=N,A>=E,C>=D+2,N>=1,E>=D,D+1=G,A=H,B=I,C=J,D=K,E=L,D+1=M,D+1=F]


