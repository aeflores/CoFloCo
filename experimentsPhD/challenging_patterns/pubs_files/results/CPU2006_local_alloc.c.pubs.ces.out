This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_start(D,E,F) -> eval_local_alloc_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_start(A,B,C) -> eval_local_alloc_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_bb0_in(D,E,F) -> eval_local_alloc_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_bb0_in(A,B,C) -> eval_local_alloc_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_0(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_0(D,E,F) -> eval_local_alloc_0(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_0(A,B,C) -> eval_local_alloc_0(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_1(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_1(D,E,F) -> eval_local_alloc_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_1(A,B,C) -> eval_local_alloc_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_2(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_2(D,E,F) -> eval_local_alloc_2(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_2(A,B,C) -> eval_local_alloc_2(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_3(D,E,F) -> eval_local_alloc_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_3(A,B,C) -> eval_local_alloc_3(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_4(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_4(D,E,F) -> eval_local_alloc_4(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_4(A,B,C) -> eval_local_alloc_4(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_5(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_5(D,E,F) -> eval_local_alloc_5(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_5(A,B,C) -> eval_local_alloc_5(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_6(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_6(D,E,F) -> eval_local_alloc_6(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_6(A,B,C) -> eval_local_alloc_6(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_7(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_7(D,E,F) -> eval_local_alloc_7(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_7(A,B,C) -> eval_local_alloc_7(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_8(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_8(D,E,F) -> eval_local_alloc_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_8(A,B,C) -> eval_local_alloc_8(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_local_alloc_9(A,B,C)

  * Non Asymptotic Upper Bound: 1+3*nat(B)+nat(B)*nat(C-1) 

  * LOOPS eval_local_alloc_9(D,E,F) -> eval_local_alloc_9(G,H,I)

  * Ranking function: N/A

  * Invariants eval_local_alloc_9(A,B,C) -> eval_local_alloc_9(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_local_alloc_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_local_alloc_bb1_in(C,D) -> loop_cont_eval_local_alloc_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_local_alloc_bb1_in(A,B) -> loop_cont_eval_local_alloc_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_local_alloc_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_local_alloc_bb6_in -> eval_local_alloc_bb6_in

  * Ranking function: N/A

  * Invariants eval_local_alloc_bb6_in -> eval_local_alloc_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_local_alloc_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 3*nat(A-C)+nat(A-C)*nat(B-1) 

  * LOOPS eval_local_alloc_bb1_in(E,F,G,H) -> eval_local_alloc_bb1_in(I,J,K,L)
     - [F>=H+1,E>=K,G+1=K,L=0,E=I,F=J]
     - [E=I,F=J,L=0,G+1=K,E>=K,H>=F]

  * Ranking function: nat(E-G)

  * Invariants eval_local_alloc_bb1_in(A,B,C,D) -> eval_local_alloc_bb1_in(E,F,G,H)

     entry  : [C=0]
     non-rec: [A=E,B=F,C=G,D=H,C=0]
     rec    : [H=0,B=F,A=E,C=0,A>=G,G>=1]
     inv    : [G>=0,B=F,A=E,C=0]

CRS eval_local_alloc_bb3_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: nat(D-E) 

  * LOOPS eval_local_alloc_bb3_in(F,G,H,I,J) -> eval_local_alloc_bb3_in(K,L,M,N,O)
     - [J+1=O,F=K,G=L,H=M,I=N,I>=J+1]

  * Ranking function: nat(I-J)

  * Invariants eval_local_alloc_bb3_in(A,B,C,D,E) -> eval_local_alloc_bb3_in(F,G,H,I,J)

     entry  : [B>=D+1,A>=C+1,C>=0,E=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,B>=D+1,A>=C+1,C>=0,E=0]
     rec    : [D=I,C=H,B=G,A=F,E=0,A>=C+1,B>=D+1,C>=0,D>=J,J>=1]
     inv    : [J>=0,A>=C+1,B>=D+1,C>=0,A=F,B=G,C=H,D=I,E=0]


