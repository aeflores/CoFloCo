This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_start(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_start(B) -> eval_cryptRandWriteFile_start(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_start(A) -> eval_cryptRandWriteFile_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_bb0_in(B) -> eval_cryptRandWriteFile_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_bb0_in(A) -> eval_cryptRandWriteFile_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_0(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_0(B) -> eval_cryptRandWriteFile_0(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_0(A) -> eval_cryptRandWriteFile_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_1(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_1(B) -> eval_cryptRandWriteFile_1(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_1(A) -> eval_cryptRandWriteFile_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_2(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_2(B) -> eval_cryptRandWriteFile_2(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_2(A) -> eval_cryptRandWriteFile_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_3(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_3(B) -> eval_cryptRandWriteFile_3(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_3(A) -> eval_cryptRandWriteFile_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandWriteFile_4(A)

  * Non Asymptotic Upper Bound: 1+513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_4(B) -> eval_cryptRandWriteFile_4(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_4(A) -> eval_cryptRandWriteFile_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_cryptRandWriteFile_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cryptRandWriteFile_bb1_in(C,D) -> loop_cont_eval_cryptRandWriteFile_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cryptRandWriteFile_bb1_in(A,B) -> loop_cont_eval_cryptRandWriteFile_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_cryptRandWriteFile_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandWriteFile_bb6_in -> eval_cryptRandWriteFile_bb6_in

  * Ranking function: N/A

  * Invariants eval_cryptRandWriteFile_bb6_in -> eval_cryptRandWriteFile_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cryptRandWriteFile_bb1_in(A)

  * Non Asymptotic Upper Bound: 513/128*nat(A) 

  * LOOPS eval_cryptRandWriteFile_bb1_in(B) -> eval_cryptRandWriteFile_bb1_in(C)
     - [255>=B,B>=1,C=0]
     - [B>=256,B=C+256]

  * Ranking function: nat(B)

  * Invariants eval_cryptRandWriteFile_bb1_in(A) -> eval_cryptRandWriteFile_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B]

CRS eval_cryptRandWriteFile_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(B-C) 

  * LOOPS eval_cryptRandWriteFile_bb3_in(D,E,F) -> eval_cryptRandWriteFile_bb3_in(G,H,I)
     - [F+1=I,D=G,E=H,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_cryptRandWriteFile_bb3_in(A,B,C) -> eval_cryptRandWriteFile_bb3_in(D,E,F)

     entry  : [256>=B,B>=1,A>=B,C=0]
     non-rec: [A=D,B=E,C=F,256>=B,B>=1,A>=B,C=0]
     rec    : [B=E,A=D,C=0,A>=B,256>=B,B>=F,F>=1]
     inv    : [B>=F,B>=1,F>=0,256>=B,A>=B,A=D,B=E,C=0]


