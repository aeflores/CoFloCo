This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_start(B) -> eval_hc_compute_start(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_start(A) -> eval_hc_compute_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_bb0_in(B) -> eval_hc_compute_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_bb0_in(A) -> eval_hc_compute_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_0(B) -> eval_hc_compute_0(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_0(A) -> eval_hc_compute_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_1(B) -> eval_hc_compute_1(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_1(A) -> eval_hc_compute_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_2(B) -> eval_hc_compute_2(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_2(A) -> eval_hc_compute_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_3(B) -> eval_hc_compute_3(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_3(A) -> eval_hc_compute_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_hc_compute_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_4(B) -> eval_hc_compute_4(C)

  * Ranking function: N/A

  * Invariants eval_hc_compute_4(A) -> eval_hc_compute_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_hc_compute_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_hc_compute_bb1_in(C,D) -> loop_cont_eval_hc_compute_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_hc_compute_bb1_in(A,B) -> loop_cont_eval_hc_compute_bb1_in(C,D)

     entry  : [A=5]
     non-rec: [A=C,B=D,A=5]
     rec    : [0=1]
     inv    : [A=5,C=5,B=D]

CRS eval_hc_compute_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_hc_compute_bb9_in -> eval_hc_compute_bb9_in

  * Ranking function: N/A

  * Invariants eval_hc_compute_bb9_in -> eval_hc_compute_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_hc_compute_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_hc_compute_bb1_in/1])) 

  * LOOPS eval_hc_compute_bb1_in(B) -> eval_hc_compute_bb1_in(C)
     - [B>=C+1,B>=1]
     - [B>=C+1,B>=1]

  * Ranking function: nat(B)

  * Invariants eval_hc_compute_bb1_in(A) -> eval_hc_compute_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=1,A>=B+1]
     inv    : [A>=B]

CRS eval_hc_compute_bb4_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 4*nat(E)+4*nat(D)*nat(E) 

  * LOOPS eval_hc_compute_bb4_in(F,G,H,I,J) -> eval_hc_compute_bb4_in(K,L,M,N,O)
     - [O>=0,J=O+1,I=N,H=M,G=L,F=K]
     - [O>=0,J=O+1,I=N,H=M,G=L,F=K]

  * Ranking function: nat(J)

  * Invariants eval_hc_compute_bb4_in(A,B,C,D,E) -> eval_hc_compute_bb4_in(F,G,H,I,J)

     entry  : [E>=1,C+E>=1,A=C+E,D=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,E>=1,C+E>=1,A=C+E,D=E]
     rec    : [A=C+I,C=H,B=G,A=F,A=C+E,A=C+D,A>=1,J>=0,A>=C+J+1]
     inv    : [J>=0,A>=C+1,A>=C+J,A>=1,A=C+E,A=F,B=G,C=H,A=C+I,A=C+D]

CRS eval_hc_compute_bb5_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 2*nat(F) 

  * LOOPS eval_hc_compute_bb5_in(G,H,I,J,K,L) -> eval_hc_compute_bb5_in(M,N,O,P,Q,R)
     - [L=R+1,G=M,H=N,I=O,J=P,K=Q,R>=0]
     - [L=R+1,G=M,H=N,I=O,J=P,K=Q,R>=0]

  * Ranking function: nat(L)

  * Invariants eval_hc_compute_bb5_in(A,B,C,D,E,F) -> eval_hc_compute_bb5_in(G,H,I,J,K,L)

     entry  : [A>=C+F,F>=1,A>=1,A=C+D,E=F]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,A>=C+F,F>=1,A>=1,A=C+D,E=F]
     rec    : [E=K,A=C+J,C=I,B=H,A=G,E=F,A=C+D,A>=1,L>=0,A>=C+E,E>=L+1]
     inv    : [E>=1,L>=0,E>=L,A>=C+E,A>=1,E=F,A=G,B=H,C=I,A=C+J,E=K,A=C+D]

CRS eval_hc_compute_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 2*nat(B-1) 

  * LOOPS eval_hc_compute_bb2_in(C,D) -> eval_hc_compute_bb2_in(E,F)
     - [D=F+1,C=E,D>=2]
     - [D=F+1,C=E,D>=2]

  * Ranking function: nat(D-1)

  * Invariants eval_hc_compute_bb2_in(A,B) -> eval_hc_compute_bb2_in(C,D)

     entry  : [A>=1,A=B]
     non-rec: [A=C,B=D,A>=1,A=B]
     rec    : [A=C,A=B,D>=1,A>=D+1]
     inv    : [A>=D,D>=1,A=C,A=B]


