This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_start(B) -> eval_subsetdump_start(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_start(A) -> eval_subsetdump_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_bb0_in(B) -> eval_subsetdump_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_bb0_in(A) -> eval_subsetdump_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_0(B) -> eval_subsetdump_0(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_0(A) -> eval_subsetdump_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_1(B) -> eval_subsetdump_1(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_1(A) -> eval_subsetdump_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_2(B) -> eval_subsetdump_2(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_2(A) -> eval_subsetdump_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_3(B) -> eval_subsetdump_3(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_3(A) -> eval_subsetdump_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_4(B) -> eval_subsetdump_4(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_4(A) -> eval_subsetdump_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_subsetdump_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_5(B) -> eval_subsetdump_5(C)

  * Ranking function: N/A

  * Invariants eval_subsetdump_5(A) -> eval_subsetdump_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_subsetdump_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_subsetdump_bb1_in(C,D) -> loop_cont_eval_subsetdump_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_subsetdump_bb1_in(A,B) -> loop_cont_eval_subsetdump_bb1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_subsetdump_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_subsetdump_bb10_in -> eval_subsetdump_bb10_in

  * Ranking function: N/A

  * Invariants eval_subsetdump_bb10_in -> eval_subsetdump_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_subsetdump_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_subsetdump_bb1_in/2])) 

  * LOOPS eval_subsetdump_bb1_in(C,D) -> eval_subsetdump_bb1_in(E,F)
     - [F>=D+1,C>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [C>=D+1,F>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [F>=D+1,C>=D+1,C=E]
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_subsetdump_bb1_in(A,B) -> eval_subsetdump_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A>=1,D>=1,A=C,B=0]
     inv    : [D>=0,A=C,B=0]

CRS eval_subsetdump_bb7_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: nat(D-F) 

  * LOOPS eval_subsetdump_bb7_in(G,H,I,J,K,L) -> eval_subsetdump_bb7_in(M,N,O,P,Q,R)
     - [L+1=R,G=M,H=N,I=O,J=P,K=Q,J>=L+1]

  * Ranking function: nat(J-L)

  * Invariants eval_subsetdump_bb7_in(A,B,C,D,E,F) -> eval_subsetdump_bb7_in(G,H,I,J,K,L)

     entry  : [B>=0,A>=B+1,D>=B,B=F]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,B>=0,A>=B+1,D>=B,B=F]
     rec    : [E=K,D=J,C=I,B=H,A=G,B=F,D>=L,A>=B+1,B>=0,L>=B+1]
     inv    : [L>=B,A>=B+1,B>=0,D>=L,A=G,B=H,C=I,D=J,E=K,B=F]

CRS eval_subsetdump_bb3_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(A-D) 

  * LOOPS eval_subsetdump_bb3_in(E,F,G,H) -> eval_subsetdump_bb3_in(I,J,K,L)
     - [H+1=L,E=I,F=J,G=K,E>=H+1]

  * Ranking function: nat(E-H)

  * Invariants eval_subsetdump_bb3_in(A,B,C,D) -> eval_subsetdump_bb3_in(E,F,G,H)

     entry  : [B>=0,A>=B+1,B=D]
     non-rec: [A=E,B=F,C=G,D=H,B>=0,A>=B+1,B=D]
     rec    : [C=G,B=F,A=E,B=D,B>=0,A>=H,H>=B+1]
     inv    : [A>=H,A>=B+1,H>=B,B>=0,A=E,B=F,C=G,B=D]


