This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_start(B) -> eval_asctoeg_start(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_start(A) -> eval_asctoeg_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_bb0_in(B) -> eval_asctoeg_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_bb0_in(A) -> eval_asctoeg_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_0(B) -> eval_asctoeg_0(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_0(A) -> eval_asctoeg_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_1(B) -> eval_asctoeg_1(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_1(A) -> eval_asctoeg_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_2(B) -> eval_asctoeg_2(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_2(A) -> eval_asctoeg_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_3(B) -> eval_asctoeg_3(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_3(A) -> eval_asctoeg_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_asctoeg_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_4(B) -> eval_asctoeg_4(C)

  * Ranking function: N/A

  * Invariants eval_asctoeg_4(A) -> eval_asctoeg_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_asctoeg_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_asctoeg_bb1_in(C,D) -> loop_cont_eval_asctoeg_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_asctoeg_bb1_in(A,B) -> loop_cont_eval_asctoeg_bb1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_asctoeg_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_asctoeg_bb6_in -> eval_asctoeg_bb6_in

  * Ranking function: N/A

  * Invariants eval_asctoeg_bb6_in -> eval_asctoeg_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_asctoeg_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_asctoeg_bb1_in/2])) 

  * LOOPS eval_asctoeg_bb1_in(C,D) -> eval_asctoeg_bb1_in(E,F)
     - [F>=0,D=F+1,C=E]
     - [F>=0,D=F+1,C=E]
     - [F>=0,D=F+1,C=E]
     - [F>=0,D=F+1,C=E]

  * Ranking function: nat(D)

  * Invariants eval_asctoeg_bb1_in(A,B) -> eval_asctoeg_bb1_in(C,D)

     entry  : [A=B]
     non-rec: [A=C,B=D,A=B]
     rec    : [A=C,A=B,D>=0,A>=D+1]
     inv    : [A>=D,A=C,A=B]

CRS eval_asctoeg__critedge_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2*nat(D-1) 

  * LOOPS eval_asctoeg__critedge_in(E,F,G,H) -> eval_asctoeg__critedge_in(I,J,K,L)
     - [H=L+1,E=I,F=J,G=K,H>=2]
     - [H=L+1,E=I,F=J,G=K,H>=2]

  * Ranking function: nat(H-1)

  * Invariants eval_asctoeg__critedge_in(A,B,C,D) -> eval_asctoeg__critedge_in(E,F,G,H)

     entry  : [C>=0,A>=B,B>=1,C=D]
     non-rec: [A=E,B=F,C=G,D=H,C>=0,A>=B,B>=1,C=D]
     rec    : [C=G,B=F,A=E,C=D,A>=B,H>=1,B>=1,C>=H+1]
     inv    : [C>=H,H>=0,A>=B,B>=1,A=E,B=F,C=G,C=D]

CRS eval_asctoeg_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(A-C) 

  * LOOPS eval_asctoeg_bb2_in(D,E,F) -> eval_asctoeg_bb2_in(G,H,I)
     - [F+1=I,D=G,E=H,D>=F+1]
     - [F+1=I,D=G,E=H,D>=F+1]

  * Ranking function: nat(D-F)

  * Invariants eval_asctoeg_bb2_in(A,B,C) -> eval_asctoeg_bb2_in(D,E,F)

     entry  : [A>=B,B>=1,C=0]
     non-rec: [A=D,B=E,C=F,A>=B,B>=1,C=0]
     rec    : [B=E,A=D,C=0,A>=F,A>=B,B>=1,F>=1]
     inv    : [A>=F,F>=0,A>=B,B>=1,A=D,B=E,C=0]


