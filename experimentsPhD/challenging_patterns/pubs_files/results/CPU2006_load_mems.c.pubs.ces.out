This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_start(D,E,F) -> eval_load_mems_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_start(A,B,C) -> eval_load_mems_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_bb0_in(D,E,F) -> eval_load_mems_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_bb0_in(A,B,C) -> eval_load_mems_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_0(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_0(D,E,F) -> eval_load_mems_0(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_0(A,B,C) -> eval_load_mems_0(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_1(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_1(D,E,F) -> eval_load_mems_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_1(A,B,C) -> eval_load_mems_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_2(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_2(D,E,F) -> eval_load_mems_2(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_2(A,B,C) -> eval_load_mems_2(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_3(D,E,F) -> eval_load_mems_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_3(A,B,C) -> eval_load_mems_3(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_4(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_4(D,E,F) -> eval_load_mems_4(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_4(A,B,C) -> eval_load_mems_4(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_5(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_5(D,E,F) -> eval_load_mems_5(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_5(A,B,C) -> eval_load_mems_5(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_load_mems_6(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_6(D,E,F) -> eval_load_mems_6(G,H,I)

  * Ranking function: N/A

  * Invariants eval_load_mems_6(A,B,C) -> eval_load_mems_6(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_load_mems_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_load_mems_bb1_in(C,D) -> loop_cont_eval_load_mems_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_load_mems_bb1_in(A,B) -> loop_cont_eval_load_mems_bb1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_load_mems_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_load_mems_bb9_in -> eval_load_mems_bb9_in

  * Ranking function: N/A

  * Invariants eval_load_mems_bb9_in -> eval_load_mems_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_load_mems_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(C)+nat(C)*c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_bb1_in(D,E,F) -> eval_load_mems_bb1_in(G,H,I)
     - [F>=1,F=I+1,H=0]

  * Ranking function: nat(F)

  * Invariants eval_load_mems_bb1_in(A,B,C) -> eval_load_mems_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [E=0,F>=0,C>=F+1]
     inv    : [C>=F]

CRS eval_load_mems_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_load_mems_bb2_in/5])) 

  * LOOPS eval_load_mems_bb2_in(F,G,H,I,J) -> eval_load_mems_bb2_in(K,L,M,N,O)
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [2>=O,F=K,N=0,H=M,G=L,J+1=O]
     - [J+1=O,F=K,G=L,H=M,N=0,1>=J]

  * Ranking function: nat(-J+2)

  * Invariants eval_load_mems_bb2_in(A,B,C,D,E) -> eval_load_mems_bb2_in(F,G,H,I,J)

     entry  : [C>=1,A=D,B=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C>=1,A=D,B=E]
     rec    : [I=0,C=H,B=G,A=F,B=E,A=D,2>=J,C>=1,J>=B+1]
     inv    : [J>=B,C>=1,A=F,B=G,C=H,A=D,B=E]

CRS eval_load_mems_bb4_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: nat(-G+64) 

  * LOOPS eval_load_mems_bb4_in(H,I,J,K,L,M,N) -> eval_load_mems_bb4_in(O,P,Q,R,S,T,U)
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,63>=N]

  * Ranking function: nat(-N+64)

  * Invariants eval_load_mems_bb4_in(A,B,C,D,E,F,G) -> eval_load_mems_bb4_in(H,I,J,K,L,M,N)

     entry  : [C>=1,1>=E,E>=B,D=G]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,C>=1,1>=E,E>=B,D=G]
     rec    : [F=M,E=L,D=K,C=J,B=I,A=H,D=G,E>=B,1>=E,64>=N,C>=1,N>=D+1]
     inv    : [N>=D,C>=1,1>=E,E>=B,A=H,B=I,C=J,D=K,E=L,F=M,D=G]


