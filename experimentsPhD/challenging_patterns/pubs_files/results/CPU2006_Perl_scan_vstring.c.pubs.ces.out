This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_start(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_start(C,D) -> eval_Perl_scan_vstring_start(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_start(A,B) -> eval_Perl_scan_vstring_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_bb0_in(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_bb0_in(C,D) -> eval_Perl_scan_vstring_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_bb0_in(A,B) -> eval_Perl_scan_vstring_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_0(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_0(C,D) -> eval_Perl_scan_vstring_0(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_0(A,B) -> eval_Perl_scan_vstring_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_1(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_1(C,D) -> eval_Perl_scan_vstring_1(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_1(A,B) -> eval_Perl_scan_vstring_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_2(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_2(C,D) -> eval_Perl_scan_vstring_2(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_2(A,B) -> eval_Perl_scan_vstring_2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_3(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_3(C,D) -> eval_Perl_scan_vstring_3(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_3(A,B) -> eval_Perl_scan_vstring_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_4(A,B)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_4(C,D) -> eval_Perl_scan_vstring_4(E,F)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_4(A,B) -> eval_Perl_scan_vstring_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Perl_scan_vstring_5(A,B,C)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_5(D,E,F) -> eval_Perl_scan_vstring_5(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_5(A,B,C) -> eval_Perl_scan_vstring_5(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_6(A,B,C,D)

  * Non Asymptotic Upper Bound: max([2+2*nat(B-D+1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(B-D)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(B-D)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_6(E,F,G,H) -> eval_Perl_scan_vstring_6(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_6(A,B,C,D) -> eval_Perl_scan_vstring_6(E,F,G,H)

     entry  : [A+1=D]
     non-rec: [A=E,B=F,C=G,D=H,A+1=D]
     rec    : [0=1]
     inv    : [A+1=D,A=E,B=F,C=G,A+1=H]

CRS eval_Perl_scan_vstring_7(A,B,C,D)

  * Non Asymptotic Upper Bound: max([2+2*nat(-A+B)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(B-D)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])),2+2*nat(-A+B-1)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3]))]) 

  * LOOPS eval_Perl_scan_vstring_7(E,F,G,H) -> eval_Perl_scan_vstring_7(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_7(A,B,C,D) -> eval_Perl_scan_vstring_7(E,F,G,H)

     entry  : [A+1=D]
     non-rec: [A=E,B=F,C=G,D=H,A+1=D]
     rec    : [0=1]
     inv    : [A+1=D,A=E,B=F,C=G,A+1=H]

CRS eval_Perl_scan_vstring_8(A,B,C)

  * Non Asymptotic Upper Bound: 2+2*nat(B-C)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_8(D,E,F) -> eval_Perl_scan_vstring_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_8(A,B,C) -> eval_Perl_scan_vstring_8(D,E,F)

     entry  : [A+1>=C,C>=A]
     non-rec: [A=D,B=E,C=F,A+1>=C,C>=A]
     rec    : [0=1]
     inv    : [A+1>=C,C>=A,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_9(A,B,C)

  * Non Asymptotic Upper Bound: 2+2*nat(B-C)+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_9(D,E,F) -> eval_Perl_scan_vstring_9(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_9(A,B,C) -> eval_Perl_scan_vstring_9(D,E,F)

     entry  : [A+1>=C,C>=A]
     non-rec: [A=D,B=E,C=F,A+1>=C,C>=A]
     rec    : [0=1]
     inv    : [A+1>=C,C>=A,A=D,B=E,C=F]

CRS loop_cont_eval_Perl_scan_vstring_bb1_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS loop_cont_eval_Perl_scan_vstring_bb1_in(F,G,H,I,J) -> loop_cont_eval_Perl_scan_vstring_bb1_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_Perl_scan_vstring_bb1_in(A,B,C,D,E) -> loop_cont_eval_Perl_scan_vstring_bb1_in(F,G,H,I,J)

     entry  : [D>=B,A=4]
     non-rec: [A=F,B=G,C=H,D=I,E=J,D>=B,A=4]
     rec    : [0=1]
     inv    : [D>=B,A=4,F=4,B=G,C=H,D=I,E=J]

CRS eval_Perl_scan_vstring__critedge_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring__critedge_in(D,E,F) -> eval_Perl_scan_vstring__critedge_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring__critedge_in(A,B,C) -> eval_Perl_scan_vstring__critedge_in(D,E,F)

     entry  : [C>=A]
     non-rec: [A=D,B=E,C=F,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_14(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_14(D,E,F) -> eval_Perl_scan_vstring_14(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_14(A,B,C) -> eval_Perl_scan_vstring_14(D,E,F)

     entry  : [C>=A]
     non-rec: [A=D,B=E,C=F,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_15(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_15(E,F,G,H) -> eval_Perl_scan_vstring_15(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_15(A,B,C,D) -> eval_Perl_scan_vstring_15(E,F,G,H)

     entry  : [C>=A]
     non-rec: [A=E,B=F,C=G,D=H,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=E,B=F,C=G,D=H]

CRS eval_Perl_scan_vstring_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_bb4_in(D,E,F) -> eval_Perl_scan_vstring_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_bb4_in(A,B,C) -> eval_Perl_scan_vstring_bb4_in(D,E,F)

     entry  : [C>=A]
     non-rec: [A=D,B=E,C=F,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_16(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_16(D,E,F) -> eval_Perl_scan_vstring_16(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_16(A,B,C) -> eval_Perl_scan_vstring_16(D,E,F)

     entry  : [C>=A]
     non-rec: [A=D,B=E,C=F,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_17(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_17(E,F,G,H) -> eval_Perl_scan_vstring_17(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_17(A,B,C,D) -> eval_Perl_scan_vstring_17(E,F,G,H)

     entry  : [C>=A]
     non-rec: [A=E,B=F,C=G,D=H,C>=A]
     rec    : [0=1]
     inv    : [C>=A,A=E,B=F,C=G,D=H]

CRS eval_Perl_scan_vstring_18(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_18(F,G,H,I,J) -> eval_Perl_scan_vstring_18(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_18(A,B,C,D,E) -> eval_Perl_scan_vstring_18(F,G,H,I,J)

     entry  : [C>=A,A+1=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C>=A,A+1=E]
     rec    : [0=1]
     inv    : [C>=A,A+1=E,A=F,B=G,C=H,D=I,A+1=J]

CRS eval_Perl_scan_vstring_19(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_19(F,G,H,I,J) -> eval_Perl_scan_vstring_19(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_19(A,B,C,D,E) -> eval_Perl_scan_vstring_19(F,G,H,I,J)

     entry  : [C>=A,A+1=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C>=A,A+1=E]
     rec    : [0=1]
     inv    : [C>=A,A+1=E,A=F,B=G,C=H,D=I,A+1=J]

CRS eval_Perl_scan_vstring_20(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_20(D,E,F) -> eval_Perl_scan_vstring_20(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_20(A,B,C) -> eval_Perl_scan_vstring_20(D,E,F)

     entry  : [B+1>=C]
     non-rec: [A=D,B=E,C=F,B+1>=C]
     rec    : [0=1]
     inv    : [B+1>=C,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_21(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_21(D,E,F) -> eval_Perl_scan_vstring_21(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_21(A,B,C) -> eval_Perl_scan_vstring_21(D,E,F)

     entry  : [B+1>=C]
     non-rec: [A=D,B=E,C=F,B+1>=C]
     rec    : [0=1]
     inv    : [B+1>=C,A=D,B=E,C=F]

CRS eval_Perl_scan_vstring_22(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring_22(D,E,F) -> eval_Perl_scan_vstring_22(G,H,I)

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_22(A,B,C) -> eval_Perl_scan_vstring_22(D,E,F)

     entry  : [B+1>=C]
     non-rec: [A=D,B=E,C=F,B+1>=C]
     rec    : [0=1]
     inv    : [B+1>=C,A=D,B=E,C=F]

CRS loop_cont_eval_Perl_scan_vstring__critedge2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_Perl_scan_vstring__critedge2_in(C,D) -> loop_cont_eval_Perl_scan_vstring__critedge2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_Perl_scan_vstring__critedge2_in(A,B) -> loop_cont_eval_Perl_scan_vstring__critedge2_in(C,D)

     entry  : [A=5]
     non-rec: [A=C,B=D,A=5]
     rec    : [0=1]
     inv    : [A=5,C=5,B=D]

CRS eval_Perl_scan_vstring__critedge2_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_Perl_scan_vstring__critedge2_in/3])) 

  * LOOPS eval_Perl_scan_vstring__critedge2_in(D,E,F) -> eval_Perl_scan_vstring__critedge2_in(G,H,I)
     - [D>=I+1,H>=I,E+1=I,D=G]
     - [D>=I+1,H>=I,E+1=I,D=G]
     - [H>=I,D>=I+1,D=G,E+1=I]
     - [H>=I,D>=I+1,D=G,E+1=I]

  * Ranking function: nat(D-E-1)

  * Invariants eval_Perl_scan_vstring__critedge2_in(A,B,C) -> eval_Perl_scan_vstring__critedge2_in(D,E,F)

     entry  : [B+1>=C]
     non-rec: [A=D,B=E,C=F,B+1>=C]
     rec    : [F>=B+1,B+1>=C,E>=F,A>=F+1,A=D]
     inv    : [E>=B,E+1>=F,B+1>=C,F>=C,A=D]

CRS eval_Perl_scan_vstring_bb9_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: 2*nat(A-G) 

  * LOOPS eval_Perl_scan_vstring_bb9_in(H,I,J,K,L,M,N) -> eval_Perl_scan_vstring_bb9_in(O,P,Q,R,S,T,U)
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,H>=N+1]
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,H>=N+1]

  * Ranking function: nat(H-N)

  * Invariants eval_Perl_scan_vstring_bb9_in(A,B,C,D,E,F,G) -> eval_Perl_scan_vstring_bb9_in(H,I,J,K,L,M,N)

     entry  : [C>=D,B+1>=C,A>=B+2,B>=D,B+1=F,B+1=G]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,C>=D,B+1>=C,A>=B+2,B>=D,B+1=F,B+1=G]
     rec    : [B+1=M,E=L,D=K,C=J,B=I,A=H,B+1=G,B+1=F,A>=N,B>=D,B+1>=C,N>=B+2,C>=D]
     inv    : [C>=D,B>=D,B+1>=C,A>=N,A>=B+2,N>=B+1,B+1=G,A=H,B=I,C=J,D=K,E=L,B+1=M,B+1=F]

CRS eval_Perl_scan_vstring_bb5_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(-C+D) 

  * LOOPS eval_Perl_scan_vstring_bb5_in(E,F,G,H) -> eval_Perl_scan_vstring_bb5_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,L>=G]

  * Ranking function: nat(-G+H)

  * Invariants eval_Perl_scan_vstring_bb5_in(A,B,C,D) -> eval_Perl_scan_vstring_bb5_in(E,F,G,H)

     entry  : [B+1>=C,B=D]
     non-rec: [A=E,B=F,C=G,D=H,B+1>=C,B=D]
     rec    : [C=G,B=F,A=E,B=D,H>=C,B>=H+1]
     inv    : [H+1>=C,B>=H,A=E,B=F,C=G,B=D]

CRS eval_Perl_scan_vstring_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Perl_scan_vstring_bb12_in -> eval_Perl_scan_vstring_bb12_in

  * Ranking function: N/A

  * Invariants eval_Perl_scan_vstring_bb12_in -> eval_Perl_scan_vstring_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Perl_scan_vstring_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(B-C) 

  * LOOPS eval_Perl_scan_vstring_bb1_in(D,E,F) -> eval_Perl_scan_vstring_bb1_in(G,H,I)
     - [F+1=I,D=G,E=H,E>=F+1]
     - [F+1=I,D=G,E=H,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_Perl_scan_vstring_bb1_in(A,B,C) -> eval_Perl_scan_vstring_bb1_in(D,E,F)

     entry  : [A+1>=C,C>=A]
     non-rec: [A=D,B=E,C=F,A+1>=C,C>=A]
     rec    : [B=E,A=D,B>=F,C>=A,A+1>=C,F>=C+1]
     inv    : [A+1>=C,F>=C,C>=A,B=E,A=D]


