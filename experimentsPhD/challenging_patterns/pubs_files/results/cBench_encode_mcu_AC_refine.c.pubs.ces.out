This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_start(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_start(C,D) -> eval_encode_mcu_AC_refine_start(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_start(A,B) -> eval_encode_mcu_AC_refine_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_bb0_in(C,D) -> eval_encode_mcu_AC_refine_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_bb0_in(A,B) -> eval_encode_mcu_AC_refine_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_0(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_0(C,D) -> eval_encode_mcu_AC_refine_0(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_0(A,B) -> eval_encode_mcu_AC_refine_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_1(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_1(C,D) -> eval_encode_mcu_AC_refine_1(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_1(A,B) -> eval_encode_mcu_AC_refine_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_2(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_2(C,D) -> eval_encode_mcu_AC_refine_2(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_2(A,B) -> eval_encode_mcu_AC_refine_2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_3(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_3(C,D) -> eval_encode_mcu_AC_refine_3(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_3(A,B) -> eval_encode_mcu_AC_refine_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_4(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_4(C,D) -> eval_encode_mcu_AC_refine_4(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_4(A,B) -> eval_encode_mcu_AC_refine_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_refine_5(A,B)

  * Non Asymptotic Upper Bound: 2+nat(-A+B+1)+4*nat(-A+B+1)+nat(-1*A+1*B)/4+2*nat(-A+B+1) 

  * LOOPS eval_encode_mcu_AC_refine_5(C,D) -> eval_encode_mcu_AC_refine_5(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_5(A,B) -> eval_encode_mcu_AC_refine_5(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_encode_mcu_AC_refine_bb1_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+4*nat(B-C+1)+nat(1*B+ -1*C)/4+2*nat(B-C+1) 

  * LOOPS loop_cont_eval_encode_mcu_AC_refine_bb1_in(F,G,H,I,J) -> loop_cont_eval_encode_mcu_AC_refine_bb1_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_encode_mcu_AC_refine_bb1_in(A,B,C,D,E) -> loop_cont_eval_encode_mcu_AC_refine_bb1_in(F,G,H,I,J)

     entry  : [A=4,D=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A=4,D=0]
     rec    : [0=1]
     inv    : [A=4,D=0,F=4,B=G,C=H,I=0,E=J]

CRS loop_cont_eval_encode_mcu_AC_refine_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_encode_mcu_AC_refine_bb3_in(C,D) -> loop_cont_eval_encode_mcu_AC_refine_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_encode_mcu_AC_refine_bb3_in(A,B) -> loop_cont_eval_encode_mcu_AC_refine_bb3_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_encode_mcu_AC_refine_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_refine_bb9_in -> eval_encode_mcu_AC_refine_bb9_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_refine_bb9_in -> eval_encode_mcu_AC_refine_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_refine_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: 4*nat(A-B+C+1)+nat(A-B+C)/4+2*nat(A-B+1) 

  * LOOPS eval_encode_mcu_AC_refine_bb3_in(D,E,F) -> eval_encode_mcu_AC_refine_bb3_in(G,H,I)
     - [F+1=I,D=G,E+1=H,D>=E]
     - [E+1=H,D=G,F+1=I,D>=E]
     - [D+1>=H,E+1=H,I=0,D=G]
     - [D+1>=H,E+1=H,I=0,D=G]

  * Ranking function: nat(D-E+1)

  * Invariants eval_encode_mcu_AC_refine_bb3_in(A,B,C) -> eval_encode_mcu_AC_refine_bb3_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [A=D,C=0,A+1>=E,E>=B+F,F>=0,E>=B+1]
     inv    : [F>=0,E>=B+F,C=0,A=D]

CRS eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: nat(E)/8 

  * LOOPS eval_encode_mcu_AC_refine_bb6_in(F,G,H,I,J) -> eval_encode_mcu_AC_refine_bb6_in(K,L,M,N,O)
     - [J=O+16,F=K,G=L,H=M,I=N,J>=16]
     - [J=O+16,F=K,G=L,H=M,I=N,J>=16]

  * Ranking function: nat(J/16)

  * Invariants eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E) -> eval_encode_mcu_AC_refine_bb6_in(F,G,H,I,J)

     entry  : [A>=B,E>=0,C=E,D=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=B,E>=0,C=E,D=0]
     rec    : [I=0,C=H,B=G,A=F,C=E,D=0,A>=B,J>=0,C>=J+16]
     inv    : [C>=J,A>=B,J>=0,C=E,A=F,B=G,C=H,I=0,D=0]

CRS eval_encode_mcu_AC_refine_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(B-C+1) 

  * LOOPS eval_encode_mcu_AC_refine_bb1_in(D,E,F) -> eval_encode_mcu_AC_refine_bb1_in(G,H,I)
     - [F+1=I,D=G,E=H,E+1>=I]

  * Ranking function: nat(E-F+1)

  * Invariants eval_encode_mcu_AC_refine_bb1_in(A,B,C) -> eval_encode_mcu_AC_refine_bb1_in(D,E,F)

     entry  : [A=C]
     non-rec: [A=D,B=E,C=F,A=C]
     rec    : [B=E,A=D,A=C,B+1>=F,F>=A+1]
     inv    : [F>=A,A=D,B=E,A=C]


