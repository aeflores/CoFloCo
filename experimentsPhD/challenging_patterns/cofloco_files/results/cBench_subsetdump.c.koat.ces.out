Warning: Ignored call to eval_subsetdump_stop/1 in equation loop_cont_eval_subsetdump_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_subsetdump_8/7,eval_subsetdump_9/7,eval_subsetdump_bb3_in/7]
1. recursive : [eval_subsetdump_bb7_in/8]
2. recursive : [eval_subsetdump_12/4,eval_subsetdump_13/4,eval_subsetdump_6/3,eval_subsetdump_7/3,eval_subsetdump_bb1_in/3,eval_subsetdump_bb6_in/4,eval_subsetdump_bb9_in/4,loop_cont_eval_subsetdump_bb3_in/5,loop_cont_eval_subsetdump_bb7_in/5]
3. non_recursive : [loop_cont_eval_subsetdump_bb1_in/2]
4. non_recursive : [eval_subsetdump_5/2]
5. non_recursive : [eval_subsetdump_4/2]
6. non_recursive : [eval_subsetdump_3/2]
7. non_recursive : [eval_subsetdump_2/2]
8. non_recursive : [eval_subsetdump_1/2]
9. non_recursive : [eval_subsetdump_0/2]
10. non_recursive : [eval_subsetdump_bb0_in/2]
11. non_recursive : [eval_subsetdump_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_subsetdump_bb3_in/7
1. SCC is partially evaluated into eval_subsetdump_bb7_in/8
2. SCC is partially evaluated into eval_subsetdump_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_subsetdump_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_subsetdump_bb3_in/7 
* CE 8 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_subsetdump_bb3_in/7 
* CE 12: eval_subsetdump_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=C+1,C>=B,D=2] 
* CE 13: eval_subsetdump_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=B+1,C>=A,D=2] 
* CE 14: eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) = 1+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,F,G,C,D,E)
     [V_limit>=V_cnum_1+1,V_cnum_1>=V_cnum_0,V_cnum_1+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_subsetdump_bb3_in/7 
* CEs [14] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 

#### Loops of eval_subsetdump_bb3_in/7 
* Loop 9: eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E)->  eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1',B',C,D,E)
                  [V_limit>=V_cnum_1+1,V_cnum_1>=V_cnum_0,V_cnum_1+1=V_cnum_1',B'=2,B=2] 
* Loop 10: eval_subsetdump_bb3_in(A,B,C,D,A,B,C) [A>=C+1,C>=B,D=2] 
* Loop 11: eval_subsetdump_bb3_in(A,B,C,D,A,B,C) [A>=B+1,C>=A,D=2] 

### Ranking functions of CR eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) 
* RF of phase [9]: [V_limit-V_cnum_1]

#### Partial ranking functions of CR eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_limit-V_cnum_1


### Resulting Chains:eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) 
* [[9],11]
* [[9],10]
* [10]


### Merging Chains  eval_subsetdump_bb3_in/7 into  External patterns of execution 
* [[10]] --> 1 
* [[11,[9]]] --> 2 
* [[10,[9]]] --> 3 


### Specialization of cost equations eval_subsetdump_bb7_in/8 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations eval_subsetdump_bb7_in/8 
* CE 15: eval_subsetdump_bb7_in(A,B,C,D,E,A,B,C) = 0
     [D>=C,D>=B,E=3] 
* CE 16: eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) = 1+ eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,F,G,C,D,E)
     [V_cnum_1>=V_rangestart_0+1,V_rangestart_0>=V_cnum_0,V_rangestart_0+1=F,G=3,B=3] 

### Cost equations --> "Loop" of eval_subsetdump_bb7_in/8 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_subsetdump_bb7_in/8 
* Loop 12: eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E)->  eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0',B',C,D,E)
                  [V_cnum_1>=V_rangestart_0+1,V_rangestart_0>=V_cnum_0,V_rangestart_0+1=V_rangestart_0',B'=3,B=3] 
* Loop 13: eval_subsetdump_bb7_in(A,B,C,D,E,A,B,C) [D>=C,D>=B,E=3] 

### Ranking functions of CR eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) 
* RF of phase [12]: [V_cnum_1-V_rangestart_0]

#### Partial ranking functions of CR eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_cnum_1-V_rangestart_0


### Resulting Chains:eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) 
* [[12],13]
* [13]


### Merging Chains  eval_subsetdump_bb7_in/8 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations eval_subsetdump_bb1_in/3 
* CE 6 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20] 
* CE 4 is refined into CE [21,22,23] 
* CE 5 is refined into CE [24] 


#### Refined cost equations eval_subsetdump_bb1_in/3 
* CE 17: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 0
     [V_cnum_0>=V_limit,B=4] 
* CE 18: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,V_cnum_0):1+ eval_subsetdump_bb1_in(V_limit,D,E)
     [V_limit>=V_cnum_0+1,V_cnum_0+1=D,E=4,C=2,B=4] 
* CE 19: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,V_limit):2+ eval_subsetdump_bb1_in(V_limit,D,E)
     [V_limit>=V_cnum_0+1,V_limit+1=D,E=4,C=2,B=4] 
* CE 20: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,D):3+ eval_subsetdump_bb1_in(V_limit,E,F)
     [V_limit>=D+1,D>=V_cnum_0+1,D+1=E,F=4,C=2,B=4] 
* CE 21: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,V_cnum_0):1+ eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_0,V_cnum_0,D,V_limit,V_cnum_0,V_cnum_0):1+ eval_subsetdump_bb1_in(V_limit,E,F)
     [V_limit>=V_cnum_0+1,V_cnum_0+1=E,F=4,D=3,C=2,B=4] 
* CE 22: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,V_limit):2+ eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_limit,V_cnum_0,D,V_limit,V_cnum_0,V_limit):2+ eval_subsetdump_bb1_in(V_limit,E,F)
     [V_limit>=V_cnum_0+1,V_limit+1=E,F=4,D=3,C=2,B=4] 
* CE 23: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_0,C,V_limit,V_cnum_0,D):3+ eval_subsetdump_bb7_in(V_limit,V_cnum_0,D,V_cnum_0,E,V_limit,V_cnum_0,D):2+ eval_subsetdump_bb1_in(V_limit,F,G)
     [V_limit>=D+1,D>=V_cnum_0+1,D+1=F,G=4,E=3,C=2,B=4] 
* CE 24: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) = 1+ eval_subsetdump_bb1_in(V_limit,C,D)
     [V_limit>=V_cnum_0+1,V_cnum_0+1=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_subsetdump_bb1_in/3 
* CEs [20,23] --> Loop 14 
* CEs [18,21,24] --> Loop 15 
* CEs [19,22] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_subsetdump_bb1_in/3 
* Loop 14: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B)->  eval_subsetdump_bb1_in(V_limit,V_cnum_0',B')
                  [V_limit>=V_cnum_0',V_cnum_0'>=V_cnum_0+2,B'=4,B=4] 
* Loop 15: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B)->  eval_subsetdump_bb1_in(V_limit,V_cnum_0',B')
                  [V_limit>=V_cnum_0+1,V_cnum_0+1=V_cnum_0',B'=4,B=4] 
* Loop 16: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B)->  eval_subsetdump_bb1_in(V_limit,V_cnum_0',B')
                  [V_limit>=V_cnum_0+1,V_limit+1=V_cnum_0',B'=4,B=4] 
* Loop 17: eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) [V_cnum_0>=V_limit,B=4] 

### Ranking functions of CR eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) 
* RF of phase [14,15]: [V_limit-V_cnum_0]

#### Partial ranking functions of CR eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1]:
    V_limit/2-V_cnum_0/2-1/2
  - RF of loop [15:1]:
    V_limit-V_cnum_0


### Resulting Chains:eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) 
* [[14,15],17]
* [[14,15],16,17]
* [17]
* [16,17]


### Merging Chains  eval_subsetdump_bb1_in/3 into  External patterns of execution 
* [[17]] --> 1 
* [[17,16],[17,16,[14,15]],[17,[14,15]]] --> 2 


### Specialization of cost equations eval_subsetdump_start/2 
* CE 2 is refined into CE [25,26] 


#### Refined cost equations eval_subsetdump_start/2 
* CE 25: eval_subsetdump_start(V_limit,B) = 1+ eval_subsetdump_bb1_in(V_limit,C,D):1
     [0>=V_limit,D=4,C=0] 
* CE 26: eval_subsetdump_start(V_limit,B) = 1+ eval_subsetdump_bb1_in(V_limit,C,D):2
     [V_limit>=1,D=4,C=0] 

### Cost equations --> "Loop" of eval_subsetdump_start/2 
* CEs [26] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of eval_subsetdump_start/2 
* Loop 18: eval_subsetdump_start(V_limit,B) [V_limit>=1] 
* Loop 19: eval_subsetdump_start(V_limit,B) [0>=V_limit] 

### Ranking functions of CR eval_subsetdump_start(V_limit,B) 

#### Partial ranking functions of CR eval_subsetdump_start(V_limit,B) 


### Resulting Chains:eval_subsetdump_start(V_limit,B) 
* [19]
* [18]


### Merging Chains  eval_subsetdump_start/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) -> [eval_subsetdump_bb3_in(V_limit',V_cnum_0',V_cnum_1',B',C',D',E')] 
1
#### Cost of phase [9]:eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) -> [eval_subsetdump_bb3_in(V_limit',V_cnum_0',V_cnum_1',B',C',D',E')] 
1* #(9)+0
  Such that:#(9) =< V_limit-V_cnum_1
#(9) =< V_limit-V_cnum_1-V_limit'+V_cnum_1'

#### Cost of phase [9]:eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E) -> [eval_subsetdump_bb3_in(V_limit',V_cnum_0',V_cnum_1',B',C',D',E')] 
1* #(9)+0
  Such that:#(9) =< V_limit-V_cnum_1
#(9) =< V_limit-V_cnum_1-V_limit'+V_cnum_1'

#### Cost of chains of eval_subsetdump_bb3_in(V_limit,V_cnum_0,V_cnum_1,B,C,D,E):
* Chain [[9],11]: 1*s(1)+0
  Such that:s(1) =< V_limit-V_cnum_1

  with precondition: [B=2,V_limit=C,V_cnum_0=D,V_limit=E,V_cnum_1>=V_cnum_0,V_limit>=V_cnum_1+1] 

* Chain [[9],10]: 1*s(2)+0
  Such that:s(2) =< -V_cnum_1+E

  with precondition: [B=2,V_limit=C,V_cnum_0=D,V_cnum_1>=V_cnum_0,E>=V_cnum_1+1,V_limit>=E+1] 

* Chain [10]: 0
  with precondition: [B=2,V_cnum_0=V_cnum_1,V_limit=C,V_cnum_0=D,V_cnum_0=E,V_limit>=V_cnum_0+1] 


#### Cost of loops [12] 

 * loop 12:eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) -> [eval_subsetdump_bb7_in(V_limit',V_cnum_0',V_cnum_1',V_rangestart_0',B',C',D',E')] 
1
#### Cost of phase [12]:eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E) -> [eval_subsetdump_bb7_in(V_limit',V_cnum_0',V_cnum_1',V_rangestart_0',B',C',D',E')] 
1* #(12)+0
  Such that:#(12) =< V_cnum_1-V_rangestart_0
#(12) =< V_cnum_1-V_rangestart_0-V_cnum_1'+V_rangestart_0'

#### Cost of chains of eval_subsetdump_bb7_in(V_limit,V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D,E):
* Chain [[12],13]: 1*s(3)+0
  Such that:s(3) =< -V_rangestart_0+E

  with precondition: [B=3,V_limit=C,V_cnum_0=D,V_cnum_1=E,V_rangestart_0>=V_cnum_0,V_cnum_1>=V_rangestart_0+1] 

* Chain [13]: 0
  with precondition: [B=3,C=V_limit,V_cnum_0=V_rangestart_0,V_cnum_0=D,V_cnum_1=E,V_cnum_0>=V_cnum_1] 


#### Cost of loops [14,15] 

 * loop 14:eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_limit',V_cnum_0',B')] 
3*s(7)+3
  Such that:s(6) =< -V_cnum_0+V_cnum_0'-1
s(7) =< s(6)

 * loop 15:eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_limit',V_cnum_0',B')] 
3
#### Cost of phase [14,15]:eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_limit',V_cnum_0',B')] 
3* #(15)+3* #(14)+3*sm(14,7)+0
  Such that:#(14) =< V_limit/2-V_cnum_0/2-1/2
#(14) =< V_limit/2-V_cnum_0/2-V_limit'/2+V_cnum_0'/2
s(10) =< V_limit-V_cnum_0
s(11) =< V_limit-V_cnum_0-V_limit'+V_cnum_0'
#(14)+ #(15) =< s(10)
#(15)+sm(14,6) =< s(10)
#(14)+ #(15) =< s(11)
#(15)+sm(14,6) =< s(11)
sm(14,7) =< sm(14,6)

#### Cost of phase [14,15]:eval_subsetdump_bb1_in(V_limit,V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_limit',V_cnum_0',B')] 
3* #(15)+3* #(14)+3*sm(14,7)+0
  Such that:#(14) =< V_limit/2-V_cnum_0/2-1/2
#(14) =< V_limit/2-V_cnum_0/2-V_limit'/2+V_cnum_0'/2
s(10) =< V_limit-V_cnum_0
s(11) =< V_limit-V_cnum_0-V_limit'+V_cnum_0'
#(14)+ #(15) =< s(10)
#(15)+sm(14,6) =< s(10)
#(14)+ #(15) =< s(11)
#(15)+sm(14,6) =< s(11)
sm(14,7) =< sm(14,6)

#### Cost of chains of eval_subsetdump_bb1_in(V_limit,V_cnum_0,B):
* Chain [[14,15],17]: 3*s(31)+3*s(29)+3*s(33)+0
  Such that:s(29) =< V_limit/2-V_cnum_0/2-1/2
s(30) =< V_limit-V_cnum_0
s(29)+s(31) =< s(30)
s(31)+s(32) =< s(30)
s(33) =< s(32)

  with precondition: [B=4,V_cnum_0>=0,V_limit>=V_cnum_0+1] 

* Chain [[14,15],16,17]: 3*s(37)+3*s(38)+3*s(36)+3*s(40)+3
  Such that:s(34) =< V_limit-V_cnum_0
s(35)+s(36) =< s(34)
s(37) =< s(35)
s(36)+s(38) =< s(34)
s(38)+s(39) =< s(34)
s(40) =< s(39)

  with precondition: [B=4,V_cnum_0>=0,V_limit>=V_cnum_0+2] 

* Chain [17]: 0
  with precondition: [V_cnum_0=0,B=4,0>=V_limit] 

* Chain [16,17]: 3*s(42)+3
  Such that:s(41) =< V_limit
s(42) =< s(41)

  with precondition: [V_cnum_0=0,B=4,V_limit>=1] 


#### Cost of chains of eval_subsetdump_start(V_limit,B):
* Chain [19]: 1
  with precondition: [0>=V_limit] 

* Chain [18]: 3*s(68)+3*s(71)+3*s(72)+3*s(70)+3*s(74)+3*s(75)+3*s(67)+3*s(77)+4
  Such that:s(66) =< V_limit
s(67) =< V_limit/2-1/2
s(68) =< s(66)
s(69)+s(70) =< s(66)
s(71) =< s(69)
s(70)+s(72) =< s(66)
s(72)+s(73) =< s(66)
s(74) =< s(73)
s(67)+s(75) =< s(66)
s(75)+s(76) =< s(66)
s(77) =< s(76)

  with precondition: [V_limit>=1] 


Closed-form bounds of eval_subsetdump_start(V_limit,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_limit] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [V_limit>=1] 
    - Upper bound: 24*V_limit+4 
    - Complexity: n 

### Maximum cost of eval_subsetdump_start(V_limit,B): nat(V_limit)*24+3+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 23 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 62 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 85 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 31 ms.
   - Chain cost structures 21 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 253 ms.

