Warning: Ignored call to eval_zwritehexstring_at_extracted_stop/1 in equation loop_cont_eval_zwritehexstring_at_extracted_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_zwritehexstring_at_extracted_bb3_in/8]
1. recursive : [eval_zwritehexstring_at_extracted_10/5,eval_zwritehexstring_at_extracted_11/5,eval_zwritehexstring_at_extracted_bb1_in/2,loop_cont_eval_zwritehexstring_at_extracted_bb3_in/6]
2. non_recursive : [loop_cont_eval_zwritehexstring_at_extracted_bb1_in/2]
3. non_recursive : [eval_zwritehexstring_at_extracted_4/2]
4. non_recursive : [eval_zwritehexstring_at_extracted_3/2]
5. non_recursive : [eval_zwritehexstring_at_extracted_2/2]
6. non_recursive : [eval_zwritehexstring_at_extracted_1/2]
7. non_recursive : [eval_zwritehexstring_at_extracted_0/2]
8. non_recursive : [eval_zwritehexstring_at_extracted_bb0_in/2]
9. non_recursive : [eval_zwritehexstring_at_extracted_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zwritehexstring_at_extracted_bb3_in/8
1. SCC is partially evaluated into eval_zwritehexstring_at_extracted_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_zwritehexstring_at_extracted_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zwritehexstring_at_extracted_bb3_in/8 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_zwritehexstring_at_extracted_bb3_in/8 
* CE 8: eval_zwritehexstring_at_extracted_bb3_in(A,B,C,D,A,B,E,F) = 0
     [A+63>=B,B>=1,A>=1,A=B+F,E=1,D=2,C=1] 
* CE 9: eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) = 1+ eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,G,H,C,D,E,F)
     [V__0_>=V_count_0,V__0+63>=V__0_,V_count_0>=2,V__0>=1,V_count_0=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_zwritehexstring_at_extracted_bb3_in/8 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_zwritehexstring_at_extracted_bb3_in/8 
* Loop 6: eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F)->  eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0',B',C,D,E,F)
                  [V__0_>=V_count_0,V__0+63>=V__0_,V_count_0>=2,V__0>=1,V_count_0=V_count_0'+1,B'=2,B=2] 
* Loop 7: eval_zwritehexstring_at_extracted_bb3_in(A,B,C,D,A,B,E,F) [A+63>=B,B>=1,A>=1,A=B+F,E=1,D=2,C=1] 

### Ranking functions of CR eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) 
* RF of phase [6]: [V_count_0-1]

#### Partial ranking functions of CR eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_count_0-1


### Resulting Chains:eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) 
* [[6],7]
* [7]


### Merging Chains  eval_zwritehexstring_at_extracted_bb3_in/8 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations eval_zwritehexstring_at_extracted_bb1_in/2 
* CE 5 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12,13] 


#### Refined cost equations eval_zwritehexstring_at_extracted_bb1_in/2 
* CE 10: eval_zwritehexstring_at_extracted_bb1_in(V__0,B) = 0
     [0>=V__0,B=3] 
* CE 11: eval_zwritehexstring_at_extracted_bb1_in(V__0,B) = 2+ eval_zwritehexstring_at_extracted_bb3_in(V__0,C,D,E,V__0,F,G,H):2+ eval_zwritehexstring_at_extracted_bb1_in(I,J)
     [V__0>=1,V__0=I+64,V__0=H+64,J=3,G=1,F=64,E=2,D=64,C=64,B=3] 
* CE 12: eval_zwritehexstring_at_extracted_bb1_in(V__0,B) = 2+ eval_zwritehexstring_at_extracted_bb3_in(C,D,E,F,G,H,I,J):1+ eval_zwritehexstring_at_extracted_bb1_in(K,L)
     [L=3,K=0,J=0,I=1,H=1,G=1,F=2,E=1,D=1,C=1,B=3,V__0=1] 
* CE 13: eval_zwritehexstring_at_extracted_bb1_in(V__0,B) = 2+ eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0,V__0,C,V__0,V__0,D,E):2+ eval_zwritehexstring_at_extracted_bb1_in(F,G)
     [V__0>=2,G=3,F=0,E=0,D=1,C=2,B=3] 

### Cost equations --> "Loop" of eval_zwritehexstring_at_extracted_bb1_in/2 
* CEs [11] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of eval_zwritehexstring_at_extracted_bb1_in/2 
* Loop 8: eval_zwritehexstring_at_extracted_bb1_in(V__0,B)->  eval_zwritehexstring_at_extracted_bb1_in(V__0',B')
                  [V__0>=1,V__0=V__0'+64,B'=3,B=3] 
* Loop 9: eval_zwritehexstring_at_extracted_bb1_in(V__0,B)->  eval_zwritehexstring_at_extracted_bb1_in(V__0',B')
                  [V__0>=2,B'=3,V__0'=0,B=3] 
* Loop 10: eval_zwritehexstring_at_extracted_bb1_in(V__0,B)->  eval_zwritehexstring_at_extracted_bb1_in(V__0',B')
                  [B'=3,V__0'=0,B=3,V__0=1] 
* Loop 11: eval_zwritehexstring_at_extracted_bb1_in(V__0,B) [0>=V__0,B=3] 

### Ranking functions of CR eval_zwritehexstring_at_extracted_bb1_in(V__0,B) 
* RF of phase [8]: [V__0/64]

#### Partial ranking functions of CR eval_zwritehexstring_at_extracted_bb1_in(V__0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__0/64


### Resulting Chains:eval_zwritehexstring_at_extracted_bb1_in(V__0,B) 
* [[8],11]
* [[8],10,11]
* [[8],9,11]
* [11]
* [10,11]
* [9,11]


### Merging Chains  eval_zwritehexstring_at_extracted_bb1_in/2 into  External patterns of execution 
* [[11,9],[11,10],[11,9,[8]],[11,10,[8]],[11,[8]]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_zwritehexstring_at_extracted_start/2 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_zwritehexstring_at_extracted_start/2 
* CE 14: eval_zwritehexstring_at_extracted_start(V_len,B) = 1+ eval_zwritehexstring_at_extracted_bb1_in(V_len,C):1
     [V_len>=1,C=3] 
* CE 15: eval_zwritehexstring_at_extracted_start(V_len,B) = 1+ eval_zwritehexstring_at_extracted_bb1_in(V_len,C):2
     [0>=V_len,C=3] 

### Cost equations --> "Loop" of eval_zwritehexstring_at_extracted_start/2 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_zwritehexstring_at_extracted_start/2 
* Loop 12: eval_zwritehexstring_at_extracted_start(V_len,B) [V_len>=1] 
* Loop 13: eval_zwritehexstring_at_extracted_start(V_len,B) [0>=V_len] 

### Ranking functions of CR eval_zwritehexstring_at_extracted_start(V_len,B) 

#### Partial ranking functions of CR eval_zwritehexstring_at_extracted_start(V_len,B) 


### Resulting Chains:eval_zwritehexstring_at_extracted_start(V_len,B) 
* [13]
* [12]


### Merging Chains  eval_zwritehexstring_at_extracted_start/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) -> [eval_zwritehexstring_at_extracted_bb3_in(V__0',V__0_',V_count_0',B',C',D',E',F')] 
1
#### Cost of phase [6]:eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F) -> [eval_zwritehexstring_at_extracted_bb3_in(V__0',V__0_',V_count_0',B',C',D',E',F')] 
1* #(6)+0
  Such that:#(6) =< V_count_0-1
#(6) =< V_count_0-V_count_0'

#### Cost of chains of eval_zwritehexstring_at_extracted_bb3_in(V__0,V__0_,V_count_0,B,C,D,E,F):
* Chain [[6],7]: 1*s(1)+0
  Such that:s(1) =< V_count_0-1

  with precondition: [B=2,E=1,V__0=C,V__0_=D,V__0=V__0_+F,V__0>=1,V_count_0>=2,V__0+63>=V__0_,V__0_>=V_count_0] 

* Chain [7]: 0
  with precondition: [V__0_=1,V_count_0=1,B=2,D=1,E=1,V__0=C,V__0=F+1,V__0>=1] 


#### Cost of loops [8] 

 * loop 8:eval_zwritehexstring_at_extracted_bb1_in(V__0,B) -> [eval_zwritehexstring_at_extracted_bb1_in(V__0',B')] 
1*s(3)+2
  Such that:s(3) =< 63

#### Cost of phase [8]:eval_zwritehexstring_at_extracted_bb1_in(V__0,B) -> [eval_zwritehexstring_at_extracted_bb1_in(V__0',B')] 
2* #(8)+1*sm(8,3)+0
  Such that:s(5) =< V__0/64
s(6) =< V__0/64-V__0'/64
s(7) =< s(5)
#(8) =< s(5)
s(7) =< s(6)
#(8) =< s(6)
sm(8,3) =< s(7)*63

#### Cost of phase [8]:eval_zwritehexstring_at_extracted_bb1_in(V__0,B) -> [eval_zwritehexstring_at_extracted_bb1_in(V__0',B')] 
2* #(8)+1*sm(8,3)+0
  Such that:s(5) =< V__0/64
s(6) =< V__0/64-V__0'/64
s(7) =< s(5)
#(8) =< s(5)
s(7) =< s(6)
#(8) =< s(6)
sm(8,3) =< s(7)*63

#### Cost of phase [8]:eval_zwritehexstring_at_extracted_bb1_in(V__0,B) -> [eval_zwritehexstring_at_extracted_bb1_in(V__0',B')] 
2* #(8)+1*sm(8,3)+0
  Such that:s(5) =< V__0/64
s(6) =< V__0/64-V__0'/64
s(7) =< s(5)
#(8) =< s(5)
s(7) =< s(6)
#(8) =< s(6)
sm(8,3) =< s(7)*63

#### Cost of chains of eval_zwritehexstring_at_extracted_bb1_in(V__0,B):
* Chain [[8],11]: 2*s(26)+1*s(27)+0
  Such that:s(23) =< V__0/64
s(24) =< V__0/64+63/64
s(25) =< s(23)
s(26) =< s(23)
s(25) =< s(24)
s(26) =< s(24)
s(27) =< s(25)*63

  with precondition: [B=3,V__0>=1] 

* Chain [[8],10,11]: 2*s(31)+1*s(32)+2
  Such that:s(28) =< V__0/64
s(29) =< V__0/64-1/64
s(30) =< s(28)
s(31) =< s(28)
s(30) =< s(29)
s(31) =< s(29)
s(32) =< s(30)*63

  with precondition: [B=3,V__0>=65] 

* Chain [[8],9,11]: 1*s(33)+2*s(37)+1*s(38)+2
  Such that:s(33)+s(34) =< V__0-1
s(35) =< V__0/64
s(34) =< V__0/64-1/32
s(36) =< s(35)
s(37) =< s(35)
s(36) =< s(34)
s(37) =< s(34)
s(38) =< s(36)*63

  with precondition: [B=3,V__0>=66] 

* Chain [11]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [10,11]: 2
  with precondition: [V__0=1,B=3] 

* Chain [9,11]: 1*s(39)+2
  Such that:s(39) =< V__0-1

  with precondition: [B=3,V__0>=2] 


#### Cost of chains of eval_zwritehexstring_at_extracted_start(V_len,B):
* Chain [13]: 1
  with precondition: [0>=V_len] 

* Chain [12]: 1*s(77)+1*s(78)+2*s(80)+1*s(81)+2*s(83)+1*s(84)+2*s(86)+1*s(87)+3
  Such that:s(72) =< V_len-1
s(73) =< V_len/64
s(74) =< V_len/64-1/32
s(75) =< V_len/64-1/64
s(76) =< V_len/64+63/64
s(77) =< s(72)
s(74)+s(78) =< s(72)
s(79) =< s(73)
s(80) =< s(73)
s(79) =< s(74)
s(80) =< s(74)
s(81) =< s(79)*63
s(82) =< s(73)
s(83) =< s(73)
s(82) =< s(75)
s(83) =< s(75)
s(84) =< s(82)*63
s(85) =< s(73)
s(86) =< s(73)
s(85) =< s(76)
s(86) =< s(76)
s(87) =< s(85)*63

  with precondition: [V_len>=1] 


Closed-form bounds of eval_zwritehexstring_at_extracted_start(V_len,B): 
-------------------------------------
* Chain [13] with precondition: [0>=V_len] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V_len>=1] 
    - Upper bound: 323/64*V_len+3 
    - Complexity: n 

### Maximum cost of eval_zwritehexstring_at_extracted_start(V_len,B): nat(V_len)*2+2+nat(V_len/64)*195+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 27 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 133 ms.

