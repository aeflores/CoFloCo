Warning: Ignored call to eval_cryptRandWriteFile_stop/1 in equation loop_cont_eval_cryptRandWriteFile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_cryptRandWriteFile_bb3_in/8]
1. recursive : [eval_cryptRandWriteFile_10/5,eval_cryptRandWriteFile_11/5,eval_cryptRandWriteFile_bb1_in/2,loop_cont_eval_cryptRandWriteFile_bb3_in/6]
2. non_recursive : [loop_cont_eval_cryptRandWriteFile_bb1_in/2]
3. non_recursive : [eval_cryptRandWriteFile_4/2]
4. non_recursive : [eval_cryptRandWriteFile_3/2]
5. non_recursive : [eval_cryptRandWriteFile_2/2]
6. non_recursive : [eval_cryptRandWriteFile_1/2]
7. non_recursive : [eval_cryptRandWriteFile_0/2]
8. non_recursive : [eval_cryptRandWriteFile_bb0_in/2]
9. non_recursive : [eval_cryptRandWriteFile_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cryptRandWriteFile_bb3_in/8
1. SCC is partially evaluated into eval_cryptRandWriteFile_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_cryptRandWriteFile_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cryptRandWriteFile_bb3_in/8 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_cryptRandWriteFile_bb3_in/8 
* CE 8: eval_cryptRandWriteFile_bb3_in(A,B,C,D,A,B,C,E) = 0
     [C>=B,A+255>=B,B>=1,A>=1,B+E=A,D=2] 
* CE 9: eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) = 1+ eval_cryptRandWriteFile_bb3_in(V__0,V__0_,G,H,C,D,E,F)
     [V__0_>=V_i_0+1,V__0+255>=V__0_,V_i_0>=0,V__0>=1,V_i_0+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_cryptRandWriteFile_bb3_in/8 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_cryptRandWriteFile_bb3_in/8 
* Loop 6: eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F)->  eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0',B',C,D,E,F)
                  [V__0_>=V_i_0+1,V__0+255>=V__0_,V_i_0>=0,V__0>=1,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 7: eval_cryptRandWriteFile_bb3_in(A,B,C,D,A,B,C,E) [C>=B,A+255>=B,B>=1,A>=1,B+E=A,D=2] 

### Ranking functions of CR eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) 
* RF of phase [6]: [V__0_-V_i_0]

#### Partial ranking functions of CR eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V__0_-V_i_0


### Resulting Chains:eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) 
* [[6],7]


### Merging Chains  eval_cryptRandWriteFile_bb3_in/8 into  External patterns of execution 
* [[7,[6]]] --> 1 


### Specialization of cost equations eval_cryptRandWriteFile_bb1_in/2 
* CE 5 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12] 


#### Refined cost equations eval_cryptRandWriteFile_bb1_in/2 
* CE 10: eval_cryptRandWriteFile_bb1_in(V__0,B) = 0
     [0>=V__0,B=3] 
* CE 11: eval_cryptRandWriteFile_bb1_in(V__0,B) = 2+ eval_cryptRandWriteFile_bb3_in(V__0,C,D,E,V__0,F,G,H):1+ eval_cryptRandWriteFile_bb1_in(I,J)
     [V__0>=1,V__0=I+256,V__0=H+256,J=3,G=256,F=256,E=2,D=0,C=256,B=3] 
* CE 12: eval_cryptRandWriteFile_bb1_in(V__0,B) = 2+ eval_cryptRandWriteFile_bb3_in(V__0,V__0,C,D,V__0,V__0,V__0,E):1+ eval_cryptRandWriteFile_bb1_in(F,G)
     [V__0>=1,G=3,F=0,E=0,D=2,C=0,B=3] 

### Cost equations --> "Loop" of eval_cryptRandWriteFile_bb1_in/2 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_cryptRandWriteFile_bb1_in/2 
* Loop 8: eval_cryptRandWriteFile_bb1_in(V__0,B)->  eval_cryptRandWriteFile_bb1_in(V__0',B')
                  [V__0>=1,V__0=V__0'+256,B'=3,B=3] 
* Loop 9: eval_cryptRandWriteFile_bb1_in(V__0,B)->  eval_cryptRandWriteFile_bb1_in(V__0',B')
                  [V__0>=1,B'=3,V__0'=0,B=3] 
* Loop 10: eval_cryptRandWriteFile_bb1_in(V__0,B) [0>=V__0,B=3] 

### Ranking functions of CR eval_cryptRandWriteFile_bb1_in(V__0,B) 
* RF of phase [8]: [V__0/256]

#### Partial ranking functions of CR eval_cryptRandWriteFile_bb1_in(V__0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__0/256


### Resulting Chains:eval_cryptRandWriteFile_bb1_in(V__0,B) 
* [[8],10]
* [[8],9,10]
* [10]
* [9,10]


### Merging Chains  eval_cryptRandWriteFile_bb1_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,9],[10,9,[8]],[10,[8]]] --> 2 


### Specialization of cost equations eval_cryptRandWriteFile_start/2 
* CE 2 is refined into CE [13,14] 


#### Refined cost equations eval_cryptRandWriteFile_start/2 
* CE 13: eval_cryptRandWriteFile_start(V_bytes,B) = 1+ eval_cryptRandWriteFile_bb1_in(V_bytes,C):1
     [0>=V_bytes,C=3] 
* CE 14: eval_cryptRandWriteFile_start(V_bytes,B) = 1+ eval_cryptRandWriteFile_bb1_in(V_bytes,C):2
     [V_bytes>=1,C=3] 

### Cost equations --> "Loop" of eval_cryptRandWriteFile_start/2 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_cryptRandWriteFile_start/2 
* Loop 11: eval_cryptRandWriteFile_start(V_bytes,B) [V_bytes>=1] 
* Loop 12: eval_cryptRandWriteFile_start(V_bytes,B) [0>=V_bytes] 

### Ranking functions of CR eval_cryptRandWriteFile_start(V_bytes,B) 

#### Partial ranking functions of CR eval_cryptRandWriteFile_start(V_bytes,B) 


### Resulting Chains:eval_cryptRandWriteFile_start(V_bytes,B) 
* [12]
* [11]


### Merging Chains  eval_cryptRandWriteFile_start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) -> [eval_cryptRandWriteFile_bb3_in(V__0',V__0_',V_i_0',B',C',D',E',F')] 
1
#### Cost of phase [6]:eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F) -> [eval_cryptRandWriteFile_bb3_in(V__0',V__0_',V_i_0',B',C',D',E',F')] 
1* #(6)+0
  Such that:#(6) =< V__0_-V_i_0
#(6) =< V__0_-V_i_0-V__0_'+V_i_0'

#### Cost of chains of eval_cryptRandWriteFile_bb3_in(V__0,V__0_,V_i_0,B,C,D,E,F):
* Chain [[6],7]: 1*s(1)+0
  Such that:s(1) =< -V_i_0+E

  with precondition: [B=2,V__0=C,V__0_=D,V__0_=E,V__0=V__0_+F,V__0>=1,V_i_0>=0,V__0+255>=V__0_,V__0_>=V_i_0+1] 


#### Cost of loops [8] 

 * loop 8:eval_cryptRandWriteFile_bb1_in(V__0,B) -> [eval_cryptRandWriteFile_bb1_in(V__0',B')] 
1*s(3)+2
  Such that:s(3) =< 256

#### Cost of phase [8]:eval_cryptRandWriteFile_bb1_in(V__0,B) -> [eval_cryptRandWriteFile_bb1_in(V__0',B')] 
2* #(8)+1*sm(8,3)+0
  Such that:s(5) =< V__0/256
s(6) =< V__0/256-V__0'/256
s(7) =< s(5)
#(8) =< s(5)
s(7) =< s(6)
#(8) =< s(6)
sm(8,3) =< s(7)*256

#### Cost of phase [8]:eval_cryptRandWriteFile_bb1_in(V__0,B) -> [eval_cryptRandWriteFile_bb1_in(V__0',B')] 
2* #(8)+1*sm(8,3)+0
  Such that:s(5) =< V__0/256
s(6) =< V__0/256-V__0'/256
s(7) =< s(5)
#(8) =< s(5)
s(7) =< s(6)
#(8) =< s(6)
sm(8,3) =< s(7)*256

#### Cost of chains of eval_cryptRandWriteFile_bb1_in(V__0,B):
* Chain [[8],10]: 2*s(22)+1*s(23)+0
  Such that:s(19) =< V__0/256
s(20) =< V__0/256+255/256
s(21) =< s(19)
s(22) =< s(19)
s(21) =< s(20)
s(22) =< s(20)
s(23) =< s(21)*256

  with precondition: [B=3,V__0>=1] 

* Chain [[8],9,10]: 1*s(24)+2*s(28)+1*s(29)+2
  Such that:s(24)+s(25) =< V__0
s(26) =< V__0/256
s(25) =< V__0/256-1/256
s(27) =< s(26)
s(28) =< s(26)
s(27) =< s(25)
s(28) =< s(25)
s(29) =< s(27)*256

  with precondition: [B=3,V__0>=257] 

* Chain [10]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [9,10]: 1*s(30)+2
  Such that:s(30) =< V__0

  with precondition: [B=3,V__0>=1] 


#### Cost of chains of eval_cryptRandWriteFile_start(V_bytes,B):
* Chain [12]: 1
  with precondition: [0>=V_bytes] 

* Chain [11]: 1*s(59)+1*s(60)+2*s(62)+1*s(63)+2*s(65)+1*s(66)+3
  Such that:s(55) =< V_bytes
s(56) =< V_bytes/256
s(57) =< V_bytes/256-1/256
s(58) =< V_bytes/256+255/256
s(59) =< s(55)
s(57)+s(60) =< s(55)
s(61) =< s(56)
s(62) =< s(56)
s(61) =< s(57)
s(62) =< s(57)
s(63) =< s(61)*256
s(64) =< s(56)
s(65) =< s(56)
s(64) =< s(58)
s(65) =< s(58)
s(66) =< s(64)*256

  with precondition: [V_bytes>=1] 


Closed-form bounds of eval_cryptRandWriteFile_start(V_bytes,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_bytes] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [11] with precondition: [V_bytes>=1] 
    - Upper bound: 257/64*V_bytes+3 
    - Complexity: n 

### Maximum cost of eval_cryptRandWriteFile_start(V_bytes,B): nat(V_bytes)*2+2+nat(V_bytes/256)*516+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 23 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 115 ms.

