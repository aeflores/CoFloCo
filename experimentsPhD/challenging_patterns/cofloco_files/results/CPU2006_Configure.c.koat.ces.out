Warning: Ignored call to eval_Configure_stop/1 in equation eval_Configure_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_Configure_15/10,eval_Configure_16/10,eval_Configure_bb7_in/10]
1. recursive : [eval_Configure__critedge_in/8]
2. recursive : [eval_Configure_11/3,eval_Configure_12/3,eval_Configure_7/3,eval_Configure_8/3,eval_Configure_bb2_in/3,loop_cont_eval_Configure__critedge_in/4,loop_cont_eval_Configure_bb7_in/7]
3. non_recursive : [eval_Configure_bb11_in/1]
4. non_recursive : [loop_cont_eval_Configure_bb2_in/2]
5. non_recursive : [eval_Configure_5/2]
6. non_recursive : [eval_Configure_4/2]
7. non_recursive : [eval_Configure_3/2]
8. non_recursive : [eval_Configure_2/2]
9. non_recursive : [eval_Configure_1/2]
10. non_recursive : [eval_Configure_0/2]
11. non_recursive : [eval_Configure_bb0_in/2]
12. non_recursive : [eval_Configure_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Configure_bb7_in/10
1. SCC is partially evaluated into eval_Configure__critedge_in/8
2. SCC is partially evaluated into eval_Configure_bb2_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_Configure_5/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_Configure_2/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_Configure_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Configure_bb7_in/10 
* CE 11 is refined into CE [16] 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_Configure_bb7_in/10 
* CE 16: eval_Configure_bb7_in(A,B,C,D,E,A,F,C,D,C) = 0
     [A>=D+1,D>=C,C=F+1,C=B+1,E=2] 
* CE 17: eval_Configure_bb7_in(A,B,C,A,D,A,E,C,A,C) = 0
     [A>=C,C=E+1,C=B+1,D=2] 
* CE 18: eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) = 1+ eval_Configure_bb7_in(V_ac,H,V_9,I,J,C,D,E,F,G)
     [V_ac>=V_NumberParams_0+1,V_NumberParams_0>=V_9,V_NumberParams_0+1=I,V_9=H+1,V_9=V_CLcount_2+1,J=2,B=2] 

### Cost equations --> "Loop" of eval_Configure_bb7_in/10 
* CEs [18] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_Configure_bb7_in/10 
* Loop 12: eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G)->  eval_Configure_bb7_in(V_ac,V_CLcount_2',V_9,V_NumberParams_0',B',C,D,E,F,G)
                  [V_ac>=V_NumberParams_0+1,V_NumberParams_0>=V_9,V_NumberParams_0+1=V_NumberParams_0',V_9=V_CLcount_2'+1,V_9=V_CLcount_2+1,B'=2,B=2] 
* Loop 13: eval_Configure_bb7_in(A,B,C,D,E,A,B,F,D,G) [A>=D+1,D>=B+1,B+1=G,B+1=F,B+1=C,E=2] 
* Loop 14: eval_Configure_bb7_in(A,B,C,A,D,A,B,E,A,F) [A>=B+1,B+1=F,B+1=E,B+1=C,D=2] 

### Ranking functions of CR eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) 
* RF of phase [12]: [V_ac-V_NumberParams_0]

#### Partial ranking functions of CR eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_ac-V_NumberParams_0


### Resulting Chains:eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Merging Chains  eval_Configure_bb7_in/10 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[14,[12]]] --> 3 
* [[13,[12]]] --> 4 


### Specialization of cost equations eval_Configure__critedge_in/8 
* CE 15 is refined into CE [19] 
* CE 14 is refined into CE [20] 


#### Refined cost equations eval_Configure__critedge_in/8 
* CE 19: eval_Configure__critedge_in(A,B,C,D,E,F,A,E) = 0
     [E>=D,F=3] 
* CE 20: eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) = 1+ eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,E,F,C,D)
     [V_NumberParams_0>=V_CLcount_3+1,V_CLcount_3+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_Configure__critedge_in/8 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of eval_Configure__critedge_in/8 
* Loop 15: eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D)->  eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3',B',C,D)
                  [V_NumberParams_0>=V_CLcount_3+1,V_CLcount_3+1=V_CLcount_3',B'=3,B=3] 
* Loop 16: eval_Configure__critedge_in(A,B,C,D,E,F,A,E) [E>=D,F=3] 

### Ranking functions of CR eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) 
* RF of phase [15]: [V_NumberParams_0-V_CLcount_3]

#### Partial ranking functions of CR eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_NumberParams_0-V_CLcount_3


### Resulting Chains:eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) 
* [[15],16]
* [16]


### Merging Chains  eval_Configure__critedge_in/8 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations eval_Configure_bb2_in/3 
* CE 7 is refined into CE [21] 
* CE 10 is refined into CE [22] 
* CE 8 is refined into CE [23,24,25,26] 
* CE 9 is refined into CE [27] 


#### Refined cost equations eval_Configure_bb2_in/3 
* CE 21: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 0
     [V_ac>=V_CLcount_2+1,B=4] 
* CE 22: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 0
     [V_CLcount_2>=V_ac,B=4] 
* CE 23: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 3+ eval_Configure_bb7_in(V_ac,C,V_ac,V_ac,D,V_ac,E,V_ac,V_ac,V_ac):1+ eval_Configure__critedge_in(V_ac,F,V_ac,V_ac,V_ac,G,V_ac,V_ac):1+ eval_Configure_bb2_in(V_ac,V_ac,H)
     [V_ac=F+1,V_ac=E+1,V_ac=C+1,V_ac=V_CLcount_2+1,H=4,G=3,D=2,B=4] 
* CE 24: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 3+ eval_Configure_bb7_in(V_ac,C,D,D,E,V_ac,F,D,D,D):2+ eval_Configure__critedge_in(V_ac,G,D,D,D,H,V_ac,D):1+ eval_Configure_bb2_in(V_ac,D,I)
     [V_ac>=D+1,D=G+1,D=F+1,D=C+1,D=V_CLcount_2+1,I=4,H=3,E=2,B=4] 
* CE 25: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 3+ eval_Configure_bb7_in(V_ac,C,D,D,E,V_ac,F,D,V_ac,D):3+ eval_Configure__critedge_in(V_ac,G,D,V_ac,D,H,V_ac,V_ac):2+ eval_Configure_bb2_in(V_ac,V_ac,I)
     [V_ac>=D+1,D=G+1,D=F+1,D=C+1,D=V_CLcount_2+1,I=4,H=3,E=2,B=4] 
* CE 26: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 3+ eval_Configure_bb7_in(V_ac,C,D,D,E,V_ac,F,D,G,D):4+ eval_Configure__critedge_in(V_ac,H,D,G,D,I,V_ac,G):2+ eval_Configure_bb2_in(V_ac,G,J)
     [V_ac>=G+1,G>=D+1,D=H+1,D=F+1,D=C+1,D=V_CLcount_2+1,J=4,I=3,E=2,B=4] 
* CE 27: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) = 1+ eval_Configure_bb2_in(V_ac,C,D)
     [V_ac>=V_CLcount_2+1,V_CLcount_2+2=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_Configure_bb2_in/3 
* CEs [26] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [22] --> Loop 23 

#### Loops of eval_Configure_bb2_in/3 
* Loop 17: eval_Configure_bb2_in(V_ac,V_CLcount_2,B)->  eval_Configure_bb2_in(V_ac,V_CLcount_2',B')
                  [V_ac>=V_CLcount_2'+1,V_CLcount_2'>=V_CLcount_2+2,B'=4,B=4] 
* Loop 18: eval_Configure_bb2_in(V_ac,V_CLcount_2,B)->  eval_Configure_bb2_in(V_ac,V_CLcount_2',B')
                  [V_ac>=V_CLcount_2+2,V_CLcount_2+1=V_CLcount_2',B'=4,B=4] 
* Loop 19: eval_Configure_bb2_in(V_ac,V_CLcount_2,B)->  eval_Configure_bb2_in(V_ac,V_CLcount_2',B')
                  [V_ac>=V_CLcount_2+1,V_CLcount_2+2=V_CLcount_2',B'=4,B=4] 
* Loop 20: eval_Configure_bb2_in(V_ac,V_CLcount_2,B)->  eval_Configure_bb2_in(V_ac,V_ac,A')
                  [V_ac>=V_CLcount_2+2,A'=4,B=4] 
* Loop 21: eval_Configure_bb2_in(V_ac,V_CLcount_2,B)->  eval_Configure_bb2_in(V_ac,V_ac,A')
                  [V_ac=V_CLcount_2+1,A'=4,B=4] 
* Loop 22: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) [V_ac>=V_CLcount_2+1,B=4] 
* Loop 23: eval_Configure_bb2_in(V_ac,V_CLcount_2,B) [V_CLcount_2>=V_ac,B=4] 

### Ranking functions of CR eval_Configure_bb2_in(V_ac,V_CLcount_2,B) 
* RF of phase [17,18,19]: [V_ac-V_CLcount_2]

#### Partial ranking functions of CR eval_Configure_bb2_in(V_ac,V_CLcount_2,B) 
* Partial RF of phase [17,18,19]:
  - RF of loop [17:1]:
    V_ac/2-V_CLcount_2/2-1
  - RF of loop [18:1]:
    V_ac-V_CLcount_2-1
  - RF of loop [19:1]:
    V_ac/2-V_CLcount_2/2


### Resulting Chains:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) 
* [[17,18,19],23]
* [[17,18,19],22]
* [[17,18,19],21,23]
* [[17,18,19],20,23]
* [23]
* [22]
* [21,23]
* [20,23]


### Merging Chains  eval_Configure_bb2_in/3 into  External patterns of execution 
* [[23,20],[23,21],[22],[23,20,[17,18,19]],[23,21,[17,18,19]],[22,[17,18,19]],[23,[17,18,19]]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_Configure_5/2 
* CE 5 is refined into CE [28,29] 
* CE 6 is refined into CE [30,31] 


#### Refined cost equations eval_Configure_5/2 
* CE 28: eval_Configure_5(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):1
     [V_ac>=4,D=4,C=3] 
* CE 29: eval_Configure_5(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):2
     [3>=V_ac,D=4,C=3] 
* CE 30: eval_Configure_5(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):1
     [V_ac>=2,D=4,C=1] 
* CE 31: eval_Configure_5(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):2
     [1>=V_ac,D=4,C=1] 

### Cost equations --> "Loop" of eval_Configure_5/2 
* CEs [28,30] --> Loop 24 
* CEs [29,31] --> Loop 25 

#### Loops of eval_Configure_5/2 
* Loop 24: eval_Configure_5(V_ac,B) [V_ac>=2] 
* Loop 25: eval_Configure_5(V_ac,B) [3>=V_ac] 

### Ranking functions of CR eval_Configure_5(V_ac,B) 

#### Partial ranking functions of CR eval_Configure_5(V_ac,B) 


### Resulting Chains:eval_Configure_5(V_ac,B) 
* [25]
* [24]


### Merging Chains  eval_Configure_5/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_Configure_2/2 
* CE 3 is refined into CE [32,33] 
* CE 4 is refined into CE [34,35] 


#### Refined cost equations eval_Configure_2/2 
* CE 32: eval_Configure_2(V_ac,B) = 0+ eval_Configure_5(V_ac,B):1
     [3>=V_ac] 
* CE 33: eval_Configure_2(V_ac,B) = 0+ eval_Configure_5(V_ac,B):2
     [V_ac>=2] 
* CE 34: eval_Configure_2(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):1
     [V_ac>=2,D=4,C=1] 
* CE 35: eval_Configure_2(V_ac,B) = 1+ eval_Configure_bb2_in(V_ac,C,D):2
     [1>=V_ac,D=4,C=1] 

### Cost equations --> "Loop" of eval_Configure_2/2 
* CEs [33,34] --> Loop 26 
* CEs [32,35] --> Loop 27 

#### Loops of eval_Configure_2/2 
* Loop 26: eval_Configure_2(V_ac,B) [V_ac>=2] 
* Loop 27: eval_Configure_2(V_ac,B) [3>=V_ac] 

### Ranking functions of CR eval_Configure_2(V_ac,B) 

#### Partial ranking functions of CR eval_Configure_2(V_ac,B) 


### Resulting Chains:eval_Configure_2(V_ac,B) 
* [27]
* [26]


### Merging Chains  eval_Configure_2/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_Configure_start/2 
* CE 2 is refined into CE [36,37] 


#### Refined cost equations eval_Configure_start/2 
* CE 36: eval_Configure_start(V_ac,B) = 0+ eval_Configure_2(V_ac,B):1
     [3>=V_ac] 
* CE 37: eval_Configure_start(V_ac,B) = 0+ eval_Configure_2(V_ac,B):2
     [V_ac>=2] 

### Cost equations --> "Loop" of eval_Configure_start/2 
* CEs [37] --> Loop 28 
* CEs [36] --> Loop 29 

#### Loops of eval_Configure_start/2 
* Loop 28: eval_Configure_start(V_ac,B) [V_ac>=2] 
* Loop 29: eval_Configure_start(V_ac,B) [3>=V_ac] 

### Ranking functions of CR eval_Configure_start(V_ac,B) 

#### Partial ranking functions of CR eval_Configure_start(V_ac,B) 


### Resulting Chains:eval_Configure_start(V_ac,B) 
* [29]
* [28]


### Merging Chains  eval_Configure_start/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) -> [eval_Configure_bb7_in(V_ac',V_CLcount_2',V_9',V_NumberParams_0',B',C',D',E',F',G')] 
1
#### Cost of phase [12]:eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) -> [eval_Configure_bb7_in(V_ac',V_CLcount_2',V_9',V_NumberParams_0',B',C',D',E',F',G')] 
1* #(12)+0
  Such that:#(12) =< V_ac-V_NumberParams_0
#(12) =< V_ac-V_NumberParams_0-V_ac'+V_NumberParams_0'

#### Cost of phase [12]:eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G) -> [eval_Configure_bb7_in(V_ac',V_CLcount_2',V_9',V_NumberParams_0',B',C',D',E',F',G')] 
1* #(12)+0
  Such that:#(12) =< V_ac-V_NumberParams_0
#(12) =< V_ac-V_NumberParams_0-V_ac'+V_NumberParams_0'

#### Cost of chains of eval_Configure_bb7_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,B,C,D,E,F,G):
* Chain [[12],14]: 1*s(1)+0
  Such that:s(1) =< V_ac-V_NumberParams_0

  with precondition: [B=2,V_CLcount_2+1=V_9,V_ac=C,V_CLcount_2=D,V_CLcount_2+1=E,V_ac=F,V_CLcount_2+1=G,V_NumberParams_0>=V_CLcount_2+1,V_ac>=V_NumberParams_0+1] 

* Chain [[12],13]: 1*s(2)+0
  Such that:s(2) =< -V_NumberParams_0+F

  with precondition: [B=2,V_CLcount_2+1=V_9,V_ac=C,V_CLcount_2=D,V_CLcount_2+1=E,V_CLcount_2+1=G,V_NumberParams_0>=V_CLcount_2+1,F>=V_NumberParams_0+1,V_ac>=F+1] 

* Chain [14]: 0
  with precondition: [B=2,V_CLcount_2+1=V_ac,V_CLcount_2+1=V_9,V_CLcount_2+1=V_NumberParams_0,V_CLcount_2+1=C,V_CLcount_2=D,V_CLcount_2+1=E,V_CLcount_2+1=F,V_CLcount_2+1=G] 

* Chain [13]: 0
  with precondition: [B=2,V_CLcount_2+1=V_9,V_CLcount_2+1=V_NumberParams_0,V_ac=C,V_CLcount_2=D,V_CLcount_2+1=E,V_CLcount_2+1=F,V_CLcount_2+1=G,V_ac>=V_CLcount_2+2] 


#### Cost of loops [15] 

 * loop 15:eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) -> [eval_Configure__critedge_in(V_ac',V_CLcount_2',V_9',V_NumberParams_0',V_CLcount_3',B',C',D')] 
1
#### Cost of phase [15]:eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D) -> [eval_Configure__critedge_in(V_ac',V_CLcount_2',V_9',V_NumberParams_0',V_CLcount_3',B',C',D')] 
1* #(15)+0
  Such that:#(15) =< V_NumberParams_0-V_CLcount_3
#(15) =< V_NumberParams_0-V_CLcount_3-V_NumberParams_0'+V_CLcount_3'

#### Cost of chains of eval_Configure__critedge_in(V_ac,V_CLcount_2,V_9,V_NumberParams_0,V_CLcount_3,B,C,D):
* Chain [[15],16]: 1*s(3)+0
  Such that:s(3) =< V_NumberParams_0-V_CLcount_3

  with precondition: [B=3,V_ac=C,V_NumberParams_0=D,V_NumberParams_0>=V_CLcount_3+1] 

* Chain [16]: 0
  with precondition: [B=3,C=V_ac,V_CLcount_3=D,V_CLcount_3>=V_NumberParams_0] 


#### Cost of loops [17,18,19] 

 * loop 17:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
2*s(6)+3
  Such that:s(5) =< -V_CLcount_2+V_CLcount_2'-1
s(6) =< s(5)

 * loop 18:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
3
 * loop 19:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
1
#### Cost of phase [17,18,19]:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
1* #(19)+3* #(18)+3* #(17)+2*sm(17,6)+0
  Such that:#(18)+ #(19) =< V_ac-V_CLcount_2-1
#(17) =< V_ac/2-V_CLcount_2/2-1
#(19) =< V_ac/2-V_CLcount_2/2
s(9) =< V_ac-V_CLcount_2
s(10) =< V_ac-V_CLcount_2-V_ac'+V_CLcount_2'
s(11) =< V_ac/2-V_CLcount_2/2-V_ac'/2+V_CLcount_2'/2
#(17)+ #(18)+ #(19) =< s(9)
#(18)+ #(19)+sm(17,5) =< s(9)
#(17)+ #(18)+ #(19) =< s(10)
#(18)+ #(19)+sm(17,5) =< s(10)
#(17)+ #(19) =< s(11)
sm(17,6) =< sm(17,5)

#### Cost of phase [17,18,19]:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
1* #(19)+3* #(18)+3* #(17)+2*sm(17,6)+0
  Such that:#(18)+ #(19) =< V_ac-V_CLcount_2-1
#(17) =< V_ac/2-V_CLcount_2/2-1
#(19) =< V_ac/2-V_CLcount_2/2
s(9) =< V_ac-V_CLcount_2
s(10) =< V_ac-V_CLcount_2-V_ac'+V_CLcount_2'
s(11) =< V_ac/2-V_CLcount_2/2-V_ac'/2+V_CLcount_2'/2
#(17)+ #(18)+ #(19) =< s(9)
#(18)+ #(19)+sm(17,5) =< s(9)
#(17)+ #(18)+ #(19) =< s(10)
#(18)+ #(19)+sm(17,5) =< s(10)
#(17)+ #(19) =< s(11)
sm(17,6) =< sm(17,5)

#### Cost of phase [17,18,19]:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
1* #(19)+3* #(18)+3* #(17)+2*sm(17,6)+0
  Such that:#(18)+ #(19) =< V_ac-V_CLcount_2-1
#(17) =< V_ac/2-V_CLcount_2/2-1
#(19) =< V_ac/2-V_CLcount_2/2
s(9) =< V_ac-V_CLcount_2
s(10) =< V_ac-V_CLcount_2-V_ac'+V_CLcount_2'
s(11) =< V_ac/2-V_CLcount_2/2-V_ac'/2+V_CLcount_2'/2
#(17)+ #(18)+ #(19) =< s(9)
#(18)+ #(19)+sm(17,5) =< s(9)
#(17)+ #(18)+ #(19) =< s(10)
#(18)+ #(19)+sm(17,5) =< s(10)
#(17)+ #(19) =< s(11)
sm(17,6) =< sm(17,5)

#### Cost of phase [17,18,19]:eval_Configure_bb2_in(V_ac,V_CLcount_2,B) -> [eval_Configure_bb2_in(V_ac',V_CLcount_2',B')] 
1* #(19)+3* #(18)+3* #(17)+2*sm(17,6)+0
  Such that:#(18)+ #(19) =< V_ac-V_CLcount_2-1
#(17) =< V_ac/2-V_CLcount_2/2-1
#(19) =< V_ac/2-V_CLcount_2/2
s(9) =< V_ac-V_CLcount_2
s(10) =< V_ac-V_CLcount_2-V_ac'+V_CLcount_2'
s(11) =< V_ac/2-V_CLcount_2/2-V_ac'/2+V_CLcount_2'/2
#(17)+ #(18)+ #(19) =< s(9)
#(18)+ #(19)+sm(17,5) =< s(9)
#(17)+ #(18)+ #(19) =< s(10)
#(18)+ #(19)+sm(17,5) =< s(10)
#(17)+ #(19) =< s(11)
sm(17,6) =< sm(17,5)

#### Cost of chains of eval_Configure_bb2_in(V_ac,V_CLcount_2,B):
* Chain [[17,18,19],23]: 1*s(42)+3*s(43)+3*s(46)+2*s(49)+0
  Such that:s(42)+s(43) =< V_ac-V_CLcount_2-1
s(44) =< V_ac-V_CLcount_2
s(45) =< V_ac-V_CLcount_2+1
s(46) =< V_ac/2-V_CLcount_2/2-1
s(47) =< V_ac/2-V_CLcount_2/2+1/2
s(46)+s(43)+s(42) =< s(44)
s(43)+s(42)+s(48) =< s(44)
s(46)+s(43)+s(42) =< s(45)
s(43)+s(42)+s(48) =< s(45)
s(46)+s(42) =< s(47)
s(49) =< s(48)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+1] 

* Chain [[17,18,19],22]: 1*s(55)+3*s(54)+3*s(51)+2*s(57)+0
  Such that:s(50) =< V_ac-V_CLcount_2
s(51) =< V_ac/2-V_CLcount_2/2-1
s(52) =< V_ac/2-V_CLcount_2/2-1/2
s(53) =< V_ac-V_CLcount_2-1
s(54)+s(55) =< s(53)
s(51)+s(54)+s(55) =< s(50)
s(54)+s(55)+s(56) =< s(50)
s(51)+s(54)+s(55) =< s(53)
s(54)+s(55)+s(56) =< s(53)
s(51)+s(55) =< s(52)
s(57) =< s(56)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 

* Chain [[17,18,19],21,23]: 1*s(63)+3*s(62)+3*s(59)+2*s(65)+3
  Such that:s(58) =< V_ac-V_CLcount_2
s(59) =< V_ac/2-V_CLcount_2/2-1
s(60) =< V_ac/2-V_CLcount_2/2-1/2
s(61) =< V_ac-V_CLcount_2-1
s(62)+s(63) =< s(61)
s(59)+s(62)+s(63) =< s(58)
s(62)+s(63)+s(64) =< s(58)
s(59)+s(62)+s(63) =< s(61)
s(62)+s(63)+s(64) =< s(61)
s(59)+s(63) =< s(60)
s(65) =< s(64)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 

* Chain [[17,18,19],20,23]: 2*s(73)+1*s(72)+3*s(71)+3*s(67)+2*s(75)+3
  Such that:s(66) =< V_ac-V_CLcount_2
s(67) =< V_ac/2-V_CLcount_2/2-1
s(68) =< V_ac-V_CLcount_2-1
s(69)+s(70) =< s(68)
s(71)+s(72) =< s(68)
s(73) =< s(70)
s(67)+s(71)+s(72) =< s(66)
s(71)+s(72)+s(74) =< s(66)
s(67)+s(71)+s(72) =< s(69)
s(71)+s(72)+s(74) =< s(69)
s(67)+s(72) =< s(68)
s(75) =< s(74)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+3] 

* Chain [23]: 0
  with precondition: [B=4,3>=V_CLcount_2,V_CLcount_2>=1,V_CLcount_2>=V_ac] 

* Chain [22]: 0
  with precondition: [B=4,3>=V_CLcount_2,V_CLcount_2>=1,V_ac>=V_CLcount_2+1] 

* Chain [21,23]: 3
  with precondition: [B=4,V_CLcount_2+1=V_ac,3>=V_CLcount_2,V_CLcount_2>=1] 

* Chain [20,23]: 2*s(77)+3
  Such that:s(76) =< V_ac-V_CLcount_2-1
s(77) =< s(76)

  with precondition: [B=4,3>=V_CLcount_2,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 


#### Cost of chains of eval_Configure_5(V_ac,B):
* Chain [25]: 1
  with precondition: [3>=V_ac] 

* Chain [24]: 2*s(180)+1*s(175)+3*s(174)+3*s(179)+2*s(182)+2*s(187)+1*s(186)+3*s(185)+3*s(176)+2*s(189)+1*s(191)+3*s(190)+3*s(177)+2*s(193)+1*s(195)+3*s(194)+3*s(178)+2*s(197)+2*s(204)+1*s(199)+3*s(198)+3*s(203)+2*s(206)+2*s(211)+1*s(210)+3*s(209)+3*s(200)+2*s(213)+1*s(215)+3*s(214)+3*s(201)+2*s(217)+1*s(219)+3*s(218)+3*s(202)+2*s(221)+4
  Such that:s(164) =< V_ac-4
s(165) =< V_ac-3
s(166) =< V_ac-2
s(167) =< V_ac-1
s(168) =< V_ac
s(169) =< V_ac/2-2
s(170) =< V_ac/2-1
s(171) =< V_ac/2
s(172) =< V_ac/2-5/2
s(173) =< V_ac/2-3/2
s(174)+s(175) =< s(164)
s(176) =< s(172)
s(177) =< s(172)
s(178) =< s(172)
s(179) =< s(172)
s(180) =< s(164)
s(174)+s(175)+s(179) =< s(165)
s(174)+s(175)+s(181) =< s(165)
s(174)+s(175)+s(179) =< s(166)
s(174)+s(175)+s(181) =< s(166)
s(175)+s(179) =< s(170)
s(182) =< s(181)
s(183)+s(184) =< s(164)
s(185)+s(186) =< s(164)
s(187) =< s(184)
s(176)+s(185)+s(186) =< s(165)
s(185)+s(186)+s(188) =< s(165)
s(176)+s(185)+s(186) =< s(183)
s(185)+s(186)+s(188) =< s(183)
s(176)+s(186) =< s(164)
s(189) =< s(188)
s(177)+s(190)+s(191) =< s(165)
s(190)+s(191)+s(192) =< s(165)
s(177)+s(190)+s(191) =< s(164)
s(190)+s(191)+s(192) =< s(164)
s(177)+s(191) =< s(169)
s(193) =< s(192)
s(178)+s(194)+s(195) =< s(165)
s(194)+s(195)+s(196) =< s(165)
s(178)+s(194)+s(195) =< s(164)
s(194)+s(195)+s(196) =< s(164)
s(178)+s(195) =< s(169)
s(197) =< s(196)
s(198)+s(199) =< s(166)
s(200) =< s(173)
s(201) =< s(173)
s(202) =< s(173)
s(203) =< s(173)
s(204) =< s(166)
s(198)+s(199)+s(203) =< s(167)
s(198)+s(199)+s(205) =< s(167)
s(198)+s(199)+s(203) =< s(168)
s(198)+s(199)+s(205) =< s(168)
s(199)+s(203) =< s(171)
s(206) =< s(205)
s(207)+s(208) =< s(166)
s(209)+s(210) =< s(166)
s(211) =< s(208)
s(200)+s(209)+s(210) =< s(167)
s(209)+s(210)+s(212) =< s(167)
s(200)+s(209)+s(210) =< s(207)
s(209)+s(210)+s(212) =< s(207)
s(200)+s(210) =< s(166)
s(213) =< s(212)
s(201)+s(214)+s(215) =< s(167)
s(214)+s(215)+s(216) =< s(167)
s(201)+s(214)+s(215) =< s(166)
s(214)+s(215)+s(216) =< s(166)
s(201)+s(215) =< s(170)
s(217) =< s(216)
s(202)+s(218)+s(219) =< s(167)
s(218)+s(219)+s(220) =< s(167)
s(202)+s(218)+s(219) =< s(166)
s(218)+s(219)+s(220) =< s(166)
s(202)+s(219) =< s(170)
s(221) =< s(220)

  with precondition: [V_ac>=2] 


#### Cost of chains of eval_Configure_2(V_ac,B):
* Chain [27]: 1
  with precondition: [3>=V_ac] 

* Chain [26]: 2*s(371)+1*s(366)+3*s(365)+3*s(370)+2*s(373)+2*s(378)+1*s(377)+3*s(376)+3*s(367)+2*s(380)+1*s(382)+3*s(381)+3*s(368)+2*s(384)+1*s(386)+3*s(385)+3*s(369)+2*s(388)+1*s(390)+3*s(389)+3*s(394)+4*s(395)+2*s(397)+2*s(402)+1*s(401)+3*s(400)+3*s(391)+2*s(404)+1*s(406)+3*s(405)+3*s(392)+2*s(408)+1*s(410)+3*s(409)+3*s(393)+2*s(412)+1*s(414)+3*s(413)+3*s(418)+2*s(420)+2*s(425)+1*s(424)+3*s(423)+3*s(415)+2*s(427)+1*s(429)+3*s(428)+3*s(416)+2*s(431)+1*s(433)+3*s(432)+3*s(417)+2*s(435)+4
  Such that:s(355) =< V_ac-4
s(356) =< V_ac-3
s(357) =< V_ac-2
s(358) =< V_ac-1
s(359) =< V_ac
s(360) =< V_ac/2-2
s(361) =< V_ac/2-1
s(362) =< V_ac/2
s(363) =< V_ac/2-5/2
s(364) =< V_ac/2-3/2
s(365)+s(366) =< s(355)
s(367) =< s(363)
s(368) =< s(363)
s(369) =< s(363)
s(370) =< s(363)
s(371) =< s(355)
s(365)+s(366)+s(370) =< s(356)
s(365)+s(366)+s(372) =< s(356)
s(365)+s(366)+s(370) =< s(357)
s(365)+s(366)+s(372) =< s(357)
s(366)+s(370) =< s(361)
s(373) =< s(372)
s(374)+s(375) =< s(355)
s(376)+s(377) =< s(355)
s(378) =< s(375)
s(367)+s(376)+s(377) =< s(356)
s(376)+s(377)+s(379) =< s(356)
s(367)+s(376)+s(377) =< s(374)
s(376)+s(377)+s(379) =< s(374)
s(367)+s(377) =< s(355)
s(380) =< s(379)
s(368)+s(381)+s(382) =< s(356)
s(381)+s(382)+s(383) =< s(356)
s(368)+s(381)+s(382) =< s(355)
s(381)+s(382)+s(383) =< s(355)
s(368)+s(382) =< s(360)
s(384) =< s(383)
s(369)+s(385)+s(386) =< s(356)
s(385)+s(386)+s(387) =< s(356)
s(369)+s(385)+s(386) =< s(355)
s(385)+s(386)+s(387) =< s(355)
s(369)+s(386) =< s(360)
s(388) =< s(387)
s(389)+s(390) =< s(357)
s(391) =< s(364)
s(392) =< s(364)
s(393) =< s(364)
s(394) =< s(364)
s(395) =< s(357)
s(389)+s(390)+s(394) =< s(358)
s(389)+s(390)+s(396) =< s(358)
s(389)+s(390)+s(394) =< s(359)
s(389)+s(390)+s(396) =< s(359)
s(390)+s(394) =< s(362)
s(397) =< s(396)
s(398)+s(399) =< s(357)
s(400)+s(401) =< s(357)
s(402) =< s(399)
s(391)+s(400)+s(401) =< s(358)
s(400)+s(401)+s(403) =< s(358)
s(391)+s(400)+s(401) =< s(398)
s(400)+s(401)+s(403) =< s(398)
s(391)+s(401) =< s(357)
s(404) =< s(403)
s(392)+s(405)+s(406) =< s(358)
s(405)+s(406)+s(407) =< s(358)
s(392)+s(405)+s(406) =< s(357)
s(405)+s(406)+s(407) =< s(357)
s(392)+s(406) =< s(361)
s(408) =< s(407)
s(393)+s(409)+s(410) =< s(358)
s(409)+s(410)+s(411) =< s(358)
s(393)+s(409)+s(410) =< s(357)
s(409)+s(410)+s(411) =< s(357)
s(393)+s(410) =< s(361)
s(412) =< s(411)
s(413)+s(414) =< s(357)
s(415) =< s(364)
s(416) =< s(364)
s(417) =< s(364)
s(418) =< s(364)
s(413)+s(414)+s(418) =< s(358)
s(413)+s(414)+s(419) =< s(358)
s(413)+s(414)+s(418) =< s(359)
s(413)+s(414)+s(419) =< s(359)
s(414)+s(418) =< s(362)
s(420) =< s(419)
s(421)+s(422) =< s(357)
s(423)+s(424) =< s(357)
s(425) =< s(422)
s(415)+s(423)+s(424) =< s(358)
s(423)+s(424)+s(426) =< s(358)
s(415)+s(423)+s(424) =< s(421)
s(423)+s(424)+s(426) =< s(421)
s(415)+s(424) =< s(357)
s(427) =< s(426)
s(416)+s(428)+s(429) =< s(358)
s(428)+s(429)+s(430) =< s(358)
s(416)+s(428)+s(429) =< s(357)
s(428)+s(429)+s(430) =< s(357)
s(416)+s(429) =< s(361)
s(431) =< s(430)
s(417)+s(432)+s(433) =< s(358)
s(432)+s(433)+s(434) =< s(358)
s(417)+s(432)+s(433) =< s(357)
s(432)+s(433)+s(434) =< s(357)
s(417)+s(433) =< s(361)
s(435) =< s(434)

  with precondition: [V_ac>=2] 


#### Cost of chains of eval_Configure_start(V_ac,B):
* Chain [29]: 1
  with precondition: [3>=V_ac] 

* Chain [28]: 2*s(614)+1*s(609)+3*s(608)+3*s(613)+2*s(616)+2*s(621)+1*s(620)+3*s(619)+3*s(610)+2*s(623)+1*s(625)+3*s(624)+3*s(611)+2*s(627)+1*s(629)+3*s(628)+3*s(612)+2*s(631)+1*s(633)+3*s(632)+3*s(637)+4*s(638)+2*s(640)+2*s(645)+1*s(644)+3*s(643)+3*s(634)+2*s(647)+1*s(649)+3*s(648)+3*s(635)+2*s(651)+1*s(653)+3*s(652)+3*s(636)+2*s(655)+1*s(657)+3*s(656)+3*s(661)+2*s(663)+2*s(668)+1*s(667)+3*s(666)+3*s(658)+2*s(670)+1*s(672)+3*s(671)+3*s(659)+2*s(674)+1*s(676)+3*s(675)+3*s(660)+2*s(678)+4
  Such that:s(598) =< V_ac-4
s(599) =< V_ac-3
s(600) =< V_ac-2
s(601) =< V_ac-1
s(602) =< V_ac
s(603) =< V_ac/2-2
s(604) =< V_ac/2-1
s(605) =< V_ac/2
s(606) =< V_ac/2-5/2
s(607) =< V_ac/2-3/2
s(608)+s(609) =< s(598)
s(610) =< s(606)
s(611) =< s(606)
s(612) =< s(606)
s(613) =< s(606)
s(614) =< s(598)
s(608)+s(609)+s(613) =< s(599)
s(608)+s(609)+s(615) =< s(599)
s(608)+s(609)+s(613) =< s(600)
s(608)+s(609)+s(615) =< s(600)
s(609)+s(613) =< s(604)
s(616) =< s(615)
s(617)+s(618) =< s(598)
s(619)+s(620) =< s(598)
s(621) =< s(618)
s(610)+s(619)+s(620) =< s(599)
s(619)+s(620)+s(622) =< s(599)
s(610)+s(619)+s(620) =< s(617)
s(619)+s(620)+s(622) =< s(617)
s(610)+s(620) =< s(598)
s(623) =< s(622)
s(611)+s(624)+s(625) =< s(599)
s(624)+s(625)+s(626) =< s(599)
s(611)+s(624)+s(625) =< s(598)
s(624)+s(625)+s(626) =< s(598)
s(611)+s(625) =< s(603)
s(627) =< s(626)
s(612)+s(628)+s(629) =< s(599)
s(628)+s(629)+s(630) =< s(599)
s(612)+s(628)+s(629) =< s(598)
s(628)+s(629)+s(630) =< s(598)
s(612)+s(629) =< s(603)
s(631) =< s(630)
s(632)+s(633) =< s(600)
s(634) =< s(607)
s(635) =< s(607)
s(636) =< s(607)
s(637) =< s(607)
s(638) =< s(600)
s(632)+s(633)+s(637) =< s(601)
s(632)+s(633)+s(639) =< s(601)
s(632)+s(633)+s(637) =< s(602)
s(632)+s(633)+s(639) =< s(602)
s(633)+s(637) =< s(605)
s(640) =< s(639)
s(641)+s(642) =< s(600)
s(643)+s(644) =< s(600)
s(645) =< s(642)
s(634)+s(643)+s(644) =< s(601)
s(643)+s(644)+s(646) =< s(601)
s(634)+s(643)+s(644) =< s(641)
s(643)+s(644)+s(646) =< s(641)
s(634)+s(644) =< s(600)
s(647) =< s(646)
s(635)+s(648)+s(649) =< s(601)
s(648)+s(649)+s(650) =< s(601)
s(635)+s(648)+s(649) =< s(600)
s(648)+s(649)+s(650) =< s(600)
s(635)+s(649) =< s(604)
s(651) =< s(650)
s(636)+s(652)+s(653) =< s(601)
s(652)+s(653)+s(654) =< s(601)
s(636)+s(652)+s(653) =< s(600)
s(652)+s(653)+s(654) =< s(600)
s(636)+s(653) =< s(604)
s(655) =< s(654)
s(656)+s(657) =< s(600)
s(658) =< s(607)
s(659) =< s(607)
s(660) =< s(607)
s(661) =< s(607)
s(656)+s(657)+s(661) =< s(601)
s(656)+s(657)+s(662) =< s(601)
s(656)+s(657)+s(661) =< s(602)
s(656)+s(657)+s(662) =< s(602)
s(657)+s(661) =< s(605)
s(663) =< s(662)
s(664)+s(665) =< s(600)
s(666)+s(667) =< s(600)
s(668) =< s(665)
s(658)+s(666)+s(667) =< s(601)
s(666)+s(667)+s(669) =< s(601)
s(658)+s(666)+s(667) =< s(664)
s(666)+s(667)+s(669) =< s(664)
s(658)+s(667) =< s(600)
s(670) =< s(669)
s(659)+s(671)+s(672) =< s(601)
s(671)+s(672)+s(673) =< s(601)
s(659)+s(671)+s(672) =< s(600)
s(671)+s(672)+s(673) =< s(600)
s(659)+s(672) =< s(604)
s(674) =< s(673)
s(660)+s(675)+s(676) =< s(601)
s(675)+s(676)+s(677) =< s(601)
s(660)+s(675)+s(676) =< s(600)
s(675)+s(676)+s(677) =< s(600)
s(660)+s(676) =< s(604)
s(678) =< s(677)

  with precondition: [V_ac>=2] 


Closed-form bounds of eval_Configure_start(V_ac,B): 
-------------------------------------
* Chain [29] with precondition: [3>=V_ac] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [28] with precondition: [V_ac>=2] 
    - Upper bound: 111*V_ac+4 
    - Complexity: n 

### Maximum cost of eval_Configure_start(V_ac,B): nat(V_ac)*102+3+nat(V_ac/2)*18+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 89 ms.
* Invariants computed in 176 ms.
   - Backward Invariants 105 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 263 ms.
* Termination proved in 43 ms.
* Upper bounds computed in 1158 ms.
   - Equation cost structures 463 ms.
   - Phase cost structures 105 ms.
   - Chain cost structures 122 ms.
   - Solving cost expressions 192 ms.
* Total analysis performed in 1849 ms.

