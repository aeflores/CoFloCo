Warning: Ignored call to eval_set_color_ht_extracted_stop/1 in equation eval_set_color_ht_extracted_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_set_color_ht_extracted_bb4_in/11]
1. recursive  : [eval_set_color_ht_extracted_bb2_in/9,eval_set_color_ht_extracted_bb3_in/9,loop_cont_eval_set_color_ht_extracted_bb4_in/10]
2. recursive  : [eval_set_color_ht_extracted_bb1_in/3,eval_set_color_ht_extracted_bb5_in/5,loop_cont_eval_set_color_ht_extracted_bb2_in/6]
3. non_recursive  : [eval_set_color_ht_extracted_bb6_in/1]
4. non_recursive  : [loop_cont_eval_set_color_ht_extracted_bb1_in/2]
5. non_recursive  : [eval_set_color_ht_extracted_9/3]
6. non_recursive  : [eval_set_color_ht_extracted_8/3]
7. non_recursive  : [eval_set_color_ht_extracted_7/3]
8. non_recursive  : [eval_set_color_ht_extracted_6/3]
9. non_recursive  : [eval_set_color_ht_extracted_5/3]
10. non_recursive  : [eval_set_color_ht_extracted_4/3]
11. non_recursive  : [eval_set_color_ht_extracted_3/3]
12. non_recursive  : [eval_set_color_ht_extracted_2/3]
13. non_recursive  : [eval_set_color_ht_extracted_1/3]
14. non_recursive  : [eval_set_color_ht_extracted_0/3]
15. non_recursive  : [eval_set_color_ht_extracted_bb0_in/3]
16. non_recursive  : [eval_set_color_ht_extracted_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_set_color_ht_extracted_bb4_in/11
1. SCC is partially evaluated into eval_set_color_ht_extracted_bb2_in/9
2. SCC is partially evaluated into eval_set_color_ht_extracted_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_set_color_ht_extracted_9/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_set_color_ht_extracted_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_set_color_ht_extracted_bb4_in/11 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_set_color_ht_extracted_bb4_in/11 
* CE 10: eval_set_color_ht_extracted_bb4_in(A,B,C,D,E,F,G,A,B,C,E) = 0
     [D>=E+1,E+8>=D,E>=0,0>=F,G=2] 
* CE 11: eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) = 1+ eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,G,H,C,D,E,F)
     [V_x_0>=V_3+V_i_0,V_3+8>=V_x_0,V_i_0>=1,V_3>=0,V_i_0=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_set_color_ht_extracted_bb4_in/11 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of eval_set_color_ht_extracted_bb4_in/11 
* Loop 10: eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F)->  eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0',B',C,D,E,F)
                  [V_x_0>=V_3+V_i_0,V_3+8>=V_x_0,V_i_0>=1,V_3>=0,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 11: eval_set_color_ht_extracted_bb4_in(A,B,C,D,E,F,G,A,B,C,E) [D>=E+1,E+8>=D,E>=0,0>=F,G=2] 

### Ranking functions of CR eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) 
* RF of phase [10]: [V_i_0]

#### Partial ranking functions of CR eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_i_0

Discarded unfeasible chain [[10]]...(Non-terminating chain proved terminating)

### Resulting Chains:eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) 
* [[10],11]


### Merging Chains  eval_set_color_ht_extracted_bb4_in/11 into  External patterns of execution 
* [[11,[10]]] --> 1 


### Specialization of cost equations eval_set_color_ht_extracted_bb2_in/9 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


#### Refined cost equations eval_set_color_ht_extracted_bb2_in/9 
* CE 12: eval_set_color_ht_extracted_bb2_in(A,B,C,D,E,A,B,C,D) = 0
     [0>=D,E=3] 
* CE 13: eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) = 2+ eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,G,H,I,J,V_w,V_y_0,V_0,H):1+ eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,H,K,C,D,E,F)
     [H>=0,H+8=G,H+8=V_x_0,K=3,J=2,I=8,B=3] 
* CE 14: eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) = 2+ eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,G,V_x_0,H,V_w,V_y_0,V_0,I):1+ eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,J,K,C,D,E,F)
     [V_x_0>=1,7>=V_x_0,K=3,J=0,I=0,H=2,G=0,B=3] 

### Cost equations --> "Loop" of eval_set_color_ht_extracted_bb2_in/9 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of eval_set_color_ht_extracted_bb2_in/9 
* Loop 12: eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F)->  eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0',B',C,D,E,F)
                  [V_x_0>=8,V_x_0=V_x_0'+8,B'=3,B=3] 
* Loop 13: eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F)->  eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0',B',C,D,E,F)
                  [V_x_0>=1,7>=V_x_0,B'=3,V_x_0'=0,B=3] 
* Loop 14: eval_set_color_ht_extracted_bb2_in(A,B,C,D,E,A,B,C,D) [0>=D,E=3] 

### Ranking functions of CR eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) 
* RF of phase [12]: [V_x_0/8-7/8]

#### Partial ranking functions of CR eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_x_0/8-7/8

Discarded unfeasible chain [[12]]...(Non-terminating chain proved terminating)

### Resulting Chains:eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) 
* [[12],14]
* [[12],13,14]
* [14]
* [13,14]


### Merging Chains  eval_set_color_ht_extracted_bb2_in/9 into  External patterns of execution 
* [[14,13]] --> 1 
* [[14,[12]]] --> 2 
* [[14,13,[12]]] --> 3 
* [[14]] --> 4 


### Specialization of cost equations eval_set_color_ht_extracted_bb1_in/3 
* CE 4 is refined into CE [15,16,17,18] 
* CE 3 is refined into CE [19,20,21,22] 


#### Refined cost equations eval_set_color_ht_extracted_bb1_in/3 
* CE 15: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 1+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):1
     [V_w>=1,7>=V_w,0>=D,D+1=F,D+1=C,D+1=V_y_0,G=0,E=3,B=4] 
* CE 16: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 1+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):2
     [V_w>=8,0>=D,D+1=F,D+1=C,D+1=V_y_0,G=0,E=3,B=4] 
* CE 17: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 1+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):3
     [V_w>=9,0>=D,D+1=F,D+1=C,D+1=V_y_0,G=0,E=3,B=4] 
* CE 18: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 1+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):4
     [0>=V_w,0>=D,D+1=F,D+1=C,D+1=V_y_0,E=3,B=4] 
* CE 19: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 2+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):1+ eval_set_color_ht_extracted_bb1_in(V_w,D,H)
     [V_w>=1,D>=1,7>=V_w,D+1=F,D+1=C,D+1=V_y_0,H=4,G=0,E=3,B=4] 
* CE 20: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 2+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):2+ eval_set_color_ht_extracted_bb1_in(V_w,D,H)
     [V_w>=8,D>=1,D+1=F,D+1=C,D+1=V_y_0,H=4,G=0,E=3,B=4] 
* CE 21: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 2+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):3+ eval_set_color_ht_extracted_bb1_in(V_w,D,H)
     [V_w>=9,D>=1,D+1=F,D+1=C,D+1=V_y_0,H=4,G=0,E=3,B=4] 
* CE 22: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) = 2+ eval_set_color_ht_extracted_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):4+ eval_set_color_ht_extracted_bb1_in(V_w,D,G)
     [D>=1,0>=V_w,D+1=F,D+1=C,D+1=V_y_0,G=4,E=3,B=4] 

### Cost equations --> "Loop" of eval_set_color_ht_extracted_bb1_in/3 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [16] --> Loop 20 
* CEs [18] --> Loop 21 
* CEs [15] --> Loop 22 

#### Loops of eval_set_color_ht_extracted_bb1_in/3 
* Loop 15: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)->  eval_set_color_ht_extracted_bb1_in(V_w,V_y_0',B')
                  [V_y_0>=2,V_w>=9,V_y_0=V_y_0'+1,B'=4,B=4] 
* Loop 16: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)->  eval_set_color_ht_extracted_bb1_in(V_w,V_y_0',B')
                  [V_y_0>=2,V_w>=8,V_y_0=V_y_0'+1,B'=4,B=4] 
* Loop 17: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)->  eval_set_color_ht_extracted_bb1_in(V_w,V_y_0',B')
                  [V_y_0>=2,0>=V_w,V_y_0=V_y_0'+1,B'=4,B=4] 
* Loop 18: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)->  eval_set_color_ht_extracted_bb1_in(V_w,V_y_0',B')
                  [V_y_0>=2,V_w>=1,7>=V_w,V_y_0=V_y_0'+1,B'=4,B=4] 
* Loop 19: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) [V_w>=9,1>=V_y_0,B=4] 
* Loop 20: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) [V_w>=8,1>=V_y_0,B=4] 
* Loop 21: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) [1>=V_y_0,0>=V_w,B=4] 
* Loop 22: eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) [V_w>=1,1>=V_y_0,7>=V_w,B=4] 

### Ranking functions of CR eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) 
* RF of phase [15,16]: [V_y_0-1]
* RF of phase [17]: [V_y_0-1]
* RF of phase [18]: [V_y_0-1]

#### Partial ranking functions of CR eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1,16:1]:
    V_y_0-1
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_y_0-1
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_y_0-1

Discarded unfeasible chain [[18]]...(Non-terminating chain proved terminating)
Discarded unfeasible chain [[17]](Non-terminating chain proved terminating)
Discarded unfeasible chain [[15,16]](Non-terminating chain proved terminating)

### Resulting Chains:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) 
* [[18],22]
* [[17],21]
* [[15,16],20]
* [[15,16],19]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  eval_set_color_ht_extracted_bb1_in/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[18]]] --> 2 
* [[21]] --> 3 
* [[21,[17]]] --> 4 
* [[20]] --> 5 
* [[19]] --> 6 
* [[20,[15,16]]] --> 7 
* [[19,[15,16]]] --> 8 


### Specialization of cost equations eval_set_color_ht_extracted_9/3 
* CE 2 is refined into CE [23,24,25,26,27,28,29,30] 


#### Refined cost equations eval_set_color_ht_extracted_9/3 
* CE 23: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):1
     [V_w>=1,1>=V_h,7>=V_w,C=4] 
* CE 24: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):2
     [V_h>=2,V_w>=1,7>=V_w,C=4] 
* CE 25: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):3
     [1>=V_h,0>=V_w,C=4] 
* CE 26: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):4
     [V_h>=2,0>=V_w,C=4] 
* CE 27: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):5
     [V_w>=8,1>=V_h,C=4] 
* CE 28: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):6
     [V_w>=9,1>=V_h,C=4] 
* CE 29: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):7
     [V_h>=2,V_w>=8,C=4] 
* CE 30: eval_set_color_ht_extracted_9(V_h,V_w,B) = 1+ eval_set_color_ht_extracted_bb1_in(V_w,V_h,C):8
     [V_h>=2,V_w>=9,C=4] 

### Cost equations --> "Loop" of eval_set_color_ht_extracted_9/3 
* CEs [30] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [24] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [25] --> Loop 29 
* CEs [23] --> Loop 30 

#### Loops of eval_set_color_ht_extracted_9/3 
* Loop 23: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=9,V_h>=2] 
* Loop 24: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=8,V_h>=2] 
* Loop 25: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_h>=2,0>=V_w] 
* Loop 26: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=1,V_h>=2,7>=V_w] 
* Loop 27: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=9,1>=V_h] 
* Loop 28: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=8,1>=V_h] 
* Loop 29: eval_set_color_ht_extracted_9(V_h,V_w,B) [0>=V_w,1>=V_h] 
* Loop 30: eval_set_color_ht_extracted_9(V_h,V_w,B) [V_w>=1,7>=V_w,1>=V_h] 

### Ranking functions of CR eval_set_color_ht_extracted_9(V_h,V_w,B) 

#### Partial ranking functions of CR eval_set_color_ht_extracted_9(V_h,V_w,B) 


### Resulting Chains:eval_set_color_ht_extracted_9(V_h,V_w,B) 
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]


### Merging Chains  eval_set_color_ht_extracted_9/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 
* [[26]] --> 5 
* [[25]] --> 6 
* [[24]] --> 7 
* [[23]] --> 8 


### Specialization of cost equations eval_set_color_ht_extracted_start/3 
* CE 1 is refined into CE [31,32,33,34,35,36,37,38] 


#### Refined cost equations eval_set_color_ht_extracted_start/3 
* CE 31: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):1
     [V_w>=1,7>=V_w,1>=V_h] 
* CE 32: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):2
     [0>=V_w,1>=V_h] 
* CE 33: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):3
     [V_w>=8,1>=V_h] 
* CE 34: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):4
     [V_w>=9,1>=V_h] 
* CE 35: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):5
     [V_w>=1,V_h>=2,7>=V_w] 
* CE 36: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):6
     [V_h>=2,0>=V_w] 
* CE 37: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):7
     [V_w>=8,V_h>=2] 
* CE 38: eval_set_color_ht_extracted_start(V_h,V_w,B) = 0+ eval_set_color_ht_extracted_9(V_h,V_w,B):8
     [V_w>=9,V_h>=2] 

### Cost equations --> "Loop" of eval_set_color_ht_extracted_start/3 
* CEs [38] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [36] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [34] --> Loop 35 
* CEs [33] --> Loop 36 
* CEs [32] --> Loop 37 
* CEs [31] --> Loop 38 

#### Loops of eval_set_color_ht_extracted_start/3 
* Loop 31: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=9,V_h>=2] 
* Loop 32: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=8,V_h>=2] 
* Loop 33: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_h>=2,0>=V_w] 
* Loop 34: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=1,V_h>=2,7>=V_w] 
* Loop 35: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=9,1>=V_h] 
* Loop 36: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=8,1>=V_h] 
* Loop 37: eval_set_color_ht_extracted_start(V_h,V_w,B) [0>=V_w,1>=V_h] 
* Loop 38: eval_set_color_ht_extracted_start(V_h,V_w,B) [V_w>=1,7>=V_w,1>=V_h] 

### Ranking functions of CR eval_set_color_ht_extracted_start(V_h,V_w,B) 

#### Partial ranking functions of CR eval_set_color_ht_extracted_start(V_h,V_w,B) 


### Resulting Chains:eval_set_color_ht_extracted_start(V_h,V_w,B) 
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]


### Merging Chains  eval_set_color_ht_extracted_start/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 
* [[35]] --> 4 
* [[34]] --> 5 
* [[33]] --> 6 
* [[32]] --> 7 
* [[31]] --> 8 


Computing Bounds
=====================================

#### Simplifying cost structure of CE 10 

#### Computing cost of phase [10] 

#### Simplifying cost structure of CE 11 

#### Cost of loops [10] 

 * loop 10:eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) -> [eval_set_color_ht_extracted_bb4_in(V_w',V_y_0',V_0',V_x_0',V_3',V_i_0',B',C',D',E',F')] 
1
##### Pending set eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F)
* Psum in Loop 10: [it(10)=<1]

###### Computing sum for it(10)=<1  in Loop 10 
   - Applying inductive sum strategy 
     - head Candidate: V_i_0 
     - head Candidate: V_i_0 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_i_0 
     - tail Candidate: V_i_0 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(10)=<V_i_0,it(10)=<V_i_0,it(10)=<V_i_0-V_i_0',it(10)=<V_i_0-V_i_0'] 

##### Empy Pending set: Done 

#### Sorting generated constraints of phase [10] 

#### Simplifying cost structure of phase [10] 

#### Cost of phase [10]:eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F) -> [eval_set_color_ht_extracted_bb4_in(V_w',V_y_0',V_0',V_x_0',V_3',V_i_0',B',C',D',E',F')] 
1*it(10)+0
  Such that:it(10) =< V_i_0
it(10) =< V_i_0-V_i_0'

#### Simplifying cost structure of chain [[10],11] 

#### Cost of chains of eval_set_color_ht_extracted_bb4_in(V_w,V_y_0,V_0,V_x_0,V_3,V_i_0,B,C,D,E,F):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_i_0

  with precondition: [B=2,V_w=C,V_y_0=D,V_0=E,V_3=F,V_3>=0,V_i_0>=1,V_3+8>=V_x_0,V_x_0>=V_3+V_i_0] 


#### Simplifying cost structure of CE 12 

#### Computing cost of phase [12] 
 * Renamed intermediate variables: 
[(eq(13,1),it(10))>>s(1)]

#### Simplifying cost structure of CE 13 
 * Renamed intermediate variables: 
[(it(12),s(1))>>s(2)]

#### Cost of loops [12] 

 * loop 12:eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) -> [eval_set_color_ht_extracted_bb2_in(V_w',V_y_0',V_0',V_x_0',B',C',D',E',F')] 
1*s(2)+2
  Such that:s(2) =< 8

##### Pending set eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F)
* Psum in Loop 12: [it(12)=<1,s(3)=<8]

###### Computing sum for it(12)=<1  in Loop 12 
   - Applying inductive sum strategy 
     - head Candidate: V_x_0/8-7/8 
     - head Candidate: V_x_0/8-7/8 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_x_0/8-7/8 
     - tail Candidate: V_x_0/8-7/8 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(12)=<V_x_0/8-7/8,it(12)=<V_x_0/8-7/8,it(12)=<V_x_0/8-V_x_0'/8,it(12)=<V_x_0/8-V_x_0'/8] 

##### Pending set eval_set_color_ht_extracted_0(V_h,V_w,B)
* Psum in Loop 12: [s(3)=<8]

###### Computing sum for s(3)=<8  in Loop 12 
   - Found a solution using cacheing 
 * Adding constraints: [s(3)=<aux(1)*8,aux(1)=<V_x_0/8-7/8,aux(1)=<V_x_0/8-7/8,aux(1)=<V_x_0/8-V_x_0'/8,aux(1)=<V_x_0/8-V_x_0'/8] 

##### Empy Pending set: Done 

#### Sorting generated constraints of phase [12] 

#### Simplifying cost structure of phase [12] 

#### Cost of phase [12]:eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) -> [eval_set_color_ht_extracted_bb2_in(V_w',V_y_0',V_0',V_x_0',B',C',D',E',F')] 
2*it(12)+1*s(3)+0
  Such that:aux(2) =< V_x_0/8
aux(3) =< V_x_0/8-V_x_0'/8
aux(1) =< aux(2)
it(12) =< aux(2)
aux(1) =< aux(3)
it(12) =< aux(3)
s(3) =< aux(1)*8

#### Simplifying cost structure of chain [[12],14] 
 * Joined equivalent variables [aux(4),aux(2),aux(3)] into aux(4)
 * Joined equivalent variables [aux(4),aux(1)] into aux(4)
 * Renamed intermediate variables: 
[(eq(14,1),it(10))>>s(4)]

#### Simplifying cost structure of CE 14 

#### Simplifying cost structure of chain [13,14] 

#### Found solution for phase  [12] in the cache 

#### Cost of phase [12]:eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F) -> [eval_set_color_ht_extracted_bb2_in(V_w',V_y_0',V_0',V_x_0',B',C',D',E',F')] 
2*it(12)+1*s(3)+0
  Such that:aux(2) =< V_x_0/8
aux(3) =< V_x_0/8-V_x_0'/8
aux(1) =< aux(2)
it(12) =< aux(2)
aux(1) =< aux(3)
it(12) =< aux(3)
s(3) =< aux(1)*8

#### Simplifying cost structure of chain [[12],13,14] 
 * Joined equivalent variables [aux(6),aux(2)] into aux(6)

#### Cost of chains of eval_set_color_ht_extracted_bb2_in(V_w,V_y_0,V_0,V_x_0,B,C,D,E,F):
* Chain [[12],14]: 2*it(12)+1*s(3)+0
  Such that:aux(4) =< V_x_0/8
it(12) =< aux(4)
s(3) =< aux(4)*8

  with precondition: [B=3,F=0,V_y_0=V_0+1,V_w=C,V_y_0=D,V_y_0=E+1,V_x_0>=8,V_w>=V_x_0] 

* Chain [[12],13,14]: 2*it(12)+1*s(3)+1*s(4)+2
  Such that:aux(5) =< V_x_0
aux(6) =< V_x_0/8
aux(3) =< aux(5)
s(4) =< aux(5)
aux(3) =< aux(6)
aux(1) =< aux(6)
it(12) =< aux(6)
aux(1) =< aux(3)
it(12) =< aux(3)
s(3) =< aux(1)*8

  with precondition: [B=3,F=0,V_y_0=V_0+1,V_w=C,V_y_0=D,V_y_0=E+1,V_x_0>=9,V_w>=V_x_0] 

* Chain [14]: 0
  with precondition: [B=3,V_y_0=V_0+1,V_w=C,V_y_0=D,V_y_0=E+1,V_x_0=F,0>=V_x_0,V_w>=V_x_0] 

* Chain [13,14]: 1*s(4)+2
  Such that:s(4) =< V_x_0

  with precondition: [B=3,F=0,V_y_0=V_0+1,V_w=C,V_y_0=D,V_y_0=E+1,7>=V_x_0,V_x_0>=1,V_w>=V_x_0] 

 * Renamed intermediate variables: 
[(eq(15,1),s(4))>>s(5)]

#### Simplifying cost structure of CE 15 

#### Computing cost of phase [18] 
 * Renamed intermediate variables: 
[(eq(19,1),s(4))>>s(6)]

#### Simplifying cost structure of CE 19 
 * Renamed intermediate variables: 
[(it(18),s(6))>>s(7)]

#### Cost of loops [18] 

 * loop 18:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
1*s(7)+4
  Such that:s(7) =< V_w'

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 18: [it(18)=<1,s(8)=<V_w']

###### Computing sum for it(18)=<1  in Loop 18 
   - Applying inductive sum strategy 
     - head Candidate: V_y_0-1 
     - head Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_y_0-1 
     - tail Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(18)=<V_y_0-1,it(18)=<V_y_0-1,it(18)=<V_y_0-V_y_0',it(18)=<V_y_0-V_y_0'] 

##### Pending set eval_set_color_ht_extracted_0(V_h,V_w,B)
* Psum in Loop 18: [s(8)=<V_w']

###### Computing sum for s(8)=<V_w'  in Loop 18 
   - Applying inductive sum strategy 
     - head Candidate: 7*V_y_0-7 
     - head Candidate: V_w+7*V_y_0-14 
     - tail Candidate: 7*V_y_0-7 
     - tail Candidate: V_w+7*V_y_0-14 
 * Adding constraints: [s(8)=<7*V_y_0-7,s(8)=<V_w+7*V_y_0-14,s(8)=<7*V_y_0-7*V_y_0',s(8)=<V_w+7*V_y_0-V_w'-7*V_y_0'] 

##### Empy Pending set: Done 

#### Sorting generated constraints of phase [18] 

#### Simplifying cost structure of phase [18] 

#### Cost of phase [18]:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
4*it(18)+1*s(8)+0
  Such that:s(8) =< V_w+7*V_y_0
s(8) =< V_w+7*V_y_0-V_w'-7*V_y_0'
it(18) =< V_y_0
it(18) =< V_y_0-V_y_0'
s(8) =< 7*V_y_0
s(8) =< 7*V_y_0-7*V_y_0'

#### Simplifying cost structure of chain [[18],22] 

#### Simplifying cost structure of CE 18 

#### Computing cost of phase [17] 

#### Simplifying cost structure of CE 22 

#### Cost of loops [17] 

 * loop 17:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
2
##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 17: [it(17)=<1]

###### Computing sum for it(17)=<1  in Loop 17 
   - Applying inductive sum strategy 
     - head Candidate: V_y_0-1 
     - head Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_y_0-1 
     - tail Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(17)=<V_y_0-1,it(17)=<V_y_0-1,it(17)=<V_y_0-V_y_0',it(17)=<V_y_0-V_y_0'] 

##### Empy Pending set: Done 

#### Sorting generated constraints of phase [17] 

#### Simplifying cost structure of phase [17] 

#### Cost of phase [17]:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
2*it(17)+0
  Such that:it(17) =< V_y_0
it(17) =< V_y_0-V_y_0'

#### Simplifying cost structure of chain [[17],21] 
 * Renamed intermediate variables: 
[(eq(16,1),aux(4))>>s(9),(eq(16,1),it(12))>>s(10),(eq(16,1),s(3))>>s(11)]

#### Simplifying cost structure of CE 16 

#### Computing cost of phase [15,16] 
 * Renamed intermediate variables: 
[(eq(21,1),aux(5))>>s(12),(eq(21,1),aux(6))>>s(13),(eq(21,1),aux(3))>>s(14),(eq(21,1),s(4))>>s(15),(eq(21,1),aux(1))>>s(16),(eq(21,1),it(12))>>s(17),(eq(21,1),s(3))>>s(18)]

#### Simplifying cost structure of CE 21 
 * Renamed intermediate variables: 
[(it(15),s(12))>>s(19),(it(15),s(13))>>s(20),(it(15),s(14))>>s(21),(it(15),s(15))>>s(22),(it(15),s(16))>>s(23),(it(15),s(17))>>s(24),(it(15),s(18))>>s(25)]
 * Renamed intermediate variables: 
[(eq(20,1),aux(4))>>s(26),(eq(20,1),it(12))>>s(27),(eq(20,1),s(3))>>s(28)]

#### Simplifying cost structure of CE 20 
 * Renamed intermediate variables: 
[(it(16),s(26))>>s(29),(it(16),s(27))>>s(30),(it(16),s(28))>>s(31)]

#### Cost of loops [15,16] 

 * loop 15:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
1*s(22)+2*s(24)+1*s(25)+4
  Such that:s(19) =< V_w'
s(20) =< V_w'/8
s(21) =< s(19)
s(22) =< s(19)
s(21) =< s(20)
s(23) =< s(20)
s(24) =< s(20)
s(23) =< s(21)
s(24) =< s(21)
s(25) =< s(23)*8

 * loop 16:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
2*s(30)+1*s(31)+2
  Such that:s(29) =< V_w'/8
s(30) =< s(29)
s(31) =< s(29)*8

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 15: [it(15)=<1,s(38)=<V_w',s(37)=<V_w'/8]
* Psum in Loop 16: [it(16)=<1,s(41)=<V_w'/8]

###### Computing sum for it(15)=<1  in Loop 15 
   - Applying inductive sum strategy 
     - head Candidate: V_y_0-1 
       - Loop 16 is collaborative and bounds [it(16)] 
     - head Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_y_0-1 
       - Loop 16 is collaborative and bounds [it(16)] 
     - tail Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(15)+it(16)=<V_y_0-1,it(15)+it(16)=<V_y_0-1,it(15)+it(16)=<V_y_0-V_y_0',it(15)+it(16)=<V_y_0-V_y_0'] 

##### Pending set eval_set_color_ht_extracted_0(V_h,V_w,B)
* Psum in Loop 15: [s(38)=<V_w',s(37)=<V_w'/8]
* Psum in Loop 16: [it(16)=<1,s(41)=<V_w'/8]

###### Computing sum for s(38)=<V_w'  in Loop 15 
   - Applying inductive sum strategy 
   - Applying basic product strategy 
     - Adding to Pmax/min: [aux(7)=<V_w] 
 * Adding constraints: [s(38)=<it(15)*aux(7)] 

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Pmax/min: [aux(7)=<V_w]
* Psum in Loop 15: [s(37)=<V_w'/8]
* Psum in Loop 16: [it(16)=<1,s(41)=<V_w'/8]

###### Computing max_min for aux(7)=<V_w  
   - Found a solution using transitive invariants 
 * Adding constraints:[aux(7)=<V_w] 

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 15: [s(37)=<V_w'/8]
* Psum in Loop 16: [it(16)=<1,s(41)=<V_w'/8]

###### Computing sum for s(37)=<V_w'/8  in Loop 15 
   - Found a solution using cacheing 
 * Adding constraints: [s(37)=<aux(8)*(1/8),aux(8)=<it(15)*aux(7)] 

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 16: [it(16)=<1,s(41)=<V_w'/8]

###### Computing sum for it(16)=<1  in Loop 16 
   - Applying inductive sum strategy 
     - head Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - head Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
     - tail Candidate: V_y_0-1 
       - The candidate was classified before. We reuse its previous classification 
 * Adding constraints: [it(15)+it(16)=<V_y_0-1,it(15)+it(16)=<V_y_0-1,it(15)+it(16)=<V_y_0-V_y_0',it(15)+it(16)=<V_y_0-V_y_0'] 

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Psum in Loop 16: [s(41)=<V_w'/8]

###### Computing sum for s(41)=<V_w'/8  in Loop 16 
   - Applying inductive sum strategy 
   - Applying basic product strategy 
     - Adding to Pmax/min: [aux(9)=<V_w/8] 
 * Adding constraints: [s(41)=<it(16)*aux(9)] 

##### Pending set eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B)
* Pmax/min: [aux(9)=<V_w/8]

###### Computing max_min for aux(9)=<V_w/8  
   - Found a solution using cacheing 
 * Adding constraints:[aux(9)=<aux(7)*(1/8)] 

##### Empy Pending set: Done 

#### Sorting generated constraints of phase [15,16] 

#### Simplifying cost structure of phase [15,16] 
 * Joined equivalent variables [aux(8),s(38)] into aux(8)
 * Joined equivalent variables [it(15),it(16)] into it(15)

#### Cost of phase [15,16]:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
6*it(15)+1*s(32)+2*s(33)+1*s(34)+2*s(39)+1*s(40)+0
  Such that:aux(7) =< V_w
aux(10) =< V_y_0
aux(11) =< V_y_0-V_y_0'
it(15) =< aux(10)
it(15) =< aux(11)
aux(9) =< aux(7)*(1/8)
aux(8) =< it(15)*aux(7)
s(41) =< it(15)*aux(9)
s(37) =< aux(8)*(1/8)
s(39) =< s(41)
s(40) =< s(41)*8
s(36) =< aux(8)
s(32) =< aux(8)
s(36) =< s(37)
s(35) =< s(37)
s(33) =< s(37)
s(35) =< s(36)
s(33) =< s(36)
s(34) =< s(35)*8

#### Simplifying cost structure of chain [[15,16],20] 
 * Joined equivalent variables [aux(12),aux(10),aux(11)] into aux(12)
 * Renamed intermediate variables: 
[(eq(17,1),aux(5))>>s(42),(eq(17,1),aux(6))>>s(43),(eq(17,1),aux(3))>>s(44),(eq(17,1),s(4))>>s(45),(eq(17,1),aux(1))>>s(46),(eq(17,1),it(12))>>s(47),(eq(17,1),s(3))>>s(48)]

#### Simplifying cost structure of CE 17 

#### Found solution for phase  [15,16] in the cache 

#### Cost of phase [15,16]:eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B) -> [eval_set_color_ht_extracted_bb1_in(V_w',V_y_0',B')] 
6*it(15)+1*s(32)+2*s(33)+1*s(34)+2*s(39)+1*s(40)+0
  Such that:aux(7) =< V_w
aux(10) =< V_y_0
aux(11) =< V_y_0-V_y_0'
it(15) =< aux(10)
it(15) =< aux(11)
aux(9) =< aux(7)*(1/8)
aux(8) =< it(15)*aux(7)
s(41) =< it(15)*aux(9)
s(37) =< aux(8)*(1/8)
s(39) =< s(41)
s(40) =< s(41)*8
s(36) =< aux(8)
s(32) =< aux(8)
s(36) =< s(37)
s(35) =< s(37)
s(33) =< s(37)
s(35) =< s(36)
s(33) =< s(36)
s(34) =< s(35)*8

#### Simplifying cost structure of chain [[15,16],19] 
 * Joined equivalent variables [aux(13),aux(7),s(42)] into aux(13)
 * Joined equivalent variables [aux(14),aux(10),aux(11)] into aux(14)

#### Cost of chains of eval_set_color_ht_extracted_bb1_in(V_w,V_y_0,B):
* Chain [[18],22]: 4*it(18)+1*s(5)+1*s(8)+3
  Such that:s(5) =< V_w
it(18) =< V_y_0
s(8) =< 7*V_y_0

  with precondition: [B=4,7>=V_w,V_w>=1,V_y_0>=2] 

* Chain [[17],21]: 2*it(17)+1
  Such that:it(17) =< V_y_0

  with precondition: [B=4,0>=V_w,V_y_0>=2] 

* Chain [[15,16],20]: 6*it(15)+2*s(10)+1*s(11)+1*s(32)+2*s(33)+1*s(34)+2*s(39)+1*s(40)+1
  Such that:aux(7) =< V_w
s(9) =< V_w/8
aux(12) =< V_y_0
s(10) =< s(9)
s(11) =< s(9)*8
it(15) =< aux(12)
aux(9) =< aux(7)*(1/8)
aux(8) =< it(15)*aux(7)
s(41) =< it(15)*aux(9)
s(37) =< aux(8)*(1/8)
s(39) =< s(41)
s(40) =< s(41)*8
s(36) =< aux(8)
s(32) =< aux(8)
s(36) =< s(37)
s(35) =< s(37)
s(33) =< s(37)
s(35) =< s(36)
s(33) =< s(36)
s(34) =< s(35)*8

  with precondition: [B=4,V_w>=8,V_y_0>=2] 

* Chain [[15,16],19]: 6*it(15)+1*s(32)+2*s(33)+1*s(34)+2*s(39)+1*s(40)+1*s(45)+2*s(47)+1*s(48)+3
  Such that:s(43) =< V_w/8
aux(13) =< V_w
aux(14) =< V_y_0
s(44) =< aux(13)
s(45) =< aux(13)
s(44) =< s(43)
s(46) =< s(43)
s(47) =< s(43)
s(46) =< s(44)
s(47) =< s(44)
s(48) =< s(46)*8
it(15) =< aux(14)
aux(9) =< aux(13)*(1/8)
aux(8) =< it(15)*aux(13)
s(41) =< it(15)*aux(9)
s(37) =< aux(8)*(1/8)
s(39) =< s(41)
s(40) =< s(41)*8
s(36) =< aux(8)
s(32) =< aux(8)
s(36) =< s(37)
s(35) =< s(37)
s(33) =< s(37)
s(35) =< s(36)
s(33) =< s(36)
s(34) =< s(35)*8

  with precondition: [B=4,V_w>=9,V_y_0>=2] 

* Chain [22]: 1*s(5)+3
  Such that:s(5) =< V_w

  with precondition: [B=4,7>=V_w,1>=V_y_0,V_w>=1] 

* Chain [21]: 1
  with precondition: [B=4,0>=V_w,1>=V_y_0] 

* Chain [20]: 2*s(10)+1*s(11)+1
  Such that:s(9) =< V_w/8
s(10) =< s(9)
s(11) =< s(9)*8

  with precondition: [B=4,1>=V_y_0,V_w>=8] 

* Chain [19]: 1*s(45)+2*s(47)+1*s(48)+3
  Such that:s(42) =< V_w
s(43) =< V_w/8
s(44) =< s(42)
s(45) =< s(42)
s(44) =< s(43)
s(46) =< s(43)
s(47) =< s(43)
s(46) =< s(44)
s(47) =< s(44)
s(48) =< s(46)*8

  with precondition: [B=4,1>=V_y_0,V_w>=9] 

 * Renamed intermediate variables: 
[(eq(23,1),s(5))>>s(49)]

#### Simplifying cost structure of CE 23 

#### Simplifying cost structure of CE 25 
 * Renamed intermediate variables: 
[(eq(27,1),s(9))>>s(50),(eq(27,1),s(10))>>s(51),(eq(27,1),s(11))>>s(52)]

#### Simplifying cost structure of CE 27 
 * Renamed intermediate variables: 
[(eq(28,1),s(42))>>s(53),(eq(28,1),s(43))>>s(54),(eq(28,1),s(44))>>s(55),(eq(28,1),s(45))>>s(56),(eq(28,1),s(46))>>s(57),(eq(28,1),s(47))>>s(58),(eq(28,1),s(48))>>s(59)]

#### Simplifying cost structure of CE 28 
 * Renamed intermediate variables: 
[(eq(24,1),s(5))>>s(60),(eq(24,1),it(18))>>s(61),(eq(24,1),s(8))>>s(62)]

#### Simplifying cost structure of CE 24 
 * Renamed intermediate variables: 
[(eq(26,1),it(17))>>s(63)]

#### Simplifying cost structure of CE 26 
 * Renamed intermediate variables: 
[(eq(29,1),aux(7))>>s(64),(eq(29,1),s(9))>>s(65),(eq(29,1),aux(12))>>s(66),(eq(29,1),s(10))>>s(67),(eq(29,1),s(11))>>s(68),(eq(29,1),it(15))>>s(69),(eq(29,1),aux(9))>>s(70),(eq(29,1),aux(8))>>s(71),(eq(29,1),s(41))>>s(72),(eq(29,1),s(37))>>s(73),(eq(29,1),s(39))>>s(74),(eq(29,1),s(40))>>s(75),(eq(29,1),s(36))>>s(76),(eq(29,1),s(32))>>s(77),(eq(29,1),s(35))>>s(78),(eq(29,1),s(33))>>s(79),(eq(29,1),s(34))>>s(80)]

#### Simplifying cost structure of CE 29 
 * Renamed intermediate variables: 
[(eq(30,1),s(43))>>s(81),(eq(30,1),aux(13))>>s(82),(eq(30,1),aux(14))>>s(83),(eq(30,1),s(44))>>s(84),(eq(30,1),s(45))>>s(85),(eq(30,1),s(46))>>s(86),(eq(30,1),s(47))>>s(87),(eq(30,1),s(48))>>s(88),(eq(30,1),it(15))>>s(89),(eq(30,1),aux(9))>>s(90),(eq(30,1),aux(8))>>s(91),(eq(30,1),s(41))>>s(92),(eq(30,1),s(37))>>s(93),(eq(30,1),s(39))>>s(94),(eq(30,1),s(40))>>s(95),(eq(30,1),s(36))>>s(96),(eq(30,1),s(32))>>s(97),(eq(30,1),s(35))>>s(98),(eq(30,1),s(33))>>s(99),(eq(30,1),s(34))>>s(100)]

#### Simplifying cost structure of CE 30 

#### Cost of chains of eval_set_color_ht_extracted_9(V_h,V_w,B):
* Chain [30]: 1*s(49)+4
  Such that:s(49) =< V_w

  with precondition: [1>=V_h,7>=V_w,V_w>=1] 

* Chain [29]: 2
  with precondition: [1>=V_h,0>=V_w] 

* Chain [28]: 2*s(51)+1*s(52)+2
  Such that:s(50) =< V_w/8
s(51) =< s(50)
s(52) =< s(50)*8

  with precondition: [1>=V_h,V_w>=8] 

* Chain [27]: 1*s(56)+2*s(58)+1*s(59)+4
  Such that:s(53) =< V_w
s(54) =< V_w/8
s(55) =< s(53)
s(56) =< s(53)
s(55) =< s(54)
s(57) =< s(54)
s(58) =< s(54)
s(57) =< s(55)
s(58) =< s(55)
s(59) =< s(57)*8

  with precondition: [1>=V_h,V_w>=9] 

* Chain [26]: 1*s(60)+4*s(61)+1*s(62)+4
  Such that:s(61) =< V_h
s(62) =< 7*V_h
s(60) =< V_w

  with precondition: [7>=V_w,V_h>=2,V_w>=1] 

* Chain [25]: 2*s(63)+2
  Such that:s(63) =< V_h

  with precondition: [0>=V_w,V_h>=2] 

* Chain [24]: 2*s(67)+1*s(68)+6*s(69)+2*s(74)+1*s(75)+1*s(77)+2*s(79)+1*s(80)+2
  Such that:s(66) =< V_h
s(64) =< V_w
s(65) =< V_w/8
s(67) =< s(65)
s(68) =< s(65)*8
s(69) =< s(66)
s(70) =< s(64)*(1/8)
s(71) =< s(69)*s(64)
s(72) =< s(69)*s(70)
s(73) =< s(71)*(1/8)
s(74) =< s(72)
s(75) =< s(72)*8
s(76) =< s(71)
s(77) =< s(71)
s(76) =< s(73)
s(78) =< s(73)
s(79) =< s(73)
s(78) =< s(76)
s(79) =< s(76)
s(80) =< s(78)*8

  with precondition: [V_h>=2,V_w>=8] 

* Chain [23]: 1*s(85)+2*s(87)+1*s(88)+6*s(89)+2*s(94)+1*s(95)+1*s(97)+2*s(99)+1*s(100)+4
  Such that:s(83) =< V_h
s(82) =< V_w
s(81) =< V_w/8
s(84) =< s(82)
s(85) =< s(82)
s(84) =< s(81)
s(86) =< s(81)
s(87) =< s(81)
s(86) =< s(84)
s(87) =< s(84)
s(88) =< s(86)*8
s(89) =< s(83)
s(90) =< s(82)*(1/8)
s(91) =< s(89)*s(82)
s(92) =< s(89)*s(90)
s(93) =< s(91)*(1/8)
s(94) =< s(92)
s(95) =< s(92)*8
s(96) =< s(91)
s(97) =< s(91)
s(96) =< s(93)
s(98) =< s(93)
s(99) =< s(93)
s(98) =< s(96)
s(99) =< s(96)
s(100) =< s(98)*8

  with precondition: [V_h>=2,V_w>=9] 

 * Renamed intermediate variables: 
[(eq(31,1),s(49))>>s(101)]

#### Simplifying cost structure of CE 31 

#### Simplifying cost structure of CE 32 
 * Renamed intermediate variables: 
[(eq(33,1),s(50))>>s(102),(eq(33,1),s(51))>>s(103),(eq(33,1),s(52))>>s(104)]

#### Simplifying cost structure of CE 33 
 * Renamed intermediate variables: 
[(eq(34,1),s(53))>>s(105),(eq(34,1),s(54))>>s(106),(eq(34,1),s(55))>>s(107),(eq(34,1),s(56))>>s(108),(eq(34,1),s(57))>>s(109),(eq(34,1),s(58))>>s(110),(eq(34,1),s(59))>>s(111)]

#### Simplifying cost structure of CE 34 
 * Renamed intermediate variables: 
[(eq(35,1),s(61))>>s(112),(eq(35,1),s(62))>>s(113),(eq(35,1),s(60))>>s(114)]

#### Simplifying cost structure of CE 35 
 * Renamed intermediate variables: 
[(eq(36,1),s(63))>>s(115)]

#### Simplifying cost structure of CE 36 
 * Renamed intermediate variables: 
[(eq(37,1),s(66))>>s(116),(eq(37,1),s(64))>>s(117),(eq(37,1),s(65))>>s(118),(eq(37,1),s(67))>>s(119),(eq(37,1),s(68))>>s(120),(eq(37,1),s(69))>>s(121),(eq(37,1),s(70))>>s(122),(eq(37,1),s(71))>>s(123),(eq(37,1),s(72))>>s(124),(eq(37,1),s(73))>>s(125),(eq(37,1),s(74))>>s(126),(eq(37,1),s(75))>>s(127),(eq(37,1),s(76))>>s(128),(eq(37,1),s(77))>>s(129),(eq(37,1),s(78))>>s(130),(eq(37,1),s(79))>>s(131),(eq(37,1),s(80))>>s(132)]

#### Simplifying cost structure of CE 37 
 * Renamed intermediate variables: 
[(eq(38,1),s(83))>>s(133),(eq(38,1),s(82))>>s(134),(eq(38,1),s(81))>>s(135),(eq(38,1),s(84))>>s(136),(eq(38,1),s(85))>>s(137),(eq(38,1),s(86))>>s(138),(eq(38,1),s(87))>>s(139),(eq(38,1),s(88))>>s(140),(eq(38,1),s(89))>>s(141),(eq(38,1),s(90))>>s(142),(eq(38,1),s(91))>>s(143),(eq(38,1),s(92))>>s(144),(eq(38,1),s(93))>>s(145),(eq(38,1),s(94))>>s(146),(eq(38,1),s(95))>>s(147),(eq(38,1),s(96))>>s(148),(eq(38,1),s(97))>>s(149),(eq(38,1),s(98))>>s(150),(eq(38,1),s(99))>>s(151),(eq(38,1),s(100))>>s(152)]

#### Simplifying cost structure of CE 38 

#### Cost of chains of eval_set_color_ht_extracted_start(V_h,V_w,B):
* Chain [38]: 1*s(101)+4
  Such that:s(101) =< V_w

  with precondition: [1>=V_h,7>=V_w,V_w>=1] 

* Chain [37]: 2
  with precondition: [1>=V_h,0>=V_w] 

* Chain [36]: 2*s(103)+1*s(104)+2
  Such that:s(102) =< V_w/8
s(103) =< s(102)
s(104) =< s(102)*8

  with precondition: [1>=V_h,V_w>=8] 

* Chain [35]: 1*s(108)+2*s(110)+1*s(111)+4
  Such that:s(105) =< V_w
s(106) =< V_w/8
s(107) =< s(105)
s(108) =< s(105)
s(107) =< s(106)
s(109) =< s(106)
s(110) =< s(106)
s(109) =< s(107)
s(110) =< s(107)
s(111) =< s(109)*8

  with precondition: [1>=V_h,V_w>=9] 

* Chain [34]: 4*s(112)+1*s(113)+1*s(114)+4
  Such that:s(112) =< V_h
s(113) =< 7*V_h
s(114) =< V_w

  with precondition: [7>=V_w,V_h>=2,V_w>=1] 

* Chain [33]: 2*s(115)+2
  Such that:s(115) =< V_h

  with precondition: [0>=V_w,V_h>=2] 

* Chain [32]: 2*s(119)+1*s(120)+6*s(121)+2*s(126)+1*s(127)+1*s(129)+2*s(131)+1*s(132)+2
  Such that:s(116) =< V_h
s(117) =< V_w
s(118) =< V_w/8
s(119) =< s(118)
s(120) =< s(118)*8
s(121) =< s(116)
s(122) =< s(117)*(1/8)
s(123) =< s(121)*s(117)
s(124) =< s(121)*s(122)
s(125) =< s(123)*(1/8)
s(126) =< s(124)
s(127) =< s(124)*8
s(128) =< s(123)
s(129) =< s(123)
s(128) =< s(125)
s(130) =< s(125)
s(131) =< s(125)
s(130) =< s(128)
s(131) =< s(128)
s(132) =< s(130)*8

  with precondition: [V_h>=2,V_w>=8] 

* Chain [31]: 1*s(137)+2*s(139)+1*s(140)+6*s(141)+2*s(146)+1*s(147)+1*s(149)+2*s(151)+1*s(152)+4
  Such that:s(133) =< V_h
s(134) =< V_w
s(135) =< V_w/8
s(136) =< s(134)
s(137) =< s(134)
s(136) =< s(135)
s(138) =< s(135)
s(139) =< s(135)
s(138) =< s(136)
s(139) =< s(136)
s(140) =< s(138)*8
s(141) =< s(133)
s(142) =< s(134)*(1/8)
s(143) =< s(141)*s(134)
s(144) =< s(141)*s(142)
s(145) =< s(143)*(1/8)
s(146) =< s(144)
s(147) =< s(144)*8
s(148) =< s(143)
s(149) =< s(143)
s(148) =< s(145)
s(150) =< s(145)
s(151) =< s(145)
s(150) =< s(148)
s(151) =< s(148)
s(152) =< s(150)*8

  with precondition: [V_h>=2,V_w>=9] 


Closed-form bounds of eval_set_color_ht_extracted_start(V_h,V_w,B): 
-------------------------------------
* Chain [38] with precondition: [1>=V_h,7>=V_w,V_w>=1] 
    - Upper bound: V_w+4 
    - Complexity: n 
* Chain [37] with precondition: [1>=V_h,0>=V_w] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [36] with precondition: [1>=V_h,V_w>=8] 
    - Upper bound: 5/4*V_w+2 
    - Complexity: n 
* Chain [35] with precondition: [1>=V_h,V_w>=9] 
    - Upper bound: 9/4*V_w+4 
    - Complexity: n 
* Chain [34] with precondition: [7>=V_w,V_h>=2,V_w>=1] 
    - Upper bound: 11*V_h+V_w+4 
    - Complexity: n 
* Chain [33] with precondition: [0>=V_w,V_h>=2] 
    - Upper bound: 2*V_h+2 
    - Complexity: n 
* Chain [32] with precondition: [V_h>=2,V_w>=8] 
    - Upper bound: 6*V_h+2+7/2*V_w*V_h+5/4*V_w 
    - Complexity: n^2 
* Chain [31] with precondition: [V_h>=2,V_w>=9] 
    - Upper bound: 6*V_h+V_w+4+7/2*V_w*V_h+5/4*V_w 
    - Complexity: n^2 

### Maximum cost of eval_set_color_ht_extracted_start(V_h,V_w,B): max([nat(V_w)+2+nat(V_w/8)*10,nat(V_h)*2+max([nat(V_w)+2+nat(7*V_h),7/2*nat(V_w)*nat(V_h)+nat(V_h)*2+nat(V_w/8)*10+(nat(V_w)+2)])+nat(V_h)*2])+2 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 78 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 103 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 162 ms.
   - Equation cost structures 56 ms.
   - Phase cost structures 58 ms.
   - Chain cost structures 38 ms.
   - Solving cost expressions 6 ms.
* Total analysis performed in 443 ms.

