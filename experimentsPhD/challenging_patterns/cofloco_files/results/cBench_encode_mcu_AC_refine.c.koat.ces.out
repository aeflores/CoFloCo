Warning: Ignored call to eval_encode_mcu_AC_refine_stop/1 in equation loop_cont_eval_encode_mcu_AC_refine_bb3_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_encode_mcu_AC_refine_bb1_in/7]
1. recursive : [eval_encode_mcu_AC_refine_12/9,eval_encode_mcu_AC_refine_13/9,eval_encode_mcu_AC_refine_bb6_in/9]
2. recursive : [eval_encode_mcu_AC_refine_8/4,eval_encode_mcu_AC_refine_9/4,eval_encode_mcu_AC_refine__critedge_in/5,eval_encode_mcu_AC_refine_bb3_in/4,loop_cont_eval_encode_mcu_AC_refine_bb6_in/6]
3. non_recursive : [loop_cont_eval_encode_mcu_AC_refine_bb3_in/2]
4. non_recursive : [loop_cont_eval_encode_mcu_AC_refine_bb1_in/5]
5. non_recursive : [eval_encode_mcu_AC_refine_5/3]
6. non_recursive : [eval_encode_mcu_AC_refine_4/3]
7. non_recursive : [eval_encode_mcu_AC_refine_3/3]
8. non_recursive : [eval_encode_mcu_AC_refine_2/3]
9. non_recursive : [eval_encode_mcu_AC_refine_1/3]
10. non_recursive : [eval_encode_mcu_AC_refine_0/3]
11. non_recursive : [eval_encode_mcu_AC_refine_bb0_in/3]
12. non_recursive : [eval_encode_mcu_AC_refine_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb1_in/7
1. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb6_in/9
2. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb3_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_encode_mcu_AC_refine_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_AC_refine_bb1_in/7 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb1_in/7 
* CE 11: eval_encode_mcu_AC_refine_bb1_in(A,B,C,D,B,A,E) = 0
     [C>=B+1,C>=A,E=0,D=4] 
* CE 12: eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) = 1+ eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,F,G,C,D,E)
     [V_cinfo_Se>=V_k_0,V_k_0>=V_cinfo_Ss,V_k_0+1=F,G=4,B=4] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb1_in/7 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_encode_mcu_AC_refine_bb1_in/7 
* Loop 9: eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E)->  eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0',B',C,D,E)
                  [V_cinfo_Se>=V_k_0,V_k_0>=V_cinfo_Ss,V_k_0+1=V_k_0',B'=4,B=4] 
* Loop 10: eval_encode_mcu_AC_refine_bb1_in(A,B,C,D,B,A,E) [C>=B+1,C>=A,E=0,D=4] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) 
* RF of phase [9]: [V_cinfo_Se-V_k_0+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_cinfo_Se-V_k_0+1


### Resulting Chains:eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) 
* [[9],10]
* [10]


### Merging Chains  eval_encode_mcu_AC_refine_bb1_in/7 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb6_in/9 
* CE 8 is refined into CE [13] 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb6_in/9 
* CE 13: eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E,A,B,C,F) = 0
     [C>=D,A>=B,D>=16,F=0,E=2] 
* CE 14: eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E,A,B,C,F) = 0
     [C>=D,A>=B,15>=D,F=0,E=2] 
* CE 15: eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) = 1+ eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,G,H,C,D,E,F)
     [V_r_0>=V_r_1,V_cinfo_Se>=V_k_1,V_r_1>=16,V_r_1=G+16,H=2,B=2] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb6_in/9 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_encode_mcu_AC_refine_bb6_in/9 
* Loop 11: eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F)->  eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1',B',C,D,E,F)
                  [V_r_0>=V_r_1,V_cinfo_Se>=V_k_1,V_r_1>=16,V_r_1=V_r_1'+16,B'=2,B=2] 
* Loop 12: eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E,A,B,C,F) [C>=D,A>=B,D>=16,F=0,E=2] 
* Loop 13: eval_encode_mcu_AC_refine_bb6_in(A,B,C,D,E,A,B,C,F) [C>=D,A>=B,15>=D,F=0,E=2] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) 
* RF of phase [11]: [V_r_1/16-15/16]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_r_1/16-15/16


### Resulting Chains:eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_encode_mcu_AC_refine_bb6_in/9 into  External patterns of execution 
* [[13]] --> 1 
* [[12],[12,[11]],[13,[11]]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb3_in/4 
* CE 7 is refined into CE [16] 
* CE 5 is refined into CE [17] 
* CE 6 is refined into CE [18,19] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb3_in/4 
* CE 16: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) = 0
     [V_k_1>=V_cinfo_Se+1,B=3] 
* CE 17: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) = 1+ eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,C,D,E)
     [V_cinfo_Se>=V_k_1,V_k_1+1=C,D=V_r_0+1,E=3,B=3] 
* CE 18: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_0,C,V_cinfo_Se,V_k_1,V_r_0,D):1+ eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,E,F,G)
     [V_cinfo_Se>=V_k_1,15>=V_r_0,V_k_1+1=E,G=3,F=0,D=0,C=2,B=3] 
* CE 19: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_0,C,V_cinfo_Se,V_k_1,V_r_0,D):2+ eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,E,F,G)
     [V_cinfo_Se>=V_k_1,V_r_0>=16,V_k_1+1=E,G=3,F=0,D=0,C=2,B=3] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb3_in/4 
* CEs [17] --> Loop 14 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_encode_mcu_AC_refine_bb3_in/4 
* Loop 14: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1',V_r_0',B')
                  [V_cinfo_Se>=V_k_1,V_r_0+1=V_r_0',V_k_1+1=V_k_1',B'=3,B=3] 
* Loop 15: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1',V_r_0',B')
                  [V_cinfo_Se>=V_k_1,V_r_0>=16,V_k_1+1=V_k_1',B'=3,V_r_0'=0,B=3] 
* Loop 16: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1',V_r_0',B')
                  [V_cinfo_Se>=V_k_1,15>=V_r_0,V_k_1+1=V_k_1',B'=3,V_r_0'=0,B=3] 
* Loop 17: eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) [V_k_1>=V_cinfo_Se+1,B=3] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) 
* RF of phase [14,15,16]: [V_cinfo_Se-V_k_1+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) 
* Partial RF of phase [14,15,16]:
  - RF of loop [14:1,15:1,16:1]:
    V_cinfo_Se-V_k_1+1
  - RF of loop [15:1]:
    V_r_0/16-15/16 depends on loops [14:1,16:1] 


### Resulting Chains:eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) 
* [[14,15,16],17]
* [17]


### Merging Chains  eval_encode_mcu_AC_refine_bb3_in/4 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[14,15,16]]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_refine_start/3 
* CE 2 is refined into CE [20,21] 


#### Refined cost equations eval_encode_mcu_AC_refine_start/3 
* CE 20: eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) = 2+ eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_cinfo_Ss,C,V_cinfo_Se,V_cinfo_Ss,D):1+ eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_cinfo_Ss,E,F):1
     [V_cinfo_Ss>=V_cinfo_Se+1,F=3,E=0,D=0,C=4] 
* CE 21: eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) = 2+ eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_cinfo_Ss,C,V_cinfo_Se,V_cinfo_Ss,D):2+ eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_cinfo_Ss,E,F):2
     [V_cinfo_Se>=V_cinfo_Ss,F=3,E=0,D=0,C=4] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_start/3 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of eval_encode_mcu_AC_refine_start/3 
* Loop 18: eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) [V_cinfo_Ss>=V_cinfo_Se+1] 
* Loop 19: eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) [V_cinfo_Se>=V_cinfo_Ss] 

### Ranking functions of CR eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) 


### Resulting Chains:eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) 
* [19]
* [18]


### Merging Chains  eval_encode_mcu_AC_refine_start/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) -> [eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss',V_cinfo_Se',V_k_0',B',C',D',E')] 
1
#### Cost of phase [9]:eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E) -> [eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss',V_cinfo_Se',V_k_0',B',C',D',E')] 
1* #(9)+0
  Such that:#(9) =< V_cinfo_Se-V_k_0+1
#(9) =< V_cinfo_Se-V_k_0-V_cinfo_Se'+V_k_0'

#### Cost of chains of eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Ss,V_cinfo_Se,V_k_0,B,C,D,E):
* Chain [[9],10]: 1*s(1)+0
  Such that:s(1) =< V_cinfo_Se-V_k_0+1

  with precondition: [B=4,E=0,V_cinfo_Se=C,V_cinfo_Ss=D,V_k_0>=V_cinfo_Ss,V_cinfo_Se>=V_k_0] 

* Chain [10]: 0
  with precondition: [B=4,E=0,V_cinfo_Ss=V_k_0,V_cinfo_Se=C,V_cinfo_Ss=D,V_cinfo_Ss>=V_cinfo_Se+1] 


#### Cost of loops [11] 

 * loop 11:eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) -> [eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se',V_k_1',V_r_0',V_r_1',B',C',D',E',F')] 
1
#### Cost of phase [11]:eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) -> [eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se',V_k_1',V_r_0',V_r_1',B',C',D',E',F')] 
1* #(11)+0
  Such that:#(11) =< V_r_1/16-15/16
#(11) =< V_r_1/16-V_r_1'/16

#### Cost of phase [11]:eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F) -> [eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se',V_k_1',V_r_0',V_r_1',B',C',D',E',F')] 
1* #(11)+0
  Such that:#(11) =< V_r_1/16-15/16
#(11) =< V_r_1/16-V_r_1'/16

#### Cost of chains of eval_encode_mcu_AC_refine_bb6_in(V_cinfo_Se,V_k_1,V_r_0,V_r_1,B,C,D,E,F):
* Chain [[11],13]: 1*s(4)+0
  Such that:s(4) =< V_r_1/16-15/16

  with precondition: [B=2,F=0,V_cinfo_Se=C,V_k_1=D,V_r_0=E,V_r_1>=16,V_cinfo_Se>=V_k_1,V_r_0>=V_r_1] 

* Chain [[11],12]: 1*s(5)+0
  Such that:s(5) =< V_r_1/16-1

  with precondition: [B=2,F=0,V_cinfo_Se=C,V_k_1=D,V_r_0=E,V_r_1>=32,V_cinfo_Se>=V_k_1,V_r_0>=V_r_1] 

* Chain [13]: 0
  with precondition: [B=2,F=0,V_r_0=V_r_1,V_cinfo_Se=C,V_k_1=D,V_r_0=E,15>=V_r_0,V_cinfo_Se>=V_k_1] 

* Chain [12]: 0
  with precondition: [B=2,F=0,V_r_0=V_r_1,V_cinfo_Se=C,V_k_1=D,V_r_0=E,V_r_0>=16,V_cinfo_Se>=V_k_1] 


#### Cost of loops [14,15,16] 

 * loop 14:eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se',V_k_1',V_r_0',B')] 
1
 * loop 15:eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se',V_k_1',V_r_0',B')] 
1*s(8)+1*s(9)+2
  Such that:s(8) =< V_r_0/16-1
s(9) =< V_r_0/16-15/16

 * loop 16:eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se',V_k_1',V_r_0',B')] 
2
#### Cost of phase [14,15,16]:eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se',V_k_1',V_r_0',B')] 
2* #(16)+2* #(15)+1*sm(15,8)+1*sm(15,9)+1* #(14)+0
  Such that:s(12) =< V_r_0/16-1
s(13) =< V_r_0/16-15/16
s(14) =< V_cinfo_Se-V_k_1+1
s(15) =< V_cinfo_Se-V_k_1-V_cinfo_Se'+V_k_1'
s(16) =< V_r_0/16
s(17)+ #(14) =< s(14)
#(14)+ #(15)+ #(16) =< s(14)
s(17)+ #(14)+ #(15) =< s(15)
#(14)+ #(15)+ #(16) =< s(15)
s(18) =< max([s(12),0])+ #(14)* (1/16)
sm(15,9) =< #(14)* (1/16)+s(16)
sm(15,8) =< #(14)* (1/16)+s(16)
sm(15,8) =< #(15)*s(18)
#(15) =< s(17)+ #(14)* (1/16)+s(13)
s(19) =< s(18)+1/16
sm(15,9) =< #(15)*s(19)

#### Cost of chains of eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B):
* Chain [[14,15,16],17]: 2*s(27)+2*s(26)+1*s(30)+1*s(29)+1*s(25)+0
  Such that:s(20) =< V_r_0/16-1
s(21) =< V_r_0/16
s(22) =< V_r_0/16-15/16
s(23) =< V_cinfo_Se-V_k_1+1
s(24)+s(25) =< s(23)
s(25)+s(26)+s(27) =< s(23)
s(24)+s(25)+s(26) =< s(23)
s(28) =< max([s(20),0])+s(25)* (1/16)
s(29) =< s(25)* (1/16)+s(21)
s(30) =< s(25)* (1/16)+s(21)
s(30) =< s(26)*s(28)
s(26) =< s(24)+s(25)* (1/16)+s(22)
s(31) =< s(28)+1/16
s(29) =< s(26)*s(31)

  with precondition: [B=3,V_cinfo_Se>=V_k_1] 

* Chain [17]: 0
  with precondition: [B=3,V_k_1>=V_cinfo_Se+1] 


#### Cost of chains of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B):
* Chain [19]: 2*s(55)+2*s(54)+1*s(59)+1*s(58)+1*s(53)+1*s(52)+2
  Such that:s(51) =< -V_cinfo_Ss+V_cinfo_Se+1
s(52) =< s(51)
s(53)+s(54)+s(55) =< s(51)
s(53)+s(54)+s(56) =< s(51)
s(57) =< max([0,0])+s(53)* (1/16)
s(58) =< s(53)* (1/16)
s(59) =< s(53)* (1/16)
s(59) =< s(54)*s(57)
s(54) =< s(56)+s(53)* (1/16)
s(60) =< s(57)+1/16
s(58) =< s(54)*s(60)

  with precondition: [V_cinfo_Se>=V_cinfo_Ss] 

* Chain [18]: 2
  with precondition: [V_cinfo_Ss>=V_cinfo_Se+1] 


Closed-form bounds of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B): 
-------------------------------------
* Chain [19] with precondition: [V_cinfo_Se>=V_cinfo_Ss] 
    - Upper bound: -49/8*V_cinfo_Ss+49/8*V_cinfo_Se+65/8 
    - Complexity: n 
* Chain [18] with precondition: [V_cinfo_Ss>=V_cinfo_Se+1] 
    - Upper bound: 2 
    - Complexity: constant 

### Maximum cost of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B): 49/8*nat(-V_cinfo_Ss+V_cinfo_Se+1)+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 37 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 51 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 74 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 234 ms.

