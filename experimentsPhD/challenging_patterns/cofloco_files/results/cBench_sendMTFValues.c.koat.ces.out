Warning: Ignored call to eval_sendMTFValues_stop/1 in equation loop_cont_eval_sendMTFValues_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_sendMTFValues_10/14,eval_sendMTFValues_9/13,eval_sendMTFValues_bb3_in/13]
1. recursive : [eval_sendMTFValues_17/7,eval_sendMTFValues_18/7,eval_sendMTFValues_21/9,eval_sendMTFValues_22/9,eval_sendMTFValues_23/10,eval_sendMTFValues_24/10,eval_sendMTFValues_bb1_in/5,eval_sendMTFValues_bb6_in/8,loop_cont_eval_sendMTFValues_bb3_in/9]
2. non_recursive : [loop_cont_eval_sendMTFValues_bb1_in/2]
3. non_recursive : [eval_sendMTFValues_6/3]
4. non_recursive : [eval_sendMTFValues_5/3]
5. non_recursive : [eval_sendMTFValues_4/3]
6. non_recursive : [eval_sendMTFValues_3/3]
7. non_recursive : [eval_sendMTFValues_2/3]
8. non_recursive : [eval_sendMTFValues_1/3]
9. non_recursive : [eval_sendMTFValues_0/3]
10. non_recursive : [eval_sendMTFValues_bb0_in/3]
11. non_recursive : [eval_sendMTFValues_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_sendMTFValues_bb3_in/13
1. SCC is partially evaluated into eval_sendMTFValues_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_sendMTFValues_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_sendMTFValues_bb3_in/13 
* CE 14 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 11 is refined into CE [22] 
* CE 13 is refined into CE [23] 


#### Refined cost equations eval_sendMTFValues_bb3_in/13 
* CE 15: eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) = 1+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,J,B,C,D,E,F,G,H,I)
     [V_alphaSize>=V_ge_0+2,V_ge_0+1>=V_gs_0,B>=2,V_nPart_0>=1,3>=B,V_ge_0+1=J] 
* CE 16: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,E) = 0
     [E+1>=C,E+1>=B,D>=1,F=3] 
* CE 17: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,E) = 0
     [E+1>=C,D>=1,G=0,F=3] 
* CE 18: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [A>=D+1,E+1>=C,E+1>=B,D>=1,F=2] 
* CE 19: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [E+1>=C,E+1>=B,D>=A+1,D>=1,F=2] 
* CE 20: eval_sendMTFValues_bb3_in(A,B,C,A,D,E,A,B,C,A,D,F,G) = 0
     [D+1>=C,D+1>=B,A>=1,E=2] 
* CE 21: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [A>=D+1,E+1>=C,D>=1,G=0,F=2] 
* CE 22: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [E+1>=C,D>=A+1,D>=1,G=0,F=2] 
* CE 23: eval_sendMTFValues_bb3_in(A,B,C,A,D,E,A,B,C,A,D,F,G) = 0
     [D+1>=C,A>=1,F=0,E=2] 

### Cost equations --> "Loop" of eval_sendMTFValues_bb3_in/13 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [15] --> Loop 21 

#### Loops of eval_sendMTFValues_bb3_in/13 
* Loop 13: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,E) [E+1>=C,E+1>=B,D>=1,F=3] 
* Loop 14: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,E) [E+1>=C,D>=1,G=0,F=3] 
* Loop 15: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [A>=D+1,E+1>=C,E+1>=B,D>=1,F=2] 
* Loop 16: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [E+1>=C,E+1>=B,D>=A+1,D>=1,F=2] 
* Loop 17: eval_sendMTFValues_bb3_in(A,B,C,A,D,E,A,B,C,A,D,F,G) [D+1>=C,D+1>=B,A>=1,E=2] 
* Loop 18: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [A>=D+1,E+1>=C,D>=1,G=0,F=2] 
* Loop 19: eval_sendMTFValues_bb3_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [E+1>=C,D>=A+1,D>=1,G=0,F=2] 
* Loop 20: eval_sendMTFValues_bb3_in(A,B,C,A,D,E,A,B,C,A,D,F,G) [D+1>=C,A>=1,F=0,E=2] 
* Loop 21: eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I)->  eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0',B,C,D,E,F,G,H,I)
                  [V_alphaSize>=V_ge_0+2,V_ge_0+1>=V_gs_0,B>=2,V_nPart_0>=1,3>=B,V_ge_0+1=V_ge_0'] 

### Ranking functions of CR eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) 
* RF of phase [21]: [V_alphaSize-V_ge_0-1]

#### Partial ranking functions of CR eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_alphaSize-V_ge_0-1


### Resulting Chains:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) 
* [[21],20]
* [[21],19]
* [[21],18]
* [[21],17]
* [[21],16]
* [[21],15]
* [[21],14]
* [[21],13]
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]
* [14]
* [13]


### Merging Chains  eval_sendMTFValues_bb3_in/13 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[20,[21]]] --> 4 
* [[19,[21]]] --> 5 
* [[18,[21]]] --> 6 
* [[17]] --> 7 
* [[17,[21]]] --> 8 
* [[16]] --> 9 
* [[15]] --> 10 
* [[16,[21]]] --> 11 
* [[15,[21]]] --> 12 
* [[14]] --> 13 
* [[14,[21]]] --> 14 
* [[13]] --> 15 
* [[13,[21]]] --> 16 


### Specialization of cost equations eval_sendMTFValues_bb1_in/5 
* CE 5 is refined into CE [24] 
* CE 3 is refined into CE [25,26,27,28,29,30,31,32,33,34,35,36] 
* CE 4 is refined into CE [37,38,39,40] 


#### Refined cost equations eval_sendMTFValues_bb1_in/5 
* CE 24: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 0
     [0>=V_nPart_0,B=4] 
* CE 25: eval_sendMTFValues_bb1_in(A,B,C,A,D) = 2+ eval_sendMTFValues_bb3_in(A,B,E,A,F,G,A,B,H,A,F,I,J):1+ eval_sendMTFValues_bb1_in(A,B,K,L,M)
     [A>=1,A=L+1,F+1=H,F+1=E,F+1=C,M=4,I=0,G=2,D=4] 
* CE 26: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,H):2+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,I,J,K)
     [V_nPart_0>=V_nGroups+1,V_nPart_0>=1,V_nPart_0=J+1,D+1=F,D+1=C,D+1=V_gs_0,K=4,G=0,E=2,B=4] 
* CE 27: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,H):3+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,I,J,K)
     [V_nGroups>=V_nPart_0+1,V_nPart_0>=1,V_nPart_0=J+1,D+1=F,D+1=C,D+1=V_gs_0,K=4,G=0,E=2,B=4] 
* CE 28: eval_sendMTFValues_bb1_in(A,B,C,A,D) = 2+ eval_sendMTFValues_bb3_in(A,B,C,A,E,F,A,B,C,A,G,H,I):4+ eval_sendMTFValues_bb1_in(A,B,J,K,L)
     [B>=G+1,G>=C,A>=1,A=K+1,C=E+1,L=4,H=0,F=2,D=4] 
* CE 29: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,G):5+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [V_alphaSize>=E+1,E>=V_gs_0,V_nPart_0>=V_nGroups+1,V_nPart_0>=1,V_nPart_0=I+1,V_gs_0=C+1,J=4,F=0,D=2,B=4] 
* CE 30: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,G):6+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [V_alphaSize>=E+1,V_nGroups>=V_nPart_0+1,E>=V_gs_0,V_nPart_0>=1,V_nPart_0=I+1,V_gs_0=C+1,J=4,F=0,D=2,B=4] 
* CE 31: eval_sendMTFValues_bb1_in(A,B,C,A,D) = 2+ eval_sendMTFValues_bb3_in(A,B,E,A,F,G,A,B,H,A,F,I,J):7+ eval_sendMTFValues_bb1_in(A,B,K,L,M)
     [F+1>=B,A>=1,A=L+1,F+1=H,F+1=E,F+1=C,M=4,G=2,D=4] 
* CE 32: eval_sendMTFValues_bb1_in(A,B,C,A,D) = 2+ eval_sendMTFValues_bb3_in(A,B,C,A,E,F,A,B,C,A,G,H,I):8+ eval_sendMTFValues_bb1_in(A,B,J,K,L)
     [B>=C+1,A>=1,A=K+1,B=G+1,C=E+1,L=4,F=2,D=4] 
* CE 33: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,H):9+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,I,J,K)
     [D+1>=V_alphaSize,V_nPart_0>=V_nGroups+1,V_nPart_0>=1,V_nPart_0=J+1,D+1=F,D+1=C,D+1=V_gs_0,K=4,E=2,B=4] 
* CE 34: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,H):10+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,I,J,K)
     [V_nGroups>=V_nPart_0+1,D+1>=V_alphaSize,V_nPart_0>=1,V_nPart_0=J+1,D+1=F,D+1=C,D+1=V_gs_0,K=4,E=2,B=4] 
* CE 35: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,G):11+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [V_alphaSize>=V_gs_0+1,V_nPart_0>=V_nGroups+1,V_nPart_0>=1,V_nPart_0=I+1,V_alphaSize=E+1,V_gs_0=C+1,J=4,D=2,B=4] 
* CE 36: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,G):12+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [V_nGroups>=V_nPart_0+1,V_alphaSize>=V_gs_0+1,V_nPart_0>=1,V_nPart_0=I+1,V_alphaSize=E+1,V_gs_0=C+1,J=4,D=2,B=4] 
* CE 37: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,D):13+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [V_nPart_0>=1,V_nPart_0=I+1,D+1=H,D+1=F,D+1=C,D+1=V_gs_0,J=4,G=0,E=3,B=4] 
* CE 38: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,E):14+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,G,H,I)
     [V_alphaSize>=E+1,E>=V_gs_0,V_nPart_0>=1,V_nPart_0=H+1,E+1=G,V_gs_0=C+1,I=4,F=0,D=3,B=4] 
* CE 39: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,C,V_nPart_0,D,E,V_nGroups,V_alphaSize,F,V_nPart_0,D,G,D):15+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,H,I,J)
     [D+1>=V_alphaSize,V_nPart_0>=1,V_nPart_0=I+1,D+1=H,D+1=F,D+1=C,D+1=V_gs_0,J=4,E=3,B=4] 
* CE 40: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) = 2+ eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,C,D,V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,E,F,G):16+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_alphaSize,H,I)
     [V_alphaSize>=V_gs_0+1,V_nPart_0>=1,V_nPart_0=H+1,V_alphaSize=G+1,V_alphaSize=E+1,V_gs_0=C+1,I=4,D=3,B=4] 

### Cost equations --> "Loop" of eval_sendMTFValues_bb1_in/5 
* CEs [30,36] --> Loop 22 
* CEs [27,34] --> Loop 23 
* CEs [26,29,33,35] --> Loop 24 
* CEs [38,40] --> Loop 25 
* CEs [25,28,31,32] --> Loop 26 
* CEs [37,39] --> Loop 27 
* CEs [24] --> Loop 28 

#### Loops of eval_sendMTFValues_bb1_in/5 
* Loop 22: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B)->  eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0',V_nPart_0',B')
                  [V_nGroups>=V_nPart_0+1,V_alphaSize>=V_gs_0+1,V_nPart_0>=1,V_nPart_0=V_nPart_0'+1,B'=4,B=4] 
* Loop 23: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B)->  eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0',V_nPart_0',B')
                  [V_nGroups>=V_nPart_0+1,V_nPart_0>=1,V_nPart_0=V_nPart_0'+1,B'=4,B=4] 
* Loop 24: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B)->  eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0',V_nPart_0',B')
                  [V_nPart_0>=V_nGroups+1,V_nPart_0>=1,V_nPart_0=V_nPart_0'+1,B'=4,B=4] 
* Loop 25: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B)->  eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0',V_nPart_0',B')
                  [V_alphaSize>=V_gs_0',V_gs_0'>=V_gs_0+1,V_nPart_0>=1,V_nPart_0=V_nPart_0'+1,B'=4,B=4] 
* Loop 26: eval_sendMTFValues_bb1_in(A,B,C,A,D)->  eval_sendMTFValues_bb1_in(A,B,A',B',C')
                  [A>=1,A=B'+1,C'=4,D=4] 
* Loop 27: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B)->  eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0',B')
                  [V_nPart_0>=1,V_nPart_0=V_nPart_0'+1,B'=4,B=4] 
* Loop 28: eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) [0>=V_nPart_0,B=4] 

### Ranking functions of CR eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) 
* RF of phase [22,23,24,25,26,27]: [V_nPart_0]

#### Partial ranking functions of CR eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) 


### Resulting Chains:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) 
* [[22,23,24,25,26,27],28]
* [28]


### Merging Chains  eval_sendMTFValues_bb1_in/5 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[22,23,24,25,26,27]]] --> 2 


### Specialization of cost equations eval_sendMTFValues_start/3 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_sendMTFValues_start/3 
* CE 41: eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) = 1+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,C,V_nGroups,D):1
     [0>=V_nGroups,D=4,C=0] 
* CE 42: eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) = 1+ eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,C,V_nGroups,D):2
     [V_nGroups>=1,D=4,C=0] 

### Cost equations --> "Loop" of eval_sendMTFValues_start/3 
* CEs [42] --> Loop 29 
* CEs [41] --> Loop 30 

#### Loops of eval_sendMTFValues_start/3 
* Loop 29: eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) [V_nGroups>=1] 
* Loop 30: eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) [0>=V_nGroups] 

### Ranking functions of CR eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) 

#### Partial ranking functions of CR eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) 


### Resulting Chains:eval_sendMTFValues_start(V_nGroups,V_alphaSize,B) 
* [30]
* [29]


### Merging Chains  eval_sendMTFValues_start/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of phase [21]:eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I) -> [eval_sendMTFValues_bb3_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',V_ge_0',B',C',D',E',F',G',H',I')] 
1* #(21)+0
  Such that:#(21) =< V_alphaSize-V_ge_0-1
#(21) =< V_alphaSize-V_ge_0-V_alphaSize'+V_ge_0'

#### Cost of chains of eval_sendMTFValues_bb3_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,V_ge_0,B,C,D,E,F,G,H,I):
* Chain [[21],20]: 1*s(1)+0
  Such that:s(1) =< -V_ge_0+G

  with precondition: [B=2,H=0,V_nGroups=V_nPart_0,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nGroups=F,V_nGroups>=1,V_ge_0+1>=V_gs_0,G>=V_ge_0+1,V_alphaSize>=G+1] 

* Chain [[21],19]: 1*s(2)+0
  Such that:s(2) =< -V_ge_0+G

  with precondition: [B=2,H=0,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_nPart_0>=1,V_nPart_0>=V_nGroups+1,V_ge_0+1>=V_gs_0,G>=V_ge_0+1,V_alphaSize>=G+1] 

* Chain [[21],18]: 1*s(3)+0
  Such that:s(3) =< -V_ge_0+G

  with precondition: [B=2,H=0,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_nPart_0>=1,V_ge_0+1>=V_gs_0,V_nGroups>=V_nPart_0+1,G>=V_ge_0+1,V_alphaSize>=G+1] 

* Chain [[21],17]: 1*s(4)+0
  Such that:s(4) =< V_alphaSize-V_ge_0-1

  with precondition: [B=2,V_nGroups=V_nPart_0,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nGroups=F,V_alphaSize=G+1,V_nGroups>=1,V_ge_0+1>=V_gs_0,V_alphaSize>=V_ge_0+2] 

* Chain [[21],16]: 1*s(5)+0
  Such that:s(5) =< V_alphaSize-V_ge_0-1

  with precondition: [B=2,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_alphaSize=G+1,V_nPart_0>=1,V_nPart_0>=V_nGroups+1,V_ge_0+1>=V_gs_0,V_alphaSize>=V_ge_0+2] 

* Chain [[21],15]: 1*s(6)+0
  Such that:s(6) =< V_alphaSize-V_ge_0-1

  with precondition: [B=2,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_alphaSize=G+1,V_nPart_0>=1,V_ge_0+1>=V_gs_0,V_nGroups>=V_nPart_0+1,V_alphaSize>=V_ge_0+2] 

* Chain [[21],14]: 1*s(7)+0
  Such that:s(7) =< -V_ge_0+G

  with precondition: [B=3,H=0,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,G=I,V_nPart_0>=1,V_ge_0+1>=V_gs_0,G>=V_ge_0+1,V_alphaSize>=G+1] 

* Chain [[21],13]: 1*s(8)+0
  Such that:s(8) =< V_alphaSize-V_ge_0-1

  with precondition: [B=3,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_alphaSize=G+1,V_alphaSize=I+1,V_nPart_0>=1,V_ge_0+1>=V_gs_0,V_alphaSize>=V_ge_0+2] 

* Chain [20]: 0
  with precondition: [B=2,H=0,V_nPart_0=V_nGroups,D=V_alphaSize,V_gs_0=V_ge_0+1,V_nPart_0=C,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1] 

* Chain [19]: 0
  with precondition: [B=2,H=0,D=V_alphaSize,V_gs_0=V_ge_0+1,V_nGroups=C,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1,V_nPart_0>=V_nGroups+1] 

* Chain [18]: 0
  with precondition: [B=2,H=0,D=V_alphaSize,V_gs_0=V_ge_0+1,V_nGroups=C,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1,V_nGroups>=V_nPart_0+1] 

* Chain [17]: 0
  with precondition: [B=2,V_nPart_0=V_nGroups,V_gs_0=V_ge_0+1,V_nPart_0=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1,V_gs_0>=V_alphaSize] 

* Chain [16]: 0
  with precondition: [B=2,V_gs_0=V_ge_0+1,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1,V_nPart_0>=V_nGroups+1,V_gs_0>=V_alphaSize] 

* Chain [15]: 0
  with precondition: [B=2,V_gs_0=V_ge_0+1,V_nGroups=C,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_nPart_0>=1,V_gs_0>=V_alphaSize,V_nGroups>=V_nPart_0+1] 

* Chain [14]: 0
  with precondition: [B=3,H=0,C=V_nGroups,D=V_alphaSize,V_gs_0=V_ge_0+1,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_gs_0=I+1,V_nPart_0>=1] 

* Chain [13]: 0
  with precondition: [B=3,C=V_nGroups,V_gs_0=V_ge_0+1,V_alphaSize=D,V_gs_0=E,V_nPart_0=F,V_gs_0=G+1,V_gs_0=I+1,V_nPart_0>=1,V_gs_0>=V_alphaSize] 


#### Cost of loops [22,23,25,26,27] 

 * loop 22:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
2*s(20)+2
  Such that:s(19) =< V_alphaSize-V_gs_0
s(20) =< s(19)

 * loop 23:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
2
 * loop 25:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
1*s(21)+1*s(22)+2
  Such that:s(21) =< V_alphaSize-V_gs_0
s(22) =< -V_gs_0+V_gs_0'

 * loop 26:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
2*s(24)+2
  Such that:s(23) =< V_alphaSize-V_gs_0
s(24) =< s(23)

 * loop 27:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
2
#### Cost of phase [22,23,24,25,26,27]:eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B) -> [eval_sendMTFValues_bb1_in(V_nGroups',V_alphaSize',V_gs_0',V_nPart_0',B')] 
2* #(27)+2* #(26)+2*sm(25,21)+2*sm(26,24)+2* #(25)+2* #(23)+2* #(22)+2*sm(22,20)+0
  Such that:#(22)+ #(23)+ #(25)+ #(26)+ #(27) =< V_nPart_0
#(22)+ #(23)+ #(25)+ #(26)+ #(27) =< V_nPart_0-V_nPart_0'

#### Cost of chains of eval_sendMTFValues_bb1_in(V_nGroups,V_alphaSize,V_gs_0,V_nPart_0,B):
* Chain [[22,23,24,25,26,27],28]: 2*s(28)+2*s(29)+2*s(30)+2*s(31)+2*s(32)+6*s(33)+0
  Such that:s(28)+s(29)+s(30)+s(31)+s(32) =< V_nPart_0

  with precondition: [B=4,V_nPart_0>=1,V_nGroups>=V_nPart_0] 

* Chain [28]: 0
  with precondition: [V_gs_0=0,B=4,V_nPart_0=V_nGroups,0>=V_nPart_0] 


#### Cost of chains of eval_sendMTFValues_start(V_nGroups,V_alphaSize,B):
* Chain [30]: 1
  with precondition: [0>=V_nGroups] 

* Chain [29]: 2*s(50)+2*s(49)+2*s(48)+2*s(47)+2*s(46)+6*s(51)+1
  Such that:s(46)+s(47)+s(48)+s(49)+s(50) =< V_nGroups

  with precondition: [V_nGroups>=1] 


Closed-form bounds of eval_sendMTFValues_start(V_nGroups,V_alphaSize,B): 
-------------------------------------
* Chain [30] with precondition: [0>=V_nGroups] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [29] with precondition: [V_nGroups>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_sendMTFValues_start(V_nGroups,V_alphaSize,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 70 ms.
* Invariants computed in 96 ms.
   - Backward Invariants 69 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 162 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 166 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 68 ms.
   - Chain cost structures 63 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 581 ms.

