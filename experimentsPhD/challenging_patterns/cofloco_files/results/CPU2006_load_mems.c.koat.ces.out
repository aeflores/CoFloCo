Warning: Ignored call to eval_load_mems_stop/1 in equation loop_cont_eval_load_mems_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [eval_load_mems_10/13,eval_load_mems_9/13,eval_load_mems_bb4_in/13]
1. recursive : [eval_load_mems_7/11,eval_load_mems_8/11,eval_load_mems_bb2_in/11,eval_load_mems_bb7_in/12,loop_cont_eval_load_mems_bb4_in/13]
2. recursive : [eval_load_mems_15/6,eval_load_mems_16/6,eval_load_mems_17/7,eval_load_mems_18/7,eval_load_mems_bb1_in/4,loop_cont_eval_load_mems_bb2_in/7]
3. non_recursive : [loop_cont_eval_load_mems_bb1_in/2]
4. non_recursive : [eval_load_mems_6/4]
5. non_recursive : [eval_load_mems_5/4]
6. non_recursive : [eval_load_mems_4/4]
7. non_recursive : [eval_load_mems_3/4]
8. non_recursive : [eval_load_mems_2/4]
9. non_recursive : [eval_load_mems_1/4]
10. non_recursive : [eval_load_mems_0/4]
11. non_recursive : [eval_load_mems_bb0_in/4]
12. non_recursive : [eval_load_mems_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_load_mems_bb4_in/13
1. SCC is partially evaluated into eval_load_mems_bb2_in/11
2. SCC is partially evaluated into eval_load_mems_bb1_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_load_mems_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_load_mems_bb4_in/13 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations eval_load_mems_bb4_in/13 
* CE 11: eval_load_mems_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [F>=D,F>=64,1>=E,G=2] 
* CE 12: eval_load_mems_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [F>=D,63>=F,1>=E,G=2] 
* CE 13: eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) = 1+ eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,I,J,C,D,E,F,G,H)
     [V__2>=V__13,63>=V__2,1>=V__1,V__2+1=I,J=2,B=2] 

### Cost equations --> "Loop" of eval_load_mems_bb4_in/13 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_load_mems_bb4_in/13 
* Loop 9: eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H)->  eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2',B',C,D,E,F,G,H)
                  [V__2>=V__13,63>=V__2,1>=V__1,V__2+1=V__2',B'=2,B=2] 
* Loop 10: eval_load_mems_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [F>=D,F>=64,1>=E,G=2] 
* Loop 11: eval_load_mems_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [F>=D,63>=F,1>=E,G=2] 

### Ranking functions of CR eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) 
* RF of phase [9]: [-V__2+64]

#### Partial ranking functions of CR eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__2+64


### Resulting Chains:eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  eval_load_mems_bb4_in/13 into  External patterns of execution 
* [[10,[9]]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 
* [[11,[9]]] --> 4 


### Specialization of cost equations eval_load_mems_bb2_in/11 
* CE 7 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 6 is refined into CE [16,17,18,19] 


#### Refined cost equations eval_load_mems_bb2_in/11 
* CE 14: eval_load_mems_bb2_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [E>=2,F=3] 
* CE 15: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) = 1+ eval_load_mems_bb2_in(V__02,V__01,V__0,H,I,J,C,D,E,F,G)
     [1>=V__1,V__1+1=I,J=3,H=0,B=3] 
* CE 16: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) = 2+ eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__13,H,V__02,V__01,V__0,V__13,V__1,I):1+ eval_load_mems_bb2_in(V__02,V__01,V__0,J,K,L,C,D,E,F,G)
     [1>=V__1,63>=V__13,V__1+1=K,L=3,J=0,I=64,H=2,B=3] 
* CE 17: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) = 2+ eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__13,H,V__02,V__01,V__0,V__13,V__1,V__13):2+ eval_load_mems_bb2_in(V__02,V__01,V__0,I,J,K,C,D,E,F,G)
     [1>=V__1,63>=V__13,V__1+1=J,K=3,I=0,H=2,B=3] 
* CE 18: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) = 2+ eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__13,H,V__02,V__01,V__0,V__13,V__1,V__13):3+ eval_load_mems_bb2_in(V__02,V__01,V__0,I,J,K,C,D,E,F,G)
     [V__13>=64,1>=V__1,V__1+1=J,K=3,I=0,H=2,B=3] 
* CE 19: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) = 2+ eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__13,H,V__02,V__01,V__0,V__13,V__1,I):4+ eval_load_mems_bb2_in(V__02,V__01,V__0,J,K,L,C,D,E,F,G)
     [I>=V__13+1,63>=I,1>=V__1,V__1+1=K,L=3,J=0,H=2,B=3] 

### Cost equations --> "Loop" of eval_load_mems_bb2_in/11 
* CEs [15,16,17,18,19] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_load_mems_bb2_in/11 
* Loop 12: eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G)->  eval_load_mems_bb2_in(V__02,V__01,V__0,V__13',V__1',B',C,D,E,F,G)
                  [1>=V__1,V__1+1=V__1',B'=3,V__13'=0,B=3] 
* Loop 13: eval_load_mems_bb2_in(A,B,C,D,E,F,A,B,C,D,E) [E>=2,F=3] 

### Ranking functions of CR eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) 
* RF of phase [12]: [-V__1+2]

#### Partial ranking functions of CR eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    -V__1+2


### Resulting Chains:eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) 
* [[12],13]
* [13]


### Merging Chains  eval_load_mems_bb2_in/11 into  External patterns of execution 
* [[13,[12]]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_load_mems_bb1_in/4 
* CE 4 is refined into CE [20] 
* CE 3 is refined into CE [21,22] 


#### Refined cost equations eval_load_mems_bb1_in/4 
* CE 20: eval_load_mems_bb1_in(V__02,V__01,V__0,B) = 0
     [0>=V__0,B=4] 
* CE 21: eval_load_mems_bb1_in(V__02,V__01,V__0,B) = 2+ eval_load_mems_bb2_in(V__02,V__01,V__0,V__02,V__01,C,V__02,V__01,V__0,D,E):1+ eval_load_mems_bb1_in(F,G,H,I)
     [V__0>=1,1>=V__01,V__0=H+1,I=4,G=0,F=0,E=2,D=0,C=3,B=4] 
* CE 22: eval_load_mems_bb1_in(V__02,V__01,V__0,B) = 2+ eval_load_mems_bb2_in(V__02,V__01,V__0,V__02,V__01,C,V__02,V__01,V__0,V__02,V__01):2+ eval_load_mems_bb1_in(V__02,D,E,F)
     [V__0>=1,V__01>=2,V__0=E+1,F=4,D=0,C=3,B=4] 

### Cost equations --> "Loop" of eval_load_mems_bb1_in/4 
* CEs [22] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of eval_load_mems_bb1_in/4 
* Loop 14: eval_load_mems_bb1_in(V__02,V__01,V__0,B)->  eval_load_mems_bb1_in(V__02,V__01',V__0',B')
                  [V__0>=1,V__01>=2,V__0=V__0'+1,B'=4,V__01'=0,B=4] 
* Loop 15: eval_load_mems_bb1_in(V__02,V__01,V__0,B)->  eval_load_mems_bb1_in(V__02',V__01',V__0',B')
                  [V__0>=1,1>=V__01,V__0=V__0'+1,B'=4,V__01'=0,V__02'=0,B=4] 
* Loop 16: eval_load_mems_bb1_in(V__02,V__01,V__0,B) [0>=V__0,B=4] 

### Ranking functions of CR eval_load_mems_bb1_in(V__02,V__01,V__0,B) 
* RF of phase [15]: [V__0]

#### Partial ranking functions of CR eval_load_mems_bb1_in(V__02,V__01,V__0,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V__0


### Resulting Chains:eval_load_mems_bb1_in(V__02,V__01,V__0,B) 
* [[15],16]
* [16]
* [14,[15],16]
* [14,16]


### Merging Chains  eval_load_mems_bb1_in/4 into  External patterns of execution 
* [[16,14]] --> 1 
* [[16,[15]]] --> 2 
* [[16]] --> 3 
* [[16,[15],14]] --> 4 


### Specialization of cost equations eval_load_mems_start/4 
* CE 2 is refined into CE [23,24,25,26] 


#### Refined cost equations eval_load_mems_start/4 
* CE 23: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) = 1+ eval_load_mems_bb1_in(V_bit_num_,V_word_num_,C,D):1
     [V_word_num_>=2,D=4,C=1,V_ptr=1] 
* CE 24: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) = 1+ eval_load_mems_bb1_in(V_bit_num_,V_word_num_,V_ptr,C):2
     [V_ptr>=1,1>=V_word_num_,C=4] 
* CE 25: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) = 1+ eval_load_mems_bb1_in(V_bit_num_,V_word_num_,V_ptr,C):3
     [0>=V_ptr,C=4] 
* CE 26: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) = 1+ eval_load_mems_bb1_in(V_bit_num_,V_word_num_,V_ptr,C):4
     [V_ptr>=2,V_word_num_>=2,C=4] 

### Cost equations --> "Loop" of eval_load_mems_start/4 
* CEs [26] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of eval_load_mems_start/4 
* Loop 17: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) [V_word_num_>=2,V_ptr>=2] 
* Loop 18: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) [V_ptr>=1,1>=V_word_num_] 
* Loop 19: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) [0>=V_ptr] 
* Loop 20: eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) [V_word_num_>=2,V_ptr=1] 

### Ranking functions of CR eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) 

#### Partial ranking functions of CR eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) 


### Resulting Chains:eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B) 
* [20]
* [19]
* [18]
* [17]


### Merging Chains  eval_load_mems_start/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) -> [eval_load_mems_bb4_in(V__02',V__01',V__0',V__13',V__1',V__2',B',C',D',E',F',G',H')] 
1
#### Cost of phase [9]:eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) -> [eval_load_mems_bb4_in(V__02',V__01',V__0',V__13',V__1',V__2',B',C',D',E',F',G',H')] 
1* #(9)+0
  Such that:#(9) =< -V__2+64
#(9) =< -V__2+V__2'

#### Cost of phase [9]:eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H) -> [eval_load_mems_bb4_in(V__02',V__01',V__0',V__13',V__1',V__2',B',C',D',E',F',G',H')] 
1* #(9)+0
  Such that:#(9) =< -V__2+64
#(9) =< -V__2+V__2'

#### Cost of chains of eval_load_mems_bb4_in(V__02,V__01,V__0,V__13,V__1,V__2,B,C,D,E,F,G,H):
* Chain [[9],11]: 1*s(1)+0
  Such that:s(1) =< -V__2+H

  with precondition: [B=2,V__02=C,V__01=D,V__0=E,V__13=F,V__1=G,1>=V__1,63>=H,V__2>=V__13,H>=V__2+1] 

* Chain [[9],10]: 1*s(2)+0
  Such that:s(2) =< -V__2+64

  with precondition: [B=2,H=64,V__02=C,V__01=D,V__0=E,V__13=F,V__1=G,1>=V__1,63>=V__2,V__2>=V__13] 

* Chain [11]: 0
  with precondition: [B=2,C=V__02,D=V__01,E=V__0,V__13=V__2,V__13=F,V__1=G,V__13=H,63>=V__13,1>=V__1] 

* Chain [10]: 0
  with precondition: [B=2,C=V__02,D=V__01,E=V__0,V__13=V__2,V__13=F,V__1=G,V__13=H,1>=V__1,V__13>=64] 


#### Cost of loops [12] 

 * loop 12:eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) -> [eval_load_mems_bb2_in(V__02',V__01',V__0',V__13',V__1',B',C',D',E',F',G')] 
1*s(7)+1*s(8)+2
  Such that:s(7) =< -V__13+63
s(8) =< -V__13+64

#### Cost of phase [12]:eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G) -> [eval_load_mems_bb2_in(V__02',V__01',V__0',V__13',V__1',B',C',D',E',F',G')] 
2* #(12)+1*sm(12,7)+1*sm(12,8)+0
  Such that:s(11) =< 63
s(12) =< -V__13+63
#(12) =< -V__1+2
#(12) =< -V__1+V__1'
s(13) =< max([s(12),s(11)])
sm(12,7) =< #(12)*s(13)
s(14) =< s(13)+1
sm(12,8) =< #(12)*s(14)

#### Cost of chains of eval_load_mems_bb2_in(V__02,V__01,V__0,V__13,V__1,B,C,D,E,F,G):
* Chain [[12],13]: 2*s(17)+1*s(19)+1*s(21)+0
  Such that:s(15) =< 63
s(16) =< -V__13+63
s(17) =< -V__1+2
s(18) =< max([s(16),s(15)])
s(19) =< s(17)*s(18)
s(20) =< s(18)+1
s(21) =< s(17)*s(20)

  with precondition: [B=3,F=0,G=2,V__02=C,V__01=D,V__0=E,1>=V__1,V__0>=1,V__1>=V__01] 

* Chain [13]: 0
  with precondition: [B=3,V__02=V__13,V__01=V__1,V__02=C,V__01=D,V__0=E,V__02=F,V__01=G,V__01>=2,V__0>=1] 


#### Cost of loops [15] 

 * loop 15:eval_load_mems_bb1_in(V__02,V__01,V__0,B) -> [eval_load_mems_bb1_in(V__02',V__01',V__0',B')] 
2*s(31)+1*s(33)+1*s(35)+2
  Such that:s(29) =< 63
s(30) =< -V__02+63
s(31) =< -V__01+2
s(32) =< max([s(30),s(29)])
s(33) =< s(31)*s(32)
s(34) =< s(32)+1
s(35) =< s(31)*s(34)

#### Cost of phase [15]:eval_load_mems_bb1_in(V__02,V__01,V__0,B) -> [eval_load_mems_bb1_in(V__02',V__01',V__0',B')] 
2* #(15)+2*sm(15,31)+1*sm(15,33)+1*sm(15,35)+0
  Such that:s(42) =< -V__02+63
sm(15,31) =< -V__01+2*V__0
sm(15,31) =< -V__01+2*V__0+V__01'-2*V__0'
#(15) =< V__0
#(15) =< V__0-V__0'
s(43) =< 63
s(30) =< max([s(42),s(43)])
s(32) =< max([s(30),s(43)])
sm(15,33) =< sm(15,31)*s(32)
s(34) =< s(32)+1
sm(15,35) =< sm(15,31)*s(34)

#### Cost of phase [15]:eval_load_mems_bb1_in(V__02,V__01,V__0,B) -> [eval_load_mems_bb1_in(V__02',V__01',V__0',B')] 
2* #(15)+2*sm(15,31)+1*sm(15,33)+1*sm(15,35)+0
  Such that:s(42) =< -V__02+63
sm(15,31) =< -V__01+2*V__0
sm(15,31) =< -V__01+2*V__0+V__01'-2*V__0'
#(15) =< V__0
#(15) =< V__0-V__0'
s(43) =< 63
s(30) =< max([s(42),s(43)])
s(32) =< max([s(30),s(43)])
sm(15,33) =< sm(15,31)*s(32)
s(34) =< s(32)+1
sm(15,35) =< sm(15,31)*s(34)

#### Cost of chains of eval_load_mems_bb1_in(V__02,V__01,V__0,B):
* Chain [[15],16]: 2*s(47)+2*s(46)+1*s(50)+1*s(52)+0
  Such that:s(44) =< 63
s(45) =< -V__02+63
s(46) =< -V__01+2*V__0
s(47) =< V__0
s(48) =< max([s(45),s(44)])
s(49) =< max([s(48),s(44)])
s(50) =< s(46)*s(49)
s(51) =< s(49)+1
s(52) =< s(46)*s(51)

  with precondition: [B=4,1>=V__01,V__0>=1] 

* Chain [16]: 0
  with precondition: [B=4,0>=V__0] 

* Chain [14,[15],16]: 2*s(55)+2*s(56)+1*s(59)+1*s(61)+2
  Such that:s(53) =< 63
s(54) =< -V__02+63
s(55) =< V__0-1
s(56) =< 2*V__0-2
s(57) =< max([s(54),s(53)])
s(58) =< max([s(57),s(53)])
s(59) =< s(56)*s(58)
s(60) =< s(58)+1
s(61) =< s(56)*s(60)

  with precondition: [B=4,V__01>=2,V__0>=2] 

* Chain [14,16]: 2
  with precondition: [V__0=1,B=4,V__01>=2] 


#### Cost of chains of eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B):
* Chain [20]: 3
  with precondition: [V_ptr=1,V_word_num_>=2] 

* Chain [19]: 1
  with precondition: [0>=V_ptr] 

* Chain [18]: 2*s(99)+2*s(100)+1*s(104)+1*s(106)+1
  Such that:s(98) =< 63
s(99) =< V_ptr
s(100) =< 2*V_ptr-V_word_num_
s(101) =< -V_bit_num_+63
s(102) =< max([s(101),s(98)])
s(103) =< max([s(102),s(98)])
s(104) =< s(100)*s(103)
s(105) =< s(103)+1
s(106) =< s(100)*s(105)

  with precondition: [1>=V_word_num_,V_ptr>=1] 

* Chain [17]: 2*s(108)+2*s(109)+1*s(113)+1*s(115)+3
  Such that:s(107) =< 63
s(108) =< V_ptr-1
s(109) =< 2*V_ptr-2
s(110) =< -V_bit_num_+63
s(111) =< max([s(110),s(107)])
s(112) =< max([s(111),s(107)])
s(113) =< s(109)*s(112)
s(114) =< s(112)+1
s(115) =< s(109)*s(114)

  with precondition: [V_ptr>=2,V_word_num_>=2] 


Closed-form bounds of eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B): 
-------------------------------------
* Chain [20] with precondition: [V_ptr=1,V_word_num_>=2] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [19] with precondition: [0>=V_ptr] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [1>=V_word_num_,V_ptr>=1] 
    - Upper bound: 8*V_ptr-3*V_word_num_+1+ (4*V_ptr-2*V_word_num_)*max([63,max([63,nat(-V_bit_num_+63)])]) 
    - Complexity: n^2 
* Chain [17] with precondition: [V_ptr>=2,V_word_num_>=2] 
    - Upper bound: 8*V_ptr+3+4*V_ptr*max([63,max([63,nat(-V_bit_num_+63)])]) 
    - Complexity: n^2 

### Maximum cost of eval_load_mems_start(V_ptr,V_word_num_,V_bit_num_,B): max([2,nat(V_ptr)*2+max([nat(2*V_ptr-V_word_num_)*2*max([63,max([63,nat(-V_bit_num_+63)])])+nat(2*V_ptr-V_word_num_)*3,nat(2*V_ptr)*3+2+nat(2*V_ptr)*2*max([63,max([63,nat(-V_bit_num_+63)])])])])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 46 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 83 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 119 ms.
   - Equation cost structures 36 ms.
   - Phase cost structures 64 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 354 ms.

