This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_start(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_start(B) -> eval_rsd_start(C)

  * Ranking function: N/A

  * Invariants eval_rsd_start(A) -> eval_rsd_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_bb0_in(B) -> eval_rsd_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_rsd_bb0_in(A) -> eval_rsd_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_0(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_0(B) -> eval_rsd_0(C)

  * Ranking function: N/A

  * Invariants eval_rsd_0(A) -> eval_rsd_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_1(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_1(B) -> eval_rsd_1(C)

  * Ranking function: N/A

  * Invariants eval_rsd_1(A) -> eval_rsd_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_2(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_2(B) -> eval_rsd_2(C)

  * Ranking function: N/A

  * Invariants eval_rsd_2(A) -> eval_rsd_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsd_bb1_in(A)

  * Non Asymptotic Upper Bound: 1+2*nat(2*A+1) 

  * LOOPS eval_rsd_bb1_in(B) -> eval_rsd_bb1_in(C)

  * Ranking function: N/A

  * Invariants eval_rsd_bb1_in(A) -> eval_rsd_bb1_in(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS eval_rsd_4(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(B+1) 

  * LOOPS eval_rsd_4(C,D) -> eval_rsd_4(E,F)

  * Ranking function: N/A

  * Invariants eval_rsd_4(A,B) -> eval_rsd_4(C,D)

     entry  : [B>=0,2*A=B]
     non-rec: [A=C,B=D,B>=0,2*A=B]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,A=C,2*A=D]

CRS eval_rsd_5(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(B+1) 

  * LOOPS eval_rsd_5(C,D) -> eval_rsd_5(E,F)

  * Ranking function: N/A

  * Invariants eval_rsd_5(A,B) -> eval_rsd_5(C,D)

     entry  : [B>=0,2*A=B]
     non-rec: [A=C,B=D,B>=0,2*A=B]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,A=C,2*A=D]

CRS eval_rsd_6(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_6(D,E,F) -> eval_rsd_6(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_6(A,B,C) -> eval_rsd_6(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_7(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_7(D,E,F) -> eval_rsd_7(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_7(A,B,C) -> eval_rsd_7(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_8(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_8(D,E,F) -> eval_rsd_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_8(A,B,C) -> eval_rsd_8(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_9(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_9(D,E,F) -> eval_rsd_9(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_9(A,B,C) -> eval_rsd_9(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_10(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_10(D,E,F) -> eval_rsd_10(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_10(A,B,C) -> eval_rsd_10(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_11(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_11(D,E,F) -> eval_rsd_11(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_11(A,B,C) -> eval_rsd_11(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS eval_rsd_12(A,B,C)

  * Non Asymptotic Upper Bound: 1+2*nat(C+1) 

  * LOOPS eval_rsd_12(D,E,F) -> eval_rsd_12(G,H,I)

  * Ranking function: N/A

  * Invariants eval_rsd_12(A,B,C) -> eval_rsd_12(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [0=1]
     inv    : [A>=0,2*A=B,2*A=C,A=D,2*A=E,2*A=F]

CRS loop_cont_eval_rsd_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_rsd_bb2_in(C,D) -> loop_cont_eval_rsd_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsd_bb2_in(A,B) -> loop_cont_eval_rsd_bb2_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_rsd_bb4_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsd_bb4_in -> eval_rsd_bb4_in

  * Ranking function: N/A

  * Invariants eval_rsd_bb4_in -> eval_rsd_bb4_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsd_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(-2*A+B+C+1) 

  * LOOPS eval_rsd_bb2_in(D,E,F) -> eval_rsd_bb2_in(G,H,I)
     - [F=I+1,D=G,E=H,I+1>=D]
     - [F=H,D=G,E=I+1,H>=D]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_rsd_bb2_in/3]))

  * Invariants eval_rsd_bb2_in(A,B,C) -> eval_rsd_bb2_in(D,E,F)

     entry  : [C>=0,2*A=C,B=C]
     non-rec: [A=D,B=E,C=F,C>=0,2*A=C,B=C]
     rec    : [A=D,2*A=C,2*A=B,F+1>=A,2*A>=E,E>=A,2*A>=F+1]
     inv    : [F+1>=A,E>=A,2*A>=F,2*A>=E,A=D,2*A=C,2*A=B]


