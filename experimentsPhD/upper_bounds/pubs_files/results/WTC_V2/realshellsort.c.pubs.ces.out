This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_start(B) -> eval_realshellsort_start(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_start(A) -> eval_realshellsort_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_bb0_in(B) -> eval_realshellsort_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_bb0_in(A) -> eval_realshellsort_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_0(B) -> eval_realshellsort_0(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_0(A) -> eval_realshellsort_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_1(B) -> eval_realshellsort_1(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_1(A) -> eval_realshellsort_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_2(B) -> eval_realshellsort_2(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_2(A) -> eval_realshellsort_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_3(B) -> eval_realshellsort_3(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_3(A) -> eval_realshellsort_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_4(B) -> eval_realshellsort_4(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_4(A) -> eval_realshellsort_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_5(B) -> eval_realshellsort_5(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_5(A) -> eval_realshellsort_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_6(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_6(B) -> eval_realshellsort_6(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_6(A) -> eval_realshellsort_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_realshellsort_7(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_7(B) -> eval_realshellsort_7(C)

  * Ranking function: N/A

  * Invariants eval_realshellsort_7(A) -> eval_realshellsort_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_realshellsort_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_realshellsort_bb1_in(C,D) -> loop_cont_eval_realshellsort_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_realshellsort_bb1_in(A,B) -> loop_cont_eval_realshellsort_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_realshellsort_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_realshellsort_bb7_in -> eval_realshellsort_bb7_in

  * Ranking function: N/A

  * Invariants eval_realshellsort_bb7_in -> eval_realshellsort_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_realshellsort_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_realshellsort_bb1_in/2])) 

  * LOOPS eval_realshellsort_bb1_in(C,D) -> eval_realshellsort_bb1_in(E,F)
     - [D>=2]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_realshellsort_bb1_in/2]))

  * Invariants eval_realshellsort_bb1_in(A,B) -> eval_realshellsort_bb1_in(C,D)

     entry  : [A=B]
     non-rec: [A=C,B=D,A=B]
     rec    : [A>=2,A=B]
     inv    : [A=B]

CRS eval_realshellsort_bb2_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_realshellsort_bb2_in/4])) 

  * LOOPS eval_realshellsort_bb2_in(E,F,G,H) -> eval_realshellsort_bb2_in(I,J,K,L)
     - [E>=H+1]
     - [E>=H+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_realshellsort_bb2_in/4]))

  * Invariants eval_realshellsort_bb2_in(A,B,C,D) -> eval_realshellsort_bb2_in(E,F,G,H)

     entry  : [C>=1,2*C+1>=B,B>=2*C,D=0]
     non-rec: [A=E,B=F,C=G,D=H,C>=1,2*C+1>=B,B>=2*C,D=0]
     rec    : [B>=2*C,C>=1,A>=1,2*C+1>=B,D=0]
     inv    : [B>=2*C,2*C+1>=B,C>=1,D=0]

CRS eval_realshellsort_bb4_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_realshellsort_bb4_in/6])) 

  * LOOPS eval_realshellsort_bb4_in(G,H,I,J,K,L) -> eval_realshellsort_bb4_in(M,N,O,P,Q,R)
     - [I+R=L,G=M,H=N,I=O,J=P,K=Q,L>=I]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_realshellsort_bb4_in/6]))

  * Invariants eval_realshellsort_bb4_in(A,B,C,D,E,F) -> eval_realshellsort_bb4_in(G,H,I,J,K,L)

     entry  : [A>=F+1,D=F]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,A>=F+1,D=F]
     rec    : [D>=C,L>=0,A>=D+1,A=G,B=H,C=I,D=J,E=K,D=F]
     inv    : [A>=D+1,A=G,B=H,C=I,D=J,E=K,D=F]


