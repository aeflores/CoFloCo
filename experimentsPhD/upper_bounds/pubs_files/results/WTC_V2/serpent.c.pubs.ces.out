This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_serpent_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS eval_serpent_start(B) -> eval_serpent_start(C)

  * Ranking function: N/A

  * Invariants eval_serpent_start(A) -> eval_serpent_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_serpent_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS eval_serpent_bb0_in(B) -> eval_serpent_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_serpent_bb0_in(A) -> eval_serpent_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_serpent_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS eval_serpent_0(B) -> eval_serpent_0(C)

  * Ranking function: N/A

  * Invariants eval_serpent_0(A) -> eval_serpent_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_serpent_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS eval_serpent_1(B) -> eval_serpent_1(C)

  * Ranking function: N/A

  * Invariants eval_serpent_1(A) -> eval_serpent_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_serpent__critedge1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_serpent__critedge1_in(C,D) -> loop_cont_eval_serpent__critedge1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_serpent__critedge1_in(A,B) -> loop_cont_eval_serpent__critedge1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_serpent_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_serpent_bb7_in -> eval_serpent_bb7_in

  * Ranking function: N/A

  * Invariants eval_serpent_bb7_in -> eval_serpent_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_serpent__critedge1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_serpent__critedge1_in/3])) 

  * LOOPS eval_serpent__critedge1_in(D,E,F) -> eval_serpent__critedge1_in(G,H,I)
     - [F>=0,F=I+1,D=G]
     - [F>=0,F=I+1,D=G]
     - [F>=0,F=I+1,D=G]
     - [F>=0,F=I+1,D=G]

  * Ranking function: nat(F+1)

  * Invariants eval_serpent__critedge1_in(A,B,C) -> eval_serpent__critedge1_in(D,E,F)

     entry  : [A>=1,A=C,A=B]
     non-rec: [A=D,B=E,C=F,A>=1,A=C,A=B]
     rec    : [A=D,A=C,A=B,F+1>=0,A>=1,A>=F+1]
     inv    : [A>=1,F+1>=0,A>=F,A=D,A=B,A=C]

CRS eval_serpent_bb4_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: nat(A-F+1) 

  * LOOPS eval_serpent_bb4_in(G,H,I,J,K,L) -> eval_serpent_bb4_in(M,N,O,P,Q,R)
     - [L+1=R,G=M,H=N,I=O,J=P,K=Q,G+1>=R]

  * Ranking function: nat(G-L+1)

  * Invariants eval_serpent_bb4_in(A,B,C,D,E,F) -> eval_serpent_bb4_in(G,H,I,J,K,L)

     entry  : [A>=C,C>=0,A>=1,B>=F,C=E+1,D=F]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,A>=C,C>=0,A>=1,B>=F,C=E+1,D=F]
     rec    : [C=K+1,D=J,C=I,B=H,A=G,D=F,C=E+1,A>=1,B>=D,A+1>=L,A>=C,L>=D+1,C>=0]
     inv    : [A>=1,C>=0,L>=D,A>=C,B>=D,D=F,A=G,B=H,C=I,D=J,C=K+1,C=E+1]

CRS eval_serpent_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(D+1) 

  * LOOPS eval_serpent_bb1_in(E,F,G,H) -> eval_serpent_bb1_in(I,J,K,L)
     - [H=L+1,E=I,F=J,G=K,L+1>=0]

  * Ranking function: nat(H+1)

  * Invariants eval_serpent_bb1_in(A,B,C,D) -> eval_serpent_bb1_in(E,F,G,H)

     entry  : [A>=1,A>=C,C>=0,B=D]
     non-rec: [A=E,B=F,C=G,D=H,A>=1,A>=C,C>=0,B=D]
     rec    : [C=G,B=F,A=E,B=D,A>=1,H+1>=0,A>=C,B>=H+1,C>=0]
     inv    : [C>=0,B>=H,A>=C,A>=1,A=E,B=F,C=G,B=D]


