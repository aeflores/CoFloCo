This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_speedFails4_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_start(C,D) -> eval_speedFails4_start(E,F)

  * Ranking function: N/A

  * Invariants eval_speedFails4_start(A,B) -> eval_speedFails4_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_speedFails4_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_bb0_in(C,D) -> eval_speedFails4_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_speedFails4_bb0_in(A,B) -> eval_speedFails4_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_speedFails4_1(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_1(D,E,F) -> eval_speedFails4_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_speedFails4_1(A,B,C) -> eval_speedFails4_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_speedFails4_2(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_2(D,E,F) -> eval_speedFails4_2(G,H,I)

  * Ranking function: N/A

  * Invariants eval_speedFails4_2(A,B,C) -> eval_speedFails4_2(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_speedFails4_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_3(D,E,F) -> eval_speedFails4_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_speedFails4_3(A,B,C) -> eval_speedFails4_3(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_speedFails4_4(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_4(D,E,F) -> eval_speedFails4_4(G,H,I)

  * Ranking function: N/A

  * Invariants eval_speedFails4_4(A,B,C) -> eval_speedFails4_4(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_speedFails4_5(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_5(E,F,G,H) -> eval_speedFails4_5(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedFails4_5(A,B,C,D) -> eval_speedFails4_5(E,F,G,H)

     entry  : [1>=D,D+1>=0]
     non-rec: [A=E,B=F,C=G,D=H,1>=D,D+1>=0]
     rec    : [0=1]
     inv    : [D+1>=0,1>=D,A=E,B=F,C=G,D=H]

CRS eval_speedFails4_6(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_6(E,F,G,H) -> eval_speedFails4_6(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedFails4_6(A,B,C,D) -> eval_speedFails4_6(E,F,G,H)

     entry  : [1>=D,D+1>=0]
     non-rec: [A=E,B=F,C=G,D=H,1>=D,D+1>=0]
     rec    : [0=1]
     inv    : [D+1>=0,1>=D,A=E,B=F,C=G,D=H]

CRS eval_speedFails4_7(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_7(E,F,G,H) -> eval_speedFails4_7(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedFails4_7(A,B,C,D) -> eval_speedFails4_7(E,F,G,H)

     entry  : [1>=D,D+1>=0]
     non-rec: [A=E,B=F,C=G,D=H,1>=D,D+1>=0]
     rec    : [0=1]
     inv    : [D+1>=0,1>=D,A=E,B=F,C=G,D=H]

CRS loop_cont_eval_speedFails4_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_speedFails4_bb1_in(C,D) -> loop_cont_eval_speedFails4_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_speedFails4_bb1_in(A,B) -> loop_cont_eval_speedFails4_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_speedFails4_bb3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_speedFails4_bb3_in -> eval_speedFails4_bb3_in

  * Ranking function: N/A

  * Invariants eval_speedFails4_bb3_in -> eval_speedFails4_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_speedFails4_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_speedFails4_bb1_in/4])) 

  * LOOPS eval_speedFails4_bb1_in(E,F,G,H) -> eval_speedFails4_bb1_in(I,J,K,L)
     - [G+H=L,E=I,F=J,G=K,E+G>=L,J>=1]
     - [G+L=H,E=I,F=J,G=K,E>=H,0>=J]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_speedFails4_bb1_in/4]))

  * Invariants eval_speedFails4_bb1_in(A,B,C,D) -> eval_speedFails4_bb1_in(E,F,G,H)

     entry  : [1>=C,C+1>=0]
     non-rec: [A=E,B=F,C=G,D=H,1>=C,C+1>=0]
     rec    : [C=G,B=F,A=E,A>=D,1>=C,A+1>=H,C+1>=0]
     inv    : [C+1>=0,1>=C,B=F,C=G,A=E]


