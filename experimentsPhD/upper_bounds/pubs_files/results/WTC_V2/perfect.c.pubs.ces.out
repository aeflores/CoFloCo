This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+4*nat(A-1)+2*nat(A-2)+2*nat(A)*nat(A-1)+nat(A-1)*nat(A-2) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_perfect_start(A)

  * Non Asymptotic Upper Bound: 1+4*nat(A-1)+2*nat(A-2)+2*nat(A)*nat(A-1)+nat(A-1)*nat(A-2) 

  * LOOPS eval_perfect_start(B) -> eval_perfect_start(C)

  * Ranking function: N/A

  * Invariants eval_perfect_start(A) -> eval_perfect_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_perfect_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+4*nat(A-1)+2*nat(A-2)+2*nat(A)*nat(A-1)+nat(A-1)*nat(A-2) 

  * LOOPS eval_perfect_bb0_in(B) -> eval_perfect_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_perfect_bb0_in(A) -> eval_perfect_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_perfect_0(A)

  * Non Asymptotic Upper Bound: 1+4*nat(A-1)+2*nat(A-2)+2*nat(A)*nat(A-1)+nat(A-1)*nat(A-2) 

  * LOOPS eval_perfect_0(B) -> eval_perfect_0(C)

  * Ranking function: N/A

  * Invariants eval_perfect_0(A) -> eval_perfect_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_perfect_1(A)

  * Non Asymptotic Upper Bound: 1+4*nat(A-1)+2*nat(A-2)+2*nat(A)*nat(A-1)+nat(A-1)*nat(A-2) 

  * LOOPS eval_perfect_1(B) -> eval_perfect_1(C)

  * Ranking function: N/A

  * Invariants eval_perfect_1(A) -> eval_perfect_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_perfect_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_perfect_bb1_in(D,E,F) -> loop_cont_eval_perfect_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_perfect_bb1_in(A,B,C) -> loop_cont_eval_perfect_bb1_in(D,E,F)

     entry  : [A=3]
     non-rec: [A=D,B=E,C=F,A=3]
     rec    : [0=1]
     inv    : [A=3,D=3,B=E,C=F]

CRS eval_perfect_bb5_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_perfect_bb5_in(B) -> eval_perfect_bb5_in(C)

  * Ranking function: N/A

  * Invariants eval_perfect_bb5_in(A) -> eval_perfect_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_perfect_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_perfect_bb6_in -> eval_perfect_bb6_in

  * Ranking function: N/A

  * Invariants eval_perfect_bb6_in -> eval_perfect_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_perfect_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 4*nat(B-1)+2*nat(B-2)+2*nat(A)*nat(B-1)+nat(A-1)*nat(B-2) 

  * LOOPS eval_perfect_bb1_in(D,E,F) -> eval_perfect_bb1_in(G,H,I)
     - [E>=2,G>=0,E=H+1,D=G,E+I=F+1]
     - [H>=1,E=H+1,D=G,F=I]
     - [E>=3,D>=1,E=H+1,D=G,F=I]

  * Ranking function: nat(E-1)

  * Invariants eval_perfect_bb1_in(A,B,C) -> eval_perfect_bb1_in(D,E,F)

     entry  : [A>=2,A=C,A=B]
     non-rec: [A=D,B=E,C=F,A>=2,A=C,A=B]
     rec    : [A=D,A=C,A=B,E>=1,A>=F,A>=E+1]
     inv    : [A>=2,E>=1,A>=E,A>=F,A=D,A=C,A=B]

CRS eval_perfect_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: nat(-D+E+1) 

  * LOOPS eval_perfect_bb2_in(F,G,H,I,J) -> eval_perfect_bb2_in(K,L,M,N,O)
     - [I+O=J,F=K,G=L,H=M,I=N,J>=I]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_perfect_bb2_in/5]))

  * Invariants eval_perfect_bb2_in(A,B,C,D,E) -> eval_perfect_bb2_in(F,G,H,I,J)

     entry  : [A>=C,A>=D+1,D>=1,A=E,B=D+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=C,A>=D+1,D>=1,A=E,B=D+1]
     rec    : [B=I+1,C=H,B=G,A=F,A=E,B=D+1,A>=C,J>=0,B>=2,A>=B,A+1>=B+J]
     inv    : [J>=0,A>=J,A>=B,B>=2,A>=C,A=E,A=F,B=G,C=H,B=I+1,B=D+1]


