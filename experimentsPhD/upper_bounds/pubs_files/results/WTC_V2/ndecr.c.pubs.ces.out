This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A-2) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_start(A)

  * Non Asymptotic Upper Bound: 1+nat(A-2) 

  * LOOPS eval_ndecr_start(B) -> eval_ndecr_start(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_start(A) -> eval_ndecr_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A-2) 

  * LOOPS eval_ndecr_bb0_in(B) -> eval_ndecr_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_bb0_in(A) -> eval_ndecr_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_0(A)

  * Non Asymptotic Upper Bound: 1+nat(A-2) 

  * LOOPS eval_ndecr_0(B) -> eval_ndecr_0(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_0(A) -> eval_ndecr_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_1(A)

  * Non Asymptotic Upper Bound: 1+nat(A-2) 

  * LOOPS eval_ndecr_1(B) -> eval_ndecr_1(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_1(A) -> eval_ndecr_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_2(A)

  * Non Asymptotic Upper Bound: 1+nat(A-1) 

  * LOOPS eval_ndecr_2(B) -> eval_ndecr_2(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_2(A) -> eval_ndecr_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_3(A)

  * Non Asymptotic Upper Bound: 1+nat(A-1) 

  * LOOPS eval_ndecr_3(B) -> eval_ndecr_3(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_3(A) -> eval_ndecr_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ndecr_4(A)

  * Non Asymptotic Upper Bound: 1+nat(A-1) 

  * LOOPS eval_ndecr_4(B) -> eval_ndecr_4(C)

  * Ranking function: N/A

  * Invariants eval_ndecr_4(A) -> eval_ndecr_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_ndecr_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ndecr_bb1_in(C,D) -> loop_cont_eval_ndecr_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ndecr_bb1_in(A,B) -> loop_cont_eval_ndecr_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_ndecr_bb3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ndecr_bb3_in -> eval_ndecr_bb3_in

  * Ranking function: N/A

  * Invariants eval_ndecr_bb3_in -> eval_ndecr_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ndecr_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A-1) 

  * LOOPS eval_ndecr_bb1_in(B) -> eval_ndecr_bb1_in(C)
     - [B=C+1,B>=2]

  * Ranking function: nat(B-1)

  * Invariants eval_ndecr_bb1_in(A) -> eval_ndecr_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=1,A>=B+1]
     inv    : [A>=B]


