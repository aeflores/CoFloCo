This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 82 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_easy1_start

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_start -> eval_easy1_start

  * Ranking function: N/A

  * Invariants eval_easy1_start -> eval_easy1_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_easy1_bb0_in

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_bb0_in -> eval_easy1_bb0_in

  * Ranking function: N/A

  * Invariants eval_easy1_bb0_in -> eval_easy1_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_easy1_1(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_1(B) -> eval_easy1_1(C)

  * Ranking function: N/A

  * Invariants eval_easy1_1(A) -> eval_easy1_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_easy1_2(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_2(B) -> eval_easy1_2(C)

  * Ranking function: N/A

  * Invariants eval_easy1_2(A) -> eval_easy1_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_easy1_3(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_3(B) -> eval_easy1_3(C)

  * Ranking function: N/A

  * Invariants eval_easy1_3(A) -> eval_easy1_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_easy1_4(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_4(B) -> eval_easy1_4(C)

  * Ranking function: N/A

  * Invariants eval_easy1_4(A) -> eval_easy1_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_easy1_5(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_5(B) -> eval_easy1_5(C)

  * Ranking function: N/A

  * Invariants eval_easy1_5(A) -> eval_easy1_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_easy1_6(A)

  * Non Asymptotic Upper Bound: 82 

  * LOOPS eval_easy1_6(B) -> eval_easy1_6(C)

  * Ranking function: N/A

  * Invariants eval_easy1_6(A) -> eval_easy1_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_easy1_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_easy1_bb1_in(C,D) -> loop_cont_eval_easy1_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_easy1_bb1_in(A,B) -> loop_cont_eval_easy1_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_easy1_bb3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_easy1_bb3_in -> eval_easy1_bb3_in

  * Ranking function: N/A

  * Invariants eval_easy1_bb3_in -> eval_easy1_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_easy1_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+40)+nat(-B+41) 

  * LOOPS eval_easy1_bb1_in(C,D) -> eval_easy1_bb1_in(E,F)
     - [D+1=F,C=0,E=0,39>=D]
     - [D+2=F,C=E,41>=F,0>=C+1]
     - [C=E,D+2=F,C>=1,39>=D]

  * Ranking function: nat(-D+40)

  * Invariants eval_easy1_bb1_in(A,B) -> eval_easy1_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]


