This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_start(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_start(E,F,G,H) -> eval_speedNestedMultiple_start(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_start(A,B,C,D) -> eval_speedNestedMultiple_start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_bb0_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_bb0_in(E,F,G,H) -> eval_speedNestedMultiple_bb0_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_bb0_in(A,B,C,D) -> eval_speedNestedMultiple_bb0_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_0(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_0(E,F,G,H) -> eval_speedNestedMultiple_0(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_0(A,B,C,D) -> eval_speedNestedMultiple_0(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_1(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_1(E,F,G,H) -> eval_speedNestedMultiple_1(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_1(A,B,C,D) -> eval_speedNestedMultiple_1(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_2(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_2(E,F,G,H) -> eval_speedNestedMultiple_2(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_2(A,B,C,D) -> eval_speedNestedMultiple_2(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_3(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_3(E,F,G,H) -> eval_speedNestedMultiple_3(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_3(A,B,C,D) -> eval_speedNestedMultiple_3(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_4(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_4(E,F,G,H) -> eval_speedNestedMultiple_4(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_4(A,B,C,D) -> eval_speedNestedMultiple_4(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_speedNestedMultiple_5(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+4*nat(-A+B)+2*nat(-A+B)*nat(-C+D) 

  * LOOPS eval_speedNestedMultiple_5(E,F,G,H) -> eval_speedNestedMultiple_5(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_5(A,B,C,D) -> eval_speedNestedMultiple_5(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_speedNestedMultiple_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_speedNestedMultiple_bb1_in(C,D) -> loop_cont_eval_speedNestedMultiple_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_speedNestedMultiple_bb1_in(A,B) -> loop_cont_eval_speedNestedMultiple_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_speedNestedMultiple_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_speedNestedMultiple_bb5_in -> eval_speedNestedMultiple_bb5_in

  * Ranking function: N/A

  * Invariants eval_speedNestedMultiple_bb5_in -> eval_speedNestedMultiple_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_speedNestedMultiple_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 4*nat(A-D)+2*nat(A-D)*nat(B-C) 

  * LOOPS eval_speedNestedMultiple_bb1_in(E,F,G,H) -> eval_speedNestedMultiple_bb1_in(I,J,K,L)
     - [K>=G,E>=L,E=I,F=J,H+1=L]
     - [K>=G,E>=L,E=I,F=J,H+1=L]

  * Ranking function: nat(E-H)

  * Invariants eval_speedNestedMultiple_bb1_in(A,B,C,D) -> eval_speedNestedMultiple_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [B=F,A=E,G>=C,A>=H,H>=D+1]
     inv    : [H>=D,G>=C,A=E,B=F]

CRS eval_speedNestedMultiple_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: nat(B-E) 

  * LOOPS eval_speedNestedMultiple_bb2_in(F,G,H,I,J) -> eval_speedNestedMultiple_bb2_in(K,L,M,N,O)
     - [J+1=O,F=K,G=L,H=M,I=N,G>=J+1]

  * Ranking function: nat(G-J)

  * Invariants eval_speedNestedMultiple_bb2_in(A,B,C,D,E) -> eval_speedNestedMultiple_bb2_in(F,G,H,I,J)

     entry  : [A>=D+1,C=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=D+1,C=E]
     rec    : [D=I,C=H,B=G,A=F,C=E,A>=D+1,J>=C+1,B>=J]
     inv    : [J>=C,A>=D+1,A=F,B=G,C=H,D=I,C=E]


