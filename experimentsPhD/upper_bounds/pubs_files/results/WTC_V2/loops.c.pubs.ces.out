This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_loops_start(A)

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS eval_loops_start(B) -> eval_loops_start(C)

  * Ranking function: N/A

  * Invariants eval_loops_start(A) -> eval_loops_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_loops_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS eval_loops_bb0_in(B) -> eval_loops_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_loops_bb0_in(A) -> eval_loops_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_loops_0(A)

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS eval_loops_0(B) -> eval_loops_0(C)

  * Ranking function: N/A

  * Invariants eval_loops_0(A) -> eval_loops_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_loops_1(A)

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS eval_loops_1(B) -> eval_loops_1(C)

  * Ranking function: N/A

  * Invariants eval_loops_1(A) -> eval_loops_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_loops_2(A)

  * Non Asymptotic Upper Bound: 1+nat(A+1)+2*nat(A-1)+pow(nat(1*A+ -1),2) 

  * LOOPS eval_loops_2(B) -> eval_loops_2(C)

  * Ranking function: N/A

  * Invariants eval_loops_2(A) -> eval_loops_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_loops_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_loops_bb1_in(C,D) -> loop_cont_eval_loops_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_loops_bb1_in(A,B) -> loop_cont_eval_loops_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_loops_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_loops_bb6_in -> eval_loops_bb6_in

  * Ranking function: N/A

  * Invariants eval_loops_bb6_in -> eval_loops_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_loops_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A+1)+2*nat(A-1)+pow(nat(A-1),2) 

  * LOOPS eval_loops_bb1_in(B) -> eval_loops_bb1_in(C)
     - [B>=2,B=C+1]
     - [B=C+1,C+1>=0,0>=C]

  * Ranking function: nat(B+1)

  * Invariants eval_loops_bb1_in(A) -> eval_loops_bb1_in(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B+1>=0,A>=B+1]
     inv    : [B+1>=0,A>=0,A>=B]

CRS eval_loops_bb3_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_loops_bb3_in(C,D) -> eval_loops_bb3_in(E,F)
     - [2*D=F,C=E,C>=D+1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_loops_bb3_in/2]))

  * Invariants eval_loops_bb3_in(A,B) -> eval_loops_bb3_in(C,D)

     entry  : [A>=2,B=1]
     non-rec: [A=C,B=D,A>=2,B=1]
     rec    : [A=C,B=1,2*A>=D+2,D>=2]
     inv    : [A>=2,2*A>=D+2,D>=1,A=C,B=1]


