This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_start(C,D) -> eval_ex3_start(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_start(A,B) -> eval_ex3_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_bb0_in(C,D) -> eval_ex3_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_bb0_in(A,B) -> eval_ex3_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_0(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_0(C,D) -> eval_ex3_0(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_0(A,B) -> eval_ex3_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_1(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_1(C,D) -> eval_ex3_1(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_1(A,B) -> eval_ex3_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_2(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_2(C,D) -> eval_ex3_2(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_2(A,B) -> eval_ex3_2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_3(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_3(C,D) -> eval_ex3_3(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_3(A,B) -> eval_ex3_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ex3_4(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_4(C,D) -> eval_ex3_4(E,F)

  * Ranking function: N/A

  * Invariants eval_ex3_4(A,B) -> eval_ex3_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_ex3_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ex3_bb1_in(C,D) -> loop_cont_eval_ex3_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ex3_bb1_in(A,B) -> loop_cont_eval_ex3_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_ex3_bb3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ex3_bb3_in -> eval_ex3_bb3_in

  * Ranking function: N/A

  * Invariants eval_ex3_bb3_in -> eval_ex3_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ex3_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_ex3_bb1_in/2])) 

  * LOOPS eval_ex3_bb1_in(C,D) -> eval_ex3_bb1_in(E,F)
     - [D+1=F,C=E,F>=2,255>=F,0>=C+1]
     - [D+1=F,C=E,F>=2,255>=F,C>=1]
     - [E=0,C=0,D=F+1,D>=1,254>=D]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_ex3_bb1_in/2]))

  * Invariants eval_ex3_bb1_in(A,B) -> eval_ex3_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,254>=B,D>=0,255>=D,B>=1]
     inv    : [D+254>=B,B+254>=D,A=C]


