This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_start(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_start(B) -> eval_xnu_start(C)

  * Ranking function: N/A

  * Invariants eval_xnu_start(A) -> eval_xnu_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_bb0_in(B) -> eval_xnu_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_xnu_bb0_in(A) -> eval_xnu_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_0(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_0(B) -> eval_xnu_0(C)

  * Ranking function: N/A

  * Invariants eval_xnu_0(A) -> eval_xnu_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_1(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_1(B) -> eval_xnu_1(C)

  * Ranking function: N/A

  * Invariants eval_xnu_1(A) -> eval_xnu_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_2(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_2(B) -> eval_xnu_2(C)

  * Ranking function: N/A

  * Invariants eval_xnu_2(A) -> eval_xnu_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_3(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_3(B) -> eval_xnu_3(C)

  * Ranking function: N/A

  * Invariants eval_xnu_3(A) -> eval_xnu_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_4(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_4(B) -> eval_xnu_4(C)

  * Ranking function: N/A

  * Invariants eval_xnu_4(A) -> eval_xnu_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_5(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_5(B) -> eval_xnu_5(C)

  * Ranking function: N/A

  * Invariants eval_xnu_5(A) -> eval_xnu_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_6(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_6(B) -> eval_xnu_6(C)

  * Ranking function: N/A

  * Invariants eval_xnu_6(A) -> eval_xnu_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_7(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_7(B) -> eval_xnu_7(C)

  * Ranking function: N/A

  * Invariants eval_xnu_7(A) -> eval_xnu_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_xnu_8(A)

  * Non Asymptotic Upper Bound: 1+nat(A)+nat(A)+5*nat(A)+nat(A-1) 

  * LOOPS eval_xnu_8(B) -> eval_xnu_8(C)

  * Ranking function: N/A

  * Invariants eval_xnu_8(A) -> eval_xnu_8(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_xnu_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_xnu_bb1_in(C,D) -> loop_cont_eval_xnu_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_xnu_bb1_in(A,B) -> loop_cont_eval_xnu_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_xnu_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_xnu_bb5_in -> eval_xnu_bb5_in

  * Ranking function: N/A

  * Invariants eval_xnu_bb5_in -> eval_xnu_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_xnu_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(A-B)+nat(A-C)+5*nat(A-D)+nat(A-D-1) 

  * LOOPS eval_xnu_bb1_in(E,F,G,H) -> eval_xnu_bb1_in(I,J,K,L)
     - [E>=J,J=K,F+1=J,E=I,J=L]
     - [F+1=K,E=I,H=L,F+1=J,E>=F+1]
     - [E>=J,J=K,F+1=J,E=I,J=L]
     - [G=K,E=I,H=L,F+1=J,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_xnu_bb1_in(A,B,C,D) -> eval_xnu_bb1_in(E,F,G,H)

     entry  : [B=0,D=0,C=0]
     non-rec: [A=E,B=F,C=G,D=H,B=0,D=0,C=0]
     rec    : [A=E,D=0,C=0,B=0,A>=F,F>=G,G>=H,H>=0,F>=1]
     inv    : [H>=0,G>=H,F>=G,A=E,B=0,C=0,D=0]

CRS eval_xnu_bb3_in(A,B,C,D,E,F,G,H,I)

  * Non Asymptotic Upper Bound: nat(B-E+G-I+1) 

  * LOOPS eval_xnu_bb3_in(J,K,L,M,N,O,P,Q,R) -> eval_xnu_bb3_in(S,T,U,V,W,X,Y,Z,A1)
     - [R+1=A1,J=S,K=T,L=U,M=V,N=W,O=X,P=Y,Q=Z,P>=R+1]

  * Ranking function: nat(P-R)

  * Invariants eval_xnu_bb3_in(A,B,C,D,E,F,G,H,I) -> eval_xnu_bb3_in(J,K,L,M,N,O,P,Q,R)

     entry  : [B+1>=G,G>=C,B>=C,C>=D,H>=1,D>=0,A>=B+1,B+1=E,D=I]
     non-rec: [A=J,B=K,C=L,D=M,E=N,F=O,G=P,H=Q,I=R,B+1>=G,G>=C,B>=C,C>=D,H>=1,D>=0,A>=B+1,B+1=E,D=I]
     rec    : [H=Q,G=P,F=O,B+1=N,D=M,C=L,B=K,A=J,D=I,B+1=E,A>=B+1,G>=R,D>=0,H>=1,B>=C,G>=C,R>=D+1,C>=D,B+1>=G]
     inv    : [B+1>=G,R>=D,C>=D,G>=R,G>=C,B>=C,D>=0,H>=1,A>=B+1,D=I,A=J,B=K,C=L,D=M,B+1=N,F=O,G=P,H=Q,B+1=E]


