Warning: Ignored call to eval_abc_stop/1 in equation eval_abc_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_abc_bb1_in/3,eval_abc_bb2_in/3]
1. non_recursive  : [eval_abc_bb3_in/1]
2. non_recursive  : [loop_cont_eval_abc_bb1_in/2]
3. non_recursive  : [eval_abc_4/3]
4. non_recursive  : [eval_abc_3/3]
5. non_recursive  : [eval_abc_2/3]
6. non_recursive  : [eval_abc_1/3]
7. non_recursive  : [eval_abc_0/3]
8. non_recursive  : [eval_abc_bb0_in/3]
9. non_recursive  : [eval_abc_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_abc_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_abc_4/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_abc_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_abc_bb1_in/3 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations eval_abc_bb1_in/3 
* CE 5: eval_abc_bb1_in(V_b,V_i_0,B) = 0
     [V_i_0>=V_b+1,B=2] 
* CE 6: eval_abc_bb1_in(V_b,V_i_0,B) = 1+ eval_abc_bb1_in(V_b,C,D)
     [V_b>=V_i_0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_abc_bb1_in/3 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

#### Loops of eval_abc_bb1_in/3 
* Loop 5: eval_abc_bb1_in(V_b,V_i_0,B)->  eval_abc_bb1_in(V_b,V_i_0',B')
                  [V_b>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 6: eval_abc_bb1_in(V_b,V_i_0,B) [V_i_0>=V_b+1,B=2] 

### Ranking functions of CR eval_abc_bb1_in(V_b,V_i_0,B) 
* RF of phase [5]: [V_b-V_i_0+1]

#### Partial ranking functions of CR eval_abc_bb1_in(V_b,V_i_0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V_b-V_i_0+1


### Resulting Chains:eval_abc_bb1_in(V_b,V_i_0,B) 
* [[5],6]
* [6]


### Specialization of cost equations eval_abc_4/3 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations eval_abc_4/3 
* CE 7: eval_abc_4(V_a,V_b,B) = 1+ eval_abc_bb1_in(V_b,V_a,C):[[5],6]
     [V_b>=V_a,C=2] 
* CE 8: eval_abc_4(V_a,V_b,B) = 1+ eval_abc_bb1_in(V_b,V_a,C):[6]
     [V_a>=V_b+1,C=2] 

### Cost equations --> "Loop" of eval_abc_4/3 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

#### Loops of eval_abc_4/3 
* Loop 7: eval_abc_4(V_a,V_b,B) [V_a>=V_b+1] 
* Loop 8: eval_abc_4(V_a,V_b,B) [V_b>=V_a] 

### Ranking functions of CR eval_abc_4(V_a,V_b,B) 

#### Partial ranking functions of CR eval_abc_4(V_a,V_b,B) 


### Resulting Chains:eval_abc_4(V_a,V_b,B) 
* [8]
* [7]


### Specialization of cost equations eval_abc_start/3 
* CE 1 is refined into CE [9,10] 


#### Refined cost equations eval_abc_start/3 
* CE 9: eval_abc_start(V_a,V_b,B) = 0+ eval_abc_4(V_a,V_b,B):[8]
     [V_b>=V_a] 
* CE 10: eval_abc_start(V_a,V_b,B) = 0+ eval_abc_4(V_a,V_b,B):[7]
     [V_a>=V_b+1] 

### Cost equations --> "Loop" of eval_abc_start/3 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_abc_start/3 
* Loop 9: eval_abc_start(V_a,V_b,B) [V_a>=V_b+1] 
* Loop 10: eval_abc_start(V_a,V_b,B) [V_b>=V_a] 

### Ranking functions of CR eval_abc_start(V_a,V_b,B) 

#### Partial ranking functions of CR eval_abc_start(V_a,V_b,B) 


### Resulting Chains:eval_abc_start(V_a,V_b,B) 
* [10]
* [9]


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_abc_bb1_in(V_b,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_i_0',B')] 
1
#### Cost of phase [5]:eval_abc_bb1_in(V_b,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_i_0',B')] 
1*it(5)+0
  Such that:it(5) =< V_b-V_i_0+1
it(5) =< V_b-V_i_0-V_b'+V_i_0'

#### Cost of chains of eval_abc_bb1_in(V_b,V_i_0,B):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< V_b-V_i_0+1

  with precondition: [B=2,V_b>=V_i_0] 

* Chain [6]: 0
  with precondition: [B=2,V_i_0>=V_b+1] 


#### Cost of chains of eval_abc_4(V_a,V_b,B):
* Chain [8]: 1*s(1)+1
  Such that:s(1) =< -V_a+V_b+1

  with precondition: [V_b>=V_a] 

* Chain [7]: 1
  with precondition: [V_a>=V_b+1] 


#### Cost of chains of eval_abc_start(V_a,V_b,B):
* Chain [10]: 1*s(2)+1
  Such that:s(2) =< -V_a+V_b+1

  with precondition: [V_b>=V_a] 

* Chain [9]: 1
  with precondition: [V_a>=V_b+1] 


Closed-form bounds of eval_abc_start(V_a,V_b,B): 
-------------------------------------
* Chain [10] with precondition: [V_b>=V_a] 
    - Upper bound: -V_a+V_b+2 
    - Complexity: n 
* Chain [9] with precondition: [V_a>=V_b+1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_abc_start(V_a,V_b,B): nat(-V_a+V_b+1)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 10 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 45 ms.

