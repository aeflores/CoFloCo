Warning: Ignored call to eval_abc_stop/1 in equation eval_abc_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_abc_bb4_in/13,eval_abc_bb5_in/13]
1. recursive  : [eval_abc_16/13,eval_abc_17/13,eval_abc_bb2_in/11,eval_abc_bb3_in/11,eval_abc_bb6_in/12,loop_cont_eval_abc_bb4_in/13]
2. recursive  : [eval_abc_19/7,eval_abc_20/7,eval_abc_bb1_in/5,eval_abc_bb7_in/6,loop_cont_eval_abc_bb2_in/7]
3. non_recursive  : [eval_abc_bb8_in/1]
4. non_recursive  : [loop_cont_eval_abc_bb1_in/2]
5. non_recursive  : [eval_abc_8/5]
6. non_recursive  : [eval_abc_7/5]
7. non_recursive  : [eval_abc_6/5]
8. non_recursive  : [eval_abc_5/5]
9. non_recursive  : [eval_abc_4/5]
10. non_recursive  : [eval_abc_3/5]
11. non_recursive  : [eval_abc_2/5]
12. non_recursive  : [eval_abc_1/5]
13. non_recursive  : [eval_abc_0/5]
14. non_recursive  : [eval_abc_bb0_in/5]
15. non_recursive  : [eval_abc_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_abc_bb4_in/13
1. SCC is partially evaluated into eval_abc_bb2_in/11
2. SCC is partially evaluated into eval_abc_bb1_in/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_abc_8/5
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_abc_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_abc_bb4_in/13 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_abc_bb4_in/13 
* CE 9: eval_abc_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [E+F>=D,F>=D+E+1,C>=E,G=2] 
* CE 10: eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) = 1+ eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,I,J,C,D,E,F,G,H)
     [V_i_0+V_j_0>=V_k_0,V_j_0+V_k_0>=V_i_0,V_d>=V_j_0,V_k_0+1=I,J=2,B=2] 

### Cost equations --> "Loop" of eval_abc_bb4_in/13 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_abc_bb4_in/13 
* Loop 9: eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H)->  eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0',B',C,D,E,F,G,H)
                  [V_i_0+V_j_0>=V_k_0,V_j_0+V_k_0>=V_i_0,V_d>=V_j_0,V_k_0+1=V_k_0',B'=2,B=2] 
* Loop 10: eval_abc_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [E+F>=D,F>=D+E+1,C>=E,G=2] 

### Ranking functions of CR eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* RF of phase [9]: [V_d+V_i_0-V_k_0+1,V_i_0+V_j_0-V_k_0+1]

#### Partial ranking functions of CR eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_d+V_i_0-V_k_0+1
    V_i_0+V_j_0-V_k_0+1


### Resulting Chains:eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) 
* [[9],10]
* [10]


### Specialization of cost equations eval_abc_bb2_in/11 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12,13] 


#### Refined cost equations eval_abc_bb2_in/11 
* CE 11: eval_abc_bb2_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [E>=C+1,F=3] 
* CE 12: eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) = 2+ eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,H,I,V_b,V_c,V_d,V_i_0,V_j_0,J):[[9],10]+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,K,L,C,D,E,F,G)
     [V_d>=V_j_0,V_j_0>=0,V_i_0+V_j_0+1=J,V_i_0=V_j_0+H,V_j_0+1=K,L=3,I=2,B=3] 
* CE 13: eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) = 2+ eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,H,I,V_b,V_c,V_d,V_i_0,V_j_0,J):[10]+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,K,L,C,D,E,F,G)
     [V_d>=V_j_0,0>=2*V_j_0+1,V_i_0=V_j_0+J,V_i_0=V_j_0+H,V_j_0+1=K,L=3,I=2,B=3] 

### Cost equations --> "Loop" of eval_abc_bb2_in/11 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 

#### Loops of eval_abc_bb2_in/11 
* Loop 11: eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G)->  eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0',B',C,D,E,F,G)
                  [V_d>=V_j_0,V_j_0>=0,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 12: eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G)->  eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0',B',C,D,E,F,G)
                  [V_d+1>=V_j_0',1>=2*V_j_0',V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 13: eval_abc_bb2_in(A,B,C,D,E,F,A,B,C,D,E) [E>=C+1,F=3] 

### Ranking functions of CR eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* RF of phase [11]: [V_d-V_j_0+1]
* RF of phase [12]: [V_d-V_j_0+1,-V_j_0+1]

#### Partial ranking functions of CR eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_d-V_j_0+1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_d-V_j_0+1
    -V_j_0+1


### Resulting Chains:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) 
* [[12],[11],13]
* [[12],13]
* [[11],13]
* [13]


### Specialization of cost equations eval_abc_bb1_in/5 
* CE 4 is refined into CE [14] 
* CE 3 is refined into CE [15,16,17,18] 


#### Refined cost equations eval_abc_bb1_in/5 
* CE 14: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) = 0
     [V_i_0>=V_b+1,B=4] 
* CE 15: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[12],[11],13]+ eval_abc_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 16: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[12],13]+ eval_abc_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c,0>=2*V_d+1,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 17: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,D):[[11],13]+ eval_abc_bb1_in(V_b,V_c,V_d,E,F)
     [V_b>=V_i_0,V_d>=V_c,V_c>=0,V_i_0+1=E,V_d+1=D,F=4,C=3,B=4] 
* CE 18: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) = 2+ eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_c,C,V_b,V_c,V_d,V_i_0,V_c):[13]+ eval_abc_bb1_in(V_b,V_c,V_d,D,E)
     [V_b>=V_i_0,V_c>=V_d+1,V_i_0+1=D,E=4,C=3,B=4] 

### Cost equations --> "Loop" of eval_abc_bb1_in/5 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [14] --> Loop 18 

#### Loops of eval_abc_bb1_in/5 
* Loop 14: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_abc_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_c>=V_d+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 15: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_abc_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c,V_c>=0,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 16: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_abc_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c,0>=2*V_d+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 17: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B)->  eval_abc_bb1_in(V_b,V_c,V_d,V_i_0',B')
                  [V_b>=V_i_0,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 18: eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) [V_i_0>=V_b+1,B=4] 

### Ranking functions of CR eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* RF of phase [14]: [V_b-V_i_0+1]
* RF of phase [15]: [V_b-V_i_0+1]
* RF of phase [16]: [V_b-V_i_0+1]
* RF of phase [17]: [V_b-V_i_0+1]

#### Partial ranking functions of CR eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_b-V_i_0+1
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_b-V_i_0+1
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_b-V_i_0+1
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_b-V_i_0+1


### Resulting Chains:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) 
* [[17],18]
* [[16],18]
* [[15],18]
* [[14],18]
* [18]


### Specialization of cost equations eval_abc_8/5 
* CE 2 is refined into CE [19,20,21,22,23] 


#### Refined cost equations eval_abc_8/5 
* CE 19: eval_abc_8(V_a,V_b,V_c,V_d,B) = 1+ eval_abc_bb1_in(V_b,V_c,V_d,V_a,C):[[17],18]
     [V_b>=V_a,V_d>=V_c+1,V_d>=0,0>=2*V_c+1,C=4] 
* CE 20: eval_abc_8(V_a,V_b,V_c,V_d,B) = 1+ eval_abc_bb1_in(V_b,V_c,V_d,V_a,C):[[16],18]
     [V_b>=V_a,V_d>=V_c,0>=2*V_d+1,C=4] 
* CE 21: eval_abc_8(V_a,V_b,V_c,V_d,B) = 1+ eval_abc_bb1_in(V_b,V_c,V_d,V_a,C):[[15],18]
     [V_b>=V_a,V_d>=V_c,V_c>=0,C=4] 
* CE 22: eval_abc_8(V_a,V_b,V_c,V_d,B) = 1+ eval_abc_bb1_in(V_b,V_c,V_d,V_a,C):[[14],18]
     [V_b>=V_a,V_c>=V_d+1,C=4] 
* CE 23: eval_abc_8(V_a,V_b,V_c,V_d,B) = 1+ eval_abc_bb1_in(V_b,V_c,V_d,V_a,C):[18]
     [V_a>=V_b+1,C=4] 

### Cost equations --> "Loop" of eval_abc_8/5 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [19] --> Loop 23 

#### Loops of eval_abc_8/5 
* Loop 19: eval_abc_8(V_a,V_b,V_c,V_d,B) [V_a>=V_b+1] 
* Loop 20: eval_abc_8(V_a,V_b,V_c,V_d,B) [V_c>=V_d+1,V_b>=V_a] 
* Loop 21: eval_abc_8(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,V_c>=0] 
* Loop 22: eval_abc_8(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,0>=2*V_d+1] 
* Loop 23: eval_abc_8(V_a,V_b,V_c,V_d,B) [V_d>=V_c+1,V_b>=V_a,V_d>=0,0>=2*V_c+1] 

### Ranking functions of CR eval_abc_8(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_abc_8(V_a,V_b,V_c,V_d,B) 


### Resulting Chains:eval_abc_8(V_a,V_b,V_c,V_d,B) 
* [23]
* [22]
* [21]
* [20]
* [19]


### Specialization of cost equations eval_abc_start/5 
* CE 1 is refined into CE [24,25,26,27,28] 


#### Refined cost equations eval_abc_start/5 
* CE 24: eval_abc_start(V_a,V_b,V_c,V_d,B) = 0+ eval_abc_8(V_a,V_b,V_c,V_d,B):[23]
     [V_d>=V_c+1,V_b>=V_a,V_d>=0,0>=2*V_c+1] 
* CE 25: eval_abc_start(V_a,V_b,V_c,V_d,B) = 0+ eval_abc_8(V_a,V_b,V_c,V_d,B):[22]
     [V_d>=V_c,V_b>=V_a,0>=2*V_d+1] 
* CE 26: eval_abc_start(V_a,V_b,V_c,V_d,B) = 0+ eval_abc_8(V_a,V_b,V_c,V_d,B):[21]
     [V_d>=V_c,V_b>=V_a,V_c>=0] 
* CE 27: eval_abc_start(V_a,V_b,V_c,V_d,B) = 0+ eval_abc_8(V_a,V_b,V_c,V_d,B):[20]
     [V_c>=V_d+1,V_b>=V_a] 
* CE 28: eval_abc_start(V_a,V_b,V_c,V_d,B) = 0+ eval_abc_8(V_a,V_b,V_c,V_d,B):[19]
     [V_a>=V_b+1] 

### Cost equations --> "Loop" of eval_abc_start/5 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [25] --> Loop 27 
* CEs [24] --> Loop 28 

#### Loops of eval_abc_start/5 
* Loop 24: eval_abc_start(V_a,V_b,V_c,V_d,B) [V_a>=V_b+1] 
* Loop 25: eval_abc_start(V_a,V_b,V_c,V_d,B) [V_c>=V_d+1,V_b>=V_a] 
* Loop 26: eval_abc_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,V_c>=0] 
* Loop 27: eval_abc_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c,V_b>=V_a,0>=2*V_d+1] 
* Loop 28: eval_abc_start(V_a,V_b,V_c,V_d,B) [V_d>=V_c+1,V_b>=V_a,V_d>=0,0>=2*V_c+1] 

### Ranking functions of CR eval_abc_start(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_abc_start(V_a,V_b,V_c,V_d,B) 


### Resulting Chains:eval_abc_start(V_a,V_b,V_c,V_d,B) 
* [28]
* [27]
* [26]
* [25]
* [24]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) -> [eval_abc_bb4_in(V_b',V_c',V_d',V_i_0',V_j_0',V_k_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [9]:eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H) -> [eval_abc_bb4_in(V_b',V_c',V_d',V_i_0',V_j_0',V_k_0',B',C',D',E',F',G',H')] 
1*it(9)+0
  Such that:it(9) =< V_d+V_i_0-V_k_0+1
it(9) =< V_d+V_i_0-V_k_0-V_d'-V_i_0'+V_k_0'
it(9) =< V_i_0+V_j_0-V_k_0+1
it(9) =< V_i_0+V_j_0-V_k_0-V_i_0'-V_j_0'+V_k_0'

#### Cost of chains of eval_abc_bb4_in(V_b,V_c,V_d,V_i_0,V_j_0,V_k_0,B,C,D,E,F,G,H):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_i_0-V_k_0+G+1

  with precondition: [B=2,V_b=C,V_c=D,V_d=E,V_i_0=F,V_j_0=G,V_i_0+V_j_0+1=H,V_d>=V_j_0,V_j_0+V_k_0>=V_i_0,V_i_0+V_j_0>=V_k_0] 

* Chain [10]: 0
  with precondition: [B=2,C=V_b,D=V_c,V_d=E,V_i_0=F,V_j_0=G,V_k_0=H,V_d>=V_j_0,V_k_0>=V_i_0+V_j_0+1,V_j_0+V_k_0>=V_i_0] 


#### Cost of loops [11] 

 * loop 11:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_abc_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
1*s(2)+2
  Such that:s(2) =< 2*V_j_0+1

#### Cost of phase [11]:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_abc_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(11)+1*s(3)+0
  Such that:it(11) =< V_d-V_j_0+1
it(11) =< V_d-V_j_0-V_d'+V_j_0'
aux(1) =< 2*V_d+1
s(3) =< it(11)*aux(1)

#### Cost of loops [12] 

 * loop 12:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_abc_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2
#### Cost of phase [12]:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_abc_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(12)+0
  Such that:it(12) =< V_d-V_j_0+1
it(12) =< V_d-V_j_0-V_d'+V_j_0'
it(12) =< -V_j_0+1
it(12) =< -V_j_0+V_j_0'

#### Cost of phase [12]:eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G) -> [eval_abc_bb2_in(V_b',V_c',V_d',V_i_0',V_j_0',B',C',D',E',F',G')] 
2*it(12)+0
  Such that:it(12) =< V_d-V_j_0+1
it(12) =< V_d-V_j_0-V_d'+V_j_0'
it(12) =< -V_j_0+1
it(12) =< -V_j_0+V_j_0'

#### Cost of chains of eval_abc_bb2_in(V_b,V_c,V_d,V_i_0,V_j_0,B,C,D,E,F,G):
* Chain [[12],[11],13]: 4*it(11)+1*s(3)+0
  Such that:aux(1) =< 2*E+1
aux(2) =< -V_j_0+E+1
it(11) =< aux(2)
s(3) =< it(11)*aux(1)

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,0>=2*V_j_0+1,V_d>=0,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0+1] 

* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< -V_j_0+G

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,0>=2*V_d+1,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0] 

* Chain [[11],13]: 2*it(11)+1*s(3)+0
  Such that:it(11) =< -V_j_0+E+1
aux(1) =< 2*E+1
s(3) =< it(11)*aux(1)

  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_d+1=G,V_j_0>=0,V_j_0>=V_c,V_b>=V_i_0,V_d>=V_j_0] 

* Chain [13]: 0
  with precondition: [B=3,V_b=C,V_c=D,V_d=E,V_i_0=F,V_j_0=G,V_j_0>=V_c,V_j_0>=V_d+1,V_b>=V_i_0] 


#### Cost of loops [17] 

 * loop 17:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
4*s(10)+1*s(11)+2
  Such that:s(8) =< V_d-V_c'+1
s(9) =< 2*V_d+1
s(10) =< s(8)
s(11) =< s(10)*s(9)

#### Cost of phase [17]:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(17)+4*s(12)+1*s(13)+0
  Such that:it(17) =< V_b-V_i_0+1
it(17) =< V_b-V_i_0-V_b'+V_i_0'
aux(3) =< -V_c+V_d+1
s(9) =< 2*V_d+1
s(14) =< it(17)*aux(3)
s(12) =< s(14)
s(13) =< s(12)*s(9)

#### Cost of loops [16] 

 * loop 16:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*s(16)+2
  Such that:s(16) =< -V_c'+V_d'+1

#### Cost of phase [16]:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(16)+2*s(17)+0
  Such that:it(16) =< V_b-V_i_0+1
it(16) =< V_b-V_i_0-V_b'+V_i_0'
aux(4) =< -V_c+V_d+1
s(17) =< it(16)*aux(4)

#### Cost of loops [15] 

 * loop 15:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*s(21)+1*s(23)+2
  Such that:s(21) =< -V_c'+V_d'+1
s(22) =< 2*V_d'+1
s(23) =< s(21)*s(22)

#### Cost of phase [15]:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(15)+2*s(24)+1*s(25)+0
  Such that:it(15) =< V_b-V_i_0+1
it(15) =< V_b-V_i_0-V_b'+V_i_0'
aux(5) =< -V_c+V_d+1
s(22) =< 2*V_d+1
s(24) =< it(15)*aux(5)
s(25) =< s(24)*s(22)

#### Cost of loops [14] 

 * loop 14:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2
#### Cost of phase [14]:eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B) -> [eval_abc_bb1_in(V_b',V_c',V_d',V_i_0',B')] 
2*it(14)+0
  Such that:it(14) =< V_b-V_i_0+1
it(14) =< V_b-V_i_0-V_b'+V_i_0'

#### Cost of chains of eval_abc_bb1_in(V_b,V_c,V_d,V_i_0,B):
* Chain [[17],18]: 2*it(17)+4*s(12)+1*s(13)+0
  Such that:it(17) =< V_b-V_i_0+1
aux(3) =< -V_c+V_d+1
s(9) =< 2*V_d+1
s(14) =< it(17)*aux(3)
s(12) =< s(14)
s(13) =< s(12)*s(9)

  with precondition: [B=4,0>=2*V_c+1,V_d>=0,V_d>=V_c+1,V_b>=V_i_0] 

* Chain [[16],18]: 2*it(16)+2*s(17)+0
  Such that:it(16) =< V_b-V_i_0+1
aux(4) =< -V_c+V_d+1
s(17) =< it(16)*aux(4)

  with precondition: [B=4,0>=2*V_d+1,V_d>=V_c,V_b>=V_i_0] 

* Chain [[15],18]: 2*it(15)+2*s(24)+1*s(25)+0
  Such that:it(15) =< V_b-V_i_0+1
aux(5) =< -V_c+V_d+1
s(22) =< 2*V_d+1
s(24) =< it(15)*aux(5)
s(25) =< s(24)*s(22)

  with precondition: [B=4,V_c>=0,V_d>=V_c,V_b>=V_i_0] 

* Chain [[14],18]: 2*it(14)+0
  Such that:it(14) =< V_b-V_i_0+1

  with precondition: [B=4,V_c>=V_d+1,V_b>=V_i_0] 

* Chain [18]: 0
  with precondition: [B=4,V_i_0>=V_b+1] 


#### Cost of chains of eval_abc_8(V_a,V_b,V_c,V_d,B):
* Chain [23]: 2*s(26)+4*s(30)+1*s(31)+1
  Such that:s(26) =< -V_a+V_b+1
s(27) =< -V_c+V_d+1
s(28) =< 2*V_d+1
s(29) =< s(26)*s(27)
s(30) =< s(29)
s(31) =< s(30)*s(28)

  with precondition: [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1] 

* Chain [22]: 2*s(32)+2*s(34)+1
  Such that:s(32) =< -V_a+V_b+1
s(33) =< -V_c+V_d+1
s(34) =< s(32)*s(33)

  with precondition: [0>=2*V_d+1,V_b>=V_a,V_d>=V_c] 

* Chain [21]: 2*s(35)+2*s(38)+1*s(39)+1
  Such that:s(35) =< -V_a+V_b+1
s(36) =< -V_c+V_d+1
s(37) =< 2*V_d+1
s(38) =< s(35)*s(36)
s(39) =< s(38)*s(37)

  with precondition: [V_c>=0,V_b>=V_a,V_d>=V_c] 

* Chain [20]: 2*s(40)+1
  Such that:s(40) =< -V_a+V_b+1

  with precondition: [V_b>=V_a,V_c>=V_d+1] 

* Chain [19]: 1
  with precondition: [V_a>=V_b+1] 


#### Cost of chains of eval_abc_start(V_a,V_b,V_c,V_d,B):
* Chain [28]: 2*s(41)+4*s(45)+1*s(46)+1
  Such that:s(41) =< -V_a+V_b+1
s(42) =< -V_c+V_d+1
s(43) =< 2*V_d+1
s(44) =< s(41)*s(42)
s(45) =< s(44)
s(46) =< s(45)*s(43)

  with precondition: [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1] 

* Chain [27]: 2*s(47)+2*s(49)+1
  Such that:s(47) =< -V_a+V_b+1
s(48) =< -V_c+V_d+1
s(49) =< s(47)*s(48)

  with precondition: [0>=2*V_d+1,V_b>=V_a,V_d>=V_c] 

* Chain [26]: 2*s(50)+2*s(53)+1*s(54)+1
  Such that:s(50) =< -V_a+V_b+1
s(51) =< -V_c+V_d+1
s(52) =< 2*V_d+1
s(53) =< s(50)*s(51)
s(54) =< s(53)*s(52)

  with precondition: [V_c>=0,V_b>=V_a,V_d>=V_c] 

* Chain [25]: 2*s(55)+1
  Such that:s(55) =< -V_a+V_b+1

  with precondition: [V_b>=V_a,V_c>=V_d+1] 

* Chain [24]: 1
  with precondition: [V_a>=V_b+1] 


Closed-form bounds of eval_abc_start(V_a,V_b,V_c,V_d,B): 
-------------------------------------
* Chain [28] with precondition: [0>=2*V_c+1,V_d>=0,V_b>=V_a,V_d>=V_c+1] 
    - Upper bound: -2*V_a+2*V_b+2+ ((-V_c+V_d+1)* ((-V_a+V_b+1)* (2*V_d+1))+1)+ (-4*V_a+4*V_b+4)* (-V_c+V_d+1) 
    - Complexity: n^3 
* Chain [27] with precondition: [0>=2*V_d+1,V_b>=V_a,V_d>=V_c] 
    - Upper bound: -2*V_a+2*V_b+3+ (-2*V_a+2*V_b+2)* (-V_c+V_d+1) 
    - Complexity: n^2 
* Chain [26] with precondition: [V_c>=0,V_b>=V_a,V_d>=V_c] 
    - Upper bound: -2*V_a+2*V_b+2+ ((-V_c+V_d+1)* ((-V_a+V_b+1)* (2*V_d+1))+1)+ (-2*V_a+2*V_b+2)* (-V_c+V_d+1) 
    - Complexity: n^3 
* Chain [25] with precondition: [V_b>=V_a,V_c>=V_d+1] 
    - Upper bound: -2*V_a+2*V_b+3 
    - Complexity: n 
* Chain [24] with precondition: [V_a>=V_b+1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_abc_start(V_a,V_b,V_c,V_d,B): nat(-V_a+V_b+1)*nat(2*V_d+1)*nat(-V_c+V_d+1)+nat(-V_a+V_b+1)*2*nat(-V_c+V_d+1)+nat(-V_a+V_b+1)*2*nat(-V_c+V_d+1)+nat(-V_a+V_b+1)*2+1 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 96 ms.
   - Backward Invariants 46 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 102 ms.
* Termination proved in 26 ms.
* Upper bounds computed in 212 ms.
   - Equation cost structures 55 ms.
   - Phase cost structures 111 ms.
   - Chain cost structures 64 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 525 ms.

