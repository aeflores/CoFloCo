Warning: Ignored call to eval_start_stop/1 in equation eval_start_9/1 
Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_bb1_in/4,eval_start_bb2_in/4,eval_start_bb3_in/4]
1. non_recursive  : [eval_start_9/1]
2. non_recursive  : [eval_start_8/1]
3. non_recursive  : [eval_start_bb5_in/1]
4. non_recursive  : [eval_start_bb4_in/1]
5. non_recursive  : [loop_cont_eval_start_bb1_in/2]
6. non_recursive  : [eval_start_4/3]
7. non_recursive  : [eval_start_3/3]
8. non_recursive  : [eval_start_2/3]
9. non_recursive  : [eval_start_1/3]
10. non_recursive  : [eval_start_0/3]
11. non_recursive  : [eval_start_bb0_in/3]
12. non_recursive  : [eval_start_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_start_4/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_start_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb1_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


#### Refined cost equations eval_start_bb1_in/4 
* CE 7: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) = 0
     [V_vb_0>=0,V_m>=1,0>=V_va_0,B=2] 
* CE 8: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) = 1+ eval_start_bb1_in(V_m,C,D,E)
     [V_m>=V_vb_0+1,V_vb_0>=0,V_va_0>=1,V_vb_0+1=D,V_va_0=C+1,E=2,B=2] 
* CE 9: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) = 1+ eval_start_bb1_in(V_m,V_va_0,C,D)
     [V_vb_0>=V_m,V_va_0>=1,V_m>=1,D=2,C=0,B=2] 

### Cost equations --> "Loop" of eval_start_bb1_in/4 
* CEs [8] --> Loop 7 
* CEs [9] --> Loop 8 
* CEs [7] --> Loop 9 

#### Loops of eval_start_bb1_in/4 
* Loop 7: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B)->  eval_start_bb1_in(V_m,V_va_0',V_vb_0',B')
                  [V_m>=V_vb_0+1,V_vb_0>=0,V_va_0>=1,V_vb_0+1=V_vb_0',V_va_0=V_va_0'+1,B'=2,B=2] 
* Loop 8: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B)->  eval_start_bb1_in(V_m,V_va_0,V_vb_0',B')
                  [V_vb_0>=V_m,V_va_0>=1,V_m>=1,B'=2,V_vb_0'=0,B=2] 
* Loop 9: eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) [V_vb_0>=0,V_m>=1,0>=V_va_0,B=2] 

### Ranking functions of CR eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) 
* RF of phase [7,8]: [2*V_va_0+V_vb_0-1]

#### Partial ranking functions of CR eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) 
* Partial RF of phase [7,8]:
  - RF of loop [7:1]:
    V_m-V_vb_0 depends on loops [8:1] 
    V_va_0
  - RF of loop [8:1]:
    -V_m+V_vb_0+1 depends on loops [7:1] 
    V_vb_0 depends on loops [7:1] 


### Resulting Chains:eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) 
* [[7,8],9]
* [9]


### Specialization of cost equations eval_start_4/3 
* CE 2 is refined into CE [10,11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations eval_start_4/3 
* CE 10: eval_start_4(V_n,V_m,B) = 1+ eval_start_bb1_in(V_m,V_n,C,D):[[7,8],9]
     [V_n>=1,V_m>=1,D=2,C=0] 
* CE 11: eval_start_4(V_n,V_m,B) = 1+ eval_start_bb1_in(V_m,V_n,C,D):[9]
     [V_m>=1,0>=V_n,D=2,C=0] 
* CE 12: eval_start_4(V_n,V_m,B) = 0
     [0>=V_m] 

### Cost equations --> "Loop" of eval_start_4/3 
* CEs [10] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_start_4/3 
* Loop 10: eval_start_4(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 11: eval_start_4(V_n,V_m,B) [0>=V_m] 
* Loop 12: eval_start_4(V_n,V_m,B) [V_m>=1,0>=V_n] 

### Ranking functions of CR eval_start_4(V_n,V_m,B) 

#### Partial ranking functions of CR eval_start_4(V_n,V_m,B) 


### Resulting Chains:eval_start_4(V_n,V_m,B) 
* [12]
* [11]
* [10]


### Specialization of cost equations eval_start_start/3 
* CE 1 is refined into CE [13,14,15] 


#### Refined cost equations eval_start_start/3 
* CE 13: eval_start_start(V_n,V_m,B) = 0+ eval_start_4(V_n,V_m,B):[12]
     [V_m>=1,0>=V_n] 
* CE 14: eval_start_start(V_n,V_m,B) = 0+ eval_start_4(V_n,V_m,B):[11]
     [0>=V_m] 
* CE 15: eval_start_start(V_n,V_m,B) = 0+ eval_start_4(V_n,V_m,B):[10]
     [V_m>=1,V_n>=1] 

### Cost equations --> "Loop" of eval_start_start/3 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [13] --> Loop 15 

#### Loops of eval_start_start/3 
* Loop 13: eval_start_start(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 14: eval_start_start(V_n,V_m,B) [0>=V_m] 
* Loop 15: eval_start_start(V_n,V_m,B) [V_m>=1,0>=V_n] 

### Ranking functions of CR eval_start_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_start_start(V_n,V_m,B) 


### Resulting Chains:eval_start_start(V_n,V_m,B) 
* [15]
* [14]
* [13]


Computing Bounds
=====================================

#### Cost of loops [7,8] 

 * loop 7:eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) -> [eval_start_bb1_in(V_m',V_va_0',V_vb_0',B')] 
1
 * loop 8:eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) -> [eval_start_bb1_in(V_m',V_va_0',V_vb_0',B')] 
1
#### Cost of phase [7,8]:eval_start_bb1_in(V_m,V_va_0,V_vb_0,B) -> [eval_start_bb1_in(V_m',V_va_0',V_vb_0',B')] 
1*it(7)+1*it(8)+0
  Such that:it(7) =< V_va_0
it(7) =< V_va_0-V_va_0'
aux(10) =< 2*V_va_0+V_vb_0
aux(11) =< 2*V_va_0+V_vb_0-2*V_va_0'-V_vb_0'
it(7) =< aux(10)
it(8) =< aux(10)
it(7) =< aux(11)
it(8) =< aux(11)

#### Cost of chains of eval_start_bb1_in(V_m,V_va_0,V_vb_0,B):
* Chain [[7,8],9]: 1*it(7)+1*it(8)+0
  Such that:it(7) =< V_va_0
aux(14) =< 2*V_va_0+V_vb_0
it(7) =< aux(14)
it(8) =< aux(14)

  with precondition: [B=2,V_m>=1,V_va_0>=1,V_vb_0>=0] 

* Chain [9]: 0
  with precondition: [B=2,0>=V_va_0,V_m>=1,V_vb_0>=0] 


#### Cost of chains of eval_start_4(V_n,V_m,B):
* Chain [12]: 1
  with precondition: [0>=V_n,V_m>=1] 

* Chain [11]: 0
  with precondition: [0>=V_m] 

* Chain [10]: 1*s(1)+1*s(3)+1
  Such that:s(1) =< V_n
s(2) =< 2*V_n
s(1) =< s(2)
s(3) =< s(2)

  with precondition: [V_n>=1,V_m>=1] 


#### Cost of chains of eval_start_start(V_n,V_m,B):
* Chain [15]: 1
  with precondition: [0>=V_n,V_m>=1] 

* Chain [14]: 0
  with precondition: [0>=V_m] 

* Chain [13]: 1*s(4)+1*s(6)+1
  Such that:s(4) =< V_n
s(5) =< 2*V_n
s(4) =< s(5)
s(6) =< s(5)

  with precondition: [V_n>=1,V_m>=1] 


Closed-form bounds of eval_start_start(V_n,V_m,B): 
-------------------------------------
* Chain [15] with precondition: [0>=V_n,V_m>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [13] with precondition: [V_n>=1,V_m>=1] 
    - Upper bound: 3*V_n+1 
    - Complexity: n 

### Maximum cost of eval_start_start(V_n,V_m,B): max([1,nat(V_n)+1+nat(2*V_n)]) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 18 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 22 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 114 ms.

