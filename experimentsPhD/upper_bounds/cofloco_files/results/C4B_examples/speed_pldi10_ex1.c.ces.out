Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_10/12,eval_start_11/12,eval_start_8/11,eval_start_9/12,eval_start_bb2_in/10,eval_start_bb3_in/11,eval_start_bb4_in/12]
1. recursive  : [eval_start_15/7,eval_start_16/7,eval_start_bb1_in/3,eval_start_bb5_in/6,loop_cont_eval_start_bb2_in/7]
2. non_recursive  : [eval_start_bb6_in/1]
3. non_recursive  : [loop_cont_eval_start_bb1_in/2]
4. non_recursive  : [eval_start_5/2]
5. non_recursive  : [eval_start_4/2]
6. non_recursive  : [eval_start_3/2]
7. non_recursive  : [eval_start_2/2]
8. non_recursive  : [eval_start_1/2]
9. non_recursive  : [eval_start_0/2]
10. non_recursive  : [eval_start_bb0_in/2]
11. non_recursive  : [eval_start_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb2_in/10
1. SCC is partially evaluated into eval_start_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_start_5/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_start_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb2_in/10 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_start_bb2_in/10 
* CE 8: eval_start_bb2_in(A,B,C,D,E,A,B,C,F,G) = 0
     [B>=C+1,C>=A,C+1=G,C+1=F,C+1=D,E=2] 
* CE 9: eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) = 1+ eval_start_bb2_in(V_i_0,V__0,H,V__1,I,C,D,E,F,G)
     [V__0>=V__1,V__1>=V_i_0_sink+2,V_i_0_sink>=V_i_0,V_i_0_sink+1=H,I=2,B=2] 
* CE 10: eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) = 1+ eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,H,I,C,D,E,F,G)
     [V__0>=H+1,H>=V_i_0_sink+1,V_i_0_sink>=V_i_0,H+1=V__1,I=2,B=2] 

### Cost equations --> "Loop" of eval_start_bb2_in/10 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

#### Loops of eval_start_bb2_in/10 
* Loop 8: eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G)->  eval_start_bb2_in(V_i_0,V__0,V_i_0_sink',V__1,B',C,D,E,F,G)
                  [V__0>=V__1,V__1>=V_i_0_sink+2,V_i_0_sink>=V_i_0,V_i_0_sink+1=V_i_0_sink',B'=2,B=2] 
* Loop 9: eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G)->  eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1',B',C,D,E,F,G)
                  [V__0>=V__1'+1,V__1'>=V_i_0_sink+1,V_i_0_sink>=V_i_0,V__1'+1=V__1,B'=2,B=2] 
* Loop 10: eval_start_bb2_in(A,B,C,D,E,A,B,C,F,G) [B>=C+1,C>=A,C+1=G,C+1=F,C+1=D,E=2] 

### Ranking functions of CR eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) 
* RF of phase [8,9]: [-V_i_0_sink+V__1-1]

#### Partial ranking functions of CR eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V__0-V_i_0_sink-1
  - RF of loop [8:1,9:1]:
    -V_i_0_sink+V__1-1
  - RF of loop [9:1]:
    -V_i_0+V__1-1


### Resulting Chains:eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) 
* [[8,9],10]
* [10]


### Specialization of cost equations eval_start_bb1_in/3 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13] 


#### Refined cost equations eval_start_bb1_in/3 
* CE 11: eval_start_bb1_in(V_i_0,V__0,B) = 0
     [V_i_0>=V__0,B=3] 
* CE 12: eval_start_bb1_in(V_i_0,V__0,B) = 2+ eval_start_bb2_in(V_i_0,V__0,V_i_0,V__0,C,V_i_0,V__0,D,E,E):[[8,9],10]+ eval_start_bb1_in(F,E,G)
     [V__0>=E,E>=V_i_0+1,V__0>=V_i_0+2,V_i_0+1=F,E=D+1,G=3,C=2,B=3] 
* CE 13: eval_start_bb1_in(V_i_0,V__0,B) = 2+ eval_start_bb2_in(C,V__0,D,V__0,E,F,V__0,G,V__0,V__0):[10]+ eval_start_bb1_in(V__0,V__0,H)
     [V__0=G+1,V__0=F+1,V__0=D+1,V__0=C+1,V__0=V_i_0+1,H=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_start_bb1_in/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 

#### Loops of eval_start_bb1_in/3 
* Loop 11: eval_start_bb1_in(V_i_0,V__0,B)->  eval_start_bb1_in(V_i_0',V__0',B')
                  [V__0>=V__0',V__0'>=V_i_0+1,V__0>=V_i_0+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 12: eval_start_bb1_in(V_i_0,V__0,B)->  eval_start_bb1_in(V__0,V__0,A')
                  [V__0=V_i_0+1,A'=3,B=3] 
* Loop 13: eval_start_bb1_in(V_i_0,V__0,B) [V_i_0>=V__0,B=3] 

### Ranking functions of CR eval_start_bb1_in(V_i_0,V__0,B) 
* RF of phase [11]: [-V_i_0+V__0-1]

#### Partial ranking functions of CR eval_start_bb1_in(V_i_0,V__0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_i_0+V__0-1


### Resulting Chains:eval_start_bb1_in(V_i_0,V__0,B) 
* [[11],13]
* [[11],12,13]
* [13]
* [12,13]


### Specialization of cost equations eval_start_5/2 
* CE 2 is refined into CE [14,15,16,17] 


#### Refined cost equations eval_start_5/2 
* CE 14: eval_start_5(V_n,B) = 1+ eval_start_bb1_in(C,V_n,D):[[11],13]
     [V_n>=2,D=3,C=0] 
* CE 15: eval_start_5(V_n,B) = 1+ eval_start_bb1_in(C,V_n,D):[[11],12,13]
     [V_n>=2,D=3,C=0] 
* CE 16: eval_start_5(V_n,B) = 1+ eval_start_bb1_in(C,V_n,D):[13]
     [0>=V_n,D=3,C=0] 
* CE 17: eval_start_5(V_n,B) = 1+ eval_start_bb1_in(C,D,E):[12,13]
     [E=3,D=1,C=0,V_n=1] 

### Cost equations --> "Loop" of eval_start_5/2 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_start_5/2 
* Loop 14: eval_start_5(V_n,B) [V_n>=2] 
* Loop 15: eval_start_5(V_n,B) [V_n>=2] 
* Loop 16: eval_start_5(V_n,B) [0>=V_n] 
* Loop 17: eval_start_5(V_n,B) [V_n=1] 

### Ranking functions of CR eval_start_5(V_n,B) 

#### Partial ranking functions of CR eval_start_5(V_n,B) 


### Resulting Chains:eval_start_5(V_n,B) 
* [17]
* [16]
* [15]
* [14]


### Specialization of cost equations eval_start_start/2 
* CE 1 is refined into CE [18,19,20,21] 


#### Refined cost equations eval_start_start/2 
* CE 18: eval_start_start(V_n,B) = 0+ eval_start_5(C,B):[17]
     [C=1,V_n=1] 
* CE 19: eval_start_start(V_n,B) = 0+ eval_start_5(V_n,B):[16]
     [0>=V_n] 
* CE 20: eval_start_start(V_n,B) = 0+ eval_start_5(V_n,B):[15]
     [V_n>=2] 
* CE 21: eval_start_start(V_n,B) = 0+ eval_start_5(V_n,B):[14]
     [V_n>=2] 

### Cost equations --> "Loop" of eval_start_start/2 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [18] --> Loop 21 

#### Loops of eval_start_start/2 
* Loop 18: eval_start_start(V_n,B) [V_n>=2] 
* Loop 19: eval_start_start(V_n,B) [V_n>=2] 
* Loop 20: eval_start_start(V_n,B) [0>=V_n] 
* Loop 21: eval_start_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_start_start(V_n,B) 

#### Partial ranking functions of CR eval_start_start(V_n,B) 


### Resulting Chains:eval_start_start(V_n,B) 
* [21]
* [20]
* [19]
* [18]


Computing Bounds
=====================================

#### Cost of loops [8,9] 

 * loop 8:eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_i_0',V__0',V_i_0_sink',V__1',B',C',D',E',F',G')] 
1
 * loop 9:eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_i_0',V__0',V_i_0_sink',V__1',B',C',D',E',F',G')] 
1
#### Cost of phase [8,9]:eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_i_0',V__0',V_i_0_sink',V__1',B',C',D',E',F',G')] 
1*it(8)+1*it(9)+0
  Such that:it(9) =< -V_i_0+V__1
it(9) =< -V_i_0+V__1+V_i_0'-V__1'
it(8) =< V__0-V_i_0_sink
it(8) =< V__0-V_i_0_sink-V__0'+V_i_0_sink'
aux(1) =< -V_i_0_sink+V__1
aux(2) =< -V_i_0_sink+V__1+V_i_0_sink'-V__1'
it(8) =< aux(1)
it(9) =< aux(1)
it(8) =< aux(2)
it(9) =< aux(2)

#### Cost of chains of eval_start_bb2_in(V_i_0,V__0,V_i_0_sink,V__1,B,C,D,E,F,G):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(8) =< -V_i_0_sink+F
it(9) =< V__1-F
aux(3) =< -V_i_0_sink+V__1
it(8) =< aux(3)
it(9) =< aux(3)

  with precondition: [B=2,V_i_0=C,V__0=D,E+1=F,E+1=G,V_i_0_sink>=V_i_0,V__1>=V_i_0_sink+2,E>=V_i_0_sink,V__0>=V__1,V__1>=E+1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0_sink+1=V__1,V_i_0=C,V__0=D,V_i_0_sink=E,V_i_0_sink+1=F,V_i_0_sink+1=G,V_i_0_sink>=V_i_0,V__0>=V_i_0_sink+1] 


#### Cost of loops [11] 

 * loop 11:eval_start_bb1_in(V_i_0,V__0,B) -> [eval_start_bb1_in(V_i_0',V__0',B')] 
1*s(5)+1*s(6)+2
  Such that:s(4) =< -V_i_0+V__0
s(5) =< -V_i_0+V__0'
s(6) =< V__0-V__0'
s(5) =< s(4)
s(6) =< s(4)

#### Cost of phase [11]:eval_start_bb1_in(V_i_0,V__0,B) -> [eval_start_bb1_in(V_i_0',V__0',B')] 
2*it(11)+1*s(7)+1*s(8)+0
  Such that:aux(6) =< -V_i_0+V__0
aux(7) =< -V_i_0+V__0+V_i_0'-V__0'
it(11) =< aux(6)
s(8) =< aux(6)
it(11) =< aux(7)
s(8) =< aux(7)
aux(5) =< aux(6)
s(9) =< it(11)*aux(6)
s(7) =< it(11)*aux(5)
s(7) =< s(9)
s(8) =< s(9)

#### Cost of phase [11]:eval_start_bb1_in(V_i_0,V__0,B) -> [eval_start_bb1_in(V_i_0',V__0',B')] 
2*it(11)+1*s(7)+1*s(8)+0
  Such that:aux(6) =< -V_i_0+V__0
aux(7) =< -V_i_0+V__0+V_i_0'-V__0'
it(11) =< aux(6)
s(8) =< aux(6)
it(11) =< aux(7)
s(8) =< aux(7)
aux(5) =< aux(6)
s(9) =< it(11)*aux(6)
s(7) =< it(11)*aux(5)
s(7) =< s(9)
s(8) =< s(9)

#### Cost of chains of eval_start_bb1_in(V_i_0,V__0,B):
* Chain [[11],13]: 2*it(11)+1*s(7)+1*s(8)+0
  Such that:aux(8) =< -V_i_0+V__0
it(11) =< aux(8)
s(8) =< aux(8)
aux(5) =< aux(8)
s(9) =< it(11)*aux(8)
s(7) =< it(11)*aux(5)
s(7) =< s(9)
s(8) =< s(9)

  with precondition: [B=3,V_i_0>=0,V__0>=V_i_0+2] 

* Chain [[11],12,13]: 2*it(11)+1*s(7)+1*s(8)+2
  Such that:aux(9) =< -V_i_0+V__0
it(11) =< aux(9)
s(8) =< aux(9)
aux(5) =< aux(9)
s(9) =< it(11)*aux(9)
s(7) =< it(11)*aux(5)
s(7) =< s(9)
s(8) =< s(9)

  with precondition: [B=3,V_i_0>=0,V__0>=V_i_0+2] 

* Chain [13]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V__0] 

* Chain [12,13]: 2
  with precondition: [B=3,V__0=V_i_0+1,V__0>=1] 


#### Cost of chains of eval_start_5(V_n,B):
* Chain [17]: 3
  with precondition: [V_n=1] 

* Chain [16]: 1
  with precondition: [0>=V_n] 

* Chain [15]: 2*s(11)+1*s(12)+1*s(15)+1
  Such that:s(10) =< V_n
s(11) =< s(10)
s(12) =< s(10)
s(13) =< s(10)
s(14) =< s(11)*s(10)
s(15) =< s(11)*s(13)
s(15) =< s(14)
s(12) =< s(14)

  with precondition: [V_n>=2] 

* Chain [14]: 2*s(17)+1*s(18)+1*s(21)+3
  Such that:s(16) =< V_n
s(17) =< s(16)
s(18) =< s(16)
s(19) =< s(16)
s(20) =< s(17)*s(16)
s(21) =< s(17)*s(19)
s(21) =< s(20)
s(18) =< s(20)

  with precondition: [V_n>=2] 


#### Cost of chains of eval_start_start(V_n,B):
* Chain [21]: 3
  with precondition: [V_n=1] 

* Chain [20]: 1
  with precondition: [0>=V_n] 

* Chain [19]: 2*s(23)+1*s(24)+1*s(27)+1
  Such that:s(22) =< V_n
s(23) =< s(22)
s(24) =< s(22)
s(25) =< s(22)
s(26) =< s(23)*s(22)
s(27) =< s(23)*s(25)
s(27) =< s(26)
s(24) =< s(26)

  with precondition: [V_n>=2] 

* Chain [18]: 2*s(29)+1*s(30)+1*s(33)+3
  Such that:s(28) =< V_n
s(29) =< s(28)
s(30) =< s(28)
s(31) =< s(28)
s(32) =< s(29)*s(28)
s(33) =< s(29)*s(31)
s(33) =< s(32)
s(30) =< s(32)

  with precondition: [V_n>=2] 


Closed-form bounds of eval_start_start(V_n,B): 
-------------------------------------
* Chain [21] with precondition: [V_n=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [20] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V_n>=2] 
    - Upper bound: 3*V_n+1+V_n*V_n 
    - Complexity: n^2 
* Chain [18] with precondition: [V_n>=2] 
    - Upper bound: 3*V_n+3+V_n*V_n 
    - Complexity: n^2 

### Maximum cost of eval_start_start(V_n,B): nat(V_n)*nat(V_n)+nat(V_n)*3+3 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 30 ms.
* Invariants computed in 40 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 44 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 91 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 48 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 253 ms.

