Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_6/7,eval_start_7/8,eval_start_bb2_in/6,eval_start_bb3_in/7]
1. recursive  : [eval_start_bb1_in/3,loop_cont_eval_start_bb2_in/4]
2. non_recursive  : [eval_start_bb4_in/1]
3. non_recursive  : [loop_cont_eval_start_bb1_in/2]
4. non_recursive  : [eval_start_3/2]
5. non_recursive  : [eval_start_2/2]
6. non_recursive  : [eval_start_1/2]
7. non_recursive  : [eval_start_0/2]
8. non_recursive  : [eval_start_bb0_in/2]
9. non_recursive  : [eval_start_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb2_in/6
1. SCC is partially evaluated into eval_start_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_start_3/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_start_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb2_in/6 
* CE 6 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_start_bb2_in/6 
* CE 8: eval_start_bb2_in(A,B,C,D,A,E) = 0
     [A>=C+2,C>=B,C+1=E,D=2] 
* CE 9: eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) = 0
     [V_x_0_sink>=V_x_0,V_x_0_sink+1=D,V_x_0_sink+1=C,V_x_0_sink+1=V_n,B=2] 
* CE 10: eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) = 1+ eval_start_bb2_in(V_n,V_x_0,E,F,C,D)
     [V_n>=V_x_0_sink+2,V_x_0_sink>=V_x_0,V_x_0_sink+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_start_bb2_in/6 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_start_bb2_in/6 
* Loop 8: eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D)->  eval_start_bb2_in(V_n,V_x_0,V_x_0_sink',B',C,D)
                  [V_n>=V_x_0_sink+2,V_x_0_sink>=V_x_0,V_x_0_sink+1=V_x_0_sink',B'=2,B=2] 
* Loop 9: eval_start_bb2_in(A,B,C,D,A,E) [A>=C+2,C>=B,C+1=E,D=2] 
* Loop 10: eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) [V_x_0_sink>=V_x_0,V_x_0_sink+1=D,V_x_0_sink+1=C,V_x_0_sink+1=V_n,B=2] 

### Ranking functions of CR eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* RF of phase [8]: [V_n-V_x_0_sink-1]

#### Partial ranking functions of CR eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n-V_x_0_sink-1


### Resulting Chains:eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Specialization of cost equations eval_start_bb1_in/3 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_start_bb1_in/3 
* CE 11: eval_start_bb1_in(V_n,V_x_0,B) = 0
     [V_x_0>=V_n,B=3] 
* CE 12: eval_start_bb1_in(V_n,V_x_0,B) = 2+ eval_start_bb2_in(V_n,V_x_0,V_x_0,C,V_n,V_n):[[8],10]+ eval_start_bb1_in(V_n,V_n,D)
     [V_n>=V_x_0+2,D=3,C=2,B=3] 
* CE 13: eval_start_bb1_in(V_n,V_x_0,B) = 2+ eval_start_bb2_in(V_n,V_x_0,V_x_0,C,V_n,D):[[8],9]+ eval_start_bb1_in(V_n,D,E)
     [V_n>=D+1,D>=V_x_0+2,E=3,C=2,B=3] 
* CE 14: eval_start_bb1_in(V_n,V_x_0,B) = 2+ eval_start_bb2_in(V_n,C,D,E,V_n,V_n):[10]+ eval_start_bb1_in(V_n,V_n,F)
     [V_n=D+1,V_n=C+1,V_n=V_x_0+1,F=3,E=2,B=3] 
* CE 15: eval_start_bb1_in(V_n,V_x_0,B) = 2+ eval_start_bb2_in(V_n,C,D,E,V_n,F):[9]+ eval_start_bb1_in(V_n,F,G)
     [V_n>=F+1,F=D+1,F=C+1,F=V_x_0+1,G=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_start_bb1_in/3 
* CEs [13] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [11] --> Loop 15 

#### Loops of eval_start_bb1_in/3 
* Loop 11: eval_start_bb1_in(V_n,V_x_0,B)->  eval_start_bb1_in(V_n,V_x_0',B')
                  [V_n>=V_x_0'+1,V_x_0'>=V_x_0+2,B'=3,B=3] 
* Loop 12: eval_start_bb1_in(V_n,V_x_0,B)->  eval_start_bb1_in(V_n,V_x_0',B')
                  [V_n>=V_x_0+2,V_x_0+1=V_x_0',B'=3,B=3] 
* Loop 13: eval_start_bb1_in(V_n,V_x_0,B)->  eval_start_bb1_in(V_n,V_n,A')
                  [V_n>=V_x_0+2,A'=3,B=3] 
* Loop 14: eval_start_bb1_in(V_n,V_x_0,B)->  eval_start_bb1_in(V_n,V_n,A')
                  [V_n=V_x_0+1,A'=3,B=3] 
* Loop 15: eval_start_bb1_in(V_n,V_x_0,B) [V_x_0>=V_n,B=3] 

### Ranking functions of CR eval_start_bb1_in(V_n,V_x_0,B) 
* RF of phase [11,12]: [V_n-V_x_0-1]

#### Partial ranking functions of CR eval_start_bb1_in(V_n,V_x_0,B) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V_n/2-V_x_0/2-1
  - RF of loop [12:1]:
    V_n-V_x_0-1


### Resulting Chains:eval_start_bb1_in(V_n,V_x_0,B) 
* [[11,12],14,15]
* [[11,12],13,15]
* [15]
* [14,15]
* [13,15]


### Specialization of cost equations eval_start_3/2 
* CE 2 is refined into CE [16,17,18,19,20] 


#### Refined cost equations eval_start_3/2 
* CE 16: eval_start_3(V_n,B) = 1+ eval_start_bb1_in(V_n,C,D):[[11,12],14,15]
     [V_n>=2,D=3,C=0] 
* CE 17: eval_start_3(V_n,B) = 1+ eval_start_bb1_in(V_n,C,D):[[11,12],13,15]
     [V_n>=3,D=3,C=0] 
* CE 18: eval_start_3(V_n,B) = 1+ eval_start_bb1_in(V_n,C,D):[15]
     [0>=V_n,D=3,C=0] 
* CE 19: eval_start_3(V_n,B) = 1+ eval_start_bb1_in(C,D,E):[14,15]
     [E=3,D=0,C=1,V_n=1] 
* CE 20: eval_start_3(V_n,B) = 1+ eval_start_bb1_in(V_n,C,D):[13,15]
     [V_n>=2,D=3,C=0] 

### Cost equations --> "Loop" of eval_start_3/2 
* CEs [17] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_start_3/2 
* Loop 16: eval_start_3(V_n,B) [V_n>=3] 
* Loop 17: eval_start_3(V_n,B) [V_n>=2] 
* Loop 18: eval_start_3(V_n,B) [V_n>=2] 
* Loop 19: eval_start_3(V_n,B) [0>=V_n] 
* Loop 20: eval_start_3(V_n,B) [V_n=1] 

### Ranking functions of CR eval_start_3(V_n,B) 

#### Partial ranking functions of CR eval_start_3(V_n,B) 


### Resulting Chains:eval_start_3(V_n,B) 
* [20]
* [19]
* [18]
* [17]
* [16]


### Specialization of cost equations eval_start_start/2 
* CE 1 is refined into CE [21,22,23,24,25] 


#### Refined cost equations eval_start_start/2 
* CE 21: eval_start_start(V_n,B) = 0+ eval_start_3(C,B):[20]
     [C=1,V_n=1] 
* CE 22: eval_start_start(V_n,B) = 0+ eval_start_3(V_n,B):[19]
     [0>=V_n] 
* CE 23: eval_start_start(V_n,B) = 0+ eval_start_3(V_n,B):[18]
     [V_n>=2] 
* CE 24: eval_start_start(V_n,B) = 0+ eval_start_3(V_n,B):[17]
     [V_n>=2] 
* CE 25: eval_start_start(V_n,B) = 0+ eval_start_3(V_n,B):[16]
     [V_n>=3] 

### Cost equations --> "Loop" of eval_start_start/2 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [22] --> Loop 24 
* CEs [21] --> Loop 25 

#### Loops of eval_start_start/2 
* Loop 21: eval_start_start(V_n,B) [V_n>=3] 
* Loop 22: eval_start_start(V_n,B) [V_n>=2] 
* Loop 23: eval_start_start(V_n,B) [V_n>=2] 
* Loop 24: eval_start_start(V_n,B) [0>=V_n] 
* Loop 25: eval_start_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_start_start(V_n,B) 

#### Partial ranking functions of CR eval_start_start(V_n,B) 


### Resulting Chains:eval_start_start(V_n,B) 
* [25]
* [24]
* [23]
* [22]
* [21]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_start_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1
#### Cost of phase [8]:eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_start_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_x_0_sink
it(8) =< V_n-V_x_0_sink-V_n'+V_x_0_sink'

#### Cost of phase [8]:eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D) -> [eval_start_bb2_in(V_n',V_x_0',V_x_0_sink',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V_n-V_x_0_sink
it(8) =< V_n-V_x_0_sink-V_n'+V_x_0_sink'

#### Cost of chains of eval_start_bb2_in(V_n,V_x_0,V_x_0_sink,B,C,D):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_n-V_x_0_sink

  with precondition: [B=2,V_n=C,V_n=D,V_x_0_sink>=V_x_0,V_n>=V_x_0_sink+2] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V_x_0_sink+D

  with precondition: [B=2,V_n=C,V_x_0_sink>=V_x_0,D>=V_x_0_sink+2,V_n>=D+1] 

* Chain [10]: 0
  with precondition: [B=2,V_x_0_sink+1=V_n,V_x_0_sink+1=C,V_x_0_sink+1=D,V_x_0_sink>=V_x_0] 

* Chain [9]: 0
  with precondition: [B=2,V_n=C,V_x_0_sink+1=D,V_x_0_sink>=V_x_0,V_n>=V_x_0_sink+2] 


#### Cost of loops [11,12] 

 * loop 11:eval_start_bb1_in(V_n,V_x_0,B) -> [eval_start_bb1_in(V_n',V_x_0',B')] 
1*s(2)+2
  Such that:s(2) =< -V_x_0+V_x_0'

 * loop 12:eval_start_bb1_in(V_n,V_x_0,B) -> [eval_start_bb1_in(V_n',V_x_0',B')] 
2
#### Cost of phase [11,12]:eval_start_bb1_in(V_n,V_x_0,B) -> [eval_start_bb1_in(V_n',V_x_0',B')] 
2*it(11)+3*it(12)+0
  Such that:it(11) =< V_n/2-V_x_0/2
it(11) =< V_n/2-V_x_0/2-V_n'/2+V_x_0'/2
aux(1) =< V_n-V_x_0
aux(2) =< V_n-V_x_0-V_n'+V_x_0'
it(11) =< aux(1)
it(12) =< aux(1)
it(11) =< aux(2)
it(12) =< aux(2)

#### Cost of phase [11,12]:eval_start_bb1_in(V_n,V_x_0,B) -> [eval_start_bb1_in(V_n',V_x_0',B')] 
2*it(11)+3*it(12)+0
  Such that:it(11) =< V_n/2-V_x_0/2
it(11) =< V_n/2-V_x_0/2-V_n'/2+V_x_0'/2
aux(1) =< V_n-V_x_0
aux(2) =< V_n-V_x_0-V_n'+V_x_0'
it(11) =< aux(1)
it(12) =< aux(1)
it(11) =< aux(2)
it(12) =< aux(2)

#### Cost of chains of eval_start_bb1_in(V_n,V_x_0,B):
* Chain [[11,12],14,15]: 2*it(11)+3*it(12)+2
  Such that:it(11) =< V_n/2-V_x_0/2
aux(3) =< V_n-V_x_0
it(11) =< aux(3)
it(12) =< aux(3)

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+2] 

* Chain [[11,12],13,15]: 6*it(11)+2
  Such that:aux(4) =< V_n-V_x_0
it(11) =< aux(4)

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+3] 

* Chain [15]: 0
  with precondition: [B=3,V_x_0>=0,V_x_0>=V_n] 

* Chain [14,15]: 2
  with precondition: [B=3,V_x_0+1=V_n,V_x_0>=0] 

* Chain [13,15]: 1*s(4)+2
  Such that:s(4) =< V_n-V_x_0

  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+2] 


#### Cost of chains of eval_start_3(V_n,B):
* Chain [20]: 3
  with precondition: [V_n=1] 

* Chain [19]: 1
  with precondition: [0>=V_n] 

* Chain [18]: 2*s(5)+3*s(7)+3
  Such that:s(6) =< V_n
s(5) =< V_n/2
s(5) =< s(6)
s(7) =< s(6)

  with precondition: [V_n>=2] 

* Chain [17]: 1*s(8)+3
  Such that:s(8) =< V_n

  with precondition: [V_n>=2] 

* Chain [16]: 6*s(10)+3
  Such that:s(9) =< V_n
s(10) =< s(9)

  with precondition: [V_n>=3] 


#### Cost of chains of eval_start_start(V_n,B):
* Chain [25]: 3
  with precondition: [V_n=1] 

* Chain [24]: 1
  with precondition: [0>=V_n] 

* Chain [23]: 2*s(12)+3*s(13)+3
  Such that:s(11) =< V_n
s(12) =< V_n/2
s(12) =< s(11)
s(13) =< s(11)

  with precondition: [V_n>=2] 

* Chain [22]: 1*s(14)+3
  Such that:s(14) =< V_n

  with precondition: [V_n>=2] 

* Chain [21]: 6*s(16)+3
  Such that:s(15) =< V_n
s(16) =< s(15)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_start_start(V_n,B): 
-------------------------------------
* Chain [25] with precondition: [V_n=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [23] with precondition: [V_n>=2] 
    - Upper bound: 4*V_n+3 
    - Complexity: n 
* Chain [22] with precondition: [V_n>=2] 
    - Upper bound: V_n+3 
    - Complexity: n 
* Chain [21] with precondition: [V_n>=3] 
    - Upper bound: 6*V_n+3 
    - Complexity: n 

### Maximum cost of eval_start_start(V_n,B): nat(V_n)*2+max([nat(V_n)*3,nat(V_n/2)*2])+nat(V_n)+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 37 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 37 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 61 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 186 ms.

