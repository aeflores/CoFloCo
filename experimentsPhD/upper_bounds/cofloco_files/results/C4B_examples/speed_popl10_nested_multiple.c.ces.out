Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_6/11,eval_start_7/12,eval_start_bb2_in/11,eval_start_bb3_in/11,eval_start_bb4_in/12]
1. recursive  : [eval_start_11/7,eval_start_12/7,eval_start_bb1_in/5,eval_start_bb5_in/6,loop_cont_eval_start_bb2_in/7]
2. non_recursive  : [eval_start_bb6_in/1]
3. non_recursive  : [loop_cont_eval_start_bb1_in/2]
4. non_recursive  : [eval_start_5/5]
5. non_recursive  : [eval_start_4/5]
6. non_recursive  : [eval_start_3/5]
7. non_recursive  : [eval_start_2/5]
8. non_recursive  : [eval_start_1/5]
9. non_recursive  : [eval_start_0/5]
10. non_recursive  : [eval_start_bb0_in/5]
11. non_recursive  : [eval_start_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb2_in/11
1. SCC is partially evaluated into eval_start_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_start_5/5
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_start_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb2_in/11 
* CE 5 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_start_bb2_in/11 
* CE 8: eval_start_bb2_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [B>=E+1,A>=D+1,E>=C,F=2] 
* CE 9: eval_start_bb2_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [A>=D+1,E>=C,E>=B,F=2] 
* CE 10: eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) = 1+ eval_start_bb2_in(V_n,V_m,V__01,V__0,H,I,C,D,E,F,G)
     [V_m>=V__1+1,V_n>=V__0+1,V__1>=V__01,V__1+1=H,I=2,B=2] 

### Cost equations --> "Loop" of eval_start_bb2_in/11 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_start_bb2_in/11 
* Loop 8: eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G)->  eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1',B',C,D,E,F,G)
                  [V_m>=V__1+1,V_n>=V__0+1,V__1>=V__01,V__1+1=V__1',B'=2,B=2] 
* Loop 9: eval_start_bb2_in(A,B,C,D,E,F,A,B,C,D,E) [B>=E+1,A>=D+1,E>=C,F=2] 
* Loop 10: eval_start_bb2_in(A,B,C,D,E,F,A,B,C,D,E) [A>=D+1,E>=C,E>=B,F=2] 

### Ranking functions of CR eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) 
* RF of phase [8]: [V_m-V__1]

#### Partial ranking functions of CR eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_m-V__1


### Resulting Chains:eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Specialization of cost equations eval_start_bb1_in/5 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_start_bb1_in/5 
* CE 11: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) = 0
     [V__0>=V_n,B=3] 
* CE 12: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) = 2+ eval_start_bb2_in(V_n,V_m,V__01,V__0,V__01,C,V_n,V_m,V__01,V__0,V_m):[[8],10]+ eval_start_bb1_in(V_n,V_m,V_m,D,E)
     [V_n>=V__0+1,V_m>=V__01+1,V__0+1=D,E=3,C=2,B=3] 
* CE 13: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) = 2+ eval_start_bb2_in(V_n,V_m,V__01,V__0,V__01,C,V_n,V_m,V__01,V__0,D):[[8],9]+ eval_start_bb1_in(V_n,V_m,D,E,F)
     [V_m>=D+1,V_n>=V__0+1,D>=V__01+1,V__0+1=E,F=3,C=2,B=3] 
* CE 14: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) = 2+ eval_start_bb2_in(V_n,V_m,V__01,V__0,V__01,C,V_n,V_m,V__01,V__0,V__01):[10]+ eval_start_bb1_in(V_n,V_m,V__01,D,E)
     [V_n>=V__0+1,V__01>=V_m,V__0+1=D,E=3,C=2,B=3] 
* CE 15: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) = 2+ eval_start_bb2_in(V_n,V_m,V__01,V__0,V__01,C,V_n,V_m,V__01,V__0,V__01):[9]+ eval_start_bb1_in(V_n,V_m,V__01,D,E)
     [V_n>=V__0+1,V_m>=V__01+1,V__0+1=D,E=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_start_bb1_in/5 
* CEs [13] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [11] --> Loop 15 

#### Loops of eval_start_bb1_in/5 
* Loop 11: eval_start_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_start_bb1_in(V_n,V_m,V__01',V__0',B')
                  [V_m>=V__01'+1,V_n>=V__0+1,V__01'>=V__01+1,V__0+1=V__0',B'=3,B=3] 
* Loop 12: eval_start_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_start_bb1_in(V_n,V_m,V__01,V__0',B')
                  [V_n>=V__0+1,V_m>=V__01+1,V__0+1=V__0',B'=3,B=3] 
* Loop 13: eval_start_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_start_bb1_in(V_n,V_m,V__01,V__0',B')
                  [V_n>=V__0+1,V__01>=V_m,V__0+1=V__0',B'=3,B=3] 
* Loop 14: eval_start_bb1_in(V_n,V_m,V__01,V__0,B)->  eval_start_bb1_in(V_n,V_m,V_m,A',B')
                  [V_n>=V__0+1,V_m>=V__01+1,V__0+1=A',B'=3,B=3] 
* Loop 15: eval_start_bb1_in(V_n,V_m,V__01,V__0,B) [V__0>=V_n,B=3] 

### Ranking functions of CR eval_start_bb1_in(V_n,V_m,V__01,V__0,B) 
* RF of phase [11,12]: [V_n-V__0]
* RF of phase [13]: [V_n-V__0]

#### Partial ranking functions of CR eval_start_bb1_in(V_n,V_m,V__01,V__0,B) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V_m-V__01-1
  - RF of loop [11:1,12:1]:
    V_n-V__0
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_n-V__0


### Resulting Chains:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) 
* [[13],15]
* [[11,12],15]
* [[11,12],14,[13],15]
* [[11,12],14,15]
* [15]
* [14,[13],15]
* [14,15]


### Specialization of cost equations eval_start_5/5 
* CE 2 is refined into CE [16,17,18,19,20,21,22] 


#### Refined cost equations eval_start_5/5 
* CE 16: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[[13],15]
     [V_n>=V_x+1,V_y>=V_m,C=3] 
* CE 17: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[[11,12],15]
     [V_n>=V_x+1,V_m>=V_y+1,C=3] 
* CE 18: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[[11,12],14,[13],15]
     [V_n>=V_x+3,V_m>=V_y+1,C=3] 
* CE 19: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[[11,12],14,15]
     [V_n>=V_x+2,V_m>=V_y+1,C=3] 
* CE 20: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[15]
     [V_x>=V_n,C=3] 
* CE 21: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(V_n,V_m,V_y,V_x,C):[14,[13],15]
     [V_n>=V_x+2,V_m>=V_y+1,C=3] 
* CE 22: eval_start_5(V_x,V_n,V_y,V_m,B) = 1+ eval_start_bb1_in(C,V_m,V_y,V_x,D):[14,15]
     [V_m>=V_y+1,V_x+1=C,V_x+1=V_n,D=3] 

### Cost equations --> "Loop" of eval_start_5/5 
* CEs [20] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [16] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_start_5/5 
* Loop 16: eval_start_5(V_x,V_n,V_y,V_m,B) [V_x>=V_n] 
* Loop 17: eval_start_5(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+3] 
* Loop 18: eval_start_5(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+2] 
* Loop 19: eval_start_5(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+2] 
* Loop 20: eval_start_5(V_x,V_n,V_y,V_m,B) [V_y>=V_m,V_n>=V_x+1] 
* Loop 21: eval_start_5(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+1] 
* Loop 22: eval_start_5(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_x+1=V_n] 

### Ranking functions of CR eval_start_5(V_x,V_n,V_y,V_m,B) 

#### Partial ranking functions of CR eval_start_5(V_x,V_n,V_y,V_m,B) 


### Resulting Chains:eval_start_5(V_x,V_n,V_y,V_m,B) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]


### Specialization of cost equations eval_start_start/5 
* CE 1 is refined into CE [23,24,25,26,27,28,29] 


#### Refined cost equations eval_start_start/5 
* CE 23: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,C,V_y,V_m,B):[22]
     [V_m>=V_y+1,V_x+1=C,V_x+1=V_n] 
* CE 24: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[21]
     [V_m>=V_y+1,V_n>=V_x+1] 
* CE 25: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[20]
     [V_y>=V_m,V_n>=V_x+1] 
* CE 26: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[19]
     [V_m>=V_y+1,V_n>=V_x+2] 
* CE 27: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[18]
     [V_m>=V_y+1,V_n>=V_x+2] 
* CE 28: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[17]
     [V_m>=V_y+1,V_n>=V_x+3] 
* CE 29: eval_start_start(V_x,V_n,V_y,V_m,B) = 0+ eval_start_5(V_x,V_n,V_y,V_m,B):[16]
     [V_x>=V_n] 

### Cost equations --> "Loop" of eval_start_start/5 
* CEs [29] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [25] --> Loop 27 
* CEs [24] --> Loop 28 
* CEs [23] --> Loop 29 

#### Loops of eval_start_start/5 
* Loop 23: eval_start_start(V_x,V_n,V_y,V_m,B) [V_x>=V_n] 
* Loop 24: eval_start_start(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+3] 
* Loop 25: eval_start_start(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+2] 
* Loop 26: eval_start_start(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+2] 
* Loop 27: eval_start_start(V_x,V_n,V_y,V_m,B) [V_y>=V_m,V_n>=V_x+1] 
* Loop 28: eval_start_start(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_n>=V_x+1] 
* Loop 29: eval_start_start(V_x,V_n,V_y,V_m,B) [V_m>=V_y+1,V_x+1=V_n] 

### Ranking functions of CR eval_start_start(V_x,V_n,V_y,V_m,B) 

#### Partial ranking functions of CR eval_start_start(V_x,V_n,V_y,V_m,B) 


### Resulting Chains:eval_start_start(V_x,V_n,V_y,V_m,B) 
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_n',V_m',V__01',V__0',V__1',B',C',D',E',F',G')] 
1
#### Cost of phase [8]:eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_n',V_m',V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(8)+0
  Such that:it(8) =< V_m-V__1
it(8) =< V_m-V__1-V_m'+V__1'

#### Cost of phase [8]:eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V_n',V_m',V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(8)+0
  Such that:it(8) =< V_m-V__1
it(8) =< V_m-V__1-V_m'+V__1'

#### Cost of chains of eval_start_bb2_in(V_n,V_m,V__01,V__0,V__1,B,C,D,E,F,G):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_m-V__1

  with precondition: [B=2,V_n=C,V_m=D,V__01=E,V__0=F,V_m=G,V__1>=V__01,V_n>=V__0+1,V_m>=V__1+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V__1+G

  with precondition: [B=2,V_n=C,V_m=D,V__01=E,V__0=F,V__1>=V__01,V_n>=V__0+1,G>=V__1+1,V_m>=G+1] 

* Chain [10]: 0
  with precondition: [B=2,V_n=C,V_m=D,V__01=E,V__0=F,V__1=G,V__1>=V_m,V__1>=V__01,V_n>=V__0+1] 

* Chain [9]: 0
  with precondition: [B=2,V_n=C,V_m=D,V__01=E,V__0=F,V__1=G,V__1>=V__01,V_n>=V__0+1,V_m>=V__1+1] 


#### Cost of loops [13] 

 * loop 13:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2
#### Cost of phase [13]:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2*it(13)+0
  Such that:it(13) =< V_n-V__0
it(13) =< V_n-V__0-V_n'+V__0'

#### Cost of loops [11,12] 

 * loop 11:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
1*s(2)+2
  Such that:s(2) =< -V__01+V__01'

 * loop 12:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2
#### Cost of phase [11,12]:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2*it(11)+2*it(12)+1*s(3)+0
  Such that:aux(1) =< V_n-V__0
aux(2) =< V_n-V__0-V_n'+V__0'
aux(3) =< V_m-V__01
aux(4) =< V_m-V__01-V_m'+V__01'
it(11) =< aux(1)
it(12) =< aux(1)
it(11) =< aux(2)
it(12) =< aux(2)
it(11) =< aux(3)
s(3) =< aux(3)
it(11) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [11,12]:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2*it(11)+2*it(12)+1*s(3)+0
  Such that:aux(1) =< V_n-V__0
aux(2) =< V_n-V__0-V_n'+V__0'
aux(3) =< V_m-V__01
aux(4) =< V_m-V__01-V_m'+V__01'
it(11) =< aux(1)
it(12) =< aux(1)
it(11) =< aux(2)
it(12) =< aux(2)
it(11) =< aux(3)
s(3) =< aux(3)
it(11) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [11,12]:eval_start_bb1_in(V_n,V_m,V__01,V__0,B) -> [eval_start_bb1_in(V_n',V_m',V__01',V__0',B')] 
2*it(11)+2*it(12)+1*s(3)+0
  Such that:aux(1) =< V_n-V__0
aux(2) =< V_n-V__0-V_n'+V__0'
aux(3) =< V_m-V__01
aux(4) =< V_m-V__01-V_m'+V__01'
it(11) =< aux(1)
it(12) =< aux(1)
it(11) =< aux(2)
it(12) =< aux(2)
it(11) =< aux(3)
s(3) =< aux(3)
it(11) =< aux(4)
s(3) =< aux(4)

#### Cost of chains of eval_start_bb1_in(V_n,V_m,V__01,V__0,B):
* Chain [[13],15]: 2*it(13)+0
  Such that:it(13) =< V_n-V__0

  with precondition: [B=3,V__01>=V_m,V_n>=V__0+1] 

* Chain [[11,12],15]: 2*it(11)+2*it(12)+1*s(3)+0
  Such that:aux(5) =< V_n-V__0
aux(6) =< V_m-V__01
it(11) =< aux(5)
it(12) =< aux(5)
it(11) =< aux(6)
s(3) =< aux(6)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+1] 

* Chain [[11,12],14,[13],15]: 2*it(11)+4*it(12)+2*s(3)+2
  Such that:aux(7) =< V_n-V__0
aux(8) =< V_m-V__01
it(12) =< aux(7)
s(3) =< aux(8)
it(11) =< aux(7)
it(11) =< aux(8)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+3] 

* Chain [[11,12],14,15]: 2*it(11)+2*it(12)+2*s(3)+2
  Such that:aux(9) =< V_n-V__0
aux(10) =< V_m-V__01
s(3) =< aux(10)
it(11) =< aux(9)
it(12) =< aux(9)
it(11) =< aux(10)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+2] 

* Chain [15]: 0
  with precondition: [B=3,V__0>=V_n] 

* Chain [14,[13],15]: 2*it(13)+1*s(4)+2
  Such that:it(13) =< V_n-V__0
s(4) =< V_m-V__01

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+2] 

* Chain [14,15]: 1*s(4)+2
  Such that:s(4) =< V_m-V__01

  with precondition: [B=3,V_n=V__0+1,V_m>=V__01+1] 


#### Cost of chains of eval_start_5(V_x,V_n,V_y,V_m,B):
* Chain [22]: 1*s(5)+3
  Such that:s(5) =< -V_y+V_m

  with precondition: [V_n=V_x+1,V_m>=V_y+1] 

* Chain [21]: 2*s(8)+2*s(9)+1*s(10)+1
  Such that:s(6) =< -V_x+V_n
s(7) =< -V_y+V_m
s(8) =< s(6)
s(9) =< s(6)
s(8) =< s(7)
s(10) =< s(7)

  with precondition: [V_n>=V_x+1,V_m>=V_y+1] 

* Chain [20]: 2*s(11)+1
  Such that:s(11) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_y>=V_m] 

* Chain [19]: 2*s(14)+2*s(15)+2*s(16)+3
  Such that:s(12) =< -V_x+V_n
s(13) =< -V_y+V_m
s(14) =< s(13)
s(15) =< s(12)
s(16) =< s(12)
s(15) =< s(13)

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [18]: 2*s(17)+1*s(18)+3
  Such that:s(17) =< -V_x+V_n
s(18) =< -V_y+V_m

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [17]: 4*s(21)+2*s(22)+2*s(23)+3
  Such that:s(19) =< -V_x+V_n
s(20) =< -V_y+V_m
s(21) =< s(19)
s(22) =< s(20)
s(23) =< s(19)
s(23) =< s(20)

  with precondition: [V_n>=V_x+3,V_m>=V_y+1] 

* Chain [16]: 1
  with precondition: [V_x>=V_n] 


#### Cost of chains of eval_start_start(V_x,V_n,V_y,V_m,B):
* Chain [29]: 1*s(24)+3
  Such that:s(24) =< -V_y+V_m

  with precondition: [V_n=V_x+1,V_m>=V_y+1] 

* Chain [28]: 2*s(27)+2*s(28)+1*s(29)+1
  Such that:s(25) =< -V_x+V_n
s(26) =< -V_y+V_m
s(27) =< s(25)
s(28) =< s(25)
s(27) =< s(26)
s(29) =< s(26)

  with precondition: [V_n>=V_x+1,V_m>=V_y+1] 

* Chain [27]: 2*s(30)+1
  Such that:s(30) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_y>=V_m] 

* Chain [26]: 2*s(33)+2*s(34)+2*s(35)+3
  Such that:s(31) =< -V_x+V_n
s(32) =< -V_y+V_m
s(33) =< s(32)
s(34) =< s(31)
s(35) =< s(31)
s(34) =< s(32)

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [25]: 2*s(36)+1*s(37)+3
  Such that:s(36) =< -V_x+V_n
s(37) =< -V_y+V_m

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [24]: 4*s(40)+2*s(41)+2*s(42)+3
  Such that:s(38) =< -V_x+V_n
s(39) =< -V_y+V_m
s(40) =< s(38)
s(41) =< s(39)
s(42) =< s(38)
s(42) =< s(39)

  with precondition: [V_n>=V_x+3,V_m>=V_y+1] 

* Chain [23]: 1
  with precondition: [V_x>=V_n] 


Closed-form bounds of eval_start_start(V_x,V_n,V_y,V_m,B): 
-------------------------------------
* Chain [29] with precondition: [V_n=V_x+1,V_m>=V_y+1] 
    - Upper bound: -V_y+V_m+3 
    - Complexity: n 
* Chain [28] with precondition: [V_n>=V_x+1,V_m>=V_y+1] 
    - Upper bound: -4*V_x+4*V_n-V_y+V_m+1 
    - Complexity: n 
* Chain [27] with precondition: [V_n>=V_x+1,V_y>=V_m] 
    - Upper bound: -2*V_x+2*V_n+1 
    - Complexity: n 
* Chain [26] with precondition: [V_n>=V_x+2,V_m>=V_y+1] 
    - Upper bound: -4*V_x+4*V_n-2*V_y+2*V_m+3 
    - Complexity: n 
* Chain [25] with precondition: [V_n>=V_x+2,V_m>=V_y+1] 
    - Upper bound: -2*V_x+2*V_n-V_y+V_m+3 
    - Complexity: n 
* Chain [24] with precondition: [V_n>=V_x+3,V_m>=V_y+1] 
    - Upper bound: -6*V_x+6*V_n-2*V_y+2*V_m+3 
    - Complexity: n 
* Chain [23] with precondition: [V_x>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_start_start(V_x,V_n,V_y,V_m,B): max([nat(-V_y+V_m)+2,nat(-V_y+V_m)+max([2,nat(-V_y+V_m)+2+nat(-V_x+V_n)*2+nat(-V_x+V_n)*2])+nat(-V_x+V_n)*2])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 73 ms.
   - Backward Invariants 39 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 76 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 120 ms.
   - Equation cost structures 39 ms.
   - Phase cost structures 36 ms.
   - Chain cost structures 38 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 346 ms.

