Warning: Ignored call to eval_start_stop/1 in equation eval_start_16/1 
Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_4/10,eval_start_5/10,eval_start_6/10,eval_start_7/11,eval_start_bb2_in/9,eval_start_bb3_in/10]
1. recursive  : [eval_start_10/13,eval_start_11/13,eval_start_12/14,eval_start_9/13,eval_start__critedge_in/12,eval_start_bb4_in/13]
2. recursive  : [eval_start_13/7,eval_start_14/7,eval_start__critedge3_in/7,eval_start_bb1_in/3,eval_start_bb6_in/7,loop_cont_eval_start__critedge_in/8,loop_cont_eval_start_bb2_in/7]
3. non_recursive  : [eval_start_16/1]
4. non_recursive  : [eval_start_15/1]
5. non_recursive  : [eval_start_bb7_in/1]
6. non_recursive  : [eval_start_bb5_in/1]
7. non_recursive  : [loop_cont_eval_start_bb1_in/2]
8. non_recursive  : [eval_start_2/3]
9. non_recursive  : [eval_start_1/3]
10. non_recursive  : [eval_start_0/3]
11. non_recursive  : [eval_start_bb0_in/3]
12. non_recursive  : [eval_start_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb2_in/9
1. SCC is partially evaluated into eval_start__critedge_in/12
2. SCC is partially evaluated into eval_start_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_start_2/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_start_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb2_in/9 
* CE 8 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_start_bb2_in/9 
* CE 12: eval_start_bb2_in(A,B,C,D,A,B,C,E,A) = 0
     [A>=C+2,C>=B,C+1=E,D=2] 
* CE 13: eval_start_bb2_in(A,B,C,D,E,B,C,F,G) = 0
     [C>=B,C+1=G,C+1=F,C+1=E,C+1=A,D=2] 
* CE 14: eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) = 1+ eval_start_bb2_in(V__01,V__0,H,I,C,D,E,F,G)
     [V__01>=H+1,H>=V__0+1,H=V__1+1,I=2,B=2] 

### Cost equations --> "Loop" of eval_start_bb2_in/9 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_start_bb2_in/9 
* Loop 12: eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G)->  eval_start_bb2_in(V__01,V__0,V__1',B',C,D,E,F,G)
                  [V__01>=V__1'+1,V__1'>=V__0+1,V__1'=V__1+1,B'=2,B=2] 
* Loop 13: eval_start_bb2_in(A,B,C,D,A,B,C,E,A) [A>=C+2,C>=B,C+1=E,D=2] 
* Loop 14: eval_start_bb2_in(A,B,C,D,E,B,C,F,G) [C>=B,C+1=G,C+1=F,C+1=E,C+1=A,D=2] 

### Ranking functions of CR eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* RF of phase [12]: [V__01-V__1-1]

#### Partial ranking functions of CR eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__01-V__1-1


### Resulting Chains:eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Specialization of cost equations eval_start__critedge_in/12 
* CE 9 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_start__critedge_in/12 
* CE 15: eval_start__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [D+1>=E,E=G+1,F=3] 
* CE 16: eval_start__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [E>=D+2,E=G+1,F=3] 
* CE 17: eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) = 1+ eval_start__critedge_in(V__01,V__0,V__1,V_1,I,J,C,D,E,F,G,H)
     [I>=V_1+1,I+1=V__12,J=3,B=3] 

### Cost equations --> "Loop" of eval_start__critedge_in/12 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_start__critedge_in/12 
* Loop 15: eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H)->  eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12',B',C,D,E,F,G,H)
                  [V__12'>=V_1+1,V__12'+1=V__12,B'=3,B=3] 
* Loop 16: eval_start__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) [D+1>=E,E=G+1,F=3] 
* Loop 17: eval_start__critedge_in(A,B,C,D,E,F,A,B,C,D,E,G) [E>=D+2,E=G+1,F=3] 

### Ranking functions of CR eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* RF of phase [15]: [-V_1+V__12-1]

#### Partial ranking functions of CR eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V_1+V__12-1


### Resulting Chains:eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Specialization of cost equations eval_start_bb1_in/3 
* CE 5 is refined into CE [18,19,20,21] 
* CE 4 is refined into CE [22,23,24,25,26,27] 


#### Refined cost equations eval_start_bb1_in/3 
* CE 18: eval_start_bb1_in(V__01,V__0,B) = 3+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_start__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,I,J):[[15],17]+ eval_start_bb1_in(J,K,L)
     [V__01>=J+2,J>=D+2,D>=V__0+1,D+1=K,J+1=I,D+1=H,D+1=F,D+1=E,L=4,G=3,C=2,B=4] 
* CE 19: eval_start_bb1_in(V__01,V__0,B) = 3+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_start__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,V__01,I):[17]+ eval_start_bb1_in(J,K,L)
     [V__01>=D+3,D>=V__0+1,D+1=K,V__01=J+1,V__01=I+1,D+1=H,D+1=F,D+1=E,L=4,G=3,C=2,B=4] 
* CE 20: eval_start_bb1_in(V__01,V__0,B) = 3+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_start__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,H,I):[[15],17]+ eval_start_bb1_in(I,J,K)
     [V__01>=I+2,I>=V__0+2,V__0+1=J,I+1=H,V__0+1=G,V__0+1=E,V__0+1=D,K=4,F=3,C=2,B=4] 
* CE 21: eval_start_bb1_in(V__01,V__0,B) = 3+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_start__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,V__01,H):[17]+ eval_start_bb1_in(I,J,K)
     [V__01>=V__0+3,V__0+1=J,V__01=I+1,V__01=H+1,V__0+1=G,V__0+1=E,V__0+1=D,K=4,F=3,C=2,B=4] 
* CE 22: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,V__01,V__01):[[12],14]+ eval_start__critedge_in(V__01,V__0,E,V__01,V__01,F,V__01,V__0,G,V__01,V__01,H):[16]
     [V__01>=V__0+2,V__01=H+1,V__01=G+1,V__01=E+1,V__01=D+1,F=3,C=2,B=4] 
* CE 23: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_start__critedge_in(V__01,V__0,D,F,V__01,G,V__01,V__0,D,H,I,J):[[15],16]
     [V__01>=D+3,D>=V__0+1,D+1=J,D+2=I,D+1=H,D+1=F,D+1=E,G=3,C=2,B=4] 
* CE 24: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,D,E,V__01):[[12],13]+ eval_start__critedge_in(V__01,V__0,F,G,V__01,H,V__01,V__0,I,J,V__01,K):[16]
     [V__01>=V__0+3,V__01=K+1,V__01=J+1,V__01=I+2,V__01=G+1,V__01=F+2,V__01=E+1,V__01=D+2,H=3,C=2,B=4] 
* CE 25: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,C,D,E,V__01,F,G,V__01,V__01):[14]+ eval_start__critedge_in(V__01,H,I,V__01,V__01,J,V__01,K,L,V__01,V__01,M):[16]
     [V__01=M+1,V__01=L+1,V__01=K+1,V__01=I+1,V__01=H+1,V__01=G+1,V__01=F+1,V__01=D+1,V__01=C+1,V__01=V__0+1,J=3,E=2,B=4] 
* CE 26: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,V__0,V__0,C,V__01,V__0,V__0,D,V__01):[13]+ eval_start__critedge_in(V__01,V__0,V__0,E,V__01,F,V__01,V__0,V__0,G,H,I):[[15],16]
     [V__01>=V__0+3,V__0+1=I,V__0+2=H,V__0+1=G,V__0+1=E,V__0+1=D,F=3,C=2,B=4] 
* CE 27: eval_start_bb1_in(V__01,V__0,B) = 2+ eval_start_bb2_in(V__01,C,D,E,V__01,F,G,H,V__01):[13]+ eval_start__critedge_in(V__01,I,J,K,V__01,L,V__01,M,N,O,V__01,P):[16]
     [V__01=P+1,V__01=O+1,V__01=N+2,V__01=M+2,V__01=K+1,V__01=J+2,V__01=I+2,V__01=H+1,V__01=G+2,V__01=F+2,V__01=D+2,V__01=C+2,V__01=V__0+2,L=3,E=2,B=4] 

### Cost equations --> "Loop" of eval_start_bb1_in/3 
* CEs [23] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [18] --> Loop 24 
* CEs [20] --> Loop 25 
* CEs [19] --> Loop 26 
* CEs [21] --> Loop 27 

#### Loops of eval_start_bb1_in/3 
* Loop 18: eval_start_bb1_in(V__01,V__0,B) [V__01>=V__0+4,B=4] 
* Loop 19: eval_start_bb1_in(V__01,V__0,B) [V__01>=V__0+3,B=4] 
* Loop 20: eval_start_bb1_in(V__01,V__0,B) [V__01>=V__0+3,B=4] 
* Loop 21: eval_start_bb1_in(V__01,V__0,B) [V__01>=V__0+2,B=4] 
* Loop 22: eval_start_bb1_in(V__01,V__0,B) [V__01=V__0+2,B=4] 
* Loop 23: eval_start_bb1_in(V__01,V__0,B) [V__01=V__0+1,B=4] 
* Loop 24: eval_start_bb1_in(V__01,V__0,B)->  eval_start_bb1_in(V__01',V__0',B')
                  [V__01'>=V__0'+1,V__01>=V__01'+2,V__0'>=V__0+2,B'=4,B=4] 
* Loop 25: eval_start_bb1_in(V__01,V__0,B)->  eval_start_bb1_in(V__01',V__0',B')
                  [V__01>=V__01'+2,V__01'>=V__0+2,V__0+1=V__0',B'=4,B=4] 
* Loop 26: eval_start_bb1_in(V__01,V__0,B)->  eval_start_bb1_in(V__01',V__0',B')
                  [V__01>=V__0'+2,V__0'>=V__0+2,V__01=V__01'+1,B'=4,B=4] 
* Loop 27: eval_start_bb1_in(V__01,V__0,B)->  eval_start_bb1_in(V__01',V__0',B')
                  [V__01>=V__0'+2,V__01=V__01'+1,V__0'=V__0+1,B'=4,B=4] 

### Ranking functions of CR eval_start_bb1_in(V__01,V__0,B) 
* RF of phase [24,25,26,27]: [V__01/2-V__0/2-1]

#### Partial ranking functions of CR eval_start_bb1_in(V__01,V__0,B) 
* Partial RF of phase [24,25,26,27]:
  - RF of loop [24:1]:
    V__01/4-V__0/4-1
  - RF of loop [25:1,26:1]:
    V__01/3-V__0/3-1
  - RF of loop [27:1]:
    V__01/2-V__0/2-1


### Resulting Chains:eval_start_bb1_in(V__01,V__0,B) 
* [[24,25,26,27],23]
* [[24,25,26,27],22]
* [[24,25,26,27],21]
* [[24,25,26,27],20]
* [[24,25,26,27],19]
* [[24,25,26,27],18]
* [23]
* [22]
* [21]
* [20]
* [19]
* [18]


### Specialization of cost equations eval_start_2/3 
* CE 3 is refined into CE [28] 
* CE 2 is refined into CE [29,30,31,32,33,34,35,36,37,38,39,40] 


#### Refined cost equations eval_start_2/3 
* CE 28: eval_start_2(V_l,V_h,B) = 0
     [V_l>=V_h] 
* CE 29: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],23]
     [V_h>=V_l+3,C=4] 
* CE 30: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],22]
     [V_h>=V_l+4,C=4] 
* CE 31: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],21]
     [V_h>=V_l+4,C=4] 
* CE 32: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],20]
     [V_h>=V_l+5,C=4] 
* CE 33: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],19]
     [V_h>=V_l+5,C=4] 
* CE 34: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[[24,25,26,27],18]
     [V_h>=V_l+6,C=4] 
* CE 35: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,C,D):[23]
     [V_h=C+1,V_h=V_l+1,D=4] 
* CE 36: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,C,D):[22]
     [V_h=C+2,V_h=V_l+2,D=4] 
* CE 37: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[21]
     [V_h>=V_l+2,C=4] 
* CE 38: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[20]
     [V_h>=V_l+3,C=4] 
* CE 39: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[19]
     [V_h>=V_l+3,C=4] 
* CE 40: eval_start_2(V_l,V_h,B) = 1+ eval_start_bb1_in(V_h,V_l,C):[18]
     [V_h>=V_l+4,C=4] 

### Cost equations --> "Loop" of eval_start_2/3 
* CEs [28] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [40] --> Loop 32 
* CEs [31] --> Loop 33 
* CEs [30] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [38] --> Loop 36 
* CEs [29] --> Loop 37 
* CEs [37] --> Loop 38 
* CEs [35] --> Loop 39 
* CEs [36] --> Loop 40 

#### Loops of eval_start_2/3 
* Loop 28: eval_start_2(V_l,V_h,B) [V_l>=V_h] 
* Loop 29: eval_start_2(V_l,V_h,B) [V_h>=V_l+6] 
* Loop 30: eval_start_2(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 31: eval_start_2(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 32: eval_start_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 33: eval_start_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 34: eval_start_2(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 35: eval_start_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 36: eval_start_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 37: eval_start_2(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 38: eval_start_2(V_l,V_h,B) [V_h>=V_l+2] 
* Loop 39: eval_start_2(V_l,V_h,B) [V_l+1=V_h] 
* Loop 40: eval_start_2(V_l,V_h,B) [V_l+2=V_h] 

### Ranking functions of CR eval_start_2(V_l,V_h,B) 

#### Partial ranking functions of CR eval_start_2(V_l,V_h,B) 


### Resulting Chains:eval_start_2(V_l,V_h,B) 
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]


### Specialization of cost equations eval_start_start/3 
* CE 1 is refined into CE [41,42,43,44,45,46,47,48,49,50,51,52,53] 


#### Refined cost equations eval_start_start/3 
* CE 41: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,C,B):[40]
     [V_l+2=C,V_l+2=V_h] 
* CE 42: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,C,B):[39]
     [V_l+1=C,V_l+1=V_h] 
* CE 43: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[38]
     [V_h>=V_l+2] 
* CE 44: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[37]
     [V_h>=V_l+3] 
* CE 45: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[36]
     [V_h>=V_l+3] 
* CE 46: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[35]
     [V_h>=V_l+3] 
* CE 47: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[34]
     [V_h>=V_l+4] 
* CE 48: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[33]
     [V_h>=V_l+4] 
* CE 49: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[32]
     [V_h>=V_l+4] 
* CE 50: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[31]
     [V_h>=V_l+5] 
* CE 51: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[30]
     [V_h>=V_l+5] 
* CE 52: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[29]
     [V_h>=V_l+6] 
* CE 53: eval_start_start(V_l,V_h,B) = 0+ eval_start_2(V_l,V_h,B):[28]
     [V_l>=V_h] 

### Cost equations --> "Loop" of eval_start_start/3 
* CEs [53] --> Loop 41 
* CEs [52] --> Loop 42 
* CEs [51] --> Loop 43 
* CEs [50] --> Loop 44 
* CEs [49] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [47] --> Loop 47 
* CEs [46] --> Loop 48 
* CEs [45] --> Loop 49 
* CEs [44] --> Loop 50 
* CEs [43] --> Loop 51 
* CEs [42] --> Loop 52 
* CEs [41] --> Loop 53 

#### Loops of eval_start_start/3 
* Loop 41: eval_start_start(V_l,V_h,B) [V_l>=V_h] 
* Loop 42: eval_start_start(V_l,V_h,B) [V_h>=V_l+6] 
* Loop 43: eval_start_start(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 44: eval_start_start(V_l,V_h,B) [V_h>=V_l+5] 
* Loop 45: eval_start_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 46: eval_start_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 47: eval_start_start(V_l,V_h,B) [V_h>=V_l+4] 
* Loop 48: eval_start_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 49: eval_start_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 50: eval_start_start(V_l,V_h,B) [V_h>=V_l+3] 
* Loop 51: eval_start_start(V_l,V_h,B) [V_h>=V_l+2] 
* Loop 52: eval_start_start(V_l,V_h,B) [V_l+1=V_h] 
* Loop 53: eval_start_start(V_l,V_h,B) [V_l+2=V_h] 

### Ranking functions of CR eval_start_start(V_l,V_h,B) 

#### Partial ranking functions of CR eval_start_start(V_l,V_h,B) 


### Resulting Chains:eval_start_start(V_l,V_h,B) 
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1
#### Cost of phase [12]:eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(12)+0
  Such that:it(12) =< V__01-V__1
it(12) =< V__01-V__1-V__01'+V__1'

#### Cost of phase [12]:eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G) -> [eval_start_bb2_in(V__01',V__0',V__1',B',C',D',E',F',G')] 
1*it(12)+0
  Such that:it(12) =< V__01-V__1
it(12) =< V__01-V__1-V__01'+V__1'

#### Cost of chains of eval_start_bb2_in(V__01,V__0,V__1,B,C,D,E,F,G):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V__01-V__1

  with precondition: [B=2,V__01=C,V__0=D,V__01=E+1,V__01=F,V__01=G,V__1>=V__0,V__01>=V__1+2] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -V__1+F

  with precondition: [B=2,V__01=C,V__0=D,E+1=F,V__01=G,V__1>=V__0,E>=V__1+1,V__01>=E+2] 

* Chain [14]: 0
  with precondition: [B=2,V__1+1=V__01,V__1+1=C,V__0=D,V__1=E,V__1+1=F,V__1+1=G,V__1>=V__0] 

* Chain [13]: 0
  with precondition: [B=2,V__01=C,V__0=D,V__1=E,V__1+1=F,V__01=G,V__1>=V__0,V__01>=V__1+2] 


#### Cost of loops [15] 

 * loop 15:eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_start__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1
#### Cost of phase [15]:eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_start__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1*it(15)+0
  Such that:it(15) =< -V_1+V__12
it(15) =< -V_1+V__12+V_1'-V__12'

#### Cost of phase [15]:eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H) -> [eval_start__critedge_in(V__01',V__0',V__1',V_1',V__12',B',C',D',E',F',G',H')] 
1*it(15)+0
  Such that:it(15) =< -V_1+V__12
it(15) =< -V_1+V__12+V_1'-V__12'

#### Cost of chains of eval_start__critedge_in(V__01,V__0,V__1,V_1,V__12,B,C,D,E,F,G,H):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V__12-G

  with precondition: [B=3,V__01=C,V__0=D,V__1=E,V_1=F,G=H+1,G>=V_1+2,V__12>=G+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_1+V__12

  with precondition: [B=3,V__01=C,V__0=D,V__1=E,V_1=F,V_1+1=G,V_1=H,V__12>=V_1+2] 

* Chain [17]: 0
  with precondition: [B=3,C=V__01,D=V__0,E=V__1,V_1=F,V__12=G,V__12=H+1,V__12>=V_1+2] 

* Chain [16]: 0
  with precondition: [B=3,C=V__01,D=V__0,E=V__1,V_1=F,V__12=G,V__12=H+1,V_1+1>=V__12] 


#### Cost of loops [24,25,26,27] 

 * loop 24:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
1*s(4)+1*s(3)+3
  Such that:s(3) =< V__01-V__01'
s(4) =< -V__0+V__0'

 * loop 25:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
1*s(6)+3
  Such that:s(6) =< V__01-V__01'

 * loop 26:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
1*s(8)+3
  Such that:s(8) =< -V__0+V__0'

 * loop 27:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3
#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of phase [24,25,26,27]:eval_start_bb1_in(V__01,V__0,B) -> [eval_start_bb1_in(V__01',V__0',B')] 
3*it(24)+6*it(25)+3*it(27)+4*s(9)+0
  Such that:it(24) =< V__01/4-V__0/4
it(24) =< V__01/4-V__0/4-V__01'/4+V__0'/4
aux(1) =< V__01-V__0
aux(2) =< V__01-V__0-V__01'+V__0'
aux(3) =< V__01/2-V__0/2
aux(4) =< V__01/2-V__0/2-V__01'/2+V__0'/2
aux(5) =< V__01/3-V__0/3
aux(6) =< V__01/3-V__0/3-V__01'/3+V__0'/3
it(25) =< aux(1)
it(27) =< aux(1)
s(9) =< aux(1)
it(25) =< aux(2)
it(27) =< aux(2)
s(9) =< aux(2)
it(24) =< aux(3)
it(25) =< aux(3)
it(27) =< aux(3)
it(24) =< aux(4)
it(25) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(25) =< aux(6)

#### Cost of chains of eval_start_bb1_in(V__01,V__0,B):
* Chain [[24,25,26,27],23]: 3*it(24)+6*it(25)+3*it(27)+4*s(9)+2
  Such that:it(24) =< V__01/4-V__0/4
aux(7) =< V__01-V__0
aux(8) =< V__01/2-V__0/2
aux(9) =< V__01/3-V__0/3
it(25) =< aux(7)
it(27) =< aux(7)
s(9) =< aux(7)
it(24) =< aux(8)
it(25) =< aux(8)
it(27) =< aux(8)
it(25) =< aux(9)

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [[24,25,26,27],22]: 3*it(24)+6*it(25)+3*it(27)+4*s(9)+2
  Such that:it(24) =< V__01/4-V__0/4
aux(10) =< V__01-V__0
aux(11) =< V__01/2-V__0/2
aux(12) =< V__01/3-V__0/3
it(25) =< aux(10)
it(27) =< aux(10)
s(9) =< aux(10)
it(24) =< aux(11)
it(25) =< aux(11)
it(27) =< aux(11)
it(25) =< aux(12)

  with precondition: [B=4,V__01>=V__0+4] 

* Chain [[24,25,26,27],21]: 6*it(24)+6*it(25)+5*s(9)+2
  Such that:aux(3) =< V__01/2-V__0/2
aux(5) =< V__01/3-V__0/3
aux(13) =< V__01-V__0
it(24) =< aux(13)
s(9) =< aux(13)
it(25) =< aux(13)
it(24) =< aux(3)
it(25) =< aux(3)
it(25) =< aux(5)

  with precondition: [B=4,V__01>=V__0+4] 

* Chain [[24,25,26,27],20]: 6*it(24)+6*it(25)+5*s(9)+2
  Such that:aux(3) =< V__01/2-V__0/2
aux(5) =< V__01/3-V__0/3
aux(14) =< V__01-V__0
it(24) =< aux(14)
s(9) =< aux(14)
it(25) =< aux(14)
it(24) =< aux(3)
it(25) =< aux(3)
it(25) =< aux(5)

  with precondition: [B=4,V__01>=V__0+5] 

* Chain [[24,25,26,27],19]: 6*it(24)+6*it(25)+5*s(9)+2
  Such that:aux(3) =< V__01/2-V__0/2
aux(5) =< V__01/3-V__0/3
aux(15) =< V__01-V__0
it(24) =< aux(15)
s(9) =< aux(15)
it(25) =< aux(15)
it(24) =< aux(3)
it(25) =< aux(3)
it(25) =< aux(5)

  with precondition: [B=4,V__01>=V__0+5] 

* Chain [[24,25,26,27],18]: 6*it(24)+6*it(25)+6*s(9)+2
  Such that:aux(3) =< V__01/2-V__0/2
aux(5) =< V__01/3-V__0/3
aux(17) =< V__01-V__0
it(24) =< aux(17)
s(9) =< aux(17)
it(25) =< aux(17)
it(24) =< aux(3)
it(25) =< aux(3)
it(25) =< aux(5)

  with precondition: [B=4,V__01>=V__0+6] 

* Chain [23]: 2
  with precondition: [B=4,V__0+1=V__01] 

* Chain [22]: 2
  with precondition: [B=4,V__0+2=V__01] 

* Chain [21]: 1*s(13)+2
  Such that:s(13) =< V__01-V__0

  with precondition: [B=4,V__01>=V__0+2] 

* Chain [20]: 1*s(14)+2
  Such that:s(14) =< V__01-V__0

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [19]: 1*s(15)+2
  Such that:s(15) =< V__01-V__0

  with precondition: [B=4,V__01>=V__0+3] 

* Chain [18]: 2*s(16)+2
  Such that:aux(16) =< V__01-V__0
s(16) =< aux(16)

  with precondition: [B=4,V__01>=V__0+4] 


#### Cost of chains of eval_start_2(V_l,V_h,B):
* Chain [40]: 3
  with precondition: [V_h=V_l+2] 

* Chain [39]: 3
  with precondition: [V_h=V_l+1] 

* Chain [38]: 1*s(18)+3
  Such that:s(18) =< -V_l+V_h

  with precondition: [V_h>=V_l+2] 

* Chain [37]: 3*s(19)+6*s(23)+3*s(24)+4*s(25)+3
  Such that:s(20) =< -V_l+V_h
s(21) =< -V_l/2+V_h/2
s(22) =< -V_l/3+V_h/3
s(19) =< -V_l/4+V_h/4
s(23) =< s(20)
s(24) =< s(20)
s(25) =< s(20)
s(19) =< s(21)
s(23) =< s(21)
s(24) =< s(21)
s(23) =< s(22)

  with precondition: [V_h>=V_l+3] 

* Chain [36]: 1*s(26)+3
  Such that:s(26) =< -V_l+V_h

  with precondition: [V_h>=V_l+3] 

* Chain [35]: 1*s(27)+3
  Such that:s(27) =< -V_l+V_h

  with precondition: [V_h>=V_l+3] 

* Chain [34]: 3*s(28)+6*s(32)+3*s(33)+4*s(34)+3
  Such that:s(29) =< -V_l+V_h
s(30) =< -V_l/2+V_h/2
s(31) =< -V_l/3+V_h/3
s(28) =< -V_l/4+V_h/4
s(32) =< s(29)
s(33) =< s(29)
s(34) =< s(29)
s(28) =< s(30)
s(32) =< s(30)
s(33) =< s(30)
s(32) =< s(31)

  with precondition: [V_h>=V_l+4] 

* Chain [33]: 6*s(38)+5*s(39)+6*s(40)+3
  Such that:s(37) =< -V_l+V_h
s(35) =< -V_l/2+V_h/2
s(36) =< -V_l/3+V_h/3
s(38) =< s(37)
s(39) =< s(37)
s(40) =< s(37)
s(38) =< s(35)
s(40) =< s(35)
s(40) =< s(36)

  with precondition: [V_h>=V_l+4] 

* Chain [32]: 2*s(42)+3
  Such that:s(41) =< -V_l+V_h
s(42) =< s(41)

  with precondition: [V_h>=V_l+4] 

* Chain [31]: 6*s(46)+5*s(47)+6*s(48)+3
  Such that:s(45) =< -V_l+V_h
s(43) =< -V_l/2+V_h/2
s(44) =< -V_l/3+V_h/3
s(46) =< s(45)
s(47) =< s(45)
s(48) =< s(45)
s(46) =< s(43)
s(48) =< s(43)
s(48) =< s(44)

  with precondition: [V_h>=V_l+5] 

* Chain [30]: 6*s(52)+5*s(53)+6*s(54)+3
  Such that:s(51) =< -V_l+V_h
s(49) =< -V_l/2+V_h/2
s(50) =< -V_l/3+V_h/3
s(52) =< s(51)
s(53) =< s(51)
s(54) =< s(51)
s(52) =< s(49)
s(54) =< s(49)
s(54) =< s(50)

  with precondition: [V_h>=V_l+5] 

* Chain [29]: 6*s(58)+6*s(59)+6*s(60)+3
  Such that:s(57) =< -V_l+V_h
s(55) =< -V_l/2+V_h/2
s(56) =< -V_l/3+V_h/3
s(58) =< s(57)
s(59) =< s(57)
s(60) =< s(57)
s(58) =< s(55)
s(60) =< s(55)
s(60) =< s(56)

  with precondition: [V_h>=V_l+6] 

* Chain [28]: 0
  with precondition: [V_l>=V_h] 


#### Cost of chains of eval_start_start(V_l,V_h,B):
* Chain [53]: 3
  with precondition: [V_h=V_l+2] 

* Chain [52]: 3
  with precondition: [V_h=V_l+1] 

* Chain [51]: 1*s(61)+3
  Such that:s(61) =< -V_l+V_h

  with precondition: [V_h>=V_l+2] 

* Chain [50]: 3*s(65)+6*s(66)+3*s(67)+4*s(68)+3
  Such that:s(62) =< -V_l+V_h
s(63) =< -V_l/2+V_h/2
s(64) =< -V_l/3+V_h/3
s(65) =< -V_l/4+V_h/4
s(66) =< s(62)
s(67) =< s(62)
s(68) =< s(62)
s(65) =< s(63)
s(66) =< s(63)
s(67) =< s(63)
s(66) =< s(64)

  with precondition: [V_h>=V_l+3] 

* Chain [49]: 1*s(69)+3
  Such that:s(69) =< -V_l+V_h

  with precondition: [V_h>=V_l+3] 

* Chain [48]: 1*s(70)+3
  Such that:s(70) =< -V_l+V_h

  with precondition: [V_h>=V_l+3] 

* Chain [47]: 3*s(74)+6*s(75)+3*s(76)+4*s(77)+3
  Such that:s(71) =< -V_l+V_h
s(72) =< -V_l/2+V_h/2
s(73) =< -V_l/3+V_h/3
s(74) =< -V_l/4+V_h/4
s(75) =< s(71)
s(76) =< s(71)
s(77) =< s(71)
s(74) =< s(72)
s(75) =< s(72)
s(76) =< s(72)
s(75) =< s(73)

  with precondition: [V_h>=V_l+4] 

* Chain [46]: 6*s(81)+5*s(82)+6*s(83)+3
  Such that:s(78) =< -V_l+V_h
s(79) =< -V_l/2+V_h/2
s(80) =< -V_l/3+V_h/3
s(81) =< s(78)
s(82) =< s(78)
s(83) =< s(78)
s(81) =< s(79)
s(83) =< s(79)
s(83) =< s(80)

  with precondition: [V_h>=V_l+4] 

* Chain [45]: 2*s(85)+3
  Such that:s(84) =< -V_l+V_h
s(85) =< s(84)

  with precondition: [V_h>=V_l+4] 

* Chain [44]: 6*s(89)+5*s(90)+6*s(91)+3
  Such that:s(86) =< -V_l+V_h
s(87) =< -V_l/2+V_h/2
s(88) =< -V_l/3+V_h/3
s(89) =< s(86)
s(90) =< s(86)
s(91) =< s(86)
s(89) =< s(87)
s(91) =< s(87)
s(91) =< s(88)

  with precondition: [V_h>=V_l+5] 

* Chain [43]: 6*s(95)+5*s(96)+6*s(97)+3
  Such that:s(92) =< -V_l+V_h
s(93) =< -V_l/2+V_h/2
s(94) =< -V_l/3+V_h/3
s(95) =< s(92)
s(96) =< s(92)
s(97) =< s(92)
s(95) =< s(93)
s(97) =< s(93)
s(97) =< s(94)

  with precondition: [V_h>=V_l+5] 

* Chain [42]: 6*s(101)+6*s(102)+6*s(103)+3
  Such that:s(98) =< -V_l+V_h
s(99) =< -V_l/2+V_h/2
s(100) =< -V_l/3+V_h/3
s(101) =< s(98)
s(102) =< s(98)
s(103) =< s(98)
s(101) =< s(99)
s(103) =< s(99)
s(103) =< s(100)

  with precondition: [V_h>=V_l+6] 

* Chain [41]: 0
  with precondition: [V_l>=V_h] 


Closed-form bounds of eval_start_start(V_l,V_h,B): 
-------------------------------------
* Chain [53] with precondition: [V_h=V_l+2] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [52] with precondition: [V_h=V_l+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [51] with precondition: [V_h>=V_l+2] 
    - Upper bound: -V_l+V_h+3 
    - Complexity: n 
* Chain [50] with precondition: [V_h>=V_l+3] 
    - Upper bound: -55/4*V_l+55/4*V_h+3 
    - Complexity: n 
* Chain [49] with precondition: [V_h>=V_l+3] 
    - Upper bound: -V_l+V_h+3 
    - Complexity: n 
* Chain [48] with precondition: [V_h>=V_l+3] 
    - Upper bound: -V_l+V_h+3 
    - Complexity: n 
* Chain [47] with precondition: [V_h>=V_l+4] 
    - Upper bound: -55/4*V_l+55/4*V_h+3 
    - Complexity: n 
* Chain [46] with precondition: [V_h>=V_l+4] 
    - Upper bound: -17*V_l+17*V_h+3 
    - Complexity: n 
* Chain [45] with precondition: [V_h>=V_l+4] 
    - Upper bound: -2*V_l+2*V_h+3 
    - Complexity: n 
* Chain [44] with precondition: [V_h>=V_l+5] 
    - Upper bound: -17*V_l+17*V_h+3 
    - Complexity: n 
* Chain [43] with precondition: [V_h>=V_l+5] 
    - Upper bound: -17*V_l+17*V_h+3 
    - Complexity: n 
* Chain [42] with precondition: [V_h>=V_l+6] 
    - Upper bound: -18*V_l+18*V_h+3 
    - Complexity: n 
* Chain [41] with precondition: [V_l>=V_h] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_start_start(V_l,V_h,B): nat(-V_l+V_h)*11+max([nat(-V_l+V_h)*5,nat(-V_l/4+V_h/4)*3])+nat(-V_l+V_h)+nat(-V_l+V_h)+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 88 ms.
   - Backward Invariants 57 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 161 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 236 ms.
   - Equation cost structures 88 ms.
   - Phase cost structures 78 ms.
   - Chain cost structures 75 ms.
   - Solving cost expressions 6 ms.
* Total analysis performed in 616 ms.

