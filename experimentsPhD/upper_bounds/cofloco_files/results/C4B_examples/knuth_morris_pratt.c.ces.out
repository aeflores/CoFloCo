Warning: Ignored call to eval_srch_stop/1 in equation eval_srch_25/1 
Warning: Ignored call to eval_srch_stop/1 in equation eval_srch_27/1 
Warning: Ignored call to eval_srch_stop/1 in equation eval_srch_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_srch_bb3_in/13,eval_srch_bb4_in/13,eval_srch_bb5_in/13,eval_srch_bb6_in/14,eval_srch_bb7_in/14]
1. recursive  : [eval_srch_29/8,eval_srch_30/8,eval_srch_31/9,eval_srch_32/9,eval_srch__critedge_in/7,eval_srch_bb1_in/5,eval_srch_bb2_in/5,loop_cont_eval_srch_bb3_in/8]
2. non_recursive  : [eval_srch_bb10_in/1]
3. non_recursive  : [eval_srch_25/1]
4. non_recursive  : [eval_srch_24/1]
5. non_recursive  : [eval_srch_bb8_in/1]
6. non_recursive  : [eval_srch_27/1]
7. non_recursive  : [eval_srch_26/1]
8. non_recursive  : [eval_srch_bb9_in/1]
9. non_recursive  : [loop_cont_eval_srch_bb1_in/2]
10. non_recursive  : [eval_srch_10/3]
11. non_recursive  : [eval_srch_9/3]
12. non_recursive  : [eval_srch_8/3]
13. non_recursive  : [eval_srch_7/3]
14. non_recursive  : [eval_srch_6/3]
15. non_recursive  : [eval_srch_5/3]
16. non_recursive  : [eval_srch_4/3]
17. non_recursive  : [eval_srch_3/3]
18. non_recursive  : [eval_srch_2/3]
19. non_recursive  : [eval_srch_1/3]
20. non_recursive  : [eval_srch_0/3]
21. non_recursive  : [eval_srch_bb0_in/3]
22. non_recursive  : [eval_srch_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_srch_bb3_in/13
1. SCC is partially evaluated into eval_srch_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_srch_bb1_in/2
10. SCC is partially evaluated into eval_srch_10/3
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_srch_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_srch_bb3_in/13 
* CE 14 is refined into CE [17] 
* CE 12 is refined into CE [18] 
* CE 15 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 13 is refined into CE [21] 


#### Refined cost equations eval_srch_bb3_in/13 
* CE 17: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 0
     [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=4] 
* CE 18: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 0
     [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=3] 
* CE 19: eval_srch_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [C>=F,A>=D+1,F>=0,G=2] 
* CE 20: eval_srch_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [C>=F,A>=D+1,0>=F+1,G=2] 
* CE 21: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,I,B,C,D,E,F,G,H)
     [V_j_1>=I+1,V_j_0>=V_j_1,V_n>=V_i_0+1,I+1>=0,B>=2,4>=B] 

### Cost equations --> "Loop" of eval_srch_bb3_in/13 
* CEs [21] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of eval_srch_bb3_in/13 
* Loop 17: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H)->  eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1',B,C,D,E,F,G,H)
                  [V_j_1>=V_j_1'+1,V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1'+1>=0,B>=2,4>=B] 
* Loop 18: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=4] 
* Loop 19: eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) [V_j_0>=V_j_1,V_n>=V_i_0+1,V_j_1>=0,B=3] 
* Loop 20: eval_srch_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [C>=F,A>=D+1,F>=0,G=2] 
* Loop 21: eval_srch_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [C>=F,A>=D+1,0>=F+1,G=2] 

### Ranking functions of CR eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* RF of phase [17]: [V_j_1+1]

#### Partial ranking functions of CR eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_j_1+1


### Resulting Chains:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) 
* [[17],21]
* [[17],20]
* [[17],19]
* [[17],18]
* [21]
* [20]
* [19]
* [18]


### Specialization of cost equations eval_srch_bb1_in/5 
* CE 5 is refined into CE [22,23,24,25] 
* CE 8 is refined into CE [26] 
* CE 3 is refined into CE [27,28] 
* CE 4 is refined into CE [29,30] 
* CE 6 is refined into CE [31,32,33,34] 
* CE 7 is refined into CE [35,36,37,38] 


#### Refined cost equations eval_srch_bb1_in/5 
* CE 22: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,C,V_j_0,V_i_0,D,V_j_0,E,V_n,F,V_j_0,V_i_0,D,G):[[17],21]
     [V_n>=V_i_0+1,V_j_0>=0,G+1=0,F=0,E=2,C=0,B=5,V_m=0] 
* CE 23: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[17],20]
     [V_n>=V_i_0+1,V_j_0>=V_m,V_m>=1,V_m=E+1,D=2,B=5] 
* CE 24: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,C,V_i_0,D,E,F,V_n,V_m,G,V_i_0,D,H):[21]
     [V_n>=V_i_0+1,0>=V_m,V_m=H+1,V_m=G+1,V_m=E+1,V_m=C+1,V_m=V_j_0+1,F=2,B=5] 
* CE 25: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,C,V_i_0,D,E,F,V_n,V_m,G,V_i_0,D,H):[20]
     [V_n>=V_i_0+1,V_m>=1,V_m=H+1,V_m=G+1,V_m=E+1,V_m=C+1,V_m=V_j_0+1,F=2,B=5] 
* CE 26: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 0
     [V_i_0>=V_n,B=5] 
* CE 27: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[[17],18]
     [V_n>=V_i_0+1,V_j_0>=1,D=4,B=4] 
* CE 28: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[18]
     [V_n>=V_i_0+1,V_j_0>=0,D=4,B=4] 
* CE 29: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[[17],19]
     [V_n>=V_i_0+1,V_j_0>=1,D=3,B=3] 
* CE 30: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 1+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,E,F,G,H,I,J):[19]
     [V_n>=V_i_0+1,V_j_0>=0,D=3,B=3] 
* CE 31: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[17],21]+ eval_srch_bb1_in(V_n,V_m,F,G,B)
     [V_n>=V_i_0+1,V_j_0>=0,V_m>=1,V_i_0+1=G,F=0,E+1=0,D=2] 
* CE 32: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[17],20]+ eval_srch_bb1_in(V_n,V_m,F,G,B)
     [V_j_0>=E+1,V_m>=E+2,V_n>=V_i_0+1,E>=0,V_i_0+1=G,E+1=F,D=2] 
* CE 33: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[21]+ eval_srch_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_m>=V_j_0+2,0>=V_j_0+1,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 34: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[20]+ eval_srch_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_m>=V_j_0+2,V_j_0>=0,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 35: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[17],21]+ eval_srch_bb1_in(V_n,V_m,F,G,B)
     [V_n>=V_i_0+1,V_j_0>=0,0>=V_m+1,V_i_0+1=G,F=0,E+1=0,D=2] 
* CE 36: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,E):[[17],20]+ eval_srch_bb1_in(V_n,V_m,F,G,B)
     [V_j_0>=E+1,V_n>=V_i_0+1,E>=V_m,E>=0,V_i_0+1=G,E+1=F,D=2] 
* CE 37: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[21]+ eval_srch_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_j_0>=V_m,0>=V_j_0+1,V_i_0+1=F,V_j_0+1=E,D=2] 
* CE 38: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) = 2+ eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,C,V_j_0,D,V_n,V_m,V_j_0,V_i_0,C,V_j_0):[20]+ eval_srch_bb1_in(V_n,V_m,E,F,B)
     [V_n>=V_i_0+1,V_j_0>=V_m,V_j_0>=0,V_i_0+1=F,V_j_0+1=E,D=2] 

### Cost equations --> "Loop" of eval_srch_bb1_in/5 
* CEs [32] --> Loop 22 
* CEs [36] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [38] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [26] --> Loop 30 
* CEs [23] --> Loop 31 
* CEs [24] --> Loop 32 
* CEs [25] --> Loop 33 
* CEs [27] --> Loop 34 
* CEs [28] --> Loop 35 
* CEs [29] --> Loop 36 
* CEs [30] --> Loop 37 
* CEs [22] --> Loop 38 

#### Loops of eval_srch_bb1_in/5 
* Loop 22: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_j_0>=V_j_0',V_m>=V_j_0'+1,V_n>=V_i_0+1,V_j_0'>=1,V_i_0+1=V_i_0'] 
* Loop 23: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_j_0>=V_j_0',V_n>=V_i_0+1,V_j_0'>=V_m+1,V_j_0'>=1,V_i_0+1=V_i_0'] 
* Loop 24: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_m>=V_j_0+2,V_j_0>=0,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 25: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=V_m,V_j_0>=0,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 26: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_m>=V_j_0+2,0>=V_j_0+1,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 27: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=V_m,0>=V_j_0+1,V_i_0+1=V_i_0',V_j_0+1=V_j_0'] 
* Loop 28: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=0,V_m>=1,V_i_0+1=V_i_0',V_j_0'=0] 
* Loop 29: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B)->  eval_srch_bb1_in(V_n,V_m,V_j_0',V_i_0',B)
                  [V_n>=V_i_0+1,V_j_0>=0,0>=V_m+1,V_i_0+1=V_i_0',V_j_0'=0] 
* Loop 30: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_i_0>=V_n,B=5] 
* Loop 31: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=V_m,V_m>=1,B=5] 
* Loop 32: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,0>=V_m,V_m=V_j_0+1,B=5] 
* Loop 33: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,V_j_0+1=V_m,B=5] 
* Loop 34: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=1,B=4] 
* Loop 35: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=4] 
* Loop 36: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=1,B=3] 
* Loop 37: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=3] 
* Loop 38: eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) [V_n>=V_i_0+1,V_j_0>=0,B=5,V_m=0] 

### Ranking functions of CR eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* RF of phase [22,24,28]: [V_n-V_i_0]
* RF of phase [23,25,29]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* Partial RF of phase [22,24,28]:
  - RF of loop [22:1,24:1,28:1]:
    V_n-V_i_0
  - RF of loop [24:1]:
    V_m-V_j_0-1 depends on loops [22:1,28:1] 
    V_n-V_j_0 depends on loops [22:1,28:1] 
* Partial RF of phase [23,25,29]:
  - RF of loop [23:1,25:1,29:1]:
    V_n-V_i_0
  - RF of loop [25:1]:
    V_n-V_j_0 depends on loops [23:1,29:1] 


### Resulting Chains:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* [[23,25,29],[22,24,28],37]
* [[23,25,29],[22,24,28],36]
* [[23,25,29],[22,24,28],35]
* [[23,25,29],[22,24,28],34]
* [[23,25,29],[22,24,28],33]
* [[23,25,29],[22,24,28],30]
* [[23,25,29],38]
* [[23,25,29],37]
* [[23,25,29],36]
* [[23,25,29],35]
* [[23,25,29],34]
* [[23,25,29],31]
* [[23,25,29],30]
* [[22,24,28],37]
* [[22,24,28],36]
* [[22,24,28],35]
* [[22,24,28],34]
* [[22,24,28],33]
* [[22,24,28],30]
* [38]
* [37]
* [35]
* [33]
* [30]


### Specialization of cost equations loop_cont_eval_srch_bb1_in/2 
* CE 9 is refined into CE [39] 
* CE 11 is refined into CE [40] 
* CE 10 is refined into CE [41] 


#### Refined cost equations loop_cont_eval_srch_bb1_in/2 
* CE 39: loop_cont_eval_srch_bb1_in(D,A) = 0
     [D=5] 
* CE 40: loop_cont_eval_srch_bb1_in(D,A) = 0
     [D=4] 
* CE 41: loop_cont_eval_srch_bb1_in(D,A) = 0
     [D=3] 

### Cost equations --> "Loop" of loop_cont_eval_srch_bb1_in/2 
* CEs [39] --> Loop 39 
* CEs [40] --> Loop 40 
* CEs [41] --> Loop 41 

#### Loops of loop_cont_eval_srch_bb1_in/2 
* Loop 39: loop_cont_eval_srch_bb1_in(D,A) [D=5] 
* Loop 40: loop_cont_eval_srch_bb1_in(D,A) [D=4] 
* Loop 41: loop_cont_eval_srch_bb1_in(D,A) [D=3] 

### Ranking functions of CR loop_cont_eval_srch_bb1_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_srch_bb1_in(D,A) 


### Resulting Chains:loop_cont_eval_srch_bb1_in(D,A) 
* [41]
* [40]
* [39]


### Specialization of cost equations eval_srch_10/3 
* CE 2 is refined into CE [42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58] 


#### Refined cost equations eval_srch_10/3 
* CE 42: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,C,D,E,F):[[23,25,29],38]+ loop_cont_eval_srch_bb1_in(G,B):[39]
     [V_n>=2,G=5,F=5,E=0,D=0,C=0,V_m=0] 
* CE 43: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[23,25,29],37]+ loop_cont_eval_srch_bb1_in(F,B):[41]
     [V_n>=2,0>=V_m,F=3,E=3,D=0,C=0] 
* CE 44: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[23,25,29],36]+ loop_cont_eval_srch_bb1_in(F,B):[41]
     [V_n>=2,0>=V_m,F=3,E=3,D=0,C=0] 
* CE 45: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[23,25,29],35]+ loop_cont_eval_srch_bb1_in(F,B):[40]
     [V_n>=2,0>=V_m,F=4,E=4,D=0,C=0] 
* CE 46: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[23,25,29],34]+ loop_cont_eval_srch_bb1_in(F,B):[40]
     [V_n>=2,0>=V_m,F=4,E=4,D=0,C=0] 
* CE 47: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[23,25,29],30]+ loop_cont_eval_srch_bb1_in(F,B):[39]
     [V_n>=1,0>=V_m,F=5,E=5,D=0,C=0] 
* CE 48: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],37]+ loop_cont_eval_srch_bb1_in(F,B):[41]
     [V_m>=1,V_n>=2,F=3,E=3,D=0,C=0] 
* CE 49: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],36]+ loop_cont_eval_srch_bb1_in(F,B):[41]
     [V_m>=2,V_n>=2,F=3,E=3,D=0,C=0] 
* CE 50: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],35]+ loop_cont_eval_srch_bb1_in(F,B):[40]
     [V_m>=1,V_n>=2,F=4,E=4,D=0,C=0] 
* CE 51: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],34]+ loop_cont_eval_srch_bb1_in(F,B):[40]
     [V_m>=2,V_n>=2,F=4,E=4,D=0,C=0] 
* CE 52: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],33]+ loop_cont_eval_srch_bb1_in(F,B):[39]
     [V_n>=V_m,V_m>=1,V_n>=2,F=5,E=5,D=0,C=0] 
* CE 53: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[[22,24,28],30]+ loop_cont_eval_srch_bb1_in(F,B):[39]
     [V_m>=1,V_n>=1,F=5,E=5,D=0,C=0] 
* CE 54: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,C,D,E,F):[38]+ loop_cont_eval_srch_bb1_in(G,B):[39]
     [V_n>=1,G=5,F=5,E=0,D=0,C=0,V_m=0] 
* CE 55: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[37]+ loop_cont_eval_srch_bb1_in(F,B):[41]
     [V_n>=1,F=3,E=3,D=0,C=0] 
* CE 56: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[35]+ loop_cont_eval_srch_bb1_in(F,B):[40]
     [V_n>=1,F=4,E=4,D=0,C=0] 
* CE 57: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,C,D,E,F):[33]+ loop_cont_eval_srch_bb1_in(G,B):[39]
     [V_n>=1,G=5,F=5,E=0,D=0,C=1,V_m=1] 
* CE 58: eval_srch_10(V_n,V_m,B) = 1+ eval_srch_bb1_in(V_n,V_m,C,D,E):[30]+ loop_cont_eval_srch_bb1_in(F,B):[39]
     [0>=V_n,F=5,E=5,D=0,C=0] 

### Cost equations --> "Loop" of eval_srch_10/3 
* CEs [51] --> Loop 42 
* CEs [49] --> Loop 43 
* CEs [52] --> Loop 44 
* CEs [50] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [53] --> Loop 47 
* CEs [56] --> Loop 48 
* CEs [55] --> Loop 49 
* CEs [46] --> Loop 50 
* CEs [45] --> Loop 51 
* CEs [44] --> Loop 52 
* CEs [43] --> Loop 53 
* CEs [47] --> Loop 54 
* CEs [58] --> Loop 55 
* CEs [57] --> Loop 56 
* CEs [42] --> Loop 57 
* CEs [54] --> Loop 58 

#### Loops of eval_srch_10/3 
* Loop 42: eval_srch_10(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 43: eval_srch_10(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 44: eval_srch_10(V_n,V_m,B) [V_n>=V_m,V_m>=1,V_n>=2] 
* Loop 45: eval_srch_10(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 46: eval_srch_10(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 47: eval_srch_10(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 48: eval_srch_10(V_n,V_m,B) [V_n>=1] 
* Loop 49: eval_srch_10(V_n,V_m,B) [V_n>=1] 
* Loop 50: eval_srch_10(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 51: eval_srch_10(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 52: eval_srch_10(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 53: eval_srch_10(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 54: eval_srch_10(V_n,V_m,B) [V_n>=1,0>=V_m] 
* Loop 55: eval_srch_10(V_n,V_m,B) [0>=V_n] 
* Loop 56: eval_srch_10(V_n,V_m,B) [V_n>=1,V_m=1] 
* Loop 57: eval_srch_10(V_n,V_m,B) [V_n>=2,V_m=0] 
* Loop 58: eval_srch_10(V_n,V_m,B) [V_n>=1,V_m=0] 

### Ranking functions of CR eval_srch_10(V_n,V_m,B) 

#### Partial ranking functions of CR eval_srch_10(V_n,V_m,B) 


### Resulting Chains:eval_srch_10(V_n,V_m,B) 
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]


### Specialization of cost equations eval_srch_start/3 
* CE 1 is refined into CE [59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75] 


#### Refined cost equations eval_srch_start/3 
* CE 59: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,C,B):[58]
     [V_n>=1,C=0,V_m=0] 
* CE 60: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,C,B):[57]
     [V_n>=2,C=0,V_m=0] 
* CE 61: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,C,B):[56]
     [V_n>=1,C=1,V_m=1] 
* CE 62: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[55]
     [0>=V_n] 
* CE 63: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[54]
     [V_n>=1,0>=V_m] 
* CE 64: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[53]
     [V_n>=2,0>=V_m] 
* CE 65: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[52]
     [V_n>=2,0>=V_m] 
* CE 66: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[51]
     [V_n>=2,0>=V_m] 
* CE 67: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[50]
     [V_n>=2,0>=V_m] 
* CE 68: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[49]
     [V_n>=1] 
* CE 69: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[48]
     [V_n>=1] 
* CE 70: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[47]
     [V_m>=1,V_n>=1] 
* CE 71: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[46]
     [V_m>=1,V_n>=2] 
* CE 72: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[45]
     [V_m>=1,V_n>=2] 
* CE 73: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[44]
     [V_n>=V_m,V_m>=1,V_n>=2] 
* CE 74: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[43]
     [V_m>=2,V_n>=2] 
* CE 75: eval_srch_start(V_n,V_m,B) = 0+ eval_srch_10(V_n,V_m,B):[42]
     [V_m>=2,V_n>=2] 

### Cost equations --> "Loop" of eval_srch_start/3 
* CEs [75] --> Loop 59 
* CEs [74] --> Loop 60 
* CEs [73] --> Loop 61 
* CEs [72] --> Loop 62 
* CEs [71] --> Loop 63 
* CEs [70] --> Loop 64 
* CEs [69] --> Loop 65 
* CEs [68] --> Loop 66 
* CEs [67] --> Loop 67 
* CEs [66] --> Loop 68 
* CEs [65] --> Loop 69 
* CEs [64] --> Loop 70 
* CEs [63] --> Loop 71 
* CEs [62] --> Loop 72 
* CEs [61] --> Loop 73 
* CEs [60] --> Loop 74 
* CEs [59] --> Loop 75 

#### Loops of eval_srch_start/3 
* Loop 59: eval_srch_start(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 60: eval_srch_start(V_n,V_m,B) [V_m>=2,V_n>=2] 
* Loop 61: eval_srch_start(V_n,V_m,B) [V_n>=V_m,V_m>=1,V_n>=2] 
* Loop 62: eval_srch_start(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 63: eval_srch_start(V_n,V_m,B) [V_m>=1,V_n>=2] 
* Loop 64: eval_srch_start(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 65: eval_srch_start(V_n,V_m,B) [V_n>=1] 
* Loop 66: eval_srch_start(V_n,V_m,B) [V_n>=1] 
* Loop 67: eval_srch_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 68: eval_srch_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 69: eval_srch_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 70: eval_srch_start(V_n,V_m,B) [V_n>=2,0>=V_m] 
* Loop 71: eval_srch_start(V_n,V_m,B) [V_n>=1,0>=V_m] 
* Loop 72: eval_srch_start(V_n,V_m,B) [0>=V_n] 
* Loop 73: eval_srch_start(V_n,V_m,B) [V_n>=1,V_m=1] 
* Loop 74: eval_srch_start(V_n,V_m,B) [V_n>=2,V_m=0] 
* Loop 75: eval_srch_start(V_n,V_m,B) [V_n>=1,V_m=0] 

### Ranking functions of CR eval_srch_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_srch_start(V_n,V_m,B) 


### Resulting Chains:eval_srch_start(V_n,V_m,B) 
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_srch_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [17]:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_srch_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(17)+0
  Such that:it(17) =< V_j_1+1
it(17) =< V_j_1-V_j_1'

#### Cost of phase [17]:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_srch_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(17)+0
  Such that:it(17) =< V_j_1+1
it(17) =< V_j_1-V_j_1'

#### Cost of phase [17]:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_srch_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(17)+0
  Such that:it(17) =< V_j_1+1
it(17) =< V_j_1-V_j_1'

#### Cost of phase [17]:eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H) -> [eval_srch_bb3_in(V_n',V_m',V_j_0',V_i_0',V_3',V_j_1',B',C',D',E',F',G',H')] 
1*it(17)+0
  Such that:it(17) =< V_j_1+1
it(17) =< V_j_1-V_j_1'

#### Cost of chains of eval_srch_bb3_in(V_n,V_m,V_j_0,V_i_0,V_3,V_j_1,B,C,D,E,F,G,H):
* Chain [[17],21]: 1*it(17)+0
  Such that:it(17) =< V_j_1+1

  with precondition: [B=2,H+1=0,V_n=C,V_m=D,V_j_0=E,V_i_0=F,V_3=G,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [[17],20]: 1*it(17)+0
  Such that:it(17) =< V_j_1-H

  with precondition: [B=2,V_n=C,V_m=D,V_j_0=E,V_i_0=F,V_3=G,H>=0,V_n>=V_i_0+1,V_j_0>=V_j_1,V_j_1>=H+1] 

* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< V_j_1

  with precondition: [B=3,V_j_1>=1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V_j_1

  with precondition: [B=4,V_j_1>=1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [21]: 0
  with precondition: [B=2,D=V_m,G=V_3,V_n=C,V_j_0=E,V_i_0=F,V_j_1=H,0>=V_j_1+1,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [20]: 0
  with precondition: [B=2,D=V_m,G=V_3,V_n=C,V_j_0=E,V_i_0=F,V_j_1=H,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [19]: 0
  with precondition: [B=3,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 

* Chain [18]: 0
  with precondition: [B=4,V_j_1>=0,V_n>=V_i_0+1,V_j_0>=V_j_1] 


#### Cost of loops [22,24,28] 

 * loop 22:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_j_0-V_j_0'+1

 * loop 24:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 28:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_j_0+1

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of loops [23,25,29] 

 * loop 23:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(8)+2
  Such that:s(8) =< V_j_0-V_j_0'+1

 * loop 25:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2
 * loop 29:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_j_0+1

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [22,24,28]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(9) =< V_n-V_j_0-V_n'+V_j_0'
aux(6) =< V_m-V_j_0
aux(12) =< V_m-V_j_0-V_m'+V_j_0'
aux(21) =< V_n+V_j_0-V_i_0
aux(22) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(23) =< V_n-V_i_0
aux(24) =< V_n-V_i_0-V_n'+V_i_0'
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(23)
it(24) =< aux(23)
it(28) =< aux(23)
it(22) =< aux(24)
it(24) =< aux(24)
it(28) =< aux(24)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(12)
it(24) =< aux(2)+aux(1)+aux(9)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of phase [23,25,29]:eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B) -> [eval_srch_bb1_in(V_n',V_m',V_j_0',V_i_0',B')] 
2*it(23)+2*it(25)+2*it(29)+1*s(11)+1*s(12)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(33) =< V_n-V_j_0-V_n'+V_j_0'
s(12) =< V_n+V_j_0-V_i_0
s(12) =< V_n+V_j_0-V_i_0-V_n'-V_j_0'+V_i_0'
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(39) =< V_n-V_m+V_j_0-V_i_0-V_n'+V_m'-V_j_0'+V_i_0'
aux(40) =< V_n-V_i_0
aux(41) =< V_n-V_i_0-V_n'+V_i_0'
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(39)
s(11) =< aux(39)
it(23) =< aux(40)
it(25) =< aux(40)
it(29) =< aux(40)
it(23) =< aux(41)
it(25) =< aux(41)
it(29) =< aux(41)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(33)

#### Cost of chains of eval_srch_bb1_in(V_n,V_m,V_j_0,V_i_0,B):
* Chain [[23,25,29],[22,24,28],37]: 2*it(22)+2*it(23)+2*it(24)+2*it(25)+2*it(28)+2*it(29)+2*s(5)+1*s(11)+1*s(12)+1
  Such that:aux(30) =< V_n-V_j_0
aux(42) =< V_n
aux(43) =< V_n-V_m+V_j_0-V_i_0
aux(44) =< V_n+V_j_0-V_i_0
aux(45) =< V_n-V_i_0
aux(46) =< 2*V_n-V_i_0
s(12) =< aux(44)
s(5) =< aux(46)
it(28) =< aux(46)
it(22) =< aux(43)
it(24) =< aux(43)
it(28) =< aux(43)
aux(17) =< aux(42)+1
aux(1) =< it(22)*aux(42)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(46)
it(29) =< aux(43)
s(11) =< aux(43)
it(29) =< aux(44)
s(11) =< aux(44)
it(23) =< aux(45)
it(25) =< aux(45)
it(29) =< aux(45)
it(23) =< aux(46)
it(25) =< aux(46)
it(29) =< aux(46)
aux(28) =< it(23)*aux(42)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(45)

  with precondition: [B=3,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[23,25,29],[22,24,28],36]: 2*it(22)+4*it(23)+2*it(24)+2*it(25)+2*it(29)+3*s(5)+1*s(11)+1*s(12)+1
  Such that:aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(50) =< V_n
aux(51) =< V_n+V_j_0-V_i_0
aux(52) =< V_n-V_i_0
aux(53) =< 2*V_n-V_i_0
s(12) =< aux(51)
s(5) =< aux(53)
it(23) =< aux(53)
it(22) =< aux(52)
it(24) =< aux(52)
it(23) =< aux(52)
aux(17) =< aux(50)+1
aux(1) =< it(22)*aux(50)
aux(2) =< it(23)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(53)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(51)
s(11) =< aux(51)
it(25) =< aux(52)
it(29) =< aux(52)
it(25) =< aux(53)
it(29) =< aux(53)
aux(28) =< it(23)*aux(50)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(52)

  with precondition: [B=3,V_m>=2,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[23,25,29],[22,24,28],35]: 2*it(22)+4*it(23)+2*it(24)+2*it(25)+2*it(29)+2*s(5)+1*s(11)+1*s(12)+1
  Such that:aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(57) =< V_n
aux(58) =< V_n+V_j_0-V_i_0
aux(59) =< V_n-V_i_0
aux(60) =< 2*V_n-V_i_0
s(12) =< aux(58)
s(5) =< aux(60)
it(23) =< aux(60)
it(22) =< aux(59)
it(24) =< aux(59)
it(23) =< aux(59)
aux(17) =< aux(57)+1
aux(1) =< it(22)*aux(57)
aux(2) =< it(23)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(60)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(58)
s(11) =< aux(58)
it(25) =< aux(59)
it(29) =< aux(59)
it(25) =< aux(60)
it(29) =< aux(60)
aux(28) =< it(23)*aux(57)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(59)

  with precondition: [B=4,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[23,25,29],[22,24,28],34]: 2*it(22)+4*it(23)+2*it(24)+2*it(25)+2*it(29)+3*s(5)+1*s(11)+1*s(12)+1
  Such that:aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(64) =< V_n
aux(65) =< V_n+V_j_0-V_i_0
aux(66) =< V_n-V_i_0
aux(67) =< 2*V_n-V_i_0
s(12) =< aux(65)
s(5) =< aux(67)
it(23) =< aux(67)
it(22) =< aux(66)
it(24) =< aux(66)
it(23) =< aux(66)
aux(17) =< aux(64)+1
aux(1) =< it(22)*aux(64)
aux(2) =< it(23)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(67)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(65)
s(11) =< aux(65)
it(25) =< aux(66)
it(29) =< aux(66)
it(25) =< aux(67)
it(29) =< aux(67)
aux(28) =< it(23)*aux(64)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(66)

  with precondition: [B=4,V_m>=2,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[23,25,29],[22,24,28],33]: 4*it(22)+2*it(23)+2*it(24)+2*it(25)+2*it(28)+2*it(29)+2*s(5)+1
  Such that:aux(30) =< V_n-V_j_0
aux(22) =< 2*V_n-V_m-V_i_0
aux(70) =< V_n
aux(71) =< V_n-V_m+V_j_0-V_i_0
aux(72) =< V_n-V_i_0
aux(73) =< 2*V_n-V_i_0
it(22) =< aux(71)
s(5) =< aux(73)
it(28) =< aux(22)
s(5) =< aux(22)
it(24) =< aux(71)
it(28) =< aux(71)
aux(17) =< aux(70)+1
aux(1) =< it(22)*aux(70)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(73)
it(29) =< aux(71)
it(23) =< aux(72)
it(25) =< aux(72)
it(29) =< aux(72)
it(23) =< aux(73)
it(25) =< aux(73)
it(29) =< aux(73)
aux(28) =< it(23)*aux(70)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(72)

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+3] 

* Chain [[23,25,29],[22,24,28],30]: 2*it(22)+4*it(23)+2*it(24)+2*it(25)+2*it(29)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(76) =< V_n
aux(77) =< V_n+V_j_0-V_i_0
aux(78) =< V_n-V_i_0
aux(79) =< 2*V_n-V_i_0
s(12) =< aux(77)
s(5) =< aux(79)
it(23) =< aux(79)
it(22) =< aux(78)
it(24) =< aux(78)
it(23) =< aux(78)
aux(17) =< aux(76)+1
aux(1) =< it(22)*aux(76)
aux(2) =< it(23)*aux(17)
it(24) =< aux(2)+aux(1)
it(24) =< aux(2)+aux(1)+aux(79)
it(24) =< aux(2)+aux(1)+aux(78)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(77)
s(11) =< aux(77)
it(25) =< aux(78)
it(29) =< aux(78)
it(25) =< aux(79)
it(29) =< aux(79)
aux(28) =< it(23)*aux(76)
aux(29) =< it(29)*aux(17)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(78)

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],38]: 2*it(23)+2*it(25)+2*it(29)+3*s(11)+1
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(80) =< V_n+V_j_0-V_i_0
aux(81) =< V_n-V_i_0
s(11) =< aux(80)
it(29) =< aux(80)
it(23) =< aux(81)
it(25) =< aux(81)
it(29) =< aux(81)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(81)

  with precondition: [V_m=0,B=5,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],37]: 2*it(23)+2*it(25)+2*it(29)+2*s(11)+1
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(82) =< V_n-V_m+V_j_0-V_i_0
aux(83) =< V_n-V_i_0
s(11) =< aux(82)
it(29) =< aux(82)
it(23) =< aux(83)
it(25) =< aux(83)
it(29) =< aux(83)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(83)

  with precondition: [B=3,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],36]: 2*it(23)+2*it(25)+2*it(29)+1*s(11)+2*s(12)+1
  Such that:aux(34) =< V_n
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(84) =< V_n+V_j_0-V_i_0
aux(85) =< V_n-V_i_0
s(12) =< aux(84)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(84)
s(11) =< aux(84)
it(23) =< aux(85)
it(25) =< aux(85)
it(29) =< aux(85)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(85)

  with precondition: [B=3,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],35]: 2*it(23)+2*it(25)+2*it(29)+2*s(11)+1
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(86) =< V_n-V_m+V_j_0-V_i_0
aux(87) =< V_n-V_i_0
s(11) =< aux(86)
it(29) =< aux(86)
it(23) =< aux(87)
it(25) =< aux(87)
it(29) =< aux(87)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(87)

  with precondition: [B=4,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],34]: 2*it(23)+2*it(25)+2*it(29)+1*s(11)+2*s(12)+1
  Such that:aux(34) =< V_n
aux(38) =< V_n-V_m+V_j_0-V_i_0
aux(30) =< V_n-V_j_0
aux(88) =< V_n+V_j_0-V_i_0
aux(89) =< V_n-V_i_0
s(12) =< aux(88)
it(29) =< aux(38)
s(11) =< aux(38)
it(29) =< aux(88)
s(11) =< aux(88)
it(23) =< aux(89)
it(25) =< aux(89)
it(29) =< aux(89)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(89)

  with precondition: [B=4,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],31]: 2*it(23)+2*it(25)+2*it(29)+3*s(11)+1
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(90) =< V_n-V_m+V_j_0-V_i_0
aux(91) =< V_n-V_i_0
s(11) =< aux(90)
it(29) =< aux(90)
it(23) =< aux(91)
it(25) =< aux(91)
it(29) =< aux(91)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(91)

  with precondition: [B=5,V_m>=1,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[23,25,29],30]: 2*it(23)+2*it(25)+2*it(29)+2*s(11)+0
  Such that:aux(34) =< V_n
aux(30) =< V_n-V_j_0
aux(92) =< V_n-V_m+V_j_0-V_i_0
aux(93) =< V_n-V_i_0
s(11) =< aux(92)
it(29) =< aux(92)
it(23) =< aux(93)
it(25) =< aux(93)
it(29) =< aux(93)
aux(36) =< aux(34)+1
aux(28) =< it(23)*aux(34)
aux(29) =< it(29)*aux(36)
it(25) =< aux(29)+aux(28)+aux(30)
it(25) =< aux(29)+aux(28)+aux(93)

  with precondition: [B=5,V_j_0>=0,V_j_0>=V_m,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [[22,24,28],37]: 2*it(22)+2*it(24)+2*it(28)+2*s(5)+1
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(25) =< V_n+V_j_0-V_i_0
aux(26) =< V_n-V_i_0
aux(27) =< V_m-V_j_0
s(5) =< aux(25)
it(28) =< aux(25)
it(22) =< aux(26)
it(24) =< aux(26)
it(28) =< aux(26)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(27)
it(24) =< aux(2)+aux(1)+aux(3)

  with precondition: [B=3,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],36]: 2*it(22)+2*it(24)+2*it(28)+3*s(5)+1
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(47) =< V_n+V_j_0-V_i_0
aux(48) =< V_n-V_i_0
aux(49) =< V_m-V_j_0
s(5) =< aux(47)
it(28) =< aux(47)
it(22) =< aux(48)
it(24) =< aux(48)
it(28) =< aux(48)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(49)
it(24) =< aux(2)+aux(1)+aux(3)

  with precondition: [B=3,V_m>=2,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],35]: 2*it(22)+2*it(24)+2*it(28)+2*s(5)+1
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(54) =< V_n+V_j_0-V_i_0
aux(55) =< V_n-V_i_0
aux(56) =< V_m-V_j_0
s(5) =< aux(54)
it(28) =< aux(54)
it(22) =< aux(55)
it(24) =< aux(55)
it(28) =< aux(55)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(56)
it(24) =< aux(2)+aux(1)+aux(3)

  with precondition: [B=4,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],34]: 2*it(22)+2*it(24)+2*it(28)+3*s(5)+1
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(61) =< V_n+V_j_0-V_i_0
aux(62) =< V_n-V_i_0
aux(63) =< V_m-V_j_0
s(5) =< aux(61)
it(28) =< aux(61)
it(22) =< aux(62)
it(24) =< aux(62)
it(28) =< aux(62)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(63)
it(24) =< aux(2)+aux(1)+aux(3)

  with precondition: [B=4,V_m>=2,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2] 

* Chain [[22,24,28],33]: 2*it(22)+2*it(24)+2*it(28)+2*s(5)+1
  Such that:aux(13) =< V_n
aux(22) =< V_n-V_m+V_j_0-V_i_0
aux(3) =< V_n-V_j_0
aux(21) =< V_n+V_j_0-V_i_0
aux(68) =< V_n-V_i_0
aux(69) =< V_m-V_j_0
s(5) =< aux(21)
it(28) =< aux(22)
s(5) =< aux(22)
it(22) =< aux(68)
it(24) =< aux(68)
it(28) =< aux(68)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(69)
it(24) =< aux(2)+aux(1)+aux(3)

  with precondition: [B=5,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+2,V_j_0+V_n>=V_i_0+V_m] 

* Chain [[22,24,28],30]: 2*it(22)+2*it(24)+2*it(28)+2*s(5)+0
  Such that:aux(13) =< V_n
aux(3) =< V_n-V_j_0
aux(6) =< V_m-V_j_0
aux(74) =< V_n+V_j_0-V_i_0
aux(75) =< V_n-V_i_0
s(5) =< aux(74)
it(28) =< aux(74)
it(22) =< aux(75)
it(24) =< aux(75)
it(28) =< aux(75)
aux(17) =< aux(13)+1
aux(1) =< it(22)*aux(13)
aux(2) =< it(28)*aux(17)
it(24) =< aux(2)+aux(1)+aux(6)
it(24) =< aux(2)+aux(1)+aux(3)
it(24) =< aux(2)+aux(1)+aux(75)

  with precondition: [B=5,V_m>=1,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [38]: 1*s(15)+1
  Such that:s(15) =< V_j_0+1

  with precondition: [V_m=0,B=5,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [37]: 1
  with precondition: [B=3,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [35]: 1
  with precondition: [B=4,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [33]: 1
  with precondition: [B=5,V_j_0+1=V_m,V_j_0>=0,V_i_0>=V_j_0,V_n>=V_i_0+1] 

* Chain [30]: 0
  with precondition: [B=5,V_j_0>=0,V_i_0>=V_n,V_i_0>=V_j_0] 


#### Cost of chains of loop_cont_eval_srch_bb1_in(D,A):
* Chain [41]: 0
  with precondition: [D=3] 

* Chain [40]: 0
  with precondition: [D=4] 

* Chain [39]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_srch_10(V_n,V_m,B):
* Chain [58]: 1*s(17)+2
  Such that:s(17) =< 1

  with precondition: [V_m=0,V_n>=1] 

* Chain [57]: 7*s(22)+2*s(25)+2
  Such that:aux(94) =< V_n
s(22) =< aux(94)
s(25) =< aux(94)
s(26) =< aux(94)+1
s(27) =< s(22)*aux(94)
s(28) =< s(22)*s(26)
s(25) =< s(28)+s(27)+aux(94)

  with precondition: [V_m=0,V_n>=2] 

* Chain [56]: 2
  with precondition: [V_m=1,V_n>=1] 

* Chain [55]: 1
  with precondition: [0>=V_n] 

* Chain [54]: 2*s(33)+2*s(34)+2*s(35)+2*s(36)+1
  Such that:s(31) =< V_n-V_m
aux(95) =< V_n
s(33) =< s(31)
s(34) =< s(31)
s(35) =< aux(95)
s(36) =< aux(95)
s(34) =< aux(95)
s(37) =< aux(95)+1
s(38) =< s(35)*aux(95)
s(39) =< s(34)*s(37)
s(36) =< s(39)+s(38)+aux(95)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [53]: 2*s(44)+2*s(45)+2*s(46)+2*s(47)+2
  Such that:s(42) =< V_n-V_m
aux(96) =< V_n
s(44) =< s(42)
s(45) =< s(42)
s(46) =< aux(96)
s(47) =< aux(96)
s(45) =< aux(96)
s(48) =< aux(96)+1
s(49) =< s(46)*aux(96)
s(50) =< s(45)*s(48)
s(47) =< s(50)+s(49)+aux(96)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [52]: 4*s(56)+3*s(57)+2*s(60)+2
  Such that:s(52) =< V_n-V_m
aux(97) =< V_n
s(56) =< aux(97)
s(57) =< s(52)
s(57) =< aux(97)
s(60) =< aux(97)
s(61) =< aux(97)+1
s(62) =< s(56)*aux(97)
s(63) =< s(57)*s(61)
s(60) =< s(63)+s(62)+aux(97)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [51]: 2*s(68)+2*s(69)+2*s(70)+2*s(71)+2
  Such that:s(66) =< V_n-V_m
aux(98) =< V_n
s(68) =< s(66)
s(69) =< s(66)
s(70) =< aux(98)
s(71) =< aux(98)
s(69) =< aux(98)
s(72) =< aux(98)+1
s(73) =< s(70)*aux(98)
s(74) =< s(69)*s(72)
s(71) =< s(74)+s(73)+aux(98)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [50]: 4*s(80)+3*s(81)+2*s(84)+2
  Such that:s(76) =< V_n-V_m
aux(99) =< V_n
s(80) =< aux(99)
s(81) =< s(76)
s(81) =< aux(99)
s(84) =< aux(99)
s(85) =< aux(99)+1
s(86) =< s(80)*aux(99)
s(87) =< s(81)*s(85)
s(84) =< s(87)+s(86)+aux(99)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [49]: 2
  with precondition: [V_n>=1] 

* Chain [48]: 2
  with precondition: [V_n>=1] 

* Chain [47]: 6*s(93)+2*s(96)+1
  Such that:s(90) =< V_m
aux(100) =< V_n
s(93) =< aux(100)
s(96) =< aux(100)
s(97) =< aux(100)+1
s(98) =< s(93)*aux(100)
s(99) =< s(93)*s(97)
s(96) =< s(99)+s(98)+s(90)
s(96) =< s(99)+s(98)+aux(100)

  with precondition: [V_n>=1,V_m>=1] 

* Chain [46]: 6*s(105)+2*s(108)+2
  Such that:s(104) =< V_m
aux(101) =< V_n
s(105) =< aux(101)
s(108) =< aux(101)
s(109) =< aux(101)+1
s(110) =< s(105)*aux(101)
s(111) =< s(105)*s(109)
s(108) =< s(111)+s(110)+s(104)
s(108) =< s(111)+s(110)+aux(101)

  with precondition: [V_n>=2,V_m>=1] 

* Chain [45]: 6*s(117)+2*s(120)+2
  Such that:s(116) =< V_m
aux(102) =< V_n
s(117) =< aux(102)
s(120) =< aux(102)
s(121) =< aux(102)+1
s(122) =< s(117)*aux(102)
s(123) =< s(117)*s(121)
s(120) =< s(123)+s(122)+s(116)
s(120) =< s(123)+s(122)+aux(102)

  with precondition: [V_n>=2,V_m>=1] 

* Chain [44]: 4*s(130)+2*s(132)+2*s(133)+2
  Such that:s(125) =< V_n-V_m
s(129) =< V_m
aux(103) =< V_n
s(130) =< aux(103)
s(130) =< s(125)
s(132) =< aux(103)
s(133) =< aux(103)
s(134) =< aux(103)+1
s(135) =< s(132)*aux(103)
s(136) =< s(130)*s(134)
s(133) =< s(136)+s(135)+s(129)
s(133) =< s(136)+s(135)+aux(103)

  with precondition: [V_n>=2,V_m>=1,V_n>=V_m] 

* Chain [43]: 7*s(142)+2*s(145)+2
  Such that:s(141) =< V_m
aux(104) =< V_n
s(142) =< aux(104)
s(145) =< aux(104)
s(146) =< aux(104)+1
s(147) =< s(142)*aux(104)
s(148) =< s(142)*s(146)
s(145) =< s(148)+s(147)+s(141)
s(145) =< s(148)+s(147)+aux(104)

  with precondition: [V_n>=2,V_m>=2] 

* Chain [42]: 7*s(154)+2*s(157)+2
  Such that:s(153) =< V_m
aux(105) =< V_n
s(154) =< aux(105)
s(157) =< aux(105)
s(158) =< aux(105)+1
s(159) =< s(154)*aux(105)
s(160) =< s(154)*s(158)
s(157) =< s(160)+s(159)+s(153)
s(157) =< s(160)+s(159)+aux(105)

  with precondition: [V_n>=2,V_m>=2] 


#### Cost of chains of eval_srch_start(V_n,V_m,B):
* Chain [75]: 1*s(161)+2
  Such that:s(161) =< 1

  with precondition: [V_m=0,V_n>=1] 

* Chain [74]: 7*s(163)+2*s(164)+2
  Such that:s(162) =< V_n
s(163) =< s(162)
s(164) =< s(162)
s(165) =< s(162)+1
s(166) =< s(163)*s(162)
s(167) =< s(163)*s(165)
s(164) =< s(167)+s(166)+s(162)

  with precondition: [V_m=0,V_n>=2] 

* Chain [73]: 2
  with precondition: [V_m=1,V_n>=1] 

* Chain [72]: 1
  with precondition: [0>=V_n] 

* Chain [71]: 2*s(170)+2*s(171)+2*s(172)+2*s(173)+1
  Such that:s(169) =< V_n
s(168) =< V_n-V_m
s(170) =< s(168)
s(171) =< s(168)
s(172) =< s(169)
s(173) =< s(169)
s(171) =< s(169)
s(174) =< s(169)+1
s(175) =< s(172)*s(169)
s(176) =< s(171)*s(174)
s(173) =< s(176)+s(175)+s(169)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [70]: 2*s(179)+2*s(180)+2*s(181)+2*s(182)+2
  Such that:s(178) =< V_n
s(177) =< V_n-V_m
s(179) =< s(177)
s(180) =< s(177)
s(181) =< s(178)
s(182) =< s(178)
s(180) =< s(178)
s(183) =< s(178)+1
s(184) =< s(181)*s(178)
s(185) =< s(180)*s(183)
s(182) =< s(185)+s(184)+s(178)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [69]: 4*s(188)+3*s(189)+2*s(190)+2
  Such that:s(187) =< V_n
s(186) =< V_n-V_m
s(188) =< s(187)
s(189) =< s(186)
s(189) =< s(187)
s(190) =< s(187)
s(191) =< s(187)+1
s(192) =< s(188)*s(187)
s(193) =< s(189)*s(191)
s(190) =< s(193)+s(192)+s(187)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [68]: 2*s(196)+2*s(197)+2*s(198)+2*s(199)+2
  Such that:s(195) =< V_n
s(194) =< V_n-V_m
s(196) =< s(194)
s(197) =< s(194)
s(198) =< s(195)
s(199) =< s(195)
s(197) =< s(195)
s(200) =< s(195)+1
s(201) =< s(198)*s(195)
s(202) =< s(197)*s(200)
s(199) =< s(202)+s(201)+s(195)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [67]: 4*s(205)+3*s(206)+2*s(207)+2
  Such that:s(204) =< V_n
s(203) =< V_n-V_m
s(205) =< s(204)
s(206) =< s(203)
s(206) =< s(204)
s(207) =< s(204)
s(208) =< s(204)+1
s(209) =< s(205)*s(204)
s(210) =< s(206)*s(208)
s(207) =< s(210)+s(209)+s(204)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [66]: 2
  with precondition: [V_n>=1] 

* Chain [65]: 2
  with precondition: [V_n>=1] 

* Chain [64]: 6*s(213)+2*s(214)+1
  Such that:s(212) =< V_n
s(211) =< V_m
s(213) =< s(212)
s(214) =< s(212)
s(215) =< s(212)+1
s(216) =< s(213)*s(212)
s(217) =< s(213)*s(215)
s(214) =< s(217)+s(216)+s(211)
s(214) =< s(217)+s(216)+s(212)

  with precondition: [V_n>=1,V_m>=1] 

* Chain [63]: 6*s(220)+2*s(221)+2
  Such that:s(219) =< V_n
s(218) =< V_m
s(220) =< s(219)
s(221) =< s(219)
s(222) =< s(219)+1
s(223) =< s(220)*s(219)
s(224) =< s(220)*s(222)
s(221) =< s(224)+s(223)+s(218)
s(221) =< s(224)+s(223)+s(219)

  with precondition: [V_n>=2,V_m>=1] 

* Chain [62]: 6*s(227)+2*s(228)+2
  Such that:s(226) =< V_n
s(225) =< V_m
s(227) =< s(226)
s(228) =< s(226)
s(229) =< s(226)+1
s(230) =< s(227)*s(226)
s(231) =< s(227)*s(229)
s(228) =< s(231)+s(230)+s(225)
s(228) =< s(231)+s(230)+s(226)

  with precondition: [V_n>=2,V_m>=1] 

* Chain [61]: 4*s(235)+2*s(236)+2*s(237)+2
  Such that:s(234) =< V_n
s(232) =< V_n-V_m
s(233) =< V_m
s(235) =< s(234)
s(235) =< s(232)
s(236) =< s(234)
s(237) =< s(234)
s(238) =< s(234)+1
s(239) =< s(236)*s(234)
s(240) =< s(235)*s(238)
s(237) =< s(240)+s(239)+s(233)
s(237) =< s(240)+s(239)+s(234)

  with precondition: [V_n>=2,V_m>=1,V_n>=V_m] 

* Chain [60]: 7*s(243)+2*s(244)+2
  Such that:s(242) =< V_n
s(241) =< V_m
s(243) =< s(242)
s(244) =< s(242)
s(245) =< s(242)+1
s(246) =< s(243)*s(242)
s(247) =< s(243)*s(245)
s(244) =< s(247)+s(246)+s(241)
s(244) =< s(247)+s(246)+s(242)

  with precondition: [V_n>=2,V_m>=2] 

* Chain [59]: 7*s(250)+2*s(251)+2
  Such that:s(249) =< V_n
s(248) =< V_m
s(250) =< s(249)
s(251) =< s(249)
s(252) =< s(249)+1
s(253) =< s(250)*s(249)
s(254) =< s(250)*s(252)
s(251) =< s(254)+s(253)+s(248)
s(251) =< s(254)+s(253)+s(249)

  with precondition: [V_n>=2,V_m>=2] 


Closed-form bounds of eval_srch_start(V_n,V_m,B): 
-------------------------------------
* Chain [75] with precondition: [V_m=0,V_n>=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [74] with precondition: [V_m=0,V_n>=2] 
    - Upper bound: 9*V_n+2 
    - Complexity: n 
* Chain [73] with precondition: [V_m=1,V_n>=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [72] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [71] with precondition: [0>=V_m,V_n>=1] 
    - Upper bound: 8*V_n-4*V_m+1 
    - Complexity: n 
* Chain [70] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: 8*V_n-4*V_m+2 
    - Complexity: n 
* Chain [69] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: 9*V_n-3*V_m+2 
    - Complexity: n 
* Chain [68] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: 8*V_n-4*V_m+2 
    - Complexity: n 
* Chain [67] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: 9*V_n-3*V_m+2 
    - Complexity: n 
* Chain [66] with precondition: [V_n>=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [65] with precondition: [V_n>=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [64] with precondition: [V_n>=1,V_m>=1] 
    - Upper bound: 8*V_n+1 
    - Complexity: n 
* Chain [63] with precondition: [V_n>=2,V_m>=1] 
    - Upper bound: 8*V_n+2 
    - Complexity: n 
* Chain [62] with precondition: [V_n>=2,V_m>=1] 
    - Upper bound: 8*V_n+2 
    - Complexity: n 
* Chain [61] with precondition: [V_n>=2,V_m>=1,V_n>=V_m] 
    - Upper bound: 8*V_n+2 
    - Complexity: n 
* Chain [60] with precondition: [V_n>=2,V_m>=2] 
    - Upper bound: 9*V_n+2 
    - Complexity: n 
* Chain [59] with precondition: [V_n>=2,V_m>=2] 
    - Upper bound: 9*V_n+2 
    - Complexity: n 

### Maximum cost of eval_srch_start(V_n,V_m,B): max([2,nat(V_n)*4+max([nat(V_n)*2+max([nat(V_n)*2+max([1,nat(V_n)+1]),nat(V_n-V_m)*3+1]),nat(V_n-V_m)*4+1])])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 68 ms.
* Invariants computed in 186 ms.
   - Backward Invariants 126 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 220 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 689 ms.
   - Equation cost structures 113 ms.
   - Phase cost structures 185 ms.
   - Chain cost structures 382 ms.
   - Solving cost expressions 10 ms.
* Total analysis performed in 1244 ms.

