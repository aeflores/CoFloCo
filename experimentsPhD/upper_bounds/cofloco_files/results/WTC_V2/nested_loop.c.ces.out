Warning: Ignored call to eval_nestedLoop_stop/1 in equation eval_nestedLoop__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_nestedLoop__critedge_in/1]
1. recursive  : [eval_nestedLoop_10/18,eval_nestedLoop_11/19,eval_nestedLoop_bb5_in/18,eval_nestedLoop_bb6_in/18,eval_nestedLoop_bb7_in/19]
2. recursive  : [eval_nestedLoop_6/15,eval_nestedLoop_7/16,eval_nestedLoop__critedge3_in/15,eval_nestedLoop_bb3_in/15,eval_nestedLoop_bb4_in/16,loop_cont_eval_nestedLoop_bb5_in/16]
3. recursive  : [eval_nestedLoop_15/9,eval_nestedLoop_16/9,eval_nestedLoop_4/5,eval_nestedLoop_5/6,eval_nestedLoop__critedge2_in/8,eval_nestedLoop_bb1_in/5,eval_nestedLoop_bb2_in/5,loop_cont_eval_nestedLoop__critedge3_in/9]
4. non_recursive  : [loop_cont_eval_nestedLoop_bb1_in/2]
5. non_recursive  : [eval_nestedLoop_3/4]
6. non_recursive  : [eval_nestedLoop_2/4]
7. non_recursive  : [eval_nestedLoop_1/4]
8. non_recursive  : [eval_nestedLoop_0/4]
9. non_recursive  : [eval_nestedLoop_bb0_in/4]
10. non_recursive  : [eval_nestedLoop_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_nestedLoop_bb5_in/18
2. SCC is partially evaluated into eval_nestedLoop__critedge3_in/15
3. SCC is partially evaluated into eval_nestedLoop_bb1_in/5
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_nestedLoop_3/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_nestedLoop_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nestedLoop_bb5_in/18 
* CE 12 is refined into CE [15] 
* CE 14 is refined into CE [16] 
* CE 13 is refined into CE [17] 


#### Refined cost equations eval_nestedLoop_bb5_in/18 
* CE 15: eval_nestedLoop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) = 0
     [C>=J+1,B>=I,J>=G,H>=1,I=F+1,K=2] 
* CE 16: eval_nestedLoop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) = 0
     [B>=I,J>=G,J>=C,H>=1,I=F+1,K=2] 
* CE 17: eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) = 1+ eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,V_7,V_9,K,L,C,D,E,F,G,H,I)
     [V_N>=V_k_0+1,V_m>=V_9,V_k_0>=V_i_1,V_7>=1,V_k_0+1=K,V_9=J+1,V_9=V_j_0+1,L=2,B=2] 

### Cost equations --> "Loop" of eval_nestedLoop_bb5_in/18 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_nestedLoop_bb5_in/18 
* Loop 15: eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I)->  eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,V_7,V_9,V_k_0',B',C,D,E,F,G,H,I)
                  [V_N>=V_k_0+1,V_m>=V_9,V_k_0>=V_i_1,V_7>=1,V_k_0+1=V_k_0',V_9=V_j_0'+1,V_9=V_j_0+1,B'=2,B=2] 
* Loop 16: eval_nestedLoop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) [C>=J+1,B>=I,J>=G,H>=1,I=F+1,K=2] 
* Loop 17: eval_nestedLoop_bb5_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,I,J) [B>=I,J>=G,J>=C,H>=1,I=F+1,K=2] 

### Ranking functions of CR eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_N-V_k_0


### Resulting Chains:eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Specialization of cost equations eval_nestedLoop__critedge3_in/15 
* CE 9 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20,21,22,23] 


#### Refined cost equations eval_nestedLoop__critedge3_in/15 
* CE 18: eval_nestedLoop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [B>=F+1,H=3] 
* CE 19: eval_nestedLoop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [F>=B,H=3] 
* CE 20: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_N):[[15],17]+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_N,N,C,D,E,F,G,H,I)
     [V_m>=L,V_N>=V_i_1+1,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 
* CE 21: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,N):[[15],16]+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,N,O,C,D,E,F,G,H,I)
     [V_N>=N+1,V_m>=L,N>=V_i_1+1,K>=1,L=J+1,L=V_j_0+1,O=3,M=2,B=3] 
* CE 22: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_i_1):[17]+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_i_1,N,C,D,E,F,G,H,I)
     [V_i_1>=V_N,V_m>=L,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 
* CE 23: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) = 2+ eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,J,V_i_1,K,L,V_i_1,M,V_n,V_m,V_N,V_i_0,V_4,L,V_i_1):[16]+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,L,V_i_1,N,C,D,E,F,G,H,I)
     [V_N>=V_i_1+1,V_m>=L,K>=1,L=J+1,L=V_j_0+1,N=3,M=2,B=3] 

### Cost equations --> "Loop" of eval_nestedLoop__critedge3_in/15 
* CEs [21] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [18] --> Loop 22 
* CEs [19] --> Loop 23 

#### Loops of eval_nestedLoop__critedge3_in/15 
* Loop 18: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1',B',C,D,E,F,G,H,I)
                  [V_N>=V_i_1'+1,V_m>=V_j_0',V_i_1'>=V_i_1+1,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 19: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,B',C,D,E,F,G,H,I)
                  [V_m>=V_j_0',V_N>=V_i_1+1,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 20: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0',V_i_1,B',C,D,E,F,G,H,I)
                  [V_m>=V_j_0',V_i_1>=V_N,V_j_0'=V_j_0+1,B'=3,B=3] 
* Loop 21: eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I)->  eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,A',V_N,B',C,D,E,F,G,H,I)
                  [V_m>=A',V_N>=V_i_1+1,A'=V_j_0+1,B'=3,B=3] 
* Loop 22: eval_nestedLoop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [B>=F+1,H=3] 
* Loop 23: eval_nestedLoop__critedge3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [F>=B,H=3] 

### Ranking functions of CR eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* RF of phase [18,19]: [V_m-V_j_0]
* RF of phase [20]: [V_m-V_j_0]

#### Partial ranking functions of CR eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1]:
    V_N-V_i_1-1
  - RF of loop [18:1,19:1]:
    V_m-V_j_0
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_m-V_j_0


### Resulting Chains:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) 
* [[20],23]
* [[20],22]
* [[18,19],23]
* [[18,19],22]
* [[18,19],21,[20],23]
* [[18,19],21,[20],22]
* [[18,19],21,23]
* [[18,19],21,22]
* [23]
* [22]
* [21,[20],23]
* [21,[20],22]
* [21,23]
* [21,22]


### Specialization of cost equations eval_nestedLoop_bb1_in/5 
* CE 6 is refined into CE [24] 
* CE 8 is refined into CE [25] 
* CE 7 is refined into CE [26,27,28,29,30,31,32,33,34,35,36,37,38,39] 


#### Refined cost equations eval_nestedLoop_bb1_in/5 
* CE 24: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 0
     [V_n>=V_i_0+1,B=4] 
* CE 25: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 0
     [V_i_0>=V_n,B=4] 
* CE 26: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_i_0):[[20],23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,F,G)
     [V_n>=V_i_0+1,V_i_0>=V_N,C>=1,V_m>=1,V_i_0+1=F,G=4,E=3,D=0,B=4] 
* CE 27: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[[20],22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_n>=V_i_0+1,V_i_0>=V_N,F>=1,C>=1,V_i_0+1=G,H=4,E=3,D=0,B=4] 
* CE 28: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,F):[[18,19],23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_N>=F+1,F>=V_i_0,V_n>=V_i_0+1,C>=1,V_m>=1,F+1=G,H=4,E=3,D=0,B=4] 
* CE 29: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,G):[[18,19],22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,H,I)
     [V_N>=G+1,V_m>=F+1,G>=V_i_0,V_n>=V_i_0+1,F>=1,C>=1,G+1=H,I=4,E=3,D=0,B=4] 
* CE 30: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[[18,19],21,[20],23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=3,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 31: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[[18,19],21,[20],22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_n>=V_i_0+1,V_N>=V_i_0+1,F>=3,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 32: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[[18,19],21,23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 33: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[[18,19],21,22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_N>=V_i_0+1,V_n>=V_i_0+1,F>=2,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 34: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_n>=V_i_0+1,C>=1,0>=V_m,V_i_0+1=G,H=4,F=0,E=3,D=0,B=4] 
* CE 35: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_i_0):[22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_n>=V_i_0+1,C>=1,V_m>=1,V_i_0+1=G,H=4,F=0,E=3,D=0,B=4] 
* CE 36: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,V_m,V_N):[21,[20],23]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,F,G)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=F,G=4,E=3,D=0,B=4] 
* CE 37: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[21,[20],22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_m>=F+1,V_N>=V_i_0+1,V_n>=V_i_0+1,F>=2,C>=1,V_N+1=G,H=4,E=3,D=0,B=4] 
* CE 38: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,C,V_N,V_i_0,D,E,V_i_0,F,V_n,G,V_N,V_i_0,D,H,V_N):[21,23]+ eval_nestedLoop_bb1_in(V_n,I,V_N,J,K)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,D>=1,V_N+1=J,K=4,I=1,H=1,G=1,F=3,E=0,C=1,B=4,V_m=1] 
* CE 39: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) = 2+ eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,C,D,V_i_0,E,V_n,V_m,V_N,V_i_0,C,F,V_N):[21,22]+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,G,H)
     [V_N>=V_i_0+1,V_n>=V_i_0+1,C>=1,V_m>=2,V_N+1=G,H=4,F=1,E=3,D=0,B=4] 

### Cost equations --> "Loop" of eval_nestedLoop_bb1_in/5 
* CEs [29] --> Loop 24 
* CEs [28] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [30] --> Loop 33 
* CEs [39] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [32] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [24] --> Loop 38 
* CEs [25] --> Loop 39 

#### Loops of eval_nestedLoop_bb1_in/5 
* Loop 24: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0',V_i_0'>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,B'=4,B=4] 
* Loop 25: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0',V_i_0'>=V_i_0+1,V_n>=V_i_0+1,V_m>=1,B'=4,B=4] 
* Loop 26: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_i_0>=V_N,V_m>=2,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 27: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_m>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 28: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,V_i_0>=V_N,V_m>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 29: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_n>=V_i_0+1,0>=V_m,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 30: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=4,V_N+1=V_i_0',B'=4,B=4] 
* Loop 31: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 32: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 33: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=3,V_N+1=V_i_0',B'=4,B=4] 
* Loop 34: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 35: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 36: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_m>=2,V_N+1=V_i_0',B'=4,B=4] 
* Loop 37: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B)->  eval_nestedLoop_bb1_in(V_n,V_m',V_N,V_i_0',B')
                  [V_N>=V_i_0+1,V_n>=V_i_0+1,V_N+1=V_i_0',B'=4,V_m'=1,B=4,V_m=1] 
* Loop 38: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) [V_n>=V_i_0+1,B=4] 
* Loop 39: eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) [V_i_0>=V_n,B=4] 

### Ranking functions of CR eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* RF of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]: [V_n-V_i_0]
* RF of phase [29]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* Partial RF of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:
  - RF of loop [24:1,25:1]:
    V_N-V_i_0
  - RF of loop [24:1,25:1,26:1,27:1,28:1]:
    V_n-V_i_0
  - RF of loop [30:1,31:1,32:1,33:1,34:1,35:1,36:1,37:1]:
    V_N/2-V_i_0/2
    V_n/2-V_i_0/2
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_n-V_i_0


### Resulting Chains:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* [[29],39]
* [[29],38]
* [[24,25,26,27,28,30,31,32,33,34,35,36,37],39]
* [[24,25,26,27,28,30,31,32,33,34,35,36,37],38]
* [39]
* [38]


### Specialization of cost equations eval_nestedLoop_3/4 
* CE 2 is refined into CE [40,41,42,43,44,45] 
* CE 5 is refined into CE [46] 
* CE 4 is refined into CE [47] 
* CE 3 is refined into CE [48] 


#### Refined cost equations eval_nestedLoop_3/4 
* CE 40: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(V_n,C,V_N,D,E):[[29],39]
     [V_N>=0,V_n>=1,E=4,D=0,C=0,V_m=0] 
* CE 41: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(V_n,C,V_N,D,E):[[29],38]
     [V_N>=0,V_n>=2,E=4,D=0,C=0,V_m=0] 
* CE 42: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,C,D):[[24,25,26,27,28,30,31,32,33,34,35,36,37],39]
     [V_N>=0,V_m>=1,V_n>=1,D=4,C=0] 
* CE 43: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,C,D):[[24,25,26,27,28,30,31,32,33,34,35,36,37],38]
     [V_N>=0,V_m>=1,V_n>=2,D=4,C=0] 
* CE 44: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(C,V_m,V_N,D,E):[39]
     [V_N>=0,V_m>=0,E=4,D=0,C=0,V_n=0] 
* CE 45: eval_nestedLoop_3(V_n,V_m,V_N,B) = 1+ eval_nestedLoop_bb1_in(V_n,V_m,V_N,C,D):[38]
     [V_N>=0,V_m>=0,V_n>=1,D=4,C=0] 
* CE 46: eval_nestedLoop_3(V_n,V_m,V_N,B) = 0
     [0>=V_N+1] 
* CE 47: eval_nestedLoop_3(V_n,V_m,V_N,B) = 0
     [0>=V_m+1] 
* CE 48: eval_nestedLoop_3(V_n,V_m,V_N,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_nestedLoop_3/4 
* CEs [43] --> Loop 40 
* CEs [42] --> Loop 41 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [48] --> Loop 45 
* CEs [41] --> Loop 46 
* CEs [40] --> Loop 47 
* CEs [44] --> Loop 48 

#### Loops of eval_nestedLoop_3/4 
* Loop 40: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=2] 
* Loop 41: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=1] 
* Loop 42: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n>=1] 
* Loop 43: eval_nestedLoop_3(V_n,V_m,V_N,B) [0>=V_N+1] 
* Loop 44: eval_nestedLoop_3(V_n,V_m,V_N,B) [0>=V_m+1] 
* Loop 45: eval_nestedLoop_3(V_n,V_m,V_N,B) [0>=V_n+1] 
* Loop 46: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_n>=2,V_m=0] 
* Loop 47: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_n>=1,V_m=0] 
* Loop 48: eval_nestedLoop_3(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n=0] 

### Ranking functions of CR eval_nestedLoop_3(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nestedLoop_3(V_n,V_m,V_N,B) 


### Resulting Chains:eval_nestedLoop_3(V_n,V_m,V_N,B) 
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]


### Specialization of cost equations eval_nestedLoop_start/4 
* CE 1 is refined into CE [49,50,51,52,53,54,55,56,57] 


#### Refined cost equations eval_nestedLoop_start/4 
* CE 49: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(C,V_m,V_N,B):[48]
     [V_N>=0,V_m>=0,C=0,V_n=0] 
* CE 50: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,C,V_N,B):[47]
     [V_N>=0,V_n>=1,C=0,V_m=0] 
* CE 51: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,C,V_N,B):[46]
     [V_N>=0,V_n>=2,C=0,V_m=0] 
* CE 52: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[45]
     [0>=V_n+1] 
* CE 53: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[44]
     [0>=V_m+1] 
* CE 54: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[43]
     [0>=V_N+1] 
* CE 55: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[42]
     [V_N>=0,V_m>=0,V_n>=1] 
* CE 56: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[41]
     [V_N>=0,V_m>=1,V_n>=1] 
* CE 57: eval_nestedLoop_start(V_n,V_m,V_N,B) = 0+ eval_nestedLoop_3(V_n,V_m,V_N,B):[40]
     [V_N>=0,V_m>=1,V_n>=2] 

### Cost equations --> "Loop" of eval_nestedLoop_start/4 
* CEs [57] --> Loop 49 
* CEs [56] --> Loop 50 
* CEs [55] --> Loop 51 
* CEs [54] --> Loop 52 
* CEs [53] --> Loop 53 
* CEs [52] --> Loop 54 
* CEs [51] --> Loop 55 
* CEs [50] --> Loop 56 
* CEs [49] --> Loop 57 

#### Loops of eval_nestedLoop_start/4 
* Loop 49: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=2] 
* Loop 50: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=1,V_n>=1] 
* Loop 51: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n>=1] 
* Loop 52: eval_nestedLoop_start(V_n,V_m,V_N,B) [0>=V_N+1] 
* Loop 53: eval_nestedLoop_start(V_n,V_m,V_N,B) [0>=V_m+1] 
* Loop 54: eval_nestedLoop_start(V_n,V_m,V_N,B) [0>=V_n+1] 
* Loop 55: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_n>=2,V_m=0] 
* Loop 56: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_n>=1,V_m=0] 
* Loop 57: eval_nestedLoop_start(V_n,V_m,V_N,B) [V_N>=0,V_m>=0,V_n=0] 

### Ranking functions of CR eval_nestedLoop_start(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nestedLoop_start(V_n,V_m,V_N,B) 


### Resulting Chains:eval_nestedLoop_start(V_n,V_m,V_N,B) 
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nestedLoop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [15]:eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nestedLoop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(15)+0
  Such that:it(15) =< V_N-V_k_0
it(15) =< V_N-V_k_0-V_N'+V_k_0'

#### Cost of phase [15]:eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I) -> [eval_nestedLoop_bb5_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',V_7',V_9',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(15)+0
  Such that:it(15) =< V_N-V_k_0
it(15) =< V_N-V_k_0-V_N'+V_k_0'

#### Cost of chains of eval_nestedLoop_bb5_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,V_7,V_9,V_k_0,B,C,D,E,F,G,H,I):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_N-V_k_0

  with precondition: [B=2,V_j_0+1=V_9,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_j_0+1=H,V_N=I,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,V_N>=V_k_0+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_k_0+I

  with precondition: [B=2,V_j_0+1=V_9,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_j_0+1=H,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,I>=V_k_0+1,V_N>=I+1] 

* Chain [17]: 0
  with precondition: [B=2,C=V_n,F=V_i_0,G=V_4,V_j_0+1=V_9,V_m=D,V_N=E,V_j_0+1=H,V_k_0=I,V_7>=1,V_k_0>=V_N,V_m>=V_j_0+1,V_k_0>=V_i_1] 

* Chain [16]: 0
  with precondition: [B=2,C=V_n,F=V_i_0,G=V_4,V_j_0+1=V_9,V_m=D,V_N=E,V_j_0+1=H,V_k_0=I,V_7>=1,V_m>=V_j_0+1,V_k_0>=V_i_1,V_N>=V_k_0+1] 


#### Cost of loops [20] 

 * loop 20:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2
#### Cost of phase [20]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(20)+0
  Such that:it(20) =< V_m-V_j_0
it(20) =< V_m-V_j_0-V_m'+V_j_0'

#### Cost of phase [20]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(20)+0
  Such that:it(20) =< V_m-V_j_0
it(20) =< V_m-V_j_0-V_m'+V_j_0'

#### Cost of loops [18,19] 

 * loop 18:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
1*s(2)+2
  Such that:s(2) =< -V_i_1+V_i_1'

 * loop 19:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2
#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of phase [18,19]:eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I) -> [eval_nestedLoop__critedge3_in(V_n',V_m',V_N',V_i_0',V_4',V_j_0',V_i_1',B',C',D',E',F',G',H',I')] 
2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< V_m-V_j_0-V_m'+V_j_0'
aux(3) =< V_N-V_i_1
aux(4) =< V_N-V_i_1-V_N'+V_i_1'
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

#### Cost of chains of eval_nestedLoop__critedge3_in(V_n,V_m,V_N,V_i_0,V_4,V_j_0,V_i_1,B,C,D,E,F,G,H,I):
* Chain [[20],23]: 2*it(20)+0
  Such that:it(20) =< -V_j_0+H

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_i_1=I,V_4>=1,V_j_0>=0,V_i_1>=V_N,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1] 

* Chain [[20],22]: 2*it(20)+0
  Such that:it(20) =< -V_j_0+H

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_i_1=I,V_4>=1,V_j_0>=0,V_i_1>=V_N,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+1,V_m>=H+1] 

* Chain [[18,19],23]: 2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(3) =< -V_i_1+E
aux(4) =< -V_i_1+I
aux(5) =< -V_j_0+H
it(18) =< aux(5)
it(19) =< aux(5)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1,I>=V_i_1,V_N>=I+1] 

* Chain [[18,19],22]: 2*it(18)+2*it(19)+1*s(3)+0
  Such that:aux(1) =< -V_j_0+D
aux(2) =< -V_j_0+H
aux(3) =< -V_i_1+E
aux(4) =< -V_i_1+I
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+1,I>=V_i_1,V_m>=H+1,V_N>=I+1] 

* Chain [[18,19],21,[20],23]: 2*it(18)+4*it(19)+2*s(3)+2
  Such that:aux(6) =< -V_j_0+H
aux(7) =< -V_i_1+E
it(19) =< aux(6)
s(3) =< aux(7)
it(18) =< aux(6)
it(18) =< aux(7)

  with precondition: [B=3,H=V_m,V_n=C,H=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+3,V_N>=V_i_1+1] 

* Chain [[18,19],21,[20],22]: 2*it(18)+2*it(19)+2*it(20)+2*s(3)+2
  Such that:aux(1) =< -V_j_0+D
aux(8) =< -V_j_0+H
aux(9) =< -V_i_1+E
it(20) =< aux(8)
s(3) =< aux(9)
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(8)
it(19) =< aux(8)
it(18) =< aux(9)

  with precondition: [B=3,I=V_N,V_n=C,V_m=D,I=E,V_i_0=F,V_4=G,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+3,I>=V_i_1+1,V_m>=H+1] 

* Chain [[18,19],21,23]: 2*it(18)+2*it(19)+2*s(3)+2
  Such that:aux(10) =< -V_j_0+H
aux(11) =< -V_i_1+E
s(3) =< aux(11)
it(18) =< aux(10)
it(19) =< aux(10)
it(18) =< aux(11)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [[18,19],21,22]: 2*it(18)+2*it(19)+2*s(3)+2
  Such that:aux(1) =< -V_j_0+D
aux(2) =< -V_j_0+H
aux(12) =< -V_i_1+E
s(3) =< aux(12)
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(12)

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+2,V_N>=V_i_1+1,V_m>=H+1] 

* Chain [23]: 0
  with precondition: [B=3,E=V_N,V_n=C,V_m=D,V_i_0=F,V_4=G,V_j_0=H,V_i_1=I,V_4>=1,V_j_0>=0,V_j_0>=V_m,V_n>=V_i_0+1,V_i_1>=V_i_0] 

* Chain [22]: 0
  with precondition: [B=3,E=V_N,V_n=C,V_m=D,V_i_0=F,V_4=G,V_j_0=H,V_i_1=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+1] 

* Chain [21,[20],23]: 2*it(20)+1*s(4)+2
  Such that:it(20) =< -V_j_0+H
s(4) =< -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [21,[20],22]: 2*it(20)+1*s(4)+2
  Such that:it(20) =< -V_j_0+H
s(4) =< -V_i_1+I

  with precondition: [B=3,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,V_j_0>=0,V_n>=V_i_0+1,V_i_1>=V_i_0,H>=V_j_0+2,V_N>=V_i_1+1,V_m>=H+1] 

* Chain [21,23]: 1*s(4)+2
  Such that:s(4) =< -V_i_1+I

  with precondition: [B=3,V_m=V_j_0+1,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_m=H,V_N=I,V_m>=1,V_4>=1,V_n>=V_i_0+1,V_i_1>=V_i_0,V_N>=V_i_1+1] 

* Chain [21,22]: 1*s(4)+2
  Such that:s(4) =< -V_i_1+I

  with precondition: [B=3,H=V_j_0+1,V_n=C,V_m=D,V_N=E,V_i_0=F,V_4=G,V_N=I,V_4>=1,H>=1,V_n>=V_i_0+1,V_i_1>=V_i_0,V_N>=V_i_1+1,V_m>=H+1] 


#### Cost of loops [29] 

 * loop 29:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2
#### Cost of phase [29]:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(29)+0
  Such that:it(29) =< V_n-V_i_0
it(29) =< V_n-V_i_0-V_n'+V_i_0'

#### Cost of phase [29]:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*it(29)+0
  Such that:it(29) =< V_n-V_i_0
it(29) =< V_n-V_i_0-V_n'+V_i_0'

#### Cost of loops [24,25,26,27,28,30,31,32,33,34,35,36,37] 

 * loop 24:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(15)+2*s(16)+1*s(17)+2
  Such that:s(12) =< V_N-V_i_0
s(13) =< -V_i_0+V_i_0'
s(14) =< V_m
s(15) =< s(14)
s(16) =< s(14)
s(15) =< s(12)
s(17) =< s(12)
s(15) =< s(13)
s(17) =< s(13)

 * loop 25:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(27)+2*s(28)+1*s(29)+2
  Such that:s(24) =< -V_i_0+V_N'
s(25) =< -V_i_0+V_i_0'
s(26) =< V_m'
s(27) =< s(26)
s(28) =< s(26)
s(27) =< s(24)
s(29) =< s(24)
s(27) =< s(25)
s(29) =< s(25)

 * loop 26:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(31)+2
  Such that:s(31) =< V_m

 * loop 27:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2
 * loop 28:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(33)+2
  Such that:s(33) =< V_m'

 * loop 30:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
4*s(43)+2*s(44)+2*s(45)+4
  Such that:s(41) =< -V_i_0+V_i_0'
s(42) =< V_m'
s(43) =< s(42)
s(44) =< s(41)
s(45) =< s(42)
s(45) =< s(41)

 * loop 31:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(48)+1*s(49)+4
  Such that:s(48) =< V_m
s(49) =< -V_i_0+V_i_0'

 * loop 32:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(58)+2*s(59)+2*s(60)+4
  Such that:s(56) =< -V_i_0+V_i_0'
s(57) =< V_m'
s(58) =< s(56)
s(59) =< s(57)
s(60) =< s(57)
s(59) =< s(56)

 * loop 33:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
4*s(68)+2*s(69)+2*s(70)+4
  Such that:s(66) =< -V_i_0+V_i_0'
s(67) =< V_m'
s(68) =< s(67)
s(69) =< s(66)
s(70) =< s(67)
s(70) =< s(66)

 * loop 34:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
1*s(72)+4
  Such that:s(72) =< -V_i_0+V_i_0'

 * loop 35:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(76)+1*s(75)+4
  Such that:s(75) =< -V_i_0+V_i_0'
s(76) =< V_m'

 * loop 36:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
2*s(84)+2*s(85)+2*s(86)+4
  Such that:s(82) =< -V_i_0+V_i_0'
s(83) =< V_m'
s(84) =< s(82)
s(85) =< s(83)
s(86) =< s(83)
s(85) =< s(82)

 * loop 37:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
1*s(88)+4
  Such that:s(88) =< -V_i_0+V_i_0'

#### Cost of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
4*it(24)+6*it(26)+4*it(30)+28*it(31)+2*s(89)+2*s(90)+1*s(91)+2*s(95)+2*s(96)+1*s(97)+4*s(101)+4*s(103)+8*s(104)+2*s(105)+4*s(108)+4*s(109)+6*s(111)+8*s(112)+0
  Such that:aux(16) =< V_m
aux(28) =< V_n-V_i_0
aux(29) =< V_n-V_i_0-V_n'+V_i_0'
aux(30) =< V_n/2-V_i_0/2
aux(31) =< V_n/2-V_i_0/2-V_n'/2+V_i_0'/2
aux(32) =< V_N-V_i_0
aux(33) =< V_N-V_i_0+1
aux(34) =< V_N-V_i_0-V_N'+V_i_0'
aux(35) =< V_N/2-V_i_0/2
aux(36) =< V_N/2-V_i_0/2-V_N'/2+V_i_0'/2
it(24) =< aux(28)
it(26) =< aux(28)
it(30) =< aux(28)
it(31) =< aux(28)
it(24) =< aux(29)
it(26) =< aux(29)
it(30) =< aux(29)
it(31) =< aux(29)
it(30) =< aux(30)
it(31) =< aux(30)
it(30) =< aux(31)
it(31) =< aux(31)
it(24) =< aux(32)
it(30) =< aux(32)
it(31) =< aux(32)
s(92) =< aux(32)
it(31) =< aux(33)
s(106) =< aux(33)
s(109) =< aux(33)
it(24) =< aux(34)
it(26) =< aux(34)
it(30) =< aux(34)
it(31) =< aux(34)
s(92) =< aux(34)
s(106) =< aux(34)
s(109) =< aux(34)
it(30) =< aux(35)
it(31) =< aux(35)
it(30) =< aux(36)
it(31) =< aux(36)
aux(19) =< aux(16)
aux(18) =< aux(32)
s(93) =< it(24)*aux(32)
s(94) =< it(24)*aux(16)
s(114) =< it(31)*aux(19)
s(108) =< it(31)*aux(19)
s(107) =< it(30)*aux(19)
s(101) =< it(26)*aux(19)
s(100) =< it(24)*aux(19)
s(99) =< it(24)*aux(18)
s(104) =< s(106)
s(111) =< s(114)
s(112) =< s(114)
s(111) =< s(106)
s(103) =< s(107)
s(105) =< s(107)
s(105) =< s(106)
s(95) =< s(100)
s(96) =< s(100)
s(95) =< s(99)
s(97) =< s(99)
s(95) =< s(92)
s(97) =< s(92)
s(89) =< s(94)
s(90) =< s(94)
s(89) =< s(93)
s(91) =< s(93)
s(89) =< s(92)
s(91) =< s(92)

#### Cost of phase [24,25,26,27,28,30,31,32,33,34,35,36,37]:eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) -> [eval_nestedLoop_bb1_in(V_n',V_m',V_N',V_i_0',B')] 
4*it(24)+6*it(26)+4*it(30)+28*it(31)+2*s(89)+2*s(90)+1*s(91)+2*s(95)+2*s(96)+1*s(97)+4*s(101)+4*s(103)+8*s(104)+2*s(105)+4*s(108)+4*s(109)+6*s(111)+8*s(112)+0
  Such that:aux(16) =< V_m
aux(28) =< V_n-V_i_0
aux(29) =< V_n-V_i_0-V_n'+V_i_0'
aux(30) =< V_n/2-V_i_0/2
aux(31) =< V_n/2-V_i_0/2-V_n'/2+V_i_0'/2
aux(32) =< V_N-V_i_0
aux(33) =< V_N-V_i_0+1
aux(34) =< V_N-V_i_0-V_N'+V_i_0'
aux(35) =< V_N/2-V_i_0/2
aux(36) =< V_N/2-V_i_0/2-V_N'/2+V_i_0'/2
it(24) =< aux(28)
it(26) =< aux(28)
it(30) =< aux(28)
it(31) =< aux(28)
it(24) =< aux(29)
it(26) =< aux(29)
it(30) =< aux(29)
it(31) =< aux(29)
it(30) =< aux(30)
it(31) =< aux(30)
it(30) =< aux(31)
it(31) =< aux(31)
it(24) =< aux(32)
it(30) =< aux(32)
it(31) =< aux(32)
s(92) =< aux(32)
it(31) =< aux(33)
s(106) =< aux(33)
s(109) =< aux(33)
it(24) =< aux(34)
it(26) =< aux(34)
it(30) =< aux(34)
it(31) =< aux(34)
s(92) =< aux(34)
s(106) =< aux(34)
s(109) =< aux(34)
it(30) =< aux(35)
it(31) =< aux(35)
it(30) =< aux(36)
it(31) =< aux(36)
aux(19) =< aux(16)
aux(18) =< aux(32)
s(93) =< it(24)*aux(32)
s(94) =< it(24)*aux(16)
s(114) =< it(31)*aux(19)
s(108) =< it(31)*aux(19)
s(107) =< it(30)*aux(19)
s(101) =< it(26)*aux(19)
s(100) =< it(24)*aux(19)
s(99) =< it(24)*aux(18)
s(104) =< s(106)
s(111) =< s(114)
s(112) =< s(114)
s(111) =< s(106)
s(103) =< s(107)
s(105) =< s(107)
s(105) =< s(106)
s(95) =< s(100)
s(96) =< s(100)
s(95) =< s(99)
s(97) =< s(99)
s(95) =< s(92)
s(97) =< s(92)
s(89) =< s(94)
s(90) =< s(94)
s(89) =< s(93)
s(91) =< s(93)
s(89) =< s(92)
s(91) =< s(92)

#### Cost of chains of eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B):
* Chain [[29],39]: 2*it(29)+0
  Such that:it(29) =< V_n-V_i_0

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[29],38]: 2*it(29)+0
  Such that:it(29) =< V_n-V_i_0

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[24,25,26,27,28,30,31,32,33,34,35,36,37],39]: 4*it(24)+6*it(26)+4*it(30)+28*it(31)+2*s(89)+2*s(90)+1*s(91)+2*s(95)+2*s(96)+1*s(97)+4*s(101)+4*s(103)+8*s(104)+2*s(105)+4*s(108)+4*s(109)+6*s(111)+8*s(112)+0
  Such that:aux(28) =< V_n-V_i_0
aux(30) =< V_n/2-V_i_0/2
aux(16) =< V_m
aux(32) =< V_N-V_i_0
aux(33) =< V_N-V_i_0+1
aux(35) =< V_N/2-V_i_0/2
aux(37) =< V_n+V_N-V_i_0
aux(38) =< V_n/2+V_N/2-V_i_0/2
it(24) =< aux(28)
it(26) =< aux(28)
it(30) =< aux(28)
it(31) =< aux(28)
it(24) =< aux(37)
it(26) =< aux(37)
it(30) =< aux(37)
it(31) =< aux(37)
it(30) =< aux(30)
it(31) =< aux(30)
it(30) =< aux(38)
it(31) =< aux(38)
it(24) =< aux(32)
it(30) =< aux(32)
it(31) =< aux(32)
s(92) =< aux(32)
it(31) =< aux(33)
s(106) =< aux(33)
s(109) =< aux(33)
s(92) =< aux(37)
s(106) =< aux(37)
s(109) =< aux(37)
it(30) =< aux(35)
it(31) =< aux(35)
aux(19) =< aux(16)
aux(18) =< aux(32)
s(93) =< it(24)*aux(32)
s(94) =< it(24)*aux(16)
s(114) =< it(31)*aux(19)
s(108) =< it(31)*aux(19)
s(107) =< it(30)*aux(19)
s(101) =< it(26)*aux(19)
s(100) =< it(24)*aux(19)
s(99) =< it(24)*aux(18)
s(104) =< s(106)
s(111) =< s(114)
s(112) =< s(114)
s(111) =< s(106)
s(103) =< s(107)
s(105) =< s(107)
s(105) =< s(106)
s(95) =< s(100)
s(96) =< s(100)
s(95) =< s(99)
s(97) =< s(99)
s(95) =< s(92)
s(97) =< s(92)
s(89) =< s(94)
s(90) =< s(94)
s(89) =< s(93)
s(91) =< s(93)
s(89) =< s(92)
s(91) =< s(92)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[24,25,26,27,28,30,31,32,33,34,35,36,37],38]: 4*it(24)+6*it(26)+4*it(30)+28*it(31)+2*s(89)+2*s(90)+1*s(91)+2*s(95)+2*s(96)+1*s(97)+4*s(101)+4*s(103)+8*s(104)+2*s(105)+4*s(108)+4*s(109)+6*s(111)+8*s(112)+0
  Such that:aux(16) =< V_m
aux(32) =< V_N-V_i_0
aux(33) =< V_N-V_i_0+1
aux(35) =< V_N/2-V_i_0/2
aux(39) =< V_n-V_i_0
aux(40) =< V_n/2-V_i_0/2
it(24) =< aux(39)
it(26) =< aux(39)
it(30) =< aux(39)
it(31) =< aux(39)
it(30) =< aux(40)
it(31) =< aux(40)
it(24) =< aux(32)
it(30) =< aux(32)
it(31) =< aux(32)
s(92) =< aux(32)
it(31) =< aux(33)
s(106) =< aux(33)
s(109) =< aux(33)
s(92) =< aux(39)
s(106) =< aux(39)
s(109) =< aux(39)
it(30) =< aux(35)
it(31) =< aux(35)
aux(19) =< aux(16)
aux(18) =< aux(32)
s(93) =< it(24)*aux(32)
s(94) =< it(24)*aux(16)
s(114) =< it(31)*aux(19)
s(108) =< it(31)*aux(19)
s(107) =< it(30)*aux(19)
s(101) =< it(26)*aux(19)
s(100) =< it(24)*aux(19)
s(99) =< it(24)*aux(18)
s(104) =< s(106)
s(111) =< s(114)
s(112) =< s(114)
s(111) =< s(106)
s(103) =< s(107)
s(105) =< s(107)
s(105) =< s(106)
s(95) =< s(100)
s(96) =< s(100)
s(95) =< s(99)
s(97) =< s(99)
s(95) =< s(92)
s(97) =< s(92)
s(89) =< s(94)
s(90) =< s(94)
s(89) =< s(93)
s(91) =< s(93)
s(89) =< s(92)
s(91) =< s(92)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [39]: 0
  with precondition: [B=4,V_n>=0,V_m>=0,V_i_0>=V_n,V_N+V_n>=V_i_0] 

* Chain [38]: 0
  with precondition: [B=4,V_m>=0,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 


#### Cost of chains of eval_nestedLoop_3(V_n,V_m,V_N,B):
* Chain [48]: 1
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [47]: 2*s(129)+1
  Such that:s(129) =< V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [46]: 2*s(130)+1
  Such that:s(130) =< V_n

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [45]: 0
  with precondition: [0>=V_n+1] 

* Chain [44]: 0
  with precondition: [0>=V_m+1] 

* Chain [43]: 0
  with precondition: [0>=V_N+1] 

* Chain [42]: 1
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [41]: 4*s(139)+6*s(140)+4*s(141)+28*s(142)+4*s(145)+4*s(151)+4*s(153)+8*s(156)+6*s(157)+8*s(158)+4*s(159)+2*s(160)+2*s(161)+2*s(162)+1*s(163)+2*s(164)+2*s(165)+1*s(166)+1
  Such that:s(131) =< V_n
s(137) =< V_n+V_N
s(132) =< V_n/2
s(138) =< V_n/2+V_N/2
s(133) =< V_m
s(134) =< V_N
s(135) =< V_N+1
s(136) =< V_N/2
s(139) =< s(131)
s(140) =< s(131)
s(141) =< s(131)
s(142) =< s(131)
s(139) =< s(137)
s(140) =< s(137)
s(141) =< s(137)
s(142) =< s(137)
s(141) =< s(132)
s(142) =< s(132)
s(141) =< s(138)
s(142) =< s(138)
s(139) =< s(134)
s(141) =< s(134)
s(142) =< s(134)
s(143) =< s(134)
s(142) =< s(135)
s(144) =< s(135)
s(145) =< s(135)
s(143) =< s(137)
s(144) =< s(137)
s(145) =< s(137)
s(141) =< s(136)
s(142) =< s(136)
s(146) =< s(133)
s(147) =< s(134)
s(148) =< s(139)*s(134)
s(149) =< s(139)*s(133)
s(150) =< s(142)*s(146)
s(151) =< s(142)*s(146)
s(152) =< s(141)*s(146)
s(153) =< s(140)*s(146)
s(154) =< s(139)*s(146)
s(155) =< s(139)*s(147)
s(156) =< s(144)
s(157) =< s(150)
s(158) =< s(150)
s(157) =< s(144)
s(159) =< s(152)
s(160) =< s(152)
s(160) =< s(144)
s(161) =< s(154)
s(162) =< s(154)
s(161) =< s(155)
s(163) =< s(155)
s(161) =< s(143)
s(163) =< s(143)
s(164) =< s(149)
s(165) =< s(149)
s(164) =< s(148)
s(166) =< s(148)
s(164) =< s(143)
s(166) =< s(143)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [40]: 4*s(173)+6*s(174)+4*s(175)+28*s(176)+4*s(179)+4*s(185)+4*s(187)+8*s(190)+6*s(191)+8*s(192)+4*s(193)+2*s(194)+2*s(195)+2*s(196)+1*s(197)+2*s(198)+2*s(199)+1*s(200)+1
  Such that:s(171) =< V_n
s(172) =< V_n/2
s(167) =< V_m
s(168) =< V_N
s(169) =< V_N+1
s(170) =< V_N/2
s(173) =< s(171)
s(174) =< s(171)
s(175) =< s(171)
s(176) =< s(171)
s(175) =< s(172)
s(176) =< s(172)
s(173) =< s(168)
s(175) =< s(168)
s(176) =< s(168)
s(177) =< s(168)
s(176) =< s(169)
s(178) =< s(169)
s(179) =< s(169)
s(177) =< s(171)
s(178) =< s(171)
s(179) =< s(171)
s(175) =< s(170)
s(176) =< s(170)
s(180) =< s(167)
s(181) =< s(168)
s(182) =< s(173)*s(168)
s(183) =< s(173)*s(167)
s(184) =< s(176)*s(180)
s(185) =< s(176)*s(180)
s(186) =< s(175)*s(180)
s(187) =< s(174)*s(180)
s(188) =< s(173)*s(180)
s(189) =< s(173)*s(181)
s(190) =< s(178)
s(191) =< s(184)
s(192) =< s(184)
s(191) =< s(178)
s(193) =< s(186)
s(194) =< s(186)
s(194) =< s(178)
s(195) =< s(188)
s(196) =< s(188)
s(195) =< s(189)
s(197) =< s(189)
s(195) =< s(177)
s(197) =< s(177)
s(198) =< s(183)
s(199) =< s(183)
s(198) =< s(182)
s(200) =< s(182)
s(198) =< s(177)
s(200) =< s(177)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


#### Cost of chains of eval_nestedLoop_start(V_n,V_m,V_N,B):
* Chain [57]: 1
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [56]: 2*s(201)+1
  Such that:s(201) =< V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [55]: 2*s(202)+1
  Such that:s(202) =< V_n

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [54]: 0
  with precondition: [0>=V_n+1] 

* Chain [53]: 0
  with precondition: [0>=V_m+1] 

* Chain [52]: 0
  with precondition: [0>=V_N+1] 

* Chain [51]: 1
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [50]: 4*s(211)+6*s(212)+4*s(213)+28*s(214)+4*s(217)+4*s(223)+4*s(225)+8*s(228)+6*s(229)+8*s(230)+4*s(231)+2*s(232)+2*s(233)+2*s(234)+1*s(235)+2*s(236)+2*s(237)+1*s(238)+1
  Such that:s(203) =< V_n
s(204) =< V_n+V_N
s(205) =< V_n/2
s(206) =< V_n/2+V_N/2
s(207) =< V_m
s(208) =< V_N
s(209) =< V_N+1
s(210) =< V_N/2
s(211) =< s(203)
s(212) =< s(203)
s(213) =< s(203)
s(214) =< s(203)
s(211) =< s(204)
s(212) =< s(204)
s(213) =< s(204)
s(214) =< s(204)
s(213) =< s(205)
s(214) =< s(205)
s(213) =< s(206)
s(214) =< s(206)
s(211) =< s(208)
s(213) =< s(208)
s(214) =< s(208)
s(215) =< s(208)
s(214) =< s(209)
s(216) =< s(209)
s(217) =< s(209)
s(215) =< s(204)
s(216) =< s(204)
s(217) =< s(204)
s(213) =< s(210)
s(214) =< s(210)
s(218) =< s(207)
s(219) =< s(208)
s(220) =< s(211)*s(208)
s(221) =< s(211)*s(207)
s(222) =< s(214)*s(218)
s(223) =< s(214)*s(218)
s(224) =< s(213)*s(218)
s(225) =< s(212)*s(218)
s(226) =< s(211)*s(218)
s(227) =< s(211)*s(219)
s(228) =< s(216)
s(229) =< s(222)
s(230) =< s(222)
s(229) =< s(216)
s(231) =< s(224)
s(232) =< s(224)
s(232) =< s(216)
s(233) =< s(226)
s(234) =< s(226)
s(233) =< s(227)
s(235) =< s(227)
s(233) =< s(215)
s(235) =< s(215)
s(236) =< s(221)
s(237) =< s(221)
s(236) =< s(220)
s(238) =< s(220)
s(236) =< s(215)
s(238) =< s(215)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [49]: 4*s(245)+6*s(246)+4*s(247)+28*s(248)+4*s(251)+4*s(257)+4*s(259)+8*s(262)+6*s(263)+8*s(264)+4*s(265)+2*s(266)+2*s(267)+2*s(268)+1*s(269)+2*s(270)+2*s(271)+1*s(272)+1
  Such that:s(239) =< V_n
s(240) =< V_n/2
s(241) =< V_m
s(242) =< V_N
s(243) =< V_N+1
s(244) =< V_N/2
s(245) =< s(239)
s(246) =< s(239)
s(247) =< s(239)
s(248) =< s(239)
s(247) =< s(240)
s(248) =< s(240)
s(245) =< s(242)
s(247) =< s(242)
s(248) =< s(242)
s(249) =< s(242)
s(248) =< s(243)
s(250) =< s(243)
s(251) =< s(243)
s(249) =< s(239)
s(250) =< s(239)
s(251) =< s(239)
s(247) =< s(244)
s(248) =< s(244)
s(252) =< s(241)
s(253) =< s(242)
s(254) =< s(245)*s(242)
s(255) =< s(245)*s(241)
s(256) =< s(248)*s(252)
s(257) =< s(248)*s(252)
s(258) =< s(247)*s(252)
s(259) =< s(246)*s(252)
s(260) =< s(245)*s(252)
s(261) =< s(245)*s(253)
s(262) =< s(250)
s(263) =< s(256)
s(264) =< s(256)
s(263) =< s(250)
s(265) =< s(258)
s(266) =< s(258)
s(266) =< s(250)
s(267) =< s(260)
s(268) =< s(260)
s(267) =< s(261)
s(269) =< s(261)
s(267) =< s(249)
s(269) =< s(249)
s(270) =< s(255)
s(271) =< s(255)
s(270) =< s(254)
s(272) =< s(254)
s(270) =< s(249)
s(272) =< s(249)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


Closed-form bounds of eval_nestedLoop_start(V_n,V_m,V_N,B): 
-------------------------------------
* Chain [57] with precondition: [V_n=0,V_m>=0,V_N>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [56] with precondition: [V_m=0,V_n>=1,V_N>=0] 
    - Upper bound: 2*V_n+1 
    - Complexity: n 
* Chain [55] with precondition: [V_m=0,V_n>=2,V_N>=0] 
    - Upper bound: 2*V_n+1 
    - Complexity: n 
* Chain [54] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [53] with precondition: [0>=V_m+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [52] with precondition: [0>=V_N+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [51] with precondition: [V_n>=1,V_m>=0,V_N>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [50] with precondition: [V_n>=1,V_m>=1,V_N>=0] 
    - Upper bound: 42*V_n+1+24*V_m*V_n+6*V_N+ (20*V_N+20) 
    - Complexity: n^2 
* Chain [49] with precondition: [V_n>=2,V_m>=1,V_N>=0] 
    - Upper bound: 42*V_n+1+24*V_m*V_n+6*V_N+ (20*V_N+20) 
    - Complexity: n^2 

### Maximum cost of eval_nestedLoop_start(V_n,V_m,V_N,B): nat(V_m)*24*nat(V_n)+nat(V_n)*40+nat(V_N)*6+nat(V_N+1)*20+nat(V_n)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 79 ms.
* Invariants computed in 320 ms.
   - Backward Invariants 183 ms.
   - Transitive Invariants 35 ms.
* Refinement performed in 268 ms.
* Termination proved in 69 ms.
* Upper bounds computed in 857 ms.
   - Equation cost structures 158 ms.
   - Phase cost structures 558 ms.
   - Chain cost structures 184 ms.
   - Solving cost expressions 11 ms.
* Total analysis performed in 1670 ms.

