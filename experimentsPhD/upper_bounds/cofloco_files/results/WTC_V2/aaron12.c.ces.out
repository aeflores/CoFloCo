WARNING: Excluded non-linear constraints:[F=B+A*A]
Warning: Ignored call to eval_aaron12_stop/1 in equation eval_aaron12_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_aaron12_10/5,eval_aaron12_9/4,eval_aaron12_bb1_in/4,eval_aaron12_bb2_in/4,eval_aaron12_bb3_in/5,eval_aaron12_bb4_in/5]
1. non_recursive  : [eval_aaron12_bb5_in/1]
2. non_recursive  : [loop_cont_eval_aaron12_bb1_in/2]
3. non_recursive  : [eval_aaron12_8/4]
4. non_recursive  : [eval_aaron12_7/4]
5. non_recursive  : [eval_aaron12_6/4]
6. non_recursive  : [eval_aaron12_5/4]
7. non_recursive  : [eval_aaron12_4/4]
8. non_recursive  : [eval_aaron12_3/4]
9. non_recursive  : [eval_aaron12_2/4]
10. non_recursive  : [eval_aaron12_1/4]
11. non_recursive  : [eval_aaron12_0/4]
12. non_recursive  : [eval_aaron12_bb0_in/4]
13. non_recursive  : [eval_aaron12_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_aaron12_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_aaron12_8/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_aaron12_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_aaron12_bb1_in/4 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_aaron12_bb1_in/4 
* CE 6: eval_aaron12_bb1_in(V__03,V__01,V__0,B) = 0
     [V__01>=V__0+1,B=2] 
* CE 7: eval_aaron12_bb1_in(V__03,V__01,V__0,B) = 1+ eval_aaron12_bb1_in(C,D,E,F)
     [V__0>=V__01,V__0=V__03+E,V__03=C+1,F=2,B=2] 
* CE 8: eval_aaron12_bb1_in(V__03,V__01,V__0,B) = 1+ eval_aaron12_bb1_in(V__03,C,D,E)
     [V__0>=V__01,V__01+V__0+1=C,V__0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_aaron12_bb1_in/4 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

#### Loops of eval_aaron12_bb1_in/4 
* Loop 6: eval_aaron12_bb1_in(V__03,V__01,V__0,B)->  eval_aaron12_bb1_in(V__03',V__01',V__0',B')
                  [V__0>=V__01,V__0=V__03+V__0',V__03=V__03'+1,B'=2,B=2] 
* Loop 7: eval_aaron12_bb1_in(V__03,V__01,V__0,B)->  eval_aaron12_bb1_in(V__03,V__01',V__0',B')
                  [V__0>=V__01,V__01+V__0+1=V__01',V__0+1=V__0',B'=2,B=2] 
* Loop 8: eval_aaron12_bb1_in(V__03,V__01,V__0,B) [V__01>=V__0+1,B=2] 

### Ranking functions of CR eval_aaron12_bb1_in(V__03,V__01,V__0,B) 

#### Partial ranking functions of CR eval_aaron12_bb1_in(V__03,V__01,V__0,B) 


### Resulting Chains:eval_aaron12_bb1_in(V__03,V__01,V__0,B) 
* [[6,7]]...
* [[6,7],8]
* [8]


### Specialization of cost equations eval_aaron12_8/4 
* CE 2 is refined into CE [9,10,11] 


#### Refined cost equations eval_aaron12_8/4 
* CE 9: eval_aaron12_8(V_x,V_y,V_z,B) = 1+ eval_aaron12_bb1_in(V_z,V_y,V_x,C):[[6,7]]
     [V_x>=V_y,C=2] 
* CE 10: eval_aaron12_8(V_x,V_y,V_z,B) = 1+ eval_aaron12_bb1_in(V_z,V_y,V_x,C):[[6,7],8]
     [V_x>=V_y,C=2] 
* CE 11: eval_aaron12_8(V_x,V_y,V_z,B) = 1+ eval_aaron12_bb1_in(V_z,V_y,V_x,C):[8]
     [V_y>=V_x+1,C=2] 

### Cost equations --> "Loop" of eval_aaron12_8/4 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [9] --> Loop 11 

#### Loops of eval_aaron12_8/4 
* Loop 9: eval_aaron12_8(V_x,V_y,V_z,B) [V_x>=V_y] 
* Loop 10: eval_aaron12_8(V_x,V_y,V_z,B) [V_y>=V_x+1] 
* Loop 11: eval_aaron12_8(V_x,V_y,V_z,B) [V_x>=V_y] 

### Ranking functions of CR eval_aaron12_8(V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_aaron12_8(V_x,V_y,V_z,B) 


### Resulting Chains:eval_aaron12_8(V_x,V_y,V_z,B) 
* [11]...
* [10]
* [9]


### Specialization of cost equations eval_aaron12_start/4 
* CE 1 is refined into CE [12,13,14] 


#### Refined cost equations eval_aaron12_start/4 
* CE 12: eval_aaron12_start(V_x,V_y,V_z,B) = 0+ eval_aaron12_8(V_x,V_y,V_z,B):[11]
     [V_x>=V_y] 
* CE 13: eval_aaron12_start(V_x,V_y,V_z,B) = 0+ eval_aaron12_8(V_x,V_y,V_z,B):[10]
     [V_y>=V_x+1] 
* CE 14: eval_aaron12_start(V_x,V_y,V_z,B) = 0+ eval_aaron12_8(V_x,V_y,V_z,B):[9]
     [V_x>=V_y] 

### Cost equations --> "Loop" of eval_aaron12_start/4 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of eval_aaron12_start/4 
* Loop 12: eval_aaron12_start(V_x,V_y,V_z,B) [V_x>=V_y] 
* Loop 13: eval_aaron12_start(V_x,V_y,V_z,B) [V_y>=V_x+1] 
* Loop 14: eval_aaron12_start(V_x,V_y,V_z,B) [V_x>=V_y] 

### Ranking functions of CR eval_aaron12_start(V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_aaron12_start(V_x,V_y,V_z,B) 


### Resulting Chains:eval_aaron12_start(V_x,V_y,V_z,B) 
* [14]...
* [13]
* [12]


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_aaron12_bb1_in(V__03,V__01,V__0,B) -> [eval_aaron12_bb1_in(V__03',V__01',V__0',B')] 
1
 * loop 7:eval_aaron12_bb1_in(V__03,V__01,V__0,B) -> [eval_aaron12_bb1_in(V__03',V__01',V__0',B')] 
1
#### Cost of phase [6,7]:eval_aaron12_bb1_in(V__03,V__01,V__0,B) -> [eval_aaron12_bb1_in(V__03',V__01',V__0',B')] 
2*it(6)+0
#### Cost of phase [6,7]:eval_aaron12_bb1_in(V__03,V__01,V__0,B) -> [eval_aaron12_bb1_in(V__03',V__01',V__0',B')] 
2*it(6)+0
#### Cost of chains of eval_aaron12_bb1_in(V__03,V__01,V__0,B):
* Chain [[6,7]]...: 2*it(6)+0
  with precondition: [V__0>=V__01,B=2] 

* Chain [[6,7],8]: 2*it(6)+0
  with precondition: [B=2,V__0>=V__01] 

* Chain [8]: 0
  with precondition: [B=2,V__01>=V__0+1] 


#### Cost of chains of eval_aaron12_8(V_x,V_y,V_z,B):
* Chain [11]...: 2*s(1)+1
  with precondition: [V_x>=V_y] 

* Chain [10]: 1
  with precondition: [V_y>=V_x+1] 

* Chain [9]: 2*s(2)+1
  with precondition: [V_x>=V_y] 


#### Cost of chains of eval_aaron12_start(V_x,V_y,V_z,B):
* Chain [14]...: 2*s(3)+1
  with precondition: [V_x>=V_y] 

* Chain [13]: 1
  with precondition: [V_y>=V_x+1] 

* Chain [12]: 2*s(4)+1
  with precondition: [V_x>=V_y] 


Closed-form bounds of eval_aaron12_start(V_x,V_y,V_z,B): 
-------------------------------------
* Chain [14]... with precondition: [V_x>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13] with precondition: [V_y>=V_x+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V_x>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_aaron12_start(V_x,V_y,V_z,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 17 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 79 ms.

