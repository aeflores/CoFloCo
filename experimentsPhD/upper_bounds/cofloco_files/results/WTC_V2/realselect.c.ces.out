Warning: Ignored call to eval_realselect_stop/1 in equation eval_realselect_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_realselect_bb2_in/8,eval_realselect_bb3_in/9]
1. recursive  : [eval_realselect_19/5,eval_realselect_20/5,eval_realselect_27/6,eval_realselect_28/6,eval_realselect_bb1_in/3,eval_realselect_bb4_in/5,loop_cont_eval_realselect_bb2_in/6]
2. non_recursive  : [eval_realselect_bb5_in/1]
3. non_recursive  : [loop_cont_eval_realselect_bb1_in/2]
4. non_recursive  : [eval_realselect_6/2]
5. non_recursive  : [eval_realselect_5/2]
6. non_recursive  : [eval_realselect_4/2]
7. non_recursive  : [eval_realselect_3/2]
8. non_recursive  : [eval_realselect_2/2]
9. non_recursive  : [eval_realselect_1/2]
10. non_recursive  : [eval_realselect_0/2]
11. non_recursive  : [eval_realselect_bb0_in/2]
12. non_recursive  : [eval_realselect_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_realselect_bb2_in/8
1. SCC is partially evaluated into eval_realselect_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_realselect_6/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_realselect_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realselect_bb2_in/8 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_realselect_bb2_in/8 
* CE 7: eval_realselect_bb2_in(A,B,C,D,A,B,C,E) = 0
     [A>=B+2,C+1>=A,C+1=E,D=2] 
* CE 8: eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) = 1+ eval_realselect_bb2_in(V_array_size,V_i_0,G,H,C,D,E,F)
     [V_array_size>=V_j_0_sink+2,V_j_0_sink>=V_i_0,V_j_0_sink+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_realselect_bb2_in/8 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

#### Loops of eval_realselect_bb2_in/8 
* Loop 7: eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F)->  eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink',B',C,D,E,F)
                  [V_array_size>=V_j_0_sink+2,V_j_0_sink>=V_i_0,V_j_0_sink+1=V_j_0_sink',B'=2,B=2] 
* Loop 8: eval_realselect_bb2_in(A,B,C,D,A,B,C,E) [A>=B+2,C+1>=A,C+1=E,D=2] 

### Ranking functions of CR eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) 
* RF of phase [7]: [V_array_size-V_j_0_sink-1]

#### Partial ranking functions of CR eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_array_size-V_j_0_sink-1


### Resulting Chains:eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) 
* [[7],8]


### Specialization of cost equations eval_realselect_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 


#### Refined cost equations eval_realselect_bb1_in/3 
* CE 9: eval_realselect_bb1_in(V_array_size,V_i_0,B) = 0
     [V_i_0+1>=V_array_size,B=3] 
* CE 10: eval_realselect_bb1_in(V_array_size,V_i_0,B) = 2+ eval_realselect_bb2_in(V_array_size,V_i_0,V_i_0,C,V_array_size,V_i_0,D,V_array_size):[[7],8]+ eval_realselect_bb1_in(V_array_size,E,F)
     [V_array_size>=V_i_0+2,V_i_0+1=E,V_array_size=D+1,F=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_realselect_bb1_in/3 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_realselect_bb1_in/3 
* Loop 9: eval_realselect_bb1_in(V_array_size,V_i_0,B)->  eval_realselect_bb1_in(V_array_size,V_i_0',B')
                  [V_array_size>=V_i_0+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 10: eval_realselect_bb1_in(V_array_size,V_i_0,B) [V_i_0+1>=V_array_size,B=3] 

### Ranking functions of CR eval_realselect_bb1_in(V_array_size,V_i_0,B) 
* RF of phase [9]: [V_array_size-V_i_0-1]

#### Partial ranking functions of CR eval_realselect_bb1_in(V_array_size,V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_array_size-V_i_0-1


### Resulting Chains:eval_realselect_bb1_in(V_array_size,V_i_0,B) 
* [[9],10]
* [10]


### Specialization of cost equations eval_realselect_6/2 
* CE 2 is refined into CE [11,12] 


#### Refined cost equations eval_realselect_6/2 
* CE 11: eval_realselect_6(V_array_size,B) = 1+ eval_realselect_bb1_in(V_array_size,C,D):[[9],10]
     [V_array_size>=2,D=3,C=0] 
* CE 12: eval_realselect_6(V_array_size,B) = 1+ eval_realselect_bb1_in(V_array_size,C,D):[10]
     [1>=V_array_size,D=3,C=0] 

### Cost equations --> "Loop" of eval_realselect_6/2 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_realselect_6/2 
* Loop 11: eval_realselect_6(V_array_size,B) [V_array_size>=2] 
* Loop 12: eval_realselect_6(V_array_size,B) [1>=V_array_size] 

### Ranking functions of CR eval_realselect_6(V_array_size,B) 

#### Partial ranking functions of CR eval_realselect_6(V_array_size,B) 


### Resulting Chains:eval_realselect_6(V_array_size,B) 
* [12]
* [11]


### Specialization of cost equations eval_realselect_start/2 
* CE 1 is refined into CE [13,14] 


#### Refined cost equations eval_realselect_start/2 
* CE 13: eval_realselect_start(V_array_size,B) = 0+ eval_realselect_6(V_array_size,B):[12]
     [1>=V_array_size] 
* CE 14: eval_realselect_start(V_array_size,B) = 0+ eval_realselect_6(V_array_size,B):[11]
     [V_array_size>=2] 

### Cost equations --> "Loop" of eval_realselect_start/2 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_realselect_start/2 
* Loop 13: eval_realselect_start(V_array_size,B) [V_array_size>=2] 
* Loop 14: eval_realselect_start(V_array_size,B) [1>=V_array_size] 

### Ranking functions of CR eval_realselect_start(V_array_size,B) 

#### Partial ranking functions of CR eval_realselect_start(V_array_size,B) 


### Resulting Chains:eval_realselect_start(V_array_size,B) 
* [14]
* [13]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) -> [eval_realselect_bb2_in(V_array_size',V_i_0',V_j_0_sink',B',C',D',E',F')] 
1
#### Cost of phase [7]:eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F) -> [eval_realselect_bb2_in(V_array_size',V_i_0',V_j_0_sink',B',C',D',E',F')] 
1*it(7)+0
  Such that:it(7) =< V_array_size-V_j_0_sink
it(7) =< V_array_size-V_j_0_sink-V_array_size'+V_j_0_sink'

#### Cost of chains of eval_realselect_bb2_in(V_array_size,V_i_0,V_j_0_sink,B,C,D,E,F):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_array_size-V_j_0_sink

  with precondition: [B=2,V_array_size=C,V_i_0=D,V_array_size=E+1,V_array_size=F,V_j_0_sink>=V_i_0,V_array_size>=V_j_0_sink+2] 


#### Cost of loops [9] 

 * loop 9:eval_realselect_bb1_in(V_array_size,V_i_0,B) -> [eval_realselect_bb1_in(V_array_size',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_array_size'-V_i_0'+1

#### Cost of phase [9]:eval_realselect_bb1_in(V_array_size,V_i_0,B) -> [eval_realselect_bb1_in(V_array_size',V_i_0',B')] 
2*it(9)+1*s(3)+0
  Such that:it(9) =< V_array_size-V_i_0-V_array_size'+V_i_0'
aux(2) =< V_array_size-V_i_0
it(9) =< aux(2)
s(3) =< it(9)*aux(2)

#### Cost of chains of eval_realselect_bb1_in(V_array_size,V_i_0,B):
* Chain [[9],10]: 2*it(9)+1*s(3)+0
  Such that:aux(3) =< V_array_size-V_i_0
it(9) =< aux(3)
s(3) =< it(9)*aux(3)

  with precondition: [B=3,V_i_0>=0,V_array_size>=V_i_0+2] 

* Chain [10]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0+1>=V_array_size] 


#### Cost of chains of eval_realselect_6(V_array_size,B):
* Chain [12]: 1
  with precondition: [1>=V_array_size] 

* Chain [11]: 2*s(5)+1*s(6)+1
  Such that:s(4) =< V_array_size
s(5) =< s(4)
s(6) =< s(5)*s(4)

  with precondition: [V_array_size>=2] 


#### Cost of chains of eval_realselect_start(V_array_size,B):
* Chain [14]: 1
  with precondition: [1>=V_array_size] 

* Chain [13]: 2*s(8)+1*s(9)+1
  Such that:s(7) =< V_array_size
s(8) =< s(7)
s(9) =< s(8)*s(7)

  with precondition: [V_array_size>=2] 


Closed-form bounds of eval_realselect_start(V_array_size,B): 
-------------------------------------
* Chain [14] with precondition: [1>=V_array_size] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V_array_size>=2] 
    - Upper bound: 2*V_array_size+1+V_array_size*V_array_size 
    - Complexity: n^2 

### Maximum cost of eval_realselect_start(V_array_size,B): nat(V_array_size)*nat(V_array_size)+nat(V_array_size)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 61 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 71 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 118 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 62 ms.
   - Chain cost structures 34 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 388 ms.

