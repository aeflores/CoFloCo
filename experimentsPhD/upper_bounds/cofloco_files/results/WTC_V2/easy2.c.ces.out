Warning: Ignored call to eval_easy2_stop/1 in equation eval_easy2_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_easy2_bb1_in/2,eval_easy2_bb2_in/2]
1. non_recursive  : [eval_easy2_bb3_in/1]
2. non_recursive  : [loop_cont_eval_easy2_bb1_in/2]
3. non_recursive  : [eval_easy2_6/2]
4. non_recursive  : [eval_easy2_5/2]
5. non_recursive  : [eval_easy2_4/2]
6. non_recursive  : [eval_easy2_3/2]
7. non_recursive  : [eval_easy2_2/2]
8. non_recursive  : [eval_easy2_1/2]
9. non_recursive  : [eval_easy2_0/2]
10. non_recursive  : [eval_easy2_bb0_in/2]
11. non_recursive  : [eval_easy2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_easy2_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_easy2_6/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_easy2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_easy2_bb1_in/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations eval_easy2_bb1_in/2 
* CE 5: eval_easy2_bb1_in(V__0,B) = 0
     [0>=V__0,B=2] 
* CE 6: eval_easy2_bb1_in(V__0,B) = 1+ eval_easy2_bb1_in(C,D)
     [V__0>=1,V__0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_easy2_bb1_in/2 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

#### Loops of eval_easy2_bb1_in/2 
* Loop 5: eval_easy2_bb1_in(V__0,B)->  eval_easy2_bb1_in(V__0',B')
                  [V__0>=1,V__0=V__0'+1,B'=2,B=2] 
* Loop 6: eval_easy2_bb1_in(V__0,B) [0>=V__0,B=2] 

### Ranking functions of CR eval_easy2_bb1_in(V__0,B) 
* RF of phase [5]: [V__0]

#### Partial ranking functions of CR eval_easy2_bb1_in(V__0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V__0


### Resulting Chains:eval_easy2_bb1_in(V__0,B) 
* [[5],6]
* [6]


### Specialization of cost equations eval_easy2_6/2 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations eval_easy2_6/2 
* CE 7: eval_easy2_6(V_z,B) = 1+ eval_easy2_bb1_in(V_z,C):[[5],6]
     [V_z>=1,C=2] 
* CE 8: eval_easy2_6(V_z,B) = 1+ eval_easy2_bb1_in(V_z,C):[6]
     [0>=V_z,C=2] 

### Cost equations --> "Loop" of eval_easy2_6/2 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_easy2_6/2 
* Loop 7: eval_easy2_6(V_z,B) [V_z>=1] 
* Loop 8: eval_easy2_6(V_z,B) [0>=V_z] 

### Ranking functions of CR eval_easy2_6(V_z,B) 

#### Partial ranking functions of CR eval_easy2_6(V_z,B) 


### Resulting Chains:eval_easy2_6(V_z,B) 
* [8]
* [7]


### Specialization of cost equations eval_easy2_start/2 
* CE 1 is refined into CE [9,10] 


#### Refined cost equations eval_easy2_start/2 
* CE 9: eval_easy2_start(V_z,B) = 0+ eval_easy2_6(V_z,B):[8]
     [0>=V_z] 
* CE 10: eval_easy2_start(V_z,B) = 0+ eval_easy2_6(V_z,B):[7]
     [V_z>=1] 

### Cost equations --> "Loop" of eval_easy2_start/2 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_easy2_start/2 
* Loop 9: eval_easy2_start(V_z,B) [V_z>=1] 
* Loop 10: eval_easy2_start(V_z,B) [0>=V_z] 

### Ranking functions of CR eval_easy2_start(V_z,B) 

#### Partial ranking functions of CR eval_easy2_start(V_z,B) 


### Resulting Chains:eval_easy2_start(V_z,B) 
* [10]
* [9]


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_easy2_bb1_in(V__0,B) -> [eval_easy2_bb1_in(V__0',B')] 
1
#### Cost of phase [5]:eval_easy2_bb1_in(V__0,B) -> [eval_easy2_bb1_in(V__0',B')] 
1*it(5)+0
  Such that:it(5) =< V__0
it(5) =< V__0-V__0'

#### Cost of chains of eval_easy2_bb1_in(V__0,B):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< V__0

  with precondition: [B=2,V__0>=1] 

* Chain [6]: 0
  with precondition: [B=2,0>=V__0] 


#### Cost of chains of eval_easy2_6(V_z,B):
* Chain [8]: 1
  with precondition: [0>=V_z] 

* Chain [7]: 1*s(1)+1
  Such that:s(1) =< V_z

  with precondition: [V_z>=1] 


#### Cost of chains of eval_easy2_start(V_z,B):
* Chain [10]: 1
  with precondition: [0>=V_z] 

* Chain [9]: 1*s(2)+1
  Such that:s(2) =< V_z

  with precondition: [V_z>=1] 


Closed-form bounds of eval_easy2_start(V_z,B): 
-------------------------------------
* Chain [10] with precondition: [0>=V_z] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [9] with precondition: [V_z>=1] 
    - Upper bound: V_z+1 
    - Complexity: n 

### Maximum cost of eval_easy2_start(V_z,B): nat(V_z)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 39 ms.

