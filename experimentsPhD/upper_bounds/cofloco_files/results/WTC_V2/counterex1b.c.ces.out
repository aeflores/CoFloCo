Warning: Ignored call to eval_counterex1b_stop/1 in equation eval_counterex1b_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1b_5/9,eval_counterex1b_6/10,eval_counterex1b_bb1_in/9,eval_counterex1b_bb2_in/9,eval_counterex1b_bb3_in/10]
1. recursive  : [eval_counterex1b_13/10,eval_counterex1b_14/11,eval_counterex1b_bb4_in/10,eval_counterex1b_bb5_in/10,eval_counterex1b_bb6_in/11]
2. recursive  : [eval_counterex1b_10/6,eval_counterex1b_11/6,eval_counterex1b_12/6,eval_counterex1b__critedge2_in/4,eval_counterex1b__critedge_in/5,loop_cont_eval_counterex1b_bb1_in/6,loop_cont_eval_counterex1b_bb4_in/5]
3. non_recursive  : [eval_counterex1b_bb7_in/1]
4. non_recursive  : [loop_cont_eval_counterex1b__critedge2_in/2]
5. non_recursive  : [eval_counterex1b_4/4]
6. non_recursive  : [eval_counterex1b_3/4]
7. non_recursive  : [eval_counterex1b_2/4]
8. non_recursive  : [eval_counterex1b_1/4]
9. non_recursive  : [eval_counterex1b_0/4]
10. non_recursive  : [eval_counterex1b_bb0_in/4]
11. non_recursive  : [eval_counterex1b_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1b_bb1_in/9
1. SCC is partially evaluated into eval_counterex1b_bb4_in/10
2. SCC is partially evaluated into eval_counterex1b__critedge2_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_counterex1b_4/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_counterex1b_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1b_bb1_in/9 
* CE 5 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_counterex1b_bb1_in/9 
* CE 11: eval_counterex1b_bb1_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,D>=0,C>=0,E=2] 
* CE 12: eval_counterex1b_bb1_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,C>=0,0>=D+1,E=2] 
* CE 13: eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) = 1+ eval_counterex1b_bb1_in(V_n,V__01,V__0,G,H,C,D,E,F)
     [V__01>=V__1,V__1>=0,V__0>=0,V__1=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_counterex1b_bb1_in/9 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

#### Loops of eval_counterex1b_bb1_in/9 
* Loop 11: eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F)->  eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1',B',C,D,E,F)
                  [V__01>=V__1,V__1>=0,V__0>=0,V__1=V__1'+1,B'=2,B=2] 
* Loop 12: eval_counterex1b_bb1_in(A,B,C,D,E,A,B,C,D) [B>=D,D>=0,C>=0,E=2] 
* Loop 13: eval_counterex1b_bb1_in(A,B,C,D,E,A,B,C,D) [B>=D,C>=0,0>=D+1,E=2] 

### Ranking functions of CR eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) 
* RF of phase [11]: [V__1+1]

#### Partial ranking functions of CR eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__1+1


### Resulting Chains:eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Specialization of cost equations eval_counterex1b_bb4_in/10 
* CE 8 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations eval_counterex1b_bb4_in/10 
* CE 14: eval_counterex1b_bb4_in(A,B,C,D,E,F,G,A,F,E) = 0
     [A>=F,F>=D,E+1=C,G=3] 
* CE 15: eval_counterex1b_bb4_in(A,B,C,D,E,F,G,A,F,E) = 0
     [F>=D,F>=A+1,E+1=C,G=3] 
* CE 16: eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) = 1+ eval_counterex1b_bb4_in(V_n,V__01,F,V__1,V_5,G,H,C,D,E)
     [V_n>=V__2,V__2>=V__1,V__2+1=G,V_5+1=F,V_5+1=V__0,H=3,B=3] 

### Cost equations --> "Loop" of eval_counterex1b_bb4_in/10 
* CEs [16] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 

#### Loops of eval_counterex1b_bb4_in/10 
* Loop 14: eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E)->  eval_counterex1b_bb4_in(V_n,V__01,V__0',V__1,V_5,V__2',B',C,D,E)
                  [V_n>=V__2,V__2>=V__1,V__2+1=V__2',V_5+1=V__0',V_5+1=V__0,B'=3,B=3] 
* Loop 15: eval_counterex1b_bb4_in(A,B,C,D,E,F,G,A,F,E) [A>=F,F>=D,E+1=C,G=3] 
* Loop 16: eval_counterex1b_bb4_in(A,B,C,D,E,F,G,A,F,E) [F>=D,F>=A+1,E+1=C,G=3] 

### Ranking functions of CR eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) 
* RF of phase [14]: [V_n-V__2+1]

#### Partial ranking functions of CR eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_n-V__2+1


### Resulting Chains:eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) 
* [[14],16]
* [[14],15]
* [16]
* [15]


### Specialization of cost equations eval_counterex1b__critedge2_in/4 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33] 


#### Refined cost equations eval_counterex1b__critedge2_in/4 
* CE 17: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 0
     [0>=V__0+1,B=4] 
* CE 18: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],13]+ eval_counterex1b_bb4_in(V_n,V__01,G,H,I,J,K,V_n,L,I):[[14],16]+ eval_counterex1b__critedge2_in(V_n,M,I,N)
     [V_n+1>=0,I+1>=0,V__01>=0,V_n+1=M,V_n+1=L,I+1=G,I+1=E,I+1=C,I+1=V__0,N=4,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 19: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],13]+ eval_counterex1b_bb4_in(V_n,V__01,G,H,I,J,K,V_n,L,I):[[14],15]+ eval_counterex1b__critedge2_in(V_n,L,I,M)
     [V_n>=L,L>=0,I+1>=0,V__01>=0,I+1=G,I+1=E,I+1=C,I+1=V__0,M=4,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 20: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],13]+ eval_counterex1b_bb4_in(V_n,V__01,G,H,I,J,K,V_n,L,I):[16]+ eval_counterex1b__critedge2_in(V_n,M,I,N)
     [I+1>=0,V__01>=0,0>=V_n+2,I+1=G,I+1=E,I+1=C,I+1=V__0,N=4,M+1=0,L+1=0,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 21: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],13]+ eval_counterex1b_bb4_in(V_n,V__01,G,H,I,J,K,V_n,L,I):[15]+ eval_counterex1b__critedge2_in(V_n,M,I,N)
     [V_n+1>=0,I+1>=0,V__01>=0,I+1=G,I+1=E,I+1=C,I+1=V__0,N=4,M+1=0,L+1=0,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 22: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],12]+ eval_counterex1b_bb4_in(V_n,V__01,G,F,H,F,I,V_n,J,H):[[14],16]+ eval_counterex1b__critedge2_in(V_n,K,H,L)
     [V_n>=F,V__01>=F+1,H+1>=0,F>=0,V_n+1=K,V_n+1=J,H+1=G,H+1=E,H+1=C,H+1=V__0,L=4,I=3,D=2,B=4] 
* CE 23: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],12]+ eval_counterex1b_bb4_in(V_n,V__01,G,F,H,F,I,V_n,J,H):[[14],15]+ eval_counterex1b__critedge2_in(V_n,J,H,K)
     [V_n>=J,J>=F+1,V__01>=F+1,H+1>=0,F>=0,H+1=G,H+1=E,H+1=C,H+1=V__0,K=4,I=3,D=2,B=4] 
* CE 24: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],12]+ eval_counterex1b_bb4_in(V_n,V__01,G,F,H,F,I,V_n,F,H):[16]+ eval_counterex1b__critedge2_in(V_n,F,H,J)
     [V__01>=F+1,F>=V_n+1,F>=0,H+1>=0,H+1=G,H+1=E,H+1=C,H+1=V__0,J=4,I=3,D=2,B=4] 
* CE 25: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,F):[[11],12]+ eval_counterex1b_bb4_in(V_n,V__01,G,F,H,F,I,V_n,F,H):[15]+ eval_counterex1b__critedge2_in(V_n,F,H,J)
     [V_n>=F,V__01>=F+1,F>=0,H+1>=0,H+1=G,H+1=E,H+1=C,H+1=V__0,J=4,I=3,D=2,B=4] 
* CE 26: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[13]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,I,G):[[14],16]+ eval_counterex1b__critedge2_in(V_n,J,G,K)
     [V_n>=V__01,G+1>=0,0>=V__01+1,V_n+1=J,V_n+1=I,G+1=F,G+1=E,G+1=C,G+1=V__0,K=4,H=3,D=2,B=4] 
* CE 27: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[13]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,I,G):[[14],15]+ eval_counterex1b__critedge2_in(V_n,I,G,J)
     [V_n>=I,I>=V__01+1,G+1>=0,0>=V__01+1,G+1=F,G+1=E,G+1=C,G+1=V__0,J=4,H=3,D=2,B=4] 
* CE 28: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[13]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,V__01,G):[16]+ eval_counterex1b__critedge2_in(V_n,V__01,G,I)
     [V__01>=V_n+1,G+1>=0,0>=V__01+1,G+1=F,G+1=E,G+1=C,G+1=V__0,I=4,H=3,D=2,B=4] 
* CE 29: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[13]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,V__01,G):[15]+ eval_counterex1b__critedge2_in(V_n,V__01,G,I)
     [V_n>=V__01,G+1>=0,0>=V__01+1,G+1=F,G+1=E,G+1=C,G+1=V__0,I=4,H=3,D=2,B=4] 
* CE 30: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[12]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,I,G):[[14],16]+ eval_counterex1b__critedge2_in(V_n,J,G,K)
     [V_n>=V__01,G+1>=0,V__01>=0,V_n+1=J,V_n+1=I,G+1=F,G+1=E,G+1=C,G+1=V__0,K=4,H=3,D=2,B=4] 
* CE 31: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[12]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,I,G):[[14],15]+ eval_counterex1b__critedge2_in(V_n,I,G,J)
     [V_n>=I,I>=V__01+1,G+1>=0,V__01>=0,G+1=F,G+1=E,G+1=C,G+1=V__0,J=4,H=3,D=2,B=4] 
* CE 32: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[12]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,V__01,G):[16]+ eval_counterex1b__critedge2_in(V_n,V__01,G,I)
     [V__01>=V_n+1,V__01>=0,G+1>=0,G+1=F,G+1=E,G+1=C,G+1=V__0,I=4,H=3,D=2,B=4] 
* CE 33: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) = 3+ eval_counterex1b_bb1_in(V_n,V__01,C,V__01,D,V_n,V__01,E,V__01):[12]+ eval_counterex1b_bb4_in(V_n,V__01,F,V__01,G,V__01,H,V_n,V__01,G):[15]+ eval_counterex1b__critedge2_in(V_n,V__01,G,I)
     [V_n>=V__01,V__01>=0,G+1>=0,G+1=F,G+1=E,G+1=C,G+1=V__0,I=4,H=3,D=2,B=4] 

### Cost equations --> "Loop" of eval_counterex1b__critedge2_in/4 
* CEs [25] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [31] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [22] --> Loop 28 
* CEs [18] --> Loop 29 
* CEs [26] --> Loop 30 
* CEs [21] --> Loop 31 
* CEs [20] --> Loop 32 
* CEs [17] --> Loop 33 

#### Loops of eval_counterex1b__critedge2_in/4 
* Loop 17: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__01>=V__01'+1,V_n>=V__01',V__0'+1>=0,V__01'>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 18: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__01>=V__01'+1,V__01'>=V_n+1,V__0'+1>=0,V__01'>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 19: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01',V__0'+1>=0,V__01'>=1,V__01>=1,V__0'+1=V__0,B'=4,B=4] 
* Loop 20: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01',V__01'>=V__01+1,V__0'+1>=0,V__01>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 21: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01',V__0'+1>=0,V__01'>=0,V__01>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 22: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01',V__01'>=V__01+1,V__0'+1>=0,0>=V__01+1,V__0'+1=V__0,B'=4,B=4] 
* Loop 23: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01,V__0',B')
                  [V_n>=V__01,V__0'+1>=0,V__01>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 24: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01,V__0',B')
                  [V__01>=V_n+1,V__0'+1>=0,V__01>=0,V__0'+1=V__0,B'=4,B=4] 
* Loop 25: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01,V__0',B')
                  [V_n>=V__01,V__0'+1>=0,0>=V__01+1,V__0'+1=V__0,B'=4,B=4] 
* Loop 26: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01,V__0',B')
                  [V__01>=V_n+1,V__0'+1>=0,0>=V__01+1,V__0'+1=V__0,B'=4,B=4] 
* Loop 27: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01,V__0'+1>=0,V__01>=0,V_n+1=V__01',V__0'+1=V__0,B'=4,B=4] 
* Loop 28: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__0'+1>=0,V__01>=1,V_n>=0,V_n+1=V__01',V__0'+1=V__0,B'=4,B=4] 
* Loop 29: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__0'+1>=0,V__01>=0,V_n+1>=0,V_n+1=V__01',V__0'+1=V__0,B'=4,B=4] 
* Loop 30: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V_n>=V__01,V__0'+1>=0,0>=V__01+1,V_n+1=V__01',V__0'+1=V__0,B'=4,B=4] 
* Loop 31: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__0'+1>=0,V__01>=0,V_n+1>=0,V__0'+1=V__0,B'=4,V__01'+1=0,B=4] 
* Loop 32: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B)->  eval_counterex1b__critedge2_in(V_n,V__01',V__0',B')
                  [V__0'+1>=0,V__01>=0,0>=V_n+2,V__0'+1=V__0,B'=4,V__01'+1=0,B=4] 
* Loop 33: eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) [0>=V__0+1,B=4] 

### Ranking functions of CR eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) 
* RF of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]: [V__0+1]
* RF of phase [26]: [V__0+1]

#### Partial ranking functions of CR eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) 
* Partial RF of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:
  - RF of loop [17:1,18:1]:
    V__01 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
  - RF of loop [17:1,18:1,19:1,20:1,21:1,22:1,23:1,24:1,25:1,27:1,28:1,29:1,30:1,31:1]:
    V__0+1
  - RF of loop [18:1]:
    -V_n+V__01-1 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
  - RF of loop [20:1,22:1]:
    V_n-V__01 depends on loops [17:1,18:1,19:1,21:1,28:1,29:1,31:1] 
  - RF of loop [22:1,30:1]:
    -V__01 depends on loops [17:1,18:1,19:1,21:1,28:1,29:1,31:1] 
  - RF of loop [27:1,30:1]:
    V_n-V__01+1 depends on loops [17:1,18:1,19:1,21:1,28:1,29:1,31:1] 
  - RF of loop [31:1]:
    V__01+1 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V__0+1


### Resulting Chains:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) 
* [[26],33]
* [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],[26],33]
* [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],33]
* [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,[26],33]
* [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,33]
* [33]
* [32,[26],33]
* [32,33]


### Specialization of cost equations eval_counterex1b_4/4 
* CE 2 is refined into CE [34,35,36,37,38,39,40,41] 


#### Refined cost equations eval_counterex1b_4/4 
* CE 34: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[[26],33]
     [V_y>=V_n+1,V_x>=0,0>=V_y+1,C=4] 
* CE 35: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[[17,18,19,20,21,22,23,24,25,27,28,29,30,31],[26],33]
     [V_n>=V_y,V_x>=1,0>=V_n+2,C=4] 
* CE 36: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[[17,18,19,20,21,22,23,24,25,27,28,29,30,31],33]
     [V_x>=0,C=4] 
* CE 37: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,[26],33]
     [V_x>=2,V_y>=0,0>=V_n+2,C=4] 
* CE 38: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,33]
     [V_x>=1,V_y>=0,0>=V_n+2,C=4] 
* CE 39: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[33]
     [0>=V_x+1,C=4] 
* CE 40: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,V_x,C):[32,[26],33]
     [V_x>=1,V_y>=0,0>=V_n+2,C=4] 
* CE 41: eval_counterex1b_4(V_n,V_x,V_y,B) = 1+ eval_counterex1b__critedge2_in(V_n,V_y,C,D):[32,33]
     [V_y>=0,0>=V_n+2,D=4,C=0,V_x=0] 

### Cost equations --> "Loop" of eval_counterex1b_4/4 
* CEs [36] --> Loop 34 
* CEs [34] --> Loop 35 
* CEs [39] --> Loop 36 
* CEs [37] --> Loop 37 
* CEs [35] --> Loop 38 
* CEs [40] --> Loop 39 
* CEs [38] --> Loop 40 
* CEs [41] --> Loop 41 

#### Loops of eval_counterex1b_4/4 
* Loop 34: eval_counterex1b_4(V_n,V_x,V_y,B) [V_x>=0] 
* Loop 35: eval_counterex1b_4(V_n,V_x,V_y,B) [V_y>=V_n+1,V_x>=0,0>=V_y+1] 
* Loop 36: eval_counterex1b_4(V_n,V_x,V_y,B) [0>=V_x+1] 
* Loop 37: eval_counterex1b_4(V_n,V_x,V_y,B) [V_y>=0,V_x>=2,0>=V_n+2] 
* Loop 38: eval_counterex1b_4(V_n,V_x,V_y,B) [V_n>=V_y,V_x>=1,0>=V_n+2] 
* Loop 39: eval_counterex1b_4(V_n,V_x,V_y,B) [V_y>=0,V_x>=1,0>=V_n+2] 
* Loop 40: eval_counterex1b_4(V_n,V_x,V_y,B) [V_y>=0,V_x>=1,0>=V_n+2] 
* Loop 41: eval_counterex1b_4(V_n,V_x,V_y,B) [V_y>=0,0>=V_n+2,V_x=0] 

### Ranking functions of CR eval_counterex1b_4(V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1b_4(V_n,V_x,V_y,B) 


### Resulting Chains:eval_counterex1b_4(V_n,V_x,V_y,B) 
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Specialization of cost equations eval_counterex1b_start/4 
* CE 1 is refined into CE [42,43,44,45,46,47,48,49] 


#### Refined cost equations eval_counterex1b_start/4 
* CE 42: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,C,V_y,B):[41]
     [V_y>=0,0>=V_n+2,C=0,V_x=0] 
* CE 43: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[40]
     [V_y>=0,V_x>=1,0>=V_n+2] 
* CE 44: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[39]
     [V_y>=0,V_x>=1,0>=V_n+2] 
* CE 45: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[38]
     [V_n>=V_y,V_x>=1,0>=V_n+2] 
* CE 46: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[37]
     [V_y>=0,V_x>=2,0>=V_n+2] 
* CE 47: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[36]
     [0>=V_x+1] 
* CE 48: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[35]
     [V_y>=V_n+1,V_x>=0,0>=V_y+1] 
* CE 49: eval_counterex1b_start(V_n,V_x,V_y,B) = 0+ eval_counterex1b_4(V_n,V_x,V_y,B):[34]
     [V_x>=0] 

### Cost equations --> "Loop" of eval_counterex1b_start/4 
* CEs [49] --> Loop 42 
* CEs [48] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [46] --> Loop 45 
* CEs [45] --> Loop 46 
* CEs [44] --> Loop 47 
* CEs [43] --> Loop 48 
* CEs [42] --> Loop 49 

#### Loops of eval_counterex1b_start/4 
* Loop 42: eval_counterex1b_start(V_n,V_x,V_y,B) [V_x>=0] 
* Loop 43: eval_counterex1b_start(V_n,V_x,V_y,B) [V_y>=V_n+1,V_x>=0,0>=V_y+1] 
* Loop 44: eval_counterex1b_start(V_n,V_x,V_y,B) [0>=V_x+1] 
* Loop 45: eval_counterex1b_start(V_n,V_x,V_y,B) [V_y>=0,V_x>=2,0>=V_n+2] 
* Loop 46: eval_counterex1b_start(V_n,V_x,V_y,B) [V_n>=V_y,V_x>=1,0>=V_n+2] 
* Loop 47: eval_counterex1b_start(V_n,V_x,V_y,B) [V_y>=0,V_x>=1,0>=V_n+2] 
* Loop 48: eval_counterex1b_start(V_n,V_x,V_y,B) [V_y>=0,V_x>=1,0>=V_n+2] 
* Loop 49: eval_counterex1b_start(V_n,V_x,V_y,B) [V_y>=0,0>=V_n+2,V_x=0] 

### Ranking functions of CR eval_counterex1b_start(V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1b_start(V_n,V_x,V_y,B) 


### Resulting Chains:eval_counterex1b_start(V_n,V_x,V_y,B) 
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) -> [eval_counterex1b_bb1_in(V_n',V__01',V__0',V__1',B',C',D',E',F')] 
1
#### Cost of phase [11]:eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) -> [eval_counterex1b_bb1_in(V_n',V__01',V__0',V__1',B',C',D',E',F')] 
1*it(11)+0
  Such that:it(11) =< V__1+1
it(11) =< V__1-V__1'

#### Cost of phase [11]:eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F) -> [eval_counterex1b_bb1_in(V_n',V__01',V__0',V__1',B',C',D',E',F')] 
1*it(11)+0
  Such that:it(11) =< V__1+1
it(11) =< V__1-V__1'

#### Cost of chains of eval_counterex1b_bb1_in(V_n,V__01,V__0,V__1,B,C,D,E,F):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V__1+1

  with precondition: [B=2,F+1=0,V_n=C,V__01=D,V__0=E,V__0>=0,V__1>=0,V__01>=V__1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V__1-F

  with precondition: [B=2,V_n=C,V__01=D,V__0=E,V__0>=0,F>=0,V__01>=V__1,V__1>=F+1] 

* Chain [13]: 0
  with precondition: [B=2,C=V_n,V__01=D,V__0=E,V__1=F,0>=V__1+1,V__0>=0,V__01>=V__1] 

* Chain [12]: 0
  with precondition: [B=2,C=V_n,V__01=D,V__0=E,V__1=F,V__0>=0,V__1>=0,V__01>=V__1] 


#### Cost of loops [14] 

 * loop 14:eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) -> [eval_counterex1b_bb4_in(V_n',V__01',V__0',V__1',V_5',V__2',B',C',D',E')] 
1
#### Cost of phase [14]:eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) -> [eval_counterex1b_bb4_in(V_n',V__01',V__0',V__1',V_5',V__2',B',C',D',E')] 
1*it(14)+0
  Such that:it(14) =< V_n-V__2+1
it(14) =< V_n-V__2-V_n'+V__2'

#### Cost of phase [14]:eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E) -> [eval_counterex1b_bb4_in(V_n',V__01',V__0',V__1',V_5',V__2',B',C',D',E')] 
1*it(14)+0
  Such that:it(14) =< V_n-V__2+1
it(14) =< V_n-V__2-V_n'+V__2'

#### Cost of chains of eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V_5,V__2,B,C,D,E):
* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_n-V__2+1

  with precondition: [B=3,V__0=V_5+1,V_n=C,V_n+1=D,V__0=E+1,V__2>=V__1,V_n>=V__2] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -V__2+D

  with precondition: [B=3,V__0=V_5+1,V_n=C,V__0=E+1,V__2>=V__1,D>=V__2+1,V_n>=D] 

* Chain [16]: 0
  with precondition: [B=3,V__0=V_5+1,V_n=C,V__2=D,V__0=E+1,V__2>=V_n+1,V__2>=V__1] 

* Chain [15]: 0
  with precondition: [B=3,V__0=V_5+1,V_n=C,V__2=D,V__0=E+1,V__2>=V__1,V_n>=V__2] 


#### Cost of loops [26] 

 * loop 26:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
#### Cost of phase [26]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3*it(26)+0
  Such that:it(26) =< V__0+1
it(26) =< V__0-V__0'

#### Cost of loops [17,18,19,20,21,22,23,24,25,27,28,29,30,31] 

 * loop 17:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(2)+3
  Such that:s(2) =< V__01-V__01'

 * loop 18:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(4)+3
  Such that:s(4) =< V__01-V__01'

 * loop 19:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(7)+1*s(8)+3
  Such that:s(7) =< V__01
s(8) =< V__01'

 * loop 20:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(10)+3
  Such that:s(10) =< -V__01+V__01'

 * loop 21:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(13)+1*s(14)+3
  Such that:s(13) =< V__01+1
s(14) =< V__01'+1

 * loop 22:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(16)+3
  Such that:s(16) =< -V__01+V__01'

 * loop 23:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 24:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 25:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 27:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(18)+3
  Such that:s(18) =< -V__01+V__01'

 * loop 28:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(21)+1*s(22)+3
  Such that:s(21) =< V__01
s(22) =< V_n'+1

 * loop 29:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(25)+1*s(26)+3
  Such that:s(25) =< V__01+1
s(26) =< V_n'+2

 * loop 30:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(28)+3
  Such that:s(28) =< V_n-V__01+1

 * loop 31:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(30)+3
  Such that:s(30) =< V__01+1

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
30*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(19) =< V_n
aux(170) =< -V_n+V__01
aux(171) =< -V_n+V_n'
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(177) =< V__0+1
aux(178) =< V__0-V__0'
aux(45) =< aux(171)
aux(25) =< aux(177)
aux(45) =< aux(177)
it(17) =< aux(177)
it(20) =< aux(177)
it(27) =< aux(177)
aux(25) =< aux(178)
aux(45) =< aux(178)
it(17) =< aux(178)
it(20) =< aux(178)
it(27) =< aux(178)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
aux(16) =< it(17)*aux(38)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(38) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(35) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(25)+aux(25)+aux(25)+aux(25)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(16)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
30*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(19) =< V_n
aux(170) =< -V_n+V__01
aux(171) =< -V_n+V_n'
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(177) =< V__0+1
aux(178) =< V__0-V__0'
aux(45) =< aux(171)
aux(25) =< aux(177)
aux(45) =< aux(177)
it(17) =< aux(177)
it(20) =< aux(177)
it(27) =< aux(177)
aux(25) =< aux(178)
aux(45) =< aux(178)
it(17) =< aux(178)
it(20) =< aux(178)
it(27) =< aux(178)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
aux(16) =< it(17)*aux(38)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(38) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(35) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(25)+aux(25)+aux(25)+aux(25)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(16)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
30*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(19) =< V_n
aux(170) =< -V_n+V__01
aux(171) =< -V_n+V_n'
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(177) =< V__0+1
aux(178) =< V__0-V__0'
aux(45) =< aux(171)
aux(25) =< aux(177)
aux(45) =< aux(177)
it(17) =< aux(177)
it(20) =< aux(177)
it(27) =< aux(177)
aux(25) =< aux(178)
aux(45) =< aux(178)
it(17) =< aux(178)
it(20) =< aux(178)
it(27) =< aux(178)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
aux(16) =< it(17)*aux(38)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(38) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(35) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(25)+aux(25)+aux(25)+aux(25)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(16)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

#### Cost of loops [17,18,19,20,21,22,23,24,25,27,28,29,30,31] 

 * loop 17:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(2)+3
  Such that:s(2) =< V__01-V__01'

 * loop 18:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(4)+3
  Such that:s(4) =< V__01-V__01'

 * loop 19:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(7)+1*s(8)+3
  Such that:s(7) =< V__01
s(8) =< V__01'

 * loop 20:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(10)+3
  Such that:s(10) =< -V__01+V__01'

 * loop 21:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(13)+1*s(14)+3
  Such that:s(13) =< V__01+1
s(14) =< V__01'+1

 * loop 22:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(16)+3
  Such that:s(16) =< -V__01+V__01'

 * loop 23:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 24:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 25:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 27:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(18)+3
  Such that:s(18) =< -V__01+V__01'

 * loop 28:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(21)+1*s(22)+3
  Such that:s(21) =< V__01
s(22) =< V_n'+1

 * loop 29:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(25)+1*s(26)+3
  Such that:s(25) =< V__01+1
s(26) =< V_n'+2

 * loop 30:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(28)+3
  Such that:s(28) =< V_n-V__01+1

 * loop 31:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(30)+3
  Such that:s(30) =< V__01+1

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [] 
30*it(17)+6*it(20)+6*it(27)+3*it([32,[26],33])+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+3*s(47)+1*s(48)+0
  Such that:it([32,[26],33]) =< 1
aux(199) =< V_n
s(47) =< V__0
aux(370) =< -V_n
aux(371) =< -V_n+V__01
aux(372) =< V_n-V__01
aux(373) =< V_n-V__01+1
aux(375) =< V__01
aux(376) =< V__01+1
aux(377) =< V__0+1
aux(225) =< aux(370)
it([32,[26],33]) =< aux(370)
aux(225) =< aux(377)
it(17) =< aux(377)
it(20) =< aux(377)
it(27) =< aux(377)
it([32,[26],33]) =< aux(377)
aux(285) =< aux(199)+2
aux(203) =< aux(199)+1
aux(217) =< aux(199)
aux(218) =< aux(199)-1
aux(233) =< max([aux(372),aux(217),0,aux(218),aux(217),0,0,aux(203)])
aux(187) =< it(17)*aux(203)
aux(183) =< it(17)*aux(217)
aux(181) =< it(17)*aux(218)
s(43) =< it(17)*aux(285)
s(37) =< it(17)*aux(203)
aux(196) =< it(17)*aux(218)
s(34) =< it(17)*aux(217)
aux(277) =< aux(233)+1
aux(261) =< aux(233)
aux(271) =< it(17)*aux(285)
it(27) =< aux(271)+aux(187)+aux(183)+aux(187)+aux(373)
s(39) =< aux(271)+aux(187)+aux(183)+aux(187)+aux(373)
it(20) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
s(38) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
s(35) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
aux(314) =< it(27)*aux(285)
aux(185) =< it(27)*aux(203)
aux(310) =< it(20)*aux(203)
aux(182) =< it(20)*aux(217)
s(39) =< it(27)*aux(277)
s(38) =< it(20)*aux(261)
s(35) =< it(20)*aux(233)
it([32,[26],33]) =< aux(377)+aux(377)+aux(377)+aux(377)+aux(371)
s(32) =< aux(377)+aux(377)+aux(377)+aux(377)+aux(371)
aux(194) =< max([aux(375),aux(199),aux(203)])+aux(196)+aux(182)+aux(183)+aux(185)+aux(183)+aux(187)
aux(245) =< aux(194)+1
aux(215) =< aux(194)
s(31) =< it(17)*aux(194)
s(36) =< it(17)*aux(245)
s(33) =< it(17)*aux(215)
s(48) =< it([32,[26],33])*aux(245)
s(48) =< aux(314)+aux(187)+aux(183)+aux(185)+aux(310)+aux(183)+aux(182)+aux(181)+aux(376)

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
30*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(19) =< V_n
aux(170) =< -V_n+V__01
aux(171) =< -V_n+V_n'
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(177) =< V__0+1
aux(178) =< V__0-V__0'
aux(45) =< aux(171)
aux(25) =< aux(177)
aux(45) =< aux(177)
it(17) =< aux(177)
it(20) =< aux(177)
it(27) =< aux(177)
aux(25) =< aux(178)
aux(45) =< aux(178)
it(17) =< aux(178)
it(20) =< aux(178)
it(27) =< aux(178)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
aux(16) =< it(17)*aux(38)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(38) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
s(35) =< aux(7)+aux(45)+aux(25)+aux(3)+aux(1)+aux(25)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(25)+aux(25)+aux(25)+aux(25)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(16)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

#### Cost of loops [17,18,19,20,21,22,23,24,25,27,28,29,30,31] 

 * loop 17:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(2)+3
  Such that:s(2) =< V__01-V__01'

 * loop 18:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(4)+3
  Such that:s(4) =< V__01-V__01'

 * loop 19:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(7)+1*s(8)+3
  Such that:s(7) =< V__01
s(8) =< V__01'

 * loop 20:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(10)+3
  Such that:s(10) =< -V__01+V__01'

 * loop 21:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(13)+1*s(14)+3
  Such that:s(13) =< V__01+1
s(14) =< V__01'+1

 * loop 22:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(16)+3
  Such that:s(16) =< -V__01+V__01'

 * loop 23:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 24:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 25:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
3
 * loop 27:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(18)+3
  Such that:s(18) =< -V__01+V__01'

 * loop 28:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(21)+1*s(22)+3
  Such that:s(21) =< V__01
s(22) =< V_n'+1

 * loop 29:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(25)+1*s(26)+3
  Such that:s(25) =< V__01+1
s(26) =< V_n'+2

 * loop 30:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(28)+3
  Such that:s(28) =< V_n-V__01+1

 * loop 31:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [eval_counterex1b__critedge2_in(V_n',V__01',V__0',B')] 
1*s(30)+3
  Such that:s(30) =< V__01+1

#### Cost of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) -> [] 
30*it(17)+6*it(20)+6*it(27)+3*it([32,33])+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+1*s(49)+0
  Such that:it([32,33]) =< 1
aux(396) =< V_n
aux(561) =< V_n+2
aux(553) =< V__01-V__0+1
aux(582) =< -V_n
aux(583) =< -V_n+V__01
aux(584) =< V_n-V__01
aux(585) =< V_n-V__01+1
aux(587) =< V__01
aux(589) =< V__0+1
aux(422) =< aux(582)
it([32,33]) =< aux(582)
aux(422) =< aux(589)
it(17) =< aux(589)
it(20) =< aux(589)
it(27) =< aux(589)
it([32,33]) =< aux(589)
aux(573) =< aux(561)+1
aux(482) =< aux(396)+2
aux(400) =< aux(396)+1
aux(414) =< aux(396)
aux(415) =< aux(396)-1
aux(430) =< max([aux(584),aux(414),0,aux(415),aux(414),0,0,aux(400)])
aux(564) =< it(17)*aux(482)
aux(384) =< it(17)*aux(400)
aux(380) =< it(17)*aux(414)
aux(378) =< it(17)*aux(415)
s(43) =< it(17)*aux(482)
s(37) =< it(17)*aux(400)
aux(393) =< it(17)*aux(415)
s(34) =< it(17)*aux(414)
aux(474) =< aux(430)+1
aux(458) =< aux(430)
aux(468) =< it(17)*aux(482)
it(27) =< aux(468)+aux(384)+aux(380)+aux(384)+aux(585)
s(39) =< aux(468)+aux(384)+aux(380)+aux(384)+aux(585)
it(20) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
s(38) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
s(35) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
aux(552) =< it(27)*aux(573)
aux(511) =< it(27)*aux(482)
aux(548) =< it(20)*aux(561)
aux(507) =< it(20)*aux(400)
aux(382) =< it(27)*aux(400)
aux(379) =< it(20)*aux(414)
s(39) =< it(27)*aux(474)
s(38) =< it(20)*aux(458)
s(35) =< it(20)*aux(430)
it([32,33]) =< aux(589)+aux(589)+aux(589)+aux(589)+aux(583)
s(32) =< aux(589)+aux(589)+aux(589)+aux(589)+aux(583)
aux(391) =< max([aux(587),aux(396),aux(400)])+aux(393)+aux(379)+aux(380)+aux(382)+aux(380)+aux(384)
aux(442) =< aux(391)+1
aux(412) =< aux(391)
s(31) =< it(17)*aux(391)
s(36) =< it(17)*aux(442)
s(33) =< it(17)*aux(412)
s(49) =< aux(552)+aux(564)+aux(384)+aux(511)+it(17)+it(17)+it(17)+aux(548)+aux(384)+aux(507)+aux(380)+aux(553)
s(49) =< it([32,33])*aux(442)

#### Cost of chains of eval_counterex1b__critedge2_in(V_n,V__01,V__0,B):
* Chain [[26],33]: 3*it(26)+0
  Such that:it(26) =< V__0+1

  with precondition: [B=4,0>=V__01+1,V__0>=0,V__01>=V_n+1] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],[26],33]: 33*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(170) =< -V_n+V__01
aux(19) =< V_n
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(179) =< V__0+1
it(17) =< aux(179)
it(20) =< aux(179)
it(27) =< aux(179)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(179)+aux(3)+aux(1)+aux(179)+aux(3)+aux(172)
s(38) =< aux(7)+aux(179)+aux(3)+aux(1)+aux(179)+aux(3)+aux(172)
s(35) =< aux(7)+aux(179)+aux(3)+aux(1)+aux(179)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(179)+aux(179)+aux(179)+aux(179)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(1)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

  with precondition: [B=4,0>=V_n+2,V__0>=1,V_n>=V__01] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],33]: 30*it(17)+6*it(20)+6*it(27)+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+0
  Such that:aux(170) =< -V_n+V__01
aux(19) =< V_n
aux(172) =< V_n-V__01
aux(173) =< V_n-V__01+1
aux(175) =< V__01
aux(180) =< V__0+1
it(17) =< aux(180)
it(20) =< aux(180)
it(27) =< aux(180)
aux(105) =< aux(19)+2
aux(23) =< aux(19)+1
aux(37) =< aux(19)
aux(38) =< aux(19)-1
aux(53) =< max([aux(172),aux(37),0,aux(38),aux(37),0,0,aux(23)])
aux(7) =< it(17)*aux(23)
aux(3) =< it(17)*aux(37)
aux(1) =< it(17)*aux(38)
s(43) =< it(17)*aux(105)
s(37) =< it(17)*aux(23)
s(34) =< it(17)*aux(37)
aux(97) =< aux(53)+1
aux(81) =< aux(53)
aux(91) =< it(17)*aux(105)
it(27) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
s(39) =< aux(91)+aux(7)+aux(3)+aux(7)+aux(173)
it(20) =< aux(7)+aux(180)+aux(3)+aux(1)+aux(180)+aux(3)+aux(172)
s(38) =< aux(7)+aux(180)+aux(3)+aux(1)+aux(180)+aux(3)+aux(172)
s(35) =< aux(7)+aux(180)+aux(3)+aux(1)+aux(180)+aux(3)+aux(172)
aux(5) =< it(27)*aux(23)
aux(2) =< it(20)*aux(37)
s(39) =< it(27)*aux(97)
s(38) =< it(20)*aux(81)
s(35) =< it(20)*aux(53)
s(32) =< aux(180)+aux(180)+aux(180)+aux(180)+aux(170)
aux(14) =< max([aux(175),aux(19),aux(23)])+aux(1)+aux(2)+aux(3)+aux(5)+aux(3)+aux(7)
aux(65) =< aux(14)+1
aux(35) =< aux(14)
s(31) =< it(17)*aux(14)
s(36) =< it(17)*aux(65)
s(33) =< it(17)*aux(35)

  with precondition: [B=4,V__0>=0] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,[26],33]: 30*it(17)+6*it(20)+6*it(27)+3*it([32,[26],33])+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+3*s(47)+1*s(48)+0
  Such that:it([32,[26],33]) =< 1
aux(199) =< V_n
s(47) =< V__0
aux(370) =< -V_n
aux(371) =< -V_n+V__01
aux(372) =< V_n-V__01
aux(373) =< V_n-V__01+1
aux(375) =< V__01
aux(376) =< V__01+1
aux(377) =< V__0+1
aux(225) =< aux(370)
it([32,[26],33]) =< aux(370)
aux(225) =< aux(377)
it(17) =< aux(377)
it(20) =< aux(377)
it(27) =< aux(377)
it([32,[26],33]) =< aux(377)
aux(285) =< aux(199)+2
aux(203) =< aux(199)+1
aux(217) =< aux(199)
aux(218) =< aux(199)-1
aux(233) =< max([aux(372),aux(217),0,aux(218),aux(217),0,0,aux(203)])
aux(187) =< it(17)*aux(203)
aux(183) =< it(17)*aux(217)
aux(181) =< it(17)*aux(218)
s(43) =< it(17)*aux(285)
s(37) =< it(17)*aux(203)
aux(196) =< it(17)*aux(218)
s(34) =< it(17)*aux(217)
aux(277) =< aux(233)+1
aux(261) =< aux(233)
aux(271) =< it(17)*aux(285)
it(27) =< aux(271)+aux(187)+aux(183)+aux(187)+aux(373)
s(39) =< aux(271)+aux(187)+aux(183)+aux(187)+aux(373)
it(20) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
s(38) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
s(35) =< aux(187)+aux(225)+aux(377)+aux(183)+aux(181)+aux(377)+aux(183)+aux(372)
aux(314) =< it(27)*aux(285)
aux(185) =< it(27)*aux(203)
aux(310) =< it(20)*aux(203)
aux(182) =< it(20)*aux(217)
s(39) =< it(27)*aux(277)
s(38) =< it(20)*aux(261)
s(35) =< it(20)*aux(233)
it([32,[26],33]) =< aux(377)+aux(377)+aux(377)+aux(377)+aux(371)
s(32) =< aux(377)+aux(377)+aux(377)+aux(377)+aux(371)
aux(194) =< max([aux(375),aux(199),aux(203)])+aux(196)+aux(182)+aux(183)+aux(185)+aux(183)+aux(187)
aux(245) =< aux(194)+1
aux(215) =< aux(194)
s(31) =< it(17)*aux(194)
s(36) =< it(17)*aux(245)
s(33) =< it(17)*aux(215)
s(48) =< it([32,[26],33])*aux(245)
s(48) =< aux(314)+aux(187)+aux(183)+aux(185)+aux(310)+aux(183)+aux(182)+aux(181)+aux(376)

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=2] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,33]: 30*it(17)+6*it(20)+6*it(27)+3*it([32,33])+1*s(31)+1*s(32)+2*s(33)+1*s(34)+1*s(35)+3*s(36)+2*s(37)+1*s(38)+2*s(39)+1*s(43)+1*s(49)+0
  Such that:it([32,33]) =< 1
aux(396) =< V_n
aux(561) =< V_n+2
aux(553) =< V__01-V__0+1
aux(582) =< -V_n
aux(583) =< -V_n+V__01
aux(584) =< V_n-V__01
aux(585) =< V_n-V__01+1
aux(587) =< V__01
aux(589) =< V__0+1
aux(422) =< aux(582)
it([32,33]) =< aux(582)
aux(422) =< aux(589)
it(17) =< aux(589)
it(20) =< aux(589)
it(27) =< aux(589)
it([32,33]) =< aux(589)
aux(573) =< aux(561)+1
aux(482) =< aux(396)+2
aux(400) =< aux(396)+1
aux(414) =< aux(396)
aux(415) =< aux(396)-1
aux(430) =< max([aux(584),aux(414),0,aux(415),aux(414),0,0,aux(400)])
aux(564) =< it(17)*aux(482)
aux(384) =< it(17)*aux(400)
aux(380) =< it(17)*aux(414)
aux(378) =< it(17)*aux(415)
s(43) =< it(17)*aux(482)
s(37) =< it(17)*aux(400)
aux(393) =< it(17)*aux(415)
s(34) =< it(17)*aux(414)
aux(474) =< aux(430)+1
aux(458) =< aux(430)
aux(468) =< it(17)*aux(482)
it(27) =< aux(468)+aux(384)+aux(380)+aux(384)+aux(585)
s(39) =< aux(468)+aux(384)+aux(380)+aux(384)+aux(585)
it(20) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
s(38) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
s(35) =< aux(384)+aux(422)+aux(589)+aux(380)+aux(378)+aux(589)+aux(380)+aux(584)
aux(552) =< it(27)*aux(573)
aux(511) =< it(27)*aux(482)
aux(548) =< it(20)*aux(561)
aux(507) =< it(20)*aux(400)
aux(382) =< it(27)*aux(400)
aux(379) =< it(20)*aux(414)
s(39) =< it(27)*aux(474)
s(38) =< it(20)*aux(458)
s(35) =< it(20)*aux(430)
it([32,33]) =< aux(589)+aux(589)+aux(589)+aux(589)+aux(583)
s(32) =< aux(589)+aux(589)+aux(589)+aux(589)+aux(583)
aux(391) =< max([aux(587),aux(396),aux(400)])+aux(393)+aux(379)+aux(380)+aux(382)+aux(380)+aux(384)
aux(442) =< aux(391)+1
aux(412) =< aux(391)
s(31) =< it(17)*aux(391)
s(36) =< it(17)*aux(442)
s(33) =< it(17)*aux(412)
s(49) =< aux(552)+aux(564)+aux(384)+aux(511)+it(17)+it(17)+it(17)+aux(548)+aux(384)+aux(507)+aux(380)+aux(553)
s(49) =< it([32,33])*aux(442)

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=1] 

* Chain [33]: 0
  with precondition: [B=4,0>=V__0+1] 

* Chain [32,[26],33]: 3*it(26)+1*s(46)+3
  Such that:s(46) =< V__01+1
it(26) =< V__0

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=1] 

* Chain [32,33]: 1*s(46)+3
  Such that:s(46) =< V__01+1

  with precondition: [V__0=0,B=4,0>=V_n+2,V__01>=0] 


#### Cost of chains of eval_counterex1b_4(V_n,V_x,V_y,B):
* Chain [41]: 1*s(50)+4
  Such that:s(50) =< V_y+1

  with precondition: [V_x=0,0>=V_n+2,V_y>=0] 

* Chain [40]: 3*s(51)+30*s(62)+6*s(63)+6*s(64)+1*s(75)+2*s(76)+1*s(78)+2*s(82)+1*s(83)+1*s(84)+1*s(91)+1*s(95)+3*s(96)+2*s(97)+1*s(98)+1
  Such that:s(51) =< 1
s(55) =< -V_n
s(56) =< -V_n+V_y
s(52) =< V_n
s(53) =< V_n+2
s(57) =< V_n-V_y
s(58) =< V_n-V_y+1
s(54) =< -V_x+V_y+1
s(60) =< V_x+1
s(59) =< V_y
s(61) =< s(55)
s(51) =< s(55)
s(61) =< s(60)
s(62) =< s(60)
s(63) =< s(60)
s(64) =< s(60)
s(51) =< s(60)
s(65) =< s(53)+1
s(66) =< s(52)+2
s(67) =< s(52)+1
s(68) =< s(52)
s(69) =< s(52)-1
s(70) =< max([s(57),s(68),0,s(69),s(68),0,0,s(67)])
s(71) =< s(62)*s(66)
s(72) =< s(62)*s(67)
s(73) =< s(62)*s(68)
s(74) =< s(62)*s(69)
s(75) =< s(62)*s(66)
s(76) =< s(62)*s(67)
s(78) =< s(62)*s(68)
s(79) =< s(70)+1
s(80) =< s(70)
s(64) =< s(71)+s(72)+s(73)+s(72)+s(58)
s(82) =< s(71)+s(72)+s(73)+s(72)+s(58)
s(63) =< s(72)+s(61)+s(60)+s(73)+s(74)+s(60)+s(73)+s(57)
s(83) =< s(72)+s(61)+s(60)+s(73)+s(74)+s(60)+s(73)+s(57)
s(84) =< s(72)+s(61)+s(60)+s(73)+s(74)+s(60)+s(73)+s(57)
s(85) =< s(64)*s(65)
s(86) =< s(64)*s(66)
s(87) =< s(63)*s(53)
s(88) =< s(63)*s(67)
s(89) =< s(64)*s(67)
s(90) =< s(63)*s(68)
s(82) =< s(64)*s(79)
s(83) =< s(63)*s(80)
s(84) =< s(63)*s(70)
s(51) =< s(60)+s(60)+s(60)+s(60)+s(56)
s(91) =< s(60)+s(60)+s(60)+s(60)+s(56)
s(92) =< max([s(59),s(52),s(67)])+s(74)+s(90)+s(73)+s(89)+s(73)+s(72)
s(93) =< s(92)+1
s(94) =< s(92)
s(95) =< s(62)*s(92)
s(96) =< s(62)*s(93)
s(97) =< s(62)*s(94)
s(98) =< s(85)+s(71)+s(72)+s(86)+s(62)+s(62)+s(62)+s(87)+s(72)+s(88)+s(73)+s(54)
s(98) =< s(51)*s(93)

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [39]: 1*s(99)+3*s(100)+4
  Such that:s(100) =< V_x
s(99) =< V_y+1

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [38]: 33*s(107)+6*s(108)+6*s(109)+1*s(118)+2*s(119)+1*s(120)+2*s(124)+1*s(125)+1*s(126)+1*s(129)+1*s(133)+3*s(134)+2*s(135)+1
  Such that:s(101) =< -V_n+V_y
s(102) =< V_n
s(103) =< V_n-V_y
s(104) =< V_n-V_y+1
s(106) =< V_x+1
s(105) =< V_y
s(107) =< s(106)
s(108) =< s(106)
s(109) =< s(106)
s(110) =< s(102)+2
s(111) =< s(102)+1
s(112) =< s(102)
s(113) =< s(102)-1
s(114) =< max([s(103),s(112),0,s(113),s(112),0,0,s(111)])
s(115) =< s(107)*s(111)
s(116) =< s(107)*s(112)
s(117) =< s(107)*s(113)
s(118) =< s(107)*s(110)
s(119) =< s(107)*s(111)
s(120) =< s(107)*s(112)
s(121) =< s(114)+1
s(122) =< s(114)
s(123) =< s(107)*s(110)
s(109) =< s(123)+s(115)+s(116)+s(115)+s(104)
s(124) =< s(123)+s(115)+s(116)+s(115)+s(104)
s(108) =< s(115)+s(106)+s(116)+s(117)+s(106)+s(116)+s(103)
s(125) =< s(115)+s(106)+s(116)+s(117)+s(106)+s(116)+s(103)
s(126) =< s(115)+s(106)+s(116)+s(117)+s(106)+s(116)+s(103)
s(127) =< s(109)*s(111)
s(128) =< s(108)*s(112)
s(124) =< s(109)*s(121)
s(125) =< s(108)*s(122)
s(126) =< s(108)*s(114)
s(129) =< s(106)+s(106)+s(106)+s(106)+s(101)
s(130) =< max([s(105),s(102),s(111)])+s(117)+s(128)+s(116)+s(127)+s(116)+s(115)
s(131) =< s(130)+1
s(132) =< s(130)
s(133) =< s(107)*s(130)
s(134) =< s(107)*s(131)
s(135) =< s(107)*s(132)

  with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 

* Chain [37]: 3*s(136)+3*s(138)+30*s(147)+6*s(148)+6*s(149)+1*s(158)+2*s(159)+1*s(161)+2*s(165)+1*s(166)+1*s(167)+1*s(172)+1*s(176)+3*s(177)+2*s(178)+1*s(179)+1
  Such that:s(136) =< 1
s(139) =< -V_n
s(140) =< -V_n+V_y
s(137) =< V_n
s(141) =< V_n-V_y
s(142) =< V_n-V_y+1
s(138) =< V_x
s(145) =< V_x+1
s(143) =< V_y
s(144) =< V_y+1
s(146) =< s(139)
s(136) =< s(139)
s(146) =< s(145)
s(147) =< s(145)
s(148) =< s(145)
s(149) =< s(145)
s(136) =< s(145)
s(150) =< s(137)+2
s(151) =< s(137)+1
s(152) =< s(137)
s(153) =< s(137)-1
s(154) =< max([s(141),s(152),0,s(153),s(152),0,0,s(151)])
s(155) =< s(147)*s(151)
s(156) =< s(147)*s(152)
s(157) =< s(147)*s(153)
s(158) =< s(147)*s(150)
s(159) =< s(147)*s(151)
s(161) =< s(147)*s(152)
s(162) =< s(154)+1
s(163) =< s(154)
s(164) =< s(147)*s(150)
s(149) =< s(164)+s(155)+s(156)+s(155)+s(142)
s(165) =< s(164)+s(155)+s(156)+s(155)+s(142)
s(148) =< s(155)+s(146)+s(145)+s(156)+s(157)+s(145)+s(156)+s(141)
s(166) =< s(155)+s(146)+s(145)+s(156)+s(157)+s(145)+s(156)+s(141)
s(167) =< s(155)+s(146)+s(145)+s(156)+s(157)+s(145)+s(156)+s(141)
s(168) =< s(149)*s(150)
s(169) =< s(149)*s(151)
s(170) =< s(148)*s(151)
s(171) =< s(148)*s(152)
s(165) =< s(149)*s(162)
s(166) =< s(148)*s(163)
s(167) =< s(148)*s(154)
s(136) =< s(145)+s(145)+s(145)+s(145)+s(140)
s(172) =< s(145)+s(145)+s(145)+s(145)+s(140)
s(173) =< max([s(143),s(137),s(151)])+s(157)+s(171)+s(156)+s(169)+s(156)+s(155)
s(174) =< s(173)+1
s(175) =< s(173)
s(176) =< s(147)*s(173)
s(177) =< s(147)*s(174)
s(178) =< s(147)*s(175)
s(179) =< s(136)*s(174)
s(179) =< s(168)+s(155)+s(156)+s(169)+s(170)+s(156)+s(171)+s(157)+s(144)

  with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 

* Chain [36]: 1
  with precondition: [0>=V_x+1] 

* Chain [35]: 3*s(180)+1
  Such that:s(180) =< V_x+1

  with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 

* Chain [34]: 30*s(187)+6*s(188)+6*s(189)+1*s(198)+2*s(199)+1*s(200)+2*s(204)+1*s(205)+1*s(206)+1*s(209)+1*s(213)+3*s(214)+2*s(215)+1
  Such that:s(181) =< -V_n+V_y
s(182) =< V_n
s(183) =< V_n-V_y
s(184) =< V_n-V_y+1
s(186) =< V_x+1
s(185) =< V_y
s(187) =< s(186)
s(188) =< s(186)
s(189) =< s(186)
s(190) =< s(182)+2
s(191) =< s(182)+1
s(192) =< s(182)
s(193) =< s(182)-1
s(194) =< max([s(183),s(192),0,s(193),s(192),0,0,s(191)])
s(195) =< s(187)*s(191)
s(196) =< s(187)*s(192)
s(197) =< s(187)*s(193)
s(198) =< s(187)*s(190)
s(199) =< s(187)*s(191)
s(200) =< s(187)*s(192)
s(201) =< s(194)+1
s(202) =< s(194)
s(203) =< s(187)*s(190)
s(189) =< s(203)+s(195)+s(196)+s(195)+s(184)
s(204) =< s(203)+s(195)+s(196)+s(195)+s(184)
s(188) =< s(195)+s(186)+s(196)+s(197)+s(186)+s(196)+s(183)
s(205) =< s(195)+s(186)+s(196)+s(197)+s(186)+s(196)+s(183)
s(206) =< s(195)+s(186)+s(196)+s(197)+s(186)+s(196)+s(183)
s(207) =< s(189)*s(191)
s(208) =< s(188)*s(192)
s(204) =< s(189)*s(201)
s(205) =< s(188)*s(202)
s(206) =< s(188)*s(194)
s(209) =< s(186)+s(186)+s(186)+s(186)+s(181)
s(210) =< max([s(185),s(182),s(191)])+s(197)+s(208)+s(196)+s(207)+s(196)+s(195)
s(211) =< s(210)+1
s(212) =< s(210)
s(213) =< s(187)*s(210)
s(214) =< s(187)*s(211)
s(215) =< s(187)*s(212)

  with precondition: [V_x>=0] 


#### Cost of chains of eval_counterex1b_start(V_n,V_x,V_y,B):
* Chain [49]: 1*s(216)+4
  Such that:s(216) =< V_y+1

  with precondition: [V_x=0,0>=V_n+2,V_y>=0] 

* Chain [48]: 3*s(217)+30*s(228)+6*s(229)+6*s(230)+1*s(241)+2*s(242)+1*s(243)+2*s(246)+1*s(247)+1*s(248)+1*s(255)+1*s(259)+3*s(260)+2*s(261)+1*s(262)+1
  Such that:s(217) =< 1
s(218) =< -V_n
s(219) =< -V_n+V_y
s(220) =< V_n
s(221) =< V_n+2
s(222) =< V_n-V_y
s(223) =< V_n-V_y+1
s(224) =< -V_x+V_y+1
s(225) =< V_x+1
s(226) =< V_y
s(227) =< s(218)
s(217) =< s(218)
s(227) =< s(225)
s(228) =< s(225)
s(229) =< s(225)
s(230) =< s(225)
s(217) =< s(225)
s(231) =< s(221)+1
s(232) =< s(220)+2
s(233) =< s(220)+1
s(234) =< s(220)
s(235) =< s(220)-1
s(236) =< max([s(222),s(234),0,s(235),s(234),0,0,s(233)])
s(237) =< s(228)*s(232)
s(238) =< s(228)*s(233)
s(239) =< s(228)*s(234)
s(240) =< s(228)*s(235)
s(241) =< s(228)*s(232)
s(242) =< s(228)*s(233)
s(243) =< s(228)*s(234)
s(244) =< s(236)+1
s(245) =< s(236)
s(230) =< s(237)+s(238)+s(239)+s(238)+s(223)
s(246) =< s(237)+s(238)+s(239)+s(238)+s(223)
s(229) =< s(238)+s(227)+s(225)+s(239)+s(240)+s(225)+s(239)+s(222)
s(247) =< s(238)+s(227)+s(225)+s(239)+s(240)+s(225)+s(239)+s(222)
s(248) =< s(238)+s(227)+s(225)+s(239)+s(240)+s(225)+s(239)+s(222)
s(249) =< s(230)*s(231)
s(250) =< s(230)*s(232)
s(251) =< s(229)*s(221)
s(252) =< s(229)*s(233)
s(253) =< s(230)*s(233)
s(254) =< s(229)*s(234)
s(246) =< s(230)*s(244)
s(247) =< s(229)*s(245)
s(248) =< s(229)*s(236)
s(217) =< s(225)+s(225)+s(225)+s(225)+s(219)
s(255) =< s(225)+s(225)+s(225)+s(225)+s(219)
s(256) =< max([s(226),s(220),s(233)])+s(240)+s(254)+s(239)+s(253)+s(239)+s(238)
s(257) =< s(256)+1
s(258) =< s(256)
s(259) =< s(228)*s(256)
s(260) =< s(228)*s(257)
s(261) =< s(228)*s(258)
s(262) =< s(249)+s(237)+s(238)+s(250)+s(228)+s(228)+s(228)+s(251)+s(238)+s(252)+s(239)+s(224)
s(262) =< s(217)*s(257)

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [47]: 3*s(263)+1*s(264)+4
  Such that:s(263) =< V_x
s(264) =< V_y+1

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [46]: 33*s(271)+6*s(272)+6*s(273)+1*s(282)+2*s(283)+1*s(284)+2*s(288)+1*s(289)+1*s(290)+1*s(293)+1*s(297)+3*s(298)+2*s(299)+1
  Such that:s(265) =< -V_n+V_y
s(266) =< V_n
s(267) =< V_n-V_y
s(268) =< V_n-V_y+1
s(269) =< V_x+1
s(270) =< V_y
s(271) =< s(269)
s(272) =< s(269)
s(273) =< s(269)
s(274) =< s(266)+2
s(275) =< s(266)+1
s(276) =< s(266)
s(277) =< s(266)-1
s(278) =< max([s(267),s(276),0,s(277),s(276),0,0,s(275)])
s(279) =< s(271)*s(275)
s(280) =< s(271)*s(276)
s(281) =< s(271)*s(277)
s(282) =< s(271)*s(274)
s(283) =< s(271)*s(275)
s(284) =< s(271)*s(276)
s(285) =< s(278)+1
s(286) =< s(278)
s(287) =< s(271)*s(274)
s(273) =< s(287)+s(279)+s(280)+s(279)+s(268)
s(288) =< s(287)+s(279)+s(280)+s(279)+s(268)
s(272) =< s(279)+s(269)+s(280)+s(281)+s(269)+s(280)+s(267)
s(289) =< s(279)+s(269)+s(280)+s(281)+s(269)+s(280)+s(267)
s(290) =< s(279)+s(269)+s(280)+s(281)+s(269)+s(280)+s(267)
s(291) =< s(273)*s(275)
s(292) =< s(272)*s(276)
s(288) =< s(273)*s(285)
s(289) =< s(272)*s(286)
s(290) =< s(272)*s(278)
s(293) =< s(269)+s(269)+s(269)+s(269)+s(265)
s(294) =< max([s(270),s(266),s(275)])+s(281)+s(292)+s(280)+s(291)+s(280)+s(279)
s(295) =< s(294)+1
s(296) =< s(294)
s(297) =< s(271)*s(294)
s(298) =< s(271)*s(295)
s(299) =< s(271)*s(296)

  with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 

* Chain [45]: 3*s(300)+3*s(306)+30*s(311)+6*s(312)+6*s(313)+1*s(322)+2*s(323)+1*s(324)+2*s(328)+1*s(329)+1*s(330)+1*s(335)+1*s(339)+3*s(340)+2*s(341)+1*s(342)+1
  Such that:s(300) =< 1
s(301) =< -V_n
s(302) =< -V_n+V_y
s(303) =< V_n
s(304) =< V_n-V_y
s(305) =< V_n-V_y+1
s(306) =< V_x
s(307) =< V_x+1
s(308) =< V_y
s(309) =< V_y+1
s(310) =< s(301)
s(300) =< s(301)
s(310) =< s(307)
s(311) =< s(307)
s(312) =< s(307)
s(313) =< s(307)
s(300) =< s(307)
s(314) =< s(303)+2
s(315) =< s(303)+1
s(316) =< s(303)
s(317) =< s(303)-1
s(318) =< max([s(304),s(316),0,s(317),s(316),0,0,s(315)])
s(319) =< s(311)*s(315)
s(320) =< s(311)*s(316)
s(321) =< s(311)*s(317)
s(322) =< s(311)*s(314)
s(323) =< s(311)*s(315)
s(324) =< s(311)*s(316)
s(325) =< s(318)+1
s(326) =< s(318)
s(327) =< s(311)*s(314)
s(313) =< s(327)+s(319)+s(320)+s(319)+s(305)
s(328) =< s(327)+s(319)+s(320)+s(319)+s(305)
s(312) =< s(319)+s(310)+s(307)+s(320)+s(321)+s(307)+s(320)+s(304)
s(329) =< s(319)+s(310)+s(307)+s(320)+s(321)+s(307)+s(320)+s(304)
s(330) =< s(319)+s(310)+s(307)+s(320)+s(321)+s(307)+s(320)+s(304)
s(331) =< s(313)*s(314)
s(332) =< s(313)*s(315)
s(333) =< s(312)*s(315)
s(334) =< s(312)*s(316)
s(328) =< s(313)*s(325)
s(329) =< s(312)*s(326)
s(330) =< s(312)*s(318)
s(300) =< s(307)+s(307)+s(307)+s(307)+s(302)
s(335) =< s(307)+s(307)+s(307)+s(307)+s(302)
s(336) =< max([s(308),s(303),s(315)])+s(321)+s(334)+s(320)+s(332)+s(320)+s(319)
s(337) =< s(336)+1
s(338) =< s(336)
s(339) =< s(311)*s(336)
s(340) =< s(311)*s(337)
s(341) =< s(311)*s(338)
s(342) =< s(300)*s(337)
s(342) =< s(331)+s(319)+s(320)+s(332)+s(333)+s(320)+s(334)+s(321)+s(309)

  with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 

* Chain [44]: 1
  with precondition: [0>=V_x+1] 

* Chain [43]: 3*s(343)+1
  Such that:s(343) =< V_x+1

  with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 

* Chain [42]: 30*s(350)+6*s(351)+6*s(352)+1*s(361)+2*s(362)+1*s(363)+2*s(367)+1*s(368)+1*s(369)+1*s(372)+1*s(376)+3*s(377)+2*s(378)+1
  Such that:s(344) =< -V_n+V_y
s(345) =< V_n
s(346) =< V_n-V_y
s(347) =< V_n-V_y+1
s(348) =< V_x+1
s(349) =< V_y
s(350) =< s(348)
s(351) =< s(348)
s(352) =< s(348)
s(353) =< s(345)+2
s(354) =< s(345)+1
s(355) =< s(345)
s(356) =< s(345)-1
s(357) =< max([s(346),s(355),0,s(356),s(355),0,0,s(354)])
s(358) =< s(350)*s(354)
s(359) =< s(350)*s(355)
s(360) =< s(350)*s(356)
s(361) =< s(350)*s(353)
s(362) =< s(350)*s(354)
s(363) =< s(350)*s(355)
s(364) =< s(357)+1
s(365) =< s(357)
s(366) =< s(350)*s(353)
s(352) =< s(366)+s(358)+s(359)+s(358)+s(347)
s(367) =< s(366)+s(358)+s(359)+s(358)+s(347)
s(351) =< s(358)+s(348)+s(359)+s(360)+s(348)+s(359)+s(346)
s(368) =< s(358)+s(348)+s(359)+s(360)+s(348)+s(359)+s(346)
s(369) =< s(358)+s(348)+s(359)+s(360)+s(348)+s(359)+s(346)
s(370) =< s(352)*s(354)
s(371) =< s(351)*s(355)
s(367) =< s(352)*s(364)
s(368) =< s(351)*s(365)
s(369) =< s(351)*s(357)
s(372) =< s(348)+s(348)+s(348)+s(348)+s(344)
s(373) =< max([s(349),s(345),s(354)])+s(360)+s(371)+s(359)+s(370)+s(359)+s(358)
s(374) =< s(373)+1
s(375) =< s(373)
s(376) =< s(350)*s(373)
s(377) =< s(350)*s(374)
s(378) =< s(350)*s(375)

  with precondition: [V_x>=0] 


Closed-form bounds of eval_counterex1b_start(V_n,V_x,V_y,B): 
-------------------------------------
* Chain [49] with precondition: [V_x=0,0>=V_n+2,V_y>=0] 
    - Upper bound: V_y+5 
    - Complexity: n 
* Chain [48] with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 
    - Upper bound: (V_x+1)* (max([V_y,1])*6)+4+ -2*V_n+ (78*V_x+78)+ (12*V_x+12)* (V_x+1)+ (-V_n+V_y)+nat(-V_x+V_y+1) 
    - Complexity: n^2 
* Chain [47] with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 
    - Upper bound: 3*V_x+V_y+5 
    - Complexity: n 
* Chain [46] with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 
    - Upper bound: 2*V_n-2*V_y+ (2*V_n-2*V_y+2+ (76*V_x+77+ (12*V_x+12)* (V_x+1))) 
    - Complexity: n^2 
* Chain [45] with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 
    - Upper bound: max([V_y,1])+5+ (V_x+1)* (max([V_y,1])*6)+3*V_x+ -2*V_n+ (69*V_x+69)+ (12*V_x+12)* (V_x+1)+ (-V_n+V_y) 
    - Complexity: n^2 
* Chain [44] with precondition: [0>=V_x+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43] with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 
    - Upper bound: 3*V_x+4 
    - Complexity: n 
* Chain [42] with precondition: [V_x>=0] 
    - Upper bound: (V_x+1)* (max([nat(V_n),nat(V_y),nat(V_n)+1])*6)+1+ (V_x+1)* (nat(V_n)*18)+ (V_x+1)* ((V_x+1)* (nat(V_n)*30))+ (V_x+1)* (nat(nat(V_n)+ -1)*2)+ (V_x+1)* ((V_x+1)* (nat(nat(V_n)+ -1)*6))+ (67*V_x+67)+ (12*V_x+12)* (V_x+1)+nat(-V_n+V_y)+nat(V_n-V_y+1)*2+nat(V_n-V_y)*2 
    - Complexity: n^3 

### Maximum cost of eval_counterex1b_start(V_n,V_x,V_y,B): max([nat(V_y+1)+3+nat(V_x)*3,nat(V_x+1)*12*nat(V_x+1)+nat(V_x+1)*64+max([nat(V_x+1)*2+max([nat(V_x+1)*6+nat(V_x+1)+nat(V_n-V_y+1)*2+nat(V_n-V_y)*2,max([1,nat(V_y)])*6*nat(V_x+1)+3+nat(-V_n)*2+nat(-V_n+V_y)+max([nat(V_x+1)*9+nat(-V_x+V_y+1),max([1,nat(V_y)])+1+nat(V_x)*3])]),nat(V_n)*18*nat(V_x+1)+max([nat(V_n),nat(V_y),nat(V_n)+1])*6*nat(V_x+1)+nat(V_n)*30*nat(V_x+1)*nat(V_x+1)+nat(nat(V_n)+ -1)*2*nat(V_x+1)+nat(nat(V_n)+ -1)*6*nat(V_x+1)*nat(V_x+1)+nat(-V_n+V_y)+nat(V_n-V_y+1)*2+nat(V_n-V_y)*2])+nat(V_x+1)*3])+1 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 43 ms.
* Invariants computed in 148 ms.
   - Backward Invariants 76 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 210 ms.
* Termination proved in 55 ms.
* Upper bounds computed in 5044 ms.
   - Equation cost structures 317 ms.
   - Phase cost structures 4519 ms.
   - Chain cost structures 71 ms.
   - Solving cost expressions 95 ms.
* Total analysis performed in 5547 ms.

