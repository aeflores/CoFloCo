Warning: Ignored call to eval_rsd_stop/1 in equation eval_rsd_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_rsd_13/4,eval_rsd_14/5,eval_rsd_bb2_in/4,eval_rsd_bb3_in/4]
1. non_recursive  : [eval_rsd_bb4_in/1]
2. non_recursive  : [loop_cont_eval_rsd_bb2_in/2]
3. non_recursive  : [eval_rsd_12/4]
4. non_recursive  : [eval_rsd_11/4]
5. non_recursive  : [eval_rsd_10/4]
6. non_recursive  : [eval_rsd_9/4]
7. non_recursive  : [eval_rsd_8/4]
8. non_recursive  : [eval_rsd_7/4]
9. non_recursive  : [eval_rsd_6/4]
10. non_recursive  : [eval_rsd_5/3]
11. non_recursive  : [eval_rsd_4/3]
12. non_recursive  : [eval_rsd_bb1_in/2]
13. non_recursive  : [eval_rsd_2/2]
14. non_recursive  : [eval_rsd_1/2]
15. non_recursive  : [eval_rsd_0/2]
16. non_recursive  : [eval_rsd_bb0_in/2]
17. non_recursive  : [eval_rsd_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rsd_bb2_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_rsd_12/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_rsd_2/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_rsd_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rsd_bb2_in/4 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_rsd_bb2_in/4 
* CE 8: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) = 0
     [V_r>=V_da_0+1,2*V_r>=V_db_0,V_db_0>=V_r,B=2] 
* CE 9: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) = 1+ eval_rsd_bb2_in(V_r,V_da_0,C,D)
     [2*V_r>=V_da_0,2*V_r>=V_db_0,V_da_0>=V_r,V_db_0>=V_r,V_db_0=C+1,D=2,B=2] 
* CE 10: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) = 1+ eval_rsd_bb2_in(V_r,V_db_0,C,D)
     [2*V_r>=V_da_0,2*V_r>=V_db_0,V_da_0>=V_r,V_db_0>=V_r,V_da_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_rsd_bb2_in/4 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

#### Loops of eval_rsd_bb2_in/4 
* Loop 8: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B)->  eval_rsd_bb2_in(V_r,V_da_0,A',B')
                  [2*V_r>=V_da_0,2*V_r>=V_db_0,V_da_0>=V_r,V_db_0>=V_r,V_db_0=A'+1,B'=2,B=2] 
* Loop 9: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B)->  eval_rsd_bb2_in(V_r,V_db_0,V_da_0',B')
                  [2*V_r>=V_da_0,2*V_r>=V_db_0,V_da_0>=V_r,V_db_0>=V_r,V_da_0=V_da_0'+1,B'=2,B=2] 
* Loop 10: eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) [V_r>=V_da_0+1,2*V_r>=V_db_0,V_db_0>=V_r,B=2] 

### Ranking functions of CR eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) 
* RF of phase [8,9]: [V_db_0+V_da_0+1,-2*V_r+V_db_0+V_da_0+1]

#### Partial ranking functions of CR eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V_db_0+V_da_0+1
    -2*V_r+V_db_0+V_da_0+1
  - RF of loop [9:1]:
    V_da_0+1 depends on loops [8:1] 
    -V_db_0/2+V_da_0+1/2 depends on loops [8:1] 
    -V_r+V_da_0+1 depends on loops [8:1] 


### Resulting Chains:eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) 
* [[8,9],10]


### Specialization of cost equations eval_rsd_12/4 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_rsd_12/4 
* CE 11: eval_rsd_12(V_r,V_1,V_2,B) = 1+ eval_rsd_bb2_in(V_r,C,D,E):[[8,9],10]
     [V_r>=0,2*V_r=D,2*V_r=C,2*V_r=V_2,2*V_r=V_1,E=2] 

### Cost equations --> "Loop" of eval_rsd_12/4 
* CEs [11] --> Loop 11 

#### Loops of eval_rsd_12/4 
* Loop 11: eval_rsd_12(A,B,B,C) [B>=0,B=2*A] 

### Ranking functions of CR eval_rsd_12(V_r,V_1,V_2,B) 

#### Partial ranking functions of CR eval_rsd_12(V_r,V_1,V_2,B) 


### Resulting Chains:eval_rsd_12(V_r,V_1,V_2,B) 
* [11]


### Specialization of cost equations eval_rsd_2/2 
* CE 2 is refined into CE [12] 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_rsd_2/2 
* CE 12: eval_rsd_2(V_r,B) = 0+ eval_rsd_12(C,D,D,B):[11]
     [D>=0,D=2*C,D=2*V_r] 
* CE 13: eval_rsd_2(V_r,B) = 0
     [0>=V_r+1] 

### Cost equations --> "Loop" of eval_rsd_2/2 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_rsd_2/2 
* Loop 12: eval_rsd_2(V_r,B) [V_r>=0] 
* Loop 13: eval_rsd_2(V_r,B) [0>=V_r+1] 

### Ranking functions of CR eval_rsd_2(V_r,B) 

#### Partial ranking functions of CR eval_rsd_2(V_r,B) 


### Resulting Chains:eval_rsd_2(V_r,B) 
* [13]
* [12]


### Specialization of cost equations eval_rsd_start/2 
* CE 1 is refined into CE [14,15] 


#### Refined cost equations eval_rsd_start/2 
* CE 14: eval_rsd_start(V_r,B) = 0+ eval_rsd_2(V_r,B):[13]
     [0>=V_r+1] 
* CE 15: eval_rsd_start(V_r,B) = 0+ eval_rsd_2(V_r,B):[12]
     [V_r>=0] 

### Cost equations --> "Loop" of eval_rsd_start/2 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of eval_rsd_start/2 
* Loop 14: eval_rsd_start(V_r,B) [V_r>=0] 
* Loop 15: eval_rsd_start(V_r,B) [0>=V_r+1] 

### Ranking functions of CR eval_rsd_start(V_r,B) 

#### Partial ranking functions of CR eval_rsd_start(V_r,B) 


### Resulting Chains:eval_rsd_start(V_r,B) 
* [15]
* [14]


Computing Bounds
=====================================

#### Cost of loops [8,9] 

 * loop 8:eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) -> [eval_rsd_bb2_in(V_r',V_db_0',V_da_0',B')] 
1
 * loop 9:eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) -> [eval_rsd_bb2_in(V_r',V_db_0',V_da_0',B')] 
1
#### Cost of phase [8,9]:eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B) -> [eval_rsd_bb2_in(V_r',V_db_0',V_da_0',B')] 
1*it(8)+1*it(9)+0
  Such that:aux(4) =< -V_r+V_da_0+1
aux(10) =< -V_r+V_da_0+V_r'-V_da_0'
aux(13) =< V_r
aux(17) =< 3/2*V_r
aux(6) =< -V_db_0/2+V_da_0+1/2
aux(12) =< -V_db_0/2+V_da_0+V_db_0'/2-V_da_0'
aux(2) =< V_da_0+1
aux(8) =< V_da_0-V_da_0'
aux(19) =< -2*V_r+V_db_0+V_da_0+1
aux(20) =< -2*V_r+V_db_0+V_da_0+2*V_r'-V_db_0'-V_da_0'
aux(21) =< V_db_0+V_da_0+1
aux(22) =< V_db_0+V_da_0-V_db_0'-V_da_0'
it(8) =< aux(19)
it(9) =< aux(19)
it(8) =< aux(20)
it(9) =< aux(20)
it(8) =< aux(21)
it(9) =< aux(21)
it(8) =< aux(22)
it(9) =< aux(22)
aux(5) =< it(8)*aux(17)
aux(1) =< it(8)*aux(13)
it(9) =< aux(5)+aux(6)
it(9) =< aux(1)+aux(2)
it(9) =< aux(5)+aux(12)
it(9) =< aux(1)+aux(10)
it(9) =< aux(1)+aux(8)
it(9) =< aux(1)+aux(4)

#### Cost of chains of eval_rsd_bb2_in(V_r,V_db_0,V_da_0,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:aux(13) =< V_r
aux(12) =< -3/2*V_r+3/2*V_da_0+1
aux(17) =< 3/2*V_r
aux(21) =< V_db_0+V_da_0+1
aux(6) =< -V_db_0/2+V_da_0+1/2
aux(2) =< V_da_0+1
aux(23) =< -2*V_r+V_db_0+V_da_0+1
aux(24) =< -V_r+V_da_0+1
it(8) =< aux(23)
it(9) =< aux(23)
it(8) =< aux(21)
it(9) =< aux(21)
aux(5) =< it(8)*aux(17)
aux(1) =< it(8)*aux(13)
it(9) =< aux(5)+aux(6)
it(9) =< aux(1)+aux(2)
it(9) =< aux(5)+aux(12)
it(9) =< aux(1)+aux(24)

  with precondition: [B=2,V_db_0>=V_r,V_da_0>=V_r,2*V_r>=V_db_0,2*V_r>=V_da_0] 


#### Cost of chains of eval_rsd_12(V_r,V_1,V_2,B):
* Chain [11]: 1*s(9)+1*s(10)+1
  Such that:s(1) =< V_r
s(8) =< V_r+1
s(5) =< V_r+1/2
s(4) =< 4*V_r+1
s(3) =< 3/2*V_r
s(2) =< 3/2*V_r+1
aux(25) =< 2*V_r+1
s(9) =< aux(25)
s(10) =< aux(25)
s(9) =< s(4)
s(10) =< s(4)
s(11) =< s(9)*s(3)
s(12) =< s(9)*s(1)
s(10) =< s(11)+s(5)
s(10) =< s(12)+aux(25)
s(10) =< s(11)+s(2)
s(10) =< s(12)+s(8)

  with precondition: [2*V_r=V_1,2*V_r=V_2,V_r>=0] 


#### Cost of chains of eval_rsd_2(V_r,B):
* Chain [13]: 0
  with precondition: [0>=V_r+1] 

* Chain [12]: 1*s(20)+1*s(21)+1
  Such that:s(13) =< V_r
s(14) =< V_r+1
s(15) =< V_r+1/2
s(19) =< 2*V_r+1
s(16) =< 4*V_r+1
s(17) =< 3/2*V_r
s(18) =< 3/2*V_r+1
s(20) =< s(19)
s(21) =< s(19)
s(20) =< s(16)
s(21) =< s(16)
s(22) =< s(20)*s(17)
s(23) =< s(20)*s(13)
s(21) =< s(22)+s(15)
s(21) =< s(23)+s(19)
s(21) =< s(22)+s(18)
s(21) =< s(23)+s(14)

  with precondition: [V_r>=0] 


#### Cost of chains of eval_rsd_start(V_r,B):
* Chain [15]: 0
  with precondition: [0>=V_r+1] 

* Chain [14]: 1*s(31)+1*s(32)+1
  Such that:s(24) =< V_r
s(25) =< V_r+1
s(26) =< V_r+1/2
s(27) =< 2*V_r+1
s(28) =< 4*V_r+1
s(29) =< 3/2*V_r
s(30) =< 3/2*V_r+1
s(31) =< s(27)
s(32) =< s(27)
s(31) =< s(28)
s(32) =< s(28)
s(33) =< s(31)*s(29)
s(34) =< s(31)*s(24)
s(32) =< s(33)+s(26)
s(32) =< s(34)+s(27)
s(32) =< s(33)+s(30)
s(32) =< s(34)+s(25)

  with precondition: [V_r>=0] 


Closed-form bounds of eval_rsd_start(V_r,B): 
-------------------------------------
* Chain [15] with precondition: [0>=V_r+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [14] with precondition: [V_r>=0] 
    - Upper bound: 4*V_r+3 
    - Complexity: n 

### Maximum cost of eval_rsd_start(V_r,B): nat(2*V_r+1)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 18 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 84 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 49 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 182 ms.

