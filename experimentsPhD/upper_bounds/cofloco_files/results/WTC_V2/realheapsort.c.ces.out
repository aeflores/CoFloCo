Warning: Ignored call to eval_realheapsort_stop/1 in equation eval_realheapsort_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_realheapsort_bb16_in/1]
1. recursive  : [eval_realheapsort_bb2_in/7,eval_realheapsort_bb3_in/7,eval_realheapsort_bb4_in/7]
2. recursive  : [eval_realheapsort_28/6,eval_realheapsort_29/6,eval_realheapsort__critedge_in/5,eval_realheapsort_bb1_in/4,loop_cont_eval_realheapsort_bb2_in/6]
3. recursive  : [eval_realheapsort_bb10_in/7,eval_realheapsort_bb11_in/7,eval_realheapsort_bb12_in/7,eval_realheapsort_bb13_in/8,eval_realheapsort_bb14_in/8,eval_realheapsort_bb8_in/7,eval_realheapsort_bb9_in/7]
4. recursive  : [eval_realheapsort_85/5,eval_realheapsort_86/5,eval_realheapsort_bb15_in/4,eval_realheapsort_bb6_in/3,eval_realheapsort_bb7_in/3,loop_cont_eval_realheapsort_bb8_in/5]
5. non_recursive  : [loop_cont_eval_realheapsort_bb6_in/2]
6. non_recursive  : [eval_realheapsort_39/2]
7. non_recursive  : [eval_realheapsort_38/2]
8. non_recursive  : [eval_realheapsort_37/2]
9. non_recursive  : [eval_realheapsort_36/2]
10. non_recursive  : [eval_realheapsort_35/2]
11. non_recursive  : [eval_realheapsort_34/2]
12. non_recursive  : [eval_realheapsort_33/2]
13. non_recursive  : [eval_realheapsort_32/2]
14. non_recursive  : [eval_realheapsort_31/2]
15. non_recursive  : [eval_realheapsort_30/2]
16. non_recursive  : [eval_realheapsort_bb5_in/2]
17. non_recursive  : [loop_cont_eval_realheapsort_bb1_in/3]
18. non_recursive  : [eval_realheapsort_2/2]
19. non_recursive  : [eval_realheapsort_1/2]
20. non_recursive  : [eval_realheapsort_0/2]
21. non_recursive  : [eval_realheapsort_bb0_in/2]
22. non_recursive  : [eval_realheapsort_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_realheapsort_bb2_in/7
2. SCC is partially evaluated into eval_realheapsort_bb1_in/4
3. SCC is partially evaluated into eval_realheapsort_bb8_in/7
4. SCC is partially evaluated into eval_realheapsort_bb6_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_realheapsort_39/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_realheapsort_2/2
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_realheapsort_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realheapsort_bb2_in/7 
* CE 7 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations eval_realheapsort_bb2_in/7 
* CE 18: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) = 0
     [B>=C,A>=B+1,C>=1,D=3] 
* CE 19: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) = 0
     [B>=C,A>=B+1,0>=C,D=3] 
* CE 20: eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) = 1+ eval_realheapsort_bb2_in(V_N,V_k_0,F,G,C,D,E)
     [2*F+2>=V_j_0,V_k_0>=V_j_0,V_N>=V_k_0+1,V_j_0>=2*F+1,V_j_0>=1,G=3,B=3] 

### Cost equations --> "Loop" of eval_realheapsort_bb2_in/7 
* CEs [20] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_realheapsort_bb2_in/7 
* Loop 18: eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E)->  eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0',B',C,D,E)
                  [2*V_j_0'+2>=V_j_0,V_k_0>=V_j_0,V_N>=V_k_0+1,V_j_0>=2*V_j_0'+1,V_j_0>=1,B'=3,B=3] 
* Loop 19: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) [B>=C,A>=B+1,C>=1,D=3] 
* Loop 20: eval_realheapsort_bb2_in(A,B,C,D,A,B,C) [B>=C,A>=B+1,0>=C,D=3] 

### Ranking functions of CR eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* RF of phase [18]: [V_j_0]

#### Partial ranking functions of CR eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_j_0


### Resulting Chains:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) 
* [[18],20]
* [[18],19]
* [20]
* [19]


### Specialization of cost equations eval_realheapsort_bb1_in/4 
* CE 5 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24,25] 


#### Refined cost equations eval_realheapsort_bb1_in/4 
* CE 21: eval_realheapsort_bb1_in(A,B,C,A) = 0
     [B>=A,C=5] 
* CE 22: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,E):[[18],20]+ eval_realheapsort_bb1_in(V_N,F,G,C)
     [V_N>=V_k_0+1,2*E+1>=0,V_k_0>=1,0>=E,V_k_0+1=F,G=5,D=3,B=5] 
* CE 23: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,E):[[18],19]+ eval_realheapsort_bb1_in(V_N,F,G,C)
     [V_N>=V_k_0+1,V_k_0>=2*E+1,E>=1,V_k_0+1=F,G=5,D=3,B=5] 
* CE 24: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,V_k_0):[20]+ eval_realheapsort_bb1_in(V_N,E,F,C)
     [V_N>=V_k_0+1,0>=V_k_0,V_k_0+1=E,F=5,D=3,B=5] 
* CE 25: eval_realheapsort_bb1_in(V_N,V_k_0,B,C) = 2+ eval_realheapsort_bb2_in(V_N,V_k_0,V_k_0,D,V_N,V_k_0,V_k_0):[19]+ eval_realheapsort_bb1_in(V_N,E,F,C)
     [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=E,F=5,D=3,B=5] 

### Cost equations --> "Loop" of eval_realheapsort_bb1_in/4 
* CEs [25] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [21] --> Loop 25 

#### Loops of eval_realheapsort_bb1_in/4 
* Loop 21: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 22: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,V_k_0>=1,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 23: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0+1,0>=V_k_0,V_k_0+1=V_k_0',B'=5,B=5] 
* Loop 24: eval_realheapsort_bb1_in(V_N,V_k_0,B,C)->  eval_realheapsort_bb1_in(V_N,V_k_0',B',C)
                  [V_N>=V_k_0',V_k_0'>=4,V_k_0'=V_k_0+1,B'=5,B=5] 
* Loop 25: eval_realheapsort_bb1_in(A,B,C,A) [B>=A,C=5] 

### Ranking functions of CR eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* RF of phase [21,22,24]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* Partial RF of phase [21,22,24]:
  - RF of loop [21:1,22:1,24:1]:
    V_N-V_k_0


### Resulting Chains:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) 
* [[21,22,24],25]


### Specialization of cost equations eval_realheapsort_bb8_in/7 
* CE 17 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 16 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 14 is refined into CE [30] 
* CE 13 is refined into CE [31] 


#### Refined cost equations eval_realheapsort_bb8_in/7 
* CE 26: eval_realheapsort_bb8_in(A,B,C,D,A,B,C) = 0
     [B+2*C+2>=A,A>=B+2,D=2] 
* CE 27: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,V_k_1+F+2=V_N,G=2,B=2] 
* CE 28: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+1=F,G=2,B=2] 
* CE 29: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,F,G,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+2=F,G=2,B=2] 
* CE 30: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,V_N,F,C,D,E)
     [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,F=2,B=2] 
* CE 31: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) = 1+ eval_realheapsort_bb8_in(V_N,V_k_1,V_N,F,C,D,E)
     [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,F=2,B=2] 

### Cost equations --> "Loop" of eval_realheapsort_bb8_in/7 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [26] --> Loop 31 

#### Loops of eval_realheapsort_bb8_in/7 
* Loop 26: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=V_k_1+2,V_k_1+2*V_j_1+3=V_N,V_k_1+V_j_1'+2=V_N,B'=2,B=2] 
* Loop 27: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+1=V_j_1',B'=2,B=2] 
* Loop 28: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1',B',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,2*V_j_1+2=V_j_1',B'=2,B=2] 
* Loop 29: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_N,A',C,D,E)
                  [V_N>=2*V_j_1+V_k_1+4,V_N>=V_k_1+2,A'=2,B=2] 
* Loop 30: eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E)->  eval_realheapsort_bb8_in(V_N,V_k_1,V_N,A',C,D,E)
                  [V_N>=V_k_1+2,V_N=2*V_j_1+V_k_1+3,A'=2,B=2] 
* Loop 31: eval_realheapsort_bb8_in(A,B,C,D,A,B,C) [B+2*C+2>=A,A>=B+2,D=2] 

### Ranking functions of CR eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 

#### Partial ranking functions of CR eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 


### Resulting Chains:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) 
* [[27,28,29,30]]...
* [[27,28,29,30],31]
* [[27,28,29,30],26,31]
* [31]
* [26,31]


### Specialization of cost equations eval_realheapsort_bb6_in/3 
* CE 11 is refined into CE [32] 
* CE 10 is refined into CE [33,34,35,36,37] 


#### Refined cost equations eval_realheapsort_bb6_in/3 
* CE 32: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 0
     [V_k_1+1>=V_N,B=4] 
* CE 33: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,E,F,G):[[27,28,29,30]]
     [V_N>=V_k_1+3,H=F+1,I=4,D=2,C=0,B=4] 
* CE 34: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,V_N,V_k_1,E):[[27,28,29,30],31]+ eval_realheapsort_bb6_in(V_N,F,G)
     [V_k_1+2*E+2>=V_N,V_N>=V_k_1+3,V_k_1+1=F,G=4,D=2,C=0,B=4] 
* CE 35: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,V_k_1,C,D,V_N,V_k_1,E):[[27,28,29,30],26,31]+ eval_realheapsort_bb6_in(V_N,F,G)
     [V_N>=V_k_1+3,V_k_1+E+2=V_N,V_k_1+1=F,G=4,D=2,C=0,B=4] 
* CE 36: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,C,D,E,V_N,F,G):[31]+ eval_realheapsort_bb6_in(V_N,H,I)
     [V_N=H+1,V_N=F+2,V_N=C+2,V_N=V_k_1+2,I=4,G=0,E=2,D=0,B=4] 
* CE 37: eval_realheapsort_bb6_in(V_N,V_k_1,B) = 2+ eval_realheapsort_bb8_in(V_N,C,D,E,V_N,F,G):[26,31]+ eval_realheapsort_bb6_in(V_N,H,I)
     [V_N=H+2,V_N=F+3,V_N=C+3,V_N=V_k_1+3,I=4,G=1,E=2,D=0,B=4] 

### Cost equations --> "Loop" of eval_realheapsort_bb6_in/3 
* CEs [35] --> Loop 32 
* CEs [34] --> Loop 33 
* CEs [37] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [33] --> Loop 36 
* CEs [32] --> Loop 37 

#### Loops of eval_realheapsort_bb6_in/3 
* Loop 32: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N>=V_k_1+3,V_k_1+1=V_k_1',B'=4,B=4] 
* Loop 33: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N>=V_k_1+3,V_k_1+1=V_k_1',B'=4,B=4] 
* Loop 34: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N=V_k_1'+2,V_N=V_k_1+3,B'=4,B=4] 
* Loop 35: eval_realheapsort_bb6_in(V_N,V_k_1,B)->  eval_realheapsort_bb6_in(V_N,V_k_1',B')
                  [V_N=V_k_1'+1,V_N=V_k_1+2,B'=4,B=4] 
* Loop 36: eval_realheapsort_bb6_in(V_N,V_k_1,B) [V_N>=V_k_1+3,B=4] 
* Loop 37: eval_realheapsort_bb6_in(V_N,V_k_1,B) [V_k_1+1>=V_N,B=4] 

### Ranking functions of CR eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* RF of phase [32,33]: [V_N-V_k_1-2]

#### Partial ranking functions of CR eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* Partial RF of phase [32,33]:
  - RF of loop [32:1,33:1]:
    V_N-V_k_1-2


### Resulting Chains:eval_realheapsort_bb6_in(V_N,V_k_1,B) 
* [[32,33],36]...
* [[32,33],35,37]
* [[32,33],34,35,37]
* [37]
* [36]...
* [35,37]
* [34,35,37]


### Specialization of cost equations eval_realheapsort_39/2 
* CE 6 is refined into CE [38,39,40,41,42,43,44] 


#### Refined cost equations eval_realheapsort_39/2 
* CE 38: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(V_N,C,D):[[32,33],36]
     [V_N>=4,D=4,C=0] 
* CE 39: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(V_N,C,D):[[32,33],35,37]
     [V_N>=3,D=4,C=0] 
* CE 40: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(V_N,C,D):[[32,33],34,35,37]
     [V_N>=4,D=4,C=0] 
* CE 41: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(V_N,C,D):[37]
     [1>=V_N,D=4,C=0] 
* CE 42: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(V_N,C,D):[36]
     [V_N>=3,D=4,C=0] 
* CE 43: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(C,D,E):[35,37]
     [E=4,D=0,C=2,V_N=2] 
* CE 44: eval_realheapsort_39(V_N,B) = 1+ eval_realheapsort_bb6_in(C,D,E):[34,35,37]
     [E=4,D=0,C=3,V_N=3] 

### Cost equations --> "Loop" of eval_realheapsort_39/2 
* CEs [40] --> Loop 38 
* CEs [39] --> Loop 39 
* CEs [41] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [43] --> Loop 42 
* CEs [38] --> Loop 43 
* CEs [42] --> Loop 44 

#### Loops of eval_realheapsort_39/2 
* Loop 38: eval_realheapsort_39(V_N,B) [V_N>=4] 
* Loop 39: eval_realheapsort_39(V_N,B) [V_N>=3] 
* Loop 40: eval_realheapsort_39(V_N,B) [1>=V_N] 
* Loop 41: eval_realheapsort_39(V_N,B) [V_N=3] 
* Loop 42: eval_realheapsort_39(V_N,B) [V_N=2] 
* Loop 43: eval_realheapsort_39(V_N,B) [V_N>=4] 
* Loop 44: eval_realheapsort_39(V_N,B) [V_N>=3] 

### Ranking functions of CR eval_realheapsort_39(V_N,B) 

#### Partial ranking functions of CR eval_realheapsort_39(V_N,B) 


### Resulting Chains:eval_realheapsort_39(V_N,B) 
* [44]...
* [43]...
* [42]
* [41]
* [40]
* [39]
* [38]


### Specialization of cost equations eval_realheapsort_2/2 
* CE 2 is refined into CE [45,46,47,48,49] 
* CE 3 is refined into CE [50] 


#### Refined cost equations eval_realheapsort_2/2 
* CE 45: eval_realheapsort_2(V_N,B) = 1+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[21,22,24],25]+ eval_realheapsort_39(V_N,B):[44]
     [V_N>=3,D=5,C=1] 
* CE 46: eval_realheapsort_2(V_N,B) = 1+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[21,22,24],25]+ eval_realheapsort_39(V_N,B):[43]
     [V_N>=4,D=5,C=1] 
* CE 47: eval_realheapsort_2(V_N,B) = 1+ eval_realheapsort_bb1_in(C,D,E,F):[[21,22,24],25]+ eval_realheapsort_39(G,B):[41]
     [G=3,F=3,E=5,D=1,C=3,V_N=3] 
* CE 48: eval_realheapsort_2(V_N,B) = 1+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[21,22,24],25]+ eval_realheapsort_39(V_N,B):[39]
     [V_N>=3,D=5,C=1] 
* CE 49: eval_realheapsort_2(V_N,B) = 1+ eval_realheapsort_bb1_in(V_N,C,D,V_N):[[21,22,24],25]+ eval_realheapsort_39(V_N,B):[38]
     [V_N>=4,D=5,C=1] 
* CE 50: eval_realheapsort_2(V_N,B) = 0
     [2>=V_N] 

### Cost equations --> "Loop" of eval_realheapsort_2/2 
* CEs [49] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [50] --> Loop 47 
* CEs [47] --> Loop 48 
* CEs [46] --> Loop 49 
* CEs [45] --> Loop 50 

#### Loops of eval_realheapsort_2/2 
* Loop 45: eval_realheapsort_2(V_N,B) [V_N>=4] 
* Loop 46: eval_realheapsort_2(V_N,B) [V_N>=3] 
* Loop 47: eval_realheapsort_2(V_N,B) [2>=V_N] 
* Loop 48: eval_realheapsort_2(V_N,B) [V_N=3] 
* Loop 49: eval_realheapsort_2(V_N,B) [V_N>=4] 
* Loop 50: eval_realheapsort_2(V_N,B) [V_N>=3] 

### Ranking functions of CR eval_realheapsort_2(V_N,B) 

#### Partial ranking functions of CR eval_realheapsort_2(V_N,B) 


### Resulting Chains:eval_realheapsort_2(V_N,B) 
* [50]...
* [49]...
* [48]
* [47]
* [46]
* [45]


### Specialization of cost equations eval_realheapsort_start/2 
* CE 1 is refined into CE [51,52,53,54,55,56] 


#### Refined cost equations eval_realheapsort_start/2 
* CE 51: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[50]
     [V_N>=3] 
* CE 52: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[49]
     [V_N>=4] 
* CE 53: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(C,B):[48]
     [C=3,V_N=3] 
* CE 54: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[47]
     [2>=V_N] 
* CE 55: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[46]
     [V_N>=3] 
* CE 56: eval_realheapsort_start(V_N,B) = 0+ eval_realheapsort_2(V_N,B):[45]
     [V_N>=4] 

### Cost equations --> "Loop" of eval_realheapsort_start/2 
* CEs [56] --> Loop 51 
* CEs [55] --> Loop 52 
* CEs [54] --> Loop 53 
* CEs [53] --> Loop 54 
* CEs [52] --> Loop 55 
* CEs [51] --> Loop 56 

#### Loops of eval_realheapsort_start/2 
* Loop 51: eval_realheapsort_start(V_N,B) [V_N>=4] 
* Loop 52: eval_realheapsort_start(V_N,B) [V_N>=3] 
* Loop 53: eval_realheapsort_start(V_N,B) [2>=V_N] 
* Loop 54: eval_realheapsort_start(V_N,B) [V_N=3] 
* Loop 55: eval_realheapsort_start(V_N,B) [V_N>=4] 
* Loop 56: eval_realheapsort_start(V_N,B) [V_N>=3] 

### Ranking functions of CR eval_realheapsort_start(V_N,B) 

#### Partial ranking functions of CR eval_realheapsort_start(V_N,B) 


### Resulting Chains:eval_realheapsort_start(V_N,B) 
* [56]...
* [55]...
* [54]
* [53]
* [52]
* [51]


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [18]:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1*it(18)+0
  Such that:it(18) =< V_j_0
it(18) =< V_j_0-V_j_0'

#### Cost of phase [18]:eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E) -> [eval_realheapsort_bb2_in(V_N',V_k_0',V_j_0',B',C',D',E')] 
1*it(18)+0
  Such that:it(18) =< V_j_0
it(18) =< V_j_0-V_j_0'

#### Cost of chains of eval_realheapsort_bb2_in(V_N,V_k_0,V_j_0,B,C,D,E):
* Chain [[18],20]: 1*it(18)+0
  Such that:it(18) =< V_j_0

  with precondition: [B=3,V_N=C,V_k_0=D,0>=E,V_j_0>=1,2*E+1>=0,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V_j_0-E

  with precondition: [B=3,V_N=C,V_k_0=D,E>=1,V_j_0>=2*E+1,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [20]: 0
  with precondition: [B=3,V_N=C,V_k_0=D,V_j_0=E,0>=V_j_0,V_N>=V_k_0+1,V_k_0>=V_j_0] 

* Chain [19]: 0
  with precondition: [B=3,V_N=C,V_k_0=D,V_j_0=E,V_j_0>=1,V_N>=V_k_0+1,V_k_0>=V_j_0] 


#### Cost of loops [21,22,24] 

 * loop 21:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
2
 * loop 22:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
1*s(2)+2
  Such that:s(2) =< V_k_0'

 * loop 24:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
1*s(4)+2
  Such that:s(4) =< V_k_0'

#### Cost of phase [21,22,24]:eval_realheapsort_bb1_in(V_N,V_k_0,B,C) -> [eval_realheapsort_bb1_in(V_N',V_k_0',B',C')] 
6*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< V_N
aux(3) =< V_N-V_k_0
aux(4) =< V_N-V_k_0-V_N'+V_k_0'
it(21) =< aux(3)
it(21) =< aux(4)
aux(2) =< aux(1)
s(5) =< it(21)*aux(1)
s(6) =< it(21)*aux(2)

#### Cost of chains of eval_realheapsort_bb1_in(V_N,V_k_0,B,C):
* Chain [[21,22,24],25]: 6*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< C
aux(5) =< -V_k_0+C
it(21) =< aux(5)
aux(2) =< aux(1)
s(5) =< it(21)*aux(1)
s(6) =< it(21)*aux(2)

  with precondition: [B=5,V_N=C,V_N>=3,V_k_0>=1,V_N>=V_k_0+1] 


#### Cost of loops [27,28,29,30] 

 * loop 27:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 28:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 29:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
 * loop 30:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
1
#### Cost of phase [27,28,29,30]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(27)+0
#### Cost of phase [27,28,29,30]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(27)+0
#### Cost of phase [27,28,29,30]:eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E) -> [eval_realheapsort_bb8_in(V_N',V_k_1',V_j_1',B',C',D',E')] 
4*it(27)+0
#### Cost of chains of eval_realheapsort_bb8_in(V_N,V_k_1,V_j_1,B,C,D,E):
* Chain [[27,28,29,30]]...: 4*it(27)+0
  with precondition: [V_N>=2*V_j_1+V_k_1+3,V_N>=V_k_1+2,B=2] 

* Chain [[27,28,29,30],31]: 4*it(27)+0
  with precondition: [B=2,V_N=C,V_k_1=D,V_N>=V_k_1+2,V_N>=2*V_j_1+V_k_1+3,V_k_1+2*E+2>=V_N] 

* Chain [[27,28,29,30],26,31]: 4*it(27)+1
  with precondition: [B=2,D=V_k_1,V_N=C,V_N=D+E+2,V_N>=D+2,V_N>=2*V_j_1+D+3] 

* Chain [31]: 0
  with precondition: [B=2,V_N=C,V_k_1=D,V_j_1=E,V_N>=V_k_1+2,V_k_1+2*V_j_1+2>=V_N] 

* Chain [26,31]: 1
  with precondition: [B=2,V_N=C,V_k_1=D,V_k_1+E+2=V_N,V_k_1+2*V_j_1+3=V_N,V_N>=V_k_1+2] 


#### Cost of loops [32,33] 

 * loop 32:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
4*s(9)+3
 * loop 33:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
4*s(11)+2
#### Cost of phase [32,33]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
5*it(32)+8*s(12)+0
  Such that:aux(6) =< V_N-V_k_1
aux(7) =< V_N-V_k_1-V_N'+V_k_1'
it(32) =< aux(6)
it(32) =< aux(7)

#### Cost of phase [32,33]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
5*it(32)+8*s(12)+0
  Such that:aux(6) =< V_N-V_k_1
aux(7) =< V_N-V_k_1-V_N'+V_k_1'
it(32) =< aux(6)
it(32) =< aux(7)

#### Cost of phase [32,33]:eval_realheapsort_bb6_in(V_N,V_k_1,B) -> [eval_realheapsort_bb6_in(V_N',V_k_1',B')] 
5*it(32)+8*s(12)+0
  Such that:aux(6) =< V_N-V_k_1
aux(7) =< V_N-V_k_1-V_N'+V_k_1'
it(32) =< aux(6)
it(32) =< aux(7)

#### Cost of chains of eval_realheapsort_bb6_in(V_N,V_k_1,B):
* Chain [[32,33],36]...: 5*it(32)+12*s(7)+2
  Such that:aux(8) =< V_N-V_k_1
it(32) =< aux(8)

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[32,33],35,37]: 5*it(32)+8*s(12)+2
  Such that:aux(9) =< V_N-V_k_1
it(32) =< aux(9)

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [[32,33],34,35,37]: 5*it(32)+8*s(12)+5
  Such that:aux(10) =< V_N-V_k_1
it(32) =< aux(10)

  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [37]: 0
  with precondition: [B=4,V_k_1>=0,V_k_1+1>=V_N] 

* Chain [36]...: 4*s(7)+2
  with precondition: [B=4,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [35,37]: 2
  with precondition: [B=4,V_N=V_k_1+2,V_N>=2] 

* Chain [34,35,37]: 5
  with precondition: [B=4,V_N=V_k_1+3,V_N>=3] 


#### Cost of chains of eval_realheapsort_39(V_N,B):
* Chain [44]...: 4*s(14)+3
  with precondition: [V_N>=3] 

* Chain [43]...: 5*s(16)+12*s(17)+3
  Such that:s(15) =< V_N
s(16) =< s(15)

  with precondition: [V_N>=4] 

* Chain [42]: 3
  with precondition: [V_N=2] 

* Chain [41]: 6
  with precondition: [V_N=3] 

* Chain [40]: 1
  with precondition: [1>=V_N] 

* Chain [39]: 5*s(19)+8*s(20)+3
  Such that:s(18) =< V_N
s(19) =< s(18)

  with precondition: [V_N>=3] 

* Chain [38]: 5*s(22)+8*s(23)+6
  Such that:s(21) =< V_N
s(22) =< s(21)

  with precondition: [V_N>=4] 


#### Cost of chains of eval_realheapsort_2(V_N,B):
* Chain [50]...: 6*s(26)+1*s(28)+1*s(29)+4*s(30)+4
  Such that:aux(11) =< V_N
s(26) =< aux(11)
s(27) =< aux(11)
s(28) =< s(26)*aux(11)
s(29) =< s(26)*s(27)

  with precondition: [V_N>=3] 

* Chain [49]...: 11*s(33)+1*s(35)+1*s(36)+12*s(39)+4
  Such that:aux(12) =< V_N
s(33) =< aux(12)
s(34) =< aux(12)
s(35) =< s(33)*aux(12)
s(36) =< s(33)*s(34)

  with precondition: [V_N>=4] 

* Chain [48]: 6*s(42)+1*s(44)+1*s(45)+7
  Such that:s(41) =< 2
s(40) =< 3
s(42) =< s(41)
s(43) =< s(40)
s(44) =< s(42)*s(40)
s(45) =< s(42)*s(43)

  with precondition: [V_N=3] 

* Chain [47]: 0
  with precondition: [2>=V_N] 

* Chain [46]: 11*s(48)+1*s(50)+1*s(51)+8*s(54)+4
  Such that:aux(13) =< V_N
s(48) =< aux(13)
s(49) =< aux(13)
s(50) =< s(48)*aux(13)
s(51) =< s(48)*s(49)

  with precondition: [V_N>=3] 

* Chain [45]: 11*s(57)+1*s(59)+1*s(60)+8*s(63)+7
  Such that:aux(14) =< V_N
s(57) =< aux(14)
s(58) =< aux(14)
s(59) =< s(57)*aux(14)
s(60) =< s(57)*s(58)

  with precondition: [V_N>=4] 


#### Cost of chains of eval_realheapsort_start(V_N,B):
* Chain [56]...: 6*s(65)+1*s(67)+1*s(68)+4*s(69)+4
  Such that:s(64) =< V_N
s(65) =< s(64)
s(66) =< s(64)
s(67) =< s(65)*s(64)
s(68) =< s(65)*s(66)

  with precondition: [V_N>=3] 

* Chain [55]...: 11*s(71)+1*s(73)+1*s(74)+12*s(75)+4
  Such that:s(70) =< V_N
s(71) =< s(70)
s(72) =< s(70)
s(73) =< s(71)*s(70)
s(74) =< s(71)*s(72)

  with precondition: [V_N>=4] 

* Chain [54]: 6*s(78)+1*s(80)+1*s(81)+7
  Such that:s(76) =< 2
s(77) =< 3
s(78) =< s(76)
s(79) =< s(77)
s(80) =< s(78)*s(77)
s(81) =< s(78)*s(79)

  with precondition: [V_N=3] 

* Chain [53]: 0
  with precondition: [2>=V_N] 

* Chain [52]: 11*s(83)+1*s(85)+1*s(86)+8*s(87)+4
  Such that:s(82) =< V_N
s(83) =< s(82)
s(84) =< s(82)
s(85) =< s(83)*s(82)
s(86) =< s(83)*s(84)

  with precondition: [V_N>=3] 

* Chain [51]: 11*s(89)+1*s(91)+1*s(92)+8*s(93)+7
  Such that:s(88) =< V_N
s(89) =< s(88)
s(90) =< s(88)
s(91) =< s(89)*s(88)
s(92) =< s(89)*s(90)

  with precondition: [V_N>=4] 


Closed-form bounds of eval_realheapsort_start(V_N,B): 
-------------------------------------
* Chain [56]... with precondition: [V_N>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [55]... with precondition: [V_N>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [54] with precondition: [V_N=3] 
    - Upper bound: 31 
    - Complexity: constant 
* Chain [53] with precondition: [2>=V_N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [52] with precondition: [V_N>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V_N>=4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_realheapsort_start(V_N,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 84 ms.
* Invariants computed in 101 ms.
   - Backward Invariants 48 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 122 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 142 ms.
   - Equation cost structures 44 ms.
   - Phase cost structures 60 ms.
   - Chain cost structures 37 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 562 ms.

