Warning: Ignored call to eval_speedSimpleMultipleDep_stop/1 in equation eval_speedSimpleMultipleDep_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedSimpleMultipleDep_bb1_in/5,eval_speedSimpleMultipleDep_bb2_in/5]
1. non_recursive  : [eval_speedSimpleMultipleDep_bb3_in/1]
2. non_recursive  : [loop_cont_eval_speedSimpleMultipleDep_bb1_in/2]
3. non_recursive  : [eval_speedSimpleMultipleDep_7/3]
4. non_recursive  : [eval_speedSimpleMultipleDep_6/3]
5. non_recursive  : [eval_speedSimpleMultipleDep_5/3]
6. non_recursive  : [eval_speedSimpleMultipleDep_4/3]
7. non_recursive  : [eval_speedSimpleMultipleDep_3/3]
8. non_recursive  : [eval_speedSimpleMultipleDep_2/3]
9. non_recursive  : [eval_speedSimpleMultipleDep_1/3]
10. non_recursive  : [eval_speedSimpleMultipleDep_0/3]
11. non_recursive  : [eval_speedSimpleMultipleDep_bb0_in/3]
12. non_recursive  : [eval_speedSimpleMultipleDep_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedSimpleMultipleDep_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_speedSimpleMultipleDep_7/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_speedSimpleMultipleDep_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedSimpleMultipleDep_bb1_in/5 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_speedSimpleMultipleDep_bb1_in/5 
* CE 6: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) = 0
     [V_x_0>=V_n,V_x_0>=0,V_y_0>=0,B=2] 
* CE 7: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) = 1+ eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,C,V_x_0,D)
     [V_n>=V_x_0+1,V_m>=V_y_0+1,V_x_0>=0,V_y_0>=0,V_y_0+1=C,D=2,B=2] 
* CE 8: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) = 1+ eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,C,D,E)
     [V_n>=V_x_0+1,V_y_0>=V_m,V_x_0>=0,V_y_0>=0,V_x_0+1=D,E=2,C=0,B=2] 

### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_bb1_in/5 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

#### Loops of eval_speedSimpleMultipleDep_bb1_in/5 
* Loop 6: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B)->  eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0',V_x_0,B')
                  [V_n>=V_x_0+1,V_m>=V_y_0+1,V_x_0>=0,V_y_0>=0,V_y_0+1=V_y_0',B'=2,B=2] 
* Loop 7: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B)->  eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0',V_x_0',B')
                  [V_n>=V_x_0+1,V_y_0>=V_m,V_x_0>=0,V_y_0>=0,V_x_0+1=V_x_0',B'=2,V_y_0'=0,B=2] 
* Loop 8: eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) [V_x_0>=V_n,V_x_0>=0,V_y_0>=0,B=2] 

### Ranking functions of CR eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    V_m-V_y_0 depends on loops [7:1] 
  - RF of loop [7:1]:
    V_n-V_x_0


### Resulting Chains:eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* [[6,7],8]
* [8]


### Specialization of cost equations eval_speedSimpleMultipleDep_7/3 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations eval_speedSimpleMultipleDep_7/3 
* CE 9: eval_speedSimpleMultipleDep_7(V_n,V_m,B) = 1+ eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,C,D,E):[[6,7],8]
     [V_n>=1,E=2,D=0,C=0] 
* CE 10: eval_speedSimpleMultipleDep_7(V_n,V_m,B) = 1+ eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,C,D,E):[8]
     [0>=V_n,E=2,D=0,C=0] 

### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_7/3 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_speedSimpleMultipleDep_7/3 
* Loop 9: eval_speedSimpleMultipleDep_7(V_n,V_m,B) [V_n>=1] 
* Loop 10: eval_speedSimpleMultipleDep_7(V_n,V_m,B) [0>=V_n] 

### Ranking functions of CR eval_speedSimpleMultipleDep_7(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_7(V_n,V_m,B) 


### Resulting Chains:eval_speedSimpleMultipleDep_7(V_n,V_m,B) 
* [10]
* [9]


### Specialization of cost equations eval_speedSimpleMultipleDep_start/3 
* CE 1 is refined into CE [11,12] 


#### Refined cost equations eval_speedSimpleMultipleDep_start/3 
* CE 11: eval_speedSimpleMultipleDep_start(V_n,V_m,B) = 0+ eval_speedSimpleMultipleDep_7(V_n,V_m,B):[10]
     [0>=V_n] 
* CE 12: eval_speedSimpleMultipleDep_start(V_n,V_m,B) = 0+ eval_speedSimpleMultipleDep_7(V_n,V_m,B):[9]
     [V_n>=1] 

### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_start/3 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_speedSimpleMultipleDep_start/3 
* Loop 11: eval_speedSimpleMultipleDep_start(V_n,V_m,B) [V_n>=1] 
* Loop 12: eval_speedSimpleMultipleDep_start(V_n,V_m,B) [0>=V_n] 

### Ranking functions of CR eval_speedSimpleMultipleDep_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_start(V_n,V_m,B) 


### Resulting Chains:eval_speedSimpleMultipleDep_start(V_n,V_m,B) 
* [12]
* [11]


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSimpleMultipleDep_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
 * loop 7:eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSimpleMultipleDep_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1
#### Cost of phase [6,7]:eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) -> [eval_speedSimpleMultipleDep_bb1_in(V_n',V_m',V_y_0',V_x_0',B')] 
1*it(6)+1*it(7)+0
  Such that:it(7) =< V_n-V_x_0
it(7) =< V_n-V_x_0-V_n'+V_x_0'
aux(5) =< V_m
aux(2) =< V_m-V_y_0
aux(1) =< it(7)*aux(5)
it(6) =< aux(1)+aux(2)

#### Cost of chains of eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B):
* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:it(7) =< V_n-V_x_0
aux(5) =< V_m
aux(2) =< V_m-V_y_0
aux(1) =< it(7)*aux(5)
it(6) =< aux(1)+aux(2)

  with precondition: [B=2,V_y_0>=0,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_y_0>=0,V_x_0>=0,V_x_0>=V_n] 


#### Cost of chains of eval_speedSimpleMultipleDep_7(V_n,V_m,B):
* Chain [10]: 1
  with precondition: [0>=V_n] 

* Chain [9]: 1*s(1)+1*s(5)+1
  Such that:s(1) =< V_n
aux(6) =< V_m
s(4) =< s(1)*aux(6)
s(5) =< s(4)+aux(6)

  with precondition: [V_n>=1] 


#### Cost of chains of eval_speedSimpleMultipleDep_start(V_n,V_m,B):
* Chain [12]: 1
  with precondition: [0>=V_n] 

* Chain [11]: 1*s(6)+1*s(9)+1
  Such that:s(6) =< V_n
s(7) =< V_m
s(8) =< s(6)*s(7)
s(9) =< s(8)+s(7)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_speedSimpleMultipleDep_start(V_n,V_m,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [11] with precondition: [V_n>=1] 
    - Upper bound: V_n+1+nat(V_m)*V_n+nat(V_m) 
    - Complexity: n^2 

### Maximum cost of eval_speedSimpleMultipleDep_start(V_n,V_m,B): nat(V_m)*nat(V_n)+nat(V_n)+nat(V_m)+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 19 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 39 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 114 ms.

