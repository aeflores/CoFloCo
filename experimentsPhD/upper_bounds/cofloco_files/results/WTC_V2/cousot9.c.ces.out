Warning: Ignored call to eval_cousot9_stop/1 in equation eval_cousot9_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cousot9_bb1_in/4,eval_cousot9_bb2_in/4]
1. non_recursive  : [eval_cousot9_bb3_in/1]
2. non_recursive  : [loop_cont_eval_cousot9_bb1_in/2]
3. non_recursive  : [eval_cousot9_6/3]
4. non_recursive  : [eval_cousot9_5/3]
5. non_recursive  : [eval_cousot9_4/3]
6. non_recursive  : [eval_cousot9_3/3]
7. non_recursive  : [eval_cousot9_2/3]
8. non_recursive  : [eval_cousot9_1/3]
9. non_recursive  : [eval_cousot9_0/3]
10. non_recursive  : [eval_cousot9_bb0_in/3]
11. non_recursive  : [eval_cousot9_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cousot9_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_cousot9_6/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_cousot9_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cousot9_bb1_in/4 
* CE 5 is refined into CE [6] 
* CE 3 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_cousot9_bb1_in/4 
* CE 6: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 0
     [V_N>=V_i_0,0>=V_i_0,B=2] 
* CE 7: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 1+ eval_cousot9_bb1_in(V_N,C,V_N,D)
     [V_N>=V_i_0,V_i_0>=1,0>=V__0,V_i_0=C+1,D=2,B=2] 
* CE 8: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) = 1+ eval_cousot9_bb1_in(V_N,V_i_0,C,D)
     [V_N>=V_i_0,V__0>=1,V_i_0>=1,V__0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_cousot9_bb1_in/4 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

#### Loops of eval_cousot9_bb1_in/4 
* Loop 6: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B)->  eval_cousot9_bb1_in(V_N,A',V_N,B')
                  [V_N>=V_i_0,V_i_0>=1,0>=V__0,V_i_0=A'+1,B'=2,B=2] 
* Loop 7: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B)->  eval_cousot9_bb1_in(V_N,V_i_0,V__0',B')
                  [V_N>=V_i_0,V__0>=1,V_i_0>=1,V__0=V__0'+1,B'=2,B=2] 
* Loop 8: eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) [V_N>=V_i_0,0>=V_i_0,B=2] 

### Ranking functions of CR eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 

#### Partial ranking functions of CR eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    -V__0+1 depends on loops [7:1] 
    V_i_0
  - RF of loop [7:1]:
    V__0 depends on loops [6:1] 


### Resulting Chains:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) 
* [[6,7],8]
* [8]


### Specialization of cost equations eval_cousot9_6/3 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations eval_cousot9_6/3 
* CE 9: eval_cousot9_6(V_j,V_N,B) = 1+ eval_cousot9_bb1_in(V_N,V_N,V_j,C):[[6,7],8]
     [V_N>=1,C=2] 
* CE 10: eval_cousot9_6(V_j,V_N,B) = 1+ eval_cousot9_bb1_in(V_N,V_N,V_j,C):[8]
     [0>=V_N,C=2] 

### Cost equations --> "Loop" of eval_cousot9_6/3 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_cousot9_6/3 
* Loop 9: eval_cousot9_6(V_j,V_N,B) [V_N>=1] 
* Loop 10: eval_cousot9_6(V_j,V_N,B) [0>=V_N] 

### Ranking functions of CR eval_cousot9_6(V_j,V_N,B) 

#### Partial ranking functions of CR eval_cousot9_6(V_j,V_N,B) 


### Resulting Chains:eval_cousot9_6(V_j,V_N,B) 
* [10]
* [9]


### Specialization of cost equations eval_cousot9_start/3 
* CE 1 is refined into CE [11,12] 


#### Refined cost equations eval_cousot9_start/3 
* CE 11: eval_cousot9_start(V_j,V_N,B) = 0+ eval_cousot9_6(V_j,V_N,B):[10]
     [0>=V_N] 
* CE 12: eval_cousot9_start(V_j,V_N,B) = 0+ eval_cousot9_6(V_j,V_N,B):[9]
     [V_N>=1] 

### Cost equations --> "Loop" of eval_cousot9_start/3 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_cousot9_start/3 
* Loop 11: eval_cousot9_start(V_j,V_N,B) [V_N>=1] 
* Loop 12: eval_cousot9_start(V_j,V_N,B) [0>=V_N] 

### Ranking functions of CR eval_cousot9_start(V_j,V_N,B) 

#### Partial ranking functions of CR eval_cousot9_start(V_j,V_N,B) 


### Resulting Chains:eval_cousot9_start(V_j,V_N,B) 
* [12]
* [11]


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1
 * loop 7:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1
#### Cost of phase [6,7]:eval_cousot9_bb1_in(V_N,V_i_0,V__0,B) -> [eval_cousot9_bb1_in(V_N',V_i_0',V__0',B')] 
1*it(6)+1*it(7)+0
  Such that:aux(7) =< V_N
it(6) =< V_i_0
it(6) =< V_i_0-V_i_0'
aux(4) =< V__0
aux(3) =< it(6)*aux(7)
it(7) =< aux(3)+aux(4)

#### Cost of chains of eval_cousot9_bb1_in(V_N,V_i_0,V__0,B):
* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:aux(7) =< V_N
it(6) =< V_i_0
aux(4) =< V__0
aux(3) =< it(6)*aux(7)
it(7) =< aux(3)+aux(4)

  with precondition: [B=2,V_i_0>=1,V_N>=V_i_0] 

* Chain [8]: 0
  with precondition: [B=2,0>=V_i_0,V_N>=V_i_0] 


#### Cost of chains of eval_cousot9_6(V_j,V_N,B):
* Chain [10]: 1
  with precondition: [0>=V_N] 

* Chain [9]: 1*s(2)+1*s(5)+1
  Such that:s(3) =< V_j
aux(8) =< V_N
s(2) =< aux(8)
s(4) =< s(2)*aux(8)
s(5) =< s(4)+s(3)

  with precondition: [V_N>=1] 


#### Cost of chains of eval_cousot9_start(V_j,V_N,B):
* Chain [12]: 1
  with precondition: [0>=V_N] 

* Chain [11]: 1*s(8)+1*s(10)+1
  Such that:s(6) =< V_j
s(7) =< V_N
s(8) =< s(7)
s(9) =< s(8)*s(7)
s(10) =< s(9)+s(6)

  with precondition: [V_N>=1] 


Closed-form bounds of eval_cousot9_start(V_j,V_N,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_N] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [11] with precondition: [V_N>=1] 
    - Upper bound: nat(V_j)+1+V_N+V_N*V_N 
    - Complexity: n^2 

### Maximum cost of eval_cousot9_start(V_j,V_N,B): nat(V_N)+nat(V_j)+nat(V_N)*nat(V_N)+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 14 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 92 ms.

