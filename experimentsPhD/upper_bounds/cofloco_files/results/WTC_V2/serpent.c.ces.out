Warning: Ignored call to eval_serpent_stop/1 in equation eval_serpent_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_serpent_2/9,eval_serpent_3/10,eval_serpent_bb1_in/9,eval_serpent_bb2_in/9,eval_serpent_bb3_in/10]
1. recursive  : [eval_serpent_10/10,eval_serpent_11/11,eval_serpent_bb4_in/10,eval_serpent_bb5_in/10,eval_serpent_bb6_in/11]
2. recursive  : [eval_serpent_7/6,eval_serpent_8/6,eval_serpent_9/6,eval_serpent__critedge1_in/4,eval_serpent__critedge_in/5,loop_cont_eval_serpent_bb1_in/6,loop_cont_eval_serpent_bb4_in/5]
3. non_recursive  : [eval_serpent_bb7_in/1]
4. non_recursive  : [loop_cont_eval_serpent__critedge1_in/2]
5. non_recursive  : [eval_serpent_1/2]
6. non_recursive  : [eval_serpent_0/2]
7. non_recursive  : [eval_serpent_bb0_in/2]
8. non_recursive  : [eval_serpent_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_serpent_bb1_in/9
1. SCC is partially evaluated into eval_serpent_bb4_in/10
2. SCC is partially evaluated into eval_serpent__critedge1_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_serpent_1/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_serpent_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_serpent_bb1_in/9 
* CE 6 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_serpent_bb1_in/9 
* CE 12: eval_serpent_bb1_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,D>=0,C>=0,E=2] 
* CE 13: eval_serpent_bb1_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,C>=0,0>=D+1,E=2] 
* CE 14: eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) = 1+ eval_serpent_bb1_in(V_n,V_y_0,V_x_0,G,H,C,D,E,F)
     [V_y_0>=V_y_1,V_y_1>=0,V_x_0>=0,V_y_1=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_serpent_bb1_in/9 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_serpent_bb1_in/9 
* Loop 12: eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F)->  eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1',B',C,D,E,F)
                  [V_y_0>=V_y_1,V_y_1>=0,V_x_0>=0,V_y_1=V_y_1'+1,B'=2,B=2] 
* Loop 13: eval_serpent_bb1_in(A,B,C,D,E,A,B,C,D) [B>=D,D>=0,C>=0,E=2] 
* Loop 14: eval_serpent_bb1_in(A,B,C,D,E,A,B,C,D) [B>=D,C>=0,0>=D+1,E=2] 

### Ranking functions of CR eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) 
* RF of phase [12]: [V_y_1+1]

#### Partial ranking functions of CR eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_y_1+1


### Resulting Chains:eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Specialization of cost equations eval_serpent_bb4_in/10 
* CE 9 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_serpent_bb4_in/10 
* CE 15: eval_serpent_bb4_in(A,B,C,D,E,F,G,A,F,E) = 0
     [A>=F,F>=D,E+1=C,G=3] 
* CE 16: eval_serpent_bb4_in(A,B,C,D,E,F,G,A,F,E) = 0
     [F>=D,F>=A+1,E+1=C,G=3] 
* CE 17: eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) = 1+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_1,V_6,G,H,C,D,E)
     [V_n>=V_y_2,V_y_2>=V_y_1,V_y_2+1=G,V_6+1=F,V_6+1=V_x_0,H=3,B=3] 

### Cost equations --> "Loop" of eval_serpent_bb4_in/10 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_serpent_bb4_in/10 
* Loop 15: eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E)->  eval_serpent_bb4_in(V_n,V_y_0,V_x_0',V_y_1,V_6,V_y_2',B',C,D,E)
                  [V_n>=V_y_2,V_y_2>=V_y_1,V_y_2+1=V_y_2',V_6+1=V_x_0',V_6+1=V_x_0,B'=3,B=3] 
* Loop 16: eval_serpent_bb4_in(A,B,C,D,E,F,G,A,F,E) [A>=F,F>=D,E+1=C,G=3] 
* Loop 17: eval_serpent_bb4_in(A,B,C,D,E,F,G,A,F,E) [F>=D,F>=A+1,E+1=C,G=3] 

### Ranking functions of CR eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) 
* RF of phase [15]: [V_n-V_y_2+1]

#### Partial ranking functions of CR eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_n-V_y_2+1


### Resulting Chains:eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Specialization of cost equations eval_serpent__critedge1_in/4 
* CE 5 is refined into CE [18] 
* CE 4 is refined into CE [19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34] 


#### Refined cost equations eval_serpent__critedge1_in/4 
* CE 18: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 0
     [0>=V_x_0+1,B=4] 
* CE 19: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],14]+ eval_serpent_bb4_in(V_n,V_y_0,G,H,I,J,K,V_n,L,I):[[15],17]+ eval_serpent__critedge1_in(V_n,M,I,N)
     [V_n+1>=0,I+1>=0,V_y_0>=0,V_n+1=M,V_n+1=L,I+1=G,I+1=E,I+1=C,I+1=V_x_0,N=4,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 20: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],14]+ eval_serpent_bb4_in(V_n,V_y_0,G,H,I,J,K,V_n,L,I):[[15],16]+ eval_serpent__critedge1_in(V_n,L,I,M)
     [V_n>=L,L>=0,I+1>=0,V_y_0>=0,I+1=G,I+1=E,I+1=C,I+1=V_x_0,M=4,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 21: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],14]+ eval_serpent_bb4_in(V_n,V_y_0,G,H,I,J,K,V_n,L,I):[17]+ eval_serpent__critedge1_in(V_n,M,I,N)
     [I+1>=0,V_y_0>=0,0>=V_n+2,I+1=G,I+1=E,I+1=C,I+1=V_x_0,N=4,M+1=0,L+1=0,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 22: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],14]+ eval_serpent_bb4_in(V_n,V_y_0,G,H,I,J,K,V_n,L,I):[16]+ eval_serpent__critedge1_in(V_n,M,I,N)
     [V_n+1>=0,I+1>=0,V_y_0>=0,I+1=G,I+1=E,I+1=C,I+1=V_x_0,N=4,M+1=0,L+1=0,K=3,J+1=0,H+1=0,F+1=0,D=2,B=4] 
* CE 23: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],13]+ eval_serpent_bb4_in(V_n,V_y_0,G,F,H,F,I,V_n,J,H):[[15],17]+ eval_serpent__critedge1_in(V_n,K,H,L)
     [V_n>=F,V_y_0>=F+1,H+1>=0,F>=0,V_n+1=K,V_n+1=J,H+1=G,H+1=E,H+1=C,H+1=V_x_0,L=4,I=3,D=2,B=4] 
* CE 24: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],13]+ eval_serpent_bb4_in(V_n,V_y_0,G,F,H,F,I,V_n,J,H):[[15],16]+ eval_serpent__critedge1_in(V_n,J,H,K)
     [V_n>=J,J>=F+1,V_y_0>=F+1,H+1>=0,F>=0,H+1=G,H+1=E,H+1=C,H+1=V_x_0,K=4,I=3,D=2,B=4] 
* CE 25: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],13]+ eval_serpent_bb4_in(V_n,V_y_0,G,F,H,F,I,V_n,F,H):[17]+ eval_serpent__critedge1_in(V_n,F,H,J)
     [V_y_0>=F+1,F>=V_n+1,F>=0,H+1>=0,H+1=G,H+1=E,H+1=C,H+1=V_x_0,J=4,I=3,D=2,B=4] 
* CE 26: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,F):[[12],13]+ eval_serpent_bb4_in(V_n,V_y_0,G,F,H,F,I,V_n,F,H):[16]+ eval_serpent__critedge1_in(V_n,F,H,J)
     [V_n>=F,V_y_0>=F+1,F>=0,H+1>=0,H+1=G,H+1=E,H+1=C,H+1=V_x_0,J=4,I=3,D=2,B=4] 
* CE 27: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[14]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,I,G):[[15],17]+ eval_serpent__critedge1_in(V_n,J,G,K)
     [V_n>=V_y_0,G+1>=0,0>=V_y_0+1,V_n+1=J,V_n+1=I,G+1=F,G+1=E,G+1=C,G+1=V_x_0,K=4,H=3,D=2,B=4] 
* CE 28: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[14]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,I,G):[[15],16]+ eval_serpent__critedge1_in(V_n,I,G,J)
     [V_n>=I,I>=V_y_0+1,G+1>=0,0>=V_y_0+1,G+1=F,G+1=E,G+1=C,G+1=V_x_0,J=4,H=3,D=2,B=4] 
* CE 29: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[14]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,V_y_0,G):[17]+ eval_serpent__critedge1_in(V_n,V_y_0,G,I)
     [V_y_0>=V_n+1,G+1>=0,0>=V_y_0+1,G+1=F,G+1=E,G+1=C,G+1=V_x_0,I=4,H=3,D=2,B=4] 
* CE 30: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[14]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,V_y_0,G):[16]+ eval_serpent__critedge1_in(V_n,V_y_0,G,I)
     [V_n>=V_y_0,G+1>=0,0>=V_y_0+1,G+1=F,G+1=E,G+1=C,G+1=V_x_0,I=4,H=3,D=2,B=4] 
* CE 31: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[13]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,I,G):[[15],17]+ eval_serpent__critedge1_in(V_n,J,G,K)
     [V_n>=V_y_0,G+1>=0,V_y_0>=0,V_n+1=J,V_n+1=I,G+1=F,G+1=E,G+1=C,G+1=V_x_0,K=4,H=3,D=2,B=4] 
* CE 32: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[13]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,I,G):[[15],16]+ eval_serpent__critedge1_in(V_n,I,G,J)
     [V_n>=I,I>=V_y_0+1,G+1>=0,V_y_0>=0,G+1=F,G+1=E,G+1=C,G+1=V_x_0,J=4,H=3,D=2,B=4] 
* CE 33: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[13]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,V_y_0,G):[17]+ eval_serpent__critedge1_in(V_n,V_y_0,G,I)
     [V_y_0>=V_n+1,V_y_0>=0,G+1>=0,G+1=F,G+1=E,G+1=C,G+1=V_x_0,I=4,H=3,D=2,B=4] 
* CE 34: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) = 3+ eval_serpent_bb1_in(V_n,V_y_0,C,V_y_0,D,V_n,V_y_0,E,V_y_0):[13]+ eval_serpent_bb4_in(V_n,V_y_0,F,V_y_0,G,V_y_0,H,V_n,V_y_0,G):[16]+ eval_serpent__critedge1_in(V_n,V_y_0,G,I)
     [V_n>=V_y_0,V_y_0>=0,G+1>=0,G+1=F,G+1=E,G+1=C,G+1=V_x_0,I=4,H=3,D=2,B=4] 

### Cost equations --> "Loop" of eval_serpent__critedge1_in/4 
* CEs [26] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [32] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [23] --> Loop 29 
* CEs [19] --> Loop 30 
* CEs [27] --> Loop 31 
* CEs [22] --> Loop 32 
* CEs [21] --> Loop 33 
* CEs [18] --> Loop 34 

#### Loops of eval_serpent__critedge1_in/4 
* Loop 18: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_y_0>=V_y_0'+1,V_n>=V_y_0',V_x_0'+1>=0,V_y_0'>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 19: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_y_0>=V_y_0'+1,V_y_0'>=V_n+1,V_x_0'+1>=0,V_y_0'>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 20: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0',V_x_0'+1>=0,V_y_0'>=1,V_y_0>=1,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 21: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0',V_y_0'>=V_y_0+1,V_x_0'+1>=0,V_y_0>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 22: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0',V_x_0'+1>=0,V_y_0'>=0,V_y_0>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 23: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0',V_y_0'>=V_y_0+1,V_x_0'+1>=0,0>=V_y_0+1,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 24: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0,V_x_0',B')
                  [V_n>=V_y_0,V_x_0'+1>=0,V_y_0>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 25: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0,V_x_0',B')
                  [V_y_0>=V_n+1,V_x_0'+1>=0,V_y_0>=0,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 26: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0,V_x_0',B')
                  [V_n>=V_y_0,V_x_0'+1>=0,0>=V_y_0+1,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 27: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0,V_x_0',B')
                  [V_y_0>=V_n+1,V_x_0'+1>=0,0>=V_y_0+1,V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 28: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0,V_x_0'+1>=0,V_y_0>=0,V_n+1=V_y_0',V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 29: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_x_0'+1>=0,V_y_0>=1,V_n>=0,V_n+1=V_y_0',V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 30: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_x_0'+1>=0,V_y_0>=0,V_n+1>=0,V_n+1=V_y_0',V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 31: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_n>=V_y_0,V_x_0'+1>=0,0>=V_y_0+1,V_n+1=V_y_0',V_x_0'+1=V_x_0,B'=4,B=4] 
* Loop 32: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_x_0'+1>=0,V_y_0>=0,V_n+1>=0,V_x_0'+1=V_x_0,B'=4,V_y_0'+1=0,B=4] 
* Loop 33: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B)->  eval_serpent__critedge1_in(V_n,V_y_0',V_x_0',B')
                  [V_x_0'+1>=0,V_y_0>=0,0>=V_n+2,V_x_0'+1=V_x_0,B'=4,V_y_0'+1=0,B=4] 
* Loop 34: eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) [0>=V_x_0+1,B=4] 

### Ranking functions of CR eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) 
* RF of phase [18,19,20,21,22,23,24,25,26,28,29,30,31,32]: [V_x_0+1]

#### Partial ranking functions of CR eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) 
* Partial RF of phase [18,19,20,21,22,23,24,25,26,28,29,30,31,32]:
  - RF of loop [18:1]:
    V_y_0 depends on loops [20:1,21:1,22:1,23:1,28:1,29:1,30:1,31:1] 
  - RF of loop [18:1,19:1,20:1,21:1,22:1,23:1,24:1,25:1,26:1,28:1,29:1,30:1,31:1,32:1]:
    V_x_0+1
  - RF of loop [19:1]:
    -V_n+V_y_0-1 depends on loops [20:1,21:1,22:1,23:1,28:1,29:1,30:1,31:1] 
    V_y_0-3 depends on loops [20:1,21:1,22:1,23:1,28:1,29:1,30:1,31:1] 
  - RF of loop [21:1]:
    V_n-V_y_0 depends on loops [18:1,19:1,20:1,22:1,29:1,30:1,32:1] 
  - RF of loop [23:1]:
    V_n-V_y_0-1 depends on loops [18:1,19:1,20:1,22:1,29:1,30:1,32:1] 
    -V_y_0 depends on loops [18:1,19:1,20:1,22:1,29:1,30:1,32:1] 
  - RF of loop [28:1]:
    V_n-V_y_0+1 depends on loops [18:1,19:1,20:1,22:1,29:1,30:1,32:1] 
  - RF of loop [31:1]:
    -V_y_0/3 depends on loops [18:1,19:1,20:1,22:1,29:1,30:1,32:1] 
  - RF of loop [32:1]:
    2*V_n+V_y_0-1 depends on loops [20:1,21:1,22:1,23:1,28:1,29:1,30:1,31:1] 
    V_y_0+1 depends on loops [20:1,21:1,22:1,23:1,28:1,29:1,30:1,31:1] 


### Resulting Chains:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) 
* [[18,19,20,21,22,23,24,25,26,28,29,30,31,32],34]


### Specialization of cost equations eval_serpent_1/2 
* CE 3 is refined into CE [35] 
* CE 2 is refined into CE [36] 


#### Refined cost equations eval_serpent_1/2 
* CE 35: eval_serpent_1(V_n,B) = 1+ eval_serpent__critedge1_in(V_n,V_n,V_n,C):[[18,19,20,21,22,23,24,25,26,28,29,30,31,32],34]
     [V_n>=1,C=4] 
* CE 36: eval_serpent_1(V_n,B) = 0
     [0>=V_n] 

### Cost equations --> "Loop" of eval_serpent_1/2 
* CEs [35] --> Loop 35 
* CEs [36] --> Loop 36 

#### Loops of eval_serpent_1/2 
* Loop 35: eval_serpent_1(V_n,B) [V_n>=1] 
* Loop 36: eval_serpent_1(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_serpent_1(V_n,B) 

#### Partial ranking functions of CR eval_serpent_1(V_n,B) 


### Resulting Chains:eval_serpent_1(V_n,B) 
* [36]
* [35]


### Specialization of cost equations eval_serpent_start/2 
* CE 1 is refined into CE [37,38] 


#### Refined cost equations eval_serpent_start/2 
* CE 37: eval_serpent_start(V_n,B) = 0+ eval_serpent_1(V_n,B):[36]
     [0>=V_n] 
* CE 38: eval_serpent_start(V_n,B) = 0+ eval_serpent_1(V_n,B):[35]
     [V_n>=1] 

### Cost equations --> "Loop" of eval_serpent_start/2 
* CEs [38] --> Loop 37 
* CEs [37] --> Loop 38 

#### Loops of eval_serpent_start/2 
* Loop 37: eval_serpent_start(V_n,B) [V_n>=1] 
* Loop 38: eval_serpent_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_serpent_start(V_n,B) 

#### Partial ranking functions of CR eval_serpent_start(V_n,B) 


### Resulting Chains:eval_serpent_start(V_n,B) 
* [38]
* [37]


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) -> [eval_serpent_bb1_in(V_n',V_y_0',V_x_0',V_y_1',B',C',D',E',F')] 
1
#### Cost of phase [12]:eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) -> [eval_serpent_bb1_in(V_n',V_y_0',V_x_0',V_y_1',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V_y_1+1
it(12) =< V_y_1-V_y_1'

#### Cost of phase [12]:eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F) -> [eval_serpent_bb1_in(V_n',V_y_0',V_x_0',V_y_1',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V_y_1+1
it(12) =< V_y_1-V_y_1'

#### Cost of chains of eval_serpent_bb1_in(V_n,V_y_0,V_x_0,V_y_1,B,C,D,E,F):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V_y_1+1

  with precondition: [B=2,F+1=0,V_n=C,V_y_0=D,V_x_0=E,V_x_0>=0,V_y_1>=0,V_y_0>=V_y_1] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_y_1-F

  with precondition: [B=2,V_n=C,V_y_0=D,V_x_0=E,V_x_0>=0,F>=0,V_y_0>=V_y_1,V_y_1>=F+1] 

* Chain [14]: 0
  with precondition: [B=2,C=V_n,V_y_0=D,V_x_0=E,V_y_1=F,0>=V_y_1+1,V_x_0>=0,V_y_0>=V_y_1] 

* Chain [13]: 0
  with precondition: [B=2,C=V_n,V_y_0=D,V_x_0=E,V_y_1=F,V_x_0>=0,V_y_1>=0,V_y_0>=V_y_1] 


#### Cost of loops [15] 

 * loop 15:eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) -> [eval_serpent_bb4_in(V_n',V_y_0',V_x_0',V_y_1',V_6',V_y_2',B',C',D',E')] 
1
#### Cost of phase [15]:eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) -> [eval_serpent_bb4_in(V_n',V_y_0',V_x_0',V_y_1',V_6',V_y_2',B',C',D',E')] 
1*it(15)+0
  Such that:it(15) =< V_n-V_y_2+1
it(15) =< V_n-V_y_2-V_n'+V_y_2'

#### Cost of phase [15]:eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E) -> [eval_serpent_bb4_in(V_n',V_y_0',V_x_0',V_y_1',V_6',V_y_2',B',C',D',E')] 
1*it(15)+0
  Such that:it(15) =< V_n-V_y_2+1
it(15) =< V_n-V_y_2-V_n'+V_y_2'

#### Cost of chains of eval_serpent_bb4_in(V_n,V_y_0,V_x_0,V_y_1,V_6,V_y_2,B,C,D,E):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_n-V_y_2+1

  with precondition: [B=3,V_x_0=V_6+1,V_n=C,V_n+1=D,V_x_0=E+1,V_y_2>=V_y_1,V_n>=V_y_2] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_y_2+D

  with precondition: [B=3,V_x_0=V_6+1,V_n=C,V_x_0=E+1,V_y_2>=V_y_1,D>=V_y_2+1,V_n>=D] 

* Chain [17]: 0
  with precondition: [B=3,V_x_0=V_6+1,V_n=C,V_y_2=D,V_x_0=E+1,V_y_2>=V_n+1,V_y_2>=V_y_1] 

* Chain [16]: 0
  with precondition: [B=3,V_x_0=V_6+1,V_n=C,V_y_2=D,V_x_0=E+1,V_y_2>=V_y_1,V_n>=V_y_2] 


#### Cost of loops [18,19,20,21,22,23,24,25,26,28,29,30,31,32] 

 * loop 18:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(2)+3
  Such that:s(2) =< V_y_0-V_y_0'

 * loop 19:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(4)+3
  Such that:s(4) =< V_y_0-V_y_0'

 * loop 20:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(7)+1*s(8)+3
  Such that:s(7) =< V_y_0
s(8) =< V_y_0'

 * loop 21:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(10)+3
  Such that:s(10) =< -V_y_0+V_y_0'

 * loop 22:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(13)+1*s(14)+3
  Such that:s(13) =< V_y_0+1
s(14) =< V_y_0'+1

 * loop 23:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(16)+3
  Such that:s(16) =< -V_y_0+V_y_0'

 * loop 24:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
3
 * loop 25:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
3
 * loop 26:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
3
 * loop 28:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(18)+3
  Such that:s(18) =< V_n-V_y_0+1

 * loop 29:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(21)+1*s(22)+3
  Such that:s(21) =< V_y_0
s(22) =< V_y_0'

 * loop 30:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(25)+1*s(26)+3
  Such that:s(25) =< V_y_0+1
s(26) =< V_y_0'+1

 * loop 31:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(28)+3
  Such that:s(28) =< V_n-V_y_0+1

 * loop 32:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
1*s(30)+3
  Such that:s(30) =< V_y_0+1

#### Cost of phase [18,19,20,21,22,23,24,25,26,28,29,30,31,32]:eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B) -> [eval_serpent__critedge1_in(V_n',V_y_0',V_x_0',B')] 
42*it(18)+11*s(31)+1*s(34)+2*s(37)+1*s(43)+0
  Such that:aux(342) =< V_n
aux(351) =< V_x_0+1
aux(352) =< V_x_0-V_x_0'
it(18) =< aux(351)
it(18) =< aux(352)
aux(200) =< aux(342)+2
aux(112) =< aux(342)+1
s(34) =< it(18)*aux(342)
s(43) =< it(18)*aux(200)
s(37) =< it(18)*aux(112)

#### Cost of chains of eval_serpent__critedge1_in(V_n,V_y_0,V_x_0,B):
* Chain [[18,19,20,21,22,23,24,25,26,28,29,30,31,32],34]: 42*it(18)+11*s(31)+1*s(34)+2*s(37)+1*s(43)+0
  Such that:aux(342) =< V_n
aux(353) =< V_x_0+1
it(18) =< aux(353)
aux(200) =< aux(342)+2
aux(112) =< aux(342)+1
s(34) =< it(18)*aux(342)
s(43) =< it(18)*aux(200)
s(37) =< it(18)*aux(112)

  with precondition: [B=4,V_n>=1,V_x_0>=0,V_y_0+2*V_n>=2*V_x_0+1,2*V_n>=V_x_0+V_y_0] 


#### Cost of chains of eval_serpent_1(V_n,B):
* Chain [36]: 0
  with precondition: [0>=V_n] 

* Chain [35]: 42*s(48)+1*s(51)+1*s(52)+2*s(53)+11*s(54)+1
  Such that:s(46) =< V_n
s(47) =< V_n+1
s(48) =< s(47)
s(49) =< s(46)+2
s(50) =< s(46)+1
s(51) =< s(48)*s(46)
s(52) =< s(48)*s(49)
s(53) =< s(48)*s(50)

  with precondition: [V_n>=1] 


#### Cost of chains of eval_serpent_start(V_n,B):
* Chain [38]: 0
  with precondition: [0>=V_n] 

* Chain [37]: 42*s(57)+1*s(60)+1*s(61)+2*s(62)+11*s(63)+1
  Such that:s(55) =< V_n
s(56) =< V_n+1
s(57) =< s(56)
s(58) =< s(55)+2
s(59) =< s(55)+1
s(60) =< s(57)*s(55)
s(61) =< s(57)*s(58)
s(62) =< s(57)*s(59)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_serpent_start(V_n,B): 
-------------------------------------
* Chain [38] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [V_n>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_serpent_start(V_n,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 44 ms.
* Invariants computed in 124 ms.
   - Backward Invariants 49 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 186 ms.
* Termination proved in 110 ms.
* Upper bounds computed in 3812 ms.
   - Equation cost structures 108 ms.
   - Phase cost structures 3765 ms.
   - Chain cost structures 33 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 4334 ms.

