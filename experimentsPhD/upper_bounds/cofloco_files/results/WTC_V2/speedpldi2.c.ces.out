Warning: Ignored call to eval_speedpldi2_stop/1 in equation eval_speedpldi2_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedpldi2_bb1_in/4,eval_speedpldi2_bb2_in/4,eval_speedpldi2_bb3_in/4]
1. non_recursive  : [eval_speedpldi2_bb4_in/1]
2. non_recursive  : [loop_cont_eval_speedpldi2_bb1_in/2]
3. non_recursive  : [eval_speedpldi2_2/3]
4. non_recursive  : [eval_speedpldi2_1/3]
5. non_recursive  : [eval_speedpldi2_0/3]
6. non_recursive  : [eval_speedpldi2_bb0_in/3]
7. non_recursive  : [eval_speedpldi2_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedpldi2_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_speedpldi2_2/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_speedpldi2_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedpldi2_bb1_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_speedpldi2_bb1_in/4 
* CE 8: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) = 0
     [V_v2_0>=0,V_m>=1,B=2,V_v1_0=0] 
* CE 9: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) = 1+ eval_speedpldi2_bb1_in(V_m,C,D,E)
     [V_m>=V_v2_0+1,V_v1_0>=1,V_v2_0>=0,V_v1_0=D+1,V_v2_0+1=C,E=2,B=2] 
* CE 10: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) = 1+ eval_speedpldi2_bb1_in(V_m,C,V_v1_0,D)
     [V_v2_0>=V_m,V_v1_0>=1,V_m>=1,D=2,C=0,B=2] 

### Cost equations --> "Loop" of eval_speedpldi2_bb1_in/4 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

#### Loops of eval_speedpldi2_bb1_in/4 
* Loop 8: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B)->  eval_speedpldi2_bb1_in(V_m,V_v2_0',V_v1_0',B')
                  [V_m>=V_v2_0+1,V_v1_0>=1,V_v2_0>=0,V_v1_0=V_v1_0'+1,V_v2_0+1=V_v2_0',B'=2,B=2] 
* Loop 9: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B)->  eval_speedpldi2_bb1_in(V_m,V_v2_0',V_v1_0,B')
                  [V_v2_0>=V_m,V_v1_0>=1,V_m>=1,B'=2,V_v2_0'=0,B=2] 
* Loop 10: eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) [V_v2_0>=0,V_m>=1,B=2,V_v1_0=0] 

### Ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) 
* RF of phase [8,9]: [V_v2_0+2*V_v1_0-1]

#### Partial ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V_m-V_v2_0 depends on loops [9:1] 
    V_v1_0
  - RF of loop [9:1]:
    -V_m+V_v2_0+1 depends on loops [8:1] 
    V_v2_0 depends on loops [8:1] 


### Resulting Chains:eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) 
* [[8,9],10]
* [10]


### Specialization of cost equations eval_speedpldi2_2/3 
* CE 2 is refined into CE [11,12] 
* CE 4 is refined into CE [13] 
* CE 3 is refined into CE [14] 


#### Refined cost equations eval_speedpldi2_2/3 
* CE 11: eval_speedpldi2_2(V_n,V_m,B) = 1+ eval_speedpldi2_bb1_in(V_m,C,V_n,D):[[8,9],10]
     [V_n>=1,V_m>=1,D=2,C=0] 
* CE 12: eval_speedpldi2_2(V_n,V_m,B) = 1+ eval_speedpldi2_bb1_in(V_m,C,D,E):[10]
     [V_m>=1,E=2,D=0,C=0,V_n=0] 
* CE 13: eval_speedpldi2_2(V_n,V_m,B) = 0
     [0>=V_m] 
* CE 14: eval_speedpldi2_2(V_n,V_m,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_speedpldi2_2/3 
* CEs [11] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of eval_speedpldi2_2/3 
* Loop 11: eval_speedpldi2_2(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 12: eval_speedpldi2_2(V_n,V_m,B) [0>=V_m] 
* Loop 13: eval_speedpldi2_2(V_n,V_m,B) [0>=V_n+1] 
* Loop 14: eval_speedpldi2_2(V_n,V_m,B) [V_m>=1,V_n=0] 

### Ranking functions of CR eval_speedpldi2_2(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedpldi2_2(V_n,V_m,B) 


### Resulting Chains:eval_speedpldi2_2(V_n,V_m,B) 
* [14]
* [13]
* [12]
* [11]


### Specialization of cost equations eval_speedpldi2_start/3 
* CE 1 is refined into CE [15,16,17,18] 


#### Refined cost equations eval_speedpldi2_start/3 
* CE 15: eval_speedpldi2_start(V_n,V_m,B) = 0+ eval_speedpldi2_2(C,V_m,B):[14]
     [V_m>=1,C=0,V_n=0] 
* CE 16: eval_speedpldi2_start(V_n,V_m,B) = 0+ eval_speedpldi2_2(V_n,V_m,B):[13]
     [0>=V_n+1] 
* CE 17: eval_speedpldi2_start(V_n,V_m,B) = 0+ eval_speedpldi2_2(V_n,V_m,B):[12]
     [0>=V_m] 
* CE 18: eval_speedpldi2_start(V_n,V_m,B) = 0+ eval_speedpldi2_2(V_n,V_m,B):[11]
     [V_m>=1,V_n>=1] 

### Cost equations --> "Loop" of eval_speedpldi2_start/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

#### Loops of eval_speedpldi2_start/3 
* Loop 15: eval_speedpldi2_start(V_n,V_m,B) [V_m>=1,V_n>=1] 
* Loop 16: eval_speedpldi2_start(V_n,V_m,B) [0>=V_m] 
* Loop 17: eval_speedpldi2_start(V_n,V_m,B) [0>=V_n+1] 
* Loop 18: eval_speedpldi2_start(V_n,V_m,B) [V_m>=1,V_n=0] 

### Ranking functions of CR eval_speedpldi2_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedpldi2_start(V_n,V_m,B) 


### Resulting Chains:eval_speedpldi2_start(V_n,V_m,B) 
* [18]
* [17]
* [16]
* [15]


Computing Bounds
=====================================

#### Cost of loops [8,9] 

 * loop 8:eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) -> [eval_speedpldi2_bb1_in(V_m',V_v2_0',V_v1_0',B')] 
1
 * loop 9:eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) -> [eval_speedpldi2_bb1_in(V_m',V_v2_0',V_v1_0',B')] 
1
#### Cost of phase [8,9]:eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) -> [eval_speedpldi2_bb1_in(V_m',V_v2_0',V_v1_0',B')] 
1*it(8)+1*it(9)+0
  Such that:it(8) =< V_v1_0
it(8) =< V_v1_0-V_v1_0'
aux(11) =< V_v2_0+2*V_v1_0
aux(12) =< V_v2_0+2*V_v1_0-V_v2_0'-2*V_v1_0'
it(8) =< aux(11)
it(9) =< aux(11)
it(8) =< aux(12)
it(9) =< aux(12)

#### Cost of chains of eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(8) =< V_v1_0
aux(14) =< V_v2_0+2*V_v1_0
it(8) =< aux(14)
it(9) =< aux(14)

  with precondition: [B=2,V_m>=1,V_v2_0>=0,V_v1_0>=1] 

* Chain [10]: 0
  with precondition: [V_v1_0=0,B=2,V_m>=1,V_v2_0>=0] 


#### Cost of chains of eval_speedpldi2_2(V_n,V_m,B):
* Chain [14]: 1
  with precondition: [V_n=0,V_m>=1] 

* Chain [13]: 0
  with precondition: [0>=V_n+1] 

* Chain [12]: 0
  with precondition: [0>=V_m] 

* Chain [11]: 1*s(1)+1*s(3)+1
  Such that:s(1) =< V_n
s(2) =< 2*V_n
s(1) =< s(2)
s(3) =< s(2)

  with precondition: [V_n>=1,V_m>=1] 


#### Cost of chains of eval_speedpldi2_start(V_n,V_m,B):
* Chain [18]: 1
  with precondition: [V_n=0,V_m>=1] 

* Chain [17]: 0
  with precondition: [0>=V_n+1] 

* Chain [16]: 0
  with precondition: [0>=V_m] 

* Chain [15]: 1*s(4)+1*s(6)+1
  Such that:s(4) =< V_n
s(5) =< 2*V_n
s(4) =< s(5)
s(6) =< s(5)

  with precondition: [V_n>=1,V_m>=1] 


Closed-form bounds of eval_speedpldi2_start(V_n,V_m,B): 
-------------------------------------
* Chain [18] with precondition: [V_n=0,V_m>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [17] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_n>=1,V_m>=1] 
    - Upper bound: 3*V_n+1 
    - Complexity: n 

### Maximum cost of eval_speedpldi2_start(V_n,V_m,B): max([1,nat(V_n)+1+nat(2*V_n)]) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 21 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 107 ms.

