Warning: Ignored call to eval_counterex1a_stop/1 in equation eval_counterex1a__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1a_11/6,eval_counterex1a_12/7,eval_counterex1a_15/6,eval_counterex1a_16/7,eval_counterex1a_bb1_in/5,eval_counterex1a_bb2_in/5,eval_counterex1a_bb3_in/5,eval_counterex1a_bb4_in/5]
1. non_recursive  : [eval_counterex1a__critedge_in/1]
2. non_recursive  : [loop_cont_eval_counterex1a_bb1_in/2]
3. non_recursive  : [eval_counterex1a_9/5]
4. non_recursive  : [eval_counterex1a_8/5]
5. non_recursive  : [eval_counterex1a_7/5]
6. non_recursive  : [eval_counterex1a_6/5]
7. non_recursive  : [eval_counterex1a_5/5]
8. non_recursive  : [eval_counterex1a_4/5]
9. non_recursive  : [eval_counterex1a_3/5]
10. non_recursive  : [eval_counterex1a_2/5]
11. non_recursive  : [eval_counterex1a_1/5]
12. non_recursive  : [eval_counterex1a_0/5]
13. non_recursive  : [eval_counterex1a_bb0_in/5]
14. non_recursive  : [eval_counterex1a_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1a_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_counterex1a_9/5
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_counterex1a_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1a_bb1_in/5 
* CE 11 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 7 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 3 is refined into CE [19] 
* CE 4 is refined into CE [20] 


#### Refined cost equations eval_counterex1a_bb1_in/5 
* CE 12: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [V__04>=V_n+1,B=2] 
* CE 13: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [0>=V__01+1,B=2] 
* CE 14: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [0>=V__04+1,B=2] 
* CE 15: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,V__01,V__0,D)
     [V_n>=V__04,V__0>=1,V__01>=0,V__04>=0,V__04=C+1,D=2,B=2] 
* CE 16: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,V__01,V__0,D)
     [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,V__04=C+1,D=2,B=2] 
* CE 17: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,D,E,F)
     [V_n>=V__04,V__0>=1,V__01>=0,V__04>=0,V__01=D+1,V__04=C+1,F=2,E=0,B=2] 
* CE 18: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,D,E,F)
     [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,V__01=D+1,V__04=C+1,F=2,E=0,B=2] 
* CE 19: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,V__01,D,E)
     [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=C,E=2,D=1,B=2,V__0=0] 
* CE 20: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1a_bb1_in(V_n,C,V__01,D,E)
     [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=C,E=2,D=0,B=2,V__0=0] 

### Cost equations --> "Loop" of eval_counterex1a_bb1_in/5 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [12] --> Loop 18 
* CEs [13] --> Loop 19 
* CEs [14] --> Loop 20 

#### Loops of eval_counterex1a_bb1_in/5 
* Loop 12: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01,V__0,B')
                  [V_n>=V__04,V__0>=1,V__01>=0,V__04>=0,V__04=V__04'+1,B'=2,B=2] 
* Loop 13: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01,V__0,B')
                  [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,V__04=V__04'+1,B'=2,B=2] 
* Loop 14: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01',V__0',B')
                  [V_n>=V__04,V__0>=1,V__01>=0,V__04>=0,V__01=V__01'+1,V__04=V__04'+1,B'=2,V__0'=0,B=2] 
* Loop 15: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01',V__0',B')
                  [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,V__01=V__01'+1,V__04=V__04'+1,B'=2,V__0'=0,B=2] 
* Loop 16: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01,V__0',B')
                  [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=V__04',B'=2,V__0'=1,B=2,V__0=0] 
* Loop 17: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1a_bb1_in(V_n,V__04',V__01,V__0',B')
                  [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=V__04',B'=2,V__0'=0,B=2,V__0=0] 
* Loop 18: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) [V__04>=V_n+1,B=2] 
* Loop 19: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) [0>=V__01+1,B=2] 
* Loop 20: eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) [0>=V__04+1,B=2] 

### Ranking functions of CR eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) 
* RF of phase [13]: [V__04+1]

#### Partial ranking functions of CR eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) 
* Partial RF of phase [12,14,16,17]:
  - RF of loop [12:1,14:1]:
    V__04+1 depends on loops [16:1,17:1] 
  - RF of loop [14:1]:
    V__0 depends on loops [16:1] 
    V__01+1
  - RF of loop [16:1]:
    -V__0+1 depends on loops [14:1] 
  - RF of loop [16:1,17:1]:
    V_n-V__04+1 depends on loops [12:1,14:1] 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__04+1


### Resulting Chains:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) 
* [[13],20]
* [[13],15,[12,14,16,17]]...
* [[13],15,[12,14,16,17],20]
* [[13],15,[12,14,16,17],19]
* [[13],15,[12,14,16,17],18]
* [[13],15,20]
* [[13],15,19]
* [[12,14,16,17]]...
* [[12,14,16,17],20]
* [[12,14,16,17],19]
* [[12,14,16,17],18]
* [20]
* [19]
* [18]
* [15,[12,14,16,17]]...
* [15,[12,14,16,17],20]
* [15,[12,14,16,17],19]
* [15,[12,14,16,17],18]
* [15,20]
* [15,19]


### Specialization of cost equations eval_counterex1a_9/5 
* CE 2 is refined into CE [21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40] 


#### Refined cost equations eval_counterex1a_9/5 
* CE 21: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],20]
     [V_n>=V_y,V_x>=0,V_y>=0,0>=V_b+1,C=2] 
* CE 22: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],15,[12,14,16,17]]
     [V_n>=V_y,V_x>=1,V_y>=2,0>=V_b+1,C=2] 
* CE 23: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],15,[12,14,16,17],20]
     [V_n>=V_y,V_x>=1,V_y>=2,0>=V_b+1,C=2] 
* CE 24: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],15,[12,14,16,17],19]
     [V_n>=V_y,V_x>=1,V_y>=2,0>=V_b+1,C=2] 
* CE 25: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],15,[12,14,16,17],18]
     [V_n>=V_y,V_x>=1,V_y>=2,0>=V_b+1,C=2] 
* CE 26: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[13],15,20]
     [V_n>=V_y,V_x>=0,V_y>=1,0>=V_b+1,C=2] 
* CE 27: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,C,V_b,D):[[13],15,19]
     [V_n>=V_y,V_y>=1,0>=V_b+1,D=2,C=0,V_x=0] 
* CE 28: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[12,14,16,17]]
     [V_n>=V_y,V_b>=0,V_x>=0,V_y>=0,C=2] 
* CE 29: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[12,14,16,17],20]
     [V_n>=V_y,V_b>=0,V_x>=0,V_y>=0,C=2] 
* CE 30: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[12,14,16,17],19]
     [V_n+V_b>=V_y+1,V_n>=V_y,V_b>=0,V_x>=0,V_y>=0,C=2] 
* CE 31: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[[12,14,16,17],18]
     [V_n>=V_y,V_b>=0,V_x>=0,V_y>=0,C=2] 
* CE 32: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[20]
     [0>=V_y+1,C=2] 
* CE 33: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[19]
     [0>=V_x+1,C=2] 
* CE 34: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[18]
     [V_y>=V_n+1,C=2] 
* CE 35: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[15,[12,14,16,17]]
     [V_n>=V_y,V_x>=1,V_y>=1,0>=V_b+1,C=2] 
* CE 36: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[15,[12,14,16,17],20]
     [V_n>=V_y,V_x>=1,V_y>=1,0>=V_b+1,C=2] 
* CE 37: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[15,[12,14,16,17],19]
     [V_n>=V_y,V_x>=1,V_y>=1,0>=V_b+1,C=2] 
* CE 38: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,V_x,V_b,C):[15,[12,14,16,17],18]
     [V_n>=V_y,V_x>=1,V_y>=1,0>=V_b+1,C=2] 
* CE 39: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,C,V_x,V_b,D):[15,20]
     [V_x>=0,V_n>=0,0>=V_b+1,D=2,C=0,V_y=0] 
* CE 40: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1a_bb1_in(V_n,V_y,C,V_b,D):[15,19]
     [V_n>=V_y,V_y>=0,0>=V_b+1,D=2,C=0,V_x=0] 

### Cost equations --> "Loop" of eval_counterex1a_9/5 
* CEs [34] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [32] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [25] --> Loop 27 
* CEs [24] --> Loop 28 
* CEs [23] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 
* CEs [26] --> Loop 33 
* CEs [21] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [27] --> Loop 36 
* CEs [40] --> Loop 37 
* CEs [28] --> Loop 38 
* CEs [22] --> Loop 39 
* CEs [35] --> Loop 40 

#### Loops of eval_counterex1a_9/5 
* Loop 21: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_y>=V_n+1] 
* Loop 22: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 23: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 24: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 25: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [0>=V_y+1] 
* Loop 26: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [0>=V_x+1] 
* Loop 27: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 28: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 29: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 30: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 31: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 32: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 33: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=0,0>=V_b+1] 
* Loop 34: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* Loop 35: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_x>=0,V_n>=0,0>=V_b+1,V_y=0] 
* Loop 36: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,0>=V_b+1,V_x=0] 
* Loop 37: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,0>=V_b+1,V_x=0] 
* Loop 38: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 39: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 40: eval_counterex1a_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 

### Ranking functions of CR eval_counterex1a_9(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1a_9(V_n,V_b,V_x,V_y,B) 


### Resulting Chains:eval_counterex1a_9(V_n,V_b,V_x,V_y,B) 
* [40]...
* [39]...
* [38]...
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]


### Specialization of cost equations eval_counterex1a_start/5 
* CE 1 is refined into CE [41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60] 


#### Refined cost equations eval_counterex1a_start/5 
* CE 41: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[40]
     [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* CE 42: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[39]
     [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* CE 43: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[38]
     [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* CE 44: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,C,V_y,B):[37]
     [V_n>=V_y,V_y>=0,0>=V_b+1,C=0,V_x=0] 
* CE 45: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,C,V_y,B):[36]
     [V_n>=V_y,V_y>=1,0>=V_b+1,C=0,V_x=0] 
* CE 46: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,C,B):[35]
     [V_x>=0,V_n>=0,0>=V_b+1,C=0,V_y=0] 
* CE 47: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[34]
     [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* CE 48: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[33]
     [V_n>=V_y,V_y>=1,V_x>=0,0>=V_b+1] 
* CE 49: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[32]
     [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* CE 50: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[31]
     [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* CE 51: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[30]
     [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* CE 52: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[29]
     [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* CE 53: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[28]
     [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* CE 54: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[27]
     [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* CE 55: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[26]
     [0>=V_x+1] 
* CE 56: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[25]
     [0>=V_y+1] 
* CE 57: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[24]
     [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* CE 58: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[23]
     [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* CE 59: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[22]
     [V_n+V_b>=V_y+1,V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* CE 60: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1a_9(V_n,V_b,V_x,V_y,B):[21]
     [V_y>=V_n+1] 

### Cost equations --> "Loop" of eval_counterex1a_start/5 
* CEs [60] --> Loop 41 
* CEs [59] --> Loop 42 
* CEs [58] --> Loop 43 
* CEs [57] --> Loop 44 
* CEs [56] --> Loop 45 
* CEs [55] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [53] --> Loop 48 
* CEs [52] --> Loop 49 
* CEs [51] --> Loop 50 
* CEs [50] --> Loop 51 
* CEs [49] --> Loop 52 
* CEs [48] --> Loop 53 
* CEs [47] --> Loop 54 
* CEs [46] --> Loop 55 
* CEs [45] --> Loop 56 
* CEs [44] --> Loop 57 
* CEs [43] --> Loop 58 
* CEs [42] --> Loop 59 
* CEs [41] --> Loop 60 

#### Loops of eval_counterex1a_start/5 
* Loop 41: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_y>=V_n+1] 
* Loop 42: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 43: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 44: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 45: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [0>=V_y+1] 
* Loop 46: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [0>=V_x+1] 
* Loop 47: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 48: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 49: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 50: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 51: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 52: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 
* Loop 53: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=0,0>=V_b+1] 
* Loop 54: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* Loop 55: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_x>=0,V_n>=0,0>=V_b+1,V_y=0] 
* Loop 56: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,0>=V_b+1,V_x=0] 
* Loop 57: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,0>=V_b+1,V_x=0] 
* Loop 58: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0] 
* Loop 59: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=2,V_x>=1,0>=V_b+1] 
* Loop 60: eval_counterex1a_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=1,V_x>=1,0>=V_b+1] 

### Ranking functions of CR eval_counterex1a_start(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1a_start(V_n,V_b,V_x,V_y,B) 


### Resulting Chains:eval_counterex1a_start(V_n,V_b,V_x,V_y,B) 
* [60]...
* [59]...
* [58]...
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of loops [12,14,16,17] 

 * loop 12:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 14:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 16:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 17:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
#### Cost of phase [12,14,16,17]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(12)+1*it(14)+0
  Such that:aux(18) =< V__01+1
aux(19) =< V__01-V__01'
it(14) =< aux(18)
it(14) =< aux(19)

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of phase [12,14,16,17]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(12)+1*it(14)+0
  Such that:aux(18) =< V__01+1
aux(19) =< V__01-V__01'
it(14) =< aux(18)
it(14) =< aux(19)

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of phase [12,14,16,17]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(12)+1*it(14)+0
  Such that:aux(18) =< V__01+1
aux(19) =< V__01-V__01'
it(14) =< aux(18)
it(14) =< aux(19)

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of phase [12,14,16,17]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(12)+1*it(14)+0
  Such that:aux(18) =< V__01+1
aux(19) =< V__01-V__01'
it(14) =< aux(18)
it(14) =< aux(19)

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of phase [13]:eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1a_bb1_in(V_n',V__04',V__01',V__0',B')] 
1*it(13)+0
  Such that:it(13) =< V__04+1
it(13) =< V__04-V__04'

#### Cost of chains of eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B):
* Chain [[13],20]: 1*it(13)+0
  Such that:it(13) =< V__04+1

  with precondition: [B=2,0>=V__0+1,V__04>=0,V__01>=0,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17]]...: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(20) =< V__01
it(14) =< aux(20)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],20]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(21) =< V__01
it(14) =< aux(21)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],19]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(22) =< V__01
it(14) =< aux(22)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],18]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(23) =< V__01
it(14) =< aux(23)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,20]: 1*it(13)+1
  Such that:it(13) =< V__04

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=0,V_n>=V__04] 

* Chain [[13],15,19]: 1*it(13)+1
  Such that:it(13) =< V__04

  with precondition: [V__01=0,B=2,0>=V__0+1,V__04>=1,V_n>=V__04] 

* Chain [[12,14,16,17]]...: 3*it(12)+1*it(14)+0
  Such that:aux(20) =< V__01+1
it(14) =< aux(20)

  with precondition: [V__0>=0,V__01>=0,V_n>=V__04,V__04>=0,B=2] 

* Chain [[12,14,16,17],20]: 3*it(12)+1*it(14)+0
  Such that:aux(21) =< V__01+1
it(14) =< aux(21)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04] 

* Chain [[12,14,16,17],19]: 3*it(12)+1*it(14)+0
  Such that:aux(22) =< V__01+1
it(14) =< aux(22)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04,V__0+V_n>=V__04+1] 

* Chain [[12,14,16,17],18]: 3*it(12)+1*it(14)+0
  Such that:aux(19) =< V__01
aux(18) =< V__01+1
it(14) =< aux(18)
it(14) =< aux(19)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04] 

* Chain [20]: 0
  with precondition: [B=2,0>=V__04+1] 

* Chain [19]: 0
  with precondition: [B=2,0>=V__01+1] 

* Chain [18]: 0
  with precondition: [B=2,V__04>=V_n+1] 

* Chain [15,[12,14,16,17]]...: 3*it(12)+1*it(14)+1
  Such that:aux(20) =< V__01
it(14) =< aux(20)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],20]: 3*it(12)+1*it(14)+1
  Such that:aux(21) =< V__01
it(14) =< aux(21)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],19]: 3*it(12)+1*it(14)+1
  Such that:aux(22) =< V__01
it(14) =< aux(22)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],18]: 3*it(12)+1*it(14)+1
  Such that:aux(23) =< V__01
it(14) =< aux(23)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,20]: 1
  with precondition: [V__04=0,B=2,0>=V__0+1,V_n>=0,V__01>=0] 

* Chain [15,19]: 1
  with precondition: [V__01=0,B=2,0>=V__0+1,V__04>=0,V_n>=V__04] 


#### Cost of chains of eval_counterex1a_9(V_n,V_b,V_x,V_y,B):
* Chain [40]...: 1*s(2)+3*s(3)+2
  Such that:s(1) =< V_x
s(2) =< s(1)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [39]...: 1*s(4)+1*s(6)+3*s(7)+2
  Such that:s(5) =< V_x
s(4) =< V_y
s(6) =< s(5)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [38]...: 1*s(9)+3*s(10)+1
  Such that:s(8) =< V_x+1
s(9) =< s(8)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [37]: 2
  with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 

* Chain [36]: 1*s(11)+2
  Such that:s(11) =< V_y

  with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 

* Chain [35]: 2
  with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 

* Chain [34]: 1*s(12)+1
  Such that:s(12) =< V_y+1

  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [33]: 1*s(13)+2
  Such that:s(13) =< V_y

  with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 

* Chain [32]: 1*s(15)+3*s(16)+2
  Such that:s(14) =< V_x
s(15) =< s(14)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [31]: 1*s(18)+3*s(19)+2
  Such that:s(17) =< V_x
s(18) =< s(17)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [30]: 1*s(21)+3*s(22)+2
  Such that:s(20) =< V_x
s(21) =< s(20)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [29]: 1*s(23)+1*s(25)+3*s(26)+2
  Such that:s(24) =< V_x
s(23) =< V_y
s(25) =< s(24)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [28]: 1*s(27)+1*s(29)+3*s(30)+2
  Such that:s(28) =< V_x
s(27) =< V_y
s(29) =< s(28)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [27]: 1*s(31)+1*s(33)+3*s(34)+2
  Such that:s(32) =< V_x
s(31) =< V_y
s(33) =< s(32)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [26]: 1
  with precondition: [0>=V_x+1] 

* Chain [25]: 1
  with precondition: [0>=V_y+1] 

* Chain [24]: 1*s(36)+3*s(37)+1
  Such that:s(35) =< V_x+1
s(36) =< s(35)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [23]: 1*s(40)+3*s(41)+1
  Such that:s(38) =< V_x
s(39) =< V_x+1
s(40) =< s(39)
s(40) =< s(38)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [22]: 1*s(43)+3*s(44)+1
  Such that:s(42) =< V_x+1
s(43) =< s(42)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_b+V_n>=V_y+1] 

* Chain [21]: 1
  with precondition: [V_y>=V_n+1] 


#### Cost of chains of eval_counterex1a_start(V_n,V_b,V_x,V_y,B):
* Chain [60]...: 1*s(46)+3*s(47)+2
  Such that:s(45) =< V_x
s(46) =< s(45)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [59]...: 1*s(49)+1*s(50)+3*s(51)+2
  Such that:s(48) =< V_x
s(49) =< V_y
s(50) =< s(48)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [58]...: 1*s(53)+3*s(54)+1
  Such that:s(52) =< V_x+1
s(53) =< s(52)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [57]: 2
  with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 

* Chain [56]: 1*s(55)+2
  Such that:s(55) =< V_y

  with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 

* Chain [55]: 2
  with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 

* Chain [54]: 1*s(56)+1
  Such that:s(56) =< V_y+1

  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [53]: 1*s(57)+2
  Such that:s(57) =< V_y

  with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 

* Chain [52]: 1*s(59)+3*s(60)+2
  Such that:s(58) =< V_x
s(59) =< s(58)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [51]: 1*s(62)+3*s(63)+2
  Such that:s(61) =< V_x
s(62) =< s(61)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [50]: 1*s(65)+3*s(66)+2
  Such that:s(64) =< V_x
s(65) =< s(64)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [49]: 1*s(68)+1*s(69)+3*s(70)+2
  Such that:s(67) =< V_x
s(68) =< V_y
s(69) =< s(67)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [48]: 1*s(72)+1*s(73)+3*s(74)+2
  Such that:s(71) =< V_x
s(72) =< V_y
s(73) =< s(71)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [47]: 1*s(76)+1*s(77)+3*s(78)+2
  Such that:s(75) =< V_x
s(76) =< V_y
s(77) =< s(75)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [46]: 1
  with precondition: [0>=V_x+1] 

* Chain [45]: 1
  with precondition: [0>=V_y+1] 

* Chain [44]: 1*s(80)+3*s(81)+1
  Such that:s(79) =< V_x+1
s(80) =< s(79)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [43]: 1*s(84)+3*s(85)+1
  Such that:s(82) =< V_x
s(83) =< V_x+1
s(84) =< s(83)
s(84) =< s(82)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [42]: 1*s(87)+3*s(88)+1
  Such that:s(86) =< V_x+1
s(87) =< s(86)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_b+V_n>=V_y+1] 

* Chain [41]: 1
  with precondition: [V_y>=V_n+1] 


Closed-form bounds of eval_counterex1a_start(V_n,V_b,V_x,V_y,B): 
-------------------------------------
* Chain [60]... with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [59]... with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [58]... with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [57] with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [56] with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 
    - Upper bound: V_y+2 
    - Complexity: n 
* Chain [55] with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [54] with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: V_y+2 
    - Complexity: n 
* Chain [53] with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 
    - Upper bound: V_y+2 
    - Complexity: n 
* Chain [52] with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48] with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [47] with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46] with precondition: [0>=V_x+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [45] with precondition: [0>=V_y+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [44] with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42] with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_n+V_b>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [41] with precondition: [V_y>=V_n+1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_counterex1a_start(V_n,V_b,V_x,V_y,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 47 ms.
* Invariants computed in 123 ms.
   - Backward Invariants 63 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 147 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 188 ms.
   - Equation cost structures 72 ms.
   - Phase cost structures 32 ms.
   - Chain cost structures 57 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 592 ms.

