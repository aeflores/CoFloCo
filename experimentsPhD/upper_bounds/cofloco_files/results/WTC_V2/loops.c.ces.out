Warning: Ignored call to eval_loops_stop/1 in equation eval_loops_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_loops_bb3_in/5,eval_loops_bb4_in/5]
1. recursive  : [eval_loops_bb1_in/2,eval_loops_bb2_in/2,eval_loops_bb5_in/3,loop_cont_eval_loops_bb3_in/4]
2. non_recursive  : [eval_loops_bb6_in/1]
3. non_recursive  : [loop_cont_eval_loops_bb1_in/2]
4. non_recursive  : [eval_loops_2/2]
5. non_recursive  : [eval_loops_1/2]
6. non_recursive  : [eval_loops_0/2]
7. non_recursive  : [eval_loops_bb0_in/2]
8. non_recursive  : [eval_loops_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_loops_bb3_in/5
1. SCC is partially evaluated into eval_loops_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_loops_2/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_loops_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_loops_bb3_in/5 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_loops_bb3_in/5 
* CE 9: eval_loops_bb3_in(A,B,C,A,B) = 0
     [B>=A,A>=2,C=2] 
* CE 10: eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) = 1+ eval_loops_bb3_in(V_x_0,E,F,C,D)
     [V_x_0>=V_y_0+1,V_y_0>=1,2*V_y_0=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_loops_bb3_in/5 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_loops_bb3_in/5 
* Loop 9: eval_loops_bb3_in(V_x_0,V_y_0,B,C,D)->  eval_loops_bb3_in(V_x_0,V_y_0',B',C,D)
                  [V_x_0>=V_y_0+1,V_y_0>=1,2*V_y_0=V_y_0',B'=2,B=2] 
* Loop 10: eval_loops_bb3_in(A,B,C,A,B) [B>=A,A>=2,C=2] 

### Ranking functions of CR eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) 
* RF of phase [9]: [2*V_x_0-2*V_y_0-1]

#### Partial ranking functions of CR eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    2*V_x_0-2*V_y_0-1


### Resulting Chains:eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) 
* [[9],10]


### Specialization of cost equations eval_loops_bb1_in/2 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_loops_bb1_in/2 
* CE 11: eval_loops_bb1_in(V_x_0,B) = 0
     [0>=V_x_0+1,B=3] 
* CE 12: eval_loops_bb1_in(V_x_0,B) = 2+ eval_loops_bb3_in(V_x_0,C,D,V_x_0,E):[[9],10]+ eval_loops_bb1_in(F,G)
     [2*V_x_0>=E+2,E>=V_x_0,V_x_0=F+1,G=3,D=2,C=1,B=3] 
* CE 13: eval_loops_bb1_in(V_x_0,B) = 1+ eval_loops_bb1_in(C,D)
     [V_x_0>=0,1>=V_x_0,V_x_0=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_loops_bb1_in/2 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 

#### Loops of eval_loops_bb1_in/2 
* Loop 11: eval_loops_bb1_in(V_x_0,B)->  eval_loops_bb1_in(V_x_0',B')
                  [V_x_0>=2,V_x_0=V_x_0'+1,B'=3,B=3] 
* Loop 12: eval_loops_bb1_in(V_x_0,B)->  eval_loops_bb1_in(V_x_0',B')
                  [V_x_0>=0,1>=V_x_0,V_x_0=V_x_0'+1,B'=3,B=3] 
* Loop 13: eval_loops_bb1_in(V_x_0,B) [0>=V_x_0+1,B=3] 

### Ranking functions of CR eval_loops_bb1_in(V_x_0,B) 
* RF of phase [11]: [V_x_0-1]
* RF of phase [12]: [V_x_0+1]

#### Partial ranking functions of CR eval_loops_bb1_in(V_x_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_x_0-1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_x_0+1


### Resulting Chains:eval_loops_bb1_in(V_x_0,B) 
* [[12],13]
* [[11],[12],13]


### Specialization of cost equations eval_loops_2/2 
* CE 2 is refined into CE [14,15] 
* CE 3 is refined into CE [16] 


#### Refined cost equations eval_loops_2/2 
* CE 14: eval_loops_2(V_n,B) = 1+ eval_loops_bb1_in(V_n,C):[[12],13]
     [V_n>=0,1>=V_n,C=3] 
* CE 15: eval_loops_2(V_n,B) = 1+ eval_loops_bb1_in(V_n,C):[[11],[12],13]
     [V_n>=2,C=3] 
* CE 16: eval_loops_2(V_n,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_loops_2/2 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [14] --> Loop 16 

#### Loops of eval_loops_2/2 
* Loop 14: eval_loops_2(V_n,B) [V_n>=2] 
* Loop 15: eval_loops_2(V_n,B) [0>=V_n+1] 
* Loop 16: eval_loops_2(V_n,B) [V_n>=0,1>=V_n] 

### Ranking functions of CR eval_loops_2(V_n,B) 

#### Partial ranking functions of CR eval_loops_2(V_n,B) 


### Resulting Chains:eval_loops_2(V_n,B) 
* [16]
* [15]
* [14]


### Specialization of cost equations eval_loops_start/2 
* CE 1 is refined into CE [17,18,19] 


#### Refined cost equations eval_loops_start/2 
* CE 17: eval_loops_start(V_n,B) = 0+ eval_loops_2(V_n,B):[16]
     [V_n>=0,1>=V_n] 
* CE 18: eval_loops_start(V_n,B) = 0+ eval_loops_2(V_n,B):[15]
     [0>=V_n+1] 
* CE 19: eval_loops_start(V_n,B) = 0+ eval_loops_2(V_n,B):[14]
     [V_n>=2] 

### Cost equations --> "Loop" of eval_loops_start/2 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 

#### Loops of eval_loops_start/2 
* Loop 17: eval_loops_start(V_n,B) [V_n>=2] 
* Loop 18: eval_loops_start(V_n,B) [0>=V_n+1] 
* Loop 19: eval_loops_start(V_n,B) [V_n>=0,1>=V_n] 

### Ranking functions of CR eval_loops_start(V_n,B) 

#### Partial ranking functions of CR eval_loops_start(V_n,B) 


### Resulting Chains:eval_loops_start(V_n,B) 
* [19]
* [18]
* [17]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) -> [eval_loops_bb3_in(V_x_0',V_y_0',B',C',D')] 
1
#### Cost of phase [9]:eval_loops_bb3_in(V_x_0,V_y_0,B,C,D) -> [eval_loops_bb3_in(V_x_0',V_y_0',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< 2*V_x_0-2*V_y_0
it(9) =< 2*V_x_0-2*V_y_0-2*V_x_0'+2*V_y_0'

#### Cost of chains of eval_loops_bb3_in(V_x_0,V_y_0,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -2*V_y_0+2*C

  with precondition: [B=2,V_x_0=C,V_y_0>=1,D>=2*V_y_0,D>=V_x_0,2*V_x_0>=D+2] 


#### Cost of loops [12] 

 * loop 12:eval_loops_bb1_in(V_x_0,B) -> [eval_loops_bb1_in(V_x_0',B')] 
1
#### Cost of phase [12]:eval_loops_bb1_in(V_x_0,B) -> [eval_loops_bb1_in(V_x_0',B')] 
1*it(12)+0
  Such that:it(12) =< V_x_0+1
it(12) =< V_x_0-V_x_0'

#### Cost of loops [11] 

 * loop 11:eval_loops_bb1_in(V_x_0,B) -> [eval_loops_bb1_in(V_x_0',B')] 
1*s(2)+2
  Such that:s(2) =< 2*V_x_0'

#### Cost of phase [11]:eval_loops_bb1_in(V_x_0,B) -> [eval_loops_bb1_in(V_x_0',B')] 
2*it(11)+1*s(3)+0
  Such that:it(11) =< V_x_0
it(11) =< V_x_0-V_x_0'
aux(1) =< 2*V_x_0
s(3) =< it(11)*aux(1)

#### Cost of chains of eval_loops_bb1_in(V_x_0,B):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_x_0+1

  with precondition: [B=3,1>=V_x_0,V_x_0>=0] 

* Chain [[11],[12],13]: 2*it(11)+1*it(12)+1*s(3)+0
  Such that:it(12) =< 2
it(11) =< V_x_0
aux(1) =< 2*V_x_0
s(3) =< it(11)*aux(1)

  with precondition: [B=3,V_x_0>=2] 


#### Cost of chains of eval_loops_2(V_n,B):
* Chain [16]: 1*s(4)+1
  Such that:s(4) =< V_n+1

  with precondition: [1>=V_n,V_n>=0] 

* Chain [15]: 0
  with precondition: [0>=V_n+1] 

* Chain [14]: 1*s(5)+2*s(6)+1*s(8)+1
  Such that:s(5) =< 2
s(6) =< V_n
s(7) =< 2*V_n
s(8) =< s(6)*s(7)

  with precondition: [V_n>=2] 


#### Cost of chains of eval_loops_start(V_n,B):
* Chain [19]: 1*s(9)+1
  Such that:s(9) =< V_n+1

  with precondition: [1>=V_n,V_n>=0] 

* Chain [18]: 0
  with precondition: [0>=V_n+1] 

* Chain [17]: 1*s(10)+2*s(11)+1*s(13)+1
  Such that:s(10) =< 2
s(11) =< V_n
s(12) =< 2*V_n
s(13) =< s(11)*s(12)

  with precondition: [V_n>=2] 


Closed-form bounds of eval_loops_start(V_n,B): 
-------------------------------------
* Chain [19] with precondition: [1>=V_n,V_n>=0] 
    - Upper bound: V_n+2 
    - Complexity: n 
* Chain [18] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_n>=2] 
    - Upper bound: 2*V_n+3+2*V_n*V_n 
    - Complexity: n^2 

### Maximum cost of eval_loops_start(V_n,B): max([nat(V_n+1)+1,nat(V_n)*2+3+nat(2*V_n)*nat(V_n)]) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 36 ms.
* Invariants computed in 63 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 70 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 114 ms.
   - Equation cost structures 31 ms.
   - Phase cost structures 54 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 355 ms.

