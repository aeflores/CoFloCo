Warning: Ignored call to eval_while2_stop/1 in equation eval_while2_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_while2_bb2_in/7,eval_while2_bb3_in/7]
1. recursive  : [eval_while2_8/5,eval_while2_9/5,eval_while2_bb1_in/3,eval_while2_bb4_in/4,loop_cont_eval_while2_bb2_in/5]
2. non_recursive  : [eval_while2_bb5_in/1]
3. non_recursive  : [loop_cont_eval_while2_bb1_in/2]
4. non_recursive  : [eval_while2_4/2]
5. non_recursive  : [eval_while2_3/2]
6. non_recursive  : [eval_while2_2/2]
7. non_recursive  : [eval_while2_1/2]
8. non_recursive  : [eval_while2_0/2]
9. non_recursive  : [eval_while2_bb0_in/2]
10. non_recursive  : [eval_while2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_while2_bb2_in/7
1. SCC is partially evaluated into eval_while2_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_while2_4/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_while2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_while2_bb2_in/7 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_while2_bb2_in/7 
* CE 7: eval_while2_bb2_in(A,B,C,D,A,B,C) = 0
     [A>=C,B>=1,0>=C,D=2] 
* CE 8: eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) = 1+ eval_while2_bb2_in(V_N,V_i_0,F,G,C,D,E)
     [V_N>=V_j_0,V_j_0>=1,V_i_0>=1,V_j_0=F+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_while2_bb2_in/7 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

#### Loops of eval_while2_bb2_in/7 
* Loop 7: eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E)->  eval_while2_bb2_in(V_N,V_i_0,V_j_0',B',C,D,E)
                  [V_N>=V_j_0,V_j_0>=1,V_i_0>=1,V_j_0=V_j_0'+1,B'=2,B=2] 
* Loop 8: eval_while2_bb2_in(A,B,C,D,A,B,C) [A>=C,B>=1,0>=C,D=2] 

### Ranking functions of CR eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [7]: [V_j_0]

#### Partial ranking functions of CR eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_j_0


### Resulting Chains:eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) 
* [[7],8]
* [8]


### Specialization of cost equations eval_while2_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_while2_bb1_in/3 
* CE 9: eval_while2_bb1_in(V_N,V_i_0,B) = 0
     [0>=V_i_0,B=3] 
* CE 10: eval_while2_bb1_in(V_N,V_i_0,B) = 2+ eval_while2_bb2_in(V_N,V_i_0,V_N,C,V_N,V_i_0,D):[[7],8]+ eval_while2_bb1_in(V_N,E,F)
     [V_i_0>=1,V_N>=1,V_i_0=E+1,F=3,D=0,C=2,B=3] 
* CE 11: eval_while2_bb1_in(V_N,V_i_0,B) = 2+ eval_while2_bb2_in(V_N,V_i_0,V_N,C,V_N,V_i_0,V_N):[8]+ eval_while2_bb1_in(V_N,D,E)
     [V_i_0>=1,0>=V_N,V_i_0=D+1,E=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_while2_bb1_in/3 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [9] --> Loop 11 

#### Loops of eval_while2_bb1_in/3 
* Loop 9: eval_while2_bb1_in(V_N,V_i_0,B)->  eval_while2_bb1_in(V_N,V_i_0',B')
                  [V_i_0>=1,V_N>=1,V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 10: eval_while2_bb1_in(V_N,V_i_0,B)->  eval_while2_bb1_in(V_N,V_i_0',B')
                  [V_i_0>=1,0>=V_N,V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 11: eval_while2_bb1_in(V_N,V_i_0,B) [0>=V_i_0,B=3] 

### Ranking functions of CR eval_while2_bb1_in(V_N,V_i_0,B) 
* RF of phase [9]: [V_i_0]

#### Partial ranking functions of CR eval_while2_bb1_in(V_N,V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_i_0


### Resulting Chains:eval_while2_bb1_in(V_N,V_i_0,B) 
* [[9],11]
* [11]


### Specialization of cost equations eval_while2_4/2 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_while2_4/2 
* CE 12: eval_while2_4(V_N,B) = 1+ eval_while2_bb1_in(V_N,V_N,C):[[9],11]
     [V_N>=1,C=3] 
* CE 13: eval_while2_4(V_N,B) = 1+ eval_while2_bb1_in(V_N,V_N,C):[11]
     [0>=V_N,C=3] 

### Cost equations --> "Loop" of eval_while2_4/2 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_while2_4/2 
* Loop 12: eval_while2_4(V_N,B) [V_N>=1] 
* Loop 13: eval_while2_4(V_N,B) [0>=V_N] 

### Ranking functions of CR eval_while2_4(V_N,B) 

#### Partial ranking functions of CR eval_while2_4(V_N,B) 


### Resulting Chains:eval_while2_4(V_N,B) 
* [13]
* [12]


### Specialization of cost equations eval_while2_start/2 
* CE 1 is refined into CE [14,15] 


#### Refined cost equations eval_while2_start/2 
* CE 14: eval_while2_start(V_N,B) = 0+ eval_while2_4(V_N,B):[13]
     [0>=V_N] 
* CE 15: eval_while2_start(V_N,B) = 0+ eval_while2_4(V_N,B):[12]
     [V_N>=1] 

### Cost equations --> "Loop" of eval_while2_start/2 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of eval_while2_start/2 
* Loop 14: eval_while2_start(V_N,B) [V_N>=1] 
* Loop 15: eval_while2_start(V_N,B) [0>=V_N] 

### Ranking functions of CR eval_while2_start(V_N,B) 

#### Partial ranking functions of CR eval_while2_start(V_N,B) 


### Resulting Chains:eval_while2_start(V_N,B) 
* [15]
* [14]


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) -> [eval_while2_bb2_in(V_N',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [7]:eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E) -> [eval_while2_bb2_in(V_N',V_i_0',V_j_0',B',C',D',E')] 
1*it(7)+0
  Such that:it(7) =< V_j_0
it(7) =< V_j_0-V_j_0'

#### Cost of chains of eval_while2_bb2_in(V_N,V_i_0,V_j_0,B,C,D,E):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_j_0

  with precondition: [B=2,E=0,V_N=C,V_i_0=D,V_i_0>=1,V_j_0>=1,V_N>=V_j_0] 

* Chain [8]: 0
  with precondition: [B=2,V_N=C,V_i_0=D,V_j_0=E,0>=V_j_0,V_i_0>=1,V_N>=V_j_0] 


#### Cost of loops [9] 

 * loop 9:eval_while2_bb1_in(V_N,V_i_0,B) -> [eval_while2_bb1_in(V_N',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_N

#### Cost of phase [9]:eval_while2_bb1_in(V_N,V_i_0,B) -> [eval_while2_bb1_in(V_N',V_i_0',B')] 
2*it(9)+1*s(3)+0
  Such that:aux(1) =< V_N
it(9) =< V_i_0
it(9) =< V_i_0-V_i_0'
s(3) =< it(9)*aux(1)

#### Cost of chains of eval_while2_bb1_in(V_N,V_i_0,B):
* Chain [[9],11]: 2*it(9)+1*s(3)+0
  Such that:aux(1) =< V_N
it(9) =< V_i_0
s(3) =< it(9)*aux(1)

  with precondition: [B=3,V_i_0>=1,V_N>=V_i_0] 

* Chain [11]: 0
  with precondition: [B=3,0>=V_i_0,V_N>=V_i_0] 


#### Cost of chains of eval_while2_4(V_N,B):
* Chain [13]: 1
  with precondition: [0>=V_N] 

* Chain [12]: 2*s(5)+1*s(6)+1
  Such that:aux(2) =< V_N
s(5) =< aux(2)
s(6) =< s(5)*aux(2)

  with precondition: [V_N>=1] 


#### Cost of chains of eval_while2_start(V_N,B):
* Chain [15]: 1
  with precondition: [0>=V_N] 

* Chain [14]: 2*s(8)+1*s(9)+1
  Such that:s(7) =< V_N
s(8) =< s(7)
s(9) =< s(8)*s(7)

  with precondition: [V_N>=1] 


Closed-form bounds of eval_while2_start(V_N,B): 
-------------------------------------
* Chain [15] with precondition: [0>=V_N] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [V_N>=1] 
    - Upper bound: 2*V_N+1+V_N*V_N 
    - Complexity: n^2 

### Maximum cost of eval_while2_start(V_N,B): nat(V_N)*nat(V_N)+nat(V_N)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 24 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 113 ms.

