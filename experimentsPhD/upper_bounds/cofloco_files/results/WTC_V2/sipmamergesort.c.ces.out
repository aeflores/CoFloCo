Warning: Ignored call to eval_sipmamergesort_init_stop/1 in equation eval_sipmamergesort_init_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_sipmamergesort_init_bb3_in/16,eval_sipmamergesort_init_bb4_in/16,eval_sipmamergesort_init_bb5_in/16,eval_sipmamergesort_init_bb6_in/16]
1. recursive  : [eval_sipmamergesort_init_bb7_in/18,eval_sipmamergesort_init_bb8_in/18]
2. recursive  : [eval_sipmamergesort_init_bb10_in/19,eval_sipmamergesort_init_bb9_in/19]
3. recursive  : [eval_sipmamergesort_init_77/19,eval_sipmamergesort_init_78/19,eval_sipmamergesort_init_79/19,eval_sipmamergesort_init_80/19,eval_sipmamergesort_init_81/19,eval_sipmamergesort_init_bb11_in/19,eval_sipmamergesort_init_bb2_in/14,loop_cont_eval_sipmamergesort_init_bb3_in/19,loop_cont_eval_sipmamergesort_init_bb7_in/20,loop_cont_eval_sipmamergesort_init_bb9_in/20]
4. recursive  : [eval_sipmamergesort_init_83/13,eval_sipmamergesort_init_84/13,eval_sipmamergesort_init_85/14,eval_sipmamergesort_init_86/14,eval_sipmamergesort_init_bb12_in/12,eval_sipmamergesort_init_bb1_in/6,loop_cont_eval_sipmamergesort_init_bb2_in/13]
5. recursive  : [eval_sipmamergesort_init_bb14_in/3,eval_sipmamergesort_init_bb15_in/3]
6. non_recursive  : [eval_sipmamergesort_init_bb16_in/1]
7. non_recursive  : [loop_cont_eval_sipmamergesort_init_bb14_in/2]
8. non_recursive  : [eval_sipmamergesort_init_bb13_in/3]
9. non_recursive  : [loop_cont_eval_sipmamergesort_init_bb1_in/4]
10. non_recursive  : [eval_sipmamergesort_init_26/2]
11. non_recursive  : [eval_sipmamergesort_init_25/2]
12. non_recursive  : [eval_sipmamergesort_init_24/2]
13. non_recursive  : [eval_sipmamergesort_init_23/2]
14. non_recursive  : [eval_sipmamergesort_init_22/2]
15. non_recursive  : [eval_sipmamergesort_init_21/2]
16. non_recursive  : [eval_sipmamergesort_init_20/2]
17. non_recursive  : [eval_sipmamergesort_init_19/2]
18. non_recursive  : [eval_sipmamergesort_init_18/2]
19. non_recursive  : [eval_sipmamergesort_init_17/2]
20. non_recursive  : [eval_sipmamergesort_init_16/2]
21. non_recursive  : [eval_sipmamergesort_init_15/2]
22. non_recursive  : [eval_sipmamergesort_init_14/2]
23. non_recursive  : [eval_sipmamergesort_init_13/2]
24. non_recursive  : [eval_sipmamergesort_init_12/2]
25. non_recursive  : [eval_sipmamergesort_init_11/2]
26. non_recursive  : [eval_sipmamergesort_init_10/2]
27. non_recursive  : [eval_sipmamergesort_init_9/2]
28. non_recursive  : [eval_sipmamergesort_init_8/2]
29. non_recursive  : [eval_sipmamergesort_init_7/2]
30. non_recursive  : [eval_sipmamergesort_init_6/2]
31. non_recursive  : [eval_sipmamergesort_init_5/2]
32. non_recursive  : [eval_sipmamergesort_init_4/2]
33. non_recursive  : [eval_sipmamergesort_init_3/2]
34. non_recursive  : [eval_sipmamergesort_init_2/2]
35. non_recursive  : [eval_sipmamergesort_init_1/2]
36. non_recursive  : [eval_sipmamergesort_init_0/2]
37. non_recursive  : [eval_sipmamergesort_init_bb0_in/2]
38. non_recursive  : [eval_sipmamergesort_init_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_sipmamergesort_init_bb3_in/16
1. SCC is partially evaluated into eval_sipmamergesort_init_bb7_in/18
2. SCC is partially evaluated into eval_sipmamergesort_init_bb9_in/19
3. SCC is partially evaluated into eval_sipmamergesort_init_bb2_in/14
4. SCC is partially evaluated into eval_sipmamergesort_init_bb1_in/6
5. SCC is partially evaluated into eval_sipmamergesort_init_bb14_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_sipmamergesort_init_bb13_in/3
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_sipmamergesort_init_26/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_sipmamergesort_init_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_sipmamergesort_init_bb3_in/16 
* CE 24 is refined into CE [30] 
* CE 25 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 


#### Refined cost equations eval_sipmamergesort_init_bb3_in/16 
* CE 30: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) = 0
     [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,E>=0,0>=G,H=2] 
* CE 31: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) = 0
     [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,0>=F,H=2] 
* CE 32: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) = 1+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,K,V_q_1,L,C,D,E,F,G,H,I,J)
     [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_r_1=K+1,L=2,B=2] 
* CE 33: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) = 1+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,K,L,C,D,E,F,G,H,I,J)
     [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_q_1=K+1,L=2,B=2] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb3_in/16 
* CEs [32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [30] --> Loop 32 
* CEs [31] --> Loop 33 

#### Loops of eval_sipmamergesort_init_bb3_in/16 
* Loop 30: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J)->  eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1',V_q_1,B',C,D,E,F,G,H,I,J)
                  [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_r_1=V_r_1'+1,B'=2,B=2] 
* Loop 31: eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J)->  eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1',B',C,D,E,F,G,H,I,J)
                  [V_m_0>=V_6+V_r_1+V_q_1,V_6+2*V_p_0>=V_m_0,V_p_0>=V_q_1,V_p_0>=V_r_1,V_q_1>=1,V_r_1>=1,V_6>=0,V_q_1=V_q_1'+1,B'=2,B=2] 
* Loop 32: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,E>=0,0>=G,H=2] 
* Loop 33: eval_sipmamergesort_init_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,F) [D>=E+F+G,E+2*C>=D,E+F>=0,C>=G,C>=F,0>=F,H=2] 

### Ranking functions of CR eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* RF of phase [30,31]: [V_r_1+V_q_1-1]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [30,31]:
  - RF of loop [30:1]:
    V_r_1
  - RF of loop [31:1]:
    V_q_1


### Resulting Chains:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) 
* [[30,31],33]
* [[30,31],32]
* [33]
* [32]


### Specialization of cost equations eval_sipmamergesort_init_bb7_in/18 
* CE 27 is refined into CE [34] 
* CE 26 is refined into CE [35] 


#### Refined cost equations eval_sipmamergesort_init_bb7_in/18 
* CE 34: eval_sipmamergesort_init_bb7_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H,G) = 0
     [0>=H,I=3] 
* CE 35: eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) = 1+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,L,M,C,D,E,F,G,H,I,J,K)
     [V_r_3>=1,V_r_3=L+1,M=3,B=3] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb7_in/18 
* CEs [35] --> Loop 34 
* CEs [34] --> Loop 35 

#### Loops of eval_sipmamergesort_init_bb7_in/18 
* Loop 34: eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3',B',C,D,E,F,G,H,I,J,K)
                  [V_r_3>=1,V_r_3=V_r_3'+1,B'=3,B=3] 
* Loop 35: eval_sipmamergesort_init_bb7_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H,G) [0>=H,I=3] 

### Ranking functions of CR eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [34]: [V_r_3]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V_r_3


### Resulting Chains:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) 
* [[34],35]
* [35]


### Specialization of cost equations eval_sipmamergesort_init_bb9_in/19 
* CE 29 is refined into CE [36] 
* CE 28 is refined into CE [37] 


#### Refined cost equations eval_sipmamergesort_init_bb9_in/19 
* CE 36: eval_sipmamergesort_init_bb9_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I) = 0
     [0>=I,J=4] 
* CE 37: eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) = 1+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,L,M,C,D,E,F,G,H,I,J,K)
     [V_q_3>=1,V_q_3=L+1,M=4,B=4] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb9_in/19 
* CEs [37] --> Loop 36 
* CEs [36] --> Loop 37 

#### Loops of eval_sipmamergesort_init_bb9_in/19 
* Loop 36: eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3',B',C,D,E,F,G,H,I,J,K)
                  [V_q_3>=1,V_q_3=V_q_3'+1,B'=4,B=4] 
* Loop 37: eval_sipmamergesort_init_bb9_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I) [0>=I,J=4] 

### Ranking functions of CR eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [36]: [V_q_3]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    V_q_3


### Resulting Chains:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) 
* [[36],37]
* [37]


### Specialization of cost equations eval_sipmamergesort_init_bb2_in/14 
* CE 18 is discarded (unfeasible) 
* CE 19 is refined into CE [38,39,40,41] 
* CE 16 is discarded (unfeasible) 
* CE 17 is refined into CE [42,43] 
* CE 14 is refined into CE [44,45,46] 
* CE 15 is refined into CE [47,48,49,50] 
* CE 12 is refined into CE [51,52,53] 
* CE 13 is refined into CE [54,55] 


#### Refined cost equations eval_sipmamergesort_init_bb2_in/14 
* CE 38: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,O,P,Q):[[30,31],33]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,R,S,P,T,U,V_n,V_up_0,V_p_0,V_m_0,V,W,P,X,P):[35]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,Y,Z,P,A1,P,B1,V_n,V_up_0,V_p_0,V_m_0,C1,D1,P,E1,F1):[[36],37]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,G1,H1,C,D,E,F,G,H,I,J,K)
     [V_p_0>=P,V_m_0>=2*V_p_0+1,P>=1,G1+2*V_p_0=V_m_0,C1+2*V_p_0=V_m_0,Y+2*V_p_0=V_m_0,V+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,H1=5,F1=0,E1=0,D1=0,B1=4,A1=0,Z=0,X=0,W=0,U=3,T=0,S=0,Q=0,O=0,M=2,B=5] 
* CE 39: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,O,P,O):[[30,31],32]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,Q,O,R,O,S,V_n,V_up_0,V_p_0,V_m_0,T,O,U,V,W):[[34],35]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,X,O,Y,Z,A1,B1,V_n,V_up_0,V_p_0,V_m_0,C1,O,D1,E1,F1):[37]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,G1,H1,C,D,E,F,G,H,I,J,K)
     [V_p_0>=O,V_m_0>=2*V_p_0+1,O>=1,G1+2*V_p_0=V_m_0,C1+2*V_p_0=V_m_0,X+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,H1=5,F1=0,E1=0,D1=0,B1=4,A1=0,Z=0,Y=0,W=0,V=0,U=0,S=3,R=0,P=0,M=2,B=5] 
* CE 40: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,V_p_0,V_p_0,V_p_0):[33]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,O,V_p_0,V_p_0,V_p_0,P,V_n,V_up_0,V_p_0,V_m_0,Q,V_p_0,V_p_0,V_p_0,V_p_0):[35]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,R,V_p_0,V_p_0,V_p_0,V_p_0,S,V_n,V_up_0,V_p_0,V_m_0,T,V_p_0,V_p_0,V_p_0,V_p_0):[37]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,U,V,C,D,E,F,G,H,I,J,K)
     [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,U+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,O+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,V=5,S=4,P=3,M=2,B=5] 
* CE 41: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) = 4+ eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,L,V_p_0,V_p_0,M,V_n,V_up_0,V_p_0,V_m_0,N,V_p_0,V_p_0,V_p_0):[32]+ eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,O,V_p_0,V_p_0,V_p_0,P,V_n,V_up_0,V_p_0,V_m_0,Q,V_p_0,V_p_0,V_p_0,V_p_0):[35]+ eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,R,V_p_0,V_p_0,V_p_0,V_p_0,S,V_n,V_up_0,V_p_0,V_m_0,T,V_p_0,V_p_0,V_p_0,V_p_0):[37]+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,U,V,C,D,E,F,G,H,I,J,K)
     [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,U+2*V_p_0=V_m_0,T+2*V_p_0=V_m_0,R+2*V_p_0=V_m_0,Q+2*V_p_0=V_m_0,O+2*V_p_0=V_m_0,N+2*V_p_0=V_m_0,L+2*V_p_0=V_m_0,V=5,S=4,P=3,M=2,B=5] 
* CE 42: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M) = 4+ eval_sipmamergesort_init_bb3_in(A,B,C,A,N,C,A,O,A,B,C,A,P,C,A,C):[33]+ eval_sipmamergesort_init_bb7_in(A,B,C,A,Q,C,A,C,R,A,B,C,A,S,C,A,C,A):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,A,T,C,A,C,A,U,A,B,C,A,V,C,A,C,A):[37]+ eval_sipmamergesort_init_bb2_in(A,B,C,W,X,E,F,G,H,I,J,K,L,M)
     [C>=A+1,0>=C+1,C+W=0,C+V=0,C+T=0,C+S=0,C+Q=0,C+P=0,C+N=0,X=5,U=4,R=3,O=2,D=5] 
* CE 43: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M) = 4+ eval_sipmamergesort_init_bb3_in(A,B,C,A,N,C,A,O,A,B,C,A,P,C,A,C):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,A,Q,C,A,C,R,A,B,C,A,S,C,A,C,A):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,A,T,C,A,C,A,U,A,B,C,A,V,C,A,C,A):[37]+ eval_sipmamergesort_init_bb2_in(A,B,C,W,X,E,F,G,H,I,J,K,L,M)
     [C>=A+1,0>=C+1,C+W=0,C+V=0,C+T=0,C+S=0,C+Q=0,C+P=0,C+N=0,X=5,U=4,R=3,O=2,D=5] 
* CE 44: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,K,L,C,M,A,B,C,D,N,O,H,P):[[30,31],33]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,Q,R,H,S,T,A,B,C,D,U,V,H,W,H):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,X,Y,H,Z,H,A1,A,B,C,D,B1,C1,H,D1,E1):[[36],37]
     [C>=H,2*C>=D+1,D>=C+1,H>=1,C+L=D,E1=0,D1=0,C1=0,B1=0,A1=4,Z=0,Y=0,X=0,W=0,V=0,U=0,T=3,S=0,R=0,Q=0,P=0,O=0,N=0,M=2,K=0,J=0,I=0,G=0,F=0,E=5] 
* CE 45: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,K,L,C,M,A,B,C,D,N,G,O,G):[[30,31],32]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,P,G,Q,G,R,A,B,C,D,S,G,T,U,V):[[34],35]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,W,G,X,Y,Z,A1,A,B,C,D,B1,G,C1,D1,E1):[37]
     [D>=C+G,2*C>=D+1,G>=1,C+L=D,E1=0,D1=0,C1=0,B1=0,A1=4,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=2,K=0,J=0,I=0,H=0,F=0,E=5] 
* CE 46: eval_sipmamergesort_init_bb2_in(A,B,C,C,D,A,B,C,C,E,F,C,G,H) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,C,I,J,C,K,A,B,C,C,L,M,C,N):[33]+ eval_sipmamergesort_init_bb7_in(A,B,C,C,O,P,C,Q,R,A,B,C,C,S,T,C,U,C):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,C,V,W,C,X,C,Y,A,B,C,C,Z,A1,C,B1,C1):[[36],37]
     [C>=1,C1=0,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=0,D=5] 
* CE 47: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,L,M,C,C,N,A,B,C,O,P,Q,I,R):[[30,31],33]+ eval_sipmamergesort_init_bb7_in(A,B,C,S,T,U,I,V,W,A,B,C,X,Y,Z,I,A1,I):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,B1,C1,D1,I,E1,I,F1,A,B,C,G1,H1,I1,I,J1,K1):[[36],37]
     [C>=I,I>=1,2*C=G1,2*C=B1,2*C=X,2*C=S,2*C=O,2*C=L,2*C=F,2*C=D,K1=0,J1=0,I1=0,H1=0,F1=4,E1=0,D1=0,C1=0,A1=0,Z=0,Y=0,W=3,V=0,U=0,T=0,R=0,Q=0,P=0,N=2,M=0,K=0,J=0,H=0,G=0,E=5] 
* CE 48: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,L,M,C,C,N,A,B,C,O,P,H,Q,H):[[30,31],32]+ eval_sipmamergesort_init_bb7_in(A,B,C,R,S,H,T,H,U,A,B,C,V,W,H,X,Y,Z):[[34],35]+ eval_sipmamergesort_init_bb9_in(A,B,C,A1,B1,H,C1,D1,E1,F1,A,B,C,G1,H1,H,I1,J1,K1):[37]
     [C>=H,H>=1,2*C=G1,2*C=A1,2*C=V,2*C=R,2*C=O,2*C=L,2*C=F,2*C=D,K1=0,J1=0,I1=0,H1=0,F1=4,E1=0,D1=0,C1=0,B1=0,Z=0,Y=0,X=0,W=0,U=3,T=0,S=0,Q=0,P=0,N=2,M=0,K=0,J=0,I=0,G=0,E=5] 
* CE 49: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) = 3+ eval_sipmamergesort_init_bb3_in(A,B,M,N,O,P,Q,R,A,B,S,T,U,V,W,X):[33]+ eval_sipmamergesort_init_bb7_in(A,B,Y,Z,A1,B1,C1,D1,E1,A,B,F1,G1,H1,I1,J1,K1,L1):[35]+ eval_sipmamergesort_init_bb9_in(A,B,M1,N1,O1,P1,Q1,R1,S1,T1,A,B,U1,V1,W1,X1,Y1,Z1,A2):[37]
     [A2=0,Z1=0,Y1=0,X1=0,W1=0,V1=0,U1=0,T1=4,S1=0,R1=0,Q1=0,P1=0,O1=0,N1=0,M1=0,L1=0,K1=0,J1=0,I1=0,H1=0,G1=0,F1=0,E1=3,D1=0,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=2,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* CE 50: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) = 3+ eval_sipmamergesort_init_bb3_in(A,B,M,N,O,P,Q,R,A,B,S,T,U,V,W,X):[32]+ eval_sipmamergesort_init_bb7_in(A,B,Y,Z,A1,B1,C1,D1,E1,A,B,F1,G1,H1,I1,J1,K1,L1):[35]+ eval_sipmamergesort_init_bb9_in(A,B,M1,N1,O1,P1,Q1,R1,S1,T1,A,B,U1,V1,W1,X1,Y1,Z1,A2):[37]
     [A2=0,Z1=0,Y1=0,X1=0,W1=0,V1=0,U1=0,T1=4,S1=0,R1=0,Q1=0,P1=0,O1=0,N1=0,M1=0,L1=0,K1=0,J1=0,I1=0,H1=0,G1=0,F1=0,E1=3,D1=0,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=0,T=0,S=0,R=2,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* CE 51: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,I) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,J,K,D,L,A,B,C,D,M,N,D,O):[33]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,P,Q,D,R,S,A,B,C,D,T,U,D,V,D):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,W,X,D,Y,D,Z,A,B,C,D,A1,B1,D,C1,D1):[[36],37]
     [C>=D+1,D>=1,D1=0,C1=0,B1=0,A1=0,Z=4,Y=0,X=0,W=0,V=0,U=0,T=0,S=3,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 52: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,I,J,D,K,A,B,C,D,L,M,D,N):[33]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,O,P,D,Q,R,A,B,C,D,S,T,D,U,D):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,V,W,D,X,D,Y,A,B,C,D,Z,A1,D,B1,D):[37]
     [C>=1,0>=D,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 53: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) = 3+ eval_sipmamergesort_init_bb3_in(A,B,C,D,I,J,D,K,A,B,C,D,L,M,D,N):[32]+ eval_sipmamergesort_init_bb7_in(A,B,C,D,O,P,D,Q,R,A,B,C,D,S,T,D,U,D):[35]+ eval_sipmamergesort_init_bb9_in(A,B,C,D,V,W,D,X,D,Y,A,B,C,D,Z,A1,D,B1,D):[37]
     [C>=1,0>=D,B1=0,A1=0,Z=0,Y=4,X=0,W=0,V=0,U=0,T=0,S=0,R=3,Q=0,P=0,O=0,N=0,M=0,L=0,K=2,J=0,I=0,H=0,G=0,F=0,E=5] 
* CE 54: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) = 3+ eval_sipmamergesort_init_bb3_in(A,B,I,A,J,K,A,L,A,B,M,A,N,O,A,P):[33]+ eval_sipmamergesort_init_bb7_in(A,B,Q,A,R,S,A,T,U,A,B,V,A,W,X,A,Y,A):[35]+ eval_sipmamergesort_init_bb9_in(A,B,Z,A,A1,B1,A,C1,A,D1,A,B,E1,A,F1,G1,A,H1,A):[37]
     [0>=A+1,H1=0,G1=0,F1=0,E1=0,D1=4,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=3,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=5,C=0] 
* CE 55: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) = 3+ eval_sipmamergesort_init_bb3_in(A,B,I,A,J,K,A,L,A,B,M,A,N,O,A,P):[32]+ eval_sipmamergesort_init_bb7_in(A,B,Q,A,R,S,A,T,U,A,B,V,A,W,X,A,Y,A):[35]+ eval_sipmamergesort_init_bb9_in(A,B,Z,A,A1,B1,A,C1,A,D1,A,B,E1,A,F1,G1,A,H1,A):[37]
     [0>=A+1,H1=0,G1=0,F1=0,E1=0,D1=4,C1=0,B1=0,A1=0,Z=0,Y=0,X=0,W=0,V=0,U=3,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=0,L=2,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=5,C=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb2_in/14 
* CEs [45] --> Loop 38 
* CEs [48] --> Loop 39 
* CEs [53] --> Loop 40 
* CEs [52] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [51] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [46] --> Loop 45 
* CEs [55] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [50] --> Loop 48 
* CEs [49] --> Loop 49 
* CEs [39] --> Loop 50 
* CEs [38] --> Loop 51 
* CEs [41] --> Loop 52 
* CEs [40] --> Loop 53 
* CEs [43] --> Loop 54 
* CEs [42] --> Loop 55 

#### Loops of eval_sipmamergesort_init_bb2_in/14 
* Loop 38: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) [D>=C+G,2*C>=D+1,G>=1,J=0,I=0,H=0,F=0,E=5] 
* Loop 39: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) [C>=H,H>=1,2*C=F,2*C=D,K=0,J=0,I=0,G=0,E=5] 
* Loop 40: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) [C>=1,0>=D,H=0,G=0,F=0,E=5] 
* Loop 41: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,D) [C>=1,0>=D,H=0,G=0,F=0,E=5] 
* Loop 42: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,H,I,J) [C>=H,2*C>=D+1,D>=C+1,H>=1,J=0,I=0,G=0,F=0,E=5] 
* Loop 43: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,D,F,G,D,H,I) [C>=D+1,D>=1,I=0,H=0,G=0,F=0,E=5] 
* Loop 44: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,C,F,G,H,I,J,K) [C>=I,I>=1,2*C=F,2*C=D,K=0,J=0,H=0,G=0,E=5] 
* Loop 45: eval_sipmamergesort_init_bb2_in(A,B,C,C,D,A,B,C,C,E,F,C,G,H) [C>=1,H=0,G=0,F=0,E=0,D=5] 
* Loop 46: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) [0>=A+1,H=0,G=0,F=0,E=0,D=5,C=0] 
* Loop 47: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,A,B,E,A,F,G,A,H,A) [0>=A+1,H=0,G=0,F=0,E=0,D=5,C=0] 
* Loop 48: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) [L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* Loop 49: eval_sipmamergesort_init_bb2_in(A,B,C,D,E,A,B,F,G,H,I,J,K,L) [L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=5,D=0,C=0] 
* Loop 50: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=2*V_p_0+1,V_p_0>=1,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 51: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=2*V_p_0+1,V_p_0>=1,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 52: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 53: eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K)->  eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0',B',C,D,E,F,G,H,I,J,K)
                  [V_m_0>=V_p_0,V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0'+2*V_p_0=V_m_0,B'=5,B=5] 
* Loop 54: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M)->  eval_sipmamergesort_init_bb2_in(A,B,C,A',B',E,F,G,H,I,J,K,L,M)
                  [C>=A+1,0>=C+1,C+A'=0,B'=5,D=5] 
* Loop 55: eval_sipmamergesort_init_bb2_in(A,B,C,A,D,E,F,G,H,I,J,K,L,M)->  eval_sipmamergesort_init_bb2_in(A,B,C,A',B',E,F,G,H,I,J,K,L,M)
                  [C>=A+1,0>=C+1,C+A'=0,B'=5,D=5] 

### Ranking functions of CR eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [50,51]: [V_m_0/2-1,-V_p_0+V_m_0/2]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [50,51]:
  - RF of loop [50:1,51:1]:
    V_m_0/2-1
    -V_p_0+V_m_0/2


### Resulting Chains:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) 
* [[52,53]]...
* [[50,51],45]
* [[50,51],44]
* [[50,51],43]
* [[50,51],42]
* [[50,51],39]
* [[50,51],38]
* [55,[52,53]]...
* [54,[52,53]]...
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]


### Specialization of cost equations eval_sipmamergesort_init_bb1_in/6 
* CE 7 is refined into CE [56,57,58,59,60,61,62,63,64] 
* CE 8 is refined into CE [65,66,67,68,69,70,71,72,73] 
* CE 6 is refined into CE [74,75,76,77,78,79,80,81,82] 
* CE 4 is refined into CE [83,84,85,86,87,88,89,90,91,92,93,94,95,96,97] 
* CE 5 is refined into CE [98,99,100,101,102,103,104,105,106,107,108,109,110,111,112] 
* CE 3 is refined into CE [113,114,115,116,117,118,119,120,121,122,123,124,125,126,127] 


#### Refined cost equations eval_sipmamergesort_init_bb1_in/6 
* CE 56: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[[52,53]]
     [F>=O+1,V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 57: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,V_p_0,F,G,V_p_0,H,I):[[50,51],45]+ eval_sipmamergesort_init_bb1_in(V_n,J,K,L,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,V_up_0>=1,V_up_0+J=1,2*V_p_0=K,L=6,I=0,H=0,G=0,F=0,E=5,B=6] 
* CE 58: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],44]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=I,V_n>=4*V_p_0,I>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 59: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,F,I,J):[[50,51],43]+ eval_sipmamergesort_init_bb1_in(V_n,K,L,M,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=F+1,F>=1,V_up_0>=1,V_up_0+K=1,2*V_p_0=L,M=6,J=0,I=0,H=0,G=0,E=5,B=6] 
* CE 60: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],42]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=I,2*V_p_0>=F+1,F>=V_p_0+1,I>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 61: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],39]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=H,V_n>=4*V_p_0,H>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 62: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],38]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [F>=V_p_0+H,V_n>=2*V_p_0+F,2*V_p_0>=F+1,H>=1,V_up_0>=1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 63: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[55,[52,53]]
     [F>=O+1,V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 64: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[54,[52,53]]
     [F>=O+1,V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 65: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[[52,53]]
     [F>=O+1,V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 66: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,V_p_0,F,G,V_p_0,H,I):[[50,51],45]+ eval_sipmamergesort_init_bb1_in(V_n,J,K,L,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,0>=V_up_0+1,V_up_0+J=1,2*V_p_0=K,L=6,I=0,H=0,G=0,F=0,E=5,B=6] 
* CE 67: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],44]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=I,V_n>=4*V_p_0,I>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 68: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,F,I,J):[[50,51],43]+ eval_sipmamergesort_init_bb1_in(V_n,K,L,M,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=F+1,F>=1,0>=V_up_0+1,V_up_0+K=1,2*V_p_0=L,M=6,J=0,I=0,H=0,G=0,E=5,B=6] 
* CE 69: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],42]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=2*V_p_0+F,V_p_0>=I,2*V_p_0>=F+1,F>=V_p_0+1,I>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,H=0,G=0,E=5,B=6] 
* CE 70: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],39]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_p_0>=H,V_n>=4*V_p_0,H>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,2*V_p_0=F,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 71: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,V_n,V_up_0,V_p_0,F,G,H,I,J,K):[[50,51],38]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [F>=V_p_0+H,V_n>=2*V_p_0+F,2*V_p_0>=F+1,H>=1,0>=V_up_0+1,V_up_0+L=1,2*V_p_0=M,N=6,K=0,J=0,I=0,G=0,E=5,B=6] 
* CE 72: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[55,[52,53]]
     [F>=O+1,V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 73: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,F,G,H,I,J,K,L,M,N):[54,[52,53]]
     [F>=O+1,V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,G+P=1,O=2*H,Q=6,E=5,B=6] 
* CE 74: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[[52,53]]
     [G>=P+1,V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 75: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,V_p_0,H,I,V_p_0,J,K):[[50,51],45]+ eval_sipmamergesort_init_bb1_in(V_n,L,M,N,C,D)
     [V_n>=3*V_p_0,V_p_0>=1,2*V_p_0=M,N=6,L=1,K=0,J=0,I=0,H=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 76: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[50,51],44]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_p_0>=K,V_n>=4*V_p_0,K>=1,2*V_p_0=O,2*V_p_0=H,P=6,N=1,M=0,L=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 77: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,H,K,L):[[50,51],43]+ eval_sipmamergesort_init_bb1_in(V_n,M,N,O,C,D)
     [V_n>=2*V_p_0+H,V_p_0>=H+1,H>=1,2*V_p_0=N,O=6,M=1,L=0,K=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 78: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[50,51],42]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_n>=2*V_p_0+H,V_p_0>=K,2*V_p_0>=H+1,H>=V_p_0+1,K>=1,2*V_p_0=O,P=6,N=1,M=0,L=0,J=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 79: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[50,51],39]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [V_p_0>=J,V_n>=4*V_p_0,J>=1,2*V_p_0=O,2*V_p_0=H,P=6,N=1,M=0,L=0,K=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 80: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,V_n,G,V_p_0,H,I,J,K,L,M):[[50,51],38]+ eval_sipmamergesort_init_bb1_in(V_n,N,O,P,C,D)
     [H>=V_p_0+J,V_n>=2*V_p_0+H,2*V_p_0>=H+1,J>=1,2*V_p_0=O,P=6,N=1,M=0,L=0,K=0,I=0,G=0,F=5,E=0,B=6,V_up_0=0] 
* CE 81: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[55,[52,53]]
     [G>=P+1,V_p_0>=V_n+1,0>=V_p_0+1,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 82: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 2+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,G,H,I,J,K,L,M,N,O):[54,[52,53]]
     [G>=P+1,V_p_0>=V_n+1,0>=V_p_0+1,H+Q=1,P=2*I,R=6,F=5,E=0,B=6,V_up_0=0] 
* CE 83: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[[52,53]]
     [V_n>=V_p_0,2*G>=C,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,D+F=1,E=5,B=6] 
* CE 84: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[55,[52,53]]
     [V_p_0>=V_n+1,2*G>=C,V_up_0>=1,0>=V_p_0+1,D+F=1,E=5,B=6] 
* CE 85: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[54,[52,53]]
     [V_p_0>=V_n+1,2*G>=C,V_up_0>=1,0>=V_p_0+1,D+F=1,E=5,B=6] 
* CE 86: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[49]
     [V_up_0>=1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 87: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[48]
     [V_up_0>=1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 88: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[47]
     [B>=1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 89: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[46]
     [B>=1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 90: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,B,A,A,E,A,B,A,A,F,G,A,H,I):[45]
     [A>=1,B>=1,B+D=1,I=0,H=0,G=0,F=0,E=5,C=6] 
* CE 91: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[44]
     [V_p_0>=L,L>=1,V_up_0>=1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,K=0,J=0,G=5,B=6] 
* CE 92: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,J):[43]
     [C>=A+1,A>=1,B>=1,B+E=1,J=0,I=0,H=0,G=0,F=5,D=6] 
* CE 93: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[42]
     [C>=I,A>=C+1,2*C>=A+1,I>=1,B>=1,B+E=1,K=0,J=0,H=0,G=0,F=5,D=6] 
* CE 94: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[41]
     [C>=1,B>=1,0>=A,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 95: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[40]
     [C>=1,B>=1,0>=A,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 96: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[39]
     [V_p_0>=K,K>=1,V_up_0>=1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,L=0,J=0,G=5,B=6] 
* CE 97: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[38]
     [A>=C+H,2*C>=A+1,H>=1,B>=1,B+E=1,K=0,J=0,I=0,G=0,F=5,D=6] 
* CE 98: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[[52,53]]
     [V_n>=V_p_0,2*G>=C,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 99: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[55,[52,53]]
     [V_p_0>=V_n+1,2*G>=C,0>=V_p_0+1,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 100: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_n,E,C,F,G,H,I,J,K,L,M):[54,[52,53]]
     [V_p_0>=V_n+1,2*G>=C,0>=V_p_0+1,0>=V_up_0+1,D+F=1,E=5,B=6] 
* CE 101: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[49]
     [0>=V_up_0+1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 102: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,F,G,H,I,V_up_0,J,K,L,M,N,O,P):[48]
     [0>=V_up_0+1,V_up_0+D=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=0,C=0,B=6,V_p_0=0,V_n=0] 
* CE 103: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[47]
     [0>=B+1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 104: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,F,A,G,A,B,H,A,I,J,A,K,A):[46]
     [0>=B+1,0>=A+1,B+E=1,K=0,J=0,I=0,H=0,G=5,F=0,D=6,C=0] 
* CE 105: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,B,A,A,E,A,B,A,A,F,G,A,H,I):[45]
     [A>=1,0>=B+1,B+D=1,I=0,H=0,G=0,F=0,E=5,C=6] 
* CE 106: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[44]
     [V_p_0>=L,L>=1,0>=V_up_0+1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,K=0,J=0,G=5,B=6] 
* CE 107: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,J):[43]
     [C>=A+1,A>=1,0>=B+1,B+E=1,J=0,I=0,H=0,G=0,F=5,D=6] 
* CE 108: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[42]
     [C>=I,A>=C+1,2*C>=A+1,I>=1,0>=B+1,B+E=1,K=0,J=0,H=0,G=0,F=5,D=6] 
* CE 109: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[41]
     [C>=1,0>=A,0>=B+1,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 110: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,A,I,A):[40]
     [C>=1,0>=A,0>=B+1,B+E=1,I=0,H=0,G=0,F=5,D=6] 
* CE 111: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,V_up_0,V_p_0,F,G,H,V_up_0,V_p_0,I,J,K,L,M,N):[39]
     [V_p_0>=K,K>=1,0>=V_up_0+1,V_up_0+D=1,2*V_p_0=I,2*V_p_0=H,2*V_p_0=F,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,N=0,M=0,L=0,J=0,G=5,B=6] 
* CE 112: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,B,C,A,F,A,B,C,A,G,H,I,J,K):[38]
     [A>=C+H,2*C>=A+1,H>=1,0>=B+1,B+E=1,K=0,J=0,I=0,G=0,F=5,D=6] 
* CE 113: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[[52,53]]
     [V_n>=V_p_0,2*H>=C,V_n>=2*V_p_0+1,0>=V_p_0,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 114: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[55,[52,53]]
     [V_p_0>=V_n+1,2*H>=C,0>=V_p_0+1,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 115: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(V_n,E,V_p_0,V_n,F,C,G,H,I,J,K,L,M,N):[54,[52,53]]
     [V_p_0>=V_n+1,2*H>=C,0>=V_p_0+1,D+G=1,F=5,E=0,B=6,V_up_0=0] 
* CE 116: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,G,H,I,J,K,L,M,N,O,P,Q,R):[49]
     [R=0,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=5,H=0,G=0,F=0,E=0,D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* CE 117: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,G,H,I,J,K,L,M,N,O,P,Q,R):[48]
     [R=0,Q=0,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=5,H=0,G=0,F=0,E=0,D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* CE 118: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,G,A,H,A,I,J,A,K,L,A,M,A):[47]
     [0>=A+1,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=1,D=6,C=0,B=0] 
* CE 119: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,G,A,H,A,I,J,A,K,L,A,M,A):[46]
     [0>=A+1,M=0,L=0,K=0,J=0,I=0,H=5,G=0,F=0,E=1,D=6,C=0,B=0] 
* CE 120: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) = 1+ eval_sipmamergesort_init_bb2_in(A,E,A,A,F,A,G,A,A,H,I,A,J,K):[45]
     [A>=1,K=0,J=0,I=0,H=0,G=0,F=5,E=0,D=1,C=6,B=0] 
* CE 121: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,V_p_0,G,H,I,J,V_p_0,K,L,M,N,O,P):[44]
     [V_p_0>=N,N>=1,2*V_p_0=K,2*V_p_0=I,2*V_p_0=G,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,P=0,O=0,M=0,L=0,J=0,H=5,F=0,D=1,B=6,V_up_0=0] 
* CE 122: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,L):[43]
     [C>=A+1,A>=1,L=0,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 123: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,K,L,M):[42]
     [C>=K,A>=C+1,2*C>=A+1,K>=1,M=0,L=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 124: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,A):[41]
     [C>=1,0>=A,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 125: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,A,K,A):[40]
     [C>=1,0>=A,K=0,J=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 
* CE 126: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) = 1+ eval_sipmamergesort_init_bb2_in(E,F,V_p_0,G,H,I,J,V_p_0,K,L,M,N,O,P):[39]
     [V_p_0>=M,M>=1,2*V_p_0=K,2*V_p_0=I,2*V_p_0=G,2*V_p_0=E,2*V_p_0=C,2*V_p_0=V_n,P=0,O=0,N=0,L=0,J=0,H=5,F=0,D=1,B=6,V_up_0=0] 
* CE 127: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) = 1+ eval_sipmamergesort_init_bb2_in(A,F,C,A,G,A,H,C,A,I,J,K,L,M):[38]
     [A>=C+J,2*C>=A+1,J>=1,M=0,L=0,K=0,I=0,H=0,G=5,F=0,E=1,D=6,B=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb1_in/6 
* CEs [97] --> Loop 56 
* CEs [93] --> Loop 57 
* CEs [92] --> Loop 58 
* CEs [112] --> Loop 59 
* CEs [108] --> Loop 60 
* CEs [107] --> Loop 61 
* CEs [95] --> Loop 62 
* CEs [94] --> Loop 63 
* CEs [110] --> Loop 64 
* CEs [109] --> Loop 65 
* CEs [90] --> Loop 66 
* CEs [105] --> Loop 67 
* CEs [96] --> Loop 68 
* CEs [91] --> Loop 69 
* CEs [111] --> Loop 70 
* CEs [106] --> Loop 71 
* CEs [89] --> Loop 72 
* CEs [88] --> Loop 73 
* CEs [104] --> Loop 74 
* CEs [103] --> Loop 75 
* CEs [127] --> Loop 76 
* CEs [123] --> Loop 77 
* CEs [122] --> Loop 78 
* CEs [125] --> Loop 79 
* CEs [124] --> Loop 80 
* CEs [120] --> Loop 81 
* CEs [126] --> Loop 82 
* CEs [121] --> Loop 83 
* CEs [119] --> Loop 84 
* CEs [118] --> Loop 85 
* CEs [87] --> Loop 86 
* CEs [86] --> Loop 87 
* CEs [102] --> Loop 88 
* CEs [101] --> Loop 89 
* CEs [117] --> Loop 90 
* CEs [116] --> Loop 91 
* CEs [85] --> Loop 92 
* CEs [84] --> Loop 93 
* CEs [64] --> Loop 94 
* CEs [63] --> Loop 95 
* CEs [83] --> Loop 96 
* CEs [56] --> Loop 97 
* CEs [100] --> Loop 98 
* CEs [99] --> Loop 99 
* CEs [73] --> Loop 100 
* CEs [72] --> Loop 101 
* CEs [98] --> Loop 102 
* CEs [65] --> Loop 103 
* CEs [115] --> Loop 104 
* CEs [114] --> Loop 105 
* CEs [82] --> Loop 106 
* CEs [81] --> Loop 107 
* CEs [113] --> Loop 108 
* CEs [74] --> Loop 109 
* CEs [57] --> Loop 110 
* CEs [66] --> Loop 111 
* CEs [59] --> Loop 112 
* CEs [62] --> Loop 113 
* CEs [60] --> Loop 114 
* CEs [61] --> Loop 115 
* CEs [58] --> Loop 116 
* CEs [68] --> Loop 117 
* CEs [71] --> Loop 118 
* CEs [69] --> Loop 119 
* CEs [70] --> Loop 120 
* CEs [67] --> Loop 121 
* CEs [75] --> Loop 122 
* CEs [77] --> Loop 123 
* CEs [80] --> Loop 124 
* CEs [78] --> Loop 125 
* CEs [79] --> Loop 126 
* CEs [76] --> Loop 127 

#### Loops of eval_sipmamergesort_init_bb1_in/6 
* Loop 56: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,B>=1,B+E=1,D=6] 
* Loop 57: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,B>=1,B+E=1,D=6] 
* Loop 58: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,B>=1,A>=1,B+E=1,D=6] 
* Loop 59: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,0>=B+1,B+E=1,D=6] 
* Loop 60: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,0>=B+1,B+E=1,D=6] 
* Loop 61: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,A>=1,0>=B+1,B+E=1,D=6] 
* Loop 62: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,B>=1,0>=A,B+E=1,D=6] 
* Loop 63: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,B>=1,0>=A,B+E=1,D=6] 
* Loop 64: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=B+1,0>=A,B+E=1,D=6] 
* Loop 65: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=B+1,0>=A,B+E=1,D=6] 
* Loop 66: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [B>=1,A>=1,B+D=1,C=6] 
* Loop 67: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [A>=1,0>=B+1,B+D=1,C=6] 
* Loop 68: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,A>=2,B+E=1,A=2*C,D=6] 
* Loop 69: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,A>=2,B+E=1,A=2*C,D=6] 
* Loop 70: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,0>=B+1,B+E=1,A=2*C,D=6] 
* Loop 71: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,0>=B+1,B+E=1,A=2*C,D=6] 
* Loop 72: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 73: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [B>=1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 74: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=B+1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 75: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=B+1,0>=A+1,B+E=1,D=6,C=0] 
* Loop 76: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,E=1,D=6,B=0] 
* Loop 77: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=C+1,2*C>=A+1,E=1,D=6,B=0] 
* Loop 78: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=A+1,A>=1,E=1,D=6,B=0] 
* Loop 79: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=A,E=1,D=6,B=0] 
* Loop 80: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [C>=1,0>=A,E=1,D=6,B=0] 
* Loop 81: eval_sipmamergesort_init_bb1_in(A,B,A,C,A,D) [A>=1,D=1,C=6,B=0] 
* Loop 82: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,A=2*C,E=1,D=6,B=0] 
* Loop 83: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [A>=2,A=2*C,E=1,D=6,B=0] 
* Loop 84: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=A+1,E=1,D=6,C=0,B=0] 
* Loop 85: eval_sipmamergesort_init_bb1_in(A,B,C,D,A,E) [0>=A+1,E=1,D=6,C=0,B=0] 
* Loop 86: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_up_0>=1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 87: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_up_0>=1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 88: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [0>=V_up_0+1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 89: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [0>=V_up_0+1,V_up_0+D=1,C=0,B=6,V_p_0=0,V_n=0] 
* Loop 90: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* Loop 91: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [D=1,C=0,B=6,V_p_0=0,V_up_0=0,V_n=0] 
* Loop 92: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 93: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 94: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 95: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,V_up_0>=1,0>=V_p_0+1,B=6] 
* Loop 96: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,B=6] 
* Loop 97: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,V_up_0>=1,0>=V_p_0,B=6] 
* Loop 98: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 99: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 100: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 101: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,0>=V_up_0+1,B=6] 
* Loop 102: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,B=6] 
* Loop 103: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,0>=V_up_0+1,B=6] 
* Loop 104: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 105: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 106: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 107: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_p_0>=V_n+1,0>=V_p_0+1,B=6,V_up_0=0] 
* Loop 108: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,B=6,V_up_0=0] 
* Loop 109: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) [V_n>=V_p_0,V_n>=2*V_p_0+1,0>=V_p_0,B=6,V_up_0=0] 
* Loop 110: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,V_up_0>=1,V_up_0+V_up_0'=1,2*V_p_0=V_p_0',B'=6,B=6] 
* Loop 111: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,0>=V_up_0+1,V_up_0+V_up_0'=1,2*V_p_0=V_p_0',B'=6,B=6] 
* Loop 112: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 113: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 114: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 115: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 116: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_up_0>=1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 117: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 118: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 119: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 120: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 121: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,0>=V_up_0+1,V_up_0+V_up_0'=1,V_p_0'=2*V_p_0,B'=6,B=6] 
* Loop 122: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=3*V_p_0,V_p_0>=1,2*V_p_0=V_p_0',B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 123: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=V_p_0'+1,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 124: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 125: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [2*V_n>=3*V_p_0'+2,V_p_0'>=4,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 126: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 
* Loop 127: eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D)->  eval_sipmamergesort_init_bb1_in(V_n,V_up_0',V_p_0',B',C,D)
                  [V_n>=2*V_p_0',V_p_0'>=2,V_p_0'=2*V_p_0,B'=6,V_up_0'=1,B=6,V_up_0=0] 

### Ranking functions of CR eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 
* RF of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]: [V_n/2-V_p_0,V_n/2+V_up_0/3-2/3*V_p_0-1,V_n/3+V_up_0/3-2/3*V_p_0]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 


### Resulting Chains:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) 
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],83]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],82]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],77]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],76]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],69]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],68]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],57]
* [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],56]
* [69]
* [68]
* [66]
* [63]
* [62]


### Specialization of cost equations eval_sipmamergesort_init_bb14_in/3 
* CE 21 is refined into CE [128] 
* CE 20 is refined into CE [129] 


#### Refined cost equations eval_sipmamergesort_init_bb14_in/3 
* CE 128: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) = 0
     [V_i_5>=V_n+1,V_i_5>=1,B=7] 
* CE 129: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D)
     [V_n>=V_i_5,V_i_5>=1,V_i_5+1=C,D=7,B=7] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb14_in/3 
* CEs [129] --> Loop 128 
* CEs [128] --> Loop 129 

#### Loops of eval_sipmamergesort_init_bb14_in/3 
* Loop 128: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B)->  eval_sipmamergesort_init_bb14_in(V_n,V_i_5',B')
                  [V_n>=V_i_5,V_i_5>=1,V_i_5+1=V_i_5',B'=7,B=7] 
* Loop 129: eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) [V_i_5>=V_n+1,V_i_5>=1,B=7] 

### Ranking functions of CR eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* RF of phase [128]: [V_n-V_i_5+1]

#### Partial ranking functions of CR eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* Partial RF of phase [128]:
  - RF of loop [128:1]:
    V_n-V_i_5+1


### Resulting Chains:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) 
* [[128],129]
* [129]


### Specialization of cost equations eval_sipmamergesort_init_bb13_in/3 
* CE 11 is refined into CE [130] 
* CE 10 is refined into CE [131] 
* CE 9 is refined into CE [132,133] 


#### Refined cost equations eval_sipmamergesort_init_bb13_in/3 
* CE 130: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 0
     [V_52>=1] 
* CE 131: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 0
     [0>=V_52+1] 
* CE 132: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D):[[128],129]
     [V_n>=1,D=7,C=1,V_52=0] 
* CE 133: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) = 1+ eval_sipmamergesort_init_bb14_in(V_n,C,D):[129]
     [0>=V_n,D=7,C=1,V_52=0] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_bb13_in/3 
* CEs [130] --> Loop 130 
* CEs [131] --> Loop 131 
* CEs [132] --> Loop 132 
* CEs [133] --> Loop 133 

#### Loops of eval_sipmamergesort_init_bb13_in/3 
* Loop 130: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [V_52>=1] 
* Loop 131: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [0>=V_52+1] 
* Loop 132: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [V_n>=1,V_52=0] 
* Loop 133: eval_sipmamergesort_init_bb13_in(V_n,V_52,B) [0>=V_n,V_52=0] 

### Ranking functions of CR eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 

#### Partial ranking functions of CR eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 


### Resulting Chains:eval_sipmamergesort_init_bb13_in(V_n,V_52,B) 
* [133]
* [132]
* [131]
* [130]


### Specialization of cost equations eval_sipmamergesort_init_26/2 
* CE 2 is refined into CE [134,135,136,137,138,139,140,141,142,143,144,145,146] 


#### Refined cost equations eval_sipmamergesort_init_26/2 
* CE 134: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],83]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[130]
     [V_n>=4,G=1,F=1,E=6,D=1,C=1] 
* CE 135: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],82]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[130]
     [V_n>=4,G=1,F=1,E=6,D=1,C=1] 
* CE 136: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],77]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[130]
     [V_n>=3,G=1,F=1,E=6,D=1,C=1] 
* CE 137: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],76]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[130]
     [V_n>=3,G=1,F=1,E=6,D=1,C=1] 
* CE 138: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],69]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [V_n>=8,G=0,F=0,E=6,D=1,C=1] 
* CE 139: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],68]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [V_n>=8,G=0,F=0,E=6,D=1,C=1] 
* CE 140: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],57]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [V_n>=5,G=0,F=0,E=6,D=1,C=1] 
* CE 141: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],56]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[132]
     [V_n>=5,G=0,F=0,E=6,D=1,C=1] 
* CE 142: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[69]+ eval_sipmamergesort_init_bb13_in(I,J,B):[132]
     [J=0,I=2,H=0,G=2,F=6,E=1,D=1,C=2,V_n=2] 
* CE 143: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[68]+ eval_sipmamergesort_init_bb13_in(I,J,B):[132]
     [J=0,I=2,H=0,G=2,F=6,E=1,D=1,C=2,V_n=2] 
* CE 144: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(C,D,E,F,G,H):[66]+ eval_sipmamergesort_init_bb13_in(I,J,B):[132]
     [J=0,I=1,H=0,G=1,F=6,E=1,D=1,C=1,V_n=1] 
* CE 145: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[63]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[133]
     [0>=V_n,G=0,F=0,E=6,D=1,C=1] 
* CE 146: eval_sipmamergesort_init_26(V_n,B) = 1+ eval_sipmamergesort_init_bb1_in(V_n,C,D,E,V_n,F):[62]+ eval_sipmamergesort_init_bb13_in(V_n,G,B):[133]
     [0>=V_n,G=0,F=0,E=6,D=1,C=1] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_26/2 
* CEs [139] --> Loop 134 
* CEs [138] --> Loop 135 
* CEs [141] --> Loop 136 
* CEs [140] --> Loop 137 
* CEs [135] --> Loop 138 
* CEs [134] --> Loop 139 
* CEs [137] --> Loop 140 
* CEs [136] --> Loop 141 
* CEs [146] --> Loop 142 
* CEs [145] --> Loop 143 
* CEs [143] --> Loop 144 
* CEs [142] --> Loop 145 
* CEs [144] --> Loop 146 

#### Loops of eval_sipmamergesort_init_26/2 
* Loop 134: eval_sipmamergesort_init_26(V_n,B) [V_n>=8] 
* Loop 135: eval_sipmamergesort_init_26(V_n,B) [V_n>=8] 
* Loop 136: eval_sipmamergesort_init_26(V_n,B) [V_n>=5] 
* Loop 137: eval_sipmamergesort_init_26(V_n,B) [V_n>=5] 
* Loop 138: eval_sipmamergesort_init_26(V_n,B) [V_n>=4] 
* Loop 139: eval_sipmamergesort_init_26(V_n,B) [V_n>=4] 
* Loop 140: eval_sipmamergesort_init_26(V_n,B) [V_n>=3] 
* Loop 141: eval_sipmamergesort_init_26(V_n,B) [V_n>=3] 
* Loop 142: eval_sipmamergesort_init_26(V_n,B) [0>=V_n] 
* Loop 143: eval_sipmamergesort_init_26(V_n,B) [0>=V_n] 
* Loop 144: eval_sipmamergesort_init_26(V_n,B) [V_n=2] 
* Loop 145: eval_sipmamergesort_init_26(V_n,B) [V_n=2] 
* Loop 146: eval_sipmamergesort_init_26(V_n,B) [V_n=1] 

### Ranking functions of CR eval_sipmamergesort_init_26(V_n,B) 

#### Partial ranking functions of CR eval_sipmamergesort_init_26(V_n,B) 


### Resulting Chains:eval_sipmamergesort_init_26(V_n,B) 
* [146]
* [145]
* [144]
* [143]
* [142]
* [141]
* [140]
* [139]
* [138]
* [137]
* [136]
* [135]
* [134]


### Specialization of cost equations eval_sipmamergesort_init_start/2 
* CE 1 is refined into CE [147,148,149,150,151,152,153,154,155,156,157,158,159] 


#### Refined cost equations eval_sipmamergesort_init_start/2 
* CE 147: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(C,B):[146]
     [C=1,V_n=1] 
* CE 148: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(C,B):[145]
     [C=2,V_n=2] 
* CE 149: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(C,B):[144]
     [C=2,V_n=2] 
* CE 150: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[143]
     [0>=V_n] 
* CE 151: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[142]
     [0>=V_n] 
* CE 152: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[141]
     [V_n>=3] 
* CE 153: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[140]
     [V_n>=3] 
* CE 154: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[139]
     [V_n>=4] 
* CE 155: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[138]
     [V_n>=4] 
* CE 156: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[137]
     [V_n>=5] 
* CE 157: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[136]
     [V_n>=5] 
* CE 158: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[135]
     [V_n>=8] 
* CE 159: eval_sipmamergesort_init_start(V_n,B) = 0+ eval_sipmamergesort_init_26(V_n,B):[134]
     [V_n>=8] 

### Cost equations --> "Loop" of eval_sipmamergesort_init_start/2 
* CEs [159] --> Loop 147 
* CEs [158] --> Loop 148 
* CEs [157] --> Loop 149 
* CEs [156] --> Loop 150 
* CEs [155] --> Loop 151 
* CEs [154] --> Loop 152 
* CEs [153] --> Loop 153 
* CEs [152] --> Loop 154 
* CEs [151] --> Loop 155 
* CEs [150] --> Loop 156 
* CEs [149] --> Loop 157 
* CEs [148] --> Loop 158 
* CEs [147] --> Loop 159 

#### Loops of eval_sipmamergesort_init_start/2 
* Loop 147: eval_sipmamergesort_init_start(V_n,B) [V_n>=8] 
* Loop 148: eval_sipmamergesort_init_start(V_n,B) [V_n>=8] 
* Loop 149: eval_sipmamergesort_init_start(V_n,B) [V_n>=5] 
* Loop 150: eval_sipmamergesort_init_start(V_n,B) [V_n>=5] 
* Loop 151: eval_sipmamergesort_init_start(V_n,B) [V_n>=4] 
* Loop 152: eval_sipmamergesort_init_start(V_n,B) [V_n>=4] 
* Loop 153: eval_sipmamergesort_init_start(V_n,B) [V_n>=3] 
* Loop 154: eval_sipmamergesort_init_start(V_n,B) [V_n>=3] 
* Loop 155: eval_sipmamergesort_init_start(V_n,B) [0>=V_n] 
* Loop 156: eval_sipmamergesort_init_start(V_n,B) [0>=V_n] 
* Loop 157: eval_sipmamergesort_init_start(V_n,B) [V_n=2] 
* Loop 158: eval_sipmamergesort_init_start(V_n,B) [V_n=2] 
* Loop 159: eval_sipmamergesort_init_start(V_n,B) [V_n=1] 

### Ranking functions of CR eval_sipmamergesort_init_start(V_n,B) 

#### Partial ranking functions of CR eval_sipmamergesort_init_start(V_n,B) 


### Resulting Chains:eval_sipmamergesort_init_start(V_n,B) 
* [159]
* [158]
* [157]
* [156]
* [155]
* [154]
* [153]
* [152]
* [151]
* [150]
* [149]
* [148]
* [147]


Computing Bounds
=====================================

#### Cost of loops [30,31] 

 * loop 30:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1
 * loop 31:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1
#### Cost of phase [30,31]:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1*it(30)+1*it(31)+0
  Such that:it(30) =< V_r_1
it(30) =< V_r_1-V_r_1'
it(31) =< V_q_1
it(31) =< V_q_1-V_q_1'
aux(1) =< V_r_1+V_q_1
aux(2) =< V_r_1+V_q_1-V_r_1'-V_q_1'
it(30) =< aux(1)
it(31) =< aux(1)
it(30) =< aux(2)
it(31) =< aux(2)

#### Cost of phase [30,31]:eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J) -> [eval_sipmamergesort_init_bb3_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',B',C',D',E',F',G',H',I',J')] 
1*it(30)+1*it(31)+0
  Such that:it(30) =< V_r_1
it(30) =< V_r_1-V_r_1'
it(31) =< V_q_1
it(31) =< V_q_1-V_q_1'
aux(1) =< V_r_1+V_q_1
aux(2) =< V_r_1+V_q_1-V_r_1'-V_q_1'
it(30) =< aux(1)
it(31) =< aux(1)
it(30) =< aux(2)
it(31) =< aux(2)

#### Cost of chains of eval_sipmamergesort_init_bb3_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,B,C,D,E,F,G,H,I,J):
* Chain [[30,31],33]: 1*it(30)+1*it(31)+0
  Such that:it(30) =< V_r_1
aux(1) =< V_r_1+V_q_1
aux(2) =< V_r_1+V_q_1-I
it(31) =< V_q_1-I
it(30) =< aux(1)
it(31) =< aux(1)
it(30) =< aux(2)
it(31) =< aux(2)

  with precondition: [B=2,H=0,J=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_6>=0,V_r_1>=1,I>=1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_q_1>=I,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [[30,31],32]: 1*it(30)+1*it(31)+0
  Such that:aux(1) =< V_r_1+V_q_1
aux(2) =< V_r_1+V_q_1-H
it(30) =< V_r_1-H
it(31) =< V_q_1
it(30) =< aux(1)
it(31) =< aux(1)
it(30) =< aux(2)
it(31) =< aux(2)

  with precondition: [B=2,I=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,H=J,V_6>=0,V_q_1>=1,H>=1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_r_1>=H,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [33]: 0
  with precondition: [B=2,C=V_n,D=V_up_0,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_1=J,0>=V_r_1,V_p_0>=V_r_1,V_p_0>=V_q_1,V_6+V_r_1>=0,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 

* Chain [32]: 0
  with precondition: [B=2,C=V_n,D=V_up_0,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_1=J,0>=V_q_1,V_6>=0,V_p_0>=V_r_1,V_p_0>=V_q_1,V_6+V_r_1>=0,V_6+2*V_p_0>=V_m_0,V_m_0>=V_6+V_q_1+V_r_1] 


#### Cost of loops [34] 

 * loop 34:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb7_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [34]:eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb7_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',B',C',D',E',F',G',H',I',J',K')] 
1*it(34)+0
  Such that:it(34) =< V_r_3
it(34) =< V_r_3-V_r_3'

#### Cost of chains of eval_sipmamergesort_init_bb7_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,B,C,D,E,F,G,H,I,J,K):
* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< V_r_3

  with precondition: [B=3,J=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_q_1=K,V_r_3>=1] 

* Chain [35]: 0
  with precondition: [B=3,C=V_n,D=V_up_0,E=V_p_0,F=V_m_0,G=V_6,H=V_r_1,V_q_1=I,V_r_3=J,V_q_1=K,0>=V_r_3] 


#### Cost of loops [36] 

 * loop 36:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb9_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',V_q_3',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [36]:eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb9_in(V_n',V_up_0',V_p_0',V_m_0',V_6',V_r_1',V_q_1',V_r_3',V_q_3',B',C',D',E',F',G',H',I',J',K')] 
1*it(36)+0
  Such that:it(36) =< V_q_3
it(36) =< V_q_3-V_q_3'

#### Cost of chains of eval_sipmamergesort_init_bb9_in(V_n,V_up_0,V_p_0,V_m_0,V_6,V_r_1,V_q_1,V_r_3,V_q_3,B,C,D,E,F,G,H,I,J,K):
* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< V_q_3

  with precondition: [B=4,K=0,V_n=C,V_up_0=D,V_p_0=E,V_m_0=F,V_6=G,V_r_1=H,V_q_1=I,V_r_3=J,V_q_3>=1] 

* Chain [37]: 0
  with precondition: [B=4,C=V_n,D=V_up_0,E=V_p_0,F=V_m_0,G=V_6,H=V_r_1,I=V_q_1,J=V_r_3,V_q_3=K,0>=V_q_3] 


#### Cost of loops [52,53] 

 * loop 52:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4
 * loop 53:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4
#### Cost of phase [52,53]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
8*it(52)+0
#### Cost of loops [50,51] 

 * loop 50:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
2*s(9)+1*s(10)+4
  Such that:s(7) =< V_p_0'
s(8) =< 2*V_p_0'
s(9) =< s(7)
s(10) =< s(8)
s(9) =< s(8)

 * loop 51:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
2*s(18)+1*s(19)+4
  Such that:s(16) =< V_p_0'
s(17) =< 2*V_p_0'
s(18) =< s(16)
s(19) =< s(17)
s(18) =< s(17)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of phase [50,51]:eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K) -> [eval_sipmamergesort_init_bb2_in(V_n',V_up_0',V_p_0',V_m_0',B',C',D',E',F',G',H',I',J',K')] 
4*it(50)+4*it(51)+4*s(20)+2*s(21)+0
  Such that:aux(9) =< -V_p_0+V_m_0
aux(10) =< -V_p_0+V_m_0+V_p_0'-V_m_0'
aux(11) =< -V_p_0+V_m_0/2
aux(12) =< -V_p_0+V_m_0/2+V_p_0'-V_m_0'/2
aux(13) =< V_m_0/2
aux(14) =< V_m_0/2-V_m_0'/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(12)
it(51) =< aux(12)
it(50) =< aux(13)
it(51) =< aux(13)
it(50) =< aux(14)
it(51) =< aux(14)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

#### Cost of chains of eval_sipmamergesort_init_bb2_in(V_n,V_up_0,V_p_0,V_m_0,B,C,D,E,F,G,H,I,J,K):
* Chain [[52,53]]...: 8*it(52)+0
  with precondition: [V_m_0>=2*V_p_0+1,0>=V_p_0,V_m_0>=V_p_0,B=5] 

* Chain [[50,51],45]: 4*it(50)+4*it(51)+1*s(1)+4*s(20)+2*s(21)+3
  Such that:aux(13) =< V_m_0/2
aux(11) =< V_m_0/2-I
s(1) =< I
aux(15) =< V_m_0-I
aux(16) =< V_m_0/2-I/2
it(51) =< aux(15)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(16)
it(51) =< aux(16)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(15)*2
s(20) =< aux(15)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,V_p_0=F,V_p_0=I,V_p_0>=1,V_m_0>=3*V_p_0,V_n>=V_m_0] 

* Chain [[50,51],44]: 4*it(50)+4*it(51)+4*s(20)+2*s(21)+2*s(28)+1*s(32)+3
  Such that:aux(10) =< V_m_0-F
aux(9) =< V_m_0-F/2
aux(13) =< V_m_0/2
aux(18) =< F
aux(17) =< F/2
aux(19) =< V_m_0/2-F/2
s(28) =< aux(17)
s(32) =< aux(17)
s(28) =< aux(18)
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(19)
it(51) =< aux(19)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,2*V_p_0=F,I>=1,V_m_0>=4*V_p_0,V_n>=V_m_0,V_p_0>=I] 

* Chain [[50,51],43]: 4*it(50)+4*it(51)+4*s(20)+2*s(21)+1*s(33)+3
  Such that:aux(9) =< V_m_0-E
aux(10) =< V_m_0-I
aux(13) =< V_m_0/2
aux(11) =< V_m_0/2-E
s(33) =< I
aux(20) =< V_m_0/2-I/2
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(20)
it(51) =< aux(20)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,F=I,F>=1,V_n>=V_m_0,V_p_0>=F+1,V_m_0>=2*V_p_0+F] 

* Chain [[50,51],42]: 4*it(50)+4*it(51)+4*s(20)+2*s(21)+1*s(34)+1*s(37)+1*s(38)+3
  Such that:aux(9) =< V_m_0-E
aux(10) =< V_m_0-F
aux(13) =< V_m_0/2
aux(11) =< V_m_0/2-E
s(34) =< -E+F
aux(21) =< E
aux(22) =< F
aux(23) =< V_m_0/2-F/2
s(37) =< aux(21)
s(38) =< aux(21)
s(34) =< aux(22)
s(37) =< aux(22)
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(23)
it(51) =< aux(23)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,I>=1,F>=V_p_0+1,V_n>=V_m_0,2*V_p_0>=F+1,V_p_0>=I,V_m_0>=2*V_p_0+F] 

* Chain [[50,51],39]: 4*it(50)+4*it(51)+4*s(20)+2*s(21)+2*s(41)+1*s(43)+3
  Such that:aux(10) =< V_m_0-F
aux(9) =< V_m_0-F/2
aux(13) =< V_m_0/2
aux(25) =< F
aux(24) =< F/2
aux(26) =< V_m_0/2-F/2
s(41) =< aux(24)
s(43) =< aux(24)
s(41) =< aux(25)
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(26)
it(51) =< aux(26)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,2*V_p_0=F,H>=1,V_m_0>=4*V_p_0,V_n>=V_m_0,V_p_0>=H] 

* Chain [[50,51],38]: 4*it(50)+4*it(51)+4*s(20)+2*s(21)+1*s(46)+1*s(47)+1*s(48)+3
  Such that:aux(9) =< V_m_0-E
aux(10) =< V_m_0-F
aux(13) =< V_m_0/2
aux(11) =< V_m_0/2-E
aux(27) =< -E+F
s(47) =< E
aux(28) =< F
aux(29) =< V_m_0/2-F/2
s(46) =< aux(27)
s(48) =< aux(27)
s(46) =< aux(28)
s(47) =< aux(28)
aux(7) =< aux(9)
it(51) =< aux(9)
aux(7) =< aux(10)
it(51) =< aux(10)
it(50) =< aux(11)
it(51) =< aux(11)
it(50) =< aux(29)
it(51) =< aux(29)
it(50) =< aux(13)
it(51) =< aux(13)
s(22) =< aux(7)*2
s(20) =< aux(7)
s(21) =< s(22)
s(20) =< s(22)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_n=C,V_up_0=D,V_p_0=E,H>=1,V_n>=V_m_0,2*V_p_0>=F+1,V_m_0>=2*V_p_0+F,F>=V_p_0+H] 

* Chain [55,[52,53]]...: 8*it(52)+4
  with precondition: [B=5,V_n=V_m_0,0>=V_p_0+1,V_p_0>=V_n+1] 

* Chain [54,[52,53]]...: 8*it(52)+4
  with precondition: [B=5,V_n=V_m_0,0>=V_p_0+1,V_p_0>=V_n+1] 

* Chain [49]: 3
  with precondition: [V_n=0,V_p_0=0,V_m_0=0,B=5,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,D=V_up_0] 

* Chain [48]: 3
  with precondition: [V_n=0,V_p_0=0,V_m_0=0,B=5,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,D=V_up_0] 

* Chain [47]: 3
  with precondition: [V_p_0=0,B=5,E=0,G=0,H=0,J=0,V_m_0=V_n,D=V_up_0,V_m_0=C,V_m_0=F,V_m_0=I,V_m_0=K,0>=V_m_0+1] 

* Chain [46]: 3
  with precondition: [V_p_0=0,B=5,E=0,G=0,H=0,J=0,V_m_0=V_n,D=V_up_0,V_m_0=C,V_m_0=F,V_m_0=I,V_m_0=K,0>=V_m_0+1] 

* Chain [45]: 1*s(1)+3
  Such that:s(1) =< V_p_0

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_m_0=V_p_0,V_n=C,V_m_0=E,V_m_0=F,V_m_0=I,V_m_0>=1,V_n>=V_m_0] 

* Chain [44]: 2*s(28)+1*s(32)+3
  Such that:aux(17) =< V_p_0
aux(18) =< 2*V_p_0
s(28) =< aux(17)
s(32) =< aux(17)
s(28) =< aux(18)

  with precondition: [B=5,G=0,H=0,J=0,K=0,V_m_0=2*V_p_0,V_m_0=2*E,D=V_up_0,V_n=C,V_m_0=F,I>=1,V_m_0>=2*I,V_n>=V_m_0] 

* Chain [43]: 1*s(33)+3
  Such that:s(33) =< V_m_0

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,V_m_0=I,V_m_0>=1,V_n>=V_m_0,V_p_0>=V_m_0+1] 

* Chain [42]: 1*s(34)+1*s(37)+1*s(38)+3
  Such that:s(34) =< -V_p_0+V_m_0
aux(21) =< V_p_0
aux(22) =< V_m_0
s(37) =< aux(21)
s(38) =< aux(21)
s(34) =< aux(22)
s(37) =< aux(22)

  with precondition: [B=5,G=0,H=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,I>=1,V_m_0>=V_p_0+1,V_n>=V_m_0,2*V_p_0>=V_m_0+1,V_p_0>=I] 

* Chain [41]: 3
  with precondition: [B=5,G=0,H=0,J=0,D=V_up_0,V_n=V_m_0,V_n=C,V_p_0=E,V_n=F,V_n=I,V_n=K,0>=V_n,V_p_0>=1] 

* Chain [40]: 3
  with precondition: [B=5,G=0,H=0,J=0,D=V_up_0,V_n=V_m_0,V_n=C,V_p_0=E,V_n=F,V_n=I,V_n=K,0>=V_n,V_p_0>=1] 

* Chain [39]: 2*s(41)+1*s(43)+3
  Such that:aux(24) =< V_p_0
aux(25) =< 2*V_p_0
s(41) =< aux(24)
s(43) =< aux(24)
s(41) =< aux(25)

  with precondition: [B=5,G=0,I=0,J=0,K=0,V_m_0=2*V_p_0,V_m_0=2*E,D=V_up_0,V_n=C,V_m_0=F,H>=1,V_m_0>=2*H,V_n>=V_m_0] 

* Chain [38]: 1*s(46)+1*s(47)+1*s(48)+3
  Such that:s(47) =< V_p_0
aux(27) =< -V_p_0+V_m_0
aux(28) =< V_m_0
s(46) =< aux(27)
s(48) =< aux(27)
s(46) =< aux(28)
s(47) =< aux(28)

  with precondition: [B=5,G=0,I=0,J=0,K=0,D=V_up_0,V_n=C,V_p_0=E,V_m_0=F,H>=1,V_n>=V_m_0,2*V_p_0>=V_m_0+1,V_m_0>=V_p_0+H] 


#### Cost of loops [110,112,113,114,115,116,122,123,124,125,126,127] 

 * loop 110:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(67)+4*s(68)+4*s(69)+4*s(71)+2*s(72)+5
  Such that:s(63) =< V_n'-V_p_0'/2
s(64) =< V_n'/2
s(65) =< V_n'/2-V_p_0'/2
s(66) =< V_n'/2-V_p_0'/4
s(67) =< V_p_0'/2
s(68) =< s(63)
s(69) =< s(65)
s(68) =< s(65)
s(69) =< s(66)
s(68) =< s(66)
s(69) =< s(64)
s(68) =< s(64)
s(70) =< s(63)*2
s(71) =< s(63)
s(72) =< s(70)
s(71) =< s(70)

 * loop 112:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(89)+4*s(91)+4*s(92)+4*s(94)+2*s(95)+5
  Such that:s(85) =< V_n-V_p_0'/2
s(86) =< V_n/2
s(87) =< V_n/2-V_p_0'/2
s(88) =< V_n
s(89) =< s(88)
s(90) =< s(85)
s(91) =< s(85)
s(90) =< s(88)
s(91) =< s(88)
s(92) =< s(87)
s(91) =< s(87)
s(92) =< s(88)
s(92) =< s(86)
s(91) =< s(86)
s(93) =< s(90)*2
s(94) =< s(90)
s(95) =< s(93)
s(94) =< s(93)

 * loop 113:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(114)+1*s(117)+1*s(118)+4*s(120)+4*s(121)+4*s(123)+2*s(124)+5
  Such that:s(112) =< V_n'/2
s(113) =< V_n'/2-V_p_0'/2
s(114) =< V_p_0'/2
s(115) =< V_n'
s(116) =< V_n'-V_p_0'/2
s(117) =< s(116)
s(118) =< s(116)
s(117) =< s(115)
s(114) =< s(115)
s(119) =< s(116)
s(120) =< s(116)
s(119) =< s(115)
s(120) =< s(115)
s(121) =< s(113)
s(120) =< s(113)
s(121) =< s(115)
s(121) =< s(112)
s(120) =< s(112)
s(122) =< s(119)*2
s(123) =< s(119)
s(124) =< s(122)
s(123) =< s(122)

 * loop 114:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(146)+1*s(147)+1*s(148)+4*s(150)+4*s(151)+4*s(153)+2*s(154)+5
  Such that:s(141) =< V_n'/2
s(142) =< V_n'/2-V_p_0'/2
s(143) =< V_p_0'/2
s(144) =< V_n'
s(145) =< V_n'-V_p_0'/2
s(146) =< s(145)
s(147) =< s(143)
s(148) =< s(143)
s(146) =< s(144)
s(147) =< s(144)
s(149) =< s(145)
s(150) =< s(145)
s(149) =< s(144)
s(150) =< s(144)
s(151) =< s(142)
s(150) =< s(142)
s(151) =< s(144)
s(151) =< s(141)
s(150) =< s(141)
s(152) =< s(149)*2
s(153) =< s(149)
s(154) =< s(152)
s(153) =< s(152)

 * loop 115:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
2*s(175)+1*s(176)+4*s(178)+4*s(179)+4*s(181)+2*s(182)+5
  Such that:s(169) =< V_n'-V_p_0'
s(170) =< V_n'-V_p_0'/2
s(171) =< V_n'/2
s(172) =< V_n'/2-V_p_0'/2
s(173) =< V_p_0'
s(174) =< V_p_0'/2
s(175) =< s(174)
s(176) =< s(174)
s(175) =< s(173)
s(177) =< s(170)
s(178) =< s(170)
s(177) =< s(169)
s(178) =< s(169)
s(179) =< s(172)
s(178) =< s(172)
s(179) =< s(171)
s(178) =< s(171)
s(180) =< s(177)*2
s(181) =< s(177)
s(182) =< s(180)
s(181) =< s(180)

 * loop 116:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
2*s(203)+1*s(204)+4*s(206)+4*s(207)+4*s(209)+2*s(210)+5
  Such that:s(197) =< V_n'-V_p_0'
s(198) =< V_n'-V_p_0'/2
s(199) =< V_n'/2
s(200) =< V_n'/2-V_p_0'/2
s(201) =< V_p_0'
s(202) =< V_p_0'/2
s(203) =< s(202)
s(204) =< s(202)
s(203) =< s(201)
s(205) =< s(198)
s(206) =< s(198)
s(205) =< s(197)
s(206) =< s(197)
s(207) =< s(200)
s(206) =< s(200)
s(207) =< s(199)
s(206) =< s(199)
s(208) =< s(205)*2
s(209) =< s(205)
s(210) =< s(208)
s(209) =< s(208)

 * loop 122:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(225)+4*s(226)+4*s(227)+4*s(229)+2*s(230)+5
  Such that:s(221) =< V_n'-V_p_0'/2
s(222) =< V_n'/2
s(223) =< V_n'/2-V_p_0'/2
s(224) =< V_n'/2-V_p_0'/4
s(225) =< V_p_0'/2
s(226) =< s(221)
s(227) =< s(223)
s(226) =< s(223)
s(227) =< s(224)
s(226) =< s(224)
s(227) =< s(222)
s(226) =< s(222)
s(228) =< s(221)*2
s(229) =< s(221)
s(230) =< s(228)
s(229) =< s(228)

 * loop 123:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(247)+4*s(249)+4*s(250)+4*s(252)+2*s(253)+5
  Such that:s(243) =< V_n-V_p_0'/2
s(244) =< V_n/2
s(245) =< V_n/2-V_p_0'/2
s(246) =< V_n
s(247) =< s(246)
s(248) =< s(243)
s(249) =< s(243)
s(248) =< s(246)
s(249) =< s(246)
s(250) =< s(245)
s(249) =< s(245)
s(250) =< s(246)
s(250) =< s(244)
s(249) =< s(244)
s(251) =< s(248)*2
s(252) =< s(248)
s(253) =< s(251)
s(252) =< s(251)

 * loop 124:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(272)+1*s(275)+1*s(276)+4*s(278)+4*s(279)+4*s(281)+2*s(282)+5
  Such that:s(270) =< V_n'/2
s(271) =< V_n'/2-V_p_0'/2
s(272) =< V_p_0'/2
s(273) =< V_n'
s(274) =< V_n'-V_p_0'/2
s(275) =< s(274)
s(276) =< s(274)
s(275) =< s(273)
s(272) =< s(273)
s(277) =< s(274)
s(278) =< s(274)
s(277) =< s(273)
s(278) =< s(273)
s(279) =< s(271)
s(278) =< s(271)
s(279) =< s(273)
s(279) =< s(270)
s(278) =< s(270)
s(280) =< s(277)*2
s(281) =< s(277)
s(282) =< s(280)
s(281) =< s(280)

 * loop 125:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
1*s(304)+1*s(305)+1*s(306)+4*s(308)+4*s(309)+4*s(311)+2*s(312)+5
  Such that:s(299) =< V_n'/2
s(300) =< V_n'/2-V_p_0'/2
s(301) =< V_p_0'/2
s(302) =< V_n'
s(303) =< V_n'-V_p_0'/2
s(304) =< s(303)
s(305) =< s(301)
s(306) =< s(301)
s(304) =< s(302)
s(305) =< s(302)
s(307) =< s(303)
s(308) =< s(303)
s(307) =< s(302)
s(308) =< s(302)
s(309) =< s(300)
s(308) =< s(300)
s(309) =< s(302)
s(309) =< s(299)
s(308) =< s(299)
s(310) =< s(307)*2
s(311) =< s(307)
s(312) =< s(310)
s(311) =< s(310)

 * loop 126:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
2*s(333)+1*s(334)+4*s(336)+4*s(337)+4*s(339)+2*s(340)+5
  Such that:s(327) =< V_n'-V_p_0'
s(328) =< V_n'-V_p_0'/2
s(329) =< V_n'/2
s(330) =< V_n'/2-V_p_0'/2
s(331) =< V_p_0'
s(332) =< V_p_0'/2
s(333) =< s(332)
s(334) =< s(332)
s(333) =< s(331)
s(335) =< s(328)
s(336) =< s(328)
s(335) =< s(327)
s(336) =< s(327)
s(337) =< s(330)
s(336) =< s(330)
s(337) =< s(329)
s(336) =< s(329)
s(338) =< s(335)*2
s(339) =< s(335)
s(340) =< s(338)
s(339) =< s(338)

 * loop 127:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
2*s(361)+1*s(362)+4*s(364)+4*s(365)+4*s(367)+2*s(368)+5
  Such that:s(355) =< V_n'-V_p_0'
s(356) =< V_n'-V_p_0'/2
s(357) =< V_n'/2
s(358) =< V_n'/2-V_p_0'/2
s(359) =< V_p_0'
s(360) =< V_p_0'/2
s(361) =< s(360)
s(362) =< s(360)
s(361) =< s(359)
s(363) =< s(356)
s(364) =< s(356)
s(363) =< s(355)
s(364) =< s(355)
s(365) =< s(358)
s(364) =< s(358)
s(365) =< s(357)
s(364) =< s(357)
s(366) =< s(363)*2
s(367) =< s(363)
s(368) =< s(366)
s(367) =< s(366)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of phase [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]:eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D) -> [eval_sipmamergesort_init_bb1_in(V_n',V_up_0',V_p_0',B',C',D')] 
5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+0
  Such that:aux(40) =< V_n-V_p_0
aux(41) =< V_n/2
aux(92) =< V_n-2*V_p_0
aux(93) =< V_n-2*V_p_0-V_n'+2*V_p_0'
aux(94) =< V_n/2+V_up_0/3-2/3*V_p_0
aux(95) =< V_n/2+V_up_0/3-2/3*V_p_0-V_n'/2-V_up_0'/3+2/3*V_p_0'
aux(96) =< V_n/2-V_p_0
aux(97) =< V_n/2-V_p_0-V_n'/2+V_p_0'
aux(98) =< V_n/3+V_up_0/3-2/3*V_p_0
aux(99) =< V_n/3+V_up_0/3-2/3*V_p_0-V_n'/3-V_up_0'/3+2/3*V_p_0'
aux(100) =< 2/3*V_n-V_p_0
aux(101) =< 2/3*V_n-V_p_0-2/3*V_n'+V_p_0'
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(95)
it(112) =< aux(95)
it(116) =< aux(95)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(97)
it(112) =< aux(97)
it(116) =< aux(97)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(110) =< aux(99)
it(112) =< aux(99)
it(116) =< aux(99)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
it(112) =< aux(101)
it(116) =< aux(101)
s(369) =< aux(101)
s(390) =< aux(101)
s(416) =< aux(101)
s(466) =< aux(101)
aux(58) =< aux(41)
aux(45) =< aux(40)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

#### Cost of chains of eval_sipmamergesort_init_bb1_in(V_n,V_up_0,V_p_0,B,C,D):
* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],83]: 5*it(110)+20*it(112)+35*it(116)+2*s(51)+1*s(52)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(40) =< -V_p_0+C
aux(100) =< -V_p_0+2/3*C
s(50) =< C
aux(102) =< V_up_0/3-2/3*V_p_0+C/3
aux(103) =< -2*V_p_0+C
aux(104) =< -V_p_0+C/2
aux(105) =< C/2
s(51) =< aux(105)
s(52) =< aux(105)
s(51) =< s(50)
it(116) =< aux(103)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(102)
it(112) =< aux(102)
it(116) =< aux(102)
it(110) =< aux(104)
it(112) =< aux(104)
it(116) =< aux(104)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(104)
s(390) =< aux(104)
s(416) =< aux(104)
s(466) =< aux(104)
aux(58) =< aux(105)
aux(45) =< aux(40)
aux(56) =< aux(104)*2
aux(47) =< aux(104)
aux(44) =< aux(105)*2
s(430) =< aux(103)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(104)
s(376) =< it(110)*aux(105)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(103)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n+8*V_up_0>=4*V_p_0+8] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],82]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+2*s(523)+1*s(524)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(40) =< -V_p_0+C
aux(100) =< -V_p_0+2/3*C
s(522) =< C
aux(106) =< V_up_0/3-2/3*V_p_0+C/3
aux(107) =< -2*V_p_0+C
aux(108) =< -V_p_0+C/2
aux(109) =< C/2
s(523) =< aux(109)
s(524) =< aux(109)
s(523) =< s(522)
it(116) =< aux(107)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(106)
it(112) =< aux(106)
it(116) =< aux(106)
it(110) =< aux(108)
it(112) =< aux(108)
it(116) =< aux(108)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(108)
s(390) =< aux(108)
s(416) =< aux(108)
s(466) =< aux(108)
aux(58) =< aux(109)
aux(45) =< aux(40)
aux(56) =< aux(108)*2
aux(47) =< aux(108)
aux(44) =< aux(109)*2
s(430) =< aux(107)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(108)
s(376) =< it(110)*aux(109)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(107)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n+8*V_up_0>=4*V_p_0+8] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],77]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+3*s(525)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(98) =< V_up_0/3-2/3*V_p_0+C/3
aux(92) =< -2*V_p_0+C
aux(93) =< -2*V_p_0+2*C
aux(96) =< -V_p_0+C/2
aux(100) =< -V_p_0+2/3*C
aux(41) =< C/2
aux(110) =< V_up_0-2*V_p_0+2*C
aux(111) =< -V_p_0+C
aux(112) =< C
s(525) =< aux(112)
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(110)
it(112) =< aux(110)
it(116) =< aux(110)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(111)
it(112) =< aux(111)
it(116) =< aux(111)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(111)
s(390) =< aux(111)
s(416) =< aux(111)
s(466) =< aux(111)
aux(58) =< aux(41)
aux(45) =< aux(111)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(111)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n+4*V_up_0>=2*V_p_0+5] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],76]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+3*s(530)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(98) =< V_up_0/3-2/3*V_p_0+C/3
aux(92) =< -2*V_p_0+C
aux(93) =< -2*V_p_0+2*C
aux(96) =< -V_p_0+C/2
aux(100) =< -V_p_0+2/3*C
aux(41) =< C/2
aux(113) =< V_up_0-2*V_p_0+2*C
aux(114) =< -V_p_0+C
aux(115) =< C
s(530) =< aux(115)
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(113)
it(112) =< aux(113)
it(116) =< aux(113)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(114)
it(112) =< aux(114)
it(116) =< aux(114)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(114)
s(390) =< aux(114)
s(416) =< aux(114)
s(466) =< aux(114)
aux(58) =< aux(41)
aux(45) =< aux(114)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(114)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=1,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n+4*V_up_0>=2*V_p_0+5] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],69]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+2*s(537)+1*s(538)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(40) =< -V_p_0+C
aux(100) =< -V_p_0+2/3*C
s(536) =< C
aux(116) =< V_up_0/3-2/3*V_p_0+C/3
aux(117) =< -2*V_p_0+C
aux(118) =< -V_p_0+C/2
aux(119) =< C/2
s(537) =< aux(119)
s(538) =< aux(119)
s(537) =< s(536)
it(116) =< aux(117)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(116)
it(112) =< aux(116)
it(116) =< aux(116)
it(110) =< aux(118)
it(112) =< aux(118)
it(116) =< aux(118)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(118)
s(390) =< aux(118)
s(416) =< aux(118)
s(466) =< aux(118)
aux(58) =< aux(119)
aux(45) =< aux(40)
aux(56) =< aux(118)*2
aux(47) =< aux(118)
aux(44) =< aux(119)*2
s(430) =< aux(117)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(118)
s(376) =< it(110)*aux(119)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(117)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n>=4*V_p_0+4*V_up_0] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],68]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+2*s(541)+1*s(542)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(40) =< -V_p_0+C
aux(100) =< -V_p_0+2/3*C
s(540) =< C
aux(120) =< V_up_0/3-2/3*V_p_0+C/3
aux(121) =< -2*V_p_0+C
aux(122) =< -V_p_0+C/2
aux(123) =< C/2
s(541) =< aux(123)
s(542) =< aux(123)
s(541) =< s(540)
it(116) =< aux(121)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(120)
it(112) =< aux(120)
it(116) =< aux(120)
it(110) =< aux(122)
it(112) =< aux(122)
it(116) =< aux(122)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(122)
s(390) =< aux(122)
s(416) =< aux(122)
s(466) =< aux(122)
aux(58) =< aux(123)
aux(45) =< aux(40)
aux(56) =< aux(122)*2
aux(47) =< aux(122)
aux(44) =< aux(123)*2
s(430) =< aux(121)* (1/2)
aux(43) =< it(110)*aux(40)
s(378) =< it(110)*aux(122)
s(376) =< it(110)*aux(123)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(121)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0>=1,V_n>=4*V_p_0+4*V_up_0] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],57]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+3*s(543)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(98) =< V_up_0/3-2/3*V_p_0+C/3
aux(92) =< -2*V_p_0+C
aux(93) =< -2*V_p_0+2*C
aux(96) =< -V_p_0+C/2
aux(100) =< -V_p_0+2/3*C
aux(41) =< C/2
aux(124) =< V_up_0-2*V_p_0+2*C
aux(125) =< -V_p_0+C
aux(126) =< C
s(543) =< aux(126)
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(124)
it(112) =< aux(124)
it(116) =< aux(124)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(125)
it(112) =< aux(125)
it(116) =< aux(125)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(125)
s(390) =< aux(125)
s(416) =< aux(125)
s(466) =< aux(125)
aux(58) =< aux(41)
aux(45) =< aux(125)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(125)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n>=2*V_p_0+2*V_up_0+1] 

* Chain [[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],56]: 5*it(110)+20*it(112)+35*it(116)+2*s(369)+4*s(370)+4*s(371)+4*s(372)+2*s(373)+1*s(379)+12*s(380)+12*s(381)+12*s(382)+6*s(383)+1*s(390)+2*s(391)+1*s(392)+1*s(404)+2*s(405)+8*s(417)+4*s(418)+4*s(419)+4*s(420)+4*s(421)+2*s(422)+12*s(433)+12*s(434)+12*s(435)+6*s(436)+4*s(446)+4*s(447)+4*s(448)+2*s(449)+1*s(455)+12*s(456)+12*s(457)+12*s(458)+6*s(459)+1*s(466)+2*s(467)+1*s(468)+1*s(480)+3*s(548)+4
  Such that:aux(94) =< V_up_0/3-2/3*V_p_0+C/2
aux(98) =< V_up_0/3-2/3*V_p_0+C/3
aux(92) =< -2*V_p_0+C
aux(93) =< -2*V_p_0+2*C
aux(96) =< -V_p_0+C/2
aux(100) =< -V_p_0+2/3*C
aux(41) =< C/2
aux(127) =< V_up_0-2*V_p_0+2*C
aux(128) =< -V_p_0+C
aux(129) =< C
s(548) =< aux(129)
aux(60) =< aux(92)
it(116) =< aux(92)
aux(60) =< aux(93)
it(116) =< aux(93)
it(110) =< aux(94)
it(112) =< aux(94)
it(116) =< aux(94)
it(110) =< aux(127)
it(112) =< aux(127)
it(116) =< aux(127)
it(110) =< aux(96)
it(112) =< aux(96)
it(116) =< aux(96)
it(110) =< aux(128)
it(112) =< aux(128)
it(116) =< aux(128)
it(110) =< aux(98)
it(112) =< aux(98)
it(116) =< aux(98)
it(112) =< aux(100)
it(116) =< aux(100)
s(369) =< aux(100)
s(390) =< aux(100)
s(416) =< aux(100)
s(466) =< aux(100)
s(369) =< aux(128)
s(390) =< aux(128)
s(416) =< aux(128)
s(466) =< aux(128)
aux(58) =< aux(41)
aux(45) =< aux(128)
aux(56) =< aux(96)*2
aux(47) =< aux(96)
aux(44) =< aux(41)*2
s(430) =< aux(60)* (1/2)
aux(43) =< it(110)*aux(128)
s(378) =< it(110)*aux(96)
s(376) =< it(110)*aux(41)
aux(64) =< it(116)*aux(56)
s(439) =< it(116)*aux(58)
aux(69) =< it(116)*aux(45)
s(454) =< it(116)*aux(47)
aux(72) =< it(116)*aux(44)
aux(59) =< it(112)*aux(56)
s(425) =< it(112)*aux(58)
s(389) =< it(112)*aux(45)
s(388) =< it(112)*aux(47)
aux(46) =< it(112)*aux(44)
s(377) =< aux(43)* (1/2)
s(440) =< aux(64)* (1/2)
s(462) =< aux(72)* (1/2)
s(453) =< aux(69)* (1/2)
s(426) =< aux(59)* (1/2)
s(386) =< aux(46)* (1/2)
s(417) =< s(430)
s(418) =< s(430)
s(417) =< aux(60)
s(438) =< aux(69)
s(433) =< aux(69)
s(438) =< aux(64)
s(433) =< aux(64)
s(434) =< s(440)
s(433) =< s(440)
s(434) =< s(439)
s(433) =< s(439)
s(437) =< s(438)*2
s(435) =< s(438)
s(436) =< s(437)
s(435) =< s(437)
s(467) =< aux(69)
s(480) =< s(416)
s(405) =< s(416)
s(467) =< aux(72)
s(480) =< aux(72)
s(461) =< aux(69)
s(456) =< aux(69)
s(461) =< aux(72)
s(456) =< aux(72)
s(457) =< s(454)
s(456) =< s(454)
s(457) =< aux(72)
s(457) =< s(462)
s(456) =< s(462)
s(460) =< s(461)*2
s(458) =< s(461)
s(459) =< s(460)
s(458) =< s(460)
s(468) =< aux(69)
s(466) =< aux(72)
s(455) =< aux(72)
s(446) =< aux(69)
s(447) =< s(454)
s(446) =< s(454)
s(447) =< s(453)
s(446) =< s(453)
s(447) =< s(439)
s(446) =< s(439)
s(450) =< aux(69)*2
s(448) =< aux(69)
s(449) =< s(450)
s(448) =< s(450)
s(424) =< s(389)
s(419) =< s(389)
s(424) =< aux(59)
s(419) =< aux(59)
s(420) =< s(426)
s(419) =< s(426)
s(420) =< s(425)
s(419) =< s(425)
s(423) =< s(424)*2
s(421) =< s(424)
s(422) =< s(423)
s(421) =< s(423)
s(391) =< s(389)
s(404) =< s(416)
s(391) =< aux(46)
s(404) =< aux(46)
s(385) =< s(389)
s(380) =< s(389)
s(385) =< aux(46)
s(380) =< aux(46)
s(381) =< s(388)
s(380) =< s(388)
s(381) =< aux(46)
s(381) =< s(386)
s(380) =< s(386)
s(384) =< s(385)*2
s(382) =< s(385)
s(383) =< s(384)
s(382) =< s(384)
s(392) =< s(389)
s(390) =< aux(46)
s(379) =< aux(46)
s(370) =< aux(43)
s(371) =< s(378)
s(370) =< s(378)
s(371) =< s(377)
s(370) =< s(377)
s(371) =< s(376)
s(370) =< s(376)
s(374) =< aux(43)*2
s(372) =< aux(43)
s(373) =< s(374)
s(372) =< s(374)

  with precondition: [B=6,D=0,V_n=C,1>=V_up_0,V_up_0>=0,V_p_0+V_up_0>=2,V_n>=2*V_p_0+2*V_up_0+1] 

* Chain [69]: 2*s(537)+1*s(538)+4
  Such that:s(535) =< V_p_0
s(536) =< 2*V_p_0
s(537) =< s(535)
s(538) =< s(535)
s(537) =< s(536)

  with precondition: [V_up_0=1,B=6,D=0,2*V_p_0=V_n,2*V_p_0=C,V_p_0>=1] 

* Chain [68]: 2*s(541)+1*s(542)+4
  Such that:s(539) =< V_p_0
s(540) =< 2*V_p_0
s(541) =< s(539)
s(542) =< s(539)
s(541) =< s(540)

  with precondition: [V_up_0=1,B=6,D=0,2*V_p_0=V_n,2*V_p_0=C,V_p_0>=1] 

* Chain [66]: 1*s(553)+4
  Such that:s(553) =< 1

  with precondition: [V_n=1,V_up_0=1,V_p_0=1,B=6,C=1,D=0] 

* Chain [63]: 4
  with precondition: [V_up_0=1,V_p_0=1,B=6,D=0,V_n=C,0>=V_n] 

* Chain [62]: 4
  with precondition: [V_up_0=1,V_p_0=1,B=6,D=0,V_n=C,0>=V_n] 


#### Cost of loops [128] 

 * loop 128:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) -> [eval_sipmamergesort_init_bb14_in(V_n',V_i_5',B')] 
1
#### Cost of phase [128]:eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B) -> [eval_sipmamergesort_init_bb14_in(V_n',V_i_5',B')] 
1*it(128)+0
  Such that:it(128) =< V_n-V_i_5+1
it(128) =< V_n-V_i_5-V_n'+V_i_5'

#### Cost of chains of eval_sipmamergesort_init_bb14_in(V_n,V_i_5,B):
* Chain [[128],129]: 1*it(128)+0
  Such that:it(128) =< V_n-V_i_5+1

  with precondition: [B=7,V_i_5>=1,V_n>=V_i_5] 

* Chain [129]: 0
  with precondition: [B=7,V_i_5>=1,V_i_5>=V_n+1] 


#### Cost of chains of eval_sipmamergesort_init_bb13_in(V_n,V_52,B):
* Chain [133]: 1
  with precondition: [V_52=0,0>=V_n] 

* Chain [132]: 1*s(554)+1
  Such that:s(554) =< V_n

  with precondition: [V_52=0,V_n>=1] 

* Chain [131]: 0
  with precondition: [0>=V_52+1] 

* Chain [130]: 0
  with precondition: [V_52>=1] 


#### Cost of chains of eval_sipmamergesort_init_26(V_n,B):
* Chain [146]: 2*s(555)+6
  Such that:aux(130) =< 1
s(555) =< aux(130)

  with precondition: [V_n=1] 

* Chain [145]: 2*s(559)+1*s(560)+1*s(561)+6
  Such that:s(557) =< 1
aux(131) =< 2
s(561) =< aux(131)
s(559) =< s(557)
s(560) =< s(557)
s(559) =< aux(131)

  with precondition: [V_n=2] 

* Chain [144]: 2*s(564)+1*s(565)+1*s(566)+6
  Such that:s(562) =< 1
aux(132) =< 2
s(566) =< aux(132)
s(564) =< s(562)
s(565) =< s(562)
s(564) =< aux(132)

  with precondition: [V_n=2] 

* Chain [143]: 6
  with precondition: [0>=V_n] 

* Chain [142]: 6
  with precondition: [0>=V_n] 

* Chain [141]: 3*s(577)+55*s(579)+5*s(580)+2*s(582)+2*s(583)+8*s(611)+4*s(612)+40*s(614)+16*s(615)+40*s(617)+20*s(618)+4*s(619)+2*s(620)+2*s(621)+24*s(624)+2*s(628)+2*s(629)+4*s(630)+4*s(631)+4*s(633)+2*s(634)+4*s(651)+4*s(652)+4*s(654)+2*s(655)+5
  Such that:s(568) =< V_n/3
s(572) =< 2/3*V_n
aux(133) =< V_n
aux(134) =< 2*V_n
aux(135) =< V_n/2
s(577) =< aux(133)
s(578) =< aux(133)
s(579) =< aux(133)
s(578) =< aux(134)
s(579) =< aux(134)
s(580) =< aux(135)
s(579) =< aux(135)
s(580) =< aux(134)
s(580) =< aux(133)
s(580) =< s(568)
s(579) =< s(568)
s(579) =< s(572)
s(582) =< s(572)
s(583) =< s(572)
s(584) =< s(572)
s(582) =< aux(133)
s(583) =< aux(133)
s(584) =< aux(133)
s(586) =< aux(135)
s(587) =< aux(133)
s(588) =< aux(135)*2
s(591) =< s(578)* (1/2)
s(592) =< s(580)*aux(133)
s(593) =< s(580)*aux(135)
s(595) =< s(579)*s(588)
s(596) =< s(579)*s(586)
s(597) =< s(579)*s(587)
s(605) =< s(592)* (1/2)
s(606) =< s(595)* (1/2)
s(608) =< s(597)* (1/2)
s(611) =< s(591)
s(612) =< s(591)
s(611) =< s(578)
s(613) =< s(597)
s(614) =< s(597)
s(613) =< s(595)
s(614) =< s(595)
s(615) =< s(606)
s(614) =< s(606)
s(615) =< s(596)
s(614) =< s(596)
s(616) =< s(613)*2
s(617) =< s(613)
s(618) =< s(616)
s(617) =< s(616)
s(619) =< s(597)
s(620) =< s(584)
s(621) =< s(584)
s(619) =< s(595)
s(620) =< s(595)
s(624) =< s(596)
s(624) =< s(595)
s(624) =< s(606)
s(628) =< s(597)
s(583) =< s(595)
s(629) =< s(595)
s(630) =< s(597)
s(631) =< s(596)
s(630) =< s(596)
s(631) =< s(608)
s(630) =< s(608)
s(632) =< s(597)*2
s(633) =< s(597)
s(634) =< s(632)
s(633) =< s(632)
s(651) =< s(592)
s(652) =< s(593)
s(651) =< s(593)
s(652) =< s(605)
s(651) =< s(605)
s(653) =< s(592)*2
s(654) =< s(592)
s(655) =< s(653)
s(654) =< s(653)

  with precondition: [V_n>=3] 

* Chain [140]: 3*s(666)+55*s(668)+5*s(669)+2*s(671)+2*s(672)+8*s(700)+4*s(701)+40*s(703)+16*s(704)+40*s(706)+20*s(707)+4*s(708)+2*s(709)+2*s(710)+24*s(713)+2*s(717)+2*s(718)+4*s(719)+4*s(720)+4*s(722)+2*s(723)+4*s(740)+4*s(741)+4*s(743)+2*s(744)+5
  Such that:s(657) =< V_n/3
s(661) =< 2/3*V_n
aux(136) =< V_n
aux(137) =< 2*V_n
aux(138) =< V_n/2
s(666) =< aux(136)
s(667) =< aux(136)
s(668) =< aux(136)
s(667) =< aux(137)
s(668) =< aux(137)
s(669) =< aux(138)
s(668) =< aux(138)
s(669) =< aux(137)
s(669) =< aux(136)
s(669) =< s(657)
s(668) =< s(657)
s(668) =< s(661)
s(671) =< s(661)
s(672) =< s(661)
s(673) =< s(661)
s(671) =< aux(136)
s(672) =< aux(136)
s(673) =< aux(136)
s(675) =< aux(138)
s(676) =< aux(136)
s(677) =< aux(138)*2
s(680) =< s(667)* (1/2)
s(681) =< s(669)*aux(136)
s(682) =< s(669)*aux(138)
s(684) =< s(668)*s(677)
s(685) =< s(668)*s(675)
s(686) =< s(668)*s(676)
s(694) =< s(681)* (1/2)
s(695) =< s(684)* (1/2)
s(697) =< s(686)* (1/2)
s(700) =< s(680)
s(701) =< s(680)
s(700) =< s(667)
s(702) =< s(686)
s(703) =< s(686)
s(702) =< s(684)
s(703) =< s(684)
s(704) =< s(695)
s(703) =< s(695)
s(704) =< s(685)
s(703) =< s(685)
s(705) =< s(702)*2
s(706) =< s(702)
s(707) =< s(705)
s(706) =< s(705)
s(708) =< s(686)
s(709) =< s(673)
s(710) =< s(673)
s(708) =< s(684)
s(709) =< s(684)
s(713) =< s(685)
s(713) =< s(684)
s(713) =< s(695)
s(717) =< s(686)
s(672) =< s(684)
s(718) =< s(684)
s(719) =< s(686)
s(720) =< s(685)
s(719) =< s(685)
s(720) =< s(697)
s(719) =< s(697)
s(721) =< s(686)*2
s(722) =< s(686)
s(723) =< s(721)
s(722) =< s(721)
s(740) =< s(681)
s(741) =< s(682)
s(740) =< s(682)
s(741) =< s(694)
s(740) =< s(694)
s(742) =< s(681)*2
s(743) =< s(681)
s(744) =< s(742)
s(743) =< s(742)

  with precondition: [V_n>=3] 

* Chain [139]: 2*s(753)+1*s(754)+35*s(755)+5*s(756)+20*s(757)+2*s(758)+1*s(759)+1*s(761)+8*s(787)+4*s(788)+24*s(790)+12*s(791)+24*s(793)+12*s(794)+2*s(795)+1*s(796)+2*s(797)+12*s(800)+1*s(804)+1*s(805)+4*s(806)+4*s(807)+4*s(809)+2*s(810)+16*s(812)+4*s(813)+16*s(815)+8*s(816)+2*s(817)+1*s(818)+12*s(821)+1*s(825)+1*s(826)+4*s(827)+4*s(828)+4*s(830)+2*s(831)+5
  Such that:s(749) =< V_n/3
s(747) =< 2/3*V_n
aux(139) =< V_n
aux(140) =< V_n/2
s(753) =< aux(140)
s(754) =< aux(140)
s(753) =< aux(139)
s(755) =< aux(139)
s(756) =< aux(140)
s(757) =< aux(140)
s(755) =< aux(140)
s(756) =< s(749)
s(757) =< s(749)
s(755) =< s(749)
s(757) =< s(747)
s(755) =< s(747)
s(758) =< s(747)
s(759) =< s(747)
s(760) =< s(747)
s(761) =< s(747)
s(758) =< aux(140)
s(759) =< aux(140)
s(760) =< aux(140)
s(761) =< aux(140)
s(762) =< aux(140)
s(763) =< aux(139)
s(764) =< aux(140)*2
s(767) =< aux(139)* (1/2)
s(768) =< s(756)*aux(139)
s(769) =< s(756)*aux(140)
s(771) =< s(755)*s(764)
s(772) =< s(755)*s(762)
s(773) =< s(755)*s(763)
s(776) =< s(757)*s(764)
s(777) =< s(757)*s(762)
s(778) =< s(757)*s(763)
s(781) =< s(768)* (1/2)
s(782) =< s(771)* (1/2)
s(784) =< s(773)* (1/2)
s(785) =< s(776)* (1/2)
s(787) =< s(767)
s(788) =< s(767)
s(787) =< aux(139)
s(789) =< s(773)
s(790) =< s(773)
s(789) =< s(771)
s(790) =< s(771)
s(791) =< s(782)
s(790) =< s(782)
s(791) =< s(772)
s(790) =< s(772)
s(792) =< s(789)*2
s(793) =< s(789)
s(794) =< s(792)
s(793) =< s(792)
s(795) =< s(773)
s(796) =< s(760)
s(797) =< s(760)
s(795) =< s(771)
s(796) =< s(771)
s(800) =< s(772)
s(800) =< s(771)
s(800) =< s(782)
s(804) =< s(773)
s(761) =< s(771)
s(805) =< s(771)
s(806) =< s(773)
s(807) =< s(772)
s(806) =< s(772)
s(807) =< s(784)
s(806) =< s(784)
s(808) =< s(773)*2
s(809) =< s(773)
s(810) =< s(808)
s(809) =< s(808)
s(811) =< s(778)
s(812) =< s(778)
s(811) =< s(776)
s(812) =< s(776)
s(813) =< s(785)
s(812) =< s(785)
s(813) =< s(777)
s(812) =< s(777)
s(814) =< s(811)*2
s(815) =< s(811)
s(816) =< s(814)
s(815) =< s(814)
s(817) =< s(778)
s(818) =< s(760)
s(817) =< s(776)
s(818) =< s(776)
s(821) =< s(777)
s(821) =< s(776)
s(821) =< s(785)
s(825) =< s(778)
s(759) =< s(776)
s(826) =< s(776)
s(827) =< s(768)
s(828) =< s(769)
s(827) =< s(769)
s(828) =< s(781)
s(827) =< s(781)
s(829) =< s(768)*2
s(830) =< s(768)
s(831) =< s(829)
s(830) =< s(829)

  with precondition: [V_n>=4] 

* Chain [138]: 2*s(840)+1*s(841)+35*s(842)+5*s(843)+20*s(844)+2*s(845)+1*s(846)+1*s(848)+8*s(874)+4*s(875)+24*s(877)+12*s(878)+24*s(880)+12*s(881)+2*s(882)+1*s(883)+2*s(884)+12*s(887)+1*s(891)+1*s(892)+4*s(893)+4*s(894)+4*s(896)+2*s(897)+16*s(899)+4*s(900)+16*s(902)+8*s(903)+2*s(904)+1*s(905)+12*s(908)+1*s(912)+1*s(913)+4*s(914)+4*s(915)+4*s(917)+2*s(918)+5
  Such that:s(836) =< V_n/3
s(834) =< 2/3*V_n
aux(141) =< V_n
aux(142) =< V_n/2
s(840) =< aux(142)
s(841) =< aux(142)
s(840) =< aux(141)
s(842) =< aux(141)
s(843) =< aux(142)
s(844) =< aux(142)
s(842) =< aux(142)
s(843) =< s(836)
s(844) =< s(836)
s(842) =< s(836)
s(844) =< s(834)
s(842) =< s(834)
s(845) =< s(834)
s(846) =< s(834)
s(847) =< s(834)
s(848) =< s(834)
s(845) =< aux(142)
s(846) =< aux(142)
s(847) =< aux(142)
s(848) =< aux(142)
s(849) =< aux(142)
s(850) =< aux(141)
s(851) =< aux(142)*2
s(854) =< aux(141)* (1/2)
s(855) =< s(843)*aux(141)
s(856) =< s(843)*aux(142)
s(858) =< s(842)*s(851)
s(859) =< s(842)*s(849)
s(860) =< s(842)*s(850)
s(863) =< s(844)*s(851)
s(864) =< s(844)*s(849)
s(865) =< s(844)*s(850)
s(868) =< s(855)* (1/2)
s(869) =< s(858)* (1/2)
s(871) =< s(860)* (1/2)
s(872) =< s(863)* (1/2)
s(874) =< s(854)
s(875) =< s(854)
s(874) =< aux(141)
s(876) =< s(860)
s(877) =< s(860)
s(876) =< s(858)
s(877) =< s(858)
s(878) =< s(869)
s(877) =< s(869)
s(878) =< s(859)
s(877) =< s(859)
s(879) =< s(876)*2
s(880) =< s(876)
s(881) =< s(879)
s(880) =< s(879)
s(882) =< s(860)
s(883) =< s(847)
s(884) =< s(847)
s(882) =< s(858)
s(883) =< s(858)
s(887) =< s(859)
s(887) =< s(858)
s(887) =< s(869)
s(891) =< s(860)
s(848) =< s(858)
s(892) =< s(858)
s(893) =< s(860)
s(894) =< s(859)
s(893) =< s(859)
s(894) =< s(871)
s(893) =< s(871)
s(895) =< s(860)*2
s(896) =< s(860)
s(897) =< s(895)
s(896) =< s(895)
s(898) =< s(865)
s(899) =< s(865)
s(898) =< s(863)
s(899) =< s(863)
s(900) =< s(872)
s(899) =< s(872)
s(900) =< s(864)
s(899) =< s(864)
s(901) =< s(898)*2
s(902) =< s(898)
s(903) =< s(901)
s(902) =< s(901)
s(904) =< s(865)
s(905) =< s(847)
s(904) =< s(863)
s(905) =< s(863)
s(908) =< s(864)
s(908) =< s(863)
s(908) =< s(872)
s(912) =< s(865)
s(846) =< s(863)
s(913) =< s(863)
s(914) =< s(855)
s(915) =< s(856)
s(914) =< s(856)
s(915) =< s(868)
s(914) =< s(868)
s(916) =< s(855)*2
s(917) =< s(855)
s(918) =< s(916)
s(917) =< s(916)

  with precondition: [V_n>=4] 

* Chain [137]: 4*s(929)+55*s(931)+5*s(932)+2*s(934)+2*s(935)+8*s(963)+4*s(964)+40*s(966)+16*s(967)+40*s(969)+20*s(970)+4*s(971)+2*s(972)+2*s(973)+24*s(976)+2*s(980)+2*s(981)+4*s(982)+4*s(983)+4*s(985)+2*s(986)+4*s(1003)+4*s(1004)+4*s(1006)+2*s(1007)+6
  Such that:s(920) =< V_n/3
s(924) =< 2/3*V_n
aux(143) =< V_n
aux(144) =< 2*V_n
aux(145) =< V_n/2
s(929) =< aux(143)
s(930) =< aux(143)
s(931) =< aux(143)
s(930) =< aux(144)
s(931) =< aux(144)
s(932) =< aux(145)
s(931) =< aux(145)
s(932) =< aux(144)
s(932) =< aux(143)
s(932) =< s(920)
s(931) =< s(920)
s(931) =< s(924)
s(934) =< s(924)
s(935) =< s(924)
s(936) =< s(924)
s(934) =< aux(143)
s(935) =< aux(143)
s(936) =< aux(143)
s(938) =< aux(145)
s(939) =< aux(143)
s(940) =< aux(145)*2
s(943) =< s(930)* (1/2)
s(944) =< s(932)*aux(143)
s(945) =< s(932)*aux(145)
s(947) =< s(931)*s(940)
s(948) =< s(931)*s(938)
s(949) =< s(931)*s(939)
s(957) =< s(944)* (1/2)
s(958) =< s(947)* (1/2)
s(960) =< s(949)* (1/2)
s(963) =< s(943)
s(964) =< s(943)
s(963) =< s(930)
s(965) =< s(949)
s(966) =< s(949)
s(965) =< s(947)
s(966) =< s(947)
s(967) =< s(958)
s(966) =< s(958)
s(967) =< s(948)
s(966) =< s(948)
s(968) =< s(965)*2
s(969) =< s(965)
s(970) =< s(968)
s(969) =< s(968)
s(971) =< s(949)
s(972) =< s(936)
s(973) =< s(936)
s(971) =< s(947)
s(972) =< s(947)
s(976) =< s(948)
s(976) =< s(947)
s(976) =< s(958)
s(980) =< s(949)
s(935) =< s(947)
s(981) =< s(947)
s(982) =< s(949)
s(983) =< s(948)
s(982) =< s(948)
s(983) =< s(960)
s(982) =< s(960)
s(984) =< s(949)*2
s(985) =< s(949)
s(986) =< s(984)
s(985) =< s(984)
s(1003) =< s(944)
s(1004) =< s(945)
s(1003) =< s(945)
s(1004) =< s(957)
s(1003) =< s(957)
s(1005) =< s(944)*2
s(1006) =< s(944)
s(1007) =< s(1005)
s(1006) =< s(1005)

  with precondition: [V_n>=5] 

* Chain [136]: 4*s(1019)+55*s(1021)+5*s(1022)+2*s(1024)+2*s(1025)+8*s(1053)+4*s(1054)+40*s(1056)+16*s(1057)+40*s(1059)+20*s(1060)+4*s(1061)+2*s(1062)+2*s(1063)+24*s(1066)+2*s(1070)+2*s(1071)+4*s(1072)+4*s(1073)+4*s(1075)+2*s(1076)+4*s(1093)+4*s(1094)+4*s(1096)+2*s(1097)+6
  Such that:s(1010) =< V_n/3
s(1014) =< 2/3*V_n
aux(146) =< V_n
aux(147) =< 2*V_n
aux(148) =< V_n/2
s(1019) =< aux(146)
s(1020) =< aux(146)
s(1021) =< aux(146)
s(1020) =< aux(147)
s(1021) =< aux(147)
s(1022) =< aux(148)
s(1021) =< aux(148)
s(1022) =< aux(147)
s(1022) =< aux(146)
s(1022) =< s(1010)
s(1021) =< s(1010)
s(1021) =< s(1014)
s(1024) =< s(1014)
s(1025) =< s(1014)
s(1026) =< s(1014)
s(1024) =< aux(146)
s(1025) =< aux(146)
s(1026) =< aux(146)
s(1028) =< aux(148)
s(1029) =< aux(146)
s(1030) =< aux(148)*2
s(1033) =< s(1020)* (1/2)
s(1034) =< s(1022)*aux(146)
s(1035) =< s(1022)*aux(148)
s(1037) =< s(1021)*s(1030)
s(1038) =< s(1021)*s(1028)
s(1039) =< s(1021)*s(1029)
s(1047) =< s(1034)* (1/2)
s(1048) =< s(1037)* (1/2)
s(1050) =< s(1039)* (1/2)
s(1053) =< s(1033)
s(1054) =< s(1033)
s(1053) =< s(1020)
s(1055) =< s(1039)
s(1056) =< s(1039)
s(1055) =< s(1037)
s(1056) =< s(1037)
s(1057) =< s(1048)
s(1056) =< s(1048)
s(1057) =< s(1038)
s(1056) =< s(1038)
s(1058) =< s(1055)*2
s(1059) =< s(1055)
s(1060) =< s(1058)
s(1059) =< s(1058)
s(1061) =< s(1039)
s(1062) =< s(1026)
s(1063) =< s(1026)
s(1061) =< s(1037)
s(1062) =< s(1037)
s(1066) =< s(1038)
s(1066) =< s(1037)
s(1066) =< s(1048)
s(1070) =< s(1039)
s(1025) =< s(1037)
s(1071) =< s(1037)
s(1072) =< s(1039)
s(1073) =< s(1038)
s(1072) =< s(1038)
s(1073) =< s(1050)
s(1072) =< s(1050)
s(1074) =< s(1039)*2
s(1075) =< s(1039)
s(1076) =< s(1074)
s(1075) =< s(1074)
s(1093) =< s(1034)
s(1094) =< s(1035)
s(1093) =< s(1035)
s(1094) =< s(1047)
s(1093) =< s(1047)
s(1095) =< s(1034)*2
s(1096) =< s(1034)
s(1097) =< s(1095)
s(1096) =< s(1095)

  with precondition: [V_n>=5] 

* Chain [135]: 2*s(1107)+1*s(1108)+35*s(1109)+5*s(1110)+20*s(1111)+2*s(1112)+1*s(1113)+1*s(1115)+8*s(1141)+4*s(1142)+24*s(1144)+12*s(1145)+24*s(1147)+12*s(1148)+2*s(1149)+1*s(1150)+2*s(1151)+12*s(1154)+1*s(1158)+1*s(1159)+4*s(1160)+4*s(1161)+4*s(1163)+2*s(1164)+16*s(1166)+4*s(1167)+16*s(1169)+8*s(1170)+2*s(1171)+1*s(1172)+12*s(1175)+1*s(1179)+1*s(1180)+4*s(1181)+4*s(1182)+4*s(1184)+2*s(1185)+1*s(1186)+6
  Such that:s(1103) =< V_n/3
s(1101) =< 2/3*V_n
aux(149) =< V_n
aux(150) =< V_n/2
s(1186) =< aux(149)
s(1107) =< aux(150)
s(1108) =< aux(150)
s(1107) =< aux(149)
s(1109) =< aux(149)
s(1110) =< aux(150)
s(1111) =< aux(150)
s(1109) =< aux(150)
s(1110) =< s(1103)
s(1111) =< s(1103)
s(1109) =< s(1103)
s(1111) =< s(1101)
s(1109) =< s(1101)
s(1112) =< s(1101)
s(1113) =< s(1101)
s(1114) =< s(1101)
s(1115) =< s(1101)
s(1112) =< aux(150)
s(1113) =< aux(150)
s(1114) =< aux(150)
s(1115) =< aux(150)
s(1116) =< aux(150)
s(1117) =< aux(149)
s(1118) =< aux(150)*2
s(1121) =< aux(149)* (1/2)
s(1122) =< s(1110)*aux(149)
s(1123) =< s(1110)*aux(150)
s(1125) =< s(1109)*s(1118)
s(1126) =< s(1109)*s(1116)
s(1127) =< s(1109)*s(1117)
s(1130) =< s(1111)*s(1118)
s(1131) =< s(1111)*s(1116)
s(1132) =< s(1111)*s(1117)
s(1135) =< s(1122)* (1/2)
s(1136) =< s(1125)* (1/2)
s(1138) =< s(1127)* (1/2)
s(1139) =< s(1130)* (1/2)
s(1141) =< s(1121)
s(1142) =< s(1121)
s(1141) =< aux(149)
s(1143) =< s(1127)
s(1144) =< s(1127)
s(1143) =< s(1125)
s(1144) =< s(1125)
s(1145) =< s(1136)
s(1144) =< s(1136)
s(1145) =< s(1126)
s(1144) =< s(1126)
s(1146) =< s(1143)*2
s(1147) =< s(1143)
s(1148) =< s(1146)
s(1147) =< s(1146)
s(1149) =< s(1127)
s(1150) =< s(1114)
s(1151) =< s(1114)
s(1149) =< s(1125)
s(1150) =< s(1125)
s(1154) =< s(1126)
s(1154) =< s(1125)
s(1154) =< s(1136)
s(1158) =< s(1127)
s(1115) =< s(1125)
s(1159) =< s(1125)
s(1160) =< s(1127)
s(1161) =< s(1126)
s(1160) =< s(1126)
s(1161) =< s(1138)
s(1160) =< s(1138)
s(1162) =< s(1127)*2
s(1163) =< s(1127)
s(1164) =< s(1162)
s(1163) =< s(1162)
s(1165) =< s(1132)
s(1166) =< s(1132)
s(1165) =< s(1130)
s(1166) =< s(1130)
s(1167) =< s(1139)
s(1166) =< s(1139)
s(1167) =< s(1131)
s(1166) =< s(1131)
s(1168) =< s(1165)*2
s(1169) =< s(1165)
s(1170) =< s(1168)
s(1169) =< s(1168)
s(1171) =< s(1132)
s(1172) =< s(1114)
s(1171) =< s(1130)
s(1172) =< s(1130)
s(1175) =< s(1131)
s(1175) =< s(1130)
s(1175) =< s(1139)
s(1179) =< s(1132)
s(1113) =< s(1130)
s(1180) =< s(1130)
s(1181) =< s(1122)
s(1182) =< s(1123)
s(1181) =< s(1123)
s(1182) =< s(1135)
s(1181) =< s(1135)
s(1183) =< s(1122)*2
s(1184) =< s(1122)
s(1185) =< s(1183)
s(1184) =< s(1183)

  with precondition: [V_n>=8] 

* Chain [134]: 2*s(1195)+1*s(1196)+35*s(1197)+5*s(1198)+20*s(1199)+2*s(1200)+1*s(1201)+1*s(1203)+8*s(1229)+4*s(1230)+24*s(1232)+12*s(1233)+24*s(1235)+12*s(1236)+2*s(1237)+1*s(1238)+2*s(1239)+12*s(1242)+1*s(1246)+1*s(1247)+4*s(1248)+4*s(1249)+4*s(1251)+2*s(1252)+16*s(1254)+4*s(1255)+16*s(1257)+8*s(1258)+2*s(1259)+1*s(1260)+12*s(1263)+1*s(1267)+1*s(1268)+4*s(1269)+4*s(1270)+4*s(1272)+2*s(1273)+1*s(1274)+6
  Such that:s(1191) =< V_n/3
s(1189) =< 2/3*V_n
aux(151) =< V_n
aux(152) =< V_n/2
s(1274) =< aux(151)
s(1195) =< aux(152)
s(1196) =< aux(152)
s(1195) =< aux(151)
s(1197) =< aux(151)
s(1198) =< aux(152)
s(1199) =< aux(152)
s(1197) =< aux(152)
s(1198) =< s(1191)
s(1199) =< s(1191)
s(1197) =< s(1191)
s(1199) =< s(1189)
s(1197) =< s(1189)
s(1200) =< s(1189)
s(1201) =< s(1189)
s(1202) =< s(1189)
s(1203) =< s(1189)
s(1200) =< aux(152)
s(1201) =< aux(152)
s(1202) =< aux(152)
s(1203) =< aux(152)
s(1204) =< aux(152)
s(1205) =< aux(151)
s(1206) =< aux(152)*2
s(1209) =< aux(151)* (1/2)
s(1210) =< s(1198)*aux(151)
s(1211) =< s(1198)*aux(152)
s(1213) =< s(1197)*s(1206)
s(1214) =< s(1197)*s(1204)
s(1215) =< s(1197)*s(1205)
s(1218) =< s(1199)*s(1206)
s(1219) =< s(1199)*s(1204)
s(1220) =< s(1199)*s(1205)
s(1223) =< s(1210)* (1/2)
s(1224) =< s(1213)* (1/2)
s(1226) =< s(1215)* (1/2)
s(1227) =< s(1218)* (1/2)
s(1229) =< s(1209)
s(1230) =< s(1209)
s(1229) =< aux(151)
s(1231) =< s(1215)
s(1232) =< s(1215)
s(1231) =< s(1213)
s(1232) =< s(1213)
s(1233) =< s(1224)
s(1232) =< s(1224)
s(1233) =< s(1214)
s(1232) =< s(1214)
s(1234) =< s(1231)*2
s(1235) =< s(1231)
s(1236) =< s(1234)
s(1235) =< s(1234)
s(1237) =< s(1215)
s(1238) =< s(1202)
s(1239) =< s(1202)
s(1237) =< s(1213)
s(1238) =< s(1213)
s(1242) =< s(1214)
s(1242) =< s(1213)
s(1242) =< s(1224)
s(1246) =< s(1215)
s(1203) =< s(1213)
s(1247) =< s(1213)
s(1248) =< s(1215)
s(1249) =< s(1214)
s(1248) =< s(1214)
s(1249) =< s(1226)
s(1248) =< s(1226)
s(1250) =< s(1215)*2
s(1251) =< s(1215)
s(1252) =< s(1250)
s(1251) =< s(1250)
s(1253) =< s(1220)
s(1254) =< s(1220)
s(1253) =< s(1218)
s(1254) =< s(1218)
s(1255) =< s(1227)
s(1254) =< s(1227)
s(1255) =< s(1219)
s(1254) =< s(1219)
s(1256) =< s(1253)*2
s(1257) =< s(1253)
s(1258) =< s(1256)
s(1257) =< s(1256)
s(1259) =< s(1220)
s(1260) =< s(1202)
s(1259) =< s(1218)
s(1260) =< s(1218)
s(1263) =< s(1219)
s(1263) =< s(1218)
s(1263) =< s(1227)
s(1267) =< s(1220)
s(1201) =< s(1218)
s(1268) =< s(1218)
s(1269) =< s(1210)
s(1270) =< s(1211)
s(1269) =< s(1211)
s(1270) =< s(1223)
s(1269) =< s(1223)
s(1271) =< s(1210)*2
s(1272) =< s(1210)
s(1273) =< s(1271)
s(1272) =< s(1271)

  with precondition: [V_n>=8] 


#### Cost of chains of eval_sipmamergesort_init_start(V_n,B):
* Chain [159]: 2*s(1276)+6
  Such that:s(1275) =< 1
s(1276) =< s(1275)

  with precondition: [V_n=1] 

* Chain [158]: 1*s(1279)+2*s(1280)+1*s(1281)+6
  Such that:s(1277) =< 1
s(1278) =< 2
s(1279) =< s(1278)
s(1280) =< s(1277)
s(1281) =< s(1277)
s(1280) =< s(1278)

  with precondition: [V_n=2] 

* Chain [157]: 1*s(1284)+2*s(1285)+1*s(1286)+6
  Such that:s(1282) =< 1
s(1283) =< 2
s(1284) =< s(1283)
s(1285) =< s(1282)
s(1286) =< s(1282)
s(1285) =< s(1283)

  with precondition: [V_n=2] 

* Chain [156]: 6
  with precondition: [0>=V_n] 

* Chain [155]: 6
  with precondition: [0>=V_n] 

* Chain [154]: 3*s(1292)+55*s(1294)+5*s(1295)+2*s(1296)+2*s(1297)+8*s(1311)+4*s(1312)+40*s(1314)+16*s(1315)+40*s(1317)+20*s(1318)+4*s(1319)+2*s(1320)+2*s(1321)+24*s(1322)+2*s(1323)+2*s(1324)+4*s(1325)+4*s(1326)+4*s(1328)+2*s(1329)+4*s(1330)+4*s(1331)+4*s(1333)+2*s(1334)+5
  Such that:s(1289) =< V_n
s(1290) =< 2*V_n
s(1291) =< V_n/2
s(1287) =< V_n/3
s(1288) =< 2/3*V_n
s(1292) =< s(1289)
s(1293) =< s(1289)
s(1294) =< s(1289)
s(1293) =< s(1290)
s(1294) =< s(1290)
s(1295) =< s(1291)
s(1294) =< s(1291)
s(1295) =< s(1290)
s(1295) =< s(1289)
s(1295) =< s(1287)
s(1294) =< s(1287)
s(1294) =< s(1288)
s(1296) =< s(1288)
s(1297) =< s(1288)
s(1298) =< s(1288)
s(1296) =< s(1289)
s(1297) =< s(1289)
s(1298) =< s(1289)
s(1299) =< s(1291)
s(1300) =< s(1289)
s(1301) =< s(1291)*2
s(1302) =< s(1293)* (1/2)
s(1303) =< s(1295)*s(1289)
s(1304) =< s(1295)*s(1291)
s(1305) =< s(1294)*s(1301)
s(1306) =< s(1294)*s(1299)
s(1307) =< s(1294)*s(1300)
s(1308) =< s(1303)* (1/2)
s(1309) =< s(1305)* (1/2)
s(1310) =< s(1307)* (1/2)
s(1311) =< s(1302)
s(1312) =< s(1302)
s(1311) =< s(1293)
s(1313) =< s(1307)
s(1314) =< s(1307)
s(1313) =< s(1305)
s(1314) =< s(1305)
s(1315) =< s(1309)
s(1314) =< s(1309)
s(1315) =< s(1306)
s(1314) =< s(1306)
s(1316) =< s(1313)*2
s(1317) =< s(1313)
s(1318) =< s(1316)
s(1317) =< s(1316)
s(1319) =< s(1307)
s(1320) =< s(1298)
s(1321) =< s(1298)
s(1319) =< s(1305)
s(1320) =< s(1305)
s(1322) =< s(1306)
s(1322) =< s(1305)
s(1322) =< s(1309)
s(1323) =< s(1307)
s(1297) =< s(1305)
s(1324) =< s(1305)
s(1325) =< s(1307)
s(1326) =< s(1306)
s(1325) =< s(1306)
s(1326) =< s(1310)
s(1325) =< s(1310)
s(1327) =< s(1307)*2
s(1328) =< s(1307)
s(1329) =< s(1327)
s(1328) =< s(1327)
s(1330) =< s(1303)
s(1331) =< s(1304)
s(1330) =< s(1304)
s(1331) =< s(1308)
s(1330) =< s(1308)
s(1332) =< s(1303)*2
s(1333) =< s(1303)
s(1334) =< s(1332)
s(1333) =< s(1332)

  with precondition: [V_n>=3] 

* Chain [153]: 3*s(1340)+55*s(1342)+5*s(1343)+2*s(1344)+2*s(1345)+8*s(1359)+4*s(1360)+40*s(1362)+16*s(1363)+40*s(1365)+20*s(1366)+4*s(1367)+2*s(1368)+2*s(1369)+24*s(1370)+2*s(1371)+2*s(1372)+4*s(1373)+4*s(1374)+4*s(1376)+2*s(1377)+4*s(1378)+4*s(1379)+4*s(1381)+2*s(1382)+5
  Such that:s(1337) =< V_n
s(1338) =< 2*V_n
s(1339) =< V_n/2
s(1335) =< V_n/3
s(1336) =< 2/3*V_n
s(1340) =< s(1337)
s(1341) =< s(1337)
s(1342) =< s(1337)
s(1341) =< s(1338)
s(1342) =< s(1338)
s(1343) =< s(1339)
s(1342) =< s(1339)
s(1343) =< s(1338)
s(1343) =< s(1337)
s(1343) =< s(1335)
s(1342) =< s(1335)
s(1342) =< s(1336)
s(1344) =< s(1336)
s(1345) =< s(1336)
s(1346) =< s(1336)
s(1344) =< s(1337)
s(1345) =< s(1337)
s(1346) =< s(1337)
s(1347) =< s(1339)
s(1348) =< s(1337)
s(1349) =< s(1339)*2
s(1350) =< s(1341)* (1/2)
s(1351) =< s(1343)*s(1337)
s(1352) =< s(1343)*s(1339)
s(1353) =< s(1342)*s(1349)
s(1354) =< s(1342)*s(1347)
s(1355) =< s(1342)*s(1348)
s(1356) =< s(1351)* (1/2)
s(1357) =< s(1353)* (1/2)
s(1358) =< s(1355)* (1/2)
s(1359) =< s(1350)
s(1360) =< s(1350)
s(1359) =< s(1341)
s(1361) =< s(1355)
s(1362) =< s(1355)
s(1361) =< s(1353)
s(1362) =< s(1353)
s(1363) =< s(1357)
s(1362) =< s(1357)
s(1363) =< s(1354)
s(1362) =< s(1354)
s(1364) =< s(1361)*2
s(1365) =< s(1361)
s(1366) =< s(1364)
s(1365) =< s(1364)
s(1367) =< s(1355)
s(1368) =< s(1346)
s(1369) =< s(1346)
s(1367) =< s(1353)
s(1368) =< s(1353)
s(1370) =< s(1354)
s(1370) =< s(1353)
s(1370) =< s(1357)
s(1371) =< s(1355)
s(1345) =< s(1353)
s(1372) =< s(1353)
s(1373) =< s(1355)
s(1374) =< s(1354)
s(1373) =< s(1354)
s(1374) =< s(1358)
s(1373) =< s(1358)
s(1375) =< s(1355)*2
s(1376) =< s(1355)
s(1377) =< s(1375)
s(1376) =< s(1375)
s(1378) =< s(1351)
s(1379) =< s(1352)
s(1378) =< s(1352)
s(1379) =< s(1356)
s(1378) =< s(1356)
s(1380) =< s(1351)*2
s(1381) =< s(1351)
s(1382) =< s(1380)
s(1381) =< s(1380)

  with precondition: [V_n>=3] 

* Chain [152]: 2*s(1387)+1*s(1388)+35*s(1389)+5*s(1390)+20*s(1391)+2*s(1392)+1*s(1393)+1*s(1395)+8*s(1412)+4*s(1413)+24*s(1415)+12*s(1416)+24*s(1418)+12*s(1419)+2*s(1420)+1*s(1421)+2*s(1422)+12*s(1423)+1*s(1424)+1*s(1425)+4*s(1426)+4*s(1427)+4*s(1429)+2*s(1430)+16*s(1432)+4*s(1433)+16*s(1435)+8*s(1436)+2*s(1437)+1*s(1438)+12*s(1439)+1*s(1440)+1*s(1441)+4*s(1442)+4*s(1443)+4*s(1445)+2*s(1446)+5
  Such that:s(1385) =< V_n
s(1386) =< V_n/2
s(1383) =< V_n/3
s(1384) =< 2/3*V_n
s(1387) =< s(1386)
s(1388) =< s(1386)
s(1387) =< s(1385)
s(1389) =< s(1385)
s(1390) =< s(1386)
s(1391) =< s(1386)
s(1389) =< s(1386)
s(1390) =< s(1383)
s(1391) =< s(1383)
s(1389) =< s(1383)
s(1391) =< s(1384)
s(1389) =< s(1384)
s(1392) =< s(1384)
s(1393) =< s(1384)
s(1394) =< s(1384)
s(1395) =< s(1384)
s(1392) =< s(1386)
s(1393) =< s(1386)
s(1394) =< s(1386)
s(1395) =< s(1386)
s(1396) =< s(1386)
s(1397) =< s(1385)
s(1398) =< s(1386)*2
s(1399) =< s(1385)* (1/2)
s(1400) =< s(1390)*s(1385)
s(1401) =< s(1390)*s(1386)
s(1402) =< s(1389)*s(1398)
s(1403) =< s(1389)*s(1396)
s(1404) =< s(1389)*s(1397)
s(1405) =< s(1391)*s(1398)
s(1406) =< s(1391)*s(1396)
s(1407) =< s(1391)*s(1397)
s(1408) =< s(1400)* (1/2)
s(1409) =< s(1402)* (1/2)
s(1410) =< s(1404)* (1/2)
s(1411) =< s(1405)* (1/2)
s(1412) =< s(1399)
s(1413) =< s(1399)
s(1412) =< s(1385)
s(1414) =< s(1404)
s(1415) =< s(1404)
s(1414) =< s(1402)
s(1415) =< s(1402)
s(1416) =< s(1409)
s(1415) =< s(1409)
s(1416) =< s(1403)
s(1415) =< s(1403)
s(1417) =< s(1414)*2
s(1418) =< s(1414)
s(1419) =< s(1417)
s(1418) =< s(1417)
s(1420) =< s(1404)
s(1421) =< s(1394)
s(1422) =< s(1394)
s(1420) =< s(1402)
s(1421) =< s(1402)
s(1423) =< s(1403)
s(1423) =< s(1402)
s(1423) =< s(1409)
s(1424) =< s(1404)
s(1395) =< s(1402)
s(1425) =< s(1402)
s(1426) =< s(1404)
s(1427) =< s(1403)
s(1426) =< s(1403)
s(1427) =< s(1410)
s(1426) =< s(1410)
s(1428) =< s(1404)*2
s(1429) =< s(1404)
s(1430) =< s(1428)
s(1429) =< s(1428)
s(1431) =< s(1407)
s(1432) =< s(1407)
s(1431) =< s(1405)
s(1432) =< s(1405)
s(1433) =< s(1411)
s(1432) =< s(1411)
s(1433) =< s(1406)
s(1432) =< s(1406)
s(1434) =< s(1431)*2
s(1435) =< s(1431)
s(1436) =< s(1434)
s(1435) =< s(1434)
s(1437) =< s(1407)
s(1438) =< s(1394)
s(1437) =< s(1405)
s(1438) =< s(1405)
s(1439) =< s(1406)
s(1439) =< s(1405)
s(1439) =< s(1411)
s(1440) =< s(1407)
s(1393) =< s(1405)
s(1441) =< s(1405)
s(1442) =< s(1400)
s(1443) =< s(1401)
s(1442) =< s(1401)
s(1443) =< s(1408)
s(1442) =< s(1408)
s(1444) =< s(1400)*2
s(1445) =< s(1400)
s(1446) =< s(1444)
s(1445) =< s(1444)

  with precondition: [V_n>=4] 

* Chain [151]: 2*s(1451)+1*s(1452)+35*s(1453)+5*s(1454)+20*s(1455)+2*s(1456)+1*s(1457)+1*s(1459)+8*s(1476)+4*s(1477)+24*s(1479)+12*s(1480)+24*s(1482)+12*s(1483)+2*s(1484)+1*s(1485)+2*s(1486)+12*s(1487)+1*s(1488)+1*s(1489)+4*s(1490)+4*s(1491)+4*s(1493)+2*s(1494)+16*s(1496)+4*s(1497)+16*s(1499)+8*s(1500)+2*s(1501)+1*s(1502)+12*s(1503)+1*s(1504)+1*s(1505)+4*s(1506)+4*s(1507)+4*s(1509)+2*s(1510)+5
  Such that:s(1449) =< V_n
s(1450) =< V_n/2
s(1447) =< V_n/3
s(1448) =< 2/3*V_n
s(1451) =< s(1450)
s(1452) =< s(1450)
s(1451) =< s(1449)
s(1453) =< s(1449)
s(1454) =< s(1450)
s(1455) =< s(1450)
s(1453) =< s(1450)
s(1454) =< s(1447)
s(1455) =< s(1447)
s(1453) =< s(1447)
s(1455) =< s(1448)
s(1453) =< s(1448)
s(1456) =< s(1448)
s(1457) =< s(1448)
s(1458) =< s(1448)
s(1459) =< s(1448)
s(1456) =< s(1450)
s(1457) =< s(1450)
s(1458) =< s(1450)
s(1459) =< s(1450)
s(1460) =< s(1450)
s(1461) =< s(1449)
s(1462) =< s(1450)*2
s(1463) =< s(1449)* (1/2)
s(1464) =< s(1454)*s(1449)
s(1465) =< s(1454)*s(1450)
s(1466) =< s(1453)*s(1462)
s(1467) =< s(1453)*s(1460)
s(1468) =< s(1453)*s(1461)
s(1469) =< s(1455)*s(1462)
s(1470) =< s(1455)*s(1460)
s(1471) =< s(1455)*s(1461)
s(1472) =< s(1464)* (1/2)
s(1473) =< s(1466)* (1/2)
s(1474) =< s(1468)* (1/2)
s(1475) =< s(1469)* (1/2)
s(1476) =< s(1463)
s(1477) =< s(1463)
s(1476) =< s(1449)
s(1478) =< s(1468)
s(1479) =< s(1468)
s(1478) =< s(1466)
s(1479) =< s(1466)
s(1480) =< s(1473)
s(1479) =< s(1473)
s(1480) =< s(1467)
s(1479) =< s(1467)
s(1481) =< s(1478)*2
s(1482) =< s(1478)
s(1483) =< s(1481)
s(1482) =< s(1481)
s(1484) =< s(1468)
s(1485) =< s(1458)
s(1486) =< s(1458)
s(1484) =< s(1466)
s(1485) =< s(1466)
s(1487) =< s(1467)
s(1487) =< s(1466)
s(1487) =< s(1473)
s(1488) =< s(1468)
s(1459) =< s(1466)
s(1489) =< s(1466)
s(1490) =< s(1468)
s(1491) =< s(1467)
s(1490) =< s(1467)
s(1491) =< s(1474)
s(1490) =< s(1474)
s(1492) =< s(1468)*2
s(1493) =< s(1468)
s(1494) =< s(1492)
s(1493) =< s(1492)
s(1495) =< s(1471)
s(1496) =< s(1471)
s(1495) =< s(1469)
s(1496) =< s(1469)
s(1497) =< s(1475)
s(1496) =< s(1475)
s(1497) =< s(1470)
s(1496) =< s(1470)
s(1498) =< s(1495)*2
s(1499) =< s(1495)
s(1500) =< s(1498)
s(1499) =< s(1498)
s(1501) =< s(1471)
s(1502) =< s(1458)
s(1501) =< s(1469)
s(1502) =< s(1469)
s(1503) =< s(1470)
s(1503) =< s(1469)
s(1503) =< s(1475)
s(1504) =< s(1471)
s(1457) =< s(1469)
s(1505) =< s(1469)
s(1506) =< s(1464)
s(1507) =< s(1465)
s(1506) =< s(1465)
s(1507) =< s(1472)
s(1506) =< s(1472)
s(1508) =< s(1464)*2
s(1509) =< s(1464)
s(1510) =< s(1508)
s(1509) =< s(1508)

  with precondition: [V_n>=4] 

* Chain [150]: 4*s(1516)+55*s(1518)+5*s(1519)+2*s(1520)+2*s(1521)+8*s(1535)+4*s(1536)+40*s(1538)+16*s(1539)+40*s(1541)+20*s(1542)+4*s(1543)+2*s(1544)+2*s(1545)+24*s(1546)+2*s(1547)+2*s(1548)+4*s(1549)+4*s(1550)+4*s(1552)+2*s(1553)+4*s(1554)+4*s(1555)+4*s(1557)+2*s(1558)+6
  Such that:s(1513) =< V_n
s(1514) =< 2*V_n
s(1515) =< V_n/2
s(1511) =< V_n/3
s(1512) =< 2/3*V_n
s(1516) =< s(1513)
s(1517) =< s(1513)
s(1518) =< s(1513)
s(1517) =< s(1514)
s(1518) =< s(1514)
s(1519) =< s(1515)
s(1518) =< s(1515)
s(1519) =< s(1514)
s(1519) =< s(1513)
s(1519) =< s(1511)
s(1518) =< s(1511)
s(1518) =< s(1512)
s(1520) =< s(1512)
s(1521) =< s(1512)
s(1522) =< s(1512)
s(1520) =< s(1513)
s(1521) =< s(1513)
s(1522) =< s(1513)
s(1523) =< s(1515)
s(1524) =< s(1513)
s(1525) =< s(1515)*2
s(1526) =< s(1517)* (1/2)
s(1527) =< s(1519)*s(1513)
s(1528) =< s(1519)*s(1515)
s(1529) =< s(1518)*s(1525)
s(1530) =< s(1518)*s(1523)
s(1531) =< s(1518)*s(1524)
s(1532) =< s(1527)* (1/2)
s(1533) =< s(1529)* (1/2)
s(1534) =< s(1531)* (1/2)
s(1535) =< s(1526)
s(1536) =< s(1526)
s(1535) =< s(1517)
s(1537) =< s(1531)
s(1538) =< s(1531)
s(1537) =< s(1529)
s(1538) =< s(1529)
s(1539) =< s(1533)
s(1538) =< s(1533)
s(1539) =< s(1530)
s(1538) =< s(1530)
s(1540) =< s(1537)*2
s(1541) =< s(1537)
s(1542) =< s(1540)
s(1541) =< s(1540)
s(1543) =< s(1531)
s(1544) =< s(1522)
s(1545) =< s(1522)
s(1543) =< s(1529)
s(1544) =< s(1529)
s(1546) =< s(1530)
s(1546) =< s(1529)
s(1546) =< s(1533)
s(1547) =< s(1531)
s(1521) =< s(1529)
s(1548) =< s(1529)
s(1549) =< s(1531)
s(1550) =< s(1530)
s(1549) =< s(1530)
s(1550) =< s(1534)
s(1549) =< s(1534)
s(1551) =< s(1531)*2
s(1552) =< s(1531)
s(1553) =< s(1551)
s(1552) =< s(1551)
s(1554) =< s(1527)
s(1555) =< s(1528)
s(1554) =< s(1528)
s(1555) =< s(1532)
s(1554) =< s(1532)
s(1556) =< s(1527)*2
s(1557) =< s(1527)
s(1558) =< s(1556)
s(1557) =< s(1556)

  with precondition: [V_n>=5] 

* Chain [149]: 4*s(1564)+55*s(1566)+5*s(1567)+2*s(1568)+2*s(1569)+8*s(1583)+4*s(1584)+40*s(1586)+16*s(1587)+40*s(1589)+20*s(1590)+4*s(1591)+2*s(1592)+2*s(1593)+24*s(1594)+2*s(1595)+2*s(1596)+4*s(1597)+4*s(1598)+4*s(1600)+2*s(1601)+4*s(1602)+4*s(1603)+4*s(1605)+2*s(1606)+6
  Such that:s(1561) =< V_n
s(1562) =< 2*V_n
s(1563) =< V_n/2
s(1559) =< V_n/3
s(1560) =< 2/3*V_n
s(1564) =< s(1561)
s(1565) =< s(1561)
s(1566) =< s(1561)
s(1565) =< s(1562)
s(1566) =< s(1562)
s(1567) =< s(1563)
s(1566) =< s(1563)
s(1567) =< s(1562)
s(1567) =< s(1561)
s(1567) =< s(1559)
s(1566) =< s(1559)
s(1566) =< s(1560)
s(1568) =< s(1560)
s(1569) =< s(1560)
s(1570) =< s(1560)
s(1568) =< s(1561)
s(1569) =< s(1561)
s(1570) =< s(1561)
s(1571) =< s(1563)
s(1572) =< s(1561)
s(1573) =< s(1563)*2
s(1574) =< s(1565)* (1/2)
s(1575) =< s(1567)*s(1561)
s(1576) =< s(1567)*s(1563)
s(1577) =< s(1566)*s(1573)
s(1578) =< s(1566)*s(1571)
s(1579) =< s(1566)*s(1572)
s(1580) =< s(1575)* (1/2)
s(1581) =< s(1577)* (1/2)
s(1582) =< s(1579)* (1/2)
s(1583) =< s(1574)
s(1584) =< s(1574)
s(1583) =< s(1565)
s(1585) =< s(1579)
s(1586) =< s(1579)
s(1585) =< s(1577)
s(1586) =< s(1577)
s(1587) =< s(1581)
s(1586) =< s(1581)
s(1587) =< s(1578)
s(1586) =< s(1578)
s(1588) =< s(1585)*2
s(1589) =< s(1585)
s(1590) =< s(1588)
s(1589) =< s(1588)
s(1591) =< s(1579)
s(1592) =< s(1570)
s(1593) =< s(1570)
s(1591) =< s(1577)
s(1592) =< s(1577)
s(1594) =< s(1578)
s(1594) =< s(1577)
s(1594) =< s(1581)
s(1595) =< s(1579)
s(1569) =< s(1577)
s(1596) =< s(1577)
s(1597) =< s(1579)
s(1598) =< s(1578)
s(1597) =< s(1578)
s(1598) =< s(1582)
s(1597) =< s(1582)
s(1599) =< s(1579)*2
s(1600) =< s(1579)
s(1601) =< s(1599)
s(1600) =< s(1599)
s(1602) =< s(1575)
s(1603) =< s(1576)
s(1602) =< s(1576)
s(1603) =< s(1580)
s(1602) =< s(1580)
s(1604) =< s(1575)*2
s(1605) =< s(1575)
s(1606) =< s(1604)
s(1605) =< s(1604)

  with precondition: [V_n>=5] 

* Chain [148]: 1*s(1611)+2*s(1612)+1*s(1613)+35*s(1614)+5*s(1615)+20*s(1616)+2*s(1617)+1*s(1618)+1*s(1620)+8*s(1637)+4*s(1638)+24*s(1640)+12*s(1641)+24*s(1643)+12*s(1644)+2*s(1645)+1*s(1646)+2*s(1647)+12*s(1648)+1*s(1649)+1*s(1650)+4*s(1651)+4*s(1652)+4*s(1654)+2*s(1655)+16*s(1657)+4*s(1658)+16*s(1660)+8*s(1661)+2*s(1662)+1*s(1663)+12*s(1664)+1*s(1665)+1*s(1666)+4*s(1667)+4*s(1668)+4*s(1670)+2*s(1671)+6
  Such that:s(1609) =< V_n
s(1610) =< V_n/2
s(1607) =< V_n/3
s(1608) =< 2/3*V_n
s(1611) =< s(1609)
s(1612) =< s(1610)
s(1613) =< s(1610)
s(1612) =< s(1609)
s(1614) =< s(1609)
s(1615) =< s(1610)
s(1616) =< s(1610)
s(1614) =< s(1610)
s(1615) =< s(1607)
s(1616) =< s(1607)
s(1614) =< s(1607)
s(1616) =< s(1608)
s(1614) =< s(1608)
s(1617) =< s(1608)
s(1618) =< s(1608)
s(1619) =< s(1608)
s(1620) =< s(1608)
s(1617) =< s(1610)
s(1618) =< s(1610)
s(1619) =< s(1610)
s(1620) =< s(1610)
s(1621) =< s(1610)
s(1622) =< s(1609)
s(1623) =< s(1610)*2
s(1624) =< s(1609)* (1/2)
s(1625) =< s(1615)*s(1609)
s(1626) =< s(1615)*s(1610)
s(1627) =< s(1614)*s(1623)
s(1628) =< s(1614)*s(1621)
s(1629) =< s(1614)*s(1622)
s(1630) =< s(1616)*s(1623)
s(1631) =< s(1616)*s(1621)
s(1632) =< s(1616)*s(1622)
s(1633) =< s(1625)* (1/2)
s(1634) =< s(1627)* (1/2)
s(1635) =< s(1629)* (1/2)
s(1636) =< s(1630)* (1/2)
s(1637) =< s(1624)
s(1638) =< s(1624)
s(1637) =< s(1609)
s(1639) =< s(1629)
s(1640) =< s(1629)
s(1639) =< s(1627)
s(1640) =< s(1627)
s(1641) =< s(1634)
s(1640) =< s(1634)
s(1641) =< s(1628)
s(1640) =< s(1628)
s(1642) =< s(1639)*2
s(1643) =< s(1639)
s(1644) =< s(1642)
s(1643) =< s(1642)
s(1645) =< s(1629)
s(1646) =< s(1619)
s(1647) =< s(1619)
s(1645) =< s(1627)
s(1646) =< s(1627)
s(1648) =< s(1628)
s(1648) =< s(1627)
s(1648) =< s(1634)
s(1649) =< s(1629)
s(1620) =< s(1627)
s(1650) =< s(1627)
s(1651) =< s(1629)
s(1652) =< s(1628)
s(1651) =< s(1628)
s(1652) =< s(1635)
s(1651) =< s(1635)
s(1653) =< s(1629)*2
s(1654) =< s(1629)
s(1655) =< s(1653)
s(1654) =< s(1653)
s(1656) =< s(1632)
s(1657) =< s(1632)
s(1656) =< s(1630)
s(1657) =< s(1630)
s(1658) =< s(1636)
s(1657) =< s(1636)
s(1658) =< s(1631)
s(1657) =< s(1631)
s(1659) =< s(1656)*2
s(1660) =< s(1656)
s(1661) =< s(1659)
s(1660) =< s(1659)
s(1662) =< s(1632)
s(1663) =< s(1619)
s(1662) =< s(1630)
s(1663) =< s(1630)
s(1664) =< s(1631)
s(1664) =< s(1630)
s(1664) =< s(1636)
s(1665) =< s(1632)
s(1618) =< s(1630)
s(1666) =< s(1630)
s(1667) =< s(1625)
s(1668) =< s(1626)
s(1667) =< s(1626)
s(1668) =< s(1633)
s(1667) =< s(1633)
s(1669) =< s(1625)*2
s(1670) =< s(1625)
s(1671) =< s(1669)
s(1670) =< s(1669)

  with precondition: [V_n>=8] 

* Chain [147]: 1*s(1676)+2*s(1677)+1*s(1678)+35*s(1679)+5*s(1680)+20*s(1681)+2*s(1682)+1*s(1683)+1*s(1685)+8*s(1702)+4*s(1703)+24*s(1705)+12*s(1706)+24*s(1708)+12*s(1709)+2*s(1710)+1*s(1711)+2*s(1712)+12*s(1713)+1*s(1714)+1*s(1715)+4*s(1716)+4*s(1717)+4*s(1719)+2*s(1720)+16*s(1722)+4*s(1723)+16*s(1725)+8*s(1726)+2*s(1727)+1*s(1728)+12*s(1729)+1*s(1730)+1*s(1731)+4*s(1732)+4*s(1733)+4*s(1735)+2*s(1736)+6
  Such that:s(1674) =< V_n
s(1675) =< V_n/2
s(1672) =< V_n/3
s(1673) =< 2/3*V_n
s(1676) =< s(1674)
s(1677) =< s(1675)
s(1678) =< s(1675)
s(1677) =< s(1674)
s(1679) =< s(1674)
s(1680) =< s(1675)
s(1681) =< s(1675)
s(1679) =< s(1675)
s(1680) =< s(1672)
s(1681) =< s(1672)
s(1679) =< s(1672)
s(1681) =< s(1673)
s(1679) =< s(1673)
s(1682) =< s(1673)
s(1683) =< s(1673)
s(1684) =< s(1673)
s(1685) =< s(1673)
s(1682) =< s(1675)
s(1683) =< s(1675)
s(1684) =< s(1675)
s(1685) =< s(1675)
s(1686) =< s(1675)
s(1687) =< s(1674)
s(1688) =< s(1675)*2
s(1689) =< s(1674)* (1/2)
s(1690) =< s(1680)*s(1674)
s(1691) =< s(1680)*s(1675)
s(1692) =< s(1679)*s(1688)
s(1693) =< s(1679)*s(1686)
s(1694) =< s(1679)*s(1687)
s(1695) =< s(1681)*s(1688)
s(1696) =< s(1681)*s(1686)
s(1697) =< s(1681)*s(1687)
s(1698) =< s(1690)* (1/2)
s(1699) =< s(1692)* (1/2)
s(1700) =< s(1694)* (1/2)
s(1701) =< s(1695)* (1/2)
s(1702) =< s(1689)
s(1703) =< s(1689)
s(1702) =< s(1674)
s(1704) =< s(1694)
s(1705) =< s(1694)
s(1704) =< s(1692)
s(1705) =< s(1692)
s(1706) =< s(1699)
s(1705) =< s(1699)
s(1706) =< s(1693)
s(1705) =< s(1693)
s(1707) =< s(1704)*2
s(1708) =< s(1704)
s(1709) =< s(1707)
s(1708) =< s(1707)
s(1710) =< s(1694)
s(1711) =< s(1684)
s(1712) =< s(1684)
s(1710) =< s(1692)
s(1711) =< s(1692)
s(1713) =< s(1693)
s(1713) =< s(1692)
s(1713) =< s(1699)
s(1714) =< s(1694)
s(1685) =< s(1692)
s(1715) =< s(1692)
s(1716) =< s(1694)
s(1717) =< s(1693)
s(1716) =< s(1693)
s(1717) =< s(1700)
s(1716) =< s(1700)
s(1718) =< s(1694)*2
s(1719) =< s(1694)
s(1720) =< s(1718)
s(1719) =< s(1718)
s(1721) =< s(1697)
s(1722) =< s(1697)
s(1721) =< s(1695)
s(1722) =< s(1695)
s(1723) =< s(1701)
s(1722) =< s(1701)
s(1723) =< s(1696)
s(1722) =< s(1696)
s(1724) =< s(1721)*2
s(1725) =< s(1721)
s(1726) =< s(1724)
s(1725) =< s(1724)
s(1727) =< s(1697)
s(1728) =< s(1684)
s(1727) =< s(1695)
s(1728) =< s(1695)
s(1729) =< s(1696)
s(1729) =< s(1695)
s(1729) =< s(1701)
s(1730) =< s(1697)
s(1683) =< s(1695)
s(1731) =< s(1695)
s(1732) =< s(1690)
s(1733) =< s(1691)
s(1732) =< s(1691)
s(1733) =< s(1698)
s(1732) =< s(1698)
s(1734) =< s(1690)*2
s(1735) =< s(1690)
s(1736) =< s(1734)
s(1735) =< s(1734)

  with precondition: [V_n>=8] 


Closed-form bounds of eval_sipmamergesort_init_start(V_n,B): 
-------------------------------------
* Chain [159] with precondition: [V_n=1] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [158] with precondition: [V_n=2] 
    - Upper bound: 11 
    - Complexity: constant 
* Chain [157] with precondition: [V_n=2] 
    - Upper bound: 11 
    - Complexity: constant 
* Chain [156] with precondition: [0>=V_n] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [155] with precondition: [0>=V_n] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [154] with precondition: [V_n>=3] 
    - Upper bound: 64*V_n+5+138*V_n*V_n+V_n/2* (12*V_n)+16/3*V_n+5/2*V_n+24*V_n*V_n+V_n/2* (2*V_n) 
    - Complexity: n^2 
* Chain [153] with precondition: [V_n>=3] 
    - Upper bound: 64*V_n+5+138*V_n*V_n+V_n/2* (12*V_n)+16/3*V_n+5/2*V_n+24*V_n*V_n+V_n/2* (2*V_n) 
    - Complexity: n^2 
* Chain [152] with precondition: [V_n>=4] 
    - Upper bound: 41*V_n+5+87*V_n*V_n+V_n/2* (63*V_n)+16/3*V_n+14*V_n+15*V_n*V_n+V_n/2* (11*V_n) 
    - Complexity: n^2 
* Chain [151] with precondition: [V_n>=4] 
    - Upper bound: 41*V_n+5+87*V_n*V_n+V_n/2* (63*V_n)+16/3*V_n+14*V_n+15*V_n*V_n+V_n/2* (11*V_n) 
    - Complexity: n^2 
* Chain [150] with precondition: [V_n>=5] 
    - Upper bound: 65*V_n+6+138*V_n*V_n+V_n/2* (12*V_n)+16/3*V_n+5/2*V_n+24*V_n*V_n+V_n/2* (2*V_n) 
    - Complexity: n^2 
* Chain [149] with precondition: [V_n>=5] 
    - Upper bound: 65*V_n+6+138*V_n*V_n+V_n/2* (12*V_n)+16/3*V_n+5/2*V_n+24*V_n*V_n+V_n/2* (2*V_n) 
    - Complexity: n^2 
* Chain [148] with precondition: [V_n>=8] 
    - Upper bound: 42*V_n+6+87*V_n*V_n+V_n/2* (63*V_n)+16/3*V_n+14*V_n+15*V_n*V_n+V_n/2* (11*V_n) 
    - Complexity: n^2 
* Chain [147] with precondition: [V_n>=8] 
    - Upper bound: 42*V_n+6+87*V_n*V_n+V_n/2* (63*V_n)+16/3*V_n+14*V_n+15*V_n*V_n+V_n/2* (11*V_n) 
    - Complexity: n^2 

### Maximum cost of eval_sipmamergesort_init_start(V_n,B): max([6,nat(V_n)*87*nat(V_n)+nat(V_n)*41+nat(V_n)*12*nat(V_n/2)+nat(2/3*V_n)*8+nat(V_n/2)*5+nat(V_n/2)*30*nat(V_n)+nat(V_n/2)*4*nat(V_n/2)+max([nat(V_n)+max([nat(V_n)*51*nat(V_n)+nat(V_n)*22+nat(V_n/2)*18*nat(V_n)+ (nat(V_n)+1),nat(V_n)*51*nat(V_n/2)+1+nat(V_n/2)*23+nat(V_n/2)*18*nat(V_n/2)]),nat(V_n)*51*nat(V_n/2)+nat(V_n/2)*23+nat(V_n/2)*18*nat(V_n/2)])])+5 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 438 ms.
* Invariants computed in 585 ms.
   - Backward Invariants 372 ms.
   - Transitive Invariants 73 ms.
* Refinement performed in 1632 ms.
* Termination proved in 89 ms.
* Upper bounds computed in 6128 ms.
   - Equation cost structures 1629 ms.
   - Phase cost structures 4069 ms.
   - Chain cost structures 708 ms.
   - Solving cost expressions 87 ms.
* Total analysis performed in 9216 ms.

