Warning: Ignored call to eval_counterex1c_stop/1 in equation eval_counterex1c__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1c_11/6,eval_counterex1c_12/7,eval_counterex1c_15/6,eval_counterex1c_16/7,eval_counterex1c_LeafBlock8_in/5,eval_counterex1c_LeafBlock_in/5,eval_counterex1c_NodeBlock_in/5,eval_counterex1c_bb1_in/5,eval_counterex1c_bb2_in/5,eval_counterex1c_bb3_in/5,eval_counterex1c_bb4_in/5]
1. non_recursive  : [eval_counterex1c__critedge_in/1]
2. non_recursive  : [eval_counterex1c_NewDefault_in/1]
3. non_recursive  : [loop_cont_eval_counterex1c_bb1_in/2]
4. non_recursive  : [eval_counterex1c_9/5]
5. non_recursive  : [eval_counterex1c_8/5]
6. non_recursive  : [eval_counterex1c_7/5]
7. non_recursive  : [eval_counterex1c_6/5]
8. non_recursive  : [eval_counterex1c_5/5]
9. non_recursive  : [eval_counterex1c_4/5]
10. non_recursive  : [eval_counterex1c_3/5]
11. non_recursive  : [eval_counterex1c_2/5]
12. non_recursive  : [eval_counterex1c_1/5]
13. non_recursive  : [eval_counterex1c_0/5]
14. non_recursive  : [eval_counterex1c_bb0_in/5]
15. non_recursive  : [eval_counterex1c_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1c_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_counterex1c_bb1_in/2
4. SCC is partially evaluated into eval_counterex1c_9/5
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_counterex1c_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1c_bb1_in/5 
* CE 11 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 3 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 4 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 


#### Refined cost equations eval_counterex1c_bb1_in/5 
* CE 14: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [V__04>=V_n+1,B=3] 
* CE 15: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [0>=V__01+1,B=3] 
* CE 16: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [0>=V__04+1,B=3] 
* CE 17: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [V_n>=V__04,V__0>=2,V__01>=0,V__04>=0,B=2] 
* CE 18: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 0
     [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,B=2] 
* CE 19: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1c_bb1_in(V_n,C,V__01,D,B)
     [V_n>=V__04,V__01>=0,V__04>=0,V__04=C+1,D=1,V__0=1] 
* CE 20: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1c_bb1_in(V_n,C,D,E,B)
     [V_n>=V__04,V__01>=0,V__04>=0,V__01=D+1,V__04=C+1,E=0,V__0=1] 
* CE 21: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1c_bb1_in(V_n,C,V__01,D,B)
     [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=C,D=1,V__0=0] 
* CE 22: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) = 1+ eval_counterex1c_bb1_in(V_n,C,V__01,D,B)
     [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=C,D=0,V__0=0] 

### Cost equations --> "Loop" of eval_counterex1c_bb1_in/5 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [14] --> Loop 18 
* CEs [15] --> Loop 19 
* CEs [16] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [18] --> Loop 22 

#### Loops of eval_counterex1c_bb1_in/5 
* Loop 14: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1c_bb1_in(V_n,V__04',V__01,V__0',B)
                  [V_n>=V__04,V__01>=0,V__04>=0,V__04=V__04'+1,V__0'=1,V__0=1] 
* Loop 15: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1c_bb1_in(V_n,V__04',V__01',V__0',B)
                  [V_n>=V__04,V__01>=0,V__04>=0,V__01=V__01'+1,V__04=V__04'+1,V__0'=0,V__0=1] 
* Loop 16: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1c_bb1_in(V_n,V__04',V__01,V__0',B)
                  [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=V__04',V__0'=1,V__0=0] 
* Loop 17: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B)->  eval_counterex1c_bb1_in(V_n,V__04',V__01,V__0',B)
                  [V_n>=V__04,V__01>=0,V__04>=0,V__04+1=V__04',V__0'=0,V__0=0] 
* Loop 18: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) [V__04>=V_n+1,B=3] 
* Loop 19: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) [0>=V__01+1,B=3] 
* Loop 20: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) [0>=V__04+1,B=3] 
* Loop 21: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) [V_n>=V__04,V__0>=2,V__01>=0,V__04>=0,B=2] 
* Loop 22: eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) [V_n>=V__04,V__01>=0,V__04>=0,0>=V__0+1,B=2] 

### Ranking functions of CR eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) 

#### Partial ranking functions of CR eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) 
* Partial RF of phase [14,15,16,17]:
  - RF of loop [14:1,15:1]:
    V__04+1 depends on loops [16:1,17:1] 
  - RF of loop [15:1]:
    V__0 depends on loops [16:1] 
    V__01+1
  - RF of loop [16:1]:
    -V__0+1 depends on loops [15:1] 
  - RF of loop [16:1,17:1]:
    V_n-V__04+1 depends on loops [14:1,15:1] 


### Resulting Chains:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) 
* [[14,15,16,17]]...
* [[14,15,16,17],20]
* [[14,15,16,17],19]
* [[14,15,16,17],18]
* [22]
* [21]
* [20]
* [19]
* [18]


### Specialization of cost equations loop_cont_eval_counterex1c_bb1_in/2 
* CE 13 is refined into CE [23] 
* CE 12 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_counterex1c_bb1_in/2 
* CE 23: loop_cont_eval_counterex1c_bb1_in(C,A) = 0
     [C=3] 
* CE 24: loop_cont_eval_counterex1c_bb1_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_counterex1c_bb1_in/2 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

#### Loops of loop_cont_eval_counterex1c_bb1_in/2 
* Loop 23: loop_cont_eval_counterex1c_bb1_in(C,A) [C=3] 
* Loop 24: loop_cont_eval_counterex1c_bb1_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_counterex1c_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_counterex1c_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_counterex1c_bb1_in(C,A) 
* [24]
* [23]


### Specialization of cost equations eval_counterex1c_9/5 
* CE 2 is refined into CE [25,26,27,28,29,30,31,32,33] 


#### Refined cost equations eval_counterex1c_9/5 
* CE 25: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[[14,15,16,17]]
     [V_n>=V_y,V_b>=0,V_x>=0,V_y>=0,1>=V_b] 
* CE 26: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[[14,15,16,17],20]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [V_n+V_b>=V_y+1,V_b>=0,V_x>=0,V_y>=0,1>=V_b,D=3,C=3] 
* CE 27: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[[14,15,16,17],19]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [V_n+V_b>=V_y+1,V_b>=0,V_x>=0,V_y>=0,1>=V_b,D=3,C=3] 
* CE 28: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[[14,15,16,17],18]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [V_x>=V_b,V_y>=V_b,V_n>=V_y,V_b>=0,1>=V_b,D=3,C=3] 
* CE 29: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[22]+ loop_cont_eval_counterex1c_bb1_in(D,B):[24]
     [V_n>=V_y,V_x>=0,V_y>=0,0>=V_b+1,D=2,C=2] 
* CE 30: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[21]+ loop_cont_eval_counterex1c_bb1_in(D,B):[24]
     [V_n>=V_y,V_b>=2,V_x>=0,V_y>=0,D=2,C=2] 
* CE 31: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[20]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [0>=V_y+1,D=3,C=3] 
* CE 32: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[19]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [0>=V_x+1,D=3,C=3] 
* CE 33: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) = 1+ eval_counterex1c_bb1_in(V_n,V_y,V_x,V_b,C):[18]+ loop_cont_eval_counterex1c_bb1_in(D,B):[23]
     [V_y>=V_n+1,D=3,C=3] 

### Cost equations --> "Loop" of eval_counterex1c_9/5 
* CEs [33] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [28] --> Loop 30 
* CEs [27] --> Loop 31 
* CEs [26] --> Loop 32 
* CEs [25] --> Loop 33 

#### Loops of eval_counterex1c_9/5 
* Loop 25: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_y>=V_n+1] 
* Loop 26: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=2] 
* Loop 27: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [0>=V_y+1] 
* Loop 28: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [0>=V_x+1] 
* Loop 29: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* Loop 30: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=V_b,V_x>=V_b,V_b>=0,1>=V_b] 
* Loop 31: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* Loop 32: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* Loop 33: eval_counterex1c_9(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 

### Ranking functions of CR eval_counterex1c_9(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_9(V_n,V_b,V_x,V_y,B) 


### Resulting Chains:eval_counterex1c_9(V_n,V_b,V_x,V_y,B) 
* [33]...
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]


### Specialization of cost equations eval_counterex1c_start/5 
* CE 1 is refined into CE [34,35,36,37,38,39,40,41,42] 


#### Refined cost equations eval_counterex1c_start/5 
* CE 34: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[33]
     [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* CE 35: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[32]
     [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* CE 36: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[31]
     [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* CE 37: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[30]
     [V_n>=V_y,V_y>=V_b,V_x>=V_b,V_b>=0,1>=V_b] 
* CE 38: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[29]
     [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* CE 39: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[28]
     [0>=V_x+1] 
* CE 40: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[27]
     [0>=V_y+1] 
* CE 41: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[26]
     [V_n>=V_y,V_y>=0,V_x>=0,V_b>=2] 
* CE 42: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) = 0+ eval_counterex1c_9(V_n,V_b,V_x,V_y,B):[25]
     [V_y>=V_n+1] 

### Cost equations --> "Loop" of eval_counterex1c_start/5 
* CEs [42] --> Loop 34 
* CEs [41] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [38] --> Loop 38 
* CEs [37] --> Loop 39 
* CEs [36] --> Loop 40 
* CEs [35] --> Loop 41 
* CEs [34] --> Loop 42 

#### Loops of eval_counterex1c_start/5 
* Loop 34: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_y>=V_n+1] 
* Loop 35: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=2] 
* Loop 36: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [0>=V_y+1] 
* Loop 37: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [0>=V_x+1] 
* Loop 38: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,0>=V_b+1] 
* Loop 39: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=V_b,V_x>=V_b,V_b>=0,1>=V_b] 
* Loop 40: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* Loop 41: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n+V_b>=V_y+1,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 
* Loop 42: eval_counterex1c_start(V_n,V_b,V_x,V_y,B) [V_n>=V_y,V_y>=0,V_x>=0,V_b>=0,1>=V_b] 

### Ranking functions of CR eval_counterex1c_start(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_start(V_n,V_b,V_x,V_y,B) 


### Resulting Chains:eval_counterex1c_start(V_n,V_b,V_x,V_y,B) 
* [42]...
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


Computing Bounds
=====================================

#### Cost of loops [14,15,16,17] 

 * loop 14:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 15:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 16:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
 * loop 17:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
1
#### Cost of phase [14,15,16,17]:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1
it(15) =< V__01-V__01'

#### Cost of phase [14,15,16,17]:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1
it(15) =< V__01-V__01'

#### Cost of phase [14,15,16,17]:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1
it(15) =< V__01-V__01'

#### Cost of phase [14,15,16,17]:eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) -> [eval_counterex1c_bb1_in(V_n',V__04',V__01',V__0',B')] 
3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1
it(15) =< V__01-V__01'

#### Cost of chains of eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B):
* Chain [[14,15,16,17]]...: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [1>=V__0,V__0>=0,V__01>=0,V_n>=V__04,V__04>=0] 

* Chain [[14,15,16,17],20]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [B=3,1>=V__0,V__04>=0,V__01>=0,V__0>=0,V__0+V_n>=V__04+1] 

* Chain [[14,15,16,17],19]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [B=3,1>=V__0,V__04>=0,V__01>=0,V__0>=0,V__0+V_n>=V__04+1] 

* Chain [[14,15,16,17],18]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01

  with precondition: [B=3,1>=V__0,V__0>=0,V_n>=V__04,V__04>=V__0,V__01>=V__0] 

* Chain [22]: 0
  with precondition: [B=2,0>=V__0+1,V__04>=0,V__01>=0,V_n>=V__04] 

* Chain [21]: 0
  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=2,V_n>=V__04] 

* Chain [20]: 0
  with precondition: [B=3,0>=V__04+1] 

* Chain [19]: 0
  with precondition: [B=3,0>=V__01+1] 

* Chain [18]: 0
  with precondition: [B=3,V__04>=V_n+1] 


#### Cost of chains of loop_cont_eval_counterex1c_bb1_in(C,A):
* Chain [24]: 0
  with precondition: [C=2] 

* Chain [23]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_counterex1c_9(V_n,V_b,V_x,V_y,B):
* Chain [33]...: 1*s(1)+3*s(2)+1
  Such that:s(1) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [32]: 1*s(3)+3*s(4)+1
  Such that:s(3) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [31]: 1*s(5)+3*s(6)+1
  Such that:s(5) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [30]: 1*s(7)+3*s(8)+1
  Such that:s(7) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [29]: 1
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [28]: 1
  with precondition: [0>=V_x+1] 

* Chain [27]: 1
  with precondition: [0>=V_y+1] 

* Chain [26]: 1
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [25]: 1
  with precondition: [V_y>=V_n+1] 


#### Cost of chains of eval_counterex1c_start(V_n,V_b,V_x,V_y,B):
* Chain [42]...: 1*s(9)+3*s(10)+1
  Such that:s(9) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [41]: 1*s(11)+3*s(12)+1
  Such that:s(11) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [40]: 1*s(13)+3*s(14)+1
  Such that:s(13) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [39]: 1*s(15)+3*s(16)+1
  Such that:s(15) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [38]: 1
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [37]: 1
  with precondition: [0>=V_x+1] 

* Chain [36]: 1
  with precondition: [0>=V_y+1] 

* Chain [35]: 1
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [34]: 1
  with precondition: [V_y>=V_n+1] 


Closed-form bounds of eval_counterex1c_start(V_n,V_b,V_x,V_y,B): 
-------------------------------------
* Chain [42]... with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [41] with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n+V_b>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40] with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n+V_b>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39] with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38] with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [37] with precondition: [0>=V_x+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [36] with precondition: [0>=V_y+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [35] with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [34] with precondition: [V_y>=V_n+1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_counterex1c_start(V_n,V_b,V_x,V_y,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 94 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 88 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 85 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 26 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 423 ms.

