Warning: Ignored call to eval_speedpldi4_stop/1 in equation eval_speedpldi4_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedpldi4_bb1_in/3,eval_speedpldi4_bb2_in/3]
1. non_recursive  : [eval_speedpldi4_bb3_in/1]
2. non_recursive  : [loop_cont_eval_speedpldi4_bb1_in/2]
3. non_recursive  : [eval_speedpldi4_2/3]
4. non_recursive  : [eval_speedpldi4_1/3]
5. non_recursive  : [eval_speedpldi4_0/3]
6. non_recursive  : [eval_speedpldi4_bb0_in/3]
7. non_recursive  : [eval_speedpldi4_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedpldi4_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_speedpldi4_2/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_speedpldi4_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedpldi4_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_speedpldi4_bb1_in/3 
* CE 8: eval_speedpldi4_bb1_in(V_m,V_i_0,B) = 0
     [V_m>=1,0>=V_i_0,B=2] 
* CE 9: eval_speedpldi4_bb1_in(V_m,V_i_0,B) = 1+ eval_speedpldi4_bb1_in(V_m,C,D)
     [V_i_0>=V_m,V_m>=1,V_m+C=V_i_0,D=2,B=2] 
* CE 10: eval_speedpldi4_bb1_in(V_m,V_i_0,B) = 1+ eval_speedpldi4_bb1_in(V_m,C,D)
     [V_m>=V_i_0+1,V_i_0>=1,V_i_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_speedpldi4_bb1_in/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

#### Loops of eval_speedpldi4_bb1_in/3 
* Loop 8: eval_speedpldi4_bb1_in(V_m,V_i_0,B)->  eval_speedpldi4_bb1_in(V_m,V_i_0',B')
                  [V_i_0>=V_m,V_m>=1,V_m+V_i_0'=V_i_0,B'=2,B=2] 
* Loop 9: eval_speedpldi4_bb1_in(V_m,V_i_0,B)->  eval_speedpldi4_bb1_in(V_m,V_i_0',B')
                  [V_m>=V_i_0+1,V_i_0>=1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 10: eval_speedpldi4_bb1_in(V_m,V_i_0,B) [V_m>=1,0>=V_i_0,B=2] 

### Ranking functions of CR eval_speedpldi4_bb1_in(V_m,V_i_0,B) 
* RF of phase [8]: [V_i_0,-V_m+V_i_0+1]
* RF of phase [9]: [V_i_0]

#### Partial ranking functions of CR eval_speedpldi4_bb1_in(V_m,V_i_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_i_0
    -V_m+V_i_0+1
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_i_0


### Resulting Chains:eval_speedpldi4_bb1_in(V_m,V_i_0,B) 
* [[8],[9],10]
* [[8],10]


### Specialization of cost equations eval_speedpldi4_2/3 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12,13] 
* CE 2 is refined into CE [14] 


#### Refined cost equations eval_speedpldi4_2/3 
* CE 11: eval_speedpldi4_2(V_m,V_n,B) = 0
     [V_m>=V_n] 
* CE 12: eval_speedpldi4_2(V_m,V_n,B) = 1+ eval_speedpldi4_bb1_in(V_m,V_n,C):[[8],[9],10]
     [V_n>=V_m+1,V_m>=2,C=2] 
* CE 13: eval_speedpldi4_2(V_m,V_n,B) = 1+ eval_speedpldi4_bb1_in(V_m,V_n,C):[[8],10]
     [V_n>=V_m+1,V_m>=1,C=2] 
* CE 14: eval_speedpldi4_2(V_m,V_n,B) = 0
     [0>=V_m] 

### Cost equations --> "Loop" of eval_speedpldi4_2/3 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_speedpldi4_2/3 
* Loop 11: eval_speedpldi4_2(V_m,V_n,B) [V_m>=V_n] 
* Loop 12: eval_speedpldi4_2(V_m,V_n,B) [V_n>=V_m+1,V_m>=2] 
* Loop 13: eval_speedpldi4_2(V_m,V_n,B) [V_n>=V_m+1,V_m>=1] 
* Loop 14: eval_speedpldi4_2(V_m,V_n,B) [0>=V_m] 

### Ranking functions of CR eval_speedpldi4_2(V_m,V_n,B) 

#### Partial ranking functions of CR eval_speedpldi4_2(V_m,V_n,B) 


### Resulting Chains:eval_speedpldi4_2(V_m,V_n,B) 
* [14]
* [13]
* [12]
* [11]


### Specialization of cost equations eval_speedpldi4_start/3 
* CE 1 is refined into CE [15,16,17,18] 


#### Refined cost equations eval_speedpldi4_start/3 
* CE 15: eval_speedpldi4_start(V_m,V_n,B) = 0+ eval_speedpldi4_2(V_m,V_n,B):[14]
     [0>=V_m] 
* CE 16: eval_speedpldi4_start(V_m,V_n,B) = 0+ eval_speedpldi4_2(V_m,V_n,B):[13]
     [V_n>=V_m+1,V_m>=1] 
* CE 17: eval_speedpldi4_start(V_m,V_n,B) = 0+ eval_speedpldi4_2(V_m,V_n,B):[12]
     [V_n>=V_m+1,V_m>=2] 
* CE 18: eval_speedpldi4_start(V_m,V_n,B) = 0+ eval_speedpldi4_2(V_m,V_n,B):[11]
     [V_m>=V_n] 

### Cost equations --> "Loop" of eval_speedpldi4_start/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

#### Loops of eval_speedpldi4_start/3 
* Loop 15: eval_speedpldi4_start(V_m,V_n,B) [V_m>=V_n] 
* Loop 16: eval_speedpldi4_start(V_m,V_n,B) [V_n>=V_m+1,V_m>=2] 
* Loop 17: eval_speedpldi4_start(V_m,V_n,B) [V_n>=V_m+1,V_m>=1] 
* Loop 18: eval_speedpldi4_start(V_m,V_n,B) [0>=V_m] 

### Ranking functions of CR eval_speedpldi4_start(V_m,V_n,B) 

#### Partial ranking functions of CR eval_speedpldi4_start(V_m,V_n,B) 


### Resulting Chains:eval_speedpldi4_start(V_m,V_n,B) 
* [18]
* [17]
* [16]
* [15]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_speedpldi4_bb1_in(V_m,V_i_0,B) -> [eval_speedpldi4_bb1_in(V_m',V_i_0',B')] 
1
#### Cost of phase [9]:eval_speedpldi4_bb1_in(V_m,V_i_0,B) -> [eval_speedpldi4_bb1_in(V_m',V_i_0',B')] 
1*it(9)+0
  Such that:it(9) =< V_i_0
it(9) =< V_i_0-V_i_0'

#### Cost of loops [8] 

 * loop 8:eval_speedpldi4_bb1_in(V_m,V_i_0,B) -> [eval_speedpldi4_bb1_in(V_m',V_i_0',B')] 
1
#### Cost of phase [8]:eval_speedpldi4_bb1_in(V_m,V_i_0,B) -> [eval_speedpldi4_bb1_in(V_m',V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< -V_m+V_i_0+1
it(8) =< -V_m+V_i_0+V_m'-V_i_0'
it(8) =< V_i_0
it(8) =< V_i_0-V_i_0'

#### Cost of phase [8]:eval_speedpldi4_bb1_in(V_m,V_i_0,B) -> [eval_speedpldi4_bb1_in(V_m',V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< -V_m+V_i_0+1
it(8) =< -V_m+V_i_0+V_m'-V_i_0'
it(8) =< V_i_0
it(8) =< V_i_0-V_i_0'

#### Cost of chains of eval_speedpldi4_bb1_in(V_m,V_i_0,B):
* Chain [[8],[9],10]: 1*it(8)+1*it(9)+0
  Such that:it(9) =< -V_m+V_i_0
it(8) =< -V_m+V_i_0+1

  with precondition: [B=2,V_m>=2,V_i_0>=V_m+1] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< -V_m+V_i_0+1

  with precondition: [B=2,V_m>=1,V_i_0>=V_m] 


#### Cost of chains of eval_speedpldi4_2(V_m,V_n,B):
* Chain [14]: 0
  with precondition: [0>=V_m] 

* Chain [13]: 1*s(1)+1
  Such that:s(1) =< -V_m+V_n+1

  with precondition: [V_m>=1,V_n>=V_m+1] 

* Chain [12]: 1*s(2)+1*s(3)+1
  Such that:s(2) =< -V_m+V_n
s(3) =< -V_m+V_n+1

  with precondition: [V_m>=2,V_n>=V_m+1] 

* Chain [11]: 0
  with precondition: [V_m>=V_n] 


#### Cost of chains of eval_speedpldi4_start(V_m,V_n,B):
* Chain [18]: 0
  with precondition: [0>=V_m] 

* Chain [17]: 1*s(4)+1
  Such that:s(4) =< -V_m+V_n+1

  with precondition: [V_m>=1,V_n>=V_m+1] 

* Chain [16]: 1*s(5)+1*s(6)+1
  Such that:s(5) =< -V_m+V_n
s(6) =< -V_m+V_n+1

  with precondition: [V_m>=2,V_n>=V_m+1] 

* Chain [15]: 0
  with precondition: [V_m>=V_n] 


Closed-form bounds of eval_speedpldi4_start(V_m,V_n,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_m>=1,V_n>=V_m+1] 
    - Upper bound: -V_m+V_n+2 
    - Complexity: n 
* Chain [16] with precondition: [V_m>=2,V_n>=V_m+1] 
    - Upper bound: -2*V_m+2*V_n+2 
    - Complexity: n 
* Chain [15] with precondition: [V_m>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_speedpldi4_start(V_m,V_n,B): nat(-V_m+V_n+1)+1+nat(-V_m+V_n) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 18 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 92 ms.

