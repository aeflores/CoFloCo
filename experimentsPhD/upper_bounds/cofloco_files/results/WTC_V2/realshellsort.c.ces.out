Warning: Ignored call to eval_realshellsort_stop/1 in equation eval_realshellsort_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_realshellsort_bb4_in/13,eval_realshellsort_bb5_in/13,eval_realshellsort_bb6_in/13]
1. recursive  : [eval_realshellsort_27/10,eval_realshellsort_28/10,eval_realshellsort__critedge_in/9,eval_realshellsort_bb2_in/7,eval_realshellsort_bb3_in/7,loop_cont_eval_realshellsort_bb4_in/10]
2. recursive  : [eval_realshellsort_bb1_in/3,loop_cont_eval_realshellsort_bb2_in/4]
3. non_recursive  : [eval_realshellsort_bb7_in/1]
4. non_recursive  : [loop_cont_eval_realshellsort_bb1_in/2]
5. non_recursive  : [eval_realshellsort_7/2]
6. non_recursive  : [eval_realshellsort_6/2]
7. non_recursive  : [eval_realshellsort_5/2]
8. non_recursive  : [eval_realshellsort_4/2]
9. non_recursive  : [eval_realshellsort_3/2]
10. non_recursive  : [eval_realshellsort_2/2]
11. non_recursive  : [eval_realshellsort_1/2]
12. non_recursive  : [eval_realshellsort_0/2]
13. non_recursive  : [eval_realshellsort_bb0_in/2]
14. non_recursive  : [eval_realshellsort_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_realshellsort_bb4_in/13
1. SCC is partially evaluated into eval_realshellsort_bb2_in/7
2. SCC is partially evaluated into eval_realshellsort_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_realshellsort_7/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_realshellsort_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realshellsort_bb4_in/13 
* CE 11 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_realshellsort_bb4_in/13 
* CE 12: eval_realshellsort_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [C>=F+1,A>=D+1,G=2] 
* CE 13: eval_realshellsort_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [A>=D+1,F>=C,G=2] 
* CE 14: eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) = 1+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,I,J,C,D,E,F,G,H)
     [V_array_size>=V_i_0+1,V_j_0>=V_0,V_0+I=V_j_0,J=2,B=2] 

### Cost equations --> "Loop" of eval_realshellsort_bb4_in/13 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_realshellsort_bb4_in/13 
* Loop 12: eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H)->  eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0',B',C,D,E,F,G,H)
                  [V_array_size>=V_i_0+1,V_j_0>=V_0,V_0+V_j_0'=V_j_0,B'=2,B=2] 
* Loop 13: eval_realshellsort_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [C>=F+1,A>=D+1,G=2] 
* Loop 14: eval_realshellsort_bb4_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [A>=D+1,F>=C,G=2] 

### Ranking functions of CR eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) 
* [[12]]...
* [[12],14]
* [[12],13]
* [14]
* [13]


### Specialization of cost equations eval_realshellsort_bb2_in/7 
* CE 8 is refined into CE [15] 
* CE 7 is refined into CE [16,17,18,19,20] 


#### Refined cost equations eval_realshellsort_bb2_in/7 
* CE 15: eval_realshellsort_bb2_in(A,B,C,D,E,A,C) = 0
     [D>=A,E=3] 
* CE 16: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) = 2+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0,F,G,H,I,J,K,L):[[12]]
     [V_array_size>=V_i_0+1,V_i_0>=V_0,M=J+1,N=3,F=2,B=3] 
* CE 17: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) = 2+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0,F,V_array_size,V_array_size_sink,V_0,V_i_0,E,G):[[12],14]+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,H,I,C,D)
     [V_array_size>=V_i_0+1,G>=V_0,V_i_0>=V_0,V_i_0+1=H,I=3,F=2,B=3] 
* CE 18: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) = 2+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0,F,V_array_size,V_array_size_sink,V_0,V_i_0,E,G):[[12],13]+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,H,I,C,D)
     [V_i_0>=V_0+G,V_0>=G+1,V_array_size>=V_i_0+1,G>=0,V_i_0+1=H,I=3,F=2,B=3] 
* CE 19: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) = 2+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0,F,V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0):[14]+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,G,H,C,D)
     [V_array_size>=V_i_0+1,V_i_0>=V_0,V_i_0+1=G,H=3,F=2,B=3] 
* CE 20: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) = 2+ eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0,F,V_array_size,V_array_size_sink,V_0,V_i_0,E,V_i_0):[13]+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,G,H,C,D)
     [V_0>=V_i_0+1,V_array_size>=V_i_0+1,V_i_0+1=G,H=3,F=2,B=3] 

### Cost equations --> "Loop" of eval_realshellsort_bb2_in/7 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [16] --> Loop 19 
* CEs [15] --> Loop 20 

#### Loops of eval_realshellsort_bb2_in/7 
* Loop 15: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D)->  eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0',B',C,D)
                  [V_0>=V_i_0+1,V_array_size>=V_i_0+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 16: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D)->  eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0',B',C,D)
                  [V_array_size>=V_i_0+1,V_i_0>=V_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 17: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D)->  eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0',B',C,D)
                  [V_array_size>=V_i_0',V_i_0'>=V_0+1,V_i_0'=V_i_0+1,B'=3,B=3] 
* Loop 18: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D)->  eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0',B',C,D)
                  [V_array_size>=V_i_0',V_i_0'>=V_0+1,V_0>=1,V_i_0'=V_i_0+1,B'=3,B=3] 
* Loop 19: eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) [V_array_size>=V_i_0+1,V_i_0>=V_0,B=3] 
* Loop 20: eval_realshellsort_bb2_in(A,B,C,D,E,A,C) [D>=A,E=3] 

### Ranking functions of CR eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) 
* RF of phase [15]: [V_0-V_i_0,V_array_size-V_i_0,V_array_size_sink/2-V_i_0-1/2]
* RF of phase [16,17,18]: [V_array_size-V_i_0]

#### Partial ranking functions of CR eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_0-V_i_0
    V_array_size-V_i_0
    V_array_size_sink/2-V_i_0-1/2
* Partial RF of phase [16,17,18]:
  - RF of loop [16:1,17:1,18:1]:
    V_array_size-V_i_0


### Resulting Chains:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) 
* [[15],[16,17,18],20]
* [[15],[16,17,18],19]...
* [[15],20]
* [[15],19]...
* [20]


### Specialization of cost equations eval_realshellsort_bb1_in/3 
* CE 6 is refined into CE [21] 
* CE 5 is refined into CE [22] 
* CE 4 is refined into CE [23] 
* CE 3 is refined into CE [24,25,26,27,28] 


#### Refined cost equations eval_realshellsort_bb1_in/3 
* CE 21: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 0
     [0>=V_array_size_sink+1,B=4] 
* CE 22: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 0
     [B=4,V_array_size_sink=1] 
* CE 23: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 0
     [B=4,V_array_size_sink=0] 
* CE 24: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 2+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,C,D,E,V_array_size,C):[[15],[16,17,18],20]+ eval_realshellsort_bb1_in(V_array_size,C,F)
     [V_array_size>=C+1,2*C+1>=V_array_size_sink,V_array_size_sink>=2*C,C>=1,F=4,E=3,D=0,B=4] 
* CE 25: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 2+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,C,D,E,F,G):[[15],[16,17,18],19]
     [V_array_size>=C+2,2*C+1>=V_array_size_sink,V_array_size_sink>=2*C,C>=1,H=4,E=3,D=0,B=4] 
* CE 26: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 2+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,C,D,E,V_array_size,C):[[15],20]+ eval_realshellsort_bb1_in(V_array_size,C,F)
     [C>=V_array_size,2*C+1>=V_array_size_sink,V_array_size_sink>=2*C,V_array_size>=1,F=4,E=3,D=0,B=4] 
* CE 27: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 2+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,C,D,E,F,G):[[15],19]
     [V_array_size>=C+1,2*C+1>=V_array_size_sink,V_array_size_sink>=2*C,C>=1,H=4,E=3,D=0,B=4] 
* CE 28: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) = 2+ eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,C,D,E,V_array_size,C):[20]+ eval_realshellsort_bb1_in(V_array_size,C,F)
     [2*C+1>=V_array_size_sink,V_array_size_sink>=2*C,C>=1,0>=V_array_size,F=4,E=3,D=0,B=4] 

### Cost equations --> "Loop" of eval_realshellsort_bb1_in/3 
* CEs [24] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [21] --> Loop 26 
* CEs [22] --> Loop 27 
* CEs [23] --> Loop 28 

#### Loops of eval_realshellsort_bb1_in/3 
* Loop 21: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B)->  eval_realshellsort_bb1_in(V_array_size,V_array_size_sink',B')
                  [V_array_size>=V_array_size_sink'+1,2*V_array_size_sink'+1>=V_array_size_sink,V_array_size_sink>=2*V_array_size_sink',V_array_size_sink'>=1,B'=4,B=4] 
* Loop 22: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B)->  eval_realshellsort_bb1_in(V_array_size,V_array_size_sink',B')
                  [2*V_array_size_sink'+1>=V_array_size_sink,V_array_size_sink'>=V_array_size,V_array_size_sink>=2*V_array_size_sink',V_array_size>=1,B'=4,B=4] 
* Loop 23: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B)->  eval_realshellsort_bb1_in(V_array_size,V_array_size_sink',B')
                  [2*V_array_size_sink'+1>=V_array_size_sink,V_array_size_sink>=2*V_array_size_sink',V_array_size_sink'>=1,0>=V_array_size,B'=4,B=4] 
* Loop 24: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) [2*V_array_size>=V_array_size_sink+3,V_array_size_sink>=2,V_array_size>=3,B=4] 
* Loop 25: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) [2*V_array_size>=V_array_size_sink+1,V_array_size_sink>=2,V_array_size>=2,B=4] 
* Loop 26: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) [0>=V_array_size_sink+1,B=4] 
* Loop 27: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) [B=4,V_array_size_sink=1] 
* Loop 28: eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) [B=4,V_array_size_sink=0] 

### Ranking functions of CR eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) 
* RF of phase [21]: [V_array_size_sink-1]

#### Partial ranking functions of CR eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_array_size_sink-1


### Resulting Chains:eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) 
* [[21],27]
* [[21],25]...
* [[21],24]...
* [28]
* [27]
* [26]
* [25]...
* [24]...


### Specialization of cost equations eval_realshellsort_7/2 
* CE 2 is refined into CE [29,30,31,32,33,34,35,36] 


#### Refined cost equations eval_realshellsort_7/2 
* CE 29: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[[21],27]
     [V_array_size>=2,C=4] 
* CE 30: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[[21],25]
     [V_array_size>=4,C=4] 
* CE 31: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[[21],24]
     [V_array_size>=4,C=4] 
* CE 32: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(C,D,E):[28]
     [E=4,D=0,C=0,V_array_size=0] 
* CE 33: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(C,D,E):[27]
     [E=4,D=1,C=1,V_array_size=1] 
* CE 34: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[26]
     [0>=V_array_size+1,C=4] 
* CE 35: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[25]
     [V_array_size>=2,C=4] 
* CE 36: eval_realshellsort_7(V_array_size,B) = 1+ eval_realshellsort_bb1_in(V_array_size,V_array_size,C):[24]
     [V_array_size>=3,C=4] 

### Cost equations --> "Loop" of eval_realshellsort_7/2 
* CEs [31] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [29] --> Loop 33 
* CEs [34] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [32] --> Loop 36 

#### Loops of eval_realshellsort_7/2 
* Loop 29: eval_realshellsort_7(V_array_size,B) [V_array_size>=4] 
* Loop 30: eval_realshellsort_7(V_array_size,B) [V_array_size>=4] 
* Loop 31: eval_realshellsort_7(V_array_size,B) [V_array_size>=3] 
* Loop 32: eval_realshellsort_7(V_array_size,B) [V_array_size>=2] 
* Loop 33: eval_realshellsort_7(V_array_size,B) [V_array_size>=2] 
* Loop 34: eval_realshellsort_7(V_array_size,B) [0>=V_array_size+1] 
* Loop 35: eval_realshellsort_7(V_array_size,B) [V_array_size=1] 
* Loop 36: eval_realshellsort_7(V_array_size,B) [V_array_size=0] 

### Ranking functions of CR eval_realshellsort_7(V_array_size,B) 

#### Partial ranking functions of CR eval_realshellsort_7(V_array_size,B) 


### Resulting Chains:eval_realshellsort_7(V_array_size,B) 
* [36]
* [35]
* [34]
* [33]
* [32]...
* [31]...
* [30]...
* [29]...


### Specialization of cost equations eval_realshellsort_start/2 
* CE 1 is refined into CE [37,38,39,40,41,42,43,44] 


#### Refined cost equations eval_realshellsort_start/2 
* CE 37: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(C,B):[36]
     [C=0,V_array_size=0] 
* CE 38: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(C,B):[35]
     [C=1,V_array_size=1] 
* CE 39: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[34]
     [0>=V_array_size+1] 
* CE 40: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[33]
     [V_array_size>=2] 
* CE 41: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[32]
     [V_array_size>=2] 
* CE 42: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[31]
     [V_array_size>=3] 
* CE 43: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[30]
     [V_array_size>=4] 
* CE 44: eval_realshellsort_start(V_array_size,B) = 0+ eval_realshellsort_7(V_array_size,B):[29]
     [V_array_size>=4] 

### Cost equations --> "Loop" of eval_realshellsort_start/2 
* CEs [44] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [42] --> Loop 39 
* CEs [41] --> Loop 40 
* CEs [40] --> Loop 41 
* CEs [39] --> Loop 42 
* CEs [38] --> Loop 43 
* CEs [37] --> Loop 44 

#### Loops of eval_realshellsort_start/2 
* Loop 37: eval_realshellsort_start(V_array_size,B) [V_array_size>=4] 
* Loop 38: eval_realshellsort_start(V_array_size,B) [V_array_size>=4] 
* Loop 39: eval_realshellsort_start(V_array_size,B) [V_array_size>=3] 
* Loop 40: eval_realshellsort_start(V_array_size,B) [V_array_size>=2] 
* Loop 41: eval_realshellsort_start(V_array_size,B) [V_array_size>=2] 
* Loop 42: eval_realshellsort_start(V_array_size,B) [0>=V_array_size+1] 
* Loop 43: eval_realshellsort_start(V_array_size,B) [V_array_size=1] 
* Loop 44: eval_realshellsort_start(V_array_size,B) [V_array_size=0] 

### Ranking functions of CR eval_realshellsort_start(V_array_size,B) 

#### Partial ranking functions of CR eval_realshellsort_start(V_array_size,B) 


### Resulting Chains:eval_realshellsort_start(V_array_size,B) 
* [44]
* [43]
* [42]
* [41]
* [40]...
* [39]...
* [38]...
* [37]...


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) -> [eval_realshellsort_bb4_in(V_array_size',V_array_size_sink',V_0',V_i_0',V_5',V_j_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [12]:eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) -> [eval_realshellsort_bb4_in(V_array_size',V_array_size_sink',V_0',V_i_0',V_5',V_j_0',B',C',D',E',F',G',H')] 
1*it(12)+0
#### Cost of phase [12]:eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) -> [eval_realshellsort_bb4_in(V_array_size',V_array_size_sink',V_0',V_i_0',V_5',V_j_0',B',C',D',E',F',G',H')] 
1*it(12)+0
#### Cost of phase [12]:eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H) -> [eval_realshellsort_bb4_in(V_array_size',V_array_size_sink',V_0',V_i_0',V_5',V_j_0',B',C',D',E',F',G',H')] 
1*it(12)+0
#### Cost of chains of eval_realshellsort_bb4_in(V_array_size,V_array_size_sink,V_0,V_i_0,V_5,V_j_0,B,C,D,E,F,G,H):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_array_size>=V_i_0+1,V_j_0>=V_0,B=2] 

* Chain [[12],14]: 1*it(12)+0
  with precondition: [B=2,V_array_size=C,V_array_size_sink=D,V_0=E,V_i_0=F,V_5=G,V_j_0>=V_0,H>=V_0,V_array_size>=V_i_0+1] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=2,V_array_size=C,V_array_size_sink=D,V_0=E,V_i_0=F,V_5=G,H>=0,V_array_size>=V_i_0+1,V_0>=H+1,V_j_0>=V_0+H] 

* Chain [14]: 0
  with precondition: [B=2,D=V_array_size_sink,G=V_5,V_array_size=C,V_0=E,V_i_0=F,V_j_0=H,V_j_0>=V_0,V_array_size>=V_i_0+1] 

* Chain [13]: 0
  with precondition: [B=2,D=V_array_size_sink,G=V_5,V_array_size=C,V_0=E,V_i_0=F,V_j_0=H,V_array_size>=V_i_0+1,V_0>=V_j_0+1] 


#### Cost of loops [16,17,18] 

 * loop 16:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2
 * loop 17:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
1*s(2)+2
 * loop 18:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
1*s(4)+2
#### Cost of phase [16,17,18]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
6*it(16)+2*s(5)+0
  Such that:aux(1) =< V_array_size-V_i_0
aux(2) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(16) =< aux(1)
it(16) =< aux(2)

#### Cost of loops [15] 

 * loop 15:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2
#### Cost of phase [15]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2*it(15)+0
  Such that:it(15) =< V_array_size-V_i_0
it(15) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(15) =< V_array_size_sink/2-V_i_0
it(15) =< V_array_size_sink/2-V_i_0-V_array_size_sink'/2+V_i_0'
it(15) =< V_0-V_i_0
it(15) =< V_0-V_i_0-V_0'+V_i_0'

#### Cost of phase [16,17,18]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
6*it(16)+2*s(5)+0
  Such that:aux(1) =< V_array_size-V_i_0
aux(2) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(16) =< aux(1)
it(16) =< aux(2)

#### Cost of phase [15]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2*it(15)+0
  Such that:it(15) =< V_array_size-V_i_0
it(15) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(15) =< V_array_size_sink/2-V_i_0
it(15) =< V_array_size_sink/2-V_i_0-V_array_size_sink'/2+V_i_0'
it(15) =< V_0-V_i_0
it(15) =< V_0-V_i_0-V_0'+V_i_0'

#### Cost of phase [15]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2*it(15)+0
  Such that:it(15) =< V_array_size-V_i_0
it(15) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(15) =< V_array_size_sink/2-V_i_0
it(15) =< V_array_size_sink/2-V_i_0-V_array_size_sink'/2+V_i_0'
it(15) =< V_0-V_i_0
it(15) =< V_0-V_i_0-V_0'+V_i_0'

#### Cost of phase [15]:eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D) -> [eval_realshellsort_bb2_in(V_array_size',V_array_size_sink',V_0',V_i_0',B',C',D')] 
2*it(15)+0
  Such that:it(15) =< V_array_size-V_i_0
it(15) =< V_array_size-V_i_0-V_array_size'+V_i_0'
it(15) =< V_array_size_sink/2-V_i_0
it(15) =< V_array_size_sink/2-V_i_0-V_array_size_sink'/2+V_i_0'
it(15) =< V_0-V_i_0
it(15) =< V_0-V_i_0-V_0'+V_i_0'

#### Cost of chains of eval_realshellsort_bb2_in(V_array_size,V_array_size_sink,V_0,V_i_0,B,C,D):
* Chain [[15],[16,17,18],20]: 2*it(15)+6*it(16)+2*s(5)+0
  Such that:it(15) =< -V_i_0+D
aux(3) =< C-D
it(16) =< aux(3)

  with precondition: [B=3,V_array_size=C,V_0=D,V_i_0>=0,V_array_size_sink>=2*V_0,2*V_0+1>=V_array_size_sink,V_array_size>=V_0+1,V_0>=V_i_0+1] 

* Chain [[15],[16,17,18],19]...: 2*it(15)+6*it(16)+3*s(5)+2
  Such that:aux(4) =< V_array_size-V_0
it(15) =< V_0-V_i_0
it(16) =< aux(4)

  with precondition: [B=3,V_i_0>=0,V_array_size_sink>=2*V_0,2*V_0+1>=V_array_size_sink,V_array_size>=V_0+2,V_0>=V_i_0+1] 

* Chain [[15],20]: 2*it(15)+0
  Such that:it(15) =< -V_i_0+C

  with precondition: [B=3,V_array_size=C,V_0=D,V_i_0>=0,V_array_size_sink>=2*V_0,V_0>=V_array_size,2*V_0+1>=V_array_size_sink,V_array_size>=V_i_0+1] 

* Chain [[15],19]...: 2*it(15)+1*s(7)+2
  Such that:it(15) =< V_0-V_i_0

  with precondition: [B=3,V_i_0>=0,V_array_size_sink>=2*V_0,2*V_0+1>=V_array_size_sink,V_array_size>=V_0+1,V_0>=V_i_0+1] 

* Chain [20]: 0
  with precondition: [B=3,V_array_size=C,V_0=D,V_0>=1,V_i_0>=0,V_array_size_sink>=2*V_0,V_i_0>=V_array_size,2*V_0+1>=V_array_size_sink] 


#### Cost of loops [21] 

 * loop 21:eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) -> [eval_realshellsort_bb1_in(V_array_size',V_array_size_sink',B')] 
2*s(13)+6*s(14)+2*s(15)+2
  Such that:s(12) =< V_array_size'-V_array_size_sink'
s(13) =< V_array_size_sink'
s(14) =< s(12)

#### Cost of phase [21]:eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) -> [eval_realshellsort_bb1_in(V_array_size',V_array_size_sink',B')] 
4*it(21)+6*s(17)+2*s(18)+0
  Such that:aux(5) =< V_array_size
aux(6) =< V_array_size_sink
aux(7) =< V_array_size_sink-V_array_size_sink'
it(21) =< aux(6)
it(21) =< aux(7)
s(19) =< it(21)*aux(5)
s(17) =< s(19)

#### Cost of phase [21]:eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) -> [eval_realshellsort_bb1_in(V_array_size',V_array_size_sink',B')] 
4*it(21)+6*s(17)+2*s(18)+0
  Such that:aux(5) =< V_array_size
aux(6) =< V_array_size_sink
aux(7) =< V_array_size_sink-V_array_size_sink'
it(21) =< aux(6)
it(21) =< aux(7)
s(19) =< it(21)*aux(5)
s(17) =< s(19)

#### Cost of phase [21]:eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B) -> [eval_realshellsort_bb1_in(V_array_size',V_array_size_sink',B')] 
4*it(21)+6*s(17)+2*s(18)+0
  Such that:aux(5) =< V_array_size
aux(6) =< V_array_size_sink
aux(7) =< V_array_size_sink-V_array_size_sink'
it(21) =< aux(6)
it(21) =< aux(7)
s(19) =< it(21)*aux(5)
s(17) =< s(19)

#### Cost of chains of eval_realshellsort_bb1_in(V_array_size,V_array_size_sink,B):
* Chain [[21],27]: 4*it(21)+6*s(17)+2*s(18)+0
  Such that:aux(5) =< V_array_size
aux(8) =< V_array_size_sink
it(21) =< aux(8)
s(19) =< it(21)*aux(5)
s(17) =< s(19)

  with precondition: [B=4,V_array_size_sink>=2,V_array_size>=V_array_size_sink] 

* Chain [[21],25]...: 6*it(21)+6*s(17)+3*s(18)+4
  Such that:aux(5) =< V_array_size
aux(9) =< V_array_size_sink
it(21) =< aux(9)
s(19) =< it(21)*aux(5)
s(17) =< s(19)

  with precondition: [B=4,V_array_size_sink>=4,V_array_size>=V_array_size_sink] 

* Chain [[21],24]...: 4*it(21)+6*s(17)+5*s(18)+8*s(23)+4
  Such that:aux(11) =< V_array_size
aux(12) =< V_array_size_sink
s(23) =< aux(11)
it(21) =< aux(12)
s(19) =< it(21)*aux(11)
s(17) =< s(19)

  with precondition: [B=4,V_array_size_sink>=4,V_array_size>=V_array_size_sink] 

* Chain [28]: 0
  with precondition: [V_array_size=0,V_array_size_sink=0,B=4] 

* Chain [27]: 0
  with precondition: [V_array_size_sink=1,B=4,V_array_size>=1] 

* Chain [26]: 0
  with precondition: [B=4,V_array_size_sink=V_array_size,0>=V_array_size_sink+1] 

* Chain [25]...: 2*s(20)+1*s(21)+4
  Such that:s(20) =< V_array_size_sink/2

  with precondition: [B=4,V_array_size_sink>=2,V_array_size>=V_array_size_sink] 

* Chain [24]...: 8*s(23)+3*s(25)+4
  Such that:aux(10) =< V_array_size
s(23) =< aux(10)

  with precondition: [B=4,V_array_size>=3,V_array_size_sink>=2,V_array_size>=V_array_size_sink] 


#### Cost of chains of eval_realshellsort_7(V_array_size,B):
* Chain [36]: 1
  with precondition: [V_array_size=0] 

* Chain [35]: 1
  with precondition: [V_array_size=1] 

* Chain [34]: 1
  with precondition: [0>=V_array_size+1] 

* Chain [33]: 4*s(28)+6*s(30)+2*s(31)+1
  Such that:aux(13) =< V_array_size
s(28) =< aux(13)
s(29) =< s(28)*aux(13)
s(30) =< s(29)

  with precondition: [V_array_size>=2] 

* Chain [32]...: 2*s(32)+1*s(33)+5
  Such that:s(32) =< V_array_size/2

  with precondition: [V_array_size>=2] 

* Chain [31]...: 8*s(35)+3*s(36)+5
  Such that:s(34) =< V_array_size
s(35) =< s(34)

  with precondition: [V_array_size>=3] 

* Chain [30]...: 6*s(39)+6*s(41)+3*s(42)+5
  Such that:aux(14) =< V_array_size
s(39) =< aux(14)
s(40) =< s(39)*aux(14)
s(41) =< s(40)

  with precondition: [V_array_size>=4] 

* Chain [29]...: 12*s(45)+6*s(48)+5*s(49)+5
  Such that:aux(15) =< V_array_size
s(45) =< aux(15)
s(47) =< s(45)*aux(15)
s(48) =< s(47)

  with precondition: [V_array_size>=4] 


#### Cost of chains of eval_realshellsort_start(V_array_size,B):
* Chain [44]: 1
  with precondition: [V_array_size=0] 

* Chain [43]: 1
  with precondition: [V_array_size=1] 

* Chain [42]: 1
  with precondition: [0>=V_array_size+1] 

* Chain [41]: 4*s(51)+6*s(53)+2*s(54)+1
  Such that:s(50) =< V_array_size
s(51) =< s(50)
s(52) =< s(51)*s(50)
s(53) =< s(52)

  with precondition: [V_array_size>=2] 

* Chain [40]...: 2*s(55)+1*s(56)+5
  Such that:s(55) =< V_array_size/2

  with precondition: [V_array_size>=2] 

* Chain [39]...: 8*s(58)+3*s(59)+5
  Such that:s(57) =< V_array_size
s(58) =< s(57)

  with precondition: [V_array_size>=3] 

* Chain [38]...: 6*s(61)+6*s(63)+3*s(64)+5
  Such that:s(60) =< V_array_size
s(61) =< s(60)
s(62) =< s(61)*s(60)
s(63) =< s(62)

  with precondition: [V_array_size>=4] 

* Chain [37]...: 12*s(66)+6*s(68)+5*s(69)+5
  Such that:s(65) =< V_array_size
s(66) =< s(65)
s(67) =< s(66)*s(65)
s(68) =< s(67)

  with precondition: [V_array_size>=4] 


Closed-form bounds of eval_realshellsort_start(V_array_size,B): 
-------------------------------------
* Chain [44] with precondition: [V_array_size=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43] with precondition: [V_array_size=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [42] with precondition: [0>=V_array_size+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [41] with precondition: [V_array_size>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40]... with precondition: [V_array_size>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39]... with precondition: [V_array_size>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [V_array_size>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37]... with precondition: [V_array_size>=4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_realshellsort_start(V_array_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 123 ms.
   - Backward Invariants 70 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 103 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 188 ms.
   - Equation cost structures 50 ms.
   - Phase cost structures 61 ms.
   - Chain cost structures 91 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 514 ms.

