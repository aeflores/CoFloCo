Warning: Ignored call to eval_foo_stop/1 in equation eval_foo_16/1 
Warning: Ignored call to eval_foo_stop/1 in equation eval_foo_18/1 
Warning: Ignored call to eval_foo_stop/1 in equation eval_foo_20/1 
Warning: Ignored call to eval_foo_stop/1 in equation eval_foo_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_foo_20/1]
1. non_recursive  : [eval_foo_19/1]
2. non_recursive  : [eval_foo_bb11_in/1]
3. non_recursive  : [eval_foo_18/1]
4. non_recursive  : [eval_foo_17/1]
5. non_recursive  : [eval_foo_bb10_in/1]
6. recursive  : [eval_foo_bb4_in/4,eval_foo_bb5_in/4]
7. recursive  : [eval_foo_bb6_in/2,eval_foo_bb7_in/2]
8. non_recursive  : [eval_foo_bb8_in/1]
9. non_recursive  : [loop_cont_eval_foo_bb6_in/2]
10. non_recursive  : [loop_cont_eval_foo_bb4_in/3]
11. non_recursive  : [eval_foo_9/3]
12. non_recursive  : [eval_foo_8/3]
13. non_recursive  : [eval_foo_7/3]
14. non_recursive  : [eval_foo_6/5]
15. non_recursive  : [eval_foo_5/4]
16. non_recursive  : [eval_foo_4/4]
17. non_recursive  : [eval_foo_bb3_in/4]
18. non_recursive  : [eval_foo_16/1]
19. non_recursive  : [eval_foo_15/1]
20. non_recursive  : [eval_foo_bb9_in/1]
21. non_recursive  : [eval_foo_bb2_in/4]
22. non_recursive  : [eval_foo_bb1_in/4]
23. non_recursive  : [eval_foo_3/4]
24. non_recursive  : [eval_foo_2/4]
25. non_recursive  : [eval_foo_1/4]
26. non_recursive  : [eval_foo_0/4]
27. non_recursive  : [eval_foo_bb0_in/4]
28. non_recursive  : [eval_foo_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_foo_bb4_in/4
7. SCC is partially evaluated into eval_foo_bb6_in/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_foo_bb4_in/3
11. SCC is partially evaluated into eval_foo_9/3
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_foo_6/5
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_foo_bb2_in/4
22. SCC is partially evaluated into eval_foo_bb1_in/4
23. SCC is partially evaluated into eval_foo_3/4
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_foo_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb4_in/4 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_foo_bb4_in/4 
* CE 16: eval_foo_bb4_in(A,B,C,A) = 0
     [A>=0,C=3,B=0] 
* CE 17: eval_foo_bb4_in(V_x_1,V_y_0,B,C) = 1+ eval_foo_bb4_in(D,E,B,C)
     [V_y_0>=1,V_x_1>=0,V_y_0=E+1,V_x_1+2=D] 

### Cost equations --> "Loop" of eval_foo_bb4_in/4 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_foo_bb4_in/4 
* Loop 16: eval_foo_bb4_in(V_x_1,V_y_0,B,C)->  eval_foo_bb4_in(V_x_1',V_y_0',B,C)
                  [V_y_0>=1,V_x_1>=0,V_y_0=V_y_0'+1,V_x_1+2=V_x_1'] 
* Loop 17: eval_foo_bb4_in(A,B,C,A) [A>=0,C=3,B=0] 

### Ranking functions of CR eval_foo_bb4_in(V_x_1,V_y_0,B,C) 
* RF of phase [16]: [V_y_0]

#### Partial ranking functions of CR eval_foo_bb4_in(V_x_1,V_y_0,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_y_0


### Resulting Chains:eval_foo_bb4_in(V_x_1,V_y_0,B,C) 
* [[16],17]
* [17]


### Specialization of cost equations eval_foo_bb6_in/2 
* CE 15 is refined into CE [18] 
* CE 14 is refined into CE [19] 


#### Refined cost equations eval_foo_bb6_in/2 
* CE 18: eval_foo_bb6_in(V_z_0,B) = 0
     [0>=V_z_0,B=2] 
* CE 19: eval_foo_bb6_in(V_z_0,B) = 1+ eval_foo_bb6_in(C,D)
     [V_z_0>=1,V_z_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_foo_bb6_in/2 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 

#### Loops of eval_foo_bb6_in/2 
* Loop 18: eval_foo_bb6_in(V_z_0,B)->  eval_foo_bb6_in(V_z_0',B')
                  [V_z_0>=1,V_z_0=V_z_0'+1,B'=2,B=2] 
* Loop 19: eval_foo_bb6_in(V_z_0,B) [0>=V_z_0,B=2] 

### Ranking functions of CR eval_foo_bb6_in(V_z_0,B) 
* RF of phase [18]: [V_z_0]

#### Partial ranking functions of CR eval_foo_bb6_in(V_z_0,B) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_z_0


### Resulting Chains:eval_foo_bb6_in(V_z_0,B) 
* [[18],19]
* [19]


### Specialization of cost equations loop_cont_eval_foo_bb4_in/3 
* CE 13 is refined into CE [20,21] 


#### Refined cost equations loop_cont_eval_foo_bb4_in/3 
* CE 20: loop_cont_eval_foo_bb4_in(E,A,B) = 1+ eval_foo_bb6_in(A,F):[[18],19]
     [A>=1,F=2,E=3] 
* CE 21: loop_cont_eval_foo_bb4_in(E,A,B) = 1+ eval_foo_bb6_in(A,F):[19]
     [0>=A,F=2,E=3] 

### Cost equations --> "Loop" of loop_cont_eval_foo_bb4_in/3 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of loop_cont_eval_foo_bb4_in/3 
* Loop 20: loop_cont_eval_foo_bb4_in(E,A,B) [A>=1,E=3] 
* Loop 21: loop_cont_eval_foo_bb4_in(E,A,B) [0>=A,E=3] 

### Ranking functions of CR loop_cont_eval_foo_bb4_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_foo_bb4_in(E,A,B) 


### Resulting Chains:loop_cont_eval_foo_bb4_in(E,A,B) 
* [21]
* [20]


### Specialization of cost equations eval_foo_9/3 
* CE 10 is refined into CE [22,23,24] 


#### Refined cost equations eval_foo_9/3 
* CE 22: eval_foo_9(V_n,V_m1_m2,B) = 1+ eval_foo_bb4_in(V_m1_m2,C,D,E):[[16],17]+ loop_cont_eval_foo_bb4_in(F,E,B):[20]
     [E>=V_m1_m2+2,V_m1_m2>=0,E=2*C+V_m1_m2,E=2*V_n+V_m1_m2,F=3,D=3] 
* CE 23: eval_foo_9(V_n,V_m1_m2,B) = 1+ eval_foo_bb4_in(C,D,E,F):[17]+ loop_cont_eval_foo_bb4_in(G,H,B):[21]
     [H=0,G=3,F=0,E=3,D=0,C=0,V_m1_m2=0,V_n=0] 
* CE 24: eval_foo_9(V_n,V_m1_m2,B) = 1+ eval_foo_bb4_in(V_m1_m2,C,D,V_m1_m2):[17]+ loop_cont_eval_foo_bb4_in(E,V_m1_m2,B):[20]
     [V_m1_m2>=1,E=3,D=3,C=0,V_n=0] 

### Cost equations --> "Loop" of eval_foo_9/3 
* CEs [22] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

#### Loops of eval_foo_9/3 
* Loop 22: eval_foo_9(V_n,V_m1_m2,B) [V_m1_m2>=0,V_n>=1] 
* Loop 23: eval_foo_9(V_n,V_m1_m2,B) [V_m1_m2>=1,V_n=0] 
* Loop 24: eval_foo_9(V_n,V_m1_m2,B) [V_m1_m2=0,V_n=0] 

### Ranking functions of CR eval_foo_9(V_n,V_m1_m2,B) 

#### Partial ranking functions of CR eval_foo_9(V_n,V_m1_m2,B) 


### Resulting Chains:eval_foo_9(V_n,V_m1_m2,B) 
* [24]
* [23]
* [22]


### Specialization of cost equations eval_foo_6/5 
* CE 8 is refined into CE [25,26,27] 
* CE 9 is refined into CE [28,29,30] 


#### Refined cost equations eval_foo_6/5 
* CE 25: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(C,D,B):[24]
     [V_3>=1,V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 26: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(C,V_m1,B):[23]
     [V_m1>=1,V_3>=1,V_m2>=0,C=0,V_n=0] 
* CE 27: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(V_n,V_m1,B):[22]
     [V_m1>=0,V_n>=1,V_3>=1,V_m2>=0] 
* CE 28: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(C,D,B):[24]
     [V_m1>=0,0>=V_3,D=0,C=0,V_m2=0,V_n=0] 
* CE 29: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(C,V_m2,B):[23]
     [V_m2>=1,V_m1>=0,0>=V_3,C=0,V_n=0] 
* CE 30: eval_foo_6(V_n,V_m1,V_m2,V_3,B) = 0+ eval_foo_9(V_n,V_m2,B):[22]
     [V_m2>=0,V_n>=1,V_m1>=0,0>=V_3] 

### Cost equations --> "Loop" of eval_foo_6/5 
* CEs [27] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [26] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [25] --> Loop 30 

#### Loops of eval_foo_6/5 
* Loop 25: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 26: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_m2>=0,V_m1>=0,V_n>=1,0>=V_3] 
* Loop 27: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1>=1,V_n=0] 
* Loop 28: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_m2>=1,V_m1>=0,0>=V_3,V_n=0] 
* Loop 29: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_m1>=0,0>=V_3,V_m2=0,V_n=0] 
* Loop 30: eval_foo_6(V_n,V_m1,V_m2,V_3,B) [V_3>=1,V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_foo_6(V_n,V_m1,V_m2,V_3,B) 

#### Partial ranking functions of CR eval_foo_6(V_n,V_m1,V_m2,V_3,B) 


### Resulting Chains:eval_foo_6(V_n,V_m1,V_m2,V_3,B) 
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]


### Specialization of cost equations eval_foo_bb2_in/4 
* CE 6 is refined into CE [31,32,33,34,35,36] 
* CE 7 is refined into CE [37] 


#### Refined cost equations eval_foo_bb2_in/4 
* CE 31: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(C,D,V_m2,E,B):[30]
     [E>=1,V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 32: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(C,V_m1,D,E,B):[29]
     [V_m1>=0,0>=E,D=0,C=0,V_m2=0,V_n=0] 
* CE 33: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(C,V_m1,V_m2,D,B):[28]
     [V_m2>=1,V_m1>=0,0>=D,C=0,V_n=0] 
* CE 34: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(C,V_m1,V_m2,D,B):[27]
     [D>=1,V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 35: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(V_n,V_m1,V_m2,C,B):[26]
     [V_m2>=0,V_m1>=0,V_n>=1,0>=C] 
* CE 36: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_6(V_n,V_m1,V_m2,C,B):[25]
     [C>=1,V_m2>=0,V_m1>=0,V_n>=1] 
* CE 37: eval_foo_bb2_in(V_n,V_m1,V_m2,B) = 0
     [V_m1>=0,V_n>=0,0>=V_m2+1] 

### Cost equations --> "Loop" of eval_foo_bb2_in/4 
* CEs [36] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [34] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [32] --> Loop 36 
* CEs [31] --> Loop 37 

#### Loops of eval_foo_bb2_in/4 
* Loop 31: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 32: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 33: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 34: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 35: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 36: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 37: eval_foo_bb2_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_foo_bb2_in(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_foo_bb2_in(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_foo_bb2_in(V_n,V_m1,V_m2,B) 
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]


### Specialization of cost equations eval_foo_bb1_in/4 
* CE 4 is refined into CE [38,39,40,41,42,43,44] 
* CE 5 is refined into CE [45] 


#### Refined cost equations eval_foo_bb1_in/4 
* CE 38: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(C,D,V_m2,B):[37]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 39: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(C,V_m1,D,B):[36]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 40: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(C,V_m1,V_m2,B):[35]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 41: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(C,V_m1,V_m2,B):[34]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 42: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(V_n,V_m1,V_m2,B):[33]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 43: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(V_n,V_m1,V_m2,B):[32]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 44: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb2_in(V_n,V_m1,V_m2,B):[31]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 45: eval_foo_bb1_in(V_n,V_m1,V_m2,B) = 0
     [V_n>=0,0>=V_m1+1] 

### Cost equations --> "Loop" of eval_foo_bb1_in/4 
* CEs [44] --> Loop 38 
* CEs [43] --> Loop 39 
* CEs [42] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [41] --> Loop 42 
* CEs [40] --> Loop 43 
* CEs [39] --> Loop 44 
* CEs [38] --> Loop 45 

#### Loops of eval_foo_bb1_in/4 
* Loop 38: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 39: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 40: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 41: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 42: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 43: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 44: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 45: eval_foo_bb1_in(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_foo_bb1_in(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_foo_bb1_in(V_n,V_m1,V_m2,B) 
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]


### Specialization of cost equations eval_foo_3/4 
* CE 2 is refined into CE [46,47,48,49,50,51,52,53] 
* CE 3 is refined into CE [54] 


#### Refined cost equations eval_foo_3/4 
* CE 46: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(C,D,V_m2,B):[45]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 47: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(C,V_m1,D,B):[44]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 48: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(C,V_m1,V_m2,B):[43]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 49: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(C,V_m1,V_m2,B):[42]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 50: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(V_n,V_m1,V_m2,B):[41]
     [V_n>=0,0>=V_m1+1] 
* CE 51: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(V_n,V_m1,V_m2,B):[40]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 52: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(V_n,V_m1,V_m2,B):[39]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 53: eval_foo_3(V_n,V_m1,V_m2,B) = 0+ eval_foo_bb1_in(V_n,V_m1,V_m2,B):[38]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 54: eval_foo_3(V_n,V_m1,V_m2,B) = 0
     [0>=V_n+1] 

### Cost equations --> "Loop" of eval_foo_3/4 
* CEs [53] --> Loop 46 
* CEs [52] --> Loop 47 
* CEs [51] --> Loop 48 
* CEs [50] --> Loop 49 
* CEs [54] --> Loop 50 
* CEs [49] --> Loop 51 
* CEs [48] --> Loop 52 
* CEs [47] --> Loop 53 
* CEs [46] --> Loop 54 

#### Loops of eval_foo_3/4 
* Loop 46: eval_foo_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 47: eval_foo_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 48: eval_foo_3(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 49: eval_foo_3(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 50: eval_foo_3(V_n,V_m1,V_m2,B) [0>=V_n+1] 
* Loop 51: eval_foo_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 52: eval_foo_3(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 53: eval_foo_3(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 54: eval_foo_3(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_foo_3(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_foo_3(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_foo_3(V_n,V_m1,V_m2,B) 
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]


### Specialization of cost equations eval_foo_start/4 
* CE 1 is refined into CE [55,56,57,58,59,60,61,62,63] 


#### Refined cost equations eval_foo_start/4 
* CE 55: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(C,D,V_m2,B):[54]
     [V_m2>=0,D=0,C=0,V_m1=0,V_n=0] 
* CE 56: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(C,V_m1,D,B):[53]
     [V_m1>=0,D=0,C=0,V_m2=0,V_n=0] 
* CE 57: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(C,V_m1,V_m2,B):[52]
     [V_m2>=1,V_m1>=0,C=0,V_n=0] 
* CE 58: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(C,V_m1,V_m2,B):[51]
     [V_m2>=0,V_m1>=1,C=0,V_n=0] 
* CE 59: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(V_n,V_m1,V_m2,B):[50]
     [0>=V_n+1] 
* CE 60: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(V_n,V_m1,V_m2,B):[49]
     [V_n>=0,0>=V_m1+1] 
* CE 61: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(V_n,V_m1,V_m2,B):[48]
     [V_m1>=0,V_n>=0,0>=V_m2+1] 
* CE 62: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(V_n,V_m1,V_m2,B):[47]
     [V_m2>=0,V_m1>=0,V_n>=1] 
* CE 63: eval_foo_start(V_n,V_m1,V_m2,B) = 0+ eval_foo_3(V_n,V_m1,V_m2,B):[46]
     [V_m2>=0,V_m1>=0,V_n>=1] 

### Cost equations --> "Loop" of eval_foo_start/4 
* CEs [63] --> Loop 55 
* CEs [62] --> Loop 56 
* CEs [61] --> Loop 57 
* CEs [60] --> Loop 58 
* CEs [59] --> Loop 59 
* CEs [58] --> Loop 60 
* CEs [57] --> Loop 61 
* CEs [56] --> Loop 62 
* CEs [55] --> Loop 63 

#### Loops of eval_foo_start/4 
* Loop 55: eval_foo_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 56: eval_foo_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=0,V_n>=1] 
* Loop 57: eval_foo_start(V_n,V_m1,V_m2,B) [V_m1>=0,V_n>=0,0>=V_m2+1] 
* Loop 58: eval_foo_start(V_n,V_m1,V_m2,B) [V_n>=0,0>=V_m1+1] 
* Loop 59: eval_foo_start(V_n,V_m1,V_m2,B) [0>=V_n+1] 
* Loop 60: eval_foo_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1>=1,V_n=0] 
* Loop 61: eval_foo_start(V_n,V_m1,V_m2,B) [V_m2>=1,V_m1>=0,V_n=0] 
* Loop 62: eval_foo_start(V_n,V_m1,V_m2,B) [V_m1>=0,V_m2=0,V_n=0] 
* Loop 63: eval_foo_start(V_n,V_m1,V_m2,B) [V_m2>=0,V_m1=0,V_n=0] 

### Ranking functions of CR eval_foo_start(V_n,V_m1,V_m2,B) 

#### Partial ranking functions of CR eval_foo_start(V_n,V_m1,V_m2,B) 


### Resulting Chains:eval_foo_start(V_n,V_m1,V_m2,B) 
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_foo_bb4_in(V_x_1,V_y_0,B,C) -> [eval_foo_bb4_in(V_x_1',V_y_0',B',C')] 
1
#### Cost of phase [16]:eval_foo_bb4_in(V_x_1,V_y_0,B,C) -> [eval_foo_bb4_in(V_x_1',V_y_0',B',C')] 
1*it(16)+0
  Such that:it(16) =< V_y_0
it(16) =< V_y_0-V_y_0'

#### Cost of chains of eval_foo_bb4_in(V_x_1,V_y_0,B,C):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -V_x_1/2+C/2

  with precondition: [B=3,V_x_1+2*V_y_0=C,V_x_1>=0,V_y_0>=1] 

* Chain [17]: 0
  with precondition: [V_y_0=0,B=3,V_x_1=C,V_x_1>=0] 


#### Cost of loops [18] 

 * loop 18:eval_foo_bb6_in(V_z_0,B) -> [eval_foo_bb6_in(V_z_0',B')] 
1
#### Cost of phase [18]:eval_foo_bb6_in(V_z_0,B) -> [eval_foo_bb6_in(V_z_0',B')] 
1*it(18)+0
  Such that:it(18) =< V_z_0
it(18) =< V_z_0-V_z_0'

#### Cost of chains of eval_foo_bb6_in(V_z_0,B):
* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V_z_0

  with precondition: [B=2,V_z_0>=1] 

* Chain [19]: 0
  with precondition: [B=2,0>=V_z_0] 


#### Cost of chains of loop_cont_eval_foo_bb4_in(E,A,B):
* Chain [21]: 1
  with precondition: [E=3,0>=A] 

* Chain [20]: 1*s(1)+1
  Such that:s(1) =< A

  with precondition: [E=3,A>=1] 


#### Cost of chains of eval_foo_9(V_n,V_m1_m2,B):
* Chain [24]: 2
  with precondition: [V_n=0,V_m1_m2=0] 

* Chain [23]: 1*s(2)+2
  Such that:s(2) =< V_m1_m2

  with precondition: [V_n=0,V_m1_m2>=1] 

* Chain [22]: 1*s(3)+1*s(4)+2
  Such that:s(3) =< V_n
s(4) =< 2*V_n+V_m1_m2

  with precondition: [V_n>=1,V_m1_m2>=0] 


#### Cost of chains of eval_foo_6(V_n,V_m1,V_m2,V_3,B):
* Chain [30]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0,V_3>=1] 

* Chain [29]: 2
  with precondition: [V_n=0,V_m2=0,0>=V_3,V_m1>=0] 

* Chain [28]: 1*s(5)+2
  Such that:s(5) =< V_m2

  with precondition: [V_n=0,0>=V_3,V_m1>=0,V_m2>=1] 

* Chain [27]: 1*s(6)+2
  Such that:s(6) =< V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0,V_3>=1] 

* Chain [26]: 1*s(7)+1*s(8)+2
  Such that:s(7) =< V_n
s(8) =< 2*V_n+V_m2

  with precondition: [0>=V_3,V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [25]: 1*s(9)+1*s(10)+2
  Such that:s(9) =< V_n
s(10) =< 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0,V_3>=1] 


#### Cost of chains of eval_foo_bb2_in(V_n,V_m1,V_m2,B):
* Chain [37]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [36]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [35]: 1*s(11)+2
  Such that:s(11) =< V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [34]: 1*s(12)+2
  Such that:s(12) =< V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [33]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [32]: 1*s(13)+1*s(14)+2
  Such that:s(13) =< V_n
s(14) =< 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [31]: 1*s(15)+1*s(16)+2
  Such that:s(15) =< V_n
s(16) =< 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_foo_bb1_in(V_n,V_m1,V_m2,B):
* Chain [45]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [44]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [43]: 1*s(17)+2
  Such that:s(17) =< V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [42]: 1*s(18)+2
  Such that:s(18) =< V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [41]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [40]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [39]: 1*s(19)+1*s(20)+2
  Such that:s(19) =< V_n
s(20) =< 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [38]: 1*s(21)+1*s(22)+2
  Such that:s(21) =< V_n
s(22) =< 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_foo_3(V_n,V_m1,V_m2,B):
* Chain [54]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [53]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [52]: 1*s(23)+2
  Such that:s(23) =< V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [51]: 1*s(24)+2
  Such that:s(24) =< V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [50]: 0
  with precondition: [0>=V_n+1] 

* Chain [49]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [48]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [47]: 1*s(25)+1*s(26)+2
  Such that:s(25) =< V_n
s(26) =< 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [46]: 1*s(27)+1*s(28)+2
  Such that:s(27) =< V_n
s(28) =< 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


#### Cost of chains of eval_foo_start(V_n,V_m1,V_m2,B):
* Chain [63]: 2
  with precondition: [V_n=0,V_m1=0,V_m2>=0] 

* Chain [62]: 2
  with precondition: [V_n=0,V_m2=0,V_m1>=0] 

* Chain [61]: 1*s(29)+2
  Such that:s(29) =< V_m2

  with precondition: [V_n=0,V_m1>=0,V_m2>=1] 

* Chain [60]: 1*s(30)+2
  Such that:s(30) =< V_m1

  with precondition: [V_n=0,V_m1>=1,V_m2>=0] 

* Chain [59]: 0
  with precondition: [0>=V_n+1] 

* Chain [58]: 0
  with precondition: [0>=V_m1+1,V_n>=0] 

* Chain [57]: 0
  with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 

* Chain [56]: 1*s(31)+1*s(32)+2
  Such that:s(31) =< V_n
s(32) =< 2*V_n+V_m2

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 

* Chain [55]: 1*s(33)+1*s(34)+2
  Such that:s(33) =< V_n
s(34) =< 2*V_n+V_m1

  with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 


Closed-form bounds of eval_foo_start(V_n,V_m1,V_m2,B): 
-------------------------------------
* Chain [63] with precondition: [V_n=0,V_m1=0,V_m2>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [62] with precondition: [V_n=0,V_m2=0,V_m1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [61] with precondition: [V_n=0,V_m1>=0,V_m2>=1] 
    - Upper bound: V_m2+2 
    - Complexity: n 
* Chain [60] with precondition: [V_n=0,V_m1>=1,V_m2>=0] 
    - Upper bound: V_m1+2 
    - Complexity: n 
* Chain [59] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [58] with precondition: [0>=V_m1+1,V_n>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [57] with precondition: [0>=V_m2+1,V_n>=0,V_m1>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [56] with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 
    - Upper bound: 3*V_n+V_m2+2 
    - Complexity: n 
* Chain [55] with precondition: [V_n>=1,V_m1>=0,V_m2>=0] 
    - Upper bound: 3*V_n+V_m1+2 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_n,V_m1,V_m2,B): max([max([2,nat(V_m1)+2,nat(V_m2)+2]),nat(V_n)+2+max([nat(2*V_n+V_m1),nat(2*V_n+V_m2)])]) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 77 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 70 ms.
   - Equation cost structures 48 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 236 ms.

