Warning: Ignored call to eval_foo_stop/1 in equation eval_foo_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb3_in/9,eval_foo_bb4_in/9]
1. recursive  : [eval_foo_10/5,eval_foo_11/6,eval_foo_bb1_in/3,eval_foo_bb2_in/3,loop_cont_eval_foo_bb3_in/4]
2. non_recursive  : [eval_foo_bb5_in/1]
3. non_recursive  : [loop_cont_eval_foo_bb1_in/2]
4. non_recursive  : [eval_foo_7/2]
5. non_recursive  : [eval_foo_6/2]
6. non_recursive  : [eval_foo_5/2]
7. non_recursive  : [eval_foo_4/2]
8. non_recursive  : [eval_foo_3/2]
9. non_recursive  : [eval_foo_2/2]
10. non_recursive  : [eval_foo_1/2]
11. non_recursive  : [eval_foo_0/2]
12. non_recursive  : [eval_foo_bb0_in/2]
13. non_recursive  : [eval_foo_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb3_in/9
1. SCC is partially evaluated into eval_foo_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_7/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_foo_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb3_in/9 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_foo_bb3_in/9 
* CE 8: eval_foo_bb3_in(A,B,C,D,E,F,G,H,C) = 0
     [A+1>=F,E>=1,C>=0,0>=F,A+1=D,C+1=B,H=0,G=2] 
* CE 9: eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) = 1+ eval_foo_bb3_in(E,F,V_1,V_2,V_3,G,H,C,D)
     [V_2>=V_p_0,V_p_0>=1,V_3>=1,V_1>=0,V_p_0=G+1,V_1+1=F,V_2=E+1,V_1+1=V_x_0,V_2=V_r_0+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_foo_bb3_in/9 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

#### Loops of eval_foo_bb3_in/9 
* Loop 8: eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D)->  eval_foo_bb3_in(V_r_0',V_x_0',V_1,V_2,V_3,V_p_0',B',C,D)
                  [V_2>=V_p_0,V_p_0>=1,V_3>=1,V_1>=0,V_p_0=V_p_0'+1,V_1+1=V_x_0',V_2=V_r_0'+1,V_1+1=V_x_0,V_2=V_r_0+1,B'=2,B=2] 
* Loop 9: eval_foo_bb3_in(A,B,C,D,E,F,G,H,C) [A+1>=F,E>=1,C>=0,0>=F,A+1=D,C+1=B,H=0,G=2] 

### Ranking functions of CR eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* RF of phase [8]: [V_p_0]

#### Partial ranking functions of CR eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_p_0


### Resulting Chains:eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) 
* [[8],9]
* [9]


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_foo_bb1_in/3 
* CE 10: eval_foo_bb1_in(V_r_0,V_x_0,B) = 0
     [0>=V_x_0,B=3] 
* CE 11: eval_foo_bb1_in(V_r_0,V_x_0,B) = 2+ eval_foo_bb3_in(C,D,E,F,G,F,H,I,E):[[8],9]+ eval_foo_bb1_in(J,E,K)
     [G>=1,F>=1,E>=0,E+1=D,F=C+1,E+1=V_x_0,F=V_r_0+1,K=3,J=0,I=0,H=2,B=3] 
* CE 12: eval_foo_bb1_in(V_r_0,V_x_0,B) = 2+ eval_foo_bb3_in(V_r_0,C,D,E,F,G,H,I,D):[9]+ eval_foo_bb1_in(J,D,K)
     [F>=1,D>=0,0>=V_r_0+1,V_r_0+1=G,V_r_0+1=E,D+1=C,D+1=V_x_0,K=3,J=0,I=0,H=2,B=3] 
* CE 13: eval_foo_bb1_in(V_r_0,V_x_0,B) = 1+ eval_foo_bb1_in(C,D,E)
     [V_x_0>=1,V_x_0=D+1,C=V_r_0+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [10] --> Loop 13 

#### Loops of eval_foo_bb1_in/3 
* Loop 10: eval_foo_bb1_in(V_r_0,V_x_0,B)->  eval_foo_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0>=1,V_x_0=V_x_0'+1,V_r_0+1=V_r_0',B'=3,B=3] 
* Loop 11: eval_foo_bb1_in(V_r_0,V_x_0,B)->  eval_foo_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0'>=0,V_r_0>=0,V_x_0'+1=V_x_0,B'=3,V_r_0'=0,B=3] 
* Loop 12: eval_foo_bb1_in(V_r_0,V_x_0,B)->  eval_foo_bb1_in(V_r_0',V_x_0',B')
                  [V_x_0'>=0,0>=V_r_0+1,V_x_0'+1=V_x_0,B'=3,V_r_0'=0,B=3] 
* Loop 13: eval_foo_bb1_in(V_r_0,V_x_0,B) [0>=V_x_0,B=3] 

### Ranking functions of CR eval_foo_bb1_in(V_r_0,V_x_0,B) 
* RF of phase [10,11,12]: [V_x_0]

#### Partial ranking functions of CR eval_foo_bb1_in(V_r_0,V_x_0,B) 


### Resulting Chains:eval_foo_bb1_in(V_r_0,V_x_0,B) 
* [[10,11,12],13]
* [13]


### Specialization of cost equations eval_foo_7/2 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_foo_7/2 
* CE 14: eval_foo_7(V_n,B) = 1+ eval_foo_bb1_in(C,V_n,D):[[10,11,12],13]
     [V_n>=1,D=3,C=0] 
* CE 15: eval_foo_7(V_n,B) = 1+ eval_foo_bb1_in(C,V_n,D):[13]
     [0>=V_n,D=3,C=0] 

### Cost equations --> "Loop" of eval_foo_7/2 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_foo_7/2 
* Loop 14: eval_foo_7(V_n,B) [V_n>=1] 
* Loop 15: eval_foo_7(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_foo_7(V_n,B) 

#### Partial ranking functions of CR eval_foo_7(V_n,B) 


### Resulting Chains:eval_foo_7(V_n,B) 
* [15]
* [14]


### Specialization of cost equations eval_foo_start/2 
* CE 1 is refined into CE [16,17] 


#### Refined cost equations eval_foo_start/2 
* CE 16: eval_foo_start(V_n,B) = 0+ eval_foo_7(V_n,B):[15]
     [0>=V_n] 
* CE 17: eval_foo_start(V_n,B) = 0+ eval_foo_7(V_n,B):[14]
     [V_n>=1] 

### Cost equations --> "Loop" of eval_foo_start/2 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_foo_start/2 
* Loop 16: eval_foo_start(V_n,B) [V_n>=1] 
* Loop 17: eval_foo_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_foo_start(V_n,B) 

#### Partial ranking functions of CR eval_foo_start(V_n,B) 


### Resulting Chains:eval_foo_start(V_n,B) 
* [17]
* [16]


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) -> [eval_foo_bb3_in(V_r_0',V_x_0',V_1',V_2',V_3',V_p_0',B',C',D')] 
1
#### Cost of phase [8]:eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D) -> [eval_foo_bb3_in(V_r_0',V_x_0',V_1',V_2',V_3',V_p_0',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V_p_0
it(8) =< V_p_0-V_p_0'

#### Cost of chains of eval_foo_bb3_in(V_r_0,V_x_0,V_1,V_2,V_3,V_p_0,B,C,D):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_p_0

  with precondition: [B=2,C=0,V_x_0=V_1+1,V_r_0+1=V_2,V_x_0=D+1,V_x_0>=1,V_3>=1,V_p_0>=1,V_r_0+1>=V_p_0] 

* Chain [9]: 0
  with precondition: [B=2,C=0,V_2=V_r_0+1,V_x_0=V_1+1,V_x_0=D+1,0>=V_p_0,V_x_0>=1,V_3>=1,V_2>=V_p_0] 


#### Cost of loops [10,11] 

 * loop 10:eval_foo_bb1_in(V_r_0,V_x_0,B) -> [eval_foo_bb1_in(V_r_0',V_x_0',B')] 
1
 * loop 11:eval_foo_bb1_in(V_r_0,V_x_0,B) -> [eval_foo_bb1_in(V_r_0',V_x_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_r_0+1

#### Cost of phase [10,11,12]:eval_foo_bb1_in(V_r_0,V_x_0,B) -> [eval_foo_bb1_in(V_r_0',V_x_0',B')] 
3*it(10)+1*s(3)+0
  Such that:s(3) =< V_r_0+V_x_0
s(3) =< V_r_0+V_x_0-V_r_0'-V_x_0'
aux(1) =< V_x_0
aux(2) =< V_x_0-V_x_0'
it(10) =< aux(1)
it(10) =< aux(2)

#### Cost of chains of eval_foo_bb1_in(V_r_0,V_x_0,B):
* Chain [[10,11,12],13]: 3*it(10)+1*s(3)+0
  Such that:s(3) =< V_r_0+V_x_0
aux(3) =< V_x_0
it(10) =< aux(3)

  with precondition: [B=3,V_r_0>=0,V_x_0>=1] 

* Chain [13]: 0
  with precondition: [B=3,0>=V_x_0,V_r_0>=0] 


#### Cost of chains of eval_foo_7(V_n,B):
* Chain [15]: 1
  with precondition: [0>=V_n] 

* Chain [14]: 4*s(4)+1
  Such that:aux(4) =< V_n
s(4) =< aux(4)

  with precondition: [V_n>=1] 


#### Cost of chains of eval_foo_start(V_n,B):
* Chain [17]: 1
  with precondition: [0>=V_n] 

* Chain [16]: 4*s(8)+1
  Such that:s(7) =< V_n
s(8) =< s(7)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_foo_start(V_n,B): 
-------------------------------------
* Chain [17] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [16] with precondition: [V_n>=1] 
    - Upper bound: 4*V_n+1 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_n,B): nat(V_n)*4+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 28 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 34 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 157 ms.

