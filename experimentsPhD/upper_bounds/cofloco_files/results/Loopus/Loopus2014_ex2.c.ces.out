Warning: Ignored call to eval_start_stop/1 in equation eval_start_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_12/8,eval_start_13/9,eval_start_bb3_in/8,eval_start_bb4_in/8,eval_start_bb5_in/9]
1. recursive  : [eval_start_8/4,eval_start_9/5,eval_start__critedge_in/3,eval_start_bb1_in/3,eval_start_bb2_in/5,loop_cont_eval_start_bb3_in/4]
2. non_recursive  : [eval_start_bb6_in/1]
3. non_recursive  : [loop_cont_eval_start__critedge_in/2]
4. non_recursive  : [eval_start_6/2]
5. non_recursive  : [eval_start_5/2]
6. non_recursive  : [eval_start_4/2]
7. non_recursive  : [eval_start_3/2]
8. non_recursive  : [eval_start_2/2]
9. non_recursive  : [eval_start_1/2]
10. non_recursive  : [eval_start_0/2]
11. non_recursive  : [eval_start_bb0_in/2]
12. non_recursive  : [eval_start_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb3_in/8
1. SCC is partially evaluated into eval_start__critedge_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_start_6/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_start_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb3_in/8 
* CE 6 is refined into CE [9] 
* CE 8 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_start_bb3_in/8 
* CE 9: eval_start_bb3_in(A,B,C,D,E,F,C,E) = 0
     [B>=E,E>=1,C>=0,0>=D,C+1=A,F=2] 
* CE 10: eval_start_bb3_in(A,B,C,D,E,F,C,E) = 0
     [B>=E,C>=0,0>=E,0>=D,C+1=A,F=2] 
* CE 11: eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) = 1+ eval_start_bb3_in(E,V_n_0,V_1,V_2,F,G,C,D)
     [V_n_0>=V_n_1,V_n_1>=1,V_1>=0,0>=V_2,V_n_1=F+1,V_1+1=E,V_1+1=V_i_0,G=2,B=2] 

### Cost equations --> "Loop" of eval_start_bb3_in/8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of eval_start_bb3_in/8 
* Loop 9: eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D)->  eval_start_bb3_in(V_i_0',V_n_0,V_1,V_2,V_n_1',B',C,D)
                  [V_n_0>=V_n_1,V_n_1>=1,V_1>=0,0>=V_2,V_n_1=V_n_1'+1,V_1+1=V_i_0',V_1+1=V_i_0,B'=2,B=2] 
* Loop 10: eval_start_bb3_in(A,B,C,D,E,F,C,E) [B>=E,E>=1,C>=0,0>=D,C+1=A,F=2] 
* Loop 11: eval_start_bb3_in(A,B,C,D,E,F,C,E) [B>=E,C>=0,0>=E,0>=D,C+1=A,F=2] 

### Ranking functions of CR eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* RF of phase [9]: [V_n_1]

#### Partial ranking functions of CR eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_n_1


### Resulting Chains:eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Specialization of cost equations eval_start__critedge_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14,15,16] 
* CE 3 is refined into CE [17] 


#### Refined cost equations eval_start__critedge_in/3 
* CE 12: eval_start__critedge_in(V_i_0,V_n_0,B) = 0
     [0>=V_i_0,B=3] 
* CE 13: eval_start__critedge_in(V_i_0,V_n_0,B) = 2+ eval_start_bb3_in(C,V_n_0,D,E,V_n_0,F,D,G):[[9],11]+ eval_start__critedge_in(D,H,I)
     [V_n_0>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,I=3,H=0,G=0,F=2,B=3] 
* CE 14: eval_start__critedge_in(V_i_0,V_n_0,B) = 2+ eval_start_bb3_in(C,V_n_0,D,E,V_n_0,F,D,G):[[9],10]+ eval_start__critedge_in(D,G,H)
     [V_n_0>=G+1,G>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,H=3,F=2,B=3] 
* CE 15: eval_start__critedge_in(V_i_0,V_n_0,B) = 2+ eval_start_bb3_in(C,V_n_0,D,E,V_n_0,F,D,V_n_0):[11]+ eval_start__critedge_in(D,V_n_0,G)
     [D>=0,0>=V_n_0,0>=E,D+1=C,D+1=V_i_0,G=3,F=2,B=3] 
* CE 16: eval_start__critedge_in(V_i_0,V_n_0,B) = 2+ eval_start_bb3_in(C,V_n_0,D,E,V_n_0,F,D,V_n_0):[10]+ eval_start__critedge_in(D,V_n_0,G)
     [V_n_0>=1,D>=0,0>=E,D+1=C,D+1=V_i_0,G=3,F=2,B=3] 
* CE 17: eval_start__critedge_in(V_i_0,V_n_0,B) = 1+ eval_start__critedge_in(C,D,E)
     [V_i_0>=1,V_i_0=C+1,D=V_n_0+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_start__critedge_in/3 
* CEs [17] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [13] --> Loop 16 
* CEs [12] --> Loop 17 

#### Loops of eval_start__critedge_in/3 
* Loop 12: eval_start__critedge_in(V_i_0,V_n_0,B)->  eval_start__critedge_in(V_i_0',V_n_0',B')
                  [V_i_0>=1,V_n_0+1=V_n_0',V_i_0=V_i_0'+1,B'=3,B=3] 
* Loop 13: eval_start__critedge_in(V_i_0,V_n_0,B)->  eval_start__critedge_in(V_i_0',V_n_0',B')
                  [V_n_0>=V_n_0'+1,V_n_0'>=1,V_i_0'>=0,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 14: eval_start__critedge_in(V_i_0,V_n_0,B)->  eval_start__critedge_in(V_i_0',V_n_0,B')
                  [V_i_0'>=0,V_n_0>=1,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 15: eval_start__critedge_in(V_i_0,V_n_0,B)->  eval_start__critedge_in(V_i_0',V_n_0,B')
                  [V_i_0'>=0,0>=V_n_0,V_i_0'+1=V_i_0,B'=3,B=3] 
* Loop 16: eval_start__critedge_in(V_i_0,V_n_0,B)->  eval_start__critedge_in(V_i_0',V_n_0',B')
                  [V_i_0'>=0,V_n_0>=1,V_i_0'+1=V_i_0,B'=3,V_n_0'=0,B=3] 
* Loop 17: eval_start__critedge_in(V_i_0,V_n_0,B) [0>=V_i_0,B=3] 

### Ranking functions of CR eval_start__critedge_in(V_i_0,V_n_0,B) 
* RF of phase [12,13,14,15,16]: [V_i_0]

#### Partial ranking functions of CR eval_start__critedge_in(V_i_0,V_n_0,B) 
* Partial RF of phase [12,13,14,15,16]:
  - RF of loop [12:1,13:1,14:1,15:1,16:1]:
    V_i_0
  - RF of loop [13:1]:
    V_n_0-1 depends on loops [12:1] 
  - RF of loop [16:1]:
    V_n_0 depends on loops [12:1] 


### Resulting Chains:eval_start__critedge_in(V_i_0,V_n_0,B) 
* [[12,13,14,15,16],17]
* [17]


### Specialization of cost equations eval_start_6/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_start_6/2 
* CE 18: eval_start_6(V_m,B) = 1+ eval_start__critedge_in(V_m,C,D):[[12,13,14,15,16],17]
     [V_m>=1,D=3,C=0] 
* CE 19: eval_start_6(V_m,B) = 1+ eval_start__critedge_in(V_m,C,D):[17]
     [0>=V_m,D=3,C=0] 

### Cost equations --> "Loop" of eval_start_6/2 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_start_6/2 
* Loop 18: eval_start_6(V_m,B) [V_m>=1] 
* Loop 19: eval_start_6(V_m,B) [0>=V_m] 

### Ranking functions of CR eval_start_6(V_m,B) 

#### Partial ranking functions of CR eval_start_6(V_m,B) 


### Resulting Chains:eval_start_6(V_m,B) 
* [19]
* [18]


### Specialization of cost equations eval_start_start/2 
* CE 1 is refined into CE [20,21] 


#### Refined cost equations eval_start_start/2 
* CE 20: eval_start_start(V_m,B) = 0+ eval_start_6(V_m,B):[19]
     [0>=V_m] 
* CE 21: eval_start_start(V_m,B) = 0+ eval_start_6(V_m,B):[18]
     [V_m>=1] 

### Cost equations --> "Loop" of eval_start_start/2 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of eval_start_start/2 
* Loop 20: eval_start_start(V_m,B) [V_m>=1] 
* Loop 21: eval_start_start(V_m,B) [0>=V_m] 

### Ranking functions of CR eval_start_start(V_m,B) 

#### Partial ranking functions of CR eval_start_start(V_m,B) 


### Resulting Chains:eval_start_start(V_m,B) 
* [21]
* [20]


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_start_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1
#### Cost of phase [9]:eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_start_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< V_n_1
it(9) =< V_n_1-V_n_1'

#### Cost of phase [9]:eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D) -> [eval_start_bb3_in(V_i_0',V_n_0',V_1',V_2',V_n_1',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< V_n_1
it(9) =< V_n_1-V_n_1'

#### Cost of chains of eval_start_bb3_in(V_i_0,V_n_0,V_1,V_2,V_n_1,B,C,D):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V_n_1

  with precondition: [B=2,D=0,V_i_0=V_1+1,V_i_0=C+1,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_n_1-D

  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,0>=V_2,V_i_0>=1,D>=1,V_n_0>=V_n_1,V_n_1>=D+1] 

* Chain [11]: 0
  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,V_n_1=D,0>=V_2,0>=V_n_1,V_i_0>=1,V_n_0>=V_n_1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0=V_1+1,V_i_0=C+1,V_n_1=D,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 


#### Cost of loops [12,13,14,15,16] 

 * loop 12:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
1
 * loop 13:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_n_0-V_n_0'

 * loop 14:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
2
 * loop 15:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
2
 * loop 16:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_n_0

#### Cost of phase [12,13,14,15,16]:eval_start__critedge_in(V_i_0,V_n_0,B) -> [eval_start__critedge_in(V_i_0',V_n_0',B')] 
5*it(12)+4*it(13)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(11) =< V_i_0
aux(12) =< V_i_0-V_i_0'
aux(13) =< V_n_0
aux(14) =< V_n_0-V_n_0'
it(12) =< aux(11)
it(13) =< aux(11)
it(12) =< aux(12)
it(13) =< aux(12)
aux(10) =< aux(5)+1
s(6) =< it(12)+aux(14)
s(6) =< it(12)+aux(13)
it(13) =< it(12)+aux(14)
it(13) =< it(12)+aux(13)
s(5) =< it(12)+aux(14)
s(5) =< it(12)+aux(13)
s(6) =< it(13)*aux(10)
s(5) =< it(13)*aux(5)

#### Cost of chains of eval_start__critedge_in(V_i_0,V_n_0,B):
* Chain [[12,13,14,15,16],17]: 5*it(12)+4*it(13)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(15) =< V_i_0
aux(16) =< V_n_0
it(12) =< aux(15)
it(13) =< aux(15)
aux(10) =< aux(5)+1
s(6) =< it(12)+aux(16)
it(13) =< it(12)+aux(16)
s(5) =< it(12)+aux(16)
s(6) =< it(13)*aux(10)
s(5) =< it(13)*aux(5)

  with precondition: [B=3,V_i_0>=1,V_n_0>=0] 

* Chain [17]: 0
  with precondition: [B=3,0>=V_i_0,V_n_0>=0] 


#### Cost of chains of eval_start_6(V_m,B):
* Chain [19]: 1
  with precondition: [0>=V_m] 

* Chain [18]: 5*s(10)+4*s(11)+1*s(13)+1*s(14)+1
  Such that:aux(17) =< V_m
s(10) =< aux(17)
s(11) =< aux(17)
s(12) =< aux(17)+1
s(13) =< s(10)
s(11) =< s(10)
s(14) =< s(10)
s(13) =< s(11)*s(12)
s(14) =< s(11)*aux(17)

  with precondition: [V_m>=1] 


#### Cost of chains of eval_start_start(V_m,B):
* Chain [21]: 1
  with precondition: [0>=V_m] 

* Chain [20]: 5*s(16)+4*s(17)+1*s(19)+1*s(20)+1
  Such that:s(15) =< V_m
s(16) =< s(15)
s(17) =< s(15)
s(18) =< s(15)+1
s(19) =< s(16)
s(17) =< s(16)
s(20) =< s(16)
s(19) =< s(17)*s(18)
s(20) =< s(17)*s(15)

  with precondition: [V_m>=1] 


Closed-form bounds of eval_start_start(V_m,B): 
-------------------------------------
* Chain [21] with precondition: [0>=V_m] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V_m>=1] 
    - Upper bound: 11*V_m+1 
    - Complexity: n 

### Maximum cost of eval_start_start(V_m,B): nat(V_m)*11+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 40 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 44 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 73 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 44 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 219 ms.

