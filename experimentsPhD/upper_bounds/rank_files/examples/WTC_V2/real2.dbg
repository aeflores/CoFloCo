FrontEnd version J.3
qualif real2
inside declaration [real2,real2]
inside declaration [real2,real2,len]
inside declaration [real2,real2,tab]
inside declaration [real2,real2,tmp]
inside declaration [real2,real2,again]
inside declaration [real2,real2,i]
inside declaration [real2,cst__5]
inside declaration [real2,cst__3]
inside declaration [real2,cst__1]
table([real2,cst__1] = __declaration(__inside(char_data("real2")),
  __constant(`$$value`("10"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [real2,cst__3] = __declaration(__inside(char_data("real2")),
     __constant(`$$value`("1"),char_data("cst__3")),
     __basic(char_data("__integer"))),
   [real2,cst__5] = __declaration(__inside(char_data("real2")),
     __constant(`$$value`("0"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [real2,real2] = __declaration(__inside(char_data("real2")),
     __identifier(char_data("real2")),
     __function(__identifier(char_data("real2")),
       __basic(char_data("void")))),
   [real2,real2,again] = __declaration(__inside(char_data("real2"),
     char_data("real2")),__identifier(char_data("again")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [real2,real2,i] = __declaration(__inside(char_data("real2"),
     char_data("real2")),__identifier(char_data("i")),
       __basic(`$$size`("32"),char_data("__integer"))),
   [real2,real2,lbl_2] = __for(`$$label`("lbl_2"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("again"))),
       __expression(__constant(char_data("cst__3"))))),
     __test(__expression(__identifier(char_data("again")))),__next()),
 [real2,real2,lbl_2,lbl_4] = __for(`$$label`("lbl_4"),
   __init(__expression(__operator(char_data("__assignment")),
     __expression(__identifier(char_data("again"))),
     __expression(__constant(char_data("cst__5")))),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__5"))))),
   __test(__expression(__operator(char_data("__lt")),
     __expression(__identifier(char_data("i"))),
     __expression(__operator(char_data("__subtraction")),
       __expression(__identifier(char_data("len"))),
       __expression(__constant(char_data("cst__3")))))),
   __next(__expression(__operator(char_data("_post_incr")),
     __expression(__identifier(char_data("i")))))),
 [real2,real2,lbl_2,lbl_4,lbl_6] = __if(`$$label`("lbl_6"),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__subscript")),
       __expression(__identifier(char_data("tab"))),
       __expression(__identifier(char_data("i")))),
     __expression(__operator(char_data("__subscript")),
       __expression(__identifier(char_data("tab"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("i"))),
         __expression(__constant(char_data("cst__3"))))))),
 [real2,real2,lbl_2,lbl_4,lbl_6,_false,
 lbl_11] = __statement(`$$label`("lbl_11"),__inside(char_data("real2"),
     char_data("real2"),char_data("lbl_2"),char_data("lbl_4"),
     char_data("lbl_6"),char_data("_false")),__nop()),
[real2,real2,lbl_2,lbl_4,lbl_6,_true,
lbl_10] = __statement(`$$label`("lbl_10"),__inside(char_data("real2"),
   char_data("real2"),char_data("lbl_2"),char_data("lbl_4"),
   char_data("lbl_6"),char_data("_true")),
 __expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("again"))),
   __expression(__constant(char_data("cst__3"))))),
[real2,real2,lbl_2,lbl_4,lbl_6,_true,
 lbl_7] = __statement(`$$label`("lbl_7"),__inside(char_data("real2"),
   char_data("real2"),char_data("lbl_2"),char_data("lbl_4"),
   char_data("lbl_6"),char_data("_true")),
 __expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("tmp"))),
   __expression(__operator(char_data("__subscript")),
     __expression(__identifier(char_data("tab"))),
     __expression(__identifier(char_data("i")))))),
[real2,real2,lbl_2,lbl_4,lbl_6,_true,
 lbl_8] = __statement(`$$label`("lbl_8"),__inside(char_data("real2"),
   char_data("real2"),char_data("lbl_2"),char_data("lbl_4"),
   char_data("lbl_6"),char_data("_true")),
 __expression(__operator(char_data("__assignment")),
   __expression(__operator(char_data("__subscript")),
     __expression(__identifier(char_data("tab"))),
     __expression(__identifier(char_data("i")))),
   __expression(__operator(char_data("__subscript")),
     __expression(__identifier(char_data("tab"))),
     __expression(__operator(char_data("__addition")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__3"))))))),
[real2,real2,lbl_2,lbl_4,lbl_6,_true,
 lbl_9] = __statement(`$$label`("lbl_9"),__inside(char_data("real2"),
   char_data("real2"),char_data("lbl_2"),char_data("lbl_4"),
   char_data("lbl_6"),char_data("_true")),
 __expression(__operator(char_data("__assignment")),
   __expression(__operator(char_data("__subscript")),
     __expression(__identifier(char_data("tab"))),
     __expression(__operator(char_data("__addition")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__3"))))),
   __expression(__identifier(char_data("tmp"))))),
[real2,real2,len] = __declaration(__inside(char_data("real2"),
 char_data("real2")),__identifier(char_data("len")),__basic(`$$size`("32"),
   char_data("__integer"))),
[real2,real2,tab] = __declaration(__inside(char_data("real2"),
 char_data("real2")),__identifier(char_data("tab")),
 __array(__basic(`$$size`("32"),char_data("__integer")),
   __expression(__constant(char_data("cst__1"))))),
[real2,real2,tmp] = __declaration(__inside(char_data("real2"),
 char_data("real2")),__identifier(char_data("tmp")),__basic(`$$size`("32"),
   char_data("__integer"))))
table([real2,real2] = [[real2,real2],[real2,cst__5],[real2,cst__3],[real2,
cst__1],[real2,real2],[real2,real2,len],[real2,real2,tab],[real2,real2,
tmp],[real2,real2,again],[real2,real2,i],[real2,real2,lbl_2,lbl_4,lbl_6],
[real2,real2,lbl_2,lbl_4],[real2,real2,lbl_2],[real2,real2,lbl_2,lbl_4,
lbl_6,_true,lbl_7],[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_8],[real2,
real2,lbl_2,lbl_4,lbl_6,_true,lbl_9],[real2,real2,lbl_2,lbl_4,lbl_6,_true,
lbl_10],[real2,real2,lbl_2,lbl_4,lbl_6,_false,lbl_11]])
[[real2,real2,len],[real2,real2,tab],[real2,real2,tmp],[real2,real2,again],
[real2,real2,i],[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_7],[real2,real2,
lbl_2,lbl_4,lbl_6,_true,lbl_8],[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_9],
[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_10],[real2,real2,lbl_2,lbl_4,
lbl_6,_false,lbl_11]]
body [[real2,real2],[real2,cst__5],[real2,cst__3],[real2,cst__1],[real2,
real2],[real2,real2,len],[real2,real2,tab],[real2,real2,tmp],[real2,real2,
again],[real2,real2,i],[real2,real2,lbl_2,lbl_4,lbl_6],[real2,real2,lbl_2,
lbl_4],[real2,real2,lbl_2],[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_7],
[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_8],[real2,real2,lbl_2,lbl_4,lbl_6,
_true,lbl_9],[real2,real2,lbl_2,lbl_4,lbl_6,_true,lbl_10],[real2,real2,
lbl_2,lbl_4,lbl_6,_false,lbl_11]]
lbl_6 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("tmp")))
[tmp(),[],{},{}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("tab"))),
__expression(__identifier(char_data("i"))))
collect subscripts __expression(__identifier(char_data("tab")))
[tab(),[],{},{}]
[tab(),[i],{},{i()}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("tab"))),
__expression(__identifier(char_data("i"))))
collect subscripts __expression(__identifier(char_data("tab")))
[tab(),[],{},{}]
[tab(),[i],{},{i()}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("tab"))),
__expression(__operator(char_data("__addition")),
__expression(__identifier(char_data("i"))),
__expression(__constant(char_data("cst__3")))))
collect subscripts __expression(__identifier(char_data("tab")))
[tab(),[],{},{}]
[tab(),[i+1],{},{i()}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("tab"))),
__expression(__operator(char_data("__addition")),
__expression(__identifier(char_data("i"))),
__expression(__constant(char_data("cst__3")))))
collect subscripts __expression(__identifier(char_data("tab")))
[tab(),[],{},{}]
[tab(),[i+1],{},{i()}]
collect subscripts __expression(__identifier(char_data("again")))
[again(),[],{},{}]
examining again
 has definitions
examining cst__1
 is a constant
examining cst__3
 is a constant
examining cst__5
 is a constant
examining i
 has definitions
examining len
 is never defined
examining real2
examining tab
 is an array
examining tmp
 has definitions
