sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1],table((counterex1b,
     __dim) = 0,
       (counterex1b,__formals) = [n,x,y],
       (counterex1b,__kind) = __global,
       (counterex1b,__schedule) = [],
       (counterex1b,
       __text) = __declaration(__inside(char_data("counterex1b")),
         __identifier(char_data("counterex1b")),
         __function(__identifier(char_data("counterex1b")),
           __basic(char_data("void")),__identifier(char_data("n")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("x")),__basic(`$$size`("32"),
             char_data("__integer")),__identifier(char_data("y")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (counterex1b,
       __type) = __function(__identifier(char_data("counterex1b")),
         __basic(char_data("void")),__identifier(char_data("n")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("x")),__basic(`$$size`("32"),
           char_data("__integer")),__identifier(char_data("y")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (counterex1b,actual__Alloc) = [],
       (cst__2,__dim) = 0,
       (cst__2,__kind) = __global,
       (cst__2,__schedule) = [],
       (cst__2,
       __text) = __declaration(__inside(char_data("counterex1b")),
         __constant(`$$value`("0"),char_data("cst__2")),
         __basic(char_data("__integer"))),
       (cst__2,__type) = __basic(char_data("__integer")),
       (cst__2,__value) = "0",
       (cst__2,actual__Alloc) = [],
       (n,__dim) = 0,
       (n,__kind) = __param,
       (n,__schedule) = [],
       (n,__text) = __declaration(__identifier(char_data(n)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (n,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (n,actual__Alloc) = [],
       (nondet,__dim) = 0,
       (nondet,__kind) = __global,
       (nondet,__schedule) = [],
       (nondet,
       __text) = __declaration(__inside(char_data("counterex1b")),
         __identifier(char_data("nondet")),
         __function(__identifier(char_data("nondet")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (nondet,__type) = __function(__identifier(char_data("nondet")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (nondet,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __param,
       (x,__schedule) = [],
       (x,__text) = __declaration(__identifier(char_data(x)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __param,
       (y,__schedule) = [],
       (y,__text) = __declaration(__identifier(char_data(y)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((lbl_1,__body) = [lbl_3,lbl_5,
      lbl_6],
       (lbl_1,__counter) = 1/0,
       (lbl_1,__depth) = 0,
       (lbl_1,__kind) = __while,
       (lbl_1,__outer) = [],
       (lbl_1,__text) = __while(`$$label`("lbl_1"),
         __expression(__operator(char_data("__ge")),
           __expression(__identifier(char_data("x"))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_1,false__part) = [],
       (lbl_1,true__part) = [],
       (lbl_3,__body) = [lbl_4],
       (lbl_3,__counter) = 1/0,
       (lbl_3,__depth) = 1,
       (lbl_3,__kind) = __while,
       (lbl_3,__outer) = [1/0],
       (lbl_3,__text) = __while(`$$label`("lbl_3"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__ge")),
             __expression(__identifier(char_data("y"))),
             __expression(__constant(char_data("cst__2")))),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__funcall")),
               __expression(__identifier(char_data("nondet")))),
             __expression(__constant(char_data("cst__2")))))),
       (lbl_3,false__part) = [],
       (lbl_3,true__part) = [],
       (lbl_6,__body) = [lbl_7],
       (lbl_6,__counter) = 1/0,
       (lbl_6,__depth) = 1,
       (lbl_6,__kind) = __while,
       (lbl_6,__outer) = [1/0],
       (lbl_6,__text) = __while(`$$label`("lbl_6"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__le")),
             __expression(__identifier(char_data("y"))),
             __expression(__identifier(char_data("n")))),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__funcall")),
               __expression(__identifier(char_data("nondet")))),
             __expression(__constant(char_data("cst__2")))))),
       (lbl_6,false__part) = [],
       (lbl_6,true__part) = []),table((lbl_4,__board) = table(),
       (lbl_4,__iteration) = [1/0,1/0],
       (lbl_4,__kind) = _post_decr,
       (lbl_4,__loops) = [lbl_1,lbl_3],
       (lbl_4,__position) = [counterex1b,counterex1b,lbl_1,lbl_3],
       (lbl_4,__process) = counterex1b,
       (lbl_4,__schedule) = [],
       (lbl_4,__text) = __statement(`$$label`("lbl_4"),
         __inside(char_data("counterex1b"),char_data("counterex1b"),
           char_data("lbl_1"),char_data("lbl_3")),
         __expression(__operator(char_data("_post_decr")),
           __expression(__identifier(char_data("y"))))),
       (lbl_4,extended__domain) = {},
       (lbl_4,extended__iteration) = [],
       (lbl_4,inner__Constraints) = {},
       (lbl_4,inner__Variables) = [],
       (lbl_4,iteration__Domain) = {},
       (lbl_4,local__Parameters) = {},
       (lbl_4,original__Read) = {y()},
     (lbl_4,original__Write) = {y()},
   (lbl_4,read__Ref) = {y()},
 (lbl_4,write__Ref) = {y()},
(lbl_5,__board) = table(),
(lbl_5,__iteration) = [1/0],
(lbl_5,__kind) = _post_decr,
(lbl_5,__loops) = [lbl_1],
(lbl_5,__position) = [counterex1b,counterex1b,lbl_1],
(lbl_5,__process) = counterex1b,
(lbl_5,__schedule) = [],
(lbl_5,__text) = __statement(`$$label`("lbl_5"),
 __inside(char_data("counterex1b"),char_data("counterex1b"),
   char_data("lbl_1")),
   __expression(__operator(char_data("_post_decr")),
   __expression(__identifier(char_data("x"))))),
(lbl_5,extended__domain) = {},
(lbl_5,extended__iteration) = [],
(lbl_5,inner__Constraints) = {},
(lbl_5,inner__Variables) = [],
(lbl_5,iteration__Domain) = {},
(lbl_5,local__Parameters) = {},
(lbl_5,original__Read) = {x()},
(lbl_5,original__Write) = {x()},
(lbl_5,read__Ref) = {x()},
(lbl_5,write__Ref) = {x()},
(lbl_7,__board) = table(),
(lbl_7,__iteration) = [1/0,1/0],
(lbl_7,__kind) = _post_incr,
(lbl_7,__loops) = [lbl_1,lbl_6],
(lbl_7,__position) = [counterex1b,counterex1b,lbl_1,lbl_6],
(lbl_7,__process) = counterex1b,
(lbl_7,__schedule) = [],
(lbl_7,__text) = __statement(`$$label`("lbl_7"),
__inside(char_data("counterex1b"),char_data("counterex1b"),
char_data("lbl_1"),char_data("lbl_6")),
__expression(__operator(char_data("_post_incr")),
__expression(__identifier(char_data("y"))))),
(lbl_7,extended__domain) = {},
(lbl_7,extended__iteration) = [],
(lbl_7,inner__Constraints) = {},
(lbl_7,inner__Variables) = [],
(lbl_7,iteration__Domain) = {},
(lbl_7,local__Parameters) = {},
(lbl_7,original__Read) = {y()},
(lbl_7,original__Write) = {y()},
(lbl_7,read__Ref) = {y()},
(lbl_7,write__Ref) = {y()}),[n],[lbl_4,lbl_5,lbl_7],NIL,NIL,NIL,NIL,
0]));
