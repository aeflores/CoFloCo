FrontEnd version J.3
qualif exmini
inside declaration [exmini,exmini]
inside declaration [exmini,exmini,tmp]
inside declaration [exmini,cst__5]
inside declaration [exmini,cst__2]
table([exmini,cst__2] = __declaration(__inside(char_data("exmini")),
  __constant(`$$value`("100"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [exmini,cst__5] = __declaration(__inside(char_data("exmini")),
     __constant(`$$value`("1"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [exmini,exmini] = __declaration(__inside(char_data("exmini")),
     __identifier(char_data("exmini")),
     __function(__identifier(char_data("exmini")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("i")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("j")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("k")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [exmini,exmini,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("i"))),
         __expression(__constant(char_data("cst__2")))),
       __expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("k")))))),
   [exmini,exmini,lbl_1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("exmini"),char_data("exmini"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("tmp"))),
       __expression(__identifier(char_data("i"))))),
   [exmini,exmini,lbl_1,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("exmini"),char_data("exmini"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("j"))))),
   [exmini,exmini,lbl_1,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("exmini"),char_data("exmini"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("tmp"))),
         __expression(__constant(char_data("cst__5")))))),
   [exmini,exmini,lbl_1,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("exmini"),char_data("exmini"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("k"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("k"))),
         __expression(__constant(char_data("cst__5")))))),
   [exmini,exmini,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("exmini"),char_data("exmini")),__return()),
 [exmini,exmini,tmp] = __declaration(__inside(char_data("exmini"),
   char_data("exmini")),__identifier(char_data("tmp")),
   __basic(`$$size`("32"),char_data("__integer"))))
table([exmini,exmini] = [[exmini,exmini],[exmini,cst__5],[exmini,cst__2],
[exmini,exmini],[exmini,exmini,tmp],[exmini,exmini,lbl_1],[exmini,exmini,
  lbl_1,lbl_3],[exmini,exmini,lbl_1,lbl_4],[exmini,exmini,lbl_1,lbl_6],
[exmini,exmini,lbl_1,lbl_7],[exmini,exmini,lbl_8]])
[[exmini,exmini,tmp],[exmini,exmini,lbl_1,lbl_3],[exmini,exmini,lbl_1,
lbl_4],[exmini,exmini,lbl_1,lbl_6],[exmini,exmini,lbl_1,lbl_7],[exmini,
  exmini,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of i is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of j is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of k is 0
body [[exmini,exmini],[exmini,cst__5],[exmini,cst__2],[exmini,exmini],
[exmini,exmini,tmp],[exmini,exmini,lbl_1],[exmini,exmini,lbl_1,lbl_3],
[exmini,exmini,lbl_1,lbl_4],[exmini,exmini,lbl_1,lbl_6],[exmini,exmini,
  lbl_1,lbl_7],[exmini,exmini,lbl_8]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("tmp")))
[tmp(),[],{},{}]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("k")))
[k(),[],{},{}]
examining cst__2
 is a constant
examining cst__5
 is a constant
examining exmini
examining i
examining j
examining k
examining tmp
 has definitions
while remnants __conjunction(__le(i,100),__le(j,k))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (100 >= i) && (k >= j) )
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
