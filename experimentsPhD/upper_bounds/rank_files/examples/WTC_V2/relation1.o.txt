sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_2,lbl_3,lbl_12],
    table((cst__1,__dim) = 0,
       (cst__1,__kind) = __global,
       (cst__1,__schedule) = [],
       (cst__1,
         __text) = __declaration(__inside(char_data("relation1")),
         __constant(`$$value`("0"),char_data("cst__1")),
         __basic(char_data("__integer"))),
       (cst__1,__type) = __basic(char_data("__integer")),
       (cst__1,__value) = "0",
       (cst__1,actual__Alloc) = [],
       (cst__4,__dim) = 0,
       (cst__4,__kind) = __global,
       (cst__4,__schedule) = [],
       (cst__4,
         __text) = __declaration(__inside(char_data("relation1")),
         __constant(`$$value`("10"),char_data("cst__4")),
         __basic(char_data("__integer"))),
       (cst__4,__type) = __basic(char_data("__integer")),
       (cst__4,__value) = "10",
       (cst__4,actual__Alloc) = [],
       (cst__8,__dim) = 0,
       (cst__8,__kind) = __global,
       (cst__8,__schedule) = [],
       (cst__8,
         __text) = __declaration(__inside(char_data("relation1")),
         __constant(`$$value`("2"),char_data("cst__8")),
         __basic(char_data("__integer"))),
       (cst__8,__type) = __basic(char_data("__integer")),
       (cst__8,__value) = "2",
       (cst__8,actual__Alloc) = [],
       (cst__9,__dim) = 0,
       (cst__9,__kind) = __global,
       (cst__9,__schedule) = [],
       (cst__9,
         __text) = __declaration(__inside(char_data("relation1")),
         __constant(`$$value`("1"),char_data("cst__9")),
         __basic(char_data("__integer"))),
       (cst__9,__type) = __basic(char_data("__integer")),
       (cst__9,__value) = "1",
       (cst__9,actual__Alloc) = [],
       (nondet,__dim) = 0,
       (nondet,__kind) = __global,
       (nondet,__schedule) = [],
       (nondet,
         __text) = __declaration(__inside(char_data("relation1")),
         __identifier(char_data("nondet")),
         __function(__identifier(char_data("nondet")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (nondet,__type) = __function(__identifier(char_data("nondet")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (nondet,actual__Alloc) = [],
       (relation1,__dim) = 0,
       (relation1,__formals) = [x,y],
       (relation1,__kind) = __global,
       (relation1,__schedule) = [],
       (relation1,
       __text) = __declaration(__inside(char_data("relation1")),
         __identifier(char_data("relation1")),
         __function(__identifier(char_data("relation1")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("x")),__basic(`$$size`("32"),
             char_data("__integer")),__identifier(char_data("y")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (relation1,
       __type) = __function(__identifier(char_data("relation1")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("x")),__basic(`$$size`("32"),
           char_data("__integer")),__identifier(char_data("y")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (relation1,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __param,
       (x,__schedule) = [],
       (x,__text) = __declaration(__identifier(char_data(x)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __param,
       (y,__schedule) = [],
       (y,__text) = __declaration(__identifier(char_data(y)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((lbl_3,__body) = [lbl_5,lbl_6,
      lbl_7],
       (lbl_3,__counter) = 1/0,
       (lbl_3,__depth) = 0,
       (lbl_3,__kind) = __doWhile,
       (lbl_3,__outer) = [],
       (lbl_3,__text) = __doWhile(`$$label`("lbl_3"),
         __expression(__operator(char_data("__lt")),
           __expression(__identifier(char_data("x"))),
           __expression(__constant(char_data("cst__4"))))),
       (lbl_3,false__part) = [],
       (lbl_3,true__part) = [],
       (lbl_7,__body) = [],
       (lbl_7,__counter) = 1/0,
       (lbl_7,__kind) = __si,
       (lbl_7,__text) = __if(`$$label`("lbl_7"),
         __expression(__operator(char_data("__disjunction")),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__subtraction")),
               __expression(__identifier(char_data("x"))),
               __expression(__identifier(char_data("y")))),
             __expression(__constant(char_data("cst__8")))),
           __expression(__operator(char_data("__lt")),
             __expression(__operator(char_data("__subtraction")),
               __expression(__identifier(char_data("x"))),
               __expression(__identifier(char_data("y")))),
             __expression(__constant(char_data("cst__9")))))),
       (lbl_7,false__part) = [lbl_11],
       (lbl_7,iteration__Domain) = {},
       (lbl_7,true__part) = [lbl_10]),table((lbl_10,
       __board) = table(),
       (lbl_10,__iteration) = [1/0,1/0],
       (lbl_10,__kind) = __break,
       (lbl_10,__loops) = [lbl_3,lbl_7],
       (lbl_10,__position) = [relation1,relation1,lbl_3,lbl_7,_true],
       (lbl_10,__process) = relation1,
       (lbl_10,__schedule) = [],
       (lbl_10,__text) = __statement(`$$label`("lbl_10"),
         __inside(char_data("relation1"),char_data("relation1"),
           char_data("lbl_3"),char_data("lbl_7"),char_data("_true")),
         __break()),
     (lbl_10,extended__domain) = {},
     (lbl_10,extended__iteration) = [],
     (lbl_10,inner__Constraints) = {},
     (lbl_10,inner__Variables) = [],
     (lbl_10,iteration__Domain) = {},
     (lbl_10,local__Parameters) = {},
     (lbl_10,original__Read) = {},
     (lbl_10,original__Write) = {},
     (lbl_10,read__Ref) = {},
     (lbl_10,write__Ref) = {},
     (lbl_11,__board) = table(),
     (lbl_11,__iteration) = [1/0,1/0],
     (lbl_11,__kind) = __nop,
     (lbl_11,__loops) = [lbl_3,lbl_7],
     (lbl_11,__position) = [relation1,relation1,lbl_3,lbl_7,_false],
     (lbl_11,__process) = relation1,
     (lbl_11,__schedule) = [],
     (lbl_11,__text) = __statement(`$$label`("lbl_11"),
       __inside(char_data("relation1"),char_data("relation1"),
         char_data("lbl_3"),char_data("lbl_7"),char_data("_false")),
       __nop()),
   (lbl_11,extended__domain) = {},
   (lbl_11,extended__iteration) = [],
   (lbl_11,inner__Constraints) = {},
   (lbl_11,inner__Variables) = [],
   (lbl_11,iteration__Domain) = {},
   (lbl_11,local__Parameters) = {},
   (lbl_11,original__Read) = {},
   (lbl_11,original__Write) = {},
   (lbl_11,read__Ref) = {},
   (lbl_11,write__Ref) = {},
   (lbl_12,__board) = table(),
   (lbl_12,__iteration) = [],
   (lbl_12,__kind) = __return,
   (lbl_12,__loops) = [],
   (lbl_12,__position) = [relation1,relation1],
   (lbl_12,__process) = relation1,
   (lbl_12,__schedule) = [],
   (lbl_12,__text) = __statement(`$$label`("lbl_12"),
     __inside(char_data("relation1"),char_data("relation1")),
     __return()),
 (lbl_12,extended__domain) = {},
 (lbl_12,extended__iteration) = [],
 (lbl_12,inner__Constraints) = {},
 (lbl_12,inner__Variables) = [],
 (lbl_12,iteration__Domain) = {},
 (lbl_12,local__Parameters) = {},
 (lbl_12,original__Read) = {},
 (lbl_12,original__Write) = {},
 (lbl_12,read__Ref) = {},
 (lbl_12,write__Ref) = {},
 (lbl_2,__board) = table(),
 (lbl_2,__iteration) = [],
 (lbl_2,__kind) = __assignment,
 (lbl_2,__loops) = [],
 (lbl_2,__position) = [relation1,relation1],
 (lbl_2,__process) = relation1,
 (lbl_2,__schedule) = [],
 (lbl_2,__text) = __statement(`$$label`("lbl_2"),
   __inside(char_data("relation1"),char_data("relation1")),
   __expression(__operator(char_data("__assignment")),
     __expression(__identifier(char_data("x"))),
     __expression(__constant(char_data("cst__1"))))),
 (lbl_2,extended__domain) = {},
 (lbl_2,extended__iteration) = [],
 (lbl_2,inner__Constraints) = {},
 (lbl_2,inner__Variables) = [],
 (lbl_2,iteration__Domain) = {},
 (lbl_2,local__Parameters) = {},
 (lbl_2,original__Read) = {},
 (lbl_2,original__Write) = {x()},
(lbl_2,read__Ref) = {},
(lbl_2,write__Ref) = {x()},
(lbl_5,__board) = table(),
(lbl_5,__iteration) = [1/0],
(lbl_5,__kind) = __assignment,
(lbl_5,__loops) = [lbl_3],
(lbl_5,__position) = [relation1,relation1,lbl_3],
(lbl_5,__process) = relation1,
(lbl_5,__schedule) = [],
(lbl_5,__text) = __statement(`$$label`("lbl_5"),
__inside(char_data("relation1"),char_data("relation1"),
 char_data("lbl_3")),
 __expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("x"))),
 __expression(__operator(char_data("__funcall")),
   __expression(__identifier(char_data("nondet")))))),
(lbl_5,extended__domain) = {},
(lbl_5,extended__iteration) = [],
(lbl_5,inner__Constraints) = {},
(lbl_5,inner__Variables) = [],
(lbl_5,iteration__Domain) = {},
(lbl_5,local__Parameters) = {},
(lbl_5,original__Read) = {},
(lbl_5,original__Write) = {x()},
(lbl_5,read__Ref) = {},
(lbl_5,write__Ref) = {x()},
(lbl_6,__board) = table(),
(lbl_6,__iteration) = [1/0],
(lbl_6,__kind) = __assignment,
(lbl_6,__loops) = [lbl_3],
(lbl_6,__position) = [relation1,relation1,lbl_3],
(lbl_6,__process) = relation1,
(lbl_6,__schedule) = [],
(lbl_6,__text) = __statement(`$$label`("lbl_6"),
__inside(char_data("relation1"),char_data("relation1"),
char_data("lbl_3")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y"))),
__expression(__identifier(char_data("x"))))),
(lbl_6,extended__domain) = {},
(lbl_6,extended__iteration) = [],
(lbl_6,inner__Constraints) = {},
(lbl_6,inner__Variables) = [],
(lbl_6,iteration__Domain) = {},
(lbl_6,local__Parameters) = {},
(lbl_6,original__Read) = {x()},
(lbl_6,original__Write) = {y()},
(lbl_6,read__Ref) = {x()},
(lbl_6,write__Ref) = {y()}),[],[lbl_2,lbl_5,lbl_6,lbl_10,lbl_11,
lbl_12],NIL,NIL,NIL,NIL,0]));
