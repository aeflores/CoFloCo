sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_2],table((N,__dim) = 0,
       (N,__kind) = __param,
       (N,__schedule) = [],
       (N,__text) = __declaration(__identifier(char_data(N)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (N,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (N,actual__Alloc) = [],
       (cst__1,__dim) = 0,
       (cst__1,__kind) = __global,
       (cst__1,__schedule) = [],
       (cst__1,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ),__constant(`$$value`("100"),char_data("cst__1")),
         __basic(char_data("__integer"))),
       (cst__1,__type) = __basic(char_data("__integer")),
       (cst__1,__value) = "100",
       (cst__1,actual__Alloc) = [],
       (cst__3,__dim) = 0,
       (cst__3,__kind) = __global,
       (cst__3,__schedule) = [],
       (cst__3,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ),__constant(`$$value`("2"),char_data("cst__3")),
         __basic(char_data("__integer"))),
       (cst__3,__type) = __basic(char_data("__integer")),
       (cst__3,__value) = "2",
       (cst__3,actual__Alloc) = [],
       (cst__5,__dim) = 0,
       (cst__5,__kind) = __global,
       (cst__5,__schedule) = [],
       (cst__5,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ),__constant(`$$value`("1"),char_data("cst__5")),
         __basic(char_data("__integer"))),
       (cst__5,__type) = __basic(char_data("__integer")),
       (cst__5,__value) = "1",
       (cst__5,actual__Alloc) = [],
       (cst__8,__dim) = 0,
       (cst__8,__kind) = __global,
       (cst__8,__schedule) = [],
       (cst__8,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ),__constant(`$$value`("0"),char_data("cst__8")),
         __basic(char_data("__integer"))),
       (cst__8,__type) = __basic(char_data("__integer")),
       (cst__8,__value) = "0",
       (cst__8,actual__Alloc) = [],
       (j,__dim) = 0,
       (j,__kind) = __private,
       (j,__schedule) = [],
       (j,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ,char_data("realheapsort_step1")),
           __identifier(char_data("j")),__basic(`$$size`("32"),
           char_data("__integer"))),
       (j,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (j,actual__Alloc) = [],
       (k,__dim) = 0,
       (k,__kind) = __private,
       (k,__schedule) = [],
       (k,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ,char_data("realheapsort_step1")),
           __identifier(char_data("k")),__basic(`$$size`("32"),
           char_data("__integer"))),
       (k,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (k,actual__Alloc) = [],
       (m,__dim) = 0,
       (m,__kind) = __private,
       (m,__schedule) = [],
       (m,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ,char_data("realheapsort_step1")),
           __identifier(char_data("m")),__basic(`$$size`("32"),
           char_data("__integer"))),
       (m,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (m,actual__Alloc) = [],
       (realheapsort_step1,__dim) = 0,
       (realheapsort_step1,__formals) = [N],
       (realheapsort_step1,__kind) = __global,
       (realheapsort_step1,__schedule) = [],
       (realheapsort_step1,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ),__identifier(char_data("realheapsort_step1")),
         __function(__identifier(char_data("realheapsort_step1")),
           __basic(char_data("void")),__identifier(char_data("N")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (realheapsort_step1,
       __type) = __function(__identifier(char_data("realheapsort_step1"
       )),__basic(char_data("void")),__identifier(char_data("N")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (realheapsort_step1,actual__Alloc) = [],
       (t,__dim) = 1,
       (t,__kind) = __private,
       (t,__schedule) = [],
       (t,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ,char_data("realheapsort_step1")),
           __identifier(char_data("t")),
           __array(__basic(`$$size`("32"),char_data("__float")),
           __expression(__constant(char_data("cst__1"))))),
       (t,__type) = __array(__basic(`$$size`("32"),
           char_data("__float")),
         __expression(__constant(char_data("cst__1")))),
       (t,actual__Alloc) = [],
       (temp,__dim) = 0,
       (temp,__kind) = __private,
       (temp,__schedule) = [],
       (temp,
       __text) = __declaration(__inside(char_data("realheapsort_step1")
         ,char_data("realheapsort_step1")),
         __identifier(char_data("temp")),__basic(`$$size`("32"),
           char_data("__float"))),
       (temp,__type) = __basic(`$$size`("32"),char_data("__float")),
       (temp,actual__Alloc) = []),table((lbl_2,__body) = [],
       (lbl_2,__counter) = 1/0,
       (lbl_2,__kind) = __si,
       (lbl_2,__text) = __if(`$$label`("lbl_2"),
         __expression(__operator(char_data("__gt")),
           __expression(__identifier(char_data("N"))),
           __expression(__constant(char_data("cst__3"))))),
       (lbl_2,false__part) = [lbl_13],
       (lbl_2,iteration__Domain) = {},
       (lbl_2,true__part) = [lbl_4],
       (lbl_4,__body) = [lbl_6,lbl_7],
       (lbl_4,__counter) = k,
       (lbl_4,__depth) = 2,
       (lbl_4,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("k"))),
         __expression(__constant(char_data("cst__5"))))),
       (lbl_4,__kind) = __do,
       (lbl_4,__lower) = 1,
       (lbl_4,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("k"))))),
       (lbl_4,__outer) = [1/0],
       (lbl_4,__pas) = 1,
       (lbl_4,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("k"))),
         __expression(__operator(char_data("__subtraction")),
           __expression(__identifier(char_data("N"))),
           __expression(__constant(char_data("cst__5")))))),
       (lbl_4,__text) = __for(`$$label`("lbl_4"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("k"))),
           __expression(__constant(char_data("cst__5"))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("k"))),
           __expression(__operator(char_data("__subtraction")),
             __expression(__identifier(char_data("N"))),
             __expression(__constant(char_data("cst__5")))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("k")))))),
       (lbl_4,__upper) = N-1,
       (lbl_4,false__part) = [],
       (lbl_4,iteration__Domain) = {(N >= k+1),(k >= 1)},
       (lbl_4,local__Parameters) = {},
       (lbl_4,true__part) = [],
       (lbl_7,__body) = [lbl_9,lbl_10,lbl_11,lbl_12],
       (lbl_7,__counter) = 1/0,
       (lbl_7,__depth) = 3,
       (lbl_7,__kind) = __while,
       (lbl_7,__outer) = [1/0,k],
       (lbl_7,__text) = __while(`$$label`("lbl_7"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__gt")),
             __expression(__identifier(char_data("j"))),
             __expression(__constant(char_data("cst__8")))),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__subscript")),
               __expression(__identifier(char_data("t"))),
               __expression(__operator(char_data("__subtraction")),
                 __expression(__operator(char_data("__division")),
                   __expression(__operator(char_data("__addition")),
                     __expression(__identifier(char_data("j"))),
                     __expression(__constant(char_data("cst__5")))),
                   __expression(__constant(char_data("cst__3")))),
                 __expression(__constant(char_data("cst__5"))))),
             __expression(__operator(char_data("__subscript")),
               __expression(__identifier(char_data("t"))),
               __expression(__identifier(char_data("j"))))))),
       (lbl_7,false__part) = [],
       (lbl_7,true__part) = []),table((lbl_10,
    __board) = table((1/2*j-1/2,__constraints) = {},
       (1/2*j-1/2,__value) = 1/2*j-1/2,
       (1/2*j-1/2,__vars) = [j],
       (j,__constraints) = {},
       (j,__value) = j,
       (j,__vars) = [j]),
       (lbl_10,__iteration) = [1/0,k,1/0],
       (lbl_10,__kind) = __assignment,
       (lbl_10,__loops) = [lbl_2,lbl_4,lbl_7],
       (lbl_10,__position) = [realheapsort_step1,realheapsort_step1,
         lbl_2,_true,lbl_4,lbl_7],
       (lbl_10,__process) = realheapsort_step1,
       (lbl_10,__schedule) = [],
       (lbl_10,__text) = __statement(`$$label`("lbl_10"),
         __inside(char_data("realheapsort_step1"),
           char_data("realheapsort_step1"),char_data("lbl_2"),
           char_data("_true"),char_data("lbl_4"),char_data("lbl_7")),
         __expression(__operator(char_data("__assignment")),
           __expression(__operator(char_data("__subscript")),
             __expression(__identifier(char_data("t"))),
             __expression(__identifier(char_data("j")))),
           __expression(__operator(char_data("__subscript")),
             __expression(__identifier(char_data("t"))),
             __expression(__operator(char_data("__subtraction")),
               __expression(__operator(char_data("__division")),
                 __expression(__operator(char_data("__addition")),
                   __expression(__identifier(char_data("j"))),
                   __expression(__constant(char_data("cst__5")))),
                 __expression(__constant(char_data("cst__3")))),
               __expression(__constant(char_data("cst__5"))))))),
       (lbl_10,extended__domain) = {},
       (lbl_10,extended__iteration) = [],
       (lbl_10,inner__Constraints) = {},
       (lbl_10,inner__Variables) = [j,j],
       (lbl_10,iteration__Domain) = {(N >= k+1),(k >= 1)},
       (lbl_10,local__Parameters) = {},
       (lbl_10,original__Read) = {j(),t(1/2*j-1/2)},
     (lbl_10,original__Write) = {t(j)},
     (lbl_10,read__Ref) = {j(),t(1/2*j-1/2)},
   (lbl_10,write__Ref) = {t(j)},
   (lbl_11,__board) = table((1/2*j-1/2,__constraints) = {},
      (1/2*j-1/2,__value) = 1/2*j-1/2,
      (1/2*j-1/2,__vars) = [j]),
   (lbl_11,__iteration) = [1/0,k,1/0],
   (lbl_11,__kind) = __assignment,
   (lbl_11,__loops) = [lbl_2,lbl_4,lbl_7],
   (lbl_11,__position) = [realheapsort_step1,realheapsort_step1,lbl_2,
     _true,lbl_4,lbl_7],
   (lbl_11,__process) = realheapsort_step1,
   (lbl_11,__schedule) = [],
   (lbl_11,__text) = __statement(`$$label`("lbl_11"),
     __inside(char_data("realheapsort_step1"),
       char_data("realheapsort_step1"),char_data("lbl_2"),
       char_data("_true"),char_data("lbl_4"),char_data("lbl_7")),
     __expression(__operator(char_data("__assignment")),
       __expression(__operator(char_data("__subscript")),
         __expression(__identifier(char_data("t"))),
         __expression(__operator(char_data("__subtraction")),
           __expression(__operator(char_data("__division")),
             __expression(__operator(char_data("__addition")),
               __expression(__identifier(char_data("j"))),
               __expression(__constant(char_data("cst__5")))),
             __expression(__constant(char_data("cst__3")))),
           __expression(__constant(char_data("cst__5"))))),
       __expression(__identifier(char_data("temp"))))),
   (lbl_11,extended__domain) = {},
   (lbl_11,extended__iteration) = [],
   (lbl_11,inner__Constraints) = {},
   (lbl_11,inner__Variables) = [j],
   (lbl_11,iteration__Domain) = {(N >= k+1),(k >= 1)},
   (lbl_11,local__Parameters) = {},
   (lbl_11,original__Read) = {j(),temp()},
(lbl_11,original__Write) = {t(1/2*j-1/2)},
(lbl_11,read__Ref) = {j(),temp()},
(lbl_11,write__Ref) = {t(1/2*j-1/2)},
(lbl_12,__board) = table(),
(lbl_12,__iteration) = [1/0,k,1/0],
(lbl_12,__kind) = __assignment,
(lbl_12,__loops) = [lbl_2,lbl_4,lbl_7],
(lbl_12,__position) = [realheapsort_step1,realheapsort_step1,lbl_2,
_true,lbl_4,lbl_7],
(lbl_12,__process) = realheapsort_step1,
(lbl_12,__schedule) = [],
(lbl_12,__text) = __statement(`$$label`("lbl_12"),
__inside(char_data("realheapsort_step1"),
char_data("realheapsort_step1"),char_data("lbl_2"),char_data("_true"),
char_data("lbl_4"),char_data("lbl_7")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("j"))),
__expression(__operator(char_data("__subtraction")),
 __expression(__operator(char_data("__division")),
   __expression(__operator(char_data("__addition")),
     __expression(__identifier(char_data("j"))),
     __expression(__constant(char_data("cst__5")))),
   __expression(__constant(char_data("cst__3")))),
 __expression(__constant(char_data("cst__5")))))),
(lbl_12,extended__domain) = {},
(lbl_12,extended__iteration) = [],
(lbl_12,inner__Constraints) = {},
(lbl_12,inner__Variables) = [],
(lbl_12,iteration__Domain) = {(N >= k+1),(k >= 1)},
(lbl_12,local__Parameters) = {},
(lbl_12,original__Read) = {j()},
(lbl_12,original__Write) = {j()},
(lbl_12,read__Ref) = {j()},
(lbl_12,write__Ref) = {j()},
(lbl_13,__board) = table(),
(lbl_13,__iteration) = [1/0],
(lbl_13,__kind) = __nop,
(lbl_13,__loops) = [lbl_2],
(lbl_13,__position) = [realheapsort_step1,realheapsort_step1,lbl_2,
_false],
(lbl_13,__process) = realheapsort_step1,
(lbl_13,__schedule) = [],
(lbl_13,__text) = __statement(`$$label`("lbl_13"),
__inside(char_data("realheapsort_step1"),
char_data("realheapsort_step1"),char_data("lbl_2"),
char_data("_false")),__nop()),
(lbl_13,extended__domain) = {},
(lbl_13,extended__iteration) = [],
(lbl_13,inner__Constraints) = {},
(lbl_13,inner__Variables) = [],
(lbl_13,iteration__Domain) = {},
(lbl_13,local__Parameters) = {},
(lbl_13,original__Read) = {},
(lbl_13,original__Write) = {},
(lbl_13,read__Ref) = {},
(lbl_13,write__Ref) = {},
(lbl_6,__board) = table(),
(lbl_6,__iteration) = [1/0,k],
(lbl_6,__kind) = __assignment,
(lbl_6,__loops) = [lbl_2,lbl_4],
(lbl_6,__position) = [realheapsort_step1,realheapsort_step1,lbl_2,
_true,lbl_4],
(lbl_6,__process) = realheapsort_step1,
(lbl_6,__schedule) = [],
(lbl_6,__text) = __statement(`$$label`("lbl_6"),
__inside(char_data("realheapsort_step1"),
char_data("realheapsort_step1"),char_data("lbl_2"),char_data("_true"),
char_data("lbl_4")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("j"))),
__expression(__identifier(char_data("k"))))),
(lbl_6,extended__domain) = {},
(lbl_6,extended__iteration) = [],
(lbl_6,inner__Constraints) = {},
(lbl_6,inner__Variables) = [],
(lbl_6,iteration__Domain) = {(N >= k+1),(k >= 1)},
(lbl_6,local__Parameters) = {},
(lbl_6,original__Read) = {k()},
(lbl_6,original__Write) = {j()},
(lbl_6,read__Ref) = {k()},
(lbl_6,write__Ref) = {j()},
(lbl_9,__board) = table((j,__constraints) = {},
(j,__value) = j,
(j,__vars) = [j]),
(lbl_9,__iteration) = [1/0,k,1/0],
(lbl_9,__kind) = __assignment,
(lbl_9,__loops) = [lbl_2,lbl_4,lbl_7],
(lbl_9,__position) = [realheapsort_step1,realheapsort_step1,lbl_2,
_true,lbl_4,lbl_7],
(lbl_9,__process) = realheapsort_step1,
(lbl_9,__schedule) = [],
(lbl_9,__text) = __statement(`$$label`("lbl_9"),
__inside(char_data("realheapsort_step1"),
char_data("realheapsort_step1"),char_data("lbl_2"),char_data("_true"),
char_data("lbl_4"),char_data("lbl_7")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("temp"))),
__expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("t"))),
__expression(__identifier(char_data("j")))))),
(lbl_9,extended__domain) = {},
(lbl_9,extended__iteration) = [],
(lbl_9,inner__Constraints) = {},
(lbl_9,inner__Variables) = [j],
(lbl_9,iteration__Domain) = {(N >= k+1),(k >= 1)},
(lbl_9,local__Parameters) = {},
(lbl_9,original__Read) = {j(),t(j)},
(lbl_9,original__Write) = {temp()},
(lbl_9,read__Ref) = {j(),t(j)},
(lbl_9,write__Ref) = {temp()}),[N,m],[lbl_6,lbl_9,lbl_10,lbl_11,
lbl_12,lbl_13],NIL,NIL,NIL,NIL,0]));
