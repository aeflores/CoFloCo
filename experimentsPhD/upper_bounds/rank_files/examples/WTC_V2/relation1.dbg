FrontEnd version J.3
qualif relation1
inside declaration [relation1,nondet]
inside declaration [relation1,relation1]
inside declaration [relation1,cst__9]
inside declaration [relation1,cst__8]
inside declaration [relation1,cst__4]
inside declaration [relation1,cst__1]
table([relation1,cst__1] = __declaration(__inside(char_data("relation1")),
  __constant(`$$value`("0"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [relation1,cst__4] = __declaration(__inside(char_data("relation1")),
     __constant(`$$value`("10"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [relation1,cst__8] = __declaration(__inside(char_data("relation1")),
     __constant(`$$value`("2"),char_data("cst__8")),
     __basic(char_data("__integer"))),
   [relation1,cst__9] = __declaration(__inside(char_data("relation1")),
     __constant(`$$value`("1"),char_data("cst__9")),
     __basic(char_data("__integer"))),
   [relation1,nondet] = __declaration(__inside(char_data("relation1")),
     __identifier(char_data("nondet")),
     __function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [relation1,relation1] = __declaration(__inside(char_data("relation1")),
     __identifier(char_data("relation1")),
     __function(__identifier(char_data("relation1")),
         __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("x")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("y")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [relation1,relation1,lbl_12] = __statement(`$$label`("lbl_12"),
     __inside(char_data("relation1"),char_data("relation1")),__return()),
 [relation1,relation1,lbl_2] = __statement(`$$label`("lbl_2"),
   __inside(char_data("relation1"),char_data("relation1")),
   __expression(__operator(char_data("__assignment")),
     __expression(__identifier(char_data("x"))),
     __expression(__constant(char_data("cst__1"))))),
 [relation1,relation1,lbl_3] = __doWhile(`$$label`("lbl_3"),
   __expression(__operator(char_data("__lt")),
     __expression(__identifier(char_data("x"))),
     __expression(__constant(char_data("cst__4"))))),
 [relation1,relation1,lbl_3,lbl_5] = __statement(`$$label`("lbl_5"),
   __inside(char_data("relation1"),char_data("relation1"),
       char_data("lbl_3")),
     __expression(__operator(char_data("__assignment")),
     __expression(__identifier(char_data("x"))),
     __expression(__operator(char_data("__funcall")),
       __expression(__identifier(char_data("nondet")))))),
 [relation1,relation1,lbl_3,lbl_6] = __statement(`$$label`("lbl_6"),
   __inside(char_data("relation1"),char_data("relation1"),
       char_data("lbl_3")),
     __expression(__operator(char_data("__assignment")),
     __expression(__identifier(char_data("y"))),
     __expression(__identifier(char_data("x"))))),
 [relation1,relation1,lbl_3,lbl_7] = __if(`$$label`("lbl_7"),
   __expression(__operator(char_data("__disjunction")),
     __expression(__operator(char_data("__gt")),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("x"))),
         __expression(__identifier(char_data("y")))),
       __expression(__constant(char_data("cst__8")))),
     __expression(__operator(char_data("__lt")),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("x"))),
         __expression(__identifier(char_data("y")))),
       __expression(__constant(char_data("cst__9")))))),
 [relation1,relation1,lbl_3,lbl_7,_false,
 lbl_11] = __statement(`$$label`("lbl_11"),__inside(char_data("relation1"),
     char_data("relation1"),char_data("lbl_3"),char_data("lbl_7"),
     char_data("_false")),__nop()),
[relation1,relation1,lbl_3,lbl_7,_true,
lbl_10] = __statement(`$$label`("lbl_10"),__inside(char_data("relation1"),
   char_data("relation1"),char_data("lbl_3"),char_data("lbl_7"),
   char_data("_true")),__break()))
table([relation1,relation1] = [[relation1,nondet],[relation1,relation1],
[relation1,cst__9],[relation1,cst__8],[relation1,cst__4],[relation1,
cst__1],[relation1,relation1],[relation1,relation1,lbl_2],[relation1,
relation1,lbl_3],[relation1,relation1,lbl_3,lbl_5],[relation1,relation1,
lbl_3,lbl_6],[relation1,relation1,lbl_3,lbl_7],[relation1,relation1,lbl_3,
lbl_7,_true,lbl_10],[relation1,relation1,lbl_3,lbl_7,_false,lbl_11],
[relation1,relation1,lbl_12]])
[[relation1,relation1,lbl_2],[relation1,relation1,lbl_3,lbl_5],[relation1,
relation1,lbl_3,lbl_6],[relation1,relation1,lbl_3,lbl_7,_true,lbl_10],
[relation1,relation1,lbl_3,lbl_7,_false,lbl_11],[relation1,relation1,
lbl_12]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
body [[relation1,nondet],[relation1,relation1],[relation1,cst__9],
[relation1,cst__8],[relation1,cst__4],[relation1,cst__1],[relation1,
relation1],[relation1,relation1,lbl_2],[relation1,relation1,lbl_3],
[relation1,relation1,lbl_3,lbl_5],[relation1,relation1,lbl_3,lbl_6],
[relation1,relation1,lbl_3,lbl_7],[relation1,relation1,lbl_3,lbl_7,_true,
lbl_10],[relation1,relation1,lbl_3,lbl_7,_false,lbl_11],[relation1,
relation1,lbl_12]]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_7 __si
 counter 1/0 iteration domain {}

examining cst__1
 is a constant
examining cst__4
 is a constant
examining cst__8
 is a constant
examining cst__9
 is a constant
examining nondet
examining relation1
examining x
examining y
to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (10 > x)
to be simplified (x >= 10)
to be simplified (10 > x)
to be simplified (x >= 10)
to be simplified ( (x > y+2) || (y+1 > x) )
to be simplified ( (y+2 >= x) && (x >= y+1) )
to be simplified ( (x > y+2) || (y+1 > x) )
to be simplified ( (y+2 >= x) && (x >= y+1) )
to be simplified ( (x > y+2) || (y+1 > x) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (2 >= 0) && (0 >= 1) )
to be simplified ( (0 > 2) || (1 > 0) )
to be simplified ( ( (2 >= 0) && (0 >= 1) ) && (10 > x) )
to be simplified ( ( (2 >= 0) && (0 >= 1) ) && (x >= 10) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
