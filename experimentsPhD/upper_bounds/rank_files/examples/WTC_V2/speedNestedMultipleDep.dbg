FrontEnd version J.3
qualif speedNestedMultipleDep
inside declaration [speedNestedMultipleDep,speedNestedMultipleDep]
inside declaration [speedNestedMultipleDep,speedNestedMultipleDep,x]
inside declaration [speedNestedMultipleDep,speedNestedMultipleDep,y]
inside declaration [speedNestedMultipleDep,cst__1]
table([speedNestedMultipleDep,
cst__1] = __declaration(__inside(char_data("speedNestedMultipleDep")),
  __constant(`$$value`("0"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [speedNestedMultipleDep,
   speedNestedMultipleDep] = __declaration(__inside(char_data("speedNestedMultipleDep"
   )),__identifier(char_data("speedNestedMultipleDep")),
     __function(__identifier(char_data("speedNestedMultipleDep")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("n")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("m")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [speedNestedMultipleDep,speedNestedMultipleDep,
   lbl_2] = __statement(`$$label`("lbl_2"),
     __inside(char_data("speedNestedMultipleDep"),
       char_data("speedNestedMultipleDep")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__1"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,
   lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("n"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,
   lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("speedNestedMultipleDep"),
       char_data("speedNestedMultipleDep"),char_data("lbl_3")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__1"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,
   lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("speedNestedMultipleDep"),
       char_data("speedNestedMultipleDep"),char_data("lbl_3")),
     __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("x"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,
   lbl_6] = __while(`$$label`("lbl_6"),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("m"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,lbl_6,
   lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("speedNestedMultipleDep"),
       char_data("speedNestedMultipleDep"),char_data("lbl_3"),
       char_data("lbl_6")),
       __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("y"))))),
   [speedNestedMultipleDep,speedNestedMultipleDep,
   lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("speedNestedMultipleDep"),
       char_data("speedNestedMultipleDep")),__nop()),
 [speedNestedMultipleDep,speedNestedMultipleDep,
 lbl_9] = __statement(`$$label`("lbl_9"),
   __inside(char_data("speedNestedMultipleDep"),
     char_data("speedNestedMultipleDep")),__return()),
[speedNestedMultipleDep,speedNestedMultipleDep,
x] = __declaration(__inside(char_data("speedNestedMultipleDep"),
 char_data("speedNestedMultipleDep")),__identifier(char_data("x")),
 __basic(`$$size`("32"),char_data("__integer"))),
[speedNestedMultipleDep,speedNestedMultipleDep,
y] = __declaration(__inside(char_data("speedNestedMultipleDep"),
 char_data("speedNestedMultipleDep")),__identifier(char_data("y")),
 __basic(`$$size`("32"),char_data("__integer"))))
table([speedNestedMultipleDep,
speedNestedMultipleDep] = [[speedNestedMultipleDep,speedNestedMultipleDep],
[speedNestedMultipleDep,cst__1],[speedNestedMultipleDep,
speedNestedMultipleDep],[speedNestedMultipleDep,speedNestedMultipleDep,x],
[speedNestedMultipleDep,speedNestedMultipleDep,y],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_2],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_4],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_5],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_6],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_6,lbl_7],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_8],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_9]])
[[speedNestedMultipleDep,speedNestedMultipleDep,x],[speedNestedMultipleDep,
speedNestedMultipleDep,y],[speedNestedMultipleDep,speedNestedMultipleDep,
lbl_2],[speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,lbl_4],
[speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,lbl_5],
[speedNestedMultipleDep,speedNestedMultipleDep,lbl_3,lbl_6,lbl_7],
[speedNestedMultipleDep,speedNestedMultipleDep,lbl_8],
[speedNestedMultipleDep,speedNestedMultipleDep,lbl_9]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
body [[speedNestedMultipleDep,speedNestedMultipleDep],
[speedNestedMultipleDep,cst__1],[speedNestedMultipleDep,
speedNestedMultipleDep],[speedNestedMultipleDep,speedNestedMultipleDep,x],
[speedNestedMultipleDep,speedNestedMultipleDep,y],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_2],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_4],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_5],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_6],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_3,lbl_6,lbl_7],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_8],[speedNestedMultipleDep,
speedNestedMultipleDep,lbl_9]]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
lbl_6 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__1
 is a constant
examining m
examining n
examining speedNestedMultipleDep
examining x
 has definitions
examining y
 has definitions
while remnants __lt(x,n)while remnants __lt(y,m)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified ( (n > 0) && (0 >= m) )
to be simplified ( (n > 0) && (m > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n > x)
to be simplified (x >= n)
to be simplified (x >= n)
to be simplified (x >= n)
to be simplified (n > x)
to be simplified (n > x)
to be simplified (m > y)
to be simplified (y >= m)
to be simplified (y >= m)
to be simplified (m > y)
to be simplified (m > y)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= m)
to be simplified (m > y)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (x >= n)
to be simplified (n > x)
to be simplified ( (n > x) && (0 >= m) )
to be simplified ( (n > x) && (m > 0) )
