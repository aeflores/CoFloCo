FrontEnd version J.3
qualif realshellsort
inside declaration [realshellsort,realshellsort]
inside declaration [realshellsort,realshellsort,i]
inside declaration [realshellsort,realshellsort,j]
inside declaration [realshellsort,realshellsort,increment]
inside declaration [realshellsort,realshellsort,temp]
inside declaration [realshellsort,cst__4]
inside declaration [realshellsort,cst__1]
table([realshellsort,
cst__1] = __declaration(__inside(char_data("realshellsort")),
  __constant(`$$value`("2"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [realshellsort,
   cst__4] = __declaration(__inside(char_data("realshellsort")),
     __constant(`$$value`("0"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [realshellsort,
   realshellsort] = __declaration(__inside(char_data("realshellsort")),
     __identifier(char_data("realshellsort")),
     __function(__identifier(char_data("realshellsort")),
       __basic(char_data("void")),__identifier(char_data("array_size")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("numbers")),__array(__basic(`$$size`("32"),
         char_data("__integer"))))),
   [realshellsort,realshellsort,
   i] = __declaration(__inside(char_data("realshellsort"),
     char_data("realshellsort")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [realshellsort,realshellsort,
   increment] = __declaration(__inside(char_data("realshellsort"),
     char_data("realshellsort")),__identifier(char_data("increment")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [realshellsort,realshellsort,
   j] = __declaration(__inside(char_data("realshellsort"),
     char_data("realshellsort")),__identifier(char_data("j")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [realshellsort,realshellsort,lbl_2] = __statement(`$$label`("lbl_2"),
     __inside(char_data("realshellsort"),char_data("realshellsort")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("increment"))),
       __expression(__operator(char_data("__division")),
         __expression(__identifier(char_data("array_size"))),
         __expression(__constant(char_data("cst__1")))))),
   [realshellsort,realshellsort,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("increment"))),
       __expression(__constant(char_data("cst__4"))))),
   [realshellsort,realshellsort,lbl_3,
   lbl_12] = __statement(`$$label`("lbl_12"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("increment"))),
       __expression(__operator(char_data("__division")),
         __expression(__identifier(char_data("increment"))),
         __expression(__constant(char_data("cst__1")))))),
   [realshellsort,realshellsort,lbl_3,lbl_5] = __for(`$$label`("lbl_5"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__4"))))),
     __test(__expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("array_size"))))),
     __next(__expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("i")))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,
   lbl_11] = __statement(`$$label`("lbl_11"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3"),char_data("lbl_5")),
     __expression(__operator(char_data("__assignment")),
       __expression(__operator(char_data("__subscript")),
         __expression(__identifier(char_data("numbers"))),
         __expression(__identifier(char_data("j")))),
       __expression(__identifier(char_data("temp"))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,
   lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3"),char_data("lbl_5")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("i"))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,
   lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3"),char_data("lbl_5")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("temp"))),
       __expression(__operator(char_data("__subscript")),
         __expression(__identifier(char_data("numbers"))),
         __expression(__identifier(char_data("i")))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,
   lbl_8] = __while(`$$label`("lbl_8"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__ge")),
         __expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("increment")))),
       __expression(__operator(char_data("__gt")),
         __expression(__operator(char_data("__subscript")),
           __expression(__identifier(char_data("numbers"))),
           __expression(__operator(char_data("__subtraction")),
             __expression(__identifier(char_data("j"))),
             __expression(__identifier(char_data("increment"))))),
         __expression(__identifier(char_data("temp")))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,
   lbl_10] = __statement(`$$label`("lbl_10"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3"),char_data("lbl_5"),char_data("lbl_8")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("increment")))))),
   [realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,
   lbl_9] = __statement(`$$label`("lbl_9"),
     __inside(char_data("realshellsort"),char_data("realshellsort"),
       char_data("lbl_3"),char_data("lbl_5"),char_data("lbl_8")),
     __expression(__operator(char_data("__assignment")),
       __expression(__operator(char_data("__subscript")),
         __expression(__identifier(char_data("numbers"))),
         __expression(__identifier(char_data("j")))),
       __expression(__operator(char_data("__subscript")),
         __expression(__identifier(char_data("numbers"))),
         __expression(__operator(char_data("__subtraction")),
           __expression(__identifier(char_data("j"))),
           __expression(__identifier(char_data("increment"))))))),
   [realshellsort,realshellsort,
   temp] = __declaration(__inside(char_data("realshellsort"),
     char_data("realshellsort")),__identifier(char_data("temp")),
     __basic(`$$size`("32"),char_data("__integer"))))
table([realshellsort,realshellsort] = [[realshellsort,realshellsort],
  [realshellsort,cst__4],[realshellsort,cst__1],[realshellsort,
    realshellsort],[realshellsort,realshellsort,i],[realshellsort,
    realshellsort,j],[realshellsort,realshellsort,increment],
    [realshellsort,realshellsort,temp],[realshellsort,realshellsort,lbl_2],
  [realshellsort,realshellsort,lbl_3,lbl_5],[realshellsort,realshellsort,
    lbl_3],[realshellsort,realshellsort,lbl_3,lbl_5,lbl_6],[realshellsort,
    realshellsort,lbl_3,lbl_5,lbl_7],[realshellsort,realshellsort,lbl_3,
    lbl_5,lbl_8],[realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,lbl_9],
  [realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,lbl_10],[realshellsort,
    realshellsort,lbl_3,lbl_5,lbl_11],[realshellsort,realshellsort,lbl_3,
    lbl_12]])
[[realshellsort,realshellsort,i],[realshellsort,realshellsort,j],
  [realshellsort,realshellsort,increment],[realshellsort,realshellsort,
  temp],[realshellsort,realshellsort,lbl_2],[realshellsort,realshellsort,
    lbl_3,lbl_5,lbl_6],[realshellsort,realshellsort,lbl_3,lbl_5,lbl_7],
  [realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,lbl_9],[realshellsort,
    realshellsort,lbl_3,lbl_5,lbl_8,lbl_10],[realshellsort,realshellsort,
    lbl_3,lbl_5,lbl_11],[realshellsort,realshellsort,lbl_3,lbl_12]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of array_size is 0
gatherFormals: typist __array(__basic(`$$size`("32"),
  char_data("__integer")))
gatherFormals: tepee __array(__basic(`$$size`("32"),
  char_data("__integer")))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of numbers is 1
body [[realshellsort,realshellsort],[realshellsort,cst__4],[realshellsort,
    cst__1],[realshellsort,realshellsort],[realshellsort,realshellsort,i],
  [realshellsort,realshellsort,j],[realshellsort,realshellsort,increment],
  [realshellsort,realshellsort,temp],[realshellsort,realshellsort,lbl_2],
  [realshellsort,realshellsort,lbl_3,lbl_5],[realshellsort,realshellsort,
    lbl_3],[realshellsort,realshellsort,lbl_3,lbl_5,lbl_6],[realshellsort,
    realshellsort,lbl_3,lbl_5,lbl_7],[realshellsort,realshellsort,lbl_3,
    lbl_5,lbl_8],[realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,lbl_9],
  [realshellsort,realshellsort,lbl_3,lbl_5,lbl_8,lbl_10],[realshellsort,
    realshellsort,lbl_3,lbl_5,lbl_11],[realshellsort,realshellsort,lbl_3,
    lbl_12]]
collect subscripts __expression(__identifier(char_data("increment")))
[increment(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("temp")))
[temp(),[],{},{}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("numbers"))),
__expression(__identifier(char_data("i"))))
collect subscripts __expression(__identifier(char_data("numbers")))
[numbers(),[],{},{}]
[numbers(),[i],{},{i()}]
lbl_8 __while
 counter 1/0
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("numbers"))),
__expression(__identifier(char_data("j"))))
collect subscripts __expression(__identifier(char_data("numbers")))
[numbers(),[],{},{}]
[numbers(),[j],{},{j()}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("numbers"))),
__expression(__operator(char_data("__subtraction")),
__expression(__identifier(char_data("j"))),
__expression(__identifier(char_data("increment")))))
collect subscripts __expression(__identifier(char_data("numbers")))
[numbers(),[],{},{}]
[numbers(),[j-increment],{},{increment(),j()}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("numbers"))),
__expression(__identifier(char_data("j"))))
collect subscripts __expression(__identifier(char_data("numbers")))
[numbers(),[],{},{}]
[numbers(),[j],{},{j()}]
collect subscripts __expression(__identifier(char_data("increment")))
[increment(),[],{},{}]
collect subscripts __expression(__operator(char_data("__subscript")),
__expression(__identifier(char_data("numbers"))),
__expression(__operator(char_data("__subtraction")),
__expression(__identifier(char_data("j"))),
__expression(__identifier(char_data("increment")))))
collect subscripts __expression(__identifier(char_data("numbers")))
[numbers(),[],{},{}]
[numbers(),[j-increment],{},{increment(),j()}]
examining array_size
examining cst__1
 is a constant
examining cst__4
 is a constant
examining i
 has definitions
examining increment
 has definitions
examining j
 has definitions
examining numbers
 is an array
examining realshellsort
examining temp
 has definitions
while remnants __gt(increment,0)while remnants __conjunction(__ge(j,
increment),__gt(__subscript(numbers,j-increment),
temp))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= array_size)
to be simplified (array_size > 0)
to be simplified ( (array_size > 0) && (0 >= array_size) )
to be simplified ( (array_size > 0) && (array_size > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (increment > 0)
to be simplified (0 >= increment)
to be simplified (increment > 0)
to be simplified TRUE
to be simplified (j >= increment)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (j >= increment)
to be simplified (j >= increment)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= increment)
to be simplified (increment > 0)
to be simplified ( (increment > 0) && (0 >= array_size) )
to be simplified ( (increment > 0) && (array_size > 0) )
to be simplified (array_size > i)
to be simplified (i >= array_size)
to be simplified (i >= array_size)
to be simplified (array_size > i)
to be simplified (array_size > i)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (j >= increment)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (j >= increment)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i >= array_size)
to be simplified (array_size > i)
to be simplified TRUE
