sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1,lbl_5,lbl_6,lbl_7],
    table((cst__2,__dim) = 0,
       (cst__2,__kind) = __global,
       (cst__2,__schedule) = [],
       (cst__2,__text) = __declaration(__inside(char_data("serpent")),
         __constant(`$$value`("0"),char_data("cst__2")),
         __basic(char_data("__integer"))),
       (cst__2,__type) = __basic(char_data("__integer")),
       (cst__2,__value) = "0",
       (cst__2,actual__Alloc) = [],
       (n,__dim) = 0,
       (n,__kind) = __param,
       (n,__schedule) = [],
       (n,__text) = __declaration(__identifier(char_data(n)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (n,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (n,actual__Alloc) = [],
       (nondet,__dim) = 0,
       (nondet,__kind) = __global,
       (nondet,__schedule) = [],
       (nondet,__text) = __declaration(__inside(char_data("serpent")),
         __identifier(char_data("nondet")),
         __function(__identifier(char_data("nondet")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (nondet,__type) = __function(__identifier(char_data("nondet")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (nondet,actual__Alloc) = [],
       (serpent,__dim) = 0,
       (serpent,__formals) = [n],
       (serpent,__kind) = __global,
       (serpent,__schedule) = [],
       (serpent,
         __text) = __declaration(__inside(char_data("serpent")),
         __identifier(char_data("serpent")),
         __function(__identifier(char_data("serpent")),
           __basic(char_data("void")),__identifier(char_data("n")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (serpent,
         __type) = __function(__identifier(char_data("serpent")),
         __basic(char_data("void")),__identifier(char_data("n")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (serpent,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __private,
       (x,__schedule) = [],
       (x,__text) = __declaration(__inside(char_data("serpent"),
         char_data("serpent")),__identifier(char_data("x")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __private,
       (y,__schedule) = [],
       (y,__text) = __declaration(__inside(char_data("serpent"),
         char_data("serpent")),__identifier(char_data("y")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((W1,__body) = [lbl_8],
       (W1,__counter) = 1/0,
       (W1,__depth) = 1,
       (W1,__kind) = __while,
       (W1,__outer) = [1/0],
       (W1,__text) = __while(`$$label`("W1"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__ge")),
             __expression(__identifier(char_data("y"))),
             __expression(__constant(char_data("cst__2")))),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__funcall")),
               __expression(__identifier(char_data("nondet")))),
             __expression(__constant(char_data("cst__2")))))),
       (W1,false__part) = [],
       (W1,true__part) = [],
       (W2,__body) = [lbl_10],
       (W2,__counter) = 1/0,
       (W2,__depth) = 1,
       (W2,__kind) = __while,
       (W2,__outer) = [1/0],
       (W2,__text) = __while(`$$label`("W2"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__le")),
             __expression(__identifier(char_data("y"))),
             __expression(__identifier(char_data("n")))),
           __expression(__operator(char_data("__gt")),
             __expression(__operator(char_data("__funcall")),
               __expression(__identifier(char_data("nondet")))),
             __expression(__constant(char_data("cst__2")))))),
       (W2,false__part) = [],
       (W2,true__part) = [],
       (lbl_1,__body) = [],
       (lbl_1,__counter) = 1/0,
       (lbl_1,__kind) = __si,
       (lbl_1,__text) = __if(`$$label`("lbl_1"),
         __expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("n"))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_1,false__part) = [lbl_4],
       (lbl_1,iteration__Domain) = {},
       (lbl_1,true__part) = [lbl_3],
       (lbl_7,__body) = [W1,lbl_9,W2],
       (lbl_7,__counter) = 1/0,
       (lbl_7,__depth) = 0,
       (lbl_7,__kind) = __while,
       (lbl_7,__outer) = [],
       (lbl_7,__text) = __while(`$$label`("lbl_7"),
         __expression(__operator(char_data("__ge")),
           __expression(__identifier(char_data("x"))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_7,false__part) = [],
       (lbl_7,true__part) = []),table((lbl_10,__board) = table(),
       (lbl_10,__iteration) = [1/0,1/0],
       (lbl_10,__kind) = __incr,
       (lbl_10,__loops) = [lbl_7,W2],
       (lbl_10,__position) = [serpent,serpent,lbl_7,W2],
       (lbl_10,__process) = serpent,
       (lbl_10,__schedule) = [],
       (lbl_10,__text) = __statement(`$$label`("lbl_10"),
         __inside(char_data("serpent"),char_data("serpent"),
           char_data("lbl_7"),char_data("W2")),
         __expression(__operator(char_data("__incr")),
           __expression(__identifier(char_data("y"))))),
       (lbl_10,extended__domain) = {},
       (lbl_10,extended__iteration) = [],
       (lbl_10,inner__Constraints) = {},
       (lbl_10,inner__Variables) = [],
       (lbl_10,iteration__Domain) = {},
       (lbl_10,local__Parameters) = {},
       (lbl_10,original__Read) = {y()},
     (lbl_10,original__Write) = {y()},
   (lbl_10,read__Ref) = {y()},
 (lbl_10,write__Ref) = {y()},
(lbl_3,__board) = table(),
(lbl_3,__iteration) = [1/0],
(lbl_3,__kind) = __return,
(lbl_3,__loops) = [lbl_1],
(lbl_3,__position) = [serpent,serpent,lbl_1,_true],
(lbl_3,__process) = serpent,
(lbl_3,__schedule) = [],
(lbl_3,__text) = __statement(`$$label`("lbl_3"),
 __inside(char_data("serpent"),char_data("serpent"),
   char_data("lbl_1"),char_data("_true")),__return()),
(lbl_3,extended__domain) = {},
(lbl_3,extended__iteration) = [],
(lbl_3,inner__Constraints) = {},
(lbl_3,inner__Variables) = [],
(lbl_3,iteration__Domain) = {},
(lbl_3,local__Parameters) = {},
(lbl_3,original__Read) = {},
(lbl_3,original__Write) = {},
(lbl_3,read__Ref) = {},
(lbl_3,write__Ref) = {},
(lbl_4,__board) = table(),
(lbl_4,__iteration) = [1/0],
(lbl_4,__kind) = __nop,
(lbl_4,__loops) = [lbl_1],
(lbl_4,__position) = [serpent,serpent,lbl_1,_false],
(lbl_4,__process) = serpent,
(lbl_4,__schedule) = [],
(lbl_4,__text) = __statement(`$$label`("lbl_4"),
__inside(char_data("serpent"),char_data("serpent"),char_data("lbl_1"),
 char_data("_false")),__nop()),
(lbl_4,extended__domain) = {},
(lbl_4,extended__iteration) = [],
(lbl_4,inner__Constraints) = {},
(lbl_4,inner__Variables) = [],
(lbl_4,iteration__Domain) = {},
(lbl_4,local__Parameters) = {},
(lbl_4,original__Read) = {},
(lbl_4,original__Write) = {},
(lbl_4,read__Ref) = {},
(lbl_4,write__Ref) = {},
(lbl_5,__board) = table(),
(lbl_5,__iteration) = [],
(lbl_5,__kind) = __assignment,
(lbl_5,__loops) = [],
(lbl_5,__position) = [serpent,serpent],
(lbl_5,__process) = serpent,
(lbl_5,__schedule) = [],
(lbl_5,__text) = __statement(`$$label`("lbl_5"),
__inside(char_data("serpent"),char_data("serpent")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y"))),
__expression(__identifier(char_data("n"))))),
(lbl_5,extended__domain) = {},
(lbl_5,extended__iteration) = [],
(lbl_5,inner__Constraints) = {},
(lbl_5,inner__Variables) = [],
(lbl_5,iteration__Domain) = {},
(lbl_5,local__Parameters) = {},
(lbl_5,original__Read) = {n()},
(lbl_5,original__Write) = {y()},
(lbl_5,read__Ref) = {n()},
(lbl_5,write__Ref) = {y()},
(lbl_6,__board) = table(),
(lbl_6,__iteration) = [],
(lbl_6,__kind) = __assignment,
(lbl_6,__loops) = [],
(lbl_6,__position) = [serpent,serpent],
(lbl_6,__process) = serpent,
(lbl_6,__schedule) = [],
(lbl_6,__text) = __statement(`$$label`("lbl_6"),
__inside(char_data("serpent"),char_data("serpent")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("x"))),
__expression(__identifier(char_data("n"))))),
(lbl_6,extended__domain) = {},
(lbl_6,extended__iteration) = [],
(lbl_6,inner__Constraints) = {},
(lbl_6,inner__Variables) = [],
(lbl_6,iteration__Domain) = {},
(lbl_6,local__Parameters) = {},
(lbl_6,original__Read) = {n()},
(lbl_6,original__Write) = {x()},
(lbl_6,read__Ref) = {n()},
(lbl_6,write__Ref) = {x()},
(lbl_8,__board) = table(),
(lbl_8,__iteration) = [1/0,1/0],
(lbl_8,__kind) = __decr,
(lbl_8,__loops) = [lbl_7,W1],
(lbl_8,__position) = [serpent,serpent,lbl_7,W1],
(lbl_8,__process) = serpent,
(lbl_8,__schedule) = [],
(lbl_8,__text) = __statement(`$$label`("lbl_8"),
__inside(char_data("serpent"),char_data("serpent"),char_data("lbl_7"),
char_data("W1")),__expression(__operator(char_data("__decr")),
__expression(__identifier(char_data("y"))))),
(lbl_8,extended__domain) = {},
(lbl_8,extended__iteration) = [],
(lbl_8,inner__Constraints) = {},
(lbl_8,inner__Variables) = [],
(lbl_8,iteration__Domain) = {},
(lbl_8,local__Parameters) = {},
(lbl_8,original__Read) = {y()},
(lbl_8,original__Write) = {y()},
(lbl_8,read__Ref) = {y()},
(lbl_8,write__Ref) = {y()},
(lbl_9,__board) = table(),
(lbl_9,__iteration) = [1/0],
(lbl_9,__kind) = __decr,
(lbl_9,__loops) = [lbl_7],
(lbl_9,__position) = [serpent,serpent,lbl_7],
(lbl_9,__process) = serpent,
(lbl_9,__schedule) = [],
(lbl_9,__text) = __statement(`$$label`("lbl_9"),
__inside(char_data("serpent"),char_data("serpent"),
char_data("lbl_7")),__expression(__operator(char_data("__decr")),
__expression(__identifier(char_data("x"))))),
(lbl_9,extended__domain) = {},
(lbl_9,extended__iteration) = [],
(lbl_9,inner__Constraints) = {},
(lbl_9,inner__Variables) = [],
(lbl_9,iteration__Domain) = {},
(lbl_9,local__Parameters) = {},
(lbl_9,original__Read) = {x()},
(lbl_9,original__Write) = {x()},
(lbl_9,read__Ref) = {x()},
(lbl_9,write__Ref) = {x()}),[n],[lbl_3,lbl_4,lbl_5,lbl_6,lbl_8,lbl_9,
lbl_10],NIL,NIL,NIL,NIL,0]));
