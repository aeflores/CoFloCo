FrontEnd version J.3
qualif cousot9
inside declaration [cousot9,cousot9]
inside declaration [cousot9,cousot9,i]
inside declaration [cousot9,cst__3]
table([cousot9,cousot9] = __declaration(__inside(char_data("cousot9")),
  __identifier(char_data("cousot9")),
  __function(__identifier(char_data("cousot9")),__basic(`$$size`("32"),
      char_data("__integer")),__identifier(char_data("j")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("N")),__basic(`$$size`("32"),
      char_data("__integer")))),
   [cousot9,cousot9,i] = __declaration(__inside(char_data("cousot9"),
     char_data("cousot9")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [cousot9,cousot9,lbl_1] = __statement(`$$label`("lbl_1"),
     __inside(char_data("cousot9"),char_data("cousot9")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("N"))))),
   [cousot9,cousot9,lbl_2] = __while(`$$label`("lbl_2"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__3"))))),
   [cousot9,cousot9,lbl_2,lbl_4] = __if(`$$label`("lbl_4"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("j"))),
       __expression(__constant(char_data("cst__3"))))),
   [cousot9,cousot9,lbl_2,lbl_4,_false,
   lbl_6] = __statement(`$$label`("lbl_6"),__inside(char_data("cousot9"),
       char_data("cousot9"),char_data("lbl_2"),char_data("lbl_4"),
       char_data("_false")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("N"))))),
   [cousot9,cousot9,lbl_2,lbl_4,_false,
   lbl_7] = __statement(`$$label`("lbl_7"),__inside(char_data("cousot9"),
       char_data("cousot9"),char_data("lbl_2"),char_data("lbl_4"),
       char_data("_false")),
       __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("i"))))),
   [cousot9,cousot9,lbl_2,lbl_4,_true,
   lbl_5] = __statement(`$$label`("lbl_5"),__inside(char_data("cousot9"),
       char_data("cousot9"),char_data("lbl_2"),char_data("lbl_4"),
       char_data("_true")),
       __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("j"))))),
   [cousot9,cousot9,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("cousot9"),char_data("cousot9")),__return()),
 [cousot9,cst__3] = __declaration(__inside(char_data("cousot9")),
   __constant(`$$value`("0"),char_data("cst__3")),
   __basic(char_data("__integer"))))
table([cousot9,cousot9] = [[cousot9,cousot9],[cousot9,cst__3],[cousot9,
  cousot9],[cousot9,cousot9,i],[cousot9,cousot9,lbl_1],[cousot9,cousot9,
  lbl_2,lbl_4],[cousot9,cousot9,lbl_2],[cousot9,cousot9,lbl_2,lbl_4,_true,
  lbl_5],[cousot9,cousot9,lbl_2,lbl_4,_false,lbl_6],[cousot9,cousot9,lbl_2,
  lbl_4,_false,lbl_7],[cousot9,cousot9,lbl_8]])
[[cousot9,cousot9,i],[cousot9,cousot9,lbl_1],[cousot9,cousot9,lbl_2,lbl_4,
  _true,lbl_5],[cousot9,cousot9,lbl_2,lbl_4,_false,lbl_6],[cousot9,cousot9,
  lbl_2,lbl_4,_false,lbl_7],[cousot9,cousot9,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of j is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of N is 0
body [[cousot9,cousot9],[cousot9,cst__3],[cousot9,cousot9],[cousot9,
  cousot9,i],[cousot9,cousot9,lbl_1],[cousot9,cousot9,lbl_2,lbl_4],
  [cousot9,cousot9,lbl_2],[cousot9,cousot9,lbl_2,lbl_4,_true,lbl_5],
[cousot9,cousot9,lbl_2,lbl_4,_false,lbl_6],[cousot9,cousot9,lbl_2,lbl_4,
  _false,lbl_7],[cousot9,cousot9,lbl_8]]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
lbl_4 __si
 counter 1/0 iteration domain {}

lbl_2 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining N
examining cousot9
examining cst__3
 is a constant
examining i
 has definitions
examining j
while remnants __gt(i,0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= N)
to be simplified ( (N > 0) && (j > 0) )
to be simplified ( (N > 0) && (0 >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i > 0)
to be simplified (0 >= i)
to be simplified (0 >= i)
to be simplified (i > 0)
to be simplified ( (i > 0) && (j > 0) )
to be simplified ( (i > 0) && (0 >= j) )
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= i)
to be simplified ( (i > 0) && (j > 0) )
to be simplified ( (i > 0) && (0 >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= i)
to be simplified ( (i > 0) && (j > 0) )
to be simplified ( (i > 0) && (0 >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
