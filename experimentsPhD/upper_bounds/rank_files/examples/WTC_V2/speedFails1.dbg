FrontEnd version J.3
qualif speedFails1
inside declaration [speedFails1,speedFails1]
table([speedFails1,
speedFails1] = __declaration(__inside(char_data("speedFails1")),
  __identifier(char_data("speedFails1")),
  __function(__identifier(char_data("speedFails1")),__basic(`$$size`("32"),
      char_data("__integer")),__identifier(char_data("i")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("n")),__basic(`$$size`("32"),
      char_data("__integer")),__identifier(char_data("m")),
    __basic(`$$size`("32"),char_data("__integer")))),
   [speedFails1,speedFails1,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("n"))))),
   [speedFails1,speedFails1,lbl_1,lbl_2] = __statement(`$$label`("lbl_2"),
     __inside(char_data("speedFails1"),char_data("speedFails1"),
       char_data("lbl_1")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("i"))),
         __expression(__identifier(char_data("m")))))),
   [speedFails1,speedFails1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("speedFails1"),char_data("speedFails1")),__nop()),
 [speedFails1,speedFails1,lbl_4] = __statement(`$$label`("lbl_4"),
   __inside(char_data("speedFails1"),char_data("speedFails1")),__return()))
table([speedFails1,speedFails1] = [[speedFails1,speedFails1],[speedFails1,
speedFails1],[speedFails1,speedFails1,lbl_1],[speedFails1,speedFails1,
lbl_1,lbl_2],[speedFails1,speedFails1,lbl_3],[speedFails1,speedFails1,
lbl_4]])
[[speedFails1,speedFails1,lbl_1,lbl_2],[speedFails1,speedFails1,lbl_3],
[speedFails1,speedFails1,lbl_4]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of i is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
body [[speedFails1,speedFails1],[speedFails1,speedFails1],[speedFails1,
speedFails1,lbl_1],[speedFails1,speedFails1,lbl_1,lbl_2],[speedFails1,
speedFails1,lbl_3],[speedFails1,speedFails1,lbl_4]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining i
examining m
examining n
examining speedFails1
while remnants __le(i,n)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (i > n)
to be simplified (n >= i)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= i)
to be simplified (i > n)
to be simplified (i > n)
to be simplified (i > n)
to be simplified (n >= i)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i > n)
to be simplified (n >= i)
