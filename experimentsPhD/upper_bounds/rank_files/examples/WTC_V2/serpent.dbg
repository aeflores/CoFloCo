FrontEnd version J.3
qualif serpent
inside declaration [serpent,nondet]
inside declaration [serpent,serpent]
inside declaration [serpent,serpent,x]
inside declaration [serpent,serpent,y]
inside declaration [serpent,cst__2]
table([serpent,cst__2] = __declaration(__inside(char_data("serpent")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [serpent,nondet] = __declaration(__inside(char_data("serpent")),
     __identifier(char_data("nondet")),
     __function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [serpent,serpent] = __declaration(__inside(char_data("serpent")),
     __identifier(char_data("serpent")),
     __function(__identifier(char_data("serpent")),
         __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [serpent,serpent,lbl_1] = __if(`$$label`("lbl_1"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("n"))),
       __expression(__constant(char_data("cst__2"))))),
   [serpent,serpent,lbl_1,_false,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("serpent"),char_data("serpent"),char_data("lbl_1"),
       char_data("_false")),__nop()),
 [serpent,serpent,lbl_1,_true,lbl_3] = __statement(`$$label`("lbl_3"),
   __inside(char_data("serpent"),char_data("serpent"),char_data("lbl_1"),
     char_data("_true")),__return()),
[serpent,serpent,lbl_5] = __statement(`$$label`("lbl_5"),
 __inside(char_data("serpent"),char_data("serpent")),
 __expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("y"))),
   __expression(__identifier(char_data("n"))))),
[serpent,serpent,lbl_6] = __statement(`$$label`("lbl_6"),
 __inside(char_data("serpent"),char_data("serpent")),
 __expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("x"))),
   __expression(__identifier(char_data("n"))))),
[serpent,serpent,lbl_7] = __while(`$$label`("lbl_7"),
 __expression(__operator(char_data("__ge")),
   __expression(__identifier(char_data("x"))),
   __expression(__constant(char_data("cst__2"))))),
[serpent,serpent,lbl_7,W1] = __while(`$$label`("W1"),
 __expression(__operator(char_data("__conjunction")),
   __expression(__operator(char_data("__ge")),
     __expression(__identifier(char_data("y"))),
     __expression(__constant(char_data("cst__2")))),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__funcall")),
       __expression(__identifier(char_data("nondet")))),
     __expression(__constant(char_data("cst__2")))))),
[serpent,serpent,lbl_7,W1,lbl_8] = __statement(`$$label`("lbl_8"),
 __inside(char_data("serpent"),char_data("serpent"),char_data("lbl_7"),
   char_data("W1")),__expression(__operator(char_data("__decr")),
   __expression(__identifier(char_data("y"))))),
[serpent,serpent,lbl_7,W2] = __while(`$$label`("W2"),
 __expression(__operator(char_data("__conjunction")),
   __expression(__operator(char_data("__le")),
     __expression(__identifier(char_data("y"))),
     __expression(__identifier(char_data("n")))),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__funcall")),
       __expression(__identifier(char_data("nondet")))),
     __expression(__constant(char_data("cst__2")))))),
[serpent,serpent,lbl_7,W2,lbl_10] = __statement(`$$label`("lbl_10"),
 __inside(char_data("serpent"),char_data("serpent"),char_data("lbl_7"),
   char_data("W2")),__expression(__operator(char_data("__incr")),
   __expression(__identifier(char_data("y"))))),
[serpent,serpent,lbl_7,lbl_9] = __statement(`$$label`("lbl_9"),
 __inside(char_data("serpent"),char_data("serpent"),char_data("lbl_7")),
 __expression(__operator(char_data("__decr")),
   __expression(__identifier(char_data("x"))))),
[serpent,serpent,x] = __declaration(__inside(char_data("serpent"),
 char_data("serpent")),__identifier(char_data("x")),__basic(`$$size`("32"),
   char_data("__integer"))),
[serpent,serpent,y] = __declaration(__inside(char_data("serpent"),
 char_data("serpent")),__identifier(char_data("y")),__basic(`$$size`("32"),
   char_data("__integer"))))
table([serpent,serpent] = [[serpent,nondet],[serpent,serpent],[serpent,
cst__2],[serpent,serpent],[serpent,serpent,x],[serpent,serpent,y],[serpent,
serpent,lbl_1],[serpent,serpent,lbl_1,_true,lbl_3],[serpent,serpent,lbl_1,
_false,lbl_4],[serpent,serpent,lbl_5],[serpent,serpent,lbl_6],[serpent,
serpent,lbl_7,W1],[serpent,serpent,lbl_7],[serpent,serpent,lbl_7,W1,lbl_8],
[serpent,serpent,lbl_7,lbl_9],[serpent,serpent,lbl_7,W2],[serpent,serpent,
lbl_7,W2,lbl_10]])
[[serpent,serpent,x],[serpent,serpent,y],[serpent,serpent,lbl_1,_true,
lbl_3],[serpent,serpent,lbl_1,_false,lbl_4],[serpent,serpent,lbl_5],
[serpent,serpent,lbl_6],[serpent,serpent,lbl_7,W1,lbl_8],[serpent,serpent,
lbl_7,lbl_9],[serpent,serpent,lbl_7,W2,lbl_10]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[serpent,nondet],[serpent,serpent],[serpent,cst__2],[serpent,
serpent],[serpent,serpent,x],[serpent,serpent,y],[serpent,serpent,lbl_1],
[serpent,serpent,lbl_1,_true,lbl_3],[serpent,serpent,lbl_1,_false,lbl_4],
[serpent,serpent,lbl_5],[serpent,serpent,lbl_6],[serpent,serpent,lbl_7,W1],
[serpent,serpent,lbl_7],[serpent,serpent,lbl_7,W1,lbl_8],[serpent,serpent,
lbl_7,lbl_9],[serpent,serpent,lbl_7,W2],[serpent,serpent,lbl_7,W2,lbl_10]]
lbl_1 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
W1 __while
 counter 1/0
lbl_7 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
W2 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__2
 is a constant
examining n
examining nondet
examining serpent
examining x
 has definitions
examining y
 has definitions
while remnants __ge(x,0)while remnants __conjunction(__le(y,n),
__gt(nondet(),0))while remnants __conjunction(__ge(y,0),__gt(nondet(),
0))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified ( (n > 0) && (0 > n) )
to be simplified ( (n > 0) && (n >= 0) )
to be simplified ( (n > 0) && (n >= 0) )
to be simplified ( (n > 0) && ( (n >= 0) && (0 >= 0) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= 0)
to be simplified (n >= y)
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= y)
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified (x >= 0)
to be simplified (0 > x)
to be simplified (0 > x)
to be simplified (x >= 0)
to be simplified (x >= 0)
to be simplified ( (x >= 0) && (y >= 0) )
to be simplified (x >= 0)
to be simplified ( (x >= 0) && (n >= y) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= y)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= 0)
to be simplified TRUE
to be simplified (n >= y)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 > x)
to be simplified ( (x >= 0) && (y >= 0) )
to be simplified (x >= 0)
to be simplified ( (x >= 0) && (n >= y) )
to be simplified TRUE
