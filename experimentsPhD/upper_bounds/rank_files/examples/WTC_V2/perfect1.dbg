FrontEnd version J.3
qualif perfect1
inside declaration [perfect1,perfect1]
inside declaration [perfect1,perfect1,y1]
inside declaration [perfect1,perfect1,y2]
inside declaration [perfect1,perfect1,y3]
inside declaration [perfect1,cst__9]
inside declaration [perfect1,cst__2]
table([perfect1,cst__2] = __declaration(__inside(char_data("perfect1")),
  __constant(`$$value`("1"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [perfect1,cst__9] = __declaration(__inside(char_data("perfect1")),
     __constant(`$$value`("0"),char_data("cst__9")),
     __basic(char_data("__integer"))),
   [perfect1,perfect1] = __declaration(__inside(char_data("perfect1")),
     __identifier(char_data("perfect1")),
     __function(__identifier(char_data("perfect1")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("x")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [perfect1,perfect1,lbl_1] = __if(`$$label`("lbl_1"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__2"))))),
   [perfect1,perfect1,lbl_1,_false,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("perfect1"),char_data("perfect1"),
         char_data("lbl_1"),char_data("_false")),__nop()),
 [perfect1,perfect1,lbl_1,_true,lbl_3] = __statement(`$$label`("lbl_3"),
   __inside(char_data("perfect1"),char_data("perfect1"),char_data("lbl_1"),
     char_data("_true")),__return()),
[perfect1,perfect1,lbl_16] = __statement(`$$label`("lbl_16"),
 __inside(char_data("perfect1"),char_data("perfect1")),__return()),
[perfect1,perfect1,lbl_5] = __statement(`$$label`("lbl_5"),
__inside(char_data("perfect1"),char_data("perfect1")),
__expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("y1"))),
 __expression(__identifier(char_data("x"))))),
[perfect1,perfect1,lbl_6] = __statement(`$$label`("lbl_6"),
__inside(char_data("perfect1"),char_data("perfect1")),
__expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("y2"))),
 __expression(__identifier(char_data("x"))))),
[perfect1,perfect1,lbl_7] = __statement(`$$label`("lbl_7"),
__inside(char_data("perfect1"),char_data("perfect1")),
__expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("y3"))),
 __expression(__identifier(char_data("x"))))),
[perfect1,perfect1,lbl_8] = __for(`$$label`("lbl_8"),
__init(__expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("y1"))),
 __expression(__operator(char_data("__subtraction")),
   __expression(__identifier(char_data("x"))),
   __expression(__constant(char_data("cst__2")))))),
__test(__expression(__operator(char_data("__gt")),
 __expression(__identifier(char_data("y1"))),
 __expression(__constant(char_data("cst__9"))))),
__next(__expression(__operator(char_data("_post_decr")),
 __expression(__identifier(char_data("y1")))))),
[perfect1,perfect1,lbl_8,lbl_10] = __while(`$$label`("lbl_10"),
__expression(__operator(char_data("__ge")),
 __expression(__identifier(char_data("y2"))),
 __expression(__identifier(char_data("y1"))))),
[perfect1,perfect1,lbl_8,lbl_10,lbl_11] = __statement(`$$label`("lbl_11"),
__inside(char_data("perfect1"),char_data("perfect1"),char_data("lbl_8"),
 char_data("lbl_10")),__expression(__operator(char_data("__assignment")),
 __expression(__identifier(char_data("y2"))),
 __expression(__operator(char_data("__subtraction")),
   __expression(__identifier(char_data("y2"))),
   __expression(__identifier(char_data("y1")))))),
[perfect1,perfect1,lbl_8,lbl_12] = __if(`$$label`("lbl_12"),
__expression(__operator(char_data("__eq")),
 __expression(__identifier(char_data("y2"))),
 __expression(__constant(char_data("cst__9"))))),
[perfect1,perfect1,lbl_8,lbl_12,_false,
lbl_14] = __statement(`$$label`("lbl_14"),__inside(char_data("perfect1"),
 char_data("perfect1"),char_data("lbl_8"),char_data("lbl_12"),
 char_data("_false")),__nop()),
[perfect1,perfect1,lbl_8,lbl_12,_true,
lbl_13] = __statement(`$$label`("lbl_13"),__inside(char_data("perfect1"),
char_data("perfect1"),char_data("lbl_8"),char_data("lbl_12"),
char_data("_true")),__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y3"))),
__expression(__operator(char_data("__subtraction")),
 __expression(__identifier(char_data("y3"))),
 __expression(__identifier(char_data("y1")))))),
[perfect1,perfect1,lbl_8,lbl_15] = __statement(`$$label`("lbl_15"),
__inside(char_data("perfect1"),char_data("perfect1"),char_data("lbl_8")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y2"))),
__expression(__identifier(char_data("x"))))),
[perfect1,perfect1,y1] = __declaration(__inside(char_data("perfect1"),
char_data("perfect1")),__identifier(char_data("y1")),
__basic(`$$size`("32"),char_data("__integer"))),
[perfect1,perfect1,y2] = __declaration(__inside(char_data("perfect1"),
char_data("perfect1")),__identifier(char_data("y2")),
__basic(`$$size`("32"),char_data("__integer"))),
[perfect1,perfect1,y3] = __declaration(__inside(char_data("perfect1"),
char_data("perfect1")),__identifier(char_data("y3")),
__basic(`$$size`("32"),char_data("__integer"))))
table([perfect1,perfect1] = [[perfect1,perfect1],[perfect1,cst__9],
[perfect1,cst__2],[perfect1,perfect1],[perfect1,perfect1,y1],[perfect1,
perfect1,y2],[perfect1,perfect1,y3],[perfect1,perfect1,lbl_1],[perfect1,
perfect1,lbl_1,_true,lbl_3],[perfect1,perfect1,lbl_1,_false,lbl_4],
[perfect1,perfect1,lbl_5],[perfect1,perfect1,lbl_6],[perfect1,perfect1,
lbl_7],[perfect1,perfect1,lbl_8,lbl_10],[perfect1,perfect1,lbl_8],
[perfect1,perfect1,lbl_8,lbl_10,lbl_11],[perfect1,perfect1,lbl_8,lbl_12],
[perfect1,perfect1,lbl_8,lbl_12,_true,lbl_13],[perfect1,perfect1,lbl_8,
lbl_12,_false,lbl_14],[perfect1,perfect1,lbl_8,lbl_15],[perfect1,perfect1,
lbl_16]])
[[perfect1,perfect1,y1],[perfect1,perfect1,y2],[perfect1,perfect1,y3],
[perfect1,perfect1,lbl_1,_true,lbl_3],[perfect1,perfect1,lbl_1,_false,
lbl_4],[perfect1,perfect1,lbl_5],[perfect1,perfect1,lbl_6],[perfect1,
perfect1,lbl_7],[perfect1,perfect1,lbl_8,lbl_10,lbl_11],[perfect1,perfect1,
lbl_8,lbl_12,_true,lbl_13],[perfect1,perfect1,lbl_8,lbl_12,_false,lbl_14],
[perfect1,perfect1,lbl_8,lbl_15],[perfect1,perfect1,lbl_16]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
body [[perfect1,perfect1],[perfect1,cst__9],[perfect1,cst__2],[perfect1,
perfect1],[perfect1,perfect1,y1],[perfect1,perfect1,y2],[perfect1,perfect1,
y3],[perfect1,perfect1,lbl_1],[perfect1,perfect1,lbl_1,_true,lbl_3],
[perfect1,perfect1,lbl_1,_false,lbl_4],[perfect1,perfect1,lbl_5],[perfect1,
perfect1,lbl_6],[perfect1,perfect1,lbl_7],[perfect1,perfect1,lbl_8,lbl_10],
[perfect1,perfect1,lbl_8],[perfect1,perfect1,lbl_8,lbl_10,lbl_11],
[perfect1,perfect1,lbl_8,lbl_12],[perfect1,perfect1,lbl_8,lbl_12,_true,
lbl_13],[perfect1,perfect1,lbl_8,lbl_12,_false,lbl_14],[perfect1,perfect1,
lbl_8,lbl_15],[perfect1,perfect1,lbl_16]]
lbl_1 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("y1")))
[y1(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y2")))
[y2(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y3")))
[y3(),[],{},{}]
lbl_10 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y2")))
[y2(),[],{},{}]
lbl_12 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("y3")))
[y3(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y2")))
[y2(),[],{},{}]
examining cst__2
 is a constant
examining cst__9
 is a constant
examining perfect1
examining x
examining y1
 has definitions
examining y2
 has definitions
examining y3
 has definitions
while remnants __ge(y2,y1)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (1 >= x)
to be simplified (x > 1)
to be simplified ( (x > 1) && (1 >= x) )
to be simplified (x > 1)
to be simplified ( (x > 1) && (1 >= 0) )
to be simplified ( (x > 1) && ( (0 > 1) && (x != 0) ) )
to be simplified ( (x > 1) && ( (0 > 1) && (x = 0) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (1 >= x)
to be simplified (x > 1)
to be simplified (1 >= x)
to be simplified (x > 1)
to be simplified (y2 >= y1)
to be simplified (y1 > y2)
to be simplified (y2 >= y1)
to be simplified ( (y1 > y2) && (y2 != 0) )
to be simplified ( (y1 > y2) && (y2 = 0) )
to be simplified (y2 = 0)
to be simplified (y2 != 0)
to be simplified (y2 = 0)
to be simplified (y2 != 0)
to be simplified (y2 = 0)
to be simplified (y2 != 0)
to be simplified (y2 = 0)
to be simplified TRUE
to be simplified (y1 > 0)
to be simplified (0 >= y1)
to be simplified (y1 > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y2 >= y1)
to be simplified ( (y1 > y2) && (y2 != 0) )
to be simplified ( (y1 > y2) && (y2 = 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= y1)
to be simplified (y1 > 0)
to be simplified ( (y1 > 0) && (y2 >= y1) )
to be simplified ( (y1 > 0) && ( (y1 > y2) && (y2 != 0) ) )
to be simplified ( (y1 > 0) && ( (y1 > y2) && (y2 = 0) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
