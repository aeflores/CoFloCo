FrontEnd version J.3
qualif catmouse
inside declaration [catmouse,catmouse]
inside declaration [catmouse,catmouse,x]
inside declaration [catmouse,cst__1]
table([catmouse,catmouse] = __declaration(__inside(char_data("catmouse")),
  __identifier(char_data("catmouse")),
  __function(__identifier(char_data("catmouse")),__basic(`$$size`("32"),
      char_data("__integer")),__identifier(char_data("m")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("n")),__basic(`$$size`("32"),
      char_data("__integer")))),
   [catmouse,catmouse,lbl_2] = __statement(`$$label`("lbl_2"),
     __inside(char_data("catmouse"),char_data("catmouse")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__1"))))),
   [catmouse,catmouse,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("n"))))),
   [catmouse,catmouse,lbl_3,lbl_4] = __if(`$$label`("lbl_4"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("m"))))),
   [catmouse,catmouse,lbl_3,lbl_4,_false,
   lbl_6] = __statement(`$$label`("lbl_6"),__inside(char_data("catmouse"),
       char_data("catmouse"),char_data("lbl_3"),char_data("lbl_4"),
       char_data("_false")),__expression(__operator(char_data("__decr")),
       __expression(__identifier(char_data("x"))))),
   [catmouse,catmouse,lbl_3,lbl_4,_true,
   lbl_5] = __statement(`$$label`("lbl_5"),__inside(char_data("catmouse"),
       char_data("catmouse"),char_data("lbl_3"),char_data("lbl_4"),
       char_data("_true")),__expression(__operator(char_data("__incr")),
       __expression(__identifier(char_data("x"))))),
   [catmouse,catmouse,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("catmouse"),char_data("catmouse")),__return()),
 [catmouse,catmouse,x] = __declaration(__inside(char_data("catmouse"),
   char_data("catmouse")),__identifier(char_data("x")),
   __basic(`$$size`("32"),char_data("__integer"))),
 [catmouse,cst__1] = __declaration(__inside(char_data("catmouse")),
   __constant(`$$value`("0"),char_data("cst__1")),
   __basic(char_data("__integer"))))
table([catmouse,catmouse] = [[catmouse,catmouse],[catmouse,cst__1],
[catmouse,catmouse],[catmouse,catmouse,x],[catmouse,catmouse,lbl_2],
[catmouse,catmouse,lbl_3,lbl_4],[catmouse,catmouse,lbl_3],[catmouse,
  catmouse,lbl_3,lbl_4,_true,lbl_5],[catmouse,catmouse,lbl_3,lbl_4,_false,
  lbl_6],[catmouse,catmouse,lbl_7]])
[[catmouse,catmouse,x],[catmouse,catmouse,lbl_2],[catmouse,catmouse,lbl_3,
  lbl_4,_true,lbl_5],[catmouse,catmouse,lbl_3,lbl_4,_false,lbl_6],
  [catmouse,catmouse,lbl_7]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[catmouse,catmouse],[catmouse,cst__1],[catmouse,catmouse],[catmouse,
  catmouse,x],[catmouse,catmouse,lbl_2],[catmouse,catmouse,lbl_3,lbl_4],
[catmouse,catmouse,lbl_3],[catmouse,catmouse,lbl_3,lbl_4,_true,lbl_5],
[catmouse,catmouse,lbl_3,lbl_4,_false,lbl_6],[catmouse,catmouse,lbl_7]]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
lbl_4 __si
 counter 1/0 iteration domain {}

lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
examining catmouse
examining cst__1
 is a constant
examining m
examining n
examining x
 has definitions
while remnants __le(x,n)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 > n)
to be simplified ( (n >= 0) && (m >= 0) )
to be simplified ( (n >= 0) && (0 > m) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= x)
to be simplified (x > n)
to be simplified (x > n)
to be simplified (n >= x)
to be simplified ( (n >= x) && (m >= x) )
to be simplified ( (n >= x) && (x > m) )
to be simplified (m >= x)
to be simplified (x > m)
to be simplified (m >= x)
to be simplified (x > m)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (x > n)
to be simplified ( (n >= x) && (m >= x) )
to be simplified ( (n >= x) && (x > m) )
to be simplified TRUE
to be simplified (x > n)
to be simplified ( (n >= x) && (m >= x) )
to be simplified ( (n >= x) && (x > m) )
to be simplified TRUE
