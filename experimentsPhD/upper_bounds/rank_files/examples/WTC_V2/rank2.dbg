FrontEnd version J.3
qualif rank2
inside declaration [rank2,nondet]
inside declaration [rank2,rank2]
inside declaration [rank2,rank2,x]
inside declaration [rank2,rank2,y]
inside declaration [rank2,cst__8]
inside declaration [rank2,cst__4]
table([rank2,cst__4] = __declaration(__inside(char_data("rank2")),
  __constant(`$$value`("2"),char_data("cst__4")),
  __basic(char_data("__integer"))),
   [rank2,cst__8] = __declaration(__inside(char_data("rank2")),
     __constant(`$$value`("0"),char_data("cst__8")),
     __basic(char_data("__integer"))),
   [rank2,nondet] = __declaration(__inside(char_data("rank2")),
     __identifier(char_data("nondet")),
     __function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [rank2,rank2] = __declaration(__inside(char_data("rank2")),
     __identifier(char_data("rank2")),
     __function(__identifier(char_data("rank2")),
       __basic(char_data("void")),__identifier(char_data("m")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [rank2,rank2,init_1] = __statement(`$$label`("init_1"),
     __inside(char_data("rank2"),char_data("rank2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("m"))))),
   [rank2,rank2,init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("rank2"),char_data("rank2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("m"))))),
   [rank2,rank2,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__4"))))),
   [rank2,rank2,lbl_3,lbl_10] = __statement(`$$label`("lbl_10"),
     __inside(char_data("rank2"),char_data("rank2"),char_data("lbl_3")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("x"))))),
   [rank2,rank2,lbl_3,lbl_11] = __statement(`$$label`("lbl_11"),
     __inside(char_data("rank2"),char_data("rank2"),char_data("lbl_3")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("y"))),
         __expression(__identifier(char_data("x")))))),
   [rank2,rank2,lbl_3,lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("rank2"),char_data("rank2"),char_data("lbl_3")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("x"))))),
   [rank2,rank2,lbl_3,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("rank2"),char_data("rank2"),char_data("lbl_3")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("y"))),
         __expression(__identifier(char_data("x")))))),
   [rank2,rank2,lbl_3,lbl_7] = __while(`$$label`("lbl_7"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__ge")),
         __expression(__identifier(char_data("y"))),
         __expression(__identifier(char_data("x")))),
       __expression(__operator(char_data("__gt")),
         __expression(__operator(char_data("__funcall")),
           __expression(__identifier(char_data("nondet")))),
         __expression(__constant(char_data("cst__8")))))),
   [rank2,rank2,lbl_3,lbl_7,lbl_9] = __statement(`$$label`("lbl_9"),
     __inside(char_data("rank2"),char_data("rank2"),char_data("lbl_3"),
       char_data("lbl_7")),
       __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("y"))))),
   [rank2,rank2,x] = __declaration(__inside(char_data("rank2"),
     char_data("rank2")),__identifier(char_data("x")),
       __basic(`$$size`("32"),char_data("__integer"))),
   [rank2,rank2,y] = __declaration(__inside(char_data("rank2"),
     char_data("rank2")),__identifier(char_data("y")),
       __basic(`$$size`("32"),char_data("__integer"))))
table([rank2,rank2] = [[rank2,nondet],[rank2,rank2],[rank2,cst__8],[rank2,
    cst__4],[rank2,rank2],[rank2,rank2,x],[rank2,rank2,y],[rank2,rank2,
    init_1],[rank2,rank2,init_2],[rank2,rank2,lbl_3],[rank2,rank2,lbl_3,
    lbl_5],[rank2,rank2,lbl_3,lbl_6],[rank2,rank2,lbl_3,lbl_7],[rank2,
    rank2,lbl_3,lbl_7,lbl_9],[rank2,rank2,lbl_3,lbl_10],[rank2,rank2,lbl_3,
    lbl_11]])
[[rank2,rank2,x],[rank2,rank2,y],[rank2,rank2,init_1],[rank2,rank2,init_2],
  [rank2,rank2,lbl_3,lbl_5],[rank2,rank2,lbl_3,lbl_6],[rank2,rank2,lbl_3,
    lbl_7,lbl_9],[rank2,rank2,lbl_3,lbl_10],[rank2,rank2,lbl_3,lbl_11]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
body [[rank2,nondet],[rank2,rank2],[rank2,cst__8],[rank2,cst__4],[rank2,
    rank2],[rank2,rank2,x],[rank2,rank2,y],[rank2,rank2,init_1],[rank2,
    rank2,init_2],[rank2,rank2,lbl_3],[rank2,rank2,lbl_3,lbl_5],[rank2,
    rank2,lbl_3,lbl_6],[rank2,rank2,lbl_3,lbl_7],[rank2,rank2,lbl_3,lbl_7,
    lbl_9],[rank2,rank2,lbl_3,lbl_10],[rank2,rank2,lbl_3,lbl_11]]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_7 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__4
 is a constant
examining cst__8
 is a constant
examining m
examining nondet
examining rank2
examining x
 has definitions
examining y
 has definitions
while remnants __ge(x,2)while remnants __conjunction(__ge(y,x),
__gt(nondet(),0))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (2 > m)
to be simplified (m >= 2)
to be simplified (m >= 2)
to be simplified ( (m >= 2) && (m >= 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (x >= 2)
to be simplified (2 > x)
to be simplified (x >= 2)
to be simplified (x >= 2)
to be simplified (x >= 2)
to be simplified (y >= x)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= x)
to be simplified (y >= x)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (2 > x)
to be simplified (x >= 2)
to be simplified (x >= 2)
to be simplified ( (x >= 2) && (y >= 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= x)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
