sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1,lbl_16],table((b,
    __dim) = 0,
       (b,__kind) = __param,
       (b,__schedule) = [],
       (b,__text) = __declaration(__identifier(char_data(b)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (b,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (b,actual__Alloc) = [],
       (counterex1c,__dim) = 0,
       (counterex1c,__formals) = [n,b,x,y],
       (counterex1c,__kind) = __global,
       (counterex1c,__schedule) = [],
       (counterex1c,
       __text) = __declaration(__inside(char_data("counterex1c")),
         __identifier(char_data("counterex1c")),
         __function(__identifier(char_data("counterex1c")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("n")),__basic(`$$size`("32"),
             char_data("__integer")),__identifier(char_data("b")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("x")),__basic(`$$size`("32"),
             char_data("__integer")),__identifier(char_data("y")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (counterex1c,
       __type) = __function(__identifier(char_data("counterex1c")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("n")),__basic(`$$size`("32"),
           char_data("__integer")),__identifier(char_data("b")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("x")),__basic(`$$size`("32"),
           char_data("__integer")),__identifier(char_data("y")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (counterex1c,actual__Alloc) = [],
       (cst__2,__dim) = 0,
       (cst__2,__kind) = __global,
       (cst__2,__schedule) = [],
       (cst__2,
       __text) = __declaration(__inside(char_data("counterex1c")),
         __constant(`$$value`("0"),char_data("cst__2")),
         __basic(char_data("__integer"))),
       (cst__2,__type) = __basic(char_data("__integer")),
       (cst__2,__value) = "0",
       (cst__2,actual__Alloc) = [],
       (cst__6,__dim) = 0,
       (cst__6,__kind) = __global,
       (cst__6,__schedule) = [],
       (cst__6,
       __text) = __declaration(__inside(char_data("counterex1c")),
         __constant(`$$value`("1"),char_data("cst__6")),
         __basic(char_data("__integer"))),
       (cst__6,__type) = __basic(char_data("__integer")),
       (cst__6,__value) = "1",
       (cst__6,actual__Alloc) = [],
       (n,__dim) = 0,
       (n,__kind) = __param,
       (n,__schedule) = [],
       (n,__text) = __declaration(__identifier(char_data(n)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (n,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (n,actual__Alloc) = [],
       (nondet,__dim) = 0,
       (nondet,__kind) = __global,
       (nondet,__schedule) = [],
       (nondet,
       __text) = __declaration(__inside(char_data("counterex1c")),
         __identifier(char_data("nondet")),
         __function(__identifier(char_data("nondet")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (nondet,__type) = __function(__identifier(char_data("nondet")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (nondet,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __param,
       (x,__schedule) = [],
       (x,__text) = __declaration(__identifier(char_data(x)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __param,
       (y,__schedule) = [],
       (y,__text) = __declaration(__identifier(char_data(y)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((lbl_1,__body) = [lbl_3],
       (lbl_1,__counter) = 1/0,
       (lbl_1,__depth) = 0,
       (lbl_1,__kind) = __while,
       (lbl_1,__outer) = [],
       (lbl_1,__text) = __while(`$$label`("lbl_1"),
         __expression(__operator(char_data("__conjunction")),
           __expression(__operator(char_data("__conjunction")),
             __expression(__operator(char_data("__ge")),
               __expression(__identifier(char_data("x"))),
               __expression(__constant(char_data("cst__2")))),
             __expression(__operator(char_data("__le")),
               __expression(__constant(char_data("cst__2"))),
               __expression(__identifier(char_data("y"))))),
           __expression(__operator(char_data("__le")),
             __expression(__identifier(char_data("y"))),
             __expression(__identifier(char_data("n")))))),
       (lbl_1,false__part) = [],
       (lbl_1,true__part) = [],
       (lbl_11,__body) = [],
       (lbl_11,__counter) = 1/0,
       (lbl_11,__kind) = __si,
       (lbl_11,__text) = __if(`$$label`("lbl_11"),
         __expression(__operator(char_data("__gt")),
           __expression(__operator(char_data("__funcall")),
             __expression(__identifier(char_data("nondet")))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_11,false__part) = [lbl_14],
       (lbl_11,iteration__Domain) = {},
       (lbl_11,true__part) = [lbl_12,lbl_13],
       (lbl_3,__body) = [],
       (lbl_3,__counter) = 1/0,
       (lbl_3,__kind) = __si,
       (lbl_3,__text) = __if(`$$label`("lbl_3"),
         __expression(__operator(char_data("__eq")),
           __expression(__identifier(char_data("b"))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_3,false__part) = [lbl_9],
       (lbl_3,iteration__Domain) = {},
       (lbl_3,true__part) = [lbl_4,lbl_5],
       (lbl_5,__body) = [],
       (lbl_5,__counter) = 1/0,
       (lbl_5,__kind) = __si,
       (lbl_5,__text) = __if(`$$label`("lbl_5"),
         __expression(__operator(char_data("__gt")),
           __expression(__operator(char_data("__funcall")),
             __expression(__identifier(char_data("nondet")))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_5,false__part) = [lbl_8],
       (lbl_5,iteration__Domain) = {},
       (lbl_5,true__part) = [lbl_7],
       (lbl_9,__body) = [],
       (lbl_9,__counter) = 1/0,
       (lbl_9,__kind) = __si,
       (lbl_9,__text) = __if(`$$label`("lbl_9"),
         __expression(__operator(char_data("__eq")),
           __expression(__identifier(char_data("b"))),
           __expression(__constant(char_data("cst__6"))))),
       (lbl_9,false__part) = [lbl_15],
       (lbl_9,iteration__Domain) = {},
       (lbl_9,true__part) = [lbl_10,lbl_11]),table((lbl_10,
    __board) = table(),
       (lbl_10,__iteration) = [1/0,1/0,1/0],
       (lbl_10,__kind) = _post_decr,
       (lbl_10,__loops) = [lbl_1,lbl_3,lbl_9],
       (lbl_10,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,
         _false,lbl_9,_true],
       (lbl_10,__process) = counterex1c,
       (lbl_10,__schedule) = [],
       (lbl_10,__text) = __statement(`$$label`("lbl_10"),
         __inside(char_data("counterex1c"),char_data("counterex1c"),
           char_data("lbl_1"),char_data("lbl_3"),char_data("_false"),
           char_data("lbl_9"),char_data("_true")),
         __expression(__operator(char_data("_post_decr")),
           __expression(__identifier(char_data("y"))))),
       (lbl_10,extended__domain) = {},
       (lbl_10,extended__iteration) = [],
       (lbl_10,inner__Constraints) = {},
       (lbl_10,inner__Variables) = [],
       (lbl_10,iteration__Domain) = {},
       (lbl_10,local__Parameters) = {},
       (lbl_10,original__Read) = {y()},
     (lbl_10,original__Write) = {y()},
   (lbl_10,read__Ref) = {y()},
 (lbl_10,write__Ref) = {y()},
(lbl_12,__board) = table(),
(lbl_12,__iteration) = [1/0,1/0,1/0,1/0],
(lbl_12,__kind) = _post_decr,
(lbl_12,__loops) = [lbl_1,lbl_3,lbl_9,lbl_11],
(lbl_12,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_false,
 lbl_9,_true,lbl_11,_true],
(lbl_12,__process) = counterex1c,
(lbl_12,__schedule) = [],
(lbl_12,__text) = __statement(`$$label`("lbl_12"),
 __inside(char_data("counterex1c"),char_data("counterex1c"),
   char_data("lbl_1"),char_data("lbl_3"),char_data("_false"),
   char_data("lbl_9"),char_data("_true"),char_data("lbl_11"),
   char_data("_true")),
   __expression(__operator(char_data("_post_decr")),
   __expression(__identifier(char_data("x"))))),
(lbl_12,extended__domain) = {},
(lbl_12,extended__iteration) = [],
(lbl_12,inner__Constraints) = {},
(lbl_12,inner__Variables) = [],
(lbl_12,iteration__Domain) = {},
(lbl_12,local__Parameters) = {},
(lbl_12,original__Read) = {x()},
(lbl_12,original__Write) = {x()},
(lbl_12,read__Ref) = {x()},
(lbl_12,write__Ref) = {x()},
(lbl_13,__board) = table(),
(lbl_13,__iteration) = [1/0,1/0,1/0,1/0],
(lbl_13,__kind) = __assignment,
(lbl_13,__loops) = [lbl_1,lbl_3,lbl_9,lbl_11],
(lbl_13,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_false,
lbl_9,_true,lbl_11,_true],
(lbl_13,__process) = counterex1c,
(lbl_13,__schedule) = [],
(lbl_13,__text) = __statement(`$$label`("lbl_13"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_false"),
char_data("lbl_9"),char_data("_true"),char_data("lbl_11"),
char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("b"))),
__expression(__constant(char_data("cst__2"))))),
(lbl_13,extended__domain) = {},
(lbl_13,extended__iteration) = [],
(lbl_13,inner__Constraints) = {},
(lbl_13,inner__Variables) = [],
(lbl_13,iteration__Domain) = {},
(lbl_13,local__Parameters) = {},
(lbl_13,original__Read) = {},
(lbl_13,original__Write) = {b()},
(lbl_13,read__Ref) = {},
(lbl_13,write__Ref) = {b()},
(lbl_14,__board) = table(),
(lbl_14,__iteration) = [1/0,1/0,1/0,1/0],
(lbl_14,__kind) = __nop,
(lbl_14,__loops) = [lbl_1,lbl_3,lbl_9,lbl_11],
(lbl_14,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_false,
lbl_9,_true,lbl_11,_false],
(lbl_14,__process) = counterex1c,
(lbl_14,__schedule) = [],
(lbl_14,__text) = __statement(`$$label`("lbl_14"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_false"),
char_data("lbl_9"),char_data("_true"),char_data("lbl_11"),
char_data("_false")),__nop()),
(lbl_14,extended__domain) = {},
(lbl_14,extended__iteration) = [],
(lbl_14,inner__Constraints) = {},
(lbl_14,inner__Variables) = [],
(lbl_14,iteration__Domain) = {},
(lbl_14,local__Parameters) = {},
(lbl_14,original__Read) = {},
(lbl_14,original__Write) = {},
(lbl_14,read__Ref) = {},
(lbl_14,write__Ref) = {},
(lbl_15,__board) = table(),
(lbl_15,__iteration) = [1/0,1/0,1/0],
(lbl_15,__kind) = __break,
(lbl_15,__loops) = [lbl_1,lbl_3,lbl_9],
(lbl_15,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_false,
lbl_9,_false],
(lbl_15,__process) = counterex1c,
(lbl_15,__schedule) = [],
(lbl_15,__text) = __statement(`$$label`("lbl_15"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_false"),
char_data("lbl_9"),char_data("_false")),__break()),
(lbl_15,extended__domain) = {},
(lbl_15,extended__iteration) = [],
(lbl_15,inner__Constraints) = {},
(lbl_15,inner__Variables) = [],
(lbl_15,iteration__Domain) = {},
(lbl_15,local__Parameters) = {},
(lbl_15,original__Read) = {},
(lbl_15,original__Write) = {},
(lbl_15,read__Ref) = {},
(lbl_15,write__Ref) = {},
(lbl_16,__board) = table(),
(lbl_16,__iteration) = [],
(lbl_16,__kind) = __return,
(lbl_16,__loops) = [],
(lbl_16,__position) = [counterex1c,counterex1c],
(lbl_16,__process) = counterex1c,
(lbl_16,__schedule) = [],
(lbl_16,__text) = __statement(`$$label`("lbl_16"),
__inside(char_data("counterex1c"),char_data("counterex1c")),
__return()),
(lbl_16,extended__domain) = {},
(lbl_16,extended__iteration) = [],
(lbl_16,inner__Constraints) = {},
(lbl_16,inner__Variables) = [],
(lbl_16,iteration__Domain) = {},
(lbl_16,local__Parameters) = {},
(lbl_16,original__Read) = {},
(lbl_16,original__Write) = {},
(lbl_16,read__Ref) = {},
(lbl_16,write__Ref) = {},
(lbl_4,__board) = table(),
(lbl_4,__iteration) = [1/0,1/0],
(lbl_4,__kind) = _post_incr,
(lbl_4,__loops) = [lbl_1,lbl_3],
(lbl_4,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_true],
(lbl_4,__process) = counterex1c,
(lbl_4,__schedule) = [],
(lbl_4,__text) = __statement(`$$label`("lbl_4"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_true")),
__expression(__operator(char_data("_post_incr")),
__expression(__identifier(char_data("y"))))),
(lbl_4,extended__domain) = {},
(lbl_4,extended__iteration) = [],
(lbl_4,inner__Constraints) = {},
(lbl_4,inner__Variables) = [],
(lbl_4,iteration__Domain) = {},
(lbl_4,local__Parameters) = {},
(lbl_4,original__Read) = {y()},
(lbl_4,original__Write) = {y()},
(lbl_4,read__Ref) = {y()},
(lbl_4,write__Ref) = {y()},
(lbl_7,__board) = table(),
(lbl_7,__iteration) = [1/0,1/0,1/0],
(lbl_7,__kind) = __assignment,
(lbl_7,__loops) = [lbl_1,lbl_3,lbl_5],
(lbl_7,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_true,lbl_5,
_true],
(lbl_7,__process) = counterex1c,
(lbl_7,__schedule) = [],
(lbl_7,__text) = __statement(`$$label`("lbl_7"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_true"),
char_data("lbl_5"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("b"))),
__expression(__constant(char_data("cst__6"))))),
(lbl_7,extended__domain) = {},
(lbl_7,extended__iteration) = [],
(lbl_7,inner__Constraints) = {},
(lbl_7,inner__Variables) = [],
(lbl_7,iteration__Domain) = {},
(lbl_7,local__Parameters) = {},
(lbl_7,original__Read) = {},
(lbl_7,original__Write) = {b()},
(lbl_7,read__Ref) = {},
(lbl_7,write__Ref) = {b()},
(lbl_8,__board) = table(),
(lbl_8,__iteration) = [1/0,1/0,1/0],
(lbl_8,__kind) = __nop,
(lbl_8,__loops) = [lbl_1,lbl_3,lbl_5],
(lbl_8,__position) = [counterex1c,counterex1c,lbl_1,lbl_3,_true,lbl_5,
_false],
(lbl_8,__process) = counterex1c,
(lbl_8,__schedule) = [],
(lbl_8,__text) = __statement(`$$label`("lbl_8"),
__inside(char_data("counterex1c"),char_data("counterex1c"),
char_data("lbl_1"),char_data("lbl_3"),char_data("_true"),
char_data("lbl_5"),char_data("_false")),__nop()),
(lbl_8,extended__domain) = {},
(lbl_8,extended__iteration) = [],
(lbl_8,inner__Constraints) = {},
(lbl_8,inner__Variables) = [],
(lbl_8,iteration__Domain) = {},
(lbl_8,local__Parameters) = {},
(lbl_8,original__Read) = {},
(lbl_8,original__Write) = {},
(lbl_8,read__Ref) = {},
(lbl_8,write__Ref) = {}),[n],[lbl_4,lbl_7,lbl_8,lbl_10,lbl_12,lbl_13,
lbl_14,lbl_15,lbl_16],NIL,NIL,NIL,NIL,0]));
