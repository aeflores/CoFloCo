FrontEnd version J.3
qualif heapsort
inside declaration [heapsort,nondet]
inside declaration [heapsort,heapsort]
inside declaration [heapsort,heapsort,i]
inside declaration [heapsort,heapsort,l]
inside declaration [heapsort,heapsort,r]
inside declaration [heapsort,heapsort,max]
inside declaration [heapsort,cst__5]
inside declaration [heapsort,cst__4]
inside declaration [heapsort,cst__1]
table([heapsort,cst__1] = __declaration(__inside(char_data("heapsort")),
  __constant(`$$value`("1"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [heapsort,cst__4] = __declaration(__inside(char_data("heapsort")),
     __constant(`$$value`("0"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [heapsort,cst__5] = __declaration(__inside(char_data("heapsort")),
     __constant(`$$value`("2"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [heapsort,heapsort] = __declaration(__inside(char_data("heapsort")),
     __identifier(char_data("heapsort")),
     __function(__identifier(char_data("heapsort")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("size")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [heapsort,heapsort,i] = __declaration(__inside(char_data("heapsort"),
     char_data("heapsort")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [heapsort,heapsort,init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("heapsort"),char_data("heapsort")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__1"))))),
   [heapsort,heapsort,l] = __declaration(__inside(char_data("heapsort"),
     char_data("heapsort")),__identifier(char_data("l")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [heapsort,heapsort,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__gt")),
         __expression(__identifier(char_data("size"))),
         __expression(__constant(char_data("cst__4")))),
       __expression(__operator(char_data("__ge")),
         __expression(__identifier(char_data("i"))),
         __expression(__constant(char_data("cst__1")))))),
   [heapsort,heapsort,lbl_3,lbl_16] = __if(`$$label`("lbl_16"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("r"))),
       __expression(__identifier(char_data("size"))))),
   [heapsort,heapsort,lbl_3,lbl_16,_false,
   lbl_23] = __statement(`$$label`("lbl_23"),
       __inside(char_data("heapsort"),char_data("heapsort"),
       char_data("lbl_3"),char_data("lbl_16"),char_data("_false")),
 __nop()),
 [heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17] = __if(`$$label`("lbl_17"),
   __expression(__operator(char_data("__disjunction")),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("r"))),
       __expression(__constant(char_data("cst__1")))),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("r"))),
       __expression(__identifier(char_data("size")))))),
 [heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17,_false,
 lbl_19] = __statement(`$$label`("lbl_19"),__inside(char_data("heapsort"),
     char_data("heapsort"),char_data("lbl_3"),char_data("lbl_16"),
     char_data("_true"),char_data("lbl_17"),char_data("_false")),__nop()),
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17,_true,
lbl_18] = __statement(`$$label`("lbl_18"),__inside(char_data("heapsort"),
   char_data("heapsort"),char_data("lbl_3"),char_data("lbl_16"),
   char_data("_true"),char_data("lbl_17"),char_data("_true")),__return()),
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20] = __if(`$$label`("lbl_20"),
__expression(__operator(char_data("__gt")),
 __expression(__operator(char_data("__funcall")),
   __expression(__identifier(char_data("nondet")))),
 __expression(__constant(char_data("cst__4"))))),
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20,_false,
lbl_22] = __statement(`$$label`("lbl_22"),__inside(char_data("heapsort"),
 char_data("heapsort"),char_data("lbl_3"),char_data("lbl_16"),
 char_data("_true"),char_data("lbl_20"),char_data("_false")),__nop()),
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20,_true,
lbl_21] = __statement(`$$label`("lbl_21"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_16"),
char_data("_true"),char_data("lbl_20"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("max"))),
__expression(__identifier(char_data("r"))))),
[heapsort,heapsort,lbl_3,lbl_24] = __statement(`$$label`("lbl_24"),
__inside(char_data("heapsort"),char_data("heapsort"),char_data("lbl_3")),
__nop()),
[heapsort,heapsort,lbl_3,lbl_25] = __if(`$$label`("lbl_25"),
__expression(__operator(char_data("__ne")),
__expression(__identifier(char_data("i"))),
__expression(__identifier(char_data("max"))))),
[heapsort,heapsort,lbl_3,lbl_25,_false,
lbl_33] = __statement(`$$label`("lbl_33"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_false")),__return()),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_26] = __if(`$$label`("lbl_26"),
__expression(__operator(char_data("__disjunction")),
__expression(__operator(char_data("__lt")),
__expression(__identifier(char_data("i"))),
__expression(__constant(char_data("cst__1")))),
__expression(__operator(char_data("__gt")),
__expression(__identifier(char_data("i"))),
__expression(__identifier(char_data("size")))))),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_26,_false,
lbl_28] = __statement(`$$label`("lbl_28"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_true"),char_data("lbl_26"),char_data("_false")),__nop()),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_26,_true,
lbl_27] = __statement(`$$label`("lbl_27"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_true"),char_data("lbl_26"),char_data("_true")),__return()),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29] = __if(`$$label`("lbl_29"),
__expression(__operator(char_data("__disjunction")),
__expression(__operator(char_data("__lt")),
__expression(__identifier(char_data("max"))),
__expression(__constant(char_data("cst__1")))),
__expression(__operator(char_data("__gt")),
__expression(__identifier(char_data("max"))),
__expression(__identifier(char_data("size")))))),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29,_false,
lbl_31] = __statement(`$$label`("lbl_31"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_true"),char_data("lbl_29"),char_data("_false")),__nop()),
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29,_true,
lbl_30] = __statement(`$$label`("lbl_30"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_true"),char_data("lbl_29"),char_data("_true")),__return()),
[heapsort,heapsort,lbl_3,lbl_25,_true,
lbl_32] = __statement(`$$label`("lbl_32"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_25"),
char_data("_true")),__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("i"))),
__expression(__identifier(char_data("max"))))),
[heapsort,heapsort,lbl_3,lbl_6] = __statement(`$$label`("lbl_6"),
__inside(char_data("heapsort"),char_data("heapsort"),char_data("lbl_3")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("l"))),
__expression(__operator(char_data("__multiplication")),
__expression(__constant(char_data("cst__5"))),
__expression(__identifier(char_data("i")))))),
[heapsort,heapsort,lbl_3,lbl_7] = __statement(`$$label`("lbl_7"),
__inside(char_data("heapsort"),char_data("heapsort"),char_data("lbl_3")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("r"))),
__expression(__operator(char_data("__addition")),
__expression(__operator(char_data("__multiplication")),
__expression(__constant(char_data("cst__5"))),
__expression(__identifier(char_data("i")))),
__expression(__constant(char_data("cst__1")))))),
[heapsort,heapsort,lbl_3,lbl_8] = __if(`$$label`("lbl_8"),
__expression(__operator(char_data("__le")),
__expression(__identifier(char_data("l"))),
__expression(__identifier(char_data("size"))))),
[heapsort,heapsort,lbl_3,lbl_8,_false,
lbl_15] = __statement(`$$label`("lbl_15"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_8"),
char_data("_false")),__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("max"))),
__expression(__identifier(char_data("i"))))),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12] = __if(`$$label`("lbl_12"),
__expression(__operator(char_data("__gt")),
__expression(__operator(char_data("__funcall")),
__expression(__identifier(char_data("nondet")))),
__expression(__constant(char_data("cst__4"))))),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_false,
lbl_14] = __statement(`$$label`("lbl_14"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_8"),
char_data("_true"),char_data("lbl_12"),char_data("_false")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("max"))),
__expression(__identifier(char_data("i"))))),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_true,
lbl_13] = __statement(`$$label`("lbl_13"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_8"),
char_data("_true"),char_data("lbl_12"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("max"))),
__expression(__identifier(char_data("l"))))),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9] = __if(`$$label`("lbl_9"),
__expression(__operator(char_data("__disjunction")),
__expression(__operator(char_data("__lt")),
__expression(__identifier(char_data("l"))),
__expression(__constant(char_data("cst__1")))),
__expression(__operator(char_data("__gt")),
__expression(__identifier(char_data("l"))),
__expression(__identifier(char_data("size")))))),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9,_false,
lbl_11] = __statement(`$$label`("lbl_11"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_8"),
char_data("_true"),char_data("lbl_9"),char_data("_false")),__nop()),
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9,_true,
lbl_10] = __statement(`$$label`("lbl_10"),__inside(char_data("heapsort"),
char_data("heapsort"),char_data("lbl_3"),char_data("lbl_8"),
char_data("_true"),char_data("lbl_9"),char_data("_true")),__return()),
[heapsort,heapsort,lbl_34] = __statement(`$$label`("lbl_34"),
__inside(char_data("heapsort"),char_data("heapsort")),__return()),
[heapsort,heapsort,max] = __declaration(__inside(char_data("heapsort"),
char_data("heapsort")),__identifier(char_data("max")),
__basic(`$$size`("32"),char_data("__integer"))),
[heapsort,heapsort,r] = __declaration(__inside(char_data("heapsort"),
char_data("heapsort")),__identifier(char_data("r")),__basic(`$$size`("32"),
char_data("__integer"))),
[heapsort,nondet] = __declaration(__inside(char_data("heapsort")),
__identifier(char_data("nondet")),
__function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
char_data("__integer")))))
table([heapsort,heapsort] = [[heapsort,nondet],[heapsort,heapsort],
[heapsort,cst__5],[heapsort,cst__4],[heapsort,cst__1],[heapsort,heapsort],
[heapsort,heapsort,i],[heapsort,heapsort,l],[heapsort,heapsort,r],
[heapsort,heapsort,max],[heapsort,heapsort,init_2],[heapsort,heapsort,
lbl_3],[heapsort,heapsort,lbl_3,lbl_6],[heapsort,heapsort,lbl_3,lbl_7],
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9],[heapsort,heapsort,lbl_3,
lbl_8],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9,_true,lbl_10],[heapsort,
heapsort,lbl_3,lbl_8,_true,lbl_9,_false,lbl_11],[heapsort,heapsort,lbl_3,
lbl_8,_true,lbl_12],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_true,
lbl_13],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_false,lbl_14],
[heapsort,heapsort,lbl_3,lbl_8,_false,lbl_15],[heapsort,heapsort,lbl_3,
lbl_16,_true,lbl_17],[heapsort,heapsort,lbl_3,lbl_16],[heapsort,heapsort,
lbl_3,lbl_16,_true,lbl_17,_true,lbl_18],[heapsort,heapsort,lbl_3,lbl_16,
_true,lbl_17,_false,lbl_19],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20],
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20,_true,lbl_21],[heapsort,
heapsort,lbl_3,lbl_16,_true,lbl_20,_false,lbl_22],[heapsort,heapsort,lbl_3,
lbl_16,_false,lbl_23],[heapsort,heapsort,lbl_3,lbl_24],[heapsort,heapsort,
lbl_3,lbl_25,_true,lbl_26],[heapsort,heapsort,lbl_3,lbl_25],[heapsort,
heapsort,lbl_3,lbl_25,_true,lbl_26,_true,lbl_27],[heapsort,heapsort,lbl_3,
lbl_25,_true,lbl_26,_false,lbl_28],[heapsort,heapsort,lbl_3,lbl_25,_true,
lbl_29],[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29,_true,lbl_30],
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29,_false,lbl_31],[heapsort,
heapsort,lbl_3,lbl_25,_true,lbl_32],[heapsort,heapsort,lbl_3,lbl_25,_false,
lbl_33],[heapsort,heapsort,lbl_34]])
[[heapsort,heapsort,i],[heapsort,heapsort,l],[heapsort,heapsort,r],
[heapsort,heapsort,max],[heapsort,heapsort,init_2],[heapsort,heapsort,
lbl_3,lbl_6],[heapsort,heapsort,lbl_3,lbl_7],[heapsort,heapsort,lbl_3,
lbl_8,_true,lbl_9,_true,lbl_10],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_9,
_false,lbl_11],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_true,lbl_13],
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_false,lbl_14],[heapsort,
heapsort,lbl_3,lbl_8,_false,lbl_15],[heapsort,heapsort,lbl_3,lbl_16,_true,
lbl_17,_true,lbl_18],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17,_false,
lbl_19],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20,_true,lbl_21],
[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20,_false,lbl_22],[heapsort,
heapsort,lbl_3,lbl_16,_false,lbl_23],[heapsort,heapsort,lbl_3,lbl_24],
[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_26,_true,lbl_27],[heapsort,
heapsort,lbl_3,lbl_25,_true,lbl_26,_false,lbl_28],[heapsort,heapsort,lbl_3,
lbl_25,_true,lbl_29,_true,lbl_30],[heapsort,heapsort,lbl_3,lbl_25,_true,
lbl_29,_false,lbl_31],[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_32],
[heapsort,heapsort,lbl_3,lbl_25,_false,lbl_33],[heapsort,heapsort,lbl_34]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of size is 0
body [[heapsort,nondet],[heapsort,heapsort],[heapsort,cst__5],[heapsort,
cst__4],[heapsort,cst__1],[heapsort,heapsort],[heapsort,heapsort,i],
[heapsort,heapsort,l],[heapsort,heapsort,r],[heapsort,heapsort,max],
[heapsort,heapsort,init_2],[heapsort,heapsort,lbl_3],[heapsort,heapsort,
lbl_3,lbl_6],[heapsort,heapsort,lbl_3,lbl_7],[heapsort,heapsort,lbl_3,
lbl_8,_true,lbl_9],[heapsort,heapsort,lbl_3,lbl_8],[heapsort,heapsort,
lbl_3,lbl_8,_true,lbl_9,_true,lbl_10],[heapsort,heapsort,lbl_3,lbl_8,_true,
lbl_9,_false,lbl_11],[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12],
[heapsort,heapsort,lbl_3,lbl_8,_true,lbl_12,_true,lbl_13],[heapsort,
heapsort,lbl_3,lbl_8,_true,lbl_12,_false,lbl_14],[heapsort,heapsort,lbl_3,
lbl_8,_false,lbl_15],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17],
[heapsort,heapsort,lbl_3,lbl_16],[heapsort,heapsort,lbl_3,lbl_16,_true,
lbl_17,_true,lbl_18],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_17,_false,
lbl_19],[heapsort,heapsort,lbl_3,lbl_16,_true,lbl_20],[heapsort,heapsort,
lbl_3,lbl_16,_true,lbl_20,_true,lbl_21],[heapsort,heapsort,lbl_3,lbl_16,
_true,lbl_20,_false,lbl_22],[heapsort,heapsort,lbl_3,lbl_16,_false,lbl_23],
[heapsort,heapsort,lbl_3,lbl_24],[heapsort,heapsort,lbl_3,lbl_25,_true,
lbl_26],[heapsort,heapsort,lbl_3,lbl_25],[heapsort,heapsort,lbl_3,lbl_25,
_true,lbl_26,_true,lbl_27],[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_26,
_false,lbl_28],[heapsort,heapsort,lbl_3,lbl_25,_true,lbl_29],[heapsort,
heapsort,lbl_3,lbl_25,_true,lbl_29,_true,lbl_30],[heapsort,heapsort,lbl_3,
lbl_25,_true,lbl_29,_false,lbl_31],[heapsort,heapsort,lbl_3,lbl_25,_true,
lbl_32],[heapsort,heapsort,lbl_3,lbl_25,_false,lbl_33],[heapsort,heapsort,
lbl_34]]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("l")))
[l(),[],{},{}]
collect subscripts __expression(__identifier(char_data("r")))
[r(),[],{},{}]
lbl_9 __si
 counter 1/0 iteration domain {}

lbl_8 __si
 counter 1/0 iteration domain {}

lbl_12 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("max")))
[max(),[],{},{}]
collect subscripts __expression(__identifier(char_data("max")))
[max(),[],{},{}]
collect subscripts __expression(__identifier(char_data("max")))
[max(),[],{},{}]
lbl_17 __si
 counter 1/0 iteration domain {}

lbl_16 __si
 counter 1/0 iteration domain {}

lbl_20 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("max")))
[max(),[],{},{}]
lbl_26 __si
 counter 1/0 iteration domain {}

lbl_25 __si
 counter 1/0 iteration domain {}

lbl_29 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining cst__1
 is a constant
examining cst__4
 is a constant
examining cst__5
 is a constant
examining heapsort
examining i
 has definitions
examining l
 has definitions
examining max
 has definitions
examining nondet
examining r
 has definitions
examining size
while remnants __conjunction(__gt(size,0),__ge(i,1))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified ( (0 >= size) || (0 > 0) )
to be simplified ( ( (size > 0) && (0 >= 0) ) && (2 > size) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (0 > 1)
 || (2 > size) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( (size >= 3)
 && ( (0 > 2) || (3 > size) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( (3 > size)
 && (0 = 0) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( (3 > size)
 && ( (0 != 0) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( (3 > size)
 && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 > 0) || (1 > size)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( (3 > size)
 && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 >= 0) && (size >= 1)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && (0 = 0) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( (0 != 0) && ( (0 > 0) || (1 > size) )
 ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 >= 0) && (size >= 1) ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && (0 = 2) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( (0 != 2) && ( (0 > 0) || (1 > size) )
 ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( ( (0 != 2) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 > 2) || (3 > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (0 >= 0) ) && (2 > size) ) && ( ( (size >= 3)
 && ( (2 >= 0) && (size >= 3) ) ) && ( ( (0 != 2) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (2 >= 0) && (size >= 3) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (size >= 3) && ( (0 > 2) || (3 > size) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && (0 = 1) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( (0 != 1) && ( (0 > 0) || (1 > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( ( (0 != 1) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 > 1) || (2 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( ( (0 != 1) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (1 >= 0) && (size >= 2) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && (0 = 1)
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
(0 != 1) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 1) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 > 1) || (2 > size) ) ) )
 )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 1) && ( (0 >= 0) && (size >= 1) ) ) && ( (1 >= 0) && (size >= 2) ) )
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && (0 = 2)
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
(0 != 2) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 2) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 > 2) || (3 > size) ) ) )
 )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 2) && ( (0 >= 0) && (size >= 1) ) ) && ( (2 >= 0) && (size >= 3) ) )
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (size >= 3) && ( (0 > 2) || (3 > size) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && (0 = 0) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( (0 != 0) && ( (0 > 0) || (1 > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( (3 > size) && ( ( (0 != 0) && ( (0 >= 0) && (size >= 1)
 ) ) && ( (0 >= 0) && (size >= 1) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && (0 = 0)
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
(0 != 0) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 0) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 > 0) || (1 > size) ) ) )
 )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 0) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 >= 0) && (size >= 1) ) )
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && (0 = 2)
 ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
(0 != 2) && ( (0 > 0) || (1 > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 2) && ( (0 >= 0) && (size >= 1) ) ) && ( (0 > 2) || (3 > size) ) ) )
 )
to be simplified ( ( ( ( (size > 0) && (0 >= 0) ) && (size >= 2) ) && ( (1 >= 0)
 && (size >= 2) ) ) && ( ( (size >= 3) && ( (2 >= 0) && (size >= 3) ) ) && ( 
( (0 != 2) && ( (0 >= 0) && (size >= 1) ) ) && ( (2 >= 0) && (size >= 3) ) )
 ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i != max)
to be simplified (i = max)
to be simplified ( (i != max) && ( (1 > i) || (i > size) ) )
to be simplified ( (i != max) && ( (i >= 1) && (size >= i) ) )
to be simplified ( ( (i != max) && ( (i >= 1) && (size >= i) ) ) && ( (1 > max)
 || (max > size) ) )
to be simplified ( ( (i != max) && ( (i >= 1) && (size >= i) ) ) && ( (max >= 1)
 && (size >= max) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (size >= r)
to be simplified (r > size)
to be simplified (size >= r)
to be simplified (r > size)
to be simplified ( (size >= r) && ( (1 > r) || (r > size) ) )
to be simplified ( (size >= r) && ( (r >= 1) && (size >= r) ) )
to be simplified ( (size >= r) && ( (r >= 1) && (size >= r) ) )
to be simplified ( (size >= r) && ( (r >= 1) && (size >= r) ) )
to be simplified ( (r > size) && (i = max) )
to be simplified ( (r > size) && ( (i != max) && ( (1 > i) || (i > size) ) )
 )
to be simplified ( (r > size) && ( ( (i != max) && ( (i >= 1) && (size >= i)
 ) ) && ( (1 > max) || (max > size) ) ) )
to be simplified ( (r > size) && ( ( (i != max) && ( (i >= 1) && (size >= i)
 ) ) && ( (max >= 1) && (size >= max) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && (i = max)
 )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( (i != max)
 && ( (1 > i) || (i > size) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( ( (i != max)
 && ( (i >= 1) && (size >= i) ) ) && ( (1 > max) || (max > size) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( ( (i != max)
 && ( (i >= 1) && (size >= i) ) ) && ( (max >= 1) && (size >= max) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && (i = r)
 )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( (i != r)
 && ( (1 > i) || (i > size) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( ( (i != r)
 && ( (i >= 1) && (size >= i) ) ) && ( (1 > r) || (r > size) ) ) )
to be simplified ( ( (size >= r) && ( (r >= 1) && (size >= r) ) ) && ( ( (i != r)
 && ( (i >= 1) && (size >= i) ) ) && ( (r >= 1) && (size >= r) ) ) )
to be simplified ( (1 > r) || (r > size) )
to be simplified ( (r >= 1) && (size >= r) )
to be simplified ( (1 > r) || (r > size) )
to be simplified ( (r >= 1) && (size >= r) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i != max)
to be simplified (i = max)
to be simplified (i != max)
to be simplified (i = max)
to be simplified ( (1 > i) || (i > size) )
to be simplified ( (i >= 1) && (size >= i) )
to be simplified ( (1 > i) || (i > size) )
to be simplified ( (i >= 1) && (size >= i) )
to be simplified ( (1 > max) || (max > size) )
to be simplified ( (max >= 1) && (size >= max) )
to be simplified ( (1 > max) || (max > size) )
to be simplified ( (max >= 1) && (size >= max) )
to be simplified ( (size > 0) && (i >= 1) )
to be simplified ( (0 >= size) || (1 > i) )
to be simplified ( (0 >= size) || (1 > i) )
to be simplified ( (size > 0) && (i >= 1) )
to be simplified ( (size > 0) && (i >= 1) )
to be simplified ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) )
to be simplified ( ( (size > 0) && (i >= 1) ) && (2*i > size) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (1 > 2*i)
 || (2*i > size) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) )
to be simplified (size >= l)
to be simplified (l > size)
to be simplified (size >= l)
to be simplified (l > size)
to be simplified (l > size)
to be simplified ( (1 > l) || (l > size) )
to be simplified ( (l >= 1) && (size >= l) )
to be simplified ( (1 > l) || (l > size) )
to be simplified ( (l >= 1) && (size >= l) )
to be simplified ( (l >= 1) && (size >= l) )
to be simplified ( (l >= 1) && (size >= l) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (0 >= size) || (1 > i) )
to be simplified ( ( (size > 0) && (i >= 1) ) && (2*i > size) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (1 > 2*i)
 || (2*i > size) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( (size >= 2*i+1)
 && ( (0 > 2*i) || (2*i+1 > size) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( (2*i+1 > size)
 && (0 = 0) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( (2*i+1 > size)
 && ( (0 != 0) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( (2*i+1 > size)
 && ( ( (0 != 0) && ( (i >= 1) && (size >= i) ) ) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( (2*i+1 > size)
 && ( ( (0 != 0) && ( (i >= 1) && (size >= i) ) ) && ( (i >= 1) && (size >= i)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && (0 = 0) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( (0 != 0) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( ( (0 != 0) && ( (i >= 1) && (size >= i)
 ) ) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( ( (0 != 0) && ( (i >= 1) && (size >= i)
 ) ) && ( (i >= 1) && (size >= i) ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && (0 = i+1) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( (0 != i+1) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i)
 ) ) && ( (0 > 2*i) || (2*i+1 > size) ) ) ) )
to be simplified ( ( ( (size > 0) && (i >= 1) ) && (2*i > size) ) && ( ( (size >= 2*i+1)
 && ( (2*i >= 0) && (size >= 2*i+1) ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i)
 ) ) && ( (2*i >= 0) && (size >= 2*i+1) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (size >= 2*i+1) && ( (0 > 2*i) || (2*i+1 > size) )
 ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && (0 = i) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( (0 != i) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( ( (0 != i) && ( (i >= 1) && (size >= i)
 ) ) && ( (1 > 2*i) || (2*i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( ( (0 != i) && ( (i >= 1) && (size >= i)
 ) ) && ( (2*i >= 1) && (size >= 2*i) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && (0 = i) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( (0 != i) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i) && ( (i >= 1) && (size >= i) ) ) && ( (1 > 2*i) || (2*i > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i) && ( (i >= 1) && (size >= i) ) ) && ( (2*i >= 1) && (size >= 2*i)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && (0 = i+1) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( (0 != i+1) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i) ) ) && ( (0 > 2*i) || (2*i+1 > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i) ) ) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (size >= 2*i+1) && ( (0 > 2*i) || (2*i+1 > size) )
 ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && (0 = 0) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( (0 != 0) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( ( (0 != 0) && ( (i >= 1) && (size >= i)
 ) ) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( (2*i+1 > size) && ( ( (0 != 0) && ( (i >= 1) && (size >= i)
 ) ) && ( (i >= 1) && (size >= i) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && (0 = 0) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( (0 != 0) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != 0) && ( (i >= 1) && (size >= i) ) ) && ( (1 > i) || (i > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != 0) && ( (i >= 1) && (size >= i) ) ) && ( (i >= 1) && (size >= i)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && (0 = i+1) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( (0 != i+1) && ( (1 > i) || (i > size) ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i) ) ) && ( (0 > 2*i) || (2*i+1 > size)
 ) ) ) )
to be simplified ( ( ( ( (size > 0) && (i >= 1) ) && (size >= 2*i) ) && ( (2*i >= 1)
 && (size >= 2*i) ) ) && ( ( (size >= 2*i+1) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) && ( ( (0 != i+1) && ( (i >= 1) && (size >= i) ) ) && ( (2*i >= 0) && (size >= 2*i+1)
 ) ) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
