FrontEnd version J.3
qualif terminate
inside declaration [terminate,terminate]
inside declaration [terminate,terminate,ell]
inside declaration [terminate,cst__5]
inside declaration [terminate,cst__2]
table([terminate,cst__2] = __declaration(__inside(char_data("terminate")),
  __constant(`$$value`("100"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [terminate,cst__5] = __declaration(__inside(char_data("terminate")),
     __constant(`$$value`("1"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [terminate,terminate] = __declaration(__inside(char_data("terminate")),
     __identifier(char_data("terminate")),
     __function(__identifier(char_data("terminate")),
       __basic(char_data("void")),__identifier(char_data("i")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("j")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("k")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [terminate,terminate,
     ell] = __declaration(__inside(char_data("terminate"),
     char_data("terminate")),__identifier(char_data("ell")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [terminate,terminate,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("i"))),
         __expression(__constant(char_data("cst__2")))),
       __expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("k")))))),
   [terminate,terminate,lbl_1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("terminate"),char_data("terminate"),
       char_data("lbl_1")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("ell"))),
       __expression(__identifier(char_data("i"))))),
   [terminate,terminate,lbl_1,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("terminate"),char_data("terminate"),
       char_data("lbl_1")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("j"))))),
   [terminate,terminate,lbl_1,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("terminate"),char_data("terminate"),
       char_data("lbl_1")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("ell"))),
         __expression(__constant(char_data("cst__5")))))),
   [terminate,terminate,lbl_1,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("terminate"),char_data("terminate"),
       char_data("lbl_1")),
       __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("k"))))))
table([terminate,terminate] = [[terminate,terminate],[terminate,cst__5],
  [terminate,cst__2],[terminate,terminate],[terminate,terminate,ell],
  [terminate,terminate,lbl_1],[terminate,terminate,lbl_1,lbl_3],[terminate,
    terminate,lbl_1,lbl_4],[terminate,terminate,lbl_1,lbl_6],[terminate,
    terminate,lbl_1,lbl_7]])
[[terminate,terminate,ell],[terminate,terminate,lbl_1,lbl_3],[terminate,
    terminate,lbl_1,lbl_4],[terminate,terminate,lbl_1,lbl_6],[terminate,
    terminate,lbl_1,lbl_7]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of i is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of j is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of k is 0
body [[terminate,terminate],[terminate,cst__5],[terminate,cst__2],
  [terminate,terminate],[terminate,terminate,ell],[terminate,terminate,
    lbl_1],[terminate,terminate,lbl_1,lbl_3],[terminate,terminate,lbl_1,
    lbl_4],[terminate,terminate,lbl_1,lbl_6],[terminate,terminate,lbl_1,
    lbl_7]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("ell")))
[ell(),[],{},{}]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("k")))
[k(),[],{},{}]
examining cst__2
 is a constant
examining cst__5
 is a constant
examining ell
 has definitions
examining i
examining j
examining k
examining terminate
while remnants __conjunction(__le(i,100),__le(j,k))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (100 >= i) && (k >= j) )
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (i > 100) || (j > k) )
to be simplified ( (100 >= i) && (k >= j) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
