FrontEnd version J.3
qualif while2
inside declaration [while2,while2]
inside declaration [while2,while2,i]
inside declaration [while2,while2,j]
inside declaration [while2,cst__3]
table([while2,cst__3] = __declaration(__inside(char_data("while2")),
  __constant(`$$value`("0"),char_data("cst__3")),
  __basic(char_data("__integer"))),
   [while2,while2] = __declaration(__inside(char_data("while2")),
     __identifier(char_data("while2")),
     __function(__identifier(char_data("while2")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("N")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [while2,while2,i] = __declaration(__inside(char_data("while2"),
     char_data("while2")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [while2,while2,j] = __declaration(__inside(char_data("while2"),
     char_data("while2")),__identifier(char_data("j")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [while2,while2,lbl_1] = __statement(`$$label`("lbl_1"),
     __inside(char_data("while2"),char_data("while2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("N"))))),
   [while2,while2,lbl_2] = __while(`$$label`("lbl_2"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__3"))))),
   [while2,while2,lbl_2,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("while2"),char_data("while2"),char_data("lbl_2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("N"))))),
   [while2,while2,lbl_2,lbl_5] = __while(`$$label`("lbl_5"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("j"))),
       __expression(__constant(char_data("cst__3"))))),
   [while2,while2,lbl_2,lbl_5,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("while2"),char_data("while2"),char_data("lbl_2"),
       char_data("lbl_5")),
       __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("j"))))),
   [while2,while2,lbl_2,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("while2"),char_data("while2"),char_data("lbl_2")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("i"))))),
   [while2,while2,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("while2"),char_data("while2")),__return()))
table([while2,while2] = [[while2,while2],[while2,cst__3],[while2,while2],
[while2,while2,i],[while2,while2,j],[while2,while2,lbl_1],[while2,while2,
  lbl_2],[while2,while2,lbl_2,lbl_4],[while2,while2,lbl_2,lbl_5],[while2,
  while2,lbl_2,lbl_5,lbl_6],[while2,while2,lbl_2,lbl_7],[while2,while2,
  lbl_8]])
[[while2,while2,i],[while2,while2,j],[while2,while2,lbl_1],[while2,while2,
  lbl_2,lbl_4],[while2,while2,lbl_2,lbl_5,lbl_6],[while2,while2,lbl_2,
lbl_7],[while2,while2,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of N is 0
body [[while2,while2],[while2,cst__3],[while2,while2],[while2,while2,i],
[while2,while2,j],[while2,while2,lbl_1],[while2,while2,lbl_2],[while2,
  while2,lbl_2,lbl_4],[while2,while2,lbl_2,lbl_5],[while2,while2,lbl_2,
  lbl_5,lbl_6],[while2,while2,lbl_2,lbl_7],[while2,while2,lbl_8]]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
lbl_2 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
lbl_5 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining N
examining cst__3
 is a constant
examining i
 has definitions
examining j
 has definitions
examining while2
while remnants __gt(i,0)while remnants __gt(j,0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= N)
to be simplified (N > 0)
to be simplified ( (N > 0) && (0 >= N) )
to be simplified (N > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i > 0)
to be simplified (0 >= i)
to be simplified (0 >= i)
to be simplified (i > 0)
to be simplified (i > 0)
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified (0 >= j)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified (j > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= i)
to be simplified (i > 0)
to be simplified ( (i > 0) && (0 >= N) )
to be simplified ( (i > 0) && (N > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified TRUE
to be simplified TRUE
