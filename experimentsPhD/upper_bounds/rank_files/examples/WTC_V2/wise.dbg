FrontEnd version J.3
qualif wise
inside declaration [wise,wise]
inside declaration [wise,cst__6]
inside declaration [wise,cst__2]
table([wise,cst__2] = __declaration(__inside(char_data("wise")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [wise,cst__6] = __declaration(__inside(char_data("wise")),
     __constant(`$$value`("2"),char_data("cst__6")),
     __basic(char_data("__integer"))),
   [wise,wise] = __declaration(__inside(char_data("wise")),
     __identifier(char_data("wise")),
     __function(__identifier(char_data("wise")),__basic(char_data("void")),
       __identifier(char_data("x")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("y")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [wise,wise,lbl_1] = __if(`$$label`("lbl_1"),
     __expression(__operator(char_data("__disjunction")),
       __expression(__operator(char_data("__lt")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__2")))),
       __expression(__operator(char_data("__lt")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__2")))))),
   [wise,wise,lbl_1,_false,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("wise"),char_data("wise"),char_data("lbl_1"),
       char_data("_false")),__nop()),
 [wise,wise,lbl_1,_true,lbl_3] = __statement(`$$label`("lbl_3"),
   __inside(char_data("wise"),char_data("wise"),char_data("lbl_1"),
     char_data("_true")),__return()),
[wise,wise,lbl_5] = __while(`$$label`("lbl_5"),
 __expression(__operator(char_data("__disjunction")),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__subtraction")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("y")))),
     __expression(__constant(char_data("cst__6")))),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__subtraction")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("x")))),
     __expression(__constant(char_data("cst__6")))))),
[wise,wise,lbl_5,lbl_7] = __if(`$$label`("lbl_7"),
 __expression(__operator(char_data("__lt")),
   __expression(__identifier(char_data("x"))),
   __expression(__identifier(char_data("y"))))),
[wise,wise,lbl_5,lbl_7,_false,lbl_9] = __statement(`$$label`("lbl_9"),
 __inside(char_data("wise"),char_data("wise"),char_data("lbl_5"),
   char_data("lbl_7"),char_data("_false")),
 __expression(__operator(char_data("__incr")),
   __expression(__identifier(char_data("y"))))),
[wise,wise,lbl_5,lbl_7,_true,lbl_8] = __statement(`$$label`("lbl_8"),
 __inside(char_data("wise"),char_data("wise"),char_data("lbl_5"),
   char_data("lbl_7"),char_data("_true")),
 __expression(__operator(char_data("__incr")),
   __expression(__identifier(char_data("x"))))))
table([wise,wise] = [[wise,wise],[wise,cst__6],[wise,cst__2],[wise,wise],
[wise,wise,lbl_1],[wise,wise,lbl_1,_true,lbl_3],[wise,wise,lbl_1,_false,
lbl_4],[wise,wise,lbl_5,lbl_7],[wise,wise,lbl_5],[wise,wise,lbl_5,lbl_7,
_true,lbl_8],[wise,wise,lbl_5,lbl_7,_false,lbl_9]])
[[wise,wise,lbl_1,_true,lbl_3],[wise,wise,lbl_1,_false,lbl_4],[wise,wise,
lbl_5,lbl_7,_true,lbl_8],[wise,wise,lbl_5,lbl_7,_false,lbl_9]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
body [[wise,wise],[wise,cst__6],[wise,cst__2],[wise,wise],[wise,wise,
lbl_1],[wise,wise,lbl_1,_true,lbl_3],[wise,wise,lbl_1,_false,lbl_4],[wise,
wise,lbl_5,lbl_7],[wise,wise,lbl_5],[wise,wise,lbl_5,lbl_7,_true,lbl_8],
[wise,wise,lbl_5,lbl_7,_false,lbl_9]]
lbl_1 __si
 counter 1/0 iteration domain {}

lbl_7 __si
 counter 1/0 iteration domain {}

lbl_5 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__2
 is a constant
examining cst__6
 is a constant
examining wise
examining x
examining y
while remnants __disjunction(__gt(x-y,2),__gt(y-x,2))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified ( (0 > x) || (0 > y) )
to be simplified ( (x >= 0) && (y >= 0) )
to be simplified ( ( (x >= 0) && (y >= 0) ) && ( (y+2 >= x) && (x+2 >= y) ) )
to be simplified ( ( (x >= 0) && (y >= 0) ) && ( ( (x > y+2) || (y > x+2) ) && 
(y > x) ) )
to be simplified ( ( (x >= 0) && (y >= 0) ) && ( ( (x > y+2) || (y > x+2) ) && 
(x >= y) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (0 > x) || (0 > y) )
to be simplified ( (x >= 0) && (y >= 0) )
to be simplified ( (0 > x) || (0 > y) )
to be simplified ( (x >= 0) && (y >= 0) )
to be simplified ( (x > y+2) || (y > x+2) )
to be simplified ( (y+2 >= x) && (x+2 >= y) )
to be simplified ( (x > y+2) || (y > x+2) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (y > x) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (x >= y) )
to be simplified (y > x)
to be simplified (x >= y)
to be simplified (y > x)
to be simplified (x >= y)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (y+2 >= x) && (x+2 >= y) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (y > x) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (x >= y) )
to be simplified TRUE
to be simplified ( (y+2 >= x) && (x+2 >= y) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (y > x) )
to be simplified ( ( (x > y+2) || (y > x+2) ) && (x >= y) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
