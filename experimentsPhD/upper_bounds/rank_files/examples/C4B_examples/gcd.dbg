FrontEnd version J.3
qualif gcd
inside declaration [gcd,gcd]
inside declaration [gcd,cst__2]
table([gcd,cst__2] = __declaration(__inside(char_data("gcd")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [gcd,gcd] = __declaration(__inside(char_data("gcd")),
     __identifier(char_data("gcd")),
       __function(__identifier(char_data("gcd")),
       __basic(char_data("void")),__identifier(char_data("x")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("y")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [gcd,gcd,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__gt")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__2")))),
       __expression(__operator(char_data("__gt")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__2")))))),
   [gcd,gcd,lbl_1,lbl_3] = __if(`$$label`("lbl_3"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("y"))))),
   [gcd,gcd,lbl_1,lbl_3,_false,lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("gcd"),char_data("gcd"),char_data("lbl_1"),
       char_data("lbl_3"),char_data("_false")),
     __expression(__operator(char_data("_sub_assign")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("x"))))),
   [gcd,gcd,lbl_1,lbl_3,_true,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("gcd"),char_data("gcd"),char_data("lbl_1"),
       char_data("lbl_3"),char_data("_true")),
     __expression(__operator(char_data("_sub_assign")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("y"))))))
table([gcd,gcd] = [[gcd,gcd],[gcd,cst__2],[gcd,gcd],[gcd,gcd,lbl_1,lbl_3],
  [gcd,gcd,lbl_1],[gcd,gcd,lbl_1,lbl_3,_true,lbl_4],[gcd,gcd,lbl_1,lbl_3,
    _false,lbl_5]])
[[gcd,gcd,lbl_1,lbl_3,_true,lbl_4],[gcd,gcd,lbl_1,lbl_3,_false,lbl_5]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
body [[gcd,gcd],[gcd,cst__2],[gcd,gcd],[gcd,gcd,lbl_1,lbl_3],[gcd,gcd,
  lbl_1],[gcd,gcd,lbl_1,lbl_3,_true,lbl_4],[gcd,gcd,lbl_1,lbl_3,_false,
    lbl_5]]
lbl_3 __si
 counter 1/0 iteration domain {}

lbl_1 __while
 counter 1/0
examining cst__2
 is a constant
examining gcd
examining x
examining y
while remnants __conjunction(__gt(x,0),__gt(y,0))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified ( (0 >= x) || (0 >= y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (x > y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (y >= x) )
to be simplified TRUE
to be simplified TRUE
to be simplified ( (x > 0) && (y > 0) )
to be simplified ( (0 >= x) || (0 >= y) )
to be simplified ( (x > 0) && (y > 0) )
to be simplified ( ( (x > 0) && (y > 0) ) && (x > y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (y >= x) )
to be simplified (x > y)
to be simplified (y >= x)
to be simplified (x > y)
to be simplified (y >= x)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (0 >= x) || (0 >= y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (x > y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (y >= x) )
to be simplified TRUE
to be simplified ( (0 >= x) || (0 >= y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (x > y) )
to be simplified ( ( (x > 0) && (y > 0) ) && (y >= x) )
