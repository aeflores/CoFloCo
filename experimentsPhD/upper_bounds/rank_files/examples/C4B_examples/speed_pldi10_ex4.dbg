FrontEnd version J.3
qualif speed_pldi10_ex4
inside declaration [speed_pldi10_ex4,speed_pldi10_ex4]
inside declaration [speed_pldi10_ex4,speed_pldi10_ex4,flag]
inside declaration [speed_pldi10_ex4,cst__4]
inside declaration [speed_pldi10_ex4,cst__1]
table([speed_pldi10_ex4,
cst__1] = __declaration(__inside(char_data("speed_pldi10_ex4")),
  __constant(`$$value`("1"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [speed_pldi10_ex4,
   cst__4] = __declaration(__inside(char_data("speed_pldi10_ex4")),
     __constant(`$$value`("0"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [speed_pldi10_ex4,
   speed_pldi10_ex4] = __declaration(__inside(char_data("speed_pldi10_ex4"))
     ,__identifier(char_data("speed_pldi10_ex4")),
     __function(__identifier(char_data("speed_pldi10_ex4")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [speed_pldi10_ex4,speed_pldi10_ex4,
   flag] = __declaration(__inside(char_data("speed_pldi10_ex4"),
     char_data("speed_pldi10_ex4")),__identifier(char_data("flag")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [speed_pldi10_ex4,speed_pldi10_ex4,
   init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("speed_pldi10_ex4"),char_data("speed_pldi10_ex4")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__1"))))),
   [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__4"))))),
   [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,
   lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("speed_pldi10_ex4"),char_data("speed_pldi10_ex4"),
       char_data("lbl_3")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__4"))))),
   [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,
   lbl_6] = __while(`$$label`("lbl_6"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("n"))),
       __expression(__constant(char_data("cst__4"))))),
   [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6,
   lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("speed_pldi10_ex4"),char_data("speed_pldi10_ex4"),
       char_data("lbl_3"),char_data("lbl_6")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("n"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("n"))),
         __expression(__constant(char_data("cst__1")))))),
   [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6,
   lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("speed_pldi10_ex4"),char_data("speed_pldi10_ex4"),
       char_data("lbl_3"),char_data("lbl_6")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__1"))))))
table([speed_pldi10_ex4,speed_pldi10_ex4] = [[speed_pldi10_ex4,
  speed_pldi10_ex4],[speed_pldi10_ex4,cst__4],[speed_pldi10_ex4,cst__1],
  [speed_pldi10_ex4,speed_pldi10_ex4],[speed_pldi10_ex4,speed_pldi10_ex4,
    flag],[speed_pldi10_ex4,speed_pldi10_ex4,init_2],[speed_pldi10_ex4,
    speed_pldi10_ex4,lbl_3],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,
  lbl_5],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6],[speed_pldi10_ex4,
    speed_pldi10_ex4,lbl_3,lbl_6,lbl_7],[speed_pldi10_ex4,speed_pldi10_ex4,
    lbl_3,lbl_6,lbl_8]])
[[speed_pldi10_ex4,speed_pldi10_ex4,flag],[speed_pldi10_ex4,
    speed_pldi10_ex4,init_2],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,
  lbl_5],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6,lbl_7],
  [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[speed_pldi10_ex4,speed_pldi10_ex4],[speed_pldi10_ex4,cst__4],
  [speed_pldi10_ex4,cst__1],[speed_pldi10_ex4,speed_pldi10_ex4],
  [speed_pldi10_ex4,speed_pldi10_ex4,flag],[speed_pldi10_ex4,
    speed_pldi10_ex4,init_2],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3],
  [speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_5],[speed_pldi10_ex4,
    speed_pldi10_ex4,lbl_3,lbl_6],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,
    lbl_6,lbl_7],[speed_pldi10_ex4,speed_pldi10_ex4,lbl_3,lbl_6,lbl_8]]
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
lbl_6 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("n")))
[n(),[],{},{}]
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
examining cst__1
 is a constant
examining cst__4
 is a constant
examining flag
 has definitions
examining n
examining speed_pldi10_ex4
while remnants __gt(flag,0)while remnants __gt(n,0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= 1)
to be simplified (1 > 0)
to be simplified ( (1 > 0) && (0 >= n) )
to be simplified ( (1 > 0) && (n > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (flag > 0)
to be simplified (0 >= flag)
to be simplified (flag > 0)
to be simplified (flag > 0)
to be simplified (n > 0)
to be simplified (0 >= n)
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified (n > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= flag)
to be simplified (flag > 0)
to be simplified ( (flag > 0) && (0 >= n) )
to be simplified ( (flag > 0) && (n > 0) )
