FrontEnd version J.3
qualif t47
inside declaration [t47,t47]
inside declaration [t47,t47,flag]
inside declaration [t47,cst__4]
inside declaration [t47,cst__1]
table([t47,cst__1] = __declaration(__inside(char_data("t47")),
  __constant(`$$value`("1"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [t47,cst__4] = __declaration(__inside(char_data("t47")),
     __constant(`$$value`("0"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [t47,t47] = __declaration(__inside(char_data("t47")),
     __identifier(char_data("t47")),
       __function(__identifier(char_data("t47")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [t47,t47,flag] = __declaration(__inside(char_data("t47"),
       char_data("t47")),__identifier(char_data("flag")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [t47,t47,init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("t47"),char_data("t47")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__1"))))),
   [t47,t47,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__4"))))),
   [t47,t47,lbl_3,lbl_5] = __if(`$$label`("lbl_5"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("n"))),
       __expression(__constant(char_data("cst__4"))))),
   [t47,t47,lbl_3,lbl_5,_false,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("t47"),char_data("t47"),char_data("lbl_3"),
       char_data("lbl_5"),char_data("_false")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__4"))))),
   [t47,t47,lbl_3,lbl_5,_true,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("t47"),char_data("t47"),char_data("lbl_3"),
       char_data("lbl_5"),char_data("_true")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("n"))))),
   [t47,t47,lbl_3,lbl_5,_true,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("t47"),char_data("t47"),char_data("lbl_3"),
       char_data("lbl_5"),char_data("_true")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("flag"))),
       __expression(__constant(char_data("cst__1"))))))
table([t47,t47] = [[t47,t47],[t47,cst__4],[t47,cst__1],[t47,t47],[t47,t47,
    flag],[t47,t47,init_2],[t47,t47,lbl_3,lbl_5],[t47,t47,lbl_3],[t47,t47,
    lbl_3,lbl_5,_true,lbl_6],[t47,t47,lbl_3,lbl_5,_true,lbl_7],[t47,t47,
    lbl_3,lbl_5,_false,lbl_8]])
[[t47,t47,flag],[t47,t47,init_2],[t47,t47,lbl_3,lbl_5,_true,lbl_6],[t47,
    t47,lbl_3,lbl_5,_true,lbl_7],[t47,t47,lbl_3,lbl_5,_false,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[t47,t47],[t47,cst__4],[t47,cst__1],[t47,t47],[t47,t47,flag],[t47,
    t47,init_2],[t47,t47,lbl_3,lbl_5],[t47,t47,lbl_3],[t47,t47,lbl_3,lbl_5,
    _true,lbl_6],[t47,t47,lbl_3,lbl_5,_true,lbl_7],[t47,t47,lbl_3,lbl_5,
    _false,lbl_8]]
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
lbl_5 __si
 counter 1/0 iteration domain {}

lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("n")))
[n(),[],{},{}]
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
collect subscripts __expression(__identifier(char_data("flag")))
[flag(),[],{},{}]
examining cst__1
 is a constant
examining cst__4
 is a constant
examining flag
 has definitions
examining n
examining t47
while remnants __gt(flag,0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= 1)
to be simplified ( (1 > 0) && (0 >= n) )
to be simplified ( (1 > 0) && (n > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (flag > 0)
to be simplified (0 >= flag)
to be simplified (flag > 0)
to be simplified ( (flag > 0) && (0 >= n) )
to be simplified ( (flag > 0) && (n > 0) )
to be simplified (n > 0)
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified (n > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= flag)
to be simplified ( (flag > 0) && (0 >= n) )
to be simplified ( (flag > 0) && (n > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= flag)
to be simplified ( (flag > 0) && (0 >= n) )
to be simplified ( (flag > 0) && (n > 0) )
to be simplified TRUE
