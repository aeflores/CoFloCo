FrontEnd version J.3
qualif t08
inside declaration [t08,t08]
inside declaration [t08,cst__6]
inside declaration [t08,cst__5]
inside declaration [t08,cst__2]
table([t08,cst__2] = __declaration(__inside(char_data("t08")),
  __constant(`$$value`("1"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [t08,cst__5] = __declaration(__inside(char_data("t08")),
     __constant(`$$value`("2"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [t08,cst__6] = __declaration(__inside(char_data("t08")),
     __constant(`$$value`("3"),char_data("cst__6")),
     __basic(char_data("__integer"))),
   [t08,t08] = __declaration(__inside(char_data("t08")),
     __identifier(char_data("t08")),
       __function(__identifier(char_data("t08")),
       __basic(char_data("void")),__identifier(char_data("y")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("z")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t08,t08,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("z"))),
       __expression(__identifier(char_data("y"))))),
   [t08,t08,lbl_1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("t08"),char_data("t08"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__2")))))),
   [t08,t08,lbl_4] = __while(`$$label`("lbl_4"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__5"))))),
   [t08,t08,lbl_4,lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("t08"),char_data("t08"),char_data("lbl_4")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__6")))))))
table([t08,t08] = [[t08,t08],[t08,cst__6],[t08,cst__5],[t08,cst__2],[t08,
    t08],[t08,t08,lbl_1],[t08,t08,lbl_1,lbl_3],[t08,t08,lbl_4],[t08,t08,
    lbl_4,lbl_7]])
[[t08,t08,lbl_1,lbl_3],[t08,t08,lbl_4,lbl_7]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of z is 0
body [[t08,t08],[t08,cst__6],[t08,cst__5],[t08,cst__2],[t08,t08],[t08,t08,
    lbl_1],[t08,t08,lbl_1,lbl_3],[t08,t08,lbl_4],[t08,t08,lbl_4,lbl_7]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_4 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__2
 is a constant
examining cst__5
 is a constant
examining cst__6
 is a constant
examining t08
examining y
examining z
while remnants __gt(y,2)while remnants __gt(z,y)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (y >= z)
to be simplified (z > y)
to be simplified ( (y >= z) && (2 >= y) )
to be simplified ( (y >= z) && (y > 2) )
to be simplified TRUE
to be simplified TRUE
to be simplified (z > y)
to be simplified (y >= z)
to be simplified (z > y)
to be simplified (y > 2)
to be simplified (2 >= y)
to be simplified (y > 2)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (2 >= y)
to be simplified (y > 2)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y >= z)
to be simplified (z > y)
to be simplified ( (y >= z) && (2 >= y) )
to be simplified ( (y >= z) && (y > 2) )
