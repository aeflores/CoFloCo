FrontEnd version J.3
qualif speed_pldi09_fig1
inside declaration [speed_pldi09_fig1,speed_pldi09_fig1]
inside declaration [speed_pldi09_fig1,speed_pldi09_fig1,x]
inside declaration [speed_pldi09_fig1,speed_pldi09_fig1,y]
inside declaration [speed_pldi09_fig1,cst__6]
inside declaration [speed_pldi09_fig1,cst__1]
table([speed_pldi09_fig1,
cst__1] = __declaration(__inside(char_data("speed_pldi09_fig1")),
  __constant(`$$value`("0"),char_data("cst__1")),
  __basic(char_data("__integer"))),
   [speed_pldi09_fig1,
   cst__6] = __declaration(__inside(char_data("speed_pldi09_fig1")),
     __constant(`$$value`("1"),char_data("cst__6")),
     __basic(char_data("__integer"))),
   [speed_pldi09_fig1,
   speed_pldi09_fig1] = __declaration(__inside(char_data("speed_pldi09_fig1"
   )),__identifier(char_data("speed_pldi09_fig1")),
     __function(__identifier(char_data("speed_pldi09_fig1")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [speed_pldi09_fig1,speed_pldi09_fig1,
   init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("speed_pldi09_fig1"),
       char_data("speed_pldi09_fig1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__1"))))),
   [speed_pldi09_fig1,speed_pldi09_fig1,
   init_3] = __statement(`$$label`("init_3"),
     __inside(char_data("speed_pldi09_fig1"),
       char_data("speed_pldi09_fig1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__1"))))),
   [speed_pldi09_fig1,speed_pldi09_fig1,lbl_4] = __for(`$$label`("lbl_4"),
     __init(),__test(),__next()),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,
lbl_5] = __if(`$$label`("lbl_5"),
 __expression(__operator(char_data("__lt")),
 __expression(__identifier(char_data("x"))),
 __expression(__identifier(char_data("n"))))),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,
lbl_9] = __if(`$$label`("lbl_9"),
 __expression(__operator(char_data("__gt")),
 __expression(__identifier(char_data("y"))),
 __expression(__constant(char_data("cst__1"))))),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_false,
lbl_11] = __statement(`$$label`("lbl_11"),
__inside(char_data("speed_pldi09_fig1"),char_data("speed_pldi09_fig1"),
 char_data("lbl_4"),char_data("lbl_5"),char_data("_false"),
 char_data("lbl_9"),char_data("_false")),__break()),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_true,
lbl_10] = __statement(`$$label`("lbl_10"),
__inside(char_data("speed_pldi09_fig1"),char_data("speed_pldi09_fig1"),
char_data("lbl_4"),char_data("lbl_5"),char_data("_false"),
 char_data("lbl_9"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y"))),
__expression(__operator(char_data("__subtraction")),
 __expression(__identifier(char_data("y"))),
 __expression(__constant(char_data("cst__6")))))),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_true,
lbl_7] = __statement(`$$label`("lbl_7"),
__inside(char_data("speed_pldi09_fig1"),char_data("speed_pldi09_fig1"),
char_data("lbl_4"),char_data("lbl_5"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("y"))),
__expression(__operator(char_data("__addition")),
 __expression(__identifier(char_data("y"))),
 __expression(__constant(char_data("cst__6")))))),
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_true,
lbl_8] = __statement(`$$label`("lbl_8"),
__inside(char_data("speed_pldi09_fig1"),char_data("speed_pldi09_fig1"),
char_data("lbl_4"),char_data("lbl_5"),char_data("_true")),
__expression(__operator(char_data("__assignment")),
__expression(__identifier(char_data("x"))),
__expression(__operator(char_data("__addition")),
 __expression(__identifier(char_data("x"))),
 __expression(__constant(char_data("cst__6")))))),
[speed_pldi09_fig1,speed_pldi09_fig1,
x] = __declaration(__inside(char_data("speed_pldi09_fig1"),
char_data("speed_pldi09_fig1")),__identifier(char_data("x")),
__basic(`$$size`("32"),char_data("__integer"))),
[speed_pldi09_fig1,speed_pldi09_fig1,
y] = __declaration(__inside(char_data("speed_pldi09_fig1"),
char_data("speed_pldi09_fig1")),__identifier(char_data("y")),
__basic(`$$size`("32"),char_data("__integer"))))
table([speed_pldi09_fig1,speed_pldi09_fig1] = [[speed_pldi09_fig1,
speed_pldi09_fig1],[speed_pldi09_fig1,cst__6],[speed_pldi09_fig1,cst__1],
[speed_pldi09_fig1,speed_pldi09_fig1],[speed_pldi09_fig1,speed_pldi09_fig1,
x],[speed_pldi09_fig1,speed_pldi09_fig1,y],[speed_pldi09_fig1,
speed_pldi09_fig1,init_2],[speed_pldi09_fig1,speed_pldi09_fig1,init_3],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5],[speed_pldi09_fig1,
speed_pldi09_fig1,lbl_4],[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,
_true,lbl_7],[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_true,lbl_8],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_true,
lbl_10],[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,
_false,lbl_11]])
[[speed_pldi09_fig1,speed_pldi09_fig1,x],[speed_pldi09_fig1,
speed_pldi09_fig1,y],[speed_pldi09_fig1,speed_pldi09_fig1,init_2],
[speed_pldi09_fig1,speed_pldi09_fig1,init_3],[speed_pldi09_fig1,
speed_pldi09_fig1,lbl_4,lbl_5,_true,lbl_7],[speed_pldi09_fig1,
speed_pldi09_fig1,lbl_4,lbl_5,_true,lbl_8],[speed_pldi09_fig1,
speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_true,lbl_10],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_false,
lbl_11]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[speed_pldi09_fig1,speed_pldi09_fig1],[speed_pldi09_fig1,cst__6],
[speed_pldi09_fig1,cst__1],[speed_pldi09_fig1,speed_pldi09_fig1],
[speed_pldi09_fig1,speed_pldi09_fig1,x],[speed_pldi09_fig1,
speed_pldi09_fig1,y],[speed_pldi09_fig1,speed_pldi09_fig1,init_2],
[speed_pldi09_fig1,speed_pldi09_fig1,init_3],[speed_pldi09_fig1,
speed_pldi09_fig1,lbl_4,lbl_5],[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_true,lbl_7],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_true,lbl_8],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9],
[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,_true,
lbl_10],[speed_pldi09_fig1,speed_pldi09_fig1,lbl_4,lbl_5,_false,lbl_9,
_false,lbl_11]]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_5 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
lbl_9 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__1
 is a constant
examining cst__6
 is a constant
examining n
examining speed_pldi09_fig1
examining x
 has definitions
examining y
 has definitions
to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n > 0)
to be simplified ( (0 >= n) && (0 >= 0) )
to be simplified ( (0 >= n) && (0 > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n > x)
to be simplified (x >= n)
to be simplified (n > x)
to be simplified (x >= n)
to be simplified (n > x)
to be simplified ( (x >= n) && (0 >= y) )
to be simplified ( (x >= n) && (y > 0) )
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified (y > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified (n > x)
to be simplified ( (x >= n) && (0 >= y) )
to be simplified ( (x >= n) && (y > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
