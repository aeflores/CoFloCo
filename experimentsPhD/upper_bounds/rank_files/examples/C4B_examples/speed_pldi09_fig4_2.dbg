FrontEnd version J.3
qualif speed_pldi09_fig4_2
inside declaration [speed_pldi09_fig4_2,speed_pldi09_fig4_2]
inside declaration [speed_pldi09_fig4_2,speed_pldi09_fig4_2,va]
inside declaration [speed_pldi09_fig4_2,speed_pldi09_fig4_2,vb]
inside declaration [speed_pldi09_fig4_2,cst__9]
inside declaration [speed_pldi09_fig4_2,cst__2]
table([speed_pldi09_fig4_2,
cst__2] = __declaration(__inside(char_data("speed_pldi09_fig4_2")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [speed_pldi09_fig4_2,
   cst__9] = __declaration(__inside(char_data("speed_pldi09_fig4_2")),
     __constant(`$$value`("1"),char_data("cst__9")),
     __basic(char_data("__integer"))),
   [speed_pldi09_fig4_2,
   speed_pldi09_fig4_2] = __declaration(__inside(char_data("speed_pldi09_fig4_2"
   )),__identifier(char_data("speed_pldi09_fig4_2")),
     __function(__identifier(char_data("speed_pldi09_fig4_2")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("m")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [speed_pldi09_fig4_2,speed_pldi09_fig4_2,
   init_1] = __statement(`$$label`("init_1"),
     __inside(char_data("speed_pldi09_fig4_2"),
       char_data("speed_pldi09_fig4_2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("va"))),
       __expression(__identifier(char_data("n"))))),
   [speed_pldi09_fig4_2,speed_pldi09_fig4_2,
   init_3] = __statement(`$$label`("init_3"),
     __inside(char_data("speed_pldi09_fig4_2"),
       char_data("speed_pldi09_fig4_2")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("vb"))),
       __expression(__constant(char_data("cst__2"))))),
   [speed_pldi09_fig4_2,speed_pldi09_fig4_2,
     lbl_4] = __if(`$$label`("lbl_4"),
     __expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("m"))),
       __expression(__constant(char_data("cst__2"))))),
   [speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_false,
   lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("speed_pldi09_fig4_2"),
       char_data("speed_pldi09_fig4_2"),char_data("lbl_4"),
       char_data("_false")),__nop()),
 [speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_true,
 lbl_5] = __statement(`$$label`("lbl_5"),
   __inside(char_data("speed_pldi09_fig4_2"),
     char_data("speed_pldi09_fig4_2"),char_data("lbl_4"),
     char_data("_true")),__return()),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,
 lbl_7] = __while(`$$label`("lbl_7"),
 __expression(__operator(char_data("__gt")),
   __expression(__identifier(char_data("va"))),
   __expression(__constant(char_data("cst__2"))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,
lbl_8] = __if(`$$label`("lbl_8"),
   __expression(__operator(char_data("__lt")),
   __expression(__identifier(char_data("vb"))),
   __expression(__identifier(char_data("m"))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_12] = __statement(`$$label`("lbl_12"),
 __inside(char_data("speed_pldi09_fig4_2"),
   char_data("speed_pldi09_fig4_2"),char_data("lbl_7"),char_data("lbl_8"),
   char_data("_false")),__expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("vb"))),
   __expression(__operator(char_data("__subtraction")),
     __expression(__identifier(char_data("vb"))),
     __expression(__constant(char_data("cst__9")))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_13] = __statement(`$$label`("lbl_13"),
 __inside(char_data("speed_pldi09_fig4_2"),
   char_data("speed_pldi09_fig4_2"),char_data("lbl_7"),char_data("lbl_8"),
   char_data("_false")),__expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("vb"))),
   __expression(__constant(char_data("cst__2"))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_true,
lbl_10] = __statement(`$$label`("lbl_10"),
 __inside(char_data("speed_pldi09_fig4_2"),
   char_data("speed_pldi09_fig4_2"),char_data("lbl_7"),char_data("lbl_8"),
   char_data("_true")),__expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("vb"))),
   __expression(__operator(char_data("__addition")),
     __expression(__identifier(char_data("vb"))),
     __expression(__constant(char_data("cst__9")))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_true,
lbl_11] = __statement(`$$label`("lbl_11"),
 __inside(char_data("speed_pldi09_fig4_2"),
   char_data("speed_pldi09_fig4_2"),char_data("lbl_7"),char_data("lbl_8"),
   char_data("_true")),__expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("va"))),
   __expression(__operator(char_data("__subtraction")),
     __expression(__identifier(char_data("va"))),
     __expression(__constant(char_data("cst__9")))))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,
va] = __declaration(__inside(char_data("speed_pldi09_fig4_2"),
 char_data("speed_pldi09_fig4_2")),__identifier(char_data("va")),
 __basic(`$$size`("32"),char_data("__integer"))),
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,
vb] = __declaration(__inside(char_data("speed_pldi09_fig4_2"),
 char_data("speed_pldi09_fig4_2")),__identifier(char_data("vb")),
 __basic(`$$size`("32"),char_data("__integer"))))
table([speed_pldi09_fig4_2,speed_pldi09_fig4_2] = [[speed_pldi09_fig4_2,
speed_pldi09_fig4_2],[speed_pldi09_fig4_2,cst__9],[speed_pldi09_fig4_2,
cst__2],[speed_pldi09_fig4_2,speed_pldi09_fig4_2],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,va],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,vb],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,init_1],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,init_3],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,
lbl_4],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_true,lbl_5],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_false,lbl_6],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,
lbl_8,_true,lbl_10],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,
_true,lbl_11],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_12],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_13]])
[[speed_pldi09_fig4_2,speed_pldi09_fig4_2,va],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,vb],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,init_1],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,init_3],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_4,_true,lbl_5],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_4,_false,lbl_6],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7,lbl_8,_true,lbl_10],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7,lbl_8,_true,lbl_11],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7,lbl_8,_false,lbl_12],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7,lbl_8,_false,lbl_13]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
body [[speed_pldi09_fig4_2,speed_pldi09_fig4_2],[speed_pldi09_fig4_2,
cst__9],[speed_pldi09_fig4_2,cst__2],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,va],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,vb],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,init_1],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,
init_3],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_true,lbl_5],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_4,_false,lbl_6],
[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8],[speed_pldi09_fig4_2,
speed_pldi09_fig4_2,lbl_7],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,
lbl_8,_true,lbl_10],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,
_true,lbl_11],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_12],[speed_pldi09_fig4_2,speed_pldi09_fig4_2,lbl_7,lbl_8,_false,
lbl_13]]
collect subscripts __expression(__identifier(char_data("va")))
[va(),[],{},{}]
collect subscripts __expression(__identifier(char_data("vb")))
[vb(),[],{},{}]
lbl_4 __si
 counter 1/0 iteration domain {}

lbl_8 __si
 counter 1/0 iteration domain {}

lbl_7 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("vb")))
[vb(),[],{},{}]
collect subscripts __expression(__identifier(char_data("va")))
[va(),[],{},{}]
collect subscripts __expression(__identifier(char_data("vb")))
[vb(),[],{},{}]
collect subscripts __expression(__identifier(char_data("vb")))
[vb(),[],{},{}]
examining cst__2
 is a constant
examining cst__9
 is a constant
examining m
examining n
examining speed_pldi09_fig4_2
examining va
 has definitions
examining vb
 has definitions
while remnants __gt(va,0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= m)
to be simplified (m > 0)
to be simplified ( (m > 0) && (0 >= n) )
to be simplified ( (m > 0) && ( (n > 0) && (m > 0) ) )
to be simplified ( (m > 0) && ( (n > 0) && (0 >= m) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= m)
to be simplified (m > 0)
to be simplified (0 >= m)
to be simplified (m > 0)
to be simplified (va > 0)
to be simplified (0 >= va)
to be simplified (va > 0)
to be simplified ( (va > 0) && (m > vb) )
to be simplified ( (va > 0) && (vb >= m) )
to be simplified (m > vb)
to be simplified (vb >= m)
to be simplified (m > vb)
to be simplified (vb >= m)
to be simplified (m > vb)
to be simplified (vb >= m)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= va)
to be simplified ( (va > 0) && (m > vb) )
to be simplified ( (va > 0) && (vb >= m) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= va)
to be simplified ( (va > 0) && (m > vb) )
to be simplified ( (va > 0) && (vb >= m) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
