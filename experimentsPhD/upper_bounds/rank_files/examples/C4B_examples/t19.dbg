FrontEnd version J.3
qualif t19
inside declaration [t19,t19]
inside declaration [t19,cst__7]
inside declaration [t19,cst__4]
inside declaration [t19,cst__2]
table([t19,cst__2] = __declaration(__inside(char_data("t19")),
  __constant(`$$value`("100"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [t19,cst__4] = __declaration(__inside(char_data("t19")),
     __constant(`$$value`("50"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [t19,cst__7] = __declaration(__inside(char_data("t19")),
     __constant(`$$value`("0"),char_data("cst__7")),
     __basic(char_data("__integer"))),
   [t19,t19] = __declaration(__inside(char_data("t19")),
     __identifier(char_data("t19")),
       __function(__identifier(char_data("t19")),
       __basic(char_data("void")),__identifier(char_data("i")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("k")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t19,t19,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__2"))))),
   [t19,t19,lbl_1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("t19"),char_data("t19"),char_data("lbl_1")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("i"))))),
   [t19,t19,lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("t19"),char_data("t19")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__operator(char_data("__addition")),
         __expression(__operator(char_data("__addition")),
           __expression(__identifier(char_data("i"))),
           __expression(__identifier(char_data("k")))),
         __expression(__constant(char_data("cst__4")))))),
   [t19,t19,lbl_6] = __while(`$$label`("lbl_6"),
     __expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__7"))))),
   [t19,t19,lbl_6,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("t19"),char_data("t19"),char_data("lbl_6")),
     __expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("i"))))))
table([t19,t19] = [[t19,t19],[t19,cst__7],[t19,cst__4],[t19,cst__2],[t19,
    t19],[t19,t19,lbl_1],[t19,t19,lbl_1,lbl_3],[t19,t19,lbl_5],[t19,t19,
    lbl_6],[t19,t19,lbl_6,lbl_8]])
[[t19,t19,lbl_1,lbl_3],[t19,t19,lbl_5],[t19,t19,lbl_6,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of i is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of k is 0
body [[t19,t19],[t19,cst__7],[t19,cst__4],[t19,cst__2],[t19,t19],[t19,t19,
    lbl_1],[t19,t19,lbl_1,lbl_3],[t19,t19,lbl_5],[t19,t19,lbl_6],[t19,t19,
    lbl_6,lbl_8]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
lbl_6 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining cst__2
 is a constant
examining cst__4
 is a constant
examining cst__7
 is a constant
examining i
examining k
examining t19
while remnants __ge(i,0)while remnants __gt(i,100)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (100 >= i)
to be simplified (i > 100)
to be simplified ( (100 >= i) && (0 > i+k+50) )
to be simplified ( (100 >= i) && (i+k+50 >= 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i > 100)
to be simplified (100 >= i)
to be simplified (100 >= i)
to be simplified (100 >= i)
to be simplified (i > 100)
to be simplified (i > 100)
to be simplified (i >= 0)
to be simplified (0 > i)
to be simplified (i >= 0)
to be simplified (i >= 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 > i)
to be simplified (i >= 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (100 >= i)
to be simplified (i > 100)
to be simplified ( (100 >= i) && (0 > i+k+50) )
to be simplified ( (100 >= i) && (i+k+50 >= 0) )
