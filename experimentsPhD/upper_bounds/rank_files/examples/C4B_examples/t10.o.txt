sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1],table((cst__3,
    __dim) = 0,
       (cst__3,__kind) = __global,
       (cst__3,__schedule) = [],
       (cst__3,__text) = __declaration(__inside(char_data("t10")),
         __constant(`$$value`("0"),char_data("cst__3")),
         __basic(char_data("__integer"))),
       (cst__3,__type) = __basic(char_data("__integer")),
       (cst__3,__value) = "0",
       (cst__3,actual__Alloc) = [],
       (cst__4,__dim) = 0,
       (cst__4,__kind) = __global,
       (cst__4,__schedule) = [],
       (cst__4,__text) = __declaration(__inside(char_data("t10")),
         __constant(`$$value`("1"),char_data("cst__4")),
         __basic(char_data("__integer"))),
       (cst__4,__type) = __basic(char_data("__integer")),
       (cst__4,__value) = "1",
       (cst__4,actual__Alloc) = [],
       (nondet,__dim) = 0,
       (nondet,__kind) = __global,
       (nondet,__schedule) = [],
       (nondet,__text) = __declaration(__inside(char_data("t10")),
         __identifier(char_data("nondet")),
         __function(__identifier(char_data("nondet")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (nondet,__type) = __function(__identifier(char_data("nondet")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (nondet,actual__Alloc) = [],
       (t10,__dim) = 0,
       (t10,__formals) = [x,y],
       (t10,__kind) = __global,
       (t10,__schedule) = [],
       (t10,__text) = __declaration(__inside(char_data("t10")),
         __identifier(char_data("t10")),
         __function(__identifier(char_data("t10")),
           __basic(char_data("void")),__identifier(char_data("x")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("y")),__basic(`$$size`("32"),
             char_data("__integer")))),
       (t10,__type) = __function(__identifier(char_data("t10")),
         __basic(char_data("void")),__identifier(char_data("x")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("y")),__basic(`$$size`("32"),
           char_data("__integer"))),
       (t10,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __param,
       (x,__schedule) = [],
       (x,__text) = __declaration(__identifier(char_data(x)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __param,
       (y,__schedule) = [],
       (y,__text) = __declaration(__identifier(char_data(y)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((lbl_1,__body) = [lbl_2],
       (lbl_1,__counter) = 1/0,
       (lbl_1,__depth) = 0,
       (lbl_1,__kind) = __while,
       (lbl_1,__outer) = [],
       (lbl_1,__text) = __while(`$$label`("lbl_1"),
         __expression(__operator(char_data("__gt")),
           __expression(__identifier(char_data("x"))),
           __expression(__identifier(char_data("y"))))),
       (lbl_1,false__part) = [],
       (lbl_1,true__part) = [],
       (lbl_2,__body) = [],
       (lbl_2,__counter) = 1/0,
       (lbl_2,__kind) = __si,
       (lbl_2,__text) = __if(`$$label`("lbl_2"),
         __expression(__operator(char_data("__gt")),
           __expression(__operator(char_data("__funcall")),
             __expression(__identifier(char_data("nondet")))),
           __expression(__constant(char_data("cst__3"))))),
       (lbl_2,false__part) = [lbl_6],
       (lbl_2,iteration__Domain) = {},
       (lbl_2,true__part) = [lbl_5]),table((lbl_5,__board) = table(),
       (lbl_5,__iteration) = [1/0,1/0],
       (lbl_5,__kind) = __assignment,
       (lbl_5,__loops) = [lbl_1,lbl_2],
       (lbl_5,__position) = [t10,t10,lbl_1,lbl_2,_true],
       (lbl_5,__process) = t10,
       (lbl_5,__schedule) = [],
       (lbl_5,__text) = __statement(`$$label`("lbl_5"),
         __inside(char_data("t10"),char_data("t10"),
           char_data("lbl_1"),char_data("lbl_2"),char_data("_true")),
         __expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("y"))),
           __expression(__operator(char_data("__addition")),
             __expression(__identifier(char_data("y"))),
             __expression(__constant(char_data("cst__4")))))),
       (lbl_5,extended__domain) = {},
       (lbl_5,extended__iteration) = [],
       (lbl_5,inner__Constraints) = {},
       (lbl_5,inner__Variables) = [],
       (lbl_5,iteration__Domain) = {},
       (lbl_5,local__Parameters) = {},
       (lbl_5,original__Read) = {y()},
     (lbl_5,original__Write) = {y()},
   (lbl_5,read__Ref) = {y()},
 (lbl_5,write__Ref) = {y()},
(lbl_6,__board) = table(),
(lbl_6,__iteration) = [1/0,1/0],
(lbl_6,__kind) = __assignment,
(lbl_6,__loops) = [lbl_1,lbl_2],
(lbl_6,__position) = [t10,t10,lbl_1,lbl_2,_false],
(lbl_6,__process) = t10,
(lbl_6,__schedule) = [],
(lbl_6,__text) = __statement(`$$label`("lbl_6"),
 __inside(char_data("t10"),char_data("t10"),char_data("lbl_1"),
   char_data("lbl_2"),char_data("_false")),
 __expression(__operator(char_data("__assignment")),
   __expression(__identifier(char_data("x"))),
   __expression(__operator(char_data("__subtraction")),
     __expression(__identifier(char_data("x"))),
     __expression(__constant(char_data("cst__4")))))),
(lbl_6,extended__domain) = {},
(lbl_6,extended__iteration) = [],
(lbl_6,inner__Constraints) = {},
(lbl_6,inner__Variables) = [],
(lbl_6,iteration__Domain) = {},
(lbl_6,local__Parameters) = {},
(lbl_6,original__Read) = {x()},
(lbl_6,original__Write) = {x()},
(lbl_6,read__Ref) = {x()},
(lbl_6,write__Ref) = {x()}),[],[lbl_5,lbl_6],NIL,NIL,NIL,NIL,0]));
