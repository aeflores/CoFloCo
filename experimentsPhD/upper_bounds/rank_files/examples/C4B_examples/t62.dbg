FrontEnd version J.3
qualif t62
inside declaration [t62,nondet]
inside declaration [t62,tick]
inside declaration [t62,t62]
inside declaration [t62,cst__7]
inside declaration [t62,cst__5]
table([t62,cst__5] = __declaration(__inside(char_data("t62")),
  __constant(`$$value`("1"),char_data("cst__5")),
  __basic(char_data("__integer"))),
   [t62,cst__7] = __declaration(__inside(char_data("t62")),
     __constant(`$$value`("0"),char_data("cst__7")),
     __basic(char_data("__integer"))),
   [t62,nondet] = __declaration(__inside(char_data("t62")),
     __identifier(char_data("nondet")),
     __function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t62,t62] = __declaration(__inside(char_data("t62")),
     __identifier(char_data("t62")),
       __function(__identifier(char_data("t62")),
       __basic(char_data("void")),__identifier(char_data("l")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("h")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t62,t62,lbl_1] = __if(`$$label`("lbl_1"),
     __expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("l"))),
       __expression(__identifier(char_data("h"))))),
   [t62,t62,lbl_1,_false,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("t62"),char_data("t62"),char_data("lbl_1"),
       char_data("_false")),__nop()),
 [t62,t62,lbl_1,_true,lbl_2] = __statement(`$$label`("lbl_2"),
   __inside(char_data("t62"),char_data("t62"),char_data("lbl_1"),
     char_data("_true")),__return()),
[t62,t62,lbl_4] = __while(`$$label`("lbl_4"),
 __expression(__constant(char_data("cst__5")))),
[t62,t62,lbl_4,lbl_10] = __doWhile(`$$label`("lbl_10"),
 __expression(__operator(char_data("__conjunction")),
   __expression(__operator(char_data("__lt")),
     __expression(__identifier(char_data("l"))),
     __expression(__identifier(char_data("h")))),
   __expression(__operator(char_data("__gt")),
     __expression(__operator(char_data("__funcall")),
       __expression(__identifier(char_data("nondet")))),
     __expression(__constant(char_data("cst__7")))))),
[t62,t62,lbl_4,lbl_10,lbl_11] = __statement(`$$label`("lbl_11"),
 __inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
   char_data("lbl_10")),__expression(__operator(char_data("_post_decr")),
   __expression(__identifier(char_data("h"))))),
[t62,t62,lbl_4,lbl_10,lbl_12] = __statement(`$$label`("lbl_12"),
 __inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
   char_data("lbl_10")),__expression(__operator(char_data("__funcall")),
   __expression(__identifier(char_data("tick"))),
   __expression(__constant(char_data("cst__5"))))),
[t62,t62,lbl_4,lbl_13] = __if(`$$label`("lbl_13"),
 __expression(__operator(char_data("__ge")),
   __expression(__identifier(char_data("l"))),
   __expression(__identifier(char_data("h"))))),
[t62,t62,lbl_4,lbl_13,_false,lbl_15] = __statement(`$$label`("lbl_15"),
 __inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
   char_data("lbl_13"),char_data("_false")),__nop()),
[t62,t62,lbl_4,lbl_13,_true,lbl_14] = __statement(`$$label`("lbl_14"),
__inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
 char_data("lbl_13"),char_data("_true")),__break()),
[t62,t62,lbl_4,lbl_16] = __statement(`$$label`("lbl_16"),
__inside(char_data("t62"),char_data("t62"),char_data("lbl_4")),
__expression(__operator(char_data("__funcall")),
__expression(__identifier(char_data("tick"))),
__expression(__constant(char_data("cst__5"))))),
[t62,t62,lbl_4,lbl_6] = __doWhile(`$$label`("lbl_6"),
__expression(__operator(char_data("__conjunction")),
__expression(__operator(char_data("__lt")),
 __expression(__identifier(char_data("l"))),
 __expression(__identifier(char_data("h")))),
__expression(__operator(char_data("__gt")),
 __expression(__operator(char_data("__funcall")),
   __expression(__identifier(char_data("nondet")))),
 __expression(__constant(char_data("cst__7")))))),
[t62,t62,lbl_4,lbl_6,lbl_8] = __statement(`$$label`("lbl_8"),
__inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
char_data("lbl_6")),__expression(__operator(char_data("_post_incr")),
__expression(__identifier(char_data("l"))))),
[t62,t62,lbl_4,lbl_6,lbl_9] = __statement(`$$label`("lbl_9"),
__inside(char_data("t62"),char_data("t62"),char_data("lbl_4"),
char_data("lbl_6")),__expression(__operator(char_data("__funcall")),
__expression(__identifier(char_data("tick"))),
__expression(__constant(char_data("cst__5"))))),
[t62,tick] = __declaration(__inside(char_data("t62")),
__identifier(char_data("tick")),__function(__identifier(char_data("tick")),
__basic(char_data("void")),__identifier(char_data("cost")),
__basic(`$$size`("32"),char_data("__integer")))))
table([t62,t62] = [[t62,nondet],[t62,tick],[t62,t62],[t62,cst__7],[t62,
cst__5],[t62,t62],[t62,t62,lbl_1],[t62,t62,lbl_1,_true,lbl_2],[t62,t62,
lbl_1,_false,lbl_3],[t62,t62,lbl_4,lbl_6],[t62,t62,lbl_4],[t62,t62,lbl_4,
lbl_6,lbl_8],[t62,t62,lbl_4,lbl_6,lbl_9],[t62,t62,lbl_4,lbl_10],[t62,t62,
lbl_4,lbl_10,lbl_11],[t62,t62,lbl_4,lbl_10,lbl_12],[t62,t62,lbl_4,lbl_13],
[t62,t62,lbl_4,lbl_13,_true,lbl_14],[t62,t62,lbl_4,lbl_13,_false,lbl_15],
[t62,t62,lbl_4,lbl_16]])
[[t62,t62,lbl_1,_true,lbl_2],[t62,t62,lbl_1,_false,lbl_3],[t62,t62,lbl_4,
lbl_6,lbl_8],[t62,t62,lbl_4,lbl_6,lbl_9],[t62,t62,lbl_4,lbl_10,lbl_11],
[t62,t62,lbl_4,lbl_10,lbl_12],[t62,t62,lbl_4,lbl_13,_true,lbl_14],[t62,t62,
lbl_4,lbl_13,_false,lbl_15],[t62,t62,lbl_4,lbl_16]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of l is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of h is 0
body [[t62,nondet],[t62,tick],[t62,t62],[t62,cst__7],[t62,cst__5],[t62,
t62],[t62,t62,lbl_1],[t62,t62,lbl_1,_true,lbl_2],[t62,t62,lbl_1,_false,
lbl_3],[t62,t62,lbl_4,lbl_6],[t62,t62,lbl_4],[t62,t62,lbl_4,lbl_6,lbl_8],
[t62,t62,lbl_4,lbl_6,lbl_9],[t62,t62,lbl_4,lbl_10],[t62,t62,lbl_4,lbl_10,
lbl_11],[t62,t62,lbl_4,lbl_10,lbl_12],[t62,t62,lbl_4,lbl_13],[t62,t62,
lbl_4,lbl_13,_true,lbl_14],[t62,t62,lbl_4,lbl_13,_false,lbl_15],[t62,t62,
lbl_4,lbl_16]]
lbl_1 __si
 counter 1/0 iteration domain {}

lbl_4 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("l")))
[l(),[],{},{}]
collect subscripts __expression(__identifier(char_data("h")))
[h(),[],{},{}]
lbl_13 __si
 counter 1/0 iteration domain {}

examining cst__5
 is a constant
examining cst__7
 is a constant
examining h
examining l
examining nondet
examining t62
examining tick
while remnants 1to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (l >= h)
to be simplified (h > l)
to be simplified ( (h > l) && (1 = 0) )
to be simplified ( (h > l) && (1 != 0) )
to be simplified ( ( (h > l) && (1 != 0) ) && (h > l+1) )
to be simplified ( ( (h > l) && (1 != 0) ) && (h > l+2) )
to be simplified ( ( (h > l) && (1 != 0) ) && (l+2 >= h) )
to be simplified ( ( (h > l) && (1 != 0) ) && (h > l+2) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (1 = 0)
to be simplified (1 != 0)
to be simplified ( (1 != 0) && (h > l+1) )
to be simplified ( (1 != 0) && (h > l+2) )
to be simplified ( (1 != 0) && (l+2 >= h) )
to be simplified ( (1 != 0) && (h > l+2) )
to be simplified (l >= h)
to be simplified (h > l)
to be simplified (l >= h)
to be simplified (h > l)
to be simplified (h > l)
to be simplified TRUE
to be simplified (h > l)
to be simplified (l >= h)
to be simplified (h > l)
to be simplified (l >= h)
to be simplified (h > l)
to be simplified (l >= h)
to be simplified (h > l)
to be simplified (1 != 0)
to be simplified (1 = 0)
to be simplified (1 != 0)
to be simplified (h > l)
to be simplified TRUE
to be simplified (h > l)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (h > l+1)
to be simplified TRUE
to be simplified (h > l+2)
to be simplified (l+2 >= h)
to be simplified (h > l+2)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (h > l+1)
to be simplified (h > l+2)
to be simplified (l+2 >= h)
to be simplified (h > l+2)
to be simplified TRUE
to be simplified TRUE
to be simplified (h > l+1)
to be simplified (l+1 >= h)
to be simplified (h > l+1)
