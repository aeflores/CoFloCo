FrontEnd version J.3
qualif t27
inside declaration [t27,t27]
inside declaration [t27,cst__7]
inside declaration [t27,cst__4]
inside declaration [t27,cst__2]
table([t27,cst__2] = __declaration(__inside(char_data("t27")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [t27,cst__4] = __declaration(__inside(char_data("t27")),
     __constant(`$$value`("1000"),char_data("cst__4")),
     __basic(char_data("__integer"))),
   [t27,cst__7] = __declaration(__inside(char_data("t27")),
     __constant(`$$value`("100"),char_data("cst__7")),
     __basic(char_data("__integer"))),
   [t27,t27] = __declaration(__inside(char_data("t27")),
     __identifier(char_data("t27")),
       __function(__identifier(char_data("t27")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("y")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t27,t27,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("n"))),
       __expression(__constant(char_data("cst__2"))))),
   [t27,t27,lbl_1,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("t27"),char_data("t27"),char_data("lbl_1")),
     __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("n"))))),
   [t27,t27,lbl_1,lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("t27"),char_data("t27"),char_data("lbl_1")),
     __expression(__operator(char_data("_add_assign")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__4"))))),
   [t27,t27,lbl_1,lbl_6] = __while(`$$label`("lbl_6"),
     __expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__7"))))),
   [t27,t27,lbl_1,lbl_6,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("t27"),char_data("t27"),char_data("lbl_1"),
       char_data("lbl_6")),
       __expression(__operator(char_data("_sub_assign")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__7"))))))
table([t27,t27] = [[t27,t27],[t27,cst__7],[t27,cst__4],[t27,cst__2],[t27,
    t27],[t27,t27,lbl_1],[t27,t27,lbl_1,lbl_3],[t27,t27,lbl_1,lbl_5],[t27,
    t27,lbl_1,lbl_6],[t27,t27,lbl_1,lbl_6,lbl_8]])
[[t27,t27,lbl_1,lbl_3],[t27,t27,lbl_1,lbl_5],[t27,t27,lbl_1,lbl_6,lbl_8]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
body [[t27,t27],[t27,cst__7],[t27,cst__4],[t27,cst__2],[t27,t27],[t27,t27,
    lbl_1],[t27,t27,lbl_1,lbl_3],[t27,t27,lbl_1,lbl_5],[t27,t27,lbl_1,
  lbl_6],[t27,t27,lbl_1,lbl_6,lbl_8]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("n")))
[n(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_6 __while
 counter 1/0
examining cst__2
 is a constant
examining cst__4
 is a constant
examining cst__7
 is a constant
examining n
examining t27
examining y
while remnants __lt(n,0)while remnants __ge(y,100)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (n >= 0)
to be simplified (0 > n)
to be simplified ( (0 > n) && (0 > y+900) )
to be simplified ( (0 > n) && (y+900 >= 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 > n)
to be simplified (n >= 0)
to be simplified (0 > n)
to be simplified (0 > n)
to be simplified (0 > n)
to be simplified (y >= 100)
to be simplified (100 > y)
to be simplified (100 > y)
to be simplified (y >= 100)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (100 > y)
to be simplified (y >= 100)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= 0)
to be simplified (0 > n)
to be simplified ( (0 > n) && (0 > y+900) )
to be simplified ( (0 > n) && (y+900 >= 0) )
