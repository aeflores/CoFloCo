FrontEnd version J.3
qualif t07
inside declaration [t07,t07]
inside declaration [t07,cst__5]
inside declaration [t07,cst__3]
inside declaration [t07,cst__2]
table([t07,cst__2] = __declaration(__inside(char_data("t07")),
  __constant(`$$value`("0"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [t07,cst__3] = __declaration(__inside(char_data("t07")),
     __constant(`$$value`("1"),char_data("cst__3")),
     __basic(char_data("__integer"))),
   [t07,cst__5] = __declaration(__inside(char_data("t07")),
     __constant(`$$value`("2"),char_data("cst__5")),
     __basic(char_data("__integer"))),
   [t07,t07] = __declaration(__inside(char_data("t07")),
     __identifier(char_data("t07")),
       __function(__identifier(char_data("t07")),
       __basic(char_data("void")),__identifier(char_data("x")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("y")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [t07,t07,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__2"))))),
   [t07,t07,lbl_1,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("t07"),char_data("t07"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__3")))))),
   [t07,t07,lbl_1,lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("t07"),char_data("t07"),char_data("lbl_1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__5")))))),
   [t07,t07,lbl_7] = __while(`$$label`("lbl_7"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__2"))))),
   [t07,t07,lbl_7,lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("t07"),char_data("t07"),char_data("lbl_7")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__3")))))),
   [t07,t07,lbl_9] = __while(`$$label`("lbl_9"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("y"))),
       __expression(__constant(char_data("cst__2"))))),
   [t07,t07,lbl_9,lbl_10] = __statement(`$$label`("lbl_10"),
     __inside(char_data("t07"),char_data("t07"),char_data("lbl_9")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("y"))),
         __expression(__constant(char_data("cst__3")))))))
table([t07,t07] = [[t07,t07],[t07,cst__5],[t07,cst__3],[t07,cst__2],[t07,
    t07],[t07,t07,lbl_1],[t07,t07,lbl_1,lbl_4],[t07,t07,lbl_1,lbl_6],[t07,
    t07,lbl_7],[t07,t07,lbl_7,lbl_8],[t07,t07,lbl_9],[t07,t07,lbl_9,
lbl_10]])
[[t07,t07,lbl_1,lbl_4],[t07,t07,lbl_1,lbl_6],[t07,t07,lbl_7,lbl_8],[t07,
    t07,lbl_9,lbl_10]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of y is 0
body [[t07,t07],[t07,cst__5],[t07,cst__3],[t07,cst__2],[t07,t07],[t07,t07,
    lbl_1],[t07,t07,lbl_1,lbl_4],[t07,t07,lbl_1,lbl_6],[t07,t07,lbl_7],
    [t07,t07,lbl_7,lbl_8],[t07,t07,lbl_9],[t07,t07,lbl_9,lbl_10]]
lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_7 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
lbl_9 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("y")))
[y(),[],{},{}]
examining cst__2
 is a constant
examining cst__3
 is a constant
examining cst__5
 is a constant
examining t07
examining x
examining y
while remnants __gt(y,0)while remnants __gt(y,0)while remnants __gt(x,
0)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (0 >= x)
to be simplified (x > 0)
to be simplified ( (0 >= x) && (y > 0) )
to be simplified ( (0 >= x) && (0 >= y) )
to be simplified ( (0 >= x) && ( (0 >= y) && (y > 0) ) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (x > 0)
to be simplified (0 >= x)
to be simplified (x > 0)
to be simplified (x > 0)
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified ( (0 >= y) && (y > 0) )
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified (y > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= y)
to be simplified (y > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (y > 0)
to be simplified (0 >= y)
to be simplified ( (0 >= y) && (y > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= x)
to be simplified (x > 0)
to be simplified ( (0 >= x) && (y > 0) )
to be simplified ( (0 >= x) && (0 >= y) )
to be simplified ( (0 >= x) && ( (0 >= y) && (y > 0) ) )
to be simplified TRUE
to be simplified TRUE
