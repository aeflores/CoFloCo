FrontEnd version J.3
qualif speed_popl10_fig2_2
inside declaration [speed_popl10_fig2_2,speed_popl10_fig2_2]
inside declaration [speed_popl10_fig2_2,cst__3]
table([speed_popl10_fig2_2,
cst__3] = __declaration(__inside(char_data("speed_popl10_fig2_2")),
  __constant(`$$value`("1"),char_data("cst__3")),
  __basic(char_data("__integer"))),
   [speed_popl10_fig2_2,
   speed_popl10_fig2_2] = __declaration(__inside(char_data("speed_popl10_fig2_2"
   )),__identifier(char_data("speed_popl10_fig2_2")),
     __function(__identifier(char_data("speed_popl10_fig2_2")),
       __basic(char_data("void")),__identifier(char_data("x")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("z")),__basic(`$$size`("32"),
         char_data("__integer")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [speed_popl10_fig2_2,speed_popl10_fig2_2,
   lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("n"))))),
   [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,
   lbl_2] = __if(`$$label`("lbl_2"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("z"))),
       __expression(__identifier(char_data("x"))))),
   [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_false,
   lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("speed_popl10_fig2_2"),
       char_data("speed_popl10_fig2_2"),char_data("lbl_1"),
       char_data("lbl_2"),char_data("_false")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("z"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("z"))),
         __expression(__constant(char_data("cst__3")))))),
   [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_true,
   lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("speed_popl10_fig2_2"),
       char_data("speed_popl10_fig2_2"),char_data("lbl_1"),
       char_data("lbl_2"),char_data("_true")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__3")))))))
table([speed_popl10_fig2_2,speed_popl10_fig2_2] = [[speed_popl10_fig2_2,
  speed_popl10_fig2_2],[speed_popl10_fig2_2,cst__3],[speed_popl10_fig2_2,
    speed_popl10_fig2_2],[speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,
    lbl_2],[speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1],
  [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_true,lbl_4],
  [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_false,lbl_5]])
[[speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_true,lbl_4],
  [speed_popl10_fig2_2,speed_popl10_fig2_2,lbl_1,lbl_2,_false,lbl_5]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of z is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[speed_popl10_fig2_2,speed_popl10_fig2_2],[speed_popl10_fig2_2,
  cst__3],[speed_popl10_fig2_2,speed_popl10_fig2_2],[speed_popl10_fig2_2,
    speed_popl10_fig2_2,lbl_1,lbl_2],[speed_popl10_fig2_2,
    speed_popl10_fig2_2,lbl_1],[speed_popl10_fig2_2,speed_popl10_fig2_2,
    lbl_1,lbl_2,_true,lbl_4],[speed_popl10_fig2_2,speed_popl10_fig2_2,
    lbl_1,lbl_2,_false,lbl_5]]
lbl_2 __si
 counter 1/0 iteration domain {}

lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("z")))
[z(),[],{},{}]
examining cst__3
 is a constant
examining n
examining speed_popl10_fig2_2
examining x
examining z
while remnants __lt(x,n)to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified (x >= n)
to be simplified ( (n > x) && (z > x) )
to be simplified ( (n > x) && (x >= z) )
to be simplified TRUE
to be simplified TRUE
to be simplified (n > x)
to be simplified (x >= n)
to be simplified (n > x)
to be simplified ( (n > x) && (z > x) )
to be simplified ( (n > x) && (x >= z) )
to be simplified (z > x)
to be simplified (x >= z)
to be simplified (z > x)
to be simplified (x >= z)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (x >= n)
to be simplified ( (n > x) && (z > x) )
to be simplified ( (n > x) && (x >= z) )
to be simplified TRUE
to be simplified (x >= n)
to be simplified ( (n > x) && (z > x) )
to be simplified ( (n > x) && (x >= z) )
