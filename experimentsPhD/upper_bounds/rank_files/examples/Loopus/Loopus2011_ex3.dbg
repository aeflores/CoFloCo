FrontEnd version J.3
qualif Loopus2011_ex3
inside declaration [Loopus2011_ex3,Loopus2011_ex3]
inside declaration [Loopus2011_ex3,cst__5]
inside declaration [Loopus2011_ex3,cst__3]
inside declaration [Loopus2011_ex3,cst__2]
table([Loopus2011_ex3,
Loopus2011_ex3] = __declaration(__inside(char_data("Loopus2011_ex3")),
  __identifier(char_data("Loopus2011_ex3")),
  __function(__identifier(char_data("Loopus2011_ex3")),
    __basic(char_data("void")),__identifier(char_data("x")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("b")),__basic(`$$size`("32"),
      char_data("__integer")))),
   [Loopus2011_ex3,Loopus2011_ex3,lbl_1] = __while(`$$label`("lbl_1"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__lt")),
         __expression(__constant(char_data("cst__2"))),
         __expression(__identifier(char_data("x")))),
       __expression(__operator(char_data("__lt")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__3")))))),
   [Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4] = __if(`$$label`("lbl_4"),
     __expression(__identifier(char_data("b")))),
   [Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4,_false,
   lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("Loopus2011_ex3"),char_data("Loopus2011_ex3"),
       char_data("lbl_1"),char_data("lbl_4"),char_data("_false")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__operator(char_data("__subtraction")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__5")))))),
   [Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4,_true,
   lbl_6] = __statement(`$$label`("lbl_6"),
     __inside(char_data("Loopus2011_ex3"),char_data("Loopus2011_ex3"),
       char_data("lbl_1"),char_data("lbl_4"),char_data("_true")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__operator(char_data("__addition")),
         __expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__5")))))),
   [Loopus2011_ex3,
   cst__2] = __declaration(__inside(char_data("Loopus2011_ex3")),
     __constant(`$$value`("0"),char_data("cst__2")),
     __basic(char_data("__integer"))),
   [Loopus2011_ex3,
   cst__3] = __declaration(__inside(char_data("Loopus2011_ex3")),
     __constant(`$$value`("255"),char_data("cst__3")),
     __basic(char_data("__integer"))),
   [Loopus2011_ex3,
   cst__5] = __declaration(__inside(char_data("Loopus2011_ex3")),
     __constant(`$$value`("1"),char_data("cst__5")),
     __basic(char_data("__integer"))))
table([Loopus2011_ex3,Loopus2011_ex3] = [[Loopus2011_ex3,Loopus2011_ex3],
  [Loopus2011_ex3,cst__5],[Loopus2011_ex3,cst__3],[Loopus2011_ex3,cst__2],
  [Loopus2011_ex3,Loopus2011_ex3],[Loopus2011_ex3,Loopus2011_ex3,lbl_1,
    lbl_4],[Loopus2011_ex3,Loopus2011_ex3,lbl_1],[Loopus2011_ex3,
    Loopus2011_ex3,lbl_1,lbl_4,_true,lbl_6],[Loopus2011_ex3,Loopus2011_ex3,
    lbl_1,lbl_4,_false,lbl_7]])
[[Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4,_true,lbl_6],[Loopus2011_ex3,
    Loopus2011_ex3,lbl_1,lbl_4,_false,lbl_7]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of x is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of b is 0
body [[Loopus2011_ex3,Loopus2011_ex3],[Loopus2011_ex3,cst__5],
  [Loopus2011_ex3,cst__3],[Loopus2011_ex3,cst__2],[Loopus2011_ex3,
    Loopus2011_ex3],[Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4],
  [Loopus2011_ex3,Loopus2011_ex3,lbl_1],[Loopus2011_ex3,Loopus2011_ex3,
    lbl_1,lbl_4,_true,lbl_6],[Loopus2011_ex3,Loopus2011_ex3,lbl_1,lbl_4,
    _false,lbl_7]]
lbl_4 __si
 counter 1/0 iteration domain {}

lbl_1 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
collect subscripts __expression(__identifier(char_data("x")))
[x(),[],{},{}]
examining Loopus2011_ex3
examining b
examining cst__2
 is a constant
examining cst__3
 is a constant
examining cst__5
 is a constant
examining x
while remnants __conjunction(__lt(0,x),__lt(x,255))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified ( (0 >= x) || (x >= 255) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b != 0) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b = 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified ( (x > 0) && (255 > x) )
to be simplified ( (0 >= x) || (x >= 255) )
to be simplified ( (x > 0) && (255 > x) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b != 0) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b = 0) )
to be simplified (b != 0)
to be simplified (b = 0)
to be simplified (b != 0)
to be simplified (b = 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified ( (0 >= x) || (x >= 255) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b != 0) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b = 0) )
to be simplified TRUE
to be simplified ( (0 >= x) || (x >= 255) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b != 0) )
to be simplified ( ( (x > 0) && (255 > x) ) && (b = 0) )
