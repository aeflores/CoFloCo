FrontEnd version J.3
qualif Loopus2011_ex1
inside declaration [Loopus2011_ex1,nondet]
inside declaration [Loopus2011_ex1,Loopus2011_ex1]
inside declaration [Loopus2011_ex1,Loopus2011_ex1,i]
inside declaration [Loopus2011_ex1,Loopus2011_ex1,j]
inside declaration [Loopus2011_ex1,cst__1]
table([Loopus2011_ex1,
Loopus2011_ex1] = __declaration(__inside(char_data("Loopus2011_ex1")),
  __identifier(char_data("Loopus2011_ex1")),
  __function(__identifier(char_data("Loopus2011_ex1")),
    __basic(char_data("void")),__identifier(char_data("n")),
    __basic(`$$size`("32"),char_data("__integer")))),
   [Loopus2011_ex1,Loopus2011_ex1,
   i] = __declaration(__inside(char_data("Loopus2011_ex1"),
     char_data("Loopus2011_ex1")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [Loopus2011_ex1,Loopus2011_ex1,
     init_2] = __statement(`$$label`("init_2"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1")),
     __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__1"))))),
   [Loopus2011_ex1,Loopus2011_ex1,
   j] = __declaration(__inside(char_data("Loopus2011_ex1"),
     char_data("Loopus2011_ex1")),__identifier(char_data("j")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3] = __while(`$$label`("lbl_3"),
     __expression(__operator(char_data("__lt")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("n"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,
   lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
       char_data("lbl_3")),
       __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("i"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,
   lbl_5] = __statement(`$$label`("lbl_5"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
       char_data("lbl_3")),
       __expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__constant(char_data("cst__1"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,
     lbl_6] = __while(`$$label`("lbl_6"),
     __expression(__operator(char_data("__conjunction")),
       __expression(__operator(char_data("__lt")),
         __expression(__identifier(char_data("i"))),
         __expression(__identifier(char_data("n")))),
       __expression(__operator(char_data("__gt")),
         __expression(__operator(char_data("__funcall")),
           __expression(__identifier(char_data("nondet")))),
         __expression(__constant(char_data("cst__1")))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_6,
   lbl_7] = __statement(`$$label`("lbl_7"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
       char_data("lbl_3"),char_data("lbl_6")),
     __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("i"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_6,
   lbl_8] = __statement(`$$label`("lbl_8"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
       char_data("lbl_3"),char_data("lbl_6")),
     __expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("j"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9] = __if(`$$label`("lbl_9"),
     __expression(__operator(char_data("__gt")),
       __expression(__identifier(char_data("j"))),
       __expression(__constant(char_data("cst__1"))))),
   [Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,_false,
   lbl_11] = __statement(`$$label`("lbl_11"),
     __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
       char_data("lbl_3"),char_data("lbl_9"),char_data("_false")),__nop()),
 [Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,_true,
 lbl_10] = __statement(`$$label`("lbl_10"),
   __inside(char_data("Loopus2011_ex1"),char_data("Loopus2011_ex1"),
     char_data("lbl_3"),char_data("lbl_9"),char_data("_true")),
   __expression(__operator(char_data("_post_decr")),
     __expression(__identifier(char_data("i"))))),
 [Loopus2011_ex1,
 cst__1] = __declaration(__inside(char_data("Loopus2011_ex1")),
   __constant(`$$value`("0"),char_data("cst__1")),
   __basic(char_data("__integer"))),
 [Loopus2011_ex1,
 nondet] = __declaration(__inside(char_data("Loopus2011_ex1")),
   __identifier(char_data("nondet")),
   __function(__identifier(char_data("nondet")),__basic(`$$size`("32"),
       char_data("__integer")))))
table([Loopus2011_ex1,Loopus2011_ex1] = [[Loopus2011_ex1,nondet],
[Loopus2011_ex1,Loopus2011_ex1],[Loopus2011_ex1,cst__1],[Loopus2011_ex1,
  Loopus2011_ex1],[Loopus2011_ex1,Loopus2011_ex1,i],[Loopus2011_ex1,
  Loopus2011_ex1,j],[Loopus2011_ex1,Loopus2011_ex1,init_2],[Loopus2011_ex1,
  Loopus2011_ex1,lbl_3],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_4],
[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_5],[Loopus2011_ex1,Loopus2011_ex1,
  lbl_3,lbl_6],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_6,lbl_7],
[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_6,lbl_8],[Loopus2011_ex1,
  Loopus2011_ex1,lbl_3,lbl_9],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,
  _true,lbl_10],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,_false,lbl_11]])
[[Loopus2011_ex1,Loopus2011_ex1,i],[Loopus2011_ex1,Loopus2011_ex1,j],
[Loopus2011_ex1,Loopus2011_ex1,init_2],[Loopus2011_ex1,Loopus2011_ex1,
  lbl_3,lbl_4],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_5],[Loopus2011_ex1,
  Loopus2011_ex1,lbl_3,lbl_6,lbl_7],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,
  lbl_6,lbl_8],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,_true,lbl_10],
[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9,_false,lbl_11]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[Loopus2011_ex1,nondet],[Loopus2011_ex1,Loopus2011_ex1],
[Loopus2011_ex1,cst__1],[Loopus2011_ex1,Loopus2011_ex1],[Loopus2011_ex1,
  Loopus2011_ex1,i],[Loopus2011_ex1,Loopus2011_ex1,j],[Loopus2011_ex1,
  Loopus2011_ex1,init_2],[Loopus2011_ex1,Loopus2011_ex1,lbl_3],
[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_4],[Loopus2011_ex1,Loopus2011_ex1,
  lbl_3,lbl_5],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_6],[Loopus2011_ex1,
  Loopus2011_ex1,lbl_3,lbl_6,lbl_7],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,
  lbl_6,lbl_8],[Loopus2011_ex1,Loopus2011_ex1,lbl_3,lbl_9],[Loopus2011_ex1,
  Loopus2011_ex1,lbl_3,lbl_9,_true,lbl_10],[Loopus2011_ex1,Loopus2011_ex1,
  lbl_3,lbl_9,_false,lbl_11]]
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
lbl_3 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
lbl_6 __while
 counter 1/0
collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
collect subscripts __expression(__identifier(char_data("j")))
[j(),[],{},{}]
lbl_9 __si
 counter 1/0 iteration domain {}

collect subscripts __expression(__identifier(char_data("i")))
[i(),[],{},{}]
examining Loopus2011_ex1
examining cst__1
 is a constant
examining i
 has definitions
examining j
 has definitions
examining n
examining nondet
while remnants __lt(i,n)while remnants __conjunction(__lt(i,n),
__gt(nondet(),0))to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified TRUE
to be simplified (0 >= n)
to be simplified (n > 0)
to be simplified ( (n > 0) && (n > 1) )
to be simplified ( (n > 0) && (0 >= 0) )
to be simplified ( (n > 0) && (0 > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i >= n)
to be simplified (n > i)
to be simplified ( (n > i) && (n > i+1) )
to be simplified ( (n > i) && (0 >= 0) )
to be simplified ( (n > i) && (0 > 0) )
to be simplified (n > i)
to be simplified (i >= n)
to be simplified (n > i)
to be simplified (n > i)
to be simplified (n > i)
to be simplified (n > i)
to be simplified TRUE
to be simplified (n > i)
to be simplified (n > i)
to be simplified (n > i)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i >= n)
to be simplified (n > i)
to be simplified ( (n > i) && (n > i+1) )
to be simplified ( (n > i) && (0 >= 0) )
to be simplified ( (n > i) && (0 > 0) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n > i)
to be simplified (0 >= j)
to be simplified (j > 0)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
