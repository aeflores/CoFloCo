FrontEnd version J.3
qualif ex_paper2
inside declaration [ex_paper2,tick]
inside declaration [ex_paper2,ex_paper2]
inside declaration [ex_paper2,ex_paper2,x]
inside declaration [ex_paper2,ex_paper2,y]
inside declaration [ex_paper2,cst__2]
table([ex_paper2,cst__2] = __declaration(__inside(char_data("ex_paper2")),
  __constant(`$$value`("1"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [ex_paper2,ex_paper2] = __declaration(__inside(char_data("ex_paper2")),
     __identifier(char_data("ex_paper2")),
     __function(__identifier(char_data("ex_paper2")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")))),
   [ex_paper2,ex_paper2,lbl_1] = __for(`$$label`("lbl_1"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("x"))),
       __expression(__constant(char_data("cst__2"))))),
     __test(__expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("x"))),
       __expression(__identifier(char_data("n"))))),
     __next(__expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("x")))))),
   [ex_paper2,ex_paper2,lbl_1,lbl_3] = __for(`$$label`("lbl_3"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("x"))))),
     __test(__expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("y"))),
       __expression(__identifier(char_data("n"))))),
     __next(__expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("y")))))),
   [ex_paper2,ex_paper2,lbl_1,lbl_3,
     lbl_4] = __statement(`$$label`("lbl_4"),
       __inside(char_data("ex_paper2"),char_data("ex_paper2"),
       char_data("lbl_1"),char_data("lbl_3")),
     __expression(__operator(char_data("__funcall")),
       __expression(__identifier(char_data("tick"))),
       __expression(__constant(char_data("cst__2"))))),
   [ex_paper2,ex_paper2,x] = __declaration(__inside(char_data("ex_paper2"),
     char_data("ex_paper2")),__identifier(char_data("x")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [ex_paper2,ex_paper2,y] = __declaration(__inside(char_data("ex_paper2"),
     char_data("ex_paper2")),__identifier(char_data("y")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [ex_paper2,tick] = __declaration(__inside(char_data("ex_paper2")),
     __identifier(char_data("tick")),
     __function(__identifier(char_data("tick")),__basic(char_data("void")),
       __identifier(char_data("c")),__basic(`$$size`("32"),
         char_data("__integer")))))
table([ex_paper2,ex_paper2] = [[ex_paper2,tick],[ex_paper2,ex_paper2],
  [ex_paper2,cst__2],[ex_paper2,ex_paper2],[ex_paper2,ex_paper2,x],
  [ex_paper2,ex_paper2,y],[ex_paper2,ex_paper2,lbl_1,lbl_3],[ex_paper2,
    ex_paper2,lbl_1],[ex_paper2,ex_paper2,lbl_1,lbl_3,lbl_4]])
[[ex_paper2,ex_paper2,x],[ex_paper2,ex_paper2,y],[ex_paper2,ex_paper2,
    lbl_1,lbl_3,lbl_4]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
body [[ex_paper2,tick],[ex_paper2,ex_paper2],[ex_paper2,cst__2],[ex_paper2,
    ex_paper2],[ex_paper2,ex_paper2,x],[ex_paper2,ex_paper2,y],[ex_paper2,
    ex_paper2,lbl_1,lbl_3],[ex_paper2,ex_paper2,lbl_1],[ex_paper2,
    ex_paper2,lbl_1,lbl_3,lbl_4]]
examining cst__2
 is a constant
examining ex_paper2
examining n
examining tick
examining x
 has definitions
examining y
 has definitions
to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified (1 > n)
to be simplified (n >= 1)
to be simplified (n >= 1)
to be simplified ( (n >= 1) && (1 > n) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= x)
to be simplified (x > n)
to be simplified (n >= x)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= y)
to be simplified (y > n)
to be simplified (y > n)
to be simplified (n >= y)
to be simplified (n >= y)
to be simplified (y > n)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (n >= y)
to be simplified (y > n)
to be simplified TRUE
to be simplified TRUE
to be simplified (x > n)
to be simplified (n >= x)
to be simplified (n >= x)
to be simplified ( (n >= x) && (x > n) )
