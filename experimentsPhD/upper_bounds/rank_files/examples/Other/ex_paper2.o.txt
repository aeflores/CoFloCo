sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1],table((cst__2,
    __dim) = 0,
       (cst__2,__kind) = __global,
       (cst__2,__schedule) = [],
       (cst__2,
         __text) = __declaration(__inside(char_data("ex_paper2")),
         __constant(`$$value`("1"),char_data("cst__2")),
         __basic(char_data("__integer"))),
       (cst__2,__type) = __basic(char_data("__integer")),
       (cst__2,__value) = "1",
       (cst__2,actual__Alloc) = [],
       (ex_paper2,__dim) = 0,
       (ex_paper2,__formals) = [n],
       (ex_paper2,__kind) = __global,
       (ex_paper2,__schedule) = [],
       (ex_paper2,
       __text) = __declaration(__inside(char_data("ex_paper2")),
         __identifier(char_data("ex_paper2")),
         __function(__identifier(char_data("ex_paper2")),
           __basic(char_data("void")),__identifier(char_data("n")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (ex_paper2,
       __type) = __function(__identifier(char_data("ex_paper2")),
         __basic(char_data("void")),__identifier(char_data("n")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (ex_paper2,actual__Alloc) = [],
       (n,__dim) = 0,
       (n,__kind) = __param,
       (n,__schedule) = [],
       (n,__text) = __declaration(__identifier(char_data(n)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (n,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (n,actual__Alloc) = [],
       (tick,__dim) = 0,
       (tick,__kind) = __global,
       (tick,__schedule) = [],
       (tick,__text) = __declaration(__inside(char_data("ex_paper2")),
         __identifier(char_data("tick")),
         __function(__identifier(char_data("tick")),
           __basic(char_data("void")),__identifier(char_data("c")),
           __basic(`$$size`("32"),char_data("__integer")))),
       (tick,__type) = __function(__identifier(char_data("tick")),
         __basic(char_data("void")),__identifier(char_data("c")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (tick,actual__Alloc) = [],
       (x,__dim) = 0,
       (x,__kind) = __private,
       (x,__schedule) = [],
       (x,__text) = __declaration(__inside(char_data("ex_paper2"),
         char_data("ex_paper2")),__identifier(char_data("x")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (x,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (x,actual__Alloc) = [],
       (y,__dim) = 0,
       (y,__kind) = __private,
       (y,__schedule) = [],
       (y,__text) = __declaration(__inside(char_data("ex_paper2"),
         char_data("ex_paper2")),__identifier(char_data("y")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (y,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (y,actual__Alloc) = []),table((lbl_1,__body) = [lbl_3],
       (lbl_1,__counter) = x,
       (lbl_1,__depth) = 0,
       (lbl_1,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("x"))),
         __expression(__constant(char_data("cst__2"))))),
       (lbl_1,__kind) = __do,
       (lbl_1,__lower) = 1,
       (lbl_1,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("x"))))),
       (lbl_1,__outer) = [],
       (lbl_1,__pas) = 1,
       (lbl_1,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("x"))),
         __expression(__identifier(char_data("n"))))),
       (lbl_1,__text) = __for(`$$label`("lbl_1"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("x"))),
           __expression(__constant(char_data("cst__2"))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("x"))),
           __expression(__identifier(char_data("n"))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("x")))))),
       (lbl_1,__upper) = n,
       (lbl_1,false__part) = [],
       (lbl_1,iteration__Domain) = {(n >= x),(x >= 1)},
       (lbl_1,local__Parameters) = {},
       (lbl_1,true__part) = [],
       (lbl_3,__body) = [lbl_4],
       (lbl_3,__counter) = y,
       (lbl_3,__depth) = 1,
       (lbl_3,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("y"))),
         __expression(__identifier(char_data("x"))))),
       (lbl_3,__kind) = __do,
       (lbl_3,__lower) = x,
       (lbl_3,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("y"))))),
       (lbl_3,__outer) = [x],
       (lbl_3,__pas) = 1,
       (lbl_3,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("y"))),
         __expression(__identifier(char_data("n"))))),
       (lbl_3,__text) = __for(`$$label`("lbl_3"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("y"))),
           __expression(__identifier(char_data("x"))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("y"))),
           __expression(__identifier(char_data("n"))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("y")))))),
       (lbl_3,__upper) = n,
       (lbl_3,false__part) = [],
       (lbl_3,iteration__Domain) = {(n >= y),(y >= x)},
       (lbl_3,local__Parameters) = {},
       (lbl_3,true__part) = []),table((lbl_4,__board) = table(),
       (lbl_4,__iteration) = [x,y],
       (lbl_4,__kind) = __funcall,
       (lbl_4,__loops) = [lbl_1,lbl_3],
       (lbl_4,__position) = [ex_paper2,ex_paper2,lbl_1,lbl_3],
       (lbl_4,__process) = ex_paper2,
       (lbl_4,__schedule) = [],
       (lbl_4,__text) = __statement(`$$label`("lbl_4"),
         __inside(char_data("ex_paper2"),char_data("ex_paper2"),
           char_data("lbl_1"),char_data("lbl_3")),
         __expression(__operator(char_data("__funcall")),
           __expression(__identifier(char_data("tick"))),
           __expression(__constant(char_data("cst__2"))))),
       (lbl_4,extended__domain) = {},
       (lbl_4,extended__iteration) = [],
       (lbl_4,inner__Constraints) = {},
       (lbl_4,inner__Variables) = [],
       (lbl_4,iteration__Domain) = {(n >= x),(n >= y),(y >= x),
         (x >= 1)},
       (lbl_4,local__Parameters) = {},
       (lbl_4,original__Read) = {},
       (lbl_4,original__Write) = {},
       (lbl_4,read__Ref) = {},
       (lbl_4,write__Ref) = {}),[n],[lbl_4],NIL,NIL,NIL,NIL,0]));
