sysassign(object,hold([NIL,NIL,NIL,NIL,[lbl_1],table((a,__dim) = 0,
       (a,__kind) = __param,
       (a,__schedule) = [],
       (a,__text) = __declaration(__identifier(char_data(a)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (a,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (a,actual__Alloc) = [],
       (b,__dim) = 0,
       (b,__kind) = __param,
       (b,__schedule) = [],
       (b,__text) = __declaration(__identifier(char_data(b)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (b,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (b,actual__Alloc) = [],
       (c,__dim) = 0,
       (c,__kind) = __param,
       (c,__schedule) = [],
       (c,__text) = __declaration(__identifier(char_data(c)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (c,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (c,actual__Alloc) = [],
       (d,__dim) = 0,
       (d,__kind) = __param,
       (d,__schedule) = [],
       (d,__text) = __declaration(__identifier(char_data(d)),
         __basic(`$$size`("32"),char_data("__integer"))),
       (d,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (d,actual__Alloc) = [],
       (i,__dim) = 0,
       (i,__kind) = __private,
       (i,__schedule) = [],
       (i,__text) = __declaration(__inside(char_data("jama_ex6"),
         char_data("jama_ex6")),__identifier(char_data("i")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (i,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (i,actual__Alloc) = [],
       (j,__dim) = 0,
       (j,__kind) = __private,
       (j,__schedule) = [],
       (j,__text) = __declaration(__inside(char_data("jama_ex6"),
         char_data("jama_ex6")),__identifier(char_data("j")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (j,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (j,actual__Alloc) = [],
       (jama_ex6,__dim) = 0,
       (jama_ex6,__formals) = [a,b,c,d],
       (jama_ex6,__kind) = __global,
       (jama_ex6,__schedule) = [],
       (jama_ex6,
         __text) = __declaration(__inside(char_data("jama_ex6")),
         __identifier(char_data("jama_ex6")),
         __function(__identifier(char_data("jama_ex6")),
           __basic(char_data("void")),__identifier(char_data("a")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("b")),__basic(`$$size`("32"),
             char_data("__integer")),__identifier(char_data("c")),
           __basic(`$$size`("32"),char_data("__integer")),
           __identifier(char_data("d")),__basic(`$$size`("32"),
             char_data("__integer")))),
       (jama_ex6,
       __type) = __function(__identifier(char_data("jama_ex6")),
         __basic(char_data("void")),__identifier(char_data("a")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("b")),__basic(`$$size`("32"),
           char_data("__integer")),__identifier(char_data("c")),
         __basic(`$$size`("32"),char_data("__integer")),
         __identifier(char_data("d")),__basic(`$$size`("32"),
           char_data("__integer"))),
       (jama_ex6,actual__Alloc) = [],
       (k,__dim) = 0,
       (k,__kind) = __private,
       (k,__schedule) = [],
       (k,__text) = __declaration(__inside(char_data("jama_ex6"),
         char_data("jama_ex6")),__identifier(char_data("k")),
         __basic(`$$size`("32"),char_data("__integer"))),
       (k,__type) = __basic(`$$size`("32"),char_data("__integer")),
       (k,actual__Alloc) = []),table((lbl_1,__body) = [lbl_2],
       (lbl_1,__counter) = i,
       (lbl_1,__depth) = 0,
       (lbl_1,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("i"))),
         __expression(__identifier(char_data("a"))))),
       (lbl_1,__kind) = __do,
       (lbl_1,__lower) = a,
       (lbl_1,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("i"))))),
       (lbl_1,__outer) = [],
       (lbl_1,__pas) = 1,
       (lbl_1,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("i"))),
         __expression(__identifier(char_data("b"))))),
       (lbl_1,__text) = __for(`$$label`("lbl_1"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("i"))),
           __expression(__identifier(char_data("a"))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("i"))),
           __expression(__identifier(char_data("b"))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("i")))))),
       (lbl_1,__upper) = b,
       (lbl_1,false__part) = [],
       (lbl_1,iteration__Domain) = {(i >= a),(b >= i)},
       (lbl_1,local__Parameters) = {},
       (lbl_1,true__part) = [],
       (lbl_2,__body) = [lbl_3],
       (lbl_2,__counter) = j,
       (lbl_2,__depth) = 1,
       (lbl_2,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("c"))))),
       (lbl_2,__kind) = __do,
       (lbl_2,__lower) = c,
       (lbl_2,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("j"))))),
       (lbl_2,__outer) = [i],
       (lbl_2,__pas) = 1,
       (lbl_2,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("j"))),
         __expression(__identifier(char_data("d"))))),
       (lbl_2,__text) = __for(`$$label`("lbl_2"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("j"))),
           __expression(__identifier(char_data("c"))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("j"))),
           __expression(__identifier(char_data("d"))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("j")))))),
       (lbl_2,__upper) = d,
       (lbl_2,false__part) = [],
       (lbl_2,iteration__Domain) = {(j >= c),(d >= j)},
       (lbl_2,local__Parameters) = {},
       (lbl_2,true__part) = [],
       (lbl_3,__body) = [lbl_4],
       (lbl_3,__counter) = k,
       (lbl_3,__depth) = 2,
       (lbl_3,
       __init) = __init(__expression(__operator(char_data("__assignment")
         ),__expression(__identifier(char_data("k"))),
         __expression(__operator(char_data("__subtraction")),
           __expression(__identifier(char_data("i"))),
           __expression(__identifier(char_data("j")))))),
       (lbl_3,__kind) = __do,
       (lbl_3,__lower) = i-j,
       (lbl_3,
       __nexter) = __next(__expression(__operator(char_data("_post_incr")
         ),__expression(__identifier(char_data("k"))))),
       (lbl_3,__outer) = [i,j],
       (lbl_3,__pas) = 1,
       (lbl_3,
       __test) = __test(__expression(__operator(char_data("__le")),
         __expression(__identifier(char_data("k"))),
         __expression(__operator(char_data("__addition")),
           __expression(__identifier(char_data("i"))),
           __expression(__identifier(char_data("j")))))),
       (lbl_3,__text) = __for(`$$label`("lbl_3"),
         __init(__expression(__operator(char_data("__assignment")),
           __expression(__identifier(char_data("k"))),
           __expression(__operator(char_data("__subtraction")),
             __expression(__identifier(char_data("i"))),
             __expression(__identifier(char_data("j")))))),
         __test(__expression(__operator(char_data("__le")),
           __expression(__identifier(char_data("k"))),
           __expression(__operator(char_data("__addition")),
             __expression(__identifier(char_data("i"))),
             __expression(__identifier(char_data("j")))))),
         __next(__expression(__operator(char_data("_post_incr")),
           __expression(__identifier(char_data("k")))))),
       (lbl_3,__upper) = i+j,
       (lbl_3,false__part) = [],
       (lbl_3,iteration__Domain) = {(j+k >= i),(i+j >= k)},
       (lbl_3,local__Parameters) = {},
       (lbl_3,true__part) = []),table((lbl_4,__board) = table(),
       (lbl_4,__iteration) = [i,j,k],
       (lbl_4,__kind) = __nop,
       (lbl_4,__loops) = [lbl_1,lbl_2,lbl_3],
       (lbl_4,__position) = [jama_ex6,jama_ex6,lbl_1,lbl_2,lbl_3],
       (lbl_4,__process) = jama_ex6,
       (lbl_4,__schedule) = [],
       (lbl_4,__text) = __statement(`$$label`("lbl_4"),
         __inside(char_data("jama_ex6"),char_data("jama_ex6"),
           char_data("lbl_1"),char_data("lbl_2"),char_data("lbl_3")),
         __nop()),
     (lbl_4,extended__domain) = {},
     (lbl_4,extended__iteration) = [],
     (lbl_4,inner__Constraints) = {},
     (lbl_4,inner__Variables) = [],
     (lbl_4,iteration__Domain) = {(i >= a),(b >= i),(j >= c),(d >= j),
       (j+k >= i),(i+j >= k)},
     (lbl_4,local__Parameters) = {},
     (lbl_4,original__Read) = {},
     (lbl_4,original__Write) = {},
     (lbl_4,read__Ref) = {},
     (lbl_4,write__Ref) = {}),[a,b,c,d],[lbl_4],NIL,NIL,NIL,NIL,0]));
