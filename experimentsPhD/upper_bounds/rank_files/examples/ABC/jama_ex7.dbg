FrontEnd version J.3
qualif jama_ex7
inside declaration [jama_ex7,jama_ex7]
inside declaration [jama_ex7,jama_ex7,i]
inside declaration [jama_ex7,jama_ex7,j]
inside declaration [jama_ex7,cst__2]
table([jama_ex7,cst__2] = __declaration(__inside(char_data("jama_ex7")),
  __constant(`$$value`("1"),char_data("cst__2")),
  __basic(char_data("__integer"))),
   [jama_ex7,jama_ex7] = __declaration(__inside(char_data("jama_ex7")),
     __identifier(char_data("jama_ex7")),
     __function(__identifier(char_data("jama_ex7")),
       __basic(char_data("void")),__identifier(char_data("n")),
       __basic(`$$size`("32"),char_data("__integer")),
       __identifier(char_data("m")),__basic(`$$size`("32"),
         char_data("__integer")))),
   [jama_ex7,jama_ex7,i] = __declaration(__inside(char_data("jama_ex7"),
     char_data("jama_ex7")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [jama_ex7,jama_ex7,j] = __declaration(__inside(char_data("jama_ex7"),
     char_data("jama_ex7")),__identifier(char_data("j")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [jama_ex7,jama_ex7,lbl_1] = __for(`$$label`("lbl_1"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("n"))))),
     __test(__expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("i"))),
       __expression(__constant(char_data("cst__2"))))),
     __next(__expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("i")))))),
   [jama_ex7,jama_ex7,lbl_1,lbl_3] = __for(`$$label`("lbl_3"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("m"))))),
     __test(__expression(__operator(char_data("__ge")),
       __expression(__identifier(char_data("j"))),
       __expression(__constant(char_data("cst__2"))))),
     __next(__expression(__operator(char_data("_post_decr")),
       __expression(__identifier(char_data("j")))))),
   [jama_ex7,jama_ex7,lbl_1,lbl_3,lbl_4] = __statement(`$$label`("lbl_4"),
     __inside(char_data("jama_ex7"),char_data("jama_ex7"),
         char_data("lbl_1"),char_data("lbl_3")),__nop()))
table([jama_ex7,jama_ex7] = [[jama_ex7,jama_ex7],[jama_ex7,cst__2],
[jama_ex7,jama_ex7],[jama_ex7,jama_ex7,i],[jama_ex7,jama_ex7,j],[jama_ex7,
  jama_ex7,lbl_1,lbl_3],[jama_ex7,jama_ex7,lbl_1],[jama_ex7,jama_ex7,lbl_1,
  lbl_3,lbl_4]])
[[jama_ex7,jama_ex7,i],[jama_ex7,jama_ex7,j],[jama_ex7,jama_ex7,lbl_1,
  lbl_3,lbl_4]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of n is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of m is 0
body [[jama_ex7,jama_ex7],[jama_ex7,cst__2],[jama_ex7,jama_ex7],[jama_ex7,
  jama_ex7,i],[jama_ex7,jama_ex7,j],[jama_ex7,jama_ex7,lbl_1,lbl_3],
[jama_ex7,jama_ex7,lbl_1],[jama_ex7,jama_ex7,lbl_1,lbl_3,lbl_4]]
examining cst__2
 is a constant
examining i
 has definitions
examining j
 has definitions
examining jama_ex7
examining m
examining n
to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified (1 > n)
to be simplified (n >= 1)
to be simplified ( (n >= 1) && (m >= 1) )
to be simplified ( (n >= 1) && (1 > m) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (i >= 1)
to be simplified (1 > i)
to be simplified (i >= 1)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (j >= 1)
to be simplified (1 > j)
to be simplified (1 > j)
to be simplified (j >= 1)
to be simplified (j >= 1)
to be simplified (1 > j)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (j >= 1)
to be simplified (1 > j)
to be simplified TRUE
to be simplified TRUE
to be simplified (1 > i)
to be simplified (i >= 1)
to be simplified ( (i >= 1) && (m >= 1) )
to be simplified ( (i >= 1) && (1 > m) )
