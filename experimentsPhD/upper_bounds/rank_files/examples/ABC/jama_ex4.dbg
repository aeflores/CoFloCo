FrontEnd version J.3
qualif jama_ex4
inside declaration [jama_ex4,jama_ex4]
inside declaration [jama_ex4,jama_ex4,i]
inside declaration [jama_ex4,jama_ex4,j]
table([jama_ex4,jama_ex4] = __declaration(__inside(char_data("jama_ex4")),
  __identifier(char_data("jama_ex4")),
  __function(__identifier(char_data("jama_ex4")),
    __basic(char_data("void")),__identifier(char_data("a")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("b")),__basic(`$$size`("32"),
      char_data("__integer")),__identifier(char_data("c")),
    __basic(`$$size`("32"),char_data("__integer")),
    __identifier(char_data("d")),__basic(`$$size`("32"),
      char_data("__integer")))),
   [jama_ex4,jama_ex4,i] = __declaration(__inside(char_data("jama_ex4"),
     char_data("jama_ex4")),__identifier(char_data("i")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [jama_ex4,jama_ex4,j] = __declaration(__inside(char_data("jama_ex4"),
     char_data("jama_ex4")),__identifier(char_data("j")),
     __basic(`$$size`("32"),char_data("__integer"))),
   [jama_ex4,jama_ex4,lbl_1] = __for(`$$label`("lbl_1"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("a"))))),
     __test(__expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("i"))),
       __expression(__identifier(char_data("b"))))),
     __next(__expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("i")))))),
   [jama_ex4,jama_ex4,lbl_1,lbl_2] = __for(`$$label`("lbl_2"),
     __init(__expression(__operator(char_data("__assignment")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("c"))))),
     __test(__expression(__operator(char_data("__le")),
       __expression(__identifier(char_data("j"))),
       __expression(__identifier(char_data("d"))))),
     __next(__expression(__operator(char_data("_post_incr")),
       __expression(__identifier(char_data("j")))))),
   [jama_ex4,jama_ex4,lbl_1,lbl_2,lbl_3] = __statement(`$$label`("lbl_3"),
     __inside(char_data("jama_ex4"),char_data("jama_ex4"),
         char_data("lbl_1"),char_data("lbl_2")),__nop()))
table([jama_ex4,jama_ex4] = [[jama_ex4,jama_ex4],[jama_ex4,jama_ex4],
[jama_ex4,jama_ex4,i],[jama_ex4,jama_ex4,j],[jama_ex4,jama_ex4,lbl_1,
lbl_2],[jama_ex4,jama_ex4,lbl_1],[jama_ex4,jama_ex4,lbl_1,lbl_2,lbl_3]])
[[jama_ex4,jama_ex4,i],[jama_ex4,jama_ex4,j],[jama_ex4,jama_ex4,lbl_1,
  lbl_2,lbl_3]]
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of a is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of b is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of c is 0
gatherFormals: typist __basic(`$$size`("32"),char_data("__integer"))
gatherFormals: tepee __basic(`$$size`("32"),char_data("__integer"))
dimension of d is 0
body [[jama_ex4,jama_ex4],[jama_ex4,jama_ex4],[jama_ex4,jama_ex4,i],
[jama_ex4,jama_ex4,j],[jama_ex4,jama_ex4,lbl_1,lbl_2],[jama_ex4,jama_ex4,
  lbl_1],[jama_ex4,jama_ex4,lbl_1,lbl_2,lbl_3]]
examining a
examining b
examining c
examining d
examining i
 has definitions
examining j
 has definitions
examining jama_ex4
to be simplified TRUE
Tableau SMT solver mark B.2 14/05/28:10:25:55
to be simplified TRUE
to be simplified (a > b)
to be simplified (b >= a)
to be simplified ( (b >= a) && (d >= c) )
to be simplified ( (b >= a) && (c > d) )
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (b >= i)
to be simplified (i > b)
to be simplified (b >= i)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (d >= j)
to be simplified (j > d)
to be simplified (j > d)
to be simplified (d >= j)
to be simplified (d >= j)
to be simplified (j > d)
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified TRUE
to be simplified (d >= j)
to be simplified (j > d)
to be simplified TRUE
to be simplified TRUE
to be simplified (i > b)
to be simplified (b >= i)
to be simplified ( (b >= i) && (d >= c) )
to be simplified ( (b >= i) && (c > d) )
