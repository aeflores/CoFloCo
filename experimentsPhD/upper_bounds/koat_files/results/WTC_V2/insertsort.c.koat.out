YES(?, 204*v_length + 54*v_length^2 + 163)

Initial complexity problem:
1:	T:
		(1, 1)    eval_insertsort_start(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb0_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_0(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_1(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_2(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_3(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_4(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_5(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_6(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_3, 1, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb1_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_3, v_i.0, v_j.0, v_length)) [ v_i.0 < v_length ]
		(?, 1)    eval_insertsort_bb1_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_3, v_i.0, v_j.0, v_length)) [ v_i.0 >= v_length ]
		(?, 1)    eval_insertsort_bb2_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, nondef.0, v_i.0, v_i.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb3_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_3, v_i.0, v_j.0, v_length)) [ v_j.0 >= 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_3, v_i.0, v_j.0, v_length)) [ v_j.0 < 0 ]
		(?, 1)    eval_insertsort_bb4_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb5_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_3, v_i.0, v_j.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb6_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_25(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_3, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_3, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_26(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_3, v_20, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb7_in(v_20, v_3, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_3, v_i.0, v_j.0, v_length))
	start location:	eval_insertsort_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_20, v_i.0, v_j.0, v_length].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length))
		(?, 1)    eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 < 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 >= 0 ]
		(?, 1)    eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 >= v_length ]
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 < v_length ]
		(?, 1)    eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(?, 1)    eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
	start location:	eval_insertsort_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length))
		(?, 1)    eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 < 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 >= 0 ]
		(?, 1)    eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 >= v_length ]
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 < v_length ]
		(1, 1)    eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(1, 1)    eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
	start location:	eval_insertsort_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_insertsort_bb7_in) = 1
	Pol(eval_insertsort_stop) = 0
	Pol(eval_insertsort_26) = 2
	Pol(eval_insertsort_bb1_in) = 2
	Pol(eval_insertsort_25) = 2
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_insertsort_bb6_in) = 2
	Pol(eval_insertsort_bb5_in) = 2
	Pol(eval_insertsort_bb3_in) = 2
	Pol(eval_insertsort_bb4_in) = 2
	Pol(eval_insertsort_bb2_in) = 2
	Pol(eval_insertsort_6) = 2
	Pol(eval_insertsort_5) = 2
	Pol(eval_insertsort_4) = 2
	Pol(eval_insertsort_3) = 2
	Pol(eval_insertsort_2) = 2
	Pol(eval_insertsort_1) = 2
	Pol(eval_insertsort_0) = 2
	Pol(eval_insertsort_bb0_in) = 2
	Pol(eval_insertsort_start) = 2
orients all transitions weakly and the transitions
	eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length))
	eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 >= v_length ]
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length))
		(?, 1)    eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 < 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_j.0 >= 0 ]
		(?, 1)    eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length))
		(2, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 >= v_length ]
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 < v_length ]
		(1, 1)    eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(1, 1)    eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
	start location:	eval_insertsort_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_insertsort_25: X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 4 >= 0 /\ -X_1 + X_4 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_1 - X_3 - 2 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 3 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_insertsort_26: X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 4 >= 0 /\ -X_1 + X_4 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_1 - X_3 - 2 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 3 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_insertsort_bb1_in: X_2 - 1 >= 0
  For symbol eval_insertsort_bb2_in: X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_insertsort_bb3_in: X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_insertsort_bb4_in: X_4 - 2 >= 0 /\ X_3 + X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_insertsort_bb5_in: X_4 - 2 >= 0 /\ X_3 + X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_insertsort_bb6_in: X_4 - 2 >= 0 /\ -X_3 + X_4 - 2 >= 0 /\ X_2 + X_4 - 3 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_2 - X_3 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_insertsort_bb7_in: X_2 - X_4 >= 0 /\ X_2 - 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(1, 1)    eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(?, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 < v_length ]
		(2, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 >= v_length ]
		(?, 1)    eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
		(?, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 < 0 ]
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)    eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)    eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)    eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(?, 1)    eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(2, 1)    eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\ v_i.0 - 1 >= 0 ]
	start location:	eval_insertsort_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_insertsort_bb6_in) = -6*V_2 + 6*V_4 - 3
	Pol(eval_insertsort_25) = -6*V_2 + 6*V_4 - 4
	Pol(eval_insertsort_bb5_in) = -6*V_2 + 6*V_4 - 2
	Pol(eval_insertsort_bb3_in) = -6*V_2 + 6*V_4 - 2
	Pol(eval_insertsort_bb4_in) = -6*V_2 + 6*V_4 - 2
	Pol(eval_insertsort_bb2_in) = -6*V_2 + 6*V_4 - 1
	Pol(eval_insertsort_bb1_in) = -6*V_2 + 6*V_4
	Pol(eval_insertsort_26) = -6*V_1 + 6*V_4 + 1
	Pol(eval_llvm.dbg.value_start) = -6*V_2 + 6
and size complexities
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-1) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-0) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-1) = v_length + 1
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-2) = v_length + 2
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-3) = v_length
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-3) = v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 1
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-1) = v_length + 1
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-3) = v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-1) = v_length + 1
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-3) = v_length
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-1) = 1
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
orients the transitions
	eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 < 0 ]
	eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
	eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 < v_length ]
	eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
	eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
weakly and the transitions
	eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 < 0 ]
	eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 < v_length ]
	eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
	eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)                 eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                 eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(6*v_length + 6, 1)    eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 < v_length ]
		(2, 1)                 eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 >= v_length ]
		(6*v_length + 6, 1)    eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)                 eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
		(6*v_length + 6, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 < 0 ]
		(?, 1)                 eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(?, 1)                 eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)    eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)    eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(6*v_length + 6, 1)    eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(2, 1)                 eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\ v_i.0 - 1 >= 0 ]
	start location:	eval_insertsort_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_insertsort_bb5_in) = 3*V_3 + 1
	Pol(eval_insertsort_bb3_in) = 3*V_3 + 3
	Pol(eval_insertsort_bb4_in) = 3*V_3 + 2
and size complexities
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-1) = v_length
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-0) = v_length
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-1) = v_length + 1
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-2) = v_length + 2
	S("eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_20 + v_length - 4 >= 0 /\\ -v_20 + v_length >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_20 - v_j.0 - 2 >= 0 /\\ v_20 - v_i.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_20 + v_i.0 - 3 >= 0 /\\ -v_20 + v_i.0 + 1 >= 0 /\\ v_20 - 2 >= 0 ]", 1-3) = v_length
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_length
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ v_j.0 + v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_j.0 >= 0 /\\ v_i.0 + v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 < 0 ]", 0-3) = v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-2) = v_length + 2
	S("eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\\ -v_j.0 + v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - v_j.0 - 1 >= 0 /\\ v_i.0 - 1 >= 0 /\\ v_j.0 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-1) = v_length + 1
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-2) = v_length + 1
	S("eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\\ v_i.0 + v_length - 3 >= 0 /\\ -v_i.0 + v_length - 1 >= 0 /\\ v_i.0 - 1 >= 0 ]", 0-3) = v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-1) = v_length + 1
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 >= v_length ]", 0-3) = v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-0) = v_20 + v_length
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-1) = v_length + 1
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-2) = v_j.0 + v_length + 2
	S("eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\\ v_i.0 < v_length ]", 0-3) = v_length
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-1) = 1
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-0) = v_20
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-1) = v_i.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-2) = v_j.0
	S("eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))", 1-3) = v_length
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-0) = v_20
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-1) = v_i.0
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-2) = v_j.0
	S("eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))", 0-3) = v_length
orients the transitions
	eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
weakly and the transitions
	eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
	eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
strictly and produces the following problem:
7:	T:
		(1, 1)                                   eval_insertsort_start(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_bb0_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_0(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_0(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_1(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_1(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_2(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_2(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_3(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_3(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_4(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_4(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_5(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_5(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_6(v_20, v_i.0, v_j.0, v_length))
		(1, 1)                                   eval_insertsort_6(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, 1, v_j.0, v_length))
		(6*v_length + 6, 1)                      eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 < v_length ]
		(2, 1)                                   eval_insertsort_bb1_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - 1 >= 0 /\ v_i.0 >= v_length ]
		(6*v_length + 6, 1)                      eval_insertsort_bb2_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_i.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(18*v_length^2 + 54*v_length + 36, 1)    eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 >= 0 ]
		(6*v_length + 6, 1)                      eval_insertsort_bb3_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_j.0 < 0 ]
		(18*v_length^2 + 54*v_length + 36, 1)    eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)                      eval_insertsort_bb4_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(18*v_length^2 + 54*v_length + 36, 1)    eval_insertsort_bb5_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb3_in(v_20, v_i.0, v_j.0 - 1, v_length)) [ v_length - 2 >= 0 /\ v_j.0 + v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)                      eval_insertsort_bb6_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_25(v_i.0 + 1, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 ]
		(6*v_length + 6, 1)                      eval_insertsort_25(v_20, v_i.0, v_j.0, v_length) -> Com_2(eval_llvm.dbg.value_start(v_20, v_i.0, v_j.0, v_length), eval_insertsort_26(v_20, v_i.0, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(6*v_length + 6, 1)                      eval_insertsort_26(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_bb1_in(v_20, v_20, v_j.0, v_length)) [ v_length - 2 >= 0 /\ -v_j.0 + v_length - 2 >= 0 /\ v_i.0 + v_length - 3 >= 0 /\ -v_i.0 + v_length - 1 >= 0 /\ v_20 + v_length - 4 >= 0 /\ -v_20 + v_length >= 0 /\ v_i.0 - v_j.0 - 1 >= 0 /\ v_20 - v_j.0 - 2 >= 0 /\ v_20 - v_i.0 - 1 >= 0 /\ v_i.0 - 1 >= 0 /\ v_20 + v_i.0 - 3 >= 0 /\ -v_20 + v_i.0 + 1 >= 0 /\ v_20 - 2 >= 0 ]
		(2, 1)                                   eval_insertsort_bb7_in(v_20, v_i.0, v_j.0, v_length) -> Com_1(eval_insertsort_stop(v_20, v_i.0, v_j.0, v_length)) [ v_i.0 - v_length >= 0 /\ v_i.0 - 1 >= 0 ]
	start location:	eval_insertsort_start
	leaf cost:	0

Complexity upper bound 204*v_length + 54*v_length^2 + 163

Time: 0.621 sec (SMT: 0.430 sec)
