MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(?, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_x.0 <= v_m ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 - 1)) [ v_x.0 > v_m ]
		(?, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_x.0 <= v_m ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 - 1)) [ v_x.0 > v_m ]
		(?, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_catmouse_start) = 2
	Pol(eval_catmouse_bb0_in) = 2
	Pol(eval_catmouse_0) = 2
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_catmouse_1) = 2
	Pol(eval_catmouse_2) = 2
	Pol(eval_catmouse_3) = 2
	Pol(eval_catmouse_4) = 2
	Pol(eval_catmouse_5) = 2
	Pol(eval_catmouse_bb1_in) = 2
	Pol(eval_catmouse_bb2_in) = 2
	Pol(eval_catmouse_bb3_in) = 1
	Pol(eval_catmouse_stop) = 0
orients all transitions weakly and the transitions
	eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0))
	eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(2, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_x.0 <= v_m ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 - 1)) [ v_x.0 > v_m ]
		(2, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_catmouse_bb2_in: X_2 - X_3 >= 0
  For symbol eval_catmouse_bb3_in: -X_2 + X_3 - 1 >= 0


This yielded the following problem:
4:	T:
		(2, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m ] with all transitions in problem 4, the following new transition is obtained:
	eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb3_in(v_m, v_n, v_x.0)) [ v_x.0 > v_n ] with all transitions in problem 5, the following new transition is obtained:
	eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
We thus obtain the following problem:
6:	T:
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 1)    eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_catmouse_bb3_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ -v_n + v_x.0 - 1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_0(v_m, v_n, v_x.0)) with all transitions in problem 7, the following new transition is obtained:
	eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
We thus obtain the following problem:
8:	T:
		(1, 2)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_catmouse_0(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 2)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_start(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb0_in(v_m, v_n, v_x.0)) with all transitions in problem 9, the following new transition is obtained:
	eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
We thus obtain the following problem:
10:	T:
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 2)    eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_catmouse_bb0_in(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(?, 1)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m ] with all transitions in problem 11, the following new transitions are obtained:
	eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
	eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(?, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 12 produces the following problem:
13:	T:
		(?, 3)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(1, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_catmouse_bb2_in) = 1
	Pol(eval_catmouse_stop) = 0
	Pol(eval_catmouse_bb1_in) = 1
	Pol(eval_catmouse_5) = 1
	Pol(eval_catmouse_4) = 1
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_catmouse_3) = 1
	Pol(eval_catmouse_2) = 1
	Pol(eval_catmouse_1) = 1
	Pol(eval_catmouse_start) = 1
orients all transitions weakly and the transition
	eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
strictly and produces the following problem:
14:	T:
		(1, 3)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(1, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0))
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

By chaining the transition eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb1_in(v_m, v_n, 0)) with all transitions in problem 14, the following new transitions are obtained:
	eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, 0)) [ 0 > v_n /\ -v_n - 1 >= 0 ]
	eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, 0)) [ 0 <= v_n ]
We thus obtain the following problem:
15:	T:
		(1, 3)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, 0)) [ 0 > v_n /\ -v_n - 1 >= 0 ]
		(1, 2)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, 0)) [ 0 <= v_n ]
		(1, 3)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(2, 2)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
		(1, 1)    eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 15:
	eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0)) [ v_x.0 > v_n /\ -v_n + v_x.0 - 1 >= 0 ]
	eval_catmouse_bb1_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0)) [ v_x.0 <= v_n ]
We thus obtain the following problem:
16:	T:
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 <= v_n ]
		(1, 3)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, v_x.0 + 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 <= v_m /\ v_x.0 + 1 > v_n /\ -v_n + v_x.0 >= 0 ]
		(?, 2)    eval_catmouse_bb2_in(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, v_x.0 - 1)) [ v_n - v_x.0 >= 0 /\ v_x.0 > v_m /\ v_x.0 - 1 <= v_n ]
		(1, 2)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_bb2_in(v_m, v_n, 0)) [ 0 <= v_n ]
		(1, 3)    eval_catmouse_5(v_m, v_n, v_x.0) -> Com_1(eval_catmouse_stop(v_m, v_n, 0)) [ 0 > v_n /\ -v_n - 1 >= 0 ]
		(1, 1)    eval_catmouse_4(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_5(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_3(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_4(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_2(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_3(v_m, v_n, v_x.0))
		(1, 1)    eval_catmouse_1(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_2(v_m, v_n, v_x.0))
		(1, 3)    eval_catmouse_start(v_m, v_n, v_x.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_x.0), eval_catmouse_1(v_m, v_n, v_x.0))
	start location:	eval_catmouse_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.726 sec (SMT: 0.546 sec)
