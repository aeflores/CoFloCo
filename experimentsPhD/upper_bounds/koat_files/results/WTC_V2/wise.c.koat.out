YES(?, 8*v_x + 8*v_y + 17)

Initial complexity problem:
1:	T:
		(1, 1)    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01, v_x, v_y)) [ v_.0 < v_.01 /\ v_.0 >= v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 /\ v_.0 < v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(?, 1)    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 1:
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01, v_x, v_y)) [ v_.0 < v_.01 /\ v_.0 >= v_.01 ]
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 /\ v_.0 < v_.01 ]
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(?, 1)    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(?, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(?, 1)    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(?, 1)    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(?, 1)    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(1, 1)    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_wise_.critedge_in) = 2
	Pol(eval_wise_bb1_in) = 2
	Pol(eval_wise_bb2_in) = 1
	Pol(eval_wise_stop) = 0
	Pol(eval_wise_2) = 2
	Pol(eval_wise_1) = 2
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_wise_0) = 2
	Pol(eval_wise_bb0_in) = 2
	Pol(eval_wise_start) = 2
orients all transitions weakly and the transitions
	eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
	eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
strictly and produces the following problem:
4:	T:
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(?, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(2, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(?, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(2, 1)    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(1, 1)    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(1, 1)    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(1, 1)    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_wise_bb1_in) = 2*V_1 - 2*V_2 + 2
	Pol(eval_wise_.critedge_in) = 2*V_1 - 2*V_2 + 1
and size complexities
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-0) = v_.0
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-1) = v_.01
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-2) = v_x
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-3) = v_y
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-0) = v_.0
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-1) = v_.01
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-2) = v_x
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-0) = v_.0
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-1) = v_.01
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-0) = v_.0
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-1) = v_.01
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-0) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-1) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-3) = v_y
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-0) = ?
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-1) = ?
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-0) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-1) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-0) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-1) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-0) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-1) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-3) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-0) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-1) = ?
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-2) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-3) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-0) = ?
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-1) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-2) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-3) = v_y
orients the transitions
	eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
weakly and the transitions
	eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
strictly and produces the following problem:
5:	T:
		(?, 1)                    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(2*v_x + 2*v_y + 2, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(2, 1)                    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(?, 1)                    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(2*v_x + 2*v_y + 2, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(2, 1)                    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(1, 1)                    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_wise_bb1_in) = -2*V_1 + 2*V_2 + 1
	Pol(eval_wise_.critedge_in) = -2*V_1 + 2*V_2
and size complexities
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-0) = v_.0
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-1) = v_.01
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-2) = v_x
	S("eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))", 1-3) = v_y
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-0) = v_.0
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-1) = v_.01
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-0) = v_.0
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-1) = v_.01
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-2) = v_x
	S("eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))", 1-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-0) = v_.0
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-1) = v_.01
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]", 0-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-0) = v_.0
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-1) = v_.01
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]", 0-3) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-0) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-1) = v_y
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-2) = v_x
	S("eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\\ v_y >= 0 ]", 0-3) = v_y
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-0) = ?
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-1) = 3*v_.01 + 3*v_x + 3*v_y + 162
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-2) = v_x
	S("eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-0) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-1) = 3*v_x + 3*v_y + 18
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-0) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-1) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]", 0-3) = v_y
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-0) = ?
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-1) = 3*v_x + 3*v_y + 54
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-2) = v_x
	S("eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\\ v_.01 - v_.0 <= 2 ]", 0-3) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-0) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-1) = 3*v_x + 3*v_y + 18
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-2) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]", 0-3) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-0) = ?
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-1) = v_y
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-2) = v_x
	S("eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]", 0-3) = v_y
orients the transitions
	eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
weakly and the transitions
	eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
	eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
strictly and produces the following problem:
6:	T:
		(2*v_x + 2*v_y + 1, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0 + 1, v_.01, v_x, v_y)) [ v_.0 < v_.01 ]
		(2*v_x + 2*v_y + 2, 1)    eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_.0, v_.01 + 1, v_x, v_y)) [ v_.0 >= v_.01 ]
		(2, 1)                    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 <= 2 /\ v_.01 - v_.0 <= 2 ]
		(2*v_x + 2*v_y + 1, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.01 - v_.0 > 2 ]
		(2*v_x + 2*v_y + 2, 1)    eval_wise_bb1_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_.critedge_in(v_.0, v_.01, v_x, v_y)) [ v_.0 - v_.01 > 2 ]
		(2, 1)                    eval_wise_bb2_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_stop(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb1_in(v_x, v_y, v_x, v_y)) [ v_x >= 0 /\ v_y >= 0 ]
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_y < 0 ]
		(1, 1)                    eval_wise_2(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb2_in(v_.0, v_.01, v_x, v_y)) [ v_x < 0 ]
		(1, 1)                    eval_wise_1(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_2(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_0(v_.0, v_.01, v_x, v_y) -> Com_2(eval_llvm.dbg.value_start(v_.0, v_.01, v_x, v_y), eval_wise_1(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_bb0_in(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_0(v_.0, v_.01, v_x, v_y))
		(1, 1)                    eval_wise_start(v_.0, v_.01, v_x, v_y) -> Com_1(eval_wise_bb0_in(v_.0, v_.01, v_x, v_y))
	start location:	eval_wise_start
	leaf cost:	0

Complexity upper bound 8*v_x + 8*v_y + 17

Time: 0.155 sec (SMT: 0.116 sec)
