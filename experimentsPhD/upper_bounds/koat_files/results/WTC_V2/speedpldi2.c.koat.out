YES(?, 20*v_n + 15)

Initial complexity problem:
1:	T:
		(1, 1)    eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))
		(?, 1)    eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))
		(?, 1)    eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))
		(?, 1)    eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))
		(?, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\ v_m > 0 ]
		(?, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]
		(?, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 > 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 <= 0 ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 < v_m ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= v_m ]
		(?, 1)    eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1))
		(?, 1)    eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
	start location:	eval_speedpldi2_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\ v_m > 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 > 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 <= 0 ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 < v_m ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= v_m ]
		(?, 1)    eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1))
		(?, 1)    eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
	start location:	eval_speedpldi2_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_speedpldi2_start) = 2
	Pol(eval_speedpldi2_bb0_in) = 2
	Pol(eval_speedpldi2_0) = 2
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_speedpldi2_1) = 2
	Pol(eval_speedpldi2_2) = 2
	Pol(eval_speedpldi2_bb1_in) = 2
	Pol(eval_speedpldi2_bb4_in) = 1
	Pol(eval_speedpldi2_bb2_in) = 2
	Pol(eval_speedpldi2_bb3_in) = 2
	Pol(eval_speedpldi2_stop) = 0
orients all transitions weakly and the transitions
	eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
	eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 <= 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\ v_m > 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 > 0 ]
		(2, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v1.0 <= 0 ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 < v_m ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= v_m ]
		(?, 1)    eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1))
		(2, 1)    eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
	start location:	eval_speedpldi2_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_speedpldi2_bb1_in: X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_speedpldi2_bb2_in: X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_speedpldi2_bb3_in: X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
4:	T:
		(2, 1)    eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
		(?, 1)    eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 >= v_m ]
		(?, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 < v_m ]
		(2, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 <= 0 ]
		(?, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 > 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]
		(1, 1)    eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\ v_m > 0 ]
		(1, 1)    eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)    eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))
	start location:	eval_speedpldi2_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_speedpldi2_bb3_in) = 5*V_3 + 2*V_4 - 1
	Pol(eval_speedpldi2_bb1_in) = 5*V_3 + 2*V_4 + 1
	Pol(eval_speedpldi2_bb2_in) = 5*V_3 + 2*V_4
and size complexities
	S("eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))", 0-0) = v_m
	S("eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))", 0-1) = v_n
	S("eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))", 0-2) = v_v1.0
	S("eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))", 0-3) = v_v2.0
	S("eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))", 0-0) = v_m
	S("eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))", 0-1) = v_n
	S("eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))", 0-2) = v_v1.0
	S("eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))", 0-3) = v_v2.0
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 0-0) = v_m
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 0-1) = v_n
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 0-2) = v_v1.0
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 0-3) = v_v2.0
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 1-0) = v_m
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 1-1) = v_n
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 1-2) = v_v1.0
	S("eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))", 1-3) = v_v2.0
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 0-0) = v_m
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 0-1) = v_n
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 0-2) = v_v1.0
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 0-3) = v_v2.0
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 1-0) = v_m
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 1-1) = v_n
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 1-2) = v_v1.0
	S("eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))", 1-3) = v_v2.0
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\\ v_m > 0 ]", 0-0) = v_m
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\\ v_m > 0 ]", 0-1) = v_n
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\\ v_m > 0 ]", 0-2) = v_n
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\\ v_m > 0 ]", 0-3) = 0
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]", 0-0) = v_m
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]", 0-1) = v_n
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]", 0-2) = v_v1.0
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]", 0-3) = v_v2.0
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]", 0-0) = v_m
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]", 0-1) = v_n
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]", 0-2) = v_v1.0
	S("eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]", 0-3) = v_v2.0
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 > 0 ]", 0-0) = v_m
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 > 0 ]", 0-1) = v_n
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 > 0 ]", 0-2) = v_n
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 > 0 ]", 0-3) = v_m
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 <= 0 ]", 0-0) = v_m
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 <= 0 ]", 0-1) = v_n
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 <= 0 ]", 0-2) = 0
	S("eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 >= 0 /\\ v_n + v_v2.0 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 >= 0 /\\ v_n + v_v1.0 >= 0 /\\ v_m + v_v1.0 - 1 >= 0 /\\ v_n >= 0 /\\ v_m + v_n - 1 >= 0 /\\ v_m - 1 >= 0 /\\ v_v1.0 <= 0 ]", 0-3) = v_m
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 < v_m ]", 0-0) = v_m
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 < v_m ]", 0-1) = v_n
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 < v_m ]", 0-2) = v_n
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 < v_m ]", 0-3) = v_m
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 >= v_m ]", 0-0) = v_m
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 >= v_m ]", 0-1) = v_n
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 >= v_m ]", 0-2) = v_n
	S("eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 /\\ v_v2.0 >= v_m ]", 0-3) = 0
	S("eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\\ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 ]", 0-0) = v_m
	S("eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\\ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 ]", 0-1) = v_n
	S("eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\\ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 ]", 0-2) = v_n
	S("eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\\ v_v2.0 >= 0 /\\ v_v1.0 + v_v2.0 - 1 >= 0 /\\ v_n + v_v2.0 - 1 >= 0 /\\ v_m + v_v2.0 - 1 >= 0 /\\ v_n - v_v1.0 >= 0 /\\ v_v1.0 - 1 >= 0 /\\ v_n + v_v1.0 - 2 >= 0 /\\ v_m + v_v1.0 - 2 >= 0 /\\ v_n - 1 >= 0 /\\ v_m + v_n - 2 >= 0 /\\ v_m - 1 >= 0 ]", 0-3) = v_m
	S("eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))", 0-0) = v_m
	S("eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))", 0-1) = v_n
	S("eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))", 0-2) = v_v1.0
	S("eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))", 0-3) = v_m + v_v2.0
orients the transitions
	eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 ]
	eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 < v_m ]
	eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 >= v_m ]
	eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 > 0 ]
weakly and the transitions
	eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 ]
	eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 < v_m ]
	eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 >= v_m ]
	eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 > 0 ]
strictly and produces the following problem:
5:	T:
		(2, 1)            eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_stop(v_m, v_n, v_v1.0, v_v2.0))
		(5*v_n + 1, 1)    eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0 - 1, v_v2.0 + 1)) [ v_m - v_v2.0 - 1 >= 0 /\ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 ]
		(5*v_n + 1, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, 0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 >= v_m ]
		(5*v_n + 1, 1)    eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb3_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 - 1 >= 0 /\ v_n + v_v2.0 - 1 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 - 1 >= 0 /\ v_n + v_v1.0 - 2 >= 0 /\ v_m + v_v1.0 - 2 >= 0 /\ v_n - 1 >= 0 /\ v_m + v_n - 2 >= 0 /\ v_m - 1 >= 0 /\ v_v2.0 < v_m ]
		(2, 1)            eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 <= 0 ]
		(5*v_n + 1, 1)    eval_speedpldi2_bb1_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb2_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_v2.0 >= 0 /\ v_v1.0 + v_v2.0 >= 0 /\ v_n + v_v2.0 >= 0 /\ v_m + v_v2.0 - 1 >= 0 /\ v_n - v_v1.0 >= 0 /\ v_v1.0 >= 0 /\ v_n + v_v1.0 >= 0 /\ v_m + v_v1.0 - 1 >= 0 /\ v_n >= 0 /\ v_m + v_n - 1 >= 0 /\ v_m - 1 >= 0 /\ v_v1.0 > 0 ]
		(1, 1)            eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_m <= 0 ]
		(1, 1)            eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb4_in(v_m, v_n, v_v1.0, v_v2.0)) [ v_n < 0 ]
		(1, 1)            eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb1_in(v_m, v_n, v_n, 0)) [ v_n >= 0 /\ v_m > 0 ]
		(1, 1)            eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_2(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)            eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0) -> Com_2(eval_llvm.dbg.value_start(v_m, v_n, v_v1.0, v_v2.0), eval_speedpldi2_1(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)            eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_0(v_m, v_n, v_v1.0, v_v2.0))
		(1, 1)            eval_speedpldi2_start(v_m, v_n, v_v1.0, v_v2.0) -> Com_1(eval_speedpldi2_bb0_in(v_m, v_n, v_v1.0, v_v2.0))
	start location:	eval_speedpldi2_start
	leaf cost:	0

Complexity upper bound 20*v_n + 15

Time: 0.305 sec (SMT: 0.242 sec)
