YES(?, 2*v_b + 2*v_a + 13)

Initial complexity problem:
1:	T:
		(1, 1)    eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))
		(?, 1)    eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))
		(?, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
		(?, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
		(?, 1)    eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
		(?, 1)    eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	start location:	eval_abc_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))
		(?, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
		(?, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
		(?, 1)    eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
		(?, 1)    eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	start location:	eval_abc_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_abc_start) = 2
	Pol(eval_abc_bb0_in) = 2
	Pol(eval_abc_0) = 2
	Pol(eval_llvm.dbg.value_start) = 0
	Pol(eval_abc_1) = 2
	Pol(eval_abc_2) = 2
	Pol(eval_abc_3) = 2
	Pol(eval_abc_4) = 2
	Pol(eval_abc_bb1_in) = 2
	Pol(eval_abc_bb2_in) = 2
	Pol(eval_abc_bb3_in) = 1
	Pol(eval_abc_stop) = 0
orients all transitions weakly and the transitions
	eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))
		(1, 1)    eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))
		(?, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
		(2, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
		(?, 1)    eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
		(2, 1)    eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	start location:	eval_abc_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_abc_bb2_in) = V_2 - V_3
	Pol(eval_abc_bb1_in) = V_2 - V_3 + 1
and size complexities
	S("eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))", 0-2) = ?
	S("eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))", 0-0) = v_a
	S("eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))", 0-1) = v_b
	S("eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))", 0-2) = ?
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]", 0-0) = v_a
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]", 0-1) = v_b
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]", 0-2) = ?
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]", 0-0) = v_a
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]", 0-1) = v_b
	S("eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]", 0-2) = ?
	S("eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))", 0-0) = v_a
	S("eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))", 0-1) = v_b
	S("eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))", 0-2) = v_a
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 0-2) = v_i.0
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 1-0) = v_a
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 1-1) = v_b
	S("eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))", 1-2) = v_i.0
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 0-2) = v_i.0
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 1-0) = v_a
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 1-1) = v_b
	S("eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))", 1-2) = v_i.0
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 0-2) = v_i.0
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 1-0) = v_a
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 1-1) = v_b
	S("eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))", 1-2) = v_i.0
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 0-2) = v_i.0
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 1-0) = v_a
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 1-1) = v_b
	S("eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))", 1-2) = v_i.0
	S("eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))", 0-2) = v_i.0
	S("eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))", 0-0) = v_a
	S("eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))", 0-1) = v_b
	S("eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))", 0-2) = v_i.0
orients the transitions
	eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
	eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
weakly and the transition
	eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
strictly and produces the following problem:
4:	T:
		(1, 1)                eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))
		(v_b + v_a + 1, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
		(2, 1)                eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
		(?, 1)                eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
		(2, 1)                eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	start location:	eval_abc_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 4 produces the following problem:
5:	T:
		(1, 1)                eval_abc_start(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb0_in(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_bb0_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_0(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_0(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_1(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_1(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_2(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_2(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_3(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_3(v_a, v_b, v_i.0) -> Com_2(eval_llvm.dbg.value_start(v_a, v_b, v_i.0), eval_abc_4(v_a, v_b, v_i.0))
		(1, 1)                eval_abc_4(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_a))
		(v_b + v_a + 1, 1)    eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb2_in(v_a, v_b, v_i.0)) [ v_i.0 <= v_b ]
		(2, 1)                eval_abc_bb1_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb3_in(v_a, v_b, v_i.0)) [ v_i.0 > v_b ]
		(v_b + v_a + 1, 1)    eval_abc_bb2_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_bb1_in(v_a, v_b, v_i.0 + 1))
		(2, 1)                eval_abc_bb3_in(v_a, v_b, v_i.0) -> Com_1(eval_abc_stop(v_a, v_b, v_i.0))
	start location:	eval_abc_start
	leaf cost:	0

Complexity upper bound 2*v_b + 2*v_a + 13

Time: 0.160 sec (SMT: 0.134 sec)
