YES(?, 34440*v_n^2 + 2008470551*v_n + 1951053182)

Initial complexity problem:
1:	T:
		(1, 1)    eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
		(?, 1)    eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(?, 1)    eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(?, 1)    eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> eval_abc_bb5_in(v_i.0, v_j.0, v_n) [ v_i.0 > v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(?, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
		(?, 1)    eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
		(?, 1)    eval_abc_bb5_in(v_i.0, v_j.0, v_n) -> eval_abc_stop(v_i.0, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
		(?, 1)    eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(?, 1)    eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(?, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
		(?, 1)    eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	2

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
		(1, 1)    eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(?, 1)    eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(?, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
		(?, 1)    eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	2

Separating problem 3 produces the isolated subproblem
10001:	T:
		(1, 0)    inner_10000_start_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n)
		(?, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
		(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
	start location:	inner_10000_start_sep
	leaf cost:	0

=== begin of proof for isolated subproblem 10001 ===
	Initial complexity problem:
	10001:	T:
			(1, 0)    inner_10000_start_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n)
			(?, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
			(?, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		start location:	inner_10000_start_sep
		leaf cost:	0
	
	A polynomial rank function with
		Pol(inner_10000_start_sep) = -2*V_1 + 2*V_3 + 1
		Pol(eval_abc_bb2_in) = -2*V_2 + 2*V_3 + 1
		Pol(eval_abc_bb3_in) = -2*V_2 + 2*V_3
	orients all transitions weakly and the transition
		eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
	strictly and produces the following problem:
	10002:	T:
			(1, 0)                      inner_10000_start_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n)
			(?, 1)                      eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
			(2*v_i.0 + 2*v_n + 1, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		start location:	inner_10000_start_sep
		leaf cost:	0
	
	Repeatedly propagating knowledge in problem 10002 produces the following problem:
	10003:	T:
			(1, 0)                      inner_10000_start_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_i.0, v_n)
			(2*v_i.0 + 2*v_n + 1, 1)    eval_abc_bb3_in(v_i.0, v_j.0, v_n) -> eval_abc_bb2_in(v_i.0, v_j.0 + 1, v_n)
			(2*v_i.0 + 2*v_n + 1, 1)    eval_abc_bb2_in(v_i.0, v_j.0, v_n) -> eval_abc_bb3_in(v_i.0, v_j.0, v_n) [ v_j.0 <= v_n ]
		start location:	inner_10000_start_sep
		leaf cost:	0
=== end of proof for isolated subproblem 10001 ===

Applying the information from the isolated subproblem 10001 to problem 3 produces the following problem:
4:	T:
		(?, 0)                      inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0, v_n)
		(?, 4*v_i.0 + 4*v_n + 2)    inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_compl_sep(v_i.0, v_j.0, v_n)
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(?, 1)                      inner_10000_out_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(?, 1)                      eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> inner_10000_in_sep(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(?, 1)                      eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
		(1, 1)                      eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(1, 1)                      eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	2

A polynomial rank function with
	Pol(inner_10000_in_sep) = -35*V_1 + 35*V_3 - 30
	Pol(inner_10000_out_sep) = -35*V_1 + 35*V_3 - 32
	Pol(inner_10000_compl_sep) = -35*V_1 + 35*V_3 - 31
	Pol(eval_abc_bb4_in) = -35*V_1 + 35*V_3 - 33
	Pol(eval_abc_bb1_in) = -35*V_1 + 35*V_3 + 1
	Pol(eval_abc_bb0_in) = 35*V_3 - 34
	Pol(eval_abc_start) = 35*V_3 - 34
orients all transitions weakly and the transitions
	inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
	inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
	eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> inner_10000_in_sep(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
strictly and produces the following problem:
5:	T:
		(?, 0)                      inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0, v_n)
		(?, 4*v_i.0 + 4*v_n + 2)    inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_compl_sep(v_i.0, v_j.0, v_n)
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)            inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)            inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(?, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(?, 1)                      inner_10000_out_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(35*v_n + 34, 1)            eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> inner_10000_in_sep(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(?, 1)                      eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
		(1, 1)                      eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(1, 1)                      eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	2

Repeatedly propagating knowledge in problem 5 produces the following problem:
6:	T:
		(35*v_n + 34, 0)                      inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0, v_n)
		(35*v_n + 34, 4*v_i.0 + 4*v_n + 2)    inner_10000_in_sep(v_i.0, v_j.0, v_n) -> inner_10000_compl_sep(v_i.0, v_j.0, v_n)
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n >= 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 + 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 >= 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= 3*v_i.0 - 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep >= 0 /\ v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(35*v_n + 34, 0)                      inner_10000_compl_sep(v_i.0, v_j.0, v_n) -> inner_10000_out_sep(v_i.0, v_j.0_sep, v_n) [ v_n < 0 /\ v_i.0 < 0 /\ v_j.0_sep < 0 /\ -v_j.0_sep <= -3*v_i.0 - 3*v_n + 9 ]
		(245*v_n + 238, 1)                    inner_10000_out_sep(v_i.0, v_j.0, v_n) -> eval_abc_bb4_in(v_i.0, v_j.0, v_n) [ v_j.0 > v_n ]
		(35*v_n + 34, 1)                      eval_abc_bb1_in(v_i.0, v_j.0, v_n) -> inner_10000_in_sep(v_i.0, v_i.0, v_n) [ v_i.0 <= v_n ]
		(245*v_n + 238, 1)                    eval_abc_bb4_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(v_i.0 + 1, v_j.0, v_n)
		(1, 1)                                eval_abc_bb0_in(v_i.0, v_j.0, v_n) -> eval_abc_bb1_in(1, v_j.0, v_n)
		(1, 1)                                eval_abc_start(v_i.0, v_j.0, v_n) -> eval_abc_bb0_in(v_i.0, v_j.0, v_n)
	start location:	eval_abc_start
	leaf cost:	2

Complexity upper bound 34440*v_n^2 + 2008470551*v_n + 1951053182

Time: 0.731 sec (SMT: 0.635 sec)
