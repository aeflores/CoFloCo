eq(start(V, V1, V2, V3),0,[isNat(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[and(V, V1, Out)],[V >= 0,V1 >= 0]).
eq(start(V, V1, V2, V3),0,[isNatList(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[activate(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[zeros(Out)],[]).
eq(start(V, V1, V2, V3),0,[length(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[nil(Out)],[]).
eq(start(V, V1, V2, V3),0,[take(V, V1, Out)],[V >= 0,V1 >= 0]).
eq(start(V, V1, V2, V3),0,[uTake1(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[uTake2(V, V1, V2, V3, Out)],[V >= 0,V1 >= 0,V2 >= 0,V3 >= 0]).
eq(start(V, V1, V2, V3),0,[fun(Out)],[]).
eq(start(V, V1, V2, V3),0,[cons(V, V1, Out)],[V >= 0,V1 >= 0]).
eq(start(V, V1, V2, V3),0,[isNatIList(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[s(V, Out)],[V >= 0]).
eq(start(V, V1, V2, V3),0,[uLength(V, V1, Out)],[V >= 0,V1 >= 0]).
eq(isNat(V, Out),1,[activate(L1, Ret0),isNatList(Ret0, Ret)],[Out = Ret,V = 1 + L1,L1 >= 0]).
eq(and(V, V1, Out),1,[],[Out = T1,V1 = T1,V = 1,T1 >= 0]).
eq(isNat(V, Out),1,[activate(N1, Ret01),isNat(Ret01, Ret1)],[Out = Ret1,V = 1 + N1,N1 >= 0]).
eq(isNatList(V, Out),1,[activate(N2, Ret00),isNat(Ret00, Ret02),activate(L2, Ret10),isNatList(Ret10, Ret11),and(Ret02, Ret11, Ret2)],[Out = Ret2,V = 1 + L2 + N2,L2 >= 0,N2 >= 0]).
eq(activate(V, Out),1,[take(X11, X21, Ret3)],[Out = Ret3,X11 >= 0,X21 >= 0,V = 1 + X11 + X21]).
eq(zeros(Out),1,[fun(Ret03),cons(Ret03, 2, Ret4)],[Out = Ret4]).
eq(length(V, Out),1,[],[Out = 1 + X3,X3 >= 0,V = X3]).
eq(nil(Out),1,[],[Out = 1]).
eq(take(V, V1, Out),1,[],[Out = 1 + X12 + X22,X12 >= 0,X22 >= 0,V = X12,V1 = X22]).
eq(activate(V, Out),1,[fun(Ret5)],[Out = Ret5,V = 0]).
eq(uTake1(V, Out),1,[nil(Ret6)],[Out = Ret6,V = 1]).
eq(activate(V, Out),1,[nil(Ret7)],[Out = Ret7,V = 1]).
eq(activate(V, Out),1,[s(X4, Ret8)],[Out = Ret8,V = 1 + X4,X4 >= 0]).
eq(activate(V, Out),1,[zeros(Ret9)],[Out = Ret9,V = 2]).
eq(isNatList(V, Out),1,[],[Out = 1,V = 1]).
eq(uTake2(V, V1, V2, V3, Out),1,[activate(N3, Ret04),activate(M1, Ret101),activate(IL1, Ret111),cons(Ret04, 1 + Ret101 + Ret111, Ret12)],[Out = Ret12,V1 = M1,V = 1,V3 = IL1,V2 = N3,M1 >= 0,IL1 >= 0,N3 >= 0]).
eq(fun(Out),1,[],[Out = 0]).
eq(activate(V, Out),1,[],[Out = X5,X5 >= 0,V = X5]).
eq(activate(V, Out),1,[length(X6, Ret13)],[Out = Ret13,V = 1 + X6,X6 >= 0]).
eq(cons(V, V1, Out),1,[],[Out = 1 + X13 + X23,X13 >= 0,X23 >= 0,V = X13,V1 = X23]).
eq(isNat(V, Out),1,[],[Out = 1,V = 0]).
eq(isNatIList(V, Out),1,[activate(N4, Ret001),isNat(Ret001, Ret05),activate(IL2, Ret102),isNatIList(Ret102, Ret14),and(Ret05, Ret14, Ret15)],[Out = Ret15,V = 1 + IL2 + N4,IL2 >= 0,N4 >= 0]).
eq(activate(V, Out),1,[cons(X14, X24, Ret16)],[Out = Ret16,X14 >= 0,X24 >= 0,V = 1 + X14 + X24]).
eq(isNatIList(V, Out),1,[],[Out = 1,V = 2]).
eq(isNatList(V, Out),1,[activate(N5, Ret002),isNat(Ret002, Ret06),activate(IL3, Ret103),isNatIList(Ret103, Ret17),and(Ret06, Ret17, Ret18)],[Out = Ret18,V = 1 + IL3 + N5,IL3 >= 0,N5 >= 0]).
eq(zeros(Out),1,[],[Out = 2]).
eq(s(V, Out),1,[],[Out = 1 + X7,X7 >= 0,V = X7]).
eq(isNatIList(V, Out),1,[activate(IL4, Ret07),isNatList(Ret07, Ret19)],[Out = Ret19,V = IL4,IL4 >= 0]).
eq(uLength(V, V1, Out),1,[activate(L3, Ret003),length(Ret003, Ret08),s(Ret08, Ret20)],[Out = Ret20,V = 1,L3 >= 0,V1 = L3]).
eq(isNat(V, Out),0,[],[Out = 0,V4 >= 0,V = V4]).
eq(isNatList(V, Out),0,[],[Out = 0,V5 >= 0,V = V5]).
eq(and(V, V1, Out),0,[],[Out = 0,V7 >= 0,V6 >= 0,V = V7,V1 = V6]).
eq(uTake1(V, Out),0,[],[Out = 0,V8 >= 0,V = V8]).
eq(uTake2(V, V1, V2, V3, Out),0,[],[Out = 0,V3 = V11,V9 >= 0,V2 = V12,V10 >= 0,V = V9,V1 = V10,V12 >= 0,V11 >= 0]).
eq(uLength(V, V1, Out),0,[],[Out = 0,V13 >= 0,V14 >= 0,V = V13,V1 = V14]).
input_output_vars(isNat(V,Out),[V],[Out]).
input_output_vars(and(V,V1,Out),[V,V1],[Out]).
input_output_vars(isNatList(V,Out),[V],[Out]).
input_output_vars(activate(V,Out),[V],[Out]).
input_output_vars(zeros(Out),[],[Out]).
input_output_vars(length(V,Out),[V],[Out]).
input_output_vars(nil(Out),[],[Out]).
input_output_vars(take(V,V1,Out),[V,V1],[Out]).
input_output_vars(uTake1(V,Out),[V],[Out]).
input_output_vars(uTake2(V,V1,V2,V3,Out),[V,V1,V2,V3],[Out]).
input_output_vars(fun(Out),[],[Out]).
input_output_vars(cons(V,V1,Out),[V,V1],[Out]).
input_output_vars(isNatIList(V,Out),[V],[Out]).
input_output_vars(s(V,Out),[V],[Out]).
input_output_vars(uLength(V,V1,Out),[V,V1],[Out]).
