eq(start(V, V3, V13, V15),0,[fun(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[fun1(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(start(V, V3, V13, V15),0,[insert(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(start(V, V3, V13, V15),0,[fun4(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(start(V, V3, V13, V15),0,[fun5(V, V3, V13, V15, Out)],[V >= 0,V3 >= 0,V13 >= 0,V15 >= 0]).
eq(start(V, V3, V13, V15),0,[insertD(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(start(V, V3, V13, V15),0,[fun6(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(start(V, V3, V13, V15),0,[fun7(V, V3, V13, V15, Out)],[V >= 0,V3 >= 0,V13 >= 0,V15 >= 0]).
eq(start(V, V3, V13, V15),0,[insertionsort(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[fun8(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[insertionsortD(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[fun9(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[testInsertionsort(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[testInsertionsortD(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[testList(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[fun2(V, Out)],[V >= 0]).
eq(start(V, V3, V13, V15),0,[fun3(V, V3, Out)],[V >= 0,V3 >= 0]).
eq(fun(V, Out),1,[],[Out = 0,V = 0]).
eq(fun(V, Out),1,[],[Out = 1 + V1,V1 >= 0,V = 1 + V1]).
eq(fun(V, Out),1,[],[Out = 2 + V2,V2 >= 0,V = 1 + V2]).
eq(fun1(V, V3, Out),1,[fun3(V4, V5, Ret0),fun2(Ret0, Ret)],[Out = Ret,V = V4,V4 >= 0,V3 = V5,V5 >= 0]).
eq(insert(V, V3, Out),1,[fun4(V7, V6, Ret1)],[Out = Ret1,V = V6,V7 >= 0,V6 >= 0,V3 = V7]).
eq(fun4(V, V3, Out),1,[fun1(V9, V8, Ret01),fun5(Ret01, V8, V9, V10, Ret2)],[Out = Ret2,V = 1 + V10 + V9,V8 >= 0,V9 >= 0,V3 = V8,V10 >= 0]).
eq(fun4(V, V3, Out),1,[],[Out = 1 + V11,V11 >= 0,V = 0,V3 = V11]).
eq(fun5(V, V3, V13, V15, Out),1,[],[Out = 2 + V12 + V14 + V16,V14 >= 0,V = 1,V15 = V16,V12 >= 0,V3 = V14,V16 >= 0,V13 = V12]).
eq(fun5(V, V3, V13, V15, Out),1,[insert(V18, V19, Ret11)],[Out = 1 + Ret11 + V17,V = 2,V18 >= 0,V15 = V19,V17 >= 0,V3 = V18,V19 >= 0,V13 = V17]).
eq(insertD(V, V3, Out),1,[fun6(V21, V20, Ret3)],[Out = Ret3,V = V20,V21 >= 0,V20 >= 0,V3 = V21]).
eq(fun6(V, V3, Out),1,[fun1(V22, V24, Ret02),fun7(Ret02, V24, V22, V23, Ret4)],[Out = Ret4,V = 1 + V22 + V23,V24 >= 0,V22 >= 0,V3 = V24,V23 >= 0]).
eq(fun6(V, V3, Out),1,[],[Out = 1 + V25,V25 >= 0,V = 0,V3 = V25]).
eq(fun7(V, V3, V13, V15, Out),1,[],[Out = 2 + V26 + V27 + V28,V28 >= 0,V = 1,V15 = V27,V26 >= 0,V3 = V28,V27 >= 0,V13 = V26]).
eq(fun7(V, V3, V13, V15, Out),1,[insertD(V29, V30, Ret12)],[Out = 1 + Ret12 + V31,V = 2,V29 >= 0,V15 = V30,V31 >= 0,V3 = V29,V30 >= 0,V13 = V31]).
eq(insertionsort(V, Out),1,[fun8(V32, Ret5)],[Out = Ret5,V = V32,V32 >= 0]).
eq(fun8(V, Out),1,[insertionsort(V34, Ret13),insert(V33, Ret13, Ret6)],[Out = Ret6,V33 >= 0,V = 1 + V33 + V34,V34 >= 0]).
eq(fun8(V, Out),1,[],[Out = 0,V = 0]).
eq(insertionsortD(V, Out),1,[fun9(V35, Ret7)],[Out = Ret7,V = V35,V35 >= 0]).
eq(fun9(V, Out),1,[insertionsortD(V37, Ret14),insertD(V36, Ret14, Ret8)],[Out = Ret8,V36 >= 0,V = 1 + V36 + V37,V37 >= 0]).
eq(fun9(V, Out),1,[],[Out = 0,V = 0]).
eq(testInsertionsort(V, Out),1,[testList(0, Ret03),insertionsort(Ret03, Ret9)],[Out = Ret9,V = V38,V38 >= 0]).
eq(testInsertionsortD(V, Out),1,[testList(0, Ret04),insertionsortD(Ret04, Ret10)],[Out = Ret10,V = V39,V39 >= 0]).
eq(testList(V, Out),1,[fun(0, Ret011),fun(1 + (1 + (1 + (1 + (1 + 0)))), Ret101),fun(1 + (1 + (1 + (1 + (1 + (1 + 0))))), Ret1101),fun(1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))), Ret11101),fun(1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))), Ret111101),fun(1 + (1 + 0), Ret1111101),fun(1 + (1 + (1 + 0)), Ret11111101),fun(1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), Ret111111101),fun(1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))), Ret1111111101),fun(1 + (1 + (1 + (1 + 0))), Ret11111111101)],[Out = 10 + Ret011 + Ret101 + Ret1101 + Ret11101 + Ret111101 + Ret1111101 + Ret11111101 + Ret111111101 + Ret1111111101 + Ret11111111101,V40 >= 0,V = V40]).
eq(fun2(V, Out),0,[],[Out = 1,V = 1]).
eq(fun2(V, Out),0,[],[Out = 1,V = 2]).
eq(fun2(V, Out),0,[],[Out = 2,V = 3]).
eq(fun3(V, V3, Out),0,[],[Out = 1,V = 0,V3 = 0]).
eq(fun3(V, V3, Out),0,[],[Out = 2,V = 0,V3 = 1 + V41,V41 >= 0]).
eq(fun3(V, V3, Out),0,[],[Out = 3,V = 0,V3 = 1 + V42,V42 >= 0]).
eq(fun3(V, V3, Out),0,[],[Out = 3,V43 >= 0,V = 1 + V43,V3 = 0]).
eq(fun3(V, V3, Out),0,[fun3(V45, V44, Ret15)],[Out = Ret15,V44 >= 0,V = 1 + V44,V3 = 1 + V45,V45 >= 0]).
eq(fun3(V, V3, Out),0,[],[Out = 3,V46 >= 0,V = 1 + V46,V3 = 1 + V47,V47 >= 0]).
eq(fun3(V, V3, Out),0,[],[Out = 2,V48 >= 0,V = 1 + V48,V3 = 0]).
eq(fun3(V, V3, Out),0,[],[Out = 2,V50 >= 0,V = 1 + V50,V3 = 1 + V49,V49 >= 0]).
eq(fun3(V, V3, Out),0,[fun3(V52, V51, Ret16)],[Out = Ret16,V52 >= 0,V = 1 + V52,V3 = 1 + V51,V51 >= 0]).
eq(fun2(V, Out),0,[],[Out = 0,V53 >= 0,V = V53]).
eq(fun3(V, V3, Out),0,[],[Out = 0,V55 >= 0,V54 >= 0,V = V55,V3 = V54]).
eq(fun5(V, V3, V13, V15, Out),0,[],[Out = 0,V15 = V58,V57 >= 0,V13 = V59,V56 >= 0,V = V57,V3 = V56,V59 >= 0,V58 >= 0]).
eq(fun7(V, V3, V13, V15, Out),0,[],[Out = 0,V15 = V63,V60 >= 0,V13 = V61,V62 >= 0,V = V60,V3 = V62,V61 >= 0,V63 >= 0]).
eq(fun4(V, V3, Out),0,[],[Out = 0,V64 >= 0,V65 >= 0,V = V64,V3 = V65]).
eq(fun6(V, V3, Out),0,[],[Out = 0,V67 >= 0,V66 >= 0,V = V67,V3 = V66]).
eq(fun8(V, Out),0,[],[Out = 0,V68 >= 0,V = V68]).
eq(fun9(V, Out),0,[],[Out = 0,V69 >= 0,V = V69]).
input_output_vars(fun(V,Out),[V],[Out]).
input_output_vars(fun1(V,V3,Out),[V,V3],[Out]).
input_output_vars(insert(V,V3,Out),[V,V3],[Out]).
input_output_vars(fun4(V,V3,Out),[V,V3],[Out]).
input_output_vars(fun5(V,V3,V13,V15,Out),[V,V3,V13,V15],[Out]).
input_output_vars(insertD(V,V3,Out),[V,V3],[Out]).
input_output_vars(fun6(V,V3,Out),[V,V3],[Out]).
input_output_vars(fun7(V,V3,V13,V15,Out),[V,V3,V13,V15],[Out]).
input_output_vars(insertionsort(V,Out),[V],[Out]).
input_output_vars(fun8(V,Out),[V],[Out]).
input_output_vars(insertionsortD(V,Out),[V],[Out]).
input_output_vars(fun9(V,Out),[V],[Out]).
input_output_vars(testInsertionsort(V,Out),[V],[Out]).
input_output_vars(testInsertionsortD(V,Out),[V],[Out]).
input_output_vars(testList(V,Out),[V],[Out]).
input_output_vars(fun2(V,Out),[V],[Out]).
input_output_vars(fun3(V,V3,Out),[V,V3],[Out]).
