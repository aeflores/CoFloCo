
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fcons/3]
1. recursive  : [first/3]
2. recursive  : [quote/2]
3. recursive  : [first1/3]
4. recursive  : [from/2]
5. recursive  : [quote1/2]
6. recursive  : [sel/3]
7. recursive  : [sel1/3]
8. recursive  : [unquote/2]
9. recursive [non_tail] : [unquote1/2]
10. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into first/3
2. SCC is partially evaluated into quote/2
3. SCC is partially evaluated into first1/3
4. SCC is partially evaluated into from/2
5. SCC is partially evaluated into quote1/2
6. SCC is partially evaluated into sel/3
7. SCC is partially evaluated into sel1/3
8. SCC is partially evaluated into unquote/2
9. SCC is partially evaluated into unquote1/2
10. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations first/3 
* CE 18 is refined into CE [37] 
* CE 20 is refined into CE [38] 
* CE 19 is refined into CE [39] 


#### Refined cost equations first/3 
* CE 37: first(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 38: first(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 39: first(V1,V,Out) = 1+ first(W1,X1,Y1)
     [V+Y1>=Out,Out>=Y1+1,W1>=0,V+Y1=Out+X1,W1+1=V1] 

### Cost equations --> "Loop" of first/3 
* CEs [39] --> Loop 21 
* CEs [37,38] --> Loop 22 

#### Loops of first/3 
* Loop 21: first(V1,V,Out)->  first(V1',V',Out')
                  [V+Out'>=Out,Out>=Out'+1,V1'>=0,V+Out'=Out+V',V1'+1=V1] 
* Loop 22: first(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR first(V1,V,Out) 
* RF of phase [21]: [V,V1]

#### Partial ranking functions of CR first(V1,V,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V
    V1


### Resulting Chains:first(V1,V,Out) 
* [[21],22]
* [22]


### Merging Chains  first/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations quote/2 
* CE 32 is refined into CE [40] 
* CE 33 is refined into CE [41] 
* CE 31 is refined into CE [42] 


#### Refined cost equations quote/2 
* CE 40: quote(V1,Out) = 1
     [Out=0,V1=0] 
* CE 41: quote(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 42: quote(V1,Out) = 1+ quote(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of quote/2 
* CEs [42] --> Loop 23 
* CEs [40,41] --> Loop 24 

#### Loops of quote/2 
* Loop 23: quote(V1,Out)->  quote(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 24: quote(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR quote(V1,Out) 
* RF of phase [23]: [V1]

#### Partial ranking functions of CR quote(V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V1


### Resulting Chains:quote(V1,Out) 
* [[23],24]
* [24]


### Merging Chains  quote/2 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations first1/3 
* CE 22 is refined into CE [43] 
* CE 24 is refined into CE [44] 
* CE 23 is refined into CE [45,46] 


#### Refined cost equations first1/3 
* CE 43: first1(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 44: first1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 45: first1(V1,V,Out) = 1+ quote(W1,X1):1+ first1(Y1,Z1,A2)
     [Z1>=0,Y1>=0,W1>=0,W1+Z1+1=V,A2+1=Out,Y1+1=V1,X1=0] 
* CE 46: first1(V1,V,Out) = 1+ quote(W1,X1):2+ first1(Y1,Z1,A2)
     [W1>=X1,Z1>=0,Y1>=0,X1>=1,X1+A2+1=Out,W1+Z1+1=V,Y1+1=V1] 

### Cost equations --> "Loop" of first1/3 
* CEs [46] --> Loop 25 
* CEs [45] --> Loop 26 
* CEs [43,44] --> Loop 27 

#### Loops of first1/3 
* Loop 25: first1(V1,V,Out)->  first1(V1',V',Out')
                  [V+Out'>=Out+V',Out>=Out'+2,V'>=0,V1>=1,V1=V1'+1] 
* Loop 26: first1(V1,V,Out)->  first1(V1',V',Out')
                  [V>=V'+1,V'>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 27: first1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR first1(V1,V,Out) 
* RF of phase [25,26]: [V,V1]

#### Partial ranking functions of CR first1(V1,V,Out) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1]:
    V/2-1/2
  - RF of loop [25:1,26:1]:
    V1
  - RF of loop [26:1]:
    V


### Resulting Chains:first1(V1,V,Out) 
* [[25,26],27]
* [27]


### Merging Chains  first1/3 into  External patterns of execution 
* [[27]] --> 1 
* [[27,[25,26]]] --> 2 


### Specialization of cost equations from/2 
* CE 21 is refined into CE [47] 


#### Refined cost equations from/2 
* CE 47: from(V1,Out) = 1+ from(W1,X1)
     [V1>=0,V1+X1+1=Out,V1+1=W1] 

### Cost equations --> "Loop" of from/2 
* CEs [47] --> Loop 28 

#### Loops of from/2 
* Loop 28: from(V1,Out)->  from(V1',Out')
                  [V1>=0,V1+Out'+1=Out,V1+1=V1'] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V1,Out) 
* [[28]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[28]]] --> 1 


### Specialization of cost equations quote1/2 
* CE 35 is refined into CE [48] 
* CE 36 is refined into CE [49] 
* CE 34 is refined into CE [50,51] 


#### Refined cost equations quote1/2 
* CE 48: quote1(V1,Out) = 1
     [Out=0,V1=0] 
* CE 49: quote1(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 50: quote1(V1,Out) = 1+ quote(W1,X1):1+ quote1(Y1,Z1)
     [Y1>=0,W1>=0,W1+Y1+1=V1,Z1+1=Out,X1=0] 
* CE 51: quote1(V1,Out) = 1+ quote(W1,X1):2+ quote1(Y1,Z1)
     [W1>=X1,Y1>=0,X1>=1,X1+Z1+1=Out,W1+Y1+1=V1] 

### Cost equations --> "Loop" of quote1/2 
* CEs [51] --> Loop 29 
* CEs [50] --> Loop 30 
* CEs [48,49] --> Loop 31 

#### Loops of quote1/2 
* Loop 29: quote1(V1,Out)->  quote1(V1',Out')
                  [V1+Out'>=Out+V1',Out>=Out'+2,V1'>=0] 
* Loop 30: quote1(V1,Out)->  quote1(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 31: quote1(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR quote1(V1,Out) 
* RF of phase [29,30]: [V1]

#### Partial ranking functions of CR quote1(V1,Out) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1]:
    V1-1
  - RF of loop [30:1]:
    V1


### Resulting Chains:quote1(V1,Out) 
* [[29,30],31]
* [31]


### Merging Chains  quote1/2 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[29,30]]] --> 2 


### Specialization of cost equations sel/3 
* CE 14 is refined into CE [52] 
* CE 12 is refined into CE [53] 
* CE 13 is refined into CE [54] 


#### Refined cost equations sel/3 
* CE 52: sel(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 53: sel(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 
* CE 54: sel(V1,V,Out) = 1+ sel(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sel/3 
* CEs [54] --> Loop 32 
* CEs [52] --> Loop 33 
* CEs [53] --> Loop 34 

#### Loops of sel/3 
* Loop 32: sel(V1,V,Out)->  sel(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 33: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 34: sel(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel(V1,V,Out) 
* RF of phase [32]: [V,V1]

#### Partial ranking functions of CR sel(V1,V,Out) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V
    V1


### Resulting Chains:sel(V1,V,Out) 
* [[32],34]
* [[32],33]
* [34]
* [33]


### Merging Chains  sel/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33],[33,[32]]] --> 2 
* [[34,[32]]] --> 3 


### Specialization of cost equations sel1/3 
* CE 30 is refined into CE [55] 
* CE 28 is refined into CE [56,57] 
* CE 29 is refined into CE [58] 


#### Refined cost equations sel1/3 
* CE 55: sel1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 56: sel1(V1,V,Out) = 1+ quote(W1,X1):1
     [V>=W1+1,W1>=0,X1=0,Out=0,V1=0] 
* CE 57: sel1(V1,V,Out) = 1+ quote(W1,Out):2
     [W1>=Out,V>=W1+1,Out>=1,V1=0] 
* CE 58: sel1(V1,V,Out) = 1+ sel1(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sel1/3 
* CEs [58] --> Loop 35 
* CEs [57] --> Loop 36 
* CEs [55,56] --> Loop 37 

#### Loops of sel1/3 
* Loop 35: sel1(V1,V,Out)->  sel1(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 36: sel1(V1,V,Out) [V>=Out+1,Out>=1,V1=0] 
* Loop 37: sel1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR sel1(V1,V,Out) 
* RF of phase [35]: [V,V1]

#### Partial ranking functions of CR sel1(V1,V,Out) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V
    V1


### Resulting Chains:sel1(V1,V,Out) 
* [[35],37]
* [[35],36]
* [37]
* [36]


### Merging Chains  sel1/3 into  External patterns of execution 
* [[36]] --> 1 
* [[37],[37,[35]]] --> 2 
* [[36,[35]]] --> 3 


### Specialization of cost equations unquote/2 
* CE 16 is refined into CE [59] 
* CE 17 is refined into CE [60] 
* CE 15 is refined into CE [61] 


#### Refined cost equations unquote/2 
* CE 59: unquote(V1,Out) = 1
     [Out=0,V1=0] 
* CE 60: unquote(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 61: unquote(V1,Out) = 1+ unquote(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of unquote/2 
* CEs [61] --> Loop 38 
* CEs [59,60] --> Loop 39 

#### Loops of unquote/2 
* Loop 38: unquote(V1,Out)->  unquote(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 39: unquote(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR unquote(V1,Out) 
* RF of phase [38]: [V1]

#### Partial ranking functions of CR unquote(V1,Out) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V1


### Resulting Chains:unquote(V1,Out) 
* [[38],39]
* [39]


### Merging Chains  unquote/2 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[38]]] --> 2 


### Specialization of cost equations unquote1/2 
* CE 26 is refined into CE [62] 
* CE 27 is refined into CE [63] 
* CE 25 is refined into CE [64,65] 


#### Refined cost equations unquote1/2 
* CE 62: unquote1(V1,Out) = 1
     [Out=0,V1=0] 
* CE 63: unquote1(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 64: unquote1(V1,Out) = 2+ unquote(W1,X1):1+ unquote1(Y1,Z1)
     [Z1>=0,Y1>=0,W1>=0,W1+Y1+1=V1,Z1+1=Out,X1=0] 
* CE 65: unquote1(V1,Out) = 2+ unquote(W1,X1):2+ unquote1(Y1,Z1)
     [W1>=X1,Z1>=0,Y1>=0,X1>=1,X1+Z1+1=Out,W1+Y1+1=V1] 

### Cost equations --> "Loop" of unquote1/2 
* CEs [65] --> Loop 40 
* CEs [64] --> Loop 41 
* CEs [62,63] --> Loop 42 

#### Loops of unquote1/2 
* Loop 40: unquote1(V1,Out)->  unquote1(V1',Out')
                  [V1+Out'>=Out+V1',Out>=Out'+2,Out'>=0,V1'>=0] 
* Loop 41: unquote1(V1,Out)->  unquote1(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out>=1,Out=Out'+1] 
* Loop 42: unquote1(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR unquote1(V1,Out) 
* RF of phase [40,41]: [V1]

#### Partial ranking functions of CR unquote1(V1,Out) 
* Partial RF of phase [40,41]:
  - RF of loop [40:1]:
    V1-1
  - RF of loop [41:1]:
    V1


### Resulting Chains:unquote1(V1,Out) 
* [[40,41],42]
* [42]


### Merging Chains  unquote1/2 into  External patterns of execution 
* [[42]] --> 1 
* [[42,[40,41]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [66,67,68] 
* CE 3 is refined into CE [69,70] 
* CE 4 is refined into CE [71,72] 
* CE 5 is refined into CE [73] 
* CE 6 is refined into CE [74,75] 
* CE 7 is refined into CE [76,77] 
* CE 8 is refined into CE [78,79,80] 
* CE 9 is refined into CE [81,82] 
* CE 10 is refined into CE [83,84] 
* CE 11 is refined into CE [85] 


#### Refined cost equations start/2 
* CE 66: start(V1,V) = 0+ sel(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 67: start(V1,V) = 0+ sel(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 68: start(V1,V) = 0+ sel(V1,V,W1):3
     [V>=V1+W1+1,W1>=0,V1>=1] 
* CE 69: start(V1,V) = 0+ unquote(V1,W1):1
     [V1>=0,W1=0] 
* CE 70: start(V1,V) = 0+ unquote(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 71: start(V1,V) = 0+ first(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 72: start(V1,V) = 0+ first(V1,V,W1):2
     [V>=W1,W1>=1,V1>=1] 
* CE 73: start(V1,V) = 0+ from(V1,W1):1
     [V1>=0] 
* CE 74: start(V1,V) = 0+ first1(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 75: start(V1,V) = 0+ first1(V1,V,W1):2
     [V>=W1,W1>=1,V1>=1] 
* CE 76: start(V1,V) = 0+ unquote1(V1,W1):1
     [V1>=0,W1=0] 
* CE 77: start(V1,V) = 0+ unquote1(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 78: start(V1,V) = 0+ sel1(W1,V,X1):1
     [V>=X1+1,X1>=1,W1=0,V1=0] 
* CE 79: start(V1,V) = 0+ sel1(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 80: start(V1,V) = 0+ sel1(V1,V,W1):3
     [V>=V1+W1+1,W1>=1,V1>=1] 
* CE 81: start(V1,V) = 0+ quote(V1,W1):1
     [V1>=0,W1=0] 
* CE 82: start(V1,V) = 0+ quote(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 83: start(V1,V) = 0+ quote1(V1,W1):1
     [V1>=0,W1=0] 
* CE 84: start(V1,V) = 0+ quote1(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 85: start(V1,V) = 1
     [V>=0,V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85] --> Loop 43 
* CEs [73] --> Loop 44 

#### Loops of start/2 
* Loop 43: start(V1,V) [V1>=0] 
* Loop 44: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [44]...
* [43]


### Merging Chains  start/2 into  External patterns of execution 
* [[43]] --> 1 
* [[44]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:first(V1,V,Out) -> [first(V1',V',Out')] 
1
#### Cost of phase [21]:first(V1,V,Out) -> [first(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of chains of first(V1,V,Out):
* Chain [[21],22]: 1*it(21)+1
  Such that:it(21) =< V1

  with precondition: [V1>=1,Out>=1,V>=Out] 

* Chain [22]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [23] 

 * loop 23:quote(V1,Out) -> [quote(V1',Out')] 
1
#### Cost of phase [23]:quote(V1,Out) -> [quote(V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'

#### Cost of chains of quote(V1,Out):
* Chain [[23],24]: 1*it(23)+1
  Such that:it(23) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [24]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [25,26] 

 * loop 25:first1(V1,V,Out) -> [first1(V1',V',Out')] 
1*s(2)+2
  Such that:s(2) =< V-V'

 * loop 26:first1(V1,V,Out) -> [first1(V1',V',Out')] 
2
#### Cost of phase [25,26]:first1(V1,V,Out) -> [first1(V1',V',Out')] 
2*it(25)+2*it(26)+1*s(3)+0
  Such that:it(25) =< V/2
it(25) =< V/2-V'/2
aux(1) =< V1
aux(2) =< V1-V1'
aux(3) =< V
aux(4) =< V-V'
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(25) =< aux(3)
it(26) =< aux(3)
s(3) =< aux(3)
it(25) =< aux(4)
it(26) =< aux(4)
s(3) =< aux(4)

#### Cost of chains of first1(V1,V,Out):
* Chain [[25,26],27]: 2*it(25)+2*it(26)+1*s(3)+1
  Such that:it(25) =< V/2
aux(5) =< V1
aux(6) =< V
it(25) =< aux(5)
it(26) =< aux(5)
it(25) =< aux(6)
it(26) =< aux(6)
s(3) =< aux(6)

  with precondition: [V1>=1,Out>=1,V>=Out] 

* Chain [27]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [28] 

 * loop 28:from(V1,Out) -> [from(V1',Out')] 
1
#### Cost of phase [28]:from(V1,Out) -> [from(V1',Out')] 
1*it(28)+0
#### Cost of chains of from(V1,Out):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [V1>=0] 


#### Cost of loops [29,30] 

 * loop 29:quote1(V1,Out) -> [quote1(V1',Out')] 
1*s(5)+2
  Such that:s(5) =< V1-V1'

 * loop 30:quote1(V1,Out) -> [quote1(V1',Out')] 
2
#### Cost of phase [29,30]:quote1(V1,Out) -> [quote1(V1',Out')] 
5*it(29)+0
  Such that:aux(7) =< V1
aux(8) =< V1-V1'
it(29) =< aux(7)
it(29) =< aux(8)

#### Cost of chains of quote1(V1,Out):
* Chain [[29,30],31]: 5*it(29)+1
  Such that:aux(9) =< V1
it(29) =< aux(9)

  with precondition: [Out>=1,V1>=Out] 

* Chain [31]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [32] 

 * loop 32:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1
#### Cost of phase [32]:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1*it(32)+0
  Such that:it(32) =< V1
it(32) =< V1-V1'
it(32) =< V
it(32) =< V-V'

#### Cost of phase [32]:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1*it(32)+0
  Such that:it(32) =< V1
it(32) =< V1-V1'
it(32) =< V
it(32) =< V-V'

#### Cost of chains of sel(V1,V,Out):
* Chain [[32],34]: 1*it(32)+1
  Such that:it(32) =< V1

  with precondition: [V1>=1,Out>=0,V>=Out+V1+1] 

* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [34]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [33]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [35] 

 * loop 35:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1
#### Cost of phase [35]:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1*it(35)+0
  Such that:it(35) =< V1
it(35) =< V1-V1'
it(35) =< V
it(35) =< V-V'

#### Cost of phase [35]:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1*it(35)+0
  Such that:it(35) =< V1
it(35) =< V1-V1'
it(35) =< V
it(35) =< V-V'

#### Cost of chains of sel1(V1,V,Out):
* Chain [[35],37]: 1*it(35)+2
  Such that:it(35) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[35],36]: 1*it(35)+1*s(8)+2
  Such that:s(8) =< -V1+V
it(35) =< V1

  with precondition: [V1>=1,Out>=1,V>=Out+V1+1] 

* Chain [37]: 2
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [36]: 1*s(8)+2
  Such that:s(8) =< V

  with precondition: [V1=0,Out>=1,V>=Out+1] 


#### Cost of loops [38] 

 * loop 38:unquote(V1,Out) -> [unquote(V1',Out')] 
1
#### Cost of phase [38]:unquote(V1,Out) -> [unquote(V1',Out')] 
1*it(38)+0
  Such that:it(38) =< V1
it(38) =< V1-V1'

#### Cost of chains of unquote(V1,Out):
* Chain [[38],39]: 1*it(38)+1
  Such that:it(38) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [39]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [40,41] 

 * loop 40:unquote1(V1,Out) -> [unquote1(V1',Out')] 
1*s(11)+3
  Such that:s(11) =< V1-V1'

 * loop 41:unquote1(V1,Out) -> [unquote1(V1',Out')] 
3
#### Cost of phase [40,41]:unquote1(V1,Out) -> [unquote1(V1',Out')] 
7*it(40)+0
  Such that:aux(10) =< V1
aux(11) =< V1-V1'
it(40) =< aux(10)
it(40) =< aux(11)

#### Cost of chains of unquote1(V1,Out):
* Chain [[40,41],42]: 7*it(40)+1
  Such that:aux(12) =< V1
it(40) =< aux(12)

  with precondition: [Out>=1,V1>=Out] 

* Chain [42]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [44]...: 1*s(13)+0
  with precondition: [V1>=0] 

* Chain [43]: 4*s(14)+17*s(15)+2*s(18)+2*s(21)+1*s(27)+2
  Such that:s(27) =< -V1+V
s(18) =< V/2
aux(13) =< V1
aux(14) =< V
s(15) =< aux(13)
s(14) =< aux(14)
s(18) =< aux(13)
s(21) =< aux(13)
s(18) =< aux(14)
s(21) =< aux(14)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [44]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [V1>=0] 
    - Upper bound: 19*V1+2+nat(V)*4+nat(-V1+V)+nat(V/2)*2 
    - Complexity: n 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 152 ms.
   - Backward Invariants 65 ms.
   - Transitive Invariants 37 ms.
* Refinement performed in 264 ms.
* Termination proved in 46 ms.
* Upper bounds computed in 296 ms.
   - Equation cost structures 98 ms.
   - Phase cost structures 121 ms.
   - Chain cost structures 91 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 952 ms.

