
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [if/4]
1. recursive  : [leq/3]
2. non_recursive  : [p/2]
3. recursive [non_tail] : [diff/3]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into if/4
1. SCC is partially evaluated into leq/3
2. SCC is partially evaluated into p/2
3. SCC is partially evaluated into diff/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations if/4 
* CE 11 is refined into CE [14] 
* CE 12 is refined into CE [15] 


#### Refined cost equations if/4 
* CE 14: if(A,B,C,B) = 1
     [C>=0,B>=0,A=1] 
* CE 15: if(A,B,C,C) = 1
     [C>=0,B>=0,A=0] 

### Cost equations --> "Loop" of if/4 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 

#### Loops of if/4 
* Loop 10: if(A,B,C,B) [C>=0,B>=0,A=1] 
* Loop 11: if(A,B,C,C) [C>=0,B>=0,A=0] 

### Ranking functions of CR if(V,V1,V2,Out) 

#### Partial ranking functions of CR if(V,V1,V2,Out) 


### Resulting Chains:if(V,V1,V2,Out) 
* [11]
* [10]


### Merging Chains  if/4 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations leq/3 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 


#### Refined cost equations leq/3 
* CE 16: leq(V,V1,Out) = 1+ leq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 17: leq(V,V1,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 18: leq(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of leq/3 
* CEs [17] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of leq/3 
* Loop 12: leq(V,V1,Out) [V>=1,Out=0,V1=0] 
* Loop 13: leq(V,V1,Out) [V1>=0,Out=1,V=0] 
* Loop 14: leq(V,V1,Out)->  leq(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR leq(V,V1,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR leq(V,V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:leq(V,V1,Out) 
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  leq/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[12,[14]]] --> 3 
* [[13,[14]]] --> 4 


### Specialization of cost equations p/2 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations p/2 
* CE 19: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 20: p(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of p/2 
* CEs [19] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of p/2 
* Loop 15: p(V,Out) [V>=1,V=Out+1] 
* Loop 16: p(V,Out) [Out=0,V=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [16]
* [15]


### Merging Chains  p/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations diff/3 
* CE 13 is refined into CE [21,22,23,24] 


#### Refined cost equations diff/3 
* CE 21: diff(V,V1,Out) = 1+ leq(W1,V1,X1):1+ p(Y1,Z1):1+ diff(A2,V1,B2)+ if(C2,D2,E2,F2):2
     [E2>=0,V1>=0,E2=B2+1,A2=0,F2=0,D2=0,C2=1,Z1=0,Y1=0,X1=1,W1=0,Out=0,V=0] 
* CE 22: diff(V,V1,Out) = 1+ leq(W1,X1,Y1):2+ p(Z1,A2):2+ diff(A2,B2,C2)+ if(D2,E2,Out,Out):1
     [Out>=0,A2>=0,Out=C2+1,A2+1=Z1,A2+1=W1,A2+1=V,B2=0,E2=0,D2=0,Y1=0,X1=0,V1=0] 
* CE 23: diff(V,V1,Out) = 1+ leq(W1,V1,X1):3+ p(Y1,Z1):2+ diff(Z1,V1,A2)+ if(B2,C2,Out,Out):1
     [Z1>=V1,Out>=0,V1>=1,Out=A2+1,Z1+1=Y1,Z1+1=W1,Z1+1=V,C2=0,B2=0,X1=0] 
* CE 24: diff(V,V1,Out) = 1+ leq(W1,V1,X1):4+ p(Y1,Z1):2+ diff(Z1,V1,A2)+ if(B2,C2,D2,E2):2
     [V1>=Z1+1,D2>=0,Z1>=0,D2=A2+1,Z1+1=Y1,Z1+1=W1,Z1+1=V,E2=0,C2=0,B2=1,X1=1,Out=0] 

### Cost equations --> "Loop" of diff/3 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of diff/3 
* Loop 17: diff(V,V1,Out)->  diff(V',V1,Out')
                  [V>=V1+1,Out>=0,V1>=1,Out=Out'+1,V=V'+1] 
* Loop 18: diff(V,V1,Out)->  diff(V',V1,Out')
                  [V1>=V,Out'+1>=0,V>=1,V=V'+1,Out=0] 
* Loop 19: diff(V,V1,Out)->  diff(V',V1',Out')
                  [Out>=0,V>=1,Out=Out'+1,V=V'+1,V1'=0,V1=0] 
* Loop 20: diff(V,V1,Out)->  diff(V',V1,Out')
                  [Out'+1>=0,V1>=0,V'=0,Out=0,V=0] 

### Ranking functions of CR diff(V,V1,Out) 
* RF of phase [17]: [V-1,V-V1]
* RF of phase [18]: [V]
* RF of phase [19]: [V]

#### Partial ranking functions of CR diff(V,V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V-1
    V-V1
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V

Warning: no base case found for predicate

### Resulting Chains:diff(V,V1,Out) 
* [[20]]...
* [[19],[20]]...
* [[18],[20]]...
* [[17],[18],[20]]...


### Merging Chains  diff/3 into  External patterns of execution 
* [[[20]]] --> 1 
* [[[20],[19]]] --> 2 
* [[[20],[18]]] --> 3 
* [[[20],[18],[17]]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [25,26] 
* CE 3 is refined into CE [27,28,29,30] 
* CE 4 is refined into CE [31,32] 
* CE 5 is refined into CE [33,34,35,36] 


#### Refined cost equations start/3 
* CE 25: start(V,V1,V2) = 0+ p(W2,X2):1
     [X2=0,W2=0,V=0] 
* CE 26: start(V,V1,V2) = 0+ p(W2,X2):2
     [X2>=0,X2+1=W2,X2+1=V] 
* CE 27: start(V,V1,V2) = 0+ leq(W2,V1,X2):1
     [V1>=0,X2=1,W2=0,V=0] 
* CE 28: start(V,V1,V2) = 0+ leq(V,W2,X2):2
     [V>=1,X2=0,W2=0,V1=0] 
* CE 29: start(V,V1,V2) = 0+ leq(V,V1,W2):3
     [V>=V1+1,V1>=1,W2=0] 
* CE 30: start(V,V1,V2) = 0+ leq(V,V1,W2):4
     [V1>=V,V>=1,W2=1] 
* CE 31: start(V,V1,V2) = 0+ if(W2,V1,V2,V2):1
     [V2>=0,V1>=0,W2=0,V=0] 
* CE 32: start(V,V1,V2) = 0+ if(W2,V1,V2,V1):2
     [V1>=0,V2>=0,W2=1,V=1] 
* CE 33: start(V,V1,V2) = 0+ diff(W2,V1,X2):1
     [V1>=0,X2=0,W2=0,V=0] 
* CE 34: start(V,V1,V2) = 0+ diff(V,W2,V):2
     [V>=1,W2=0,V1=0] 
* CE 35: start(V,V1,V2) = 0+ diff(V,V1,W2):3
     [V1>=V,V>=1,W2=0] 
* CE 36: start(V,V1,V2) = 0+ diff(W2,V1,X2):4
     [X2>=1,V1>=1,V1+X2=W2,V1+X2=V] 

### Cost equations --> "Loop" of start/3 
* CEs [36] --> Loop 21 
* CEs [35] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [28] --> Loop 25 
* CEs [26,29,30,32] --> Loop 26 
* CEs [25,27,31] --> Loop 27 

#### Loops of start/3 
* Loop 21: start(V,V1,V2) [V>=V1+1,V1>=1] 
* Loop 22: start(V,V1,V2) [V1>=V,V>=1] 
* Loop 23: start(V,V1,V2) [V>=1,V1=0] 
* Loop 24: start(V,V1,V2) [V1>=0,V=0] 
* Loop 25: start(V,V1,V2) [V>=1,V1=0] 
* Loop 26: start(V,V1,V2) [V>=1] 
* Loop 27: start(V,V1,V2) [V=0] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [27]
* [26]
* [25]
* [24]...
* [23]...
* [22]...
* [21]...


### Merging Chains  start/3 into  External patterns of execution 
* [[27]] --> 1 
* [[25],[26]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 
* [[22]] --> 5 
* [[21]] --> 6 


Computing Bounds
=====================================

#### Cost of chains of if(V,V1,V2,Out):
* Chain [11]: 1
  with precondition: [V=0,V2=Out,V1>=0,V2>=0] 

* Chain [10]: 1
  with precondition: [V=1,V1=Out,V1>=0,V2>=0] 


#### Cost of loops [14] 

 * loop 14:leq(V,V1,Out) -> [leq(V',V1',Out')] 
1
#### Cost of phase [14]:leq(V,V1,Out) -> [leq(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of phase [14]:leq(V,V1,Out) -> [leq(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of leq(V,V1,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[14],12]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [13]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [12]: 1
  with precondition: [V1=0,Out=0,V>=1] 


#### Cost of chains of p(V,Out):
* Chain [16]: 1
  with precondition: [V=0,Out=0] 

* Chain [15]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [20] 

 * loop 20:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4
#### Cost of phase [20]:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4*it(20)+0
#### Cost of loops [19] 

 * loop 19:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4
#### Cost of phase [19]:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of loops [18] 

 * loop 18:diff(V,V1,Out) -> [diff(V',V1',Out')] 
1*s(2)+4
  Such that:s(2) =< V'+1

#### Cost of phase [18]:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4*it(18)+1*s(3)+0
  Such that:it(18) =< V-V'
aux(2) =< V
it(18) =< aux(2)
s(3) =< it(18)*aux(2)

#### Cost of loops [17] 

 * loop 17:diff(V,V1,Out) -> [diff(V',V1',Out')] 
1*s(5)+4
  Such that:s(5) =< V1'

#### Cost of phase [17]:diff(V,V1,Out) -> [diff(V',V1',Out')] 
4*it(17)+1*s(6)+0
  Such that:it(17) =< V
it(17) =< V-V1
it(17) =< V-V1-V'+V1'
it(17) =< V-V'
aux(4) =< V1
s(6) =< it(17)*aux(4)

#### Cost of chains of diff(V,V1,Out):
* Chain [[20]]...: 4*it(20)+0
  with precondition: [V=0,V1>=0,Out=0] 

* Chain [[19],[20]]...: 4*it(19)+4*it(20)+0
  Such that:it(19) =< Out

  with precondition: [V1=0,V=Out,V>=1] 

* Chain [[18],[20]]...: 4*it(18)+4*it(20)+1*s(3)+0
  Such that:aux(3) =< V
it(18) =< aux(3)
s(3) =< it(18)*aux(3)

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[17],[18],[20]]...: 4*it(17)+4*it(18)+4*it(20)+1*s(3)+1*s(6)+0
  Such that:it(17) =< Out
aux(5) =< V-Out
it(18) =< aux(5)
s(3) =< it(18)*aux(5)
s(6) =< it(17)*aux(5)

  with precondition: [V=Out+V1,V1>=1,V>=V1+1] 


#### Cost of chains of start(V,V1,V2):
* Chain [27]: 1
  with precondition: [V=0] 

* Chain [26]: 1*s(7)+1*s(8)+1
  Such that:s(8) =< V
s(7) =< V1

  with precondition: [V>=1] 

* Chain [25]: 1
  with precondition: [V1=0,V>=1] 

* Chain [24]...: 4*s(9)+0
  with precondition: [V=0,V1>=0] 

* Chain [23]...: 4*s(10)+4*s(11)+0
  Such that:s(10) =< V

  with precondition: [V1=0,V>=1] 

* Chain [22]...: 4*s(13)+1*s(14)+4*s(15)+0
  Such that:s(12) =< V
s(13) =< s(12)
s(14) =< s(13)*s(12)

  with precondition: [V>=1,V1>=V] 

* Chain [21]...: 4*s(16)+4*s(18)+1*s(19)+1*s(20)+4*s(21)+0
  Such that:s(16) =< V-V1
s(17) =< V1
s(18) =< s(17)
s(19) =< s(18)*s(17)
s(20) =< s(16)*s(17)

  with precondition: [V1>=1,V>=V1+1] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [27] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [26] with precondition: [V>=1] 
    - Upper bound: V+1+nat(V1) 
    - Complexity: n 
* Chain [25] with precondition: [V1=0,V>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [24]... with precondition: [V=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [V1=0,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [V>=1,V1>=V] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [V1>=1,V>=V1+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 30 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 51 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 56 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 172 ms.

