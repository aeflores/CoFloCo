
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eq/3]
1. recursive  : [inf/2]
2. recursive  : [length/2]
3. recursive  : [take/3]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eq/3
1. SCC is partially evaluated into inf/2
2. SCC is partially evaluated into length/2
3. SCC is partially evaluated into take/3
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eq/3 
* CE 8 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eq/3 
* CE 16: eq(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 17: eq(V1,V,Out) = 1
     [Out=1,V=0,V1=0] 
* CE 18: eq(V1,V,Out) = 1+ eq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of eq/3 
* CEs [18] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of eq/3 
* Loop 10: eq(V1,V,Out)->  eq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 11: eq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 12: eq(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR eq(V1,V,Out) 
* RF of phase [10]: [V,V1]

#### Partial ranking functions of CR eq(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V
    V1


### Resulting Chains:eq(V1,V,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eq/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[12,[10]]] --> 3 


### Specialization of cost equations inf/2 
* CE 9 is refined into CE [19] 


#### Refined cost equations inf/2 
* CE 19: inf(V1,Out) = 1+ inf(W1,X1)
     [V1>=0,V1+X1+1=Out,V1+1=W1] 

### Cost equations --> "Loop" of inf/2 
* CEs [19] --> Loop 13 

#### Loops of inf/2 
* Loop 13: inf(V1,Out)->  inf(V1',Out')
                  [V1>=0,V1+Out'+1=Out,V1+1=V1'] 

### Ranking functions of CR inf(V1,Out) 

#### Partial ranking functions of CR inf(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:inf(V1,Out) 
* [[13]]...


### Merging Chains  inf/2 into  External patterns of execution 
* [[[13]]] --> 1 


### Specialization of cost equations length/2 
* CE 13 is refined into CE [20] 
* CE 15 is refined into CE [21] 
* CE 14 is refined into CE [22] 


#### Refined cost equations length/2 
* CE 20: length(V1,Out) = 1
     [Out=0,V1=0] 
* CE 21: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 22: length(V1,Out) = 1+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [22] --> Loop 14 
* CEs [20,21] --> Loop 15 

#### Loops of length/2 
* Loop 14: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 15: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 
* RF of phase [14]: [V1]

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[14],15]
* [15]


### Merging Chains  length/2 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[14]]] --> 2 


### Specialization of cost equations take/3 
* CE 10 is refined into CE [23] 
* CE 12 is refined into CE [24] 
* CE 11 is refined into CE [25] 


#### Refined cost equations take/3 
* CE 23: take(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 24: take(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 25: take(V1,V,Out) = 1+ take(W1,X1,Y1)
     [V+Y1>=Out,Out>=Y1+1,W1>=0,V+Y1=Out+X1,W1+1=V1] 

### Cost equations --> "Loop" of take/3 
* CEs [25] --> Loop 16 
* CEs [23,24] --> Loop 17 

#### Loops of take/3 
* Loop 16: take(V1,V,Out)->  take(V1',V',Out')
                  [V+Out'>=Out,Out>=Out'+1,V1'>=0,V+Out'=Out+V',V1'+1=V1] 
* Loop 17: take(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR take(V1,V,Out) 
* RF of phase [16]: [V,V1]

#### Partial ranking functions of CR take(V1,V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V
    V1


### Resulting Chains:take(V1,V,Out) 
* [[16],17]
* [17]


### Merging Chains  take/3 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [26,27,28] 
* CE 3 is refined into CE [29] 
* CE 4 is refined into CE [30,31] 
* CE 5 is refined into CE [32,33] 


#### Refined cost equations start/2 
* CE 26: start(V1,V) = 0+ eq(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,V=0,V1=0] 
* CE 27: start(V1,V) = 0+ eq(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 28: start(A,A) = 0+ eq(A,A,B):3
     [A>=1,B=1] 
* CE 29: start(V1,V) = 0+ inf(V1,W1):1
     [V1>=0] 
* CE 30: start(V1,V) = 0+ take(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 31: start(V1,V) = 0+ take(V1,V,W1):2
     [V>=W1,W1>=1,V1>=1] 
* CE 32: start(V1,V) = 0+ length(V1,W1):1
     [V1>=0,W1=0] 
* CE 33: start(V1,V) = 0+ length(V1,W1):2
     [V1>=W1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [28] --> Loop 18 
* CEs [26,27,30,31,32,33] --> Loop 19 
* CEs [29] --> Loop 20 

#### Loops of start/2 
* Loop 18: start(A,A) [A>=1] 
* Loop 19: start(V1,V) [V1>=0] 
* Loop 20: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]...
* [19]
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[18],[19]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eq(V1,V,Out) -> [eq(V1',V',Out')] 
1
#### Cost of phase [10]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of chains of eq(V1,V,Out):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< V1

  with precondition: [Out=1,V1=V,V1>=1] 

* Chain [[10],11]: 1*it(10)+1
  Such that:it(10) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [12]: 1
  with precondition: [V1=0,V=0,Out=1] 

* Chain [11]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [13] 

 * loop 13:inf(V1,Out) -> [inf(V1',Out')] 
1
#### Cost of phase [13]:inf(V1,Out) -> [inf(V1',Out')] 
1*it(13)+0
#### Cost of chains of inf(V1,Out):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V1>=0] 


#### Cost of loops [14] 

 * loop 14:length(V1,Out) -> [length(V1',Out')] 
1
#### Cost of phase [14]:length(V1,Out) -> [length(V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of length(V1,Out):
* Chain [[14],15]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out>=1,V1>=Out] 

* Chain [15]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [16] 

 * loop 16:take(V1,V,Out) -> [take(V1',V',Out')] 
1
#### Cost of phase [16]:take(V1,V,Out) -> [take(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of chains of take(V1,V,Out):
* Chain [[16],17]: 1*it(16)+1
  Such that:it(16) =< V1

  with precondition: [V1>=1,Out>=1,V>=Out] 

* Chain [17]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [20]...: 1*s(2)+0
  with precondition: [V1>=0] 

* Chain [19]: 1*s(3)+2*s(4)+1
  Such that:s(3) =< V
aux(1) =< V1
s(4) =< aux(1)

  with precondition: [V1>=0] 

* Chain [18]: 1*s(6)+1
  Such that:s(6) =< V

  with precondition: [V1=V,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19] with precondition: [V1>=0] 
    - Upper bound: 2*V1+1+nat(V) 
    - Complexity: n 
* Chain [18] with precondition: [V1=V,V1>=1] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 32 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 111 ms.

