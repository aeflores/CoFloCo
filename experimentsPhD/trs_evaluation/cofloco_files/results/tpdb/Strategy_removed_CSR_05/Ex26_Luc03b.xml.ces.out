
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [dbl/2]
2. recursive  : [first/3]
3. recursive [non_tail] : [sqr/2]
4. recursive  : [terms/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is partially evaluated into sqr/2
4. SCC is partially evaluated into terms/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations add/3 
* CE 17: add(V,V1,Out) = 1+ add(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 18: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of add/3 
* Loop 11: add(A,B,B) [B>=0,A=0] 
* Loop 12: add(V,V1,Out)->  add(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 

### Ranking functions of CR add(V,V1,Out) 
* RF of phase [12]: [V]

#### Partial ranking functions of CR add(V,V1,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V


### Resulting Chains:add(V,V1,Out) 
* [[12],11]
* [11]


### Merging Chains  add/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[12]]] --> 2 


### Specialization of cost equations dbl/2 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations dbl/2 
* CE 19: dbl(V,Out) = 1+ dbl(W,X)
     [W>=0,X+2=Out,W+1=V] 
* CE 20: dbl(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of dbl/2 
* Loop 13: dbl(V,Out) [Out=0,V=0] 
* Loop 14: dbl(V,Out)->  dbl(V',Out')
                  [V'>=0,Out=Out'+2,V'+1=V] 

### Ranking functions of CR dbl(V,Out) 
* RF of phase [14]: [V]

#### Partial ranking functions of CR dbl(V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V


### Resulting Chains:dbl(V,Out) 
* [[14],13]
* [13]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[14]]] --> 2 


### Specialization of cost equations first/3 
* CE 14 is refined into CE [21] 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 


#### Refined cost equations first/3 
* CE 21: first(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 22: first(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 23: first(V,V1,Out) = 1+ first(W1,X1,Y1)
     [V1+Y1>=Out,Out>=Y1+1,W1>=0,V1+Y1=Out+X1,W1+1=V] 

### Cost equations --> "Loop" of first/3 
* CEs [23] --> Loop 15 
* CEs [21,22] --> Loop 16 

#### Loops of first/3 
* Loop 15: first(V,V1,Out)->  first(V',V1',Out')
                  [V1+Out'>=Out,Out>=Out'+1,V'>=0,V1+Out'=Out+V1',V'+1=V] 
* Loop 16: first(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR first(V,V1,Out) 
* RF of phase [15]: [V,V1]

#### Partial ranking functions of CR first(V,V1,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V
    V1


### Resulting Chains:first(V,V1,Out) 
* [[15],16]
* [16]


### Merging Chains  first/3 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations sqr/2 
* CE 9 is refined into CE [24,25,26,27] 
* CE 8 is refined into CE [28] 


#### Refined cost equations sqr/2 
* CE 24: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):1+ add(A1,B1,C1):1
     [X=0,W=0,C1=0,B1=0,A1=0,Z=0,Y=0,Out=1,V=1] 
* CE 25: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):1+ add(X,A1,X):2
     [X>=1,X+1=Out,W=0,A1=0,Z=0,Y=0,V=1] 
* CE 26: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):2+ add(A1,Z,Z):1
     [Z>=2,Z+1=Out,Z=2*W,Z=2*Y,Z+2=2*V,X=0,A1=0] 
* CE 27: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):2+ add(X,A1,B1):2
     [B1>=X+2,X>=1,B1=X+A1,B1=Z+X,B1=2*W+X,B1=2*Y+X,B1+2=2*V+X,B1+1=Out] 
* CE 28: sqr(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [28] --> Loop 17 
* CEs [27] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of sqr/2 
* Loop 17: sqr(V,Out) [Out=0,V=0] 
* Loop 18: sqr(V,Out)->  sqr(V',Out')
                  [Out>=2*V,V>=2,Out'+2*V=Out+1,V=V'+1] 
* Loop 19: sqr(V,Out)->  sqr(V',Out')
                  [V>=2,V=V'+1,2*V=Out+1,Out'=0] 
* Loop 20: sqr(V,Out)->  sqr(V',Out')
                  [Out>=2,Out=Out'+1,V'=0,V=1] 
* Loop 21: sqr(V,Out)->  sqr(V',Out')
                  [Out'=0,V'=0,Out=1,V=1] 

### Ranking functions of CR sqr(V,Out) 
* RF of phase [18]: [V-1]

#### Partial ranking functions of CR sqr(V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V-1


### Resulting Chains:sqr(V,Out) 
* [[18],21,17]
* [21,17]
* [17]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,21]] --> 2 
* [[17,21,[18]]] --> 3 


### Specialization of cost equations terms/2 
* CE 7 is refined into CE [29,30,31] 


#### Refined cost equations terms/2 
* CE 29: terms(V,Out) = 1+ sqr(W,X):1+ terms(Y,Z)
     [Z+2=Out,Y=1,X=0,W=0,V=0] 
* CE 30: terms(V,Out) = 1+ sqr(W,X):2+ terms(Y,Z)
     [Z+3=Out,Y=2,X=1,W=1,V=1] 
* CE 31: terms(V,Out) = 1+ sqr(V,W):3+ terms(X,Y)
     [W>=2*V,V>=2,W+Y+2=Out,V+1=X] 

### Cost equations --> "Loop" of terms/2 
* CEs [31] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of terms/2 
* Loop 22: terms(V,Out)->  terms(V',Out')
                  [Out>=2*V+Out'+2,V>=2,V+1=V'] 
* Loop 23: terms(V,Out)->  terms(V',Out')
                  [Out=Out'+3,V'=2,V=1] 
* Loop 24: terms(V,Out)->  terms(V',Out')
                  [Out=Out'+2,V'=1,V=0] 

### Ranking functions of CR terms(V,Out) 

#### Partial ranking functions of CR terms(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:terms(V,Out) 
* [[22]]...
* [24,23,[22]]...
* [23,[22]]...


### Merging Chains  terms/2 into  External patterns of execution 
* [[[22],23,24]] --> 1 
* [[[22],23]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [32,33,34] 
* CE 3 is refined into CE [35,36,37] 
* CE 4 is refined into CE [38,39] 
* CE 5 is refined into CE [40,41] 
* CE 6 is refined into CE [42,43] 


#### Refined cost equations start/2 
* CE 32: start(V,V1) = 0+ terms(W1,X1):1
     [W1=0,V=0] 
* CE 33: start(V,V1) = 0+ terms(W1,X1):2
     [W1=1,V=1] 
* CE 34: start(V,V1) = 0+ terms(V,W1):3
     [V>=2] 
* CE 35: start(V,V1) = 0+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 36: start(V,V1) = 0+ sqr(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 37: start(V,V1) = 0+ sqr(V,W1):3
     [W1>=2*V,V>=2] 
* CE 38: start(V,V1) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 39: start(V,V1) = 0+ dbl(W1,X1):2
     [X1>=2,X1=2*W1,X1=2*V] 
* CE 40: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 41: start(V,V1) = 0+ add(V,W1,X1):2
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 42: start(V,V1) = 0+ first(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 43: start(V,V1) = 0+ first(V,V1,W1):2
     [V1>=W1,W1>=1,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [42] --> Loop 25 
* CEs [36,37,39,41,43] --> Loop 26 
* CEs [35,38,40] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [32] --> Loop 30 

#### Loops of start/2 
* Loop 25: start(V,V1) [V1>=0,V>=0] 
* Loop 26: start(V,V1) [V>=1] 
* Loop 27: start(V,V1) [V=0] 
* Loop 28: start(V,V1) [V>=2] 
* Loop 29: start(V,V1) [V=1] 
* Loop 30: start(V,V1) [V=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [30]...
* [29]...
* [28]...
* [27]
* [26]
* [25]


### Merging Chains  start/2 into  External patterns of execution 
* [[27]] --> 1 
* [[25]] --> 2 
* [[26]] --> 3 
* [[30]] --> 4 
* [[29]] --> 5 
* [[28]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:add(V,V1,Out) -> [add(V',V1',Out')] 
1
#### Cost of phase [12]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of chains of add(V,V1,Out):
* Chain [[12],11]: 1*it(12)+1
  Such that:it(12) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [11]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [14] 

 * loop 14:dbl(V,Out) -> [dbl(V',Out')] 
1
#### Cost of phase [14]:dbl(V,Out) -> [dbl(V',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'

#### Cost of chains of dbl(V,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< Out/2

  with precondition: [2*V=Out,V>=1] 

* Chain [13]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [15] 

 * loop 15:first(V,V1,Out) -> [first(V',V1',Out')] 
1
#### Cost of phase [15]:first(V,V1,Out) -> [first(V',V1',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
it(15) =< V1
it(15) =< V1-V1'

#### Cost of chains of first(V,V1,Out):
* Chain [[15],16]: 1*it(15)+1
  Such that:it(15) =< V

  with precondition: [V>=1,Out>=1,V1>=Out] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [18] 

 * loop 18:sqr(V,Out) -> [sqr(V',Out')] 
1*s(3)+1*s(4)+3
  Such that:s(3) =< V'

#### Cost of phase [18]:sqr(V,Out) -> [sqr(V',Out')] 
3*it(18)+1*s(5)+1*s(6)+0
  Such that:it(18) =< V-V'
aux(2) =< V
it(18) =< aux(2)
s(5) =< it(18)*aux(2)

#### Cost of chains of sqr(V,Out):
* Chain [[18],21,17]: 3*it(18)+1*s(5)+1*s(6)+4
  Such that:aux(3) =< V
it(18) =< aux(3)
s(5) =< it(18)*aux(3)

  with precondition: [V>=2,Out>=2*V] 

* Chain [21,17]: 4
  with precondition: [V=1,Out=1] 

* Chain [17]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [22] 

 * loop 22:terms(V,Out) -> [terms(V',Out')] 
3*s(12)+1*s(13)+1*s(14)+5
  Such that:s(11) =< V'
s(12) =< s(11)
s(13) =< s(12)*s(11)

#### Cost of phase [22]:terms(V,Out) -> [terms(V',Out')] 
6*it(22)+3*s(15)+1*s(16)+0
#### Cost of chains of terms(V,Out):
* Chain [[22]]...: 10*it(22)+0
  with precondition: [V>=2] 

* Chain [24,23,[22]]...: 10*it(22)+7
  with precondition: [V=0] 

* Chain [23,[22]]...: 10*it(22)+5
  with precondition: [V=1] 


#### Cost of chains of start(V,V1):
* Chain [30]...: 10*s(19)+7
  with precondition: [V=0] 

* Chain [29]...: 10*s(20)+5
  with precondition: [V=1] 

* Chain [28]...: 10*s(21)+0
  with precondition: [V>=2] 

* Chain [27]: 1
  with precondition: [V=0] 

* Chain [26]: 6*s(23)+1*s(24)+1*s(25)+4
  Such that:aux(6) =< V
s(23) =< aux(6)
s(24) =< s(23)*aux(6)

  with precondition: [V>=1] 

* Chain [25]: 1
  with precondition: [V>=0,V1>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [30]... with precondition: [V=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28]... with precondition: [V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [26] with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25] with precondition: [V>=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 26 ms.
* Invariants computed in 92 ms.
   - Backward Invariants 35 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 167 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 139 ms.
   - Equation cost structures 45 ms.
   - Phase cost structures 59 ms.
   - Chain cost structures 33 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 504 ms.

