
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [filter/4]
1. recursive  : [nats/2]
2. recursive  : [sieve/2]
3. non_recursive  : [zprimes/1]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into filter/4
1. SCC is partially evaluated into nats/2
2. SCC is partially evaluated into sieve/2
3. SCC is partially evaluated into zprimes/1
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations filter/4 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations filter/4 
* CE 14: filter(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 15: filter(V1,V,V2,Out) = 1+ filter(W2,X2,V2,Y2)
     [V1+Y2>=Out,Out>=Y2+1,X2>=0,V2>=0,V1+Y2=Out+W2,X2+1=V] 
* CE 16: filter(V1,V,V2,Out) = 1+ filter(W2,V2,V2,X2)
     [V1>=W2+1,W2>=0,V2>=0,X2+1=Out,V=0] 

### Cost equations --> "Loop" of filter/4 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of filter/4 
* Loop 10: filter(V1,V,V2,Out)->  filter(V1',V',V2,Out')
                  [V1>=V1'+1,V1'>=0,V2>=0,V>=1,Out+V1'=V1+Out',V=V'+1] 
* Loop 11: filter(V1,V,V2,Out)->  filter(A',V2,V2,B')
                  [V1>=A'+1,A'>=0,V2>=0,Out=B'+1,V=0] 
* Loop 12: filter(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR filter(V1,V,V2,Out) 
* RF of phase [10,11]: [V1]

#### Partial ranking functions of CR filter(V1,V,V2,Out) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    V depends on loops [11:1] 
  - RF of loop [10:1,11:1]:
    V1


### Resulting Chains:filter(V1,V,V2,Out) 
* [[10,11],12]
* [12]


### Merging Chains  filter/4 into  External patterns of execution 
* [[12]] --> 1 
* [[12,[10,11]]] --> 2 


### Specialization of cost equations nats/2 
* CE 12 is refined into CE [17] 


#### Refined cost equations nats/2 
* CE 17: nats(V1,Out) = 1+ nats(W1,X1)
     [V1>=0,V1+X1+1=Out,V1+1=W1] 

### Cost equations --> "Loop" of nats/2 
* CEs [17] --> Loop 13 

#### Loops of nats/2 
* Loop 13: nats(V1,Out)->  nats(V1',Out')
                  [V1>=0,V1+Out'+1=Out,V1+1=V1'] 

### Ranking functions of CR nats(V1,Out) 

#### Partial ranking functions of CR nats(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:nats(V1,Out) 
* [[13]]...


### Merging Chains  nats/2 into  External patterns of execution 
* [[[13]]] --> 1 


### Specialization of cost equations sieve/2 
* CE 11 is refined into CE [18] 
* CE 10 is refined into CE [19,20] 
* CE 9 is refined into CE [21] 


#### Refined cost equations sieve/2 
* CE 18: sieve(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 19: sieve(V1,Out) = 1+ filter(W1,X1,X1,Y1):1+ sieve(Z1,A2)
     [X1>=0,W1>=0,X1+A2+2=Out,W1+X1+2=V1,Z1=0,Y1=0] 
* CE 20: sieve(V1,Out) = 1+ filter(W1,X1,X1,Y1):2+ sieve(Y1,Z1)
     [W1>=Y1,Y1>=1,X1>=0,X1+Z1+2=Out,W1+X1+2=V1] 
* CE 21: sieve(V1,Out) = 1+ sieve(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of sieve/2 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of sieve/2 
* Loop 14: sieve(V1,Out)->  sieve(V1',Out')
                  [V1+Out'>=Out+V1',Out>=Out'+2,V1'>=1] 
* Loop 15: sieve(V1,Out)->  sieve(V1',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 16: sieve(V1,Out)->  sieve(V1',Out')
                  [V1+Out'>=Out,Out>=Out'+2,V1'=0] 
* Loop 17: sieve(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR sieve(V1,Out) 
* RF of phase [14,15]: [V1]

#### Partial ranking functions of CR sieve(V1,Out) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1]:
    V1/2-1
  - RF of loop [15:1]:
    V1


### Resulting Chains:sieve(V1,Out) 
* [[14,15],17]
* [[14,15],16,17]
* [17]
* [16,17]


### Merging Chains  sieve/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,16],[17,16,[14,15]],[17,[14,15]]] --> 2 


### Specialization of cost equations zprimes/1 
* CE 13 is refined into CE [22] 


#### Refined cost equations zprimes/1 
* CE 22: zprimes(Out) = 1+ nats(B,C):1
     [B=2] 

### Cost equations --> "Loop" of zprimes/1 
* CEs [22] --> Loop 18 

#### Loops of zprimes/1 
* Loop 18: zprimes(Out) [] 

### Ranking functions of CR zprimes(Out) 

#### Partial ranking functions of CR zprimes(Out) 

Warning: no base case found for predicate

### Resulting Chains:zprimes(Out) 
* [18]...


### Merging Chains  zprimes/1 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [23,24] 
* CE 3 is refined into CE [25,26] 
* CE 4 is refined into CE [27] 
* CE 5 is refined into CE [28] 


#### Refined cost equations start/3 
* CE 23: start(V1,V,V2) = 0+ filter(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 24: start(V1,V,V2) = 0+ filter(V1,V,V2,W2):2
     [V1>=W2,W2>=1,V2>=0,V>=0] 
* CE 25: start(V1,V,V2) = 0+ sieve(V1,W2):1
     [V1>=0,W2=0] 
* CE 26: start(V1,V,V2) = 0+ sieve(V1,W2):2
     [V1>=W2,W2>=1] 
* CE 27: start(V1,V,V2) = 0+ nats(V1,W2):1
     [V1>=0] 
* CE 28: start(V1,V,V2) = 0+ zprimes(W2):1
     [] 

### Cost equations --> "Loop" of start/3 
* CEs [27,28] --> Loop 19 
* CEs [23,24,25,26] --> Loop 20 

#### Loops of start/3 
* Loop 19: start(V1,V,V2) [] 
* Loop 20: start(V1,V,V2) [V1>=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [20]
* [19]...


### Merging Chains  start/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10,11] 

 * loop 10:filter(V1,V,V2,Out) -> [filter(V1',V',V2',Out')] 
1
 * loop 11:filter(V1,V,V2,Out) -> [filter(V1',V',V2',Out')] 
1
#### Cost of phase [10,11]:filter(V1,V,V2,Out) -> [filter(V1',V',V2',Out')] 
2*it(10)+0
  Such that:aux(9) =< V1
aux(10) =< V1-V1'
it(10) =< aux(9)
it(10) =< aux(10)

#### Cost of chains of filter(V1,V,V2,Out):
* Chain [[10,11],12]: 2*it(10)+0
  Such that:aux(11) =< V1
it(10) =< aux(11)

  with precondition: [V>=0,V2>=0,Out>=1,V1>=Out] 

* Chain [12]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 


#### Cost of loops [13] 

 * loop 13:nats(V1,Out) -> [nats(V1',Out')] 
1
#### Cost of phase [13]:nats(V1,Out) -> [nats(V1',Out')] 
1*it(13)+0
#### Cost of chains of nats(V1,Out):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V1>=0] 


#### Cost of loops [14,15] 

 * loop 14:sieve(V1,Out) -> [sieve(V1',Out')] 
2*s(4)+1
  Such that:s(3) =< V1
s(4) =< s(3)

 * loop 15:sieve(V1,Out) -> [sieve(V1',Out')] 
1
#### Cost of phase [14,15]:sieve(V1,Out) -> [sieve(V1',Out')] 
1*it(14)+1*it(15)+2*s(5)+0
  Such that:it(14) =< V1/2
it(14) =< V1/2-V1'/2
aux(13) =< V1
aux(14) =< V1-V1'
it(14) =< aux(13)
it(15) =< aux(13)
it(14) =< aux(14)
it(15) =< aux(14)
s(6) =< it(14)*aux(13)
s(5) =< s(6)

#### Cost of phase [14,15]:sieve(V1,Out) -> [sieve(V1',Out')] 
1*it(14)+1*it(15)+2*s(5)+0
  Such that:it(14) =< V1/2
it(14) =< V1/2-V1'/2
aux(13) =< V1
aux(14) =< V1-V1'
it(14) =< aux(13)
it(15) =< aux(13)
it(14) =< aux(14)
it(15) =< aux(14)
s(6) =< it(14)*aux(13)
s(5) =< s(6)

#### Cost of chains of sieve(V1,Out):
* Chain [[14,15],17]: 1*it(14)+1*it(15)+2*s(5)+0
  Such that:it(14) =< V1/2
aux(15) =< V1
it(14) =< aux(15)
it(15) =< aux(15)
s(6) =< it(14)*aux(15)
s(5) =< s(6)

  with precondition: [Out>=1,V1>=Out] 

* Chain [[14,15],16,17]: 1*it(14)+1*it(15)+2*s(5)+1
  Such that:it(14) =< V1/2
aux(16) =< V1
it(14) =< aux(16)
it(15) =< aux(16)
s(6) =< it(14)*aux(16)
s(5) =< s(6)

  with precondition: [Out>=3,V1>=Out] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [16,17]: 1
  with precondition: [Out>=2,V1>=Out] 


#### Cost of chains of zprimes(Out):
* Chain [18]...: 1*s(17)+1
  with precondition: [] 


#### Cost of chains of start(V1,V,V2):
* Chain [20]: 4*s(19)+2*s(22)+4*s(25)+1
  Such that:s(21) =< V1/2
aux(19) =< V1
s(19) =< aux(19)
s(22) =< s(21)
s(22) =< aux(19)
s(24) =< s(22)*aux(19)
s(25) =< s(24)

  with precondition: [V1>=0] 

* Chain [19]...: 1*aux(20)+0
  with precondition: [] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [20] with precondition: [V1>=0] 
    - Upper bound: 4*V1+1+V1/2* (4*V1)+V1 
    - Complexity: n^2 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 20 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 35 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 132 ms.

