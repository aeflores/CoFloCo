
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [from/2]
1. non_recursive  : [head/2]
2. non_recursive  : [fun/2]
3. recursive  : [sel/3]
4. recursive  : [take/3]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is partially evaluated into head/2
2. SCC is partially evaluated into fun/2
3. SCC is partially evaluated into sel/3
4. SCC is partially evaluated into take/3
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 7 is refined into CE [18] 


#### Refined cost equations from/2 
* CE 18: from(V,Out) = 1+ from(W,X)
     [V>=0,V+X+1=Out,V+1=W] 

### Cost equations --> "Loop" of from/2 
* CEs [18] --> Loop 12 

#### Loops of from/2 
* Loop 12: from(V,Out)->  from(V',Out')
                  [V>=0,V+Out'+1=Out,V+1=V'] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V,Out) 
* [[12]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[12]]] --> 1 


### Specialization of cost equations head/2 
* CE 8 is refined into CE [19] 
* CE 9 is refined into CE [20] 


#### Refined cost equations head/2 
* CE 19: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 20: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [19] --> Loop 13 
* CEs [20] --> Loop 14 

#### Loops of head/2 
* Loop 13: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 14: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [14]
* [13]


### Merging Chains  head/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations fun/2 
* CE 10 is refined into CE [21,22] 
* CE 11 is refined into CE [23] 


#### Refined cost equations fun/2 
* CE 21: fun(V,Out) = 1+ head(W,X):1
     [V>=W+1,W>=0,X=0,Out=0] 
* CE 22: fun(V,Out) = 1+ head(W,Out):2
     [W>=Out+1,V>=W+1,Out>=0] 
* CE 23: fun(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of fun/2 
* CEs [22] --> Loop 15 
* CEs [21,23] --> Loop 16 

#### Loops of fun/2 
* Loop 15: fun(V,Out) [V>=Out+2,Out>=0] 
* Loop 16: fun(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [16]
* [15]


### Merging Chains  fun/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations sel/3 
* CE 17 is refined into CE [24] 
* CE 15 is refined into CE [25] 
* CE 16 is refined into CE [26] 


#### Refined cost equations sel/3 
* CE 24: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 25: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 26: sel(V,V1,Out) = 1+ sel(W1,X1,Out)
     [V1>=X1+1,X1>=0,W1>=0,W1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [26] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of sel/3 
* Loop 17: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V'>=0,V'+1=V] 
* Loop 18: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 19: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [17]: [V,V1]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V
    V1


### Resulting Chains:sel(V,V1,Out) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  sel/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18],[18,[17]]] --> 2 
* [[19,[17]]] --> 3 


### Specialization of cost equations take/3 
* CE 12 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 13 is refined into CE [29] 


#### Refined cost equations take/3 
* CE 27: take(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 28: take(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 29: take(V,V1,Out) = 1+ take(W1,X1,Y1)
     [V1+Y1>=Out,Out>=Y1+1,W1>=0,V1+Y1=Out+X1,W1+1=V] 

### Cost equations --> "Loop" of take/3 
* CEs [29] --> Loop 20 
* CEs [27,28] --> Loop 21 

#### Loops of take/3 
* Loop 20: take(V,V1,Out)->  take(V',V1',Out')
                  [V1+Out'>=Out,Out>=Out'+1,V'>=0,V1+Out'=Out+V1',V'+1=V] 
* Loop 21: take(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR take(V,V1,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR take(V,V1,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:take(V,V1,Out) 
* [[20],21]
* [21]


### Merging Chains  take/3 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[20]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [30] 
* CE 3 is refined into CE [31,32] 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35,36] 
* CE 6 is refined into CE [37,38,39] 


#### Refined cost equations start/2 
* CE 30: start(V,V1) = 0+ from(V,W1):1
     [V>=0] 
* CE 31: start(V,V1) = 0+ head(V,W1):1
     [V>=0,W1=0] 
* CE 32: start(V,V1) = 0+ head(V,W1):2
     [V>=W1+1,W1>=0] 
* CE 33: start(V,V1) = 0+ fun(V,W1):1
     [V>=0,W1=0] 
* CE 34: start(V,V1) = 0+ fun(V,W1):2
     [V>=W1+2,W1>=0] 
* CE 35: start(V,V1) = 0+ take(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 36: start(V,V1) = 0+ take(V,V1,W1):2
     [V1>=W1,W1>=1,V>=1] 
* CE 37: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 38: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 39: start(V,V1) = 0+ sel(V,V1,W1):3
     [V1>=V+W1+1,W1>=0,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [31,32,33,34,35,36,37,38,39] --> Loop 22 
* CEs [30] --> Loop 23 

#### Loops of start/2 
* Loop 22: start(V,V1) [V>=0] 
* Loop 23: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [23]...
* [22]


### Merging Chains  start/2 into  External patterns of execution 
* [[22]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [12]:from(V,Out) -> [from(V',Out')] 
1*it(12)+0
#### Cost of chains of from(V,Out):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V>=0] 


#### Cost of chains of head(V,Out):
* Chain [14]: 0
  with precondition: [Out=0,V>=0] 

* Chain [13]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of fun(V,Out):
* Chain [16]: 1
  with precondition: [Out=0,V>=0] 

* Chain [15]: 2
  with precondition: [Out>=0,V>=Out+2] 


#### Cost of loops [17] 

 * loop 17:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
#### Cost of phase [17]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of phase [17]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of chains of sel(V,V1,Out):
* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< V

  with precondition: [V>=1,Out>=0,V1>=Out+V+1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [19]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [20] 

 * loop 20:take(V,V1,Out) -> [take(V',V1',Out')] 
1
#### Cost of phase [20]:take(V,V1,Out) -> [take(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of chains of take(V,V1,Out):
* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [V>=1,Out>=1,V1>=Out] 

* Chain [21]: 1
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [23]...: 1*s(2)+0
  with precondition: [V>=0] 

* Chain [22]: 2*s(3)+1*s(4)+2
  Such that:s(4) =< V1
aux(1) =< V
s(3) =< aux(1)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [23]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22] with precondition: [V>=0] 
    - Upper bound: 2*V+2+nat(V1) 
    - Complexity: n 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 34 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 112 ms.

