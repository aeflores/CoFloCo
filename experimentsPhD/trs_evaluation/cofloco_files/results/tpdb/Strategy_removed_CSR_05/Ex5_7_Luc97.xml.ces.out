
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [dbl/2]
1. recursive  : [dbl1/2]
2. recursive  : [dbls/2]
3. recursive  : [from/2]
4. recursive  : [sel/3]
5. recursive  : [indx/3]
6. recursive  : [quote/2]
7. recursive  : [sel1/3]
8. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into dbl/2
1. SCC is partially evaluated into dbl1/2
2. SCC is partially evaluated into dbls/2
3. SCC is partially evaluated into from/2
4. SCC is partially evaluated into sel/3
5. SCC is partially evaluated into indx/3
6. SCC is partially evaluated into quote/2
7. SCC is partially evaluated into sel1/3
8. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations dbl/2 
* CE 13 is refined into CE [30] 
* CE 15 is refined into CE [31] 
* CE 14 is refined into CE [32] 


#### Refined cost equations dbl/2 
* CE 30: dbl(V1,Out) = 1
     [Out=0,V1=0] 
* CE 31: dbl(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 32: dbl(V1,Out) = 1+ dbl(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 

### Cost equations --> "Loop" of dbl/2 
* CEs [32] --> Loop 19 
* CEs [30,31] --> Loop 20 

#### Loops of dbl/2 
* Loop 19: dbl(V1,Out)->  dbl(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 
* Loop 20: dbl(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR dbl(V1,Out) 
* RF of phase [19]: [V1]

#### Partial ranking functions of CR dbl(V1,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V1


### Resulting Chains:dbl(V1,Out) 
* [[19],20]
* [20]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 


### Specialization of cost equations dbl1/2 
* CE 16 is refined into CE [33] 
* CE 18 is refined into CE [34] 
* CE 17 is refined into CE [35] 


#### Refined cost equations dbl1/2 
* CE 33: dbl1(V1,Out) = 1
     [Out=0,V1=0] 
* CE 34: dbl1(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 35: dbl1(V1,Out) = 1+ dbl1(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 

### Cost equations --> "Loop" of dbl1/2 
* CEs [35] --> Loop 21 
* CEs [33,34] --> Loop 22 

#### Loops of dbl1/2 
* Loop 21: dbl1(V1,Out)->  dbl1(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 
* Loop 22: dbl1(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR dbl1(V1,Out) 
* RF of phase [21]: [V1]

#### Partial ranking functions of CR dbl1(V1,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V1


### Resulting Chains:dbl1(V1,Out) 
* [[21],22]
* [22]


### Merging Chains  dbl1/2 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations dbls/2 
* CE 29 is refined into CE [36] 
* CE 28 is refined into CE [37,38] 


#### Refined cost equations dbls/2 
* CE 36: dbls(V1,Out) = 1
     [Out=0,V1=0] 
* CE 37: dbls(V1,Out) = 1+ dbl(W1,X1):1+ dbls(Y1,Z1)
     [Y1>=0,W1>=0,W1+Y1+1=V1,Z1+1=Out,X1=0] 
* CE 38: dbls(V1,Out) = 1+ dbl(W1,X1):2+ dbls(Y1,Z1)
     [2*W1>=X1,Y1>=0,X1>=2,X1+Z1+1=Out,W1+Y1+1=V1] 

### Cost equations --> "Loop" of dbls/2 
* CEs [38] --> Loop 23 
* CEs [37] --> Loop 24 
* CEs [36] --> Loop 25 

#### Loops of dbls/2 
* Loop 23: dbls(V1,Out)->  dbls(V1',Out')
                  [Out'+2*V1>=2*V1'+Out+1,Out>=Out'+3,V1'>=0] 
* Loop 24: dbls(V1,Out)->  dbls(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 25: dbls(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR dbls(V1,Out) 
* RF of phase [23,24]: [V1]

#### Partial ranking functions of CR dbls(V1,Out) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1]:
    V1-1
  - RF of loop [24:1]:
    V1


### Resulting Chains:dbls(V1,Out) 
* [[23,24],25]
* [25]


### Merging Chains  dbls/2 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[23,24]]] --> 2 


### Specialization of cost equations from/2 
* CE 19 is refined into CE [39] 


#### Refined cost equations from/2 
* CE 39: from(V1,Out) = 1+ from(W1,X1)
     [V1>=0,V1+X1+1=Out,V1+1=W1] 

### Cost equations --> "Loop" of from/2 
* CEs [39] --> Loop 26 

#### Loops of from/2 
* Loop 26: from(V1,Out)->  from(V1',Out')
                  [V1>=0,V1+Out'+1=Out,V1+1=V1'] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V1,Out) 
* [[26]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[26]]] --> 1 


### Specialization of cost equations sel/3 
* CE 12 is refined into CE [40] 
* CE 10 is refined into CE [41] 
* CE 11 is refined into CE [42] 


#### Refined cost equations sel/3 
* CE 40: sel(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 41: sel(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 
* CE 42: sel(V1,V,Out) = 1+ sel(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sel/3 
* CEs [42] --> Loop 27 
* CEs [40] --> Loop 28 
* CEs [41] --> Loop 29 

#### Loops of sel/3 
* Loop 27: sel(V1,V,Out)->  sel(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 28: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 29: sel(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel(V1,V,Out) 
* RF of phase [27]: [V,V1]

#### Partial ranking functions of CR sel(V1,V,Out) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V
    V1


### Resulting Chains:sel(V1,V,Out) 
* [[27],29]
* [[27],28]
* [29]
* [28]


### Merging Chains  sel/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28],[28,[27]]] --> 2 
* [[29,[27]]] --> 3 


### Specialization of cost equations indx/3 
* CE 27 is refined into CE [43] 
* CE 26 is refined into CE [44,45,46] 


#### Refined cost equations indx/3 
* CE 43: indx(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 44: indx(V1,V,Out) = 1+ sel(W1,V,X1):1+ indx(Y1,V,Z1)
     [V>=X1+1,Y1>=0,X1>=0,X1+Z1+1=Out,Y1+1=V1,W1=0] 
* CE 45: indx(V1,V,Out) = 1+ sel(W1,V,X1):2+ indx(Y1,V,Z1)
     [Y1>=0,V>=0,W1>=0,W1+Y1+1=V1,Z1+1=Out,X1=0] 
* CE 46: indx(V1,V,Out) = 1+ sel(W1,V,X1):3+ indx(Y1,V,Z1)
     [V>=W1+X1+1,Y1>=0,X1>=0,W1>=1,X1+Z1+1=Out,W1+Y1+1=V1] 

### Cost equations --> "Loop" of indx/3 
* CEs [46] --> Loop 30 
* CEs [45] --> Loop 31 
* CEs [44] --> Loop 32 
* CEs [43] --> Loop 33 

#### Loops of indx/3 
* Loop 30: indx(V1,V,Out)->  indx(V1',V,Out')
                  [V+V1'+Out'+1>=V1+Out,Out>=Out'+1,V1>=V1'+2,V1'>=0] 
* Loop 31: indx(V1,V,Out)->  indx(V1',V,Out')
                  [V1>=V1'+1,V1'>=0,V>=0,Out=Out'+1] 
* Loop 32: indx(V1,V,Out)->  indx(V1',V,Out')
                  [V+Out'>=Out,Out>=Out'+1,V1>=1,V1=V1'+1] 
* Loop 33: indx(V1,V,Out) [V>=0,Out=0,V1=0] 

### Ranking functions of CR indx(V1,V,Out) 
* RF of phase [30,31,32]: [V1]

#### Partial ranking functions of CR indx(V1,V,Out) 
* Partial RF of phase [30,31,32]:
  - RF of loop [30:1]:
    V1-1
  - RF of loop [31:1,32:1]:
    V1


### Resulting Chains:indx(V1,V,Out) 
* [[30,31,32],33]
* [33]


### Merging Chains  indx/3 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[30,31,32]]] --> 2 


### Specialization of cost equations quote/2 
* CE 24 is refined into CE [47] 
* CE 25 is refined into CE [48] 
* CE 23 is refined into CE [49] 


#### Refined cost equations quote/2 
* CE 47: quote(V1,Out) = 1
     [Out=0,V1=0] 
* CE 48: quote(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 49: quote(V1,Out) = 1+ quote(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of quote/2 
* CEs [49] --> Loop 34 
* CEs [47,48] --> Loop 35 

#### Loops of quote/2 
* Loop 34: quote(V1,Out)->  quote(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 35: quote(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR quote(V1,Out) 
* RF of phase [34]: [V1]

#### Partial ranking functions of CR quote(V1,Out) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V1


### Resulting Chains:quote(V1,Out) 
* [[34],35]
* [35]


### Merging Chains  quote/2 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[34]]] --> 2 


### Specialization of cost equations sel1/3 
* CE 22 is refined into CE [50] 
* CE 20 is refined into CE [51] 
* CE 21 is refined into CE [52] 


#### Refined cost equations sel1/3 
* CE 50: sel1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 51: sel1(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 
* CE 52: sel1(V1,V,Out) = 1+ sel1(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sel1/3 
* CEs [52] --> Loop 36 
* CEs [50] --> Loop 37 
* CEs [51] --> Loop 38 

#### Loops of sel1/3 
* Loop 36: sel1(V1,V,Out)->  sel1(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 37: sel1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 38: sel1(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel1(V1,V,Out) 
* RF of phase [36]: [V,V1]

#### Partial ranking functions of CR sel1(V1,V,Out) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    V
    V1


### Resulting Chains:sel1(V1,V,Out) 
* [[36],38]
* [[36],37]
* [38]
* [37]


### Merging Chains  sel1/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37],[37,[36]]] --> 2 
* [[38,[36]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [53,54,55] 
* CE 3 is refined into CE [56,57] 
* CE 4 is refined into CE [58,59] 
* CE 5 is refined into CE [60] 
* CE 6 is refined into CE [61,62,63] 
* CE 7 is refined into CE [64,65] 
* CE 8 is refined into CE [66,67] 
* CE 9 is refined into CE [68,69] 


#### Refined cost equations start/2 
* CE 53: start(V1,V) = 0+ sel(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 54: start(V1,V) = 0+ sel(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 55: start(V1,V) = 0+ sel(V1,V,W1):3
     [V>=V1+W1+1,W1>=0,V1>=1] 
* CE 56: start(V1,V) = 0+ dbl(V1,W1):1
     [V1>=0,W1=0] 
* CE 57: start(V1,V) = 0+ dbl(V1,W1):2
     [2*V1>=W1,W1>=2] 
* CE 58: start(V1,V) = 0+ dbl1(V1,W1):1
     [V1>=0,W1=0] 
* CE 59: start(V1,V) = 0+ dbl1(V1,W1):2
     [2*V1>=W1,W1>=2] 
* CE 60: start(V1,V) = 0+ from(V1,W1):1
     [V1>=0] 
* CE 61: start(V1,V) = 0+ sel1(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 62: start(V1,V) = 0+ sel1(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 63: start(V1,V) = 0+ sel1(V1,V,W1):3
     [V>=V1+W1+1,W1>=0,V1>=1] 
* CE 64: start(V1,V) = 0+ quote(V1,W1):1
     [V1>=0,W1=0] 
* CE 65: start(V1,V) = 0+ quote(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 66: start(V1,V) = 0+ indx(W1,V,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 67: start(V1,V) = 0+ indx(V1,V,W1):2
     [W1>=1,V>=0,V1>=1] 
* CE 68: start(V1,V) = 0+ dbls(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 69: start(V1,V) = 0+ dbls(V1,W1):2
     [2*V1>=W1+1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69] --> Loop 39 
* CEs [60] --> Loop 40 

#### Loops of start/2 
* Loop 39: start(V1,V) [V1>=0] 
* Loop 40: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [40]...
* [39]


### Merging Chains  start/2 into  External patterns of execution 
* [[39]] --> 1 
* [[40]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:dbl(V1,Out) -> [dbl(V1',Out')] 
1
#### Cost of phase [19]:dbl(V1,Out) -> [dbl(V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of chains of dbl(V1,Out):
* Chain [[19],20]: 1*it(19)+1
  Such that:it(19) =< Out/2

  with precondition: [Out>=2,2*V1>=Out] 

* Chain [20]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [21] 

 * loop 21:dbl1(V1,Out) -> [dbl1(V1',Out')] 
1
#### Cost of phase [21]:dbl1(V1,Out) -> [dbl1(V1',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'

#### Cost of chains of dbl1(V1,Out):
* Chain [[21],22]: 1*it(21)+1
  Such that:it(21) =< Out/2

  with precondition: [Out>=2,2*V1>=Out] 

* Chain [22]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [23,24] 

 * loop 23:dbls(V1,Out) -> [dbls(V1',Out')] 
1*s(2)+2
  Such that:s(2) =< V1-V1'

 * loop 24:dbls(V1,Out) -> [dbls(V1',Out')] 
2
#### Cost of phase [23,24]:dbls(V1,Out) -> [dbls(V1',Out')] 
5*it(23)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(23) =< aux(1)
it(23) =< aux(2)

#### Cost of chains of dbls(V1,Out):
* Chain [[23,24],25]: 5*it(23)+1
  Such that:aux(3) =< V1
it(23) =< aux(3)

  with precondition: [Out>=1,2*V1>=Out+1] 

* Chain [25]: 1
  with precondition: [V1=0,Out=0] 


#### Cost of loops [26] 

 * loop 26:from(V1,Out) -> [from(V1',Out')] 
1
#### Cost of phase [26]:from(V1,Out) -> [from(V1',Out')] 
1*it(26)+0
#### Cost of chains of from(V1,Out):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [V1>=0] 


#### Cost of loops [27] 

 * loop 27:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1
#### Cost of phase [27]:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'
it(27) =< V
it(27) =< V-V'

#### Cost of phase [27]:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'
it(27) =< V
it(27) =< V-V'

#### Cost of chains of sel(V1,V,Out):
* Chain [[27],29]: 1*it(27)+1
  Such that:it(27) =< V1

  with precondition: [V1>=1,Out>=0,V>=Out+V1+1] 

* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [29]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [28]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [30,31,32] 

 * loop 30:indx(V1,V,Out) -> [indx(V1',V',Out')] 
1*s(6)+2
  Such that:s(6) =< V1-V1'

 * loop 31:indx(V1,V,Out) -> [indx(V1',V',Out')] 
1*s(8)+1
  Such that:s(8) =< V

 * loop 32:indx(V1,V,Out) -> [indx(V1',V',Out')] 
2
#### Cost of phase [30,31,32]:indx(V1,V,Out) -> [indx(V1',V',Out')] 
6*it(30)+1*s(10)+0
  Such that:aux(4) =< V
aux(5) =< V1
aux(6) =< V1-V1'
it(30) =< aux(5)
it(30) =< aux(6)
s(10) =< it(30)*aux(4)

#### Cost of chains of indx(V1,V,Out):
* Chain [[30,31,32],33]: 6*it(30)+1*s(10)+1
  Such that:aux(4) =< V
aux(7) =< V1
it(30) =< aux(7)
s(10) =< it(30)*aux(4)

  with precondition: [V1>=1,V>=0,Out>=1] 

* Chain [33]: 1
  with precondition: [V1=0,Out=0,V>=0] 


#### Cost of loops [34] 

 * loop 34:quote(V1,Out) -> [quote(V1',Out')] 
1
#### Cost of phase [34]:quote(V1,Out) -> [quote(V1',Out')] 
1*it(34)+0
  Such that:it(34) =< V1
it(34) =< V1-V1'

#### Cost of chains of quote(V1,Out):
* Chain [[34],35]: 1*it(34)+1
  Such that:it(34) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [35]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [36] 

 * loop 36:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1
#### Cost of phase [36]:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1*it(36)+0
  Such that:it(36) =< V1
it(36) =< V1-V1'
it(36) =< V
it(36) =< V-V'

#### Cost of phase [36]:sel1(V1,V,Out) -> [sel1(V1',V',Out')] 
1*it(36)+0
  Such that:it(36) =< V1
it(36) =< V1-V1'
it(36) =< V
it(36) =< V-V'

#### Cost of chains of sel1(V1,V,Out):
* Chain [[36],38]: 1*it(36)+1
  Such that:it(36) =< V1

  with precondition: [V1>=1,Out>=0,V>=Out+V1+1] 

* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [38]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [37]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [40]...: 1*s(12)+0
  with precondition: [V1>=0] 

* Chain [39]: 2*s(13)+16*s(14)+1*s(23)+1
  Such that:aux(8) =< V1
aux(9) =< V
s(14) =< aux(8)
s(13) =< aux(9)
s(23) =< s(14)*aux(9)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [40]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39] with precondition: [V1>=0] 
    - Upper bound: 16*V1+1+nat(V)*2+nat(V)*V1 
    - Complexity: n^2 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 43 ms.
* Invariants computed in 139 ms.
   - Backward Invariants 63 ms.
   - Transitive Invariants 35 ms.
* Refinement performed in 228 ms.
* Termination proved in 45 ms.
* Upper bounds computed in 248 ms.
   - Equation cost structures 78 ms.
   - Phase cost structures 118 ms.
   - Chain cost structures 70 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 802 ms.

