
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [incr/2]
1. recursive [non_tail] : [adx/2]
2. non_recursive  : [head/2]
3. recursive  : [zeros/1]
4. non_recursive  : [nats/1]
5. non_recursive  : [tail/2]
6. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into incr/2
1. SCC is partially evaluated into adx/2
2. SCC is partially evaluated into head/2
3. SCC is partially evaluated into zeros/1
4. SCC is partially evaluated into nats/1
5. SCC is partially evaluated into tail/2
6. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations incr/2 
* CE 8 is refined into CE [20] 
* CE 10 is refined into CE [21] 
* CE 9 is refined into CE [22] 


#### Refined cost equations incr/2 
* CE 20: incr(V,Out) = 1
     [Out=0,V=0] 
* CE 21: incr(V,Out) = 0
     [V>=0,Out=0] 
* CE 22: incr(V,Out) = 1+ incr(W,X)
     [V>=W+1,W>=0,Out+W=V+X+1] 

### Cost equations --> "Loop" of incr/2 
* CEs [22] --> Loop 12 
* CEs [20,21] --> Loop 13 

#### Loops of incr/2 
* Loop 12: incr(V,Out)->  incr(V',Out')
                  [V>=V'+1,V'>=0,V+Out'+1=Out+V'] 
* Loop 13: incr(V,Out) [V>=0,Out=0] 

### Ranking functions of CR incr(V,Out) 
* RF of phase [12]: [V]

#### Partial ranking functions of CR incr(V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V


### Resulting Chains:incr(V,Out) 
* [[12],13]
* [13]


### Merging Chains  incr/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations adx/2 
* CE 11 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 12 is refined into CE [25,26] 


#### Refined cost equations adx/2 
* CE 23: adx(V,Out) = 1
     [Out=0,V=0] 
* CE 24: adx(V,Out) = 0
     [V>=0,Out=0] 
* CE 25: adx(V,Out) = 1+ adx(W,X)+ incr(Y,Z):1
     [V>=W+1,W>=0,Y>=0,Y+W=V+X,Z=0,Out=0] 
* CE 26: adx(V,Out) = 1+ adx(W,X)+ incr(Y,Out):2
     [V>=W+1,2*Y>=Out,W>=0,Out>=2,Y+W=V+X] 

### Cost equations --> "Loop" of adx/2 
* CEs [26] --> Loop 14 
* CEs [25] --> Loop 15 
* CEs [23,24] --> Loop 16 

#### Loops of adx/2 
* Loop 14: adx(V,Out)->  adx(V',Out')
                  [2*V+2*Out'>=2*V'+Out,V>=V'+1,V'>=0,Out>=2] 
* Loop 15: adx(V,Out)->  adx(V',Out')
                  [V+Out'>=V',V>=V'+1,V'>=0,Out=0] 
* Loop 16: adx(V,Out) [V>=0,Out=0] 

### Ranking functions of CR adx(V,Out) 
* RF of phase [14,15]: [V]

#### Partial ranking functions of CR adx(V,Out) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1,15:1]:
    V


### Resulting Chains:adx(V,Out) 
* [[14,15],16]
* [16]


### Merging Chains  adx/2 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[14,15]]] --> 2 


### Specialization of cost equations head/2 
* CE 16 is refined into CE [27] 
* CE 17 is refined into CE [28] 


#### Refined cost equations head/2 
* CE 27: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 28: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [27] --> Loop 17 
* CEs [28] --> Loop 18 

#### Loops of head/2 
* Loop 17: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 18: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [18]
* [17]


### Merging Chains  head/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations zeros/1 
* CE 15 is refined into CE [29] 


#### Refined cost equations zeros/1 
* CE 29: zeros(Out) = 1+ zeros(B)
     [B+1=Out] 

### Cost equations --> "Loop" of zeros/1 
* CEs [29] --> Loop 19 

#### Loops of zeros/1 
* Loop 19: zeros(Out)->  zeros(Out')
                  [Out=Out'+1] 

### Ranking functions of CR zeros(Out) 

#### Partial ranking functions of CR zeros(Out) 

Warning: no base case found for predicate

### Resulting Chains:zeros(Out) 
* [[19]]...


### Merging Chains  zeros/1 into  External patterns of execution 
* [[[19]]] --> 1 


### Specialization of cost equations nats/1 
* CE 14 is refined into CE [30] 


#### Refined cost equations nats/1 
* CE 30: nats(Out) = 1+ zeros(B):1
     [] 

### Cost equations --> "Loop" of nats/1 
* CEs [30] --> Loop 20 

#### Loops of nats/1 
* Loop 20: nats(Out) [] 

### Ranking functions of CR nats(Out) 

#### Partial ranking functions of CR nats(Out) 

Warning: no base case found for predicate

### Resulting Chains:nats(Out) 
* [20]...


### Merging Chains  nats/1 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations tail/2 
* CE 18 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations tail/2 
* CE 31: tail(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 32: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [31] --> Loop 21 
* CEs [32] --> Loop 22 

#### Loops of tail/2 
* Loop 21: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 22: tail(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [22]
* [21]


### Merging Chains  tail/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [33,34] 
* CE 3 is refined into CE [35,36] 
* CE 4 is refined into CE [37] 
* CE 5 is refined into CE [38] 
* CE 6 is refined into CE [39,40] 
* CE 7 is refined into CE [41,42] 


#### Refined cost equations start/1 
* CE 33: start(V) = 0+ incr(V,W):1
     [V>=0,W=0] 
* CE 34: start(V) = 0+ incr(V,W):2
     [2*V>=W,W>=2] 
* CE 35: start(V) = 0+ adx(V,W):1
     [V>=0,W=0] 
* CE 36: start(V) = 0+ adx(V,W):2
     [W>=0,V>=1] 
* CE 37: start(V) = 0+ nats(W):1
     [] 
* CE 38: start(V) = 0+ zeros(W):1
     [] 
* CE 39: start(V) = 0+ head(V,W):1
     [V>=0,W=0] 
* CE 40: start(V) = 0+ head(V,W):2
     [V>=W+1,W>=0] 
* CE 41: start(V) = 0+ tail(V,W):1
     [V>=0,W=0] 
* CE 42: start(V) = 0+ tail(V,W):2
     [V>=W+1,W>=0] 

### Cost equations --> "Loop" of start/1 
* CEs [33,34,35,36,39,40,41,42] --> Loop 23 
* CEs [37,38] --> Loop 24 

#### Loops of start/1 
* Loop 23: start(V) [V>=0] 
* Loop 24: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [24]...
* [23]


### Merging Chains  start/1 into  External patterns of execution 
* [[23]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:incr(V,Out) -> [incr(V',Out')] 
1
#### Cost of phase [12]:incr(V,Out) -> [incr(V',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of chains of incr(V,Out):
* Chain [[12],13]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out>=2,2*V>=Out] 

* Chain [13]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [14,15] 

 * loop 14:adx(V,Out) -> [adx(V',Out')] 
1*s(2)+2
 * loop 15:adx(V,Out) -> [adx(V',Out')] 
2
#### Cost of phase [14,15]:adx(V,Out) -> [adx(V',Out')] 
4*it(14)+1*s(3)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of chains of adx(V,Out):
* Chain [[14,15],16]: 4*it(14)+1*s(3)+1
  Such that:aux(3) =< V
it(14) =< aux(3)

  with precondition: [V>=1,Out>=0] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of head(V,Out):
* Chain [18]: 0
  with precondition: [Out=0,V>=0] 

* Chain [17]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of loops [19] 

 * loop 19:zeros(Out) -> [zeros(Out')] 
1
#### Cost of phase [19]:zeros(Out) -> [zeros(Out')] 
1*it(19)+0
#### Cost of chains of zeros(Out):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [] 


#### Cost of chains of nats(Out):
* Chain [20]...: 1*s(4)+1
  with precondition: [] 


#### Cost of chains of tail(V,Out):
* Chain [22]: 0
  with precondition: [Out=0,V>=0] 

* Chain [21]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of start(V):
* Chain [24]...: 1*aux(4)+0
  with precondition: [] 

* Chain [23]: 5*s(7)+1*s(10)+1
  Such that:aux(5) =< V
s(7) =< aux(5)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 40 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 87 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 58 ms.
   - Equation cost structures 27 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 260 ms.

