
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [fib1/3]
2. recursive  : [sel/3]
3. non_recursive  : [fib/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into fib1/3
2. SCC is partially evaluated into sel/3
3. SCC is partially evaluated into fib/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 10 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations add/3 
* CE 14: add(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 15: add(A,B,B) = 1
     [B>=0,A=0] 
* CE 16: add(V,V1,Out) = 1+ add(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 

### Cost equations --> "Loop" of add/3 
* CEs [16] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of add/3 
* Loop 10: add(V,V1,Out)->  add(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 
* Loop 11: add(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 12: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 
* RF of phase [10]: [V]

#### Partial ranking functions of CR add(V,V1,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V


### Resulting Chains:add(V,V1,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  add/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,[10]]] --> 3 
* [[11,[10]]] --> 4 


### Specialization of cost equations fib1/3 
* CE 7 is refined into CE [17,18,19,20] 


#### Refined cost equations fib1/3 
* CE 17: fib1(V,V1,Out) = 1+ add(W1,V1,V1):1+ fib1(V1,V1,X1)
     [V1>=0,Out=X1+1,W1=0,V=0] 
* CE 18: fib1(V,V1,Out) = 1+ add(V,V1,W1):2+ fib1(V1,X1,Y1)
     [V1>=0,V>=0,V+Y1+1=Out,X1=0,W1=0] 
* CE 19: fib1(V,V1,Out) = 1+ add(V,W1,X1):3+ fib1(Y1,X1,Z1)
     [X1>=V,V>=1,X1=V+Y1,X1=V+W1,V+Z1+1=Out,X1=V+V1] 
* CE 20: fib1(V,V1,Out) = 1+ add(V,V1,W1):4+ fib1(V1,W1,X1)
     [V>=W1,W1>=1,V1>=0,V+X1+1=Out] 

### Cost equations --> "Loop" of fib1/3 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of fib1/3 
* Loop 13: fib1(V,V1,Out)->  fib1(V1,A',B')
                  [V>=A',A'>=1,V1>=0,V+B'+1=Out] 
* Loop 14: fib1(V,V1,Out)->  fib1(V1,A',B')
                  [V1>=0,V>=1,V+V1=A',V+B'+1=Out] 
* Loop 15: fib1(V,V1,Out)->  fib1(V1,A',B')
                  [V1>=0,V>=0,V+B'+1=Out,A'=0] 
* Loop 16: fib1(V,V1,Out)->  fib1(V1,V1,A')
                  [V1>=0,Out=A'+1,V=0] 

### Ranking functions of CR fib1(V,V1,Out) 

#### Partial ranking functions of CR fib1(V,V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:fib1(V,V1,Out) 
* [[13,14,15,16]]...


### Merging Chains  fib1/3 into  External patterns of execution 
* [[[13,14,15,16]]] --> 1 


### Specialization of cost equations sel/3 
* CE 13 is refined into CE [21] 
* CE 11 is refined into CE [22] 
* CE 12 is refined into CE [23] 


#### Refined cost equations sel/3 
* CE 21: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 22: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 23: sel(V,V1,Out) = 1+ sel(W1,X1,Out)
     [V1>=X1+1,X1>=0,W1>=0,W1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [23] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 

#### Loops of sel/3 
* Loop 17: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V'>=0,V'+1=V] 
* Loop 18: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 19: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [17]: [V,V1]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V
    V1


### Resulting Chains:sel(V,V1,Out) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  sel/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18],[18,[17]]] --> 2 
* [[19,[17]]] --> 3 


### Specialization of cost equations fib/2 
* CE 6 is refined into CE [24] 


#### Refined cost equations fib/2 
* CE 24: fib(V,Out) = 1+ fib1(W,X,Y):1
     [V>=0,X=1,W=1] 

### Cost equations --> "Loop" of fib/2 
* CEs [24] --> Loop 20 

#### Loops of fib/2 
* Loop 20: fib(V,Out) [V>=0] 

### Ranking functions of CR fib(V,Out) 

#### Partial ranking functions of CR fib(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:fib(V,Out) 
* [20]...


### Merging Chains  fib/2 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [25] 
* CE 3 is refined into CE [26] 
* CE 4 is refined into CE [27,28,29,30] 
* CE 5 is refined into CE [31,32,33] 


#### Refined cost equations start/2 
* CE 25: start(V,V1) = 0+ fib(V,W1):1
     [V>=0] 
* CE 26: start(V,V1) = 0+ fib1(V,V1,W1):1
     [V1>=0,V>=0] 
* CE 27: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 28: start(V,V1) = 0+ add(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 29: start(V,V1) = 0+ add(V,W1,X1):3
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 30: start(V,V1) = 0+ add(V,V1,W1):4
     [V>=W1,W1>=1,V1>=0] 
* CE 31: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 32: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 33: start(V,V1) = 0+ sel(V,V1,W1):3
     [V1>=V+W1+1,W1>=0,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [27,28,29,30,31,32,33] --> Loop 21 
* CEs [25,26] --> Loop 22 

#### Loops of start/2 
* Loop 21: start(V,V1) [V1>=0,V>=0] 
* Loop 22: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [22]...
* [21]


### Merging Chains  start/2 into  External patterns of execution 
* [[21]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:add(V,V1,Out) -> [add(V',V1',Out')] 
1
#### Cost of phase [10]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of chains of add(V,V1,Out):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< Out

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [12]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [11]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [13,14,15,16] 

 * loop 13:fib1(V,V1,Out) -> [fib1(V',V1',Out')] 
1*s(2)+1
  Such that:s(2) =< V1'

 * loop 14:fib1(V,V1,Out) -> [fib1(V',V1',Out')] 
1*s(4)+2
  Such that:s(4) =< -V'+V1'

 * loop 15:fib1(V,V1,Out) -> [fib1(V',V1',Out')] 
1
 * loop 16:fib1(V,V1,Out) -> [fib1(V',V1',Out')] 
2
#### Cost of phase [13,14,15,16]:fib1(V,V1,Out) -> [fib1(V',V1',Out')] 
8*it(13)+0
#### Cost of chains of fib1(V,V1,Out):
* Chain [[13,14,15,16]]...: 8*it(13)+0
  with precondition: [V1>=0,V>=0] 


#### Cost of loops [17] 

 * loop 17:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
#### Cost of phase [17]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of phase [17]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of chains of sel(V,V1,Out):
* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< V

  with precondition: [V>=1,Out>=0,V1>=Out+V+1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [19]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of fib(V,Out):
* Chain [20]...: 8*s(8)+1
  with precondition: [V>=0] 


#### Cost of chains of start(V,V1):
* Chain [22]...: 1*aux(80)+0
  with precondition: [V>=0] 

* Chain [21]: 3*s(11)+1*s(13)+1
  Such that:s(13) =< V1
aux(81) =< V
s(11) =< aux(81)

  with precondition: [V>=0,V1>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [22]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21] with precondition: [V>=0,V1>=0] 
    - Upper bound: 3*V+V1+1 
    - Complexity: n 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 45 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 156 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 133 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 257 ms.

