
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [filter/3,sieve/2]  
 Merged into filtersieve/3

#### Computed strongly connected components 
0. non_recursive  : [if/4]
2. recursive  : [from/2]
3. non_recursive  : [head/2]
4. non_recursive  : [primes/1]
5. non_recursive  : [tail/2]
6. non_recursive  : [start/3]
1. recursive [non_tail,multiple] : [filtersieve/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into if/4
2. SCC is partially evaluated into from/2
3. SCC is partially evaluated into head/2
4. SCC is partially evaluated into primes/1
5. SCC is partially evaluated into tail/2
6. SCC is partially evaluated into start/3
1. SCC is partially evaluated into filtersieve/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations if/4 
* CE 16 is refined into CE [20] 
* CE 14 is refined into CE [21] 
* CE 15 is refined into CE [22] 


#### Refined cost equations if/4 
* CE 20: if(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 21: if(A,B,C,B) = 1
     [C>=0,B>=0,A=1] 
* CE 22: if(A,B,C,C) = 1
     [C>=0,B>=0,A=0] 

### Cost equations --> "Loop" of if/4 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [22] --> Loop 16 

#### Loops of if/4 
* Loop 14: if(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 
* Loop 15: if(A,B,C,B) [C>=0,B>=0,A=1] 
* Loop 16: if(A,B,C,C) [C>=0,B>=0,A=0] 

### Ranking functions of CR if(V,V1,V2,Out) 

#### Partial ranking functions of CR if(V,V1,V2,Out) 


### Resulting Chains:if(V,V1,V2,Out) 
* [16]
* [15]
* [14]


### Merging Chains  if/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 


### Specialization of cost equations filtersieve/3 
* CE 18 is refined into CE [23] 
* CE 19 is refined into CE [24] 
* CE 17 is refined into CE [25] 


#### Refined cost equations filtersieve/3 
* CE 23: filtersieve(A,B,C) = 0
     [A>=0,C=0] 
* CE 24: filtersieve(A,B,C) = 1+ filtersieve(D,E,F)+ filtersieve(G,F,H)
     [G>=0,D>=0,G+H+1=C,D+G+1=A] 
* CE 25: filtersieve(A,B,C) = 1+ filtersieve(D,E,F)+ filtersieve(G,H,I)+ filtersieve(J,I,K)+ if(L,F,M,N):3
     [L>=J+3,J>=0,E>=0,M>=0,F>=0,L+K=M+J+2,L+E=B+J+2,L=G+J+3,J+2=D,J+2=A,N=0,C=0] 

### Cost equations --> "Loop" of filtersieve/3 
* CEs [25] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of filtersieve/3 
* Loop 17: filtersieve(A,B,C)->  filtersieve(A,A',B')  filtersieve(A'2,B'2,C'2)  filtersieve(A'3,C'2,B'3)
                  [B+B'3>=A',B>=A'+1,B'>=0,A'>=0,A>=2,B=A'+A'2+1,A=A'3+2,C=0] 
* Loop 18: filtersieve(A,B,C)->  filtersieve(A',B',C')  filtersieve(A'2,C',B'2)
                  [A'2>=0,A'>=0,A'2+B'2+1=C,A'+A'2+1=A] 
* Loop 19: filtersieve(A,B,C) [A>=0,C=0] 

### Ranking functions of CR filtersieve(A,B,C) 

#### Partial ranking functions of CR filtersieve(A,B,C) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    B depends on loops [17:2,17:3,18:1,18:2] 
  - RF of loop [17:3]:
    A/2-1/2 depends on loops [17:2] 
  - RF of loop [18:1,18:2]:
    A depends on loops [17:2] 


### Resulting Chains:filtersieve(A,B,C) 
* [multiple([17,18],[[],[19]])]...
* [19]


### Merging Chains  filtersieve/3 into  External patterns of execution 
* [[19]] --> 1 
* [[multiple([17,18],[[],[19]])]] --> 2 


### Specialization of cost equations from/2 
* CE 9 is refined into CE [26] 


#### Refined cost equations from/2 
* CE 26: from(V,Out) = 1+ from(W,X)
     [V>=0,V+X+1=Out,V+1=W] 

### Cost equations --> "Loop" of from/2 
* CEs [26] --> Loop 20 

#### Loops of from/2 
* Loop 20: from(V,Out)->  from(V',Out')
                  [V>=0,V+Out'+1=Out,V+1=V'] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V,Out) 
* [[20]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[20]]] --> 1 


### Specialization of cost equations head/2 
* CE 10 is refined into CE [27] 
* CE 11 is refined into CE [28] 


#### Refined cost equations head/2 
* CE 27: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 28: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [27] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of head/2 
* Loop 21: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 22: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [22]
* [21]


### Merging Chains  head/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations primes/1 
* CE 8 is refined into CE [29] 


#### Refined cost equations primes/1 
* CE 29: primes(Out) = 1+ from(B,C):1
     [B=2] 

### Cost equations --> "Loop" of primes/1 
* CEs [29] --> Loop 23 

#### Loops of primes/1 
* Loop 23: primes(Out) [] 

### Ranking functions of CR primes(Out) 

#### Partial ranking functions of CR primes(Out) 

Warning: no base case found for predicate

### Resulting Chains:primes(Out) 
* [23]...


### Merging Chains  primes/1 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations tail/2 
* CE 12 is refined into CE [30] 
* CE 13 is refined into CE [31] 


#### Refined cost equations tail/2 
* CE 30: tail(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 31: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [30] --> Loop 24 
* CEs [31] --> Loop 25 

#### Loops of tail/2 
* Loop 24: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 25: tail(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [25]
* [24]


### Merging Chains  tail/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [32] 
* CE 3 is refined into CE [33] 
* CE 4 is refined into CE [34,35] 
* CE 5 is refined into CE [36,37] 
* CE 6 is refined into CE [38,39,40] 
* CE 7 is refined into CE [41,42] 


#### Refined cost equations start/3 
* CE 32: start(V,V1,V2) = 0+ primes(W2):1
     [] 
* CE 33: start(V,V1,V2) = 0+ from(V,W2):1
     [V>=0] 
* CE 34: start(V,V1,V2) = 0+ head(V,W2):1
     [V>=0,W2=0] 
* CE 35: start(V,V1,V2) = 0+ head(V,W2):2
     [V>=W2+1,W2>=0] 
* CE 36: start(V,V1,V2) = 0+ tail(V,W2):1
     [V>=0,W2=0] 
* CE 37: start(V,V1,V2) = 0+ tail(V,W2):2
     [V>=W2+1,W2>=0] 
* CE 38: start(V,V1,V2) = 0+ if(W2,V1,V2,V2):1
     [V2>=0,V1>=0,W2=0,V=0] 
* CE 39: start(V,V1,V2) = 0+ if(W2,V1,V2,V1):2
     [V1>=0,V2>=0,W2=1,V=1] 
* CE 40: start(V,V1,V2) = 0+ if(V,V1,V2,W2):3
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 41: start(V,V1,V2) = 0+ filtersieve(V,W2,X2):1
     [V>=0,X2=0] 
* CE 42: start(V,V1,V2) = 0+ filtersieve(V,W2,X2):2
     [V>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [32,33,42] --> Loop 26 
* CEs [39] --> Loop 27 
* CEs [34,35,36,37,38,40,41] --> Loop 28 

#### Loops of start/3 
* Loop 26: start(V,V1,V2) [] 
* Loop 27: start(V,V1,V2) [V2>=0,V1>=0,V=1] 
* Loop 28: start(V,V1,V2) [V>=0] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [28]
* [27]
* [26]...


### Merging Chains  start/3 into  External patterns of execution 
* [[27],[28]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of if(V,V1,V2,Out):
* Chain [16]: 1
  with precondition: [V=0,V2=Out,V1>=0,V2>=0] 

* Chain [15]: 1
  with precondition: [V=1,V1=Out,V1>=0,V2>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of loops [17,18] 

 * loop 17:filtersieve(A,B,C) -> [filtersieve(A',B',C'),filtersieve(A'2,B'2,C'2),filtersieve(A'3,B'3,C'3)] 
1
 * loop 18:filtersieve(A,B,C) -> [filtersieve(A',B',C'),filtersieve(A'2,B'2,C'2)] 
1
#### Cost of phase [17,18]:filtersieve(A,B,C) -> [] 
1*it(17)+1*it(18)+0
#### Cost of chains of filtersieve(A,B,C):
* Chain [multiple([17,18],[[],[19]])]...: 1*it(17)+1*it(18)+0
  with precondition: [A>=1] 

* Chain [19]: 0
  with precondition: [C=0,A>=0] 


#### Cost of loops [20] 

 * loop 20:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [20]:from(V,Out) -> [from(V',Out')] 
1*it(20)+0
#### Cost of chains of from(V,Out):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [V>=0] 


#### Cost of chains of head(V,Out):
* Chain [22]: 0
  with precondition: [Out=0,V>=0] 

* Chain [21]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of primes(Out):
* Chain [23]...: 1*s(1)+1
  with precondition: [] 


#### Cost of chains of tail(V,Out):
* Chain [25]: 0
  with precondition: [Out=0,V>=0] 

* Chain [24]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of start(V,V1,V2):
* Chain [28]: 1
  with precondition: [V>=0] 

* Chain [27]: 1
  with precondition: [V=1,V1>=0,V2>=0] 

* Chain [26]...: 1*aux(6)+0
  with precondition: [] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [28] with precondition: [V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [27] with precondition: [V=1,V1>=0,V2>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 40 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 49 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 152 ms.

