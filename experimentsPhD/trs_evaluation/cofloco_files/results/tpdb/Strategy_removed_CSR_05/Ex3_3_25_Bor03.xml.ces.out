
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive  : [from/2]
2. recursive  : [zWadr/3]
3. recursive [non_tail] : [prefix/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into from/2
2. SCC is partially evaluated into zWadr/3
3. SCC is partially evaluated into prefix/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 8 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 7 is refined into CE [17] 


#### Refined cost equations app/3 
* CE 15: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 16: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 17: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [17] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [16] --> Loop 12 

#### Loops of app/3 
* Loop 10: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 11: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 12: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [10]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  app/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,[10]]] --> 3 
* [[11,[10]]] --> 4 


### Specialization of cost equations from/2 
* CE 9 is refined into CE [18] 


#### Refined cost equations from/2 
* CE 18: from(V1,Out) = 1+ from(W1,X1)
     [V1>=0,V1+X1+1=Out,V1+1=W1] 

### Cost equations --> "Loop" of from/2 
* CEs [18] --> Loop 13 

#### Loops of from/2 
* Loop 13: from(V1,Out)->  from(V1',Out')
                  [V1>=0,V1+Out'+1=Out,V1+1=V1'] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V1,Out) 
* [[13]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[13]]] --> 1 


### Specialization of cost equations zWadr/3 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22,23,24,25] 


#### Refined cost equations zWadr/3 
* CE 19: zWadr(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 20: zWadr(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 21: zWadr(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 22: zWadr(V1,V,Out) = 1+ app(W1,X1,X1):1+ zWadr(Y1,Z1,A2)
     [V1>=X1,Z1>=0,X1>=1,X1+A2+1=Out,X1+Y1=V1,Z1+1=V,W1=0] 
* CE 23: zWadr(V1,V,Out) = 1+ app(W1,X1,Y1):2+ zWadr(Z1,A2,B2)
     [V1>=X1,A2>=0,X1>=1,W1>=0,W1+A2+1=V,X1+Z1=V1,B2+1=Out,Y1=0] 
* CE 24: zWadr(V1,V,Out) = 1+ app(W1,X1,Y1):3+ zWadr(Z1,A2,B2)
     [V1+W1>=Y1,Y1>=W1+1,A2>=0,W1>=1,Y1+Z1=V1+W1,Y1=W1+X1,Y1+B2+1=Out,W1+A2+1=V] 
* CE 25: zWadr(V1,V,Out) = 1+ app(W1,X1,Y1):4+ zWadr(Z1,A2,B2)
     [W1>=Y1,V1>=X1,A2>=0,Y1>=1,X1>=1,Y1+B2+1=Out,W1+A2+1=V,X1+Z1=V1] 

### Cost equations --> "Loop" of zWadr/3 
* CEs [25] --> Loop 14 
* CEs [24] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20,21] --> Loop 19 

#### Loops of zWadr/3 
* Loop 14: zWadr(V1,V,Out)->  zWadr(V1',V',Out')
                  [V+Out'>=Out+V',Out>=Out'+2,V1>=V1'+1,V'>=0,V1'>=0] 
* Loop 15: zWadr(V1,V,Out)->  zWadr(V1',V',Out')
                  [V>=V'+2,V1>=V1'+1,V'>=0,V1'>=0,Out+V1'+V'=V1+V+Out'] 
* Loop 16: zWadr(V1,V,Out)->  zWadr(V1',V',Out')
                  [V>=V'+1,V1>=V1'+1,V'>=0,V1'>=0,Out=Out'+1] 
* Loop 17: zWadr(V1,V,Out)->  zWadr(V1',V',Out')
                  [V1>=V1'+1,V1'>=0,V>=1,V1+Out'+1=Out+V1',V=V'+1] 
* Loop 18: zWadr(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 19: zWadr(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR zWadr(V1,V,Out) 
* RF of phase [14,15,16,17]: [V,V1]

#### Partial ranking functions of CR zWadr(V1,V,Out) 
* Partial RF of phase [14,15,16,17]:
  - RF of loop [14:1,15:1]:
    V/2-1/2
  - RF of loop [14:1,15:1,16:1,17:1]:
    V1
  - RF of loop [16:1,17:1]:
    V


### Resulting Chains:zWadr(V1,V,Out) 
* [[14,15,16,17],19]
* [[14,15,16,17],18]
* [19]
* [18]


### Merging Chains  zWadr/3 into  External patterns of execution 
* [[18],[19]] --> 1 
* [[18,[14,15,16,17]],[19,[14,15,16,17]]] --> 2 


### Specialization of cost equations prefix/2 
* CE 14 is refined into CE [26,27] 


#### Refined cost equations prefix/2 
* CE 26: prefix(V1,Out) = 1+ prefix(V1,W1)+ zWadr(V1,W1,X1):1
     [W1>=0,V1>=0,X1=0,Out=1] 
* CE 27: prefix(V1,Out) = 1+ prefix(V1,W1)+ zWadr(V1,W1,X1):2
     [V1+W1>=X1,X1>=1,W1>=1,V1>=1,X1+1=Out] 

### Cost equations --> "Loop" of prefix/2 
* CEs [27] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of prefix/2 
* Loop 20: prefix(V1,Out)->  prefix(V1,Out')
                  [V1+Out'+1>=Out,Out'>=1,Out>=2,V1>=1] 
* Loop 21: prefix(V1,Out)->  prefix(V1,Out')
                  [Out'>=0,V1>=0,Out=1] 

### Ranking functions of CR prefix(V1,Out) 

#### Partial ranking functions of CR prefix(V1,Out) 

Warning: no base case found for predicate

### Resulting Chains:prefix(V1,Out) 
* [[20,21]]...


### Merging Chains  prefix/2 into  External patterns of execution 
* [[[20,21]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [28,29,30,31] 
* CE 3 is refined into CE [32] 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35] 


#### Refined cost equations start/2 
* CE 28: start(V1,V) = 0+ app(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 29: start(V1,V) = 0+ app(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 30: start(V1,V) = 0+ app(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 31: start(V1,V) = 0+ app(V1,V,W1):4
     [V1>=W1,W1>=1,V>=0] 
* CE 32: start(V1,V) = 0+ from(V1,W1):1
     [V1>=0] 
* CE 33: start(V1,V) = 0+ zWadr(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 34: start(V1,V) = 0+ zWadr(V1,V,W1):2
     [V1+V>=W1,W1>=1,V>=1,V1>=1] 
* CE 35: start(V1,V) = 0+ prefix(V1,W1):1
     [W1>=1,V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [32,35] --> Loop 22 
* CEs [28,29,30,31,33,34] --> Loop 23 

#### Loops of start/2 
* Loop 22: start(V1,V) [V1>=0] 
* Loop 23: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [23]
* [22]...


### Merging Chains  start/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [10]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of phase [10]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [12]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [11]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [13] 

 * loop 13:from(V1,Out) -> [from(V1',Out')] 
1
#### Cost of phase [13]:from(V1,Out) -> [from(V1',Out')] 
1*it(13)+0
#### Cost of chains of from(V1,Out):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V1>=0] 


#### Cost of loops [14,15,16,17] 

 * loop 14:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
1*s(2)+1
  Such that:s(2) =< V-V'

 * loop 15:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V-V'

 * loop 16:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
1
 * loop 17:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
2
#### Cost of phase [14,15,16,17]:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
1*it(14)+2*it(15)+3*it(16)+2*s(5)+0
  Such that:aux(1) =< V1
aux(2) =< V1+V
aux(3) =< V1+V-V1'-V'
aux(4) =< V1-V1'
aux(5) =< V
aux(6) =< V-V'
aux(7) =< V/2
aux(8) =< V/2-V'/2
it(14) =< aux(1)
it(15) =< aux(1)
it(16) =< aux(1)
it(15) =< aux(2)
it(16) =< aux(2)
s(5) =< aux(2)
it(15) =< aux(3)
it(16) =< aux(3)
s(5) =< aux(3)
it(14) =< aux(4)
it(15) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(15) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(6)
it(15) =< aux(6)
it(16) =< aux(6)
it(14) =< aux(7)
it(15) =< aux(7)
it(14) =< aux(8)
it(15) =< aux(8)

#### Cost of phase [14,15,16,17]:zWadr(V1,V,Out) -> [zWadr(V1',V',Out')] 
1*it(14)+2*it(15)+3*it(16)+2*s(5)+0
  Such that:aux(1) =< V1
aux(2) =< V1+V
aux(3) =< V1+V-V1'-V'
aux(4) =< V1-V1'
aux(5) =< V
aux(6) =< V-V'
aux(7) =< V/2
aux(8) =< V/2-V'/2
it(14) =< aux(1)
it(15) =< aux(1)
it(16) =< aux(1)
it(15) =< aux(2)
it(16) =< aux(2)
s(5) =< aux(2)
it(15) =< aux(3)
it(16) =< aux(3)
s(5) =< aux(3)
it(14) =< aux(4)
it(15) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(15) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(6)
it(15) =< aux(6)
it(16) =< aux(6)
it(14) =< aux(7)
it(15) =< aux(7)
it(14) =< aux(8)
it(15) =< aux(8)

#### Cost of chains of zWadr(V1,V,Out):
* Chain [[14,15,16,17],19]: 1*it(14)+2*it(15)+3*it(16)+2*s(5)+1
  Such that:aux(9) =< V1
aux(10) =< V1+V
aux(11) =< V
aux(12) =< V/2
it(14) =< aux(9)
it(15) =< aux(9)
it(16) =< aux(9)
it(15) =< aux(10)
it(16) =< aux(10)
s(5) =< aux(10)
it(14) =< aux(11)
it(15) =< aux(11)
it(16) =< aux(11)
it(14) =< aux(12)
it(15) =< aux(12)

  with precondition: [V1>=1,V>=1,Out>=1,V+V1>=Out] 

* Chain [[14,15,16,17],18]: 1*it(14)+2*it(15)+3*it(16)+2*s(5)+1
  Such that:aux(13) =< V1
aux(14) =< V1+V
aux(15) =< V
aux(16) =< V/2
it(14) =< aux(13)
it(15) =< aux(13)
it(16) =< aux(13)
it(15) =< aux(14)
it(16) =< aux(14)
s(5) =< aux(14)
it(14) =< aux(15)
it(15) =< aux(15)
it(16) =< aux(15)
it(14) =< aux(16)
it(15) =< aux(16)

  with precondition: [V1>=1,V>=1,Out>=1,V+V1>=Out] 

* Chain [19]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [18]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [20,21] 

 * loop 20:prefix(V1,Out) -> [prefix(V1',Out')] 
2*s(32)+4*s(33)+6*s(34)+4*s(35)+2
  Such that:s(31) =< V1'
s(32) =< s(31)
s(33) =< s(31)
s(34) =< s(31)

 * loop 21:prefix(V1,Out) -> [prefix(V1',Out')] 
2
#### Cost of phase [20,21]:prefix(V1,Out) -> [prefix(V1',Out')] 
8*it(20)+12*s(36)+0
#### Cost of chains of prefix(V1,Out):
* Chain [[20,21]]...: 20*it(20)+0
  with precondition: [Out>=1,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [23]: 2*s(41)+2*s(47)+4*s(48)+6*s(49)+4*s(50)+1
  Such that:s(44) =< V1+V
s(45) =< V
s(46) =< V/2
aux(22) =< V1
s(41) =< aux(22)
s(47) =< aux(22)
s(48) =< aux(22)
s(49) =< aux(22)
s(48) =< s(44)
s(49) =< s(44)
s(50) =< s(44)
s(47) =< s(45)
s(48) =< s(45)
s(49) =< s(45)
s(47) =< s(46)
s(48) =< s(46)

  with precondition: [V1>=0,V>=0] 

* Chain [22]...: 1*aux(23)+0
  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [23] with precondition: [V1>=0,V>=0] 
    - Upper bound: 18*V1+4*V+1 
    - Complexity: n 
* Chain [22]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 88 ms.
   - Backward Invariants 37 ms.
   - Transitive Invariants 22 ms.
* Refinement performed in 158 ms.
* Termination proved in 27 ms.
* Upper bounds computed in 210 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 123 ms.
   - Chain cost structures 65 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 570 ms.

