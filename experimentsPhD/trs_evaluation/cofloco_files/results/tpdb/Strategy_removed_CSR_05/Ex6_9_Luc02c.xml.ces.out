
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [from/2]
1. recursive  : [fun/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is partially evaluated into fun/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 7 is refined into CE [8] 


#### Refined cost equations from/2 
* CE 8: from(V,Out) = 1+ from(W,X)
     [V>=0,V+X+1=Out,V+1=W] 

### Cost equations --> "Loop" of from/2 
* CEs [8] --> Loop 6 

#### Loops of from/2 
* Loop 6: from(V,Out)->  from(V',Out')
                  [V>=0,V+Out'+1=Out,V+1=V'] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V,Out) 
* [[6]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[6]]] --> 1 


### Specialization of cost equations fun/2 
* CE 4 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations fun/2 
* CE 9: fun(V,Out) = 1
     [V>=Out+2,Out>=0] 
* CE 10: fun(V,Out) = 0
     [V>=0,Out=0] 
* CE 11: fun(V,Out) = 1+ fun(V,Out)
     [V>=1] 

### Cost equations --> "Loop" of fun/2 
* CEs [11] --> Loop 7 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of fun/2 
* Loop 7: fun(V,Out)->  fun(V,Out)
                  [V>=1] 
* Loop 8: fun(V,Out) [V>=Out+2,Out>=0] 
* Loop 9: fun(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [[7]]...
* [[7],9]
* [[7],8]
* [9]
* [8]


### Merging Chains  fun/2 into  External patterns of execution 
* [[9],[9,[7]]] --> 1 
* [[8],[8,[7]]] --> 2 
* [[[7]]] --> 3 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [12,13,14] 
* CE 3 is refined into CE [15] 


#### Refined cost equations start/1 
* CE 12: start(V) = 0+ fun(V,W):1
     [V>=0,W=0] 
* CE 13: start(V) = 0+ fun(V,W):2
     [V>=W+2,W>=0] 
* CE 14: start(V) = 0+ fun(V,W):3
     [V>=1] 
* CE 15: start(V) = 0+ from(V,W):1
     [V>=0] 

### Cost equations --> "Loop" of start/1 
* CEs [14,15] --> Loop 10 
* CEs [12,13] --> Loop 11 

#### Loops of start/1 
* Loop 10: start(V) [V>=0] 
* Loop 11: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [11]
* [10]...


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [6]:from(V,Out) -> [from(V',Out')] 
1*it(6)+0
#### Cost of chains of from(V,Out):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V>=0] 


#### Cost of loops [7] 

 * loop 7:fun(V,Out) -> [fun(V',Out')] 
1
#### Cost of phase [7]:fun(V,Out) -> [fun(V',Out')] 
1*it(7)+0
#### Cost of phase [7]:fun(V,Out) -> [fun(V',Out')] 
1*it(7)+0
#### Cost of phase [7]:fun(V,Out) -> [fun(V',Out')] 
1*it(7)+0
#### Cost of chains of fun(V,Out):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [V>=1] 

* Chain [[7],9]: 1*it(7)+0
  with precondition: [Out=0,V>=1] 

* Chain [[7],8]: 1*it(7)+1
  with precondition: [Out>=0,V>=Out+2] 

* Chain [9]: 0
  with precondition: [Out=0,V>=0] 

* Chain [8]: 1
  with precondition: [Out>=0,V>=Out+2] 


#### Cost of chains of start(V):
* Chain [11]: 1*aux(3)+0
  with precondition: [V>=0] 

* Chain [10]...: 1*aux(4)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [11] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [10]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 35 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 131 ms.

