
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [dbl/2]
1. recursive  : [dbls/2]
2. recursive  : [from/2]
3. recursive  : [sel/3]
4. recursive  : [indx/3]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into dbl/2
1. SCC is partially evaluated into dbls/2
2. SCC is partially evaluated into from/2
3. SCC is partially evaluated into sel/3
4. SCC is partially evaluated into indx/3
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations dbl/2 
* CE 7 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations dbl/2 
* CE 18: dbl(V,Out) = 1
     [Out=0,V=0] 
* CE 19: dbl(V,Out) = 0
     [V>=0,Out=0] 
* CE 20: dbl(V,Out) = 1+ dbl(W,X)
     [W>=0,X+2=Out,W+1=V] 

### Cost equations --> "Loop" of dbl/2 
* CEs [20] --> Loop 12 
* CEs [18,19] --> Loop 13 

#### Loops of dbl/2 
* Loop 12: dbl(V,Out)->  dbl(V',Out')
                  [V'>=0,Out=Out'+2,V'+1=V] 
* Loop 13: dbl(V,Out) [V>=0,Out=0] 

### Ranking functions of CR dbl(V,Out) 
* RF of phase [12]: [V]

#### Partial ranking functions of CR dbl(V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V


### Resulting Chains:dbl(V,Out) 
* [[12],13]
* [13]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations dbls/2 
* CE 11 is refined into CE [21,22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations dbls/2 
* CE 21: dbls(V,Out) = 1+ dbl(W,X):1+ dbls(Y,Z)
     [Y>=0,W>=0,W+Y+1=V,Z+1=Out,X=0] 
* CE 22: dbls(V,Out) = 1+ dbl(W,X):2+ dbls(Y,Z)
     [2*W>=X,Y>=0,X>=2,X+Z+1=Out,W+Y+1=V] 
* CE 23: dbls(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbls/2 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of dbls/2 
* Loop 14: dbls(V,Out) [Out=0,V=0] 
* Loop 15: dbls(V,Out)->  dbls(V',Out')
                  [Out'+2*V>=2*V'+Out+1,Out>=Out'+3,V'>=0] 
* Loop 16: dbls(V,Out)->  dbls(V',Out')
                  [V>=V'+1,V'>=0,Out=Out'+1] 

### Ranking functions of CR dbls(V,Out) 
* RF of phase [15,16]: [V]

#### Partial ranking functions of CR dbls(V,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    V-1
  - RF of loop [16:1]:
    V


### Resulting Chains:dbls(V,Out) 
* [[15,16],14]
* [14]


### Merging Chains  dbls/2 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[15,16]]] --> 2 


### Specialization of cost equations from/2 
* CE 17 is refined into CE [24] 


#### Refined cost equations from/2 
* CE 24: from(V,Out) = 1+ from(W,X)
     [V>=0,V+X+1=Out,V+1=W] 

### Cost equations --> "Loop" of from/2 
* CEs [24] --> Loop 17 

#### Loops of from/2 
* Loop 17: from(V,Out)->  from(V',Out')
                  [V>=0,V+Out'+1=Out,V+1=V'] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 

Warning: no base case found for predicate

### Resulting Chains:from(V,Out) 
* [[17]]...


### Merging Chains  from/2 into  External patterns of execution 
* [[[17]]] --> 1 


### Specialization of cost equations sel/3 
* CE 14 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 13 is refined into CE [27] 


#### Refined cost equations sel/3 
* CE 25: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 26: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 27: sel(V,V1,Out) = 1+ sel(W1,X1,Out)
     [V1>=X1+1,X1>=0,W1>=0,W1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [27] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of sel/3 
* Loop 18: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V'>=0,V'+1=V] 
* Loop 19: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 20: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:sel(V,V1,Out) 
* [[18],20]
* [[18],19]
* [20]
* [19]


### Merging Chains  sel/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[20,[18]]] --> 3 


### Specialization of cost equations indx/3 
* CE 16 is refined into CE [28,29,30] 
* CE 15 is refined into CE [31] 


#### Refined cost equations indx/3 
* CE 28: indx(V,V1,Out) = 1+ sel(W1,V1,X1):1+ indx(Y1,V1,Z1)
     [V1>=X1+1,Y1>=0,X1>=0,X1+Z1+1=Out,Y1+1=V,W1=0] 
* CE 29: indx(V,V1,Out) = 1+ sel(W1,V1,X1):2+ indx(Y1,V1,Z1)
     [Y1>=0,V1>=0,W1>=0,W1+Y1+1=V,Z1+1=Out,X1=0] 
* CE 30: indx(V,V1,Out) = 1+ sel(W1,V1,X1):3+ indx(Y1,V1,Z1)
     [V1>=W1+X1+1,Y1>=0,X1>=0,W1>=1,X1+Z1+1=Out,W1+Y1+1=V] 
* CE 31: indx(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of indx/3 
* CEs [31] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [29] --> Loop 23 
* CEs [28] --> Loop 24 

#### Loops of indx/3 
* Loop 21: indx(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 22: indx(V,V1,Out)->  indx(V',V1,Out')
                  [V1+V'+Out'+1>=V+Out,Out>=Out'+1,V>=V'+2,V'>=0] 
* Loop 23: indx(V,V1,Out)->  indx(V',V1,Out')
                  [V>=V'+1,V'>=0,V1>=0,Out=Out'+1] 
* Loop 24: indx(V,V1,Out)->  indx(V',V1,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=1,V=V'+1] 

### Ranking functions of CR indx(V,V1,Out) 
* RF of phase [22,23,24]: [V]

#### Partial ranking functions of CR indx(V,V1,Out) 
* Partial RF of phase [22,23,24]:
  - RF of loop [22:1]:
    V-1
  - RF of loop [23:1,24:1]:
    V


### Resulting Chains:indx(V,V1,Out) 
* [[22,23,24],21]
* [21]


### Merging Chains  indx/3 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[22,23,24]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [32,33] 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36,37,38] 
* CE 5 is refined into CE [39,40] 
* CE 6 is refined into CE [41] 


#### Refined cost equations start/2 
* CE 32: start(V,V1) = 0+ dbl(V,W1):1
     [V>=0,W1=0] 
* CE 33: start(V,V1) = 0+ dbl(V,W1):2
     [2*V>=W1,W1>=2] 
* CE 34: start(V,V1) = 0+ dbls(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 35: start(V,V1) = 0+ dbls(V,W1):2
     [2*V>=W1+1,W1>=1] 
* CE 36: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 37: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 38: start(V,V1) = 0+ sel(V,V1,W1):3
     [V1>=V+W1+1,W1>=0,V>=1] 
* CE 39: start(V,V1) = 0+ indx(W1,V1,X1):1
     [V1>=0,X1=0,W1=0,V=0] 
* CE 40: start(V,V1) = 0+ indx(V,V1,W1):2
     [W1>=1,V1>=0,V>=1] 
* CE 41: start(V,V1) = 0+ from(V,W1):1
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [41] --> Loop 25 
* CEs [32,33,34,35,36,37,38,39,40] --> Loop 26 

#### Loops of start/2 
* Loop 25: start(V,V1) [V>=0] 
* Loop 26: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [26]
* [25]...


### Merging Chains  start/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:dbl(V,Out) -> [dbl(V',Out')] 
1
#### Cost of phase [12]:dbl(V,Out) -> [dbl(V',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of chains of dbl(V,Out):
* Chain [[12],13]: 1*it(12)+1
  Such that:it(12) =< Out/2

  with precondition: [Out>=2,2*V>=Out] 

* Chain [13]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [15,16] 

 * loop 15:dbls(V,Out) -> [dbls(V',Out')] 
1*s(2)+2
  Such that:s(2) =< V-V'

 * loop 16:dbls(V,Out) -> [dbls(V',Out')] 
2
#### Cost of phase [15,16]:dbls(V,Out) -> [dbls(V',Out')] 
5*it(15)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(15) =< aux(1)
it(15) =< aux(2)

#### Cost of chains of dbls(V,Out):
* Chain [[15,16],14]: 5*it(15)+1
  Such that:aux(3) =< V
it(15) =< aux(3)

  with precondition: [Out>=1,2*V>=Out+1] 

* Chain [14]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [17] 

 * loop 17:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [17]:from(V,Out) -> [from(V',Out')] 
1*it(17)+0
#### Cost of chains of from(V,Out):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [V>=0] 


#### Cost of loops [18] 

 * loop 18:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
#### Cost of phase [18]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'
it(18) =< V1
it(18) =< V1-V1'

#### Cost of phase [18]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'
it(18) =< V1
it(18) =< V1-V1'

#### Cost of chains of sel(V,V1,Out):
* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [V>=1,Out>=0,V1>=Out+V+1] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [20]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [22,23,24] 

 * loop 22:indx(V,V1,Out) -> [indx(V',V1',Out')] 
1*s(6)+2
  Such that:s(6) =< V-V'

 * loop 23:indx(V,V1,Out) -> [indx(V',V1',Out')] 
1*s(8)+1
  Such that:s(8) =< V1

 * loop 24:indx(V,V1,Out) -> [indx(V',V1',Out')] 
2
#### Cost of phase [22,23,24]:indx(V,V1,Out) -> [indx(V',V1',Out')] 
6*it(22)+1*s(10)+0
  Such that:aux(4) =< V1
aux(5) =< V
aux(6) =< V-V'
it(22) =< aux(5)
it(22) =< aux(6)
s(10) =< it(22)*aux(4)

#### Cost of chains of indx(V,V1,Out):
* Chain [[22,23,24],21]: 6*it(22)+1*s(10)+1
  Such that:aux(4) =< V1
aux(7) =< V
it(22) =< aux(7)
s(10) =< it(22)*aux(4)

  with precondition: [V>=1,V1>=0,Out>=1] 

* Chain [21]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [26]: 13*s(11)+1*s(14)+1*s(19)+1
  Such that:aux(8) =< V
aux(9) =< V1
s(11) =< aux(8)
s(14) =< aux(9)
s(19) =< s(11)*aux(9)

  with precondition: [V>=0] 

* Chain [25]...: 1*s(20)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [26] with precondition: [V>=0] 
    - Upper bound: 13*V+1+nat(V1)+nat(V1)*V 
    - Complexity: n^2 
* Chain [25]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 94 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 27 ms.
* Refinement performed in 149 ms.
* Termination proved in 30 ms.
* Upper bounds computed in 178 ms.
   - Equation cost structures 53 ms.
   - Phase cost structures 99 ms.
   - Chain cost structures 41 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 543 ms.

