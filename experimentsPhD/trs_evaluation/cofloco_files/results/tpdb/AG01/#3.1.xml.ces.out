
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [minus/3]
1. recursive  : [quot/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/3
1. SCC is partially evaluated into quot/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/3 
* CE 6 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations minus/3 
* CE 10: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 11: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 12: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [12] --> Loop 7 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 

#### Loops of minus/3 
* Loop 7: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 8: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 9: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [7]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[7],9]
* [[7],8]
* [9]
* [8]


### Merging Chains  minus/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8],[8,[7]]] --> 2 
* [[9,[7]]] --> 3 


### Specialization of cost equations quot/3 
* CE 7 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15,16,17] 


#### Refined cost equations quot/3 
* CE 13: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 14: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: quot(V1,V,Out) = 1+ minus(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 16: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 17: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [17] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [13,14] --> Loop 13 

#### Loops of quot/3 
* Loop 10: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 11: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 12: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 13: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [10]: [V1-1,V1-V+1]
* RF of phase [12]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V1-1
    V1-V+1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[12],13]
* [[12],11,13]
* [[10],13]
* [[10],11,13]
* [13]
* [11,13]


### Merging Chains  quot/3 into  External patterns of execution 
* [[13,11,[12]],[13,[12]]] --> 1 
* [[13]] --> 2 
* [[13,11]] --> 3 
* [[13,[10]]] --> 4 
* [[13,11,[10]]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [18,19,20] 
* CE 3 is refined into CE [21,22,23,24,25] 


#### Refined cost equations start/2 
* CE 18: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 19: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 20: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 
* CE 21: start(V1,V) = 0+ quot(V1,W1,X1):1
     [V1>=X1,X1>=1,W1=1,V=1] 
* CE 22: start(V1,V) = 0+ quot(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 23: start(V1,V) = 0+ quot(V1,V,W1):3
     [V>=1,V1>=1,W1=1] 
* CE 24: start(V1,V) = 0+ quot(V1,V,W1):4
     [V1+2>=2*W1+V,W1>=1,V>=2] 
* CE 25: start(V1,V) = 0+ quot(V1,V,W1):5
     [V1+3>=2*W1+V,W1>=2,V>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [21] --> Loop 14 
* CEs [18,19,20,22,23,24,25] --> Loop 15 

#### Loops of start/2 
* Loop 14: start(V1,V) [V1>=1,V=1] 
* Loop 15: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [15]
* [14]


### Merging Chains  start/2 into  External patterns of execution 
* [[14],[15]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [7]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'
it(7) =< V
it(7) =< V-V'

#### Cost of phase [7]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'
it(7) =< V
it(7) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[7],9]: 1*it(7)+1
  Such that:it(7) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [9]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [8]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [12] 

 * loop 12:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [12]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of loops [10] 

 * loop 10:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V'

#### Cost of phase [10]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(10)+1*s(5)+0
  Such that:it(10) =< V1-V+1
it(10) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(10) =< aux(1)
s(5) =< aux(1)
it(10) =< aux(2)
s(5) =< aux(2)

#### Cost of phase [10]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(10)+1*s(5)+0
  Such that:it(10) =< V1-V+1
it(10) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(10) =< aux(1)
s(5) =< aux(1)
it(10) =< aux(2)
s(5) =< aux(2)

#### Cost of chains of quot(V1,V,Out):
* Chain [[12],13]: 2*it(12)+1
  Such that:it(12) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[12],11,13]: 2*it(12)+1*s(2)+2
  Such that:s(2) =< 1
it(12) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[10],13]: 2*it(10)+1*s(5)+1
  Such that:it(10) =< V1-V+1
aux(3) =< V1
it(10) =< aux(3)
s(5) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[10],11,13]: 2*it(10)+1*s(2)+1*s(5)+2
  Such that:it(10) =< V1-V+1
s(2) =< V
aux(4) =< V1
it(10) =< aux(4)
s(5) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [13]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [11,13]: 1*s(2)+2
  Such that:s(2) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [15]: 4*s(9)+4*s(12)+2*s(14)+2
  Such that:aux(6) =< V1
aux(7) =< V1-V+1
aux(8) =< V
s(12) =< aux(7)
s(9) =< aux(8)
s(12) =< aux(6)
s(14) =< aux(6)

  with precondition: [V1>=0,V>=0] 

* Chain [14]: 1*s(19)+4*s(21)+2
  Such that:s(19) =< 1
s(20) =< V1
s(21) =< s(20)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [15] with precondition: [V1>=0,V>=0] 
    - Upper bound: 2*V1+4*V+2+nat(V1-V+1)*4 
    - Complexity: n 
* Chain [14] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+3 
    - Complexity: n 

### Maximum cost of start(V1,V): 2*V1+2+max([2*V1+1,nat(V1-V+1)*4+4*V]) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 32 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 49 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 131 ms.

