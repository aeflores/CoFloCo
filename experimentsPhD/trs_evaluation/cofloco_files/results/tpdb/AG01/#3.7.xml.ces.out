
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [half/2]
1. recursive  : [log/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into half/2
1. SCC is partially evaluated into log/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations half/2 
* CE 4 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations half/2 
* CE 10: half(V,Out) = 1
     [Out=0,V=0] 
* CE 11: half(V,Out) = 0
     [V>=0,Out=0] 
* CE 12: half(V,Out) = 1+ half(W,X)
     [W>=0,X+1=Out,W+2=V] 

### Cost equations --> "Loop" of half/2 
* CEs [12] --> Loop 6 
* CEs [10,11] --> Loop 7 

#### Loops of half/2 
* Loop 6: half(V,Out)->  half(V',Out')
                  [V'>=0,Out=Out'+1,V'+2=V] 
* Loop 7: half(V,Out) [V>=0,Out=0] 

### Ranking functions of CR half(V,Out) 
* RF of phase [6]: [V-1]

#### Partial ranking functions of CR half(V,Out) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V-1


### Resulting Chains:half(V,Out) 
* [[6],7]
* [7]


### Merging Chains  half/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations log/2 
* CE 7 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15,16] 


#### Refined cost equations log/2 
* CE 13: log(V,Out) = 1
     [Out=0,V=1] 
* CE 14: log(V,Out) = 0
     [V>=0,Out=0] 
* CE 15: log(V,Out) = 1+ half(W,X):1+ log(Y,Z)
     [W>=0,Z+1=Out,W+2=V,Y=1,X=0] 
* CE 16: log(V,Out) = 1+ half(W,X):2+ log(Y,Z)
     [W>=2*X,X>=1,X+1=Y,Z+1=Out,W+2=V] 

### Cost equations --> "Loop" of log/2 
* CEs [16] --> Loop 8 
* CEs [15] --> Loop 9 
* CEs [13,14] --> Loop 10 

#### Loops of log/2 
* Loop 8: log(V,Out)->  log(V',Out')
                  [V>=2*V',V'>=2,Out=Out'+1] 
* Loop 9: log(V,Out)->  log(V',Out')
                  [V>=2,Out=Out'+1,V'=1] 
* Loop 10: log(V,Out) [V>=0,Out=0] 

### Ranking functions of CR log(V,Out) 
* RF of phase [8]: [V-3]

#### Partial ranking functions of CR log(V,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V-3


### Resulting Chains:log(V,Out) 
* [[8],10]
* [[8],9,10]
* [10]
* [9,10]


### Merging Chains  log/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,9]] --> 2 
* [[10,[8]]] --> 3 
* [[10,9,[8]]] --> 4 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [17,18] 
* CE 3 is refined into CE [19,20,21,22] 


#### Refined cost equations start/1 
* CE 17: start(V) = 0+ half(V,W):1
     [V>=0,W=0] 
* CE 18: start(V) = 0+ half(V,W):2
     [V>=2*W,W>=1] 
* CE 19: start(V) = 0+ log(V,W):1
     [V>=0,W=0] 
* CE 20: start(V) = 0+ log(V,W):2
     [V>=2,W=1] 
* CE 21: start(V) = 0+ log(V,W):3
     [V>=4*W,W>=1] 
* CE 22: start(V) = 0+ log(V,W):4
     [V+4>=4*W,W>=2] 

### Cost equations --> "Loop" of start/1 
* CEs [17,18,19,20,21,22] --> Loop 11 

#### Loops of start/1 
* Loop 11: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [11]


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:half(V,Out) -> [half(V',Out')] 
1
#### Cost of phase [6]:half(V,Out) -> [half(V',Out')] 
1*it(6)+0
  Such that:it(6) =< V
it(6) =< V-V'

#### Cost of chains of half(V,Out):
* Chain [[6],7]: 1*it(6)+1
  Such that:it(6) =< 2*Out

  with precondition: [Out>=1,V>=2*Out] 

* Chain [7]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [8] 

 * loop 8:log(V,Out) -> [log(V',Out')] 
1*s(2)+2
  Such that:s(2) =< 2*V'

#### Cost of phase [8]:log(V,Out) -> [log(V',Out')] 
2*it(8)+1*s(3)+0
  Such that:it(8) =< V
it(8) =< V-V'
s(3) =< 2*V
s(3) =< 2*V-2*V'

#### Cost of phase [8]:log(V,Out) -> [log(V',Out')] 
2*it(8)+1*s(3)+0
  Such that:it(8) =< V
it(8) =< V-V'
s(3) =< 2*V
s(3) =< 2*V-2*V'

#### Cost of chains of log(V,Out):
* Chain [[8],10]: 2*it(8)+1*s(3)+1
  Such that:it(8) =< V
s(3) =< 2*V

  with precondition: [Out>=1,V>=4*Out] 

* Chain [[8],9,10]: 2*it(8)+1*s(3)+3
  Such that:it(8) =< V
s(3) =< 2*V

  with precondition: [Out>=2,V+4>=4*Out] 

* Chain [10]: 1
  with precondition: [Out=0,V>=0] 

* Chain [9,10]: 3
  with precondition: [Out=1,V>=2] 


#### Cost of chains of start(V):
* Chain [11]: 5*s(4)+2*s(6)+3
  Such that:aux(1) =< V
aux(2) =< 2*V
s(4) =< aux(1)
s(6) =< aux(2)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [11] with precondition: [V>=0] 
    - Upper bound: 9*V+3 
    - Complexity: n 

### Maximum cost of start(V): 9*V+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 19 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 23 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 65 ms.

