
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [p/2]
1. recursive  : [fac/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into p/2
1. SCC is partially evaluated into fac/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations p/2 
* CE 4 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations p/2 
* CE 9: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 10: p(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [9] --> Loop 7 
* CEs [10] --> Loop 8 

#### Loops of p/2 
* Loop 7: p(V,Out) [V>=1,V=Out+1] 
* Loop 8: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [8]
* [7]


### Merging Chains  p/2 into  External patterns of execution 
* [[8]] --> 1 
* [[7]] --> 2 


### Specialization of cost equations fac/2 
* CE 8 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 7 is refined into CE [13,14] 


#### Refined cost equations fac/2 
* CE 11: fac(V,Out) = 0
     [V>=0,Out=0] 
* CE 12: fac(V,Out) = 1
     [Out=1,V=0] 
* CE 13: fac(V,Out) = 1+ p(V,W):1+ fac(X,Y)
     [V>=1,V+Y+1=Out,X=0,W=0] 
* CE 14: fac(V,Out) = 1+ p(W,X):2+ fac(X,Y)
     [X>=0,X+Y+2=Out,X+1=W,X+1=V] 

### Cost equations --> "Loop" of fac/2 
* CEs [14] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of fac/2 
* Loop 9: fac(V,Out)->  fac(V',Out')
                  [V>=1,V+Out'+1=Out,V=V'+1] 
* Loop 10: fac(V,Out)->  fac(V',Out')
                  [V>=1,V+Out'+1=Out,V'=0] 
* Loop 11: fac(V,Out) [V>=0,Out=0] 
* Loop 12: fac(V,Out) [Out=1,V=0] 

### Ranking functions of CR fac(V,Out) 
* RF of phase [9]: [V]

#### Partial ranking functions of CR fac(V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:fac(V,Out) 
* [[9],12]
* [[9],11]
* [[9],10,12]
* [[9],10,11]
* [12]
* [11]
* [10,12]
* [10,11]


### Merging Chains  fac/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,10],[11,10,[9]],[12,10,[9]],[11,[9]],[12,[9]]] --> 3 
* [[11,10]] --> 4 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [15,16] 
* CE 3 is refined into CE [17,18,19,20] 


#### Refined cost equations start/1 
* CE 15: start(V) = 0+ p(V,W):1
     [V>=0,W=0] 
* CE 16: start(V) = 0+ p(W,X):2
     [X>=0,X+1=W,X+1=V] 
* CE 17: start(V) = 0+ fac(W,X):1
     [X=1,W=0,V=0] 
* CE 18: start(V) = 0+ fac(V,W):2
     [V>=0,W=0] 
* CE 19: start(V) = 0+ fac(V,W):3
     [V>=1] 
* CE 20: start(V) = 0+ fac(W,X):4
     [X>=2,X=W+1,X=V+1] 

### Cost equations --> "Loop" of start/1 
* CEs [15,16,17,18,19,20] --> Loop 13 

#### Loops of start/1 
* Loop 13: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [13]


### Merging Chains  start/1 into  External patterns of execution 
* [[13]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of p(V,Out):
* Chain [8]: 0
  with precondition: [Out=0,V>=0] 

* Chain [7]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [9] 

 * loop 9:fac(V,Out) -> [fac(V',Out')] 
2
#### Cost of phase [9]:fac(V,Out) -> [fac(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:fac(V,Out) -> [fac(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:fac(V,Out) -> [fac(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:fac(V,Out) -> [fac(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of chains of fac(V,Out):
* Chain [[9],12]: 2*it(9)+1
  Such that:it(9) =< V

  with precondition: [V>=1] 

* Chain [[9],11]: 2*it(9)+0
  Such that:it(9) =< V

  with precondition: [V>=1,Out>=V+1] 

* Chain [[9],10,12]: 2*it(9)+2
  Such that:it(9) =< V

  with precondition: [V>=1,Out>=2*V+2] 

* Chain [[9],10,11]: 2*it(9)+1
  Such that:it(9) =< V

  with precondition: [V>=1,Out>=2*V+1] 

* Chain [12]: 1
  with precondition: [V=0,Out=1] 

* Chain [11]: 0
  with precondition: [Out=0,V>=0] 

* Chain [10,12]: 2
  with precondition: [V+2=Out,V>=1] 

* Chain [10,11]: 1
  with precondition: [V+1=Out,V>=1] 


#### Cost of chains of start(V):
* Chain [13]: 8*s(6)+2
  Such that:s(5) =< V
s(6) =< s(5)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [13] with precondition: [V>=0] 
    - Upper bound: 8*V+2 
    - Complexity: n 

### Maximum cost of start(V): 8*V+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 15 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 16 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 58 ms.

