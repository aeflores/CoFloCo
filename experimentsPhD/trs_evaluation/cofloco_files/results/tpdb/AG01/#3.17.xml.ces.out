
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive  : [plus/3]
2. recursive  : [sum/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into sum/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17] 


#### Refined cost equations app/3 
* CE 14: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: app(A,B,A) = 1
     [A>=0,B=0] 
* CE 16: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 17: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [17] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of app/3 
* Loop 11: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 12: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 13: app(A,B,A) [A>=0,B=0] 
* Loop 14: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [11]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[11],14]
* [[11],13]
* [[11],12]
* [14]
* [13]
* [12]


### Merging Chains  app/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13],[13,[11]]] --> 2 
* [[12]] --> 3 
* [[14,[11]]] --> 4 
* [[12,[11]]] --> 5 


### Specialization of cost equations plus/3 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations plus/3 
* CE 18: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 19: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of plus/3 
* Loop 15: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 16: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [15]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[15],16]
* [16]


### Merging Chains  plus/3 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations sum/2 
* CE 11 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22,23] 


#### Refined cost equations sum/2 
* CE 20: sum(A,A) = 1
     [A>=1] 
* CE 21: sum(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 22: sum(V1,Out) = 1+ plus(W1,X1,X1):1+ sum(Y1,Out)
     [Y1>=X1+1,X1>=0,Y1+1=V1,W1=0] 
* CE 23: sum(V1,Out) = 1+ plus(W1,X1,Y1):2+ sum(Z1,Out)
     [Z1>=Y1+1,Y1>=W1,W1>=1,Y1=W1+X1,Z1+1=V1] 

### Cost equations --> "Loop" of sum/2 
* CEs [22,23] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of sum/2 
* Loop 17: sum(V1,Out)->  sum(V1',Out)
                  [V1>=2,V1=V1'+1] 
* Loop 18: sum(A,A) [A>=1] 
* Loop 19: sum(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR sum(V1,Out) 
* RF of phase [17]: [V1-1]

#### Partial ranking functions of CR sum(V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V1-1


### Resulting Chains:sum(V1,Out) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  sum/2 into  External patterns of execution 
* [[19],[19,[17]]] --> 1 
* [[18]] --> 2 
* [[18,[17]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [24,25,26,27,28] 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32,33] 


#### Refined cost equations start/2 
* CE 24: start(V1,V) = 0+ app(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 25: start(V1,V) = 0+ app(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 26: start(V1,V) = 0+ app(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 27: start(V1,V) = 0+ app(V1,W1,X1):4
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 28: start(V1,V) = 0+ app(V1,V,W1):5
     [V1>=W1,W1>=1,V>=0] 
* CE 29: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 30: start(V1,V) = 0+ plus(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 31: start(V1,V) = 0+ sum(V1,W1):1
     [V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ sum(V1,V1):2
     [V1>=1] 
* CE 33: start(V1,V) = 0+ sum(V1,W1):3
     [V1>=W1+1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [25] --> Loop 20 
* CEs [24,26,27,28,29,30,31,32,33] --> Loop 21 

#### Loops of start/2 
* Loop 20: start(V1,V) [V1>=0,V=0] 
* Loop 21: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [21]
* [20]


### Merging Chains  start/2 into  External patterns of execution 
* [[20],[21]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [11]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[11],14]: 1*it(11)+1
  Such that:it(11) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [14]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [12]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [15] 

 * loop 15:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [15]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[15],16]: 1*it(15)+1
  Such that:it(15) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [16]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [17] 

 * loop 17:sum(V1,Out) -> [sum(V1',Out')] 
1*s(3)+2
  Such that:s(3) =< V1'

#### Cost of phase [17]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(17)+1*s(4)+0
  Such that:it(17) =< V1-V1'
aux(2) =< V1
it(17) =< aux(2)
s(4) =< it(17)*aux(2)

#### Cost of phase [17]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(17)+1*s(4)+0
  Such that:it(17) =< V1-V1'
aux(2) =< V1
it(17) =< aux(2)
s(4) =< it(17)*aux(2)

#### Cost of chains of sum(V1,Out):
* Chain [[17],19]: 2*it(17)+1*s(4)+0
  Such that:aux(3) =< V1
it(17) =< aux(3)
s(4) =< it(17)*aux(3)

  with precondition: [Out=0,V1>=2] 

* Chain [[17],18]: 2*it(17)+1*s(4)+1
  Such that:aux(2) =< V1
it(17) =< V1-Out
it(17) =< aux(2)
s(4) =< it(17)*aux(2)

  with precondition: [Out>=1,V1>=Out+1] 

* Chain [19]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [18]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [21]: 7*s(8)+2*s(13)+1
  Such that:aux(5) =< V1
s(8) =< aux(5)
s(13) =< s(8)*aux(5)

  with precondition: [V1>=0] 

* Chain [20]: 1*s(17)+1
  Such that:s(17) =< V1

  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [21] with precondition: [V1>=0] 
    - Upper bound: 7*V1+1+2*V1*V1 
    - Complexity: n^2 
* Chain [20] with precondition: [V=0,V1>=0] 
    - Upper bound: V1+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 2*V1*V1+6*V1+ (V1+1) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 36 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 39 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 123 ms.

