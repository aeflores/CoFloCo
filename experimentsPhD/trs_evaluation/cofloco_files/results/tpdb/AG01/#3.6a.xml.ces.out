
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [minus/3]
2. recursive  : [fun/4,gcd/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into gcd/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 20 is refined into CE [21] 
* CE 18 is refined into CE [22] 
* CE 17 is refined into CE [23] 
* CE 19 is refined into CE [24] 


#### Refined cost equations le/3 
* CE 21: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 22: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 23: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 24: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [24] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of le/3 
* Loop 15: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 16: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 17: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 18: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [15]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[15],18]
* [[15],17]
* [[15],16]
* [18]
* [17]
* [16]


### Merging Chains  le/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16],[16,[15]]] --> 3 
* [[17,[15]]] --> 4 
* [[18,[15]]] --> 5 


### Specialization of cost equations minus/3 
* CE 10 is refined into CE [25] 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27] 


#### Refined cost equations minus/3 
* CE 25: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 26: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 27: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of minus/3 
* Loop 19: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 20: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 21: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [19]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[19],21]
* [[19],20]
* [21]
* [20]


### Merging Chains  minus/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20],[20,[19]]] --> 2 
* [[21,[19]]] --> 3 


### Specialization of cost equations gcd/3 
* CE 11 is refined into CE [28,29,30,31,32] 
* CE 16 is refined into CE [33] 
* CE 15 is refined into CE [34] 
* CE 14 is refined into CE [35] 
* CE 13 is refined into CE [36,37,38,39] 
* CE 12 is refined into CE [40,41,42,43] 


#### Refined cost equations gcd/3 
* CE 28: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=2,W1=0,Out=0,V=1] 
* CE 29: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):2
     [W1>=1,W1+1=V,Y1=1,X1=0,Out=0,V1=1] 
* CE 30: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):3
     [X1>=0,W1>=0,W1+1=V,X1+1=V1,Y1=0,Out=0] 
* CE 31: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):4
     [W1>=X1+1,X1>=1,W1+1=V,X1+1=V1,Y1=1,Out=0] 
* CE 32: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):5
     [X1>=W1,W1>=1,W1+1=V,X1+1=V1,Y1=2,Out=0] 
* CE 33: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 34: gcd(A,B,A) = 1
     [A>=1,B=0] 
* CE 35: gcd(A,B,B) = 1
     [B>=0,A=0] 
* CE 36: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,X1):1+ gcd(X1,A2,Out)
     [X1>=0,X1+1=V1,A2=1,Z1=0,Y1=2,W1=0,V=1] 
* CE 37: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ gcd(B2,C2,Out)
     [X1>=0,X1+1=V1,C2=1,B2=0,A2=0,Z1=0,Y1=2,W1=0,V=1] 
* CE 38: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(X1,W1,Z1):2+ gcd(A2,B2,Out)
     [X1>=W1,W1>=1,W1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=2] 
* CE 39: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(Z1,W1,A2):3+ gcd(A2,B2,Out)
     [A2>=0,W1>=1,W1+A2=Z1,W1+A2=X1,W1+A2+1=V1,W1+1=B2,W1+1=V,Y1=2] 
* CE 40: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,W1):1+ gcd(W1,A2,Out)
     [W1>=1,W1+1=V,A2=1,Z1=0,Y1=1,X1=0,V1=1] 
* CE 41: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,A2):2+ gcd(B2,C2,Out)
     [W1>=1,W1+1=V,C2=1,B2=0,A2=0,Z1=0,Y1=1,X1=0,V1=1] 
* CE 42: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(W1,X1,Z1):2+ gcd(A2,B2,Out)
     [W1>=X1+1,X1>=1,X1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=1] 
* CE 43: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(Z1,X1,A2):3+ gcd(A2,B2,Out)
     [A2>=1,X1>=1,X1+A2=Z1,X1+A2=W1,X1+A2+1=V,X1+1=B2,X1+1=V1,Y1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [43] --> Loop 22 
* CEs [39] --> Loop 23 
* CEs [42] --> Loop 24 
* CEs [38] --> Loop 25 
* CEs [36] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [40] --> Loop 28 
* CEs [41] --> Loop 29 
* CEs [28] --> Loop 30 
* CEs [34] --> Loop 31 
* CEs [29,30,31,32,33] --> Loop 32 
* CEs [35] --> Loop 33 

#### Loops of gcd/3 
* Loop 22: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,V1+A'=V] 
* Loop 23: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1=V+V1'] 
* Loop 24: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,A'=0] 
* Loop 25: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1'=0] 
* Loop 26: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 27: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 28: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V=V1'+1,V'=1,V1=1] 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V'=1,V1'=0,V1=1] 
* Loop 30: gcd(V1,V,Out) [V1>=1,Out=0,V=1] 
* Loop 31: gcd(A,B,A) [A>=1,B=0] 
* Loop 32: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 33: gcd(A,B,B) [B>=0,A=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [22,23]: [V1+V-3]
* RF of phase [26]: [V1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1]:
    V-2
    V1/2+V/2-2
  - RF of loop [23:1]:
    V1-1 depends on loops [22:1] 
    V1-V+1 depends on loops [22:1] 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V1


### Resulting Chains:gcd(V1,V,Out) 
* [[26],33]
* [[26],32]
* [[26],30]
* [[26],27,33]
* [[26],27,32]
* [[22,23],33]
* [[22,23],32]
* [[22,23],29,33]
* [[22,23],29,32]
* [[22,23],28,[26],33]
* [[22,23],28,[26],32]
* [[22,23],28,[26],30]
* [[22,23],28,[26],27,33]
* [[22,23],28,[26],27,32]
* [[22,23],28,32]
* [[22,23],28,30]
* [[22,23],28,27,33]
* [[22,23],28,27,32]
* [[22,23],25,33]
* [[22,23],25,32]
* [[22,23],24,33]
* [[22,23],24,32]
* [33]
* [32]
* [31]
* [30]
* [29,33]
* [29,32]
* [28,[26],33]
* [28,[26],32]
* [28,[26],30]
* [28,[26],27,33]
* [28,[26],27,32]
* [28,32]
* [28,30]
* [28,27,33]
* [28,27,32]
* [27,33]
* [27,32]
* [25,33]
* [25,32]
* [24,33]
* [24,32]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32,24],[32,25],[32,27,28],[30,28],[32,28],[32,27,[26],28],[30,[26],28],[32,[26],28],[32,29],[32],[32,24,[22,23]],[32,25,[22,23]],[32,27,28,[22,23]],[30,28,[22,23]],[32,28,[22,23]],[32,27,[26],28,[22,23]],[30,[26],28,[22,23]],[32,[26],28,[22,23]],[32,29,[22,23]],[32,[22,23]]] --> 2 
* [[33,27,28],[33,27,[26],28],[33,[26],28],[33,29]] --> 3 
* [[31]] --> 4 
* [[32,27],[30],[32,27,[26]],[30,[26]],[32,[26]]] --> 5 
* [[33,27],[33,27,[26]],[33,[26]]] --> 6 
* [[33,27,28,[22,23]],[33,27,[26],28,[22,23]],[33,[26],28,[22,23]],[33,29,[22,23]]] --> 7 
* [[33,24],[33,24,[22,23]],[33,25,[22,23]],[33,[22,23]]] --> 8 
* [[33,25]] --> 9 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [44,45,46,47,48,49,50,51,52,53,54,55] 
* CE 2 is refined into CE [56] 
* CE 3 is refined into CE [57,58,59,60,61,62,63,64,65,66,67,68] 
* CE 5 is refined into CE [69,70,71,72,73] 
* CE 6 is refined into CE [74,75,76] 
* CE 7 is refined into CE [77,78,79,80,81,82,83,84,85] 


#### Refined cost equations start/3 
* CE 44: start(V1,V,V14) = 1+ minus(W14,X14,Y14):1+ gcd(Z14,A15,B15):1
     [B15=1,A15=1,Z14=0,Y14=0,X14=0,W14=0,V14=1,V=1,V1=2] 
* CE 45: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):2
     [W14>=0,W14+1=V,Z14=0,Y14=1,X14=0,V14=1,V1=2] 
* CE 46: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):5
     [W14>=1,W14+1=V,Z14=0,Y14=1,X14=0,V14=1,V1=2] 
* CE 47: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):6
     [W14>=1,W14+1=V,Z14=1,Y14=1,X14=0,V14=1,V1=2] 
* CE 48: start(V1,V,V14) = 1+ minus(W14,X14,Y14):2+ gcd(Z14,V14,V14):1
     [V14>=1,W14>=0,V14=X14+1,W14+1=V,Z14=0,Y14=0,V1=2] 
* CE 49: start(V1,V,V14) = 1+ minus(W14,X14,Y14):2+ gcd(Z14,V14,A15):2
     [V14>=1,W14>=0,V14=X14+1,W14+1=V,A15=0,Z14=0,Y14=0,V1=2] 
* CE 50: start(A,B,B) = 1+ minus(C,D,E):3+ gcd(F,B,B):1
     [B>=2,B=D+1,B=C+1,F=0,E=0,A=2] 
* CE 51: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V14,Z14):2
     [V14>=2,Y14>=0,V14+Y14=W14+1,V14+Y14=V,V14=X14+1,Z14=0,V1=2] 
* CE 52: start(V1,V,V14) = 1+ minus(V14,W14,X14):3+ gcd(Y14,V14,Z14):3
     [V14>=2,V14=W14+1,V14+1=V,Z14=1,Y14=1,X14=1,V1=2] 
* CE 53: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V14,Z14):7
     [V14+Y14>=5,V14>=2,Y14>=2,V14+Y14=W14+1,V14+Y14=V,V14=X14+1,Z14=1,V1=2] 
* CE 54: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V14,Z14):8
     [V14>=Z14,Y14>=Z14,Z14>=2,V14+Y14=W14+1,V14+Y14=V,V14=X14+1,V1=2] 
* CE 55: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V14,V14):9
     [Y14>=V14,V14>=2,V14+Y14=W14+1,V14+Y14=V,V14=X14+1,V1=2] 
* CE 56: start(V1,V,V14) = 0
     [V14>=0,V>=0,V1>=0] 
* CE 57: start(V1,V,V14) = 1+ minus(W14,X14,Y14):1+ gcd(Z14,A15,B15):1
     [B15=1,A15=1,Z14=0,Y14=0,X14=0,W14=0,V14=1,V=1,V1=1] 
* CE 58: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):2
     [W14>=0,W14+1=V14,Z14=0,Y14=1,X14=0,V=1,V1=1] 
* CE 59: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):5
     [W14>=1,W14+1=V14,Z14=0,Y14=1,X14=0,V=1,V1=1] 
* CE 60: start(V1,V,V14) = 1+ minus(W14,X14,W14):1+ gcd(W14,Y14,Z14):6
     [W14>=1,W14+1=V14,Z14=1,Y14=1,X14=0,V=1,V1=1] 
* CE 61: start(V1,V,V14) = 1+ minus(W14,X14,Y14):2+ gcd(Z14,V,V):1
     [V>=1,W14>=0,V=X14+1,W14+1=V14,Z14=0,Y14=0,V1=1] 
* CE 62: start(V1,V,V14) = 1+ minus(W14,X14,Y14):2+ gcd(Z14,V,A15):2
     [V>=1,W14>=0,V=X14+1,W14+1=V14,A15=0,Z14=0,Y14=0,V1=1] 
* CE 63: start(A,B,B) = 1+ minus(C,D,E):3+ gcd(F,B,B):1
     [B>=2,B=D+1,B=C+1,F=0,E=0,A=1] 
* CE 64: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V,Z14):2
     [V>=2,Y14>=0,V+Y14=W14+1,V+Y14=V14,V=X14+1,Z14=0,V1=1] 
* CE 65: start(V1,V,V14) = 1+ minus(V,W14,X14):3+ gcd(Y14,V,Z14):3
     [V>=2,V=W14+1,V+1=V14,Z14=1,Y14=1,X14=1,V1=1] 
* CE 66: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V,Z14):7
     [V+Y14>=5,V>=2,Y14>=2,V+Y14=W14+1,V+Y14=V14,V=X14+1,Z14=1,V1=1] 
* CE 67: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V,Z14):8
     [V>=Z14,Y14>=Z14,Z14>=2,V+Y14=W14+1,V+Y14=V14,V=X14+1,V1=1] 
* CE 68: start(V1,V,V14) = 1+ minus(W14,X14,Y14):3+ gcd(Y14,V,V):9
     [Y14>=V,V>=2,V+Y14=W14+1,V+Y14=V14,V=X14+1,V1=1] 
* CE 69: start(V1,V,V14) = 0+ le(W14,V,X14):1
     [V>=0,X14=2,W14=0,V1=0] 
* CE 70: start(V1,V,V14) = 0+ le(V1,W14,X14):2
     [V1>=1,X14=1,W14=0,V=0] 
* CE 71: start(V1,V,V14) = 0+ le(V1,V,W14):3
     [V>=0,V1>=0,W14=0] 
* CE 72: start(V1,V,V14) = 0+ le(V1,V,W14):4
     [V1>=V+1,V>=1,W14=1] 
* CE 73: start(V1,V,V14) = 0+ le(V1,V,W14):5
     [V>=V1,V1>=1,W14=2] 
* CE 74: start(V1,V,V14) = 0+ minus(V1,W14,V1):1
     [V1>=0,W14=0,V=0] 
* CE 75: start(V1,V,V14) = 0+ minus(V1,V,W14):2
     [V>=0,V1>=0,W14=0] 
* CE 76: start(V1,V,V14) = 0+ minus(W14,V,X14):3
     [X14>=0,V>=1,V+X14=W14,V+X14=V1] 
* CE 77: start(V1,V,V14) = 0+ gcd(W14,V,V):1
     [V>=0,W14=0,V1=0] 
* CE 78: start(V1,V,V14) = 0+ gcd(V1,V,W14):2
     [V>=0,V1>=0,W14=0] 
* CE 79: start(V1,V,V14) = 0+ gcd(W14,V,X14):3
     [V>=2,X14=1,W14=1,V1=1] 
* CE 80: start(V1,V,V14) = 0+ gcd(V1,W14,V1):4
     [V1>=1,W14=0,V=0] 
* CE 81: start(V1,V,V14) = 0+ gcd(V1,W14,X14):5
     [V1>=1,X14=0,W14=1,V=1] 
* CE 82: start(V1,V,V14) = 0+ gcd(V1,W14,X14):6
     [V1>=1,X14=1,W14=1,V=1] 
* CE 83: start(V1,V,V14) = 0+ gcd(V1,V,W14):7
     [V1+V>=5,V>=2,V1>=2,W14=1] 
* CE 84: start(V1,V,V14) = 0+ gcd(V1,V,W14):8
     [V>=W14,V1>=W14,W14>=2] 
* CE 85: start(V1,V,V14) = 0+ gcd(V1,V,V):9
     [V1>=V,V>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [81,82] --> Loop 34 
* CEs [70,74,80] --> Loop 35 
* CEs [52] --> Loop 36 
* CEs [50] --> Loop 37 
* CEs [44,45,46,47,48,49,51,53,54,55] --> Loop 38 
* CEs [63] --> Loop 39 
* CEs [65,79] --> Loop 40 
* CEs [57,58,59,60,61,62,64,66,67,68] --> Loop 41 
* CEs [56,69,71,72,73,75,76,77,78,83,84,85] --> Loop 42 

#### Loops of start/3 
* Loop 34: start(V1,V,V14) [V1>=1,V=1] 
* Loop 35: start(V1,V,V14) [V1>=0,V=0] 
* Loop 36: start(V1,V,V14) [V>=3,V=V14+1,V1=2] 
* Loop 37: start(A,B,B) [B>=2,A=2] 
* Loop 38: start(V1,V,V14) [V14>=1,V>=1,V1=2] 
* Loop 39: start(A,B,B) [B>=2,A=1] 
* Loop 40: start(V1,V,V14) [V>=2,V1=1] 
* Loop 41: start(V1,V,V14) [V14>=1,V>=1,V1=1] 
* Loop 42: start(V1,V,V14) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V14) 

#### Partial ranking functions of CR start(V1,V,V14) 


### Resulting Chains:start(V1,V,V14) 
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  start/3 into  External patterns of execution 
* [[39],[41],[42]] --> 1 
* [[40]] --> 2 
* [[37],[38]] --> 3 
* [[36]] --> 4 
* [[35]] --> 5 
* [[34]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [15]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
it(15) =< V
it(15) =< V-V'

#### Cost of phase [15]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
it(15) =< V
it(15) =< V-V'

#### Cost of phase [15]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
it(15) =< V
it(15) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[15],18]: 1*it(15)+1
  Such that:it(15) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [18]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [17]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [16]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [19] 

 * loop 19:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[19],21]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [21]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [20]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [26] 

 * loop 26:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4
#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+0
  Such that:it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+0
  Such that:it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+0
  Such that:it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+0
  Such that:it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+0
  Such that:it(26) =< V1
it(26) =< V1-V1'

#### Cost of loops [22,23] 

 * loop 22:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*s(10)+4
  Such that:s(9) =< V'
s(10) =< s(9)

 * loop 23:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*s(14)+4
  Such that:s(13) =< V'
s(14) =< s(13)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(22)+4*it(23)+2*s(15)+2*s(17)+0
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(7) =< 2*V-2*V'
aux(19) =< V1
aux(20) =< V1+V
aux(21) =< V1+V-V1'-V'
aux(22) =< V1-V1'
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-V1'/2-V'/2
aux(25) =< V
aux(26) =< V-V'
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[26],33]: 4*it(26)+1
  Such that:it(26) =< V1

  with precondition: [V=1,Out=1,V1>=1] 

* Chain [[26],32]: 6*it(26)+1*s(5)+2
  Such that:s(5) =< 1
aux(2) =< V1
it(26) =< aux(2)

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [[26],30]: 4*it(26)+2
  Such that:it(26) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[26],27,33]: 4*it(26)+4
  Such that:it(26) =< V1

  with precondition: [V=1,Out=1,V1>=2] 

* Chain [[26],27,32]: 4*it(26)+1*s(5)+5
  Such that:s(5) =< 1
it(26) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[22,23],33]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+1
  Such that:aux(8) =< V1-V+1
aux(20) =< V1+V
aux(21) =< V1+V-Out
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-Out/2
aux(25) =< V
aux(26) =< V-Out
aux(7) =< 2*V-2*Out
aux(27) =< V1
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(27)
s(18) =< aux(5)+aux(27)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

  with precondition: [Out>=2,V1>=Out,V>=Out] 

* Chain [[22,23],32]: 4*it(22)+4*it(23)+5*s(3)+2*s(17)+2
  Such that:aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(7) =< 2*V
aux(28) =< V1
aux(29) =< V1+V
aux(30) =< V
s(3) =< aux(29)
it(22) =< aux(29)
it(23) =< aux(29)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(30)
it(23) =< aux(7)+aux(8)
it(23) =< aux(30)+aux(28)
s(18) =< aux(30)+aux(28)
s(18) =< it(23)*aux(30)
s(17) =< s(18)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[22,23],29,33]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+4
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(31) =< V1
aux(32) =< V1+V
aux(33) =< V1/2+V/2
aux(34) =< V
it(22) =< aux(32)
it(23) =< aux(32)
it(22) =< aux(33)
it(23) =< aux(33)
it(22) =< aux(34)
it(23) =< aux(7)+aux(8)
it(23) =< aux(34)+aux(31)
s(18) =< aux(34)+aux(31)
s(18) =< it(23)*aux(34)
s(17) =< s(18)
s(15) =< aux(32)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],29,32]: 4*it(22)+4*it(23)+1*s(5)+2*s(15)+2*s(17)+5
  Such that:s(5) =< 1
aux(8) =< V1-V+1
aux(7) =< 2*V
aux(35) =< V1
aux(36) =< V1+V
aux(37) =< V1/2+V/2
aux(38) =< V
it(22) =< aux(36)
it(23) =< aux(36)
it(22) =< aux(37)
it(23) =< aux(37)
it(22) =< aux(38)
it(23) =< aux(7)+aux(8)
it(23) =< aux(38)+aux(35)
s(18) =< aux(38)+aux(35)
s(18) =< it(23)*aux(38)
s(17) =< s(18)
s(15) =< aux(36)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,[26],33]: 4*it(22)+4*it(23)+4*it(26)+2*s(15)+2*s(17)+5
  Such that:aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(7) =< 2*V
aux(39) =< V1
aux(40) =< V1+V
aux(41) =< V
it(26) =< aux(41)
it(22) =< aux(40)
it(23) =< aux(40)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(41)
it(23) =< aux(7)+aux(8)
it(23) =< aux(41)+aux(39)
s(18) =< aux(41)+aux(39)
s(18) =< it(23)*aux(41)
s(17) =< s(18)
s(15) =< aux(40)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,[26],32]: 4*it(22)+4*it(23)+6*it(26)+1*s(5)+2*s(15)+2*s(17)+6
  Such that:s(5) =< 1
aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(42) =< V1
aux(43) =< V1+V
aux(44) =< V
aux(45) =< 2*V
aux(2) =< aux(43)
aux(2) =< aux(44)
aux(2) =< aux(45)
it(26) =< aux(2)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(44)
it(23) =< aux(45)+aux(8)
it(23) =< aux(44)+aux(42)
s(18) =< aux(44)+aux(42)
s(18) =< it(23)*aux(44)
s(17) =< s(18)
s(15) =< aux(43)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,[26],30]: 4*it(22)+4*it(23)+4*it(26)+2*s(15)+2*s(17)+6
  Such that:aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(7) =< 2*V
aux(46) =< V1
aux(47) =< V1+V
aux(48) =< V
it(26) =< aux(48)
it(22) =< aux(47)
it(23) =< aux(47)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(48)
it(23) =< aux(7)+aux(8)
it(23) =< aux(48)+aux(46)
s(18) =< aux(48)+aux(46)
s(18) =< it(23)*aux(48)
s(17) =< s(18)
s(15) =< aux(47)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,[26],27,33]: 4*it(22)+4*it(23)+4*it(26)+2*s(15)+2*s(17)+8
  Such that:aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(7) =< 2*V
aux(49) =< V1
aux(50) =< V1+V
aux(51) =< V
it(26) =< aux(51)
it(22) =< aux(50)
it(23) =< aux(50)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(51)
it(23) =< aux(7)+aux(8)
it(23) =< aux(51)+aux(49)
s(18) =< aux(51)+aux(49)
s(18) =< it(23)*aux(51)
s(17) =< s(18)
s(15) =< aux(50)

  with precondition: [Out=1,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,[26],27,32]: 4*it(22)+4*it(23)+4*it(26)+1*s(5)+2*s(15)+2*s(17)+9
  Such that:s(5) =< 1
aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(7) =< 2*V
aux(52) =< V1
aux(53) =< V1+V
aux(54) =< V
it(26) =< aux(54)
it(22) =< aux(53)
it(23) =< aux(53)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(54)
it(23) =< aux(7)+aux(8)
it(23) =< aux(54)+aux(52)
s(18) =< aux(54)+aux(52)
s(18) =< it(23)*aux(54)
s(17) =< s(18)
s(15) =< aux(53)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,32]: 4*it(22)+4*it(23)+2*s(3)+1*s(5)+2*s(15)+2*s(17)+6
  Such that:s(5) =< 1
aux(8) =< V1-V+1
aux(23) =< V1/2+V/2
aux(55) =< V1
aux(56) =< V1+V
aux(57) =< V
aux(58) =< 2*V
aux(1) =< aux(56)
aux(1) =< aux(57)
aux(1) =< aux(58)
s(3) =< aux(1)
it(22) =< aux(56)
it(23) =< aux(56)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(57)
it(23) =< aux(58)+aux(8)
it(23) =< aux(57)+aux(55)
s(18) =< aux(57)+aux(55)
s(18) =< it(23)*aux(57)
s(17) =< s(18)
s(15) =< aux(56)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,30]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+6
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(59) =< V1
aux(60) =< V1+V
aux(61) =< V1/2+V/2
aux(62) =< V
it(22) =< aux(60)
it(23) =< aux(60)
it(22) =< aux(61)
it(23) =< aux(61)
it(22) =< aux(62)
it(23) =< aux(7)+aux(8)
it(23) =< aux(62)+aux(59)
s(18) =< aux(62)+aux(59)
s(18) =< it(23)*aux(62)
s(17) =< s(18)
s(15) =< aux(60)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,27,33]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+8
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(63) =< V1
aux(64) =< V1+V
aux(65) =< V1/2+V/2
aux(66) =< V
it(22) =< aux(64)
it(23) =< aux(64)
it(22) =< aux(65)
it(23) =< aux(65)
it(22) =< aux(66)
it(23) =< aux(7)+aux(8)
it(23) =< aux(66)+aux(63)
s(18) =< aux(66)+aux(63)
s(18) =< it(23)*aux(66)
s(17) =< s(18)
s(15) =< aux(64)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,27,32]: 4*it(22)+4*it(23)+1*s(5)+2*s(15)+2*s(17)+9
  Such that:s(5) =< 1
aux(8) =< V1-V+1
aux(7) =< 2*V
aux(67) =< V1
aux(68) =< V1+V
aux(69) =< V1/2+V/2
aux(70) =< V
it(22) =< aux(68)
it(23) =< aux(68)
it(22) =< aux(69)
it(23) =< aux(69)
it(22) =< aux(70)
it(23) =< aux(7)+aux(8)
it(23) =< aux(70)+aux(67)
s(18) =< aux(70)+aux(67)
s(18) =< it(23)*aux(70)
s(17) =< s(18)
s(15) =< aux(68)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],25,33]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+2*s(20)+4
  Such that:aux(19) =< V1
aux(8) =< V1-V+1
aux(20) =< V1+V
aux(21) =< V1+V-2*Out
aux(22) =< V1-Out
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-Out
aux(25) =< V
aux(26) =< V-Out
aux(7) =< 2*V-2*Out
aux(71) =< Out
s(20) =< aux(71)
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

  with precondition: [Out>=2,V1>=Out,V>=Out,V+V1>=3*Out] 

* Chain [[22,23],25,32]: 4*it(22)+4*it(23)+3*s(5)+2*s(15)+2*s(17)+5
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(73) =< V1
aux(74) =< V1+V
aux(75) =< V1/2+V/2
aux(76) =< V
s(5) =< aux(76)
it(22) =< aux(74)
it(23) =< aux(74)
it(22) =< aux(75)
it(23) =< aux(75)
it(22) =< aux(76)
it(23) =< aux(7)+aux(8)
it(23) =< aux(76)+aux(73)
s(18) =< aux(76)+aux(73)
s(18) =< it(23)*aux(76)
s(17) =< s(18)
s(15) =< aux(74)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[22,23],24,33]: 4*it(22)+4*it(23)+2*s(15)+2*s(17)+2*s(22)+4
  Such that:aux(19) =< V1
aux(8) =< V1-V+1
aux(20) =< V1+V
aux(21) =< V1+V-2*Out
aux(22) =< V1-Out
aux(23) =< V1/2+V/2
aux(24) =< V1/2+V/2-Out
aux(25) =< V
aux(26) =< V-Out
aux(7) =< 2*V-2*Out
aux(77) =< Out
s(22) =< aux(77)
it(22) =< aux(20)
it(23) =< aux(20)
s(16) =< aux(20)
it(22) =< aux(21)
it(23) =< aux(21)
s(16) =< aux(21)
it(22) =< aux(23)
it(23) =< aux(23)
it(22) =< aux(24)
it(23) =< aux(24)
aux(5) =< aux(25)
it(22) =< aux(25)
aux(5) =< aux(26)
it(22) =< aux(26)
it(23) =< aux(7)+aux(8)
it(23) =< aux(5)+aux(19)
s(18) =< aux(5)+aux(22)
s(18) =< aux(5)+aux(19)
it(23) =< aux(5)+aux(22)
s(18) =< it(23)*aux(25)
s(17) =< s(18)
s(15) =< s(16)

  with precondition: [Out>=2,V1>=Out+1,V>=Out+1,V+V1>=3*Out+2] 

* Chain [[22,23],24,32]: 4*it(22)+4*it(23)+3*s(5)+2*s(15)+2*s(17)+5
  Such that:aux(8) =< V1-V+1
aux(7) =< 2*V
aux(79) =< V1
aux(80) =< V1+V
aux(81) =< V1/2+V/2
aux(82) =< V
s(5) =< aux(79)
it(22) =< aux(80)
it(23) =< aux(80)
it(22) =< aux(81)
it(23) =< aux(81)
it(22) =< aux(82)
it(23) =< aux(7)+aux(8)
it(23) =< aux(82)+aux(79)
s(18) =< aux(82)+aux(79)
s(18) =< it(23)*aux(82)
s(17) =< s(18)
s(15) =< aux(80)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=8] 

* Chain [33]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [32]: 2*s(3)+1*s(5)+2
  Such that:s(5) =< V
aux(1) =< V1
s(3) =< aux(1)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [31]: 1
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [30]: 2
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [29,33]: 4
  with precondition: [V1=1,Out=1,V>=2] 

* Chain [29,32]: 1*s(5)+5
  Such that:s(5) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,[26],33]: 4*it(26)+5
  Such that:it(26) =< V

  with precondition: [V1=1,Out=1,V>=2] 

* Chain [28,[26],32]: 6*it(26)+1*s(5)+6
  Such that:s(5) =< 1
aux(2) =< V
it(26) =< aux(2)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,[26],30]: 4*it(26)+6
  Such that:it(26) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [28,[26],27,33]: 4*it(26)+8
  Such that:it(26) =< V

  with precondition: [V1=1,Out=1,V>=3] 

* Chain [28,[26],27,32]: 4*it(26)+1*s(5)+9
  Such that:s(5) =< 1
it(26) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [28,32]: 2*s(3)+1*s(5)+6
  Such that:s(5) =< 1
aux(1) =< V
s(3) =< aux(1)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,30]: 6
  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,27,33]: 8
  with precondition: [V1=1,Out=1,V>=2] 

* Chain [28,27,32]: 1*s(5)+9
  Such that:s(5) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [27,33]: 4
  with precondition: [V=1,Out=1,V1>=1] 

* Chain [27,32]: 1*s(5)+5
  Such that:s(5) =< 1

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [25,33]: 2*s(20)+4
  Such that:aux(71) =< Out
s(20) =< aux(71)

  with precondition: [V=Out,V>=2,V1>=V] 

* Chain [25,32]: 3*s(5)+5
  Such that:aux(72) =< V
s(5) =< aux(72)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [24,33]: 2*s(22)+4
  Such that:aux(77) =< Out
s(22) =< aux(77)

  with precondition: [V1=Out,V1>=2,V>=V1+1] 

* Chain [24,32]: 3*s(5)+5
  Such that:aux(78) =< V1
s(5) =< aux(78)

  with precondition: [Out=0,V1>=2,V>=V1+1] 


#### Cost of chains of start(V1,V,V14):
* Chain [42]: 45*s(278)+9*s(280)+10*s(290)+64*s(292)+64*s(293)+32*s(295)+43*s(296)+8*s(298)+4*s(333)+4*s(334)+2*s(337)+9
  Such that:s(283) =< 1
aux(115) =< V1
aux(116) =< V1-V+1
aux(117) =< V1+V
aux(118) =< V1/2+V/2
aux(119) =< V
aux(120) =< 2*V
s(280) =< aux(115)
s(278) =< aux(119)
s(290) =< s(283)
s(292) =< aux(117)
s(293) =< aux(117)
s(292) =< aux(118)
s(293) =< aux(118)
s(292) =< aux(119)
s(293) =< aux(120)+aux(116)
s(293) =< aux(119)+aux(115)
s(294) =< aux(119)+aux(115)
s(294) =< s(293)*aux(119)
s(295) =< s(294)
s(296) =< aux(117)
s(297) =< aux(117)
s(297) =< aux(119)
s(297) =< aux(120)
s(298) =< s(297)
s(313) =< aux(117)
s(313) =< aux(118)
s(333) =< aux(117)
s(334) =< aux(117)
s(333) =< aux(118)
s(334) =< aux(118)
s(333) =< s(313)
s(334) =< s(313)
s(333) =< aux(119)
s(334) =< aux(120)+aux(116)
s(334) =< aux(119)+aux(115)
s(336) =< aux(119)+aux(115)
s(336) =< s(334)*aux(119)
s(337) =< s(336)

  with precondition: [V1>=0,V>=0] 

* Chain [41]: 64*s(348)+40*s(350)+40*s(351)+20*s(353)+96*s(354)+8*s(356)+101*s(364)+40*s(375)+40*s(376)+20*s(378)+8*s(381)+68*s(393)+68*s(394)+34*s(396)+8*s(399)+8*s(400)+11
  Such that:s(347) =< 2
s(368) =< -V+1
s(370) =< V/2
aux(131) =< 1
aux(132) =< -2*V+V14+1
aux(133) =< -V+V14
aux(134) =< V
aux(135) =< 2*V
aux(136) =< V14
aux(137) =< V14/2
s(364) =< aux(134)
s(348) =< aux(131)
s(354) =< aux(136)
s(375) =< aux(134)
s(376) =< aux(134)
s(375) =< s(370)
s(376) =< s(370)
s(376) =< aux(135)+s(368)
s(377) =< aux(134)
s(377) =< s(376)*aux(134)
s(378) =< s(377)
s(380) =< aux(134)
s(380) =< aux(135)
s(381) =< s(380)
s(393) =< aux(136)
s(394) =< aux(136)
s(393) =< aux(137)
s(394) =< aux(137)
s(393) =< aux(134)
s(394) =< aux(135)+aux(132)
s(394) =< aux(134)+aux(133)
s(395) =< aux(134)+aux(133)
s(395) =< s(394)*aux(134)
s(396) =< s(395)
s(398) =< aux(136)
s(398) =< aux(134)
s(398) =< aux(135)
s(399) =< s(398)
s(400) =< aux(133)
s(350) =< aux(136)
s(351) =< aux(136)
s(350) =< aux(137)
s(351) =< aux(137)
s(350) =< aux(131)
s(351) =< s(347)+aux(136)
s(351) =< aux(131)+aux(136)
s(352) =< aux(131)+aux(136)
s(352) =< s(351)*aux(131)
s(353) =< s(352)
s(355) =< aux(136)
s(355) =< aux(131)
s(355) =< s(347)
s(356) =< s(355)

  with precondition: [V1=1,V>=1,V14>=1] 

* Chain [40]: 9*s(445)+8*s(449)+10
  Such that:s(448) =< V
aux(138) =< V14
s(449) =< s(448)
s(445) =< aux(138)

  with precondition: [V1=1,V>=2] 

* Chain [39]: 1*s(450)+3
  Such that:s(450) =< V14

  with precondition: [V1=1,V=V14,V>=2] 

* Chain [38]: 64*s(458)+40*s(460)+40*s(461)+20*s(463)+96*s(464)+8*s(466)+101*s(474)+40*s(485)+40*s(486)+20*s(488)+8*s(491)+68*s(503)+68*s(504)+34*s(506)+8*s(509)+8*s(510)+11
  Such that:s(457) =< 2
s(478) =< -V14+1
s(480) =< V14/2
aux(149) =< 1
aux(150) =< V
aux(151) =< V-2*V14+1
aux(152) =< V-V14
aux(153) =< V/2
aux(154) =< V14
aux(155) =< 2*V14
s(474) =< aux(154)
s(458) =< aux(149)
s(464) =< aux(150)
s(485) =< aux(154)
s(486) =< aux(154)
s(485) =< s(480)
s(486) =< s(480)
s(486) =< aux(155)+s(478)
s(487) =< aux(154)
s(487) =< s(486)*aux(154)
s(488) =< s(487)
s(490) =< aux(154)
s(490) =< aux(155)
s(491) =< s(490)
s(503) =< aux(150)
s(504) =< aux(150)
s(503) =< aux(153)
s(504) =< aux(153)
s(503) =< aux(154)
s(504) =< aux(155)+aux(151)
s(504) =< aux(154)+aux(152)
s(505) =< aux(154)+aux(152)
s(505) =< s(504)*aux(154)
s(506) =< s(505)
s(508) =< aux(150)
s(508) =< aux(154)
s(508) =< aux(155)
s(509) =< s(508)
s(510) =< aux(152)
s(460) =< aux(150)
s(461) =< aux(150)
s(460) =< aux(153)
s(461) =< aux(153)
s(460) =< aux(149)
s(461) =< s(457)+aux(150)
s(461) =< aux(149)+aux(150)
s(462) =< aux(149)+aux(150)
s(462) =< s(461)*aux(149)
s(463) =< s(462)
s(465) =< aux(150)
s(465) =< aux(149)
s(465) =< s(457)
s(466) =< s(465)

  with precondition: [V1=2,V>=1,V14>=1] 

* Chain [37]: 1*s(555)+3
  Such that:s(555) =< V14

  with precondition: [V1=2,V=V14,V>=2] 

* Chain [36]: 9*s(556)+10
  Such that:aux(156) =< V14
s(556) =< aux(156)

  with precondition: [V1=2,V=V14+1,V>=3] 

* Chain [35]: 1
  with precondition: [V=0,V1>=0] 

* Chain [34]: 3*s(561)+22*s(562)+5
  Such that:s(559) =< 1
aux(157) =< V1
s(561) =< s(559)
s(562) =< aux(157)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V14): 
-------------------------------------
* Chain [42] with precondition: [V1>=0,V>=0] 
    - Upper bound: 230*V1+266*V+19 
    - Complexity: n 
* Chain [41] with precondition: [V1=1,V>=1,V14>=1] 
    - Upper bound: 243*V+300*V14+143+nat(-V+V14)*42 
    - Complexity: n 
* Chain [40] with precondition: [V1=1,V>=2] 
    - Upper bound: 8*V+10+nat(V14)*9 
    - Complexity: n 
* Chain [39] with precondition: [V1=1,V=V14,V>=2] 
    - Upper bound: V14+3 
    - Complexity: n 
* Chain [38] with precondition: [V1=2,V>=1,V14>=1] 
    - Upper bound: 300*V+243*V14+143+nat(V-V14)*42 
    - Complexity: n 
* Chain [37] with precondition: [V1=2,V=V14,V>=2] 
    - Upper bound: V14+3 
    - Complexity: n 
* Chain [36] with precondition: [V1=2,V=V14+1,V>=3] 
    - Upper bound: 9*V14+10 
    - Complexity: n 
* Chain [35] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [34] with precondition: [V=1,V1>=1] 
    - Upper bound: 22*V1+8 
    - Complexity: n 

### Maximum cost of start(V1,V,V14): max([230*V1+266*V+18,235*V+133+nat(V14)*234+max([nat(-V+V14)*42+nat(V14)*57,nat(V-V14)*42+57*V])+8*V+ (nat(V14)*8+7)+ (nat(V14)+2)])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 126 ms.
   - Backward Invariants 76 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 153 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 571 ms.
   - Equation cost structures 185 ms.
   - Phase cost structures 65 ms.
   - Chain cost structures 184 ms.
   - Solving cost expressions 13 ms.
* Total analysis performed in 912 ms.

