
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [average/3]
1. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into average/3
1. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations average/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations average/3 
* CE 8: average(V1,V,Out) = 1
     [Out=1,V=2,V1=0] 
* CE 9: average(V1,V,Out) = 1
     [Out=0,V=1,V1=0] 
* CE 10: average(V1,V,Out) = 1
     [Out=0,V=0,V1=0] 
* CE 11: average(V1,V,Out) = 1+ average(W1,X1,Y1)
     [X1>=0,V1>=0,V1+1=W1,Y1+1=Out,X1+3=V] 
* CE 12: average(V1,V,Out) = 1+ average(W1,X1,Out)
     [W1>=0,V>=0,V+1=X1,W1+1=V1] 

### Cost equations --> "Loop" of average/3 
* CEs [11] --> Loop 7 
* CEs [12] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of average/3 
* Loop 7: average(V1,V,Out)->  average(V1',V',Out')
                  [V>=3,V1>=0,Out=Out'+1,V=V'+3,V1+1=V1'] 
* Loop 8: average(V1,V,Out)->  average(V1',V',Out)
                  [V>=0,V1>=1,V+1=V',V1=V1'+1] 
* Loop 9: average(V1,V,Out) [Out=1,V=2,V1=0] 
* Loop 10: average(V1,V,Out) [Out=0,V=1,V1=0] 
* Loop 11: average(V1,V,Out) [Out=0,V=0,V1=0] 

### Ranking functions of CR average(V1,V,Out) 
* RF of phase [7,8]: [2*V1+V-1]

#### Partial ranking functions of CR average(V1,V,Out) 
* Partial RF of phase [7,8]:
  - RF of loop [7:1]:
    V/3-2/3 depends on loops [8:1] 
  - RF of loop [8:1]:
    V1 depends on loops [7:1] 


### Resulting Chains:average(V1,V,Out) 
* [[7,8],10]
* [[7,8],9]
* [11]
* [10]
* [9]


### Merging Chains  average/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[9]] --> 3 
* [[9,[7,8]]] --> 4 
* [[10,[7,8]]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [13,14,15,16,17] 


#### Refined cost equations start/2 
* CE 13: start(V1,V) = 0+ average(W1,X1,Y1):1
     [Y1=0,X1=0,W1=0,V=0,V1=0] 
* CE 14: start(V1,V) = 0+ average(W1,X1,Y1):2
     [Y1=0,X1=1,W1=0,V=1,V1=0] 
* CE 15: start(V1,V) = 0+ average(W1,X1,Y1):3
     [Y1=1,X1=2,W1=0,V=2,V1=0] 
* CE 16: start(V1,V) = 0+ average(V1,W1,X1):4
     [V1+X1>=2,2*X1>=V1,X1>=1,V1>=0,2*X1=V1+W1,2*X1=V1+V] 
* CE 17: start(V1,V) = 0+ average(V1,W1,X1):5
     [V1+X1>=1,2*X1+1>=V1,V1>=0,2*X1+1=V1+W1,2*X1+1=V1+V] 

### Cost equations --> "Loop" of start/2 
* CEs [16,17] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [13] --> Loop 15 

#### Loops of start/2 
* Loop 12: start(V1,V) [V+3*V1>=3,V>=0,V1>=0] 
* Loop 13: start(V1,V) [V=2,V1=0] 
* Loop 14: start(V1,V) [V=1,V1=0] 
* Loop 15: start(V1,V) [V=0,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [15]
* [14]
* [13]
* [12]


### Merging Chains  start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 
* [[12]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [7,8] 

 * loop 7:average(V1,V,Out) -> [average(V1',V',Out')] 
1
 * loop 8:average(V1,V,Out) -> [average(V1',V',Out')] 
1
#### Cost of phase [7,8]:average(V1,V,Out) -> [average(V1',V',Out')] 
2*it(7)+0
  Such that:aux(5) =< 2*V1+V
aux(6) =< 2*V1+V-2*V1'-V'
it(7) =< aux(5)
it(7) =< aux(6)

#### Cost of phase [7,8]:average(V1,V,Out) -> [average(V1',V',Out')] 
2*it(7)+0
  Such that:aux(5) =< 2*V1+V
aux(6) =< 2*V1+V-2*V1'-V'
it(7) =< aux(5)
it(7) =< aux(6)

#### Cost of chains of average(V1,V,Out):
* Chain [[7,8],10]: 2*it(7)+1
  Such that:aux(6) =< V1+2*Out
aux(5) =< V1+2*Out+1
it(7) =< aux(5)
it(7) =< aux(6)

  with precondition: [V+V1=2*Out+1,V1>=0,V>=0,V+3*V1>=3] 

* Chain [[7,8],9]: 2*it(7)+1
  Such that:aux(7) =< -V+4*Out
it(7) =< aux(7)

  with precondition: [V+V1=2*Out,V1>=0,V>=0,V+V1>=2,V+3*V1>=4] 

* Chain [11]: 1
  with precondition: [V1=0,V=0,Out=0] 

* Chain [10]: 1
  with precondition: [V1=0,V=1,Out=0] 

* Chain [9]: 1
  with precondition: [V1=0,V=2,Out=1] 


#### Cost of chains of start(V1,V):
* Chain [15]: 1
  with precondition: [V1=0,V=0] 

* Chain [14]: 1
  with precondition: [V1=0,V=1] 

* Chain [13]: 1
  with precondition: [V1=0,V=2] 

* Chain [12]: 4*s(2)+1
  Such that:aux(9) =< 2*V1+V
s(2) =< aux(9)

  with precondition: [V1>=0,V>=0,V+3*V1>=3] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [15] with precondition: [V1=0,V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [V1=0,V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V1=0,V=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V1>=0,V>=0,V+3*V1>=3] 
    - Upper bound: 8*V1+4*V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 8*V1+4*V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 21 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 83 ms.

