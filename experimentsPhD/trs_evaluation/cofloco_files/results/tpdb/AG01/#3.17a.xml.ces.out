
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive  : [plus/3]
2. non_recursive  : [pred/2]
3. recursive  : [sum/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into pred/2
3. SCC is partially evaluated into sum/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations app/3 
* CE 17: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 18: app(A,B,A) = 1
     [A>=0,B=0] 
* CE 19: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 20: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [20] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of app/3 
* Loop 13: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 14: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 15: app(A,B,A) [A>=0,B=0] 
* Loop 16: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [13]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[13],16]
* [[13],15]
* [[13],14]
* [16]
* [15]
* [14]


### Merging Chains  app/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15],[15,[13]]] --> 2 
* [[14]] --> 3 
* [[16,[13]]] --> 4 
* [[14,[13]]] --> 5 


### Specialization of cost equations plus/3 
* CE 11 is refined into CE [21] 
* CE 10 is refined into CE [22] 


#### Refined cost equations plus/3 
* CE 21: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 22: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of plus/3 
* Loop 17: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 18: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [17]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[17],18]
* [18]


### Merging Chains  plus/3 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations pred/2 
* CE 15 is refined into CE [23] 
* CE 16 is refined into CE [24] 


#### Refined cost equations pred/2 
* CE 23: pred(V1,Out) = 1
     [V1>=2,V1=Out+1] 
* CE 24: pred(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of pred/2 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of pred/2 
* Loop 19: pred(V1,Out) [V1>=2,V1=Out+1] 
* Loop 20: pred(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR pred(V1,Out) 

#### Partial ranking functions of CR pred(V1,Out) 


### Resulting Chains:pred(V1,Out) 
* [20]
* [19]


### Merging Chains  pred/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations sum/2 
* CE 12 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 13 is refined into CE [27,28] 


#### Refined cost equations sum/2 
* CE 25: sum(A,A) = 1
     [A>=1] 
* CE 26: sum(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 27: sum(V1,Out) = 1+ plus(W1,X1,X1):1+ sum(Y1,Out)
     [Y1>=X1+1,X1>=0,Y1+1=V1,W1=0] 
* CE 28: sum(V1,Out) = 1+ plus(W1,X1,Y1):2+ sum(Z1,Out)
     [Z1>=Y1+1,Y1>=W1,W1>=1,Y1=W1+X1,Z1+1=V1] 

### Cost equations --> "Loop" of sum/2 
* CEs [27,28] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 

#### Loops of sum/2 
* Loop 21: sum(V1,Out)->  sum(V1',Out)
                  [V1>=2,V1=V1'+1] 
* Loop 22: sum(A,A) [A>=1] 
* Loop 23: sum(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR sum(V1,Out) 
* RF of phase [21]: [V1-1]

#### Partial ranking functions of CR sum(V1,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V1-1


### Resulting Chains:sum(V1,Out) 
* [[21],23]
* [[21],22]
* [23]
* [22]


### Merging Chains  sum/2 into  External patterns of execution 
* [[23],[23,[21]]] --> 1 
* [[22]] --> 2 
* [[22,[21]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [29,30,31,32,33] 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36,37,38] 
* CE 5 is refined into CE [39,40] 


#### Refined cost equations start/2 
* CE 29: start(V1,V) = 0+ app(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 30: start(V1,V) = 0+ app(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 31: start(V1,V) = 0+ app(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ app(V1,W1,X1):4
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 33: start(V1,V) = 0+ app(V1,V,W1):5
     [V1>=W1,W1>=1,V>=0] 
* CE 34: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 35: start(V1,V) = 0+ plus(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 36: start(V1,V) = 0+ sum(V1,W1):1
     [V1>=0,W1=0] 
* CE 37: start(V1,V) = 0+ sum(V1,V1):2
     [V1>=1] 
* CE 38: start(V1,V) = 0+ sum(V1,W1):3
     [V1>=W1+1,W1>=1] 
* CE 39: start(V1,V) = 0+ pred(V1,W1):1
     [V1>=0,W1=0] 
* CE 40: start(V1,V) = 0+ pred(W1,X1):2
     [X1>=1,X1+1=W1,X1+1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [30] --> Loop 24 
* CEs [29,31,32,33,34,35,36,37,38,39,40] --> Loop 25 

#### Loops of start/2 
* Loop 24: start(V1,V) [V1>=0,V=0] 
* Loop 25: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [25]
* [24]


### Merging Chains  start/2 into  External patterns of execution 
* [[24],[25]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [13]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of phase [13]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of phase [13]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[13],16]: 1*it(13)+1
  Such that:it(13) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< Out

  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [16]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [15]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [17] 

 * loop 17:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [17]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[17],18]: 1*it(17)+1
  Such that:it(17) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [18]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of chains of pred(V1,Out):
* Chain [20]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [19]: 1
  with precondition: [V1=Out+1,V1>=2] 


#### Cost of loops [21] 

 * loop 21:sum(V1,Out) -> [sum(V1',Out')] 
1*s(3)+2
  Such that:s(3) =< V1'

#### Cost of phase [21]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(21)+1*s(4)+0
  Such that:it(21) =< V1-V1'
aux(2) =< V1
it(21) =< aux(2)
s(4) =< it(21)*aux(2)

#### Cost of phase [21]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(21)+1*s(4)+0
  Such that:it(21) =< V1-V1'
aux(2) =< V1
it(21) =< aux(2)
s(4) =< it(21)*aux(2)

#### Cost of chains of sum(V1,Out):
* Chain [[21],23]: 2*it(21)+1*s(4)+0
  Such that:aux(3) =< V1
it(21) =< aux(3)
s(4) =< it(21)*aux(3)

  with precondition: [Out=0,V1>=2] 

* Chain [[21],22]: 2*it(21)+1*s(4)+1
  Such that:aux(2) =< V1
it(21) =< V1-Out
it(21) =< aux(2)
s(4) =< it(21)*aux(2)

  with precondition: [Out>=1,V1>=Out+1] 

* Chain [23]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [22]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [25]: 7*s(8)+2*s(13)+1
  Such that:aux(5) =< V1
s(8) =< aux(5)
s(13) =< s(8)*aux(5)

  with precondition: [V1>=0] 

* Chain [24]: 1*s(17)+1
  Such that:s(17) =< V1

  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [25] with precondition: [V1>=0] 
    - Upper bound: 7*V1+1+2*V1*V1 
    - Complexity: n^2 
* Chain [24] with precondition: [V=0,V1>=0] 
    - Upper bound: V1+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 2*V1*V1+6*V1+ (V1+1) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 36 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 131 ms.

