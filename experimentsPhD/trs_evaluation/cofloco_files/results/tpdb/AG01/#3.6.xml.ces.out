
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. non_recursive  : [pred/2]
2. recursive [non_tail] : [minus/3]
3. recursive  : [fun/4,gcd/3]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into pred/2
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into gcd/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 21 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 18 is refined into CE [26] 
* CE 20 is refined into CE [27] 


#### Refined cost equations le/3 
* CE 24: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 25: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 26: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 27: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [27] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of le/3 
* Loop 17: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 18: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 19: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 20: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [17]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[17],20]
* [[17],19]
* [[17],18]
* [20]
* [19]
* [18]


### Merging Chains  le/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18],[18,[17]]] --> 3 
* [[19,[17]]] --> 4 
* [[20,[17]]] --> 5 


### Specialization of cost equations pred/2 
* CE 22 is refined into CE [28] 
* CE 23 is refined into CE [29] 


#### Refined cost equations pred/2 
* CE 28: pred(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 29: pred(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of pred/2 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of pred/2 
* Loop 21: pred(V1,Out) [V1>=1,V1=Out+1] 
* Loop 22: pred(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR pred(V1,Out) 

#### Partial ranking functions of CR pred(V1,Out) 


### Resulting Chains:pred(V1,Out) 
* [22]
* [21]


### Merging Chains  pred/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations minus/3 
* CE 11 is refined into CE [30] 
* CE 9 is refined into CE [31] 
* CE 10 is refined into CE [32,33] 


#### Refined cost equations minus/3 
* CE 30: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 31: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 32: minus(V1,V,Out) = 1+ minus(V1,W1,X1)+ pred(X1,Y1):1
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 33: minus(V1,V,Out) = 1+ minus(V1,W1,X1)+ pred(Y1,Out):2
     [W1>=0,Out>=0,V1>=0,Out+1=X1,Out+1=Y1,W1+1=V] 

### Cost equations --> "Loop" of minus/3 
* CEs [33] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [31] --> Loop 26 

#### Loops of minus/3 
* Loop 23: minus(V1,V,Out)->  minus(V1,V',Out')
                  [Out>=0,V>=1,V1>=0,Out+1=Out',V=V'+1] 
* Loop 24: minus(V1,V,Out)->  minus(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 25: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 26: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [23]: [V]
* RF of phase [24]: [V]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V


### Resulting Chains:minus(V1,V,Out) 
* [[24],[23],26]
* [[24],26]
* [[24],25]
* [[23],26]
* [26]
* [25]


### Merging Chains  minus/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25],[25,[24]],[26,[24]],[26,[23],[24]]] --> 2 
* [[26,[23]]] --> 3 


### Specialization of cost equations gcd/3 
* CE 12 is refined into CE [34,35,36,37,38] 
* CE 17 is refined into CE [39] 
* CE 16 is refined into CE [40] 
* CE 15 is refined into CE [41] 
* CE 14 is refined into CE [42,43,44,45] 
* CE 13 is refined into CE [46,47,48,49] 


#### Refined cost equations gcd/3 
* CE 34: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=2,W1=0,Out=0,V=1] 
* CE 35: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):2
     [W1>=1,W1+1=V,Y1=1,X1=0,Out=0,V1=1] 
* CE 36: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):3
     [X1>=0,W1>=0,W1+1=V,X1+1=V1,Y1=0,Out=0] 
* CE 37: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):4
     [W1>=X1+1,X1>=1,W1+1=V,X1+1=V1,Y1=1,Out=0] 
* CE 38: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):5
     [X1>=W1,W1>=1,W1+1=V,X1+1=V1,Y1=2,Out=0] 
* CE 39: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 40: gcd(A,B,A) = 1
     [A>=1,B=0] 
* CE 41: gcd(A,B,B) = 1
     [B>=0,A=0] 
* CE 42: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,X1):1+ gcd(X1,A2,Out)
     [X1>=0,X1+1=V1,A2=1,Z1=0,Y1=2,W1=0,V=1] 
* CE 43: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ gcd(B2,C2,Out)
     [X1>=0,X1+1=V1,C2=1,B2=0,A2=0,Z1=0,Y1=2,W1=0,V=1] 
* CE 44: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(X1,W1,Z1):2+ gcd(A2,B2,Out)
     [X1>=W1,W1>=1,W1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=2] 
* CE 45: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(Z1,W1,A2):3+ gcd(A2,B2,Out)
     [A2>=0,W1>=1,W1+A2=Z1,W1+A2=X1,W1+A2+1=V1,W1+1=B2,W1+1=V,Y1=2] 
* CE 46: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,W1):1+ gcd(W1,A2,Out)
     [W1>=1,W1+1=V,A2=1,Z1=0,Y1=1,X1=0,V1=1] 
* CE 47: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,A2):2+ gcd(B2,C2,Out)
     [W1>=1,W1+1=V,C2=1,B2=0,A2=0,Z1=0,Y1=1,X1=0,V1=1] 
* CE 48: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(W1,X1,Z1):2+ gcd(A2,B2,Out)
     [W1>=X1+1,X1>=1,X1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=1] 
* CE 49: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(Z1,X1,A2):3+ gcd(A2,B2,Out)
     [A2>=1,X1>=1,X1+A2=Z1,X1+A2=W1,X1+A2+1=V,X1+1=B2,X1+1=V1,Y1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [49] --> Loop 27 
* CEs [45] --> Loop 28 
* CEs [48] --> Loop 29 
* CEs [44] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [43] --> Loop 32 
* CEs [46] --> Loop 33 
* CEs [47] --> Loop 34 
* CEs [34] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [35,36,37,38,39] --> Loop 37 
* CEs [41] --> Loop 38 

#### Loops of gcd/3 
* Loop 27: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,V1+A'=V] 
* Loop 28: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1=V+V1'] 
* Loop 29: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,A'=0] 
* Loop 30: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1'=0] 
* Loop 31: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 32: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 33: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V=V1'+1,V'=1,V1=1] 
* Loop 34: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V'=1,V1'=0,V1=1] 
* Loop 35: gcd(V1,V,Out) [V1>=1,Out=0,V=1] 
* Loop 36: gcd(A,B,A) [A>=1,B=0] 
* Loop 37: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 38: gcd(A,B,B) [B>=0,A=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [27,28]: [V1+V-3]
* RF of phase [31]: [V1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [27,28]:
  - RF of loop [27:1]:
    V-2
    V1/2+V/2-2
  - RF of loop [28:1]:
    V1-1 depends on loops [27:1] 
    V1-V+1 depends on loops [27:1] 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V1


### Resulting Chains:gcd(V1,V,Out) 
* [[31],38]
* [[31],37]
* [[31],35]
* [[31],32,38]
* [[31],32,37]
* [[27,28],38]
* [[27,28],37]
* [[27,28],34,38]
* [[27,28],34,37]
* [[27,28],33,[31],38]
* [[27,28],33,[31],37]
* [[27,28],33,[31],35]
* [[27,28],33,[31],32,38]
* [[27,28],33,[31],32,37]
* [[27,28],33,37]
* [[27,28],33,35]
* [[27,28],33,32,38]
* [[27,28],33,32,37]
* [[27,28],30,38]
* [[27,28],30,37]
* [[27,28],29,38]
* [[27,28],29,37]
* [38]
* [37]
* [36]
* [35]
* [34,38]
* [34,37]
* [33,[31],38]
* [33,[31],37]
* [33,[31],35]
* [33,[31],32,38]
* [33,[31],32,37]
* [33,37]
* [33,35]
* [33,32,38]
* [33,32,37]
* [32,38]
* [32,37]
* [30,38]
* [30,37]
* [29,38]
* [29,37]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37,29],[37,30],[37,32,33],[35,33],[37,33],[37,32,[31],33],[35,[31],33],[37,[31],33],[37,34],[37],[37,29,[27,28]],[37,30,[27,28]],[37,32,33,[27,28]],[35,33,[27,28]],[37,33,[27,28]],[37,32,[31],33,[27,28]],[35,[31],33,[27,28]],[37,[31],33,[27,28]],[37,34,[27,28]],[37,[27,28]]] --> 2 
* [[38,32,33],[38,32,[31],33],[38,[31],33],[38,34]] --> 3 
* [[36]] --> 4 
* [[37,32],[35],[37,32,[31]],[35,[31]],[37,[31]]] --> 5 
* [[38,32],[38,32,[31]],[38,[31]]] --> 6 
* [[38,32,33,[27,28]],[38,32,[31],33,[27,28]],[38,[31],33,[27,28]],[38,34,[27,28]]] --> 7 
* [[38,29],[38,29,[27,28]],[38,30,[27,28]],[38,[27,28]]] --> 8 
* [[38,30]] --> 9 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [50,51,52,53,54,55,56,57,58,59,60,61] 
* CE 2 is refined into CE [62] 
* CE 3 is refined into CE [63,64,65,66,67,68,69,70,71,72,73,74] 
* CE 5 is refined into CE [75,76,77,78,79] 
* CE 6 is refined into CE [80,81] 
* CE 7 is refined into CE [82,83,84] 
* CE 8 is refined into CE [85,86,87,88,89,90,91,92,93] 


#### Refined cost equations start/3 
* CE 50: start(V1,V,V15) = 1+ minus(W15,X15,Y15):1+ gcd(Z15,A16,B16):1
     [B16=1,A16=1,Z15=0,Y15=0,X15=0,W15=0,V15=1,V=1,V1=2] 
* CE 51: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):2
     [W15>=0,W15+1=V,Z15=0,Y15=1,X15=0,V15=1,V1=2] 
* CE 52: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):5
     [W15>=1,W15+1=V,Z15=0,Y15=1,X15=0,V15=1,V1=2] 
* CE 53: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):6
     [W15>=1,W15+1=V,Z15=1,Y15=1,X15=0,V15=1,V1=2] 
* CE 54: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,V15,V15):1
     [V15>=1,W15>=0,V15=X15+1,W15+1=V,Z15=0,Y15=0,V1=2] 
* CE 55: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,V15,A16):2
     [V15>=1,W15>=0,V15=X15+1,W15+1=V,A16=0,Z15=0,Y15=0,V1=2] 
* CE 56: start(A,B,B) = 1+ minus(C,D,E):3+ gcd(F,B,B):1
     [B>=2,B=D+1,B=C+1,F=0,E=0,A=2] 
* CE 57: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V15,Z15):2
     [V15>=2,Y15>=0,V15+Y15=W15+1,V15+Y15=V,V15=X15+1,Z15=0,V1=2] 
* CE 58: start(V1,V,V15) = 1+ minus(V15,W15,X15):3+ gcd(Y15,V15,Z15):3
     [V15>=2,V15=W15+1,V15+1=V,Z15=1,Y15=1,X15=1,V1=2] 
* CE 59: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V15,Z15):7
     [V15+Y15>=5,V15>=2,Y15>=2,V15+Y15=W15+1,V15+Y15=V,V15=X15+1,Z15=1,V1=2] 
* CE 60: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V15,Z15):8
     [V15>=Z15,Y15>=Z15,Z15>=2,V15+Y15=W15+1,V15+Y15=V,V15=X15+1,V1=2] 
* CE 61: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V15,V15):9
     [Y15>=V15,V15>=2,V15+Y15=W15+1,V15+Y15=V,V15=X15+1,V1=2] 
* CE 62: start(V1,V,V15) = 0
     [V15>=0,V>=0,V1>=0] 
* CE 63: start(V1,V,V15) = 1+ minus(W15,X15,Y15):1+ gcd(Z15,A16,B16):1
     [B16=1,A16=1,Z15=0,Y15=0,X15=0,W15=0,V15=1,V=1,V1=1] 
* CE 64: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):2
     [W15>=0,W15+1=V15,Z15=0,Y15=1,X15=0,V=1,V1=1] 
* CE 65: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):5
     [W15>=1,W15+1=V15,Z15=0,Y15=1,X15=0,V=1,V1=1] 
* CE 66: start(V1,V,V15) = 1+ minus(W15,X15,W15):1+ gcd(W15,Y15,Z15):6
     [W15>=1,W15+1=V15,Z15=1,Y15=1,X15=0,V=1,V1=1] 
* CE 67: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,V,V):1
     [V>=1,W15>=0,V=X15+1,W15+1=V15,Z15=0,Y15=0,V1=1] 
* CE 68: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,V,A16):2
     [V>=1,W15>=0,V=X15+1,W15+1=V15,A16=0,Z15=0,Y15=0,V1=1] 
* CE 69: start(A,B,B) = 1+ minus(C,D,E):3+ gcd(F,B,B):1
     [B>=2,B=D+1,B=C+1,F=0,E=0,A=1] 
* CE 70: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V,Z15):2
     [V>=2,Y15>=0,V+Y15=W15+1,V+Y15=V15,V=X15+1,Z15=0,V1=1] 
* CE 71: start(V1,V,V15) = 1+ minus(V,W15,X15):3+ gcd(Y15,V,Z15):3
     [V>=2,V=W15+1,V+1=V15,Z15=1,Y15=1,X15=1,V1=1] 
* CE 72: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V,Z15):7
     [V+Y15>=5,V>=2,Y15>=2,V+Y15=W15+1,V+Y15=V15,V=X15+1,Z15=1,V1=1] 
* CE 73: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V,Z15):8
     [V>=Z15,Y15>=Z15,Z15>=2,V+Y15=W15+1,V+Y15=V15,V=X15+1,V1=1] 
* CE 74: start(V1,V,V15) = 1+ minus(W15,X15,Y15):3+ gcd(Y15,V,V):9
     [Y15>=V,V>=2,V+Y15=W15+1,V+Y15=V15,V=X15+1,V1=1] 
* CE 75: start(V1,V,V15) = 0+ le(W15,V,X15):1
     [V>=0,X15=2,W15=0,V1=0] 
* CE 76: start(V1,V,V15) = 0+ le(V1,W15,X15):2
     [V1>=1,X15=1,W15=0,V=0] 
* CE 77: start(V1,V,V15) = 0+ le(V1,V,W15):3
     [V>=0,V1>=0,W15=0] 
* CE 78: start(V1,V,V15) = 0+ le(V1,V,W15):4
     [V1>=V+1,V>=1,W15=1] 
* CE 79: start(V1,V,V15) = 0+ le(V1,V,W15):5
     [V>=V1,V1>=1,W15=2] 
* CE 80: start(V1,V,V15) = 0+ pred(V1,W15):1
     [V1>=0,W15=0] 
* CE 81: start(V1,V,V15) = 0+ pred(W15,X15):2
     [X15>=0,X15+1=W15,X15+1=V1] 
* CE 82: start(V1,V,V15) = 0+ minus(V1,W15,V1):1
     [V1>=0,W15=0,V=0] 
* CE 83: start(V1,V,V15) = 0+ minus(V1,V,W15):2
     [V>=0,V1>=0,W15=0] 
* CE 84: start(V1,V,V15) = 0+ minus(W15,V,X15):3
     [X15>=0,V>=1,V+X15=W15,V+X15=V1] 
* CE 85: start(V1,V,V15) = 0+ gcd(W15,V,V):1
     [V>=0,W15=0,V1=0] 
* CE 86: start(V1,V,V15) = 0+ gcd(V1,V,W15):2
     [V>=0,V1>=0,W15=0] 
* CE 87: start(V1,V,V15) = 0+ gcd(W15,V,X15):3
     [V>=2,X15=1,W15=1,V1=1] 
* CE 88: start(V1,V,V15) = 0+ gcd(V1,W15,V1):4
     [V1>=1,W15=0,V=0] 
* CE 89: start(V1,V,V15) = 0+ gcd(V1,W15,X15):5
     [V1>=1,X15=0,W15=1,V=1] 
* CE 90: start(V1,V,V15) = 0+ gcd(V1,W15,X15):6
     [V1>=1,X15=1,W15=1,V=1] 
* CE 91: start(V1,V,V15) = 0+ gcd(V1,V,W15):7
     [V1+V>=5,V>=2,V1>=2,W15=1] 
* CE 92: start(V1,V,V15) = 0+ gcd(V1,V,W15):8
     [V>=W15,V1>=W15,W15>=2] 
* CE 93: start(V1,V,V15) = 0+ gcd(V1,V,V):9
     [V1>=V,V>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [89,90] --> Loop 39 
* CEs [76,82,88] --> Loop 40 
* CEs [58] --> Loop 41 
* CEs [56] --> Loop 42 
* CEs [50,51,52,53,54,55,57,59,60,61] --> Loop 43 
* CEs [69] --> Loop 44 
* CEs [71,87] --> Loop 45 
* CEs [63,64,65,66,67,68,70,72,73,74] --> Loop 46 
* CEs [62,75,77,78,79,80,81,83,84,85,86,91,92,93] --> Loop 47 

#### Loops of start/3 
* Loop 39: start(V1,V,V15) [V1>=1,V=1] 
* Loop 40: start(V1,V,V15) [V1>=0,V=0] 
* Loop 41: start(V1,V,V15) [V>=3,V=V15+1,V1=2] 
* Loop 42: start(A,B,B) [B>=2,A=2] 
* Loop 43: start(V1,V,V15) [V15>=1,V>=1,V1=2] 
* Loop 44: start(A,B,B) [B>=2,A=1] 
* Loop 45: start(V1,V,V15) [V>=2,V1=1] 
* Loop 46: start(V1,V,V15) [V15>=1,V>=1,V1=1] 
* Loop 47: start(V1,V,V15) [V1>=0] 

### Ranking functions of CR start(V1,V,V15) 

#### Partial ranking functions of CR start(V1,V,V15) 


### Resulting Chains:start(V1,V,V15) 
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]


### Merging Chains  start/3 into  External patterns of execution 
* [[44],[46],[47]] --> 1 
* [[45]] --> 2 
* [[42],[43]] --> 3 
* [[41]] --> 4 
* [[40]] --> 5 
* [[39]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [17]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'
it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'
it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'
it(17) =< V
it(17) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[17],20]: 1*it(17)+1
  Such that:it(17) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [20]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [19]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [18]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of pred(V1,Out):
* Chain [22]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [21]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [23] 

 * loop 23:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2
#### Cost of phase [23]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'

#### Cost of loops [24] 

 * loop 24:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [24]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of phase [24]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of phase [24]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[24],[23],26]: 3*it(23)+1
  Such that:aux(1) =< V
it(23) =< aux(1)

  with precondition: [Out=0,V1>=1,V>=2] 

* Chain [[24],26]: 1*it(24)+1
  Such that:it(24) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[23],26]: 2*it(23)+1
  Such that:it(23) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [26]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [25]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [31] 

 * loop 31:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4
#### Cost of phase [31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of phase [31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of phase [31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of phase [31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of phase [31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of loops [27,28] 

 * loop 27:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(14)+4
  Such that:s(13) =< V'
s(14) =< s(13)

 * loop 28:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(18)+4
  Such that:s(17) =< V'
s(18) =< s(17)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [27,28]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(27)+4*it(28)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(9) =< 2*V-2*V'
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[31],38]: 4*it(31)+1
  Such that:it(31) =< V1

  with precondition: [V=1,Out=1,V1>=1] 

* Chain [[31],37]: 6*it(31)+1*s(8)+2
  Such that:s(8) =< 1
aux(4) =< V1
it(31) =< aux(4)

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [[31],35]: 4*it(31)+2
  Such that:it(31) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[31],32,38]: 4*it(31)+5
  Such that:it(31) =< V1

  with precondition: [V=1,Out=1,V1>=2] 

* Chain [[31],32,37]: 4*it(31)+1*s(8)+6
  Such that:s(8) =< 1
it(31) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[27,28],38]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+1
  Such that:aux(10) =< V1-V+1
aux(22) =< V1+V
aux(23) =< V1+V-Out
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-Out/2
aux(27) =< V
aux(28) =< V-Out
aux(9) =< 2*V-2*Out
aux(29) =< V1
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(29)
s(22) =< aux(7)+aux(29)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

  with precondition: [Out>=2,V1>=Out,V>=Out] 

* Chain [[27,28],37]: 4*it(27)+4*it(28)+6*s(6)+3*s(21)+2
  Such that:aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(9) =< 2*V
aux(30) =< V1
aux(31) =< V1+V
aux(32) =< V
s(6) =< aux(31)
it(27) =< aux(31)
it(28) =< aux(31)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(32)
it(28) =< aux(9)+aux(10)
it(28) =< aux(32)+aux(30)
s(22) =< aux(32)+aux(30)
s(22) =< it(28)*aux(32)
s(21) =< s(22)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[27,28],34,38]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+5
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(33) =< V1
aux(34) =< V1+V
aux(35) =< V1/2+V/2
aux(36) =< V
it(27) =< aux(34)
it(28) =< aux(34)
it(27) =< aux(35)
it(28) =< aux(35)
it(27) =< aux(36)
it(28) =< aux(9)+aux(10)
it(28) =< aux(36)+aux(33)
s(22) =< aux(36)+aux(33)
s(22) =< it(28)*aux(36)
s(21) =< s(22)
s(19) =< aux(34)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],34,37]: 4*it(27)+4*it(28)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(9) =< 2*V
aux(37) =< V1
aux(38) =< V1+V
aux(39) =< V1/2+V/2
aux(40) =< V
it(27) =< aux(38)
it(28) =< aux(38)
it(27) =< aux(39)
it(28) =< aux(39)
it(27) =< aux(40)
it(28) =< aux(9)+aux(10)
it(28) =< aux(40)+aux(37)
s(22) =< aux(40)+aux(37)
s(22) =< it(28)*aux(40)
s(21) =< s(22)
s(19) =< aux(38)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,[31],38]: 4*it(27)+4*it(28)+4*it(31)+3*s(19)+3*s(21)+5
  Such that:aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(9) =< 2*V
aux(41) =< V1
aux(42) =< V1+V
aux(43) =< V
it(31) =< aux(43)
it(27) =< aux(42)
it(28) =< aux(42)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(43)
it(28) =< aux(9)+aux(10)
it(28) =< aux(43)+aux(41)
s(22) =< aux(43)+aux(41)
s(22) =< it(28)*aux(43)
s(21) =< s(22)
s(19) =< aux(42)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,[31],37]: 4*it(27)+4*it(28)+6*it(31)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(44) =< V1
aux(45) =< V1+V
aux(46) =< V
aux(47) =< 2*V
aux(4) =< aux(45)
aux(4) =< aux(46)
aux(4) =< aux(47)
it(31) =< aux(4)
it(27) =< aux(45)
it(28) =< aux(45)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(46)
it(28) =< aux(47)+aux(10)
it(28) =< aux(46)+aux(44)
s(22) =< aux(46)+aux(44)
s(22) =< it(28)*aux(46)
s(21) =< s(22)
s(19) =< aux(45)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,[31],35]: 4*it(27)+4*it(28)+4*it(31)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(9) =< 2*V
aux(48) =< V1
aux(49) =< V1+V
aux(50) =< V
it(31) =< aux(50)
it(27) =< aux(49)
it(28) =< aux(49)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(50)
it(28) =< aux(9)+aux(10)
it(28) =< aux(50)+aux(48)
s(22) =< aux(50)+aux(48)
s(22) =< it(28)*aux(50)
s(21) =< s(22)
s(19) =< aux(49)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[27,28],33,[31],32,38]: 4*it(27)+4*it(28)+4*it(31)+3*s(19)+3*s(21)+9
  Such that:aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(9) =< 2*V
aux(51) =< V1
aux(52) =< V1+V
aux(53) =< V
it(31) =< aux(53)
it(27) =< aux(52)
it(28) =< aux(52)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(53)
it(28) =< aux(9)+aux(10)
it(28) =< aux(53)+aux(51)
s(22) =< aux(53)+aux(51)
s(22) =< it(28)*aux(53)
s(21) =< s(22)
s(19) =< aux(52)

  with precondition: [Out=1,V1>=3,V>=3,V+V1>=7] 

* Chain [[27,28],33,[31],32,37]: 4*it(27)+4*it(28)+4*it(31)+1*s(8)+3*s(19)+3*s(21)+10
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(9) =< 2*V
aux(54) =< V1
aux(55) =< V1+V
aux(56) =< V
it(31) =< aux(56)
it(27) =< aux(55)
it(28) =< aux(55)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(56)
it(28) =< aux(9)+aux(10)
it(28) =< aux(56)+aux(54)
s(22) =< aux(56)+aux(54)
s(22) =< it(28)*aux(56)
s(21) =< s(22)
s(19) =< aux(55)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[27,28],33,37]: 4*it(27)+4*it(28)+2*s(6)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(57) =< V1
aux(58) =< V1+V
aux(59) =< V
aux(60) =< 2*V
aux(3) =< aux(58)
aux(3) =< aux(59)
aux(3) =< aux(60)
s(6) =< aux(3)
it(27) =< aux(58)
it(28) =< aux(58)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(59)
it(28) =< aux(60)+aux(10)
it(28) =< aux(59)+aux(57)
s(22) =< aux(59)+aux(57)
s(22) =< it(28)*aux(59)
s(21) =< s(22)
s(19) =< aux(58)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,35]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(61) =< V1
aux(62) =< V1+V
aux(63) =< V1/2+V/2
aux(64) =< V
it(27) =< aux(62)
it(28) =< aux(62)
it(27) =< aux(63)
it(28) =< aux(63)
it(27) =< aux(64)
it(28) =< aux(9)+aux(10)
it(28) =< aux(64)+aux(61)
s(22) =< aux(64)+aux(61)
s(22) =< it(28)*aux(64)
s(21) =< s(22)
s(19) =< aux(62)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,32,38]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+9
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(65) =< V1
aux(66) =< V1+V
aux(67) =< V1/2+V/2
aux(68) =< V
it(27) =< aux(66)
it(28) =< aux(66)
it(27) =< aux(67)
it(28) =< aux(67)
it(27) =< aux(68)
it(28) =< aux(9)+aux(10)
it(28) =< aux(68)+aux(65)
s(22) =< aux(68)+aux(65)
s(22) =< it(28)*aux(68)
s(21) =< s(22)
s(19) =< aux(66)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],33,32,37]: 4*it(27)+4*it(28)+1*s(8)+3*s(19)+3*s(21)+10
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(9) =< 2*V
aux(69) =< V1
aux(70) =< V1+V
aux(71) =< V1/2+V/2
aux(72) =< V
it(27) =< aux(70)
it(28) =< aux(70)
it(27) =< aux(71)
it(28) =< aux(71)
it(27) =< aux(72)
it(28) =< aux(9)+aux(10)
it(28) =< aux(72)+aux(69)
s(22) =< aux(72)+aux(69)
s(22) =< it(28)*aux(72)
s(21) =< s(22)
s(19) =< aux(70)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[27,28],30,38]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+6*s(25)+5
  Such that:aux(21) =< V1
aux(10) =< V1-V+1
aux(22) =< V1+V
aux(23) =< V1+V-2*Out
aux(24) =< V1-Out
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-Out
aux(27) =< V
aux(28) =< V-Out
aux(9) =< 2*V-2*Out
aux(73) =< Out
s(25) =< aux(73)
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

  with precondition: [Out>=2,V1>=Out,V>=Out,V+V1>=3*Out] 

* Chain [[27,28],30,37]: 4*it(27)+4*it(28)+7*s(8)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(75) =< V1
aux(76) =< V1+V
aux(77) =< V1/2+V/2
aux(78) =< V
s(8) =< aux(78)
it(27) =< aux(76)
it(28) =< aux(76)
it(27) =< aux(77)
it(28) =< aux(77)
it(27) =< aux(78)
it(28) =< aux(9)+aux(10)
it(28) =< aux(78)+aux(75)
s(22) =< aux(78)+aux(75)
s(22) =< it(28)*aux(78)
s(21) =< s(22)
s(19) =< aux(76)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[27,28],29,38]: 4*it(27)+4*it(28)+3*s(19)+3*s(21)+6*s(28)+5
  Such that:aux(21) =< V1
aux(10) =< V1-V+1
aux(22) =< V1+V
aux(23) =< V1+V-2*Out
aux(24) =< V1-Out
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-Out
aux(27) =< V
aux(28) =< V-Out
aux(9) =< 2*V-2*Out
aux(79) =< Out
s(28) =< aux(79)
it(27) =< aux(22)
it(28) =< aux(22)
s(20) =< aux(22)
it(27) =< aux(23)
it(28) =< aux(23)
s(20) =< aux(23)
it(27) =< aux(25)
it(28) =< aux(25)
it(27) =< aux(26)
it(28) =< aux(26)
aux(7) =< aux(27)
it(27) =< aux(27)
aux(7) =< aux(28)
it(27) =< aux(28)
it(28) =< aux(9)+aux(10)
it(28) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(28) =< aux(7)+aux(24)
s(22) =< it(28)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

  with precondition: [Out>=2,V1>=Out+1,V>=Out+1,V+V1>=3*Out+2] 

* Chain [[27,28],29,37]: 4*it(27)+4*it(28)+7*s(8)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(9) =< 2*V
aux(81) =< V1
aux(82) =< V1+V
aux(83) =< V1/2+V/2
aux(84) =< V
s(8) =< aux(81)
it(27) =< aux(82)
it(28) =< aux(82)
it(27) =< aux(83)
it(28) =< aux(83)
it(27) =< aux(84)
it(28) =< aux(9)+aux(10)
it(28) =< aux(84)+aux(81)
s(22) =< aux(84)+aux(81)
s(22) =< it(28)*aux(84)
s(21) =< s(22)
s(19) =< aux(82)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=8] 

* Chain [38]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [37]: 2*s(6)+1*s(8)+2
  Such that:s(8) =< V
aux(3) =< V1
s(6) =< aux(3)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [36]: 1
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [35]: 2
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [34,38]: 5
  with precondition: [V1=1,Out=1,V>=2] 

* Chain [34,37]: 1*s(8)+6
  Such that:s(8) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [33,[31],38]: 4*it(31)+5
  Such that:it(31) =< V

  with precondition: [V1=1,Out=1,V>=2] 

* Chain [33,[31],37]: 6*it(31)+1*s(8)+6
  Such that:s(8) =< 1
aux(4) =< V
it(31) =< aux(4)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [33,[31],35]: 4*it(31)+6
  Such that:it(31) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [33,[31],32,38]: 4*it(31)+9
  Such that:it(31) =< V

  with precondition: [V1=1,Out=1,V>=3] 

* Chain [33,[31],32,37]: 4*it(31)+1*s(8)+10
  Such that:s(8) =< 1
it(31) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [33,37]: 2*s(6)+1*s(8)+6
  Such that:s(8) =< 1
aux(3) =< V
s(6) =< aux(3)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [33,35]: 6
  with precondition: [V1=1,Out=0,V>=2] 

* Chain [33,32,38]: 9
  with precondition: [V1=1,Out=1,V>=2] 

* Chain [33,32,37]: 1*s(8)+10
  Such that:s(8) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [32,38]: 5
  with precondition: [V=1,Out=1,V1>=1] 

* Chain [32,37]: 1*s(8)+6
  Such that:s(8) =< 1

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [30,38]: 6*s(25)+5
  Such that:aux(73) =< Out
s(25) =< aux(73)

  with precondition: [V=Out,V>=2,V1>=V] 

* Chain [30,37]: 7*s(8)+6
  Such that:aux(74) =< V
s(8) =< aux(74)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [29,38]: 6*s(28)+5
  Such that:aux(79) =< Out
s(28) =< aux(79)

  with precondition: [V1=Out,V1>=2,V>=V1+1] 

* Chain [29,37]: 7*s(8)+6
  Such that:aux(80) =< V1
s(8) =< aux(80)

  with precondition: [Out=0,V1>=2,V>=V1+1] 


#### Cost of chains of start(V1,V,V15):
* Chain [47]: 62*s(285)+17*s(287)+10*s(298)+64*s(300)+64*s(301)+48*s(303)+72*s(304)+8*s(306)+4*s(341)+4*s(342)+3*s(345)+10
  Such that:s(291) =< 1
aux(117) =< V1
aux(118) =< V1-V+1
aux(119) =< V1+V
aux(120) =< V1/2+V/2
aux(121) =< V
aux(122) =< 2*V
s(287) =< aux(117)
s(285) =< aux(121)
s(298) =< s(291)
s(300) =< aux(119)
s(301) =< aux(119)
s(300) =< aux(120)
s(301) =< aux(120)
s(300) =< aux(121)
s(301) =< aux(122)+aux(118)
s(301) =< aux(121)+aux(117)
s(302) =< aux(121)+aux(117)
s(302) =< s(301)*aux(121)
s(303) =< s(302)
s(304) =< aux(119)
s(305) =< aux(119)
s(305) =< aux(121)
s(305) =< aux(122)
s(306) =< s(305)
s(321) =< aux(119)
s(321) =< aux(120)
s(341) =< aux(119)
s(342) =< aux(119)
s(341) =< aux(120)
s(342) =< aux(120)
s(341) =< s(321)
s(342) =< s(321)
s(341) =< aux(121)
s(342) =< aux(122)+aux(118)
s(342) =< aux(121)+aux(117)
s(344) =< aux(121)+aux(117)
s(344) =< s(342)*aux(121)
s(345) =< s(344)

  with precondition: [V1>=0] 

* Chain [46]: 72*s(356)+40*s(358)+40*s(359)+30*s(361)+143*s(362)+8*s(364)+143*s(373)+40*s(385)+40*s(386)+30*s(388)+8*s(391)+68*s(403)+68*s(404)+51*s(406)+8*s(409)+16*s(410)+12
  Such that:s(355) =< 2
s(378) =< -V+1
s(380) =< V/2
aux(133) =< 1
aux(134) =< -2*V+V15+1
aux(135) =< -V+V15
aux(136) =< V
aux(137) =< 2*V
aux(138) =< V15
aux(139) =< V15/2
s(356) =< aux(133)
s(362) =< aux(138)
s(373) =< aux(136)
s(385) =< aux(136)
s(386) =< aux(136)
s(385) =< s(380)
s(386) =< s(380)
s(386) =< aux(137)+s(378)
s(387) =< aux(136)
s(387) =< s(386)*aux(136)
s(388) =< s(387)
s(390) =< aux(136)
s(390) =< aux(137)
s(391) =< s(390)
s(403) =< aux(138)
s(404) =< aux(138)
s(403) =< aux(139)
s(404) =< aux(139)
s(403) =< aux(136)
s(404) =< aux(137)+aux(134)
s(404) =< aux(136)+aux(135)
s(405) =< aux(136)+aux(135)
s(405) =< s(404)*aux(136)
s(406) =< s(405)
s(408) =< aux(138)
s(408) =< aux(136)
s(408) =< aux(137)
s(409) =< s(408)
s(410) =< aux(135)
s(358) =< aux(138)
s(359) =< aux(138)
s(358) =< aux(139)
s(359) =< aux(139)
s(358) =< aux(133)
s(359) =< s(355)+aux(138)
s(359) =< aux(133)+aux(138)
s(360) =< aux(133)+aux(138)
s(360) =< s(359)*aux(133)
s(361) =< s(360)
s(363) =< aux(138)
s(363) =< aux(133)
s(363) =< s(355)
s(364) =< s(363)

  with precondition: [V1=1,V>=1,V15>=1] 

* Chain [45]: 10*s(455)+8*s(459)+11
  Such that:s(458) =< V
aux(140) =< V15
s(459) =< s(458)
s(455) =< aux(140)

  with precondition: [V1=1,V>=2] 

* Chain [44]: 2*s(460)+3
  Such that:s(460) =< V15

  with precondition: [V1=1,V=V15,V>=2] 

* Chain [43]: 72*s(468)+40*s(470)+40*s(471)+30*s(473)+143*s(474)+8*s(476)+143*s(485)+40*s(497)+40*s(498)+30*s(500)+8*s(503)+68*s(515)+68*s(516)+51*s(518)+8*s(521)+16*s(522)+12
  Such that:s(467) =< 2
s(490) =< -V15+1
s(492) =< V15/2
aux(151) =< 1
aux(152) =< V
aux(153) =< V-2*V15+1
aux(154) =< V-V15
aux(155) =< V/2
aux(156) =< V15
aux(157) =< 2*V15
s(468) =< aux(151)
s(474) =< aux(152)
s(485) =< aux(156)
s(497) =< aux(156)
s(498) =< aux(156)
s(497) =< s(492)
s(498) =< s(492)
s(498) =< aux(157)+s(490)
s(499) =< aux(156)
s(499) =< s(498)*aux(156)
s(500) =< s(499)
s(502) =< aux(156)
s(502) =< aux(157)
s(503) =< s(502)
s(515) =< aux(152)
s(516) =< aux(152)
s(515) =< aux(155)
s(516) =< aux(155)
s(515) =< aux(156)
s(516) =< aux(157)+aux(153)
s(516) =< aux(156)+aux(154)
s(517) =< aux(156)+aux(154)
s(517) =< s(516)*aux(156)
s(518) =< s(517)
s(520) =< aux(152)
s(520) =< aux(156)
s(520) =< aux(157)
s(521) =< s(520)
s(522) =< aux(154)
s(470) =< aux(152)
s(471) =< aux(152)
s(470) =< aux(155)
s(471) =< aux(155)
s(470) =< aux(151)
s(471) =< s(467)+aux(152)
s(471) =< aux(151)+aux(152)
s(472) =< aux(151)+aux(152)
s(472) =< s(471)*aux(151)
s(473) =< s(472)
s(475) =< aux(152)
s(475) =< aux(151)
s(475) =< s(467)
s(476) =< s(475)

  with precondition: [V1=2,V>=1,V15>=1] 

* Chain [42]: 2*s(567)+3
  Such that:s(567) =< V15

  with precondition: [V1=2,V=V15,V>=2] 

* Chain [41]: 10*s(568)+11
  Such that:aux(158) =< V15
s(568) =< aux(158)

  with precondition: [V1=2,V=V15+1,V>=3] 

* Chain [40]: 1
  with precondition: [V=0,V1>=0] 

* Chain [39]: 3*s(573)+22*s(574)+6
  Such that:s(571) =< 1
aux(159) =< V1
s(573) =< s(571)
s(574) =< aux(159)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V15): 
-------------------------------------
* Chain [47] with precondition: [V1>=0] 
    - Upper bound: 68*V1+20+nat(V)*113+nat(V1+V)*216 
    - Complexity: n 
* Chain [46] with precondition: [V1=1,V>=1,V15>=1] 
    - Upper bound: 312*V+357*V15+162+nat(-V+V15)*67 
    - Complexity: n 
* Chain [45] with precondition: [V1=1,V>=2] 
    - Upper bound: 8*V+11+nat(V15)*10 
    - Complexity: n 
* Chain [44] with precondition: [V1=1,V=V15,V>=2] 
    - Upper bound: 2*V15+3 
    - Complexity: n 
* Chain [43] with precondition: [V1=2,V>=1,V15>=1] 
    - Upper bound: 357*V+312*V15+162+nat(V-V15)*67 
    - Complexity: n 
* Chain [42] with precondition: [V1=2,V=V15,V>=2] 
    - Upper bound: 2*V15+3 
    - Complexity: n 
* Chain [41] with precondition: [V1=2,V=V15+1,V>=3] 
    - Upper bound: 10*V15+11 
    - Complexity: n 
* Chain [40] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [39] with precondition: [V=1,V1>=1] 
    - Upper bound: 22*V1+9 
    - Complexity: n 

### Maximum cost of start(V1,V,V15): max([46*V1+11+nat(V)*113+nat(V1+V)*216+ (22*V1+8),nat(V)*304+151+nat(V15)*302+max([nat(-V+V15)*67+nat(V15)*45,nat(V-V15)*67+nat(V)*45])+nat(V)*8+ (nat(V15)*8+8)+ (nat(V15)*2+2)])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 136 ms.
   - Backward Invariants 81 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 160 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 574 ms.
   - Equation cost structures 183 ms.
   - Phase cost structures 68 ms.
   - Chain cost structures 188 ms.
   - Solving cost expressions 13 ms.
* Total analysis performed in 934 ms.

