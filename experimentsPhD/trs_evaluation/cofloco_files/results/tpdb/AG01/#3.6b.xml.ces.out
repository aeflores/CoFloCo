
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [fun/4,minus/3]
2. recursive  : [fun1/4,gcd/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into gcd/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 24 is refined into CE [25] 
* CE 22 is refined into CE [26] 
* CE 21 is refined into CE [27] 
* CE 23 is refined into CE [28] 


#### Refined cost equations le/3 
* CE 25: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 26: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 27: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 28: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [28] --> Loop 14 
* CEs [25] --> Loop 15 
* CEs [26] --> Loop 16 
* CEs [27] --> Loop 17 

#### Loops of le/3 
* Loop 14: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 15: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 16: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 17: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[14],17]
* [[14],16]
* [[14],15]
* [17]
* [16]
* [15]


### Merging Chains  le/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15],[15,[14]]] --> 3 
* [[16,[14]]] --> 4 
* [[17,[14]]] --> 5 


### Specialization of cost equations minus/3 
* CE 10 is refined into CE [29,30,31,32] 
* CE 12 is refined into CE [33] 
* CE 13 is refined into CE [34] 
* CE 14 is refined into CE [35] 
* CE 11 is refined into CE [36,37] 


#### Refined cost equations minus/3 
* CE 29: minus(V1,V,Out) = 1+ le(V1,W1,X1):2
     [V1>=1,X1=1,W1=0,Out=0,V=0] 
* CE 30: minus(V1,V,Out) = 1+ le(V1,V,W1):3
     [V>=0,V1>=1,W1=0,Out=0] 
* CE 31: minus(V1,V,Out) = 1+ le(V1,V,W1):4
     [V1>=V+1,V>=1,W1=1,Out=0] 
* CE 32: minus(V1,V,Out) = 1+ le(V1,V,W1):5
     [V>=V1,V1>=1,W1=2,Out=0] 
* CE 33: minus(V1,V,Out) = 2+ le(V1,V,W1):5
     [V>=V1,V1>=1,W1=2,Out=0] 
* CE 34: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 35: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 36: minus(V1,V,Out) = 2+ le(V1,W1,X1):2+ minus(Y1,Z1,A2)
     [V1>=1,V1=Y1+1,A2+1=Out,Z1=0,X1=1,W1=0,V=0] 
* CE 37: minus(V1,V,Out) = 2+ le(V1,V,W1):4+ minus(X1,V,Y1)
     [V1>=V+1,V>=1,V1=X1+1,Y1+1=Out,W1=1] 

### Cost equations --> "Loop" of minus/3 
* CEs [37] --> Loop 18 
* CEs [36] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [30,31,32,33,34,35] --> Loop 21 

#### Loops of minus/3 
* Loop 18: minus(V1,V,Out)->  minus(V1',V,Out')
                  [V1>=V+1,V>=1,Out=Out'+1,V1=V1'+1] 
* Loop 19: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=0,V=0] 
* Loop 20: minus(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 21: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [18]: [V1-1,V1-V]
* RF of phase [19]: [V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V1-1
    V1-V
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[19],21]
* [[19],20]
* [[18],21]
* [21]
* [20]


### Merging Chains  minus/3 into  External patterns of execution 
* [[20],[21]] --> 1 
* [[20,[19]],[21,[19]]] --> 2 
* [[21,[18]]] --> 3 


### Specialization of cost equations gcd/3 
* CE 15 is refined into CE [38,39,40,41,42] 
* CE 20 is refined into CE [43] 
* CE 19 is refined into CE [44] 
* CE 18 is refined into CE [45] 
* CE 17 is refined into CE [46,47,48,49] 
* CE 16 is refined into CE [50,51,52,53] 


#### Refined cost equations gcd/3 
* CE 38: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=2,W1=0,Out=0,V=1] 
* CE 39: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):2
     [W1>=1,W1+1=V,Y1=1,X1=0,Out=0,V1=1] 
* CE 40: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):3
     [X1>=0,W1>=0,W1+1=V,X1+1=V1,Y1=0,Out=0] 
* CE 41: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):4
     [W1>=X1+1,X1>=1,W1+1=V,X1+1=V1,Y1=1,Out=0] 
* CE 42: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):5
     [X1>=W1,W1>=1,W1+1=V,X1+1=V1,Y1=2,Out=0] 
* CE 43: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 44: gcd(A,B,A) = 1
     [A>=1,B=0] 
* CE 45: gcd(A,B,B) = 1
     [B>=0,A=0] 
* CE 46: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,A2):1+ gcd(B2,C2,Out)
     [X1>=0,X1+1=V1,C2=1,B2=0,A2=0,Z1=0,Y1=2,W1=0,V=1] 
* CE 47: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ gcd(A2,B2,Out)
     [X1>=A2,A2>=1,X1+1=V1,B2=1,Z1=0,Y1=2,W1=0,V=1] 
* CE 48: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(X1,W1,Z1):1+ gcd(A2,B2,Out)
     [X1>=W1,W1>=1,W1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=2] 
* CE 49: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(X1,W1,Z1):3+ gcd(Z1,A2,Out)
     [X1>=W1+Z1,Z1>=1,W1>=1,W1+1=A2,W1+1=V,X1+1=V1,Y1=2] 
* CE 50: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,A2):1+ gcd(B2,C2,Out)
     [W1>=1,W1+1=V,C2=1,B2=0,A2=0,Z1=0,Y1=1,X1=0,V1=1] 
* CE 51: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,A2):2+ gcd(A2,B2,Out)
     [W1>=A2,A2>=1,W1+1=V,B2=1,Z1=0,Y1=1,X1=0,V1=1] 
* CE 52: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(W1,X1,Z1):1+ gcd(A2,B2,Out)
     [W1>=X1+1,X1>=1,X1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=1] 
* CE 53: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(W1,X1,Z1):3+ gcd(Z1,A2,Out)
     [W1>=X1+Z1,Z1>=1,X1>=1,X1+1=A2,W1+1=V,X1+1=V1,Y1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [53] --> Loop 22 
* CEs [49] --> Loop 23 
* CEs [52] --> Loop 24 
* CEs [48] --> Loop 25 
* CEs [47] --> Loop 26 
* CEs [46] --> Loop 27 
* CEs [51] --> Loop 28 
* CEs [50] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [44] --> Loop 31 
* CEs [39,40,41,42,43] --> Loop 32 
* CEs [45] --> Loop 33 

#### Loops of gcd/3 
* Loop 22: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+A',A'>=1,V1>=2] 
* Loop 23: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V+V1',V1'>=1,V>=2] 
* Loop 24: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,A'=0] 
* Loop 25: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1'=0] 
* Loop 26: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V1'+1,V1'>=1,V'=1,V=1] 
* Loop 27: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 28: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V1'+1,V1'>=1,V'=1,V1=1] 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V'=1,V1'=0,V1=1] 
* Loop 30: gcd(V1,V,Out) [V1>=1,Out=0,V=1] 
* Loop 31: gcd(A,B,A) [A>=1,B=0] 
* Loop 32: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 33: gcd(A,B,B) [B>=0,A=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [22,23]: [V1/2+V/2-2]
* RF of phase [26]: [V1-1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1]:
    V-2
    V1/2+V/2-2
  - RF of loop [23:1]:
    V1/2-1 depends on loops [22:1] 
    V1/2-V/2 depends on loops [22:1] 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V1-1


### Resulting Chains:gcd(V1,V,Out) 
* [[26],32]
* [[26],30]
* [[26],27,33]
* [[26],27,32]
* [[22,23],32]
* [[22,23],29,33]
* [[22,23],29,32]
* [[22,23],28,[26],32]
* [[22,23],28,[26],30]
* [[22,23],28,[26],27,33]
* [[22,23],28,[26],27,32]
* [[22,23],28,32]
* [[22,23],28,30]
* [[22,23],28,27,33]
* [[22,23],28,27,32]
* [[22,23],25,33]
* [[22,23],25,32]
* [[22,23],24,33]
* [[22,23],24,32]
* [33]
* [32]
* [31]
* [30]
* [29,33]
* [29,32]
* [28,[26],32]
* [28,[26],30]
* [28,[26],27,33]
* [28,[26],27,32]
* [28,32]
* [28,30]
* [28,27,33]
* [28,27,32]
* [27,33]
* [27,32]
* [25,33]
* [25,32]
* [24,33]
* [24,32]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32,24],[32,25],[32,27,28],[30,28],[32,28],[32,27,[26],28],[30,[26],28],[32,[26],28],[32,29],[32],[32,24,[22,23]],[32,25,[22,23]],[32,27,28,[22,23]],[30,28,[22,23]],[32,28,[22,23]],[32,27,[26],28,[22,23]],[30,[26],28,[22,23]],[32,[26],28,[22,23]],[32,29,[22,23]],[32,[22,23]]] --> 2 
* [[33,27,28],[33,27,[26],28],[33,29]] --> 3 
* [[31]] --> 4 
* [[32,27],[30],[32,27,[26]],[30,[26]],[32,[26]]] --> 5 
* [[33,27],[33,27,[26]]] --> 6 
* [[33,27,28,[22,23]],[33,27,[26],28,[22,23]],[33,29,[22,23]]] --> 7 
* [[33,24]] --> 8 
* [[33,25]] --> 9 
* [[33,24,[22,23]],[33,25,[22,23]]] --> 10 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [54,55,56,57,58,59,60,61,62,63,64] 
* CE 6 is refined into CE [65] 
* CE 2 is refined into CE [66] 
* CE 3 is refined into CE [67,68,69,70,71,72,73,74,75,76,77] 
* CE 5 is refined into CE [78,79,80] 
* CE 7 is refined into CE [81,82,83,84,85] 
* CE 8 is refined into CE [86,87,88] 
* CE 9 is refined into CE [89,90,91,92,93,94,95,96,97,98] 


#### Refined cost equations start/3 
* CE 54: start(V1,V,V11) = 1+ minus(W11,X11,Y11):1+ gcd(Z11,V11,V11):1
     [V11>=1,W11>=0,V11=X11+1,W11+1=V,Z11=0,Y11=0,V1=2] 
* CE 55: start(V1,V,V11) = 1+ minus(W11,X11,Y11):1+ gcd(Z11,V11,A12):2
     [V11>=1,W11>=0,V11=X11+1,W11+1=V,A12=0,Z11=0,Y11=0,V1=2] 
* CE 56: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):2
     [W11>=Y11,Y11>=1,W11+1=V,A12=0,Z11=1,X11=0,V11=1,V1=2] 
* CE 57: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):5
     [W11>=Y11,Y11>=1,W11+1=V,A12=0,Z11=1,X11=0,V11=1,V1=2] 
* CE 58: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):6
     [W11>=Y11,Y11>=1,W11+1=V,A12=1,Z11=1,X11=0,V11=1,V1=2] 
* CE 59: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V11,Z11):2
     [W11+1>=V11+Y11,V11>=2,Y11>=1,V11=X11+1,W11+1=V,Z11=0,V1=2] 
* CE 60: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Z11,V11,A12):3
     [W11>=V11,V11>=2,V11=X11+1,W11+1=V,A12=1,Z11=1,Y11=1,V1=2] 
* CE 61: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V11,Z11):7
     [W11+1>=V11+Y11,V11+Y11>=5,V11>=2,Y11>=2,V11=X11+1,W11+1=V,Z11=1,V1=2] 
* CE 62: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V11,Y11):8
     [W11+1>=V11+Y11,V11>=Y11+1,Y11>=2,V11=X11+1,W11+1=V,V1=2] 
* CE 63: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V11,V11):9
     [W11+1>=V11+Y11,Y11>=V11,V11>=2,V11=X11+1,W11+1=V,V1=2] 
* CE 64: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V11,Z11):10
     [W11+1>=V11+Y11,V11+Y11>=3*Z11,V11>=Z11,Y11>=Z11,Z11>=2,V11=X11+1,W11+1=V,V1=2] 
* CE 65: start(V1,V,V11) = 1
     [V11>=0,V>=1,V1=2] 
* CE 66: start(V1,V,V11) = 0
     [V11>=0,V>=0,V1>=0] 
* CE 67: start(V1,V,V11) = 1+ minus(W11,X11,Y11):1+ gcd(Z11,V,V):1
     [V>=1,W11>=0,V=X11+1,W11+1=V11,Z11=0,Y11=0,V1=1] 
* CE 68: start(V1,V,V11) = 1+ minus(W11,X11,Y11):1+ gcd(Z11,V,A12):2
     [V>=1,W11>=0,V=X11+1,W11+1=V11,A12=0,Z11=0,Y11=0,V1=1] 
* CE 69: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):2
     [W11>=Y11,Y11>=1,W11+1=V11,A12=0,Z11=1,X11=0,V=1,V1=1] 
* CE 70: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):5
     [W11>=Y11,Y11>=1,W11+1=V11,A12=0,Z11=1,X11=0,V=1,V1=1] 
* CE 71: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2+ gcd(Y11,Z11,A12):6
     [W11>=Y11,Y11>=1,W11+1=V11,A12=1,Z11=1,X11=0,V=1,V1=1] 
* CE 72: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V,Z11):2
     [W11+1>=V+Y11,V>=2,Y11>=1,V=X11+1,W11+1=V11,Z11=0,V1=1] 
* CE 73: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Z11,V,A12):3
     [W11>=V,V>=2,V=X11+1,W11+1=V11,A12=1,Z11=1,Y11=1,V1=1] 
* CE 74: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V,Z11):7
     [W11+1>=V+Y11,V+Y11>=5,V>=2,Y11>=2,V=X11+1,W11+1=V11,Z11=1,V1=1] 
* CE 75: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V,Y11):8
     [W11+1>=V+Y11,V>=Y11+1,Y11>=2,V=X11+1,W11+1=V11,V1=1] 
* CE 76: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V,V):9
     [W11+1>=V+Y11,Y11>=V,V>=2,V=X11+1,W11+1=V11,V1=1] 
* CE 77: start(V1,V,V11) = 1+ minus(W11,X11,Y11):3+ gcd(Y11,V,Z11):10
     [W11+1>=V+Y11,V+Y11>=3*Z11,V>=Z11,Y11>=Z11,Z11>=2,V=X11+1,W11+1=V11,V1=1] 
* CE 78: start(V1,V,V11) = 1+ minus(W11,V11,X11):1
     [V11>=0,W11>=0,W11+1=V,X11=0,V1=1] 
* CE 79: start(V1,V,V11) = 1+ minus(W11,X11,Y11):2
     [W11>=Y11,Y11>=1,W11+1=V,X11=0,V11=0,V1=1] 
* CE 80: start(V1,V,V11) = 1+ minus(W11,V11,X11):3
     [W11>=V11+X11,X11>=1,V11>=1,W11+1=V,V1=1] 
* CE 81: start(V1,V,V11) = 0+ le(W11,V,X11):1
     [V>=0,X11=2,W11=0,V1=0] 
* CE 82: start(V1,V,V11) = 0+ le(V1,W11,X11):2
     [V1>=1,X11=1,W11=0,V=0] 
* CE 83: start(V1,V,V11) = 0+ le(V1,V,W11):3
     [V>=0,V1>=0,W11=0] 
* CE 84: start(V1,V,V11) = 0+ le(V1,V,W11):4
     [V1>=V+1,V>=1,W11=1] 
* CE 85: start(V1,V,V11) = 0+ le(V1,V,W11):5
     [V>=V1,V1>=1,W11=2] 
* CE 86: start(V1,V,V11) = 0+ minus(V1,V,W11):1
     [V>=0,V1>=0,W11=0] 
* CE 87: start(V1,V,V11) = 0+ minus(V1,W11,X11):2
     [V1>=X11,X11>=1,W11=0,V=0] 
* CE 88: start(V1,V,V11) = 0+ minus(V1,V,W11):3
     [V1>=V+W11,W11>=1,V>=1] 
* CE 89: start(V1,V,V11) = 0+ gcd(W11,V,V):1
     [V>=0,W11=0,V1=0] 
* CE 90: start(V1,V,V11) = 0+ gcd(V1,V,W11):2
     [V>=0,V1>=0,W11=0] 
* CE 91: start(V1,V,V11) = 0+ gcd(W11,V,X11):3
     [V>=2,X11=1,W11=1,V1=1] 
* CE 92: start(V1,V,V11) = 0+ gcd(V1,W11,V1):4
     [V1>=1,W11=0,V=0] 
* CE 93: start(V1,V,V11) = 0+ gcd(V1,W11,X11):5
     [V1>=1,X11=0,W11=1,V=1] 
* CE 94: start(V1,V,V11) = 0+ gcd(V1,W11,X11):6
     [V1>=1,X11=1,W11=1,V=1] 
* CE 95: start(V1,V,V11) = 0+ gcd(V1,V,W11):7
     [V1+V>=5,V>=2,V1>=2,W11=1] 
* CE 96: start(V1,V,V11) = 0+ gcd(V1,V,V1):8
     [V>=V1+1,V1>=2] 
* CE 97: start(V1,V,V11) = 0+ gcd(V1,V,V):9
     [V1>=V,V>=2] 
* CE 98: start(V1,V,V11) = 0+ gcd(V1,V,W11):10
     [V1+V>=3*W11,V>=W11,V1>=W11,W11>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [93,94] --> Loop 34 
* CEs [82,87,92] --> Loop 35 
* CEs [54,55,56,57,58,59,60,61,62,63,64,65] --> Loop 36 
* CEs [79,91] --> Loop 37 
* CEs [67,68,69,70,71,72,73,74,75,76,77,78,80] --> Loop 38 
* CEs [66,81,83,84,85,86,88,89,90,95,96,97,98] --> Loop 39 

#### Loops of start/3 
* Loop 34: start(V1,V,V11) [V1>=1,V=1] 
* Loop 35: start(V1,V,V11) [V1>=1,V=0] 
* Loop 36: start(V1,V,V11) [V11>=0,V>=1,V1=2] 
* Loop 37: start(V1,V,V11) [V>=2,V1=1] 
* Loop 38: start(V1,V,V11) [V11>=0,V>=1,V1=1] 
* Loop 39: start(V1,V,V11) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V11) 

#### Partial ranking functions of CR start(V1,V,V11) 


### Resulting Chains:start(V1,V,V11) 
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  start/3 into  External patterns of execution 
* [[38],[39]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 
* [[35]] --> 4 
* [[34]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [14]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of phase [14]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of phase [14]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[14],17]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [17]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [16]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [15]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [19] 

 * loop 19:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3
#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of loops [18] 

 * loop 18:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*s(7)+3
  Such that:s(7) =< V'

#### Cost of phase [18]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(18)+1*s(8)+0
  Such that:it(18) =< V1
it(18) =< V1-V
it(18) =< V1-V-V1'+V'
it(18) =< V1-V1'
aux(3) =< V
s(8) =< it(18)*aux(3)

#### Cost of chains of minus(V1,V,Out):
* Chain [[19],21]: 3*it(19)+2*s(4)+3
  Such that:aux(1) =< V1-Out
it(19) =< Out
s(4) =< aux(1)

  with precondition: [V=0,Out>=1,V1>=Out] 

* Chain [[19],20]: 3*it(19)+2
  Such that:it(19) =< Out

  with precondition: [V=0,Out>=1,V1>=Out+1] 

* Chain [[18],21]: 3*it(18)+2*s(2)+2*s(4)+1*s(8)+3
  Such that:aux(1) =< V1-Out
it(18) =< Out
aux(4) =< V
s(4) =< aux(1)
s(2) =< aux(4)
s(8) =< it(18)*aux(4)

  with precondition: [V>=1,Out>=1,V1>=Out+V] 

* Chain [21]: 2*s(2)+2*s(4)+3
  Such that:aux(1) =< V1
aux(2) =< V
s(4) =< aux(1)
s(2) =< aux(2)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [20]: 2
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [26] 

 * loop 26:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*s(26)+2*s(27)+6
  Such that:s(24) =< V1-V1'
s(25) =< V1'
s(26) =< s(25)
s(27) =< s(24)

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(26)+6*s(28)+2*s(29)+0
  Such that:aux(8) =< V1
aux(9) =< V1-V1'
it(26) =< aux(8)
s(30) =< aux(8)
it(26) =< aux(9)
s(30) =< aux(9)
s(31) =< it(26)*aux(8)
s(28) =< s(31)
s(29) =< s(30)

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(26)+6*s(28)+2*s(29)+0
  Such that:aux(8) =< V1
aux(9) =< V1-V1'
it(26) =< aux(8)
s(30) =< aux(8)
it(26) =< aux(9)
s(30) =< aux(9)
s(31) =< it(26)*aux(8)
s(28) =< s(31)
s(29) =< s(30)

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(26)+6*s(28)+2*s(29)+0
  Such that:aux(8) =< V1
aux(9) =< V1-V1'
it(26) =< aux(8)
s(30) =< aux(8)
it(26) =< aux(9)
s(30) =< aux(9)
s(31) =< it(26)*aux(8)
s(28) =< s(31)
s(29) =< s(30)

#### Cost of phase [26]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(26)+6*s(28)+2*s(29)+0
  Such that:aux(8) =< V1
aux(9) =< V1-V1'
it(26) =< aux(8)
s(30) =< aux(8)
it(26) =< aux(9)
s(30) =< aux(9)
s(31) =< it(26)*aux(8)
s(28) =< s(31)
s(29) =< s(30)

#### Cost of loops [22,23] 

 * loop 22:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(46)+3*s(44)+2*s(47)+1*s(48)+6
  Such that:s(43) =< V-V1'
s(44) =< V1'
s(45) =< V'
s(46) =< s(45)
s(47) =< s(43)
s(48) =< s(44)*s(45)

 * loop 23:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(59)+3*s(57)+2*s(60)+1*s(61)+6
  Such that:s(56) =< V1-V1'
s(57) =< V1'
s(58) =< V'
s(59) =< s(58)
s(60) =< s(56)
s(61) =< s(57)*s(58)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of phase [22,23]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+0
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(21) =< V1/2-V1'/2
aux(38) =< V1
aux(39) =< V1+V
aux(40) =< V1+V-V1'-V'
aux(41) =< V1-V1'
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-V1'/2-V'/2
aux(44) =< V
aux(45) =< V-V'
aux(46) =< V/2
aux(47) =< V/2-V'/2
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(40)
s(66) =< aux(40)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[26],32]: 10*it(26)+1*s(19)+6*s(28)+2
  Such that:s(19) =< 1
aux(10) =< V1
it(26) =< aux(10)
s(31) =< it(26)*aux(10)
s(28) =< s(31)

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[26],30]: 8*it(26)+6*s(28)+2
  Such that:aux(11) =< V1
it(26) =< aux(11)
s(31) =< it(26)*aux(11)
s(28) =< s(31)

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[26],27,33]: 10*it(26)+6*s(28)+7
  Such that:aux(12) =< V1
it(26) =< aux(12)
s(31) =< it(26)*aux(12)
s(28) =< s(31)

  with precondition: [V=1,Out=1,V1>=2] 

* Chain [[26],27,32]: 10*it(26)+1*s(19)+6*s(28)+8
  Such that:s(19) =< 1
aux(13) =< V1
it(26) =< aux(13)
s(31) =< it(26)*aux(13)
s(28) =< s(31)

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[22,23],32]: 6*it(22)+6*it(23)+8*s(17)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+2
  Such that:aux(19) =< V1/2-V/2
aux(42) =< V1/2+V/2
aux(46) =< V/2
aux(48) =< V1
aux(49) =< V1+V
aux(50) =< V1/2
aux(51) =< V
s(17) =< aux(49)
it(23) =< aux(49)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(49)
it(22) =< aux(51)
s(63) =< aux(51)
aux(16) =< aux(46)
aux(16) =< aux(51)
aux(35) =< aux(51)
aux(27) =< aux(49)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(50)
s(73) =< aux(23)+aux(48)
s(72) =< aux(23)+aux(48)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(49)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(51)
s(65) =< s(63)*aux(49)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],29,33]: 6*it(22)+6*it(23)+7*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+7
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(52) =< V1
aux(53) =< V1+V
aux(54) =< V1/2
aux(55) =< V1/2+V/2
aux(56) =< V
aux(43) =< aux(53)
aux(43) =< aux(55)
s(62) =< aux(53)
it(23) =< aux(53)
it(22) =< aux(55)
it(23) =< aux(55)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(56)
s(63) =< aux(56)
aux(16) =< aux(46)
aux(16) =< aux(56)
aux(35) =< aux(56)
aux(27) =< aux(53)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(54)
s(73) =< aux(23)+aux(52)
s(72) =< aux(23)+aux(52)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(53)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(56)
s(65) =< s(63)*aux(53)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],29,32]: 6*it(22)+6*it(23)+1*s(19)+7*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:s(19) =< 1
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(57) =< V1
aux(58) =< V1+V
aux(59) =< V1/2
aux(60) =< V1/2+V/2
aux(61) =< V
aux(43) =< aux(58)
aux(43) =< aux(60)
s(62) =< aux(58)
it(23) =< aux(58)
it(22) =< aux(60)
it(23) =< aux(60)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(61)
s(63) =< aux(61)
aux(16) =< aux(46)
aux(16) =< aux(61)
aux(35) =< aux(61)
aux(27) =< aux(58)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(59)
s(73) =< aux(23)+aux(57)
s(72) =< aux(23)+aux(57)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(58)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(61)
s(65) =< s(63)*aux(58)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,[26],32]: 6*it(22)+6*it(23)+23*it(26)+1*s(19)+6*s(28)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:s(19) =< 1
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(63) =< V1
aux(64) =< V1+V
aux(65) =< V1/2
aux(66) =< V1/2+V/2
aux(67) =< V
aux(43) =< aux(64)
aux(43) =< aux(66)
it(26) =< aux(64)
s(31) =< it(26)*aux(64)
s(28) =< s(31)
it(23) =< aux(64)
it(22) =< aux(66)
it(23) =< aux(66)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(67)
s(63) =< aux(67)
aux(16) =< aux(46)
aux(16) =< aux(67)
aux(35) =< aux(67)
aux(27) =< aux(64)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(65)
s(73) =< aux(23)+aux(63)
s(72) =< aux(23)+aux(63)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(64)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(67)
s(65) =< s(63)*aux(64)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,[26],30]: 6*it(22)+6*it(23)+21*it(26)+6*s(28)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(69) =< V1
aux(70) =< V1+V
aux(71) =< V1/2
aux(72) =< V1/2+V/2
aux(73) =< V
aux(43) =< aux(70)
aux(43) =< aux(72)
it(26) =< aux(70)
s(31) =< it(26)*aux(70)
s(28) =< s(31)
it(23) =< aux(70)
it(22) =< aux(72)
it(23) =< aux(72)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(73)
s(63) =< aux(73)
aux(16) =< aux(46)
aux(16) =< aux(73)
aux(35) =< aux(73)
aux(27) =< aux(70)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(71)
s(73) =< aux(23)+aux(69)
s(72) =< aux(23)+aux(69)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(70)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(73)
s(65) =< s(63)*aux(70)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,[26],27,33]: 6*it(22)+6*it(23)+23*it(26)+6*s(28)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+13
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(75) =< V1
aux(76) =< V1+V
aux(77) =< V1/2
aux(78) =< V1/2+V/2
aux(79) =< V
aux(43) =< aux(76)
aux(43) =< aux(78)
it(26) =< aux(76)
s(31) =< it(26)*aux(76)
s(28) =< s(31)
it(23) =< aux(76)
it(22) =< aux(78)
it(23) =< aux(78)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(79)
s(63) =< aux(79)
aux(16) =< aux(46)
aux(16) =< aux(79)
aux(35) =< aux(79)
aux(27) =< aux(76)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(77)
s(73) =< aux(23)+aux(75)
s(72) =< aux(23)+aux(75)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(76)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(79)
s(65) =< s(63)*aux(76)

  with precondition: [Out=1,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,[26],27,32]: 6*it(22)+6*it(23)+23*it(26)+1*s(19)+6*s(28)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+14
  Such that:s(19) =< 1
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(81) =< V1
aux(82) =< V1+V
aux(83) =< V1/2
aux(84) =< V1/2+V/2
aux(85) =< V
aux(43) =< aux(82)
aux(43) =< aux(84)
it(26) =< aux(82)
s(31) =< it(26)*aux(82)
s(28) =< s(31)
it(23) =< aux(82)
it(22) =< aux(84)
it(23) =< aux(84)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(85)
s(63) =< aux(85)
aux(16) =< aux(46)
aux(16) =< aux(85)
aux(35) =< aux(85)
aux(27) =< aux(82)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(83)
s(73) =< aux(23)+aux(81)
s(72) =< aux(23)+aux(81)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(82)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(85)
s(65) =< s(63)*aux(82)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[22,23],28,32]: 6*it(22)+6*it(23)+15*s(17)+1*s(19)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:s(19) =< 1
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(87) =< V1
aux(88) =< V1+V
aux(89) =< V1/2
aux(90) =< V1/2+V/2
aux(91) =< V
aux(43) =< aux(88)
aux(43) =< aux(90)
s(17) =< aux(88)
it(23) =< aux(88)
it(22) =< aux(90)
it(23) =< aux(90)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(91)
s(63) =< aux(91)
aux(16) =< aux(46)
aux(16) =< aux(91)
aux(35) =< aux(91)
aux(27) =< aux(88)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(89)
s(73) =< aux(23)+aux(87)
s(72) =< aux(23)+aux(87)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(88)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(91)
s(65) =< s(63)*aux(88)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,30]: 6*it(22)+6*it(23)+13*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(93) =< V1
aux(94) =< V1+V
aux(95) =< V1/2
aux(96) =< V1/2+V/2
aux(97) =< V
aux(43) =< aux(94)
aux(43) =< aux(96)
s(62) =< aux(94)
it(23) =< aux(94)
it(22) =< aux(96)
it(23) =< aux(96)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(97)
s(63) =< aux(97)
aux(16) =< aux(46)
aux(16) =< aux(97)
aux(35) =< aux(97)
aux(27) =< aux(94)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(95)
s(73) =< aux(23)+aux(93)
s(72) =< aux(23)+aux(93)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(94)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(97)
s(65) =< s(63)*aux(94)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,27,33]: 6*it(22)+6*it(23)+15*s(34)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+13
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(99) =< V1
aux(100) =< V1+V
aux(101) =< V1/2
aux(102) =< V1/2+V/2
aux(103) =< V
aux(43) =< aux(100)
aux(43) =< aux(102)
s(34) =< aux(100)
it(23) =< aux(100)
it(22) =< aux(102)
it(23) =< aux(102)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(103)
s(63) =< aux(103)
aux(16) =< aux(46)
aux(16) =< aux(103)
aux(35) =< aux(103)
aux(27) =< aux(100)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(101)
s(73) =< aux(23)+aux(99)
s(72) =< aux(23)+aux(99)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(100)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(103)
s(65) =< s(63)*aux(100)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],28,27,32]: 6*it(22)+6*it(23)+1*s(19)+15*s(34)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+14
  Such that:s(19) =< 1
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1/2
aux(108) =< V1/2+V/2
aux(109) =< V
aux(43) =< aux(106)
aux(43) =< aux(108)
s(34) =< aux(106)
it(23) =< aux(106)
it(22) =< aux(108)
it(23) =< aux(108)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(109)
s(63) =< aux(109)
aux(16) =< aux(46)
aux(16) =< aux(109)
aux(35) =< aux(109)
aux(27) =< aux(106)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(107)
s(73) =< aux(23)+aux(105)
s(72) =< aux(23)+aux(105)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(106)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(109)
s(65) =< s(63)*aux(106)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[22,23],25,33]: 6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+3*s(82)+2*s(85)+7
  Such that:aux(38) =< V1
aux(39) =< V1+V
aux(41) =< V1-Out
aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-Out
aux(21) =< V1/2-Out/2
aux(44) =< V
aux(45) =< V-Out
aux(46) =< V/2
aux(47) =< V/2-Out/2
aux(110) =< Out
aux(111) =< V1+V-Out
aux(43) =< aux(111)
s(82) =< aux(110)
s(85) =< aux(111)
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(111)
s(66) =< aux(111)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(44)
s(63) =< aux(44)
it(22) =< aux(45)
s(63) =< aux(45)
aux(16) =< aux(46)
aux(16) =< aux(47)
aux(35) =< aux(44)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(44)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

  with precondition: [Out>=2,V1>=Out,V>=Out,V+V1>=3*Out] 

* Chain [[22,23],25,32]: 6*it(22)+6*it(23)+11*s(19)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(113) =< V1
aux(114) =< V1+V
aux(115) =< V1/2
aux(116) =< V1/2+V/2
aux(117) =< V
aux(43) =< aux(114)
aux(43) =< aux(116)
s(19) =< aux(114)
it(23) =< aux(114)
it(22) =< aux(116)
it(23) =< aux(116)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(117)
s(63) =< aux(117)
aux(16) =< aux(46)
aux(16) =< aux(117)
aux(35) =< aux(117)
aux(27) =< aux(114)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(115)
s(73) =< aux(23)+aux(113)
s(72) =< aux(23)+aux(113)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(114)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(117)
s(65) =< s(63)*aux(114)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[22,23],24,33]: 6*it(22)+6*it(23)+5*s(62)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+3*s(87)+2*s(90)+7
  Such that:aux(38) =< V1
aux(39) =< V1+V
aux(41) =< V1-Out
aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(42) =< V1/2+V/2
aux(43) =< V1/2+V/2-Out
aux(21) =< V1/2-Out/2
aux(46) =< V/2
aux(118) =< Out
aux(119) =< V1+V-Out
aux(120) =< V
aux(43) =< aux(119)
s(87) =< aux(118)
s(90) =< aux(119)
it(23) =< aux(39)
s(66) =< aux(39)
it(23) =< aux(119)
s(66) =< aux(119)
it(22) =< aux(42)
it(23) =< aux(42)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(120)
s(63) =< aux(120)
aux(16) =< aux(46)
aux(16) =< aux(120)
aux(35) =< aux(120)
aux(27) =< aux(39)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(41)
s(73) =< aux(23)+aux(38)
s(72) =< aux(23)+aux(41)
s(72) =< aux(23)+aux(38)
it(23) =< aux(16)+aux(21)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(39)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(120)
s(62) =< s(66)
s(65) =< s(63)*aux(39)

  with precondition: [Out>=2,V1>=Out+1,V>=Out+1,V+V1>=3*Out+2] 

* Chain [[22,23],24,32]: 6*it(22)+6*it(23)+11*s(19)+3*s(63)+1*s(65)+3*s(68)+3*s(69)+2*s(70)+1*s(71)+8
  Such that:aux(17) =< V1/2
aux(19) =< V1/2-V/2
aux(46) =< V/2
aux(122) =< V1
aux(123) =< V1+V
aux(124) =< V1/2+V/2
aux(125) =< V
aux(43) =< aux(123)
aux(43) =< aux(124)
s(19) =< aux(123)
it(23) =< aux(123)
it(22) =< aux(124)
it(23) =< aux(124)
it(22) =< aux(43)
it(23) =< aux(43)
it(22) =< aux(125)
s(63) =< aux(125)
aux(16) =< aux(46)
aux(16) =< aux(125)
aux(35) =< aux(125)
aux(27) =< aux(123)-1
aux(23) =< aux(16)*2
it(23) =< aux(16)+aux(19)
it(23) =< aux(16)+aux(17)
s(73) =< aux(23)+aux(122)
s(72) =< aux(23)+aux(122)
it(23) =< aux(16)+aux(122)
s(73) =< it(23)*aux(35)
s(69) =< it(23)*aux(123)
s(72) =< it(23)*aux(27)
s(68) =< s(73)
s(70) =< s(72)
s(71) =< s(69)*aux(125)
s(65) =< s(63)*aux(123)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=8] 

* Chain [33]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [32]: 2*s(17)+1*s(19)+2
  Such that:s(19) =< V
aux(6) =< V1
s(17) =< aux(6)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [31]: 1
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [30]: 2
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [29,33]: 2*s(76)+7
  Such that:s(74) =< V
s(76) =< s(74)

  with precondition: [V1=1,Out=1,V>=2] 

* Chain [29,32]: 1*s(19)+2*s(76)+8
  Such that:s(19) =< 1
s(74) =< V
s(76) =< s(74)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,[26],32]: 18*it(26)+1*s(19)+6*s(28)+8
  Such that:s(19) =< 1
aux(62) =< V
it(26) =< aux(62)
s(31) =< it(26)*aux(62)
s(28) =< s(31)

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [28,[26],30]: 16*it(26)+6*s(28)+8
  Such that:aux(68) =< V
it(26) =< aux(68)
s(31) =< it(26)*aux(68)
s(28) =< s(31)

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [28,[26],27,33]: 18*it(26)+6*s(28)+13
  Such that:aux(74) =< V
it(26) =< aux(74)
s(31) =< it(26)*aux(74)
s(28) =< s(31)

  with precondition: [V1=1,Out=1,V>=3] 

* Chain [28,[26],27,32]: 18*it(26)+1*s(19)+6*s(28)+14
  Such that:s(19) =< 1
aux(80) =< V
it(26) =< aux(80)
s(31) =< it(26)*aux(80)
s(28) =< s(31)

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [28,32]: 10*s(17)+1*s(19)+8
  Such that:s(19) =< 1
aux(86) =< V
s(17) =< aux(86)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,30]: 8*s(80)+8
  Such that:aux(92) =< V
s(80) =< aux(92)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [28,27,33]: 10*s(34)+13
  Such that:aux(98) =< V
s(34) =< aux(98)

  with precondition: [V1=1,Out=1,V>=2] 

* Chain [28,27,32]: 1*s(19)+10*s(34)+14
  Such that:s(19) =< 1
aux(104) =< V
s(34) =< aux(104)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [27,33]: 2*s(34)+7
  Such that:s(32) =< V1
s(34) =< s(32)

  with precondition: [V=1,Out=1,V1>=1] 

* Chain [27,32]: 1*s(19)+2*s(34)+8
  Such that:s(19) =< 1
s(32) =< V1
s(34) =< s(32)

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [25,33]: 3*s(82)+2*s(85)+7
  Such that:s(83) =< V1
aux(110) =< Out
s(82) =< aux(110)
s(85) =< s(83)

  with precondition: [V=Out,V>=2,V1>=V] 

* Chain [25,32]: 4*s(19)+2*s(85)+8
  Such that:s(83) =< V1
aux(112) =< V
s(19) =< aux(112)
s(85) =< s(83)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [24,33]: 3*s(87)+2*s(90)+7
  Such that:s(88) =< V
aux(118) =< Out
s(87) =< aux(118)
s(90) =< s(88)

  with precondition: [V1=Out,V1>=2,V>=V1+1] 

* Chain [24,32]: 4*s(19)+2*s(90)+8
  Such that:s(88) =< V
aux(121) =< V1
s(19) =< aux(121)
s(90) =< s(88)

  with precondition: [Out=0,V1>=2,V>=V1+1] 


#### Cost of chains of start(V1,V,V11):
* Chain [39]: 145*s(532)+27*s(534)+1*s(544)+10*s(553)+18*s(556)+206*s(558)+66*s(559)+84*s(560)+33*s(567)+33*s(568)+22*s(569)+11*s(570)+15*s(571)+24*s(573)+18*s(575)+9*s(578)+9*s(579)+6*s(580)+3*s(581)+6*s(582)+6*s(583)+3*s(586)+3*s(587)+2*s(588)+1*s(589)+14
  Such that:s(545) =< 1
aux(162) =< V1
aux(163) =< V1+V
aux(164) =< V1/2
aux(165) =< V1/2-V/2
aux(166) =< V1/2+V/2
aux(167) =< V
aux(168) =< V/2
s(534) =< aux(162)
s(532) =< aux(167)
s(553) =< s(545)
s(555) =< s(532)*aux(167)
s(556) =< s(555)
s(557) =< aux(163)
s(557) =< aux(166)
s(558) =< aux(163)
s(559) =< aux(163)
s(560) =< aux(166)
s(559) =< aux(166)
s(560) =< s(557)
s(559) =< s(557)
s(560) =< aux(167)
s(561) =< aux(168)
s(561) =< aux(167)
s(562) =< aux(167)
s(563) =< aux(163)-1
s(564) =< s(561)*2
s(559) =< s(561)+aux(165)
s(559) =< s(561)+aux(164)
s(565) =< s(564)+aux(162)
s(566) =< s(564)+aux(162)
s(565) =< s(559)*s(562)
s(567) =< s(559)*aux(163)
s(566) =< s(559)*s(563)
s(568) =< s(565)
s(569) =< s(566)
s(570) =< s(567)*aux(167)
s(571) =< s(532)*aux(163)
s(572) =< s(558)*aux(163)
s(573) =< s(572)
s(575) =< aux(163)
s(575) =< aux(166)
s(575) =< s(557)
s(575) =< s(561)+aux(165)
s(575) =< s(561)+aux(164)
s(576) =< s(564)+aux(162)
s(577) =< s(564)+aux(162)
s(575) =< s(561)+aux(162)
s(576) =< s(575)*s(562)
s(578) =< s(575)*aux(163)
s(577) =< s(575)*s(563)
s(579) =< s(576)
s(580) =< s(577)
s(581) =< s(578)*aux(167)
s(582) =< aux(163)
s(583) =< aux(166)
s(582) =< aux(166)
s(583) =< aux(163)
s(583) =< aux(167)
s(582) =< s(561)+aux(165)
s(582) =< s(561)+aux(164)
s(584) =< s(564)+aux(162)
s(585) =< s(564)+aux(162)
s(584) =< s(582)*s(562)
s(586) =< s(582)*aux(163)
s(585) =< s(582)*s(563)
s(587) =< s(584)
s(588) =< s(585)
s(589) =< s(586)*aux(167)
s(544) =< s(534)*aux(167)

  with precondition: [V1>=0,V>=0] 

* Chain [38]: 273*s(670)+458*s(671)+155*s(684)+60*s(687)+60*s(690)+54*s(691)+30*s(698)+30*s(699)+20*s(700)+10*s(701)+10*s(702)+6*s(714)+18*s(736)+60*s(739)+60*s(740)+30*s(747)+30*s(748)+20*s(749)+10*s(750)+10*s(751)+42*s(753)+2*s(791)+5*s(793)+206*s(807)+78*s(808)+90*s(809)+39*s(816)+30*s(817)+20*s(818)+13*s(819)+15*s(820)+24*s(822)+1*s(844)+9*s(874)+6*s(875)+12*s(923)+6*s(933)+6*s(934)+4*s(935)+2*s(936)+1*s(960)+18
  Such that:s(732) =< 1/2
s(916) =< -V+V11
s(680) =< -V/2
aux(191) =< 1
aux(192) =< -V+V11/2
aux(193) =< V
aux(194) =< V+V11
aux(195) =< V/2
aux(196) =< V11
s(684) =< aux(191)
s(671) =< aux(193)
s(686) =< s(671)*aux(193)
s(687) =< s(686)
s(688) =< aux(193)
s(688) =< aux(195)
s(690) =< aux(193)
s(691) =< aux(195)
s(690) =< aux(195)
s(691) =< s(688)
s(690) =< s(688)
s(691) =< aux(193)
s(693) =< aux(193)
s(694) =< aux(193)-1
s(695) =< s(688)*2
s(690) =< s(688)+s(680)
s(696) =< s(695)
s(697) =< s(695)
s(696) =< s(690)*s(693)
s(698) =< s(690)*aux(193)
s(697) =< s(690)*s(694)
s(699) =< s(696)
s(700) =< s(697)
s(701) =< s(698)*aux(193)
s(702) =< s(671)*aux(193)
s(714) =< aux(195)
s(714) =< aux(193)
s(670) =< aux(196)
s(752) =< s(670)*aux(196)
s(753) =< s(752)
s(788) =< aux(194)
s(788) =< aux(196)
s(807) =< aux(194)
s(808) =< aux(194)
s(809) =< aux(194)
s(809) =< aux(193)
s(812) =< aux(194)-1
s(808) =< s(688)+aux(192)
s(808) =< s(688)+aux(196)
s(814) =< s(695)+aux(196)
s(815) =< s(695)+aux(196)
s(814) =< s(808)*s(693)
s(816) =< s(808)*aux(194)
s(815) =< s(808)*s(812)
s(817) =< s(814)
s(818) =< s(815)
s(819) =< s(816)*aux(193)
s(820) =< s(671)*aux(194)
s(821) =< s(807)*aux(194)
s(822) =< s(821)
s(791) =< s(788)
s(793) =< s(670)*aux(193)
s(844) =< s(684)*aux(193)
s(735) =< s(684)*aux(191)
s(736) =< s(735)
s(739) =< aux(196)
s(740) =< aux(196)
s(740) =< aux(191)
s(741) =< s(732)
s(741) =< aux(191)
s(742) =< aux(191)
s(743) =< aux(196)-1
s(744) =< s(741)*2
s(739) =< s(741)+aux(196)
s(745) =< s(744)+aux(196)
s(746) =< s(744)+aux(196)
s(745) =< s(739)*s(742)
s(747) =< s(739)*aux(196)
s(746) =< s(739)*s(743)
s(748) =< s(745)
s(749) =< s(746)
s(750) =< s(747)*aux(191)
s(751) =< s(684)*aux(196)
s(916) =< aux(196)
s(923) =< aux(194)
s(923) =< s(688)+aux(192)
s(923) =< s(688)+aux(196)
s(931) =< s(695)+aux(196)
s(932) =< s(695)+aux(196)
s(923) =< s(688)+s(916)
s(931) =< s(923)*s(693)
s(933) =< s(923)*aux(194)
s(932) =< s(923)*s(812)
s(934) =< s(931)
s(935) =< s(932)
s(936) =< s(933)*aux(193)
s(871) =< s(695)+aux(196)
s(872) =< s(695)+aux(196)
s(871) =< s(808)*s(693)
s(872) =< s(808)*s(812)
s(874) =< s(871)
s(875) =< s(872)
s(960) =< s(671)*aux(196)

  with precondition: [V1=1,V>=1,V11>=0] 

* Chain [37]: 38*s(963)+6*s(968)+13
  Such that:aux(198) =< V
s(963) =< aux(198)
s(967) =< s(963)*aux(198)
s(968) =< s(967)

  with precondition: [V1=1,V>=2] 

* Chain [36]: 269*s(971)+451*s(972)+155*s(985)+60*s(988)+60*s(991)+54*s(992)+30*s(999)+30*s(1000)+20*s(1001)+10*s(1002)+10*s(1003)+6*s(1015)+18*s(1037)+60*s(1040)+60*s(1041)+30*s(1048)+30*s(1049)+20*s(1050)+10*s(1051)+10*s(1052)+42*s(1054)+2*s(1092)+5*s(1094)+206*s(1108)+78*s(1109)+90*s(1110)+39*s(1117)+30*s(1118)+20*s(1119)+13*s(1120)+15*s(1121)+24*s(1123)+1*s(1145)+9*s(1175)+6*s(1176)+12*s(1224)+6*s(1234)+6*s(1235)+4*s(1236)+2*s(1237)+18
  Such that:s(1033) =< 1/2
s(1217) =< V-V11
s(981) =< -V11/2
aux(220) =< 1
aux(221) =< V
aux(222) =< V+V11
aux(223) =< V/2-V11
aux(224) =< V11
aux(225) =< V11/2
s(985) =< aux(220)
s(972) =< aux(224)
s(987) =< s(972)*aux(224)
s(988) =< s(987)
s(989) =< aux(224)
s(989) =< aux(225)
s(991) =< aux(224)
s(992) =< aux(225)
s(991) =< aux(225)
s(992) =< s(989)
s(991) =< s(989)
s(992) =< aux(224)
s(994) =< aux(224)
s(995) =< aux(224)-1
s(996) =< s(989)*2
s(991) =< s(989)+s(981)
s(997) =< s(996)
s(998) =< s(996)
s(997) =< s(991)*s(994)
s(999) =< s(991)*aux(224)
s(998) =< s(991)*s(995)
s(1000) =< s(997)
s(1001) =< s(998)
s(1002) =< s(999)*aux(224)
s(1003) =< s(972)*aux(224)
s(1015) =< aux(225)
s(1015) =< aux(224)
s(971) =< aux(221)
s(1053) =< s(971)*aux(221)
s(1054) =< s(1053)
s(1089) =< aux(221)
s(1089) =< aux(222)
s(1108) =< aux(222)
s(1109) =< aux(222)
s(1110) =< aux(222)
s(1110) =< aux(224)
s(1113) =< aux(222)-1
s(1109) =< s(989)+aux(223)
s(1109) =< s(989)+aux(221)
s(1115) =< s(996)+aux(221)
s(1116) =< s(996)+aux(221)
s(1115) =< s(1109)*s(994)
s(1117) =< s(1109)*aux(222)
s(1116) =< s(1109)*s(1113)
s(1118) =< s(1115)
s(1119) =< s(1116)
s(1120) =< s(1117)*aux(224)
s(1121) =< s(972)*aux(222)
s(1122) =< s(1108)*aux(222)
s(1123) =< s(1122)
s(1092) =< s(1089)
s(1094) =< s(971)*aux(224)
s(1145) =< s(985)*aux(224)
s(1036) =< s(985)*aux(220)
s(1037) =< s(1036)
s(1040) =< aux(221)
s(1041) =< aux(221)
s(1041) =< aux(220)
s(1042) =< s(1033)
s(1042) =< aux(220)
s(1043) =< aux(220)
s(1044) =< aux(221)-1
s(1045) =< s(1042)*2
s(1040) =< s(1042)+aux(221)
s(1046) =< s(1045)+aux(221)
s(1047) =< s(1045)+aux(221)
s(1046) =< s(1040)*s(1043)
s(1048) =< s(1040)*aux(221)
s(1047) =< s(1040)*s(1044)
s(1049) =< s(1046)
s(1050) =< s(1047)
s(1051) =< s(1048)*aux(220)
s(1052) =< s(985)*aux(221)
s(1217) =< aux(221)
s(1224) =< aux(222)
s(1224) =< s(989)+aux(223)
s(1224) =< s(989)+aux(221)
s(1232) =< s(996)+aux(221)
s(1233) =< s(996)+aux(221)
s(1224) =< s(989)+s(1217)
s(1232) =< s(1224)*s(994)
s(1234) =< s(1224)*aux(222)
s(1233) =< s(1224)*s(1113)
s(1235) =< s(1232)
s(1236) =< s(1233)
s(1237) =< s(1234)*aux(224)
s(1172) =< s(996)+aux(221)
s(1173) =< s(996)+aux(221)
s(1172) =< s(1109)*s(994)
s(1173) =< s(1109)*s(1113)
s(1175) =< s(1172)
s(1176) =< s(1173)

  with precondition: [V1=2,V>=1,V11>=0] 

* Chain [35]: 8*s(1254)+3
  Such that:aux(226) =< V1
s(1254) =< aux(226)

  with precondition: [V=0,V1>=1] 

* Chain [34]: 3*s(1258)+42*s(1259)+24*s(1261)+8
  Such that:s(1256) =< 1
aux(227) =< V1
s(1258) =< s(1256)
s(1259) =< aux(227)
s(1260) =< s(1259)*aux(227)
s(1261) =< s(1260)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V11): 
-------------------------------------
* Chain [39] with precondition: [V1>=0,V>=0] 
    - Upper bound: 102*V1+145*V+24+V*V1+18*V*V+ (V1+V)* ((V1+V)* (15*V))+ (296*V1+296*V)+ (15*V1+15*V)*V+ (69*V1+69*V)* (V1+V)+ (45*V1+45*V)+75*V 
    - Complexity: n^3 
* Chain [38] with precondition: [V1=1,V>=1,V11>=0] 
    - Upper bound: 769*V+301+100*V*V+10*V*V*V+5*V*V11+ (V+V11)* ((V+V11)* (15*V))+468*V11+V11*V+82*V11*V11+ (388*V+388*V11)+ (15*V+15*V11)*V+ (69*V+69*V11)* (V+V11)+30*V 
    - Complexity: n^3 
* Chain [37] with precondition: [V1=1,V>=2] 
    - Upper bound: 38*V+13+6*V*V 
    - Complexity: n^2 
* Chain [36] with precondition: [V1=2,V>=1,V11>=0] 
    - Upper bound: 466*V+301+82*V*V+762*V11+5*V11*V+100*V11*V11+10*V11*V11*V11+ (V+V11)* ((V+V11)* (15*V11))+ (386*V+386*V11)+ (15*V+15*V11)*V11+ (69*V+69*V11)* (V+V11)+30*V11 
    - Complexity: n^3 
* Chain [35] with precondition: [V=0,V1>=1] 
    - Upper bound: 8*V1+3 
    - Complexity: n 
* Chain [34] with precondition: [V=1,V1>=1] 
    - Upper bound: 42*V1+11+24*V1*V1 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V11): max([34*V1+8+24*V1*V1+8*V1,107*V+11+12*V*V+max([102*V1+V*V1+ (V1+V)* ((V1+V)* (15*V))+ (296*V1+296*V)+ (15*V1+15*V)*V+ (69*V1+69*V)* (V1+V)+ (45*V1+45*V)+75*V,321*V+277+64*V*V+nat(V11)*468+nat(V11)*V+nat(V11)*82*nat(V11)+nat(V+V11)*386+nat(V+V11)*69*nat(V+V11)+max([nat(V11)*4*V+nat(V11)*294+nat(V11)*18*nat(V11)+nat(V11)*10*nat(V11)*nat(V11)+nat(V11)*15*nat(V+V11)*nat(V+V11)+nat(V+V11)*15*nat(V11)+nat(V11/2)*60,18*V*V+303*V+10*V*V*V+5*V*nat(V11)+15*V*nat(V+V11)*nat(V+V11)+nat(V+V11)*2+nat(V+V11)*15*V+30*V])])+ (38*V+10+6*V*V)])+3 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 114 ms.
   - Backward Invariants 64 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 170 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 1342 ms.
   - Equation cost structures 620 ms.
   - Phase cost structures 131 ms.
   - Chain cost structures 256 ms.
   - Solving cost expressions 50 ms.
* Total analysis performed in 1700 ms.

