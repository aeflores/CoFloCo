
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [rev1/3]
1. recursive [multiple] : [rev/2,rev2/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into rev1/3
1. SCC is partially evaluated into rev2/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations rev1/3 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 


#### Refined cost equations rev1/3 
* CE 12: rev1(V,V3,Out) = 1+ rev1(W3,X3,Out)
     [X3>=0,W3>=0,V>=0,W3+X3+1=V3] 
* CE 13: rev1(A,B,A) = 1
     [A>=1,B=0] 
* CE 14: rev1(V,V3,Out) = 1
     [Out=0,V3=0,V=0] 

### Cost equations --> "Loop" of rev1/3 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of rev1/3 
* Loop 10: rev1(A,B,A) [A>=1,B=0] 
* Loop 11: rev1(V,V3,Out) [Out=0,V3=0,V=0] 
* Loop 12: rev1(V,V3,Out)->  rev1(V',V3',Out)
                  [V3'>=0,V'>=0,V>=0,V'+V3'+1=V3] 

### Ranking functions of CR rev1(V,V3,Out) 
* RF of phase [12]: [V+V3,V3]

#### Partial ranking functions of CR rev1(V,V3,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V+V3
    V3


### Resulting Chains:rev1(V,V3,Out) 
* [[12],11]
* [[12],10]
* [11]
* [10]


### Merging Chains  rev1/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[11,[12]]] --> 3 
* [[10,[12]]] --> 4 


### Specialization of cost equations rev2/3 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17,18,19,20] 


#### Refined cost equations rev2/3 
* CE 15: rev2(V,V3,Out) = 1
     [V>=0,Out=0,V3=0] 
* CE 16: rev2(V,V3,Out) = 2+ rev2(W3,X3,Y3)
     [X3>=0,W3>=0,0>=Y3+1,W3+X3+1=V3,V+Y3+1=0,Out=0] 
* CE 17: rev2(V,V3,Out) = 2+ rev2(W3,X3,Y3)+ rev1(Z3,A4,B4):1+ rev2(C4,D4,E4)
     [X3>=0,W3>=0,0>=Y3,W3+X3+1=V3,V+Y3=0,E4+1=Out,D4=0,C4=0,B4=0,A4=0,Z3=0] 
* CE 18: rev2(V,V3,Out) = 2+ rev2(W3,X3,Y3)+ rev1(Z3,A4,Z3):2+ rev2(Z3,B4,C4)
     [Z3>=Y3,X3>=0,W3>=0,Z3>=1,Z3+C4+1=Out,W3+X3+1=V3,Z3=V+Y3,B4=0,A4=0] 
* CE 19: rev2(V,V3,Out) = 2+ rev2(W3,X3,Y3)+ rev1(Z3,A4,B4):3+ rev2(Z3,A4,C4)
     [Z3+A4>=Y3,X3>=0,W3>=0,A4>=1,Z3>=0,Z3+A4=V+Y3,W3+X3+1=V3,C4+1=Out,B4=0] 
* CE 20: rev2(V,V3,Out) = 2+ rev2(W3,X3,Y3)+ rev1(Z3,A4,B4):4+ rev2(Z3,A4,C4)
     [Z3+A4>=Y3,A4>=B4+1,X3>=0,W3>=0,B4>=1,Z3>=0,Z3+A4=V+Y3,B4+C4+1=Out,W3+X3+1=V3] 

### Cost equations --> "Loop" of rev2/3 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

#### Loops of rev2/3 
* Loop 13: rev2(V,V3,Out)->  rev2(V',V3',Out')  rev2(V'2,V3'2,Out'2)
                  [V+Out'+Out'2>=Out+V'2,Out>=Out'2+2,V3>=V'+1,V'2>=0,V'>=0,V>=0,V'2+V3'2=V+Out',V'+V3'+1=V3] 
* Loop 14: rev2(V,V3,Out)->  rev2(V',V3',Out')  rev2(V'2,V3'2,Out'2)
                  [V+Out'>=V'2+1,V3>=V'+1,V'2>=0,V'>=0,V>=0,V'2+V3'2=V+Out',V'+V3'+1=V3,Out=Out'2+1] 
* Loop 15: rev2(V,V3,Out)->  rev2(V',V3',Out')  rev2(V'2,V3'2,Out'2)
                  [V+Out'>=1,V3>=V'+1,V'>=0,V>=0,V+Out'+Out'2+1=Out,V+Out'=V'2,V'+V3'+1=V3,V3'2=0] 
* Loop 16: rev2(V,V3,Out)->  rev2(V',V3',Out')  rev2(V'2,V3'2,Out'2)
                  [V3>=V'+1,V'>=0,V>=0,V'+V3'+1=V3,V+Out'=0,Out=Out'2+1,V3'2=0,V'2=0] 
* Loop 17: rev2(V,V3,Out)->  rev2(V',V3',Out')
                  [V3'>=0,V'>=0,0>=Out'+1,V'+V3'+1=V3,V+Out'+1=0,Out=0] 
* Loop 18: rev2(V,V3,Out) [V>=0,Out=0,V3=0] 

### Ranking functions of CR rev2(V,V3,Out) 

#### Partial ranking functions of CR rev2(V,V3,Out) 
* Partial RF of phase [13,14,15,16,17]:
  - RF of loop [13:1,14:1,15:1,15:2,16:1,16:2,17:1]:
    V3 depends on loops [13:2,14:2] 
  - RF of loop [13:1,14:1,15:1,16:1,17:1]:
    V+V3 depends on loops [13:2,14:2,15:2] 


### Resulting Chains:rev2(V,V3,Out) 
* [multiple([13,14,15,16,17],[[],[18]])]...
* [18]


### Merging Chains  rev2/3 into  External patterns of execution 
* [[18]] --> 1 
* [[multiple([13,14,15,16,17],[[],[18]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21,22,23,24] 
* CE 4 is refined into CE [25,26,27,28] 
* CE 5 is refined into CE [29,30] 
* CE 3 is refined into CE [31] 


#### Refined cost equations start/2 
* CE 21: start(V,V3) = 1+ rev1(W3,X3,Y3):1+ rev2(Z3,A4,B4):1
     [B4=0,A4=0,Z3=0,Y3=0,X3=0,W3=0,V=1] 
* CE 22: start(V,V3) = 1+ rev1(W3,X3,W3):2+ rev2(W3,Y3,Z3):1
     [W3>=1,W3+1=V,Z3=0,Y3=0,X3=0] 
* CE 23: start(V,V3) = 1+ rev1(W3,X3,Y3):3+ rev2(W3,X3,Z3):2
     [X3>=1,W3>=0,W3+X3+1=V,Y3=0] 
* CE 24: start(V,V3) = 1+ rev1(W3,X3,Y3):4+ rev2(W3,X3,Z3):2
     [X3>=Y3+1,W3>=0,Y3>=1,W3+X3+1=V] 
* CE 25: start(V,V3) = 0+ rev1(W3,X3,Y3):1
     [Y3=0,X3=0,W3=0,V3=0,V=0] 
* CE 26: start(V,V3) = 0+ rev1(V,W3,V):2
     [V>=1,W3=0,V3=0] 
* CE 27: start(V,V3) = 0+ rev1(V,V3,W3):3
     [V3>=1,V>=0,W3=0] 
* CE 28: start(V,V3) = 0+ rev1(V,V3,W3):4
     [V3>=W3+1,W3>=1,V>=0] 
* CE 29: start(V,V3) = 0+ rev2(V,W3,X3):1
     [V>=0,X3=0,W3=0,V3=0] 
* CE 30: start(V,V3) = 0+ rev2(V,V3,W3):2
     [V3>=1,V>=0] 
* CE 31: start(V,V3) = 1
     [V=0] 

### Cost equations --> "Loop" of start/2 
* CEs [22] --> Loop 19 
* CEs [27,28] --> Loop 20 
* CEs [26,29] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [25,31] --> Loop 23 
* CEs [23,24] --> Loop 24 
* CEs [30] --> Loop 25 

#### Loops of start/2 
* Loop 19: start(V,V3) [V>=2] 
* Loop 20: start(V,V3) [V3>=1,V>=0] 
* Loop 21: start(V,V3) [V>=0,V3=0] 
* Loop 22: start(V,V3) [V=1] 
* Loop 23: start(V,V3) [V=0] 
* Loop 24: start(V,V3) [V>=2] 
* Loop 25: start(V,V3) [V3>=1,V>=0] 

### Ranking functions of CR start(V,V3) 

#### Partial ranking functions of CR start(V,V3) 


### Resulting Chains:start(V,V3) 
* [25]...
* [24]...
* [23]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 
* [[19]] --> 5 
* [[25]] --> 6 
* [[24]] --> 7 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:rev1(V,V3,Out) -> [rev1(V',V3',Out')] 
1
#### Cost of phase [12]:rev1(V,V3,Out) -> [rev1(V',V3',Out')] 
1*it(12)+0
  Such that:it(12) =< V+V3
it(12) =< V+V3-V'-V3'
it(12) =< V3
it(12) =< V3-V3'

#### Cost of phase [12]:rev1(V,V3,Out) -> [rev1(V',V3',Out')] 
1*it(12)+0
  Such that:it(12) =< V+V3
it(12) =< V+V3-V'-V3'
it(12) =< V3
it(12) =< V3-V3'

#### Cost of chains of rev1(V,V3,Out):
* Chain [[12],11]: 1*it(12)+1
  Such that:it(12) =< V3

  with precondition: [Out=0,V>=0,V3>=1] 

* Chain [[12],10]: 1*it(12)+1
  Such that:it(12) =< V3

  with precondition: [V>=0,Out>=1,V3>=Out+1] 

* Chain [11]: 1
  with precondition: [V=0,V3=0,Out=0] 

* Chain [10]: 1
  with precondition: [V3=0,V=Out,V>=1] 


#### Cost of loops [13,14,15,16,17] 

 * loop 13:rev2(V,V3,Out) -> [rev2(V',V3',Out'),rev2(V'2,V3'2,Out'2)] 
1*s(2)+3
  Such that:s(2) =< V3'2

 * loop 14:rev2(V,V3,Out) -> [rev2(V',V3',Out'),rev2(V'2,V3'2,Out'2)] 
1*s(4)+3
  Such that:s(4) =< V3'2

 * loop 15:rev2(V,V3,Out) -> [rev2(V',V3',Out'),rev2(V'2,V3'2,Out'2)] 
3
 * loop 16:rev2(V,V3,Out) -> [rev2(V',V3',Out'),rev2(V'2,V3'2,Out'2)] 
3
 * loop 17:rev2(V,V3,Out) -> [rev2(V',V3',Out')] 
2
#### Cost of phase [13,14,15,16,17]:rev2(V,V3,Out) -> [] 
6*it(13)+8*it(15)+1*it([18])+1*s(5)+1*s(6)+0
#### Cost of chains of rev2(V,V3,Out):
* Chain [multiple([13,14,15,16,17],[[],[18]])]...: 6*it(13)+8*it(15)+1*it([18])+1*s(5)+1*s(6)+0
  with precondition: [V>=0,V3>=1] 

* Chain [18]: 1
  with precondition: [V3=0,Out=0,V>=0] 


#### Cost of chains of start(V,V3):
* Chain [25]...: 17*s(7)+0
  with precondition: [V>=0,V3>=1] 

* Chain [24]...: 2*s(12)+34*s(13)+2
  Such that:aux(9) =< V
s(12) =< aux(9)

  with precondition: [V>=2] 

* Chain [23]: 1
  with precondition: [V=0] 

* Chain [22]: 3
  with precondition: [V=1] 

* Chain [21]: 1
  with precondition: [V3=0,V>=0] 

* Chain [20]: 2*s(24)+1
  Such that:aux(10) =< V3
s(24) =< aux(10)

  with precondition: [V>=0,V3>=1] 

* Chain [19]: 3
  with precondition: [V>=2] 


Closed-form bounds of start(V,V3): 
-------------------------------------
* Chain [25]... with precondition: [V>=0,V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [22] with precondition: [V=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [21] with precondition: [V3=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V>=0,V3>=1] 
    - Upper bound: 2*V3+1 
    - Complexity: n 
* Chain [19] with precondition: [V>=2] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of start(V,V3): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 27 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 57 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 81 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 66 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 204 ms.

