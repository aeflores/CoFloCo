
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive [non_tail] : [reverse/2]
2. recursive  : [shuffle/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into reverse/2
2. SCC is partially evaluated into shuffle/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations app/3 
* CE 11: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 
* CE 12: app(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of app/3 
* CEs [12] --> Loop 8 
* CEs [11] --> Loop 9 

#### Loops of app/3 
* Loop 8: app(A,B,B) [B>=0,A=0] 
* Loop 9: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [9]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[9],8]
* [8]


### Merging Chains  app/3 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[9]]] --> 2 


### Specialization of cost equations reverse/2 
* CE 8 is refined into CE [13,14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations reverse/2 
* CE 13: reverse(V1,Out) = 1+ reverse(W1,X1)+ app(Y1,Out,Out):1
     [V1>=Out,Out>=1,Out+W1=V1,X1=0,Y1=0] 
* CE 14: reverse(V1,Out) = 1+ reverse(W1,X1)+ app(X1,Y1,Out):2
     [V1+X1>=Out,Out>=X1+1,X1>=1,Out+W1=V1+X1,Out=X1+Y1] 
* CE 15: reverse(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of reverse/2 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of reverse/2 
* Loop 10: reverse(V1,Out) [Out=0,V1=0] 
* Loop 11: reverse(V1,Out)->  reverse(V1',Out')
                  [Out+V1'>=V1+1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 12: reverse(V1,Out)->  reverse(V1',Out')
                  [V1>=Out,Out>=1,V1=Out+V1',Out'=0] 

### Ranking functions of CR reverse(V1,Out) 
* RF of phase [11]: [V1]

#### Partial ranking functions of CR reverse(V1,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1


### Resulting Chains:reverse(V1,Out) 
* [[11],12,10]
* [12,10]
* [10]


### Merging Chains  reverse/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,12],[10,12,[11]]] --> 2 


### Specialization of cost equations shuffle/2 
* CE 10 is refined into CE [16,17] 
* CE 9 is refined into CE [18] 


#### Refined cost equations shuffle/2 
* CE 16: shuffle(V1,Out) = 1+ reverse(W1,X1):1+ shuffle(Y1,Z1)
     [V1>=1,V1+Z1=Out,Y1=0,X1=0,W1=0] 
* CE 17: shuffle(V1,Out) = 1+ reverse(W1,W1):2+ shuffle(W1,X1)
     [V1>=W1+1,W1>=1,Out+W1=V1+X1] 
* CE 18: shuffle(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of shuffle/2 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 

#### Loops of shuffle/2 
* Loop 13: shuffle(V1,Out) [Out=0,V1=0] 
* Loop 14: shuffle(V1,Out)->  shuffle(V1',Out')
                  [V1>=V1'+1,V1'>=1,V1+Out'=Out+V1'] 
* Loop 15: shuffle(V1,Out)->  shuffle(V1',Out')
                  [V1>=1,V1+Out'=Out,V1'=0] 

### Ranking functions of CR shuffle(V1,Out) 
* RF of phase [14]: [V1-1]

#### Partial ranking functions of CR shuffle(V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1-1


### Resulting Chains:shuffle(V1,Out) 
* [[14],15,13]
* [15,13]
* [13]


### Merging Chains  shuffle/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,15],[13,15,[14]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [19,20] 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23,24] 


#### Refined cost equations start/2 
* CE 19: start(V1,V) = 0+ app(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 20: start(V1,V) = 0+ app(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 21: start(V1,V) = 0+ reverse(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 22: start(V1,V) = 0+ reverse(V1,V1):2
     [V1>=1] 
* CE 23: start(V1,V) = 0+ shuffle(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 24: start(V1,V) = 0+ shuffle(V1,V1):2
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [20,22,24] --> Loop 16 
* CEs [19,21,23] --> Loop 17 

#### Loops of start/2 
* Loop 16: start(V1,V) [V1>=1] 
* Loop 17: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [17]
* [16]


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [9]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[9],8]: 1*it(9)+1
  Such that:it(9) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [8]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [11] 

 * loop 11:reverse(V1,Out) -> [reverse(V1',Out')] 
1*s(2)+2
  Such that:s(2) =< V1'

#### Cost of phase [11]:reverse(V1,Out) -> [reverse(V1',Out')] 
2*it(11)+1*s(3)+0
  Such that:it(11) =< V1-V1'
aux(2) =< V1
it(11) =< aux(2)
s(3) =< it(11)*aux(2)

#### Cost of chains of reverse(V1,Out):
* Chain [[11],12,10]: 2*it(11)+1*s(3)+3
  Such that:aux(3) =< Out
it(11) =< aux(3)
s(3) =< it(11)*aux(3)

  with precondition: [Out=V1,Out>=2] 

* Chain [12,10]: 3
  with precondition: [V1=Out,V1>=1] 

* Chain [10]: 1
  with precondition: [V1=0,Out=0] 


#### Cost of loops [14] 

 * loop 14:shuffle(V1,Out) -> [shuffle(V1',Out')] 
2*s(11)+1*s(12)+4
  Such that:s(10) =< V1'
s(11) =< s(10)
s(12) =< s(11)*s(10)

#### Cost of phase [14]:shuffle(V1,Out) -> [shuffle(V1',Out')] 
4*it(14)+2*s(13)+1*s(14)+0
  Such that:it(14) =< V1-V1'
aux(5) =< V1
it(14) =< aux(5)
aux(4) =< aux(5)
s(15) =< it(14)*aux(4)
s(13) =< s(15)
s(14) =< s(13)*aux(5)

#### Cost of chains of shuffle(V1,Out):
* Chain [[14],15,13]: 4*it(14)+2*s(13)+1*s(14)+3
  Such that:aux(6) =< Out
it(14) =< aux(6)
aux(4) =< aux(6)
s(15) =< it(14)*aux(4)
s(13) =< s(15)
s(14) =< s(13)*aux(6)

  with precondition: [V1=Out,V1>=2] 

* Chain [15,13]: 3
  with precondition: [V1=Out,V1>=1] 

* Chain [13]: 1
  with precondition: [V1=0,Out=0] 


#### Cost of chains of start(V1,V):
* Chain [17]: 1
  with precondition: [V1=0] 

* Chain [16]: 7*s(22)+1*s(25)+2*s(30)+1*s(31)+3
  Such that:aux(7) =< V1
s(22) =< aux(7)
s(25) =< s(22)*aux(7)
s(28) =< aux(7)
s(29) =< s(22)*s(28)
s(30) =< s(29)
s(31) =< s(30)*aux(7)

  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [17] with precondition: [V1=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [16] with precondition: [V1>=1] 
    - Upper bound: 7*V1+3+3*V1*V1+V1*V1*V1 
    - Complexity: n^3 

### Maximum cost of start(V1,V): 7*V1+2+3*V1*V1+V1*V1*V1+1 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 27 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 14 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 101 ms.

