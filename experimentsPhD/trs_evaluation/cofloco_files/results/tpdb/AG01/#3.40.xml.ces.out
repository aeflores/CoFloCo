
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [minus/3]
1. recursive  : [plus/3]
2. recursive  : [quot/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into quot/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/3 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations minus/3 
* CE 14: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 16: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [16] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of minus/3 
* Loop 10: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 11: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 12: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [10]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  minus/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[12,[10]]] --> 3 


### Specialization of cost equations plus/3 
* CE 10 is refined into CE [17] 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations plus/3 
* CE 17: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 18: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 19: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [19] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of plus/3 
* Loop 13: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 14: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 15: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [13]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  plus/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[15,[13]]] --> 3 
* [[14,[13]]] --> 4 


### Specialization of cost equations quot/3 
* CE 6 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 5 is refined into CE [22,23,24] 


#### Refined cost equations quot/3 
* CE 20: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 21: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 22: quot(V1,V,Out) = 1+ minus(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 23: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 24: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [24] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [20,21] --> Loop 19 

#### Loops of quot/3 
* Loop 16: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 17: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 18: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 19: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [16]: [V1-1,V1-V+1]
* RF of phase [18]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V1-1
    V1-V+1
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[18],19]
* [[18],17,19]
* [[16],19]
* [[16],17,19]
* [19]
* [17,19]


### Merging Chains  quot/3 into  External patterns of execution 
* [[19,17,[18]],[19,[18]]] --> 1 
* [[19]] --> 2 
* [[19,17]] --> 3 
* [[19,[16]]] --> 4 
* [[19,17,[16]]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [25,26,27,28,29] 
* CE 3 is refined into CE [30,31,32,33] 
* CE 4 is refined into CE [34,35,36] 


#### Refined cost equations start/2 
* CE 25: start(V1,V) = 0+ quot(V1,W1,X1):1
     [V1>=X1,X1>=1,W1=1,V=1] 
* CE 26: start(V1,V) = 0+ quot(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 27: start(V1,V) = 0+ quot(V1,V,W1):3
     [V>=1,V1>=1,W1=1] 
* CE 28: start(V1,V) = 0+ quot(V1,V,W1):4
     [V1+2>=2*W1+V,W1>=1,V>=2] 
* CE 29: start(V1,V) = 0+ quot(V1,V,W1):5
     [V1+3>=2*W1+V,W1>=2,V>=2] 
* CE 30: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 31: start(V1,V) = 0+ plus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ plus(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 33: start(V1,V) = 0+ plus(V1,V,W1):4
     [V1>=W1,W1>=1,V>=0] 
* CE 34: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 35: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 36: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [25] --> Loop 20 
* CEs [34] --> Loop 21 
* CEs [26,27,28,29,30,31,32,33,35,36] --> Loop 22 

#### Loops of start/2 
* Loop 20: start(V1,V) [V1>=1,V=1] 
* Loop 21: start(V1,V) [V1>=0,V=0] 
* Loop 22: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [22]
* [21]
* [20]


### Merging Chains  start/2 into  External patterns of execution 
* [[21],[22]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [10]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [12]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [11]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [13] 

 * loop 13:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [13]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of phase [13]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [15]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [18] 

 * loop 18:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [18]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'

#### Cost of phase [18]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'

#### Cost of loops [16] 

 * loop 16:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V'

#### Cost of phase [16]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(16)+1*s(5)+0
  Such that:it(16) =< V1-V+1
it(16) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(16) =< aux(1)
s(5) =< aux(1)
it(16) =< aux(2)
s(5) =< aux(2)

#### Cost of phase [16]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(16)+1*s(5)+0
  Such that:it(16) =< V1-V+1
it(16) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(16) =< aux(1)
s(5) =< aux(1)
it(16) =< aux(2)
s(5) =< aux(2)

#### Cost of chains of quot(V1,V,Out):
* Chain [[18],19]: 2*it(18)+1
  Such that:it(18) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[18],17,19]: 2*it(18)+1*s(2)+2
  Such that:s(2) =< 1
it(18) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[16],19]: 2*it(16)+1*s(5)+1
  Such that:it(16) =< V1-V+1
aux(3) =< V1
it(16) =< aux(3)
s(5) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[16],17,19]: 2*it(16)+1*s(2)+1*s(5)+2
  Such that:it(16) =< V1-V+1
s(2) =< V
aux(4) =< V1
it(16) =< aux(4)
s(5) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [19]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [17,19]: 1*s(2)+2
  Such that:s(2) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [22]: 4*s(9)+4*s(10)+4*s(12)+2
  Such that:aux(6) =< V1
aux(7) =< V1-V+1
aux(8) =< V
s(12) =< aux(6)
s(10) =< aux(7)
s(9) =< aux(8)
s(10) =< aux(6)

  with precondition: [V1>=0,V>=0] 

* Chain [21]: 1
  with precondition: [V=0,V1>=0] 

* Chain [20]: 1*s(21)+4*s(23)+2
  Such that:s(21) =< 1
s(22) =< V1
s(23) =< s(22)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [22] with precondition: [V1>=0,V>=0] 
    - Upper bound: 4*V1+4*V+2+nat(V1-V+1)*4 
    - Complexity: n 
* Chain [21] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+3 
    - Complexity: n 

### Maximum cost of start(V1,V): 4*V1+1+max([1,nat(V1-V+1)*4+4*V])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 32 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 44 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 61 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 172 ms.

