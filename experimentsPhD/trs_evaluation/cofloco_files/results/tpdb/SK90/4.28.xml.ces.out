
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f/3]
1. recursive  : [fun/3]
2. recursive  : [max/2]
3. recursive  : [mem/3]
4. non_recursive  : [null/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f/3
1. SCC is partially evaluated into fun/3
2. SCC is partially evaluated into max/2
3. SCC is partially evaluated into mem/3
4. SCC is partially evaluated into null/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/3 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 


#### Refined cost equations f/3 
* CE 18: f(V,V1,Out) = 1+ f(V,W1,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 
* CE 19: f(V,V1,Out) = 1
     [V>=0,V+1=Out,V1=0] 

### Cost equations --> "Loop" of f/3 
* CEs [19] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of f/3 
* Loop 13: f(V,V1,Out) [V>=0,V+1=Out,V1=0] 
* Loop 14: f(V,V1,Out)->  f(V,V1',Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 

### Ranking functions of CR f(V,V1,Out) 
* RF of phase [14]: [V1]

#### Partial ranking functions of CR f(V,V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1


### Resulting Chains:f(V,V1,Out) 
* [[14],13]
* [13]


### Merging Chains  f/3 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[14]]] --> 2 


### Specialization of cost equations fun/3 
* CE 13 is refined into CE [20] 
* CE 12 is refined into CE [21] 


#### Refined cost equations fun/3 
* CE 20: fun(A,B,A) = 1
     [A>=0,B=0] 
* CE 21: fun(V,V1,Out) = 1+ fun(V,W1,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of fun/3 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of fun/3 
* Loop 15: fun(V,V1,Out)->  fun(V,V1',Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 16: fun(A,B,A) [A>=0,B=0] 

### Ranking functions of CR fun(V,V1,Out) 
* RF of phase [15]: [V1]

#### Partial ranking functions of CR fun(V,V1,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1


### Resulting Chains:fun(V,V1,Out) 
* [[15],16]
* [16]


### Merging Chains  fun/3 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations max/2 
* CE 9 is refined into CE [22] 
* CE 11 is refined into CE [23] 
* CE 10 is refined into CE [24] 


#### Refined cost equations max/2 
* CE 22: max(V,Out) = 1
     [V>=2,V=Out+1] 
* CE 23: max(V,Out) = 0
     [V>=0,Out=0] 
* CE 24: max(V,Out) = 1+ max(W,X)
     [V>=3,V=W+1,X+1=Out] 

### Cost equations --> "Loop" of max/2 
* CEs [24] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of max/2 
* Loop 17: max(V,Out)->  max(V',Out')
                  [V>=3,Out=Out'+1,V=V'+1] 
* Loop 18: max(V,Out) [V>=2,V=Out+1] 
* Loop 19: max(V,Out) [V>=0,Out=0] 

### Ranking functions of CR max(V,Out) 
* RF of phase [17]: [V-2]

#### Partial ranking functions of CR max(V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V-2


### Resulting Chains:max(V,Out) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  max/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18],[18,[17]]] --> 2 
* [[19,[17]]] --> 3 


### Specialization of cost equations mem/3 
* CE 17 is refined into CE [25] 
* CE 16 is refined into CE [26] 


#### Refined cost equations mem/3 
* CE 25: mem(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 26: mem(V,V1,Out) = 1+ mem(W1,V1,X1)
     [Out>=V1+X1+2,W1>=0,V1>=0,V+V1+X1+1=Out+W1] 

### Cost equations --> "Loop" of mem/3 
* CEs [26] --> Loop 20 
* CEs [25] --> Loop 21 

#### Loops of mem/3 
* Loop 20: mem(V,V1,Out)->  mem(V',V1,Out')
                  [Out>=V1+Out'+2,V'>=0,V1>=0,V+V1+Out'+1=Out+V'] 
* Loop 21: mem(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR mem(V,V1,Out) 
* RF of phase [20]: [V]

#### Partial ranking functions of CR mem(V,V1,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V


### Resulting Chains:mem(V,V1,Out) 
* [[20],21]
* [21]


### Merging Chains  mem/3 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[20]]] --> 2 


### Specialization of cost equations null/2 
* CE 15 is refined into CE [27] 
* CE 14 is refined into CE [28] 


#### Refined cost equations null/2 
* CE 27: null(V,Out) = 1
     [V>=1,Out=0] 
* CE 28: null(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of null/2 
* CEs [27] --> Loop 22 
* CEs [28] --> Loop 23 

#### Loops of null/2 
* Loop 22: null(V,Out) [V>=1,Out=0] 
* Loop 23: null(V,Out) [Out=1,V=0] 

### Ranking functions of CR null(V,Out) 

#### Partial ranking functions of CR null(V,Out) 


### Resulting Chains:null(V,Out) 
* [23]
* [22]


### Merging Chains  null/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [29,30] 
* CE 3 is refined into CE [31,32,33] 
* CE 4 is refined into CE [34,35] 
* CE 5 is refined into CE [36,37] 
* CE 6 is refined into CE [38,39] 


#### Refined cost equations start/2 
* CE 29: start(V,V1) = 0+ f(W1,X1,Y1):1
     [Y1>=1,Y1=W1+1,Y1=V+1,X1=0,V1=0] 
* CE 30: start(V,V1) = 0+ f(V,W1,X1):2
     [X1>=V+2,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 31: start(V,V1) = 0+ max(V,W1):1
     [V>=0,W1=0] 
* CE 32: start(V,V1) = 0+ max(W1,X1):2
     [X1>=1,X1+1=W1,X1+1=V] 
* CE 33: start(V,V1) = 0+ max(V,W1):3
     [V>=W1+2,W1>=1] 
* CE 34: start(V,V1) = 0+ fun(V,W1,V):1
     [V>=0,W1=0,V1=0] 
* CE 35: start(V,V1) = 0+ fun(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1,X1=V+V1] 
* CE 36: start(V,V1) = 0+ null(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 37: start(V,V1) = 0+ null(V,W1):2
     [V>=1,W1=0] 
* CE 38: start(V,V1) = 0+ mem(W1,V1,X1):1
     [V1>=0,X1=0,W1=0,V=0] 
* CE 39: start(V,V1) = 0+ mem(V,V1,W1):2
     [W1>=V+V1+1,V1>=0,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [29,34] --> Loop 24 
* CEs [30,31,32,33,35,36,37,38,39] --> Loop 25 

#### Loops of start/2 
* Loop 24: start(V,V1) [V>=0,V1=0] 
* Loop 25: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [25]
* [24]


### Merging Chains  start/2 into  External patterns of execution 
* [[24],[25]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:f(V,V1,Out) -> [f(V',V1',Out')] 
1
#### Cost of phase [14]:f(V,V1,Out) -> [f(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of f(V,V1,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [V+V1+1=Out,V>=0,V1>=1] 

* Chain [13]: 1
  with precondition: [V1=0,V+1=Out,V>=0] 


#### Cost of loops [15] 

 * loop 15:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1
#### Cost of phase [15]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of chains of fun(V,V1,Out):
* Chain [[15],16]: 1*it(15)+1
  Such that:it(15) =< V1

  with precondition: [V+V1=Out,V>=0,V1>=1] 

* Chain [16]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [17] 

 * loop 17:max(V,Out) -> [max(V',Out')] 
1
#### Cost of phase [17]:max(V,Out) -> [max(V',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:max(V,Out) -> [max(V',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of chains of max(V,Out):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< Out

  with precondition: [Out>=1,V>=Out+2] 

* Chain [[17],18]: 1*it(17)+1
  Such that:it(17) =< Out

  with precondition: [V=Out+1,V>=3] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0] 

* Chain [18]: 1
  with precondition: [V=Out+1,V>=2] 


#### Cost of loops [20] 

 * loop 20:mem(V,V1,Out) -> [mem(V',V1',Out')] 
1
#### Cost of phase [20]:mem(V,V1,Out) -> [mem(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of chains of mem(V,V1,Out):
* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [V>=1,V1>=0,Out>=V+V1+1] 

* Chain [21]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of chains of null(V,Out):
* Chain [23]: 1
  with precondition: [V=0,Out=1] 

* Chain [22]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1):
* Chain [25]: 2*s(2)+3*s(3)+1
  Such that:aux(1) =< V
aux(2) =< V1
s(3) =< aux(1)
s(2) =< aux(2)

  with precondition: [V>=0] 

* Chain [24]: 1
  with precondition: [V1=0,V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [25] with precondition: [V>=0] 
    - Upper bound: 3*V+1+nat(V1)*2 
    - Complexity: n 
* Chain [24] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): nat(V1)*2+3*V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 73 ms.
   - Backward Invariants 35 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 127 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 104 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 31 ms.
   - Chain cost structures 34 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 422 ms.

