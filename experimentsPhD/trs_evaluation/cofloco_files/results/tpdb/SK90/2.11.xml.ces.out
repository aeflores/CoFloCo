
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [minus/3]
1. recursive  : [plus/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations minus/3 
* CE 9: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 10: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 11: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of minus/3 
* Loop 7: minus(A,B,A) [A>=0,B=0] 
* Loop 8: minus(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 9: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [9]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[9],8]
* [[9],7]
* [8]
* [7]


### Merging Chains  minus/3 into  External patterns of execution 
* [[8]] --> 1 
* [[7]] --> 2 
* [[8,[9]]] --> 3 
* [[7,[9]]] --> 4 


### Specialization of cost equations plus/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations plus/3 
* CE 12: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 13: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of plus/3 
* Loop 10: plus(A,B,B) [B>=0,A=0] 
* Loop 11: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [11]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[11],10]
* [10]


### Merging Chains  plus/3 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[11]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [14,15] 
* CE 3 is refined into CE [16,17,18,19] 


#### Refined cost equations start/2 
* CE 14: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 15: start(V1,V) = 0+ plus(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 16: start(V1,V) = 0+ minus(W1,V,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 17: start(V1,V) = 0+ minus(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 18: start(V1,V) = 0+ minus(V1,V,W1):3
     [V>=V1,V1>=1,W1=0] 
* CE 19: start(V1,V) = 0+ minus(W1,V,X1):4
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [15,18,19] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [14,16] --> Loop 14 

#### Loops of start/2 
* Loop 12: start(V1,V) [V>=0,V1>=1] 
* Loop 13: start(V1,V) [V1>=0,V=0] 
* Loop 14: start(V1,V) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [14]
* [13]
* [12]


### Merging Chains  start/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [9]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[9],8]: 1*it(9)+1
  Such that:it(9) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[9],7]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [8]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [7]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [11] 

 * loop 11:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [11]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [10]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [14]: 1
  with precondition: [V1=0,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,V1>=0] 

* Chain [12]: 2*s(1)+1*s(3)+1
  Such that:s(3) =< V
aux(1) =< V1
s(1) =< aux(1)

  with precondition: [V1>=1,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [14] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V1>=1,V>=0] 
    - Upper bound: 2*V1+V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 2*V1+V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 22 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 78 ms.

