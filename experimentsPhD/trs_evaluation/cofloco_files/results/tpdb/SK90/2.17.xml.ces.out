
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [sum/2]
1. recursive  : [sum1/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into sum/2
1. SCC is partially evaluated into sum1/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations sum/2 
* CE 4 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations sum/2 
* CE 10: sum(V,Out) = 1
     [Out=0,V=0] 
* CE 11: sum(V,Out) = 0
     [V>=0,Out=0] 
* CE 12: sum(V,Out) = 1+ sum(W,X)
     [W>=0,W+X+2=Out,W+1=V] 

### Cost equations --> "Loop" of sum/2 
* CEs [12] --> Loop 6 
* CEs [10,11] --> Loop 7 

#### Loops of sum/2 
* Loop 6: sum(V,Out)->  sum(V',Out')
                  [V'>=0,V'+Out'+2=Out,V'+1=V] 
* Loop 7: sum(V,Out) [V>=0,Out=0] 

### Ranking functions of CR sum(V,Out) 
* RF of phase [6]: [V]

#### Partial ranking functions of CR sum(V,Out) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V


### Resulting Chains:sum(V,Out) 
* [[6],7]
* [7]


### Merging Chains  sum/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations sum1/2 
* CE 7 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 


#### Refined cost equations sum1/2 
* CE 13: sum1(V,Out) = 1
     [Out=0,V=0] 
* CE 14: sum1(V,Out) = 0
     [V>=0,Out=0] 
* CE 15: sum1(V,Out) = 1+ sum1(W,X)
     [W>=0,X+2*W+3=Out,W+1=V] 

### Cost equations --> "Loop" of sum1/2 
* CEs [15] --> Loop 8 
* CEs [13,14] --> Loop 9 

#### Loops of sum1/2 
* Loop 8: sum1(V,Out)->  sum1(V',Out')
                  [V'>=0,Out'+2*V'+3=Out,V'+1=V] 
* Loop 9: sum1(V,Out) [V>=0,Out=0] 

### Ranking functions of CR sum1(V,Out) 
* RF of phase [8]: [V]

#### Partial ranking functions of CR sum1(V,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V


### Resulting Chains:sum1(V,Out) 
* [[8],9]
* [9]


### Merging Chains  sum1/2 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[8]]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [16,17] 
* CE 3 is refined into CE [18,19] 


#### Refined cost equations start/1 
* CE 16: start(V) = 0+ sum(V,W):1
     [V>=0,W=0] 
* CE 17: start(V) = 0+ sum(V,W):2
     [W>=V+1,V>=1] 
* CE 18: start(V) = 0+ sum1(V,W):1
     [V>=0,W=0] 
* CE 19: start(V) = 0+ sum1(V,W):2
     [W>=2*V+1,V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [16,17,18,19] --> Loop 10 

#### Loops of start/1 
* Loop 10: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [10]


### Merging Chains  start/1 into  External patterns of execution 
* [[10]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:sum(V,Out) -> [sum(V',Out')] 
1
#### Cost of phase [6]:sum(V,Out) -> [sum(V',Out')] 
1*it(6)+0
  Such that:it(6) =< V
it(6) =< V-V'

#### Cost of chains of sum(V,Out):
* Chain [[6],7]: 1*it(6)+1
  Such that:it(6) =< V

  with precondition: [V>=1,Out>=V+1] 

* Chain [7]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [8] 

 * loop 8:sum1(V,Out) -> [sum1(V',Out')] 
1
#### Cost of phase [8]:sum1(V,Out) -> [sum1(V',Out')] 
1*it(8)+0
  Such that:it(8) =< V
it(8) =< V-V'

#### Cost of chains of sum1(V,Out):
* Chain [[8],9]: 1*it(8)+1
  Such that:it(8) =< V

  with precondition: [V>=1,Out>=2*V+1] 

* Chain [9]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V):
* Chain [10]: 2*s(1)+1
  Such that:aux(1) =< V
s(1) =< aux(1)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [10] with precondition: [V>=0] 
    - Upper bound: 2*V+1 
    - Complexity: n 

### Maximum cost of start(V): 2*V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 40 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 149 ms.

