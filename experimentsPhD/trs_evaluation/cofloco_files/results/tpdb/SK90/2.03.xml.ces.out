
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [minus/2]
1. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/2
1. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/2 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


#### Refined cost equations minus/2 
* CE 6: minus(V,Out) = 0
     [V>=0,Out=0] 
* CE 7: minus(V,Out) = 1+ minus(W,X)
     [W>=0,X+1=Out,W+1=V] 
* CE 8: minus(V,Out) = 1+ minus(W,X)+ minus(Y,Z)
     [Y>=0,W>=0,X+Z+1=Out,W+Y+1=V] 

### Cost equations --> "Loop" of minus/2 
* CEs [8] --> Loop 5 
* CEs [7] --> Loop 6 
* CEs [6] --> Loop 7 

#### Loops of minus/2 
* Loop 5: minus(V,Out)->  minus(V',Out')  minus(V'2,Out'2)
                  [V'2>=0,V'>=0,Out=Out'+Out'2+1,V'+V'2+1=V] 
* Loop 6: minus(V,Out)->  minus(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 7: minus(V,Out) [V>=0,Out=0] 

### Ranking functions of CR minus(V,Out) 
* RF of phase [5,6]: [V]

#### Partial ranking functions of CR minus(V,Out) 
* Partial RF of phase [5,6]:
  - RF of loop [5:1,5:2,6:1]:
    V


### Resulting Chains:minus(V,Out) 
* [7]
* [multiple([5,6],[[7]])]


### Merging Chains  minus/2 into  External patterns of execution 
* [[7]] --> 1 
* [[multiple([5,6],[[7]])]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [9,10] 


#### Refined cost equations start/1 
* CE 9: start(V) = 0+ minus(V,W):1
     [V>=0,W=0] 
* CE 10: start(V) = 0+ minus(V,W):2
     [V>=W,W>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [9,10] --> Loop 8 

#### Loops of start/1 
* Loop 8: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [8]


### Merging Chains  start/1 into  External patterns of execution 
* [[8]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [5,6] 

 * loop 5:minus(V,Out) -> [minus(V',Out'),minus(V'2,Out'2)] 
1
 * loop 6:minus(V,Out) -> [minus(V',Out')] 
1
#### Cost of phase [5,6]:minus(V,Out) -> [] 
2*it(5)+0
  Such that:aux(1) =< V
it(5) =< aux(1)

#### Cost of chains of minus(V,Out):
* Chain [7]: 0
  with precondition: [Out=0,V>=0] 

* Chain [multiple([5,6],[[7]])]: 2*it(5)+0
  Such that:aux(1) =< V
it(5) =< aux(1)

  with precondition: [Out>=1,V>=Out] 


#### Cost of chains of start(V):
* Chain [8]: 2*s(2)+0
  Such that:s(1) =< V
s(2) =< s(1)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [8] with precondition: [V>=0] 
    - Upper bound: 2*V 
    - Complexity: n 

### Maximum cost of start(V): 2*V 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 2 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 12 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 17 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 46 ms.

