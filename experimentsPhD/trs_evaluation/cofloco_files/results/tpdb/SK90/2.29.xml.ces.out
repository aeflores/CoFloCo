
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [divp/3]
1. recursive  : [prime1/3]
2. non_recursive  : [prime/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into prime1/3
2. SCC is partially evaluated into prime/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations prime1/3 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations prime1/3 
* CE 11: prime1(V,V2,Out) = 2+ prime1(V,W2,X2)
     [V2>=2,V>=0,V+V2+X2+4=Out,V2=W2+1] 
* CE 12: prime1(V,V2,Out) = 1
     [V>=0,Out=1,V2=1] 
* CE 13: prime1(V,V2,Out) = 1
     [V>=0,Out=0,V2=0] 

### Cost equations --> "Loop" of prime1/3 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of prime1/3 
* Loop 8: prime1(V,V2,Out) [V>=0,Out=1,V2=1] 
* Loop 9: prime1(V,V2,Out) [V>=0,Out=0,V2=0] 
* Loop 10: prime1(V,V2,Out)->  prime1(V,V2',Out')
                  [V2>=2,V>=0,V+V2+Out'+4=Out,V2=V2'+1] 

### Ranking functions of CR prime1(V,V2,Out) 
* RF of phase [10]: [V2-1]

#### Partial ranking functions of CR prime1(V,V2,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V2-1


### Resulting Chains:prime1(V,V2,Out) 
* [[10],8]
* [9]
* [8]


### Merging Chains  prime1/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[8,[10]]] --> 3 


### Specialization of cost equations prime/2 
* CE 7 is refined into CE [14,15] 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17] 


#### Refined cost equations prime/2 
* CE 14: prime(V,Out) = 1+ prime1(W,X,Y):2
     [Y=1,X=1,W=2,Out=1,V=2] 
* CE 15: prime(V,Out) = 1+ prime1(V,W,Out):3
     [Out+14>=8*V,V>=3,V=W+1] 
* CE 16: prime(V,Out) = 1
     [Out=0,V=1] 
* CE 17: prime(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of prime/2 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of prime/2 
* Loop 11: prime(V,Out) [Out+14>=8*V,V>=3] 
* Loop 12: prime(V,Out) [Out=1,V=2] 
* Loop 13: prime(V,Out) [Out=0,V=1] 
* Loop 14: prime(V,Out) [Out=0,V=0] 

### Ranking functions of CR prime(V,Out) 

#### Partial ranking functions of CR prime(V,Out) 


### Resulting Chains:prime(V,Out) 
* [14]
* [13]
* [12]
* [11]


### Merging Chains  prime/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 
* [[11]] --> 4 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [18,19,20,21] 
* CE 3 is refined into CE [22,23,24] 
* CE 4 is refined into CE [25] 


#### Refined cost equations start/2 
* CE 18: start(V,V2) = 0+ prime(W2,X2):1
     [X2=0,W2=0,V=0] 
* CE 19: start(V,V2) = 0+ prime(W2,X2):2
     [X2=0,W2=1,V=1] 
* CE 20: start(V,V2) = 0+ prime(W2,X2):3
     [X2=1,W2=2,V=2] 
* CE 21: start(V,V2) = 0+ prime(V,W2):4
     [W2+14>=8*V,V>=3] 
* CE 22: start(V,V2) = 0+ prime1(V,W2,X2):1
     [V>=0,X2=0,W2=0,V2=0] 
* CE 23: start(V,V2) = 0+ prime1(V,W2,X2):2
     [V>=0,X2=1,W2=1,V2=1] 
* CE 24: start(V,V2) = 0+ prime1(V,V2,W2):3
     [W2+7>=7*V2+V,V2>=2,V>=0] 
* CE 25: start(V,V2) = 1
     [V2>=0,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [21] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [22,24,25] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18] --> Loop 20 

#### Loops of start/2 
* Loop 15: start(V,V2) [V>=3] 
* Loop 16: start(V,V2) [V>=0,V2=1] 
* Loop 17: start(V,V2) [V2>=0,V>=0] 
* Loop 18: start(V,V2) [V=2] 
* Loop 19: start(V,V2) [V=1] 
* Loop 20: start(V,V2) [V=0] 

### Ranking functions of CR start(V,V2) 

#### Partial ranking functions of CR start(V,V2) 


### Resulting Chains:start(V,V2) 
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[16],[17]] --> 4 
* [[15]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:prime1(V,V2,Out) -> [prime1(V',V2',Out')] 
2
#### Cost of phase [10]:prime1(V,V2,Out) -> [prime1(V',V2',Out')] 
2*it(10)+0
  Such that:it(10) =< V2
it(10) =< V2-V2'

#### Cost of chains of prime1(V,V2,Out):
* Chain [[10],8]: 2*it(10)+1
  Such that:it(10) =< V2

  with precondition: [V>=0,V2>=2,Out+7>=7*V2+V] 

* Chain [9]: 1
  with precondition: [V2=0,Out=0,V>=0] 

* Chain [8]: 1
  with precondition: [V2=1,Out=1,V>=0] 


#### Cost of chains of prime(V,Out):
* Chain [14]: 1
  with precondition: [V=0,Out=0] 

* Chain [13]: 1
  with precondition: [V=1,Out=0] 

* Chain [12]: 2
  with precondition: [V=2,Out=1] 

* Chain [11]: 2*s(1)+2
  Such that:s(1) =< V

  with precondition: [V>=3,Out+14>=8*V] 


#### Cost of chains of start(V,V2):
* Chain [20]: 1
  with precondition: [V=0] 

* Chain [19]: 1
  with precondition: [V=1] 

* Chain [18]: 2
  with precondition: [V=2] 

* Chain [17]: 2*s(2)+1
  Such that:s(2) =< V2

  with precondition: [V>=0,V2>=0] 

* Chain [16]: 1
  with precondition: [V2=1,V>=0] 

* Chain [15]: 2*s(3)+2
  Such that:s(3) =< V

  with precondition: [V>=3] 


Closed-form bounds of start(V,V2): 
-------------------------------------
* Chain [20] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [V=2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [17] with precondition: [V>=0,V2>=0] 
    - Upper bound: 2*V2+1 
    - Complexity: n 
* Chain [16] with precondition: [V2=1,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [V>=3] 
    - Upper bound: 2*V+2 
    - Complexity: n 

### Maximum cost of start(V,V2): max([2*V+1,nat(V2)*2])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 20 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 65 ms.

