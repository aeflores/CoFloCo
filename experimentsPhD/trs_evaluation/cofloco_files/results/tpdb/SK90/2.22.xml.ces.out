
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [times/3]
1. recursive [non_tail] : [exp/3]
2. recursive  : [minus/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into times/3
1. SCC is partially evaluated into exp/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations times/3 
* CE 8 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations times/3 
* CE 15: times(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 16: times(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 17: times(V1,V,Out) = 1+ times(W1,V,X1)
     [W1>=0,V>=0,V+X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of times/3 
* CEs [17] --> Loop 10 
* CEs [15,16] --> Loop 11 

#### Loops of times/3 
* Loop 10: times(V1,V,Out)->  times(V1',V,Out')
                  [V1'>=0,V>=0,V+Out'+1=Out,V1'+1=V1] 
* Loop 11: times(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR times(V1,V,Out) 
* RF of phase [10]: [V1]

#### Partial ranking functions of CR times(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V1


### Resulting Chains:times(V1,V,Out) 
* [[10],11]
* [11]


### Merging Chains  times/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations exp/3 
* CE 7 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 6 is refined into CE [20,21] 


#### Refined cost equations exp/3 
* CE 18: exp(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 19: exp(V1,V,Out) = 1
     [V1>=0,Out=1,V=0] 
* CE 20: exp(V1,V,Out) = 1+ exp(V1,W1,X1)+ times(V1,X1,Y1):1
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 21: exp(V1,V,Out) = 1+ exp(V1,W1,X1)+ times(V1,X1,Out):2
     [Out>=X1+1,W1>=0,X1>=0,V1>=1,W1+1=V] 

### Cost equations --> "Loop" of exp/3 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [18] --> Loop 14 
* CEs [19] --> Loop 15 

#### Loops of exp/3 
* Loop 12: exp(V1,V,Out)->  exp(V1,V',Out')
                  [Out>=Out'+1,Out'>=0,V>=1,V1>=1,V=V'+1] 
* Loop 13: exp(V1,V,Out)->  exp(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 14: exp(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 15: exp(V1,V,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR exp(V1,V,Out) 
* RF of phase [12,13]: [V]

#### Partial ranking functions of CR exp(V1,V,Out) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1,13:1]:
    V


### Resulting Chains:exp(V1,V,Out) 
* [[12,13],15]
* [[12,13],14]
* [15]
* [14]


### Merging Chains  exp/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[14,[12,13]],[15,[12,13]]] --> 3 


### Specialization of cost equations minus/3 
* CE 12 is refined into CE [22] 
* CE 11 is refined into CE [23] 
* CE 14 is refined into CE [24] 
* CE 13 is refined into CE [25] 


#### Refined cost equations minus/3 
* CE 22: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 23: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 24: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 25: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [25] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [23,24] --> Loop 18 

#### Loops of minus/3 
* Loop 16: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 17: minus(A,B,A) [A>=0,B=0] 
* Loop 18: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [16]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[16],18]
* [[16],17]
* [18]
* [17]


### Merging Chains  minus/3 into  External patterns of execution 
* [[17]] --> 1 
* [[18],[18,[16]]] --> 2 
* [[17,[16]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [26,27,28] 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32,33] 


#### Refined cost equations start/2 
* CE 26: start(V1,V) = 0+ exp(V1,W1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 27: start(V1,V) = 0+ exp(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 28: start(V1,V) = 0+ exp(V1,V,W1):3
     [W1>=0,V>=1,V1>=0] 
* CE 29: start(V1,V) = 0+ times(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 30: start(V1,V) = 0+ times(V1,V,W1):2
     [W1>=V+1,V>=0,V1>=1] 
* CE 31: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 32: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 33: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [26,27,28,29,30,31,32,33] --> Loop 19 

#### Loops of start/2 
* Loop 19: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[19]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:times(V1,V,Out) -> [times(V1',V',Out')] 
1
#### Cost of phase [10]:times(V1,V,Out) -> [times(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of chains of times(V1,V,Out):
* Chain [[10],11]: 1*it(10)+1
  Such that:it(10) =< V1

  with precondition: [V1>=1,V>=0,Out>=V+1] 

* Chain [11]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [12,13] 

 * loop 12:exp(V1,V,Out) -> [exp(V1',V',Out')] 
1*s(2)+2
  Such that:s(2) =< V1'

 * loop 13:exp(V1,V,Out) -> [exp(V1',V',Out')] 
2
#### Cost of phase [12,13]:exp(V1,V,Out) -> [exp(V1',V',Out')] 
4*it(12)+1*s(3)+0
  Such that:aux(1) =< V1
aux(2) =< V
aux(3) =< V-V'
it(12) =< aux(2)
it(12) =< aux(3)
s(3) =< it(12)*aux(1)

#### Cost of phase [12,13]:exp(V1,V,Out) -> [exp(V1',V',Out')] 
4*it(12)+1*s(3)+0
  Such that:aux(1) =< V1
aux(2) =< V
aux(3) =< V-V'
it(12) =< aux(2)
it(12) =< aux(3)
s(3) =< it(12)*aux(1)

#### Cost of chains of exp(V1,V,Out):
* Chain [[12,13],15]: 4*it(12)+1*s(3)+1
  Such that:aux(1) =< V1
aux(4) =< V
it(12) =< aux(4)
s(3) =< it(12)*aux(1)

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [[12,13],14]: 4*it(12)+1*s(3)+0
  Such that:aux(1) =< V1
aux(5) =< V
it(12) =< aux(5)
s(3) =< it(12)*aux(1)

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [15]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [16] 

 * loop 16:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [16]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of phase [16]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[16],18]: 1*it(16)+1
  Such that:it(16) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[16],17]: 1*it(16)+1
  Such that:it(16) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [18]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [17]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [19]: 10*s(15)+2*s(16)+1*s(17)+1
  Such that:aux(8) =< V1
aux(9) =< V
s(17) =< aux(8)
s(15) =< aux(9)
s(16) =< s(15)*aux(8)

  with precondition: [V1>=0,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [19] with precondition: [V1>=0,V>=0] 
    - Upper bound: V1+1+2*V1*V+10*V 
    - Complexity: n^2 

### Maximum cost of start(V1,V): V1+1+2*V1*V+10*V 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 35 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 135 ms.

