
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [or/3]
1. recursive [non_tail,multiple] : [mem/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into or/3
1. SCC is partially evaluated into mem/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations or/3 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations or/3 
* CE 11: or(V,V1,Out) = 1
     [V>=0,Out=1,V1=1] 
* CE 12: or(V,V1,Out) = 1
     [V1>=0,Out=1,V=1] 
* CE 13: or(V,V1,Out) = 1
     [Out=0,V1=0,V=0] 
* CE 14: or(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of or/3 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13,14] --> Loop 10 

#### Loops of or/3 
* Loop 8: or(V,V1,Out) [V>=0,Out=1,V1=1] 
* Loop 9: or(V,V1,Out) [V1>=0,Out=1,V=1] 
* Loop 10: or(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR or(V,V1,Out) 

#### Partial ranking functions of CR or(V,V1,Out) 


### Resulting Chains:or(V,V1,Out) 
* [10]
* [9]
* [8]


### Merging Chains  or/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[10]] --> 3 


### Specialization of cost equations mem/3 
* CE 10 is refined into CE [15,16,17] 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations mem/3 
* CE 15: mem(V,V1,Out) = 1+ mem(V,W1,X1)+ mem(V,Y1,Z1)+ or(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,V>=0,W1+Y1+1=V1,X1=1,B2=1,A2=1,Out=1] 
* CE 16: mem(V,V1,Out) = 1+ mem(V,W1,X1)+ mem(V,Y1,Z1)+ or(X1,A2,B2):2
     [Y1>=0,W1>=0,X1>=0,V>=0,W1+Y1+1=V1,Z1=1,B2=1,A2=1,Out=1] 
* CE 17: mem(V,V1,Out) = 1+ mem(V,W1,X1)+ mem(V,Y1,Z1)+ or(X1,Z1,A2):3
     [Y1>=0,W1>=0,Z1>=0,X1>=0,V>=0,W1+Y1+1=V1,A2=0,Out=0] 
* CE 18: mem(V,V1,Out) = 1
     [Out>=V1,V1>=1,V+V1=Out] 
* CE 19: mem(V,V1,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of mem/3 
* CEs [18] --> Loop 11 
* CEs [19] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of mem/3 
* Loop 11: mem(V,V1,Out) [V1>=1,V>=0,V+V1=Out] 
* Loop 12: mem(V,V1,Out) [V>=0,Out=0,V1=0] 
* Loop 13: mem(V,V1,Out)->  mem(V,V1',Out')  mem(V,V1'2,Out'2)
                  [V1>=V1'+1,Out'>=0,V1'>=0,V>=0,V1'+V1'2+1=V1,Out'2=1,Out=1] 
* Loop 14: mem(V,V1,Out)->  mem(V,V1',Out')  mem(V,V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V>=0,V1'+V1'2+1=V1,Out'=1,Out=1] 
* Loop 15: mem(V,V1,Out)->  mem(V,V1',Out')  mem(V,V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,Out'>=0,V1'>=0,V>=0,V1'+V1'2+1=V1,Out=0] 

### Ranking functions of CR mem(V,V1,Out) 
* RF of phase [13,14,15]: [V1]

#### Partial ranking functions of CR mem(V,V1,Out) 
* Partial RF of phase [13,14,15]:
  - RF of loop [13:1,13:2,14:1,14:2,15:1,15:2]:
    V1


### Resulting Chains:mem(V,V1,Out) 
* [12]
* [11]
* [multiple([13,14,15],[[12],[11]])]


### Merging Chains  mem/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[multiple([13,14,15],[[12],[11]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [20,21,22] 
* CE 3 is refined into CE [23,24,25] 


#### Refined cost equations start/2 
* CE 20: start(V,V1) = 0+ or(W1,V1,X1):1
     [V1>=0,X1=1,W1=1,V=1] 
* CE 21: start(V,V1) = 0+ or(V,W1,X1):2
     [V>=0,X1=1,W1=1,V1=1] 
* CE 22: start(V,V1) = 0+ or(V,V1,W1):3
     [V1>=0,V>=0,W1=0] 
* CE 23: start(V,V1) = 0+ mem(V,W1,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 24: start(V,V1) = 0+ mem(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1,X1=V+V1] 
* CE 25: start(V,V1) = 0+ mem(V,V1,W1):3
     [V+V1>=W1+1,W1>=0,V1>=1,V>=0,1>=W1] 

### Cost equations --> "Loop" of start/2 
* CEs [21] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [20,22,24,25] --> Loop 18 

#### Loops of start/2 
* Loop 16: start(V,V1) [V>=0,V1=1] 
* Loop 17: start(V,V1) [V>=0,V1=0] 
* Loop 18: start(V,V1) [V1>=0,V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [18]
* [17]
* [16]


### Merging Chains  start/2 into  External patterns of execution 
* [[17],[18]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of or(V,V1,Out):
* Chain [10]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [9]: 1
  with precondition: [V=1,Out=1,V1>=0] 

* Chain [8]: 1
  with precondition: [V1=1,Out=1,V>=0] 


#### Cost of loops [13,14,15] 

 * loop 13:mem(V,V1,Out) -> [mem(V',V1',Out'),mem(V'2,V1'2,Out'2)] 
2
 * loop 14:mem(V,V1,Out) -> [mem(V',V1',Out'),mem(V'2,V1'2,Out'2)] 
2
 * loop 15:mem(V,V1,Out) -> [mem(V',V1',Out'),mem(V'2,V1'2,Out'2)] 
2
#### Cost of phase [13,14,15]:mem(V,V1,Out) -> [] 
6*it(13)+1*it([11])+1*it([12])+0
  Such that:it([12]) =< V1+1
it([11]) =< V1/2+1/2
aux(1) =< V1
it(13) =< aux(1)
it([11]) =< aux(1)

#### Cost of chains of mem(V,V1,Out):
* Chain [12]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [11]: 1
  with precondition: [V+V1=Out,V>=0,V1>=1] 

* Chain [multiple([13,14,15],[[12],[11]])]: 6*it(13)+1*it([11])+1*it([12])+0
  Such that:it([12]) =< V1+1
it([11]) =< V1/2+1/2
aux(1) =< V1
it(13) =< aux(1)
it([11]) =< aux(1)

  with precondition: [1>=Out,V>=0,V1>=1,Out>=0,V+V1>=Out+1] 


#### Cost of chains of start(V,V1):
* Chain [18]: 1*s(1)+1*s(2)+6*s(4)+1
  Such that:s(3) =< V1
s(1) =< V1+1
s(2) =< V1/2+1/2
s(4) =< s(3)
s(2) =< s(3)

  with precondition: [V>=0,V1>=0] 

* Chain [17]: 1
  with precondition: [V1=0,V>=0] 

* Chain [16]: 1
  with precondition: [V1=1,V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [18] with precondition: [V>=0,V1>=0] 
    - Upper bound: 15/2*V1+5/2 
    - Complexity: n 
* Chain [17] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [16] with precondition: [V1=1,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): 15/2*V1+5/2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 61 ms.
   - Backward Invariants 21 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 113 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 181 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 150 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 443 ms.

