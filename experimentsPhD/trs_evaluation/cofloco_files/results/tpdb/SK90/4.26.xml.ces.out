
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. non_recursive  : [make/2]
2. non_recursive  : [rev/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into rev/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


#### Refined cost equations fun/3 
* CE 11: fun(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 12: fun(A,B,A) = 1
     [A>=0,B=0] 
* CE 13: fun(A,B,B) = 1
     [B>=0,A=0] 
* CE 14: fun(V,V1,Out) = 1+ fun(W1,V1,X1)
     [V+X1>=Out,Out>=X1+1,V1>=0,V+X1=Out+W1] 

### Cost equations --> "Loop" of fun/3 
* CEs [14] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of fun/3 
* Loop 7: fun(V,V1,Out)->  fun(V',V1,Out')
                  [V+Out'>=Out,Out>=Out'+1,V1>=0,V+Out'=Out+V'] 
* Loop 8: fun(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 9: fun(A,B,A) [A>=0,B=0] 
* Loop 10: fun(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun(V,V1,Out) 
* RF of phase [7]: [V]

#### Partial ranking functions of CR fun(V,V1,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V


### Resulting Chains:fun(V,V1,Out) 
* [[7],10]
* [[7],9]
* [[7],8]
* [10]
* [9]
* [8]


### Merging Chains  fun/3 into  External patterns of execution 
* [[10]] --> 1 
* [[9],[9,[7]]] --> 2 
* [[8]] --> 3 
* [[10,[7]]] --> 4 
* [[8,[7]]] --> 5 


### Specialization of cost equations rev/2 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations rev/2 
* CE 15: rev(V,Out) = 1
     [Out=0,V=0] 
* CE 16: rev(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of rev/2 
* CEs [15,16] --> Loop 11 

#### Loops of rev/2 
* Loop 11: rev(V,Out) [V>=0,Out=0] 

### Ranking functions of CR rev(V,Out) 

#### Partial ranking functions of CR rev(V,Out) 


### Resulting Chains:rev(V,Out) 
* [11]


### Merging Chains  rev/2 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [17,18,19,20,21] 
* CE 3 is refined into CE [22] 
* CE 4 is refined into CE [23] 


#### Refined cost equations start/2 
* CE 17: start(V,V1) = 0+ fun(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 18: start(V,V1) = 0+ fun(V,W1,V):2
     [V>=0,W1=0,V1=0] 
* CE 19: start(V,V1) = 0+ fun(V,V1,W1):3
     [V1>=0,V>=0,W1=0] 
* CE 20: start(V,V1) = 0+ fun(V,W1,X1):4
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 21: start(V,V1) = 0+ fun(V,V1,W1):5
     [V>=W1,W1>=1,V1>=0] 
* CE 22: start(V,V1) = 0+ rev(V,W1):1
     [V>=0,W1=0] 
* CE 23: start(V,V1) = 1
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [18] --> Loop 12 
* CEs [17,19,20,21,22,23] --> Loop 13 

#### Loops of start/2 
* Loop 12: start(V,V1) [V>=0,V1=0] 
* Loop 13: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [13]
* [12]


### Merging Chains  start/2 into  External patterns of execution 
* [[12],[13]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1
#### Cost of phase [7]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(7)+0
  Such that:it(7) =< V
it(7) =< V-V'

#### Cost of phase [7]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(7)+0
  Such that:it(7) =< V
it(7) =< V-V'

#### Cost of phase [7]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(7)+0
  Such that:it(7) =< V
it(7) =< V-V'

#### Cost of chains of fun(V,V1,Out):
* Chain [[7],10]: 1*it(7)+1
  Such that:it(7) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [[7],9]: 1*it(7)+1
  Such that:it(7) =< Out

  with precondition: [V1=0,V=Out,V>=1] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< Out

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [10]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [9]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [8]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of rev(V,Out):
* Chain [11]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V,V1):
* Chain [13]: 2*s(2)+1
  Such that:aux(1) =< V
s(2) =< aux(1)

  with precondition: [V>=0] 

* Chain [12]: 1*s(4)+1
  Such that:s(4) =< V

  with precondition: [V1=0,V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [13] with precondition: [V>=0] 
    - Upper bound: 2*V+1 
    - Complexity: n 
* Chain [12] with precondition: [V1=0,V>=0] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V,V1): 2*V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 21 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 64 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 60 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 215 ms.

