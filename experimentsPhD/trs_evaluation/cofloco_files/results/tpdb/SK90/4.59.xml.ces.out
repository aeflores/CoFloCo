
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [greaters/3]
1. recursive [multiple] : [lowers/3]
2. recursive [non_tail,multiple] : [qsort/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into greaters/3
1. SCC is partially evaluated into lowers/3
2. SCC is partially evaluated into qsort/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations greaters/3 
* CE 11 is refined into CE [14] 
* CE 13 is refined into CE [15] 
* CE 12 is refined into CE [16] 


#### Refined cost equations greaters/3 
* CE 14: greaters(V,V4,Out) = 1
     [V>=0,Out=0,V4=0] 
* CE 15: greaters(V,V4,Out) = 0
     [V4>=0,V>=0,Out=0] 
* CE 16: greaters(V,V4,Out) = 1+ greaters(V,W4,X4)+ greaters(V,W4,Y4)
     [V4>=W4+1,W4>=0,V>=0,V+X4+Y4+2*V4+1=2*W4+Out] 

### Cost equations --> "Loop" of greaters/3 
* CEs [16] --> Loop 8 
* CEs [14,15] --> Loop 9 

#### Loops of greaters/3 
* Loop 8: greaters(V,V4,Out)->  greaters(V,V4',Out')  greaters(V,V4',A'2)
                  [V4>=V4'+1,V4'>=0,V>=0,V+Out'+A'2+2*V4+1=2*V4'+Out] 
* Loop 9: greaters(V,V4,Out) [V4>=0,V>=0,Out=0] 

### Ranking functions of CR greaters(V,V4,Out) 
* RF of phase [8]: [V4]

#### Partial ranking functions of CR greaters(V,V4,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1,8:2]:
    V4


### Resulting Chains:greaters(V,V4,Out) 
* [9]
* [multiple([8],[[9]])]


### Merging Chains  greaters/3 into  External patterns of execution 
* [[9]] --> 1 
* [[multiple([8],[[9]])]] --> 2 


### Specialization of cost equations lowers/3 
* CE 8 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations lowers/3 
* CE 17: lowers(V,V4,Out) = 1
     [V>=0,Out=0,V4=0] 
* CE 18: lowers(V,V4,Out) = 0
     [V4>=0,V>=0,Out=0] 
* CE 19: lowers(V,V4,Out) = 1+ lowers(V,W4,X4)+ lowers(V,W4,Y4)
     [V4>=W4+1,W4>=0,V>=0,V+X4+Y4+2*V4+1=2*W4+Out] 

### Cost equations --> "Loop" of lowers/3 
* CEs [19] --> Loop 10 
* CEs [17,18] --> Loop 11 

#### Loops of lowers/3 
* Loop 10: lowers(V,V4,Out)->  lowers(V,V4',Out')  lowers(V,V4',A'2)
                  [V4>=V4'+1,V4'>=0,V>=0,V+Out'+A'2+2*V4+1=2*V4'+Out] 
* Loop 11: lowers(V,V4,Out) [V4>=0,V>=0,Out=0] 

### Ranking functions of CR lowers(V,V4,Out) 
* RF of phase [10]: [V4]

#### Partial ranking functions of CR lowers(V,V4,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1,10:2]:
    V4


### Resulting Chains:lowers(V,V4,Out) 
* [11]
* [multiple([10],[[11]])]


### Merging Chains  lowers/3 into  External patterns of execution 
* [[11]] --> 1 
* [[multiple([10],[[11]])]] --> 2 


### Specialization of cost equations qsort/2 
* CE 5 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 6 is refined into CE [22,23,24,25] 


#### Refined cost equations qsort/2 
* CE 20: qsort(V,Out) = 1
     [Out=0,V=0] 
* CE 21: qsort(V,Out) = 0
     [V>=0,Out=0] 
* CE 22: qsort(V,Out) = 1+ lowers(W,X,Y):1+ qsort(Z,A1)+ greaters(W,X,B1):1+ qsort(C1,D1)
     [X>=0,W>=0,W+A1+D1+2=Out,W+X+1=V,C1=0,Z=0,B1=0,Y=0] 
* CE 23: qsort(V,Out) = 1+ lowers(W,X,Y):1+ qsort(Z,A1)+ greaters(W,X,B1):2+ qsort(B1,C1)
     [B1>=W+3,X>=1,W>=0,W+A1+C1+2=Out,W+X+1=V,Z=0,Y=0] 
* CE 24: qsort(V,Out) = 1+ lowers(W,X,Y):2+ qsort(Y,Z)+ greaters(W,X,A1):1+ qsort(B1,C1)
     [Y>=W+3,X>=1,W>=0,W+Z+C1+2=Out,W+X+1=V,B1=0,A1=0] 
* CE 25: qsort(V,Out) = 1+ lowers(W,X,Y):2+ qsort(Y,Z)+ greaters(W,X,A1):2+ qsort(A1,B1)
     [A1>=W+3,Y>=W+3,X>=1,W>=0,W+Z+B1+2=Out,W+X+1=V] 

### Cost equations --> "Loop" of qsort/2 
* CEs [25] --> Loop 12 
* CEs [24] --> Loop 13 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [20,21] --> Loop 16 

#### Loops of qsort/2 
* Loop 12: qsort(V,Out)->  qsort(V',Out')  qsort(V'2,Out'2)
                  [Out'+V'2+Out'2>=Out+1,V'+Out'+Out'2>=Out+1,V+Out'+Out'2>=Out,Out>=Out'+Out'2+2] 
* Loop 13: qsort(V,Out)->  qsort(V',Out')  qsort(V'2,Out'2)
                  [V'+Out'+Out'2>=Out+1,V+Out'+Out'2>=Out,Out>=Out'+Out'2+2,V'2=0] 
* Loop 14: qsort(V,Out)->  qsort(V',Out')  qsort(V'2,Out'2)
                  [Out'+V'2+Out'2>=Out+1,V+Out'+Out'2>=Out,Out>=Out'+Out'2+2,V'=0] 
* Loop 15: qsort(V,Out)->  qsort(V',Out')  qsort(V'2,Out'2)
                  [V+Out'+Out'2+1>=Out,Out>=Out'+Out'2+2,V'2=0,V'=0] 
* Loop 16: qsort(V,Out) [V>=0,Out=0] 

### Ranking functions of CR qsort(V,Out) 

#### Partial ranking functions of CR qsort(V,Out) 
* Partial RF of phase [12,13,14]:
  - RF of loop [13:2,14:1]:
    V-1 depends on loops [12:1,12:2,13:1,14:2] 


### Resulting Chains:qsort(V,Out) 
* [multiple([12,13,14],[[],[16],[multiple(15,[[16]])]])]...
* [16]
* [multiple(15,[[16]])]


### Merging Chains  qsort/2 into  External patterns of execution 
* [[16]] --> 1 
* [[multiple(15,[[16]])]] --> 2 
* [[multiple([12,13,14],[[],[16],[multiple(15,[[16]])]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [26,27,28] 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32] 


#### Refined cost equations start/2 
* CE 26: start(V,V4) = 0+ qsort(V,W4):1
     [V>=0,W4=0] 
* CE 27: start(V,V4) = 0+ qsort(V,W4):2
     [V+1>=W4,W4>=2] 
* CE 28: start(V,V4) = 0+ qsort(V,W4):3
     [V>=2] 
* CE 29: start(V,V4) = 0+ lowers(V,V4,W4):1
     [V4>=0,V>=0,W4=0] 
* CE 30: start(V,V4) = 0+ lowers(V,V4,W4):2
     [W4>=V+3,V4>=1,V>=0] 
* CE 31: start(V,V4) = 0+ greaters(V,V4,W4):1
     [V4>=0,V>=0,W4=0] 
* CE 32: start(V,V4) = 0+ greaters(V,V4,W4):2
     [W4>=V+3,V4>=1,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [26,27,29,30,31,32] --> Loop 17 
* CEs [28] --> Loop 18 

#### Loops of start/2 
* Loop 17: start(V,V4) [V>=0] 
* Loop 18: start(V,V4) [V>=2] 

### Ranking functions of CR start(V,V4) 

#### Partial ranking functions of CR start(V,V4) 


### Resulting Chains:start(V,V4) 
* [18]...
* [17]


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:greaters(V,V4,Out) -> [greaters(V',V4',Out'),greaters(V'2,V4'2,Out'2)] 
1
#### Cost of phase [8]:greaters(V,V4,Out) -> [] 
1*it(8)+1*it([9])+0
#### Cost of chains of greaters(V,V4,Out):
* Chain [9]: 1
  with precondition: [Out=0,V>=0,V4>=0] 

* Chain [multiple([8],[[9]])]: 1*it(8)+1*it([9])+0
  with precondition: [V>=0,V4>=1,Out>=V+3] 


#### Cost of loops [10] 

 * loop 10:lowers(V,V4,Out) -> [lowers(V',V4',Out'),lowers(V'2,V4'2,Out'2)] 
1
#### Cost of phase [10]:lowers(V,V4,Out) -> [] 
1*it(10)+1*it([11])+0
#### Cost of chains of lowers(V,V4,Out):
* Chain [11]: 1
  with precondition: [Out=0,V>=0,V4>=0] 

* Chain [multiple([10],[[11]])]: 1*it(10)+1*it([11])+0
  with precondition: [V>=0,V4>=1,Out>=V+3] 


#### Cost of loops [12,13,14] 

 * loop 12:qsort(V,Out) -> [qsort(V',Out'),qsort(V'2,Out'2)] 
4*s(5)+1
 * loop 13:qsort(V,Out) -> [qsort(V',Out'),qsort(V'2,Out'2)] 
2*s(8)+2
 * loop 14:qsort(V,Out) -> [qsort(V',Out'),qsort(V'2,Out'2)] 
2*s(11)+2
#### Cost of phase [12,13,14]:qsort(V,Out) -> [] 
13*it(12)+6*it([16])+0
#### Cost of chains of qsort(V,Out):
* Chain [multiple([12,13,14],[[],[16],[multiple(15,[[16]])]])]...: 13*it(12)+6*it([16])+0
  with precondition: [V>=2] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0] 

* Chain [multiple(15,[[16]])]: 5
  with precondition: [Out>=2,V+1>=Out] 


#### Cost of chains of start(V,V4):
* Chain [18]...: 19*s(15)+0
  with precondition: [V>=2] 

* Chain [17]: 1*aux(8)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V,V4): 
-------------------------------------
* Chain [18]... with precondition: [V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 78 ms.
   - Backward Invariants 21 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 167 ms.
* Termination proved in 26 ms.
* Upper bounds computed in 172 ms.
   - Equation cost structures 39 ms.
   - Phase cost structures 143 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 528 ms.

