
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f/2]
1. recursive  : [g/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f/2
1. SCC is partially evaluated into g/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/2 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 


#### Refined cost equations f/2 
* CE 10: f(V,Out) = 1+ f(V,Out)
     [V>=2] 
* CE 11: f(V,Out) = 1+ f(W,X)
     [W>=0,X+1=Out,W+1=V] 
* CE 12: f(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of f/2 
* CEs [12] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of f/2 
* Loop 8: f(V,Out) [Out=0,V=0] 
* Loop 9: f(V,Out)->  f(V,Out)
                  [V>=2] 
* Loop 10: f(V,Out)->  f(V',Out')
                  [V>=1,Out=Out'+1,V=V'+1] 

### Ranking functions of CR f(V,Out) 

#### Partial ranking functions of CR f(V,Out) 
* Partial RF of phase [9,10]:
  - RF of loop [10:1]:
    V


### Resulting Chains:f(V,Out) 
* [[9,10]]...
* [[9,10],8]
* [8]


### Merging Chains  f/2 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[9,10]]] --> 2 
* [[[9,10]]] --> 3 


### Specialization of cost equations g/2 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations g/2 
* CE 13: g(V,Out) = 1+ g(V,Out)
     [V>=2] 
* CE 14: g(V,Out) = 1+ g(W,X)
     [W>=0,X+1=Out,W+1=V] 
* CE 15: g(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of g/2 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of g/2 
* Loop 11: g(V,Out) [Out=0,V=0] 
* Loop 12: g(V,Out)->  g(V,Out)
                  [V>=2] 
* Loop 13: g(V,Out)->  g(V',Out')
                  [V>=1,Out=Out'+1,V=V'+1] 

### Ranking functions of CR g(V,Out) 

#### Partial ranking functions of CR g(V,Out) 
* Partial RF of phase [12,13]:
  - RF of loop [13:1]:
    V


### Resulting Chains:g(V,Out) 
* [[12,13]]...
* [[12,13],11]
* [11]


### Merging Chains  g/2 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[12,13]]] --> 2 
* [[[12,13]]] --> 3 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [16,17,18] 
* CE 3 is refined into CE [19,20,21] 


#### Refined cost equations start/1 
* CE 16: start(V) = 0+ f(W,X):1
     [X=0,W=0,V=0] 
* CE 17: start(V) = 0+ f(V,V):2
     [V>=1] 
* CE 18: start(V) = 0+ f(V,W):3
     [V>=1] 
* CE 19: start(V) = 0+ g(W,X):1
     [X=0,W=0,V=0] 
* CE 20: start(V) = 0+ g(V,V):2
     [V>=1] 
* CE 21: start(V) = 0+ g(V,W):3
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [18,21] --> Loop 14 
* CEs [17,20] --> Loop 15 
* CEs [16,19] --> Loop 16 

#### Loops of start/1 
* Loop 14: start(V) [V>=1] 
* Loop 15: start(V) [V>=1] 
* Loop 16: start(V) [V=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [16]
* [15]
* [14]...


### Merging Chains  start/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [9,10] 

 * loop 9:f(V,Out) -> [f(V',Out')] 
1
 * loop 10:f(V,Out) -> [f(V',Out')] 
1
#### Cost of phase [9,10]:f(V,Out) -> [f(V',Out')] 
1*it(9)+1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of phase [9,10]:f(V,Out) -> [f(V',Out')] 
1*it(9)+1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of chains of f(V,Out):
* Chain [[9,10]]...: 1*it(9)+1*it(10)+0
  Such that:it(10) =< V

  with precondition: [V>=1] 

* Chain [[9,10],8]: 1*it(9)+1*it(10)+1
  Such that:it(10) =< Out

  with precondition: [V=Out,V>=1] 

* Chain [8]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [12,13] 

 * loop 12:g(V,Out) -> [g(V',Out')] 
1
 * loop 13:g(V,Out) -> [g(V',Out')] 
1
#### Cost of phase [12,13]:g(V,Out) -> [g(V',Out')] 
1*it(12)+1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of phase [12,13]:g(V,Out) -> [g(V',Out')] 
1*it(12)+1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of chains of g(V,Out):
* Chain [[12,13]]...: 1*it(12)+1*it(13)+0
  Such that:it(13) =< V

  with precondition: [V>=1] 

* Chain [[12,13],11]: 1*it(12)+1*it(13)+1
  Such that:it(13) =< Out

  with precondition: [V=Out,V>=1] 

* Chain [11]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of start(V):
* Chain [16]: 1
  with precondition: [V=0] 

* Chain [15]: 2*s(1)+2*s(2)+1
  Such that:aux(1) =< V
s(1) =< aux(1)

  with precondition: [V>=1] 

* Chain [14]...: 2*s(5)+2*s(6)+0
  Such that:aux(2) =< V
s(5) =< aux(2)

  with precondition: [V>=1] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [16] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 18 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 67 ms.

