
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [bubble/2]
1. recursive  : [butlast/2]
2. recursive  : [last/2]
3. recursive [non_tail] : [bsort/2]
4. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into bubble/2
1. SCC is partially evaluated into butlast/2
2. SCC is partially evaluated into last/2
3. SCC is partially evaluated into bsort/2
4. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations bubble/2 
* CE 10 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 11 is refined into CE [24] 


#### Refined cost equations bubble/2 
* CE 21: bubble(A,A) = 1
     [A>=2] 
* CE 22: bubble(V,Out) = 0
     [V>=0,Out=0] 
* CE 23: bubble(V,Out) = 1
     [Out=1,V=1] 
* CE 24: bubble(V,Out) = 1+ bubble(W,X)+ bubble(Y,Z)
     [Out+2*Y>=2*V+X+Z+2,X+Z+2*V>=Out,V>=Y+1,X+Z+4*V=2*W+2*Y+Out] 

### Cost equations --> "Loop" of bubble/2 
* CEs [24] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of bubble/2 
* Loop 16: bubble(V,Out)->  bubble(V',Out')  bubble(V'2,Out'2)
                  [Out+2*V'2>=2*V+Out'+Out'2+2,Out'+Out'2+2*V>=Out,V>=V'2+1,Out'+Out'2+4*V=2*V'+2*V'2+Out] 
* Loop 17: bubble(A,A) [A>=2] 
* Loop 18: bubble(V,Out) [V>=0,Out=0] 
* Loop 19: bubble(V,Out) [Out=1,V=1] 

### Ranking functions of CR bubble(V,Out) 
* RF of phase [16]: [V-1]

#### Partial ranking functions of CR bubble(V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1,16:2]:
    V-1


### Resulting Chains:bubble(V,Out) 
* [19]
* [18]
* [17]
* [multiple([16],[[19],[18],[17]])]


### Merging Chains  bubble/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 
* [[multiple([16],[[19],[18],[17]])]] --> 4 


### Specialization of cost equations butlast/2 
* CE 18 is refined into CE [25] 
* CE 20 is refined into CE [26] 
* CE 17 is refined into CE [27] 
* CE 19 is refined into CE [28] 


#### Refined cost equations butlast/2 
* CE 25: butlast(V,Out) = 1
     [V>=2,Out=1] 
* CE 26: butlast(V,Out) = 0
     [V>=0,Out=0] 
* CE 27: butlast(V,Out) = 1
     [Out=1,V=1] 
* CE 28: butlast(V,Out) = 1+ butlast(W,X)
     [V>=W+1,W>=1,V+X=Out+W] 

### Cost equations --> "Loop" of butlast/2 
* CEs [28] --> Loop 20 
* CEs [25] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of butlast/2 
* Loop 20: butlast(V,Out)->  butlast(V',Out')
                  [V>=V'+1,V'>=1,V+Out'=Out+V'] 
* Loop 21: butlast(V,Out) [V>=2,Out=1] 
* Loop 22: butlast(V,Out) [V>=0,Out=0] 
* Loop 23: butlast(V,Out) [Out=1,V=1] 

### Ranking functions of CR butlast(V,Out) 
* RF of phase [20]: [V-1]

#### Partial ranking functions of CR butlast(V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V-1


### Resulting Chains:butlast(V,Out) 
* [[20],23]
* [[20],22]
* [[20],21]
* [23]
* [22]
* [21]


### Merging Chains  butlast/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21],[21,[20]],[22,[20]]] --> 3 
* [[23,[20]]] --> 4 


### Specialization of cost equations last/2 
* CE 14 is refined into CE [29] 
* CE 13 is refined into CE [30] 
* CE 16 is refined into CE [31] 
* CE 15 is refined into CE [32] 


#### Refined cost equations last/2 
* CE 29: last(V,Out) = 1
     [Out>=0,Out+2=V] 
* CE 30: last(V,Out) = 1
     [Out=0,V=1] 
* CE 31: last(V,Out) = 0
     [V>=0,Out=0] 
* CE 32: last(V,Out) = 1+ last(W,Out)
     [V>=W+1,W>=1] 

### Cost equations --> "Loop" of last/2 
* CEs [32] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [30,31] --> Loop 26 

#### Loops of last/2 
* Loop 24: last(V,Out)->  last(V',Out)
                  [V>=V'+1,V'>=1] 
* Loop 25: last(V,Out) [V>=2,V=Out+2] 
* Loop 26: last(V,Out) [V>=0,Out=0] 

### Ranking functions of CR last(V,Out) 
* RF of phase [24]: [V-1]

#### Partial ranking functions of CR last(V,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V-1


### Resulting Chains:last(V,Out) 
* [[24],26]
* [[24],25]
* [26]
* [25]


### Merging Chains  last/2 into  External patterns of execution 
* [[26],[26,[24]]] --> 1 
* [[25]] --> 2 
* [[25,[24]]] --> 3 


### Specialization of cost equations bsort/2 
* CE 8 is refined into CE [33] 
* CE 6 is refined into CE [34] 
* CE 7 is refined into CE [35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112] 


#### Refined cost equations bsort/2 
* CE 33: bsort(V,Out) = 0
     [V>=0,Out=0] 
* CE 34: bsort(V,Out) = 1
     [Out=1,V=1] 
* CE 35: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,D1)+ last(E1,F1):1
     [E1>=0,E1=D1+2,C1=1,F1=0,B1=1,A1=1,Z=1,Y=1,X=1,W=1,Out=0,V=1] 
* CE 36: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,Out)+ last(D1,Out):2
     [Out>=0,Out+2=D1,C1=1,B1=1,A1=1,Z=1,Y=1,X=1,W=1,V=1] 
* CE 37: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,D1)+ last(E1,Out):3
     [E1>=Out+3,Out>=0,E1=D1+2,C1=1,B1=1,A1=1,Z=1,Y=1,X=1,W=1,V=1] 
* CE 38: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,F1):1
     [E1>=0,E1=D1+2,C1=0,F1=0,B1=0,A1=1,Z=1,Y=1,X=1,W=1,Out=0,V=1] 
* CE 39: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,Out)+ last(D1,Out):2
     [Out>=0,Out+2=D1,C1=0,B1=0,A1=1,Z=1,Y=1,X=1,W=1,V=1] 
* CE 40: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,Out):3
     [E1>=Out+3,Out>=0,E1=D1+2,C1=0,B1=0,A1=1,Z=1,Y=1,X=1,W=1,V=1] 
* CE 41: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):2+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,F1):1
     [E1>=0,E1=D1+2,C1=0,F1=0,B1=0,A1=0,Z=0,Y=1,X=1,W=1,Out=0,V=1] 
* CE 42: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):2+ butlast(A1,B1):2+ bsort(C1,Out)+ last(D1,Out):2
     [Out>=0,Out+2=D1,C1=0,B1=0,A1=0,Z=0,Y=1,X=1,W=1,V=1] 
* CE 43: bsort(V,Out) = 1+ bubble(W,X):1+ bubble(Y,Z):2+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,Out):3
     [E1>=Out+3,Out>=0,E1=D1+2,C1=0,B1=0,A1=0,Z=0,Y=1,X=1,W=1,V=1] 
* CE 44: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,D1)+ last(E1,F1):1
     [E1>=0,E1=D1+1,C1=1,F1=0,B1=1,A1=1,Z=1,Y=1,X=0,W=1,Out=0,V=1] 
* CE 45: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,D1)+ last(E1,Out):2
     [Out>=0,Out+1=D1,Out+2=E1,C1=1,B1=1,A1=1,Z=1,Y=1,X=0,W=1,V=1] 
* CE 46: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):1+ bsort(C1,D1)+ last(E1,Out):3
     [E1>=Out+3,Out>=0,E1=D1+1,C1=1,B1=1,A1=1,Z=1,Y=1,X=0,W=1,V=1] 
* CE 47: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,F1):1
     [E1>=0,E1=D1+1,C1=0,F1=0,B1=0,A1=1,Z=1,Y=1,X=0,W=1,Out=0,V=1] 
* CE 48: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,Out):2
     [Out>=0,Out+1=D1,Out+2=E1,C1=0,B1=0,A1=1,Z=1,Y=1,X=0,W=1,V=1] 
* CE 49: bsort(V,Out) = 1+ bubble(W,X):2+ bubble(Y,Z):1+ butlast(A1,B1):2+ bsort(C1,D1)+ last(E1,Out):3
     [E1>=Out+3,Out>=0,E1=D1+1,C1=0,B1=0,A1=1,Z=1,Y=1,X=0,W=1,V=1] 
* CE 50: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,D1):1
     [C1>=0,V>=1,C1=B1+1,A1=0,D1=0,Z=0,Y=0,X=0,W=0,Out=0] 
* CE 51: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,Out):2
     [Out>=0,V>=1,Out+1=B1,Out+2=C1,A1=0,Z=0,Y=0,X=0,W=0] 
* CE 52: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,Out):3
     [C1>=Out+3,Out>=0,V>=1,C1=B1+1,A1=0,Z=0,Y=0,X=0,W=0] 
* CE 53: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,B1):1
     [A1>=0,V>=2,A1=Z+1,Y=0,B1=0,X=0,W=0,Out=0] 
* CE 54: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,Out):2
     [Out>=0,V>=2,Out+1=Z,Out+2=A1,Y=0,X=0,W=0] 
* CE 55: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,Out):3
     [A1>=Out+3,Out>=0,V>=2,A1=Z+1,Y=0,X=0,W=0] 
* CE 56: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,A1):1
     [V>=X+1,Z>=0,X>=1,Z=Y+1,A1=0,W=0,Out=0] 
* CE 57: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,Out):2
     [V>=X+1,Out>=0,X>=1,Out+1=Y,Out+2=Z,W=0] 
* CE 58: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,V>=X+1,Out>=0,X>=1,Z=Y+1,W=0] 
* CE 59: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Z):1
     [Y>=0,V>=2,Y=X+1,Z=0,W=0,Out=0] 
* CE 60: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Out):2
     [Out>=0,V>=2,Out+1=X,Out+2=Y,W=0] 
* CE 61: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Out):3
     [Y>=Out+3,Out>=0,V>=2,Y=X+1,W=0] 
* CE 62: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,C1):1
     [B1>=0,X>=4,V>=2,B1=A1+1,Z=0,C1=0,Y=0,W=0,Out=0] 
* CE 63: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):2
     [Out>=0,X>=4,V>=2,Out+1=A1,Out+2=B1,Z=0,Y=0,W=0] 
* CE 64: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):3
     [B1>=Out+3,Out>=0,X>=4,V>=2,B1=A1+1,Z=0,Y=0,W=0] 
* CE 65: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,B1):1
     [X>=Y+1,A1>=0,Y>=1,X>=4,V>=2,A1=Z+1,B1=0,W=0,Out=0] 
* CE 66: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,Out):2
     [X>=Y+1,Out>=0,Y>=1,X>=4,V>=2,Out+1=Z,Out+2=A1,W=0] 
* CE 67: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,Out):3
     [A1>=Out+3,X>=Y+1,Out>=0,Y>=1,X>=4,V>=2,A1=Z+1,W=0] 
* CE 68: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,A1):1
     [Z>=0,X>=4,V>=2,Z=Y+1,A1=0,W=0,Out=0] 
* CE 69: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,Out):2
     [Out>=0,X>=4,V>=2,Out+1=Y,Out+2=Z,W=0] 
* CE 70: bsort(V,Out) = 1+ bubble(V,W):2+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,Out>=0,X>=4,V>=2,Z=Y+1,W=0] 
* CE 71: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):2+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,C1):1
     [B1>=0,V>=2,B1=V+A1+1,Z=0,C1=0,Y=0,X=0,W=0,Out=0] 
* CE 72: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):2+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):2
     [Out>=0,V>=2,Out+1=V+A1,Out+2=B1,Z=0,Y=0,X=0,W=0] 
* CE 73: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):2+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):3
     [B1>=Out+3,Out>=0,V>=2,B1=V+A1+1,Z=0,Y=0,X=0,W=0] 
* CE 74: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):2+ bsort(X,Y)+ last(Z,A1):1
     [Z>=0,V>=2,Z=V+Y+1,X=0,A1=0,W=0,Out=0] 
* CE 75: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):2+ bsort(X,Y)+ last(Z,Out):2
     [Out>=0,V>=2,Out+1=V+Y,Out+2=Z,X=0,W=0] 
* CE 76: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):2+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,Out>=0,V>=2,Z=V+Y+1,X=0,W=0] 
* CE 77: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):3+ bsort(W,X)+ last(Y,Z):1
     [V>=W+1,Y>=0,W>=1,Y=V+X+1,Z=0,Out=0] 
* CE 78: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):3+ bsort(W,X)+ last(Y,Out):2
     [V>=W+1,Out>=0,W>=1,Out+1=V+X,Out+2=Y] 
* CE 79: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,W):3+ bsort(W,X)+ last(Y,Out):3
     [Y>=Out+3,V>=W+1,Out>=0,W>=1,Y=V+X+1] 
* CE 80: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,W)+ last(X,Y):1
     [X>=0,V>=2,X=V+W+1,Y=0,Out=0] 
* CE 81: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,W)+ last(X,Out):2
     [Out>=0,V>=2,Out+1=V+W,Out+2=X] 
* CE 82: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,W)+ last(X,Out):3
     [X>=Out+3,Out>=0,V>=2,X=V+W+1] 
* CE 83: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):2+ bsort(Y,Z)+ last(A1,B1):1
     [A1>=0,W>=4,V>=2,A1=V+Z+1,Y=0,B1=0,X=0,Out=0] 
* CE 84: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):2+ bsort(Y,Z)+ last(A1,Out):2
     [Out>=0,W>=4,V>=2,Out+1=V+Z,Out+2=A1,Y=0,X=0] 
* CE 85: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):2+ bsort(Y,Z)+ last(A1,Out):3
     [A1>=Out+3,Out>=0,W>=4,V>=2,A1=V+Z+1,Y=0,X=0] 
* CE 86: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):3+ bsort(X,Y)+ last(Z,A1):1
     [W>=X+1,Z>=0,X>=1,W>=4,V>=2,Z=V+Y+1,A1=0,Out=0] 
* CE 87: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):3+ bsort(X,Y)+ last(Z,Out):2
     [W>=X+1,Out>=0,X>=1,W>=4,V>=2,Out+1=V+Y,Out+2=Z] 
* CE 88: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,X):3+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,W>=X+1,Out>=0,X>=1,W>=4,V>=2,Z=V+Y+1] 
* CE 89: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,W):4+ bsort(W,X)+ last(Y,Z):1
     [Y>=0,W>=4,V>=2,Y=V+X+1,Z=0,Out=0] 
* CE 90: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,W):4+ bsort(W,X)+ last(Y,Out):2
     [Out>=0,W>=4,V>=2,Out+1=V+X,Out+2=Y] 
* CE 91: bsort(V,Out) = 1+ bubble(V,V):3+ bubble(V,W):4+ butlast(W,W):4+ bsort(W,X)+ last(Y,Out):3
     [Y>=Out+3,Out>=0,W>=4,V>=2,Y=V+X+1] 
* CE 92: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,D1):1
     [C1>=0,V>=2,W>=4,C1=W+B1+1,A1=0,D1=0,Z=0,Y=0,X=0,Out=0] 
* CE 93: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,Out):2
     [Out>=0,V>=2,W>=4,Out+1=W+B1,Out+2=C1,A1=0,Z=0,Y=0,X=0] 
* CE 94: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):2+ butlast(Y,Z):2+ bsort(A1,B1)+ last(C1,Out):3
     [C1>=Out+3,Out>=0,V>=2,W>=4,C1=W+B1+1,A1=0,Z=0,Y=0,X=0] 
* CE 95: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,B1):1
     [A1>=0,V>=2,W>=4,A1=W+Z+1,Y=0,B1=0,X=0,Out=0] 
* CE 96: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,Out):2
     [Out>=0,V>=2,W>=4,Out+1=W+Z,Out+2=A1,Y=0,X=0] 
* CE 97: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):2+ bsort(Y,Z)+ last(A1,Out):3
     [A1>=Out+3,Out>=0,V>=2,W>=4,A1=W+Z+1,Y=0,X=0] 
* CE 98: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,A1):1
     [V>=X+1,Z>=0,X>=1,W>=4,Z=W+Y+1,A1=0,Out=0] 
* CE 99: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,Out):2
     [V>=X+1,Out>=0,X>=1,W>=4,Out+1=W+Y,Out+2=Z] 
* CE 100: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,X):3+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,V>=X+1,Out>=0,X>=1,W>=4,Z=W+Y+1] 
* CE 101: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Z):1
     [Y>=0,V>=2,W>=4,Y=W+X+1,Z=0,Out=0] 
* CE 102: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Out):2
     [Out>=0,V>=2,W>=4,Out+1=W+X,Out+2=Y] 
* CE 103: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,V):3+ butlast(V,V):4+ bsort(V,X)+ last(Y,Out):3
     [Y>=Out+3,Out>=0,V>=2,W>=4,Y=W+X+1] 
* CE 104: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,C1):1
     [B1>=0,X>=4,V>=2,W>=4,B1=W+A1+1,Z=0,C1=0,Y=0,Out=0] 
* CE 105: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):2
     [Out>=0,X>=4,V>=2,W>=4,Out+1=W+A1,Out+2=B1,Z=0,Y=0] 
* CE 106: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):2+ bsort(Z,A1)+ last(B1,Out):3
     [B1>=Out+3,Out>=0,X>=4,V>=2,W>=4,B1=W+A1+1,Z=0,Y=0] 
* CE 107: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,B1):1
     [X>=Y+1,A1>=0,Y>=1,X>=4,V>=2,W>=4,A1=W+Z+1,B1=0,Out=0] 
* CE 108: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,Out):2
     [X>=Y+1,Out>=0,Y>=1,X>=4,V>=2,W>=4,Out+1=W+Z,Out+2=A1] 
* CE 109: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,Y):3+ bsort(Y,Z)+ last(A1,Out):3
     [A1>=Out+3,X>=Y+1,Out>=0,Y>=1,X>=4,V>=2,W>=4,A1=W+Z+1] 
* CE 110: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,A1):1
     [Z>=0,X>=4,V>=2,W>=4,Z=W+Y+1,A1=0,Out=0] 
* CE 111: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,Out):2
     [Out>=0,X>=4,V>=2,W>=4,Out+1=W+Y,Out+2=Z] 
* CE 112: bsort(V,Out) = 1+ bubble(V,W):4+ bubble(V,X):4+ butlast(X,X):4+ bsort(X,Y)+ last(Z,Out):3
     [Z>=Out+3,Out>=0,X>=4,V>=2,W>=4,Z=W+Y+1] 

### Cost equations --> "Loop" of bsort/2 
* CEs [78,87,90] --> Loop 27 
* CEs [61,81,82,102,103] --> Loop 28 
* CEs [57,60,66,69] --> Loop 29 
* CEs [52] --> Loop 30 
* CEs [72,75,84] --> Loop 31 
* CEs [51,54,63] --> Loop 32 
* CEs [56,58,59,65,67,68,70,77,79,80,86,88,89,91,98,99,100,101,107,108,109,110,111,112] --> Loop 33 
* CEs [55,64,71,73,74,76,83,85,92,93,94,95,96,97,104,105,106] --> Loop 34 
* CEs [50,53,62] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [37,45,46] --> Loop 37 
* CEs [39,42] --> Loop 38 
* CEs [40,43,48,49] --> Loop 39 
* CEs [35,44] --> Loop 40 
* CEs [38,41,47] --> Loop 41 
* CEs [33] --> Loop 42 
* CEs [34] --> Loop 43 

#### Loops of bsort/2 
* Loop 27: bsort(V,Out)->  bsort(V',Out')
                  [V'>=1,Out>=0,V>=2,V+Out'=Out+1] 
* Loop 28: bsort(V,Out)->  bsort(V,Out')
                  [Out>=0,V>=2] 
* Loop 29: bsort(V,Out)->  bsort(V',Out')
                  [V'>=1,Out>=0,V>=2,Out+1=Out'] 
* Loop 30: bsort(V,Out)->  bsort(V',Out')
                  [Out'>=Out+2,Out>=0,V>=1,V'=0] 
* Loop 31: bsort(V,Out)->  bsort(V',Out')
                  [Out>=0,V>=2,V+Out'=Out+1,V'=0] 
* Loop 32: bsort(V,Out)->  bsort(V',Out')
                  [Out>=0,V>=1,Out+1=Out',V'=0] 
* Loop 33: bsort(V,Out)->  bsort(V',Out')
                  [V'>=1,Out>=0,V>=2] 
* Loop 34: bsort(V,Out)->  bsort(V',Out')
                  [Out>=0,V>=2,V'=0] 
* Loop 35: bsort(V,Out)->  bsort(V',Out')
                  [Out'+1>=0,V>=1,V'=0,Out=0] 
* Loop 36: bsort(V,Out)->  bsort(V',Out)
                  [Out>=0,V'=1,V=1] 
* Loop 37: bsort(V,Out)->  bsort(V',Out')
                  [Out'>=Out+1,Out>=0,V'=1,V=1] 
* Loop 38: bsort(V,Out)->  bsort(V',Out)
                  [Out>=0,V'=0,V=1] 
* Loop 39: bsort(V,Out)->  bsort(V',Out')
                  [Out'>=Out+1,Out>=0,V'=0,V=1] 
* Loop 40: bsort(V,Out)->  bsort(V',Out')
                  [Out'+2>=0,V'=1,Out=0,V=1] 
* Loop 41: bsort(V,Out)->  bsort(V',Out')
                  [Out'+2>=0,V'=0,Out=0,V=1] 
* Loop 42: bsort(V,Out) [V>=0,Out=0] 
* Loop 43: bsort(V,Out) [Out=1,V=1] 

### Ranking functions of CR bsort(V,Out) 

#### Partial ranking functions of CR bsort(V,Out) 


### Resulting Chains:bsort(V,Out) 
* [[36,37,40]]...
* [[36,37,40],43]
* [[36,37,40],42]
* [[36,37,40],41,42]
* [[36,37,40],38,42]
* [[36,37,40],35,42]
* [[27,28,29,33]]...
* [[27,28,29,33],[36,37,40]]...
* [[27,28,29,33],[36,37,40],43]
* [[27,28,29,33],[36,37,40],42]
* [[27,28,29,33],[36,37,40],41,42]
* [[27,28,29,33],[36,37,40],38,42]
* [[27,28,29,33],[36,37,40],35,42]
* [[27,28,29,33],43]
* [[27,28,29,33],42]
* [[27,28,29,33],41,42]
* [[27,28,29,33],38,42]
* [[27,28,29,33],35,42]
* [[27,28,29,33],34,42]
* [[27,28,29,33],31,42]
* [43]
* [42]
* [41,42]
* [38,42]
* [35,42]
* [34,42]
* [31,42]


### Merging Chains  bsort/2 into  External patterns of execution 
* [[42,38],[42,41],[42,35,[36,37,40]],[42,38,[36,37,40]],[42,41,[36,37,40]],[42,[36,37,40]],[43,[36,37,40]]] --> 1 
* [[43]] --> 2 
* [[42,35],[42]] --> 3 
* [[42,31],[42,34],[42,31,[27,28,29,33]],[42,34,[27,28,29,33]],[42,35,[27,28,29,33]],[42,38,[27,28,29,33]],[42,41,[27,28,29,33]],[42,[27,28,29,33]],[43,[27,28,29,33]],[42,35,[36,37,40],[27,28,29,33]],[42,38,[36,37,40],[27,28,29,33]],[42,41,[36,37,40],[27,28,29,33]],[42,[36,37,40],[27,28,29,33]],[43,[36,37,40],[27,28,29,33]]] --> 4 
* [[[36,37,40]]] --> 5 
* [[[27,28,29,33]],[[36,37,40],[27,28,29,33]]] --> 6 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [113,114,115,116,117,118] 
* CE 3 is refined into CE [119,120,121,122] 
* CE 4 is refined into CE [123,124,125] 
* CE 5 is refined into CE [126,127,128,129] 


#### Refined cost equations start/1 
* CE 113: start(V) = 0+ bsort(W,X):1
     [X>=0,1>=X,W=1,V=1] 
* CE 114: start(V) = 0+ bsort(W,X):2
     [X=1,W=1,V=1] 
* CE 115: start(V) = 0+ bsort(V,W):3
     [V>=0,W=0] 
* CE 116: start(V) = 0+ bsort(V,W):4
     [W>=0,V>=2] 
* CE 117: start(V) = 0+ bsort(W,X):5
     [X>=0,W=1,V=1] 
* CE 118: start(V) = 0+ bsort(V,W):6
     [W>=0,V>=2] 
* CE 119: start(V) = 0+ bubble(W,X):1
     [X=1,W=1,V=1] 
* CE 120: start(V) = 0+ bubble(V,W):2
     [V>=0,W=0] 
* CE 121: start(V) = 0+ bubble(V,V):3
     [V>=2] 
* CE 122: start(V) = 0+ bubble(V,W):4
     [W>=4,V>=2] 
* CE 123: start(V) = 0+ last(V,W):1
     [V>=0,W=0] 
* CE 124: start(V) = 0+ last(W,X):2
     [X>=0,X+2=W,X+2=V] 
* CE 125: start(V) = 0+ last(V,W):3
     [V>=W+3,W>=0] 
* CE 126: start(V) = 0+ butlast(W,X):1
     [X=1,W=1,V=1] 
* CE 127: start(V) = 0+ butlast(V,W):2
     [V>=0,W=0] 
* CE 128: start(V) = 0+ butlast(V,W):3
     [V>=W+1,W>=1] 
* CE 129: start(V) = 0+ butlast(V,V):4
     [V>=2] 

### Cost equations --> "Loop" of start/1 
* CEs [113,114,115,116,119,120,121,122,123,124,125,126,127,128,129] --> Loop 44 
* CEs [118] --> Loop 45 
* CEs [117] --> Loop 46 

#### Loops of start/1 
* Loop 44: start(V) [V>=0] 
* Loop 45: start(V) [V>=2] 
* Loop 46: start(V) [V=1] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [46]...
* [45]...
* [44]


### Merging Chains  start/1 into  External patterns of execution 
* [[44]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:bubble(V,Out) -> [bubble(V',Out'),bubble(V'2,Out'2)] 
1
#### Cost of phase [16]:bubble(V,Out) -> [] 
1*it(16)+2*it([17])+0
#### Cost of chains of bubble(V,Out):
* Chain [19]: 1
  with precondition: [V=1,Out=1] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0] 

* Chain [17]: 1
  with precondition: [V=Out,V>=2] 

* Chain [multiple([16],[[19],[18],[17]])]: 1*it(16)+2*it([17])+0
  with precondition: [V>=2,Out>=4] 


#### Cost of loops [20] 

 * loop 20:butlast(V,Out) -> [butlast(V',Out')] 
1
#### Cost of phase [20]:butlast(V,Out) -> [butlast(V',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:butlast(V,Out) -> [butlast(V',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:butlast(V,Out) -> [butlast(V',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of chains of butlast(V,Out):
* Chain [[20],23]: 1*it(20)+1
  Such that:it(20) =< Out

  with precondition: [V=Out,V>=2] 

* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< Out

  with precondition: [Out>=1,V>=Out+1] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< Out

  with precondition: [Out>=2,V>=Out+1] 

* Chain [23]: 1
  with precondition: [V=1,Out=1] 

* Chain [22]: 0
  with precondition: [Out=0,V>=0] 

* Chain [21]: 1
  with precondition: [Out=1,V>=2] 


#### Cost of loops [24] 

 * loop 24:last(V,Out) -> [last(V',Out')] 
1
#### Cost of phase [24]:last(V,Out) -> [last(V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of phase [24]:last(V,Out) -> [last(V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of chains of last(V,Out):
* Chain [[24],26]: 1*it(24)+1
  Such that:it(24) =< V

  with precondition: [Out=0,V>=2] 

* Chain [[24],25]: 1*it(24)+1
  Such that:it(24) =< V-Out

  with precondition: [Out>=0,V>=Out+3] 

* Chain [26]: 1
  with precondition: [Out=0,V>=0] 

* Chain [25]: 1
  with precondition: [V=Out+2,V>=2] 


#### Cost of loops [36,37,40] 

 * loop 36:bsort(V,Out) -> [bsort(V',Out')] 
5
 * loop 37:bsort(V,Out) -> [bsort(V',Out')] 
1*s(6)+0
 * loop 40:bsort(V,Out) -> [bsort(V',Out')] 
1*s(9)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of phase [36,37,40]:bsort(V,Out) -> [bsort(V',Out')] 
7*it(36)+0
#### Cost of loops [27,28,29,33] 

 * loop 27:bsort(V,Out) -> [bsort(V',Out')] 
5*s(30)+6*s(31)+5
  Such that:s(29) =< V'
s(30) =< s(29)

 * loop 28:bsort(V,Out) -> [bsort(V',Out')] 
5*s(45)+9*s(46)+5
  Such that:s(44) =< V'
s(45) =< s(44)

 * loop 29:bsort(V,Out) -> [bsort(V',Out')] 
6*s(58)+6*s(59)+4
  Such that:s(57) =< V'
s(58) =< s(57)

 * loop 33:bsort(V,Out) -> [bsort(V',Out')] 
38*s(168)+93*s(169)+5
  Such that:s(167) =< V'
s(168) =< s(167)

#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of phase [27,28,29,33]:bsort(V,Out) -> [bsort(V',Out')] 
133*it(27)+5*s(170)+5*s(173)+6*s(176)+38*s(179)+0
#### Cost of chains of bsort(V,Out):
* Chain [[36,37,40]]...: 7*it(36)+0
  with precondition: [V=1,Out>=0] 

* Chain [[36,37,40],43]: 7*it(36)+1
  with precondition: [V=1,1>=Out,Out>=0] 

* Chain [[36,37,40],42]: 7*it(36)+0
  with precondition: [V=1,Out=0] 

* Chain [[36,37,40],41,42]: 8*aux(11)+0
  with precondition: [V=1,Out=0] 

* Chain [[36,37,40],38,42]: 7*it(36)+4
  with precondition: [V=1,Out=0] 

* Chain [[36,37,40],35,42]: 8*aux(12)+0
  with precondition: [V=1,Out=0] 

* Chain [[27,28,29,33]]...: 187*it(27)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40]]...: 194*it(27)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40],43]: 194*it(27)+1
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40],42]: 194*it(27)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40],41,42]: 195*aux(11)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40],38,42]: 194*it(27)+4
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],[36,37,40],35,42]: 195*aux(12)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],43]: 187*it(27)+1
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],42]: 187*it(27)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],41,42]: 188*aux(11)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],38,42]: 187*it(27)+4
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],35,42]: 188*aux(12)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],34,42]: 188*aux(28)+0
  with precondition: [V>=2,Out>=0] 

* Chain [[27,28,29,33],31,42]: 188*aux(29)+0
  with precondition: [V>=2,Out>=0] 

* Chain [43]: 1
  with precondition: [V=1,Out=1] 

* Chain [42]: 0
  with precondition: [Out=0,V>=0] 

* Chain [41,42]: 1*aux(11)+0
  with precondition: [V=1,Out=0] 

* Chain [38,42]: 4
  with precondition: [V=1,Out=0] 

* Chain [35,42]: 1*aux(12)+0
  with precondition: [Out=0,V>=1] 

* Chain [34,42]: 1*aux(28)+0
  with precondition: [V>=2,Out>=0] 

* Chain [31,42]: 1*aux(29)+0
  with precondition: [V=Out+1,V>=2] 


#### Cost of chains of start(V):
* Chain [46]...: 7*s(251)+0
  with precondition: [V=1] 

* Chain [45]...: 1*s(252)+0
  with precondition: [V>=2] 

* Chain [44]: 6*s(253)+5*s(258)+1
  Such that:aux(34) =< V
s(258) =< aux(34)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [46]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 71 ms.
   - Backward Invariants 42 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 258 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 184 ms.
   - Equation cost structures 76 ms.
   - Phase cost structures 109 ms.
   - Chain cost structures 24 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 555 ms.

