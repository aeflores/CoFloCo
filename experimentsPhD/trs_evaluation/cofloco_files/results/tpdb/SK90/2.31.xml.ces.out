
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [not/2]
1. recursive [non_tail] : [odd/2]
2. recursive  : [plus/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into not/2
1. SCC is partially evaluated into odd/2
2. SCC is partially evaluated into plus/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations not/2 
* CE 5 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations not/2 
* CE 12: not(V,Out) = 1
     [Out=0,V=1] 
* CE 13: not(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of not/2 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of not/2 
* Loop 9: not(V,Out) [Out=0,V=1] 
* Loop 10: not(V,Out) [Out=1,V=0] 

### Ranking functions of CR not(V,Out) 

#### Partial ranking functions of CR not(V,Out) 


### Resulting Chains:not(V,Out) 
* [10]
* [9]


### Merging Chains  not/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations odd/2 
* CE 8 is refined into CE [14,15] 
* CE 7 is refined into CE [16] 


#### Refined cost equations odd/2 
* CE 14: odd(V,Out) = 1+ odd(W,X)+ not(Y,Z):1
     [W>=0,W+1=V,X=0,Z=1,Y=0,Out=1] 
* CE 15: odd(V,Out) = 1+ odd(W,X)+ not(Y,Z):2
     [W>=0,W+1=V,X=1,Z=0,Y=1,Out=0] 
* CE 16: odd(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of odd/2 
* CEs [16] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of odd/2 
* Loop 11: odd(V,Out) [Out=0,V=0] 
* Loop 12: odd(V,Out)->  odd(V',Out')
                  [V>=1,V=V'+1,Out'=0,Out=1] 
* Loop 13: odd(V,Out)->  odd(V',Out')
                  [V>=1,V=V'+1,Out'=1,Out=0] 

### Ranking functions of CR odd(V,Out) 
* RF of phase [12,13]: [V]

#### Partial ranking functions of CR odd(V,Out) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1,13:1]:
    V


### Resulting Chains:odd(V,Out) 
* [[12,13],11]
* [11]


### Merging Chains  odd/2 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[12,13]]] --> 2 


### Specialization of cost equations plus/3 
* CE 10 is refined into CE [17] 
* CE 11 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations plus/3 
* CE 17: plus(V,V2,Out) = 1+ plus(V,W2,X2)
     [W2>=0,V>=0,X2+1=Out,W2+1=V2] 
* CE 18: plus(V,V2,Out) = 1+ plus(W2,V2,X2)
     [W2>=0,V2>=0,X2+1=Out,W2+1=V] 
* CE 19: plus(A,B,A) = 1
     [A>=0,B=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of plus/3 
* Loop 14: plus(A,B,A) [A>=0,B=0] 
* Loop 15: plus(V,V2,Out)->  plus(V,V2',Out')
                  [V2>=1,V>=0,Out=Out'+1,V2=V2'+1] 
* Loop 16: plus(V,V2,Out)->  plus(V',V2,Out')
                  [V2>=0,V>=1,Out=Out'+1,V=V'+1] 

### Ranking functions of CR plus(V,V2,Out) 
* RF of phase [15,16]: [V+V2]

#### Partial ranking functions of CR plus(V,V2,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    V2
  - RF of loop [16:1]:
    V


### Resulting Chains:plus(V,V2,Out) 
* [[15,16],14]
* [14]


### Merging Chains  plus/3 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[15,16]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [20,21] 
* CE 3 is refined into CE [22,23] 
* CE 4 is refined into CE [24,25] 


#### Refined cost equations start/2 
* CE 20: start(V,V2) = 0+ not(W2,X2):1
     [X2=1,W2=0,V=0] 
* CE 21: start(V,V2) = 0+ not(W2,X2):2
     [X2=0,W2=1,V=1] 
* CE 22: start(V,V2) = 0+ odd(W2,X2):1
     [X2=0,W2=0,V=0] 
* CE 23: start(V,V2) = 0+ odd(V,W2):2
     [V+W2>=2,W2>=0,1>=W2] 
* CE 24: start(V,V2) = 0+ plus(V,W2,V):1
     [V>=0,W2=0,V2=0] 
* CE 25: start(V,V2) = 0+ plus(V,W2,X2):2
     [X2>=V,X2>=1,V>=0,X2=V+W2,X2=V+V2] 

### Cost equations --> "Loop" of start/2 
* CEs [25] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [21,23] --> Loop 19 
* CEs [20,22] --> Loop 20 

#### Loops of start/2 
* Loop 17: start(V,V2) [V+V2>=1,V2>=0,V>=0] 
* Loop 18: start(V,V2) [V>=0,V2=0] 
* Loop 19: start(V,V2) [V>=1] 
* Loop 20: start(V,V2) [V=0] 

### Ranking functions of CR start(V,V2) 

#### Partial ranking functions of CR start(V,V2) 


### Resulting Chains:start(V,V2) 
* [20]
* [19]
* [18]
* [17]


### Merging Chains  start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 
* [[19]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of not(V,Out):
* Chain [10]: 1
  with precondition: [V=0,Out=1] 

* Chain [9]: 1
  with precondition: [V=1,Out=0] 


#### Cost of loops [12,13] 

 * loop 12:odd(V,Out) -> [odd(V',Out')] 
2
 * loop 13:odd(V,Out) -> [odd(V',Out')] 
2
#### Cost of phase [12,13]:odd(V,Out) -> [odd(V',Out')] 
4*it(12)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(12) =< aux(1)
it(12) =< aux(2)

#### Cost of chains of odd(V,Out):
* Chain [[12,13],11]: 4*it(12)+1
  Such that:aux(3) =< V
it(12) =< aux(3)

  with precondition: [1>=Out,Out>=0,Out+V>=2] 

* Chain [11]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [15,16] 

 * loop 15:plus(V,V2,Out) -> [plus(V',V2',Out')] 
1
 * loop 16:plus(V,V2,Out) -> [plus(V',V2',Out')] 
1
#### Cost of phase [15,16]:plus(V,V2,Out) -> [plus(V',V2',Out')] 
1*it(15)+1*it(16)+0
  Such that:it(16) =< V
it(16) =< V-V'
it(15) =< V2
it(15) =< V2-V2'
aux(4) =< V+V2
aux(5) =< V+V2-V'-V2'
it(15) =< aux(4)
it(16) =< aux(4)
it(15) =< aux(5)
it(16) =< aux(5)

#### Cost of chains of plus(V,V2,Out):
* Chain [[15,16],14]: 1*it(15)+1*it(16)+1
  Such that:it(16) =< -V2+Out
it(15) =< V2
aux(6) =< Out
it(15) =< aux(6)
it(16) =< aux(6)

  with precondition: [V+V2=Out,V>=0,V2>=0,V+V2>=1] 

* Chain [14]: 1
  with precondition: [V2=0,V=Out,V>=0] 


#### Cost of chains of start(V,V2):
* Chain [20]: 1
  with precondition: [V=0] 

* Chain [19]: 4*s(2)+1
  Such that:s(1) =< V
s(2) =< s(1)

  with precondition: [V>=1] 

* Chain [18]: 1
  with precondition: [V2=0,V>=0] 

* Chain [17]: 1*s(3)+1*s(4)+1
  Such that:s(3) =< V
s(5) =< V+V2
s(4) =< V2
s(4) =< s(5)
s(3) =< s(5)

  with precondition: [V>=0,V2>=0,V+V2>=1] 


Closed-form bounds of start(V,V2): 
-------------------------------------
* Chain [20] with precondition: [V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V>=1] 
    - Upper bound: 4*V+1 
    - Complexity: n 
* Chain [18] with precondition: [V2=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [17] with precondition: [V>=0,V2>=0,V+V2>=1] 
    - Upper bound: V+V2+1 
    - Complexity: n 

### Maximum cost of start(V,V2): max([3*V,nat(V2)])+V+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 24 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 92 ms.

