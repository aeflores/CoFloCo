
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [p/2]
1. recursive  : [fac/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into p/2
1. SCC is partially evaluated into fac/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations p/2 
* CE 6 is refined into CE [9] 
* CE 8 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations p/2 
* CE 9: p(V,Out) = 1
     [Out=0,V=1] 
* CE 10: p(V,Out) = 0
     [V>=0,Out=0] 
* CE 11: p(V,Out) = 1+ p(W,X)
     [V>=2,V=W+1,X+1=Out] 

### Cost equations --> "Loop" of p/2 
* CEs [11] --> Loop 6 
* CEs [9,10] --> Loop 7 

#### Loops of p/2 
* Loop 6: p(V,Out)->  p(V',Out')
                  [V>=2,Out=Out'+1,V=V'+1] 
* Loop 7: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 
* RF of phase [6]: [V-1]

#### Partial ranking functions of CR p(V,Out) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V-1


### Resulting Chains:p(V,Out) 
* [[6],7]
* [7]


### Merging Chains  p/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations fac/2 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 


#### Refined cost equations fac/2 
* CE 12: fac(V,Out) = 0
     [V>=0,Out=0] 
* CE 13: fac(V,Out) = 1+ p(V,W):1+ fac(X,Y)
     [V>=1,V+Y+1=Out,X=0,W=0] 
* CE 14: fac(V,Out) = 1+ p(V,W):2+ fac(W,X)
     [V>=W+1,W>=1,V+X+1=Out] 

### Cost equations --> "Loop" of fac/2 
* CEs [14] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of fac/2 
* Loop 8: fac(V,Out)->  fac(V',Out')
                  [V>=V'+1,V'>=1,V+Out'+1=Out] 
* Loop 9: fac(V,Out)->  fac(V',Out')
                  [V>=1,V+Out'+1=Out,V'=0] 
* Loop 10: fac(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fac(V,Out) 
* RF of phase [8]: [V-1]

#### Partial ranking functions of CR fac(V,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V-1


### Resulting Chains:fac(V,Out) 
* [[8],10]
* [[8],9,10]
* [10]
* [9,10]


### Merging Chains  fac/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,9]] --> 2 
* [[10,9,[8]],[10,[8]]] --> 3 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [15,16,17] 
* CE 3 is refined into CE [18,19] 


#### Refined cost equations start/1 
* CE 15: start(V) = 0+ fac(V,W):1
     [V>=0,W=0] 
* CE 16: start(V) = 0+ fac(W,X):2
     [X>=2,X=W+1,X=V+1] 
* CE 17: start(V) = 0+ fac(V,W):3
     [W>=V+1,V>=2] 
* CE 18: start(V) = 0+ p(V,W):1
     [V>=0,W=0] 
* CE 19: start(V) = 0+ p(V,W):2
     [V>=W+1,W>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [15,16,17,18,19] --> Loop 11 

#### Loops of start/1 
* Loop 11: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [11]


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:p(V,Out) -> [p(V',Out')] 
1
#### Cost of phase [6]:p(V,Out) -> [p(V',Out')] 
1*it(6)+0
  Such that:it(6) =< V
it(6) =< V-V'

#### Cost of chains of p(V,Out):
* Chain [[6],7]: 1*it(6)+1
  Such that:it(6) =< Out

  with precondition: [Out>=1,V>=Out+1] 

* Chain [7]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [8] 

 * loop 8:fac(V,Out) -> [fac(V',Out')] 
1*s(2)+2
  Such that:s(2) =< V'

#### Cost of phase [8]:fac(V,Out) -> [fac(V',Out')] 
2*it(8)+1*s(3)+0
  Such that:it(8) =< V-V'
aux(2) =< V
it(8) =< aux(2)
s(3) =< it(8)*aux(2)

#### Cost of phase [8]:fac(V,Out) -> [fac(V',Out')] 
2*it(8)+1*s(3)+0
  Such that:it(8) =< V-V'
aux(2) =< V
it(8) =< aux(2)
s(3) =< it(8)*aux(2)

#### Cost of chains of fac(V,Out):
* Chain [[8],10]: 2*it(8)+1*s(3)+0
  Such that:aux(3) =< V
it(8) =< aux(3)
s(3) =< it(8)*aux(3)

  with precondition: [V>=2,Out>=V+1] 

* Chain [[8],9,10]: 2*it(8)+1*s(3)+2
  Such that:aux(4) =< V
it(8) =< aux(4)
s(3) =< it(8)*aux(4)

  with precondition: [V>=2,Out>=V+3] 

* Chain [10]: 0
  with precondition: [Out=0,V>=0] 

* Chain [9,10]: 2
  with precondition: [V+1=Out,V>=1] 


#### Cost of chains of start(V):
* Chain [11]: 5*s(11)+2*s(12)+2
  Such that:aux(6) =< V
s(11) =< aux(6)
s(12) =< s(11)*aux(6)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [11] with precondition: [V>=0] 
    - Upper bound: 5*V+2+2*V*V 
    - Complexity: n^2 

### Maximum cost of start(V): 5*V+2+2*V*V 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 14 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 20 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 61 ms.

