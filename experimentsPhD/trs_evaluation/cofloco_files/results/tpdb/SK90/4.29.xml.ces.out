
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [merge/3]
1. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into merge/3
1. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations merge/3 
* CE 7 is refined into CE [8] 
* CE 3 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 6 is refined into CE [12] 


#### Refined cost equations merge/3 
* CE 8: merge(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 9: merge(A,B,A) = 1
     [A>=0,B=0] 
* CE 10: merge(A,B,B) = 1
     [B>=0,A=0] 
* CE 11: merge(V1,V,Out) = 1+ merge(W1,X1,Y1)
     [V1+Y1>=Out,Out>=Y1+1,V1+Y1=Out+W1,X1=2,V=2] 
* CE 12: merge(V1,V,Out) = 1+ merge(V1,W1,X1)
     [V1>=1,X1+1=Out,W1=1,V=2] 

### Cost equations --> "Loop" of merge/3 
* CEs [11] --> Loop 7 
* CEs [12] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of merge/3 
* Loop 7: merge(V1,V,Out)->  merge(V1',V',Out')
                  [V1>=V1'+1,V1'>=0,Out+V1'=V1+Out',V'=2,V=2] 
* Loop 8: merge(V1,V,Out)->  merge(V1,V',Out')
                  [V1>=1,Out=Out'+1,V'=1,V=2] 
* Loop 9: merge(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 10: merge(A,B,A) [A>=0,B=0] 
* Loop 11: merge(A,B,B) [B>=0,A=0] 

### Ranking functions of CR merge(V1,V,Out) 
* RF of phase [7]: [V1]

#### Partial ranking functions of CR merge(V1,V,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V1


### Resulting Chains:merge(V1,V,Out) 
* [[7],11]
* [[7],9]
* [[7],8,9]
* [11]
* [10]
* [9]
* [8,9]


### Merging Chains  merge/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[9,8],[9,8,[7]],[9,[7]]] --> 3 
* [[11,[7]]] --> 4 
* [[9]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [13,14,15,16,17] 


#### Refined cost equations start/2 
* CE 13: start(V1,V) = 0+ merge(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 14: start(V1,V) = 0+ merge(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 15: start(V1,V) = 0+ merge(V1,W1,X1):3
     [V1>=X1,X1>=1,W1=2,V=2] 
* CE 16: start(V1,V) = 0+ merge(W1,X1,Y1):4
     [Y1>=3,Y1=W1+2,Y1=V1+2,X1=2,V=2] 
* CE 17: start(V1,V) = 0+ merge(V1,V,W1):5
     [V>=0,V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [15,16] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [13,17] --> Loop 14 

#### Loops of start/2 
* Loop 12: start(V1,V) [V1>=1,V=2] 
* Loop 13: start(V1,V) [V1>=0,V=0] 
* Loop 14: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [14]
* [13]
* [12]


### Merging Chains  start/2 into  External patterns of execution 
* [[13],[14]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:merge(V1,V,Out) -> [merge(V1',V',Out')] 
1
#### Cost of phase [7]:merge(V1,V,Out) -> [merge(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'

#### Cost of phase [7]:merge(V1,V,Out) -> [merge(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'

#### Cost of phase [7]:merge(V1,V,Out) -> [merge(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'

#### Cost of chains of merge(V1,V,Out):
* Chain [[7],11]: 1*it(7)+1
  Such that:it(7) =< Out

  with precondition: [V=2,V1+2=Out,V1>=1] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< Out

  with precondition: [V=2,Out>=1,V1>=Out] 

* Chain [[7],8,9]: 1*it(7)+1
  Such that:it(7) =< Out

  with precondition: [V=2,Out>=2,V1>=Out] 

* Chain [11]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [10]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [9]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [8,9]: 1
  with precondition: [V=2,Out=1,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [14]: 1
  with precondition: [V1>=0,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,V1>=0] 

* Chain [12]: 2*s(4)+1*s(5)+1
  Such that:s(3) =< V1
s(5) =< V1+2
s(4) =< s(3)

  with precondition: [V=2,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [14] with precondition: [V1>=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V=2,V1>=1] 
    - Upper bound: 3*V1+3 
    - Complexity: n 

### Maximum cost of start(V1,V): 3*V1+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 24 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 68 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 60 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 230 ms.

