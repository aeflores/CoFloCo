
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [badd/3]
1. non_recursive  : [goal/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into badd/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations badd/3 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


#### Refined cost equations badd/3 
* CE 6: badd(A,B,A) = 1
     [A>=0,B=0] 
* CE 7: badd(V1,V,Out) = 1+ badd(V1,W1,X1)+ badd(Y1,X1,Out)
     [V>=W1+1,W1>=0,V1>=0,Y1=1] 

### Cost equations --> "Loop" of badd/3 
* CEs [7] --> Loop 4 
* CEs [6] --> Loop 5 

#### Loops of badd/3 
* Loop 4: badd(V1,V,Out)->  badd(V1,V',Out')  badd(A'2,Out',Out)
                  [V>=V'+1,V'>=0,V1>=0,A'2=1] 
* Loop 5: badd(A,B,A) [A>=0,B=0] 

### Ranking functions of CR badd(V1,V,Out) 

#### Partial ranking functions of CR badd(V1,V,Out) 
* Partial RF of phase [4]:
  - RF of loop [4:1]:
    V depends on loops [4:2] 


### Resulting Chains:badd(V1,V,Out) 
* [multiple([4],[[],[5]])]...
* [5]


### Merging Chains  badd/3 into  External patterns of execution 
* [[5]] --> 1 
* [[multiple([4],[[],[5]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [8,9] 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations start/2 
* CE 8: start(V1,V) = 0+ badd(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 9: start(V1,V) = 0+ badd(V1,V,W1):2
     [V>=1,V1>=0] 
* CE 10: start(V1,V) = 1+ badd(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 11: start(V1,V) = 1+ badd(V1,V,W1):2
     [V>=1,V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [9,11] --> Loop 6 
* CEs [8,10] --> Loop 7 

#### Loops of start/2 
* Loop 6: start(V1,V) [V>=1,V1>=0] 
* Loop 7: start(V1,V) [V1>=0,V=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [7]
* [6]...


### Merging Chains  start/2 into  External patterns of execution 
* [[7]] --> 1 
* [[6]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [4] 

 * loop 4:badd(V1,V,Out) -> [badd(V1',V',Out'),badd(V1'2,V'2,Out'2)] 
1
#### Cost of phase [4]:badd(V1,V,Out) -> [] 
1*it(4)+1*it([5])+0
#### Cost of chains of badd(V1,V,Out):
* Chain [multiple([4],[[],[5]])]...: 1*it(4)+1*it([5])+0
  with precondition: [V1>=0,V>=1] 

* Chain [5]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [7]: 2
  with precondition: [V=0,V1>=0] 

* Chain [6]...: 1*aux(2)+0
  with precondition: [V1>=0,V>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [7] with precondition: [V=0,V1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [6]... with precondition: [V1>=0,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 14 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 46 ms.

