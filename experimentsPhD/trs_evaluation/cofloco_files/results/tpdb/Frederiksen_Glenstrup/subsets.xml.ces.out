
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [mapconsapp/4]
1. non_recursive  : [fun/3]
2. recursive [non_tail] : [subsets/2]
3. non_recursive  : [goal/2]
4. non_recursive  : [notEmpty/2]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into mapconsapp/4
1. SCC is partially evaluated into fun/3
2. SCC is partially evaluated into subsets/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into notEmpty/2
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations mapconsapp/4 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations mapconsapp/4 
* CE 18: mapconsapp(V,V3,V5,Out) = 0
     [V5>=0,V3>=0,V>=0,Out=0] 
* CE 19: mapconsapp(A,B,C,C) = 1
     [C>=0,A>=0,B=0] 
* CE 20: mapconsapp(V,V3,V5,Out) = 1+ mapconsapp(V,W5,V5,X5)
     [V3>=W5+1,W5>=0,V5>=0,V>=0,V+V3+X5+1=Out+W5] 

### Cost equations --> "Loop" of mapconsapp/4 
* CEs [20] --> Loop 13 
* CEs [18] --> Loop 14 
* CEs [19] --> Loop 15 

#### Loops of mapconsapp/4 
* Loop 13: mapconsapp(V,V3,V5,Out)->  mapconsapp(V,V3',V5,Out')
                  [V3>=V3'+1,V3'>=0,V5>=0,V>=0,V+V3+Out'+1=Out+V3'] 
* Loop 14: mapconsapp(V,V3,V5,Out) [V5>=0,V3>=0,V>=0,Out=0] 
* Loop 15: mapconsapp(A,B,C,C) [C>=0,A>=0,B=0] 

### Ranking functions of CR mapconsapp(V,V3,V5,Out) 
* RF of phase [13]: [V3]

#### Partial ranking functions of CR mapconsapp(V,V3,V5,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V3


### Resulting Chains:mapconsapp(V,V3,V5,Out) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  mapconsapp/4 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[14,[13]],[15,[13]]] --> 3 


### Specialization of cost equations fun/3 
* CE 16 is refined into CE [21,22,23] 
* CE 17 is refined into CE [24] 


#### Refined cost equations fun/3 
* CE 21: fun(V,V3,Out) = 0+ mapconsapp(W3,X3,Y3,Z3):1
     [V>=W3+1,W3>=0,Z3=0,Y3=0,X3=0,Out=0,V3=0] 
* CE 22: fun(V,V3,Out) = 0+ mapconsapp(W3,V3,V3,X3):2
     [V>=W3+1,V3>=0,W3>=0,X3=0,Out=0] 
* CE 23: fun(V,V3,Out) = 0+ mapconsapp(W3,V3,V3,Out):3
     [Out>=W3+2,V>=W3+1,V3>=1,W3>=0] 
* CE 24: fun(V,V3,Out) = 0
     [V3>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [23] --> Loop 16 
* CEs [21,22,24] --> Loop 17 

#### Loops of fun/3 
* Loop 16: fun(V,V3,Out) [Out>=2,V3>=1,V>=1] 
* Loop 17: fun(V,V3,Out) [V3>=0,V>=0,Out=0] 

### Ranking functions of CR fun(V,V3,Out) 

#### Partial ranking functions of CR fun(V,V3,Out) 


### Resulting Chains:fun(V,V3,Out) 
* [17]
* [16]


### Merging Chains  fun/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations subsets/2 
* CE 9 is refined into CE [25] 
* CE 8 is refined into CE [26] 
* CE 7 is refined into CE [27,28] 


#### Refined cost equations subsets/2 
* CE 25: subsets(V,Out) = 0
     [V>=0,Out=0] 
* CE 26: subsets(V,Out) = 1
     [Out=1,V=0] 
* CE 27: subsets(V,Out) = 1+ subsets(W,X)+ fun(V,X,Y):1
     [V>=W+1,W>=0,X>=0,Y=0,Out=0] 
* CE 28: subsets(V,Out) = 1+ subsets(W,X)+ fun(V,X,Out):2
     [V>=W+1,W>=0,Out>=2,X>=1] 

### Cost equations --> "Loop" of subsets/2 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of subsets/2 
* Loop 18: subsets(V,Out)->  subsets(V',Out')
                  [V>=V'+1,Out'>=1,V'>=0,Out>=2] 
* Loop 19: subsets(V,Out)->  subsets(V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,Out=0] 
* Loop 20: subsets(V,Out) [V>=0,Out=0] 
* Loop 21: subsets(V,Out) [Out=1,V=0] 

### Ranking functions of CR subsets(V,Out) 
* RF of phase [18]: [V]
* RF of phase [19]: [V]

#### Partial ranking functions of CR subsets(V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V


### Resulting Chains:subsets(V,Out) 
* [[19],[18],21]
* [[19],21]
* [[19],20]
* [[18],21]
* [21]
* [20]


### Merging Chains  subsets/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20],[20,[19]],[21,[19]],[21,[18],[19]]] --> 2 
* [[21,[18]]] --> 3 


### Specialization of cost equations notEmpty/2 
* CE 13 is refined into CE [29] 
* CE 15 is refined into CE [30] 
* CE 14 is refined into CE [31] 


#### Refined cost equations notEmpty/2 
* CE 29: notEmpty(V,Out) = 1
     [V>=1,Out=2] 
* CE 30: notEmpty(V,Out) = 0
     [V>=0,Out=0] 
* CE 31: notEmpty(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of notEmpty/2 
* Loop 22: notEmpty(V,Out) [V>=1,Out=2] 
* Loop 23: notEmpty(V,Out) [V>=0,Out=0] 
* Loop 24: notEmpty(V,Out) [Out=1,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [24]
* [23]
* [22]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [32,33,34] 
* CE 3 is refined into CE [35,36,37] 
* CE 4 is refined into CE [38,39,40] 
* CE 5 is refined into CE [41,42,43] 
* CE 6 is refined into CE [44,45] 


#### Refined cost equations start/3 
* CE 32: start(V,V3,V5) = 0+ subsets(W5,X5):1
     [X5=1,W5=0,V=0] 
* CE 33: start(V,V3,V5) = 0+ subsets(V,W5):2
     [V>=0,W5=0] 
* CE 34: start(V,V3,V5) = 0+ subsets(V,W5):3
     [W5>=2,V>=1] 
* CE 35: start(V,V3,V5) = 0+ mapconsapp(V,W5,V5,V5):1
     [V5>=0,V>=0,W5=0,V3=0] 
* CE 36: start(V,V3,V5) = 0+ mapconsapp(V,V3,V5,W5):2
     [V5>=0,V3>=0,V>=0,W5=0] 
* CE 37: start(V,V3,V5) = 0+ mapconsapp(V,V3,V5,W5):3
     [W5>=V+2,V5>=0,V3>=1,V>=0] 
* CE 38: start(V,V3,V5) = 0+ notEmpty(W5,X5):1
     [X5=1,W5=0,V=0] 
* CE 39: start(V,V3,V5) = 0+ notEmpty(V,W5):2
     [V>=0,W5=0] 
* CE 40: start(V,V3,V5) = 0+ notEmpty(V,W5):3
     [V>=1,W5=2] 
* CE 41: start(V,V3,V5) = 1+ subsets(W5,X5):1
     [X5=1,W5=0,V=0] 
* CE 42: start(V,V3,V5) = 1+ subsets(V,W5):2
     [V>=0,W5=0] 
* CE 43: start(V,V3,V5) = 1+ subsets(V,W5):3
     [W5>=2,V>=1] 
* CE 44: start(V,V3,V5) = 0+ fun(V,V3,W5):1
     [V3>=0,V>=0,W5=0] 
* CE 45: start(V,V3,V5) = 0+ fun(V,V3,W5):2
     [W5>=2,V3>=1,V>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [35] --> Loop 25 
* CEs [32,33,34,36,37,38,39,40,41,42,43,44,45] --> Loop 26 

#### Loops of start/3 
* Loop 25: start(V,V3,V5) [V5>=0,V>=0,V3=0] 
* Loop 26: start(V,V3,V5) [V>=0] 

### Ranking functions of CR start(V,V3,V5) 

#### Partial ranking functions of CR start(V,V3,V5) 


### Resulting Chains:start(V,V3,V5) 
* [26]
* [25]


### Merging Chains  start/3 into  External patterns of execution 
* [[25],[26]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:mapconsapp(V,V3,V5,Out) -> [mapconsapp(V',V3',V5',Out')] 
1
#### Cost of phase [13]:mapconsapp(V,V3,V5,Out) -> [mapconsapp(V',V3',V5',Out')] 
1*it(13)+0
  Such that:it(13) =< V3
it(13) =< V3-V3'

#### Cost of phase [13]:mapconsapp(V,V3,V5,Out) -> [mapconsapp(V',V3',V5',Out')] 
1*it(13)+0
  Such that:it(13) =< V3
it(13) =< V3-V3'

#### Cost of chains of mapconsapp(V,V3,V5,Out):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< V3

  with precondition: [V>=0,V3>=1,V5>=0,Out>=V+V3+V5+1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V3

  with precondition: [V>=0,V3>=1,V5>=0,Out>=V+2] 

* Chain [15]: 1
  with precondition: [V3=0,V5=Out,V>=0,V5>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V>=0,V3>=0,V5>=0] 


#### Cost of chains of fun(V,V3,Out):
* Chain [17]: 1
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [16]: 2*s(4)+1
  Such that:s(3) =< V3
s(4) =< s(3)

  with precondition: [V>=1,V3>=1,Out>=2] 


#### Cost of loops [18] 

 * loop 18:subsets(V,Out) -> [subsets(V',Out')] 
2*s(7)+2
#### Cost of phase [18]:subsets(V,Out) -> [subsets(V',Out')] 
2*it(18)+2*s(8)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of loops [19] 

 * loop 19:subsets(V,Out) -> [subsets(V',Out')] 
2
#### Cost of phase [19]:subsets(V,Out) -> [subsets(V',Out')] 
2*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:subsets(V,Out) -> [subsets(V',Out')] 
2*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:subsets(V,Out) -> [subsets(V',Out')] 
2*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of chains of subsets(V,Out):
* Chain [[19],[18],21]: 4*it(18)+2*s(8)+1
  Such that:aux(2) =< V
it(18) =< aux(2)

  with precondition: [Out=0,V>=2] 

* Chain [[19],21]: 2*it(19)+1
  Such that:it(19) =< V

  with precondition: [Out=0,V>=1] 

* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< V

  with precondition: [Out=0,V>=1] 

* Chain [[18],21]: 2*it(18)+2*s(8)+1
  Such that:it(18) =< V

  with precondition: [V>=1,Out>=2] 

* Chain [21]: 1
  with precondition: [V=0,Out=1] 

* Chain [20]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of notEmpty(V,Out):
* Chain [24]: 1
  with precondition: [V=0,Out=1] 

* Chain [23]: 0
  with precondition: [Out=0,V>=0] 

* Chain [22]: 1
  with precondition: [Out=2,V>=1] 


#### Cost of chains of start(V,V3,V5):
* Chain [26]: 20*s(15)+8*s(16)+4*s(20)+2
  Such that:aux(4) =< V
aux(5) =< V3
s(15) =< aux(4)
s(20) =< aux(5)

  with precondition: [V>=0] 

* Chain [25]: 1
  with precondition: [V3=0,V>=0,V5>=0] 


Closed-form bounds of start(V,V3,V5): 
-------------------------------------
* Chain [26] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25] with precondition: [V3=0,V>=0,V5>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V3,V5): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 42 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 135 ms.

