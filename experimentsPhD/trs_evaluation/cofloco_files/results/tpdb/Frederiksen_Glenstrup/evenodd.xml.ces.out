
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [even/2,odd/2]
1. non_recursive  : [evenodd/2]
2. non_recursive  : [notEmpty/2]
3. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into even/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into notEmpty/2
3. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations even/2 
* CE 7 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations even/2 
* CE 12: even(V,Out) = 2
     [V>=1,Out=0] 
* CE 13: even(V,Out) = 1
     [Out=1,V=0] 
* CE 14: even(V,Out) = 2+ even(W,Out)
     [V>=W+2,W>=0] 

### Cost equations --> "Loop" of even/2 
* CEs [14] --> Loop 7 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 

#### Loops of even/2 
* Loop 7: even(V,Out)->  even(V',Out)
                  [V>=V'+2,V'>=0] 
* Loop 8: even(V,Out) [V>=1,Out=0] 
* Loop 9: even(V,Out) [Out=1,V=0] 

### Ranking functions of CR even(V,Out) 
* RF of phase [7]: [V-1]

#### Partial ranking functions of CR even(V,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V-1


### Resulting Chains:even(V,Out) 
* [[7],9]
* [[7],8]
* [9]
* [8]


### Merging Chains  even/2 into  External patterns of execution 
* [[9]] --> 1 
* [[8],[8,[7]]] --> 2 
* [[9,[7]]] --> 3 


### Specialization of cost equations notEmpty/2 
* CE 10 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations notEmpty/2 
* CE 15: notEmpty(V,Out) = 1
     [V>=1,Out=1] 
* CE 16: notEmpty(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 

#### Loops of notEmpty/2 
* Loop 10: notEmpty(V,Out) [V>=1,Out=1] 
* Loop 11: notEmpty(V,Out) [Out=0,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [11]
* [10]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20] 
* CE 4 is refined into CE [21,22,23] 
* CE 5 is refined into CE [24,25] 
* CE 6 is refined into CE [26,27,28] 


#### Refined cost equations start/1 
* CE 17: start(V) = 1
     [V=0] 
* CE 18: start(V) = 1+ even(W,X):1
     [V>=1,X=1,W=0] 
* CE 19: start(V) = 1+ even(W,X):2
     [V>=W+1,W>=1,X=0] 
* CE 20: start(V) = 1+ even(W,X):3
     [V>=W+1,W>=2,X=1] 
* CE 21: start(V) = 0+ even(W,X):1
     [X=1,W=0,V=0] 
* CE 22: start(V) = 0+ even(V,W):2
     [V>=1,W=0] 
* CE 23: start(V) = 0+ even(V,W):3
     [V>=2,W=1] 
* CE 24: start(V) = 0+ notEmpty(W,X):1
     [X=0,W=0,V=0] 
* CE 25: start(V) = 0+ notEmpty(V,W):2
     [V>=1,W=1] 
* CE 26: start(V) = 1+ even(W,X):1
     [X=1,W=0,V=0] 
* CE 27: start(V) = 1+ even(V,W):2
     [V>=1,W=0] 
* CE 28: start(V) = 1+ even(V,W):3
     [V>=2,W=1] 

### Cost equations --> "Loop" of start/1 
* CEs [18,19,20,22,23,25,27,28] --> Loop 12 
* CEs [17,21,24,26] --> Loop 13 

#### Loops of start/1 
* Loop 12: start(V) [V>=1] 
* Loop 13: start(V) [V=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [13]
* [12]


### Merging Chains  start/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:even(V,Out) -> [even(V',Out')] 
2
#### Cost of phase [7]:even(V,Out) -> [even(V',Out')] 
2*it(7)+0
  Such that:it(7) =< V
it(7) =< V-V'

#### Cost of phase [7]:even(V,Out) -> [even(V',Out')] 
2*it(7)+0
  Such that:it(7) =< V
it(7) =< V-V'

#### Cost of chains of even(V,Out):
* Chain [[7],9]: 2*it(7)+1
  Such that:it(7) =< V

  with precondition: [Out=1,V>=2] 

* Chain [[7],8]: 2*it(7)+2
  Such that:it(7) =< V

  with precondition: [Out=0,V>=3] 

* Chain [9]: 1
  with precondition: [V=0,Out=1] 

* Chain [8]: 2
  with precondition: [Out=0,V>=1] 


#### Cost of chains of notEmpty(V,Out):
* Chain [11]: 1
  with precondition: [V=0,Out=0] 

* Chain [10]: 1
  with precondition: [Out=1,V>=1] 


#### Cost of chains of start(V):
* Chain [13]: 2
  with precondition: [V=0] 

* Chain [12]: 12*s(2)+3
  Such that:aux(1) =< V
s(2) =< aux(1)

  with precondition: [V>=1] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [13] with precondition: [V=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [12] with precondition: [V>=1] 
    - Upper bound: 12*V+3 
    - Complexity: n 

### Maximum cost of start(V): 12*V+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 50 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 163 ms.

