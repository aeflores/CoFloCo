
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [inc/2]
1. non_recursive  : [number17/2]
2. recursive  : [nestinc/2]
3. non_recursive  : [goal/2]
4. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into inc/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into nestinc/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations inc/2 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations inc/2 
* CE 10: inc(V,Out) = 1
     [Out=1,V=0] 
* CE 11: inc(V,Out) = 1+ inc(W,X)
     [V>=W+1,W>=0,X+2=Out] 

### Cost equations --> "Loop" of inc/2 
* CEs [11] --> Loop 6 
* CEs [10] --> Loop 7 

#### Loops of inc/2 
* Loop 6: inc(V,Out)->  inc(V',Out')
                  [V>=V'+1,V'>=0,Out=Out'+2] 
* Loop 7: inc(V,Out) [Out=1,V=0] 

### Ranking functions of CR inc(V,Out) 
* RF of phase [6]: [V]

#### Partial ranking functions of CR inc(V,Out) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V


### Resulting Chains:inc(V,Out) 
* [[6],7]
* [7]


### Merging Chains  inc/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations nestinc/2 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations nestinc/2 
* CE 12: nestinc(V,Out) = 1+ inc(V,W):2+ nestinc(W,Out)
     [2*V+1>=W,W>=3] 
* CE 13: nestinc(V,Out) = 2
     [Out=17,V=0] 

### Cost equations --> "Loop" of nestinc/2 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of nestinc/2 
* Loop 8: nestinc(V,Out) [Out=17,V=0] 
* Loop 9: nestinc(V,Out)->  nestinc(V',Out)
                  [2*V+1>=V',V'>=3] 

### Ranking functions of CR nestinc(V,Out) 

#### Partial ranking functions of CR nestinc(V,Out) 


### Resulting Chains:nestinc(V,Out) 
* [[9]]...
* [8]


### Merging Chains  nestinc/2 into  External patterns of execution 
* [[8]] --> 1 
* [[[9]]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [14,15] 
* CE 3 is refined into CE [16,17] 
* CE 4 is refined into CE [18] 
* CE 5 is refined into CE [19,20] 


#### Refined cost equations start/1 
* CE 14: start(V) = 0+ inc(W,X):1
     [X=1,W=0,V=0] 
* CE 15: start(V) = 0+ inc(V,W):2
     [2*V+1>=W,W>=3] 
* CE 16: start(V) = 0+ nestinc(W,X):1
     [X=17,W=0,V=0] 
* CE 17: start(V) = 0+ nestinc(V,W):2
     [V>=1] 
* CE 18: start(V) = 1
     [V>=0] 
* CE 19: start(V) = 1+ nestinc(W,X):1
     [X=17,W=0,V=0] 
* CE 20: start(V) = 1+ nestinc(V,W):2
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [17,20] --> Loop 10 
* CEs [14,15,16,18,19] --> Loop 11 

#### Loops of start/1 
* Loop 10: start(V) [V>=1] 
* Loop 11: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [11]
* [10]...


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:inc(V,Out) -> [inc(V',Out')] 
1
#### Cost of phase [6]:inc(V,Out) -> [inc(V',Out')] 
1*it(6)+0
  Such that:it(6) =< V
it(6) =< V-V'

#### Cost of chains of inc(V,Out):
* Chain [[6],7]: 1*it(6)+1
  Such that:it(6) =< V

  with precondition: [Out>=3,2*V+1>=Out] 

* Chain [7]: 1
  with precondition: [V=0,Out=1] 


#### Cost of loops [9] 

 * loop 9:nestinc(V,Out) -> [nestinc(V',Out')] 
1*s(2)+2
  Such that:s(2) =< V

#### Cost of phase [9]:nestinc(V,Out) -> [nestinc(V',Out')] 
2*it(9)+1*s(3)+0
#### Cost of chains of nestinc(V,Out):
* Chain [[9]]...: 3*it(9)+0
  with precondition: [V>=1] 

* Chain [8]: 2
  with precondition: [V=0,Out=17] 


#### Cost of chains of start(V):
* Chain [11]: 1*s(4)+3
  Such that:s(4) =< V

  with precondition: [V>=0] 

* Chain [10]...: 1*aux(5)+0
  with precondition: [V>=1] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [11] with precondition: [V>=0] 
    - Upper bound: V+3 
    - Complexity: n 
* Chain [10]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 13 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 51 ms.

