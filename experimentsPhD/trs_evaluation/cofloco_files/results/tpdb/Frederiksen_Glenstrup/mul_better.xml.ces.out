
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add0/3]
1. recursive [non_tail] : [mul0/3]
2. non_recursive  : [goal/3]
3. non_recursive  : [isZero/2]
4. non_recursive  : [second/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add0/3
1. SCC is partially evaluated into mul0/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into isZero/2
4. SCC is partially evaluated into second/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add0/3 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations add0/3 
* CE 18: add0(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 19: add0(A,B,B) = 1
     [B>=0,A=0] 
* CE 20: add0(V1,V,Out) = 1+ add0(W1,X1,Out)
     [V1>=W1+1,W1>=0,V>=0,V+1=X1] 

### Cost equations --> "Loop" of add0/3 
* CEs [20] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of add0/3 
* Loop 12: add0(V1,V,Out)->  add0(V1',V',Out)
                  [V1>=V1'+1,V1'>=0,V>=0,V+1=V'] 
* Loop 13: add0(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 14: add0(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add0(V1,V,Out) 
* RF of phase [12]: [V1]

#### Partial ranking functions of CR add0(V1,V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V1


### Resulting Chains:add0(V1,V,Out) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Merging Chains  add0/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13],[13,[12]]] --> 2 
* [[14,[12]]] --> 3 


### Specialization of cost equations mul0/3 
* CE 8 is refined into CE [21] 
* CE 9 is refined into CE [22] 
* CE 7 is refined into CE [23,24,25] 


#### Refined cost equations mul0/3 
* CE 21: mul0(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 22: mul0(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 23: mul0(A,B,B) = 1+ mul0(C,B,D)+ add0(E,B,B):1
     [A>=C+1,C>=0,B>=0,D=0,E=0] 
* CE 24: mul0(V1,V,Out) = 1+ mul0(W1,V,X1)+ add0(X1,V,Y1):2
     [V1>=W1+1,W1>=0,V>=0,X1>=0,Y1=0,Out=0] 
* CE 25: mul0(V1,V,Out) = 1+ mul0(W1,V,X1)+ add0(X1,V,Out):3
     [V+X1>=Out,V1>=W1+1,Out>=V+1,W1>=0,V>=0] 

### Cost equations --> "Loop" of mul0/3 
* CEs [25] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [21,22] --> Loop 18 

#### Loops of mul0/3 
* Loop 15: mul0(V1,V,Out)->  mul0(V1',V,Out')
                  [V+Out'>=Out,V1>=V1'+1,Out>=V+1,V1'>=0,V>=0] 
* Loop 16: mul0(A,B,B)->  mul0(A',B,B')
                  [A>=A'+1,A'>=0,B>=0,B'=0] 
* Loop 17: mul0(V1,V,Out)->  mul0(V1',V,Out')
                  [V1>=V1'+1,Out'>=0,V1'>=0,V>=0,Out=0] 
* Loop 18: mul0(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR mul0(V1,V,Out) 
* RF of phase [15,16,17]: [V1]

#### Partial ranking functions of CR mul0(V1,V,Out) 
* Partial RF of phase [15,16,17]:
  - RF of loop [15:1,16:1,17:1]:
    V1


### Resulting Chains:mul0(V1,V,Out) 
* [[15,16,17],18]
* [18]


### Merging Chains  mul0/3 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[15,16,17]]] --> 2 


### Specialization of cost equations isZero/2 
* CE 15 is refined into CE [26] 
* CE 17 is refined into CE [27] 
* CE 16 is refined into CE [28] 


#### Refined cost equations isZero/2 
* CE 26: isZero(V1,Out) = 1
     [V1>=1,Out=1] 
* CE 27: isZero(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 28: isZero(V1,Out) = 1
     [Out=2,V1=0] 

### Cost equations --> "Loop" of isZero/2 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of isZero/2 
* Loop 19: isZero(V1,Out) [V1>=1,Out=1] 
* Loop 20: isZero(V1,Out) [V1>=0,Out=0] 
* Loop 21: isZero(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR isZero(V1,Out) 

#### Partial ranking functions of CR isZero(V1,Out) 


### Resulting Chains:isZero(V1,Out) 
* [21]
* [20]
* [19]


### Merging Chains  isZero/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations second/2 
* CE 13 is refined into CE [29] 
* CE 14 is refined into CE [30] 


#### Refined cost equations second/2 
* CE 29: second(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 30: second(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of second/2 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 

#### Loops of second/2 
* Loop 22: second(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 23: second(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR second(V1,Out) 

#### Partial ranking functions of CR second(V1,Out) 


### Resulting Chains:second(V1,Out) 
* [23]
* [22]


### Merging Chains  second/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [31,32] 
* CE 3 is refined into CE [33,34,35] 
* CE 4 is refined into CE [36,37] 
* CE 5 is refined into CE [38,39,40] 
* CE 6 is refined into CE [41,42] 


#### Refined cost equations start/2 
* CE 31: start(V1,V) = 0+ mul0(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ mul0(V1,V,W1):2
     [W1>=0,V>=0,V1>=1] 
* CE 33: start(V1,V) = 0+ add0(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 34: start(V1,V) = 0+ add0(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 35: start(V1,V) = 0+ add0(V1,V,W1):3
     [V1+V>=W1,W1>=V+1,V>=0] 
* CE 36: start(V1,V) = 0+ second(V1,W1):1
     [V1>=0,W1=0] 
* CE 37: start(V1,V) = 0+ second(V1,W1):2
     [V1>=W1+1,W1>=0] 
* CE 38: start(V1,V) = 0+ isZero(W1,X1):1
     [X1=2,W1=0,V1=0] 
* CE 39: start(V1,V) = 0+ isZero(V1,W1):2
     [V1>=0,W1=0] 
* CE 40: start(V1,V) = 0+ isZero(V1,W1):3
     [V1>=1,W1=1] 
* CE 41: start(V1,V) = 1+ mul0(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 42: start(V1,V) = 1+ mul0(V1,V,W1):2
     [W1>=0,V>=0,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [31,32,33,34,35,36,37,38,39,40,41,42] --> Loop 24 

#### Loops of start/2 
* Loop 24: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [24]


### Merging Chains  start/2 into  External patterns of execution 
* [[24]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:add0(V1,V,Out) -> [add0(V1',V',Out')] 
1
#### Cost of phase [12]:add0(V1,V,Out) -> [add0(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:add0(V1,V,Out) -> [add0(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of add0(V1,V,Out):
* Chain [[12],14]: 1*it(12)+1
  Such that:it(12) =< V1

  with precondition: [V>=0,Out>=V+1,V+V1>=Out] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V1

  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [14]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [15,16,17] 

 * loop 15:mul0(V1,V,Out) -> [mul0(V1',V',Out')] 
1*s(3)+2
 * loop 16:mul0(V1,V,Out) -> [mul0(V1',V',Out')] 
2
 * loop 17:mul0(V1,V,Out) -> [mul0(V1',V',Out')] 
1*s(5)+1
#### Cost of phase [15,16,17]:mul0(V1,V,Out) -> [mul0(V1',V',Out')] 
5*it(15)+2*s(6)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(15) =< aux(1)
it(15) =< aux(2)

#### Cost of chains of mul0(V1,V,Out):
* Chain [[15,16,17],18]: 5*it(15)+2*s(6)+1
  Such that:aux(3) =< V1
it(15) =< aux(3)

  with precondition: [V1>=1,V>=0,Out>=0] 

* Chain [18]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of isZero(V1,Out):
* Chain [21]: 1
  with precondition: [V1=0,Out=2] 

* Chain [20]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [19]: 1
  with precondition: [Out=1,V1>=1] 


#### Cost of chains of second(V1,Out):
* Chain [23]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [22]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of start(V1,V):
* Chain [24]: 12*s(9)+4*s(10)+2
  Such that:aux(4) =< V1
s(9) =< aux(4)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [24] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 44 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 71 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 92 ms.
   - Equation cost structures 46 ms.
   - Phase cost structures 34 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 250 ms.

