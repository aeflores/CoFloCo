
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lt/3]
1. recursive  : [fun1/3]
2. recursive  : [fun/4,remove/3]
3. recursive  : [appmin/4,fun2/5,minsort/2]
4. non_recursive  : [goal/2]
5. non_recursive  : [notEmpty/2]
6. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lt/3
1. SCC is partially evaluated into fun1/3
2. SCC is partially evaluated into remove/3
3. SCC is partially evaluated into appmin/4
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into notEmpty/2
6. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lt/3 
* CE 38 is refined into CE [39] 
* CE 37 is refined into CE [40] 
* CE 36 is refined into CE [41] 
* CE 35 is refined into CE [42] 


#### Refined cost equations lt/3 
* CE 39: lt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 40: lt(V1,V,Out) = 0
     [V1>=0,Out=1,V=0] 
* CE 41: lt(V1,V,Out) = 0
     [V>=1,Out=2,V1=0] 
* CE 42: lt(V1,V,Out) = 0+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of lt/3 
* CEs [42] --> Loop 24 
* CEs [39] --> Loop 25 
* CEs [40] --> Loop 26 
* CEs [41] --> Loop 27 

#### Loops of lt/3 
* Loop 24: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 25: lt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 26: lt(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 27: lt(V1,V,Out) [V>=1,Out=2,V1=0] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [24]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[24],27]
* [[24],26]
* [[24],25]
* [27]
* [26]
* [25]


### Merging Chains  lt/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25],[25,[24]]] --> 3 
* [[26,[24]]] --> 4 
* [[27,[24]]] --> 5 


### Specialization of cost equations fun1/3 
* CE 34 is refined into CE [43] 
* CE 32 is refined into CE [44] 
* CE 31 is refined into CE [45] 
* CE 33 is refined into CE [46] 
* CE 30 is refined into CE [47] 


#### Refined cost equations fun1/3 
* CE 43: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 44: fun1(V1,V,Out) = 0
     [V1>=1,Out=1,V=0] 
* CE 45: fun1(V1,V,Out) = 0
     [V>=1,Out=1,V1=0] 
* CE 46: fun1(V1,V,Out) = 0
     [Out=2,V=0,V1=0] 
* CE 47: fun1(V1,V,Out) = 0+ fun1(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [47] --> Loop 28 
* CEs [43] --> Loop 29 
* CEs [44] --> Loop 30 
* CEs [45] --> Loop 31 
* CEs [46] --> Loop 32 

#### Loops of fun1/3 
* Loop 28: fun1(V1,V,Out)->  fun1(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 29: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 30: fun1(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 31: fun1(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 32: fun1(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [28]: [V,V1]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
    V1


### Resulting Chains:fun1(V1,V,Out) 
* [[28],32]
* [[28],31]
* [[28],30]
* [[28],29]
* [32]
* [31]
* [30]
* [29]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29],[29,[28]]] --> 4 
* [[31,[28]]] --> 5 
* [[30,[28]]] --> 6 
* [[32,[28]]] --> 7 


### Specialization of cost equations remove/3 
* CE 23 is refined into CE [48,49] 
* CE 22 is refined into CE [50,51,52,53,54,55,56] 
* CE 25 is refined into CE [57] 
* CE 26 is refined into CE [58] 
* CE 24 is refined into CE [59,60,61,62] 


#### Refined cost equations remove/3 
* CE 48: remove(V1,V,Out) = 1+ fun1(W1,X1,Y1):1
     [V>=Out+1,Out>=0,Y1=2,X1=0,W1=0,V1=0] 
* CE 49: remove(V1,V,Out) = 1+ fun1(V1,V1,W1):7
     [V>=V1+1,V>=Out+1,V1>=1,Out>=0,W1=2] 
* CE 50: remove(V1,V,Out) = 1+ fun1(W1,X1,Y1):1
     [V>=1,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 51: remove(V1,V,Out) = 1+ fun1(W1,X1,Y1):2
     [V>=X1+1,X1>=1,Y1=1,W1=0,Out=0,V1=0] 
* CE 52: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):3
     [V1>=1,V>=1,X1=1,W1=0,Out=0] 
* CE 53: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):4
     [V>=W1+1,W1>=0,V1>=0,X1=0,Out=0] 
* CE 54: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):5
     [V>=W1+1,W1>=V1+1,V1>=1,X1=1,Out=0] 
* CE 55: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):6
     [V1>=W1+1,V>=W1+1,W1>=1,X1=1,Out=0] 
* CE 56: remove(V1,V,Out) = 1+ fun1(V1,V1,W1):7
     [V>=V1+1,V1>=1,W1=2,Out=0] 
* CE 57: remove(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 58: remove(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 59: remove(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ remove(Z1,A2,B2)
     [V>=A2+1,V>=X1+1,A2>=0,X1>=1,V+B2=Out+A2,Z1=0,Y1=1,W1=0,V1=0] 
* CE 60: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):3+ remove(V1,Y1,Z1)
     [V>=Y1+1,Y1>=0,V1>=1,V+Z1=Out+Y1,X1=1,W1=0] 
* CE 61: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):5+ remove(V1,Y1,Z1)
     [V>=Y1+1,V>=W1+1,W1>=V1+1,Y1>=0,V1>=1,V+Z1=Out+Y1,X1=1] 
* CE 62: remove(V1,V,Out) = 1+ fun1(V1,W1,X1):6+ remove(V1,Y1,Z1)
     [V>=Y1+1,V1>=W1+1,V>=W1+1,Y1>=0,W1>=1,V+Z1=Out+Y1,X1=1] 

### Cost equations --> "Loop" of remove/3 
* CEs [60,61,62] --> Loop 33 
* CEs [59] --> Loop 34 
* CEs [49] --> Loop 35 
* CEs [52,53,54,55,56,57,58] --> Loop 36 
* CEs [48,50,51] --> Loop 37 

#### Loops of remove/3 
* Loop 33: remove(V1,V,Out)->  remove(V1,V',Out')
                  [V>=V'+1,V'>=0,V1>=1,V+Out'=Out+V'] 
* Loop 34: remove(V1,V,Out)->  remove(V1',V',Out')
                  [V>=V'+1,V'>=0,V>=2,V+Out'=Out+V',V1'=0,V1=0] 
* Loop 35: remove(V1,V,Out) [V>=Out+1,V>=V1+1,Out>=0,V1>=1] 
* Loop 36: remove(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 37: remove(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR remove(V1,V,Out) 
* RF of phase [33]: [V]
* RF of phase [34]: [V-1]

#### Partial ranking functions of CR remove(V1,V,Out) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V-1


### Resulting Chains:remove(V1,V,Out) 
* [[34],37]
* [[34],36]
* [[33],36]
* [[33],35]
* [37]
* [36]
* [35]


### Merging Chains  remove/3 into  External patterns of execution 
* [[36,[34]],[37,[34]]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 
* [[35],[35,[33]]] --> 4 
* [[36,[33]]] --> 5 


### Specialization of cost equations appmin/4 
* CE 18 is refined into CE [63,64,65,66,67] 
* CE 21 is refined into CE [68] 
* CE 15 is refined into CE [69,70,71,72,73] 
* CE 16 is refined into CE [74,75,76] 
* CE 20 is refined into CE [77,78] 
* CE 19 is refined into CE [79,80] 
* CE 17 is refined into CE [81,82,83,84] 


#### Refined cost equations appmin/4 
* CE 63: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):1
     [V1>=1,V11>=0,V>=1,X11=2,W11=0,Out=0] 
* CE 64: appmin(V1,V,V11,Out) = 1+ lt(W11,X11,Y11):2
     [V>=W11+1,W11>=0,V11>=0,Y11=1,X11=0,Out=0,V1=0] 
* CE 65: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):3
     [V>=W11+1,V1>=0,W11>=0,V11>=0,X11=0,Out=0] 
* CE 66: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):4
     [W11>=V1,V>=W11+1,V1>=1,V11>=0,X11=1,Out=0] 
* CE 67: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):5
     [V1>=W11+1,V>=W11+1,W11>=1,V11>=0,X11=2,Out=0] 
* CE 68: appmin(V1,V,V11,Out) = 0
     [V11>=0,V>=0,V1>=0,Out=0] 
* CE 69: appmin(V1,V,V11,Out) = 1+ remove(W11,V11,X11):1
     [V11>=X11,X11>=1,V11>=2,W11=0,Out=1,V=0,V1=0] 
* CE 70: appmin(V1,V,V11,Out) = 1+ remove(W11,V11,X11):2
     [V11>=X11+1,X11>=0,W11=0,Out=1,V=0,V1=0] 
* CE 71: appmin(V1,V,V11,Out) = 1+ remove(V1,V11,W11):3
     [V11>=0,V1>=0,V1+1=Out,W11=0,V=0] 
* CE 72: appmin(V1,V,V11,Out) = 1+ remove(V1,V11,W11):4
     [V11>=W11+1,V11>=V1+1,W11>=0,V1>=1,V1+1=Out,V=0] 
* CE 73: appmin(V1,V,V11,Out) = 1+ remove(V1,V11,W11):5
     [V11>=W11,W11>=1,V1>=1,V1+1=Out,V=0] 
* CE 74: appmin(V1,V,V11,Out) = 2+ remove(W11,V11,X11):2
     [V11>=1,X11=0,W11=0,Out=1,V=0,V1=0] 
* CE 75: appmin(V1,V,V11,Out) = 2+ remove(V1,V11,W11):3
     [V11>=0,V1>=0,V1+1=Out,W11=0,V=0] 
* CE 76: appmin(V1,V,V11,Out) = 2+ remove(V1,V11,W11):4
     [V11>=V1+1,V1>=1,V1+1=Out,W11=0,V=0] 
* CE 77: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):1+ appmin(Y11,Z11,V11,Out)
     [Z11>=0,Y11>=0,V1>=1,V11>=0,Y11+Z11+1=V,X11=2,W11=0] 
* CE 78: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):5+ appmin(Y11,Z11,V11,Out)
     [Y11+Z11>=W11,V1>=W11+1,Z11>=0,Y11>=0,W11>=1,V11>=0,Y11+Z11+1=V,X11=2] 
* CE 79: appmin(V1,V,V11,Out) = 1+ lt(W11,X11,Y11):2+ appmin(Z11,A12,V11,Out)
     [V>=A12+1,V>=W11+1,A12>=0,W11>=0,V11>=0,Z11=0,Y11=1,X11=0,V1=0] 
* CE 80: appmin(V1,V,V11,Out) = 1+ lt(W11,V1,X11):4+ appmin(V1,Y11,V11,Out)
     [V>=Y11+1,W11>=V1,V>=W11+1,Y11>=0,V1>=1,V11>=0,X11=1] 
* CE 81: appmin(V1,V,V11,Out) = 2+ remove(W11,V11,X11):1+ appmin(Y11,Z11,X11,A12)
     [X11>=Z11+1,V11>=X11,Z11>=0,V11>=2,X11=Y11+Z11+1,Out=A12+1,W11=0,V=0,V1=0] 
* CE 82: appmin(V1,V,V11,Out) = 2+ remove(W11,V11,X11):2+ appmin(Y11,Z11,X11,A12)
     [X11>=Z11+1,V11>=X11+1,Z11>=0,X11=Y11+Z11+1,Out=A12+1,W11=0,V=0,V1=0] 
* CE 83: appmin(V1,V,V11,Out) = 2+ remove(V1,V11,W11):4+ appmin(X11,Y11,W11,Z11)
     [W11>=Y11+1,V11>=W11+1,V11>=V1+1,Y11>=0,V1>=1,W11=X11+Y11+1,V1+Z11+1=Out,V=0] 
* CE 84: appmin(V1,V,V11,Out) = 2+ remove(V1,V11,W11):5+ appmin(X11,Y11,W11,Z11)
     [W11>=Y11+1,V11>=W11,Y11>=0,V1>=1,W11=X11+Y11+1,V1+Z11+1=Out,V=0] 

### Cost equations --> "Loop" of appmin/4 
* CEs [77,78] --> Loop 38 
* CEs [80] --> Loop 39 
* CEs [83,84] --> Loop 40 
* CEs [79] --> Loop 41 
* CEs [81,82] --> Loop 42 
* CEs [63,64,65,66,67,68] --> Loop 43 
* CEs [69,70,71,72,73,74,75,76] --> Loop 44 

#### Loops of appmin/4 
* Loop 38: appmin(V1,V,V11,Out)->  appmin(V1',V',V11,Out)
                  [V>=V1'+1,V1'>=0,V11>=0,V1>=1,V1'+V'+1=V] 
* Loop 39: appmin(V1,V,V11,Out)->  appmin(V1,V',V11,Out)
                  [V>=V'+1,V>=V1+1,V'>=0,V11>=0,V1>=1] 
* Loop 40: appmin(V1,V,V11,Out)->  appmin(V1',V',V11',Out')
                  [V11>=V1'+V'+1,V'>=0,V1'>=0,V1>=1,V1'+V'+1=V11',V1+Out'+1=Out,V=0] 
* Loop 41: appmin(V1,V,V11,Out)->  appmin(V1',V',V11,Out)
                  [V>=V'+1,V'>=0,V11>=0,V1'=0,V1=0] 
* Loop 42: appmin(V1,V,V11,Out)->  appmin(V1',V',V11',Out')
                  [V11>=V1'+V'+1,V'>=0,V1'>=0,V11>=2,V1'+V'+1=V11',Out=Out'+1,V=0,V1=0] 
* Loop 43: appmin(V1,V,V11,Out) [V11>=0,V>=0,V1>=0,Out=0] 
* Loop 44: appmin(V1,V,V11,Out) [V11>=0,V1>=0,V1+1=Out,V=0] 

### Ranking functions of CR appmin(V1,V,V11,Out) 

#### Partial ranking functions of CR appmin(V1,V,V11,Out) 
* Partial RF of phase [38,39,40,41,42]:
  - RF of loop [38:1]:
    V1/2+V/2-1/2 depends on loops [40:1,42:1] 
  - RF of loop [38:1,41:1]:
    V depends on loops [40:1,42:1] 
  - RF of loop [39:1]:
    V-1 depends on loops [40:1,42:1] 
    -V1+V depends on loops [38:1,40:1,42:1] 
  - RF of loop [42:1]:
    -V1-V+V11-1 depends on loops [38:1,39:1,40:1,41:1] 


### Resulting Chains:appmin(V1,V,V11,Out) 
* [[38,39,40,41,42]]...
* [[38,39,40,41,42],44]
* [[38,39,40,41,42],43]
* [44]
* [43]


### Merging Chains  appmin/4 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 
* [[43,[38,39,40,41,42]],[44,[38,39,40,41,42]]] --> 3 
* [[[38,39,40,41,42]]] --> 4 


### Specialization of cost equations notEmpty/2 
* CE 27 is refined into CE [85] 
* CE 29 is refined into CE [86] 
* CE 28 is refined into CE [87] 


#### Refined cost equations notEmpty/2 
* CE 85: notEmpty(V1,Out) = 1
     [V1>=1,Out=2] 
* CE 86: notEmpty(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 87: notEmpty(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [85] --> Loop 45 
* CEs [86] --> Loop 46 
* CEs [87] --> Loop 47 

#### Loops of notEmpty/2 
* Loop 45: notEmpty(V1,Out) [V1>=1,Out=2] 
* Loop 46: notEmpty(V1,Out) [V1>=0,Out=0] 
* Loop 47: notEmpty(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR notEmpty(V1,Out) 

#### Partial ranking functions of CR notEmpty(V1,Out) 


### Resulting Chains:notEmpty(V1,Out) 
* [47]
* [46]
* [45]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 


### Specialization of cost equations start/4 
* CE 6 is refined into CE [88,89,90,91] 
* CE 5 is refined into CE [92,93,94,95] 
* CE 7 is refined into CE [96,97,98,99,100] 
* CE 2 is refined into CE [101] 
* CE 3 is refined into CE [102] 
* CE 4 is refined into CE [103,104,105,106] 
* CE 8 is refined into CE [107,108,109,110,111] 
* CE 9 is refined into CE [112,113,114,115] 
* CE 10 is refined into CE [116,117,118] 
* CE 11 is refined into CE [119] 
* CE 12 is refined into CE [120,121,122,123] 
* CE 13 is refined into CE [124,125,126,127,128,129,130] 
* CE 14 is refined into CE [131,132,133,134,135] 


#### Refined cost equations start/4 
* CE 88: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V33,V11):1
     [V11>=1,V33>=0,V>=0,V11=W33+1,X33=0,V1=2] 
* CE 89: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V33,Y33):2
     [V33>=0,X33>=0,W33>=0,V>=0,W33+X33+1=V11,Y33=0,V1=2] 
* CE 90: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V33,Y33):3
     [V33+Y33+3*X33>=3,V33+W33+2*X33>=2,X33+Y33>=1,V33+X33>=1,Y33>=0,V33>=0,X33>=0,W33>=0,V>=0,W33+X33+1=V11,V1=2] 
* CE 91: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V33,Y33):4
     [V33+W33+2*X33>=2,V33+X33>=1,V33>=0,X33>=0,W33>=0,V>=0,W33+X33+1=V11,V1=2] 
* CE 92: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V33,Y33):1
     [Y33>=1,V33>=0,V11>=1,Y33=W33+1,Y33=V+1,X33=0,V1=1] 
* CE 93: start(V1,V,V11,V33) = 0+ appmin(V,W33,V33,X33):2
     [V11>=W33+1,V33>=0,W33>=0,V>=0,X33=0,V1=1] 
* CE 94: start(V1,V,V11,V33) = 0+ appmin(V,W33,V33,X33):3
     [V33+X33+3*W33>=3,V+V33+2*W33>=2,W33+X33>=1,V33+W33>=1,V11>=W33+1,X33>=0,V33>=0,W33>=0,V>=0,V1=1] 
* CE 95: start(V1,V,V11,V33) = 0+ appmin(V,W33,V33,X33):4
     [V+V33+2*W33>=2,V33+W33>=1,V11>=W33+1,V33>=0,W33>=0,V>=0,V1=1] 
* CE 96: start(V1,V,V11,V33) = 0+ remove(W33,X33,Y33):1
     [X33>=Y33,V11>=X33+1,Y33>=1,X33>=2,W33=0,V=0,V1=1] 
* CE 97: start(V1,V,V11,V33) = 0+ remove(W33,X33,Y33):2
     [X33>=Y33+1,V11>=X33+1,Y33>=0,W33=0,V=0,V1=1] 
* CE 98: start(V1,V,V11,V33) = 0+ remove(V,W33,X33):3
     [V11>=W33+1,W33>=0,V>=0,X33=0,V1=1] 
* CE 99: start(V1,V,V11,V33) = 0+ remove(V,W33,X33):4
     [W33>=X33+1,V11>=W33+1,W33>=V+1,X33>=0,V>=1,V1=1] 
* CE 100: start(V1,V,V11,V33) = 0+ remove(V,W33,X33):5
     [W33>=X33,V11>=W33+1,X33>=1,V>=1,V1=1] 
* CE 101: start(V1,V,V11,V33) = 0
     [V1>=0] 
* CE 102: start(V1,V,V11,V33) = 1
     [V1>=0] 
* CE 103: start(V1,V,V11,V33) = 1+ appmin(W33,X33,V1,V1):1
     [V1>=1,V1=W33+1,X33=0] 
* CE 104: start(V1,V,V11,V33) = 1+ appmin(W33,X33,Y33,Z33):2
     [X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1,Z33=0] 
* CE 105: start(V1,V,V11,V33) = 1+ appmin(W33,X33,Y33,Z33):3
     [W33+Z33+4*X33>=2,2*W33+3*X33>=1,X33+Z33>=1,Z33>=0,X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1] 
* CE 106: start(V1,V,V11,V33) = 1+ appmin(W33,X33,Y33,Z33):4
     [2*W33+3*X33>=1,X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1] 
* CE 107: start(V1,V,V11,V33) = 0+ remove(W33,V,X33):1
     [V>=X33,X33>=1,V>=2,W33=0,V1=0] 
* CE 108: start(V1,V,V11,V33) = 0+ remove(W33,V,X33):2
     [V>=X33+1,X33>=0,W33=0,V1=0] 
* CE 109: start(V1,V,V11,V33) = 0+ remove(V1,V,W33):3
     [V>=0,V1>=0,W33=0] 
* CE 110: start(V1,V,V11,V33) = 0+ remove(V1,V,W33):4
     [V>=W33+1,V>=V1+1,W33>=0,V1>=1] 
* CE 111: start(V1,V,V11,V33) = 0+ remove(V1,V,W33):5
     [V>=W33,W33>=1,V1>=1] 
* CE 112: start(V1,V,V11,V33) = 0+ appmin(W33,X33,V11,Y33):1
     [Y33>=1,V11>=0,Y33=W33+1,Y33=V1+1,X33=0,V=0] 
* CE 113: start(V1,V,V11,V33) = 0+ appmin(V1,V,V11,W33):2
     [V11>=0,V>=0,V1>=0,W33=0] 
* CE 114: start(V1,V,V11,V33) = 0+ appmin(V1,V,V11,W33):3
     [V11+W33+3*V>=3,V1+V11+2*V>=2,V+W33>=1,V+V11>=1,W33>=0,V11>=0,V>=0,V1>=0] 
* CE 115: start(V1,V,V11,V33) = 0+ appmin(V1,V,V11,W33):4
     [V1+V11+2*V>=2,V+V11>=1,V11>=0,V>=0,V1>=0] 
* CE 116: start(V1,V,V11,V33) = 0+ notEmpty(W33,X33):1
     [X33=1,W33=0,V1=0] 
* CE 117: start(V1,V,V11,V33) = 0+ notEmpty(V1,W33):2
     [V1>=0,W33=0] 
* CE 118: start(V1,V,V11,V33) = 0+ notEmpty(V1,W33):3
     [V1>=1,W33=2] 
* CE 119: start(V1,V,V11,V33) = 2
     [V1=0] 
* CE 120: start(V1,V,V11,V33) = 2+ appmin(W33,X33,V1,V1):1
     [V1>=1,V1=W33+1,X33=0] 
* CE 121: start(V1,V,V11,V33) = 2+ appmin(W33,X33,Y33,Z33):2
     [X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1,Z33=0] 
* CE 122: start(V1,V,V11,V33) = 2+ appmin(W33,X33,Y33,Z33):3
     [W33+Z33+4*X33>=2,2*W33+3*X33>=1,X33+Z33>=1,Z33>=0,X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1] 
* CE 123: start(V1,V,V11,V33) = 2+ appmin(W33,X33,Y33,Z33):4
     [2*W33+3*X33>=1,X33>=0,W33>=0,W33+X33+1=Y33,W33+X33+1=V1] 
* CE 124: start(V1,V,V11,V33) = 0+ fun1(W33,X33,Y33):1
     [Y33=2,X33=0,W33=0,V=0,V1=0] 
* CE 125: start(V1,V,V11,V33) = 0+ fun1(W33,V,X33):2
     [V>=1,X33=1,W33=0,V1=0] 
* CE 126: start(V1,V,V11,V33) = 0+ fun1(V1,W33,X33):3
     [V1>=1,X33=1,W33=0,V=0] 
* CE 127: start(V1,V,V11,V33) = 0+ fun1(V1,V,W33):4
     [V>=0,V1>=0,W33=0] 
* CE 128: start(V1,V,V11,V33) = 0+ fun1(V1,V,W33):5
     [V>=V1+1,V1>=1,W33=1] 
* CE 129: start(V1,V,V11,V33) = 0+ fun1(V1,V,W33):6
     [V1>=V+1,V>=1,W33=1] 
* CE 130: start(A,A,B,C) = 0+ fun1(A,A,D):7
     [A>=1,D=2] 
* CE 131: start(V1,V,V11,V33) = 0+ lt(W33,V,X33):1
     [V>=1,X33=2,W33=0,V1=0] 
* CE 132: start(V1,V,V11,V33) = 0+ lt(V1,W33,X33):2
     [V1>=0,X33=1,W33=0,V=0] 
* CE 133: start(V1,V,V11,V33) = 0+ lt(V1,V,W33):3
     [V>=0,V1>=0,W33=0] 
* CE 134: start(V1,V,V11,V33) = 0+ lt(V1,V,W33):4
     [V1>=V,V>=1,W33=1] 
* CE 135: start(V1,V,V11,V33) = 0+ lt(V1,V,W33):5
     [V>=V1+1,V1>=1,W33=2] 

### Cost equations --> "Loop" of start/4 
* CEs [130] --> Loop 48 
* CEs [112,126,132] --> Loop 49 
* CEs [88,89,90] --> Loop 50 
* CEs [92,93,94,96,97,98,99,100] --> Loop 51 
* CEs [101,102,103,104,105,107,108,109,110,111,113,114,116,117,118,119,120,121,122,124,125,127,128,129,131,133,134,135] --> Loop 52 
* CEs [91,106,123] --> Loop 53 
* CEs [95,115] --> Loop 54 

#### Loops of start/4 
* Loop 48: start(A,A,B,C) [A>=1] 
* Loop 49: start(V1,V,V11,V33) [V1>=0,V=0] 
* Loop 50: start(V1,V,V11,V33) [V33>=0,V11>=1,V>=0,V1=2] 
* Loop 51: start(V1,V,V11,V33) [V11>=1,V>=0,V1=1] 
* Loop 52: start(V1,V,V11,V33) [V1>=0] 
* Loop 53: start(V1,V,V11,V33) [3*V1>=4] 
* Loop 54: start(V1,V,V11,V33) [V1+V11+2*V>=2,V+V11>=1,V11>=0,V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V11,V33) 

#### Partial ranking functions of CR start(V1,V,V11,V33) 


### Resulting Chains:start(V1,V,V11,V33) 
* [54]...
* [53]...
* [52]
* [51]
* [50]
* [49]
* [48]


### Merging Chains  start/4 into  External patterns of execution 
* [[51],[52]] --> 1 
* [[50]] --> 2 
* [[49]] --> 3 
* [[48]] --> 4 
* [[54]] --> 5 
* [[53]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [24]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [24]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [24]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of chains of lt(V1,V,Out):
* Chain [[24],27]: 0
  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [[24],26]: 0
  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[24],25]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [27]: 0
  with precondition: [V1=0,Out=2,V>=1] 

* Chain [26]: 0
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [25]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [28] 

 * loop 28:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [28]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [28]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [28]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [28]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of chains of fun1(V1,V,Out):
* Chain [[28],32]: 0
  with precondition: [Out=2,V1=V,V1>=1] 

* Chain [[28],31]: 0
  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[28],30]: 0
  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[28],29]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [32]: 0
  with precondition: [V1=0,V=0,Out=2] 

* Chain [31]: 0
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [30]: 0
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [34] 

 * loop 34:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1
#### Cost of phase [34]:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1*it(34)+0
  Such that:it(34) =< V
it(34) =< V-V'

#### Cost of phase [34]:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1*it(34)+0
  Such that:it(34) =< V
it(34) =< V-V'

#### Cost of loops [33] 

 * loop 33:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1
#### Cost of phase [33]:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1*it(33)+0
  Such that:it(33) =< V
it(33) =< V-V'

#### Cost of phase [33]:remove(V1,V,Out) -> [remove(V1',V',Out')] 
1*it(33)+0
  Such that:it(33) =< V
it(33) =< V-V'

#### Cost of chains of remove(V1,V,Out):
* Chain [[34],37]: 1*it(34)+1
  Such that:it(34) =< Out

  with precondition: [V1=0,Out>=1,V>=Out+1] 

* Chain [[34],36]: 1*it(34)+1
  Such that:it(34) =< Out

  with precondition: [V1=0,V>=2,Out>=1,V>=Out] 

* Chain [[33],36]: 1*it(33)+1
  Such that:it(33) =< Out

  with precondition: [V1>=1,Out>=1,V>=Out] 

* Chain [[33],35]: 1*it(33)+1
  Such that:it(33) =< -V1+V

  with precondition: [V1>=1,Out>=1,V>=V1+2,V>=Out+1] 

* Chain [37]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [36]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [35]: 1
  with precondition: [V1>=1,Out>=0,V>=V1+1,V>=Out+1] 


#### Cost of loops [38,39,40,41,42] 

 * loop 38:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
1
 * loop 39:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
1
 * loop 40:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
1*s(6)+1*s(7)+3
  Such that:s(6) =< -V1+V11
s(7) =< V11'

 * loop 41:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
1
 * loop 42:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
2*s(11)+3
  Such that:s(10) =< V11'
s(11) =< s(10)

#### Cost of phase [38,39,40,41,42]:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of phase [38,39,40,41,42]:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of phase [38,39,40,41,42]:appmin(V1,V,V11,Out) -> [appmin(V1',V',V11',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of chains of appmin(V1,V,V11,Out):
* Chain [[38,39,40,41,42]]...: 13*it(38)+0
  with precondition: [V1+V11+2*V>=2,V+V11>=1,V1>=0,V>=0,V11>=0] 

* Chain [[38,39,40,41,42],44]: 13*it(38)+5*s(17)+3
  Such that:aux(95) =< V11
s(17) =< aux(95)

  with precondition: [V1>=0,V>=0,V11>=0,Out>=1,V+V11>=1,Out+V>=2,V1+V11+2*V>=2,Out+V11+3*V>=4] 

* Chain [[38,39,40,41,42],43]: 13*it(38)+1
  with precondition: [V1>=0,V>=0,V11>=0,Out>=0,V+V11>=1,Out+V>=1,V1+V11+2*V>=2,Out+V11+3*V>=3] 

* Chain [44]: 3*s(17)+2*s(18)+3
  Such that:aux(93) =< -V1+V11
aux(94) =< V11
s(18) =< aux(93)
s(17) =< aux(94)

  with precondition: [V=0,V1+1=Out,V1>=0,V11>=0] 

* Chain [43]: 1
  with precondition: [Out=0,V1>=0,V>=0,V11>=0] 


#### Cost of chains of notEmpty(V1,Out):
* Chain [47]: 1
  with precondition: [V1=0,Out=1] 

* Chain [46]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [45]: 1
  with precondition: [Out=2,V1>=1] 


#### Cost of chains of start(V1,V,V11,V33):
* Chain [54]...: 1*aux(96)+0
  with precondition: [V1>=0,V>=0,V11>=0,V+V11>=1,V1+V11+2*V>=2] 

* Chain [53]...: 1*aux(97)+0
  with precondition: [3*V1>=4] 

* Chain [52]: 4*s(32)+16*s(33)+78*s(36)+3*s(38)+1*s(39)+5*s(42)+5
  Such that:s(39) =< -V1+V
s(41) =< V11
aux(98) =< 1
aux(99) =< V1
aux(100) =< V
s(38) =< aux(100)
s(32) =< aux(98)
s(33) =< aux(99)
s(42) =< s(41)

  with precondition: [V1>=0] 

* Chain [51]: 2*s(53)+8*s(54)+26*s(57)+3*s(59)+1*s(60)+3
  Such that:s(60) =< -V+V11
s(51) =< -V+V33
aux(101) =< V11
aux(102) =< V33
s(59) =< aux(101)
s(53) =< s(51)
s(54) =< aux(102)

  with precondition: [V1=1,V>=0,V11>=1] 

* Chain [50]: 2*s(64)+8*s(65)+26*s(68)+3
  Such that:s(62) =< -V11+V33+1
aux(103) =< V33
s(64) =< s(62)
s(65) =< aux(103)

  with precondition: [V1=2,V>=0,V11>=1,V33>=0] 

* Chain [49]: 2*s(71)+3*s(72)+3
  Such that:s(69) =< -V1+V11
s(70) =< V11
s(71) =< s(69)
s(72) =< s(70)

  with precondition: [V=0,V1>=0] 

* Chain [48]: 0
  with precondition: [V1=V,V1>=1] 


Closed-form bounds of start(V1,V,V11,V33): 
-------------------------------------
* Chain [54]... with precondition: [V1>=0,V>=0,V11>=0,V+V11>=1,V1+V11+2*V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [53]... with precondition: [3*V1>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V1=1,V>=0,V11>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [V1=2,V>=0,V11>=1,V33>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [V=0,V1>=0] 
    - Upper bound: nat(V11)*3+3+nat(-V1+V11)*2 
    - Complexity: n 
* Chain [48] with precondition: [V1=V,V1>=1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of start(V1,V,V11,V33): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 50 ms.
* Invariants computed in 94 ms.
   - Backward Invariants 50 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 195 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 414 ms.
   - Equation cost structures 78 ms.
   - Phase cost structures 258 ms.
   - Chain cost structures 87 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 824 ms.

