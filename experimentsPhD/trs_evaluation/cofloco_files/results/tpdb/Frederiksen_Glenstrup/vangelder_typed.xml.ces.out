
Preprocessing Cost Relations
=====================================
5. SCC does not have a single cut point : [r/3,p/3,q/3]  
 Merged into rpq/3

#### Computed strongly connected components 
0. non_recursive  : [and/3]
1. non_recursive  : [e/3]
2. non_recursive  : [equal/3]
3. non_recursive  : [fun/4]
4. non_recursive  : [head/2]
6. non_recursive  : [goal/3]
7. non_recursive  : [notEmpty/2]
8. non_recursive  : [t/3]
9. non_recursive  : [start/3]
5. recursive [non_tail,multiple] : [fun1/4,fun2/4,fun3/4,fun4/4,rpq/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into e/3
2. SCC is partially evaluated into equal/3
3. SCC is partially evaluated into fun/4
4. SCC is partially evaluated into head/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into notEmpty/2
8. SCC is partially evaluated into t/3
9. SCC is partially evaluated into start/3
5. SCC is partially evaluated into rpq/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 39 is refined into CE [71] 
* CE 37 is refined into CE [72] 
* CE 36 is refined into CE [73] 
* CE 38 is refined into CE [74] 


#### Refined cost equations and/3 
* CE 71: and(V,V3,Out) = 0
     [Out=1,V3=1,V=1] 
* CE 72: and(V,V3,Out) = 0
     [Out=0,V3=0,V=1] 
* CE 73: and(V,V3,Out) = 0
     [V3>=0,V>=0,Out=0] 
* CE 74: and(V,V3,Out) = 0
     [Out=0,V3=1,V=0] 

### Cost equations --> "Loop" of and/3 
* CEs [71] --> Loop 46 
* CEs [72] --> Loop 47 
* CEs [73,74] --> Loop 48 

#### Loops of and/3 
* Loop 46: and(V,V3,Out) [Out=1,V3=1,V=1] 
* Loop 47: and(V,V3,Out) [Out=0,V3=0,V=1] 
* Loop 48: and(V,V3,Out) [V3>=0,V>=0,Out=0] 

### Ranking functions of CR and(V,V3,Out) 

#### Partial ranking functions of CR and(V,V3,Out) 


### Resulting Chains:and(V,V3,Out) 
* [48]
* [47]
* [46]


### Merging Chains  and/3 into  External patterns of execution 
* [[47],[48]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations e/3 
* CE 45 is refined into CE [75] 
* CE 42 is refined into CE [76] 
* CE 43 is refined into CE [77] 
* CE 44 is refined into CE [78] 
* CE 46 is refined into CE [79] 
* CE 47 is refined into CE [80] 


#### Refined cost equations e/3 
* CE 75: e(V,V3,Out) = 1
     [V3>=0,V3+2=Out,V=2] 
* CE 76: e(V,V3,Out) = 1
     [V3>=0,V>=4,Out=0] 
* CE 77: e(V,V3,Out) = 1
     [V3>=0,V>=5,Out=0] 
* CE 78: e(V,V3,Out) = 1
     [V3>=0,V>=3,Out=0] 
* CE 79: e(V,V3,Out) = 1
     [V3>=0,Out=0,V=0] 
* CE 80: e(V,V3,Out) = 0
     [V3>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of e/3 
* CEs [75] --> Loop 49 
* CEs [76,77,78,79,80] --> Loop 50 

#### Loops of e/3 
* Loop 49: e(V,V3,Out) [V3>=0,V3+2=Out,V=2] 
* Loop 50: e(V,V3,Out) [V3>=0,V>=0,Out=0] 

### Ranking functions of CR e(V,V3,Out) 

#### Partial ranking functions of CR e(V,V3,Out) 


### Resulting Chains:e(V,V3,Out) 
* [50]
* [49]


### Merging Chains  e/3 into  External patterns of execution 
* [[49]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations equal/3 
* CE 53 is refined into CE [81] 
* CE 52 is refined into CE [82] 
* CE 54 is refined into CE [83] 
* CE 55 is refined into CE [84] 
* CE 49 is refined into CE [85] 
* CE 48 is refined into CE [86] 
* CE 50 is refined into CE [87] 
* CE 51 is refined into CE [88] 
* CE 57 is refined into CE [89] 
* CE 56 is refined into CE [90] 
* CE 58 is refined into CE [91] 
* CE 59 is refined into CE [92] 
* CE 61 is refined into CE [93] 
* CE 60 is refined into CE [94] 
* CE 62 is refined into CE [95] 
* CE 64 is refined into CE [96] 
* CE 63 is refined into CE [97] 


#### Refined cost equations equal/3 
* CE 81: equal(V,V3,Out) = 1
     [Out=1,V3=4,V=4] 
* CE 82: equal(V,V3,Out) = 1
     [Out=0,V3=3,V=4] 
* CE 83: equal(V,V3,Out) = 1
     [Out=0,V3=2,V=4] 
* CE 84: equal(V,V3,Out) = 1
     [Out=0,V3=1,V=4] 
* CE 85: equal(V,V3,Out) = 1
     [Out=0,V3=4,V=3] 
* CE 86: equal(V,V3,Out) = 1
     [Out=1,V3=3,V=3] 
* CE 87: equal(V,V3,Out) = 1
     [Out=0,V3=2,V=3] 
* CE 88: equal(V,V3,Out) = 1
     [Out=0,V3=1,V=3] 
* CE 89: equal(V,V3,Out) = 1
     [Out=0,V3=4,V=2] 
* CE 90: equal(V,V3,Out) = 1
     [Out=0,V3=3,V=2] 
* CE 91: equal(V,V3,Out) = 1
     [Out=1,V3=2,V=2] 
* CE 92: equal(V,V3,Out) = 1
     [Out=0,V3=1,V=2] 
* CE 93: equal(V,V3,Out) = 1
     [Out=0,V3=4,V=1] 
* CE 94: equal(V,V3,Out) = 1
     [Out=0,V3=3,V=1] 
* CE 95: equal(V,V3,Out) = 1
     [Out=0,V3=2,V=1] 
* CE 96: equal(V,V3,Out) = 0
     [V3>=0,V>=0,Out=0] 
* CE 97: equal(V,V3,Out) = 1
     [Out=1,V3=1,V=1] 

### Cost equations --> "Loop" of equal/3 
* CEs [81] --> Loop 51 
* CEs [82] --> Loop 52 
* CEs [83] --> Loop 53 
* CEs [84] --> Loop 54 
* CEs [85] --> Loop 55 
* CEs [86] --> Loop 56 
* CEs [87] --> Loop 57 
* CEs [88] --> Loop 58 
* CEs [89] --> Loop 59 
* CEs [90] --> Loop 60 
* CEs [91] --> Loop 61 
* CEs [92] --> Loop 62 
* CEs [93] --> Loop 63 
* CEs [94] --> Loop 64 
* CEs [95,96] --> Loop 65 
* CEs [97] --> Loop 66 

#### Loops of equal/3 
* Loop 51: equal(V,V3,Out) [Out=1,V3=4,V=4] 
* Loop 52: equal(V,V3,Out) [Out=0,V3=3,V=4] 
* Loop 53: equal(V,V3,Out) [Out=0,V3=2,V=4] 
* Loop 54: equal(V,V3,Out) [Out=0,V3=1,V=4] 
* Loop 55: equal(V,V3,Out) [Out=0,V3=4,V=3] 
* Loop 56: equal(V,V3,Out) [Out=1,V3=3,V=3] 
* Loop 57: equal(V,V3,Out) [Out=0,V3=2,V=3] 
* Loop 58: equal(V,V3,Out) [Out=0,V3=1,V=3] 
* Loop 59: equal(V,V3,Out) [Out=0,V3=4,V=2] 
* Loop 60: equal(V,V3,Out) [Out=0,V3=3,V=2] 
* Loop 61: equal(V,V3,Out) [Out=1,V3=2,V=2] 
* Loop 62: equal(V,V3,Out) [Out=0,V3=1,V=2] 
* Loop 63: equal(V,V3,Out) [Out=0,V3=4,V=1] 
* Loop 64: equal(V,V3,Out) [Out=0,V3=3,V=1] 
* Loop 65: equal(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 66: equal(V,V3,Out) [Out=1,V3=1,V=1] 

### Ranking functions of CR equal(V,V3,Out) 

#### Partial ranking functions of CR equal(V,V3,Out) 


### Resulting Chains:equal(V,V3,Out) 
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]


### Merging Chains  equal/3 into  External patterns of execution 
* [[66]] --> 1 
* [[64],[65]] --> 2 
* [[63]] --> 3 
* [[62]] --> 4 
* [[61]] --> 5 
* [[60]] --> 6 
* [[59]] --> 7 
* [[58]] --> 8 
* [[57]] --> 9 
* [[56]] --> 10 
* [[55]] --> 11 
* [[54]] --> 12 
* [[53]] --> 13 
* [[52]] --> 14 
* [[51]] --> 15 


### Specialization of cost equations fun/4 
* CE 70 is refined into CE [98] 
* CE 69 is refined into CE [99] 
* CE 68 is refined into CE [100] 


#### Refined cost equations fun/4 
* CE 98: fun(V,V3,V33,Out) = 0
     [V33>=0,V3>=0,V>=0,Out=0] 
* CE 99: fun(V,V3,V33,Out) = 0
     [V33>=0,V3>=0,Out=1,V=1] 
* CE 100: fun(V,V3,V33,Out) = 0
     [V33>=0,V3>=0,Out=1,V=0] 

### Cost equations --> "Loop" of fun/4 
* CEs [98] --> Loop 67 
* CEs [99] --> Loop 68 
* CEs [100] --> Loop 69 

#### Loops of fun/4 
* Loop 67: fun(V,V3,V33,Out) [V33>=0,V3>=0,V>=0,Out=0] 
* Loop 68: fun(V,V3,V33,Out) [V33>=0,V3>=0,Out=1,V=1] 
* Loop 69: fun(V,V3,V33,Out) [V33>=0,V3>=0,Out=1,V=0] 

### Ranking functions of CR fun(V,V3,V33,Out) 

#### Partial ranking functions of CR fun(V,V3,V33,Out) 


### Resulting Chains:fun(V,V3,V33,Out) 
* [69]
* [68]
* [67]


### Merging Chains  fun/4 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 
* [[67]] --> 3 


### Specialization of cost equations head/2 
* CE 40 is refined into CE [101] 
* CE 41 is refined into CE [102] 


#### Refined cost equations head/2 
* CE 101: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 102: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [101] --> Loop 70 
* CEs [102] --> Loop 71 

#### Loops of head/2 
* Loop 70: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 71: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [71]
* [70]


### Merging Chains  head/2 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 


### Specialization of cost equations rpq/3 
* CE 26 is refined into CE [103,104] 
* CE 35 is refined into CE [105,106] 
* CE 25 is refined into CE [107,108] 
* CE 33 is discarded (unfeasible) 
* CE 34 is discarded (unfeasible) 
* CE 32 is discarded (unfeasible) 
* CE 31 is discarded (unfeasible) 
* CE 24 is discarded (unfeasible) 
* CE 29 is refined into CE [109] 
* CE 30 is refined into CE [110] 
* CE 28 is refined into CE [111] 
* CE 23 is refined into CE [112,113] 
* CE 27 is refined into CE [114] 


#### Refined cost equations rpq/3 
* CE 103: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,B,E)+ rpq(A,F,G)+ and(E,G,H):1
     [G>=0,E>=0,B>=4,A>=0,B=F+4,H=0,D=0,C=0] 
* CE 104: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,B,E)+ rpq(A,F,G)+ and(H,I,J):2
     [B>=4,A>=0,B=F+4,G=1,E=1,J=1,I=1,H=1,D=0,C=1] 
* CE 105: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,B,E)+ rpq(A,F,G)+ and(E,G,H):1
     [G>=0,E>=0,B>=8,A>=0,A+B+1=C,B=F+4,H=0,D=0] 
* CE 106: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,B,E)+ rpq(A,F,G)+ and(H,I,J):2
     [B>=8,A>=0,A+B+2=C,B=F+4,G=1,E=1,J=1,I=1,H=1,D=0] 
* CE 107: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,E,F)+ rpq(A,G,H)+ and(F,H,I):1
     [H>=0,F>=0,B>=4,A>=0,A+B+1=C,B=G+4,B=E+4,I=0,D=0] 
* CE 108: rpq(A,B,C) = 1+ e(A,B,D):2+ rpq(A,E,F)+ rpq(A,G,H)+ and(I,J,K):2
     [B>=4,A>=0,A+B+2=C,B=G+4,B=E+4,H=1,F=1,K=1,J=1,I=1,D=0] 
* CE 109: rpq(A,B,C) = 1+ e(A,D,E):2+ head(F,G):1+ equal(H,I,J):2+ and(K,L,M):1+ and(N,O,P):1+ and(Q,R,S):1
     [A>=0,S=0,R=0,Q=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=3,H=0,G=0,F=0,E=0,D=5,C=0,B=5] 
* CE 110: rpq(A,B,C) = 1+ e(A,D,E):2+ head(F,G):1+ equal(H,I,J):2+ and(K,L,M):1+ and(N,O,P):1+ and(Q,R,S):1
     [A>=0,S=0,R=0,Q=1,P=0,O=0,N=1,M=0,L=0,K=0,J=0,I=3,H=0,G=0,F=0,E=0,D=4,C=0,B=4] 
* CE 111: rpq(A,B,C) = 1+ e(A,D,E):2+ head(F,G):1+ equal(H,I,J):2+ and(K,L,M):1+ and(N,O,P):1+ and(Q,R,S):1
     [A>=0,S=0,R=0,Q=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=3,H=0,G=0,F=0,E=0,D=3,C=0,B=3] 
* CE 112: rpq(A,B,C) = 1+ e(D,E,F):1
     [F>=2,F=E+2,F=B+2,D=2,C=0,A=2] 
* CE 113: rpq(A,B,C) = 1+ e(A,B,D):2
     [B>=0,A>=0,D=0,C=0] 
* CE 114: rpq(A,B,C) = 1+ e(A,D,E):2+ head(F,G):1+ equal(H,I,J):2+ and(K,L,M):1+ and(N,O,P):1+ and(Q,R,S):1
     [A>=0,S=0,R=0,Q=1,P=0,O=0,N=0,M=0,L=0,K=0,J=0,I=3,H=0,G=0,F=0,E=0,D=2,C=0,B=2] 

### Cost equations --> "Loop" of rpq/3 
* CEs [109] --> Loop 72 
* CEs [110] --> Loop 73 
* CEs [111] --> Loop 74 
* CEs [114] --> Loop 75 
* CEs [112,113] --> Loop 76 
* CEs [107] --> Loop 77 
* CEs [105] --> Loop 78 
* CEs [108] --> Loop 79 
* CEs [106] --> Loop 80 
* CEs [104] --> Loop 81 
* CEs [103] --> Loop 82 

#### Loops of rpq/3 
* Loop 72: rpq(A,B,C) [A>=0,C=0,B=5] 
* Loop 73: rpq(A,B,C) [A>=0,C=0,B=4] 
* Loop 74: rpq(A,B,C) [A>=0,C=0,B=3] 
* Loop 75: rpq(A,B,C) [A>=0,C=0,B=2] 
* Loop 76: rpq(A,B,C) [B>=0,A>=0,C=0] 
* Loop 77: rpq(A,B,C)->  rpq(A,A',B')  rpq(A,A'2,B'2)
                  [B'2>=0,B'>=0,B>=4,A>=0,A+B+1=C,B=A'2+4,B=A'+4] 
* Loop 78: rpq(A,B,C)->  rpq(A,B,A')  rpq(A,A'2,B'2)
                  [B'2>=0,A'>=0,B>=8,A>=0,A+B+1=C,B=A'2+4] 
* Loop 79: rpq(A,B,C)->  rpq(A,A',B')  rpq(A,A'2,B'2)
                  [B>=4,A>=0,A+B+2=C,B=A'2+4,B=A'+4,B'2=1,B'=1] 
* Loop 80: rpq(A,B,C)->  rpq(A,B,A')  rpq(A,A'2,B'2)
                  [B>=8,A>=0,A+B+2=C,B=A'2+4,B'2=1,A'=1] 
* Loop 81: rpq(A,B,C)->  rpq(A,B,A')  rpq(A,A'2,B'2)
                  [B>=4,A>=0,B=A'2+4,B'2=1,A'=1,C=1] 
* Loop 82: rpq(A,B,C)->  rpq(A,B,A')  rpq(A,A'2,B'2)
                  [B'2>=0,A'>=0,B>=4,A>=0,B=A'2+4,C=0] 

### Ranking functions of CR rpq(A,B,C) 

#### Partial ranking functions of CR rpq(A,B,C) 
* Partial RF of phase [77,78,82]:
  - RF of loop [77:1,77:2,82:2]:
    B-3
  - RF of loop [78:2]:
    B-7
* Partial RF of phase [81]:
  - RF of loop [81:2]:
    B-3


### Resulting Chains:rpq(A,B,C) 
* [multiple([81],[[]])]...
* [multiple([77,78,82],[[],[multiple([81],[[]])],[multiple(80,[[multiple([81],[[]])]])],[multiple(79,[[multiple([81],[[]])]])],[76],[75],[74],[73],[72]])]...
* [multiple(80,[[multiple([81],[[]])]])]...
* [multiple(79,[[multiple([81],[[]])]])]...
* [76]
* [75]
* [74]
* [73]
* [72]


### Merging Chains  rpq/3 into  External patterns of execution 
* [[75],[76]] --> 1 
* [[74]] --> 2 
* [[73]] --> 3 
* [[72]] --> 4 
* [[multiple(79,[[multiple([81],[[]])]])],[multiple(80,[[multiple([81],[[]])]])]] --> 5 
* [[multiple([81],[[]])]] --> 6 
* [[multiple([77,78,82],[[],[multiple([81],[[]])],[multiple(80,[[multiple([81],[[]])]])],[multiple(79,[[multiple([81],[[]])]])],[76],[75],[74],[73],[72]])]] --> 7 


### Specialization of cost equations notEmpty/2 
* CE 65 is refined into CE [115] 
* CE 66 is refined into CE [116] 


#### Refined cost equations notEmpty/2 
* CE 115: notEmpty(V,Out) = 1
     [V>=1,Out=1] 
* CE 116: notEmpty(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [115] --> Loop 83 
* CEs [116] --> Loop 84 

#### Loops of notEmpty/2 
* Loop 83: notEmpty(V,Out) [V>=1,Out=1] 
* Loop 84: notEmpty(V,Out) [Out=0,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [84]
* [83]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[84]] --> 1 
* [[83]] --> 2 


### Specialization of cost equations t/3 
* CE 67 is refined into CE [117,118,119] 


#### Refined cost equations t/3 
* CE 117: t(V,V3,Out) = 1+ e(W3,X3,Y3):1+ fun(Y3,Z3,A4,B4):3
     [Y3>=2,Y3=A4+2,Y3=X3+2,Y3=V3+2,B4=0,Z3=2,W3=2,Out=0,V=2] 
* CE 118: t(V,V3,Out) = 1+ e(V,V3,W3):2+ fun(X3,V,V3,Y3):1
     [V3>=0,V>=0,Y3=1,X3=0,W3=0,Out=1] 
* CE 119: t(V,V3,Out) = 1+ e(V,V3,W3):2+ fun(X3,V,V3,Y3):3
     [V3>=0,V>=0,Y3=0,X3=0,W3=0,Out=0] 

### Cost equations --> "Loop" of t/3 
* CEs [118] --> Loop 85 
* CEs [117,119] --> Loop 86 

#### Loops of t/3 
* Loop 85: t(V,V3,Out) [V3>=0,V>=0,Out=1] 
* Loop 86: t(V,V3,Out) [V3>=0,V>=0,Out=0] 

### Ranking functions of CR t(V,V3,Out) 

#### Partial ranking functions of CR t(V,V3,Out) 


### Resulting Chains:t(V,V3,Out) 
* [86]
* [85]


### Merging Chains  t/3 into  External patterns of execution 
* [[86]] --> 1 
* [[85]] --> 2 


### Specialization of cost equations start/3 
* CE 5 is refined into CE [120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137] 
* CE 16 is refined into CE [138] 
* CE 20 is discarded (unfeasible) 
* CE 3 is refined into CE [139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158] 
* CE 4 is refined into CE [159,160,161,162,163,164,165,166,167,168,169,170] 
* CE 17 is refined into CE [171] 
* CE 21 is discarded (unfeasible) 
* CE 15 is refined into CE [172] 
* CE 19 is discarded (unfeasible) 
* CE 2 is refined into CE [173] 
* CE 6 is refined into CE [174,175] 
* CE 7 is refined into CE [176,177] 
* CE 8 is refined into CE [178,179,180,181,182,183,184,185,186,187,188,189,190,191,192] 
* CE 9 is refined into CE [193,194] 
* CE 10 is refined into CE [195,196] 
* CE 11 is refined into CE [197,198,199,200,201,202,203] 
* CE 12 is refined into CE [204,205,206,207,208,209,210] 
* CE 13 is refined into CE [211,212] 
* CE 14 is refined into CE [213] 
* CE 18 is discarded (unfeasible) 
* CE 22 is refined into CE [214,215,216] 


#### Refined cost equations start/3 
* CE 120: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):1+ and(Z33,A34,B34):1
     [V33>=X33+1,X33>=0,V3>=0,B34=0,A34=0,Z33=0,Y33=0,W33=0,V=1] 
* CE 121: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):2+ and(Z33,A34,B34):1
     [V3>=0,V33>=4,B34=0,A34=0,Z33=0,Y33=0,X33=3,W33=0,V=1] 
* CE 122: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):3+ and(Z33,A34,B34):1
     [V3>=0,V33>=5,B34=0,A34=0,Z33=0,Y33=0,X33=4,W33=0,V=1] 
* CE 123: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):4+ and(Z33,A34,B34):1
     [V3>=0,V33>=6,B34=0,A34=0,Z33=0,Y33=0,X33=5,W33=0,V=1] 
* CE 124: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):5
     [V3+V33+1>=Y33,Y33>=V3+10,V3>=0,Y33=V3+X33+2,Z33=0,W33=0,V=1] 
* CE 125: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):6
     [V33>=X33+1,X33>=4,V3>=0,Z33=1,A34=0,Y33=1,W33=0,V=1] 
* CE 126: start(V,V3,V33) = 0+ rpq(V3,V33,W33):1+ rpq(V3,X33,Y33):7
     [V3+X33+1>=Y33,V33>=X33+1,Y33>=0,X33>=4,V3>=0,Z33=0,W33=0,V=1] 
* CE 127: start(V,V3,V33) = 0+ rpq(V3,W33,X33):2+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [Y33>=0,V3>=0,2>=Y33,C34=0,B34=0,A34=0,Z33=0,X33=0,W33=3,V33=3,V=1] 
* CE 128: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [Y33>=0,V3>=0,3>=Y33,C34=0,B34=0,A34=0,Z33=0,X33=0,W33=4,V33=4,V=1] 
* CE 129: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):2+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=4,V33=4,V=1] 
* CE 130: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [Y33>=0,V3>=0,4>=Y33,C34=0,B34=0,A34=0,Z33=0,X33=0,W33=5,V33=5,V=1] 
* CE 131: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):2+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=5,V33=5,V=1] 
* CE 132: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):3+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=4,X33=0,W33=5,V33=5,V=1] 
* CE 133: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):6
     [V3>=0,A34=1,B34=0,Z33=1,Y33=4,X33=0,W33=5,V33=5,V=1] 
* CE 134: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):7
     [V3+5>=Z33,Z33>=0,V3>=0,A34=0,Y33=4,X33=0,W33=5,V33=5,V=1] 
* CE 135: start(V,V3,V33) = 0+ rpq(V3,W33,X33):5
     [X33>=V3+Y33+3,X33>=V3+10,Y33>=0,V3>=0,X33=V3+W33+2,X33=V3+V33+2,V=1] 
* CE 136: start(V,V3,V33) = 0+ rpq(V3,V33,W33):6
     [V33>=X33+1,X33>=0,V33>=4,V3>=0,Y33=1,W33=1,V=1] 
* CE 137: start(V,V3,V33) = 0+ rpq(V3,V33,W33):7
     [V3+V33+1>=W33,V33>=X33+1,X33>=0,W33>=0,V33>=4,V3>=0,V=1] 
* CE 138: start(V,V3,V33) = 0+ head(W33,X33):1+ equal(Y33,Z33,A34):2+ and(B34,C34,D34):1+ and(E34,F34,G34):1+ and(H34,I34,J34):1
     [V3>=0,J34=0,I34=0,H34=1,G34=0,F34=0,E34=0,D34=0,C34=0,B34=0,A34=0,Z33=3,Y33=0,X33=0,W33=0,V33=5,V=0] 
* CE 139: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,W33,Y33):1+ and(Z33,A34,B34):1
     [W33>=0,V3>=0,W33+4=V33,B34=0,A34=0,Z33=0,Y33=0,X33=0,V=0] 
* CE 140: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):2+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=3,V33=7,V=0] 
* CE 141: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):3+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=4,X33=0,W33=4,V33=8,V=0] 
* CE 142: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):4+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=5,X33=0,W33=5,V33=9,V=0] 
* CE 143: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):5
     [Z33>=V3+10,V3>=0,Z33=V3+Y33+2,Z33=V3+W33+2,Z33+2=V3+V33,A34=0,X33=0,V=0] 
* CE 144: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,W33,Y33):6
     [W33>=4,V3>=0,W33+4=V33,Z33=1,A34=0,Y33=1,X33=0,V=0] 
* CE 145: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,W33,Y33):7
     [V3+W33+1>=Y33,Y33>=0,W33>=4,V3>=0,W33+4=V33,Z33=0,X33=0,V=0] 
* CE 146: start(V,V3,V33) = 0+ rpq(V3,W33,X33):2+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=3,V33=7,V=0] 
* CE 147: start(V,V3,V33) = 0+ rpq(V3,W33,X33):2+ rpq(V3,Y33,Z33):2+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=3,V33=7,V=0] 
* CE 148: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=4,X33=0,W33=4,V33=8,V=0] 
* CE 149: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):3+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=4,X33=0,W33=4,V33=8,V=0] 
* CE 150: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):6
     [V3>=0,A34=1,B34=0,Z33=1,Y33=4,X33=0,W33=4,V33=8,V=0] 
* CE 151: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):7
     [V3+5>=Z33,Z33>=0,V3>=0,A34=0,Y33=4,X33=0,W33=4,V33=8,V=0] 
* CE 152: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=5,X33=0,W33=5,V33=9,V=0] 
* CE 153: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):4+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=5,X33=0,W33=5,V33=9,V=0] 
* CE 154: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):6
     [V3>=0,A34=1,B34=0,Z33=1,Y33=5,X33=0,W33=5,V33=9,V=0] 
* CE 155: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):7
     [V3+6>=Z33,Z33>=0,V3>=0,A34=0,Y33=5,X33=0,W33=5,V33=9,V=0] 
* CE 156: start(V,V3,V33) = 0+ rpq(V3,W33,X33):5
     [X33>=V3+10,V3>=0,X33=V3+Y33+2,X33=V3+W33+2,X33+2=V3+V33,V=0] 
* CE 157: start(V,V3,V33) = 0+ rpq(V3,W33,X33):6
     [W33>=4,V3>=0,W33+4=V33,Y33=1,X33=1,V=0] 
* CE 158: start(V,V3,V33) = 0+ rpq(V3,W33,X33):7
     [V3+W33+1>=X33,X33>=0,W33>=4,V3>=0,W33+4=V33,V=0] 
* CE 159: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [Y33>=0,V3>=0,Y33+4=W33,Y33+4=V33,C34=0,B34=0,A34=0,Z33=0,X33=0,V=0] 
* CE 160: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):2+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=3,X33=0,W33=7,V33=7,V=0] 
* CE 161: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):3+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=4,X33=0,W33=8,V33=8,V=0] 
* CE 162: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):4+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=5,X33=0,W33=9,V33=9,V=0] 
* CE 163: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):5
     [Z33>=V3+10,V3>=0,Z33=V3+Y33+2,Z33+2=V3+W33,Z33+2=V3+V33,A34=0,X33=0,V=0] 
* CE 164: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):6
     [Y33>=4,V3>=0,Y33+4=W33,Y33+4=V33,A34=1,B34=0,Z33=1,X33=0,V=0] 
* CE 165: start(V,V3,V33) = 0+ rpq(V3,W33,X33):1+ rpq(V3,Y33,Z33):7
     [V3+Y33+1>=Z33,Z33>=0,Y33>=4,V3>=0,Y33+4=W33,Y33+4=V33,A34=0,X33=0,V=0] 
* CE 166: start(V,V3,V33) = 0+ rpq(V3,W33,X33):3+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=0,X33=0,W33=4,V33=4,V=0] 
* CE 167: start(V,V3,V33) = 0+ rpq(V3,W33,X33):4+ rpq(V3,Y33,Z33):1+ and(A34,B34,C34):1
     [V3>=0,C34=0,B34=0,A34=0,Z33=0,Y33=1,X33=0,W33=5,V33=5,V=0] 
* CE 168: start(V,V3,V33) = 0+ rpq(V3,W33,X33):5
     [X33>=V3+10,V3>=0,X33=V3+Y33+6,X33=V3+W33+2,X33=V3+V33+2,V=0] 
* CE 169: start(V,V3,V33) = 0+ rpq(V3,V33,W33):6
     [V33>=4,V3>=0,V33=X33+4,Y33=1,W33=1,V=0] 
* CE 170: start(V,V3,V33) = 0+ rpq(V3,V33,W33):7
     [V3+V33+1>=W33,W33>=0,V33>=4,V3>=0,V33=X33+4,V=0] 
* CE 171: start(V,V3,V33) = 0+ head(W33,X33):1+ equal(Y33,Z33,A34):2+ and(B34,C34,D34):1+ and(E34,F34,G34):1+ and(H34,I34,J34):1
     [V3>=0,J34=0,I34=0,H34=1,G34=0,F34=0,E34=1,D34=0,C34=0,B34=0,A34=0,Z33=3,Y33=0,X33=0,W33=0,V33=4,V=0] 
* CE 172: start(V,V3,V33) = 0+ head(W33,X33):1+ equal(Y33,Z33,A34):2+ and(B34,C34,D34):1+ and(E34,F34,G34):1+ and(H34,I34,J34):1
     [V3>=0,J34=0,I34=0,H34=1,G34=0,F34=0,E34=0,D34=0,C34=0,B34=0,A34=0,Z33=3,Y33=0,X33=0,W33=0,V33=3,V=0] 
* CE 173: start(V,V3,V33) = 0
     [V33>=0,V3>=0,V>=0] 
* CE 174: start(V,V3,V33) = 0+ head(V,W33):1
     [V>=0,W33=0] 
* CE 175: start(V,V3,V33) = 0+ head(V,W33):2
     [V>=W33+1,W33>=0] 
* CE 176: start(V,V3,V33) = 0+ e(W33,X33,Y33):1
     [Y33>=2,Y33=X33+2,Y33=V3+2,W33=2,V=2] 
* CE 177: start(V,V3,V33) = 0+ e(V,V3,W33):2
     [V3>=0,V>=0,W33=0] 
* CE 178: start(V,V3,V33) = 0+ equal(W33,X33,Y33):1
     [Y33=1,X33=1,W33=1,V3=1,V=1] 
* CE 179: start(V,V3,V33) = 0+ equal(V,V3,W33):2
     [V3>=0,V>=0,W33=0] 
* CE 180: start(V,V3,V33) = 0+ equal(W33,X33,Y33):3
     [Y33=0,X33=4,W33=1,V3=4,V=1] 
* CE 181: start(V,V3,V33) = 0+ equal(W33,X33,Y33):4
     [Y33=0,X33=1,W33=2,V3=1,V=2] 
* CE 182: start(V,V3,V33) = 0+ equal(W33,X33,Y33):5
     [Y33=1,X33=2,W33=2,V3=2,V=2] 
* CE 183: start(V,V3,V33) = 0+ equal(W33,X33,Y33):6
     [Y33=0,X33=3,W33=2,V3=3,V=2] 
* CE 184: start(V,V3,V33) = 0+ equal(W33,X33,Y33):7
     [Y33=0,X33=4,W33=2,V3=4,V=2] 
* CE 185: start(V,V3,V33) = 0+ equal(W33,X33,Y33):8
     [Y33=0,X33=1,W33=3,V3=1,V=3] 
* CE 186: start(V,V3,V33) = 0+ equal(W33,X33,Y33):9
     [Y33=0,X33=2,W33=3,V3=2,V=3] 
* CE 187: start(V,V3,V33) = 0+ equal(W33,X33,Y33):10
     [Y33=1,X33=3,W33=3,V3=3,V=3] 
* CE 188: start(V,V3,V33) = 0+ equal(W33,X33,Y33):11
     [Y33=0,X33=4,W33=3,V3=4,V=3] 
* CE 189: start(V,V3,V33) = 0+ equal(W33,X33,Y33):12
     [Y33=0,X33=1,W33=4,V3=1,V=4] 
* CE 190: start(V,V3,V33) = 0+ equal(W33,X33,Y33):13
     [Y33=0,X33=2,W33=4,V3=2,V=4] 
* CE 191: start(V,V3,V33) = 0+ equal(W33,X33,Y33):14
     [Y33=0,X33=3,W33=4,V3=3,V=4] 
* CE 192: start(V,V3,V33) = 0+ equal(W33,X33,Y33):15
     [Y33=1,X33=4,W33=4,V3=4,V=4] 
* CE 193: start(V,V3,V33) = 0+ notEmpty(W33,X33):1
     [X33=0,W33=0,V=0] 
* CE 194: start(V,V3,V33) = 0+ notEmpty(V,W33):2
     [V>=1,W33=1] 
* CE 195: start(V,V3,V33) = 0+ t(V,V3,W33):1
     [V3>=0,V>=0,W33=0] 
* CE 196: start(V,V3,V33) = 0+ t(V,V3,W33):2
     [V3>=0,V>=0,W33=1] 
* CE 197: start(V,V3,V33) = 0+ rpq(V,V3,W33):1
     [V3>=0,V>=0,W33=0] 
* CE 198: start(V,V3,V33) = 0+ rpq(V,W33,X33):2
     [V>=0,X33=0,W33=3,V3=3] 
* CE 199: start(V,V3,V33) = 0+ rpq(V,W33,X33):3
     [V>=0,X33=0,W33=4,V3=4] 
* CE 200: start(V,V3,V33) = 0+ rpq(V,W33,X33):4
     [V>=0,X33=0,W33=5,V3=5] 
* CE 201: start(V,V3,V33) = 0+ rpq(V,W33,X33):5
     [X33>=V+10,V>=0,X33=V+W33+2,X33=V+V3+2] 
* CE 202: start(V,V3,V33) = 0+ rpq(V,V3,W33):6
     [V3>=4,V>=0,W33=1] 
* CE 203: start(V,V3,V33) = 0+ rpq(V,V3,W33):7
     [V+V3+1>=W33,W33>=0,V3>=4,V>=0] 
* CE 204: start(V,V3,V33) = 1+ rpq(V,V3,W33):1
     [V3>=0,V>=0,W33=0] 
* CE 205: start(V,V3,V33) = 1+ rpq(V,W33,X33):2
     [V>=0,X33=0,W33=3,V3=3] 
* CE 206: start(V,V3,V33) = 1+ rpq(V,W33,X33):3
     [V>=0,X33=0,W33=4,V3=4] 
* CE 207: start(V,V3,V33) = 1+ rpq(V,W33,X33):4
     [V>=0,X33=0,W33=5,V3=5] 
* CE 208: start(V,V3,V33) = 1+ rpq(V,W33,X33):5
     [X33>=V+10,V>=0,X33=V+W33+2,X33=V+V3+2] 
* CE 209: start(V,V3,V33) = 1+ rpq(V,V3,W33):6
     [V3>=4,V>=0,W33=1] 
* CE 210: start(V,V3,V33) = 1+ rpq(V,V3,W33):7
     [V+V3+1>=W33,W33>=0,V3>=4,V>=0] 
* CE 211: start(V,V3,V33) = 0+ and(V,V3,W33):1
     [V3>=0,V>=0,W33=0] 
* CE 212: start(V,V3,V33) = 0+ and(W33,X33,Y33):2
     [Y33=1,X33=1,W33=1,V3=1,V=1] 
* CE 213: start(V,V3,V33) = 0+ head(W33,X33):1+ equal(Y33,Z33,A34):2+ and(B34,C34,D34):1+ and(E34,F34,G34):1+ and(H34,I34,J34):1
     [V3>=0,J34=0,I34=0,H34=1,G34=0,F34=0,E34=0,D34=0,C34=0,B34=0,A34=0,Z33=3,Y33=0,X33=0,W33=0,V33=2,V=0] 
* CE 214: start(V,V3,V33) = 0+ fun(W33,V3,V33,X33):1
     [V33>=0,V3>=0,X33=1,W33=0,V=0] 
* CE 215: start(V,V3,V33) = 0+ fun(W33,V3,V33,X33):2
     [V33>=0,V3>=0,X33=1,W33=1,V=1] 
* CE 216: start(V,V3,V33) = 0+ fun(V,V3,V33,W33):3
     [V33>=0,V3>=0,V>=0,W33=0] 

### Cost equations --> "Loop" of start/3 
* CEs [200,207] --> Loop 87 
* CEs [192] --> Loop 88 
* CEs [191] --> Loop 89 
* CEs [190] --> Loop 90 
* CEs [189] --> Loop 91 
* CEs [188] --> Loop 92 
* CEs [187] --> Loop 93 
* CEs [186] --> Loop 94 
* CEs [185] --> Loop 95 
* CEs [184] --> Loop 96 
* CEs [183,198,205] --> Loop 97 
* CEs [182] --> Loop 98 
* CEs [176,181] --> Loop 99 
* CEs [130,131,132] --> Loop 100 
* CEs [128,129] --> Loop 101 
* CEs [120,121,122,123,127,215] --> Loop 102 
* CEs [180,199,206] --> Loop 103 
* CEs [178,212] --> Loop 104 
* CEs [138,139,140,141,142,146,147,148,149,152,153,159,160,161,162,166,167,171,172,173,174,175,177,179,193,194,195,196,197,204,211,213,214,216] --> Loop 105 
* CEs [201,202,203,208,209,210] --> Loop 106 
* CEs [124,125,126,133,134,135,136,137] --> Loop 107 
* CEs [154,155] --> Loop 108 
* CEs [143,144,145,150,151,156,157,158,163,164,165,168,169,170] --> Loop 109 

#### Loops of start/3 
* Loop 87: start(V,V3,V33) [V>=0,V3=5] 
* Loop 88: start(V,V3,V33) [V3=4,V=4] 
* Loop 89: start(V,V3,V33) [V3=3,V=4] 
* Loop 90: start(V,V3,V33) [V3=2,V=4] 
* Loop 91: start(V,V3,V33) [V3=1,V=4] 
* Loop 92: start(V,V3,V33) [V3=4,V=3] 
* Loop 93: start(V,V3,V33) [V3=3,V=3] 
* Loop 94: start(V,V3,V33) [V3=2,V=3] 
* Loop 95: start(V,V3,V33) [V3=1,V=3] 
* Loop 96: start(V,V3,V33) [V3=4,V=2] 
* Loop 97: start(V,V3,V33) [V>=0,V3=3] 
* Loop 98: start(V,V3,V33) [V3=2,V=2] 
* Loop 99: start(V,V3,V33) [V3>=0,V=2] 
* Loop 100: start(V,V3,V33) [V3>=0,V33=5,V=1] 
* Loop 101: start(V,V3,V33) [V3>=0,V33=4,V=1] 
* Loop 102: start(V,V3,V33) [V33>=0,V3>=0,V=1] 
* Loop 103: start(V,V3,V33) [V>=0,V3=4] 
* Loop 104: start(V,V3,V33) [V3=1,V=1] 
* Loop 105: start(V,V3,V33) [V>=0] 
* Loop 106: start(V,V3,V33) [V3>=4,V>=0] 
* Loop 107: start(V,V3,V33) [V33>=4,V3>=0,V=1] 
* Loop 108: start(V,V3,V33) [V3>=0,V33=9,V=0] 
* Loop 109: start(V,V3,V33) [V33>=4,V3>=0,V=0] 

### Ranking functions of CR start(V,V3,V33) 

#### Partial ranking functions of CR start(V,V3,V33) 


### Resulting Chains:start(V,V3,V33) 
* [109]...
* [108]...
* [107]...
* [106]...
* [105]
* [104]
* [103]
* [102]
* [101]
* [100]
* [99]
* [98]
* [97]
* [96]
* [95]
* [94]
* [93]
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]


### Merging Chains  start/3 into  External patterns of execution 
* [[104],[105]] --> 1 
* [[101],[102]] --> 2 
* [[100]] --> 3 
* [[98],[99]] --> 4 
* [[96],[103]] --> 5 
* [[95]] --> 6 
* [[94]] --> 7 
* [[93],[97]] --> 8 
* [[92]] --> 9 
* [[91]] --> 10 
* [[90]] --> 11 
* [[89]] --> 12 
* [[88]] --> 13 
* [[87]] --> 14 
* [[108]] --> 15 
* [[109]] --> 16 
* [[107]] --> 17 
* [[106]] --> 18 


Computing Bounds
=====================================

#### Cost of chains of and(V,V3,Out):
* Chain [48]: 0
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [47]: 0
  with precondition: [V=1,V3=0,Out=0] 

* Chain [46]: 0
  with precondition: [V=1,V3=1,Out=1] 


#### Cost of chains of e(V,V3,Out):
* Chain [50]: 1
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [49]: 1
  with precondition: [V=2,V3+2=Out,V3>=0] 


#### Cost of chains of equal(V,V3,Out):
* Chain [66]: 1
  with precondition: [V=1,V3=1,Out=1] 

* Chain [65]: 1
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [64]: 1
  with precondition: [V=1,V3=3,Out=0] 

* Chain [63]: 1
  with precondition: [V=1,V3=4,Out=0] 

* Chain [62]: 1
  with precondition: [V=2,V3=1,Out=0] 

* Chain [61]: 1
  with precondition: [V=2,V3=2,Out=1] 

* Chain [60]: 1
  with precondition: [V=2,V3=3,Out=0] 

* Chain [59]: 1
  with precondition: [V=2,V3=4,Out=0] 

* Chain [58]: 1
  with precondition: [V=3,V3=1,Out=0] 

* Chain [57]: 1
  with precondition: [V=3,V3=2,Out=0] 

* Chain [56]: 1
  with precondition: [V=3,V3=3,Out=1] 

* Chain [55]: 1
  with precondition: [V=3,V3=4,Out=0] 

* Chain [54]: 1
  with precondition: [V=4,V3=1,Out=0] 

* Chain [53]: 1
  with precondition: [V=4,V3=2,Out=0] 

* Chain [52]: 1
  with precondition: [V=4,V3=3,Out=0] 

* Chain [51]: 1
  with precondition: [V=4,V3=4,Out=1] 


#### Cost of chains of fun(V,V3,V33,Out):
* Chain [69]: 0
  with precondition: [V=0,Out=1,V3>=0,V33>=0] 

* Chain [68]: 0
  with precondition: [V=1,Out=1,V3>=0,V33>=0] 

* Chain [67]: 0
  with precondition: [Out=0,V>=0,V3>=0,V33>=0] 


#### Cost of chains of head(V,Out):
* Chain [71]: 0
  with precondition: [Out=0,V>=0] 

* Chain [70]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of loops [81] 

 * loop 81:rpq(A,B,C) -> [rpq(A',B',C'),rpq(A'2,B'2,C'2)] 
2
#### Cost of phase [81]:rpq(A,B,C) -> [] 
2*it(81)+0
#### Cost of loops [77,78,82] 

 * loop 77:rpq(A,B,C) -> [rpq(A',B',C'),rpq(A'2,B'2,C'2)] 
2
 * loop 78:rpq(A,B,C) -> [rpq(A',B',C'),rpq(A'2,B'2,C'2)] 
2
 * loop 82:rpq(A,B,C) -> [rpq(A',B',C'),rpq(A'2,B'2,C'2)] 
2
#### Cost of phase [77,78,82]:rpq(A,B,C) -> [] 
12*it(77)+18*it([72])+0
#### Cost of chains of rpq(A,B,C):
* Chain [multiple([81],[[]])]...: 2*it(81)+0
  with precondition: [A>=0,B>=4,C=1] 

* Chain [multiple([77,78,82],[[],[multiple([81],[[]])],[multiple(80,[[multiple([81],[[]])]])],[multiple(79,[[multiple([81],[[]])]])],[76],[75],[74],[73],[72]])]...: 12*it(77)+18*it([72])+0
  with precondition: [A+B+1>=C,A>=0,C>=0,B>=4] 

* Chain [multiple(80,[[multiple([81],[[]])]])]...: 2*it(81)+2
  with precondition: [A+B+2=C,B>=8,C>=B+2] 

* Chain [multiple(79,[[multiple([81],[[]])]])]...: 2*it(81)+2
  with precondition: [A+B+2=C,B>=8,C>=B+2] 

* Chain [76]: 2
  with precondition: [C=0,A>=0,B>=0] 

* Chain [75]: 3
  with precondition: [B=2,C=0,A>=0] 

* Chain [74]: 3
  with precondition: [B=3,C=0,A>=0] 

* Chain [73]: 3
  with precondition: [B=4,C=0,A>=0] 

* Chain [72]: 3
  with precondition: [B=5,C=0,A>=0] 


#### Cost of chains of notEmpty(V,Out):
* Chain [84]: 1
  with precondition: [V=0,Out=0] 

* Chain [83]: 1
  with precondition: [Out=1,V>=1] 


#### Cost of chains of t(V,V3,Out):
* Chain [86]: 2
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [85]: 2
  with precondition: [Out=1,V>=0,V3>=0] 


#### Cost of chains of start(V,V3,V33):
* Chain [109]...: 1*aux(3)+0
  with precondition: [V=0,V3>=0,V33>=4] 

* Chain [108]...: 1*aux(4)+0
  with precondition: [V=0,V33=9,V3>=0] 

* Chain [107]...: 1*aux(5)+0
  with precondition: [V=1,V3>=0,V33>=4] 

* Chain [106]...: 1*aux(6)+0
  with precondition: [V>=0,V3>=4] 

* Chain [105]: 6
  with precondition: [V>=0] 

* Chain [104]: 1
  with precondition: [V=1,V3=1] 

* Chain [103]: 4
  with precondition: [V3=4,V>=0] 

* Chain [102]: 6
  with precondition: [V=1,V3>=0,V33>=0] 

* Chain [101]: 6
  with precondition: [V=1,V33=4,V3>=0] 

* Chain [100]: 6
  with precondition: [V=1,V33=5,V3>=0] 

* Chain [99]: 1
  with precondition: [V=2,V3>=0] 

* Chain [98]: 1
  with precondition: [V=2,V3=2] 

* Chain [97]: 4
  with precondition: [V3=3,V>=0] 

* Chain [96]: 1
  with precondition: [V=2,V3=4] 

* Chain [95]: 1
  with precondition: [V=3,V3=1] 

* Chain [94]: 1
  with precondition: [V=3,V3=2] 

* Chain [93]: 1
  with precondition: [V=3,V3=3] 

* Chain [92]: 1
  with precondition: [V=3,V3=4] 

* Chain [91]: 1
  with precondition: [V=4,V3=1] 

* Chain [90]: 1
  with precondition: [V=4,V3=2] 

* Chain [89]: 1
  with precondition: [V=4,V3=3] 

* Chain [88]: 1
  with precondition: [V=4,V3=4] 

* Chain [87]: 4
  with precondition: [V3=5,V>=0] 


Closed-form bounds of start(V,V3,V33): 
-------------------------------------
* Chain [109]... with precondition: [V=0,V3>=0,V33>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [108]... with precondition: [V=0,V33=9,V3>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [107]... with precondition: [V=1,V3>=0,V33>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [106]... with precondition: [V>=0,V3>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [105] with precondition: [V>=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [104] with precondition: [V=1,V3=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [103] with precondition: [V3=4,V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [102] with precondition: [V=1,V3>=0,V33>=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [101] with precondition: [V=1,V33=4,V3>=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [100] with precondition: [V=1,V33=5,V3>=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [99] with precondition: [V=2,V3>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [98] with precondition: [V=2,V3=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [97] with precondition: [V3=3,V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [96] with precondition: [V=2,V3=4] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [95] with precondition: [V=3,V3=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [94] with precondition: [V=3,V3=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [93] with precondition: [V=3,V3=3] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [92] with precondition: [V=3,V3=4] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [91] with precondition: [V=4,V3=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [90] with precondition: [V=4,V3=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [89] with precondition: [V=4,V3=3] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [88] with precondition: [V=4,V3=4] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [87] with precondition: [V3=5,V>=0] 
    - Upper bound: 4 
    - Complexity: constant 

### Maximum cost of start(V,V3,V33): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 278 ms.
* Invariants computed in 70 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 409 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 145 ms.
   - Equation cost structures 89 ms.
   - Phase cost structures 42 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1065 ms.

