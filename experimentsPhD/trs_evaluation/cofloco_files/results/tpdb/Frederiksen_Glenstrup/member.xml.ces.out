
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun1/3]
1. recursive  : [fun/4,member/3]
2. non_recursive  : [goal/3]
3. non_recursive  : [notEmpty/2]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun1/3
1. SCC is partially evaluated into member/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into notEmpty/2
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1/3 
* CE 18 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 
* CE 17 is refined into CE [22] 
* CE 14 is refined into CE [23] 


#### Refined cost equations fun1/3 
* CE 19: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 20: fun1(V1,V,Out) = 0
     [V1>=1,Out=1,V=0] 
* CE 21: fun1(V1,V,Out) = 0
     [V>=1,Out=1,V1=0] 
* CE 22: fun1(V1,V,Out) = 0
     [Out=2,V=0,V1=0] 
* CE 23: fun1(V1,V,Out) = 0+ fun1(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [23] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 

#### Loops of fun1/3 
* Loop 13: fun1(V1,V,Out)->  fun1(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 14: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 15: fun1(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 16: fun1(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 17: fun1(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [13]: [V,V1]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V
    V1


### Resulting Chains:fun1(V1,V,Out) 
* [[13],17]
* [[13],16]
* [[13],15]
* [[13],14]
* [17]
* [16]
* [15]
* [14]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 
* [[14],[14,[13]]] --> 4 
* [[16,[13]]] --> 5 
* [[15,[13]]] --> 6 
* [[17,[13]]] --> 7 


### Specialization of cost equations member/3 
* CE 9 is refined into CE [24,25] 
* CE 8 is refined into CE [26,27,28,29,30,31,32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34,35,36,37] 


#### Refined cost equations member/3 
* CE 24: member(V1,V,Out) = 1+ fun1(W1,X1,Y1):1
     [V>=1,Y1=2,X1=0,W1=0,Out=2,V1=0] 
* CE 25: member(V1,V,Out) = 1+ fun1(V1,V1,W1):7
     [V>=V1+1,V1>=1,W1=2,Out=2] 
* CE 26: member(V1,V,Out) = 1+ fun1(W1,X1,Y1):1
     [V>=1,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 27: member(V1,V,Out) = 1+ fun1(W1,X1,Y1):2
     [V>=X1+1,X1>=1,Y1=1,W1=0,Out=0,V1=0] 
* CE 28: member(V1,V,Out) = 1+ fun1(V1,W1,X1):3
     [V1>=1,V>=1,X1=1,W1=0,Out=0] 
* CE 29: member(V1,V,Out) = 1+ fun1(V1,W1,X1):4
     [V>=W1+1,W1>=0,V1>=0,X1=0,Out=0] 
* CE 30: member(V1,V,Out) = 1+ fun1(V1,W1,X1):5
     [V>=W1+1,W1>=V1+1,V1>=1,X1=1,Out=0] 
* CE 31: member(V1,V,Out) = 1+ fun1(V1,W1,X1):6
     [V1>=W1+1,V>=W1+1,W1>=1,X1=1,Out=0] 
* CE 32: member(V1,V,Out) = 1+ fun1(V1,V1,W1):7
     [V>=V1+1,V1>=1,W1=2,Out=0] 
* CE 33: member(V1,V,Out) = 1
     [V1>=0,Out=1,V=0] 
* CE 34: member(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ member(Z1,A2,Out)
     [V>=A2+1,V>=X1+1,A2>=0,X1>=1,Z1=0,Y1=1,W1=0,V1=0] 
* CE 35: member(V1,V,Out) = 1+ fun1(V1,W1,X1):3+ member(V1,Y1,Out)
     [V>=Y1+1,Y1>=0,V1>=1,X1=1,W1=0] 
* CE 36: member(V1,V,Out) = 1+ fun1(V1,W1,X1):5+ member(V1,Y1,Out)
     [V>=Y1+1,V>=W1+1,W1>=V1+1,Y1>=0,V1>=1,X1=1] 
* CE 37: member(V1,V,Out) = 1+ fun1(V1,W1,X1):6+ member(V1,Y1,Out)
     [V>=Y1+1,V1>=W1+1,V>=W1+1,Y1>=0,W1>=1,X1=1] 

### Cost equations --> "Loop" of member/3 
* CEs [35,36,37] --> Loop 18 
* CEs [34] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [26,27,28,29,30,31,32] --> Loop 23 

#### Loops of member/3 
* Loop 18: member(V1,V,Out)->  member(V1,V',Out)
                  [V>=V'+1,V'>=0,V1>=1] 
* Loop 19: member(V1,V,Out)->  member(V1',V',Out)
                  [V>=V'+1,V'>=0,V>=2,V1'=0,V1=0] 
* Loop 20: member(V1,V,Out) [V>=V1+1,V1>=1,Out=2] 
* Loop 21: member(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 22: member(V1,V,Out) [V>=1,Out=2,V1=0] 
* Loop 23: member(V1,V,Out) [V>=1,V1>=0,Out=0] 

### Ranking functions of CR member(V1,V,Out) 
* RF of phase [18]: [V]
* RF of phase [19]: [V-1]

#### Partial ranking functions of CR member(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V-1


### Resulting Chains:member(V1,V,Out) 
* [[19],23]
* [[19],22]
* [[19],21]
* [[18],23]
* [[18],21]
* [[18],20]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  member/3 into  External patterns of execution 
* [[23],[23,[18]],[23,[19]]] --> 1 
* [[21,[19]]] --> 2 
* [[22],[22,[19]]] --> 3 
* [[21]] --> 4 
* [[21,[18]]] --> 5 
* [[20],[20,[18]]] --> 6 


### Specialization of cost equations notEmpty/2 
* CE 12 is refined into CE [38] 
* CE 13 is refined into CE [39] 


#### Refined cost equations notEmpty/2 
* CE 38: notEmpty(V1,Out) = 1
     [V1>=1,Out=2] 
* CE 39: notEmpty(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [38] --> Loop 24 
* CEs [39] --> Loop 25 

#### Loops of notEmpty/2 
* Loop 24: notEmpty(V1,Out) [V1>=1,Out=2] 
* Loop 25: notEmpty(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR notEmpty(V1,Out) 

#### Partial ranking functions of CR notEmpty(V1,Out) 


### Resulting Chains:notEmpty(V1,Out) 
* [25]
* [24]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [40] 
* CE 3 is refined into CE [41,42,43,44,45,46] 
* CE 4 is refined into CE [47,48,49,50,51,52] 
* CE 5 is refined into CE [53,54] 
* CE 6 is refined into CE [55,56,57,58,59,60] 
* CE 7 is refined into CE [61,62,63,64,65,66,67] 


#### Refined cost equations start/3 
* CE 40: start(V1,V,V14) = 0
     [V14>=0,V>=0,V1>=0] 
* CE 41: start(V1,V,V14) = 0+ member(V,W14,X14):1
     [V14>=W14+1,W14>=1,V>=0,X14=0,V1=1] 
* CE 42: start(V1,V,V14) = 0+ member(W14,X14,Y14):2
     [V14>=X14+1,X14>=2,Y14=1,W14=0,V=0,V1=1] 
* CE 43: start(V1,V,V14) = 0+ member(W14,X14,Y14):3
     [V14>=X14+1,X14>=1,Y14=2,W14=0,V=0,V1=1] 
* CE 44: start(V1,V,V14) = 0+ member(V,W14,X14):4
     [V>=0,V14>=1,X14=1,W14=0,V1=1] 
* CE 45: start(V1,V,V14) = 0+ member(V,W14,X14):5
     [V14>=W14+1,W14>=1,V>=1,X14=1,V1=1] 
* CE 46: start(V1,V,V14) = 0+ member(V,W14,X14):6
     [V14>=W14+1,W14>=V+1,V>=1,X14=2,V1=1] 
* CE 47: start(V1,V,V14) = 0+ member(V1,V,W14):1
     [V>=1,V1>=0,W14=0] 
* CE 48: start(V1,V,V14) = 0+ member(W14,V,X14):2
     [V>=2,X14=1,W14=0,V1=0] 
* CE 49: start(V1,V,V14) = 0+ member(W14,V,X14):3
     [V>=1,X14=2,W14=0,V1=0] 
* CE 50: start(V1,V,V14) = 0+ member(V1,W14,X14):4
     [V1>=0,X14=1,W14=0,V=0] 
* CE 51: start(V1,V,V14) = 0+ member(V1,V,W14):5
     [V>=1,V1>=1,W14=1] 
* CE 52: start(V1,V,V14) = 0+ member(V1,V,W14):6
     [V>=V1+1,V1>=1,W14=2] 
* CE 53: start(V1,V,V14) = 0+ notEmpty(W14,X14):1
     [X14=1,W14=0,V1=0] 
* CE 54: start(V1,V,V14) = 0+ notEmpty(V1,W14):2
     [V1>=1,W14=2] 
* CE 55: start(V1,V,V14) = 1+ member(V1,V,W14):1
     [V>=1,V1>=0,W14=0] 
* CE 56: start(V1,V,V14) = 1+ member(W14,V,X14):2
     [V>=2,X14=1,W14=0,V1=0] 
* CE 57: start(V1,V,V14) = 1+ member(W14,V,X14):3
     [V>=1,X14=2,W14=0,V1=0] 
* CE 58: start(V1,V,V14) = 1+ member(V1,W14,X14):4
     [V1>=0,X14=1,W14=0,V=0] 
* CE 59: start(V1,V,V14) = 1+ member(V1,V,W14):5
     [V>=1,V1>=1,W14=1] 
* CE 60: start(V1,V,V14) = 1+ member(V1,V,W14):6
     [V>=V1+1,V1>=1,W14=2] 
* CE 61: start(V1,V,V14) = 0+ fun1(W14,X14,Y14):1
     [Y14=2,X14=0,W14=0,V=0,V1=0] 
* CE 62: start(V1,V,V14) = 0+ fun1(W14,V,X14):2
     [V>=1,X14=1,W14=0,V1=0] 
* CE 63: start(V1,V,V14) = 0+ fun1(V1,W14,X14):3
     [V1>=1,X14=1,W14=0,V=0] 
* CE 64: start(V1,V,V14) = 0+ fun1(V1,V,W14):4
     [V>=0,V1>=0,W14=0] 
* CE 65: start(V1,V,V14) = 0+ fun1(V1,V,W14):5
     [V>=V1+1,V1>=1,W14=1] 
* CE 66: start(V1,V,V14) = 0+ fun1(V1,V,W14):6
     [V1>=V+1,V>=1,W14=1] 
* CE 67: start(A,A,B) = 0+ fun1(A,A,C):7
     [A>=1,C=2] 

### Cost equations --> "Loop" of start/3 
* CEs [54,67] --> Loop 26 
* CEs [50,58,63] --> Loop 27 
* CEs [40,41,42,43,44,45,46,47,51,52,55,59,60,64,65,66] --> Loop 28 
* CEs [48,49,53,56,57,61,62] --> Loop 29 

#### Loops of start/3 
* Loop 26: start(V1,V,V14) [V1>=1] 
* Loop 27: start(V1,V,V14) [V1>=0,V=0] 
* Loop 28: start(V1,V,V14) [V>=0,V1>=0] 
* Loop 29: start(V1,V,V14) [V1=0] 

### Ranking functions of CR start(V1,V,V14) 

#### Partial ranking functions of CR start(V1,V,V14) 


### Resulting Chains:start(V1,V,V14) 
* [29]
* [28]
* [27]
* [26]


### Merging Chains  start/3 into  External patterns of execution 
* [[29]] --> 1 
* [[27],[28]] --> 2 
* [[26]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [13]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [13]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [13]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [13]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of chains of fun1(V1,V,Out):
* Chain [[13],17]: 0
  with precondition: [Out=2,V1=V,V1>=1] 

* Chain [[13],16]: 0
  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[13],15]: 0
  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[13],14]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [17]: 0
  with precondition: [V1=0,V=0,Out=2] 

* Chain [16]: 0
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [15]: 0
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [19] 

 * loop 19:member(V1,V,Out) -> [member(V1',V',Out')] 
1
#### Cost of phase [19]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of loops [18] 

 * loop 18:member(V1,V,Out) -> [member(V1',V',Out')] 
1
#### Cost of phase [18]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:member(V1,V,Out) -> [member(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of chains of member(V1,V,Out):
* Chain [[19],23]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [V1=0,Out=0,V>=2] 

* Chain [[19],22]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [V1=0,Out=2,V>=2] 

* Chain [[19],21]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [V1=0,Out=1,V>=2] 

* Chain [[18],23]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [Out=0,V1>=1,V>=2] 

* Chain [[18],21]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [Out=1,V1>=1,V>=1] 

* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< -V1+V

  with precondition: [Out=2,V1>=1,V>=V1+2] 

* Chain [23]: 1
  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [22]: 1
  with precondition: [V1=0,Out=2,V>=1] 

* Chain [21]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [20]: 1
  with precondition: [Out=2,V1>=1,V>=V1+1] 


#### Cost of chains of notEmpty(V1,Out):
* Chain [25]: 1
  with precondition: [V1=0,Out=1] 

* Chain [24]: 1
  with precondition: [Out=2,V1>=1] 


#### Cost of chains of start(V1,V,V14):
* Chain [29]: 4*s(5)+2
  Such that:aux(2) =< V
s(5) =< aux(2)

  with precondition: [V1=0] 

* Chain [28]: 5*s(10)+1*s(14)+6*s(16)+2*s(18)+2
  Such that:s(14) =< -V+V14
aux(3) =< -V1+V
aux(4) =< V
aux(5) =< V14
s(18) =< aux(3)
s(16) =< aux(4)
s(10) =< aux(5)

  with precondition: [V1>=0,V>=0] 

* Chain [27]: 2
  with precondition: [V=0,V1>=0] 

* Chain [26]: 1
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V,V14): 
-------------------------------------
* Chain [29] with precondition: [V1=0] 
    - Upper bound: nat(V)*4+2 
    - Complexity: n 
* Chain [28] with precondition: [V1>=0,V>=0] 
    - Upper bound: 6*V+2+nat(V14)*5+nat(-V1+V)*2+nat(-V+V14) 
    - Complexity: n 
* Chain [27] with precondition: [V=0,V1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [26] with precondition: [V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V,V14): nat(V14)*5+nat(V)*2+nat(-V1+V)*2+nat(-V+V14)+nat(V)*4+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 30 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 75 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 62 ms.
   - Equation cost structures 30 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 215 ms.

