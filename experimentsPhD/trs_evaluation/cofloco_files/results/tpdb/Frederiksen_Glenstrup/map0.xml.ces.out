
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [times/3]
1. non_recursive  : [f/2]
2. recursive  : [fun/3]
3. recursive  : [map/2]
4. non_recursive  : [goal/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into times/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into fun/3
3. SCC is partially evaluated into map/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations times/3 
* CE 10 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 12 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations times/3 
* CE 16: times(A,B,A) = 0
     [A>=0,B=1] 
* CE 17: times(V,V5,Out) = 0
     [V5>=0,V>=0,Out=0] 
* CE 18: times(V,V5,Out) = 0
     [V5>=0,Out=0,V=0] 
* CE 19: times(V,V5,Out) = 0+ times(V,W5,X5)
     [V5>=2,V>=0,V+X5+1=Out,V5=W5+1] 

### Cost equations --> "Loop" of times/3 
* CEs [19] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [17,18] --> Loop 12 

#### Loops of times/3 
* Loop 10: times(V,V5,Out)->  times(V,V5',Out')
                  [V5>=2,V>=0,V+Out'+1=Out,V5=V5'+1] 
* Loop 11: times(A,B,A) [A>=0,B=1] 
* Loop 12: times(V,V5,Out) [V5>=0,V>=0,Out=0] 

### Ranking functions of CR times(V,V5,Out) 
* RF of phase [10]: [V5-1]

#### Partial ranking functions of CR times(V,V5,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V5-1


### Resulting Chains:times(V,V5,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  times/3 into  External patterns of execution 
* [[11]] --> 1 
* [[12]] --> 2 
* [[11,[10]],[12,[10]]] --> 3 


### Specialization of cost equations fun/3 
* CE 15 is refined into CE [20] 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 


#### Refined cost equations fun/3 
* CE 20: fun(V,V5,Out) = 0
     [V5>=0,V>=0,Out=0] 
* CE 21: fun(A,B,B) = 1
     [B>=0,A=0] 
* CE 22: fun(V,V5,Out) = 1+ fun(W5,X5,Out)
     [W5>=0,V5>=0,V5+1=X5,W5+1=V] 

### Cost equations --> "Loop" of fun/3 
* CEs [22] --> Loop 13 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 

#### Loops of fun/3 
* Loop 13: fun(V,V5,Out)->  fun(V',V5',Out)
                  [V'>=0,V5>=0,V5+1=V5',V'+1=V] 
* Loop 14: fun(V,V5,Out) [V5>=0,V>=0,Out=0] 
* Loop 15: fun(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun(V,V5,Out) 
* RF of phase [13]: [V]

#### Partial ranking functions of CR fun(V,V5,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V


### Resulting Chains:fun(V,V5,Out) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  fun/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14],[14,[13]]] --> 2 
* [[15,[13]]] --> 3 


### Specialization of cost equations map/2 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24,25,26] 


#### Refined cost equations map/2 
* CE 23: map(V,Out) = 1
     [Out=0,V=0] 
* CE 24: map(V,Out) = 2+ times(W,X,Y):1+ map(Z,A1)
     [Z>=0,A1+2=Out,Z+2=V,Y=1,X=1,W=1] 
* CE 25: map(V,Out) = 2+ times(W,W,X):2+ map(Y,Z)
     [Y>=0,W>=0,W+Y+1=V,Z+1=Out,X=0] 
* CE 26: map(V,Out) = 2+ times(W,W,X):3+ map(Y,Z)
     [X>=W+1,Y>=0,W>=2,X+Z+1=Out,W+Y+1=V] 

### Cost equations --> "Loop" of map/2 
* CEs [26] --> Loop 16 
* CEs [25] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of map/2 
* Loop 16: map(V,Out)->  map(V',Out')
                  [Out+V'>=V+Out'+1,V>=V'+3,V'>=0] 
* Loop 17: map(V,Out)->  map(V',Out')
                  [V>=V'+1,V'>=0,Out=Out'+1] 
* Loop 18: map(V,Out)->  map(V',Out')
                  [V>=2,Out=Out'+2,V=V'+2] 
* Loop 19: map(V,Out) [Out=0,V=0] 

### Ranking functions of CR map(V,Out) 
* RF of phase [16,17,18]: [V]

#### Partial ranking functions of CR map(V,Out) 
* Partial RF of phase [16,17,18]:
  - RF of loop [16:1]:
    V-2
  - RF of loop [17:1]:
    V
  - RF of loop [18:1]:
    V-1


### Resulting Chains:map(V,Out) 
* [[16,17,18],19]
* [19]


### Merging Chains  map/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[16,17,18]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [27,28] 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32,33] 
* CE 5 is refined into CE [34,35,36] 
* CE 6 is refined into CE [37,38,39] 


#### Refined cost equations start/2 
* CE 27: start(V,V5) = 0+ map(W5,X5):1
     [X5=0,W5=0,V=0] 
* CE 28: start(V,V5) = 0+ map(V,W5):2
     [W5>=1,V>=1] 
* CE 29: start(V,V5) = 1+ map(W5,X5):1
     [X5=0,W5=0,V=0] 
* CE 30: start(V,V5) = 1+ map(V,W5):2
     [W5>=1,V>=1] 
* CE 31: start(V,V5) = 1+ times(W5,X5,Y5):1
     [Y5=1,X5=1,W5=1,V=1] 
* CE 32: start(V,V5) = 1+ times(V,V,W5):2
     [V>=0,W5=0] 
* CE 33: start(V,V5) = 1+ times(V,V,W5):3
     [W5>=V+1,V>=2] 
* CE 34: start(V,V5) = 0+ fun(W5,V5,V5):1
     [V5>=0,W5=0,V=0] 
* CE 35: start(V,V5) = 0+ fun(V,V5,W5):2
     [V5>=0,V>=0,W5=0] 
* CE 36: start(V,V5) = 0+ fun(V,W5,X5):3
     [X5>=V,V>=1,X5=V+W5,X5=V+V5] 
* CE 37: start(V,V5) = 0+ times(V,W5,V):1
     [V>=0,W5=1,V5=1] 
* CE 38: start(V,V5) = 0+ times(V,V5,W5):2
     [V5>=0,V>=0,W5=0] 
* CE 39: start(V,V5) = 0+ times(V,V5,W5):3
     [W5>=V+1,V5>=2,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [37] --> Loop 20 
* CEs [31] --> Loop 21 
* CEs [27,28,29,30,32,33,34,35,36,38,39] --> Loop 22 

#### Loops of start/2 
* Loop 20: start(V,V5) [V>=0,V5=1] 
* Loop 21: start(V,V5) [V=1] 
* Loop 22: start(V,V5) [V>=0] 

### Ranking functions of CR start(V,V5) 

#### Partial ranking functions of CR start(V,V5) 


### Resulting Chains:start(V,V5) 
* [22]
* [21]
* [20]


### Merging Chains  start/2 into  External patterns of execution 
* [[21],[22]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:times(V,V5,Out) -> [times(V',V5',Out')] 
0
#### Cost of phase [10]:times(V,V5,Out) -> [times(V',V5',Out')] 
0
#### Cost of phase [10]:times(V,V5,Out) -> [times(V',V5',Out')] 
0
#### Cost of chains of times(V,V5,Out):
* Chain [[10],12]: 0
  with precondition: [V>=0,V5>=2,Out>=V+1] 

* Chain [[10],11]: 0
  with precondition: [V>=0,V5>=2,Out+1>=2*V+V5] 

* Chain [12]: 0
  with precondition: [Out=0,V>=0,V5>=0] 

* Chain [11]: 0
  with precondition: [V5=1,V=Out,V>=0] 


#### Cost of loops [13] 

 * loop 13:fun(V,V5,Out) -> [fun(V',V5',Out')] 
1
#### Cost of phase [13]:fun(V,V5,Out) -> [fun(V',V5',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of phase [13]:fun(V,V5,Out) -> [fun(V',V5',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of chains of fun(V,V5,Out):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -V5+Out

  with precondition: [V+V5=Out,V>=1,V5>=0] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V

  with precondition: [Out=0,V>=1,V5>=0] 

* Chain [15]: 1
  with precondition: [V=0,V5=Out,V5>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V>=0,V5>=0] 


#### Cost of loops [16,17,18] 

 * loop 16:map(V,Out) -> [map(V',Out')] 
2
 * loop 17:map(V,Out) -> [map(V',Out')] 
2
 * loop 18:map(V,Out) -> [map(V',Out')] 
2
#### Cost of phase [16,17,18]:map(V,Out) -> [map(V',Out')] 
6*it(16)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(16) =< aux(1)
it(16) =< aux(2)

#### Cost of chains of map(V,Out):
* Chain [[16,17,18],19]: 6*it(16)+1
  Such that:aux(3) =< V
it(16) =< aux(3)

  with precondition: [V>=1,Out>=1] 

* Chain [19]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of start(V,V5):
* Chain [22]: 14*s(3)+2
  Such that:aux(4) =< V
s(3) =< aux(4)

  with precondition: [V>=0] 

* Chain [21]: 1
  with precondition: [V=1] 

* Chain [20]: 0
  with precondition: [V5=1,V>=0] 


Closed-form bounds of start(V,V5): 
-------------------------------------
* Chain [22] with precondition: [V>=0] 
    - Upper bound: 14*V+2 
    - Complexity: n 
* Chain [21] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V5=1,V>=0] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of start(V,V5): 14*V+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 39 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 130 ms.

