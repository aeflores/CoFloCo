
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [and/3]
1. non_recursive  : [atom/2]
2. recursive  : [fun2/3]
3. non_recursive  : [eqAlph/3]
4. recursive  : [fun1/4,member/3]
5. non_recursive  : [fun4/3]
6. non_recursive  : [head/2]
7. non_recursive  : [fun/3]
8. non_recursive  : [fun3/3]
9. recursive [non_tail] : [expr/2,factor/2,term/2]
10. non_recursive  : [notEmpty/2]
11. non_recursive  : [parsexp/2]
12. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into atom/2
2. SCC is partially evaluated into fun2/3
3. SCC is partially evaluated into eqAlph/3
4. SCC is partially evaluated into member/3
5. SCC is partially evaluated into fun4/3
6. SCC is partially evaluated into head/2
7. SCC is partially evaluated into fun/3
8. SCC is partially evaluated into fun3/3
9. SCC is partially evaluated into expr/2
10. SCC is partially evaluated into notEmpty/2
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 88 is refined into CE [96] 
* CE 87 is refined into CE [97] 
* CE 85 is refined into CE [98] 
* CE 86 is refined into CE [99] 
* CE 84 is refined into CE [100] 


#### Refined cost equations and/3 
* CE 96: and(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 
* CE 97: and(V,V12,Out) = 0
     [Out=2,V12=2,V=2] 
* CE 98: and(V,V12,Out) = 0
     [Out=1,V12=1,V=2] 
* CE 99: and(V,V12,Out) = 0
     [Out=1,V12=2,V=1] 
* CE 100: and(V,V12,Out) = 0
     [Out=1,V12=1,V=1] 

### Cost equations --> "Loop" of and/3 
* CEs [96] --> Loop 62 
* CEs [97] --> Loop 63 
* CEs [98] --> Loop 64 
* CEs [99] --> Loop 65 
* CEs [100] --> Loop 66 

#### Loops of and/3 
* Loop 62: and(V,V12,Out) [V12>=0,V>=0,Out=0] 
* Loop 63: and(V,V12,Out) [Out=2,V12=2,V=2] 
* Loop 64: and(V,V12,Out) [Out=1,V12=1,V=2] 
* Loop 65: and(V,V12,Out) [Out=1,V12=2,V=1] 
* Loop 66: and(V,V12,Out) [Out=1,V12=1,V=1] 

### Ranking functions of CR and(V,V12,Out) 

#### Partial ranking functions of CR and(V,V12,Out) 


### Resulting Chains:and(V,V12,Out) 
* [66]
* [65]
* [64]
* [63]
* [62]


### Merging Chains  and/3 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[63]] --> 4 
* [[62]] --> 5 


### Specialization of cost equations atom/2 
* CE 39 is refined into CE [101] 
* CE 40 is refined into CE [102] 
* CE 41 is refined into CE [103] 


#### Refined cost equations atom/2 
* CE 101: atom(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 102: atom(V,Out) = 1
     [Out=0,V=0] 
* CE 103: atom(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of atom/2 
* CEs [101] --> Loop 67 
* CEs [102,103] --> Loop 68 

#### Loops of atom/2 
* Loop 67: atom(V,Out) [V>=Out+1,Out>=0] 
* Loop 68: atom(V,Out) [V>=0,Out=0] 

### Ranking functions of CR atom(V,Out) 

#### Partial ranking functions of CR atom(V,Out) 


### Resulting Chains:atom(V,Out) 
* [68]
* [67]


### Merging Chains  atom/2 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 


### Specialization of cost equations fun2/3 
* CE 93 is refined into CE [104] 
* CE 91 is refined into CE [105] 
* CE 90 is refined into CE [106] 
* CE 92 is refined into CE [107] 
* CE 89 is refined into CE [108] 


#### Refined cost equations fun2/3 
* CE 104: fun2(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 
* CE 105: fun2(V,V12,Out) = 0
     [V>=1,Out=1,V12=0] 
* CE 106: fun2(V,V12,Out) = 0
     [V12>=1,Out=1,V=0] 
* CE 107: fun2(V,V12,Out) = 0
     [Out=2,V12=0,V=0] 
* CE 108: fun2(V,V12,Out) = 0+ fun2(W12,X12,Out)
     [X12>=0,W12>=0,X12+1=V12,W12+1=V] 

### Cost equations --> "Loop" of fun2/3 
* CEs [108] --> Loop 69 
* CEs [104] --> Loop 70 
* CEs [105] --> Loop 71 
* CEs [106] --> Loop 72 
* CEs [107] --> Loop 73 

#### Loops of fun2/3 
* Loop 69: fun2(V,V12,Out)->  fun2(V',V12',Out)
                  [V12'>=0,V'>=0,V12'+1=V12,V'+1=V] 
* Loop 70: fun2(V,V12,Out) [V12>=0,V>=0,Out=0] 
* Loop 71: fun2(V,V12,Out) [V>=1,Out=1,V12=0] 
* Loop 72: fun2(V,V12,Out) [V12>=1,Out=1,V=0] 
* Loop 73: fun2(V,V12,Out) [Out=2,V12=0,V=0] 

### Ranking functions of CR fun2(V,V12,Out) 
* RF of phase [69]: [V,V12]

#### Partial ranking functions of CR fun2(V,V12,Out) 
* Partial RF of phase [69]:
  - RF of loop [69:1]:
    V
    V12


### Resulting Chains:fun2(V,V12,Out) 
* [[69],73]
* [[69],72]
* [[69],71]
* [[69],70]
* [73]
* [72]
* [71]
* [70]


### Merging Chains  fun2/3 into  External patterns of execution 
* [[73]] --> 1 
* [[72]] --> 2 
* [[71]] --> 3 
* [[70],[70,[69]]] --> 4 
* [[72,[69]]] --> 5 
* [[71,[69]]] --> 6 
* [[73,[69]]] --> 7 


### Specialization of cost equations eqAlph/3 
* CE 80 is refined into CE [109] 
* CE 78 is refined into CE [110] 
* CE 61 is refined into CE [111] 
* CE 43 is refined into CE [112] 
* CE 42 is refined into CE [113] 
* CE 70 is refined into CE [114] 
* CE 69 is refined into CE [115] 
* CE 47 is refined into CE [116] 
* CE 71 is refined into CE [117] 
* CE 66 is refined into CE [118] 
* CE 67 is refined into CE [119] 
* CE 68 is refined into CE [120] 
* CE 64 is refined into CE [121] 
* CE 63 is refined into CE [122] 
* CE 60 is refined into CE [123] 
* CE 65 is refined into CE [124] 
* CE 62 is refined into CE [125] 
* CE 76 is refined into CE [126] 
* CE 75 is refined into CE [127] 
* CE 77 is refined into CE [128] 
* CE 72 is refined into CE [129] 
* CE 73 is refined into CE [130] 
* CE 74 is refined into CE [131] 
* CE 46 is refined into CE [132] 
* CE 52 is refined into CE [133] 
* CE 45 is refined into CE [134] 
* CE 51 is refined into CE [135] 
* CE 48 is refined into CE [136] 
* CE 53 is refined into CE [137] 
* CE 49 is refined into CE [138] 
* CE 79 is refined into CE [139,140,141,142,143,144,145] 
* CE 44 is refined into CE [146] 
* CE 50 is refined into CE [147] 
* CE 58 is refined into CE [148] 
* CE 57 is refined into CE [149] 
* CE 59 is refined into CE [150] 
* CE 54 is refined into CE [151] 
* CE 55 is refined into CE [152] 
* CE 56 is refined into CE [153] 


#### Refined cost equations eqAlph/3 
* CE 109: eqAlph(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 
* CE 110: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=5] 
* CE 111: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=1] 
* CE 112: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=5] 
* CE 113: eqAlph(V,V12,Out) = 1
     [Out=2,V12=5,V=5] 
* CE 114: eqAlph(V,V12,Out) = 1
     [Out=2,V12=4,V=4] 
* CE 115: eqAlph(V,V12,Out) = 1
     [Out=1,V12=3,V=4] 
* CE 116: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=2] 
* CE 117: eqAlph(V,V12,Out) = 1
     [Out=1,V12=2,V=4] 
* CE 118: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=4] 
* CE 119: eqAlph(V,V12,Out) = 1
     [Out=1,V12=1,V=4] 
* CE 120: eqAlph(V,V12,Out) = 1
     [Out=1,V12=0,V=4] 
* CE 121: eqAlph(V,V12,Out) = 1
     [Out=1,V12=4,V=3] 
* CE 122: eqAlph(V,V12,Out) = 1
     [Out=2,V12=3,V=3] 
* CE 123: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=3] 
* CE 124: eqAlph(V,V12,Out) = 1
     [Out=1,V12=2,V=3] 
* CE 125: eqAlph(V,V12,Out) = 1
     [Out=1,V12=0,V=3] 
* CE 126: eqAlph(V,V12,Out) = 1
     [Out=1,V12=4,V=2] 
* CE 127: eqAlph(V,V12,Out) = 1
     [Out=1,V12=3,V=2] 
* CE 128: eqAlph(V,V12,Out) = 1
     [Out=2,V12=2,V=2] 
* CE 129: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=2] 
* CE 130: eqAlph(V,V12,Out) = 1
     [Out=1,V12=1,V=2] 
* CE 131: eqAlph(V,V12,Out) = 1
     [Out=1,V12=0,V=2] 
* CE 132: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=4] 
* CE 133: eqAlph(V,V12,Out) = 1
     [Out=1,V12=4,V=1] 
* CE 134: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=3] 
* CE 135: eqAlph(V,V12,Out) = 1
     [Out=1,V12=3,V=1] 
* CE 136: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=1] 
* CE 137: eqAlph(V,V12,Out) = 1
     [Out=1,V12=2,V=1] 
* CE 138: eqAlph(V,V12,Out) = 1
     [Out=2,V12=1,V=1] 
* CE 139: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):1
     [Y12=2,X12=0,W12=0,Out=2,V12=1,V=1] 
* CE 140: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):2
     [X12>=1,X12+1=V,Y12=1,W12=0,Out=1,V12=1] 
* CE 141: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):3
     [W12>=1,W12+1=V12,Y12=1,X12=0,Out=1,V=1] 
* CE 142: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):4
     [X12>=0,W12>=0,W12+1=V12,X12+1=V,Y12=0,Out=0] 
* CE 143: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):5
     [X12>=W12+1,W12>=1,W12+1=V12,X12+1=V,Y12=1,Out=1] 
* CE 144: eqAlph(V,V12,Out) = 1+ fun2(W12,X12,Y12):6
     [W12>=X12+1,X12>=1,W12+1=V12,X12+1=V,Y12=1,Out=1] 
* CE 145: eqAlph(V,V12,Out) = 1+ fun2(W12,W12,X12):7
     [W12>=1,W12+1=V12,W12+1=V,X12=2,Out=2] 
* CE 146: eqAlph(V,V12,Out) = 1
     [V>=1,Out=1,V12=0] 
* CE 147: eqAlph(V,V12,Out) = 1
     [Out=1,V12=0,V=1] 
* CE 148: eqAlph(V,V12,Out) = 1
     [Out=1,V12=4,V=0] 
* CE 149: eqAlph(V,V12,Out) = 1
     [Out=1,V12=3,V=0] 
* CE 150: eqAlph(V,V12,Out) = 1
     [Out=1,V12=2,V=0] 
* CE 151: eqAlph(V,V12,Out) = 1
     [V12>=1,Out=1,V=0] 
* CE 152: eqAlph(V,V12,Out) = 1
     [Out=1,V12=1,V=0] 
* CE 153: eqAlph(V,V12,Out) = 1
     [Out=2,V12=0,V=0] 

### Cost equations --> "Loop" of eqAlph/3 
* CEs [109,142] --> Loop 74 
* CEs [110] --> Loop 75 
* CEs [111,140] --> Loop 76 
* CEs [112] --> Loop 77 
* CEs [113] --> Loop 78 
* CEs [114] --> Loop 79 
* CEs [115,143] --> Loop 80 
* CEs [116,117] --> Loop 81 
* CEs [118,119] --> Loop 82 
* CEs [120] --> Loop 83 
* CEs [121] --> Loop 84 
* CEs [122] --> Loop 85 
* CEs [123,124] --> Loop 86 
* CEs [125] --> Loop 87 
* CEs [126] --> Loop 88 
* CEs [127,144] --> Loop 89 
* CEs [128,145] --> Loop 90 
* CEs [129,130] --> Loop 91 
* CEs [131] --> Loop 92 
* CEs [132,133] --> Loop 93 
* CEs [134,135] --> Loop 94 
* CEs [136,137,141] --> Loop 95 
* CEs [138,139] --> Loop 96 
* CEs [146,147] --> Loop 97 
* CEs [148] --> Loop 98 
* CEs [149] --> Loop 99 
* CEs [150] --> Loop 100 
* CEs [151,152] --> Loop 101 
* CEs [153] --> Loop 102 

#### Loops of eqAlph/3 
* Loop 74: eqAlph(V,V12,Out) [V12>=0,V>=0,Out=0] 
* Loop 75: eqAlph(V,V12,Out) [V>=1,Out=1,V12=5] 
* Loop 76: eqAlph(V,V12,Out) [V>=1,Out=1,V12=1] 
* Loop 77: eqAlph(V,V12,Out) [V12>=1,Out=1,V=5] 
* Loop 78: eqAlph(V,V12,Out) [Out=2,V12=5,V=5] 
* Loop 79: eqAlph(V,V12,Out) [Out=2,V12=4,V=4] 
* Loop 80: eqAlph(V,V12,Out) [V>=V12+1,V12>=2,Out=1] 
* Loop 81: eqAlph(V,V12,Out) [V>=1,Out=1,V12=2] 
* Loop 82: eqAlph(V,V12,Out) [V12>=1,Out=1,V=4] 
* Loop 83: eqAlph(V,V12,Out) [Out=1,V12=0,V=4] 
* Loop 84: eqAlph(V,V12,Out) [Out=1,V12=4,V=3] 
* Loop 85: eqAlph(V,V12,Out) [Out=2,V12=3,V=3] 
* Loop 86: eqAlph(V,V12,Out) [V12>=1,Out=1,V=3] 
* Loop 87: eqAlph(V,V12,Out) [Out=1,V12=0,V=3] 
* Loop 88: eqAlph(V,V12,Out) [Out=1,V12=4,V=2] 
* Loop 89: eqAlph(V,V12,Out) [V12>=V+1,V>=2,Out=1] 
* Loop 90: eqAlph(A,A,B) [A>=2,B=2] 
* Loop 91: eqAlph(V,V12,Out) [V12>=1,Out=1,V=2] 
* Loop 92: eqAlph(V,V12,Out) [Out=1,V12=0,V=2] 
* Loop 93: eqAlph(V,V12,Out) [V>=1,Out=1,V12=4] 
* Loop 94: eqAlph(V,V12,Out) [V>=1,Out=1,V12=3] 
* Loop 95: eqAlph(V,V12,Out) [V12>=1,Out=1,V=1] 
* Loop 96: eqAlph(V,V12,Out) [Out=2,V12=1,V=1] 
* Loop 97: eqAlph(V,V12,Out) [V>=1,Out=1,V12=0] 
* Loop 98: eqAlph(V,V12,Out) [Out=1,V12=4,V=0] 
* Loop 99: eqAlph(V,V12,Out) [Out=1,V12=3,V=0] 
* Loop 100: eqAlph(V,V12,Out) [Out=1,V12=2,V=0] 
* Loop 101: eqAlph(V,V12,Out) [V12>=1,Out=1,V=0] 
* Loop 102: eqAlph(V,V12,Out) [Out=2,V12=0,V=0] 

### Ranking functions of CR eqAlph(V,V12,Out) 

#### Partial ranking functions of CR eqAlph(V,V12,Out) 


### Resulting Chains:eqAlph(V,V12,Out) 
* [102]
* [101]
* [100]
* [99]
* [98]
* [97]
* [96]
* [95]
* [94]
* [93]
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]
* [74]


### Merging Chains  eqAlph/3 into  External patterns of execution 
* [[102]] --> 1 
* [[100],[101]] --> 2 
* [[99]] --> 3 
* [[98]] --> 4 
* [[96]] --> 5 
* [[95]] --> 6 
* [[92],[97]] --> 7 
* [[88],[91]] --> 8 
* [[87]] --> 9 
* [[85],[90]] --> 10 
* [[84],[86]] --> 11 
* [[83]] --> 12 
* [[79]] --> 13 
* [[82]] --> 14 
* [[78]] --> 15 
* [[77]] --> 16 
* [[76]] --> 17 
* [[81]] --> 18 
* [[94]] --> 19 
* [[93]] --> 20 
* [[75]] --> 21 
* [[74]] --> 22 
* [[89]] --> 23 
* [[80]] --> 24 


### Specialization of cost equations member/3 
* CE 33 is refined into CE [154,155,156,157,158] 
* CE 32 is refined into CE [159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182] 
* CE 36 is refined into CE [183] 
* CE 35 is refined into CE [184] 
* CE 34 is refined into CE [185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202] 


#### Refined cost equations member/3 
* CE 154: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):1
     [V12>=1,Y12=2,X12=0,W12=0,Out=2,V=0] 
* CE 155: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):5
     [V12>=2,Y12=2,X12=1,W12=1,Out=2,V=1] 
* CE 156: member(V,V12,Out) = 1+ eqAlph(V,V,W12):10
     [V12>=V+1,V>=2,W12=2,Out=2] 
* CE 157: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):13
     [V12>=5,Y12=2,X12=4,W12=4,Out=2,V=4] 
* CE 158: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):15
     [V12>=6,Y12=2,X12=5,W12=5,Out=2,V=5] 
* CE 159: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):1
     [V12>=1,Y12=2,X12=0,W12=0,Out=0,V=0] 
* CE 160: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):2
     [V>=1,V12>=1,X12=1,W12=0,Out=0] 
* CE 161: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):3
     [V12>=1,Y12=1,X12=3,W12=0,Out=0,V=3] 
* CE 162: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):4
     [V12>=1,Y12=1,X12=4,W12=0,Out=0,V=4] 
* CE 163: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):5
     [V12>=2,Y12=2,X12=1,W12=1,Out=0,V=1] 
* CE 164: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):6
     [V>=1,V12>=2,X12=1,W12=1,Out=0] 
* CE 165: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):7
     [V12>=W12+1,W12>=1,Y12=1,X12=0,Out=0,V=0] 
* CE 166: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):8
     [V>=1,V12>=3,X12=1,W12=2,Out=0] 
* CE 167: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):9
     [V12>=4,Y12=1,X12=0,W12=3,Out=0,V=0] 
* CE 168: member(V,V12,Out) = 1+ eqAlph(V,V,W12):10
     [V12>=V+1,V>=2,W12=2,Out=0] 
* CE 169: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):11
     [V>=1,V12>=4,X12=1,W12=3,Out=0] 
* CE 170: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):12
     [V12>=5,Y12=1,X12=0,W12=4,Out=0,V=0] 
* CE 171: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):13
     [V12>=5,Y12=2,X12=4,W12=4,Out=0,V=4] 
* CE 172: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):14
     [V>=1,V12>=5,X12=1,W12=4,Out=0] 
* CE 173: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):15
     [V12>=6,Y12=2,X12=5,W12=5,Out=0,V=5] 
* CE 174: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):16
     [V>=1,V12>=6,X12=1,W12=5,Out=0] 
* CE 175: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):17
     [V12>=W12+1,W12>=1,Y12=1,X12=1,Out=0,V=1] 
* CE 176: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):18
     [V12>=W12+1,W12>=1,Y12=1,X12=2,Out=0,V=2] 
* CE 177: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):19
     [V12>=W12+1,W12>=1,Y12=1,X12=3,Out=0,V=3] 
* CE 178: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):20
     [V12>=W12+1,W12>=1,Y12=1,X12=4,Out=0,V=4] 
* CE 179: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):21
     [V12>=W12+1,W12>=1,Y12=1,X12=5,Out=0,V=5] 
* CE 180: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):22
     [V12>=W12+1,V>=0,W12>=0,X12=0,Out=0] 
* CE 181: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):23
     [V>=W12+1,V12>=W12+1,W12>=2,X12=1,Out=0] 
* CE 182: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):24
     [W12>=V+1,V12>=W12+1,V>=2,X12=1,Out=0] 
* CE 183: member(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 
* CE 184: member(V,V12,Out) = 1
     [V>=0,Out=1,V12=0] 
* CE 185: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):2+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,X12=1,W12=0] 
* CE 186: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):3+ member(Z12,A13,Out)
     [V12>=A13+1,A13>=0,Z12=3,Y12=1,X12=3,W12=0,V=3] 
* CE 187: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):4+ member(Z12,A13,Out)
     [V12>=A13+1,A13>=0,Z12=4,Y12=1,X12=4,W12=0,V=4] 
* CE 188: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):6+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,V12>=2,X12=1,W12=1] 
* CE 189: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):7+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=0,Y12=1,X12=0,V=0] 
* CE 190: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):8+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,V12>=3,X12=1,W12=2] 
* CE 191: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):9+ member(Z12,A13,Out)
     [V12>=A13+1,A13>=0,V12>=4,Z12=0,Y12=1,X12=0,W12=3,V=0] 
* CE 192: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):11+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,V12>=4,X12=1,W12=3] 
* CE 193: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):12+ member(Z12,A13,Out)
     [V12>=A13+1,A13>=0,V12>=5,Z12=0,Y12=1,X12=0,W12=4,V=0] 
* CE 194: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):14+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,V12>=5,X12=1,W12=4] 
* CE 195: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):16+ member(V,Y12,Out)
     [V12>=Y12+1,Y12>=0,V>=1,V12>=6,X12=1,W12=5] 
* CE 196: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):17+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=1,Y12=1,X12=1,V=1] 
* CE 197: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):18+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=2,Y12=1,X12=2,V=2] 
* CE 198: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):19+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=3,Y12=1,X12=3,V=3] 
* CE 199: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):20+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=4,Y12=1,X12=4,V=4] 
* CE 200: member(V,V12,Out) = 1+ eqAlph(W12,X12,Y12):21+ member(Z12,A13,Out)
     [V12>=A13+1,V12>=W12+1,A13>=0,W12>=1,Z12=5,Y12=1,X12=5,V=5] 
* CE 201: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):23+ member(V,Y12,Out)
     [V12>=Y12+1,V>=W12+1,V12>=W12+1,Y12>=0,W12>=2,X12=1] 
* CE 202: member(V,V12,Out) = 1+ eqAlph(W12,V,X12):24+ member(V,Y12,Out)
     [V12>=Y12+1,W12>=V+1,V12>=W12+1,Y12>=0,V>=2,X12=1] 

### Cost equations --> "Loop" of member/3 
* CEs [200] --> Loop 103 
* CEs [187,199] --> Loop 104 
* CEs [186,198] --> Loop 105 
* CEs [197] --> Loop 106 
* CEs [185,188,190,192,194,195,196,201,202] --> Loop 107 
* CEs [189,191,193] --> Loop 108 
* CEs [184] --> Loop 109 
* CEs [158] --> Loop 110 
* CEs [173,179] --> Loop 111 
* CEs [156,157] --> Loop 112 
* CEs [162,171,178] --> Loop 113 
* CEs [161,177] --> Loop 114 
* CEs [176] --> Loop 115 
* CEs [155] --> Loop 116 
* CEs [163,175] --> Loop 117 
* CEs [154] --> Loop 118 
* CEs [159,160,164,165,166,167,168,169,170,172,174,180,181,182,183] --> Loop 119 

#### Loops of member/3 
* Loop 103: member(V,V12,Out)->  member(V',V12',Out)
                  [V12>=V12'+1,V12'>=0,V12>=2,V'=5,V=5] 
* Loop 104: member(V,V12,Out)->  member(V',V12',Out)
                  [V12>=V12'+1,V12'>=0,V'=4,V=4] 
* Loop 105: member(V,V12,Out)->  member(V',V12',Out)
                  [V12>=V12'+1,V12'>=0,V'=3,V=3] 
* Loop 106: member(V,V12,Out)->  member(V',V12',Out)
                  [V12>=V12'+1,V12'>=0,V12>=2,V'=2,V=2] 
* Loop 107: member(V,V12,Out)->  member(V,V12',Out)
                  [V12>=V12'+1,V12'>=0,V>=1] 
* Loop 108: member(V,V12,Out)->  member(V',V12',Out)
                  [V12>=V12'+1,V12'>=0,V12>=2,V'=0,V=0] 
* Loop 109: member(V,V12,Out) [V>=0,Out=1,V12=0] 
* Loop 110: member(V,V12,Out) [V12>=6,Out=2,V=5] 
* Loop 111: member(V,V12,Out) [V12>=2,Out=0,V=5] 
* Loop 112: member(V,V12,Out) [V12>=V+1,V>=2,Out=2] 
* Loop 113: member(V,V12,Out) [V12>=1,Out=0,V=4] 
* Loop 114: member(V,V12,Out) [V12>=1,Out=0,V=3] 
* Loop 115: member(V,V12,Out) [V12>=2,Out=0,V=2] 
* Loop 116: member(V,V12,Out) [V12>=2,Out=2,V=1] 
* Loop 117: member(V,V12,Out) [V12>=2,Out=0,V=1] 
* Loop 118: member(V,V12,Out) [V12>=1,Out=2,V=0] 
* Loop 119: member(V,V12,Out) [V12>=0,V>=0,Out=0] 

### Ranking functions of CR member(V,V12,Out) 
* RF of phase [103,104,105,106,107]: [V12]
* RF of phase [108]: [V12-1]

#### Partial ranking functions of CR member(V,V12,Out) 
* Partial RF of phase [103,104,105,106,107]:
  - RF of loop [103:1,106:1]:
    V12-1
  - RF of loop [104:1,105:1,107:1]:
    V12
* Partial RF of phase [108]:
  - RF of loop [108:1]:
    V12-1


### Resulting Chains:member(V,V12,Out) 
* [[108],119]
* [[108],118]
* [[108],109]
* [[103,104,105,106,107],119]
* [[103,104,105,106,107],117]
* [[103,104,105,106,107],116]
* [[103,104,105,106,107],115]
* [[103,104,105,106,107],114]
* [[103,104,105,106,107],113]
* [[103,104,105,106,107],112]
* [[103,104,105,106,107],111]
* [[103,104,105,106,107],110]
* [[103,104,105,106,107],109]
* [119]
* [118]
* [117]
* [116]
* [115]
* [114]
* [113]
* [112]
* [111]
* [110]
* [109]


### Merging Chains  member/3 into  External patterns of execution 
* [[119],[119,[103,104,105,106,107]],[119,[108]]] --> 1 
* [[109,[108]]] --> 2 
* [[118],[118,[108]]] --> 3 
* [[117],[117,[103,104,105,106,107]]] --> 4 
* [[116],[116,[103,104,105,106,107]]] --> 5 
* [[115],[115,[103,104,105,106,107]]] --> 6 
* [[114],[114,[103,104,105,106,107]]] --> 7 
* [[113],[113,[103,104,105,106,107]]] --> 8 
* [[111],[111,[103,104,105,106,107]]] --> 9 
* [[110],[112],[110,[103,104,105,106,107]],[112,[103,104,105,106,107]]] --> 10 
* [[109]] --> 11 
* [[109,[103,104,105,106,107]]] --> 12 


### Specialization of cost equations fun4/3 
* CE 94 is refined into CE [203,204,205,206,207,208,209,210,211,212,213] 
* CE 95 is refined into CE [214] 


#### Refined cost equations fun4/3 
* CE 203: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):1
     [V12>=W12+1,Out>=V12+1,W12>=0,Out=V+V12+1,Y12=0,X12=8] 
* CE 204: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):2
     [Out>=V12+2,V12>=1,Out=V+V12+2,Y12=1,X12=8,W12=0] 
* CE 205: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):3
     [Out>=V12+3,V12>=1,Out=V+V12+3,Y12=2,X12=8,W12=0] 
* CE 206: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):4
     [Out>=V12+1,V12>=2,Out=V+V12+1,Y12=0,X12=8,W12=1] 
* CE 207: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):5
     [Out>=V12+3,V12>=2,Out=V+V12+3,Y12=2,X12=8,W12=1] 
* CE 208: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):6
     [Out>=V12+1,V12>=3,Out=V+V12+1,Y12=0,X12=8,W12=2] 
* CE 209: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):7
     [Out>=V12+1,V12>=4,Out=V+V12+1,Y12=0,X12=8,W12=3] 
* CE 210: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):8
     [Out>=V12+1,V12>=5,Out=V+V12+1,Y12=0,X12=8,W12=4] 
* CE 211: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):9
     [Out>=V12+1,V12>=6,Out=V+V12+1,Y12=0,X12=8,W12=5] 
* CE 212: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):10
     [V12>=W12+1,Out>=V12+3,W12>=2,7>=W12,Out=V+V12+3,Y12=2,X12=8] 
* CE 213: fun4(V,V12,Out) = 0+ member(W12,X12,Y12):12
     [V12>=W12+1,Out>=V12+2,W12>=1,Out=V+V12+2,Y12=1,X12=8] 
* CE 214: fun4(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of fun4/3 
* CEs [203,206,208,209,210,211] --> Loop 120 
* CEs [204,213] --> Loop 121 
* CEs [205,207,212] --> Loop 122 
* CEs [214] --> Loop 123 

#### Loops of fun4/3 
* Loop 120: fun4(V,V12,Out) [V12>=1,V>=0,V+V12+1=Out] 
* Loop 121: fun4(V,V12,Out) [V12>=1,V>=0,V+V12+2=Out] 
* Loop 122: fun4(V,V12,Out) [V12>=1,V>=0,V+V12+3=Out] 
* Loop 123: fun4(V,V12,Out) [V12>=0,V>=0,Out=0] 

### Ranking functions of CR fun4(V,V12,Out) 

#### Partial ranking functions of CR fun4(V,V12,Out) 


### Resulting Chains:fun4(V,V12,Out) 
* [123]
* [122]
* [121]
* [120]


### Merging Chains  fun4/3 into  External patterns of execution 
* [[123]] --> 1 
* [[122]] --> 2 
* [[121]] --> 3 
* [[120]] --> 4 


### Specialization of cost equations head/2 
* CE 37 is refined into CE [215] 
* CE 38 is refined into CE [216] 


#### Refined cost equations head/2 
* CE 215: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 216: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [215] --> Loop 124 
* CEs [216] --> Loop 125 

#### Loops of head/2 
* Loop 124: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 125: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [125]
* [124]


### Merging Chains  head/2 into  External patterns of execution 
* [[125]] --> 1 
* [[124]] --> 2 


### Specialization of cost equations fun/3 
* CE 29 is refined into CE [217] 
* CE 28 is refined into CE [218] 
* CE 31 is refined into CE [219] 
* CE 30 is refined into CE [220,221,222] 


#### Refined cost equations fun/3 
* CE 217: fun(V,V12,Out) = 0
     [Out>=V12+2,V12>=1,Out=V+V12+2] 
* CE 218: fun(V,V12,Out) = 0
     [Out>=V12+3,V12>=6,Out=V+V12+3] 
* CE 219: fun(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 
* CE 220: fun(V,V12,Out) = 0+ head(W12,X12):1+ eqAlph(Y12,Z12,A13):2+ and(B13,C13,D13):1
     [V>=0,V+2=Out,D13=1,C13=1,B13=1,A13=1,Z12=5,Y12=0,X12=0,W12=0,V12=0] 
* CE 221: fun(V,V12,Out) = 0+ head(W12,X12):1+ eqAlph(Y12,Z12,A13):2+ and(B13,C13,D13):5
     [V>=0,V+1=Out,D13=0,C13=1,B13=1,A13=1,Z12=5,Y12=0,X12=0,W12=0,V12=0] 
* CE 222: fun(V,V12,Out) = 0+ head(W12,X12):1+ eqAlph(Y12,Z12,A13):22+ and(B13,C13,D13):5
     [V>=0,V+1=Out,D13=0,C13=0,B13=1,A13=0,Z12=5,Y12=0,X12=0,W12=0,V12=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [217] --> Loop 126 
* CEs [218] --> Loop 127 
* CEs [219] --> Loop 128 
* CEs [221,222] --> Loop 129 
* CEs [220] --> Loop 130 

#### Loops of fun/3 
* Loop 126: fun(V,V12,Out) [V12>=1,V>=0,V+V12+2=Out] 
* Loop 127: fun(V,V12,Out) [V12>=6,V>=0,V+V12+3=Out] 
* Loop 128: fun(V,V12,Out) [V12>=0,V>=0,Out=0] 
* Loop 129: fun(V,V12,Out) [V>=0,V+1=Out,V12=0] 
* Loop 130: fun(V,V12,Out) [V>=0,V+2=Out,V12=0] 

### Ranking functions of CR fun(V,V12,Out) 

#### Partial ranking functions of CR fun(V,V12,Out) 


### Resulting Chains:fun(V,V12,Out) 
* [130]
* [129]
* [128]
* [127]
* [126]


### Merging Chains  fun/3 into  External patterns of execution 
* [[130]] --> 1 
* [[129]] --> 2 
* [[128]] --> 3 
* [[127]] --> 4 
* [[126]] --> 5 


### Specialization of cost equations fun3/3 
* CE 22 is refined into CE [223,224,225,226,227,228,229,230,231,232,233] 
* CE 23 is refined into CE [234] 


#### Refined cost equations fun3/3 
* CE 223: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):1
     [V12>=W12+1,Out>=V12+1,W12>=0,Out=V+V12+1,Y12=0,X12=5] 
* CE 224: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):2
     [Out>=V12+2,V12>=1,Out=V+V12+2,Y12=1,X12=5,W12=0] 
* CE 225: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):3
     [Out>=V12+3,V12>=1,Out=V+V12+3,Y12=2,X12=5,W12=0] 
* CE 226: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):4
     [Out>=V12+1,V12>=2,Out=V+V12+1,Y12=0,X12=5,W12=1] 
* CE 227: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):5
     [Out>=V12+3,V12>=2,Out=V+V12+3,Y12=2,X12=5,W12=1] 
* CE 228: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):6
     [Out>=V12+1,V12>=3,Out=V+V12+1,Y12=0,X12=5,W12=2] 
* CE 229: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):7
     [Out>=V12+1,V12>=4,Out=V+V12+1,Y12=0,X12=5,W12=3] 
* CE 230: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):8
     [Out>=V12+1,V12>=5,Out=V+V12+1,Y12=0,X12=5,W12=4] 
* CE 231: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):9
     [Out>=V12+1,V12>=6,Out=V+V12+1,Y12=0,X12=5,W12=5] 
* CE 232: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):10
     [V12>=W12+1,Out>=V12+3,W12>=2,4>=W12,Out=V+V12+3,Y12=2,X12=5] 
* CE 233: fun3(V,V12,Out) = 0+ member(W12,X12,Y12):12
     [V12>=W12+1,Out>=V12+2,W12>=1,Out=V+V12+2,Y12=1,X12=5] 
* CE 234: fun3(V,V12,Out) = 0
     [V12>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of fun3/3 
* CEs [223,226,228,229,230,231] --> Loop 131 
* CEs [224,233] --> Loop 132 
* CEs [225,227,232] --> Loop 133 
* CEs [234] --> Loop 134 

#### Loops of fun3/3 
* Loop 131: fun3(V,V12,Out) [V12>=1,V>=0,V+V12+1=Out] 
* Loop 132: fun3(V,V12,Out) [V12>=1,V>=0,V+V12+2=Out] 
* Loop 133: fun3(V,V12,Out) [V12>=1,V>=0,V+V12+3=Out] 
* Loop 134: fun3(V,V12,Out) [V12>=0,V>=0,Out=0] 

### Ranking functions of CR fun3(V,V12,Out) 

#### Partial ranking functions of CR fun3(V,V12,Out) 


### Resulting Chains:fun3(V,V12,Out) 
* [134]
* [133]
* [132]
* [131]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[134]] --> 1 
* [[133]] --> 2 
* [[132]] --> 3 
* [[131]] --> 4 


### Specialization of cost equations expr/2 
* CE 24 is refined into CE [235] 
* CE 26 is refined into CE [236,237,238,239,240,241,242,243,244,245,246,247,248] 
* CE 27 is refined into CE [249,250,251,252,253,254,255,256,257,258,259,260,261] 
* CE 25 is refined into CE [262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314] 


#### Refined cost equations expr/2 
* CE 235: expr(V,Out) = 2+ fun3(V,W,X):1+ fun4(V,Y,Z):1
     [V>=0,Z=0,Y=0,X=0,W=0,Out=0] 
* CE 236: expr(V,Out) = 3+ fun3(V,W,X):1+ fun4(V,Y,Z):1
     [V>=W+2,W>=0,Z=0,Y=0,X=0,Out=0] 
* CE 237: expr(V,Out) = 3+ fun3(V,W,X):2+ fun4(V,X,Y):1
     [2*V+1>=X,X>=V+4,V+W+3=X,Y=0,Out=0] 
* CE 238: expr(V,Out) = 3+ fun3(V,W,X):2+ fun4(V,Y,Out):2
     [3*V+4>=Out,Out>=2*V+7,Out=V+Y+3,Out=V+X+3,Out=2*V+W+6] 
* CE 239: expr(V,Out) = 3+ fun3(V,W,X):2+ fun4(V,Y,Out):3
     [3*V+3>=Out,Out>=2*V+6,Out=V+Y+2,Out=V+X+2,Out=2*V+W+5] 
* CE 240: expr(V,Out) = 3+ fun3(V,W,X):2+ fun4(V,Y,Out):4
     [3*V+2>=Out,Out>=2*V+5,Out=V+Y+1,Out=V+X+1,Out=2*V+W+4] 
* CE 241: expr(V,Out) = 3+ fun3(V,W,X):3+ fun4(V,X,Y):1
     [2*V>=X,X>=V+3,V+W+2=X,Y=0,Out=0] 
* CE 242: expr(V,Out) = 3+ fun3(V,W,X):3+ fun4(V,Y,Out):2
     [3*V+3>=Out,Out>=2*V+6,Out=V+Y+3,Out=V+X+3,Out=2*V+W+5] 
* CE 243: expr(V,Out) = 3+ fun3(V,W,X):3+ fun4(V,Y,Out):3
     [3*V+2>=Out,Out>=2*V+5,Out=V+Y+2,Out=V+X+2,Out=2*V+W+4] 
* CE 244: expr(V,Out) = 3+ fun3(V,W,X):3+ fun4(V,Y,Out):4
     [3*V+1>=Out,Out>=2*V+4,Out=V+Y+1,Out=V+X+1,Out=2*V+W+3] 
* CE 245: expr(V,Out) = 3+ fun3(V,W,X):4+ fun4(V,X,Y):1
     [2*V>=X+1,X>=V+2,V+W+1=X,Y=0,Out=0] 
* CE 246: expr(V,Out) = 3+ fun3(V,W,X):4+ fun4(V,Y,Out):2
     [3*V+2>=Out,Out>=2*V+5,Out=V+Y+3,Out=V+X+3,Out=2*V+W+4] 
* CE 247: expr(V,Out) = 3+ fun3(V,W,X):4+ fun4(V,Y,Out):3
     [3*V+1>=Out,Out>=2*V+4,Out=V+Y+2,Out=V+X+2,Out=2*V+W+3] 
* CE 248: expr(V,Out) = 3+ fun3(V,W,X):4+ fun4(V,Y,Out):4
     [3*V>=Out,Out>=2*V+3,Out=V+Y+1,Out=V+X+1,Out=2*V+W+2] 
* CE 249: expr(V,Out) = 3+ fun3(V,W,X):1+ fun4(V,Y,Z):1
     [V>=1,V=W+1,Z=0,Y=0,X=0,Out=0] 
* CE 250: expr(V,Out) = 3+ fun3(V,W,X):2+ fun4(V,Y,Z):1
     [V>=2,2*V+2=Y,2*V+2=X,V=W+1,Z=0,Out=0] 
* CE 251: expr(V,Out) = 3+ fun3(W,X,Y):2+ fun4(Z,A1,Out):2
     [Out>=11,2*Out=3*A1+4,Out=3*Z+5,2*Out=3*Y+4,Out=3*X+8,Out=3*W+5,Out=3*V+5] 
* CE 252: expr(V,Out) = 3+ fun3(W,X,Y):2+ fun4(Z,A1,Out):3
     [Out>=10,2*Out=3*A1+2,Out=3*Z+4,2*Out=3*Y+2,Out=3*X+7,Out=3*W+4,Out=3*V+4] 
* CE 253: expr(V,Out) = 3+ fun3(W,X,Y):2+ fun4(Z,A1,Out):4
     [Out>=9,2*Out=3*A1,Out=3*Z+3,2*Out=3*Y,Out=3*X+6,Out=3*W+3,Out=3*V+3] 
* CE 254: expr(V,Out) = 3+ fun3(V,W,X):3+ fun4(V,Y,Z):1
     [V>=2,2*V+1=Y,2*V+1=X,V=W+1,Z=0,Out=0] 
* CE 255: expr(V,Out) = 3+ fun3(W,X,Y):3+ fun4(Z,A1,Out):2
     [Out>=10,2*Out=3*A1+5,Out=3*Z+4,2*Out=3*Y+5,Out=3*X+7,Out=3*W+4,Out=3*V+4] 
* CE 256: expr(V,Out) = 3+ fun3(W,X,Y):3+ fun4(Z,A1,Out):3
     [Out>=9,2*Out=3*A1+3,Out=3*Z+3,2*Out=3*Y+3,Out=3*X+6,Out=3*W+3,Out=3*V+3] 
* CE 257: expr(V,Out) = 3+ fun3(W,X,Y):3+ fun4(Z,A1,Out):4
     [Out>=8,2*Out=3*A1+1,Out=3*Z+2,2*Out=3*Y+1,Out=3*X+5,Out=3*W+2,Out=3*V+2] 
* CE 258: expr(V,Out) = 3+ fun3(V,W,X):4+ fun4(V,Y,Z):1
     [V>=2,2*V=Y,2*V=X,V=W+1,Z=0,Out=0] 
* CE 259: expr(V,Out) = 3+ fun3(W,X,Y):4+ fun4(Z,A1,Out):2
     [Out>=9,2*Out=3*A1+6,Out=3*Z+3,2*Out=3*Y+6,Out=3*X+6,Out=3*W+3,Out=3*V+3] 
* CE 260: expr(V,Out) = 3+ fun3(W,X,Y):4+ fun4(Z,A1,Out):3
     [Out>=8,2*Out=3*A1+4,Out=3*Z+2,2*Out=3*Y+4,Out=3*X+5,Out=3*W+2,Out=3*V+2] 
* CE 261: expr(V,Out) = 3+ fun3(W,X,Y):4+ fun4(Z,A1,Out):4
     [Out>=7,2*Out=3*A1+2,Out=3*Z+1,2*Out=3*Y+2,Out=3*X+4,Out=3*W+1,Out=3*V+1] 
* CE 262: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):1+ fun3(V,Z,A1):1+ fun4(V,B1,C1):1
     [V>=2,V+2=Z,V+2=Y,W=0,C1=0,B1=0,A1=0,X=0,Out=0] 
* CE 263: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):1+ fun3(V,Z,A1):2+ fun4(V,B1,C1):1
     [V>=2,2*V+5=B1,2*V+5=A1,V+2=Z,V+2=Y,W=0,C1=0,X=0,Out=0] 
* CE 264: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):2
     [Out>=14,Out=3*W+8,2*Out=3*F1+1,Out=3*E1+8,2*Out=3*D1+1,Out=3*C1+2,Out=3*B1+8,Out=3*A1+2,Out=3*Y+8,Out=3*V+8,X=0,Z=0] 
* CE 265: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):3
     [Out>=13,Out=3*W+7,2*Out+1=3*F1,Out=3*E1+7,2*Out+1=3*D1,Out=3*C1+1,Out=3*B1+7,Out=3*A1+1,Out=3*Y+7,Out=3*V+7,X=0,Z=0] 
* CE 266: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):4
     [Out>=12,Out=3*W+6,2*Out+3=3*F1,Out=3*E1+6,2*Out+3=3*D1,Out=3*C1,Out=3*B1+6,Out=3*A1,Out=3*Y+6,Out=3*V+6,X=0,Z=0] 
* CE 267: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):1+ fun3(V,Z,A1):3+ fun4(V,B1,C1):1
     [V>=2,2*V+4=B1,2*V+4=A1,V+2=Z,V+2=Y,W=0,C1=0,X=0,Out=0] 
* CE 268: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):2
     [Out>=13,Out=3*W+7,2*Out=3*F1+2,Out=3*E1+7,2*Out=3*D1+2,Out=3*C1+1,Out=3*B1+7,Out=3*A1+1,Out=3*Y+7,Out=3*V+7,X=0,Z=0] 
* CE 269: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):3
     [Out>=12,Out=3*W+6,2*Out=3*F1,Out=3*E1+6,2*Out=3*D1,Out=3*C1,Out=3*B1+6,Out=3*A1,Out=3*Y+6,Out=3*V+6,X=0,Z=0] 
* CE 270: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):4
     [Out>=11,Out=3*W+5,2*Out+2=3*F1,Out=3*E1+5,2*Out+2=3*D1,Out+1=3*C1,Out=3*B1+5,Out+1=3*A1,Out=3*Y+5,Out=3*V+5,X=0,Z=0] 
* CE 271: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):1+ fun3(V,Z,A1):4+ fun4(V,B1,C1):1
     [V>=2,2*V+3=B1,2*V+3=A1,V+2=Z,V+2=Y,W=0,C1=0,X=0,Out=0] 
* CE 272: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):2
     [Out>=12,Out=3*W+6,2*Out=3*F1+3,Out=3*E1+6,2*Out=3*D1+3,Out=3*C1,Out=3*B1+6,Out=3*A1,Out=3*Y+6,Out=3*V+6,X=0,Z=0] 
* CE 273: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):3
     [Out>=11,Out=3*W+5,2*Out=3*F1+1,Out=3*E1+5,2*Out=3*D1+1,Out+1=3*C1,Out=3*B1+5,Out+1=3*A1,Out=3*Y+5,Out=3*V+5,X=0,Z=0] 
* CE 274: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):1+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):4
     [Out>=10,Out=3*W+4,2*Out+1=3*F1,Out=3*E1+4,2*Out+1=3*D1,Out+2=3*C1,Out=3*B1+4,Out+2=3*A1,Out=3*Y+4,Out=3*V+4,X=0,Z=0] 
* CE 275: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):2+ fun3(V,Z,A1):1+ fun4(V,B1,C1):1
     [V>=2,V+1=Z,V+1=Y,W=0,C1=0,B1=0,A1=0,X=0,Out=0] 
* CE 276: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):2+ fun3(V,Z,A1):2+ fun4(V,B1,C1):1
     [V>=2,2*V+4=B1,2*V+4=A1,V+1=Z,V+1=Y,W=0,C1=0,X=0,Out=0] 
* CE 277: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):2
     [Out>=13,Out=3*W+7,2*Out=3*F1+2,Out=3*E1+7,2*Out=3*D1+2,Out=3*C1+4,Out=3*B1+7,Out=3*A1+4,Out=3*Y+7,Out=3*V+7,X=0,Z=0] 
* CE 278: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):3
     [Out>=12,Out=3*W+6,2*Out=3*F1,Out=3*E1+6,2*Out=3*D1,Out=3*C1+3,Out=3*B1+6,Out=3*A1+3,Out=3*Y+6,Out=3*V+6,X=0,Z=0] 
* CE 279: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):2+ fun4(E1,F1,Out):4
     [Out>=11,Out=3*W+5,2*Out+2=3*F1,Out=3*E1+5,2*Out+2=3*D1,Out=3*C1+2,Out=3*B1+5,Out=3*A1+2,Out=3*Y+5,Out=3*V+5,X=0,Z=0] 
* CE 280: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):2+ fun3(V,Z,A1):3+ fun4(V,B1,C1):1
     [V>=2,2*V+3=B1,2*V+3=A1,V+1=Z,V+1=Y,W=0,C1=0,X=0,Out=0] 
* CE 281: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):2
     [Out>=12,Out=3*W+6,2*Out=3*F1+3,Out=3*E1+6,2*Out=3*D1+3,Out=3*C1+3,Out=3*B1+6,Out=3*A1+3,Out=3*Y+6,Out=3*V+6,X=0,Z=0] 
* CE 282: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):3
     [Out>=11,Out=3*W+5,2*Out=3*F1+1,Out=3*E1+5,2*Out=3*D1+1,Out=3*C1+2,Out=3*B1+5,Out=3*A1+2,Out=3*Y+5,Out=3*V+5,X=0,Z=0] 
* CE 283: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):3+ fun4(E1,F1,Out):4
     [Out>=10,Out=3*W+4,2*Out+1=3*F1,Out=3*E1+4,2*Out+1=3*D1,Out=3*C1+1,Out=3*B1+4,Out=3*A1+1,Out=3*Y+4,Out=3*V+4,X=0,Z=0] 
* CE 284: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):2+ fun3(V,Z,A1):4+ fun4(V,B1,C1):1
     [V>=2,2*V+2=B1,2*V+2=A1,V+1=Z,V+1=Y,W=0,C1=0,X=0,Out=0] 
* CE 285: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):2
     [Out>=11,Out=3*W+5,2*Out=3*F1+4,Out=3*E1+5,2*Out=3*D1+4,Out=3*C1+2,Out=3*B1+5,Out=3*A1+2,Out=3*Y+5,Out=3*V+5,X=0,Z=0] 
* CE 286: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):3
     [Out>=10,Out=3*W+4,2*Out=3*F1+2,Out=3*E1+4,2*Out=3*D1+2,Out=3*C1+1,Out=3*B1+4,Out=3*A1+1,Out=3*Y+4,Out=3*V+4,X=0,Z=0] 
* CE 287: expr(V,Out) = 3+ expr(W,X)+ fun(Y,Z,A1):2+ fun3(B1,C1,D1):4+ fun4(E1,F1,Out):4
     [Out>=9,Out=3*W+3,2*Out=3*F1,Out=3*E1+3,2*Out=3*D1,Out=3*C1,Out=3*B1+3,Out=3*A1,Out=3*Y+3,Out=3*V+3,X=0,Z=0] 
* CE 288: expr(V,Out) = 3+ expr(V,W)+ fun(V,W,X):3+ fun3(V,Y,Z):1+ fun4(V,A1,B1):1
     [V>=2,W>=0,B1=0,A1=0,Z=0,Y=0,X=0,Out=0] 
* CE 289: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Y,Z):1+ fun4(V,A1,B1):1
     [Y>=V+9,V>=2,V+W+3=Y,V+X+3=Y,B1=0,A1=0,Z=0,Out=0] 
* CE 290: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):2+ fun4(V,A1,B1):1
     [A1>=2*V+12,V>=2,W+2*V+6=A1,V+Z+3=A1,V+Y+3=A1,X+2*V+6=A1,B1=0,Out=0] 
* CE 291: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):2+ fun4(V,B1,Out):2
     [Out>=3*V+15,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+6,Out=2*V+Y+6,Out=3*V+W+9,Out=3*V+X+9] 
* CE 292: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):2+ fun4(V,B1,Out):3
     [Out>=3*V+14,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+5,Out=2*V+Y+5,Out=3*V+W+8,Out=3*V+X+8] 
* CE 293: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):2+ fun4(V,B1,Out):4
     [Out>=3*V+13,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+7,Out=3*V+X+7] 
* CE 294: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):3+ fun4(V,A1,B1):1
     [A1>=2*V+11,V>=2,W+2*V+5=A1,V+Z+2=A1,V+Y+2=A1,X+2*V+5=A1,B1=0,Out=0] 
* CE 295: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):3+ fun4(V,B1,Out):2
     [Out>=3*V+14,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+5,Out=2*V+Y+5,Out=3*V+W+8,Out=3*V+X+8] 
* CE 296: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):3+ fun4(V,B1,Out):3
     [Out>=3*V+13,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+7,Out=3*V+X+7] 
* CE 297: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):3+ fun4(V,B1,Out):4
     [Out>=3*V+12,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+3,Out=2*V+Y+3,Out=3*V+W+6,Out=3*V+X+6] 
* CE 298: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):4+ fun4(V,A1,B1):1
     [A1>=2*V+10,V>=2,W+2*V+4=A1,V+Z+1=A1,V+Y+1=A1,X+2*V+4=A1,B1=0,Out=0] 
* CE 299: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):4+ fun4(V,B1,Out):2
     [Out>=3*V+13,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+7,Out=3*V+X+7] 
* CE 300: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):4+ fun4(V,B1,Out):3
     [Out>=3*V+12,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+3,Out=2*V+Y+3,Out=3*V+W+6,Out=3*V+X+6] 
* CE 301: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):4+ fun3(V,Z,A1):4+ fun4(V,B1,Out):4
     [Out>=3*V+11,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+2,Out=2*V+Y+2,Out=3*V+W+5,Out=3*V+X+5] 
* CE 302: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Y,Z):1+ fun4(V,A1,B1):1
     [Y>=V+3,V>=2,V+W+2=Y,V+X+2=Y,B1=0,A1=0,Z=0,Out=0] 
* CE 303: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):2+ fun4(V,A1,B1):1
     [A1>=2*V+6,V>=2,W+2*V+5=A1,V+Z+3=A1,V+Y+3=A1,X+2*V+5=A1,B1=0,Out=0] 
* CE 304: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):2+ fun4(V,B1,Out):2
     [Out>=3*V+9,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+6,Out=2*V+Y+6,Out=3*V+W+8,Out=3*V+X+8] 
* CE 305: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):2+ fun4(V,B1,Out):3
     [Out>=3*V+8,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+5,Out=2*V+Y+5,Out=3*V+W+7,Out=3*V+X+7] 
* CE 306: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):2+ fun4(V,B1,Out):4
     [Out>=3*V+7,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+6,Out=3*V+X+6] 
* CE 307: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):3+ fun4(V,A1,B1):1
     [A1>=2*V+5,V>=2,W+2*V+4=A1,V+Z+2=A1,V+Y+2=A1,X+2*V+4=A1,B1=0,Out=0] 
* CE 308: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):3+ fun4(V,B1,Out):2
     [Out>=3*V+8,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+5,Out=2*V+Y+5,Out=3*V+W+7,Out=3*V+X+7] 
* CE 309: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):3+ fun4(V,B1,Out):3
     [Out>=3*V+7,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+6,Out=3*V+X+6] 
* CE 310: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):3+ fun4(V,B1,Out):4
     [Out>=3*V+6,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+3,Out=2*V+Y+3,Out=3*V+W+5,Out=3*V+X+5] 
* CE 311: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):4+ fun4(V,A1,B1):1
     [A1>=2*V+4,V>=2,W+2*V+3=A1,V+Z+1=A1,V+Y+1=A1,X+2*V+3=A1,B1=0,Out=0] 
* CE 312: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):4+ fun4(V,B1,Out):2
     [Out>=3*V+7,V>=2,Out=V+B1+3,Out=V+A1+3,Out=2*V+Z+4,Out=2*V+Y+4,Out=3*V+W+6,Out=3*V+X+6] 
* CE 313: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):4+ fun4(V,B1,Out):3
     [Out>=3*V+6,V>=2,Out=V+B1+2,Out=V+A1+2,Out=2*V+Z+3,Out=2*V+Y+3,Out=3*V+W+5,Out=3*V+X+5] 
* CE 314: expr(V,Out) = 3+ expr(V,W)+ fun(V,X,Y):5+ fun3(V,Z,A1):4+ fun4(V,B1,Out):4
     [Out>=3*V+5,V>=2,Out=V+B1+1,Out=V+A1+1,Out=2*V+Z+2,Out=2*V+Y+2,Out=3*V+W+4,Out=3*V+X+4] 

### Cost equations --> "Loop" of expr/2 
* CEs [314] --> Loop 135 
* CEs [301,310,313] --> Loop 136 
* CEs [297,300,306,309,312] --> Loop 137 
* CEs [293,296,299,305,308] --> Loop 138 
* CEs [292,295,304] --> Loop 139 
* CEs [291] --> Loop 140 
* CEs [287] --> Loop 141 
* CEs [274,283,286] --> Loop 142 
* CEs [270,273,279,282,285] --> Loop 143 
* CEs [266,269,272,278,281] --> Loop 144 
* CEs [265,268,277] --> Loop 145 
* CEs [264] --> Loop 146 
* CEs [262,263,267,271,275,276,280,284,288,289,290,294,298,302,303,307,311] --> Loop 147 
* CEs [238] --> Loop 148 
* CEs [239,242] --> Loop 149 
* CEs [240,243,246] --> Loop 150 
* CEs [244,247] --> Loop 151 
* CEs [248] --> Loop 152 
* CEs [261] --> Loop 153 
* CEs [257,260] --> Loop 154 
* CEs [253,256,259] --> Loop 155 
* CEs [252,255] --> Loop 156 
* CEs [251] --> Loop 157 
* CEs [235,236,237,241,245,249,250,254,258] --> Loop 158 

#### Loops of expr/2 
* Loop 135: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+5,V>=2,Out'+3*V+4=Out] 
* Loop 136: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+6,V>=2,Out'+3*V+5=Out] 
* Loop 137: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+7,V>=2,Out'+3*V+6=Out] 
* Loop 138: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+8,V>=2,Out'+3*V+7=Out] 
* Loop 139: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+9,V>=2,Out'+3*V+8=Out] 
* Loop 140: expr(V,Out)->  expr(V,Out')
                  [Out>=3*V+15,V>=2,Out'+3*V+9=Out] 
* Loop 141: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+3=Out,Out'=0] 
* Loop 142: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+4=Out,Out'=0] 
* Loop 143: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+5=Out,Out'=0] 
* Loop 144: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+6=Out,Out'=0] 
* Loop 145: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+7=Out,Out'=0] 
* Loop 146: expr(V,Out)->  expr(V,Out')
                  [V>=2,3*V+8=Out,Out'=0] 
* Loop 147: expr(V,Out)->  expr(V,Out')
                  [Out'>=0,V>=2,Out=0] 
* Loop 148: expr(V,Out) [3*V+4>=Out,Out>=2*V+7] 
* Loop 149: expr(V,Out) [3*V+3>=Out,Out>=2*V+6] 
* Loop 150: expr(V,Out) [3*V+2>=Out,Out>=2*V+5] 
* Loop 151: expr(V,Out) [3*V+1>=Out,Out>=2*V+4] 
* Loop 152: expr(V,Out) [3*V>=Out,Out>=2*V+3] 
* Loop 153: expr(V,Out) [V>=2,3*V+1=Out] 
* Loop 154: expr(V,Out) [V>=2,3*V+2=Out] 
* Loop 155: expr(V,Out) [V>=2,3*V+3=Out] 
* Loop 156: expr(V,Out) [V>=2,3*V+4=Out] 
* Loop 157: expr(V,Out) [V>=2,3*V+5=Out] 
* Loop 158: expr(V,Out) [V>=0,Out=0] 

### Ranking functions of CR expr(V,Out) 

#### Partial ranking functions of CR expr(V,Out) 


### Resulting Chains:expr(V,Out) 
* [[135,136,137,138,139,140,141,142,143,144,145,146,147]]...
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],158]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],157]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],156]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],155]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],154]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],153]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],152]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],151]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],150]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],149]
* [[135,136,137,138,139,140,141,142,143,144,145,146,147],148]
* [158]
* [157]
* [156]
* [155]
* [154]
* [153]
* [152]
* [151]
* [150]
* [149]
* [148]


### Merging Chains  expr/2 into  External patterns of execution 
* [[158]] --> 1 
* [[148],[149],[150],[151],[152],[157],[148,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[149,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[150,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[151,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[152,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[153,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[154,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[155,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[156,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[157,[135,136,137,138,139,140,141,142,143,144,145,146,147]],[158,[135,136,137,138,139,140,141,142,143,144,145,146,147]]] --> 2 
* [[156]] --> 3 
* [[155]] --> 4 
* [[154]] --> 5 
* [[153]] --> 6 
* [[[135,136,137,138,139,140,141,142,143,144,145,146,147]]] --> 7 


### Specialization of cost equations notEmpty/2 
* CE 81 is refined into CE [315] 
* CE 83 is refined into CE [316] 
* CE 82 is refined into CE [317] 


#### Refined cost equations notEmpty/2 
* CE 315: notEmpty(V,Out) = 1
     [V>=1,Out=2] 
* CE 316: notEmpty(V,Out) = 0
     [V>=0,Out=0] 
* CE 317: notEmpty(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [315] --> Loop 159 
* CEs [316] --> Loop 160 
* CEs [317] --> Loop 161 

#### Loops of notEmpty/2 
* Loop 159: notEmpty(V,Out) [V>=1,Out=2] 
* Loop 160: notEmpty(V,Out) [V>=0,Out=0] 
* Loop 161: notEmpty(V,Out) [Out=1,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [161]
* [160]
* [159]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[161]] --> 1 
* [[160]] --> 2 
* [[159]] --> 3 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [318] 
* CE 3 is refined into CE [319] 
* CE 4 is refined into CE [320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382] 
* CE 5 is refined into CE [383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403] 
* CE 6 is refined into CE [404,405,406,407] 
* CE 7 is refined into CE [408] 
* CE 8 is refined into CE [409,410,411,412] 
* CE 9 is refined into CE [413,414,415,416,417,418,419,420,421,422,423,424] 
* CE 10 is refined into CE [425,426] 
* CE 11 is refined into CE [427,428,429,430,431,432,433,434,435,436,437,438] 
* CE 12 is refined into CE [439,440] 
* CE 13 is refined into CE [441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464] 
* CE 14 is refined into CE [465,466,467] 
* CE 15 is refined into CE [468,469,470,471,472,473,474] 
* CE 16 is refined into CE [475,476,477,478,479,480,481] 
* CE 17 is refined into CE [482,483,484,485,486] 
* CE 18 is refined into CE [487,488,489,490,491,492,493] 
* CE 19 is refined into CE [494,495,496,497,498] 
* CE 20 is refined into CE [499,500,501,502] 
* CE 21 is refined into CE [503,504,505,506] 


#### Refined cost equations start/3 
* CE 318: start(V,V12,V63) = 1+ fun3(V,W63,X63):1
     [V>=0,X63=0,W63=0] 
* CE 319: start(V,V12,V63) = 0
     [V>=0] 
* CE 320: start(V,V12,V63) = 2+ expr(V,W63):1+ fun(V,X63,Y63):1+ fun3(V,Z63,A64):1
     [V>=2,V+2=Z63,V+2=Y63,A64=0,X63=0,W63=0] 
* CE 321: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):2
     [D64>=9,D64=2*C64+1,D64=2*B64+5,D64=2*A64+1,D64=2*Y63+5,D64=2*W63+5,D64=2*V+5,Z63=0,X63=0] 
* CE 322: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):3
     [D64>=8,D64=2*C64,D64=2*B64+4,D64=2*A64,D64=2*Y63+4,D64=2*W63+4,D64=2*V+4,Z63=0,X63=0] 
* CE 323: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):4
     [D64>=7,D64+1=2*C64,D64=2*B64+3,D64+1=2*A64,D64=2*Y63+3,D64=2*W63+3,D64=2*V+3,Z63=0,X63=0] 
* CE 324: start(V,V12,V63) = 2+ expr(V,W63):1+ fun(V,X63,Y63):2+ fun3(V,Z63,A64):1
     [V>=2,V+1=Z63,V+1=Y63,A64=0,X63=0,W63=0] 
* CE 325: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):2
     [D64>=8,D64=2*C64+2,D64=2*B64+4,D64=2*A64+2,D64=2*Y63+4,D64=2*W63+4,D64=2*V+4,Z63=0,X63=0] 
* CE 326: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):3
     [D64>=7,D64=2*C64+1,D64=2*B64+3,D64=2*A64+1,D64=2*Y63+3,D64=2*W63+3,D64=2*V+3,Z63=0,X63=0] 
* CE 327: start(V,V12,V63) = 2+ expr(W63,X63):1+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):4
     [D64>=6,D64=2*C64,D64=2*B64+2,D64=2*A64,D64=2*Y63+2,D64=2*W63+2,D64=2*V+2,Z63=0,X63=0] 
* CE 328: start(V,V12,V63) = 2+ expr(V,W63):1+ fun(V,X63,Y63):3+ fun3(V,Z63,A64):1
     [V>=2,A64=0,Z63=0,Y63=0,X63=0,W63=0] 
* CE 329: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):1+ fun3(V,Z63,A64):1
     [V>=2,V+2=Z63,V+2=Y63,A64=0,X63=0,W63=0] 
* CE 330: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):2
     [D64>=9,D64=2*C64+1,D64=2*B64+5,D64=2*A64+1,D64=2*Y63+5,D64=2*W63+5,D64=2*V+5,Z63=0,X63=0] 
* CE 331: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):3
     [D64>=8,D64=2*C64,D64=2*B64+4,D64=2*A64,D64=2*Y63+4,D64=2*W63+4,D64=2*V+4,Z63=0,X63=0] 
* CE 332: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):1+ fun3(B64,C64,D64):4
     [D64>=7,D64+1=2*C64,D64=2*B64+3,D64+1=2*A64,D64=2*Y63+3,D64=2*W63+3,D64=2*V+3,Z63=0,X63=0] 
* CE 333: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):2+ fun3(V,Z63,A64):1
     [V>=2,V+1=Z63,V+1=Y63,A64=0,X63=0,W63=0] 
* CE 334: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):2
     [D64>=8,D64=2*C64+2,D64=2*B64+4,D64=2*A64+2,D64=2*Y63+4,D64=2*W63+4,D64=2*V+4,Z63=0,X63=0] 
* CE 335: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):3
     [D64>=7,D64=2*C64+1,D64=2*B64+3,D64=2*A64+1,D64=2*Y63+3,D64=2*W63+3,D64=2*V+3,Z63=0,X63=0] 
* CE 336: start(V,V12,V63) = 2+ expr(W63,X63):2+ fun(Y63,Z63,A64):2+ fun3(B64,C64,D64):4
     [D64>=6,D64=2*C64,D64=2*B64+2,D64=2*A64,D64=2*Y63+2,D64=2*W63+2,D64=2*V+2,Z63=0,X63=0] 
* CE 337: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,W63,X63):3+ fun3(V,Y63,Z63):1
     [V>=2,W63>=0,Z63=0,Y63=0,X63=0] 
* CE 338: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):4+ fun3(V,Y63,Z63):1
     [Y63>=V+9,V>=2,V+X63+3=Y63,V+W63+3=Y63,Z63=0] 
* CE 339: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):2
     [A64>=2*V+12,V>=2,A64=V+Z63+3,A64=V+Y63+3,A64=2*V+X63+6,A64=2*V+W63+6] 
* CE 340: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):3
     [A64>=2*V+11,V>=2,A64=V+Z63+2,A64=V+Y63+2,A64=2*V+X63+5,A64=2*V+W63+5] 
* CE 341: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):4
     [A64>=2*V+10,V>=2,A64=V+Z63+1,A64=V+Y63+1,A64=2*V+X63+4,A64=2*V+W63+4] 
* CE 342: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):5+ fun3(V,Y63,Z63):1
     [Y63>=V+3,V>=2,V+X63+2=Y63,V+W63+2=Y63,Z63=0] 
* CE 343: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):2
     [A64>=2*V+6,V>=2,A64=V+Z63+3,A64=V+Y63+3,A64=2*V+X63+5,A64=2*V+W63+5] 
* CE 344: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):3
     [A64>=2*V+5,V>=2,A64=V+Z63+2,A64=V+Y63+2,A64=2*V+X63+4,A64=2*V+W63+4] 
* CE 345: start(V,V12,V63) = 2+ expr(V,W63):2+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):4
     [A64>=2*V+4,V>=2,A64=V+Z63+1,A64=V+Y63+1,A64=2*V+X63+3,A64=2*V+W63+3] 
* CE 346: start(V,V12,V63) = 2+ expr(V,W63):3+ fun(V,X63,Y63):3+ fun3(V,Z63,A64):1
     [V>=2,3*V+4=X63,3*V+4=W63,A64=0,Z63=0,Y63=0] 
* CE 347: start(V,V12,V63) = 2+ expr(V,W63):3+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):1
     [V>=2,4*V+7=Z63,4*V+7=Y63,3*V+4=X63,3*V+4=W63,A64=0] 
* CE 348: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):2
     [D64>=20,4*D64=5*C64+5,D64=5*B64+10,4*D64=5*A64+5,3*D64=5*Z63+10,D64=5*Y63+10,3*D64=5*X63+10,D64=5*W63+10,D64=5*V+10] 
* CE 349: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):3
     [D64>=19,4*D64=5*C64+1,D64=5*B64+9,4*D64=5*A64+1,3*D64=5*Z63+7,D64=5*Y63+9,3*D64=5*X63+7,D64=5*W63+9,D64=5*V+9] 
* CE 350: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):4
     [D64>=18,4*D64+3=5*C64,D64=5*B64+8,4*D64+3=5*A64,3*D64=5*Z63+4,D64=5*Y63+8,3*D64=5*X63+4,D64=5*W63+8,D64=5*V+8] 
* CE 351: start(V,V12,V63) = 2+ expr(V,W63):3+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):1
     [V>=2,4*V+6=Z63,4*V+6=Y63,3*V+4=X63,3*V+4=W63,A64=0] 
* CE 352: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):2
     [D64>=19,4*D64=5*C64+6,D64=5*B64+9,4*D64=5*A64+6,3*D64=5*Z63+7,D64=5*Y63+9,3*D64=5*X63+7,D64=5*W63+9,D64=5*V+9] 
* CE 353: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):3
     [D64>=18,4*D64=5*C64+2,D64=5*B64+8,4*D64=5*A64+2,3*D64=5*Z63+4,D64=5*Y63+8,3*D64=5*X63+4,D64=5*W63+8,D64=5*V+8] 
* CE 354: start(V,V12,V63) = 2+ expr(W63,X63):3+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):4
     [D64>=17,4*D64+2=5*C64,D64=5*B64+7,4*D64+2=5*A64,3*D64=5*Z63+1,D64=5*Y63+7,3*D64=5*X63+1,D64=5*W63+7,D64=5*V+7] 
* CE 355: start(V,V12,V63) = 2+ expr(V,W63):4+ fun(V,X63,Y63):3+ fun3(V,Z63,A64):1
     [V>=2,3*V+3=X63,3*V+3=W63,A64=0,Z63=0,Y63=0] 
* CE 356: start(V,V12,V63) = 2+ expr(V,W63):4+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):1
     [V>=2,4*V+6=Z63,4*V+6=Y63,3*V+3=X63,3*V+3=W63,A64=0] 
* CE 357: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):2
     [D64>=19,4*D64=5*C64+6,D64=5*B64+9,4*D64=5*A64+6,3*D64=5*Z63+12,D64=5*Y63+9,3*D64=5*X63+12,D64=5*W63+9,D64=5*V+9] 
* CE 358: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):3
     [D64>=18,4*D64=5*C64+2,D64=5*B64+8,4*D64=5*A64+2,3*D64=5*Z63+9,D64=5*Y63+8,3*D64=5*X63+9,D64=5*W63+8,D64=5*V+8] 
* CE 359: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):4
     [D64>=17,4*D64+2=5*C64,D64=5*B64+7,4*D64+2=5*A64,3*D64=5*Z63+6,D64=5*Y63+7,3*D64=5*X63+6,D64=5*W63+7,D64=5*V+7] 
* CE 360: start(V,V12,V63) = 2+ expr(V,W63):4+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):1
     [V>=2,4*V+5=Z63,4*V+5=Y63,3*V+3=X63,3*V+3=W63,A64=0] 
* CE 361: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):2
     [D64>=18,4*D64=5*C64+7,D64=5*B64+8,4*D64=5*A64+7,3*D64=5*Z63+9,D64=5*Y63+8,3*D64=5*X63+9,D64=5*W63+8,D64=5*V+8] 
* CE 362: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):3
     [D64>=17,4*D64=5*C64+3,D64=5*B64+7,4*D64=5*A64+3,3*D64=5*Z63+6,D64=5*Y63+7,3*D64=5*X63+6,D64=5*W63+7,D64=5*V+7] 
* CE 363: start(V,V12,V63) = 2+ expr(W63,X63):4+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):4
     [D64>=16,4*D64+1=5*C64,D64=5*B64+6,4*D64+1=5*A64,3*D64=5*Z63+3,D64=5*Y63+6,3*D64=5*X63+3,D64=5*W63+6,D64=5*V+6] 
* CE 364: start(V,V12,V63) = 2+ expr(V,W63):5+ fun(V,X63,Y63):3+ fun3(V,Z63,A64):1
     [V>=2,3*V+2=X63,3*V+2=W63,A64=0,Z63=0,Y63=0] 
* CE 365: start(V,V12,V63) = 2+ expr(V,W63):5+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):1
     [V>=2,4*V+5=Z63,4*V+5=Y63,3*V+2=X63,3*V+2=W63,A64=0] 
* CE 366: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):2
     [D64>=18,4*D64=5*C64+7,D64=5*B64+8,4*D64=5*A64+7,3*D64=5*Z63+14,D64=5*Y63+8,3*D64=5*X63+14,D64=5*W63+8,D64=5*V+8] 
* CE 367: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):3
     [D64>=17,4*D64=5*C64+3,D64=5*B64+7,4*D64=5*A64+3,3*D64=5*Z63+11,D64=5*Y63+7,3*D64=5*X63+11,D64=5*W63+7,D64=5*V+7] 
* CE 368: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):4
     [D64>=16,4*D64+1=5*C64,D64=5*B64+6,4*D64+1=5*A64,3*D64=5*Z63+8,D64=5*Y63+6,3*D64=5*X63+8,D64=5*W63+6,D64=5*V+6] 
* CE 369: start(V,V12,V63) = 2+ expr(V,W63):5+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):1
     [V>=2,4*V+4=Z63,4*V+4=Y63,3*V+2=X63,3*V+2=W63,A64=0] 
* CE 370: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):2
     [D64>=17,4*D64=5*C64+8,D64=5*B64+7,4*D64=5*A64+8,3*D64=5*Z63+11,D64=5*Y63+7,3*D64=5*X63+11,D64=5*W63+7,D64=5*V+7] 
* CE 371: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):3
     [D64>=16,4*D64=5*C64+4,D64=5*B64+6,4*D64=5*A64+4,3*D64=5*Z63+8,D64=5*Y63+6,3*D64=5*X63+8,D64=5*W63+6,D64=5*V+6] 
* CE 372: start(V,V12,V63) = 2+ expr(W63,X63):5+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):4
     [D64>=15,4*D64=5*C64,D64=5*B64+5,4*D64=5*A64,3*D64=5*Z63+5,D64=5*Y63+5,3*D64=5*X63+5,D64=5*W63+5,D64=5*V+5] 
* CE 373: start(V,V12,V63) = 2+ expr(V,W63):6+ fun(V,X63,Y63):3+ fun3(V,Z63,A64):1
     [V>=2,3*V+1=X63,3*V+1=W63,A64=0,Z63=0,Y63=0] 
* CE 374: start(V,V12,V63) = 2+ expr(V,W63):6+ fun(V,X63,Y63):4+ fun3(V,Z63,A64):1
     [V>=2,4*V+4=Z63,4*V+4=Y63,3*V+1=X63,3*V+1=W63,A64=0] 
* CE 375: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):2
     [D64>=17,4*D64=5*C64+8,D64=5*B64+7,4*D64=5*A64+8,3*D64=5*Z63+16,D64=5*Y63+7,3*D64=5*X63+16,D64=5*W63+7,D64=5*V+7] 
* CE 376: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):3
     [D64>=16,4*D64=5*C64+4,D64=5*B64+6,4*D64=5*A64+4,3*D64=5*Z63+13,D64=5*Y63+6,3*D64=5*X63+13,D64=5*W63+6,D64=5*V+6] 
* CE 377: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):4+ fun3(B64,C64,D64):4
     [D64>=15,4*D64=5*C64,D64=5*B64+5,4*D64=5*A64,3*D64=5*Z63+10,D64=5*Y63+5,3*D64=5*X63+10,D64=5*W63+5,D64=5*V+5] 
* CE 378: start(V,V12,V63) = 2+ expr(V,W63):6+ fun(V,X63,Y63):5+ fun3(V,Z63,A64):1
     [V>=2,4*V+3=Z63,4*V+3=Y63,3*V+1=X63,3*V+1=W63,A64=0] 
* CE 379: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):2
     [D64>=16,4*D64=5*C64+9,D64=5*B64+6,4*D64=5*A64+9,3*D64=5*Z63+13,D64=5*Y63+6,3*D64=5*X63+13,D64=5*W63+6,D64=5*V+6] 
* CE 380: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):3
     [D64>=15,4*D64=5*C64+5,D64=5*B64+5,4*D64=5*A64+5,3*D64=5*Z63+10,D64=5*Y63+5,3*D64=5*X63+10,D64=5*W63+5,D64=5*V+5] 
* CE 381: start(V,V12,V63) = 2+ expr(W63,X63):6+ fun(Y63,Z63,A64):5+ fun3(B64,C64,D64):4
     [D64>=14,4*D64=5*C64+1,D64=5*B64+4,4*D64=5*A64+1,3*D64=5*Z63+7,D64=5*Y63+4,3*D64=5*X63+7,D64=5*W63+4,D64=5*V+4] 
* CE 382: start(V,V12,V63) = 2+ expr(V,W63):7
     [W63>=0,V>=2] 
* CE 383: start(V,V12,V63) = 1+ expr(W63,X63):1+ fun(Y63,Z63,A64):1
     [A64>=4,A64=Y63+2,A64=W63+2,A64=V+2,Z63=0,X63=0] 
* CE 384: start(V,V12,V63) = 1+ expr(W63,X63):1+ fun(Y63,Z63,A64):2
     [A64>=3,A64=Y63+1,A64=W63+1,A64=V+1,Z63=0,X63=0] 
* CE 385: start(V,V12,V63) = 1+ expr(V,W63):1+ fun(V,X63,Y63):3
     [V>=2,Y63=0,X63=0,W63=0] 
* CE 386: start(V,V12,V63) = 1+ expr(W63,X63):2+ fun(Y63,Z63,A64):1
     [A64>=4,A64=Y63+2,A64=W63+2,A64=V+2,Z63=0,X63=0] 
* CE 387: start(V,V12,V63) = 1+ expr(W63,X63):2+ fun(Y63,Z63,A64):2
     [A64>=3,A64=Y63+1,A64=W63+1,A64=V+1,Z63=0,X63=0] 
* CE 388: start(V,V12,V63) = 1+ expr(V,W63):2+ fun(V,W63,X63):3
     [W63>=0,V>=2,X63=0] 
* CE 389: start(V,V12,V63) = 1+ expr(V,W63):2+ fun(V,X63,Y63):4
     [Y63>=V+9,V>=2,Y63=V+X63+3,Y63=V+W63+3] 
* CE 390: start(V,V12,V63) = 1+ expr(V,W63):2+ fun(V,X63,Y63):5
     [Y63>=V+3,V>=2,Y63=V+X63+2,Y63=V+W63+2] 
* CE 391: start(V,V12,V63) = 1+ expr(V,W63):3+ fun(V,X63,Y63):3
     [V>=2,3*V+4=X63,3*V+4=W63,Y63=0] 
* CE 392: start(V,V12,V63) = 1+ expr(W63,X63):3+ fun(Y63,Z63,A64):4
     [A64>=15,3*A64=4*Z63+5,A64=4*Y63+7,3*A64=4*X63+5,A64=4*W63+7,A64=4*V+7] 
* CE 393: start(V,V12,V63) = 1+ expr(W63,X63):3+ fun(Y63,Z63,A64):5
     [A64>=14,3*A64=4*Z63+2,A64=4*Y63+6,3*A64=4*X63+2,A64=4*W63+6,A64=4*V+6] 
* CE 394: start(V,V12,V63) = 1+ expr(V,W63):4+ fun(V,X63,Y63):3
     [V>=2,3*V+3=X63,3*V+3=W63,Y63=0] 
* CE 395: start(V,V12,V63) = 1+ expr(W63,X63):4+ fun(Y63,Z63,A64):4
     [A64>=14,3*A64=4*Z63+6,A64=4*Y63+6,3*A64=4*X63+6,A64=4*W63+6,A64=4*V+6] 
* CE 396: start(V,V12,V63) = 1+ expr(W63,X63):4+ fun(Y63,Z63,A64):5
     [A64>=13,3*A64=4*Z63+3,A64=4*Y63+5,3*A64=4*X63+3,A64=4*W63+5,A64=4*V+5] 
* CE 397: start(V,V12,V63) = 1+ expr(V,W63):5+ fun(V,X63,Y63):3
     [V>=2,3*V+2=X63,3*V+2=W63,Y63=0] 
* CE 398: start(V,V12,V63) = 1+ expr(W63,X63):5+ fun(Y63,Z63,A64):4
     [A64>=13,3*A64=4*Z63+7,A64=4*Y63+5,3*A64=4*X63+7,A64=4*W63+5,A64=4*V+5] 
* CE 399: start(V,V12,V63) = 1+ expr(W63,X63):5+ fun(Y63,Z63,A64):5
     [A64>=12,3*A64=4*Z63+4,A64=4*Y63+4,3*A64=4*X63+4,A64=4*W63+4,A64=4*V+4] 
* CE 400: start(V,V12,V63) = 1+ expr(V,W63):6+ fun(V,X63,Y63):3
     [V>=2,3*V+1=X63,3*V+1=W63,Y63=0] 
* CE 401: start(V,V12,V63) = 1+ expr(W63,X63):6+ fun(Y63,Z63,A64):4
     [A64>=12,3*A64=4*Z63+8,A64=4*Y63+4,3*A64=4*X63+8,A64=4*W63+4,A64=4*V+4] 
* CE 402: start(V,V12,V63) = 1+ expr(W63,X63):6+ fun(Y63,Z63,A64):5
     [A64>=11,3*A64=4*Z63+5,A64=4*Y63+3,3*A64=4*X63+5,A64=4*W63+3,A64=4*V+3] 
* CE 403: start(V,V12,V63) = 1+ expr(V,W63):7
     [W63>=0,V>=2] 
* CE 404: start(V,V12,V63) = 2+ fun3(V,W63,X63):1
     [V>=W63+2,W63>=0,X63=0] 
* CE 405: start(V,V12,V63) = 2+ fun3(V,W63,X63):2
     [2*V+1>=X63,X63>=V+4,X63=V+W63+3] 
* CE 406: start(V,V12,V63) = 2+ fun3(V,W63,X63):3
     [2*V>=X63,X63>=V+3,X63=V+W63+2] 
* CE 407: start(V,V12,V63) = 2+ fun3(V,W63,X63):4
     [2*V>=X63+1,X63>=V+2,X63=V+W63+1] 
* CE 408: start(V,V12,V63) = 1
     [V>=1] 
* CE 409: start(V,V12,V63) = 2+ fun3(V,W63,X63):1
     [V>=1,V=W63+1,X63=0] 
* CE 410: start(V,V12,V63) = 2+ fun3(W63,X63,Y63):2
     [Y63>=6,Y63=2*X63+4,Y63=2*W63+2,Y63=2*V+2] 
* CE 411: start(V,V12,V63) = 2+ fun3(W63,X63,Y63):3
     [Y63>=5,Y63=2*X63+3,Y63=2*W63+1,Y63=2*V+1] 
* CE 412: start(V,V12,V63) = 2+ fun3(W63,X63,Y63):4
     [Y63>=4,Y63=2*X63+2,Y63=2*W63,Y63=2*V] 
* CE 413: start(V,V12,V63) = 0+ member(V12,W63,X63):1
     [V63>=W63+1,W63>=0,V12>=0,X63=0,V=1] 
* CE 414: start(V,V12,V63) = 0+ member(W63,X63,Y63):2
     [V63>=X63+1,X63>=2,Y63=1,W63=0,V12=0,V=1] 
* CE 415: start(V,V12,V63) = 0+ member(W63,X63,Y63):3
     [V63>=X63+1,X63>=1,Y63=2,W63=0,V12=0,V=1] 
* CE 416: start(V,V12,V63) = 0+ member(W63,X63,Y63):4
     [V63>=X63+1,X63>=2,Y63=0,W63=1,V12=1,V=1] 
* CE 417: start(V,V12,V63) = 0+ member(W63,X63,Y63):5
     [V63>=X63+1,X63>=2,Y63=2,W63=1,V12=1,V=1] 
* CE 418: start(V,V12,V63) = 0+ member(W63,X63,Y63):6
     [V63>=X63+1,X63>=2,Y63=0,W63=2,V12=2,V=1] 
* CE 419: start(V,V12,V63) = 0+ member(W63,X63,Y63):7
     [V63>=X63+1,X63>=1,Y63=0,W63=3,V12=3,V=1] 
* CE 420: start(V,V12,V63) = 0+ member(W63,X63,Y63):8
     [V63>=X63+1,X63>=1,Y63=0,W63=4,V12=4,V=1] 
* CE 421: start(V,V12,V63) = 0+ member(W63,X63,Y63):9
     [V63>=X63+1,X63>=2,Y63=0,W63=5,V12=5,V=1] 
* CE 422: start(V,V12,V63) = 0+ member(V12,W63,X63):10
     [V63>=W63+1,W63>=V12+1,V12>=2,X63=2,V=1] 
* CE 423: start(V,V12,V63) = 0+ member(V12,W63,X63):11
     [V12>=0,V63>=1,X63=1,W63=0,V=1] 
* CE 424: start(V,V12,V63) = 0+ member(V12,W63,X63):12
     [V63>=W63+1,W63>=1,V12>=1,X63=1,V=1] 
* CE 425: start(V,V12,V63) = 0+ head(V,W63):1
     [V>=0,W63=0] 
* CE 426: start(V,V12,V63) = 0+ head(V,W63):2
     [V>=W63+1,W63>=0] 
* CE 427: start(V,V12,V63) = 0+ member(V,V12,W63):1
     [V12>=0,V>=0,W63=0] 
* CE 428: start(V,V12,V63) = 0+ member(W63,V12,X63):2
     [V12>=2,X63=1,W63=0,V=0] 
* CE 429: start(V,V12,V63) = 0+ member(W63,V12,X63):3
     [V12>=1,X63=2,W63=0,V=0] 
* CE 430: start(V,V12,V63) = 0+ member(W63,V12,X63):4
     [V12>=2,X63=0,W63=1,V=1] 
* CE 431: start(V,V12,V63) = 0+ member(W63,V12,X63):5
     [V12>=2,X63=2,W63=1,V=1] 
* CE 432: start(V,V12,V63) = 0+ member(W63,V12,X63):6
     [V12>=2,X63=0,W63=2,V=2] 
* CE 433: start(V,V12,V63) = 0+ member(W63,V12,X63):7
     [V12>=1,X63=0,W63=3,V=3] 
* CE 434: start(V,V12,V63) = 0+ member(W63,V12,X63):8
     [V12>=1,X63=0,W63=4,V=4] 
* CE 435: start(V,V12,V63) = 0+ member(W63,V12,X63):9
     [V12>=2,X63=0,W63=5,V=5] 
* CE 436: start(V,V12,V63) = 0+ member(V,V12,W63):10
     [V12>=V+1,V>=2,W63=2] 
* CE 437: start(V,V12,V63) = 0+ member(V,W63,X63):11
     [V>=0,X63=1,W63=0,V12=0] 
* CE 438: start(V,V12,V63) = 0+ member(V,V12,W63):12
     [V12>=1,V>=1,W63=1] 
* CE 439: start(V,V12,V63) = 0+ atom(V,W63):1
     [V>=0,W63=0] 
* CE 440: start(V,V12,V63) = 0+ atom(V,W63):2
     [V>=W63+1,W63>=0] 
* CE 441: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):1
     [Y63=2,X63=0,W63=0,V12=0,V=0] 
* CE 442: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):2
     [V12>=1,X63=1,W63=0,V=0] 
* CE 443: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):3
     [Y63=1,X63=3,W63=0,V12=3,V=0] 
* CE 444: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):4
     [Y63=1,X63=4,W63=0,V12=4,V=0] 
* CE 445: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):5
     [Y63=2,X63=1,W63=1,V12=1,V=1] 
* CE 446: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):6
     [V12>=1,X63=1,W63=1,V=1] 
* CE 447: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):7
     [V>=1,X63=1,W63=0,V12=0] 
* CE 448: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):8
     [V12>=1,X63=1,W63=2,V=2] 
* CE 449: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):9
     [Y63=1,X63=0,W63=3,V12=0,V=3] 
* CE 450: start(A,A,B) = 0+ eqAlph(A,A,C):10
     [A>=2,C=2] 
* CE 451: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):11
     [V12>=1,X63=1,W63=3,V=3] 
* CE 452: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):12
     [Y63=1,X63=0,W63=4,V12=0,V=4] 
* CE 453: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):13
     [Y63=2,X63=4,W63=4,V12=4,V=4] 
* CE 454: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):14
     [V12>=1,X63=1,W63=4,V=4] 
* CE 455: start(V,V12,V63) = 0+ eqAlph(W63,X63,Y63):15
     [Y63=2,X63=5,W63=5,V12=5,V=5] 
* CE 456: start(V,V12,V63) = 0+ eqAlph(W63,V12,X63):16
     [V12>=1,X63=1,W63=5,V=5] 
* CE 457: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):17
     [V>=1,X63=1,W63=1,V12=1] 
* CE 458: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):18
     [V>=1,X63=1,W63=2,V12=2] 
* CE 459: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):19
     [V>=1,X63=1,W63=3,V12=3] 
* CE 460: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):20
     [V>=1,X63=1,W63=4,V12=4] 
* CE 461: start(V,V12,V63) = 0+ eqAlph(V,W63,X63):21
     [V>=1,X63=1,W63=5,V12=5] 
* CE 462: start(V,V12,V63) = 0+ eqAlph(V,V12,W63):22
     [V12>=0,V>=0,W63=0] 
* CE 463: start(V,V12,V63) = 0+ eqAlph(V,V12,W63):23
     [V12>=V+1,V>=2,W63=1] 
* CE 464: start(V,V12,V63) = 0+ eqAlph(V,V12,W63):24
     [V>=V12+1,V12>=2,W63=1] 
* CE 465: start(V,V12,V63) = 0+ notEmpty(W63,X63):1
     [X63=1,W63=0,V=0] 
* CE 466: start(V,V12,V63) = 0+ notEmpty(V,W63):2
     [V>=0,W63=0] 
* CE 467: start(V,V12,V63) = 0+ notEmpty(V,W63):3
     [V>=1,W63=2] 
* CE 468: start(V,V12,V63) = 1+ expr(V,W63):1
     [V>=0,W63=0] 
* CE 469: start(V,V12,V63) = 1+ expr(V,W63):2
     [W63>=0,V>=2] 
* CE 470: start(V,V12,V63) = 1+ expr(W63,X63):3
     [X63>=10,X63=3*W63+4,X63=3*V+4] 
* CE 471: start(V,V12,V63) = 1+ expr(W63,X63):4
     [X63>=9,X63=3*W63+3,X63=3*V+3] 
* CE 472: start(V,V12,V63) = 1+ expr(W63,X63):5
     [X63>=8,X63=3*W63+2,X63=3*V+2] 
* CE 473: start(V,V12,V63) = 1+ expr(W63,X63):6
     [X63>=7,X63=3*W63+1,X63=3*V+1] 
* CE 474: start(V,V12,V63) = 1+ expr(V,W63):7
     [W63>=0,V>=2] 
* CE 475: start(V,V12,V63) = 0+ expr(V,W63):1
     [V>=0,W63=0] 
* CE 476: start(V,V12,V63) = 0+ expr(V,W63):2
     [W63>=0,V>=2] 
* CE 477: start(V,V12,V63) = 0+ expr(W63,X63):3
     [X63>=10,X63=3*W63+4,X63=3*V+4] 
* CE 478: start(V,V12,V63) = 0+ expr(W63,X63):4
     [X63>=9,X63=3*W63+3,X63=3*V+3] 
* CE 479: start(V,V12,V63) = 0+ expr(W63,X63):5
     [X63>=8,X63=3*W63+2,X63=3*V+2] 
* CE 480: start(V,V12,V63) = 0+ expr(W63,X63):6
     [X63>=7,X63=3*W63+1,X63=3*V+1] 
* CE 481: start(V,V12,V63) = 0+ expr(V,W63):7
     [W63>=0,V>=2] 
* CE 482: start(V,V12,V63) = 0+ and(W63,X63,Y63):1
     [Y63=1,X63=1,W63=1,V12=1,V=1] 
* CE 483: start(V,V12,V63) = 0+ and(W63,X63,Y63):2
     [Y63=1,X63=2,W63=1,V12=2,V=1] 
* CE 484: start(V,V12,V63) = 0+ and(W63,X63,Y63):3
     [Y63=1,X63=1,W63=2,V12=1,V=2] 
* CE 485: start(V,V12,V63) = 0+ and(W63,X63,Y63):4
     [Y63=2,X63=2,W63=2,V12=2,V=2] 
* CE 486: start(V,V12,V63) = 0+ and(V,V12,W63):5
     [V12>=0,V>=0,W63=0] 
* CE 487: start(V,V12,V63) = 0+ fun2(W63,X63,Y63):1
     [Y63=2,X63=0,W63=0,V12=0,V=0] 
* CE 488: start(V,V12,V63) = 0+ fun2(W63,V12,X63):2
     [V12>=1,X63=1,W63=0,V=0] 
* CE 489: start(V,V12,V63) = 0+ fun2(V,W63,X63):3
     [V>=1,X63=1,W63=0,V12=0] 
* CE 490: start(V,V12,V63) = 0+ fun2(V,V12,W63):4
     [V12>=0,V>=0,W63=0] 
* CE 491: start(V,V12,V63) = 0+ fun2(V,V12,W63):5
     [V12>=V+1,V>=1,W63=1] 
* CE 492: start(V,V12,V63) = 0+ fun2(V,V12,W63):6
     [V>=V12+1,V12>=1,W63=1] 
* CE 493: start(A,A,B) = 0+ fun2(A,A,C):7
     [A>=1,C=2] 
* CE 494: start(V,V12,V63) = 0+ fun(W63,X63,Y63):1
     [Y63>=2,Y63=W63+2,Y63=V+2,X63=0,V12=0] 
* CE 495: start(V,V12,V63) = 0+ fun(W63,X63,Y63):2
     [Y63>=1,Y63=W63+1,Y63=V+1,X63=0,V12=0] 
* CE 496: start(V,V12,V63) = 0+ fun(V,V12,W63):3
     [V12>=0,V>=0,W63=0] 
* CE 497: start(V,V12,V63) = 0+ fun(V,W63,X63):4
     [X63>=V+9,V>=0,X63=V+W63+3,X63=V+V12+3] 
* CE 498: start(V,V12,V63) = 0+ fun(V,W63,X63):5
     [X63>=V+3,V>=0,X63=V+W63+2,X63=V+V12+2] 
* CE 499: start(V,V12,V63) = 0+ fun3(V,V12,W63):1
     [V12>=0,V>=0,W63=0] 
* CE 500: start(V,V12,V63) = 0+ fun3(V,W63,X63):2
     [X63>=V+4,V>=0,X63=V+W63+3,X63=V+V12+3] 
* CE 501: start(V,V12,V63) = 0+ fun3(V,W63,X63):3
     [X63>=V+3,V>=0,X63=V+W63+2,X63=V+V12+2] 
* CE 502: start(V,V12,V63) = 0+ fun3(V,W63,X63):4
     [X63>=V+2,V>=0,X63=V+W63+1,X63=V+V12+1] 
* CE 503: start(V,V12,V63) = 0+ fun4(V,V12,W63):1
     [V12>=0,V>=0,W63=0] 
* CE 504: start(V,V12,V63) = 0+ fun4(V,W63,X63):2
     [X63>=V+4,V>=0,X63=V+W63+3,X63=V+V12+3] 
* CE 505: start(V,V12,V63) = 0+ fun4(V,W63,X63):3
     [X63>=V+3,V>=0,X63=V+W63+2,X63=V+V12+2] 
* CE 506: start(V,V12,V63) = 0+ fun4(V,W63,X63):4
     [X63>=V+2,V>=0,X63=V+W63+1,X63=V+V12+1] 

### Cost equations --> "Loop" of start/3 
* CEs [457] --> Loop 162 
* CEs [435,455,456] --> Loop 163 
* CEs [434,453,454] --> Loop 164 
* CEs [452] --> Loop 165 
* CEs [433,451] --> Loop 166 
* CEs [437,447,449,489,494,495] --> Loop 167 
* CEs [450,485,493] --> Loop 168 
* CEs [432,448,484] --> Loop 169 
* CEs [421,461] --> Loop 170 
* CEs [420,460] --> Loop 171 
* CEs [419,459] --> Loop 172 
* CEs [418,458,483] --> Loop 173 
* CEs [416,417,430,431,445,446,482] --> Loop 174 
* CEs [413,414,415,422,423,424] --> Loop 175 
* CEs [318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,406,407,408,409,410,411,412,425,426,427,428,429,436,438,439,440,441,442,443,444,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,479,480,486,487,488,490,491,492,496,497,498,499,500,501,502,503,504,505,506] --> Loop 176 
* CEs [382,403,474,481] --> Loop 177 

#### Loops of start/3 
* Loop 162: start(V,V12,V63) [V>=1,V12=1] 
* Loop 163: start(V,V12,V63) [V12>=1,V=5] 
* Loop 164: start(V,V12,V63) [V12>=1,V=4] 
* Loop 165: start(V,V12,V63) [V12=0,V=4] 
* Loop 166: start(V,V12,V63) [V12>=1,V=3] 
* Loop 167: start(V,V12,V63) [V>=0,V12=0] 
* Loop 168: start(A,A,B) [A>=1] 
* Loop 169: start(V,V12,V63) [V12>=1,V=2] 
* Loop 170: start(V,V12,V63) [V>=1,V12=5] 
* Loop 171: start(V,V12,V63) [V>=1,V12=4] 
* Loop 172: start(V,V12,V63) [V>=1,V12=3] 
* Loop 173: start(V,V12,V63) [V>=1,V12=2] 
* Loop 174: start(V,V12,V63) [V12>=1,V=1] 
* Loop 175: start(V,V12,V63) [V63>=1,V12>=0,V=1] 
* Loop 176: start(V,V12,V63) [V>=0] 
* Loop 177: start(V,V12,V63) [V>=2] 

### Ranking functions of CR start(V,V12,V63) 

#### Partial ranking functions of CR start(V,V12,V63) 


### Resulting Chains:start(V,V12,V63) 
* [177]...
* [176]
* [175]
* [174]
* [173]
* [172]
* [171]
* [170]
* [169]
* [168]
* [167]
* [166]
* [165]
* [164]
* [163]
* [162]


### Merging Chains  start/3 into  External patterns of execution 
* [[175],[176]] --> 1 
* [[174]] --> 2 
* [[169]] --> 3 
* [[166]] --> 4 
* [[165],[167]] --> 5 
* [[164]] --> 6 
* [[163]] --> 7 
* [[162]] --> 8 
* [[173]] --> 9 
* [[172]] --> 10 
* [[171]] --> 11 
* [[170]] --> 12 
* [[168]] --> 13 
* [[177]] --> 14 


Computing Bounds
=====================================

#### Cost of chains of and(V,V12,Out):
* Chain [66]: 0
  with precondition: [V=1,V12=1,Out=1] 

* Chain [65]: 0
  with precondition: [V=1,V12=2,Out=1] 

* Chain [64]: 0
  with precondition: [V=2,V12=1,Out=1] 

* Chain [63]: 0
  with precondition: [V=2,V12=2,Out=2] 

* Chain [62]: 0
  with precondition: [Out=0,V>=0,V12>=0] 


#### Cost of chains of atom(V,Out):
* Chain [68]: 1
  with precondition: [Out=0,V>=0] 

* Chain [67]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of loops [69] 

 * loop 69:fun2(V,V12,Out) -> [fun2(V',V12',Out')] 
0
#### Cost of phase [69]:fun2(V,V12,Out) -> [fun2(V',V12',Out')] 
0
#### Cost of phase [69]:fun2(V,V12,Out) -> [fun2(V',V12',Out')] 
0
#### Cost of phase [69]:fun2(V,V12,Out) -> [fun2(V',V12',Out')] 
0
#### Cost of phase [69]:fun2(V,V12,Out) -> [fun2(V',V12',Out')] 
0
#### Cost of chains of fun2(V,V12,Out):
* Chain [[69],73]: 0
  with precondition: [Out=2,V=V12,V>=1] 

* Chain [[69],72]: 0
  with precondition: [Out=1,V>=1,V12>=V+1] 

* Chain [[69],71]: 0
  with precondition: [Out=1,V12>=1,V>=V12+1] 

* Chain [[69],70]: 0
  with precondition: [Out=0,V>=1,V12>=1] 

* Chain [73]: 0
  with precondition: [V=0,V12=0,Out=2] 

* Chain [72]: 0
  with precondition: [V=0,Out=1,V12>=1] 

* Chain [71]: 0
  with precondition: [V12=0,Out=1,V>=1] 

* Chain [70]: 0
  with precondition: [Out=0,V>=0,V12>=0] 


#### Cost of chains of eqAlph(V,V12,Out):
* Chain [102]: 1
  with precondition: [V=0,V12=0,Out=2] 

* Chain [101]: 1
  with precondition: [V=0,Out=1,V12>=1] 

* Chain [100]: 1
  with precondition: [V=0,V12=2,Out=1] 

* Chain [99]: 1
  with precondition: [V=0,V12=3,Out=1] 

* Chain [98]: 1
  with precondition: [V=0,V12=4,Out=1] 

* Chain [97]: 1
  with precondition: [V12=0,Out=1,V>=1] 

* Chain [96]: 1
  with precondition: [V=1,V12=1,Out=2] 

* Chain [95]: 1
  with precondition: [V=1,Out=1,V12>=1] 

* Chain [94]: 1
  with precondition: [V12=3,Out=1,V>=1] 

* Chain [93]: 1
  with precondition: [V12=4,Out=1,V>=1] 

* Chain [92]: 1
  with precondition: [V=2,V12=0,Out=1] 

* Chain [91]: 1
  with precondition: [V=2,Out=1,V12>=1] 

* Chain [90]: 1
  with precondition: [Out=2,V12=V,V12>=2] 

* Chain [89]: 1
  with precondition: [Out=1,V>=2,V12>=V+1] 

* Chain [88]: 1
  with precondition: [V=2,V12=4,Out=1] 

* Chain [87]: 1
  with precondition: [V=3,V12=0,Out=1] 

* Chain [86]: 1
  with precondition: [V=3,Out=1,V12>=1] 

* Chain [85]: 1
  with precondition: [V=3,V12=3,Out=2] 

* Chain [84]: 1
  with precondition: [V=3,V12=4,Out=1] 

* Chain [83]: 1
  with precondition: [V=4,V12=0,Out=1] 

* Chain [82]: 1
  with precondition: [V=4,Out=1,V12>=1] 

* Chain [81]: 1
  with precondition: [V12=2,Out=1,V>=1] 

* Chain [80]: 1
  with precondition: [Out=1,V12>=2,V>=V12+1] 

* Chain [79]: 1
  with precondition: [V=4,V12=4,Out=2] 

* Chain [78]: 1
  with precondition: [V=5,V12=5,Out=2] 

* Chain [77]: 1
  with precondition: [V=5,Out=1,V12>=1] 

* Chain [76]: 1
  with precondition: [V12=1,Out=1,V>=1] 

* Chain [75]: 1
  with precondition: [V12=5,Out=1,V>=1] 

* Chain [74]: 1
  with precondition: [Out=0,V>=0,V12>=0] 


#### Cost of loops [108] 

 * loop 108:member(V,V12,Out) -> [member(V',V12',Out')] 
2
#### Cost of phase [108]:member(V,V12,Out) -> [member(V',V12',Out')] 
2*it(108)+0
  Such that:it(108) =< V12
it(108) =< V12-V12'

#### Cost of phase [108]:member(V,V12,Out) -> [member(V',V12',Out')] 
2*it(108)+0
  Such that:it(108) =< V12
it(108) =< V12-V12'

#### Cost of phase [108]:member(V,V12,Out) -> [member(V',V12',Out')] 
2*it(108)+0
  Such that:it(108) =< V12
it(108) =< V12-V12'

#### Cost of loops [103,104,105,106,107] 

 * loop 103:member(V,V12,Out) -> [member(V',V12',Out')] 
2
 * loop 104:member(V,V12,Out) -> [member(V',V12',Out')] 
2
 * loop 105:member(V,V12,Out) -> [member(V',V12',Out')] 
2
 * loop 106:member(V,V12,Out) -> [member(V',V12',Out')] 
2
 * loop 107:member(V,V12,Out) -> [member(V',V12',Out')] 
2
#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of phase [103,104,105,106,107]:member(V,V12,Out) -> [member(V',V12',Out')] 
10*it(103)+0
  Such that:aux(1) =< V12
aux(2) =< V12-V12'
it(103) =< aux(1)
it(103) =< aux(2)

#### Cost of chains of member(V,V12,Out):
* Chain [[108],119]: 2*it(108)+2
  Such that:it(108) =< V12

  with precondition: [V=0,Out=0,V12>=2] 

* Chain [[108],118]: 2*it(108)+2
  Such that:it(108) =< V12

  with precondition: [V=0,Out=2,V12>=2] 

* Chain [[108],109]: 2*it(108)+1
  Such that:it(108) =< V12

  with precondition: [V=0,Out=1,V12>=2] 

* Chain [[103,104,105,106,107],119]: 10*it(103)+2
  Such that:aux(3) =< V12
it(103) =< aux(3)

  with precondition: [Out=0,V>=1,V12>=1] 

* Chain [[103,104,105,106,107],117]: 10*it(103)+2
  Such that:aux(4) =< V12
it(103) =< aux(4)

  with precondition: [V=1,Out=0,V12>=3] 

* Chain [[103,104,105,106,107],116]: 10*it(103)+2
  Such that:aux(5) =< V12
it(103) =< aux(5)

  with precondition: [V=1,Out=2,V12>=3] 

* Chain [[103,104,105,106,107],115]: 10*it(103)+2
  Such that:aux(6) =< V12
it(103) =< aux(6)

  with precondition: [V=2,Out=0,V12>=3] 

* Chain [[103,104,105,106,107],114]: 10*it(103)+2
  Such that:aux(7) =< V12
it(103) =< aux(7)

  with precondition: [V=3,Out=0,V12>=2] 

* Chain [[103,104,105,106,107],113]: 10*it(103)+2
  Such that:aux(8) =< V12
it(103) =< aux(8)

  with precondition: [V=4,Out=0,V12>=2] 

* Chain [[103,104,105,106,107],112]: 10*it(103)+2
  Such that:aux(2) =< -V+V12
aux(1) =< V12
it(103) =< aux(1)
it(103) =< aux(2)

  with precondition: [Out=2,V>=2,V12>=V+2] 

* Chain [[103,104,105,106,107],111]: 10*it(103)+2
  Such that:aux(9) =< V12
it(103) =< aux(9)

  with precondition: [V=5,Out=0,V12>=3] 

* Chain [[103,104,105,106,107],110]: 10*it(103)+2
  Such that:aux(10) =< V12
it(103) =< aux(10)

  with precondition: [V=5,Out=2,V12>=7] 

* Chain [[103,104,105,106,107],109]: 10*it(103)+1
  Such that:aux(11) =< V12
it(103) =< aux(11)

  with precondition: [Out=1,V>=1,V12>=1] 

* Chain [119]: 2
  with precondition: [Out=0,V>=0,V12>=0] 

* Chain [118]: 2
  with precondition: [V=0,Out=2,V12>=1] 

* Chain [117]: 2
  with precondition: [V=1,Out=0,V12>=2] 

* Chain [116]: 2
  with precondition: [V=1,Out=2,V12>=2] 

* Chain [115]: 2
  with precondition: [V=2,Out=0,V12>=2] 

* Chain [114]: 2
  with precondition: [V=3,Out=0,V12>=1] 

* Chain [113]: 2
  with precondition: [V=4,Out=0,V12>=1] 

* Chain [112]: 2
  with precondition: [Out=2,V>=2,V12>=V+1] 

* Chain [111]: 2
  with precondition: [V=5,Out=0,V12>=2] 

* Chain [110]: 2
  with precondition: [V=5,Out=2,V12>=6] 

* Chain [109]: 1
  with precondition: [V12=0,Out=1,V>=0] 


#### Cost of chains of fun4(V,V12,Out):
* Chain [123]: 0
  with precondition: [Out=0,V>=0,V12>=0] 

* Chain [122]: 258
  with precondition: [V+V12+3=Out,V>=0,V12>=1] 

* Chain [121]: 97
  with precondition: [V+V12+2=Out,V>=0,V12>=1] 

* Chain [120]: 498
  with precondition: [V+V12+1=Out,V>=0,V12>=1] 


#### Cost of chains of head(V,Out):
* Chain [125]: 0
  with precondition: [Out=0,V>=0] 

* Chain [124]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of fun(V,V12,Out):
* Chain [130]: 1
  with precondition: [V12=0,V+2=Out,V>=0] 

* Chain [129]: 1
  with precondition: [V12=0,V+1=Out,V>=0] 

* Chain [128]: 0
  with precondition: [Out=0,V>=0,V12>=0] 

* Chain [127]: 0
  with precondition: [V+V12+3=Out,V>=0,V12>=6] 

* Chain [126]: 0
  with precondition: [V+V12+2=Out,V>=0,V12>=1] 


#### Cost of chains of fun3(V,V12,Out):
* Chain [134]: 0
  with precondition: [Out=0,V>=0,V12>=0] 

* Chain [133]: 162
  with precondition: [V+V12+3=Out,V>=0,V12>=1] 

* Chain [132]: 61
  with precondition: [V+V12+2=Out,V>=0,V12>=1] 

* Chain [131]: 312
  with precondition: [V+V12+1=Out,V>=0,V12>=1] 


#### Cost of loops [135,136,137,138,139,140,141,142,143,144,145,146,147] 

 * loop 135:expr(V,Out) -> [expr(V',Out')] 
813
 * loop 136:expr(V,Out) -> [expr(V',Out')] 
813
 * loop 137:expr(V,Out) -> [expr(V',Out')] 
663
 * loop 138:expr(V,Out) -> [expr(V',Out')] 
663
 * loop 139:expr(V,Out) -> [expr(V',Out')] 
423
 * loop 140:expr(V,Out) -> [expr(V',Out')] 
423
 * loop 141:expr(V,Out) -> [expr(V',Out')] 
814
 * loop 142:expr(V,Out) -> [expr(V',Out')] 
814
 * loop 143:expr(V,Out) -> [expr(V',Out')] 
664
 * loop 144:expr(V,Out) -> [expr(V',Out')] 
664
 * loop 145:expr(V,Out) -> [expr(V',Out')] 
424
 * loop 146:expr(V,Out) -> [expr(V',Out')] 
424
 * loop 147:expr(V,Out) -> [expr(V',Out')] 
316
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of phase [135,136,137,138,139,140,141,142,143,144,145,146,147]:expr(V,Out) -> [expr(V',Out')] 
7918*it(135)+0
#### Cost of chains of expr(V,Out):
* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147]]...: 7918*it(135)+0
  with precondition: [Out>=0,V>=2] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],158]: 7918*it(135)+315
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],157]: 7918*it(135)+423
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],156]: 7918*it(135)+322
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],155]: 7918*it(135)+663
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],154]: 7918*it(135)+562
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],153]: 7918*it(135)+813
  with precondition: [V>=2,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],152]: 7918*it(135)+813
  with precondition: [V>=3,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],151]: 7918*it(135)+562
  with precondition: [V>=3,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],150]: 7918*it(135)+663
  with precondition: [V>=3,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],149]: 7918*it(135)+322
  with precondition: [V>=3,Out>=0] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147],148]: 7918*it(135)+423
  with precondition: [V>=3,Out>=0] 

* Chain [158]: 315
  with precondition: [Out=0,V>=0] 

* Chain [157]: 423
  with precondition: [3*V+5=Out,V>=2] 

* Chain [156]: 322
  with precondition: [3*V+4=Out,V>=2] 

* Chain [155]: 663
  with precondition: [3*V+3=Out,V>=2] 

* Chain [154]: 562
  with precondition: [3*V+2=Out,V>=2] 

* Chain [153]: 813
  with precondition: [3*V+1=Out,V>=2] 

* Chain [152]: 813
  with precondition: [Out>=2*V+3,3*V>=Out] 

* Chain [151]: 562
  with precondition: [Out>=2*V+4,3*V+1>=Out] 

* Chain [150]: 663
  with precondition: [Out>=2*V+5,3*V+2>=Out] 

* Chain [149]: 322
  with precondition: [Out>=2*V+6,3*V+3>=Out] 

* Chain [148]: 423
  with precondition: [Out>=2*V+7,3*V+4>=Out] 


#### Cost of chains of notEmpty(V,Out):
* Chain [161]: 1
  with precondition: [V=0,Out=1] 

* Chain [160]: 0
  with precondition: [Out=0,V>=0] 

* Chain [159]: 1
  with precondition: [Out=2,V>=1] 


#### Cost of chains of start(V,V12,V63):
* Chain [177]...: 1*aux(21)+0
  with precondition: [V>=2] 

* Chain [176]: 24*s(81)+36*s(104)+10*s(109)+1127
  Such that:s(107) =< -V+V12
aux(22) =< V12
s(104) =< aux(22)
s(109) =< aux(22)
s(109) =< s(107)

  with precondition: [V>=0] 

* Chain [175]: 36*s(116)+10*s(121)+2
  Such that:s(119) =< -V12+V63
aux(23) =< V63
s(116) =< aux(23)
s(121) =< aux(23)
s(121) =< s(119)

  with precondition: [V=1,V12>=0,V63>=1] 

* Chain [174]: 20*s(126)+20*s(130)+2
  Such that:aux(24) =< V12
aux(25) =< V63
s(130) =< aux(24)
s(126) =< aux(25)

  with precondition: [V=1,V12>=1] 

* Chain [173]: 10*s(134)+2
  Such that:s(133) =< V63
s(134) =< s(133)

  with precondition: [V12=2,V>=1] 

* Chain [172]: 10*s(136)+2
  Such that:s(135) =< V63
s(136) =< s(135)

  with precondition: [V12=3,V>=1] 

* Chain [171]: 10*s(138)+2
  Such that:s(137) =< V63
s(138) =< s(137)

  with precondition: [V12=4,V>=1] 

* Chain [170]: 10*s(140)+2
  Such that:s(139) =< V63
s(140) =< s(139)

  with precondition: [V12=5,V>=1] 

* Chain [169]: 10*s(142)+2
  Such that:s(141) =< V12
s(142) =< s(141)

  with precondition: [V=2,V12>=1] 

* Chain [168]: 1
  with precondition: [V=V12,V>=1] 

* Chain [167]: 1
  with precondition: [V12=0,V>=0] 

* Chain [166]: 10*s(144)+2
  Such that:s(143) =< V12
s(144) =< s(143)

  with precondition: [V=3,V12>=1] 

* Chain [165]: 1
  with precondition: [V=4,V12=0] 

* Chain [164]: 10*s(146)+2
  Such that:s(145) =< V12
s(146) =< s(145)

  with precondition: [V=4,V12>=1] 

* Chain [163]: 10*s(148)+2
  Such that:s(147) =< V12
s(148) =< s(147)

  with precondition: [V=5,V12>=1] 

* Chain [162]: 1
  with precondition: [V12=1,V>=1] 


Closed-form bounds of start(V,V12,V63): 
-------------------------------------
* Chain [177]... with precondition: [V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [176] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [175] with precondition: [V=1,V12>=0,V63>=1] 
    - Upper bound: 46*V63+2 
    - Complexity: n 
* Chain [174] with precondition: [V=1,V12>=1] 
    - Upper bound: 20*V12+2+nat(V63)*20 
    - Complexity: n 
* Chain [173] with precondition: [V12=2,V>=1] 
    - Upper bound: nat(V63)*10+2 
    - Complexity: n 
* Chain [172] with precondition: [V12=3,V>=1] 
    - Upper bound: nat(V63)*10+2 
    - Complexity: n 
* Chain [171] with precondition: [V12=4,V>=1] 
    - Upper bound: nat(V63)*10+2 
    - Complexity: n 
* Chain [170] with precondition: [V12=5,V>=1] 
    - Upper bound: nat(V63)*10+2 
    - Complexity: n 
* Chain [169] with precondition: [V=2,V12>=1] 
    - Upper bound: 10*V12+2 
    - Complexity: n 
* Chain [168] with precondition: [V=V12,V>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [167] with precondition: [V12=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [166] with precondition: [V=3,V12>=1] 
    - Upper bound: 10*V12+2 
    - Complexity: n 
* Chain [165] with precondition: [V=4,V12=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [164] with precondition: [V=4,V12>=1] 
    - Upper bound: 10*V12+2 
    - Complexity: n 
* Chain [163] with precondition: [V=5,V12>=1] 
    - Upper bound: 10*V12+2 
    - Complexity: n 
* Chain [162] with precondition: [V12=1,V>=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V12,V63): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 155 ms.
* Invariants computed in 219 ms.
   - Backward Invariants 167 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 788 ms.
* Termination proved in 15 ms.
* Upper bounds computed in 380 ms.
   - Equation cost structures 280 ms.
   - Phase cost structures 108 ms.
   - Chain cost structures 49 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 1655 ms.

