
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive [non_tail] : [naiverev/2]
2. non_recursive  : [goal/2]
3. non_recursive  : [notEmpty/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into naiverev/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into notEmpty/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations app/3 
* CE 12: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 13: app(V,V3,Out) = 1+ app(W3,V3,X3)
     [V+X3>=Out,Out>=X3+1,V3>=0,V+X3=Out+W3] 

### Cost equations --> "Loop" of app/3 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of app/3 
* Loop 8: app(V,V3,Out)->  app(V',V3,Out')
                  [V+Out'>=Out,Out>=Out'+1,V3>=0,V+Out'=Out+V'] 
* Loop 9: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V,V3,Out) 
* RF of phase [8]: [V]

#### Partial ranking functions of CR app(V,V3,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V


### Resulting Chains:app(V,V3,Out) 
* [[8],9]
* [9]


### Merging Chains  app/3 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[8]]] --> 2 


### Specialization of cost equations naiverev/2 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15,16] 


#### Refined cost equations naiverev/2 
* CE 14: naiverev(V,Out) = 1
     [Out=0,V=0] 
* CE 15: naiverev(V,Out) = 1+ naiverev(W,X)+ app(Y,Out,Out):1
     [V>=Out,Out>=1,Out+W=V,X=0,Y=0] 
* CE 16: naiverev(V,Out) = 1+ naiverev(W,X)+ app(X,Y,Out):2
     [V+X>=Out,Out>=X+1,X>=1,Out+W=V+X,Out=X+Y] 

### Cost equations --> "Loop" of naiverev/2 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of naiverev/2 
* Loop 10: naiverev(V,Out)->  naiverev(V',Out')
                  [Out+V'>=V+1,V>=V'+1,V'>=0,V+Out'=Out+V'] 
* Loop 11: naiverev(V,Out)->  naiverev(V',Out')
                  [V>=Out,Out>=1,V=Out+V',Out'=0] 
* Loop 12: naiverev(V,Out) [Out=0,V=0] 

### Ranking functions of CR naiverev(V,Out) 
* RF of phase [10]: [V]

#### Partial ranking functions of CR naiverev(V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V


### Resulting Chains:naiverev(V,Out) 
* [[10],11,12]
* [12]
* [11,12]


### Merging Chains  naiverev/2 into  External patterns of execution 
* [[12]] --> 1 
* [[12,11],[12,11,[10]]] --> 2 


### Specialization of cost equations notEmpty/2 
* CE 10 is refined into CE [17] 
* CE 11 is refined into CE [18] 


#### Refined cost equations notEmpty/2 
* CE 17: notEmpty(V,Out) = 1
     [V>=1,Out=1] 
* CE 18: notEmpty(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [17] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of notEmpty/2 
* Loop 13: notEmpty(V,Out) [V>=1,Out=1] 
* Loop 14: notEmpty(V,Out) [Out=0,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [14]
* [13]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [19,20] 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23,24] 
* CE 5 is refined into CE [25,26] 


#### Refined cost equations start/2 
* CE 19: start(V,V3) = 0+ naiverev(W3,X3):1
     [X3=0,W3=0,V=0] 
* CE 20: start(V,V3) = 0+ naiverev(V,V):2
     [V>=1] 
* CE 21: start(V,V3) = 0+ app(W3,V3,V3):1
     [V3>=0,W3=0,V=0] 
* CE 22: start(V,V3) = 0+ app(V,W3,X3):2
     [X3>=V,V>=1,X3=V+W3,X3=V+V3] 
* CE 23: start(V,V3) = 0+ notEmpty(W3,X3):1
     [X3=0,W3=0,V=0] 
* CE 24: start(V,V3) = 0+ notEmpty(V,W3):2
     [V>=1,W3=1] 
* CE 25: start(V,V3) = 1+ naiverev(W3,X3):1
     [X3=0,W3=0,V=0] 
* CE 26: start(V,V3) = 1+ naiverev(V,V):2
     [V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [20,22,24,26] --> Loop 15 
* CEs [19,21,23,25] --> Loop 16 

#### Loops of start/2 
* Loop 15: start(V,V3) [V>=1] 
* Loop 16: start(V,V3) [V=0] 

### Ranking functions of CR start(V,V3) 

#### Partial ranking functions of CR start(V,V3) 


### Resulting Chains:start(V,V3) 
* [16]
* [15]


### Merging Chains  start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:app(V,V3,Out) -> [app(V',V3',Out')] 
1
#### Cost of phase [8]:app(V,V3,Out) -> [app(V',V3',Out')] 
1*it(8)+0
  Such that:it(8) =< V
it(8) =< V-V'

#### Cost of chains of app(V,V3,Out):
* Chain [[8],9]: 1*it(8)+1
  Such that:it(8) =< -V3+Out

  with precondition: [V+V3=Out,V>=1,V3>=0] 

* Chain [9]: 1
  with precondition: [V=0,V3=Out,V3>=0] 


#### Cost of loops [10] 

 * loop 10:naiverev(V,Out) -> [naiverev(V',Out')] 
1*s(2)+2
  Such that:s(2) =< V'

#### Cost of phase [10]:naiverev(V,Out) -> [naiverev(V',Out')] 
2*it(10)+1*s(3)+0
  Such that:it(10) =< V-V'
aux(2) =< V
it(10) =< aux(2)
s(3) =< it(10)*aux(2)

#### Cost of chains of naiverev(V,Out):
* Chain [[10],11,12]: 2*it(10)+1*s(3)+3
  Such that:aux(3) =< Out
it(10) =< aux(3)
s(3) =< it(10)*aux(3)

  with precondition: [Out=V,Out>=2] 

* Chain [12]: 1
  with precondition: [V=0,Out=0] 

* Chain [11,12]: 3
  with precondition: [V=Out,V>=1] 


#### Cost of chains of notEmpty(V,Out):
* Chain [14]: 1
  with precondition: [V=0,Out=0] 

* Chain [13]: 1
  with precondition: [Out=1,V>=1] 


#### Cost of chains of start(V,V3):
* Chain [16]: 2
  with precondition: [V=0] 

* Chain [15]: 5*s(8)+2*s(9)+4
  Such that:aux(4) =< V
s(8) =< aux(4)
s(9) =< s(8)*aux(4)

  with precondition: [V>=1] 


Closed-form bounds of start(V,V3): 
-------------------------------------
* Chain [16] with precondition: [V=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [15] with precondition: [V>=1] 
    - Upper bound: 5*V+4+2*V*V 
    - Complexity: n^2 

### Maximum cost of start(V,V3): 5*V+2+2*V*V+2 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 80 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 73 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 28 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 258 ms.

