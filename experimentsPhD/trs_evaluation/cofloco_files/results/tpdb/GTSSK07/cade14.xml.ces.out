
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [equal/3]
1. recursive  : [gt/3]
2. recursive  : [cond1/4,cond2/4,diff/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into equal/3
1. SCC is partially evaluated into gt/3
2. SCC is partially evaluated into diff/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations equal/3 
* CE 19 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 18 is refined into CE [22] 
* CE 16 is refined into CE [23] 


#### Refined cost equations equal/3 
* CE 20: equal(V1,V,Out) = 1+ equal(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 21: equal(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 22: equal(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 23: equal(V1,V,Out) = 1
     [Out=1,V=0,V1=0] 

### Cost equations --> "Loop" of equal/3 
* CEs [21] --> Loop 13 
* CEs [22] --> Loop 14 
* CEs [23] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of equal/3 
* Loop 13: equal(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 14: equal(V1,V,Out) [V>=1,Out=0,V1=0] 
* Loop 15: equal(V1,V,Out) [Out=1,V=0,V1=0] 
* Loop 16: equal(V1,V,Out)->  equal(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR equal(V1,V,Out) 
* RF of phase [16]: [V,V1]

#### Partial ranking functions of CR equal(V1,V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V
    V1


### Resulting Chains:equal(V1,V,Out) 
* [[16],15]
* [[16],14]
* [[16],13]
* [15]
* [14]
* [13]


### Merging Chains  equal/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 
* [[14,[16]]] --> 4 
* [[13,[16]]] --> 5 
* [[15,[16]]] --> 6 


### Specialization of cost equations gt/3 
* CE 12 is refined into CE [24] 
* CE 11 is refined into CE [25] 
* CE 10 is refined into CE [26] 


#### Refined cost equations gt/3 
* CE 24: gt(V1,V,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 25: gt(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 26: gt(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of gt/3 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of gt/3 
* Loop 17: gt(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 18: gt(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 19: gt(V1,V,Out)->  gt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR gt(V1,V,Out) 
* RF of phase [19]: [V,V1]

#### Partial ranking functions of CR gt(V1,V,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V
    V1


### Resulting Chains:gt(V1,V,Out) 
* [[19],18]
* [[19],17]
* [18]
* [17]


### Merging Chains  gt/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[18,[19]]] --> 3 
* [[17,[19]]] --> 4 


### Specialization of cost equations diff/3 
* CE 14 is refined into CE [27,28] 
* CE 15 is refined into CE [29,30] 
* CE 13 is refined into CE [31,32] 


#### Refined cost equations diff/3 
* CE 27: diff(V1,V,Out) = 3+ equal(V1,W1,X1):3+ gt(V1,Y1,Z1):2+ diff(V1,A2,B2)
     [V1>=1,B2+1=Out,A2=1,Z1=1,Y1=0,X1=0,W1=0,V=0] 
* CE 28: diff(V1,V,Out) = 3+ equal(V1,V,W1):5+ gt(V1,V,X1):4+ diff(V1,Y1,Z1)
     [V1>=V+1,V>=1,V+1=Y1,Z1+1=Out,X1=1,W1=0] 
* CE 29: diff(V1,V,Out) = 3+ equal(W1,V,X1):2+ gt(Y1,V,Z1):1+ diff(A2,V,B2)
     [V>=1,B2+1=Out,A2=1,Z1=0,Y1=0,X1=0,W1=0,V1=0] 
* CE 30: diff(V1,V,Out) = 3+ equal(V1,V,W1):4+ gt(V1,V,X1):3+ diff(Y1,V,Z1)
     [V>=V1+1,V1>=1,V1+1=Y1,Z1+1=Out,X1=0,W1=0] 
* CE 31: diff(V1,V,Out) = 2+ equal(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 32: diff(A,A,B) = 2+ equal(A,A,C):6
     [A>=1,C=1,B=0] 

### Cost equations --> "Loop" of diff/3 
* CEs [32] --> Loop 20 
* CEs [31] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [29] --> Loop 25 

#### Loops of diff/3 
* Loop 20: diff(A,A,B) [A>=1,B=0] 
* Loop 21: diff(V1,V,Out) [Out=0,V=0,V1=0] 
* Loop 22: diff(V1,V,Out)->  diff(V1,V',Out')
                  [V1>=V+1,V>=1,Out=Out'+1,V+1=V'] 
* Loop 23: diff(V1,V,Out)->  diff(V1',V,Out')
                  [V>=V1+1,V1>=1,Out=Out'+1,V1+1=V1'] 
* Loop 24: diff(V1,V,Out)->  diff(V1,V',Out')
                  [V1>=1,Out=Out'+1,V'=1,V=0] 
* Loop 25: diff(V1,V,Out)->  diff(V1',V,Out')
                  [V>=1,Out=Out'+1,V1'=1,V1=0] 

### Ranking functions of CR diff(V1,V,Out) 
* RF of phase [22]: [V1-V]
* RF of phase [23]: [-V1+V]

#### Partial ranking functions of CR diff(V1,V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V1-V
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -V1+V


### Resulting Chains:diff(V1,V,Out) 
* [[23],20]
* [[22],20]
* [25,[23],20]
* [25,20]
* [24,[22],20]
* [24,20]
* [21]
* [20]


### Merging Chains  diff/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20,25]] --> 2 
* [[20,[23],25]] --> 3 
* [[20,24]] --> 4 
* [[20,[22],24]] --> 5 
* [[20]] --> 6 
* [[20,[22]]] --> 7 
* [[20,[23]]] --> 8 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [33] 
* CE 6 is refined into CE [34,35,36,37,38] 
* CE 3 is refined into CE [39,40,41,42] 
* CE 4 is refined into CE [43,44,45,46,47,48] 
* CE 5 is refined into CE [49,50,51,52,53] 
* CE 7 is refined into CE [54,55,56,57,58,59,60,61] 
* CE 8 is refined into CE [62,63,64,65] 
* CE 9 is refined into CE [66,67,68,69,70,71] 


#### Refined cost equations start/3 
* CE 33: start(V1,V,V5) = 1
     [V5>=0,V>=0,V1=1] 
* CE 34: start(V1,V,V5) = 1+ diff(W5,X5,Y5):2
     [Y5=1,X5=1,W5=0,V5=0,V=0,V1=1] 
* CE 35: start(V1,V,V5) = 1+ diff(W5,X5,X5):3
     [X5>=2,X5=V5+1,W5=0,V=0,V1=1] 
* CE 36: start(V1,V,V5) = 1+ diff(V,V,W5):6
     [V>=1,V=V5+1,W5=0,V1=1] 
* CE 37: start(V1,V,V5) = 1+ diff(W5,X5,Y5):7
     [Y5>=1,X5>=1,X5+Y5=W5,X5+Y5=V,X5=V5+1,V1=1] 
* CE 38: start(V1,V,V5) = 1+ diff(V,W5,X5):8
     [W5>=V+1,V>=1,W5=V+X5,W5=V5+1,V1=1] 
* CE 39: start(V1,V,V5) = 2+ gt(W5,X5,Y5):2+ diff(Z5,A6,B6):6
     [B6=0,A6=1,Z5=1,Y5=1,X5=0,W5=1,V5=0,V=1,V1=0] 
* CE 40: start(V1,V,V5) = 2+ gt(W5,X5,Y5):2+ diff(Z5,A6,B6):7
     [B6>=1,B6+1=Z5,B6+1=W5,B6+1=V,A6=1,Y5=1,X5=0,V5=0,V1=0] 
* CE 41: start(V1,V,V5) = 2+ gt(V,W5,X5):4+ diff(V,V,Y5):6
     [V>=2,V=W5+1,V=V5+1,Y5=0,X5=1,V1=0] 
* CE 42: start(V1,V,V5) = 2+ gt(W5,X5,Y5):4+ diff(Z5,A6,B6):7
     [B6>=1,A6>=2,A6+B6=Z5,A6+B6=W5,A6+B6=V,A6=X5+1,A6=V5+1,Y5=1,V1=0] 
* CE 43: start(V1,V,V5) = 2+ gt(W5,X5,Y5):1+ diff(Z5,A6,B6):4
     [B6=1,A6=0,Z5=1,Y5=0,X5=0,W5=0,V5=0,V=0,V1=0] 
* CE 44: start(V1,V,V5) = 2+ gt(W5,X5,Y5):1+ diff(Z5,A6,B6):6
     [B6=0,A6=1,Z5=1,Y5=0,X5=1,W5=0,V5=1,V=0,V1=0] 
* CE 45: start(V1,V,V5) = 2+ gt(W5,V5,X5):1+ diff(Y5,V5,Z5):8
     [V5>=2,V5=Z5+1,Y5=1,X5=0,W5=0,V=0,V1=0] 
* CE 46: start(V1,V,V5) = 2+ gt(W5,V5,X5):3+ diff(V5,V5,Y5):6
     [V5>=2,V5=W5+1,V5=V+1,Y5=0,X5=0,V1=0] 
* CE 47: start(A,B,B) = 2+ gt(B,B,C):3+ diff(D,B,E):7
     [B>=1,B+1=D,E=1,C=0,A=0] 
* CE 48: start(V1,V,V5) = 2+ gt(W5,V5,X5):3+ diff(Y5,V5,Z5):8
     [V5>=Y5+1,Y5>=2,V5=Y5+Z5,Y5=W5+1,Y5=V+1,X5=0,V1=0] 
* CE 49: start(V1,V,V5) = 1+ diff(W5,X5,Y5):4
     [Y5=1,X5=0,W5=1,V5=0,V=0,V1=0] 
* CE 50: start(V1,V,V5) = 1+ diff(W5,X5,W5):5
     [W5>=2,W5=V+1,X5=0,V5=0,V1=0] 
* CE 51: start(V1,V,V5) = 1+ diff(V5,V5,W5):6
     [V5>=1,V5=V+1,W5=0,V1=0] 
* CE 52: start(V1,V,V5) = 1+ diff(W5,V5,X5):7
     [X5>=1,V5>=1,V5+X5=W5,V5+X5=V+1,V1=0] 
* CE 53: start(V1,V,V5) = 1+ diff(W5,V5,X5):8
     [V5>=W5+1,W5>=1,V5=W5+X5,W5=V+1,V1=0] 
* CE 54: start(V1,V,V5) = 0+ diff(W5,X5,Y5):1
     [Y5=0,X5=0,W5=0,V=0,V1=0] 
* CE 55: start(V1,V,V5) = 0+ diff(W5,X5,Y5):2
     [Y5=1,X5=1,W5=0,V=1,V1=0] 
* CE 56: start(V1,V,V5) = 0+ diff(W5,V,V):3
     [V>=2,W5=0,V1=0] 
* CE 57: start(V1,V,V5) = 0+ diff(W5,X5,Y5):4
     [Y5=1,X5=0,W5=1,V=0,V1=1] 
* CE 58: start(V1,V,V5) = 0+ diff(V1,W5,V1):5
     [V1>=2,W5=0,V=0] 
* CE 59: start(A,A,B) = 0+ diff(A,A,C):6
     [A>=1,C=0] 
* CE 60: start(V1,V,V5) = 0+ diff(W5,V,X5):7
     [X5>=1,V>=1,V+X5=W5,V+X5=V1] 
* CE 61: start(V1,V,V5) = 0+ diff(V1,V,W5):8
     [V>=V1+1,V1>=1,V=V1+W5] 
* CE 62: start(V1,V,V5) = 0+ gt(W5,V,X5):1
     [V>=0,X5=0,W5=0,V1=0] 
* CE 63: start(V1,V,V5) = 0+ gt(V1,W5,X5):2
     [V1>=1,X5=1,W5=0,V=0] 
* CE 64: start(V1,V,V5) = 0+ gt(V1,V,W5):3
     [V>=V1,V1>=1,W5=0] 
* CE 65: start(V1,V,V5) = 0+ gt(V1,V,W5):4
     [V1>=V+1,V>=1,W5=1] 
* CE 66: start(V1,V,V5) = 0+ equal(W5,X5,Y5):1
     [Y5=1,X5=0,W5=0,V=0,V1=0] 
* CE 67: start(V1,V,V5) = 0+ equal(W5,V,X5):2
     [V>=1,X5=0,W5=0,V1=0] 
* CE 68: start(V1,V,V5) = 0+ equal(V1,W5,X5):3
     [V1>=1,X5=0,W5=0,V=0] 
* CE 69: start(V1,V,V5) = 0+ equal(V1,V,W5):4
     [V>=V1+1,V1>=1,W5=0] 
* CE 70: start(V1,V,V5) = 0+ equal(V1,V,W5):5
     [V1>=V+1,V>=1,W5=0] 
* CE 71: start(A,A,B) = 0+ equal(A,A,C):6
     [A>=1,C=1] 

### Cost equations --> "Loop" of start/3 
* CEs [60,65,70] --> Loop 26 
* CEs [59,61,64,69,71] --> Loop 27 
* CEs [33,36,37,38] --> Loop 28 
* CEs [34,35,57,58,63,68] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [47] --> Loop 31 
* CEs [46,51] --> Loop 32 
* CEs [40,50] --> Loop 33 
* CEs [39,55] --> Loop 34 
* CEs [42,43,44,45,48,49,52,53,54,56,62,66,67] --> Loop 35 

#### Loops of start/3 
* Loop 26: start(V1,V,V5) [V1>=V+1,V>=1] 
* Loop 27: start(V1,V,V5) [V>=V1,V1>=1] 
* Loop 28: start(V1,V,V5) [V5>=0,V>=0,V1=1] 
* Loop 29: start(V1,V,V5) [V1>=1,V=0] 
* Loop 30: start(V1,V,V5) [V>=2,V=V5+1,V1=0] 
* Loop 31: start(A,B,B) [B>=1,A=0] 
* Loop 32: start(V1,V,V5) [V>=0,V+1=V5,V1=0] 
* Loop 33: start(V1,V,V5) [V>=1,V5=0,V1=0] 
* Loop 34: start(V1,V,V5) [V=1,V1=0] 
* Loop 35: start(V1,V,V5) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V,V5) 

#### Partial ranking functions of CR start(V1,V,V5) 


### Resulting Chains:start(V1,V,V5) 
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]


### Merging Chains  start/3 into  External patterns of execution 
* [[34],[35]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 
* [[31]] --> 4 
* [[30]] --> 5 
* [[28]] --> 6 
* [[29]] --> 7 
* [[27]] --> 8 
* [[26]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1
#### Cost of phase [16]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of phase [16]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of phase [16]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of chains of equal(V1,V,Out):
* Chain [[16],15]: 1*it(16)+1
  Such that:it(16) =< V1

  with precondition: [Out=1,V1=V,V1>=1] 

* Chain [[16],14]: 1*it(16)+1
  Such that:it(16) =< V1

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [[16],13]: 1*it(16)+1
  Such that:it(16) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [15]: 1
  with precondition: [V1=0,V=0,Out=1] 

* Chain [14]: 1
  with precondition: [V1=0,Out=0,V>=1] 

* Chain [13]: 1
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [19] 

 * loop 19:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1
#### Cost of phase [19]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of chains of gt(V1,V,Out):
* Chain [[19],18]: 1*it(19)+1
  Such that:it(19) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[19],17]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [18]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [17]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of loops [23] 

 * loop 23:diff(V1,V,Out) -> [diff(V1',V',Out')] 
2*s(5)+5
  Such that:s(4) =< V1'
s(5) =< s(4)

#### Cost of phase [23]:diff(V1,V,Out) -> [diff(V1',V',Out')] 
5*it(23)+2*s(6)+0
  Such that:it(23) =< -V1+V
it(23) =< -V1+V+V1'-V'
aux(2) =< V
s(7) =< it(23)*aux(2)
s(6) =< s(7)

#### Cost of loops [22] 

 * loop 22:diff(V1,V,Out) -> [diff(V1',V',Out')] 
2*s(11)+5
  Such that:s(10) =< V'
s(11) =< s(10)

#### Cost of phase [22]:diff(V1,V,Out) -> [diff(V1',V',Out')] 
5*it(22)+2*s(12)+0
  Such that:aux(5) =< V1
it(22) =< V1-V
it(22) =< V1-V-V1'+V'
s(13) =< it(22)*aux(5)
s(12) =< s(13)

#### Cost of chains of diff(V1,V,Out):
* Chain [[23],20]: 5*it(23)+1*s(1)+2*s(6)+3
  Such that:it(23) =< Out
aux(3) =< V
s(1) =< aux(3)
s(7) =< it(23)*aux(3)
s(6) =< s(7)

  with precondition: [Out+V1=V,V1>=1,V>=V1+1] 

* Chain [[22],20]: 5*it(22)+1*s(1)+2*s(12)+3
  Such that:it(22) =< Out
aux(6) =< V+Out
s(1) =< aux(6)
s(13) =< it(22)*aux(6)
s(12) =< s(13)

  with precondition: [V1=Out+V,V>=1,V1>=V+1] 

* Chain [25,[23],20]: 6*it(23)+2*s(6)+8
  Such that:aux(7) =< Out
it(23) =< aux(7)
s(7) =< it(23)*aux(7)
s(6) =< s(7)

  with precondition: [V1=0,V=Out,V>=2] 

* Chain [25,20]: 1*s(1)+8
  Such that:s(1) =< 1

  with precondition: [V1=0,V=1,Out=1] 

* Chain [24,[22],20]: 6*it(22)+2*s(12)+8
  Such that:aux(8) =< Out
it(22) =< aux(8)
s(13) =< it(22)*aux(8)
s(12) =< s(13)

  with precondition: [V=0,V1=Out,V1>=2] 

* Chain [24,20]: 1*s(1)+8
  Such that:s(1) =< 1

  with precondition: [V1=1,V=0,Out=1] 

* Chain [21]: 3
  with precondition: [V1=0,V=0,Out=0] 

* Chain [20]: 1*s(1)+3
  Such that:s(1) =< V

  with precondition: [Out=0,V=V1,V>=1] 


#### Cost of chains of start(V1,V,V5):
* Chain [35]: 9*s(14)+5*s(15)+8*s(17)+2*s(19)+3*s(20)+2*s(26)+10*s(28)+4*s(32)+5*s(34)+1*s(36)+2*s(38)+2*s(47)+11
  Such that:s(35) =< V+1
s(15) =< V-V5
s(34) =< V-V5+1
aux(10) =< 1
aux(11) =< -V+V5
aux(12) =< V
aux(13) =< V5
s(20) =< aux(10)
s(28) =< aux(11)
s(17) =< aux(12)
s(14) =< aux(13)
s(31) =< s(28)*aux(13)
s(32) =< s(31)
s(18) =< s(15)*aux(12)
s(19) =< s(18)
s(46) =< s(17)*aux(12)
s(47) =< s(46)
s(36) =< s(35)
s(37) =< s(34)*s(35)
s(38) =< s(37)
s(25) =< s(14)*aux(13)
s(26) =< s(25)

  with precondition: [V1=0,V>=0] 

* Chain [34]: 10
  with precondition: [V1=0,V=1] 

* Chain [33]: 6*s(50)+2*s(54)+6*s(56)+2*s(58)+9
  Such that:aux(15) =< V
s(55) =< V+1
s(50) =< aux(15)
s(53) =< s(50)*aux(15)
s(54) =< s(53)
s(56) =< s(55)
s(57) =< s(56)*s(55)
s(58) =< s(57)

  with precondition: [V1=0,V5=0,V>=1] 

* Chain [32]: 2*s(59)+1*s(61)+6
  Such that:s(61) =< V+1
aux(16) =< V5
s(59) =< aux(16)

  with precondition: [V1=0,V+1=V5,V>=0] 

* Chain [31]: 1*s(62)+5*s(63)+1*s(65)+2*s(67)+6
  Such that:s(63) =< 1
s(62) =< V5
s(64) =< V5+1
s(65) =< s(64)
s(66) =< s(63)*s(64)
s(67) =< s(66)

  with precondition: [V1=0,V=V5,V>=1] 

* Chain [30]: 1*s(68)+1*s(69)+6
  Such that:s(68) =< V5
s(69) =< V5+1

  with precondition: [V1=0,V=V5+1,V>=2] 

* Chain [29]: 2*s(70)+6*s(72)+2*s(74)+6*s(77)+2*s(79)+9
  Such that:s(76) =< V1
s(71) =< V5+1
aux(17) =< 1
s(70) =< aux(17)
s(77) =< s(76)
s(78) =< s(77)*s(76)
s(79) =< s(78)
s(72) =< s(71)
s(73) =< s(72)*s(71)
s(74) =< s(73)

  with precondition: [V=0,V1>=1] 

* Chain [28]: 2*s(80)+5*s(81)+1*s(83)+2*s(85)+5*s(86)+2*s(90)+4
  Such that:s(86) =< -V+V5+1
s(82) =< V
s(81) =< V-V5
aux(18) =< V5+1
s(80) =< aux(18)
s(89) =< s(86)*aux(18)
s(90) =< s(89)
s(83) =< s(82)
s(84) =< s(81)*s(82)
s(85) =< s(84)

  with precondition: [V1=1,V>=0,V5>=0] 

* Chain [27]: 3*s(91)+5*s(92)+2*s(96)+2*s(97)+3
  Such that:s(92) =< -V1+V
aux(19) =< V1
aux(20) =< V
s(97) =< aux(19)
s(91) =< aux(20)
s(95) =< s(92)*aux(20)
s(96) =< s(95)

  with precondition: [V1>=1,V>=V1] 

* Chain [26]: 5*s(100)+1*s(102)+2*s(104)+2*s(105)+3
  Such that:s(101) =< V1
s(100) =< V1-V
aux(21) =< V
s(105) =< aux(21)
s(102) =< s(101)
s(103) =< s(100)*s(101)
s(104) =< s(103)

  with precondition: [V>=1,V1>=V+1] 


Closed-form bounds of start(V1,V,V5): 
-------------------------------------
* Chain [35] with precondition: [V1=0,V>=0] 
    - Upper bound: 8*V+14+2*V*V+2*V*nat(V-V5)+nat(V5)*9+nat(V5)*2*nat(V5)+nat(V5)*4*nat(-V+V5)+ (V+1)+ (2*V+2)*nat(V-V5+1)+nat(-V+V5)*10+nat(V-V5+1)*5+nat(V-V5)*5 
    - Complexity: n^2 
* Chain [34] with precondition: [V1=0,V=1] 
    - Upper bound: 10 
    - Complexity: constant 
* Chain [33] with precondition: [V1=0,V5=0,V>=1] 
    - Upper bound: 6*V+9+2*V*V+ (6*V+6)+ (2*V+2)* (V+1) 
    - Complexity: n^2 
* Chain [32] with precondition: [V1=0,V+1=V5,V>=0] 
    - Upper bound: V+2*V5+7 
    - Complexity: n 
* Chain [31] with precondition: [V1=0,V=V5,V>=1] 
    - Upper bound: 4*V5+14 
    - Complexity: n 
* Chain [30] with precondition: [V1=0,V=V5+1,V>=2] 
    - Upper bound: 2*V5+7 
    - Complexity: n 
* Chain [29] with precondition: [V=0,V1>=1] 
    - Upper bound: 6*V1+11+2*V1*V1+nat(V5+1)*6+nat(V5+1)*2*nat(V5+1) 
    - Complexity: n^2 
* Chain [28] with precondition: [V1=1,V>=0,V5>=0] 
    - Upper bound: V+4+2*V*nat(V-V5)+ (2*V5+2)+ (2*V5+2)*nat(-V+V5+1)+nat(-V+V5+1)*5+nat(V-V5)*5 
    - Complexity: n^2 
* Chain [27] with precondition: [V1>=1,V>=V1] 
    - Upper bound: 2*V1+3*V+3+ (-V1+V)* (2*V)+ (-5*V1+5*V) 
    - Complexity: n^2 
* Chain [26] with precondition: [V>=1,V1>=V+1] 
    - Upper bound: 5*V1-5*V+ (V1+3+ (V1-V)* (2*V1)+2*V) 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V5): max([max([max([max([2*V*nat(-V1+V)+2*V1+nat(-V1+V)*5,3*V+6+2*V*V+ (V+1)+max([5*V+5+ (2*V+2)* (V+1),2*V+5+2*V*nat(V-V5)+nat(V5)*9+nat(V5)*2*nat(V5)+nat(V5)*4*nat(-V+V5)+ (2*V+2)*nat(V-V5+1)+nat(-V+V5)*10+nat(V-V5+1)*5+nat(V-V5)*5])])+V,2*V1*nat(V1-V)+V1+nat(V1-V)*5])+V,2*V*nat(V-V5)+1+nat(V5+1)*2+nat(V5+1)*2*nat(-V+V5+1)+nat(-V+V5+1)*5+nat(V-V5)*5])+V,max([nat(V5)+max([V+1+nat(V5),nat(V5+1)*2+5+nat(V5+1)]),6*V1+1+2*V1*V1+nat(V5+1)*6+nat(V5+1)*2*nat(V5+1)+4])+3])+3 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 77 ms.
* Invariants computed in 139 ms.
   - Backward Invariants 72 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 373 ms.
* Termination proved in 24 ms.
* Upper bounds computed in 415 ms.
   - Equation cost structures 178 ms.
   - Phase cost structures 81 ms.
   - Chain cost structures 70 ms.
   - Solving cost expressions 21 ms.
* Total analysis performed in 1128 ms.

