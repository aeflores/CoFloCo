
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [gt/3]
1. recursive  : [plus/3]
2. recursive  : [f/5]
3. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into gt/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into f/5
3. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations gt/3 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations gt/3 
* CE 13: gt(V,V1,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 14: gt(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 15: gt(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of gt/3 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of gt/3 
* Loop 10: gt(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 11: gt(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 12: gt(V,V1,Out)->  gt(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR gt(V,V1,Out) 
* RF of phase [12]: [V,V1]

#### Partial ranking functions of CR gt(V,V1,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V
    V1


### Resulting Chains:gt(V,V1,Out) 
* [[12],11]
* [[12],10]
* [11]
* [10]


### Merging Chains  gt/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[11,[12]]] --> 3 
* [[10,[12]]] --> 4 


### Specialization of cost equations plus/3 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 


#### Refined cost equations plus/3 
* CE 16: plus(V,V1,Out) = 1+ plus(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 17: plus(A,B,A) = 1
     [A>=0,B=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of plus/3 
* Loop 13: plus(A,B,A) [A>=0,B=0] 
* Loop 14: plus(V,V1,Out)->  plus(V,V1',Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [14]: [V1]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1


### Resulting Chains:plus(V,V1,Out) 
* [[14],13]
* [13]


### Merging Chains  plus/3 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[14]]] --> 2 


### Specialization of cost equations f/5 
* CE 7 is refined into CE [18] 
* CE 6 is refined into CE [19,20,21,22,23,24,25] 
* CE 5 is refined into CE [26,27,28,29,30,31,32] 


#### Refined cost equations f/5 
* CE 18: f(V,V1,V6,V2,Out) = 0
     [V2>=0,V6>=0,V1>=0,V>=0,Out=0] 
* CE 19: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(X6,V6,Y6):1+ f(Z6,A7,V6,B7,Out)
     [V6>=0,B7=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,V2=0,V1=0,V=1] 
* CE 20: f(V,V1,V6,V2,Out) = 1+ plus(W6,X6,Y6):1+ gt(V1,Z6,A7):2+ f(B7,V1,C7,D7,Out)
     [V1>=1,D7=1,C7=0,B7=1,A7=1,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=1] 
* CE 21: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(V1,V6,X6):3+ f(Y6,V1,V6,Z6,Out)
     [V6>=V1,V1>=1,Z6=1,Y6=0,X6=0,W6=0,V2=0,V=1] 
* CE 22: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(V1,V6,X6):4+ f(Y6,V1,V6,Z6,Out)
     [V1>=V6+1,V6>=1,Z6=1,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 23: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(Y6,X6,Z6):1+ f(A7,B7,V6,C7,Out)
     [X6>=V6+1,V6>=0,X6+1=V6+C7,X6=V6+W6,X6=V6+V2,B7=0,A7=0,Z6=0,Y6=0,V1=0,V=1] 
* CE 24: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(V1,X6,Y6):3+ f(Z6,V1,V6,A7,Out)
     [X6>=V1,X6>=V6+1,V1>=1,V6>=0,X6+1=V6+A7,X6=V6+W6,X6=V6+V2,Z6=0,Y6=0,V=1] 
* CE 25: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(V1,X6,Y6):4+ f(Z6,V1,V6,A7,Out)
     [V1>=X6+1,X6>=V6+1,V6>=0,X6+1=V6+A7,X6=V6+W6,X6=V6+V2,Z6=1,Y6=1,V=1] 
* CE 26: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(X6,V6,Y6):1+ f(Z6,A7,B7,C7,Out)
     [V6>=0,V6+1=B7,C7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V2=0,V1=0,V=1] 
* CE 27: f(V,V1,V6,V2,Out) = 1+ plus(W6,X6,Y6):1+ gt(V1,Z6,A7):2+ f(B7,V1,C7,D7,Out)
     [V1>=1,D7=0,C7=1,B7=1,A7=1,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=1] 
* CE 28: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(V1,V6,X6):3+ f(Y6,V1,Z6,A7,Out)
     [V6>=V1,V1>=1,V6+1=Z6,A7=0,Y6=0,X6=0,W6=0,V2=0,V=1] 
* CE 29: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,V6):1+ gt(V1,V6,X6):4+ f(Y6,V1,Z6,A7,Out)
     [V1>=V6+1,V6>=1,V6+1=Z6,A7=0,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 30: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(Y6,X6,Z6):1+ f(A7,B7,C7,D7,Out)
     [X6>=V6+1,V6>=0,X6=V6+D7,X6=V6+W6,X6=V6+V2,V6+1=C7,B7=0,A7=0,Z6=0,Y6=0,V1=0,V=1] 
* CE 31: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(V1,X6,Y6):3+ f(Z6,V1,A7,B7,Out)
     [X6>=V1,X6>=V6+1,V1>=1,V6>=0,X6=V6+B7,X6=V6+W6,X6=V6+V2,V6+1=A7,Z6=0,Y6=0,V=1] 
* CE 32: f(V,V1,V6,V2,Out) = 1+ plus(V6,W6,X6):2+ gt(V1,X6,Y6):4+ f(Z6,V1,A7,B7,Out)
     [V1>=X6+1,X6>=V6+1,V6>=0,X6=V6+B7,X6=V6+W6,X6=V6+V2,V6+1=A7,Z6=1,Y6=1,V=1] 

### Cost equations --> "Loop" of f/5 
* CEs [25] --> Loop 15 
* CEs [32] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [31] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [20] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [19] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [18] --> Loop 29 

#### Loops of f/5 
* Loop 15: f(V,V1,V6,V2,Out)->  f(V',V1,V6,V2',Out)
                  [V1>=V6+V2+1,V2>=1,V6>=0,V2+1=V2',V'=1,V=1] 
* Loop 16: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2,Out)
                  [V1>=V6+V2+1,V2>=1,V6>=0,V6+1=V6',V'=1,V=1] 
* Loop 17: f(V,V1,V6,V2,Out)->  f(V',V1,V6,V2',Out)
                  [V6+V2>=V1,V2>=1,V6>=0,V1>=1,V2+1=V2',V'=0,V=1] 
* Loop 18: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2,Out)
                  [V6+V2>=V1,V2>=1,V6>=0,V1>=1,V6+1=V6',V'=0,V=1] 
* Loop 19: f(V,V1,V6,V2,Out)->  f(V',V1,V6,V2',Out)
                  [V1>=V6+1,V6>=1,V2'=1,V'=1,V2=0,V=1] 
* Loop 20: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2',Out)
                  [V1>=V6+1,V6>=1,V6+1=V6',V2'=0,V'=1,V2=0,V=1] 
* Loop 21: f(V,V1,V6,V2,Out)->  f(V',V1,V6,V2',Out)
                  [V6>=V1,V1>=1,V2'=1,V'=0,V2=0,V=1] 
* Loop 22: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2',Out)
                  [V6>=V1,V1>=1,V6+1=V6',V2'=0,V'=0,V2=0,V=1] 
* Loop 23: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2',Out)
                  [V1>=1,V2'=0,V6'=1,V'=1,V2=0,V6=0,V=1] 
* Loop 24: f(V,V1,V6,V2,Out)->  f(V',V1,V6',V2',Out)
                  [V1>=1,V2'=1,V6'=0,V'=1,V2=0,V6=0,V=1] 
* Loop 25: f(V,V1,V6,V2,Out)->  f(V',V1',V6,V2',Out)
                  [V2>=1,V6>=0,V2+1=V2',V1'=0,V'=0,V1=0,V=1] 
* Loop 26: f(V,V1,V6,V2,Out)->  f(V',V1',V6',V2,Out)
                  [V2>=1,V6>=0,V6+1=V6',V1'=0,V'=0,V1=0,V=1] 
* Loop 27: f(V,V1,V6,V2,Out)->  f(V',V1',V6,V2',Out)
                  [V6>=0,V2'=1,V1'=0,V'=0,V2=0,V1=0,V=1] 
* Loop 28: f(V,V1,V6,V2,Out)->  f(V',V1',V6',V2',Out)
                  [V6>=0,V6+1=V6',V2'=0,V1'=0,V'=0,V2=0,V1=0,V=1] 
* Loop 29: f(V,V1,V6,V2,Out) [V2>=0,V6>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR f(V,V1,V6,V2,Out) 
* RF of phase [15,16]: [V1-V6-V2]
* RF of phase [20]: [V1-V6]

#### Partial ranking functions of CR f(V,V1,V6,V2,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    V1-V2
  - RF of loop [15:1,16:1]:
    V1-V6-V2
  - RF of loop [16:1]:
    V1-V6-1
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V1-V6


### Resulting Chains:f(V,V1,V6,V2,Out) 
* [[20],29]
* [[20],22,29]
* [[20],21,29]
* [[20],19,[15,16],29]
* [[20],19,[15,16],18,29]
* [[20],19,[15,16],17,29]
* [[20],19,29]
* [[20],19,18,29]
* [[20],19,17,29]
* [[15,16],29]
* [[15,16],18,29]
* [[15,16],17,29]
* [29]
* [28,29]
* [27,29]
* [26,29]
* [25,29]
* [24,[15,16],29]
* [24,[15,16],18,29]
* [24,[15,16],17,29]
* [24,29]
* [24,18,29]
* [24,17,29]
* [23,[20],29]
* [23,[20],22,29]
* [23,[20],21,29]
* [23,[20],19,[15,16],29]
* [23,[20],19,[15,16],18,29]
* [23,[20],19,[15,16],17,29]
* [23,[20],19,29]
* [23,[20],19,18,29]
* [23,[20],19,17,29]
* [23,29]
* [23,22,29]
* [23,21,29]
* [23,19,[15,16],29]
* [23,19,[15,16],18,29]
* [23,19,[15,16],17,29]
* [23,19,29]
* [23,19,18,29]
* [23,19,17,29]
* [22,29]
* [21,29]
* [19,[15,16],29]
* [19,[15,16],18,29]
* [19,[15,16],17,29]
* [19,29]
* [19,18,29]
* [19,17,29]
* [18,29]
* [17,29]


### Merging Chains  f/5 into  External patterns of execution 
* [[29,27],[29,28],[29]] --> 1 
* [[29,25],[29,26]] --> 2 
* [[29,19,23],[29,17,[15,16],19,23],[29,18,[15,16],19,23],[29,[15,16],19,23],[29,21,23],[29,22,23],[29,23],[29,17,19,[20],23],[29,18,19,[20],23],[29,19,[20],23],[29,17,[15,16],19,[20],23],[29,18,[15,16],19,[20],23],[29,[15,16],19,[20],23],[29,21,[20],23],[29,22,[20],23],[29,[20],23],[29,17,24],[29,18,24],[29,24],[29,17,[15,16],24],[29,18,[15,16],24],[29,[15,16],24]] --> 3 
* [[29,17,19,23],[29,18,19,23]] --> 4 
* [[29,17,19],[29,18,19],[29,19],[29,17,[15,16],19],[29,18,[15,16],19],[29,[15,16],19],[29,17,19,[20]],[29,18,19,[20]],[29,19,[20]],[29,17,[15,16],19,[20]],[29,18,[15,16],19,[20]],[29,[15,16],19,[20]],[29,21,[20]],[29,22,[20]],[29,[20]]] --> 5 
* [[29,21],[29,22]] --> 6 
* [[29,17],[29,18]] --> 7 
* [[29,17,[15,16]],[29,18,[15,16]],[29,[15,16]]] --> 8 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [33,34,35,36,37,38,39,40] 
* CE 3 is refined into CE [41,42] 
* CE 4 is refined into CE [43,44,45,46] 


#### Refined cost equations start/4 
* CE 33: start(V,V1,V6,V2) = 0+ f(V,V1,V6,V2,W6):1
     [V2>=0,V6>=0,V1>=0,V>=0,W6=0] 
* CE 34: start(V,V1,V6,V2) = 0+ f(W6,X6,V6,V2,Y6):2
     [V2>=1,V6>=0,Y6=0,X6=0,W6=1,V1=0,V=1] 
* CE 35: start(V,V1,V6,V2) = 0+ f(W6,V1,X6,Y6,Z6):3
     [V1>=1,Z6=0,Y6=0,X6=0,W6=1,V2=0,V6=0,V=1] 
* CE 36: start(V,V1,V6,V2) = 0+ f(W6,X6,Y6,Z6,A7):4
     [A7=0,Z6=0,Y6=0,X6=2,W6=1,V2=0,V6=0,V1=2,V=1] 
* CE 37: start(V,V1,V6,V2) = 0+ f(W6,V1,V6,X6,Y6):5
     [V1>=V6+1,V6>=1,Y6=0,X6=0,W6=1,V2=0,V=1] 
* CE 38: start(V,V1,V6,V2) = 0+ f(W6,V1,V6,X6,Y6):6
     [V6>=V1,V1>=1,Y6=0,X6=0,W6=1,V2=0,V=1] 
* CE 39: start(V,V1,V6,V2) = 0+ f(W6,V1,V6,V2,X6):7
     [V6+V2>=V1,V2>=1,V6>=0,V1>=1,X6=0,W6=1,V=1] 
* CE 40: start(V,V1,V6,V2) = 0+ f(W6,V1,V6,V2,X6):8
     [V1>=V6+V2+1,V2>=1,V6>=0,X6=0,W6=1,V=1] 
* CE 41: start(V,V1,V6,V2) = 0+ plus(V,W6,V):1
     [V>=0,W6=0,V1=0] 
* CE 42: start(V,V1,V6,V2) = 0+ plus(V,W6,X6):2
     [X6>=V+1,V>=0,X6=V+W6,X6=V+V1] 
* CE 43: start(V,V1,V6,V2) = 0+ gt(W6,V1,X6):1
     [V1>=0,X6=0,W6=0,V=0] 
* CE 44: start(V,V1,V6,V2) = 0+ gt(V,W6,X6):2
     [V>=1,X6=1,W6=0,V1=0] 
* CE 45: start(V,V1,V6,V2) = 0+ gt(V,V1,W6):3
     [V1>=V,V>=1,W6=0] 
* CE 46: start(V,V1,V6,V2) = 0+ gt(V,V1,W6):4
     [V>=V1+1,V1>=1,W6=1] 

### Cost equations --> "Loop" of start/4 
* CEs [40] --> Loop 30 
* CEs [39] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [38,42,45,46] --> Loop 33 
* CEs [33,35,36] --> Loop 34 
* CEs [34,41,44] --> Loop 35 
* CEs [43] --> Loop 36 

#### Loops of start/4 
* Loop 30: start(V,V1,V6,V2) [V1>=V6+V2+1,V2>=1,V6>=0,V=1] 
* Loop 31: start(V,V1,V6,V2) [V6+V2>=V1,V2>=1,V6>=0,V1>=1,V=1] 
* Loop 32: start(V,V1,V6,V2) [V1>=V6+1,V6>=1,V2=0,V=1] 
* Loop 33: start(V,V1,V6,V2) [V1>=1,V>=0] 
* Loop 34: start(V,V1,V6,V2) [V2>=0,V6>=0,V1>=0,V>=0] 
* Loop 35: start(V,V1,V6,V2) [V>=0,V1=0] 
* Loop 36: start(V,V1,V6,V2) [V1>=0,V=0] 

### Ranking functions of CR start(V,V1,V6,V2) 

#### Partial ranking functions of CR start(V,V1,V6,V2) 


### Resulting Chains:start(V,V1,V6,V2) 
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]


### Merging Chains  start/4 into  External patterns of execution 
* [[36]] --> 1 
* [[32],[34]] --> 2 
* [[31],[33]] --> 3 
* [[30]] --> 4 
* [[35]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1
#### Cost of phase [12]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of gt(V,V1,Out):
* Chain [[12],11]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[12],10]: 1*it(12)+1
  Such that:it(12) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [11]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [10]: 1
  with precondition: [V1=0,Out=1,V>=1] 


#### Cost of loops [14] 

 * loop 14:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [14]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of plus(V,V1,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [V+V1=Out,V>=0,V1>=1] 

* Chain [13]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [20] 

 * loop 20:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
1*s(2)+3
  Such that:s(2) =< V6'

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of loops [15,16] 

 * loop 15:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
1*s(9)+1*s(8)+3
  Such that:s(8) =< V6'+V2'
s(9) =< V2'

 * loop 16:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
1*s(13)+1*s(12)+3
  Such that:s(12) =< V6'+V2'
s(13) =< V2'

#### Cost of phase [15,16]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+0
  Such that:aux(4) =< V1
it(16) =< V1-V6-V1'+V6'
it(15) =< V1-V2
it(15) =< V1-V2-V1'+V2'
aux(8) =< V1-V6
aux(9) =< V1-V6-V2
aux(10) =< V1-V6-V2-V1'+V6'+V2'
it(16) =< aux(8)
it(15) =< aux(9)
it(16) =< aux(9)
it(15) =< aux(10)
it(16) =< aux(10)
aux(7) =< aux(8)-1
aux(6) =< aux(4)
s(14) =< it(15)*aux(8)
s(15) =< it(15)*aux(4)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [15,16]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+0
  Such that:aux(4) =< V1
it(16) =< V1-V6-V1'+V6'
it(15) =< V1-V2
it(15) =< V1-V2-V1'+V2'
aux(8) =< V1-V6
aux(9) =< V1-V6-V2
aux(10) =< V1-V6-V2-V1'+V6'+V2'
it(16) =< aux(8)
it(15) =< aux(9)
it(16) =< aux(9)
it(15) =< aux(10)
it(16) =< aux(10)
aux(7) =< aux(8)-1
aux(6) =< aux(4)
s(14) =< it(15)*aux(8)
s(15) =< it(15)*aux(4)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [15,16]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+0
  Such that:aux(4) =< V1
it(16) =< V1-V6-V1'+V6'
it(15) =< V1-V2
it(15) =< V1-V2-V1'+V2'
aux(8) =< V1-V6
aux(9) =< V1-V6-V2
aux(10) =< V1-V6-V2-V1'+V6'+V2'
it(16) =< aux(8)
it(15) =< aux(9)
it(16) =< aux(9)
it(15) =< aux(10)
it(16) =< aux(10)
aux(7) =< aux(8)-1
aux(6) =< aux(4)
s(14) =< it(15)*aux(8)
s(15) =< it(15)*aux(4)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of phase [20]:f(V,V1,V6,V2,Out) -> [f(V',V1',V6',V2',Out')] 
3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
it(20) =< V1-V6-V1'+V6'
s(3) =< it(20)*aux(1)

#### Cost of chains of f(V,V1,V6,V2,Out):
* Chain [[20],29]: 3*it(20)+1*s(3)+0
  Such that:aux(1) =< V1
it(20) =< V1-V6
s(3) =< it(20)*aux(1)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+1] 

* Chain [[20],22,29]: 3*it(20)+1*s(3)+1*s(4)+3
  Such that:it(20) =< V1-V6
aux(2) =< V1
s(4) =< aux(2)
s(3) =< it(20)*aux(2)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+1] 

* Chain [[20],21,29]: 3*it(20)+1*s(3)+1*s(5)+3
  Such that:it(20) =< V1-V6
aux(3) =< V1
s(5) =< aux(3)
s(3) =< it(20)*aux(3)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+1] 

* Chain [[20],19,[15,16],29]: 6*it(15)+3*it(20)+1*s(3)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(18)+3
  Such that:aux(13) =< V1
aux(14) =< V1-V6
aux(12) =< aux(13)
s(18) =< aux(13)
aux(12) =< aux(14)
it(20) =< aux(14)
it(15) =< aux(12)
aux(7) =< aux(12)-1
aux(6) =< aux(13)
s(14) =< it(15)*aux(12)
s(15) =< it(15)*aux(13)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)
s(3) =< it(20)*aux(13)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+3] 

* Chain [[20],19,[15,16],18,29]: 7*it(15)+3*it(20)+1*s(3)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+2*s(18)+6
  Such that:aux(19) =< V1
aux(20) =< V1-V6
aux(18) =< aux(19)
s(18) =< aux(19)
aux(18) =< aux(20)
it(20) =< aux(20)
it(15) =< aux(18)
aux(7) =< aux(18)-1
aux(6) =< aux(19)
s(14) =< it(15)*aux(18)
s(15) =< it(15)*aux(19)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)
s(3) =< it(20)*aux(19)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+3] 

* Chain [[20],19,[15,16],17,29]: 3*it(15)+3*it(16)+3*it(20)+1*s(3)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+2*s(18)+1*s(21)+6
  Such that:aux(22) =< V1+1
aux(24) =< V1-V6
aux(25) =< V1
aux(26) =< V1-V6+1
aux(24) =< aux(25)
s(18) =< aux(25)
aux(22) =< aux(26)
it(20) =< aux(26)
it(16) =< aux(22)
s(21) =< aux(22)
it(15) =< aux(24)
it(16) =< aux(24)
aux(7) =< aux(24)-1
aux(6) =< aux(25)
s(14) =< it(15)*aux(24)
s(15) =< it(15)*aux(25)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)
s(3) =< it(20)*aux(25)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+3] 

* Chain [[20],19,29]: 3*it(20)+1*s(3)+1*s(18)+3
  Such that:it(20) =< V1-V6
aux(27) =< V1
s(18) =< aux(27)
s(3) =< it(20)*aux(27)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [[20],19,18,29]: 3*it(20)+1*s(3)+2*s(18)+1*s(19)+6
  Such that:s(19) =< 1
it(20) =< V1-V6
aux(28) =< V1
s(18) =< aux(28)
s(3) =< it(20)*aux(28)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [[20],19,17,29]: 3*it(20)+1*s(3)+2*s(18)+1*s(21)+6
  Such that:s(21) =< 2
it(20) =< V1-V6
aux(29) =< V1
s(18) =< aux(29)
s(3) =< it(20)*aux(29)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [[15,16],29]: 3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+0
  Such that:aux(4) =< V1
aux(8) =< V1-V6
aux(11) =< V1-V6-V2
it(15) =< aux(11)
it(16) =< aux(11)
it(16) =< aux(8)
aux(7) =< aux(8)-1
aux(6) =< aux(4)
s(14) =< it(15)*aux(8)
s(15) =< it(15)*aux(4)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,Out=0,V6>=0,V2>=1,V1>=V2+V6+1] 

* Chain [[15,16],18,29]: 3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(19)+1*s(20)+3
  Such that:aux(15) =< V1
aux(16) =< V1-V6
aux(17) =< V1-V6-V2
s(20) =< aux(15)
it(16) =< aux(16)
s(19) =< aux(16)
it(15) =< aux(17)
it(16) =< aux(17)
aux(7) =< aux(16)-1
aux(6) =< aux(15)
s(14) =< it(15)*aux(16)
s(15) =< it(15)*aux(15)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,Out=0,V6>=0,V2>=1,V1>=V2+V6+1] 

* Chain [[15,16],17,29]: 3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(21)+1*s(22)+3
  Such that:aux(8) =< V1-V6
aux(21) =< V1
aux(22) =< V1-V6+1
aux(23) =< V1-V6-V2
s(22) =< aux(21)
it(16) =< aux(22)
s(21) =< aux(22)
it(15) =< aux(23)
it(16) =< aux(8)
it(16) =< aux(23)
aux(7) =< aux(8)-1
aux(6) =< aux(21)
s(14) =< it(15)*aux(8)
s(15) =< it(15)*aux(21)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,Out=0,V6>=0,V2>=1,V1>=V2+V6+1] 

* Chain [29]: 0
  with precondition: [Out=0,V>=0,V1>=0,V6>=0,V2>=0] 

* Chain [28,29]: 3
  with precondition: [V=1,V1=0,V2=0,Out=0,V6>=0] 

* Chain [27,29]: 3
  with precondition: [V=1,V1=0,V2=0,Out=0,V6>=0] 

* Chain [26,29]: 1*s(23)+3
  Such that:s(23) =< V2

  with precondition: [V=1,V1=0,Out=0,V6>=0,V2>=1] 

* Chain [25,29]: 1*s(24)+3
  Such that:s(24) =< V2+1

  with precondition: [V=1,V1=0,Out=0,V6>=0,V2>=1] 

* Chain [24,[15,16],29]: 6*it(15)+2*s(14)+1*s(16)+1*s(17)+3
  Such that:aux(30) =< V1
it(15) =< aux(30)
aux(7) =< aux(30)-1
aux(6) =< aux(30)
s(14) =< it(15)*aux(30)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [24,[15,16],18,29]: 8*it(15)+2*s(14)+1*s(16)+1*s(17)+6
  Such that:aux(31) =< V1
it(15) =< aux(31)
aux(7) =< aux(31)-1
aux(6) =< aux(31)
s(14) =< it(15)*aux(31)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [24,[15,16],17,29]: 4*it(15)+3*it(16)+2*s(14)+1*s(16)+1*s(17)+1*s(21)+6
  Such that:aux(22) =< V1+1
aux(32) =< V1
it(15) =< aux(32)
it(16) =< aux(22)
s(21) =< aux(22)
it(16) =< aux(32)
aux(7) =< aux(32)-1
aux(6) =< aux(32)
s(14) =< it(15)*aux(32)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [24,29]: 3
  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=1] 

* Chain [24,18,29]: 2*s(19)+6
  Such that:aux(33) =< 1
s(19) =< aux(33)

  with precondition: [V=1,V1=1,V6=0,V2=0,Out=0] 

* Chain [24,17,29]: 1*s(21)+1*s(22)+6
  Such that:s(22) =< 1
s(21) =< 2

  with precondition: [V=1,V1=1,V6=0,V2=0,Out=0] 

* Chain [23,[20],29]: 3*it(20)+1*s(3)+3
  Such that:aux(34) =< V1
it(20) =< aux(34)
s(3) =< it(20)*aux(34)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [23,[20],22,29]: 4*it(20)+1*s(3)+6
  Such that:aux(35) =< V1
it(20) =< aux(35)
s(3) =< it(20)*aux(35)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [23,[20],21,29]: 4*it(20)+1*s(3)+6
  Such that:aux(36) =< V1
it(20) =< aux(36)
s(3) =< it(20)*aux(36)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [23,[20],19,[15,16],29]: 10*it(15)+3*s(3)+1*s(16)+1*s(17)+6
  Such that:aux(37) =< V1
it(15) =< aux(37)
aux(7) =< aux(37)-1
aux(6) =< aux(37)
s(3) =< it(15)*aux(37)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=4] 

* Chain [23,[20],19,[15,16],18,29]: 12*it(15)+3*s(3)+1*s(16)+1*s(17)+9
  Such that:aux(38) =< V1
it(15) =< aux(38)
aux(7) =< aux(38)-1
aux(6) =< aux(38)
s(3) =< it(15)*aux(38)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=4] 

* Chain [23,[20],19,[15,16],17,29]: 8*it(15)+3*it(16)+3*s(3)+1*s(16)+1*s(17)+1*s(21)+9
  Such that:aux(22) =< V1+1
aux(39) =< V1
it(15) =< aux(39)
aux(22) =< aux(39)
it(16) =< aux(22)
s(21) =< aux(22)
it(16) =< aux(39)
aux(7) =< aux(39)-1
aux(6) =< aux(39)
s(3) =< it(15)*aux(39)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=4] 

* Chain [23,[20],19,29]: 4*it(20)+1*s(3)+6
  Such that:aux(40) =< V1
it(20) =< aux(40)
s(3) =< it(20)*aux(40)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,[20],19,18,29]: 5*it(20)+1*s(3)+1*s(19)+9
  Such that:s(19) =< 1
aux(41) =< V1
it(20) =< aux(41)
s(3) =< it(20)*aux(41)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,[20],19,17,29]: 5*it(20)+1*s(3)+1*s(21)+9
  Such that:s(21) =< 2
aux(42) =< V1
it(20) =< aux(42)
s(3) =< it(20)*aux(42)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,29]: 3
  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=1] 

* Chain [23,22,29]: 1*s(4)+6
  Such that:s(4) =< 1

  with precondition: [V=1,V1=1,V6=0,V2=0,Out=0] 

* Chain [23,21,29]: 1*s(5)+6
  Such that:s(5) =< 1

  with precondition: [V=1,V1=1,V6=0,V2=0,Out=0] 

* Chain [23,19,[15,16],29]: 6*it(15)+2*s(14)+1*s(16)+1*s(17)+1*s(18)+6
  Such that:s(18) =< 1
aux(43) =< V1
it(15) =< aux(43)
aux(7) =< aux(43)-1
aux(6) =< aux(43)
s(14) =< it(15)*aux(43)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,19,[15,16],18,29]: 8*it(15)+2*s(14)+1*s(16)+1*s(17)+1*s(18)+9
  Such that:s(18) =< 1
aux(44) =< V1
it(15) =< aux(44)
aux(7) =< aux(44)-1
aux(6) =< aux(44)
s(14) =< it(15)*aux(44)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,19,[15,16],17,29]: 8*it(15)+2*s(14)+1*s(16)+1*s(17)+1*s(18)+9
  Such that:s(18) =< 1
aux(45) =< V1
it(15) =< aux(45)
aux(7) =< aux(45)-1
aux(6) =< aux(45)
s(14) =< it(15)*aux(45)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=3] 

* Chain [23,19,29]: 1*s(18)+6
  Such that:s(18) =< 1

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [23,19,18,29]: 2*s(18)+1*s(20)+9
  Such that:s(20) =< 2
aux(46) =< 1
s(18) =< aux(46)

  with precondition: [V=1,V1=2,V6=0,V2=0,Out=0] 

* Chain [23,19,17,29]: 1*s(18)+2*s(21)+9
  Such that:s(18) =< 1
aux(47) =< 2
s(21) =< aux(47)

  with precondition: [V=1,V1=2,V6=0,V2=0,Out=0] 

* Chain [22,29]: 1*s(4)+3
  Such that:s(4) =< V1

  with precondition: [V=1,V2=0,Out=0,V1>=1,V6>=V1] 

* Chain [21,29]: 1*s(5)+3
  Such that:s(5) =< V1

  with precondition: [V=1,V2=0,Out=0,V1>=1,V6>=V1] 

* Chain [19,[15,16],29]: 6*it(15)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(18)+3
  Such that:aux(4) =< V1
s(18) =< V6
aux(12) =< V1-V6
it(15) =< aux(12)
aux(7) =< aux(12)-1
aux(6) =< aux(4)
s(14) =< it(15)*aux(12)
s(15) =< it(15)*aux(4)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [19,[15,16],18,29]: 7*it(15)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(18)+1*s(20)+6
  Such that:aux(15) =< V1
s(18) =< V6
aux(18) =< V1-V6
s(20) =< aux(15)
it(15) =< aux(18)
aux(7) =< aux(18)-1
aux(6) =< aux(15)
s(14) =< it(15)*aux(18)
s(15) =< it(15)*aux(15)
s(16) =< it(15)*aux(7)
s(17) =< it(15)*aux(6)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [19,[15,16],17,29]: 3*it(15)+3*it(16)+1*s(14)+1*s(15)+1*s(16)+1*s(17)+1*s(18)+1*s(21)+1*s(22)+6
  Such that:aux(21) =< V1
aux(22) =< V1-V6+1
s(18) =< V6
aux(24) =< V1-V6
s(22) =< aux(21)
it(16) =< aux(22)
s(21) =< aux(22)
it(15) =< aux(24)
it(16) =< aux(24)
aux(7) =< aux(24)-1
aux(6) =< aux(21)
s(14) =< it(15)*aux(24)
s(15) =< it(15)*aux(21)
s(16) =< it(16)*aux(7)
s(17) =< it(16)*aux(6)

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [19,29]: 1*s(18)+3
  Such that:s(18) =< V6

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+1] 

* Chain [19,18,29]: 1*s(18)+1*s(19)+1*s(20)+6
  Such that:s(19) =< 1
s(18) =< V6
s(20) =< V6+1

  with precondition: [V=1,V2=0,Out=0,V1=V6+1,V1>=2] 

* Chain [19,17,29]: 1*s(18)+1*s(21)+1*s(22)+6
  Such that:s(21) =< 2
s(18) =< V6
s(22) =< V6+1

  with precondition: [V=1,V2=0,Out=0,V1=V6+1,V1>=2] 

* Chain [18,29]: 1*s(19)+1*s(20)+3
  Such that:s(20) =< V1
s(19) =< V2

  with precondition: [V=1,Out=0,V1>=1,V6>=0,V2>=1,V2+V6>=V1] 

* Chain [17,29]: 1*s(21)+1*s(22)+3
  Such that:s(22) =< V1
s(21) =< V2+1

  with precondition: [V=1,Out=0,V1>=1,V6>=0,V2>=1,V2+V6>=V1] 


#### Cost of chains of start(V,V1,V6,V2):
* Chain [36]: 1
  with precondition: [V=0,V1>=0] 

* Chain [35]: 1*s(285)+1*s(286)+3
  Such that:s(285) =< V2
s(286) =< V2+1

  with precondition: [V1=0,V>=0] 

* Chain [34]: 10*s(291)+2*s(292)+95*s(294)+27*s(297)+7*s(298)+7*s(299)+3*s(300)+1*s(301)+1*s(302)+1*s(303)+3*s(304)+1*s(305)+1*s(306)+1*s(307)+18
  Such that:s(287) =< 1
s(288) =< 2
s(289) =< V1
s(290) =< V1+1
s(291) =< s(287)
s(292) =< s(288)
s(293) =< s(290)
s(294) =< s(289)
s(295) =< s(289)-1
s(296) =< s(289)
s(297) =< s(294)*s(289)
s(298) =< s(294)*s(295)
s(299) =< s(294)*s(296)
s(293) =< s(289)
s(300) =< s(293)
s(301) =< s(293)
s(300) =< s(289)
s(302) =< s(300)*s(295)
s(303) =< s(300)*s(296)
s(304) =< s(290)
s(305) =< s(290)
s(304) =< s(289)
s(306) =< s(304)*s(295)
s(307) =< s(304)*s(296)

  with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 

* Chain [33]: 4*s(309)+1*s(311)+3
  Such that:s(311) =< V
aux(66) =< V1
s(309) =< aux(66)

  with precondition: [V>=0,V1>=1] 

* Chain [32]: 2*s(321)+2*s(322)+40*s(323)+6*s(325)+2*s(326)+14*s(327)+11*s(328)+3*s(329)+4*s(330)+3*s(333)+1*s(334)+1*s(335)+2*s(336)+2*s(337)+16*s(338)+3*s(340)+3*s(341)+2*s(342)+2*s(343)+3*s(344)+1*s(345)+1*s(346)+1*s(347)+1*s(348)+6
  Such that:s(314) =< 1
s(315) =< 2
s(316) =< V1
s(313) =< V1+1
s(317) =< V1-V6
s(318) =< V1-V6+1
s(319) =< V6
s(320) =< V6+1
s(321) =< s(314)
s(322) =< s(315)
s(323) =< s(317)
s(324) =< s(317)
s(325) =< s(319)
s(326) =< s(320)
s(327) =< s(316)
s(328) =< s(323)*s(316)
s(329) =< s(318)
s(330) =< s(318)
s(329) =< s(317)
s(331) =< s(317)-1
s(332) =< s(316)
s(333) =< s(323)*s(317)
s(334) =< s(329)*s(331)
s(335) =< s(329)*s(332)
s(336) =< s(323)*s(331)
s(337) =< s(323)*s(332)
s(324) =< s(316)
s(338) =< s(324)
s(339) =< s(324)-1
s(340) =< s(338)*s(324)
s(341) =< s(338)*s(316)
s(342) =< s(338)*s(339)
s(343) =< s(338)*s(332)
s(313) =< s(318)
s(344) =< s(313)
s(345) =< s(313)
s(344) =< s(324)
s(346) =< s(344)*s(339)
s(347) =< s(344)*s(332)
s(348) =< s(330)*s(316)

  with precondition: [V=1,V2=0,V6>=1,V1>=V6+1] 

* Chain [31]: 1*s(349)+1*s(350)+2*s(352)+3
  Such that:s(351) =< V1
s(349) =< V2
s(350) =< V2+1
s(352) =< s(351)

  with precondition: [V=1,V1>=1,V6>=0,V2>=1,V2+V6>=V1] 

* Chain [30]: 2*s(357)+6*s(358)+1*s(359)+9*s(360)+3*s(363)+3*s(364)+2*s(365)+2*s(366)+3*s(367)+1*s(368)+1*s(369)+1*s(370)+3
  Such that:s(354) =< V1
s(355) =< V1-V6
s(353) =< V1-V6+1
s(356) =< V1-V6-V2
s(357) =< s(354)
s(358) =< s(355)
s(359) =< s(355)
s(360) =< s(356)
s(358) =< s(356)
s(361) =< s(355)-1
s(362) =< s(354)
s(363) =< s(360)*s(355)
s(364) =< s(360)*s(354)
s(365) =< s(358)*s(361)
s(366) =< s(358)*s(362)
s(367) =< s(353)
s(368) =< s(353)
s(367) =< s(355)
s(367) =< s(356)
s(369) =< s(367)*s(361)
s(370) =< s(367)*s(362)

  with precondition: [V=1,V6>=0,V2>=1,V1>=V2+V6+1] 


Closed-form bounds of start(V,V1,V6,V2): 
-------------------------------------
* Chain [36] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [35] with precondition: [V1=0,V>=0] 
    - Upper bound: nat(V2)+3+nat(V2+1) 
    - Complexity: n 
* Chain [34] with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 
    - Upper bound: 95*V1+32+34*V1*V1+ (V1+1)* (2*V1)+nat(V1-1)*7*V1+ (V1+1)* (nat(V1-1)*2)+ (8*V1+8) 
    - Complexity: n^2 
* Chain [33] with precondition: [V>=0,V1>=1] 
    - Upper bound: V+4*V1+3 
    - Complexity: n 
* Chain [32] with precondition: [V=1,V2=0,V6>=1,V1>=V6+1] 
    - Upper bound: 56*V1-56*V6+ (7*V1-7*V6+7+ (14*V1+12+ (V1+1)*V1+ (V1-V6+1)* (2*V1)+ (V1-V6)* (18*V1)+6*V6+ (V1-V6-1)* (V1+1)+ (V1-V6-1)* (V1-V6+1)+ (4*V1-4*V6-4)* (V1-V6)+ (4*V1+4)+ (2*V6+2)))+ (6*V1-6*V6)* (V1-V6) 
    - Complexity: n^2 
* Chain [31] with precondition: [V=1,V1>=1,V6>=0,V2>=1,V6+V2>=V1] 
    - Upper bound: 2*V1+2*V2+4 
    - Complexity: n 
* Chain [30] with precondition: [V=1,V6>=0,V2>=1,V1>=V6+V2+1] 
    - Upper bound: 9*V1-9*V6-9*V2+ (7*V1-7*V6+ (4*V1-4*V6+4+ (2*V1+3+ (V1-V6+1)*V1+ (V1-V6)* (2*V1)+ (V1-V6-V2)* (3*V1)+ (V1-V6-1)* (V1-V6+1)+ (2*V1-2*V6-2)* (V1-V6)))+ (V1-V6-V2)* (3*V1-3*V6)) 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V6,V2): max([nat(V2)+2+nat(V2+1),2*V1+2+max([max([nat(V2+1)+nat(V2),2*V1*nat(V1-V6)+nat(V1-V6+1)*V1+3*V1*nat(V1-V6-V2)+nat(V1-V6+1)*nat(nat(V1-V6)+ -1)+nat(nat(V1-V6)+ -1)*2*nat(V1-V6)+nat(V1-V6+1)*4+nat(V1-V6)*7+nat(V1-V6)*3*nat(V1-V6-V2)+nat(V1-V6-V2)*9]),2*V1+max([V,10*V1+9+ (V1+1)*V1+ (4*V1+4)+max([81*V1+20+34*V1*V1+ (V1+1)*V1+nat(V1-1)*7*V1+ (V1+1)* (nat(V1-1)*2)+ (4*V1+4),18*V1*nat(V1-V6)+2*V1*nat(V1-V6+1)+nat(V6)*6+ (V1+1)*nat(nat(V1-V6)+ -1)+nat(V1-V6+1)*nat(nat(V1-V6)+ -1)+nat(nat(V1-V6)+ -1)*4*nat(V1-V6)+nat(V6+1)*2+nat(V1-V6+1)*7+nat(V1-V6)*56+nat(V1-V6)*6*nat(V1-V6)])])])])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 258 ms.
   - Backward Invariants 98 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 145 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 399 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 61 ms.
   - Chain cost structures 83 ms.
   - Solving cost expressions 10 ms.
* Total analysis performed in 851 ms.

