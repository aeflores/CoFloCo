
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [equal/3]
1. recursive  : [min/3]
2. recursive  : [cond/4,minus/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into equal/3
1. SCC is partially evaluated into min/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations equal/3 
* CE 17 is refined into CE [18] 
* CE 14 is refined into CE [19] 
* CE 15 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 16 is refined into CE [22] 


#### Refined cost equations equal/3 
* CE 18: equal(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 19: equal(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 20: equal(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 21: equal(V1,V,Out) = 1
     [Out=2,V=0,V1=0] 
* CE 22: equal(V1,V,Out) = 1+ equal(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of equal/3 
* CEs [22] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of equal/3 
* Loop 12: equal(V1,V,Out)->  equal(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 13: equal(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 14: equal(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 15: equal(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 16: equal(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR equal(V1,V,Out) 
* RF of phase [12]: [V,V1]

#### Partial ranking functions of CR equal(V1,V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V
    V1


### Resulting Chains:equal(V1,V,Out) 
* [[12],16]
* [[12],15]
* [[12],14]
* [[12],13]
* [16]
* [15]
* [14]
* [13]


### Merging Chains  equal/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 
* [[13],[13,[12]]] --> 4 
* [[15,[12]]] --> 5 
* [[14,[12]]] --> 6 
* [[16,[12]]] --> 7 


### Specialization of cost equations min/3 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 11 is refined into CE [26] 


#### Refined cost equations min/3 
* CE 23: min(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 24: min(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 25: min(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 26: min(V1,V,Out) = 1+ min(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of min/3 
* CEs [26] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [24,25] --> Loop 19 

#### Loops of min/3 
* Loop 17: min(V1,V,Out)->  min(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 18: min(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 19: min(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR min(V1,V,Out) 
* RF of phase [17]: [V,V1]

#### Partial ranking functions of CR min(V1,V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V
    V1


### Resulting Chains:min(V1,V,Out) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  min/3 into  External patterns of execution 
* [[18],[19]] --> 1 
* [[18,[17]],[19,[17]]] --> 2 


### Specialization of cost equations minus/3 
* CE 8 is refined into CE [27,28] 
* CE 7 is refined into CE [29,30,31,32,33,34] 


#### Refined cost equations minus/3 
* CE 27: minus(V1,V,Out) = 2+ min(V1,W1,X1):1+ equal(Y1,Z1,A2):1+ minus(V1,B2,C2)
     [V1>=0,C2+1=Out,B2=1,A2=2,Z1=0,Y1=0,X1=0,W1=0,V=0] 
* CE 28: minus(V1,V,Out) = 2+ min(V1,V,V):2+ equal(V,V,W1):7+ minus(V1,X1,Y1)
     [V1>=V,V>=1,V+1=X1,Y1+1=Out,W1=2] 
* CE 29: minus(V1,V,Out) = 1+ min(V1,W1,X1):1+ equal(Y1,Z1,A2):1
     [V1>=0,A2=2,Z1=0,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 30: minus(V1,V,Out) = 1+ min(V1,V,W1):1+ equal(X1,V,Y1):2
     [V>=1,V1>=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 31: minus(V1,V,Out) = 1+ min(V1,V,W1):1+ equal(X1,V,Y1):4
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 32: minus(V1,V,Out) = 1+ min(V1,V,W1):2+ equal(W1,V,X1):4
     [V>=W1,V1>=W1,W1>=1,X1=0,Out=0] 
* CE 33: minus(V1,V,Out) = 1+ min(V1,V,W1):2+ equal(W1,V,X1):5
     [V>=W1+1,V1>=W1,W1>=1,X1=1,Out=0] 
* CE 34: minus(V1,V,Out) = 1+ min(V1,V,V):2+ equal(V,V,W1):7
     [V1>=V,V>=1,W1=2,Out=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [29,30,31,32,33,34] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of minus/3 
* Loop 20: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 21: minus(V1,V,Out)->  minus(V1,V',Out')
                  [V1>=V,V>=1,Out=Out'+1,V+1=V'] 
* Loop 22: minus(V1,V,Out)->  minus(V1,V',Out')
                  [V1>=0,Out=Out'+1,V'=1,V=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [21]: [V1-V+1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V1-V+1


### Resulting Chains:minus(V1,V,Out) 
* [[21],20]
* [22,[21],20]
* [22,20]
* [20]


### Merging Chains  minus/3 into  External patterns of execution 
* [[20,22]] --> 1 
* [[20,[21],22]] --> 2 
* [[20]] --> 3 
* [[20,[21]]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [35] 
* CE 3 is refined into CE [36,37] 
* CE 4 is refined into CE [38,39,40,41] 
* CE 5 is refined into CE [42,43] 
* CE 6 is refined into CE [44,45,46,47,48,49,50] 


#### Refined cost equations start/3 
* CE 35: start(V1,V,V5) = 0
     [V5>=0,V>=0,V1>=0] 
* CE 36: start(V1,V,V5) = 1+ minus(V,W5,X5):3
     [W5>=1,V>=0,W5=V5+1,X5=0,V1=2] 
* CE 37: start(V1,V,V5) = 1+ minus(V,W5,X5):4
     [V+1>=W5+X5,X5>=1,W5>=1,W5=V5+1,V1=2] 
* CE 38: start(V1,V,V5) = 0+ minus(V1,W5,X5):1
     [V1>=0,X5=1,W5=0,V=0] 
* CE 39: start(V1,V,V5) = 0+ minus(V1,W5,X5):2
     [V1+1>=X5,X5>=2,W5=0,V=0] 
* CE 40: start(V1,V,V5) = 0+ minus(V1,V,W5):3
     [V>=0,V1>=0,W5=0] 
* CE 41: start(V1,V,V5) = 0+ minus(V1,V,W5):4
     [V1+1>=V+W5,W5>=1,V>=1] 
* CE 42: start(V1,V,V5) = 0+ min(V1,V,W5):1
     [V>=0,V1>=0,W5=0] 
* CE 43: start(V1,V,V5) = 0+ min(V1,V,W5):2
     [V>=W5,V1>=W5,W5>=1] 
* CE 44: start(V1,V,V5) = 0+ equal(W5,X5,Y5):1
     [Y5=2,X5=0,W5=0,V=0,V1=0] 
* CE 45: start(V1,V,V5) = 0+ equal(W5,V,X5):2
     [V>=1,X5=1,W5=0,V1=0] 
* CE 46: start(V1,V,V5) = 0+ equal(V1,W5,X5):3
     [V1>=1,X5=1,W5=0,V=0] 
* CE 47: start(V1,V,V5) = 0+ equal(V1,V,W5):4
     [V>=0,V1>=0,W5=0] 
* CE 48: start(V1,V,V5) = 0+ equal(V1,V,W5):5
     [V>=V1+1,V1>=1,W5=1] 
* CE 49: start(V1,V,V5) = 0+ equal(V1,V,W5):6
     [V1>=V+1,V>=1,W5=1] 
* CE 50: start(A,A,B) = 0+ equal(A,A,C):7
     [A>=1,C=2] 

### Cost equations --> "Loop" of start/3 
* CEs [50] --> Loop 23 
* CEs [36,37] --> Loop 24 
* CEs [45] --> Loop 25 
* CEs [35,38,39,40,41,42,43,44,46,47,48,49] --> Loop 26 

#### Loops of start/3 
* Loop 23: start(A,A,B) [A>=1] 
* Loop 24: start(V1,V,V5) [V5>=0,V>=0,V1=2] 
* Loop 25: start(V1,V,V5) [V>=1,V1=0] 
* Loop 26: start(V1,V,V5) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V5) 

#### Partial ranking functions of CR start(V1,V,V5) 


### Resulting Chains:start(V1,V,V5) 
* [26]
* [25]
* [24]
* [23]


### Merging Chains  start/3 into  External patterns of execution 
* [[25],[26]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1
#### Cost of phase [12]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:equal(V1,V,Out) -> [equal(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of chains of equal(V1,V,Out):
* Chain [[12],16]: 1*it(12)+1
  Such that:it(12) =< V1

  with precondition: [Out=2,V1=V,V1>=1] 

* Chain [[12],15]: 1*it(12)+1
  Such that:it(12) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[12],14]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [16]: 1
  with precondition: [V1=0,V=0,Out=2] 

* Chain [15]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [14]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [17] 

 * loop 17:min(V1,V,Out) -> [min(V1',V',Out')] 
1
#### Cost of phase [17]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'
it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'
it(17) =< V
it(17) =< V-V'

#### Cost of chains of min(V1,V,Out):
* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [[17],18]: 1*it(17)+1
  Such that:it(17) =< Out

  with precondition: [V=Out,V>=1,V1>=V] 

* Chain [19]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [18]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [21] 

 * loop 21:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*s(18)+4
  Such that:s(17) =< V'
s(18) =< s(17)

#### Cost of phase [21]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
4*it(21)+3*s(19)+0
  Such that:aux(7) =< V1+1
it(21) =< V1-V+1
it(21) =< V1-V-V1'+V'
s(20) =< it(21)*aux(7)
s(19) =< s(20)

#### Cost of chains of minus(V1,V,Out):
* Chain [[21],20]: 4*it(21)+10*s(4)+3*s(19)+3
  Such that:aux(7) =< V1+1
aux(5) =< V+Out
it(21) =< Out
s(4) =< aux(5)
s(20) =< it(21)*aux(7)
s(19) =< s(20)

  with precondition: [V>=1,Out>=1,V1+1>=Out+V] 

* Chain [22,[21],20]: 14*it(21)+3*s(19)+7
  Such that:aux(7) =< V1+1
aux(8) =< Out
it(21) =< aux(8)
s(20) =< it(21)*aux(7)
s(19) =< s(20)

  with precondition: [V=0,Out>=2,V1+1>=Out] 

* Chain [22,20]: 10*s(4)+7
  Such that:aux(5) =< 1
s(4) =< aux(5)

  with precondition: [V=0,Out=1,V1>=0] 

* Chain [20]: 10*s(4)+3
  Such that:aux(5) =< V
s(4) =< aux(5)

  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V,V5):
* Chain [26]: 10*s(22)+24*s(25)+3*s(27)+14*s(29)+4*s(32)+3*s(35)+1*s(39)+7
  Such that:s(21) =< 1
s(39) =< V1
s(32) =< V1-V+1
aux(11) =< V1+1
aux(12) =< V
s(29) =< aux(12)
s(22) =< s(21)
s(25) =< aux(11)
s(26) =< s(25)*aux(11)
s(27) =< s(26)
s(34) =< s(32)*aux(11)
s(35) =< s(34)

  with precondition: [V1>=0,V>=0] 

* Chain [25]: 1
  with precondition: [V1=0,V>=1] 

* Chain [24]: 10*s(42)+4*s(45)+10*s(46)+3*s(48)+4
  Such that:aux(13) =< V+1
s(45) =< V-V5
s(41) =< V5+1
s(46) =< aux(13)
s(47) =< s(45)*aux(13)
s(48) =< s(47)
s(42) =< s(41)

  with precondition: [V1=2,V>=0,V5>=0] 

* Chain [23]: 1*s(49)+1
  Such that:s(49) =< V

  with precondition: [V1=V,V1>=1] 


Closed-form bounds of start(V1,V,V5): 
-------------------------------------
* Chain [26] with precondition: [V1>=0,V>=0] 
    - Upper bound: 25*V1+14*V+41+ (3*V1+3)* (V1+1)+ (3*V1+3)*nat(V1-V+1)+nat(V1-V+1)*4 
    - Complexity: n^2 
* Chain [25] with precondition: [V1=0,V>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [24] with precondition: [V1=2,V>=0,V5>=0] 
    - Upper bound: 10*V+14+ (3*V+3)*nat(V-V5)+ (10*V5+10)+nat(V-V5)*4 
    - Complexity: n^2 
* Chain [23] with precondition: [V1=V,V1>=1] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V1,V,V5): max([10*V+13+ (3*V+3)*nat(V-V5)+nat(V5+1)*10+nat(V-V5)*4,25*V1+13*V+40+ (3*V1+3)* (V1+1)+ (3*V1+3)*nat(V1-V+1)+nat(V1-V+1)*4+V])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 32 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 65 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 73 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 216 ms.

