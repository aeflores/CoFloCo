
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [gr/3]
1. recursive  : [cond/4]
2. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into gr/3
1. SCC is partially evaluated into cond/4
2. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations gr/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations gr/3 
* CE 9: gr(V1,V,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 10: gr(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 11: gr(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of gr/3 
* Loop 7: gr(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 8: gr(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 9: gr(V1,V,Out)->  gr(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR gr(V1,V,Out) 
* RF of phase [9]: [V,V1]

#### Partial ranking functions of CR gr(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V
    V1


### Resulting Chains:gr(V1,V,Out) 
* [[9],8]
* [[9],7]
* [8]
* [7]


### Merging Chains  gr/3 into  External patterns of execution 
* [[8]] --> 1 
* [[7]] --> 2 
* [[8,[9]]] --> 3 
* [[7,[9]]] --> 4 


### Specialization of cost equations cond/4 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14,15,16] 


#### Refined cost equations cond/4 
* CE 12: cond(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 13: cond(V1,V,V2,Out) = 1+ gr(W2,V2,X2):1+ cond(Y2,V2,Z2,Out)
     [V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=1] 
* CE 14: cond(V1,V,V2,Out) = 1+ gr(V,W2,X2):2+ cond(Y2,Z2,V,Out)
     [V>=1,Z2=0,Y2=1,X2=1,W2=0,V2=0,V1=1] 
* CE 15: cond(V1,V,V2,Out) = 1+ gr(V,V2,W2):3+ cond(X2,V2,V,Out)
     [V2>=V,V>=1,X2=0,W2=0,V1=1] 
* CE 16: cond(V1,V,V2,Out) = 1+ gr(V,V2,W2):4+ cond(X2,V2,V,Out)
     [V>=V2+1,V2>=1,X2=1,W2=1,V1=1] 

### Cost equations --> "Loop" of cond/4 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of cond/4 
* Loop 10: cond(V1,V,V2,Out)->  cond(A',V2,V,Out)
                  [V>=V2+1,V2>=1,A'=1,V1=1] 
* Loop 11: cond(V1,V,V2,Out)->  cond(A',V2,V,Out)
                  [V2>=V,V>=1,A'=0,V1=1] 
* Loop 12: cond(V1,V,V2,Out)->  cond(A',B',V,Out)
                  [V>=1,B'=0,A'=1,V2=0,V1=1] 
* Loop 13: cond(V1,V,V2,Out)->  cond(A',V2,B',Out)
                  [V2>=0,B'=0,A'=0,V=0,V1=1] 
* Loop 14: cond(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR cond(V1,V,V2,Out) 

#### Partial ranking functions of CR cond(V1,V,V2,Out) 


### Resulting Chains:cond(V1,V,V2,Out) 
* [14]
* [13,14]
* [12,14]
* [12,13,14]
* [11,14]
* [10,14]
* [10,11,14]


### Merging Chains  cond/4 into  External patterns of execution 
* [[14,13],[14]] --> 1 
* [[14,13,12],[14,12]] --> 2 
* [[14,11]] --> 3 
* [[14,11,10],[14,10]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [17,18,19,20] 
* CE 3 is refined into CE [21,22,23,24] 


#### Refined cost equations start/3 
* CE 17: start(V1,V,V2) = 0+ cond(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 18: start(V1,V,V2) = 0+ cond(W2,V,X2,Y2):2
     [V>=1,Y2=0,X2=0,W2=1,V2=0,V1=1] 
* CE 19: start(V1,V,V2) = 0+ cond(W2,V,V2,X2):3
     [V2>=V,V>=1,X2=0,W2=1,V1=1] 
* CE 20: start(V1,V,V2) = 0+ cond(W2,V,V2,X2):4
     [V>=V2+1,V2>=1,X2=0,W2=1,V1=1] 
* CE 21: start(V1,V,V2) = 0+ gr(W2,V,X2):1
     [V>=0,X2=0,W2=0,V1=0] 
* CE 22: start(V1,V,V2) = 0+ gr(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 23: start(V1,V,V2) = 0+ gr(V1,V,W2):3
     [V>=V1,V1>=1,W2=0] 
* CE 24: start(V1,V,V2) = 0+ gr(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 

### Cost equations --> "Loop" of start/3 
* CEs [24] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [19,23] --> Loop 18 
* CEs [17,18] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of start/3 
* Loop 15: start(V1,V,V2) [V1>=V+1,V>=1] 
* Loop 16: start(V1,V,V2) [V1>=1,V=0] 
* Loop 17: start(V1,V,V2) [V>=V2+1,V2>=1,V1=1] 
* Loop 18: start(V1,V,V2) [V>=V1,V1>=1] 
* Loop 19: start(V1,V,V2) [V2>=0,V>=0,V1>=0] 
* Loop 20: start(V1,V,V2) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  start/3 into  External patterns of execution 
* [[20]] --> 1 
* [[17],[19]] --> 2 
* [[16]] --> 3 
* [[18]] --> 4 
* [[15]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1
#### Cost of phase [9]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of chains of gr(V1,V,Out):
* Chain [[9],8]: 1*it(9)+1
  Such that:it(9) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[9],7]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [8]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [7]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of chains of cond(V1,V,V2,Out):
* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 

* Chain [13,14]: 2
  with precondition: [V1=1,V=0,Out=0,V2>=0] 

* Chain [12,14]: 2
  with precondition: [V1=1,V2=0,Out=0,V>=1] 

* Chain [12,13,14]: 4
  with precondition: [V1=1,V2=0,Out=0,V>=1] 

* Chain [11,14]: 1*s(1)+2
  Such that:s(1) =< V

  with precondition: [V1=1,Out=0,V>=1,V2>=V] 

* Chain [10,14]: 1*s(2)+2
  Such that:s(2) =< V2

  with precondition: [V1=1,Out=0,V2>=1,V>=V2+1] 

* Chain [10,11,14]: 2*s(1)+4
  Such that:aux(1) =< V2
s(1) =< aux(1)

  with precondition: [V1=1,Out=0,V2>=1,V>=V2+1] 


#### Cost of chains of start(V1,V,V2):
* Chain [20]: 1
  with precondition: [V1=0,V>=0] 

* Chain [19]: 4
  with precondition: [V1>=0,V>=0,V2>=0] 

* Chain [18]: 1*s(6)+1*s(7)+2
  Such that:s(7) =< V1
s(6) =< V

  with precondition: [V1>=1,V>=V1] 

* Chain [17]: 3*s(9)+4
  Such that:s(8) =< V2
s(9) =< s(8)

  with precondition: [V1=1,V2>=1,V>=V2+1] 

* Chain [16]: 1
  with precondition: [V=0,V1>=1] 

* Chain [15]: 1*s(10)+1
  Such that:s(10) =< V

  with precondition: [V>=1,V1>=V+1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [20] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V1>=0,V>=0,V2>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [18] with precondition: [V1>=1,V>=V1] 
    - Upper bound: V1+V+2 
    - Complexity: n 
* Chain [17] with precondition: [V1=1,V2>=1,V>=V2+1] 
    - Upper bound: 3*V2+4 
    - Complexity: n 
* Chain [16] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [V>=1,V1>=V+1] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): max([V1+V+1,max([3,nat(V2)*3+3])])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 94 ms.
   - Backward Invariants 46 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 123 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 115 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 404 ms.

