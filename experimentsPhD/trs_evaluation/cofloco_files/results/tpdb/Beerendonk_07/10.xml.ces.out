
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [div2/2]
1. recursive  : [neq/3]
2. non_recursive  : [p/2]
3. recursive  : [even/2]
4. recursive  : [cond1/3,cond2/3]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into div2/2
1. SCC is partially evaluated into neq/3
2. SCC is partially evaluated into p/2
3. SCC is partially evaluated into even/2
4. SCC is partially evaluated into cond2/3
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations div2/2 
* CE 24 is refined into CE [30] 
* CE 23 is refined into CE [31] 
* CE 26 is refined into CE [32] 
* CE 25 is refined into CE [33] 


#### Refined cost equations div2/2 
* CE 30: div2(V1,Out) = 1
     [Out=0,V1=1] 
* CE 31: div2(V1,Out) = 1
     [Out=0,V1=0] 
* CE 32: div2(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 33: div2(V1,Out) = 1+ div2(W1,X1)
     [W1>=0,X1+1=Out,W1+2=V1] 

### Cost equations --> "Loop" of div2/2 
* CEs [33] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [31,32] --> Loop 22 

#### Loops of div2/2 
* Loop 20: div2(V1,Out)->  div2(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+2=V1] 
* Loop 21: div2(V1,Out) [Out=0,V1=1] 
* Loop 22: div2(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR div2(V1,Out) 
* RF of phase [20]: [V1-1]

#### Partial ranking functions of CR div2(V1,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V1-1


### Resulting Chains:div2(V1,Out) 
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  div2/2 into  External patterns of execution 
* [[21],[22]] --> 1 
* [[21,[20]],[22,[20]]] --> 2 


### Specialization of cost equations neq/3 
* CE 22 is refined into CE [34] 
* CE 20 is refined into CE [35] 
* CE 19 is refined into CE [36] 
* CE 18 is refined into CE [37] 
* CE 21 is refined into CE [38] 


#### Refined cost equations neq/3 
* CE 34: neq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 35: neq(V1,V,Out) = 1
     [V1>=1,Out=2,V=0] 
* CE 36: neq(V1,V,Out) = 1
     [V>=1,Out=2,V1=0] 
* CE 37: neq(V1,V,Out) = 1
     [Out=1,V=0,V1=0] 
* CE 38: neq(V1,V,Out) = 1+ neq(W1,X1,Out)
     [W1>=0,W1+1=V1,X1=1,V=2] 

### Cost equations --> "Loop" of neq/3 
* CEs [38] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [35] --> Loop 25 
* CEs [36] --> Loop 26 
* CEs [37] --> Loop 27 

#### Loops of neq/3 
* Loop 23: neq(V1,V,Out)->  neq(V1',V',Out)
                  [V1'>=0,V1'+1=V1,V'=1,V=2] 
* Loop 24: neq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 25: neq(V1,V,Out) [V1>=1,Out=2,V=0] 
* Loop 26: neq(V1,V,Out) [V>=1,Out=2,V1=0] 
* Loop 27: neq(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR neq(V1,V,Out) 

#### Partial ranking functions of CR neq(V1,V,Out) 


### Resulting Chains:neq(V1,V,Out) 
* [27]
* [26]
* [25]
* [24]
* [23,26]
* [23,24]


### Merging Chains  neq/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[26,23]] --> 3 
* [[25]] --> 4 
* [[24,23],[24]] --> 5 


### Specialization of cost equations p/2 
* CE 28 is refined into CE [39] 
* CE 27 is refined into CE [40] 
* CE 29 is refined into CE [41] 


#### Refined cost equations p/2 
* CE 39: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 40: p(V1,Out) = 1
     [Out=0,V1=0] 
* CE 41: p(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [39] --> Loop 28 
* CEs [40,41] --> Loop 29 

#### Loops of p/2 
* Loop 28: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 29: p(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [29]
* [28]


### Merging Chains  p/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations even/2 
* CE 12 is refined into CE [42] 
* CE 10 is refined into CE [43] 
* CE 9 is refined into CE [44] 
* CE 11 is refined into CE [45] 


#### Refined cost equations even/2 
* CE 42: even(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 43: even(V1,Out) = 1
     [Out=1,V1=1] 
* CE 44: even(V1,Out) = 1
     [Out=2,V1=0] 
* CE 45: even(V1,Out) = 1+ even(W1,Out)
     [W1>=0,W1+2=V1] 

### Cost equations --> "Loop" of even/2 
* CEs [45] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [43] --> Loop 32 
* CEs [44] --> Loop 33 

#### Loops of even/2 
* Loop 30: even(V1,Out)->  even(V1',Out)
                  [V1'>=0,V1'+2=V1] 
* Loop 31: even(V1,Out) [V1>=0,Out=0] 
* Loop 32: even(V1,Out) [Out=1,V1=1] 
* Loop 33: even(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR even(V1,Out) 
* RF of phase [30]: [V1-1]

#### Partial ranking functions of CR even(V1,Out) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V1-1


### Resulting Chains:even(V1,Out) 
* [[30],33]
* [[30],32]
* [[30],31]
* [33]
* [32]
* [31]


### Merging Chains  even/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31],[31,[30]]] --> 3 
* [[32,[30]]] --> 4 
* [[33,[30]]] --> 5 


### Specialization of cost equations cond2/3 
* CE 14 is refined into CE [46,47,48,49,50] 
* CE 13 is refined into CE [51,52,53,54,55] 
* CE 17 is refined into CE [56] 
* CE 16 is refined into CE [57,58,59,60,61,62] 
* CE 15 is refined into CE [63,64,65,66,67,68,69] 


#### Refined cost equations cond2/3 
* CE 46: cond2(V1,V,Out) = 1+ neq(W1,X1,Y1):1+ div2(Z1,A2):1
     [A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0,V=0,V1=2] 
* CE 47: cond2(V1,V,Out) = 1+ neq(V,W1,X1):4+ div2(V,Y1):1
     [V>=1,Y1=0,X1=2,W1=0,Out=0,V1=2] 
* CE 48: cond2(V1,V,Out) = 1+ neq(V,W1,X1):4+ div2(V,Y1):2
     [V>=2*Y1,Y1>=1,X1=2,W1=0,Out=0,V1=2] 
* CE 49: cond2(V1,V,Out) = 1+ neq(V,W1,X1):5+ div2(V,Y1):1
     [V>=0,Y1=0,X1=0,W1=0,Out=0,V1=2] 
* CE 50: cond2(V1,V,Out) = 1+ neq(V,W1,X1):5+ div2(V,Y1):2
     [V>=2*Y1,Y1>=1,X1=0,W1=0,Out=0,V1=2] 
* CE 51: cond2(V1,V,Out) = 1+ neq(W1,X1,Y1):1+ p(Z1,A2):1
     [A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0,V=0,V1=1] 
* CE 52: cond2(V1,V,Out) = 1+ neq(V,W1,X1):4+ p(V,Y1):1
     [V>=1,Y1=0,X1=2,W1=0,Out=0,V1=1] 
* CE 53: cond2(V1,V,Out) = 1+ neq(W1,X1,Y1):4+ p(Z1,A2):2
     [A2>=0,A2+1=Z1,A2+1=W1,A2+1=V,Y1=2,X1=0,Out=0,V1=1] 
* CE 54: cond2(V1,V,Out) = 1+ neq(V,W1,X1):5+ p(V,Y1):1
     [V>=0,Y1=0,X1=0,W1=0,Out=0,V1=1] 
* CE 55: cond2(V1,V,Out) = 1+ neq(W1,X1,Y1):5+ p(Z1,A2):2
     [A2>=0,A2+1=Z1,A2+1=W1,A2+1=V,Y1=0,X1=0,Out=0,V1=1] 
* CE 56: cond2(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 57: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):1+ even(Z1,A2):1+ cond2(B2,C2,Out)
     [V>=1,C2=0,B2=2,A2=2,Z1=0,Y1=0,X1=2,W1=0,V1=2] 
* CE 58: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):1+ even(Z1,A2):3+ cond2(B2,C2,Out)
     [V>=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,V1=2] 
* CE 59: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):2+ even(Z1,A2):2+ cond2(B2,C2,Out)
     [V>=2,C2=1,B2=1,A2=1,Z1=1,Y1=1,X1=2,W1=0,V1=2] 
* CE 60: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):2+ even(Y1,Z1):3+ cond2(A2,Y1,Out)
     [V>=2*Y1,Y1>=1,A2=0,Z1=0,X1=2,W1=0,V1=2] 
* CE 61: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):2+ even(Y1,Z1):4+ cond2(A2,Y1,Out)
     [V>=2*Y1,Y1>=3,A2=1,Z1=1,X1=2,W1=0,V1=2] 
* CE 62: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ div2(V,Y1):2+ even(Y1,Z1):5+ cond2(A2,Y1,Out)
     [V>=2*Y1,Y1>=2,A2=2,Z1=2,X1=2,W1=0,V1=2] 
* CE 63: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ p(V,Y1):1+ even(Z1,A2):1+ cond2(B2,C2,Out)
     [V>=1,C2=0,B2=2,A2=2,Z1=0,Y1=0,X1=2,W1=0,V1=1] 
* CE 64: cond2(V1,V,Out) = 2+ neq(V,W1,X1):4+ p(V,Y1):1+ even(Z1,A2):3+ cond2(B2,C2,Out)
     [V>=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,V1=1] 
* CE 65: cond2(V1,V,Out) = 2+ neq(W1,X1,Y1):4+ p(Z1,A2):2+ even(B2,C2):1+ cond2(D2,E2,Out)
     [E2=0,D2=2,C2=2,B2=0,A2=0,Z1=1,Y1=2,X1=0,W1=1,V=1,V1=1] 
* CE 66: cond2(V1,V,Out) = 2+ neq(W1,X1,Y1):4+ p(Z1,A2):2+ even(B2,C2):2+ cond2(D2,E2,Out)
     [E2=1,D2=1,C2=1,B2=1,A2=1,Z1=2,Y1=2,X1=0,W1=2,V=2,V1=1] 
* CE 67: cond2(V1,V,Out) = 2+ neq(W1,X1,Y1):4+ p(Z1,A2):2+ even(A2,B2):3+ cond2(C2,A2,Out)
     [A2>=0,A2+1=Z1,A2+1=W1,A2+1=V,C2=0,B2=0,Y1=2,X1=0,V1=1] 
* CE 68: cond2(V1,V,Out) = 2+ neq(W1,X1,Y1):4+ p(Z1,A2):2+ even(A2,B2):4+ cond2(C2,A2,Out)
     [A2>=3,A2+1=Z1,A2+1=W1,A2+1=V,C2=1,B2=1,Y1=2,X1=0,V1=1] 
* CE 69: cond2(V1,V,Out) = 2+ neq(W1,X1,Y1):4+ p(Z1,A2):2+ even(A2,B2):5+ cond2(C2,A2,Out)
     [A2>=2,A2+1=Z1,A2+1=W1,A2+1=V,C2=2,B2=2,Y1=2,X1=0,V1=1] 

### Cost equations --> "Loop" of cond2/3 
* CEs [62] --> Loop 34 
* CEs [57] --> Loop 35 
* CEs [61] --> Loop 36 
* CEs [59] --> Loop 37 
* CEs [60] --> Loop 38 
* CEs [58] --> Loop 39 
* CEs [69] --> Loop 40 
* CEs [68] --> Loop 41 
* CEs [67] --> Loop 42 
* CEs [64] --> Loop 43 
* CEs [66] --> Loop 44 
* CEs [63,65] --> Loop 45 
* CEs [46,47,48,49,50] --> Loop 46 
* CEs [51,52,53,54,55,56] --> Loop 47 

#### Loops of cond2/3 
* Loop 34: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=2*V',V'>=2,V1'=2,V1=2] 
* Loop 35: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=1,V'=0,V1'=2,V1=2] 
* Loop 36: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=2*V',V'>=3,V1'=1,V1=2] 
* Loop 37: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=2,V'=1,V1'=1,V1=2] 
* Loop 38: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=2*V',V'>=1,V1'=0,V1=2] 
* Loop 39: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=1,V'=0,V1'=0,V1=2] 
* Loop 40: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=3,V=V'+1,V1'=2,V1=1] 
* Loop 41: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=4,V=V'+1,V1'=1,V1=1] 
* Loop 42: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=1,V=V'+1,V1'=0,V1=1] 
* Loop 43: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=1,V'=0,V1'=0,V1=1] 
* Loop 44: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V'=1,V1'=1,V=2,V1=1] 
* Loop 45: cond2(V1,V,Out)->  cond2(V1',V',Out)
                  [V>=1,V'=0,V1'=2,V1=1] 
* Loop 46: cond2(V1,V,Out) [V>=0,Out=0,V1=2] 
* Loop 47: cond2(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR cond2(V1,V,Out) 
* RF of phase [34,36,40,41]: [V-2,-2*V1+V+1,-V1+V-1]

#### Partial ranking functions of CR cond2(V1,V,Out) 
* Partial RF of phase [34,36,40,41]:
  - RF of loop [34:1,41:1]:
    V-3
  - RF of loop [36:1]:
    V/3-5/3
    V1-1 depends on loops [40:1] 
  - RF of loop [40:1]:
    V-2
    -V1+2 depends on loops [36:1] 


### Resulting Chains:cond2(V1,V,Out) 
* [[34,36,40,41],47]
* [[34,36,40,41],46]
* [[34,36,40,41],45,47]
* [[34,36,40,41],45,46]
* [[34,36,40,41],43,47]
* [[34,36,40,41],42,47]
* [[34,36,40,41],39,47]
* [[34,36,40,41],38,47]
* [[34,36,40,41],37,47]
* [[34,36,40,41],37,45,47]
* [[34,36,40,41],37,45,46]
* [[34,36,40,41],37,43,47]
* [[34,36,40,41],37,42,47]
* [[34,36,40,41],35,47]
* [[34,36,40,41],35,46]
* [47]
* [46]
* [45,47]
* [45,46]
* [44,47]
* [44,45,47]
* [44,45,46]
* [44,43,47]
* [44,42,47]
* [43,47]
* [42,47]
* [39,47]
* [38,47]
* [37,47]
* [37,45,47]
* [37,45,46]
* [37,43,47]
* [37,42,47]
* [35,47]
* [35,46]


### Merging Chains  cond2/3 into  External patterns of execution 
* [[47,42],[47,43],[47,42,44],[47,43,44],[46,45,44],[47,45,44],[47,44],[46,45],[47,45],[47]] --> 1 
* [[46,35],[47,35],[47,42,37],[47,43,37],[46,45,37],[47,45,37],[47,37],[47,38],[47,39],[46]] --> 2 
* [[46,35,[34,36,40,41]],[47,35,[34,36,40,41]],[47,42,37,[34,36,40,41]],[47,43,37,[34,36,40,41]],[46,45,37,[34,36,40,41]],[47,45,37,[34,36,40,41]],[47,37,[34,36,40,41]],[47,38,[34,36,40,41]],[47,39,[34,36,40,41]],[47,42,[34,36,40,41]],[47,43,[34,36,40,41]],[46,45,[34,36,40,41]],[47,45,[34,36,40,41]],[46,[34,36,40,41]],[47,[34,36,40,41]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [70] 
* CE 3 is refined into CE [71,72,73,74,75,76,77,78,79] 
* CE 4 is refined into CE [80,81,82] 
* CE 5 is refined into CE [83,84,85,86,87] 
* CE 6 is refined into CE [88,89,90,91,92] 
* CE 7 is refined into CE [93,94] 
* CE 8 is refined into CE [95,96] 


#### Refined cost equations start/2 
* CE 70: start(V1,V) = 0
     [V>=0,V1>=0] 
* CE 71: start(V1,V) = 1+ even(W1,X1):1+ cond2(Y1,Z1,A2):1
     [A2=0,Z1=0,Y1=2,X1=2,W1=0,V=0,V1=2] 
* CE 72: start(V1,V) = 1+ even(W1,X1):1+ cond2(Y1,Z1,A2):2
     [A2=0,Z1=0,Y1=2,X1=2,W1=0,V=0,V1=2] 
* CE 73: start(V1,V) = 1+ even(W1,X1):2+ cond2(Y1,Z1,A2):1
     [A2=0,Z1=1,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 74: start(V1,V) = 1+ even(V,W1):3+ cond2(X1,V,Y1):1
     [V>=0,Y1=0,X1=0,W1=0,V1=2] 
* CE 75: start(V1,V) = 1+ even(V,W1):4+ cond2(X1,V,Y1):1
     [V>=3,Y1=0,X1=1,W1=1,V1=2] 
* CE 76: start(V1,V) = 1+ even(V,W1):4+ cond2(X1,V,Y1):3
     [V>=3,Y1=0,X1=1,W1=1,V1=2] 
* CE 77: start(V1,V) = 1+ even(V,W1):5+ cond2(X1,V,Y1):1
     [V>=2,Y1=0,X1=2,W1=2,V1=2] 
* CE 78: start(V1,V) = 1+ even(V,W1):5+ cond2(X1,V,Y1):2
     [V>=2,Y1=0,X1=2,W1=2,V1=2] 
* CE 79: start(V1,V) = 1+ even(V,W1):5+ cond2(X1,V,Y1):3
     [V>=4,Y1=0,X1=2,W1=2,V1=2] 
* CE 80: start(V1,V) = 0+ cond2(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 81: start(V1,V) = 0+ cond2(W1,V,X1):2
     [V>=0,X1=0,W1=2,V1=2] 
* CE 82: start(V1,V) = 0+ cond2(V1,V,W1):3
     [V>=V1+2,V1>=1,2>=V1,W1=0] 
* CE 83: start(V1,V) = 0+ neq(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,V=0,V1=0] 
* CE 84: start(V1,V) = 0+ neq(W1,V,X1):2
     [V>=1,X1=2,W1=0,V1=0] 
* CE 85: start(V1,V) = 0+ neq(W1,X1,Y1):3
     [Y1=2,X1=2,W1=1,V=2,V1=1] 
* CE 86: start(V1,V) = 0+ neq(V1,W1,X1):4
     [V1>=1,X1=2,W1=0,V=0] 
* CE 87: start(V1,V) = 0+ neq(V1,V,W1):5
     [V>=0,V1>=0,W1=0] 
* CE 88: start(V1,V) = 0+ even(W1,X1):1
     [X1=2,W1=0,V1=0] 
* CE 89: start(V1,V) = 0+ even(W1,X1):2
     [X1=1,W1=1,V1=1] 
* CE 90: start(V1,V) = 0+ even(V1,W1):3
     [V1>=0,W1=0] 
* CE 91: start(V1,V) = 0+ even(V1,W1):4
     [V1>=3,W1=1] 
* CE 92: start(V1,V) = 0+ even(V1,W1):5
     [V1>=2,W1=2] 
* CE 93: start(V1,V) = 0+ div2(V1,W1):1
     [V1>=0,W1=0] 
* CE 94: start(V1,V) = 0+ div2(V1,W1):2
     [V1>=2*W1,W1>=1] 
* CE 95: start(V1,V) = 0+ p(V1,W1):1
     [V1>=0,W1=0] 
* CE 96: start(V1,V) = 0+ p(W1,X1):2
     [X1>=0,X1+1=W1,X1+1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [82] --> Loop 48 
* CEs [86] --> Loop 49 
* CEs [73] --> Loop 50 
* CEs [71,72,74,75,76,77,78,79,81] --> Loop 51 
* CEs [85,89] --> Loop 52 
* CEs [70,80,83,84,87,88,90,91,92,93,94,95,96] --> Loop 53 

#### Loops of start/2 
* Loop 48: start(V1,V) [V>=V1+2,V1>=1,2>=V1] 
* Loop 49: start(V1,V) [V1>=1,V=0] 
* Loop 50: start(V1,V) [V=1,V1=2] 
* Loop 51: start(V1,V) [V>=0,V1=2] 
* Loop 52: start(V1,V) [V1=1] 
* Loop 53: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]


### Merging Chains  start/2 into  External patterns of execution 
* [[52],[53]] --> 1 
* [[50],[51]] --> 2 
* [[49]] --> 3 
* [[48]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:div2(V1,Out) -> [div2(V1',Out')] 
1
#### Cost of phase [20]:div2(V1,Out) -> [div2(V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'

#### Cost of phase [20]:div2(V1,Out) -> [div2(V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'

#### Cost of chains of div2(V1,Out):
* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< 2*Out

  with precondition: [Out>=1,V1>=2*Out] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< 2*Out

  with precondition: [V1=2*Out+1,V1>=3] 

* Chain [22]: 1
  with precondition: [Out=0,V1>=0] 

* Chain [21]: 1
  with precondition: [V1=1,Out=0] 


#### Cost of chains of neq(V1,V,Out):
* Chain [27]: 1
  with precondition: [V1=0,V=0,Out=1] 

* Chain [26]: 1
  with precondition: [V1=0,Out=2,V>=1] 

* Chain [25]: 1
  with precondition: [V=0,Out=2,V1>=1] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [23,26]: 2
  with precondition: [V1=1,V=2,Out=2] 

* Chain [23,24]: 1
  with precondition: [V=2,Out=0,V1>=1] 


#### Cost of chains of p(V1,Out):
* Chain [29]: 1
  with precondition: [Out=0,V1>=0] 

* Chain [28]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [30] 

 * loop 30:even(V1,Out) -> [even(V1',Out')] 
1
#### Cost of phase [30]:even(V1,Out) -> [even(V1',Out')] 
1*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:even(V1,Out) -> [even(V1',Out')] 
1*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:even(V1,Out) -> [even(V1',Out')] 
1*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of chains of even(V1,Out):
* Chain [[30],33]: 1*it(30)+1
  Such that:it(30) =< V1

  with precondition: [Out=2,V1>=2] 

* Chain [[30],32]: 1*it(30)+1
  Such that:it(30) =< V1

  with precondition: [Out=1,V1>=3] 

* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< V1

  with precondition: [Out=0,V1>=2] 

* Chain [33]: 1
  with precondition: [V1=0,Out=2] 

* Chain [32]: 1
  with precondition: [V1=1,Out=1] 

* Chain [31]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [34,36,40,41] 

 * loop 34:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
2*s(9)+1*s(7)+5
  Such that:s(7) =< V'
s(8) =< 2*V'
s(9) =< s(8)

 * loop 36:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
2*s(15)+1*s(13)+5
  Such that:s(13) =< V'
s(14) =< 2*V'
s(15) =< s(14)

 * loop 40:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
1*s(17)+5
  Such that:s(17) =< V'

 * loop 41:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
1*s(19)+5
  Such that:s(19) =< V'

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of phase [34,36,40,41]:cond2(V1,V,Out) -> [cond2(V1',V',Out')] 
15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+0
  Such that:it(36) =< V/3
it(36) =< V/3-V'/3
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2*V1'-V'
aux(12) =< -V1+V
aux(13) =< -V1+V+V1'-V'
aux(14) =< V
aux(15) =< V-V'
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(36) =< aux(13)
aux(2) =< aux(14)
it(34) =< aux(14)
it(36) =< aux(14)
s(21) =< aux(14)
aux(2) =< aux(15)
it(34) =< aux(15)
it(36) =< aux(15)
s(21) =< aux(15)
aux(9) =< aux(14)
s(22) =< aux(2)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(14)
s(20) =< s(22)

#### Cost of chains of cond2(V1,V,Out):
* Chain [[34,36,40,41],47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+3
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(16) =< -V1+V
aux(17) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(16)
it(36) =< aux(16)
it(34) =< aux(17)
it(36) =< aux(17)
s(21) =< aux(17)
aux(9) =< aux(17)
s(22) =< aux(17)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(17)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],46]: 20*it(34)+4*s(20)+6*s(21)+1*s(26)+1*s(27)+3
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+4
aux(12) =< -V1+V
aux(13) =< -V1+V+2
aux(19) =< V
it(34) =< aux(19)
s(21) =< aux(19)
it(34) =< aux(10)
it(34) =< aux(11)
it(34) =< aux(12)
it(34) =< aux(13)
aux(9) =< aux(19)
s(22) =< aux(19)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(19)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],45,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+8
  Such that:aux(11) =< -2*V1+V
aux(10) =< -2*V1+V+1
it(36) =< V/3
aux(20) =< -V1+V
aux(21) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(20)
it(36) =< aux(20)
it(34) =< aux(21)
it(36) =< aux(21)
s(21) =< aux(21)
aux(9) =< aux(21)
s(22) =< aux(21)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(21)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=2*V1+2] 

* Chain [[34,36,40,41],45,46]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+8
  Such that:aux(11) =< -2*V1+V
aux(10) =< -2*V1+V+1
it(36) =< V/3
aux(22) =< -V1+V
aux(23) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(22)
it(36) =< aux(22)
it(34) =< aux(23)
it(36) =< aux(23)
s(21) =< aux(23)
aux(9) =< aux(23)
s(22) =< aux(23)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(23)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=2*V1+2] 

* Chain [[34,36,40,41],43,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+7
  Such that:aux(11) =< -2*V1+V
aux(10) =< -2*V1+V+1
it(36) =< V/3
aux(24) =< -V1+V
aux(25) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(24)
it(36) =< aux(24)
it(34) =< aux(25)
it(36) =< aux(25)
s(21) =< aux(25)
aux(9) =< aux(25)
s(22) =< aux(25)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(25)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=2*V1+2] 

* Chain [[34,36,40,41],42,47]: 20*it(34)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+1*s(33)+7
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
aux(12) =< -V1+V
aux(26) =< -V1+V+1
aux(27) =< V
s(33) =< aux(26)
it(34) =< aux(27)
it(34) =< aux(10)
it(34) =< aux(11)
it(34) =< aux(12)
it(34) =< aux(26)
s(21) =< aux(27)
aux(9) =< aux(27)
s(22) =< aux(27)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(27)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=2*V1+2] 

* Chain [[34,36,40,41],39,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+7
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(28) =< -V1+V
aux(29) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(28)
it(36) =< aux(28)
it(34) =< aux(29)
it(36) =< aux(29)
s(21) =< aux(29)
aux(9) =< aux(29)
s(22) =< aux(29)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(29)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],38,47]: 20*it(34)+4*s(20)+4*s(21)+1*s(26)+1*s(27)+1*s(37)+7
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+4
aux(12) =< -V1+V
aux(30) =< -V1+V+2
aux(31) =< V
s(37) =< aux(30)
it(34) =< aux(31)
s(21) =< aux(31)
it(34) =< aux(10)
it(34) =< aux(11)
it(34) =< aux(12)
it(34) =< aux(30)
aux(9) =< aux(31)
s(22) =< aux(31)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(31)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],37,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+2*s(39)+8
  Such that:s(38) =< 2
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(32) =< -V1+V
aux(33) =< V
s(39) =< s(38)
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(32)
it(36) =< aux(32)
it(34) =< aux(33)
it(36) =< aux(33)
s(21) =< aux(33)
aux(9) =< aux(33)
s(22) =< aux(33)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(33)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],37,45,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+2*s(39)+13
  Such that:s(38) =< 2
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(34) =< -V1+V
aux(35) =< V
s(39) =< s(38)
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(34)
it(36) =< aux(34)
it(34) =< aux(35)
it(36) =< aux(35)
s(21) =< aux(35)
aux(9) =< aux(35)
s(22) =< aux(35)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(35)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],37,45,46]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+2*s(39)+13
  Such that:s(38) =< 2
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(36) =< -V1+V
aux(37) =< V
s(39) =< s(38)
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(36)
it(36) =< aux(36)
it(34) =< aux(37)
it(36) =< aux(37)
s(21) =< aux(37)
aux(9) =< aux(37)
s(22) =< aux(37)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(37)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],37,43,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+2*s(39)+12
  Such that:s(38) =< 2
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(38) =< -V1+V
aux(39) =< V
s(39) =< s(38)
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(38)
it(36) =< aux(38)
it(34) =< aux(39)
it(36) =< aux(39)
s(21) =< aux(39)
aux(9) =< aux(39)
s(22) =< aux(39)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(39)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],37,42,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+1*s(33)+2*s(39)+12
  Such that:s(33) =< 1
s(38) =< 2
aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(40) =< -V1+V
aux(41) =< V
s(39) =< s(38)
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(40)
it(36) =< aux(40)
it(34) =< aux(41)
it(36) =< aux(41)
s(21) =< aux(41)
aux(9) =< aux(41)
s(22) =< aux(41)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(41)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],35,47]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+8
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(42) =< -V1+V
aux(43) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(42)
it(36) =< aux(42)
it(34) =< aux(43)
it(36) =< aux(43)
s(21) =< aux(43)
aux(9) =< aux(43)
s(22) =< aux(43)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(43)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [[34,36,40,41],35,46]: 15*it(34)+5*it(36)+4*s(20)+2*s(21)+1*s(26)+1*s(27)+8
  Such that:aux(10) =< -2*V1+V+1
aux(11) =< -2*V1+V+2
it(36) =< V/3
aux(44) =< -V1+V
aux(45) =< V
it(34) =< aux(10)
it(36) =< aux(10)
it(34) =< aux(11)
it(36) =< aux(11)
it(34) =< aux(44)
it(36) =< aux(44)
it(34) =< aux(45)
it(36) =< aux(45)
s(21) =< aux(45)
aux(9) =< aux(45)
s(22) =< aux(45)*2
s(27) =< it(34)*aux(9)
s(26) =< it(34)*aux(45)
s(20) =< s(22)

  with precondition: [Out=0,2>=V1,V1>=1,V>=V1+2] 

* Chain [47]: 3
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [46]: 4*s(29)+3
  Such that:aux(18) =< V
s(29) =< aux(18)

  with precondition: [V1=2,Out=0,V>=0] 

* Chain [45,47]: 8
  with precondition: [V1=1,Out=0,V>=1] 

* Chain [45,46]: 8
  with precondition: [V1=1,Out=0,V>=1] 

* Chain [44,47]: 8
  with precondition: [V1=1,V=2,Out=0] 

* Chain [44,45,47]: 13
  with precondition: [V1=1,V=2,Out=0] 

* Chain [44,45,46]: 13
  with precondition: [V1=1,V=2,Out=0] 

* Chain [44,43,47]: 12
  with precondition: [V1=1,V=2,Out=0] 

* Chain [44,42,47]: 1*s(33)+12
  Such that:s(33) =< 1

  with precondition: [V1=1,V=2,Out=0] 

* Chain [43,47]: 7
  with precondition: [V1=1,Out=0,V>=1] 

* Chain [42,47]: 1*s(33)+7
  Such that:s(33) =< V

  with precondition: [V1=1,Out=0,V>=1] 

* Chain [39,47]: 7
  with precondition: [V1=2,Out=0,V>=1] 

* Chain [38,47]: 2*s(36)+1*s(37)+7
  Such that:s(35) =< V
s(37) =< V/2
s(36) =< s(35)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [37,47]: 2*s(39)+8
  Such that:s(38) =< 2
s(39) =< s(38)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [37,45,47]: 2*s(39)+13
  Such that:s(38) =< 2
s(39) =< s(38)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [37,45,46]: 2*s(39)+13
  Such that:s(38) =< 2
s(39) =< s(38)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [37,43,47]: 2*s(39)+12
  Such that:s(38) =< 2
s(39) =< s(38)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [37,42,47]: 1*s(33)+2*s(39)+12
  Such that:s(33) =< 1
s(38) =< 2
s(39) =< s(38)

  with precondition: [V1=2,Out=0,V>=2] 

* Chain [35,47]: 8
  with precondition: [V1=2,Out=0,V>=1] 

* Chain [35,46]: 8
  with precondition: [V1=2,Out=0,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [53]: 1*s(251)+1*s(252)+5*s(253)+13
  Such that:s(251) =< 1
s(252) =< V
aux(57) =< V1
s(253) =< aux(57)

  with precondition: [V1>=0] 

* Chain [52]: 2
  with precondition: [V1=1] 

* Chain [51]: 9*s(258)+50*s(264)+536*s(266)+120*s(284)+28*s(291)+28*s(292)+120*s(293)+1*s(297)+40*s(298)+2*s(299)+2*s(300)+2*s(310)+15
  Such that:s(281) =< V+1
s(279) =< V+2
aux(65) =< 1
aux(66) =< 2
aux(67) =< V
aux(68) =< V/2
aux(69) =< V/3
s(258) =< aux(65)
s(310) =< aux(68)
s(264) =< aux(66)
s(266) =< aux(67)
s(284) =< aux(69)
s(284) =< aux(67)
s(289) =< aux(67)
s(290) =< aux(67)*2
s(291) =< s(266)*s(289)
s(292) =< s(266)*aux(67)
s(293) =< s(290)
s(297) =< s(281)
s(298) =< aux(67)
s(298) =< s(279)
s(298) =< s(281)
s(299) =< s(298)*s(289)
s(300) =< s(298)*aux(67)

  with precondition: [V1=2,V>=0] 

* Chain [50]: 2*s(354)+15
  Such that:aux(70) =< 1
s(354) =< aux(70)

  with precondition: [V1=2,V=1] 

* Chain [49]: 1
  with precondition: [V=0,V1>=1] 

* Chain [48]: 1*s(356)+45*s(367)+15*s(368)+10*s(369)+135*s(370)+36*s(371)+9*s(374)+9*s(375)+60*s(376)+45*s(377)+3*s(378)+3*s(379)+1*s(380)+40*s(381)+2*s(382)+2*s(383)+1*s(384)+20*s(385)+1*s(386)+1*s(387)+13
  Such that:s(356) =< 1
s(358) =< 2
s(359) =< -2*V1+V
s(360) =< -2*V1+V+1
s(361) =< -2*V1+V+2
s(362) =< -2*V1+V+4
s(363) =< -V1+V
s(357) =< -V1+V+1
s(364) =< -V1+V+2
s(365) =< V
s(366) =< V/3
s(367) =< s(366)
s(368) =< s(366)
s(369) =< s(358)
s(370) =< s(360)
s(367) =< s(360)
s(370) =< s(361)
s(367) =< s(361)
s(370) =< s(363)
s(367) =< s(363)
s(370) =< s(365)
s(367) =< s(365)
s(371) =< s(365)
s(372) =< s(365)
s(373) =< s(365)*2
s(374) =< s(370)*s(372)
s(375) =< s(370)*s(365)
s(376) =< s(373)
s(377) =< s(360)
s(368) =< s(360)
s(377) =< s(359)
s(368) =< s(359)
s(377) =< s(363)
s(368) =< s(363)
s(377) =< s(365)
s(368) =< s(365)
s(378) =< s(377)*s(372)
s(379) =< s(377)*s(365)
s(380) =< s(364)
s(381) =< s(365)
s(381) =< s(360)
s(381) =< s(362)
s(381) =< s(363)
s(381) =< s(364)
s(382) =< s(381)*s(372)
s(383) =< s(381)*s(365)
s(384) =< s(357)
s(385) =< s(365)
s(385) =< s(360)
s(385) =< s(361)
s(385) =< s(363)
s(385) =< s(357)
s(386) =< s(385)*s(372)
s(387) =< s(385)*s(365)

  with precondition: [2>=V1,V1>=1,V>=V1+2] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [53] with precondition: [V1>=0] 
    - Upper bound: 5*V1+14+nat(V) 
    - Complexity: n 
* Chain [52] with precondition: [V1=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [51] with precondition: [V1=2,V>=0] 
    - Upper bound: 816*V+124+60*V*V+ (V+1)+V+40*V 
    - Complexity: n^2 
* Chain [50] with precondition: [V1=2,V=1] 
    - Upper bound: 17 
    - Complexity: constant 
* Chain [49] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [48] with precondition: [2>=V1,V1>=1,V>=V1+2] 
    - Upper bound: 216*V+34+6*V*V+ (-2*V1+V+1)* (24*V)+ (-V1+V+1)+ (-V1+V+2)+ (-360*V1+180*V+180)+20*V 
    - Complexity: n^2 

### Maximum cost of start(V1,V): max([16,nat(V)+13+max([5*V1,nat(V)*215+20+nat(V)*6*nat(V)+nat(V/3)*60+max([nat(V)*24*nat(-2*V1+V+1)+nat(-V1+V+1)+nat(-V1+V+2)+nat(-2*V1+V+1)*180,nat(V)*600+90+nat(V)*54*nat(V)+nat(V+1)+nat(V/2)*2+nat(V/3)*60])])])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 65 ms.
* Invariants computed in 306 ms.
   - Backward Invariants 138 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 369 ms.
* Termination proved in 37 ms.
* Upper bounds computed in 399 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 58 ms.
   - Chain cost structures 136 ms.
   - Solving cost expressions 7 ms.
* Total analysis performed in 1273 ms.

