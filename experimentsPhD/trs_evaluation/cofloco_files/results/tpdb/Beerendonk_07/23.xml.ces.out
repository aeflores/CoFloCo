
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [gr/3]
1. non_recursive  : [p/2]
2. recursive  : [cond1/5,cond2/5]
3. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into gr/3
1. SCC is partially evaluated into p/2
2. SCC is partially evaluated into cond2/5
3. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations gr/3 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 


#### Refined cost equations gr/3 
* CE 15: gr(V,V1,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 16: gr(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 17: gr(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [16] --> Loop 10 
* CEs [17] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of gr/3 
* Loop 10: gr(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 11: gr(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 12: gr(V,V1,Out)->  gr(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR gr(V,V1,Out) 
* RF of phase [12]: [V,V1]

#### Partial ranking functions of CR gr(V,V1,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V
    V1


### Resulting Chains:gr(V,V1,Out) 
* [[12],11]
* [[12],10]
* [11]
* [10]


### Merging Chains  gr/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[11,[12]]] --> 3 
* [[10,[12]]] --> 4 


### Specialization of cost equations p/2 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations p/2 
* CE 18: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 19: p(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of p/2 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of p/2 
* Loop 13: p(V,Out) [V>=1,V=Out+1] 
* Loop 14: p(V,Out) [Out=0,V=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [14]
* [13]


### Merging Chains  p/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations cond2/5 
* CE 12 is refined into CE [20,21,22,23] 
* CE 11 is refined into CE [24,25,26,27,28] 
* CE 10 is refined into CE [29,30,31,32] 


#### Refined cost equations cond2/5 
* CE 20: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):1+ p(Y6,Z6):1+ cond2(A7,V1,B7,V2,Out)
     [V2>=0,V1>=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V=1] 
* CE 21: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,X6,Y6):2+ p(Z6,A7):2+ cond2(B7,V1,A7,C7,Out)
     [A7>=0,V1>=0,A7+1=Z6,A7+1=W6,A7+1=V6,C7=0,B7=1,Y6=1,X6=0,V2=0,V=1] 
* CE 22: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):3+ p(Y6,Z6):2+ cond2(A7,V1,Z6,V2,Out)
     [V2>=Z6+1,Z6>=0,V1>=0,Z6+1=Y6,Z6+1=W6,Z6+1=V6,A7=0,X6=0,V=1] 
* CE 23: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):4+ p(Y6,Z6):2+ cond2(A7,V1,Z6,V2,Out)
     [Z6>=V2,V2>=1,V1>=0,Z6+1=Y6,Z6+1=W6,Z6+1=V6,A7=1,X6=1,V=1] 
* CE 24: cond2(V,V1,V6,V2,Out) = 2+ gr(W6,X6,Y6):2+ p(Z6,A7):2+ gr(B7,C7,D7):1+ cond2(E7,A7,F7,G7,Out)
     [A7>=0,A7+1=Z6,A7+1=W6,A7+1=V1,G7=0,F7=0,E7=0,D7=0,C7=0,B7=0,Y6=1,X6=0,V2=0,V6=0,V=0] 
* CE 25: cond2(V,V1,V6,V2,Out) = 2+ gr(W6,X6,Y6):2+ p(Z6,A7):2+ gr(V6,B7,C7):2+ cond2(D7,A7,V6,E7,Out)
     [V6>=1,A7>=0,A7+1=Z6,A7+1=W6,A7+1=V1,E7=0,D7=1,C7=1,B7=0,Y6=1,X6=0,V2=0,V=0] 
* CE 26: cond2(V,V1,V6,V2,Out) = 2+ gr(W6,V2,X6):4+ p(Y6,Z6):2+ gr(A7,V2,B7):1+ cond2(C7,Z6,D7,V2,Out)
     [Z6>=V2,V2>=1,Z6+1=Y6,Z6+1=W6,Z6+1=V1,D7=0,C7=0,B7=0,A7=0,X6=1,V6=0,V=0] 
* CE 27: cond2(V,V1,V6,V2,Out) = 2+ gr(W6,V2,X6):4+ p(Y6,Z6):2+ gr(V6,V2,A7):3+ cond2(B7,Z6,V6,V2,Out)
     [Z6>=V2,V2>=V6,V6>=1,Z6+1=Y6,Z6+1=W6,Z6+1=V1,B7=0,A7=0,X6=1,V=0] 
* CE 28: cond2(V,V1,V6,V2,Out) = 2+ gr(W6,V2,X6):4+ p(Y6,Z6):2+ gr(V6,V2,A7):4+ cond2(B7,Z6,V6,V2,Out)
     [V6>=V2+1,Z6>=V2,V2>=1,Z6+1=Y6,Z6+1=W6,Z6+1=V1,B7=1,A7=1,X6=1,V=0] 
* CE 29: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):1+ p(Y6,Z6):1
     [V2>=0,V6>=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V1=0,V=0] 
* CE 30: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,X6,Y6):2+ p(Z6,A7):2
     [A7>=0,V6>=0,A7+1=Z6,A7+1=W6,A7+1=V1,Y6=1,X6=0,Out=0,V2=0,V=0] 
* CE 31: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):3+ p(Y6,Z6):2
     [V2>=Z6+1,Z6>=0,V6>=0,Z6+1=Y6,Z6+1=W6,Z6+1=V1,X6=0,Out=0,V=0] 
* CE 32: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):4+ p(Y6,Z6):2
     [Z6>=V2,V2>=1,V6>=0,Z6+1=Y6,Z6+1=W6,Z6+1=V1,X6=1,Out=0,V=0] 

### Cost equations --> "Loop" of cond2/5 
* CEs [32] --> Loop 15 
* CEs [31] --> Loop 16 
* CEs [30] --> Loop 17 
* CEs [29] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [24] --> Loop 27 

#### Loops of cond2/5 
* Loop 15: cond2(V,V1,V6,V2,Out) [V1>=V2+1,V2>=1,V6>=0,Out=0,V=0] 
* Loop 16: cond2(V,V1,V6,V2,Out) [V2>=V1,V6>=0,V1>=1,Out=0,V=0] 
* Loop 17: cond2(V,V1,V6,V2,Out) [V6>=0,V1>=1,Out=0,V2=0,V=0] 
* Loop 18: cond2(V,V1,V6,V2,Out) [V2>=0,V6>=0,Out=0,V1=0,V=0] 
* Loop 19: cond2(V,V1,V6,V2,Out)->  cond2(V',V1,V6',V2,Out)
                  [V6>=V2+1,V2>=1,V1>=0,V6=V6'+1,V'=1,V=1] 
* Loop 20: cond2(V,V1,V6,V2,Out)->  cond2(V',V1,V6',V2,Out)
                  [V2>=V6,V6>=1,V1>=0,V6=V6'+1,V'=0,V=1] 
* Loop 21: cond2(V,V1,V6,V2,Out)->  cond2(V',V1,V6',V2',Out)
                  [V6>=1,V1>=0,V6=V6'+1,V2'=0,V'=1,V2=0,V=1] 
* Loop 22: cond2(V,V1,V6,V2,Out)->  cond2(V',V1,V6',V2,Out)
                  [V2>=0,V1>=0,V6'=0,V'=0,V6=0,V=1] 
* Loop 23: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6,V2,Out)
                  [V6>=V2+1,V1>=V2+1,V2>=1,V1=V1'+1,V'=1,V=0] 
* Loop 24: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6,V2,Out)
                  [V1>=V2+1,V2>=V6,V6>=1,V1=V1'+1,V'=0,V=0] 
* Loop 25: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6,V2',Out)
                  [V6>=1,V1>=1,V1=V1'+1,V2'=0,V'=1,V2=0,V=0] 
* Loop 26: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V1>=V2+1,V2>=1,V1=V1'+1,V6'=0,V'=0,V6=0,V=0] 
* Loop 27: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2',Out)
                  [V1>=1,V1=V1'+1,V2'=0,V6'=0,V'=0,V2=0,V6=0,V=0] 

### Ranking functions of CR cond2(V,V1,V6,V2,Out) 
* RF of phase [19]: [V6-1,V6-V2]
* RF of phase [21]: [V6]
* RF of phase [24]: [V1-1,V1-V2,V1-V6]
* RF of phase [26]: [V1-1,V1-V2]
* RF of phase [27]: [V1]

#### Partial ranking functions of CR cond2(V,V1,V6,V2,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V6-1
    V6-V2
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V6
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V1-1
    V1-V2
    V1-V6
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V1-1
    V1-V2
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V1


### Resulting Chains:cond2(V,V1,V6,V2,Out) 
* [[27],18]
* [[27],17]
* [[26],16]
* [[26],15]
* [[24],16]
* [[24],15]
* [[21],22,[27],18]
* [[21],22,[27],17]
* [[21],22,18]
* [[21],22,17]
* [[19],20,[26],16]
* [[19],20,[26],15]
* [[19],20,[24],16]
* [[19],20,[24],15]
* [[19],20,18]
* [[19],20,16]
* [[19],20,15]
* [25,[21],22,[27],18]
* [25,[21],22,[27],17]
* [25,[21],22,18]
* [25,[21],22,17]
* [23,[19],20,[26],16]
* [23,[19],20,[26],15]
* [23,[19],20,[24],16]
* [23,[19],20,[24],15]
* [23,[19],20,16]
* [23,[19],20,15]
* [22,[27],18]
* [22,[27],17]
* [22,[26],16]
* [22,[26],15]
* [22,18]
* [22,17]
* [22,16]
* [22,15]
* [20,[26],16]
* [20,[26],15]
* [20,[24],16]
* [20,[24],15]
* [20,18]
* [20,16]
* [20,15]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  cond2/5 into  External patterns of execution 
* [[18]] --> 1 
* [[17],[17,22,[21],25],[18,22,[21],25],[17,[27],22,[21],25],[18,[27],22,[21],25]] --> 2 
* [[17,[27]],[18,[27]]] --> 3 
* [[15],[15,20,[19],23],[15,[24],20,[19],23],[16,[24],20,[19],23],[15,[24]],[16,[24]],[15,[26]],[16,[26]]] --> 4 
* [[15,[26],20,[19],23],[16,[26],20,[19],23]] --> 5 
* [[16,20,[19],23]] --> 6 
* [[16]] --> 7 
* [[18,22]] --> 8 
* [[18,22,[21]]] --> 9 
* [[18,20]] --> 10 
* [[18,20,[19]]] --> 11 
* [[17,22],[17,[27],22],[18,[27],22]] --> 12 
* [[16,22]] --> 13 
* [[15,22],[15,[26],22],[16,[26],22]] --> 14 
* [[15,20],[15,[24],20],[16,[24],20],[15,[26],20],[16,[26],20]] --> 15 
* [[17,22,[21]],[17,[27],22,[21]],[18,[27],22,[21]]] --> 16 
* [[15,20,[19]],[15,[24],20,[19]],[16,[24],20,[19]],[15,[26],20,[19]],[16,[26],20,[19]]] --> 17 
* [[16,20]] --> 18 
* [[16,20,[19]]] --> 19 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [33] 
* CE 3 is refined into CE [34,35,36,37,38,39,40,41,42,43,44,45,46] 
* CE 4 is refined into CE [47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65] 
* CE 5 is refined into CE [66,67,68,69] 
* CE 6 is refined into CE [70,71] 


#### Refined cost equations start/4 
* CE 33: start(V,V1,V6,V2) = 0
     [V2>=0,V6>=0,V1>=0,V>=0] 
* CE 34: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,Z6,A7,V2,B7):1
     [V2>=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V1=0,V=1] 
* CE 35: start(V,V1,V6,V2) = 1+ gr(W6,X6,Y6):1+ cond2(Z6,V1,A7,B7,C7):2
     [V1>=1,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=1] 
* CE 36: start(V,V1,V6,V2) = 1+ gr(W6,X6,Y6):1+ cond2(Z6,V1,A7,B7,C7):3
     [V1>=1,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=1] 
* CE 37: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,V1,Z6,V2,A7):4
     [V1>=V2+1,V2>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V=1] 
* CE 38: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,V1,Z6,V2,A7):7
     [V2>=V1,V1>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V=1] 
* CE 39: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,Z6,V6,A7,B7):9
     [V6>=1,B7=0,A7=0,Z6=0,Y6=1,X6=1,W6=0,V2=0,V1=0,V=1] 
* CE 40: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,V1,V6,Z6,A7):16
     [V6>=1,V1>=1,A7=0,Z6=0,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 41: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,Y6,V6,V2,Z6):1
     [V2>=V6,V6>=1,Z6=0,Y6=0,X6=0,W6=0,V1=0,V=1] 
* CE 42: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,V1,V6,V2,Y6):4
     [V1>=V2+1,V2>=V6,V6>=1,Y6=0,X6=0,W6=0,V=1] 
* CE 43: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,V1,V6,V2,Y6):7
     [V2>=V6,V2>=V1,V6>=1,V1>=1,Y6=0,X6=0,W6=0,V=1] 
* CE 44: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,Y6,V6,V2,Z6):11
     [V6>=V2+1,V2>=1,Z6=0,Y6=0,X6=1,W6=1,V1=0,V=1] 
* CE 45: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,V1,V6,V2,Y6):17
     [V6>=V2+1,V1>=V2+1,V2>=1,Y6=0,X6=1,W6=1,V=1] 
* CE 46: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,V1,V6,V2,Y6):19
     [V6>=V2+1,V2>=V1,V1>=1,Y6=0,X6=1,W6=1,V=1] 
* CE 47: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):1
     [V2>=0,V6>=0,Y6=0,X6=0,W6=0,V1=0,V=0] 
* CE 48: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):2
     [V6>=0,V1>=1,Y6=0,X6=0,W6=0,V2=0,V=0] 
* CE 49: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,Y6,Z6):3
     [V1>=1,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=0] 
* CE 50: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):4
     [V1>=V2+1,V2>=1,V6>=0,X6=0,W6=0,V=0] 
* CE 51: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):5
     [V6>=2,V1>=3,Y6=0,X6=1,W6=0,V2=1,V=0] 
* CE 52: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):6
     [V6>=V2+1,V2>=1,V2+1=X6,V2+1=V1,Y6=0,W6=0,V=0] 
* CE 53: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):7
     [V2>=V1,V6>=0,V1>=1,X6=0,W6=0,V=0] 
* CE 54: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):8
     [V2>=0,Z6=0,Y6=0,X6=0,W6=1,V6=0,V1=0,V=1] 
* CE 55: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):9
     [V6>=1,Z6=0,Y6=0,X6=0,W6=1,V2=0,V1=0,V=1] 
* CE 56: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):10
     [V2>=V6,V6>=1,Y6=0,X6=0,W6=1,V1=0,V=1] 
* CE 57: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):11
     [V6>=V2+1,V2>=1,Y6=0,X6=0,W6=1,V1=0,V=1] 
* CE 58: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,Y6,Z6):12
     [V1>=1,Z6=0,Y6=0,X6=0,W6=1,V2=0,V6=0,V=1] 
* CE 59: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):13
     [V2>=V1,V1>=1,Y6=0,X6=0,W6=1,V6=0,V=1] 
* CE 60: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):14
     [V1>=V2+1,V2>=1,Y6=0,X6=0,W6=1,V6=0,V=1] 
* CE 61: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):15
     [V1>=V2+1,V2>=V6,V6>=1,X6=0,W6=1,V=1] 
* CE 62: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):16
     [V6>=1,V1>=1,Y6=0,X6=0,W6=1,V2=0,V=1] 
* CE 63: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):17
     [V6>=V2+1,V1>=V2+1,V2>=1,X6=0,W6=1,V=1] 
* CE 64: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):18
     [V2>=V6,V2>=V1,V6>=1,V1>=1,X6=0,W6=1,V=1] 
* CE 65: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):19
     [V6>=V2+1,V2>=V1,V1>=1,X6=0,W6=1,V=1] 
* CE 66: start(V,V1,V6,V2) = 0+ gr(W6,V1,X6):1
     [V1>=0,X6=0,W6=0,V=0] 
* CE 67: start(V,V1,V6,V2) = 0+ gr(V,W6,X6):2
     [V>=1,X6=1,W6=0,V1=0] 
* CE 68: start(V,V1,V6,V2) = 0+ gr(V,V1,W6):3
     [V1>=V,V>=1,W6=0] 
* CE 69: start(V,V1,V6,V2) = 0+ gr(V,V1,W6):4
     [V>=V1+1,V1>=1,W6=1] 
* CE 70: start(V,V1,V6,V2) = 0+ p(W6,X6):1
     [X6=0,W6=0,V=0] 
* CE 71: start(V,V1,V6,V2) = 0+ p(W6,X6):2
     [X6>=0,X6+1=W6,X6+1=V] 

### Cost equations --> "Loop" of start/4 
* CEs [45,63] --> Loop 28 
* CEs [42,61] --> Loop 29 
* CEs [46,65] --> Loop 30 
* CEs [43,64] --> Loop 31 
* CEs [40,62] --> Loop 32 
* CEs [37,60] --> Loop 33 
* CEs [38,59] --> Loop 34 
* CEs [35,36,58] --> Loop 35 
* CEs [44,57] --> Loop 36 
* CEs [41,56] --> Loop 37 
* CEs [33,39,55] --> Loop 38 
* CEs [34,54,67,68,69,71] --> Loop 39 
* CEs [47,48,49,50,51,52,53,66,70] --> Loop 40 

#### Loops of start/4 
* Loop 28: start(V,V1,V6,V2) [V6>=V2+1,V1>=V2+1,V2>=1,V=1] 
* Loop 29: start(V,V1,V6,V2) [V1>=V2+1,V2>=V6,V6>=1,V=1] 
* Loop 30: start(V,V1,V6,V2) [V6>=V2+1,V2>=V1,V1>=1,V=1] 
* Loop 31: start(V,V1,V6,V2) [V2>=V6,V2>=V1,V6>=1,V1>=1,V=1] 
* Loop 32: start(V,V1,V6,V2) [V6>=1,V1>=1,V2=0,V=1] 
* Loop 33: start(V,V1,V6,V2) [V1>=V2+1,V2>=1,V6=0,V=1] 
* Loop 34: start(V,V1,V6,V2) [V2>=V1,V1>=1,V6=0,V=1] 
* Loop 35: start(V,V1,V6,V2) [V1>=1,V2=0,V6=0,V=1] 
* Loop 36: start(V,V1,V6,V2) [V6>=V2+1,V2>=1,V1=0,V=1] 
* Loop 37: start(V,V1,V6,V2) [V2>=V6,V6>=1,V1=0,V=1] 
* Loop 38: start(V,V1,V6,V2) [V2>=0,V6>=0,V1>=0,V>=0] 
* Loop 39: start(V,V1,V6,V2) [V>=1] 
* Loop 40: start(V,V1,V6,V2) [V=0] 

### Ranking functions of CR start(V,V1,V6,V2) 

#### Partial ranking functions of CR start(V,V1,V6,V2) 


### Resulting Chains:start(V,V1,V6,V2) 
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]


### Merging Chains  start/4 into  External patterns of execution 
* [[40]] --> 1 
* [[37],[38]] --> 2 
* [[36],[39]] --> 3 
* [[35]] --> 4 
* [[34]] --> 5 
* [[33]] --> 6 
* [[32]] --> 7 
* [[31]] --> 8 
* [[30]] --> 9 
* [[29]] --> 10 
* [[28]] --> 11 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1
#### Cost of phase [12]:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of gr(V,V1,Out):
* Chain [[12],11]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[12],10]: 1*it(12)+1
  Such that:it(12) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [11]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [10]: 1
  with precondition: [V1=0,Out=1,V>=1] 


#### Cost of chains of p(V,Out):
* Chain [14]: 1
  with precondition: [V=0,Out=0] 

* Chain [13]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [27] 

 * loop 27:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5
#### Cost of phase [27]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'

#### Cost of phase [27]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'

#### Cost of loops [26] 

 * loop 26:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
1*s(3)+5
  Such that:s(3) =< V2'

#### Cost of phase [26]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(26)+1*s(4)+0
  Such that:it(26) =< V1
it(26) =< V1-V2
it(26) =< V1-V2-V1'+V2'
it(26) =< V1-V1'
aux(1) =< V2
s(4) =< it(26)*aux(1)

#### Cost of phase [26]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(26)+1*s(4)+0
  Such that:it(26) =< V1
it(26) =< V1-V2
it(26) =< V1-V2-V1'+V2'
it(26) =< V1-V1'
aux(1) =< V2
s(4) =< it(26)*aux(1)

#### Cost of loops [24] 

 * loop 24:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
1*s(9)+1*s(8)+5
  Such that:s(8) =< V6'
s(9) =< V2'

#### Cost of phase [24]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(24)+1*s(10)+1*s(11)+0
  Such that:it(24) =< V1
it(24) =< V1-V6
it(24) =< V1-V6-V1'+V6'
it(24) =< V1-V2
it(24) =< V1-V2-V1'+V2'
it(24) =< V1-V1'
aux(4) =< V6
aux(5) =< V2
s(10) =< it(24)*aux(5)
s(11) =< it(24)*aux(4)

#### Cost of phase [24]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
5*it(24)+1*s(10)+1*s(11)+0
  Such that:it(24) =< V1
it(24) =< V1-V6
it(24) =< V1-V6-V1'+V6'
it(24) =< V1-V2
it(24) =< V1-V2-V1'+V2'
it(24) =< V1-V1'
aux(4) =< V6
aux(5) =< V2
s(10) =< it(24)*aux(5)
s(11) =< it(24)*aux(4)

#### Cost of loops [21] 

 * loop 21:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3
#### Cost of phase [21]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(21)+0
  Such that:it(21) =< V6
it(21) =< V6-V6'

#### Cost of phase [21]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(21)+0
  Such that:it(21) =< V6
it(21) =< V6-V6'

#### Cost of phase [21]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(21)+0
  Such that:it(21) =< V6
it(21) =< V6-V6'

#### Cost of phase [21]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(21)+0
  Such that:it(21) =< V6
it(21) =< V6-V6'

#### Cost of loops [19] 

 * loop 19:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
1*s(14)+3
  Such that:s(14) =< V2'

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of phase [19]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
3*it(19)+1*s(15)+0
  Such that:it(19) =< V6
it(19) =< V6-V2
it(19) =< V6-V2-V6'+V2'
it(19) =< V6-V6'
aux(8) =< V2
s(15) =< it(19)*aux(8)

#### Cost of chains of cond2(V,V1,V6,V2,Out):
* Chain [[27],18]: 5*it(27)+3
  Such that:it(27) =< V1

  with precondition: [V=0,V6=0,V2=0,Out=0,V1>=1] 

* Chain [[27],17]: 5*it(27)+3
  Such that:it(27) =< V1

  with precondition: [V=0,V6=0,V2=0,Out=0,V1>=2] 

* Chain [[26],16]: 5*it(26)+1*s(1)+1*s(4)+3
  Such that:it(26) =< V1-V2
aux(2) =< V2
s(1) =< aux(2)
s(4) =< it(26)*aux(2)

  with precondition: [V=0,V6=0,Out=0,V2>=1,V1>=V2+1] 

* Chain [[26],15]: 5*it(26)+1*s(4)+1*s(5)+3
  Such that:it(26) =< V1-V2
aux(3) =< V2
s(5) =< aux(3)
s(4) =< it(26)*aux(3)

  with precondition: [V=0,V6=0,Out=0,V2>=1,V1>=V2+2] 

* Chain [[24],16]: 5*it(24)+1*s(1)+1*s(10)+1*s(11)+3
  Such that:it(24) =< V1-V2
aux(4) =< V6
aux(6) =< V2
s(1) =< aux(6)
s(10) =< it(24)*aux(6)
s(11) =< it(24)*aux(4)

  with precondition: [V=0,Out=0,V6>=1,V2>=V6,V1>=V2+1] 

* Chain [[24],15]: 5*it(24)+1*s(5)+1*s(10)+1*s(11)+3
  Such that:it(24) =< V1-V2
aux(4) =< V6
aux(7) =< V2
s(5) =< aux(7)
s(10) =< it(24)*aux(7)
s(11) =< it(24)*aux(4)

  with precondition: [V=0,Out=0,V6>=1,V2>=V6,V1>=V2+2] 

* Chain [[21],22,[27],18]: 3*it(21)+5*it(27)+6
  Such that:it(27) =< V1
it(21) =< V6

  with precondition: [V=1,V2=0,Out=0,V1>=1,V6>=1] 

* Chain [[21],22,[27],17]: 3*it(21)+5*it(27)+6
  Such that:it(27) =< V1
it(21) =< V6

  with precondition: [V=1,V2=0,Out=0,V1>=2,V6>=1] 

* Chain [[21],22,18]: 3*it(21)+6
  Such that:it(21) =< V6

  with precondition: [V=1,V1=0,V2=0,Out=0,V6>=1] 

* Chain [[21],22,17]: 3*it(21)+6
  Such that:it(21) =< V6

  with precondition: [V=1,V2=0,Out=0,V1>=1,V6>=1] 

* Chain [[19],20,[26],16]: 3*it(19)+5*it(26)+2*s(1)+1*s(4)+1*s(15)+6
  Such that:it(26) =< V1
it(19) =< V6
aux(9) =< 1
s(1) =< aux(9)
s(4) =< it(26)*aux(9)
s(15) =< it(19)*aux(9)

  with precondition: [V=1,V2=1,Out=0,V1>=2,V6>=2] 

* Chain [[19],20,[26],15]: 3*it(19)+5*it(26)+1*s(4)+2*s(5)+1*s(15)+6
  Such that:it(26) =< V1
it(19) =< V6
aux(10) =< 1
s(5) =< aux(10)
s(4) =< it(26)*aux(10)
s(15) =< it(19)*aux(10)

  with precondition: [V=1,V2=1,Out=0,V1>=3,V6>=2] 

* Chain [[19],20,[24],16]: 3*it(19)+5*it(24)+2*s(1)+2*s(10)+1*s(15)+6
  Such that:it(24) =< V1-V2
it(19) =< V6-V2
aux(12) =< V2
s(1) =< aux(12)
s(10) =< it(24)*aux(12)
s(15) =< it(19)*aux(12)

  with precondition: [V=1,Out=0,V2>=2,V1>=V2+1,V6>=V2+1] 

* Chain [[19],20,[24],15]: 3*it(19)+5*it(24)+2*s(5)+2*s(10)+1*s(15)+6
  Such that:it(24) =< V1-V2
it(19) =< V6-V2
aux(14) =< V2
s(5) =< aux(14)
s(10) =< it(24)*aux(14)
s(15) =< it(19)*aux(14)

  with precondition: [V=1,Out=0,V2>=2,V1>=V2+2,V6>=V2+1] 

* Chain [[19],20,18]: 3*it(19)+1*s(12)+1*s(15)+6
  Such that:it(19) =< V6-V2
aux(15) =< V2
s(12) =< aux(15)
s(15) =< it(19)*aux(15)

  with precondition: [V=1,V1=0,Out=0,V2>=1,V6>=V2+1] 

* Chain [[19],20,16]: 3*it(19)+1*s(1)+1*s(12)+1*s(15)+6
  Such that:s(1) =< V1
it(19) =< V6-V2
aux(16) =< V2
s(12) =< aux(16)
s(15) =< it(19)*aux(16)

  with precondition: [V=1,Out=0,V1>=1,V2>=V1,V6>=V2+1] 

* Chain [[19],20,15]: 3*it(19)+2*s(5)+1*s(15)+6
  Such that:it(19) =< V6-V2
aux(17) =< V2
s(5) =< aux(17)
s(15) =< it(19)*aux(17)

  with precondition: [V=1,Out=0,V2>=1,V1>=V2+1,V6>=V2+1] 

* Chain [25,[21],22,[27],18]: 3*it(21)+5*it(27)+11
  Such that:it(27) =< V1
it(21) =< V6

  with precondition: [V=0,V2=0,Out=0,V1>=2,V6>=1] 

* Chain [25,[21],22,[27],17]: 3*it(21)+5*it(27)+11
  Such that:it(27) =< V1
it(21) =< V6

  with precondition: [V=0,V2=0,Out=0,V1>=3,V6>=1] 

* Chain [25,[21],22,18]: 3*it(21)+11
  Such that:it(21) =< V6

  with precondition: [V=0,V1=1,V2=0,Out=0,V6>=1] 

* Chain [25,[21],22,17]: 3*it(21)+11
  Such that:it(21) =< V6

  with precondition: [V=0,V2=0,Out=0,V1>=2,V6>=1] 

* Chain [23,[19],20,[26],16]: 3*it(19)+5*it(26)+4*s(1)+1*s(4)+1*s(15)+11
  Such that:it(26) =< V1
it(19) =< V6
aux(19) =< 1
s(1) =< aux(19)
s(4) =< it(26)*aux(19)
s(15) =< it(19)*aux(19)

  with precondition: [V=0,V2=1,Out=0,V1>=3,V6>=2] 

* Chain [23,[19],20,[26],15]: 3*it(19)+5*it(26)+1*s(4)+4*s(5)+1*s(15)+11
  Such that:it(26) =< V1
it(19) =< V6
aux(20) =< 1
s(5) =< aux(20)
s(4) =< it(26)*aux(20)
s(15) =< it(19)*aux(20)

  with precondition: [V=0,V2=1,Out=0,V1>=4,V6>=2] 

* Chain [23,[19],20,[24],16]: 3*it(19)+5*it(24)+4*s(1)+2*s(10)+1*s(15)+11
  Such that:it(24) =< V1-V2
it(19) =< V6-V2
aux(21) =< V2
s(1) =< aux(21)
s(10) =< it(24)*aux(21)
s(15) =< it(19)*aux(21)

  with precondition: [V=0,Out=0,V2>=2,V1>=V2+2,V6>=V2+1] 

* Chain [23,[19],20,[24],15]: 3*it(19)+5*it(24)+4*s(5)+2*s(10)+1*s(15)+11
  Such that:it(24) =< V1-V2
it(19) =< V6-V2
aux(22) =< V2
s(5) =< aux(22)
s(10) =< it(24)*aux(22)
s(15) =< it(19)*aux(22)

  with precondition: [V=0,Out=0,V2>=2,V1>=V2+3,V6>=V2+1] 

* Chain [23,[19],20,16]: 3*it(19)+4*s(1)+1*s(15)+11
  Such that:it(19) =< V6-V2
aux(23) =< V2
s(1) =< aux(23)
s(15) =< it(19)*aux(23)

  with precondition: [V=0,Out=0,V1=V2+1,V1>=2,V6>=V1] 

* Chain [23,[19],20,15]: 3*it(19)+4*s(5)+1*s(15)+11
  Such that:it(19) =< V6-V2
aux(24) =< V2
s(5) =< aux(24)
s(15) =< it(19)*aux(24)

  with precondition: [V=0,Out=0,V2>=1,V1>=V2+2,V6>=V2+1] 

* Chain [22,[27],18]: 5*it(27)+6
  Such that:it(27) =< V1

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=1] 

* Chain [22,[27],17]: 5*it(27)+6
  Such that:it(27) =< V1

  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [22,[26],16]: 5*it(26)+1*s(1)+1*s(4)+6
  Such that:it(26) =< V1-V2
aux(2) =< V2
s(1) =< aux(2)
s(4) =< it(26)*aux(2)

  with precondition: [V=1,V6=0,Out=0,V2>=1,V1>=V2+1] 

* Chain [22,[26],15]: 5*it(26)+1*s(4)+1*s(5)+6
  Such that:it(26) =< V1-V2
aux(3) =< V2
s(5) =< aux(3)
s(4) =< it(26)*aux(3)

  with precondition: [V=1,V6=0,Out=0,V2>=1,V1>=V2+2] 

* Chain [22,18]: 6
  with precondition: [V=1,V1=0,V6=0,Out=0,V2>=0] 

* Chain [22,17]: 6
  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=1] 

* Chain [22,16]: 1*s(1)+6
  Such that:s(1) =< V1

  with precondition: [V=1,V6=0,Out=0,V1>=1,V2>=V1] 

* Chain [22,15]: 1*s(5)+6
  Such that:s(5) =< V2

  with precondition: [V=1,V6=0,Out=0,V2>=1,V1>=V2+1] 

* Chain [20,[26],16]: 5*it(26)+1*s(1)+1*s(4)+1*s(12)+6
  Such that:s(12) =< 1
it(26) =< V1-V2
aux(2) =< V2
s(1) =< aux(2)
s(4) =< it(26)*aux(2)

  with precondition: [V=1,V6=1,Out=0,V2>=1,V1>=V2+1] 

* Chain [20,[26],15]: 5*it(26)+1*s(4)+1*s(5)+1*s(12)+6
  Such that:s(12) =< 1
it(26) =< V1-V2
aux(3) =< V2
s(5) =< aux(3)
s(4) =< it(26)*aux(3)

  with precondition: [V=1,V6=1,Out=0,V2>=1,V1>=V2+2] 

* Chain [20,[24],16]: 5*it(24)+1*s(1)+1*s(10)+1*s(11)+1*s(12)+6
  Such that:it(24) =< V1-V2
aux(6) =< V2
aux(11) =< V6
s(12) =< aux(11)
s(1) =< aux(6)
s(10) =< it(24)*aux(6)
s(11) =< it(24)*aux(11)

  with precondition: [V=1,Out=0,V6>=2,V2>=V6,V1>=V2+1] 

* Chain [20,[24],15]: 5*it(24)+1*s(5)+1*s(10)+1*s(11)+1*s(12)+6
  Such that:it(24) =< V1-V2
aux(7) =< V2
aux(13) =< V6
s(12) =< aux(13)
s(5) =< aux(7)
s(10) =< it(24)*aux(7)
s(11) =< it(24)*aux(13)

  with precondition: [V=1,Out=0,V6>=2,V2>=V6,V1>=V2+2] 

* Chain [20,18]: 1*s(12)+6
  Such that:s(12) =< V6

  with precondition: [V=1,V1=0,Out=0,V6>=1,V2>=V6] 

* Chain [20,16]: 1*s(1)+1*s(12)+6
  Such that:s(1) =< V1
s(12) =< V6

  with precondition: [V=1,Out=0,V1>=1,V6>=1,V2>=V1,V2>=V6] 

* Chain [20,15]: 1*s(5)+1*s(12)+6
  Such that:s(12) =< V6
s(5) =< V2

  with precondition: [V=1,Out=0,V6>=1,V2>=V6,V1>=V2+1] 

* Chain [18]: 3
  with precondition: [V=0,V1=0,Out=0,V6>=0,V2>=0] 

* Chain [17]: 3
  with precondition: [V=0,V2=0,Out=0,V1>=1,V6>=0] 

* Chain [16]: 1*s(1)+3
  Such that:s(1) =< V1

  with precondition: [V=0,Out=0,V1>=1,V6>=0,V2>=V1] 

* Chain [15]: 1*s(5)+3
  Such that:s(5) =< V2

  with precondition: [V=0,Out=0,V6>=0,V2>=1,V1>=V2+1] 


#### Cost of chains of start(V,V1,V6,V2):
* Chain [40]: 31*s(147)+18*s(148)+30*s(155)+12*s(156)+21*s(157)+8*s(158)+4*s(159)+2*s(160)+8*s(166)+2*s(167)+2*s(168)+11
  Such that:s(161) =< 1
s(151) =< V1-V2
aux(50) =< V1
aux(51) =< V6
aux(52) =< V6-V2
aux(53) =< V2
s(147) =< aux(50)
s(156) =< aux(52)
s(148) =< aux(51)
s(166) =< s(161)
s(167) =< s(147)*s(161)
s(168) =< s(148)*s(161)
s(155) =< s(151)
s(157) =< aux(53)
s(158) =< s(155)*aux(53)
s(159) =< s(156)*aux(53)
s(160) =< s(155)*aux(51)

  with precondition: [V=0] 

* Chain [39]: 1*s(174)+1*s(175)+6
  Such that:s(174) =< V
s(175) =< V1

  with precondition: [V>=1] 

* Chain [38]: 6*s(176)+8
  Such that:aux(54) =< V6
s(176) =< aux(54)

  with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 

* Chain [37]: 2*s(178)+6
  Such that:aux(55) =< V6
s(178) =< aux(55)

  with precondition: [V=1,V1=0,V6>=1,V2>=V6] 

* Chain [36]: 3*s(180)+6*s(181)+2*s(184)+8
  Such that:aux(57) =< V6-V2
aux(58) =< V2
s(181) =< aux(57)
s(180) =< aux(58)
s(184) =< s(181)*aux(58)

  with precondition: [V=1,V1=0,V2>=1,V6>=V2+1] 

* Chain [35]: 30*s(191)+13
  Such that:aux(59) =< V1
s(191) =< aux(59)

  with precondition: [V=1,V6=0,V2=0,V1>=1] 

* Chain [34]: 2*s(197)+6
  Such that:aux(60) =< V1
s(197) =< aux(60)

  with precondition: [V=1,V6=0,V1>=1,V2>=V1] 

* Chain [33]: 40*s(203)+9*s(204)+20*s(205)+10*s(206)+3*s(207)+13
  Such that:s(201) =< -V2
aux(61) =< V1-V2
aux(62) =< V2
s(203) =< aux(61)
s(204) =< s(201)
s(205) =< aux(62)
s(206) =< s(203)*aux(62)
s(207) =< s(204)*aux(62)

  with precondition: [V=1,V6=0,V2>=1,V1>=V2+1] 

* Chain [32]: 20*s(216)+18*s(217)+8
  Such that:aux(63) =< V1
aux(64) =< V6
s(216) =< aux(63)
s(217) =< aux(64)

  with precondition: [V=1,V2=0,V1>=1,V6>=1] 

* Chain [31]: 2*s(222)+2*s(223)+6
  Such that:aux(65) =< V1
aux(66) =< V6
s(223) =< aux(65)
s(222) =< aux(66)

  with precondition: [V=1,V1>=1,V6>=1,V2>=V1,V2>=V6] 

* Chain [30]: 3*s(226)+2*s(227)+6*s(228)+2*s(231)+8
  Such that:aux(68) =< V1
aux(69) =< V6-V2
aux(70) =< V2
s(227) =< aux(68)
s(228) =< aux(69)
s(226) =< aux(70)
s(231) =< s(228)*aux(70)

  with precondition: [V=1,V1>=1,V2>=V1,V6>=V2+1] 

* Chain [29]: 4*s(237)+50*s(242)+9*s(243)+22*s(244)+12*s(245)+3*s(246)+4*s(247)+2*s(252)+13
  Such that:s(248) =< 1
s(240) =< V6-V2
aux(72) =< V1-V2
aux(73) =< V6
aux(74) =< V2
s(252) =< s(248)
s(242) =< aux(72)
s(237) =< aux(73)
s(244) =< aux(74)
s(245) =< s(242)*aux(74)
s(247) =< s(242)*aux(73)
s(243) =< s(240)
s(246) =< s(243)*aux(74)

  with precondition: [V=1,V6>=1,V2>=V6,V1>=V2+1] 

* Chain [28]: 13*s(258)+20*s(265)+20*s(266)+12*s(267)+18*s(268)+8*s(269)+4*s(270)+4*s(271)+8*s(273)+6*s(274)+8
  Such that:aux(76) =< 1
aux(77) =< V1
aux(78) =< V1-V2
aux(79) =< V6
aux(80) =< V6-V2
aux(81) =< V2
s(258) =< aux(81)
s(265) =< aux(77)
s(266) =< aux(78)
s(267) =< aux(79)
s(268) =< aux(80)
s(269) =< aux(76)
s(270) =< s(265)*aux(76)
s(271) =< s(267)*aux(76)
s(273) =< s(266)*aux(81)
s(274) =< s(268)*aux(81)

  with precondition: [V=1,V2>=1,V1>=V2+1,V6>=V2+1] 


Closed-form bounds of start(V,V1,V6,V2): 
-------------------------------------
* Chain [40] with precondition: [V=0] 
    - Upper bound: nat(V1)*33+19+nat(V6)*20+nat(V6)*2*nat(V1-V2)+nat(V2)*21+nat(V2)*8*nat(V1-V2)+nat(V2)*4*nat(V6-V2)+nat(V1-V2)*30+nat(V6-V2)*12 
    - Complexity: n^2 
* Chain [39] with precondition: [V>=1] 
    - Upper bound: V+6+nat(V1) 
    - Complexity: n 
* Chain [38] with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 
    - Upper bound: 6*V6+8 
    - Complexity: n 
* Chain [37] with precondition: [V=1,V1=0,V6>=1,V2>=V6] 
    - Upper bound: 2*V6+6 
    - Complexity: n 
* Chain [36] with precondition: [V=1,V1=0,V2>=1,V6>=V2+1] 
    - Upper bound: 6*V6-6*V2+ (3*V2+8+ (V6-V2)* (2*V2)) 
    - Complexity: n^2 
* Chain [35] with precondition: [V=1,V6=0,V2=0,V1>=1] 
    - Upper bound: 30*V1+13 
    - Complexity: n 
* Chain [34] with precondition: [V=1,V6=0,V1>=1,V2>=V1] 
    - Upper bound: 2*V1+6 
    - Complexity: n 
* Chain [33] with precondition: [V=1,V6=0,V2>=1,V1>=V2+1] 
    - Upper bound: 40*V1-40*V2+ (20*V2+13+ (V1-V2)* (10*V2)) 
    - Complexity: n^2 
* Chain [32] with precondition: [V=1,V2=0,V1>=1,V6>=1] 
    - Upper bound: 20*V1+18*V6+8 
    - Complexity: n 
* Chain [31] with precondition: [V=1,V1>=1,V6>=1,V2>=V1,V2>=V6] 
    - Upper bound: 2*V1+2*V6+6 
    - Complexity: n 
* Chain [30] with precondition: [V=1,V1>=1,V2>=V1,V6>=V2+1] 
    - Upper bound: 6*V6-6*V2+ (2*V1+3*V2+8+ (V6-V2)* (2*V2)) 
    - Complexity: n^2 
* Chain [29] with precondition: [V=1,V6>=1,V2>=V6,V1>=V2+1] 
    - Upper bound: 50*V1-50*V2+ (4*V6+15+ (V1-V2)* (4*V6)+22*V2+ (V1-V2)* (12*V2)) 
    - Complexity: n^2 
* Chain [28] with precondition: [V=1,V2>=1,V1>=V2+1,V6>=V2+1] 
    - Upper bound: 18*V6-18*V2+ (20*V1-20*V2+ (24*V1+16*V6+13*V2+16+ (V1-V2)* (8*V2)+ (V6-V2)* (6*V2))) 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V6,V2): max([max([nat(V2)*3+2+max([nat(V2)*2*nat(V6-V2)+nat(V6-V2)*6,nat(V2)*17+5+nat(V2)*10*nat(V1-V2)+nat(V1-V2)*40]),nat(V6)*2+2+max([nat(V6)*2,nat(V6)*4*nat(V1-V2)+7+nat(V2)*22+nat(V2)*12*nat(V1-V2)+nat(V1-V2)*50])+nat(V6)*2]),nat(V1)+max([V,nat(V1)+max([max([nat(V6)*2,nat(V2)*3+2+nat(V2)*2*nat(V6-V2)+nat(V6-V2)*6]),nat(V1)*18+2+max([nat(V6)*18,nat(V1)*4+5+max([nat(V6)*16+3+nat(V2)*13+nat(V2)*8*nat(V1-V2)+nat(V2)*6*nat(V6-V2)+nat(V1-V2)*20+nat(V6-V2)*18,nat(V1)*3+6+nat(V6)*20+nat(V6)*2*nat(V1-V2)+nat(V2)*21+nat(V2)*8*nat(V1-V2)+nat(V2)*4*nat(V6-V2)+nat(V1-V2)*30+nat(V6-V2)*12+nat(V1)*6])])])])])+6 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 51 ms.
* Invariants computed in 619 ms.
   - Backward Invariants 279 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 415 ms.
* Termination proved in 57 ms.
* Upper bounds computed in 337 ms.
   - Equation cost structures 89 ms.
   - Phase cost structures 53 ms.
   - Chain cost structures 84 ms.
   - Solving cost expressions 7 ms.
* Total analysis performed in 1573 ms.

