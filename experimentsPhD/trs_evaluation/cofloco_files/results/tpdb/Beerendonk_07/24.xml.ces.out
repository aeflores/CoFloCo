
Preprocessing Cost Relations
=====================================
3. SCC does not have a single cut point : [cond3/4,cond4/4]  
 Merged into cond3cond4/4

#### Computed strongly connected components 
0. non_recursive  : [and/3]
1. recursive  : [gr/3]
2. non_recursive  : [p/2]
4. non_recursive  : [start/3]
3. recursive  : [cond1/4,cond2/4,cond3cond4/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into gr/3
2. SCC is partially evaluated into p/2
4. SCC is partially evaluated into start/3
3. SCC is partially evaluated into cond3cond4/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 21 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 20 is refined into CE [26] 


#### Refined cost equations and/3 
* CE 24: and(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 25: and(V1,V,Out) = 1
     [Out=1,V=1,V1=1] 
* CE 26: and(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of and/3 
* CEs [24] --> Loop 15 
* CEs [25] --> Loop 16 
* CEs [26] --> Loop 17 

#### Loops of and/3 
* Loop 15: and(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 16: and(V1,V,Out) [Out=1,V=1,V1=1] 
* Loop 17: and(V1,V,Out) [V>=0,Out=0,V1=0] 

### Ranking functions of CR and(V1,V,Out) 

#### Partial ranking functions of CR and(V1,V,Out) 


### Resulting Chains:and(V1,V,Out) 
* [17]
* [16]
* [15]


### Merging Chains  and/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations gr/3 
* CE 13 is refined into CE [27] 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 


#### Refined cost equations gr/3 
* CE 27: gr(V1,V,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 28: gr(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 29: gr(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [28] --> Loop 18 
* CEs [29] --> Loop 19 
* CEs [27] --> Loop 20 

#### Loops of gr/3 
* Loop 18: gr(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 19: gr(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 20: gr(V1,V,Out)->  gr(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR gr(V1,V,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR gr(V1,V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:gr(V1,V,Out) 
* [[20],19]
* [[20],18]
* [19]
* [18]


### Merging Chains  gr/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[19,[20]]] --> 3 
* [[18,[20]]] --> 4 


### Specialization of cost equations p/2 
* CE 23 is refined into CE [30] 
* CE 22 is refined into CE [31] 


#### Refined cost equations p/2 
* CE 30: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 31: p(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of p/2 
* CEs [30] --> Loop 21 
* CEs [31] --> Loop 22 

#### Loops of p/2 
* Loop 21: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 22: p(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [22]
* [21]


### Merging Chains  p/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations cond3cond4/4 
* CE 17 is refined into CE [32,33] 
* CE 18 is refined into CE [34,35] 
* CE 15 is refined into CE [36] 
* CE 16 is refined into CE [37] 
* CE 14 is refined into CE [38,39,40,41,42] 


#### Refined cost equations cond3cond4/4 
* CE 32: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):1+ p(H,I):1+ cond3cond4(J,K,C,D)
     [C>=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,B=0,A=1] 
* CE 33: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):2+ p(H,I):2+ cond3cond4(J,I,C,D)
     [I>=0,C>=0,I+1=H,I+1=E,I+1=B,J=1,G=1,F=0,A=1] 
* CE 34: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):1+ p(H,I):1+ cond3cond4(J,B,K,D)
     [B>=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,C=0,A=1] 
* CE 35: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):2+ p(H,I):2+ cond3cond4(J,B,I,D)
     [I>=0,B>=0,I+1=H,I+1=E,I+1=C,J=1,G=1,F=0,A=1] 
* CE 36: cond3cond4(A,B,C,D) = 3+ gr(B,E,F):2+ gr(C,G,H):2+ and(I,J,K):2+ gr(B,C,L):4+ gr(B,M,N):2+ cond3cond4(O,B,C,D)
     [B>=C+1,C>=1,O=1,N=1,M=0,L=1,K=1,J=1,I=1,H=1,G=0,F=1,E=0,A=0] 
* CE 37: cond3cond4(A,B,C,D) = 3+ gr(B,E,F):2+ gr(C,G,H):2+ and(I,J,K):2+ gr(B,C,L):3+ gr(C,M,N):2+ cond3cond4(O,B,C,D)
     [C>=B,B>=1,O=1,N=1,M=0,L=0,K=1,J=1,I=1,H=1,G=0,F=1,E=0,A=0] 
* CE 38: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):1+ gr(H,I,J):1+ and(K,L,M):1
     [M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,C=0,B=0,A=0] 
* CE 39: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):1+ gr(H,I,J):1+ and(K,L,M):3
     [M=0,L=0,K=0,J=0,I=0,H=0,G=0,F=0,E=0,D=0,C=0,B=0,A=0] 
* CE 40: cond3cond4(A,B,C,D) = 1+ gr(E,F,G):1+ gr(C,H,I):2+ and(J,K,L):1
     [C>=1,L=0,K=1,J=0,I=1,H=0,G=0,F=0,E=0,D=0,B=0,A=0] 
* CE 41: cond3cond4(A,B,C,D) = 1+ gr(B,E,F):2+ gr(G,H,I):1+ and(J,K,L):3
     [B>=1,L=0,K=0,J=1,I=0,H=0,G=0,F=1,E=0,D=0,C=0,A=0] 
* CE 42: cond3cond4(A,B,C,D) = 1+ gr(B,E,F):2+ gr(C,G,H):2+ and(I,J,K):2
     [C>=1,B>=1,K=1,J=1,I=1,H=1,G=0,F=1,E=0,D=0,A=0] 

### Cost equations --> "Loop" of cond3cond4/4 
* CEs [42] --> Loop 23 
* CEs [41] --> Loop 24 
* CEs [40] --> Loop 25 
* CEs [38,39] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [37] --> Loop 32 

#### Loops of cond3cond4/4 
* Loop 23: cond3cond4(A,B,C,D) [C>=1,B>=1,D=0,A=0] 
* Loop 24: cond3cond4(A,B,C,D) [B>=1,D=0,C=0,A=0] 
* Loop 25: cond3cond4(A,B,C,D) [C>=1,D=0,B=0,A=0] 
* Loop 26: cond3cond4(A,B,C,D) [D=0,C=0,B=0,A=0] 
* Loop 27: cond3cond4(A,B,C,D)->  cond3cond4(A',B,B',D)
                  [C>=1,B>=0,C=B'+1,A'=1,A=1] 
* Loop 28: cond3cond4(A,B,C,D)->  cond3cond4(A',B',C,D)
                  [C>=0,B>=1,B=B'+1,A'=1,A=1] 
* Loop 29: cond3cond4(A,B,C,D)->  cond3cond4(A',B,B',D)
                  [B>=0,B'=0,A'=0,C=0,A=1] 
* Loop 30: cond3cond4(A,B,C,D)->  cond3cond4(A',B',C,D)
                  [C>=0,B'=0,A'=0,B=0,A=1] 
* Loop 31: cond3cond4(A,B,C,D)->  cond3cond4(A',B,C,D)
                  [B>=C+1,C>=1,A'=1,A=0] 
* Loop 32: cond3cond4(A,B,C,D)->  cond3cond4(A',B,C,D)
                  [C>=B,B>=1,A'=1,A=0] 

### Ranking functions of CR cond3cond4(A,B,C,D) 
* RF of phase [27,28]: [B+C]

#### Partial ranking functions of CR cond3cond4(A,B,C,D) 
* Partial RF of phase [27,28]:
  - RF of loop [27:1]:
    C
  - RF of loop [28:1]:
    B


### Resulting Chains:cond3cond4(A,B,C,D) 
* [[27,28],30,26]
* [[27,28],30,25]
* [[27,28],29,26]
* [[27,28],29,24]
* [32,[27,28],30,26]
* [32,[27,28],30,25]
* [32,[27,28],29,26]
* [32,[27,28],29,24]
* [31,[27,28],30,26]
* [31,[27,28],30,25]
* [31,[27,28],29,26]
* [31,[27,28],29,24]
* [30,26]
* [30,25]
* [29,26]
* [29,24]
* [26]
* [25]
* [24]
* [23]


### Merging Chains  cond3cond4/4 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23],[24,29,[27,28],31],[26,29,[27,28],31],[25,30,[27,28],31],[26,30,[27,28],31],[24,29,[27,28],32],[26,29,[27,28],32],[25,30,[27,28],32],[26,30,[27,28],32]] --> 4 
* [[26,29],[26,30]] --> 5 
* [[25,30],[24,29,[27,28]],[26,29,[27,28]],[25,30,[27,28]],[26,30,[27,28]]] --> 6 
* [[24,29]] --> 7 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [43,44,45] 
* CE 4 is refined into CE [46,47,48] 
* CE 6 is refined into CE [49,50,51,52] 
* CE 2 is refined into CE [53] 
* CE 5 is refined into CE [54,55,56] 
* CE 7 is refined into CE [57,58,59,60,61,62,63] 
* CE 8 is refined into CE [64,65,66,67] 
* CE 9 is refined into CE [68,69,70] 
* CE 10 is refined into CE [71,72] 


#### Refined cost equations start/3 
* CE 43: start(V1,V,V2) = 2+ gr(V,W2,X2):2+ gr(V,Y2,Z2):2+ cond3cond4(A3,V,B3,C3):6
     [V>=1,C3=0,B3=0,A3=1,Z2=1,Y2=0,X2=1,W2=0,V2=0,V1=1] 
* CE 44: start(V1,V,V2) = 2+ gr(V,W2,X2):2+ gr(V,Y2,Z2):2+ cond3cond4(A3,V,B3,C3):7
     [V>=1,C3=0,B3=0,A3=1,Z2=1,Y2=0,X2=1,W2=0,V2=0,V1=1] 
* CE 45: start(V1,V,V2) = 2+ gr(V,V2,W2):4+ gr(V,X2,Y2):2+ cond3cond4(Z2,V,V2,A3):6
     [V>=V2+1,V2>=1,A3=0,Z2=1,Y2=1,X2=0,W2=1,V1=1] 
* CE 46: start(V1,V,V2) = 2+ gr(W2,X2,Y2):1+ gr(Z2,A3,B3):1+ cond3cond4(C3,D3,E3,F3):1
     [F3=0,E3=0,D3=0,C3=0,B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V2=0,V=0,V1=1] 
* CE 47: start(V1,V,V2) = 2+ gr(W2,V2,X2):1+ gr(V2,Y2,Z2):2+ cond3cond4(A3,B3,V2,C3):6
     [V2>=1,C3=0,B3=0,A3=1,Z2=1,Y2=0,X2=0,W2=0,V=0,V1=1] 
* CE 48: start(V1,V,V2) = 2+ gr(V,V2,W2):3+ gr(V2,X2,Y2):2+ cond3cond4(Z2,V,V2,A3):6
     [V2>=V,V>=1,A3=0,Z2=1,Y2=1,X2=0,W2=0,V1=1] 
* CE 49: start(V1,V,V2) = 1+ gr(W2,X2,Y2):1+ cond3cond4(Z2,A3,B3,C3):1
     [C3=0,B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V2=0,V=0,V1=1] 
* CE 50: start(V1,V,V2) = 1+ gr(W2,X2,Y2):1+ cond3cond4(Z2,A3,V2,B3):2
     [V2>=1,B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=1] 
* CE 51: start(V1,V,V2) = 1+ gr(V,W2,X2):2+ cond3cond4(Y2,V,V2,Z2):6
     [V2>=0,V>=1,Z2=0,Y2=1,X2=1,W2=0,V1=1] 
* CE 52: start(V1,V,V2) = 1+ gr(V,W2,X2):2+ cond3cond4(Y2,V,Z2,A3):7
     [V>=1,A3=0,Z2=0,Y2=1,X2=1,W2=0,V2=0,V1=1] 
* CE 53: start(V1,V,V2) = 0
     [V2>=0,V>=0,V1>=0] 
* CE 54: start(V1,V,V2) = 1+ gr(W2,X2,Y2):1+ cond3cond4(Z2,A3,B3,C3):1
     [C3=0,B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V2=0,V=0,V1=0] 
* CE 55: start(V1,V,V2) = 1+ gr(W2,X2,Y2):1+ cond3cond4(Z2,V,A3,B3):3
     [V>=1,B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V2=0,V1=0] 
* CE 56: start(V1,V,V2) = 1+ gr(V2,W2,X2):2+ cond3cond4(Y2,V,V2,Z2):6
     [V2>=1,V>=0,Z2=0,Y2=1,X2=1,W2=0,V1=0] 
* CE 57: start(V1,V,V2) = 0+ cond3cond4(W2,X2,Y2,Z2):1
     [Z2=0,Y2=0,X2=0,W2=0,V2=0,V=0,V1=0] 
* CE 58: start(V1,V,V2) = 0+ cond3cond4(W2,X2,V2,Y2):2
     [V2>=1,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 59: start(V1,V,V2) = 0+ cond3cond4(W2,V,X2,Y2):3
     [V>=1,Y2=0,X2=0,W2=0,V2=0,V1=0] 
* CE 60: start(V1,V,V2) = 0+ cond3cond4(W2,V,V2,X2):4
     [V2>=1,V>=1,X2=0,W2=0,V1=0] 
* CE 61: start(V1,V,V2) = 0+ cond3cond4(W2,X2,Y2,Z2):5
     [Z2=0,Y2=0,X2=0,W2=1,V2=0,V=0,V1=1] 
* CE 62: start(V1,V,V2) = 0+ cond3cond4(W2,V,V2,X2):6
     [V+V2>=1,V2>=0,V>=0,X2=0,W2=1,V1=1] 
* CE 63: start(V1,V,V2) = 0+ cond3cond4(W2,V,X2,Y2):7
     [V>=1,Y2=0,X2=0,W2=1,V2=0,V1=1] 
* CE 64: start(V1,V,V2) = 0+ gr(W2,V,X2):1
     [V>=0,X2=0,W2=0,V1=0] 
* CE 65: start(V1,V,V2) = 0+ gr(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 66: start(V1,V,V2) = 0+ gr(V1,V,W2):3
     [V>=V1,V1>=1,W2=0] 
* CE 67: start(V1,V,V2) = 0+ gr(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 
* CE 68: start(V1,V,V2) = 0+ and(W2,V,X2):1
     [V>=0,X2=0,W2=0,V1=0] 
* CE 69: start(V1,V,V2) = 0+ and(W2,X2,Y2):2
     [Y2=1,X2=1,W2=1,V=1,V1=1] 
* CE 70: start(V1,V,V2) = 0+ and(V1,W2,X2):3
     [V1>=0,X2=0,W2=0,V=0] 
* CE 71: start(V1,V,V2) = 0+ p(W2,X2):1
     [X2=0,W2=0,V1=0] 
* CE 72: start(V1,V,V2) = 0+ p(W2,X2):2
     [X2>=0,X2+1=W2,X2+1=V1] 

### Cost equations --> "Loop" of start/3 
* CEs [43,44,52,63] --> Loop 33 
* CEs [66,67,69,72] --> Loop 34 
* CEs [45,47,48,50,51,53,62] --> Loop 35 
* CEs [46,49,61,65,70] --> Loop 36 
* CEs [54,55,56,57,58,59,60,64,68,71] --> Loop 37 

#### Loops of start/3 
* Loop 33: start(V1,V,V2) [V>=1,V2=0,V1=1] 
* Loop 34: start(V1,V,V2) [V1>=1] 
* Loop 35: start(V1,V,V2) [V2>=0,V>=0,V1>=0] 
* Loop 36: start(V1,V,V2) [V1>=0,V=0] 
* Loop 37: start(V1,V,V2) [V1=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [37]
* [36]
* [35]
* [34]
* [33]


### Merging Chains  start/3 into  External patterns of execution 
* [[37]] --> 1 
* [[33],[35]] --> 2 
* [[36]] --> 3 
* [[34]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of and(V1,V,Out):
* Chain [17]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [16]: 1
  with precondition: [V1=1,V=1,Out=1] 

* Chain [15]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [20] 

 * loop 20:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1
#### Cost of phase [20]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of chains of gr(V1,V,Out):
* Chain [[20],19]: 1*it(20)+1
  Such that:it(20) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[20],18]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [19]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [18]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of chains of p(V1,Out):
* Chain [22]: 1
  with precondition: [V1=0,Out=0] 

* Chain [21]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [27,28] 

 * loop 27:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3
 * loop 28:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3
#### Cost of phase [27,28]:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3*it(27)+3*it(28)+0
  Such that:it(28) =< B
it(28) =< B-B'
it(27) =< C
it(27) =< C-C'
aux(1) =< B+C
aux(2) =< B+C-B'-C'
it(27) =< aux(1)
it(28) =< aux(1)
it(27) =< aux(2)
it(28) =< aux(2)

#### Cost of phase [27,28]:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3*it(27)+3*it(28)+0
  Such that:it(28) =< B
it(28) =< B-B'
it(27) =< C
it(27) =< C-C'
aux(1) =< B+C
aux(2) =< B+C-B'-C'
it(27) =< aux(1)
it(28) =< aux(1)
it(27) =< aux(2)
it(28) =< aux(2)

#### Cost of phase [27,28]:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3*it(27)+3*it(28)+0
  Such that:it(28) =< B
it(28) =< B-B'
it(27) =< C
it(27) =< C-C'
aux(1) =< B+C
aux(2) =< B+C-B'-C'
it(27) =< aux(1)
it(28) =< aux(1)
it(27) =< aux(2)
it(28) =< aux(2)

#### Cost of phase [27,28]:cond3cond4(A,B,C,D) -> [cond3cond4(A',B',C',D')] 
3*it(27)+3*it(28)+0
  Such that:it(28) =< B
it(28) =< B-B'
it(27) =< C
it(27) =< C-C'
aux(1) =< B+C
aux(2) =< B+C-B'-C'
it(27) =< aux(1)
it(28) =< aux(1)
it(27) =< aux(2)
it(28) =< aux(2)

#### Cost of chains of cond3cond4(A,B,C,D):
* Chain [[27,28],30,26]: 3*it(27)+3*it(28)+7
  Such that:it(28) =< B
it(27) =< C
aux(3) =< B+C
it(27) =< aux(3)
it(28) =< aux(3)

  with precondition: [A=1,D=0,B>=0,C>=0,B+C>=1] 

* Chain [[27,28],30,25]: 3*it(27)+3*it(28)+7
  Such that:it(28) =< B
it(27) =< C
aux(4) =< B+C
it(27) =< aux(4)
it(28) =< aux(4)

  with precondition: [A=1,D=0,B>=0,C>=1,B+C>=2] 

* Chain [[27,28],29,26]: 3*it(27)+3*it(28)+7
  Such that:it(28) =< B
it(27) =< C
aux(5) =< B+C
it(27) =< aux(5)
it(28) =< aux(5)

  with precondition: [A=1,D=0,B>=0,C>=0,B+C>=1] 

* Chain [[27,28],29,24]: 3*it(27)+3*it(28)+7
  Such that:it(28) =< B
it(27) =< C
aux(6) =< B+C
it(27) =< aux(6)
it(28) =< aux(6)

  with precondition: [A=1,D=0,B>=1,C>=0,B+C>=2] 

* Chain [32,[27,28],30,26]: 3*it(27)+3*it(28)+1*s(1)+15
  Such that:aux(3) =< B+C
it(27) =< C
aux(7) =< B
it(28) =< aux(7)
s(1) =< aux(7)
it(27) =< aux(3)
it(28) =< aux(3)

  with precondition: [A=0,D=0,B>=1,C>=B] 

* Chain [32,[27,28],30,25]: 3*it(27)+3*it(28)+1*s(1)+15
  Such that:aux(4) =< B+C
it(27) =< C
aux(8) =< B
it(28) =< aux(8)
s(1) =< aux(8)
it(27) =< aux(4)
it(28) =< aux(4)

  with precondition: [A=0,D=0,B>=1,C>=B] 

* Chain [32,[27,28],29,26]: 3*it(27)+3*it(28)+1*s(1)+15
  Such that:aux(5) =< B+C
it(27) =< C
aux(9) =< B
it(28) =< aux(9)
s(1) =< aux(9)
it(27) =< aux(5)
it(28) =< aux(5)

  with precondition: [A=0,D=0,B>=1,C>=B] 

* Chain [32,[27,28],29,24]: 3*it(27)+3*it(28)+1*s(1)+15
  Such that:aux(6) =< B+C
it(27) =< C
aux(10) =< B
it(28) =< aux(10)
s(1) =< aux(10)
it(27) =< aux(6)
it(28) =< aux(6)

  with precondition: [A=0,D=0,B>=1,C>=B] 

* Chain [31,[27,28],30,26]: 3*it(27)+3*it(28)+1*s(2)+15
  Such that:it(28) =< B
aux(3) =< B+C
aux(11) =< C
it(27) =< aux(11)
s(2) =< aux(11)
it(27) =< aux(3)
it(28) =< aux(3)

  with precondition: [A=0,D=0,C>=1,B>=C+1] 

* Chain [31,[27,28],30,25]: 3*it(27)+3*it(28)+1*s(2)+15
  Such that:it(28) =< B
aux(4) =< B+C
aux(12) =< C
it(27) =< aux(12)
s(2) =< aux(12)
it(27) =< aux(4)
it(28) =< aux(4)

  with precondition: [A=0,D=0,C>=1,B>=C+1] 

* Chain [31,[27,28],29,26]: 3*it(27)+3*it(28)+1*s(2)+15
  Such that:it(28) =< B
aux(5) =< B+C
aux(13) =< C
it(27) =< aux(13)
s(2) =< aux(13)
it(27) =< aux(5)
it(28) =< aux(5)

  with precondition: [A=0,D=0,C>=1,B>=C+1] 

* Chain [31,[27,28],29,24]: 3*it(27)+3*it(28)+1*s(2)+15
  Such that:it(28) =< B
aux(6) =< B+C
aux(14) =< C
it(27) =< aux(14)
s(2) =< aux(14)
it(27) =< aux(6)
it(28) =< aux(6)

  with precondition: [A=0,D=0,C>=1,B>=C+1] 

* Chain [30,26]: 7
  with precondition: [A=1,B=0,C=0,D=0] 

* Chain [30,25]: 7
  with precondition: [A=1,B=0,D=0,C>=1] 

* Chain [29,26]: 7
  with precondition: [A=1,B=0,C=0,D=0] 

* Chain [29,24]: 7
  with precondition: [A=1,C=0,D=0,B>=1] 

* Chain [26]: 4
  with precondition: [A=0,B=0,C=0,D=0] 

* Chain [25]: 4
  with precondition: [A=0,B=0,D=0,C>=1] 

* Chain [24]: 4
  with precondition: [A=0,C=0,D=0,B>=1] 

* Chain [23]: 4
  with precondition: [A=0,D=0,B>=1,C>=1] 


#### Cost of chains of start(V1,V,V2):
* Chain [37]: 36*s(58)+36*s(59)+4*s(65)+4*s(66)+15
  Such that:aux(21) =< V
aux(22) =< V+V2
aux(23) =< V2
s(58) =< aux(21)
s(59) =< aux(23)
s(59) =< aux(22)
s(58) =< aux(22)
s(65) =< aux(23)
s(66) =< aux(21)

  with precondition: [V1=0] 

* Chain [36]: 8
  with precondition: [V=0,V1>=0] 

* Chain [35]: 13*s(67)+48*s(71)+48*s(72)+1*s(78)+11
  Such that:aux(27) =< V
aux(28) =< V+V2
aux(29) =< V2
s(67) =< aux(29)
s(71) =< aux(27)
s(72) =< aux(29)
s(72) =< aux(28)
s(71) =< aux(28)
s(78) =< aux(27)

  with precondition: [V1>=0,V>=0,V2>=0] 

* Chain [34]: 1*s(94)+1*s(95)+1
  Such that:s(94) =< V1
s(95) =< V

  with precondition: [V1>=1] 

* Chain [33]: 12*s(99)+11
  Such that:aux(30) =< V
s(99) =< aux(30)

  with precondition: [V1=1,V2=0,V>=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [37] with precondition: [V1=0] 
    - Upper bound: nat(V)*40+15+nat(V2)*40 
    - Complexity: n 
* Chain [36] with precondition: [V=0,V1>=0] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [35] with precondition: [V1>=0,V>=0,V2>=0] 
    - Upper bound: 49*V+61*V2+11 
    - Complexity: n 
* Chain [34] with precondition: [V1>=1] 
    - Upper bound: V1+1+nat(V) 
    - Complexity: n 
* Chain [33] with precondition: [V1=1,V2=0,V>=1] 
    - Upper bound: 12*V+11 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): max([7,nat(V)+max([V1,nat(V2)*40+nat(V)*28+max([4,nat(V2)*21+nat(V)*9])+ (nat(V)*11+10)])])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 41 ms.
* Invariants computed in 71 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 157 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 121 ms.
   - Equation cost structures 38 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 435 ms.

