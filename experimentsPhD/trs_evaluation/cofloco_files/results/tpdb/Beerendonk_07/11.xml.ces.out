
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [neq/3]
1. non_recursive  : [p/2]
2. recursive  : [gr/3]
3. recursive  : [cond1/4,cond2/4]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into neq/3
1. SCC is partially evaluated into p/2
2. SCC is partially evaluated into gr/3
3. SCC is partially evaluated into cond2/4
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations neq/3 
* CE 18 is refined into CE [21] 
* CE 17 is refined into CE [22] 
* CE 16 is refined into CE [23] 
* CE 15 is refined into CE [24] 


#### Refined cost equations neq/3 
* CE 21: neq(V1,V,Out) = 1+ neq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 22: neq(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 23: neq(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 24: neq(V1,V,Out) = 1
     [Out=0,V=0,V1=0] 

### Cost equations --> "Loop" of neq/3 
* CEs [22] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of neq/3 
* Loop 15: neq(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 16: neq(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 17: neq(V1,V,Out) [Out=0,V=0,V1=0] 
* Loop 18: neq(V1,V,Out)->  neq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR neq(V1,V,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR neq(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:neq(V1,V,Out) 
* [[18],17]
* [[18],16]
* [[18],15]
* [17]
* [16]
* [15]


### Merging Chains  neq/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 
* [[17,[18]]] --> 4 
* [[16,[18]]] --> 5 
* [[15,[18]]] --> 6 


### Specialization of cost equations p/2 
* CE 20 is refined into CE [25] 
* CE 19 is refined into CE [26] 


#### Refined cost equations p/2 
* CE 25: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 26: p(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of p/2 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of p/2 
* Loop 19: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 20: p(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [20]
* [19]


### Merging Chains  p/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations gr/3 
* CE 10 is refined into CE [27] 
* CE 9 is refined into CE [28] 
* CE 8 is refined into CE [29] 


#### Refined cost equations gr/3 
* CE 27: gr(V1,V,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 28: gr(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 29: gr(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of gr/3 
* Loop 21: gr(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 22: gr(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 23: gr(V1,V,Out)->  gr(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR gr(V1,V,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR gr(V1,V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:gr(V1,V,Out) 
* [[23],22]
* [[23],21]
* [22]
* [21]


### Merging Chains  gr/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[22,[23]]] --> 3 
* [[21,[23]]] --> 4 


### Specialization of cost equations cond2/4 
* CE 14 is refined into CE [30,31] 
* CE 13 is refined into CE [32,33,34,35] 
* CE 12 is refined into CE [36,37] 
* CE 11 is refined into CE [38,39] 


#### Refined cost equations cond2/4 
* CE 30: cond2(V1,V,V2,Out) = 2+ neq(V,W2,X2):3+ gr(Y2,Z2,A3):1+ cond2(B3,C3,D3,Out)
     [V>=1,D3=0,C3=0,B3=0,A3=0,Z2=0,Y2=0,X2=1,W2=0,V2=0,V1=1] 
* CE 31: cond2(V1,V,V2,Out) = 2+ neq(V,W2,X2):3+ gr(V2,V2,Y2):3+ cond2(Z2,V2,V2,Out)
     [V2>=1,V>=1,Z2=0,Y2=0,X2=1,W2=0,V1=1] 
* CE 32: cond2(V1,V,V2,Out) = 2+ neq(W2,X2,Y2):3+ p(Z2,A3):2+ gr(B3,V2,C3):1+ cond2(D3,E3,V2,Out)
     [V2>=0,E3=0,D3=0,C3=0,B3=0,A3=0,Z2=1,Y2=1,X2=0,W2=1,V=1,V1=0] 
* CE 33: cond2(V1,V,V2,Out) = 2+ neq(W2,X2,Y2):3+ p(Z2,A3):2+ gr(A3,B3,C3):2+ cond2(D3,A3,E3,Out)
     [A3>=1,A3+1=Z2,A3+1=W2,A3+1=V,E3=0,D3=1,C3=1,B3=0,Y2=1,X2=0,V2=0,V1=0] 
* CE 34: cond2(V1,V,V2,Out) = 2+ neq(W2,X2,Y2):3+ p(Z2,A3):2+ gr(A3,V2,B3):3+ cond2(C3,A3,V2,Out)
     [V2>=A3,A3>=1,A3+1=Z2,A3+1=W2,A3+1=V,C3=0,B3=0,Y2=1,X2=0,V1=0] 
* CE 35: cond2(V1,V,V2,Out) = 2+ neq(W2,X2,Y2):3+ p(Z2,A3):2+ gr(A3,V2,B3):4+ cond2(C3,A3,V2,Out)
     [A3>=V2+1,V2>=1,A3+1=Z2,A3+1=W2,A3+1=V,C3=1,B3=1,Y2=1,X2=0,V1=0] 
* CE 36: cond2(V1,V,V2,Out) = 1+ neq(W2,X2,Y2):1
     [V2>=0,Y2=0,X2=0,W2=0,Out=0,V=0,V1=1] 
* CE 37: cond2(V1,V,V2,Out) = 1+ neq(V,W2,X2):3
     [V>=1,V2>=0,X2=1,W2=0,Out=0,V1=1] 
* CE 38: cond2(V1,V,V2,Out) = 1+ neq(W2,X2,Y2):1+ p(Z2,A3):1
     [V2>=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 39: cond2(V1,V,V2,Out) = 1+ neq(W2,X2,Y2):3+ p(Z2,A3):2
     [A3>=0,V2>=0,A3+1=Z2,A3+1=W2,A3+1=V,Y2=1,X2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of cond2/4 
* CEs [37] --> Loop 24 
* CEs [36] --> Loop 25 
* CEs [39] --> Loop 26 
* CEs [38] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [35] --> Loop 30 
* CEs [34] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [32] --> Loop 33 

#### Loops of cond2/4 
* Loop 24: cond2(V1,V,V2,Out) [V2>=0,V>=1,Out=0,V1=1] 
* Loop 25: cond2(V1,V,V2,Out) [V2>=0,Out=0,V=0,V1=1] 
* Loop 26: cond2(V1,V,V2,Out) [V2>=0,V>=1,Out=0,V1=0] 
* Loop 27: cond2(V1,V,V2,Out) [V2>=0,Out=0,V=0,V1=0] 
* Loop 28: cond2(V1,V,V2,Out)->  cond2(A',V2,V2,Out)
                  [V2>=1,V>=1,A'=0,V1=1] 
* Loop 29: cond2(V1,V,V2,Out)->  cond2(V1',V',V2',Out)
                  [V>=1,V2'=0,V'=0,V1'=0,V2=0,V1=1] 
* Loop 30: cond2(V1,V,V2,Out)->  cond2(V1',V',V2,Out)
                  [V>=V2+2,V2>=1,V=V'+1,V1'=1,V1=0] 
* Loop 31: cond2(V1,V,V2,Out)->  cond2(V1',V',V2,Out)
                  [V2+1>=V,V>=2,V=V'+1,V1'=0,V1=0] 
* Loop 32: cond2(V1,V,V2,Out)->  cond2(V1',V',V2',Out)
                  [V>=2,V=V'+1,V2'=0,V1'=1,V2=0,V1=0] 
* Loop 33: cond2(V1,V,V2,Out)->  cond2(V1',V',V2,Out)
                  [V2>=0,V'=0,V1'=0,V=1,V1=0] 

### Ranking functions of CR cond2(V1,V,V2,Out) 
* RF of phase [31]: [V-1]

#### Partial ranking functions of CR cond2(V1,V,V2,Out) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V-1


### Resulting Chains:cond2(V1,V,V2,Out) 
* [[31],33,27]
* [[31],26]
* [33,27]
* [32,29,27]
* [32,24]
* [30,28,[31],33,27]
* [30,28,[31],26]
* [30,28,33,27]
* [30,28,26]
* [30,24]
* [29,27]
* [28,[31],33,27]
* [28,[31],26]
* [28,33,27]
* [28,26]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  cond2/4 into  External patterns of execution 
* [[27]] --> 1 
* [[26],[24,30],[26,28,30],[26,[31],28,30],[27,33,[31],28,30],[27,33],[26,[31]],[27,33,[31]]] --> 2 
* [[24,32],[27,29,32]] --> 3 
* [[27,33,28,30]] --> 4 
* [[25]] --> 5 
* [[24],[26,28],[26,[31],28],[27,33,[31],28],[27,29]] --> 6 
* [[27,33,28]] --> 7 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [40] 
* CE 3 is refined into CE [41,42,43,44,45] 
* CE 4 is refined into CE [46,47,48,49,50,51,52] 
* CE 5 is refined into CE [53,54,55,56] 
* CE 6 is refined into CE [57,58,59,60,61,62] 
* CE 7 is refined into CE [63,64] 


#### Refined cost equations start/3 
* CE 40: start(V1,V,V2) = 0
     [V2>=0,V>=0,V1>=0] 
* CE 41: start(V1,V,V2) = 1+ gr(W2,V2,X2):1+ cond2(Y2,Z2,V2,A3):1
     [V2>=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=1] 
* CE 42: start(V1,V,V2) = 1+ gr(V,W2,X2):2+ cond2(Y2,V,Z2,A3):6
     [V>=1,A3=0,Z2=0,Y2=1,X2=1,W2=0,V2=0,V1=1] 
* CE 43: start(V1,V,V2) = 1+ gr(V,V2,W2):3+ cond2(X2,V,V2,Y2):2
     [V2>=V,V>=1,Y2=0,X2=0,W2=0,V1=1] 
* CE 44: start(V1,V,V2) = 1+ gr(V,V2,W2):4+ cond2(X2,V,V2,Y2):6
     [V>=V2+1,V2>=1,Y2=0,X2=1,W2=1,V1=1] 
* CE 45: start(V1,V,V2) = 1+ gr(V,W2,X2):4+ cond2(Y2,V,Z2,A3):7
     [V>=2,A3=0,Z2=1,Y2=1,X2=1,W2=1,V2=1,V1=1] 
* CE 46: start(V1,V,V2) = 0+ cond2(W2,X2,V2,Y2):1
     [V2>=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 47: start(V1,V,V2) = 0+ cond2(W2,V,V2,X2):2
     [V2>=0,V>=1,X2=0,W2=0,V1=0] 
* CE 48: start(V1,V,V2) = 0+ cond2(W2,V,X2,Y2):3
     [V>=2,Y2=0,X2=0,W2=0,V2=0,V1=0] 
* CE 49: start(V1,V,V2) = 0+ cond2(W2,V,X2,Y2):4
     [V>=3,Y2=0,X2=1,W2=0,V2=1,V1=0] 
* CE 50: start(V1,V,V2) = 0+ cond2(W2,X2,V2,Y2):5
     [V2>=0,Y2=0,X2=0,W2=1,V=0,V1=1] 
* CE 51: start(V1,V,V2) = 0+ cond2(W2,V,V2,X2):6
     [V2>=0,V>=1,X2=0,W2=1,V1=1] 
* CE 52: start(V1,V,V2) = 0+ cond2(W2,V,X2,Y2):7
     [V>=1,Y2=0,X2=1,W2=1,V2=1,V1=1] 
* CE 53: start(V1,V,V2) = 0+ gr(W2,V,X2):1
     [V>=0,X2=0,W2=0,V1=0] 
* CE 54: start(V1,V,V2) = 0+ gr(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 55: start(V1,V,V2) = 0+ gr(V1,V,W2):3
     [V>=V1,V1>=1,W2=0] 
* CE 56: start(V1,V,V2) = 0+ gr(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 
* CE 57: start(V1,V,V2) = 0+ neq(W2,X2,Y2):1
     [Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 58: start(V1,V,V2) = 0+ neq(W2,V,X2):2
     [V>=1,X2=1,W2=0,V1=0] 
* CE 59: start(V1,V,V2) = 0+ neq(V1,W2,X2):3
     [V1>=1,X2=1,W2=0,V=0] 
* CE 60: start(A,A,B) = 0+ neq(A,A,C):4
     [A>=1,C=0] 
* CE 61: start(V1,V,V2) = 0+ neq(V1,V,W2):5
     [V>=V1+1,V1>=1,W2=1] 
* CE 62: start(V1,V,V2) = 0+ neq(V1,V,W2):6
     [V1>=V+1,V>=1,W2=1] 
* CE 63: start(V1,V,V2) = 0+ p(W2,X2):1
     [X2=0,W2=0,V1=0] 
* CE 64: start(V1,V,V2) = 0+ p(W2,X2):2
     [X2>=0,X2+1=W2,X2+1=V1] 

### Cost equations --> "Loop" of start/3 
* CEs [60] --> Loop 34 
* CEs [45,52] --> Loop 35 
* CEs [40,42,43,44,51] --> Loop 36 
* CEs [41,50,54,55,56,59,61,62,64] --> Loop 37 
* CEs [46,47,48,49,53,57,58,63] --> Loop 38 

#### Loops of start/3 
* Loop 34: start(A,A,B) [A>=1] 
* Loop 35: start(V1,V,V2) [V>=1,V2=1,V1=1] 
* Loop 36: start(V1,V,V2) [V2>=0,V>=0,V1>=0] 
* Loop 37: start(V1,V,V2) [V1>=1] 
* Loop 38: start(V1,V,V2) [V1=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  start/3 into  External patterns of execution 
* [[38]] --> 1 
* [[35],[36]] --> 2 
* [[34],[37]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:neq(V1,V,Out) -> [neq(V1',V',Out')] 
1
#### Cost of phase [18]:neq(V1,V,Out) -> [neq(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:neq(V1,V,Out) -> [neq(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:neq(V1,V,Out) -> [neq(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of chains of neq(V1,V,Out):
* Chain [[18],17]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [Out=0,V1=V,V1>=1] 

* Chain [[18],16]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[18],15]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [17]: 1
  with precondition: [V1=0,V=0,Out=0] 

* Chain [16]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [15]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of chains of p(V1,Out):
* Chain [20]: 1
  with precondition: [V1=0,Out=0] 

* Chain [19]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [23] 

 * loop 23:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1
#### Cost of phase [23]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
it(23) =< V
it(23) =< V-V'

#### Cost of phase [23]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
it(23) =< V
it(23) =< V-V'

#### Cost of chains of gr(V1,V,Out):
* Chain [[23],22]: 1*it(23)+1
  Such that:it(23) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[23],21]: 1*it(23)+1
  Such that:it(23) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [22]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [21]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of loops [31] 

 * loop 31:cond2(V1,V,V2,Out) -> [cond2(V1',V',V2',Out')] 
1*s(2)+5
  Such that:s(2) =< V'

#### Cost of phase [31]:cond2(V1,V,V2,Out) -> [cond2(V1',V',V2',Out')] 
5*it(31)+1*s(3)+0
  Such that:it(31) =< V-V'
aux(2) =< V
it(31) =< aux(2)
s(3) =< it(31)*aux(2)

#### Cost of phase [31]:cond2(V1,V,V2,Out) -> [cond2(V1',V',V2',Out')] 
5*it(31)+1*s(3)+0
  Such that:it(31) =< V-V'
aux(2) =< V
it(31) =< aux(2)
s(3) =< it(31)*aux(2)

#### Cost of chains of cond2(V1,V,V2,Out):
* Chain [[31],33,27]: 5*it(31)+1*s(3)+8
  Such that:aux(3) =< V
it(31) =< aux(3)
s(3) =< it(31)*aux(3)

  with precondition: [V1=0,Out=0,V>=2,V2+1>=V] 

* Chain [[31],26]: 5*it(31)+1*s(3)+3
  Such that:aux(4) =< V
it(31) =< aux(4)
s(3) =< it(31)*aux(4)

  with precondition: [V1=0,Out=0,V>=2,V2+1>=V] 

* Chain [33,27]: 8
  with precondition: [V1=0,V=1,Out=0,V2>=0] 

* Chain [32,29,27]: 12
  with precondition: [V1=0,V2=0,Out=0,V>=2] 

* Chain [32,24]: 7
  with precondition: [V1=0,V2=0,Out=0,V>=2] 

* Chain [30,28,[31],33,27]: 7*it(31)+1*s(3)+17
  Such that:aux(6) =< V2
it(31) =< aux(6)
s(3) =< it(31)*aux(6)

  with precondition: [V1=0,Out=0,V2>=2,V>=V2+2] 

* Chain [30,28,[31],26]: 7*it(31)+1*s(3)+12
  Such that:aux(8) =< V2
it(31) =< aux(8)
s(3) =< it(31)*aux(8)

  with precondition: [V1=0,Out=0,V2>=2,V>=V2+2] 

* Chain [30,28,33,27]: 2*s(4)+17
  Such that:aux(9) =< 1
s(4) =< aux(9)

  with precondition: [V1=0,V2=1,Out=0,V>=3] 

* Chain [30,28,26]: 2*s(4)+12
  Such that:aux(10) =< V2
s(4) =< aux(10)

  with precondition: [V1=0,Out=0,V2>=1,V>=V2+2] 

* Chain [30,24]: 1*s(5)+7
  Such that:s(5) =< V2

  with precondition: [V1=0,Out=0,V2>=1,V>=V2+2] 

* Chain [29,27]: 7
  with precondition: [V1=1,V2=0,Out=0,V>=1] 

* Chain [28,[31],33,27]: 6*it(31)+1*s(3)+12
  Such that:aux(5) =< V2
it(31) =< aux(5)
s(3) =< it(31)*aux(5)

  with precondition: [V1=1,Out=0,V>=1,V2>=2] 

* Chain [28,[31],26]: 6*it(31)+1*s(3)+7
  Such that:aux(7) =< V2
it(31) =< aux(7)
s(3) =< it(31)*aux(7)

  with precondition: [V1=1,Out=0,V>=1,V2>=2] 

* Chain [28,33,27]: 1*s(4)+12
  Such that:s(4) =< 1

  with precondition: [V1=1,V2=1,Out=0,V>=1] 

* Chain [28,26]: 1*s(4)+7
  Such that:s(4) =< V2

  with precondition: [V1=1,Out=0,V>=1,V2>=1] 

* Chain [27]: 3
  with precondition: [V1=0,V=0,Out=0,V2>=0] 

* Chain [26]: 3
  with precondition: [V1=0,Out=0,V>=1,V2>=0] 

* Chain [25]: 2
  with precondition: [V1=1,V=0,Out=0,V2>=0] 

* Chain [24]: 2
  with precondition: [V1=1,Out=0,V>=1,V2>=0] 


#### Cost of chains of start(V1,V,V2):
* Chain [38]: 17*s(30)+10*s(31)+2*s(32)+2*s(33)+2*s(35)+17
  Such that:s(34) =< 1
s(28) =< V
s(29) =< V2
s(35) =< s(34)
s(30) =< s(29)
s(31) =< s(28)
s(32) =< s(31)*s(28)
s(33) =< s(30)*s(29)

  with precondition: [V1=0] 

* Chain [37]: 2*s(36)+2*s(37)+5
  Such that:aux(14) =< V1
aux(15) =< V
s(36) =< aux(14)
s(37) =< aux(15)

  with precondition: [V1>=1] 

* Chain [36]: 11*s(43)+44*s(46)+2*s(48)+6*s(49)+19
  Such that:aux(16) =< V
aux(18) =< V2
s(46) =< aux(18)
s(49) =< s(46)*aux(18)
s(43) =< aux(16)
s(48) =< s(43)*aux(16)

  with precondition: [V1>=0,V>=0,V2>=0] 

* Chain [35]: 17
  with precondition: [V1=1,V2=1,V>=1] 

* Chain [34]: 1*s(60)+1
  Such that:s(60) =< V

  with precondition: [V1=V,V1>=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [38] with precondition: [V1=0] 
    - Upper bound: nat(V)*10+19+nat(V)*2*nat(V)+nat(V2)*17+nat(V2)*2*nat(V2) 
    - Complexity: n^2 
* Chain [37] with precondition: [V1>=1] 
    - Upper bound: 2*V1+5+nat(V)*2 
    - Complexity: n 
* Chain [36] with precondition: [V1>=0,V>=0,V2>=0] 
    - Upper bound: 11*V+19+2*V*V+44*V2+6*V2*V2 
    - Complexity: n^2 
* Chain [35] with precondition: [V1=1,V2=1,V>=1] 
    - Upper bound: 17 
    - Complexity: constant 
* Chain [34] with precondition: [V1=V,V1>=1] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): max([16,nat(V)+4+max([2*V1,nat(V)*8+14+nat(V)*2*nat(V)+nat(V2)*17+nat(V2)*2*nat(V2)+ (nat(V2)*27+nat(V)+nat(V2)*4*nat(V2))])+nat(V)])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 74 ms.
   - Backward Invariants 34 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 107 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 102 ms.
   - Equation cost structures 30 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 341 ms.

