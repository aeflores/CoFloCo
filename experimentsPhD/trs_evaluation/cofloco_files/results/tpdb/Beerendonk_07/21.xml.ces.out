
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [and/3]
1. recursive  : [eq/3]
2. recursive  : [gr/3]
3. non_recursive  : [p/2]
4. recursive  : [cond1/5,cond2/5]
5. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into eq/3
2. SCC is partially evaluated into gr/3
3. SCC is partially evaluated into p/2
4. SCC is partially evaluated into cond2/5
5. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 23 is refined into CE [24] 
* CE 21 is refined into CE [25] 
* CE 22 is refined into CE [26] 


#### Refined cost equations and/3 
* CE 24: and(V,V1,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 25: and(V,V1,Out) = 1
     [Out=1,V1=1,V=1] 
* CE 26: and(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of and/3 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [26] --> Loop 19 

#### Loops of and/3 
* Loop 17: and(V,V1,Out) [V>=0,Out=0,V1=0] 
* Loop 18: and(V,V1,Out) [Out=1,V1=1,V=1] 
* Loop 19: and(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR and(V,V1,Out) 

#### Partial ranking functions of CR and(V,V1,Out) 


### Resulting Chains:and(V,V1,Out) 
* [19]
* [18]
* [17]


### Merging Chains  and/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 


### Specialization of cost equations eq/3 
* CE 20 is refined into CE [27] 
* CE 18 is refined into CE [28] 
* CE 19 is refined into CE [29] 
* CE 17 is refined into CE [30] 


#### Refined cost equations eq/3 
* CE 27: eq(V,V1,Out) = 1+ eq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 28: eq(V,V1,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 29: eq(V,V1,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 30: eq(V,V1,Out) = 1
     [Out=1,V1=0,V=0] 

### Cost equations --> "Loop" of eq/3 
* CEs [28] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of eq/3 
* Loop 20: eq(V,V1,Out) [V>=1,Out=0,V1=0] 
* Loop 21: eq(V,V1,Out) [V1>=1,Out=0,V=0] 
* Loop 22: eq(V,V1,Out) [Out=1,V1=0,V=0] 
* Loop 23: eq(V,V1,Out)->  eq(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR eq(V,V1,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR eq(V,V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:eq(V,V1,Out) 
* [[23],22]
* [[23],21]
* [[23],20]
* [22]
* [21]
* [20]


### Merging Chains  eq/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[21,[23]]] --> 4 
* [[20,[23]]] --> 5 
* [[22,[23]]] --> 6 


### Specialization of cost equations gr/3 
* CE 11 is refined into CE [31] 
* CE 10 is refined into CE [32] 
* CE 9 is refined into CE [33] 


#### Refined cost equations gr/3 
* CE 31: gr(V,V1,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 32: gr(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 33: gr(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [32] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [31] --> Loop 26 

#### Loops of gr/3 
* Loop 24: gr(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 25: gr(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 26: gr(V,V1,Out)->  gr(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR gr(V,V1,Out) 
* RF of phase [26]: [V,V1]

#### Partial ranking functions of CR gr(V,V1,Out) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V
    V1


### Resulting Chains:gr(V,V1,Out) 
* [[26],25]
* [[26],24]
* [25]
* [24]


### Merging Chains  gr/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[25,[26]]] --> 3 
* [[24,[26]]] --> 4 


### Specialization of cost equations p/2 
* CE 16 is refined into CE [34] 
* CE 15 is refined into CE [35] 


#### Refined cost equations p/2 
* CE 34: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 35: p(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of p/2 
* CEs [34] --> Loop 27 
* CEs [35] --> Loop 28 

#### Loops of p/2 
* Loop 27: p(V,Out) [V>=1,V=Out+1] 
* Loop 28: p(V,Out) [Out=0,V=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [28]
* [27]


### Merging Chains  p/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations cond2/5 
* CE 14 is refined into CE [36,37,38,39,40,41,42,43] 
* CE 13 is refined into CE [44,45] 
* CE 12 is refined into CE [46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63] 


#### Refined cost equations cond2/5 
* CE 36: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):1+ p(Y6,Z6):1+ p(A7,B7):1+ cond2(C7,D7,E7,V2,Out)
     [V2>=0,E7=0,D7=0,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V1=0,V=1] 
* CE 37: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):1+ p(Y6,Z6):2+ p(A7,B7):1+ cond2(C7,Z6,D7,V2,Out)
     [Z6>=0,V2>=0,Z6+1=Y6,Z6+1=V1,D7=0,C7=0,B7=0,A7=0,X6=0,W6=0,V6=0,V=1] 
* CE 38: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,X6,Y6):2+ p(Z6,A7):1+ p(B7,C7):2+ cond2(D7,E7,C7,F7,Out)
     [C7>=0,C7+1=B7,C7+1=W6,C7+1=V6,F7=0,E7=0,D7=1,A7=0,Z6=0,Y6=1,X6=0,V2=0,V1=0,V=1] 
* CE 39: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,X6,Y6):2+ p(Z6,A7):2+ p(B7,C7):2+ cond2(D7,A7,C7,E7,Out)
     [C7>=0,A7>=0,C7+1=B7,A7+1=Z6,C7+1=W6,C7+1=V6,A7+1=V1,E7=0,D7=1,Y6=1,X6=0,V2=0,V=1] 
* CE 40: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):3+ p(Y6,Z6):1+ p(A7,B7):2+ cond2(C7,D7,B7,V2,Out)
     [V2>=B7+1,B7>=0,B7+1=A7,B7+1=W6,B7+1=V6,D7=0,C7=0,Z6=0,Y6=0,X6=0,V1=0,V=1] 
* CE 41: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):3+ p(Y6,Z6):2+ p(A7,B7):2+ cond2(C7,Z6,B7,V2,Out)
     [V2>=B7+1,B7>=0,Z6>=0,B7+1=A7,Z6+1=Y6,B7+1=W6,B7+1=V6,Z6+1=V1,C7=0,X6=0,V=1] 
* CE 42: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):4+ p(Y6,Z6):1+ p(A7,B7):2+ cond2(C7,D7,B7,V2,Out)
     [B7>=V2,V2>=1,B7+1=A7,B7+1=W6,B7+1=V6,D7=0,C7=1,Z6=0,Y6=0,X6=1,V1=0,V=1] 
* CE 43: cond2(V,V1,V6,V2,Out) = 1+ gr(W6,V2,X6):4+ p(Y6,Z6):2+ p(A7,B7):2+ cond2(C7,Z6,B7,V2,Out)
     [B7>=V2,Z6>=0,V2>=1,B7+1=A7,Z6+1=Y6,B7+1=W6,B7+1=V6,Z6+1=V1,C7=1,X6=1,V=1] 
* CE 44: cond2(A,B,B,C,D) = 2+ eq(B,B,E):6+ gr(B,F,G):2+ and(H,I,J):2+ gr(B,K,L):2+ cond2(M,B,B,N,D)
     [B>=1,N=0,M=1,L=1,K=0,J=1,I=1,H=1,G=1,F=0,E=1,C=0,A=0] 
* CE 45: cond2(A,B,B,C,D) = 2+ eq(B,B,E):6+ gr(B,C,F):4+ and(G,H,I):2+ gr(B,C,J):4+ cond2(K,B,B,C,D)
     [B>=C+1,C>=1,K=1,J=1,I=1,H=1,G=1,F=1,E=1,A=0] 
* CE 46: cond2(V,V1,V6,V2,Out) = 1+ eq(W6,X6,Y6):1+ gr(Z6,V2,A7):1+ and(B7,C7,D7):3
     [V2>=0,D7=0,C7=0,B7=1,A7=0,Z6=0,Y6=1,X6=0,W6=0,Out=0,V6=0,V1=0,V=0] 
* CE 47: cond2(V,V1,V6,V2,Out) = 1+ eq(W6,V6,X6):2+ gr(Y6,V2,Z6):1+ and(A7,B7,C7):1
     [V2>=0,V6>=1,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V1=0,V=0] 
* CE 48: cond2(V,V1,V6,V2,Out) = 1+ eq(W6,V6,X6):2+ gr(Y6,V2,Z6):1+ and(A7,B7,C7):3
     [V2>=0,V6>=1,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V1=0,V=0] 
* CE 49: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,W6,X6):3+ gr(V1,Y6,Z6):2+ and(A7,B7,C7):1
     [V1>=1,C7=0,B7=1,A7=0,Z6=1,Y6=0,X6=0,W6=0,Out=0,V2=0,V6=0,V=0] 
* CE 50: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,W6,X6):3+ gr(V1,V2,Y6):3+ and(Z6,A7,B7):1
     [V2>=V1,V1>=1,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V6=0,V=0] 
* CE 51: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,W6,X6):3+ gr(V1,V2,Y6):3+ and(Z6,A7,B7):3
     [V2>=V1,V1>=1,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V6=0,V=0] 
* CE 52: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,W6,X6):3+ gr(V1,V2,Y6):4+ and(Z6,A7,B7):1
     [V1>=V2+1,V2>=1,B7=0,A7=1,Z6=0,Y6=1,X6=0,W6=0,Out=0,V6=0,V=0] 
* CE 53: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):4+ gr(V1,X6,Y6):2+ and(Z6,A7,B7):1
     [V6>=V1+1,V1>=1,B7=0,A7=1,Z6=0,Y6=1,X6=0,W6=0,Out=0,V2=0,V=0] 
* CE 54: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):4+ gr(V1,V2,X6):3+ and(Y6,Z6,A7):1
     [V2>=V1,V6>=V1+1,V1>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V=0] 
* CE 55: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):4+ gr(V1,V2,X6):3+ and(Y6,Z6,A7):3
     [V2>=V1,V6>=V1+1,V1>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V=0] 
* CE 56: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):4+ gr(V1,V2,X6):4+ and(Y6,Z6,A7):1
     [V1>=V2+1,V6>=V1+1,V2>=1,A7=0,Z6=1,Y6=0,X6=1,W6=0,Out=0,V=0] 
* CE 57: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):5+ gr(V1,X6,Y6):2+ and(Z6,A7,B7):1
     [V1>=V6+1,V6>=1,B7=0,A7=1,Z6=0,Y6=1,X6=0,W6=0,Out=0,V2=0,V=0] 
* CE 58: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):5+ gr(V1,V2,X6):3+ and(Y6,Z6,A7):1
     [V2>=V1,V1>=V6+1,V6>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V=0] 
* CE 59: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):5+ gr(V1,V2,X6):3+ and(Y6,Z6,A7):3
     [V2>=V1,V1>=V6+1,V6>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,Out=0,V=0] 
* CE 60: cond2(V,V1,V6,V2,Out) = 1+ eq(V1,V6,W6):5+ gr(V1,V2,X6):4+ and(Y6,Z6,A7):1
     [V1>=V2+1,V1>=V6+1,V2>=1,V6>=1,A7=0,Z6=1,Y6=0,X6=1,W6=0,Out=0,V=0] 
* CE 61: cond2(A,B,B,C,D) = 1+ eq(B,B,E):6+ gr(B,F,G):2+ and(H,I,J):2
     [B>=1,J=1,I=1,H=1,G=1,F=0,E=1,D=0,C=0,A=0] 
* CE 62: cond2(A,B,B,C,D) = 1+ eq(B,B,E):6+ gr(B,C,F):3+ and(G,H,I):3
     [C>=B,B>=1,I=0,H=0,G=1,F=0,E=1,D=0,A=0] 
* CE 63: cond2(A,B,B,C,D) = 1+ eq(B,B,E):6+ gr(B,C,F):4+ and(G,H,I):2
     [B>=C+1,C>=1,I=1,H=1,G=1,F=1,E=1,D=0,A=0] 

### Cost equations --> "Loop" of cond2/5 
* CEs [56] --> Loop 29 
* CEs [58,59] --> Loop 30 
* CEs [60] --> Loop 31 
* CEs [54,55] --> Loop 32 
* CEs [63] --> Loop 33 
* CEs [62] --> Loop 34 
* CEs [57] --> Loop 35 
* CEs [53] --> Loop 36 
* CEs [61] --> Loop 37 
* CEs [52] --> Loop 38 
* CEs [50,51] --> Loop 39 
* CEs [49] --> Loop 40 
* CEs [47,48] --> Loop 41 
* CEs [46] --> Loop 42 
* CEs [43] --> Loop 43 
* CEs [41] --> Loop 44 
* CEs [39] --> Loop 45 
* CEs [37] --> Loop 46 
* CEs [42] --> Loop 47 
* CEs [40] --> Loop 48 
* CEs [38] --> Loop 49 
* CEs [36] --> Loop 50 
* CEs [45] --> Loop 51 
* CEs [44] --> Loop 52 

#### Loops of cond2/5 
* Loop 29: cond2(V,V1,V6,V2,Out) [V1>=V2+1,V6>=V1+1,V2>=1,Out=0,V=0] 
* Loop 30: cond2(V,V1,V6,V2,Out) [V1>=V6+1,V2>=V1,V6>=1,Out=0,V=0] 
* Loop 31: cond2(V,V1,V6,V2,Out) [V1>=V2+1,V1>=V6+1,V2>=1,V6>=1,Out=0,V=0] 
* Loop 32: cond2(V,V1,V6,V2,Out) [V2>=V1,V6>=V1+1,V1>=1,Out=0,V=0] 
* Loop 33: cond2(A,B,B,C,D) [B>=C+1,C>=1,D=0,A=0] 
* Loop 34: cond2(A,B,B,C,D) [C>=B,B>=1,D=0,A=0] 
* Loop 35: cond2(V,V1,V6,V2,Out) [V1>=V6+1,V6>=1,Out=0,V2=0,V=0] 
* Loop 36: cond2(V,V1,V6,V2,Out) [V6>=V1+1,V1>=1,Out=0,V2=0,V=0] 
* Loop 37: cond2(A,B,B,C,D) [B>=1,D=0,C=0,A=0] 
* Loop 38: cond2(V,V1,V6,V2,Out) [V1>=V2+1,V2>=1,Out=0,V6=0,V=0] 
* Loop 39: cond2(V,V1,V6,V2,Out) [V2>=V1,V1>=1,Out=0,V6=0,V=0] 
* Loop 40: cond2(V,V1,V6,V2,Out) [V1>=1,Out=0,V2=0,V6=0,V=0] 
* Loop 41: cond2(V,V1,V6,V2,Out) [V2>=0,V6>=1,Out=0,V1=0,V=0] 
* Loop 42: cond2(V,V1,V6,V2,Out) [V2>=0,Out=0,V6=0,V1=0,V=0] 
* Loop 43: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V6>=V2+1,V2>=1,V1>=1,V6=V6'+1,V1=V1'+1,V'=1,V=1] 
* Loop 44: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V2>=V6,V6>=1,V1>=1,V6=V6'+1,V1=V1'+1,V'=0,V=1] 
* Loop 45: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2',Out)
                  [V6>=1,V1>=1,V6=V6'+1,V1=V1'+1,V2'=0,V'=1,V2=0,V=1] 
* Loop 46: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V2>=0,V1>=1,V1=V1'+1,V6'=0,V'=0,V6=0,V=1] 
* Loop 47: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V6>=V2+1,V2>=1,V6=V6'+1,V1'=0,V'=1,V1=0,V=1] 
* Loop 48: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V2>=V6,V6>=1,V6=V6'+1,V1'=0,V'=0,V1=0,V=1] 
* Loop 49: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2',Out)
                  [V6>=1,V6=V6'+1,V2'=0,V1'=0,V'=1,V2=0,V1=0,V=1] 
* Loop 50: cond2(V,V1,V6,V2,Out)->  cond2(V',V1',V6',V2,Out)
                  [V2>=0,V6'=0,V1'=0,V'=0,V6=0,V1=0,V=1] 
* Loop 51: cond2(A,B,B,C,D)->  cond2(A',B,B,C,D)
                  [B>=C+1,C>=1,A'=1,A=0] 
* Loop 52: cond2(A,B,B,C,D)->  cond2(A',B,B,B',D)
                  [B>=1,B'=0,A'=1,C=0,A=0] 

### Ranking functions of CR cond2(V,V1,V6,V2,Out) 
* RF of phase [43]: [V1,V6-1,V6-V2]
* RF of phase [45]: [V1,V6]
* RF of phase [47]: [V6-1,V6-V2]
* RF of phase [49]: [V6]

#### Partial ranking functions of CR cond2(V,V1,V6,V2,Out) 
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    V1
    V6-1
    V6-V2
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    V1
    V6
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    V6-1
    V6-V2
* Partial RF of phase [49]:
  - RF of loop [49:1]:
    V6


### Resulting Chains:cond2(V,V1,V6,V2,Out) 
* [[49],50,42]
* [[47],48,42]
* [[47],48,41]
* [[45],[49],50,42]
* [[45],50,42]
* [[45],46,42]
* [[45],46,40]
* [[43],[47],48,42]
* [[43],[47],48,41]
* [[43],48,42]
* [[43],48,41]
* [[43],44,42]
* [[43],44,41]
* [[43],44,39]
* [[43],44,38]
* [[43],44,34]
* [[43],44,32]
* [[43],44,31]
* [[43],44,30]
* [52,[45],50,42]
* [51,[43],44,42]
* [51,[43],44,34]
* [50,42]
* [48,42]
* [48,41]
* [46,42]
* [46,40]
* [46,39]
* [46,38]
* [44,42]
* [44,41]
* [44,39]
* [44,38]
* [44,34]
* [44,32]
* [44,31]
* [44,30]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]


### Merging Chains  cond2/5 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 
* [[39]] --> 4 
* [[38]] --> 5 
* [[37],[42,50,[45],52]] --> 6 
* [[36]] --> 7 
* [[35]] --> 8 
* [[33],[34,44,[43],51],[42,44,[43],51]] --> 9 
* [[34]] --> 10 
* [[32]] --> 11 
* [[31]] --> 12 
* [[30]] --> 13 
* [[29]] --> 14 
* [[42,50]] --> 15 
* [[42,48]] --> 16 
* [[42,50,[49]]] --> 17 
* [[42,48,[47]]] --> 18 
* [[41,48]] --> 19 
* [[41,48,[47]]] --> 20 
* [[42,46]] --> 21 
* [[42,44]] --> 22 
* [[41,44]] --> 23 
* [[40,46]] --> 24 
* [[39,46]] --> 25 
* [[38,46]] --> 26 
* [[39,44]] --> 27 
* [[38,44]] --> 28 
* [[42,50,[45]]] --> 29 
* [[42,46,[45]]] --> 30 
* [[42,50,[49],[45]]] --> 31 
* [[40,46,[45]]] --> 32 
* [[42,48,[43]]] --> 33 
* [[42,44,[43]]] --> 34 
* [[39,44,[43]]] --> 35 
* [[42,48,[47],[43]]] --> 36 
* [[38,44,[43]]] --> 37 
* [[34,44]] --> 38 
* [[34,44,[43]]] --> 39 
* [[30,44,[43]]] --> 40 
* [[41,48,[43]]] --> 41 
* [[41,44,[43]]] --> 42 
* [[41,48,[47],[43]]] --> 43 
* [[32,44]] --> 44 
* [[30,44]] --> 45 
* [[31,44]] --> 46 
* [[31,44,[43]]] --> 47 
* [[32,44,[43]]] --> 48 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [64] 
* CE 3 is refined into CE [65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92] 
* CE 4 is refined into CE [93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140] 
* CE 5 is refined into CE [141,142,143,144] 
* CE 6 is refined into CE [145,146] 
* CE 7 is refined into CE [147,148,149,150,151,152] 
* CE 8 is refined into CE [153,154,155] 


#### Refined cost equations start/4 
* CE 64: start(V,V1,V6,V2) = 0
     [V2>=0,V6>=0,V1>=0,V>=0] 
* CE 65: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,Z6,A7,V2,B7):1
     [V2>=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V1=0,V=1] 
* CE 66: start(V,V1,V6,V2) = 1+ gr(W6,X6,Y6):1+ cond2(Z6,V1,A7,B7,C7):3
     [V1>=1,C7=0,B7=0,A7=0,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=1] 
* CE 67: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,V1,Z6,V2,A7):4
     [V2>=V1,V1>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V=1] 
* CE 68: start(V,V1,V6,V2) = 1+ gr(W6,V2,X6):1+ cond2(Y6,V1,Z6,V2,A7):5
     [V1>=V2+1,V2>=1,A7=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V=1] 
* CE 69: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,Z6,V6,A7,B7):17
     [V6>=1,B7=0,A7=0,Z6=0,Y6=1,X6=1,W6=0,V2=0,V1=0,V=1] 
* CE 70: start(A,B,B,C) = 1+ gr(B,D,E):2+ cond2(F,B,B,G,H):29
     [B>=1,H=0,G=0,F=1,E=1,D=0,C=0,A=1] 
* CE 71: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,Z6,V6,A7,B7):30
     [V6>=1,V6+1=Z6,V6+1=V1,B7=0,A7=0,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 72: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,V1,V6,Z6,A7):31
     [V6>=V1+1,V1>=1,A7=0,Z6=0,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 73: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):2+ cond2(Y6,V1,V6,Z6,A7):32
     [V1>=V6+2,V6>=1,A7=0,Z6=0,Y6=1,X6=1,W6=0,V2=0,V=1] 
* CE 74: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,Y6,V6,V2,Z6):2
     [V2>=V6,V6>=1,Z6=0,Y6=0,X6=0,W6=0,V1=0,V=1] 
* CE 75: start(A,B,B,C) = 1+ gr(B,C,D):3+ cond2(E,B,B,C,F):10
     [C>=B,B>=1,F=0,E=0,D=0,A=1] 
* CE 76: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,V1,V6,V2,Y6):11
     [V2>=V6,V6>=V1+1,V1>=1,Y6=0,X6=0,W6=0,V=1] 
* CE 77: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,V1,V6,V2,Y6):12
     [V1>=V2+1,V2>=V6,V6>=1,Y6=0,X6=0,W6=0,V=1] 
* CE 78: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):3+ cond2(X6,V1,V6,V2,Y6):13
     [V1>=V6+1,V2>=V1,V6>=1,Y6=0,X6=0,W6=0,V=1] 
* CE 79: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,Z6,V6,A7,B7):18
     [V6>=2,B7=0,A7=1,Z6=0,Y6=1,X6=1,W6=1,V2=1,V1=0,V=1] 
* CE 80: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,Y6,V6,V2,Z6):20
     [V6>=V2+1,V2>=2,Z6=0,Y6=0,X6=1,W6=1,V1=0,V=1] 
* CE 81: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,Z6,V6,A7,B7):33
     [V6>=2,V6=Z6+1,V6=V1+1,B7=0,A7=1,Y6=1,X6=1,W6=1,V2=1,V=1] 
* CE 82: start(A,B,B,C) = 1+ gr(B,D,E):4+ cond2(F,B,B,G,H):34
     [B>=2,H=0,G=1,F=1,E=1,D=1,C=1,A=1] 
* CE 83: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,Z6,V6,A7,B7):35
     [V6>=2,V6+1=Z6,V6+1=V1,B7=0,A7=1,Y6=1,X6=1,W6=1,V2=1,V=1] 
* CE 84: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,V1,V6,Z6,A7):36
     [V6>=V1+2,V1>=1,A7=0,Z6=1,Y6=1,X6=1,W6=1,V2=1,V=1] 
* CE 85: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,V1,V6,Z6,A7):37
     [V1>=V6+2,V6>=2,A7=0,Z6=1,Y6=1,X6=1,W6=1,V2=1,V=1] 
* CE 86: start(A,B,B,C) = 1+ gr(B,C,D):4+ cond2(E,B,B,C,F):39
     [B>=C+1,C>=2,F=0,E=1,D=1,A=1] 
* CE 87: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,Y6,V6,V2,Z6):40
     [V6>=V2+1,V2>=2,V6+1=Y6,V6+1=V1,Z6=0,X6=1,W6=1,V=1] 
* CE 88: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,V1,V6,Z6,A7):41
     [V6>=V1+2,V1>=1,V6=V1+Z6,V6=V1+W6,V6=V1+V2,A7=0,Y6=1,X6=1,V=1] 
* CE 89: start(V,V1,V6,V2) = 1+ gr(V6,W6,X6):4+ cond2(Y6,V1,V6,Z6,A7):42
     [V6>=V1+1,V1>=2,V6+1=V1+Z6,V6+1=V1+W6,V6+1=V1+V2,A7=0,Y6=1,X6=1,V=1] 
* CE 90: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,V1,V6,V2,Y6):43
     [V6>=V1+V2+1,V2>=2,V1>=1,Y6=0,X6=1,W6=1,V=1] 
* CE 91: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,V1,V6,V2,Y6):47
     [V6>=V2+1,V1>=V6+2,V2>=2,Y6=0,X6=1,W6=1,V=1] 
* CE 92: start(V,V1,V6,V2) = 1+ gr(V6,V2,W6):4+ cond2(X6,V1,V6,V2,Y6):48
     [V1+V2>=V6+2,V6>=V2+1,V6>=V1+1,Y6=0,X6=1,W6=1,V=1] 
* CE 93: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):1
     [V2>=0,Z6=0,Y6=0,X6=0,W6=0,V6=0,V1=0,V=0] 
* CE 94: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):2
     [V2>=0,V6>=1,Y6=0,X6=0,W6=0,V1=0,V=0] 
* CE 95: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,Y6,Z6):3
     [V1>=1,Z6=0,Y6=0,X6=0,W6=0,V2=0,V6=0,V=0] 
* CE 96: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):4
     [V2>=V1,V1>=1,Y6=0,X6=0,W6=0,V6=0,V=0] 
* CE 97: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):5
     [V1>=V2+1,V2>=1,Y6=0,X6=0,W6=0,V6=0,V=0] 
* CE 98: start(A,B,B,C) = 0+ cond2(D,B,B,E,F):6
     [B>=1,F=0,E=0,D=0,C=0,A=0] 
* CE 99: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):7
     [V6>=V1+1,V1>=1,Y6=0,X6=0,W6=0,V2=0,V=0] 
* CE 100: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):8
     [V1>=V6+1,V6>=1,Y6=0,X6=0,W6=0,V2=0,V=0] 
* CE 101: start(A,B,B,C) = 0+ cond2(D,B,B,C,E):9
     [B>=C+1,C>=1,E=0,D=0,A=0] 
* CE 102: start(A,B,B,C) = 0+ cond2(D,B,B,C,E):10
     [C>=B,B>=1,E=0,D=0,A=0] 
* CE 103: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):11
     [V2>=V1,V6>=V1+1,V1>=1,X6=0,W6=0,V=0] 
* CE 104: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):12
     [V1>=V2+1,V1>=V6+1,V2>=1,V6>=1,X6=0,W6=0,V=0] 
* CE 105: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):13
     [V1>=V6+1,V2>=V1,V6>=1,X6=0,W6=0,V=0] 
* CE 106: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):14
     [V1>=V2+1,V6>=V1+1,V2>=1,X6=0,W6=0,V=0] 
* CE 107: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):15
     [V2>=0,Z6=0,Y6=0,X6=0,W6=1,V6=0,V1=0,V=1] 
* CE 108: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):16
     [V2>=1,Z6=0,Y6=1,X6=0,W6=1,V6=1,V1=0,V=1] 
* CE 109: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):17
     [V6>=1,Z6=0,Y6=0,X6=0,W6=1,V2=0,V1=0,V=1] 
* CE 110: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):18
     [V6>=2,Z6=0,Y6=1,X6=0,W6=1,V2=1,V1=0,V=1] 
* CE 111: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):19
     [V2>=V6,V6>=2,Y6=0,X6=0,W6=1,V1=0,V=1] 
* CE 112: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):20
     [V6>=V2+1,V2>=2,Y6=0,X6=0,W6=1,V1=0,V=1] 
* CE 113: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):21
     [V2>=0,Z6=0,Y6=0,X6=1,W6=1,V6=0,V1=1,V=1] 
* CE 114: start(V,V1,V6,V2) = 0+ cond2(W6,X6,Y6,V2,Z6):22
     [V2>=1,Z6=0,Y6=1,X6=1,W6=1,V6=1,V1=1,V=1] 
* CE 115: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):23
     [V2>=V6,V6>=2,Y6=0,X6=1,W6=1,V1=1,V=1] 
* CE 116: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,Y6,Z6):24
     [V1>=2,Z6=0,Y6=0,X6=0,W6=1,V2=0,V6=0,V=1] 
* CE 117: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):25
     [V2+1>=V1,V1>=2,Y6=0,X6=0,W6=1,V6=0,V=1] 
* CE 118: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):26
     [V1>=V2+2,V2>=1,Y6=0,X6=0,W6=1,V6=0,V=1] 
* CE 119: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):27
     [V2+1>=V1,V1>=2,Y6=0,X6=1,W6=1,V6=1,V=1] 
* CE 120: start(V,V1,V6,V2) = 0+ cond2(W6,V1,X6,V2,Y6):28
     [V1>=V2+2,V2>=1,Y6=0,X6=1,W6=1,V6=1,V=1] 
* CE 121: start(A,B,B,C) = 0+ cond2(D,B,B,E,F):29
     [B>=1,F=0,E=0,D=1,C=0,A=1] 
* CE 122: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):30
     [V6>=1,V6+1=X6,V6+1=V1,Z6=0,Y6=0,W6=1,V2=0,V=1] 
* CE 123: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):31
     [V6>=V1+1,V1>=1,Y6=0,X6=0,W6=1,V2=0,V=1] 
* CE 124: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):32
     [V1>=V6+2,V6>=1,Y6=0,X6=0,W6=1,V2=0,V=1] 
* CE 125: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):33
     [V6>=2,V6=X6+1,V6=V1+1,Z6=0,Y6=1,W6=1,V2=1,V=1] 
* CE 126: start(A,B,B,C) = 0+ cond2(D,B,B,E,F):34
     [B>=2,F=0,E=1,D=1,C=1,A=1] 
* CE 127: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,Y6,Z6):35
     [V6>=2,V6+1=X6,V6+1=V1,Z6=0,Y6=1,W6=1,V2=1,V=1] 
* CE 128: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):36
     [V6>=V1+2,V1>=1,Y6=0,X6=1,W6=1,V2=1,V=1] 
* CE 129: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):37
     [V1>=V6+2,V6>=2,Y6=0,X6=1,W6=1,V2=1,V=1] 
* CE 130: start(A,B,B,C) = 0+ cond2(D,B,B,C,E):38
     [C>=B,B>=2,E=0,D=1,A=1] 
* CE 131: start(A,B,B,C) = 0+ cond2(D,B,B,C,E):39
     [B>=C+1,C>=2,E=0,D=1,A=1] 
* CE 132: start(V,V1,V6,V2) = 0+ cond2(W6,X6,V6,V2,Y6):40
     [V6>=V2+1,V2>=2,V6+1=X6,V6+1=V1,Y6=0,W6=1,V=1] 
* CE 133: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):41
     [V6>=V1+2,V1>=1,V6=V1+X6,V6=V1+V2,Y6=0,W6=1,V=1] 
* CE 134: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,X6,Y6):42
     [V6>=V1+1,V1>=2,V6+1=V1+X6,V6+1=V1+V2,Y6=0,W6=1,V=1] 
* CE 135: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):43
     [V6>=V1+V2+1,V2>=2,V1>=1,X6=0,W6=1,V=1] 
* CE 136: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):44
     [V2>=V6,V6>=V1+1,V1>=2,X6=0,W6=1,V=1] 
* CE 137: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):45
     [V1>=V6+1,V2+1>=V1,V6>=2,X6=0,W6=1,V=1] 
* CE 138: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):46
     [V1>=V2+2,V2>=V6,V6>=2,X6=0,W6=1,V=1] 
* CE 139: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):47
     [V6>=V2+1,V1>=V6+2,V2>=2,X6=0,W6=1,V=1] 
* CE 140: start(V,V1,V6,V2) = 0+ cond2(W6,V1,V6,V2,X6):48
     [V1+V2>=V6+2,V6>=V2+1,V6>=V1+1,X6=0,W6=1,V=1] 
* CE 141: start(V,V1,V6,V2) = 0+ gr(W6,V1,X6):1
     [V1>=0,X6=0,W6=0,V=0] 
* CE 142: start(V,V1,V6,V2) = 0+ gr(V,W6,X6):2
     [V>=1,X6=1,W6=0,V1=0] 
* CE 143: start(V,V1,V6,V2) = 0+ gr(V,V1,W6):3
     [V1>=V,V>=1,W6=0] 
* CE 144: start(V,V1,V6,V2) = 0+ gr(V,V1,W6):4
     [V>=V1+1,V1>=1,W6=1] 
* CE 145: start(V,V1,V6,V2) = 0+ p(W6,X6):1
     [X6=0,W6=0,V=0] 
* CE 146: start(V,V1,V6,V2) = 0+ p(W6,X6):2
     [X6>=0,X6+1=W6,X6+1=V] 
* CE 147: start(V,V1,V6,V2) = 0+ eq(W6,X6,Y6):1
     [Y6=1,X6=0,W6=0,V1=0,V=0] 
* CE 148: start(V,V1,V6,V2) = 0+ eq(W6,V1,X6):2
     [V1>=1,X6=0,W6=0,V=0] 
* CE 149: start(V,V1,V6,V2) = 0+ eq(V,W6,X6):3
     [V>=1,X6=0,W6=0,V1=0] 
* CE 150: start(V,V1,V6,V2) = 0+ eq(V,V1,W6):4
     [V1>=V+1,V>=1,W6=0] 
* CE 151: start(V,V1,V6,V2) = 0+ eq(V,V1,W6):5
     [V>=V1+1,V1>=1,W6=0] 
* CE 152: start(A,A,B,C) = 0+ eq(A,A,D):6
     [A>=1,D=1] 
* CE 153: start(V,V1,V6,V2) = 0+ and(W6,V1,X6):1
     [V1>=0,X6=0,W6=0,V=0] 
* CE 154: start(V,V1,V6,V2) = 0+ and(W6,X6,Y6):2
     [Y6=1,X6=1,W6=1,V1=1,V=1] 
* CE 155: start(V,V1,V6,V2) = 0+ and(V,W6,X6):3
     [V>=0,X6=0,W6=0,V1=0] 

### Cost equations --> "Loop" of start/4 
* CEs [92,140] --> Loop 53 
* CEs [91,139] --> Loop 54 
* CEs [137] --> Loop 55 
* CEs [78] --> Loop 56 
* CEs [76,136] --> Loop 57 
* CEs [90,135] --> Loop 58 
* CEs [89,134] --> Loop 59 
* CEs [88,133] --> Loop 60 
* CEs [87,132] --> Loop 61 
* CEs [86,131] --> Loop 62 
* CEs [75,130] --> Loop 63 
* CEs [85,129] --> Loop 64 
* CEs [84,128] --> Loop 65 
* CEs [83,127] --> Loop 66 
* CEs [82,126] --> Loop 67 
* CEs [81,125] --> Loop 68 
* CEs [73,124] --> Loop 69 
* CEs [72,123] --> Loop 70 
* CEs [71,122] --> Loop 71 
* CEs [70,121] --> Loop 72 
* CEs [77,120,138] --> Loop 73 
* CEs [119] --> Loop 74 
* CEs [68,118] --> Loop 75 
* CEs [117] --> Loop 76 
* CEs [67] --> Loop 77 
* CEs [66,116] --> Loop 78 
* CEs [113,114,115,152,154] --> Loop 79 
* CEs [80,112] --> Loop 80 
* CEs [79,110] --> Loop 81 
* CEs [69,109,143,144,146,150,151] --> Loop 82 
* CEs [64,74,108,111] --> Loop 83 
* CEs [65,107,142,149,155] --> Loop 84 
* CEs [93,94,95,96,97,98,99,100,101,102,103,104,105,106,141,145,147,148,153] --> Loop 85 

#### Loops of start/4 
* Loop 53: start(V,V1,V6,V2) [V1+V2>=V6+2,V6>=V2+1,V6>=V1+1,V=1] 
* Loop 54: start(V,V1,V6,V2) [V6>=V2+1,V1>=V6+2,V2>=2,V=1] 
* Loop 55: start(V,V1,V6,V2) [V1>=V6+1,V2+1>=V1,V6>=2,V=1] 
* Loop 56: start(V,V1,V6,V2) [V1>=V6+1,V2>=V1,V6>=1,V=1] 
* Loop 57: start(V,V1,V6,V2) [V2>=V6,V6>=V1+1,V1>=1,V=1] 
* Loop 58: start(V,V1,V6,V2) [V6>=V1+V2+1,V2>=2,V1>=1,V=1] 
* Loop 59: start(V,V1,V6,V2) [V6>=V1+1,V1>=2,V1+V2=V6+1,V=1] 
* Loop 60: start(V,V1,V6,V2) [V6>=V1+2,V1>=1,V1+V2=V6,V=1] 
* Loop 61: start(V,V1,V6,V2) [V1>=V2+2,V2>=2,V1=V6+1,V=1] 
* Loop 62: start(A,B,B,C) [B>=C+1,C>=2,A=1] 
* Loop 63: start(A,B,B,C) [C>=B,B>=1,A=1] 
* Loop 64: start(V,V1,V6,V2) [V1>=V6+2,V6>=2,V2=1,V=1] 
* Loop 65: start(V,V1,V6,V2) [V6>=V1+2,V1>=1,V2=1,V=1] 
* Loop 66: start(V,V1,V6,V2) [V1>=3,V1=V6+1,V2=1,V=1] 
* Loop 67: start(A,B,B,C) [B>=2,C=1,A=1] 
* Loop 68: start(V,V1,V6,V2) [V1>=1,V1+1=V6,V2=1,V=1] 
* Loop 69: start(V,V1,V6,V2) [V1>=V6+2,V6>=1,V2=0,V=1] 
* Loop 70: start(V,V1,V6,V2) [V6>=V1+1,V1>=1,V2=0,V=1] 
* Loop 71: start(V,V1,V6,V2) [V1>=2,V1=V6+1,V2=0,V=1] 
* Loop 72: start(A,B,B,C) [B>=1,C=0,A=1] 
* Loop 73: start(V,V1,V6,V2) [V1>=V2+1,V2>=V6,V6>=1,V=1] 
* Loop 74: start(V,V1,V6,V2) [V2+1>=V1,V1>=2,V6=1,V=1] 
* Loop 75: start(V,V1,V6,V2) [V1>=V2+1,V2>=1,V6=0,V=1] 
* Loop 76: start(V,V1,V6,V2) [V2+1>=V1,V1>=2,V6=0,V=1] 
* Loop 77: start(V,V1,V6,V2) [V2>=V1,V1>=1,V6=0,V=1] 
* Loop 78: start(V,V1,V6,V2) [V1>=1,V2=0,V6=0,V=1] 
* Loop 79: start(A,A,B,C) [A>=1] 
* Loop 80: start(V,V1,V6,V2) [V6>=V2+1,V2>=2,V1=0,V=1] 
* Loop 81: start(V,V1,V6,V2) [V6>=2,V2=1,V1=0,V=1] 
* Loop 82: start(V,V1,V6,V2) [V>=1] 
* Loop 83: start(V,V1,V6,V2) [V2>=0,V6>=0,V1>=0,V>=0] 
* Loop 84: start(V,V1,V6,V2) [V>=0,V1=0] 
* Loop 85: start(V,V1,V6,V2) [V=0] 

### Ranking functions of CR start(V,V1,V6,V2) 

#### Partial ranking functions of CR start(V,V1,V6,V2) 


### Resulting Chains:start(V,V1,V6,V2) 
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]


### Merging Chains  start/4 into  External patterns of execution 
* [[85]] --> 1 
* [[81],[84]] --> 2 
* [[80],[83]] --> 3 
* [[78],[82]] --> 4 
* [[77]] --> 5 
* [[76]] --> 6 
* [[75]] --> 7 
* [[74]] --> 8 
* [[72]] --> 9 
* [[71]] --> 10 
* [[70]] --> 11 
* [[69]] --> 12 
* [[68]] --> 13 
* [[67]] --> 14 
* [[66]] --> 15 
* [[65]] --> 16 
* [[64]] --> 17 
* [[63]] --> 18 
* [[62]] --> 19 
* [[61]] --> 20 
* [[59]] --> 21 
* [[60]] --> 22 
* [[58]] --> 23 
* [[57]] --> 24 
* [[56]] --> 25 
* [[73]] --> 26 
* [[55]] --> 27 
* [[54]] --> 28 
* [[53]] --> 29 
* [[79]] --> 30 


Computing Bounds
=====================================

#### Cost of chains of and(V,V1,Out):
* Chain [19]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [18]: 1
  with precondition: [V=1,V1=1,Out=1] 

* Chain [17]: 1
  with precondition: [V1=0,Out=0,V>=0] 


#### Cost of loops [23] 

 * loop 23:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1
#### Cost of phase [23]:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of phase [23]:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of phase [23]:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of chains of eq(V,V1,Out):
* Chain [[23],22]: 1*it(23)+1
  Such that:it(23) =< V

  with precondition: [Out=1,V=V1,V>=1] 

* Chain [[23],21]: 1*it(23)+1
  Such that:it(23) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [[23],20]: 1*it(23)+1
  Such that:it(23) =< V1

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [22]: 1
  with precondition: [V=0,V1=0,Out=1] 

* Chain [21]: 1
  with precondition: [V=0,Out=0,V1>=1] 

* Chain [20]: 1
  with precondition: [V1=0,Out=0,V>=1] 


#### Cost of loops [26] 

 * loop 26:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1
#### Cost of phase [26]:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:gr(V,V1,Out) -> [gr(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V1
it(26) =< V1-V1'

#### Cost of chains of gr(V,V1,Out):
* Chain [[26],25]: 1*it(26)+1
  Such that:it(26) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[26],24]: 1*it(26)+1
  Such that:it(26) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [25]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [24]: 1
  with precondition: [V1=0,Out=1,V>=1] 


#### Cost of chains of p(V,Out):
* Chain [28]: 1
  with precondition: [V=0,Out=0] 

* Chain [27]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [49] 

 * loop 49:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4
#### Cost of phase [49]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(49)+0
  Such that:it(49) =< V6
it(49) =< V6-V6'

#### Cost of loops [47] 

 * loop 47:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
1*s(3)+4
  Such that:s(3) =< V2'

#### Cost of phase [47]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(47)+1*s(4)+0
  Such that:it(47) =< V6
it(47) =< V6-V2
it(47) =< V6-V2-V6'+V2'
it(47) =< V6-V6'
aux(1) =< V2
s(4) =< it(47)*aux(1)

#### Cost of phase [47]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(47)+1*s(4)+0
  Such that:it(47) =< V6
it(47) =< V6-V2
it(47) =< V6-V2-V6'+V2'
it(47) =< V6-V6'
aux(1) =< V2
s(4) =< it(47)*aux(1)

#### Cost of loops [45] 

 * loop 45:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4
#### Cost of phase [45]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(45)+0
  Such that:it(45) =< V1
it(45) =< V1-V1'
it(45) =< V6
it(45) =< V6-V6'

#### Cost of phase [45]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(45)+0
  Such that:it(45) =< V1
it(45) =< V1-V1'
it(45) =< V6
it(45) =< V6-V6'

#### Cost of phase [45]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(45)+0
  Such that:it(45) =< V1
it(45) =< V1-V1'
it(45) =< V6
it(45) =< V6-V6'

#### Cost of phase [45]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(45)+0
  Such that:it(45) =< V1
it(45) =< V1-V1'
it(45) =< V6
it(45) =< V6-V6'

#### Cost of loops [43] 

 * loop 43:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
1*s(6)+4
  Such that:s(6) =< V2'

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of phase [43]:cond2(V,V1,V6,V2,Out) -> [cond2(V',V1',V6',V2',Out')] 
4*it(43)+1*s(7)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'
it(43) =< V6
it(43) =< V6-V2
it(43) =< V6-V2-V6'+V2'
it(43) =< V6-V6'
aux(4) =< V2
s(7) =< it(43)*aux(4)

#### Cost of chains of cond2(V,V1,V6,V2,Out):
* Chain [[49],50,42]: 4*it(49)+8
  Such that:it(49) =< V6

  with precondition: [V=1,V1=0,V2=0,Out=0,V6>=1] 

* Chain [[47],48,42]: 4*it(47)+1*s(1)+1*s(4)+8
  Such that:it(47) =< V6
aux(2) =< 1
s(1) =< aux(2)
s(4) =< it(47)*aux(2)

  with precondition: [V=1,V1=0,V2=1,Out=0,V6>=2] 

* Chain [[47],48,41]: 4*it(47)+1*s(1)+1*s(4)+8
  Such that:it(47) =< V6-V2
aux(3) =< V2
s(1) =< aux(3)
s(4) =< it(47)*aux(3)

  with precondition: [V=1,V1=0,Out=0,V2>=2,V6>=V2+1] 

* Chain [[45],[49],50,42]: 4*it(45)+4*it(49)+8
  Such that:it(49) =< -V1+V6
it(45) =< V1

  with precondition: [V=1,V2=0,Out=0,V1>=1,V6>=V1+1] 

* Chain [[45],50,42]: 4*it(45)+8
  Such that:it(45) =< V1

  with precondition: [V=1,V2=0,Out=0,V1=V6,V1>=1] 

* Chain [[45],46,42]: 4*it(45)+8
  Such that:it(45) =< V1

  with precondition: [V=1,V2=0,Out=0,V1=V6+1,V1>=2] 

* Chain [[45],46,40]: 4*it(45)+8
  Such that:it(45) =< V6

  with precondition: [V=1,V2=0,Out=0,V6>=1,V1>=V6+2] 

* Chain [[43],[47],48,42]: 4*it(43)+4*it(47)+1*s(1)+1*s(4)+1*s(7)+8
  Such that:it(47) =< -V1+V6
it(43) =< V1
aux(5) =< 1
s(1) =< aux(5)
s(4) =< it(47)*aux(5)
s(7) =< it(43)*aux(5)

  with precondition: [V=1,V2=1,Out=0,V1>=1,V6>=V1+2] 

* Chain [[43],[47],48,41]: 4*it(43)+4*it(47)+1*s(1)+1*s(4)+1*s(7)+8
  Such that:it(47) =< -V1+V6-V2
it(43) =< V1
aux(6) =< V2
s(1) =< aux(6)
s(4) =< it(47)*aux(6)
s(7) =< it(43)*aux(6)

  with precondition: [V=1,Out=0,V1>=1,V2>=2,V6>=V1+V2+1] 

* Chain [[43],48,42]: 4*it(43)+1*s(1)+1*s(7)+8
  Such that:it(43) =< V6
aux(7) =< 1
s(1) =< aux(7)
s(7) =< it(43)*aux(7)

  with precondition: [V=1,V2=1,Out=0,V1+1=V6,V1>=1] 

* Chain [[43],48,41]: 4*it(43)+1*s(1)+1*s(7)+8
  Such that:it(43) =< V6-V2
aux(8) =< V2
s(1) =< aux(8)
s(7) =< it(43)*aux(8)

  with precondition: [V=1,Out=0,V1+V2=V6,V1>=1,V6>=V1+2] 

* Chain [[43],44,42]: 4*it(43)+1*s(7)+1*s(8)+8
  Such that:it(43) =< V6
aux(9) =< 1
s(8) =< aux(9)
s(7) =< it(43)*aux(9)

  with precondition: [V=1,V2=1,Out=0,V1=V6,V1>=2] 

* Chain [[43],44,41]: 4*it(43)+1*s(7)+1*s(8)+8
  Such that:it(43) =< V6-V2
aux(10) =< V2
s(8) =< aux(10)
s(7) =< it(43)*aux(10)

  with precondition: [V=1,Out=0,V1+V2=V6+1,V1>=2,V6>=V1+1] 

* Chain [[43],44,39]: 4*it(43)+1*s(7)+1*s(8)+2*s(9)+8
  Such that:aux(11) =< 2
it(43) =< V6
aux(12) =< 1
s(8) =< aux(12)
s(9) =< aux(11)
s(7) =< it(43)*aux(12)

  with precondition: [V=1,V2=1,Out=0,V1=V6+1,V1>=3] 

* Chain [[43],44,38]: 4*it(43)+1*s(7)+2*s(8)+8
  Such that:it(43) =< V6
aux(13) =< 1
s(8) =< aux(13)
s(7) =< it(43)*aux(13)

  with precondition: [V=1,V2=1,Out=0,V6>=2,V1>=V6+2] 

* Chain [[43],44,34]: 4*it(43)+1*s(7)+3*s(8)+8
  Such that:it(43) =< V6-V2
aux(16) =< V2
s(8) =< aux(16)
s(7) =< it(43)*aux(16)

  with precondition: [V=1,Out=0,V1=V6,V2>=2,V1>=V2+1] 

* Chain [[43],44,32]: 4*it(43)+1*s(7)+1*s(8)+4*s(14)+8
  Such that:aux(19) =< V1-V6+V2
it(43) =< V6-V2
aux(20) =< V2
s(8) =< aux(20)
s(14) =< aux(19)
s(7) =< it(43)*aux(20)

  with precondition: [V=1,Out=0,V6>=V1+1,V6>=V2+1,V1+V2>=V6+2] 

* Chain [[43],44,31]: 4*it(43)+1*s(7)+3*s(8)+8
  Such that:it(43) =< V6-V2
aux(22) =< V2
s(8) =< aux(22)
s(7) =< it(43)*aux(22)

  with precondition: [V=1,Out=0,V2>=2,V1>=V6+2,V6>=V2+1] 

* Chain [[43],44,30]: 4*it(43)+1*s(7)+3*s(8)+2*s(21)+8
  Such that:it(43) =< V6-V2
aux(23) =< V2+1
aux(26) =< V2
s(8) =< aux(26)
s(21) =< aux(23)
s(7) =< it(43)*aux(26)

  with precondition: [V=1,Out=0,V1=V6+1,V2>=2,V1>=V2+2] 

* Chain [52,[45],50,42]: 5*it(45)+14
  Such that:aux(27) =< V1
it(45) =< aux(27)

  with precondition: [V=0,V2=0,Out=0,V1=V6,V1>=1] 

* Chain [51,[43],44,42]: 5*it(43)+1*s(7)+3*s(8)+14
  Such that:aux(29) =< 1
aux(30) =< V6
it(43) =< aux(30)
s(8) =< aux(29)
s(7) =< it(43)*aux(29)

  with precondition: [V=0,V2=1,Out=0,V1=V6,V1>=2] 

* Chain [51,[43],44,34]: 4*it(43)+1*s(7)+5*s(8)+1*s(25)+14
  Such that:s(25) =< V6
it(43) =< V6-V2
aux(31) =< V2
s(8) =< aux(31)
s(7) =< it(43)*aux(31)

  with precondition: [V=0,Out=0,V1=V6,V2>=2,V1>=V2+1] 

* Chain [50,42]: 8
  with precondition: [V=1,V1=0,V6=0,Out=0,V2>=0] 

* Chain [48,42]: 1*s(1)+8
  Such that:s(1) =< 1

  with precondition: [V=1,V1=0,V6=1,Out=0,V2>=1] 

* Chain [48,41]: 1*s(1)+8
  Such that:s(1) =< V6

  with precondition: [V=1,V1=0,Out=0,V6>=2,V2>=V6] 

* Chain [46,42]: 8
  with precondition: [V=1,V1=1,V6=0,Out=0,V2>=0] 

* Chain [46,40]: 8
  with precondition: [V=1,V6=0,V2=0,Out=0,V1>=2] 

* Chain [46,39]: 2*s(9)+8
  Such that:aux(11) =< V1
s(9) =< aux(11)

  with precondition: [V=1,V6=0,Out=0,V1>=2,V2+1>=V1] 

* Chain [46,38]: 1*s(11)+8
  Such that:s(11) =< V2

  with precondition: [V=1,V6=0,Out=0,V2>=1,V1>=V2+2] 

* Chain [44,42]: 1*s(8)+8
  Such that:s(8) =< 1

  with precondition: [V=1,V1=1,V6=1,Out=0,V2>=1] 

* Chain [44,41]: 1*s(8)+8
  Such that:s(8) =< V6

  with precondition: [V=1,V1=1,Out=0,V6>=2,V2>=V6] 

* Chain [44,39]: 1*s(8)+2*s(9)+8
  Such that:s(8) =< 1
aux(11) =< V1
s(9) =< aux(11)

  with precondition: [V=1,V6=1,Out=0,V1>=2,V2+1>=V1] 

* Chain [44,38]: 1*s(8)+1*s(11)+8
  Such that:s(8) =< 1
s(11) =< V2

  with precondition: [V=1,V6=1,Out=0,V2>=1,V1>=V2+2] 

* Chain [44,34]: 3*s(8)+8
  Such that:aux(15) =< V6
s(8) =< aux(15)

  with precondition: [V=1,Out=0,V1=V6,V1>=2,V2>=V1] 

* Chain [44,32]: 1*s(8)+4*s(14)+8
  Such that:aux(19) =< V1
s(8) =< V6
s(14) =< aux(19)

  with precondition: [V=1,Out=0,V1>=2,V6>=V1+1,V2>=V6] 

* Chain [44,31]: 2*s(8)+1*s(19)+8
  Such that:s(19) =< V2
aux(21) =< V6
s(8) =< aux(21)

  with precondition: [V=1,Out=0,V6>=2,V2>=V6,V1>=V2+2] 

* Chain [44,30]: 3*s(8)+2*s(21)+8
  Such that:aux(23) =< V1
aux(25) =< V6
s(8) =< aux(25)
s(21) =< aux(23)

  with precondition: [V=1,Out=0,V6>=2,V2+1>=V1,V1>=V6+1] 

* Chain [42]: 4
  with precondition: [V=0,V1=0,V6=0,Out=0,V2>=0] 

* Chain [41]: 4
  with precondition: [V=0,V1=0,Out=0,V6>=1,V2>=0] 

* Chain [40]: 4
  with precondition: [V=0,V6=0,V2=0,Out=0,V1>=1] 

* Chain [39]: 2*s(9)+4
  Such that:aux(11) =< V1
s(9) =< aux(11)

  with precondition: [V=0,V6=0,Out=0,V1>=1,V2>=V1] 

* Chain [38]: 1*s(11)+4
  Such that:s(11) =< V2

  with precondition: [V=0,V6=0,Out=0,V2>=1,V1>=V2+1] 

* Chain [37]: 1*s(28)+4
  Such that:s(28) =< V1

  with precondition: [V=0,V2=0,Out=0,V1=V6,V1>=1] 

* Chain [36]: 1*s(29)+4
  Such that:s(29) =< V1

  with precondition: [V=0,V2=0,Out=0,V1>=1,V6>=V1+1] 

* Chain [35]: 1*s(30)+4
  Such that:s(30) =< V6

  with precondition: [V=0,V2=0,Out=0,V6>=1,V1>=V6+1] 

* Chain [34]: 2*s(12)+4
  Such that:aux(14) =< V1
s(12) =< aux(14)

  with precondition: [V=0,Out=0,V1=V6,V1>=1,V2>=V1] 

* Chain [33]: 1*s(31)+1*s(32)+4
  Such that:s(31) =< V6
s(32) =< V2

  with precondition: [V=0,Out=0,V1=V6,V2>=1,V1>=V2+1] 

* Chain [32]: 4*s(14)+4
  Such that:aux(19) =< V1
s(14) =< aux(19)

  with precondition: [V=0,Out=0,V1>=1,V6>=V1+1,V2>=V1] 

* Chain [31]: 1*s(18)+1*s(19)+4
  Such that:s(18) =< V6
s(19) =< V2

  with precondition: [V=0,Out=0,V6>=1,V2>=1,V1>=V6+1,V1>=V2+1] 

* Chain [30]: 2*s(20)+2*s(21)+4
  Such that:aux(23) =< V1
aux(24) =< V6
s(21) =< aux(23)
s(20) =< aux(24)

  with precondition: [V=0,Out=0,V6>=1,V2>=V1,V1>=V6+1] 

* Chain [29]: 1*s(33)+1*s(34)+4
  Such that:s(33) =< V1
s(34) =< V2

  with precondition: [V=0,Out=0,V2>=1,V6>=V1+1,V1>=V2+1] 


#### Cost of chains of start(V,V1,V6,V2):
* Chain [85]: 16*s(51)+9*s(52)+13*s(56)+4*s(58)+3*s(63)+1*s(64)+1*s(65)+14
  Such that:s(57) =< 1
s(58) =< V6-V2
aux(35) =< V1
aux(36) =< V6
aux(37) =< V2
s(51) =< aux(35)
s(56) =< aux(36)
s(52) =< aux(37)
s(63) =< s(57)
s(64) =< s(56)*s(57)
s(65) =< s(58)*aux(37)

  with precondition: [V=0] 

* Chain [84]: 8
  with precondition: [V1=0,V>=0] 

* Chain [83]: 2*s(78)+1*s(79)+8
  Such that:s(79) =< 1
aux(38) =< V6
s(78) =< aux(38)

  with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 

* Chain [82]: 8*s(81)+2*s(83)+2*s(84)+10
  Such that:aux(39) =< V
aux(40) =< V1
aux(41) =< V6
s(83) =< aux(39)
s(84) =< aux(40)
s(81) =< aux(41)

  with precondition: [V>=1] 

* Chain [81]: 3*s(87)+8*s(88)+2*s(91)+10
  Such that:aux(43) =< 1
aux(44) =< V6
s(88) =< aux(44)
s(87) =< aux(43)
s(91) =< s(88)*aux(43)

  with precondition: [V=1,V1=0,V2=1,V6>=2] 

* Chain [80]: 3*s(96)+8*s(97)+2*s(100)+10
  Such that:aux(46) =< V6-V2
aux(47) =< V2
s(97) =< aux(46)
s(96) =< aux(47)
s(100) =< s(97)*aux(47)

  with precondition: [V=1,V1=0,V2>=2,V6>=V2+1] 

* Chain [79]: 1*s(105)+1*s(106)+1*s(107)+8
  Such that:s(105) =< 1
s(107) =< V1
s(106) =< V6

  with precondition: [V=V1,V>=1] 

* Chain [78]: 8
  with precondition: [V=1,V6=0,V2=0,V1>=1] 

* Chain [77]: 2*s(109)+6
  Such that:s(108) =< V1
s(109) =< s(108)

  with precondition: [V=1,V6=0,V1>=1,V2>=V1] 

* Chain [76]: 2*s(111)+8
  Such that:s(110) =< V1
s(111) =< s(110)

  with precondition: [V=1,V6=0,V1>=2,V2+1>=V1] 

* Chain [75]: 2*s(112)+8
  Such that:aux(48) =< V2
s(112) =< aux(48)

  with precondition: [V=1,V6=0,V2>=1,V1>=V2+1] 

* Chain [74]: 1*s(114)+2*s(116)+8
  Such that:s(114) =< 1
s(115) =< V1
s(116) =< s(115)

  with precondition: [V=1,V6=1,V1>=2,V2+1>=V1] 

* Chain [73]: 4*s(117)+3*s(119)+1*s(120)+8
  Such that:s(120) =< 1
aux(50) =< V6
aux(51) =< V2
s(119) =< aux(51)
s(117) =< aux(50)

  with precondition: [V=1,V6>=1,V2>=V6,V1>=V2+1] 

* Chain [72]: 8*s(125)+10
  Such that:aux(52) =< V1
s(125) =< aux(52)

  with precondition: [V=1,V2=0,V1=V6,V1>=1] 

* Chain [71]: 8*s(127)+10
  Such that:aux(53) =< V1
s(127) =< aux(53)

  with precondition: [V=1,V2=0,V1=V6+1,V1>=2] 

* Chain [70]: 8*s(129)+8*s(130)+10
  Such that:aux(54) =< -V1+V6
aux(55) =< V1
s(129) =< aux(54)
s(130) =< aux(55)

  with precondition: [V=1,V2=0,V1>=1,V6>=V1+1] 

* Chain [69]: 8*s(133)+10
  Such that:aux(56) =< V6
s(133) =< aux(56)

  with precondition: [V=1,V2=0,V6>=1,V1>=V6+2] 

* Chain [68]: 3*s(135)+8*s(136)+2*s(139)+10
  Such that:aux(58) =< 1
aux(59) =< V6
s(136) =< aux(59)
s(135) =< aux(58)
s(139) =< s(136)*aux(58)

  with precondition: [V=1,V2=1,V1+1=V6,V1>=1] 

* Chain [67]: 3*s(144)+8*s(145)+2*s(148)+10
  Such that:aux(61) =< 1
aux(62) =< V6
s(145) =< aux(62)
s(144) =< aux(61)
s(148) =< s(145)*aux(61)

  with precondition: [V=1,V2=1,V1=V6,V1>=2] 

* Chain [66]: 3*s(153)+4*s(155)+4*s(158)+1*s(159)+4*s(161)+1*s(165)+10
  Such that:s(155) =< V1
s(161) =< V6
aux(64) =< 1
aux(65) =< 2
s(153) =< aux(64)
s(158) =< aux(65)
s(165) =< s(161)*aux(64)
s(159) =< s(155)*aux(64)

  with precondition: [V=1,V2=1,V1=V6+1,V1>=3] 

* Chain [65]: 3*s(166)+8*s(167)+8*s(168)+2*s(171)+2*s(172)+10
  Such that:aux(67) =< 1
aux(68) =< -V1+V6
aux(69) =< V1
s(167) =< aux(68)
s(168) =< aux(69)
s(166) =< aux(67)
s(171) =< s(167)*aux(67)
s(172) =< s(168)*aux(67)

  with precondition: [V=1,V2=1,V1>=1,V6>=V1+2] 

* Chain [64]: 5*s(179)+8*s(180)+2*s(183)+10
  Such that:aux(71) =< 1
aux(72) =< V6
s(180) =< aux(72)
s(179) =< aux(71)
s(183) =< s(180)*aux(71)

  with precondition: [V=1,V2=1,V6>=2,V1>=V6+2] 

* Chain [63]: 3*s(188)+3*s(192)+8
  Such that:aux(73) =< V1
s(191) =< V6
s(188) =< aux(73)
s(192) =< s(191)

  with precondition: [V=1,V1=V6,V1>=1,V2>=V1] 

* Chain [62]: 7*s(193)+4*s(194)+1*s(197)+4*s(198)+1*s(201)+10
  Such that:s(198) =< V1-V2
s(194) =< V6-V2
aux(75) =< V2
s(193) =< aux(75)
s(201) =< s(198)*aux(75)
s(197) =< s(194)*aux(75)

  with precondition: [V=1,V1=V6,V2>=2,V1>=V2+1] 

* Chain [61]: 7*s(202)+8*s(203)+4*s(207)+2*s(208)+10
  Such that:aux(77) =< V6-V2
aux(78) =< V2
aux(79) =< V2+1
s(203) =< aux(77)
s(202) =< aux(78)
s(207) =< aux(79)
s(208) =< s(203)*aux(78)

  with precondition: [V=1,V1=V6+1,V2>=2,V1>=V2+2] 

* Chain [60]: 3*s(215)+4*s(216)+1*s(219)+4*s(220)+1*s(223)+10
  Such that:s(220) =< V1
s(216) =< V6-V2
aux(81) =< V2
s(215) =< aux(81)
s(223) =< s(220)*aux(81)
s(219) =< s(216)*aux(81)

  with precondition: [V=1,V6=V1+V2,V1>=1,V6>=V1+2] 

* Chain [59]: 3*s(224)+4*s(225)+1*s(228)+4*s(229)+1*s(232)+10
  Such that:s(229) =< V1
s(225) =< V6-V2
aux(83) =< V2
s(224) =< aux(83)
s(232) =< s(229)*aux(83)
s(228) =< s(225)*aux(83)

  with precondition: [V=1,V6+1=V1+V2,V1>=2,V6>=V1+1] 

* Chain [58]: 3*s(233)+8*s(234)+8*s(235)+2*s(238)+2*s(239)+10
  Such that:aux(85) =< -V1+V6-V2
aux(86) =< V1
aux(87) =< V2
s(234) =< aux(85)
s(235) =< aux(86)
s(233) =< aux(87)
s(238) =< s(234)*aux(87)
s(239) =< s(235)*aux(87)

  with precondition: [V=1,V1>=1,V2>=2,V6>=V1+V2+1] 

* Chain [57]: 2*s(246)+8*s(248)+8
  Such that:aux(88) =< V1
aux(89) =< V6
s(246) =< aux(89)
s(248) =< aux(88)

  with precondition: [V=1,V1>=1,V6>=V1+1,V2>=V6] 

* Chain [56]: 3*s(252)+2*s(255)+6
  Such that:s(253) =< V1
aux(90) =< V6
s(252) =< aux(90)
s(255) =< s(253)

  with precondition: [V=1,V6>=1,V2>=V1,V1>=V6+1] 

* Chain [55]: 3*s(259)+2*s(260)+8
  Such that:s(257) =< V1
s(258) =< V6
s(259) =< s(258)
s(260) =< s(257)

  with precondition: [V=1,V6>=2,V2+1>=V1,V1>=V6+1] 

* Chain [54]: 7*s(261)+8*s(262)+2*s(265)+10
  Such that:aux(92) =< V6-V2
aux(93) =< V2
s(262) =< aux(92)
s(261) =< aux(93)
s(265) =< s(262)*aux(93)

  with precondition: [V=1,V2>=2,V1>=V6+2,V6>=V2+1] 

* Chain [53]: 3*s(270)+8*s(272)+8*s(275)+2*s(276)+10
  Such that:aux(95) =< V1-V6+V2
aux(96) =< V6-V2
aux(97) =< V2
s(272) =< aux(96)
s(270) =< aux(97)
s(275) =< aux(95)
s(276) =< s(272)*aux(97)

  with precondition: [V=1,V6>=V1+1,V6>=V2+1,V1+V2>=V6+2] 


Closed-form bounds of start(V,V1,V6,V2): 
-------------------------------------
* Chain [85] with precondition: [V=0] 
    - Upper bound: nat(V1)*16+17+nat(V6)*14+nat(V2)*9+nat(V6-V2)*nat(V2)+nat(V6-V2)*4 
    - Complexity: n^2 
* Chain [84] with precondition: [V1=0,V>=0] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [83] with precondition: [V>=0,V1>=0,V6>=0,V2>=0] 
    - Upper bound: 2*V6+9 
    - Complexity: n 
* Chain [82] with precondition: [V>=1] 
    - Upper bound: 2*V+10+nat(V1)*2+nat(V6)*8 
    - Complexity: n 
* Chain [81] with precondition: [V=1,V1=0,V2=1,V6>=2] 
    - Upper bound: 10*V6+13 
    - Complexity: n 
* Chain [80] with precondition: [V=1,V1=0,V2>=2,V6>=V2+1] 
    - Upper bound: 8*V6-8*V2+ (3*V2+10+ (V6-V2)* (2*V2)) 
    - Complexity: n^2 
* Chain [79] with precondition: [V=V1,V>=1] 
    - Upper bound: V1+9+nat(V6) 
    - Complexity: n 
* Chain [78] with precondition: [V=1,V6=0,V2=0,V1>=1] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [77] with precondition: [V=1,V6=0,V1>=1,V2>=V1] 
    - Upper bound: 2*V1+6 
    - Complexity: n 
* Chain [76] with precondition: [V=1,V6=0,V1>=2,V2+1>=V1] 
    - Upper bound: 2*V1+8 
    - Complexity: n 
* Chain [75] with precondition: [V=1,V6=0,V2>=1,V1>=V2+1] 
    - Upper bound: 2*V2+8 
    - Complexity: n 
* Chain [74] with precondition: [V=1,V6=1,V1>=2,V2+1>=V1] 
    - Upper bound: 2*V1+9 
    - Complexity: n 
* Chain [73] with precondition: [V=1,V6>=1,V2>=V6,V1>=V2+1] 
    - Upper bound: 4*V6+3*V2+9 
    - Complexity: n 
* Chain [72] with precondition: [V=1,V2=0,V1=V6,V1>=1] 
    - Upper bound: 8*V1+10 
    - Complexity: n 
* Chain [71] with precondition: [V=1,V2=0,V1=V6+1,V1>=2] 
    - Upper bound: 8*V1+10 
    - Complexity: n 
* Chain [70] with precondition: [V=1,V2=0,V1>=1,V6>=V1+1] 
    - Upper bound: 8*V6+10 
    - Complexity: n 
* Chain [69] with precondition: [V=1,V2=0,V6>=1,V1>=V6+2] 
    - Upper bound: 8*V6+10 
    - Complexity: n 
* Chain [68] with precondition: [V=1,V2=1,V1+1=V6,V1>=1] 
    - Upper bound: 10*V6+13 
    - Complexity: n 
* Chain [67] with precondition: [V=1,V2=1,V1=V6,V1>=2] 
    - Upper bound: 10*V6+13 
    - Complexity: n 
* Chain [66] with precondition: [V=1,V2=1,V1=V6+1,V1>=3] 
    - Upper bound: 5*V1+5*V6+21 
    - Complexity: n 
* Chain [65] with precondition: [V=1,V2=1,V1>=1,V6>=V1+2] 
    - Upper bound: 10*V6+13 
    - Complexity: n 
* Chain [64] with precondition: [V=1,V2=1,V6>=2,V1>=V6+2] 
    - Upper bound: 10*V6+15 
    - Complexity: n 
* Chain [63] with precondition: [V=1,V1=V6,V1>=1,V2>=V1] 
    - Upper bound: 3*V1+3*V6+8 
    - Complexity: n 
* Chain [62] with precondition: [V=1,V1=V6,V2>=2,V1>=V2+1] 
    - Upper bound: 4*V6-4*V2+ (4*V1-4*V2+ (7*V2+10+ (V1-V2)*V2+ (V6-V2)*V2)) 
    - Complexity: n^2 
* Chain [61] with precondition: [V=1,V1=V6+1,V2>=2,V1>=V2+2] 
    - Upper bound: 8*V6-8*V2+ (7*V2+10+ (V6-V2)* (2*V2)+ (4*V2+4)) 
    - Complexity: n^2 
* Chain [60] with precondition: [V=1,V6=V1+V2,V1>=1,V6>=V1+2] 
    - Upper bound: 4*V6-4*V2+ (4*V1+10+V2*V1+3*V2+ (V6-V2)*V2) 
    - Complexity: n^2 
* Chain [59] with precondition: [V=1,V6+1=V1+V2,V1>=2,V6>=V1+1] 
    - Upper bound: 4*V6-4*V2+ (4*V1+10+V2*V1+3*V2+ (V6-V2)*V2) 
    - Complexity: n^2 
* Chain [58] with precondition: [V=1,V1>=1,V2>=2,V6>=V1+V2+1] 
    - Upper bound: -8*V1+8*V6-8*V2+ (8*V1+3*V2+10+2*V2*V1+ (-V1+V6-V2)* (2*V2)) 
    - Complexity: n^2 
* Chain [57] with precondition: [V=1,V1>=1,V6>=V1+1,V2>=V6] 
    - Upper bound: 8*V1+2*V6+8 
    - Complexity: n 
* Chain [56] with precondition: [V=1,V6>=1,V2>=V1,V1>=V6+1] 
    - Upper bound: 2*V1+3*V6+6 
    - Complexity: n 
* Chain [55] with precondition: [V=1,V6>=2,V2+1>=V1,V1>=V6+1] 
    - Upper bound: 2*V1+3*V6+8 
    - Complexity: n 
* Chain [54] with precondition: [V=1,V2>=2,V1>=V6+2,V6>=V2+1] 
    - Upper bound: 8*V6-8*V2+ (7*V2+10+ (V6-V2)* (2*V2)) 
    - Complexity: n^2 
* Chain [53] with precondition: [V=1,V6>=V1+1,V6>=V2+1,V1+V2>=V6+2] 
    - Upper bound: 8*V6-8*V2+ (8*V1-8*V6+8*V2+ (3*V2+10+ (V6-V2)* (2*V2))) 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V6,V2): max([max([nat(V2)+1+max([nat(V6)*4,nat(V6-V2)*nat(V2)+1+nat(V6-V2)*4+max([nat(V1-V2)*nat(V2)+nat(V2)*4+nat(V1-V2)*4,nat(V6-V2)*nat(V2)+nat(V6-V2)*4+max([nat(V1-V6+V2)*8,nat(V2+1)*4+nat(V2)*4])])])+nat(V2)*2,nat(V6)*6+1+ (nat(V6)*2+5)+ (nat(V6)*2+1)])+2,nat(V1)+max([nat(V1)+max([max([3,nat(V6)*3+max([2,2*V+4+nat(V6)*5])]),nat(V1)+2+max([nat(V6)*3,nat(V1)+max([nat(V1)+max([nat(V1)*3+max([max([2,nat(V6)*2,nat(-V1+V6)*8+2,nat(V2)*3+2+nat(V2)*2*nat(V1)+nat(V2)*2*nat(-V1+V6-V2)+nat(-V1+V6-V2)*8]),nat(V1)*2+5+max([nat(-V1+V6)*10,nat(V1)*6+4+nat(V6)*14+nat(V2)*9+nat(V6-V2)*nat(V2)+nat(V6-V2)*4])]),nat(V6)*5+13]),nat(V2)*nat(V1)+2+nat(V2)*3+nat(V6-V2)*nat(V2)+nat(V6-V2)*4])])]),nat(V6)+3])])+6 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 238 ms.
   - Backward Invariants 111 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 455 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 1208 ms.
   - Equation cost structures 671 ms.
   - Phase cost structures 43 ms.
   - Chain cost structures 175 ms.
   - Solving cost expressions 46 ms.
* Total analysis performed in 2003 ms.

