
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [odd/2]
1. non_recursive  : [p/2]
2. recursive  : [cond/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into odd/2
1. SCC is partially evaluated into p/2
2. SCC is partially evaluated into cond/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations odd/2 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations odd/2 
* CE 12: odd(V1,Out) = 1+ odd(W1,Out)
     [W1>=0,W1+2=V1] 
* CE 13: odd(V1,Out) = 1
     [Out=1,V1=1] 
* CE 14: odd(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of odd/2 
* CEs [13] --> Loop 9 
* CEs [14] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of odd/2 
* Loop 9: odd(V1,Out) [Out=1,V1=1] 
* Loop 10: odd(V1,Out) [Out=0,V1=0] 
* Loop 11: odd(V1,Out)->  odd(V1',Out)
                  [V1'>=0,V1'+2=V1] 

### Ranking functions of CR odd(V1,Out) 
* RF of phase [11]: [V1-1]

#### Partial ranking functions of CR odd(V1,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1-1


### Resulting Chains:odd(V1,Out) 
* [[11],10]
* [[11],9]
* [10]
* [9]


### Merging Chains  odd/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 
* [[10,[11]]] --> 3 
* [[9,[11]]] --> 4 


### Specialization of cost equations p/2 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations p/2 
* CE 15: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 16: p(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of p/2 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of p/2 
* Loop 12: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 13: p(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [13]
* [12]


### Merging Chains  p/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations cond/3 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18,19,20,21] 


#### Refined cost equations cond/3 
* CE 17: cond(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 18: cond(V1,V,Out) = 1+ odd(W1,X1):1+ p(Y1,Z1):1+ cond(A2,B2,Out)
     [B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,V=0,V1=1] 
* CE 19: cond(V1,V,Out) = 1+ odd(W1,X1):2+ p(Y1,Z1):2+ cond(A2,B2,Out)
     [B2=0,A2=1,Z1=0,Y1=1,X1=1,W1=1,V=1,V1=1] 
* CE 20: cond(V1,V,Out) = 1+ odd(W1,X1):3+ p(Y1,Z1):2+ cond(A2,Z1,Out)
     [Z1>=1,Z1+1=Y1,Z1+1=W1,Z1+1=V,A2=0,X1=0,V1=1] 
* CE 21: cond(V1,V,Out) = 1+ odd(W1,X1):4+ p(Y1,Z1):2+ cond(A2,Z1,Out)
     [Z1>=2,Z1+1=Y1,Z1+1=W1,Z1+1=V,A2=1,X1=1,V1=1] 

### Cost equations --> "Loop" of cond/3 
* CEs [21] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

#### Loops of cond/3 
* Loop 14: cond(V1,V,Out)->  cond(V1',V',Out)
                  [V>=3,V=V'+1,V1'=1,V1=1] 
* Loop 15: cond(V1,V,Out)->  cond(V1',V',Out)
                  [V>=2,V=V'+1,V1'=0,V1=1] 
* Loop 16: cond(V1,V,Out)->  cond(V1',V',Out)
                  [V'=0,V1'=1,V=1,V1=1] 
* Loop 17: cond(V1,V,Out)->  cond(V1',V',Out)
                  [V'=0,V1'=0,V=0,V1=1] 
* Loop 18: cond(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR cond(V1,V,Out) 
* RF of phase [14]: [V-2]

#### Partial ranking functions of CR cond(V1,V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V-2


### Resulting Chains:cond(V1,V,Out) 
* [[14],18]
* [[14],15,18]
* [18]
* [17,18]
* [16,18]
* [16,17,18]
* [15,18]


### Merging Chains  cond/3 into  External patterns of execution 
* [[18,17],[18]] --> 1 
* [[18,17,16],[18,16]] --> 2 
* [[18,15],[18,15,[14]],[18,[14]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [22,23,24] 
* CE 3 is refined into CE [25,26,27,28] 
* CE 4 is refined into CE [29,30] 


#### Refined cost equations start/2 
* CE 22: start(V1,V) = 0+ cond(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 23: start(V1,V) = 0+ cond(W1,X1,Y1):2
     [Y1=0,X1=1,W1=1,V=1,V1=1] 
* CE 24: start(V1,V) = 0+ cond(W1,V,X1):3
     [V>=2,X1=0,W1=1,V1=1] 
* CE 25: start(V1,V) = 0+ odd(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 26: start(V1,V) = 0+ odd(W1,X1):2
     [X1=1,W1=1,V1=1] 
* CE 27: start(V1,V) = 0+ odd(V1,W1):3
     [V1>=2,W1=0] 
* CE 28: start(V1,V) = 0+ odd(V1,W1):4
     [V1>=3,W1=1] 
* CE 29: start(V1,V) = 0+ p(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 30: start(V1,V) = 0+ p(W1,X1):2
     [X1>=0,X1+1=W1,X1+1=V1] 

### Cost equations --> "Loop" of start/2 
* CEs [22] --> Loop 19 
* CEs [23,24,26,27,28,30] --> Loop 20 
* CEs [25,29] --> Loop 21 

#### Loops of start/2 
* Loop 19: start(V1,V) [V>=0,V1>=0] 
* Loop 20: start(V1,V) [V1>=1] 
* Loop 21: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [21]
* [20]
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[21]] --> 1 
* [[19]] --> 2 
* [[20]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:odd(V1,Out) -> [odd(V1',Out')] 
1
#### Cost of phase [11]:odd(V1,Out) -> [odd(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:odd(V1,Out) -> [odd(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of odd(V1,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< V1

  with precondition: [Out=0,V1>=2] 

* Chain [[11],9]: 1*it(11)+1
  Such that:it(11) =< V1

  with precondition: [Out=1,V1>=3] 

* Chain [10]: 1
  with precondition: [V1=0,Out=0] 

* Chain [9]: 1
  with precondition: [V1=1,Out=1] 


#### Cost of chains of p(V1,Out):
* Chain [13]: 1
  with precondition: [V1=0,Out=0] 

* Chain [12]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [14] 

 * loop 14:cond(V1,V,Out) -> [cond(V1',V',Out')] 
1*s(2)+3
  Such that:s(2) =< V'+1

#### Cost of phase [14]:cond(V1,V,Out) -> [cond(V1',V',Out')] 
3*it(14)+1*s(3)+0
  Such that:it(14) =< V-V'
aux(2) =< V
it(14) =< aux(2)
s(3) =< it(14)*aux(2)

#### Cost of phase [14]:cond(V1,V,Out) -> [cond(V1',V',Out')] 
3*it(14)+1*s(3)+0
  Such that:it(14) =< V-V'
aux(2) =< V
it(14) =< aux(2)
s(3) =< it(14)*aux(2)

#### Cost of chains of cond(V1,V,Out):
* Chain [[14],18]: 3*it(14)+1*s(3)+0
  Such that:aux(3) =< V
it(14) =< aux(3)
s(3) =< it(14)*aux(3)

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [[14],15,18]: 4*it(14)+1*s(3)+3
  Such that:aux(4) =< V
it(14) =< aux(4)
s(3) =< it(14)*aux(4)

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [18]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [17,18]: 3
  with precondition: [V1=1,V=0,Out=0] 

* Chain [16,18]: 3
  with precondition: [V1=1,V=1,Out=0] 

* Chain [16,17,18]: 6
  with precondition: [V1=1,V=1,Out=0] 

* Chain [15,18]: 1*s(4)+3
  Such that:s(4) =< V

  with precondition: [V1=1,Out=0,V>=2] 


#### Cost of chains of start(V1,V):
* Chain [21]: 1
  with precondition: [V1=0] 

* Chain [20]: 8*s(13)+2*s(14)+2*s(15)+6
  Such that:s(12) =< V
aux(6) =< V1
s(15) =< aux(6)
s(13) =< s(12)
s(14) =< s(13)*s(12)

  with precondition: [V1>=1] 

* Chain [19]: 3
  with precondition: [V1>=0,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [21] with precondition: [V1=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V1>=1] 
    - Upper bound: 2*V1+6+nat(V)*8+nat(V)*2*nat(V) 
    - Complexity: n^2 
* Chain [19] with precondition: [V1>=0,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of start(V1,V): max([2,2*V1+5+nat(V)*8+nat(V)*2*nat(V)])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 32 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 35 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 109 ms.

