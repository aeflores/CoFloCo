
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [gr/3]
2. recursive  : [cond/4]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into gr/3
2. SCC is partially evaluated into cond/4
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


#### Refined cost equations add/3 
* CE 12: add(V1,V,Out) = 1+ add(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 13: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of add/3 
* Loop 9: add(A,B,B) [B>=0,A=0] 
* Loop 10: add(V1,V,Out)->  add(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR add(V1,V,Out) 
* RF of phase [10]: [V1]

#### Partial ranking functions of CR add(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V1


### Resulting Chains:add(V1,V,Out) 
* [[10],9]
* [9]


### Merging Chains  add/3 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[10]]] --> 2 


### Specialization of cost equations gr/3 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 7 is refined into CE [16] 


#### Refined cost equations gr/3 
* CE 14: gr(V1,V,Out) = 1+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 15: gr(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 16: gr(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of gr/3 
* CEs [15] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of gr/3 
* Loop 11: gr(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 12: gr(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 13: gr(V1,V,Out)->  gr(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR gr(V1,V,Out) 
* RF of phase [13]: [V,V1]

#### Partial ranking functions of CR gr(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V
    V1


### Resulting Chains:gr(V1,V,Out) 
* [[13],12]
* [[13],11]
* [12]
* [11]


### Merging Chains  gr/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,[13]]] --> 3 
* [[11,[13]]] --> 4 


### Specialization of cost equations cond/4 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18,19,20,21] 


#### Refined cost equations cond/4 
* CE 17: cond(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 18: cond(V1,V,V2,Out) = 1+ gr(W2,V2,X2):1+ add(Y2,V2,V2):1+ cond(Z2,A3,V2,Out)
     [V2>=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=1] 
* CE 19: cond(V1,V,V2,Out) = 1+ gr(V,W2,X2):2+ add(V,Y2,V):2+ cond(Z2,V,V,Out)
     [V>=1,Z2=1,Y2=0,X2=1,W2=0,V2=0,V1=1] 
* CE 20: cond(V1,V,V2,Out) = 1+ gr(V,W2,X2):3+ add(V,Y2,Z2):2+ cond(A3,V,Z2,Out)
     [Z2>=2*V,V>=1,Z2=V+Y2,Z2=V+W2,Z2=V+V2,A3=0,X2=0,V1=1] 
* CE 21: cond(V1,V,V2,Out) = 1+ gr(V,W2,X2):4+ add(V,Y2,Z2):2+ cond(A3,V,Z2,Out)
     [2*V>=Z2+1,Z2>=V+1,Z2=V+Y2,Z2=V+W2,Z2=V+V2,A3=1,X2=1,V1=1] 

### Cost equations --> "Loop" of cond/4 
* CEs [21] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

#### Loops of cond/4 
* Loop 14: cond(V1,V,V2,Out)->  cond(V1',V,V2',Out)
                  [V>=V2+1,V2>=1,V+V2=V2',V1'=1,V1=1] 
* Loop 15: cond(V1,V,V2,Out)->  cond(V1',V,V2',Out)
                  [V2>=V,V>=1,V+V2=V2',V1'=0,V1=1] 
* Loop 16: cond(V1,V,V2,Out)->  cond(A',V,V,Out)
                  [V>=1,A'=1,V2=0,V1=1] 
* Loop 17: cond(V1,V,V2,Out)->  cond(V1',V',V2,Out)
                  [V2>=0,V'=0,V1'=0,V=0,V1=1] 
* Loop 18: cond(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR cond(V1,V,V2,Out) 

#### Partial ranking functions of CR cond(V1,V,V2,Out) 


### Resulting Chains:cond(V1,V,V2,Out) 
* [18]
* [17,18]
* [16,18]
* [16,15,18]
* [15,18]
* [14,18]
* [14,15,18]


### Merging Chains  cond/4 into  External patterns of execution 
* [[18,17],[18]] --> 1 
* [[18,15,16],[18,16]] --> 2 
* [[18,15]] --> 3 
* [[18,15,14],[18,14]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [22,23,24,25] 
* CE 3 is refined into CE [26,27,28,29] 
* CE 4 is refined into CE [30,31] 


#### Refined cost equations start/3 
* CE 22: start(V1,V,V2) = 0+ cond(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 23: start(V1,V,V2) = 0+ cond(W2,V,X2,Y2):2
     [V>=1,Y2=0,X2=0,W2=1,V2=0,V1=1] 
* CE 24: start(V1,V,V2) = 0+ cond(W2,V,V2,X2):3
     [V2>=V,V>=1,X2=0,W2=1,V1=1] 
* CE 25: start(V1,V,V2) = 0+ cond(W2,V,V2,X2):4
     [V>=V2+1,V2>=1,X2=0,W2=1,V1=1] 
* CE 26: start(V1,V,V2) = 0+ gr(W2,V,X2):1
     [V>=0,X2=0,W2=0,V1=0] 
* CE 27: start(V1,V,V2) = 0+ gr(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 28: start(V1,V,V2) = 0+ gr(V1,V,W2):3
     [V>=V1,V1>=1,W2=0] 
* CE 29: start(V1,V,V2) = 0+ gr(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 
* CE 30: start(V1,V,V2) = 0+ add(W2,V,V):1
     [V>=0,W2=0,V1=0] 
* CE 31: start(V1,V,V2) = 0+ add(V1,W2,X2):2
     [X2>=V1,V1>=1,X2=V1+W2,X2=V1+V] 

### Cost equations --> "Loop" of start/3 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [24,28,29,31] --> Loop 21 
* CEs [22,23] --> Loop 22 
* CEs [26,30] --> Loop 23 

#### Loops of start/3 
* Loop 19: start(V1,V,V2) [V1>=1,V=0] 
* Loop 20: start(V1,V,V2) [V>=V2+1,V2>=1,V1=1] 
* Loop 21: start(V1,V,V2) [V>=0,V1>=1] 
* Loop 22: start(V1,V,V2) [V2>=0,V>=0,V1>=0] 
* Loop 23: start(V1,V,V2) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [23]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  start/3 into  External patterns of execution 
* [[23]] --> 1 
* [[20],[22]] --> 2 
* [[19],[21]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:add(V1,V,Out) -> [add(V1',V',Out')] 
1
#### Cost of phase [10]:add(V1,V,Out) -> [add(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of chains of add(V1,V,Out):
* Chain [[10],9]: 1*it(10)+1
  Such that:it(10) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [9]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [13] 

 * loop 13:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1
#### Cost of phase [13]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'
it(13) =< V
it(13) =< V-V'

#### Cost of phase [13]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'
it(13) =< V
it(13) =< V-V'

#### Cost of chains of gr(V1,V,Out):
* Chain [[13],12]: 1*it(13)+1
  Such that:it(13) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[13],11]: 1*it(13)+1
  Such that:it(13) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [12]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [11]: 1
  with precondition: [V=0,Out=1,V1>=1] 


#### Cost of chains of cond(V1,V,V2,Out):
* Chain [18]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 

* Chain [17,18]: 3
  with precondition: [V1=1,V=0,Out=0,V2>=0] 

* Chain [16,18]: 1*s(1)+3
  Such that:s(1) =< V

  with precondition: [V1=1,V2=0,Out=0,V>=1] 

* Chain [16,15,18]: 3*s(1)+6
  Such that:aux(2) =< V
s(1) =< aux(2)

  with precondition: [V1=1,V2=0,Out=0,V>=1] 

* Chain [15,18]: 2*s(2)+3
  Such that:aux(1) =< V
s(2) =< aux(1)

  with precondition: [V1=1,Out=0,V>=1,V2>=V] 

* Chain [14,18]: 1*s(4)+1*s(5)+3
  Such that:s(5) =< V
s(4) =< V2

  with precondition: [V1=1,Out=0,V2>=1,V>=V2+1] 

* Chain [14,15,18]: 3*s(2)+1*s(4)+6
  Such that:s(4) =< V2
aux(3) =< V
s(2) =< aux(3)

  with precondition: [V1=1,Out=0,V2>=1,V>=V2+1] 


#### Cost of chains of start(V1,V,V2):
* Chain [23]: 1
  with precondition: [V1=0,V>=0] 

* Chain [22]: 4*s(15)+6
  Such that:s(14) =< V
s(15) =< s(14)

  with precondition: [V1>=0,V>=0,V2>=0] 

* Chain [21]: 3*s(17)+2*s(18)+3
  Such that:aux(7) =< V1
aux(8) =< V
s(18) =< aux(7)
s(17) =< aux(8)

  with precondition: [V1>=1,V>=0] 

* Chain [20]: 4*s(23)+2*s(24)+6
  Such that:s(21) =< V
s(22) =< V2
s(23) =< s(21)
s(24) =< s(22)

  with precondition: [V1=1,V2>=1,V>=V2+1] 

* Chain [19]: 1
  with precondition: [V=0,V1>=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [23] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [22] with precondition: [V1>=0,V>=0,V2>=0] 
    - Upper bound: 4*V+6 
    - Complexity: n 
* Chain [21] with precondition: [V1>=1,V>=0] 
    - Upper bound: 2*V1+3*V+3 
    - Complexity: n 
* Chain [20] with precondition: [V1=1,V2>=1,V>=V2+1] 
    - Upper bound: 4*V+2*V2+6 
    - Complexity: n 
* Chain [19] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V,V2): 3*V+2+max([2*V1,V+3+nat(V2)*2])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 112 ms.
   - Backward Invariants 54 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 164 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 154 ms.
   - Equation cost structures 36 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 26 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 526 ms.

