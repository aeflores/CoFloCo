
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [round/2]
1. recursive  : [f/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into round/2
1. SCC is partially evaluated into f/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations round/2 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations round/2 
* CE 10: round(V1,Out) = 1+ round(W1,X1)
     [W1>=0,X1+2=Out,W1+2=V1] 
* CE 11: round(V1,Out) = 1
     [Out=1,V1=1] 
* CE 12: round(V1,Out) = 1
     [Out=1,V1=0] 
* CE 13: round(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of round/2 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of round/2 
* Loop 8: round(V1,Out) [Out=1,V1=1] 
* Loop 9: round(V1,Out) [Out=1,V1=0] 
* Loop 10: round(V1,Out) [Out=0,V1=0] 
* Loop 11: round(V1,Out)->  round(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+2=V1] 

### Ranking functions of CR round(V1,Out) 
* RF of phase [11]: [V1-1]

#### Partial ranking functions of CR round(V1,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1-1


### Resulting Chains:round(V1,Out) 
* [[11],10]
* [[11],9]
* [[11],8]
* [10]
* [9]
* [8]


### Merging Chains  round/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 
* [[8]] --> 3 
* [[9,[11]]] --> 4 
* [[8,[11]],[10,[11]]] --> 5 


### Specialization of cost equations f/3 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15,16,17,18,19] 


#### Refined cost equations f/3 
* CE 14: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: f(V1,V,Out) = 1+ round(W1,X1):1+ f(Y1,Z1,Out)
     [Z1=0,Y1=1,X1=0,W1=0,V=0,V1=1] 
* CE 16: f(V1,V,Out) = 1+ round(W1,X1):2+ f(Y1,Z1,Out)
     [Z1=1,Y1=1,X1=1,W1=0,V=0,V1=1] 
* CE 17: f(V1,V,Out) = 1+ round(W1,X1):3+ f(Y1,Z1,Out)
     [Z1=1,Y1=2,X1=1,W1=1,V=1,V1=2] 
* CE 18: f(V1,V,Out) = 1+ round(W1,V1):4+ f(V1,V1,Out)
     [V1>=3,V1=W1+1,V1=V+1] 
* CE 19: f(V1,V,Out) = 1+ round(V,V):5+ f(W1,V,Out)
     [V>=2,V+1=W1,V+1=V1] 

### Cost equations --> "Loop" of f/3 
* CEs [18] --> Loop 12 
* CEs [19] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [14] --> Loop 17 

#### Loops of f/3 
* Loop 12: f(V1,V,Out)->  f(V1,V1,Out)
                  [V1>=3,V1=V+1] 
* Loop 13: f(V1,V,Out)->  f(V1,V',Out)
                  [V1>=3,V1=V'+1,V1=V+1] 
* Loop 14: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=1,V1'=2,V=1,V1=2] 
* Loop 15: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=1,V1'=1,V=0,V1=1] 
* Loop 16: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=0,V1'=1,V=0,V1=1] 
* Loop 17: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 

#### Partial ranking functions of CR f(V1,V,Out) 


### Resulting Chains:f(V1,V,Out) 
* [[16]]...
* [[16],17]
* [[16],15,17]
* [[14]]...
* [[14],17]
* [[13]]...
* [[13],17]
* [[13],12,17]
* [17]
* [15,17]
* [12,17]


### Merging Chains  f/3 into  External patterns of execution 
* [[17,15],[17],[17,15,[16]],[17,[16]]] --> 1 
* [[17,[14]]] --> 2 
* [[17,12],[17,12,[13]],[17,[13]]] --> 3 
* [[[16]]] --> 4 
* [[[14]]] --> 5 
* [[[13]]] --> 6 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [20,21,22,23,24,25] 
* CE 3 is refined into CE [26,27,28,29,30] 


#### Refined cost equations start/2 
* CE 20: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 21: start(V1,V) = 0+ f(W1,X1,Y1):2
     [Y1=0,X1=1,W1=2,V=1,V1=2] 
* CE 22: start(V1,V) = 0+ f(W1,V,X1):3
     [V>=2,V+1=W1,V+1=V1,X1=0] 
* CE 23: start(V1,V) = 0+ f(W1,X1,Y1):4
     [X1=0,W1=1,V=0,V1=1] 
* CE 24: start(V1,V) = 0+ f(W1,X1,Y1):5
     [X1=1,W1=2,V=1,V1=2] 
* CE 25: start(V1,V) = 0+ f(V1,W1,X1):6
     [V1>=3,V1=W1+1,V1=V+1] 
* CE 26: start(V1,V) = 0+ round(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 27: start(V1,V) = 0+ round(W1,X1):2
     [X1=1,W1=0,V1=0] 
* CE 28: start(V1,V) = 0+ round(W1,X1):3
     [X1=1,W1=1,V1=1] 
* CE 29: start(V1,V) = 0+ round(W1,X1):4
     [X1>=3,X1=W1+1,X1=V1+1] 
* CE 30: start(V1,V) = 0+ round(V1,V1):5
     [V1>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [22,29,30] --> Loop 18 
* CEs [20,21] --> Loop 19 
* CEs [28] --> Loop 20 
* CEs [26,27] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

#### Loops of start/2 
* Loop 18: start(V1,V) [V1>=2] 
* Loop 19: start(V1,V) [V>=0,V1>=0] 
* Loop 20: start(V1,V) [V1=1] 
* Loop 21: start(V1,V) [V1=0] 
* Loop 22: start(V1,V) [V1>=3,V1=V+1] 
* Loop 23: start(V1,V) [V=1,V1=2] 
* Loop 24: start(V1,V) [V=0,V1=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [24]...
* [23]...
* [22]...
* [21]
* [20]
* [19]
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 
* [[18]] --> 4 
* [[24]] --> 5 
* [[23]] --> 6 
* [[22]] --> 7 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:round(V1,Out) -> [round(V1',Out')] 
1
#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of round(V1,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1=Out,V1>=2] 

* Chain [[11],9]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1+1=Out,V1>=2] 

* Chain [[11],8]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1=Out,V1>=3] 

* Chain [10]: 1
  with precondition: [V1=0,Out=0] 

* Chain [9]: 1
  with precondition: [V1=0,Out=1] 

* Chain [8]: 1
  with precondition: [V1=1,Out=1] 


#### Cost of loops [16] 

 * loop 16:f(V1,V,Out) -> [f(V1',V',Out')] 
2
#### Cost of phase [16]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(16)+0
#### Cost of phase [16]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(16)+0
#### Cost of phase [16]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(16)+0
#### Cost of loops [14] 

 * loop 14:f(V1,V,Out) -> [f(V1',V',Out')] 
2
#### Cost of phase [14]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(14)+0
#### Cost of phase [14]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(14)+0
#### Cost of loops [13] 

 * loop 13:f(V1,V,Out) -> [f(V1',V',Out')] 
2*s(6)+2
  Such that:s(5) =< V'
s(6) =< s(5)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(13)+2*s(7)+0
#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(13)+2*s(7)+0
#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
2*it(13)+2*s(7)+0
#### Cost of chains of f(V1,V,Out):
* Chain [[16]]...: 2*it(16)+0
  with precondition: [V1=1,V=0] 

* Chain [[16],17]: 2*it(16)+0
  with precondition: [V1=1,V=0,Out=0] 

* Chain [[16],15,17]: 2*it(16)+2
  with precondition: [V1=1,V=0,Out=0] 

* Chain [[14]]...: 2*it(14)+0
  with precondition: [V1=2,V=1] 

* Chain [[14],17]: 2*it(14)+0
  with precondition: [V1=2,V=1,Out=0] 

* Chain [[13]]...: 4*it(13)+0
  with precondition: [V1>=3,V1=V+1] 

* Chain [[13],17]: 4*it(13)+0
  with precondition: [Out=0,V1=V+1,V1>=3] 

* Chain [[13],12,17]: 4*it(13)+1*s(9)+2
  Such that:s(9) =< V1

  with precondition: [Out=0,V1=V+1,V1>=3] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [15,17]: 2
  with precondition: [V1=1,V=0,Out=0] 

* Chain [12,17]: 1*s(9)+2
  Such that:s(9) =< V1

  with precondition: [Out=0,V+1=V1,V>=2] 


#### Cost of chains of start(V1,V):
* Chain [24]...: 2*s(16)+0
  with precondition: [V1=1,V=0] 

* Chain [23]...: 2*s(17)+0
  with precondition: [V1=2,V=1] 

* Chain [22]...: 4*s(18)+0
  with precondition: [V1=V+1,V1>=3] 

* Chain [21]: 1
  with precondition: [V1=0] 

* Chain [20]: 1
  with precondition: [V1=1] 

* Chain [19]: 1*aux(5)+0
  with precondition: [V1>=0,V>=0] 

* Chain [18]: 2*s(22)+8*s(23)+1*s(24)+2*s(26)+2
  Such that:s(25) =< V1
s(24) =< V1+1
s(21) =< V+1
s(26) =< s(25)
s(22) =< s(21)

  with precondition: [V1>=2] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [24]... with precondition: [V1=1,V=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [V1=2,V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [V1=V+1,V1>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21] with precondition: [V1=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V1>=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18] with precondition: [V1>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 28 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 37 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 132 ms.

