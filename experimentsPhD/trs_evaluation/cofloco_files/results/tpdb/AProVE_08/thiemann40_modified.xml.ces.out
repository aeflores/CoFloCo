
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/2]
1. recursive  : [p/2]
2. non_recursive  : [nonZero/2]
3. recursive  : [if/4,rand/3]
4. non_recursive  : [random/2]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/2
1. SCC is partially evaluated into p/2
2. SCC is partially evaluated into nonZero/2
3. SCC is partially evaluated into rand/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/2 
* CE 13 is refined into CE [21] 
* CE 14 is refined into CE [22] 


#### Refined cost equations fun/2 
* CE 21: fun(A,A) = 1
     [A>=0] 
* CE 22: fun(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of fun/2 
* CEs [21] --> Loop 13 
* CEs [22] --> Loop 14 

#### Loops of fun/2 
* Loop 13: fun(A,A) [A>=0] 
* Loop 14: fun(V,Out) [V>=0,V+1=Out] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [14]
* [13]


### Merging Chains  fun/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations p/2 
* CE 10 is refined into CE [23] 
* CE 12 is refined into CE [24] 
* CE 11 is refined into CE [25] 


#### Refined cost equations p/2 
* CE 23: p(V,Out) = 1
     [Out=0,V=1] 
* CE 24: p(V,Out) = 0
     [V>=0,Out=0] 
* CE 25: p(V,Out) = 1+ p(W,X)
     [V>=2,V=W+1,X+1=Out] 

### Cost equations --> "Loop" of p/2 
* CEs [25] --> Loop 15 
* CEs [23,24] --> Loop 16 

#### Loops of p/2 
* Loop 15: p(V,Out)->  p(V',Out')
                  [V>=2,Out=Out'+1,V=V'+1] 
* Loop 16: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 
* RF of phase [15]: [V-1]

#### Partial ranking functions of CR p(V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V-1


### Resulting Chains:p(V,Out) 
* [[15],16]
* [16]


### Merging Chains  p/2 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations nonZero/2 
* CE 19 is refined into CE [26] 
* CE 20 is refined into CE [27] 
* CE 18 is refined into CE [28] 


#### Refined cost equations nonZero/2 
* CE 26: nonZero(V,Out) = 1
     [V>=1,Out=2] 
* CE 27: nonZero(V,Out) = 0
     [V>=0,Out=0] 
* CE 28: nonZero(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of nonZero/2 
* CEs [26] --> Loop 17 
* CEs [27] --> Loop 18 
* CEs [28] --> Loop 19 

#### Loops of nonZero/2 
* Loop 17: nonZero(V,Out) [V>=1,Out=2] 
* Loop 18: nonZero(V,Out) [V>=0,Out=0] 
* Loop 19: nonZero(V,Out) [Out=1,V=0] 

### Ranking functions of CR nonZero(V,Out) 

#### Partial ranking functions of CR nonZero(V,Out) 


### Resulting Chains:nonZero(V,Out) 
* [19]
* [18]
* [17]


### Merging Chains  nonZero/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 


### Specialization of cost equations rand/3 
* CE 17 is refined into CE [29] 
* CE 15 is refined into CE [30,31,32] 
* CE 16 is refined into CE [33,34,35,36] 


#### Refined cost equations rand/3 
* CE 29: rand(A,B,B) = 2+ nonZero(C,D):1
     [B>=0,D=1,C=0,A=0] 
* CE 30: rand(V,V6,Out) = 1+ nonZero(W6,X6):1
     [V6>=0,X6=1,W6=0,Out=0,V=0] 
* CE 31: rand(V,V6,Out) = 1+ nonZero(V,W6):2
     [V>=0,V6>=0,W6=0,Out=0] 
* CE 32: rand(V,V6,Out) = 1+ nonZero(V,W6):3
     [V>=1,V6>=0,W6=2,Out=0] 
* CE 33: rand(V,V6,Out) = 2+ nonZero(V,W6):3+ p(V,X6):1+ fun(Y6,Z6):1+ rand(A7,Z6,Out)
     [Z6>=1,V>=1,Z6=Y6+1,Z6=V6+1,A7=0,X6=0,W6=2] 
* CE 34: rand(V,V6,Out) = 2+ nonZero(V,W6):3+ p(V,X6):1+ fun(V6,V6):2+ rand(Y6,V6,Out)
     [V6>=0,V>=1,Y6=0,X6=0,W6=2] 
* CE 35: rand(V,V6,Out) = 2+ nonZero(V,W6):3+ p(V,X6):2+ fun(Y6,Z6):1+ rand(X6,Z6,Out)
     [V>=X6+1,Z6>=1,X6>=1,Z6=Y6+1,Z6=V6+1,W6=2] 
* CE 36: rand(V,V6,Out) = 2+ nonZero(V,W6):3+ p(V,X6):2+ fun(V6,V6):2+ rand(X6,V6,Out)
     [V>=X6+1,V6>=0,X6>=1,W6=2] 

### Cost equations --> "Loop" of rand/3 
* CEs [36] --> Loop 20 
* CEs [35] --> Loop 21 
* CEs [34] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [30,31,32] --> Loop 25 

#### Loops of rand/3 
* Loop 20: rand(V,V6,Out)->  rand(V',V6,Out)
                  [V>=V'+1,V'>=1,V6>=0] 
* Loop 21: rand(V,V6,Out)->  rand(V',V6',Out)
                  [V>=V'+1,V'>=1,V6>=0,V6+1=V6'] 
* Loop 22: rand(V,V6,Out)->  rand(V',V6,Out)
                  [V6>=0,V>=1,V'=0] 
* Loop 23: rand(V,V6,Out)->  rand(V',V6',Out)
                  [V6>=0,V>=1,V6+1=V6',V'=0] 
* Loop 24: rand(A,B,B) [B>=0,A=0] 
* Loop 25: rand(V,V6,Out) [V6>=0,V>=0,Out=0] 

### Ranking functions of CR rand(V,V6,Out) 
* RF of phase [20,21]: [V-1]

#### Partial ranking functions of CR rand(V,V6,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1,21:1]:
    V-1


### Resulting Chains:rand(V,V6,Out) 
* [[20,21],25]
* [[20,21],23,25]
* [[20,21],23,24]
* [[20,21],22,25]
* [[20,21],22,24]
* [25]
* [24]
* [23,25]
* [23,24]
* [22,25]
* [22,24]


### Merging Chains  rand/3 into  External patterns of execution 
* [[24]] --> 1 
* [[25,22],[25,23],[25],[25,22,[20,21]],[25,23,[20,21]],[25,[20,21]]] --> 2 
* [[24,23]] --> 3 
* [[24,22]] --> 4 
* [[24,22,[20,21]]] --> 5 
* [[24,23,[20,21]]] --> 6 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50] 
* CE 2 is refined into CE [51] 
* CE 4 is refined into CE [52] 
* CE 5 is refined into CE [53,54,55] 
* CE 6 is refined into CE [56,57] 
* CE 7 is refined into CE [58,59] 
* CE 8 is refined into CE [60,61,62,63,64,65] 
* CE 9 is refined into CE [66,67,68,69,70,71] 


#### Refined cost equations start/3 
* CE 37: start(V,V6,V9) = 1+ p(V6,W9):1+ fun(X9,Y9):1+ rand(Z9,Y9,Y9):1
     [Y9>=1,V6>=0,Y9=X9+1,Y9=V9+1,Z9=0,W9=0,V=2] 
* CE 38: start(V,V6,V9) = 1+ p(V6,W9):1+ fun(X9,Y9):1+ rand(Z9,Y9,A10):2
     [Y9>=1,V6>=0,Y9=X9+1,Y9=V9+1,A10=0,Z9=0,W9=0,V=2] 
* CE 39: start(V,V6,V9) = 1+ p(V6,W9):1+ fun(V9,V9):2+ rand(X9,V9,V9):1
     [V9>=0,V6>=0,X9=0,W9=0,V=2] 
* CE 40: start(V,V6,V9) = 1+ p(V6,W9):1+ fun(V9,V9):2+ rand(X9,V9,Y9):2
     [V9>=0,V6>=0,Y9=0,X9=0,W9=0,V=2] 
* CE 41: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):1+ rand(W9,Y9,Z9):2
     [V6>=W9+1,Y9>=1,W9>=1,Y9=X9+1,Y9=V9+1,Z9=0,V=2] 
* CE 42: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):1+ rand(W9,Z9,A10):3
     [V6>=W9+1,A10>=2,W9>=1,A10=Z9+1,A10=Y9+1,A10=X9+2,A10=V9+2,V=2] 
* CE 43: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):1+ rand(W9,Y9,Y9):4
     [V6>=W9+1,Y9>=1,W9>=1,Y9=X9+1,Y9=V9+1,V=2] 
* CE 44: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):1+ rand(W9,Y9,Z9):5
     [W9+Y9>=Z9+1,Z9>=Y9,V6>=W9+1,Y9>=1,W9>=2,Y9=X9+1,Y9=V9+1,V=2] 
* CE 45: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):1+ rand(W9,Y9,Z9):6
     [W9+Y9>=Z9,Z9>=Y9+1,V6>=W9+1,Y9>=1,W9>=2,Y9=X9+1,Y9=V9+1,V=2] 
* CE 46: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(V9,V9):2+ rand(W9,V9,X9):2
     [V6>=W9+1,V9>=0,W9>=1,X9=0,V=2] 
* CE 47: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(X9,Y9):2+ rand(W9,Z9,A10):3
     [V6>=W9+1,A10>=1,W9>=1,A10=Z9+1,A10=Y9+1,A10=X9+1,A10=V9+1,V=2] 
* CE 48: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(V9,V9):2+ rand(W9,V9,V9):4
     [V6>=W9+1,V9>=0,W9>=1,V=2] 
* CE 49: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(V9,V9):2+ rand(W9,V9,X9):5
     [V9+W9>=X9+1,X9>=V9,V6>=W9+1,V9>=0,W9>=2,V=2] 
* CE 50: start(V,V6,V9) = 1+ p(V6,W9):2+ fun(V9,V9):2+ rand(W9,V9,X9):6
     [V9+W9>=X9,X9>=V9+1,V6>=W9+1,V9>=0,W9>=2,V=2] 
* CE 51: start(V,V6,V9) = 0
     [V9>=0,V6>=0,V>=0] 
* CE 52: start(V,V6,V9) = 1
     [V9>=0,V6>=0,V=1] 
* CE 53: start(V,V6,V9) = 0+ nonZero(W9,X9):1
     [X9=1,W9=0,V=0] 
* CE 54: start(V,V6,V9) = 0+ nonZero(V,W9):2
     [V>=0,W9=0] 
* CE 55: start(V,V6,V9) = 0+ nonZero(V,W9):3
     [V>=1,W9=2] 
* CE 56: start(V,V6,V9) = 0+ p(V,W9):1
     [V>=0,W9=0] 
* CE 57: start(V,V6,V9) = 0+ p(V,W9):2
     [V>=W9+1,W9>=1] 
* CE 58: start(V,V6,V9) = 0+ fun(W9,X9):1
     [X9>=1,X9=W9+1,X9=V+1] 
* CE 59: start(V,V6,V9) = 0+ fun(V,V):2
     [V>=0] 
* CE 60: start(V,V6,V9) = 1+ rand(W9,X9,Y9):1
     [Y9=0,X9=0,W9=0,V=0] 
* CE 61: start(V,V6,V9) = 1+ rand(V,W9,X9):2
     [V>=0,X9=0,W9=0] 
* CE 62: start(V,V6,V9) = 1+ rand(V,W9,X9):3
     [V>=1,X9=1,W9=0] 
* CE 63: start(V,V6,V9) = 1+ rand(V,W9,X9):4
     [V>=1,X9=0,W9=0] 
* CE 64: start(V,V6,V9) = 1+ rand(V,W9,X9):5
     [V>=X9+1,X9>=0,V>=2,W9=0] 
* CE 65: start(V,V6,V9) = 1+ rand(V,W9,X9):6
     [V>=X9,X9>=1,V>=2,W9=0] 
* CE 66: start(V,V6,V9) = 0+ rand(W9,V6,V6):1
     [V6>=0,W9=0,V=0] 
* CE 67: start(V,V6,V9) = 0+ rand(V,V6,W9):2
     [V6>=0,V>=0,W9=0] 
* CE 68: start(V,V6,V9) = 0+ rand(V,W9,X9):3
     [X9>=1,V>=1,X9=W9+1,X9=V6+1] 
* CE 69: start(V,V6,V9) = 0+ rand(V,V6,V6):4
     [V6>=0,V>=1] 
* CE 70: start(V,V6,V9) = 0+ rand(V,V6,W9):5
     [V+V6>=W9+1,W9>=V6,V6>=0,V>=2] 
* CE 71: start(V,V6,V9) = 0+ rand(V,V6,W9):6
     [V+V6>=W9,W9>=V6+1,V6>=0,V>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [37,38,39,40,41,42,43,44,45,46,47,48,49,50] --> Loop 26 
* CEs [52] --> Loop 27 
* CEs [51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71] --> Loop 28 

#### Loops of start/3 
* Loop 26: start(V,V6,V9) [V9>=0,V6>=0,V=2] 
* Loop 27: start(V,V6,V9) [V9>=0,V6>=0,V=1] 
* Loop 28: start(V,V6,V9) [V>=0] 

### Ranking functions of CR start(V,V6,V9) 

#### Partial ranking functions of CR start(V,V6,V9) 


### Resulting Chains:start(V,V6,V9) 
* [28]
* [27]
* [26]


### Merging Chains  start/3 into  External patterns of execution 
* [[27],[28]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of fun(V,Out):
* Chain [14]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [13]: 1
  with precondition: [V=Out,V>=0] 


#### Cost of loops [15] 

 * loop 15:p(V,Out) -> [p(V',Out')] 
1
#### Cost of phase [15]:p(V,Out) -> [p(V',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'

#### Cost of chains of p(V,Out):
* Chain [[15],16]: 1*it(15)+1
  Such that:it(15) =< Out

  with precondition: [Out>=1,V>=Out+1] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of nonZero(V,Out):
* Chain [19]: 1
  with precondition: [V=0,Out=1] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0] 

* Chain [17]: 1
  with precondition: [Out=2,V>=1] 


#### Cost of loops [20,21] 

 * loop 20:rand(V,V6,Out) -> [rand(V',V6',Out')] 
1*s(2)+5
  Such that:s(2) =< V'

 * loop 21:rand(V,V6,Out) -> [rand(V',V6',Out')] 
1*s(4)+5
  Such that:s(4) =< V'

#### Cost of phase [20,21]:rand(V,V6,Out) -> [rand(V',V6',Out')] 
10*it(20)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V
aux(4) =< V-V'
it(20) =< aux(3)
it(20) =< aux(4)
aux(2) =< aux(3)
s(5) =< it(20)*aux(3)
s(6) =< it(20)*aux(2)

#### Cost of phase [20,21]:rand(V,V6,Out) -> [rand(V',V6',Out')] 
10*it(20)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V
aux(4) =< V-V'
it(20) =< aux(3)
it(20) =< aux(4)
aux(2) =< aux(3)
s(5) =< it(20)*aux(3)
s(6) =< it(20)*aux(2)

#### Cost of phase [20,21]:rand(V,V6,Out) -> [rand(V',V6',Out')] 
10*it(20)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V
aux(4) =< V-V'
it(20) =< aux(3)
it(20) =< aux(4)
aux(2) =< aux(3)
s(5) =< it(20)*aux(3)
s(6) =< it(20)*aux(2)

#### Cost of phase [20,21]:rand(V,V6,Out) -> [rand(V',V6',Out')] 
10*it(20)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V
aux(4) =< V-V'
it(20) =< aux(3)
it(20) =< aux(4)
aux(2) =< aux(3)
s(5) =< it(20)*aux(3)
s(6) =< it(20)*aux(2)

#### Cost of phase [20,21]:rand(V,V6,Out) -> [rand(V',V6',Out')] 
10*it(20)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V
aux(4) =< V-V'
it(20) =< aux(3)
it(20) =< aux(4)
aux(2) =< aux(3)
s(5) =< it(20)*aux(3)
s(6) =< it(20)*aux(2)

#### Cost of chains of rand(V,V6,Out):
* Chain [[20,21],25]: 10*it(20)+1*s(5)+1*s(6)+2
  Such that:aux(5) =< V
it(20) =< aux(5)
aux(2) =< aux(5)
s(5) =< it(20)*aux(5)
s(6) =< it(20)*aux(2)

  with precondition: [Out=0,V>=2,V6>=0] 

* Chain [[20,21],23,25]: 10*it(20)+1*s(5)+1*s(6)+7
  Such that:aux(6) =< V
it(20) =< aux(6)
aux(2) =< aux(6)
s(5) =< it(20)*aux(6)
s(6) =< it(20)*aux(2)

  with precondition: [Out=0,V>=2,V6>=0] 

* Chain [[20,21],23,24]: 10*it(20)+1*s(5)+1*s(6)+8
  Such that:aux(7) =< V
it(20) =< aux(7)
aux(2) =< aux(7)
s(5) =< it(20)*aux(7)
s(6) =< it(20)*aux(2)

  with precondition: [V>=2,V6>=0,Out>=V6+1,V+V6>=Out] 

* Chain [[20,21],22,25]: 10*it(20)+1*s(5)+1*s(6)+7
  Such that:aux(8) =< V
it(20) =< aux(8)
aux(2) =< aux(8)
s(5) =< it(20)*aux(8)
s(6) =< it(20)*aux(2)

  with precondition: [Out=0,V>=2,V6>=0] 

* Chain [[20,21],22,24]: 10*it(20)+1*s(5)+1*s(6)+8
  Such that:aux(9) =< V
it(20) =< aux(9)
aux(2) =< aux(9)
s(5) =< it(20)*aux(9)
s(6) =< it(20)*aux(2)

  with precondition: [V>=2,V6>=0,Out>=V6,V+V6>=Out+1] 

* Chain [25]: 2
  with precondition: [Out=0,V>=0,V6>=0] 

* Chain [24]: 3
  with precondition: [V=0,V6=Out,V6>=0] 

* Chain [23,25]: 7
  with precondition: [Out=0,V>=1,V6>=0] 

* Chain [23,24]: 8
  with precondition: [Out=V6+1,V>=1,Out>=1] 

* Chain [22,25]: 7
  with precondition: [Out=0,V>=1,V6>=0] 

* Chain [22,24]: 8
  with precondition: [V6=Out,V>=1,V6>=0] 


#### Cost of chains of start(V,V6,V9):
* Chain [28]: 101*s(22)+10*s(26)+10*s(27)+9
  Such that:aux(11) =< V
s(22) =< aux(11)
s(25) =< aux(11)
s(26) =< s(22)*aux(11)
s(27) =< s(22)*s(25)

  with precondition: [V>=0] 

* Chain [27]: 1
  with precondition: [V=1,V6>=0,V9>=0] 

* Chain [26]: 110*s(63)+10*s(67)+10*s(68)+11
  Such that:aux(18) =< V6
s(63) =< aux(18)
s(66) =< aux(18)
s(67) =< s(63)*aux(18)
s(68) =< s(63)*s(66)

  with precondition: [V=2,V6>=0,V9>=0] 


Closed-form bounds of start(V,V6,V9): 
-------------------------------------
* Chain [28] with precondition: [V>=0] 
    - Upper bound: 101*V+9+20*V*V 
    - Complexity: n^2 
* Chain [27] with precondition: [V=1,V6>=0,V9>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [26] with precondition: [V=2,V6>=0,V9>=0] 
    - Upper bound: 110*V6+11+20*V6*V6 
    - Complexity: n^2 

### Maximum cost of start(V,V6,V9): max([101*V+8+20*V*V,nat(V6)*110+10+nat(V6)*20*nat(V6)])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 34 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 83 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 88 ms.
   - Equation cost structures 46 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 244 ms.

