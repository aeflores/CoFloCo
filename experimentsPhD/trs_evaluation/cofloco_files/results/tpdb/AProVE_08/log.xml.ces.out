
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [p/2]
1. recursive [non_tail] : [minus/3]
2. recursive  : [ (div)/3]
3. recursive  : [log/3]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into p/2
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into (div)/3
3. SCC is partially evaluated into log/3
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations p/2 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 8 is refined into CE [21] 


#### Refined cost equations p/2 
* CE 19: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 20: p(V,Out) = 1
     [Out=0,V=0] 
* CE 21: p(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [19] --> Loop 12 
* CEs [20,21] --> Loop 13 

#### Loops of p/2 
* Loop 12: p(V,Out) [V>=1,V=Out+1] 
* Loop 13: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [13]
* [12]


### Merging Chains  p/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations minus/3 
* CE 12 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 11 is refined into CE [24,25] 
* CE 10 is refined into CE [26] 


#### Refined cost equations minus/3 
* CE 22: minus(V,V2,Out) = 0
     [V2>=0,V>=0,Out=0] 
* CE 23: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 24: minus(V,V2,Out) = 1+ minus(V,W2,X2)+ p(X2,Y2):1
     [W2>=0,X2>=0,V>=0,W2+1=V2,Y2=0,Out=0] 
* CE 25: minus(V,V2,Out) = 1+ minus(V,W2,X2)+ p(Y2,Out):2
     [W2>=0,Out>=0,V>=0,Out+1=X2,Out+1=Y2,W2+1=V2] 
* CE 26: minus(V,V2,Out) = 1+ minus(W2,X2,Out)
     [X2>=0,W2>=0,X2+1=V2,W2+1=V] 

### Cost equations --> "Loop" of minus/3 
* CEs [25] --> Loop 14 
* CEs [26] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of minus/3 
* Loop 14: minus(V,V2,Out)->  minus(V,V2',Out')
                  [Out>=0,V2>=1,V>=0,Out+1=Out',V2=V2'+1] 
* Loop 15: minus(V,V2,Out)->  minus(V',V2',Out)
                  [V2>=1,V>=1,V2=V2'+1,V=V'+1] 
* Loop 16: minus(V,V2,Out)->  minus(V,V2',Out')
                  [Out'>=0,V2>=1,V>=0,V2=V2'+1,Out=0] 
* Loop 17: minus(V,V2,Out) [V2>=0,V>=0,Out=0] 
* Loop 18: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V,V2,Out) 
* RF of phase [14,15,16]: [V2]

#### Partial ranking functions of CR minus(V,V2,Out) 
* Partial RF of phase [14,15,16]:
  - RF of loop [14:1,15:1,16:1]:
    V2
  - RF of loop [15:1]:
    V


### Resulting Chains:minus(V,V2,Out) 
* [[14,15,16],18]
* [[14,15,16],17]
* [18]
* [17]


### Merging Chains  minus/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17],[17,[14,15,16]]] --> 2 
* [[18,[14,15,16]]] --> 3 


### Specialization of cost equations (div)/3 
* CE 13 is refined into CE [27] 
* CE 15 is refined into CE [28] 
* CE 14 is refined into CE [29,30] 


#### Refined cost equations (div)/3 
* CE 27: div(V,V2,Out) = 1
     [V2>=1,Out=0,V=0] 
* CE 28: div(V,V2,Out) = 0
     [V2>=0,V>=0,Out=0] 
* CE 29: div(V,V2,Out) = 1+ minus(V,V2,W2):2+ div(X2,V2,Y2)
     [V2>=1,V>=1,Y2+1=Out,X2=0,W2=0] 
* CE 30: div(V,V2,Out) = 1+ minus(V,V2,W2):3+ div(W2,V2,X2)
     [V>=W2,W2>=0,V2>=1,V>=1,X2+1=Out] 

### Cost equations --> "Loop" of (div)/3 
* CEs [29,30] --> Loop 19 
* CEs [27,28] --> Loop 20 

#### Loops of (div)/3 
* Loop 19: div(V,V2,Out)->  div(V',V2,Out')
                  [V>=V',V'>=0,V2>=1,V>=1,Out=Out'+1] 
* Loop 20: div(V,V2,Out) [V2>=0,V>=0,Out=0] 

### Ranking functions of CR div(V,V2,Out) 

#### Partial ranking functions of CR div(V,V2,Out) 


### Resulting Chains:div(V,V2,Out) 
* [[19]]...
* [[19],20]
* [20]


### Merging Chains  (div)/3 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 
* [[[19]]] --> 3 


### Specialization of cost equations log/3 
* CE 16 is refined into CE [31] 
* CE 18 is refined into CE [32] 
* CE 17 is refined into CE [33,34,35,36,37,38,39] 


#### Refined cost equations log/3 
* CE 31: log(V,V2,Out) = 1
     [V2>=2,Out=0,V=1] 
* CE 32: log(V,V2,Out) = 0
     [V2>=0,V>=0,Out=0] 
* CE 33: log(V,V2,Out) = 1+ minus(W2,X2,W2):1+ div(W2,Y2,Z2):1+ log(A3,B3,C3)
     [W2>=0,C3+1=Out,W2+2=V,B3=2,A3=0,Z2=0,Y2=2,X2=0,V2=2] 
* CE 34: log(V,V2,Out) = 1+ minus(W2,X2,W2):1+ div(W2,Y2,Z2):2+ log(Z2,A3,B3)
     [Z2>=1,W2>=1,B3+1=Out,W2+2=V,A3=2,Y2=2,X2=0,V2=2] 
* CE 35: log(V,V2,Out) = 1+ minus(W2,X2,W2):1+ div(W2,Y2,Z2):3
     [W2>=1,A3+1=Out,W2+2=V,B3=2,Y2=2,X2=0,V2=2] 
* CE 36: log(V,V2,Out) = 1+ minus(W2,X2,Y2):2+ div(Z2,V2,A3):1+ log(B3,V2,C3)
     [V2>=2,W2>=0,V2=X2+2,C3+1=Out,W2+2=V,B3=0,A3=0,Z2=0,Y2=0] 
* CE 37: log(V,V2,Out) = 1+ minus(W2,X2,Y2):3+ div(Y2,V2,Z2):1+ log(A3,V2,B3)
     [W2>=Y2,V2>=3,Y2>=0,V2=X2+2,B3+1=Out,W2+2=V,A3=0,Z2=0] 
* CE 38: log(V,V2,Out) = 1+ minus(W2,X2,Y2):3+ div(Y2,V2,Z2):2+ log(Z2,V2,A3)
     [W2>=Y2,Z2>=1,V2>=3,Y2>=1,V2=X2+2,A3+1=Out,W2+2=V] 
* CE 39: log(V,V2,Out) = 1+ minus(W2,X2,Y2):3+ div(Y2,V2,Z2):3
     [W2>=Y2,V2>=3,Y2>=1,V2=X2+2,A3+1=Out,W2+2=V] 

### Cost equations --> "Loop" of log/3 
* CEs [39] --> Loop 21 
* CEs [35] --> Loop 22 
* CEs [38] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [33,36,37] --> Loop 25 
* CEs [31,32] --> Loop 26 

#### Loops of log/3 
* Loop 21: log(V,V2,Out) [V2>=3,V>=3] 
* Loop 22: log(V,V2,Out) [V>=3,V2=2] 
* Loop 23: log(V,V2,Out)->  log(V',V2,Out')
                  [V'>=1,V2>=3,V>=3,Out=Out'+1] 
* Loop 24: log(V,V2,Out)->  log(V',V2',Out')
                  [V'>=1,V>=3,Out=Out'+1,V2'=2,V2=2] 
* Loop 25: log(V,V2,Out)->  log(V',V2,Out')
                  [V2>=2,V>=2,Out=Out'+1,V'=0] 
* Loop 26: log(V,V2,Out) [V2>=0,V>=0,Out=0] 

### Ranking functions of CR log(V,V2,Out) 

#### Partial ranking functions of CR log(V,V2,Out) 


### Resulting Chains:log(V,V2,Out) 
* [[24]]...
* [[24],26]
* [[24],25,26]
* [[24],22]...
* [[23]]...
* [[23],26]
* [[23],25,26]
* [[23],21]...
* [26]
* [25,26]
* [22]...
* [21]...


### Merging Chains  log/3 into  External patterns of execution 
* [[26,25,[24]],[26,[24]]] --> 1 
* [[26]] --> 2 
* [[26,25]] --> 3 
* [[26,25,[23]],[26,[23]]] --> 4 
* [[22],[22,[24]]] --> 5 
* [[[24]]] --> 6 
* [[21],[[23]],[21,[23]]] --> 7 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [40,41] 
* CE 3 is refined into CE [42,43,44] 
* CE 4 is refined into CE [45,46,47] 
* CE 5 is refined into CE [48,49,50,51,52,53,54] 


#### Refined cost equations start/2 
* CE 40: start(V,V2) = 0+ p(V,W2):1
     [V>=0,W2=0] 
* CE 41: start(V,V2) = 0+ p(W2,X2):2
     [X2>=0,X2+1=W2,X2+1=V] 
* CE 42: start(V,V2) = 0+ minus(V,W2,V):1
     [V>=0,W2=0,V2=0] 
* CE 43: start(V,V2) = 0+ minus(V,V2,W2):2
     [V2>=0,V>=0,W2=0] 
* CE 44: start(V,V2) = 0+ minus(V,V2,W2):3
     [V>=W2,W2>=0,V2>=1] 
* CE 45: start(V,V2) = 0+ div(V,V2,W2):1
     [V2>=0,V>=0,W2=0] 
* CE 46: start(V,V2) = 0+ div(V,V2,W2):2
     [W2>=1,V2>=1,V>=1] 
* CE 47: start(V,V2) = 0+ div(V,V2,W2):3
     [V2>=1,V>=1] 
* CE 48: start(V,V2) = 0+ log(V,W2,X2):1
     [X2>=1,V>=3,W2=2,V2=2] 
* CE 49: start(V,V2) = 0+ log(V,V2,W2):2
     [V2>=0,V>=0,W2=0] 
* CE 50: start(V,V2) = 0+ log(V,V2,W2):3
     [V2>=2,V>=2,W2=1] 
* CE 51: start(V,V2) = 0+ log(V,V2,W2):4
     [W2>=1,V2>=3,V>=3] 
* CE 52: start(V,V2) = 0+ log(V,W2,X2):5
     [V>=3,W2=2,V2=2] 
* CE 53: start(V,V2) = 0+ log(V,W2,X2):6
     [V>=3,W2=2,V2=2] 
* CE 54: start(V,V2) = 0+ log(V,V2,W2):7
     [V2>=3,V>=3] 

### Cost equations --> "Loop" of start/2 
* CEs [47,52,53,54] --> Loop 27 
* CEs [48] --> Loop 28 
* CEs [40,41,42,43,44,45,46,49,50,51] --> Loop 29 

#### Loops of start/2 
* Loop 27: start(V,V2) [V2>=1,V>=1] 
* Loop 28: start(V,V2) [V>=3,V2=2] 
* Loop 29: start(V,V2) [V>=0] 

### Ranking functions of CR start(V,V2) 

#### Partial ranking functions of CR start(V,V2) 


### Resulting Chains:start(V,V2) 
* [29]
* [28]
* [27]...


### Merging Chains  start/2 into  External patterns of execution 
* [[28],[29]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of p(V,Out):
* Chain [13]: 1
  with precondition: [Out=0,V>=0] 

* Chain [12]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [14,15,16] 

 * loop 14:minus(V,V2,Out) -> [minus(V',V2',Out')] 
2
 * loop 15:minus(V,V2,Out) -> [minus(V',V2',Out')] 
1
 * loop 16:minus(V,V2,Out) -> [minus(V',V2',Out')] 
2
#### Cost of phase [14,15,16]:minus(V,V2,Out) -> [minus(V',V2',Out')] 
4*it(14)+1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
aux(1) =< V2
aux(2) =< V2-V2'
it(14) =< aux(1)
it(15) =< aux(1)
it(14) =< aux(2)
it(15) =< aux(2)

#### Cost of phase [14,15,16]:minus(V,V2,Out) -> [minus(V',V2',Out')] 
4*it(14)+1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
aux(1) =< V2
aux(2) =< V2-V2'
it(14) =< aux(1)
it(15) =< aux(1)
it(14) =< aux(2)
it(15) =< aux(2)

#### Cost of chains of minus(V,V2,Out):
* Chain [[14,15,16],18]: 4*it(14)+1*it(15)+1
  Such that:it(15) =< V
aux(3) =< V2
it(14) =< aux(3)
it(15) =< aux(3)

  with precondition: [V2>=1,Out>=0,V>=Out] 

* Chain [[14,15,16],17]: 4*it(14)+1*it(15)+0
  Such that:it(15) =< V
aux(4) =< V2
it(14) =< aux(4)
it(15) =< aux(4)

  with precondition: [Out=0,V>=0,V2>=1] 

* Chain [18]: 1
  with precondition: [V2=0,V=Out,V>=0] 

* Chain [17]: 0
  with precondition: [Out=0,V>=0,V2>=0] 


#### Cost of loops [19] 

 * loop 19:div(V,V2,Out) -> [div(V',V2',Out')] 
2*s(12)+8*s(13)+2
  Such that:s(10) =< V
s(11) =< V2'
s(12) =< s(10)
s(13) =< s(11)
s(12) =< s(11)

#### Cost of phase [19]:div(V,V2,Out) -> [div(V',V2',Out')] 
2*it(19)+2*s(14)+8*s(15)+0
#### Cost of phase [19]:div(V,V2,Out) -> [div(V',V2',Out')] 
2*it(19)+2*s(14)+8*s(15)+0
#### Cost of chains of div(V,V2,Out):
* Chain [[19]]...: 12*it(19)+0
  with precondition: [V>=1,V2>=1] 

* Chain [[19],20]: 12*it(19)+1
  with precondition: [V>=1,V2>=1,Out>=1] 

* Chain [20]: 1
  with precondition: [Out=0,V>=0,V2>=0] 


#### Cost of loops [24] 

 * loop 24:log(V,V2,Out) -> [log(V',V2',Out')] 
12*s(19)+3
#### Cost of phase [24]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(24)+0
#### Cost of phase [24]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(24)+0
#### Cost of phase [24]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(24)+0
#### Cost of loops [24] 

 * loop 24:log(V,V2,Out) -> [log(V',V2',Out')] 
12*s(19)+3
#### Cost of phase [24]:log(V,V2,Out) -> [] 
15*it(24)+4*it([25,26])+2*s(27)+8*s(28)+0
  Such that:it([25,26]) =< 1
s(29) =< V2
s(28) =< s(29)
s(27) =< s(29)

#### Cost of phase [24]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(24)+0
#### Cost of loops [23] 

 * loop 23:log(V,V2,Out) -> [log(V',V2',Out')] 
1*s(36)+4*s(38)+12*s(39)+3
  Such that:s(36) =< V
s(37) =< V2'
s(38) =< s(37)
s(36) =< s(37)

#### Cost of phase [23]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(23)+1*s(40)+4*s(41)+0
#### Cost of phase [23]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(23)+1*s(40)+4*s(41)+0
#### Cost of phase [23]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(23)+1*s(40)+4*s(41)+0
#### Cost of loops [23] 

 * loop 23:log(V,V2,Out) -> [log(V',V2',Out')] 
1*s(36)+4*s(38)+12*s(39)+3
  Such that:s(36) =< V
s(37) =< V2'
s(38) =< s(37)
s(36) =< s(37)

#### Cost of phase [23]:log(V,V2,Out) -> [] 
15*it(23)+4*it([25,26])+2*s(27)+8*s(28)+1*s(40)+4*s(41)+0
  Such that:it([25,26]) =< 1
aux(26) =< V2
s(28) =< aux(26)
s(27) =< aux(26)

#### Cost of phase [23]:log(V,V2,Out) -> [log(V',V2',Out')] 
15*it(23)+1*s(40)+4*s(41)+0
#### Cost of loops [23] 

 * loop 23:log(V,V2,Out) -> [log(V',V2',Out')] 
1*s(36)+4*s(38)+12*s(39)+3
  Such that:s(36) =< V
s(37) =< V2'
s(38) =< s(37)
s(36) =< s(37)

#### Cost of phase [23]:log(V,V2,Out) -> [] 
27*it(23)+2*it([21])+1*s(40)+4*s(41)+1*s(48)+4*s(49)+0
  Such that:it([21]) =< 1
aux(33) =< V2
s(49) =< aux(33)
s(48) =< aux(33)

#### Cost of chains of log(V,V2,Out):
* Chain [[24]]...: 15*it(24)+0
  with precondition: [V>=3,V2=2] 

* Chain [[24],26]: 15*it(24)+1
  with precondition: [V2=2,V>=3,Out>=1] 

* Chain [[24],25,26]: 15*it(24)+4*it([25,26])+2*s(27)+8*s(28)+0
  Such that:it([25,26]) =< 1
s(29) =< V2
s(28) =< s(29)
s(27) =< s(29)

  with precondition: [V2=2,V>=3,Out>=2] 

* Chain [[24],22]...: 27*it(24)+2
  with precondition: [V2=2,V>=3] 

* Chain [[23]]...: 20*it(23)+0
  with precondition: [V>=3,V2>=3] 

* Chain [[23],26]: 20*it(23)+1
  with precondition: [V>=3,V2>=3,Out>=1] 

* Chain [[23],25,26]: 15*it(23)+4*it([25,26])+2*s(27)+8*s(28)+1*s(40)+4*s(41)+0
  Such that:it([25,26]) =< 1
aux(26) =< V2
s(28) =< aux(26)
s(27) =< aux(26)

  with precondition: [V>=3,V2>=3,Out>=2] 

* Chain [[23],21]...: 27*it(23)+2*it([21])+1*s(40)+4*s(41)+1*s(48)+4*s(49)+0
  Such that:it([21]) =< 1
aux(33) =< V2
s(49) =< aux(33)
s(48) =< aux(33)

  with precondition: [V>=3,V2>=3] 

* Chain [26]: 1
  with precondition: [Out=0,V>=0,V2>=0] 

* Chain [25,26]: 2*s(21)+8*s(23)+4
  Such that:aux(9) =< V
aux(10) =< V2
s(21) =< aux(9)
s(23) =< aux(10)
s(21) =< aux(10)

  with precondition: [Out=1,V>=2,V2>=2] 

* Chain [22]...: 12*s(31)+2
  with precondition: [V2=2,V>=3] 

* Chain [21]...: 1*s(44)+4*s(46)+12*s(47)+2
  Such that:s(44) =< V
s(45) =< V2
s(46) =< s(45)
s(44) =< s(45)

  with precondition: [V>=3,V2>=3] 


#### Cost of chains of start(V,V2):
* Chain [29]: 4*s(80)+26*s(82)+52*s(86)+4*s(91)+4
  Such that:s(91) =< 1
aux(36) =< V
aux(37) =< V2
s(80) =< aux(36)
s(82) =< aux(37)
s(80) =< aux(37)

  with precondition: [V>=0] 

* Chain [28]: 4*s(95)+10*s(97)+30*s(98)+1
  Such that:s(95) =< 1
s(96) =< 2
s(97) =< s(96)

  with precondition: [V2=2,V>=3] 

* Chain [27]...: 92*s(99)+2*s(102)+1*s(103)+9*s(105)+2
  Such that:s(102) =< 1
s(103) =< V
s(104) =< V2
s(105) =< s(104)
s(103) =< s(104)

  with precondition: [V>=1,V2>=1] 


Closed-form bounds of start(V,V2): 
-------------------------------------
* Chain [29] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28] with precondition: [V2=2,V>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [V>=1,V2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 33 ms.
* Invariants computed in 127 ms.
   - Backward Invariants 66 ms.
   - Transitive Invariants 22 ms.
* Refinement performed in 230 ms.
* Termination proved in 21 ms.
* Upper bounds computed in 456 ms.
   - Equation cost structures 81 ms.
   - Phase cost structures 298 ms.
   - Chain cost structures 54 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 938 ms.

