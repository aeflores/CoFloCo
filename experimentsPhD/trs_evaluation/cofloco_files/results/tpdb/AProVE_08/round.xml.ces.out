
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [round/2]
1. recursive  : [f/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into round/2
1. SCC is partially evaluated into f/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations round/2 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations round/2 
* CE 10: round(V1,Out) = 1+ round(W1,X1)
     [W1>=0,X1+2=Out,W1+2=V1] 
* CE 11: round(V1,Out) = 1
     [Out=1,V1=1] 
* CE 12: round(V1,Out) = 1
     [Out=1,V1=0] 
* CE 13: round(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of round/2 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of round/2 
* Loop 8: round(V1,Out) [Out=1,V1=1] 
* Loop 9: round(V1,Out) [Out=1,V1=0] 
* Loop 10: round(V1,Out) [Out=0,V1=0] 
* Loop 11: round(V1,Out)->  round(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+2=V1] 

### Ranking functions of CR round(V1,Out) 
* RF of phase [11]: [V1-1]

#### Partial ranking functions of CR round(V1,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1-1


### Resulting Chains:round(V1,Out) 
* [[11],10]
* [[11],9]
* [[11],8]
* [10]
* [9]
* [8]


### Merging Chains  round/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 
* [[8]] --> 3 
* [[9,[11]]] --> 4 
* [[8,[11]],[10,[11]]] --> 5 


### Specialization of cost equations f/3 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15,16,17] 


#### Refined cost equations f/3 
* CE 14: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: f(V1,V,Out) = 1+ round(W1,X1):3+ f(Y1,Z1,Out)
     [Z1=1,Y1=1,X1=1,W1=1,V=0,V1=1] 
* CE 16: f(V1,V,Out) = 1+ round(W1,X1):4+ f(Y1,X1,Out)
     [X1>=3,X1=Y1+1,X1=W1+1,X1=V+2,X1=V1+1] 
* CE 17: f(V1,V,Out) = 1+ round(V1,V1):5+ f(V1,V1,Out)
     [V1>=2,V1=V+1] 

### Cost equations --> "Loop" of f/3 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of f/3 
* Loop 12: f(V1,V,Out)->  f(V1,V1,Out)
                  [V1>=2,V1=V+1] 
* Loop 13: f(V1,V,Out)->  f(V1,V',Out)
                  [V1>=2,V1+1=V',V1=V+1] 
* Loop 14: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=1,V1'=1,V=0,V1=1] 
* Loop 15: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 

#### Partial ranking functions of CR f(V1,V,Out) 


### Resulting Chains:f(V1,V,Out) 
* [15]
* [14,15]
* [13,15]
* [12,15]


### Merging Chains  f/3 into  External patterns of execution 
* [[15,14],[15]] --> 1 
* [[15,12],[15,13]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [18,19] 
* CE 3 is refined into CE [20,21,22,23,24] 


#### Refined cost equations start/2 
* CE 18: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 19: start(V1,V) = 0+ f(W1,V,X1):2
     [V>=1,V+1=W1,V+1=V1,X1=0] 
* CE 20: start(V1,V) = 0+ round(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 21: start(V1,V) = 0+ round(W1,X1):2
     [X1=1,W1=0,V1=0] 
* CE 22: start(V1,V) = 0+ round(W1,X1):3
     [X1=1,W1=1,V1=1] 
* CE 23: start(V1,V) = 0+ round(W1,X1):4
     [X1>=3,X1=W1+1,X1=V1+1] 
* CE 24: start(V1,V) = 0+ round(V1,V1):5
     [V1>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [23,24] --> Loop 16 
* CEs [18,19] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [20,21] --> Loop 19 

#### Loops of start/2 
* Loop 16: start(V1,V) [V1>=2] 
* Loop 17: start(V1,V) [V>=0,V1>=0] 
* Loop 18: start(V1,V) [V1=1] 
* Loop 19: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [19]
* [18]
* [17]
* [16]


### Merging Chains  start/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 
* [[16]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:round(V1,Out) -> [round(V1',Out')] 
1
#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:round(V1,Out) -> [round(V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of round(V1,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1=Out,V1>=2] 

* Chain [[11],9]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1+1=Out,V1>=2] 

* Chain [[11],8]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V1=Out,V1>=3] 

* Chain [10]: 1
  with precondition: [V1=0,Out=0] 

* Chain [9]: 1
  with precondition: [V1=0,Out=1] 

* Chain [8]: 1
  with precondition: [V1=1,Out=1] 


#### Cost of chains of f(V1,V,Out):
* Chain [15]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [14,15]: 2
  with precondition: [V1=1,V=0,Out=0] 

* Chain [13,15]: 1*s(3)+2
  Such that:s(3) =< V1+1

  with precondition: [Out=0,V1=V+1,V1>=2] 

* Chain [12,15]: 2*s(5)+2
  Such that:s(4) =< V1
s(5) =< s(4)

  with precondition: [Out=0,V+1=V1,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [19]: 1
  with precondition: [V1=0] 

* Chain [18]: 1
  with precondition: [V1=1] 

* Chain [17]: 1*s(10)+2*s(11)+2
  Such that:s(9) =< V+1
s(10) =< V+2
s(11) =< s(9)

  with precondition: [V1>=0,V>=0] 

* Chain [16]: 1*s(12)+2*s(14)+1
  Such that:s(13) =< V1
s(12) =< V1+1
s(14) =< s(13)

  with precondition: [V1>=2] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [19] with precondition: [V1=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [17] with precondition: [V1>=0,V>=0] 
    - Upper bound: 3*V+6 
    - Complexity: n 
* Chain [16] with precondition: [V1>=2] 
    - Upper bound: 3*V1+2 
    - Complexity: n 

### Maximum cost of start(V1,V): max([3*V1+1,nat(V+1)*2+1+nat(V+2)])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 26 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 24 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 83 ms.

