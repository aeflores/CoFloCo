
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [foldB/3,f/3,foldC/3]  
 Merged into foldBffoldC/3

#### Computed strongly connected components 
0. non_recursive  : [g/2]
2. non_recursive  : [start/2]
1. recursive [multiple] : [foldBffoldC/3,fun/3,fun1/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into g/2
2. SCC is partially evaluated into start/2
1. SCC is partially evaluated into foldBffoldC/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations g/2 
* CE 22 is refined into CE [23] 
* CE 21 is refined into CE [24] 
* CE 20 is refined into CE [25] 
* CE 19 is refined into CE [26] 
* CE 18 is refined into CE [27] 
* CE 17 is refined into CE [28] 


#### Refined cost equations g/2 
* CE 23: g(V,Out) = 1
     [Out=2,V=2] 
* CE 24: g(V,Out) = 1
     [Out=1,V=2] 
* CE 25: g(V,Out) = 1
     [Out=0,V=2] 
* CE 26: g(V,Out) = 1
     [Out=1,V=1] 
* CE 27: g(V,Out) = 1
     [Out=0,V=1] 
* CE 28: g(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of g/2 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of g/2 
* Loop 17: g(V,Out) [Out=2,V=2] 
* Loop 18: g(V,Out) [Out=1,V=2] 
* Loop 19: g(V,Out) [Out=0,V=2] 
* Loop 20: g(V,Out) [Out=1,V=1] 
* Loop 21: g(V,Out) [Out=0,V=1] 
* Loop 22: g(V,Out) [Out=0,V=0] 

### Ranking functions of CR g(V,Out) 

#### Partial ranking functions of CR g(V,Out) 


### Resulting Chains:g(V,Out) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  g/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 
* [[18]] --> 5 
* [[17]] --> 6 


### Specialization of cost equations foldBffoldC/3 
* CE 12 is refined into CE [29,30,31] 
* CE 16 is refined into CE [32] 
* CE 15 is refined into CE [33] 
* CE 11 is refined into CE [34] 
* CE 9 is refined into CE [35,36,37,38,39,40] 
* CE 14 is refined into CE [41] 
* CE 10 is refined into CE [42,43] 
* CE 13 is refined into CE [44,45,46] 


#### Refined cost equations foldBffoldC/3 
* CE 29: foldBffoldC(A,B,C) = 3+ g(D,E):1+ foldBffoldC(F,G,H)+ foldBffoldC(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=0,B=0] 
* CE 30: foldBffoldC(A,B,C) = 3+ g(D,E):2+ foldBffoldC(F,G,H)+ foldBffoldC(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=1,B=1] 
* CE 31: foldBffoldC(A,B,C) = 3+ g(D,E):4+ foldBffoldC(F,G,H)+ foldBffoldC(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=2,B=2] 
* CE 32: foldBffoldC(A,B,C) = 1+ foldBffoldC(A,D,E)+ foldBffoldC(E,F,C)
     [D>=0,A>=0,D+1=B,F=2] 
* CE 33: foldBffoldC(A,B,C) = 1+ foldBffoldC(A,D,E)+ foldBffoldC(E,F,C)
     [D>=0,A>=0,D+1=B,F=1] 
* CE 34: foldBffoldC(A,B,C) = 2+ g(D,E):6
     [A>=1,A+1=C,E=2,D=2,B=2] 
* CE 35: foldBffoldC(A,B,C) = 1+ g(D,E):1
     [A>=0,E=0,D=0,C=0,B=0] 
* CE 36: foldBffoldC(A,B,C) = 1+ g(D,E):2
     [A>=0,E=0,D=1,C=0,B=1] 
* CE 37: foldBffoldC(A,B,C) = 1+ g(D,E):3
     [A>=0,E=1,D=1,C=0,B=1] 
* CE 38: foldBffoldC(A,B,C) = 1+ g(D,E):4
     [A>=0,E=0,D=2,C=0,B=2] 
* CE 39: foldBffoldC(A,B,C) = 1+ g(D,E):5
     [A>=0,E=1,D=2,C=0,B=2] 
* CE 40: foldBffoldC(A,B,C) = 1+ g(D,E):6
     [A>=0,E=2,D=2,C=0,B=2] 
* CE 41: foldBffoldC(A,B,A) = 1
     [A>=0,B=0] 
* CE 42: foldBffoldC(A,B,C) = 2+ g(D,E):3+ foldBffoldC(A,F,C)
     [A>=1,F=0,E=1,D=1,B=1] 
* CE 43: foldBffoldC(A,B,C) = 2+ g(D,E):5+ foldBffoldC(A,F,C)
     [A>=1,F=0,E=1,D=2,B=2] 
* CE 44: foldBffoldC(A,B,C) = 2+ g(D,E):1+ foldBffoldC(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=0,C=0,B=0] 
* CE 45: foldBffoldC(A,B,C) = 2+ g(D,E):2+ foldBffoldC(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=1,C=0,B=1] 
* CE 46: foldBffoldC(A,B,C) = 2+ g(D,E):4+ foldBffoldC(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=2,C=0,B=2] 

### Cost equations --> "Loop" of foldBffoldC/3 
* CEs [43] --> Loop 23 
* CEs [46] --> Loop 24 
* CEs [42] --> Loop 25 
* CEs [45] --> Loop 26 
* CEs [44] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [38,39,40] --> Loop 29 
* CEs [36,37] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [32] --> Loop 33 
* CEs [33] --> Loop 34 
* CEs [31] --> Loop 35 
* CEs [30] --> Loop 36 
* CEs [29] --> Loop 37 

#### Loops of foldBffoldC/3 
* Loop 23: foldBffoldC(A,B,C)->  foldBffoldC(A,A',C)
                  [A>=1,A'=0,B=2] 
* Loop 24: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=2] 
* Loop 25: foldBffoldC(A,B,C)->  foldBffoldC(A,A',C)
                  [A>=1,A'=0,B=1] 
* Loop 26: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=1] 
* Loop 27: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=0] 
* Loop 28: foldBffoldC(A,B,C) [A>=1,A+1=C,B=2] 
* Loop 29: foldBffoldC(A,B,C) [A>=0,C=0,B=2] 
* Loop 30: foldBffoldC(A,B,C) [A>=0,C=0,B=1] 
* Loop 31: foldBffoldC(A,B,A) [A>=0,B=0] 
* Loop 32: foldBffoldC(A,B,C) [A>=0,C=0,B=0] 
* Loop 33: foldBffoldC(A,B,C)->  foldBffoldC(A,A',B')  foldBffoldC(B',A'2,C)
                  [B>=1,A>=0,B=A'+1,A'2=2] 
* Loop 34: foldBffoldC(A,B,C)->  foldBffoldC(A,A',B')  foldBffoldC(B',A'2,C)
                  [B>=1,A>=0,B=A'+1,A'2=1] 
* Loop 35: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')  foldBffoldC(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=2] 
* Loop 36: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')  foldBffoldC(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=1] 
* Loop 37: foldBffoldC(A,B,C)->  foldBffoldC(A',B',C')  foldBffoldC(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=0] 

### Ranking functions of CR foldBffoldC(A,B,C) 

#### Partial ranking functions of CR foldBffoldC(A,B,C) 
* Partial RF of phase [23,24,25,26,27,33,34,35,36,37]:
  - RF of loop [23:1]:
    B/2-1/2 depends on loops [24:1,26:1,27:1,33:2,35:1,35:2,36:1,36:2,37:1,37:2] 
  - RF of loop [24:1,35:1]:
    A+B-2 depends on loops [27:1,33:2,34:2,35:2,36:2,37:1,37:2] 
  - RF of loop [25:1,33:1,34:1]:
    B depends on loops [24:1,26:1,27:1,33:2,35:1,35:2,36:1,36:2,37:1,37:2] 


### Resulting Chains:foldBffoldC(A,B,C) 
* [multiple([23,24,25,26,27,33,34,35,36,37],[[],[32],[31],[30],[29],[28]])]...
* [32]
* [31]
* [30]
* [29]
* [28]


### Merging Chains  foldBffoldC/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29]] --> 4 
* [[28]] --> 5 
* [[multiple([23,24,25,26,27,33,34,35,36,37],[[],[32],[31],[30],[29],[28]])]] --> 6 


### Specialization of cost equations start/2 
* CE 4 is refined into CE [47] 
* CE 2 is refined into CE [48] 
* CE 3 is refined into CE [49,50,51,52,53,54] 
* CE 5 is refined into CE [55,56,57,58,59,60,61,62,63,64,65,66,67] 
* CE 6 is refined into CE [68,69,70,71,72,73] 
* CE 7 is refined into CE [74,75,76,77,78,79] 
* CE 8 is refined into CE [80,81,82,83,84,85] 


#### Refined cost equations start/2 
* CE 47: start(V,V1) = 1
     [V>=1,V1=2] 
* CE 48: start(V,V1) = 0
     [V>=0] 
* CE 49: start(V,V1) = 1+ foldBffoldC(V,W1,X1):1
     [V>=1,X1=0,W1=0] 
* CE 50: start(V,V1) = 1+ foldBffoldC(V,W1,V):2
     [V>=1,W1=0] 
* CE 51: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):3
     [W1>=1,W1+1=V,Y1=0,X1=1] 
* CE 52: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):4
     [W1>=1,W1+2=V,Y1=0,X1=2] 
* CE 53: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):5
     [Y1>=2,Y1=W1+1,Y1+1=V,X1=2] 
* CE 54: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):6
     [X1>=0,W1>=1,W1+X1=V] 
* CE 55: start(V,V1) = 2+ foldBffoldC(W1,X1,W1):2+ foldBffoldC(W1,Y1,Z1):1
     [W1>=2,W1=V+1,Z1=0,Y1=0,X1=0,V1=0] 
* CE 56: start(V,V1) = 2+ foldBffoldC(W1,X1,W1):2+ foldBffoldC(W1,Y1,W1):2
     [W1>=2,W1=V+1,Y1=0,X1=0,V1=0] 
* CE 57: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):2+ foldBffoldC(V,Z1,A2):3
     [V>=1,V+1=Y1,V+1=W1,A2=0,Z1=1,X1=0,V1=0] 
* CE 58: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):2+ foldBffoldC(Z1,A2,B2):4
     [Z1>=1,Z1+2=Y1,Z1+2=W1,Z1+1=V,B2=0,A2=2,X1=0,V1=0] 
* CE 59: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):2+ foldBffoldC(Z1,A2,V):5
     [V>=2,V=Z1+1,V+1=Y1,V+1=W1,A2=2,X1=0,V1=0] 
* CE 60: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):2+ foldBffoldC(Z1,A2,B2):6
     [Z1+A2>=2,A2>=0,Z1>=1,Z1+A2=Y1,Z1+A2=W1,Z1+A2=V+1,X1=0,V1=0] 
* CE 61: start(V,V1) = 2+ foldBffoldC(W1,X1,V):5+ foldBffoldC(V,Y1,Z1):1
     [V>=3,V=W1+1,Z1=0,Y1=0,X1=2,V1=0] 
* CE 62: start(V,V1) = 2+ foldBffoldC(W1,X1,V):5+ foldBffoldC(V,Y1,V):2
     [V>=3,V=W1+1,Y1=0,X1=2,V1=0] 
* CE 63: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):5+ foldBffoldC(W1,Z1,A2):3
     [W1>=2,W1+1=Y1,W1+1=V,A2=0,Z1=1,X1=2,V1=0] 
* CE 64: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):5+ foldBffoldC(Z1,A2,B2):4
     [Z1>=1,Z1+2=Y1,Z1+1=W1,Z1+2=V,B2=0,A2=2,X1=2,V1=0] 
* CE 65: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):5+ foldBffoldC(Z1,A2,W1):5
     [W1>=2,W1=Z1+1,W1+1=Y1,W1+1=V,A2=2,X1=2,V1=0] 
* CE 66: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):5+ foldBffoldC(Z1,A2,B2):6
     [Z1+A2>=3,A2>=0,Z1>=1,Z1+A2=Y1,Z1+A2=W1+1,Z1+A2=V,X1=2,V1=0] 
* CE 67: start(V,V1) = 2+ foldBffoldC(W1,X1,Y1):6
     [Y1>=Z1+1,Z1>=0,X1>=0,W1>=2,A2+Z1=Y1,W1+X1=V+1,V1=0] 
* CE 68: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):1
     [W1>=2,W1=V+1,Y1=0,X1=0,V1=0] 
* CE 69: start(V,V1) = 1+ foldBffoldC(W1,X1,W1):2
     [W1>=2,W1=V+1,X1=0,V1=0] 
* CE 70: start(V,V1) = 1+ foldBffoldC(V,W1,X1):3
     [V>=2,X1=0,W1=1,V1=0] 
* CE 71: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):4
     [W1>=2,W1+1=V,Y1=0,X1=2,V1=0] 
* CE 72: start(V,V1) = 1+ foldBffoldC(W1,X1,V):5
     [V>=3,V=W1+1,X1=2,V1=0] 
* CE 73: start(V,V1) = 1+ foldBffoldC(W1,X1,Y1):6
     [Y1>=0,X1>=0,W1>=2,W1+X1=V+1,V1=0] 
* CE 74: start(V,V1) = 0+ g(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 75: start(V,V1) = 0+ g(W1,X1):2
     [X1=0,W1=1,V=1] 
* CE 76: start(V,V1) = 0+ g(W1,X1):3
     [X1=1,W1=1,V=1] 
* CE 77: start(V,V1) = 0+ g(W1,X1):4
     [X1=0,W1=2,V=2] 
* CE 78: start(V,V1) = 0+ g(W1,X1):5
     [X1=1,W1=2,V=2] 
* CE 79: start(V,V1) = 0+ g(W1,X1):6
     [X1=2,W1=2,V=2] 
* CE 80: start(V,V1) = 0+ foldBffoldC(V,W1,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 81: start(V,V1) = 0+ foldBffoldC(V,W1,V):2
     [V>=0,W1=0,V1=0] 
* CE 82: start(V,V1) = 0+ foldBffoldC(V,W1,X1):3
     [V>=0,X1=0,W1=1,V1=1] 
* CE 83: start(V,V1) = 0+ foldBffoldC(V,W1,X1):4
     [V>=0,X1=0,W1=2,V1=2] 
* CE 84: start(V,V1) = 0+ foldBffoldC(W1,X1,Y1):5
     [Y1>=2,Y1=W1+1,Y1=V+1,X1=2,V1=2] 
* CE 85: start(V,V1) = 0+ foldBffoldC(V,V1,W1):6
     [V+V1>=1,V1>=0,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [54] --> Loop 38 
* CEs [60,66,67,73,85] --> Loop 39 
* CEs [47,83,84] --> Loop 40 
* CEs [82] --> Loop 41 
* CEs [55,56,57,58,59,61,62,63,64,65,68,69,70,71,72,80,81] --> Loop 42 
* CEs [77,78,79] --> Loop 43 
* CEs [75,76] --> Loop 44 
* CEs [48,49,50,51,52,53,74] --> Loop 45 

#### Loops of start/2 
* Loop 38: start(V,V1) [V>=1] 
* Loop 39: start(V,V1) [V+V1>=1,V1>=0,V>=0] 
* Loop 40: start(V,V1) [V>=0,V1=2] 
* Loop 41: start(V,V1) [V>=0,V1=1] 
* Loop 42: start(V,V1) [V>=0,V1=0] 
* Loop 43: start(V,V1) [V=2] 
* Loop 44: start(V,V1) [V=1] 
* Loop 45: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]...
* [38]...


### Merging Chains  start/2 into  External patterns of execution 
* [[44],[45]] --> 1 
* [[43]] --> 2 
* [[42]] --> 3 
* [[41]] --> 4 
* [[40]] --> 5 
* [[39]] --> 6 
* [[38]] --> 7 


Computing Bounds
=====================================

#### Cost of chains of g(V,Out):
* Chain [22]: 1
  with precondition: [V=0,Out=0] 

* Chain [21]: 1
  with precondition: [V=1,Out=0] 

* Chain [20]: 1
  with precondition: [V=1,Out=1] 

* Chain [19]: 1
  with precondition: [V=2,Out=0] 

* Chain [18]: 1
  with precondition: [V=2,Out=1] 

* Chain [17]: 1
  with precondition: [V=2,Out=2] 


#### Cost of loops [23,24,25,26,27,33,34,35,36,37] 

 * loop 23:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C')] 
3
 * loop 24:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C')] 
3
 * loop 25:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C')] 
3
 * loop 26:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C')] 
3
 * loop 27:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C')] 
3
 * loop 33:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C'),foldBffoldC(A'2,B'2,C'2)] 
1
 * loop 34:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C'),foldBffoldC(A'2,B'2,C'2)] 
1
 * loop 35:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C'),foldBffoldC(A'2,B'2,C'2)] 
4
 * loop 36:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C'),foldBffoldC(A'2,B'2,C'2)] 
4
 * loop 37:foldBffoldC(A,B,C) -> [foldBffoldC(A',B',C'),foldBffoldC(A'2,B'2,C'2)] 
4
#### Cost of phase [23,24,25,26,27,33,34,35,36,37]:foldBffoldC(A,B,C) -> [] 
39*it(23)+0
#### Cost of chains of foldBffoldC(A,B,C):
* Chain [multiple([23,24,25,26,27,33,34,35,36,37],[[],[32],[31],[30],[29],[28]])]...: 39*it(23)+0
  with precondition: [A+B>=1,B>=0,A>=0] 

* Chain [32]: 2
  with precondition: [B=0,C=0,A>=0] 

* Chain [31]: 1
  with precondition: [B=0,A=C,A>=0] 

* Chain [30]: 2
  with precondition: [B=1,C=0,A>=0] 

* Chain [29]: 2
  with precondition: [B=2,C=0,A>=0] 

* Chain [28]: 3
  with precondition: [B=2,A+1=C,A>=1] 


#### Cost of chains of start(V,V1):
* Chain [45]: 4
  with precondition: [V>=0] 

* Chain [44]: 1
  with precondition: [V=1] 

* Chain [43]: 1
  with precondition: [V=2] 

* Chain [42]: 8
  with precondition: [V1=0,V>=0] 

* Chain [41]: 2
  with precondition: [V1=1,V>=0] 

* Chain [40]: 3
  with precondition: [V1=2,V>=0] 

* Chain [39]...: 1*aux(104)+0
  with precondition: [V>=0,V1>=0,V+V1>=1] 

* Chain [38]...: 39*s(6)+1
  with precondition: [V>=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [45] with precondition: [V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [44] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43] with precondition: [V=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [42] with precondition: [V1=0,V>=0] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [41] with precondition: [V1=1,V>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [40] with precondition: [V1=2,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [39]... with precondition: [V>=0,V1>=0,V+V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 122 ms.
* Termination proved in 25 ms.
* Upper bounds computed in 325 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 298 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 564 ms.

