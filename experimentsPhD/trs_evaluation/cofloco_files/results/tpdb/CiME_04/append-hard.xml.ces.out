
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/2]
1. non_recursive  : [hd/2]
2. non_recursive  : [tl/2]
3. recursive  : [append/3,ifappend/4]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/2
1. SCC is partially evaluated into hd/2
2. SCC is partially evaluated into tl/2
3. SCC is partially evaluated into append/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/2 
* CE 17 is refined into CE [19] 
* CE 18 is refined into CE [20] 
* CE 16 is refined into CE [21] 


#### Refined cost equations fun/2 
* CE 19: fun(V,Out) = 1
     [V>=1,Out=1] 
* CE 20: fun(V,Out) = 0
     [V>=0,Out=0] 
* CE 21: fun(V,Out) = 1
     [Out=2,V=0] 

### Cost equations --> "Loop" of fun/2 
* CEs [19] --> Loop 13 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 

#### Loops of fun/2 
* Loop 13: fun(V,Out) [V>=1,Out=1] 
* Loop 14: fun(V,Out) [V>=0,Out=0] 
* Loop 15: fun(V,Out) [Out=2,V=0] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [15]
* [14]
* [13]


### Merging Chains  fun/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 


### Specialization of cost equations hd/2 
* CE 9 is refined into CE [22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations hd/2 
* CE 22: hd(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 23: hd(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of hd/2 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 

#### Loops of hd/2 
* Loop 16: hd(V,Out) [V>=Out+1,Out>=0] 
* Loop 17: hd(V,Out) [V>=0,Out=0] 

### Ranking functions of CR hd(V,Out) 

#### Partial ranking functions of CR hd(V,Out) 


### Resulting Chains:hd(V,Out) 
* [17]
* [16]


### Merging Chains  hd/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations tl/2 
* CE 11 is refined into CE [24] 
* CE 12 is refined into CE [25] 


#### Refined cost equations tl/2 
* CE 24: tl(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 25: tl(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tl/2 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of tl/2 
* Loop 18: tl(V,Out) [V>=Out+1,Out>=0] 
* Loop 19: tl(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tl(V,Out) 

#### Partial ranking functions of CR tl(V,Out) 


### Resulting Chains:tl(V,Out) 
* [19]
* [18]


### Merging Chains  tl/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations append/3 
* CE 15 is refined into CE [26] 
* CE 13 is refined into CE [27,28,29] 
* CE 14 is refined into CE [30,31,32,33] 


#### Refined cost equations append/3 
* CE 26: append(A,B,B) = 2+ fun(C,D):1
     [B>=0,D=2,C=0,A=0] 
* CE 27: append(V,V7,Out) = 1+ fun(W7,X7):1
     [V7>=0,X7=2,W7=0,Out=0,V=0] 
* CE 28: append(V,V7,Out) = 1+ fun(V,W7):2
     [V>=0,V7>=0,W7=0,Out=0] 
* CE 29: append(V,V7,Out) = 1+ fun(V,W7):3
     [V>=1,V7>=0,W7=1,Out=0] 
* CE 30: append(V,V7,Out) = 2+ fun(V,W7):3+ hd(V,X7):1+ tl(V,Y7):1+ append(Z7,V7,A8)
     [V>=1,V7>=0,A8+1=Out,Z7=0,Y7=0,X7=0,W7=1] 
* CE 31: append(V,V7,Out) = 2+ fun(V,W7):3+ hd(V,X7):1+ tl(V,Y7):2+ append(Y7,V7,Z7)
     [V>=Y7+1,Y7>=0,V7>=0,Z7+1=Out,X7=0,W7=1] 
* CE 32: append(V,V7,Out) = 2+ fun(V,W7):3+ hd(V,X7):2+ tl(V,Y7):1+ append(Z7,V7,A8)
     [V>=X7+1,X7>=0,V7>=0,X7+A8+1=Out,Z7=0,Y7=0,W7=1] 
* CE 33: append(V,V7,Out) = 2+ fun(V,W7):3+ hd(V,X7):2+ tl(V,Y7):2+ append(Y7,V7,Z7)
     [V>=Y7+1,V>=X7+1,Y7>=0,X7>=0,V7>=0,X7+Z7+1=Out,W7=1] 

### Cost equations --> "Loop" of append/3 
* CEs [31] --> Loop 20 
* CEs [30,32,33] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [27,28,29] --> Loop 23 

#### Loops of append/3 
* Loop 20: append(V,V7,Out)->  append(V',V7,Out')
                  [V>=V'+1,V'>=0,V7>=0,Out=Out'+1] 
* Loop 21: append(V,V7,Out)->  append(V',V7,Out')
                  [V+Out'>=Out,Out>=Out'+1,V>=V'+1,V'>=0,V7>=0] 
* Loop 22: append(A,B,B) [B>=0,A=0] 
* Loop 23: append(V,V7,Out) [V7>=0,V>=0,Out=0] 

### Ranking functions of CR append(V,V7,Out) 
* RF of phase [20,21]: [V]

#### Partial ranking functions of CR append(V,V7,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1,21:1]:
    V


### Resulting Chains:append(V,V7,Out) 
* [[20,21],23]
* [[20,21],22]
* [23]
* [22]


### Merging Chains  append/3 into  External patterns of execution 
* [[22]] --> 1 
* [[23]] --> 2 
* [[22,[20,21]],[23,[20,21]]] --> 3 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [34] 
* CE 2 is refined into CE [35] 
* CE 3 is refined into CE [36,37,38,39,40,41,42,43,44,45] 
* CE 5 is refined into CE [46,47,48] 
* CE 6 is refined into CE [49,50] 
* CE 7 is refined into CE [51,52] 
* CE 8 is refined into CE [53,54,55] 


#### Refined cost equations start/3 
* CE 34: start(V,V7,V10) = 1
     [V7>=0,V>=0,V10=2] 
* CE 35: start(V,V7,V10) = 0
     [V10>=0,V7>=0,V>=0] 
* CE 36: start(V,V7,V10) = 1+ hd(V,W10):1+ tl(V,X10):1+ append(Y10,V7,V7):1
     [V7>=0,V>=0,Y10=0,X10=0,W10=0,V10=1] 
* CE 37: start(V,V7,V10) = 1+ hd(V,W10):1+ tl(V,X10):1+ append(Y10,V7,Z10):2
     [V7>=0,V>=0,Z10=0,Y10=0,X10=0,W10=0,V10=1] 
* CE 38: start(V,V7,V10) = 1+ hd(V,W10):1+ tl(V,X10):2+ append(Y10,V7,V7):1
     [V7>=0,V>=1,Y10=0,X10=0,W10=0,V10=1] 
* CE 39: start(V,V7,V10) = 1+ hd(V,W10):1+ tl(V,X10):2+ append(X10,V7,Y10):2
     [V>=X10+1,V7>=0,X10>=0,Y10=0,W10=0,V10=1] 
* CE 40: start(V,V7,V10) = 1+ hd(V,W10):1+ tl(V,X10):2+ append(X10,V7,Y10):3
     [V>=X10+1,Y10>=1,V7>=0,X10>=1,W10=0,V10=1] 
* CE 41: start(V,V7,V10) = 1+ hd(V,W10):2+ tl(V,X10):1+ append(Y10,V7,V7):1
     [V>=W10+1,V7>=0,W10>=0,Y10=0,X10=0,V10=1] 
* CE 42: start(V,V7,V10) = 1+ hd(V,W10):2+ tl(V,X10):1+ append(Y10,V7,Z10):2
     [V>=W10+1,V7>=0,W10>=0,Z10=0,Y10=0,X10=0,V10=1] 
* CE 43: start(V,V7,V10) = 1+ hd(V,W10):2+ tl(V,X10):2+ append(Y10,V7,V7):1
     [V>=W10+1,V7>=0,W10>=0,Y10=0,X10=0,V10=1] 
* CE 44: start(V,V7,V10) = 1+ hd(V,W10):2+ tl(V,X10):2+ append(X10,V7,Y10):2
     [V>=X10+1,V>=W10+1,V7>=0,X10>=0,W10>=0,Y10=0,V10=1] 
* CE 45: start(V,V7,V10) = 1+ hd(V,W10):2+ tl(V,X10):2+ append(X10,V7,Y10):3
     [V>=X10+1,V>=W10+1,Y10>=1,V7>=0,X10>=1,W10>=0,V10=1] 
* CE 46: start(V,V7,V10) = 0+ fun(W10,X10):1
     [X10=2,W10=0,V=0] 
* CE 47: start(V,V7,V10) = 0+ fun(V,W10):2
     [V>=0,W10=0] 
* CE 48: start(V,V7,V10) = 0+ fun(V,W10):3
     [V>=1,W10=1] 
* CE 49: start(V,V7,V10) = 0+ hd(V,W10):1
     [V>=0,W10=0] 
* CE 50: start(V,V7,V10) = 0+ hd(V,W10):2
     [V>=W10+1,W10>=0] 
* CE 51: start(V,V7,V10) = 0+ tl(V,W10):1
     [V>=0,W10=0] 
* CE 52: start(V,V7,V10) = 0+ tl(V,W10):2
     [V>=W10+1,W10>=0] 
* CE 53: start(V,V7,V10) = 0+ append(W10,V7,V7):1
     [V7>=0,W10=0,V=0] 
* CE 54: start(V,V7,V10) = 0+ append(V,V7,W10):2
     [V7>=0,V>=0,W10=0] 
* CE 55: start(V,V7,V10) = 0+ append(V,V7,W10):3
     [W10>=1,V7>=0,V>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [34] --> Loop 24 
* CEs [36,37,38,39,40,41,42,43,44,45] --> Loop 25 
* CEs [35,46,47,48,49,50,51,52,53,54,55] --> Loop 26 

#### Loops of start/3 
* Loop 24: start(V,V7,V10) [V7>=0,V>=0,V10=2] 
* Loop 25: start(V,V7,V10) [V7>=0,V>=0,V10=1] 
* Loop 26: start(V,V7,V10) [V>=0] 

### Ranking functions of CR start(V,V7,V10) 

#### Partial ranking functions of CR start(V,V7,V10) 


### Resulting Chains:start(V,V7,V10) 
* [26]
* [25]
* [24]


### Merging Chains  start/3 into  External patterns of execution 
* [[25],[26]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of fun(V,Out):
* Chain [15]: 1
  with precondition: [V=0,Out=2] 

* Chain [14]: 0
  with precondition: [Out=0,V>=0] 

* Chain [13]: 1
  with precondition: [Out=1,V>=1] 


#### Cost of chains of hd(V,Out):
* Chain [17]: 0
  with precondition: [Out=0,V>=0] 

* Chain [16]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of tl(V,Out):
* Chain [19]: 0
  with precondition: [Out=0,V>=0] 

* Chain [18]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of loops [20,21] 

 * loop 20:append(V,V7,Out) -> [append(V',V7',Out')] 
4
 * loop 21:append(V,V7,Out) -> [append(V',V7',Out')] 
5
#### Cost of phase [20,21]:append(V,V7,Out) -> [append(V',V7',Out')] 
9*it(20)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(20) =< aux(1)
it(20) =< aux(2)

#### Cost of phase [20,21]:append(V,V7,Out) -> [append(V',V7',Out')] 
9*it(20)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(20) =< aux(1)
it(20) =< aux(2)

#### Cost of chains of append(V,V7,Out):
* Chain [[20,21],23]: 9*it(20)+2
  Such that:aux(3) =< V
it(20) =< aux(3)

  with precondition: [V>=1,V7>=0,Out>=1] 

* Chain [[20,21],22]: 9*it(20)+3
  Such that:aux(4) =< V
it(20) =< aux(4)

  with precondition: [V>=1,V7>=0,Out>=V7+1] 

* Chain [23]: 2
  with precondition: [Out=0,V>=0,V7>=0] 

* Chain [22]: 3
  with precondition: [V=0,V7=Out,V7>=0] 


#### Cost of chains of start(V,V7,V10):
* Chain [26]: 18*s(6)+3
  Such that:s(5) =< V
s(6) =< s(5)

  with precondition: [V>=0] 

* Chain [25]: 36*s(8)+6
  Such that:aux(6) =< V
s(8) =< aux(6)

  with precondition: [V10=1,V>=0,V7>=0] 

* Chain [24]: 1
  with precondition: [V10=2,V>=0,V7>=0] 


Closed-form bounds of start(V,V7,V10): 
-------------------------------------
* Chain [26] with precondition: [V>=0] 
    - Upper bound: 18*V+3 
    - Complexity: n 
* Chain [25] with precondition: [V10=1,V>=0,V7>=0] 
    - Upper bound: 36*V+6 
    - Complexity: n 
* Chain [24] with precondition: [V10=2,V>=0,V7>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V7,V10): 36*V+6 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 45 ms.
* Invariants computed in 47 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 193 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 104 ms.
   - Equation cost structures 67 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 453 ms.

