
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [u11/2]
1. non_recursive  : [u22/2]
2. recursive [non_tail,multiple] : [fun/3,u21/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into u11/2
1. SCC is partially evaluated into u22/2
2. SCC is partially evaluated into fun/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations u11/2 
* CE 13 is refined into CE [15] 
* CE 14 is refined into CE [16] 


#### Refined cost equations u11/2 
* CE 15: u11(A,A) = 1
     [A>=1] 
* CE 16: u11(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of u11/2 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 

#### Loops of u11/2 
* Loop 10: u11(A,A) [A>=1] 
* Loop 11: u11(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR u11(V1,Out) 

#### Partial ranking functions of CR u11(V1,Out) 


### Resulting Chains:u11(V1,Out) 
* [11]
* [10]


### Merging Chains  u11/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations u22/2 
* CE 11 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations u22/2 
* CE 17: u22(A,A) = 1
     [A>=1] 
* CE 18: u22(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of u22/2 
* CEs [17] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of u22/2 
* Loop 12: u22(A,A) [A>=1] 
* Loop 13: u22(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR u22(V1,Out) 

#### Partial ranking functions of CR u22(V1,Out) 


### Resulting Chains:u22(V1,Out) 
* [13]
* [12]


### Merging Chains  u22/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations fun/3 
* CE 7 is refined into CE [19] 
* CE 10 is refined into CE [20,21] 
* CE 9 is refined into CE [22] 
* CE 8 is refined into CE [23,24] 


#### Refined cost equations fun/3 
* CE 19: fun(V1,V,Out) = 1+ fun(V1,W1,X1)
     [X1>=0,W1>=0,V1>=1,W1+1=V,Out=0] 
* CE 20: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ u11(Y1,Z1):1
     [W1>=0,Y1>=0,W1+1=V1,X1=1,Z1=0,Out=0,V=0] 
* CE 21: fun(V1,V,Out) = 1+ fun(W1,X1,Out)+ u11(Out,Out):2
     [W1>=0,Out>=1,W1+1=V1,X1=1,V=0] 
* CE 22: fun(V1,V,Out) = 1
     [V>=0,V+2=Out,V1=0] 
* CE 23: fun(V1,V,Out) = 2+ fun(W1,X1,Y1)+ fun(Z1,A2,B2)+ u22(B2,C2):1
     [A2>=0,Z1>=0,X1>=0,B2>=0,A2+1=Y1,Z1+1=W1,X1+1=V,Z1+1=V1,C2=0,Out=0] 
* CE 24: fun(V1,V,Out) = 2+ fun(W1,X1,Y1)+ fun(Z1,A2,Out)+ u22(Out,Out):2
     [A2>=0,Z1>=0,X1>=0,Out>=1,A2+1=Y1,Z1+1=W1,X1+1=V,Z1+1=V1] 

### Cost equations --> "Loop" of fun/3 
* CEs [24] --> Loop 14 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of fun/3 
* Loop 14: fun(V1,V,Out)->  fun(V1,V',Out')  fun(V1'2,V'2,Out)
                  [Out'>=1,Out>=1,V>=1,V1>=1,Out'=V'2+1,V1=V1'2+1,V=V'+1] 
* Loop 15: fun(V1,V,Out)->  fun(V1,V',Out')  fun(V1'2,V'2,Out'2)
                  [Out'2>=0,Out'>=1,V>=1,V1>=1,Out'=V'2+1,V1=V1'2+1,V=V'+1,Out=0] 
* Loop 16: fun(V1,V,Out) [V>=0,V+2=Out,V1=0] 
* Loop 17: fun(V1,V,Out)->  fun(V1,V',Out')
                  [Out'>=0,V>=1,V1>=1,V=V'+1,Out=0] 
* Loop 18: fun(V1,V,Out)->  fun(V1',V',Out)
                  [Out>=1,V1>=1,V1=V1'+1,V'=1,V=0] 
* Loop 19: fun(V1,V,Out)->  fun(V1',V',Out')
                  [Out'>=0,V1>=1,V1=V1'+1,V'=1,Out=0,V=0] 

### Ranking functions of CR fun(V1,V,Out) 

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [14,18]:
  - RF of loop [14:1]:
    V depends on loops [14:2,18:1] 
  - RF of loop [14:2,18:1]:
    V1
  - RF of loop [18:1]:
    -V+1 depends on loops [14:1,14:2] 
* Partial RF of phase [15,17,19]:
  - RF of loop [15:1,17:1]:
    V depends on loops [15:2,19:1] 
  - RF of loop [15:2,19:1]:
    V1
  - RF of loop [19:1]:
    -V+1 depends on loops [15:1,15:2,17:1] 


### Resulting Chains:fun(V1,V,Out) 
* [16]
* [multiple([15,17,19],[[multiple([14,18],[[16]])],[16]])]
* [multiple([14,18],[[16]])]


### Merging Chains  fun/3 into  External patterns of execution 
* [[16]] --> 1 
* [[multiple([15,17,19],[[multiple([14,18],[[16]])],[16]])]] --> 2 
* [[multiple([14,18],[[16]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [25] 
* CE 3 is refined into CE [26,27,28,29,30] 
* CE 4 is refined into CE [31,32,33] 
* CE 5 is refined into CE [34,35] 
* CE 6 is refined into CE [36,37] 


#### Refined cost equations start/2 
* CE 25: start(V1,V) = 0
     [V>=0,V1>=0] 
* CE 26: start(V1,V) = 1+ fun(W1,X1,Y1):1+ u22(Y1,Z1):1
     [Y1>=2,Y1=X1+2,Y1=V1+1,Z1=0,W1=0,V=0] 
* CE 27: start(V1,V) = 1+ fun(W1,X1,Y1):1+ u22(Y1,Y1):2
     [Y1>=2,Y1=X1+2,Y1=V1+1,W1=0,V=0] 
* CE 28: start(V1,V) = 1+ fun(V,W1,X1):2+ u22(Y1,Z1):1
     [W1>=0,V>=1,W1+1=V1,Z1=0,Y1=0,X1=0] 
* CE 29: start(V1,V) = 1+ fun(V,W1,X1):3+ u22(X1,Y1):1
     [X1>=V+W1+2,W1>=0,V>=1,W1+1=V1,Y1=0] 
* CE 30: start(V1,V) = 1+ fun(V,W1,X1):3+ u22(X1,X1):2
     [X1>=V+W1+2,W1>=0,V>=1,W1+1=V1] 
* CE 31: start(V1,V) = 0+ fun(W1,X1,Y1):1
     [Y1>=2,Y1=X1+2,Y1=V+2,W1=0,V1=0] 
* CE 32: start(V1,V) = 0+ fun(V1,V,W1):2
     [V>=0,V1>=1,W1=0] 
* CE 33: start(V1,V) = 0+ fun(V1,V,W1):3
     [W1>=V1+V+2,V>=0,V1>=1] 
* CE 34: start(V1,V) = 0+ u11(V1,W1):1
     [V1>=0,W1=0] 
* CE 35: start(V1,V) = 0+ u11(V1,V1):2
     [V1>=1] 
* CE 36: start(V1,V) = 0+ u22(V1,W1):1
     [V1>=0,W1=0] 
* CE 37: start(V1,V) = 0+ u22(V1,V1):2
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [26,27] --> Loop 20 
* CEs [25,28,29,30,31,32,33,34,35,36,37] --> Loop 21 

#### Loops of start/2 
* Loop 20: start(V1,V) [V1>=1,V=0] 
* Loop 21: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [21]
* [20]


### Merging Chains  start/2 into  External patterns of execution 
* [[20],[21]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of u11(V1,Out):
* Chain [11]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [10]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of u22(V1,Out):
* Chain [13]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [12]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of loops [14,18] 

 * loop 14:fun(V1,V,Out) -> [fun(V1',V',Out'),fun(V1'2,V'2,Out'2)] 
3
 * loop 18:fun(V1,V,Out) -> [fun(V1',V',Out')] 
2
#### Cost of phase [14,18]:fun(V1,V,Out) -> [] 
3*it(14)+2*it(18)+1*it([16])+0
  Such that:aux(21) =< -V+1
it(18) =< aux(21)

#### Cost of loops [15,17,19] 

 * loop 15:fun(V1,V,Out) -> [fun(V1',V',Out'),fun(V1'2,V'2,Out'2)] 
2
 * loop 17:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
 * loop 19:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [15,17,19]:fun(V1,V,Out) -> [] 
6*it(15)+1*it(17)+1*it(19)+1*it([16])+2*s(2)+0
#### Cost of chains of fun(V1,V,Out):
* Chain [16]: 1
  with precondition: [V1=0,V+2=Out,V>=0] 

* Chain [multiple([15,17,19],[[multiple([14,18],[[16]])],[16]])]: 6*it(15)+1*it(17)+1*it(19)+1*it([16])+2*s(2)+0
  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [multiple([14,18],[[16]])]: 3*it(14)+2*it(18)+1*it([16])+0
  Such that:aux(21) =< -V+1
it(18) =< aux(21)

  with precondition: [V1>=1,V>=0,Out>=V+V1+2] 


#### Cost of chains of start(V1,V):
* Chain [21]: 34*s(5)+4*s(11)+2*s(24)+2
  Such that:s(23) =< -V+1
aux(55) =< -V1+2
s(11) =< aux(55)
s(24) =< s(23)

  with precondition: [V1>=0] 

* Chain [20]: 3
  with precondition: [V=0,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [21] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20] with precondition: [V=0,V1>=1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 92 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 27 ms.
* Refinement performed in 169 ms.
* Termination proved in 39 ms.
* Upper bounds computed in 428 ms.
   - Equation cost structures 52 ms.
   - Phase cost structures 389 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 822 ms.

