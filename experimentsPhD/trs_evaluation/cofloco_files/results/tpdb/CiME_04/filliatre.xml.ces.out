
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [f/3,foldf/3]  
 Merged into ffoldf/3

#### Computed strongly connected components 
0. non_recursive  : [g/2]
2. non_recursive  : [start/2]
1. recursive [multiple] : [ffoldf/3,fun/3,fun1/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into g/2
2. SCC is partially evaluated into start/2
1. SCC is partially evaluated into ffoldf/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations g/2 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 19 is refined into CE [24] 
* CE 18 is refined into CE [25] 
* CE 17 is refined into CE [26] 
* CE 16 is refined into CE [27] 


#### Refined cost equations g/2 
* CE 22: g(V,Out) = 1
     [Out=2,V=2] 
* CE 23: g(V,Out) = 1
     [Out=1,V=2] 
* CE 24: g(V,Out) = 1
     [Out=0,V=2] 
* CE 25: g(V,Out) = 1
     [Out=1,V=1] 
* CE 26: g(V,Out) = 1
     [Out=0,V=1] 
* CE 27: g(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of g/2 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 

#### Loops of g/2 
* Loop 16: g(V,Out) [Out=2,V=2] 
* Loop 17: g(V,Out) [Out=1,V=2] 
* Loop 18: g(V,Out) [Out=0,V=2] 
* Loop 19: g(V,Out) [Out=1,V=1] 
* Loop 20: g(V,Out) [Out=0,V=1] 
* Loop 21: g(V,Out) [Out=0,V=0] 

### Ranking functions of CR g(V,Out) 

#### Partial ranking functions of CR g(V,Out) 


### Resulting Chains:g(V,Out) 
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]


### Merging Chains  g/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 
* [[18]] --> 4 
* [[17]] --> 5 
* [[16]] --> 6 


### Specialization of cost equations ffoldf/3 
* CE 12 is refined into CE [28,29,30] 
* CE 15 is refined into CE [31] 
* CE 11 is refined into CE [32] 
* CE 9 is refined into CE [33,34,35,36,37,38] 
* CE 14 is refined into CE [39] 
* CE 10 is refined into CE [40,41] 
* CE 13 is refined into CE [42,43,44] 


#### Refined cost equations ffoldf/3 
* CE 28: ffoldf(A,B,C) = 3+ g(D,E):1+ ffoldf(F,G,H)+ ffoldf(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=0,B=0] 
* CE 29: ffoldf(A,B,C) = 3+ g(D,E):2+ ffoldf(F,G,H)+ ffoldf(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=1,B=1] 
* CE 30: ffoldf(A,B,C) = 3+ g(D,E):4+ ffoldf(F,G,H)+ ffoldf(I,J,C)
     [H>=J+1,A>=G+1,J>=0,G>=0,I+J=H,F+G=A+1,E=0,D=2,B=2] 
* CE 31: ffoldf(A,B,C) = 1+ ffoldf(A,D,E)+ ffoldf(E,F,C)
     [F>=0,D>=0,A>=0,D+F+1=B] 
* CE 32: ffoldf(A,B,C) = 2+ g(D,E):6
     [A>=1,A+3=C,E=2,D=2,B=2] 
* CE 33: ffoldf(A,B,C) = 1+ g(D,E):1
     [A>=0,E=0,D=0,C=0,B=0] 
* CE 34: ffoldf(A,B,C) = 1+ g(D,E):2
     [A>=0,E=0,D=1,C=0,B=1] 
* CE 35: ffoldf(A,B,C) = 1+ g(D,E):3
     [A>=0,E=1,D=1,C=0,B=1] 
* CE 36: ffoldf(A,B,C) = 1+ g(D,E):4
     [A>=0,E=0,D=2,C=0,B=2] 
* CE 37: ffoldf(A,B,C) = 1+ g(D,E):5
     [A>=0,E=1,D=2,C=0,B=2] 
* CE 38: ffoldf(A,B,C) = 1+ g(D,E):6
     [A>=0,E=2,D=2,C=0,B=2] 
* CE 39: ffoldf(A,B,A) = 1
     [A>=0,B=0] 
* CE 40: ffoldf(A,B,C) = 2+ g(D,E):3+ ffoldf(A,F,C)
     [A>=1,F=0,E=1,D=1,B=1] 
* CE 41: ffoldf(A,B,C) = 2+ g(D,E):5+ ffoldf(A,F,C)
     [A>=1,F=0,E=1,D=2,B=2] 
* CE 42: ffoldf(A,B,C) = 2+ g(D,E):1+ ffoldf(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=0,C=0,B=0] 
* CE 43: ffoldf(A,B,C) = 2+ g(D,E):2+ ffoldf(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=1,C=0,B=1] 
* CE 44: ffoldf(A,B,C) = 2+ g(D,E):4+ ffoldf(F,G,H)
     [A>=G+1,H>=0,G>=0,F+G=A+1,E=0,D=2,C=0,B=2] 

### Cost equations --> "Loop" of ffoldf/3 
* CEs [41] --> Loop 22 
* CEs [44] --> Loop 23 
* CEs [40] --> Loop 24 
* CEs [43] --> Loop 25 
* CEs [42] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [36,37,38] --> Loop 28 
* CEs [34,35] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [31] --> Loop 32 
* CEs [30] --> Loop 33 
* CEs [29] --> Loop 34 
* CEs [28] --> Loop 35 

#### Loops of ffoldf/3 
* Loop 22: ffoldf(A,B,C)->  ffoldf(A,A',C)
                  [A>=1,A'=0,B=2] 
* Loop 23: ffoldf(A,B,C)->  ffoldf(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=2] 
* Loop 24: ffoldf(A,B,C)->  ffoldf(A,A',C)
                  [A>=1,A'=0,B=1] 
* Loop 25: ffoldf(A,B,C)->  ffoldf(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=1] 
* Loop 26: ffoldf(A,B,C)->  ffoldf(A',B',C')
                  [A+1>=A',C'>=0,A'>=2,A'+B'=A+1,C=0,B=0] 
* Loop 27: ffoldf(A,B,C) [A>=1,A+3=C,B=2] 
* Loop 28: ffoldf(A,B,C) [A>=0,C=0,B=2] 
* Loop 29: ffoldf(A,B,C) [A>=0,C=0,B=1] 
* Loop 30: ffoldf(A,B,A) [A>=0,B=0] 
* Loop 31: ffoldf(A,B,C) [A>=0,C=0,B=0] 
* Loop 32: ffoldf(A,B,C)->  ffoldf(A,A',B')  ffoldf(B',A'2,C)
                  [B>=A'+1,A'>=0,A>=0,A'+A'2+1=B] 
* Loop 33: ffoldf(A,B,C)->  ffoldf(A',B',C')  ffoldf(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=2] 
* Loop 34: ffoldf(A,B,C)->  ffoldf(A',B',C')  ffoldf(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=1] 
* Loop 35: ffoldf(A,B,C)->  ffoldf(A',B',C')  ffoldf(A'2,B'2,C)
                  [C'>=A'2,A+1>=A',A'2>=1,A'>=2,A'2+B'2=C',A'+B'=A+1,B=0] 

### Ranking functions of CR ffoldf(A,B,C) 

#### Partial ranking functions of CR ffoldf(A,B,C) 
* Partial RF of phase [22,23,24,25,26,32,33,34,35]:
  - RF of loop [22:1]:
    B/2-1/2 depends on loops [23:1,25:1,26:1,33:1,33:2,34:1,34:2,35:1,35:2] 
  - RF of loop [23:1,33:1]:
    A+B-2 depends on loops [26:1,32:2,33:2,34:2,35:1,35:2] 
  - RF of loop [24:1,32:1,32:2]:
    B depends on loops [23:1,25:1,26:1,33:1,33:2,34:1,34:2,35:1,35:2] 


### Resulting Chains:ffoldf(A,B,C) 
* [multiple([22,23,24,25,26,32,33,34,35],[[],[31],[30],[29],[28],[27]])]...
* [31]
* [30]
* [29]
* [28]
* [27]


### Merging Chains  ffoldf/3 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 
* [[27]] --> 5 
* [[multiple([22,23,24,25,26,32,33,34,35],[[],[31],[30],[29],[28],[27]])]] --> 6 


### Specialization of cost equations start/2 
* CE 4 is refined into CE [45] 
* CE 2 is refined into CE [46] 
* CE 3 is refined into CE [47,48,49,50,51,52] 
* CE 5 is refined into CE [53,54,55,56,57,58,59,60,61,62,63,64,65] 
* CE 6 is refined into CE [66,67,68,69,70,71] 
* CE 7 is refined into CE [72,73,74,75,76,77] 
* CE 8 is refined into CE [78,79,80,81,82,83] 


#### Refined cost equations start/2 
* CE 45: start(V,V1) = 1
     [V>=1,V1=2] 
* CE 46: start(V,V1) = 0
     [V>=0] 
* CE 47: start(V,V1) = 1+ ffoldf(V,W1,X1):1
     [V>=1,X1=0,W1=0] 
* CE 48: start(V,V1) = 1+ ffoldf(V,W1,V):2
     [V>=1,W1=0] 
* CE 49: start(V,V1) = 1+ ffoldf(W1,X1,Y1):3
     [W1>=1,W1+1=V,Y1=0,X1=1] 
* CE 50: start(V,V1) = 1+ ffoldf(W1,X1,Y1):4
     [W1>=1,W1+2=V,Y1=0,X1=2] 
* CE 51: start(V,V1) = 1+ ffoldf(W1,X1,Y1):5
     [Y1>=4,Y1=W1+3,Y1=V+1,X1=2] 
* CE 52: start(V,V1) = 1+ ffoldf(W1,X1,Y1):6
     [X1>=0,W1>=1,W1+X1=V] 
* CE 53: start(V,V1) = 2+ ffoldf(W1,X1,W1):2+ ffoldf(W1,Y1,Z1):1
     [W1>=2,W1=V+1,Z1=0,Y1=0,X1=0,V1=0] 
* CE 54: start(V,V1) = 2+ ffoldf(W1,X1,W1):2+ ffoldf(W1,Y1,W1):2
     [W1>=2,W1=V+1,Y1=0,X1=0,V1=0] 
* CE 55: start(V,V1) = 2+ ffoldf(W1,X1,Y1):2+ ffoldf(V,Z1,A2):3
     [V>=1,V+1=Y1,V+1=W1,A2=0,Z1=1,X1=0,V1=0] 
* CE 56: start(V,V1) = 2+ ffoldf(W1,X1,Y1):2+ ffoldf(Z1,A2,B2):4
     [Z1>=1,Z1+2=Y1,Z1+2=W1,Z1+1=V,B2=0,A2=2,X1=0,V1=0] 
* CE 57: start(V,V1) = 2+ ffoldf(W1,X1,Y1):2+ ffoldf(Z1,A2,B2):5
     [B2>=4,B2=Z1+3,B2=Y1+1,B2=W1+1,B2=V+2,A2=2,X1=0,V1=0] 
* CE 58: start(V,V1) = 2+ ffoldf(W1,X1,Y1):2+ ffoldf(Z1,A2,B2):6
     [Z1+A2>=2,A2>=0,Z1>=1,Z1+A2=Y1,Z1+A2=W1,Z1+A2=V+1,X1=0,V1=0] 
* CE 59: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(Y1,Z1,A2):1
     [Y1>=5,Y1=W1+3,Y1=V+2,A2=0,Z1=0,X1=2,V1=0] 
* CE 60: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(Y1,Z1,Y1):2
     [Y1>=5,Y1=W1+3,Y1=V+2,Z1=0,X1=2,V1=0] 
* CE 61: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(Z1,A2,B2):3
     [Z1>=4,Z1+1=Y1,Z1=W1+2,Z1=V+1,B2=0,A2=1,X1=2,V1=0] 
* CE 62: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(V,Z1,A2):4
     [V>=3,V+2=Y1,V=W1+1,A2=0,Z1=2,X1=2,V1=0] 
* CE 63: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(Z1,A2,B2):5
     [B2>=6,B2=Z1+3,B2=Y1+1,B2=W1+4,B2=V+3,A2=2,X1=2,V1=0] 
* CE 64: start(V,V1) = 2+ ffoldf(W1,X1,Y1):5+ ffoldf(Z1,A2,B2):6
     [Z1+A2>=5,A2>=0,Z1>=1,Z1+A2=Y1,Z1+A2=W1+3,Z1+A2=V+2,X1=2,V1=0] 
* CE 65: start(V,V1) = 2+ ffoldf(W1,X1,Y1):6
     [Y1>=Z1+1,Z1>=0,X1>=0,W1>=2,A2+Z1=Y1,W1+X1=V+1,V1=0] 
* CE 66: start(V,V1) = 1+ ffoldf(W1,X1,Y1):1
     [W1>=2,W1=V+1,Y1=0,X1=0,V1=0] 
* CE 67: start(V,V1) = 1+ ffoldf(W1,X1,W1):2
     [W1>=2,W1=V+1,X1=0,V1=0] 
* CE 68: start(V,V1) = 1+ ffoldf(V,W1,X1):3
     [V>=2,X1=0,W1=1,V1=0] 
* CE 69: start(V,V1) = 1+ ffoldf(W1,X1,Y1):4
     [W1>=2,W1+1=V,Y1=0,X1=2,V1=0] 
* CE 70: start(V,V1) = 1+ ffoldf(W1,X1,Y1):5
     [Y1>=5,Y1=W1+3,Y1=V+2,X1=2,V1=0] 
* CE 71: start(V,V1) = 1+ ffoldf(W1,X1,Y1):6
     [Y1>=0,X1>=0,W1>=2,W1+X1=V+1,V1=0] 
* CE 72: start(V,V1) = 0+ g(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 73: start(V,V1) = 0+ g(W1,X1):2
     [X1=0,W1=1,V=1] 
* CE 74: start(V,V1) = 0+ g(W1,X1):3
     [X1=1,W1=1,V=1] 
* CE 75: start(V,V1) = 0+ g(W1,X1):4
     [X1=0,W1=2,V=2] 
* CE 76: start(V,V1) = 0+ g(W1,X1):5
     [X1=1,W1=2,V=2] 
* CE 77: start(V,V1) = 0+ g(W1,X1):6
     [X1=2,W1=2,V=2] 
* CE 78: start(V,V1) = 0+ ffoldf(V,W1,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 79: start(V,V1) = 0+ ffoldf(V,W1,V):2
     [V>=0,W1=0,V1=0] 
* CE 80: start(V,V1) = 0+ ffoldf(V,W1,X1):3
     [V>=0,X1=0,W1=1,V1=1] 
* CE 81: start(V,V1) = 0+ ffoldf(V,W1,X1):4
     [V>=0,X1=0,W1=2,V1=2] 
* CE 82: start(V,V1) = 0+ ffoldf(W1,X1,Y1):5
     [Y1>=4,Y1=W1+3,Y1=V+3,X1=2,V1=2] 
* CE 83: start(V,V1) = 0+ ffoldf(V,V1,W1):6
     [V+V1>=1,V1>=0,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [52] --> Loop 36 
* CEs [58,64,65,71,83] --> Loop 37 
* CEs [45,81,82] --> Loop 38 
* CEs [80] --> Loop 39 
* CEs [53,54,55,56,57,59,60,61,62,63,66,67,68,69,70,78,79] --> Loop 40 
* CEs [75,76,77] --> Loop 41 
* CEs [73,74] --> Loop 42 
* CEs [46,47,48,49,50,51,72] --> Loop 43 

#### Loops of start/2 
* Loop 36: start(V,V1) [V>=1] 
* Loop 37: start(V,V1) [V+V1>=1,V1>=0,V>=0] 
* Loop 38: start(V,V1) [V>=0,V1=2] 
* Loop 39: start(V,V1) [V>=0,V1=1] 
* Loop 40: start(V,V1) [V>=0,V1=0] 
* Loop 41: start(V,V1) [V=2] 
* Loop 42: start(V,V1) [V=1] 
* Loop 43: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]...
* [36]...


### Merging Chains  start/2 into  External patterns of execution 
* [[42],[43]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 
* [[39]] --> 4 
* [[38]] --> 5 
* [[37]] --> 6 
* [[36]] --> 7 


Computing Bounds
=====================================

#### Cost of chains of g(V,Out):
* Chain [21]: 1
  with precondition: [V=0,Out=0] 

* Chain [20]: 1
  with precondition: [V=1,Out=0] 

* Chain [19]: 1
  with precondition: [V=1,Out=1] 

* Chain [18]: 1
  with precondition: [V=2,Out=0] 

* Chain [17]: 1
  with precondition: [V=2,Out=1] 

* Chain [16]: 1
  with precondition: [V=2,Out=2] 


#### Cost of loops [22,23,24,25,26,32,33,34,35] 

 * loop 22:ffoldf(A,B,C) -> [ffoldf(A',B',C')] 
3
 * loop 23:ffoldf(A,B,C) -> [ffoldf(A',B',C')] 
3
 * loop 24:ffoldf(A,B,C) -> [ffoldf(A',B',C')] 
3
 * loop 25:ffoldf(A,B,C) -> [ffoldf(A',B',C')] 
3
 * loop 26:ffoldf(A,B,C) -> [ffoldf(A',B',C')] 
3
 * loop 32:ffoldf(A,B,C) -> [ffoldf(A',B',C'),ffoldf(A'2,B'2,C'2)] 
1
 * loop 33:ffoldf(A,B,C) -> [ffoldf(A',B',C'),ffoldf(A'2,B'2,C'2)] 
4
 * loop 34:ffoldf(A,B,C) -> [ffoldf(A',B',C'),ffoldf(A'2,B'2,C'2)] 
4
 * loop 35:ffoldf(A,B,C) -> [ffoldf(A',B',C'),ffoldf(A'2,B'2,C'2)] 
4
#### Cost of phase [22,23,24,25,26,32,33,34,35]:ffoldf(A,B,C) -> [] 
38*it(22)+0
#### Cost of chains of ffoldf(A,B,C):
* Chain [multiple([22,23,24,25,26,32,33,34,35],[[],[31],[30],[29],[28],[27]])]...: 38*it(22)+0
  with precondition: [A+B>=1,B>=0,A>=0] 

* Chain [31]: 2
  with precondition: [B=0,C=0,A>=0] 

* Chain [30]: 1
  with precondition: [B=0,A=C,A>=0] 

* Chain [29]: 2
  with precondition: [B=1,C=0,A>=0] 

* Chain [28]: 2
  with precondition: [B=2,C=0,A>=0] 

* Chain [27]: 3
  with precondition: [B=2,A+3=C,A>=1] 


#### Cost of chains of start(V,V1):
* Chain [43]: 4
  with precondition: [V>=0] 

* Chain [42]: 1
  with precondition: [V=1] 

* Chain [41]: 1
  with precondition: [V=2] 

* Chain [40]: 8
  with precondition: [V1=0,V>=0] 

* Chain [39]: 2
  with precondition: [V1=1,V>=0] 

* Chain [38]: 3
  with precondition: [V1=2,V>=0] 

* Chain [37]...: 1*aux(98)+0
  with precondition: [V>=0,V1>=0,V+V1>=1] 

* Chain [36]...: 38*s(6)+1
  with precondition: [V>=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [43] with precondition: [V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [42] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [41] with precondition: [V=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [40] with precondition: [V1=0,V>=0] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [39] with precondition: [V1=1,V>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [38] with precondition: [V1=2,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [37]... with precondition: [V>=0,V1>=0,V+V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 87 ms.
* Invariants computed in 98 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 25 ms.
* Refinement performed in 372 ms.
* Termination proved in 66 ms.
* Upper bounds computed in 884 ms.
   - Equation cost structures 103 ms.
   - Phase cost structures 797 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 1596 ms.

