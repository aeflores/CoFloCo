
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [d/3]
1. non_recursive  : [fun/2]
2. non_recursive  : [fun1/2]
3. non_recursive  : [fun4/2]
4. non_recursive  : [fun6/2]
5. recursive  : [gt/3]
6. non_recursive  : [fun5/4]
7. recursive  : [fun2/4,fun3/4,quot/3]
8. non_recursive  : [fun7/3]
9. recursive  : [fun8/5,fun9/4,gcd/3]
10. non_recursive  : [lt/3]
11. non_recursive  : [p/2]
12. recursive  : [plus/3]
13. recursive [non_tail] : [times/3]
14. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into d/3
1. SCC is partially evaluated into fun/2
2. SCC is partially evaluated into fun1/2
3. SCC is partially evaluated into fun4/2
4. SCC is partially evaluated into fun6/2
5. SCC is partially evaluated into gt/3
6. SCC is partially evaluated into fun5/4
7. SCC is partially evaluated into quot/3
8. SCC is partially evaluated into fun7/3
9. SCC is partially evaluated into gcd/3
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into p/2
12. SCC is partially evaluated into plus/3
13. SCC is partially evaluated into times/3
14. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations d/3 
* CE 29 is refined into CE [61] 
* CE 27 is refined into CE [62] 
* CE 28 is refined into CE [63] 


#### Refined cost equations d/3 
* CE 61: d(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 62: d(A,B,B) = 1
     [B>=0,A=0] 
* CE 63: d(V,V1,Out) = 1+ d(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of d/3 
* CEs [63] --> Loop 34 
* CEs [61] --> Loop 35 
* CEs [62] --> Loop 36 

#### Loops of d/3 
* Loop 34: d(V,V1,Out)->  d(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 35: d(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 36: d(A,B,B) [B>=0,A=0] 

### Ranking functions of CR d(V,V1,Out) 
* RF of phase [34]: [V,V1]

#### Partial ranking functions of CR d(V,V1,Out) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V
    V1


### Resulting Chains:d(V,V1,Out) 
* [[34],36]
* [[34],35]
* [36]
* [35]


### Merging Chains  d/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35],[35,[34]]] --> 2 
* [[36,[34]]] --> 3 


### Specialization of cost equations fun/2 
* CE 49 is refined into CE [64] 
* CE 48 is refined into CE [65] 


#### Refined cost equations fun/2 
* CE 64: fun(V,Out) = 0
     [V>=0,Out=0] 
* CE 65: fun(V,Out) = 1
     [Out=2,V=2] 

### Cost equations --> "Loop" of fun/2 
* CEs [64] --> Loop 37 
* CEs [65] --> Loop 38 

#### Loops of fun/2 
* Loop 37: fun(V,Out) [V>=0,Out=0] 
* Loop 38: fun(V,Out) [Out=2,V=2] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [38]
* [37]


### Merging Chains  fun/2 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations fun1/2 
* CE 51 is refined into CE [66] 
* CE 52 is refined into CE [67] 
* CE 50 is refined into CE [68] 


#### Refined cost equations fun1/2 
* CE 66: fun1(V,Out) = 1
     [V>=1,Out=2] 
* CE 67: fun1(V,Out) = 0
     [V>=0,Out=0] 
* CE 68: fun1(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of fun1/2 
* CEs [66] --> Loop 39 
* CEs [67] --> Loop 40 
* CEs [68] --> Loop 41 

#### Loops of fun1/2 
* Loop 39: fun1(V,Out) [V>=1,Out=2] 
* Loop 40: fun1(V,Out) [V>=0,Out=0] 
* Loop 41: fun1(V,Out) [Out=1,V=0] 

### Ranking functions of CR fun1(V,Out) 

#### Partial ranking functions of CR fun1(V,Out) 


### Resulting Chains:fun1(V,Out) 
* [41]
* [40]
* [39]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 


### Specialization of cost equations fun4/2 
* CE 54 is refined into CE [69] 
* CE 53 is refined into CE [70] 


#### Refined cost equations fun4/2 
* CE 69: fun4(V,Out) = 0
     [V>=0,Out=0] 
* CE 70: fun4(V,Out) = 1
     [Out=1,V=2] 

### Cost equations --> "Loop" of fun4/2 
* CEs [69] --> Loop 42 
* CEs [70] --> Loop 43 

#### Loops of fun4/2 
* Loop 42: fun4(V,Out) [V>=0,Out=0] 
* Loop 43: fun4(V,Out) [Out=1,V=2] 

### Ranking functions of CR fun4(V,Out) 

#### Partial ranking functions of CR fun4(V,Out) 


### Resulting Chains:fun4(V,Out) 
* [43]
* [42]


### Merging Chains  fun4/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations fun6/2 
* CE 57 is refined into CE [71] 
* CE 58 is refined into CE [72] 


#### Refined cost equations fun6/2 
* CE 71: fun6(V,Out) = 1
     [Out=0,V=2] 
* CE 72: fun6(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of fun6/2 
* CEs [71,72] --> Loop 44 

#### Loops of fun6/2 
* Loop 44: fun6(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fun6(V,Out) 

#### Partial ranking functions of CR fun6(V,Out) 


### Resulting Chains:fun6(V,Out) 
* [44]


### Merging Chains  fun6/2 into  External patterns of execution 
* [[44]] --> 1 


### Specialization of cost equations gt/3 
* CE 26 is refined into CE [73] 
* CE 24 is refined into CE [74,75,76,77] 
* CE 23 is refined into CE [78] 
* CE 25 is refined into CE [79] 


#### Refined cost equations gt/3 
* CE 73: gt(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 74: gt(V,V1,Out) = 1+ fun1(W1,X1):1+ fun(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=0,Out=0,V1=0,V=0] 
* CE 75: gt(V,V1,Out) = 1+ fun1(V,W1):2+ fun(X1,Y1):2
     [V>=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 76: gt(V,V1,Out) = 1+ fun1(V,W1):3+ fun(X1,Y1):1
     [V>=1,Y1=2,X1=2,W1=2,Out=2,V1=0] 
* CE 77: gt(V,V1,Out) = 1+ fun1(V,W1):3+ fun(X1,Y1):2
     [V>=1,Y1=0,X1=2,W1=2,Out=0,V1=0] 
* CE 78: gt(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 
* CE 79: gt(V,V1,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of gt/3 
* CEs [79] --> Loop 45 
* CEs [76] --> Loop 46 
* CEs [78] --> Loop 47 
* CEs [73,74,75,77] --> Loop 48 

#### Loops of gt/3 
* Loop 45: gt(V,V1,Out)->  gt(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 46: gt(V,V1,Out) [V>=1,Out=2,V1=0] 
* Loop 47: gt(V,V1,Out) [V1>=0,Out=1,V=0] 
* Loop 48: gt(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR gt(V,V1,Out) 
* RF of phase [45]: [V,V1]

#### Partial ranking functions of CR gt(V,V1,Out) 
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    V
    V1


### Resulting Chains:gt(V,V1,Out) 
* [[45],48]
* [[45],47]
* [[45],46]
* [48]
* [47]
* [46]


### Merging Chains  gt/3 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[48],[48,[45]]] --> 3 
* [[47,[45]]] --> 4 
* [[46,[45]]] --> 5 


### Specialization of cost equations fun5/4 
* CE 56 is refined into CE [80] 
* CE 55 is refined into CE [81,82,83,84,85] 


#### Refined cost equations fun5/4 
* CE 80: fun5(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 81: fun5(V,V1,V2,Out) = 1+ gt(W2,V2,X2):1+ fun6(Y2,Z2):1
     [V2>=0,Z2=0,Y2=1,X2=1,W2=0,Out=0,V1=0,V=2] 
* CE 82: fun5(V,V1,V2,Out) = 1+ gt(V1,W2,X2):2+ fun6(Y2,Z2):1
     [V1>=1,Z2=0,Y2=2,X2=2,W2=0,Out=0,V2=0,V=2] 
* CE 83: fun5(V,V1,V2,Out) = 1+ gt(V1,V2,W2):3+ fun6(X2,Y2):1
     [V2>=0,V1>=0,Y2=0,X2=0,W2=0,Out=0,V=2] 
* CE 84: fun5(V,V1,V2,Out) = 1+ gt(V1,V2,W2):4+ fun6(X2,Y2):1
     [V2>=V1,V1>=1,Y2=0,X2=1,W2=1,Out=0,V=2] 
* CE 85: fun5(V,V1,V2,Out) = 1+ gt(V1,V2,W2):5+ fun6(X2,Y2):1
     [V1>=V2+1,V2>=1,Y2=0,X2=2,W2=2,Out=0,V=2] 

### Cost equations --> "Loop" of fun5/4 
* CEs [82] --> Loop 49 
* CEs [80,81,83,84,85] --> Loop 50 

#### Loops of fun5/4 
* Loop 49: fun5(V,V1,V2,Out) [V1>=1,Out=0,V2=0,V=2] 
* Loop 50: fun5(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR fun5(V,V1,V2,Out) 

#### Partial ranking functions of CR fun5(V,V1,V2,Out) 


### Resulting Chains:fun5(V,V1,V2,Out) 
* [50]
* [49]


### Merging Chains  fun5/4 into  External patterns of execution 
* [[49],[50]] --> 1 


### Specialization of cost equations quot/3 
* CE 38 is refined into CE [86,87,88,89] 
* CE 35 is refined into CE [90,91,92] 
* CE 37 is refined into CE [93,94,95,96] 
* CE 39 is refined into CE [97,98,99] 
* CE 36 is refined into CE [100] 


#### Refined cost equations quot/3 
* CE 86: quot(V,V1,Out) = 1+ fun1(W1,X1):1+ fun4(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=0,Out=0,V1=0,V=0] 
* CE 87: quot(A,A,B) = 1+ fun1(A,C):2+ fun4(D,E):2
     [A>=0,E=0,D=0,C=0,B=0] 
* CE 88: quot(A,A,B) = 1+ fun1(A,C):3+ fun4(D,E):1
     [A>=1,E=1,D=2,C=2,B=1] 
* CE 89: quot(A,A,B) = 1+ fun1(A,C):3+ fun4(D,E):2
     [A>=1,E=0,D=2,C=2,B=0] 
* CE 90: quot(V,V1,Out) = 1+ fun1(W1,X1):1
     [V>=0,X1=1,W1=0,Out=0,V1=0] 
* CE 91: quot(V,V1,Out) = 1+ fun1(V1,W1):2
     [V1>=0,V>=0,W1=0,Out=0] 
* CE 92: quot(V,V1,Out) = 1+ fun1(V1,W1):3
     [V1>=1,V>=0,W1=2,Out=0] 
* CE 93: quot(V,V1,Out) = 2+ fun1(V1,W1):3+ gt(X1,V1,Y1):1
     [V1>=1,Y1=1,X1=0,W1=2,Out=0,V=0] 
* CE 94: quot(V,V1,Out) = 2+ fun1(V1,W1):3+ gt(V,V1,X1):3
     [V1>=1,V>=0,X1=0,W1=2,Out=0] 
* CE 95: quot(V,V1,Out) = 2+ fun1(V1,W1):3+ gt(V,V1,X1):4
     [V1>=V,V>=1,X1=1,W1=2,Out=0] 
* CE 96: quot(V,V1,Out) = 2+ fun1(V1,W1):3+ gt(V,V1,X1):5
     [V>=V1+1,V1>=1,X1=2,W1=2,Out=0] 
* CE 97: quot(V,V1,Out) = 1+ fun1(W1,X1):1+ fun5(Y1,Z1,V,A2):1
     [V>=0,A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0,V1=0] 
* CE 98: quot(V,V1,Out) = 1+ fun1(V1,W1):2+ fun5(X1,V1,V,Y1):1
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 99: quot(V,V1,Out) = 1+ fun1(V1,W1):3+ fun5(X1,V1,V,Y1):1
     [V>=0,V1>=1,Y1=0,X1=2,W1=2,Out=0] 
* CE 100: quot(V,V1,Out) = 3+ fun1(V1,W1):3+ gt(V,V1,X1):5+ d(V,V1,Y1):2+ quot(Z1,V1,A2)
     [V>=V1+1,V1>=1,A2+1=Out,Z1=0,Y1=0,X1=2,W1=2] 

### Cost equations --> "Loop" of quot/3 
* CEs [100] --> Loop 51 
* CEs [88] --> Loop 52 
* CEs [87,89] --> Loop 53 
* CEs [93] --> Loop 54 
* CEs [86,90,91,92,94,95,96,97,98,99] --> Loop 55 

#### Loops of quot/3 
* Loop 51: quot(V,V1,Out)->  quot(V',V1,Out')
                  [V>=V1+1,V1>=1,Out=Out'+1,V'=0] 
* Loop 52: quot(A,A,B) [A>=1,B=1] 
* Loop 53: quot(A,A,B) [A>=0,B=0] 
* Loop 54: quot(V,V1,Out) [V1>=1,Out=0,V=0] 
* Loop 55: quot(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR quot(V,V1,Out) 

#### Partial ranking functions of CR quot(V,V1,Out) 


### Resulting Chains:quot(V,V1,Out) 
* [55]
* [54]
* [53]
* [52]
* [51,55]
* [51,54]


### Merging Chains  quot/3 into  External patterns of execution 
* [[54],[55]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 
* [[54,51],[55,51]] --> 4 


### Specialization of cost equations fun7/3 
* CE 60 is refined into CE [101] 
* CE 59 is refined into CE [102] 


#### Refined cost equations fun7/3 
* CE 101: fun7(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 102: fun7(A,B,B) = 1
     [B>=0,A=2] 

### Cost equations --> "Loop" of fun7/3 
* CEs [101] --> Loop 56 
* CEs [102] --> Loop 57 

#### Loops of fun7/3 
* Loop 56: fun7(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 57: fun7(A,B,B) [B>=0,A=2] 

### Ranking functions of CR fun7(V,V1,Out) 

#### Partial ranking functions of CR fun7(V,V1,Out) 


### Resulting Chains:fun7(V,V1,Out) 
* [57]
* [56]


### Merging Chains  fun7/3 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 


### Specialization of cost equations gcd/3 
* CE 34 is refined into CE [103,104,105,106] 
* CE 30 is refined into CE [107,108,109,110,111,112,113,114,115] 
* CE 32 is refined into CE [116,117,118] 
* CE 33 is refined into CE [119] 
* CE 31 is refined into CE [120] 


#### Refined cost equations gcd/3 
* CE 103: gcd(V,V1,Out) = 1+ fun1(W1,X1):1+ fun7(Y1,Z1,A2):2
     [A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0,V1=0,V=0] 
* CE 104: gcd(A,A,B) = 1+ fun1(A,C):2+ fun7(D,A,E):2
     [A>=0,E=0,D=0,C=0,B=0] 
* CE 105: gcd(A,A,A) = 1+ fun1(A,B):3+ fun7(C,A,A):1
     [A>=1,C=2,B=2] 
* CE 106: gcd(A,A,B) = 1+ fun1(A,C):3+ fun7(D,A,E):2
     [A>=1,E=0,D=2,C=2,B=0] 
* CE 107: gcd(V,V1,Out) = 1+ fun1(W1,X1):1+ fun1(Y1,Z1):1
     [Z1=1,Y1=0,X1=1,W1=0,Out=0,V1=0,V=0] 
* CE 108: gcd(V,V1,Out) = 1+ fun1(W1,X1):1+ fun1(V1,Y1):2
     [V1>=0,Y1=0,X1=1,W1=0,Out=0,V=0] 
* CE 109: gcd(V,V1,Out) = 1+ fun1(W1,X1):1+ fun1(V1,Y1):3
     [V1>=1,Y1=2,X1=1,W1=0,Out=0,V=0] 
* CE 110: gcd(V,V1,Out) = 1+ fun1(V,W1):2+ fun1(X1,Y1):1
     [V>=0,Y1=1,X1=0,W1=0,Out=0,V1=0] 
* CE 111: gcd(V,V1,Out) = 1+ fun1(V,W1):2+ fun1(V1,X1):2
     [V1>=0,V>=0,X1=0,W1=0,Out=0] 
* CE 112: gcd(V,V1,Out) = 1+ fun1(V,W1):2+ fun1(V1,X1):3
     [V1>=1,V>=0,X1=2,W1=0,Out=0] 
* CE 113: gcd(V,V1,Out) = 1+ fun1(V,W1):3+ fun1(X1,Y1):1
     [V>=1,Y1=1,X1=0,W1=2,Out=0,V1=0] 
* CE 114: gcd(V,V1,Out) = 1+ fun1(V,W1):3+ fun1(V1,X1):2
     [V1>=0,V>=1,X1=0,W1=2,Out=0] 
* CE 115: gcd(V,V1,Out) = 1+ fun1(V,W1):3+ fun1(V1,X1):3
     [V1>=1,V>=1,X1=2,W1=2,Out=0] 
* CE 116: gcd(V,V1,Out) = 2+ fun1(V,W1):3+ fun1(V1,X1):3+ gt(V,V1,Y1):3
     [V1>=1,V>=1,Y1=0,X1=2,W1=2,Out=0] 
* CE 117: gcd(V,V1,Out) = 2+ fun1(V,W1):3+ fun1(V1,X1):3+ gt(V,V1,Y1):4
     [V1>=V,V>=1,Y1=1,X1=2,W1=2,Out=0] 
* CE 118: gcd(V,V1,Out) = 2+ fun1(V,W1):3+ fun1(V1,X1):3+ gt(V,V1,Y1):5
     [V>=V1+1,V1>=1,Y1=2,X1=2,W1=2,Out=0] 
* CE 119: gcd(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 120: gcd(V,V1,Out) = 3+ fun1(V,W1):3+ fun1(V1,X1):3+ gt(V,V1,Y1):5+ d(V,V1,Z1):2+ gcd(A2,V1,Out)
     [V>=V1+1,V1>=1,A2=0,Z1=0,Y1=2,X1=2,W1=2] 

### Cost equations --> "Loop" of gcd/3 
* CEs [120] --> Loop 58 
* CEs [105] --> Loop 59 
* CEs [104,106] --> Loop 60 
* CEs [110,113] --> Loop 61 
* CEs [103,107,108,109,111,112,114,115,116,117,118,119] --> Loop 62 

#### Loops of gcd/3 
* Loop 58: gcd(V,V1,Out)->  gcd(V',V1,Out)
                  [V>=V1+1,V1>=1,V'=0] 
* Loop 59: gcd(A,A,A) [A>=1] 
* Loop 60: gcd(A,A,B) [A>=0,B=0] 
* Loop 61: gcd(V,V1,Out) [V>=0,Out=0,V1=0] 
* Loop 62: gcd(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR gcd(V,V1,Out) 

#### Partial ranking functions of CR gcd(V,V1,Out) 


### Resulting Chains:gcd(V,V1,Out) 
* [62]
* [61]
* [60]
* [59]
* [58,62]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[62,58],[61],[62]] --> 1 
* [[60]] --> 2 
* [[59]] --> 3 


### Specialization of cost equations p/2 
* CE 40 is refined into CE [121] 
* CE 41 is refined into CE [122] 


#### Refined cost equations p/2 
* CE 121: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 122: p(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [121] --> Loop 63 
* CEs [122] --> Loop 64 

#### Loops of p/2 
* Loop 63: p(V,Out) [V>=1,V=Out+1] 
* Loop 64: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [64]
* [63]


### Merging Chains  p/2 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations plus/3 
* CE 44 is refined into CE [123] 
* CE 42 is refined into CE [124] 
* CE 43 is refined into CE [125] 


#### Refined cost equations plus/3 
* CE 123: plus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 124: plus(A,B,A) = 1
     [A>=0,B=0] 
* CE 125: plus(V,V1,Out) = 1+ plus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+2=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of plus/3 
* CEs [125] --> Loop 65 
* CEs [123] --> Loop 66 
* CEs [124] --> Loop 67 

#### Loops of plus/3 
* Loop 65: plus(V,V1,Out)->  plus(V',V1',Out')
                  [V1'>=0,V'>=0,Out=Out'+2,V1'+1=V1,V'+1=V] 
* Loop 66: plus(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 67: plus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [65]: [V,V1]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [65]:
  - RF of loop [65:1]:
    V
    V1


### Resulting Chains:plus(V,V1,Out) 
* [[65],67]
* [[65],66]
* [67]
* [66]


### Merging Chains  plus/3 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 
* [[67,[65]]] --> 3 
* [[66,[65]]] --> 4 


### Specialization of cost equations times/3 
* CE 45 is refined into CE [126] 
* CE 47 is refined into CE [127] 
* CE 46 is refined into CE [128,129,130,131,132,133,134,135,136,137,138,139] 


#### Refined cost equations times/3 
* CE 126: times(V,V1,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 127: times(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 128: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(Z1,A2,B2):1+ plus(W1,C2,W1):1
     [W1>=0,W1+1=Out,W1+1=V,Y1=0,X1=0,C2=0,B2=0,A2=0,Z1=0,V1=1] 
* CE 129: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Z1,X1):1+ plus(W1,X1,A2):2
     [X1>=0,W1>=0,X1+1=V1,W1+1=V,Y1=0,A2=0,Z1=0,Out=1] 
* CE 130: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(Z1,A2,B2):1+ plus(W1,C2,D2):3
     [2*W1>=D2,D2>=W1+1,D2=W1+X1,D2=W1+C2,D2=B2+W1,D2=Z1+W1,D2+1=V1+W1,D2+1=Out,W1+1=V,Y1=0,A2=0] 
* CE 131: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Z1,X1):1+ plus(W1,X1,A2):4
     [2*X1>=A2,2*W1>=A2,A2>=2,A2+1=Out,X1+1=V1,W1+1=V,Y1=0,Z1=0] 
* CE 132: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Y1,Z1):2+ plus(W1,A2,W1):1
     [W1>=0,Y1>=0,X1>=0,W1+1=Out,X1+1=V1,W1+1=V,A2=0,Z1=0] 
* CE 133: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Y1,Z1):2+ plus(W1,A2,B2):2
     [W1>=0,Y1>=0,X1>=0,X1+1=V1,W1+1=V,B2=0,A2=0,Z1=0,Out=1] 
* CE 134: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Z1,A2):3+ plus(W1,A2,B2):2
     [2*X1>=A2,A2>=X1+1,W1>=0,A2=X1+Y1,A2=X1+Z1,X1+1=V1,W1+1=V,B2=0,Out=1] 
* CE 135: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Z1,A2):3+ plus(W1,B2,C2):3
     [W1+2*X1>=C2,C2>=X1+W1+1,2*W1>=C2,C2=X1+W1+Y1,C2=X1+Z1+W1,C2=W1+B2,C2=A2+W1,C2+1=Out,X1+1=V1,W1+1=V] 
* CE 136: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Z1,A2):3+ plus(W1,A2,B2):4
     [2*A2>=B2,2*W1>=B2,2*X1>=A2,A2>=X1+1,B2>=2,A2=X1+Y1,A2=X1+Z1,B2+1=Out,X1+1=V1,W1+1=V] 
* CE 137: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Y1,Z1):4+ plus(W1,Z1,A2):2
     [2*Y1>=Z1,2*X1>=Z1,Z1>=2,W1>=0,X1+1=V1,W1+1=V,A2=0,Out=1] 
* CE 138: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Y1,Z1):4+ plus(W1,A2,B2):3
     [W1+2*Y1>=B2,W1+2*X1>=B2,2*W1>=B2,B2>=W1+2,B2=W1+A2,B2=Z1+W1,B2+1=Out,X1+1=V1,W1+1=V] 
* CE 139: times(V,V1,Out) = 1+ times(W1,X1,Y1)+ plus(X1,Y1,Z1):4+ plus(W1,Z1,A2):4
     [2*Z1>=A2,2*W1>=A2,2*Y1>=Z1,2*X1>=Z1,A2>=2,Z1>=2,A2+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of times/3 
* CEs [138] --> Loop 68 
* CEs [136] --> Loop 69 
* CEs [139] --> Loop 70 
* CEs [135] --> Loop 71 
* CEs [131] --> Loop 72 
* CEs [130] --> Loop 73 
* CEs [129,133,134,137] --> Loop 74 
* CEs [128,132] --> Loop 75 
* CEs [126,127] --> Loop 76 

#### Loops of times/3 
* Loop 68: times(V,V1,Out)->  times(V',V1',Out')
                  [V+2*Out'>=Out,V+2*V1>=Out+2,2*V>=Out+1,Out>=V+2,V1=V1'+1,V=V'+1] 
* Loop 69: times(V,V1,Out)->  times(V',V1',Out')
                  [2*V1+2*Out'>=Out+1,V1>=Out'+1,2*V>=Out+1,Out'>=1,Out>=3,V1=V1'+1,V=V'+1] 
* Loop 70: times(V,V1,Out)->  times(V',V1',Out')
                  [4*Out'+1>=Out,4*V1>=Out+3,2*V>=Out+1,Out'>=1,Out>=3,V1>=2,V1=V1'+1,V=V'+1] 
* Loop 71: times(V,V1,Out)->  times(V',V1',Out')
                  [V+2*V1>=Out+2,Out>=V+V1,2*V>=Out+1,V+V1+Out'=Out+1,V1=V1'+1,V=V'+1] 
* Loop 72: times(V,V1,Out)->  times(V',V1',Out')
                  [2*V1>=Out+1,2*V>=Out+1,Out>=3,V1=V1'+1,V=V'+1,Out'=0] 
* Loop 73: times(V,V1,Out)->  times(V',V1',Out')
                  [V>=V1,V1>=2,V+V1=Out+1,V1=V1'+1,V=V'+1,Out'=0] 
* Loop 74: times(V,V1,Out)->  times(V',V1',Out')
                  [Out'>=0,V1>=1,V>=1,V1=V1'+1,V=V'+1,Out=1] 
* Loop 75: times(A,B,A)->  times(V',V1',Out')
                  [Out'>=0,B>=1,A>=1,B=V1'+1,A=V'+1] 
* Loop 76: times(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR times(V,V1,Out) 
* RF of phase [68,69,70,71,74,75]: [V,V1]

#### Partial ranking functions of CR times(V,V1,Out) 
* Partial RF of phase [68,69,70,71,74,75]:
  - RF of loop [68:1,69:1,70:1,71:1]:
    V1-1
  - RF of loop [68:1,71:1]:
    V-2
  - RF of loop [69:1,70:1]:
    V-1
  - RF of loop [74:1,75:1]:
    V
    V1


### Resulting Chains:times(V,V1,Out) 
* [[68,69,70,71,74,75],76]
* [[68,69,70,71,74,75],73,76]
* [[68,69,70,71,74,75],72,76]
* [76]
* [73,76]
* [72,76]


### Merging Chains  times/3 into  External patterns of execution 
* [[76]] --> 1 
* [[76,72],[76,73],[76,73,[68,69,70,71,74,75]],[76,[68,69,70,71,74,75]]] --> 2 
* [[76,72,[68,69,70,71,74,75]]] --> 3 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [140] 
* CE 3 is refined into CE [141,142,143] 
* CE 4 is refined into CE [144,145,146,147,148] 
* CE 5 is refined into CE [149,150,151,152,153,154] 
* CE 6 is refined into CE [155,156,157] 
* CE 7 is refined into CE [158,159,160,161,162] 
* CE 8 is refined into CE [163,164,165,166,167,168] 
* CE 9 is refined into CE [169,170] 
* CE 10 is refined into CE [171,172,173,174] 
* CE 11 is refined into CE [175,176,177] 
* CE 12 is refined into CE [178,179,180,181,182] 
* CE 13 is refined into CE [183,184] 
* CE 14 is refined into CE [185,186,187] 
* CE 15 is refined into CE [188,189,190,191,192] 
* CE 16 is refined into CE [193,194,195] 
* CE 17 is refined into CE [196,197,198,199] 
* CE 18 is refined into CE [200,201] 
* CE 19 is refined into CE [202] 
* CE 20 is refined into CE [203] 
* CE 21 is refined into CE [204,205,206] 
* CE 22 is refined into CE [207,208] 


#### Refined cost equations start/4 
* CE 140: start(V,V1,V2,V3) = 0
     [V2>=0,V1>=0,V>=0] 
* CE 141: start(V,V1,V2,V3) = 2+ gt(V2,W3,X3):2+ d(V2,Y3,Z3):2+ gcd(A4,B4,C4):1
     [V2>=1,C4=0,B4=0,A4=0,Z3=0,Y3=0,X3=2,W3=0,V3=0,V1=2,V=2] 
* CE 142: start(V,V1,V2,V3) = 2+ gt(V2,W3,X3):2+ d(V2,Y3,Z3):2+ gcd(A4,B4,C4):2
     [V2>=1,C4=0,B4=0,A4=0,Z3=0,Y3=0,X3=2,W3=0,V3=0,V1=2,V=2] 
* CE 143: start(V,V1,V2,V3) = 2+ gt(V2,V3,W3):5+ d(V2,V3,X3):2+ gcd(Y3,V3,Z3):1
     [V2>=V3+1,V3>=1,Z3=0,Y3=0,X3=0,W3=2,V1=2,V=2] 
* CE 144: start(V,V1,V2,V3) = 1+ gt(W3,V3,X3):1
     [V3>=0,X3=1,W3=0,V2=0,V1=2,V=2] 
* CE 145: start(V,V1,V2,V3) = 1+ gt(V2,W3,X3):2
     [V2>=1,X3=2,W3=0,V3=0,V1=2,V=2] 
* CE 146: start(V,V1,V2,V3) = 1+ gt(V2,V3,W3):3
     [V3>=0,V2>=0,W3=0,V1=2,V=2] 
* CE 147: start(V,V1,V2,V3) = 1+ gt(V2,V3,W3):4
     [V3>=V2,V2>=1,W3=1,V1=2,V=2] 
* CE 148: start(V,V1,V2,V3) = 1+ gt(V2,V3,W3):5
     [V2>=V3+1,V3>=1,W3=2,V1=2,V=2] 
* CE 149: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ gcd(V2,V2,X3):1
     [V2>=0,X3=0,W3=0,V1=0,V=2] 
* CE 150: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ gcd(V2,V2,X3):2
     [V2>=0,X3=0,W3=0,V1=0,V=2] 
* CE 151: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ gcd(V2,V2,V2):3
     [V2>=1,W3=0,V1=0,V=2] 
* CE 152: start(V,V1,V2,V3) = 1+ d(V1,V2,W3):2+ gcd(X3,V2,Y3):1
     [V2>=0,V1>=0,Y3=0,X3=0,W3=0,V=2] 
* CE 153: start(V,V1,V2,V3) = 1+ d(V1,W3,X3):2+ gcd(Y3,Z3,A4):2
     [V1>=0,A4=0,Z3=0,Y3=0,X3=0,W3=0,V2=0,V=2] 
* CE 154: start(V,V1,V2,V3) = 1+ d(W3,V2,X3):3+ gcd(X3,V2,Y3):1
     [V2>=X3+1,X3>=0,W3+X3=V2,V1+X3=V2,Y3=0,V=2] 
* CE 155: start(V,V1,V2,V3) = 2+ gt(V1,W3,X3):2+ d(V1,Y3,Z3):2+ quot(A4,B4,C4):1
     [V1>=1,C4=0,B4=0,A4=0,Z3=0,Y3=0,X3=2,W3=0,V2=0,V=2] 
* CE 156: start(V,V1,V2,V3) = 2+ gt(V1,W3,X3):2+ d(V1,Y3,Z3):2+ quot(A4,B4,C4):2
     [V1>=1,C4=0,B4=0,A4=0,Z3=0,Y3=0,X3=2,W3=0,V2=0,V=2] 
* CE 157: start(V,V1,V2,V3) = 2+ gt(V1,V2,W3):5+ d(V1,V2,X3):2+ quot(Y3,V2,Z3):1
     [V1>=V2+1,V2>=1,Z3=0,Y3=0,X3=0,W3=2,V=2] 
* CE 158: start(V,V1,V2,V3) = 1+ gt(W3,V2,X3):1
     [V2>=0,X3=1,W3=0,V1=0,V=2] 
* CE 159: start(V,V1,V2,V3) = 1+ gt(V1,W3,X3):2
     [V1>=1,X3=2,W3=0,V2=0,V=2] 
* CE 160: start(V,V1,V2,V3) = 1+ gt(V1,V2,W3):3
     [V2>=0,V1>=0,W3=0,V=2] 
* CE 161: start(V,V1,V2,V3) = 1+ gt(V1,V2,W3):4
     [V2>=V1,V1>=1,W3=1,V=2] 
* CE 162: start(V,V1,V2,V3) = 1+ gt(V1,V2,W3):5
     [V1>=V2+1,V2>=1,W3=2,V=2] 
* CE 163: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ quot(V2,V2,X3):1
     [V2>=0,X3=0,W3=0,V1=0,V=2] 
* CE 164: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ quot(V2,V2,X3):2
     [V2>=0,X3=0,W3=0,V1=0,V=2] 
* CE 165: start(V,V1,V2,V3) = 1+ d(W3,V2,V2):1+ quot(V2,V2,X3):3
     [V2>=1,X3=1,W3=0,V1=0,V=2] 
* CE 166: start(V,V1,V2,V3) = 1+ d(V1,V2,W3):2+ quot(X3,V2,Y3):1
     [V2>=0,V1>=0,Y3=0,X3=0,W3=0,V=2] 
* CE 167: start(V,V1,V2,V3) = 1+ d(V1,W3,X3):2+ quot(Y3,Z3,A4):2
     [V1>=0,A4=0,Z3=0,Y3=0,X3=0,W3=0,V2=0,V=2] 
* CE 168: start(V,V1,V2,V3) = 1+ d(W3,V2,X3):3+ quot(X3,V2,Y3):1
     [V2>=X3+1,X3>=0,W3+X3=V2,V1+X3=V2,Y3=0,V=2] 
* CE 169: start(V,V1,V2,V3) = 0+ p(V,W3):1
     [V>=0,W3=0] 
* CE 170: start(V,V1,V2,V3) = 0+ p(W3,X3):2
     [X3>=0,X3+1=W3,X3+1=V] 
* CE 171: start(V,V1,V2,V3) = 0+ plus(V,W3,V):1
     [V>=0,W3=0,V1=0] 
* CE 172: start(V,V1,V2,V3) = 0+ plus(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 173: start(V,V1,V2,V3) = 0+ plus(V,W3,X3):3
     [2*V>=X3,X3>=V+1,X3=V+W3,X3=V+V1] 
* CE 174: start(V,V1,V2,V3) = 0+ plus(V,V1,W3):4
     [2*V1>=W3,2*V>=W3,W3>=2] 
* CE 175: start(V,V1,V2,V3) = 0+ times(V,V1,W3):1
     [V1>=0,V>=0,W3=0] 
* CE 176: start(V,V1,V2,V3) = 0+ times(V,V1,W3):2
     [V+2*V1>=W3+2,2*V>=W3+1,W3>=1,V1>=1] 
* CE 177: start(V,V1,V2,V3) = 0+ times(V,V1,W3):3
     [V+2*V1>=W3+2,2*V>=W3+1,W3>=1,V1>=3,V>=3] 
* CE 178: start(V,V1,V2,V3) = 0+ gt(W3,V1,X3):1
     [V1>=0,X3=1,W3=0,V=0] 
* CE 179: start(V,V1,V2,V3) = 0+ gt(V,W3,X3):2
     [V>=1,X3=2,W3=0,V1=0] 
* CE 180: start(V,V1,V2,V3) = 0+ gt(V,V1,W3):3
     [V1>=0,V>=0,W3=0] 
* CE 181: start(V,V1,V2,V3) = 0+ gt(V,V1,W3):4
     [V1>=V,V>=1,W3=1] 
* CE 182: start(V,V1,V2,V3) = 0+ gt(V,V1,W3):5
     [V>=V1+1,V1>=1,W3=2] 
* CE 183: start(V,V1,V2,V3) = 0+ fun(W3,X3):1
     [X3=2,W3=2,V=2] 
* CE 184: start(V,V1,V2,V3) = 0+ fun(V,W3):2
     [V>=0,W3=0] 
* CE 185: start(V,V1,V2,V3) = 0+ fun1(W3,X3):1
     [X3=1,W3=0,V=0] 
* CE 186: start(V,V1,V2,V3) = 0+ fun1(V,W3):2
     [V>=0,W3=0] 
* CE 187: start(V,V1,V2,V3) = 0+ fun1(V,W3):3
     [V>=1,W3=2] 
* CE 188: start(V,V1,V2,V3) = 1+ gt(W3,V,X3):1
     [V>=0,X3=1,W3=0,V1=0] 
* CE 189: start(V,V1,V2,V3) = 1+ gt(V1,W3,X3):2
     [V1>=1,X3=2,W3=0,V=0] 
* CE 190: start(V,V1,V2,V3) = 1+ gt(V1,V,W3):3
     [V>=0,V1>=0,W3=0] 
* CE 191: start(V,V1,V2,V3) = 1+ gt(V1,V,W3):4
     [V>=V1,V1>=1,W3=1] 
* CE 192: start(V,V1,V2,V3) = 1+ gt(V1,V,W3):5
     [V1>=V+1,V>=1,W3=2] 
* CE 193: start(V,V1,V2,V3) = 0+ d(W3,V1,V1):1
     [V1>=0,W3=0,V=0] 
* CE 194: start(V,V1,V2,V3) = 0+ d(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 195: start(V,V1,V2,V3) = 0+ d(V,V1,W3):3
     [V1>=V,V>=1,V1=V+W3] 
* CE 196: start(V,V1,V2,V3) = 0+ quot(V,V1,W3):1
     [V1>=0,V>=0,W3=0] 
* CE 197: start(A,A,B,C) = 0+ quot(A,A,D):2
     [A>=0,D=0] 
* CE 198: start(A,A,B,C) = 0+ quot(A,A,D):3
     [A>=1,D=1] 
* CE 199: start(V,V1,V2,V3) = 0+ quot(V,V1,W3):4
     [V>=V1+1,V1>=1,W3=1] 
* CE 200: start(V,V1,V2,V3) = 0+ fun4(W3,X3):1
     [X3=1,W3=2,V=2] 
* CE 201: start(V,V1,V2,V3) = 0+ fun4(V,W3):2
     [V>=0,W3=0] 
* CE 202: start(V,V1,V2,V3) = 0+ fun5(V,V1,V2,W3):1
     [V2>=0,V1>=0,V>=0,W3=0] 
* CE 203: start(V,V1,V2,V3) = 0+ fun6(V,W3):1
     [V>=0,W3=0] 
* CE 204: start(V,V1,V2,V3) = 0+ gcd(V,V1,W3):1
     [V1>=0,V>=0,W3=0] 
* CE 205: start(A,A,B,C) = 0+ gcd(A,A,D):2
     [A>=0,D=0] 
* CE 206: start(A,A,B,C) = 0+ gcd(A,A,A):3
     [A>=1] 
* CE 207: start(V,V1,V2,V3) = 0+ fun7(W3,V1,V1):1
     [V1>=0,W3=2,V=2] 
* CE 208: start(V,V1,V2,V3) = 0+ fun7(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 

### Cost equations --> "Loop" of start/4 
* CEs [197,198,205,206] --> Loop 77 
* CEs [171,179,188] --> Loop 78 
* CEs [141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,183,200,207] --> Loop 79 
* CEs [140,169,170,172,173,174,175,176,177,178,180,181,182,184,185,186,187,189,190,191,192,193,194,195,196,199,201,202,203,204,208] --> Loop 80 

#### Loops of start/4 
* Loop 77: start(A,A,B,C) [A>=0] 
* Loop 78: start(V,V1,V2,V3) [V>=0,V1=0] 
* Loop 79: start(V,V1,V2,V3) [V=2] 
* Loop 80: start(V,V1,V2,V3) [V>=0] 

### Ranking functions of CR start(V,V1,V2,V3) 

#### Partial ranking functions of CR start(V,V1,V2,V3) 


### Resulting Chains:start(V,V1,V2,V3) 
* [80]
* [79]
* [78]
* [77]


### Merging Chains  start/4 into  External patterns of execution 
* [[79],[80]] --> 1 
* [[78]] --> 2 
* [[77]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [34] 

 * loop 34:d(V,V1,Out) -> [d(V',V1',Out')] 
1
#### Cost of phase [34]:d(V,V1,Out) -> [d(V',V1',Out')] 
1*it(34)+0
  Such that:it(34) =< V
it(34) =< V-V'
it(34) =< V1
it(34) =< V1-V1'

#### Cost of phase [34]:d(V,V1,Out) -> [d(V',V1',Out')] 
1*it(34)+0
  Such that:it(34) =< V
it(34) =< V-V'
it(34) =< V1
it(34) =< V1-V1'

#### Cost of chains of d(V,V1,Out):
* Chain [[34],36]: 1*it(34)+1
  Such that:it(34) =< V1-Out

  with precondition: [Out+V=V1,V>=1,V1>=V] 

* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [36]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [35]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of fun(V,Out):
* Chain [38]: 1
  with precondition: [V=2,Out=2] 

* Chain [37]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of fun1(V,Out):
* Chain [41]: 1
  with precondition: [V=0,Out=1] 

* Chain [40]: 0
  with precondition: [Out=0,V>=0] 

* Chain [39]: 1
  with precondition: [Out=2,V>=1] 


#### Cost of chains of fun4(V,Out):
* Chain [43]: 1
  with precondition: [V=2,Out=1] 

* Chain [42]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of fun6(V,Out):
* Chain [44]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of loops [45] 

 * loop 45:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1
#### Cost of phase [45]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(45)+0
  Such that:it(45) =< V
it(45) =< V-V'
it(45) =< V1
it(45) =< V1-V1'

#### Cost of phase [45]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(45)+0
  Such that:it(45) =< V
it(45) =< V-V'
it(45) =< V1
it(45) =< V1-V1'

#### Cost of phase [45]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(45)+0
  Such that:it(45) =< V
it(45) =< V-V'
it(45) =< V1
it(45) =< V1-V1'

#### Cost of chains of gt(V,V1,Out):
* Chain [[45],48]: 1*it(45)+2
  Such that:it(45) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [[45],47]: 1*it(45)+1
  Such that:it(45) =< V

  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[45],46]: 1*it(45)+3
  Such that:it(45) =< V1

  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [48]: 2
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [47]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [46]: 3
  with precondition: [V1=0,Out=2,V>=1] 


#### Cost of chains of fun5(V,V1,V2,Out):
* Chain [50]: 2*s(3)+1*s(4)+5
  Such that:s(4) =< V1
aux(1) =< V2
s(3) =< aux(1)

  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 

* Chain [49]: 5
  with precondition: [V=2,V2=0,Out=0,V1>=1] 


#### Cost of chains of quot(V,V1,Out):
* Chain [55]: 4*s(9)+7*s(10)+7
  Such that:aux(2) =< V
aux(3) =< V1
s(10) =< aux(2)
s(9) =< aux(3)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [54]: 4
  with precondition: [V=0,Out=0,V1>=1] 

* Chain [53]: 2
  with precondition: [Out=0,V1=V,V1>=0] 

* Chain [52]: 3
  with precondition: [Out=1,V1=V,V1>=1] 

* Chain [51,55]: 6*s(9)+14
  Such that:aux(5) =< V1
s(9) =< aux(5)

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [51,54]: 2*s(21)+11
  Such that:aux(4) =< V1
s(21) =< aux(4)

  with precondition: [Out=1,V1>=1,V>=V1+1] 


#### Cost of chains of fun7(V,V1,Out):
* Chain [57]: 1
  with precondition: [V=2,V1=Out,V1>=0] 

* Chain [56]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of gcd(V,V1,Out):
* Chain [62]: 2*s(31)+1*s(32)+7
  Such that:s(32) =< V
aux(7) =< V1
s(31) =< aux(7)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [61]: 3
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [60]: 2
  with precondition: [Out=0,V1=V,V1>=0] 

* Chain [59]: 3
  with precondition: [V1=V,V1=Out,V1>=1] 

* Chain [58,62]: 4*s(31)+15
  Such that:aux(9) =< V1
s(31) =< aux(9)

  with precondition: [Out=0,V1>=1,V>=V1+1] 


#### Cost of chains of p(V,Out):
* Chain [64]: 0
  with precondition: [Out=0,V>=0] 

* Chain [63]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [65] 

 * loop 65:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [65]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(65)+0
  Such that:it(65) =< V
it(65) =< V-V'
it(65) =< V1
it(65) =< V1-V1'

#### Cost of phase [65]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(65)+0
  Such that:it(65) =< V
it(65) =< V-V'
it(65) =< V1
it(65) =< V1-V1'

#### Cost of chains of plus(V,V1,Out):
* Chain [[65],67]: 1*it(65)+1
  Such that:it(65) =< V1

  with precondition: [V+V1=Out,V1>=1,V>=V1] 

* Chain [[65],66]: 1*it(65)+0
  Such that:it(65) =< Out/2

  with precondition: [Out>=2,2*V>=Out,2*V1>=Out] 

* Chain [67]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [66]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [68,69,70,71,74,75] 

 * loop 68:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(44)+1*s(43)+2
  Such that:s(43) =< V'
s(44) =< V'/2

 * loop 69:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(48)+1*s(47)+2
  Such that:s(47) =< V'
s(48) =< V1'

 * loop 70:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(52)+1*s(51)+1
  Such that:s(51) =< V'
s(52) =< V1'

 * loop 71:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(56)+1*s(55)+3
  Such that:s(55) =< V'
s(56) =< V'-V1'

 * loop 74:times(V,V1,Out) -> [times(V',V1',Out')] 
2*s(60)+2
  Such that:s(59) =< V1'
s(60) =< s(59)

 * loop 75:times(V,V1,Out) -> [times(V',V1',Out')] 
3
#### Cost of phase [68,69,70,71,74,75]:times(V,V1,Out) -> [times(V',V1',Out')] 
13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+0
  Such that:aux(19) =< V-V1
aux(21) =< V
aux(22) =< V-V'
aux(23) =< V1
aux(24) =< V1-V1'
it(68) =< aux(21)
it(68) =< aux(22)
it(68) =< aux(23)
it(68) =< aux(24)
aux(17) =< aux(23)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(23)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

#### Cost of phase [68,69,70,71,74,75]:times(V,V1,Out) -> [times(V',V1',Out')] 
13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+0
  Such that:aux(19) =< V-V1
aux(21) =< V
aux(22) =< V-V'
aux(23) =< V1
aux(24) =< V1-V1'
it(68) =< aux(21)
it(68) =< aux(22)
it(68) =< aux(23)
it(68) =< aux(24)
aux(17) =< aux(23)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(23)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

#### Cost of phase [68,69,70,71,74,75]:times(V,V1,Out) -> [times(V',V1',Out')] 
13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+0
  Such that:aux(19) =< V-V1
aux(21) =< V
aux(22) =< V-V'
aux(23) =< V1
aux(24) =< V1-V1'
it(68) =< aux(21)
it(68) =< aux(22)
it(68) =< aux(23)
it(68) =< aux(24)
aux(17) =< aux(23)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(23)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

#### Cost of chains of times(V,V1,Out):
* Chain [[68,69,70,71,74,75],76]: 13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+1
  Such that:aux(21) =< V
aux(19) =< V-V1
aux(25) =< V1
it(68) =< aux(21)
it(68) =< aux(25)
aux(17) =< aux(25)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(25)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

  with precondition: [V1>=1,Out>=1,2*V>=Out+1,V+2*V1>=Out+2] 

* Chain [[68,69,70,71,74,75],73,76]: 13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+1*s(71)+4
  Such that:aux(21) =< V
aux(19) =< V-V1
aux(26) =< V1
s(71) =< aux(26)
it(68) =< aux(21)
it(68) =< aux(26)
aux(17) =< aux(26)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(26)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

  with precondition: [V1>=3,Out>=1,V>=V1,2*V>=Out+1,V+2*V1>=Out+2] 

* Chain [[68,69,70,71,74,75],72,76]: 13*it(68)+1*s(61)+1*s(62)+1*s(63)+3*s(64)+1*s(65)+1*s(67)+2*s(69)+1*s(72)+3
  Such that:aux(21) =< V
aux(19) =< V-V1
aux(27) =< V1
s(72) =< aux(27)
it(68) =< aux(21)
it(68) =< aux(27)
aux(17) =< aux(27)
aux(14) =< aux(21)
s(67) =< it(68)*aux(19)
s(63) =< it(68)*aux(27)
aux(13) =< it(68)*aux(21)
s(62) =< it(68)*aux(21)
s(70) =< it(68)*aux(17)
s(64) =< it(68)*aux(14)
s(65) =< it(68)*aux(17)
s(61) =< aux(13)* (1/2)
s(69) =< s(70)

  with precondition: [V>=3,V1>=3,Out>=1,2*V>=Out+1,V+2*V1>=Out+2] 

* Chain [76]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [73,76]: 1*s(71)+4
  Such that:s(71) =< V1

  with precondition: [V+V1=Out+1,Out>=V+1,2*V>=Out+1] 

* Chain [72,76]: 1*s(72)+3
  Such that:s(72) =< V1

  with precondition: [Out>=3,2*V>=Out+1,2*V1>=Out+1] 


#### Cost of chains of start(V,V1,V2,V3):
* Chain [80]: 29*s(106)+39*s(112)+3*s(115)+3*s(116)+3*s(118)+9*s(120)+3*s(121)+3*s(122)+6*s(123)+12*s(141)+2*s(156)+15
  Such that:s(155) =< V2
aux(31) =< V
aux(32) =< V-V1
aux(33) =< V1
s(141) =< aux(31)
s(106) =< aux(33)
s(112) =< aux(31)
s(112) =< aux(33)
s(113) =< aux(33)
s(114) =< aux(31)
s(115) =< s(112)*aux(32)
s(116) =< s(112)*aux(33)
s(117) =< s(112)*aux(31)
s(118) =< s(112)*aux(31)
s(119) =< s(112)*s(113)
s(120) =< s(112)*s(114)
s(121) =< s(112)*s(113)
s(122) =< s(117)* (1/2)
s(123) =< s(119)
s(156) =< s(155)

  with precondition: [V>=0] 

* Chain [79]: 10*s(165)+49*s(171)+3*s(181)+8*s(182)+20
  Such that:aux(42) =< -V1+V2
aux(43) =< V1
aux(44) =< V2
aux(45) =< V3
s(182) =< aux(42)
s(181) =< aux(43)
s(171) =< aux(44)
s(165) =< aux(45)

  with precondition: [V=2] 

* Chain [78]: 3
  with precondition: [V1=0,V>=0] 

* Chain [77]: 3
  with precondition: [V=V1,V>=0] 


Closed-form bounds of start(V,V1,V2,V3): 
-------------------------------------
* Chain [80] with precondition: [V>=0] 
    - Upper bound: 51*V+15+27/2*V*V+nat(V1)*29+nat(V1)*12*V+nat(V2)*2+nat(V-V1)*3*V 
    - Complexity: n^2 
* Chain [79] with precondition: [V=2] 
    - Upper bound: nat(V1)*3+20+nat(V2)*49+nat(V3)*10+nat(-V1+V2)*8 
    - Complexity: n 
* Chain [78] with precondition: [V1=0,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [77] with precondition: [V=V1,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of start(V,V1,V2,V3): nat(V1)*3+12+nat(V2)*2+max([nat(V2)*47+5+nat(V3)*10+nat(-V1+V2)*8,27/2*V*V+51*V+nat(V1)*26+nat(V1)*12*V+nat(V-V1)*3*V])+3 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 59 ms.
* Invariants computed in 86 ms.
   - Backward Invariants 46 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 302 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 299 ms.
   - Equation cost structures 133 ms.
   - Phase cost structures 110 ms.
   - Chain cost structures 44 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 834 ms.

