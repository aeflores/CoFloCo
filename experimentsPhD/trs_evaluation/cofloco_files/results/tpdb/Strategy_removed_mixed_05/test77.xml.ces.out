
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [plus/3]
1. non_recursive  : [double/2]
2. recursive  : [f/4]
3. non_recursive  : [g/3]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f/4
3. SCC is partially evaluated into g/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations plus/3 
* CE 12: plus(V1,V,Out) = 1+ plus(V1,W1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 13: plus(A,B,A) = 1
     [A>=0,B=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of plus/3 
* Loop 8: plus(A,B,A) [A>=0,B=0] 
* Loop 9: plus(V1,V,Out)->  plus(V1,V',Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [9]: [V]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:plus(V1,V,Out) 
* [[9],8]
* [8]


### Merging Chains  plus/3 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[9]]] --> 2 


### Specialization of cost equations f/4 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15,16] 


#### Refined cost equations f/4 
* CE 14: f(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 15: f(V1,V,V2,Out) = 2+ plus(W2,X2,Y2):1+ f(Z2,A3,B3,Out)
     [B3=0,A3=0,Z2=0,Y2=0,X2=0,W2=0,V2=0,V=1,V1=0] 
* CE 16: f(V1,V,V2,Out) = 2+ plus(W2,X2,Y2):2+ f(Z2,Y2,A3,Out)
     [Y2>=2,Y2=2*A3,Y2=2*Z2,Y2=2*X2,Y2=2*W2,Y2=2*V2,V=1,V1=0] 

### Cost equations --> "Loop" of f/4 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of f/4 
* Loop 10: f(V1,V,V2,Out)->  f(V2,A',V2,Out)
                  [V2>=1,2*V2=A',V=1,V1=0] 
* Loop 11: f(V1,V,V2,Out)->  f(V1',V',V2',Out)
                  [V2'=0,V'=0,V1'=0,V2=0,V=1,V1=0] 
* Loop 12: f(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,V2,Out) 

#### Partial ranking functions of CR f(V1,V,V2,Out) 


### Resulting Chains:f(V1,V,V2,Out) 
* [12]
* [11,12]
* [10,12]


### Merging Chains  f/4 into  External patterns of execution 
* [[12,11],[12]] --> 1 
* [[12,10]] --> 2 


### Specialization of cost equations g/3 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 


#### Refined cost equations g/3 
* CE 17: g(A,B,B) = 1
     [B>=0,A>=0] 
* CE 18: g(A,B,A) = 1
     [B>=0,A>=0] 

### Cost equations --> "Loop" of g/3 
* CEs [17] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of g/3 
* Loop 13: g(A,B,B) [B>=0,A>=0] 
* Loop 14: g(A,B,A) [B>=0,A>=0] 

### Ranking functions of CR g(V1,V,Out) 

#### Partial ranking functions of CR g(V1,V,Out) 


### Resulting Chains:g(V1,V,Out) 
* [14]
* [13]


### Merging Chains  g/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [19,20] 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23,24] 
* CE 5 is refined into CE [25,26] 


#### Refined cost equations start/3 
* CE 19: start(V1,V,V2) = 0+ plus(V1,W2,V1):1
     [V1>=0,W2=0,V=0] 
* CE 20: start(V1,V,V2) = 0+ plus(V1,W2,X2):2
     [X2>=V1+1,V1>=0,X2=V1+W2,X2=V1+V] 
* CE 21: start(V1,V,V2) = 1+ plus(W2,X2,Y2):1
     [Y2=0,X2=0,W2=0,V1=0] 
* CE 22: start(V1,V,V2) = 1+ plus(W2,X2,Y2):2
     [Y2>=2,Y2=2*X2,Y2=2*W2,Y2=2*V1] 
* CE 23: start(V1,V,V2) = 0+ f(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 24: start(V1,V,V2) = 0+ f(W2,X2,V2,Y2):2
     [V2>=1,Y2=0,X2=1,W2=0,V=1,V1=0] 
* CE 25: start(V1,V,V2) = 0+ g(V1,V,V1):1
     [V1>=0,V>=0] 
* CE 26: start(V1,V,V2) = 0+ g(V1,V,V):2
     [V>=0,V1>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [22] --> Loop 15 
* CEs [19,20,23,25,26] --> Loop 16 
* CEs [21,24] --> Loop 17 

#### Loops of start/3 
* Loop 15: start(V1,V,V2) [V1>=1] 
* Loop 16: start(V1,V,V2) [V>=0,V1>=0] 
* Loop 17: start(V1,V,V2) [V1=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [17]
* [16]
* [15]


### Merging Chains  start/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [9]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of chains of plus(V1,V,Out):
* Chain [[9],8]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [V+V1=Out,V1>=0,V>=1] 

* Chain [8]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of chains of f(V1,V,V2,Out):
* Chain [12]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 

* Chain [11,12]: 3
  with precondition: [V1=0,V=1,V2=0,Out=0] 

* Chain [10,12]: 1*s(1)+3
  Such that:s(1) =< V2

  with precondition: [V1=0,V=1,Out=0,V2>=1] 


#### Cost of chains of g(V1,V,Out):
* Chain [14]: 1
  with precondition: [V1=Out,V1>=0,V>=0] 

* Chain [13]: 1
  with precondition: [V=Out,V1>=0,V>=0] 


#### Cost of chains of start(V1,V,V2):
* Chain [17]: 1*s(2)+3
  Such that:s(2) =< V2

  with precondition: [V1=0] 

* Chain [16]: 1*s(3)+3
  Such that:s(3) =< V

  with precondition: [V1>=0,V>=0] 

* Chain [15]: 1*s(4)+2
  Such that:s(4) =< V1

  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [17] with precondition: [V1=0] 
    - Upper bound: nat(V2)+3 
    - Complexity: n 
* Chain [16] with precondition: [V1>=0,V>=0] 
    - Upper bound: V+3 
    - Complexity: n 
* Chain [15] with precondition: [V1>=1] 
    - Upper bound: V1+2 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): max([V1,nat(V)+1,nat(V2)+1])+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 44 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 97 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 286 ms.

