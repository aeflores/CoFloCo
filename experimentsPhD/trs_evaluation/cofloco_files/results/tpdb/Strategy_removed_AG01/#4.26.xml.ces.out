
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. non_recursive  : [p/2]
2. recursive  : [if/4,minus/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into p/2
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations le/3 
* CE 14: le(V,V2,Out) = 1+ le(W2,X2,Out)
     [X2>=0,W2>=0,X2+1=V2,W2+1=V] 
* CE 15: le(V,V2,Out) = 1
     [V>=1,Out=0,V2=0] 
* CE 16: le(V,V2,Out) = 1
     [V2>=0,Out=1,V=0] 

### Cost equations --> "Loop" of le/3 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of le/3 
* Loop 10: le(V,V2,Out) [V>=1,Out=0,V2=0] 
* Loop 11: le(V,V2,Out) [V2>=0,Out=1,V=0] 
* Loop 12: le(V,V2,Out)->  le(V',V2',Out)
                  [V2'>=0,V'>=0,V2'+1=V2,V'+1=V] 

### Ranking functions of CR le(V,V2,Out) 
* RF of phase [12]: [V,V2]

#### Partial ranking functions of CR le(V,V2,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V
    V2


### Resulting Chains:le(V,V2,Out) 
* [[12],11]
* [[12],10]
* [11]
* [10]


### Merging Chains  le/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[10,[12]]] --> 3 
* [[11,[12]]] --> 4 


### Specialization of cost equations p/2 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations p/2 
* CE 17: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 18: p(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of p/2 
* CEs [17] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of p/2 
* Loop 13: p(V,Out) [V>=1,V=Out+1] 
* Loop 14: p(V,Out) [Out=0,V=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [14]
* [13]


### Merging Chains  p/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations minus/3 
* CE 10 is refined into CE [19,20] 
* CE 9 is refined into CE [21,22] 


#### Refined cost equations minus/3 
* CE 19: minus(V,V2,Out) = 2+ le(W2,V2,X2):1
     [V2>=0,X2=1,W2=0,Out=0,V=0] 
* CE 20: minus(V,V2,Out) = 2+ le(V,V2,W2):4
     [V2>=V,V>=1,W2=1,Out=0] 
* CE 21: minus(V,V2,Out) = 2+ le(W2,X2,Y2):2+ p(Z2,A3):2+ minus(A3,B3,C3)
     [A3>=0,A3+1=Z2,A3+1=W2,C3+1=Out,A3+1=V,B3=0,Y2=0,X2=0,V2=0] 
* CE 22: minus(V,V2,Out) = 2+ le(W2,V2,X2):3+ p(Y2,Z2):2+ minus(Z2,V2,A3)
     [Z2>=V2,V2>=1,Z2+1=Y2,Z2+1=W2,A3+1=Out,Z2+1=V,X2=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [22] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of minus/3 
* Loop 15: minus(V,V2,Out)->  minus(V',V2,Out')
                  [V>=V2+1,V2>=1,Out=Out'+1,V=V'+1] 
* Loop 16: minus(V,V2,Out)->  minus(V',V2',Out')
                  [V>=1,Out=Out'+1,V=V'+1,V2'=0,V2=0] 
* Loop 17: minus(V,V2,Out) [V2>=V,V>=1,Out=0] 
* Loop 18: minus(V,V2,Out) [V2>=0,Out=0,V=0] 

### Ranking functions of CR minus(V,V2,Out) 
* RF of phase [15]: [V-1,V-V2]
* RF of phase [16]: [V]

#### Partial ranking functions of CR minus(V,V2,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V-1
    V-V2
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V


### Resulting Chains:minus(V,V2,Out) 
* [[16],18]
* [[15],17]
* [18]
* [17]


### Merging Chains  minus/3 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[16]]] --> 2 
* [[17]] --> 3 
* [[17,[15]]] --> 4 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [23] 
* CE 2 is refined into CE [24,25,26,27,28] 
* CE 4 is refined into CE [29,30] 
* CE 5 is refined into CE [31,32,33,34] 
* CE 6 is refined into CE [35,36,37,38] 


#### Refined cost equations start/3 
* CE 23: start(V,V2,V11) = 1
     [V11>=0,V2>=0,V=1] 
* CE 24: start(V,V2,V11) = 1+ p(W11,X11):1+ minus(Y11,V11,Z11):1
     [V11>=0,Z11=0,Y11=0,X11=0,W11=0,V2=0,V=0] 
* CE 25: start(V,V2,V11) = 1+ p(W11,X11):2+ minus(Y11,V11,Z11):1
     [V11>=0,Z11=0,Y11=0,X11=0,W11=1,V2=1,V=0] 
* CE 26: start(V,V2,V11) = 1+ p(W11,X11):2+ minus(X11,Y11,X11):2
     [X11>=1,X11+1=W11,X11+1=V2,Y11=0,V11=0,V=0] 
* CE 27: start(V,V2,V11) = 1+ p(W11,X11):2+ minus(X11,V11,Y11):3
     [V11>=X11,X11>=1,X11+1=W11,X11+1=V2,Y11=0,V=0] 
* CE 28: start(V,V2,V11) = 1+ p(W11,X11):2+ minus(Y11,V11,Z11):4
     [Z11>=1,V11>=1,V11+Z11=Y11,V11+Z11=X11,V11+Z11+1=W11,V11+Z11+1=V2,V=0] 
* CE 29: start(V,V2,V11) = 0+ p(W11,X11):1
     [X11=0,W11=0,V=0] 
* CE 30: start(V,V2,V11) = 0+ p(W11,X11):2
     [X11>=0,X11+1=W11,X11+1=V] 
* CE 31: start(V,V2,V11) = 0+ le(W11,V2,X11):1
     [V2>=0,X11=1,W11=0,V=0] 
* CE 32: start(V,V2,V11) = 0+ le(V,W11,X11):2
     [V>=1,X11=0,W11=0,V2=0] 
* CE 33: start(V,V2,V11) = 0+ le(V,V2,W11):3
     [V>=V2+1,V2>=1,W11=0] 
* CE 34: start(V,V2,V11) = 0+ le(V,V2,W11):4
     [V2>=V,V>=1,W11=1] 
* CE 35: start(V,V2,V11) = 0+ minus(W11,V2,X11):1
     [V2>=0,X11=0,W11=0,V=0] 
* CE 36: start(V,V2,V11) = 0+ minus(V,W11,V):2
     [V>=1,W11=0,V2=0] 
* CE 37: start(V,V2,V11) = 0+ minus(V,V2,W11):3
     [V2>=V,V>=1,W11=0] 
* CE 38: start(V,V2,V11) = 0+ minus(W11,V2,X11):4
     [X11>=1,V2>=1,V2+X11=W11,V2+X11=V] 

### Cost equations --> "Loop" of start/3 
* CEs [32,36] --> Loop 19 
* CEs [23,30,33,34,37,38] --> Loop 20 
* CEs [24,25,26,27,28,29,31,35] --> Loop 21 

#### Loops of start/3 
* Loop 19: start(V,V2,V11) [V>=1,V2=0] 
* Loop 20: start(V,V2,V11) [V>=1] 
* Loop 21: start(V,V2,V11) [V=0] 

### Ranking functions of CR start(V,V2,V11) 

#### Partial ranking functions of CR start(V,V2,V11) 


### Resulting Chains:start(V,V2,V11) 
* [21]
* [20]
* [19]


### Merging Chains  start/3 into  External patterns of execution 
* [[21]] --> 1 
* [[19],[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:le(V,V2,Out) -> [le(V',V2',Out')] 
1
#### Cost of phase [12]:le(V,V2,Out) -> [le(V',V2',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V2
it(12) =< V2-V2'

#### Cost of phase [12]:le(V,V2,Out) -> [le(V',V2',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'
it(12) =< V2
it(12) =< V2-V2'

#### Cost of chains of le(V,V2,Out):
* Chain [[12],11]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=1,V>=1,V2>=V] 

* Chain [[12],10]: 1*it(12)+1
  Such that:it(12) =< V2

  with precondition: [Out=0,V2>=1,V>=V2+1] 

* Chain [11]: 1
  with precondition: [V=0,Out=1,V2>=0] 

* Chain [10]: 1
  with precondition: [V2=0,Out=0,V>=1] 


#### Cost of chains of p(V,Out):
* Chain [14]: 1
  with precondition: [V=0,Out=0] 

* Chain [13]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [16] 

 * loop 16:minus(V,V2,Out) -> [minus(V',V2',Out')] 
4
#### Cost of phase [16]:minus(V,V2,Out) -> [minus(V',V2',Out')] 
4*it(16)+0
  Such that:it(16) =< V
it(16) =< V-V'

#### Cost of loops [15] 

 * loop 15:minus(V,V2,Out) -> [minus(V',V2',Out')] 
1*s(3)+4
  Such that:s(3) =< V2'

#### Cost of phase [15]:minus(V,V2,Out) -> [minus(V',V2',Out')] 
4*it(15)+1*s(4)+0
  Such that:it(15) =< V
it(15) =< V-V2
it(15) =< V-V2-V'+V2'
it(15) =< V-V'
aux(1) =< V2
s(4) =< it(15)*aux(1)

#### Cost of chains of minus(V,V2,Out):
* Chain [[16],18]: 4*it(16)+3
  Such that:it(16) =< Out

  with precondition: [V2=0,V=Out,V>=1] 

* Chain [[15],17]: 4*it(15)+1*s(1)+1*s(4)+3
  Such that:it(15) =< Out
aux(2) =< V-Out
s(1) =< aux(2)
s(4) =< it(15)*aux(2)

  with precondition: [V=Out+V2,V2>=1,V>=V2+1] 

* Chain [18]: 3
  with precondition: [V=0,Out=0,V2>=0] 

* Chain [17]: 1*s(1)+3
  Such that:s(1) =< V

  with precondition: [Out=0,V>=1,V2>=V] 


#### Cost of chains of start(V,V2,V11):
* Chain [21]: 5*s(5)+4*s(7)+1*s(9)+1*s(10)+5
  Such that:s(7) =< V2-V11
s(8) =< V11
aux(3) =< V2
s(5) =< aux(3)
s(9) =< s(8)
s(10) =< s(7)*s(8)

  with precondition: [V=0] 

* Chain [20]: 2*s(11)+2*s(12)+4*s(14)+1*s(17)+3
  Such that:s(14) =< V-V2
aux(4) =< V
aux(5) =< V2
s(12) =< aux(4)
s(11) =< aux(5)
s(17) =< s(14)*aux(5)

  with precondition: [V>=1] 

* Chain [19]: 4*s(18)+3
  Such that:s(18) =< V

  with precondition: [V2=0,V>=1] 


Closed-form bounds of start(V,V2,V11): 
-------------------------------------
* Chain [21] with precondition: [V=0] 
    - Upper bound: nat(V2)*5+5+nat(V11)+nat(V2-V11)*nat(V11)+nat(V2-V11)*4 
    - Complexity: n^2 
* Chain [20] with precondition: [V>=1] 
    - Upper bound: 2*V+3+nat(V2)*2+nat(V-V2)*nat(V2)+nat(V-V2)*4 
    - Complexity: n^2 
* Chain [19] with precondition: [V2=0,V>=1] 
    - Upper bound: 4*V+3 
    - Complexity: n 

### Maximum cost of start(V,V2,V11): max([2*V+max([2*V,nat(V-V2)*nat(V2)+nat(V2)*2+nat(V-V2)*4]),nat(V2)*5+2+nat(V11)+nat(V2-V11)*nat(V11)+nat(V2-V11)*4])+3 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 35 ms.
* Invariants computed in 62 ms.
   - Backward Invariants 31 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 150 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 152 ms.
   - Equation cost structures 62 ms.
   - Phase cost structures 44 ms.
   - Chain cost structures 39 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 469 ms.

