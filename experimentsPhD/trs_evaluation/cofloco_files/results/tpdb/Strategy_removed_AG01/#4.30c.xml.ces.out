
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [minus/3]
2. recursive  : [fun/4,gcd/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into gcd/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 16 is refined into CE [17] 
* CE 15 is refined into CE [18] 
* CE 14 is refined into CE [19] 


#### Refined cost equations le/3 
* CE 17: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 18: le(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 19: le(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of le/3 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of le/3 
* Loop 13: le(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 14: le(V1,V,Out) [V>=0,Out=1,V1=0] 
* Loop 15: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [15]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[15],14]
* [[15],13]
* [14]
* [13]


### Merging Chains  le/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[13,[15]]] --> 3 
* [[14,[15]]] --> 4 


### Specialization of cost equations minus/3 
* CE 9 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 


#### Refined cost equations minus/3 
* CE 20: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 21: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 22: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of minus/3 
* Loop 16: minus(A,B,A) [A>=0,B=0] 
* Loop 17: minus(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 18: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[18],17]
* [[18],16]
* [17]
* [16]


### Merging Chains  minus/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[17,[18]]] --> 3 
* [[16,[18]]] --> 4 


### Specialization of cost equations gcd/3 
* CE 13 is refined into CE [23] 
* CE 12 is refined into CE [24] 
* CE 11 is refined into CE [25,26,27,28] 
* CE 10 is refined into CE [29,30] 


#### Refined cost equations gcd/3 
* CE 23: gcd(A,B,A) = 1
     [A>=1,B=0] 
* CE 24: gcd(A,B,B) = 1
     [B>=0,A=0] 
* CE 25: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(Z1,A2,B2):3+ gcd(C2,D2,Out)
     [D2=1,C2=0,B2=0,A2=1,Z1=1,Y1=1,X1=0,W1=0,V=1,V1=1] 
* CE 26: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(Z1,A2,X1):4+ gcd(X1,B2,Out)
     [X1>=0,X1+1=Z1,X1+1=V1,B2=1,A2=1,Y1=1,W1=0,V=1] 
* CE 27: gcd(A,A,B) = 2+ le(C,D,E):4+ minus(A,A,F):3+ gcd(G,A,B)
     [A>=2,A=D+1,A=C+1,G=0,F=0,E=1] 
* CE 28: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(Z1,V,A2):4+ gcd(A2,V,Out)
     [A2>=0,V>=2,V+A2=Z1,V+A2=X1+1,V+A2=V1,V=W1+1,Y1=1] 
* CE 29: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(Z1,A2,W1):4+ gcd(W1,B2,Out)
     [W1>=1,W1+1=Z1,W1+1=V,B2=1,A2=1,Y1=0,X1=0,V1=1] 
* CE 30: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):3+ minus(Z1,V1,A2):4+ gcd(A2,V1,Out)
     [A2>=1,V1>=2,V1+A2=Z1,V1+A2=W1+1,V1+A2=V,V1=X1+1,Y1=0] 

### Cost equations --> "Loop" of gcd/3 
* CEs [30] --> Loop 19 
* CEs [27,28] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [25,26] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

#### Loops of gcd/3 
* Loop 19: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,V1+A'=V] 
* Loop 20: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V+V1'=V1] 
* Loop 21: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V=V1'+1,V'=1,V1=1] 
* Loop 22: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 23: gcd(A,B,A) [A>=1,B=0] 
* Loop 24: gcd(A,B,B) [B>=0,A=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [19,20]: [V1+V-3]
* RF of phase [22]: [V1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [19,20]:
  - RF of loop [19:1]:
    V-2
    V1/2+V/2-2
  - RF of loop [20:1]:
    V1-1 depends on loops [19:1] 
    V1-V+1 depends on loops [19:1] 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V1


### Resulting Chains:gcd(V1,V,Out) 
* [[22],24]
* [[19,20],24]
* [[19,20],21,[22],24]
* [24]
* [23]
* [21,[22],24]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[22],21]] --> 2 
* [[23]] --> 3 
* [[24,[22]]] --> 4 
* [[24,[22],21,[19,20]]] --> 5 
* [[24,[19,20]]] --> 6 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [31,32,33,34,35,36,37,38,39] 
* CE 2 is refined into CE [40,41,42,43,44,45,46,47,48] 
* CE 4 is refined into CE [49,50,51,52] 
* CE 5 is refined into CE [53,54,55,56] 
* CE 6 is refined into CE [57,58,59,60,61,62] 


#### Refined cost equations start/3 
* CE 31: start(V1,V,V15) = 1+ minus(W15,V15,X15):1+ gcd(Y15,V15,V15):1
     [V15>=0,Y15=0,X15=0,W15=0,V=0,V1=1] 
* CE 32: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,A16,B16):1
     [B16=0,A16=0,Z15=0,Y15=0,X15=0,W15=0,V15=0,V=0,V1=1] 
* CE 33: start(V1,V,V15) = 1+ minus(V,W15,V):2+ gcd(V,X15,V):3
     [V>=1,X15=0,W15=0,V15=0,V1=1] 
* CE 34: start(V1,V,V15) = 1+ minus(V,V15,W15):3+ gcd(X15,V15,V15):1
     [V15>=V,V>=1,X15=0,W15=0,V1=1] 
* CE 35: start(A,B,B) = 1+ minus(B,B,C):4+ gcd(D,B,B):1
     [B>=1,D=0,C=0,A=1] 
* CE 36: start(V1,V,V15) = 1+ minus(W15,V15,X15):4+ gcd(Y15,V15,Z15):2
     [V15>=2,V15+1=W15,V15+1=V,Z15=1,Y15=1,X15=1,V1=1] 
* CE 37: start(V1,V,V15) = 1+ minus(W15,X15,Y15):4+ gcd(Y15,Z15,A16):4
     [Y15>=1,Y15+1=W15,Y15+1=V,A16=1,Z15=1,X15=1,V15=1,V1=1] 
* CE 38: start(V1,V,V15) = 1+ minus(W15,V15,X15):4+ gcd(X15,V15,Y15):5
     [V15+X15>=5,V15>=2,X15>=2,V15+X15=W15,V15+X15=V,Y15=1,V1=1] 
* CE 39: start(V1,V,V15) = 1+ minus(W15,V15,X15):4+ gcd(X15,V15,Y15):6
     [V15>=Y15,X15>=Y15,Y15>=2,V15+X15=W15,V15+X15=V,V1=1] 
* CE 40: start(V1,V,V15) = 1+ minus(W15,V,X15):1+ gcd(Y15,V,V):1
     [V>=0,Y15=0,X15=0,W15=0,V15=0,V1=0] 
* CE 41: start(V1,V,V15) = 1+ minus(W15,X15,Y15):2+ gcd(Z15,A16,B16):1
     [B16=0,A16=0,Z15=0,Y15=0,X15=0,W15=0,V15=0,V=0,V1=0] 
* CE 42: start(V1,V,V15) = 1+ minus(V15,W15,V15):2+ gcd(V15,X15,V15):3
     [V15>=1,X15=0,W15=0,V=0,V1=0] 
* CE 43: start(V1,V,V15) = 1+ minus(V15,V,W15):3+ gcd(X15,V,V):1
     [V>=V15,V15>=1,X15=0,W15=0,V1=0] 
* CE 44: start(A,B,B) = 1+ minus(B,B,C):4+ gcd(D,B,B):1
     [B>=1,D=0,C=0,A=0] 
* CE 45: start(V1,V,V15) = 1+ minus(W15,V,X15):4+ gcd(Y15,V,Z15):2
     [V>=2,V+1=W15,V+1=V15,Z15=1,Y15=1,X15=1,V1=0] 
* CE 46: start(V1,V,V15) = 1+ minus(W15,X15,Y15):4+ gcd(Y15,Z15,A16):4
     [Y15>=1,Y15+1=W15,Y15+1=V15,A16=1,Z15=1,X15=1,V=1,V1=0] 
* CE 47: start(V1,V,V15) = 1+ minus(W15,V,X15):4+ gcd(X15,V,Y15):5
     [V+X15>=5,V>=2,X15>=2,V+X15=W15,V+X15=V15,Y15=1,V1=0] 
* CE 48: start(V1,V,V15) = 1+ minus(W15,V,X15):4+ gcd(X15,V,Y15):6
     [V>=Y15,X15>=Y15,Y15>=2,V+X15=W15,V+X15=V15,V1=0] 
* CE 49: start(V1,V,V15) = 0+ le(W15,V,X15):1
     [V>=0,X15=1,W15=0,V1=0] 
* CE 50: start(V1,V,V15) = 0+ le(V1,W15,X15):2
     [V1>=1,X15=0,W15=0,V=0] 
* CE 51: start(V1,V,V15) = 0+ le(V1,V,W15):3
     [V1>=V+1,V>=1,W15=0] 
* CE 52: start(V1,V,V15) = 0+ le(V1,V,W15):4
     [V>=V1,V1>=1,W15=1] 
* CE 53: start(V1,V,V15) = 0+ minus(W15,V,X15):1
     [V>=0,X15=0,W15=0,V1=0] 
* CE 54: start(V1,V,V15) = 0+ minus(V1,W15,V1):2
     [V1>=0,W15=0,V=0] 
* CE 55: start(V1,V,V15) = 0+ minus(V1,V,W15):3
     [V>=V1,V1>=1,W15=0] 
* CE 56: start(V1,V,V15) = 0+ minus(W15,V,X15):4
     [X15>=0,V>=1,V+X15=W15,V+X15=V1] 
* CE 57: start(V1,V,V15) = 0+ gcd(W15,V,V):1
     [V>=0,W15=0,V1=0] 
* CE 58: start(V1,V,V15) = 0+ gcd(W15,V,X15):2
     [V>=2,X15=1,W15=1,V1=1] 
* CE 59: start(V1,V,V15) = 0+ gcd(V1,W15,V1):3
     [V1>=1,W15=0,V=0] 
* CE 60: start(V1,V,V15) = 0+ gcd(V1,W15,X15):4
     [V1>=1,X15=1,W15=1,V=1] 
* CE 61: start(V1,V,V15) = 0+ gcd(V1,V,W15):5
     [V1+V>=5,V>=2,V1>=2,W15=1] 
* CE 62: start(V1,V,V15) = 0+ gcd(V1,V,W15):6
     [V>=W15,V1>=W15,W15>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [61,62] --> Loop 25 
* CEs [51,56,60] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [34,35] --> Loop 28 
* CEs [37,38,39,58] --> Loop 29 
* CEs [33,52,55] --> Loop 30 
* CEs [31,32] --> Loop 31 
* CEs [44] --> Loop 32 
* CEs [45] --> Loop 33 
* CEs [46] --> Loop 34 
* CEs [42,50,54,59] --> Loop 35 
* CEs [40,41,43,47,48,49,53,57] --> Loop 36 

#### Loops of start/3 
* Loop 25: start(V1,V,V15) [V>=2,V1>=2] 
* Loop 26: start(V1,V,V15) [V1>=V,V>=1] 
* Loop 27: start(V1,V,V15) [V>=3,V=V15+1,V1=1] 
* Loop 28: start(V1,V,V15) [V15>=V,V>=1,V1=1] 
* Loop 29: start(V1,V,V15) [V>=2,V1=1] 
* Loop 30: start(V1,V,V15) [V>=V1,V1>=1] 
* Loop 31: start(V1,V,V15) [V15>=0,V=0,V1=1] 
* Loop 32: start(A,B,B) [B>=1,A=0] 
* Loop 33: start(V1,V,V15) [V>=2,V+1=V15,V1=0] 
* Loop 34: start(V1,V,V15) [V15>=2,V=1,V1=0] 
* Loop 35: start(V1,V,V15) [V1>=0,V=0] 
* Loop 36: start(V1,V,V15) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V,V15) 

#### Partial ranking functions of CR start(V1,V,V15) 


### Resulting Chains:start(V1,V,V15) 
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]


### Merging Chains  start/3 into  External patterns of execution 
* [[34],[36]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 
* [[31],[35]] --> 4 
* [[27],[29],[30]] --> 5 
* [[28]] --> 6 
* [[25]] --> 7 
* [[26]] --> 8 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [15]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
it(15) =< V
it(15) =< V-V'

#### Cost of phase [15]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
it(15) =< V
it(15) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[15],14]: 1*it(15)+1
  Such that:it(15) =< V1

  with precondition: [Out=1,V1>=1,V>=V1] 

* Chain [[15],13]: 1*it(15)+1
  Such that:it(15) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [14]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [18] 

 * loop 18:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [18]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[18],17]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[18],16]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [17]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [16]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [22] 

 * loop 22:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6
#### Cost of phase [22]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
6*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'

#### Cost of loops [19,20] 

 * loop 19:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*s(6)+4
  Such that:s(5) =< V'
s(6) =< s(5)

 * loop 20:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*s(12)+4
  Such that:s(11) =< V'
s(12) =< s(11)

#### Cost of phase [19,20]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(19)+4*it(20)+2*s(13)+4*s(15)+0
  Such that:aux(9) =< V1-V+1
aux(8) =< 2*V
aux(8) =< 2*V-2*V'
aux(20) =< V1
aux(21) =< V1+V
aux(22) =< V1+V-V1'-V'
aux(23) =< V1-V1'
aux(24) =< V1/2+V/2
aux(25) =< V1/2+V/2-V1'/2-V'/2
aux(26) =< V
aux(27) =< V-V'
it(19) =< aux(21)
it(20) =< aux(21)
s(14) =< aux(21)
it(19) =< aux(22)
it(20) =< aux(22)
s(14) =< aux(22)
it(19) =< aux(24)
it(20) =< aux(24)
it(19) =< aux(25)
it(20) =< aux(25)
aux(6) =< aux(26)
it(19) =< aux(26)
aux(6) =< aux(27)
it(19) =< aux(27)
it(20) =< aux(8)+aux(9)
it(20) =< aux(6)+aux(20)
s(16) =< aux(6)+aux(23)
s(16) =< aux(6)+aux(20)
it(20) =< aux(6)+aux(23)
s(16) =< it(20)*aux(26)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of phase [19,20]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(19)+4*it(20)+2*s(13)+4*s(15)+0
  Such that:aux(9) =< V1-V+1
aux(8) =< 2*V
aux(8) =< 2*V-2*V'
aux(20) =< V1
aux(21) =< V1+V
aux(22) =< V1+V-V1'-V'
aux(23) =< V1-V1'
aux(24) =< V1/2+V/2
aux(25) =< V1/2+V/2-V1'/2-V'/2
aux(26) =< V
aux(27) =< V-V'
it(19) =< aux(21)
it(20) =< aux(21)
s(14) =< aux(21)
it(19) =< aux(22)
it(20) =< aux(22)
s(14) =< aux(22)
it(19) =< aux(24)
it(20) =< aux(24)
it(19) =< aux(25)
it(20) =< aux(25)
aux(6) =< aux(26)
it(19) =< aux(26)
aux(6) =< aux(27)
it(19) =< aux(27)
it(20) =< aux(8)+aux(9)
it(20) =< aux(6)+aux(20)
s(16) =< aux(6)+aux(23)
s(16) =< aux(6)+aux(20)
it(20) =< aux(6)+aux(23)
s(16) =< it(20)*aux(26)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[22],24]: 6*it(22)+1
  Such that:it(22) =< V1

  with precondition: [V=1,Out=1,V1>=1] 

* Chain [[19,20],24]: 4*it(19)+4*it(20)+2*s(13)+4*s(15)+1
  Such that:aux(9) =< V1-V+1
aux(21) =< V1+V
aux(22) =< V1+V-Out
aux(24) =< V1/2+V/2
aux(25) =< V1/2+V/2-Out/2
aux(26) =< V
aux(27) =< V-Out
aux(8) =< 2*V-2*Out
aux(28) =< V1
it(19) =< aux(21)
it(20) =< aux(21)
s(14) =< aux(21)
it(19) =< aux(22)
it(20) =< aux(22)
s(14) =< aux(22)
it(19) =< aux(24)
it(20) =< aux(24)
it(19) =< aux(25)
it(20) =< aux(25)
aux(6) =< aux(26)
it(19) =< aux(26)
aux(6) =< aux(27)
it(19) =< aux(27)
it(20) =< aux(8)+aux(9)
it(20) =< aux(6)+aux(28)
s(16) =< aux(6)+aux(28)
s(16) =< it(20)*aux(26)
s(15) =< s(16)
s(13) =< s(14)

  with precondition: [Out>=2,V1>=Out,V>=Out] 

* Chain [[19,20],21,[22],24]: 4*it(19)+4*it(20)+6*it(22)+2*s(13)+4*s(15)+1*s(17)+5
  Such that:s(17) =< 1
aux(9) =< V1-V+1
aux(24) =< V1/2+V/2
aux(8) =< 2*V
aux(29) =< V1
aux(30) =< V1+V
aux(31) =< V
it(22) =< aux(31)
it(19) =< aux(30)
it(20) =< aux(30)
it(19) =< aux(24)
it(20) =< aux(24)
it(19) =< aux(31)
it(20) =< aux(8)+aux(9)
it(20) =< aux(31)+aux(29)
s(16) =< aux(31)+aux(29)
s(16) =< it(20)*aux(31)
s(15) =< s(16)
s(13) =< aux(30)

  with precondition: [Out=1,V1>=2,V>=2,V+V1>=5] 

* Chain [24]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [23]: 1
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [21,[22],24]: 6*it(22)+1*s(17)+5
  Such that:s(17) =< 1
it(22) =< V

  with precondition: [V1=1,Out=1,V>=2] 


#### Cost of chains of start(V1,V,V15):
* Chain [36]: 5*s(18)+8*s(19)+1*s(20)+8*s(28)+8*s(29)+8*s(31)+7
  Such that:s(20) =< 1
aux(36) =< -2*V+V15+1
aux(37) =< -V+V15
aux(38) =< V
aux(39) =< 2*V
aux(40) =< V15
aux(41) =< V15/2
s(18) =< aux(40)
s(19) =< aux(38)
s(28) =< aux(40)
s(29) =< aux(40)
s(28) =< aux(41)
s(29) =< aux(41)
s(28) =< aux(38)
s(29) =< aux(39)+aux(36)
s(29) =< aux(38)+aux(37)
s(30) =< aux(38)+aux(37)
s(30) =< s(29)*aux(38)
s(31) =< s(30)

  with precondition: [V1=0,V>=0] 

* Chain [35]: 3
  with precondition: [V=0,V1>=0] 

* Chain [34]: 1*s(50)+6*s(51)+3
  Such that:s(50) =< 1
s(51) =< V15

  with precondition: [V1=0,V=1,V15>=2] 

* Chain [33]: 7*s(52)+1*s(53)+7
  Such that:s(53) =< 1
aux(42) =< V
s(52) =< aux(42)

  with precondition: [V1=0,V+1=V15,V>=2] 

* Chain [32]: 1*s(55)+3
  Such that:s(55) =< V15

  with precondition: [V1=0,V=V15,V>=1] 

* Chain [31]: 3
  with precondition: [V1=1,V=0,V15>=0] 

* Chain [30]: 2*s(56)+3
  Such that:aux(43) =< V1
s(56) =< aux(43)

  with precondition: [V1>=1,V>=V1] 

* Chain [29]: 3*s(58)+16*s(59)+8*s(60)+8*s(69)+8*s(70)+8*s(72)+7
  Such that:aux(48) =< 1
aux(49) =< V
aux(50) =< V-2*V15+1
aux(51) =< V-V15
aux(52) =< V/2
aux(53) =< V15
aux(54) =< 2*V15
s(58) =< aux(48)
s(59) =< aux(49)
s(60) =< aux(53)
s(69) =< aux(49)
s(70) =< aux(49)
s(69) =< aux(52)
s(70) =< aux(52)
s(69) =< aux(53)
s(70) =< aux(54)+aux(50)
s(70) =< aux(53)+aux(51)
s(71) =< aux(53)+aux(51)
s(71) =< s(70)*aux(53)
s(72) =< s(71)

  with precondition: [V1=1,V>=2] 

* Chain [28]: 1*s(93)+1*s(94)+3
  Such that:s(93) =< V
s(94) =< V15

  with precondition: [V1=1,V>=1,V15>=V] 

* Chain [27]: 7*s(95)+1*s(96)+7
  Such that:s(96) =< 1
aux(55) =< V
s(95) =< aux(55)

  with precondition: [V1=1,V=V15+1,V>=3] 

* Chain [26]: 2*s(98)+6*s(100)+1
  Such that:s(100) =< V1
aux(56) =< V
s(98) =< aux(56)

  with precondition: [V>=1,V1>=V] 

* Chain [25]: 1*s(101)+6*s(108)+8*s(109)+8*s(110)+8*s(112)+4*s(113)+5
  Such that:s(101) =< 1
aux(60) =< V1
aux(61) =< V1-V+1
aux(62) =< V1+V
aux(63) =< V1/2+V/2
aux(64) =< V
aux(65) =< 2*V
s(108) =< aux(64)
s(109) =< aux(62)
s(110) =< aux(62)
s(109) =< aux(63)
s(110) =< aux(63)
s(109) =< aux(64)
s(110) =< aux(65)+aux(61)
s(110) =< aux(64)+aux(60)
s(111) =< aux(64)+aux(60)
s(111) =< s(110)*aux(64)
s(112) =< s(111)
s(113) =< aux(62)

  with precondition: [V1>=2,V>=2] 


Closed-form bounds of start(V1,V,V15): 
-------------------------------------
* Chain [36] with precondition: [V1=0,V>=0] 
    - Upper bound: 16*V+8+nat(V15)*21+nat(-V+V15)*8 
    - Complexity: n 
* Chain [35] with precondition: [V=0,V1>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [V1=0,V=1,V15>=2] 
    - Upper bound: 6*V15+4 
    - Complexity: n 
* Chain [33] with precondition: [V1=0,V+1=V15,V>=2] 
    - Upper bound: 7*V+8 
    - Complexity: n 
* Chain [32] with precondition: [V1=0,V=V15,V>=1] 
    - Upper bound: V15+3 
    - Complexity: n 
* Chain [31] with precondition: [V1=1,V=0,V15>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [30] with precondition: [V1>=1,V>=V1] 
    - Upper bound: 2*V1+3 
    - Complexity: n 
* Chain [29] with precondition: [V1=1,V>=2] 
    - Upper bound: 32*V+10+nat(V15)*16+nat(V-V15)*8 
    - Complexity: n 
* Chain [28] with precondition: [V1=1,V>=1,V15>=V] 
    - Upper bound: V+V15+3 
    - Complexity: n 
* Chain [27] with precondition: [V1=1,V=V15+1,V>=3] 
    - Upper bound: 7*V+8 
    - Complexity: n 
* Chain [26] with precondition: [V>=1,V1>=V] 
    - Upper bound: 6*V1+2*V+1 
    - Complexity: n 
* Chain [25] with precondition: [V1>=2,V>=2] 
    - Upper bound: 28*V1+34*V+6 
    - Complexity: n 

### Maximum cost of start(V1,V,V15): max([max([2*V1,nat(V15)*5+1+nat(V15)])+2,max([max([6*V1,5*V+5+max([2,7*V+max([28*V1+20*V,2*V+2+nat(V15)*16+max([nat(-V+V15)*8+nat(V15)*5,16*V+2+nat(V-V15)*8])])])])+V,nat(V15)+2])+V])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 52 ms.
* Invariants computed in 125 ms.
   - Backward Invariants 64 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 354 ms.
* Termination proved in 30 ms.
* Upper bounds computed in 346 ms.
   - Equation cost structures 115 ms.
   - Phase cost structures 183 ms.
   - Chain cost structures 61 ms.
   - Solving cost expressions 6 ms.
* Total analysis performed in 994 ms.

