
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f/2]
1. non_recursive  : [if/4]
2. recursive [multiple] : [g/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f/2
1. SCC is partially evaluated into if/4
2. SCC is partially evaluated into g/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/2 
* CE 8 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations f/2 
* CE 15: f(V,Out) = 0
     [V>=0,Out=0] 
* CE 16: f(V,Out) = 1
     [Out=1,V=1] 
* CE 17: f(V,Out) = 1
     [Out=2,V=0] 
* CE 18: f(V,Out) = 1+ f(W,Out)
     [W>=0,W+1=V] 

### Cost equations --> "Loop" of f/2 
* CEs [18] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of f/2 
* Loop 12: f(V,Out)->  f(V',Out)
                  [V'>=0,V'+1=V] 
* Loop 13: f(V,Out) [V>=0,Out=0] 
* Loop 14: f(V,Out) [Out=1,V=1] 
* Loop 15: f(V,Out) [Out=2,V=0] 

### Ranking functions of CR f(V,Out) 
* RF of phase [12]: [V]

#### Partial ranking functions of CR f(V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V


### Resulting Chains:f(V,Out) 
* [[12],15]
* [[12],14]
* [[12],13]
* [15]
* [14]
* [13]


### Merging Chains  f/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13],[13,[12]]] --> 3 
* [[14,[12]]] --> 4 
* [[15,[12]]] --> 5 


### Specialization of cost equations if/4 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations if/4 
* CE 19: if(V,V2,V4,Out) = 0
     [V4>=0,V2>=0,V>=0,Out=0] 
* CE 20: if(A,B,C,B) = 1
     [C>=0,B>=0,A=2] 
* CE 21: if(A,B,C,C) = 1
     [C>=0,B>=0,A=1] 

### Cost equations --> "Loop" of if/4 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of if/4 
* Loop 16: if(V,V2,V4,Out) [V4>=0,V2>=0,V>=0,Out=0] 
* Loop 17: if(A,B,C,B) [C>=0,B>=0,A=2] 
* Loop 18: if(A,B,C,C) [C>=0,B>=0,A=1] 

### Ranking functions of CR if(V,V2,V4,Out) 

#### Partial ranking functions of CR if(V,V2,V4,Out) 


### Resulting Chains:if(V,V2,V4,Out) 
* [18]
* [17]
* [16]


### Merging Chains  if/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 


### Specialization of cost equations g/3 
* CE 12 is refined into CE [22,23,24,25,26,27,28,29,30] 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


#### Refined cost equations g/3 
* CE 22: g(V,V2,Out) = 1+ f(W2,X2):1+ if(Y2,Z2,V2,A3):2
     [V2>=1,A3=1,Z2=1,Y2=2,X2=2,W2=0,Out=1,V=1] 
* CE 23: g(V,V2,Out) = 1+ f(W2,X2):1+ if(Y2,Z2,V2,A3):3
     [V2>=1,A3=0,Z2=1,Y2=2,X2=2,W2=0,Out=0,V=1] 
* CE 24: g(A,B,B) = 1+ f(C,D):2+ if(E,F,B,B):1
     [B>=1,F=2,E=1,D=1,C=1,A=2] 
* CE 25: g(V,V2,Out) = 1+ f(W2,X2):2+ if(Y2,Z2,V2,A3):3
     [V2>=1,A3=0,Z2=2,Y2=1,X2=1,W2=1,Out=0,V=2] 
* CE 26: g(V,V2,Out) = 1+ f(W2,X2):3+ if(Y2,V,V2,Z2):3
     [V2>=1,V>=1,V=W2+1,Z2=0,Y2=0,X2=0,Out=0] 
* CE 27: g(A,B,B) = 1+ f(C,D):4+ if(E,A,B,B):1
     [B>=1,A>=3,A=C+1,E=1,D=1] 
* CE 28: g(V,V2,Out) = 1+ f(W2,X2):4+ if(Y2,V,V2,Z2):3
     [V2>=1,V>=3,V=W2+1,Z2=0,Y2=1,X2=1,Out=0] 
* CE 29: g(A,B,A) = 1+ f(C,D):5+ if(E,A,B,A):2
     [A>=2,B>=1,A=C+1,E=2,D=2] 
* CE 30: g(V,V2,Out) = 1+ f(W2,X2):5+ if(Y2,V,V2,Z2):3
     [V2>=1,V>=2,V=W2+1,Z2=0,Y2=2,X2=2,Out=0] 
* CE 31: g(V,V2,Out) = 0
     [V2>=0,V>=0,Out=0] 
* CE 32: g(V,V2,Out) = 1+ g(W2,X2,Y2)+ g(V,Y2,Out)
     [X2>=0,V>=0,X2+2=W2,X2+1=V2] 

### Cost equations --> "Loop" of g/3 
* CEs [32] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [22] --> Loop 24 
* CEs [23,26,28,30,31] --> Loop 25 

#### Loops of g/3 
* Loop 19: g(V,V2,Out)->  g(V',V2',Out')  g(V,Out',Out)
                  [V2'>=0,V>=0,V2'+2=V',V2'+1=V2] 
* Loop 20: g(A,B,B) [B>=1,A>=3] 
* Loop 21: g(A,B,A) [B>=1,A>=2] 
* Loop 22: g(A,B,B) [B>=1,A=2] 
* Loop 23: g(V,V2,Out) [V2>=1,Out=0,V=2] 
* Loop 24: g(V,V2,Out) [V2>=1,Out=1,V=1] 
* Loop 25: g(V,V2,Out) [V2>=0,V>=0,Out=0] 

### Ranking functions of CR g(V,V2,Out) 

#### Partial ranking functions of CR g(V,V2,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V2 depends on loops [19:2] 


### Resulting Chains:g(V,V2,Out) 
* [multiple([19],[[],[25],[24],[23],[22],[21],[20]])]...
* [25]
* [24]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  g/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23],[25]] --> 2 
* [[22]] --> 3 
* [[21]] --> 4 
* [[20]] --> 5 
* [[multiple([19],[[],[25],[24],[23],[22],[21],[20]])]] --> 6 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [33,34,35,36,37] 
* CE 3 is refined into CE [38,39,40] 
* CE 4 is refined into CE [41,42,43,44,45,46] 


#### Refined cost equations start/3 
* CE 33: start(V,V2,V4) = 0+ f(W4,X4):1
     [X4=2,W4=0,V=0] 
* CE 34: start(V,V2,V4) = 0+ f(W4,X4):2
     [X4=1,W4=1,V=1] 
* CE 35: start(V,V2,V4) = 0+ f(V,W4):3
     [V>=0,W4=0] 
* CE 36: start(V,V2,V4) = 0+ f(V,W4):4
     [V>=2,W4=1] 
* CE 37: start(V,V2,V4) = 0+ f(V,W4):5
     [V>=1,W4=2] 
* CE 38: start(V,V2,V4) = 0+ if(W4,V2,V4,V4):1
     [V4>=0,V2>=0,W4=1,V=1] 
* CE 39: start(V,V2,V4) = 0+ if(W4,V2,V4,V2):2
     [V2>=0,V4>=0,W4=2,V=2] 
* CE 40: start(V,V2,V4) = 0+ if(V,V2,V4,W4):3
     [V4>=0,V2>=0,V>=0,W4=0] 
* CE 41: start(V,V2,V4) = 0+ g(W4,V2,X4):1
     [V2>=1,X4=1,W4=1,V=1] 
* CE 42: start(V,V2,V4) = 0+ g(V,V2,W4):2
     [V2>=0,V>=0,W4=0] 
* CE 43: start(V,V2,V4) = 0+ g(W4,V2,V2):3
     [V2>=1,W4=2,V=2] 
* CE 44: start(V,V2,V4) = 0+ g(V,V2,V):4
     [V>=2,V2>=1] 
* CE 45: start(V,V2,V4) = 0+ g(V,V2,V2):5
     [V2>=1,V>=3] 
* CE 46: start(V,V2,V4) = 0+ g(V,V2,W4):6
     [V2>=1,V>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [46] --> Loop 26 
* CEs [43] --> Loop 27 
* CEs [39] --> Loop 28 
* CEs [34,38,41] --> Loop 29 
* CEs [33,35,36,37,40,42,44,45] --> Loop 30 

#### Loops of start/3 
* Loop 26: start(V,V2,V4) [V2>=1,V>=0] 
* Loop 27: start(V,V2,V4) [V2>=1,V=2] 
* Loop 28: start(V,V2,V4) [V4>=0,V2>=0,V=2] 
* Loop 29: start(V,V2,V4) [V=1] 
* Loop 30: start(V,V2,V4) [V>=0] 

### Ranking functions of CR start(V,V2,V4) 

#### Partial ranking functions of CR start(V,V2,V4) 


### Resulting Chains:start(V,V2,V4) 
* [30]
* [29]
* [28]
* [27]
* [26]...


### Merging Chains  start/3 into  External patterns of execution 
* [[29],[30]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:f(V,Out) -> [f(V',Out')] 
1
#### Cost of phase [12]:f(V,Out) -> [f(V',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:f(V,Out) -> [f(V',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:f(V,Out) -> [f(V',Out')] 
1*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of chains of f(V,Out):
* Chain [[12],15]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=2,V>=1] 

* Chain [[12],14]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=1,V>=2] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V

  with precondition: [Out=0,V>=1] 

* Chain [15]: 1
  with precondition: [V=0,Out=2] 

* Chain [14]: 1
  with precondition: [V=1,Out=1] 

* Chain [13]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of if(V,V2,V4,Out):
* Chain [18]: 1
  with precondition: [V=1,V4=Out,V2>=0,V4>=0] 

* Chain [17]: 1
  with precondition: [V=2,V2=Out,V2>=0,V4>=0] 

* Chain [16]: 0
  with precondition: [Out=0,V>=0,V2>=0,V4>=0] 


#### Cost of loops [19] 

 * loop 19:g(V,V2,Out) -> [g(V',V2',Out'),g(V'2,V2'2,Out'2)] 
1
#### Cost of phase [19]:g(V,V2,Out) -> [] 
1*it(19)+16*it([20])+3*s(7)+1*s(9)+1*s(10)+0
#### Cost of chains of g(V,V2,Out):
* Chain [multiple([19],[[],[25],[24],[23],[22],[21],[20]])]...: 1*it(19)+16*it([20])+3*s(7)+1*s(9)+1*s(10)+0
  with precondition: [V2>=1,V>=0] 

* Chain [25]: 3*s(2)+2
  Such that:aux(1) =< V
s(2) =< aux(1)

  with precondition: [Out=0,V>=0,V2>=0] 

* Chain [24]: 3
  with precondition: [V=1,Out=1,V2>=1] 

* Chain [23]: 2
  with precondition: [V=2,Out=0,V2>=1] 

* Chain [22]: 3
  with precondition: [V=2,V2=Out,V2>=1] 

* Chain [21]: 1*s(5)+3
  Such that:s(5) =< V

  with precondition: [V=Out,V>=2,V2>=1] 

* Chain [20]: 1*s(6)+3
  Such that:s(6) =< V

  with precondition: [V2=Out,V>=3,V2>=1] 


#### Cost of chains of start(V,V2,V4):
* Chain [30]: 8*s(13)+3
  Such that:aux(11) =< V
s(13) =< aux(11)

  with precondition: [V>=0] 

* Chain [29]: 3
  with precondition: [V=1] 

* Chain [28]: 1
  with precondition: [V=2,V2>=0,V4>=0] 

* Chain [27]: 3
  with precondition: [V=2,V2>=1] 

* Chain [26]...: 22*s(20)+0
  with precondition: [V>=0,V2>=1] 


Closed-form bounds of start(V,V2,V4): 
-------------------------------------
* Chain [30] with precondition: [V>=0] 
    - Upper bound: 8*V+3 
    - Complexity: n 
* Chain [29] with precondition: [V=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [28] with precondition: [V=2,V2>=0,V4>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [27] with precondition: [V=2,V2>=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26]... with precondition: [V>=0,V2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V2,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 57 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 63 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 36 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 171 ms.

