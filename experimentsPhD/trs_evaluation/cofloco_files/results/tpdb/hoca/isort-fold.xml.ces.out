
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun3/3]
1. recursive  : [fun1/4,fun2/5]
2. recursive [non_tail] : [fun/3]
3. non_recursive  : [main/2]
4. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun3/3
1. SCC is partially evaluated into fun1/4
2. SCC is partially evaluated into fun/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun3/3 
* CE 17 is refined into CE [18] 
* CE 16 is refined into CE [19] 
* CE 15 is refined into CE [20] 


#### Refined cost equations fun3/3 
* CE 18: fun3(V1,V,Out) = 1+ fun3(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 19: fun3(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 20: fun3(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of fun3/3 
* CEs [19] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of fun3/3 
* Loop 12: fun3(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 13: fun3(V1,V,Out) [V>=0,Out=1,V1=0] 
* Loop 14: fun3(V1,V,Out)->  fun3(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR fun3(V1,V,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR fun3(V1,V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:fun3(V1,V,Out) 
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[12,[14]]] --> 3 
* [[13,[14]]] --> 4 


### Specialization of cost equations fun1/4 
* CE 11 is refined into CE [21] 
* CE 9 is refined into CE [22,23] 
* CE 10 is refined into CE [24] 
* CE 8 is refined into CE [25,26] 


#### Refined cost equations fun1/4 
* CE 21: fun1(V1,V,V6,Out) = 0
     [V6>=0,V>=0,V1>=0,Out=0] 
* CE 22: fun1(V1,V,V6,Out) = 2+ fun3(W6,X6,Y6):1
     [V6>=X6+1,X6>=0,V6+1=Out,Y6=1,W6=0,V=0,V1=0] 
* CE 23: fun1(V1,V,V6,Out) = 2+ fun3(V,W6,X6):4
     [V6>=W6+1,W6>=V,V>=1,V+V6+1=Out,X6=1,V1=0] 
* CE 24: fun1(V1,V,V6,Out) = 1
     [V>=0,V+1=Out,V6=0,V1=0] 
* CE 25: fun1(V1,V,V6,Out) = 2+ fun3(V,W6,X6):2+ fun1(Y6,V,Z6,A7)
     [Z6>=0,V>=1,Out=A7+1,Z6+1=V6,Y6=0,X6=0,W6=0,V1=0] 
* CE 26: fun1(V1,V,V6,Out) = 2+ fun3(V,W6,X6):3+ fun1(Y6,V,Z6,A7)
     [V>=W6+1,Z6>=0,W6>=1,W6+A7+1=Out,W6+Z6+1=V6,Y6=0,X6=0,V1=0] 

### Cost equations --> "Loop" of fun1/4 
* CEs [26] --> Loop 15 
* CEs [25] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [22] --> Loop 20 

#### Loops of fun1/4 
* Loop 15: fun1(V1,V,V6,Out)->  fun1(V1',V,V6',Out')
                  [V+V6'>=V6,V6>=V6'+2,V6'>=0,V6+Out'=Out+V6',V1'=0,V1=0] 
* Loop 16: fun1(V1,V,V6,Out)->  fun1(V1',V,V6',Out')
                  [V6>=1,V>=1,Out=Out'+1,V6=V6'+1,V1'=0,V1=0] 
* Loop 17: fun1(V1,V,V6,Out) [V6>=0,V>=0,V1>=0,Out=0] 
* Loop 18: fun1(V1,V,V6,Out) [V6>=V+1,V>=1,V+V6+1=Out,V1=0] 
* Loop 19: fun1(V1,V,V6,Out) [V>=0,V+1=Out,V6=0,V1=0] 
* Loop 20: fun1(V1,V,V6,Out) [V6>=1,V6+1=Out,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,V6,Out) 
* RF of phase [15,16]: [V6]

#### Partial ranking functions of CR fun1(V1,V,V6,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    V6-1
  - RF of loop [16:1]:
    V6


### Resulting Chains:fun1(V1,V,V6,Out) 
* [[15,16],19]
* [[15,16],18]
* [[15,16],17]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18],[18,[15,16]],[19,[15,16]]] --> 3 
* [[17,[15,16]]] --> 4 
* [[17]] --> 5 


### Specialization of cost equations fun/3 
* CE 12 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 13 is refined into CE [29,30,31,32,33] 


#### Refined cost equations fun/3 
* CE 27: fun(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 28: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 29: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ fun1(Z1,A2,B2,Out):1
     [X1>=0,Out>=2,Out=Y1+1,Out=B2+1,X1+1=V,W1=1,A2=0,Z1=0,V1=1] 
* CE 30: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ fun1(Z1,A2,B2,Out):2
     [X1>=0,Out>=1,Out+X1=V,Out=A2+1,Y1=0,W1=1,B2=0,Z1=0,V1=1] 
* CE 31: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ fun1(Z1,A2,B2,Out):3
     [Out>=A2+2,X1>=0,A2>=1,Out=A2+Y1+1,Out=A2+B2+1,A2+X1+1=V,W1=1,Z1=0,V1=1] 
* CE 32: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ fun1(Z1,A2,Y1,Out):4
     [Y1>=Out,X1>=0,Out>=1,A2>=1,A2+X1+1=V,W1=1,Z1=0,V1=1] 
* CE 33: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ fun1(Z1,A2,Y1,B2):5
     [X1>=0,Y1>=0,A2>=0,Z1>=0,A2+X1+1=V,Z1+1=W1,Z1+1=V1,B2=0,Out=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [33] --> Loop 21 
* CEs [32] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [27,28] --> Loop 26 

#### Loops of fun/3 
* Loop 21: fun(V1,V,Out)->  fun(V1,V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=1,Out=0] 
* Loop 22: fun(V1,V,Out)->  fun(V1',V',Out')
                  [V>=V'+2,Out'>=Out,V'>=0,Out>=1,V1'=1,V1=1] 
* Loop 23: fun(V1,V,Out)->  fun(V1',V',Out')
                  [Out+V'>=V+1,V>=V'+2,V'>=0,V+Out'=Out+V',V1'=1,V1=1] 
* Loop 24: fun(V1,V,Out)->  fun(V1',V',Out')
                  [Out>=2,V>=1,Out=Out'+1,V=V'+1,V1'=1,V1=1] 
* Loop 25: fun(V1,V,Out)->  fun(V1',V',Out')
                  [V>=Out,Out>=1,Out+V'=V,Out'=0,V1'=1,V1=1] 
* Loop 26: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [21,22,23,24,25]: [V]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [21,22,23,24,25]:
  - RF of loop [21:1,24:1,25:1]:
    V
  - RF of loop [22:1,23:1]:
    V/2-1/2


### Resulting Chains:fun(V1,V,Out) 
* [[21,22,23,24,25],26]
* [26]


### Merging Chains  fun/3 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[21,22,23,24,25]]] --> 2 


### Specialization of cost equations start/4 
* CE 3 is refined into CE [34] 
* CE 2 is refined into CE [35,36,37,38,39] 
* CE 4 is refined into CE [40,41] 
* CE 5 is refined into CE [42,43,44,45,46] 
* CE 6 is refined into CE [47,48,49,50] 
* CE 7 is refined into CE [51,52] 


#### Refined cost equations start/4 
* CE 34: start(V1,V,V6,V10) = 1
     [V10>=0,V6>=0,V>=0,V1=1] 
* CE 35: start(V1,V,V6,V10) = 1+ fun1(W10,X10,Y10,Z10):1
     [Z10>=2,V6>=0,Z10=Y10+1,Z10=V10+1,X10=0,W10=0,V=0,V1=0] 
* CE 36: start(V1,V,V6,V10) = 1+ fun1(W10,X10,Y10,Z10):2
     [Z10>=1,V6>=0,Z10=X10+1,Z10=V+1,Y10=0,W10=0,V10=0,V1=0] 
* CE 37: start(V1,V,V6,V10) = 1+ fun1(W10,V,X10,Y10):3
     [Y10>=V+2,V>=1,V6>=0,Y10=V+X10+1,Y10=V+V10+1,W10=0,V1=0] 
* CE 38: start(V1,V,V6,V10) = 1+ fun1(W10,V,V10,X10):4
     [V10>=X10,X10>=1,V>=1,V6>=0,W10=0,V1=0] 
* CE 39: start(V1,V,V6,V10) = 1+ fun1(W10,V,V10,X10):5
     [V10>=0,V>=0,V6>=0,X10=0,W10=0,V1=0] 
* CE 40: start(V1,V,V6,V10) = 0+ fun(V1,V,W10):1
     [V>=0,V1>=0,W10=0] 
* CE 41: start(V1,V,V6,V10) = 0+ fun(V1,V,W10):2
     [V>=W10,W10>=0,V>=1,V1>=1] 
* CE 42: start(V1,V,V6,V10) = 0+ fun1(W10,X10,Y10,Z10):1
     [Z10>=2,Z10=Y10+1,Z10=V6+1,X10=0,W10=0,V=0,V1=0] 
* CE 43: start(V1,V,V6,V10) = 0+ fun1(W10,X10,Y10,Z10):2
     [Z10>=1,Z10=X10+1,Z10=V+1,Y10=0,W10=0,V6=0,V1=0] 
* CE 44: start(V1,V,V6,V10) = 0+ fun1(W10,V,X10,Y10):3
     [Y10>=V+2,V>=1,Y10=V+X10+1,Y10=V+V6+1,W10=0,V1=0] 
* CE 45: start(V1,V,V6,V10) = 0+ fun1(W10,V,V6,X10):4
     [V6>=X10,X10>=1,V>=1,W10=0,V1=0] 
* CE 46: start(V1,V,V6,V10) = 0+ fun1(V1,V,V6,W10):5
     [V6>=0,V>=0,V1>=0,W10=0] 
* CE 47: start(V1,V,V6,V10) = 0+ fun3(W10,V,X10):1
     [V>=0,X10=1,W10=0,V1=0] 
* CE 48: start(V1,V,V6,V10) = 0+ fun3(V1,W10,X10):2
     [V1>=1,X10=0,W10=0,V=0] 
* CE 49: start(V1,V,V6,V10) = 0+ fun3(V1,V,W10):3
     [V1>=V+1,V>=1,W10=0] 
* CE 50: start(V1,V,V6,V10) = 0+ fun3(V1,V,W10):4
     [V>=V1,V1>=1,W10=1] 
* CE 51: start(V1,V,V6,V10) = 1+ fun(W10,V1,X10):1
     [V1>=0,X10=0,W10=1] 
* CE 52: start(V1,V,V6,V10) = 1+ fun(W10,V1,X10):2
     [V1>=X10,X10>=0,V1>=1,W10=1] 

### Cost equations --> "Loop" of start/4 
* CEs [48] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [43] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [35,37,38,39,40,41,44,45,46,47,49,50,51,52] --> Loop 32 

#### Loops of start/4 
* Loop 27: start(V1,V,V6,V10) [V1>=1,V=0] 
* Loop 28: start(V1,V,V6,V10) [V10>=0,V6>=0,V>=0,V1=1] 
* Loop 29: start(V1,V,V6,V10) [V6>=0,V>=0,V10=0,V1=0] 
* Loop 30: start(V1,V,V6,V10) [V>=0,V6=0,V1=0] 
* Loop 31: start(V1,V,V6,V10) [V6>=1,V=0,V1=0] 
* Loop 32: start(V1,V,V6,V10) [V1>=0] 

### Ranking functions of CR start(V1,V,V6,V10) 

#### Partial ranking functions of CR start(V1,V,V6,V10) 


### Resulting Chains:start(V1,V,V6,V10) 
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]


### Merging Chains  start/4 into  External patterns of execution 
* [[31],[32]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 
* [[27]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:fun3(V1,V,Out) -> [fun3(V1',V',Out')] 
1
#### Cost of phase [14]:fun3(V1,V,Out) -> [fun3(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of phase [14]:fun3(V1,V,Out) -> [fun3(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of chains of fun3(V1,V,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=1,V1>=1,V>=V1] 

* Chain [[14],12]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [13]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [12]: 1
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [15,16] 

 * loop 15:fun1(V1,V,V6,Out) -> [fun1(V1',V',V6',Out')] 
1*s(2)+3
  Such that:s(2) =< V6-V6'

 * loop 16:fun1(V1,V,V6,Out) -> [fun1(V1',V',V6',Out')] 
3
#### Cost of phase [15,16]:fun1(V1,V,V6,Out) -> [fun1(V1',V',V6',Out')] 
7*it(15)+0
  Such that:aux(1) =< V6
aux(2) =< V6-V6'
it(15) =< aux(1)
it(15) =< aux(2)

#### Cost of phase [15,16]:fun1(V1,V,V6,Out) -> [fun1(V1',V',V6',Out')] 
7*it(15)+0
  Such that:aux(1) =< V6
aux(2) =< V6-V6'
it(15) =< aux(1)
it(15) =< aux(2)

#### Cost of phase [15,16]:fun1(V1,V,V6,Out) -> [fun1(V1',V',V6',Out')] 
7*it(15)+0
  Such that:aux(1) =< V6
aux(2) =< V6-V6'
it(15) =< aux(1)
it(15) =< aux(2)

#### Cost of chains of fun1(V1,V,V6,Out):
* Chain [[15,16],19]: 7*it(15)+1
  Such that:aux(3) =< -V+Out
it(15) =< aux(3)

  with precondition: [V1=0,V+V6+1=Out,V>=1,V6>=1] 

* Chain [[15,16],18]: 7*it(15)+1*s(4)+3
  Such that:s(4) =< -V6+Out
aux(1) =< V6
aux(2) =< 2*V6-Out
it(15) =< aux(1)
it(15) =< aux(2)

  with precondition: [V1=0,V+V6+1=Out,V>=1,V6>=V+2] 

* Chain [[15,16],17]: 7*it(15)+0
  Such that:aux(1) =< V6
aux(2) =< Out
it(15) =< aux(1)
it(15) =< aux(2)

  with precondition: [V1=0,V>=1,Out>=1,V6>=Out] 

* Chain [20]: 3
  with precondition: [V1=0,V=0,V6+1=Out,V6>=1] 

* Chain [19]: 1
  with precondition: [V1=0,V6=0,V+1=Out,V>=0] 

* Chain [18]: 1*s(4)+3
  Such that:s(4) =< V

  with precondition: [V1=0,V+V6+1=Out,V>=1,V6>=V+1] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0,V>=0,V6>=0] 


#### Cost of loops [21,22,23,24,25] 

 * loop 21:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
 * loop 22:fun(V1,V,Out) -> [fun(V1',V',Out')] 
7*s(16)+1
  Such that:s(15) =< V'
s(16) =< s(15)

 * loop 23:fun(V1,V,Out) -> [fun(V1',V',Out')] 
2*s(28)+7*s(29)+7*s(30)+4
  Such that:s(24) =< -V+2*V'
s(25) =< V'
s(26) =< V'+1
s(27) =< V-V'
s(28) =< s(27)
s(29) =< s(26)
s(30) =< s(25)
s(30) =< s(24)

 * loop 24:fun(V1,V,Out) -> [fun(V1',V',Out')] 
4
 * loop 25:fun(V1,V,Out) -> [fun(V1',V',Out')] 
2
#### Cost of phase [21,22,23,24,25]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
7*it(21)+5*it(22)+7*s(31)+2*s(33)+7*s(34)+7*s(35)+0
  Such that:aux(10) =< V
aux(11) =< V-V'
aux(12) =< V/2
aux(13) =< V/2-V'/2
it(21) =< aux(10)
it(22) =< aux(10)
s(39) =< aux(10)
it(21) =< aux(11)
it(22) =< aux(11)
s(39) =< aux(11)
it(22) =< aux(12)
it(22) =< aux(13)
aux(9) =< aux(10)+1
aux(8) =< aux(10)
aux(7) =< aux(10)-2
s(32) =< it(22)*aux(10)
s(38) =< it(22)*aux(9)
s(37) =< it(22)*aux(8)
s(36) =< it(22)*aux(7)
s(33) =< s(39)
s(34) =< s(38)
s(35) =< s(37)
s(35) =< s(36)
s(31) =< s(32)

#### Cost of chains of fun(V1,V,Out):
* Chain [[21,22,23,24,25],26]: 9*it(21)+5*it(22)+7*s(31)+7*s(34)+7*s(35)+1
  Such that:aux(14) =< V
aux(15) =< V/2
it(21) =< aux(14)
it(22) =< aux(14)
it(22) =< aux(15)
aux(9) =< aux(14)+1
aux(8) =< aux(14)
aux(7) =< aux(14)-2
s(32) =< it(22)*aux(14)
s(38) =< it(22)*aux(9)
s(37) =< it(22)*aux(8)
s(36) =< it(22)*aux(7)
s(34) =< s(38)
s(35) =< s(37)
s(35) =< s(36)
s(31) =< s(32)

  with precondition: [V1>=1,V>=1,Out>=0,V>=Out] 

* Chain [26]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V,V6,V10):
* Chain [32]: 12*s(41)+2*s(42)+7*s(45)+7*s(46)+7*s(49)+5*s(53)+7*s(61)+7*s(62)+7*s(63)+7*s(69)+7*s(70)+7*s(73)+10*s(75)+5*s(79)+7*s(87)+7*s(88)+7*s(89)+4
  Such that:s(77) =< V1/2
s(68) =< -V+V6
s(44) =< -V+V10
s(51) =< V/2
s(64) =< V6+1
s(40) =< V10+1
aux(18) =< V1
aux(19) =< V
aux(20) =< V+1
aux(21) =< V6
aux(22) =< V10
s(75) =< aux(18)
s(41) =< aux(19)
s(42) =< aux(20)
s(79) =< aux(18)
s(79) =< s(77)
s(80) =< aux(18)+1
s(81) =< aux(18)
s(82) =< aux(18)-2
s(83) =< s(79)*aux(18)
s(84) =< s(79)*s(80)
s(85) =< s(79)*s(81)
s(86) =< s(79)*s(82)
s(87) =< s(84)
s(88) =< s(85)
s(88) =< s(86)
s(89) =< s(83)
s(69) =< s(64)
s(70) =< aux(21)
s(70) =< s(68)
s(45) =< s(40)
s(46) =< aux(22)
s(46) =< s(44)
s(53) =< aux(19)
s(53) =< s(51)
s(54) =< aux(19)+1
s(55) =< aux(19)
s(56) =< aux(19)-2
s(57) =< s(53)*aux(19)
s(58) =< s(53)*s(54)
s(59) =< s(53)*s(55)
s(60) =< s(53)*s(56)
s(61) =< s(58)
s(62) =< s(59)
s(62) =< s(60)
s(63) =< s(57)
s(73) =< aux(21)
s(49) =< aux(22)

  with precondition: [V1>=0] 

* Chain [31]: 3
  with precondition: [V1=0,V=0,V6>=1] 

* Chain [30]: 1
  with precondition: [V1=0,V6=0,V>=0] 

* Chain [29]: 2
  with precondition: [V1=0,V10=0,V>=0,V6>=0] 

* Chain [28]: 1
  with precondition: [V1=1,V>=0,V6>=0,V10>=0] 

* Chain [27]: 1
  with precondition: [V=0,V1>=1] 


Closed-form bounds of start(V1,V,V6,V10): 
-------------------------------------
* Chain [32] with precondition: [V1>=0] 
    - Upper bound: 22*V1+4+21*V1*V1+nat(V)*24+nat(V)*21*nat(V)+nat(V6)*14+nat(V10)*14+nat(V+1)*2+nat(V6+1)*7+nat(V10+1)*7 
    - Complexity: n^2 
* Chain [31] with precondition: [V1=0,V=0,V6>=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [30] with precondition: [V1=0,V6=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [29] with precondition: [V1=0,V10=0,V>=0,V6>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [28] with precondition: [V1=1,V>=0,V6>=0,V10>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [27] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V,V6,V10): max([2,22*V1+3+21*V1*V1+nat(V)*24+nat(V)*21*nat(V)+nat(V6)*14+nat(V10)*14+nat(V+1)*2+nat(V6+1)*7+nat(V10+1)*7])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 54 ms.
* Invariants computed in 131 ms.
   - Backward Invariants 68 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 275 ms.
* Termination proved in 36 ms.
* Upper bounds computed in 412 ms.
   - Equation cost structures 140 ms.
   - Phase cost structures 206 ms.
   - Chain cost structures 68 ms.
   - Solving cost expressions 15 ms.
* Total analysis performed in 991 ms.

