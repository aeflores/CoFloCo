
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun3/3]
1. recursive  : [fun1/3,fun2/5]
2. recursive [non_tail] : [fun/2]
3. non_recursive  : [main/2]
4. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun3/3
1. SCC is partially evaluated into fun1/3
2. SCC is partially evaluated into fun/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun3/3 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


#### Refined cost equations fun3/3 
* CE 16: fun3(V,V3,Out) = 1+ fun3(W3,X3,Out)
     [X3>=0,W3>=0,X3+1=V3,W3+1=V] 
* CE 17: fun3(V,V3,Out) = 1
     [V>=1,Out=0,V3=0] 
* CE 18: fun3(V,V3,Out) = 1
     [V3>=0,Out=1,V=0] 

### Cost equations --> "Loop" of fun3/3 
* CEs [17] --> Loop 11 
* CEs [18] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of fun3/3 
* Loop 11: fun3(V,V3,Out) [V>=1,Out=0,V3=0] 
* Loop 12: fun3(V,V3,Out) [V3>=0,Out=1,V=0] 
* Loop 13: fun3(V,V3,Out)->  fun3(V',V3',Out)
                  [V3'>=0,V'>=0,V3'+1=V3,V'+1=V] 

### Ranking functions of CR fun3(V,V3,Out) 
* RF of phase [13]: [V,V3]

#### Partial ranking functions of CR fun3(V,V3,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V
    V3


### Resulting Chains:fun3(V,V3,Out) 
* [[13],12]
* [[13],11]
* [12]
* [11]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[11,[13]]] --> 3 
* [[12,[13]]] --> 4 


### Specialization of cost equations fun1/3 
* CE 9 is refined into CE [19,20] 
* CE 10 is refined into CE [21] 
* CE 8 is refined into CE [22,23] 


#### Refined cost equations fun1/3 
* CE 19: fun1(V,V3,Out) = 2+ fun3(W3,X3,Y3):1
     [V3>=X3+1,X3>=0,V3+1=Out,Y3=1,W3=0,V=0] 
* CE 20: fun1(V,V3,Out) = 2+ fun3(V,W3,X3):4
     [V3>=W3+1,W3>=V,V>=1,V+V3+1=Out,X3=1] 
* CE 21: fun1(V,V3,Out) = 1
     [V>=0,V+1=Out,V3=0] 
* CE 22: fun1(V,V3,Out) = 2+ fun3(V,W3,X3):2+ fun1(V,Y3,Z3)
     [Y3>=0,V>=1,Out=Z3+1,Y3+1=V3,X3=0,W3=0] 
* CE 23: fun1(V,V3,Out) = 2+ fun3(V,W3,X3):3+ fun1(V,Y3,Z3)
     [V>=W3+1,Y3>=0,W3>=1,W3+Z3+1=Out,W3+Y3+1=V3,X3=0] 

### Cost equations --> "Loop" of fun1/3 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of fun1/3 
* Loop 14: fun1(V,V3,Out)->  fun1(V,V3',Out')
                  [V+V3'>=V3,V3>=V3'+2,V3'>=0,V3+Out'=Out+V3'] 
* Loop 15: fun1(V,V3,Out)->  fun1(V,V3',Out')
                  [V3>=1,V>=1,Out=Out'+1,V3=V3'+1] 
* Loop 16: fun1(V,V3,Out) [V3>=V+1,V>=1,V+V3+1=Out] 
* Loop 17: fun1(V,V3,Out) [V>=0,V+1=Out,V3=0] 
* Loop 18: fun1(V,V3,Out) [V3>=1,V3+1=Out,V=0] 

### Ranking functions of CR fun1(V,V3,Out) 
* RF of phase [14,15]: [V3]

#### Partial ranking functions of CR fun1(V,V3,Out) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1]:
    V3-1
  - RF of loop [15:1]:
    V3


### Resulting Chains:fun1(V,V3,Out) 
* [[14,15],17]
* [[14,15],16]
* [18]
* [17]
* [16]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16],[16,[14,15]],[17,[14,15]]] --> 3 


### Specialization of cost equations fun/2 
* CE 12 is refined into CE [24,25,26] 
* CE 11 is refined into CE [27] 


#### Refined cost equations fun/2 
* CE 24: fun(V,Out) = 1+ fun(W,X)+ fun1(Y,Z,Out):1
     [W>=0,Out>=2,Out=X+1,Out=Z+1,W+1=V,Y=0] 
* CE 25: fun(V,Out) = 1+ fun(W,X)+ fun1(Y,Z,Out):2
     [W>=0,Out>=1,Out+W=V,Out=Y+1,X=0,Z=0] 
* CE 26: fun(V,Out) = 1+ fun(W,X)+ fun1(Y,Z,Out):3
     [Out>=Y+2,W>=0,Y>=1,Out=Y+X+1,Out=Y+Z+1,Y+W+1=V] 
* CE 27: fun(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of fun/2 
* CEs [27] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [25] --> Loop 22 

#### Loops of fun/2 
* Loop 19: fun(V,Out) [Out=0,V=0] 
* Loop 20: fun(V,Out)->  fun(V',Out')
                  [Out+V'>=V+1,V>=V'+2,V'>=0,V+Out'=Out+V'] 
* Loop 21: fun(V,Out)->  fun(V',Out')
                  [Out>=2,V>=1,Out=Out'+1,V=V'+1] 
* Loop 22: fun(V,Out)->  fun(V',Out')
                  [V>=Out,Out>=1,Out+V'=V,Out'=0] 

### Ranking functions of CR fun(V,Out) 
* RF of phase [20,21]: [V]

#### Partial ranking functions of CR fun(V,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1]:
    V-1
  - RF of loop [21:1]:
    V


### Resulting Chains:fun(V,Out) 
* [[20,21],22,19]
* [22,19]
* [19]


### Merging Chains  fun/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,22],[19,22,[20,21]]] --> 2 


### Specialization of cost equations start/4 
* CE 3 is refined into CE [28] 
* CE 2 is refined into CE [29,30,31] 
* CE 4 is refined into CE [32,33] 
* CE 5 is refined into CE [34,35,36] 
* CE 6 is refined into CE [37,38,39,40] 
* CE 7 is refined into CE [41,42] 


#### Refined cost equations start/4 
* CE 28: start(V,V3,V4,V8) = 1
     [V8>=0,V4>=0,V3>=0,V=1] 
* CE 29: start(V,V3,V4,V8) = 1+ fun1(W8,X8,Y8):1
     [Y8>=2,V4>=0,Y8=X8+1,Y8=V8+1,W8=0,V3=0,V=0] 
* CE 30: start(V,V3,V4,V8) = 1+ fun1(W8,X8,Y8):2
     [Y8>=1,V4>=0,Y8=W8+1,Y8=V3+1,X8=0,V8=0,V=0] 
* CE 31: start(V,V3,V4,V8) = 1+ fun1(V3,W8,X8):3
     [X8>=V3+2,V3>=1,V4>=0,X8=V3+W8+1,X8=V3+V8+1,V=0] 
* CE 32: start(V,V3,V4,V8) = 0+ fun(W8,X8):1
     [X8=0,W8=0,V=0] 
* CE 33: start(V,V3,V4,V8) = 0+ fun(V,V):2
     [V>=1] 
* CE 34: start(V,V3,V4,V8) = 0+ fun1(W8,X8,Y8):1
     [Y8>=2,Y8=X8+1,Y8=V3+1,W8=0,V=0] 
* CE 35: start(V,V3,V4,V8) = 0+ fun1(W8,X8,Y8):2
     [Y8>=1,Y8=W8+1,Y8=V+1,X8=0,V3=0] 
* CE 36: start(V,V3,V4,V8) = 0+ fun1(V,W8,X8):3
     [X8>=V+2,V>=1,X8=V+W8+1,X8=V+V3+1] 
* CE 37: start(V,V3,V4,V8) = 0+ fun3(W8,V3,X8):1
     [V3>=0,X8=1,W8=0,V=0] 
* CE 38: start(V,V3,V4,V8) = 0+ fun3(V,W8,X8):2
     [V>=1,X8=0,W8=0,V3=0] 
* CE 39: start(V,V3,V4,V8) = 0+ fun3(V,V3,W8):3
     [V>=V3+1,V3>=1,W8=0] 
* CE 40: start(V,V3,V4,V8) = 0+ fun3(V,V3,W8):4
     [V3>=V,V>=1,W8=1] 
* CE 41: start(V,V3,V4,V8) = 1+ fun(W8,X8):1
     [X8=0,W8=0,V=0] 
* CE 42: start(V,V3,V4,V8) = 1+ fun(V,V):2
     [V>=1] 

### Cost equations --> "Loop" of start/4 
* CEs [35,38] --> Loop 23 
* CEs [28,33,36,39,40,42] --> Loop 24 
* CEs [29,30,31,32,34,37,41] --> Loop 25 

#### Loops of start/4 
* Loop 23: start(V,V3,V4,V8) [V>=0,V3=0] 
* Loop 24: start(V,V3,V4,V8) [V>=1] 
* Loop 25: start(V,V3,V4,V8) [V=0] 

### Ranking functions of CR start(V,V3,V4,V8) 

#### Partial ranking functions of CR start(V,V3,V4,V8) 


### Resulting Chains:start(V,V3,V4,V8) 
* [25]
* [24]
* [23]


### Merging Chains  start/4 into  External patterns of execution 
* [[25]] --> 1 
* [[23]] --> 2 
* [[24]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
1
#### Cost of phase [13]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'
it(13) =< V3
it(13) =< V3-V3'

#### Cost of phase [13]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'
it(13) =< V3
it(13) =< V3-V3'

#### Cost of chains of fun3(V,V3,Out):
* Chain [[13],12]: 1*it(13)+1
  Such that:it(13) =< V

  with precondition: [Out=1,V>=1,V3>=V] 

* Chain [[13],11]: 1*it(13)+1
  Such that:it(13) =< V3

  with precondition: [Out=0,V3>=1,V>=V3+1] 

* Chain [12]: 1
  with precondition: [V=0,Out=1,V3>=0] 

* Chain [11]: 1
  with precondition: [V3=0,Out=0,V>=1] 


#### Cost of loops [14,15] 

 * loop 14:fun1(V,V3,Out) -> [fun1(V',V3',Out')] 
1*s(2)+3
  Such that:s(2) =< V3-V3'

 * loop 15:fun1(V,V3,Out) -> [fun1(V',V3',Out')] 
3
#### Cost of phase [14,15]:fun1(V,V3,Out) -> [fun1(V',V3',Out')] 
7*it(14)+0
  Such that:aux(1) =< V3
aux(2) =< V3-V3'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of phase [14,15]:fun1(V,V3,Out) -> [fun1(V',V3',Out')] 
7*it(14)+0
  Such that:aux(1) =< V3
aux(2) =< V3-V3'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of chains of fun1(V,V3,Out):
* Chain [[14,15],17]: 7*it(14)+1
  Such that:aux(3) =< -V+Out
it(14) =< aux(3)

  with precondition: [V+V3+1=Out,V>=1,V3>=1] 

* Chain [[14,15],16]: 7*it(14)+1*s(4)+3
  Such that:aux(2) =< -2*V+Out
aux(1) =< -V+Out
s(4) =< V
it(14) =< aux(1)
it(14) =< aux(2)

  with precondition: [V+V3+1=Out,V>=1,V3>=V+2] 

* Chain [18]: 3
  with precondition: [V=0,V3+1=Out,V3>=1] 

* Chain [17]: 1
  with precondition: [V3=0,V+1=Out,V>=0] 

* Chain [16]: 1*s(4)+3
  Such that:s(4) =< V

  with precondition: [V+V3+1=Out,V>=1,V3>=V+1] 


#### Cost of loops [20,21] 

 * loop 20:fun(V,Out) -> [fun(V',Out')] 
2*s(21)+7*s(22)+7*s(23)+4
  Such that:s(18) =< -V+2*V'+2
s(19) =< V-V'
s(20) =< V'+1
s(21) =< s(19)
s(22) =< s(20)
s(22) =< s(18)
s(23) =< s(20)

 * loop 21:fun(V,Out) -> [fun(V',Out')] 
4
#### Cost of phase [20,21]:fun(V,Out) -> [fun(V',Out')] 
8*it(20)+2*s(24)+7*s(25)+7*s(26)+0
  Such that:aux(8) =< V
aux(9) =< V-V'
it(20) =< aux(8)
s(29) =< aux(8)
it(20) =< aux(9)
s(29) =< aux(9)
aux(7) =< aux(8)+1
s(28) =< it(20)*aux(8)
s(27) =< it(20)*aux(7)
s(24) =< s(29)
s(25) =< s(27)
s(25) =< s(28)
s(26) =< s(27)

#### Cost of chains of fun(V,Out):
* Chain [[20,21],22,19]: 10*it(20)+7*s(25)+7*s(26)+3
  Such that:aux(10) =< Out
it(20) =< aux(10)
aux(7) =< aux(10)+1
s(28) =< it(20)*aux(10)
s(27) =< it(20)*aux(7)
s(25) =< s(27)
s(25) =< s(28)
s(26) =< s(27)

  with precondition: [Out=V,Out>=2] 

* Chain [22,19]: 3
  with precondition: [V=Out,V>=1] 

* Chain [19]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of start(V,V3,V4,V8):
* Chain [25]: 2*s(40)+7*s(41)+7*s(42)+4
  Such that:s(37) =< -V3+V8+1
s(39) =< V3
s(38) =< V8+1
s(40) =< s(39)
s(41) =< s(38)
s(41) =< s(37)
s(42) =< s(38)

  with precondition: [V=0] 

* Chain [24]: 23*s(44)+14*s(48)+14*s(49)+7*s(54)+7*s(55)+1*s(56)+4
  Such that:s(50) =< -V+V3+1
s(56) =< V3
s(51) =< V3+1
aux(11) =< V
s(44) =< aux(11)
s(54) =< s(51)
s(54) =< s(50)
s(55) =< s(51)
s(45) =< aux(11)+1
s(46) =< s(44)*aux(11)
s(47) =< s(44)*s(45)
s(48) =< s(47)
s(48) =< s(46)
s(49) =< s(47)

  with precondition: [V>=1] 

* Chain [23]: 1
  with precondition: [V3=0,V>=0] 


Closed-form bounds of start(V,V3,V4,V8): 
-------------------------------------
* Chain [25] with precondition: [V=0] 
    - Upper bound: nat(V3)*2+4+nat(V8+1)*14 
    - Complexity: n 
* Chain [24] with precondition: [V>=1] 
    - Upper bound: 51*V+4+28*V*V+nat(V3)+nat(V3+1)*14 
    - Complexity: n^2 
* Chain [23] with precondition: [V3=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V3,V4,V8): nat(V3)+3+max([nat(V8+1)*14+nat(V3),28*V*V+51*V+nat(V3+1)*14])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 91 ms.
   - Backward Invariants 47 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 179 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 235 ms.
   - Equation cost structures 78 ms.
   - Phase cost structures 106 ms.
   - Chain cost structures 47 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 635 ms.

