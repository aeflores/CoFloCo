
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. recursive  : [fun1/3]
2. non_recursive  : [main/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is partially evaluated into fun1/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations fun/3 
* CE 10: fun(V1,V,Out) = 1+ fun(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 11: fun(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [11] --> Loop 6 
* CEs [10] --> Loop 7 

#### Loops of fun/3 
* Loop 6: fun(A,B,B) [B>=0,A=0] 
* Loop 7: fun(V1,V,Out)->  fun(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [7]: [V1]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V1


### Resulting Chains:fun(V1,V,Out) 
* [[7],6]
* [6]


### Merging Chains  fun/3 into  External patterns of execution 
* [[6]] --> 1 
* [[6,[7]]] --> 2 


### Specialization of cost equations fun1/3 
* CE 7 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14,15] 


#### Refined cost equations fun1/3 
* CE 12: fun1(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 13: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 14: fun1(V1,V,Out) = 1+ fun(W1,X1,X1):1+ fun1(Y1,Z1,A2)
     [Z1>=0,X1>=0,X1+A2+1=Out,X1+Z1+1=V,Y1=1,W1=0,V1=1] 
* CE 15: fun1(V1,V,Out) = 1+ fun(W1,X1,Y1):2+ fun1(Z1,A2,B2)
     [Y1>=W1,A2>=0,W1>=1,Y1+A2+1=V+W1,Y1=W1+X1,Y1+B2+1=Out,W1+1=Z1,W1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [15] --> Loop 8 
* CEs [14] --> Loop 9 
* CEs [12,13] --> Loop 10 

#### Loops of fun1/3 
* Loop 8: fun1(V1,V,Out)->  fun1(V1,V',Out')
                  [V>=V'+1,V'>=0,V1>=2,V1+V+Out'=Out+V'+1] 
* Loop 9: fun1(V1,V,Out)->  fun1(V1',V',Out')
                  [V>=V'+1,V'>=0,Out+V'=V+Out',V1'=1,V1=1] 
* Loop 10: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [8]: [V]
* RF of phase [9]: [V]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:fun1(V1,V,Out) 
* [[9],10]
* [[8],10]
* [10]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[10,[9]]] --> 1 
* [[10]] --> 2 
* [[10,[8]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [16,17] 
* CE 3 is refined into CE [18,19,20] 
* CE 4 is refined into CE [21,22,23] 


#### Refined cost equations start/2 
* CE 16: start(V1,V) = 0+ fun(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 17: start(V1,V) = 0+ fun(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 18: start(V1,V) = 0+ fun1(W1,V,X1):1
     [V>=X1,X1>=1,W1=1,V1=1] 
* CE 19: start(V1,V) = 0+ fun1(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 20: start(V1,V) = 0+ fun1(V1,V,W1):3
     [W1>=V1,V>=1,V1>=2] 
* CE 21: start(V1,V) = 1+ fun1(W1,V1,X1):1
     [V1>=X1,X1>=1,W1=1,V=0] 
* CE 22: start(V1,V) = 1+ fun1(W1,V1,X1):2
     [V1>=0,W1>=1,W1=V+1,X1=0] 
* CE 23: start(V1,V) = 1+ fun1(W1,V1,X1):3
     [X1>=W1,V1>=1,W1>=2,W1=V+1] 

### Cost equations --> "Loop" of start/2 
* CEs [21] --> Loop 11 
* CEs [18] --> Loop 12 
* CEs [16,17,19,20,22,23] --> Loop 13 

#### Loops of start/2 
* Loop 11: start(V1,V) [V1>=1,V=0] 
* Loop 12: start(V1,V) [V>=1,V1=1] 
* Loop 13: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [13]
* [12]
* [11]


### Merging Chains  start/2 into  External patterns of execution 
* [[12],[13]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [7]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'

#### Cost of chains of fun(V1,V,Out):
* Chain [[7],6]: 1*it(7)+1
  Such that:it(7) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [6]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [9] 

 * loop 9:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
2
#### Cost of phase [9]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of loops [8] 

 * loop 8:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
1*s(2)+2
  Such that:s(2) =< V1'

#### Cost of phase [8]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
2*it(8)+1*s(3)+0
  Such that:aux(1) =< V1
it(8) =< V
it(8) =< V-V'
s(3) =< it(8)*aux(1)

#### Cost of chains of fun1(V1,V,Out):
* Chain [[9],10]: 2*it(9)+1
  Such that:it(9) =< Out

  with precondition: [V1=1,Out>=1,V>=Out] 

* Chain [[8],10]: 2*it(8)+1*s(3)+1
  Such that:aux(1) =< V1
it(8) =< V
s(3) =< it(8)*aux(1)

  with precondition: [V1>=2,V>=1,Out>=V1] 

* Chain [10]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [13]: 3*s(4)+2*s(6)+1*s(7)+1*s(10)+2
  Such that:s(6) =< V
s(8) =< V+1
aux(2) =< V1
s(4) =< aux(2)
s(7) =< s(6)*aux(2)
s(10) =< s(4)*s(8)

  with precondition: [V1>=0,V>=0] 

* Chain [12]: 2*s(11)+1
  Such that:s(11) =< V

  with precondition: [V1=1,V>=1] 

* Chain [11]: 2*s(12)+2
  Such that:s(12) =< V1

  with precondition: [V=0,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [13] with precondition: [V1>=0,V>=0] 
    - Upper bound: 3*V1+2+V*V1+2*V+ (V+1)*V1 
    - Complexity: n^2 
* Chain [12] with precondition: [V1=1,V>=1] 
    - Upper bound: 2*V+1 
    - Complexity: n 
* Chain [11] with precondition: [V=0,V1>=1] 
    - Upper bound: 2*V1+2 
    - Complexity: n 

### Maximum cost of start(V1,V): max([2*V,V*V1+V1+2*V+ (V+1)*V1+ (2*V1+1)])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 91 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 102 ms.
   - Equation cost structures 37 ms.
   - Phase cost structures 40 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 319 ms.

