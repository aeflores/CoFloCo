
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. recursive [non_tail] : [fun1/2]
2. non_recursive  : [main/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is partially evaluated into fun1/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations fun/3 
* CE 9: fun(V1,V,Out) = 1+ fun(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 10: fun(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [10] --> Loop 6 
* CEs [9] --> Loop 7 

#### Loops of fun/3 
* Loop 6: fun(A,B,B) [B>=0,A=0] 
* Loop 7: fun(V1,V,Out)->  fun(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [7]: [V1]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V1


### Resulting Chains:fun(V1,V,Out) 
* [[7],6]
* [6]


### Merging Chains  fun/3 into  External patterns of execution 
* [[6]] --> 1 
* [[6,[7]]] --> 2 


### Specialization of cost equations fun1/2 
* CE 8 is refined into CE [11,12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations fun1/2 
* CE 11: fun1(V1,Out) = 1+ fun1(W1,Out)+ fun(X1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V1,X1=0] 
* CE 12: fun1(V1,Out) = 1+ fun1(W1,X1)+ fun(Y1,Z1,Out):2
     [Out>=Y1,W1>=0,Y1>=1,Out=Y1+X1,Out=Y1+Z1,Y1+W1+1=V1] 
* CE 13: fun1(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of fun1/2 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of fun1/2 
* Loop 8: fun1(V1,Out) [Out=0,V1=0] 
* Loop 9: fun1(V1,Out)->  fun1(V1',Out')
                  [Out+V1'+1>=V1,V1>=V1'+2,V1'>=0,V1+Out'=Out+V1'+1] 
* Loop 10: fun1(V1,Out)->  fun1(V1',Out)
                  [Out>=0,V1>=1,V1=V1'+1] 

### Ranking functions of CR fun1(V1,Out) 
* RF of phase [9,10]: [V1]

#### Partial ranking functions of CR fun1(V1,Out) 
* Partial RF of phase [9,10]:
  - RF of loop [9:1]:
    V1-1
  - RF of loop [10:1]:
    V1


### Resulting Chains:fun1(V1,Out) 
* [[9,10],8]
* [8]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[9,10]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [14,15] 
* CE 3 is refined into CE [16,17] 
* CE 4 is refined into CE [18,19] 


#### Refined cost equations start/2 
* CE 14: start(V1,V) = 0+ fun(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 15: start(V1,V) = 0+ fun(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 16: start(V1,V) = 0+ fun1(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 17: start(V1,V) = 0+ fun1(V1,W1):2
     [V1>=W1+1,W1>=0] 
* CE 18: start(V1,V) = 1+ fun1(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 19: start(V1,V) = 1+ fun1(V1,W1):2
     [V1>=W1+1,W1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [15,17,19] --> Loop 11 
* CEs [14,16,18] --> Loop 12 

#### Loops of start/2 
* Loop 11: start(V1,V) [V1>=1] 
* Loop 12: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [12]
* [11]


### Merging Chains  start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [7]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(7)+0
  Such that:it(7) =< V1
it(7) =< V1-V1'

#### Cost of chains of fun(V1,V,Out):
* Chain [[7],6]: 1*it(7)+1
  Such that:it(7) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [6]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [9,10] 

 * loop 9:fun1(V1,Out) -> [fun1(V1',Out')] 
1*s(2)+2
  Such that:s(2) =< V1-V1'

 * loop 10:fun1(V1,Out) -> [fun1(V1',Out')] 
2
#### Cost of phase [9,10]:fun1(V1,Out) -> [fun1(V1',Out')] 
5*it(9)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(9) =< aux(1)
it(9) =< aux(2)

#### Cost of chains of fun1(V1,Out):
* Chain [[9,10],8]: 5*it(9)+1
  Such that:aux(3) =< V1
it(9) =< aux(3)

  with precondition: [Out>=0,V1>=Out+1] 

* Chain [8]: 1
  with precondition: [V1=0,Out=0] 


#### Cost of chains of start(V1,V):
* Chain [12]: 2
  with precondition: [V1=0] 

* Chain [11]: 11*s(4)+2
  Such that:aux(4) =< V1
s(4) =< aux(4)

  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [12] with precondition: [V1=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [11] with precondition: [V1>=1] 
    - Upper bound: 11*V1+2 
    - Complexity: n 

### Maximum cost of start(V1,V): 11*V1+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 38 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 63 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 68 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 35 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 227 ms.

