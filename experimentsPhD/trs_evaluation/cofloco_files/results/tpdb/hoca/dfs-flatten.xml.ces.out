
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. recursive [multiple] : [fun1/3]
2. non_recursive  : [main/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is partially evaluated into fun1/3
2. SCC is partially evaluated into main/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


#### Refined cost equations fun/3 
* CE 12: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 13: fun(A,B,B) = 1
     [B>=0,A=0] 
* CE 14: fun(V1,V,Out) = 1+ fun(W1,X1,Out)
     [V1+V>=X1,X1>=V+1,V>=0,V1+V=W1+X1] 

### Cost equations --> "Loop" of fun/3 
* CEs [14] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 

#### Loops of fun/3 
* Loop 9: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V1+V>=V',V'>=V+1,V>=0,V1+V=V1'+V'] 
* Loop 10: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 11: fun(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [9]: [V1]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V1


### Resulting Chains:fun(V1,V,Out) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  fun/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10],[10,[9]]] --> 2 
* [[11,[9]]] --> 3 


### Specialization of cost equations fun1/3 
* CE 8 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations fun1/3 
* CE 15: fun1(V1,V,Out) = 1
     [V>=0,V1>=1,V1+V=Out] 
* CE 16: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 17: fun1(V1,V,Out) = 1+ fun1(W1,V,X1)+ fun1(Y1,X1,Out)
     [Y1>=0,W1>=0,V>=0,W1+Y1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [17] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of fun1/3 
* Loop 12: fun1(V1,V,Out)->  fun1(V1',V,Out')  fun1(A'2,Out',Out)
                  [A'2>=0,V1'>=0,V>=0,V1'+A'2+1=V1] 
* Loop 13: fun1(V1,V,Out) [V>=0,V1>=1,V1+V=Out] 
* Loop 14: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [12]: [V1]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1,12:2]:
    V1


### Resulting Chains:fun1(V1,V,Out) 
* [14]
* [13]
* [multiple([12],[[14],[13]])]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[multiple([12],[[14],[13]])]] --> 3 


### Specialization of cost equations main/2 
* CE 11 is refined into CE [18,19,20,21,22,23,24] 


#### Refined cost equations main/2 
* CE 18: main(V1,Out) = 1+ fun1(V1,W1,X1):1+ fun(Y1,Z1,A2):1
     [V1>=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 19: main(V1,Out) = 1+ fun1(V1,W1,X1):1+ fun(Y1,Z1,A2):2
     [V1>=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 20: main(V1,Out) = 1+ fun1(V1,W1,V1):2+ fun(V1,X1,Y1):2
     [V1>=1,Y1=0,X1=0,W1=0,Out=0] 
* CE 21: main(A,A) = 1+ fun1(A,B,A):2+ fun(A,C,A):3
     [A>=1,C=0,B=0] 
* CE 22: main(V1,Out) = 1+ fun1(V1,W1,X1):3+ fun(Y1,Z1,A2):1
     [V1>=1,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 23: main(V1,Out) = 1+ fun1(V1,W1,X1):3+ fun(X1,Y1,Z1):2
     [V1>=X1+1,X1>=0,Z1=0,Y1=0,W1=0,Out=0] 
* CE 24: main(V1,Out) = 1+ fun1(V1,W1,Out):3+ fun(Out,X1,Out):3
     [V1>=Out+1,Out>=1,X1=0,W1=0] 

### Cost equations --> "Loop" of main/2 
* CEs [24] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [18,19,20,22,23] --> Loop 17 

#### Loops of main/2 
* Loop 15: main(V1,Out) [V1>=Out+1,Out>=1] 
* Loop 16: main(A,A) [A>=1] 
* Loop 17: main(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR main(V1,Out) 

#### Partial ranking functions of CR main(V1,Out) 


### Resulting Chains:main(V1,Out) 
* [17]
* [16]
* [15]


### Merging Chains  main/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [25,26,27] 
* CE 3 is refined into CE [28,29,30] 
* CE 4 is refined into CE [31,32,33] 


#### Refined cost equations start/2 
* CE 25: start(V1,V) = 0+ fun(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 26: start(V1,V) = 0+ fun(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 27: start(V1,V) = 0+ fun(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 28: start(V1,V) = 0+ fun1(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 29: start(V1,V) = 0+ fun1(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 30: start(V1,V) = 0+ fun1(V1,V,W1):3
     [V1+V>=W1+1,W1>=0,V>=0,V1>=1] 
* CE 31: start(V1,V) = 0+ main(V1,W1):1
     [V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ main(V1,V1):2
     [V1>=1] 
* CE 33: start(V1,V) = 0+ main(V1,W1):3
     [V1>=W1+1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [25,26,27,28,29,30,31,32,33] --> Loop 18 

#### Loops of start/2 
* Loop 18: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [9]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of phase [9]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of chains of fun(V1,V,Out):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V1

  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [11]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [10]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [12] 

 * loop 12:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
1
#### Cost of phase [12]:fun1(V1,V,Out) -> [] 
1*it(12)+1*it([13])+0
  Such that:it([13]) =< V1/2+1/2
aux(1) =< V1
it(12) =< aux(1)
it([13]) =< aux(1)

#### Cost of chains of fun1(V1,V,Out):
* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [13]: 1
  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [multiple([12],[[14],[13]])]: 1*it(12)+1*it([13])+0
  Such that:it([13]) =< V1/2+1/2
aux(1) =< V1
it(12) =< aux(1)
it([13]) =< aux(1)

  with precondition: [V1>=1,V>=0,Out>=0,V+V1>=Out+1] 


#### Cost of chains of main(V1,Out):
* Chain [17]: 4*s(3)+2*s(4)+2
  Such that:aux(3) =< V1
aux(4) =< V1/2+1/2
s(3) =< aux(3)
s(4) =< aux(4)
s(4) =< aux(3)

  with precondition: [Out=0,V1>=0] 

* Chain [16]: 1*s(11)+3
  Such that:s(11) =< V1

  with precondition: [V1=Out,V1>=1] 

* Chain [15]: 1*s(12)+2*s(14)+2
  Such that:s(12) =< V1/2+1/2
aux(5) =< V1
s(14) =< aux(5)
s(12) =< aux(5)

  with precondition: [Out>=1,V1>=Out+1] 


#### Cost of chains of start(V1,V):
* Chain [18]: 10*s(16)+4*s(18)+3
  Such that:aux(6) =< V1
aux(7) =< V1/2+1/2
s(16) =< aux(6)
s(18) =< aux(7)
s(18) =< aux(6)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [18] with precondition: [V1>=0] 
    - Upper bound: 12*V1+5 
    - Complexity: n 

### Maximum cost of start(V1,V): 12*V1+5 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 48 ms.
   - Backward Invariants 24 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 129 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 149 ms.
   - Equation cost structures 65 ms.
   - Phase cost structures 69 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 414 ms.

