
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/2,fun1/3,fun2/4,group3/2]
1. recursive  : [fun3/4,fun4/5,fun5/6,zip3/4]
2. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into group3/2
1. SCC is partially evaluated into zip3/4
2. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations group3/2 
* CE 18 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 21 is refined into CE [24] 
* CE 19 is refined into CE [25] 


#### Refined cost equations group3/2 
* CE 22: group3(V,Out) = 3
     [V>=1,Out=0] 
* CE 23: group3(V,Out) = 4
     [V>=2,Out=0] 
* CE 24: group3(V,Out) = 2
     [Out=0,V=0] 
* CE 25: group3(V,Out) = 4+ group3(W,X)
     [V>=W+3,W>=0,V+X=Out+W+1] 

### Cost equations --> "Loop" of group3/2 
* CEs [25] --> Loop 10 
* CEs [22,23] --> Loop 11 
* CEs [24] --> Loop 12 

#### Loops of group3/2 
* Loop 10: group3(V,Out)->  group3(V',Out')
                  [V>=V'+3,V'>=0,V+Out'=Out+V'+1] 
* Loop 11: group3(V,Out) [V>=1,Out=0] 
* Loop 12: group3(V,Out) [Out=0,V=0] 

### Ranking functions of CR group3(V,Out) 
* RF of phase [10]: [V-2]

#### Partial ranking functions of CR group3(V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V-2


### Resulting Chains:group3(V,Out) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  group3/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[11,[10]]] --> 3 
* [[12,[10]]] --> 4 


### Specialization of cost equations zip3/4 
* CE 16 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 15 is refined into CE [29] 


#### Refined cost equations zip3/4 
* CE 26: zip3(V,V4,V10,Out) = 4
     [V4>=1,V>=1,Out=0,V10=0] 
* CE 27: zip3(V,V4,V10,Out) = 3
     [V10>=0,V>=1,Out=0,V4=0] 
* CE 28: zip3(V,V4,V10,Out) = 2
     [V10>=0,V4>=0,Out=0,V=0] 
* CE 29: zip3(V,V4,V10,Out) = 4+ zip3(W10,X10,Y10,Z10)
     [V+V4+V10+Z10>=Out+X10+Y10+1,Out+X10+Y10>=V4+V10+Z10,V10>=Y10+1,V4>=X10+1,Y10>=0,X10>=0,V+V4+V10+Z10=Out+W10+X10+Y10+1] 

### Cost equations --> "Loop" of zip3/4 
* CEs [29] --> Loop 13 
* CEs [26] --> Loop 14 
* CEs [27] --> Loop 15 
* CEs [28] --> Loop 16 

#### Loops of zip3/4 
* Loop 13: zip3(V,V4,V10,Out)->  zip3(V',V4',V10',Out')
                  [V+V4+V10+Out'>=Out+V4'+V10'+1,Out+V4'+V10'>=V4+V10+Out',V10>=V10'+1,V4>=V4'+1,V10'>=0,V4'>=0,V+V4+V10+Out'=Out+V'+V4'+V10'+1] 
* Loop 14: zip3(V,V4,V10,Out) [V4>=1,V>=1,Out=0,V10=0] 
* Loop 15: zip3(V,V4,V10,Out) [V10>=0,V>=1,Out=0,V4=0] 
* Loop 16: zip3(V,V4,V10,Out) [V10>=0,V4>=0,Out=0,V=0] 

### Ranking functions of CR zip3(V,V4,V10,Out) 
* RF of phase [13]: [V,V4,V10]

#### Partial ranking functions of CR zip3(V,V4,V10,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V
    V4
    V10


### Resulting Chains:zip3(V,V4,V10,Out) 
* [[13],16]
* [[13],15]
* [[13],14]
* [16]
* [15]
* [14]


### Merging Chains  zip3/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 
* [[16,[13]]] --> 4 
* [[15,[13]]] --> 5 
* [[14,[13]]] --> 6 


### Specialization of cost equations start/5 
* CE 6 is refined into CE [30] 
* CE 2 is refined into CE [31] 
* CE 3 is refined into CE [32] 
* CE 4 is refined into CE [33,34,35,36,37,38] 
* CE 5 is refined into CE [39,40,41,42,43,44] 
* CE 7 is refined into CE [45,46,47,48,49,50] 
* CE 8 is refined into CE [51,52,53,54] 
* CE 9 is refined into CE [55,56,57,58] 
* CE 10 is refined into CE [59] 
* CE 11 is refined into CE [60,61,62,63] 
* CE 12 is refined into CE [64,65,66,67] 
* CE 13 is refined into CE [68,69,70,71,72,73] 


#### Refined cost equations start/5 
* CE 30: start(V,V4,V10,V28,V37) = 3
     [V4>=1,V>=1,V10=0] 
* CE 31: start(V,V4,V10,V28,V37) = 2
     [V>=1] 
* CE 32: start(V,V4,V10,V28,V37) = 1
     [V=0] 
* CE 33: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):1
     [V10>=Y37+1,V4>=X37+1,Y37>=0,X37>=0,V>=1,Z37=0,W37=0] 
* CE 34: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):2
     [V10>=Y37+1,V>=W37+1,Y37>=0,W37>=1,V4>=1,Z37=0,X37=0] 
* CE 35: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):3
     [V4>=X37+1,V>=W37+1,X37>=1,W37>=1,V10>=1,Z37=0,Y37=0] 
* CE 36: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):4
     [W37+X37+Y37>=Z37+1,V10>=Y37+1,V4>=X37+1,Z37>=W37+1,V>=W37+1,Y37>=1,X37>=1,W37>=1] 
* CE 37: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):5
     [W37+X37+Y37>=Z37+2,V10>=Y37+1,Z37>=X37+1,V4>=X37+1,V>=W37+1,Y37>=1,X37>=1,W37>=2] 
* CE 38: start(V,V4,V10,V28,V37) = 3+ zip3(W37,X37,Y37,Z37):6
     [W37+X37+Y37>=Z37+3,Z37>=Y37+1,V10>=Y37+1,V4>=X37+1,V>=W37+1,Y37>=1,X37>=2,W37>=2] 
* CE 39: start(V,V4,V10,V28,V37) = 2+ zip3(W37,X37,Y37,Z37):1
     [V4>=Y37+1,V>=X37+1,Y37>=0,X37>=0,V10>=0,Z37=0,W37=0,V28=0] 
* CE 40: start(V,V4,V10,V28,V37) = 2+ zip3(V28,W37,X37,Y37):2
     [V4>=X37+1,X37>=0,V28>=1,V10>=0,V>=1,Y37=0,W37=0] 
* CE 41: start(V,V4,V10,V28,V37) = 2+ zip3(V28,W37,X37,Y37):3
     [V>=W37+1,W37>=1,V28>=1,V10>=0,V4>=1,Y37=0,X37=0] 
* CE 42: start(V,V4,V10,V28,V37) = 2+ zip3(V28,W37,X37,Y37):4
     [V28+W37+X37>=Y37+1,V4>=X37+1,V>=W37+1,Y37>=V28+1,X37>=1,W37>=1,V28>=1,V10>=0] 
* CE 43: start(V,V4,V10,V28,V37) = 2+ zip3(V28,W37,X37,Y37):5
     [V28+W37+X37>=Y37+2,V4>=X37+1,Y37>=W37+1,V>=W37+1,X37>=1,W37>=1,V28>=2,V10>=0] 
* CE 44: start(V,V4,V10,V28,V37) = 2+ zip3(V28,W37,X37,Y37):6
     [V28+W37+X37>=Y37+3,Y37>=X37+1,V4>=X37+1,V>=W37+1,X37>=1,W37>=2,V28>=2,V10>=0] 
* CE 45: start(V,V4,V10,V28,V37) = 1+ zip3(W37,V37,X37,Y37):1
     [V>=X37+1,X37>=0,V37>=0,V28>=0,V4>=0,Y37=0,W37=0,V10=0] 
* CE 46: start(V,V4,V10,V28,V37) = 1+ zip3(V10,W37,X37,Y37):2
     [V>=X37+1,X37>=0,V10>=1,V28>=0,V4>=0,Y37=0,W37=0,V37=0] 
* CE 47: start(V,V4,V10,V28,V37) = 1+ zip3(V10,V37,W37,X37):3
     [V37>=1,V10>=1,V28>=0,V4>=0,V>=1,X37=0,W37=0] 
* CE 48: start(V,V4,V10,V28,V37) = 1+ zip3(V10,V37,W37,X37):4
     [V10+V37+W37>=X37+1,V>=W37+1,X37>=V10+1,W37>=1,V37>=1,V10>=1,V28>=0,V4>=0] 
* CE 49: start(V,V4,V10,V28,V37) = 1+ zip3(V10,V37,W37,X37):5
     [V10+V37+W37>=X37+2,V>=W37+1,X37>=V37+1,W37>=1,V37>=1,V10>=2,V28>=0,V4>=0] 
* CE 50: start(V,V4,V10,V28,V37) = 1+ zip3(V10,V37,W37,X37):6
     [V10+V37+W37>=X37+3,X37>=W37+1,V>=W37+1,W37>=1,V37>=2,V10>=2,V28>=0,V4>=0] 
* CE 51: start(V,V4,V10,V28,V37) = 3+ group3(W37,X37):1
     [V>=3,X37=0,W37=0] 
* CE 52: start(V,V4,V10,V28,V37) = 3+ group3(W37,X37):2
     [V>=W37+3,W37>=1,X37=0] 
* CE 53: start(V,V4,V10,V28,V37) = 3+ group3(W37,X37):3
     [W37>=X37+2,V>=W37+3,X37>=2] 
* CE 54: start(V,V4,V10,V28,V37) = 3+ group3(W37,X37):4
     [W37>=X37+1,V>=W37+3,3*X37>=2*W37] 
* CE 55: start(V,V4,V10,V28,V37) = 2+ group3(W37,X37):1
     [V4>=0,V>=2,X37=0,W37=0] 
* CE 56: start(V,V4,V10,V28,V37) = 2+ group3(W37,X37):2
     [V>=W37+2,W37>=1,V4>=0,X37=0] 
* CE 57: start(V,V4,V10,V28,V37) = 2+ group3(W37,X37):3
     [W37>=X37+2,V>=W37+2,X37>=2,V4>=0] 
* CE 58: start(V,V4,V10,V28,V37) = 2+ group3(W37,X37):4
     [W37>=X37+1,V>=W37+2,3*X37>=2*W37,V4>=0] 
* CE 59: start(V,V4,V10,V28,V37) = 3
     [V>=2] 
* CE 60: start(V,V4,V10,V28,V37) = 1+ group3(W37,X37):1
     [V10>=0,V4>=0,V>=1,X37=0,W37=0] 
* CE 61: start(V,V4,V10,V28,V37) = 1+ group3(W37,X37):2
     [V>=W37+1,W37>=1,V10>=0,V4>=0,X37=0] 
* CE 62: start(V,V4,V10,V28,V37) = 1+ group3(W37,X37):3
     [W37>=X37+2,V>=W37+1,X37>=2,V10>=0,V4>=0] 
* CE 63: start(V,V4,V10,V28,V37) = 1+ group3(W37,X37):4
     [W37>=X37+1,V>=W37+1,3*X37>=2*W37,V10>=0,V4>=0] 
* CE 64: start(V,V4,V10,V28,V37) = 0+ group3(W37,X37):1
     [X37=0,W37=0,V=0] 
* CE 65: start(V,V4,V10,V28,V37) = 0+ group3(V,W37):2
     [V>=1,W37=0] 
* CE 66: start(V,V4,V10,V28,V37) = 0+ group3(V,W37):3
     [V>=W37+2,W37>=2] 
* CE 67: start(V,V4,V10,V28,V37) = 0+ group3(V,W37):4
     [V>=W37+1,3*W37>=2*V] 
* CE 68: start(V,V4,V10,V28,V37) = 0+ zip3(W37,V4,V10,X37):1
     [V10>=0,V4>=0,X37=0,W37=0,V=0] 
* CE 69: start(V,V4,V10,V28,V37) = 0+ zip3(V,W37,V10,X37):2
     [V10>=0,V>=1,X37=0,W37=0,V4=0] 
* CE 70: start(V,V4,V10,V28,V37) = 0+ zip3(V,V4,W37,X37):3
     [V4>=1,V>=1,X37=0,W37=0,V10=0] 
* CE 71: start(V,V4,V10,V28,V37) = 0+ zip3(V,V4,V10,W37):4
     [V+V4+V10>=W37+1,W37>=V+1,V10>=1,V4>=1,V>=1] 
* CE 72: start(V,V4,V10,V28,V37) = 0+ zip3(V,V4,V10,W37):5
     [V+V4+V10>=W37+2,W37>=V4+1,V10>=1,V4>=1,V>=2] 
* CE 73: start(V,V4,V10,V28,V37) = 0+ zip3(V,V4,V10,W37):6
     [V+V4+V10>=W37+3,W37>=V10+1,V10>=1,V4>=2,V>=2] 

### Cost equations --> "Loop" of start/5 
* CEs [46] --> Loop 17 
* CEs [39] --> Loop 18 
* CEs [30,70] --> Loop 19 
* CEs [45] --> Loop 20 
* CEs [31,33,34,35,36,37,38,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,71,72,73] --> Loop 21 
* CEs [32,64,68] --> Loop 22 

#### Loops of start/5 
* Loop 17: start(V,V4,V10,V28,V37) [V28>=0,V10>=1,V4>=0,V>=1,V37=0] 
* Loop 18: start(V,V4,V10,V28,V37) [V10>=0,V4>=1,V>=1,V28=0] 
* Loop 19: start(V,V4,V10,V28,V37) [V4>=1,V>=1,V10=0] 
* Loop 20: start(V,V4,V10,V28,V37) [V37>=0,V28>=0,V4>=0,V>=1,V10=0] 
* Loop 21: start(V,V4,V10,V28,V37) [V>=1] 
* Loop 22: start(V,V4,V10,V28,V37) [V=0] 

### Ranking functions of CR start(V,V4,V10,V28,V37) 

#### Partial ranking functions of CR start(V,V4,V10,V28,V37) 


### Resulting Chains:start(V,V4,V10,V28,V37) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  start/5 into  External patterns of execution 
* [[22]] --> 1 
* [[20],[21]] --> 2 
* [[19]] --> 3 
* [[18]] --> 4 
* [[17]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:group3(V,Out) -> [group3(V',Out')] 
4
#### Cost of phase [10]:group3(V,Out) -> [group3(V',Out')] 
4*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:group3(V,Out) -> [group3(V',Out')] 
4*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of chains of group3(V,Out):
* Chain [[10],12]: 4*it(10)+2
  Such that:it(10) =< V

  with precondition: [3*Out>=2*V,V>=Out+1] 

* Chain [[10],11]: 4*it(10)+4
  Such that:it(10) =< V

  with precondition: [Out>=2,V>=Out+2] 

* Chain [12]: 2
  with precondition: [V=0,Out=0] 

* Chain [11]: 4
  with precondition: [Out=0,V>=1] 


#### Cost of loops [13] 

 * loop 13:zip3(V,V4,V10,Out) -> [zip3(V',V4',V10',Out')] 
4
#### Cost of phase [13]:zip3(V,V4,V10,Out) -> [zip3(V',V4',V10',Out')] 
4*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'
it(13) =< V4
it(13) =< V4-V4'
it(13) =< V10
it(13) =< V10-V10'

#### Cost of phase [13]:zip3(V,V4,V10,Out) -> [zip3(V',V4',V10',Out')] 
4*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'
it(13) =< V4
it(13) =< V4-V4'
it(13) =< V10
it(13) =< V10-V10'

#### Cost of phase [13]:zip3(V,V4,V10,Out) -> [zip3(V',V4',V10',Out')] 
4*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'
it(13) =< V4
it(13) =< V4-V4'
it(13) =< V10
it(13) =< V10-V10'

#### Cost of chains of zip3(V,V4,V10,Out):
* Chain [[13],16]: 4*it(13)+2
  Such that:it(13) =< V4

  with precondition: [V>=1,V4>=1,V10>=1,Out>=V+1,V+V4+V10>=Out+1] 

* Chain [[13],15]: 4*it(13)+3
  Such that:it(13) =< V

  with precondition: [V>=2,V4>=1,V10>=1,Out>=V4+1,V+V4+V10>=Out+2] 

* Chain [[13],14]: 4*it(13)+4
  Such that:it(13) =< V4

  with precondition: [V>=2,V4>=2,V10>=1,Out>=V10+1,V+V4+V10>=Out+3] 

* Chain [16]: 2
  with precondition: [V=0,Out=0,V4>=0,V10>=0] 

* Chain [15]: 3
  with precondition: [V4=0,Out=0,V>=1,V10>=0] 

* Chain [14]: 4
  with precondition: [V10=0,Out=0,V>=1,V4>=1] 


#### Cost of chains of start(V,V4,V10,V28,V37):
* Chain [22]: 2
  with precondition: [V=0] 

* Chain [21]: 16*s(1)+48*s(2)+4*s(5)+8*s(7)+4*s(8)+7
  Such that:s(8) =< V10
s(5) =< V28
aux(1) =< V
aux(2) =< V4
aux(3) =< V37
s(2) =< aux(1)
s(1) =< aux(2)
s(7) =< aux(3)

  with precondition: [V>=1] 

* Chain [20]: 3
  with precondition: [V10=0,V>=1,V4>=0,V28>=0,V37>=0] 

* Chain [19]: 4
  with precondition: [V10=0,V>=1,V4>=1] 

* Chain [18]: 4
  with precondition: [V28=0,V>=1,V4>=1,V10>=0] 

* Chain [17]: 4
  with precondition: [V37=0,V>=1,V4>=0,V10>=1,V28>=0] 


Closed-form bounds of start(V,V4,V10,V28,V37): 
-------------------------------------
* Chain [22] with precondition: [V=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [21] with precondition: [V>=1] 
    - Upper bound: 48*V+7+nat(V4)*16+nat(V10)*4+nat(V28)*4+nat(V37)*8 
    - Complexity: n 
* Chain [20] with precondition: [V10=0,V>=1,V4>=0,V28>=0,V37>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [19] with precondition: [V10=0,V>=1,V4>=1] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [18] with precondition: [V28=0,V>=1,V4>=1,V10>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [17] with precondition: [V37=0,V>=1,V4>=0,V10>=1,V28>=0] 
    - Upper bound: 4 
    - Complexity: constant 

### Maximum cost of start(V,V4,V10,V28,V37): max([2,48*V+5+nat(V4)*16+nat(V10)*4+nat(V28)*4+nat(V37)*8])+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 147 ms.
* Invariants computed in 82 ms.
   - Backward Invariants 49 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 283 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 243 ms.
   - Equation cost structures 118 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 92 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 870 ms.

