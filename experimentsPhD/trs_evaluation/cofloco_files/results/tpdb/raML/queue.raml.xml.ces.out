
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [copyover/3,fun8/2,fun9/3]
1. recursive  : [dequeue/3,fun10/2,fun11/3,fun12/2,fun13/2]
2. non_recursive  : [fun14/3]
3. non_recursive  : [enqueue/3]
4. recursive  : [enqueues/3,fun15/3]
5. non_recursive  : [fun6/5]
6. non_recursive  : [fun7/3]
7. non_recursive  : [fun5/4]
8. non_recursive  : [children/5]
9. non_recursive  : [fun3/2]
10. recursive  : [breadth/3,fun/2,fun1/3,fun2/3,fun4/2]
11. non_recursive  : [empty/2]
12. non_recursive  : [fun17/2]
13. non_recursive  : [fun16/2]
14. non_recursive  : [startBreadth/2]
15. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into copyover/3
1. SCC is partially evaluated into dequeue/3
2. SCC is partially evaluated into fun14/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into enqueues/3
5. SCC is partially evaluated into fun6/5
6. SCC is partially evaluated into fun7/3
7. SCC is partially evaluated into fun5/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into fun3/2
10. SCC is partially evaluated into breadth/3
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into fun17/2
13. SCC is partially evaluated into fun16/2
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations copyover/3 
* CE 55 is refined into CE [79] 
* CE 54 is refined into CE [80] 
* CE 57 is refined into CE [81] 
* CE 56 is refined into CE [82] 


#### Refined cost equations copyover/3 
* CE 79: copyover(V1,V,Out) = 3
     [Out>=V+1,V>=0,V1+V+1=Out] 
* CE 80: copyover(V1,V,Out) = 2
     [V>=0,V1>=0,Out=0] 
* CE 81: copyover(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 82: copyover(V1,V,Out) = 3+ copyover(W1,X1,Out)
     [W1+X1>=V,X1>=1,W1>=0,V>=0,V1+V=W1+X1] 

### Cost equations --> "Loop" of copyover/3 
* CEs [82] --> Loop 31 
* CEs [79] --> Loop 32 
* CEs [80,81] --> Loop 33 

#### Loops of copyover/3 
* Loop 31: copyover(V1,V,Out)->  copyover(V1',V',Out)
                  [V1'+V'>=V,V'>=1,V1'>=0,V>=0,V1+V=V1'+V'] 
* Loop 32: copyover(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 33: copyover(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR copyover(V1,V,Out) 

#### Partial ranking functions of CR copyover(V1,V,Out) 


### Resulting Chains:copyover(V1,V,Out) 
* [[31]]...
* [[31],33]
* [[31],32]
* [33]
* [32]


### Merging Chains  copyover/3 into  External patterns of execution 
* [[33],[33,[31]]] --> 1 
* [[32],[32,[31]]] --> 2 
* [[[31]]] --> 3 


### Specialization of cost equations dequeue/3 
* CE 63 is refined into CE [83] 
* CE 58 is refined into CE [84] 
* CE 61 is refined into CE [85,86,87] 
* CE 62 is refined into CE [88] 
* CE 64 is refined into CE [89] 
* CE 59 is refined into CE [90] 
* CE 60 is refined into CE [91,92] 


#### Refined cost equations dequeue/3 
* CE 83: dequeue(V1,V,Out) = 3
     [Out>=V+2,Out>=3,V>=0,V1+V+2=Out] 
* CE 84: dequeue(V1,V,Out) = 3
     [V>=0,V1>=0,Out=0] 
* CE 85: dequeue(V1,V,Out) = 4+ copyover(W1,X1,Y1):1
     [W1>=V,W1>=1,V>=0,W1=V1+V,Y1=0,X1=0,Out=0] 
* CE 86: dequeue(V1,V,Out) = 4+ copyover(W1,X1,Y1):2
     [Y1>=V+1,Y1>=2,V>=0,Y1=V1+V+1,Y1=W1+1,X1=0,Out=0] 
* CE 87: dequeue(V1,V,Out) = 4+ copyover(W1,X1,Y1):3
     [W1>=V,Y1>=0,W1>=1,V>=0,W1=V1+V,X1=0,Out=0] 
* CE 88: dequeue(V1,V,Out) = 2
     [V>=0,V1>=0,Out=0] 
* CE 89: dequeue(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 90: dequeue(V1,V,Out) = 4
     [Out=2,V=0,V1=0] 
* CE 91: dequeue(V1,V,Out) = 5+ copyover(W1,X1,Y1):2+ dequeue(Z1,A2,Out)
     [Y1>=A2+1,Y1>=V+1,A2>=0,Y1>=2,V>=0,Y1=Z1+A2+1,Y1=V1+V+1,Y1=W1+1,X1=0] 
* CE 92: dequeue(V1,V,Out) = 5+ copyover(W1,X1,Y1):3
     [W1>=V,Z1>=0,A2>=0,W1>=1,V>=0,A2+Z1+1=Y1,W1=V1+V,X1=0] 

### Cost equations --> "Loop" of dequeue/3 
* CEs [87,92] --> Loop 34 
* CEs [91] --> Loop 35 
* CEs [83] --> Loop 36 
* CEs [84,85,86,88,89] --> Loop 37 
* CEs [90] --> Loop 38 

#### Loops of dequeue/3 
* Loop 34: dequeue(V1,V,Out) [V1+V>=1,V>=0,V1>=0] 
* Loop 35: dequeue(V1,V,Out)->  dequeue(V1',V',Out)
                  [V1'+V'>=V,V1'+V'>=1,V'>=0,V1'>=0,V>=0,V1+V=V1'+V'] 
* Loop 36: dequeue(V1,V,Out) [V1+V>=1,V>=0,V1>=0,V1+V+2=Out] 
* Loop 37: dequeue(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 38: dequeue(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR dequeue(V1,V,Out) 

#### Partial ranking functions of CR dequeue(V1,V,Out) 


### Resulting Chains:dequeue(V1,V,Out) 
* [[35]]...
* [[35],37]
* [[35],36]
* [[35],34]...
* [38]
* [37]
* [36]
* [34]...


### Merging Chains  dequeue/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37],[37,[35]]] --> 2 
* [[36],[36,[35]]] --> 3 
* [[34],[34,[35]]] --> 4 
* [[[35]]] --> 5 


### Specialization of cost equations fun14/3 
* CE 52 is refined into CE [93] 
* CE 53 is refined into CE [94] 


#### Refined cost equations fun14/3 
* CE 93: fun14(V1,V,Out) = 1
     [V>=0,V1>=1,V1+V+1=Out] 
* CE 94: fun14(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fun14/3 
* CEs [93] --> Loop 39 
* CEs [94] --> Loop 40 

#### Loops of fun14/3 
* Loop 39: fun14(V1,V,Out) [V>=0,V1>=1,V1+V+1=Out] 
* Loop 40: fun14(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun14(V1,V,Out) 

#### Partial ranking functions of CR fun14(V1,V,Out) 


### Resulting Chains:fun14(V1,V,Out) 
* [40]
* [39]


### Merging Chains  fun14/3 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations enqueues/3 
* CE 45 is refined into CE [95,96] 
* CE 43 is refined into CE [97] 
* CE 44 is refined into CE [98] 


#### Refined cost equations enqueues/3 
* CE 95: enqueues(V1,V,Out) = 3+ fun14(V,W1,X1):1+ enqueues(Y1,Z1,Out)
     [Y1>=0,W1>=0,V>=0,W1+Y1+1=V1,Z1=0,X1=0] 
* CE 96: enqueues(V1,V,Out) = 3+ fun14(V,W1,X1):2+ enqueues(Y1,X1,Out)
     [X1>=V+1,Y1>=0,V>=1,X1+Y1=V1+V,X1=V+W1+1] 
* CE 97: enqueues(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 98: enqueues(A,B,B) = 2
     [B>=0,A=0] 

### Cost equations --> "Loop" of enqueues/3 
* CEs [97] --> Loop 41 
* CEs [98] --> Loop 42 
* CEs [96] --> Loop 43 
* CEs [95] --> Loop 44 

#### Loops of enqueues/3 
* Loop 41: enqueues(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 42: enqueues(A,B,B) [B>=0,A=0] 
* Loop 43: enqueues(V1,V,Out)->  enqueues(V1',V',Out)
                  [V1>=V1'+1,V1'>=0,V>=1,V1+V=V1'+V'] 
* Loop 44: enqueues(V1,V,Out)->  enqueues(V1',V',Out)
                  [V1>=V1'+1,V1'>=0,V>=0,V'=0] 

### Ranking functions of CR enqueues(V1,V,Out) 
* RF of phase [43]: [V1]
* RF of phase [44]: [V1]

#### Partial ranking functions of CR enqueues(V1,V,Out) 
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    V1
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    V1


### Resulting Chains:enqueues(V1,V,Out) 
* [[44],42]
* [[44],41]
* [[43],[44],42]
* [[43],[44],41]
* [[43],42]
* [[43],41]
* [42]
* [41]


### Merging Chains  enqueues/3 into  External patterns of execution 
* [[42]] --> 1 
* [[41],[41,[43]],[41,[44],[43]],[42,[44],[43]],[41,[44]],[42,[44]]] --> 2 
* [[42,[43]]] --> 3 


### Specialization of cost equations fun6/5 
* CE 71 is refined into CE [99] 
* CE 72 is refined into CE [100] 
* CE 73 is refined into CE [101] 


#### Refined cost equations fun6/5 
* CE 99: fun6(V1,V,V21,V24,Out) = 1
     [V24>=0,V21>=0,V>=0,V1>=1,V1+V+2*V21+2*V24+3=Out] 
* CE 100: fun6(V1,V,V21,V24,Out) = 1
     [V24>=0,V21>=0,V>=0,Out=0,V1=0] 
* CE 101: fun6(V1,V,V21,V24,Out) = 0
     [V24>=0,V21>=0,V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fun6/5 
* CEs [99] --> Loop 45 
* CEs [100,101] --> Loop 46 

#### Loops of fun6/5 
* Loop 45: fun6(V1,V,V21,V24,Out) [V24>=0,V21>=0,V>=0,V1>=1,V1+V+2*V21+2*V24+3=Out] 
* Loop 46: fun6(V1,V,V21,V24,Out) [V24>=0,V21>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun6(V1,V,V21,V24,Out) 

#### Partial ranking functions of CR fun6(V1,V,V21,V24,Out) 


### Resulting Chains:fun6(V1,V,V21,V24,Out) 
* [46]
* [45]


### Merging Chains  fun6/5 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


### Specialization of cost equations fun7/3 
* CE 68 is refined into CE [102] 
* CE 69 is refined into CE [103] 
* CE 70 is refined into CE [104] 


#### Refined cost equations fun7/3 
* CE 102: fun7(V1,V,Out) = 1
     [V>=0,V1>=1,V1+V+1=Out] 
* CE 103: fun7(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 104: fun7(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fun7/3 
* CEs [102] --> Loop 47 
* CEs [103,104] --> Loop 48 

#### Loops of fun7/3 
* Loop 47: fun7(V1,V,Out) [V>=0,V1>=1,V1+V+1=Out] 
* Loop 48: fun7(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun7(V1,V,Out) 

#### Partial ranking functions of CR fun7(V1,V,Out) 


### Resulting Chains:fun7(V1,V,Out) 
* [48]
* [47]


### Merging Chains  fun7/3 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


### Specialization of cost equations fun5/4 
* CE 65 is refined into CE [105,106] 
* CE 67 is refined into CE [107] 
* CE 66 is refined into CE [108,109] 


#### Refined cost equations fun5/4 
* CE 105: fun5(V1,V,V21,Out) = 1+ fun6(V21,V,W21,X21,Y21):1
     [X21>=0,W21>=0,V>=0,V21>=0,W21+X21+1=V1,Y21=0,Out=0] 
* CE 106: fun5(V1,V,V21,Out) = 1+ fun6(V21,V,W21,X21,Out):2
     [Out>=2*W21+V+V21+3,W21>=0,V>=0,V21>=1,Out=2*W21+2*X21+V+V21+3,Out=2*V1+V+V21+1] 
* CE 107: fun5(V1,V,V21,Out) = 0
     [V21>=0,V>=0,V1>=0,Out=0] 
* CE 108: fun5(V1,V,V21,Out) = 1+ fun7(V21,V,W21):1
     [V>=0,V21>=0,W21=0,Out=0,V1=0] 
* CE 109: fun5(V1,V,V21,Out) = 1+ fun7(V21,W21,Out):2
     [Out>=V21+1,V21>=1,Out=V21+W21+1,Out=V+V21+1,V1=0] 

### Cost equations --> "Loop" of fun5/4 
* CEs [106] --> Loop 49 
* CEs [109] --> Loop 50 
* CEs [105,107,108] --> Loop 51 

#### Loops of fun5/4 
* Loop 49: fun5(V1,V,V21,Out) [V21>=1,V>=0,V1>=1,V+V21+2*V1+1=Out] 
* Loop 50: fun5(V1,V,V21,Out) [V21>=1,V>=0,V+V21+1=Out,V1=0] 
* Loop 51: fun5(V1,V,V21,Out) [V21>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun5(V1,V,V21,Out) 

#### Partial ranking functions of CR fun5(V1,V,V21,Out) 


### Resulting Chains:fun5(V1,V,V21,Out) 
* [51]
* [50]
* [49]


### Merging Chains  fun5/4 into  External patterns of execution 
* [[50]] --> 1 
* [[51]] --> 2 
* [[49]] --> 3 


### Specialization of cost equations fun3/2 
* CE 41 is refined into CE [110,111,112] 
* CE 42 is refined into CE [113] 


#### Refined cost equations fun3/2 
* CE 110: fun3(V1,Out) = 2+ fun5(W1,X1,Y1,Z1):1
     [V1>=Z1,Z1>=X1+2,X1>=0,Z1=X1+Y1+1,V1+X1+2=Out,W1=0] 
* CE 111: fun3(V1,Out) = 2+ fun5(W1,X1,Y1,Z1):2
     [V1>=W1+X1+Y1+1,Y1>=0,X1>=0,W1>=0,Out+W1+Y1=V1+1,Z1=0] 
* CE 112: fun3(V1,Out) = 2+ fun5(W1,X1,Y1,Z1):3
     [2*V1>=X1+Y1+Z1+1,Z1>=X1+Y1+3,Y1>=1,X1>=0,X1+Z1+2*V1+3=2*Out+Y1,Z1=2*W1+X1+Y1+1] 
* CE 113: fun3(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fun3/2 
* CEs [110,112] --> Loop 52 
* CEs [111] --> Loop 53 
* CEs [113] --> Loop 54 

#### Loops of fun3/2 
* Loop 52: fun3(V1,Out) [2*V1>=Out,Out>=V1+2] 
* Loop 53: fun3(V1,Out) [V1+1>=Out,Out>=2] 
* Loop 54: fun3(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR fun3(V1,Out) 

#### Partial ranking functions of CR fun3(V1,Out) 


### Resulting Chains:fun3(V1,Out) 
* [54]
* [53]
* [52]


### Merging Chains  fun3/2 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 


### Specialization of cost equations breadth/3 
* CE 48 is refined into CE [114,115,116,117,118,119,120,121] 
* CE 46 is refined into CE [122,123,124,125,126,127] 
* CE 49 is refined into CE [128,129,130,131] 
* CE 50 is refined into CE [132,133,134,135] 
* CE 51 is refined into CE [136,137,138,139,140] 
* CE 47 is refined into CE [141,142,143,144,145,146] 


#### Refined cost equations breadth/3 
* CE 114: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Out):2+ enqueues(Z1,A2,A2):1
     [X1>=Y1+A2+2,Y1+1>=Out,X1>=V1+2,A2>=0,Out>=2,V1>=0,X1=V1+W1+2,X1=V1+V+2,Z1=0] 
* CE 115: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):2+ enqueues(A2,B2,C2):2
     [X1>=Y1+B2+2,Z1>=A2+1,Y1+1>=Z1,X1>=V1+2,B2>=0,A2>=0,Z1>=2,V1>=0,Out+A2=Z1,X1=V1+W1+2,X1=V1+V+2,C2=0] 
* CE 116: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):2+ enqueues(A2,B2,C2):3
     [X1+A2>=Y1+C2+2,C2>=A2+1,Z1>=A2+1,Y1+1>=Z1,X1>=V1+2,A2>=1,V1>=0,C2=A2+B2,Out+A2=Z1,X1=V1+W1+2,X1=V1+V+2] 
* CE 117: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Out):3+ enqueues(Z1,A2,A2):1
     [X1>=Y1+A2+2,2*Y1>=Out,Out>=Y1+2,X1>=V1+2,A2>=0,V1>=0,X1=V1+W1+2,X1=V1+V+2,Z1=0] 
* CE 118: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):3+ enqueues(A2,B2,C2):2
     [X1>=Y1+B2+2,Z1>=A2+1,2*Y1>=Z1,Z1>=Y1+2,X1>=V1+2,B2>=0,A2>=0,V1>=0,Out+A2=Z1,X1=V1+W1+2,X1=V1+V+2,C2=0] 
* CE 119: breadth(V1,V,Out) = 4+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):3+ enqueues(A2,B2,C2):3
     [X1+A2>=Y1+C2+2,C2>=A2+1,Z1>=A2+1,2*Y1>=Z1,Z1>=Y1+2,X1>=V1+2,A2>=1,V1>=0,C2=A2+B2,Out+A2=Z1,X1=V1+W1+2,X1=V1+V+2] 
* CE 120: breadth(V1,V,Out) = 4+ dequeue(V1,V,W1):4
     [W1>=X1+Y1+2,V1+V>=1,Z1>=A2+1,B2>=0,Y1>=0,A2>=0,X1>=0,V>=0,V1>=0,Out+A2=Z1] 
* CE 121: breadth(V1,V,Out) = 4+ dequeue(V1,V,W1):5
     [W1>=X1+Y1+2,V1+V>=1,Z1>=A2+1,B2>=0,Y1>=0,A2>=0,X1>=0,V>=0,V1>=0,Out+A2=Z1] 
* CE 122: breadth(V1,V,Out) = 3+ dequeue(W1,X1,Y1):1+ fun3(Z1,A2):1
     [A2=0,Z1=0,Y1=2,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 123: breadth(V1,V,Out) = 3+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):1
     [X1>=Y1+2,X1>=V1+2,Y1>=0,X1>=3,V1>=0,X1=V1+W1+2,X1=V1+V+2,Z1=0,Out=0] 
* CE 124: breadth(V1,V,Out) = 3+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):2
     [Y1+1>=Z1,X1>=Y1+2,X1>=V1+2,Z1>=2,V1>=0,X1=V1+W1+2,X1=V1+V+2,Out=0] 
* CE 125: breadth(V1,V,Out) = 3+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):3
     [2*Y1>=Z1,Z1>=Y1+2,X1>=Y1+2,X1>=V1+2,V1>=0,X1=V1+W1+2,X1=V1+V+2,Out=0] 
* CE 126: breadth(V1,V,Out) = 3+ dequeue(V1,V,W1):4
     [V1+V>=1,W1>=X1+2,Y1>=0,X1>=0,V>=0,V1>=0,Out=0] 
* CE 127: breadth(V1,V,Out) = 3+ dequeue(V1,V,W1):5
     [V1+V>=1,W1>=X1+2,Y1>=0,X1>=0,V>=0,V1>=0,Out=0] 
* CE 128: breadth(V1,V,Out) = 2+ dequeue(W1,X1,Y1):1
     [Y1=2,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 129: breadth(V1,V,Out) = 2+ dequeue(V1,W1,X1):3
     [X1>=V1+2,X1>=3,V1>=0,X1=V1+W1+2,X1=V1+V+2,Out=0] 
* CE 130: breadth(V1,V,Out) = 2+ dequeue(V1,V,W1):4
     [V1+V>=1,W1>=1,V>=0,V1>=0,Out=0] 
* CE 131: breadth(V1,V,Out) = 2+ dequeue(V1,V,W1):5
     [V1+V>=1,W1>=1,V>=0,V1>=0,Out=0] 
* CE 132: breadth(V1,V,Out) = 3+ dequeue(W1,X1,Y1):1
     [Y1=2,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 133: breadth(V1,V,Out) = 3+ dequeue(V1,W1,X1):3
     [X1>=V1+2,X1>=3,V1>=0,X1=V1+W1+2,X1=V1+V+2,Out=0] 
* CE 134: breadth(V1,V,Out) = 3+ dequeue(V1,V,W1):4
     [V1+V>=1,W1>=1,V>=0,V1>=0,Out=0] 
* CE 135: breadth(V1,V,Out) = 3+ dequeue(V1,V,W1):5
     [V1+V>=1,W1>=1,V>=0,V1>=0,Out=0] 
* CE 136: breadth(V1,V,Out) = 1+ dequeue(W1,X1,Y1):1
     [Y1=2,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 137: breadth(V1,V,Out) = 1+ dequeue(V1,V,W1):2
     [V>=0,V1>=0,W1=0,Out=0] 
* CE 138: breadth(V1,V,Out) = 1+ dequeue(V1,W1,X1):3
     [X1>=V1+2,X1>=3,V1>=0,X1=V1+W1+2,X1=V1+V+2,Out=0] 
* CE 139: breadth(V1,V,Out) = 1+ dequeue(V1,V,W1):4
     [V1+V>=1,W1>=0,V>=0,V1>=0,Out=0] 
* CE 140: breadth(V1,V,Out) = 1+ dequeue(V1,V,W1):5
     [V1+V>=1,W1>=0,V>=0,V1>=0,Out=0] 
* CE 141: breadth(V1,V,Out) = 5+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):2+ enqueues(A2,B2,B2):1+ breadth(C2,D2,E2)
     [X1>=Y1+B2+2,B2>=D2+1,Y1+1>=Z1,X1>=V1+2,D2>=0,Z1>=2,V1>=0,B2=C2+D2+1,X1=V1+W1+2,Z1+E2=Out,X1=V1+V+2,A2=0] 
* CE 142: breadth(V1,V,Out) = 5+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):2+ enqueues(A2,B2,C2):3+ breadth(D2,E2,F2)
     [X1+A2>=Y1+C2+2,C2>=E2+1,C2>=A2+1,Z1>=A2+1,Y1+1>=Z1,X1>=V1+2,E2>=0,A2>=1,V1>=0,Out+A2=Z1+F2,C2=D2+E2+1,C2=A2+B2,X1=V1+W1+2,X1=V1+V+2] 
* CE 143: breadth(V1,V,Out) = 5+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):3+ enqueues(A2,B2,B2):1+ breadth(C2,D2,E2)
     [X1>=Y1+B2+2,B2>=D2+1,2*Y1>=Z1,Z1>=Y1+2,X1>=V1+2,D2>=0,V1>=0,B2=C2+D2+1,X1=V1+W1+2,Z1+E2=Out,X1=V1+V+2,A2=0] 
* CE 144: breadth(V1,V,Out) = 5+ dequeue(V1,W1,X1):3+ fun3(Y1,Z1):3+ enqueues(A2,B2,C2):3+ breadth(D2,E2,F2)
     [X1+A2>=Y1+C2+2,C2>=E2+1,C2>=A2+1,Z1>=A2+1,2*Y1>=Z1,Z1>=Y1+2,X1>=V1+2,E2>=0,A2>=1,V1>=0,Out+A2=Z1+F2,C2=D2+E2+1,C2=A2+B2,X1=V1+W1+2,X1=V1+V+2] 
* CE 145: breadth(V1,V,Out) = 5+ dequeue(V1,V,W1):4
     [W1>=X1+Y1+2,Z1+A2>=Out,V1+V>=1,Out>=A2+1,B2>=0,C2>=0,Y1>=0,X1>=0,V>=0,V1>=0,Z1+A2=Out+D2,C2+B2+1=E2] 
* CE 146: breadth(V1,V,Out) = 5+ dequeue(V1,V,W1):5
     [W1>=X1+Y1+2,Z1+A2>=Out,V1+V>=1,Out>=A2+1,B2>=0,C2>=0,Y1>=0,X1>=0,V>=0,V1>=0,Z1+A2=Out+D2,C2+B2+1=E2] 

### Cost equations --> "Loop" of breadth/3 
* CEs [120,121] --> Loop 55 
* CEs [126,127,130,131,134,135,139,140,145,146] --> Loop 56 
* CEs [143] --> Loop 57 
* CEs [141] --> Loop 58 
* CEs [142] --> Loop 59 
* CEs [144] --> Loop 60 
* CEs [117,118,119] --> Loop 61 
* CEs [114,115,116] --> Loop 62 
* CEs [122,123,124,125,128,129,132,133,136,137,138] --> Loop 63 

#### Loops of breadth/3 
* Loop 55: breadth(V1,V,Out) [V1+V>=1,Out>=1,V>=0,V1>=0] 
* Loop 56: breadth(V1,V,Out) [V1+V>=1,V>=0,V1>=0] 
* Loop 57: breadth(V1,V,Out)->  breadth(V1',V',Out')
                  [Out'+2*V1+2*V>=2*V1'+2*V'+Out+2,Out>=Out'+4,V'>=0,V1'>=0,V>=0,V1>=0] 
* Loop 58: breadth(V1,V,Out)->  breadth(V1',V',Out')
                  [V1+V+Out'>=Out+V1'+V',Out>=Out'+2,V'>=0,V1'>=0,V>=0,V1>=0] 
* Loop 59: breadth(V1,V,Out)->  breadth(V1',V',Out')
                  [V1+V+Out'>=Out+V1'+V',V1'+V'>=1,Out>=Out'+1,V'>=0,V1'>=0,V>=0,V1>=0] 
* Loop 60: breadth(V1,V,Out)->  breadth(V1',V',Out')
                  [Out'+2*V1+2*V>=Out+V1'+V'+2,Out+V1'+V'>=Out'+4,V1'+V'>=1,Out>=Out'+1,V'>=0,V1'>=0,V>=0,V1>=0] 
* Loop 61: breadth(V1,V,Out) [2*V1+2*V>=Out,V1+V>=2,Out>=1,V>=0,V1>=0] 
* Loop 62: breadth(V1,V,Out) [V1+V+1>=Out,V1+V>=1,Out>=1,V>=0,V1>=0] 
* Loop 63: breadth(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR breadth(V1,V,Out) 

#### Partial ranking functions of CR breadth(V1,V,Out) 
* Partial RF of phase [57,58,59,60]:
  - RF of loop [57:1]:
    V1+V-2 depends on loops [60:1] 
  - RF of loop [58:1,59:1]:
    V1+V-1 depends on loops [60:1] 


### Resulting Chains:breadth(V1,V,Out) 
* [[57,58,59,60]]...
* [[57,58,59,60],63]
* [[57,58,59,60],62]
* [[57,58,59,60],61]
* [[57,58,59,60],56]...
* [[57,58,59,60],55]...
* [63]
* [62]
* [61]
* [56]...
* [55]...


### Merging Chains  breadth/3 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 
* [[61],[61,[57,58,59,60]],[62,[57,58,59,60]],[63,[57,58,59,60]]] --> 3 
* [[55]] --> 4 
* [[55,[57,58,59,60]]] --> 5 
* [[56]] --> 6 
* [[56,[57,58,59,60]]] --> 7 
* [[[57,58,59,60]]] --> 8 


### Specialization of cost equations fun17/2 
* CE 77 is refined into CE [147,148,149,150,151,152,153,154] 
* CE 78 is refined into CE [155] 


#### Refined cost equations fun17/2 
* CE 147: fun17(V1,Out) = 1+ breadth(W1,X1,Y1):1
     [X1>=0,W1>=0,W1+X1+1=V1,Y1=0,Out=0] 
* CE 148: fun17(V1,Out) = 1+ breadth(W1,X1,Out):2
     [W1+X1+1>=Out,W1+X1>=1,Out>=1,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 149: fun17(V1,Out) = 1+ breadth(W1,X1,Out):3
     [W1+X1>=2,Out>=1,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 150: fun17(V1,Out) = 1+ breadth(W1,X1,Out):4
     [W1+X1>=1,Out>=1,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 151: fun17(V1,Out) = 1+ breadth(W1,X1,Out):5
     [W1+X1>=2,Out>=2,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 152: fun17(V1,Out) = 1+ breadth(W1,X1,Out):6
     [W1+X1>=1,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 153: fun17(V1,Out) = 1+ breadth(W1,X1,Out):7
     [W1+X1>=2,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 154: fun17(V1,Out) = 1+ breadth(W1,X1,Out):8
     [W1+X1>=2,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 155: fun17(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fun17/2 
* CEs [149] --> Loop 64 
* CEs [148] --> Loop 65 
* CEs [147,155] --> Loop 66 
* CEs [150,151,152,153,154] --> Loop 67 

#### Loops of fun17/2 
* Loop 64: fun17(V1,Out) [Out>=1,V1>=3] 
* Loop 65: fun17(V1,Out) [V1>=Out,Out>=1,V1>=2] 
* Loop 66: fun17(V1,Out) [V1>=0,Out=0] 
* Loop 67: fun17(V1,Out) [V1>=2] 

### Ranking functions of CR fun17(V1,Out) 

#### Partial ranking functions of CR fun17(V1,Out) 


### Resulting Chains:fun17(V1,Out) 
* [67]...
* [66]
* [65]
* [64]


### Merging Chains  fun17/2 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[67]] --> 4 


### Specialization of cost equations fun16/2 
* CE 74 is refined into CE [156,157,158,159,160] 
* CE 75 is refined into CE [161] 
* CE 76 is refined into CE [162] 


#### Refined cost equations fun16/2 
* CE 156: fun16(V1,Out) = 3+ fun14(W1,X1,Y1):1+ fun17(Z1,A2):1
     [X1>=1,X1+1=2*V1,A2=0,Z1=0,Y1=0,W1=1,Out=0] 
* CE 157: fun16(V1,Out) = 3+ fun14(W1,X1,Y1):2+ fun17(Y1,Z1):1
     [Y1>=3,Y1=X1+2,Y1=2*V1+1,Z1=0,W1=1,Out=0] 
* CE 158: fun16(V1,Out) = 3+ fun14(W1,X1,Y1):2+ fun17(Y1,Out):2
     [Y1>=Out,Out>=1,Y1>=3,Y1=X1+2,Y1=2*V1+1,W1=1] 
* CE 159: fun16(V1,Out) = 3+ fun14(W1,X1,Y1):2+ fun17(Y1,Out):3
     [Out>=1,Y1>=3,Y1=X1+2,Y1=2*V1+1,W1=1] 
* CE 160: fun16(V1,Out) = 3+ fun14(W1,X1,Y1):2+ fun17(Y1,Out):4
     [Y1>=3,Y1=X1+2,Y1=2*V1+1,W1=1] 
* CE 161: fun16(V1,Out) = 1
     [Out=0,V1=0] 
* CE 162: fun16(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fun16/2 
* CEs [158,159] --> Loop 68 
* CEs [156,157,161,162] --> Loop 69 
* CEs [160] --> Loop 70 

#### Loops of fun16/2 
* Loop 68: fun16(V1,Out) [Out>=1,V1>=1] 
* Loop 69: fun16(V1,Out) [V1>=0,Out=0] 
* Loop 70: fun16(V1,Out) [V1>=1] 

### Ranking functions of CR fun16(V1,Out) 

#### Partial ranking functions of CR fun16(V1,Out) 


### Resulting Chains:fun16(V1,Out) 
* [70]...
* [69]
* [68]


### Merging Chains  fun16/2 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 
* [[70]] --> 3 


### Specialization of cost equations start/4 
* CE 16 is refined into CE [163] 
* CE 2 is refined into CE [164,165,166] 
* CE 3 is refined into CE [167,168,169] 
* CE 4 is refined into CE [170] 
* CE 5 is refined into CE [171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202] 
* CE 6 is refined into CE [203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234] 
* CE 7 is refined into CE [235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250] 
* CE 8 is refined into CE [251,252,253,254,255,256] 
* CE 9 is refined into CE [257,258,259,260,261,262] 
* CE 10 is refined into CE [263,264,265] 
* CE 11 is refined into CE [266] 
* CE 12 is refined into CE [267] 
* CE 13 is refined into CE [268] 
* CE 14 is refined into CE [269,270,271,272,273,274,275,276] 
* CE 15 is refined into CE [277,278,279,280,281] 
* CE 17 is refined into CE [282] 
* CE 18 is refined into CE [283,284,285,286,287] 
* CE 19 is refined into CE [288,289,290,291,292] 
* CE 20 is refined into CE [293,294,295,296,297] 
* CE 21 is refined into CE [298,299,300] 
* CE 22 is refined into CE [301,302,303] 
* CE 23 is refined into CE [304,305,306] 
* CE 24 is refined into CE [307,308,309,310,311] 
* CE 25 is refined into CE [312,313,314] 
* CE 26 is refined into CE [315,316,317] 
* CE 27 is refined into CE [318,319,320,321,322,323,324,325] 
* CE 28 is refined into CE [326,327,328] 
* CE 29 is refined into CE [329,330,331] 
* CE 30 is refined into CE [332,333,334] 
* CE 31 is refined into CE [335,336] 
* CE 32 is refined into CE [337,338] 
* CE 33 is refined into CE [339,340,341] 
* CE 34 is refined into CE [342,343,344,345,346] 
* CE 35 is refined into CE [347,348] 
* CE 36 is refined into CE [349,350] 
* CE 37 is refined into CE [351,352,353] 
* CE 38 is refined into CE [354,355,356] 
* CE 39 is refined into CE [357,358,359] 
* CE 40 is refined into CE [360,361,362,363] 


#### Refined cost equations start/4 
* CE 163: start(V1,V,V21,V24) = 3
     [V1=1] 
* CE 164: start(V1,V,V21,V24) = 2+ fun3(W24,X24):1
     [V1>=W24+2,W24>=0,X24=0] 
* CE 165: start(V1,V,V21,V24) = 2+ fun3(W24,X24):2
     [W24+1>=X24,V1>=W24+2,X24>=2] 
* CE 166: start(V1,V,V21,V24) = 2+ fun3(W24,X24):3
     [2*W24>=X24,X24>=W24+2,V1>=W24+2] 
* CE 167: start(V1,V,V21,V24) = 1+ fun3(W24,X24):1
     [V1>=W24+1,W24>=0,V>=0,X24=0] 
* CE 168: start(V1,V,V21,V24) = 1+ fun3(W24,X24):2
     [W24+1>=X24,V1>=W24+1,X24>=2,V>=0] 
* CE 169: start(V1,V,V21,V24) = 1+ fun3(W24,X24):3
     [2*W24>=X24,X24>=W24+2,V1>=W24+1,V>=0] 
* CE 170: start(V1,V,V21,V24) = 0
     [V1>=0] 
* CE 171: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):1
     [V1>=W24+B25+C25+3,W24+1>=X24,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,D25=0,Y24=0] 
* CE 172: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):2
     [V1>=W24+B25+C25+3,B25+C25+1>=D25,B25+C25>=1,W24+1>=X24,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 173: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):3
     [V1>=W24+B25+C25+3,B25+C25>=2,W24+1>=X24,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 174: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):4
     [V1>=W24+B25+C25+3,B25+C25>=1,W24+1>=X24,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 175: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):5
     [V1>=W24+B25+C25+3,B25+C25>=2,W24+1>=X24,D25>=2,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 176: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):6
     [V1>=W24+B25+C25+3,B25+C25>=1,W24+1>=X24,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 177: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):7
     [V1>=W24+B25+C25+3,B25+C25>=2,W24+1>=X24,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 178: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):8
     [V1>=W24+B25+C25+3,B25+C25>=2,W24+1>=X24,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 179: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):1
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25,D25=0] 
* CE 180: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):2
     [V1+Y24>=W24+B25+C25+3,B25+C25+1>=D25,B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 181: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):3
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 182: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):4
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 183: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):5
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,D25>=2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 184: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):6
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 185: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):7
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 186: start(V1,V,V21,V24) = 4+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):8
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 187: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):1
     [V1>=W24+B25+C25+3,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,D25=0,Y24=0] 
* CE 188: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):2
     [V1>=W24+B25+C25+3,B25+C25+1>=D25,B25+C25>=1,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 189: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):3
     [V1>=W24+B25+C25+3,B25+C25>=2,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 190: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):4
     [V1>=W24+B25+C25+3,B25+C25>=1,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 191: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):5
     [V1>=W24+B25+C25+3,B25+C25>=2,2*W24>=X24,X24>=W24+2,D25>=2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 192: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):6
     [V1>=W24+B25+C25+3,B25+C25>=1,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 193: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):7
     [V1>=W24+B25+C25+3,B25+C25>=2,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 194: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):8
     [V1>=W24+B25+C25+3,B25+C25>=2,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,Y24=0] 
* CE 195: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):1
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25,D25=0] 
* CE 196: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):2
     [V1+Y24>=W24+B25+C25+3,B25+C25+1>=D25,B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 197: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):3
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 198: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):4
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 199: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):5
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,D25>=2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 200: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):6
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 201: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):7
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 202: start(V1,V,V21,V24) = 4+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):8
     [V1+Y24>=W24+B25+C25+3,B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=A25] 
* CE 203: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):1
     [W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,D25=0,Y24=0] 
* CE 204: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):2
     [B25+C25+1>=D25,B25+C25>=1,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 205: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):3
     [B25+C25>=2,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 206: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):4
     [B25+C25>=1,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 207: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):5
     [B25+C25>=2,W24+1>=X24,V1>=W24+1,D25>=2,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 208: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):6
     [B25+C25>=1,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 209: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):7
     [B25+C25>=2,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 210: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):8
     [B25+C25>=2,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,X24>=2,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 211: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):1
     [B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25,D25=0] 
* CE 212: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):2
     [B25+C25+1>=D25,B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 213: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):3
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 214: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):4
     [B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 215: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):5
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,V1>=W24+1,D25>=2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 216: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):6
     [B25+C25>=Y24,X24>=Y24+1,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 217: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):7
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 218: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):8
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,W24+1>=X24,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 219: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):1
     [2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,D25=0,Y24=0] 
* CE 220: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):2
     [B25+C25+1>=D25,B25+C25>=1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 221: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):3
     [B25+C25>=2,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 222: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):4
     [B25+C25>=1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 223: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):5
     [B25+C25>=2,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=2,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 224: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):6
     [B25+C25>=1,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 225: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):7
     [B25+C25>=2,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 226: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):1+ breadth(B25,C25,D25):8
     [B25+C25>=2,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,B25+C25+1=A25,B25+C25+1=Z24,B25+C25+1=V,Y24=0] 
* CE 227: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):1
     [B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25,D25=0] 
* CE 228: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):2
     [B25+C25+1>=D25,B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 229: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):3
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 230: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):4
     [B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 231: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):5
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,D25>=2,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 232: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):6
     [B25+C25>=Y24,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 233: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):7
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 234: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3+ breadth(B25,C25,D25):8
     [B25+C25>=Y24,B25+C25>=2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,C25>=0,B25>=0,Y24>=1,B25+C25+1=Y24+Z24,B25+C25+1=V+Y24,B25+C25+1=A25] 
* CE 235: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):1
     [A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,B25=0,W24=0] 
* CE 236: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):2
     [Z24+A25+1>=B25,Z24+A25>=1,B25>=1,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 237: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):3
     [Z24+A25>=2,B25>=1,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 238: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):4
     [Z24+A25>=1,B25>=1,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 239: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):5
     [Z24+A25>=2,B25>=2,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 240: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):6
     [Z24+A25>=1,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 241: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):7
     [Z24+A25>=2,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 242: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):1+ breadth(Z24,A25,B25):8
     [Z24+A25>=2,A25>=0,Z24>=0,V1>=1,Z24+A25+1=Y24,Z24+A25+1=X24,Z24+A25+1=V,W24=0] 
* CE 243: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):1
     [Z24+A25>=W24,V1>=W24+1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24,B25=0] 
* CE 244: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):2
     [Z24+A25+1>=B25,Z24+A25>=W24,V1>=W24+1,B25>=1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 245: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):3
     [Z24+A25>=W24,Z24+A25>=2,V1>=W24+1,B25>=1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 246: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):4
     [Z24+A25>=W24,V1>=W24+1,B25>=1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 247: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):5
     [Z24+A25>=W24,Z24+A25>=2,V1>=W24+1,B25>=2,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 248: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):6
     [Z24+A25>=W24,V1>=W24+1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 249: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):7
     [Z24+A25>=W24,Z24+A25>=2,V1>=W24+1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 250: start(V1,V,V21,V24) = 2+ enqueues(W24,X24,Y24):3+ breadth(Z24,A25,B25):8
     [Z24+A25>=W24,Z24+A25>=2,V1>=W24+1,A25>=0,Z24>=0,W24>=1,Z24+A25+1=W24+X24,Z24+A25+1=V+W24,Z24+A25+1=Y24] 
* CE 251: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,Z24):1
     [V1>=W24+Z24+2,W24+1>=X24,Z24>=0,X24>=2,Y24=0] 
* CE 252: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):2
     [V1>=W24+Z24+2,X24>=Y24+1,W24+1>=X24,Z24>=0,Y24>=0,X24>=2,A25=0] 
* CE 253: start(V1,V,V21,V24) = 3+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3
     [V1+Y24>=W24+A25+2,A25>=Y24+1,X24>=Y24+1,W24+1>=X24,Y24>=1,A25=Y24+Z24] 
* CE 254: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,Z24):1
     [V1>=W24+Z24+2,2*W24>=X24,X24>=W24+2,Z24>=0,Y24=0] 
* CE 255: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):2
     [V1>=W24+Z24+2,X24>=Y24+1,2*W24>=X24,X24>=W24+2,Z24>=0,Y24>=0,A25=0] 
* CE 256: start(V1,V,V21,V24) = 3+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3
     [V1+Y24>=W24+A25+2,A25>=Y24+1,X24>=Y24+1,2*W24>=X24,X24>=W24+2,Y24>=1,A25=Y24+Z24] 
* CE 257: start(V1,V,V21,V24) = 2+ fun3(W24,X24):2+ enqueues(Y24,V,V):1
     [W24+1>=X24,V1>=W24+1,V>=0,X24>=2,Y24=0] 
* CE 258: start(V1,V,V21,V24) = 2+ fun3(W24,X24):2+ enqueues(Y24,V,Z24):2
     [X24>=Y24+1,W24+1>=X24,V1>=W24+1,V>=0,Y24>=0,X24>=2,Z24=0] 
* CE 259: start(V1,V,V21,V24) = 2+ fun3(W24,X24):2+ enqueues(Y24,Z24,A25):3
     [A25>=Y24+1,X24>=Y24+1,W24+1>=X24,V1>=W24+1,Y24>=1,A25=Y24+Z24,A25=V+Y24] 
* CE 260: start(V1,V,V21,V24) = 2+ fun3(W24,X24):3+ enqueues(Y24,V,V):1
     [2*W24>=X24,X24>=W24+2,V1>=W24+1,V>=0,Y24=0] 
* CE 261: start(V1,V,V21,V24) = 2+ fun3(W24,X24):3+ enqueues(Y24,V,Z24):2
     [X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,V>=0,Y24>=0,Z24=0] 
* CE 262: start(V1,V,V21,V24) = 2+ fun3(W24,X24):3+ enqueues(Y24,Z24,A25):3
     [A25>=Y24+1,X24>=Y24+1,2*W24>=X24,X24>=W24+2,V1>=W24+1,Y24>=1,A25=Y24+Z24,A25=V+Y24] 
* CE 263: start(V1,V,V21,V24) = 1+ enqueues(W24,V,V):1
     [V>=0,V1>=1,W24=0] 
* CE 264: start(V1,V,V21,V24) = 1+ enqueues(W24,V,X24):2
     [V1>=W24+1,V>=0,W24>=0,X24=0] 
* CE 265: start(V1,V,V21,V24) = 1+ enqueues(W24,X24,Y24):3
     [Y24>=W24+1,V1>=W24+1,W24>=1,Y24=W24+X24,Y24=V+W24] 
* CE 266: start(V1,V,V21,V24) = 1
     [V1>=0] 
* CE 267: start(V1,V,V21,V24) = 2
     [V1>=1] 
* CE 268: start(V1,V,V21,V24) = 1
     [V1=0] 
* CE 269: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):1
     [X24>=0,W24>=0,W24+X24+1=V1,Y24=0] 
* CE 270: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):2
     [W24+X24+1>=Y24,W24+X24>=1,Y24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 271: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):3
     [W24+X24>=2,Y24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 272: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):4
     [W24+X24>=1,Y24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 273: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):5
     [W24+X24>=2,Y24>=2,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 274: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):6
     [W24+X24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 275: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):7
     [W24+X24>=2,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 276: start(V1,V,V21,V24) = 1+ breadth(W24,X24,Y24):8
     [W24+X24>=2,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 277: start(V1,V,V21,V24) = 2+ fun14(V,W24,X24):1+ enqueues(Y24,Z24,A25):1
     [W24>=0,V>=0,W24+1=V1,A25=0,Z24=0,Y24=0,X24=0] 
* CE 278: start(V1,V,V21,V24) = 2+ fun14(V,W24,X24):1+ enqueues(Y24,Z24,A25):2
     [Y24>=0,W24>=0,V>=0,W24+Y24+1=V1,A25=0,Z24=0,X24=0] 
* CE 279: start(V1,V,V21,V24) = 2+ fun14(V,W24,X24):2+ enqueues(Y24,X24,X24):1
     [X24>=V+1,V>=1,X24=V+W24+1,X24=V1+V,Y24=0] 
* CE 280: start(V1,V,V21,V24) = 2+ fun14(V,W24,X24):2+ enqueues(Y24,X24,Z24):2
     [X24>=V+1,Y24>=0,V>=1,X24+Y24=V1+V,X24=V+W24+1,Z24=0] 
* CE 281: start(V1,V,V21,V24) = 2+ fun14(V,W24,X24):2+ enqueues(Y24,Z24,A25):3
     [A25>=V+Y24+1,Y24>=1,V>=1,A25=V+W24+Y24+1,A25=Y24+Z24,A25=X24+Y24,A25=V1+V] 
* CE 282: start(V1,V,V21,V24) = 2
     [V=0,V1=0] 
* CE 283: start(V1,V,V21,V24) = 4+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):2
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25+1=V1,B25=0,X24=0] 
* CE 284: start(V1,V,V21,V24) = 4+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):3
     [B25>=Z24+2,B25>=3,Z24>=0,B25=Z24+A25+2,B25=Y24+1,B25=W24+2,B25=V1+1,X24=0] 
* CE 285: start(V1,V,V21,V24) = 4+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):4
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25+1=V1,X24=0] 
* CE 286: start(V1,V,V21,V24) = 4+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):5
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25+1=V1,X24=0] 
* CE 287: start(V1,V,V21,V24) = 4+ copyover(W24,X24,Y24):3
     [Z24>=0,A25>=0,W24>=1,A25+Z24+1=Y24,W24+1=V1,X24=0] 
* CE 288: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):2
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V,B25=0,X24=0,V1=0] 
* CE 289: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):3
     [B25>=Z24+2,B25>=3,Z24>=0,B25=Z24+A25+2,B25=Y24+1,B25=W24+2,B25=V+2,X24=0,V1=0] 
* CE 290: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):4
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V,X24=0,V1=0] 
* CE 291: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):5
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V,X24=0,V1=0] 
* CE 292: start(V1,V,V21,V24) = 3+ copyover(V,W24,X24):3
     [Y24>=0,Z24>=0,V>=1,Z24+Y24+1=X24,W24=0,V1=0] 
* CE 293: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):2
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V1,B25=0,X24=0] 
* CE 294: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):3
     [B25>=Z24+2,B25>=3,Z24>=0,B25=Z24+A25+2,B25=Y24+1,B25=W24+2,B25=V1+2,X24=0] 
* CE 295: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):4
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V1,X24=0] 
* CE 296: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):2+ dequeue(Z24,A25,B25):5
     [Z24+A25>=1,A25>=0,Z24>=0,Z24+A25+1=Y24,Z24+A25=W24,Z24+A25=V1,X24=0] 
* CE 297: start(V1,V,V21,V24) = 2+ copyover(V1,W24,X24):3
     [Y24>=0,Z24>=0,V1>=1,Z24+Y24+1=X24,W24=0] 
* CE 298: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):1
     [W24>=1,W24+1=V1,Y24=0,X24=0] 
* CE 299: start(V1,V,V21,V24) = 3+ copyover(W24,X24,V1):2
     [V1>=2,V1=W24+1,X24=0] 
* CE 300: start(V1,V,V21,V24) = 3+ copyover(W24,X24,Y24):3
     [Y24>=0,W24>=1,W24+1=V1,X24=0] 
* CE 301: start(V1,V,V21,V24) = 2+ copyover(V,W24,X24):1
     [V>=1,X24=0,W24=0,V1=0] 
* CE 302: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):2
     [Y24>=2,Y24=W24+1,Y24=V+1,X24=0,V1=0] 
* CE 303: start(V1,V,V21,V24) = 2+ copyover(V,W24,X24):3
     [X24>=0,V>=1,W24=0,V1=0] 
* CE 304: start(V1,V,V21,V24) = 1+ copyover(V1,W24,X24):1
     [V1>=1,X24=0,W24=0] 
* CE 305: start(V1,V,V21,V24) = 1+ copyover(W24,X24,Y24):2
     [Y24>=2,Y24=W24+1,Y24=V1+1,X24=0] 
* CE 306: start(V1,V,V21,V24) = 1+ copyover(V1,W24,X24):3
     [X24>=0,V1>=1,W24=0] 
* CE 307: start(V1,V,V21,V24) = 1+ dequeue(W24,X24,Y24):1
     [Y24=2,X24=0,W24=0,V1=1] 
* CE 308: start(V1,V,V21,V24) = 1+ dequeue(W24,X24,Y24):2
     [X24>=0,W24>=0,W24+X24+1=V1,Y24=0] 
* CE 309: start(V1,V,V21,V24) = 1+ dequeue(W24,X24,Y24):3
     [Y24>=W24+2,Y24>=3,W24>=0,Y24=W24+X24+2,Y24=V1+1] 
* CE 310: start(V1,V,V21,V24) = 1+ dequeue(W24,X24,Y24):4
     [W24+X24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 311: start(V1,V,V21,V24) = 1+ dequeue(W24,X24,Y24):5
     [W24+X24>=1,X24>=0,W24>=0,W24+X24+1=V1] 
* CE 312: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):1
     [X24>=1,W24>=0,W24+X24+1=V1,Y24=0] 
* CE 313: start(V1,V,V21,V24) = 2+ copyover(W24,X24,V1):2
     [V1>=W24+2,W24>=0,V1=W24+X24+1] 
* CE 314: start(V1,V,V21,V24) = 2+ copyover(W24,X24,Y24):3
     [X24>=1,W24>=0,W24+X24+1=V1] 
* CE 315: start(V1,V,V21,V24) = 1+ copyover(W24,X24,Y24):1
     [W24+X24>=V1,V1>=W24+1,W24>=0,W24+X24=V1+V,Y24=0] 
* CE 316: start(V1,V,V21,V24) = 1+ copyover(W24,X24,Y24):2
     [V1>=W24+1,Y24>=V1+1,W24>=0,Y24=W24+X24+1,Y24=V1+V+1] 
* CE 317: start(V1,V,V21,V24) = 1+ copyover(W24,X24,Y24):3
     [W24+X24>=V1,V1>=W24+1,W24>=0,W24+X24=V1+V] 
* CE 318: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):1
     [V>=0,V1>=0,W24=0] 
* CE 319: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):2
     [V1+V+1>=W24,V1+V>=1,W24>=1,V>=0,V1>=0] 
* CE 320: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):3
     [V1+V>=2,W24>=1,V>=0,V1>=0] 
* CE 321: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):4
     [V1+V>=1,W24>=1,V>=0,V1>=0] 
* CE 322: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):5
     [V1+V>=2,W24>=2,V>=0,V1>=0] 
* CE 323: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):6
     [V1+V>=1,V>=0,V1>=0] 
* CE 324: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):7
     [V1+V>=2,V>=0,V1>=0] 
* CE 325: start(V1,V,V21,V24) = 0+ breadth(V1,V,W24):8
     [V1+V>=2,V>=0,V1>=0] 
* CE 326: start(V1,V,V21,V24) = 0+ fun3(V1,W24):1
     [V1>=0,W24=0] 
* CE 327: start(V1,V,V21,V24) = 0+ fun3(V1,W24):2
     [V1+1>=W24,W24>=2] 
* CE 328: start(V1,V,V21,V24) = 0+ fun3(V1,W24):3
     [2*V1>=W24,W24>=V1+2] 
* CE 329: start(V1,V,V21,V24) = 1+ fun5(W24,V,X24,Y24):1
     [Y24>=V+2,V>=0,V1>=0,Y24=V+X24+1,Y24=V+V24+1,W24=0,V21=0] 
* CE 330: start(V1,V,V21,V24) = 1+ fun5(V21,V,V24,W24):2
     [V24>=0,V>=0,V21>=0,V1>=0,W24=0] 
* CE 331: start(V1,V,V21,V24) = 1+ fun5(W24,V,V24,X24):3
     [X24>=V+V24+3,V24>=1,V>=0,V1>=0,X24=2*W24+V+V24+1,X24=2*V21+V+V24+1] 
* CE 332: start(V1,V,V21,V24) = 0+ fun5(W24,V,X24,Y24):1
     [Y24>=V+2,V>=0,Y24=V+X24+1,Y24=V+V21+1,W24=0,V1=0] 
* CE 333: start(V1,V,V21,V24) = 0+ fun5(V1,V,V21,W24):2
     [V21>=0,V>=0,V1>=0,W24=0] 
* CE 334: start(V1,V,V21,V24) = 0+ fun5(W24,V,V21,X24):3
     [X24>=V+V21+3,V21>=1,V>=0,X24=2*W24+V+V21+1,X24=2*V1+V+V21+1] 
* CE 335: start(V1,V,V21,V24) = 0+ fun7(V1,V,W24):1
     [V>=0,V1>=0,W24=0] 
* CE 336: start(V1,V,V21,V24) = 0+ fun7(V1,W24,X24):2
     [X24>=V1+1,V1>=1,X24=V1+W24+1,X24=V1+V+1] 
* CE 337: start(V1,V,V21,V24) = 0+ fun6(V1,V,V21,V24,W24):1
     [V24>=0,V21>=0,V>=0,V1>=0,W24=0] 
* CE 338: start(V1,V,V21,V24) = 0+ fun6(V1,V,V21,W24,X24):2
     [X24>=2*V21+V1+V+3,V21>=0,V>=0,V1>=1,X24=2*V21+2*W24+V1+V+3,X24=2*V21+2*V24+V1+V+3] 
* CE 339: start(V1,V,V21,V24) = 0+ copyover(V1,V,W24):1
     [V>=0,V1>=0,W24=0] 
* CE 340: start(V1,V,V21,V24) = 0+ copyover(V1,W24,X24):2
     [X24>=V1+1,V1>=0,X24=V1+W24+1,X24=V1+V+1] 
* CE 341: start(V1,V,V21,V24) = 0+ copyover(V1,V,W24):3
     [V1+V>=1,V>=0,V1>=0] 
* CE 342: start(V1,V,V21,V24) = 0+ dequeue(W24,X24,Y24):1
     [Y24=2,X24=0,W24=0,V=0,V1=0] 
* CE 343: start(V1,V,V21,V24) = 0+ dequeue(V1,V,W24):2
     [V>=0,V1>=0,W24=0] 
* CE 344: start(V1,V,V21,V24) = 0+ dequeue(V1,W24,X24):3
     [X24>=V1+2,X24>=3,V1>=0,X24=V1+W24+2,X24=V1+V+2] 
* CE 345: start(V1,V,V21,V24) = 0+ dequeue(V1,V,W24):4
     [V1+V>=1,V>=0,V1>=0] 
* CE 346: start(V1,V,V21,V24) = 0+ dequeue(V1,V,W24):5
     [V1+V>=1,V>=0,V1>=0] 
* CE 347: start(V1,V,V21,V24) = 1+ fun14(V,V1,W24):1
     [V1>=0,V>=0,W24=0] 
* CE 348: start(V1,V,V21,V24) = 1+ fun14(V,W24,X24):2
     [X24>=V+1,V>=1,X24=V+W24+1,X24=V1+V+1] 
* CE 349: start(V1,V,V21,V24) = 0+ fun14(V1,V,W24):1
     [V>=0,V1>=0,W24=0] 
* CE 350: start(V1,V,V21,V24) = 0+ fun14(V1,W24,X24):2
     [X24>=V1+1,V1>=1,X24=V1+W24+1,X24=V1+V+1] 
* CE 351: start(V1,V,V21,V24) = 0+ enqueues(W24,V,V):1
     [V>=0,W24=0,V1=0] 
* CE 352: start(V1,V,V21,V24) = 0+ enqueues(V1,V,W24):2
     [V>=0,V1>=0,W24=0] 
* CE 353: start(V1,V,V21,V24) = 0+ enqueues(V1,W24,X24):3
     [X24>=V1+1,V1>=1,X24=V1+W24,X24=V1+V] 
* CE 354: start(V1,V,V21,V24) = 1+ fun16(V1,W24):1
     [V1>=0,W24=0] 
* CE 355: start(V1,V,V21,V24) = 1+ fun16(V1,W24):2
     [W24>=1,V1>=1] 
* CE 356: start(V1,V,V21,V24) = 1+ fun16(V1,W24):3
     [V1>=1] 
* CE 357: start(V1,V,V21,V24) = 0+ fun16(V1,W24):1
     [V1>=0,W24=0] 
* CE 358: start(V1,V,V21,V24) = 0+ fun16(V1,W24):2
     [W24>=1,V1>=1] 
* CE 359: start(V1,V,V21,V24) = 0+ fun16(V1,W24):3
     [V1>=1] 
* CE 360: start(V1,V,V21,V24) = 0+ fun17(V1,W24):1
     [V1>=0,W24=0] 
* CE 361: start(V1,V,V21,V24) = 0+ fun17(V1,W24):2
     [V1>=W24,W24>=1,V1>=2] 
* CE 362: start(V1,V,V21,V24) = 0+ fun17(V1,W24):3
     [W24>=1,V1>=3] 
* CE 363: start(V1,V,V21,V24) = 0+ fun17(V1,W24):4
     [V1>=2] 

### Cost equations --> "Loop" of start/4 
* CEs [174,175,176,177,178,182,183,184,185,186,190,191,192,193,194,198,199,200,201,202,272,273,274,275,276,285,286,287,295,296,297,300,306,310,311,314,356,359,363] --> Loop 71 
* CEs [206,207,208,209,210,214,215,216,217,218,222,223,224,225,226,230,231,232,233,234,238,239,240,241,242,246,247,248,249,250,290,291,292,303,317,321,322,323,324,325,341,345,346] --> Loop 72 
* CEs [329] --> Loop 73 
* CEs [163,307] --> Loop 74 
* CEs [164,165,166,167,168,169,170,171,172,173,179,180,181,187,188,189,195,196,197,203,204,205,211,212,213,219,220,221,227,228,229,235,236,237,243,244,245,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,277,278,279,280,281,282,283,284,288,289,293,294,298,299,301,302,304,305,308,309,312,313,315,316,318,319,320,326,327,328,330,331,332,333,334,335,336,337,338,339,340,342,343,344,347,348,349,350,351,352,353,354,355,357,358,360,361,362] --> Loop 75 

#### Loops of start/4 
* Loop 71: start(V1,V,V21,V24) [V1>=1] 
* Loop 72: start(V1,V,V21,V24) [V1+V>=1,V>=0,V1>=0] 
* Loop 73: start(V1,V,V21,V24) [V24>=1,V>=0,V1>=0,V21=0] 
* Loop 74: start(V1,V,V21,V24) [V1=1] 
* Loop 75: start(V1,V,V21,V24) [V1>=0] 

### Ranking functions of CR start(V1,V,V21,V24) 

#### Partial ranking functions of CR start(V1,V,V21,V24) 


### Resulting Chains:start(V1,V,V21,V24) 
* [75]
* [74]
* [73]
* [72]...
* [71]...


### Merging Chains  start/4 into  External patterns of execution 
* [[74],[75]] --> 1 
* [[73]] --> 2 
* [[72]] --> 3 
* [[71]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [31] 

 * loop 31:copyover(V1,V,Out) -> [copyover(V1',V',Out')] 
3
#### Cost of phase [31]:copyover(V1,V,Out) -> [copyover(V1',V',Out')] 
3*it(31)+0
#### Cost of phase [31]:copyover(V1,V,Out) -> [copyover(V1',V',Out')] 
3*it(31)+0
#### Cost of phase [31]:copyover(V1,V,Out) -> [copyover(V1',V',Out')] 
3*it(31)+0
#### Cost of chains of copyover(V1,V,Out):
* Chain [[31]]...: 3*it(31)+0
  with precondition: [V+V1>=1,V>=0,V1>=0] 

* Chain [[31],33]: 3*it(31)+2
  with precondition: [Out=0,V1>=0,V>=0,V+V1>=1] 

* Chain [[31],32]: 3*it(31)+3
  with precondition: [V+V1+1=Out,V1>=0,V>=0,V+V1>=1] 

* Chain [33]: 2
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [32]: 3
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of loops [35] 

 * loop 35:dequeue(V1,V,Out) -> [dequeue(V1',V',Out')] 
1*s(4)+5
#### Cost of phase [35]:dequeue(V1,V,Out) -> [dequeue(V1',V',Out')] 
6*it(35)+0
#### Cost of phase [35]:dequeue(V1,V,Out) -> [dequeue(V1',V',Out')] 
6*it(35)+0
#### Cost of phase [35]:dequeue(V1,V,Out) -> [dequeue(V1',V',Out')] 
6*it(35)+0
#### Cost of phase [35]:dequeue(V1,V,Out) -> [dequeue(V1',V',Out')] 
6*it(35)+0
#### Cost of chains of dequeue(V1,V,Out):
* Chain [[35]]...: 6*it(35)+0
  with precondition: [V+V1>=1,V>=0,V1>=0] 

* Chain [[35],37]: 7*aux(3)+0
  with precondition: [Out=0,V1>=0,V>=0,V+V1>=1] 

* Chain [[35],36]: 6*it(35)+3
  with precondition: [V+V1+2=Out,V1>=0,V>=0,V+V1>=1] 

* Chain [[35],34]...: 7*aux(4)+0
  with precondition: [V1>=0,V>=0,V+V1>=1] 

* Chain [38]: 4
  with precondition: [V1=0,V=0,Out=2] 

* Chain [37]: 1*aux(3)+0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [36]: 3
  with precondition: [V+V1+2=Out,V1>=0,V>=0,V+V1>=1] 

* Chain [34]...: 1*aux(4)+0
  with precondition: [V1>=0,V>=0,V+V1>=1] 


#### Cost of chains of fun14(V1,V,Out):
* Chain [40]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [39]: 1
  with precondition: [V+V1+1=Out,V1>=1,V>=0] 


#### Cost of loops [44] 

 * loop 44:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
3
#### Cost of phase [44]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
3*it(44)+0
  Such that:it(44) =< V1
it(44) =< V1-V1'

#### Cost of phase [44]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
3*it(44)+0
  Such that:it(44) =< V1
it(44) =< V1-V1'

#### Cost of loops [43] 

 * loop 43:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
4
#### Cost of phase [43]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
4*it(43)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'

#### Cost of phase [43]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
4*it(43)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'

#### Cost of phase [43]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
4*it(43)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'

#### Cost of phase [43]:enqueues(V1,V,Out) -> [enqueues(V1',V',Out')] 
4*it(43)+0
  Such that:it(43) =< V1
it(43) =< V1-V1'

#### Cost of chains of enqueues(V1,V,Out):
* Chain [[44],42]: 3*it(44)+2
  Such that:it(44) =< V1

  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [[44],41]: 3*it(44)+1
  Such that:it(44) =< V1

  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [[43],[44],42]: 7*it(43)+2
  Such that:aux(8) =< V1
it(43) =< aux(8)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[43],[44],41]: 7*it(43)+1
  Such that:aux(9) =< V1
it(43) =< aux(9)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[43],42]: 4*it(43)+2
  Such that:it(43) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=1] 

* Chain [[43],41]: 4*it(43)+1
  Such that:it(43) =< V1

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [42]: 2
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [41]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun6(V1,V,V21,V24,Out):
* Chain [46]: 1
  with precondition: [Out=0,V1>=0,V>=0,V21>=0,V24>=0] 

* Chain [45]: 1
  with precondition: [V+V1+2*V21+2*V24+3=Out,V1>=1,V>=0,V21>=0,V24>=0] 


#### Cost of chains of fun7(V1,V,Out):
* Chain [48]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [47]: 1
  with precondition: [V+V1+1=Out,V1>=1,V>=0] 


#### Cost of chains of fun5(V1,V,V21,Out):
* Chain [51]: 2
  with precondition: [Out=0,V1>=0,V>=0,V21>=0] 

* Chain [50]: 2
  with precondition: [V1=0,V+V21+1=Out,V>=0,V21>=1] 

* Chain [49]: 2
  with precondition: [V+V21+2*V1+1=Out,V1>=1,V>=0,V21>=1] 


#### Cost of chains of fun3(V1,Out):
* Chain [54]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [53]: 4
  with precondition: [Out>=2,V1+1>=Out] 

* Chain [52]: 4
  with precondition: [Out>=V1+2,2*V1>=Out] 


#### Cost of loops [57,58,59,60] 

 * loop 57:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(23)+11
 * loop 58:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(25)+11
 * loop 59:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(29)+4*s(28)+11
  Such that:s(28) =< V1'+V'

 * loop 60:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(33)+4*s(32)+11
  Such that:s(32) =< V1'+V'

#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of loops [57,58,59,60] 

 * loop 57:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(23)+11
 * loop 58:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(25)+11
 * loop 59:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(29)+4*s(28)+11
  Such that:s(28) =< V1'+V'

 * loop 60:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(33)+4*s(32)+11
  Such that:s(32) =< V1'+V'

#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [] 
59*it(57)+10*it([62])+28*s(54)+0
  Such that:it([62]) =< 1

#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of loops [57,58,59,60] 

 * loop 57:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(23)+11
 * loop 58:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(25)+11
 * loop 59:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(29)+4*s(28)+11
  Such that:s(28) =< V1'+V'

 * loop 60:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
1*s(33)+4*s(32)+11
  Such that:s(32) =< V1'+V'

#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [] 
59*it(57)+10*it([61])+28*s(63)+0
  Such that:it([61]) =< 1

#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of phase [57,58,59,60]:breadth(V1,V,Out) -> [breadth(V1',V',Out')] 
56*it(57)+0
#### Cost of chains of breadth(V1,V,Out):
* Chain [[57,58,59,60]]...: 56*it(57)+0
  with precondition: [V+V1>=2,V>=0,V1>=0] 

* Chain [[57,58,59,60],63]: 57*aux(20)+0
  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=2] 

* Chain [[57,58,59,60],62]: 59*it(57)+10*it([62])+28*s(54)+0
  Such that:it([62]) =< 1

  with precondition: [V1>=0,V>=0,Out>=2,V+V1>=2] 

* Chain [[57,58,59,60],61]: 59*it(57)+10*it([61])+28*s(63)+0
  Such that:it([61]) =< 1

  with precondition: [V1>=0,V>=0,Out>=2,V+V1>=3] 

* Chain [[57,58,59,60],56]...: 57*aux(49)+0
  with precondition: [V1>=0,V>=0,V+V1>=2] 

* Chain [[57,58,59,60],55]...: 57*aux(50)+0
  with precondition: [V1>=0,V>=0,Out>=2,V+V1>=2] 

* Chain [63]: 1*aux(20)+0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [62]: 3*s(47)+28*s(50)+10
  Such that:aux(21) =< V1+V
s(50) =< aux(21)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=1,V+V1+1>=Out] 

* Chain [61]: 3*s(56)+28*s(59)+10
  Such that:aux(35) =< 2*V1+2*V
s(59) =< aux(35)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=2,2*V+2*V1>=Out] 

* Chain [56]...: 1*aux(49)+0
  with precondition: [V1>=0,V>=0,V+V1>=1] 

* Chain [55]...: 1*aux(50)+0
  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=1] 


#### Cost of chains of fun17(V1,Out):
* Chain [67]...: 1*aux(52)+0
  with precondition: [V1>=2] 

* Chain [66]: 1*aux(53)+0
  with precondition: [Out=0,V1>=0] 

* Chain [65]: 28*s(94)+3*s(95)+11
  Such that:s(93) =< V1
s(94) =< s(93)

  with precondition: [V1>=2,Out>=1,V1>=Out] 

* Chain [64]: 20*s(98)+28*s(99)+234*s(100)+11
  Such that:s(97) =< 1
s(96) =< 2*V1
s(98) =< s(97)
s(99) =< s(96)

  with precondition: [V1>=3,Out>=1] 


#### Cost of chains of fun16(V1,Out):
* Chain [70]...: 1*s(101)+4
  with precondition: [V1>=1] 

* Chain [69]: 1*aux(54)+0
  with precondition: [Out=0,V1>=0] 

* Chain [68]: 28*s(105)+237*s(106)+20*s(109)+28*s(110)+15
  Such that:s(107) =< 1
s(104) =< 2*V1+1
s(108) =< 4*V1+2
s(109) =< s(107)
s(110) =< s(108)
s(105) =< s(104)

  with precondition: [V1>=1,Out>=1] 


#### Cost of chains of start(V1,V,V21,V24):
* Chain [75]: 3598*s(112)+340*s(114)+300*s(118)+248*s(119)+28*s(152)+84*s(156)+84*s(161)+84*s(167)+84*s(173)+28*s(188)+28*s(194)+56*s(291)+56*s(292)+20
  Such that:s(187) =< 2*V1+V
s(149) =< 4*V1
s(191) =< 4*V1+2*V
aux(57) =< 1
aux(58) =< V1
aux(59) =< V1+V
aux(60) =< 2*V1
aux(61) =< 2*V1+1
aux(62) =< 2*V1+2*V
aux(63) =< 4*V1+2
aux(64) =< V
aux(65) =< 2*V
s(114) =< aux(58)
s(119) =< aux(60)
s(118) =< aux(57)
s(152) =< s(149)
s(161) =< aux(65)
s(173) =< aux(62)
s(194) =< s(191)
s(291) =< aux(63)
s(292) =< aux(61)
s(167) =< aux(59)
s(188) =< s(187)
s(156) =< aux(64)

  with precondition: [V1>=0] 

* Chain [74]: 5
  with precondition: [V1=1] 

* Chain [73]: 3
  with precondition: [V21=0,V1>=0,V>=0,V24>=1] 

* Chain [72]...: 1232*s(311)+40*s(316)+20*s(331)+9
  Such that:aux(66) =< V1
aux(67) =< 2*V1
s(316) =< aux(66)
s(331) =< aux(67)

  with precondition: [V1>=0,V>=0,V+V1>=1] 

* Chain [71]...: 903*s(371)+20*s(376)+20*s(391)+10
  Such that:aux(68) =< V1
aux(69) =< 2*V1
s(376) =< aux(68)
s(391) =< aux(69)

  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V,V21,V24): 
-------------------------------------
* Chain [75] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [74] with precondition: [V1=1] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [73] with precondition: [V21=0,V1>=0,V>=0,V24>=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [72]... with precondition: [V1>=0,V>=0,V1+V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [71]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V21,V24): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 117 ms.
* Invariants computed in 99 ms.
   - Backward Invariants 67 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 586 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 463 ms.
   - Equation cost structures 283 ms.
   - Phase cost structures 140 ms.
   - Chain cost structures 37 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 1365 ms.

