
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun15/3]
1. recursive  : [fun13/3]
2. non_recursive  : [fun4/3]
3. non_recursive  : [ (div)/3]
4. non_recursive  : [fun12/3]
5. recursive [non_tail,multiple] : [fun1/3]
6. non_recursive  : [fun/3]
7. non_recursive  : [fun8/4]
8. non_recursive  : [fun10/2]
9. non_recursive  : [fun11/2]
10. recursive [non_tail] : [fun9/3]
11. non_recursive  : [fun3/3]
12. non_recursive  : [minus/3]
13. recursive [non_tail] : [fun14/3]
14. non_recursive  : [fun2/3]
15. non_recursive  : [times/3]
16. non_recursive  : [ (mod)/3]
17. non_recursive  : [fun7/4]
18. recursive [non_tail] : [filter/3,fun6/3]
19. recursive  : [eratos/2,fun5/2]
20. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun15/3
1. SCC is partially evaluated into fun13/3
2. SCC is partially evaluated into fun4/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into fun12/3
5. SCC is partially evaluated into fun1/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into fun8/4
8. SCC is partially evaluated into fun10/2
9. SCC is partially evaluated into fun11/2
10. SCC is partially evaluated into fun9/3
11. SCC is partially evaluated into fun3/3
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into fun14/3
14. SCC is partially evaluated into fun2/3
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into (mod)/3
17. SCC is partially evaluated into fun7/4
18. SCC is partially evaluated into filter/3
19. SCC is partially evaluated into fun5/2
20. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun15/3 
* CE 74 is refined into CE [83] 
* CE 72 is refined into CE [84] 
* CE 73 is refined into CE [85] 


#### Refined cost equations fun15/3 
* CE 83: fun15(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 84: fun15(A,B,A) = 0
     [A>=0,B=0] 
* CE 85: fun15(V1,V,Out) = 0+ fun15(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun15/3 
* CEs [85] --> Loop 56 
* CEs [83] --> Loop 57 
* CEs [84] --> Loop 58 

#### Loops of fun15/3 
* Loop 56: fun15(V1,V,Out)->  fun15(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 57: fun15(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 58: fun15(A,B,A) [A>=0,B=0] 

### Ranking functions of CR fun15(V1,V,Out) 
* RF of phase [56]: [V,V1]

#### Partial ranking functions of CR fun15(V1,V,Out) 
* Partial RF of phase [56]:
  - RF of loop [56:1]:
    V
    V1


### Resulting Chains:fun15(V1,V,Out) 
* [[56],58]
* [[56],57]
* [58]
* [57]


### Merging Chains  fun15/3 into  External patterns of execution 
* [[58]] --> 1 
* [[57],[57,[56]]] --> 2 
* [[58,[56]]] --> 3 


### Specialization of cost equations fun13/3 
* CE 69 is refined into CE [86] 
* CE 67 is refined into CE [87] 
* CE 68 is refined into CE [88,89,90] 


#### Refined cost equations fun13/3 
* CE 86: fun13(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 87: fun13(V1,V,Out) = 0
     [Out=1,V=0,V1=0] 
* CE 88: fun13(V1,V,Out) = 0+ fun15(W1,X1,W1):1+ fun13(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 89: fun13(V1,V,Out) = 0+ fun15(W1,X1,Y1):2+ fun13(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 90: fun13(V1,V,Out) = 0+ fun15(W1,X1,Y1):3+ fun13(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of fun13/3 
* CEs [90] --> Loop 59 
* CEs [89] --> Loop 60 
* CEs [88] --> Loop 61 
* CEs [86] --> Loop 62 
* CEs [87] --> Loop 63 

#### Loops of fun13/3 
* Loop 59: fun13(V1,V,Out)->  fun13(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 60: fun13(V1,V,Out)->  fun13(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 61: fun13(V1,V,Out)->  fun13(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 62: fun13(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 63: fun13(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR fun13(V1,V,Out) 
* RF of phase [59]: [V1-1,V1-V+1]
* RF of phase [61]: [V1]

#### Partial ranking functions of CR fun13(V1,V,Out) 
* Partial RF of phase [59]:
  - RF of loop [59:1]:
    V1-1
    V1-V+1
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    V1


### Resulting Chains:fun13(V1,V,Out) 
* [[61],62]
* [[61],60,62]
* [[59],62]
* [[59],60,62]
* [63]
* [62]
* [60,62]


### Merging Chains  fun13/3 into  External patterns of execution 
* [[63]] --> 1 
* [[62,60,[61]],[62,[61]]] --> 2 
* [[62]] --> 3 
* [[62,60]] --> 4 
* [[62,[59]]] --> 5 
* [[62,60,[59]]] --> 6 


### Specialization of cost equations fun4/3 
* CE 51 is refined into CE [91,92,93,94,95,96] 
* CE 49 is refined into CE [97] 
* CE 50 is refined into CE [98] 
* CE 48 is refined into CE [99] 


#### Refined cost equations fun4/3 
* CE 91: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,Out=2,V=1,V1=1] 
* CE 92: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):2
     [W1>=Y1,Y1>=1,Y1+1=Out,W1+1=V1,X1=1,V=2] 
* CE 93: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):3
     [X1>=0,W1>=0,X1+1=V,W1+1=V1,Y1=0,Out=1] 
* CE 94: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):4
     [X1>=1,W1>=1,X1+1=V,W1+1=V1,Y1=1,Out=2] 
* CE 95: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):5
     [W1+2>=2*Y1+X1,Y1>=1,X1>=2,Y1+1=Out,X1+1=V,W1+1=V1] 
* CE 96: fun4(V1,V,Out) = 0+ fun13(W1,X1,Y1):6
     [W1+3>=2*Y1+X1,Y1>=2,X1>=2,Y1+1=Out,X1+1=V,W1+1=V1] 
* CE 97: fun4(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 98: fun4(V1,V,Out) = 0
     [V1>=1,Out=1,V=0] 
* CE 99: fun4(V1,V,Out) = 0
     [Out=1,V=0,V1=0] 

### Cost equations --> "Loop" of fun4/3 
* CEs [96] --> Loop 64 
* CEs [95] --> Loop 65 
* CEs [94] --> Loop 66 
* CEs [93] --> Loop 67 
* CEs [97] --> Loop 68 
* CEs [92] --> Loop 69 
* CEs [98] --> Loop 70 
* CEs [91] --> Loop 71 
* CEs [99] --> Loop 72 

#### Loops of fun4/3 
* Loop 64: fun4(V1,V,Out) [V1+5>=2*Out+V,Out>=3,V>=3] 
* Loop 65: fun4(V1,V,Out) [V1+4>=2*Out+V,Out>=2,V>=3] 
* Loop 66: fun4(V1,V,Out) [V>=2,V1>=2,Out=2] 
* Loop 67: fun4(V1,V,Out) [V>=1,V1>=1,Out=1] 
* Loop 68: fun4(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 69: fun4(V1,V,Out) [V1>=Out,Out>=2,V=2] 
* Loop 70: fun4(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 71: fun4(V1,V,Out) [Out=2,V=1,V1=1] 
* Loop 72: fun4(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR fun4(V1,V,Out) 

#### Partial ranking functions of CR fun4(V1,V,Out) 


### Resulting Chains:fun4(V1,V,Out) 
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]


### Merging Chains  fun4/3 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 
* [[70]] --> 3 
* [[69]] --> 4 
* [[68]] --> 5 
* [[67]] --> 6 
* [[66]] --> 7 
* [[65]] --> 8 
* [[64]] --> 9 


### Specialization of cost equations fun12/3 
* CE 66 is refined into CE [100] 
* CE 65 is refined into CE [101] 
* CE 64 is refined into CE [102] 
* CE 63 is refined into CE [103] 
* CE 62 is refined into CE [104] 


#### Refined cost equations fun12/3 
* CE 100: fun12(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 101: fun12(V1,V,Out) = 0
     [Out=2,V=2,V1=2] 
* CE 102: fun12(V1,V,Out) = 0
     [Out=1,V=1,V1=2] 
* CE 103: fun12(V1,V,Out) = 0
     [Out=1,V=2,V1=1] 
* CE 104: fun12(V1,V,Out) = 0
     [Out=1,V=1,V1=1] 

### Cost equations --> "Loop" of fun12/3 
* CEs [100] --> Loop 73 
* CEs [101] --> Loop 74 
* CEs [102] --> Loop 75 
* CEs [103] --> Loop 76 
* CEs [104] --> Loop 77 

#### Loops of fun12/3 
* Loop 73: fun12(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 74: fun12(V1,V,Out) [Out=2,V=2,V1=2] 
* Loop 75: fun12(V1,V,Out) [Out=1,V=1,V1=2] 
* Loop 76: fun12(V1,V,Out) [Out=1,V=2,V1=1] 
* Loop 77: fun12(V1,V,Out) [Out=1,V=1,V1=1] 

### Ranking functions of CR fun12(V1,V,Out) 

#### Partial ranking functions of CR fun12(V1,V,Out) 


### Resulting Chains:fun12(V1,V,Out) 
* [77]
* [76]
* [75]
* [74]
* [73]


### Merging Chains  fun12/3 into  External patterns of execution 
* [[77]] --> 1 
* [[76]] --> 2 
* [[75]] --> 3 
* [[74]] --> 4 
* [[73]] --> 5 


### Specialization of cost equations fun1/3 
* CE 37 is refined into CE [105] 
* CE 40 is refined into CE [106] 
* CE 35 is refined into CE [107] 
* CE 39 is refined into CE [108] 
* CE 34 is refined into CE [109] 
* CE 33 is refined into CE [110] 
* CE 38 is refined into CE [111,112,113,114,115] 
* CE 36 is refined into CE [116] 


#### Refined cost equations fun1/3 
* CE 105: fun1(V1,V,Out) = 0
     [V>=1,V1>=1,Out=1] 
* CE 106: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 107: fun1(V1,V,Out) = 0
     [V1>=1,Out=1,V=0] 
* CE 108: fun1(V1,V,Out) = 0
     [Out=2,V=2,V1=2] 
* CE 109: fun1(V1,V,Out) = 0
     [V>=1,Out=1,V1=0] 
* CE 110: fun1(V1,V,Out) = 0
     [Out=2,V=0,V1=0] 
* CE 111: fun1(V1,V,Out) = 0+ fun1(W1,X1,Y1)+ fun1(Z1,A2,B2)+ fun12(C2,D2,E2):1
     [A2>=0,Z1>=0,X1>=0,W1>=0,X1+A2+1=V,W1+Z1+1=V1,B2=1,Y1=1,E2=1,D2=1,C2=1,Out=1] 
* CE 112: fun1(V1,V,Out) = 0+ fun1(W1,X1,Y1)+ fun1(Z1,A2,B2)+ fun12(C2,D2,E2):2
     [A2>=0,Z1>=0,X1>=0,W1>=0,X1+A2+1=V,W1+Z1+1=V1,B2=2,Y1=1,E2=1,D2=2,C2=1,Out=1] 
* CE 113: fun1(V1,V,Out) = 0+ fun1(W1,X1,Y1)+ fun1(Z1,A2,B2)+ fun12(C2,D2,E2):3
     [A2>=0,Z1>=0,X1>=0,W1>=0,X1+A2+1=V,W1+Z1+1=V1,B2=1,Y1=2,E2=1,D2=1,C2=2,Out=1] 
* CE 114: fun1(V1,V,Out) = 0+ fun1(W1,X1,Y1)+ fun1(Z1,A2,B2)+ fun12(C2,D2,E2):4
     [A2>=0,Z1>=0,X1>=0,W1>=0,X1+A2+1=V,W1+Z1+1=V1,B2=2,Y1=2,E2=2,D2=2,C2=2,Out=2] 
* CE 115: fun1(V1,V,Out) = 0+ fun1(W1,X1,Y1)+ fun1(Z1,A2,B2)+ fun12(Y1,B2,C2):5
     [A2>=0,Z1>=0,X1>=0,W1>=0,B2>=0,Y1>=0,X1+A2+1=V,W1+Z1+1=V1,C2=0,Out=0] 
* CE 116: fun1(V1,V,Out) = 0+ fun1(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [116] --> Loop 78 
* CEs [114] --> Loop 79 
* CEs [113] --> Loop 80 
* CEs [112] --> Loop 81 
* CEs [111] --> Loop 82 
* CEs [115] --> Loop 83 
* CEs [105] --> Loop 84 
* CEs [106] --> Loop 85 
* CEs [107] --> Loop 86 
* CEs [108] --> Loop 87 
* CEs [109] --> Loop 88 
* CEs [110] --> Loop 89 

#### Loops of fun1/3 
* Loop 78: fun1(V1,V,Out)->  fun1(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 79: fun1(V1,V,Out)->  fun1(V1',V',Out')  fun1(V1'2,V'2,Out'2)
                  [V>=V'+1,V1>=V1'+1,V'>=0,V1'>=0,V'+V'2+1=V,V1'+V1'2+1=V1,Out'2=2,Out'=2,Out=2] 
* Loop 80: fun1(V1,V,Out)->  fun1(V1',V',Out')  fun1(V1'2,V'2,Out'2)
                  [V>=V'+1,V1>=V1'+1,V'>=0,V1'>=0,V'+V'2+1=V,V1'+V1'2+1=V1,Out'2=1,Out'=2,Out=1] 
* Loop 81: fun1(V1,V,Out)->  fun1(V1',V',Out')  fun1(V1'2,V'2,Out'2)
                  [V>=V'+1,V1>=V1'+1,V'>=0,V1'>=0,V'+V'2+1=V,V1'+V1'2+1=V1,Out'2=2,Out'=1,Out=1] 
* Loop 82: fun1(V1,V,Out)->  fun1(V1',V',Out')  fun1(V1'2,V'2,Out'2)
                  [V>=V'+1,V1>=V1'+1,V'>=0,V1'>=0,V'+V'2+1=V,V1'+V1'2+1=V1,Out'2=1,Out'=1,Out=1] 
* Loop 83: fun1(V1,V,Out)->  fun1(V1',V',Out')  fun1(V1'2,V'2,Out'2)
                  [V>=V'+1,V1>=V1'+1,Out'2>=0,Out'>=0,V'>=0,V1'>=0,V'+V'2+1=V,V1'+V1'2+1=V1,Out=0] 
* Loop 84: fun1(V1,V,Out) [V>=1,V1>=1,Out=1] 
* Loop 85: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 86: fun1(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 87: fun1(V1,V,Out) [Out=2,V=2,V1=2] 
* Loop 88: fun1(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 89: fun1(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [78,79,80,81,82,83]: [V,V1]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [78,79,80,81,82,83]:
  - RF of loop [78:1,79:1,79:2,80:1,80:2,81:1,81:2,82:1,82:2,83:1,83:2]:
    V
    V1


### Resulting Chains:fun1(V1,V,Out) 
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]
* [multiple([78,79,80,81,82,83],[[89],[88],[87],[86],[85],[84]])]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[89]] --> 1 
* [[88]] --> 2 
* [[87],[multiple([78,79,80,81,82,83],[[89],[88],[87],[86],[85],[84]])]] --> 3 
* [[86]] --> 4 
* [[85]] --> 5 
* [[84]] --> 6 


### Specialization of cost equations fun8/4 
* CE 54 is refined into CE [117] 
* CE 53 is refined into CE [118] 
* CE 52 is refined into CE [119] 


#### Refined cost equations fun8/4 
* CE 117: fun8(V1,V,V19,Out) = 0
     [V19>=0,V>=0,V1>=0,Out=0] 
* CE 118: fun8(A,B,C,C) = 1
     [C>=0,B>=0,A=2] 
* CE 119: fun8(V1,V,V19,Out) = 1
     [V19>=0,V>=0,V+V19+1=Out,V1=1] 

### Cost equations --> "Loop" of fun8/4 
* CEs [117] --> Loop 90 
* CEs [118] --> Loop 91 
* CEs [119] --> Loop 92 

#### Loops of fun8/4 
* Loop 90: fun8(V1,V,V19,Out) [V19>=0,V>=0,V1>=0,Out=0] 
* Loop 91: fun8(A,B,C,C) [C>=0,B>=0,A=2] 
* Loop 92: fun8(V1,V,V19,Out) [V19>=0,V>=0,V+V19+1=Out,V1=1] 

### Ranking functions of CR fun8(V1,V,V19,Out) 

#### Partial ranking functions of CR fun8(V1,V,V19,Out) 


### Resulting Chains:fun8(V1,V,V19,Out) 
* [92]
* [91]
* [90]


### Merging Chains  fun8/4 into  External patterns of execution 
* [[92]] --> 1 
* [[91]] --> 2 
* [[90]] --> 3 


### Specialization of cost equations fun10/2 
* CE 78 is refined into CE [120] 
* CE 76 is refined into CE [121] 
* CE 77 is refined into CE [122] 
* CE 75 is refined into CE [123] 


#### Refined cost equations fun10/2 
* CE 120: fun10(V1,Out) = 0
     [V1>=3,V1=Out+1] 
* CE 121: fun10(V1,Out) = 0
     [V1>=2,V1+1=Out] 
* CE 122: fun10(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 123: fun10(V1,Out) = 0
     [Out=2,V1=0] 

### Cost equations --> "Loop" of fun10/2 
* CEs [120] --> Loop 93 
* CEs [121] --> Loop 94 
* CEs [122] --> Loop 95 
* CEs [123] --> Loop 96 

#### Loops of fun10/2 
* Loop 93: fun10(V1,Out) [V1>=3,V1=Out+1] 
* Loop 94: fun10(V1,Out) [V1>=2,V1+1=Out] 
* Loop 95: fun10(V1,Out) [V1>=0,Out=0] 
* Loop 96: fun10(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR fun10(V1,Out) 

#### Partial ranking functions of CR fun10(V1,Out) 


### Resulting Chains:fun10(V1,Out) 
* [96]
* [95]
* [94]
* [93]


### Merging Chains  fun10/2 into  External patterns of execution 
* [[96]] --> 1 
* [[95]] --> 2 
* [[94]] --> 3 
* [[93]] --> 4 


### Specialization of cost equations fun11/2 
* CE 81 is refined into CE [124] 
* CE 82 is refined into CE [125] 
* CE 80 is refined into CE [126] 
* CE 79 is refined into CE [127] 


#### Refined cost equations fun11/2 
* CE 124: fun11(V1,Out) = 0
     [V1>=3,V1=Out+1] 
* CE 125: fun11(V1,Out) = 0
     [V1>=2,V1+1=Out] 
* CE 126: fun11(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 127: fun11(V1,Out) = 0
     [Out=2,V1=0] 

### Cost equations --> "Loop" of fun11/2 
* CEs [124] --> Loop 97 
* CEs [125] --> Loop 98 
* CEs [126] --> Loop 99 
* CEs [127] --> Loop 100 

#### Loops of fun11/2 
* Loop 97: fun11(V1,Out) [V1>=3,V1=Out+1] 
* Loop 98: fun11(V1,Out) [V1>=2,V1+1=Out] 
* Loop 99: fun11(V1,Out) [V1>=0,Out=0] 
* Loop 100: fun11(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR fun11(V1,Out) 

#### Partial ranking functions of CR fun11(V1,Out) 


### Resulting Chains:fun11(V1,Out) 
* [100]
* [99]
* [98]
* [97]


### Merging Chains  fun11/2 into  External patterns of execution 
* [[100]] --> 1 
* [[99]] --> 2 
* [[98]] --> 3 
* [[97]] --> 4 


### Specialization of cost equations fun9/3 
* CE 61 is refined into CE [128] 
* CE 57 is refined into CE [129,130,131,132] 
* CE 59 is refined into CE [133,134,135,136] 
* CE 56 is refined into CE [137] 
* CE 58 is refined into CE [138,139,140,141] 
* CE 60 is refined into CE [142,143,144,145] 


#### Refined cost equations fun9/3 
* CE 128: fun9(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 129: fun9(V1,V,Out) = 0+ fun10(W1,X1):1
     [X1=2,W1=0,Out=2,V=0,V1=2] 
* CE 130: fun9(V1,V,Out) = 0+ fun10(V,W1):2
     [V>=0,W1=0,Out=0,V1=2] 
* CE 131: fun9(V1,V,Out) = 0+ fun10(W1,Out):3
     [Out>=3,Out=W1+1,Out=V+1,V1=2] 
* CE 132: fun9(V1,V,Out) = 0+ fun10(W1,Out):4
     [Out>=2,Out+1=W1,Out+1=V,V1=2] 
* CE 133: fun9(V1,V,Out) = 0+ fun11(W1,X1):1
     [X1=2,W1=0,Out=2,V=0,V1=2] 
* CE 134: fun9(V1,V,Out) = 0+ fun11(V,W1):2
     [V>=0,W1=0,Out=0,V1=2] 
* CE 135: fun9(V1,V,Out) = 0+ fun11(W1,Out):3
     [Out>=3,Out=W1+1,Out=V+1,V1=2] 
* CE 136: fun9(V1,V,Out) = 0+ fun11(W1,Out):4
     [Out>=2,Out+1=W1,Out+1=V,V1=2] 
* CE 137: fun9(A,B,B) = 0
     [B>=0,A=0] 
* CE 138: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun10(Y1,Z1):1
     [V>=0,V1>=3,V1=W1+1,X1=0,Z1=2,Y1=0,Out=2] 
* CE 139: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun10(X1,Y1):2
     [X1>=0,V>=0,V1>=3,V1=W1+1,Y1=0,Out=0] 
* CE 140: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun10(Y1,Out):3
     [Out>=3,V>=0,V1>=3,Out=X1+1,V1=W1+1,Out=Y1+1] 
* CE 141: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun10(Y1,Out):4
     [Out>=2,V>=0,V1>=3,Out+1=X1,V1=W1+1,Out+1=Y1] 
* CE 142: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun11(Y1,Z1):1
     [V>=0,V1>=3,V1=W1+1,X1=0,Z1=2,Y1=0,Out=2] 
* CE 143: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun11(X1,Y1):2
     [X1>=0,V>=0,V1>=3,V1=W1+1,Y1=0,Out=0] 
* CE 144: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun11(Y1,Out):3
     [Out>=3,V>=0,V1>=3,Out=X1+1,V1=W1+1,Out=Y1+1] 
* CE 145: fun9(V1,V,Out) = 0+ fun9(W1,V,X1)+ fun11(Y1,Out):4
     [Out>=2,V>=0,V1>=3,Out+1=X1,V1=W1+1,Out+1=Y1] 

### Cost equations --> "Loop" of fun9/3 
* CEs [140,144] --> Loop 101 
* CEs [141,145] --> Loop 102 
* CEs [138,142] --> Loop 103 
* CEs [139,143] --> Loop 104 
* CEs [132,136] --> Loop 105 
* CEs [131,135] --> Loop 106 
* CEs [128,130,134] --> Loop 107 
* CEs [129,133] --> Loop 108 
* CEs [137] --> Loop 109 

#### Loops of fun9/3 
* Loop 101: fun9(V1,V,Out)->  fun9(V1',V,Out')
                  [Out>=3,V>=0,V1>=3,Out=Out'+1,V1=V1'+1] 
* Loop 102: fun9(V1,V,Out)->  fun9(V1',V,Out')
                  [Out>=2,V>=0,V1>=3,Out+1=Out',V1=V1'+1] 
* Loop 103: fun9(V1,V,Out)->  fun9(V1',V,Out')
                  [V>=0,V1>=3,V1=V1'+1,Out'=0,Out=2] 
* Loop 104: fun9(V1,V,Out)->  fun9(V1',V,Out')
                  [Out'>=0,V>=0,V1>=3,V1=V1'+1,Out=0] 
* Loop 105: fun9(V1,V,Out) [V>=3,V=Out+1,V1=2] 
* Loop 106: fun9(V1,V,Out) [V>=2,V+1=Out,V1=2] 
* Loop 107: fun9(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 108: fun9(V1,V,Out) [Out=2,V=0,V1=2] 
* Loop 109: fun9(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun9(V1,V,Out) 
* RF of phase [101,102,103,104]: [V1-2]

#### Partial ranking functions of CR fun9(V1,V,Out) 
* Partial RF of phase [101,102,103,104]:
  - RF of loop [101:1,102:1,103:1,104:1]:
    V1-2


### Resulting Chains:fun9(V1,V,Out) 
* [[101,102,103,104],108]
* [[101,102,103,104],107]
* [[101,102,103,104],106]
* [[101,102,103,104],105]
* [109]
* [108]
* [107]
* [106]
* [105]


### Merging Chains  fun9/3 into  External patterns of execution 
* [[109]] --> 1 
* [[108]] --> 2 
* [[106]] --> 3 
* [[105]] --> 4 
* [[108,[101,102,103,104]]] --> 5 
* [[107]] --> 6 
* [[107,[101,102,103,104]]] --> 7 
* [[105,[101,102,103,104]],[106,[101,102,103,104]]] --> 8 


### Specialization of cost equations fun3/3 
* CE 46 is refined into CE [146,147,148,149,150,151] 
* CE 47 is refined into CE [152] 
* CE 45 is refined into CE [153] 


#### Refined cost equations fun3/3 
* CE 146: fun3(A,B,B) = 0+ fun9(C,B,B):1
     [B>=1,C=0,A=0] 
* CE 147: fun3(V1,V,Out) = 0+ fun9(W1,X1,Out):3
     [Out>=3,Out=X1+1,Out=V+1,W1=2,V1=2] 
* CE 148: fun3(V1,V,Out) = 0+ fun9(W1,X1,Out):4
     [Out>=2,Out+1=X1,Out+1=V,W1=2,V1=2] 
* CE 149: fun3(V1,V,Out) = 0+ fun9(V1,V,W1):6
     [V>=1,V1>=0,W1=0,Out=0] 
* CE 150: fun3(V1,V,Out) = 0+ fun9(V1,V,Out):7
     [V1>=Out+1,Out>=0,V>=1,V1>=3] 
* CE 151: fun3(V1,V,Out) = 0+ fun9(V1,V,Out):8
     [V1+V>=Out+1,Out>=0,V>=2,V1>=3] 
* CE 152: fun3(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 153: fun3(A,B,A) = 0
     [A>=0,B=0] 

### Cost equations --> "Loop" of fun3/3 
* CEs [151] --> Loop 110 
* CEs [150] --> Loop 111 
* CEs [149,152] --> Loop 112 
* CEs [153] --> Loop 113 
* CEs [148] --> Loop 114 
* CEs [147] --> Loop 115 
* CEs [146] --> Loop 116 

#### Loops of fun3/3 
* Loop 110: fun3(V1,V,Out) [V1+V>=Out+1,Out>=0,V>=2,V1>=3] 
* Loop 111: fun3(V1,V,Out) [V1>=Out+1,Out>=0,V>=1,V1>=3] 
* Loop 112: fun3(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 113: fun3(A,B,A) [A>=0,B=0] 
* Loop 114: fun3(V1,V,Out) [V>=3,V=Out+1,V1=2] 
* Loop 115: fun3(V1,V,Out) [V>=2,V+1=Out,V1=2] 
* Loop 116: fun3(A,B,B) [B>=1,A=0] 

### Ranking functions of CR fun3(V1,V,Out) 

#### Partial ranking functions of CR fun3(V1,V,Out) 


### Resulting Chains:fun3(V1,V,Out) 
* [116]
* [115]
* [114]
* [113]
* [112]
* [111]
* [110]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[116]] --> 1 
* [[115]] --> 2 
* [[114]] --> 3 
* [[113]] --> 4 
* [[112]] --> 5 
* [[111]] --> 6 
* [[110]] --> 7 


### Specialization of cost equations fun14/3 
* CE 70 is refined into CE [154] 
* CE 71 is refined into CE [155,156,157,158,159,160,161] 


#### Refined cost equations fun14/3 
* CE 154: fun14(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 155: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,A2,B2):2
     [W1>=0,W1+1=V1,Y1=0,X1=1,B2=2,A2=0,Z1=2,Out=2,V=1] 
* CE 156: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,A2,Out):3
     [W1>=0,Out>=3,Out=Y1+1,Out=A2+1,W1+1=V1,X1=1,Z1=2,V=1] 
* CE 157: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,A2,Out):4
     [W1>=0,Out>=2,Out+1=Y1,Out+1=A2,W1+1=V1,X1=1,Z1=2,V=1] 
* CE 158: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,A2,Out):5
     [Z1>=Out,W1>=0,Out>=0,Z1>=3,Z1=X1+1,Z1=V+1,W1+1=V1,Y1=0,A2=0] 
* CE 159: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,Y1,A2):6
     [W1>=0,Y1>=0,Z1>=1,Z1=X1+1,Z1=V+1,W1+1=V1,A2=0,Out=0] 
* CE 160: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,Y1,Out):7
     [Z1>=Out+1,W1>=0,Out>=0,Y1>=0,Z1>=3,Z1=X1+1,Z1=V+1,W1+1=V1] 
* CE 161: fun14(V1,V,Out) = 0+ fun14(W1,X1,Y1)+ fun9(Z1,Y1,Out):8
     [Z1+Y1>=Out+1,W1>=0,Out>=0,Y1>=2,Z1>=3,Z1=X1+1,Z1=V+1,W1+1=V1] 

### Cost equations --> "Loop" of fun14/3 
* CEs [161] --> Loop 117 
* CEs [160] --> Loop 118 
* CEs [158] --> Loop 119 
* CEs [159] --> Loop 120 
* CEs [156] --> Loop 121 
* CEs [157] --> Loop 122 
* CEs [155] --> Loop 123 
* CEs [154] --> Loop 124 

#### Loops of fun14/3 
* Loop 117: fun14(V1,V,Out)->  fun14(V1',V,Out')
                  [V+Out'>=Out,Out'>=2,Out>=0,V>=2,V1>=1,V1=V1'+1] 
* Loop 118: fun14(V1,V,Out)->  fun14(V1',V,Out')
                  [V>=Out,Out'>=0,Out>=0,V>=2,V1>=1,V1=V1'+1] 
* Loop 119: fun14(V1,V,Out)->  fun14(V1',V,Out')
                  [V+1>=Out,Out>=0,V>=2,V1>=1,V1=V1'+1,Out'=0] 
* Loop 120: fun14(V1,V,Out)->  fun14(V1',V,Out')
                  [Out'>=0,V>=0,V1>=1,V1=V1'+1,Out=0] 
* Loop 121: fun14(V1,V,Out)->  fun14(V1',V',Out')
                  [Out>=3,V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 122: fun14(V1,V,Out)->  fun14(V1',V',Out')
                  [Out>=2,V1>=1,Out+1=Out',V1=V1'+1,V'=1,V=1] 
* Loop 123: fun14(V1,V,Out)->  fun14(V1',V',Out')
                  [V1>=1,V1=V1'+1,Out'=0,V'=1,Out=2,V=1] 
* Loop 124: fun14(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun14(V1,V,Out) 
* RF of phase [117,118,119,120,121,122,123]: [V1]

#### Partial ranking functions of CR fun14(V1,V,Out) 
* Partial RF of phase [117,118,119,120,121,122,123]:
  - RF of loop [117:1,118:1,119:1,120:1,121:1,122:1,123:1]:
    V1


### Resulting Chains:fun14(V1,V,Out) 
* [[117,118,119,120,121,122,123],124]
* [124]


### Merging Chains  fun14/3 into  External patterns of execution 
* [[124]] --> 1 
* [[124,[117,118,119,120,121,122,123]]] --> 2 


### Specialization of cost equations fun2/3 
* CE 44 is refined into CE [162,163] 
* CE 43 is refined into CE [164] 
* CE 41 is refined into CE [165] 
* CE 42 is refined into CE [166] 


#### Refined cost equations fun2/3 
* CE 162: fun2(V1,V,Out) = 0+ fun14(W1,X1,Y1):1
     [X1>=0,W1>=0,X1+1=V,W1+1=V1,Y1=0,Out=1] 
* CE 163: fun2(V1,V,Out) = 0+ fun14(W1,X1,Y1):2
     [Y1>=0,X1>=0,W1>=1,Y1+1=Out,X1+1=V,W1+1=V1] 
* CE 164: fun2(V1,V,Out) = 0
     [V1>=1,Out=0,V=0] 
* CE 165: fun2(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 166: fun2(V1,V,Out) = 0
     [V>=1,Out=0,V1=0] 

### Cost equations --> "Loop" of fun2/3 
* CEs [163] --> Loop 125 
* CEs [162] --> Loop 126 
* CEs [164] --> Loop 127 
* CEs [165,166] --> Loop 128 

#### Loops of fun2/3 
* Loop 125: fun2(V1,V,Out) [Out>=1,V>=1,V1>=2] 
* Loop 126: fun2(V1,V,Out) [V>=1,V1>=1,Out=1] 
* Loop 127: fun2(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 128: fun2(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun2(V1,V,Out) 

#### Partial ranking functions of CR fun2(V1,V,Out) 


### Resulting Chains:fun2(V1,V,Out) 
* [128]
* [127]
* [126]
* [125]


### Merging Chains  fun2/3 into  External patterns of execution 
* [[127],[128]] --> 1 
* [[126]] --> 2 
* [[125]] --> 3 


### Specialization of cost equations (mod)/3 
* CE 55 is refined into CE [167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223] 


#### Refined cost equations (mod)/3 
* CE 167: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):1+ fun2(Z1,A2,B2):1+ fun3(C2,D2,E2):4
     [E2=0,D2=0,C2=0,B2=0,A2=1,Z1=0,Y1=1,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 168: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):1+ fun2(Z1,A2,B2):1+ fun3(C2,D2,E2):5
     [E2=0,D2=0,C2=0,B2=0,A2=1,Z1=0,Y1=1,X1=0,W1=0,Out=0,V=0,V1=0] 
* CE 169: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):2+ fun2(Z1,A2,B2):1+ fun3(C2,D2,E2):4
     [E2=1,D2=0,C2=1,B2=0,A2=2,Z1=1,Y1=2,X1=1,W1=1,Out=1,V=1,V1=1] 
* CE 170: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):2+ fun2(Z1,A2,B2):1+ fun3(C2,D2,E2):5
     [E2=0,D2=0,C2=1,B2=0,A2=2,Z1=1,Y1=2,X1=1,W1=1,Out=0,V=1,V1=1] 
* CE 171: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):2+ fun2(Z1,A2,B2):2+ fun3(C2,D2,E2):5
     [E2=0,D2=1,C2=1,B2=1,A2=2,Z1=1,Y1=2,X1=1,W1=1,Out=0,V=1,V1=1] 
* CE 172: mod(A,B,A) = 4+ fun4(A,C,D):3+ fun2(A,E,F):1+ fun3(A,G,A):4
     [A>=1,G=0,F=0,E=1,D=1,C=0,B=0] 
* CE 173: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):1+ fun3(V1,A2,B2):5
     [V1>=1,B2=0,A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0,V=0] 
* CE 174: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):2+ fun3(V1,A2,B2):5
     [V1>=1,B2=0,A2=1,Z1=1,Y1=1,X1=1,W1=0,Out=0,V=0] 
* CE 175: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):2+ fun3(V1,A2,Out):6
     [V1>=Out+1,Out>=0,V1>=3,A2=1,Z1=1,Y1=1,X1=1,W1=0,V=0] 
* CE 176: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):3+ fun2(Z1,A2,B2):3+ fun3(C2,D2,Out):2
     [Out>=3,Out=D2+1,Out=B2+1,C2=2,A2=1,Z1=2,Y1=1,X1=0,W1=2,V=0,V1=2] 
* CE 177: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):3+ fun2(Z1,A2,B2):3+ fun3(C2,D2,Out):3
     [Out>=2,Out+1=D2,Out+1=B2,C2=2,A2=1,Z1=2,Y1=1,X1=0,W1=2,V=0,V1=2] 
* CE 178: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):3+ fun3(V1,Z1,A2):5
     [Z1>=1,V1>=2,A2=0,Y1=1,X1=1,W1=0,Out=0,V=0] 
* CE 179: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):3+ fun3(V1,Z1,Out):6
     [V1>=Out+1,Out>=0,Z1>=1,V1>=3,Y1=1,X1=1,W1=0,V=0] 
* CE 180: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):3+ fun2(V1,Y1,Z1):3+ fun3(V1,Z1,Out):7
     [V1+Z1>=Out+1,Out>=0,Z1>=2,V1>=3,Y1=1,X1=1,W1=0,V=0] 
* CE 181: mod(A,B,A) = 4+ fun4(A,C,D):4+ fun2(A,D,E):1+ fun3(A,F,A):4
     [A>=D,D>=2,F=0,E=0,C=2,B=2] 
* CE 182: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):1+ fun3(V1,Z1,A2):5
     [V1>=X1,X1>=2,A2=0,Z1=0,Y1=0,W1=2,Out=0,V=2] 
* CE 183: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,A2):5
     [V1>=X1,X1>=2,A2=0,Z1=1,Y1=1,W1=2,Out=0,V=2] 
* CE 184: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,Out):6
     [V1>=Out+1,V1>=X1,Out>=0,V1>=3,X1>=2,Z1=1,Y1=1,W1=2,V=2] 
* CE 185: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):4+ fun2(Z1,A2,B2):3+ fun3(C2,D2,Out):2
     [Out>=3,Out=D2+1,Out=B2+1,C2=2,A2=2,Z1=2,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 186: mod(V1,V,Out) = 4+ fun4(W1,X1,Y1):4+ fun2(Z1,A2,B2):3+ fun3(C2,D2,Out):3
     [Out>=2,Out+1=D2,Out+1=B2,C2=2,A2=2,Z1=2,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 187: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Z1):5
     [V1>=X1,Y1>=1,X1>=2,Z1=0,W1=2,Out=0,V=2] 
* CE 188: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):6
     [V1>=Out+1,V1>=X1,Out>=0,Y1>=1,V1>=3,X1>=2,W1=2,V=2] 
* CE 189: mod(V1,V,Out) = 4+ fun4(V1,W1,X1):4+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):7
     [V1+Y1>=Out+1,V1>=X1,Out>=0,Y1>=2,V1>=3,X1>=2,W1=2,V=2] 
* CE 190: mod(A,B,A) = 4+ fun4(A,B,C):5+ fun2(A,D,E):1+ fun3(A,F,A):4
     [A>=0,B>=0,F=0,E=0,D=0,C=0] 
* CE 191: mod(V1,V,Out) = 4+ fun4(V1,V,W1):5+ fun2(V1,X1,Y1):1+ fun3(V1,Z1,A2):5
     [V1>=0,V>=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 192: mod(A,B,A) = 4+ fun4(A,B,C):6+ fun2(A,D,E):1+ fun3(A,F,A):4
     [A>=1,B>=1,F=0,E=0,D=1,C=1] 
* CE 193: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):1+ fun3(V1,Z1,A2):5
     [V1>=1,V>=1,A2=0,Z1=0,Y1=0,X1=1,W1=1,Out=0] 
* CE 194: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,A2):5
     [V1>=1,V>=1,A2=0,Z1=1,Y1=1,X1=1,W1=1,Out=0] 
* CE 195: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,Out):6
     [V1>=Out+1,Out>=0,V1>=3,V>=1,Z1=1,Y1=1,X1=1,W1=1] 
* CE 196: mod(V1,V,Out) = 4+ fun4(W1,V,X1):6+ fun2(Y1,Z1,A2):3+ fun3(B2,C2,Out):2
     [Out>=3,V>=1,Out=C2+1,Out=A2+1,B2=2,Z1=1,Y1=2,X1=1,W1=2,V1=2] 
* CE 197: mod(V1,V,Out) = 4+ fun4(W1,V,X1):6+ fun2(Y1,Z1,A2):3+ fun3(B2,C2,Out):3
     [Out>=2,V>=1,Out+1=C2,Out+1=A2,B2=2,Z1=1,Y1=2,X1=1,W1=2,V1=2] 
* CE 198: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Z1):5
     [Y1>=1,V1>=2,V>=1,Z1=0,X1=1,W1=1,Out=0] 
* CE 199: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):6
     [V1>=Out+1,Out>=0,Y1>=1,V1>=3,V>=1,X1=1,W1=1] 
* CE 200: mod(V1,V,Out) = 4+ fun4(V1,V,W1):6+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):7
     [V1+Y1>=Out+1,Out>=0,Y1>=2,V1>=3,V>=1,X1=1,W1=1] 
* CE 201: mod(A,B,A) = 4+ fun4(A,B,C):7+ fun2(A,D,E):1+ fun3(A,F,A):4
     [A>=2,B>=2,F=0,E=0,D=2,C=2] 
* CE 202: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):1+ fun3(V1,Z1,A2):5
     [V1>=2,V>=2,A2=0,Z1=0,Y1=0,X1=2,W1=2,Out=0] 
* CE 203: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,A2):5
     [V1>=2,V>=2,A2=0,Z1=1,Y1=1,X1=2,W1=2,Out=0] 
* CE 204: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):2+ fun3(V1,Z1,Out):6
     [V1>=Out+1,Out>=0,V1>=3,V>=2,Z1=1,Y1=1,X1=2,W1=2] 
* CE 205: mod(V1,V,Out) = 4+ fun4(W1,V,X1):7+ fun2(Y1,Z1,A2):3+ fun3(B2,C2,Out):2
     [Out>=3,V>=2,Out=C2+1,Out=A2+1,B2=2,Z1=2,Y1=2,X1=2,W1=2,V1=2] 
* CE 206: mod(V1,V,Out) = 4+ fun4(W1,V,X1):7+ fun2(Y1,Z1,A2):3+ fun3(B2,C2,Out):3
     [Out>=2,V>=2,Out+1=C2,Out+1=A2,B2=2,Z1=2,Y1=2,X1=2,W1=2,V1=2] 
* CE 207: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Z1):5
     [Y1>=1,V1>=2,V>=2,Z1=0,X1=2,W1=2,Out=0] 
* CE 208: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):6
     [V1>=Out+1,Out>=0,Y1>=1,V1>=3,V>=2,X1=2,W1=2] 
* CE 209: mod(V1,V,Out) = 4+ fun4(V1,V,W1):7+ fun2(V1,X1,Y1):3+ fun3(V1,Y1,Out):7
     [V1+Y1>=Out+1,Out>=0,Y1>=2,V1>=3,V>=2,X1=2,W1=2] 
* CE 210: mod(A,B,A) = 4+ fun4(A,B,C):8+ fun2(A,C,D):1+ fun3(A,E,A):4
     [A+4>=2*C+B,C>=2,B>=3,E=0,D=0] 
* CE 211: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):1+ fun3(V1,Y1,Z1):5
     [V1+4>=2*W1+V,W1>=2,V>=3,Z1=0,Y1=0,X1=0,Out=0] 
* CE 212: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):2+ fun3(V1,Y1,Z1):5
     [V1+4>=2*W1+V,W1>=2,V>=3,Z1=0,Y1=1,X1=1,Out=0] 
* CE 213: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):2+ fun3(V1,Y1,Out):6
     [V1+4>=2*W1+V,V1>=Out+1,Out>=0,W1>=2,V>=3,Y1=1,X1=1] 
* CE 214: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):3+ fun3(V1,X1,Y1):5
     [V1+4>=2*W1+V,X1>=1,W1>=2,V>=3,Y1=0,Out=0] 
* CE 215: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):3+ fun3(V1,X1,Out):6
     [V1+4>=2*W1+V,V1>=Out+1,Out>=0,X1>=1,W1>=2,V>=3] 
* CE 216: mod(V1,V,Out) = 4+ fun4(V1,V,W1):8+ fun2(V1,W1,X1):3+ fun3(V1,X1,Out):7
     [V1+X1>=Out+1,V1+4>=2*W1+V,Out>=0,X1>=2,W1>=2,V>=3] 
* CE 217: mod(A,B,A) = 4+ fun4(A,B,C):9+ fun2(A,C,D):1+ fun3(A,E,A):4
     [A+5>=2*C+B,C>=3,B>=3,E=0,D=0] 
* CE 218: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):1+ fun3(V1,Y1,Z1):5
     [V1+5>=2*W1+V,W1>=3,V>=3,Z1=0,Y1=0,X1=0,Out=0] 
* CE 219: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):2+ fun3(V1,Y1,Z1):5
     [V1+5>=2*W1+V,W1>=3,V>=3,Z1=0,Y1=1,X1=1,Out=0] 
* CE 220: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):2+ fun3(V1,Y1,Out):6
     [V1+5>=2*W1+V,V1>=Out+1,Out>=0,W1>=3,V>=3,Y1=1,X1=1] 
* CE 221: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):3+ fun3(V1,X1,Y1):5
     [V1+5>=2*W1+V,X1>=1,W1>=3,V>=3,Y1=0,Out=0] 
* CE 222: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):3+ fun3(V1,X1,Out):6
     [V1+5>=2*W1+V,V1>=Out+1,Out>=0,X1>=1,W1>=3,V>=3] 
* CE 223: mod(V1,V,Out) = 4+ fun4(V1,V,W1):9+ fun2(V1,W1,X1):3+ fun3(V1,X1,Out):7
     [V1+X1>=Out+1,V1+5>=2*W1+V,Out>=0,X1>=2,W1>=3,V>=3] 

### Cost equations --> "Loop" of (mod)/3 
* CEs [184,188,189,195,199,200,204,208,209,213,215,216,220,222,223] --> Loop 129 
* CEs [181] --> Loop 130 
* CEs [182,183,187] --> Loop 131 
* CEs [175,179,180] --> Loop 132 
* CEs [172] --> Loop 133 
* CEs [173,174,178] --> Loop 134 
* CEs [185,186,196,197,205,206] --> Loop 135 
* CEs [176,177] --> Loop 136 
* CEs [169,190,192,201,210,217] --> Loop 137 
* CEs [170,171] --> Loop 138 
* CEs [167,168,191,193,194,198,202,203,207,211,212,214,218,219,221] --> Loop 139 

#### Loops of (mod)/3 
* Loop 129: mod(V1,V,Out) [Out>=0,V>=1,V1>=3] 
* Loop 130: mod(A,B,A) [A>=2,B=2] 
* Loop 131: mod(V1,V,Out) [V1>=2,Out=0,V=2] 
* Loop 132: mod(V1,V,Out) [Out>=0,V1>=3,V=0] 
* Loop 133: mod(A,B,A) [A>=1,B=0] 
* Loop 134: mod(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 135: mod(V1,V,Out) [Out>=2,V>=1,V1=2] 
* Loop 136: mod(V1,V,Out) [Out>=2,V=0,V1=2] 
* Loop 137: mod(A,B,A) [B>=0,A>=0] 
* Loop 138: mod(V1,V,Out) [Out=0,V=1,V1=1] 
* Loop 139: mod(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR mod(V1,V,Out) 

#### Partial ranking functions of CR mod(V1,V,Out) 


### Resulting Chains:mod(V1,V,Out) 
* [139]
* [138]
* [137]
* [136]
* [135]
* [134]
* [133]
* [132]
* [131]
* [130]
* [129]


### Merging Chains  (mod)/3 into  External patterns of execution 
* [[138],[139]] --> 1 
* [[136]] --> 2 
* [[135]] --> 3 
* [[134]] --> 4 
* [[133],[137]] --> 5 
* [[132]] --> 6 
* [[131]] --> 7 
* [[130]] --> 8 
* [[129]] --> 9 


### Specialization of cost equations fun7/4 
* CE 32 is refined into CE [224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256] 


#### Refined cost equations fun7/4 
* CE 224: fun7(A,B,C,A) = 2+ mod(C,B,D):1+ fun1(E,F,G):1+ fun8(H,C,A,A):2
     [A>=0,C>=0,B>=0,H=2,G=2,F=0,E=0,D=0] 
* CE 225: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):1+ fun1(X19,Y19,Z19):1+ fun8(A20,V19,V1,B20):3
     [V1>=0,V19>=0,V>=0,B20=0,A20=2,Z19=2,Y19=0,X19=0,W19=0,Out=0] 
* CE 226: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):1+ fun1(X19,Y19,Z19):5+ fun8(A20,V19,V1,B20):3
     [V1>=0,V19>=0,V>=0,B20=0,A20=0,Z19=0,Y19=0,X19=0,W19=0,Out=0] 
* CE 227: fun7(V1,V,V19,Out) = 2+ mod(W19,X19,Y19):2+ fun1(Y19,Z19,A20):4+ fun8(B20,C20,D20,Out):1
     [Out>=3,Y19>=2,Out=D20+3,Out=V1+3,C20=2,B20=1,A20=1,Z19=0,X19=0,W19=2,V19=2,V=0] 
* CE 228: fun7(V1,V,V19,Out) = 2+ mod(W19,X19,Y19):2+ fun1(Y19,Z19,A20):4+ fun8(B20,C20,V1,D20):3
     [V1>=0,Y19>=2,D20=0,C20=2,B20=1,A20=1,Z19=0,X19=0,W19=2,Out=0,V19=2,V=0] 
* CE 229: fun7(V1,V,V19,Out) = 2+ mod(W19,X19,Y19):2+ fun1(Y19,Z19,A20):5+ fun8(B20,C20,V1,D20):3
     [V1>=0,Y19>=2,D20=0,C20=2,B20=0,A20=0,Z19=0,X19=0,W19=2,Out=0,V19=2,V=0] 
* CE 230: fun7(V1,V,V19,Out) = 2+ mod(W19,V,X19):3+ fun1(X19,Y19,Z19):4+ fun8(A20,B20,C20,Out):1
     [Out>=3,X19>=2,V>=1,Out=C20+3,Out=V1+3,B20=2,A20=1,Z19=1,Y19=0,W19=2,V19=2] 
* CE 231: fun7(V1,V,V19,Out) = 2+ mod(W19,V,X19):3+ fun1(X19,Y19,Z19):4+ fun8(A20,B20,V1,C20):3
     [V1>=0,X19>=2,V>=1,C20=0,B20=2,A20=1,Z19=1,Y19=0,W19=2,Out=0,V19=2] 
* CE 232: fun7(V1,V,V19,Out) = 2+ mod(W19,V,X19):3+ fun1(X19,Y19,Z19):5+ fun8(A20,B20,V1,C20):3
     [V1>=0,X19>=2,V>=1,C20=0,B20=2,A20=0,Z19=0,Y19=0,W19=2,Out=0,V19=2] 
* CE 233: fun7(A,B,C,A) = 2+ mod(C,D,E):4+ fun1(F,G,H):1+ fun8(I,C,A,A):2
     [A>=0,C>=1,I=2,H=2,G=0,F=0,E=0,D=0,B=0] 
* CE 234: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):4+ fun1(Y19,Z19,A20):1+ fun8(B20,V19,V1,C20):3
     [V1>=0,V19>=1,C20=0,B20=2,A20=2,Z19=0,Y19=0,X19=0,W19=0,Out=0,V=0] 
* CE 235: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):4+ fun1(Y19,Z19,A20):5+ fun8(B20,V19,V1,C20):3
     [V1>=0,V19>=1,C20=0,B20=0,A20=0,Z19=0,Y19=0,X19=0,W19=0,Out=0,V=0] 
* CE 236: fun7(A,B,C,A) = 2+ mod(D,B,E):5+ fun1(F,G,H):1+ fun8(I,J,A,A):2
     [A>=0,B>=0,J=0,I=2,H=2,G=0,F=0,E=0,D=0,C=0] 
* CE 237: fun7(V1,V,V19,Out) = 2+ mod(W19,V,X19):5+ fun1(Y19,Z19,A20):1+ fun8(B20,C20,V1,D20):3
     [V1>=0,V>=0,D20=0,C20=0,B20=2,A20=2,Z19=0,Y19=0,X19=0,W19=0,Out=0,V19=0] 
* CE 238: fun7(V1,V,V19,Out) = 2+ mod(V19,V,V19):5+ fun1(V19,W19,X19):4+ fun8(Y19,V19,Z19,Out):1
     [Out>=V19+1,V19>=1,V>=0,Out=V19+Z19+1,Out=V1+V19+1,Y19=1,X19=1,W19=0] 
* CE 239: fun7(V1,V,V19,Out) = 2+ mod(V19,V,V19):5+ fun1(V19,W19,X19):4+ fun8(Y19,V19,V1,Z19):3
     [V1>=0,V19>=1,V>=0,Z19=0,Y19=1,X19=1,W19=0,Out=0] 
* CE 240: fun7(V1,V,V19,Out) = 2+ mod(V19,V,V19):5+ fun1(V19,W19,X19):5+ fun8(Y19,V19,V1,Z19):3
     [V1>=0,V19>=0,V>=0,Z19=0,Y19=0,X19=0,W19=0,Out=0] 
* CE 241: fun7(A,B,C,A) = 2+ mod(C,D,E):6+ fun1(F,G,H):1+ fun8(I,C,A,A):2
     [A>=0,C>=3,I=2,H=2,G=0,F=0,E=0,D=0,B=0] 
* CE 242: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):6+ fun1(Y19,Z19,A20):1+ fun8(B20,V19,V1,C20):3
     [V1>=0,V19>=3,C20=0,B20=2,A20=2,Z19=0,Y19=0,X19=0,W19=0,Out=0,V=0] 
* CE 243: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):6+ fun1(X19,Y19,Z19):4+ fun8(A20,V19,B20,Out):1
     [Out>=V19+1,V19>=3,X19>=1,Out=V19+B20+1,Out=V1+V19+1,A20=1,Z19=1,Y19=0,W19=0,V=0] 
* CE 244: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):6+ fun1(X19,Y19,Z19):4+ fun8(A20,V19,V1,B20):3
     [V1>=0,V19>=3,X19>=1,B20=0,A20=1,Z19=1,Y19=0,W19=0,Out=0,V=0] 
* CE 245: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):6+ fun1(X19,Y19,Z19):5+ fun8(A20,V19,V1,B20):3
     [V1>=0,V19>=3,X19>=0,B20=0,A20=0,Z19=0,Y19=0,W19=0,Out=0,V=0] 
* CE 246: fun7(A,B,C,A) = 2+ mod(C,D,E):7+ fun1(F,G,H):1+ fun8(I,C,A,A):2
     [A>=0,C>=2,I=2,H=2,G=0,F=0,E=0,D=2,B=2] 
* CE 247: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):7+ fun1(Y19,Z19,A20):1+ fun8(B20,V19,V1,C20):3
     [V1>=0,V19>=2,C20=0,B20=2,A20=2,Z19=0,Y19=0,X19=0,W19=2,Out=0,V=2] 
* CE 248: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,X19):7+ fun1(Y19,Z19,A20):5+ fun8(B20,V19,V1,C20):3
     [V1>=0,V19>=2,C20=0,B20=0,A20=0,Z19=0,Y19=0,X19=0,W19=2,Out=0,V=2] 
* CE 249: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,V19):8+ fun1(V19,X19,Y19):4+ fun8(Z19,V19,A20,Out):1
     [Out>=V19+1,V19>=2,Out=V19+A20+1,Out=V1+V19+1,Z19=1,Y19=1,X19=0,W19=2,V=2] 
* CE 250: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,V19):8+ fun1(V19,X19,Y19):4+ fun8(Z19,V19,V1,A20):3
     [V1>=0,V19>=2,A20=0,Z19=1,Y19=1,X19=0,W19=2,Out=0,V=2] 
* CE 251: fun7(V1,V,V19,Out) = 2+ mod(V19,W19,V19):8+ fun1(V19,X19,Y19):5+ fun8(Z19,V19,V1,A20):3
     [V1>=0,V19>=2,A20=0,Z19=0,Y19=0,X19=0,W19=2,Out=0,V=2] 
* CE 252: fun7(A,B,C,A) = 2+ mod(C,B,D):9+ fun1(E,F,G):1+ fun8(H,C,A,A):2
     [A>=0,C>=3,B>=1,H=2,G=2,F=0,E=0,D=0] 
* CE 253: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):9+ fun1(X19,Y19,Z19):1+ fun8(A20,V19,V1,B20):3
     [V1>=0,V19>=3,V>=1,B20=0,A20=2,Z19=2,Y19=0,X19=0,W19=0,Out=0] 
* CE 254: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):9+ fun1(W19,X19,Y19):4+ fun8(Z19,V19,A20,Out):1
     [Out>=V19+1,V19>=3,W19>=1,V>=1,Out=V19+A20+1,Out=V1+V19+1,Z19=1,Y19=1,X19=0] 
* CE 255: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):9+ fun1(W19,X19,Y19):4+ fun8(Z19,V19,V1,A20):3
     [V1>=0,V19>=3,W19>=1,V>=1,A20=0,Z19=1,Y19=1,X19=0,Out=0] 
* CE 256: fun7(V1,V,V19,Out) = 2+ mod(V19,V,W19):9+ fun1(W19,X19,Y19):5+ fun8(Z19,V19,V1,A20):3
     [V1>=0,V19>=3,W19>=0,V>=1,A20=0,Z19=0,Y19=0,X19=0,Out=0] 

### Cost equations --> "Loop" of fun7/4 
* CEs [230] --> Loop 140 
* CEs [231,232] --> Loop 141 
* CEs [236] --> Loop 142 
* CEs [237] --> Loop 143 
* CEs [249] --> Loop 144 
* CEs [246] --> Loop 145 
* CEs [247,248,250,251] --> Loop 146 
* CEs [243] --> Loop 147 
* CEs [224,233,241,252] --> Loop 148 
* CEs [227,238,254] --> Loop 149 
* CEs [225,226,228,229,234,235,239,240,242,244,245,253,255,256] --> Loop 150 

#### Loops of fun7/4 
* Loop 140: fun7(V1,V,V19,Out) [V>=1,V1>=0,V1+3=Out,V19=2] 
* Loop 141: fun7(V1,V,V19,Out) [V>=1,V1>=0,Out=0,V19=2] 
* Loop 142: fun7(A,B,C,A) [B>=0,A>=0,C=0] 
* Loop 143: fun7(V1,V,V19,Out) [V>=0,V1>=0,Out=0,V19=0] 
* Loop 144: fun7(V1,V,V19,Out) [V19>=2,V1>=0,V1+V19+1=Out,V=2] 
* Loop 145: fun7(A,B,C,A) [C>=2,A>=0,B=2] 
* Loop 146: fun7(V1,V,V19,Out) [V19>=2,V1>=0,Out=0,V=2] 
* Loop 147: fun7(V1,V,V19,Out) [V19>=3,V1>=0,V1+V19+1=Out,V=0] 
* Loop 148: fun7(A,B,C,A) [C>=0,B>=0,A>=0] 
* Loop 149: fun7(V1,V,V19,Out) [V19>=1,V>=0,V1>=0,V1+V19+1=Out] 
* Loop 150: fun7(V1,V,V19,Out) [V19>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun7(V1,V,V19,Out) 

#### Partial ranking functions of CR fun7(V1,V,V19,Out) 


### Resulting Chains:fun7(V1,V,V19,Out) 
* [150]
* [149]
* [148]
* [147]
* [146]
* [145]
* [144]
* [143]
* [142]
* [141]
* [140]


### Merging Chains  fun7/4 into  External patterns of execution 
* [[147],[149]] --> 1 
* [[146],[150]] --> 2 
* [[145],[148]] --> 3 
* [[144]] --> 4 
* [[143]] --> 5 
* [[142]] --> 6 
* [[141]] --> 7 
* [[140]] --> 8 


### Specialization of cost equations filter/3 
* CE 31 is refined into CE [257,258,259,260,261,262,263,264] 
* CE 29 is refined into CE [265] 
* CE 30 is refined into CE [266] 


#### Refined cost equations filter/3 
* CE 257: filter(V1,V,Out) = 2+ filter(V1,W1,X1)+ fun7(X1,V1,Y1,Out):1
     [Out>=X1+2,W1>=0,V1>=0,X1>=0,Out+W1=V+X1,Out=X1+Y1+1] 
* CE 258: filter(V1,V,Out) = 2+ filter(V1,W1,X1)+ fun7(X1,V1,Y1,Z1):2
     [W1>=0,Y1>=0,V1>=0,X1>=0,Y1+W1+1=V,Z1=0,Out=0] 
* CE 259: filter(V1,V,Out) = 2+ filter(V1,W1,Out)+ fun7(Out,V1,X1,Out):3
     [W1>=0,Out>=0,X1>=0,V1>=0,X1+W1+1=V] 
* CE 260: filter(V1,V,Out) = 2+ filter(W1,X1,Y1)+ fun7(Y1,Z1,A2,Out):4
     [Out>=Y1+3,X1>=0,Y1>=0,Out+X1=V+Y1,Out=Y1+A2+1,W1=2,Z1=2,V1=2] 
* CE 261: filter(V1,V,Out) = 2+ filter(V1,W1,X1)+ fun7(X1,V1,Y1,Z1):5
     [W1>=0,V1>=0,X1>=0,W1+1=V,Z1=0,Y1=0,Out=0] 
* CE 262: filter(V1,V,Out) = 2+ filter(V1,W1,Out)+ fun7(Out,V1,X1,Out):6
     [W1>=0,Out>=0,V1>=0,W1+1=V,X1=0] 
* CE 263: filter(V1,V,Out) = 2+ filter(V1,W1,X1)+ fun7(X1,V1,Y1,Z1):7
     [W1>=0,V1>=1,X1>=0,W1+3=V,Z1=0,Y1=2,Out=0] 
* CE 264: filter(V1,V,Out) = 2+ filter(V1,W1,X1)+ fun7(Y1,V1,Z1,Out):8
     [W1>=0,Out>=3,V1>=1,Out=X1+3,Out=Y1+3,W1+3=V,Z1=2] 
* CE 265: filter(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 266: filter(V1,V,Out) = 2
     [V1>=0,Out=2,V=2] 

### Cost equations --> "Loop" of filter/3 
* CEs [265] --> Loop 151 
* CEs [266] --> Loop 152 
* CEs [259,262] --> Loop 153 
* CEs [264] --> Loop 154 
* CEs [261] --> Loop 155 
* CEs [258,263] --> Loop 156 
* CEs [257,260] --> Loop 157 

#### Loops of filter/3 
* Loop 151: filter(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 152: filter(V1,V,Out) [V1>=0,Out=2,V=2] 
* Loop 153: filter(V1,V,Out)->  filter(V1,V',Out)
                  [V>=V'+1,V'>=0,Out>=0,V1>=0] 
* Loop 154: filter(V1,V,Out)->  filter(V1,V',Out')
                  [Out>=3,V>=3,V1>=1,Out=Out'+3,V=V'+3] 
* Loop 155: filter(V1,V,Out)->  filter(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 156: filter(V1,V,Out)->  filter(V1,V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=0,Out=0] 
* Loop 157: filter(V1,V,Out)->  filter(V1,V',Out')
                  [Out+V'>=V,V>=V'+2,V'>=0,V1>=0,V+Out'=Out+V'] 

### Ranking functions of CR filter(V1,V,Out) 
* RF of phase [153,154,155,156,157]: [V]

#### Partial ranking functions of CR filter(V1,V,Out) 
* Partial RF of phase [153,154,155,156,157]:
  - RF of loop [153:1,155:1,156:1]:
    V
  - RF of loop [154:1]:
    V/3-2/3
  - RF of loop [157:1]:
    V-1


### Resulting Chains:filter(V1,V,Out) 
* [[153,154,155,156,157],152]
* [[153,154,155,156,157],151]
* [152]
* [151]


### Merging Chains  filter/3 into  External patterns of execution 
* [[152],[151,[153,154,155,156,157]]] --> 1 
* [[151]] --> 2 
* [[152,[153,154,155,156,157]]] --> 3 


### Specialization of cost equations fun5/2 
* CE 28 is refined into CE [267] 
* CE 27 is refined into CE [268] 
* CE 26 is refined into CE [269,270,271] 


#### Refined cost equations fun5/2 
* CE 267: fun5(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 268: fun5(V1,Out) = 1
     [Out=2,V1=2] 
* CE 269: fun5(V1,Out) = 2+ filter(W1,X1,Y1):1+ fun5(Y1,Z1)
     [2*X1>=Y1+2,X1>=Y1,Y1>=0,W1>=0,W1+Z1+1=Out,W1+X1+1=V1] 
* CE 270: fun5(V1,Out) = 2+ filter(W1,X1,Y1):2+ fun5(Z1,A2)
     [X1>=0,W1>=0,W1+A2+1=Out,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 271: fun5(V1,Out) = 2+ filter(W1,X1,Y1):3+ fun5(Y1,Z1)
     [2*X1>=Y1+4,X1>=Y1,Y1>=0,X1>=3,W1>=0,W1+Z1+1=Out,W1+X1+1=V1] 

### Cost equations --> "Loop" of fun5/2 
* CEs [269,271] --> Loop 158 
* CEs [270] --> Loop 159 
* CEs [267] --> Loop 160 
* CEs [268] --> Loop 161 

#### Loops of fun5/2 
* Loop 158: fun5(V1,Out)->  fun5(V1',Out')
                  [V1+Out'>=Out+V1',2*V1+2*Out'>=2*Out+V1'+2,Out>=Out'+1,V1'>=0] 
* Loop 159: fun5(V1,Out)->  fun5(V1',Out')
                  [V1+Out'>=Out,Out>=Out'+1,V1'=0] 
* Loop 160: fun5(V1,Out) [V1>=0,Out=0] 
* Loop 161: fun5(V1,Out) [Out=2,V1=2] 

### Ranking functions of CR fun5(V1,Out) 
* RF of phase [158]: [V1-1]

#### Partial ranking functions of CR fun5(V1,Out) 
* Partial RF of phase [158]:
  - RF of loop [158:1]:
    V1-1


### Resulting Chains:fun5(V1,Out) 
* [[158],161]
* [[158],160]
* [[158],159,160]
* [161]
* [160]
* [159,160]


### Merging Chains  fun5/2 into  External patterns of execution 
* [[160,159],[161],[160,159,[158]],[160,[158]],[161,[158]]] --> 1 
* [[160]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [272,273] 
* CE 3 is refined into CE [274] 
* CE 4 is refined into CE [275] 
* CE 5 is refined into CE [276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299] 
* CE 6 is refined into CE [300,301,302,303,304,305] 
* CE 7 is refined into CE [306,307,308] 
* CE 8 is refined into CE [309,310,311,312,313,314,315] 
* CE 9 is refined into CE [316,317,318,319,320,321,322,323,324] 
* CE 10 is refined into CE [325,326] 
* CE 11 is refined into CE [327,328,329] 
* CE 12 is refined into CE [330,331,332,333,334,335,336,337] 
* CE 13 is refined into CE [338,339,340] 
* CE 14 is refined into CE [341,342,343,344,345,346,347,348,349] 
* CE 15 is refined into CE [350,351,352,353,354,355,356,357] 
* CE 16 is refined into CE [358,359,360,361,362] 
* CE 17 is refined into CE [363,364,365,366,367,368,369,370,371] 
* CE 18 is refined into CE [372,373,374,375,376,377] 
* CE 19 is refined into CE [378,379,380] 
* CE 20 is refined into CE [381,382,383,384,385,386] 
* CE 21 is refined into CE [387,388] 
* CE 22 is refined into CE [389,390,391] 
* CE 23 is refined into CE [392,393,394,395] 
* CE 24 is refined into CE [396,397,398,399,400,401,402] 
* CE 25 is refined into CE [403,404,405,406] 


#### Refined cost equations start/3 
* CE 272: start(V1,V,V19) = 1+ fun5(V1,W19):1
     [V1>=W19,W19>=1] 
* CE 273: start(V1,V,V19) = 1+ fun5(V1,W19):2
     [V1>=0,W19=0] 
* CE 274: start(V1,V,V19) = 0
     [V>=0,V1>=0] 
* CE 275: start(V1,V,V19) = 1
     [V>=0,V1=2] 
* CE 276: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,Z19):1
     [2*W19>=X19+2,Z19>=X19+2,W19>=X19,V>=0,X19>=0,W19+Z19=V1+X19,Z19=X19+Y19+1] 
* CE 277: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,Z19):2
     [2*W19>=X19+2,W19>=X19,Y19>=0,V>=0,X19>=0,W19+Y19+1=V1,Z19=0] 
* CE 278: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,X19):3
     [2*W19>=X19+2,W19>=X19,X19>=0,Y19>=0,V>=0,W19+Y19+1=V1] 
* CE 279: start(V1,V,V19) = 1+ filter(W19,X19,Y19):1+ fun7(Y19,Z19,A20,B20):4
     [2*X19>=Y19+2,B20>=Y19+3,X19>=Y19,Y19>=0,X19+B20=V1+Y19,B20=Y19+A20+1,Z19=2,W19=2,V=2] 
* CE 280: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,Z19):5
     [2*W19>=X19+2,W19>=X19,V>=0,X19>=0,W19+1=V1,Z19=0,Y19=0] 
* CE 281: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,X19):6
     [2*W19>=X19+2,W19>=X19,X19>=0,V>=0,W19+1=V1,Y19=0] 
* CE 282: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(X19,V,Y19,Z19):7
     [2*W19>=X19+2,W19>=X19,V>=1,X19>=0,W19+3=V1,Z19=0,Y19=2] 
* CE 283: start(V1,V,V19) = 1+ filter(V,W19,X19):1+ fun7(Y19,V,Z19,A20):8
     [2*W19+1>=A20,W19+3>=A20,A20>=3,V>=1,A20=Y19+3,A20=X19+3,W19+3=V1,Z19=2] 
* CE 284: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):1
     [A20>=2,V>=0,W19>=0,W19+A20=V1,A20=Z19+1,Y19=0,X19=0] 
* CE 285: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):2
     [Z19>=0,V>=0,W19>=0,W19+Z19+1=V1,A20=0,Y19=0,X19=0] 
* CE 286: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):3
     [Z19>=0,V>=0,W19>=0,W19+Z19+1=V1,A20=0,Y19=0,X19=0] 
* CE 287: start(V1,V,V19) = 1+ filter(W19,X19,Y19):2+ fun7(Z19,A20,B20,C20):4
     [C20>=3,X19>=0,X19+C20=V1,C20=B20+1,A20=2,Z19=0,Y19=0,W19=2,V=2] 
* CE 288: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):5
     [V>=0,W19>=0,W19+1=V1,A20=0,Z19=0,Y19=0,X19=0] 
* CE 289: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):6
     [V>=0,W19>=0,W19+1=V1,A20=0,Z19=0,Y19=0,X19=0] 
* CE 290: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):7
     [V>=1,W19>=0,W19+3=V1,A20=0,Z19=2,Y19=0,X19=0] 
* CE 291: start(V1,V,V19) = 1+ filter(V,W19,X19):2+ fun7(Y19,V,Z19,A20):8
     [V>=1,W19>=0,W19+3=V1,A20=3,Z19=2,Y19=0,X19=0] 
* CE 292: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,Z19):1
     [2*W19>=X19+4,Z19>=X19+2,W19>=X19,V>=0,X19>=0,W19>=3,W19+Z19=V1+X19,Z19=X19+Y19+1] 
* CE 293: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,Z19):2
     [2*W19>=X19+4,W19>=X19,Y19>=0,V>=0,X19>=0,W19>=3,W19+Y19+1=V1,Z19=0] 
* CE 294: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,X19):3
     [2*W19>=X19+4,W19>=X19,X19>=0,Y19>=0,V>=0,W19>=3,W19+Y19+1=V1] 
* CE 295: start(V1,V,V19) = 1+ filter(W19,X19,Y19):3+ fun7(Y19,Z19,A20,B20):4
     [2*X19>=Y19+4,B20>=Y19+3,X19>=Y19,Y19>=0,X19>=3,X19+B20=V1+Y19,B20=Y19+A20+1,Z19=2,W19=2,V=2] 
* CE 296: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,Z19):5
     [2*W19>=X19+4,W19>=X19,V>=0,X19>=0,W19>=3,W19+1=V1,Z19=0,Y19=0] 
* CE 297: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,X19):6
     [2*W19>=X19+4,W19>=X19,X19>=0,V>=0,W19>=3,W19+1=V1,Y19=0] 
* CE 298: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(X19,V,Y19,Z19):7
     [2*W19>=X19+4,W19>=X19,V>=1,X19>=0,W19>=3,W19+3=V1,Z19=0,Y19=2] 
* CE 299: start(V1,V,V19) = 1+ filter(V,W19,X19):3+ fun7(Y19,V,Z19,A20):8
     [2*W19>=A20+1,W19+3>=A20,A20>=3,V>=1,W19>=3,A20=Y19+3,A20=X19+3,W19+3=V1,Z19=2] 
* CE 300: start(V1,V,V19) = 1+ fun1(W19,X19,Y19):1
     [Y19=2,X19=0,W19=0,V=0,V1=0] 
* CE 301: start(V1,V,V19) = 1+ fun1(W19,V,X19):2
     [V>=1,X19=1,W19=0,V1=0] 
* CE 302: start(V1,V,V19) = 1+ fun1(V1,V,W19):3
     [W19>=0,V>=1,V1>=1,2>=W19] 
* CE 303: start(V1,V,V19) = 1+ fun1(V1,W19,X19):4
     [V1>=1,X19=1,W19=0,V=0] 
* CE 304: start(V1,V,V19) = 1+ fun1(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 305: start(V1,V,V19) = 1+ fun1(V1,V,W19):6
     [V>=1,V1>=1,W19=1] 
* CE 306: start(V1,V,V19) = 1+ fun2(V1,V,W19):1
     [V>=0,V1>=0,W19=0] 
* CE 307: start(V1,V,V19) = 1+ fun2(V1,V,W19):2
     [V>=1,V1>=1,W19=1] 
* CE 308: start(V1,V,V19) = 1+ fun2(V1,V,W19):3
     [W19>=1,V>=1,V1>=2] 
* CE 309: start(V1,V,V19) = 1+ fun3(W19,V,V):1
     [V>=1,W19=0,V1=0] 
* CE 310: start(V1,V,V19) = 1+ fun3(W19,X19,Y19):2
     [Y19>=3,Y19=X19+1,Y19=V+1,W19=2,V1=2] 
* CE 311: start(V1,V,V19) = 1+ fun3(W19,X19,Y19):3
     [Y19>=2,Y19+1=X19,Y19+1=V,W19=2,V1=2] 
* CE 312: start(V1,V,V19) = 1+ fun3(V1,W19,V1):4
     [V1>=0,W19=0,V=0] 
* CE 313: start(V1,V,V19) = 1+ fun3(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 314: start(V1,V,V19) = 1+ fun3(V1,V,W19):6
     [V1>=W19+1,W19>=0,V>=1,V1>=3] 
* CE 315: start(V1,V,V19) = 1+ fun3(V1,V,W19):7
     [V1+V>=W19+1,W19>=0,V>=2,V1>=3] 
* CE 316: start(V1,V,V19) = 1+ fun4(W19,X19,Y19):1
     [Y19=1,X19=0,W19=0,V=0,V1=0] 
* CE 317: start(V1,V,V19) = 1+ fun4(W19,X19,Y19):2
     [Y19=2,X19=1,W19=1,V=1,V1=1] 
* CE 318: start(V1,V,V19) = 1+ fun4(V1,W19,X19):3
     [V1>=1,X19=1,W19=0,V=0] 
* CE 319: start(V1,V,V19) = 1+ fun4(V1,W19,X19):4
     [V1>=X19,X19>=2,W19=2,V=2] 
* CE 320: start(V1,V,V19) = 1+ fun4(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 321: start(V1,V,V19) = 1+ fun4(V1,V,W19):6
     [V>=1,V1>=1,W19=1] 
* CE 322: start(V1,V,V19) = 1+ fun4(V1,V,W19):7
     [V>=2,V1>=2,W19=2] 
* CE 323: start(V1,V,V19) = 1+ fun4(V1,V,W19):8
     [V1+4>=2*W19+V,W19>=2,V>=3] 
* CE 324: start(V1,V,V19) = 1+ fun4(V1,V,W19):9
     [V1+5>=2*W19+V,W19>=3,V>=3] 
* CE 325: start(V1,V,V19) = 0+ fun5(V1,W19):1
     [V1>=W19,W19>=1] 
* CE 326: start(V1,V,V19) = 0+ fun5(V1,W19):2
     [V1>=0,W19=0] 
* CE 327: start(V1,V,V19) = 0+ filter(V1,V,W19):1
     [2*V>=W19+2,V>=W19,W19>=0,V1>=0] 
* CE 328: start(V1,V,V19) = 0+ filter(V1,V,W19):2
     [V>=0,V1>=0,W19=0] 
* CE 329: start(V1,V,V19) = 0+ filter(V1,V,W19):3
     [2*V>=W19+4,V>=W19,W19>=0,V>=3,V1>=0] 
* CE 330: start(V1,V,V19) = 0+ fun7(V1,V,W19,X19):1
     [X19>=V1+2,V>=0,V1>=0,X19=V1+W19+1,X19=V1+V19+1] 
* CE 331: start(V1,V,V19) = 0+ fun7(V1,V,V19,W19):2
     [V19>=0,V>=0,V1>=0,W19=0] 
* CE 332: start(V1,V,V19) = 0+ fun7(V1,V,V19,V1):3
     [V1>=0,V19>=0,V>=0] 
* CE 333: start(V1,V,V19) = 0+ fun7(V1,W19,X19,Y19):4
     [Y19>=V1+3,V1>=0,Y19=V1+X19+1,Y19=V1+V19+1,W19=2,V=2] 
* CE 334: start(V1,V,V19) = 0+ fun7(V1,V,W19,X19):5
     [V>=0,V1>=0,X19=0,W19=0,V19=0] 
* CE 335: start(V1,V,V19) = 0+ fun7(V1,V,W19,V1):6
     [V1>=0,V>=0,W19=0,V19=0] 
* CE 336: start(V1,V,V19) = 0+ fun7(V1,V,W19,X19):7
     [V>=1,V1>=0,X19=0,W19=2,V19=2] 
* CE 337: start(V1,V,V19) = 0+ fun7(W19,V,X19,Y19):8
     [Y19>=3,V>=1,Y19=W19+3,Y19=V1+3,X19=2,V19=2] 
* CE 338: start(V1,V,V19) = 0+ fun8(W19,V,X19,Y19):1
     [Y19>=V+1,V>=0,Y19=V+X19+1,Y19=V+V19+1,W19=1,V1=1] 
* CE 339: start(V1,V,V19) = 0+ fun8(W19,V,V19,V19):2
     [V19>=0,V>=0,W19=2,V1=2] 
* CE 340: start(V1,V,V19) = 0+ fun8(V1,V,V19,W19):3
     [V19>=0,V>=0,V1>=0,W19=0] 
* CE 341: start(V1,V,V19) = 0+ mod(V1,V,W19):1
     [V>=0,V1>=0,W19=0] 
* CE 342: start(V1,V,V19) = 0+ mod(W19,X19,Y19):2
     [Y19>=2,X19=0,W19=2,V=0,V1=2] 
* CE 343: start(V1,V,V19) = 0+ mod(W19,V,X19):3
     [X19>=2,V>=1,W19=2,V1=2] 
* CE 344: start(V1,V,V19) = 0+ mod(V1,W19,X19):4
     [V1>=1,X19=0,W19=0,V=0] 
* CE 345: start(V1,V,V19) = 0+ mod(V1,V,V1):5
     [V1>=0,V>=0] 
* CE 346: start(V1,V,V19) = 0+ mod(V1,W19,X19):6
     [X19>=0,V1>=3,W19=0,V=0] 
* CE 347: start(V1,V,V19) = 0+ mod(V1,W19,X19):7
     [V1>=2,X19=0,W19=2,V=2] 
* CE 348: start(V1,V,V19) = 0+ mod(V1,W19,V1):8
     [V1>=2,W19=2,V=2] 
* CE 349: start(V1,V,V19) = 0+ mod(V1,V,W19):9
     [W19>=0,V>=1,V1>=3] 
* CE 350: start(V1,V,V19) = 0+ fun9(W19,V,V):1
     [V>=0,W19=0,V1=0] 
* CE 351: start(V1,V,V19) = 0+ fun9(W19,X19,Y19):2
     [Y19=2,X19=0,W19=2,V=0,V1=2] 
* CE 352: start(V1,V,V19) = 0+ fun9(W19,X19,Y19):3
     [Y19>=3,Y19=X19+1,Y19=V+1,W19=2,V1=2] 
* CE 353: start(V1,V,V19) = 0+ fun9(W19,X19,Y19):4
     [Y19>=2,Y19+1=X19,Y19+1=V,W19=2,V1=2] 
* CE 354: start(V1,V,V19) = 0+ fun9(V1,W19,X19):5
     [V1>=X19,X19>=0,V1>=3,W19=0,V=0] 
* CE 355: start(V1,V,V19) = 0+ fun9(V1,V,W19):6
     [V>=0,V1>=0,W19=0] 
* CE 356: start(V1,V,V19) = 0+ fun9(V1,V,W19):7
     [V1>=W19+1,W19>=0,V>=0,V1>=3] 
* CE 357: start(V1,V,V19) = 0+ fun9(V1,V,W19):8
     [V1+V>=W19+1,W19>=0,V>=2,V1>=3] 
* CE 358: start(V1,V,V19) = 0+ fun12(W19,X19,Y19):1
     [Y19=1,X19=1,W19=1,V=1,V1=1] 
* CE 359: start(V1,V,V19) = 0+ fun12(W19,X19,Y19):2
     [Y19=1,X19=2,W19=1,V=2,V1=1] 
* CE 360: start(V1,V,V19) = 0+ fun12(W19,X19,Y19):3
     [Y19=1,X19=1,W19=2,V=1,V1=2] 
* CE 361: start(V1,V,V19) = 0+ fun12(W19,X19,Y19):4
     [Y19=2,X19=2,W19=2,V=2,V1=2] 
* CE 362: start(V1,V,V19) = 0+ fun12(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 363: start(V1,V,V19) = 0+ fun4(W19,X19,Y19):1
     [Y19=1,X19=0,W19=0,V=0,V1=0] 
* CE 364: start(V1,V,V19) = 0+ fun4(W19,X19,Y19):2
     [Y19=2,X19=1,W19=1,V=1,V1=1] 
* CE 365: start(V1,V,V19) = 0+ fun4(V1,W19,X19):3
     [V1>=1,X19=1,W19=0,V=0] 
* CE 366: start(V1,V,V19) = 0+ fun4(V1,W19,X19):4
     [V1>=X19,X19>=2,W19=2,V=2] 
* CE 367: start(V1,V,V19) = 0+ fun4(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 368: start(V1,V,V19) = 0+ fun4(V1,V,W19):6
     [V>=1,V1>=1,W19=1] 
* CE 369: start(V1,V,V19) = 0+ fun4(V1,V,W19):7
     [V>=2,V1>=2,W19=2] 
* CE 370: start(V1,V,V19) = 0+ fun4(V1,V,W19):8
     [V1+4>=2*W19+V,W19>=2,V>=3] 
* CE 371: start(V1,V,V19) = 0+ fun4(V1,V,W19):9
     [V1+5>=2*W19+V,W19>=3,V>=3] 
* CE 372: start(V1,V,V19) = 0+ fun1(W19,X19,Y19):1
     [Y19=2,X19=0,W19=0,V=0,V1=0] 
* CE 373: start(V1,V,V19) = 0+ fun1(W19,V,X19):2
     [V>=1,X19=1,W19=0,V1=0] 
* CE 374: start(V1,V,V19) = 0+ fun1(V1,V,W19):3
     [W19>=0,V>=1,V1>=1,2>=W19] 
* CE 375: start(V1,V,V19) = 0+ fun1(V1,W19,X19):4
     [V1>=1,X19=1,W19=0,V=0] 
* CE 376: start(V1,V,V19) = 0+ fun1(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 377: start(V1,V,V19) = 0+ fun1(V1,V,W19):6
     [V>=1,V1>=1,W19=1] 
* CE 378: start(V1,V,V19) = 0+ fun2(V1,V,W19):1
     [V>=0,V1>=0,W19=0] 
* CE 379: start(V1,V,V19) = 0+ fun2(V1,V,W19):2
     [V>=1,V1>=1,W19=1] 
* CE 380: start(V1,V,V19) = 0+ fun2(V1,V,W19):3
     [W19>=1,V>=1,V1>=2] 
* CE 381: start(V1,V,V19) = 0+ fun13(W19,X19,Y19):1
     [Y19=1,X19=0,W19=0,V=0,V1=0] 
* CE 382: start(V1,V,V19) = 0+ fun13(V1,W19,X19):2
     [V1>=X19,X19>=1,W19=1,V=1] 
* CE 383: start(V1,V,V19) = 0+ fun13(V1,V,W19):3
     [V>=0,V1>=0,W19=0] 
* CE 384: start(V1,V,V19) = 0+ fun13(V1,V,W19):4
     [V>=1,V1>=1,W19=1] 
* CE 385: start(V1,V,V19) = 0+ fun13(V1,V,W19):5
     [V1+2>=2*W19+V,W19>=1,V>=2] 
* CE 386: start(V1,V,V19) = 0+ fun13(V1,V,W19):6
     [V1+3>=2*W19+V,W19>=2,V>=2] 
* CE 387: start(V1,V,V19) = 0+ fun14(V1,V,W19):1
     [V>=0,V1>=0,W19=0] 
* CE 388: start(V1,V,V19) = 0+ fun14(V1,V,W19):2
     [W19>=0,V>=0,V1>=1] 
* CE 389: start(V1,V,V19) = 0+ fun15(V1,W19,V1):1
     [V1>=0,W19=0,V=0] 
* CE 390: start(V1,V,V19) = 0+ fun15(V1,V,W19):2
     [V>=0,V1>=0,W19=0] 
* CE 391: start(V1,V,V19) = 0+ fun15(W19,V,X19):3
     [X19>=0,V>=1,V+X19=W19,V+X19=V1] 
* CE 392: start(V1,V,V19) = 0+ fun10(W19,X19):1
     [X19=2,W19=0,V1=0] 
* CE 393: start(V1,V,V19) = 0+ fun10(V1,W19):2
     [V1>=0,W19=0] 
* CE 394: start(V1,V,V19) = 0+ fun10(W19,X19):3
     [X19>=3,X19=W19+1,X19=V1+1] 
* CE 395: start(V1,V,V19) = 0+ fun10(W19,X19):4
     [X19>=2,X19+1=W19,X19+1=V1] 
* CE 396: start(V1,V,V19) = 0+ fun3(W19,V,V):1
     [V>=1,W19=0,V1=0] 
* CE 397: start(V1,V,V19) = 0+ fun3(W19,X19,Y19):2
     [Y19>=3,Y19=X19+1,Y19=V+1,W19=2,V1=2] 
* CE 398: start(V1,V,V19) = 0+ fun3(W19,X19,Y19):3
     [Y19>=2,Y19+1=X19,Y19+1=V,W19=2,V1=2] 
* CE 399: start(V1,V,V19) = 0+ fun3(V1,W19,V1):4
     [V1>=0,W19=0,V=0] 
* CE 400: start(V1,V,V19) = 0+ fun3(V1,V,W19):5
     [V>=0,V1>=0,W19=0] 
* CE 401: start(V1,V,V19) = 0+ fun3(V1,V,W19):6
     [V1>=W19+1,W19>=0,V>=1,V1>=3] 
* CE 402: start(V1,V,V19) = 0+ fun3(V1,V,W19):7
     [V1+V>=W19+1,W19>=0,V>=2,V1>=3] 
* CE 403: start(V1,V,V19) = 0+ fun11(W19,X19):1
     [X19=2,W19=0,V1=0] 
* CE 404: start(V1,V,V19) = 0+ fun11(V1,W19):2
     [V1>=0,W19=0] 
* CE 405: start(V1,V,V19) = 0+ fun11(W19,X19):3
     [X19>=3,X19=W19+1,X19=V1+1] 
* CE 406: start(V1,V,V19) = 0+ fun11(W19,X19):4
     [X19>=2,X19+1=W19,X19+1=V1] 

### Cost equations --> "Loop" of start/3 
* CEs [336,337] --> Loop 162 
* CEs [334,335] --> Loop 163 
* CEs [333] --> Loop 164 
* CEs [303,312,318,344,346,354,365,375,389,399] --> Loop 165 
* CEs [279,287,295,319,347,348,361,366] --> Loop 166 
* CEs [360] --> Loop 167 
* CEs [275,310,311,339,342,343,351,352,353,397,398] --> Loop 168 
* CEs [338] --> Loop 169 
* CEs [359] --> Loop 170 
* CEs [317,358,364,382] --> Loop 171 
* CEs [272,273,274,276,277,278,280,281,282,283,284,285,286,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,309,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,340,341,345,349,350,355,356,357,362,363,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,386,387,388,390,391,392,393,394,395,396,400,401,402,403,404,405,406] --> Loop 172 

#### Loops of start/3 
* Loop 162: start(V1,V,V19) [V>=1,V1>=0,V19=2] 
* Loop 163: start(V1,V,V19) [V>=0,V1>=0,V19=0] 
* Loop 164: start(V1,V,V19) [V19>=2,V1>=0,V=2] 
* Loop 165: start(V1,V,V19) [V1>=0,V=0] 
* Loop 166: start(V1,V,V19) [V1>=2,V=2] 
* Loop 167: start(V1,V,V19) [V=1,V1=2] 
* Loop 168: start(V1,V,V19) [V>=0,V1=2] 
* Loop 169: start(V1,V,V19) [V19>=0,V>=0,V1=1] 
* Loop 170: start(V1,V,V19) [V=2,V1=1] 
* Loop 171: start(V1,V,V19) [V1>=1,V=1] 
* Loop 172: start(V1,V,V19) [V1>=0] 

### Ranking functions of CR start(V1,V,V19) 

#### Partial ranking functions of CR start(V1,V,V19) 


### Resulting Chains:start(V1,V,V19) 
* [172]
* [171]
* [170]
* [169]
* [168]
* [167]
* [166]
* [165]
* [164]
* [163]
* [162]


### Merging Chains  start/3 into  External patterns of execution 
* [[170],[172]] --> 1 
* [[169]] --> 2 
* [[167],[168]] --> 3 
* [[165]] --> 4 
* [[171]] --> 5 
* [[164]] --> 6 
* [[166]] --> 7 
* [[163]] --> 8 
* [[162]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [56] 

 * loop 56:fun15(V1,V,Out) -> [fun15(V1',V',Out')] 
0
#### Cost of phase [56]:fun15(V1,V,Out) -> [fun15(V1',V',Out')] 
0
#### Cost of phase [56]:fun15(V1,V,Out) -> [fun15(V1',V',Out')] 
0
#### Cost of chains of fun15(V1,V,Out):
* Chain [[56],58]: 0
  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[56],57]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [58]: 0
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [57]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [61] 

 * loop 61:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of phase [61]:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of phase [61]:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of loops [59] 

 * loop 59:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of phase [59]:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of phase [59]:fun13(V1,V,Out) -> [fun13(V1',V',Out')] 
0
#### Cost of chains of fun13(V1,V,Out):
* Chain [[61],62]: 0
  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[61],60,62]: 0
  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[59],62]: 0
  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[59],60,62]: 0
  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [63]: 0
  with precondition: [V1=0,V=0,Out=1] 

* Chain [62]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [60,62]: 0
  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of fun4(V1,V,Out):
* Chain [72]: 0
  with precondition: [V1=0,V=0,Out=1] 

* Chain [71]: 0
  with precondition: [V1=1,V=1,Out=2] 

* Chain [70]: 0
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [69]: 0
  with precondition: [V=2,Out>=2,V1>=Out] 

* Chain [68]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [67]: 0
  with precondition: [Out=1,V1>=1,V>=1] 

* Chain [66]: 0
  with precondition: [Out=2,V1>=2,V>=2] 

* Chain [65]: 0
  with precondition: [V>=3,Out>=2,V1+4>=2*Out+V] 

* Chain [64]: 0
  with precondition: [V>=3,Out>=3,V1+5>=2*Out+V] 


#### Cost of chains of fun12(V1,V,Out):
* Chain [77]: 0
  with precondition: [V1=1,V=1,Out=1] 

* Chain [76]: 0
  with precondition: [V1=1,V=2,Out=1] 

* Chain [75]: 0
  with precondition: [V1=2,V=1,Out=1] 

* Chain [74]: 0
  with precondition: [V1=2,V=2,Out=2] 

* Chain [73]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [78,79,80,81,82,83] 

 * loop 78:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
 * loop 79:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
0
 * loop 80:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
0
 * loop 81:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
0
 * loop 82:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
0
 * loop 83:fun1(V1,V,Out) -> [fun1(V1',V',Out'),fun1(V1'2,V'2,Out'2)] 
0
#### Cost of phase [78,79,80,81,82,83]:fun1(V1,V,Out) -> [] 
0
#### Cost of chains of fun1(V1,V,Out):
* Chain [89]: 0
  with precondition: [V1=0,V=0,Out=2] 

* Chain [88]: 0
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [87]: 0
  with precondition: [V1=2,V=2,Out=2] 

* Chain [86]: 0
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [85]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [84]: 0
  with precondition: [Out=1,V1>=1,V>=1] 

* Chain [multiple([78,79,80,81,82,83],[[89],[88],[87],[86],[85],[84]])]: 0
  with precondition: [2>=Out,V1>=1,V>=1,Out>=0] 


#### Cost of chains of fun8(V1,V,V19,Out):
* Chain [92]: 1
  with precondition: [V1=1,V+V19+1=Out,V>=0,V19>=0] 

* Chain [91]: 1
  with precondition: [V1=2,V19=Out,V>=0,V19>=0] 

* Chain [90]: 0
  with precondition: [Out=0,V1>=0,V>=0,V19>=0] 


#### Cost of chains of fun10(V1,Out):
* Chain [96]: 0
  with precondition: [V1=0,Out=2] 

* Chain [95]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [94]: 0
  with precondition: [V1+1=Out,V1>=2] 

* Chain [93]: 0
  with precondition: [V1=Out+1,V1>=3] 


#### Cost of chains of fun11(V1,Out):
* Chain [100]: 0
  with precondition: [V1=0,Out=2] 

* Chain [99]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [98]: 0
  with precondition: [V1+1=Out,V1>=2] 

* Chain [97]: 0
  with precondition: [V1=Out+1,V1>=3] 


#### Cost of loops [101,102,103,104] 

 * loop 101:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
 * loop 102:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
 * loop 103:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
 * loop 104:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
#### Cost of phase [101,102,103,104]:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
#### Cost of phase [101,102,103,104]:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
#### Cost of phase [101,102,103,104]:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
#### Cost of phase [101,102,103,104]:fun9(V1,V,Out) -> [fun9(V1',V',Out')] 
0
#### Cost of chains of fun9(V1,V,Out):
* Chain [[101,102,103,104],108]: 0
  with precondition: [V=0,V1>=3,Out>=0,V1>=Out] 

* Chain [[101,102,103,104],107]: 0
  with precondition: [V1>=3,V>=0,Out>=0,V1>=Out+1] 

* Chain [[101,102,103,104],106]: 0
  with precondition: [V1>=3,V>=2,Out>=0,V+V1>=Out+1] 

* Chain [[101,102,103,104],105]: 0
  with precondition: [V1>=3,V>=3,Out>=0,V+V1>=Out+3] 

* Chain [109]: 0
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [108]: 0
  with precondition: [V1=2,V=0,Out=2] 

* Chain [107]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [106]: 0
  with precondition: [V1=2,V+1=Out,V>=2] 

* Chain [105]: 0
  with precondition: [V1=2,V=Out+1,V>=3] 


#### Cost of chains of fun3(V1,V,Out):
* Chain [116]: 0
  with precondition: [V1=0,V=Out,V>=1] 

* Chain [115]: 0
  with precondition: [V1=2,V+1=Out,V>=2] 

* Chain [114]: 0
  with precondition: [V1=2,V=Out+1,V>=3] 

* Chain [113]: 0
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [112]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [111]: 0
  with precondition: [V1>=3,V>=1,Out>=0,V1>=Out+1] 

* Chain [110]: 0
  with precondition: [V1>=3,V>=2,Out>=0,V+V1>=Out+1] 


#### Cost of loops [117,118,119,120,121,122,123] 

 * loop 117:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 118:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 119:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 120:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 121:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 122:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
 * loop 123:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
#### Cost of phase [117,118,119,120,121,122,123]:fun14(V1,V,Out) -> [fun14(V1',V',Out')] 
0
#### Cost of chains of fun14(V1,V,Out):
* Chain [[117,118,119,120,121,122,123],124]: 0
  with precondition: [V1>=1,V>=0,Out>=0] 

* Chain [124]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun2(V1,V,Out):
* Chain [128]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [127]: 0
  with precondition: [V=0,Out=0,V1>=1] 

* Chain [126]: 0
  with precondition: [Out=1,V1>=1,V>=1] 

* Chain [125]: 0
  with precondition: [V1>=2,V>=1,Out>=1] 


#### Cost of chains of mod(V1,V,Out):
* Chain [139]: 4
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [138]: 4
  with precondition: [V1=1,V=1,Out=0] 

* Chain [137]: 4
  with precondition: [V1=Out,V1>=0,V>=0] 

* Chain [136]: 4
  with precondition: [V1=2,V=0,Out>=2] 

* Chain [135]: 4
  with precondition: [V1=2,V>=1,Out>=2] 

* Chain [134]: 4
  with precondition: [V=0,Out=0,V1>=1] 

* Chain [133]: 4
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [132]: 4
  with precondition: [V=0,V1>=3,Out>=0] 

* Chain [131]: 4
  with precondition: [V=2,Out=0,V1>=2] 

* Chain [130]: 4
  with precondition: [V=2,V1=Out,V1>=2] 

* Chain [129]: 4
  with precondition: [V1>=3,V>=1,Out>=0] 


#### Cost of chains of fun7(V1,V,V19,Out):
* Chain [150]: 6
  with precondition: [Out=0,V1>=0,V>=0,V19>=0] 

* Chain [149]: 7
  with precondition: [V1+V19+1=Out,V1>=0,V>=0,V19>=1] 

* Chain [148]: 7
  with precondition: [V1=Out,V1>=0,V>=0,V19>=0] 

* Chain [147]: 7
  with precondition: [V=0,V1+V19+1=Out,V1>=0,V19>=3] 

* Chain [146]: 6
  with precondition: [V=2,Out=0,V1>=0,V19>=2] 

* Chain [145]: 7
  with precondition: [V=2,V1=Out,V1>=0,V19>=2] 

* Chain [144]: 7
  with precondition: [V=2,V1+V19+1=Out,V1>=0,V19>=2] 

* Chain [143]: 6
  with precondition: [V19=0,Out=0,V1>=0,V>=0] 

* Chain [142]: 7
  with precondition: [V19=0,V1=Out,V1>=0,V>=0] 

* Chain [141]: 6
  with precondition: [V19=2,Out=0,V1>=0,V>=1] 

* Chain [140]: 7
  with precondition: [V19=2,V1+3=Out,V1>=0,V>=1] 


#### Cost of loops [153,154,155,156,157] 

 * loop 153:filter(V1,V,Out) -> [filter(V1',V',Out')] 
9
 * loop 154:filter(V1,V,Out) -> [filter(V1',V',Out')] 
9
 * loop 155:filter(V1,V,Out) -> [filter(V1',V',Out')] 
8
 * loop 156:filter(V1,V,Out) -> [filter(V1',V',Out')] 
8
 * loop 157:filter(V1,V,Out) -> [filter(V1',V',Out')] 
9
#### Cost of phase [153,154,155,156,157]:filter(V1,V,Out) -> [filter(V1',V',Out')] 
34*it(153)+9*it(154)+0
  Such that:it(154) =< V/3
it(154) =< V/3-V'/3
aux(20) =< V
aux(21) =< V-V'
it(153) =< aux(20)
it(154) =< aux(20)
it(153) =< aux(21)
it(154) =< aux(21)

#### Cost of phase [153,154,155,156,157]:filter(V1,V,Out) -> [filter(V1',V',Out')] 
34*it(153)+9*it(154)+0
  Such that:it(154) =< V/3
it(154) =< V/3-V'/3
aux(20) =< V
aux(21) =< V-V'
it(153) =< aux(20)
it(154) =< aux(20)
it(153) =< aux(21)
it(154) =< aux(21)

#### Cost of chains of filter(V1,V,Out):
* Chain [[153,154,155,156,157],152]: 34*it(153)+9*it(154)+2
  Such that:it(154) =< V/3
aux(22) =< V
it(153) =< aux(22)
it(154) =< aux(22)

  with precondition: [V1>=0,V>=3,Out>=0,V>=Out,2*V>=Out+4] 

* Chain [[153,154,155,156,157],151]: 34*it(153)+9*it(154)+1
  Such that:it(154) =< V/3
aux(23) =< V
it(153) =< aux(23)
it(154) =< aux(23)

  with precondition: [V1>=0,Out>=0,V>=Out,2*V>=Out+2] 

* Chain [152]: 2
  with precondition: [V=2,Out=2,V1>=0] 

* Chain [151]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [158] 

 * loop 158:fun5(V1,Out) -> [fun5(V1',Out')] 
18*s(12)+68*s(13)+4
  Such that:s(10) =< V1
s(11) =< V1/3
s(12) =< s(11)
s(13) =< s(10)
s(12) =< s(10)

#### Cost of phase [158]:fun5(V1,Out) -> [fun5(V1',Out')] 
4*it(158)+18*s(14)+68*s(15)+0
  Such that:it(158) =< V1-V1'
aux(28) =< V1
it(158) =< aux(28)
aux(27) =< it(158)*aux(28)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

#### Cost of phase [158]:fun5(V1,Out) -> [fun5(V1',Out')] 
4*it(158)+18*s(14)+68*s(15)+0
  Such that:it(158) =< V1-V1'
aux(28) =< V1
it(158) =< aux(28)
aux(27) =< it(158)*aux(28)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

#### Cost of phase [158]:fun5(V1,Out) -> [fun5(V1',Out')] 
4*it(158)+18*s(14)+68*s(15)+0
  Such that:it(158) =< V1-V1'
aux(28) =< V1
it(158) =< aux(28)
aux(27) =< it(158)*aux(28)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

#### Cost of chains of fun5(V1,Out):
* Chain [[158],161]: 4*it(158)+18*s(14)+68*s(15)+1
  Such that:aux(29) =< V1
it(158) =< aux(29)
aux(27) =< it(158)*aux(29)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

  with precondition: [Out>=3,V1>=Out] 

* Chain [[158],160]: 4*it(158)+18*s(14)+68*s(15)+0
  Such that:aux(30) =< V1
it(158) =< aux(30)
aux(27) =< it(158)*aux(30)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

  with precondition: [Out>=1,V1>=Out+1] 

* Chain [[158],159,160]: 4*it(158)+18*s(14)+68*s(15)+3
  Such that:aux(31) =< V1
it(158) =< aux(31)
aux(27) =< it(158)*aux(31)
s(17) =< aux(27)* (1/3)
s(14) =< s(17)
s(15) =< aux(27)
s(14) =< aux(27)

  with precondition: [Out>=2,V1>=Out,2*V1>=Out+3] 

* Chain [161]: 1
  with precondition: [V1=2,Out=2] 

* Chain [160]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [159,160]: 3
  with precondition: [Out>=1,V1>=Out] 


#### Cost of chains of start(V1,V,V19):
* Chain [172]: 500*s(37)+108*s(40)+408*s(41)+126*s(43)+18*s(91)+68*s(92)+10
  Such that:aux(33) =< V1
aux(34) =< V1/3
aux(35) =< V
aux(36) =< V/3
s(43) =< aux(34)
s(91) =< aux(36)
s(37) =< aux(33)
s(38) =< s(37)*aux(33)
s(39) =< s(38)* (1/3)
s(40) =< s(39)
s(41) =< s(38)
s(40) =< s(38)
s(43) =< aux(33)
s(92) =< aux(35)
s(91) =< aux(35)

  with precondition: [V1>=0] 

* Chain [171]: 1
  with precondition: [V=1,V1>=1] 

* Chain [170]: 0
  with precondition: [V1=1,V=2] 

* Chain [169]: 1
  with precondition: [V1=1,V>=0,V19>=0] 

* Chain [168]: 4
  with precondition: [V1=2,V>=0] 

* Chain [167]: 0
  with precondition: [V1=2,V=1] 

* Chain [166]: 18*s(97)+68*s(98)+10
  Such that:aux(37) =< V1
aux(38) =< V1/3
s(97) =< aux(38)
s(98) =< aux(37)
s(97) =< aux(37)

  with precondition: [V=2,V1>=2] 

* Chain [165]: 4
  with precondition: [V=0,V1>=0] 

* Chain [164]: 7
  with precondition: [V=2,V1>=0,V19>=2] 

* Chain [163]: 7
  with precondition: [V19=0,V1>=0,V>=0] 

* Chain [162]: 7
  with precondition: [V19=2,V1>=0,V>=1] 


Closed-form bounds of start(V1,V,V19): 
-------------------------------------
* Chain [172] with precondition: [V1>=0] 
    - Upper bound: 500*V1+10+444*V1*V1+nat(V)*68+42*V1+nat(V/3)*18 
    - Complexity: n^2 
* Chain [171] with precondition: [V=1,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [170] with precondition: [V1=1,V=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [169] with precondition: [V1=1,V>=0,V19>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [168] with precondition: [V1=2,V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [167] with precondition: [V1=2,V=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [166] with precondition: [V=2,V1>=2] 
    - Upper bound: 74*V1+10 
    - Complexity: n 
* Chain [165] with precondition: [V=0,V1>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [164] with precondition: [V=2,V1>=0,V19>=2] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [163] with precondition: [V19=0,V1>=0,V>=0] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [162] with precondition: [V19=2,V1>=0,V>=1] 
    - Upper bound: 7 
    - Complexity: constant 

### Maximum cost of start(V1,V,V19): max([7,444*V1*V1+432*V1+nat(V)*68+36*V1+nat(V/3)*18+ (74*V1+10)]) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 65 ms.
* Invariants computed in 167 ms.
   - Backward Invariants 80 ms.
   - Transitive Invariants 28 ms.
* Refinement performed in 717 ms.
* Termination proved in 34 ms.
* Upper bounds computed in 436 ms.
   - Equation cost structures 248 ms.
   - Phase cost structures 172 ms.
   - Chain cost structures 35 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 1524 ms.

