
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [append/3,fun4/3]
1. recursive  : [appendD/3,fun5/3]
2. non_recursive  : [fun/2]
3. non_recursive  : [fun2/2]
4. recursive  : [fun3/3]
5. non_recursive  : [fun1/3]
6. non_recursive  : [fun12/5]
7. non_recursive  : [fun11/4]
8. recursive [non_tail] : [fun10/3,split/3]
9. non_recursive  : [fun15/5]
10. non_recursive  : [fun14/4]
11. recursive [non_tail] : [fun13/3,splitD/3]
12. recursive [non_tail,multiple] : [fun6/2,fun7/3,quicksort/2]
13. recursive [non_tail,multiple] : [fun8/2,fun9/3,quicksortD/2]
14. non_recursive  : [testList/2]
15. non_recursive  : [testQuicksort/2]
16. non_recursive  : [testQuicksort2/2]
17. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into append/3
1. SCC is partially evaluated into appendD/3
2. SCC is partially evaluated into fun/2
3. SCC is partially evaluated into fun2/2
4. SCC is partially evaluated into fun3/3
5. SCC is partially evaluated into fun1/3
6. SCC is partially evaluated into fun12/5
7. SCC is partially evaluated into fun11/4
8. SCC is partially evaluated into split/3
9. SCC is partially evaluated into fun15/5
10. SCC is partially evaluated into fun14/4
11. SCC is partially evaluated into splitD/3
12. SCC is partially evaluated into quicksort/2
13. SCC is partially evaluated into quicksortD/2
14. SCC is partially evaluated into testList/2
15. SCC is partially evaluated into testQuicksort/2
16. SCC is partially evaluated into testQuicksort2/2
17. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations append/3 
* CE 50 is refined into CE [82] 
* CE 48 is refined into CE [83] 
* CE 49 is refined into CE [84] 


#### Refined cost equations append/3 
* CE 82: append(V,V3,Out) = 2+ append(W3,V3,X3)
     [V+X3>=Out,Out>=X3+1,V3>=0,Out+W3=V+X3] 
* CE 83: append(V,V3,Out) = 1
     [V3>=0,V>=0,Out=0] 
* CE 84: append(A,B,B) = 2
     [B>=0,A=0] 

### Cost equations --> "Loop" of append/3 
* CEs [83] --> Loop 49 
* CEs [84] --> Loop 50 
* CEs [82] --> Loop 51 

#### Loops of append/3 
* Loop 49: append(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 50: append(A,B,B) [B>=0,A=0] 
* Loop 51: append(V,V3,Out)->  append(V',V3,Out')
                  [V+Out'>=Out,Out>=Out'+1,V3>=0,V+Out'=Out+V'] 

### Ranking functions of CR append(V,V3,Out) 
* RF of phase [51]: [V]

#### Partial ranking functions of CR append(V,V3,Out) 
* Partial RF of phase [51]:
  - RF of loop [51:1]:
    V


### Resulting Chains:append(V,V3,Out) 
* [[51],50]
* [[51],49]
* [50]
* [49]


### Merging Chains  append/3 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 
* [[50,[51]]] --> 3 
* [[49,[51]]] --> 4 


### Specialization of cost equations appendD/3 
* CE 40 is refined into CE [85] 
* CE 38 is refined into CE [86] 
* CE 39 is refined into CE [87] 


#### Refined cost equations appendD/3 
* CE 85: appendD(V,V3,Out) = 2+ appendD(W3,V3,X3)
     [V+X3>=Out,Out>=X3+1,V3>=0,Out+W3=V+X3] 
* CE 86: appendD(V,V3,Out) = 1
     [V3>=0,V>=0,Out=0] 
* CE 87: appendD(A,B,B) = 2
     [B>=0,A=0] 

### Cost equations --> "Loop" of appendD/3 
* CEs [86] --> Loop 52 
* CEs [87] --> Loop 53 
* CEs [85] --> Loop 54 

#### Loops of appendD/3 
* Loop 52: appendD(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 53: appendD(A,B,B) [B>=0,A=0] 
* Loop 54: appendD(V,V3,Out)->  appendD(V',V3,Out')
                  [V+Out'>=Out,Out>=Out'+1,V3>=0,V+Out'=Out+V'] 

### Ranking functions of CR appendD(V,V3,Out) 
* RF of phase [54]: [V]

#### Partial ranking functions of CR appendD(V,V3,Out) 
* Partial RF of phase [54]:
  - RF of loop [54:1]:
    V


### Resulting Chains:appendD(V,V3,Out) 
* [[54],53]
* [[54],52]
* [53]
* [52]


### Merging Chains  appendD/3 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 
* [[53,[54]]] --> 3 
* [[52,[54]]] --> 4 


### Specialization of cost equations fun/2 
* CE 56 is refined into CE [88] 
* CE 57 is refined into CE [89] 
* CE 55 is refined into CE [90] 


#### Refined cost equations fun/2 
* CE 88: fun(A,A) = 1
     [A>=1] 
* CE 89: fun(V,Out) = 1
     [V>=1,V+1=Out] 
* CE 90: fun(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of fun/2 
* CEs [88] --> Loop 55 
* CEs [89] --> Loop 56 
* CEs [90] --> Loop 57 

#### Loops of fun/2 
* Loop 55: fun(A,A) [A>=1] 
* Loop 56: fun(V,Out) [V>=1,V+1=Out] 
* Loop 57: fun(V,Out) [Out=0,V=0] 

### Ranking functions of CR fun(V,Out) 

#### Partial ranking functions of CR fun(V,Out) 


### Resulting Chains:fun(V,Out) 
* [57]
* [56]
* [55]


### Merging Chains  fun/2 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 
* [[55]] --> 3 


### Specialization of cost equations fun2/2 
* CE 71 is refined into CE [91] 
* CE 70 is refined into CE [92] 
* CE 69 is refined into CE [93] 
* CE 68 is refined into CE [94] 


#### Refined cost equations fun2/2 
* CE 91: fun2(V,Out) = 0
     [V>=0,Out=0] 
* CE 92: fun2(V,Out) = 0
     [Out=1,V=3] 
* CE 93: fun2(V,Out) = 0
     [Out=2,V=2] 
* CE 94: fun2(V,Out) = 0
     [Out=1,V=1] 

### Cost equations --> "Loop" of fun2/2 
* CEs [91] --> Loop 58 
* CEs [92] --> Loop 59 
* CEs [93] --> Loop 60 
* CEs [94] --> Loop 61 

#### Loops of fun2/2 
* Loop 58: fun2(V,Out) [V>=0,Out=0] 
* Loop 59: fun2(V,Out) [Out=1,V=3] 
* Loop 60: fun2(V,Out) [Out=2,V=2] 
* Loop 61: fun2(V,Out) [Out=1,V=1] 

### Ranking functions of CR fun2(V,Out) 

#### Partial ranking functions of CR fun2(V,Out) 


### Resulting Chains:fun2(V,Out) 
* [61]
* [60]
* [59]
* [58]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 
* [[59]] --> 3 
* [[58]] --> 4 


### Specialization of cost equations fun3/3 
* CE 77 is refined into CE [95] 
* CE 79 is refined into CE [96] 
* CE 81 is refined into CE [97] 
* CE 75 is refined into CE [98] 
* CE 78 is refined into CE [99] 
* CE 74 is refined into CE [100] 
* CE 73 is refined into CE [101] 
* CE 72 is refined into CE [102] 
* CE 76 is refined into CE [103] 
* CE 80 is refined into CE [104] 


#### Refined cost equations fun3/3 
* CE 95: fun3(V,V3,Out) = 0
     [V3>=1,V>=1,Out=3] 
* CE 96: fun3(V,V3,Out) = 0
     [V3>=1,V>=1,Out=2] 
* CE 97: fun3(V,V3,Out) = 0
     [V3>=0,V>=0,Out=0] 
* CE 98: fun3(V,V3,Out) = 0
     [V>=1,Out=3,V3=0] 
* CE 99: fun3(V,V3,Out) = 0
     [V>=1,Out=2,V3=0] 
* CE 100: fun3(V,V3,Out) = 0
     [V3>=1,Out=3,V=0] 
* CE 101: fun3(V,V3,Out) = 0
     [V3>=1,Out=2,V=0] 
* CE 102: fun3(V,V3,Out) = 0
     [Out=1,V3=0,V=0] 
* CE 103: fun3(V,V3,Out) = 0+ fun3(W3,X3,Out)
     [X3>=0,W3>=0,W3+1=V3,X3+1=V] 
* CE 104: fun3(V,V3,Out) = 0+ fun3(W3,X3,Out)
     [X3>=0,W3>=0,X3+1=V3,W3+1=V] 

### Cost equations --> "Loop" of fun3/3 
* CEs [103] --> Loop 62 
* CEs [104] --> Loop 63 
* CEs [95] --> Loop 64 
* CEs [96] --> Loop 65 
* CEs [97] --> Loop 66 
* CEs [98] --> Loop 67 
* CEs [99] --> Loop 68 
* CEs [100] --> Loop 69 
* CEs [101] --> Loop 70 
* CEs [102] --> Loop 71 

#### Loops of fun3/3 
* Loop 62: fun3(V,V3,Out)->  fun3(V',V3',Out)
                  [V3>=1,V>=1,V=V3'+1,V3=V'+1] 
* Loop 63: fun3(V,V3,Out)->  fun3(V',V3',Out)
                  [V3>=1,V>=1,V3=V3'+1,V=V'+1] 
* Loop 64: fun3(V,V3,Out) [V3>=1,V>=1,Out=3] 
* Loop 65: fun3(V,V3,Out) [V3>=1,V>=1,Out=2] 
* Loop 66: fun3(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 67: fun3(V,V3,Out) [V>=1,Out=3,V3=0] 
* Loop 68: fun3(V,V3,Out) [V>=1,Out=2,V3=0] 
* Loop 69: fun3(V,V3,Out) [V3>=1,Out=3,V=0] 
* Loop 70: fun3(V,V3,Out) [V3>=1,Out=2,V=0] 
* Loop 71: fun3(V,V3,Out) [Out=1,V3=0,V=0] 

### Ranking functions of CR fun3(V,V3,Out) 
* RF of phase [62,63]: [V/2+V3/2-1/2]

#### Partial ranking functions of CR fun3(V,V3,Out) 
* Partial RF of phase [62,63]:
  - RF of loop [62:1]:
    V/2+V3/2-1/2
  - RF of loop [63:1]:
    V depends on loops [62:1] 
    V3 depends on loops [62:1] 


### Resulting Chains:fun3(V,V3,Out) 
* [[62,63],71]
* [[62,63],70]
* [[62,63],69]
* [[62,63],68]
* [[62,63],67]
* [[62,63],66]
* [[62,63],65]
* [[62,63],64]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 
* [[69]] --> 3 
* [[68]] --> 4 
* [[67]] --> 5 
* [[66],[66,[62,63]]] --> 6 
* [[71,[62,63]]] --> 7 
* [[65],[65,[62,63]],[68,[62,63]],[70,[62,63]]] --> 8 
* [[64],[64,[62,63]],[67,[62,63]],[69,[62,63]]] --> 9 


### Specialization of cost equations fun1/3 
* CE 58 is refined into CE [105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121] 


#### Refined cost equations fun1/3 
* CE 105: fun1(V,V3,Out) = 1+ fun3(W3,X3,Y3):1+ fun2(Z3,A4):1
     [A4=1,Z3=1,Y3=1,X3=0,W3=0,Out=1,V3=0,V=0] 
* CE 106: fun1(V,V3,Out) = 1+ fun3(W3,X3,Y3):1+ fun2(Z3,A4):4
     [A4=0,Z3=1,Y3=1,X3=0,W3=0,Out=0,V3=0,V=0] 
* CE 107: fun1(V,V3,Out) = 1+ fun3(W3,V3,X3):2+ fun2(Y3,Z3):2
     [V3>=1,Z3=2,Y3=2,X3=2,W3=0,Out=2,V=0] 
* CE 108: fun1(V,V3,Out) = 1+ fun3(W3,V3,X3):2+ fun2(Y3,Z3):4
     [V3>=1,Z3=0,Y3=2,X3=2,W3=0,Out=0,V=0] 
* CE 109: fun1(V,V3,Out) = 1+ fun3(W3,V3,X3):3+ fun2(Y3,Z3):3
     [V3>=1,Z3=1,Y3=3,X3=3,W3=0,Out=1,V=0] 
* CE 110: fun1(V,V3,Out) = 1+ fun3(W3,V3,X3):3+ fun2(Y3,Z3):4
     [V3>=1,Z3=0,Y3=3,X3=3,W3=0,Out=0,V=0] 
* CE 111: fun1(V,V3,Out) = 1+ fun3(V,W3,X3):4+ fun2(Y3,Z3):2
     [V>=1,Z3=2,Y3=2,X3=2,W3=0,Out=2,V3=0] 
* CE 112: fun1(V,V3,Out) = 1+ fun3(V,W3,X3):4+ fun2(Y3,Z3):4
     [V>=1,Z3=0,Y3=2,X3=2,W3=0,Out=0,V3=0] 
* CE 113: fun1(V,V3,Out) = 1+ fun3(V,W3,X3):5+ fun2(Y3,Z3):3
     [V>=1,Z3=1,Y3=3,X3=3,W3=0,Out=1,V3=0] 
* CE 114: fun1(V,V3,Out) = 1+ fun3(V,W3,X3):5+ fun2(Y3,Z3):4
     [V>=1,Z3=0,Y3=3,X3=3,W3=0,Out=0,V3=0] 
* CE 115: fun1(V,V3,Out) = 1+ fun3(V,V3,W3):6+ fun2(X3,Y3):4
     [V3>=0,V>=0,Y3=0,X3=0,W3=0,Out=0] 
* CE 116: fun1(A,A,B) = 1+ fun3(A,A,C):7+ fun2(D,E):1
     [A>=1,E=1,D=1,C=1,B=1] 
* CE 117: fun1(A,A,B) = 1+ fun3(A,A,C):7+ fun2(D,E):4
     [A>=1,E=0,D=1,C=1,B=0] 
* CE 118: fun1(V,V3,Out) = 1+ fun3(V,V3,W3):8+ fun2(X3,Y3):2
     [V3>=1,V>=1,Y3=2,X3=2,W3=2,Out=2] 
* CE 119: fun1(V,V3,Out) = 1+ fun3(V,V3,W3):8+ fun2(X3,Y3):4
     [V3>=1,V>=1,Y3=0,X3=2,W3=2,Out=0] 
* CE 120: fun1(V,V3,Out) = 1+ fun3(V,V3,W3):9+ fun2(X3,Y3):3
     [V3>=1,V>=1,Y3=1,X3=3,W3=3,Out=1] 
* CE 121: fun1(V,V3,Out) = 1+ fun3(V,V3,W3):9+ fun2(X3,Y3):4
     [V3>=1,V>=1,Y3=0,X3=3,W3=3,Out=0] 

### Cost equations --> "Loop" of fun1/3 
* CEs [118] --> Loop 72 
* CEs [116,120] --> Loop 73 
* CEs [117] --> Loop 74 
* CEs [111] --> Loop 75 
* CEs [113] --> Loop 76 
* CEs [112,114] --> Loop 77 
* CEs [107] --> Loop 78 
* CEs [109] --> Loop 79 
* CEs [108,110] --> Loop 80 
* CEs [105] --> Loop 81 
* CEs [106,115,119,121] --> Loop 82 

#### Loops of fun1/3 
* Loop 72: fun1(V,V3,Out) [V3>=1,V>=1,Out=2] 
* Loop 73: fun1(V,V3,Out) [V3>=1,V>=1,Out=1] 
* Loop 74: fun1(A,A,B) [A>=1,B=0] 
* Loop 75: fun1(V,V3,Out) [V>=1,Out=2,V3=0] 
* Loop 76: fun1(V,V3,Out) [V>=1,Out=1,V3=0] 
* Loop 77: fun1(V,V3,Out) [V>=1,Out=0,V3=0] 
* Loop 78: fun1(V,V3,Out) [V3>=1,Out=2,V=0] 
* Loop 79: fun1(V,V3,Out) [V3>=1,Out=1,V=0] 
* Loop 80: fun1(V,V3,Out) [V3>=1,Out=0,V=0] 
* Loop 81: fun1(V,V3,Out) [Out=1,V3=0,V=0] 
* Loop 82: fun1(V,V3,Out) [V3>=0,V>=0,Out=0] 

### Ranking functions of CR fun1(V,V3,Out) 

#### Partial ranking functions of CR fun1(V,V3,Out) 


### Resulting Chains:fun1(V,V3,Out) 
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[81]] --> 1 
* [[80],[82]] --> 2 
* [[79]] --> 3 
* [[78]] --> 4 
* [[77]] --> 5 
* [[76]] --> 6 
* [[75]] --> 7 
* [[74]] --> 8 
* [[73]] --> 9 
* [[72]] --> 10 


### Specialization of cost equations fun12/5 
* CE 61 is refined into CE [122] 
* CE 60 is refined into CE [123] 
* CE 59 is refined into CE [124] 


#### Refined cost equations fun12/5 
* CE 122: fun12(V,V3,V37,V44,Out) = 0
     [V44>=0,V37>=0,V3>=0,V>=0,Out=0] 
* CE 123: fun12(V,V3,V37,V44,Out) = 1
     [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=2] 
* CE 124: fun12(V,V3,V37,V44,Out) = 1
     [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=1] 

### Cost equations --> "Loop" of fun12/5 
* CEs [122] --> Loop 83 
* CEs [123] --> Loop 84 
* CEs [124] --> Loop 85 

#### Loops of fun12/5 
* Loop 83: fun12(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V>=0,Out=0] 
* Loop 84: fun12(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=2] 
* Loop 85: fun12(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=1] 

### Ranking functions of CR fun12(V,V3,V37,V44,Out) 

#### Partial ranking functions of CR fun12(V,V3,V37,V44,Out) 


### Resulting Chains:fun12(V,V3,V37,V44,Out) 
* [85]
* [84]
* [83]


### Merging Chains  fun12/5 into  External patterns of execution 
* [[85]] --> 1 
* [[84]] --> 2 
* [[83]] --> 3 


### Specialization of cost equations fun11/4 
* CE 53 is refined into CE [125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141] 
* CE 54 is refined into CE [142] 


#### Refined cost equations fun11/4 
* CE 125: fun11(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):1+ fun12(Z37,A38,B38,C38,Out):1
     [Out>=A38+2,A38>=0,Out=A38+B38+2,Out=V+1,C38=0,Z37=1,Y37=1,X37=0,W37=0,V37=0,V3=0] 
* CE 126: fun11(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):1+ fun12(Z37,A38,B38,C38,D38):3
     [B38>=0,A38>=0,A38+B38+1=V,D38=0,C38=0,Z37=1,Y37=1,X37=0,W37=0,Out=0,V37=0,V3=0] 
* CE 127: fun11(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):2+ fun12(X37,Y37,Z37,V37,A38):3
     [V37>=0,Z37>=0,Y37>=0,V3>=0,Y37+Z37+1=V,A38=0,X37=0,W37=0,Out=0] 
* CE 128: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):3+ fun12(Y37,Z37,A38,B38,Out):1
     [Out>=Z37+2,Z37>=0,V3>=1,Out=Z37+A38+2,Out=V+1,B38=0,Y37=1,X37=1,W37=0,V37=0] 
* CE 129: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):3+ fun12(Y37,Z37,A38,B38,C38):3
     [A38>=0,Z37>=0,V3>=1,Z37+A38+1=V,C38=0,B38=0,Y37=1,X37=1,W37=0,Out=0,V37=0] 
* CE 130: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):4+ fun12(Y37,Z37,A38,B38,Out):2
     [Out>=Z37+2,Z37>=0,V3>=1,Out=Z37+A38+2,Out=V+1,B38=0,Y37=2,X37=2,W37=0,V37=0] 
* CE 131: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):4+ fun12(Y37,Z37,A38,B38,C38):3
     [A38>=0,Z37>=0,V3>=1,Z37+A38+1=V,C38=0,B38=0,Y37=2,X37=2,W37=0,Out=0,V37=0] 
* CE 132: fun11(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):5+ fun12(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=0,X37=0,W37=0,Out=0,V3=0] 
* CE 133: fun11(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):6+ fun12(Z37,A38,B38,C38,Out):1
     [Out>=A38+B38+3,B38>=0,A38>=0,Out=A38+B38+C38+2,Out=W37+A38+B38+2,Out=V37+A38+B38+2,A38+B38+1=V,Z37=1,Y37=1,X37=0,V3=0] 
* CE 134: fun11(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):6+ fun12(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=1,X37=1,W37=0,Out=0,V3=0] 
* CE 135: fun11(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):7+ fun12(Z37,A38,B38,C38,Out):2
     [Out>=A38+B38+3,B38>=0,A38>=0,Out=A38+B38+C38+2,Out=W37+A38+B38+2,Out=V37+A38+B38+2,A38+B38+1=V,Z37=2,Y37=2,X37=0,V3=0] 
* CE 136: fun11(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):7+ fun12(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=2,X37=2,W37=0,Out=0,V3=0] 
* CE 137: fun11(A,B,B,C) = 1+ fun1(B,B,D):8+ fun12(E,F,G,B,H):3
     [B>=1,G>=0,F>=0,F+G+1=A,H=0,E=0,D=0,C=0] 
* CE 138: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):9+ fun12(Y37,Z37,A38,B38,Out):1
     [Out>=Z37+A38+3,A38>=0,Z37>=0,V3>=1,Out=Z37+A38+B38+2,Out=W37+Z37+A38+2,Out=V37+Z37+A38+2,Z37+A38+1=V,Y37=1,X37=1] 
* CE 139: fun11(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):9+ fun12(X37,Y37,Z37,V37,A38):3
     [V37>=1,Z37>=0,Y37>=0,V3>=1,Y37+Z37+1=V,A38=0,X37=1,W37=1,Out=0] 
* CE 140: fun11(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):10+ fun12(Y37,Z37,A38,B38,Out):2
     [Out>=Z37+A38+3,A38>=0,Z37>=0,V3>=1,Out=Z37+A38+B38+2,Out=W37+Z37+A38+2,Out=V37+Z37+A38+2,Z37+A38+1=V,Y37=2,X37=2] 
* CE 141: fun11(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):10+ fun12(X37,Y37,Z37,V37,A38):3
     [V37>=1,Z37>=0,Y37>=0,V3>=1,Y37+Z37+1=V,A38=0,X37=2,W37=2,Out=0] 
* CE 142: fun11(V,V3,V37,Out) = 0
     [V37>=0,V3>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of fun11/4 
* CEs [138,140] --> Loop 86 
* CEs [137] --> Loop 87 
* CEs [128,130] --> Loop 88 
* CEs [129,131] --> Loop 89 
* CEs [133,135] --> Loop 90 
* CEs [132,134,136] --> Loop 91 
* CEs [125] --> Loop 92 
* CEs [126,127,139,141,142] --> Loop 93 

#### Loops of fun11/4 
* Loop 86: fun11(V,V3,V37,Out) [V37>=1,V3>=1,V>=1,V+V37+1=Out] 
* Loop 87: fun11(A,B,B,C) [B>=1,A>=1,C=0] 
* Loop 88: fun11(V,V3,V37,Out) [V3>=1,V>=1,V+1=Out,V37=0] 
* Loop 89: fun11(V,V3,V37,Out) [V3>=1,V>=1,Out=0,V37=0] 
* Loop 90: fun11(V,V3,V37,Out) [V37>=1,V>=1,V+V37+1=Out,V3=0] 
* Loop 91: fun11(V,V3,V37,Out) [V37>=1,V>=1,Out=0,V3=0] 
* Loop 92: fun11(V,V3,V37,Out) [V>=1,V+1=Out,V37=0,V3=0] 
* Loop 93: fun11(V,V3,V37,Out) [V37>=0,V3>=0,V>=0,Out=0] 

### Ranking functions of CR fun11(V,V3,V37,Out) 

#### Partial ranking functions of CR fun11(V,V3,V37,Out) 


### Resulting Chains:fun11(V,V3,V37,Out) 
* [93]
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]
* [86]


### Merging Chains  fun11/4 into  External patterns of execution 
* [[92]] --> 1 
* [[91],[93]] --> 2 
* [[90]] --> 3 
* [[89]] --> 4 
* [[88]] --> 5 
* [[87]] --> 6 
* [[86]] --> 7 


### Specialization of cost equations split/3 
* CE 43 is refined into CE [143,144,145,146,147,148,149] 
* CE 41 is refined into CE [150] 
* CE 42 is refined into CE [151] 


#### Refined cost equations split/3 
* CE 143: split(V,V3,Out) = 2+ split(W3,X3,Y3)+ fun11(Z3,A4,B4,Out):1
     [X3>=0,Out>=2,Out=Y3+1,Out=Z3+1,X3+1=V3,W3=0,B4=0,A4=0,V=0] 
* CE 144: split(V,V3,Out) = 2+ split(V,W3,X3)+ fun11(X3,V,Y3,Z3):2
     [W3>=0,Y3>=0,V>=0,X3>=0,Y3+W3+1=V3,Z3=0,Out=0] 
* CE 145: split(V,V3,Out) = 2+ split(W3,X3,Y3)+ fun11(Y3,Z3,A4,Out):3
     [Out>=Y3+2,X3>=0,Y3>=1,Out+X3=V3+Y3,Out=Y3+A4+1,W3=0,Z3=0,V=0] 
* CE 146: split(V,V3,Out) = 2+ split(V,W3,X3)+ fun11(X3,V,Y3,Z3):4
     [W3>=0,V>=1,X3>=1,W3+1=V3,Z3=0,Y3=0,Out=0] 
* CE 147: split(V,V3,Out) = 2+ split(V,W3,X3)+ fun11(Y3,V,Z3,Out):5
     [W3>=0,Out>=2,V>=1,Out=X3+1,Out=Y3+1,W3+1=V3,Z3=0] 
* CE 148: split(V,V3,Out) = 2+ split(V,W3,X3)+ fun11(X3,V,V,Y3):6
     [W3>=0,V>=1,X3>=1,V+W3+1=V3,Y3=0,Out=0] 
* CE 149: split(V,V3,Out) = 2+ split(V,W3,X3)+ fun11(X3,V,Y3,Out):7
     [Out>=X3+2,W3>=0,V>=1,X3>=1,Out+W3=V3+X3,Out=X3+Y3+1] 
* CE 150: split(V,V3,Out) = 1
     [V3>=0,V>=0,Out=0] 
* CE 151: split(V,V3,Out) = 2
     [V>=0,Out=1,V3=0] 

### Cost equations --> "Loop" of split/3 
* CEs [150] --> Loop 94 
* CEs [151] --> Loop 95 
* CEs [149] --> Loop 96 
* CEs [147] --> Loop 97 
* CEs [148] --> Loop 98 
* CEs [144,146] --> Loop 99 
* CEs [145] --> Loop 100 
* CEs [143] --> Loop 101 

#### Loops of split/3 
* Loop 94: split(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 95: split(V,V3,Out) [V>=0,Out=1,V3=0] 
* Loop 96: split(V,V3,Out)->  split(V,V3',Out')
                  [Out+V3'>=V3+1,V3>=V3'+2,V3'>=0,V>=1,V3+Out'=Out+V3'] 
* Loop 97: split(V,V3,Out)->  split(V,V3',Out')
                  [Out>=2,V3>=1,V>=1,Out=Out'+1,V3=V3'+1] 
* Loop 98: split(V,V3,Out)->  split(V,V3',Out')
                  [V3>=V+1,Out'>=1,V>=1,V+V3'+1=V3,Out=0] 
* Loop 99: split(V,V3,Out)->  split(V,V3',Out')
                  [V3>=V3'+1,Out'>=0,V3'>=0,V>=0,Out=0] 
* Loop 100: split(V,V3,Out)->  split(V',V3',Out')
                  [Out+V3'>=V3+1,V3>=V3'+2,V3'>=0,V3+Out'=Out+V3',V'=0,V=0] 
* Loop 101: split(V,V3,Out)->  split(V',V3',Out')
                  [Out>=2,V3>=1,Out=Out'+1,V3=V3'+1,V'=0,V=0] 

### Ranking functions of CR split(V,V3,Out) 
* RF of phase [96,97]: [V3]
* RF of phase [99]: [V3]
* RF of phase [100,101]: [V3]

#### Partial ranking functions of CR split(V,V3,Out) 
* Partial RF of phase [96,97]:
  - RF of loop [96:1]:
    V3/2-1/2
  - RF of loop [97:1]:
    V3
* Partial RF of phase [99]:
  - RF of loop [99:1]:
    V3
* Partial RF of phase [100,101]:
  - RF of loop [100:1]:
    V3-1
  - RF of loop [101:1]:
    V3


### Resulting Chains:split(V,V3,Out) 
* [[100,101],95]
* [[99],[100,101],95]
* [[99],[96,97],95]
* [[99],98,[96,97],95]
* [[99],98,95]
* [[99],95]
* [[99],94]
* [[96,97],95]
* [98,[96,97],95]
* [98,95]
* [95]
* [94]


### Merging Chains  split/3 into  External patterns of execution 
* [[94],[95,[96,97],98],[94,[99]],[95,[99]],[95,98,[99]],[95,[96,97],98,[99]],[95,[96,97],[99]],[95,[100,101],[99]]] --> 1 
* [[95,[100,101]]] --> 2 
* [[95]] --> 3 
* [[95,98]] --> 4 
* [[95,[96,97]]] --> 5 


### Specialization of cost equations fun15/5 
* CE 64 is refined into CE [152] 
* CE 63 is refined into CE [153] 
* CE 62 is refined into CE [154] 


#### Refined cost equations fun15/5 
* CE 152: fun15(V,V3,V37,V44,Out) = 0
     [V44>=0,V37>=0,V3>=0,V>=0,Out=0] 
* CE 153: fun15(V,V3,V37,V44,Out) = 1
     [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=2] 
* CE 154: fun15(V,V3,V37,V44,Out) = 1
     [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=1] 

### Cost equations --> "Loop" of fun15/5 
* CEs [152] --> Loop 102 
* CEs [153] --> Loop 103 
* CEs [154] --> Loop 104 

#### Loops of fun15/5 
* Loop 102: fun15(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V>=0,Out=0] 
* Loop 103: fun15(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=2] 
* Loop 104: fun15(V,V3,V37,V44,Out) [V44>=0,V37>=0,V3>=0,V3+V37+V44+2=Out,V=1] 

### Ranking functions of CR fun15(V,V3,V37,V44,Out) 

#### Partial ranking functions of CR fun15(V,V3,V37,V44,Out) 


### Resulting Chains:fun15(V,V3,V37,V44,Out) 
* [104]
* [103]
* [102]


### Merging Chains  fun15/5 into  External patterns of execution 
* [[104]] --> 1 
* [[103]] --> 2 
* [[102]] --> 3 


### Specialization of cost equations fun14/4 
* CE 51 is refined into CE [155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171] 
* CE 52 is refined into CE [172] 


#### Refined cost equations fun14/4 
* CE 155: fun14(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):1+ fun15(Z37,A38,B38,C38,Out):1
     [Out>=A38+2,A38>=0,Out=A38+B38+2,Out=V+1,C38=0,Z37=1,Y37=1,X37=0,W37=0,V37=0,V3=0] 
* CE 156: fun14(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):1+ fun15(Z37,A38,B38,C38,D38):3
     [B38>=0,A38>=0,A38+B38+1=V,D38=0,C38=0,Z37=1,Y37=1,X37=0,W37=0,Out=0,V37=0,V3=0] 
* CE 157: fun14(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):2+ fun15(X37,Y37,Z37,V37,A38):3
     [V37>=0,Z37>=0,Y37>=0,V3>=0,Y37+Z37+1=V,A38=0,X37=0,W37=0,Out=0] 
* CE 158: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):3+ fun15(Y37,Z37,A38,B38,Out):1
     [Out>=Z37+2,Z37>=0,V3>=1,Out=Z37+A38+2,Out=V+1,B38=0,Y37=1,X37=1,W37=0,V37=0] 
* CE 159: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):3+ fun15(Y37,Z37,A38,B38,C38):3
     [A38>=0,Z37>=0,V3>=1,Z37+A38+1=V,C38=0,B38=0,Y37=1,X37=1,W37=0,Out=0,V37=0] 
* CE 160: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):4+ fun15(Y37,Z37,A38,B38,Out):2
     [Out>=Z37+2,Z37>=0,V3>=1,Out=Z37+A38+2,Out=V+1,B38=0,Y37=2,X37=2,W37=0,V37=0] 
* CE 161: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):4+ fun15(Y37,Z37,A38,B38,C38):3
     [A38>=0,Z37>=0,V3>=1,Z37+A38+1=V,C38=0,B38=0,Y37=2,X37=2,W37=0,Out=0,V37=0] 
* CE 162: fun14(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):5+ fun15(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=0,X37=0,W37=0,Out=0,V3=0] 
* CE 163: fun14(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):6+ fun15(Z37,A38,B38,C38,Out):1
     [Out>=A38+B38+3,B38>=0,A38>=0,Out=A38+B38+C38+2,Out=W37+A38+B38+2,Out=V37+A38+B38+2,A38+B38+1=V,Z37=1,Y37=1,X37=0,V3=0] 
* CE 164: fun14(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):6+ fun15(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=1,X37=1,W37=0,Out=0,V3=0] 
* CE 165: fun14(V,V3,V37,Out) = 1+ fun1(W37,X37,Y37):7+ fun15(Z37,A38,B38,C38,Out):2
     [Out>=A38+B38+3,B38>=0,A38>=0,Out=A38+B38+C38+2,Out=W37+A38+B38+2,Out=V37+A38+B38+2,A38+B38+1=V,Z37=2,Y37=2,X37=0,V3=0] 
* CE 166: fun14(V,V3,V37,Out) = 1+ fun1(V37,W37,X37):7+ fun15(Y37,Z37,A38,V37,B38):3
     [V37>=1,A38>=0,Z37>=0,Z37+A38+1=V,B38=0,Y37=2,X37=2,W37=0,Out=0,V3=0] 
* CE 167: fun14(A,B,B,C) = 1+ fun1(B,B,D):8+ fun15(E,F,G,B,H):3
     [B>=1,G>=0,F>=0,F+G+1=A,H=0,E=0,D=0,C=0] 
* CE 168: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):9+ fun15(Y37,Z37,A38,B38,Out):1
     [Out>=Z37+A38+3,A38>=0,Z37>=0,V3>=1,Out=Z37+A38+B38+2,Out=W37+Z37+A38+2,Out=V37+Z37+A38+2,Z37+A38+1=V,Y37=1,X37=1] 
* CE 169: fun14(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):9+ fun15(X37,Y37,Z37,V37,A38):3
     [V37>=1,Z37>=0,Y37>=0,V3>=1,Y37+Z37+1=V,A38=0,X37=1,W37=1,Out=0] 
* CE 170: fun14(V,V3,V37,Out) = 1+ fun1(W37,V3,X37):10+ fun15(Y37,Z37,A38,B38,Out):2
     [Out>=Z37+A38+3,A38>=0,Z37>=0,V3>=1,Out=Z37+A38+B38+2,Out=W37+Z37+A38+2,Out=V37+Z37+A38+2,Z37+A38+1=V,Y37=2,X37=2] 
* CE 171: fun14(V,V3,V37,Out) = 1+ fun1(V37,V3,W37):10+ fun15(X37,Y37,Z37,V37,A38):3
     [V37>=1,Z37>=0,Y37>=0,V3>=1,Y37+Z37+1=V,A38=0,X37=2,W37=2,Out=0] 
* CE 172: fun14(V,V3,V37,Out) = 0
     [V37>=0,V3>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of fun14/4 
* CEs [168,170] --> Loop 105 
* CEs [167] --> Loop 106 
* CEs [158,160] --> Loop 107 
* CEs [159,161] --> Loop 108 
* CEs [163,165] --> Loop 109 
* CEs [162,164,166] --> Loop 110 
* CEs [155] --> Loop 111 
* CEs [156,157,169,171,172] --> Loop 112 

#### Loops of fun14/4 
* Loop 105: fun14(V,V3,V37,Out) [V37>=1,V3>=1,V>=1,V+V37+1=Out] 
* Loop 106: fun14(A,B,B,C) [B>=1,A>=1,C=0] 
* Loop 107: fun14(V,V3,V37,Out) [V3>=1,V>=1,V+1=Out,V37=0] 
* Loop 108: fun14(V,V3,V37,Out) [V3>=1,V>=1,Out=0,V37=0] 
* Loop 109: fun14(V,V3,V37,Out) [V37>=1,V>=1,V+V37+1=Out,V3=0] 
* Loop 110: fun14(V,V3,V37,Out) [V37>=1,V>=1,Out=0,V3=0] 
* Loop 111: fun14(V,V3,V37,Out) [V>=1,V+1=Out,V37=0,V3=0] 
* Loop 112: fun14(V,V3,V37,Out) [V37>=0,V3>=0,V>=0,Out=0] 

### Ranking functions of CR fun14(V,V3,V37,Out) 

#### Partial ranking functions of CR fun14(V,V3,V37,Out) 


### Resulting Chains:fun14(V,V3,V37,Out) 
* [112]
* [111]
* [110]
* [109]
* [108]
* [107]
* [106]
* [105]


### Merging Chains  fun14/4 into  External patterns of execution 
* [[111]] --> 1 
* [[110],[112]] --> 2 
* [[109]] --> 3 
* [[108]] --> 4 
* [[107]] --> 5 
* [[106]] --> 6 
* [[105]] --> 7 


### Specialization of cost equations splitD/3 
* CE 33 is refined into CE [173,174,175,176,177,178,179] 
* CE 31 is refined into CE [180] 
* CE 32 is refined into CE [181] 


#### Refined cost equations splitD/3 
* CE 173: splitD(V,V3,Out) = 2+ splitD(W3,X3,Y3)+ fun14(Z3,A4,B4,Out):1
     [X3>=0,Out>=2,Out=Y3+1,Out=Z3+1,X3+1=V3,W3=0,B4=0,A4=0,V=0] 
* CE 174: splitD(V,V3,Out) = 2+ splitD(V,W3,X3)+ fun14(X3,V,Y3,Z3):2
     [W3>=0,Y3>=0,V>=0,X3>=0,Y3+W3+1=V3,Z3=0,Out=0] 
* CE 175: splitD(V,V3,Out) = 2+ splitD(W3,X3,Y3)+ fun14(Y3,Z3,A4,Out):3
     [Out>=Y3+2,X3>=0,Y3>=1,Out+X3=V3+Y3,Out=Y3+A4+1,W3=0,Z3=0,V=0] 
* CE 176: splitD(V,V3,Out) = 2+ splitD(V,W3,X3)+ fun14(X3,V,Y3,Z3):4
     [W3>=0,V>=1,X3>=1,W3+1=V3,Z3=0,Y3=0,Out=0] 
* CE 177: splitD(V,V3,Out) = 2+ splitD(V,W3,X3)+ fun14(Y3,V,Z3,Out):5
     [W3>=0,Out>=2,V>=1,Out=X3+1,Out=Y3+1,W3+1=V3,Z3=0] 
* CE 178: splitD(V,V3,Out) = 2+ splitD(V,W3,X3)+ fun14(X3,V,V,Y3):6
     [W3>=0,V>=1,X3>=1,V+W3+1=V3,Y3=0,Out=0] 
* CE 179: splitD(V,V3,Out) = 2+ splitD(V,W3,X3)+ fun14(X3,V,Y3,Out):7
     [Out>=X3+2,W3>=0,V>=1,X3>=1,Out+W3=V3+X3,Out=X3+Y3+1] 
* CE 180: splitD(V,V3,Out) = 1
     [V3>=0,V>=0,Out=0] 
* CE 181: splitD(V,V3,Out) = 2
     [V>=0,Out=1,V3=0] 

### Cost equations --> "Loop" of splitD/3 
* CEs [180] --> Loop 113 
* CEs [181] --> Loop 114 
* CEs [179] --> Loop 115 
* CEs [177] --> Loop 116 
* CEs [178] --> Loop 117 
* CEs [174,176] --> Loop 118 
* CEs [175] --> Loop 119 
* CEs [173] --> Loop 120 

#### Loops of splitD/3 
* Loop 113: splitD(V,V3,Out) [V3>=0,V>=0,Out=0] 
* Loop 114: splitD(V,V3,Out) [V>=0,Out=1,V3=0] 
* Loop 115: splitD(V,V3,Out)->  splitD(V,V3',Out')
                  [Out+V3'>=V3+1,V3>=V3'+2,V3'>=0,V>=1,V3+Out'=Out+V3'] 
* Loop 116: splitD(V,V3,Out)->  splitD(V,V3',Out')
                  [Out>=2,V3>=1,V>=1,Out=Out'+1,V3=V3'+1] 
* Loop 117: splitD(V,V3,Out)->  splitD(V,V3',Out')
                  [V3>=V+1,Out'>=1,V>=1,V+V3'+1=V3,Out=0] 
* Loop 118: splitD(V,V3,Out)->  splitD(V,V3',Out')
                  [V3>=V3'+1,Out'>=0,V3'>=0,V>=0,Out=0] 
* Loop 119: splitD(V,V3,Out)->  splitD(V',V3',Out')
                  [Out+V3'>=V3+1,V3>=V3'+2,V3'>=0,V3+Out'=Out+V3',V'=0,V=0] 
* Loop 120: splitD(V,V3,Out)->  splitD(V',V3',Out')
                  [Out>=2,V3>=1,Out=Out'+1,V3=V3'+1,V'=0,V=0] 

### Ranking functions of CR splitD(V,V3,Out) 
* RF of phase [115,116]: [V3]
* RF of phase [118]: [V3]
* RF of phase [119,120]: [V3]

#### Partial ranking functions of CR splitD(V,V3,Out) 
* Partial RF of phase [115,116]:
  - RF of loop [115:1]:
    V3/2-1/2
  - RF of loop [116:1]:
    V3
* Partial RF of phase [118]:
  - RF of loop [118:1]:
    V3
* Partial RF of phase [119,120]:
  - RF of loop [119:1]:
    V3-1
  - RF of loop [120:1]:
    V3


### Resulting Chains:splitD(V,V3,Out) 
* [[119,120],114]
* [[118],[119,120],114]
* [[118],[115,116],114]
* [[118],117,[115,116],114]
* [[118],117,114]
* [[118],114]
* [[118],113]
* [[115,116],114]
* [117,[115,116],114]
* [117,114]
* [114]
* [113]


### Merging Chains  splitD/3 into  External patterns of execution 
* [[113],[114,[115,116],117],[113,[118]],[114,[118]],[114,117,[118]],[114,[115,116],117,[118]],[114,[115,116],[118]],[114,[119,120],[118]]] --> 1 
* [[114,[119,120]]] --> 2 
* [[114]] --> 3 
* [[114,117]] --> 4 
* [[114,[115,116]]] --> 5 


### Specialization of cost equations quicksort/2 
* CE 44 is refined into CE [182] 
* CE 45 is refined into CE [183] 
* CE 47 is refined into CE [184,185,186,187,188] 
* CE 46 is refined into CE [189,190,191,192,193,194,195,196,197,198,199,200] 


#### Refined cost equations quicksort/2 
* CE 182: quicksort(V,Out) = 1
     [V>=0,Out=0] 
* CE 183: quicksort(V,Out) = 2
     [Out=0,V=0] 
* CE 184: quicksort(V,Out) = 2+ split(W,X,Y):1
     [X>=0,W>=0,W+X+1=V,Y=0,Out=0] 
* CE 185: quicksort(V,Out) = 2+ split(W,X,V):2
     [V>=2,V=X+1,W=0,Out=0] 
* CE 186: quicksort(V,Out) = 2+ split(W,X,Y):3
     [W>=0,W+1=V,Y=1,X=0,Out=0] 
* CE 187: quicksort(V,Out) = 2+ split(W,X,Y):4
     [X>=2,X=W+1,2*X=V,Y=0,Out=0] 
* CE 188: quicksort(V,Out) = 2+ split(W,X,Y):5
     [Y>=2,W>=1,W+Y=V,Y=X+1,Out=0] 
* CE 189: quicksort(V,Out) = 3+ split(W,X,V):2+ quicksort(Y,Z)+ quicksort(A1,B1)+ append(C1,Out,Out):1
     [V>=A1+1,A1>=0,Out>=0,V>=2,V=Y+A1+1,Out=B1+1,V=X+1,Z=0,C1=0,W=0] 
* CE 190: quicksort(V,Out) = 3+ split(W,X,V):2+ quicksort(Y,Z)+ quicksort(A1,B1)+ append(Z,C1,D1):2
     [V>=A1+1,A1>=0,C1>=0,Z>=0,V>=2,V=Y+A1+1,C1=B1+1,V=X+1,D1=0,W=0,Out=0] 
* CE 191: quicksort(V,Out) = 3+ split(W,X,V):2+ quicksort(Y,Z)+ quicksort(A1,B1)+ append(Z,C1,Out):3
     [V>=A1+1,Out>=Z,A1>=0,Z>=1,V>=2,V=Y+A1+1,Out=Z+B1+1,Out=Z+C1,V=X+1,W=0] 
* CE 192: quicksort(V,Out) = 3+ split(W,X,V):2+ quicksort(Y,Z)+ quicksort(A1,B1)+ append(Z,C1,Out):4
     [V>=A1+1,Z>=Out,A1>=0,Out>=1,C1>=0,V>=2,V=Y+A1+1,C1=B1+1,V=X+1,W=0] 
* CE 193: quicksort(V,Out) = 3+ split(W,X,Y):3+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(D1,Out,Out):1
     [Out>=0,W>=0,Out=W+C1+1,W+1=V,B1=0,A1=0,Z=0,D1=0,Y=1,X=0] 
* CE 194: quicksort(V,Out) = 3+ split(W,X,Y):3+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,E1):2
     [D1>=0,A1>=0,W>=0,D1=W+C1+1,W+1=V,B1=0,Z=0,E1=0,Y=1,X=0,Out=0] 
* CE 195: quicksort(V,Out) = 3+ split(W,X,Y):3+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,Out):3
     [Out>=A1,A1>=1,W>=0,Out=W+A1+C1+1,Out=A1+D1,W+1=V,B1=0,Z=0,Y=1,X=0] 
* CE 196: quicksort(V,Out) = 3+ split(W,X,Y):3+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,Out):4
     [A1>=Out,Out>=1,D1>=0,W>=0,D1=W+C1+1,W+1=V,B1=0,Z=0,Y=1,X=0] 
* CE 197: quicksort(V,Out) = 3+ split(W,X,Y):5+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(D1,Out,Out):1
     [Y>=B1+1,B1>=0,Out>=0,Y>=2,W>=1,Y=Z+B1+1,Out=W+C1+1,W+Y=V,Y=X+1,A1=0,D1=0] 
* CE 198: quicksort(V,Out) = 3+ split(W,X,Y):5+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,E1):2
     [Y>=B1+1,B1>=0,D1>=0,A1>=0,Y>=2,W>=1,Y=Z+B1+1,D1=W+C1+1,W+Y=V,Y=X+1,E1=0,Out=0] 
* CE 199: quicksort(V,Out) = 3+ split(W,X,Y):5+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,Out):3
     [Y>=B1+1,Out>=A1,B1>=0,A1>=1,Y>=2,W>=1,Out=W+A1+C1+1,Y=Z+B1+1,Out=A1+D1,W+Y=V,Y=X+1] 
* CE 200: quicksort(V,Out) = 3+ split(W,X,Y):5+ quicksort(Z,A1)+ quicksort(B1,C1)+ append(A1,D1,Out):4
     [Y>=B1+1,A1>=Out,B1>=0,Out>=1,D1>=0,Y>=2,W>=1,Y=Z+B1+1,D1=W+C1+1,W+Y=V,Y=X+1] 

### Cost equations --> "Loop" of quicksort/2 
* CEs [200] --> Loop 121 
* CEs [199] --> Loop 122 
* CEs [192] --> Loop 123 
* CEs [191] --> Loop 124 
* CEs [197] --> Loop 125 
* CEs [189] --> Loop 126 
* CEs [196] --> Loop 127 
* CEs [195] --> Loop 128 
* CEs [193] --> Loop 129 
* CEs [198] --> Loop 130 
* CEs [190] --> Loop 131 
* CEs [194] --> Loop 132 
* CEs [182,183,184,185,186,187,188] --> Loop 133 

#### Loops of quicksort/2 
* Loop 121: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V+Out'2>=V'+V'2,V>=V'+V'2+2,V'+V'2>=1,Out'>=Out,V'2>=0,V'>=0,Out>=1] 
* Loop 122: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V>=V'+V'2+2,V'+V'2>=1,Out>=Out',V'2>=0,Out'>=1,V'>=0,Out+V'+V'2=V+Out'+Out'2] 
* Loop 123: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V>=V'+1,Out'>=Out,Out'2+1>=0,V'>=0,Out>=1,V>=2,V=V'+V'2+1] 
* Loop 124: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [Out>=Out',V>=V'+1,Out'>=1,V'>=0,V>=2,Out=Out'+Out'2+1,V=V'+V'2+1] 
* Loop 125: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V>=V'+V'2+2,V'+V'2>=1,V'2>=0,V'>=0,Out>=0,V+Out'2=Out+V'+V'2,Out'=0] 
* Loop 126: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V>=V'+1,V'>=0,Out>=0,V>=2,V=V'+V'2+1,Out=Out'2+1,Out'=0] 
* Loop 127: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V+Out'2>=0,Out'>=Out,Out>=1,V>=1,V'2=0,V'=0] 
* Loop 128: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [Out>=Out',Out'>=1,V>=1,Out=V+Out'+Out'2,V'2=0,V'=0] 
* Loop 129: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [Out>=0,V>=1,V+Out'2=Out,V'2=0,Out'=0,V'=0] 
* Loop 130: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V+Out'2>=V'+V'2,V>=V'+V'2+2,V'+V'2>=1,V'2>=0,Out'>=0,V'>=0,Out=0] 
* Loop 131: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V>=V'+1,Out'2+1>=0,Out'>=0,V'>=0,V>=2,V=V'+V'2+1,Out=0] 
* Loop 132: quicksort(V,Out)->  quicksort(V',Out')  quicksort(V'2,Out'2)
                  [V+Out'2>=0,Out'>=0,V>=1,V'2=0,V'=0,Out=0] 
* Loop 133: quicksort(V,Out) [V>=0,Out=0] 

### Ranking functions of CR quicksort(V,Out) 
* RF of phase [121,122,123,124,125,126,130,131]: [V-1]

#### Partial ranking functions of CR quicksort(V,Out) 
* Partial RF of phase [121,122,123,124,125,126,130,131]:
  - RF of loop [121:1,121:2,122:1,122:2,125:1,125:2,130:1,130:2]:
    V/2-1
  - RF of loop [123:1,123:2,124:1,124:2,126:1,126:2,131:1,131:2]:
    V-1


### Resulting Chains:quicksort(V,Out) 
* [133]
* [multiple(132,[[133]])]
* [multiple(129,[[133]])]
* [multiple([121,122,123,124,125,126,130,131],[[133],[multiple(132,[[133]])],[multiple(129,[[133]])],[multiple(128,[[133]])],[multiple(127,[[133]])]])]


### Merging Chains  quicksort/2 into  External patterns of execution 
* [[133],[multiple(132,[[133]])]] --> 1 
* [[multiple(129,[[133]])]] --> 2 
* [[multiple([121,122,123,124,125,126,130,131],[[133],[multiple(132,[[133]])],[multiple(129,[[133]])],[multiple(128,[[133]])],[multiple(127,[[133]])]])]] --> 3 


### Specialization of cost equations quicksortD/2 
* CE 34 is refined into CE [201] 
* CE 35 is refined into CE [202] 
* CE 37 is refined into CE [203,204,205,206,207] 
* CE 36 is refined into CE [208,209,210,211,212,213,214,215,216,217,218,219] 


#### Refined cost equations quicksortD/2 
* CE 201: quicksortD(V,Out) = 1
     [V>=0,Out=0] 
* CE 202: quicksortD(V,Out) = 2
     [Out=0,V=0] 
* CE 203: quicksortD(V,Out) = 2+ splitD(W,X,Y):1
     [X>=0,W>=0,W+X+1=V,Y=0,Out=0] 
* CE 204: quicksortD(V,Out) = 2+ splitD(W,X,V):2
     [V>=2,V=X+1,W=0,Out=0] 
* CE 205: quicksortD(V,Out) = 2+ splitD(W,X,Y):3
     [W>=0,W+1=V,Y=1,X=0,Out=0] 
* CE 206: quicksortD(V,Out) = 2+ splitD(W,X,Y):4
     [X>=2,X=W+1,2*X=V,Y=0,Out=0] 
* CE 207: quicksortD(V,Out) = 2+ splitD(W,X,Y):5
     [Y>=2,W>=1,W+Y=V,Y=X+1,Out=0] 
* CE 208: quicksortD(V,Out) = 3+ splitD(W,X,V):2+ quicksortD(Y,Z)+ quicksortD(A1,B1)+ appendD(C1,Out,Out):1
     [V>=A1+1,A1>=0,Out>=0,V>=2,V=Y+A1+1,Out=B1+1,V=X+1,Z=0,C1=0,W=0] 
* CE 209: quicksortD(V,Out) = 3+ splitD(W,X,V):2+ quicksortD(Y,Z)+ quicksortD(A1,B1)+ appendD(Z,C1,D1):2
     [V>=A1+1,A1>=0,C1>=0,Z>=0,V>=2,V=Y+A1+1,C1=B1+1,V=X+1,D1=0,W=0,Out=0] 
* CE 210: quicksortD(V,Out) = 3+ splitD(W,X,V):2+ quicksortD(Y,Z)+ quicksortD(A1,B1)+ appendD(Z,C1,Out):3
     [V>=A1+1,Out>=Z,A1>=0,Z>=1,V>=2,V=Y+A1+1,Out=Z+B1+1,Out=Z+C1,V=X+1,W=0] 
* CE 211: quicksortD(V,Out) = 3+ splitD(W,X,V):2+ quicksortD(Y,Z)+ quicksortD(A1,B1)+ appendD(Z,C1,Out):4
     [V>=A1+1,Z>=Out,A1>=0,Out>=1,C1>=0,V>=2,V=Y+A1+1,C1=B1+1,V=X+1,W=0] 
* CE 212: quicksortD(V,Out) = 3+ splitD(W,X,Y):3+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(D1,Out,Out):1
     [Out>=0,W>=0,Out=W+C1+1,W+1=V,B1=0,A1=0,Z=0,D1=0,Y=1,X=0] 
* CE 213: quicksortD(V,Out) = 3+ splitD(W,X,Y):3+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,E1):2
     [D1>=0,A1>=0,W>=0,D1=W+C1+1,W+1=V,B1=0,Z=0,E1=0,Y=1,X=0,Out=0] 
* CE 214: quicksortD(V,Out) = 3+ splitD(W,X,Y):3+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,Out):3
     [Out>=A1,A1>=1,W>=0,Out=W+A1+C1+1,Out=A1+D1,W+1=V,B1=0,Z=0,Y=1,X=0] 
* CE 215: quicksortD(V,Out) = 3+ splitD(W,X,Y):3+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,Out):4
     [A1>=Out,Out>=1,D1>=0,W>=0,D1=W+C1+1,W+1=V,B1=0,Z=0,Y=1,X=0] 
* CE 216: quicksortD(V,Out) = 3+ splitD(W,X,Y):5+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(D1,Out,Out):1
     [Y>=B1+1,B1>=0,Out>=0,Y>=2,W>=1,Y=Z+B1+1,Out=W+C1+1,W+Y=V,Y=X+1,A1=0,D1=0] 
* CE 217: quicksortD(V,Out) = 3+ splitD(W,X,Y):5+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,E1):2
     [Y>=B1+1,B1>=0,D1>=0,A1>=0,Y>=2,W>=1,Y=Z+B1+1,D1=W+C1+1,W+Y=V,Y=X+1,E1=0,Out=0] 
* CE 218: quicksortD(V,Out) = 3+ splitD(W,X,Y):5+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,Out):3
     [Y>=B1+1,Out>=A1,B1>=0,A1>=1,Y>=2,W>=1,Out=W+A1+C1+1,Y=Z+B1+1,Out=A1+D1,W+Y=V,Y=X+1] 
* CE 219: quicksortD(V,Out) = 3+ splitD(W,X,Y):5+ quicksortD(Z,A1)+ quicksortD(B1,C1)+ appendD(A1,D1,Out):4
     [Y>=B1+1,A1>=Out,B1>=0,Out>=1,D1>=0,Y>=2,W>=1,Y=Z+B1+1,D1=W+C1+1,W+Y=V,Y=X+1] 

### Cost equations --> "Loop" of quicksortD/2 
* CEs [219] --> Loop 134 
* CEs [218] --> Loop 135 
* CEs [211] --> Loop 136 
* CEs [210] --> Loop 137 
* CEs [216] --> Loop 138 
* CEs [208] --> Loop 139 
* CEs [215] --> Loop 140 
* CEs [214] --> Loop 141 
* CEs [212] --> Loop 142 
* CEs [217] --> Loop 143 
* CEs [209] --> Loop 144 
* CEs [213] --> Loop 145 
* CEs [201,202,203,204,205,206,207] --> Loop 146 

#### Loops of quicksortD/2 
* Loop 134: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V+Out'2>=V'+V'2,V>=V'+V'2+2,V'+V'2>=1,Out'>=Out,V'2>=0,V'>=0,Out>=1] 
* Loop 135: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V>=V'+V'2+2,V'+V'2>=1,Out>=Out',V'2>=0,Out'>=1,V'>=0,Out+V'+V'2=V+Out'+Out'2] 
* Loop 136: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V>=V'+1,Out'>=Out,Out'2+1>=0,V'>=0,Out>=1,V>=2,V=V'+V'2+1] 
* Loop 137: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [Out>=Out',V>=V'+1,Out'>=1,V'>=0,V>=2,Out=Out'+Out'2+1,V=V'+V'2+1] 
* Loop 138: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V>=V'+V'2+2,V'+V'2>=1,V'2>=0,V'>=0,Out>=0,V+Out'2=Out+V'+V'2,Out'=0] 
* Loop 139: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V>=V'+1,V'>=0,Out>=0,V>=2,V=V'+V'2+1,Out=Out'2+1,Out'=0] 
* Loop 140: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V+Out'2>=0,Out'>=Out,Out>=1,V>=1,V'2=0,V'=0] 
* Loop 141: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [Out>=Out',Out'>=1,V>=1,Out=V+Out'+Out'2,V'2=0,V'=0] 
* Loop 142: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [Out>=0,V>=1,V+Out'2=Out,V'2=0,Out'=0,V'=0] 
* Loop 143: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V+Out'2>=V'+V'2,V>=V'+V'2+2,V'+V'2>=1,V'2>=0,Out'>=0,V'>=0,Out=0] 
* Loop 144: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V>=V'+1,Out'2+1>=0,Out'>=0,V'>=0,V>=2,V=V'+V'2+1,Out=0] 
* Loop 145: quicksortD(V,Out)->  quicksortD(V',Out')  quicksortD(V'2,Out'2)
                  [V+Out'2>=0,Out'>=0,V>=1,V'2=0,V'=0,Out=0] 
* Loop 146: quicksortD(V,Out) [V>=0,Out=0] 

### Ranking functions of CR quicksortD(V,Out) 
* RF of phase [134,135,136,137,138,139,143,144]: [V-1]

#### Partial ranking functions of CR quicksortD(V,Out) 
* Partial RF of phase [134,135,136,137,138,139,143,144]:
  - RF of loop [134:1,134:2,135:1,135:2,138:1,138:2,143:1,143:2]:
    V/2-1
  - RF of loop [136:1,136:2,137:1,137:2,139:1,139:2,144:1,144:2]:
    V-1


### Resulting Chains:quicksortD(V,Out) 
* [146]
* [multiple(145,[[146]])]
* [multiple(142,[[146]])]
* [multiple([134,135,136,137,138,139,143,144],[[146],[multiple(145,[[146]])],[multiple(142,[[146]])],[multiple(141,[[146]])],[multiple(140,[[146]])]])]


### Merging Chains  quicksortD/2 into  External patterns of execution 
* [[146],[multiple(145,[[146]])]] --> 1 
* [[multiple(142,[[146]])]] --> 2 
* [[multiple([134,135,136,137,138,139,143,144],[[146],[multiple(145,[[146]])],[multiple(142,[[146]])],[multiple(141,[[146]])],[multiple(140,[[146]])]])]] --> 3 


### Specialization of cost equations testList/2 
* CE 65 is refined into CE [220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731] 


#### Refined cost equations testList/2 
* CE 220: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=73] 
* CE 221: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 222: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 223: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 224: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 225: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 226: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 227: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 228: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 229: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 230: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 231: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 232: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 233: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 234: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 235: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 236: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 237: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 238: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 239: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 240: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 241: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 242: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 243: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 244: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 245: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 246: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 247: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 248: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 249: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 250: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 251: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 252: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 253: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 254: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 255: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 256: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 257: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 258: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 259: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 260: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 261: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 262: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 263: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 264: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 265: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 266: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 267: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 268: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 269: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 270: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 271: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 272: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 273: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 274: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 275: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 276: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 277: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 278: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 279: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 280: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 281: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 282: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 283: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 284: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 285: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 286: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 287: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 288: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 289: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 290: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 291: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 292: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 293: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 294: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 295: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 296: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 297: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 298: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 299: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 300: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 301: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 302: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 303: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 304: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 305: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 306: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 307: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 308: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 309: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 310: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 311: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 312: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 313: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 314: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 315: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 316: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 317: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 318: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 319: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 320: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 321: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 322: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 323: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 324: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 325: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 326: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 327: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 328: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 329: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 330: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 331: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 332: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 333: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 334: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 335: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 336: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 337: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 338: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 339: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 340: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 341: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 342: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 343: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 344: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 345: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 346: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 347: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 348: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=72] 
* CE 349: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 350: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 351: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 352: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 353: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 354: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 355: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 356: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 357: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 358: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 359: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 360: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 361: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 362: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 363: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 364: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 365: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 366: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 367: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 368: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 369: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 370: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 371: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 372: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 373: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 374: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 375: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 376: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 377: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 378: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 379: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 380: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 381: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 382: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 383: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 384: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 385: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 386: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 387: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 388: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 389: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 390: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 391: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 392: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 393: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 394: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 395: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 396: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 397: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 398: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 399: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 400: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 401: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 402: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 403: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 404: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 405: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 406: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 407: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 408: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 409: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 410: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 411: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 412: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=71] 
* CE 413: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 414: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 415: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 416: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 417: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 418: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 419: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 420: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 421: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 422: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 423: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 424: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 425: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 426: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 427: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 428: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 429: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 430: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 431: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 432: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 433: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 434: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 435: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 436: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 437: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 438: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 439: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 440: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 441: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 442: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 443: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 444: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=70] 
* CE 445: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 446: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 447: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 448: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 449: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 450: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 451: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 452: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 453: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 454: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 455: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 456: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 457: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 458: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 459: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 460: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=69] 
* CE 461: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 462: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 463: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 464: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 465: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 466: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 467: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 468: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=68] 
* CE 469: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 470: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 471: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 472: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=67] 
* CE 473: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 474: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=66] 
* CE 475: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):2+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=6,Y=5,X=0,W=0,Out=65] 
* CE 476: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=72] 
* CE 477: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 478: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 479: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 480: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 481: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 482: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 483: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 484: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 485: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 486: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 487: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 488: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 489: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 490: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 491: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 492: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 493: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 494: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 495: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 496: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 497: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 498: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 499: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 500: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 501: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 502: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 503: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 504: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 505: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 506: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 507: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 508: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 509: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 510: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 511: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 512: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 513: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 514: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 515: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 516: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 517: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 518: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 519: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 520: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 521: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 522: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 523: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 524: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 525: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 526: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 527: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 528: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 529: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 530: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 531: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 532: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 533: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 534: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 535: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 536: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 537: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 538: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 539: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 540: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 541: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 542: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 543: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 544: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 545: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 546: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 547: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 548: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 549: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 550: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 551: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 552: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 553: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 554: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 555: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 556: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 557: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 558: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 559: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 560: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 561: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 562: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 563: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 564: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 565: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 566: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 567: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 568: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 569: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 570: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 571: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 572: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 573: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 574: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 575: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 576: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 577: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 578: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 579: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 580: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 581: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 582: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 583: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 584: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 585: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 586: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 587: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 588: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 589: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 590: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 591: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 592: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 593: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 594: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 595: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 596: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 597: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 598: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 599: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 600: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 601: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 602: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 603: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):2+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=7,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 604: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=71] 
* CE 605: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 606: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 607: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 608: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 609: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 610: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 611: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 612: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 613: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 614: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 615: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 616: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 617: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 618: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 619: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 620: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 621: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 622: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 623: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 624: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 625: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 626: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 627: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 628: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 629: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 630: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 631: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 632: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 633: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 634: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 635: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 636: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 637: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 638: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 639: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 640: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 641: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 642: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 643: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 644: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 645: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 646: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 647: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 648: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 649: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 650: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 651: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 652: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 653: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 654: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 655: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 656: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 657: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 658: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 659: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 660: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 661: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 662: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 663: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 664: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 665: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 666: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 667: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):2+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=11,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 668: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=70] 
* CE 669: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 670: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 671: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 672: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 673: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 674: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 675: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 676: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 677: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 678: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 679: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 680: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 681: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 682: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 683: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 684: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 685: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 686: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 687: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 688: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 689: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 690: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 691: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 692: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 693: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 694: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 695: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 696: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 697: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 698: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 699: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):2+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=9,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 700: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=69] 
* CE 701: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 702: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 703: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 704: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 705: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 706: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 707: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 708: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 709: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 710: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 711: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 712: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 713: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 714: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 715: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):2+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=3,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 716: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=68] 
* CE 717: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 718: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 719: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 720: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 721: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 722: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 723: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):2+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=4,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 724: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=67] 
* CE 725: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 726: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 727: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):2+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=10,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 728: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=66] 
* CE 729: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):2+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=8,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 730: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):2
     [V>=0,P1=5,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=65] 
* CE 731: testList(V,Out) = 1+ fun(W,X):1+ fun(Y,Z):3+ fun(A1,B1):3+ fun(C1,D1):3+ fun(E1,F1):3+ fun(G1,H1):3+ fun(I1,J1):3+ fun(K1,L1):3+ fun(M1,N1):3+ fun(O1,P1):3
     [V>=0,P1=4,O1=4,N1=7,M1=7,L1=9,K1=9,J1=3,I1=3,H1=2,G1=2,F1=8,E1=8,D1=10,C1=10,B1=6,A1=6,Z=5,Y=5,X=0,W=0,Out=64] 

### Cost equations --> "Loop" of testList/2 
* CEs [220] --> Loop 147 
* CEs [221,222,224,228,236,252,284,348,476] --> Loop 148 
* CEs [223,225,226,229,230,232,237,238,240,244,253,254,256,260,268,285,286,288,292,300,316,349,350,352,356,364,380,412,477,478,480,484,492,508,540,604] --> Loop 149 
* CEs [227,231,233,234,239,241,242,245,246,248,255,257,258,261,262,264,269,270,272,276,287,289,290,293,294,296,301,302,304,308,317,318,320,324,332,351,353,354,357,358,360,365,366,368,372,381,382,384,388,396,413,414,416,420,428,444,479,481,482,485,486,488,493,494,496,500,509,510,512,516,524,541,542,544,548,556,572,605,606,608,612,620,636,668] --> Loop 150 
* CEs [235,243,247,249,250,259,263,265,266,271,273,274,277,278,280,291,295,297,298,303,305,306,309,310,312,319,321,322,325,326,328,333,334,336,340,355,359,361,362,367,369,370,373,374,376,383,385,386,389,390,392,397,398,400,404,415,417,418,421,422,424,429,430,432,436,445,446,448,452,460,483,487,489,490,495,497,498,501,502,504,511,513,514,517,518,520,525,526,528,532,543,545,546,549,550,552,557,558,560,564,573,574,576,580,588,607,609,610,613,614,616,621,622,624,628,637,638,640,644,652,669,670,672,676,684,700] --> Loop 151 
* CEs [251,267,275,279,281,282,299,307,311,313,314,323,327,329,330,335,337,338,341,342,344,363,371,375,377,378,387,391,393,394,399,401,402,405,406,408,419,423,425,426,431,433,434,437,438,440,447,449,450,453,454,456,461,462,464,468,491,499,503,505,506,515,519,521,522,527,529,530,533,534,536,547,551,553,554,559,561,562,565,566,568,575,577,578,581,582,584,589,590,592,596,611,615,617,618,623,625,626,629,630,632,639,641,642,645,646,648,653,654,656,660,671,673,674,677,678,680,685,686,688,692,701,702,704,708,716] --> Loop 152 
* CEs [283,315,331,339,343,345,346,379,395,403,407,409,410,427,435,439,441,442,451,455,457,458,463,465,466,469,470,472,507,523,531,535,537,538,555,563,567,569,570,579,583,585,586,591,593,594,597,598,600,619,627,631,633,634,643,647,649,650,655,657,658,661,662,664,675,679,681,682,687,689,690,693,694,696,703,705,706,709,710,712,717,718,720,724] --> Loop 153 
* CEs [347,411,443,459,467,471,473,474,539,571,587,595,599,601,602,635,651,659,663,665,666,683,691,695,697,698,707,711,713,714,719,721,722,725,726,728] --> Loop 154 
* CEs [475,603,667,699,715,723,727,729,730] --> Loop 155 
* CEs [731] --> Loop 156 

#### Loops of testList/2 
* Loop 147: testList(V,Out) [V>=0,Out=73] 
* Loop 148: testList(V,Out) [V>=0,Out=72] 
* Loop 149: testList(V,Out) [V>=0,Out=71] 
* Loop 150: testList(V,Out) [V>=0,Out=70] 
* Loop 151: testList(V,Out) [V>=0,Out=69] 
* Loop 152: testList(V,Out) [V>=0,Out=68] 
* Loop 153: testList(V,Out) [V>=0,Out=67] 
* Loop 154: testList(V,Out) [V>=0,Out=66] 
* Loop 155: testList(V,Out) [V>=0,Out=65] 
* Loop 156: testList(V,Out) [V>=0,Out=64] 

### Ranking functions of CR testList(V,Out) 

#### Partial ranking functions of CR testList(V,Out) 


### Resulting Chains:testList(V,Out) 
* [156]
* [155]
* [154]
* [153]
* [152]
* [151]
* [150]
* [149]
* [148]
* [147]


### Merging Chains  testList/2 into  External patterns of execution 
* [[156]] --> 1 
* [[155]] --> 2 
* [[154]] --> 3 
* [[153]] --> 4 
* [[152]] --> 5 
* [[151]] --> 6 
* [[150]] --> 7 
* [[149]] --> 8 
* [[148]] --> 9 
* [[147]] --> 10 


### Specialization of cost equations testQuicksort/2 
* CE 66 is refined into CE [732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761] 


#### Refined cost equations testQuicksort/2 
* CE 732: testQuicksort(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=64,X=64,W=0,Out=0] 
* CE 733: testQuicksort(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Z):2
     [V>=0,Z=64,Y=64,X=64,W=0,Out=64] 
* CE 734: testQuicksort(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Out):3
     [Out>=0,V>=0,64>=Out,Y=64,X=64,W=0] 
* CE 735: testQuicksort(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=65,X=65,W=0,Out=0] 
* CE 736: testQuicksort(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Z):2
     [V>=0,Z=65,Y=65,X=65,W=0,Out=65] 
* CE 737: testQuicksort(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Out):3
     [Out>=0,V>=0,65>=Out,Y=65,X=65,W=0] 
* CE 738: testQuicksort(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=66,X=66,W=0,Out=0] 
* CE 739: testQuicksort(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Z):2
     [V>=0,Z=66,Y=66,X=66,W=0,Out=66] 
* CE 740: testQuicksort(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Out):3
     [Out>=0,V>=0,66>=Out,Y=66,X=66,W=0] 
* CE 741: testQuicksort(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=67,X=67,W=0,Out=0] 
* CE 742: testQuicksort(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Z):2
     [V>=0,Z=67,Y=67,X=67,W=0,Out=67] 
* CE 743: testQuicksort(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Out):3
     [Out>=0,V>=0,67>=Out,Y=67,X=67,W=0] 
* CE 744: testQuicksort(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=68,X=68,W=0,Out=0] 
* CE 745: testQuicksort(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Z):2
     [V>=0,Z=68,Y=68,X=68,W=0,Out=68] 
* CE 746: testQuicksort(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Out):3
     [Out>=0,V>=0,68>=Out,Y=68,X=68,W=0] 
* CE 747: testQuicksort(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=69,X=69,W=0,Out=0] 
* CE 748: testQuicksort(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Z):2
     [V>=0,Z=69,Y=69,X=69,W=0,Out=69] 
* CE 749: testQuicksort(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Out):3
     [Out>=0,V>=0,69>=Out,Y=69,X=69,W=0] 
* CE 750: testQuicksort(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=70,X=70,W=0,Out=0] 
* CE 751: testQuicksort(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Z):2
     [V>=0,Z=70,Y=70,X=70,W=0,Out=70] 
* CE 752: testQuicksort(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Out):3
     [Out>=0,V>=0,70>=Out,Y=70,X=70,W=0] 
* CE 753: testQuicksort(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=71,X=71,W=0,Out=0] 
* CE 754: testQuicksort(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Z):2
     [V>=0,Z=71,Y=71,X=71,W=0,Out=71] 
* CE 755: testQuicksort(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Out):3
     [Out>=0,V>=0,71>=Out,Y=71,X=71,W=0] 
* CE 756: testQuicksort(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=72,X=72,W=0,Out=0] 
* CE 757: testQuicksort(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Z):2
     [V>=0,Z=72,Y=72,X=72,W=0,Out=72] 
* CE 758: testQuicksort(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Out):3
     [Out>=0,V>=0,72>=Out,Y=72,X=72,W=0] 
* CE 759: testQuicksort(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=73,X=73,W=0,Out=0] 
* CE 760: testQuicksort(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Z):2
     [V>=0,Z=73,Y=73,X=73,W=0,Out=73] 
* CE 761: testQuicksort(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Out):3
     [Out>=0,V>=0,73>=Out,Y=73,X=73,W=0] 

### Cost equations --> "Loop" of testQuicksort/2 
* CEs [760] --> Loop 157 
* CEs [757] --> Loop 158 
* CEs [754] --> Loop 159 
* CEs [751] --> Loop 160 
* CEs [748] --> Loop 161 
* CEs [745] --> Loop 162 
* CEs [742] --> Loop 163 
* CEs [739] --> Loop 164 
* CEs [736] --> Loop 165 
* CEs [733] --> Loop 166 
* CEs [732,734,735,737,738,740,741,743,744,746,747,749,750,752,753,755,756,758,759,761] --> Loop 167 

#### Loops of testQuicksort/2 
* Loop 157: testQuicksort(V,Out) [V>=0,Out=73] 
* Loop 158: testQuicksort(V,Out) [V>=0,Out=72] 
* Loop 159: testQuicksort(V,Out) [V>=0,Out=71] 
* Loop 160: testQuicksort(V,Out) [V>=0,Out=70] 
* Loop 161: testQuicksort(V,Out) [V>=0,Out=69] 
* Loop 162: testQuicksort(V,Out) [V>=0,Out=68] 
* Loop 163: testQuicksort(V,Out) [V>=0,Out=67] 
* Loop 164: testQuicksort(V,Out) [V>=0,Out=66] 
* Loop 165: testQuicksort(V,Out) [V>=0,Out=65] 
* Loop 166: testQuicksort(V,Out) [V>=0,Out=64] 
* Loop 167: testQuicksort(V,Out) [Out>=0,V>=0,73>=Out] 

### Ranking functions of CR testQuicksort(V,Out) 

#### Partial ranking functions of CR testQuicksort(V,Out) 


### Resulting Chains:testQuicksort(V,Out) 
* [167]
* [166]
* [165]
* [164]
* [163]
* [162]
* [161]
* [160]
* [159]
* [158]
* [157]


### Merging Chains  testQuicksort/2 into  External patterns of execution 
* [[166],[167]] --> 1 
* [[165]] --> 2 
* [[164]] --> 3 
* [[163]] --> 4 
* [[162]] --> 5 
* [[161]] --> 6 
* [[160]] --> 7 
* [[159]] --> 8 
* [[158]] --> 9 
* [[157]] --> 10 


### Specialization of cost equations testQuicksort2/2 
* CE 67 is refined into CE [762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791] 


#### Refined cost equations testQuicksort2/2 
* CE 762: testQuicksort2(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=64,X=64,W=0,Out=0] 
* CE 763: testQuicksort2(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Z):2
     [V>=0,Z=64,Y=64,X=64,W=0,Out=64] 
* CE 764: testQuicksort2(V,Out) = 1+ testList(W,X):1+ quicksort(Y,Out):3
     [Out>=0,V>=0,64>=Out,Y=64,X=64,W=0] 
* CE 765: testQuicksort2(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=65,X=65,W=0,Out=0] 
* CE 766: testQuicksort2(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Z):2
     [V>=0,Z=65,Y=65,X=65,W=0,Out=65] 
* CE 767: testQuicksort2(V,Out) = 1+ testList(W,X):2+ quicksort(Y,Out):3
     [Out>=0,V>=0,65>=Out,Y=65,X=65,W=0] 
* CE 768: testQuicksort2(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=66,X=66,W=0,Out=0] 
* CE 769: testQuicksort2(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Z):2
     [V>=0,Z=66,Y=66,X=66,W=0,Out=66] 
* CE 770: testQuicksort2(V,Out) = 1+ testList(W,X):3+ quicksort(Y,Out):3
     [Out>=0,V>=0,66>=Out,Y=66,X=66,W=0] 
* CE 771: testQuicksort2(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=67,X=67,W=0,Out=0] 
* CE 772: testQuicksort2(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Z):2
     [V>=0,Z=67,Y=67,X=67,W=0,Out=67] 
* CE 773: testQuicksort2(V,Out) = 1+ testList(W,X):4+ quicksort(Y,Out):3
     [Out>=0,V>=0,67>=Out,Y=67,X=67,W=0] 
* CE 774: testQuicksort2(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=68,X=68,W=0,Out=0] 
* CE 775: testQuicksort2(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Z):2
     [V>=0,Z=68,Y=68,X=68,W=0,Out=68] 
* CE 776: testQuicksort2(V,Out) = 1+ testList(W,X):5+ quicksort(Y,Out):3
     [Out>=0,V>=0,68>=Out,Y=68,X=68,W=0] 
* CE 777: testQuicksort2(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=69,X=69,W=0,Out=0] 
* CE 778: testQuicksort2(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Z):2
     [V>=0,Z=69,Y=69,X=69,W=0,Out=69] 
* CE 779: testQuicksort2(V,Out) = 1+ testList(W,X):6+ quicksort(Y,Out):3
     [Out>=0,V>=0,69>=Out,Y=69,X=69,W=0] 
* CE 780: testQuicksort2(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=70,X=70,W=0,Out=0] 
* CE 781: testQuicksort2(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Z):2
     [V>=0,Z=70,Y=70,X=70,W=0,Out=70] 
* CE 782: testQuicksort2(V,Out) = 1+ testList(W,X):7+ quicksort(Y,Out):3
     [Out>=0,V>=0,70>=Out,Y=70,X=70,W=0] 
* CE 783: testQuicksort2(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=71,X=71,W=0,Out=0] 
* CE 784: testQuicksort2(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Z):2
     [V>=0,Z=71,Y=71,X=71,W=0,Out=71] 
* CE 785: testQuicksort2(V,Out) = 1+ testList(W,X):8+ quicksort(Y,Out):3
     [Out>=0,V>=0,71>=Out,Y=71,X=71,W=0] 
* CE 786: testQuicksort2(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=72,X=72,W=0,Out=0] 
* CE 787: testQuicksort2(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Z):2
     [V>=0,Z=72,Y=72,X=72,W=0,Out=72] 
* CE 788: testQuicksort2(V,Out) = 1+ testList(W,X):9+ quicksort(Y,Out):3
     [Out>=0,V>=0,72>=Out,Y=72,X=72,W=0] 
* CE 789: testQuicksort2(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Z):1
     [V>=0,Z=0,Y=73,X=73,W=0,Out=0] 
* CE 790: testQuicksort2(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Z):2
     [V>=0,Z=73,Y=73,X=73,W=0,Out=73] 
* CE 791: testQuicksort2(V,Out) = 1+ testList(W,X):10+ quicksort(Y,Out):3
     [Out>=0,V>=0,73>=Out,Y=73,X=73,W=0] 

### Cost equations --> "Loop" of testQuicksort2/2 
* CEs [790] --> Loop 168 
* CEs [787] --> Loop 169 
* CEs [784] --> Loop 170 
* CEs [781] --> Loop 171 
* CEs [778] --> Loop 172 
* CEs [775] --> Loop 173 
* CEs [772] --> Loop 174 
* CEs [769] --> Loop 175 
* CEs [766] --> Loop 176 
* CEs [763] --> Loop 177 
* CEs [762,764,765,767,768,770,771,773,774,776,777,779,780,782,783,785,786,788,789,791] --> Loop 178 

#### Loops of testQuicksort2/2 
* Loop 168: testQuicksort2(V,Out) [V>=0,Out=73] 
* Loop 169: testQuicksort2(V,Out) [V>=0,Out=72] 
* Loop 170: testQuicksort2(V,Out) [V>=0,Out=71] 
* Loop 171: testQuicksort2(V,Out) [V>=0,Out=70] 
* Loop 172: testQuicksort2(V,Out) [V>=0,Out=69] 
* Loop 173: testQuicksort2(V,Out) [V>=0,Out=68] 
* Loop 174: testQuicksort2(V,Out) [V>=0,Out=67] 
* Loop 175: testQuicksort2(V,Out) [V>=0,Out=66] 
* Loop 176: testQuicksort2(V,Out) [V>=0,Out=65] 
* Loop 177: testQuicksort2(V,Out) [V>=0,Out=64] 
* Loop 178: testQuicksort2(V,Out) [Out>=0,V>=0,73>=Out] 

### Ranking functions of CR testQuicksort2(V,Out) 

#### Partial ranking functions of CR testQuicksort2(V,Out) 


### Resulting Chains:testQuicksort2(V,Out) 
* [178]
* [177]
* [176]
* [175]
* [174]
* [173]
* [172]
* [171]
* [170]
* [169]
* [168]


### Merging Chains  testQuicksort2/2 into  External patterns of execution 
* [[177],[178]] --> 1 
* [[176]] --> 2 
* [[175]] --> 3 
* [[174]] --> 4 
* [[173]] --> 5 
* [[172]] --> 6 
* [[171]] --> 7 
* [[170]] --> 8 
* [[169]] --> 9 
* [[168]] --> 10 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [792] 
* CE 3 is refined into CE [793] 
* CE 4 is refined into CE [794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849] 
* CE 5 is refined into CE [850,851,852,853,854] 
* CE 6 is refined into CE [855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881] 
* CE 7 is refined into CE [882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937] 
* CE 8 is refined into CE [938,939,940,941,942] 
* CE 9 is refined into CE [943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969] 
* CE 10 is refined into CE [970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986] 
* CE 11 is refined into CE [987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003] 
* CE 12 is refined into CE [1004,1005,1006,1007] 
* CE 13 is refined into CE [1008,1009,1010,1011] 
* CE 14 is refined into CE [1012,1013,1014] 
* CE 15 is refined into CE [1015,1016,1017,1018,1019,1020,1021,1022,1023,1024] 
* CE 16 is refined into CE [1025,1026,1027,1028] 
* CE 17 is refined into CE [1029,1030,1031,1032] 
* CE 18 is refined into CE [1033,1034,1035] 
* CE 19 is refined into CE [1036,1037,1038] 
* CE 20 is refined into CE [1039,1040,1041,1042,1043] 
* CE 21 is refined into CE [1044,1045,1046,1047,1048,1049,1050] 
* CE 22 is refined into CE [1051,1052,1053] 
* CE 23 is refined into CE [1054,1055,1056,1057,1058] 
* CE 24 is refined into CE [1059,1060,1061,1062,1063,1064,1065] 
* CE 25 is refined into CE [1066,1067,1068] 
* CE 26 is refined into CE [1069,1070,1071,1072,1073,1074,1075,1076,1077,1078] 
* CE 27 is refined into CE [1079,1080,1081,1082,1083,1084,1085,1086,1087,1088] 
* CE 28 is refined into CE [1089,1090,1091,1092,1093,1094,1095,1096,1097,1098] 
* CE 29 is refined into CE [1099,1100,1101,1102] 
* CE 30 is refined into CE [1103,1104,1105,1106,1107,1108,1109,1110,1111] 


#### Refined cost equations start/4 
* CE 792: start(V,V3,V37,V44) = 0
     [V>=0] 
* CE 793: start(V,V3,V37,V44) = 1
     [V=0] 
* CE 794: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):1
     [Z44+B45>=1,B45>=0,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=1,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 795: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):2
     [Z44+B45>=1,B45>=0,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=0,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 796: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):2+ appendD(D45,E45,E45):1
     [E45>=2,Z44>=0,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,D45=0,A45=0,W44=0] 
* CE 797: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):2+ appendD(D45,E45,F45):2
     [E45>=2,Z44>=0,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,F45=0,D45=0,A45=0,W44=0] 
* CE 798: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):3+ appendD(D45,E45,E45):1
     [B45+1>=E45,E45>=1,B45>=2,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,D45=0,A45=0,W44=0] 
* CE 799: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):3+ appendD(D45,E45,F45):2
     [B45+1>=E45,E45>=1,B45>=2,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,F45=0,D45=0,A45=0,W44=0] 
* CE 800: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):1+ appendD(Z44,C45,D45):2
     [Z44>=1,A45>=0,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,D45=0,C45=1,B45=0,W44=0] 
* CE 801: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):2+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):3
     [F45>=2,B45>=0,B45+F45=Y44,B45+F45=X44+1,B45+F45=V,F45=D45+1,F45=A45+1,F45=Z44+1,E45=1,C45=0,W44=0] 
* CE 802: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):1+ appendD(Z44,C45,D45):4
     [Z44>=D45,D45>=1,A45>=0,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=1,B45=0,W44=0] 
* CE 803: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):2+ appendD(Z44,C45,D45):2
     [C45>=2,Z44>=1,Z44+C45=Y44,Z44+C45=X44+1,Z44+C45=V,C45=B45+1,C45=A45+1,D45=0,W44=0] 
* CE 804: start(V,V3,V37,V44) = 2+ splitD(W44,X44,V):2+ quicksortD(Y44,Y44):2+ quicksortD(Z44,A45):2+ appendD(Y44,B45,V):3
     [V>=Y44+2,Y44>=1,V=Y44+B45,V=Y44+A45+1,V=Y44+Z44+1,V=X44+1,W44=0] 
* CE 805: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):2+ appendD(Z44,C45,D45):4
     [Z44>=D45,D45>=1,C45>=2,Z44+C45=Y44,Z44+C45=X44+1,Z44+C45=V,C45=B45+1,C45=A45+1,W44=0] 
* CE 806: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):2
     [A45+1>=C45,C45>=1,Z44>=1,A45>=2,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=B45+1,D45=0,W44=0] 
* CE 807: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):3
     [Z44+A45+1>=D45,D45>=Z44+1,Z44>=1,A45>=2,D45=Z44+C45,D45=Z44+B45+1,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,W44=0] 
* CE 808: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):4
     [Z44>=D45,A45+1>=C45,D45>=1,C45>=1,A45>=2,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=B45+1,W44=0] 
* CE 809: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):1
     [B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=1,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 810: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(A45,D45,E45):2
     [Z44>=A45,A45>=0,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=0,D45=1,C45=0,W44=0] 
* CE 811: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):3
     [Z44+1>=F45,F45>=2,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=D45+1,F45=A45+1,E45=1,C45=0,W44=0] 
* CE 812: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=1,C45=0,W44=0] 
* CE 813: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):2+ appendD(D45,E45,E45):1
     [E45>=2,Z44>=2,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,D45=0,A45=0,W44=0] 
* CE 814: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):2+ appendD(A45,D45,E45):2
     [Z44>=A45,D45>=2,A45>=0,Z44>=2,Z44+D45=Y44,Z44+D45=X44+1,Z44+D45=V,D45=C45+1,D45=B45+1,E45=0,W44=0] 
* CE 815: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):2+ appendD(A45,D45,E45):3
     [E45>=A45+2,Z44>=A45,A45>=1,Z44>=2,Z44+E45=Y44+A45,Z44+E45=X44+A45+1,Z44+E45=V+A45,E45=A45+D45,E45=A45+C45+1,E45=A45+B45+1,W44=0] 
* CE 816: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):2+ appendD(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,D45>=2,Z44>=2,Z44+D45=Y44,Z44+D45=X44+1,Z44+D45=V,D45=C45+1,D45=B45+1,W44=0] 
* CE 817: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(D45,E45,E45):1
     [B45+1>=E45,E45>=1,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,D45=0,A45=0,W44=0] 
* CE 818: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):2
     [B45+1>=D45,Z44>=A45,D45>=1,A45>=0,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=C45+1,E45=0,W44=0] 
* CE 819: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):3
     [A45+B45+1>=E45,E45>=A45+1,Z44>=A45,A45>=1,B45>=2,Z44>=2,E45=A45+D45,E45=A45+C45+1,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,W44=0] 
* CE 820: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):2+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):4
     [A45>=E45,B45+1>=D45,Z44>=A45,E45>=1,D45>=1,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=C45+1,W44=0] 
* CE 821: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):3+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,V,V):1
     [V>=1,V=W44+1,D45=0,C45=0,B45=0,A45=0,Z44=0,Y44=1,X44=0] 
* CE 822: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):3+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,V,E45):2
     [V>=1,V=W44+1,E45=0,D45=0,C45=0,B45=0,A45=0,Z44=0,Y44=1,X44=0] 
* CE 823: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,E45,E45):1
     [Z44+B45>=1,E45>=2,B45>=0,Z44>=0,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,D45=0,C45=0,A45=0] 
* CE 824: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):1+ appendD(D45,E45,F45):2
     [Z44+B45>=1,E45>=2,B45>=0,Z44>=0,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,F45=0,D45=0,C45=0,A45=0] 
* CE 825: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,B45):2+ appendD(C45,D45,D45):1
     [D45>=B45+2,B45>=1,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,C45=0,A45=0] 
* CE 826: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,B45):2+ appendD(C45,D45,E45):2
     [D45>=B45+2,B45>=1,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,E45=0,C45=0,A45=0] 
* CE 827: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):3+ appendD(D45,E45,E45):1
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=0,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,D45=0,A45=0] 
* CE 828: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):1+ quicksortD(B45,C45):3+ appendD(D45,E45,F45):2
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=0,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,F45=0,D45=0,A45=0] 
* CE 829: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):1+ appendD(Z44,C45,D45):2
     [C45>=2,Z44>=1,A45>=0,Z44+A45+C45=V,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+1,D45=0,B45=0] 
* CE 830: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):1+ appendD(Z44,C45,D45):3
     [D45>=Z44+2,Z44>=1,A45>=0,D45=Z44+C45,Z44+A45+1=Y44,Z44+A45=X44,D45=W44+Z44+1,A45+D45=V,B45=0] 
* CE 831: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):1+ appendD(Z44,C45,D45):4
     [Z44>=D45,D45>=1,C45>=2,A45>=0,Z44+A45+C45=V,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+1,B45=0] 
* CE 832: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,A45):2+ appendD(Z44,B45,C45):2
     [B45>=A45+2,Z44>=1,A45>=1,Z44+A45+1=Y44,Z44+A45=X44,B45=W44+A45+1,Z44+B45=V,C45=0] 
* CE 833: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,A45):2+ appendD(Z44,B45,V):3
     [V>=Z44+A45+2,Z44>=1,A45>=1,V=W44+Z44+A45+1,V=Z44+B45,Z44+A45+1=Y44,Z44+A45=X44] 
* CE 834: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,A45):2+ appendD(Z44,B45,C45):4
     [Z44>=C45,B45>=A45+2,C45>=1,A45>=1,Z44+A45+1=Y44,Z44+A45=X44,B45=W44+A45+1,Z44+B45=V] 
* CE 835: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):2
     [C45>=B45+2,A45>=B45,Z44>=1,B45>=0,A45>=2,Z44+A45+C45=V+B45,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+B45+1,D45=0] 
* CE 836: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):3
     [D45>=Z44+B45+2,A45>=B45,Z44>=1,B45>=0,A45>=2,D45=W44+Z44+B45+1,A45+D45=V+B45,D45=Z44+C45,Z44+A45+1=Y44,Z44+A45=X44] 
* CE 837: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,Z44):2+ quicksortD(A45,B45):3+ appendD(Z44,C45,D45):4
     [Z44>=D45,C45>=B45+2,A45>=B45,D45>=1,B45>=0,A45>=2,Z44+A45+C45=V+B45,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+B45+1] 
* CE 838: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(D45,E45,E45):1
     [E45>=2,B45>=0,Z44>=2,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,D45=0,C45=0,A45=0] 
* CE 839: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(A45,D45,E45):2
     [Z44>=A45,D45>=2,A45>=0,B45>=0,Z44>=2,Z44+B45+D45=V,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+1,E45=0,C45=0] 
* CE 840: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(A45,D45,E45):3
     [E45>=A45+2,Z44>=A45,A45>=1,B45>=0,Z44>=2,Z44+B45+E45=V+A45,E45=A45+D45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+A45+1,C45=0] 
* CE 841: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):1+ appendD(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,D45>=2,B45>=0,Z44>=2,Z44+B45+D45=V,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+1,C45=0] 
* CE 842: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,B45):2+ appendD(C45,D45,D45):1
     [D45>=B45+2,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,C45=0,A45=0] 
* CE 843: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,B45):2+ appendD(A45,C45,D45):2
     [Z44>=A45,C45>=B45+2,A45>=0,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,C45=W44+B45+1,Z44+C45=V,D45=0] 
* CE 844: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,B45):2+ appendD(A45,C45,D45):3
     [D45>=A45+B45+2,Z44>=A45,A45>=1,B45>=1,Z44>=2,D45=W44+A45+B45+1,Z44+D45=V+A45,D45=A45+C45,Z44+B45+1=Y44,Z44+B45=X44] 
* CE 845: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,B45):2+ appendD(A45,C45,D45):4
     [A45>=D45,Z44>=A45,C45>=B45+2,D45>=1,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,C45=W44+B45+1,Z44+C45=V] 
* CE 846: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(D45,E45,E45):1
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=2,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,D45=0,A45=0] 
* CE 847: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):2
     [Z44>=A45,D45>=C45+2,B45>=C45,A45>=0,C45>=0,B45>=2,Z44>=2,Z44+B45+D45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+C45+1,E45=0] 
* CE 848: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):3
     [E45>=A45+C45+2,Z44>=A45,B45>=C45,A45>=1,C45>=0,B45>=2,Z44>=2,Z44+B45+E45=V+A45+C45,E45=W44+A45+C45+1,E45=A45+D45,Z44+B45+1=Y44,Z44+B45=X44] 
* CE 849: start(V,V3,V37,V44) = 2+ splitD(W44,X44,Y44):5+ quicksortD(Z44,A45):3+ quicksortD(B45,C45):3+ appendD(A45,D45,E45):4
     [A45>=E45,Z44>=A45,D45>=C45+2,B45>=C45,E45>=1,C45>=0,B45>=2,Z44>=2,Z44+B45+D45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+C45+1] 
* CE 850: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):1
     [X44>=0,W44>=0,W44+X44+1=V,Y44=0] 
* CE 851: start(V,V3,V37,V44) = 1+ splitD(W44,X44,V):2
     [V>=2,V=X44+1,W44=0] 
* CE 852: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):3
     [W44>=0,W44+1=V,Y44=1,X44=0] 
* CE 853: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):4
     [X44>=2,X44=W44+1,2*X44=V,Y44=0] 
* CE 854: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):5
     [Y44>=2,W44>=1,W44+Y44=V,Y44=X44+1] 
* CE 855: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Z44):1+ appendD(A45,B45,B45):1
     [B45>=1,Y44>=0,W44>=0,W44+Y44+1=V,B45=V3+1,A45=0,Z44=0,X44=0] 
* CE 856: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Z44):1+ appendD(A45,B45,C45):2
     [B45>=1,Y44>=0,W44>=0,W44+Y44+1=V,B45=V3+1,C45=0,A45=0,Z44=0,X44=0] 
* CE 857: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Y44):2+ appendD(Z44,A45,A45):1
     [A45>=Y44+1,Y44>=1,W44>=0,A45=V3+Y44+1,W44+Y44+1=V,Z44=0,X44=0] 
* CE 858: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Y44):2+ appendD(Z44,A45,B45):2
     [A45>=Y44+1,Y44>=1,W44>=0,A45=V3+Y44+1,W44+Y44+1=V,B45=0,Z44=0,X44=0] 
* CE 859: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Z44):3+ appendD(A45,B45,B45):1
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=0,B45=V3+Z44+1,W44+Y44+1=V,A45=0,X44=0] 
* CE 860: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):1+ quicksortD(Y44,Z44):3+ appendD(A45,B45,C45):2
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=0,B45=V3+Z44+1,W44+Y44+1=V,C45=0,A45=0,X44=0] 
* CE 861: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):1+ appendD(W44,Z44,A45):2
     [Z44>=1,W44>=1,X44>=0,W44+X44+1=V,Z44=V3+1,A45=0,Y44=0] 
* CE 862: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):1+ appendD(W44,Z44,A45):3
     [A45>=W44+1,W44>=1,X44>=0,A45=W44+Z44,A45=V3+W44+1,W44+X44+1=V,Y44=0] 
* CE 863: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):1+ appendD(W44,Z44,A45):4
     [W44>=A45,A45>=1,Z44>=1,X44>=0,W44+X44+1=V,Z44=V3+1,Y44=0] 
* CE 864: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,X44):2+ appendD(W44,Y44,Z44):2
     [Y44>=X44+1,W44>=1,X44>=1,Y44=V3+X44+1,W44+X44+1=V,Z44=0] 
* CE 865: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,X44):2+ appendD(W44,Y44,Z44):3
     [Z44>=W44+X44+1,W44>=1,X44>=1,Z44=V3+W44+X44+1,Z44=W44+Y44,W44+X44+1=V] 
* CE 866: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,X44):2+ appendD(W44,Y44,Z44):4
     [W44>=Z44,Y44>=X44+1,Z44>=1,X44>=1,Y44=V3+X44+1,W44+X44+1=V] 
* CE 867: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):3+ appendD(W44,Z44,A45):2
     [Z44>=Y44+1,X44>=Y44,W44>=1,Y44>=0,X44>=2,Z44=V3+Y44+1,W44+X44+1=V,A45=0] 
* CE 868: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):3+ appendD(W44,Z44,A45):3
     [A45>=W44+Y44+1,X44>=Y44,W44>=1,Y44>=0,X44>=2,A45=V3+W44+Y44+1,A45=W44+Z44,W44+X44+1=V] 
* CE 869: start(V,V3,V37,V44) = 1+ quicksortD(W44,W44):2+ quicksortD(X44,Y44):3+ appendD(W44,Z44,A45):4
     [W44>=A45,Z44>=Y44+1,X44>=Y44,A45>=1,Y44>=0,X44>=2,Z44=V3+Y44+1,W44+X44+1=V] 
* CE 870: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):1+ appendD(A45,B45,B45):1
     [B45>=1,Y44>=0,W44>=2,W44+Y44+1=V,B45=V3+1,A45=0,Z44=0,X44=0] 
* CE 871: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):1+ appendD(X44,A45,B45):2
     [W44>=X44,A45>=1,X44>=0,Y44>=0,W44>=2,W44+Y44+1=V,A45=V3+1,B45=0,Z44=0] 
* CE 872: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):1+ appendD(X44,A45,B45):3
     [B45>=X44+1,W44>=X44,X44>=1,Y44>=0,W44>=2,B45=X44+A45,B45=V3+X44+1,W44+Y44+1=V,Z44=0] 
* CE 873: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):1+ appendD(X44,A45,B45):4
     [X44>=B45,W44>=X44,B45>=1,A45>=1,Y44>=0,W44>=2,W44+Y44+1=V,A45=V3+1,Z44=0] 
* CE 874: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Y44):2+ appendD(Z44,A45,A45):1
     [A45>=Y44+1,Y44>=1,W44>=2,A45=V3+Y44+1,W44+Y44+1=V,Z44=0,X44=0] 
* CE 875: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Y44):2+ appendD(X44,Z44,A45):2
     [W44>=X44,Z44>=Y44+1,X44>=0,Y44>=1,W44>=2,Z44=V3+Y44+1,W44+Y44+1=V,A45=0] 
* CE 876: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Y44):2+ appendD(X44,Z44,A45):3
     [A45>=X44+Y44+1,W44>=X44,X44>=1,Y44>=1,W44>=2,A45=V3+X44+Y44+1,A45=X44+Z44,W44+Y44+1=V] 
* CE 877: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Y44):2+ appendD(X44,Z44,A45):4
     [X44>=A45,W44>=X44,Z44>=Y44+1,A45>=1,Y44>=1,W44>=2,Z44=V3+Y44+1,W44+Y44+1=V] 
* CE 878: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):3+ appendD(A45,B45,B45):1
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=2,B45=V3+Z44+1,W44+Y44+1=V,A45=0,X44=0] 
* CE 879: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):3+ appendD(X44,A45,B45):2
     [W44>=X44,A45>=Z44+1,Y44>=Z44,X44>=0,Z44>=0,Y44>=2,W44>=2,A45=V3+Z44+1,W44+Y44+1=V,B45=0] 
* CE 880: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):3+ appendD(X44,A45,B45):3
     [B45>=X44+Z44+1,W44>=X44,Y44>=Z44,X44>=1,Z44>=0,Y44>=2,W44>=2,B45=V3+X44+Z44+1,B45=X44+A45,W44+Y44+1=V] 
* CE 881: start(V,V3,V37,V44) = 1+ quicksortD(W44,X44):3+ quicksortD(Y44,Z44):3+ appendD(X44,A45,B45):4
     [X44>=B45,W44>=X44,A45>=Z44+1,Y44>=Z44,B45>=1,Z44>=0,Y44>=2,W44>=2,A45=V3+Z44+1,W44+Y44+1=V] 
* CE 882: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,E45,F45):1
     [Z44+B45>=1,B45>=0,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=1,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 883: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,E45,F45):2
     [Z44+B45>=1,B45>=0,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=0,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 884: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):2+ append(D45,E45,E45):1
     [E45>=2,Z44>=0,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,D45=0,A45=0,W44=0] 
* CE 885: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):2+ append(D45,E45,F45):2
     [E45>=2,Z44>=0,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,F45=0,D45=0,A45=0,W44=0] 
* CE 886: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):3+ append(D45,E45,E45):1
     [B45+1>=E45,E45>=1,B45>=2,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,D45=0,A45=0,W44=0] 
* CE 887: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):1+ quicksort(B45,C45):3+ append(D45,E45,F45):2
     [B45+1>=E45,E45>=1,B45>=2,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,F45=0,D45=0,A45=0,W44=0] 
* CE 888: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):1+ append(Z44,C45,D45):2
     [Z44>=1,A45>=0,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,D45=0,C45=1,B45=0,W44=0] 
* CE 889: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):2+ quicksort(B45,C45):1+ append(D45,E45,F45):3
     [F45>=2,B45>=0,B45+F45=Y44,B45+F45=X44+1,B45+F45=V,F45=D45+1,F45=A45+1,F45=Z44+1,E45=1,C45=0,W44=0] 
* CE 890: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):1+ append(Z44,C45,D45):4
     [Z44>=D45,D45>=1,A45>=0,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=1,B45=0,W44=0] 
* CE 891: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):2+ append(Z44,C45,D45):2
     [C45>=2,Z44>=1,Z44+C45=Y44,Z44+C45=X44+1,Z44+C45=V,C45=B45+1,C45=A45+1,D45=0,W44=0] 
* CE 892: start(V,V3,V37,V44) = 2+ split(W44,X44,V):2+ quicksort(Y44,Y44):2+ quicksort(Z44,A45):2+ append(Y44,B45,V):3
     [V>=Y44+2,Y44>=1,V=Y44+B45,V=Y44+A45+1,V=Y44+Z44+1,V=X44+1,W44=0] 
* CE 893: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):2+ append(Z44,C45,D45):4
     [Z44>=D45,D45>=1,C45>=2,Z44+C45=Y44,Z44+C45=X44+1,Z44+C45=V,C45=B45+1,C45=A45+1,W44=0] 
* CE 894: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):2
     [A45+1>=C45,C45>=1,Z44>=1,A45>=2,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=B45+1,D45=0,W44=0] 
* CE 895: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):3
     [Z44+A45+1>=D45,D45>=Z44+1,Z44>=1,A45>=2,D45=Z44+C45,D45=Z44+B45+1,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,W44=0] 
* CE 896: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):4
     [Z44>=D45,A45+1>=C45,D45>=1,C45>=1,A45>=2,Z44+A45+1=Y44,Z44+A45=X44,Z44+A45+1=V,C45=B45+1,W44=0] 
* CE 897: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(D45,E45,F45):1
     [B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=1,E45=1,D45=0,C45=0,A45=0,W44=0] 
* CE 898: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(A45,D45,E45):2
     [Z44>=A45,A45>=0,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=0,D45=1,C45=0,W44=0] 
* CE 899: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(D45,E45,F45):3
     [Z44+1>=F45,F45>=2,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,F45=D45+1,F45=A45+1,E45=1,C45=0,W44=0] 
* CE 900: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,B45>=0,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=1,C45=0,W44=0] 
* CE 901: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):2+ append(D45,E45,E45):1
     [E45>=2,Z44>=2,Z44+E45=Y44,Z44+E45=X44+1,Z44+E45=V,E45=C45+1,E45=B45+1,D45=0,A45=0,W44=0] 
* CE 902: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):2+ append(A45,D45,E45):2
     [Z44>=A45,D45>=2,A45>=0,Z44>=2,Z44+D45=Y44,Z44+D45=X44+1,Z44+D45=V,D45=C45+1,D45=B45+1,E45=0,W44=0] 
* CE 903: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):2+ append(A45,D45,E45):3
     [E45>=A45+2,Z44>=A45,A45>=1,Z44>=2,Z44+E45=Y44+A45,Z44+E45=X44+A45+1,Z44+E45=V+A45,E45=A45+D45,E45=A45+C45+1,E45=A45+B45+1,W44=0] 
* CE 904: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):2+ append(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,D45>=2,Z44>=2,Z44+D45=Y44,Z44+D45=X44+1,Z44+D45=V,D45=C45+1,D45=B45+1,W44=0] 
* CE 905: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(D45,E45,E45):1
     [B45+1>=E45,E45>=1,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,E45=C45+1,D45=0,A45=0,W44=0] 
* CE 906: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):2
     [B45+1>=D45,Z44>=A45,D45>=1,A45>=0,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=C45+1,E45=0,W44=0] 
* CE 907: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):3
     [A45+B45+1>=E45,E45>=A45+1,Z44>=A45,A45>=1,B45>=2,Z44>=2,E45=A45+D45,E45=A45+C45+1,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,W44=0] 
* CE 908: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):2+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):4
     [A45>=E45,B45+1>=D45,Z44>=A45,E45>=1,D45>=1,B45>=2,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,Z44+B45+1=V,D45=C45+1,W44=0] 
* CE 909: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):3+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,V,V):1
     [V>=1,V=W44+1,D45=0,C45=0,B45=0,A45=0,Z44=0,Y44=1,X44=0] 
* CE 910: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):3+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,V,E45):2
     [V>=1,V=W44+1,E45=0,D45=0,C45=0,B45=0,A45=0,Z44=0,Y44=1,X44=0] 
* CE 911: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,E45,E45):1
     [Z44+B45>=1,E45>=2,B45>=0,Z44>=0,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,D45=0,C45=0,A45=0] 
* CE 912: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,C45):1+ append(D45,E45,F45):2
     [Z44+B45>=1,E45>=2,B45>=0,Z44>=0,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,F45=0,D45=0,C45=0,A45=0] 
* CE 913: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,B45):2+ append(C45,D45,D45):1
     [D45>=B45+2,B45>=1,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,C45=0,A45=0] 
* CE 914: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,B45):2+ append(C45,D45,E45):2
     [D45>=B45+2,B45>=1,Z44>=0,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,E45=0,C45=0,A45=0] 
* CE 915: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,C45):3+ append(D45,E45,E45):1
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=0,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,D45=0,A45=0] 
* CE 916: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):1+ quicksort(B45,C45):3+ append(D45,E45,F45):2
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=0,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,F45=0,D45=0,A45=0] 
* CE 917: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):1+ append(Z44,C45,D45):2
     [C45>=2,Z44>=1,A45>=0,Z44+A45+C45=V,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+1,D45=0,B45=0] 
* CE 918: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):1+ append(Z44,C45,D45):3
     [D45>=Z44+2,Z44>=1,A45>=0,D45=Z44+C45,Z44+A45+1=Y44,Z44+A45=X44,D45=W44+Z44+1,A45+D45=V,B45=0] 
* CE 919: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):1+ append(Z44,C45,D45):4
     [Z44>=D45,D45>=1,C45>=2,A45>=0,Z44+A45+C45=V,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+1,B45=0] 
* CE 920: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,A45):2+ append(Z44,B45,C45):2
     [B45>=A45+2,Z44>=1,A45>=1,Z44+A45+1=Y44,Z44+A45=X44,B45=W44+A45+1,Z44+B45=V,C45=0] 
* CE 921: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,A45):2+ append(Z44,B45,V):3
     [V>=Z44+A45+2,Z44>=1,A45>=1,V=W44+Z44+A45+1,V=Z44+B45,Z44+A45+1=Y44,Z44+A45=X44] 
* CE 922: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,A45):2+ append(Z44,B45,C45):4
     [Z44>=C45,B45>=A45+2,C45>=1,A45>=1,Z44+A45+1=Y44,Z44+A45=X44,B45=W44+A45+1,Z44+B45=V] 
* CE 923: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):2
     [C45>=B45+2,A45>=B45,Z44>=1,B45>=0,A45>=2,Z44+A45+C45=V+B45,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+B45+1,D45=0] 
* CE 924: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):3
     [D45>=Z44+B45+2,A45>=B45,Z44>=1,B45>=0,A45>=2,D45=W44+Z44+B45+1,A45+D45=V+B45,D45=Z44+C45,Z44+A45+1=Y44,Z44+A45=X44] 
* CE 925: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,Z44):2+ quicksort(A45,B45):3+ append(Z44,C45,D45):4
     [Z44>=D45,C45>=B45+2,A45>=B45,D45>=1,B45>=0,A45>=2,Z44+A45+C45=V+B45,Z44+A45+1=Y44,Z44+A45=X44,C45=W44+B45+1] 
* CE 926: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(D45,E45,E45):1
     [E45>=2,B45>=0,Z44>=2,Z44+B45+E45=V,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+1,D45=0,C45=0,A45=0] 
* CE 927: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(A45,D45,E45):2
     [Z44>=A45,D45>=2,A45>=0,B45>=0,Z44>=2,Z44+B45+D45=V,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+1,E45=0,C45=0] 
* CE 928: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(A45,D45,E45):3
     [E45>=A45+2,Z44>=A45,A45>=1,B45>=0,Z44>=2,Z44+B45+E45=V+A45,E45=A45+D45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+A45+1,C45=0] 
* CE 929: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):1+ append(A45,D45,E45):4
     [A45>=E45,Z44>=A45,E45>=1,D45>=2,B45>=0,Z44>=2,Z44+B45+D45=V,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+1,C45=0] 
* CE 930: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,B45):2+ append(C45,D45,D45):1
     [D45>=B45+2,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+B45+1,Z44+D45=V,C45=0,A45=0] 
* CE 931: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,B45):2+ append(A45,C45,D45):2
     [Z44>=A45,C45>=B45+2,A45>=0,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,C45=W44+B45+1,Z44+C45=V,D45=0] 
* CE 932: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,B45):2+ append(A45,C45,D45):3
     [D45>=A45+B45+2,Z44>=A45,A45>=1,B45>=1,Z44>=2,D45=W44+A45+B45+1,Z44+D45=V+A45,D45=A45+C45,Z44+B45+1=Y44,Z44+B45=X44] 
* CE 933: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,B45):2+ append(A45,C45,D45):4
     [A45>=D45,Z44>=A45,C45>=B45+2,D45>=1,B45>=1,Z44>=2,Z44+B45+1=Y44,Z44+B45=X44,C45=W44+B45+1,Z44+C45=V] 
* CE 934: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(D45,E45,E45):1
     [E45>=C45+2,B45>=C45,C45>=0,B45>=2,Z44>=2,Z44+B45+E45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,E45=W44+C45+1,D45=0,A45=0] 
* CE 935: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):2
     [Z44>=A45,D45>=C45+2,B45>=C45,A45>=0,C45>=0,B45>=2,Z44>=2,Z44+B45+D45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+C45+1,E45=0] 
* CE 936: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):3
     [E45>=A45+C45+2,Z44>=A45,B45>=C45,A45>=1,C45>=0,B45>=2,Z44>=2,Z44+B45+E45=V+A45+C45,E45=W44+A45+C45+1,E45=A45+D45,Z44+B45+1=Y44,Z44+B45=X44] 
* CE 937: start(V,V3,V37,V44) = 2+ split(W44,X44,Y44):5+ quicksort(Z44,A45):3+ quicksort(B45,C45):3+ append(A45,D45,E45):4
     [A45>=E45,Z44>=A45,D45>=C45+2,B45>=C45,E45>=1,C45>=0,B45>=2,Z44>=2,Z44+B45+D45=V+C45,Z44+B45+1=Y44,Z44+B45=X44,D45=W44+C45+1] 
* CE 938: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):1
     [X44>=0,W44>=0,W44+X44+1=V,Y44=0] 
* CE 939: start(V,V3,V37,V44) = 1+ split(W44,X44,V):2
     [V>=2,V=X44+1,W44=0] 
* CE 940: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):3
     [W44>=0,W44+1=V,Y44=1,X44=0] 
* CE 941: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):4
     [X44>=2,X44=W44+1,2*X44=V,Y44=0] 
* CE 942: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):5
     [Y44>=2,W44>=1,W44+Y44=V,Y44=X44+1] 
* CE 943: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Z44):1+ append(A45,B45,B45):1
     [B45>=1,Y44>=0,W44>=0,W44+Y44+1=V,B45=V3+1,A45=0,Z44=0,X44=0] 
* CE 944: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Z44):1+ append(A45,B45,C45):2
     [B45>=1,Y44>=0,W44>=0,W44+Y44+1=V,B45=V3+1,C45=0,A45=0,Z44=0,X44=0] 
* CE 945: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Y44):2+ append(Z44,A45,A45):1
     [A45>=Y44+1,Y44>=1,W44>=0,A45=V3+Y44+1,W44+Y44+1=V,Z44=0,X44=0] 
* CE 946: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Y44):2+ append(Z44,A45,B45):2
     [A45>=Y44+1,Y44>=1,W44>=0,A45=V3+Y44+1,W44+Y44+1=V,B45=0,Z44=0,X44=0] 
* CE 947: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Z44):3+ append(A45,B45,B45):1
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=0,B45=V3+Z44+1,W44+Y44+1=V,A45=0,X44=0] 
* CE 948: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):1+ quicksort(Y44,Z44):3+ append(A45,B45,C45):2
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=0,B45=V3+Z44+1,W44+Y44+1=V,C45=0,A45=0,X44=0] 
* CE 949: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):1+ append(W44,Z44,A45):2
     [Z44>=1,W44>=1,X44>=0,W44+X44+1=V,Z44=V3+1,A45=0,Y44=0] 
* CE 950: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):1+ append(W44,Z44,A45):3
     [A45>=W44+1,W44>=1,X44>=0,A45=W44+Z44,A45=V3+W44+1,W44+X44+1=V,Y44=0] 
* CE 951: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):1+ append(W44,Z44,A45):4
     [W44>=A45,A45>=1,Z44>=1,X44>=0,W44+X44+1=V,Z44=V3+1,Y44=0] 
* CE 952: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,X44):2+ append(W44,Y44,Z44):2
     [Y44>=X44+1,W44>=1,X44>=1,Y44=V3+X44+1,W44+X44+1=V,Z44=0] 
* CE 953: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,X44):2+ append(W44,Y44,Z44):3
     [Z44>=W44+X44+1,W44>=1,X44>=1,Z44=V3+W44+X44+1,Z44=W44+Y44,W44+X44+1=V] 
* CE 954: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,X44):2+ append(W44,Y44,Z44):4
     [W44>=Z44,Y44>=X44+1,Z44>=1,X44>=1,Y44=V3+X44+1,W44+X44+1=V] 
* CE 955: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):3+ append(W44,Z44,A45):2
     [Z44>=Y44+1,X44>=Y44,W44>=1,Y44>=0,X44>=2,Z44=V3+Y44+1,W44+X44+1=V,A45=0] 
* CE 956: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):3+ append(W44,Z44,A45):3
     [A45>=W44+Y44+1,X44>=Y44,W44>=1,Y44>=0,X44>=2,A45=V3+W44+Y44+1,A45=W44+Z44,W44+X44+1=V] 
* CE 957: start(V,V3,V37,V44) = 1+ quicksort(W44,W44):2+ quicksort(X44,Y44):3+ append(W44,Z44,A45):4
     [W44>=A45,Z44>=Y44+1,X44>=Y44,A45>=1,Y44>=0,X44>=2,Z44=V3+Y44+1,W44+X44+1=V] 
* CE 958: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):1+ append(A45,B45,B45):1
     [B45>=1,Y44>=0,W44>=2,W44+Y44+1=V,B45=V3+1,A45=0,Z44=0,X44=0] 
* CE 959: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):1+ append(X44,A45,B45):2
     [W44>=X44,A45>=1,X44>=0,Y44>=0,W44>=2,W44+Y44+1=V,A45=V3+1,B45=0,Z44=0] 
* CE 960: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):1+ append(X44,A45,B45):3
     [B45>=X44+1,W44>=X44,X44>=1,Y44>=0,W44>=2,B45=X44+A45,B45=V3+X44+1,W44+Y44+1=V,Z44=0] 
* CE 961: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):1+ append(X44,A45,B45):4
     [X44>=B45,W44>=X44,B45>=1,A45>=1,Y44>=0,W44>=2,W44+Y44+1=V,A45=V3+1,Z44=0] 
* CE 962: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Y44):2+ append(Z44,A45,A45):1
     [A45>=Y44+1,Y44>=1,W44>=2,A45=V3+Y44+1,W44+Y44+1=V,Z44=0,X44=0] 
* CE 963: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Y44):2+ append(X44,Z44,A45):2
     [W44>=X44,Z44>=Y44+1,X44>=0,Y44>=1,W44>=2,Z44=V3+Y44+1,W44+Y44+1=V,A45=0] 
* CE 964: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Y44):2+ append(X44,Z44,A45):3
     [A45>=X44+Y44+1,W44>=X44,X44>=1,Y44>=1,W44>=2,A45=V3+X44+Y44+1,A45=X44+Z44,W44+Y44+1=V] 
* CE 965: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Y44):2+ append(X44,Z44,A45):4
     [X44>=A45,W44>=X44,Z44>=Y44+1,A45>=1,Y44>=1,W44>=2,Z44=V3+Y44+1,W44+Y44+1=V] 
* CE 966: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):3+ append(A45,B45,B45):1
     [B45>=Z44+1,Y44>=Z44,Z44>=0,Y44>=2,W44>=2,B45=V3+Z44+1,W44+Y44+1=V,A45=0,X44=0] 
* CE 967: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):3+ append(X44,A45,B45):2
     [W44>=X44,A45>=Z44+1,Y44>=Z44,X44>=0,Z44>=0,Y44>=2,W44>=2,A45=V3+Z44+1,W44+Y44+1=V,B45=0] 
* CE 968: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):3+ append(X44,A45,B45):3
     [B45>=X44+Z44+1,W44>=X44,Y44>=Z44,X44>=1,Z44>=0,Y44>=2,W44>=2,B45=V3+X44+Z44+1,B45=X44+A45,W44+Y44+1=V] 
* CE 969: start(V,V3,V37,V44) = 1+ quicksort(W44,X44):3+ quicksort(Y44,Z44):3+ append(X44,A45,B45):4
     [X44>=B45,W44>=X44,A45>=Z44+1,Y44>=Z44,B45>=1,Z44>=0,Y44>=2,W44>=2,A45=V3+Z44+1,W44+Y44+1=V] 
* CE 970: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):1+ fun14(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=0,W44>=0,W44+Z44+1=V,A45=0,Y44=0,X44=0] 
* CE 971: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):2+ fun14(Z44,A45,B45,C45):1
     [C45>=3,C45=Z44+1,C45=Y44+1,C45=X44+2,C45=V+1,B45=0,A45=0,W44=0,V3=0] 
* CE 972: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):2+ fun14(Y44,Z44,A45,B45):2
     [A45>=0,Y44>=2,Y44+A45=V,Y44=X44+1,B45=0,Z44=0,W44=0,V3=0] 
* CE 973: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):2+ fun14(Y44,Z44,A45,B45):3
     [B45>=Y44+2,Y44>=2,B45=Y44+A45+1,Y44=X44+1,B45=V+1,Z44=0,W44=0,V3=0] 
* CE 974: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):3+ fun14(Z44,A45,B45,C45):1
     [C45=2,B45=0,A45=0,Z44=1,Y44=1,X44=0,W44=0,V3=0,V=1] 
* CE 975: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):3+ fun14(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=0,Z44+1=V,A45=0,Y44=1,X44=1,W44=0] 
* CE 976: start(V,V3,V37,V44) = 1+ splitD(W44,X44,Y44):3+ fun14(Z44,A45,B45,C45):3
     [C45>=3,C45=B45+2,C45=V+1,A45=0,Z44=1,Y44=1,X44=0,W44=0,V3=0] 
* CE 977: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):3+ fun14(Y44,V3,Z44,A45):4
     [V3>=1,A45=0,Z44=0,Y44=1,X44=1,W44=0,V=1] 
* CE 978: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):3+ fun14(Y44,V3,Z44,A45):5
     [V3>=1,A45=2,Z44=0,Y44=1,X44=1,W44=0,V=1] 
* CE 979: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):3+ fun14(Y44,V3,V3,Z44):6
     [V3>=1,V3+1=V,Z44=0,Y44=1,X44=1,W44=0] 
* CE 980: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):3+ fun14(Y44,V3,Z44,A45):7
     [A45>=3,V3>=1,A45=Z44+2,A45=V+1,Y44=1,X44=1,W44=0] 
* CE 981: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):4+ fun14(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=1,V3+Z44+2=V,V3+1=W44,A45=0,Y44=0,X44=0] 
* CE 982: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):5+ fun14(X44,V3,Y44,Z44):2
     [Y44>=0,V3>=1,X44>=2,X44+Y44=V,X44=W44+1,Z44=0] 
* CE 983: start(V,V3,V37,V44) = 1+ splitD(V3,W44,V):5+ fun14(V,V3,X44,Y44):4
     [V3>=1,V>=2,V=W44+1,Y44=0,X44=0] 
* CE 984: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):5+ fun14(Y44,V3,Z44,A45):5
     [A45>=3,V3>=1,A45=Y44+1,A45=X44+1,A45=W44+2,A45=V+1,Z44=0] 
* CE 985: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):5+ fun14(X44,V3,V3,Y44):6
     [V3>=1,X44>=2,V3+X44=V,X44=W44+1,Y44=0] 
* CE 986: start(V,V3,V37,V44) = 1+ splitD(V3,W44,X44):5+ fun14(X44,V3,Y44,Z44):7
     [Z44>=X44+2,V3>=1,X44>=2,Z44=X44+Y44+1,X44=W44+1,Z44=V+1] 
* CE 987: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):1+ fun11(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=0,W44>=0,W44+Z44+1=V,A45=0,Y44=0,X44=0] 
* CE 988: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):2+ fun11(Z44,A45,B45,C45):1
     [C45>=3,C45=Z44+1,C45=Y44+1,C45=X44+2,C45=V+1,B45=0,A45=0,W44=0,V3=0] 
* CE 989: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):2+ fun11(Y44,Z44,A45,B45):2
     [A45>=0,Y44>=2,Y44+A45=V,Y44=X44+1,B45=0,Z44=0,W44=0,V3=0] 
* CE 990: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):2+ fun11(Y44,Z44,A45,B45):3
     [B45>=Y44+2,Y44>=2,B45=Y44+A45+1,Y44=X44+1,B45=V+1,Z44=0,W44=0,V3=0] 
* CE 991: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):3+ fun11(Z44,A45,B45,C45):1
     [C45=2,B45=0,A45=0,Z44=1,Y44=1,X44=0,W44=0,V3=0,V=1] 
* CE 992: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):3+ fun11(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=0,Z44+1=V,A45=0,Y44=1,X44=1,W44=0] 
* CE 993: start(V,V3,V37,V44) = 1+ split(W44,X44,Y44):3+ fun11(Z44,A45,B45,C45):3
     [C45>=3,C45=B45+2,C45=V+1,A45=0,Z44=1,Y44=1,X44=0,W44=0,V3=0] 
* CE 994: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):3+ fun11(Y44,V3,Z44,A45):4
     [V3>=1,A45=0,Z44=0,Y44=1,X44=1,W44=0,V=1] 
* CE 995: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):3+ fun11(Y44,V3,Z44,A45):5
     [V3>=1,A45=2,Z44=0,Y44=1,X44=1,W44=0,V=1] 
* CE 996: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):3+ fun11(Y44,V3,V3,Z44):6
     [V3>=1,V3+1=V,Z44=0,Y44=1,X44=1,W44=0] 
* CE 997: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):3+ fun11(Y44,V3,Z44,A45):7
     [A45>=3,V3>=1,A45=Z44+2,A45=V+1,Y44=1,X44=1,W44=0] 
* CE 998: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):4+ fun11(Y44,V3,Z44,A45):2
     [Z44>=0,V3>=1,V3+Z44+2=V,V3+1=W44,A45=0,Y44=0,X44=0] 
* CE 999: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):5+ fun11(X44,V3,Y44,Z44):2
     [Y44>=0,V3>=1,X44>=2,X44+Y44=V,X44=W44+1,Z44=0] 
* CE 1000: start(V,V3,V37,V44) = 1+ split(V3,W44,V):5+ fun11(V,V3,X44,Y44):4
     [V3>=1,V>=2,V=W44+1,Y44=0,X44=0] 
* CE 1001: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):5+ fun11(Y44,V3,Z44,A45):5
     [A45>=3,V3>=1,A45=Y44+1,A45=X44+1,A45=W44+2,A45=V+1,Z44=0] 
* CE 1002: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):5+ fun11(X44,V3,V3,Y44):6
     [V3>=1,X44>=2,V3+X44=V,X44=W44+1,Y44=0] 
* CE 1003: start(V,V3,V37,V44) = 1+ split(V3,W44,X44):5+ fun11(X44,V3,Y44,Z44):7
     [Z44>=X44+2,V3>=1,X44>=2,Z44=X44+Y44+1,X44=W44+1,Z44=V+1] 
* CE 1004: start(V,V3,V37,V44) = 1+ appendD(W44,V3,V3):1
     [V3>=0,V>=1,W44=0] 
* CE 1005: start(V,V3,V37,V44) = 1+ appendD(W44,V3,X44):2
     [V>=W44+1,V3>=0,W44>=0,X44=0] 
* CE 1006: start(V,V3,V37,V44) = 1+ appendD(W44,X44,Y44):3
     [Y44>=W44,V>=W44+1,W44>=1,Y44=W44+X44,Y44=V3+W44] 
* CE 1007: start(V,V3,V37,V44) = 1+ appendD(W44,V3,X44):4
     [W44>=X44,V>=W44+1,X44>=1,V3>=0] 
* CE 1008: start(V,V3,V37,V44) = 1+ append(W44,V3,V3):1
     [V3>=0,V>=1,W44=0] 
* CE 1009: start(V,V3,V37,V44) = 1+ append(W44,V3,X44):2
     [V>=W44+1,V3>=0,W44>=0,X44=0] 
* CE 1010: start(V,V3,V37,V44) = 1+ append(W44,X44,Y44):3
     [Y44>=W44,V>=W44+1,W44>=1,Y44=W44+X44,Y44=V3+W44] 
* CE 1011: start(V,V3,V37,V44) = 1+ append(W44,V3,X44):4
     [W44>=X44,V>=W44+1,X44>=1,V3>=0] 
* CE 1012: start(V,V3,V37,V44) = 0+ fun(W44,X44):1
     [X44=0,W44=0,V=0] 
* CE 1013: start(V,V3,V37,V44) = 0+ fun(W44,X44):2
     [X44>=2,X44=W44+1,X44=V+1] 
* CE 1014: start(V,V3,V37,V44) = 0+ fun(V,V):3
     [V>=1] 
* CE 1015: start(V,V3,V37,V44) = 0+ fun1(W44,X44,Y44):1
     [Y44=1,X44=0,W44=0,V3=0,V=0] 
* CE 1016: start(V,V3,V37,V44) = 0+ fun1(V,V3,W44):2
     [V3>=0,V>=0,W44=0] 
* CE 1017: start(V,V3,V37,V44) = 0+ fun1(W44,V3,X44):3
     [V3>=1,X44=1,W44=0,V=0] 
* CE 1018: start(V,V3,V37,V44) = 0+ fun1(W44,V3,X44):4
     [V3>=1,X44=2,W44=0,V=0] 
* CE 1019: start(V,V3,V37,V44) = 0+ fun1(V,W44,X44):5
     [V>=1,X44=0,W44=0,V3=0] 
* CE 1020: start(V,V3,V37,V44) = 0+ fun1(V,W44,X44):6
     [V>=1,X44=1,W44=0,V3=0] 
* CE 1021: start(V,V3,V37,V44) = 0+ fun1(V,W44,X44):7
     [V>=1,X44=2,W44=0,V3=0] 
* CE 1022: start(A,A,B,C) = 0+ fun1(A,A,D):8
     [A>=1,D=0] 
* CE 1023: start(V,V3,V37,V44) = 0+ fun1(V,V3,W44):9
     [V3>=1,V>=1,W44=1] 
* CE 1024: start(V,V3,V37,V44) = 0+ fun1(V,V3,W44):10
     [V3>=1,V>=1,W44=2] 
* CE 1025: start(V,V3,V37,V44) = 0+ append(W44,V3,V3):1
     [V3>=0,W44=0,V=0] 
* CE 1026: start(V,V3,V37,V44) = 0+ append(V,V3,W44):2
     [V3>=0,V>=0,W44=0] 
* CE 1027: start(V,V3,V37,V44) = 0+ append(V,W44,X44):3
     [X44>=V,V>=1,X44=V+W44,X44=V+V3] 
* CE 1028: start(V,V3,V37,V44) = 0+ append(V,V3,W44):4
     [V>=W44,W44>=1,V3>=0] 
* CE 1029: start(V,V3,V37,V44) = 0+ appendD(W44,V3,V3):1
     [V3>=0,W44=0,V=0] 
* CE 1030: start(V,V3,V37,V44) = 0+ appendD(V,V3,W44):2
     [V3>=0,V>=0,W44=0] 
* CE 1031: start(V,V3,V37,V44) = 0+ appendD(V,W44,X44):3
     [X44>=V,V>=1,X44=V+W44,X44=V+V3] 
* CE 1032: start(V,V3,V37,V44) = 0+ appendD(V,V3,W44):4
     [V>=W44,W44>=1,V3>=0] 
* CE 1033: start(V,V3,V37,V44) = 0+ quicksort(V,W44):1
     [V>=0,W44=0] 
* CE 1034: start(V,V3,V37,V44) = 0+ quicksort(V,V):2
     [V>=1] 
* CE 1035: start(V,V3,V37,V44) = 0+ quicksort(V,W44):3
     [V>=W44,W44>=0,V>=2] 
* CE 1036: start(V,V3,V37,V44) = 0+ quicksortD(V,W44):1
     [V>=0,W44=0] 
* CE 1037: start(V,V3,V37,V44) = 0+ quicksortD(V,V):2
     [V>=1] 
* CE 1038: start(V,V3,V37,V44) = 0+ quicksortD(V,W44):3
     [V>=W44,W44>=0,V>=2] 
* CE 1039: start(V,V3,V37,V44) = 0+ split(V,V3,W44):1
     [V3>=0,V>=0,W44=0] 
* CE 1040: start(V,V3,V37,V44) = 0+ split(W44,X44,Y44):2
     [Y44>=2,Y44=X44+1,Y44=V3+1,W44=0,V=0] 
* CE 1041: start(V,V3,V37,V44) = 0+ split(V,W44,X44):3
     [V>=0,X44=1,W44=0,V3=0] 
* CE 1042: start(V,V3,V37,V44) = 0+ split(W44,V3,X44):4
     [V3>=2,V3=W44+1,V3=V+1,X44=0] 
* CE 1043: start(V,V3,V37,V44) = 0+ split(V,W44,X44):5
     [X44>=2,V>=1,X44=W44+1,X44=V3+1] 
* CE 1044: start(V,V3,V37,V44) = 0+ fun11(W44,X44,Y44,Z44):1
     [Z44>=2,Z44=W44+1,Z44=V+1,Y44=0,X44=0,V37=0,V3=0] 
* CE 1045: start(V,V3,V37,V44) = 0+ fun11(V,V3,V37,W44):2
     [V37>=0,V3>=0,V>=0,W44=0] 
* CE 1046: start(V,V3,V37,V44) = 0+ fun11(V,W44,X44,Y44):3
     [Y44>=V+2,V>=1,Y44=V+X44+1,Y44=V+V37+1,W44=0,V3=0] 
* CE 1047: start(V,V3,V37,V44) = 0+ fun11(V,V3,W44,X44):4
     [V3>=1,V>=1,X44=0,W44=0,V37=0] 
* CE 1048: start(V,V3,V37,V44) = 0+ fun11(W44,V3,X44,Y44):5
     [Y44>=2,V3>=1,Y44=W44+1,Y44=V+1,X44=0,V37=0] 
* CE 1049: start(A,B,B,C) = 0+ fun11(A,B,B,D):6
     [B>=1,A>=1,D=0] 
* CE 1050: start(V,V3,V37,V44) = 0+ fun11(V,V3,W44,X44):7
     [X44>=V+2,V3>=1,V>=1,X44=V+W44+1,X44=V+V37+1] 
* CE 1051: start(V,V3,V37,V44) = 0+ fun12(W44,V3,V37,X44,Y44):1
     [Y44>=V3+V37+2,V37>=0,V3>=0,Y44=V3+V37+X44+2,Y44=V3+V37+V44+2,W44=1,V=1] 
* CE 1052: start(V,V3,V37,V44) = 0+ fun12(W44,V3,V37,X44,Y44):2
     [Y44>=V3+V37+2,V37>=0,V3>=0,Y44=V3+V37+X44+2,Y44=V3+V37+V44+2,W44=2,V=2] 
* CE 1053: start(V,V3,V37,V44) = 0+ fun12(V,V3,V37,V44,W44):3
     [V44>=0,V37>=0,V3>=0,V>=0,W44=0] 
* CE 1054: start(V,V3,V37,V44) = 0+ splitD(V,V3,W44):1
     [V3>=0,V>=0,W44=0] 
* CE 1055: start(V,V3,V37,V44) = 0+ splitD(W44,X44,Y44):2
     [Y44>=2,Y44=X44+1,Y44=V3+1,W44=0,V=0] 
* CE 1056: start(V,V3,V37,V44) = 0+ splitD(V,W44,X44):3
     [V>=0,X44=1,W44=0,V3=0] 
* CE 1057: start(V,V3,V37,V44) = 0+ splitD(W44,V3,X44):4
     [V3>=2,V3=W44+1,V3=V+1,X44=0] 
* CE 1058: start(V,V3,V37,V44) = 0+ splitD(V,W44,X44):5
     [X44>=2,V>=1,X44=W44+1,X44=V3+1] 
* CE 1059: start(V,V3,V37,V44) = 0+ fun14(W44,X44,Y44,Z44):1
     [Z44>=2,Z44=W44+1,Z44=V+1,Y44=0,X44=0,V37=0,V3=0] 
* CE 1060: start(V,V3,V37,V44) = 0+ fun14(V,V3,V37,W44):2
     [V37>=0,V3>=0,V>=0,W44=0] 
* CE 1061: start(V,V3,V37,V44) = 0+ fun14(V,W44,X44,Y44):3
     [Y44>=V+2,V>=1,Y44=V+X44+1,Y44=V+V37+1,W44=0,V3=0] 
* CE 1062: start(V,V3,V37,V44) = 0+ fun14(V,V3,W44,X44):4
     [V3>=1,V>=1,X44=0,W44=0,V37=0] 
* CE 1063: start(V,V3,V37,V44) = 0+ fun14(W44,V3,X44,Y44):5
     [Y44>=2,V3>=1,Y44=W44+1,Y44=V+1,X44=0,V37=0] 
* CE 1064: start(A,B,B,C) = 0+ fun14(A,B,B,D):6
     [B>=1,A>=1,D=0] 
* CE 1065: start(V,V3,V37,V44) = 0+ fun14(V,V3,W44,X44):7
     [X44>=V+2,V3>=1,V>=1,X44=V+W44+1,X44=V+V37+1] 
* CE 1066: start(V,V3,V37,V44) = 0+ fun15(W44,V3,V37,X44,Y44):1
     [Y44>=V3+V37+2,V37>=0,V3>=0,Y44=V3+V37+X44+2,Y44=V3+V37+V44+2,W44=1,V=1] 
* CE 1067: start(V,V3,V37,V44) = 0+ fun15(W44,V3,V37,X44,Y44):2
     [Y44>=V3+V37+2,V37>=0,V3>=0,Y44=V3+V37+X44+2,Y44=V3+V37+V44+2,W44=2,V=2] 
* CE 1068: start(V,V3,V37,V44) = 0+ fun15(V,V3,V37,V44,W44):3
     [V44>=0,V37>=0,V3>=0,V>=0,W44=0] 
* CE 1069: start(V,V3,V37,V44) = 0+ testList(V,W44):1
     [V>=0,W44=64] 
* CE 1070: start(V,V3,V37,V44) = 0+ testList(V,W44):2
     [V>=0,W44=65] 
* CE 1071: start(V,V3,V37,V44) = 0+ testList(V,W44):3
     [V>=0,W44=66] 
* CE 1072: start(V,V3,V37,V44) = 0+ testList(V,W44):4
     [V>=0,W44=67] 
* CE 1073: start(V,V3,V37,V44) = 0+ testList(V,W44):5
     [V>=0,W44=68] 
* CE 1074: start(V,V3,V37,V44) = 0+ testList(V,W44):6
     [V>=0,W44=69] 
* CE 1075: start(V,V3,V37,V44) = 0+ testList(V,W44):7
     [V>=0,W44=70] 
* CE 1076: start(V,V3,V37,V44) = 0+ testList(V,W44):8
     [V>=0,W44=71] 
* CE 1077: start(V,V3,V37,V44) = 0+ testList(V,W44):9
     [V>=0,W44=72] 
* CE 1078: start(V,V3,V37,V44) = 0+ testList(V,W44):10
     [V>=0,W44=73] 
* CE 1079: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):1
     [W44>=0,V>=0,73>=W44] 
* CE 1080: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):2
     [V>=0,W44=65] 
* CE 1081: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):3
     [V>=0,W44=66] 
* CE 1082: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):4
     [V>=0,W44=67] 
* CE 1083: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):5
     [V>=0,W44=68] 
* CE 1084: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):6
     [V>=0,W44=69] 
* CE 1085: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):7
     [V>=0,W44=70] 
* CE 1086: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):8
     [V>=0,W44=71] 
* CE 1087: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):9
     [V>=0,W44=72] 
* CE 1088: start(V,V3,V37,V44) = 0+ testQuicksort(V,W44):10
     [V>=0,W44=73] 
* CE 1089: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):1
     [W44>=0,V>=0,73>=W44] 
* CE 1090: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):2
     [V>=0,W44=65] 
* CE 1091: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):3
     [V>=0,W44=66] 
* CE 1092: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):4
     [V>=0,W44=67] 
* CE 1093: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):5
     [V>=0,W44=68] 
* CE 1094: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):6
     [V>=0,W44=69] 
* CE 1095: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):7
     [V>=0,W44=70] 
* CE 1096: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):8
     [V>=0,W44=71] 
* CE 1097: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):9
     [V>=0,W44=72] 
* CE 1098: start(V,V3,V37,V44) = 0+ testQuicksort2(V,W44):10
     [V>=0,W44=73] 
* CE 1099: start(V,V3,V37,V44) = 0+ fun2(W44,X44):1
     [X44=1,W44=1,V=1] 
* CE 1100: start(V,V3,V37,V44) = 0+ fun2(W44,X44):2
     [X44=2,W44=2,V=2] 
* CE 1101: start(V,V3,V37,V44) = 0+ fun2(W44,X44):3
     [X44=1,W44=3,V=3] 
* CE 1102: start(V,V3,V37,V44) = 0+ fun2(V,W44):4
     [V>=0,W44=0] 
* CE 1103: start(V,V3,V37,V44) = 0+ fun3(W44,X44,Y44):1
     [Y44=1,X44=0,W44=0,V3=0,V=0] 
* CE 1104: start(V,V3,V37,V44) = 0+ fun3(W44,V3,X44):2
     [V3>=1,X44=2,W44=0,V=0] 
* CE 1105: start(V,V3,V37,V44) = 0+ fun3(W44,V3,X44):3
     [V3>=1,X44=3,W44=0,V=0] 
* CE 1106: start(V,V3,V37,V44) = 0+ fun3(V,W44,X44):4
     [V>=1,X44=2,W44=0,V3=0] 
* CE 1107: start(V,V3,V37,V44) = 0+ fun3(V,W44,X44):5
     [V>=1,X44=3,W44=0,V3=0] 
* CE 1108: start(V,V3,V37,V44) = 0+ fun3(V,V3,W44):6
     [V3>=0,V>=0,W44=0] 
* CE 1109: start(A,A,B,C) = 0+ fun3(A,A,D):7
     [A>=1,D=1] 
* CE 1110: start(V,V3,V37,V44) = 0+ fun3(V,V3,W44):8
     [V3>=1,V>=1,W44=2] 
* CE 1111: start(V,V3,V37,V44) = 0+ fun3(V,V3,W44):9
     [V3>=1,V>=1,W44=3] 

### Cost equations --> "Loop" of start/4 
* CEs [1049,1064] --> Loop 179 
* CEs [1022,1109] --> Loop 180 
* CEs [1042,1057] --> Loop 181 
* CEs [979,996] --> Loop 182 
* CEs [1047,1048,1062,1063] --> Loop 183 
* CEs [971,972,973,976,988,989,990,993,1019,1020,1021,1041,1044,1046,1056,1059,1061,1106,1107] --> Loop 184 
* CEs [1101] --> Loop 185 
* CEs [1052,1067,1100] --> Loop 186 
* CEs [974,977,978,991,994,995,1051,1066,1099] --> Loop 187 
* CEs [792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,975,980,981,982,983,984,985,986,987,992,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1045,1050,1053,1054,1055,1058,1060,1065,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1102,1103,1104,1105,1108,1110,1111] --> Loop 188 

#### Loops of start/4 
* Loop 179: start(A,B,B,C) [B>=1,A>=1] 
* Loop 180: start(A,A,B,C) [A>=1] 
* Loop 181: start(V,V3,V37,V44) [V>=1,V+1=V3] 
* Loop 182: start(V,V3,V37,V44) [V>=2,V=V3+1] 
* Loop 183: start(V,V3,V37,V44) [V3>=1,V>=1,V37=0] 
* Loop 184: start(V,V3,V37,V44) [V>=0,V3=0] 
* Loop 185: start(V,V3,V37,V44) [V=3] 
* Loop 186: start(V,V3,V37,V44) [V=2] 
* Loop 187: start(V,V3,V37,V44) [V=1] 
* Loop 188: start(V,V3,V37,V44) [V>=0] 

### Ranking functions of CR start(V,V3,V37,V44) 

#### Partial ranking functions of CR start(V,V3,V37,V44) 


### Resulting Chains:start(V,V3,V37,V44) 
* [188]
* [187]
* [186]
* [185]
* [184]
* [183]
* [182]
* [181]
* [180]
* [179]


### Merging Chains  start/4 into  External patterns of execution 
* [[187],[188]] --> 1 
* [[186]] --> 2 
* [[185]] --> 3 
* [[184]] --> 4 
* [[183]] --> 5 
* [[181]] --> 6 
* [[180]] --> 7 
* [[182]] --> 8 
* [[179]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [51] 

 * loop 51:append(V,V3,Out) -> [append(V',V3',Out')] 
2
#### Cost of phase [51]:append(V,V3,Out) -> [append(V',V3',Out')] 
2*it(51)+0
  Such that:it(51) =< V
it(51) =< V-V'

#### Cost of phase [51]:append(V,V3,Out) -> [append(V',V3',Out')] 
2*it(51)+0
  Such that:it(51) =< V
it(51) =< V-V'

#### Cost of chains of append(V,V3,Out):
* Chain [[51],50]: 2*it(51)+2
  Such that:it(51) =< -V3+Out

  with precondition: [V+V3=Out,V>=1,V3>=0] 

* Chain [[51],49]: 2*it(51)+1
  Such that:it(51) =< Out

  with precondition: [V3>=0,Out>=1,V>=Out] 

* Chain [50]: 2
  with precondition: [V=0,V3=Out,V3>=0] 

* Chain [49]: 1
  with precondition: [Out=0,V>=0,V3>=0] 


#### Cost of loops [54] 

 * loop 54:appendD(V,V3,Out) -> [appendD(V',V3',Out')] 
2
#### Cost of phase [54]:appendD(V,V3,Out) -> [appendD(V',V3',Out')] 
2*it(54)+0
  Such that:it(54) =< V
it(54) =< V-V'

#### Cost of phase [54]:appendD(V,V3,Out) -> [appendD(V',V3',Out')] 
2*it(54)+0
  Such that:it(54) =< V
it(54) =< V-V'

#### Cost of chains of appendD(V,V3,Out):
* Chain [[54],53]: 2*it(54)+2
  Such that:it(54) =< -V3+Out

  with precondition: [V+V3=Out,V>=1,V3>=0] 

* Chain [[54],52]: 2*it(54)+1
  Such that:it(54) =< Out

  with precondition: [V3>=0,Out>=1,V>=Out] 

* Chain [53]: 2
  with precondition: [V=0,V3=Out,V3>=0] 

* Chain [52]: 1
  with precondition: [Out=0,V>=0,V3>=0] 


#### Cost of chains of fun(V,Out):
* Chain [57]: 1
  with precondition: [V=0,Out=0] 

* Chain [56]: 1
  with precondition: [V+1=Out,V>=1] 

* Chain [55]: 1
  with precondition: [V=Out,V>=1] 


#### Cost of chains of fun2(V,Out):
* Chain [61]: 0
  with precondition: [V=1,Out=1] 

* Chain [60]: 0
  with precondition: [V=2,Out=2] 

* Chain [59]: 0
  with precondition: [V=3,Out=1] 

* Chain [58]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [62,63] 

 * loop 62:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
 * loop 63:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of phase [62,63]:fun3(V,V3,Out) -> [fun3(V',V3',Out')] 
0
#### Cost of chains of fun3(V,V3,Out):
* Chain [[62,63],71]: 0
  with precondition: [Out=1,V3=V,V3>=1] 

* Chain [[62,63],70]: 0
  with precondition: [Out=2,V>=1,V3>=1,V+V3>=3] 

* Chain [[62,63],69]: 0
  with precondition: [Out=3,V>=1,V3>=1,V+V3>=3] 

* Chain [[62,63],68]: 0
  with precondition: [Out=2,V>=1,V3>=1,V+V3>=3] 

* Chain [[62,63],67]: 0
  with precondition: [Out=3,V>=1,V3>=1,V+V3>=3] 

* Chain [[62,63],66]: 0
  with precondition: [Out=0,V>=1,V3>=1] 

* Chain [[62,63],65]: 0
  with precondition: [Out=2,V>=2,V3>=2] 

* Chain [[62,63],64]: 0
  with precondition: [Out=3,V>=2,V3>=2] 

* Chain [71]: 0
  with precondition: [V=0,V3=0,Out=1] 

* Chain [70]: 0
  with precondition: [V=0,Out=2,V3>=1] 

* Chain [69]: 0
  with precondition: [V=0,Out=3,V3>=1] 

* Chain [68]: 0
  with precondition: [V3=0,Out=2,V>=1] 

* Chain [67]: 0
  with precondition: [V3=0,Out=3,V>=1] 

* Chain [66]: 0
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [65]: 0
  with precondition: [Out=2,V>=1,V3>=1] 

* Chain [64]: 0
  with precondition: [Out=3,V>=1,V3>=1] 


#### Cost of chains of fun1(V,V3,Out):
* Chain [82]: 1
  with precondition: [Out=0,V>=0,V3>=0] 

* Chain [81]: 1
  with precondition: [V=0,V3=0,Out=1] 

* Chain [80]: 1
  with precondition: [V=0,Out=0,V3>=1] 

* Chain [79]: 1
  with precondition: [V=0,Out=1,V3>=1] 

* Chain [78]: 1
  with precondition: [V=0,Out=2,V3>=1] 

* Chain [77]: 1
  with precondition: [V3=0,Out=0,V>=1] 

* Chain [76]: 1
  with precondition: [V3=0,Out=1,V>=1] 

* Chain [75]: 1
  with precondition: [V3=0,Out=2,V>=1] 

* Chain [74]: 1
  with precondition: [Out=0,V=V3,V>=1] 

* Chain [73]: 1
  with precondition: [Out=1,V>=1,V3>=1] 

* Chain [72]: 1
  with precondition: [Out=2,V>=1,V3>=1] 


#### Cost of chains of fun12(V,V3,V37,V44,Out):
* Chain [85]: 1
  with precondition: [V=1,V3+V37+V44+2=Out,V3>=0,V37>=0,V44>=0] 

* Chain [84]: 1
  with precondition: [V=2,V3+V37+V44+2=Out,V3>=0,V37>=0,V44>=0] 

* Chain [83]: 0
  with precondition: [Out=0,V>=0,V3>=0,V37>=0,V44>=0] 


#### Cost of chains of fun11(V,V3,V37,Out):
* Chain [93]: 2
  with precondition: [Out=0,V>=0,V3>=0,V37>=0] 

* Chain [92]: 3
  with precondition: [V3=0,V37=0,V+1=Out,V>=1] 

* Chain [91]: 2
  with precondition: [V3=0,Out=0,V>=1,V37>=1] 

* Chain [90]: 3
  with precondition: [V3=0,V+V37+1=Out,V>=1,V37>=1] 

* Chain [89]: 2
  with precondition: [V37=0,Out=0,V>=1,V3>=1] 

* Chain [88]: 3
  with precondition: [V37=0,V+1=Out,V>=1,V3>=1] 

* Chain [87]: 2
  with precondition: [Out=0,V3=V37,V>=1,V3>=1] 

* Chain [86]: 3
  with precondition: [V+V37+1=Out,V>=1,V3>=1,V37>=1] 


#### Cost of loops [100,101] 

 * loop 100:split(V,V3,Out) -> [split(V',V3',Out')] 
5
 * loop 101:split(V,V3,Out) -> [split(V',V3',Out')] 
5
#### Cost of phase [100,101]:split(V,V3,Out) -> [split(V',V3',Out')] 
10*it(100)+0
  Such that:aux(16) =< V3
aux(17) =< V3-V3'
it(100) =< aux(16)
it(100) =< aux(17)

#### Cost of loops [99] 

 * loop 99:split(V,V3,Out) -> [split(V',V3',Out')] 
4
#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of loops [96,97] 

 * loop 96:split(V,V3,Out) -> [split(V',V3',Out')] 
5
 * loop 97:split(V,V3,Out) -> [split(V',V3',Out')] 
5
#### Cost of phase [96,97]:split(V,V3,Out) -> [split(V',V3',Out')] 
5*it(96)+5*it(97)+0
  Such that:it(96) =< V3/2
it(96) =< V3/2-V3'/2
aux(20) =< V3
aux(21) =< V3-V3'
it(96) =< aux(20)
it(97) =< aux(20)
it(96) =< aux(21)
it(97) =< aux(21)

#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of phase [99]:split(V,V3,Out) -> [split(V',V3',Out')] 
4*it(99)+0
  Such that:it(99) =< V3
it(99) =< V3-V3'

#### Cost of chains of split(V,V3,Out):
* Chain [[100,101],95]: 10*it(100)+2
  Such that:aux(18) =< Out
it(100) =< aux(18)

  with precondition: [V=0,Out=V3+1,Out>=2] 

* Chain [[99],[100,101],95]: 4*it(99)+10*it(100)+2
  Such that:aux(18) =< V3
aux(19) =< V3+1
aux(18) =< aux(19)
it(99) =< aux(19)
it(100) =< aux(18)

  with precondition: [V=0,Out=0,V3>=2] 

* Chain [[99],[96,97],95]: 5*it(96)+9*it(97)+2
  Such that:it(96) =< V3/2
aux(23) =< V3+1
it(96) =< aux(23)
it(97) =< aux(23)

  with precondition: [Out=0,V>=1,V3>=2] 

* Chain [[99],98,[96,97],95]: 5*it(96)+9*it(97)+6
  Such that:it(96) =< -V/2+V3/2
aux(24) =< -V+V3
it(96) =< aux(24)
it(97) =< aux(24)

  with precondition: [Out=0,V>=1,V3>=V+3] 

* Chain [[99],98,95]: 4*it(99)+6
  Such that:it(99) =< -V+V3

  with precondition: [Out=0,V>=1,V3>=V+2] 

* Chain [[99],95]: 4*it(99)+2
  Such that:it(99) =< V3

  with precondition: [Out=0,V>=0,V3>=1] 

* Chain [[99],94]: 4*it(99)+1
  Such that:it(99) =< V3

  with precondition: [Out=0,V>=0,V3>=1] 

* Chain [[96,97],95]: 5*it(96)+5*it(97)+2
  Such that:it(96) =< Out/2
aux(22) =< Out
it(96) =< aux(22)
it(97) =< aux(22)

  with precondition: [Out=V3+1,V>=1,Out>=2] 

* Chain [98,[96,97],95]: 5*it(96)+5*it(97)+6
  Such that:aux(22) =< -V+V3
it(96) =< -V/2+V3/2
it(96) =< aux(22)
it(97) =< aux(22)

  with precondition: [Out=0,V>=1,V3>=V+2] 

* Chain [98,95]: 6
  with precondition: [Out=0,V+1=V3,V>=1] 

* Chain [95]: 2
  with precondition: [V3=0,Out=1,V>=0] 

* Chain [94]: 1
  with precondition: [Out=0,V>=0,V3>=0] 


#### Cost of chains of fun15(V,V3,V37,V44,Out):
* Chain [104]: 1
  with precondition: [V=1,V3+V37+V44+2=Out,V3>=0,V37>=0,V44>=0] 

* Chain [103]: 1
  with precondition: [V=2,V3+V37+V44+2=Out,V3>=0,V37>=0,V44>=0] 

* Chain [102]: 0
  with precondition: [Out=0,V>=0,V3>=0,V37>=0,V44>=0] 


#### Cost of chains of fun14(V,V3,V37,Out):
* Chain [112]: 2
  with precondition: [Out=0,V>=0,V3>=0,V37>=0] 

* Chain [111]: 3
  with precondition: [V3=0,V37=0,V+1=Out,V>=1] 

* Chain [110]: 2
  with precondition: [V3=0,Out=0,V>=1,V37>=1] 

* Chain [109]: 3
  with precondition: [V3=0,V+V37+1=Out,V>=1,V37>=1] 

* Chain [108]: 2
  with precondition: [V37=0,Out=0,V>=1,V3>=1] 

* Chain [107]: 3
  with precondition: [V37=0,V+1=Out,V>=1,V3>=1] 

* Chain [106]: 2
  with precondition: [Out=0,V3=V37,V>=1,V3>=1] 

* Chain [105]: 3
  with precondition: [V+V37+1=Out,V>=1,V3>=1,V37>=1] 


#### Cost of loops [119,120] 

 * loop 119:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
5
 * loop 120:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
5
#### Cost of phase [119,120]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
10*it(119)+0
  Such that:aux(29) =< V3
aux(30) =< V3-V3'
it(119) =< aux(29)
it(119) =< aux(30)

#### Cost of loops [118] 

 * loop 118:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4
#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of loops [115,116] 

 * loop 115:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
5
 * loop 116:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
5
#### Cost of phase [115,116]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
5*it(115)+5*it(116)+0
  Such that:it(115) =< V3/2
it(115) =< V3/2-V3'/2
aux(33) =< V3
aux(34) =< V3-V3'
it(115) =< aux(33)
it(116) =< aux(33)
it(115) =< aux(34)
it(116) =< aux(34)

#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of phase [118]:splitD(V,V3,Out) -> [splitD(V',V3',Out')] 
4*it(118)+0
  Such that:it(118) =< V3
it(118) =< V3-V3'

#### Cost of chains of splitD(V,V3,Out):
* Chain [[119,120],114]: 10*it(119)+2
  Such that:aux(31) =< Out
it(119) =< aux(31)

  with precondition: [V=0,Out=V3+1,Out>=2] 

* Chain [[118],[119,120],114]: 4*it(118)+10*it(119)+2
  Such that:aux(31) =< V3
aux(32) =< V3+1
aux(31) =< aux(32)
it(118) =< aux(32)
it(119) =< aux(31)

  with precondition: [V=0,Out=0,V3>=2] 

* Chain [[118],[115,116],114]: 5*it(115)+9*it(116)+2
  Such that:it(115) =< V3/2
aux(36) =< V3+1
it(115) =< aux(36)
it(116) =< aux(36)

  with precondition: [Out=0,V>=1,V3>=2] 

* Chain [[118],117,[115,116],114]: 5*it(115)+9*it(116)+6
  Such that:it(115) =< -V/2+V3/2
aux(37) =< -V+V3
it(115) =< aux(37)
it(116) =< aux(37)

  with precondition: [Out=0,V>=1,V3>=V+3] 

* Chain [[118],117,114]: 4*it(118)+6
  Such that:it(118) =< -V+V3

  with precondition: [Out=0,V>=1,V3>=V+2] 

* Chain [[118],114]: 4*it(118)+2
  Such that:it(118) =< V3

  with precondition: [Out=0,V>=0,V3>=1] 

* Chain [[118],113]: 4*it(118)+1
  Such that:it(118) =< V3

  with precondition: [Out=0,V>=0,V3>=1] 

* Chain [[115,116],114]: 5*it(115)+5*it(116)+2
  Such that:it(115) =< Out/2
aux(35) =< Out
it(115) =< aux(35)
it(116) =< aux(35)

  with precondition: [Out=V3+1,V>=1,Out>=2] 

* Chain [117,[115,116],114]: 5*it(115)+5*it(116)+6
  Such that:aux(35) =< -V+V3
it(115) =< -V/2+V3/2
it(115) =< aux(35)
it(116) =< aux(35)

  with precondition: [Out=0,V>=1,V3>=V+2] 

* Chain [117,114]: 6
  with precondition: [Out=0,V+1=V3,V>=1] 

* Chain [114]: 2
  with precondition: [V3=0,Out=1,V>=0] 

* Chain [113]: 1
  with precondition: [Out=0,V>=0,V3>=0] 


#### Cost of loops [121,122,123,124,125,126,130,131] 

 * loop 121:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
5*s(57)+5*s(58)+2*s(55)+6
  Such that:s(55) =< V'
s(56) =< V'+V'2+1
s(57) =< V'/2+V'2/2+1/2
s(57) =< s(56)
s(58) =< s(56)

 * loop 122:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
5*s(65)+5*s(66)+2*s(63)+7
  Such that:s(63) =< V'
s(64) =< V'+V'2+1
s(65) =< V'/2+V'2/2+1/2
s(65) =< s(64)
s(66) =< s(64)

 * loop 123:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
10*s(72)+2*s(71)+6
  Such that:s(70) =< V
s(71) =< V-V'2
s(72) =< s(70)

 * loop 124:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
10*s(78)+2*s(77)+7
  Such that:s(76) =< V
s(77) =< V-V'2
s(78) =< s(76)

 * loop 125:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
5*s(83)+5*s(84)+7
  Such that:s(82) =< V'+V'2+1
s(83) =< V'/2+V'2/2+1/2
s(83) =< s(82)
s(84) =< s(82)

 * loop 126:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
10*s(88)+7
  Such that:s(87) =< V'+V'2+1
s(88) =< s(87)

 * loop 130:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
5*s(93)+5*s(94)+6
  Such that:s(92) =< V'+V'2+1
s(93) =< V'/2+V'2/2+1/2
s(93) =< s(92)
s(94) =< s(92)

 * loop 131:quicksort(V,Out) -> [quicksort(V',Out'),quicksort(V'2,Out'2)] 
10*s(98)+6
  Such that:s(97) =< V'+V'2+1
s(98) =< s(97)

#### Cost of phase [121,122,123,124,125,126,130,131]:quicksort(V,Out) -> [] 
13*it(121)+26*it(123)+13*it(125)+8*it([133])+45*it([multiple(129,[[133]])])+10*s(99)+10*s(100)+2*s(101)+2*s(105)+40*s(107)+4*s(108)+10*s(113)+10*s(114)+20*s(123)+64*s(124)+0
  Such that:aux(49) =< V
aux(82) =< V+2
aux(83) =< V/2+1
aux(84) =< V/3+2/3
aux(85) =< 2/3*V
aux(86) =< 2/5*V
it(123) =< aux(85)
it(125) =< aux(85)
it(121) =< aux(86)
it(125) =< aux(86)
aux(57) =< aux(49)+2
aux(50) =< aux(49)+1
aux(53) =< aux(49)
it([multiple(129,[[133]])]) =< it(123)* (1/3)+it(123)* (1/3)+it(123)* (1/3)+it(123)* (1/3)+aux(84)
aux(77) =< it(123)+it(123)+it(123)+it(123)+aux(82)
it([multiple(129,[[133]])]) =< it(123)+it(123)+it(123)+it(123)+aux(82)
it([133]) =< it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+aux(83)
it([multiple(129,[[133]])]) =< it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+aux(83)
s(109) =< it(123)*aux(57)
aux(64) =< it(125)*aux(50)
s(108) =< it(123)*aux(57)
aux(51) =< it(121)*aux(50)
s(105) =< it(121)*aux(53)
s(101) =< it(121)*aux(49)
aux(77) =< it([133])*aux(57)
s(113) =< aux(64)* (1/2)
s(99) =< aux(51)* (1/2)
s(126) =< aux(77)* (1/2)
s(123) =< s(126)
s(124) =< aux(77)
s(123) =< aux(77)
s(107) =< s(109)
s(113) =< aux(64)
s(114) =< aux(64)
s(99) =< aux(51)
s(100) =< aux(51)

#### Cost of chains of quicksort(V,Out):
* Chain [133]: 20*s(33)+64*s(38)+8
  Such that:aux(44) =< V
aux(45) =< V/2
s(33) =< aux(45)
s(38) =< aux(44)
s(33) =< aux(44)

  with precondition: [Out=0,V>=0] 

* Chain [multiple(132,[[133]])]: 22
  with precondition: [Out=0,V>=1] 

* Chain [multiple(129,[[133]])]: 23
  with precondition: [V=Out,V>=1] 

* Chain [multiple([121,122,123,124,125,126,130,131],[[133],[multiple(132,[[133]])],[multiple(129,[[133]])],[multiple(128,[[133]])],[multiple(127,[[133]])]])]: 13*it(121)+26*it(123)+13*it(125)+8*it([133])+45*it([multiple(129,[[133]])])+10*s(99)+10*s(100)+2*s(101)+2*s(105)+40*s(107)+4*s(108)+10*s(113)+10*s(114)+20*s(123)+64*s(124)+0
  Such that:aux(49) =< V
aux(82) =< V+2
aux(83) =< V/2+1
aux(84) =< V/3+2/3
aux(85) =< 2/3*V
aux(86) =< 2/5*V
it(123) =< aux(85)
it(125) =< aux(85)
it(121) =< aux(86)
it(125) =< aux(86)
aux(57) =< aux(49)+2
aux(50) =< aux(49)+1
aux(53) =< aux(49)
it([multiple(129,[[133]])]) =< it(123)* (1/3)+it(123)* (1/3)+it(123)* (1/3)+it(123)* (1/3)+aux(84)
aux(77) =< it(123)+it(123)+it(123)+it(123)+aux(82)
it([multiple(129,[[133]])]) =< it(123)+it(123)+it(123)+it(123)+aux(82)
it([133]) =< it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+aux(83)
it([multiple(129,[[133]])]) =< it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+it(123)* (1/2)+aux(83)
s(109) =< it(123)*aux(57)
aux(64) =< it(125)*aux(50)
s(108) =< it(123)*aux(57)
aux(51) =< it(121)*aux(50)
s(105) =< it(121)*aux(53)
s(101) =< it(121)*aux(49)
aux(77) =< it([133])*aux(57)
s(113) =< aux(64)* (1/2)
s(99) =< aux(51)* (1/2)
s(126) =< aux(77)* (1/2)
s(123) =< s(126)
s(124) =< aux(77)
s(123) =< aux(77)
s(107) =< s(109)
s(113) =< aux(64)
s(114) =< aux(64)
s(99) =< aux(51)
s(100) =< aux(51)

  with precondition: [V>=2,Out>=0,V>=Out] 


#### Cost of loops [134,135,136,137,138,139,143,144] 

 * loop 134:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
5*s(155)+5*s(156)+2*s(153)+6
  Such that:s(153) =< V'
s(154) =< V'+V'2+1
s(155) =< V'/2+V'2/2+1/2
s(155) =< s(154)
s(156) =< s(154)

 * loop 135:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
5*s(163)+5*s(164)+2*s(161)+7
  Such that:s(161) =< V'
s(162) =< V'+V'2+1
s(163) =< V'/2+V'2/2+1/2
s(163) =< s(162)
s(164) =< s(162)

 * loop 136:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
10*s(170)+2*s(169)+6
  Such that:s(168) =< V
s(169) =< V-V'2
s(170) =< s(168)

 * loop 137:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
10*s(176)+2*s(175)+7
  Such that:s(174) =< V
s(175) =< V-V'2
s(176) =< s(174)

 * loop 138:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
5*s(181)+5*s(182)+7
  Such that:s(180) =< V'+V'2+1
s(181) =< V'/2+V'2/2+1/2
s(181) =< s(180)
s(182) =< s(180)

 * loop 139:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
10*s(186)+7
  Such that:s(185) =< V'+V'2+1
s(186) =< s(185)

 * loop 143:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
5*s(191)+5*s(192)+6
  Such that:s(190) =< V'+V'2+1
s(191) =< V'/2+V'2/2+1/2
s(191) =< s(190)
s(192) =< s(190)

 * loop 144:quicksortD(V,Out) -> [quicksortD(V',Out'),quicksortD(V'2,Out'2)] 
10*s(196)+6
  Such that:s(195) =< V'+V'2+1
s(196) =< s(195)

#### Cost of phase [134,135,136,137,138,139,143,144]:quicksortD(V,Out) -> [] 
13*it(134)+26*it(136)+13*it(138)+8*it([146])+45*it([multiple(142,[[146]])])+10*s(197)+10*s(198)+2*s(199)+2*s(203)+40*s(205)+4*s(206)+10*s(211)+10*s(212)+20*s(221)+64*s(222)+0
  Such that:aux(94) =< V
aux(127) =< V+2
aux(128) =< V/2+1
aux(129) =< V/3+2/3
aux(130) =< 2/3*V
aux(131) =< 2/5*V
it(136) =< aux(130)
it(138) =< aux(130)
it(134) =< aux(131)
it(138) =< aux(131)
aux(102) =< aux(94)+2
aux(95) =< aux(94)+1
aux(98) =< aux(94)
it([multiple(142,[[146]])]) =< it(136)* (1/3)+it(136)* (1/3)+it(136)* (1/3)+it(136)* (1/3)+aux(129)
aux(122) =< it(136)+it(136)+it(136)+it(136)+aux(127)
it([multiple(142,[[146]])]) =< it(136)+it(136)+it(136)+it(136)+aux(127)
it([146]) =< it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+aux(128)
it([multiple(142,[[146]])]) =< it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+aux(128)
s(207) =< it(136)*aux(102)
aux(109) =< it(138)*aux(95)
s(206) =< it(136)*aux(102)
aux(96) =< it(134)*aux(95)
s(203) =< it(134)*aux(98)
s(199) =< it(134)*aux(94)
aux(122) =< it([146])*aux(102)
s(211) =< aux(109)* (1/2)
s(197) =< aux(96)* (1/2)
s(224) =< aux(122)* (1/2)
s(221) =< s(224)
s(222) =< aux(122)
s(221) =< aux(122)
s(205) =< s(207)
s(211) =< aux(109)
s(212) =< aux(109)
s(197) =< aux(96)
s(198) =< aux(96)

#### Cost of chains of quicksortD(V,Out):
* Chain [146]: 20*s(131)+64*s(136)+8
  Such that:aux(89) =< V
aux(90) =< V/2
s(131) =< aux(90)
s(136) =< aux(89)
s(131) =< aux(89)

  with precondition: [Out=0,V>=0] 

* Chain [multiple(145,[[146]])]: 22
  with precondition: [Out=0,V>=1] 

* Chain [multiple(142,[[146]])]: 23
  with precondition: [V=Out,V>=1] 

* Chain [multiple([134,135,136,137,138,139,143,144],[[146],[multiple(145,[[146]])],[multiple(142,[[146]])],[multiple(141,[[146]])],[multiple(140,[[146]])]])]: 13*it(134)+26*it(136)+13*it(138)+8*it([146])+45*it([multiple(142,[[146]])])+10*s(197)+10*s(198)+2*s(199)+2*s(203)+40*s(205)+4*s(206)+10*s(211)+10*s(212)+20*s(221)+64*s(222)+0
  Such that:aux(94) =< V
aux(127) =< V+2
aux(128) =< V/2+1
aux(129) =< V/3+2/3
aux(130) =< 2/3*V
aux(131) =< 2/5*V
it(136) =< aux(130)
it(138) =< aux(130)
it(134) =< aux(131)
it(138) =< aux(131)
aux(102) =< aux(94)+2
aux(95) =< aux(94)+1
aux(98) =< aux(94)
it([multiple(142,[[146]])]) =< it(136)* (1/3)+it(136)* (1/3)+it(136)* (1/3)+it(136)* (1/3)+aux(129)
aux(122) =< it(136)+it(136)+it(136)+it(136)+aux(127)
it([multiple(142,[[146]])]) =< it(136)+it(136)+it(136)+it(136)+aux(127)
it([146]) =< it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+aux(128)
it([multiple(142,[[146]])]) =< it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+it(136)* (1/2)+aux(128)
s(207) =< it(136)*aux(102)
aux(109) =< it(138)*aux(95)
s(206) =< it(136)*aux(102)
aux(96) =< it(134)*aux(95)
s(203) =< it(134)*aux(98)
s(199) =< it(134)*aux(94)
aux(122) =< it([146])*aux(102)
s(211) =< aux(109)* (1/2)
s(197) =< aux(96)* (1/2)
s(224) =< aux(122)* (1/2)
s(221) =< s(224)
s(222) =< aux(122)
s(221) =< aux(122)
s(205) =< s(207)
s(211) =< aux(109)
s(212) =< aux(109)
s(197) =< aux(96)
s(198) =< aux(96)

  with precondition: [V>=2,Out>=0,V>=Out] 


#### Cost of chains of testList(V,Out):
* Chain [156]: 11
  with precondition: [Out=64,V>=0] 

* Chain [155]: 11
  with precondition: [Out=65,V>=0] 

* Chain [154]: 11
  with precondition: [Out=66,V>=0] 

* Chain [153]: 11
  with precondition: [Out=67,V>=0] 

* Chain [152]: 11
  with precondition: [Out=68,V>=0] 

* Chain [151]: 11
  with precondition: [Out=69,V>=0] 

* Chain [150]: 11
  with precondition: [Out=70,V>=0] 

* Chain [149]: 11
  with precondition: [Out=71,V>=0] 

* Chain [148]: 11
  with precondition: [Out=72,V>=0] 

* Chain [147]: 11
  with precondition: [Out=73,V>=0] 


#### Cost of chains of testQuicksort(V,Out):
* Chain [167]: 2564789
  with precondition: [73>=Out,V>=0,Out>=0] 

* Chain [166]: 35
  with precondition: [Out=64,V>=0] 

* Chain [165]: 35
  with precondition: [Out=65,V>=0] 

* Chain [164]: 35
  with precondition: [Out=66,V>=0] 

* Chain [163]: 35
  with precondition: [Out=67,V>=0] 

* Chain [162]: 35
  with precondition: [Out=68,V>=0] 

* Chain [161]: 35
  with precondition: [Out=69,V>=0] 

* Chain [160]: 35
  with precondition: [Out=70,V>=0] 

* Chain [159]: 35
  with precondition: [Out=71,V>=0] 

* Chain [158]: 35
  with precondition: [Out=72,V>=0] 

* Chain [157]: 35
  with precondition: [Out=73,V>=0] 


#### Cost of chains of testQuicksort2(V,Out):
* Chain [178]: 2564789
  with precondition: [73>=Out,V>=0,Out>=0] 

* Chain [177]: 35
  with precondition: [Out=64,V>=0] 

* Chain [176]: 35
  with precondition: [Out=65,V>=0] 

* Chain [175]: 35
  with precondition: [Out=66,V>=0] 

* Chain [174]: 35
  with precondition: [Out=67,V>=0] 

* Chain [173]: 35
  with precondition: [Out=68,V>=0] 

* Chain [172]: 35
  with precondition: [Out=69,V>=0] 

* Chain [171]: 35
  with precondition: [Out=70,V>=0] 

* Chain [170]: 35
  with precondition: [Out=71,V>=0] 

* Chain [169]: 35
  with precondition: [Out=72,V>=0] 

* Chain [168]: 35
  with precondition: [Out=73,V>=0] 

