
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [min/3]
1. recursive  : [quot/3]
2. recursive  : [log/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into min/3
1. SCC is partially evaluated into quot/3
2. SCC is partially evaluated into log/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations min/3 
* CE 7 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations min/3 
* CE 14: min(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 15: min(A,B,A) = 1
     [A>=0,B=0] 
* CE 16: min(V1,V,Out) = 1+ min(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of min/3 
* CEs [16] --> Loop 9 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 

#### Loops of min/3 
* Loop 9: min(V1,V,Out)->  min(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 10: min(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 11: min(A,B,A) [A>=0,B=0] 

### Ranking functions of CR min(V1,V,Out) 
* RF of phase [9]: [V,V1]

#### Partial ranking functions of CR min(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V
    V1


### Resulting Chains:min(V1,V,Out) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  min/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10],[10,[9]]] --> 2 
* [[11,[9]]] --> 3 


### Specialization of cost equations quot/3 
* CE 8 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19,20,21] 


#### Refined cost equations quot/3 
* CE 17: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 18: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 19: quot(V1,V,Out) = 1+ min(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 20: quot(V1,V,Out) = 1+ min(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 21: quot(V1,V,Out) = 1+ min(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [17,18] --> Loop 15 

#### Loops of quot/3 
* Loop 12: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 13: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 14: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 15: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [12]: [V1-1,V1-V+1]
* RF of phase [14]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V1-1
    V1-V+1
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[14],15]
* [[14],13,15]
* [[12],15]
* [[12],13,15]
* [15]
* [13,15]


### Merging Chains  quot/3 into  External patterns of execution 
* [[15,13,[14]],[15,[14]]] --> 1 
* [[15]] --> 2 
* [[15,13]] --> 3 
* [[15,[12]]] --> 4 
* [[15,13,[12]]] --> 5 


### Specialization of cost equations log/2 
* CE 11 is refined into CE [22] 
* CE 13 is refined into CE [23] 
* CE 12 is refined into CE [24,25,26,27] 


#### Refined cost equations log/2 
* CE 22: log(V1,Out) = 1
     [Out=0,V1=1] 
* CE 23: log(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 24: log(V1,Out) = 1+ quot(W1,X1,Y1):2+ log(Z1,A2)
     [W1>=0,A2+1=Out,W1+2=V1,Z1=1,Y1=0,X1=2] 
* CE 25: log(V1,Out) = 1+ quot(W1,X1,Y1):3+ log(Z1,A2)
     [W1>=1,A2+1=Out,W1+2=V1,Z1=2,Y1=1,X1=2] 
* CE 26: log(V1,Out) = 1+ quot(W1,X1,Y1):4+ log(Z1,A2)
     [W1>=2*Y1,Y1>=1,Y1+1=Z1,A2+1=Out,W1+2=V1,X1=2] 
* CE 27: log(V1,Out) = 1+ quot(W1,X1,Y1):5+ log(Z1,A2)
     [W1+1>=2*Y1,Y1>=2,Y1+1=Z1,A2+1=Out,W1+2=V1,X1=2] 

### Cost equations --> "Loop" of log/2 
* CEs [27] --> Loop 16 
* CEs [26] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [22,23] --> Loop 20 

#### Loops of log/2 
* Loop 16: log(V1,Out)->  log(V1',Out')
                  [V1+1>=2*V1',V1'>=3,Out=Out'+1] 
* Loop 17: log(V1,Out)->  log(V1',Out')
                  [V1>=2*V1',V1'>=2,Out=Out'+1] 
* Loop 18: log(V1,Out)->  log(V1',Out')
                  [V1>=3,Out=Out'+1,V1'=2] 
* Loop 19: log(V1,Out)->  log(V1',Out')
                  [V1>=2,Out=Out'+1,V1'=1] 
* Loop 20: log(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR log(V1,Out) 
* RF of phase [16,17]: [V1-3,V1/2-3/2]

#### Partial ranking functions of CR log(V1,Out) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    V1/2-2
  - RF of loop [17:1]:
    V1-3


### Resulting Chains:log(V1,Out) 
* [[16,17],20]
* [[16,17],19,20]
* [[16,17],18,20]
* [[16,17],18,19,20]
* [20]
* [19,20]
* [18,20]
* [18,19,20]


### Merging Chains  log/2 into  External patterns of execution 
* [[20]] --> 1 
* [[20,18],[20,19]] --> 2 
* [[20,19,18]] --> 3 
* [[20,[16,17]]] --> 4 
* [[20,18,[16,17]],[20,19,[16,17]]] --> 5 
* [[20,19,18,[16,17]]] --> 6 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [28,29,30] 
* CE 3 is refined into CE [31,32,33,34,35] 
* CE 4 is refined into CE [36,37,38,39,40,41] 


#### Refined cost equations start/2 
* CE 28: start(V1,V) = 0+ min(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 29: start(V1,V) = 0+ min(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 30: start(V1,V) = 0+ min(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 
* CE 31: start(V1,V) = 0+ quot(V1,W1,X1):1
     [V1>=X1,X1>=1,W1=1,V=1] 
* CE 32: start(V1,V) = 0+ quot(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 33: start(V1,V) = 0+ quot(V1,V,W1):3
     [V>=1,V1>=1,W1=1] 
* CE 34: start(V1,V) = 0+ quot(V1,V,W1):4
     [V1+2>=2*W1+V,W1>=1,V>=2] 
* CE 35: start(V1,V) = 0+ quot(V1,V,W1):5
     [V1+3>=2*W1+V,W1>=2,V>=2] 
* CE 36: start(V1,V) = 0+ log(V1,W1):1
     [V1>=0,W1=0] 
* CE 37: start(V1,V) = 0+ log(V1,W1):2
     [V1>=2,W1=1] 
* CE 38: start(V1,V) = 0+ log(V1,W1):3
     [V1>=3,W1=2] 
* CE 39: start(V1,V) = 0+ log(V1,W1):4
     [V1>=3*W1+1,W1>=1] 
* CE 40: start(V1,V) = 0+ log(V1,W1):5
     [V1+2>=3*W1,W1>=2] 
* CE 41: start(V1,V) = 0+ log(V1,W1):6
     [V1+7>=4*W1,W1>=3] 

### Cost equations --> "Loop" of start/2 
* CEs [31] --> Loop 21 
* CEs [28,29,30,32,33,34,35,36,37,38,39,40,41] --> Loop 22 

#### Loops of start/2 
* Loop 21: start(V1,V) [V1>=1,V=1] 
* Loop 22: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [22]
* [21]


### Merging Chains  start/2 into  External patterns of execution 
* [[21],[22]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:min(V1,V,Out) -> [min(V1',V',Out')] 
1
#### Cost of phase [9]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'
it(9) =< V
it(9) =< V-V'

#### Cost of chains of min(V1,V,Out):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [11]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [10]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [14] 

 * loop 14:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [14]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'

#### Cost of phase [14]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'

#### Cost of loops [12] 

 * loop 12:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V'

#### Cost of phase [12]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(12)+1*s(5)+0
  Such that:it(12) =< V1-V+1
it(12) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(12) =< aux(1)
s(5) =< aux(1)
it(12) =< aux(2)
s(5) =< aux(2)

#### Cost of phase [12]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(12)+1*s(5)+0
  Such that:it(12) =< V1-V+1
it(12) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(12) =< aux(1)
s(5) =< aux(1)
it(12) =< aux(2)
s(5) =< aux(2)

#### Cost of chains of quot(V1,V,Out):
* Chain [[14],15]: 2*it(14)+1
  Such that:it(14) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[14],13,15]: 2*it(14)+1*s(2)+2
  Such that:s(2) =< 1
it(14) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[12],15]: 2*it(12)+1*s(5)+1
  Such that:it(12) =< V1-V+1
aux(3) =< V1
it(12) =< aux(3)
s(5) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[12],13,15]: 2*it(12)+1*s(2)+1*s(5)+2
  Such that:it(12) =< V1-V+1
s(2) =< V
aux(4) =< V1
it(12) =< aux(4)
s(5) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [15]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [13,15]: 1*s(2)+2
  Such that:s(2) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of loops [16,17] 

 * loop 16:log(V1,Out) -> [log(V1',Out')] 
3*s(15)+1*s(13)+3
  Such that:s(13) =< 2
s(14) =< V1
s(15) =< s(14)

 * loop 17:log(V1,Out) -> [log(V1',Out')] 
3*s(20)+2
  Such that:s(19) =< V1
s(20) =< s(19)

#### Cost of phase [16,17]:log(V1,Out) -> [log(V1',Out')] 
3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+0
  Such that:s(25) =< 2*V1
s(25) =< 2*V1-2*V1'
aux(9) =< V1
aux(10) =< V1-V1'
aux(11) =< V1/2
aux(12) =< V1/2-V1'/2
aux(13) =< 5/2*V1+27/2
aux(14) =< 5/2*V1-5/2*V1'
aux(8) =< aux(9)
it(16) =< aux(9)
it(17) =< aux(9)
aux(8) =< aux(10)
it(16) =< aux(10)
it(17) =< aux(10)
aux(8) =< aux(11)
it(16) =< aux(11)
it(17) =< aux(11)
aux(8) =< aux(12)
it(16) =< aux(12)
it(17) =< aux(12)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

#### Cost of phase [16,17]:log(V1,Out) -> [log(V1',Out')] 
3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+0
  Such that:s(25) =< 2*V1
s(25) =< 2*V1-2*V1'
aux(9) =< V1
aux(10) =< V1-V1'
aux(11) =< V1/2
aux(12) =< V1/2-V1'/2
aux(13) =< 5/2*V1+27/2
aux(14) =< 5/2*V1-5/2*V1'
aux(8) =< aux(9)
it(16) =< aux(9)
it(17) =< aux(9)
aux(8) =< aux(10)
it(16) =< aux(10)
it(17) =< aux(10)
aux(8) =< aux(11)
it(16) =< aux(11)
it(17) =< aux(11)
aux(8) =< aux(12)
it(16) =< aux(12)
it(17) =< aux(12)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

#### Cost of phase [16,17]:log(V1,Out) -> [log(V1',Out')] 
3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+0
  Such that:s(25) =< 2*V1
s(25) =< 2*V1-2*V1'
aux(9) =< V1
aux(10) =< V1-V1'
aux(11) =< V1/2
aux(12) =< V1/2-V1'/2
aux(13) =< 5/2*V1+27/2
aux(14) =< 5/2*V1-5/2*V1'
aux(8) =< aux(9)
it(16) =< aux(9)
it(17) =< aux(9)
aux(8) =< aux(10)
it(16) =< aux(10)
it(17) =< aux(10)
aux(8) =< aux(11)
it(16) =< aux(11)
it(17) =< aux(11)
aux(8) =< aux(12)
it(16) =< aux(12)
it(17) =< aux(12)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

#### Cost of phase [16,17]:log(V1,Out) -> [log(V1',Out')] 
3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+0
  Such that:s(25) =< 2*V1
s(25) =< 2*V1-2*V1'
aux(9) =< V1
aux(10) =< V1-V1'
aux(11) =< V1/2
aux(12) =< V1/2-V1'/2
aux(13) =< 5/2*V1+27/2
aux(14) =< 5/2*V1-5/2*V1'
aux(8) =< aux(9)
it(16) =< aux(9)
it(17) =< aux(9)
aux(8) =< aux(10)
it(16) =< aux(10)
it(17) =< aux(10)
aux(8) =< aux(11)
it(16) =< aux(11)
it(17) =< aux(11)
aux(8) =< aux(12)
it(16) =< aux(12)
it(17) =< aux(12)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

#### Cost of chains of log(V1,Out):
* Chain [[16,17],20]: 3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+1
  Such that:s(25) =< 2*V1
aux(14) =< 5/2*V1
aux(13) =< 5/2*V1+27/2
aux(15) =< V1
aux(16) =< V1/2
aux(8) =< aux(15)
it(16) =< aux(15)
it(17) =< aux(15)
aux(8) =< aux(16)
it(16) =< aux(16)
it(17) =< aux(16)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

  with precondition: [Out>=1,V1>=3*Out+1] 

* Chain [[16,17],19,20]: 3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+3
  Such that:s(25) =< 2*V1
aux(14) =< 5/2*V1
aux(13) =< 5/2*V1+27/2
aux(17) =< V1
aux(18) =< V1/2
aux(8) =< aux(17)
it(16) =< aux(17)
it(17) =< aux(17)
aux(8) =< aux(18)
it(16) =< aux(18)
it(17) =< aux(18)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

  with precondition: [Out>=2,V1+2>=3*Out] 

* Chain [[16,17],18,20]: 3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+1*s(26)+4
  Such that:s(26) =< 2
s(25) =< 2*V1
aux(14) =< 5/2*V1
aux(13) =< 5/2*V1+27/2
aux(19) =< V1
aux(20) =< V1/2
aux(8) =< aux(19)
it(16) =< aux(19)
it(17) =< aux(19)
aux(8) =< aux(20)
it(16) =< aux(20)
it(17) =< aux(20)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

  with precondition: [Out>=2,V1+3>=4*Out] 

* Chain [[16,17],18,19,20]: 3*it(16)+2*it(17)+3*s(21)+1*s(22)+3*s(24)+1*s(26)+6
  Such that:s(26) =< 2
s(25) =< 2*V1
aux(14) =< 5/2*V1
aux(13) =< 5/2*V1+27/2
aux(21) =< V1
aux(22) =< V1/2
aux(8) =< aux(21)
it(16) =< aux(21)
it(17) =< aux(21)
aux(8) =< aux(22)
it(16) =< aux(22)
it(17) =< aux(22)
it(17) =< aux(13)
s(23) =< aux(13)
it(17) =< aux(14)
s(23) =< aux(14)
s(22) =< aux(8)*2
s(24) =< s(25)
s(21) =< s(23)

  with precondition: [Out>=3,V1+7>=4*Out] 

* Chain [20]: 1
  with precondition: [Out=0,V1>=0] 

* Chain [19,20]: 3
  with precondition: [Out=1,V1>=2] 

* Chain [18,20]: 1*s(26)+4
  Such that:s(26) =< 2

  with precondition: [Out=1,V1>=3] 

* Chain [18,19,20]: 1*s(26)+6
  Such that:s(26) =< 2

  with precondition: [Out=2,V1>=3] 


#### Cost of chains of start(V1,V):
* Chain [22]: 4*s(53)+4*s(56)+2*s(58)+3*s(63)+12*s(70)+8*s(71)+4*s(73)+12*s(74)+12*s(75)+6
  Such that:aux(28) =< 2
aux(29) =< V1
aux(30) =< V1-V+1
aux(31) =< 2*V1
aux(32) =< V1/2
aux(33) =< 5/2*V1
aux(34) =< 5/2*V1+27/2
aux(35) =< V
s(63) =< aux(28)
s(56) =< aux(30)
s(53) =< aux(35)
s(69) =< aux(29)
s(70) =< aux(29)
s(71) =< aux(29)
s(69) =< aux(32)
s(70) =< aux(32)
s(71) =< aux(32)
s(71) =< aux(34)
s(72) =< aux(34)
s(71) =< aux(33)
s(72) =< aux(33)
s(73) =< s(69)*2
s(74) =< aux(31)
s(75) =< s(72)
s(56) =< aux(29)
s(58) =< aux(29)

  with precondition: [V1>=0] 

* Chain [21]: 1*s(102)+4*s(104)+2
  Such that:s(102) =< 1
s(103) =< V1
s(104) =< s(103)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [22] with precondition: [V1>=0] 
    - Upper bound: 30*V1+12+nat(V)*4+24*V1+ (30*V1+162)+nat(V1-V+1)*4 
    - Complexity: n 
* Chain [21] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+3 
    - Complexity: n 

### Maximum cost of start(V1,V): 26*V1+9+nat(V)*4+24*V1+ (30*V1+162)+nat(V1-V+1)*4+ (4*V1+3) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 43 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 50 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 125 ms.
   - Equation cost structures 35 ms.
   - Phase cost structures 38 ms.
   - Chain cost structures 40 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 250 ms.

