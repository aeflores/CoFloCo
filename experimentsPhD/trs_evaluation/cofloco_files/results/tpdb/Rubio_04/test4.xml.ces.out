
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f/3]
1. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f/3
1. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/3 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations f/3 
* CE 8: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 9: f(V1,V,Out) = 1+ f(W1,X1,Out)
     [W1>=0,W1+1=V1,X1=2,V=2] 
* CE 10: f(V1,V,Out) = 1+ f(W1,X1,Out)
     [X1=0,W1=0,V=2,V1=2] 
* CE 11: f(V1,V,Out) = 1+ f(W1,X1,Out)
     [X1=2,W1=1,V=1,V1=0] 
* CE 12: f(V1,V,Out) = 1+ f(W1,X1,Out)
     [X1=1,W1=0,V=0,V1=0] 

### Cost equations --> "Loop" of f/3 
* CEs [9] --> Loop 7 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [8] --> Loop 11 

#### Loops of f/3 
* Loop 7: f(V1,V,Out)->  f(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=2,V=2] 
* Loop 8: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=0,V1'=0,V=2,V1=2] 
* Loop 9: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=2,V1'=1,V=1,V1=0] 
* Loop 10: f(V1,V,Out)->  f(V1',V',Out)
                  [V'=1,V1'=0,V=0,V1=0] 
* Loop 11: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 

#### Partial ranking functions of CR f(V1,V,Out) 
* Partial RF of phase [7,8,9,10]:
  - RF of loop [7:1]:
    V1 depends on loops [9:1] 
  - RF of loop [8:1]:
    V-1 depends on loops [9:1,10:1] 
    V1-1 depends on loops [9:1] 
  - RF of loop [9:1]:
    -V+2 depends on loops [8:1] 
    -V1+1 depends on loops [7:1,8:1] 
  - RF of loop [10:1]:
    -V+1 depends on loops [8:1] 


### Resulting Chains:f(V1,V,Out) 
* [[7,8,9,10]]...
* [[7,8,9,10],11]
* [11]


### Merging Chains  f/3 into  External patterns of execution 
* [[11],[11,[7,8,9,10]]] --> 1 
* [[[7,8,9,10]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [13,14] 


#### Refined cost equations start/2 
* CE 13: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 14: start(V1,V) = 0+ f(V1,V,W1):2
     [V1+1>=V,V>=0,V1>=0,2>=V] 

### Cost equations --> "Loop" of start/2 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of start/2 
* Loop 12: start(V1,V) [V1+1>=V,V>=0,V1>=0,2>=V] 
* Loop 13: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [13]
* [12]...


### Merging Chains  start/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7,8,9,10] 

 * loop 7:f(V1,V,Out) -> [f(V1',V',Out')] 
1
 * loop 8:f(V1,V,Out) -> [f(V1',V',Out')] 
1
 * loop 9:f(V1,V,Out) -> [f(V1',V',Out')] 
1
 * loop 10:f(V1,V,Out) -> [f(V1',V',Out')] 
1
#### Cost of phase [7,8,9,10]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(7)+0
#### Cost of phase [7,8,9,10]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(7)+0
#### Cost of chains of f(V1,V,Out):
* Chain [[7,8,9,10]]...: 4*it(7)+0
  with precondition: [V1+1>=V,V1>=0,V>=0,2>=V] 

* Chain [[7,8,9,10],11]: 4*it(7)+0
  with precondition: [Out=0,2>=V,V1>=0,V>=0,V1+1>=V] 

* Chain [11]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [13]: 1*s(2)+0
  with precondition: [V1>=0,V>=0] 

* Chain [12]...: 4*s(3)+0
  with precondition: [2>=V,V1>=0,V>=0,V1+1>=V] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [13] with precondition: [V1>=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [2>=V,V1>=0,V>=0,V1+1>=V] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 65 ms.
* Termination proved in 27 ms.
* Upper bounds computed in 74 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 42 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 260 ms.

