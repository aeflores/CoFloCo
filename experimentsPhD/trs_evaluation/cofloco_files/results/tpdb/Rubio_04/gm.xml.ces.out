
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [p/2]
1. recursive [non_tail] : [minus/3]
2. recursive  : [ (div)/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into p/2
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into (div)/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations p/2 
* CE 8 is refined into CE [13] 
* CE 9 is refined into CE [14] 


#### Refined cost equations p/2 
* CE 13: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 14: p(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [13] --> Loop 9 
* CEs [14] --> Loop 10 

#### Loops of p/2 
* Loop 9: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 10: p(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [10]
* [9]


### Merging Chains  p/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations minus/3 
* CE 7 is refined into CE [15] 
* CE 5 is refined into CE [16] 
* CE 6 is refined into CE [17,18] 


#### Refined cost equations minus/3 
* CE 15: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 16: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 17: minus(V1,V,Out) = 1+ minus(W1,X1,Y1)+ p(Y1,Z1):1
     [X1>=0,W1>=0,Y1>=0,X1+1=V,W1+1=V1,Z1=0,Out=0] 
* CE 18: minus(V1,V,Out) = 1+ minus(W1,X1,Y1)+ p(Z1,Out):2
     [X1>=0,W1>=0,Out>=0,Out+1=Y1,Out+1=Z1,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of minus/3 
* Loop 11: minus(V1,V,Out)->  minus(V1',V',Out')
                  [Out>=0,V>=1,V1>=1,Out+1=Out',V=V'+1,V1=V1'+1] 
* Loop 12: minus(V1,V,Out)->  minus(V1',V',Out')
                  [Out'>=0,V>=1,V1>=1,V=V'+1,V1=V1'+1,Out=0] 
* Loop 13: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 14: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [11]: [V,V1]
* RF of phase [12]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V
    V1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[12],[11],14]
* [[12],14]
* [[12],13]
* [[11],14]
* [14]
* [13]


### Merging Chains  minus/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13],[13,[12]],[14,[12]],[14,[11],[12]]] --> 2 
* [[14,[11]]] --> 3 


### Specialization of cost equations (div)/3 
* CE 10 is refined into CE [19] 
* CE 12 is refined into CE [20] 
* CE 11 is refined into CE [21,22,23] 


#### Refined cost equations (div)/3 
* CE 19: div(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 20: div(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 21: div(V1,V,Out) = 1+ minus(W1,X1,W1):1+ div(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 22: div(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ div(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 23: div(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ div(Y1,Z1,A2)
     [Y1>=0,X1>=1,Y1+2*X1=W1,Y1+2*X1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of (div)/3 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [19,20] --> Loop 18 

#### Loops of (div)/3 
* Loop 15: div(V1,V,Out)->  div(V1',V,Out')
                  [V1+1>=2*V,V>=2,V1+1=2*V+V1',Out=Out'+1] 
* Loop 16: div(V1,V,Out)->  div(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 17: div(V1,V,Out)->  div(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 18: div(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR div(V1,V,Out) 
* RF of phase [15]: [V1/3-2/3,V1/3-2/3*V+2/3]
* RF of phase [17]: [V1]

#### Partial ranking functions of CR div(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1/3-2/3
    V1/3-2/3*V+2/3
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V1


### Resulting Chains:div(V1,V,Out) 
* [[17],18]
* [[17],16,18]
* [[15],18]
* [[15],16,18]
* [18]
* [16,18]


### Merging Chains  (div)/3 into  External patterns of execution 
* [[18,16,[17]],[18,[17]]] --> 1 
* [[18]] --> 2 
* [[18,16]] --> 3 
* [[18,[15]]] --> 4 
* [[18,16,[15]]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [24,25,26] 
* CE 3 is refined into CE [27,28] 
* CE 4 is refined into CE [29,30,31,32,33] 


#### Refined cost equations start/2 
* CE 24: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 25: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 26: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,X1+2*V=W1,X1+2*V=V1] 
* CE 27: start(V1,V) = 0+ p(V1,W1):1
     [V1>=0,W1=0] 
* CE 28: start(V1,V) = 0+ p(W1,X1):2
     [X1>=0,X1+1=W1,X1+1=V1] 
* CE 29: start(V1,V) = 0+ div(V1,W1,X1):1
     [V1>=X1,X1>=1,W1=1,V=1] 
* CE 30: start(V1,V) = 0+ div(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 31: start(V1,V) = 0+ div(V1,V,W1):3
     [V>=1,V1>=1,W1=1] 
* CE 32: start(V1,V) = 0+ div(V1,V,W1):4
     [V1+4>=3*W1+2*V,W1>=1,V>=2] 
* CE 33: start(V1,V) = 0+ div(V1,V,W1):5
     [V1+6>=3*W1+2*V,W1>=2,V>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [29] --> Loop 19 
* CEs [24,25,26,27,28,30,31,32,33] --> Loop 20 

#### Loops of start/2 
* Loop 19: start(V1,V) [V1>=1,V=1] 
* Loop 20: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[19],[20]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of p(V1,Out):
* Chain [10]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [9]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [11] 

 * loop 11:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2
#### Cost of phase [11]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of loops [12] 

 * loop 12:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [12]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'
it(12) =< V
it(12) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[12],[11],14]: 3*it(11)+1
  Such that:aux(1) =< V
it(11) =< aux(1)

  with precondition: [Out=0,V>=2,V1>=V+1] 

* Chain [[12],14]: 1*it(12)+1
  Such that:it(12) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[11],14]: 2*it(11)+1
  Such that:it(11) =< V

  with precondition: [V1=2*V+Out,V>=1,V1>=2*V] 

* Chain [14]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [17] 

 * loop 17:div(V1,V,Out) -> [div(V1',V',Out')] 
2
#### Cost of phase [17]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'

#### Cost of phase [17]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'

#### Cost of loops [15] 

 * loop 15:div(V1,V,Out) -> [div(V1',V',Out')] 
2*s(8)+2
  Such that:s(8) =< V'

#### Cost of phase [15]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(15)+2*s(9)+0
  Such that:it(15) =< V1/3
it(15) =< V1/3-2/3*V+2/3
it(15) =< V1/3-2/3*V-V1'/3+2/3*V'
it(15) =< V1/3-V1'/3
s(9) =< 2/3*V1-V/3+2/3
s(9) =< 2/3*V1-V/3-2/3*V1'+V'/3

#### Cost of phase [15]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(15)+2*s(9)+0
  Such that:it(15) =< V1/3
it(15) =< V1/3-2/3*V+2/3
it(15) =< V1/3-2/3*V-V1'/3+2/3*V'
it(15) =< V1/3-V1'/3
s(9) =< 2/3*V1-V/3+2/3
s(9) =< 2/3*V1-V/3-2/3*V1'+V'/3

#### Cost of chains of div(V1,V,Out):
* Chain [[17],18]: 2*it(17)+1
  Such that:it(17) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[17],16,18]: 2*it(17)+5*s(6)+3
  Such that:s(5) =< 1
it(17) =< Out
s(6) =< s(5)

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[15],18]: 2*it(15)+2*s(9)+1
  Such that:it(15) =< V1/3-2/3*V+2/3
s(9) =< 2/3*V1-V/3+2/3

  with precondition: [V>=2,Out>=1,V1+4>=3*Out+2*V] 

* Chain [[15],16,18]: 2*it(15)+5*s(6)+2*s(9)+3
  Such that:it(15) =< V1/3-2/3*V+2/3
s(9) =< 2/3*V1
s(5) =< V
s(6) =< s(5)

  with precondition: [V>=2,Out>=2,V1+6>=3*Out+2*V] 

* Chain [18]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [16,18]: 5*s(6)+3
  Such that:s(5) =< V
s(6) =< s(5)

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [20]: 17*s(15)+4*s(19)+2*s(20)+2*s(22)+3
  Such that:s(22) =< 2/3*V1
s(20) =< 2/3*V1-V/3+2/3
aux(4) =< V1/3-2/3*V+2/3
aux(5) =< V
s(19) =< aux(4)
s(15) =< aux(5)

  with precondition: [V1>=0] 

* Chain [19]: 4*s(27)+5*s(28)+3
  Such that:s(25) =< 1
s(26) =< V1
s(27) =< s(26)
s(28) =< s(25)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20] with precondition: [V1>=0] 
    - Upper bound: nat(V)*17+3+4/3*V1+nat(2/3*V1-V/3+2/3)*2+nat(V1/3-2/3*V+2/3)*4 
    - Complexity: n 
* Chain [19] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+8 
    - Complexity: n 

### Maximum cost of start(V1,V): max([4*V1+5,4/3*V1+nat(V)*17+nat(2/3*V1-V/3+2/3)*2+nat(V1/3-2/3*V+2/3)*4])+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 113 ms.
   - Backward Invariants 58 ms.
   - Transitive Invariants 18 ms.
* Refinement performed in 133 ms.
* Termination proved in 24 ms.
* Upper bounds computed in 208 ms.
   - Equation cost structures 53 ms.
   - Phase cost structures 59 ms.
   - Chain cost structures 84 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 547 ms.

