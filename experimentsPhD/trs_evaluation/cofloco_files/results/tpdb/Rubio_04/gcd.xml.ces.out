
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [pred/2]
1. recursive [non_tail] : [minus/3]
2. recursive  : [le/3]
3. recursive  : [gcd/3,if/4]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into pred/2
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into le/3
3. SCC is partially evaluated into gcd/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations pred/2 
* CE 18 is refined into CE [24] 
* CE 19 is refined into CE [25] 


#### Refined cost equations pred/2 
* CE 24: pred(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 25: pred(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of pred/2 
* CEs [24] --> Loop 16 
* CEs [25] --> Loop 17 

#### Loops of pred/2 
* Loop 16: pred(V1,Out) [V1>=1,V1=Out+1] 
* Loop 17: pred(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR pred(V1,Out) 

#### Partial ranking functions of CR pred(V1,Out) 


### Resulting Chains:pred(V1,Out) 
* [17]
* [16]


### Merging Chains  pred/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations minus/3 
* CE 11 is refined into CE [26] 
* CE 10 is refined into CE [27] 
* CE 9 is refined into CE [28,29] 


#### Refined cost equations minus/3 
* CE 26: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 27: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 28: minus(V1,V,Out) = 1+ minus(V1,W1,X1)+ pred(X1,Y1):1
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 29: minus(V1,V,Out) = 1+ minus(V1,W1,X1)+ pred(Y1,Out):2
     [W1>=0,Out>=0,V1>=0,Out+1=X1,Out+1=Y1,W1+1=V] 

### Cost equations --> "Loop" of minus/3 
* CEs [29] --> Loop 18 
* CEs [28] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 

#### Loops of minus/3 
* Loop 18: minus(V1,V,Out)->  minus(V1,V',Out')
                  [Out>=0,V>=1,V1>=0,Out+1=Out',V=V'+1] 
* Loop 19: minus(V1,V,Out)->  minus(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 20: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 21: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [18]: [V]
* RF of phase [19]: [V]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V


### Resulting Chains:minus(V1,V,Out) 
* [[19],[18],21]
* [[19],21]
* [[19],20]
* [[18],21]
* [21]
* [20]


### Merging Chains  minus/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20],[20,[19]],[21,[19]],[21,[18],[19]]] --> 2 
* [[21,[18]]] --> 3 


### Specialization of cost equations le/3 
* CE 23 is refined into CE [30] 
* CE 21 is refined into CE [31] 
* CE 22 is refined into CE [32] 
* CE 20 is refined into CE [33] 


#### Refined cost equations le/3 
* CE 30: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 31: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 32: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 33: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [33] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of le/3 
* Loop 22: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 23: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 24: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 25: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[22],25]
* [[22],24]
* [[22],23]
* [25]
* [24]
* [23]


### Merging Chains  le/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23],[23,[22]]] --> 3 
* [[24,[22]]] --> 4 
* [[25,[22]]] --> 5 


### Specialization of cost equations gcd/3 
* CE 16 is refined into CE [34] 
* CE 12 is refined into CE [35,36,37,38,39] 
* CE 15 is refined into CE [40] 
* CE 17 is refined into CE [41] 
* CE 14 is refined into CE [42,43,44,45] 
* CE 13 is refined into CE [46,47,48,49] 


#### Refined cost equations gcd/3 
* CE 34: gcd(A,B,A) = 1
     [A>=1,B=0] 
* CE 35: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=2,W1=0,Out=0,V=1] 
* CE 36: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):2
     [W1>=1,W1+1=V,Y1=1,X1=0,Out=0,V1=1] 
* CE 37: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):3
     [X1>=0,W1>=0,W1+1=V,X1+1=V1,Y1=0,Out=0] 
* CE 38: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):4
     [W1>=X1+1,X1>=1,W1+1=V,X1+1=V1,Y1=1,Out=0] 
* CE 39: gcd(V1,V,Out) = 1+ le(W1,X1,Y1):5
     [X1>=W1,W1>=1,W1+1=V,X1+1=V1,Y1=2,Out=0] 
* CE 40: gcd(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 41: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 42: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,X1):1+ gcd(X1,A2,Out)
     [X1>=0,X1+1=V1,A2=1,Z1=0,Y1=2,W1=0,V=1] 
* CE 43: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ gcd(B2,C2,Out)
     [X1>=0,X1+1=V1,C2=1,B2=0,A2=0,Z1=0,Y1=2,W1=0,V=1] 
* CE 44: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(X1,W1,Z1):2+ gcd(A2,B2,Out)
     [X1>=W1,W1>=1,W1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=2] 
* CE 45: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):5+ minus(Z1,W1,A2):3+ gcd(A2,B2,Out)
     [A2>=0,W1>=1,W1+A2=Z1,W1+A2=X1,W1+A2+1=V1,W1+1=B2,W1+1=V,Y1=2] 
* CE 46: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,W1):1+ gcd(W1,A2,Out)
     [W1>=1,W1+1=V,A2=1,Z1=0,Y1=1,X1=0,V1=1] 
* CE 47: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):2+ minus(W1,Z1,A2):2+ gcd(B2,C2,Out)
     [W1>=1,W1+1=V,C2=1,B2=0,A2=0,Z1=0,Y1=1,X1=0,V1=1] 
* CE 48: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(W1,X1,Z1):2+ gcd(A2,B2,Out)
     [W1>=X1+1,X1>=1,X1+1=B2,W1+1=V,X1+1=V1,A2=0,Z1=0,Y1=1] 
* CE 49: gcd(V1,V,Out) = 2+ le(W1,X1,Y1):4+ minus(Z1,X1,A2):3+ gcd(A2,B2,Out)
     [A2>=1,X1>=1,X1+A2=Z1,X1+A2=W1,X1+A2+1=V,X1+1=B2,X1+1=V1,Y1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [49] --> Loop 26 
* CEs [45] --> Loop 27 
* CEs [48] --> Loop 28 
* CEs [44] --> Loop 29 
* CEs [42] --> Loop 30 
* CEs [43] --> Loop 31 
* CEs [46] --> Loop 32 
* CEs [47] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [34] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [37,38,39,40,41] --> Loop 37 

#### Loops of gcd/3 
* Loop 26: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,V1+A'=V] 
* Loop 27: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1=V+V1'] 
* Loop 28: gcd(V1,V,Out)->  gcd(A',V1,Out)
                  [V>=V1+1,V1>=2,A'=0] 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=2,V1'=0] 
* Loop 30: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 31: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 32: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V=V1'+1,V'=1,V1=1] 
* Loop 33: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=2,V'=1,V1'=0,V1=1] 
* Loop 34: gcd(V1,V,Out) [V1>=1,Out=0,V=1] 
* Loop 35: gcd(A,B,A) [A>=1,B=0] 
* Loop 36: gcd(V1,V,Out) [V>=2,Out=0,V1=1] 
* Loop 37: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [26,27]: [V1+V-3]
* RF of phase [30]: [V1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [26,27]:
  - RF of loop [26:1]:
    V-2
    V1/2+V/2-2
  - RF of loop [27:1]:
    V1-1 depends on loops [26:1] 
    V1-V+1 depends on loops [26:1] 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V1


### Resulting Chains:gcd(V1,V,Out) 
* [[30],37]
* [[30],34]
* [[30],31,37]
* [[26,27],37]
* [[26,27],36]
* [[26,27],33,37]
* [[26,27],32,[30],37]
* [[26,27],32,[30],34]
* [[26,27],32,[30],31,37]
* [[26,27],32,37]
* [[26,27],32,34]
* [[26,27],32,31,37]
* [[26,27],29,37]
* [[26,27],28,37]
* [37]
* [36]
* [35]
* [34]
* [33,37]
* [32,[30],37]
* [32,[30],34]
* [32,[30],31,37]
* [32,37]
* [32,34]
* [32,31,37]
* [31,37]
* [29,37]
* [28,37]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[37,28],[37,29],[37,31,32],[34,32],[37,32],[37,31,[30],32],[34,[30],32],[37,[30],32],[37,33],[36],[37],[37,28,[26,27]],[37,29,[26,27]],[37,31,32,[26,27]],[34,32,[26,27]],[37,32,[26,27]],[37,31,[30],32,[26,27]],[34,[30],32,[26,27]],[37,[30],32,[26,27]],[37,33,[26,27]],[36,[26,27]],[37,[26,27]]] --> 1 
* [[35]] --> 2 
* [[37,31],[34],[37,31,[30]],[34,[30]],[37,[30]]] --> 3 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [50,51,52,53] 
* CE 2 is refined into CE [54] 
* CE 3 is refined into CE [55,56,57,58] 
* CE 5 is refined into CE [59,60,61] 
* CE 6 is refined into CE [62,63] 
* CE 7 is refined into CE [64,65,66,67,68] 
* CE 8 is refined into CE [69,70,71] 


#### Refined cost equations start/3 
* CE 50: start(V1,V,V2) = 1+ minus(W2,X2,W2):1+ gcd(W2,Y2,Z2):1
     [W2>=0,W2+1=V,Z2=0,Y2=1,X2=0,V2=1,V1=2] 
* CE 51: start(V1,V,V2) = 1+ minus(W2,X2,W2):1+ gcd(W2,Y2,Z2):3
     [W2>=1,W2+1=V,Z2=0,Y2=1,X2=0,V2=1,V1=2] 
* CE 52: start(V1,V,V2) = 1+ minus(W2,X2,Y2):2+ gcd(Z2,V2,A3):1
     [V2>=1,W2>=0,V2=X2+1,W2+1=V,A3=0,Z2=0,Y2=0,V1=2] 
* CE 53: start(V1,V,V2) = 1+ minus(W2,X2,Y2):3+ gcd(Y2,V2,Z2):1
     [V2>=2,Y2>=0,V2+Y2=W2+1,V2+Y2=V,V2=X2+1,Z2=0,V1=2] 
* CE 54: start(V1,V,V2) = 0
     [V2>=0,V>=0,V1>=0] 
* CE 55: start(V1,V,V2) = 1+ minus(W2,X2,W2):1+ gcd(W2,Y2,Z2):1
     [W2>=0,W2+1=V2,Z2=0,Y2=1,X2=0,V=1,V1=1] 
* CE 56: start(V1,V,V2) = 1+ minus(W2,X2,W2):1+ gcd(W2,Y2,Z2):3
     [W2>=1,W2+1=V2,Z2=0,Y2=1,X2=0,V=1,V1=1] 
* CE 57: start(V1,V,V2) = 1+ minus(W2,X2,Y2):2+ gcd(Z2,V,A3):1
     [V>=1,W2>=0,V=X2+1,W2+1=V2,A3=0,Z2=0,Y2=0,V1=1] 
* CE 58: start(V1,V,V2) = 1+ minus(W2,X2,Y2):3+ gcd(Y2,V,Z2):1
     [V>=2,Y2>=0,V+Y2=W2+1,V+Y2=V2,V=X2+1,Z2=0,V1=1] 
* CE 59: start(V1,V,V2) = 0+ minus(V1,W2,V1):1
     [V1>=0,W2=0,V=0] 
* CE 60: start(V1,V,V2) = 0+ minus(V1,V,W2):2
     [V>=0,V1>=0,W2=0] 
* CE 61: start(V1,V,V2) = 0+ minus(W2,V,X2):3
     [X2>=0,V>=1,V+X2=W2,V+X2=V1] 
* CE 62: start(V1,V,V2) = 0+ pred(V1,W2):1
     [V1>=0,W2=0] 
* CE 63: start(V1,V,V2) = 0+ pred(W2,X2):2
     [X2>=0,X2+1=W2,X2+1=V1] 
* CE 64: start(V1,V,V2) = 0+ le(W2,V,X2):1
     [V>=0,X2=2,W2=0,V1=0] 
* CE 65: start(V1,V,V2) = 0+ le(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 66: start(V1,V,V2) = 0+ le(V1,V,W2):3
     [V>=0,V1>=0,W2=0] 
* CE 67: start(V1,V,V2) = 0+ le(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 
* CE 68: start(V1,V,V2) = 0+ le(V1,V,W2):5
     [V>=V1,V1>=1,W2=2] 
* CE 69: start(V1,V,V2) = 0+ gcd(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 70: start(V1,V,V2) = 0+ gcd(V1,W2,V1):2
     [V1>=1,W2=0,V=0] 
* CE 71: start(V1,V,V2) = 0+ gcd(V1,W2,X2):3
     [V1>=1,X2=0,W2=1,V=1] 

### Cost equations --> "Loop" of start/3 
* CEs [71] --> Loop 38 
* CEs [59,65,70] --> Loop 39 
* CEs [50,51,52,53] --> Loop 40 
* CEs [55,56,57,58] --> Loop 41 
* CEs [54,60,61,62,63,64,66,67,68,69] --> Loop 42 

#### Loops of start/3 
* Loop 38: start(V1,V,V2) [V1>=1,V=1] 
* Loop 39: start(V1,V,V2) [V1>=0,V=0] 
* Loop 40: start(V1,V,V2) [V2>=1,V>=1,V1=2] 
* Loop 41: start(V1,V,V2) [V2>=1,V>=1,V1=1] 
* Loop 42: start(V1,V,V2) [V1>=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [42]
* [41]
* [40]
* [39]
* [38]


### Merging Chains  start/3 into  External patterns of execution 
* [[41],[42]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 
* [[38]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of pred(V1,Out):
* Chain [17]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [16]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of loops [18] 

 * loop 18:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2
#### Cost of phase [18]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of loops [19] 

 * loop 19:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[19],[18],21]: 3*it(18)+1
  Such that:aux(1) =< V
it(18) =< aux(1)

  with precondition: [Out=0,V1>=1,V>=2] 

* Chain [[19],21]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[18],21]: 2*it(18)+1
  Such that:it(18) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [21]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [20]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [22] 

 * loop 22:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [22]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[22],25]: 1*it(22)+1
  Such that:it(22) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[22],24]: 1*it(22)+1
  Such that:it(22) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [25]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [24]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [23]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [30] 

 * loop 30:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4
#### Cost of phase [30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of loops [26,27] 

 * loop 26:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(14)+4
  Such that:s(13) =< V'
s(14) =< s(13)

 * loop 27:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(18)+4
  Such that:s(17) =< V'
s(18) =< s(17)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of phase [26,27]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*it(26)+4*it(27)+3*s(19)+3*s(21)+0
  Such that:aux(10) =< V1-V+1
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V1/2+V/2
aux(26) =< V1/2+V/2-V1'/2-V'/2
aux(27) =< V
aux(28) =< V-V'
it(26) =< aux(22)
it(27) =< aux(22)
s(20) =< aux(22)
it(26) =< aux(23)
it(27) =< aux(23)
s(20) =< aux(23)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(26)
it(27) =< aux(26)
aux(7) =< aux(27)
it(26) =< aux(27)
aux(7) =< aux(28)
it(26) =< aux(28)
it(27) =< aux(7)+aux(10)
it(27) =< aux(7)+aux(21)
s(22) =< aux(7)+aux(24)
s(22) =< aux(7)+aux(21)
it(27) =< aux(7)+aux(24)
s(22) =< it(27)*aux(27)
s(21) =< s(22)
s(19) =< s(20)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[30],37]: 6*it(30)+1*s(8)+2
  Such that:s(8) =< 1
aux(4) =< V1
it(30) =< aux(4)

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [[30],34]: 4*it(30)+2
  Such that:it(30) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[30],31,37]: 4*it(30)+1*s(8)+6
  Such that:s(8) =< 1
it(30) =< V1

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [[26,27],37]: 4*it(26)+4*it(27)+6*s(6)+3*s(21)+2
  Such that:aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(29) =< V1
aux(30) =< V1+V
aux(31) =< V
s(6) =< aux(30)
it(26) =< aux(30)
it(27) =< aux(30)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(31)
it(27) =< aux(31)+aux(10)
it(27) =< aux(31)+aux(29)
s(22) =< aux(31)+aux(29)
s(22) =< it(27)*aux(31)
s(21) =< s(22)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[26,27],36]: 4*it(26)+4*it(27)+3*s(19)+3*s(21)+2
  Such that:aux(10) =< V1-V+1
aux(32) =< V1
aux(33) =< V1+V
aux(34) =< V1/2+V/2
aux(35) =< V
it(26) =< aux(33)
it(27) =< aux(33)
it(26) =< aux(34)
it(27) =< aux(34)
it(26) =< aux(35)
it(27) =< aux(35)+aux(10)
it(27) =< aux(35)+aux(32)
s(22) =< aux(35)+aux(32)
s(22) =< it(27)*aux(35)
s(21) =< s(22)
s(19) =< aux(33)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],33,37]: 4*it(26)+4*it(27)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(36) =< V1
aux(37) =< V1+V
aux(38) =< V1/2+V/2
aux(39) =< V
it(26) =< aux(37)
it(27) =< aux(37)
it(26) =< aux(38)
it(27) =< aux(38)
it(26) =< aux(39)
it(27) =< aux(39)+aux(10)
it(27) =< aux(39)+aux(36)
s(22) =< aux(39)+aux(36)
s(22) =< it(27)*aux(39)
s(21) =< s(22)
s(19) =< aux(37)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],32,[30],37]: 4*it(26)+4*it(27)+6*it(30)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(40) =< V1
aux(41) =< V1+V
aux(42) =< V
aux(4) =< aux(41)
aux(4) =< aux(42)
it(30) =< aux(4)
it(26) =< aux(41)
it(27) =< aux(41)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(42)
it(27) =< aux(42)+aux(10)
it(27) =< aux(42)+aux(40)
s(22) =< aux(42)+aux(40)
s(22) =< it(27)*aux(42)
s(21) =< s(22)
s(19) =< aux(41)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],32,[30],34]: 4*it(26)+4*it(27)+7*it(30)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(43) =< V1
aux(44) =< V1+V
aux(45) =< V1/2+V/2
aux(46) =< V
aux(26) =< aux(44)
it(30) =< aux(44)
aux(26) =< aux(45)
it(26) =< aux(44)
it(27) =< aux(44)
it(26) =< aux(45)
it(27) =< aux(45)
it(26) =< aux(26)
it(27) =< aux(26)
it(26) =< aux(46)
it(27) =< aux(46)+aux(10)
it(27) =< aux(46)+aux(43)
s(22) =< aux(46)+aux(43)
s(22) =< it(27)*aux(46)
s(21) =< s(22)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[26,27],32,[30],31,37]: 4*it(26)+4*it(27)+7*it(30)+1*s(8)+3*s(21)+10
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(47) =< V1
aux(48) =< V1+V
aux(49) =< V1/2+V/2
aux(50) =< V
aux(26) =< aux(48)
it(30) =< aux(48)
aux(26) =< aux(49)
it(26) =< aux(48)
it(27) =< aux(48)
it(26) =< aux(49)
it(27) =< aux(49)
it(26) =< aux(26)
it(27) =< aux(26)
it(26) =< aux(50)
it(27) =< aux(50)+aux(10)
it(27) =< aux(50)+aux(47)
s(22) =< aux(50)+aux(47)
s(22) =< it(27)*aux(50)
s(21) =< s(22)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[26,27],32,37]: 4*it(26)+4*it(27)+2*s(6)+1*s(8)+3*s(19)+3*s(21)+6
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(25) =< V1/2+V/2
aux(51) =< V1
aux(52) =< V1+V
aux(53) =< V
aux(3) =< aux(52)
aux(3) =< aux(53)
s(6) =< aux(3)
it(26) =< aux(52)
it(27) =< aux(52)
it(26) =< aux(25)
it(27) =< aux(25)
it(26) =< aux(53)
it(27) =< aux(53)+aux(10)
it(27) =< aux(53)+aux(51)
s(22) =< aux(53)+aux(51)
s(22) =< it(27)*aux(53)
s(21) =< s(22)
s(19) =< aux(52)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],32,34]: 4*it(26)+4*it(27)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(54) =< V1
aux(55) =< V1+V
aux(56) =< V1/2+V/2
aux(57) =< V
it(26) =< aux(55)
it(27) =< aux(55)
it(26) =< aux(56)
it(27) =< aux(56)
it(26) =< aux(57)
it(27) =< aux(57)+aux(10)
it(27) =< aux(57)+aux(54)
s(22) =< aux(57)+aux(54)
s(22) =< it(27)*aux(57)
s(21) =< s(22)
s(19) =< aux(55)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],32,31,37]: 4*it(26)+4*it(27)+1*s(8)+3*s(19)+3*s(21)+10
  Such that:s(8) =< 1
aux(10) =< V1-V+1
aux(58) =< V1
aux(59) =< V1+V
aux(60) =< V1/2+V/2
aux(61) =< V
it(26) =< aux(59)
it(27) =< aux(59)
it(26) =< aux(60)
it(27) =< aux(60)
it(26) =< aux(61)
it(27) =< aux(61)+aux(10)
it(27) =< aux(61)+aux(58)
s(22) =< aux(61)+aux(58)
s(22) =< it(27)*aux(61)
s(21) =< s(22)
s(19) =< aux(59)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[26,27],29,37]: 4*it(26)+4*it(27)+7*s(8)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1/2+V/2
aux(67) =< V
s(8) =< aux(66)
it(26) =< aux(65)
it(27) =< aux(65)
it(26) =< aux(66)
it(27) =< aux(66)
it(26) =< aux(67)
it(27) =< aux(67)+aux(10)
it(27) =< aux(67)+aux(64)
s(22) =< aux(67)+aux(64)
s(22) =< it(27)*aux(67)
s(21) =< s(22)
s(19) =< aux(65)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[26,27],28,37]: 4*it(26)+4*it(27)+7*s(8)+3*s(19)+3*s(21)+6
  Such that:aux(10) =< V1-V+1
aux(70) =< V1
aux(71) =< V1+V
aux(72) =< V1/2+V/2
aux(73) =< V
s(8) =< aux(70)
it(26) =< aux(71)
it(27) =< aux(71)
it(26) =< aux(72)
it(27) =< aux(72)
it(26) =< aux(73)
it(27) =< aux(73)+aux(10)
it(27) =< aux(73)+aux(70)
s(22) =< aux(73)+aux(70)
s(22) =< it(27)*aux(73)
s(21) =< s(22)
s(19) =< aux(71)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=8] 

* Chain [37]: 2*s(6)+1*s(8)+2
  Such that:s(8) =< V
aux(3) =< V1
s(6) =< aux(3)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [36]: 2
  with precondition: [V1=1,Out=0,V>=2] 

* Chain [35]: 1
  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [34]: 2
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [33,37]: 1*s(8)+6
  Such that:s(8) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [32,[30],37]: 6*it(30)+1*s(8)+6
  Such that:s(8) =< 1
aux(4) =< V
it(30) =< aux(4)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [32,[30],34]: 4*it(30)+6
  Such that:it(30) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [32,[30],31,37]: 4*it(30)+1*s(8)+10
  Such that:s(8) =< 1
it(30) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [32,37]: 2*s(6)+1*s(8)+6
  Such that:s(8) =< 1
aux(3) =< V
s(6) =< aux(3)

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [32,34]: 6
  with precondition: [V1=1,Out=0,V>=2] 

* Chain [32,31,37]: 1*s(8)+10
  Such that:s(8) =< 1

  with precondition: [V1=1,Out=0,V>=2] 

* Chain [31,37]: 1*s(8)+6
  Such that:s(8) =< 1

  with precondition: [V=1,Out=0,V1>=1] 

* Chain [29,37]: 7*s(8)+6
  Such that:aux(63) =< V
s(8) =< aux(63)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [28,37]: 7*s(8)+6
  Such that:aux(69) =< V1
s(8) =< aux(69)

  with precondition: [Out=0,V1>=2,V>=V1+1] 


#### Cost of chains of start(V1,V,V2):
* Chain [42]: 33*s(180)+17*s(184)+10*s(191)+36*s(193)+36*s(194)+27*s(196)+44*s(197)+8*s(199)+8*s(201)+8*s(202)+6*s(204)+7*s(206)+10
  Such that:s(185) =< 1
s(187) =< V1-V+1
s(188) =< V1+V
s(189) =< V1/2+V/2
aux(82) =< V1
aux(83) =< V
s(184) =< aux(82)
s(180) =< aux(83)
s(191) =< s(185)
s(193) =< s(188)
s(194) =< s(188)
s(193) =< s(189)
s(194) =< s(189)
s(193) =< aux(83)
s(194) =< aux(83)+s(187)
s(194) =< aux(83)+aux(82)
s(195) =< aux(83)+aux(82)
s(195) =< s(194)*aux(83)
s(196) =< s(195)
s(197) =< s(188)
s(198) =< s(188)
s(198) =< aux(83)
s(199) =< s(198)
s(200) =< s(188)
s(200) =< s(189)
s(201) =< s(188)
s(202) =< s(188)
s(201) =< s(189)
s(202) =< s(189)
s(201) =< s(200)
s(202) =< s(200)
s(201) =< aux(83)
s(202) =< aux(83)+s(187)
s(202) =< aux(83)+aux(82)
s(203) =< aux(83)+aux(82)
s(203) =< s(202)*aux(83)
s(204) =< s(203)
s(206) =< s(189)

  with precondition: [V1>=0] 

* Chain [41]: 57*s(213)+36*s(215)+36*s(216)+27*s(218)+118*s(219)+8*s(221)+8*s(223)+8*s(224)+6*s(226)+14*s(228)+107*s(234)+36*s(243)+36*s(244)+27*s(246)+8*s(251)+8*s(252)+6*s(254)+7*s(256)+36*s(266)+36*s(267)+27*s(269)+8*s(272)+8*s(274)+8*s(275)+6*s(277)+16*s(278)+12
  Such that:s(260) =< -2*V+V2+1
s(237) =< -V+1
s(259) =< -V+V2
s(239) =< V/2
aux(88) =< 1
aux(89) =< V
aux(90) =< V2
aux(91) =< V2/2
s(213) =< aux(88)
s(219) =< aux(90)
s(234) =< aux(89)
s(243) =< aux(89)
s(244) =< aux(89)
s(243) =< s(239)
s(244) =< s(239)
s(244) =< aux(89)+s(237)
s(245) =< aux(89)
s(245) =< s(244)*aux(89)
s(246) =< s(245)
s(250) =< aux(89)
s(250) =< s(239)
s(251) =< aux(89)
s(252) =< aux(89)
s(251) =< s(239)
s(252) =< s(239)
s(251) =< s(250)
s(252) =< s(250)
s(252) =< aux(89)+s(237)
s(253) =< aux(89)
s(253) =< s(252)*aux(89)
s(254) =< s(253)
s(256) =< s(239)
s(266) =< aux(90)
s(267) =< aux(90)
s(266) =< aux(91)
s(267) =< aux(91)
s(266) =< aux(89)
s(267) =< aux(89)+s(260)
s(267) =< aux(89)+s(259)
s(268) =< aux(89)+s(259)
s(268) =< s(267)*aux(89)
s(269) =< s(268)
s(271) =< aux(90)
s(271) =< aux(89)
s(272) =< s(271)
s(222) =< aux(90)
s(222) =< aux(91)
s(274) =< aux(90)
s(275) =< aux(90)
s(274) =< aux(91)
s(275) =< aux(91)
s(274) =< s(222)
s(275) =< s(222)
s(274) =< aux(89)
s(275) =< aux(89)+s(260)
s(275) =< aux(89)+s(259)
s(276) =< aux(89)+s(259)
s(276) =< s(275)*aux(89)
s(277) =< s(276)
s(278) =< s(259)
s(228) =< aux(91)
s(215) =< aux(90)
s(216) =< aux(90)
s(215) =< aux(91)
s(216) =< aux(91)
s(215) =< aux(88)
s(216) =< aux(88)+aux(90)
s(217) =< aux(88)+aux(90)
s(217) =< s(216)*aux(88)
s(218) =< s(217)
s(220) =< aux(90)
s(220) =< aux(88)
s(221) =< s(220)
s(223) =< aux(90)
s(224) =< aux(90)
s(223) =< aux(91)
s(224) =< aux(91)
s(223) =< s(222)
s(224) =< s(222)
s(223) =< aux(88)
s(224) =< aux(88)+aux(90)
s(225) =< aux(88)+aux(90)
s(225) =< s(224)*aux(88)
s(226) =< s(225)

  with precondition: [V1=1,V>=1,V2>=1] 

* Chain [40]: 57*s(286)+36*s(288)+36*s(289)+27*s(291)+118*s(292)+8*s(294)+8*s(296)+8*s(297)+6*s(299)+14*s(301)+107*s(307)+36*s(316)+36*s(317)+27*s(319)+8*s(324)+8*s(325)+6*s(327)+7*s(329)+36*s(339)+36*s(340)+27*s(342)+8*s(345)+8*s(347)+8*s(348)+6*s(350)+16*s(351)+12
  Such that:s(333) =< V-2*V2+1
s(332) =< V-V2
s(310) =< -V2+1
s(312) =< V2/2
aux(96) =< 1
aux(97) =< V
aux(98) =< V/2
aux(99) =< V2
s(286) =< aux(96)
s(292) =< aux(97)
s(307) =< aux(99)
s(316) =< aux(99)
s(317) =< aux(99)
s(316) =< s(312)
s(317) =< s(312)
s(317) =< aux(99)+s(310)
s(318) =< aux(99)
s(318) =< s(317)*aux(99)
s(319) =< s(318)
s(323) =< aux(99)
s(323) =< s(312)
s(324) =< aux(99)
s(325) =< aux(99)
s(324) =< s(312)
s(325) =< s(312)
s(324) =< s(323)
s(325) =< s(323)
s(325) =< aux(99)+s(310)
s(326) =< aux(99)
s(326) =< s(325)*aux(99)
s(327) =< s(326)
s(329) =< s(312)
s(339) =< aux(97)
s(340) =< aux(97)
s(339) =< aux(98)
s(340) =< aux(98)
s(339) =< aux(99)
s(340) =< aux(99)+s(333)
s(340) =< aux(99)+s(332)
s(341) =< aux(99)+s(332)
s(341) =< s(340)*aux(99)
s(342) =< s(341)
s(344) =< aux(97)
s(344) =< aux(99)
s(345) =< s(344)
s(295) =< aux(97)
s(295) =< aux(98)
s(347) =< aux(97)
s(348) =< aux(97)
s(347) =< aux(98)
s(348) =< aux(98)
s(347) =< s(295)
s(348) =< s(295)
s(347) =< aux(99)
s(348) =< aux(99)+s(333)
s(348) =< aux(99)+s(332)
s(349) =< aux(99)+s(332)
s(349) =< s(348)*aux(99)
s(350) =< s(349)
s(351) =< s(332)
s(301) =< aux(98)
s(288) =< aux(97)
s(289) =< aux(97)
s(288) =< aux(98)
s(289) =< aux(98)
s(288) =< aux(96)
s(289) =< aux(96)+aux(97)
s(290) =< aux(96)+aux(97)
s(290) =< s(289)*aux(96)
s(291) =< s(290)
s(293) =< aux(97)
s(293) =< aux(96)
s(294) =< s(293)
s(296) =< aux(97)
s(297) =< aux(97)
s(296) =< aux(98)
s(297) =< aux(98)
s(296) =< s(295)
s(297) =< s(295)
s(296) =< aux(96)
s(297) =< aux(96)+aux(97)
s(298) =< aux(96)+aux(97)
s(298) =< s(297)*aux(96)
s(299) =< s(298)

  with precondition: [V1=2,V>=1,V2>=1] 

* Chain [39]: 1
  with precondition: [V=0,V1>=0] 

* Chain [38]: 3*s(355)+14*s(356)+6
  Such that:s(353) =< 1
s(354) =< V1
s(355) =< s(353)
s(356) =< s(354)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [42] with precondition: [V1>=0] 
    - Upper bound: 50*V1+20+nat(V)*66+nat(V1+V)*140+nat(V1/2+V/2)*7 
    - Complexity: n 
* Chain [41] with precondition: [V1=1,V>=1,V2>=1] 
    - Upper bound: 261*V+291*V2+154+nat(-V+V2)*49+7/2*V+7*V2 
    - Complexity: n 
* Chain [40] with precondition: [V1=2,V>=1,V2>=1] 
    - Upper bound: 291*V+261*V2+154+nat(V-V2)*49+7*V+7/2*V2 
    - Complexity: n 
* Chain [39] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [38] with precondition: [V=1,V1>=1] 
    - Upper bound: 14*V1+9 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): max([14*V1+8,nat(V)*66+19+max([nat(V1+V)*140+50*V1+nat(V1/2+V/2)*7,nat(V)*195+134+nat(V2)*261+nat(V/2)*7+nat(V2/2)*7+max([nat(-V+V2)*49+nat(V2)*30+nat(V2/2)*7,nat(V-V2)*49+nat(V)*30+nat(V/2)*7])])])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 71 ms.
* Invariants computed in 315 ms.
   - Backward Invariants 180 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 375 ms.
* Termination proved in 34 ms.
* Upper bounds computed in 1235 ms.
   - Equation cost structures 343 ms.
   - Phase cost structures 188 ms.
   - Chain cost structures 385 ms.
   - Solving cost expressions 57 ms.
* Total analysis performed in 2122 ms.

