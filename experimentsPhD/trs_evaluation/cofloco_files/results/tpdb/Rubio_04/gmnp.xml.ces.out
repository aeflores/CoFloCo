
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [e/2]
1. recursive  : [f/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into e/2
1. SCC is partially evaluated into f/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations e/2 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 


#### Refined cost equations e/2 
* CE 11: e(V,Out) = 0
     [V>=0,Out=0] 
* CE 12: e(V,Out) = 1+ e(W,Out)
     [W>=0,W+1=V] 

### Cost equations --> "Loop" of e/2 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of e/2 
* Loop 9: e(V,Out)->  e(V',Out)
                  [V'>=0,V'+1=V] 
* Loop 10: e(V,Out) [V>=0,Out=0] 

### Ranking functions of CR e(V,Out) 
* RF of phase [9]: [V]

#### Partial ranking functions of CR e(V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:e(V,Out) 
* [[9],10]
* [10]


### Merging Chains  e/2 into  External patterns of execution 
* [[10],[10,[9]]] --> 1 


### Specialization of cost equations f/2 
* CE 5 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17] 


#### Refined cost equations f/2 
* CE 13: f(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 14: f(V,Out) = 0
     [V>=0,Out=0] 
* CE 15: f(V,Out) = 1+ f(W,Out)
     [W=1,V=2] 
* CE 16: f(V,Out) = 1+ f(W,Out)
     [W=2,V=1] 
* CE 17: f(V,Out) = 1+ f(W,Out)
     [W=1,V=0] 

### Cost equations --> "Loop" of f/2 
* CEs [15] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of f/2 
* Loop 11: f(V,Out)->  f(V',Out)
                  [V'=1,V=2] 
* Loop 12: f(V,Out)->  f(V',Out)
                  [V'=2,V=1] 
* Loop 13: f(V,Out)->  f(V',Out)
                  [V'=1,V=0] 
* Loop 14: f(V,Out) [V>=1,V=Out+1] 
* Loop 15: f(V,Out) [V>=0,Out=0] 

### Ranking functions of CR f(V,Out) 

#### Partial ranking functions of CR f(V,Out) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V-1 depends on loops [12:1] 
  - RF of loop [12:1]:
    -V+2 depends on loops [11:1] 


### Resulting Chains:f(V,Out) 
* [[11,12]]...
* [[11,12],15]
* [[11,12],14]
* [15]
* [14]
* [13,[11,12]]...
* [13,[11,12],15]
* [13,[11,12],14]
* [13,15]
* [13,14]


### Merging Chains  f/2 into  External patterns of execution 
* [[14,13],[15,13],[14,[11,12],13],[15,[11,12],13]] --> 1 
* [[15],[15,[11,12]]] --> 2 
* [[14]] --> 3 
* [[14,[11,12]]] --> 4 
* [[[11,12],13]] --> 5 
* [[[11,12]]] --> 6 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [18,19,20,21,22,23] 
* CE 3 is refined into CE [24] 


#### Refined cost equations start/1 
* CE 18: start(V) = 0+ f(W,X):1
     [X>=0,1>=X,W=0,V=0] 
* CE 19: start(V) = 0+ f(V,W):2
     [V>=0,W=0] 
* CE 20: start(V) = 0+ f(W,X):3
     [X>=0,X+1=W,X+1=V] 
* CE 21: start(V) = 0+ f(V,W):4
     [W>=0,V>=1,1>=W,2>=V] 
* CE 22: start(V) = 0+ f(W,X):5
     [W=0,V=0] 
* CE 23: start(V) = 0+ f(V,W):6
     [V>=1,2>=V] 
* CE 24: start(V) = 0+ e(V,W):1
     [V>=0,W=0] 

### Cost equations --> "Loop" of start/1 
* CEs [21] --> Loop 16 
* CEs [18,19,20,24] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 

#### Loops of start/1 
* Loop 16: start(V) [V>=1,2>=V] 
* Loop 17: start(V) [V>=0] 
* Loop 18: start(V) [V>=1,2>=V] 
* Loop 19: start(V) [V=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [19]...
* [18]...
* [17]
* [16]


### Merging Chains  start/1 into  External patterns of execution 
* [[16],[17]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:e(V,Out) -> [e(V',Out')] 
1
#### Cost of phase [9]:e(V,Out) -> [e(V',Out')] 
1*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of chains of e(V,Out):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V

  with precondition: [Out=0,V>=1] 

* Chain [10]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [11,12] 

 * loop 11:f(V,Out) -> [f(V',Out')] 
1
 * loop 12:f(V,Out) -> [f(V',Out')] 
1
#### Cost of phase [11,12]:f(V,Out) -> [f(V',Out')] 
2*it(11)+0
#### Cost of phase [11,12]:f(V,Out) -> [f(V',Out')] 
2*it(11)+0
#### Cost of phase [11,12]:f(V,Out) -> [f(V',Out')] 
2*it(11)+0
#### Cost of chains of f(V,Out):
* Chain [[11,12]]...: 2*it(11)+0
  with precondition: [2>=V,V>=1] 

* Chain [[11,12],15]: 2*it(11)+0
  with precondition: [Out=0,2>=V,V>=1] 

* Chain [[11,12],14]: 2*it(11)+1
  with precondition: [2>=V,1>=Out,V>=1,Out>=0] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0] 

* Chain [14]: 1
  with precondition: [V=Out+1,V>=1] 

* Chain [13,[11,12]]...: 2*it(11)+1
  with precondition: [V=0] 

* Chain [13,[11,12],15]: 2*it(11)+1
  with precondition: [V=0,Out=0] 

* Chain [13,[11,12],14]: 2*it(11)+2
  with precondition: [V=0,1>=Out,Out>=0] 

* Chain [13,15]: 1
  with precondition: [V=0,Out=0] 

* Chain [13,14]: 2
  with precondition: [V=0,Out=0] 


#### Cost of chains of start(V):
* Chain [19]...: 2*s(5)+1
  with precondition: [V=0] 

* Chain [18]...: 2*s(6)+0
  with precondition: [2>=V,V>=1] 

* Chain [17]: 2*s(7)+1*s(9)+1
  Such that:s(9) =< V

  with precondition: [V>=0] 

* Chain [16]: 2*s(10)+1
  with precondition: [2>=V,V>=1] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [19]... with precondition: [V=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [2>=V,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16] with precondition: [2>=V,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 55 ms.
   - Backward Invariants 29 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 66 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 255 ms.

