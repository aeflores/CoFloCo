
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [ifMinus/4,minus/3]
2. recursive  : [quot/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into quot/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 16 is refined into CE [20] 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 
* CE 15 is refined into CE [23] 


#### Refined cost equations le/3 
* CE 20: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 21: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 22: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 23: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [23] --> Loop 11 
* CEs [20] --> Loop 12 
* CEs [21] --> Loop 13 
* CEs [22] --> Loop 14 

#### Loops of le/3 
* Loop 11: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 12: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 13: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 14: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [11]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[11],14]
* [[11],13]
* [[11],12]
* [14]
* [13]
* [12]


### Merging Chains  le/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12],[12,[11]]] --> 3 
* [[13,[11]]] --> 4 
* [[14,[11]]] --> 5 


### Specialization of cost equations minus/3 
* CE 8 is refined into CE [24,25,26,27] 
* CE 10 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 12 is refined into CE [30] 
* CE 9 is refined into CE [31,32] 


#### Refined cost equations minus/3 
* CE 24: minus(V1,V,Out) = 1+ le(V1,W1,X1):2
     [V1>=1,X1=1,W1=0,Out=0,V=0] 
* CE 25: minus(V1,V,Out) = 1+ le(V1,V,W1):3
     [V>=0,V1>=1,W1=0,Out=0] 
* CE 26: minus(V1,V,Out) = 1+ le(V1,V,W1):4
     [V1>=V+1,V>=1,W1=1,Out=0] 
* CE 27: minus(V1,V,Out) = 1+ le(V1,V,W1):5
     [V>=V1,V1>=1,W1=2,Out=0] 
* CE 28: minus(V1,V,Out) = 2+ le(V1,V,W1):5
     [V>=V1,V1>=1,W1=2,Out=0] 
* CE 29: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 30: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 31: minus(V1,V,Out) = 2+ le(V1,W1,X1):2+ minus(Y1,Z1,A2)
     [V1>=1,V1=Y1+1,A2+1=Out,Z1=0,X1=1,W1=0,V=0] 
* CE 32: minus(V1,V,Out) = 2+ le(V1,V,W1):4+ minus(X1,V,Y1)
     [V1>=V+1,V>=1,V1=X1+1,Y1+1=Out,W1=1] 

### Cost equations --> "Loop" of minus/3 
* CEs [32] --> Loop 15 
* CEs [31] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [25,26,27,28,29,30] --> Loop 18 

#### Loops of minus/3 
* Loop 15: minus(V1,V,Out)->  minus(V1',V,Out')
                  [V1>=V+1,V>=1,Out=Out'+1,V1=V1'+1] 
* Loop 16: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=0,V=0] 
* Loop 17: minus(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 18: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [15]: [V1-1,V1-V]
* RF of phase [16]: [V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1-1
    V1-V
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[16],18]
* [[16],17]
* [[15],18]
* [18]
* [17]


### Merging Chains  minus/3 into  External patterns of execution 
* [[17],[18]] --> 1 
* [[17,[16]],[18,[16]]] --> 2 
* [[18,[15]]] --> 3 


### Specialization of cost equations quot/3 
* CE 17 is refined into CE [33] 
* CE 19 is refined into CE [34] 
* CE 18 is refined into CE [35,36,37] 


#### Refined cost equations quot/3 
* CE 33: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 34: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 35: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):1+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 36: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Y1,Z1,A2)
     [W1>=Y1,Y1>=1,A2+1=Out,W1+1=V1,Z1=1,X1=0,V=1] 
* CE 37: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [W1>=X1+Y1,Y1>=1,X1>=1,X1+1=Z1,A2+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of quot/3 
* CEs [37] --> Loop 19 
* CEs [35] --> Loop 20 
* CEs [36] --> Loop 21 
* CEs [33,34] --> Loop 22 

#### Loops of quot/3 
* Loop 19: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V+V1',V1'>=1,V>=2,Out=Out'+1] 
* Loop 20: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 21: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=V1'+1,V1'>=1,Out=Out'+1,V'=1,V=1] 
* Loop 22: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [19]: [V1/2-1,V1/2-V/2]
* RF of phase [21]: [V1-1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V1/2-1
    V1/2-V/2
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V1-1


### Resulting Chains:quot(V1,V,Out) 
* [[21],22]
* [[21],20,22]
* [[19],22]
* [[19],20,22]
* [22]
* [20,22]


### Merging Chains  quot/3 into  External patterns of execution 
* [[22,[21]]] --> 1 
* [[22,20,[21]]] --> 2 
* [[22]] --> 3 
* [[22,20]] --> 4 
* [[22,[19]]] --> 5 
* [[22,20,[19]]] --> 6 


### Specialization of cost equations start/3 
* CE 4 is refined into CE [38] 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40,41,42] 
* CE 5 is refined into CE [43,44,45,46,47] 
* CE 6 is refined into CE [48,49,50] 
* CE 7 is refined into CE [51,52,53,54,55,56] 


#### Refined cost equations start/3 
* CE 38: start(V1,V,V2) = 1
     [V2>=0,V>=1,V1=2] 
* CE 39: start(V1,V,V2) = 0
     [V2>=0,V>=0,V1>=0] 
* CE 40: start(V1,V,V2) = 1+ minus(W2,V2,X2):1
     [V2>=0,W2>=0,W2+1=V,X2=0,V1=1] 
* CE 41: start(V1,V,V2) = 1+ minus(W2,X2,Y2):2
     [W2>=Y2,Y2>=1,W2+1=V,X2=0,V2=0,V1=1] 
* CE 42: start(V1,V,V2) = 1+ minus(W2,V2,X2):3
     [W2>=V2+X2,X2>=1,V2>=1,W2+1=V,V1=1] 
* CE 43: start(V1,V,V2) = 0+ le(W2,V,X2):1
     [V>=0,X2=2,W2=0,V1=0] 
* CE 44: start(V1,V,V2) = 0+ le(V1,W2,X2):2
     [V1>=1,X2=1,W2=0,V=0] 
* CE 45: start(V1,V,V2) = 0+ le(V1,V,W2):3
     [V>=0,V1>=0,W2=0] 
* CE 46: start(V1,V,V2) = 0+ le(V1,V,W2):4
     [V1>=V+1,V>=1,W2=1] 
* CE 47: start(V1,V,V2) = 0+ le(V1,V,W2):5
     [V>=V1,V1>=1,W2=2] 
* CE 48: start(V1,V,V2) = 0+ minus(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 49: start(V1,V,V2) = 0+ minus(V1,W2,X2):2
     [V1>=X2,X2>=1,W2=0,V=0] 
* CE 50: start(V1,V,V2) = 0+ minus(V1,V,W2):3
     [V1>=V+W2,W2>=1,V>=1] 
* CE 51: start(V1,V,V2) = 0+ quot(V1,W2,X2):1
     [V1>=X2+1,X2>=1,W2=1,V=1] 
* CE 52: start(V1,V,V2) = 0+ quot(V1,W2,X2):2
     [V1>=X2,X2>=2,W2=1,V=1] 
* CE 53: start(V1,V,V2) = 0+ quot(V1,V,W2):3
     [V>=0,V1>=0,W2=0] 
* CE 54: start(V1,V,V2) = 0+ quot(V1,V,W2):4
     [V>=1,V1>=1,W2=1] 
* CE 55: start(V1,V,V2) = 0+ quot(V1,V,W2):5
     [V1+1>=2*W2+V,W2>=1,V>=2] 
* CE 56: start(V1,V,V2) = 0+ quot(V1,V,W2):6
     [V1+3>=2*W2+V,W2>=2,V>=2] 

### Cost equations --> "Loop" of start/3 
* CEs [51,52] --> Loop 23 
* CEs [44,49] --> Loop 24 
* CEs [38] --> Loop 25 
* CEs [40,41,42] --> Loop 26 
* CEs [39,43,45,46,47,48,50,53,54,55,56] --> Loop 27 

#### Loops of start/3 
* Loop 23: start(V1,V,V2) [V1>=2,V=1] 
* Loop 24: start(V1,V,V2) [V1>=1,V=0] 
* Loop 25: start(V1,V,V2) [V2>=0,V>=1,V1=2] 
* Loop 26: start(V1,V,V2) [V2>=0,V>=1,V1=1] 
* Loop 27: start(V1,V,V2) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [27]
* [26]
* [25]
* [24]
* [23]


### Merging Chains  start/3 into  External patterns of execution 
* [[26],[27]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [11]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of phase [11]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of phase [11]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[11],14]: 1*it(11)+1
  Such that:it(11) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [14]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [12]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [16] 

 * loop 16:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3
#### Cost of phase [16]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'

#### Cost of phase [16]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'

#### Cost of loops [15] 

 * loop 15:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*s(7)+3
  Such that:s(7) =< V'

#### Cost of phase [15]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(15)+1*s(8)+0
  Such that:it(15) =< V1
it(15) =< V1-V
it(15) =< V1-V-V1'+V'
it(15) =< V1-V1'
aux(3) =< V
s(8) =< it(15)*aux(3)

#### Cost of chains of minus(V1,V,Out):
* Chain [[16],18]: 3*it(16)+2*s(4)+3
  Such that:aux(1) =< V1-Out
it(16) =< Out
s(4) =< aux(1)

  with precondition: [V=0,Out>=1,V1>=Out] 

* Chain [[16],17]: 3*it(16)+2
  Such that:it(16) =< Out

  with precondition: [V=0,Out>=1,V1>=Out+1] 

* Chain [[15],18]: 3*it(15)+2*s(2)+2*s(4)+1*s(8)+3
  Such that:aux(1) =< V1-Out
it(15) =< Out
aux(4) =< V
s(4) =< aux(1)
s(2) =< aux(4)
s(8) =< it(15)*aux(4)

  with precondition: [V>=1,Out>=1,V1>=Out+V] 

* Chain [18]: 2*s(2)+2*s(4)+3
  Such that:aux(1) =< V1
aux(2) =< V
s(4) =< aux(1)
s(2) =< aux(2)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [17]: 2
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [21] 

 * loop 21:quot(V1,V,Out) -> [quot(V1',V',Out')] 
6*s(23)+2*s(24)+4
  Such that:s(21) =< V1-V1'
s(22) =< V1'
s(23) =< s(22)
s(24) =< s(21)

#### Cost of phase [21]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
4*it(21)+6*s(25)+2*s(26)+0
  Such that:aux(7) =< V1
aux(8) =< V1-V1'
it(21) =< aux(7)
s(27) =< aux(7)
it(21) =< aux(8)
s(27) =< aux(8)
s(28) =< it(21)*aux(7)
s(25) =< s(28)
s(26) =< s(27)

#### Cost of phase [21]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
4*it(21)+6*s(25)+2*s(26)+0
  Such that:aux(7) =< V1
aux(8) =< V1-V1'
it(21) =< aux(7)
s(27) =< aux(7)
it(21) =< aux(8)
s(27) =< aux(8)
s(28) =< it(21)*aux(7)
s(25) =< s(28)
s(26) =< s(27)

#### Cost of loops [19] 

 * loop 19:quot(V1,V,Out) -> [quot(V1',V',Out')] 
3*s(40)+2*s(42)+2*s(43)+1*s(44)+4
  Such that:s(39) =< V1-V1'
s(40) =< V1'
s(41) =< V'
s(42) =< s(39)
s(43) =< s(41)
s(44) =< s(40)*s(41)

#### Cost of phase [19]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
4*it(19)+3*s(45)+4*s(46)+1*s(48)+0
  Such that:aux(11) =< V1-V
it(19) =< V1/2
it(19) =< V1/2-V/2
it(19) =< V1/2-V/2-V1'/2+V'/2
it(19) =< V1/2-V1'/2
s(41) =< V
aux(12) =< V1+1
aux(13) =< V1-V1'
s(49) =< aux(12)
s(49) =< aux(13)
s(45) =< it(19)*aux(11)
s(46) =< s(49)
s(48) =< s(45)*s(41)

#### Cost of phase [19]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
4*it(19)+3*s(45)+4*s(46)+1*s(48)+0
  Such that:aux(11) =< V1-V
it(19) =< V1/2
it(19) =< V1/2-V/2
it(19) =< V1/2-V/2-V1'/2+V'/2
it(19) =< V1/2-V1'/2
s(41) =< V
aux(12) =< V1+1
aux(13) =< V1-V1'
s(49) =< aux(12)
s(49) =< aux(13)
s(45) =< it(19)*aux(11)
s(46) =< s(49)
s(48) =< s(45)*s(41)

#### Cost of chains of quot(V1,V,Out):
* Chain [[21],22]: 6*it(21)+6*s(25)+1
  Such that:aux(9) =< V1
it(21) =< aux(9)
s(28) =< it(21)*aux(9)
s(25) =< s(28)

  with precondition: [V=1,Out>=1,V1>=Out+1] 

* Chain [[21],20,22]: 8*it(21)+6*s(25)+2*s(32)+5
  Such that:s(30) =< 1
aux(10) =< V1
it(21) =< aux(10)
s(32) =< s(30)
s(28) =< it(21)*aux(10)
s(25) =< s(28)

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[19],22]: 4*it(19)+3*s(45)+4*s(46)+1*s(48)+1
  Such that:aux(13) =< V1
aux(12) =< V1+1
aux(11) =< V1-V
it(19) =< V1/2-V/2
s(41) =< V
s(49) =< aux(12)
s(49) =< aux(13)
s(45) =< it(19)*aux(11)
s(46) =< s(49)
s(48) =< s(45)*s(41)

  with precondition: [V>=2,Out>=1,V1+1>=2*Out+V] 

* Chain [[19],20,22]: 6*it(19)+2*s(32)+3*s(45)+4*s(46)+1*s(48)+5
  Such that:aux(12) =< V1+1
aux(11) =< V1-V
aux(14) =< V1
aux(15) =< V
it(19) =< aux(14)
s(32) =< aux(15)
s(49) =< aux(12)
s(49) =< aux(14)
s(45) =< it(19)*aux(11)
s(46) =< s(49)
s(48) =< s(45)*aux(15)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [22]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [20,22]: 2*s(31)+2*s(32)+5
  Such that:s(29) =< V1
s(30) =< V
s(31) =< s(29)
s(32) =< s(30)

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of start(V1,V,V2):
* Chain [27]: 10*s(51)+16*s(53)+1*s(63)+4*s(71)+3*s(74)+8*s(75)+1*s(76)+3*s(84)+1*s(86)+5
  Such that:s(71) =< V1/2-V/2
aux(17) =< V1
aux(18) =< V1+1
aux(19) =< V1-V
aux(20) =< V
s(53) =< aux(17)
s(51) =< aux(20)
s(73) =< aux(18)
s(73) =< aux(17)
s(74) =< s(71)*aux(19)
s(75) =< s(73)
s(76) =< s(74)*aux(20)
s(84) =< s(53)*aux(19)
s(86) =< s(84)*aux(20)
s(63) =< s(53)*aux(20)

  with precondition: [V1>=0,V>=0] 

* Chain [26]: 15*s(89)+4*s(90)+1*s(100)+4
  Such that:aux(23) =< V
aux(24) =< V2
s(89) =< aux(23)
s(90) =< aux(24)
s(100) =< s(89)*aux(24)

  with precondition: [V1=1,V>=1,V2>=0] 

* Chain [25]: 1
  with precondition: [V1=2,V>=1,V2>=0] 

* Chain [24]: 8*s(103)+3
  Such that:aux(25) =< V1
s(103) =< aux(25)

  with precondition: [V=0,V1>=1] 

* Chain [23]: 14*s(106)+12*s(108)+2*s(112)+5
  Such that:s(109) =< 1
aux(26) =< V1
s(106) =< aux(26)
s(112) =< s(109)
s(107) =< s(106)*aux(26)
s(108) =< s(107)

  with precondition: [V=1,V1>=2] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [27] with precondition: [V1>=0,V>=0] 
    - Upper bound: 16*V1+10*V+5+V*V1+nat(V1-V)*V*V1+nat(V1-V)*V*nat(V1/2-V/2)+ (8*V1+8)+nat(V1-V)*3*V1+nat(V1-V)*3*nat(V1/2-V/2)+nat(V1/2-V/2)*4 
    - Complexity: n^3 
* Chain [26] with precondition: [V1=1,V>=1,V2>=0] 
    - Upper bound: 15*V+4*V2+4+V2*V 
    - Complexity: n^2 
* Chain [25] with precondition: [V1=2,V>=1,V2>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [24] with precondition: [V=0,V1>=1] 
    - Upper bound: 8*V1+3 
    - Complexity: n 
* Chain [23] with precondition: [V=1,V1>=2] 
    - Upper bound: 14*V1+7+12*V1*V1 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V2): max([6*V1+2+max([12*V1*V1+2,2*V1+10*V+V*V1+nat(V1-V)*V*V1+nat(V1-V)*V*nat(V1/2-V/2)+ (8*V1+8)+nat(V1-V)*3*V1+nat(V1-V)*3*nat(V1/2-V/2)+nat(V1/2-V/2)*4])+ (8*V1+2),15*V+3+nat(V2)*4+nat(V2)*V])+1 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 55 ms.
* Invariants computed in 131 ms.
   - Backward Invariants 71 ms.
   - Transitive Invariants 21 ms.
* Refinement performed in 217 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 249 ms.
   - Equation cost structures 69 ms.
   - Phase cost structures 105 ms.
   - Chain cost structures 75 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 759 ms.

