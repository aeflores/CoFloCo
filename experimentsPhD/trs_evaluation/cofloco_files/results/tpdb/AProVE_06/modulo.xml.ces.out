
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [isZero/2]
1. recursive  : [le/3]
2. recursive  : [minus/3]
3. recursive  : [fun/6, (mod)/3]
4. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into isZero/2
1. SCC is partially evaluated into le/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into (mod)/3
4. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations isZero/2 
* CE 24 is refined into CE [26] 
* CE 25 is refined into CE [27] 
* CE 23 is refined into CE [28] 


#### Refined cost equations isZero/2 
* CE 26: isZero(V,Out) = 1
     [V>=1,Out=1] 
* CE 27: isZero(V,Out) = 0
     [V>=0,Out=0] 
* CE 28: isZero(V,Out) = 1
     [Out=2,V=0] 

### Cost equations --> "Loop" of isZero/2 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of isZero/2 
* Loop 19: isZero(V,Out) [V>=1,Out=1] 
* Loop 20: isZero(V,Out) [V>=0,Out=0] 
* Loop 21: isZero(V,Out) [Out=2,V=0] 

### Ranking functions of CR isZero(V,Out) 

#### Partial ranking functions of CR isZero(V,Out) 


### Resulting Chains:isZero(V,Out) 
* [21]
* [20]
* [19]


### Merging Chains  isZero/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations le/3 
* CE 17 is refined into CE [29] 
* CE 15 is refined into CE [30] 
* CE 14 is refined into CE [31] 
* CE 16 is refined into CE [32] 


#### Refined cost equations le/3 
* CE 29: le(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 30: le(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 31: le(V,V1,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 32: le(V,V1,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of le/3 
* CEs [32] --> Loop 22 
* CEs [29] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [31] --> Loop 25 

#### Loops of le/3 
* Loop 22: le(V,V1,Out)->  le(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 23: le(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 24: le(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 25: le(V,V1,Out) [V1>=0,Out=2,V=0] 

### Ranking functions of CR le(V,V1,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR le(V,V1,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:le(V,V1,Out) 
* [[22],25]
* [[22],24]
* [[22],23]
* [25]
* [24]
* [23]


### Merging Chains  le/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23],[23,[22]]] --> 3 
* [[24,[22]]] --> 4 
* [[25,[22]]] --> 5 


### Specialization of cost equations minus/3 
* CE 18 is refined into CE [33] 
* CE 19 is refined into CE [34] 
* CE 20 is refined into CE [35] 
* CE 22 is refined into CE [36] 
* CE 21 is refined into CE [37] 


#### Refined cost equations minus/3 
* CE 33: minus(A,A,B) = 1
     [A>=0,B=0] 
* CE 34: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 35: minus(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 36: minus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 37: minus(V,V1,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of minus/3 
* CEs [37] --> Loop 26 
* CEs [33] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [35,36] --> Loop 29 

#### Loops of minus/3 
* Loop 26: minus(V,V1,Out)->  minus(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 27: minus(A,A,B) [A>=0,B=0] 
* Loop 28: minus(A,B,A) [A>=0,B=0] 
* Loop 29: minus(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR minus(V,V1,Out) 
* RF of phase [26]: [V,V1]

#### Partial ranking functions of CR minus(V,V1,Out) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V
    V1


### Resulting Chains:minus(V,V1,Out) 
* [[26],29]
* [[26],28]
* [[26],27]
* [29]
* [28]
* [27]


### Merging Chains  minus/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27],[29],[27,[26]],[29,[26]]] --> 2 
* [[28,[26]]] --> 3 


### Specialization of cost equations (mod)/3 
* CE 12 is refined into CE [38,39] 
* CE 13 is refined into CE [40,41,42,43] 
* CE 10 is refined into CE [44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62] 
* CE 11 is refined into CE [63,64] 


#### Refined cost equations (mod)/3 
* CE 38: mod(V,V1,Out) = 2+ isZero(V1,W1):3+ le(V1,X1,Y1):2+ minus(Z1,V1,A2):2
     [V1>=1,A2=0,Z1=0,Y1=1,X1=0,W1=1,Out=0,V=0] 
* CE 39: mod(A,B,A) = 2+ isZero(B,C):3+ le(B,A,D):4+ minus(A,B,E):2
     [B>=A+1,A>=1,E=0,D=1,C=1] 
* CE 40: mod(V,V1,Out) = 2+ isZero(W1,X1):1+ le(Y1,V,Z1):1+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=2,Y1=0,X1=2,W1=0,Out=1,V1=0] 
* CE 41: mod(V,V1,Out) = 2+ isZero(W1,X1):1+ le(Y1,V,Z1):1+ minus(V,A2,B2):2
     [V>=0,B2=0,A2=0,Z1=2,Y1=0,X1=2,W1=0,Out=1,V1=0] 
* CE 42: mod(V,V1,Out) = 2+ isZero(W1,X1):1+ le(Y1,V,Z1):3+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=1,V1=0] 
* CE 43: mod(V,V1,Out) = 2+ isZero(W1,X1):1+ le(Y1,V,Z1):3+ minus(V,A2,B2):2
     [V>=0,B2=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=1,V1=0] 
* CE 44: mod(V,V1,Out) = 1+ isZero(W1,X1):1+ le(Y1,V,Z1):1+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=2,Y1=0,X1=2,W1=0,Out=0,V1=0] 
* CE 45: mod(V,V1,Out) = 1+ isZero(W1,X1):1+ le(Y1,V,Z1):1+ minus(V,A2,B2):2
     [V>=0,B2=0,A2=0,Z1=2,Y1=0,X1=2,W1=0,Out=0,V1=0] 
* CE 46: mod(V,V1,Out) = 1+ isZero(W1,X1):1+ le(Y1,V,Z1):3+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=0,V1=0] 
* CE 47: mod(V,V1,Out) = 1+ isZero(W1,X1):1+ le(Y1,V,Z1):3+ minus(V,A2,B2):2
     [V>=0,B2=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=0,V1=0] 
* CE 48: mod(V,V1,Out) = 1+ isZero(W1,X1):2+ le(Y1,V,Z1):1+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 49: mod(V,V1,Out) = 1+ isZero(W1,X1):2+ le(Y1,V,Z1):1+ minus(V,A2,B2):2
     [V>=0,B2=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 50: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,X1,Y1):2+ minus(Z1,V1,A2):2
     [V1>=1,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0,V=0] 
* CE 51: mod(V,V1,Out) = 1+ isZero(W1,X1):2+ le(Y1,V,Z1):3+ minus(V,A2,V):1
     [V>=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 52: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,V,X1):3+ minus(V,V1,Y1):2
     [V1>=0,V>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 53: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,X1,Y1):3+ minus(Z1,V1,A2):3
     [A2>=0,V1>=1,V1+A2=Z1,V1+A2=X1,V1+A2=V,Y1=0,W1=0,Out=0] 
* CE 54: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,V,X1):4+ minus(V,V1,Y1):2
     [V1>=V+1,V>=1,Y1=0,X1=1,W1=0,Out=0] 
* CE 55: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,V,X1):5+ minus(V,V1,Y1):2
     [V>=V1,V1>=1,Y1=0,X1=2,W1=0,Out=0] 
* CE 56: mod(V,V1,Out) = 1+ isZero(V1,W1):2+ le(V1,X1,Y1):5+ minus(Z1,V1,A2):3
     [A2>=0,V1>=1,V1+A2=Z1,V1+A2=X1,V1+A2=V,Y1=2,W1=0,Out=0] 
* CE 57: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,X1,Y1):2+ minus(Z1,V1,A2):2
     [V1>=1,A2=0,Z1=0,Y1=1,X1=0,W1=1,Out=0,V=0] 
* CE 58: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,V,X1):3+ minus(V,V1,Y1):2
     [V1>=1,V>=0,Y1=0,X1=0,W1=1,Out=0] 
* CE 59: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,X1,Y1):3+ minus(Z1,V1,A2):3
     [A2>=0,V1>=1,V1+A2=Z1,V1+A2=X1,V1+A2=V,Y1=0,W1=1,Out=0] 
* CE 60: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,V,X1):4+ minus(V,V1,Y1):2
     [V1>=V+1,V>=1,Y1=0,X1=1,W1=1,Out=0] 
* CE 61: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,V,X1):5+ minus(V,V1,Y1):2
     [V>=V1,V1>=1,Y1=0,X1=2,W1=1,Out=0] 
* CE 62: mod(V,V1,Out) = 1+ isZero(V1,W1):3+ le(V1,X1,Y1):5+ minus(Z1,V1,A2):3
     [A2>=0,V1>=1,V1+A2=Z1,V1+A2=X1,V1+A2=V,Y1=2,W1=1,Out=0] 
* CE 63: mod(V,V1,Out) = 2+ isZero(V1,W1):3+ le(V1,V,X1):5+ minus(V,V1,Y1):2+ mod(Z1,V1,Out)
     [V>=V1,V1>=1,Z1=0,Y1=0,X1=2,W1=1] 
* CE 64: mod(V,V1,Out) = 2+ isZero(V1,W1):3+ le(V1,X1,Y1):5+ minus(Z1,V1,A2):3+ mod(A2,V1,Out)
     [A2>=0,V1>=1,V1+A2=Z1,V1+A2=X1,V1+A2=V,Y1=2,W1=1] 

### Cost equations --> "Loop" of (mod)/3 
* CEs [64] --> Loop 30 
* CEs [63] --> Loop 31 
* CEs [39] --> Loop 32 
* CEs [40,41,42,43] --> Loop 33 
* CEs [44,45,46,47,48,49,51] --> Loop 34 
* CEs [38,50,52,53,54,55,56,57,58,59,60,61,62] --> Loop 35 

#### Loops of (mod)/3 
* Loop 30: mod(V,V1,Out)->  mod(V',V1,Out)
                  [V>=V1,V1>=1,V1+V'=V] 
* Loop 31: mod(V,V1,Out)->  mod(V',V1,Out)
                  [V>=V1,V1>=1,V'=0] 
* Loop 32: mod(A,B,A) [B>=A+1,A>=1] 
* Loop 33: mod(V,V1,Out) [V>=0,Out=1,V1=0] 
* Loop 34: mod(V,V1,Out) [V>=0,Out=0,V1=0] 
* Loop 35: mod(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR mod(V,V1,Out) 
* RF of phase [30]: [V,V-V1+1]

#### Partial ranking functions of CR mod(V,V1,Out) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V
    V-V1+1


### Resulting Chains:mod(V,V1,Out) 
* [[30],35]
* [[30],32]
* [[30],31,35]
* [35]
* [34]
* [33]
* [32]
* [31,35]


### Merging Chains  (mod)/3 into  External patterns of execution 
* [[35,31],[34],[35],[35,31,[30]],[35,[30]]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 
* [[32,[30]]] --> 4 


### Specialization of cost equations start/5 
* CE 5 is refined into CE [65] 
* CE 3 is refined into CE [66,67,68,69] 
* CE 2 is refined into CE [70] 
* CE 4 is refined into CE [71] 
* CE 6 is refined into CE [72,73,74,75,76] 
* CE 7 is refined into CE [77,78,79] 
* CE 8 is refined into CE [80,81,82] 
* CE 9 is refined into CE [83,84,85,86] 


#### Refined cost equations start/5 
* CE 65: start(V,V1,V20,V18,V19) = 1
     [V19>=0,V18>=0,V20>=0,V1>=0,V=2] 
* CE 66: start(V,V1,V20,V18,V19) = 1+ mod(V19,V18,W20):1
     [V18>=0,V19>=0,V20>=0,W20=0,V1=2,V=1] 
* CE 67: start(V,V1,V20,V18,V19) = 1+ mod(V19,W20,X20):2
     [V19>=0,V20>=0,X20=1,W20=0,V18=0,V1=2,V=1] 
* CE 68: start(V,V1,V20,V18,V19) = 1+ mod(V19,V18,V19):3
     [V18>=V19+1,V19>=1,V20>=0,V1=2,V=1] 
* CE 69: start(V,V1,V20,V18,V19) = 1+ mod(V19,V18,W20):4
     [V19>=V18+W20,V18>=W20+1,W20>=1,V20>=0,V1=2,V=1] 
* CE 70: start(V,V1,V20,V18,V19) = 0
     [V19>=0,V18>=0,V20>=0,V1>=0,V>=0] 
* CE 71: start(V,V1,V20,V18,V19) = 1
     [V19>=0,V18>=0,V20>=0,V1=1,V=1] 
* CE 72: start(V,V1,V20,V18,V19) = 0+ le(W20,V1,X20):1
     [V1>=0,X20=2,W20=0,V=0] 
* CE 73: start(V,V1,V20,V18,V19) = 0+ le(V,W20,X20):2
     [V>=1,X20=1,W20=0,V1=0] 
* CE 74: start(V,V1,V20,V18,V19) = 0+ le(V,V1,W20):3
     [V1>=0,V>=0,W20=0] 
* CE 75: start(V,V1,V20,V18,V19) = 0+ le(V,V1,W20):4
     [V>=V1+1,V1>=1,W20=1] 
* CE 76: start(V,V1,V20,V18,V19) = 0+ le(V,V1,W20):5
     [V1>=V,V>=1,W20=2] 
* CE 77: start(V,V1,V20,V18,V19) = 0+ minus(V,W20,V):1
     [V>=0,W20=0,V1=0] 
* CE 78: start(V,V1,V20,V18,V19) = 0+ minus(V,V1,W20):2
     [V1>=0,V>=0,W20=0] 
* CE 79: start(V,V1,V20,V18,V19) = 0+ minus(W20,V1,X20):3
     [X20>=0,V1>=1,V1+X20=W20,V1+X20=V] 
* CE 80: start(V,V1,V20,V18,V19) = 0+ isZero(W20,X20):1
     [X20=2,W20=0,V=0] 
* CE 81: start(V,V1,V20,V18,V19) = 0+ isZero(V,W20):2
     [V>=0,W20=0] 
* CE 82: start(V,V1,V20,V18,V19) = 0+ isZero(V,W20):3
     [V>=1,W20=1] 
* CE 83: start(V,V1,V20,V18,V19) = 0+ mod(V,V1,W20):1
     [V1>=0,V>=0,W20=0] 
* CE 84: start(V,V1,V20,V18,V19) = 0+ mod(V,W20,X20):2
     [V>=0,X20=1,W20=0,V1=0] 
* CE 85: start(V,V1,V20,V18,V19) = 0+ mod(V,V1,V):3
     [V1>=V+1,V>=1] 
* CE 86: start(V,V1,V20,V18,V19) = 0+ mod(V,V1,W20):4
     [V>=V1+W20,V1>=W20+1,W20>=1] 

### Cost equations --> "Loop" of start/5 
* CEs [73,77,84] --> Loop 36 
* CEs [65] --> Loop 37 
* CEs [66,67,68,69] --> Loop 38 
* CEs [71] --> Loop 39 
* CEs [70,72,74,75,76,78,79,80,81,82,83,85,86] --> Loop 40 

#### Loops of start/5 
* Loop 36: start(V,V1,V20,V18,V19) [V>=0,V1=0] 
* Loop 37: start(V,V1,V20,V18,V19) [V19>=0,V18>=0,V20>=0,V1>=0,V=2] 
* Loop 38: start(V,V1,V20,V18,V19) [V19>=0,V18>=0,V20>=0,V1=2,V=1] 
* Loop 39: start(V,V1,V20,V18,V19) [V19>=0,V18>=0,V20>=0,V1=1,V=1] 
* Loop 40: start(V,V1,V20,V18,V19) [V>=0] 

### Ranking functions of CR start(V,V1,V20,V18,V19) 

#### Partial ranking functions of CR start(V,V1,V20,V18,V19) 


### Resulting Chains:start(V,V1,V20,V18,V19) 
* [40]
* [39]
* [38]
* [37]
* [36]


### Merging Chains  start/5 into  External patterns of execution 
* [[39],[40]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 
* [[36]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of isZero(V,Out):
* Chain [21]: 1
  with precondition: [V=0,Out=2] 

* Chain [20]: 0
  with precondition: [Out=0,V>=0] 

* Chain [19]: 1
  with precondition: [Out=1,V>=1] 


#### Cost of loops [22] 

 * loop 22:le(V,V1,Out) -> [le(V',V1',Out')] 
1
#### Cost of phase [22]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'
it(22) =< V1
it(22) =< V1-V1'

#### Cost of phase [22]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'
it(22) =< V1
it(22) =< V1-V1'

#### Cost of phase [22]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'
it(22) =< V1
it(22) =< V1-V1'

#### Cost of chains of le(V,V1,Out):
* Chain [[22],25]: 1*it(22)+1
  Such that:it(22) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[22],24]: 1*it(22)+1
  Such that:it(22) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [25]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [24]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [23]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [26] 

 * loop 26:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1
#### Cost of phase [26]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V1
it(26) =< V1-V1'

#### Cost of phase [26]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V1
it(26) =< V1-V1'

#### Cost of chains of minus(V,V1,Out):
* Chain [[26],29]: 1*it(26)+1
  Such that:it(26) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [[26],28]: 1*it(26)+1
  Such that:it(26) =< V1

  with precondition: [V=Out+V1,V1>=1,V>=V1] 

* Chain [[26],27]: 1*it(26)+1
  Such that:it(26) =< V

  with precondition: [Out=0,V=V1,V>=1] 

* Chain [29]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [28]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [27]: 1
  with precondition: [Out=0,V1=V,V1>=0] 


#### Cost of loops [30] 

 * loop 30:mod(V,V1,Out) -> [mod(V',V1',Out')] 
2*s(39)+5
  Such that:s(38) =< V1'
s(39) =< s(38)

#### Cost of phase [30]:mod(V,V1,Out) -> [mod(V',V1',Out')] 
5*it(30)+2*s(40)+0
  Such that:it(30) =< V-V1+1
it(30) =< V-V1-V'+V1'
aux(12) =< V
aux(13) =< V-V'
it(30) =< aux(12)
s(41) =< aux(12)
it(30) =< aux(13)
s(41) =< aux(13)
s(40) =< s(41)

#### Cost of phase [30]:mod(V,V1,Out) -> [mod(V',V1',Out')] 
5*it(30)+2*s(40)+0
  Such that:it(30) =< V-V1+1
it(30) =< V-V1-V'+V1'
aux(12) =< V
aux(13) =< V-V'
it(30) =< aux(12)
s(41) =< aux(12)
it(30) =< aux(13)
s(41) =< aux(13)
s(40) =< s(41)

#### Cost of phase [30]:mod(V,V1,Out) -> [mod(V',V1',Out')] 
5*it(30)+2*s(40)+0
  Such that:it(30) =< V-V1+1
it(30) =< V-V1-V'+V1'
aux(12) =< V
aux(13) =< V-V'
it(30) =< aux(12)
s(41) =< aux(12)
it(30) =< aux(13)
s(41) =< aux(13)
s(40) =< s(41)

#### Cost of chains of mod(V,V1,Out):
* Chain [[30],35]: 7*it(30)+17*s(5)+12*s(8)+5
  Such that:aux(9) =< V-V1
aux(10) =< V1
aux(14) =< V
aux(9) =< aux(14)
it(30) =< aux(14)
s(8) =< aux(9)
s(5) =< aux(10)

  with precondition: [Out=0,V1>=1,V>=V1] 

* Chain [[30],32]: 5*it(30)+2*s(40)+2*s(42)+1*s(44)+5
  Such that:aux(12) =< V
it(30) =< V-V1+1
aux(13) =< V-Out
s(44) =< V1
aux(15) =< Out
s(42) =< aux(15)
it(30) =< aux(12)
s(41) =< aux(12)
it(30) =< aux(13)
s(41) =< aux(13)
s(40) =< s(41)

  with precondition: [Out>=1,V1>=Out+1,V>=Out+V1] 

* Chain [[30],31,35]: 8*it(30)+19*s(5)+10
  Such that:aux(17) =< V1
aux(18) =< V
it(30) =< aux(18)
s(5) =< aux(17)

  with precondition: [Out=0,V1>=1,V>=2*V1] 

* Chain [35]: 17*s(5)+12*s(8)+5
  Such that:aux(9) =< V
aux(10) =< V1
s(8) =< aux(9)
s(5) =< aux(10)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [34]: 6*s(48)+4
  Such that:aux(20) =< V
s(48) =< aux(20)

  with precondition: [V1=0,Out=0,V>=0] 

* Chain [33]: 4*s(57)+5
  Such that:aux(22) =< V
s(57) =< aux(22)

  with precondition: [V1=0,Out=1,V>=0] 

* Chain [32]: 2*s(42)+1*s(44)+5
  Such that:s(44) =< V1
aux(15) =< V
s(42) =< aux(15)

  with precondition: [V=Out,V>=1,V1>=V+1] 

* Chain [31,35]: 19*s(5)+1*s(46)+10
  Such that:s(46) =< V
aux(17) =< V1
s(5) =< aux(17)

  with precondition: [Out=0,V1>=1,V>=V1] 


#### Cost of chains of start(V,V1,V20,V18,V19):
* Chain [40]: 78*s(82)+42*s(84)+12*s(93)+5*s(98)+10
  Such that:s(88) =< V-V1
s(98) =< V-V1+1
aux(26) =< V
aux(27) =< V1
s(84) =< aux(26)
s(82) =< aux(27)
s(88) =< aux(26)
s(93) =< s(88)
s(98) =< aux(26)

  with precondition: [V>=0] 

* Chain [39]: 1
  with precondition: [V=1,V1=1,V20>=0,V18>=0,V19>=0] 

* Chain [38]: 44*s(108)+74*s(109)+12*s(110)+5*s(117)+11
  Such that:s(105) =< -V18+V19
s(117) =< -V18+V19+1
aux(29) =< V18
aux(30) =< V19
s(109) =< aux(29)
s(108) =< aux(30)
s(105) =< aux(30)
s(110) =< s(105)
s(117) =< aux(30)

  with precondition: [V=1,V1=2,V20>=0,V18>=0,V19>=0] 

* Chain [37]: 1
  with precondition: [V=2,V1>=0,V20>=0,V18>=0,V19>=0] 

* Chain [36]: 4*s(125)+5
  Such that:s(124) =< V
s(125) =< s(124)

  with precondition: [V1=0,V>=0] 


Closed-form bounds of start(V,V1,V20,V18,V19): 
-------------------------------------
* Chain [40] with precondition: [V>=0] 
    - Upper bound: 42*V+10+nat(V1)*78+nat(V-V1+1)*5+nat(V-V1)*12 
    - Complexity: n 
* Chain [39] with precondition: [V=1,V1=1,V20>=0,V18>=0,V19>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [38] with precondition: [V=1,V1=2,V20>=0,V18>=0,V19>=0] 
    - Upper bound: 74*V18+44*V19+11+nat(-V18+V19)*12+nat(-V18+V19+1)*5 
    - Complexity: n 
* Chain [37] with precondition: [V=2,V1>=0,V20>=0,V18>=0,V19>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [36] with precondition: [V1=0,V>=0] 
    - Upper bound: 4*V+5 
    - Complexity: n 

### Maximum cost of start(V,V1,V20,V18,V19): max([nat(V18)*74+10+nat(V19)*44+nat(-V18+V19)*12+nat(-V18+V19+1)*5,38*V+5+nat(V1)*78+nat(V-V1+1)*5+nat(V-V1)*12+ (4*V+4)])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 90 ms.
* Invariants computed in 81 ms.
   - Backward Invariants 52 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 230 ms.
* Termination proved in 15 ms.
* Upper bounds computed in 126 ms.
   - Equation cost structures 69 ms.
   - Phase cost structures 14 ms.
   - Chain cost structures 31 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 645 ms.

