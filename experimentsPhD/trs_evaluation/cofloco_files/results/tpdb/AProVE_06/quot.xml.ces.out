
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [minus/3]
2. recursive  : [fun/5,quot/3]
3. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into quot/3
3. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 21 is refined into CE [22] 
* CE 19 is refined into CE [23] 
* CE 18 is refined into CE [24] 
* CE 20 is refined into CE [25] 


#### Refined cost equations le/3 
* CE 22: le(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 23: le(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 24: le(V,V1,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 25: le(V,V1,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of le/3 
* CEs [25] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 

#### Loops of le/3 
* Loop 15: le(V,V1,Out)->  le(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 16: le(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 17: le(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 18: le(V,V1,Out) [V1>=0,Out=2,V=0] 

### Ranking functions of CR le(V,V1,Out) 
* RF of phase [15]: [V,V1]

#### Partial ranking functions of CR le(V,V1,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V
    V1


### Resulting Chains:le(V,V1,Out) 
* [[15],18]
* [[15],17]
* [[15],16]
* [18]
* [17]
* [16]


### Merging Chains  le/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16],[16,[15]]] --> 3 
* [[17,[15]]] --> 4 
* [[18,[15]]] --> 5 


### Specialization of cost equations minus/3 
* CE 13 is refined into CE [26] 
* CE 15 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 17 is refined into CE [29] 
* CE 16 is refined into CE [30] 


#### Refined cost equations minus/3 
* CE 26: minus(A,A,B) = 1
     [A>=0,B=0] 
* CE 27: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 28: minus(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 29: minus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 30: minus(V,V1,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of minus/3 
* CEs [30] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [28,29] --> Loop 22 

#### Loops of minus/3 
* Loop 19: minus(V,V1,Out)->  minus(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 20: minus(A,A,B) [A>=0,B=0] 
* Loop 21: minus(A,B,A) [A>=0,B=0] 
* Loop 22: minus(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR minus(V,V1,Out) 
* RF of phase [19]: [V,V1]

#### Partial ranking functions of CR minus(V,V1,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V
    V1


### Resulting Chains:minus(V,V1,Out) 
* [[19],22]
* [[19],21]
* [[19],20]
* [22]
* [21]
* [20]


### Merging Chains  minus/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20],[22],[20,[19]],[22,[19]]] --> 2 
* [[21,[19]]] --> 3 


### Specialization of cost equations quot/3 
* CE 12 is refined into CE [31,32,33,34] 
* CE 9 is refined into CE [35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53] 
* CE 10 is refined into CE [54,55] 
* CE 11 is refined into CE [56,57] 


#### Refined cost equations quot/3 
* CE 31: quot(V,V1,Out) = 2+ minus(V,W1,V):1+ le(X1,Y1,Z1):1+ le(A2,V,B2):1
     [V>=0,B2=2,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=1,V1=0] 
* CE 32: quot(V,V1,Out) = 2+ minus(V,W1,V):1+ le(X1,Y1,Z1):1+ le(A2,V,B2):3
     [V>=0,B2=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=1,V1=0] 
* CE 33: quot(V,V1,Out) = 2+ minus(V,W1,X1):2+ le(Y1,Z1,A2):1+ le(B2,V,C2):1
     [V>=0,C2=2,B2=0,A2=2,Z1=0,Y1=0,X1=0,W1=0,Out=1,V1=0] 
* CE 34: quot(V,V1,Out) = 2+ minus(V,W1,X1):2+ le(Y1,Z1,A2):1+ le(B2,V,C2):3
     [V>=0,C2=0,B2=0,A2=2,Z1=0,Y1=0,X1=0,W1=0,Out=1,V1=0] 
* CE 35: quot(V,V1,Out) = 1+ minus(V,W1,V):1+ le(X1,Y1,Z1):1+ le(A2,V,B2):1
     [V>=0,B2=2,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 36: quot(V,V1,Out) = 1+ minus(V,W1,V):1+ le(X1,Y1,Z1):1+ le(A2,V,B2):3
     [V>=0,B2=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 37: quot(V,V1,Out) = 1+ minus(V,W1,V):1+ le(X1,Y1,Z1):3+ le(A2,V,B2):1
     [V>=0,B2=2,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 38: quot(V,V1,Out) = 1+ minus(V,W1,V):1+ le(X1,Y1,Z1):3+ le(A2,V,B2):3
     [V>=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 39: quot(V,V1,Out) = 1+ minus(V,W1,X1):2+ le(Y1,Z1,A2):1+ le(B2,V,C2):1
     [V>=0,C2=2,B2=0,A2=2,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 40: quot(V,V1,Out) = 1+ minus(V,W1,X1):2+ le(Y1,Z1,A2):1+ le(B2,V,C2):3
     [V>=0,C2=0,B2=0,A2=2,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 41: quot(V,V1,Out) = 1+ minus(W1,V1,X1):2+ le(V1,Y1,Z1):2+ le(V1,A2,B2):2
     [V1>=1,B2=1,A2=0,Z1=1,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 42: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):2+ le(V1,V,Z1):3
     [V>=0,V1>=1,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 43: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):2+ le(V1,V,Z1):4
     [V1>=V+1,V>=1,Z1=1,Y1=1,X1=0,W1=0,Out=0] 
* CE 44: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):2+ le(V1,V,Z1):5
     [V>=V1,V1>=1,Z1=2,Y1=1,X1=0,W1=0,Out=0] 
* CE 45: quot(V,V1,Out) = 1+ minus(V,W1,X1):2+ le(Y1,Z1,A2):3+ le(B2,V,C2):1
     [V>=0,C2=2,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 46: quot(V,V1,Out) = 1+ minus(W1,V1,X1):2+ le(V1,Y1,Z1):3+ le(V1,A2,B2):2
     [V1>=1,B2=1,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 47: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):3+ le(V1,V,Z1):3
     [V>=0,V1>=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 48: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):3+ le(V1,V,Z1):4
     [V1>=V+1,V>=1,Z1=1,Y1=0,X1=0,W1=0,Out=0] 
* CE 49: quot(V,V1,Out) = 1+ minus(V,V1,W1):2+ le(V1,X1,Y1):3+ le(V1,V,Z1):5
     [V>=V1,V1>=1,Z1=2,Y1=0,X1=0,W1=0,Out=0] 
* CE 50: quot(V,V1,Out) = 1+ minus(V,V1,W1):3+ le(V1,X1,Y1):2+ le(V1,V,Z1):3
     [V>=V1,V1>=1,V1+W1=V,Z1=0,Y1=1,X1=0,Out=0] 
* CE 51: quot(V,V1,Out) = 1+ minus(V,V1,W1):3+ le(V1,X1,Y1):2+ le(V1,V,Z1):5
     [V>=V1,V1>=1,V1+W1=V,Z1=2,Y1=1,X1=0,Out=0] 
* CE 52: quot(V,V1,Out) = 1+ minus(V,V1,W1):3+ le(V1,X1,Y1):3+ le(V1,V,Z1):3
     [V>=V1,V1>=1,V1+W1=V,Z1=0,Y1=0,X1=0,Out=0] 
* CE 53: quot(V,V1,Out) = 1+ minus(V,V1,W1):3+ le(V1,X1,Y1):3+ le(V1,V,Z1):5
     [V>=V1,V1>=1,V1+W1=V,Z1=2,Y1=0,X1=0,Out=0] 
* CE 54: quot(V,V1,Out) = 2+ minus(W1,V1,X1):2+ le(V1,Y1,Z1):2+ le(V1,A2,B2):2
     [V1>=1,B2=1,A2=0,Z1=1,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 55: quot(V,V1,Out) = 2+ minus(V,V1,W1):2+ le(V1,X1,Y1):2+ le(V1,V,Z1):4
     [V1>=V+1,V>=1,Z1=1,Y1=1,X1=0,W1=0,Out=0] 
* CE 56: quot(V,V1,Out) = 2+ minus(V,V1,W1):2+ le(V1,X1,Y1):2+ le(V1,V,Z1):5+ quot(A2,V1,B2)
     [V>=V1,V1>=1,B2+1=Out,A2=0,Z1=2,Y1=1,X1=0,W1=0] 
* CE 57: quot(V,V1,Out) = 2+ minus(V,V1,W1):3+ le(V1,X1,Y1):2+ le(V1,V,Z1):5+ quot(A2,V1,B2)
     [V>=V1,V1>=1,V1+A2=V,V1+W1=V,B2+1=Out,Z1=2,Y1=1,X1=0] 

### Cost equations --> "Loop" of quot/3 
* CEs [57] --> Loop 23 
* CEs [56] --> Loop 24 
* CEs [31,32,33,34] --> Loop 25 
* CEs [35,36,37,38,39,40,45] --> Loop 26 
* CEs [41,42,43,44,46,47,48,49,50,51,52,53,54,55] --> Loop 27 

#### Loops of quot/3 
* Loop 23: quot(V,V1,Out)->  quot(V',V1,Out')
                  [V>=V1,V1>=1,V1+V'=V,Out=Out'+1] 
* Loop 24: quot(V,V1,Out)->  quot(V',V1,Out')
                  [V>=V1,V1>=1,Out=Out'+1,V'=0] 
* Loop 25: quot(V,V1,Out) [V>=0,Out=1,V1=0] 
* Loop 26: quot(V,V1,Out) [V>=0,Out=0,V1=0] 
* Loop 27: quot(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR quot(V,V1,Out) 
* RF of phase [23]: [V,V-V1+1]

#### Partial ranking functions of CR quot(V,V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V-V1+1


### Resulting Chains:quot(V,V1,Out) 
* [[23],27]
* [[23],24,27]
* [27]
* [26]
* [25]
* [24,27]


### Merging Chains  quot/3 into  External patterns of execution 
* [[26],[27]] --> 1 
* [[25]] --> 2 
* [[27,24],[27,24,[23]],[27,[23]]] --> 3 


### Specialization of cost equations start/4 
* CE 5 is refined into CE [58] 
* CE 4 is refined into CE [59,60,61] 
* CE 2 is refined into CE [62] 
* CE 3 is refined into CE [63] 
* CE 6 is refined into CE [64,65,66] 
* CE 7 is refined into CE [67,68,69,70,71] 
* CE 8 is refined into CE [72,73,74] 


#### Refined cost equations start/4 
* CE 58: start(V,V1,V17,V15) = 1
     [V15>=0,V1>=0,V>=0,V17=2] 
* CE 59: start(V,V1,V17,V15) = 1+ quot(V,V1,W17):1
     [V1>=0,V>=0,W17=0,V15=2,V17=1] 
* CE 60: start(V,V1,V17,V15) = 1+ quot(V,W17,X17):2
     [V>=0,X17=1,W17=0,V15=2,V17=1,V1=0] 
* CE 61: start(V,V1,V17,V15) = 1+ quot(V,V1,W17):3
     [V+1>=V1+W17,W17>=1,V1>=1,V15=2,V17=1] 
* CE 62: start(V,V1,V17,V15) = 0
     [V15>=0,V17>=0,V1>=0,V>=0] 
* CE 63: start(V,V1,V17,V15) = 1
     [V1>=0,V>=0,V15=1,V17=1] 
* CE 64: start(V,V1,V17,V15) = 0+ minus(V,W17,V):1
     [V>=0,W17=0,V1=0] 
* CE 65: start(V,V1,V17,V15) = 0+ minus(V,V1,W17):2
     [V1>=0,V>=0,W17=0] 
* CE 66: start(V,V1,V17,V15) = 0+ minus(W17,V1,X17):3
     [X17>=0,V1>=1,V1+X17=W17,V1+X17=V] 
* CE 67: start(V,V1,V17,V15) = 0+ le(W17,V1,X17):1
     [V1>=0,X17=2,W17=0,V=0] 
* CE 68: start(V,V1,V17,V15) = 0+ le(V,W17,X17):2
     [V>=1,X17=1,W17=0,V1=0] 
* CE 69: start(V,V1,V17,V15) = 0+ le(V,V1,W17):3
     [V1>=0,V>=0,W17=0] 
* CE 70: start(V,V1,V17,V15) = 0+ le(V,V1,W17):4
     [V>=V1+1,V1>=1,W17=1] 
* CE 71: start(V,V1,V17,V15) = 0+ le(V,V1,W17):5
     [V1>=V,V>=1,W17=2] 
* CE 72: start(V,V1,V17,V15) = 0+ quot(V,V1,W17):1
     [V1>=0,V>=0,W17=0] 
* CE 73: start(V,V1,V17,V15) = 0+ quot(V,W17,X17):2
     [V>=0,X17=1,W17=0,V1=0] 
* CE 74: start(V,V1,V17,V15) = 0+ quot(V,V1,W17):3
     [V+1>=V1+W17,W17>=1,V1>=1] 

### Cost equations --> "Loop" of start/4 
* CEs [58] --> Loop 28 
* CEs [59,61] --> Loop 29 
* CEs [63] --> Loop 30 
* CEs [60,64,68,73] --> Loop 31 
* CEs [62,65,66,67,69,70,71,72,74] --> Loop 32 

#### Loops of start/4 
* Loop 28: start(V,V1,V17,V15) [V15>=0,V1>=0,V>=0,V17=2] 
* Loop 29: start(V,V1,V17,V15) [V1>=0,V>=0,V15=2,V17=1] 
* Loop 30: start(V,V1,V17,V15) [V1>=0,V>=0,V15=1,V17=1] 
* Loop 31: start(V,V1,V17,V15) [V>=0,V1=0] 
* Loop 32: start(V,V1,V17,V15) [V1>=0,V>=0] 

### Ranking functions of CR start(V,V1,V17,V15) 

#### Partial ranking functions of CR start(V,V1,V17,V15) 


### Resulting Chains:start(V,V1,V17,V15) 
* [32]
* [31]
* [30]
* [29]
* [28]


### Merging Chains  start/4 into  External patterns of execution 
* [[31],[32]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:le(V,V1,Out) -> [le(V',V1',Out')] 
1
#### Cost of phase [15]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
it(15) =< V1
it(15) =< V1-V1'

#### Cost of phase [15]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
it(15) =< V1
it(15) =< V1-V1'

#### Cost of phase [15]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'
it(15) =< V1
it(15) =< V1-V1'

#### Cost of chains of le(V,V1,Out):
* Chain [[15],18]: 1*it(15)+1
  Such that:it(15) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [18]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [17]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [16]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [19] 

 * loop 19:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1
#### Cost of phase [19]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'
it(19) =< V1
it(19) =< V1-V1'

#### Cost of phase [19]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'
it(19) =< V1
it(19) =< V1-V1'

#### Cost of phase [19]:minus(V,V1,Out) -> [minus(V',V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V
it(19) =< V-V'
it(19) =< V1
it(19) =< V1-V1'

#### Cost of chains of minus(V,V1,Out):
* Chain [[19],22]: 1*it(19)+1
  Such that:it(19) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [[19],21]: 1*it(19)+1
  Such that:it(19) =< V1

  with precondition: [V=Out+V1,V1>=1,V>=V1] 

* Chain [[19],20]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [Out=0,V=V1,V>=1] 

* Chain [22]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [21]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [20]: 1
  with precondition: [Out=0,V1=V,V1>=0] 


#### Cost of loops [23] 

 * loop 23:quot(V,V1,Out) -> [quot(V',V1',Out')] 
2*s(48)+5
  Such that:s(47) =< V1'
s(48) =< s(47)

#### Cost of phase [23]:quot(V,V1,Out) -> [quot(V',V1',Out')] 
5*it(23)+2*s(49)+0
  Such that:it(23) =< V-V1+1
it(23) =< V-V1-V'+V1'
aux(14) =< V
aux(15) =< V-V'
it(23) =< aux(14)
s(50) =< aux(14)
it(23) =< aux(15)
s(50) =< aux(15)
s(49) =< s(50)

#### Cost of phase [23]:quot(V,V1,Out) -> [quot(V',V1',Out')] 
5*it(23)+2*s(49)+0
  Such that:it(23) =< V-V1+1
it(23) =< V-V1-V'+V1'
aux(14) =< V
aux(15) =< V-V'
it(23) =< aux(14)
s(50) =< aux(14)
it(23) =< aux(15)
s(50) =< aux(15)
s(49) =< s(50)

#### Cost of chains of quot(V,V1,Out):
* Chain [[23],27]: 7*it(23)+18*s(5)+14*s(6)+5
  Such that:aux(11) =< V-V1-Out+1
aux(12) =< V1
aux(16) =< V
aux(11) =< aux(16)
it(23) =< aux(16)
s(6) =< aux(11)
s(5) =< aux(12)

  with precondition: [V1>=1,Out>=1,V+1>=Out+V1] 

* Chain [[23],24,27]: 8*it(23)+20*s(5)+10
  Such that:aux(18) =< V1
aux(19) =< V
it(23) =< aux(19)
s(5) =< aux(18)

  with precondition: [V1>=1,Out>=2,V+2>=2*V1+Out] 

* Chain [27]: 18*s(5)+14*s(6)+5
  Such that:aux(11) =< V
aux(12) =< V1
s(6) =< aux(11)
s(5) =< aux(12)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [26]: 6*s(54)+4
  Such that:aux(22) =< V
s(54) =< aux(22)

  with precondition: [V1=0,Out=0,V>=0] 

* Chain [25]: 4*s(66)+5
  Such that:aux(24) =< V
s(66) =< aux(24)

  with precondition: [V1=0,Out=1,V>=0] 

* Chain [24,27]: 20*s(5)+1*s(51)+10
  Such that:s(51) =< V
aux(18) =< V1
s(5) =< aux(18)

  with precondition: [Out=1,V1>=1,V>=V1] 


#### Cost of chains of start(V,V1,V17,V15):
* Chain [32]: 38*s(91)+80*s(92)+14*s(106)+10
  Such that:s(101) =< V-V1
aux(28) =< V
aux(29) =< V1
s(91) =< aux(28)
s(92) =< aux(29)
s(101) =< aux(28)
s(106) =< s(101)

  with precondition: [V>=0,V1>=0] 

* Chain [31]: 8*s(108)+6
  Such that:aux(30) =< V
s(108) =< aux(30)

  with precondition: [V1=0,V>=0] 

* Chain [30]: 1
  with precondition: [V17=1,V15=1,V>=0,V1>=0] 

* Chain [29]: 36*s(113)+76*s(114)+14*s(120)+11
  Such that:s(115) =< V-V1
aux(31) =< V
aux(32) =< V1
s(113) =< aux(31)
s(114) =< aux(32)
s(115) =< aux(31)
s(120) =< s(115)

  with precondition: [V17=1,V15=2,V>=0,V1>=0] 

* Chain [28]: 1
  with precondition: [V17=2,V>=0,V1>=0,V15>=0] 


Closed-form bounds of start(V,V1,V17,V15): 
-------------------------------------
* Chain [32] with precondition: [V>=0,V1>=0] 
    - Upper bound: 38*V+80*V1+10+nat(V-V1)*14 
    - Complexity: n 
* Chain [31] with precondition: [V1=0,V>=0] 
    - Upper bound: 8*V+6 
    - Complexity: n 
* Chain [30] with precondition: [V17=1,V15=1,V>=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [29] with precondition: [V17=1,V15=2,V>=0,V1>=0] 
    - Upper bound: 36*V+76*V1+11+nat(V-V1)*14 
    - Complexity: n 
* Chain [28] with precondition: [V17=2,V>=0,V1>=0,V15>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1,V17,V15): 28*V+76*V1+4+nat(V-V1)*14+max([2*V+4*V1,1])+ (8*V+5)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 34 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 144 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 116 ms.
   - Equation cost structures 66 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 355 ms.

