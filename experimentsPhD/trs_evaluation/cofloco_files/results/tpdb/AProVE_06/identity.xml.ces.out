
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [g/3]
1. non_recursive  : [double/2]
2. non_recursive  : [half/2]
3. recursive  : [f/3]
4. non_recursive  : [id/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into g/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations g/3 
* CE 7 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations g/3 
* CE 15: g(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 16: g(V1,V,Out) = 1
     [Out=0,V=1,V1=1] 
* CE 17: g(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 18: g(V1,V,Out) = 1+ g(W1,X1,Y1)
     [X1>=0,Y1+1=Out,X1+2=V,W1=1,V1=1] 
* CE 19: g(V1,V,Out) = 1+ g(W1,X1,Y1)
     [X1>=0,Y1+2=Out,X1+1=V,W1=0,V1=0] 

### Cost equations --> "Loop" of g/3 
* CEs [18] --> Loop 9 
* CEs [19] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [16,17] --> Loop 12 

#### Loops of g/3 
* Loop 9: g(V1,V,Out)->  g(V1',V',Out')
                  [V>=2,Out=Out'+1,V=V'+2,V1'=1,V1=1] 
* Loop 10: g(V1,V,Out)->  g(V1',V',Out')
                  [V>=1,Out=Out'+2,V=V'+1,V1'=0,V1=0] 
* Loop 11: g(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 12: g(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR g(V1,V,Out) 
* RF of phase [9]: [V/2-1/2]
* RF of phase [10]: [V]

#### Partial ranking functions of CR g(V1,V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V/2-1/2
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V


### Resulting Chains:g(V1,V,Out) 
* [[10],12]
* [[10],11]
* [[9],12]
* [[9],11]
* [12]
* [11]


### Merging Chains  g/3 into  External patterns of execution 
* [[11,[10]],[12,[10]]] --> 1 
* [[11,[9]],[12,[9]]] --> 2 
* [[11],[12]] --> 3 


### Specialization of cost equations f/3 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22,23,24,25] 


#### Refined cost equations f/3 
* CE 20: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 21: f(A,B,B) = 1
     [B>=0,A=1] 
* CE 22: f(V1,V,Out) = 3+ g(W1,V1,X1):2+ g(Y1,V,Z1):1+ f(X1,Z1,Out)
     [2*V>=Z1,V1>=2*X1,Z1>=2,X1>=1,Y1=0,W1=1] 
* CE 23: f(V1,V,Out) = 3+ g(W1,V1,X1):2+ g(Y1,V,Z1):3+ f(X1,A2,Out)
     [V1>=2*X1,V>=0,X1>=1,A2=0,Z1=0,Y1=0,W1=1] 
* CE 24: f(V1,V,Out) = 3+ g(W1,V1,X1):3+ g(Y1,V,Z1):1+ f(A2,Z1,Out)
     [2*V>=Z1,Z1>=2,V1>=1,A2=0,Y1=0,X1=0,W1=1] 
* CE 25: f(V1,V,Out) = 3+ g(W1,V1,X1):3+ g(Y1,V,Z1):3+ f(A2,B2,Out)
     [V>=0,V1>=1,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=1] 

### Cost equations --> "Loop" of f/3 
* CEs [22] --> Loop 13 
* CEs [23] --> Loop 14 
* CEs [24] --> Loop 15 
* CEs [25] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of f/3 
* Loop 13: f(V1,V,Out)->  f(V1',V',Out)
                  [2*V>=V',V1>=2*V1',V'>=2,V1'>=1] 
* Loop 14: f(V1,V,Out)->  f(V1',V',Out)
                  [V1>=2*V1',V1'>=1,V>=0,V'=0] 
* Loop 15: f(V1,V,Out)->  f(V1',V',Out)
                  [2*V>=V',V'>=2,V1>=1,V1'=0] 
* Loop 16: f(V1,V,Out)->  f(V1',V',Out)
                  [V>=0,V1>=1,V'=0,V1'=0] 
* Loop 17: f(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 18: f(A,B,B) [B>=0,A=1] 

### Ranking functions of CR f(V1,V,Out) 
* RF of phase [13]: [V1-1]
* RF of phase [14]: [V1-1]

#### Partial ranking functions of CR f(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1-1
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V1-1


### Resulting Chains:f(V1,V,Out) 
* [[14],18]
* [[14],17]
* [[14],16,17]
* [[13],[14],18]
* [[13],[14],17]
* [[13],[14],16,17]
* [[13],18]
* [[13],17]
* [[13],16,17]
* [[13],15,17]
* [18]
* [17]
* [16,17]
* [15,17]


### Merging Chains  f/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17,15],[17,16],[17],[17,15,[13]],[17,16,[13]],[17,[13]],[17,16,[14],[13]],[17,[14],[13]],[18,[14],[13]],[17,16,[14]],[17,[14]],[18,[14]]] --> 2 
* [[18,[13]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [26,27,28] 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32] 
* CE 5 is refined into CE [33,34,35] 
* CE 6 is refined into CE [36,37,38] 


#### Refined cost equations start/2 
* CE 26: start(V1,V) = 0+ g(W1,V,X1):1
     [2*V>=X1,X1>=2,W1=0,V1=0] 
* CE 27: start(V1,V) = 0+ g(W1,V,X1):2
     [V>=2*X1,X1>=1,W1=1,V1=1] 
* CE 28: start(V1,V) = 0+ g(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 29: start(V1,V) = 1+ g(W1,V1,X1):1
     [2*V1>=X1,X1>=2,W1=0] 
* CE 30: start(V1,V) = 1+ g(W1,V1,X1):3
     [V1>=0,X1=0,W1=0] 
* CE 31: start(V1,V) = 1+ g(W1,V1,X1):2
     [V1>=2*X1,X1>=1,W1=1] 
* CE 32: start(V1,V) = 1+ g(W1,V1,X1):3
     [V1>=0,X1=0,W1=1] 
* CE 33: start(V1,V) = 0+ f(W1,V,V):1
     [V>=0,W1=1,V1=1] 
* CE 34: start(V1,V) = 0+ f(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 35: start(V1,V) = 0+ f(V1,V,W1):3
     [W1>=2,V>=1,V1>=2] 
* CE 36: start(V1,V) = 1+ f(W1,X1,Y1):1
     [Y1=1,X1=1,W1=1,V1=1] 
* CE 37: start(V1,V) = 1+ f(V1,W1,X1):2
     [V1>=0,X1=0,W1=1] 
* CE 38: start(V1,V) = 1+ f(V1,W1,X1):3
     [X1>=2,V1>=2,W1=1] 

### Cost equations --> "Loop" of start/2 
* CEs [27,33,36] --> Loop 19 
* CEs [26,28,29,30,31,32,34,35,37,38] --> Loop 20 

#### Loops of start/2 
* Loop 19: start(V1,V) [V1=1] 
* Loop 20: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[19],[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:g(V1,V,Out) -> [g(V1',V',Out')] 
1
#### Cost of phase [10]:g(V1,V,Out) -> [g(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:g(V1,V,Out) -> [g(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'

#### Cost of loops [9] 

 * loop 9:g(V1,V,Out) -> [g(V1',V',Out')] 
1
#### Cost of phase [9]:g(V1,V,Out) -> [g(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V/2
it(9) =< V/2-V'/2

#### Cost of phase [9]:g(V1,V,Out) -> [g(V1',V',Out')] 
1*it(9)+0
  Such that:it(9) =< V/2
it(9) =< V/2-V'/2

#### Cost of chains of g(V1,V,Out):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< Out/2

  with precondition: [V1=0,Out>=2,2*V>=Out] 

* Chain [[10],11]: 1*it(10)+1
  Such that:it(10) =< Out/2

  with precondition: [V1=0,2*V=Out,V>=1] 

* Chain [[9],12]: 1*it(9)+1
  Such that:it(9) =< Out

  with precondition: [V1=1,Out>=1,V>=2*Out] 

* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< Out

  with precondition: [V1=1,V=2*Out,V>=2] 

* Chain [12]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [11]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [14] 

 * loop 14:f(V1,V,Out) -> [f(V1',V',Out')] 
2*s(8)+5
  Such that:s(7) =< V1'
s(8) =< s(7)

#### Cost of phase [14]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(14)+2*s(9)+0
  Such that:aux(3) =< V1
aux(4) =< V1-V1'
it(14) =< aux(3)
s(10) =< aux(3)
it(14) =< aux(4)
s(10) =< aux(4)
s(9) =< s(10)

#### Cost of phase [14]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(14)+2*s(9)+0
  Such that:aux(3) =< V1
aux(4) =< V1-V1'
it(14) =< aux(3)
s(10) =< aux(3)
it(14) =< aux(4)
s(10) =< aux(4)
s(9) =< s(10)

#### Cost of phase [14]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(14)+2*s(9)+0
  Such that:aux(3) =< V1
aux(4) =< V1-V1'
it(14) =< aux(3)
s(10) =< aux(3)
it(14) =< aux(4)
s(10) =< aux(4)
s(9) =< s(10)

#### Cost of loops [13] 

 * loop 13:f(V1,V,Out) -> [f(V1',V',Out')] 
2*s(18)+2*s(17)+5
  Such that:s(15) =< V1'
s(16) =< V'/2
s(17) =< s(16)
s(18) =< s(15)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of phase [13]:f(V1,V,Out) -> [f(V1',V',Out')] 
5*it(13)+2*s(19)+2*s(20)+0
  Such that:aux(12) =< V1
aux(13) =< V1-V1'
it(13) =< aux(12)
s(21) =< aux(12)
it(13) =< aux(13)
s(21) =< aux(13)
s(19) =< s(21)

#### Cost of loops [13] 

 * loop 13:f(V1,V,Out) -> [f(V1',V',Out')] 
2*s(18)+2*s(17)+5
  Such that:s(15) =< V1'
s(16) =< V'/2
s(17) =< s(16)
s(18) =< s(15)

#### Cost of phase [13]:f(V1,V,Out) -> [] 
7*it(13)+5*it([15,17])+2*s(20)+2*s(25)+0
  Such that:it([15,17]) =< 1
aux(28) =< V1
it(13) =< aux(28)

#### Cost of chains of f(V1,V,Out):
* Chain [[14],18]: 7*it(14)+1
  Such that:aux(5) =< V1
it(14) =< aux(5)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [[14],17]: 7*it(14)+0
  Such that:aux(6) =< V1
it(14) =< aux(6)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [[14],16,17]: 7*it(14)+5
  Such that:aux(7) =< V1
it(14) =< aux(7)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [[13],[14],18]: 7*it(13)+7*it(14)+2*s(20)+1
  Such that:aux(5) =< V1/2
aux(14) =< V1
aux(5) =< aux(14)
it(14) =< aux(5)
it(13) =< aux(14)

  with precondition: [Out=0,V1>=4,V>=1] 

* Chain [[13],[14],17]: 7*it(13)+7*it(14)+2*s(20)+0
  Such that:aux(6) =< V1/2
aux(15) =< V1
aux(6) =< aux(15)
it(14) =< aux(6)
it(13) =< aux(15)

  with precondition: [Out=0,V1>=4,V>=1] 

* Chain [[13],[14],16,17]: 7*it(13)+7*it(14)+2*s(20)+5
  Such that:aux(7) =< V1/2
aux(16) =< V1
aux(7) =< aux(16)
it(14) =< aux(7)
it(13) =< aux(16)

  with precondition: [Out=0,V1>=4,V>=1] 

* Chain [[13],18]: 7*it(13)+2*s(20)+1
  Such that:aux(17) =< V1
it(13) =< aux(17)

  with precondition: [V1>=2,V>=1,Out>=2] 

* Chain [[13],17]: 7*it(13)+2*s(20)+0
  Such that:aux(18) =< V1
it(13) =< aux(18)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[13],16,17]: 7*it(13)+2*s(20)+5
  Such that:aux(19) =< V1
it(13) =< aux(19)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[13],15,17]: 7*it(13)+5*it([15,17])+2*s(20)+2*s(25)+0
  Such that:it([15,17]) =< 1
aux(28) =< V1
it(13) =< aux(28)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [18]: 1
  with precondition: [V1=1,V=Out,V>=0] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [16,17]: 5
  with precondition: [Out=0,V1>=1,V>=0] 

* Chain [15,17]: 2*s(24)+5
  Such that:s(23) =< V
s(24) =< s(23)

  with precondition: [Out=0,V1>=1,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [20]: 4*s(62)+142*s(64)+2*s(66)+12*s(67)+42*s(73)+32*s(75)+6
  Such that:aux(33) =< 1
aux(34) =< V1
aux(35) =< V1/2
aux(36) =< V
s(67) =< aux(33)
s(71) =< aux(35)
s(64) =< aux(34)
s(71) =< aux(34)
s(73) =< s(71)
s(62) =< aux(36)
s(66) =< aux(35)

  with precondition: [V1>=0] 

* Chain [19]: 2*s(92)+2
  Such that:s(91) =< V/2
s(92) =< s(91)

  with precondition: [V1=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19] with precondition: [V1=1] 
    - Upper bound: nat(V/2)*2+2 
    - Complexity: n 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 43 ms.
   - Backward Invariants 24 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 47 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 100 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 43 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 224 ms.

