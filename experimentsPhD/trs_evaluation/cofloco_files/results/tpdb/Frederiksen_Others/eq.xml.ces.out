
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eq0/3]
1. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eq0/3
1. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eq0/3 
* CE 4 is refined into CE [7] 
* CE 5 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 3 is refined into CE [10] 


#### Refined cost equations eq0/3 
* CE 7: eq0(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 8: eq0(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 9: eq0(V1,V,Out) = 1
     [Out=1,V=0,V1=0] 
* CE 10: eq0(V1,V,Out) = 1+ eq0(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of eq0/3 
* CEs [10] --> Loop 6 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eq0/3 
* Loop 6: eq0(V1,V,Out)->  eq0(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 7: eq0(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 8: eq0(V1,V,Out) [V>=1,Out=0,V1=0] 
* Loop 9: eq0(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR eq0(V1,V,Out) 
* RF of phase [6]: [V,V1]

#### Partial ranking functions of CR eq0(V1,V,Out) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V
    V1


### Resulting Chains:eq0(V1,V,Out) 
* [[6],9]
* [[6],8]
* [[6],7]
* [9]
* [8]
* [7]


### Merging Chains  eq0/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[7]] --> 3 
* [[8,[6]]] --> 4 
* [[7,[6]]] --> 5 
* [[9,[6]]] --> 6 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [11,12,13,14,15,16] 


#### Refined cost equations start/2 
* CE 11: start(V1,V) = 0+ eq0(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,V=0,V1=0] 
* CE 12: start(V1,V) = 0+ eq0(W1,V,X1):2
     [V>=1,X1=0,W1=0,V1=0] 
* CE 13: start(V1,V) = 0+ eq0(V1,W1,X1):3
     [V1>=1,X1=0,W1=0,V=0] 
* CE 14: start(V1,V) = 0+ eq0(V1,V,W1):4
     [V>=V1+1,V1>=1,W1=0] 
* CE 15: start(V1,V) = 0+ eq0(V1,V,W1):5
     [V1>=V+1,V>=1,W1=0] 
* CE 16: start(A,A) = 0+ eq0(A,A,B):6
     [A>=1,B=1] 

### Cost equations --> "Loop" of start/2 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [11] --> Loop 15 

#### Loops of start/2 
* Loop 10: start(V1,V) [V1>=V+1,V>=1] 
* Loop 11: start(V1,V) [V>=V1+1,V1>=1] 
* Loop 12: start(A,A) [A>=1] 
* Loop 13: start(V1,V) [V1>=1,V=0] 
* Loop 14: start(V1,V) [V>=1,V1=0] 
* Loop 15: start(V1,V) [V=0,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [15]
* [14]
* [13]
* [12]
* [11]
* [10]


### Merging Chains  start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 
* [[12]] --> 4 
* [[11]] --> 5 
* [[10]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eq0(V1,V,Out) -> [eq0(V1',V',Out')] 
1
#### Cost of phase [6]:eq0(V1,V,Out) -> [eq0(V1',V',Out')] 
1*it(6)+0
  Such that:it(6) =< V1
it(6) =< V1-V1'
it(6) =< V
it(6) =< V-V'

#### Cost of phase [6]:eq0(V1,V,Out) -> [eq0(V1',V',Out')] 
1*it(6)+0
  Such that:it(6) =< V1
it(6) =< V1-V1'
it(6) =< V
it(6) =< V-V'

#### Cost of phase [6]:eq0(V1,V,Out) -> [eq0(V1',V',Out')] 
1*it(6)+0
  Such that:it(6) =< V1
it(6) =< V1-V1'
it(6) =< V
it(6) =< V-V'

#### Cost of chains of eq0(V1,V,Out):
* Chain [[6],9]: 1*it(6)+1
  Such that:it(6) =< V1

  with precondition: [Out=1,V1=V,V1>=1] 

* Chain [[6],8]: 1*it(6)+1
  Such that:it(6) =< V1

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [[6],7]: 1*it(6)+1
  Such that:it(6) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [9]: 1
  with precondition: [V1=0,V=0,Out=1] 

* Chain [8]: 1
  with precondition: [V1=0,Out=0,V>=1] 

* Chain [7]: 1
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [15]: 1
  with precondition: [V1=0,V=0] 

* Chain [14]: 1
  with precondition: [V1=0,V>=1] 

* Chain [13]: 1
  with precondition: [V=0,V1>=1] 

* Chain [12]: 1*s(1)+1
  Such that:s(1) =< V

  with precondition: [V1=V,V1>=1] 

* Chain [11]: 1*s(2)+1
  Such that:s(2) =< V1

  with precondition: [V1>=1,V>=V1+1] 

* Chain [10]: 1*s(3)+1
  Such that:s(3) =< V

  with precondition: [V>=1,V1>=V+1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [15] with precondition: [V1=0,V=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [V1=0,V>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12] with precondition: [V1=V,V1>=1] 
    - Upper bound: V+1 
    - Complexity: n 
* Chain [11] with precondition: [V1>=1,V>=V1+1] 
    - Upper bound: V1+1 
    - Complexity: n 
* Chain [10] with precondition: [V>=1,V1>=V+1] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): max([V,V1])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 37 ms.
   - Backward Invariants 24 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 56 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 66 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 209 ms.

