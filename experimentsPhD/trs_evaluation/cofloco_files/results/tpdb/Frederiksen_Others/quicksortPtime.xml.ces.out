
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. recursive  : [gr/3]
2. recursive  : [lt/3]
3. recursive  : [fun/6,fun1/6,part/5]
4. non_recursive  : [notEmpty/2]
5. recursive [non_tail] : [qs/3,quicksort/2]
6. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into gr/3
2. SCC is partially evaluated into lt/3
3. SCC is partially evaluated into part/5
4. SCC is partially evaluated into notEmpty/2
5. SCC is partially evaluated into quicksort/2
6. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 23 is refined into CE [42] 
* CE 22 is refined into CE [43] 
* CE 21 is refined into CE [44] 


#### Refined cost equations app/3 
* CE 42: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 43: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 44: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [44] --> Loop 25 
* CEs [42] --> Loop 26 
* CEs [43] --> Loop 27 

#### Loops of app/3 
* Loop 25: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 26: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 27: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [25]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  app/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[27,[25]]] --> 3 
* [[26,[25]]] --> 4 


### Specialization of cost equations gr/3 
* CE 41 is refined into CE [45] 
* CE 40 is refined into CE [46] 
* CE 39 is refined into CE [47] 
* CE 38 is refined into CE [48] 


#### Refined cost equations gr/3 
* CE 45: gr(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 46: gr(V1,V,Out) = 0
     [V1>=1,Out=2,V=0] 
* CE 47: gr(V1,V,Out) = 0
     [V>=0,Out=1,V1=0] 
* CE 48: gr(V1,V,Out) = 0+ gr(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gr/3 
* CEs [48] --> Loop 28 
* CEs [45] --> Loop 29 
* CEs [46] --> Loop 30 
* CEs [47] --> Loop 31 

#### Loops of gr/3 
* Loop 28: gr(V1,V,Out)->  gr(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 29: gr(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 30: gr(V1,V,Out) [V1>=1,Out=2,V=0] 
* Loop 31: gr(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR gr(V1,V,Out) 
* RF of phase [28]: [V,V1]

#### Partial ranking functions of CR gr(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
    V1


### Resulting Chains:gr(V1,V,Out) 
* [[28],31]
* [[28],30]
* [[28],29]
* [31]
* [30]
* [29]


### Merging Chains  gr/3 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29],[29,[28]]] --> 3 
* [[31,[28]]] --> 4 
* [[30,[28]]] --> 5 


### Specialization of cost equations lt/3 
* CE 27 is refined into CE [49] 
* CE 26 is refined into CE [50] 
* CE 25 is refined into CE [51] 
* CE 24 is refined into CE [52] 


#### Refined cost equations lt/3 
* CE 49: lt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 50: lt(V1,V,Out) = 0
     [V1>=0,Out=1,V=0] 
* CE 51: lt(V1,V,Out) = 0
     [V>=1,Out=2,V1=0] 
* CE 52: lt(V1,V,Out) = 0+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of lt/3 
* CEs [52] --> Loop 32 
* CEs [49] --> Loop 33 
* CEs [50] --> Loop 34 
* CEs [51] --> Loop 35 

#### Loops of lt/3 
* Loop 32: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 33: lt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 34: lt(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 35: lt(V1,V,Out) [V>=1,Out=2,V1=0] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [32]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[32],35]
* [[32],34]
* [[32],33]
* [35]
* [34]
* [33]


### Merging Chains  lt/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33],[33,[32]]] --> 3 
* [[34,[32]]] --> 4 
* [[35,[32]]] --> 5 


### Specialization of cost equations part/5 
* CE 28 is refined into CE [53,54,55,56,57,58,59] 
* CE 31 is refined into CE [60,61,62,63,64] 
* CE 34 is refined into CE [65] 
* CE 33 is refined into CE [66,67,68,69] 
* CE 32 is refined into CE [70,71] 
* CE 30 is refined into CE [72,73] 
* CE 29 is refined into CE [74,75,76] 


#### Refined cost equations part/5 
* CE 53: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1+ lt(Z15,A16,B16):1
     [V>=A16+1,V>=X15+1,A16>=1,X15>=0,V15>=0,V10>=0,B16=2,Z15=0,Y15=1,W15=0,Out=0,V1=0] 
* CE 54: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1+ lt(Z15,A16,B16):2
     [V>=X15+1,X15>=0,V15>=0,V10>=0,B16=1,A16=0,Z15=0,Y15=1,W15=0,Out=0,V1=0] 
* CE 55: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1+ lt(Z15,A16,B16):3
     [V>=A16+1,V>=X15+1,A16>=0,X15>=0,V15>=0,V10>=0,B16=0,Z15=0,Y15=1,W15=0,Out=0,V1=0] 
* CE 56: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):2
     [W15>=V1,V>=W15+1,V1>=1,V15>=0,V10>=0,Z15=1,Y15=0,X15=1,Out=0] 
* CE 57: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):3
     [V>=Y15+1,W15>=V1,V>=W15+1,Y15>=0,V1>=1,V15>=0,V10>=0,Z15=0,X15=1,Out=0] 
* CE 58: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):4
     [V1>=Y15,W15>=V1,V>=W15+1,Y15>=1,V15>=0,V10>=0,Z15=1,X15=1,Out=0] 
* CE 59: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):5
     [V>=Y15+1,Y15>=V1+1,W15>=V1,V>=W15+1,V1>=1,V15>=0,V10>=0,Z15=2,X15=1,Out=0] 
* CE 60: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1
     [V>=X15+1,X15>=0,V15>=0,V10>=0,Y15=1,W15=0,Out=0,V1=0] 
* CE 61: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):2
     [V1>=1,V15>=0,V10>=0,V>=1,X15=2,W15=0,Out=0] 
* CE 62: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):3
     [V>=W15+1,W15>=0,V1>=0,V15>=0,V10>=0,X15=0,Out=0] 
* CE 63: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4
     [V>=W15+1,W15>=V1,V1>=1,V15>=0,V10>=0,X15=1,Out=0] 
* CE 64: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):5
     [V1>=W15+1,V>=W15+1,W15>=1,V15>=0,V10>=0,X15=2,Out=0] 
* CE 65: part(V1,V,V10,V15,Out) = 0
     [V15>=0,V10>=0,V>=0,V1>=0,Out=0] 
* CE 66: part(A,B,C,D,D) = 1+ app(E,D,D):1
     [D>=0,A>=0,E=0,C=0,B=0] 
* CE 67: part(V1,V,V10,V15,Out) = 1+ app(V10,V15,W15):2
     [V15>=0,V10>=0,V1>=0,W15=0,Out=0,V=0] 
* CE 68: part(V1,V,V10,V15,Out) = 1+ app(V10,W15,Out):3
     [Out>=V10,V10>=1,V1>=0,Out=V10+W15,Out=V10+V15,V=0] 
* CE 69: part(V1,V,V10,V15,Out) = 1+ app(V10,V15,Out):4
     [V10>=Out,Out>=1,V15>=0,V1>=0,V=0] 
* CE 70: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):2+ part(V1,Y15,Z15,V15,Out)
     [V>=Y15+1,Y15>=0,V1>=1,V15>=0,V10>=0,V+V10=Y15+Z15,X15=2,W15=0] 
* CE 71: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):5+ part(V1,Y15,Z15,V15,Out)
     [V>=Y15+1,V1>=W15+1,V>=W15+1,Y15>=0,W15>=1,V15>=0,V10>=0,V+V10=Y15+Z15,X15=2] 
* CE 72: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1+ lt(Z15,A16,B16):1+ part(C16,D16,V10,E16,Out)
     [V>=D16+1,V>=A16+1,V>=X15+1,D16>=0,A16>=1,X15>=0,V15>=0,V10>=0,V+V15=D16+E16,C16=0,B16=2,Z15=0,Y15=1,W15=0,V1=0] 
* CE 73: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):5+ part(V1,A16,V10,B16,Out)
     [V>=A16+1,V>=Y15+1,Y15>=V1+1,W15>=V1,V>=W15+1,A16>=0,V1>=1,V15>=0,V10>=0,V+V15=A16+B16,Z15=2,X15=1] 
* CE 74: part(V1,V,V10,V15,Out) = 1+ gr(W15,X15,Y15):1+ lt(Z15,A16,B16):2+ part(C16,D16,V10,V15,Out)
     [V>=D16+1,V>=X15+1,D16>=0,X15>=0,V15>=0,V10>=0,C16=0,B16=1,A16=0,Z15=0,Y15=1,W15=0,V1=0] 
* CE 75: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):2+ part(V1,A16,V10,V15,Out)
     [V>=A16+1,W15>=V1,V>=W15+1,A16>=0,V1>=1,V15>=0,V10>=0,Z15=1,Y15=0,X15=1] 
* CE 76: part(V1,V,V10,V15,Out) = 1+ gr(V1,W15,X15):4+ lt(V1,Y15,Z15):4+ part(V1,A16,V10,V15,Out)
     [V>=A16+1,V1>=Y15,W15>=V1,V>=W15+1,A16>=0,Y15>=1,V15>=0,V10>=0,Z15=1,X15=1] 

### Cost equations --> "Loop" of part/5 
* CEs [70,71] --> Loop 36 
* CEs [73] --> Loop 37 
* CEs [75,76] --> Loop 38 
* CEs [72] --> Loop 39 
* CEs [74] --> Loop 40 
* CEs [69] --> Loop 41 
* CEs [68] --> Loop 42 
* CEs [67] --> Loop 43 
* CEs [66] --> Loop 44 
* CEs [53,54,55,56,57,58,59,60,61,62,63,64,65] --> Loop 45 

#### Loops of part/5 
* Loop 36: part(V1,V,V10,V15,Out)->  part(V1,V',V10',V15,Out)
                  [V>=V'+1,V'>=0,V15>=0,V10>=0,V1>=1,V+V10=V'+V10'] 
* Loop 37: part(V1,V,V10,V15,Out)->  part(V1,V',V10,V15',Out)
                  [V>=V'+1,V>=V1+2,V'>=0,V15>=0,V10>=0,V1>=1,V+V15=V'+V15'] 
* Loop 38: part(V1,V,V10,V15,Out)->  part(V1,V',V10,V15,Out)
                  [V>=V'+1,V>=V1+1,V'>=0,V15>=0,V10>=0,V1>=1] 
* Loop 39: part(V1,V,V10,V15,Out)->  part(V1',V',V10,V15',Out)
                  [V>=V'+1,V'>=0,V15>=0,V10>=0,V>=2,V+V15=V'+V15',V1'=0,V1=0] 
* Loop 40: part(V1,V,V10,V15,Out)->  part(V1',V',V10,V15,Out)
                  [V>=V'+1,V'>=0,V15>=0,V10>=0,V1'=0,V1=0] 
* Loop 41: part(V1,V,V10,V15,Out) [V10>=Out,Out>=1,V15>=0,V1>=0,V=0] 
* Loop 42: part(V1,V,V10,V15,Out) [V15>=0,V10>=1,V1>=0,V10+V15=Out,V=0] 
* Loop 43: part(V1,V,V10,V15,Out) [V15>=0,V10>=0,V1>=0,Out=0,V=0] 
* Loop 44: part(A,B,C,D,D) [D>=0,A>=0,C=0,B=0] 
* Loop 45: part(V1,V,V10,V15,Out) [V15>=0,V10>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR part(V1,V,V10,V15,Out) 
* RF of phase [36,37,38]: [V]
* RF of phase [39,40]: [V]

#### Partial ranking functions of CR part(V1,V,V10,V15,Out) 
* Partial RF of phase [36,37,38]:
  - RF of loop [36:1]:
    V
  - RF of loop [37:1]:
    V-2
    -V1+V-1
  - RF of loop [38:1]:
    V-1
    -V1+V
* Partial RF of phase [39,40]:
  - RF of loop [39:1]:
    V-1
  - RF of loop [40:1]:
    V


### Resulting Chains:part(V1,V,V10,V15,Out) 
* [[39,40],45]
* [[39,40],44]
* [[39,40],43]
* [[39,40],42]
* [[39,40],41]
* [[36,37,38],45]
* [[36,37,38],44]
* [[36,37,38],43]
* [[36,37,38],42]
* [[36,37,38],41]
* [45]
* [44]
* [43]
* [42]
* [41]


### Merging Chains  part/5 into  External patterns of execution 
* [[44,[39,40]]] --> 1 
* [[45],[43,[36,37,38]],[45,[36,37,38]],[43,[39,40]],[45,[39,40]]] --> 2 
* [[41,[39,40]]] --> 3 
* [[42,[39,40]]] --> 4 
* [[44]] --> 5 
* [[43]] --> 6 
* [[42]] --> 7 
* [[41]] --> 8 
* [[44,[36,37,38]]] --> 9 
* [[41,[36,37,38]]] --> 10 
* [[42,[36,37,38]]] --> 11 


### Specialization of cost equations notEmpty/2 
* CE 35 is refined into CE [77] 
* CE 37 is refined into CE [78] 
* CE 36 is refined into CE [79] 


#### Refined cost equations notEmpty/2 
* CE 77: notEmpty(V1,Out) = 1
     [V1>=1,Out=2] 
* CE 78: notEmpty(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 79: notEmpty(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [77] --> Loop 46 
* CEs [78] --> Loop 47 
* CEs [79] --> Loop 48 

#### Loops of notEmpty/2 
* Loop 46: notEmpty(V1,Out) [V1>=1,Out=2] 
* Loop 47: notEmpty(V1,Out) [V1>=0,Out=0] 
* Loop 48: notEmpty(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR notEmpty(V1,Out) 

#### Partial ranking functions of CR notEmpty(V1,Out) 


### Resulting Chains:notEmpty(V1,Out) 
* [48]
* [47]
* [46]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[46]] --> 3 


### Specialization of cost equations quicksort/2 
* CE 18 is refined into CE [80] 
* CE 16 is refined into CE [81,82,83,84,85] 
* CE 19 is refined into CE [86] 
* CE 20 is refined into CE [87] 
* CE 17 is refined into CE [88,89,90,91,92,93,94,95,96,97,98,99] 


#### Refined cost equations quicksort/2 
* CE 80: quicksort(A,A) = 1
     [A>=1] 
* CE 81: quicksort(V1,Out) = 1+ part(W1,X1,Y1,Z1,A2):1
     [2*X1>=A2+2,X1>=A2,A2>=0,X1+1=V1,Z1=0,Y1=0,W1=0,Out=0] 
* CE 82: quicksort(V1,Out) = 1+ part(W1,X1,Y1,Z1,A2):2
     [X1>=1,W1>=0,W1+X1+1=V1,A2=0,Z1=0,Y1=0,Out=0] 
* CE 83: quicksort(V1,Out) = 1+ part(W1,X1,Y1,Z1,A2):9
     [3*X1>=2*W1+A2+4,X1>=A2,X1>=W1+1,A2>=0,W1>=1,W1+X1+1=V1,Z1=0,Y1=0,Out=0] 
* CE 84: quicksort(V1,Out) = 1+ part(W1,X1,Y1,Z1,A2):10
     [X1>=A2,A2>=1,W1>=1,W1+X1+1=V1,Z1=0,Y1=0,Out=0] 
* CE 85: quicksort(V1,Out) = 1+ part(W1,X1,Y1,Z1,A2):11
     [X1>=A2,A2>=1,W1>=1,W1+X1+1=V1,Z1=0,Y1=0,Out=0] 
* CE 86: quicksort(V1,Out) = 1
     [Out=0,V1=0] 
* CE 87: quicksort(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 88: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):1+ quicksort(B2,C2)+ app(D2,E2,F2):2
     [A2>=D2,2*X1>=A2+2,X1>=A2,E2>=0,D2>=1,D2+B2=A2,E2=C2+1,X1+1=V1,F2=0,Z1=0,Y1=0,W1=0,Out=0] 
* CE 89: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):1+ quicksort(B2,C2)+ app(D2,E2,Out):3
     [Out>=D2,A2>=D2,2*X1>=A2+2,X1>=A2,D2>=1,Out=D2+C2+1,Out=D2+E2,D2+B2=A2,X1+1=V1,Z1=0,Y1=0,W1=0] 
* CE 90: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):1+ quicksort(B2,C2)+ app(D2,E2,Out):4
     [D2>=Out,A2>=D2,2*X1>=A2+2,X1>=A2,Out>=1,E2>=0,D2+B2=A2,E2=C2+1,X1+1=V1,Z1=0,Y1=0,W1=0] 
* CE 91: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):9+ quicksort(B2,C2)+ app(D2,E2,F2):2
     [3*X1>=2*W1+A2+4,A2>=D2,X1>=A2,X1>=W1+1,E2>=0,D2>=1,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,F2=0,Z1=0,Y1=0,Out=0] 
* CE 92: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):9+ quicksort(B2,C2)+ app(D2,E2,Out):3
     [3*X1>=2*W1+A2+4,Out>=D2,A2>=D2,X1>=A2,X1>=W1+1,D2>=1,W1>=1,Out=W1+D2+C2+1,Out=D2+E2,D2+B2=A2,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 93: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):9+ quicksort(B2,C2)+ app(D2,E2,Out):4
     [3*X1>=2*W1+A2+4,D2>=Out,A2>=D2,X1>=A2,X1>=W1+1,Out>=1,E2>=0,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 94: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):10+ quicksort(B2,C2)+ app(D2,E2,F2):2
     [A2>=D2,X1>=A2,E2>=0,D2>=1,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,F2=0,Z1=0,Y1=0,Out=0] 
* CE 95: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):10+ quicksort(B2,C2)+ app(D2,E2,Out):3
     [Out>=D2,A2>=D2,X1>=A2,D2>=1,W1>=1,Out=W1+D2+C2+1,Out=D2+E2,D2+B2=A2,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 96: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):10+ quicksort(B2,C2)+ app(D2,E2,Out):4
     [D2>=Out,A2>=D2,X1>=A2,Out>=1,E2>=0,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 97: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):11+ quicksort(B2,C2)+ app(D2,E2,F2):2
     [A2>=D2,X1>=A2,E2>=0,D2>=1,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,F2=0,Z1=0,Y1=0,Out=0] 
* CE 98: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):11+ quicksort(B2,C2)+ app(D2,E2,Out):3
     [Out>=D2,A2>=D2,X1>=A2,D2>=1,W1>=1,Out=W1+D2+C2+1,Out=D2+E2,D2+B2=A2,W1+X1+1=V1,Z1=0,Y1=0] 
* CE 99: quicksort(V1,Out) = 2+ part(W1,X1,Y1,Z1,A2):11+ quicksort(B2,C2)+ app(D2,E2,Out):4
     [D2>=Out,A2>=D2,X1>=A2,Out>=1,E2>=0,W1>=1,D2+B2=A2,E2=W1+C2+1,W1+X1+1=V1,Z1=0,Y1=0] 

### Cost equations --> "Loop" of quicksort/2 
* CEs [89] --> Loop 49 
* CEs [93,96,99] --> Loop 50 
* CEs [92,95,98] --> Loop 51 
* CEs [90] --> Loop 52 
* CEs [91,94,97] --> Loop 53 
* CEs [88] --> Loop 54 
* CEs [80] --> Loop 55 
* CEs [81,82,83,84,85,86,87] --> Loop 56 

#### Loops of quicksort/2 
* Loop 49: quicksort(V1,Out)->  quicksort(V1',Out')
                  [Out'+2*V1>=Out+V1'+3,V1+Out'>=Out+V1',Out>=Out'+2,Out'+1>=0,V1'>=0] 
* Loop 50: quicksort(V1,Out)->  quicksort(V1',Out')
                  [V1+Out'>=Out+V1',V1>=Out+V1'+2,V1'>=0,Out>=1] 
* Loop 51: quicksort(V1,Out)->  quicksort(V1',Out')
                  [V1+Out'>=Out+V1',Out>=Out'+3,V1'>=0,Out>=1] 
* Loop 52: quicksort(V1,Out)->  quicksort(V1',Out')
                  [2*V1>=Out+V1'+4,V1>=Out+V1'+1,Out'+1>=0,V1'>=0,Out>=1] 
* Loop 53: quicksort(V1,Out)->  quicksort(V1',Out')
                  [V1+Out'>=V1'+1,V1>=V1'+3,V1'>=0,Out=0] 
* Loop 54: quicksort(V1,Out)->  quicksort(V1',Out')
                  [2*V1>=V1'+5,V1>=V1'+2,Out'+1>=0,V1'>=0,Out=0] 
* Loop 55: quicksort(A,A) [A>=1] 
* Loop 56: quicksort(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR quicksort(V1,Out) 
* RF of phase [49,50,51,52,53,54]: [V1/2-1/2]

#### Partial ranking functions of CR quicksort(V1,Out) 
* Partial RF of phase [49,50,51,52,53,54]:
  - RF of loop [49:1,52:1,54:1]:
    V1/2-1/2
  - RF of loop [50:1,51:1,53:1]:
    V1-2


### Resulting Chains:quicksort(V1,Out) 
* [[49,50,51,52,53,54],56]
* [[49,50,51,52,53,54],55]
* [56]
* [55]


### Merging Chains  quicksort/2 into  External patterns of execution 
* [[56]] --> 1 
* [[55]] --> 2 
* [[55,[49,50,51,52,53,54]],[56,[49,50,51,52,53,54]]] --> 3 


### Specialization of cost equations start/5 
* CE 8 is refined into CE [100,101,102,103,104,105,106,107,108,109,110] 
* CE 9 is refined into CE [111,112,113,114,115,116,117,118] 
* CE 2 is refined into CE [119] 
* CE 3 is refined into CE [120,121,122,123,124,125,126,127,128] 
* CE 4 is refined into CE [129,130,131,132,133] 
* CE 5 is refined into CE [134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152] 
* CE 6 is refined into CE [153,154,155,156,157,158,159,160,161,162,163] 
* CE 7 is refined into CE [164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179] 
* CE 10 is refined into CE [180,181,182] 
* CE 11 is refined into CE [183,184,185,186,187,188,189,190,191,192,193] 
* CE 12 is refined into CE [194,195,196,197] 
* CE 13 is refined into CE [198,199,200] 
* CE 14 is refined into CE [201,202,203,204,205] 
* CE 15 is refined into CE [206,207,208,209,210] 


#### Refined cost equations start/5 
* CE 100: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,Y37,Z37,A38):1
     [Z37+2*X37>=A38+2,X37+Z37>=A38,X37+Z37>=V10,A38>=Z37,V10>=X37+1,X37+Z37=V10+V37,Y37=0,W37=0,V15=0,V=0,V1=2] 
* CE 101: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):2
     [W37+X37>=V10,V10>=W37+1,V15>=0,W37>=0,V>=0,W37+X37=V10+V37,Y37=0,V1=2] 
* CE 102: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,V15,Y37,Z37):3
     [X37+Y37>=V10,V15>=Z37,V10>=X37+1,Z37>=1,X37>=1,X37+Y37=V10+V37,W37=0,V=0,V1=2] 
* CE 103: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,V15,Y37,Z37):4
     [V15+Y37+2*X37>=Z37+2,V15+X37+Y37>=Z37,Z37>=V15+Y37,X37+Y37>=V10,V10>=X37+1,V15>=1,X37+Y37=V10+V37,W37=0,V=0,V1=2] 
* CE 104: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,Y37,Y37):5
     [Y37>=V10,V>=0,V10>=1,Y37=V10+V37,X37=0,W37=0,V15=0,V1=2] 
* CE 105: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):6
     [X37>=V10,V15>=0,V>=0,V10>=1,X37=V10+V37,Y37=0,W37=0,V1=2] 
* CE 106: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):7
     [Y37>=V10+V15,V15>=1,V>=0,V10>=1,Y37=V10+V15+V37,Y37=V15+X37,W37=0,V1=2] 
* CE 107: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):8
     [V15>=Y37,X37>=V10,Y37>=1,V>=0,V10>=1,X37=V10+V37,W37=0,V1=2] 
* CE 108: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,Y37,Z37):9
     [Y37+3*W37>=2*V+Z37+4,W37+Y37>=Z37,W37+Y37>=V10,Z37>=Y37,V10>=W37+1,W37>=V+1,V>=1,W37+Y37=V10+V37,X37=0,V15=0,V1=2] 
* CE 109: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):10
     [V15+W37>=Y37,W37+X37>=V10,V10>=W37+1,Y37>=1,V15>=0,W37>=1,V>=1,W37+X37=V10+V37,V1=2] 
* CE 110: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):11
     [V15+W37+X37>=Y37,W37+Y37>=V15+X37+2,Y37>=V15+X37,W37+X37>=V10,Y37>=X37+1,V10>=W37+1,V15>=0,V>=1,W37+X37=V10+V37,V1=2] 
* CE 111: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):2
     [W37+X37>=V10,V10>=W37+1,V37>=0,W37>=0,V>=0,W37+X37=V10+V15,Y37=0,V1=2] 
* CE 112: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,Y37,V37,Z37):3
     [X37+Y37>=V10,Y37>=Z37,V10>=X37+1,Z37>=1,V37>=0,X37>=1,X37+Y37=V10+V15,W37=0,V=0,V1=2] 
* CE 113: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,Y37,V37,Z37):4
     [V37+Y37+2*X37>=Z37+2,V37+X37+Y37>=Z37,Z37>=V37+Y37,X37+Y37>=V10,V10>=X37+1,V37>=0,X37+Y37=V10+V15,W37=0,V=0,V1=2] 
* CE 114: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):6
     [X37>=V10,V37>=0,V>=0,V10>=1,X37=V10+V15,Y37=0,W37=0,V1=2] 
* CE 115: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,Y37,Z37):7
     [Z37>=X37,X37>=V10,V>=0,V10>=1,Z37=X37+Y37,Z37=V37+X37,X37=V10+V15,W37=0,V1=2] 
* CE 116: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):8
     [X37>=Y37,X37>=V10,Y37>=1,V37>=0,V>=0,V10>=1,X37=V10+V15,W37=0,V1=2] 
* CE 117: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):10
     [W37+X37>=Y37,W37+X37>=V10,V10>=W37+1,Y37>=1,V37>=0,W37>=1,V>=1,W37+X37=V10+V15,V1=2] 
* CE 118: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):11
     [V37+W37+X37>=Y37,W37+Y37>=V37+X37+2,Y37>=V37+X37,W37+X37>=V10,V10>=W37+1,V37>=0,V>=1,W37+X37=V10+V15,V1=2] 
* CE 119: start(V1,V,V10,V15,V37) = 0
     [V>=0,V1>=0] 
* CE 120: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):1+ app(Y37,Z37,A38):2
     [Z37>=1,Y37>=1,W37>=0,W37+Y37=V,Z37=V1+1,A38=0,X37=0] 
* CE 121: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):1+ app(Y37,Z37,A38):3
     [A38>=Y37+1,Y37>=1,W37>=0,A38=Y37+Z37,W37+Y37=V,A38=V1+Y37+1,X37=0] 
* CE 122: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):1+ app(Y37,Z37,A38):4
     [Y37>=A38,A38>=1,Z37>=1,W37>=0,W37+Y37=V,Z37=V1+1,X37=0] 
* CE 123: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,W37):2+ app(X37,Y37,Z37):2
     [Y37>=W37+1,X37>=1,W37>=1,W37+X37=V,Y37=V1+W37+1,Z37=0] 
* CE 124: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,W37):2+ app(X37,Y37,Z37):3
     [Z37>=W37+X37+1,X37>=1,W37>=1,Z37=V1+W37+X37+1,Z37=X37+Y37,W37+X37=V] 
* CE 125: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,W37):2+ app(X37,Y37,Z37):4
     [X37>=Z37,Y37>=W37+1,Z37>=1,W37>=1,W37+X37=V,Y37=V1+W37+1] 
* CE 126: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):3+ app(Y37,Z37,A38):2
     [2*W37>=X37+3,Z37>=X37+1,W37>=X37,2*W37>=5,Y37>=1,X37>=0,W37+Y37=V,Z37=V1+X37+1,A38=0] 
* CE 127: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):3+ app(Y37,Z37,A38):3
     [A38>=X37+Y37+1,2*W37>=X37+3,W37>=X37,2*W37>=5,Y37>=1,X37>=0,A38=V1+X37+Y37+1,A38=Y37+Z37,W37+Y37=V] 
* CE 128: start(V1,V,V10,V15,V37) = 1+ quicksort(W37,X37):3+ app(Y37,Z37,A38):4
     [Y37>=A38,2*W37>=X37+3,Z37>=X37+1,W37>=X37,2*W37>=5,A38>=1,X37>=0,W37+Y37=V,Z37=V1+X37+1] 
* CE 129: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1
     [V10>=X37+1,X37>=1,V37>=0,V15>=0,Y37=2,W37=0,V=0,V1=1] 
* CE 130: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2
     [V>=0,V37>=0,V15>=0,V10>=1,X37=1,W37=0,V1=1] 
* CE 131: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):3
     [V10>=W37+1,W37>=0,V>=0,V37>=0,V15>=0,X37=0,V1=1] 
* CE 132: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4
     [V>=W37,V10>=W37+1,W37>=1,V37>=0,V15>=0,X37=1,V1=1] 
* CE 133: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5
     [V10>=W37+1,W37>=V+1,V>=1,V37>=0,V15>=0,X37=2,V1=1] 
* CE 134: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):2+ part(Z37,A38,B38,V37,C38):1
     [V37+2*A38>=C38+2,V37+A38>=C38,C38>=V37,V10>=A38+1,V37>=0,B38=0,Z37=0,Y37=1,X37=0,W37=0,V15=0,V=0,V1=1] 
* CE 135: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,V37,Z37):2
     [V10>=Y37+1,V37>=0,V15>=0,Y37>=0,V>=0,Z37=0,X37=1,W37=0,V1=1] 
* CE 136: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):2+ part(Z37,A38,V15,V37,B38):3
     [V15>=B38,V10>=A38+1,B38>=1,V37>=0,A38>=1,Z37=0,Y37=1,X37=0,W37=0,V=0,V1=1] 
* CE 137: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):2+ part(Z37,A38,V15,V37,B38):4
     [V15+V37+2*A38>=B38+2,V15+V37+A38>=B38,B38>=V15+V37,V10>=A38+1,V37>=0,V15>=1,Z37=0,Y37=1,X37=0,W37=0,V=0,V1=1] 
* CE 138: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,Z37,V37,V37):5
     [V37>=0,V>=0,V10>=1,Z37=0,Y37=0,X37=1,W37=0,V15=0,V1=1] 
* CE 139: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,V37,Z37):6
     [V37>=0,V15>=0,V>=0,V10>=1,Z37=0,Y37=0,X37=1,W37=0,V1=1] 
* CE 140: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,Z37,A38):7
     [A38>=V15,V15>=1,V>=0,V10>=1,A38=V15+Z37,A38=V15+V37,Y37=0,X37=1,W37=0,V1=1] 
* CE 141: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,V37,Z37):8
     [V15>=Z37,Z37>=1,V37>=0,V>=0,V10>=1,Y37=0,X37=1,W37=0,V1=1] 
* CE 142: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,Z37,V37,A38):9
     [V37+3*Y37>=2*V+A38+4,V37+Y37>=A38,A38>=V37,V10>=Y37+1,Y37>=V+1,V37>=0,V>=1,Z37=0,X37=1,W37=0,V15=0,V1=1] 
* CE 143: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,V37,Z37):10
     [V15+Y37>=Z37,V10>=Y37+1,Z37>=1,V37>=0,V15>=0,Y37>=1,V>=1,X37=1,W37=0,V1=1] 
* CE 144: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):2+ part(V,Y37,V15,V37,Z37):11
     [V15+V37+Y37>=Z37,Y37+Z37>=V15+V37+2,Z37>=V15+V37,Z37>=V37+1,V10>=Y37+1,V37>=0,V15>=0,V>=1,X37=1,W37=0,V1=1] 
* CE 145: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,V37,Z37):2
     [V10>=Y37+1,V>=W37,V10>=W37+1,V37>=0,V15>=0,Y37>=0,W37>=1,Z37=0,X37=1,V1=1] 
* CE 146: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,Z37,V37,V37):5
     [V>=W37,V10>=W37+1,V37>=0,W37>=1,Z37=0,Y37=0,X37=1,V15=0,V1=1] 
* CE 147: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,V37,Z37):6
     [V>=W37,V10>=W37+1,V37>=0,V15>=0,W37>=1,Z37=0,Y37=0,X37=1,V1=1] 
* CE 148: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,Z37,A38):7
     [A38>=V15,V>=W37,V10>=W37+1,V15>=1,W37>=1,A38=V15+Z37,A38=V15+V37,Y37=0,X37=1,V1=1] 
* CE 149: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,V37,Z37):8
     [V15>=Z37,V>=W37,V10>=W37+1,Z37>=1,V37>=0,W37>=1,Y37=0,X37=1,V1=1] 
* CE 150: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,Z37,V37,A38):9
     [V37+3*Y37>=2*V+A38+4,V37+Y37>=A38,A38>=V37,V10>=Y37+1,Y37>=V+1,V>=W37,V37>=0,W37>=1,Z37=0,X37=1,V15=0,V1=1] 
* CE 151: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,V37,Z37):10
     [V15+Y37>=Z37,V10>=Y37+1,V>=W37,V10>=W37+1,Z37>=1,V37>=0,V15>=0,Y37>=1,W37>=1,X37=1,V1=1] 
* CE 152: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):4+ part(V,Y37,V15,V37,Z37):11
     [V15+V37+Y37>=Z37,Y37+Z37>=V15+V37+2,Z37>=V15+V37,Z37>=V37+1,V10>=Y37+1,V>=W37,V10>=W37+1,V37>=0,V15>=0,W37>=1,X37=1,V1=1] 
* CE 153: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,Y37,V37,Z37):1
     [V37+2*X37>=Z37+2,V37+X37>=Z37,Z37>=V37,V10>=X37+1,V37>=0,Y37=0,W37=0,V15=0,V=0,V1=1] 
* CE 154: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,V37,X37):2
     [V10>=W37+1,V37>=0,V15>=0,W37>=0,V>=0,X37=0,V1=1] 
* CE 155: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,V15,V37,Y37):3
     [V15>=Y37,V10>=X37+1,Y37>=1,V37>=0,X37>=1,W37=0,V=0,V1=1] 
* CE 156: start(V1,V,V10,V15,V37) = 0+ part(W37,X37,V15,V37,Y37):4
     [V15+V37+2*X37>=Y37+2,V15+V37+X37>=Y37,Y37>=V15+V37,V10>=X37+1,V37>=0,V15>=1,W37=0,V=0,V1=1] 
* CE 157: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,V37):5
     [V37>=0,V>=0,V10>=1,X37=0,W37=0,V15=0,V1=1] 
* CE 158: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,V37,X37):6
     [V37>=0,V15>=0,V>=0,V10>=1,X37=0,W37=0,V1=1] 
* CE 159: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,X37,Y37):7
     [Y37>=V15,V15>=1,V>=0,V10>=1,Y37=V15+X37,Y37=V15+V37,W37=0,V1=1] 
* CE 160: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,V37,X37):8
     [V15>=X37,X37>=1,V37>=0,V>=0,V10>=1,W37=0,V1=1] 
* CE 161: start(V1,V,V10,V15,V37) = 0+ part(V,W37,X37,V37,Y37):9
     [V37+3*W37>=2*V+Y37+4,V37+W37>=Y37,Y37>=V37,V10>=W37+1,W37>=V+1,V37>=0,V>=1,X37=0,V15=0,V1=1] 
* CE 162: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,V37,X37):10
     [V15+W37>=X37,V10>=W37+1,X37>=1,V37>=0,V15>=0,W37>=1,V>=1,V1=1] 
* CE 163: start(V1,V,V10,V15,V37) = 0+ part(V,W37,V15,V37,X37):11
     [V15+V37+W37>=X37,W37+X37>=V15+V37+2,X37>=V15+V37,X37>=V37+1,V10>=W37+1,V37>=0,V15>=0,V>=1,V1=1] 
* CE 164: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,B38,C38,D38):1
     [C38+2*A38>=D38+2,A38+C38>=D38,A38+C38>=V10,D38>=C38,V10>=A38+1,V10>=X37+1,X37>=1,A38+C38=V10+V37,B38=0,Z37=0,Y37=2,W37=0,V15=0,V=0,V1=1] 
* CE 165: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):2
     [A38+B38>=V10,V10>=A38+1,V10>=X37+1,V15>=0,A38>=0,X37>=1,A38+B38=V10+V37,C38=0,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 166: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):3
     [A38+B38>=V10,V15>=C38,V10>=A38+1,V10>=X37+1,C38>=1,A38>=1,X37>=1,A38+B38=V10+V37,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 167: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):4
     [V15+B38+2*A38>=C38+2,V15+A38+B38>=C38,C38>=V15+B38,A38+B38>=V10,V10>=A38+1,V10>=X37+1,V15>=1,X37>=1,A38+B38=V10+V37,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 168: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,B38,C38,C38):5
     [V10>=X37+1,C38>=V10,X37>=1,C38=V10+V37,B38=0,A38=0,Z37=0,Y37=2,W37=0,V15=0,V=0,V1=1] 
* CE 169: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):6
     [V10>=X37+1,B38>=V10,V15>=0,X37>=1,B38=V10+V37,C38=0,A38=0,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 170: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):7
     [C38>=V10+V15,V10>=X37+1,V15>=1,X37>=1,C38=V10+V15+V37,C38=V15+B38,A38=0,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 171: start(V1,V,V10,V15,V37) = 0+ lt(W37,X37,Y37):1+ part(Z37,A38,V15,B38,C38):8
     [V15>=C38,V10>=X37+1,B38>=V10,C38>=1,X37>=1,B38=V10+V37,A38=0,Z37=0,Y37=2,W37=0,V=0,V1=1] 
* CE 172: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):2
     [Y37+Z37>=V10,V10>=Y37+1,W37>=V+1,V10>=W37+1,V15>=0,Y37>=0,V>=1,Y37+Z37=V10+V37,A38=0,X37=2,V1=1] 
* CE 173: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,Z37,A38,A38):5
     [W37>=V+1,V10>=W37+1,A38>=V10,V>=1,A38=V10+V37,Z37=0,Y37=0,X37=2,V15=0,V1=1] 
* CE 174: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):6
     [W37>=V+1,V10>=W37+1,Z37>=V10,V15>=0,V>=1,Z37=V10+V37,A38=0,Y37=0,X37=2,V1=1] 
* CE 175: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):7
     [A38>=V10+V15,W37>=V+1,V10>=W37+1,V15>=1,V>=1,A38=V10+V15+V37,A38=V15+Z37,Y37=0,X37=2,V1=1] 
* CE 176: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):8
     [V15>=A38,W37>=V+1,V10>=W37+1,Z37>=V10,A38>=1,V>=1,Z37=V10+V37,Y37=0,X37=2,V1=1] 
* CE 177: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,Z37,A38,B38):9
     [A38+3*Y37>=2*V+B38+4,Y37+A38>=B38,Y37+A38>=V10,B38>=A38,V10>=Y37+1,Y37>=V+1,W37>=V+1,V10>=W37+1,V>=1,Y37+A38=V10+V37,Z37=0,X37=2,V15=0,V1=1] 
* CE 178: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):10
     [V15+Y37>=A38,Y37+Z37>=V10,V10>=Y37+1,W37>=V+1,V10>=W37+1,A38>=1,V15>=0,Y37>=1,V>=1,Y37+Z37=V10+V37,X37=2,V1=1] 
* CE 179: start(V1,V,V10,V15,V37) = 0+ lt(V,W37,X37):5+ part(V,Y37,V15,Z37,A38):11
     [V15+Y37+Z37>=A38,Y37+A38>=V15+Z37+2,A38>=V15+Z37,Y37+Z37>=V10,A38>=Z37+1,V10>=Y37+1,W37>=V+1,V10>=W37+1,V15>=0,V>=1,Y37+Z37=V10+V37,X37=2,V1=1] 
* CE 180: start(V1,V,V10,V15,V37) = 0+ quicksort(V1,W37):1
     [V1>=0,W37=0] 
* CE 181: start(V1,V,V10,V15,V37) = 0+ quicksort(V1,V1):2
     [V1>=1] 
* CE 182: start(V1,V,V10,V15,V37) = 0+ quicksort(V1,W37):3
     [2*V1>=W37+3,V1>=W37,2*V1>=5,W37>=0] 
* CE 183: start(V1,V,V10,V15,V37) = 0+ part(W37,V,X37,V15,Y37):1
     [V15+2*V>=Y37+2,V+V15>=Y37,Y37>=V15,V15>=0,X37=0,W37=0,V10=0,V1=0] 
* CE 184: start(V1,V,V10,V15,V37) = 0+ part(V1,V,V10,V15,W37):2
     [V15>=0,V10>=0,V>=0,V1>=0,W37=0] 
* CE 185: start(V1,V,V10,V15,V37) = 0+ part(W37,V,V10,V15,X37):3
     [V10>=X37,X37>=1,V15>=0,V>=1,W37=0,V1=0] 
* CE 186: start(V1,V,V10,V15,V37) = 0+ part(W37,V,V10,V15,X37):4
     [V10+V15+2*V>=X37+2,V+V10+V15>=X37,X37>=V10+V15,V15>=0,V10>=1,W37=0,V1=0] 
* CE 187: start(V1,V,V10,V15,V37) = 0+ part(V1,W37,X37,V15,V15):5
     [V15>=0,V1>=0,X37=0,W37=0,V10=0,V=0] 
* CE 188: start(V1,V,V10,V15,V37) = 0+ part(V1,W37,V10,V15,X37):6
     [V15>=0,V10>=0,V1>=0,X37=0,W37=0,V=0] 
* CE 189: start(V1,V,V10,V15,V37) = 0+ part(V1,W37,V10,X37,Y37):7
     [Y37>=V10,V10>=1,V1>=0,Y37=V10+X37,Y37=V10+V15,W37=0,V=0] 
* CE 190: start(V1,V,V10,V15,V37) = 0+ part(V1,W37,V10,V15,X37):8
     [V10>=X37,X37>=1,V15>=0,V1>=0,W37=0,V=0] 
* CE 191: start(V1,V,V10,V15,V37) = 0+ part(V1,V,W37,V15,X37):9
     [V15+3*V>=2*V1+X37+4,V+V15>=X37,X37>=V15,V>=V1+1,V15>=0,V1>=1,W37=0,V10=0] 
* CE 192: start(V1,V,V10,V15,V37) = 0+ part(V1,V,V10,V15,W37):10
     [V+V10>=W37,W37>=1,V15>=0,V10>=0,V>=1,V1>=1] 
* CE 193: start(V1,V,V10,V15,V37) = 0+ part(V1,V,V10,V15,W37):11
     [V+V10+V15>=W37,V+W37>=V10+V15+2,W37>=V10+V15,W37>=V15+1,V15>=0,V10>=0,V1>=1] 
* CE 194: start(V1,V,V10,V15,V37) = 0+ app(W37,V,V):1
     [V>=0,W37=0,V1=0] 
* CE 195: start(V1,V,V10,V15,V37) = 0+ app(V1,V,W37):2
     [V>=0,V1>=0,W37=0] 
* CE 196: start(V1,V,V10,V15,V37) = 0+ app(V1,W37,X37):3
     [X37>=V1,V1>=1,X37=V1+W37,X37=V1+V] 
* CE 197: start(V1,V,V10,V15,V37) = 0+ app(V1,V,W37):4
     [V1>=W37,W37>=1,V>=0] 
* CE 198: start(V1,V,V10,V15,V37) = 0+ notEmpty(W37,X37):1
     [X37=1,W37=0,V1=0] 
* CE 199: start(V1,V,V10,V15,V37) = 0+ notEmpty(V1,W37):2
     [V1>=0,W37=0] 
* CE 200: start(V1,V,V10,V15,V37) = 0+ notEmpty(V1,W37):3
     [V1>=1,W37=2] 
* CE 201: start(V1,V,V10,V15,V37) = 0+ lt(W37,V,X37):1
     [V>=1,X37=2,W37=0,V1=0] 
* CE 202: start(V1,V,V10,V15,V37) = 0+ lt(V1,W37,X37):2
     [V1>=0,X37=1,W37=0,V=0] 
* CE 203: start(V1,V,V10,V15,V37) = 0+ lt(V1,V,W37):3
     [V>=0,V1>=0,W37=0] 
* CE 204: start(V1,V,V10,V15,V37) = 0+ lt(V1,V,W37):4
     [V1>=V,V>=1,W37=1] 
* CE 205: start(V1,V,V10,V15,V37) = 0+ lt(V1,V,W37):5
     [V>=V1+1,V1>=1,W37=2] 
* CE 206: start(V1,V,V10,V15,V37) = 0+ gr(W37,V,X37):1
     [V>=0,X37=1,W37=0,V1=0] 
* CE 207: start(V1,V,V10,V15,V37) = 0+ gr(V1,W37,X37):2
     [V1>=1,X37=2,W37=0,V=0] 
* CE 208: start(V1,V,V10,V15,V37) = 0+ gr(V1,V,W37):3
     [V>=0,V1>=0,W37=0] 
* CE 209: start(V1,V,V10,V15,V37) = 0+ gr(V1,V,W37):4
     [V>=V1,V1>=1,W37=1] 
* CE 210: start(V1,V,V10,V15,V37) = 0+ gr(V1,V,W37):5
     [V1>=V+1,V>=1,W37=2] 

### Cost equations --> "Loop" of start/5 
* CEs [191] --> Loop 57 
* CEs [187,188,189,190,202,207] --> Loop 58 
* CEs [104,108] --> Loop 59 
* CEs [100,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118] --> Loop 60 
* CEs [138,142,146,150,157,161,173,177] --> Loop 61 
* CEs [129,130,131,132,133,134,135,136,137,139,140,141,143,144,145,147,148,149,151,152,153,154,155,156,158,159,160,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179] --> Loop 62 
* CEs [119,120,121,122,123,124,125,126,127,128,180,181,182,183,184,185,186,192,193,194,195,196,197,198,199,200,201,203,204,205,206,208,209,210] --> Loop 63 

#### Loops of start/5 
* Loop 57: start(V1,V,V10,V15,V37) [V>=V1+1,V15>=0,V1>=1,V10=0] 
* Loop 58: start(V1,V,V10,V15,V37) [V1>=0,V=0] 
* Loop 59: start(V1,V,V10,V15,V37) [V37>=0,V10>=1,V>=0,V15=0,V1=2] 
* Loop 60: start(V1,V,V10,V15,V37) [V37>=0,V15>=0,V10>=1,V>=0,V1=2] 
* Loop 61: start(V1,V,V10,V15,V37) [V37>=0,V10>=1,V>=0,V15=0,V1=1] 
* Loop 62: start(V1,V,V10,V15,V37) [V37>=0,V15>=0,V10>=1,V>=0,V1=1] 
* Loop 63: start(V1,V,V10,V15,V37) [V1>=0] 

### Ranking functions of CR start(V1,V,V10,V15,V37) 

#### Partial ranking functions of CR start(V1,V,V10,V15,V37) 


### Resulting Chains:start(V1,V,V10,V15,V37) 
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]


### Merging Chains  start/5 into  External patterns of execution 
* [[61],[62],[63]] --> 1 
* [[59],[60]] --> 2 
* [[58]] --> 3 
* [[57]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [25]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'

#### Cost of phase [25]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [27]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [28] 

 * loop 28:gr(V1,V,Out) -> [gr(V1',V',Out')] 
0
#### Cost of phase [28]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
0
#### Cost of phase [28]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
0
#### Cost of phase [28]:gr(V1,V,Out) -> [gr(V1',V',Out')] 
0
#### Cost of chains of gr(V1,V,Out):
* Chain [[28],31]: 0
  with precondition: [Out=1,V1>=1,V>=V1] 

* Chain [[28],30]: 0
  with precondition: [Out=2,V>=1,V1>=V+1] 

* Chain [[28],29]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [31]: 0
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [30]: 0
  with precondition: [V=0,Out=2,V1>=1] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [32] 

 * loop 32:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [32]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [32]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [32]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of chains of lt(V1,V,Out):
* Chain [[32],35]: 0
  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [[32],34]: 0
  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[32],33]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [35]: 0
  with precondition: [V1=0,Out=2,V>=1] 

* Chain [34]: 0
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [33]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [39,40] 

 * loop 39:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1
 * loop 40:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1
#### Cost of phase [39,40]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
2*it(39)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(39) =< aux(1)
it(39) =< aux(2)

#### Cost of phase [39,40]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
2*it(39)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(39) =< aux(1)
it(39) =< aux(2)

#### Cost of phase [39,40]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
2*it(39)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(39) =< aux(1)
it(39) =< aux(2)

#### Cost of phase [39,40]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
2*it(39)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(39) =< aux(1)
it(39) =< aux(2)

#### Cost of phase [39,40]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
2*it(39)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(39) =< aux(1)
it(39) =< aux(2)

#### Cost of loops [36,37,38] 

 * loop 36:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1
 * loop 37:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1
 * loop 38:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1
#### Cost of phase [36,37,38]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1*it(36)+2*it(37)+0
  Such that:aux(8) =< -V1+V
aux(9) =< -V1+V+V1'-V'
aux(10) =< V
aux(11) =< V-V'
it(37) =< aux(8)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(36) =< aux(11)
it(37) =< aux(11)

#### Cost of phase [36,37,38]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1*it(36)+2*it(37)+0
  Such that:aux(8) =< -V1+V
aux(9) =< -V1+V+V1'-V'
aux(10) =< V
aux(11) =< V-V'
it(37) =< aux(8)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(36) =< aux(11)
it(37) =< aux(11)

#### Cost of phase [36,37,38]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1*it(36)+2*it(37)+0
  Such that:aux(8) =< -V1+V
aux(9) =< -V1+V+V1'-V'
aux(10) =< V
aux(11) =< V-V'
it(37) =< aux(8)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(36) =< aux(11)
it(37) =< aux(11)

#### Cost of phase [36,37,38]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1*it(36)+2*it(37)+0
  Such that:aux(8) =< -V1+V
aux(9) =< -V1+V+V1'-V'
aux(10) =< V
aux(11) =< V-V'
it(37) =< aux(8)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(36) =< aux(11)
it(37) =< aux(11)

#### Cost of phase [36,37,38]:part(V1,V,V10,V15,Out) -> [part(V1',V',V10',V15',Out')] 
1*it(36)+2*it(37)+0
  Such that:aux(8) =< -V1+V
aux(9) =< -V1+V+V1'-V'
aux(10) =< V
aux(11) =< V-V'
it(37) =< aux(8)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(36) =< aux(11)
it(37) =< aux(11)

#### Cost of chains of part(V1,V,V10,V15,Out):
* Chain [[39,40],45]: 2*it(39)+1
  Such that:aux(3) =< V
it(39) =< aux(3)

  with precondition: [V1=0,Out=0,V>=1,V10>=0,V15>=0] 

* Chain [[39,40],44]: 2*it(39)+2
  Such that:aux(4) =< V
it(39) =< aux(4)

  with precondition: [V1=0,V10=0,V15>=0,Out>=V15,V+V15>=Out,V15+2*V>=Out+2] 

* Chain [[39,40],43]: 2*it(39)+1
  Such that:aux(5) =< V
it(39) =< aux(5)

  with precondition: [V1=0,Out=0,V>=1,V10>=0,V15>=0] 

* Chain [[39,40],42]: 2*it(39)+1*s(1)+2
  Such that:s(1) =< V10
aux(6) =< V
it(39) =< aux(6)

  with precondition: [V1=0,V10>=1,V15>=0,Out>=V10+V15,V+V10+V15>=Out,V10+V15+2*V>=Out+2] 

* Chain [[39,40],41]: 2*it(39)+1*s(2)+1
  Such that:s(2) =< V10
aux(7) =< V
it(39) =< aux(7)

  with precondition: [V1=0,V>=1,V15>=0,Out>=1,V10>=Out] 

* Chain [[36,37,38],45]: 1*it(36)+2*it(37)+1
  Such that:aux(8) =< -V1+V
aux(12) =< V
it(37) =< aux(8)
it(37) =< aux(12)
it(36) =< aux(12)

  with precondition: [Out=0,V1>=1,V>=1,V10>=0,V15>=0] 

* Chain [[36,37,38],44]: 1*it(36)+2*it(37)+2
  Such that:aux(8) =< -V1+V
aux(13) =< V
it(37) =< aux(8)
it(37) =< aux(13)
it(36) =< aux(13)

  with precondition: [V10=0,V1>=1,V15>=0,V>=V1+1,Out>=V15,V+V15>=Out,V15+3*V>=2*V1+Out+4] 

* Chain [[36,37,38],43]: 1*it(36)+2*it(37)+1
  Such that:aux(8) =< -V1+V
aux(14) =< V
it(37) =< aux(8)
it(37) =< aux(14)
it(36) =< aux(14)

  with precondition: [Out=0,V1>=1,V>=1,V10>=0,V15>=0] 

* Chain [[36,37,38],42]: 1*it(36)+2*it(37)+1*s(1)+2
  Such that:aux(8) =< -V1+V
s(1) =< -V15+Out
aux(15) =< V
it(37) =< aux(8)
it(37) =< aux(15)
it(36) =< aux(15)

  with precondition: [V1>=1,V10>=0,V15>=0,Out>=V15+1,Out>=V10+V15,Out+V>=V10+V15+2,V+V10+V15>=Out] 

* Chain [[36,37,38],41]: 1*it(36)+2*it(37)+1*s(2)+1
  Such that:aux(8) =< -V1+V
s(2) =< V+V10
aux(16) =< V
it(37) =< aux(8)
it(37) =< aux(16)
it(36) =< aux(16)

  with precondition: [V1>=1,V>=1,V10>=0,V15>=0,Out>=1,V+V10>=Out] 

* Chain [45]: 1
  with precondition: [Out=0,V1>=0,V>=0,V10>=0,V15>=0] 

* Chain [44]: 2
  with precondition: [V=0,V10=0,V15=Out,V1>=0,V15>=0] 

* Chain [43]: 1
  with precondition: [V=0,Out=0,V1>=0,V10>=0,V15>=0] 

* Chain [42]: 1*s(1)+2
  Such that:s(1) =< V10

  with precondition: [V=0,V10+V15=Out,V1>=0,V10>=1,V15>=0] 

* Chain [41]: 1*s(2)+1
  Such that:s(2) =< V10

  with precondition: [V=0,V1>=0,V15>=0,Out>=1,V10>=Out] 


#### Cost of chains of notEmpty(V1,Out):
* Chain [48]: 1
  with precondition: [V1=0,Out=1] 

* Chain [47]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [46]: 1
  with precondition: [Out=2,V1>=1] 


#### Cost of loops [49,50,51,52,53,54] 

 * loop 49:quicksort(V1,Out) -> [quicksort(V1',Out')] 
2*s(40)+1*s(39)+5
  Such that:s(38) =< V1
s(39) =< V1-V1'
s(40) =< s(38)

 * loop 50:quicksort(V1,Out) -> [quicksort(V1',Out')] 
11*s(61)+3*s(60)+4
  Such that:s(58) =< V1
s(59) =< V1-V1'
s(60) =< s(59)
s(61) =< s(58)

 * loop 51:quicksort(V1,Out) -> [quicksort(V1',Out')] 
11*s(82)+3*s(81)+5
  Such that:s(79) =< V1
s(80) =< V1-V1'
s(81) =< s(80)
s(82) =< s(79)

 * loop 52:quicksort(V1,Out) -> [quicksort(V1',Out')] 
2*s(88)+1*s(87)+4
  Such that:s(86) =< V1
s(87) =< V1-V1'
s(88) =< s(86)

 * loop 53:quicksort(V1,Out) -> [quicksort(V1',Out')] 
11*s(104)+4
  Such that:s(103) =< V1
s(104) =< s(103)

 * loop 54:quicksort(V1,Out) -> [quicksort(V1',Out')] 
2*s(108)+4
  Such that:s(107) =< V1
s(108) =< s(107)

#### Cost of phase [49,50,51,52,53,54]:quicksort(V1,Out) -> [quicksort(V1',Out')] 
5*it(49)+21*it(50)+2*s(109)+2*s(110)+37*s(112)+6*s(113)+0
  Such that:aux(44) =< V1
aux(45) =< V1-V1'
aux(46) =< V1/2
aux(47) =< V1/2-V1'/2
it(50) =< aux(44)
s(110) =< aux(44)
s(115) =< aux(44)
it(50) =< aux(45)
s(110) =< aux(45)
s(115) =< aux(45)
it(49) =< aux(46)
it(50) =< aux(46)
it(49) =< aux(47)
it(50) =< aux(47)
aux(39) =< aux(44)
s(111) =< it(49)*aux(44)
s(114) =< it(50)*aux(39)
s(112) =< s(114)
s(113) =< s(115)
s(109) =< s(111)

#### Cost of phase [49,50,51,52,53,54]:quicksort(V1,Out) -> [quicksort(V1',Out')] 
5*it(49)+21*it(50)+2*s(109)+2*s(110)+37*s(112)+6*s(113)+0
  Such that:aux(44) =< V1
aux(45) =< V1-V1'
aux(46) =< V1/2
aux(47) =< V1/2-V1'/2
it(50) =< aux(44)
s(110) =< aux(44)
s(115) =< aux(44)
it(50) =< aux(45)
s(110) =< aux(45)
s(115) =< aux(45)
it(49) =< aux(46)
it(50) =< aux(46)
it(49) =< aux(47)
it(50) =< aux(47)
aux(39) =< aux(44)
s(111) =< it(49)*aux(44)
s(114) =< it(50)*aux(39)
s(112) =< s(114)
s(113) =< s(115)
s(109) =< s(111)

#### Cost of chains of quicksort(V1,Out):
* Chain [[49,50,51,52,53,54],56]: 26*it(49)+31*s(16)+2*s(109)+37*s(112)+3
  Such that:aux(46) =< V1/2
aux(48) =< V1
s(16) =< aux(48)
it(49) =< aux(48)
it(49) =< aux(46)
aux(39) =< aux(48)
s(111) =< it(49)*aux(48)
s(114) =< it(49)*aux(39)
s(112) =< s(114)
s(109) =< s(111)

  with precondition: [Out>=0,2*V1>=5,V1>=Out,2*V1>=Out+3] 

* Chain [[49,50,51,52,53,54],55]: 5*it(49)+21*it(50)+2*s(109)+8*s(110)+37*s(112)+1
  Such that:aux(49) =< V1
aux(50) =< V1/2
it(50) =< aux(49)
s(110) =< aux(49)
it(49) =< aux(50)
it(50) =< aux(50)
aux(39) =< aux(49)
s(111) =< it(49)*aux(49)
s(114) =< it(50)*aux(39)
s(112) =< s(114)
s(109) =< s(111)

  with precondition: [V1>=3,Out>=0,V1>=Out] 

* Chain [56]: 23*s(16)+3
  Such that:aux(23) =< V1
s(16) =< aux(23)

  with precondition: [Out=0,V1>=0] 

* Chain [55]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of start(V1,V,V10,V15,V37):
* Chain [63]: 258*s(147)+47*s(158)+5*s(160)+74*s(164)+2*s(165)+2*s(167)+47*s(170)+5*s(172)+74*s(176)+2*s(177)+2*s(179)+74*s(189)+4*s(190)+64*s(195)+47*s(198)+5*s(200)+74*s(204)+2*s(205)+2*s(207)+8*s(212)+2*s(214)+2*s(221)+5
  Such that:s(197) =< V1/2
aux(57) =< -V1+V
aux(58) =< V1
aux(59) =< V
aux(60) =< V+V10
aux(61) =< V/2
aux(62) =< V10
s(195) =< aux(58)
s(147) =< aux(59)
s(221) =< aux(60)
s(169) =< aux(61)
s(214) =< aux(62)
s(212) =< aux(57)
s(212) =< aux(59)
s(198) =< aux(58)
s(200) =< s(197)
s(198) =< s(197)
s(201) =< aux(58)
s(202) =< s(200)*aux(58)
s(203) =< s(198)*s(201)
s(204) =< s(203)
s(205) =< s(202)
s(206) =< s(198)*aux(58)
s(207) =< s(206)
s(161) =< aux(59)
s(187) =< s(147)*aux(59)
s(188) =< s(147)*s(161)
s(189) =< s(188)
s(190) =< s(187)
s(158) =< aux(59)
s(160) =< aux(61)
s(158) =< aux(61)
s(162) =< s(160)*aux(59)
s(163) =< s(158)*s(161)
s(164) =< s(163)
s(165) =< s(162)
s(166) =< s(158)*aux(59)
s(167) =< s(166)
s(169) =< aux(59)
s(170) =< aux(59)
s(172) =< s(169)
s(170) =< s(169)
s(174) =< s(172)*aux(59)
s(175) =< s(170)*s(161)
s(176) =< s(175)
s(177) =< s(174)
s(178) =< s(170)*aux(59)
s(179) =< s(178)

  with precondition: [V1>=0] 

* Chain [62]: 60*s(233)+32*s(236)+16*s(238)+8*s(247)+2
  Such that:aux(64) =< -V+V10
aux(65) =< V10
aux(66) =< V10+V15
aux(67) =< V15
s(247) =< aux(66)
s(238) =< aux(67)
s(236) =< aux(64)
s(236) =< aux(65)
s(233) =< aux(65)

  with precondition: [V1=1,V>=0,V10>=1,V15>=0,V37>=0] 

* Chain [61]: 8*s(328)+4*s(329)+2
  Such that:aux(68) =< -V+V10
aux(69) =< V10
s(328) =< aux(68)
s(328) =< aux(69)
s(329) =< aux(69)

  with precondition: [V1=1,V15=0,V>=0,V10>=1,V37>=0] 

* Chain [60]: 22*s(343)+16*s(346)+4*s(348)+12*s(357)+2
  Such that:aux(72) =< -V+V10
aux(73) =< V10
aux(74) =< V10+V15
aux(75) =< V15
s(357) =< aux(74)
s(348) =< aux(75)
s(346) =< aux(72)
s(346) =< aux(73)
s(343) =< aux(73)

  with precondition: [V1=2,V>=0,V10>=1,V15>=0,V37>=0] 

* Chain [59]: 2*s(390)+1*s(391)+2
  Such that:s(388) =< -V+V10
s(389) =< V10
s(390) =< s(388)
s(390) =< s(389)
s(391) =< s(389)

  with precondition: [V1=2,V15=0,V>=0,V10>=1,V37>=0] 

* Chain [58]: 2*s(392)+2
  Such that:aux(76) =< V10
s(392) =< aux(76)

  with precondition: [V=0,V1>=0] 

* Chain [57]: 2*s(396)+1*s(397)+2
  Such that:s(394) =< -V1+V
s(395) =< V
s(396) =< s(394)
s(396) =< s(395)
s(397) =< s(395)

  with precondition: [V10=0,V1>=1,V15>=0,V>=V1+1] 


Closed-form bounds of start(V1,V,V10,V15,V37): 
-------------------------------------
* Chain [63] with precondition: [V1>=0] 
    - Upper bound: 111*V1+5+76*V1*V1+V1/2* (2*V1)+nat(V)*352+nat(V)*230*nat(V)+nat(V)*4*nat(V/2)+nat(V10)*2+nat(V+V10)*2+nat(-V1+V)*8+5/2*V1+nat(V/2)*10 
    - Complexity: n^2 
* Chain [62] with precondition: [V1=1,V>=0,V10>=1,V15>=0,V37>=0] 
    - Upper bound: 68*V10+24*V15+2+nat(-V+V10)*32 
    - Complexity: n 
* Chain [61] with precondition: [V1=1,V15=0,V>=0,V10>=1,V37>=0] 
    - Upper bound: 4*V10+2+nat(-V+V10)*8 
    - Complexity: n 
* Chain [60] with precondition: [V1=2,V>=0,V10>=1,V15>=0,V37>=0] 
    - Upper bound: 34*V10+16*V15+2+nat(-V+V10)*16 
    - Complexity: n 
* Chain [59] with precondition: [V1=2,V15=0,V>=0,V10>=1,V37>=0] 
    - Upper bound: V10+2+nat(-V+V10)*2 
    - Complexity: n 
* Chain [58] with precondition: [V=0,V1>=0] 
    - Upper bound: nat(V10)*2+2 
    - Complexity: n 
* Chain [57] with precondition: [V10=0,V1>=1,V15>=0,V>=V1+1] 
    - Upper bound: -2*V1+3*V+2 
    - Complexity: n 

### Maximum cost of start(V1,V,V10,V15,V37): max([nat(V10)+max([nat(-V+V10)*2,nat(V10)+max([nat(V15)*4+nat(V10)*18+nat(V10+V15)*8+nat(-V+V10)*8+max([nat(V10+V15)*4,nat(V15)*12+nat(V10)*38+nat(-V+V10)*16])+ (nat(-V+V10)*8+nat(V10)*2),111*V1+3+76*V1*V1+V1/2* (2*V1)+nat(V)*352+nat(V)*230*nat(V)+nat(V)*4*nat(V/2)+nat(V+V10)*2+nat(-V1+V)*8+5/2*V1+nat(V/2)*10])]),nat(-V1+V)*2+nat(V)])+2 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 70 ms.
* Invariants computed in 117 ms.
   - Backward Invariants 74 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 711 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 1585 ms.
   - Equation cost structures 910 ms.
   - Phase cost structures 424 ms.
   - Chain cost structures 335 ms.
   - Solving cost expressions 24 ms.
* Total analysis performed in 2576 ms.

