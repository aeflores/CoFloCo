
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [f/3,g/3]  
 Merged into fg/3

#### Computed strongly connected components 
0. recursive  : [h/3]
2. non_recursive  : [start/2]
1. recursive [non_tail,multiple] : [fg/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into h/3
2. SCC is partially evaluated into start/2
1. SCC is partially evaluated into fg/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations h/3 
* CE 10 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 9 is refined into CE [13] 


#### Refined cost equations h/3 
* CE 11: h(V1,V,Out) = 1+ h(W1,V,Out)
     [W1>=0,V>=0,W1+1=V1] 
* CE 12: h(V1,V,Out) = 1+ h(W1,X1,Out)
     [X1>=0,X1+1=V,W1=0,V1=0] 
* CE 13: h(V1,V,Out) = 1
     [Out=0,V=0,V1=0] 

### Cost equations --> "Loop" of h/3 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of h/3 
* Loop 9: h(V1,V,Out) [Out=0,V=0,V1=0] 
* Loop 10: h(V1,V,Out)->  h(V1',V,Out)
                  [V>=0,V1>=1,V1=V1'+1] 
* Loop 11: h(V1,V,Out)->  h(V1',V',Out)
                  [V>=1,V=V'+1,V1'=0,V1=0] 

### Ranking functions of CR h(V1,V,Out) 
* RF of phase [10]: [V1]
* RF of phase [11]: [V]

#### Partial ranking functions of CR h(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V1
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V


### Resulting Chains:h(V1,V,Out) 
* [[11],9]
* [[10],[11],9]
* [[10],9]
* [9]


### Merging Chains  h/3 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[11]]] --> 2 
* [[9,[10]]] --> 3 
* [[9,[11],[10]]] --> 4 


### Specialization of cost equations fg/3 
* CE 7 is refined into CE [14,15,16,17] 
* CE 4 is refined into CE [18,19,20,21] 
* CE 5 is refined into CE [22] 
* CE 6 is refined into CE [23] 


#### Refined cost equations fg/3 
* CE 14: fg(A,B,C) = 1+ fg(D,B,E)+ fg(F,G,H)+ h(I,J,K):1
     [F>=0,B>=1,B+1=G,F+1=D,F+1=A,H=0,E=0,K=0,J=0,I=0,C=0] 
* CE 15: fg(A,B,C) = 1+ fg(D,B,E)+ fg(F,G,H)+ h(I,H,J):2
     [F>=0,H>=1,B>=1,B+1=G,F+1=D,F+1=A,E=0,J=0,I=0,C=0] 
* CE 16: fg(A,B,C) = 1+ fg(D,B,E)+ fg(F,G,H)+ h(E,I,J):3
     [F>=0,E>=1,B>=1,B+1=G,F+1=D,F+1=A,H=0,J=0,I=0,C=0] 
* CE 17: fg(A,B,C) = 1+ fg(D,B,E)+ fg(F,G,H)+ h(E,H,I):4
     [F>=0,H>=1,E>=1,B>=1,B+1=G,F+1=D,F+1=A,I=0,C=0] 
* CE 18: fg(A,B,C) = 1+ fg(D,E,F)+ fg(G,H,I)+ h(J,K,L):1
     [H>=0,D>=0,D+2=G,H+1=E,H+1=B,D+1=A,I=0,F=0,L=0,K=0,J=0,C=0] 
* CE 19: fg(A,B,C) = 1+ fg(D,E,F)+ fg(G,H,I)+ h(J,I,K):2
     [H>=0,D>=0,I>=1,D+2=G,H+1=E,H+1=B,D+1=A,F=0,K=0,J=0,C=0] 
* CE 20: fg(A,B,C) = 1+ fg(D,E,F)+ fg(G,H,I)+ h(F,J,K):3
     [H>=0,D>=0,F>=1,D+2=G,H+1=E,H+1=B,D+1=A,I=0,K=0,J=0,C=0] 
* CE 21: fg(A,B,C) = 1+ fg(D,E,F)+ fg(G,H,I)+ h(F,I,J):4
     [H>=0,D>=0,I>=1,F>=1,D+2=G,H+1=E,H+1=B,D+1=A,J=0,C=0] 
* CE 22: fg(A,B,C) = 1
     [A>=1,C=0,B=0] 
* CE 23: fg(A,B,C) = 1
     [B>=0,C=0,A=0] 

### Cost equations --> "Loop" of fg/3 
* CEs [22] --> Loop 12 
* CEs [23] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [15] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [14] --> Loop 20 
* CEs [18] --> Loop 21 

#### Loops of fg/3 
* Loop 12: fg(A,B,C) [A>=1,C=0,B=0] 
* Loop 13: fg(A,B,C) [B>=0,C=0,A=0] 
* Loop 14: fg(A,B,C)->  fg(A,B,A')  fg(A'2,B'2,C'2)
                  [C'2>=1,A'>=1,B>=1,A>=1,B+1=B'2,A=A'2+1,C=0] 
* Loop 15: fg(A,B,C)->  fg(A',B,B')  fg(A'2,B'2,C'2)
                  [C'2>=1,B'>=1,B>=1,A>=1,B=B'2+1,A+1=A'2,A=A'+1,C=0] 
* Loop 16: fg(A,B,C)->  fg(A,B,A')  fg(A'2,B'2,C'2)
                  [A'>=1,B>=1,A>=1,B+1=B'2,A=A'2+1,C'2=0,C=0] 
* Loop 17: fg(A,B,C)->  fg(A',B,B')  fg(A'2,B'2,C'2)
                  [B'>=1,B>=1,A>=1,B=B'2+1,A+1=A'2,A=A'+1,C'2=0,C=0] 
* Loop 18: fg(A,B,C)->  fg(A,B,A')  fg(A'2,B'2,C'2)
                  [C'2>=1,B>=1,A>=1,B+1=B'2,A=A'2+1,A'=0,C=0] 
* Loop 19: fg(A,B,C)->  fg(A',B,B')  fg(A'2,B'2,C'2)
                  [C'2>=1,B>=1,A>=1,B=B'2+1,A+1=A'2,A=A'+1,B'=0,C=0] 
* Loop 20: fg(A,B,C)->  fg(A,B,A')  fg(A'2,B'2,C'2)
                  [B>=1,A>=1,B+1=B'2,A=A'2+1,C'2=0,A'=0,C=0] 
* Loop 21: fg(A,B,C)->  fg(A',B,B')  fg(A'2,B'2,C'2)
                  [B>=1,A>=1,B=B'2+1,A+1=A'2,A=A'+1,C'2=0,B'=0,C=0] 

### Ranking functions of CR fg(A,B,C) 

#### Partial ranking functions of CR fg(A,B,C) 
* Partial RF of phase [16,17,18,19,20,21]:
  - RF of loop [16:2,17:1,18:2,19:1,20:2,21:1]:
    A depends on loops [17:2,19:2,21:2] 
  - RF of loop [17:2,19:2,21:2]:
    B depends on loops [16:2,18:2,20:2] 


### Resulting Chains:fg(A,B,C) 
* [multiple([16,17,18,19,20,21],[[],[13],[12]])]...
* [13]
* [12]


### Merging Chains  fg/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[multiple([16,17,18,19,20,21],[[],[13],[12]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [24,25,26] 
* CE 3 is refined into CE [27,28,29,30] 


#### Refined cost equations start/2 
* CE 24: start(V1,V) = 0+ fg(W1,V,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 25: start(V1,V) = 0+ fg(V1,W1,X1):2
     [V1>=1,X1=0,W1=0,V=0] 
* CE 26: start(V1,V) = 0+ fg(V1,V,W1):3
     [V>=1,V1>=1,W1=0] 
* CE 27: start(V1,V) = 0+ h(W1,X1,Y1):1
     [Y1=0,X1=0,W1=0,V=0,V1=0] 
* CE 28: start(V1,V) = 0+ h(W1,V,X1):2
     [V>=1,X1=0,W1=0,V1=0] 
* CE 29: start(V1,V) = 0+ h(V1,W1,X1):3
     [V1>=1,X1=0,W1=0,V=0] 
* CE 30: start(V1,V) = 0+ h(V1,V,W1):4
     [V>=1,V1>=1,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [30] --> Loop 22 
* CEs [25,29] --> Loop 23 
* CEs [24,27,28] --> Loop 24 
* CEs [26] --> Loop 25 

#### Loops of start/2 
* Loop 22: start(V1,V) [V>=1,V1>=1] 
* Loop 23: start(V1,V) [V1>=1,V=0] 
* Loop 24: start(V1,V) [V>=0,V1=0] 
* Loop 25: start(V1,V) [V>=1,V1>=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [25]...
* [24]
* [23]
* [22]


### Merging Chains  start/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 
* [[25]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:h(V1,V,Out) -> [h(V1',V',Out')] 
1
#### Cost of phase [11]:h(V1,V,Out) -> [h(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V
it(11) =< V-V'

#### Cost of loops [10] 

 * loop 10:h(V1,V,Out) -> [h(V1',V',Out')] 
1
#### Cost of phase [10]:h(V1,V,Out) -> [h(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of phase [10]:h(V1,V,Out) -> [h(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'

#### Cost of chains of h(V1,V,Out):
* Chain [[11],9]: 1*it(11)+1
  Such that:it(11) =< V

  with precondition: [V1=0,Out=0,V>=1] 

* Chain [[10],[11],9]: 1*it(10)+1*it(11)+1
  Such that:it(10) =< V1
it(11) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[10],9]: 1*it(10)+1
  Such that:it(10) =< V1

  with precondition: [V=0,Out=0,V1>=1] 

* Chain [9]: 1
  with precondition: [V1=0,V=0,Out=0] 


#### Cost of loops [16,17,18,19,20,21] 

 * loop 16:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
1*s(2)+2
 * loop 17:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
1*s(4)+2
 * loop 18:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
1*s(6)+2
 * loop 19:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
1*s(8)+2
 * loop 20:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
2
 * loop 21:fg(A,B,C) -> [fg(A',B',C'),fg(A'2,B'2,C'2)] 
2
#### Cost of phase [16,17,18,19,20,21]:fg(A,B,C) -> [] 
16*it(16)+1*it([12])+1*it([13])+0
#### Cost of chains of fg(A,B,C):
* Chain [multiple([16,17,18,19,20,21],[[],[13],[12]])]...: 16*it(16)+1*it([12])+1*it([13])+0
  with precondition: [B>=1,A>=1,C=0] 

* Chain [13]: 1
  with precondition: [A=0,C=0,B>=0] 

* Chain [12]: 1
  with precondition: [B=0,C=0,A>=1] 


#### Cost of chains of start(V1,V):
* Chain [25]...: 18*s(13)+0
  with precondition: [V1>=1,V>=1] 

* Chain [24]: 1*s(16)+1
  Such that:s(16) =< V

  with precondition: [V1=0,V>=0] 

* Chain [23]: 1*s(17)+1
  Such that:s(17) =< V1

  with precondition: [V=0,V1>=1] 

* Chain [22]: 1*s(18)+1*s(19)+1
  Such that:s(18) =< V1
s(19) =< V

  with precondition: [V1>=1,V>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [25]... with precondition: [V1>=1,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24] with precondition: [V1=0,V>=0] 
    - Upper bound: V+1 
    - Complexity: n 
* Chain [23] with precondition: [V=0,V1>=1] 
    - Upper bound: V1+1 
    - Complexity: n 
* Chain [22] with precondition: [V1>=1,V>=1] 
    - Upper bound: V1+V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 18 ms.
* Refinement performed in 91 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 66 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 261 ms.

