
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [plus/3]
1. recursive [non_tail] : [add0/3]
2. recursive [non_tail] : [mult/3]
3. recursive [non_tail] : [power/3]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is partially evaluated into add0/3
2. SCC is partially evaluated into mult/3
3. SCC is partially evaluated into power/3
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 17 is refined into CE [18] 
* CE 15 is refined into CE [19] 
* CE 16 is refined into CE [20] 


#### Refined cost equations plus/3 
* CE 18: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 19: plus(V1,V,Out) = 0
     [V1>=0,V1+1=Out,V=1] 
* CE 20: plus(V1,V,Out) = 0
     [V>=0,V+1=Out,V1=1] 

### Cost equations --> "Loop" of plus/3 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 

#### Loops of plus/3 
* Loop 13: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 14: plus(V1,V,Out) [V1>=0,V1+1=Out,V=1] 
* Loop 15: plus(V1,V,Out) [V>=0,V+1=Out,V1=1] 

### Ranking functions of CR plus(V1,V,Out) 

#### Partial ranking functions of CR plus(V1,V,Out) 


### Resulting Chains:plus(V1,V,Out) 
* [15]
* [14]
* [13]


### Merging Chains  plus/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 


### Specialization of cost equations add0/3 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 
* CE 12 is refined into CE [23,24,25] 


#### Refined cost equations add0/3 
* CE 21: add0(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 22: add0(A,B,A) = 1
     [A>=0,B=0] 
* CE 23: add0(V1,V,Out) = 1+ add0(V1,W1,X1)+ plus(Y1,Z1,Out):1
     [W1>=0,Out>=1,V1>=0,Out=X1+1,Out=Z1+1,W1+1=V,Y1=1] 
* CE 24: add0(V1,V,Out) = 1+ add0(V1,W1,X1)+ plus(Y1,Z1,A2):2
     [W1>=0,V1>=0,W1+1=V,X1=1,A2=2,Z1=1,Y1=1,Out=2] 
* CE 25: add0(V1,V,Out) = 1+ add0(V1,W1,X1)+ plus(Y1,X1,Z1):3
     [W1>=0,X1>=0,V1>=0,W1+1=V,Z1=0,Y1=1,Out=0] 

### Cost equations --> "Loop" of add0/3 
* CEs [23,24] --> Loop 16 
* CEs [25] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 

#### Loops of add0/3 
* Loop 16: add0(V1,V,Out)->  add0(V1,V',Out')
                  [Out>=1,V>=1,V1>=0,Out=Out'+1,V=V'+1] 
* Loop 17: add0(V1,V,Out)->  add0(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 18: add0(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 19: add0(A,B,A) [A>=0,B=0] 

### Ranking functions of CR add0(V1,V,Out) 
* RF of phase [16,17]: [V]

#### Partial ranking functions of CR add0(V1,V,Out) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1,17:1]:
    V


### Resulting Chains:add0(V1,V,Out) 
* [[16,17],19]
* [[16,17],18]
* [19]
* [18]


### Merging Chains  add0/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[18,[16,17]],[19,[16,17]]] --> 3 


### Specialization of cost equations mult/3 
* CE 10 is refined into CE [26] 
* CE 11 is refined into CE [27] 
* CE 9 is refined into CE [28,29,30] 


#### Refined cost equations mult/3 
* CE 26: mult(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 27: mult(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 28: mult(A,B,A) = 1+ mult(A,C,D)+ add0(A,E,A):1
     [C>=0,A>=0,C+1=B,D=0,E=0] 
* CE 29: mult(V1,V,Out) = 1+ mult(V1,W1,X1)+ add0(V1,X1,Y1):2
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 30: mult(V1,V,Out) = 1+ mult(V1,W1,X1)+ add0(V1,X1,Out):3
     [V1+X1>=Out,W1>=0,Out>=0,X1>=1,V1>=0,W1+1=V] 

### Cost equations --> "Loop" of mult/3 
* CEs [30] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [26,27] --> Loop 23 

#### Loops of mult/3 
* Loop 20: mult(V1,V,Out)->  mult(V1,V',Out')
                  [V1+Out'>=Out,Out'>=1,Out>=0,V>=1,V1>=0,V=V'+1] 
* Loop 21: mult(A,B,A)->  mult(A,A',B')
                  [B>=1,A>=0,B=A'+1,B'=0] 
* Loop 22: mult(V1,V,Out)->  mult(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 23: mult(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR mult(V1,V,Out) 
* RF of phase [20,21,22]: [V]

#### Partial ranking functions of CR mult(V1,V,Out) 
* Partial RF of phase [20,21,22]:
  - RF of loop [20:1,21:1,22:1]:
    V


### Resulting Chains:mult(V1,V,Out) 
* [[20,21,22],23]
* [23]


### Merging Chains  mult/3 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[20,21,22]]] --> 2 


### Specialization of cost equations power/3 
* CE 8 is refined into CE [31] 
* CE 7 is refined into CE [32] 
* CE 6 is refined into CE [33,34] 


#### Refined cost equations power/3 
* CE 31: power(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 32: power(V1,V,Out) = 1
     [V1>=0,Out=1,V=0] 
* CE 33: power(V1,V,Out) = 1+ power(V1,W1,X1)+ mult(V1,X1,Y1):1
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 34: power(V1,V,Out) = 1+ power(V1,W1,X1)+ mult(V1,X1,Out):2
     [W1>=0,Out>=0,X1>=1,V1>=0,W1+1=V] 

### Cost equations --> "Loop" of power/3 
* CEs [34] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of power/3 
* Loop 24: power(V1,V,Out)->  power(V1,V',Out')
                  [Out'>=1,Out>=0,V>=1,V1>=0,V=V'+1] 
* Loop 25: power(V1,V,Out)->  power(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 26: power(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 27: power(V1,V,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR power(V1,V,Out) 
* RF of phase [24]: [V]
* RF of phase [25]: [V]

#### Partial ranking functions of CR power(V1,V,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V


### Resulting Chains:power(V1,V,Out) 
* [[25],[24],27]
* [[25],27]
* [[25],26]
* [[24],27]
* [27]
* [26]


### Merging Chains  power/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26],[26,[25]],[27,[25]],[27,[24],[25]]] --> 2 
* [[27,[24]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [35,36,37] 
* CE 3 is refined into CE [38,39] 
* CE 4 is refined into CE [40,41,42] 
* CE 5 is refined into CE [43,44,45] 


#### Refined cost equations start/2 
* CE 35: start(V1,V) = 0+ power(V1,W1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 36: start(V1,V) = 0+ power(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 37: start(V1,V) = 0+ power(V1,V,W1):3
     [W1>=0,V>=1,V1>=0] 
* CE 38: start(V1,V) = 0+ mult(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 39: start(V1,V) = 0+ mult(V1,V,W1):2
     [W1>=0,V>=1,V1>=0] 
* CE 40: start(V1,V) = 0+ add0(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 41: start(V1,V) = 0+ add0(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 42: start(V1,V) = 0+ add0(V1,V,W1):3
     [V1+V>=W1,W1>=0,V>=1,V1>=0] 
* CE 43: start(V1,V) = 0+ plus(W1,X1,Y1):1
     [Y1>=1,Y1=X1+1,Y1=V+1,W1=1,V1=1] 
* CE 44: start(V1,V) = 0+ plus(W1,X1,Y1):2
     [Y1>=1,Y1=W1+1,Y1=V1+1,X1=1,V=1] 
* CE 45: start(V1,V) = 0+ plus(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [44] --> Loop 28 
* CEs [35,40] --> Loop 29 
* CEs [36,37,38,39,41,42,43,45] --> Loop 30 

#### Loops of start/2 
* Loop 28: start(V1,V) [V1>=0,V=1] 
* Loop 29: start(V1,V) [V1>=0,V=0] 
* Loop 30: start(V1,V) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [30]
* [29]
* [28]


### Merging Chains  start/2 into  External patterns of execution 
* [[29],[30]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of plus(V1,V,Out):
* Chain [15]: 0
  with precondition: [V1=1,V+1=Out,V>=0] 

* Chain [14]: 0
  with precondition: [V=1,V1+1=Out,V1>=0] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [16,17] 

 * loop 16:add0(V1,V,Out) -> [add0(V1',V',Out')] 
1
 * loop 17:add0(V1,V,Out) -> [add0(V1',V',Out')] 
1
#### Cost of phase [16,17]:add0(V1,V,Out) -> [add0(V1',V',Out')] 
2*it(16)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(16) =< aux(1)
it(16) =< aux(2)

#### Cost of phase [16,17]:add0(V1,V,Out) -> [add0(V1',V',Out')] 
2*it(16)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(16) =< aux(1)
it(16) =< aux(2)

#### Cost of chains of add0(V1,V,Out):
* Chain [[16,17],19]: 2*it(16)+1
  Such that:aux(3) =< V
it(16) =< aux(3)

  with precondition: [V1>=0,V>=1,Out>=0,V+V1>=Out] 

* Chain [[16,17],18]: 2*it(16)+0
  Such that:aux(4) =< V
it(16) =< aux(4)

  with precondition: [V1>=0,V>=1,Out>=0,V>=Out] 

* Chain [19]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [18]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [20,21,22] 

 * loop 20:mult(V1,V,Out) -> [mult(V1',V',Out')] 
4*s(7)+2
 * loop 21:mult(V1,V,Out) -> [mult(V1',V',Out')] 
2
 * loop 22:mult(V1,V,Out) -> [mult(V1',V',Out')] 
1
#### Cost of phase [20,21,22]:mult(V1,V,Out) -> [mult(V1',V',Out')] 
5*it(20)+4*s(8)+0
  Such that:aux(6) =< V
aux(7) =< V-V'
it(20) =< aux(6)
it(20) =< aux(7)

#### Cost of chains of mult(V1,V,Out):
* Chain [[20,21,22],23]: 5*it(20)+4*s(8)+1
  Such that:aux(8) =< V
it(20) =< aux(8)

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [23]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [24] 

 * loop 24:power(V1,V,Out) -> [power(V1',V',Out')] 
5*s(12)+4*s(13)+2
#### Cost of phase [24]:power(V1,V,Out) -> [power(V1',V',Out')] 
2*it(24)+9*s(14)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of loops [25] 

 * loop 25:power(V1,V,Out) -> [power(V1',V',Out')] 
2
#### Cost of phase [25]:power(V1,V,Out) -> [power(V1',V',Out')] 
2*it(25)+0
  Such that:it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:power(V1,V,Out) -> [power(V1',V',Out')] 
2*it(25)+0
  Such that:it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:power(V1,V,Out) -> [power(V1',V',Out')] 
2*it(25)+0
  Such that:it(25) =< V
it(25) =< V-V'

#### Cost of chains of power(V1,V,Out):
* Chain [[25],[24],27]: 4*it(24)+9*s(14)+1
  Such that:aux(9) =< V
it(24) =< aux(9)

  with precondition: [Out=0,V1>=0,V>=2] 

* Chain [[25],27]: 2*it(25)+1
  Such that:it(25) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[25],26]: 2*it(25)+0
  Such that:it(25) =< V

  with precondition: [Out=0,V1>=0,V>=1] 

* Chain [[24],27]: 2*it(24)+9*s(14)+1
  Such that:it(24) =< V

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [27]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [30]: 19*s(22)+22*s(23)+1
  Such that:aux(11) =< V
s(22) =< aux(11)

  with precondition: [V1>=0,V>=0] 

* Chain [29]: 1
  with precondition: [V=0,V1>=0] 

* Chain [28]: 0
  with precondition: [V=1,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [30] with precondition: [V1>=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [28] with precondition: [V=1,V1>=0] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 60 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 48 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 182 ms.

