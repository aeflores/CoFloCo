
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lt/3]
1. recursive  : [fun2/3]
2. recursive  : [fun1/4,remove/3]
3. recursive  : [appmin/4,fun/5,minsort/2]
4. non_recursive  : [notEmpty/2]
5. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lt/3
1. SCC is partially evaluated into fun2/3
2. SCC is partially evaluated into remove/3
3. SCC is partially evaluated into appmin/4
4. SCC is partially evaluated into notEmpty/2
5. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lt/3 
* CE 35 is refined into CE [36] 
* CE 34 is refined into CE [37] 
* CE 33 is refined into CE [38] 
* CE 32 is refined into CE [39] 


#### Refined cost equations lt/3 
* CE 36: lt(V,V4,Out) = 0
     [V4>=0,V>=0,Out=0] 
* CE 37: lt(V,V4,Out) = 0
     [V>=0,Out=1,V4=0] 
* CE 38: lt(V,V4,Out) = 0
     [V4>=1,Out=2,V=0] 
* CE 39: lt(V,V4,Out) = 0+ lt(W4,X4,Out)
     [X4>=0,W4>=0,X4+1=V4,W4+1=V] 

### Cost equations --> "Loop" of lt/3 
* CEs [39] --> Loop 24 
* CEs [36] --> Loop 25 
* CEs [37] --> Loop 26 
* CEs [38] --> Loop 27 

#### Loops of lt/3 
* Loop 24: lt(V,V4,Out)->  lt(V',V4',Out)
                  [V4'>=0,V'>=0,V4'+1=V4,V'+1=V] 
* Loop 25: lt(V,V4,Out) [V4>=0,V>=0,Out=0] 
* Loop 26: lt(V,V4,Out) [V>=0,Out=1,V4=0] 
* Loop 27: lt(V,V4,Out) [V4>=1,Out=2,V=0] 

### Ranking functions of CR lt(V,V4,Out) 
* RF of phase [24]: [V,V4]

#### Partial ranking functions of CR lt(V,V4,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V
    V4


### Resulting Chains:lt(V,V4,Out) 
* [[24],27]
* [[24],26]
* [[24],25]
* [27]
* [26]
* [25]


### Merging Chains  lt/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25],[25,[24]]] --> 3 
* [[26,[24]]] --> 4 
* [[27,[24]]] --> 5 


### Specialization of cost equations fun2/3 
* CE 31 is refined into CE [40] 
* CE 29 is refined into CE [41] 
* CE 28 is refined into CE [42] 
* CE 30 is refined into CE [43] 
* CE 27 is refined into CE [44] 


#### Refined cost equations fun2/3 
* CE 40: fun2(V,V4,Out) = 0
     [V4>=0,V>=0,Out=0] 
* CE 41: fun2(V,V4,Out) = 0
     [V>=1,Out=1,V4=0] 
* CE 42: fun2(V,V4,Out) = 0
     [V4>=1,Out=1,V=0] 
* CE 43: fun2(V,V4,Out) = 0
     [Out=2,V4=0,V=0] 
* CE 44: fun2(V,V4,Out) = 0+ fun2(W4,X4,Out)
     [X4>=0,W4>=0,X4+1=V4,W4+1=V] 

### Cost equations --> "Loop" of fun2/3 
* CEs [44] --> Loop 28 
* CEs [40] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [43] --> Loop 32 

#### Loops of fun2/3 
* Loop 28: fun2(V,V4,Out)->  fun2(V',V4',Out)
                  [V4'>=0,V'>=0,V4'+1=V4,V'+1=V] 
* Loop 29: fun2(V,V4,Out) [V4>=0,V>=0,Out=0] 
* Loop 30: fun2(V,V4,Out) [V>=1,Out=1,V4=0] 
* Loop 31: fun2(V,V4,Out) [V4>=1,Out=1,V=0] 
* Loop 32: fun2(V,V4,Out) [Out=2,V4=0,V=0] 

### Ranking functions of CR fun2(V,V4,Out) 
* RF of phase [28]: [V,V4]

#### Partial ranking functions of CR fun2(V,V4,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
    V4


### Resulting Chains:fun2(V,V4,Out) 
* [[28],32]
* [[28],31]
* [[28],30]
* [[28],29]
* [32]
* [31]
* [30]
* [29]


### Merging Chains  fun2/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29],[29,[28]]] --> 4 
* [[31,[28]]] --> 5 
* [[30,[28]]] --> 6 
* [[32,[28]]] --> 7 


### Specialization of cost equations remove/3 
* CE 21 is refined into CE [45,46] 
* CE 20 is refined into CE [47,48,49,50,51,52,53] 
* CE 23 is refined into CE [54] 
* CE 22 is refined into CE [55,56,57,58] 


#### Refined cost equations remove/3 
* CE 45: remove(V,V4,Out) = 1+ fun2(W4,X4,Y4):1
     [V4>=Out+1,Out>=0,Y4=2,X4=0,W4=0,V=0] 
* CE 46: remove(V,V4,Out) = 1+ fun2(V,V,W4):7
     [V4>=V+1,V4>=Out+1,V>=1,Out>=0,W4=2] 
* CE 47: remove(V,V4,Out) = 1+ fun2(W4,X4,Y4):1
     [V4>=1,Y4=2,X4=0,W4=0,Out=0,V=0] 
* CE 48: remove(V,V4,Out) = 1+ fun2(W4,X4,Y4):2
     [V4>=X4+1,X4>=1,Y4=1,W4=0,Out=0,V=0] 
* CE 49: remove(V,V4,Out) = 1+ fun2(V,W4,X4):3
     [V>=1,V4>=1,X4=1,W4=0,Out=0] 
* CE 50: remove(V,V4,Out) = 1+ fun2(V,W4,X4):4
     [V4>=W4+1,W4>=0,V>=0,X4=0,Out=0] 
* CE 51: remove(V,V4,Out) = 1+ fun2(V,W4,X4):5
     [V4>=W4+1,W4>=V+1,V>=1,X4=1,Out=0] 
* CE 52: remove(V,V4,Out) = 1+ fun2(V,W4,X4):6
     [V>=W4+1,V4>=W4+1,W4>=1,X4=1,Out=0] 
* CE 53: remove(V,V4,Out) = 1+ fun2(V,V,W4):7
     [V4>=V+1,V>=1,W4=2,Out=0] 
* CE 54: remove(V,V4,Out) = 0
     [V4>=0,V>=0,Out=0] 
* CE 55: remove(V,V4,Out) = 1+ fun2(W4,X4,Y4):2+ remove(Z4,A5,B5)
     [V4>=A5+1,V4>=X4+1,A5>=0,X4>=1,V4+B5=Out+A5,Z4=0,Y4=1,W4=0,V=0] 
* CE 56: remove(V,V4,Out) = 1+ fun2(V,W4,X4):3+ remove(V,Y4,Z4)
     [V4>=Y4+1,Y4>=0,V>=1,V4+Z4=Out+Y4,X4=1,W4=0] 
* CE 57: remove(V,V4,Out) = 1+ fun2(V,W4,X4):5+ remove(V,Y4,Z4)
     [V4>=Y4+1,V4>=W4+1,W4>=V+1,Y4>=0,V>=1,V4+Z4=Out+Y4,X4=1] 
* CE 58: remove(V,V4,Out) = 1+ fun2(V,W4,X4):6+ remove(V,Y4,Z4)
     [V4>=Y4+1,V>=W4+1,V4>=W4+1,Y4>=0,W4>=1,V4+Z4=Out+Y4,X4=1] 

### Cost equations --> "Loop" of remove/3 
* CEs [56,57,58] --> Loop 33 
* CEs [55] --> Loop 34 
* CEs [46] --> Loop 35 
* CEs [49,50,51,52,53,54] --> Loop 36 
* CEs [45,47,48] --> Loop 37 

#### Loops of remove/3 
* Loop 33: remove(V,V4,Out)->  remove(V,V4',Out')
                  [V4>=V4'+1,V4'>=0,V>=1,V4+Out'=Out+V4'] 
* Loop 34: remove(V,V4,Out)->  remove(V',V4',Out')
                  [V4>=V4'+1,V4'>=0,V4>=2,V4+Out'=Out+V4',V'=0,V=0] 
* Loop 35: remove(V,V4,Out) [V4>=Out+1,V4>=V+1,Out>=0,V>=1] 
* Loop 36: remove(V,V4,Out) [V4>=0,V>=0,Out=0] 
* Loop 37: remove(V,V4,Out) [V4>=Out+1,Out>=0,V=0] 

### Ranking functions of CR remove(V,V4,Out) 
* RF of phase [33]: [V4]
* RF of phase [34]: [V4-1]

#### Partial ranking functions of CR remove(V,V4,Out) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V4
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V4-1


### Resulting Chains:remove(V,V4,Out) 
* [[34],37]
* [[34],36]
* [[33],36]
* [[33],35]
* [37]
* [36]
* [35]


### Merging Chains  remove/3 into  External patterns of execution 
* [[36,[34]],[37,[34]]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 
* [[35],[35,[33]]] --> 4 
* [[36,[33]]] --> 5 


### Specialization of cost equations appmin/4 
* CE 16 is refined into CE [59,60,61,62,63] 
* CE 19 is refined into CE [64] 
* CE 13 is refined into CE [65,66,67,68,69] 
* CE 14 is refined into CE [70,71,72] 
* CE 18 is refined into CE [73,74] 
* CE 17 is refined into CE [75,76] 
* CE 15 is refined into CE [77,78,79,80] 


#### Refined cost equations appmin/4 
* CE 59: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):1
     [V>=1,V7>=0,V4>=1,X7=2,W7=0,Out=0] 
* CE 60: appmin(V,V4,V7,Out) = 1+ lt(W7,X7,Y7):2
     [V4>=W7+1,W7>=0,V7>=0,Y7=1,X7=0,Out=0,V=0] 
* CE 61: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):3
     [V4>=W7+1,V>=0,W7>=0,V7>=0,X7=0,Out=0] 
* CE 62: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):4
     [W7>=V,V4>=W7+1,V>=1,V7>=0,X7=1,Out=0] 
* CE 63: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):5
     [V>=W7+1,V4>=W7+1,W7>=1,V7>=0,X7=2,Out=0] 
* CE 64: appmin(V,V4,V7,Out) = 0
     [V7>=0,V4>=0,V>=0,Out=0] 
* CE 65: appmin(V,V4,V7,Out) = 1+ remove(W7,V7,X7):1
     [V7>=X7,X7>=1,V7>=2,W7=0,Out=1,V4=0,V=0] 
* CE 66: appmin(V,V4,V7,Out) = 1+ remove(W7,V7,X7):2
     [V7>=X7+1,X7>=0,W7=0,Out=1,V4=0,V=0] 
* CE 67: appmin(V,V4,V7,Out) = 1+ remove(V,V7,W7):3
     [V7>=0,V>=0,V+1=Out,W7=0,V4=0] 
* CE 68: appmin(V,V4,V7,Out) = 1+ remove(V,V7,W7):4
     [V7>=W7+1,V7>=V+1,W7>=0,V>=1,V+1=Out,V4=0] 
* CE 69: appmin(V,V4,V7,Out) = 1+ remove(V,V7,W7):5
     [V7>=W7,W7>=1,V>=1,V+1=Out,V4=0] 
* CE 70: appmin(V,V4,V7,Out) = 2+ remove(W7,V7,X7):2
     [V7>=1,X7=0,W7=0,Out=1,V4=0,V=0] 
* CE 71: appmin(V,V4,V7,Out) = 2+ remove(V,V7,W7):3
     [V7>=0,V>=0,V+1=Out,W7=0,V4=0] 
* CE 72: appmin(V,V4,V7,Out) = 2+ remove(V,V7,W7):4
     [V7>=V+1,V>=1,V+1=Out,W7=0,V4=0] 
* CE 73: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):1+ appmin(Y7,Z7,V7,Out)
     [Z7>=0,Y7>=0,V>=1,V7>=0,Y7+Z7+1=V4,X7=2,W7=0] 
* CE 74: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):5+ appmin(Y7,Z7,V7,Out)
     [Y7+Z7>=W7,V>=W7+1,Z7>=0,Y7>=0,W7>=1,V7>=0,Y7+Z7+1=V4,X7=2] 
* CE 75: appmin(V,V4,V7,Out) = 1+ lt(W7,X7,Y7):2+ appmin(Z7,A8,V7,Out)
     [V4>=A8+1,V4>=W7+1,A8>=0,W7>=0,V7>=0,Z7=0,Y7=1,X7=0,V=0] 
* CE 76: appmin(V,V4,V7,Out) = 1+ lt(W7,V,X7):4+ appmin(V,Y7,V7,Out)
     [V4>=Y7+1,W7>=V,V4>=W7+1,Y7>=0,V>=1,V7>=0,X7=1] 
* CE 77: appmin(V,V4,V7,Out) = 2+ remove(W7,V7,X7):1+ appmin(Y7,Z7,X7,A8)
     [X7>=Z7+1,V7>=X7,Z7>=0,V7>=2,X7=Y7+Z7+1,Out=A8+1,W7=0,V4=0,V=0] 
* CE 78: appmin(V,V4,V7,Out) = 2+ remove(W7,V7,X7):2+ appmin(Y7,Z7,X7,A8)
     [X7>=Z7+1,V7>=X7+1,Z7>=0,X7=Y7+Z7+1,Out=A8+1,W7=0,V4=0,V=0] 
* CE 79: appmin(V,V4,V7,Out) = 2+ remove(V,V7,W7):4+ appmin(X7,Y7,W7,Z7)
     [W7>=Y7+1,V7>=W7+1,V7>=V+1,Y7>=0,V>=1,W7=X7+Y7+1,V+Z7+1=Out,V4=0] 
* CE 80: appmin(V,V4,V7,Out) = 2+ remove(V,V7,W7):5+ appmin(X7,Y7,W7,Z7)
     [W7>=Y7+1,V7>=W7,Y7>=0,V>=1,W7=X7+Y7+1,V+Z7+1=Out,V4=0] 

### Cost equations --> "Loop" of appmin/4 
* CEs [73,74] --> Loop 38 
* CEs [76] --> Loop 39 
* CEs [79,80] --> Loop 40 
* CEs [75] --> Loop 41 
* CEs [77,78] --> Loop 42 
* CEs [59,60,61,62,63,64] --> Loop 43 
* CEs [65,66,67,68,69,70,71,72] --> Loop 44 

#### Loops of appmin/4 
* Loop 38: appmin(V,V4,V7,Out)->  appmin(V',V4',V7,Out)
                  [V4>=V'+1,V'>=0,V7>=0,V>=1,V'+V4'+1=V4] 
* Loop 39: appmin(V,V4,V7,Out)->  appmin(V,V4',V7,Out)
                  [V4>=V4'+1,V4>=V+1,V4'>=0,V7>=0,V>=1] 
* Loop 40: appmin(V,V4,V7,Out)->  appmin(V',V4',V7',Out')
                  [V7>=V'+V4'+1,V4'>=0,V'>=0,V>=1,V'+V4'+1=V7',V+Out'+1=Out,V4=0] 
* Loop 41: appmin(V,V4,V7,Out)->  appmin(V',V4',V7,Out)
                  [V4>=V4'+1,V4'>=0,V7>=0,V'=0,V=0] 
* Loop 42: appmin(V,V4,V7,Out)->  appmin(V',V4',V7',Out')
                  [V7>=V'+V4'+1,V4'>=0,V'>=0,V7>=2,V'+V4'+1=V7',Out=Out'+1,V4=0,V=0] 
* Loop 43: appmin(V,V4,V7,Out) [V7>=0,V4>=0,V>=0,Out=0] 
* Loop 44: appmin(V,V4,V7,Out) [V7>=0,V>=0,V+1=Out,V4=0] 

### Ranking functions of CR appmin(V,V4,V7,Out) 

#### Partial ranking functions of CR appmin(V,V4,V7,Out) 
* Partial RF of phase [38,39,40,41,42]:
  - RF of loop [38:1]:
    V/2+V4/2-1/2 depends on loops [40:1,42:1] 
  - RF of loop [38:1,41:1]:
    V4 depends on loops [40:1,42:1] 
  - RF of loop [39:1]:
    -V+V4 depends on loops [38:1,40:1,42:1] 
    V4-1 depends on loops [40:1,42:1] 
  - RF of loop [42:1]:
    -V-V4+V7-1 depends on loops [38:1,39:1,40:1,41:1] 


### Resulting Chains:appmin(V,V4,V7,Out) 
* [[38,39,40,41,42]]...
* [[38,39,40,41,42],44]
* [[38,39,40,41,42],43]
* [44]
* [43]


### Merging Chains  appmin/4 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 
* [[43,[38,39,40,41,42]],[44,[38,39,40,41,42]]] --> 3 
* [[[38,39,40,41,42]]] --> 4 


### Specialization of cost equations notEmpty/2 
* CE 24 is refined into CE [81] 
* CE 26 is refined into CE [82] 
* CE 25 is refined into CE [83] 


#### Refined cost equations notEmpty/2 
* CE 81: notEmpty(V,Out) = 1
     [V>=1,Out=2] 
* CE 82: notEmpty(V,Out) = 0
     [V>=0,Out=0] 
* CE 83: notEmpty(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [81] --> Loop 45 
* CEs [82] --> Loop 46 
* CEs [83] --> Loop 47 

#### Loops of notEmpty/2 
* Loop 45: notEmpty(V,Out) [V>=1,Out=2] 
* Loop 46: notEmpty(V,Out) [V>=0,Out=0] 
* Loop 47: notEmpty(V,Out) [Out=1,V=0] 

### Ranking functions of CR notEmpty(V,Out) 

#### Partial ranking functions of CR notEmpty(V,Out) 


### Resulting Chains:notEmpty(V,Out) 
* [47]
* [46]
* [45]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 


### Specialization of cost equations start/4 
* CE 6 is refined into CE [84,85,86,87] 
* CE 5 is refined into CE [88,89,90,91] 
* CE 7 is refined into CE [92,93,94,95,96] 
* CE 2 is refined into CE [97] 
* CE 3 is refined into CE [98] 
* CE 4 is refined into CE [99,100,101,102] 
* CE 8 is refined into CE [103,104,105,106] 
* CE 9 is refined into CE [107,108,109] 
* CE 10 is refined into CE [110,111,112,113,114] 
* CE 11 is refined into CE [115,116,117,118,119,120,121] 
* CE 12 is refined into CE [122,123,124,125,126] 


#### Refined cost equations start/4 
* CE 84: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V31,V7):1
     [V7>=1,V31>=0,V4>=0,V7=W31+1,X31=0,V=2] 
* CE 85: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V31,Y31):2
     [V31>=0,X31>=0,W31>=0,V4>=0,W31+X31+1=V7,Y31=0,V=2] 
* CE 86: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V31,Y31):3
     [V31+Y31+3*X31>=3,V31+W31+2*X31>=2,X31+Y31>=1,V31+X31>=1,Y31>=0,V31>=0,X31>=0,W31>=0,V4>=0,W31+X31+1=V7,V=2] 
* CE 87: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V31,Y31):4
     [V31+W31+2*X31>=2,V31+X31>=1,V31>=0,X31>=0,W31>=0,V4>=0,W31+X31+1=V7,V=2] 
* CE 88: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V31,Y31):1
     [Y31>=1,V31>=0,V7>=1,Y31=W31+1,Y31=V4+1,X31=0,V=1] 
* CE 89: start(V,V4,V7,V31) = 0+ appmin(V4,W31,V31,X31):2
     [V7>=W31+1,V31>=0,W31>=0,V4>=0,X31=0,V=1] 
* CE 90: start(V,V4,V7,V31) = 0+ appmin(V4,W31,V31,X31):3
     [V31+X31+3*W31>=3,V4+V31+2*W31>=2,W31+X31>=1,V31+W31>=1,V7>=W31+1,X31>=0,V31>=0,W31>=0,V4>=0,V=1] 
* CE 91: start(V,V4,V7,V31) = 0+ appmin(V4,W31,V31,X31):4
     [V4+V31+2*W31>=2,V31+W31>=1,V7>=W31+1,V31>=0,W31>=0,V4>=0,V=1] 
* CE 92: start(V,V4,V7,V31) = 0+ remove(W31,X31,Y31):1
     [X31>=Y31,V7>=X31+1,Y31>=1,X31>=2,W31=0,V4=0,V=1] 
* CE 93: start(V,V4,V7,V31) = 0+ remove(W31,X31,Y31):2
     [X31>=Y31+1,V7>=X31+1,Y31>=0,W31=0,V4=0,V=1] 
* CE 94: start(V,V4,V7,V31) = 0+ remove(V4,W31,X31):3
     [V7>=W31+1,W31>=0,V4>=0,X31=0,V=1] 
* CE 95: start(V,V4,V7,V31) = 0+ remove(V4,W31,X31):4
     [W31>=X31+1,V7>=W31+1,W31>=V4+1,X31>=0,V4>=1,V=1] 
* CE 96: start(V,V4,V7,V31) = 0+ remove(V4,W31,X31):5
     [W31>=X31,V7>=W31+1,X31>=1,V4>=1,V=1] 
* CE 97: start(V,V4,V7,V31) = 0
     [V>=0] 
* CE 98: start(V,V4,V7,V31) = 1
     [V=0] 
* CE 99: start(V,V4,V7,V31) = 1+ appmin(W31,X31,V,V):1
     [V>=1,V=W31+1,X31=0] 
* CE 100: start(V,V4,V7,V31) = 1+ appmin(W31,X31,Y31,Z31):2
     [X31>=0,W31>=0,W31+X31+1=Y31,W31+X31+1=V,Z31=0] 
* CE 101: start(V,V4,V7,V31) = 1+ appmin(W31,X31,Y31,Z31):3
     [W31+Z31+4*X31>=2,2*W31+3*X31>=1,X31+Z31>=1,Z31>=0,X31>=0,W31>=0,W31+X31+1=Y31,W31+X31+1=V] 
* CE 102: start(V,V4,V7,V31) = 1+ appmin(W31,X31,Y31,Z31):4
     [2*W31+3*X31>=1,X31>=0,W31>=0,W31+X31+1=Y31,W31+X31+1=V] 
* CE 103: start(V,V4,V7,V31) = 0+ appmin(W31,X31,V7,Y31):1
     [Y31>=1,V7>=0,Y31=W31+1,Y31=V+1,X31=0,V4=0] 
* CE 104: start(V,V4,V7,V31) = 0+ appmin(V,V4,V7,W31):2
     [V7>=0,V4>=0,V>=0,W31=0] 
* CE 105: start(V,V4,V7,V31) = 0+ appmin(V,V4,V7,W31):3
     [V7+W31+3*V4>=3,V+V7+2*V4>=2,V4+W31>=1,V4+V7>=1,W31>=0,V7>=0,V4>=0,V>=0] 
* CE 106: start(V,V4,V7,V31) = 0+ appmin(V,V4,V7,W31):4
     [V+V7+2*V4>=2,V4+V7>=1,V7>=0,V4>=0,V>=0] 
* CE 107: start(V,V4,V7,V31) = 0+ notEmpty(W31,X31):1
     [X31=1,W31=0,V=0] 
* CE 108: start(V,V4,V7,V31) = 0+ notEmpty(V,W31):2
     [V>=0,W31=0] 
* CE 109: start(V,V4,V7,V31) = 0+ notEmpty(V,W31):3
     [V>=1,W31=2] 
* CE 110: start(V,V4,V7,V31) = 0+ remove(W31,V4,X31):1
     [V4>=X31,X31>=1,V4>=2,W31=0,V=0] 
* CE 111: start(V,V4,V7,V31) = 0+ remove(W31,V4,X31):2
     [V4>=X31+1,X31>=0,W31=0,V=0] 
* CE 112: start(V,V4,V7,V31) = 0+ remove(V,V4,W31):3
     [V4>=0,V>=0,W31=0] 
* CE 113: start(V,V4,V7,V31) = 0+ remove(V,V4,W31):4
     [V4>=W31+1,V4>=V+1,W31>=0,V>=1] 
* CE 114: start(V,V4,V7,V31) = 0+ remove(V,V4,W31):5
     [V4>=W31,W31>=1,V>=1] 
* CE 115: start(V,V4,V7,V31) = 0+ fun2(W31,X31,Y31):1
     [Y31=2,X31=0,W31=0,V4=0,V=0] 
* CE 116: start(V,V4,V7,V31) = 0+ fun2(W31,V4,X31):2
     [V4>=1,X31=1,W31=0,V=0] 
* CE 117: start(V,V4,V7,V31) = 0+ fun2(V,W31,X31):3
     [V>=1,X31=1,W31=0,V4=0] 
* CE 118: start(V,V4,V7,V31) = 0+ fun2(V,V4,W31):4
     [V4>=0,V>=0,W31=0] 
* CE 119: start(V,V4,V7,V31) = 0+ fun2(V,V4,W31):5
     [V4>=V+1,V>=1,W31=1] 
* CE 120: start(V,V4,V7,V31) = 0+ fun2(V,V4,W31):6
     [V>=V4+1,V4>=1,W31=1] 
* CE 121: start(A,A,B,C) = 0+ fun2(A,A,D):7
     [A>=1,D=2] 
* CE 122: start(V,V4,V7,V31) = 0+ lt(W31,V4,X31):1
     [V4>=1,X31=2,W31=0,V=0] 
* CE 123: start(V,V4,V7,V31) = 0+ lt(V,W31,X31):2
     [V>=0,X31=1,W31=0,V4=0] 
* CE 124: start(V,V4,V7,V31) = 0+ lt(V,V4,W31):3
     [V4>=0,V>=0,W31=0] 
* CE 125: start(V,V4,V7,V31) = 0+ lt(V,V4,W31):4
     [V>=V4,V4>=1,W31=1] 
* CE 126: start(V,V4,V7,V31) = 0+ lt(V,V4,W31):5
     [V4>=V+1,V>=1,W31=2] 

### Cost equations --> "Loop" of start/4 
* CEs [121] --> Loop 48 
* CEs [103,117,123] --> Loop 49 
* CEs [84,85,86] --> Loop 50 
* CEs [88,89,90,92,93,94,95,96] --> Loop 51 
* CEs [97,98,99,100,101,104,105,107,108,109,110,111,112,113,114,115,116,118,119,120,122,124,125,126] --> Loop 52 
* CEs [87,102] --> Loop 53 
* CEs [91,106] --> Loop 54 

#### Loops of start/4 
* Loop 48: start(A,A,B,C) [A>=1] 
* Loop 49: start(V,V4,V7,V31) [V>=0,V4=0] 
* Loop 50: start(V,V4,V7,V31) [V31>=0,V7>=1,V4>=0,V=2] 
* Loop 51: start(V,V4,V7,V31) [V7>=1,V4>=0,V=1] 
* Loop 52: start(V,V4,V7,V31) [V>=0] 
* Loop 53: start(V,V4,V7,V31) [3*V>=4] 
* Loop 54: start(V,V4,V7,V31) [V+V7+2*V4>=2,V4+V7>=1,V7>=0,V4>=0,V>=0] 

### Ranking functions of CR start(V,V4,V7,V31) 

#### Partial ranking functions of CR start(V,V4,V7,V31) 


### Resulting Chains:start(V,V4,V7,V31) 
* [54]...
* [53]...
* [52]
* [51]
* [50]
* [49]
* [48]


### Merging Chains  start/4 into  External patterns of execution 
* [[51],[52]] --> 1 
* [[50]] --> 2 
* [[49]] --> 3 
* [[48]] --> 4 
* [[54]] --> 5 
* [[53]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:lt(V,V4,Out) -> [lt(V',V4',Out')] 
0
#### Cost of phase [24]:lt(V,V4,Out) -> [lt(V',V4',Out')] 
0
#### Cost of phase [24]:lt(V,V4,Out) -> [lt(V',V4',Out')] 
0
#### Cost of phase [24]:lt(V,V4,Out) -> [lt(V',V4',Out')] 
0
#### Cost of chains of lt(V,V4,Out):
* Chain [[24],27]: 0
  with precondition: [Out=2,V>=1,V4>=V+1] 

* Chain [[24],26]: 0
  with precondition: [Out=1,V4>=1,V>=V4] 

* Chain [[24],25]: 0
  with precondition: [Out=0,V>=1,V4>=1] 

* Chain [27]: 0
  with precondition: [V=0,Out=2,V4>=1] 

* Chain [26]: 0
  with precondition: [V4=0,Out=1,V>=0] 

* Chain [25]: 0
  with precondition: [Out=0,V>=0,V4>=0] 


#### Cost of loops [28] 

 * loop 28:fun2(V,V4,Out) -> [fun2(V',V4',Out')] 
0
#### Cost of phase [28]:fun2(V,V4,Out) -> [fun2(V',V4',Out')] 
0
#### Cost of phase [28]:fun2(V,V4,Out) -> [fun2(V',V4',Out')] 
0
#### Cost of phase [28]:fun2(V,V4,Out) -> [fun2(V',V4',Out')] 
0
#### Cost of phase [28]:fun2(V,V4,Out) -> [fun2(V',V4',Out')] 
0
#### Cost of chains of fun2(V,V4,Out):
* Chain [[28],32]: 0
  with precondition: [Out=2,V=V4,V>=1] 

* Chain [[28],31]: 0
  with precondition: [Out=1,V>=1,V4>=V+1] 

* Chain [[28],30]: 0
  with precondition: [Out=1,V4>=1,V>=V4+1] 

* Chain [[28],29]: 0
  with precondition: [Out=0,V>=1,V4>=1] 

* Chain [32]: 0
  with precondition: [V=0,V4=0,Out=2] 

* Chain [31]: 0
  with precondition: [V=0,Out=1,V4>=1] 

* Chain [30]: 0
  with precondition: [V4=0,Out=1,V>=1] 

* Chain [29]: 0
  with precondition: [Out=0,V>=0,V4>=0] 


#### Cost of loops [34] 

 * loop 34:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1
#### Cost of phase [34]:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1*it(34)+0
  Such that:it(34) =< V4
it(34) =< V4-V4'

#### Cost of phase [34]:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1*it(34)+0
  Such that:it(34) =< V4
it(34) =< V4-V4'

#### Cost of loops [33] 

 * loop 33:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1
#### Cost of phase [33]:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1*it(33)+0
  Such that:it(33) =< V4
it(33) =< V4-V4'

#### Cost of phase [33]:remove(V,V4,Out) -> [remove(V',V4',Out')] 
1*it(33)+0
  Such that:it(33) =< V4
it(33) =< V4-V4'

#### Cost of chains of remove(V,V4,Out):
* Chain [[34],37]: 1*it(34)+1
  Such that:it(34) =< Out

  with precondition: [V=0,Out>=1,V4>=Out+1] 

* Chain [[34],36]: 1*it(34)+1
  Such that:it(34) =< Out

  with precondition: [V=0,V4>=2,Out>=1,V4>=Out] 

* Chain [[33],36]: 1*it(33)+1
  Such that:it(33) =< Out

  with precondition: [V>=1,Out>=1,V4>=Out] 

* Chain [[33],35]: 1*it(33)+1
  Such that:it(33) =< -V+V4

  with precondition: [V>=1,Out>=1,V4>=V+2,V4>=Out+1] 

* Chain [37]: 1
  with precondition: [V=0,Out>=0,V4>=Out+1] 

* Chain [36]: 1
  with precondition: [Out=0,V>=0,V4>=0] 

* Chain [35]: 1
  with precondition: [V>=1,Out>=0,V4>=V+1,V4>=Out+1] 


#### Cost of loops [38,39,40,41,42] 

 * loop 38:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
1
 * loop 39:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
1
 * loop 40:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
1*s(6)+1*s(7)+3
  Such that:s(6) =< -V+V7
s(7) =< V7'

 * loop 41:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
1
 * loop 42:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
2*s(11)+3
  Such that:s(10) =< V7'
s(11) =< s(10)

#### Cost of phase [38,39,40,41,42]:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of phase [38,39,40,41,42]:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of phase [38,39,40,41,42]:appmin(V,V4,V7,Out) -> [appmin(V',V4',V7',Out')] 
9*it(38)+2*s(12)+2*s(14)+0
#### Cost of chains of appmin(V,V4,V7,Out):
* Chain [[38,39,40,41,42]]...: 13*it(38)+0
  with precondition: [V+V7+2*V4>=2,V4+V7>=1,V>=0,V4>=0,V7>=0] 

* Chain [[38,39,40,41,42],44]: 13*it(38)+5*s(17)+3
  Such that:aux(95) =< V7
s(17) =< aux(95)

  with precondition: [V>=0,V4>=0,V7>=0,Out>=1,V4+V7>=1,Out+V4>=2,V+V7+2*V4>=2,Out+V7+3*V4>=4] 

* Chain [[38,39,40,41,42],43]: 13*it(38)+1
  with precondition: [V>=0,V4>=0,V7>=0,Out>=0,V4+V7>=1,Out+V4>=1,V+V7+2*V4>=2,Out+V7+3*V4>=3] 

* Chain [44]: 3*s(17)+2*s(18)+3
  Such that:aux(93) =< -V+V7
aux(94) =< V7
s(18) =< aux(93)
s(17) =< aux(94)

  with precondition: [V4=0,V+1=Out,V>=0,V7>=0] 

* Chain [43]: 1
  with precondition: [Out=0,V>=0,V4>=0,V7>=0] 


#### Cost of chains of notEmpty(V,Out):
* Chain [47]: 1
  with precondition: [V=0,Out=1] 

* Chain [46]: 0
  with precondition: [Out=0,V>=0] 

* Chain [45]: 1
  with precondition: [Out=2,V>=1] 


#### Cost of chains of start(V,V4,V7,V31):
* Chain [54]...: 1*aux(96)+0
  with precondition: [V>=0,V4>=0,V7>=0,V4+V7>=1,V+V7+2*V4>=2] 

* Chain [53]...: 1*aux(97)+0
  with precondition: [3*V>=4] 

* Chain [52]: 2*s(31)+8*s(32)+52*s(35)+5*s(37)+3*s(40)+1*s(41)+4
  Such that:s(29) =< 1
s(41) =< -V+V4
s(36) =< V7
aux(98) =< V
aux(99) =< V4
s(40) =< aux(99)
s(31) =< s(29)
s(32) =< aux(98)
s(37) =< s(36)

  with precondition: [V>=0] 

* Chain [51]: 2*s(45)+8*s(46)+26*s(49)+3*s(51)+1*s(52)+3
  Such that:s(52) =< -V4+V7
s(43) =< -V4+V31
aux(100) =< V7
aux(101) =< V31
s(51) =< aux(100)
s(45) =< s(43)
s(46) =< aux(101)

  with precondition: [V=1,V4>=0,V7>=1] 

* Chain [50]: 2*s(56)+8*s(57)+26*s(60)+3
  Such that:s(54) =< -V7+V31+1
aux(102) =< V31
s(56) =< s(54)
s(57) =< aux(102)

  with precondition: [V=2,V4>=0,V7>=1,V31>=0] 

* Chain [49]: 2*s(63)+3*s(64)+3
  Such that:s(61) =< -V+V7
s(62) =< V7
s(63) =< s(61)
s(64) =< s(62)

  with precondition: [V4=0,V>=0] 

* Chain [48]: 0
  with precondition: [V=V4,V>=1] 


Closed-form bounds of start(V,V4,V7,V31): 
-------------------------------------
* Chain [54]... with precondition: [V>=0,V4>=0,V7>=0,V4+V7>=1,V+V7+2*V4>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [53]... with precondition: [3*V>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V=1,V4>=0,V7>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [V=2,V4>=0,V7>=1,V31>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [V4=0,V>=0] 
    - Upper bound: nat(V7)*3+3+nat(-V+V7)*2 
    - Complexity: n 
* Chain [48] with precondition: [V=V4,V>=1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of start(V,V4,V7,V31): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 46 ms.
* Invariants computed in 94 ms.
   - Backward Invariants 51 ms.
   - Transitive Invariants 25 ms.
* Refinement performed in 186 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 410 ms.
   - Equation cost structures 72 ms.
   - Phase cost structures 256 ms.
   - Chain cost structures 90 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 807 ms.

