
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [dbl/3]
1. recursive [non_tail] : [save/2]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into dbl/3
1. SCC is partially evaluated into save/2
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations dbl/3 
* CE 6 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations dbl/3 
* CE 10: dbl(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 11: dbl(V1,V,Out) = 1
     [Out=4,V=1,V1=1] 
* CE 12: dbl(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of dbl/3 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of dbl/3 
* Loop 7: dbl(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 8: dbl(V1,V,Out) [Out=4,V=1,V1=1] 
* Loop 9: dbl(A,B,B) [B>=0,A=0] 

### Ranking functions of CR dbl(V1,V,Out) 

#### Partial ranking functions of CR dbl(V1,V,Out) 


### Resulting Chains:dbl(V1,V,Out) 
* [9]
* [8]
* [7]


### Merging Chains  dbl/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[7]] --> 3 


### Specialization of cost equations save/2 
* CE 8 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 7 is refined into CE [15,16] 


#### Refined cost equations save/2 
* CE 13: save(V1,Out) = 1
     [Out=0,V1=0] 
* CE 14: save(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 15: save(V1,Out) = 1+ save(W1,Out)+ dbl(X1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V1,X1=0] 
* CE 16: save(V1,Out) = 1+ save(W1,X1)+ dbl(Y1,X1,Z1):3
     [W1>=0,X1>=0,W1+1=V1,Z1=0,Y1=0,Out=0] 

### Cost equations --> "Loop" of save/2 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [13,14] --> Loop 12 

#### Loops of save/2 
* Loop 10: save(V1,Out)->  save(V1',Out)
                  [Out>=0,V1>=1,V1=V1'+1] 
* Loop 11: save(V1,Out)->  save(V1',Out')
                  [Out'>=0,V1>=1,V1=V1'+1,Out=0] 
* Loop 12: save(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR save(V1,Out) 
* RF of phase [10,11]: [V1]

#### Partial ranking functions of CR save(V1,Out) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1,11:1]:
    V1


### Resulting Chains:save(V1,Out) 
* [[10,11],12]
* [12]


### Merging Chains  save/2 into  External patterns of execution 
* [[12],[12,[10,11]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [17,18,19] 
* CE 3 is refined into CE [20] 


#### Refined cost equations start/2 
* CE 17: start(V1,V) = 0+ dbl(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 18: start(V1,V) = 0+ dbl(W1,X1,Y1):2
     [Y1=4,X1=1,W1=1,V=1,V1=1] 
* CE 19: start(V1,V) = 0+ dbl(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 20: start(V1,V) = 0+ save(V1,W1):1
     [V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [18] --> Loop 13 
* CEs [17,19,20] --> Loop 14 

#### Loops of start/2 
* Loop 13: start(V1,V) [V=1,V1=1] 
* Loop 14: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [14]
* [13]


### Merging Chains  start/2 into  External patterns of execution 
* [[13],[14]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of dbl(V1,V,Out):
* Chain [9]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [8]: 1
  with precondition: [V1=1,V=1,Out=4] 

* Chain [7]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [10,11] 

 * loop 10:save(V1,Out) -> [save(V1',Out')] 
2
 * loop 11:save(V1,Out) -> [save(V1',Out')] 
1
#### Cost of phase [10,11]:save(V1,Out) -> [save(V1',Out')] 
3*it(10)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(10) =< aux(1)
it(10) =< aux(2)

#### Cost of chains of save(V1,Out):
* Chain [[10,11],12]: 3*it(10)+1
  Such that:aux(3) =< V1
it(10) =< aux(3)

  with precondition: [Out=0,V1>=1] 

* Chain [12]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [14]: 3*s(4)+1
  Such that:s(3) =< V1
s(4) =< s(3)

  with precondition: [V1>=0] 

* Chain [13]: 1
  with precondition: [V1=1,V=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [14] with precondition: [V1>=0] 
    - Upper bound: 3*V1+1 
    - Complexity: n 
* Chain [13] with precondition: [V1=1,V=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): 3*V1+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 15 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 53 ms.

