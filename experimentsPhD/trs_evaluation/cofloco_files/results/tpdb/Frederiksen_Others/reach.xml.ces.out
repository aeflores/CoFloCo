
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [and/3]
1. recursive  : [fun1/3]
2. non_recursive  : [fun3/6]
3. non_recursive  : [eqEdge/3]
4. recursive  : [fun2/4,member/3]
5. recursive [multiple] : [fun/6,fun4/5,fun5/6,reach/4,via/5]
6. non_recursive  : [getNodeFromEdge/3]
7. non_recursive  : [goal/4]
8. non_recursive  : [notEmpty/2]
9. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into fun1/3
2. SCC is partially evaluated into fun3/6
3. SCC is partially evaluated into eqEdge/3
4. SCC is partially evaluated into member/3
5. SCC is partially evaluated into via/5
6. SCC is partially evaluated into getNodeFromEdge/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into notEmpty/2
9. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 56 is refined into CE [60] 
* CE 55 is refined into CE [61] 
* CE 53 is refined into CE [62] 
* CE 54 is refined into CE [63] 
* CE 52 is refined into CE [64] 


#### Refined cost equations and/3 
* CE 60: and(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 61: and(V1,V,Out) = 0
     [Out=2,V=2,V1=2] 
* CE 62: and(V1,V,Out) = 0
     [Out=1,V=1,V1=2] 
* CE 63: and(V1,V,Out) = 0
     [Out=1,V=2,V1=1] 
* CE 64: and(V1,V,Out) = 0
     [Out=1,V=1,V1=1] 

### Cost equations --> "Loop" of and/3 
* CEs [60] --> Loop 37 
* CEs [61] --> Loop 38 
* CEs [62] --> Loop 39 
* CEs [63] --> Loop 40 
* CEs [64] --> Loop 41 

#### Loops of and/3 
* Loop 37: and(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 38: and(V1,V,Out) [Out=2,V=2,V1=2] 
* Loop 39: and(V1,V,Out) [Out=1,V=1,V1=2] 
* Loop 40: and(V1,V,Out) [Out=1,V=2,V1=1] 
* Loop 41: and(V1,V,Out) [Out=1,V=1,V1=1] 

### Ranking functions of CR and(V1,V,Out) 

#### Partial ranking functions of CR and(V1,V,Out) 


### Resulting Chains:and(V1,V,Out) 
* [41]
* [40]
* [39]
* [38]
* [37]


### Merging Chains  and/3 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 
* [[38]] --> 4 
* [[37]] --> 5 


### Specialization of cost equations fun1/3 
* CE 51 is refined into CE [65] 
* CE 49 is refined into CE [66] 
* CE 48 is refined into CE [67] 
* CE 50 is refined into CE [68] 
* CE 47 is refined into CE [69] 


#### Refined cost equations fun1/3 
* CE 65: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 66: fun1(V1,V,Out) = 0
     [V1>=1,Out=1,V=0] 
* CE 67: fun1(V1,V,Out) = 0
     [V>=1,Out=1,V1=0] 
* CE 68: fun1(V1,V,Out) = 0
     [Out=2,V=0,V1=0] 
* CE 69: fun1(V1,V,Out) = 0+ fun1(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [69] --> Loop 42 
* CEs [65] --> Loop 43 
* CEs [66] --> Loop 44 
* CEs [67] --> Loop 45 
* CEs [68] --> Loop 46 

#### Loops of fun1/3 
* Loop 42: fun1(V1,V,Out)->  fun1(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 43: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 44: fun1(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 45: fun1(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 46: fun1(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,Out) 
* RF of phase [42]: [V,V1]

#### Partial ranking functions of CR fun1(V1,V,Out) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V
    V1


### Resulting Chains:fun1(V1,V,Out) 
* [[42],46]
* [[42],45]
* [[42],44]
* [[42],43]
* [46]
* [45]
* [44]
* [43]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 
* [[43],[43,[42]]] --> 4 
* [[45,[42]]] --> 5 
* [[44,[42]]] --> 6 
* [[46,[42]]] --> 7 


### Specialization of cost equations fun3/6 
* CE 59 is refined into CE [70] 
* CE 58 is refined into CE [71] 
* CE 57 is refined into CE [72] 


#### Refined cost equations fun3/6 
* CE 70: fun3(V1,V,V7,V12,V46,Out) = 0
     [V46>=0,V12>=0,V7>=0,V>=0,V1>=0,Out=0] 
* CE 71: fun3(V1,V,V7,V12,V46,Out) = 0
     [V46>=0,V12>=0,V7>=0,V>=0,Out=2,V1=2] 
* CE 72: fun3(V1,V,V7,V12,V46,Out) = 0
     [V46>=0,V12>=0,V7>=0,V>=0,Out=1,V1=1] 

### Cost equations --> "Loop" of fun3/6 
* CEs [70] --> Loop 47 
* CEs [71] --> Loop 48 
* CEs [72] --> Loop 49 

#### Loops of fun3/6 
* Loop 47: fun3(V1,V,V7,V12,V46,Out) [V46>=0,V12>=0,V7>=0,V>=0,V1>=0,Out=0] 
* Loop 48: fun3(V1,V,V7,V12,V46,Out) [V46>=0,V12>=0,V7>=0,V>=0,Out=2,V1=2] 
* Loop 49: fun3(V1,V,V7,V12,V46,Out) [V46>=0,V12>=0,V7>=0,V>=0,Out=1,V1=1] 

### Ranking functions of CR fun3(V1,V,V7,V12,V46,Out) 

#### Partial ranking functions of CR fun3(V1,V,V7,V12,V46,Out) 


### Resulting Chains:fun3(V1,V,V7,V12,V46,Out) 
* [49]
* [48]
* [47]


### Merging Chains  fun3/6 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 


### Specialization of cost equations eqEdge/3 
* CE 42 is refined into CE [73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193] 
* CE 43 is refined into CE [194] 


#### Refined cost equations eqEdge/3 
* CE 73: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):4+ fun3(F2,G2,H2,I2,J2,K2):2
     [K2=2,J2=0,I2=0,H2=0,G2=0,F2=2,E2=2,D2=2,C2=2,B2=2,A2=0,Z1=0,Y1=2,X1=0,W1=0,Out=2,V=1,V1=1] 
* CE 74: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):4+ fun3(F2,G2,H2,I2,J2,K2):3
     [K2=0,J2=0,I2=0,H2=0,G2=0,F2=2,E2=2,D2=2,C2=2,B2=2,A2=0,Z1=0,Y1=2,X1=0,W1=0,Out=0,V=1,V1=1] 
* CE 75: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,G2,H2,I2,J2,K2):3
     [K2=0,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=2,B2=2,A2=0,Z1=0,Y1=2,X1=0,W1=0,Out=0,V=1,V1=1] 
* CE 76: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,I2,J2):1
     [A2>=1,A2+1=V,J2=1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Z1=0,Y1=2,X1=0,W1=0,Out=1,V1=1] 
* CE 77: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,I2,J2):3
     [A2>=1,A2+1=V,J2=0,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=1] 
* CE 78: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,G2,A2,H2,I2,J2):3
     [A2>=1,A2+1=V,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=2,B2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=1] 
* CE 79: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):3+ fun3(F2,G2,H2,I2,Z1,J2):1
     [Z1>=1,Z1+1=V1,J2=1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,A2=0,Y1=2,X1=0,W1=0,Out=1,V=1] 
* CE 80: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):3+ fun3(F2,G2,H2,I2,Z1,J2):3
     [Z1>=1,Z1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,A2=0,Y1=2,X1=0,W1=0,Out=0,V=1] 
* CE 81: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,G2,H2,I2,Z1,J2):3
     [Z1>=1,Z1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=2,B2=1,A2=0,Y1=2,X1=0,W1=0,Out=0,V=1] 
* CE 82: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,G2,A2,H2,Z1,I2):3
     [Z1>=0,A2>=0,A2+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=0,C2=2,B2=0,Y1=2,X1=0,W1=0,Out=0] 
* CE 83: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,Z1,I2):1
     [A2>=Z1+1,Z1>=1,A2+1=V,Z1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=1] 
* CE 84: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,Z1,I2):3
     [A2>=Z1+1,Z1>=1,A2+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=0] 
* CE 85: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,G2,A2,H2,Z1,I2):3
     [A2>=Z1+1,Z1>=1,A2+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=0] 
* CE 86: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,Z1,I2):1
     [Z1>=A2+1,A2>=1,A2+1=V,Z1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=1] 
* CE 87: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):3+ fun3(F2,G2,A2,H2,Z1,I2):3
     [Z1>=A2+1,A2>=1,A2+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=0] 
* CE 88: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,G2,A2,H2,Z1,I2):3
     [Z1>=A2+1,A2>=1,A2+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=2,B2=1,Y1=2,X1=0,W1=0,Out=0] 
* CE 89: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):4+ fun3(E2,F2,Z1,G2,Z1,H2):2
     [Z1>=1,Z1+1=V,Z1+1=V1,H2=2,G2=0,F2=0,E2=2,D2=2,C2=2,B2=2,A2=2,Y1=2,X1=0,W1=0,Out=2] 
* CE 90: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):4+ fun3(E2,F2,Z1,G2,Z1,H2):3
     [Z1>=1,Z1+1=V,Z1+1=V1,H2=0,G2=0,F2=0,E2=2,D2=2,C2=2,B2=2,A2=2,Y1=2,X1=0,W1=0,Out=0] 
* CE 91: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):1+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,F2,Z1,G2,Z1,H2):3
     [Z1>=1,Z1+1=V,Z1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=0,C2=2,B2=2,A2=2,Y1=2,X1=0,W1=0,Out=0] 
* CE 92: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,H2,I2,J2):1
     [X1>=1,X1+1=V,J2=1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,W1=0,Out=1,V1=1] 
* CE 93: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,H2,I2,J2):3
     [X1>=1,X1+1=V,J2=0,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,W1=0,Out=0,V1=1] 
* CE 94: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,X1,G2,H2,I2,J2):3
     [X1>=1,X1+1=V,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,W1=0,Out=0,V1=1] 
* CE 95: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,H2,I2):1
     [A2>=1,X1>=1,X1+A2+1=V,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,W1=0,Out=1,V1=1] 
* CE 96: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,H2,I2):3
     [A2>=1,X1>=1,X1+A2+1=V,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,W1=0,Out=0,V1=1] 
* CE 97: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,X1,A2,G2,H2,I2):3
     [A2>=1,X1>=1,X1+A2+1=V,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Z1=0,Y1=1,W1=0,Out=0,V1=1] 
* CE 98: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,H2,Z1,I2):1
     [Z1>=1,X1>=1,X1+1=V,Z1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,W1=0,Out=1] 
* CE 99: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,H2,Z1,I2):3
     [Z1>=1,X1>=1,X1+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,W1=0,Out=0] 
* CE 100: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,X1,G2,H2,Z1,I2):3
     [Z1>=1,X1>=1,X1+1=V,Z1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,A2=0,Y1=1,W1=0,Out=0] 
* CE 101: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,X1,A2,G2,Z1,H2):3
     [Z1>=0,A2>=0,X1>=1,X1+A2+1=V,Z1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=0,C2=1,B2=0,Y1=1,W1=0,Out=0] 
* CE 102: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,Z1,H2):1
     [A2>=Z1+1,Z1>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=1] 
* CE 103: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,Z1,H2):3
     [A2>=Z1+1,Z1>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=0] 
* CE 104: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,X1,A2,G2,Z1,H2):3
     [A2>=Z1+1,Z1>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=0] 
* CE 105: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,Z1,H2):1
     [Z1>=A2+1,A2>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=1] 
* CE 106: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,G2,Z1,H2):3
     [Z1>=A2+1,A2>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=0] 
* CE 107: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,X1,A2,G2,Z1,H2):3
     [Z1>=A2+1,A2>=1,X1>=1,X1+A2+1=V,Z1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,W1=0,Out=0] 
* CE 108: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,F2,Z1,G2):1
     [Z1>=1,X1>=1,X1+Z1+1=V,Z1+1=V1,G2=1,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,W1=0,Out=1] 
* CE 109: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,F2,Z1,G2):3
     [Z1>=1,X1>=1,X1+Z1+1=V,Z1+1=V1,G2=0,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,W1=0,Out=0] 
* CE 110: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):2+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,X1,Z1,F2,Z1,G2):3
     [Z1>=1,X1>=1,X1+Z1+1=V,Z1+1=V1,G2=0,F2=0,E2=0,D2=0,C2=2,B2=1,A2=2,Y1=1,W1=0,Out=0] 
* CE 111: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,G2,H2,W1,I2,J2):1
     [W1>=1,W1+1=V1,J2=1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,X1=0,Out=1,V=1] 
* CE 112: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,G2,H2,W1,I2,J2):3
     [W1>=1,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,X1=0,Out=0,V=1] 
* CE 113: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,G2,H2,W1,I2,J2):3
     [W1>=1,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,X1=0,Out=0,V=1] 
* CE 114: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,H2,I2):1
     [W1>=1,A2>=1,A2+1=V,W1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,X1=0,Out=1] 
* CE 115: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,H2,I2):3
     [W1>=1,A2>=1,A2+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,X1=0,Out=0] 
* CE 116: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,G2,A2,W1,H2,I2):3
     [W1>=1,A2>=1,A2+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Z1=0,Y1=1,X1=0,Out=0] 
* CE 117: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,G2,H2,W1,Z1,I2):1
     [Z1>=1,W1>=1,W1+Z1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,X1=0,Out=1,V=1] 
* CE 118: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,G2,H2,W1,Z1,I2):3
     [Z1>=1,W1>=1,W1+Z1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,X1=0,Out=0,V=1] 
* CE 119: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,G2,H2,W1,Z1,I2):3
     [Z1>=1,W1>=1,W1+Z1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,A2=0,Y1=1,X1=0,Out=0,V=1] 
* CE 120: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,G2,A2,W1,Z1,H2):3
     [Z1>=0,W1>=1,A2>=0,W1+Z1+1=V1,A2+1=V,H2=0,G2=0,F2=0,E2=0,D2=0,C2=1,B2=0,Y1=1,X1=0,Out=0] 
* CE 121: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,Z1,H2):1
     [A2>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V1,A2+1=V,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=1] 
* CE 122: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,Z1,H2):3
     [A2>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V1,A2+1=V,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=0] 
* CE 123: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,G2,A2,W1,Z1,H2):3
     [A2>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V1,A2+1=V,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=0] 
* CE 124: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,Z1,H2):1
     [Z1>=A2+1,W1>=1,A2>=1,W1+Z1+1=V1,A2+1=V,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=1] 
* CE 125: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,G2,A2,W1,Z1,H2):3
     [Z1>=A2+1,W1>=1,A2>=1,W1+Z1+1=V1,A2+1=V,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=0] 
* CE 126: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,G2,A2,W1,Z1,H2):3
     [Z1>=A2+1,W1>=1,A2>=1,W1+Z1+1=V1,A2+1=V,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,X1=0,Out=0] 
* CE 127: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,F2,Z1,W1,Z1,G2):1
     [W1>=1,Z1>=1,W1+Z1+1=V1,Z1+1=V,G2=1,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,X1=0,Out=1] 
* CE 128: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,F2,Z1,W1,Z1,G2):3
     [W1>=1,Z1>=1,W1+Z1+1=V1,Z1+1=V,G2=0,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,X1=0,Out=0] 
* CE 129: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):3+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,F2,Z1,W1,Z1,G2):3
     [W1>=1,Z1>=1,W1+Z1+1=V1,Z1+1=V,G2=0,F2=0,E2=0,D2=0,C2=2,B2=1,A2=2,Y1=1,X1=0,Out=0] 
* CE 130: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,H2,I2):3
     [W1>=0,X1>=0,X1+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=0,B2=2,A2=0,Z1=0,Y1=0,Out=0] 
* CE 131: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,G2,H2):3
     [W1>=0,A2>=1,X1>=0,X1+A2+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=1,C2=0,B2=1,Z1=0,Y1=0,Out=0] 
* CE 132: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,Z1,H2):3
     [Z1>=1,W1>=0,X1>=0,W1+Z1+1=V1,X1+1=V,H2=0,G2=0,F2=0,E2=0,D2=1,C2=0,B2=1,A2=0,Y1=0,Out=0] 
* CE 133: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [Z1>=0,W1>=0,A2>=0,X1>=0,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,Y1=0,Out=0] 
* CE 134: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [A2>=Z1+1,Z1>=1,W1>=0,X1>=0,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=0,B2=1,Y1=0,Out=0] 
* CE 135: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [Z1>=A2+1,W1>=0,A2>=1,X1>=0,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=0,B2=1,Y1=0,Out=0] 
* CE 136: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):4+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,X1,Z1,W1,Z1,F2):3
     [W1>=0,Z1>=1,X1>=0,X1+Z1+1=V,W1+Z1+1=V1,F2=0,E2=0,D2=0,C2=2,B2=0,A2=2,Y1=0,Out=0] 
* CE 137: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,W1,H2,I2):1
     [X1>=W1+1,W1>=1,X1+1=V,W1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=1] 
* CE 138: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,W1,H2,I2):3
     [X1>=W1+1,W1>=1,X1+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=0] 
* CE 139: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,H2,I2):3
     [X1>=W1+1,W1>=1,X1+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=0] 
* CE 140: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,G2,H2):1
     [X1>=W1+1,W1>=1,A2>=1,X1+A2+1=V,W1+1=V1,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=1] 
* CE 141: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,G2,H2):3
     [X1>=W1+1,W1>=1,A2>=1,X1+A2+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=0] 
* CE 142: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,G2,H2):3
     [X1>=W1+1,W1>=1,A2>=1,X1+A2+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=0] 
* CE 143: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,W1,Z1,H2):1
     [X1>=W1+1,Z1>=1,W1>=1,W1+Z1+1=V1,X1+1=V,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=1] 
* CE 144: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,W1,Z1,H2):3
     [X1>=W1+1,Z1>=1,W1>=1,W1+Z1+1=V1,X1+1=V,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=0] 
* CE 145: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,Z1,H2):3
     [X1>=W1+1,Z1>=1,W1>=1,W1+Z1+1=V1,X1+1=V,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=0] 
* CE 146: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [X1>=W1+1,Z1>=0,W1>=1,A2>=0,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=0,C2=1,B2=0,Y1=1,Out=0] 
* CE 147: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):1
     [A2>=Z1+1,X1>=W1+1,Z1>=1,W1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=1,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=1] 
* CE 148: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):3
     [A2>=Z1+1,X1>=W1+1,Z1>=1,W1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 149: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [A2>=Z1+1,X1>=W1+1,Z1>=1,W1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 150: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):1
     [X1>=W1+1,Z1>=A2+1,W1>=1,A2>=1,X1+A2+1=V,W1+Z1+1=V1,G2=1,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=1] 
* CE 151: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):3
     [X1>=W1+1,Z1>=A2+1,W1>=1,A2>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 152: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [X1>=W1+1,Z1>=A2+1,W1>=1,A2>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 153: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,W1,Z1,F2):1
     [X1>=W1+1,W1>=1,Z1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=1,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,Out=1] 
* CE 154: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,W1,Z1,F2):3
     [X1>=W1+1,W1>=1,Z1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,Out=0] 
* CE 155: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):5+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,X1,Z1,W1,Z1,F2):3
     [X1>=W1+1,W1>=1,Z1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=0,E2=0,D2=0,C2=2,B2=1,A2=2,Y1=1,Out=0] 
* CE 156: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,W1,H2,I2):1
     [W1>=X1+1,X1>=1,X1+1=V,W1+1=V1,I2=1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=1] 
* CE 157: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):2+ fun3(F2,X1,G2,W1,H2,I2):3
     [W1>=X1+1,X1>=1,X1+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=0] 
* CE 158: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):1+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,H2,I2):3
     [W1>=X1+1,X1>=1,X1+1=V,W1+1=V1,I2=0,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=0,Z1=0,Y1=1,Out=0] 
* CE 159: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,G2,H2):1
     [W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+1=V1,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=1] 
* CE 160: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,G2,H2):3
     [W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=0] 
* CE 161: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):2+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,G2,H2):3
     [W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Z1=0,Y1=1,Out=0] 
* CE 162: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,W1,Z1,H2):1
     [W1>=X1+1,Z1>=1,X1>=1,W1+Z1+1=V1,X1+1=V,H2=1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=1] 
* CE 163: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):1+ fun3(F2,X1,G2,W1,Z1,H2):3
     [W1>=X1+1,Z1>=1,X1>=1,W1+Z1+1=V1,X1+1=V,H2=0,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=0] 
* CE 164: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):3+ and(C2,D2,E2):5+ fun3(F2,X1,G2,W1,Z1,H2):3
     [W1>=X1+1,Z1>=1,X1>=1,W1+Z1+1=V1,X1+1=V,H2=0,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,A2=0,Y1=1,Out=0] 
* CE 165: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):4+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [W1>=X1+1,Z1>=0,A2>=0,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=0,C2=1,B2=0,Y1=1,Out=0] 
* CE 166: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):1
     [A2>=Z1+1,W1>=X1+1,Z1>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=1,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=1] 
* CE 167: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):3
     [A2>=Z1+1,W1>=X1+1,Z1>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 168: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):5+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [A2>=Z1+1,W1>=X1+1,Z1>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 169: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):1
     [Z1>=A2+1,W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=1,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=1] 
* CE 170: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):1+ fun3(F2,X1,A2,W1,Z1,G2):3
     [Z1>=A2+1,W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=1,E2=1,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 171: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,A2,B2):6+ and(C2,D2,E2):5+ fun3(F2,X1,A2,W1,Z1,G2):3
     [Z1>=A2+1,W1>=X1+1,A2>=1,X1>=1,X1+A2+1=V,W1+Z1+1=V1,G2=0,F2=0,E2=0,D2=1,C2=1,B2=1,Y1=1,Out=0] 
* CE 172: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,W1,Z1,F2):1
     [W1>=X1+1,Z1>=1,X1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=1,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,Out=1] 
* CE 173: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):2+ fun3(E2,X1,Z1,W1,Z1,F2):3
     [W1>=X1+1,Z1>=1,X1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=0,E2=1,D2=1,C2=2,B2=1,A2=2,Y1=1,Out=0] 
* CE 174: eqEdge(V1,V,Out) = 1+ fun1(W1,X1,Y1):6+ fun1(Z1,Z1,A2):7+ and(B2,C2,D2):5+ fun3(E2,X1,Z1,W1,Z1,F2):3
     [W1>=X1+1,Z1>=1,X1>=1,X1+Z1+1=V,W1+Z1+1=V1,F2=0,E2=0,D2=0,C2=2,B2=1,A2=2,Y1=1,Out=0] 
* CE 175: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):1+ and(B2,C2,D2):4+ fun3(E2,W1,F2,W1,G2,H2):2
     [W1>=1,W1+1=V,W1+1=V1,H2=2,G2=0,F2=0,E2=2,D2=2,C2=2,B2=2,A2=2,Z1=0,Y1=0,X1=2,Out=2] 
* CE 176: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):1+ and(B2,C2,D2):4+ fun3(E2,W1,F2,W1,G2,H2):3
     [W1>=1,W1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=2,D2=2,C2=2,B2=2,A2=2,Z1=0,Y1=0,X1=2,Out=0] 
* CE 177: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):1+ and(B2,C2,D2):5+ fun3(E2,W1,F2,W1,G2,H2):3
     [W1>=1,W1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=0,C2=2,B2=2,A2=2,Z1=0,Y1=0,X1=2,Out=0] 
* CE 178: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):2+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,F2,G2):1
     [Z1>=1,W1>=1,W1+Z1+1=V,W1+1=V1,G2=1,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,Y1=0,X1=2,Out=1] 
* CE 179: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):2+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,F2,G2):3
     [Z1>=1,W1>=1,W1+Z1+1=V,W1+1=V1,G2=0,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,Y1=0,X1=2,Out=0] 
* CE 180: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):2+ and(B2,C2,D2):5+ fun3(E2,W1,Z1,W1,F2,G2):3
     [Z1>=1,W1>=1,W1+Z1+1=V,W1+1=V1,G2=0,F2=0,E2=0,D2=0,C2=1,B2=2,A2=1,Y1=0,X1=2,Out=0] 
* CE 181: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):3+ and(B2,C2,D2):3+ fun3(E2,W1,F2,W1,Y1,G2):1
     [Y1>=1,W1>=1,W1+Y1+1=V1,W1+1=V,G2=1,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,Z1=0,X1=2,Out=1] 
* CE 182: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):3+ and(B2,C2,D2):3+ fun3(E2,W1,F2,W1,Y1,G2):3
     [Y1>=1,W1>=1,W1+Y1+1=V1,W1+1=V,G2=0,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,Z1=0,X1=2,Out=0] 
* CE 183: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):3+ and(B2,C2,D2):5+ fun3(E2,W1,F2,W1,Y1,G2):3
     [Y1>=1,W1>=1,W1+Y1+1=V1,W1+1=V,G2=0,F2=0,E2=0,D2=0,C2=1,B2=2,A2=1,Z1=0,X1=2,Out=0] 
* CE 184: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):4+ and(B2,C2,D2):5+ fun3(E2,W1,Z1,W1,Y1,F2):3
     [Y1>=0,Z1>=0,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=0,E2=0,D2=0,C2=0,B2=2,A2=0,X1=2,Out=0] 
* CE 185: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):5+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,Y1,F2):1
     [Z1>=Y1+1,Y1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=1,E2=1,D2=1,C2=1,B2=2,A2=1,X1=2,Out=1] 
* CE 186: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):5+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,Y1,F2):3
     [Z1>=Y1+1,Y1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,X1=2,Out=0] 
* CE 187: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):5+ and(B2,C2,D2):5+ fun3(E2,W1,Z1,W1,Y1,F2):3
     [Z1>=Y1+1,Y1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=0,E2=0,D2=0,C2=1,B2=2,A2=1,X1=2,Out=0] 
* CE 188: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):6+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,Y1,F2):1
     [Y1>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=1,E2=1,D2=1,C2=1,B2=2,A2=1,X1=2,Out=1] 
* CE 189: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):6+ and(B2,C2,D2):3+ fun3(E2,W1,Z1,W1,Y1,F2):3
     [Y1>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=0,E2=1,D2=1,C2=1,B2=2,A2=1,X1=2,Out=0] 
* CE 190: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Z1,A2):6+ and(B2,C2,D2):5+ fun3(E2,W1,Z1,W1,Y1,F2):3
     [Y1>=Z1+1,Z1>=1,W1>=1,W1+Z1+1=V,W1+Y1+1=V1,F2=0,E2=0,D2=0,C2=1,B2=2,A2=1,X1=2,Out=0] 
* CE 191: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Y1,Z1):7+ and(A2,B2,C2):4+ fun3(D2,W1,Y1,W1,Y1,E2):2
     [Y1>=1,W1>=1,W1+Y1+1=V,W1+Y1+1=V1,E2=2,D2=2,C2=2,B2=2,A2=2,Z1=2,X1=2,Out=2] 
* CE 192: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Y1,Z1):7+ and(A2,B2,C2):4+ fun3(D2,W1,Y1,W1,Y1,E2):3
     [Y1>=1,W1>=1,W1+Y1+1=V,W1+Y1+1=V1,E2=0,D2=2,C2=2,B2=2,A2=2,Z1=2,X1=2,Out=0] 
* CE 193: eqEdge(V1,V,Out) = 1+ fun1(W1,W1,X1):7+ fun1(Y1,Y1,Z1):7+ and(A2,B2,C2):5+ fun3(D2,W1,Y1,W1,Y1,E2):3
     [Y1>=1,W1>=1,W1+Y1+1=V,W1+Y1+1=V1,E2=0,D2=0,C2=0,B2=2,A2=2,Z1=2,X1=2,Out=0] 
* CE 194: eqEdge(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of eqEdge/3 
* CEs [89,175,191] --> Loop 50 
* CEs [83,86,98,102,105,108,114,121,124,127,137,140,143,147,150,153,156,159,162,166,169,172,178,181,185,188] --> Loop 51 
* CEs [90,91,176,177,192,193] --> Loop 52 
* CEs [79,111,117] --> Loop 53 
* CEs [80,81,112,113,118,119] --> Loop 54 
* CEs [76,92,95] --> Loop 55 
* CEs [77,78,93,94,96,97] --> Loop 56 
* CEs [73] --> Loop 57 
* CEs [74,75,82,84,85,87,88,99,100,101,103,104,106,107,109,110,115,116,120,122,123,125,126,128,129,130,131,132,133,134,135,136,138,139,141,142,144,145,146,148,149,151,152,154,155,157,158,160,161,163,164,165,167,168,170,171,173,174,179,180,182,183,184,186,187,189,190,194] --> Loop 58 

#### Loops of eqEdge/3 
* Loop 50: eqEdge(A,A,B) [A>=2,B=2] 
* Loop 51: eqEdge(V1,V,Out) [V>=2,V1>=2,Out=1] 
* Loop 52: eqEdge(A,A,B) [A>=2,B=0] 
* Loop 53: eqEdge(V1,V,Out) [V1>=2,Out=1,V=1] 
* Loop 54: eqEdge(V1,V,Out) [V1>=2,Out=0,V=1] 
* Loop 55: eqEdge(V1,V,Out) [V>=2,Out=1,V1=1] 
* Loop 56: eqEdge(V1,V,Out) [V>=2,Out=0,V1=1] 
* Loop 57: eqEdge(V1,V,Out) [Out=2,V=1,V1=1] 
* Loop 58: eqEdge(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR eqEdge(V1,V,Out) 

#### Partial ranking functions of CR eqEdge(V1,V,Out) 


### Resulting Chains:eqEdge(V1,V,Out) 
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]


### Merging Chains  eqEdge/3 into  External patterns of execution 
* [[57]] --> 1 
* [[56],[58]] --> 2 
* [[55]] --> 3 
* [[54]] --> 4 
* [[53]] --> 5 
* [[52]] --> 6 
* [[51]] --> 7 
* [[50]] --> 8 


### Specialization of cost equations member/3 
* CE 24 is refined into CE [195,196] 
* CE 23 is refined into CE [197,198,199,200,201,202,203,204] 
* CE 27 is refined into CE [205] 
* CE 26 is refined into CE [206] 
* CE 25 is refined into CE [207,208,209] 


#### Refined cost equations member/3 
* CE 195: member(V1,V,Out) = 1+ eqEdge(W1,X1,Y1):1
     [V>=2,Y1=2,X1=1,W1=1,Out=2,V1=1] 
* CE 196: member(V1,V,Out) = 1+ eqEdge(V1,V1,W1):8
     [V>=V1+1,V1>=2,W1=2,Out=2] 
* CE 197: member(V1,V,Out) = 1+ eqEdge(W1,X1,Y1):1
     [V>=2,Y1=2,X1=1,W1=1,Out=0,V1=1] 
* CE 198: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):2
     [V>=W1+1,W1>=0,V1>=0,X1=0,Out=0] 
* CE 199: member(V1,V,Out) = 1+ eqEdge(W1,X1,Y1):3
     [V>=X1+1,X1>=2,Y1=1,W1=1,Out=0,V1=1] 
* CE 200: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):4
     [V1>=2,V>=2,X1=0,W1=1,Out=0] 
* CE 201: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):5
     [V1>=2,V>=2,X1=1,W1=1,Out=0] 
* CE 202: member(V1,V,Out) = 1+ eqEdge(V1,V1,W1):6
     [V>=V1+1,V1>=2,W1=0,Out=0] 
* CE 203: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):7
     [V>=W1+1,W1>=2,V1>=2,X1=1,Out=0] 
* CE 204: member(V1,V,Out) = 1+ eqEdge(V1,V1,W1):8
     [V>=V1+1,V1>=2,W1=2,Out=0] 
* CE 205: member(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 206: member(V1,V,Out) = 1
     [V1>=0,Out=1,V=0] 
* CE 207: member(V1,V,Out) = 1+ eqEdge(W1,X1,Y1):3+ member(Z1,A2,Out)
     [V>=A2+1,V>=X1+1,A2>=0,X1>=2,Z1=1,Y1=1,W1=1,V1=1] 
* CE 208: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):5+ member(V1,Y1,Out)
     [V>=Y1+1,Y1>=0,V1>=2,V>=2,X1=1,W1=1] 
* CE 209: member(V1,V,Out) = 1+ eqEdge(V1,W1,X1):7+ member(V1,Y1,Out)
     [V>=Y1+1,V>=W1+1,Y1>=0,W1>=2,V1>=2,X1=1] 

### Cost equations --> "Loop" of member/3 
* CEs [208,209] --> Loop 59 
* CEs [207] --> Loop 60 
* CEs [196] --> Loop 61 
* CEs [206] --> Loop 62 
* CEs [195] --> Loop 63 
* CEs [197,198,199,200,201,202,203,204,205] --> Loop 64 

#### Loops of member/3 
* Loop 59: member(V1,V,Out)->  member(V1,V',Out)
                  [V>=V'+1,V'>=0,V>=2,V1>=2] 
* Loop 60: member(V1,V,Out)->  member(V1',V',Out)
                  [V>=V'+1,V'>=0,V>=3,V1'=1,V1=1] 
* Loop 61: member(V1,V,Out) [V>=V1+1,V1>=2,Out=2] 
* Loop 62: member(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 63: member(V1,V,Out) [V>=2,Out=2,V1=1] 
* Loop 64: member(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR member(V1,V,Out) 
* RF of phase [59]: [V-1]
* RF of phase [60]: [V-2]

#### Partial ranking functions of CR member(V1,V,Out) 
* Partial RF of phase [59]:
  - RF of loop [59:1]:
    V-1
* Partial RF of phase [60]:
  - RF of loop [60:1]:
    V-2


### Resulting Chains:member(V1,V,Out) 
* [[60],64]
* [[60],63]
* [[60],62]
* [[59],64]
* [[59],62]
* [[59],61]
* [64]
* [63]
* [62]
* [61]


### Merging Chains  member/3 into  External patterns of execution 
* [[64],[64,[59]],[64,[60]]] --> 1 
* [[62,[60]]] --> 2 
* [[63],[63,[60]]] --> 3 
* [[62]] --> 4 
* [[62,[59]]] --> 5 
* [[61],[61,[59]]] --> 6 


### Specialization of cost equations via/5 
* CE 30 is refined into CE [210,211,212,213] 
* CE 28 is refined into CE [214,215,216,217,218,219,220,221,222,223,224,225] 
* CE 34 is refined into CE [226,227,228,229,230,231,232] 
* CE 36 is refined into CE [233] 
* CE 37 is refined into CE [234] 
* CE 31 is refined into CE [235,236,237,238,239,240] 
* CE 32 is refined into CE [241,242,243,244,245,246,247,248,249,250,251,252] 
* CE 35 is refined into CE [253,254,255,256] 
* CE 29 is refined into CE [257,258,259,260,261,262] 
* CE 33 is refined into CE [263,264,265,266,267,268] 


#### Refined cost equations via/5 
* CE 210: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):3
     [V7+2>=Out,V12>=2,Out>=3,V7>=2,A13=2,Z12=1,Y12=2,X12=0,W12=0,V=0,V1=0] 
* CE 211: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):6
     [V+V7>=Z12+1,V7+Z12+1>=Out,V12>=Z12+1,Out>=Z12+2,Z12>=V+1,Z12>=2,V>=0,A13=2,Y12=2,X12=0,W12=0,V1=0] 
* CE 212: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):3
     [V7>=V1+2,V7+2>=Out,V12>=2,V1>=1,Out>=3,Y12=2,X12=1,W12=2,V=0] 
* CE 213: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):6
     [V+V7>=X12+1,V7+X12+1>=Out,V12>=X12+1,Out>=X12+2,V7>=V1+2,X12>=V+1,X12>=2,V1>=1,V>=0,Y12=2,W12=2] 
* CE 214: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):1
     [V+V7>=Z12+1,Z12>=V+1,V12>=0,V>=0,A13=0,Y12=2,X12=0,W12=0,Out=0,V1=0] 
* CE 215: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):2
     [V12>=3,V7>=2,A13=1,Z12=1,Y12=2,X12=0,W12=0,Out=0,V=0,V1=0] 
* CE 216: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):3
     [V12>=2,V7>=2,A13=2,Z12=1,Y12=2,X12=0,W12=0,Out=0,V=0,V1=0] 
* CE 217: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,A13,B13):4
     [V+V7>=Z12+1,Z12>=V+1,V>=0,B13=1,A13=0,Y12=2,X12=0,W12=0,Out=0,V12=0,V1=0] 
* CE 218: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):5
     [V+V7>=Z12+1,Z12>=V+1,V12>=2,Z12>=2,V>=0,A13=1,Y12=2,X12=0,W12=0,Out=0,V1=0] 
* CE 219: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):6
     [V+V7>=Z12+1,V12>=Z12+1,Z12>=V+1,Z12>=2,V>=0,A13=2,Y12=2,X12=0,W12=0,Out=0,V1=0] 
* CE 220: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):1
     [V+V7>=X12+1,V7>=V1+2,X12>=V+1,V12>=0,V1>=1,V>=0,Y12=0,W12=2,Out=0] 
* CE 221: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):2
     [V7>=V1+2,V12>=3,V1>=1,Y12=1,X12=1,W12=2,Out=0,V=0] 
* CE 222: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):3
     [V7>=V1+2,V12>=2,V1>=1,Y12=2,X12=1,W12=2,Out=0,V=0] 
* CE 223: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,Y12,Z12):4
     [V+V7>=X12+1,V7>=V1+2,X12>=V+1,V1>=1,V>=0,Z12=1,Y12=0,W12=2,Out=0,V12=0] 
* CE 224: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):5
     [V+V7>=X12+1,V7>=V1+2,X12>=V+1,V12>=2,X12>=2,V1>=1,V>=0,Y12=1,W12=2,Out=0] 
* CE 225: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):6
     [V+V7>=X12+1,V12>=X12+1,V7>=V1+2,X12>=V+1,X12>=2,V1>=1,V>=0,Y12=2,W12=2,Out=0] 
* CE 226: via(V1,V,V7,V12,Out) = 1+ fun1(W12,X12,Y12):1
     [V12>=0,V7>=2,V>=0,Y12=2,X12=0,W12=0,Out=0,V1=0] 
* CE 227: via(V1,V,V7,V12,Out) = 1+ fun1(W12,X12,Y12):2
     [V7>=X12+2,X12>=1,V12>=0,V>=0,Y12=1,W12=0,Out=0,V1=0] 
* CE 228: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):3
     [V1>=1,V12>=0,V7>=2,V>=0,X12=1,W12=0,Out=0] 
* CE 229: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):4
     [V7>=W12+2,W12>=0,V1>=0,V12>=0,V>=0,X12=0,Out=0] 
* CE 230: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):5
     [V7>=W12+2,W12>=V1+1,V1>=1,V12>=0,V>=0,X12=1,Out=0] 
* CE 231: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):6
     [V1>=W12+1,V7>=W12+2,W12>=1,V12>=0,V>=0,X12=1,Out=0] 
* CE 232: via(V1,V,V7,V12,Out) = 1+ fun1(V1,V1,W12):7
     [V7>=V1+2,V1>=1,V12>=0,V>=0,W12=2,Out=0] 
* CE 233: via(V1,V,V7,V12,Out) = 1
     [V12>=0,V>=0,V1>=0,Out=0,V7=0] 
* CE 234: via(V1,V,V7,V12,Out) = 0
     [V12>=0,V7>=0,V>=0,V1>=0,Out=0] 
* CE 235: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):2+ via(B13,C13,V12,V12,D13)
     [V7+D13>=Out,Out>=D13+1,D13>=1,V12>=3,V7>=2,C13=0,B13=0,A13=1,Z12=1,Y12=2,X12=0,W12=0,V=0,V1=0] 
* CE 236: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,A13,B13):4+ via(C13,V,D13,E13,F13)
     [V+V7>=Z12+1,V7+F13>=Out,Out>=F13+1,Z12>=V+1,F13>=1,V>=0,Z12=V+C13+1,E13=0,D13=0,B13=1,A13=0,Y12=2,X12=0,W12=0,V12=0,V1=0] 
* CE 237: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):5+ via(B13,V,V12,V12,C13)
     [V+V7>=Z12+1,V7+C13>=Out,Out>=C13+1,Z12>=V+1,C13>=1,V12>=2,Z12>=2,V>=0,Z12=V+B13+1,A13=1,Y12=2,X12=0,W12=0,V1=0] 
* CE 238: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):2+ via(Z12,A13,V12,V12,B13)
     [V7+B13>=Out,Out>=B13+1,V7>=V1+2,B13>=1,V12>=3,V1>=1,A13=0,Z12=0,Y12=1,X12=1,W12=2,V=0] 
* CE 239: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,Y12,Z12):4+ via(A13,V,B13,C13,D13)
     [V+V7>=X12+1,V7+D13>=Out,Out>=D13+1,V7>=V1+2,X12>=V+1,D13>=1,V1>=1,V>=0,X12=V+A13+1,C13=0,B13=0,Z12=1,Y12=0,W12=2,V12=0] 
* CE 240: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):5+ via(Z12,V,V12,V12,A13)
     [V+V7>=X12+1,V7+A13>=Out,Out>=A13+1,V7>=V1+2,X12>=V+1,A13>=1,V12>=2,X12>=2,V1>=1,V>=0,X12=V+Z12+1,Y12=1,W12=2] 
* CE 241: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):1+ via(B13,V,C13,V12,Out)
     [V+V7>=Z12+1,V7>=C13+1,Z12>=V+1,C13>=0,V12>=0,V>=0,B13=0,A13=0,Y12=2,X12=0,W12=0,V1=0] 
* CE 242: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):2+ via(B13,C13,D13,V12,Out)
     [V7>=D13+1,D13>=0,V12>=3,V7>=2,C13=0,B13=0,A13=1,Z12=1,Y12=2,X12=0,W12=0,V=0,V1=0] 
* CE 243: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):3+ via(B13,C13,D13,V12,Out)
     [V7>=D13+1,D13>=0,V12>=2,V7>=2,C13=0,B13=0,A13=2,Z12=1,Y12=2,X12=0,W12=0,V=0,V1=0] 
* CE 244: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,A13,B13):4+ via(C13,V,D13,E13,Out)
     [V+V7>=Z12+1,V7>=D13+1,Z12>=V+1,D13>=0,V>=0,E13=0,C13=0,B13=1,A13=0,Y12=2,X12=0,W12=0,V12=0,V1=0] 
* CE 245: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):5+ via(B13,V,C13,V12,Out)
     [V+V7>=Z12+1,V7>=C13+1,Z12>=V+1,C13>=0,V12>=2,Z12>=2,V>=0,B13=0,A13=1,Y12=2,X12=0,W12=0,V1=0] 
* CE 246: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):6+ via(B13,V,C13,V12,Out)
     [V+V7>=Z12+1,V7>=C13+1,V12>=Z12+1,Z12>=V+1,C13>=0,Z12>=2,V>=0,B13=0,A13=2,Y12=2,X12=0,W12=0,V1=0] 
* CE 247: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):1+ via(V1,V,Z12,V12,Out)
     [V+V7>=X12+1,V7>=Z12+1,V7>=V1+2,X12>=V+1,Z12>=0,V12>=0,V1>=1,V>=0,Y12=0,W12=2] 
* CE 248: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):2+ via(V1,Z12,A13,V12,Out)
     [V7>=A13+1,V7>=V1+2,A13>=0,V12>=3,V1>=1,Z12=0,Y12=1,X12=1,W12=2,V=0] 
* CE 249: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):3+ via(V1,Z12,A13,V12,Out)
     [V7>=A13+1,V7>=V1+2,A13>=0,V12>=2,V1>=1,Z12=0,Y12=2,X12=1,W12=2,V=0] 
* CE 250: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,Y12,Z12):4+ via(V1,V,A13,B13,Out)
     [V+V7>=X12+1,V7>=A13+1,V7>=V1+2,X12>=V+1,A13>=0,V1>=1,V>=0,B13=0,Z12=1,Y12=0,W12=2,V12=0] 
* CE 251: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):5+ via(V1,V,Z12,V12,Out)
     [V+V7>=X12+1,V7>=Z12+1,V7>=V1+2,X12>=V+1,Z12>=0,V12>=2,X12>=2,V1>=1,V>=0,Y12=1,W12=2] 
* CE 252: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):6+ via(V1,V,Z12,V12,Out)
     [V+V7>=X12+1,V7>=Z12+1,V12>=X12+1,V7>=V1+2,X12>=V+1,Z12>=0,X12>=2,V1>=1,V>=0,Y12=2,W12=2] 
* CE 253: via(V1,V,V7,V12,Out) = 1+ fun1(W12,X12,Y12):2+ via(Z12,V,A13,V12,Out)
     [V7>=A13+1,V7>=X12+2,A13>=0,X12>=1,V12>=0,V>=0,Z12=0,Y12=1,W12=0,V1=0] 
* CE 254: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):3+ via(V1,V,Y12,V12,Out)
     [V7>=Y12+1,Y12>=0,V1>=1,V12>=0,V7>=2,V>=0,X12=1,W12=0] 
* CE 255: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):5+ via(V1,V,Y12,V12,Out)
     [V7>=Y12+1,V7>=W12+2,W12>=V1+1,Y12>=0,V1>=1,V12>=0,V>=0,X12=1] 
* CE 256: via(V1,V,V7,V12,Out) = 1+ fun1(V1,W12,X12):6+ via(V1,V,Y12,V12,Out)
     [V7>=Y12+1,V1>=W12+1,V7>=W12+2,Y12>=0,W12>=1,V12>=0,V>=0,X12=1] 
* CE 257: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):2+ via(B13,C13,V12,V12,D13)
     [D13>=0,V12>=3,V7>=2,C13=0,B13=0,A13=1,Z12=1,Y12=2,X12=0,W12=0,Out=0,V=0,V1=0] 
* CE 258: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,A13,B13):4+ via(C13,V,D13,E13,F13)
     [V+V7>=Z12+1,Z12>=V+1,F13>=0,V>=0,Z12=V+C13+1,E13=0,D13=0,B13=1,A13=0,Y12=2,X12=0,W12=0,Out=0,V12=0,V1=0] 
* CE 259: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):5+ via(B13,V,V12,V12,C13)
     [V+V7>=Z12+1,Z12>=V+1,C13>=0,V12>=2,Z12>=2,V>=0,Z12=V+B13+1,A13=1,Y12=2,X12=0,W12=0,Out=0,V1=0] 
* CE 260: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):2+ via(Z12,A13,V12,V12,B13)
     [V7>=V1+2,B13>=0,V12>=3,V1>=1,A13=0,Z12=0,Y12=1,X12=1,W12=2,Out=0,V=0] 
* CE 261: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,Y12,Z12):4+ via(A13,V,B13,C13,D13)
     [V+V7>=X12+1,V7>=V1+2,X12>=V+1,D13>=0,V1>=1,V>=0,X12=V+A13+1,C13=0,B13=0,Z12=1,Y12=0,W12=2,Out=0,V12=0] 
* CE 262: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):5+ via(Z12,V,V12,V12,A13)
     [V+V7>=X12+1,V7>=V1+2,X12>=V+1,A13>=0,V12>=2,X12>=2,V1>=1,V>=0,X12=V+Z12+1,Y12=1,W12=2,Out=0] 
* CE 263: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):2+ via(B13,C13,V12,V12,D13)+ via(E13,F13,G13,V12,Out)
     [V7>=G13+1,G13>=0,V12>=3,V7>=2,F13=0,E13=0,D13=0,C13=0,B13=0,A13=1,Z12=1,Y12=2,X12=0,W12=0,V=0,V1=0] 
* CE 264: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,A13,B13):4+ via(C13,V,D13,E13,F13)+ via(G13,V,H13,I13,Out)
     [V+V7>=Z12+1,V7>=H13+1,Z12>=V+1,H13>=0,V>=0,Z12=V+C13+1,I13=0,G13=0,F13=0,E13=0,D13=0,B13=1,A13=0,Y12=2,X12=0,W12=0,V12=0,V1=0] 
* CE 265: via(V1,V,V7,V12,Out) = 2+ fun1(W12,X12,Y12):1+ member(Z12,V12,A13):5+ via(B13,V,V12,V12,C13)+ via(D13,V,E13,V12,Out)
     [V+V7>=Z12+1,V7>=E13+1,Z12>=V+1,E13>=0,V12>=2,Z12>=2,V>=0,Z12=V+B13+1,D13=0,C13=0,A13=1,Y12=2,X12=0,W12=0,V1=0] 
* CE 266: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):2+ via(Z12,A13,V12,V12,B13)+ via(V1,C13,D13,V12,Out)
     [V7>=D13+1,V7>=V1+2,D13>=0,V12>=3,V1>=1,C13=0,B13=0,A13=0,Z12=0,Y12=1,X12=1,W12=2,V=0] 
* CE 267: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,Y12,Z12):4+ via(A13,V,B13,C13,D13)+ via(V1,V,E13,F13,Out)
     [V+V7>=X12+1,V7>=E13+1,V7>=V1+2,X12>=V+1,E13>=0,V1>=1,V>=0,X12=V+A13+1,F13=0,D13=0,C13=0,B13=0,Z12=1,Y12=0,W12=2,V12=0] 
* CE 268: via(V1,V,V7,V12,Out) = 2+ fun1(V1,V1,W12):7+ member(X12,V12,Y12):5+ via(Z12,V,V12,V12,A13)+ via(V1,V,B13,V12,Out)
     [V+V7>=X12+1,V7>=B13+1,V7>=V1+2,X12>=V+1,B13>=0,V12>=2,X12>=2,V1>=1,V>=0,X12=V+Z12+1,A13=0,Y12=1,W12=2] 

### Cost equations --> "Loop" of via/5 
* CEs [268] --> Loop 65 
* CEs [267] --> Loop 66 
* CEs [266] --> Loop 67 
* CEs [265] --> Loop 68 
* CEs [264] --> Loop 69 
* CEs [263] --> Loop 70 
* CEs [240] --> Loop 71 
* CEs [262] --> Loop 72 
* CEs [250] --> Loop 73 
* CEs [239] --> Loop 74 
* CEs [261] --> Loop 75 
* CEs [247,248,249,251,252,254,255,256] --> Loop 76 
* CEs [238] --> Loop 77 
* CEs [260] --> Loop 78 
* CEs [237] --> Loop 79 
* CEs [259] --> Loop 80 
* CEs [236] --> Loop 81 
* CEs [244] --> Loop 82 
* CEs [258] --> Loop 83 
* CEs [241,242,243,245,246,253] --> Loop 84 
* CEs [235] --> Loop 85 
* CEs [257] --> Loop 86 
* CEs [213] --> Loop 87 
* CEs [223] --> Loop 88 
* CEs [233] --> Loop 89 
* CEs [212] --> Loop 90 
* CEs [221,222] --> Loop 91 
* CEs [211] --> Loop 92 
* CEs [217] --> Loop 93 
* CEs [210] --> Loop 94 
* CEs [214,215,216,218,219,220,224,225,226,227,228,229,230,231,232,234] --> Loop 95 

#### Loops of via/5 
* Loop 65: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')  via(V1,V,V7'2,V12,Out)
                  [V+A'>=1,V7>=V7'2+1,V7>=A'+2,V7>=V1+2,V7'2>=0,A'>=0,V12>=2,V>=0,V1>=1,B'=0] 
* Loop 66: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')  via(V1,V,V7'2,V12'2,Out)
                  [V7>=V7'2+1,V7>=V1'+2,V7>=V1+2,V7'2>=0,V1'>=0,V>=0,V1>=1,V12'2=0,Out'=0,V12'=0,V7'=0,V12=0] 
* Loop 67: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')  via(V1,V'2,V7'2,V12,Out)
                  [V7>=V7'2+1,V7>=V1+2,V7'2>=0,V12>=3,V1>=1,V'2=0,C'=0,B'=0,A'=0,V=0] 
* Loop 68: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')  via(V1'2,V,V7'2,V12,Out)
                  [V+A'>=1,V7>=V7'2+1,V7>=A'+2,V7'2>=0,A'>=0,V12>=2,V>=0,V1'2=0,B'=0,V1=0] 
* Loop 69: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')  via(V1'2,V,V7'2,V12'2,Out)
                  [V7>=V7'2+1,V7>=V1'+2,V7'2>=0,V1'>=0,V>=0,V12'2=0,V1'2=0,Out'=0,V12'=0,V7'=0,V12=0,V1=0] 
* Loop 70: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')  via(V1'2,V'2,V7'2,V12,Out)
                  [V7>=V7'2+1,V7'2>=0,V12>=3,V7>=2,V'2=0,V1'2=0,C'=0,B'=0,A'=0,V=0,V1=0] 
* Loop 71: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')
                  [V7+B'>=Out,V+A'>=1,Out>=B'+1,V7>=A'+2,V7>=V1+2,B'>=1,A'>=0,V12>=2,V>=0,V1>=1] 
* Loop 72: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')
                  [V+A'>=1,V7>=A'+2,V7>=V1+2,B'>=0,A'>=0,V12>=2,V>=0,V1>=1,Out=0] 
* Loop 73: via(V1,V,V7,V12,Out)->  via(V1,V,V7',V12',Out)
                  [V7>=V7'+1,V7>=V1+2,V7'>=0,V>=0,V1>=1,V12'=0,V12=0] 
* Loop 74: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')
                  [V7+Out'>=Out,Out>=Out'+1,V7>=V1'+2,V7>=V1+2,Out'>=1,V1'>=0,V>=0,V1>=1,V12'=0,V7'=0,V12=0] 
* Loop 75: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')
                  [V7>=V1'+2,V7>=V1+2,Out'>=0,V1'>=0,V>=0,V1>=1,V12'=0,V7'=0,Out=0,V12=0] 
* Loop 76: via(V1,V,V7,V12,Out)->  via(V1,V,V7',V12,Out)
                  [V7>=V7'+1,V7'>=0,V12>=0,V7>=2,V>=0,V1>=1] 
* Loop 77: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')
                  [V7+C'>=Out,Out>=C'+1,V7>=V1+2,C'>=1,V12>=3,V1>=1,B'=0,A'=0,V=0] 
* Loop 78: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')
                  [V7>=V1+2,C'>=0,V12>=3,V1>=1,B'=0,A'=0,Out=0,V=0] 
* Loop 79: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')
                  [V7+B'>=Out,V+A'>=1,Out>=B'+1,V7>=A'+2,B'>=1,A'>=0,V12>=2,V>=0,V1=0] 
* Loop 80: via(V1,V,V7,V12,Out)->  via(A',V,V12,V12,B')
                  [V+A'>=1,V7>=A'+2,B'>=0,A'>=0,V12>=2,V>=0,Out=0,V1=0] 
* Loop 81: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')
                  [V7+Out'>=Out,Out>=Out'+1,V7>=V1'+2,Out'>=1,V1'>=0,V>=0,V12'=0,V7'=0,V12=0,V1=0] 
* Loop 82: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out)
                  [V7>=V7'+1,V7'>=0,V7>=2,V>=0,V12'=0,V1'=0,V12=0,V1=0] 
* Loop 83: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12',Out')
                  [V7>=V1'+2,Out'>=0,V1'>=0,V>=0,V12'=0,V7'=0,Out=0,V12=0,V1=0] 
* Loop 84: via(V1,V,V7,V12,Out)->  via(V1',V,V7',V12,Out)
                  [V7>=V7'+1,V7'>=0,V12>=0,V7>=2,V>=0,V1'=0,V1=0] 
* Loop 85: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')
                  [V7+C'>=Out,Out>=C'+1,C'>=1,V12>=3,V7>=2,B'=0,A'=0,V=0,V1=0] 
* Loop 86: via(V1,V,V7,V12,Out)->  via(A',B',V12,V12,C')
                  [C'>=0,V12>=3,V7>=2,B'=0,A'=0,Out=0,V=0,V1=0] 
* Loop 87: via(V1,V,V7,V12,Out) [V7+V12>=Out,V+2*V7>=Out,Out>=V+3,V12>=V+2,V7>=V1+2,Out>=4,V12>=3,V>=0,V1>=1] 
* Loop 88: via(V1,V,V7,V12,Out) [V7>=V1+2,V>=0,V1>=1,Out=0,V12=0] 
* Loop 89: via(V1,V,V7,V12,Out) [V12>=0,V>=0,V1>=0,Out=0,V7=0] 
* Loop 90: via(V1,V,V7,V12,Out) [V7+2>=Out,V7>=V1+2,Out>=3,V12>=2,V1>=1,V=0] 
* Loop 91: via(V1,V,V7,V12,Out) [V7>=V1+2,V12>=2,V1>=1,Out=0,V=0] 
* Loop 92: via(V1,V,V7,V12,Out) [V7+V12>=Out,V+2*V7>=Out,V+V7>=3,Out>=V+3,V12>=V+2,Out>=4,V12>=3,V7>=2,V>=0,V1=0] 
* Loop 93: via(V1,V,V7,V12,Out) [V7>=2,V>=0,Out=0,V12=0,V1=0] 
* Loop 94: via(V1,V,V7,V12,Out) [V7+2>=Out,Out>=3,V12>=2,V7>=2,V=0,V1=0] 
* Loop 95: via(V1,V,V7,V12,Out) [V12>=0,V7>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR via(V1,V,V7,V12,Out) 

#### Partial ranking functions of CR via(V1,V,V7,V12,Out) 
* Partial RF of phase [65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86]:
  - RF of loop [65:2,66:2,67:2,73:1]:
    -V1+V7-1 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
    V7-2 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
  - RF of loop [66:1]:
    -V1/2+V7/2-1/2 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
    V1/3+V7/3-1 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
    V7/2-1 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
    V7/3-2/3 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
  - RF of loop [67:1,77:1,78:1]:
    V1 depends on loops [65:1,66:1,68:1,69:1,71:1,72:1,79:1,80:1] 
  - RF of loop [68:2]:
    V+V7-2 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
  - RF of loop [68:2,69:1,69:2,70:2,76:1,82:1,84:1]:
    V7-1 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 
  - RF of loop [69:1]:
    V1+V7-1 depends on loops [65:1,67:1,68:1,70:1,71:1,72:1,77:1,78:1,79:1,80:1,85:1,86:1] 


### Resulting Chains:via(V1,V,V7,V12,Out) 
* [multiple([65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86],[[],[95],[94],[93],[92],[91],[90],[89],[88],[87],[83,95],[83,89],[75,95],[75,89]])]...
* [95]
* [94]
* [93]
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]
* [83,95]
* [83,89]
* [75,95]
* [75,89]


### Merging Chains  via/5 into  External patterns of execution 
* [[94]] --> 1 
* [[89,83],[95,83],[93],[95]] --> 2 
* [[92]] --> 3 
* [[91]] --> 4 
* [[90]] --> 5 
* [[89]] --> 6 
* [[89,75],[95,75],[88]] --> 7 
* [[87]] --> 8 
* [[multiple([65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86],[[],[95],[94],[93],[92],[91],[90],[89],[88],[87],[83,95],[83,89],[75,95],[75,89]])]] --> 9 


### Specialization of cost equations getNodeFromEdge/3 
* CE 38 is refined into CE [269] 
* CE 41 is refined into CE [270] 
* CE 39 is refined into CE [271] 
* CE 40 is refined into CE [272] 


#### Refined cost equations getNodeFromEdge/3 
* CE 269: getNodeFromEdge(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1>=2] 
* CE 270: getNodeFromEdge(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 271: getNodeFromEdge(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=1] 
* CE 272: getNodeFromEdge(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 

### Cost equations --> "Loop" of getNodeFromEdge/3 
* CEs [269] --> Loop 96 
* CEs [270] --> Loop 97 
* CEs [271] --> Loop 98 
* CEs [272] --> Loop 99 

#### Loops of getNodeFromEdge/3 
* Loop 96: getNodeFromEdge(V1,V,Out) [V>=Out+1,Out>=0,V1>=2] 
* Loop 97: getNodeFromEdge(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 98: getNodeFromEdge(V1,V,Out) [V>=Out+1,Out>=0,V1=1] 
* Loop 99: getNodeFromEdge(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR getNodeFromEdge(V1,V,Out) 

#### Partial ranking functions of CR getNodeFromEdge(V1,V,Out) 


### Resulting Chains:getNodeFromEdge(V1,V,Out) 
* [99]
* [98]
* [97]
* [96]


### Merging Chains  getNodeFromEdge/3 into  External patterns of execution 
* [[99]] --> 1 
* [[98]] --> 2 
* [[97]] --> 3 
* [[96]] --> 4 


### Specialization of cost equations notEmpty/2 
* CE 44 is refined into CE [273] 
* CE 46 is refined into CE [274] 
* CE 45 is refined into CE [275] 


#### Refined cost equations notEmpty/2 
* CE 273: notEmpty(V1,Out) = 1
     [V1>=1,Out=2] 
* CE 274: notEmpty(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 275: notEmpty(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of notEmpty/2 
* CEs [273] --> Loop 100 
* CEs [274] --> Loop 101 
* CEs [275] --> Loop 102 

#### Loops of notEmpty/2 
* Loop 100: notEmpty(V1,Out) [V1>=1,Out=2] 
* Loop 101: notEmpty(V1,Out) [V1>=0,Out=0] 
* Loop 102: notEmpty(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR notEmpty(V1,Out) 

#### Partial ranking functions of CR notEmpty(V1,Out) 


### Resulting Chains:notEmpty(V1,Out) 
* [102]
* [101]
* [100]


### Merging Chains  notEmpty/2 into  External patterns of execution 
* [[102]] --> 1 
* [[101]] --> 2 
* [[100]] --> 3 


### Specialization of cost equations start/5 
* CE 7 is refined into CE [276,277,278,279,280,281,282,283,284] 
* CE 2 is refined into CE [285,286,287,288,289,290] 
* CE 3 is refined into CE [291,292,293,294,295,296,297,298,299,300,301,302] 
* CE 5 is refined into CE [303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347] 
* CE 6 is refined into CE [348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381] 
* CE 12 is refined into CE [382,383,384,385,386,387] 
* CE 4 is refined into CE [388] 
* CE 8 is refined into CE [389,390,391,392,393,394] 
* CE 9 is refined into CE [395,396,397,398,399,400,401,402,403,404,405,406] 
* CE 10 is refined into CE [407,408,409,410,411,412,413,414] 
* CE 11 is refined into CE [415,416,417,418,419,420,421,422,423] 
* CE 13 is refined into CE [424,425,426,427] 
* CE 14 is refined into CE [428,429,430,431,432,433,434,435,436] 
* CE 15 is refined into CE [437,438,439,440,441,442] 
* CE 16 is refined into CE [443,444,445,446,447,448,449,450] 
* CE 17 is refined into CE [451,452,453] 
* CE 18 is refined into CE [454,455,456,457,458,459] 
* CE 19 is refined into CE [460,461,462,463,464,465,466,467,468,469,470,471] 
* CE 20 is refined into CE [472,473,474,475,476,477,478] 
* CE 21 is refined into CE [479,480,481,482,483] 
* CE 22 is refined into CE [484,485,486] 


#### Refined cost equations start/5 
* CE 276: start(V1,V,V7,V12,V46) = 0+ via(W46,X46,Y46,V12,Z46):1
     [Y46+2>=Z46,V7>=Y46+1,Z46>=3,V12>=2,Y46>=2,X46=0,W46=0,V46=0,V=0,V1=0] 
* CE 277: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,V12,X46):2
     [V7>=W46+1,V12>=0,W46>=0,V>=0,V1>=0,X46=0,V46=0] 
* CE 278: start(V1,V,V7,V12,V46) = 0+ via(W46,V,X46,V12,Y46):3
     [V12+X46>=Y46,V+2*X46>=Y46,V+X46>=3,V7>=X46+1,Y46>=V+3,V12>=V+2,Y46>=4,V12>=3,X46>=2,V>=0,W46=0,V46=0,V1=0] 
* CE 279: start(V1,V,V7,V12,V46) = 0+ via(V1,W46,X46,V12,Y46):4
     [V7>=X46+1,X46>=V1+2,V12>=2,V1>=1,Y46=0,W46=0,V46=0,V=0] 
* CE 280: start(V1,V,V7,V12,V46) = 0+ via(V1,W46,X46,V12,Y46):5
     [X46+2>=Y46,V7>=X46+1,X46>=V1+2,Y46>=3,V12>=2,V1>=1,W46=0,V46=0,V=0] 
* CE 281: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,V12,X46):6
     [V12>=0,V>=0,V1>=0,V7>=1,X46=0,W46=0,V46=0] 
* CE 282: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,X46,Y46):7
     [V7>=W46+1,W46>=V1+2,V>=0,V1>=1,Y46=0,X46=0,V46=0,V12=0] 
* CE 283: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,V12,X46):8
     [V12+W46>=X46,V+2*W46>=X46,V7>=W46+1,X46>=V+3,V12>=V+2,W46>=V1+2,X46>=4,V12>=3,V>=0,V1>=1,V46=0] 
* CE 284: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,V12,X46):9
     [V7>=W46+1,V12>=0,W46>=2,V>=0,V1>=0,V46=0] 
* CE 285: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1
     [V7+V12>=W46+1,W46>=V7+1,V46>=0,V7>=0,V>=0,X46=0,V1=2] 
* CE 286: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2
     [V46>=3,V12>=2,V>=0,X46=1,W46=1,V7=0,V1=2] 
* CE 287: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3
     [V46>=2,V12>=2,V>=0,X46=2,W46=1,V7=0,V1=2] 
* CE 288: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4
     [V7+V12>=W46+1,W46>=V7+1,V7>=0,V>=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 289: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5
     [V7+V12>=W46+1,W46>=V7+1,V46>=2,W46>=2,V7>=0,V>=0,X46=1,V1=2] 
* CE 290: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6
     [V7+V12>=W46+1,V46>=W46+1,W46>=V7+1,W46>=2,V7>=0,V>=0,X46=2,V1=2] 
* CE 291: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):1
     [V46+2>=A47,A47>=3,V46>=3,V12>=2,V>=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 292: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2
     [V46>=3,V12>=2,V>=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 293: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):3
     [2*V46>=A47,A47>=4,V46>=3,V12>=2,V>=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 294: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):9
     [A47>=0,V46>=3,V12>=2,V>=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 295: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):2
     [V12>=Z46+2,V7>=0,Z46>=0,V>=0,V7+Z46+1=W46,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 296: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):6
     [V12>=Z46+2,V7>=0,Z46>=0,V>=0,V7+Z46+1=W46,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 297: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2
     [V7+Y46>=1,V12>=Y46+2,V46>=2,V7>=0,Y46>=0,V>=0,V7+Y46+1=W46,Z46=0,X46=1,V1=2] 
* CE 298: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):3
     [2*V46>=Z46,Z46>=V7+3,V46>=V7+2,V7>=1,V12>=2,V>=0,V7+1=W46,Y46=0,X46=1,V1=2] 
* CE 299: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4
     [V46>=Y46+2,V12>=Y46+2,Y46>=1,V>=0,Y46+1=W46,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 300: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):5
     [V46+2>=A47,V46>=Y46+2,V12>=Y46+2,A47>=3,Y46>=1,V>=0,Y46+1=W46,Z46=0,X46=1,V7=0,V1=2] 
* CE 301: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):8
     [2*V46>=Z46,Z46>=V7+3,V46>=V7+2,V46>=Y46+2,V12>=Y46+2,Z46>=4,V7>=0,Y46>=1,V>=0,V7+Y46+1=W46,X46=1,V1=2] 
* CE 302: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):9
     [V7+Y46>=1,V12>=Y46+2,Z46>=0,V46>=2,V7>=0,Y46>=0,V>=0,V7+Y46+1=W46,X46=1,V1=2] 
* CE 303: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(Y46,Z46,A47,V46,B47):1
     [A47+2>=B47,V12>=A47+1,V12>=W46+1,B47>=3,V46>=2,A47>=2,W46>=1,Z46=0,Y46=0,X46=0,V7=0,V=0,V1=2] 
* CE 304: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,V7,Y46,V46,Z46):2
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=0,Y46>=0,V7>=0,V>=0,Z46=0,X46=0,V1=2] 
* CE 305: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(Y46,V7,Z46,V46,A47):3
     [V46+Z46>=A47,V7+2*Z46>=A47,V7+V12>=W46+1,V7+Z46>=3,V12>=Z46+1,A47>=V7+3,V46>=V7+2,W46>=V7+1,A47>=4,V46>=3,Z46>=2,V7>=0,Y46=0,X46=0,V=0,V1=2] 
* CE 306: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,Y46,Z46,V46,A47):4
     [V12>=Z46+1,Z46>=V+2,V12>=W46+1,V46>=2,V>=1,W46>=1,A47=0,Y46=0,X46=0,V7=0,V1=2] 
* CE 307: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,Y46,Z46,V46,A47):5
     [Z46+2>=A47,V12>=Z46+1,Z46>=V+2,V12>=W46+1,A47>=3,V46>=2,V>=1,W46>=1,Y46=0,X46=0,V7=0,V1=2] 
* CE 308: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,V7,Y46,V46,Z46):6
     [V7+V12>=W46+1,W46>=V7+1,V46>=0,V7>=0,V>=0,Z46=0,Y46=0,X46=0,V1=2] 
* CE 309: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):1+ via(V,V7,Z46,A47,B47):7
     [V7+V12>=W46+1,V12>=Z46+1,W46>=V7+1,Z46>=V+2,V7>=0,V>=1,B47=0,A47=0,Y46=0,X46=0,V46=0,V1=2] 
* CE 310: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,V7,Y46,V46,Z46):8
     [V46+Y46>=Z46,V7+2*Y46>=Z46,V7+V12>=W46+1,V12>=Y46+1,Z46>=V7+3,V46>=V7+2,W46>=V7+1,Y46>=V+2,Z46>=4,V46>=3,V7>=0,V>=1,X46=0,V1=2] 
* CE 311: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):1+ via(V,V7,Y46,V46,Z46):9
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=0,Y46>=2,V7>=0,V>=0,X46=0,V1=2] 
* CE 312: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,A47,V46,B47):1
     [A47+2>=B47,V12>=A47+1,B47>=3,V46>=3,A47>=2,Z46=0,Y46=0,X46=1,W46=1,V7=0,V=0,V1=2] 
* CE 313: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):2
     [V12>=Z46+1,V46>=3,Z46>=0,V>=0,V12>=2,A47=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 314: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,A47,V46,B47):3
     [V46+A47>=B47,2*A47>=B47,V12>=A47+1,B47>=4,V46>=3,A47>=3,Z46=0,Y46=0,X46=1,W46=1,V7=0,V=0,V1=2] 
* CE 315: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):4
     [V12>=Z46+1,Z46>=V+2,V46>=3,V>=1,A47=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 316: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):5
     [Z46+2>=A47,V12>=Z46+1,Z46>=V+2,A47>=3,V46>=3,V>=1,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 317: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):6
     [V46>=3,V>=0,V12>=2,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 318: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):8
     [V46+Z46>=A47,2*Z46>=A47,V12>=Z46+1,Z46>=V+2,A47>=4,V46>=3,V>=1,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 319: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(V,Y46,Z46,V46,A47):9
     [V12>=Z46+1,V46>=3,Z46>=2,V>=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 320: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(Y46,Z46,A47,V46,B47):1
     [A47+2>=B47,V12>=A47+1,B47>=3,V46>=2,A47>=2,Z46=0,Y46=0,X46=2,W46=1,V7=0,V=0,V1=2] 
* CE 321: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):2
     [V12>=Z46+1,V46>=2,Z46>=0,V>=0,V12>=2,A47=0,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 322: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(Y46,Z46,A47,V46,B47):3
     [V46+A47>=B47,2*A47>=B47,V12>=A47+1,B47>=4,V46>=3,A47>=3,Z46=0,Y46=0,X46=2,W46=1,V7=0,V=0,V1=2] 
* CE 323: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):4
     [V12>=Z46+1,Z46>=V+2,V46>=2,V>=1,A47=0,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 324: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):5
     [Z46+2>=A47,V12>=Z46+1,Z46>=V+2,A47>=3,V46>=2,V>=1,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 325: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):6
     [V46>=2,V>=0,V12>=2,A47=0,Z46=0,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 326: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):8
     [V46+Z46>=A47,2*Z46>=A47,V12>=Z46+1,Z46>=V+2,A47>=4,V46>=3,V>=1,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 327: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):3+ via(V,Y46,Z46,V46,A47):9
     [V12>=Z46+1,V46>=2,Z46>=2,V>=0,Y46=0,X46=2,W46=1,V7=0,V1=2] 
* CE 328: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V,V7,Z46,A47,B47):2
     [V7+V12>=W46+1,V12>=Z46+1,W46>=V7+1,Z46>=0,V7>=0,V>=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 329: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V,V7,Z46,A47,B47):6
     [V7+V12>=W46+1,W46>=V7+1,V7>=0,V>=0,B47=0,A47=0,Z46=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 330: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V,V7,Z46,A47,B47):7
     [V7+V12>=W46+1,V12>=Z46+1,W46>=V7+1,Z46>=V+2,V7>=0,V>=1,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 331: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V,V7,Z46,A47,B47):9
     [V7+V12>=W46+1,V12>=Z46+1,W46>=V7+1,Z46>=2,V7>=0,V>=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 332: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,A47,V46,B47):1
     [A47+2>=B47,V12>=A47+1,V12>=W46+1,B47>=3,V46>=2,A47>=2,W46>=2,Z46=0,Y46=0,X46=1,V7=0,V=0,V1=2] 
* CE 333: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,V7,Y46,V46,Z46):2
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=2,Y46>=0,V7>=0,V>=0,W46>=2,Z46=0,X46=1,V1=2] 
* CE 334: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,Z46,V46,A47):3
     [V46+Z46>=A47,V7+2*Z46>=A47,V7+V12>=W46+1,V7+Z46>=3,V12>=Z46+1,A47>=V7+3,V46>=V7+2,W46>=V7+1,A47>=4,V46>=3,Z46>=2,V7>=0,W46>=2,Y46=0,X46=1,V=0,V1=2] 
* CE 335: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,Y46,Z46,V46,A47):4
     [V12>=Z46+1,Z46>=V+2,V12>=W46+1,V46>=2,V>=1,W46>=2,A47=0,Y46=0,X46=1,V7=0,V1=2] 
* CE 336: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,Y46,Z46,V46,A47):5
     [Z46+2>=A47,V12>=Z46+1,Z46>=V+2,V12>=W46+1,A47>=3,V46>=2,V>=1,W46>=2,Y46=0,X46=1,V7=0,V1=2] 
* CE 337: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,V7,Y46,V46,Z46):6
     [V7+V12>=W46+1,W46>=V7+1,V46>=2,V7>=0,V>=0,W46>=2,Z46=0,Y46=0,X46=1,V1=2] 
* CE 338: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,V7,Y46,V46,Z46):8
     [V46+Y46>=Z46,V7+2*Y46>=Z46,V7+V12>=W46+1,V12>=Y46+1,Z46>=V7+3,V46>=V7+2,W46>=V7+1,Y46>=V+2,Z46>=4,V46>=3,V7>=0,V>=1,W46>=2,X46=1,V1=2] 
* CE 339: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(V,V7,Y46,V46,Z46):9
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=2,Y46>=2,V7>=0,V>=0,W46>=2,X46=1,V1=2] 
* CE 340: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(Y46,Z46,A47,V46,B47):1
     [A47+2>=B47,V12>=A47+1,V46>=W46+1,V12>=W46+1,B47>=3,A47>=2,W46>=2,Z46=0,Y46=0,X46=2,V7=0,V=0,V1=2] 
* CE 341: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,V7,Y46,V46,Z46):2
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=W46+1,Y46>=0,V7>=0,V>=0,W46>=2,Z46=0,X46=2,V1=2] 
* CE 342: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(Y46,V7,Z46,V46,A47):3
     [V46+Z46>=A47,V7+2*Z46>=A47,V7+V12>=W46+1,V7+Z46>=3,V12>=Z46+1,A47>=V7+3,W46>=V7+1,V46>=W46+1,A47>=4,Z46>=2,V7>=0,W46>=2,Y46=0,X46=2,V=0,V1=2] 
* CE 343: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,Y46,Z46,V46,A47):4
     [V12>=Z46+1,Z46>=V+2,V46>=W46+1,V12>=W46+1,V>=1,W46>=2,A47=0,Y46=0,X46=2,V7=0,V1=2] 
* CE 344: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,Y46,Z46,V46,A47):5
     [Z46+2>=A47,V12>=Z46+1,Z46>=V+2,V46>=W46+1,V12>=W46+1,A47>=3,V>=1,W46>=2,Y46=0,X46=2,V7=0,V1=2] 
* CE 345: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,V7,Y46,V46,Z46):6
     [V7+V12>=W46+1,W46>=V7+1,V46>=W46+1,V7>=0,V>=0,W46>=2,Z46=0,Y46=0,X46=2,V1=2] 
* CE 346: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,V7,Y46,V46,Z46):8
     [V46+Y46>=Z46,V7+2*Y46>=Z46,V7+V12>=W46+1,V12>=Y46+1,Z46>=V7+3,W46>=V7+1,Y46>=V+2,V46>=W46+1,Z46>=4,V7>=0,V>=1,W46>=2,X46=2,V1=2] 
* CE 347: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):6+ via(V,V7,Y46,V46,Z46):9
     [V7+V12>=W46+1,V12>=Y46+1,W46>=V7+1,V46>=W46+1,Y46>=2,V7>=0,V>=0,W46>=2,X46=2,V1=2] 
* CE 348: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(B47,C47,D47,V46,E47):1
     [D47+2>=E47,V12>=D47+1,E47>=3,V46>=3,D47>=2,C47=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V=0,V1=2] 
* CE 349: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):2
     [V12>=C47+1,V46>=3,C47>=0,V>=0,V12>=2,D47=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 350: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(B47,C47,D47,V46,E47):3
     [V46+D47>=E47,2*D47>=E47,V12>=D47+1,E47>=4,V46>=3,D47>=3,C47=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V=0,V1=2] 
* CE 351: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):4
     [V12>=C47+1,C47>=V+2,V46>=3,V>=1,D47=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 352: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):5
     [C47+2>=D47,V12>=C47+1,C47>=V+2,D47>=3,V46>=3,V>=1,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 353: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):6
     [V46>=3,V>=0,V12>=2,D47=0,C47=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 354: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):8
     [V46+C47>=D47,2*C47>=D47,V12>=C47+1,C47>=V+2,D47>=4,V46>=3,V>=1,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 355: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):9
     [V12>=C47+1,V46>=3,C47>=2,V>=0,B47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 356: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):2+ via(Y46,Z46,V46,V46,A47):9
     [V12>=B47+1,B47>=0,V46>=3,V12>=2,V>=0,C47=0,A47=0,Z46=0,Y46=0,X46=1,W46=1,V7=0,V1=2] 
* CE 357: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):2+ via(V,V7,D47,E47,F47):2
     [V12>=D47+1,V12>=Z46+2,D47>=0,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 358: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):2+ via(V,V7,D47,E47,F47):6
     [V12>=Z46+2,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,D47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 359: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):2+ via(V,V7,D47,E47,F47):7
     [V12>=D47+1,D47>=V+2,V12>=Z46+2,V7>=0,V>=1,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 360: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):2+ via(V,V7,D47,E47,F47):9
     [V12>=D47+1,V12>=Z46+2,D47>=2,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 361: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):6+ via(V,V7,D47,E47,F47):2
     [V12>=D47+1,V12>=Z46+2,D47>=0,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 362: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):6+ via(V,V7,D47,E47,F47):6
     [V12>=Z46+2,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,D47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 363: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):6+ via(V,V7,D47,E47,F47):7
     [V12>=D47+1,D47>=V+2,V12>=Z46+2,V7>=0,V>=1,Z46>=0,V7+Z46+1=W46,F47=0,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 364: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(Z46,V7,A47,B47,C47):6+ via(V,V7,D47,E47,F47):9
     [V12>=D47+1,V12>=Z46+2,D47>=2,V7>=0,V>=0,Z46>=0,V7+Z46+1=W46,E47=0,C47=0,B47=0,A47=0,Y46=1,X46=0,V46=0,V1=2] 
* CE 365: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):2+ via(B47,C47,D47,V46,E47):1
     [D47+2>=E47,V12>=D47+1,V12>=Y46+2,E47>=3,V46>=2,D47>=2,Y46>=1,Y46+1=W46,C47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V=0,V1=2] 
* CE 366: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2+ via(V,V7,A47,V46,B47):2
     [V7+Y46>=1,V12>=A47+1,V12>=Y46+2,V46>=2,A47>=0,V7>=0,V>=0,Y46>=0,V7+Y46+1=W46,B47=0,Z46=0,X46=1,V1=2] 
* CE 367: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2+ via(A47,V7,B47,V46,C47):3
     [V46+B47>=C47,V7+2*B47>=C47,V7+B47>=3,V7+Y46>=1,V12>=B47+1,C47>=V7+3,V46>=V7+2,V12>=Y46+2,C47>=4,V46>=3,B47>=2,V7>=0,Y46>=0,V7+Y46+1=W46,A47=0,Z46=0,X46=1,V=0,V1=2] 
* CE 368: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):4
     [V12>=C47+1,C47>=V+2,V12>=Y46+2,V46>=2,V>=1,Y46>=1,Y46+1=W46,D47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 369: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):2+ via(V,B47,C47,V46,D47):5
     [C47+2>=D47,V12>=C47+1,C47>=V+2,V12>=Y46+2,D47>=3,V46>=2,V>=1,Y46>=1,Y46+1=W46,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 370: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2+ via(V,V7,A47,V46,B47):6
     [V7+Y46>=1,V12>=Y46+2,V46>=2,V7>=0,V>=0,Y46>=0,V7+Y46+1=W46,B47=0,A47=0,Z46=0,X46=1,V1=2] 
* CE 371: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2+ via(V,V7,A47,V46,B47):8
     [V46+A47>=B47,V7+2*A47>=B47,V7+Y46>=1,V12>=A47+1,B47>=V7+3,V46>=V7+2,A47>=V+2,V12>=Y46+2,B47>=4,V46>=3,V7>=0,V>=1,Y46>=0,V7+Y46+1=W46,Z46=0,X46=1,V1=2] 
* CE 372: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):2+ via(V,V7,A47,V46,B47):9
     [V7+Y46>=1,V12>=A47+1,V12>=Y46+2,V46>=2,A47>=2,V7>=0,V>=0,Y46>=0,V7+Y46+1=W46,Z46=0,X46=1,V1=2] 
* CE 373: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(B47,C47,D47,V46,E47):1
     [D47+2>=E47,V12>=D47+1,V46>=Y46+2,V12>=Y46+2,E47>=3,D47>=2,Y46>=1,Y46+1=W46,C47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V=0,V1=2] 
* CE 374: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):2
     [V12>=C47+1,V46>=Y46+2,V12>=Y46+2,C47>=0,V>=0,Y46>=1,Y46+1=W46,D47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 375: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(B47,C47,D47,V46,E47):3
     [V46+D47>=E47,2*D47>=E47,V12>=D47+1,V46>=Y46+2,V12>=Y46+2,E47>=4,D47>=3,Y46>=1,Y46+1=W46,C47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V=0,V1=2] 
* CE 376: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):4
     [V12>=C47+1,C47>=V+2,V46>=Y46+2,V12>=Y46+2,V>=1,Y46>=1,Y46+1=W46,D47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 377: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):5
     [C47+2>=D47,V12>=C47+1,C47>=V+2,V46>=Y46+2,V12>=Y46+2,D47>=3,V>=1,Y46>=1,Y46+1=W46,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 378: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):6
     [V46>=Y46+2,V12>=Y46+2,V>=0,Y46>=1,Y46+1=W46,D47=0,C47=0,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 379: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):8
     [V46+C47>=D47,2*C47>=D47,V12>=C47+1,C47>=V+2,V46>=Y46+2,V12>=Y46+2,D47>=4,V>=1,Y46>=1,Y46+1=W46,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 380: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,Z46,V46,V46,A47):4+ via(V,B47,C47,V46,D47):9
     [V12>=C47+1,V46>=Y46+2,V12>=Y46+2,C47>=2,V>=0,Y46>=1,Y46+1=W46,B47=0,A47=0,Z46=0,X46=1,V7=0,V1=2] 
* CE 381: start(V1,V,V7,V12,V46) = 1+ member(W46,V46,X46):5+ via(Y46,V7,V46,V46,Z46):9
     [V7+Y46>=1,V12>=A47+1,V12>=Y46+2,A47>=0,V46>=2,V7>=0,Y46>=0,V>=0,V7+Y46+1=W46,Z46=0,X46=1,V1=2] 
* CE 382: start(V1,V,V7,V12,V46) = 0+ member(V,W46,X46):1
     [V7>=W46+1,W46>=0,V>=0,X46=0,V1=1] 
* CE 383: start(V1,V,V7,V12,V46) = 0+ member(W46,X46,Y46):2
     [V7>=X46+1,X46>=3,Y46=1,W46=1,V=1,V1=1] 
* CE 384: start(V1,V,V7,V12,V46) = 0+ member(W46,X46,Y46):3
     [V7>=X46+1,X46>=2,Y46=2,W46=1,V=1,V1=1] 
* CE 385: start(V1,V,V7,V12,V46) = 0+ member(V,W46,X46):4
     [V>=0,V7>=1,X46=1,W46=0,V1=1] 
* CE 386: start(V1,V,V7,V12,V46) = 0+ member(V,W46,X46):5
     [V7>=W46+1,W46>=2,V>=2,X46=1,V1=1] 
* CE 387: start(V1,V,V7,V12,V46) = 0+ member(V,W46,X46):6
     [V7>=W46+1,W46>=V+1,V>=2,X46=2,V1=1] 
* CE 388: start(V1,V,V7,V12,V46) = 0
     [V7>=0,V>=0,V1>=0] 
* CE 389: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):1
     [W46>=V+1,V7>=0,V>=0,W46=V1+V+1,X46=0] 
* CE 390: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):2
     [V7>=3,X46=1,W46=1,V=0,V1=0] 
* CE 391: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):3
     [V7>=2,X46=2,W46=1,V=0,V1=0] 
* CE 392: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4
     [W46>=V+1,V>=0,W46=V1+V+1,Y46=1,X46=0,V7=0] 
* CE 393: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5
     [W46>=V+1,V7>=2,W46>=2,V>=0,W46=V1+V+1,X46=1] 
* CE 394: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):6
     [V7>=W46+1,W46>=V+1,W46>=2,V>=0,W46=V1+V+1,X46=2] 
* CE 395: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):1
     [V7+2>=A47,A47>=3,V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 396: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):2
     [V7>=3,A47=0,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 397: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):3
     [2*V7>=A47,A47>=4,V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 398: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):9
     [V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 399: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V1,V,Z46,A47,B47):2
     [V>=0,V1>=0,V1+V+1=W46,B47=0,A47=0,Z46=0,Y46=1,X46=0,V7=0] 
* CE 400: start(V1,V,V7,V12,V46) = 1+ member(W46,X46,Y46):4+ via(V1,V,Z46,A47,B47):6
     [V>=0,V1>=0,V1+V+1=W46,B47=0,A47=0,Z46=0,Y46=1,X46=0,V7=0] 
* CE 401: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):2
     [V1+V>=1,V7>=2,V>=0,V1>=0,V1+V+1=W46,Y46=0,X46=1] 
* CE 402: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(Y46,V,V7,V7,Z46):3
     [2*V7>=Z46,Z46>=V+3,V7>=V+2,V>=1,V+1=W46,Y46=0,X46=1,V1=0] 
* CE 403: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(V1,Y46,V7,V7,Z46):4
     [V7>=V1+2,V1>=1,V1+1=W46,Z46=0,Y46=0,X46=1,V=0] 
* CE 404: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(V1,Y46,V7,V7,Z46):5
     [V7+2>=Z46,V7>=V1+2,Z46>=3,V1>=1,V1+1=W46,Y46=0,X46=1,V=0] 
* CE 405: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):8
     [2*V7>=Y46,Y46>=V+3,V7>=V+2,V7>=V1+2,Y46>=4,V>=0,V1>=1,V1+V+1=W46,X46=1] 
* CE 406: start(V1,V,V7,V12,V46) = 1+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):9
     [V1+V>=1,V7>=2,V>=0,V1>=0,V1+V+1=W46,X46=1] 
* CE 407: start(V1,V,V7,V12,V46) = 0+ via(W46,X46,V12,V12,Y46):1
     [V12+2>=Y46,Y46>=3,V12>=2,X46=0,W46=0,V7=0,V=0,V1=1] 
* CE 408: start(V1,V,V7,V12,V46) = 0+ via(V,V7,V12,V12,W46):2
     [V12>=0,V7>=0,V>=0,W46=0,V1=1] 
* CE 409: start(V1,V,V7,V12,V46) = 0+ via(W46,V7,V12,V12,X46):3
     [2*V12>=X46,X46>=V7+3,V12>=V7+2,X46>=4,V12>=3,V7>=0,W46=0,V=0,V1=1] 
* CE 410: start(V1,V,V7,V12,V46) = 0+ via(V,W46,V12,V12,X46):4
     [V12>=V+2,V>=1,X46=0,W46=0,V7=0,V1=1] 
* CE 411: start(V1,V,V7,V12,V46) = 0+ via(V,W46,V12,V12,X46):5
     [V12+2>=X46,V12>=V+2,X46>=3,V>=1,W46=0,V7=0,V1=1] 
* CE 412: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,X46,Y46):6
     [V7>=0,V>=0,Y46=0,X46=0,W46=0,V12=0,V1=1] 
* CE 413: start(V1,V,V7,V12,V46) = 0+ via(V,V7,V12,V12,W46):8
     [2*V12>=W46,W46>=V7+3,V12>=V7+2,V12>=V+2,W46>=4,V7>=0,V>=1,V1=1] 
* CE 414: start(V1,V,V7,V12,V46) = 0+ via(V,V7,V12,V12,W46):9
     [V12>=2,V7>=0,V>=0,V1=1] 
* CE 415: start(V1,V,V7,V12,V46) = 0+ via(W46,X46,Y46,V46,Z46):1
     [Y46+2>=Z46,V12>=Y46+1,Z46>=3,V46>=2,Y46>=2,X46=0,W46=0,V7=0,V=0,V1=1] 
* CE 416: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,V46,X46):2
     [V12>=W46+1,V46>=0,W46>=0,V7>=0,V>=0,X46=0,V1=1] 
* CE 417: start(V1,V,V7,V12,V46) = 0+ via(W46,V7,X46,V46,Y46):3
     [V46+X46>=Y46,V7+2*X46>=Y46,V7+X46>=3,V12>=X46+1,Y46>=V7+3,V46>=V7+2,Y46>=4,V46>=3,X46>=2,V7>=0,W46=0,V=0,V1=1] 
* CE 418: start(V1,V,V7,V12,V46) = 0+ via(V,W46,X46,V46,Y46):4
     [V12>=X46+1,X46>=V+2,V46>=2,V>=1,Y46=0,W46=0,V7=0,V1=1] 
* CE 419: start(V1,V,V7,V12,V46) = 0+ via(V,W46,X46,V46,Y46):5
     [X46+2>=Y46,V12>=X46+1,X46>=V+2,Y46>=3,V46>=2,V>=1,W46=0,V7=0,V1=1] 
* CE 420: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,V46,X46):6
     [V46>=0,V7>=0,V>=0,V12>=1,X46=0,W46=0,V1=1] 
* CE 421: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,X46,Y46):7
     [V12>=W46+1,W46>=V+2,V7>=0,V>=1,Y46=0,X46=0,V46=0,V1=1] 
* CE 422: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,V46,X46):8
     [V46+W46>=X46,V7+2*W46>=X46,V12>=W46+1,X46>=V7+3,V46>=V7+2,W46>=V+2,X46>=4,V46>=3,V7>=0,V>=1,V1=1] 
* CE 423: start(V1,V,V7,V12,V46) = 0+ via(V,V7,W46,V46,X46):9
     [V12>=W46+1,V46>=0,W46>=2,V7>=0,V>=0,V1=1] 
* CE 424: start(V1,V,V7,V12,V46) = 0+ getNodeFromEdge(W46,V,X46):1
     [V>=X46+1,X46>=0,W46=0,V1=0] 
* CE 425: start(V1,V,V7,V12,V46) = 0+ getNodeFromEdge(W46,V,X46):2
     [V>=X46+1,X46>=0,W46=1,V1=1] 
* CE 426: start(V1,V,V7,V12,V46) = 0+ getNodeFromEdge(V1,V,W46):3
     [V>=0,V1>=0,W46=0] 
* CE 427: start(V1,V,V7,V12,V46) = 0+ getNodeFromEdge(V1,V,W46):4
     [V>=W46+1,W46>=0,V1>=2] 
* CE 428: start(V1,V,V7,V12,V46) = 0+ via(W46,X46,V7,V12,Y46):1
     [V7+2>=Y46,Y46>=3,V12>=2,V7>=2,X46=0,W46=0,V=0,V1=0] 
* CE 429: start(V1,V,V7,V12,V46) = 0+ via(V1,V,V7,V12,W46):2
     [V12>=0,V7>=0,V>=0,V1>=0,W46=0] 
* CE 430: start(V1,V,V7,V12,V46) = 0+ via(W46,V,V7,V12,X46):3
     [V7+V12>=X46,V+2*V7>=X46,V+V7>=3,X46>=V+3,V12>=V+2,X46>=4,V12>=3,V7>=2,V>=0,W46=0,V1=0] 
* CE 431: start(V1,V,V7,V12,V46) = 0+ via(V1,W46,V7,V12,X46):4
     [V7>=V1+2,V12>=2,V1>=1,X46=0,W46=0,V=0] 
* CE 432: start(V1,V,V7,V12,V46) = 0+ via(V1,W46,V7,V12,X46):5
     [V7+2>=X46,V7>=V1+2,X46>=3,V12>=2,V1>=1,W46=0,V=0] 
* CE 433: start(V1,V,V7,V12,V46) = 0+ via(V1,V,W46,V12,X46):6
     [V12>=0,V>=0,V1>=0,X46=0,W46=0,V7=0] 
* CE 434: start(V1,V,V7,V12,V46) = 0+ via(V1,V,V7,W46,X46):7
     [V7>=V1+2,V>=0,V1>=1,X46=0,W46=0,V12=0] 
* CE 435: start(V1,V,V7,V12,V46) = 0+ via(V1,V,V7,V12,W46):8
     [V7+V12>=W46,V+2*V7>=W46,W46>=V+3,V12>=V+2,V7>=V1+2,W46>=4,V12>=3,V>=0,V1>=1] 
* CE 436: start(V1,V,V7,V12,V46) = 0+ via(V1,V,V7,V12,W46):9
     [V12>=0,V7>=2,V>=0,V1>=0] 
* CE 437: start(V1,V,V7,V12,V46) = 0+ member(V1,V,W46):1
     [V>=0,V1>=0,W46=0] 
* CE 438: start(V1,V,V7,V12,V46) = 0+ member(W46,V,X46):2
     [V>=3,X46=1,W46=1,V1=1] 
* CE 439: start(V1,V,V7,V12,V46) = 0+ member(W46,V,X46):3
     [V>=2,X46=2,W46=1,V1=1] 
* CE 440: start(V1,V,V7,V12,V46) = 0+ member(V1,W46,X46):4
     [V1>=0,X46=1,W46=0,V=0] 
* CE 441: start(V1,V,V7,V12,V46) = 0+ member(V1,V,W46):5
     [V>=2,V1>=2,W46=1] 
* CE 442: start(V1,V,V7,V12,V46) = 0+ member(V1,V,W46):6
     [V>=V1+1,V1>=2,W46=2] 
* CE 443: start(V1,V,V7,V12,V46) = 0+ eqEdge(W46,X46,Y46):1
     [Y46=2,X46=1,W46=1,V=1,V1=1] 
* CE 444: start(V1,V,V7,V12,V46) = 0+ eqEdge(V1,V,W46):2
     [V>=0,V1>=0,W46=0] 
* CE 445: start(V1,V,V7,V12,V46) = 0+ eqEdge(W46,V,X46):3
     [V>=2,X46=1,W46=1,V1=1] 
* CE 446: start(V1,V,V7,V12,V46) = 0+ eqEdge(V1,W46,X46):4
     [V1>=2,X46=0,W46=1,V=1] 
* CE 447: start(V1,V,V7,V12,V46) = 0+ eqEdge(V1,W46,X46):5
     [V1>=2,X46=1,W46=1,V=1] 
* CE 448: start(A,A,B,C,D) = 0+ eqEdge(A,A,E):6
     [A>=2,E=0] 
* CE 449: start(V1,V,V7,V12,V46) = 0+ eqEdge(V1,V,W46):7
     [V>=2,V1>=2,W46=1] 
* CE 450: start(A,A,B,C,D) = 0+ eqEdge(A,A,E):8
     [A>=2,E=2] 
* CE 451: start(V1,V,V7,V12,V46) = 0+ notEmpty(W46,X46):1
     [X46=1,W46=0,V1=0] 
* CE 452: start(V1,V,V7,V12,V46) = 0+ notEmpty(V1,W46):2
     [V1>=0,W46=0] 
* CE 453: start(V1,V,V7,V12,V46) = 0+ notEmpty(V1,W46):3
     [V1>=1,W46=2] 
* CE 454: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):1
     [W46>=V+1,V7>=0,V>=0,W46=V1+V+1,X46=0] 
* CE 455: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):2
     [V7>=3,X46=1,W46=1,V=0,V1=0] 
* CE 456: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):3
     [V7>=2,X46=2,W46=1,V=0,V1=0] 
* CE 457: start(V1,V,V7,V12,V46) = 2+ member(W46,X46,Y46):4
     [W46>=V+1,V>=0,W46=V1+V+1,Y46=1,X46=0,V7=0] 
* CE 458: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5
     [W46>=V+1,V7>=2,W46>=2,V>=0,W46=V1+V+1,X46=1] 
* CE 459: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):6
     [V7>=W46+1,W46>=V+1,W46>=2,V>=0,W46=V1+V+1,X46=2] 
* CE 460: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):1
     [V7+2>=A47,A47>=3,V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 461: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):2
     [V7>=3,A47=0,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 462: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):3
     [2*V7>=A47,A47>=4,V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 463: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):2+ via(Y46,Z46,V7,V7,A47):9
     [V7>=3,Z46=0,Y46=0,X46=1,W46=1,V=0,V1=0] 
* CE 464: start(V1,V,V7,V12,V46) = 2+ member(W46,X46,Y46):4+ via(V1,V,Z46,A47,B47):2
     [V>=0,V1>=0,V1+V+1=W46,B47=0,A47=0,Z46=0,Y46=1,X46=0,V7=0] 
* CE 465: start(V1,V,V7,V12,V46) = 2+ member(W46,X46,Y46):4+ via(V1,V,Z46,A47,B47):6
     [V>=0,V1>=0,V1+V+1=W46,B47=0,A47=0,Z46=0,Y46=1,X46=0,V7=0] 
* CE 466: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):2
     [V1+V>=1,V7>=2,V>=0,V1>=0,V1+V+1=W46,Y46=0,X46=1] 
* CE 467: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(Y46,V,V7,V7,Z46):3
     [2*V7>=Z46,Z46>=V+3,V7>=V+2,V>=1,V+1=W46,Y46=0,X46=1,V1=0] 
* CE 468: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(V1,Y46,V7,V7,Z46):4
     [V7>=V1+2,V1>=1,V1+1=W46,Z46=0,Y46=0,X46=1,V=0] 
* CE 469: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(V1,Y46,V7,V7,Z46):5
     [V7+2>=Z46,V7>=V1+2,Z46>=3,V1>=1,V1+1=W46,Y46=0,X46=1,V=0] 
* CE 470: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):8
     [2*V7>=Y46,Y46>=V+3,V7>=V+2,V7>=V1+2,Y46>=4,V>=0,V1>=1,V1+V+1=W46,X46=1] 
* CE 471: start(V1,V,V7,V12,V46) = 2+ member(W46,V7,X46):5+ via(V1,V,V7,V7,Y46):9
     [V1+V>=1,V7>=2,V>=0,V1>=0,V1+V+1=W46,X46=1] 
* CE 472: start(V1,V,V7,V12,V46) = 0+ fun1(W46,X46,Y46):1
     [Y46=2,X46=0,W46=0,V=0,V1=0] 
* CE 473: start(V1,V,V7,V12,V46) = 0+ fun1(W46,V,X46):2
     [V>=1,X46=1,W46=0,V1=0] 
* CE 474: start(V1,V,V7,V12,V46) = 0+ fun1(V1,W46,X46):3
     [V1>=1,X46=1,W46=0,V=0] 
* CE 475: start(V1,V,V7,V12,V46) = 0+ fun1(V1,V,W46):4
     [V>=0,V1>=0,W46=0] 
* CE 476: start(V1,V,V7,V12,V46) = 0+ fun1(V1,V,W46):5
     [V>=V1+1,V1>=1,W46=1] 
* CE 477: start(V1,V,V7,V12,V46) = 0+ fun1(V1,V,W46):6
     [V1>=V+1,V>=1,W46=1] 
* CE 478: start(A,A,B,C,D) = 0+ fun1(A,A,E):7
     [A>=1,E=2] 
* CE 479: start(V1,V,V7,V12,V46) = 0+ and(W46,X46,Y46):1
     [Y46=1,X46=1,W46=1,V=1,V1=1] 
* CE 480: start(V1,V,V7,V12,V46) = 0+ and(W46,X46,Y46):2
     [Y46=1,X46=2,W46=1,V=2,V1=1] 
* CE 481: start(V1,V,V7,V12,V46) = 0+ and(W46,X46,Y46):3
     [Y46=1,X46=1,W46=2,V=1,V1=2] 
* CE 482: start(V1,V,V7,V12,V46) = 0+ and(W46,X46,Y46):4
     [Y46=2,X46=2,W46=2,V=2,V1=2] 
* CE 483: start(V1,V,V7,V12,V46) = 0+ and(V1,V,W46):5
     [V>=0,V1>=0,W46=0] 
* CE 484: start(V1,V,V7,V12,V46) = 0+ fun3(W46,V,V7,V12,V46,X46):1
     [V46>=0,V12>=0,V7>=0,V>=0,X46=1,W46=1,V1=1] 
* CE 485: start(V1,V,V7,V12,V46) = 0+ fun3(W46,V,V7,V12,V46,X46):2
     [V46>=0,V12>=0,V7>=0,V>=0,X46=2,W46=2,V1=2] 
* CE 486: start(V1,V,V7,V12,V46) = 0+ fun3(V1,V,V7,V12,V46,W46):3
     [V46>=0,V12>=0,V7>=0,V>=0,V1>=0,W46=0] 

### Cost equations --> "Loop" of start/5 
* CEs [282,434] --> Loop 103 
* CEs [277,279,280,281,283] --> Loop 104 
* CEs [288,295,296,309,328,329,330,357,358,359,361,362,363] --> Loop 105 
* CEs [448,450,478,482] --> Loop 106 
* CEs [446,447,481] --> Loop 107 
* CEs [305,334,342,367] --> Loop 108 
* CEs [285,286,287,289,290,291,292,293,297,298,299,300,301,303,304,306,307,308,310,312,313,314,315,316,317,318,320,321,322,323,324,325,326,332,333,335,336,337,338,340,341,343,344,345,346,348,349,350,351,352,353,354,365,366,368,369,370,371,373,374,375,376,377,378,379,485] --> Loop 109 
* CEs [382,385] --> Loop 110 
* CEs [421] --> Loop 111 
* CEs [412] --> Loop 112 
* CEs [392,399,400,410,411,418,419,433,457,464,465] --> Loop 113 
* CEs [480] --> Loop 114 
* CEs [383,384,386,387,425,438,439,443,445,479] --> Loop 115 
* CEs [409] --> Loop 116 
* CEs [403,404,417,431,432,440,468,469,474] --> Loop 117 
* CEs [407,408,413,415,416,420,422,484] --> Loop 118 
* CEs [276,278,388,389,390,391,393,394,395,396,397,401,402,405,424,426,427,428,429,430,435,437,441,442,444,449,451,452,453,454,455,456,458,459,460,461,462,466,467,470,472,473,475,476,477,483,486] --> Loop 119 
* CEs [406,471] --> Loop 120 
* CEs [284,436] --> Loop 121 
* CEs [311,331,360,364] --> Loop 122 
* CEs [302,327,339,347,372,381] --> Loop 123 
* CEs [294,319,355,356,380] --> Loop 124 
* CEs [414,423] --> Loop 125 
* CEs [398,463] --> Loop 126 

#### Loops of start/5 
* Loop 103: start(V1,V,V7,V12,V46) [V7>=V1+2,V>=0,V1>=1,V12=0] 
* Loop 104: start(V1,V,V7,V12,V46) [V12>=0,V7>=1,V>=0,V1>=0,V46=0] 
* Loop 105: start(V1,V,V7,V12,V46) [V12>=2,V7>=0,V>=0,V46=0,V1=2] 
* Loop 106: start(A,A,B,C,D) [A>=1] 
* Loop 107: start(V1,V,V7,V12,V46) [V1>=2,V=1] 
* Loop 108: start(V1,V,V7,V12,V46) [V7+V12>=4,V46>=V7+2,V46>=3,V12>=3,V7>=0,V=0,V1=2] 
* Loop 109: start(V1,V,V7,V12,V46) [V46>=0,V12>=0,V7>=0,V>=0,V1=2] 
* Loop 110: start(V1,V,V7,V12,V46) [V7>=1,V>=0,V1=1] 
* Loop 111: start(V1,V,V7,V12,V46) [V12>=V+3,V7>=0,V>=1,V46=0,V1=1] 
* Loop 112: start(V1,V,V7,V12,V46) [V7>=0,V>=0,V12=0,V1=1] 
* Loop 113: start(V1,V,V7,V12,V46) [V>=0,V1>=0,V7=0] 
* Loop 114: start(V1,V,V7,V12,V46) [V=2,V1=1] 
* Loop 115: start(V1,V,V7,V12,V46) [V>=1,V1=1] 
* Loop 116: start(V1,V,V7,V12,V46) [V12>=V7+2,V12>=3,V7>=0,V=0,V1=1] 
* Loop 117: start(V1,V,V7,V12,V46) [V1>=0,V=0] 
* Loop 118: start(V1,V,V7,V12,V46) [V12>=0,V7>=0,V>=0,V1=1] 
* Loop 119: start(V1,V,V7,V12,V46) [V1>=0] 
* Loop 120: start(V1,V,V7,V12,V46) [V1+V>=1,V7>=2,V>=0,V1>=0] 
* Loop 121: start(V1,V,V7,V12,V46) [V12>=0,V7>=2,V>=0,V1>=0] 
* Loop 122: start(V1,V,V7,V12,V46) [V46>=0,V12>=3,V7>=0,V>=0,V1=2] 
* Loop 123: start(V1,V,V7,V12,V46) [V7+V12>=3,V46>=2,V12>=2,V7>=0,V>=0,V1=2] 
* Loop 124: start(V1,V,V7,V12,V46) [V46>=3,V12>=2,V>=0,V7=0,V1=2] 
* Loop 125: start(V1,V,V7,V12,V46) [V12>=2,V7>=0,V>=0,V1=1] 
* Loop 126: start(V1,V,V7,V12,V46) [V7>=3,V=0,V1=0] 

### Ranking functions of CR start(V1,V,V7,V12,V46) 

#### Partial ranking functions of CR start(V1,V,V7,V12,V46) 


### Resulting Chains:start(V1,V,V7,V12,V46) 
* [126]...
* [125]...
* [124]...
* [123]...
* [122]...
* [121]...
* [120]...
* [119]
* [118]
* [117]
* [116]
* [115]
* [114]
* [113]
* [112]
* [111]
* [110]
* [109]
* [108]
* [107]
* [106]
* [105]
* [104]
* [103]


### Merging Chains  start/5 into  External patterns of execution 
* [[116],[118],[119]] --> 1 
* [[114],[115]] --> 2 
* [[112]] --> 3 
* [[111]] --> 4 
* [[110]] --> 5 
* [[108],[109]] --> 6 
* [[105]] --> 7 
* [[117]] --> 8 
* [[107]] --> 9 
* [[113]] --> 10 
* [[103]] --> 11 
* [[104]] --> 12 
* [[106]] --> 13 
* [[126]] --> 14 
* [[125]] --> 15 
* [[124]] --> 16 
* [[123]] --> 17 
* [[122]] --> 18 
* [[121]] --> 19 
* [[120]] --> 20 


Computing Bounds
=====================================

#### Cost of chains of and(V1,V,Out):
* Chain [41]: 0
  with precondition: [V1=1,V=1,Out=1] 

* Chain [40]: 0
  with precondition: [V1=1,V=2,Out=1] 

* Chain [39]: 0
  with precondition: [V1=2,V=1,Out=1] 

* Chain [38]: 0
  with precondition: [V1=2,V=2,Out=2] 

* Chain [37]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [42] 

 * loop 42:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [42]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [42]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [42]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of phase [42]:fun1(V1,V,Out) -> [fun1(V1',V',Out')] 
0
#### Cost of chains of fun1(V1,V,Out):
* Chain [[42],46]: 0
  with precondition: [Out=2,V1=V,V1>=1] 

* Chain [[42],45]: 0
  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[42],44]: 0
  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[42],43]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [46]: 0
  with precondition: [V1=0,V=0,Out=2] 

* Chain [45]: 0
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [44]: 0
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [43]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun3(V1,V,V7,V12,V46,Out):
* Chain [49]: 0
  with precondition: [V1=1,Out=1,V>=0,V7>=0,V12>=0,V46>=0] 

* Chain [48]: 0
  with precondition: [V1=2,Out=2,V>=0,V7>=0,V12>=0,V46>=0] 

* Chain [47]: 0
  with precondition: [Out=0,V1>=0,V>=0,V7>=0,V12>=0,V46>=0] 


#### Cost of chains of eqEdge(V1,V,Out):
* Chain [58]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [57]: 1
  with precondition: [V1=1,V=1,Out=2] 

* Chain [56]: 1
  with precondition: [V1=1,Out=0,V>=2] 

* Chain [55]: 1
  with precondition: [V1=1,Out=1,V>=2] 

* Chain [54]: 1
  with precondition: [V=1,Out=0,V1>=2] 

* Chain [53]: 1
  with precondition: [V=1,Out=1,V1>=2] 

* Chain [52]: 1
  with precondition: [Out=0,V1=V,V1>=2] 

* Chain [51]: 1
  with precondition: [Out=1,V1>=2,V>=2] 

* Chain [50]: 1
  with precondition: [Out=2,V1=V,V1>=2] 


#### Cost of loops [60] 

 * loop 60:member(V1,V,Out) -> [member(V1',V',Out')] 
2
#### Cost of phase [60]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(60)+0
  Such that:it(60) =< V
it(60) =< V-V'

#### Cost of phase [60]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(60)+0
  Such that:it(60) =< V
it(60) =< V-V'

#### Cost of phase [60]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(60)+0
  Such that:it(60) =< V
it(60) =< V-V'

#### Cost of loops [59] 

 * loop 59:member(V1,V,Out) -> [member(V1',V',Out')] 
2
#### Cost of phase [59]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(59)+0
  Such that:it(59) =< V
it(59) =< V-V'

#### Cost of phase [59]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(59)+0
  Such that:it(59) =< V
it(59) =< V-V'

#### Cost of phase [59]:member(V1,V,Out) -> [member(V1',V',Out')] 
2*it(59)+0
  Such that:it(59) =< V
it(59) =< V-V'

#### Cost of chains of member(V1,V,Out):
* Chain [[60],64]: 2*it(60)+2
  Such that:it(60) =< V

  with precondition: [V1=1,Out=0,V>=3] 

* Chain [[60],63]: 2*it(60)+2
  Such that:it(60) =< V

  with precondition: [V1=1,Out=2,V>=3] 

* Chain [[60],62]: 2*it(60)+1
  Such that:it(60) =< V

  with precondition: [V1=1,Out=1,V>=3] 

* Chain [[59],64]: 2*it(59)+2
  Such that:it(59) =< V

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[59],62]: 2*it(59)+1
  Such that:it(59) =< V

  with precondition: [Out=1,V1>=2,V>=2] 

* Chain [[59],61]: 2*it(59)+2
  Such that:it(59) =< -V1+V

  with precondition: [Out=2,V1>=2,V>=V1+2] 

* Chain [64]: 2
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [63]: 2
  with precondition: [V1=1,Out=2,V>=2] 

* Chain [62]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [61]: 2
  with precondition: [Out=2,V1>=2,V>=V1+1] 


#### Cost of loops [65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86] 

 * loop 65:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
2*s(22)+3
  Such that:s(22) =< V12'2

 * loop 66:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
3
 * loop 67:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
2*s(24)+3
  Such that:s(24) =< V12'2

 * loop 68:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
2*s(26)+3
  Such that:s(26) =< V12'2

 * loop 69:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
3
 * loop 70:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out'),via(V1'2,V'2,V7'2,V12'2,Out'2)] 
2*s(28)+3
  Such that:s(28) =< V12'2

 * loop 71:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(30)+3
  Such that:s(30) =< V12'

 * loop 72:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(32)+3
  Such that:s(32) =< V12'

 * loop 73:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
3
 * loop 76:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
10*s(41)+2*s(39)+4
  Such that:s(39) =< -V+V12'
s(40) =< V12'
s(41) =< s(40)

 * loop 77:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(43)+3
  Such that:s(43) =< V12'

 * loop 78:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(45)+3
  Such that:s(45) =< V12'

 * loop 79:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(47)+3
  Such that:s(47) =< V12'

 * loop 80:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(49)+3
  Such that:s(49) =< V12'

 * loop 82:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
3
 * loop 84:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
10*s(58)+2*s(56)+4
  Such that:s(56) =< -V+V12'
s(57) =< V12'
s(58) =< s(57)

 * loop 85:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(60)+3
  Such that:s(60) =< V12'

 * loop 86:via(V1,V,V7,V12,Out) -> [via(V1',V',V7',V12',Out')] 
2*s(62)+3
  Such that:s(62) =< V12'

#### Cost of phase [65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86]:via(V1,V,V7,V12,Out) -> [] 
129*it(65)+2*s(63)+14*s(65)+10*s(69)+10*s(76)+20*s(81)+4*s(85)+0
#### Cost of chains of via(V1,V,V7,V12,Out):
* Chain [multiple([65,66,67,68,69,70,71,72,73,76,77,78,79,80,82,84,85,86],[[],[95],[94],[93],[92],[91],[90],[89],[88],[87],[83,95],[83,89],[75,95],[75,89]])]...: 129*it(65)+2*s(63)+14*s(65)+10*s(69)+10*s(76)+20*s(81)+4*s(85)+0
  with precondition: [V1>=0,V7>=2,V12>=0,V>=0] 

* Chain [95]: 20*s(6)+4
  Such that:aux(2) =< V12
s(6) =< aux(2)

  with precondition: [Out=0,V1>=0,V>=0,V7>=0,V12>=0] 

* Chain [94]: 2*s(15)+4
  Such that:s(15) =< V12

  with precondition: [V1=0,V=0,V7>=2,V12>=2,Out>=3,V7+2>=Out] 

* Chain [93]: 3
  with precondition: [V1=0,V12=0,Out=0,V>=0,V7>=2] 

* Chain [92]: 2*s(16)+4
  Such that:s(16) =< V12

  with precondition: [V1=0,V>=0,V7>=2,V12>=3,Out>=4,V12>=V+2,Out>=V+3,V+V7>=3,V+2*V7>=Out,V7+V12>=Out] 

* Chain [91]: 4*s(17)+4
  Such that:aux(3) =< V12
s(17) =< aux(3)

  with precondition: [V=0,Out=0,V1>=1,V12>=2,V7>=V1+2] 

* Chain [90]: 2*s(19)+4
  Such that:s(19) =< V12

  with precondition: [V=0,V1>=1,V12>=2,Out>=3,V7>=V1+2,V7+2>=Out] 

* Chain [89]: 1
  with precondition: [V7=0,Out=0,V1>=0,V>=0,V12>=0] 

* Chain [88]: 3
  with precondition: [V12=0,Out=0,V1>=1,V>=0,V7>=V1+2] 

* Chain [87]: 2*s(20)+4
  Such that:s(20) =< V12

  with precondition: [V1>=1,V>=0,V12>=3,Out>=4,V7>=V1+2,V12>=V+2,Out>=V+3,V+2*V7>=Out,V7+V12>=Out] 

* Chain [83,95]: 7
  with precondition: [V1=0,V12=0,Out=0,V>=0,V7>=2] 

* Chain [83,89]: 4
  with precondition: [V1=0,V12=0,Out=0,V>=0,V7>=2] 

* Chain [75,95]: 7
  with precondition: [V12=0,Out=0,V1>=1,V>=0,V7>=V1+2] 

* Chain [75,89]: 4
  with precondition: [V12=0,Out=0,V1>=1,V>=0,V7>=V1+2] 


#### Cost of chains of getNodeFromEdge(V1,V,Out):
* Chain [99]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [98]: 1
  with precondition: [V1=1,Out>=0,V>=Out+1] 

* Chain [97]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [96]: 1
  with precondition: [V1>=2,Out>=0,V>=Out+1] 


#### Cost of chains of notEmpty(V1,Out):
* Chain [102]: 1
  with precondition: [V1=0,Out=1] 

* Chain [101]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [100]: 1
  with precondition: [Out=2,V1>=1] 


#### Cost of chains of start(V1,V,V7,V12,V46):
* Chain [126]...: 4*s(91)+378*s(92)+3
  Such that:aux(275) =< V7
s(91) =< aux(275)

  with precondition: [V1=0,V=0,V7>=3] 

* Chain [125]...: 1*aux(276)+0
  with precondition: [V1=1,V>=0,V7>=0,V12>=2] 

* Chain [124]...: 34*s(121)+945*s(122)+9
  Such that:aux(279) =< V46
s(121) =< aux(279)

  with precondition: [V1=2,V7=0,V>=0,V12>=2,V46>=3] 

* Chain [123]...: 30*s(165)+1134*s(166)+2*s(189)+9
  Such that:s(189) =< -V7+V46
aux(281) =< V46
s(165) =< aux(281)

  with precondition: [V1=2,V>=0,V7>=0,V12>=2,V46>=2,V7+V12>=3] 

* Chain [122]...: 4*s(216)+756*s(217)+9
  Such that:s(215) =< V46
s(216) =< s(215)

  with precondition: [V1=2,V>=0,V7>=0,V12>=3,V46>=0] 

* Chain [121]...: 1*aux(282)+0
  with precondition: [V1>=0,V>=0,V7>=2,V12>=0] 

* Chain [120]...: 4*s(261)+378*s(262)+3
  Such that:aux(283) =< V7
s(261) =< aux(283)

  with precondition: [V1>=0,V>=0,V7>=2,V+V1>=1] 

* Chain [119]: 30*s(277)+140*s(280)+4*s(284)+6*s(305)+2*s(307)+10
  Such that:s(307) =< -V1+V
aux(296) =< -V1-V+V7
aux(297) =< V
aux(298) =< V7
aux(299) =< V12
s(284) =< aux(296)
s(305) =< aux(297)
s(280) =< aux(298)
s(277) =< aux(299)

  with precondition: [V1>=0] 

* Chain [118]: 24*s(328)+24*s(332)+7
  Such that:aux(300) =< V12
aux(301) =< V46
s(328) =< aux(300)
s(332) =< aux(301)

  with precondition: [V1=1,V>=0,V7>=0,V12>=0] 

* Chain [117]: 20*s(336)+2*s(341)+6*s(343)+7
  Such that:s(341) =< V46
aux(306) =< V7
aux(307) =< V12
s(343) =< aux(307)
s(336) =< aux(306)

  with precondition: [V=0,V1>=0] 

* Chain [116]: 2*s(350)+4
  Such that:s(350) =< V12

  with precondition: [V1=1,V=0,V7>=0,V12>=3,V12>=V7+2] 

* Chain [115]: 6*s(351)+2*s(354)+4*s(355)+2
  Such that:s(354) =< -V+V7
aux(308) =< V
aux(309) =< V7
s(355) =< aux(308)
s(351) =< aux(309)

  with precondition: [V1=1,V>=1] 

* Chain [114]: 0
  with precondition: [V1=1,V=2] 

* Chain [113]: 6*s(360)+6*s(363)+10
  Such that:aux(310) =< V12
aux(311) =< V46
s(360) =< aux(310)
s(363) =< aux(311)

  with precondition: [V7=0,V1>=0,V>=0] 

* Chain [112]: 1
  with precondition: [V1=1,V12=0,V>=0,V7>=0] 

* Chain [111]: 7
  with precondition: [V1=1,V46=0,V>=1,V7>=0,V12>=V+3] 

* Chain [110]: 4*s(368)+2
  Such that:s(367) =< V7
s(368) =< s(367)

  with precondition: [V1=1,V>=0,V7>=1] 

* Chain [109]: 732*s(370)+2*s(467)+16
  Such that:s(467) =< -V7+V46
aux(366) =< V46
s(370) =< aux(366)

  with precondition: [V1=2,V>=0,V7>=0,V12>=0,V46>=0] 

* Chain [108]: 36*s(553)+2*s(557)+13
  Such that:s(557) =< -V7+V46
aux(370) =< V46
s(553) =< aux(370)

  with precondition: [V1=2,V=0,V7>=0,V12>=3,V46>=3,V46>=V7+2,V7+V12>=4] 

* Chain [107]: 1
  with precondition: [V=1,V1>=2] 

* Chain [106]: 1
  with precondition: [V1=V,V1>=1] 

* Chain [105]: 16
  with precondition: [V1=2,V46=0,V>=0,V7>=0,V12>=2] 

* Chain [104]: 28*s(580)+7
  Such that:aux(372) =< V12
s(580) =< aux(372)

  with precondition: [V46=0,V1>=0,V>=0,V7>=1,V12>=0] 

* Chain [103]: 7
  with precondition: [V12=0,V1>=1,V>=0,V7>=V1+2] 


Closed-form bounds of start(V1,V,V7,V12,V46): 
-------------------------------------
* Chain [126]... with precondition: [V1=0,V=0,V7>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [125]... with precondition: [V1=1,V>=0,V7>=0,V12>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [124]... with precondition: [V1=2,V7=0,V>=0,V12>=2,V46>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [123]... with precondition: [V1=2,V>=0,V7>=0,V12>=2,V46>=2,V7+V12>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [122]... with precondition: [V1=2,V>=0,V7>=0,V12>=3,V46>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [121]... with precondition: [V1>=0,V>=0,V7>=2,V12>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [120]... with precondition: [V1>=0,V>=0,V7>=2,V1+V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [119] with precondition: [V1>=0] 
    - Upper bound: nat(V)*6+10+nat(V7)*140+nat(V12)*30+nat(-V1+V)*2+nat(-V1-V+V7)*4 
    - Complexity: n 
* Chain [118] with precondition: [V1=1,V>=0,V7>=0,V12>=0] 
    - Upper bound: 24*V12+7+nat(V46)*24 
    - Complexity: n 
* Chain [117] with precondition: [V=0,V1>=0] 
    - Upper bound: nat(V7)*20+7+nat(V12)*6+nat(V46)*2 
    - Complexity: n 
* Chain [116] with precondition: [V1=1,V=0,V7>=0,V12>=3,V12>=V7+2] 
    - Upper bound: 2*V12+4 
    - Complexity: n 
* Chain [115] with precondition: [V1=1,V>=1] 
    - Upper bound: 4*V+2+nat(V7)*6+nat(-V+V7)*2 
    - Complexity: n 
* Chain [114] with precondition: [V1=1,V=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [113] with precondition: [V7=0,V1>=0,V>=0] 
    - Upper bound: nat(V12)*6+10+nat(V46)*6 
    - Complexity: n 
* Chain [112] with precondition: [V1=1,V12=0,V>=0,V7>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [111] with precondition: [V1=1,V46=0,V>=1,V7>=0,V12>=V+3] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [110] with precondition: [V1=1,V>=0,V7>=1] 
    - Upper bound: 4*V7+2 
    - Complexity: n 
* Chain [109] with precondition: [V1=2,V>=0,V7>=0,V12>=0,V46>=0] 
    - Upper bound: 732*V46+16+nat(-V7+V46)*2 
    - Complexity: n 
* Chain [108] with precondition: [V1=2,V=0,V7>=0,V12>=3,V46>=3,V46>=V7+2,V7+V12>=4] 
    - Upper bound: -2*V7+38*V46+13 
    - Complexity: n 
* Chain [107] with precondition: [V=1,V1>=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [106] with precondition: [V1=V,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [105] with precondition: [V1=2,V46=0,V>=0,V7>=0,V12>=2] 
    - Upper bound: 16 
    - Complexity: constant 
* Chain [104] with precondition: [V46=0,V1>=0,V>=0,V7>=1,V12>=0] 
    - Upper bound: 28*V12+7 
    - Complexity: n 
* Chain [103] with precondition: [V12=0,V1>=1,V>=0,V7>=V1+2] 
    - Upper bound: 7 
    - Complexity: constant 

### Maximum cost of start(V1,V,V7,V12,V46): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 155 ms.
* Invariants computed in 372 ms.
   - Backward Invariants 75 ms.
   - Transitive Invariants 211 ms.
* Refinement performed in 3063 ms.
* Termination proved in 175 ms.
* Upper bounds computed in 3313 ms.
   - Equation cost structures 1158 ms.
   - Phase cost structures 2247 ms.
   - Chain cost structures 60 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 7200 ms.

