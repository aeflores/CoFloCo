
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun3/4]
1. recursive  : [lt/3]
2. non_recursive  : [fun1/4]
3. non_recursive  : [equal0/3]
4. recursive  : [monus/3]
5. recursive  : [fun/4,fun2/4,gcd/3]
6. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun3/4
1. SCC is partially evaluated into lt/3
2. SCC is partially evaluated into fun1/4
3. SCC is partially evaluated into equal0/3
4. SCC is partially evaluated into monus/3
5. SCC is partially evaluated into gcd/3
6. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun3/4 
* CE 31 is refined into CE [32] 
* CE 30 is refined into CE [33] 
* CE 29 is refined into CE [34] 


#### Refined cost equations fun3/4 
* CE 32: fun3(V1,V,V14,Out) = 0
     [V14>=0,V>=0,V1>=0,Out=0] 
* CE 33: fun3(V1,V,V14,Out) = 0
     [V14>=0,V>=0,Out=2,V1=2] 
* CE 34: fun3(V1,V,V14,Out) = 0
     [V14>=0,V>=0,Out=1,V1=1] 

### Cost equations --> "Loop" of fun3/4 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [34] --> Loop 22 

#### Loops of fun3/4 
* Loop 20: fun3(V1,V,V14,Out) [V14>=0,V>=0,V1>=0,Out=0] 
* Loop 21: fun3(V1,V,V14,Out) [V14>=0,V>=0,Out=2,V1=2] 
* Loop 22: fun3(V1,V,V14,Out) [V14>=0,V>=0,Out=1,V1=1] 

### Ranking functions of CR fun3(V1,V,V14,Out) 

#### Partial ranking functions of CR fun3(V1,V,V14,Out) 


### Resulting Chains:fun3(V1,V,V14,Out) 
* [22]
* [21]
* [20]


### Merging Chains  fun3/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 


### Specialization of cost equations lt/3 
* CE 17 is refined into CE [35] 
* CE 16 is refined into CE [36] 
* CE 15 is refined into CE [37] 
* CE 14 is refined into CE [38] 


#### Refined cost equations lt/3 
* CE 35: lt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 36: lt(V1,V,Out) = 0
     [V1>=0,Out=1,V=0] 
* CE 37: lt(V1,V,Out) = 0
     [V>=1,Out=2,V1=0] 
* CE 38: lt(V1,V,Out) = 0+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of lt/3 
* CEs [38] --> Loop 23 
* CEs [35] --> Loop 24 
* CEs [36] --> Loop 25 
* CEs [37] --> Loop 26 

#### Loops of lt/3 
* Loop 23: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 24: lt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 25: lt(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 26: lt(V1,V,Out) [V>=1,Out=2,V1=0] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[23],26]
* [[23],25]
* [[23],24]
* [26]
* [25]
* [24]


### Merging Chains  lt/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24],[24,[23]]] --> 3 
* [[25,[23]]] --> 4 
* [[26,[23]]] --> 5 


### Specialization of cost equations fun1/4 
* CE 28 is refined into CE [39] 
* CE 27 is refined into CE [40,41,42,43,44,45,46,47,48] 
* CE 26 is refined into CE [49] 


#### Refined cost equations fun1/4 
* CE 39: fun1(V1,V,V14,Out) = 0
     [V14>=0,V>=0,V1>=0,Out=0] 
* CE 40: fun1(V1,V,V14,Out) = 0+ lt(W14,V,X14):1+ fun3(Y14,V,Z14,A15):2
     [V>=1,A15=2,Z14=0,Y14=2,X14=2,W14=0,Out=2,V14=0,V1=2] 
* CE 41: fun1(V1,V,V14,Out) = 0+ lt(W14,V,X14):1+ fun3(Y14,V,Z14,A15):3
     [V>=1,A15=0,Z14=0,Y14=2,X14=2,W14=0,Out=0,V14=0,V1=2] 
* CE 42: fun1(V1,V,V14,Out) = 0+ lt(V14,W14,X14):2+ fun3(Y14,Z14,V14,A15):1
     [V14>=0,A15=1,Z14=0,Y14=1,X14=1,W14=0,Out=1,V=0,V1=2] 
* CE 43: fun1(V1,V,V14,Out) = 0+ lt(V14,W14,X14):2+ fun3(Y14,Z14,V14,A15):3
     [V14>=0,A15=0,Z14=0,Y14=1,X14=1,W14=0,Out=0,V=0,V1=2] 
* CE 44: fun1(V1,V,V14,Out) = 0+ lt(V14,V,W14):3+ fun3(X14,V,V14,Y14):3
     [V14>=0,V>=0,Y14=0,X14=0,W14=0,Out=0,V1=2] 
* CE 45: fun1(V1,V,V14,Out) = 0+ lt(V14,V,W14):4+ fun3(X14,V,V14,Y14):1
     [V14>=V,V>=1,Y14=1,X14=1,W14=1,Out=1,V1=2] 
* CE 46: fun1(V1,V,V14,Out) = 0+ lt(V14,V,W14):4+ fun3(X14,V,V14,Y14):3
     [V14>=V,V>=1,Y14=0,X14=1,W14=1,Out=0,V1=2] 
* CE 47: fun1(V1,V,V14,Out) = 0+ lt(V14,V,W14):5+ fun3(X14,V,V14,Y14):2
     [V>=V14+1,V14>=1,Y14=2,X14=2,W14=2,Out=2,V1=2] 
* CE 48: fun1(V1,V,V14,Out) = 0+ lt(V14,V,W14):5+ fun3(X14,V,V14,Y14):3
     [V>=V14+1,V14>=1,Y14=0,X14=2,W14=2,Out=0,V1=2] 
* CE 49: fun1(V1,V,V14,Out) = 0
     [V14>=0,V>=0,Out=1,V1=1] 

### Cost equations --> "Loop" of fun1/4 
* CEs [47] --> Loop 27 
* CEs [45] --> Loop 28 
* CEs [40] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [39,43,44,46,48] --> Loop 32 
* CEs [49] --> Loop 33 

#### Loops of fun1/4 
* Loop 27: fun1(V1,V,V14,Out) [V>=V14+1,V14>=1,Out=2,V1=2] 
* Loop 28: fun1(V1,V,V14,Out) [V14>=V,V>=1,Out=1,V1=2] 
* Loop 29: fun1(V1,V,V14,Out) [V>=1,Out=2,V14=0,V1=2] 
* Loop 30: fun1(V1,V,V14,Out) [V>=1,Out=0,V14=0,V1=2] 
* Loop 31: fun1(V1,V,V14,Out) [V14>=0,Out=1,V=0,V1=2] 
* Loop 32: fun1(V1,V,V14,Out) [V14>=0,V>=0,V1>=0,Out=0] 
* Loop 33: fun1(V1,V,V14,Out) [V14>=0,V>=0,Out=1,V1=1] 

### Ranking functions of CR fun1(V1,V,V14,Out) 

#### Partial ranking functions of CR fun1(V1,V,V14,Out) 


### Resulting Chains:fun1(V1,V,V14,Out) 
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[33]] --> 1 
* [[31]] --> 2 
* [[30],[32]] --> 3 
* [[29]] --> 4 
* [[28]] --> 5 
* [[27]] --> 6 


### Specialization of cost equations equal0/3 
* CE 25 is refined into CE [50,51,52,53,54,55,56,57,58] 


#### Refined cost equations equal0/3 
* CE 50: equal0(V1,V,Out) = 1+ lt(W1,V,X1):1+ fun1(Y1,Z1,V,A2):2
     [V>=1,A2=1,Z1=0,Y1=2,X1=2,W1=0,Out=1,V1=0] 
* CE 51: equal0(V1,V,Out) = 1+ lt(W1,V,X1):1+ fun1(Y1,Z1,V,A2):3
     [V>=1,A2=0,Z1=0,Y1=2,X1=2,W1=0,Out=0,V1=0] 
* CE 52: equal0(V1,V,Out) = 1+ lt(V1,W1,X1):2+ fun1(Y1,V1,Z1,A2):1
     [V1>=0,A2=1,Z1=0,Y1=1,X1=1,W1=0,Out=1,V=0] 
* CE 53: equal0(V1,V,Out) = 1+ lt(V1,W1,X1):2+ fun1(Y1,V1,Z1,A2):3
     [V1>=0,A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0,V=0] 
* CE 54: equal0(V1,V,Out) = 1+ lt(V1,V,W1):3+ fun1(X1,V1,V,Y1):3
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 55: equal0(V1,V,Out) = 1+ lt(V1,V,W1):4+ fun1(X1,V1,V,Y1):1
     [V1>=V,V>=1,Y1=1,X1=1,W1=1,Out=1] 
* CE 56: equal0(V1,V,Out) = 1+ lt(V1,V,W1):4+ fun1(X1,V1,V,Y1):3
     [V1>=V,V>=1,Y1=0,X1=1,W1=1,Out=0] 
* CE 57: equal0(V1,V,Out) = 1+ lt(V1,V,W1):5+ fun1(X1,V1,V,Y1):3
     [V>=V1+1,V1>=1,Y1=0,X1=2,W1=2,Out=0] 
* CE 58: equal0(V1,V,Out) = 1+ lt(V1,V,W1):5+ fun1(X1,V1,V,Y1):5
     [V>=V1+1,V1>=1,Y1=1,X1=2,W1=2,Out=1] 

### Cost equations --> "Loop" of equal0/3 
* CEs [55] --> Loop 34 
* CEs [58] --> Loop 35 
* CEs [52] --> Loop 36 
* CEs [53] --> Loop 37 
* CEs [50] --> Loop 38 
* CEs [51,54,56,57] --> Loop 39 

#### Loops of equal0/3 
* Loop 34: equal0(V1,V,Out) [V1>=V,V>=1,Out=1] 
* Loop 35: equal0(V1,V,Out) [V>=V1+1,V1>=1,Out=1] 
* Loop 36: equal0(V1,V,Out) [V1>=0,Out=1,V=0] 
* Loop 37: equal0(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 38: equal0(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 39: equal0(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR equal0(V1,V,Out) 

#### Partial ranking functions of CR equal0(V1,V,Out) 


### Resulting Chains:equal0(V1,V,Out) 
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  equal0/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37],[39]] --> 2 
* [[36]] --> 3 
* [[35]] --> 4 
* [[34]] --> 5 


### Specialization of cost equations monus/3 
* CE 19 is refined into CE [59] 
* CE 18 is refined into CE [60] 


#### Refined cost equations monus/3 
* CE 59: monus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 60: monus(V1,V,Out) = 1+ monus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of monus/3 
* CEs [60] --> Loop 40 
* CEs [59] --> Loop 41 

#### Loops of monus/3 
* Loop 40: monus(V1,V,Out)->  monus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 41: monus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR monus(V1,V,Out) 
* RF of phase [40]: [V,V1]

#### Partial ranking functions of CR monus(V1,V,Out) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V
    V1


### Resulting Chains:monus(V1,V,Out) 
* [[40],41]
* [41]


### Merging Chains  monus/3 into  External patterns of execution 
* [[41],[41,[40]]] --> 1 


### Specialization of cost equations gcd/3 
* CE 24 is discarded (unfeasible) 
* CE 20 is refined into CE [61,62,63,64,65,66,67,68] 
* CE 23 is refined into CE [69,70,71,72,73] 
* CE 21 is refined into CE [74,75] 
* CE 22 is refined into CE [76,77] 


#### Refined cost equations gcd/3 
* CE 61: gcd(V1,V,Out) = 1+ equal0(W1,V,X1):1+ lt(Y1,V,Z1):1
     [V>=1,Z1=2,Y1=0,X1=1,W1=0,Out=0,V1=0] 
* CE 62: gcd(V1,V,Out) = 1+ equal0(W1,V,X1):1+ lt(Y1,V,Z1):3
     [V>=1,Z1=0,Y1=0,X1=1,W1=0,Out=0,V1=0] 
* CE 63: gcd(V1,V,Out) = 1+ equal0(V1,W1,X1):3+ lt(V1,Y1,Z1):2
     [V1>=0,Z1=1,Y1=0,X1=1,W1=0,Out=0,V=0] 
* CE 64: gcd(V1,V,Out) = 1+ equal0(V1,W1,X1):3+ lt(V1,Y1,Z1):3
     [V1>=0,Z1=0,Y1=0,X1=1,W1=0,Out=0,V=0] 
* CE 65: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):4+ lt(V1,V,X1):3
     [V>=V1+1,V1>=1,X1=0,W1=1,Out=0] 
* CE 66: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):4+ lt(V1,V,X1):5
     [V>=V1+1,V1>=1,X1=2,W1=1,Out=0] 
* CE 67: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):5+ lt(V1,V,X1):3
     [V1>=V,V>=1,X1=0,W1=1,Out=0] 
* CE 68: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):5+ lt(V1,V,X1):4
     [V1>=V,V>=1,X1=1,W1=1,Out=0] 
* CE 69: gcd(V1,V,Out) = 1+ equal0(W1,V,X1):1
     [V>=1,X1=1,W1=0,Out=0,V1=0] 
* CE 70: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):2
     [V>=0,V1>=0,W1=0,Out=0] 
* CE 71: gcd(V1,V,Out) = 1+ equal0(V1,W1,X1):3
     [V1>=0,X1=1,W1=0,Out=0,V=0] 
* CE 72: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):4
     [V>=V1+1,V1>=1,W1=1,Out=0] 
* CE 73: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):5
     [V1>=V,V>=1,W1=1,Out=0] 
* CE 74: gcd(V1,V,Out) = 1+ equal0(W1,V,X1):1+ lt(Y1,V,Z1):1+ monus(A2,V,B2):1+ gcd(C2,V,Out)
     [V>=1,C2=0,B2=0,A2=0,Z1=2,Y1=0,X1=1,W1=0,V1=0] 
* CE 75: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):4+ lt(V1,V,X1):5+ monus(V1,V,Y1):1+ gcd(Z1,V,Out)
     [V>=V1+1,V1>=1,Z1=0,Y1=0,X1=2,W1=1] 
* CE 76: gcd(V1,V,Out) = 1+ equal0(V1,W1,X1):3+ lt(V1,Y1,Z1):2+ monus(A2,V1,B2):1+ gcd(C2,D2,Out)
     [V1>=0,D2=0,C2=0,B2=0,A2=0,Z1=1,Y1=0,X1=1,W1=0,V=0] 
* CE 77: gcd(V1,V,Out) = 1+ equal0(V1,V,W1):5+ lt(V1,V,X1):4+ monus(V,V1,Y1):1+ gcd(V,Z1,Out)
     [V1>=V,V>=1,Z1=0,Y1=0,X1=1,W1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [77] --> Loop 42 
* CEs [75] --> Loop 43 
* CEs [76] --> Loop 44 
* CEs [74] --> Loop 45 
* CEs [63,64,71] --> Loop 46 
* CEs [61,62,65,66,67,68,69,70,72,73] --> Loop 47 

#### Loops of gcd/3 
* Loop 42: gcd(V1,V,Out)->  gcd(V,A',Out)
                  [V1>=V,V>=1,A'=0] 
* Loop 43: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V>=V1+1,V1>=1,V1'=0] 
* Loop 44: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=0,V'=0,V1'=0,V=0] 
* Loop 45: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V>=1,V1'=0,V1=0] 
* Loop 46: gcd(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 47: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR gcd(V1,V,Out) 

#### Partial ranking functions of CR gcd(V1,V,Out) 


### Resulting Chains:gcd(V1,V,Out) 
* [[45]]...
* [[45],47]
* [[44]]...
* [[44],47]
* [[44],46]
* [47]
* [46]
* [43,[45]]...
* [43,[45],47]
* [43,47]
* [42,[44]]...
* [42,[44],47]
* [42,[44],46]
* [42,47]
* [42,46]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[46,42],[47,42],[46,[44],42],[47,[44],42],[47,43],[47,[45],43],[47],[47,[45]]] --> 1 
* [[46],[46,[44]],[47,[44]]] --> 2 
* [[[45]]] --> 3 
* [[[44]]] --> 4 
* [[[45],43]] --> 5 
* [[[44],42]] --> 6 


### Specialization of cost equations start/3 
* CE 5 is refined into CE [78,79,80,81] 
* CE 2 is refined into CE [82,83,84,85,86] 
* CE 3 is refined into CE [87] 
* CE 4 is refined into CE [88,89,90,91] 
* CE 6 is refined into CE [92,93,94,95,96,97] 
* CE 7 is refined into CE [98,99,100] 
* CE 8 is refined into CE [101] 
* CE 9 is refined into CE [102,103,104,105,106,107] 
* CE 10 is refined into CE [108,109,110,111,112] 
* CE 11 is refined into CE [113,114,115,116,117] 
* CE 12 is refined into CE [118,119,120,121,122,123] 
* CE 13 is refined into CE [124,125,126] 


#### Refined cost equations start/3 
* CE 78: start(V1,V,V14) = 0+ monus(V,V14,W14):1+ gcd(X14,V14,Y14):1
     [V14>=0,V>=0,Y14=0,X14=0,W14=0,V1=2] 
* CE 79: start(V1,V,V14) = 0+ monus(V,W14,X14):1+ gcd(Y14,Z14,A15):2
     [V>=0,A15=0,Z14=0,Y14=0,X14=0,W14=0,V14=0,V1=2] 
* CE 80: start(V1,V,V14) = 0+ monus(V,V14,W14):1+ gcd(X14,V14,Y14):3
     [V14>=1,V>=0,X14=0,W14=0,V1=2] 
* CE 81: start(V1,V,V14) = 0+ monus(V,W14,X14):1+ gcd(Y14,Z14,A15):4
     [V>=0,Z14=0,Y14=0,X14=0,W14=0,V14=0,V1=2] 
* CE 82: start(V1,V,V14) = 0+ lt(W14,V14,X14):1
     [V14>=1,X14=2,W14=0,V=0,V1=1] 
* CE 83: start(V1,V,V14) = 0+ lt(V,W14,X14):2
     [V>=0,X14=1,W14=0,V14=0,V1=1] 
* CE 84: start(V1,V,V14) = 0+ lt(V,V14,W14):3
     [V14>=0,V>=0,W14=0,V1=1] 
* CE 85: start(V1,V,V14) = 0+ lt(V,V14,W14):4
     [V>=V14,V14>=1,W14=1,V1=1] 
* CE 86: start(V1,V,V14) = 0+ lt(V,V14,W14):5
     [V14>=V+1,V>=1,W14=2,V1=1] 
* CE 87: start(V1,V,V14) = 0
     [V14>=0,V>=0,V1>=0] 
* CE 88: start(V1,V,V14) = 0+ lt(W14,V14,X14):1+ monus(Y14,V14,Z14):1+ gcd(A15,V14,B15):1
     [V14>=1,B15=0,A15=0,Z14=0,Y14=0,X14=2,W14=0,V=0,V1=1] 
* CE 89: start(V1,V,V14) = 0+ lt(W14,V14,X14):1+ monus(Y14,V14,Z14):1+ gcd(A15,V14,B15):3
     [V14>=1,A15=0,Z14=0,Y14=0,X14=2,W14=0,V=0,V1=1] 
* CE 90: start(V1,V,V14) = 0+ lt(V,V14,W14):5+ monus(V,V14,X14):1+ gcd(Y14,V14,Z14):1
     [V14>=V+1,V>=1,Z14=0,Y14=0,X14=0,W14=2,V1=1] 
* CE 91: start(V1,V,V14) = 0+ lt(V,V14,W14):5+ monus(V,V14,X14):1+ gcd(Y14,V14,Z14):3
     [V14>=V+1,V>=1,Y14=0,X14=0,W14=2,V1=1] 
* CE 92: start(V1,V,V14) = 0+ lt(V,W14,X14):2+ monus(Y14,V,Z14):1+ gcd(A15,B15,C15):1
     [V>=0,C15=0,B15=0,A15=0,Z14=0,Y14=0,X14=1,W14=0,V14=0,V1=1] 
* CE 93: start(V1,V,V14) = 0+ lt(V,W14,X14):2+ monus(Y14,V,Z14):1+ gcd(A15,B15,C15):2
     [V>=0,C15=0,B15=0,A15=0,Z14=0,Y14=0,X14=1,W14=0,V14=0,V1=1] 
* CE 94: start(V1,V,V14) = 0+ lt(V,W14,X14):2+ monus(Y14,V,Z14):1+ gcd(A15,B15,C15):4
     [V>=0,B15=0,A15=0,Z14=0,Y14=0,X14=1,W14=0,V14=0,V1=1] 
* CE 95: start(V1,V,V14) = 0+ lt(V,V14,W14):4+ monus(V14,V,X14):1+ gcd(V14,Y14,Z14):1
     [V>=V14,V14>=1,Z14=0,Y14=0,X14=0,W14=1,V1=1] 
* CE 96: start(V1,V,V14) = 0+ lt(V,V14,W14):4+ monus(V14,V,X14):1+ gcd(V14,Y14,Z14):2
     [V>=V14,V14>=1,Z14=0,Y14=0,X14=0,W14=1,V1=1] 
* CE 97: start(V1,V,V14) = 0+ lt(V,V14,W14):4+ monus(V14,V,X14):1+ gcd(V14,Y14,Z14):4
     [V>=V14,V14>=1,Y14=0,X14=0,W14=1,V1=1] 
* CE 98: start(V1,V,V14) = 0+ monus(V14,V,W14):1+ gcd(V14,X14,Y14):1
     [V14>=0,V>=0,Y14=0,X14=0,W14=0,V1=1] 
* CE 99: start(V1,V,V14) = 0+ monus(V14,V,W14):1+ gcd(V14,X14,Y14):2
     [V14>=0,V>=0,Y14=0,X14=0,W14=0,V1=1] 
* CE 100: start(V1,V,V14) = 0+ monus(V14,V,W14):1+ gcd(V14,X14,Y14):4
     [V14>=0,V>=0,X14=0,W14=0,V1=1] 
* CE 101: start(V1,V,V14) = 0+ monus(V1,V,W14):1
     [V>=0,V1>=0,W14=0] 
* CE 102: start(V1,V,V14) = 0+ gcd(V1,V,W14):1
     [V>=0,V1>=0,W14=0] 
* CE 103: start(V1,V,V14) = 0+ gcd(V1,W14,X14):2
     [V1>=0,X14=0,W14=0,V=0] 
* CE 104: start(V1,V,V14) = 0+ gcd(W14,V,X14):3
     [V>=1,W14=0,V1=0] 
* CE 105: start(V1,V,V14) = 0+ gcd(V1,W14,X14):4
     [V1>=0,W14=0,V=0] 
* CE 106: start(V1,V,V14) = 0+ gcd(V1,V,W14):5
     [V>=V1+1,V1>=1] 
* CE 107: start(V1,V,V14) = 0+ gcd(V1,V,W14):6
     [V1>=V,V>=1] 
* CE 108: start(V1,V,V14) = 0+ equal0(W14,V,X14):1
     [V>=1,X14=1,W14=0,V1=0] 
* CE 109: start(V1,V,V14) = 0+ equal0(V1,V,W14):2
     [V>=0,V1>=0,W14=0] 
* CE 110: start(V1,V,V14) = 0+ equal0(V1,W14,X14):3
     [V1>=0,X14=1,W14=0,V=0] 
* CE 111: start(V1,V,V14) = 0+ equal0(V1,V,W14):4
     [V>=V1+1,V1>=1,W14=1] 
* CE 112: start(V1,V,V14) = 0+ equal0(V1,V,W14):5
     [V1>=V,V>=1,W14=1] 
* CE 113: start(V1,V,V14) = 0+ lt(W14,V,X14):1
     [V>=1,X14=2,W14=0,V1=0] 
* CE 114: start(V1,V,V14) = 0+ lt(V1,W14,X14):2
     [V1>=0,X14=1,W14=0,V=0] 
* CE 115: start(V1,V,V14) = 0+ lt(V1,V,W14):3
     [V>=0,V1>=0,W14=0] 
* CE 116: start(V1,V,V14) = 0+ lt(V1,V,W14):4
     [V1>=V,V>=1,W14=1] 
* CE 117: start(V1,V,V14) = 0+ lt(V1,V,W14):5
     [V>=V1+1,V1>=1,W14=2] 
* CE 118: start(V1,V,V14) = 0+ fun1(W14,V,V14,X14):1
     [V14>=0,V>=0,X14=1,W14=1,V1=1] 
* CE 119: start(V1,V,V14) = 0+ fun1(W14,X14,V14,Y14):2
     [V14>=0,Y14=1,X14=0,W14=2,V=0,V1=2] 
* CE 120: start(V1,V,V14) = 0+ fun1(V1,V,V14,W14):3
     [V14>=0,V>=0,V1>=0,W14=0] 
* CE 121: start(V1,V,V14) = 0+ fun1(W14,V,X14,Y14):4
     [V>=1,Y14=2,X14=0,W14=2,V14=0,V1=2] 
* CE 122: start(V1,V,V14) = 0+ fun1(W14,V,V14,X14):5
     [V14>=V,V>=1,X14=1,W14=2,V1=2] 
* CE 123: start(V1,V,V14) = 0+ fun1(W14,V,V14,X14):6
     [V>=V14+1,V14>=1,X14=2,W14=2,V1=2] 
* CE 124: start(V1,V,V14) = 0+ fun3(W14,V,V14,X14):1
     [V14>=0,V>=0,X14=1,W14=1,V1=1] 
* CE 125: start(V1,V,V14) = 0+ fun3(W14,V,V14,X14):2
     [V14>=0,V>=0,X14=2,W14=2,V1=2] 
* CE 126: start(V1,V,V14) = 0+ fun3(V1,V,V14,W14):3
     [V14>=0,V>=0,V1>=0,W14=0] 

### Cost equations --> "Loop" of start/3 
* CEs [103,110,114] --> Loop 48 
* CEs [79,121] --> Loop 49 
* CEs [78,119,122,123,125] --> Loop 50 
* CEs [83,92,93] --> Loop 51 
* CEs [82,84,85,86,88,90,95,96,98,99,118,124] --> Loop 52 
* CEs [87,101,102,108,109,111,112,113,115,116,117,120,126] --> Loop 53 
* CEs [107] --> Loop 54 
* CEs [106] --> Loop 55 
* CEs [105] --> Loop 56 
* CEs [80] --> Loop 57 
* CEs [81] --> Loop 58 
* CEs [94] --> Loop 59 
* CEs [89,91,97,100] --> Loop 60 
* CEs [104] --> Loop 61 

#### Loops of start/3 
* Loop 48: start(V1,V,V14) [V1>=0,V=0] 
* Loop 49: start(V1,V,V14) [V>=0,V14=0,V1=2] 
* Loop 50: start(V1,V,V14) [V14>=0,V>=0,V1=2] 
* Loop 51: start(V1,V,V14) [V>=0,V14=0,V1=1] 
* Loop 52: start(V1,V,V14) [V14>=0,V>=0,V1=1] 
* Loop 53: start(V1,V,V14) [V>=0,V1>=0] 
* Loop 54: start(V1,V,V14) [V1>=V,V>=1] 
* Loop 55: start(V1,V,V14) [V>=V1+1,V1>=1] 
* Loop 56: start(V1,V,V14) [V1>=0,V=0] 
* Loop 57: start(V1,V,V14) [V14>=1,V>=0,V1=2] 
* Loop 58: start(V1,V,V14) [V>=0,V14=0,V1=2] 
* Loop 59: start(V1,V,V14) [V>=0,V14=0,V1=1] 
* Loop 60: start(V1,V,V14) [V14>=0,V>=0,V1=1] 
* Loop 61: start(V1,V,V14) [V>=1,V1=0] 

### Ranking functions of CR start(V1,V,V14) 

#### Partial ranking functions of CR start(V1,V,V14) 


### Resulting Chains:start(V1,V,V14) 
* [61]...
* [60]...
* [59]...
* [58]...
* [57]...
* [56]...
* [55]...
* [54]...
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]


### Merging Chains  start/3 into  External patterns of execution 
* [[51],[52],[53]] --> 1 
* [[49],[50]] --> 2 
* [[48]] --> 3 
* [[61]] --> 4 
* [[59]] --> 5 
* [[60]] --> 6 
* [[58]] --> 7 
* [[57]] --> 8 
* [[56]] --> 9 
* [[55]] --> 10 
* [[54]] --> 11 


Computing Bounds
=====================================

#### Cost of chains of fun3(V1,V,V14,Out):
* Chain [22]: 0
  with precondition: [V1=1,Out=1,V>=0,V14>=0] 

* Chain [21]: 0
  with precondition: [V1=2,Out=2,V>=0,V14>=0] 

* Chain [20]: 0
  with precondition: [Out=0,V1>=0,V>=0,V14>=0] 


#### Cost of loops [23] 

 * loop 23:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [23]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [23]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of phase [23]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
0
#### Cost of chains of lt(V1,V,Out):
* Chain [[23],26]: 0
  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [[23],25]: 0
  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[23],24]: 0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [26]: 0
  with precondition: [V1=0,Out=2,V>=1] 

* Chain [25]: 0
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun1(V1,V,V14,Out):
* Chain [33]: 0
  with precondition: [V1=1,Out=1,V>=0,V14>=0] 

* Chain [32]: 0
  with precondition: [Out=0,V1>=0,V>=0,V14>=0] 

* Chain [31]: 0
  with precondition: [V1=2,V=0,Out=1,V14>=0] 

* Chain [30]: 0
  with precondition: [V1=2,V14=0,Out=0,V>=1] 

* Chain [29]: 0
  with precondition: [V1=2,V14=0,Out=2,V>=1] 

* Chain [28]: 0
  with precondition: [V1=2,Out=1,V>=1,V14>=V] 

* Chain [27]: 0
  with precondition: [V1=2,Out=2,V14>=1,V>=V14+1] 


#### Cost of chains of equal0(V1,V,Out):
* Chain [39]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [38]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [37]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [36]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [35]: 1
  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [34]: 1
  with precondition: [Out=1,V>=1,V1>=V] 


#### Cost of loops [40] 

 * loop 40:monus(V1,V,Out) -> [monus(V1',V',Out')] 
1
#### Cost of phase [40]:monus(V1,V,Out) -> [monus(V1',V',Out')] 
1*it(40)+0
  Such that:it(40) =< V1
it(40) =< V1-V1'
it(40) =< V
it(40) =< V-V'

#### Cost of chains of monus(V1,V,Out):
* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [41]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [45] 

 * loop 45:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
1*s(3)+2
  Such that:s(3) =< V'

#### Cost of phase [45]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*it(45)+1*s(4)+0
#### Cost of phase [45]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*it(45)+1*s(4)+0
#### Cost of loops [44] 

 * loop 44:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
1*s(6)+2
  Such that:s(6) =< V1

#### Cost of phase [44]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*it(44)+1*s(7)+0
  Such that:s(7) =< V1
s(7) =< V1-V1'

#### Cost of phase [44]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*it(44)+1*s(7)+0
  Such that:s(7) =< V1
s(7) =< V1-V1'

#### Cost of phase [44]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*it(44)+1*s(7)+0
  Such that:s(7) =< V1
s(7) =< V1-V1'

#### Cost of chains of gcd(V1,V,Out):
* Chain [[45]]...: 3*it(45)+0
  with precondition: [V1=0,V>=1] 

* Chain [[45],47]: 3*it(45)+2
  with precondition: [V1=0,Out=0,V>=1] 

* Chain [[44]]...: 2*it(44)+1*s(7)+0
  Such that:s(7) =< V1

  with precondition: [V1>=0,V=0] 

* Chain [[44],47]: 2*it(44)+1*s(7)+2
  Such that:s(7) =< V1

  with precondition: [V=0,Out=0,V1>=0] 

* Chain [[44],46]: 2*it(44)+1*s(7)+2
  Such that:s(7) =< V1

  with precondition: [V=0,Out=0,V1>=0] 

* Chain [47]: 2
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [46]: 2
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [43,[45]]...: 3*it(45)+1*s(8)+2
  Such that:s(8) =< V

  with precondition: [V1>=1,V>=V1+1] 

* Chain [43,[45],47]: 3*it(45)+1*s(8)+4
  Such that:s(8) =< V

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [43,47]: 1*s(8)+4
  Such that:s(8) =< V

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [42,[44]]...: 2*it(44)+1*s(7)+1*s(9)+2
  Such that:s(9) =< V1
s(7) =< V

  with precondition: [V>=1,V1>=V] 

* Chain [42,[44],47]: 2*it(44)+1*s(7)+1*s(9)+4
  Such that:s(9) =< V1
s(7) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [42,[44],46]: 2*it(44)+1*s(7)+1*s(9)+4
  Such that:s(9) =< V1
s(7) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [42,47]: 1*s(9)+4
  Such that:s(9) =< V1

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [42,46]: 1*s(9)+4
  Such that:s(9) =< V1

  with precondition: [Out=0,V>=1,V1>=V] 


#### Cost of chains of start(V1,V,V14):
* Chain [61]...: 3*s(26)+0
  with precondition: [V1=0,V>=1] 

* Chain [60]...: 4*s(27)+10*s(28)+2*s(31)+0
  Such that:aux(5) =< V
aux(6) =< V14
s(31) =< aux(5)
s(27) =< aux(6)

  with precondition: [V1=1,V>=0,V14>=0] 

* Chain [59]...: 1*s(37)+2*s(39)+0
  Such that:s(37) =< V

  with precondition: [V1=1,V14=0,V>=0] 

* Chain [58]...: 2*s(42)+0
  with precondition: [V1=2,V14=0,V>=0] 

* Chain [57]...: 1*s(43)+3*s(44)+0
  Such that:s(43) =< V14

  with precondition: [V1=2,V>=0,V14>=1] 

* Chain [56]...: 1*s(45)+2*s(46)+0
  Such that:s(45) =< V1

  with precondition: [V=0,V1>=0] 

* Chain [55]...: 1*s(47)+3*s(48)+2
  Such that:s(47) =< V

  with precondition: [V1>=1,V>=V1+1] 

* Chain [54]...: 1*s(49)+1*s(50)+2*s(51)+2
  Such that:s(49) =< V1
s(50) =< V

  with precondition: [V>=1,V1>=V] 

* Chain [53]: 5*s(52)+4*s(55)+10*s(57)+4
  Such that:s(53) =< V1
aux(8) =< V
s(52) =< aux(8)
s(55) =< s(53)

  with precondition: [V1>=0,V>=0] 

* Chain [52]: 22*s(58)+48*s(63)+4*s(70)+4
  Such that:aux(11) =< V
aux(12) =< V14
s(70) =< aux(11)
s(58) =< aux(12)

  with precondition: [V1=1,V>=0,V14>=0] 

* Chain [51]: 2*s(90)+14*s(95)+4
  Such that:aux(14) =< V
s(90) =< aux(14)

  with precondition: [V1=1,V14=0,V>=0] 

* Chain [50]: 5*s(100)+10*s(105)+4
  Such that:aux(15) =< V14
s(100) =< aux(15)

  with precondition: [V1=2,V>=0,V14>=0] 

* Chain [49]: 1*aux(17)+0
  with precondition: [V1=2,V14=0,V>=0] 

* Chain [48]: 2*s(111)+4*s(112)+2
  Such that:s(110) =< V1
s(111) =< s(110)

  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V,V14): 
-------------------------------------
* Chain [61]... with precondition: [V1=0,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [60]... with precondition: [V1=1,V>=0,V14>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [59]... with precondition: [V1=1,V14=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [58]... with precondition: [V1=2,V14=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [57]... with precondition: [V1=2,V>=0,V14>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [56]... with precondition: [V=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [55]... with precondition: [V1>=1,V>=V1+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [54]... with precondition: [V>=1,V1>=V] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [53] with precondition: [V1>=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52] with precondition: [V1=1,V>=0,V14>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V1=1,V14=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [V1=2,V>=0,V14>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [V1=2,V14=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48] with precondition: [V=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V14): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 40 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 222 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 126 ms.
   - Equation cost structures 72 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 14 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 488 ms.

