
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [plus/3]
1. recursive  : [lt/3]
2. recursive  : [fibiter/5,if/6]
3. non_recursive  : [fib/2]
4. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is partially evaluated into lt/3
2. SCC is partially evaluated into fibiter/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations plus/3 
* CE 15: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 16: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 

#### Loops of plus/3 
* Loop 10: plus(A,B,B) [B>=0,A=0] 
* Loop 11: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [11]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[11],10]
* [10]


### Merging Chains  plus/3 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[11]]] --> 2 


### Specialization of cost equations lt/3 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 


#### Refined cost equations lt/3 
* CE 17: lt(V1,V,Out) = 1+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 18: lt(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 19: lt(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 

### Cost equations --> "Loop" of lt/3 
* CEs [18] --> Loop 12 
* CEs [19] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of lt/3 
* Loop 12: lt(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 13: lt(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 14: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  lt/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[12,[14]]] --> 3 
* [[13,[14]]] --> 4 


### Specialization of cost equations fibiter/5 
* CE 11 is refined into CE [20,21] 
* CE 10 is refined into CE [22,23,24,25] 


#### Refined cost equations fibiter/5 
* CE 20: fibiter(A,B,C,D,C) = 2+ lt(B,E,F):2
     [B>=0,D>=0,C>=0,F=0,E=0,A=0] 
* CE 21: fibiter(A,B,C,D,C) = 2+ lt(B,A,E):3
     [B>=A,A>=1,D>=0,C>=0,E=0] 
* CE 22: fibiter(V1,V,V12,V15,Out) = 2+ lt(W15,V1,X15):1+ plus(Y15,V15,V15):1+ fibiter(V1,Z15,V15,V15,Out)
     [V15>=0,V1>=1,Z15=1,Y15=0,X15=1,W15=0,V12=0,V=0] 
* CE 23: fibiter(V1,V,V12,V15,Out) = 2+ lt(W15,V1,X15):1+ plus(V12,Y15,Z15):2+ fibiter(V1,A16,B16,Z15,Out)
     [Z15>=V12,V12>=1,V1>=1,Z15=V12+B16,Z15=V12+Y15,Z15=V12+V15,A16=1,X15=1,W15=0,V=0] 
* CE 24: fibiter(V1,V,V12,V15,Out) = 2+ lt(V,V1,W15):4+ plus(X15,V15,V15):1+ fibiter(V1,Y15,V15,V15,Out)
     [V1>=V+1,V15>=0,V>=1,V+1=Y15,X15=0,W15=1,V12=0] 
* CE 25: fibiter(V1,V,V12,V15,Out) = 2+ lt(V,V1,W15):4+ plus(V12,X15,Y15):2+ fibiter(V1,Z15,A16,Y15,Out)
     [Y15>=V12,V1>=V+1,V12>=1,V>=1,Y15=V12+A16,Y15=V12+X15,Y15=V12+V15,V+1=Z15,W15=1] 

### Cost equations --> "Loop" of fibiter/5 
* CEs [25] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of fibiter/5 
* Loop 15: fibiter(V1,V,V12,V15,Out)->  fibiter(V1,A',V15,B',Out)
                  [V1>=V+1,V15>=0,V12>=1,V>=1,V12+V15=B',V+1=A'] 
* Loop 16: fibiter(V1,V,V12,V15,Out)->  fibiter(V1,A',V15,V15,Out)
                  [V1>=V+1,V15>=0,V>=1,V+1=A',V12=0] 
* Loop 17: fibiter(V1,V,V12,V15,Out)->  fibiter(V1,A',V15,B',Out)
                  [V15>=0,V12>=1,V1>=1,V12+V15=B',A'=1,V=0] 
* Loop 18: fibiter(V1,V,V12,V15,Out)->  fibiter(V1,A',V15,V15,Out)
                  [V15>=0,V1>=1,A'=1,V12=0,V=0] 
* Loop 19: fibiter(A,B,C,D,C) [B>=A,D>=0,C>=0,A>=1] 
* Loop 20: fibiter(A,B,C,D,C) [D>=0,C>=0,B>=0,A=0] 

### Ranking functions of CR fibiter(V1,V,V12,V15,Out) 
* RF of phase [15,16]: [V1-V]

#### Partial ranking functions of CR fibiter(V1,V,V12,V15,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1,16:1]:
    V1-V


### Resulting Chains:fibiter(V1,V,V12,V15,Out) 
* [[15,16],19]
* [20]
* [19]
* [18,[15,16],19]
* [18,19]
* [17,[15,16],19]
* [17,19]


### Merging Chains  fibiter/5 into  External patterns of execution 
* [[20]] --> 1 
* [[19,18]] --> 2 
* [[19,17]] --> 3 
* [[19,[15,16],18]] --> 4 
* [[19,[15,16],17]] --> 5 
* [[19]] --> 6 
* [[19,[15,16]]] --> 7 


### Specialization of cost equations start/5 
* CE 2 is refined into CE [26,27,28,29,30,31] 
* CE 3 is refined into CE [32] 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35,36,37,38] 
* CE 6 is refined into CE [39,40,41] 
* CE 7 is refined into CE [42,43,44,45,46,47,48] 


#### Refined cost equations start/5 
* CE 26: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,V20):1+ fibiter(X20,Y20,V20,V20,V20):1
     [V20>=0,Y20>=1,Y20=V12+1,X20=0,W20=0,V15=0,V=0,V1=1] 
* CE 27: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,V20):1+ fibiter(V,X20,V20,V20,V20):6
     [X20>=V,V20>=0,V>=1,X20=V12+1,W20=0,V15=0,V1=1] 
* CE 28: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,V20):1+ fibiter(V,X20,V20,V20,Y20):7
     [Y20>=V20,V>=X20+1,V20>=0,X20>=1,X20=V12+1,W20=0,V15=0,V1=1] 
* CE 29: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,X20):2+ fibiter(Y20,Z20,V20,X20,V20):1
     [X20>=V20+1,V20>=0,Z20>=1,V20+W20=X20,V15+V20=X20,Z20=V12+1,Y20=0,V=0,V1=1] 
* CE 30: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,X20):2+ fibiter(V,Y20,V20,X20,V20):6
     [X20>=V20+1,Y20>=V,V20>=0,V>=1,V20+W20=X20,V15+V20=X20,Y20=V12+1,V1=1] 
* CE 31: start(V1,V,V12,V15,V20) = 1+ plus(W20,V20,X20):2+ fibiter(V,Y20,V20,X20,Z20):7
     [Z20>=X20,X20>=V20+1,V>=Y20+1,V20>=0,Y20>=1,V20+W20=X20,V15+V20=X20,Y20=V12+1,V1=1] 
* CE 32: start(V1,V,V12,V15,V20) = 1
     [V20>=0,V15>=0,V12>=0,V>=0,V1=0] 
* CE 33: start(V1,V,V12,V15,V20) = 0+ plus(W20,V,V):1
     [V>=0,W20=0,V1=0] 
* CE 34: start(V1,V,V12,V15,V20) = 0+ plus(V1,W20,X20):2
     [X20>=V1,V1>=1,X20=V1+W20,X20=V1+V] 
* CE 35: start(V1,V,V12,V15,V20) = 0+ lt(W20,V,X20):1
     [V>=1,X20=1,W20=0,V1=0] 
* CE 36: start(V1,V,V12,V15,V20) = 0+ lt(V1,W20,X20):2
     [V1>=0,X20=0,W20=0,V=0] 
* CE 37: start(V1,V,V12,V15,V20) = 0+ lt(V1,V,W20):3
     [V1>=V,V>=1,W20=0] 
* CE 38: start(V1,V,V12,V15,V20) = 0+ lt(V1,V,W20):4
     [V>=V1+1,V1>=1,W20=1] 
* CE 39: start(V1,V,V12,V15,V20) = 1+ fibiter(W20,X20,Y20,Z20,A21):1
     [A21=0,Z20=1,Y20=0,X20=0,W20=0,V1=0] 
* CE 40: start(V1,V,V12,V15,V20) = 1+ fibiter(W20,X20,Y20,Z20,A21):2
     [A21=1,Z20=1,Y20=0,X20=0,W20=1,V1=1] 
* CE 41: start(V1,V,V12,V15,V20) = 1+ fibiter(V1,W20,X20,Y20,Z20):4
     [Z20>=1,V1>=2,Y20=1,X20=0,W20=0] 
* CE 42: start(V1,V,V12,V15,V20) = 0+ fibiter(W20,V,V12,V15,V12):1
     [V12>=0,V15>=0,V>=0,W20=0,V1=0] 
* CE 43: start(V1,V,V12,V15,V20) = 0+ fibiter(W20,X20,Y20,V15,V15):2
     [V15>=0,Y20=0,X20=0,W20=1,V12=0,V=0,V1=1] 
* CE 44: start(V1,V,V12,V15,V20) = 0+ fibiter(W20,X20,V12,V15,V15):3
     [V15>=0,V12>=1,X20=0,W20=1,V=0,V1=1] 
* CE 45: start(V1,V,V12,V15,V20) = 0+ fibiter(V1,W20,X20,V15,Y20):4
     [Y20>=V15,V15>=0,V1>=2,X20=0,W20=0,V12=0,V=0] 
* CE 46: start(V1,V,V12,V15,V20) = 0+ fibiter(V1,W20,V12,V15,X20):5
     [X20>=V12+V15,V15>=0,V12>=1,V1>=2,W20=0,V=0] 
* CE 47: start(V1,V,V12,V15,V20) = 0+ fibiter(V1,V,V12,V15,V12):6
     [V>=V1,V12>=0,V15>=0,V1>=1] 
* CE 48: start(V1,V,V12,V15,V20) = 0+ fibiter(V1,V,V12,V15,W20):7
     [W20>=V15,V1>=V+1,V15>=0,V12>=0,V>=1] 

### Cost equations --> "Loop" of start/5 
* CEs [41] --> Loop 21 
* CEs [34,37,38,47,48] --> Loop 22 
* CEs [36,45,46] --> Loop 23 
* CEs [26,27,28,29,30,31,40,43,44] --> Loop 24 
* CEs [32,33,35,39,42] --> Loop 25 

#### Loops of start/5 
* Loop 21: start(V1,V,V12,V15,V20) [V1>=2] 
* Loop 22: start(V1,V,V12,V15,V20) [V>=0,V1>=1] 
* Loop 23: start(V1,V,V12,V15,V20) [V1>=0,V=0] 
* Loop 24: start(V1,V,V12,V15,V20) [V1=1] 
* Loop 25: start(V1,V,V12,V15,V20) [V1=0] 

### Ranking functions of CR start(V1,V,V12,V15,V20) 

#### Partial ranking functions of CR start(V1,V,V12,V15,V20) 


### Resulting Chains:start(V1,V,V12,V15,V20) 
* [25]
* [24]
* [23]
* [22]
* [21]


### Merging Chains  start/5 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 
* [[22]] --> 4 
* [[21]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [11]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [10]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [14] 

 * loop 14:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1
#### Cost of phase [14]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of phase [14]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(14)+0
  Such that:it(14) =< V1
it(14) =< V1-V1'
it(14) =< V
it(14) =< V-V'

#### Cost of chains of lt(V1,V,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[14],12]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [13]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [12]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [15,16] 

 * loop 15:fibiter(V1,V,V12,V15,Out) -> [fibiter(V1',V',V12',V15',Out')] 
1*s(4)+1*s(5)+4
  Such that:s(4) =< V'
s(5) =< -V12'+V15'

 * loop 16:fibiter(V1,V,V12,V15,Out) -> [fibiter(V1',V',V12',V15',Out')] 
1*s(7)+4
  Such that:s(7) =< V'

#### Cost of phase [15,16]:fibiter(V1,V,V12,V15,Out) -> [fibiter(V1',V',V12',V15',Out')] 
8*it(15)+1*s(8)+1*s(9)+1*s(10)+0
  Such that:aux(1) =< V1
aux(16) =< V1-V
aux(17) =< V1-V-V1'+V'
it(15) =< aux(16)
it(15) =< aux(17)
aux(9) =< aux(1)
s(8) =< it(15)*aux(1)
s(10) =< it(15)*aux(9)

#### Cost of chains of fibiter(V1,V,V12,V15,Out):
* Chain [[15,16],19]: 8*it(15)+1*s(1)+1*s(8)+1*s(9)+1*s(10)+3
  Such that:aux(19) =< V1
aux(20) =< V1-V
s(1) =< aux(19)
it(15) =< aux(20)
aux(9) =< aux(19)
s(8) =< it(15)*aux(19)
s(10) =< it(15)*aux(9)

  with precondition: [V>=1,V12>=0,V15>=0,V1>=V+1,Out>=V15] 

* Chain [20]: 3
  with precondition: [V1=0,V12=Out,V>=0,V12>=0,V15>=0] 

* Chain [19]: 1*s(1)+3
  Such that:s(1) =< V1

  with precondition: [V12=Out,V1>=1,V12>=0,V15>=0,V>=V1] 

* Chain [18,[15,16],19]: 9*it(15)+1*s(8)+1*s(9)+1*s(10)+7
  Such that:aux(21) =< V1
it(15) =< aux(21)
aux(9) =< aux(21)
s(8) =< it(15)*aux(21)
s(10) =< it(15)*aux(9)

  with precondition: [V=0,V12=0,V1>=2,V15>=0,Out>=V15] 

* Chain [18,19]: 1*s(1)+7
  Such that:s(1) =< 1

  with precondition: [V1=1,V=0,V12=0,V15=Out,V15>=0] 

* Chain [17,[15,16],19]: 9*it(15)+1*s(8)+1*s(9)+1*s(10)+1*s(11)+7
  Such that:s(11) =< V12
aux(22) =< V1
it(15) =< aux(22)
aux(9) =< aux(22)
s(8) =< it(15)*aux(22)
s(10) =< it(15)*aux(9)

  with precondition: [V=0,V1>=2,V12>=1,V15>=0,Out>=V12+V15] 

* Chain [17,19]: 1*s(1)+1*s(11)+7
  Such that:s(1) =< 1
s(11) =< V12

  with precondition: [V1=1,V=0,V15=Out,V12>=1,V15>=0] 


#### Cost of chains of start(V1,V,V12,V15,V20):
* Chain [25]: 4
  with precondition: [V1=0] 

* Chain [24]: 4*s(12)+16*s(16)+2*s(18)+2*s(19)+2*s(20)+3*s(21)+3*s(33)+1*s(36)+8
  Such that:s(36) =< V12
aux(23) =< 1
aux(24) =< V
aux(25) =< V-V12
aux(26) =< V15
s(33) =< aux(23)
s(12) =< aux(24)
s(21) =< aux(26)
s(16) =< aux(25)
s(17) =< aux(24)
s(18) =< s(16)*aux(24)
s(19) =< s(16)*s(17)

  with precondition: [V1=1] 

* Chain [23]: 18*s(38)+2*s(40)+2*s(41)+2*s(42)+1*s(43)+7
  Such that:s(43) =< V12
aux(27) =< V1
s(38) =< aux(27)
s(39) =< aux(27)
s(40) =< s(38)*aux(27)
s(41) =< s(38)*s(39)

  with precondition: [V=0,V1>=0] 

* Chain [22]: 4*s(50)+1*s(51)+8*s(57)+1*s(59)+1*s(60)+1*s(61)+3
  Such that:s(55) =< V1-V
s(51) =< V
aux(28) =< V1
s(50) =< aux(28)
s(57) =< s(55)
s(58) =< aux(28)
s(59) =< s(57)*aux(28)
s(60) =< s(57)*s(58)

  with precondition: [V1>=1,V>=0] 

* Chain [21]: 9*s(63)+1*s(65)+1*s(66)+1*s(67)+8
  Such that:s(62) =< V1
s(63) =< s(62)
s(64) =< s(62)
s(65) =< s(63)*s(62)
s(66) =< s(63)*s(64)

  with precondition: [V1>=2] 


Closed-form bounds of start(V1,V,V12,V15,V20): 
-------------------------------------
* Chain [25] with precondition: [V1=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [24] with precondition: [V1=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23] with precondition: [V=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22] with precondition: [V1>=1,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21] with precondition: [V1>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V12,V15,V20): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 51 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 96 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 133 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 66 ms.
   - Chain cost structures 14 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 326 ms.

