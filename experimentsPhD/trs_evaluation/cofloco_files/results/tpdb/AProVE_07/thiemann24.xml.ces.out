
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [plus/3]
1. recursive [non_tail] : [times/3]
2. recursive  : [lt/3]
3. recursive  : [if/5,loop/4]
4. non_recursive  : [fac/2]
5. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is partially evaluated into times/3
2. SCC is partially evaluated into lt/3
3. SCC is partially evaluated into loop/4
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 17 is refined into CE [18] 
* CE 16 is refined into CE [19] 


#### Refined cost equations plus/3 
* CE 18: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 19: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [19] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of plus/3 
* Loop 12: plus(A,B,B) [B>=0,A=0] 
* Loop 13: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [13]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[13],12]
* [12]


### Merging Chains  plus/3 into  External patterns of execution 
* [[12]] --> 1 
* [[12,[13]]] --> 2 


### Specialization of cost equations times/3 
* CE 10 is refined into CE [20,21] 
* CE 9 is refined into CE [22] 


#### Refined cost equations times/3 
* CE 20: times(V1,V,Out) = 1+ times(W1,X1,Out)+ plus(Y1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V1,X1=0,Y1=0,V=0] 
* CE 21: times(V1,V,Out) = 1+ times(W1,V,X1)+ plus(V,Y1,Out):2
     [Out>=V,W1>=0,V>=1,Out=V+X1,Out=V+Y1,W1+1=V1] 
* CE 22: times(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of times/3 
* CEs [22] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of times/3 
* Loop 14: times(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 15: times(V1,V,Out)->  times(V1',V,Out')
                  [Out>=V,V>=1,V1>=1,V+Out'=Out,V1=V1'+1] 
* Loop 16: times(V1,V,Out)->  times(V1',V',Out)
                  [Out>=0,V1>=1,V1=V1'+1,V'=0,V=0] 

### Ranking functions of CR times(V1,V,Out) 
* RF of phase [15]: [V1]
* RF of phase [16]: [V1]

#### Partial ranking functions of CR times(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V1


### Resulting Chains:times(V1,V,Out) 
* [[16],14]
* [[15],14]
* [14]


### Merging Chains  times/3 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[16]]] --> 2 
* [[14,[15]]] --> 3 


### Specialization of cost equations lt/3 
* CE 15 is refined into CE [23] 
* CE 14 is refined into CE [24] 
* CE 13 is refined into CE [25] 


#### Refined cost equations lt/3 
* CE 23: lt(V1,V,Out) = 1+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 24: lt(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 25: lt(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 

### Cost equations --> "Loop" of lt/3 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of lt/3 
* Loop 17: lt(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 18: lt(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 19: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [19]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[19],18]
* [[19],17]
* [18]
* [17]


### Merging Chains  lt/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[17,[19]]] --> 3 
* [[18,[19]]] --> 4 


### Specialization of cost equations loop/4 
* CE 12 is refined into CE [26,27,28,29] 
* CE 11 is refined into CE [30,31] 


#### Refined cost equations loop/4 
* CE 26: loop(V1,V,V14,Out) = 2+ lt(V1,W14,X14):2+ times(Y14,Z14,A15):1+ loop(V1,B15,C15,Out)
     [V1>=0,C15=0,B15=1,A15=0,Z14=1,Y14=0,X14=0,W14=0,V14=0,V=0] 
* CE 27: loop(V1,V,V14,Out) = 2+ lt(V1,W14,X14):2+ times(V14,Y14,Z14):3+ loop(V1,A15,Z14,Out)
     [Z14>=V14,V14>=1,V1>=0,A15=1,Y14=1,X14=0,W14=0,V=0] 
* CE 28: loop(V1,V,V14,Out) = 2+ lt(V1,W14,X14):3+ times(Y14,Z14,A15):1+ loop(V1,Z14,B15,Out)
     [V1+1>=Z14,Z14>=2,Z14=W14+1,Z14=V+1,B15=0,A15=0,Y14=0,X14=0,V14=0] 
* CE 29: loop(V1,V,V14,Out) = 2+ lt(V1,W14,X14):3+ times(V14,Y14,Z14):3+ loop(V1,Y14,Z14,Out)
     [Z14+1>=V14+Y14,V1+1>=Y14,Y14>=2,V14>=1,Y14=W14+1,Y14=V+1,X14=0] 
* CE 30: loop(A,B,C,C) = 2+ lt(D,B,E):1
     [B>=1,C>=0,E=1,D=0,A=0] 
* CE 31: loop(A,B,C,C) = 2+ lt(A,B,D):4
     [B>=A+1,A>=1,C>=0,D=1] 

### Cost equations --> "Loop" of loop/4 
* CEs [31] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [26] --> Loop 25 

#### Loops of loop/4 
* Loop 20: loop(A,B,C,C) [B>=A+1,C>=0,A>=1] 
* Loop 21: loop(A,B,C,C) [C>=0,B>=1,A=0] 
* Loop 22: loop(V1,V,V14,Out)->  loop(V1,V',V14',Out)
                  [V14'>=V+V14,V1>=V,V14>=1,V>=1,V+1=V'] 
* Loop 23: loop(V1,V,V14,Out)->  loop(V1,V',V14',Out)
                  [V1>=V,V>=1,V+1=V',V14'=0,V14=0] 
* Loop 24: loop(V1,V,V14,Out)->  loop(V1,V',V14',Out)
                  [V14'>=V14,V14>=1,V1>=0,V'=1,V=0] 
* Loop 25: loop(V1,V,V14,Out)->  loop(V1,V',V14',Out)
                  [V1>=0,V14'=0,V'=1,V14=0,V=0] 

### Ranking functions of CR loop(V1,V,V14,Out) 
* RF of phase [22]: [V1-V+1]
* RF of phase [23]: [V1-V+1]

#### Partial ranking functions of CR loop(V1,V,V14,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V1-V+1
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V1-V+1


### Resulting Chains:loop(V1,V,V14,Out) 
* [[23],20]
* [[22],20]
* [25,[23],20]
* [25,21]
* [24,[22],20]
* [24,21]
* [21]
* [20]


### Merging Chains  loop/4 into  External patterns of execution 
* [[21,25]] --> 1 
* [[21,24]] --> 2 
* [[21]] --> 3 
* [[20,[23],25]] --> 4 
* [[20,[22],24]] --> 5 
* [[20,[23]]] --> 6 
* [[20]] --> 7 
* [[20,[22]]] --> 8 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [32] 
* CE 3 is refined into CE [33,34,35,36,37,38] 
* CE 4 is refined into CE [39,40,41,42] 
* CE 5 is refined into CE [43,44,45] 
* CE 6 is refined into CE [46,47] 
* CE 7 is refined into CE [48,49] 
* CE 8 is refined into CE [50,51,52,53,54,55,56,57] 


#### Refined cost equations start/4 
* CE 32: start(V1,V,V14,V20) = 1
     [V20>=0,V14>=0,V>=0,V1=1] 
* CE 33: start(V1,V,V14,V20) = 1+ times(W20,X20,Y20):1+ loop(Z20,X20,A21,B21):3
     [X20>=1,X20=V14+1,B21=0,A21=0,Z20=0,Y20=0,W20=0,V20=0,V=0,V1=0] 
* CE 34: start(V1,V,V14,V20) = 1+ times(W20,X20,Y20):1+ loop(V,X20,Z20,A21):6
     [V>=X20,X20>=1,X20=V14+1,A21=0,Z20=0,Y20=0,W20=0,V20=0,V1=0] 
* CE 35: start(V1,V,V14,V20) = 1+ times(W20,X20,Y20):1+ loop(V,X20,Z20,A21):7
     [X20>=V+1,V>=1,X20=V14+1,A21=0,Z20=0,Y20=0,W20=0,V20=0,V1=0] 
* CE 36: start(V1,V,V14,V20) = 1+ times(V20,W20,X20):3+ loop(Y20,W20,X20,X20):3
     [X20+1>=V20+W20,W20>=1,V20>=1,W20=V14+1,Y20=0,V=0,V1=0] 
* CE 37: start(V1,V,V14,V20) = 1+ times(V20,W20,X20):3+ loop(V,W20,X20,X20):7
     [X20+1>=V20+W20,W20>=V+1,V>=1,V20>=1,W20=V14+1,V1=0] 
* CE 38: start(V1,V,V14,V20) = 1+ times(V20,W20,X20):3+ loop(V,W20,X20,Y20):8
     [W20+Y20>=2*V+X20,X20+1>=V20+W20,V>=W20,W20>=1,V20>=1,W20=V14+1,V1=0] 
* CE 39: start(V1,V,V14,V20) = 0+ lt(W20,V,X20):1
     [V>=1,X20=1,W20=0,V1=0] 
* CE 40: start(V1,V,V14,V20) = 0+ lt(V1,W20,X20):2
     [V1>=0,X20=0,W20=0,V=0] 
* CE 41: start(V1,V,V14,V20) = 0+ lt(V1,V,W20):3
     [V1>=V,V>=1,W20=0] 
* CE 42: start(V1,V,V14,V20) = 0+ lt(V1,V,W20):4
     [V>=V1+1,V1>=1,W20=1] 
* CE 43: start(V1,V,V14,V20) = 0+ times(W20,V,X20):1
     [V>=0,X20=0,W20=0,V1=0] 
* CE 44: start(V1,V,V14,V20) = 0+ times(V1,W20,X20):2
     [V1>=1,X20=0,W20=0,V=0] 
* CE 45: start(V1,V,V14,V20) = 0+ times(V1,V,W20):3
     [W20+1>=V1+V,V>=1,V1>=1] 
* CE 46: start(V1,V,V14,V20) = 0+ plus(W20,V,V):1
     [V>=0,W20=0,V1=0] 
* CE 47: start(V1,V,V14,V20) = 0+ plus(V1,W20,X20):2
     [X20>=V1,V1>=1,X20=V1+W20,X20=V1+V] 
* CE 48: start(V1,V,V14,V20) = 1+ loop(W20,X20,Y20,Z20):3
     [Z20=1,Y20=1,X20=1,W20=0,V1=0] 
* CE 49: start(V1,V,V14,V20) = 1+ loop(V1,W20,X20,Y20):8
     [Y20>=2*V1,V1>=1,X20=1,W20=1] 
* CE 50: start(V1,V,V14,V20) = 0+ loop(W20,X20,Y20,Z20):1
     [Z20=0,Y20=0,X20=0,W20=0,V14=0,V=0,V1=0] 
* CE 51: start(V1,V,V14,V20) = 0+ loop(W20,X20,V14,Y20):2
     [Y20>=V14,V14>=1,X20=0,W20=0,V=0,V1=0] 
* CE 52: start(V1,V,V14,V20) = 0+ loop(W20,V,V14,V14):3
     [V14>=0,V>=1,W20=0,V1=0] 
* CE 53: start(V1,V,V14,V20) = 0+ loop(V1,W20,X20,Y20):4
     [V1>=1,Y20=0,X20=0,W20=0,V14=0,V=0] 
* CE 54: start(V1,V,V14,V20) = 0+ loop(V1,W20,V14,X20):5
     [X20+1>=2*V1+V14,V14>=1,V1>=1,W20=0,V=0] 
* CE 55: start(V1,V,V14,V20) = 0+ loop(V1,V,W20,X20):6
     [V1>=V,V>=1,X20=0,W20=0,V14=0] 
* CE 56: start(V1,V,V14,V20) = 0+ loop(V1,V,V14,V14):7
     [V>=V1+1,V14>=0,V1>=1] 
* CE 57: start(V1,V,V14,V20) = 0+ loop(V1,V,V14,W20):8
     [V+W20>=2*V1+V14,V1>=V,V14>=1,V>=1] 

### Cost equations --> "Loop" of start/4 
* CEs [55] --> Loop 26 
* CEs [40,44,53,54] --> Loop 27 
* CEs [32,41,42,45,47,49,56,57] --> Loop 28 
* CEs [33,34,35,36,37,38,39,43,46,48,50,51,52] --> Loop 29 

#### Loops of start/4 
* Loop 26: start(V1,V,V14,V20) [V1>=V,V>=1,V14=0] 
* Loop 27: start(V1,V,V14,V20) [V1>=0,V=0] 
* Loop 28: start(V1,V,V14,V20) [V1>=1] 
* Loop 29: start(V1,V,V14,V20) [V1=0] 

### Ranking functions of CR start(V1,V,V14,V20) 

#### Partial ranking functions of CR start(V1,V,V14,V20) 


### Resulting Chains:start(V1,V,V14,V20) 
* [29]
* [28]
* [27]
* [26]


### Merging Chains  start/4 into  External patterns of execution 
* [[29]] --> 1 
* [[27]] --> 2 
* [[26],[28]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [13]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[13],12]: 1*it(13)+1
  Such that:it(13) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [12]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [16] 

 * loop 16:times(V1,V,Out) -> [times(V1',V',Out')] 
2
#### Cost of phase [16]:times(V1,V,Out) -> [times(V1',V',Out')] 
2*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'

#### Cost of loops [15] 

 * loop 15:times(V1,V,Out) -> [times(V1',V',Out')] 
1*s(2)+2
  Such that:s(2) =< V'

#### Cost of phase [15]:times(V1,V,Out) -> [times(V1',V',Out')] 
2*it(15)+1*s(3)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'
aux(1) =< V
s(3) =< it(15)*aux(1)

#### Cost of chains of times(V1,V,Out):
* Chain [[16],14]: 2*it(16)+1
  Such that:it(16) =< V1

  with precondition: [V=0,Out=0,V1>=1] 

* Chain [[15],14]: 2*it(15)+1*s(3)+1
  Such that:it(15) =< V1
aux(1) =< V
s(3) =< it(15)*aux(1)

  with precondition: [V1>=1,V>=1,Out+1>=V+V1] 

* Chain [14]: 1
  with precondition: [V1=0,Out=0,V>=0] 


#### Cost of loops [19] 

 * loop 19:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1
#### Cost of phase [19]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of phase [19]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'
it(19) =< V
it(19) =< V-V'

#### Cost of chains of lt(V1,V,Out):
* Chain [[19],18]: 1*it(19)+1
  Such that:it(19) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[19],17]: 1*it(19)+1
  Such that:it(19) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [18]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [17]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [23] 

 * loop 23:loop(V1,V,V14,Out) -> [loop(V1',V',V14',Out')] 
1*s(6)+4
  Such that:s(6) =< V'

#### Cost of phase [23]:loop(V1,V,V14,Out) -> [loop(V1',V',V14',Out')] 
4*it(23)+1*s(7)+0
  Such that:aux(2) =< V1+1
it(23) =< V1-V+1
it(23) =< V1-V-V1'+V'
s(7) =< it(23)*aux(2)

#### Cost of loops [22] 

 * loop 22:loop(V1,V,V14,Out) -> [loop(V1',V',V14',Out')] 
1*s(14)+2*s(12)+1*s(15)+4
  Such that:s(12) =< V14
s(13) =< V'
s(14) =< s(13)
s(15) =< s(12)*s(13)

#### Cost of phase [22]:loop(V1,V,V14,Out) -> [loop(V1',V',V14',Out')] 
4*it(22)+1*s(16)+2*s(17)+1*s(18)+0
  Such that:s(13) =< V1+1
it(22) =< V1-V+1
it(22) =< V1-V-V1'+V'
aux(7) =< s(13)
s(19) =< it(22)*aux(7)
s(16) =< s(19)

#### Cost of chains of loop(V1,V,V14,Out):
* Chain [[23],20]: 4*it(23)+1*s(4)+1*s(7)+3
  Such that:s(4) =< V1
aux(2) =< V1+1
it(23) =< V1-V+1
s(7) =< it(23)*aux(2)

  with precondition: [V14=0,Out=0,V>=1,V1>=V] 

* Chain [[22],20]: 4*it(22)+1*s(4)+1*s(16)+3*s(17)+3
  Such that:s(4) =< V1
s(13) =< V1+1
it(22) =< V1-V+1
aux(7) =< s(13)
s(19) =< it(22)*aux(7)
s(16) =< s(19)

  with precondition: [V>=1,V14>=1,V1>=V,Out+V>=2*V1+V14] 

* Chain [25,[23],20]: 5*it(23)+1*s(7)+7
  Such that:aux(2) =< V1+1
aux(9) =< V1
it(23) =< aux(9)
s(7) =< it(23)*aux(2)

  with precondition: [V=0,V14=0,Out=0,V1>=1] 

* Chain [25,21]: 7
  with precondition: [V1=0,V=0,V14=0,Out=0] 

* Chain [24,[22],20]: 5*it(22)+1*s(16)+3*s(17)+2*s(20)+1*s(22)+7
  Such that:s(21) =< 1
s(13) =< V1+1
s(20) =< V14
aux(10) =< V1
it(22) =< aux(10)
aux(7) =< s(13)
s(19) =< it(22)*aux(7)
s(16) =< s(19)
s(22) =< s(20)*s(21)

  with precondition: [V=0,V1>=1,V14>=1,Out+1>=2*V1+V14] 

* Chain [24,21]: 2*s(20)+1*s(22)+7
  Such that:s(21) =< 1
s(20) =< V14
s(22) =< s(20)*s(21)

  with precondition: [V1=0,V=0,V14>=1,Out>=V14] 

* Chain [21]: 3
  with precondition: [V1=0,V14=Out,V>=1,V14>=0] 

* Chain [20]: 1*s(4)+3
  Such that:s(4) =< V1

  with precondition: [V14=Out,V1>=1,V14>=0,V>=V1+1] 


#### Cost of chains of start(V1,V,V14,V20):
* Chain [29]: 4*s(23)+8*s(25)+1*s(26)+6*s(28)+3*s(30)+1*s(43)+3*s(44)+2*s(46)+1*s(47)+7
  Such that:s(45) =< 1
s(46) =< V14
aux(11) =< V
aux(12) =< V+1
aux(13) =< V-V14
aux(14) =< V14+1
aux(15) =< V20
s(23) =< aux(11)
s(25) =< aux(13)
s(28) =< aux(15)
s(47) =< s(46)*s(45)
s(26) =< s(25)*aux(12)
s(30) =< s(28)*aux(14)
s(41) =< aux(12)
s(42) =< s(25)*s(41)
s(43) =< s(42)

  with precondition: [V1=0] 

* Chain [28]: 1*s(48)+11*s(49)+1*s(52)+1*s(59)+6*s(60)+4*s(64)+1*s(67)+4
  Such that:s(64) =< V1-V+1
aux(17) =< V1
aux(18) =< V1+1
aux(19) =< V
s(49) =< aux(17)
s(48) =< aux(19)
s(52) =< s(49)*aux(19)
s(57) =< aux(18)
s(66) =< s(64)*s(57)
s(67) =< s(66)
s(58) =< s(49)*s(57)
s(59) =< s(58)

  with precondition: [V1>=1] 

* Chain [27]: 12*s(69)+1*s(73)+2*s(76)+1*s(81)+1*s(82)+3*s(83)+7
  Such that:s(74) =< 1
s(76) =< V14
aux(20) =< V1
aux(21) =< V1+1
s(69) =< aux(20)
s(79) =< aux(21)
s(80) =< s(69)*s(79)
s(81) =< s(80)
s(82) =< s(76)*s(74)
s(73) =< s(69)*aux(21)

  with precondition: [V=0,V1>=0] 

* Chain [26]: 1*s(84)+4*s(86)+1*s(87)+3
  Such that:s(84) =< V1
s(85) =< V1+1
s(86) =< V1-V+1
s(87) =< s(86)*s(85)

  with precondition: [V14=0,V>=1,V1>=V] 


Closed-form bounds of start(V1,V,V14,V20): 
-------------------------------------
* Chain [29] with precondition: [V1=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28] with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [V=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26] with precondition: [V14=0,V>=1,V1>=V] 
    - Upper bound: 4*V1-4*V+4+ (V1+3+ (V1-V+1)* (V1+1)) 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V14,V20): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 51 ms.
   - Backward Invariants 23 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 98 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 133 ms.
   - Equation cost structures 47 ms.
   - Phase cost structures 54 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 338 ms.

