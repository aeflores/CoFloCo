
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [double/2]
1. recursive  : [gt/3]
2. recursive  : [aver/3,if/4]
3. recursive  : [plus/3]
4. non_recursive  : [average/3]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into double/2
1. SCC is partially evaluated into gt/3
2. SCC is partially evaluated into aver/3
3. SCC is partially evaluated into plus/3
4. SCC is partially evaluated into average/3
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations double/2 
* CE 17 is refined into CE [19] 
* CE 16 is refined into CE [20] 


#### Refined cost equations double/2 
* CE 19: double(V,Out) = 1+ double(W,X)
     [W>=0,X+2=Out,W+1=V] 
* CE 20: double(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of double/2 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of double/2 
* Loop 13: double(V,Out) [Out=0,V=0] 
* Loop 14: double(V,Out)->  double(V',Out')
                  [V'>=0,Out=Out'+2,V'+1=V] 

### Ranking functions of CR double(V,Out) 
* RF of phase [14]: [V]

#### Partial ranking functions of CR double(V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V


### Resulting Chains:double(V,Out) 
* [[14],13]
* [13]


### Merging Chains  double/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[14]]] --> 2 


### Specialization of cost equations gt/3 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 11 is refined into CE [23] 


#### Refined cost equations gt/3 
* CE 21: gt(V,V1,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 22: gt(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 23: gt(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of gt/3 
* CEs [22] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [21] --> Loop 17 

#### Loops of gt/3 
* Loop 15: gt(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 16: gt(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 17: gt(V,V1,Out)->  gt(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR gt(V,V1,Out) 
* RF of phase [17]: [V,V1]

#### Partial ranking functions of CR gt(V,V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V
    V1


### Resulting Chains:gt(V,V1,Out) 
* [[17],16]
* [[17],15]
* [16]
* [15]


### Merging Chains  gt/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[16,[17]]] --> 3 
* [[15,[17]]] --> 4 


### Specialization of cost equations aver/3 
* CE 10 is refined into CE [24,25] 
* CE 9 is refined into CE [26,27,28] 


#### Refined cost equations aver/3 
* CE 24: aver(V,V1,Out) = 2+ double(W1,X1):1+ gt(V,Y1,Z1):2+ aver(V,A2,Out)
     [V>=1,A2=1,Z1=1,Y1=0,X1=0,W1=0,V1=0] 
* CE 25: aver(V,V1,Out) = 2+ double(W1,X1):2+ gt(V,X1,Y1):4+ aver(V,Z1,Out)
     [V>=X1+1,X1>=2,X1+2=2*Z1,X1=2*W1,X1=2*V1,Y1=1] 
* CE 26: aver(V,V1,Out) = 2+ double(W1,X1):1+ gt(Y1,Z1,A2):1
     [A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0,V=0] 
* CE 27: aver(V,V1,Out) = 2+ double(W1,X1):2+ gt(Y1,X1,Z1):1
     [X1>=2,X1=2*W1,X1=2*Out,X1=2*V1,Z1=0,Y1=0,V=0] 
* CE 28: aver(V,V1,Out) = 2+ double(W1,X1):2+ gt(V,X1,Y1):3
     [X1>=V,X1>=2,V>=1,X1=2*W1,X1=2*Out,X1=2*V1,Y1=0] 

### Cost equations --> "Loop" of aver/3 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of aver/3 
* Loop 18: aver(A,B,B) [2*B>=A,B>=1,A>=1] 
* Loop 19: aver(A,B,B) [B>=1,A=0] 
* Loop 20: aver(V,V1,Out) [Out=0,V1=0,V=0] 
* Loop 21: aver(V,V1,Out)->  aver(V,V1',Out)
                  [V>=2*V1+1,V1>=1,V1+1=V1'] 
* Loop 22: aver(V,V1,Out)->  aver(V,V1',Out)
                  [V>=1,V1'=1,V1=0] 

### Ranking functions of CR aver(V,V1,Out) 
* RF of phase [21]: [V/2-V1]

#### Partial ranking functions of CR aver(V,V1,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V/2-V1


### Resulting Chains:aver(V,V1,Out) 
* [[21],18]
* [22,[21],18]
* [22,18]
* [20]
* [19]
* [18]


### Merging Chains  aver/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18,22]] --> 3 
* [[18,[21],22]] --> 4 
* [[18]] --> 5 
* [[18,[21]]] --> 6 


### Specialization of cost equations plus/3 
* CE 15 is refined into CE [29] 
* CE 14 is refined into CE [30] 


#### Refined cost equations plus/3 
* CE 29: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 30: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [30] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of plus/3 
* Loop 23: plus(A,B,B) [B>=0,A=0] 
* Loop 24: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [24]: [V]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[24],23]
* [23]


### Merging Chains  plus/3 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[24]]] --> 2 


### Specialization of cost equations average/3 
* CE 18 is refined into CE [31,32,33,34,35] 


#### Refined cost equations average/3 
* CE 31: average(V,V1,Out) = 1+ plus(W1,X1,Y1):1+ aver(Z1,A2,B2):1
     [B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0,V=0] 
* CE 32: average(V,V1,Out) = 1+ plus(W1,V1,V1):1+ aver(V1,X1,Y1):3
     [V1>=1,2>=V1,Y1=1,X1=0,W1=0,Out=1,V=0] 
* CE 33: average(V,V1,Out) = 1+ plus(W1,V1,V1):1+ aver(V1,X1,Out):4
     [2*Out>=V1,V1+1>=2*Out,Out>=2,X1=0,W1=0,V=0] 
* CE 34: average(V,V1,Out) = 1+ plus(V,W1,X1):2+ aver(X1,Y1,Z1):3
     [X1>=V,V>=1,2>=X1,X1=V+W1,X1=V+V1,Z1=1,Y1=0,Out=1] 
* CE 35: average(V,V1,Out) = 1+ plus(V,W1,X1):2+ aver(X1,Y1,Out):4
     [2*Out>=X1,X1>=V,X1+1>=2*Out,Out>=2,V>=1,X1=V+W1,X1=V+V1,Y1=0] 

### Cost equations --> "Loop" of average/3 
* CEs [35] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [33] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [31] --> Loop 29 

#### Loops of average/3 
* Loop 25: average(V,V1,Out) [2*Out>=V+V1,V+V1+1>=2*Out,Out>=2,V1>=0,V>=1] 
* Loop 26: average(V,V1,Out) [2>=V+V1,V1>=0,V>=1,Out=1] 
* Loop 27: average(V,V1,Out) [2*Out>=V1,V1+1>=2*Out,Out>=2,V=0] 
* Loop 28: average(V,V1,Out) [V1>=1,2>=V1,Out=1,V=0] 
* Loop 29: average(V,V1,Out) [Out=0,V1=0,V=0] 

### Ranking functions of CR average(V,V1,Out) 

#### Partial ranking functions of CR average(V,V1,Out) 


### Resulting Chains:average(V,V1,Out) 
* [29]
* [28]
* [27]
* [26]
* [25]


### Merging Chains  average/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 
* [[25]] --> 5 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [36,37,38] 
* CE 2 is refined into CE [39] 
* CE 4 is refined into CE [40,41,42,43] 
* CE 5 is refined into CE [44,45] 
* CE 6 is refined into CE [46,47] 
* CE 7 is refined into CE [48,49,50,51,52] 
* CE 8 is refined into CE [53,54,55,56,57,58] 


#### Refined cost equations start/3 
* CE 36: start(V,V1,V16) = 1+ aver(W16,X16,X16):2
     [X16>=1,X16=V16+1,W16=0,V1=0,V=1] 
* CE 37: start(V,V1,V16) = 1+ aver(V1,W16,W16):5
     [2*W16>=V1,W16>=1,V1>=1,W16=V16+1,V=1] 
* CE 38: start(V,V1,V16) = 1+ aver(V1,W16,X16):6
     [X16>=W16+1,2*X16>=V1,V1+1>=2*X16,W16>=1,W16=V16+1,V=1] 
* CE 39: start(V,V1,V16) = 1
     [V16>=0,V1>=0,V=0] 
* CE 40: start(V,V1,V16) = 0+ gt(W16,V1,X16):1
     [V1>=0,X16=0,W16=0,V=0] 
* CE 41: start(V,V1,V16) = 0+ gt(V,W16,X16):2
     [V>=1,X16=1,W16=0,V1=0] 
* CE 42: start(V,V1,V16) = 0+ gt(V,V1,W16):3
     [V1>=V,V>=1,W16=0] 
* CE 43: start(V,V1,V16) = 0+ gt(V,V1,W16):4
     [V>=V1+1,V1>=1,W16=1] 
* CE 44: start(V,V1,V16) = 0+ plus(W16,V1,V1):1
     [V1>=0,W16=0,V=0] 
* CE 45: start(V,V1,V16) = 0+ plus(V,W16,X16):2
     [X16>=V,V>=1,X16=V+W16,X16=V+V1] 
* CE 46: start(V,V1,V16) = 0+ double(W16,X16):1
     [X16=0,W16=0,V=0] 
* CE 47: start(V,V1,V16) = 0+ double(W16,X16):2
     [X16>=2,X16=2*W16,X16=2*V] 
* CE 48: start(V,V1,V16) = 0+ average(W16,X16,Y16):1
     [Y16=0,X16=0,W16=0,V1=0,V=0] 
* CE 49: start(V,V1,V16) = 0+ average(W16,V1,X16):2
     [V1>=1,2>=V1,X16=1,W16=0,V=0] 
* CE 50: start(V,V1,V16) = 0+ average(W16,V1,X16):3
     [2*X16>=V1,V1+1>=2*X16,X16>=2,W16=0,V=0] 
* CE 51: start(V,V1,V16) = 0+ average(V,V1,W16):4
     [2>=V+V1,V1>=0,V>=1,W16=1] 
* CE 52: start(V,V1,V16) = 0+ average(V,V1,W16):5
     [2*W16>=V+V1,V+V1+1>=2*W16,W16>=2,V1>=0,V>=1] 
* CE 53: start(V,V1,V16) = 0+ aver(W16,X16,Y16):1
     [Y16=0,X16=0,W16=0,V1=0,V=0] 
* CE 54: start(V,V1,V16) = 0+ aver(W16,V1,V1):2
     [V1>=1,W16=0,V=0] 
* CE 55: start(V,V1,V16) = 0+ aver(V,W16,X16):3
     [V>=1,2>=V,X16=1,W16=0,V1=0] 
* CE 56: start(V,V1,V16) = 0+ aver(V,W16,X16):4
     [2*X16>=V,V+1>=2*X16,X16>=2,W16=0,V1=0] 
* CE 57: start(V,V1,V16) = 0+ aver(V,V1,V1):5
     [2*V1>=V,V1>=1,V>=1] 
* CE 58: start(V,V1,V16) = 0+ aver(V,V1,W16):6
     [W16>=V1+1,2*W16>=V,V+1>=2*W16,V1>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36,41,42,43,45,47,51,52,55,56,57,58] --> Loop 32 
* CEs [39,40,44,46,48,49,50,53,54] --> Loop 33 

#### Loops of start/3 
* Loop 30: start(V,V1,V16) [V1>=2*V16+3,V16>=0,V=1] 
* Loop 31: start(V,V1,V16) [2*V16+2>=V1,V16>=0,V1>=1,V=1] 
* Loop 32: start(V,V1,V16) [V>=1] 
* Loop 33: start(V,V1,V16) [V=0] 

### Ranking functions of CR start(V,V1,V16) 

#### Partial ranking functions of CR start(V,V1,V16) 


### Resulting Chains:start(V,V1,V16) 
* [33]
* [32]
* [31]
* [30]


### Merging Chains  start/3 into  External patterns of execution 
* [[33]] --> 1 
* [[31],[32]] --> 2 
* [[30]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:double(V,Out) -> [double(V',Out')] 
1
#### Cost of phase [14]:double(V,Out) -> [double(V',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'

#### Cost of chains of double(V,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< Out/2

  with precondition: [2*V=Out,V>=1] 

* Chain [13]: 1
  with precondition: [V=0,Out=0] 


#### Cost of loops [17] 

 * loop 17:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1
#### Cost of phase [17]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of phase [17]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'
it(17) =< V1
it(17) =< V1-V1'

#### Cost of chains of gt(V,V1,Out):
* Chain [[17],16]: 1*it(17)+1
  Such that:it(17) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[17],15]: 1*it(17)+1
  Such that:it(17) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [16]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [15]: 1
  with precondition: [V1=0,Out=1,V>=1] 


#### Cost of loops [21] 

 * loop 21:aver(V,V1,Out) -> [aver(V',V1',Out')] 
1*s(5)+1*s(6)+4
  Such that:s(5) =< V1'
s(6) =< 2*V1'

#### Cost of phase [21]:aver(V,V1,Out) -> [aver(V',V1',Out')] 
4*it(21)+1*s(7)+1*s(8)+0
  Such that:aux(1) =< V/2+1/2
it(21) =< V/2-V1
it(21) =< V/2-V1-V'/2+V1'
aux(2) =< it(21)*aux(1)
s(7) =< it(21)*aux(1)
s(8) =< aux(2)*2

#### Cost of chains of aver(V,V1,Out):
* Chain [[21],18]: 4*it(21)+1*s(1)+1*s(2)+1*s(7)+1*s(8)+4
  Such that:s(2) =< V
aux(1) =< V/2+1/2
it(21) =< V/2-V1
s(1) =< Out
aux(2) =< it(21)*aux(1)
s(7) =< it(21)*aux(1)
s(8) =< aux(2)*2

  with precondition: [V1>=1,V+1>=2*Out,2*Out>=V,Out>=V1+1] 

* Chain [22,[21],18]: 4*it(21)+1*s(1)+1*s(2)+1*s(7)+1*s(8)+8
  Such that:s(2) =< V
it(21) =< V/2
aux(1) =< V/2+1/2
s(1) =< Out
aux(2) =< it(21)*aux(1)
s(7) =< it(21)*aux(1)
s(8) =< aux(2)*2

  with precondition: [V1=0,Out>=2,V+1>=2*Out,2*Out>=V] 

* Chain [22,18]: 1*s(1)+1*s(2)+8
  Such that:s(1) =< 1
s(2) =< V

  with precondition: [V1=0,Out=1,2>=V,V>=1] 

* Chain [20]: 4
  with precondition: [V=0,V1=0,Out=0] 

* Chain [19]: 1*s(9)+4
  Such that:s(9) =< V1

  with precondition: [V=0,V1=Out,V1>=1] 

* Chain [18]: 1*s(1)+1*s(2)+4
  Such that:s(2) =< V
s(1) =< V1

  with precondition: [V1=Out,V>=1,V1>=1,2*V1>=V] 


#### Cost of loops [24] 

 * loop 24:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [24]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of chains of plus(V,V1,Out):
* Chain [[24],23]: 1*it(24)+1
  Such that:it(24) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [23]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of chains of average(V,V1,Out):
* Chain [29]: 6
  with precondition: [V=0,V1=0,Out=0] 

* Chain [28]: 1*s(10)+1*s(11)+10
  Such that:s(10) =< 1
s(11) =< V1

  with precondition: [V=0,Out=1,2>=V1,V1>=1] 

* Chain [27]: 1*s(12)+4*s(13)+1*s(15)+1*s(17)+1*s(18)+10
  Such that:s(12) =< V1
s(13) =< V1/2
aux(3) =< V1/2+1/2
s(15) =< aux(3)
s(16) =< s(13)*aux(3)
s(17) =< s(13)*aux(3)
s(18) =< s(16)*2

  with precondition: [V=0,Out>=2,V1+1>=2*Out,2*Out>=V1] 

* Chain [26]: 1*s(19)+1*s(20)+1*s(21)+10
  Such that:s(20) =< 1
s(19) =< V
s(21) =< V+V1

  with precondition: [Out=1,V>=1,V1>=0,2>=V+V1] 

* Chain [25]: 1*s(22)+1*s(23)+4*s(24)+1*s(26)+1*s(28)+1*s(29)+10
  Such that:s(22) =< V
s(23) =< V+V1
s(24) =< V/2+V1/2
aux(4) =< V/2+V1/2+1/2
s(26) =< aux(4)
s(27) =< s(24)*aux(4)
s(28) =< s(24)*aux(4)
s(29) =< s(27)*2

  with precondition: [V>=1,V1>=0,Out>=2,V+V1+1>=2*Out,2*Out>=V+V1] 


#### Cost of chains of start(V,V1,V16):
* Chain [33]: 1*s(30)+3*s(31)+4*s(33)+1*s(35)+1*s(37)+1*s(38)+10
  Such that:s(30) =< 1
s(33) =< V1/2
s(34) =< V1/2+1/2
aux(5) =< V1
s(31) =< aux(5)
s(35) =< s(34)
s(36) =< s(33)*s(34)
s(37) =< s(33)*s(34)
s(38) =< s(36)*2

  with precondition: [V=0] 

* Chain [32]: 1*s(40)+9*s(41)+2*s(42)+2*s(45)+2*s(47)+4*s(50)+1*s(52)+1*s(54)+1*s(55)+4*s(59)+2*s(61)+1*s(63)+1*s(64)+4*s(69)+1*s(72)+1*s(73)+10
  Such that:s(59) =< V/2
s(69) =< V/2-V1
s(50) =< V/2+V1/2
s(51) =< V/2+V1/2+1/2
s(40) =< V16+1
aux(8) =< 1
aux(9) =< V
aux(10) =< V+V1
aux(11) =< V/2+1/2
aux(12) =< V1
s(45) =< aux(8)
s(41) =< aux(9)
s(47) =< aux(10)
s(42) =< aux(12)
s(52) =< s(51)
s(53) =< s(50)*s(51)
s(54) =< s(50)*s(51)
s(55) =< s(53)*2
s(61) =< aux(11)
s(62) =< s(59)*aux(11)
s(63) =< s(59)*aux(11)
s(64) =< s(62)*2
s(71) =< s(69)*aux(11)
s(72) =< s(69)*aux(11)
s(73) =< s(71)*2

  with precondition: [V>=1] 

* Chain [31]: 1*s(74)+1*s(75)+5
  Such that:s(74) =< V1
s(75) =< V16+1

  with precondition: [V=1,V1>=1,V16>=0,2*V16+2>=V1] 

* Chain [30]: 1*s(76)+4*s(78)+1*s(79)+1*s(81)+1*s(82)+5
  Such that:s(76) =< V1
s(78) =< V1/2-V16
aux(13) =< V1/2+1/2
s(79) =< aux(13)
s(80) =< s(78)*aux(13)
s(81) =< s(78)*aux(13)
s(82) =< s(80)*2

  with precondition: [V=1,V16>=0,V1>=2*V16+3] 


Closed-form bounds of start(V,V1,V16): 
-------------------------------------
* Chain [33] with precondition: [V=0] 
    - Upper bound: nat(V1)*3+11+nat(V1/2+1/2)+nat(V1/2+1/2)*3*nat(V1/2)+nat(V1/2)*4 
    - Complexity: n^2 
* Chain [32] with precondition: [V>=1] 
    - Upper bound: 9*V+12+nat(V1)*2+nat(V+V1)*2+nat(V16+1)+nat(V/2+V1/2+1/2)+nat(V/2+V1/2+1/2)*3*nat(V/2+V1/2)+nat(V/2+V1/2)*4+ (V+1)+ (3/2*V+3/2)*nat(V/2-V1)+V/2* (3/2*V+3/2)+nat(V/2-V1)*4+2*V 
    - Complexity: n^2 
* Chain [31] with precondition: [V=1,V1>=1,V16>=0,2*V16+2>=V1] 
    - Upper bound: V1+V16+6 
    - Complexity: n 
* Chain [30] with precondition: [V=1,V16>=0,V1>=2*V16+3] 
    - Upper bound: 2*V1-4*V16+ (3/2*V1+11/2+ (V1/2-V16)* (3/2*V1+3/2)) 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V16): nat(V1)+5+max([max([nat(V16+1),nat(V1/2+1/2)*3*nat(V1/2-V16)+nat(V1/2+1/2)+nat(V1/2-V16)*4]),nat(V1)+6+max([nat(V1/2+1/2)+nat(V1)+nat(V1/2+1/2)*3*nat(V1/2)+nat(V1/2)*4,9*V+1+nat(V+V1)*2+nat(V16+1)+nat(V/2+V1/2+1/2)+nat(V/2+V1/2+1/2)*3*nat(V/2+V1/2)+nat(V/2+V1/2)*4+ (V+1)+ (3/2*V+3/2)*nat(V/2-V1)+V/2* (3/2*V+3/2)+nat(V/2-V1)*4+2*V])]) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 45 ms.
* Invariants computed in 108 ms.
   - Backward Invariants 58 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 263 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 306 ms.
   - Equation cost structures 144 ms.
   - Phase cost structures 54 ms.
   - Chain cost structures 45 ms.
   - Solving cost expressions 14 ms.
* Total analysis performed in 827 ms.

