
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [gt/3]
1. non_recursive  : [id/2]
2. non_recursive  : [if/4]
3. recursive  : [minus/3]
4. non_recursive  : [not/2]
5. recursive  : [plus/3]
6. recursive  : [quot/3]
7. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into gt/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into if/4
3. SCC is partially evaluated into minus/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into plus/3
6. SCC is partially evaluated into quot/3
7. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations gt/3 
* CE 25 is refined into CE [26] 
* CE 22 is refined into CE [27] 
* CE 23 is refined into CE [28] 
* CE 24 is refined into CE [29] 


#### Refined cost equations gt/3 
* CE 26: gt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 27: gt(V1,V,Out) = 1
     [V1>=1,Out=2,V=3] 
* CE 28: gt(V1,V,Out) = 1
     [V>=0,Out=1,V1=3] 
* CE 29: gt(V1,V,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gt/3 
* CEs [29] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of gt/3 
* Loop 18: gt(V1,V,Out)->  gt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 19: gt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 20: gt(V1,V,Out) [V1>=1,Out=2,V=3] 
* Loop 21: gt(V1,V,Out) [V>=0,Out=1,V1=3] 

### Ranking functions of CR gt(V1,V,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR gt(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:gt(V1,V,Out) 
* [[18],21]
* [[18],20]
* [[18],19]
* [21]
* [20]
* [19]


### Merging Chains  gt/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19],[19,[18]]] --> 3 
* [[21,[18]]] --> 4 
* [[20,[18]]] --> 5 


### Specialization of cost equations if/4 
* CE 21 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 20 is refined into CE [32] 


#### Refined cost equations if/4 
* CE 30: if(V1,V,V14,Out) = 0
     [V14>=0,V>=0,V1>=0,Out=0] 
* CE 31: if(A,B,C,B) = 1
     [C>=0,B>=0,A=2] 
* CE 32: if(A,B,C,C) = 1
     [C>=0,B>=0,A=1] 

### Cost equations --> "Loop" of if/4 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [32] --> Loop 24 

#### Loops of if/4 
* Loop 22: if(V1,V,V14,Out) [V14>=0,V>=0,V1>=0,Out=0] 
* Loop 23: if(A,B,C,B) [C>=0,B>=0,A=2] 
* Loop 24: if(A,B,C,C) [C>=0,B>=0,A=1] 

### Ranking functions of CR if(V1,V,V14,Out) 

#### Partial ranking functions of CR if(V1,V,V14,Out) 


### Resulting Chains:if(V1,V,V14,Out) 
* [24]
* [23]
* [22]


### Merging Chains  if/4 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations minus/3 
* CE 11 is refined into CE [33] 
* CE 9 is refined into CE [34] 
* CE 10 is refined into CE [35] 


#### Refined cost equations minus/3 
* CE 33: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 34: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 35: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [35] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [34] --> Loop 27 

#### Loops of minus/3 
* Loop 25: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 26: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 27: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [25]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  minus/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26],[26,[25]]] --> 2 
* [[27,[25]]] --> 3 


### Specialization of cost equations plus/3 
* CE 18 is refined into CE [36] 
* CE 17 is refined into CE [37] 
* CE 15 is refined into CE [38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130] 
* CE 16 is refined into CE [131,132,133,134,135,136,137,138,139] 


#### Refined cost equations plus/3 
* CE 36: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: plus(A,B,B) = 1
     [B>=0,A=3] 
* CE 38: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):1+ if(H2,I2,X1,J2):2+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=3,J2=3,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 39: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):1+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 40: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 41: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):1+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=3,N2=3,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 42: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 43: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 44: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):3+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=0,C2=0,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 45: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):2+ if(H2,I2,X1,X1):1+ plus(X1,X1,J2)
     [X1>=4,5>=X1,J2+2=Out,X1+1=V,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 46: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):2+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 47: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 48: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 49: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 50: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 51: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):1+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=0,N2=3,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 52: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 53: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 54: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):3+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=0,D2=0,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 55: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):2+ if(I2,J2,X1,X1):1+ plus(K2,X1,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 56: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):2+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 57: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 58: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):2+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=3,N2=3,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 59: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 60: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 61: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):2+ if(H2,W1,I2,J2):1+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=3,J2=3,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 62: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):2+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 63: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 64: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):3+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=0,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 65: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):1+ if(H2,W1,I2,W1):2+ plus(W1,W1,J2)
     [W1>=4,6>=W1,J2+2=Out,W1+1=V1,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 66: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):1+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 67: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 68: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):2+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=0,N2=3,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 69: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 70: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 71: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 72: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 73: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 74: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):3+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=0,D2=0,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 75: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):1+ if(I2,W1,J2,W1):2+ plus(K2,W1,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 76: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):1+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 77: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 78: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 79: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 80: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 81: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 82: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 83: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 84: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1>=0,W1>=0,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 85: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 86: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 87: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 88: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 89: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 90: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 91: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=3,L2=3,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 92: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=3,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 93: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=3,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 94: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):3+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=0,A2=0,Z1=1,Y1=1] 
* CE 95: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,W1):2+ plus(X1,W1,G2)
     [X1+3>=W1,W1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 96: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 97: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 98: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,X1):1+ plus(X1,X1,G2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 99: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 100: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 101: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 102: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 103: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 104: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=1,Y1=1] 
* CE 105: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 106: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 107: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 108: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 109: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 110: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 111: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=3,L2=3,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 112: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=3,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 113: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=3,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 114: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):3+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=0,A2=0,Z1=2,Y1=2] 
* CE 115: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,W1):2+ plus(W1,W1,G2)
     [X1+3>=W1,W1+2>=X1,W1>=4,X1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 116: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 117: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 118: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,X1):1+ plus(W1,X1,G2)
     [W1+2>=X1,X1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 119: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 120: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 121: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 122: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 123: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 124: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=2,Y1=2] 
* CE 125: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1+2>=X1,W1>=4,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 126: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 127: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 128: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 129: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 130: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 131: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ plus(D2,E2,Out)
     [E2=4,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=3,V1=4] 
* CE 132: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ plus(D2,E2,Out)
     [E2=4,D2=0,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=3,V1=4] 
* CE 133: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ plus(D2,E2,Out)
     [E2=4,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=3,V1=4] 
* CE 134: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ plus(D2,E2,Out)
     [E2=4,D2=0,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=3,V1=4] 
* CE 135: plus(V1,V,Out) = 3+ gt(V,V,W1):3+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=0,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=0,W1=0] 
* CE 136: plus(V1,V,Out) = 3+ gt(V,V,W1):4+ if(X1,V,V,V):1+ plus(V,Y1,Out)
     [V>=4,V+1=Y1,V+1=V1,X1=1,W1=1] 
* CE 137: plus(V1,V,Out) = 3+ gt(V,V,W1):4+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=4,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=1,W1=1] 
* CE 138: plus(V1,V,Out) = 3+ gt(V,V,W1):5+ if(X1,V,V,V):2+ plus(V,Y1,Out)
     [V>=4,V+1=Y1,V+1=V1,X1=2,W1=2] 
* CE 139: plus(V1,V,Out) = 3+ gt(V,V,W1):5+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=4,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=2,W1=2] 

### Cost equations --> "Loop" of plus/3 
* CEs [98] --> Loop 28 
* CEs [95] --> Loop 29 
* CEs [115] --> Loop 30 
* CEs [118] --> Loop 31 
* CEs [136,138] --> Loop 32 
* CEs [99,100] --> Loop 33 
* CEs [116,117] --> Loop 34 
* CEs [125] --> Loop 35 
* CEs [65] --> Loop 36 
* CEs [61] --> Loop 37 
* CEs [62,63,64,66,67] --> Loop 38 
* CEs [91] --> Loop 39 
* CEs [92,93,94,96,97] --> Loop 40 
* CEs [75,85,105] --> Loop 41 
* CEs [71,81,101] --> Loop 42 
* CEs [72,73,74,76,77,82,83,102,103] --> Loop 43 
* CEs [45] --> Loop 44 
* CEs [46,47] --> Loop 45 
* CEs [111] --> Loop 46 
* CEs [112,113,114,119,120] --> Loop 47 
* CEs [55,88,108,128] --> Loop 48 
* CEs [121] --> Loop 49 
* CEs [56,57,122,123] --> Loop 50 
* CEs [38,41,58] --> Loop 51 
* CEs [39,40,42,43,44,59,60] --> Loop 52 
* CEs [48,51,68,78] --> Loop 53 
* CEs [49,50,52,53,54,69,70,79,80,84,86,87,89,90,104,106,107,109,110,124,126,127,129,130] --> Loop 54 
* CEs [131,133] --> Loop 55 
* CEs [132,134,135,137,139] --> Loop 56 
* CEs [36] --> Loop 57 
* CEs [37] --> Loop 58 

#### Loops of plus/3 
* Loop 28: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V=V'+1,V=V1'+1] 
* Loop 29: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V1=V'+1,V=V1'+1] 
* Loop 30: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V'+1,V1=V1'+1] 
* Loop 31: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V=V'+1,V1=V1'+1] 
* Loop 32: plus(V1,V,Out)->  plus(A',V1,Out)
                  [V1>=5,V1=A'+1,V1=V+1] 
* Loop 33: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V=V1'+1,V'=0] 
* Loop 34: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V1'+1,V'=0] 
* Loop 35: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V'+1,V1'=0] 
* Loop 36: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=5,7>=V1,Out=Out'+2,V1=V'+1,V1=V1'+1,V=4] 
* Loop 37: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V1=V1'+1,V'=3,V=4] 
* Loop 38: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V1=V1'+1,V'=0,V=4] 
* Loop 39: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=5,7>=V1,Out=Out'+2,V'=3,V1'=3,V=4] 
* Loop 40: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V=V1'+1,V'=0] 
* Loop 41: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V1=V'+1,V1'=0] 
* Loop 42: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V'=3,V1'=0,V=4] 
* Loop 43: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V'=0,V1'=0,V=4] 
* Loop 44: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V=V'+1,V=V1'+1,V1=4] 
* Loop 45: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V=V1'+1,V'=0,V1=4] 
* Loop 46: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=3,V1'=3,V1=4] 
* Loop 47: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V1=V1'+1,V'=0] 
* Loop 48: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V=V'+1,V1'=0] 
* Loop 49: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=3,V1'=0,V1=4] 
* Loop 50: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=0,V1'=0,V1=4] 
* Loop 51: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V=V1'+1,V'=3,V1=4] 
* Loop 52: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V=V1'+1,V'=0,V1=4] 
* Loop 53: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V'=3,V1'=0,V1=4] 
* Loop 54: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+2,V'=0,V1'=0] 
* Loop 55: plus(V1,V,Out)->  plus(V1',V',Out)
                  [V'=4,V1'=3,V=3,V1=4] 
* Loop 56: plus(V1,V,Out)->  plus(A',V1,Out)
                  [V1>=1,V1=V+1,A'=0] 
* Loop 57: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 58: plus(A,B,B) [B>=0,A=3] 

### Ranking functions of CR plus(V1,V,Out) 

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [28,29,30,31,32,36,37,44,51,55]:
  - RF of loop [28:1,31:1,44:1]:
    V-4 depends on loops [29:1,30:1,32:1,36:1,51:1,55:1] 
  - RF of loop [29:1]:
    V1/2+V/2-3 depends on loops [30:1,36:1] 
  - RF of loop [30:1,32:1,36:1]:
    V1-4 depends on loops [28:1,29:1,44:1,51:1] 
  - RF of loop [31:1]:
    V1-2 depends on loops [28:1,29:1,44:1,51:1] 
  - RF of loop [32:1]:
    V1/2-V/2 depends on loops [28:1,29:1,30:1,44:1,51:1] 
  - RF of loop [37:1]:
    V-3 depends on loops [29:1,30:1,32:1,36:1,51:1,55:1] 
    V1-1 depends on loops [28:1,29:1,44:1,51:1] 
  - RF of loop [51:1]:
    V1/2+V/2-2 depends on loops [30:1,36:1] 
  - RF of loop [55:1]:
    -V+4 depends on loops [28:1,29:1,30:1,31:1,37:1,44:1,51:1] 
    V1-3 depends on loops [28:1,29:1,44:1,51:1] 


### Resulting Chains:plus(V1,V,Out) 
* [[28,29,30,31,32,36,37,44,51,55]]...
* [[28,29,30,31,32,36,37,44,51,55],58]
* [[28,29,30,31,32,36,37,44,51,55],57]
* [[28,29,30,31,32,36,37,44,51,55],56,57]
* [[28,29,30,31,32,36,37,44,51,55],54,57]
* [[28,29,30,31,32,36,37,44,51,55],53,57]
* [[28,29,30,31,32,36,37,44,51,55],52,58]
* [[28,29,30,31,32,36,37,44,51,55],52,57]
* [[28,29,30,31,32,36,37,44,51,55],50,57]
* [[28,29,30,31,32,36,37,44,51,55],49,57]
* [[28,29,30,31,32,36,37,44,51,55],48,57]
* [[28,29,30,31,32,36,37,44,51,55],47,58]
* [[28,29,30,31,32,36,37,44,51,55],47,57]
* [[28,29,30,31,32,36,37,44,51,55],46,58]
* [[28,29,30,31,32,36,37,44,51,55],46,57]
* [[28,29,30,31,32,36,37,44,51,55],46,54,57]
* [[28,29,30,31,32,36,37,44,51,55],45,57]
* [[28,29,30,31,32,36,37,44,51,55],43,57]
* [[28,29,30,31,32,36,37,44,51,55],42,57]
* [[28,29,30,31,32,36,37,44,51,55],41,57]
* [[28,29,30,31,32,36,37,44,51,55],40,58]
* [[28,29,30,31,32,36,37,44,51,55],40,57]
* [[28,29,30,31,32,36,37,44,51,55],39,58]
* [[28,29,30,31,32,36,37,44,51,55],39,57]
* [[28,29,30,31,32,36,37,44,51,55],39,54,57]
* [[28,29,30,31,32,36,37,44,51,55],38,58]
* [[28,29,30,31,32,36,37,44,51,55],38,57]
* [[28,29,30,31,32,36,37,44,51,55],38,56,57]
* [[28,29,30,31,32,36,37,44,51,55],35,57]
* [[28,29,30,31,32,36,37,44,51,55],34,57]
* [[28,29,30,31,32,36,37,44,51,55],33,57]
* [58]
* [57]
* [56,57]
* [54,57]
* [53,57]
* [52,58]
* [52,57]
* [52,56,57]
* [50,57]
* [49,57]
* [48,57]
* [47,58]
* [47,57]
* [46,58]
* [46,57]
* [46,54,57]
* [45,57]
* [43,57]
* [42,57]
* [41,57]
* [40,58]
* [40,57]
* [40,56,57]
* [39,58]
* [39,57]
* [39,54,57]
* [38,58]
* [38,57]
* [38,56,57]
* [35,57]
* [34,57]
* [33,57]


### Merging Chains  plus/3 into  External patterns of execution 
* [[57,33],[57,34],[57,35],[57,56,38],[57,38],[57,40],[57,41],[57,42],[57,43],[57,47],[57,48],[57,54]] --> 1 
* [[58]] --> 2 
* [[57,56,52],[57,52],[57,53],[57,33,[28,29,30,31,32,36,37,44,51,55]],[57,34,[28,29,30,31,32,36,37,44,51,55]],[57,35,[28,29,30,31,32,36,37,44,51,55]],[57,56,38,[28,29,30,31,32,36,37,44,51,55]],[57,38,[28,29,30,31,32,36,37,44,51,55]],[58,38,[28,29,30,31,32,36,37,44,51,55]],[57,54,39,[28,29,30,31,32,36,37,44,51,55]],[57,39,[28,29,30,31,32,36,37,44,51,55]],[58,39,[28,29,30,31,32,36,37,44,51,55]],[57,40,[28,29,30,31,32,36,37,44,51,55]],[58,40,[28,29,30,31,32,36,37,44,51,55]],[57,41,[28,29,30,31,32,36,37,44,51,55]],[57,42,[28,29,30,31,32,36,37,44,51,55]],[57,43,[28,29,30,31,32,36,37,44,51,55]],[57,45,[28,29,30,31,32,36,37,44,51,55]],[57,54,46,[28,29,30,31,32,36,37,44,51,55]],[57,46,[28,29,30,31,32,36,37,44,51,55]],[58,46,[28,29,30,31,32,36,37,44,51,55]],[57,47,[28,29,30,31,32,36,37,44,51,55]],[58,47,[28,29,30,31,32,36,37,44,51,55]],[57,48,[28,29,30,31,32,36,37,44,51,55]],[57,49,[28,29,30,31,32,36,37,44,51,55]],[57,50,[28,29,30,31,32,36,37,44,51,55]],[57,52,[28,29,30,31,32,36,37,44,51,55]],[58,52,[28,29,30,31,32,36,37,44,51,55]],[57,53,[28,29,30,31,32,36,37,44,51,55]],[57,54,[28,29,30,31,32,36,37,44,51,55]],[57,56,[28,29,30,31,32,36,37,44,51,55]],[57,[28,29,30,31,32,36,37,44,51,55]],[58,[28,29,30,31,32,36,37,44,51,55]]] --> 3 
* [[58,38],[58,52]] --> 4 
* [[57,45],[57,46],[58,47],[57,49],[57,50]] --> 5 
* [[57,54,46]] --> 6 
* [[58,46]] --> 7 
* [[57,56,40]] --> 8 
* [[57,39],[58,40]] --> 9 
* [[57,54,39]] --> 10 
* [[58,39]] --> 11 
* [[57,56],[57]] --> 12 
* [[[28,29,30,31,32,36,37,44,51,55]]] --> 13 


### Specialization of cost equations quot/3 
* CE 12 is refined into CE [140] 
* CE 14 is refined into CE [141] 
* CE 13 is refined into CE [142,143,144] 


#### Refined cost equations quot/3 
* CE 140: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 141: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 142: quot(V1,V,Out) = 1+ minus(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 143: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 144: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [144] --> Loop 59 
* CEs [143] --> Loop 60 
* CEs [142] --> Loop 61 
* CEs [140,141] --> Loop 62 

#### Loops of quot/3 
* Loop 59: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 60: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 61: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 62: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [59]: [V1-1,V1-V+1]
* RF of phase [61]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [59]:
  - RF of loop [59:1]:
    V1-1
    V1-V+1
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[61],62]
* [[61],60,62]
* [[59],62]
* [[59],60,62]
* [62]
* [60,62]


### Merging Chains  quot/3 into  External patterns of execution 
* [[62,60,[61]],[62,[61]]] --> 1 
* [[62]] --> 2 
* [[62,60]] --> 3 
* [[62,[59]]] --> 4 
* [[62,60,[59]]] --> 5 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [145,146,147] 
* CE 3 is refined into CE [148,149,150,151,152] 
* CE 4 is refined into CE [153,154,155,156,157,158,159,160,161,162,163,164,165] 
* CE 5 is refined into CE [166] 
* CE 6 is refined into CE [167,168,169] 
* CE 7 is refined into CE [170,171,172] 
* CE 8 is refined into CE [173,174,175,176,177] 


#### Refined cost equations start/3 
* CE 145: start(V1,V,V14) = 0+ minus(V1,W14,V1):1
     [V1>=0,W14=0,V=0] 
* CE 146: start(V1,V,V14) = 0+ minus(V1,V,W14):2
     [V>=0,V1>=0,W14=0] 
* CE 147: start(V1,V,V14) = 0+ minus(W14,V,X14):3
     [X14>=0,V>=1,V+X14=W14,V+X14=V1] 
* CE 148: start(V1,V,V14) = 0+ quot(V1,W14,X14):1
     [V1>=X14,X14>=1,W14=1,V=1] 
* CE 149: start(V1,V,V14) = 0+ quot(V1,V,W14):2
     [V>=0,V1>=0,W14=0] 
* CE 150: start(V1,V,V14) = 0+ quot(V1,V,W14):3
     [V>=1,V1>=1,W14=1] 
* CE 151: start(V1,V,V14) = 0+ quot(V1,V,W14):4
     [V1+2>=2*W14+V,W14>=1,V>=2] 
* CE 152: start(V1,V,V14) = 0+ quot(V1,V,W14):5
     [V1+3>=2*W14+V,W14>=2,V>=2] 
* CE 153: start(V1,V,V14) = 0+ plus(V1,V,W14):1
     [V>=1,V1>=1,W14=2] 
* CE 154: start(V1,V,V14) = 0+ plus(W14,V,V):2
     [V>=0,W14=3,V1=3] 
* CE 155: start(V1,V,V14) = 0+ plus(V1,V,W14):3
     [2*V+2*W14+3*V1>=18,2*V+3*V1>=14,V+W14>=3,V1+W14>=4,W14>=0,V>=1,V1>=2] 
* CE 156: start(V1,V,V14) = 0+ plus(W14,X14,Y14):4
     [Y14=2,X14=4,W14=4,V=4,V1=4] 
* CE 157: start(V1,V,V14) = 0+ plus(W14,V,X14):5
     [V>=5,6>=V,X14=2,W14=4,V1=4] 
* CE 158: start(V1,V,V14) = 0+ plus(W14,V,X14):6
     [V>=5,6>=V,X14=4,W14=4,V1=4] 
* CE 159: start(V1,V,V14) = 0+ plus(W14,V,X14):7
     [V>=5,6>=V,X14=5,W14=4,V1=4] 
* CE 160: start(V1,V,V14) = 0+ plus(W14,X14,Y14):8
     [Y14=2,X14=2,W14=5,V=2,V1=5] 
* CE 161: start(V1,V,V14) = 0+ plus(V1,W14,X14):9
     [V1>=5,7>=V1,X14=2,W14=4,V=4] 
* CE 162: start(V1,V,V14) = 0+ plus(V1,W14,X14):10
     [V1>=5,7>=V1,X14=4,W14=4,V=4] 
* CE 163: start(V1,V,V14) = 0+ plus(V1,W14,X14):11
     [V1>=5,7>=V1,X14=5,W14=4,V=4] 
* CE 164: start(V1,V,V14) = 0+ plus(V1,V,W14):12
     [V>=0,V1>=0,W14=0] 
* CE 165: start(V1,V,V14) = 0+ plus(V1,V,W14):13
     [2*V+3*V1>=14,V>=1,V1>=2] 
* CE 166: start(V1,V,V14) = 1
     [V1>=0] 
* CE 167: start(V1,V,V14) = 0+ if(W14,V,V14,V14):1
     [V14>=0,V>=0,W14=1,V1=1] 
* CE 168: start(V1,V,V14) = 0+ if(W14,V,V14,V):2
     [V>=0,V14>=0,W14=2,V1=2] 
* CE 169: start(V1,V,V14) = 0+ if(V1,V,V14,W14):3
     [V14>=0,V>=0,V1>=0,W14=0] 
* CE 170: start(V1,V,V14) = 1+ if(W14,X14,Y14,Z14):1
     [Z14=2,Y14=2,X14=1,W14=1,V1=1] 
* CE 171: start(V1,V,V14) = 1+ if(W14,X14,Y14,Z14):2
     [Z14=1,Y14=2,X14=1,W14=2,V1=2] 
* CE 172: start(V1,V,V14) = 1+ if(V1,W14,X14,Y14):3
     [V1>=0,Y14=0,X14=2,W14=1] 
* CE 173: start(V1,V,V14) = 0+ gt(W14,V,X14):1
     [V>=0,X14=1,W14=3,V1=3] 
* CE 174: start(V1,V,V14) = 0+ gt(V1,W14,X14):2
     [V1>=1,X14=2,W14=3,V=3] 
* CE 175: start(V1,V,V14) = 0+ gt(V1,V,W14):3
     [V>=0,V1>=0,W14=0] 
* CE 176: start(V1,V,V14) = 0+ gt(V1,V,W14):4
     [V+3>=V1,V1>=4,W14=1] 
* CE 177: start(V1,V,V14) = 0+ gt(V1,V,W14):5
     [V1+2>=V,V>=4,W14=2] 

### Cost equations --> "Loop" of start/3 
* CEs [161,162,163] --> Loop 63 
* CEs [174] --> Loop 64 
* CEs [148] --> Loop 65 
* CEs [145] --> Loop 66 
* CEs [160] --> Loop 67 
* CEs [157,158,159] --> Loop 68 
* CEs [156] --> Loop 69 
* CEs [154,173] --> Loop 70 
* CEs [168,171] --> Loop 71 
* CEs [146,147,149,150,151,152,153,155,164,166,167,169,170,172,175,176,177] --> Loop 72 
* CEs [165] --> Loop 73 

#### Loops of start/3 
* Loop 63: start(V1,V,V14) [V1>=5,7>=V1,V=4] 
* Loop 64: start(V1,V,V14) [V1>=1,V=3] 
* Loop 65: start(V1,V,V14) [V1>=1,V=1] 
* Loop 66: start(V1,V,V14) [V1>=0,V=0] 
* Loop 67: start(V1,V,V14) [V=2,V1=5] 
* Loop 68: start(V1,V,V14) [V>=5,6>=V,V1=4] 
* Loop 69: start(V1,V,V14) [V=4,V1=4] 
* Loop 70: start(V1,V,V14) [V>=0,V1=3] 
* Loop 71: start(V1,V,V14) [V1=2] 
* Loop 72: start(V1,V,V14) [V1>=0] 
* Loop 73: start(V1,V,V14) [2*V+3*V1>=14,V>=1,V1>=2] 

### Ranking functions of CR start(V1,V,V14) 

#### Partial ranking functions of CR start(V1,V,V14) 


### Resulting Chains:start(V1,V,V14) 
* [73]...
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]


### Merging Chains  start/3 into  External patterns of execution 
* [[71],[72]] --> 1 
* [[70]] --> 2 
* [[69]] --> 3 
* [[68]] --> 4 
* [[67]] --> 5 
* [[66]] --> 6 
* [[65]] --> 7 
* [[64]] --> 8 
* [[63]] --> 9 
* [[73]] --> 10 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1
#### Cost of phase [18]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of chains of gt(V1,V,Out):
* Chain [[18],21]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [Out=1,V1>=4,V+3>=V1] 

* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [Out=2,V>=4,V1+2>=V] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [21]: 1
  with precondition: [V1=3,Out=1,V>=0] 

* Chain [20]: 1
  with precondition: [V=3,Out=2,V1>=1] 

* Chain [19]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of if(V1,V,V14,Out):
* Chain [24]: 1
  with precondition: [V1=1,V14=Out,V>=0,V14>=0] 

* Chain [23]: 1
  with precondition: [V1=2,V=Out,V>=0,V14>=0] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0,V14>=0] 


#### Cost of loops [25] 

 * loop 25:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [27]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [28,29,30,31,32,36,37,44,51,55] 

 * loop 28:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(5)+1*s(6)+9
  Such that:s(5) =< V1
s(6) =< V'

 * loop 29:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(10)+9
  Such that:s(9) =< V'
s(10) =< s(9)

 * loop 30:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(13)+1*s(14)+9
  Such that:s(13) =< V
s(14) =< V'

 * loop 31:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(18)+9
  Such that:s(17) =< V'
s(18) =< s(17)

 * loop 32:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(22)+5
  Such that:s(21) =< V'
s(22) =< s(21)

 * loop 36:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(24)+9
  Such that:s(24) =< V1'

 * loop 37:plus(V1,V,Out) -> [plus(V1',V',Out')] 
9
 * loop 44:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(26)+9
  Such that:s(26) =< V1'

 * loop 51:plus(V1,V,Out) -> [plus(V1',V',Out')] 
9
 * loop 55:plus(V1,V,Out) -> [plus(V1',V',Out')] 
5
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [28,29,30,31,32,36,37,44,51,55]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(28)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of chains of plus(V1,V,Out):
* Chain [[28,29,30,31,32,36,37,44,51,55]]...: 94*it(28)+0
  with precondition: [V>=1,2*V+3*V1>=14,V1>=2] 

* Chain [[28,29,30,31,32,36,37,44,51,55],58]: 94*it(28)+1
  with precondition: [V1>=4,V+3>=V1,2*V1>=V+1,11*V1+25*Out>=7*V+123,Out+V1>=V+1,V1+3*Out>=V+9] 

* Chain [[28,29,30,31,32,36,37,44,51,55],57]: 94*it(28)+0
  with precondition: [V1>=2,V>=1,Out>=0,Out+V1>=4,Out+V>=3,2*V+3*V1>=14,2*Out+2*V+3*V1>=18] 

* Chain [[28,29,30,31,32,36,37,44,51,55],56,57]: 94*it(28)+3*s(39)+4
  Such that:aux(90) =< 5/4*V1+V/2+Out/4
s(39) =< aux(90)

  with precondition: [V1>=4,V>=4,Out>=2,Out+V>=V1+1,Out+V1>=V+1] 

* Chain [[28,29,30,31,32,36,37,44,51,55],54,57]: 94*it(28)+22*s(42)+11*s(48)+7
  Such that:aux(99) =< V1+5/2*V+Out/2
aux(101) =< 5/2*V1+V+Out/2
aux(99) =< aux(101)
s(48) =< aux(99)
s(42) =< aux(101)

  with precondition: [V1>=2,V>=1,Out>=2,Out+V1>=6,Out+2*V>=8,2*V+3*V1>=14,Out+2*V+2*V1>=16] 

* Chain [[28,29,30,31,32,36,37,44,51,55],53,57]: 94*it(28)+1*s(75)+8
  Such that:s(75) =< 7

  with precondition: [V1>=4,V>=4,3*Out+4>=2*V1,3*Out+2>=2*V,V+3>=V1,V+V1>=9,3*Out+10*V1>=8*V+2,3*Out+14*V1>=8*V+22,2*V1+3*Out+6>=4*V,3*Out+6*V1>=4*V+14,3*Out+4*V1>=2*V+18] 

* Chain [[28,29,30,31,32,36,37,44,51,55],52,58]: 94*it(28)+1*s(76)+9
  Such that:s(76) =< 3

  with precondition: [V1>=4,V>=4,Out>=4,V+3>=V1,2*V1+11*Out+30>=12*V,11*Out+18>=6*V+4*V1,Out+6*V1>=4*V+6,Out+4*V1>=2*V+10,Out+3*V>=V1+11] 

* Chain [[28,29,30,31,32,36,37,44,51,55],52,57]: 94*it(28)+1*s(76)+8
  Such that:s(76) =< 7

  with precondition: [V1>=4,V>=4,3*Out+4>=2*V1,3*Out+2>=2*V,V+3>=V1,V+V1>=9,3*Out+10*V1>=8*V+2,3*Out+14*V1>=8*V+22,2*V1+3*Out+6>=4*V,3*Out+6*V1>=4*V+14,3*Out+4*V1>=2*V+18] 

* Chain [[28,29,30,31,32,36,37,44,51,55],50,57]: 94*it(28)+4*s(77)+7
  Such that:aux(102) =< -2*V1-2*V+5*Out+13
s(77) =< aux(102)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[28,29,30,31,32,36,37,44,51,55],49,57]: 94*it(28)+1*s(81)+8
  Such that:s(81) =< -2*V1-2*V+5*Out+13

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[28,29,30,31,32,36,37,44,51,55],48,57]: 94*it(28)+7*s(82)+8
  Such that:aux(106) =< 5/2*V1+V+Out/2
s(82) =< aux(106)

  with precondition: [V1>=4,V>=4,Out>=2,Out+2*V1>=12,Out+2*V+6*V1>=40] 

* Chain [[28,29,30,31,32,36,37,44,51,55],47,58]: 94*it(28)+8*s(89)+9
  Such that:aux(110) =< -2*V1-2*V+5*Out+13
s(89) =< aux(110)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[28,29,30,31,32,36,37,44,51,55],47,57]: 94*it(28)+8*s(89)+8
  Such that:aux(110) =< 7/4*V1+V/2+5/4*Out
s(89) =< aux(110)

  with precondition: [V1>=4,V>=4,Out>=2,Out+2*V1>=12,Out+2*V+6*V1>=40] 

* Chain [[28,29,30,31,32,36,37,44,51,55],46,58]: 94*it(28)+1*s(97)+10
  Such that:s(97) =< -2*V1-2*V+5*Out

  with precondition: [V1>=2,3*Out>=2*V+5,V+3>=V1,2*Out>=V+6,2*V+3*V1>=14,3*Out+8*V>=47,9*Out>=5*V+V1+18,6*Out+8*V1>=3*V+58,3*Out+4*V1>=2*V+25,3*Out+4*V+4*V1>=51] 

* Chain [[28,29,30,31,32,36,37,44,51,55],46,57]: 94*it(28)+1*s(97)+9
  Such that:s(97) =< -2*V1-2*V+5*Out+13

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[28,29,30,31,32,36,37,44,51,55],46,54,57]: 94*it(28)+33*s(42)+1*s(97)+16
  Such that:aux(111) =< 3
s(97) =< -2*V1-2*V+5*Out+3
s(42) =< aux(111)

  with precondition: [V1>=2,3*Out>=2*V+2,V+3>=V1,2*Out>=V+4,2*V+3*V1>=14,3*Out+8*V>=44,9*Out>=5*V+V1+9,6*Out+8*V1>=3*V+52,3*Out+4*V1>=2*V+22,3*Out+4*V+4*V1>=48] 

* Chain [[28,29,30,31,32,36,37,44,51,55],45,57]: 94*it(28)+2*s(98)+8
  Such that:aux(112) =< -2*V1-2*V+5*Out+13
s(98) =< aux(112)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[28,29,30,31,32,36,37,44,51,55],43,57]: 94*it(28)+3*s(100)+4*s(101)+7
  Such that:aux(113) =< 3
aux(114) =< 5/2*V1+V+Out/2
s(100) =< aux(113)
s(101) =< aux(114)

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[28,29,30,31,32,36,37,44,51,55],42,57]: 94*it(28)+1*s(107)+1*s(108)+8
  Such that:s(107) =< 3
s(108) =< 5/2*V1+V+Out/2

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[28,29,30,31,32,36,37,44,51,55],41,57]: 94*it(28)+4*s(109)+1*s(110)+8
  Such that:aux(116) =< V1+5/2*V+Out/2
aux(117) =< 5/2*V1+V+Out/2
aux(116) =< aux(117)
s(110) =< aux(117)
s(109) =< aux(116)

  with precondition: [V1>=4,V>=4,V+3>=V1,V1+3>=V,V+V1>=10,Out+V1>=8,Out+2*V>=12,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[28,29,30,31,32,36,37,44,51,55],40,58]: 94*it(28)+7*s(114)+1*s(117)+9
  Such that:s(117) =< 3
aux(120) =< 5/2*V1+V+Out/2
s(114) =< aux(120)

  with precondition: [V1>=4,Out>=4,V+3>=V1,Out+2*V>=14,Out+6*V1>=34,5*Out+6>=2*V+2*V1,5*Out+34*V1>=2*V+174,Out+4*V+4*V1>=48,Out+4*V+6*V1>=58] 

* Chain [[28,29,30,31,32,36,37,44,51,55],40,57]: 94*it(28)+7*s(114)+1*s(117)+8
  Such that:aux(120) =< V1+5/2*V+Out/2
aux(121) =< 5/2*V1+V+Out/2
aux(120) =< aux(121)
s(117) =< aux(121)
s(114) =< aux(120)

  with precondition: [V1>=4,V>=4,V+3>=V1,V1+3>=V,V+V1>=10,Out+V1>=8,Out+2*V>=12,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[28,29,30,31,32,36,37,44,51,55],39,58]: 94*it(28)+1*s(122)+10
  Such that:s(122) =< 5/2*V1+V+Out/2

  with precondition: [V1>=4,Out>=7,V+3>=V1,Out+2*V>=17,Out+6*V1>=37,5*Out>=2*V+2*V1+9,5*Out+34*V1>=2*V+189,Out+4*V+4*V1>=51,Out+4*V+6*V1>=61] 

* Chain [[28,29,30,31,32,36,37,44,51,55],39,57]: 94*it(28)+1*s(122)+9
  Such that:s(122) =< 5/2*V1+V+Out/2

  with precondition: [V1>=4,Out>=4,V+3>=V1,Out+2*V>=14,Out+6*V1>=34,5*Out+6>=2*V+2*V1,5*Out+34*V1>=2*V+174,Out+4*V+4*V1>=48,Out+4*V+6*V1>=58] 

* Chain [[28,29,30,31,32,36,37,44,51,55],39,54,57]: 94*it(28)+33*s(42)+1*s(122)+16
  Such that:aux(122) =< 3
s(122) =< 5/2*V1+V+Out/2
s(42) =< aux(122)

  with precondition: [V1>=4,Out>=6,V+3>=V1,Out+2*V>=16,Out+6*V1>=36,5*Out>=2*V+2*V1+4,5*Out+34*V1>=2*V+184,Out+4*V+4*V1>=50,Out+4*V+6*V1>=60] 

* Chain [[28,29,30,31,32,36,37,44,51,55],38,58]: 94*it(28)+3*s(123)+9
  Such that:aux(124) =< 3
s(123) =< aux(124)

  with precondition: [V1>=4,V>=4,Out>=4,V+3>=V1,2*V1+11*Out+30>=12*V,11*Out+18>=6*V+4*V1,Out+6*V1>=4*V+6,Out+4*V1>=2*V+10,Out+3*V>=V1+11] 

* Chain [[28,29,30,31,32,36,37,44,51,55],38,57]: 94*it(28)+1*s(123)+2*s(124)+8
  Such that:s(123) =< 3
aux(123) =< 5/2*V1+V+Out/2
s(124) =< aux(123)

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[28,29,30,31,32,36,37,44,51,55],38,56,57]: 94*it(28)+5*s(39)+1*s(123)+12
  Such that:aux(125) =< 1
s(123) =< 3
s(39) =< aux(125)

  with precondition: [V1>=2,V>=1,2*V+3*V1>=14,5*Out>=2*V+2*V1+4] 

* Chain [[28,29,30,31,32,36,37,44,51,55],35,57]: 94*it(28)+2*s(126)+8
  Such that:aux(126) =< V1+V+Out/2
s(126) =< aux(126)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[28,29,30,31,32,36,37,44,51,55],34,57]: 94*it(28)+4*s(128)+8
  Such that:aux(129) =< V1+V+Out/2
s(128) =< aux(129)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[28,29,30,31,32,36,37,44,51,55],33,57]: 94*it(28)+2*s(132)+2*s(133)+8
  Such that:aux(130) =< V1+5/2*V+Out/2
aux(132) =< 5/2*V1+V+Out/2
aux(130) =< aux(132)
s(132) =< aux(130)
s(133) =< aux(132)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [58]: 1
  with precondition: [V1=3,V=Out,V>=0] 

* Chain [57]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [56,57]: 3*s(39)+4
  Such that:aux(90) =< V+1
s(39) =< aux(90)

  with precondition: [Out=0,V+1=V1,V>=0] 

* Chain [54,57]: 22*s(42)+11*s(48)+7
  Such that:aux(99) =< V1
aux(100) =< V
s(48) =< aux(99)
s(42) =< aux(100)

  with precondition: [Out=2,V1>=1,V>=1] 

* Chain [53,57]: 1*s(75)+8
  Such that:s(75) =< V

  with precondition: [V1=4,Out=2,V>=1] 

* Chain [52,58]: 1*s(76)+9
  Such that:s(76) =< 3

  with precondition: [V1=4,V=4,Out=2] 

* Chain [52,57]: 1*s(76)+8
  Such that:s(76) =< V

  with precondition: [V1=4,Out=2,V>=1] 

* Chain [52,56,57]: 4*s(39)+12
  Such that:aux(133) =< 1
s(39) =< aux(133)

  with precondition: [V1=4,V=2,Out=2] 

* Chain [50,57]: 4*s(77)+7
  Such that:aux(102) =< V
s(77) =< aux(102)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [49,57]: 1*s(81)+8
  Such that:s(81) =< V

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [48,57]: 6*s(82)+1*s(85)+8
  Such that:s(85) =< V1
aux(105) =< V
s(82) =< aux(105)

  with precondition: [Out=2,V>=5,V1+2>=V] 

* Chain [47,58]: 8*s(89)+9
  Such that:aux(110) =< V
s(89) =< aux(110)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [47,57]: 8*s(89)+8
  Such that:aux(110) =< V
s(89) =< aux(110)

  with precondition: [Out=2,V>=5,V1+2>=V] 

* Chain [46,58]: 1*s(97)+10
  Such that:s(97) =< V

  with precondition: [V1=4,Out=5,6>=V,V>=5] 

* Chain [46,57]: 1*s(97)+9
  Such that:s(97) =< V

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [46,54,57]: 33*s(42)+1*s(97)+16
  Such that:s(97) =< V
aux(111) =< 3
s(42) =< aux(111)

  with precondition: [V1=4,Out=4,6>=V,V>=5] 

* Chain [45,57]: 2*s(98)+8
  Such that:aux(112) =< V
s(98) =< aux(112)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [43,57]: 3*s(100)+4*s(101)+7
  Such that:aux(113) =< 3
aux(114) =< V1
s(100) =< aux(113)
s(101) =< aux(114)

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [42,57]: 1*s(107)+1*s(108)+8
  Such that:s(107) =< 3
s(108) =< V1

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [41,57]: 4*s(109)+1*s(110)+8
  Such that:aux(116) =< V1
s(110) =< V
s(109) =< aux(116)

  with precondition: [Out=2,V1>=5,V+3>=V1] 

* Chain [40,58]: 7*s(114)+1*s(117)+9
  Such that:s(117) =< 3
aux(120) =< V1
s(114) =< aux(120)

  with precondition: [V=4,Out=2,7>=V1,V1>=5] 

* Chain [40,57]: 7*s(114)+1*s(117)+8
  Such that:aux(120) =< V1
s(117) =< V
s(114) =< aux(120)

  with precondition: [Out=2,V1>=5,V+3>=V1] 

* Chain [40,56,57]: 4*s(39)+7*s(114)+12
  Such that:aux(120) =< 5
aux(134) =< 1
s(39) =< aux(134)
s(114) =< aux(120)

  with precondition: [V1=5,V=2,Out=2] 

* Chain [39,58]: 1*s(122)+10
  Such that:s(122) =< V1

  with precondition: [V=4,Out=5,7>=V1,V1>=5] 

* Chain [39,57]: 1*s(122)+9
  Such that:s(122) =< V1

  with precondition: [V=4,Out=2,7>=V1,V1>=5] 

* Chain [39,54,57]: 33*s(42)+1*s(122)+16
  Such that:s(122) =< V1
aux(122) =< 3
s(42) =< aux(122)

  with precondition: [V=4,Out=4,7>=V1,V1>=5] 

* Chain [38,58]: 3*s(123)+9
  Such that:aux(124) =< 3
s(123) =< aux(124)

  with precondition: [V1=4,V=4,Out=2] 

* Chain [38,57]: 1*s(123)+2*s(124)+8
  Such that:s(123) =< 3
aux(123) =< V1
s(124) =< aux(123)

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [38,56,57]: 5*s(39)+1*s(123)+12
  Such that:s(123) =< 3
aux(125) =< 1
s(39) =< aux(125)

  with precondition: [V1=2,V=4,Out=2] 

* Chain [35,57]: 1*s(126)+1*s(127)+8
  Such that:s(127) =< V1
s(126) =< V

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 

* Chain [34,57]: 2*s(128)+2*s(129)+8
  Such that:aux(128) =< V1
aux(127) =< V
s(128) =< aux(127)
s(129) =< aux(128)

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 

* Chain [33,57]: 2*s(132)+2*s(133)+8
  Such that:aux(130) =< V1
aux(131) =< V
s(132) =< aux(130)
s(133) =< aux(131)

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 


#### Cost of loops [61] 

 * loop 61:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [61]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(61)+0
  Such that:it(61) =< V1
it(61) =< V1-V1'

#### Cost of phase [61]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(61)+0
  Such that:it(61) =< V1
it(61) =< V1-V1'

#### Cost of loops [59] 

 * loop 59:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(289)+2
  Such that:s(289) =< V'

#### Cost of phase [59]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(59)+1*s(290)+0
  Such that:it(59) =< V1-V+1
it(59) =< V1-V-V1'+V'
aux(149) =< V1
aux(150) =< V1-V1'
it(59) =< aux(149)
s(290) =< aux(149)
it(59) =< aux(150)
s(290) =< aux(150)

#### Cost of phase [59]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(59)+1*s(290)+0
  Such that:it(59) =< V1-V+1
it(59) =< V1-V-V1'+V'
aux(149) =< V1
aux(150) =< V1-V1'
it(59) =< aux(149)
s(290) =< aux(149)
it(59) =< aux(150)
s(290) =< aux(150)

#### Cost of chains of quot(V1,V,Out):
* Chain [[61],62]: 2*it(61)+1
  Such that:it(61) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[61],60,62]: 2*it(61)+1*s(287)+2
  Such that:s(287) =< 1
it(61) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[59],62]: 2*it(59)+1*s(290)+1
  Such that:it(59) =< V1-V+1
aux(151) =< V1
it(59) =< aux(151)
s(290) =< aux(151)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[59],60,62]: 2*it(59)+1*s(287)+1*s(290)+2
  Such that:it(59) =< V1-V+1
s(287) =< V
aux(152) =< V1
it(59) =< aux(152)
s(290) =< aux(152)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [62]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [60,62]: 1*s(287)+2
  Such that:s(287) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of chains of start(V1,V,V14):
* Chain [73]...: 94*s(294)+0
  with precondition: [V1>=2,V>=1,2*V+3*V1>=14] 

* Chain [72]: 51*s(295)+4*s(298)+38*s(300)+83*s(309)+14*s(312)+2929*s(313)+2*s(326)+3*s(338)+16
  Such that:s(319) =< 7
s(337) =< V+1
aux(154) =< 1
aux(155) =< 3
aux(156) =< V1
aux(157) =< V1-V+1
aux(158) =< V
s(300) =< aux(156)
s(298) =< aux(157)
s(295) =< aux(158)
s(309) =< aux(155)
s(312) =< aux(154)
s(326) =< s(319)
s(298) =< aux(156)
s(338) =< s(337)

  with precondition: [V1>=0] 

* Chain [71]: 2
  with precondition: [V1=2] 

* Chain [70]: 1
  with precondition: [V1=3,V>=0] 

* Chain [69]: 21
  with precondition: [V1=4,V=4] 

* Chain [68]: 18*s(343)+33*s(346)+16
  Such that:s(345) =< 3
aux(159) =< V
s(343) =< aux(159)
s(346) =< s(345)

  with precondition: [V1=4,6>=V,V>=5] 

* Chain [67]: 4*s(350)+7*s(351)+12
  Such that:s(349) =< 1
s(348) =< 5
s(350) =< s(349)
s(351) =< s(348)

  with precondition: [V1=5,V=2] 

* Chain [66]: 1
  with precondition: [V=0,V1>=0] 

* Chain [65]: 1*s(352)+4*s(354)+2
  Such that:s(352) =< 1
s(353) =< V1
s(354) =< s(353)

  with precondition: [V=1,V1>=1] 

* Chain [64]: 1
  with precondition: [V=3,V1>=1] 

* Chain [63]: 34*s(355)+10*s(357)+16
  Such that:aux(160) =< 3
aux(161) =< V1
s(355) =< aux(160)
s(357) =< aux(161)

  with precondition: [V=4,7>=V1,V1>=5] 


Closed-form bounds of start(V1,V,V14): 
-------------------------------------
* Chain [73]... with precondition: [V1>=2,V>=1,2*V+3*V1>=14] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [72] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [71] with precondition: [V1=2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [70] with precondition: [V1=3,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [69] with precondition: [V1=4,V=4] 
    - Upper bound: 21 
    - Complexity: constant 
* Chain [68] with precondition: [V1=4,6>=V,V>=5] 
    - Upper bound: 18*V+115 
    - Complexity: n 
* Chain [67] with precondition: [V1=5,V=2] 
    - Upper bound: 51 
    - Complexity: constant 
* Chain [66] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [65] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+3 
    - Complexity: n 
* Chain [64] with precondition: [V=3,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [63] with precondition: [V=4,7>=V1,V1>=5] 
    - Upper bound: 10*V1+118 
    - Complexity: n 

### Maximum cost of start(V1,V,V14): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 2221 ms.
   - Backward Invariants 1602 ms.
   - Transitive Invariants 504 ms.
* Refinement performed in 937 ms.
* Termination proved in 56 ms.
* Upper bounds computed in 2170 ms.
   - Equation cost structures 159 ms.
   - Phase cost structures 842 ms.
   - Chain cost structures 762 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 5480 ms.

