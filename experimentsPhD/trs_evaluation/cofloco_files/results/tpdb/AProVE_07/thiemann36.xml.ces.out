
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [if/7,if2/7,quotIter/6]
2. non_recursive  : [quot/3]
3. non_recursive  : [start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into quotIter/6
2. SCC is partially evaluated into quot/3
3. SCC is partially evaluated into start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 15 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 14 is refined into CE [28] 


#### Refined cost equations le/3 
* CE 25: le(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 26: le(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 27: le(V,V1,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 28: le(V,V1,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of le/3 
* CEs [28] --> Loop 14 
* CEs [25] --> Loop 15 
* CEs [26] --> Loop 16 
* CEs [27] --> Loop 17 

#### Loops of le/3 
* Loop 14: le(V,V1,Out)->  le(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 15: le(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 16: le(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 17: le(V,V1,Out) [V1>=0,Out=2,V=0] 

### Ranking functions of CR le(V,V1,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR le(V,V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:le(V,V1,Out) 
* [[14],17]
* [[14],16]
* [[14],15]
* [17]
* [16]
* [15]


### Merging Chains  le/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15],[15,[14]]] --> 3 
* [[16,[14]]] --> 4 
* [[17,[14]]] --> 5 


### Specialization of cost equations quotIter/6 
* CE 20 is refined into CE [29,30] 
* CE 16 is refined into CE [31,32,33,34,35,36] 
* CE 19 is refined into CE [37,38,39,40,41] 
* CE 21 is refined into CE [42] 
* CE 18 is refined into CE [43,44] 
* CE 17 is refined into CE [45,46] 


#### Refined cost equations quotIter/6 
* CE 29: quotIter(A,B,C,D,E,E) = 2+ le(F,C,G):1
     [C>=0,E>=0,D>=0,B>=1,G=2,F=0,A=0] 
* CE 30: quotIter(A,B,C,D,E,E) = 2+ le(A,C,F):5
     [C>=A,A>=1,E>=0,D>=0,B>=1,F=2] 
* CE 31: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,W16,X16):2+ le(V1,Y16,Z16):3
     [Y16>=1,V1>=1,V>=1,V15>=0,Y16=V14+1,Z16=0,X16=1,W16=0,Out=0,V16=0] 
* CE 32: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,W16,X16):2+ le(V1,Y16,Z16):4
     [V1>=Y16+1,Y16>=1,V>=1,V15>=0,Y16=V14+1,Z16=1,X16=1,W16=0,Out=0,V16=0] 
* CE 33: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,W16,X16):2+ le(V1,Y16,Z16):5
     [Y16>=V1,V1>=1,V>=1,V15>=0,Y16=V14+1,Z16=2,X16=1,W16=0,Out=0,V16=0] 
* CE 34: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,V16,W16):4+ le(V1,X16,Y16):3
     [V>=V16+1,X16>=1,V1>=1,V16>=1,V15>=0,X16=V14+1,Y16=0,W16=1,Out=0] 
* CE 35: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,V16,W16):4+ le(V1,X16,Y16):4
     [V1>=X16+1,V>=V16+1,X16>=1,V16>=1,V15>=0,X16=V14+1,Y16=1,W16=1,Out=0] 
* CE 36: quotIter(V,V1,V16,V14,V15,Out) = 2+ le(V,V16,W16):4+ le(V1,X16,Y16):5
     [X16>=V1,V>=V16+1,V1>=1,V16>=1,V15>=0,X16=V14+1,Y16=2,W16=1,Out=0] 
* CE 37: quotIter(V,V1,V16,V14,V15,Out) = 1+ le(W16,V16,X16):1
     [V16>=0,V15>=0,V14>=0,V1>=1,X16=2,W16=0,Out=0,V=0] 
* CE 38: quotIter(V,V1,V16,V14,V15,Out) = 1+ le(V,W16,X16):2
     [V>=1,V15>=0,V14>=0,V1>=1,X16=1,W16=0,Out=0,V16=0] 
* CE 39: quotIter(V,V1,V16,V14,V15,Out) = 1+ le(V,V16,W16):3
     [V16>=0,V>=0,V15>=0,V14>=0,V1>=1,W16=0,Out=0] 
* CE 40: quotIter(V,V1,V16,V14,V15,Out) = 1+ le(V,V16,W16):4
     [V>=V16+1,V16>=1,V15>=0,V14>=0,V1>=1,W16=1,Out=0] 
* CE 41: quotIter(V,V1,V16,V14,V15,Out) = 1+ le(V,V16,W16):5
     [V16>=V,V>=1,V15>=0,V14>=0,V1>=1,W16=2,Out=0] 
* CE 42: quotIter(V,V1,V16,V14,V15,Out) = 0
     [V15>=0,V14>=0,V16>=0,V1>=0,V>=0,Out=0] 
* CE 43: quotIter(V,V1,V16,V14,V15,Out) = 3+ le(V,W16,X16):2+ le(V1,Y16,Z16):4+ quotIter(V,V1,A17,Y16,V15,Out)
     [V1>=Y16+1,Y16>=1,V>=1,V15>=0,Y16=V14+1,A17=1,Z16=1,X16=1,W16=0,V16=0] 
* CE 44: quotIter(V,V1,V16,V14,V15,Out) = 3+ le(V,V16,W16):4+ le(V1,X16,Y16):4+ quotIter(V,V1,Z16,X16,V15,Out)
     [V1>=X16+1,V>=V16+1,X16>=1,V16>=1,V15>=0,V16+1=Z16,X16=V14+1,Y16=1,W16=1] 
* CE 45: quotIter(V,V1,V16,V14,V15,Out) = 3+ le(V,W16,X16):2+ le(V1,Y16,Z16):5+ quotIter(V,V1,A17,B17,C17,Out)
     [Y16>=V1,V1>=1,V>=1,V15>=0,V15+1=C17,Y16=V14+1,B17=0,A17=1,Z16=2,X16=1,W16=0,V16=0] 
* CE 46: quotIter(V,V1,V16,V14,V15,Out) = 3+ le(V,V16,W16):4+ le(V1,X16,Y16):5+ quotIter(V,V1,Z16,A17,B17,Out)
     [X16>=V1,V>=V16+1,V1>=1,V16>=1,V15>=0,V15+1=B17,V16+1=Z16,X16=V14+1,A17=0,Y16=2,W16=1] 

### Cost equations --> "Loop" of quotIter/6 
* CEs [44] --> Loop 18 
* CEs [46] --> Loop 19 
* CEs [43] --> Loop 20 
* CEs [45] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31,32,33,38] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [34,35,36,37,39,40,41,42] --> Loop 25 

#### Loops of quotIter/6 
* Loop 18: quotIter(V,V1,V16,V14,V15,Out)->  quotIter(V,V1,V16',V14',V15,Out)
                  [V1>=V14+2,V>=V16+1,V15>=0,V14>=0,V16>=1,V14+1=V14',V16+1=V16'] 
* Loop 19: quotIter(V,V1,V16,V14,V15,Out)->  quotIter(V,V1,V16',V14',V15',Out)
                  [V>=V16+1,V14+1>=V1,V15>=0,V16>=1,V1>=1,V15+1=V15',V16+1=V16',V14'=0] 
* Loop 20: quotIter(V,V1,V16,V14,V15,Out)->  quotIter(V,V1,V16',V14',V15,Out)
                  [V1>=V14+2,V15>=0,V14>=0,V>=1,V14+1=V14',V16'=1,V16=0] 
* Loop 21: quotIter(V,V1,V16,V14,V15,Out)->  quotIter(V,V1,V16',V14',V15',Out)
                  [V14+1>=V1,V15>=0,V1>=1,V>=1,V15+1=V15',V14'=0,V16'=1,V16=0] 
* Loop 22: quotIter(A,B,C,D,E,E) [C>=A,E>=0,D>=0,B>=1,A>=1] 
* Loop 23: quotIter(V,V1,V16,V14,V15,Out) [V15>=0,V14>=0,V1>=1,V>=1,Out=0,V16=0] 
* Loop 24: quotIter(A,B,C,D,E,E) [E>=0,D>=0,C>=0,B>=1,A=0] 
* Loop 25: quotIter(V,V1,V16,V14,V15,Out) [V15>=0,V14>=0,V16>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR quotIter(V,V1,V16,V14,V15,Out) 
* RF of phase [18,19]: [V-V16]

#### Partial ranking functions of CR quotIter(V,V1,V16,V14,V15,Out) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1]:
    V1-V14-1 depends on loops [19:1] 
  - RF of loop [18:1,19:1]:
    V-V16


### Resulting Chains:quotIter(V,V1,V16,V14,V15,Out) 
* [[18,19],25]
* [[18,19],22]
* [25]
* [24]
* [23]
* [22]
* [21,[18,19],25]
* [21,[18,19],22]
* [21,25]
* [21,22]
* [20,[18,19],25]
* [20,[18,19],22]
* [20,25]
* [20,22]


### Merging Chains  quotIter/6 into  External patterns of execution 
* [[24]] --> 1 
* [[22,21]] --> 2 
* [[22,20]] --> 3 
* [[25,20],[25,[18,19],20],[25,21],[25,[18,19],21],[23],[25],[25,[18,19]]] --> 4 
* [[22,[18,19],21]] --> 5 
* [[22,[18,19],20]] --> 6 
* [[22]] --> 7 
* [[22,[18,19]]] --> 8 


### Specialization of cost equations quot/3 
* CE 23 is refined into CE [47,48,49,50,51,52] 
* CE 24 is refined into CE [53] 
* CE 22 is refined into CE [54] 


#### Refined cost equations quot/3 
* CE 47: quot(V,V1,Out) = 1+ quotIter(W1,V1,X1,Y1,Z1,A2):1
     [V1>=1,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 48: quot(V,V1,Out) = 1+ quotIter(W1,X1,Y1,Z1,A2,B2):2
     [B2=1,A2=0,Z1=0,Y1=0,X1=1,W1=1,Out=1,V1=1,V=1] 
* CE 49: quot(V,V1,Out) = 1+ quotIter(W1,V1,X1,Y1,Z1,A2):3
     [V1>=2,A2=0,Z1=0,Y1=0,X1=0,W1=1,Out=0,V=1] 
* CE 50: quot(V,V1,Out) = 1+ quotIter(V,V1,W1,X1,Y1,Z1):4
     [V1>=1,V>=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 51: quot(V,V1,Out) = 1+ quotIter(V,W1,X1,Y1,Z1,Out):5
     [V>=Out,Out>=2,Z1=0,Y1=0,X1=0,W1=1,V1=1] 
* CE 52: quot(V,V1,Out) = 1+ quotIter(V,V1,W1,X1,Y1,Out):6
     [V>=Out+1,Out>=0,V1>=2,V>=2,Y1=0,X1=0,W1=0] 
* CE 53: quot(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 54: quot(V,V1,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of quot/3 
* CEs [52] --> Loop 26 
* CEs [51] --> Loop 27 
* CEs [54] --> Loop 28 
* CEs [49] --> Loop 29 
* CEs [48] --> Loop 30 
* CEs [47,50,53] --> Loop 31 

#### Loops of quot/3 
* Loop 26: quot(V,V1,Out) [V>=Out+1,Out>=0,V1>=2,V>=2] 
* Loop 27: quot(V,V1,Out) [V>=Out,Out>=2,V1=1] 
* Loop 28: quot(V,V1,Out) [V>=0,Out=1,V1=0] 
* Loop 29: quot(V,V1,Out) [V1>=2,Out=0,V=1] 
* Loop 30: quot(V,V1,Out) [Out=1,V1=1,V=1] 
* Loop 31: quot(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR quot(V,V1,Out) 

#### Partial ranking functions of CR quot(V,V1,Out) 


### Resulting Chains:quot(V,V1,Out) 
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]


### Merging Chains  quot/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29],[31]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 
* [[26]] --> 5 


### Specialization of cost equations start/6 
* CE 5 is refined into CE [55,56,57,58,59,60,61,62] 
* CE 8 is refined into CE [63] 
* CE 2 is refined into CE [64,65,66,67] 
* CE 3 is refined into CE [68] 
* CE 4 is refined into CE [69,70,71,72,73] 
* CE 6 is refined into CE [74,75,76,77] 
* CE 7 is refined into CE [78,79,80,81,82,83,84,85] 
* CE 9 is refined into CE [86,87,88,89,90] 
* CE 10 is refined into CE [91,92,93,94,95] 
* CE 11 is refined into CE [96,97,98,99,100,101,102,103] 


#### Refined cost equations start/6 
* CE 55: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,V16,V14,X20,Y20,Y20):1
     [Y20>=1,V14>=0,V16>=1,V15>=0,Y20=V20+1,X20=0,W20=0,V1=0,V=2] 
* CE 56: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,X20,Y20,Z20,A21,B21):2
     [B21>=2,V15>=0,B21=A21+1,B21=V20+2,Z20=0,Y20=0,X20=1,W20=1,V14=0,V16=1,V1=1,V=2] 
* CE 57: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,V16,X20,Y20,Z20,Z20):3
     [Z20>=1,V16>=2,V15>=0,Z20=V20+1,Y20=0,X20=0,W20=1,V14=0,V1=1,V=2] 
* CE 58: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,W20,X20,Y20):4
     [X20>=1,V14>=0,V16>=0,V1>=0,V15>=0,X20=V20+1,Y20=0,W20=0,V=2] 
* CE 59: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,W20,X20,Y20,Z20,A21):5
     [V1+Z20>=A21,A21>=Z20+2,Z20>=1,V15>=0,Z20=V20+1,Y20=0,X20=0,W20=1,V14=0,V16=1,V=2] 
* CE 60: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,W20,X20,Y20,Z20):6
     [V1+Y20>=Z20+1,Z20>=Y20,Y20>=1,V16>=2,V1>=2,V15>=0,Y20=V20+1,X20=0,W20=0,V14=0,V=2] 
* CE 61: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,W20,X20,X20):7
     [V14>=V1,X20>=1,V16>=1,V1>=1,V15>=0,X20=V20+1,W20=0,V=2] 
* CE 62: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,W20,X20,Y20):8
     [V1+X20>=V14+Y20,V16+Y20>=X20+2,Y20>=X20,V1>=V14+1,X20>=1,V14>=1,V16>=1,V15>=0,X20=V20+1,W20=0,V=2] 
* CE 63: start(V,V1,V16,V14,V15,V20) = 1
     [V20>=0,V15>=0,V14>=0,V16>=0,V1>=0,V=2] 
* CE 64: start(V,V1,V16,V14,V15,V20) = 1+ le(W20,X20,Y20):1
     [X20>=1,V20>=0,V14>=0,V1>=0,X20=V15+1,Y20=2,W20=0,V16=0,V=1] 
* CE 65: start(V,V1,V16,V14,V15,V20) = 1+ le(V16,W20,X20):3
     [W20>=1,V16>=0,V20>=0,V14>=0,V1>=0,W20=V15+1,X20=0,V=1] 
* CE 66: start(V,V1,V16,V14,V15,V20) = 1+ le(V16,W20,X20):4
     [V16>=W20+1,W20>=1,V20>=0,V14>=0,V1>=0,W20=V15+1,X20=1,V=1] 
* CE 67: start(V,V1,V16,V14,V15,V20) = 1+ le(V16,W20,X20):5
     [W20>=V16,V16>=1,V20>=0,V14>=0,V1>=0,W20=V15+1,X20=2,V=1] 
* CE 68: start(V,V1,V16,V14,V15,V20) = 0
     [V20>=0,V15>=0,V14>=0,V16>=0,V1>=0,V>=0] 
* CE 69: start(V,V1,V16,V14,V15,V20) = 2+ le(W20,X20,Y20):1+ quotIter(V1,Z20,A21,B21,C21,D21):4
     [C21>=1,A21>=1,V1>=0,X20>=1,C21=V20+1,X20=V15+1,A21=V14+1,D21=0,B21=0,Z20=0,Y20=2,W20=0,V16=0,V=1] 
* CE 70: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):5+ quotIter(Y20,V16,Z20,A21,B21,B21):1
     [W20>=V16,B21>=1,Z20>=1,V16>=1,B21=V20+1,W20=V15+1,Z20=V14+1,A21=0,Y20=0,X20=2,V1=0,V=1] 
* CE 71: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):5+ quotIter(V1,V16,Y20,Z20,A21,B21):4
     [W20>=V16,A21>=1,Y20>=1,V16>=1,V1>=0,A21=V20+1,W20=V15+1,Y20=V14+1,B21=0,Z20=0,X20=2,V=1] 
* CE 72: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):5+ quotIter(V1,V16,Y20,Z20,A21,A21):7
     [W20>=V16,Y20>=V1,A21>=1,V16>=1,V1>=1,A21=V20+1,W20=V15+1,Y20=V14+1,Z20=0,X20=2,V=1] 
* CE 73: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):5+ quotIter(V1,V16,Y20,Z20,A21,B21):8
     [V1+A21>=Y20+B21,V16+B21>=A21+2,B21>=A21,V1>=Y20+1,W20>=V16,A21>=1,Y20>=1,V16>=1,A21=V20+1,W20=V15+1,Y20=V14+1,Z20=0,X20=2,V=1] 
* CE 74: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):4+ quotIter(Y20,V16,Z20,W20,V20,V20):1
     [V16>=W20+1,V20>=0,W20>=1,Z20>=1,W20=V15+1,Z20=V14+1,Y20=0,X20=1,V1=0,V=1] 
* CE 75: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):4+ quotIter(V1,V16,Y20,W20,V20,Z20):4
     [V16>=W20+1,V20>=0,W20>=1,Y20>=1,V1>=0,W20=V15+1,Y20=V14+1,Z20=0,X20=1,V=1] 
* CE 76: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):4+ quotIter(V1,V16,Y20,W20,V20,V20):7
     [V16>=W20+1,Y20>=V1,V20>=0,W20>=1,V1>=1,W20=V15+1,Y20=V14+1,X20=1,V=1] 
* CE 77: start(V,V1,V16,V14,V15,V20) = 2+ le(V16,W20,X20):4+ quotIter(V1,V16,Y20,W20,V20,Z20):8
     [V1+V20>=Y20+Z20,Z20>=V20,V16>=W20+1,V1>=Y20+1,V20>=0,W20>=1,Y20>=1,W20=V15+1,Y20=V14+1,X20=1,V=1] 
* CE 78: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,V16,V14,V15,V20,V20):1
     [V20>=0,V15>=0,V14>=0,V16>=1,W20=0,V1=0,V=1] 
* CE 79: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,V16,X20,V15,Y20,Z20):2
     [V15+1>=V16,Z20>=1,V16>=1,Z20=Y20+1,Z20=V20+1,X20=0,W20=1,V14=0,V1=1,V=1] 
* CE 80: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(W20,V16,X20,V15,V20,V20):3
     [V16>=V15+2,V20>=0,V15>=0,X20=0,W20=1,V14=0,V1=1,V=1] 
* CE 81: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,V15,V20,W20):4
     [V20>=0,V15>=0,V14>=0,V16>=0,V1>=0,W20=0,V=1] 
* CE 82: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,W20,V15,V20,X20):5
     [V1+V20>=X20,V16+X20>=V20+3,X20>=V20+1,V15+1>=V16,V20>=0,V16>=1,V1>=2,W20=0,V14=0,V=1] 
* CE 83: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,W20,V15,V20,X20):6
     [V1+V20>=X20+1,X20>=V20,V16>=V15+2,V20>=0,V15>=0,V1>=2,W20=0,V14=0,V=1] 
* CE 84: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,V15,V20,V20):7
     [V14>=V1,V20>=0,V15>=0,V16>=1,V1>=1,V=1] 
* CE 85: start(V,V1,V16,V14,V15,V20) = 1+ quotIter(V1,V16,V14,V15,V20,W20):8
     [V1+V20>=V14+W20,V16+W20>=V20+2,W20>=V20,V1>=V14+1,V20>=0,V15>=0,V14>=1,V16>=1,V=1] 
* CE 86: start(V,V1,V16,V14,V15,V20) = 0+ le(W20,V1,X20):1
     [V1>=0,X20=2,W20=0,V=0] 
* CE 87: start(V,V1,V16,V14,V15,V20) = 0+ le(V,W20,X20):2
     [V>=1,X20=1,W20=0,V1=0] 
* CE 88: start(V,V1,V16,V14,V15,V20) = 0+ le(V,V1,W20):3
     [V1>=0,V>=0,W20=0] 
* CE 89: start(V,V1,V16,V14,V15,V20) = 0+ le(V,V1,W20):4
     [V>=V1+1,V1>=1,W20=1] 
* CE 90: start(V,V1,V16,V14,V15,V20) = 0+ le(V,V1,W20):5
     [V1>=V,V>=1,W20=2] 
* CE 91: start(V,V1,V16,V14,V15,V20) = 0+ quot(W20,X20,Y20):1
     [Y20=1,X20=1,W20=1,V1=1,V=1] 
* CE 92: start(V,V1,V16,V14,V15,V20) = 0+ quot(V,V1,W20):2
     [V1>=0,V>=0,W20=0] 
* CE 93: start(V,V1,V16,V14,V15,V20) = 0+ quot(V,W20,X20):3
     [V>=0,X20=1,W20=0,V1=0] 
* CE 94: start(V,V1,V16,V14,V15,V20) = 0+ quot(V,W20,X20):4
     [V>=X20,X20>=2,W20=1,V1=1] 
* CE 95: start(V,V1,V16,V14,V15,V20) = 0+ quot(V,V1,W20):5
     [V>=W20+1,W20>=0,V1>=2,V>=2] 
* CE 96: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(W20,V1,V16,V14,V15,V15):1
     [V15>=0,V14>=0,V16>=0,V1>=1,W20=0,V=0] 
* CE 97: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(W20,V1,X20,V14,Y20,Z20):2
     [V14+1>=V1,Z20>=1,V1>=1,Z20=Y20+1,Z20=V15+1,X20=0,W20=1,V16=0,V=1] 
* CE 98: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(W20,V1,X20,V14,V15,V15):3
     [V1>=V14+2,V15>=0,V14>=0,X20=0,W20=1,V16=0,V=1] 
* CE 99: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(V,V1,V16,V14,V15,W20):4
     [V15>=0,V14>=0,V16>=0,V1>=0,V>=0,W20=0] 
* CE 100: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(V,V1,W20,V14,V15,X20):5
     [V+V15>=X20,V1+X20>=V15+3,X20>=V15+1,V14+1>=V1,V15>=0,V1>=1,V>=2,W20=0,V16=0] 
* CE 101: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(V,V1,W20,V14,V15,X20):6
     [V+V15>=X20+1,X20>=V15,V1>=V14+2,V15>=0,V14>=0,V>=2,W20=0,V16=0] 
* CE 102: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(V,V1,V16,V14,V15,V15):7
     [V16>=V,V15>=0,V14>=0,V1>=1,V>=1] 
* CE 103: start(V,V1,V16,V14,V15,V20) = 0+ quotIter(V,V1,V16,V14,V15,W20):8
     [V+V15>=V16+W20,V1+W20>=V15+2,W20>=V15,V>=V16+1,V15>=0,V14>=0,V16>=1,V1>=1] 

### Cost equations --> "Loop" of start/6 
* CEs [101] --> Loop 32 
* CEs [100] --> Loop 33 
* CEs [87,93] --> Loop 34 
* CEs [60] --> Loop 35 
* CEs [59] --> Loop 36 
* CEs [57] --> Loop 37 
* CEs [56,94] --> Loop 38 
* CEs [55,58,61,62,63] --> Loop 39 
* CEs [83] --> Loop 40 
* CEs [82] --> Loop 41 
* CEs [98] --> Loop 42 
* CEs [97] --> Loop 43 
* CEs [64,69] --> Loop 44 
* CEs [79,80,91] --> Loop 45 
* CEs [65,66,67,70,71,72,73,74,75,76,77,78,81,84,85] --> Loop 46 
* CEs [68,86,88,89,90,92,95,96,99,102,103] --> Loop 47 

#### Loops of start/6 
* Loop 32: start(V,V1,V16,V14,V15,V20) [V1>=V14+2,V15>=0,V14>=0,V>=2,V16=0] 
* Loop 33: start(V,V1,V16,V14,V15,V20) [V14+1>=V1,V15>=0,V1>=1,V>=2,V16=0] 
* Loop 34: start(V,V1,V16,V14,V15,V20) [V>=0,V1=0] 
* Loop 35: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V16>=2,V1>=2,V14=0,V=2] 
* Loop 36: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V1>=2,V14=0,V16=1,V=2] 
* Loop 37: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V16>=2,V14=0,V1=1,V=2] 
* Loop 38: start(V,V1,V16,V14,V15,V20) [V>=2,V1=1] 
* Loop 39: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V14>=0,V16>=0,V1>=0,V=2] 
* Loop 40: start(V,V1,V16,V14,V15,V20) [V16>=V15+2,V20>=0,V15>=0,V1>=2,V14=0,V=1] 
* Loop 41: start(V,V1,V16,V14,V15,V20) [V15+1>=V16,V20>=0,V16>=1,V1>=2,V14=0,V=1] 
* Loop 42: start(V,V1,V16,V14,V15,V20) [V1>=V14+2,V15>=0,V14>=0,V16=0,V=1] 
* Loop 43: start(V,V1,V16,V14,V15,V20) [V14+1>=V1,V15>=0,V1>=1,V16=0,V=1] 
* Loop 44: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V14>=0,V1>=0,V16=0,V=1] 
* Loop 45: start(V,V1,V16,V14,V15,V20) [V1=1,V=1] 
* Loop 46: start(V,V1,V16,V14,V15,V20) [V20>=0,V15>=0,V14>=0,V16>=0,V1>=0,V=1] 
* Loop 47: start(V,V1,V16,V14,V15,V20) [V1>=0,V>=0] 

### Ranking functions of CR start(V,V1,V16,V14,V15,V20) 

#### Partial ranking functions of CR start(V,V1,V16,V14,V15,V20) 


### Resulting Chains:start(V,V1,V16,V14,V15,V20) 
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]


### Merging Chains  start/6 into  External patterns of execution 
* [[45],[47]] --> 1 
* [[44],[46]] --> 2 
* [[43]] --> 3 
* [[42]] --> 4 
* [[41]] --> 5 
* [[40]] --> 6 
* [[37],[39]] --> 7 
* [[36]] --> 8 
* [[35]] --> 9 
* [[34]] --> 10 
* [[38]] --> 11 
* [[33]] --> 12 
* [[32]] --> 13 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:le(V,V1,Out) -> [le(V',V1',Out')] 
1
#### Cost of phase [14]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of phase [14]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of phase [14]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of le(V,V1,Out):
* Chain [[14],17]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [17]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [16]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [18,19] 

 * loop 18:quotIter(V,V1,V16,V14,V15,Out) -> [quotIter(V',V1',V16',V14',V15',Out')] 
1*s(13)+1*s(14)+5
  Such that:s(13) =< V16'
s(14) =< V14'

 * loop 19:quotIter(V,V1,V16,V14,V15,Out) -> [quotIter(V',V1',V16',V14',V15',Out')] 
1*s(18)+1*s(17)+5
  Such that:s(17) =< V1
s(18) =< V16'

#### Cost of phase [18,19]:quotIter(V,V1,V16,V14,V15,Out) -> [quotIter(V',V1',V16',V14',V15',Out')] 
10*it(18)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+0
  Such that:aux(5) =< V
s(22) =< V+V1-V16+V14
s(22) =< V+V1-V16+V14-V'-V1'+V16'-V14'
aux(11) =< V-V16
aux(12) =< V-V16-V'+V16'
aux(13) =< V1+V14
it(18) =< aux(11)
it(18) =< aux(12)
aux(7) =< aux(5)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(5)

#### Cost of phase [18,19]:quotIter(V,V1,V16,V14,V15,Out) -> [quotIter(V',V1',V16',V14',V15',Out')] 
10*it(18)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+0
  Such that:aux(5) =< V
s(22) =< V+V1-V16+V14
s(22) =< V+V1-V16+V14-V'-V1'+V16'-V14'
aux(11) =< V-V16
aux(12) =< V-V16-V'+V16'
aux(13) =< V1+V14
it(18) =< aux(11)
it(18) =< aux(12)
aux(7) =< aux(5)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(5)

#### Cost of chains of quotIter(V,V1,V16,V14,V15,Out):
* Chain [[18,19],25]: 10*it(18)+6*s(2)+2*s(3)+1*s(7)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+4
  Such that:aux(13) =< V1+V14
aux(14) =< V
aux(15) =< V-V16
aux(16) =< V-V16+V14+1
aux(17) =< V1
s(2) =< aux(14)
aux(2) =< aux(16)
s(22) =< aux(16)
aux(2) =< aux(17)
s(7) =< aux(17)
s(3) =< aux(2)
it(18) =< aux(15)
aux(7) =< aux(14)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(14)

  with precondition: [Out=0,V1>=1,V16>=1,V14>=0,V15>=0,V>=V16+1] 

* Chain [[18,19],22]: 10*it(18)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+1*s(23)+3
  Such that:s(22) =< V-V16+V14
aux(13) =< V1+V14
aux(18) =< V
aux(19) =< V-V16
s(23) =< aux(18)
it(18) =< aux(19)
aux(7) =< aux(18)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(18)

  with precondition: [V1>=1,V16>=1,V14>=0,V15>=0,V>=V16+1,Out>=V15,Out+V1>=V15+2,V+V15>=Out+V16] 

* Chain [25]: 5*s(2)+2*s(3)+1*s(7)+1*s(10)+4
  Such that:s(10) =< V
s(7) =< V1
aux(1) =< V16
aux(2) =< V14+1
s(2) =< aux(1)
s(3) =< aux(2)

  with precondition: [Out=0,V>=0,V1>=0,V16>=0,V14>=0,V15>=0] 

* Chain [24]: 3
  with precondition: [V=0,V15=Out,V1>=1,V16>=0,V14>=0,V15>=0] 

* Chain [23]: 2*s(24)+1*s(26)+4
  Such that:s(26) =< V1
aux(20) =< V14+1
s(24) =< aux(20)

  with precondition: [V16=0,Out=0,V>=1,V1>=1,V14>=0,V15>=0] 

* Chain [22]: 1*s(23)+3
  Such that:s(23) =< V

  with precondition: [V15=Out,V>=1,V1>=1,V14>=0,V15>=0,V16>=V] 

* Chain [21,[18,19],25]: 17*it(18)+2*s(3)+2*s(7)+1*s(19)+1*s(20)+1*s(21)+9
  Such that:aux(21) =< V
aux(22) =< V1
s(7) =< aux(22)
it(18) =< aux(21)
aux(2) =< aux(21)
aux(2) =< aux(22)
s(3) =< aux(2)
aux(7) =< aux(21)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(22)
s(19) =< it(18)*aux(21)

  with precondition: [V16=0,Out=0,V>=2,V1>=1,V15>=0,V14+1>=V1] 

* Chain [21,[18,19],22]: 12*it(18)+1*s(19)+1*s(20)+1*s(21)+1*s(27)+8
  Such that:aux(23) =< V
aux(24) =< V1
it(18) =< aux(23)
s(27) =< aux(24)
aux(7) =< aux(23)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(24)
s(19) =< it(18)*aux(23)

  with precondition: [V16=0,V>=2,V1>=1,V15>=0,V14+1>=V1,Out>=V15+1,Out+V1>=V15+3,V+V15>=Out] 

* Chain [21,25]: 7*s(2)+2*s(7)+1*s(10)+9
  Such that:s(10) =< V
aux(25) =< 1
aux(26) =< V1
s(7) =< aux(26)
s(2) =< aux(25)

  with precondition: [V16=0,Out=0,V>=1,V1>=1,V15>=0,V14+1>=V1] 

* Chain [21,22]: 1*s(23)+1*s(27)+8
  Such that:s(23) =< 1
s(27) =< V1

  with precondition: [V=1,V16=0,Out=V15+1,V1>=1,Out>=1,V14+1>=V1] 

* Chain [20,[18,19],25]: 16*it(18)+2*s(3)+1*s(7)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+1*s(28)+9
  Such that:aux(16) =< V+V14+1
aux(17) =< V1
aux(13) =< V1+V14+1
s(28) =< V14+1
aux(27) =< V
it(18) =< aux(27)
aux(2) =< aux(16)
s(22) =< aux(16)
aux(2) =< aux(17)
s(7) =< aux(17)
s(3) =< aux(2)
aux(7) =< aux(27)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(27)

  with precondition: [V16=0,Out=0,V>=2,V14>=0,V15>=0,V1>=V14+2] 

* Chain [20,[18,19],22]: 11*it(18)+1*s(19)+1*s(20)+1*s(21)+1*s(22)+1*s(28)+8
  Such that:s(22) =< V+V14
aux(13) =< V1+V14+1
s(28) =< V14+1
aux(28) =< V
it(18) =< aux(28)
aux(7) =< aux(28)
s(21) =< it(18)*aux(7)
s(20) =< it(18)*aux(13)
s(19) =< it(18)*aux(28)

  with precondition: [V16=0,V>=2,V14>=0,V15>=0,V1>=V14+2,Out>=V15,V+V15>=Out+1] 

* Chain [20,25]: 5*s(2)+2*s(3)+1*s(7)+1*s(10)+1*s(28)+9
  Such that:aux(1) =< 1
s(10) =< V
s(7) =< V1
s(28) =< V14+1
aux(2) =< V14+2
s(2) =< aux(1)
s(3) =< aux(2)

  with precondition: [V16=0,Out=0,V>=1,V14>=0,V15>=0,V1>=V14+2] 

* Chain [20,22]: 1*s(23)+1*s(28)+8
  Such that:s(23) =< 1
s(28) =< V14+1

  with precondition: [V=1,V16=0,V15=Out,V14>=0,V15>=0,V1>=V14+2] 


#### Cost of chains of quot(V,V1,Out):
* Chain [31]: 52*s(100)+9*s(101)+18*s(102)+2*s(104)+2*s(106)+3*s(108)+2*s(109)+3*s(110)+2*s(113)+4*s(114)+1*s(115)+10
  Such that:aux(33) =< 1
s(95) =< 2
aux(34) =< V
aux(35) =< V+1
aux(36) =< V1
s(93) =< V1+1
s(100) =< aux(34)
s(101) =< aux(36)
s(102) =< aux(33)
s(104) =< s(95)
s(105) =< aux(34)
s(105) =< aux(36)
s(106) =< s(105)
s(107) =< aux(34)
s(108) =< s(100)*s(107)
s(109) =< s(100)*aux(36)
s(110) =< s(100)*aux(34)
s(112) =< aux(35)
s(113) =< aux(35)
s(112) =< aux(36)
s(114) =< s(112)
s(115) =< s(100)*s(93)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [30]: 2*s(123)+9
  Such that:aux(37) =< 1
s(123) =< aux(37)

  with precondition: [V=1,V1=1,Out=1] 

* Chain [29]: 2*s(125)+9
  Such that:aux(38) =< 1
s(125) =< aux(38)

  with precondition: [V=1,Out=0,V1>=2] 

* Chain [28]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [27]: 12*s(129)+1*s(130)+1*s(132)+1*s(133)+1*s(134)+9
  Such that:s(128) =< 1
s(127) =< V
s(129) =< s(127)
s(130) =< s(128)
s(131) =< s(127)
s(132) =< s(129)*s(131)
s(133) =< s(129)*s(128)
s(134) =< s(129)*s(127)

  with precondition: [V1=1,Out>=2,V>=Out] 

* Chain [26]: 12*s(135)+1*s(137)+1*s(141)+1*s(142)+1*s(143)+9
  Such that:s(137) =< 1
s(136) =< V1+1
aux(39) =< V
s(135) =< aux(39)
s(140) =< aux(39)
s(141) =< s(135)*s(140)
s(142) =< s(135)*s(136)
s(143) =< s(135)*aux(39)

  with precondition: [V>=2,V1>=2,Out>=0,V>=Out+1] 


#### Cost of chains of start(V,V1,V16,V14,V15,V20):
* Chain [47]: 20*s(166)+109*s(168)+33*s(175)+2*s(178)+4*s(180)+6*s(182)+3*s(183)+6*s(184)+2*s(186)+4*s(187)+2*s(188)+6*s(210)+2*s(212)+5*s(219)+1*s(221)+2*s(222)+1*s(223)+1*s(225)+2*s(226)+20*s(227)+2*s(228)+2*s(229)+2*s(230)+1*s(232)+10
  Such that:s(169) =< 2
s(171) =< V+1
s(232) =< V-V16+V14
s(198) =< V-V16+V14+1
s(199) =< V+V14+1
s(201) =< V1+V14+1
s(202) =< V16
s(207) =< V14+1
s(203) =< V14+2
aux(41) =< 1
aux(42) =< V
aux(43) =< V-V16
aux(44) =< V1
aux(45) =< V1+1
aux(46) =< V1+V14
s(175) =< aux(41)
s(168) =< aux(42)
s(166) =< aux(44)
s(178) =< s(169)
s(179) =< aux(42)
s(179) =< aux(44)
s(180) =< s(179)
s(181) =< aux(42)
s(182) =< s(168)*s(181)
s(183) =< s(168)*aux(44)
s(184) =< s(168)*aux(42)
s(185) =< s(171)
s(186) =< s(171)
s(185) =< aux(44)
s(187) =< s(185)
s(188) =< s(168)*aux(45)
s(210) =< s(207)
s(212) =< s(203)
s(219) =< s(202)
s(220) =< s(199)
s(221) =< s(199)
s(220) =< aux(44)
s(222) =< s(220)
s(223) =< s(168)*s(201)
s(224) =< s(198)
s(225) =< s(198)
s(224) =< aux(44)
s(226) =< s(224)
s(227) =< aux(43)
s(228) =< s(227)*s(181)
s(229) =< s(227)*aux(46)
s(230) =< s(227)*aux(42)

  with precondition: [V>=0,V1>=0] 

* Chain [46]: 12*s(242)+32*s(244)+132*s(258)+42*s(260)+2*s(262)+6*s(264)+6*s(266)+3*s(267)+6*s(268)+10*s(269)+1*s(271)+2*s(272)+1*s(273)+62*s(275)+2*s(276)+6*s(278)+2*s(279)+6*s(280)+8*s(309)+2*s(311)+1*s(320)+2*s(321)+1*s(322)+2*s(324)+4*s(325)+2*s(328)+2*s(333)+5*s(365)+1*s(367)+2*s(368)+1*s(369)+2*s(375)+12
  Such that:s(253) =< 2
s(249) =< V1+1
s(345) =< V1+V15+1
s(298) =< V1+V15+2
s(251) =< V16+1
s(300) =< V16+V15+2
s(348) =< V14
s(302) =< V15+3
aux(52) =< 1
aux(53) =< V1
aux(54) =< V1-V14
aux(55) =< V1-V14+V15
aux(56) =< V1-V14+V15+1
aux(57) =< V16
aux(58) =< V16+V15
aux(59) =< V16+V15+1
aux(60) =< V14+1
aux(61) =< V15+1
aux(62) =< V15+2
s(258) =< aux(53)
s(333) =< aux(55)
s(244) =< aux(57)
s(242) =< aux(61)
s(309) =< aux(62)
s(260) =< aux(52)
s(311) =< s(302)
s(263) =< aux(53)
s(263) =< aux(57)
s(264) =< s(263)
s(265) =< aux(53)
s(266) =< s(258)*s(265)
s(267) =< s(258)*aux(57)
s(268) =< s(258)*aux(53)
s(269) =< aux(60)
s(319) =< s(298)
s(320) =< s(298)
s(319) =< aux(57)
s(321) =< s(319)
s(322) =< s(258)*s(300)
s(323) =< aux(56)
s(324) =< aux(56)
s(323) =< aux(57)
s(325) =< s(323)
s(275) =< aux(54)
s(278) =< s(275)*s(265)
s(328) =< s(275)*aux(59)
s(280) =< s(275)*aux(53)
s(365) =< s(348)
s(366) =< s(345)
s(367) =< s(345)
s(366) =< aux(57)
s(368) =< s(366)
s(369) =< s(258)*aux(59)
s(375) =< s(275)*aux(58)
s(262) =< s(253)
s(270) =< s(249)
s(271) =< s(249)
s(270) =< aux(57)
s(272) =< s(270)
s(273) =< s(258)*s(251)
s(274) =< aux(54)
s(274) =< aux(57)
s(276) =< s(274)
s(279) =< s(275)*aux(57)

  with precondition: [V=1,V1>=0,V16>=0,V14>=0,V15>=0,V20>=0] 

* Chain [45]: 4*s(388)+1*s(389)+1*s(391)+9
  Such that:s(389) =< V16
s(391) =< V15+1
aux(63) =< 1
s(388) =< aux(63)

  with precondition: [V=1,V1=1] 

* Chain [44]: 42*s(405)+18*s(407)+2*s(409)+2*s(413)+2*s(415)+5*s(416)+1*s(418)+1*s(420)+11*s(422)+1*s(425)+1*s(427)+12
  Such that:aux(65) =< 1
s(400) =< 2
s(402) =< V1
s(396) =< V1+1
aux(66) =< V1-V14
s(399) =< V14+1
s(405) =< s(402)
s(407) =< aux(65)
s(409) =< s(400)
s(412) =< s(402)
s(413) =< s(405)*s(412)
s(415) =< s(405)*s(402)
s(416) =< s(399)
s(418) =< s(396)
s(420) =< s(405)*aux(65)
s(422) =< aux(66)
s(425) =< s(422)*s(412)
s(427) =< s(422)*s(402)

  with precondition: [V=1,V16=0,V1>=0,V14>=0,V15>=0,V20>=0] 

* Chain [43]: 1*s(428)+1*s(429)+8
  Such that:s(428) =< 1
s(429) =< V1

  with precondition: [V=1,V16=0,V1>=1,V15>=0,V14+1>=V1] 

* Chain [42]: 1*s(430)+1*s(431)+8
  Such that:s(430) =< 1
s(431) =< V14+1

  with precondition: [V=1,V16=0,V14>=0,V15>=0,V1>=V14+2] 

* Chain [41]: 12*s(434)+1*s(435)+1*s(437)+1*s(438)+1*s(439)+9
  Such that:s(432) =< V1
s(433) =< V16
s(434) =< s(432)
s(435) =< s(433)
s(436) =< s(432)
s(437) =< s(434)*s(436)
s(438) =< s(434)*s(433)
s(439) =< s(434)*s(432)

  with precondition: [V=1,V14=0,V1>=2,V16>=1,V20>=0,V15+1>=V16] 

* Chain [40]: 1*s(440)+1*s(442)+11*s(444)+1*s(446)+1*s(447)+1*s(448)+9
  Such that:s(443) =< V1
s(440) =< V1+V15
s(441) =< V16+V15+1
s(442) =< V15+1
s(444) =< s(443)
s(445) =< s(443)
s(446) =< s(444)*s(445)
s(447) =< s(444)*s(441)
s(448) =< s(444)*s(443)

  with precondition: [V=1,V14=0,V1>=2,V15>=0,V20>=0,V16>=V15+2] 

* Chain [39]: 44*s(460)+9*s(461)+18*s(462)+2*s(464)+2*s(466)+2*s(468)+1*s(469)+2*s(470)+5*s(471)+1*s(473)+2*s(474)+1*s(475)+1*s(477)+2*s(478)+21*s(479)+2*s(480)+2*s(481)+2*s(482)+10
  Such that:aux(67) =< 1
s(455) =< 2
s(451) =< V1+1
s(450) =< V1-V14+1
s(453) =< V16+1
s(454) =< V14
aux(70) =< V1
aux(71) =< V1-V14
aux(72) =< V16
s(460) =< aux(70)
s(461) =< aux(72)
s(462) =< aux(67)
s(464) =< s(455)
s(465) =< aux(70)
s(465) =< aux(72)
s(466) =< s(465)
s(467) =< aux(70)
s(468) =< s(460)*s(467)
s(469) =< s(460)*aux(72)
s(470) =< s(460)*aux(70)
s(471) =< s(454)
s(472) =< s(451)
s(473) =< s(451)
s(472) =< aux(72)
s(474) =< s(472)
s(475) =< s(460)*s(453)
s(476) =< s(450)
s(477) =< s(450)
s(476) =< aux(72)
s(478) =< s(476)
s(479) =< aux(71)
s(480) =< s(479)*s(467)
s(481) =< s(479)*aux(72)
s(482) =< s(479)*aux(70)

  with precondition: [V=2,V1>=0,V16>=0,V14>=0,V15>=0,V20>=0] 

* Chain [38]: 3*s(494)+12*s(498)+1*s(501)+1*s(502)+1*s(503)+9
  Such that:s(497) =< V
aux(74) =< 1
s(494) =< aux(74)
s(498) =< s(497)
s(500) =< s(497)
s(501) =< s(498)*s(500)
s(502) =< s(498)*aux(74)
s(503) =< s(498)*s(497)

  with precondition: [V1=1,V>=2] 

* Chain [37]: 2*s(504)+9
  Such that:aux(75) =< 1
s(504) =< aux(75)

  with precondition: [V=2,V1=1,V14=0,V16>=2,V15>=0,V20>=0] 

* Chain [36]: 12*s(508)+1*s(509)+1*s(511)+1*s(512)+1*s(513)+9
  Such that:s(507) =< 1
s(506) =< V1
s(508) =< s(506)
s(509) =< s(507)
s(510) =< s(506)
s(511) =< s(508)*s(510)
s(512) =< s(508)*s(507)
s(513) =< s(508)*s(506)

  with precondition: [V=2,V16=1,V14=0,V1>=2,V15>=0,V20>=0] 

* Chain [35]: 12*s(514)+1*s(516)+1*s(520)+1*s(521)+1*s(522)+9
  Such that:s(516) =< 1
s(515) =< V16+1
aux(76) =< V1
s(514) =< aux(76)
s(519) =< aux(76)
s(520) =< s(514)*s(519)
s(521) =< s(514)*s(515)
s(522) =< s(514)*aux(76)

  with precondition: [V=2,V14=0,V1>=2,V16>=2,V15>=0,V20>=0] 

* Chain [34]: 1
  with precondition: [V1=0,V>=0] 

* Chain [33]: 12*s(525)+1*s(526)+1*s(528)+1*s(529)+1*s(530)+8
  Such that:s(523) =< V
s(524) =< V1
s(525) =< s(523)
s(526) =< s(524)
s(527) =< s(523)
s(528) =< s(525)*s(527)
s(529) =< s(525)*s(524)
s(530) =< s(525)*s(523)

  with precondition: [V16=0,V>=2,V1>=1,V15>=0,V14+1>=V1] 

* Chain [32]: 1*s(531)+1*s(533)+11*s(535)+1*s(537)+1*s(538)+1*s(539)+8
  Such that:s(534) =< V
s(531) =< V+V14
s(532) =< V1+V14+1
s(533) =< V14+1
s(535) =< s(534)
s(536) =< s(534)
s(537) =< s(535)*s(536)
s(538) =< s(535)*s(532)
s(539) =< s(535)*s(534)

  with precondition: [V16=0,V>=2,V14>=0,V15>=0,V1>=V14+2] 


Closed-form bounds of start(V,V1,V16,V14,V15,V20): 
-------------------------------------
* Chain [47] with precondition: [V>=0,V1>=0] 
    - Upper bound: 113*V+47+12*V*V+4*V*nat(V-V16)+20*V1+3*V1*V+nat(V16)*5+ (6*V+6)+nat(V1+V14)*2*nat(V-V16)+ (2*V1+2)*V+nat(V14+1)*6+nat(V14+2)*2+nat(V+V14+1)*3+nat(V1+V14+1)*V+nat(V-V16+V14+1)*3+nat(V-V16+V14)+nat(V-V16)*20 
    - Complexity: n^2 
* Chain [46] with precondition: [V=1,V1>=0,V16>=0,V14>=0,V15>=0,V20>=0] 
    - Upper bound: 138*V1+58+12*V1*V1+12*V1*nat(V1-V14)+32*V16+3*V16*V1+2*V16*nat(V1-V14)+5*V14+ (3*V1+3)+ (2*V16+2*V15)*nat(V1-V14)+ (V16+1)*V1+ (10*V14+10)+ (12*V15+12)+ (8*V15+16)+ (2*V15+6)+ (3*V1+3*V15+3)+ (3*V1+3*V15+6)+ (V16+V15+1)*V1+ (2*V16+2*V15+2)*nat(V1-V14)+ (V16+V15+2)*V1+nat(V1-V14+V15+1)*6+nat(V1-V14+V15)*2+nat(V1-V14)*64 
    - Complexity: n^2 
* Chain [45] with precondition: [V=1,V1=1] 
    - Upper bound: nat(V16)+13+nat(V15+1) 
    - Complexity: n 
* Chain [44] with precondition: [V=1,V16=0,V1>=0,V14>=0,V15>=0,V20>=0] 
    - Upper bound: 43*V1+34+4*V1*V1+2*V1*nat(V1-V14)+ (V1+1)+ (5*V14+5)+nat(V1-V14)*11 
    - Complexity: n^2 
* Chain [43] with precondition: [V=1,V16=0,V1>=1,V15>=0,V14+1>=V1] 
    - Upper bound: V1+9 
    - Complexity: n 
* Chain [42] with precondition: [V=1,V16=0,V14>=0,V15>=0,V1>=V14+2] 
    - Upper bound: V14+10 
    - Complexity: n 
* Chain [41] with precondition: [V=1,V14=0,V1>=2,V16>=1,V20>=0,V15+1>=V16] 
    - Upper bound: 12*V1+9+2*V1*V1+V16+V16*V1 
    - Complexity: n^2 
* Chain [40] with precondition: [V=1,V14=0,V1>=2,V15>=0,V20>=0,V16>=V15+2] 
    - Upper bound: 11*V1+9+2*V1*V1+ (V1+V15)+ (V15+1)+ (V16+V15+1)*V1 
    - Complexity: n^2 
* Chain [39] with precondition: [V=2,V1>=0,V16>=0,V14>=0,V15>=0,V20>=0] 
    - Upper bound: 46*V1+32+4*V1*V1+4*V1*nat(V1-V14)+9*V16+V16*V1+2*V16*nat(V1-V14)+5*V14+ (3*V1+3)+ (V16+1)*V1+nat(V1-V14+1)*3+nat(V1-V14)*21 
    - Complexity: n^2 
* Chain [38] with precondition: [V1=1,V>=2] 
    - Upper bound: 13*V+12+2*V*V 
    - Complexity: n^2 
* Chain [37] with precondition: [V=2,V1=1,V14=0,V16>=2,V15>=0,V20>=0] 
    - Upper bound: 11 
    - Complexity: constant 
* Chain [36] with precondition: [V=2,V16=1,V14=0,V1>=2,V15>=0,V20>=0] 
    - Upper bound: 13*V1+10+2*V1*V1 
    - Complexity: n^2 
* Chain [35] with precondition: [V=2,V14=0,V1>=2,V16>=2,V15>=0,V20>=0] 
    - Upper bound: 12*V1+10+2*V1*V1+ (V16+1)*V1 
    - Complexity: n^2 
* Chain [34] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [33] with precondition: [V16=0,V>=2,V1>=1,V15>=0,V14+1>=V1] 
    - Upper bound: 12*V+8+2*V*V+V1+V1*V 
    - Complexity: n^2 
* Chain [32] with precondition: [V16=0,V>=2,V14>=0,V15>=0,V1>=V14+2] 
    - Upper bound: 11*V+8+2*V*V+ (V+V14)+ (V14+1)+ (V1+V14+1)*V 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V16,V14,V15,V20): max([max([max([10,nat(V14+1)+8,nat(V16)+12+nat(V15+1)]),11*V+7+2*V*V+max([2*V+4,nat(V14+1)+nat(V+V14)+nat(V1+V14+1)*V])]),V1+7+max([max([1,2*V*V+12*V+V1*V]),10*V1+1+max([max([2*V1*V1+max([max([nat(V16)*V1+nat(V16),nat(V16+1)*V1+1]),30*V1+22+2*V1*V1+2*V1*nat(V1-V14)+ (V1+1)+nat(V1-V14)*11+max([nat(V14+1)*5+2,2*V1*nat(V1-V14)+3*V1+nat(V16)*9+nat(V16)*V1+nat(V16)*2*nat(V1-V14)+nat(V14)*5+ (2*V1+2)+nat(V16+1)*V1+nat(V1-V14)*10+max([nat(V1-V14+1)*3,92*V1+26+8*V1*V1+8*V1*nat(V1-V14)+nat(V16)*23+nat(V16)*2*V1+nat(V16+V15)*2*nat(V1-V14)+nat(V14+1)*10+nat(V15+1)*12+nat(V15+2)*8+nat(V15+3)*2+nat(V1+V15+1)*3+nat(V1+V15+2)*3+nat(V16+V15+1)*V1+nat(V16+V15+1)*2*nat(V1-V14)+nat(V16+V15+2)*V1+nat(V1-V14+V15+1)*6+nat(V1-V14+V15)*2+nat(V1-V14)*43])])+ (V1+1)]),113*V+38+12*V*V+4*V*nat(V-V16)+8*V1+3*V1*V+nat(V16)*5+ (6*V+6)+nat(V1+V14)*2*nat(V-V16)+ (2*V1+2)*V+nat(V14+1)*6+nat(V14+2)*2+nat(V+V14+1)*3+nat(V1+V14+1)*V+nat(V-V16+V14+1)*3+nat(V-V16+V14)+nat(V-V16)*20])+V1,2*V1*V1+nat(V1+V15)+nat(V15+1)+nat(V16+V15+1)*V1])])])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 180 ms.
* Invariants computed in 285 ms.
   - Backward Invariants 145 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 779 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 1594 ms.
   - Equation cost structures 831 ms.
   - Phase cost structures 230 ms.
   - Chain cost structures 136 ms.
   - Solving cost expressions 76 ms.
* Total analysis performed in 3024 ms.

