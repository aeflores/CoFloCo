
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [le/3]
1. recursive  : [plus/3]
2. recursive [non_tail] : [times/3]
3. recursive  : [if/6,loop/5]
4. non_recursive  : [log/3]
5. non_recursive  : [start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into le/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into times/3
3. SCC is partially evaluated into loop/5
4. SCC is partially evaluated into log/3
5. SCC is partially evaluated into start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations le/3 
* CE 20 is refined into CE [29] 
* CE 17 is refined into CE [30] 
* CE 18 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations le/3 
* CE 29: le(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 30: le(V,V1,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 31: le(V,V1,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 32: le(V,V1,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of le/3 
* CEs [32] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 

#### Loops of le/3 
* Loop 20: le(V,V1,Out)->  le(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 21: le(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 22: le(V,V1,Out) [V>=1,Out=1,V1=0] 
* Loop 23: le(V,V1,Out) [V1>=0,Out=2,V=0] 

### Ranking functions of CR le(V,V1,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR le(V,V1,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:le(V,V1,Out) 
* [[20],23]
* [[20],22]
* [[20],21]
* [23]
* [22]
* [21]


### Merging Chains  le/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21],[21,[20]]] --> 3 
* [[22,[20]]] --> 4 
* [[23,[20]]] --> 5 


### Specialization of cost equations plus/3 
* CE 23 is refined into CE [33] 
* CE 21 is refined into CE [34] 
* CE 22 is refined into CE [35] 


#### Refined cost equations plus/3 
* CE 33: plus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 34: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 35: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 

### Cost equations --> "Loop" of plus/3 
* CEs [35] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [34] --> Loop 26 

#### Loops of plus/3 
* Loop 24: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 
* Loop 25: plus(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 26: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [24]: [V]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[24],26]
* [[24],25]
* [26]
* [25]


### Merging Chains  plus/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[26,[24]]] --> 3 
* [[25,[24]]] --> 4 


### Specialization of cost equations times/3 
* CE 10 is refined into CE [36] 
* CE 12 is refined into CE [37] 
* CE 11 is refined into CE [38,39,40,41] 


#### Refined cost equations times/3 
* CE 36: times(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 37: times(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 38: times(V,V1,Out) = 1+ times(W1,X1,Out)+ plus(Y1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V,X1=0,Y1=0,V1=0] 
* CE 39: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,X1,Y1):2
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 40: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,Y1,Out):3
     [Out>=V1,W1>=0,V1>=1,Out=V1+X1,Out=V1+Y1,W1+1=V] 
* CE 41: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,X1,Out):4
     [V1>=Out,W1>=0,Out>=1,X1>=0,W1+1=V] 

### Cost equations --> "Loop" of times/3 
* CEs [41] --> Loop 27 
* CEs [40] --> Loop 28 
* CEs [39] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [36,37] --> Loop 31 

#### Loops of times/3 
* Loop 27: times(V,V1,Out)->  times(V',V1,Out')
                  [V1>=Out,Out'>=0,Out>=1,V>=1,V=V'+1] 
* Loop 28: times(V,V1,Out)->  times(V',V1,Out')
                  [Out>=V1,V1>=1,V>=1,V1+Out'=Out,V=V'+1] 
* Loop 29: times(V,V1,Out)->  times(V',V1,Out')
                  [Out'>=0,V1>=0,V>=1,V=V'+1,Out=0] 
* Loop 30: times(V,V1,Out)->  times(V',V1',Out)
                  [Out>=0,V>=1,V=V'+1,V1'=0,V1=0] 
* Loop 31: times(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR times(V,V1,Out) 
* RF of phase [27,28,29,30]: [V]

#### Partial ranking functions of CR times(V,V1,Out) 
* Partial RF of phase [27,28,29,30]:
  - RF of loop [27:1,28:1,29:1,30:1]:
    V


### Resulting Chains:times(V,V1,Out) 
* [[27,28,29,30],31]
* [31]


### Merging Chains  times/3 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[27,28,29,30]]] --> 2 


### Specialization of cost equations loop/5 
* CE 15 is refined into CE [42,43] 
* CE 13 is refined into CE [44,45,46,47] 
* CE 16 is refined into CE [48] 
* CE 14 is refined into CE [49,50] 


#### Refined cost equations loop/5 
* CE 42: loop(A,B,C,D,D) = 2+ le(E,C,F):1
     [C>=1,D>=0,B>=2,F=2,E=0,A=0] 
* CE 43: loop(A,B,C,D,D) = 2+ le(A,C,E):5
     [C>=A,A>=1,D>=0,B>=2,E=2] 
* CE 44: loop(V,V1,V22,V21,Out) = 1+ le(W22,V22,X22):1
     [V22>=1,V21>=0,V1>=2,X22=2,W22=0,Out=0,V=0] 
* CE 45: loop(V,V1,V22,V21,Out) = 1+ le(V,V22,W22):3
     [V22>=1,V>=0,V21>=0,V1>=2,W22=0,Out=0] 
* CE 46: loop(V,V1,V22,V21,Out) = 1+ le(V,V22,W22):4
     [V>=V22+1,V22>=1,V21>=0,V1>=2,W22=1,Out=0] 
* CE 47: loop(V,V1,V22,V21,Out) = 1+ le(V,V22,W22):5
     [V22>=V,V>=1,V21>=0,V1>=2,W22=2,Out=0] 
* CE 48: loop(V,V1,V22,V21,Out) = 0
     [V21>=0,V22>=0,V1>=0,V>=0,Out=0] 
* CE 49: loop(V,V1,V22,V21,Out) = 2+ le(V,V22,W22):4+ times(V1,V22,X22):1+ loop(V,V1,Y22,Z22,Out)
     [V>=V22+1,V22>=1,V1>=2,V21>=0,V21+1=Z22,Y22=0,X22=0,W22=1] 
* CE 50: loop(V,V1,V22,V21,Out) = 2+ le(V,V22,W22):4+ times(V1,V22,X22):2+ loop(V,V1,X22,Y22,Out)
     [V>=V22+1,X22>=0,V22>=1,V1>=2,V21>=0,V21+1=Y22,W22=1] 

### Cost equations --> "Loop" of loop/5 
* CEs [49,50] --> Loop 32 
* CEs [43] --> Loop 33 
* CEs [42] --> Loop 34 
* CEs [44,45,46,47,48] --> Loop 35 

#### Loops of loop/5 
* Loop 32: loop(V,V1,V22,V21,Out)->  loop(V,V1,V22',V21',Out)
                  [V>=V22+1,V22'>=0,V21>=0,V22>=1,V1>=2,V21+1=V21'] 
* Loop 33: loop(A,B,C,D,D) [C>=A,D>=0,B>=2,A>=1] 
* Loop 34: loop(A,B,C,D,D) [D>=0,C>=1,B>=2,A=0] 
* Loop 35: loop(V,V1,V22,V21,Out) [V21>=0,V22>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR loop(V,V1,V22,V21,Out) 

#### Partial ranking functions of CR loop(V,V1,V22,V21,Out) 


### Resulting Chains:loop(V,V1,V22,V21,Out) 
* [[32]]...
* [[32],35]
* [[32],33]
* [35]
* [34]
* [33]


### Merging Chains  loop/5 into  External patterns of execution 
* [[34]] --> 1 
* [[35],[35,[32]]] --> 2 
* [[33]] --> 3 
* [[33,[32]]] --> 4 
* [[[32]]] --> 5 


### Specialization of cost equations log/3 
* CE 27 is refined into CE [51,52,53,54] 
* CE 28 is refined into CE [55] 
* CE 25 is refined into CE [56] 
* CE 24 is refined into CE [57] 
* CE 26 is refined into CE [58] 


#### Refined cost equations log/3 
* CE 51: log(V,V1,Out) = 1+ loop(V,V1,W1,X1,Y1):2
     [V1>=2,V>=1,Y1=0,X1=0,W1=1,Out=0] 
* CE 52: log(V,V1,Out) = 1+ loop(W1,V1,X1,Y1,Z1):3
     [V1>=2,Z1=0,Y1=0,X1=1,W1=1,Out=0,V=1] 
* CE 53: log(V,V1,Out) = 1+ loop(V,V1,W1,X1,Out):4
     [Out>=1,V1>=2,V>=2,X1=0,W1=1] 
* CE 54: log(V,V1,Out) = 1+ loop(V,V1,W1,X1,Out):5
     [V1>=2,V>=2,X1=0,W1=1] 
* CE 55: log(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 56: log(V,V1,Out) = 1
     [V>=0,Out=1,V1=1] 
* CE 57: log(V,V1,Out) = 1
     [V>=0,Out=1,V1=0] 
* CE 58: log(V,V1,Out) = 1
     [V1>=2,Out=2,V=0] 

### Cost equations --> "Loop" of log/3 
* CEs [53] --> Loop 36 
* CEs [56] --> Loop 37 
* CEs [57] --> Loop 38 
* CEs [51,52,55] --> Loop 39 
* CEs [58] --> Loop 40 
* CEs [54] --> Loop 41 

#### Loops of log/3 
* Loop 36: log(V,V1,Out) [Out>=1,V1>=2,V>=2] 
* Loop 37: log(V,V1,Out) [V>=0,Out=1,V1=1] 
* Loop 38: log(V,V1,Out) [V>=0,Out=1,V1=0] 
* Loop 39: log(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 40: log(V,V1,Out) [V1>=2,Out=2,V=0] 
* Loop 41: log(V,V1,Out) [V1>=2,V>=2] 

### Ranking functions of CR log(V,V1,Out) 

#### Partial ranking functions of CR log(V,V1,Out) 


### Resulting Chains:log(V,V1,Out) 
* [41]...
* [40]
* [39]
* [38]
* [37]
* [36]


### Merging Chains  log/3 into  External patterns of execution 
* [[40]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 
* [[39]] --> 4 
* [[36]] --> 5 
* [[41]] --> 6 


### Specialization of cost equations start/5 
* CE 4 is refined into CE [59] 
* CE 2 is refined into CE [60] 
* CE 3 is refined into CE [61,62,63,64,65,66] 
* CE 5 is refined into CE [67,68,69,70,71] 
* CE 6 is refined into CE [72,73,74,75] 
* CE 7 is refined into CE [76,77] 
* CE 8 is refined into CE [78,79,80,81,82,83] 
* CE 9 is refined into CE [84,85,86,87,88] 


#### Refined cost equations start/5 
* CE 59: start(V,V1,V22,V21,V27) = 1
     [V27>=0,V21>=0,V22>=0,V1>=0,V=2] 
* CE 60: start(V,V1,V22,V21,V27) = 0
     [V27>=0,V21>=0,V22>=0,V1>=0,V>=0] 
* CE 61: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):1+ loop(V1,V22,X27,Y27,Z27):2
     [Y27>=1,V22>=0,V1>=0,V21>=0,Y27=V27+1,Z27=0,X27=0,W27=0,V=1] 
* CE 62: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):2+ loop(X27,V22,W27,Y27,Y27):1
     [Y27>=1,W27>=1,V22>=2,V21>=0,Y27=V27+1,X27=0,V1=0,V=1] 
* CE 63: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):2+ loop(V1,V22,W27,X27,Y27):2
     [X27>=1,W27>=0,V22>=1,V1>=0,V21>=0,X27=V27+1,Y27=0,V=1] 
* CE 64: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):2+ loop(V1,V22,W27,X27,X27):3
     [W27>=V1,X27>=1,V22>=2,V1>=1,V21>=0,X27=V27+1,V=1] 
* CE 65: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):2+ loop(V1,V22,W27,X27,Y27):4
     [Y27>=X27+1,V1>=W27+1,X27>=1,W27>=1,V22>=2,V21>=0,X27=V27+1,V=1] 
* CE 66: start(V,V1,V22,V21,V27) = 1+ times(V22,V21,W27):2+ loop(V1,V22,W27,X27,Y27):5
     [V1>=W27+1,X27>=1,W27>=1,V22>=2,V21>=0,X27=V27+1,V=1] 
* CE 67: start(V,V1,V22,V21,V27) = 0+ le(W27,V1,X27):1
     [V1>=0,X27=2,W27=0,V=0] 
* CE 68: start(V,V1,V22,V21,V27) = 0+ le(V,W27,X27):2
     [V>=1,X27=1,W27=0,V1=0] 
* CE 69: start(V,V1,V22,V21,V27) = 0+ le(V,V1,W27):3
     [V1>=0,V>=0,W27=0] 
* CE 70: start(V,V1,V22,V21,V27) = 0+ le(V,V1,W27):4
     [V>=V1+1,V1>=1,W27=1] 
* CE 71: start(V,V1,V22,V21,V27) = 0+ le(V,V1,W27):5
     [V1>=V,V>=1,W27=2] 
* CE 72: start(V,V1,V22,V21,V27) = 0+ plus(W27,V1,V1):1
     [V1>=0,W27=0,V=0] 
* CE 73: start(V,V1,V22,V21,V27) = 0+ plus(V,V1,W27):2
     [V1>=0,V>=0,W27=0] 
* CE 74: start(V,V1,V22,V21,V27) = 0+ plus(V,W27,X27):3
     [X27>=V,V>=1,X27=V+W27,X27=V+V1] 
* CE 75: start(V,V1,V22,V21,V27) = 0+ plus(V,V1,W27):4
     [V>=W27,W27>=1,V1>=0] 
* CE 76: start(V,V1,V22,V21,V27) = 0+ times(V,V1,W27):1
     [V1>=0,V>=0,W27=0] 
* CE 77: start(V,V1,V22,V21,V27) = 0+ times(V,V1,W27):2
     [W27>=0,V1>=0,V>=1] 
* CE 78: start(V,V1,V22,V21,V27) = 0+ log(W27,V1,X27):1
     [V1>=2,X27=2,W27=0,V=0] 
* CE 79: start(V,V1,V22,V21,V27) = 0+ log(V,W27,X27):2
     [V>=0,X27=1,W27=0,V1=0] 
* CE 80: start(V,V1,V22,V21,V27) = 0+ log(V,W27,X27):3
     [V>=0,X27=1,W27=1,V1=1] 
* CE 81: start(V,V1,V22,V21,V27) = 0+ log(V,V1,W27):4
     [V1>=0,V>=0,W27=0] 
* CE 82: start(V,V1,V22,V21,V27) = 0+ log(V,V1,W27):5
     [W27>=1,V1>=2,V>=2] 
* CE 83: start(V,V1,V22,V21,V27) = 0+ log(V,V1,W27):6
     [V1>=2,V>=2] 
* CE 84: start(V,V1,V22,V21,V27) = 0+ loop(W27,V1,V22,V21,V21):1
     [V21>=0,V22>=1,V1>=2,W27=0,V=0] 
* CE 85: start(V,V1,V22,V21,V27) = 0+ loop(V,V1,V22,V21,W27):2
     [V21>=0,V22>=0,V1>=0,V>=0,W27=0] 
* CE 86: start(V,V1,V22,V21,V27) = 0+ loop(V,V1,V22,V21,V21):3
     [V22>=V,V21>=0,V1>=2,V>=1] 
* CE 87: start(V,V1,V22,V21,V27) = 0+ loop(V,V1,V22,V21,W27):4
     [W27>=V21+1,V>=V22+1,V21>=0,V22>=1,V1>=2] 
* CE 88: start(V,V1,V22,V21,V27) = 0+ loop(V,V1,V22,V21,W27):5
     [V>=V22+1,V21>=0,V22>=1,V1>=2] 

### Cost equations --> "Loop" of start/5 
* CEs [83,88] --> Loop 42 
* CEs [66] --> Loop 43 
* CEs [80] --> Loop 44 
* CEs [68,79] --> Loop 45 
* CEs [59] --> Loop 46 
* CEs [61,62,63,64,65] --> Loop 47 
* CEs [60,67,69,70,71,72,73,74,75,76,77,78,81,82,84,85,86,87] --> Loop 48 

#### Loops of start/5 
* Loop 42: start(V,V1,V22,V21,V27) [V1>=2,V>=2] 
* Loop 43: start(V,V1,V22,V21,V27) [V27>=0,V21>=0,V22>=2,V1>=2,V=1] 
* Loop 44: start(V,V1,V22,V21,V27) [V>=0,V1=1] 
* Loop 45: start(V,V1,V22,V21,V27) [V>=0,V1=0] 
* Loop 46: start(V,V1,V22,V21,V27) [V27>=0,V21>=0,V22>=0,V1>=0,V=2] 
* Loop 47: start(V,V1,V22,V21,V27) [V27>=0,V21>=0,V22>=0,V1>=0,V=1] 
* Loop 48: start(V,V1,V22,V21,V27) [V1>=0,V>=0] 

### Ranking functions of CR start(V,V1,V22,V21,V27) 

#### Partial ranking functions of CR start(V,V1,V22,V21,V27) 


### Resulting Chains:start(V,V1,V22,V21,V27) 
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]...
* [42]...


### Merging Chains  start/5 into  External patterns of execution 
* [[47],[48]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 
* [[44]] --> 4 
* [[43]] --> 5 
* [[42]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:le(V,V1,Out) -> [le(V',V1',Out')] 
1
#### Cost of phase [20]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of phase [20]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of phase [20]:le(V,V1,Out) -> [le(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of chains of le(V,V1,Out):
* Chain [[20],23]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< V1

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [23]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [22]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [21]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [24] 

 * loop 24:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [24]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of phase [24]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of chains of plus(V,V1,Out):
* Chain [[24],26]: 1*it(24)+1
  Such that:it(24) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< Out

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [26]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [25]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [27,28,29,30] 

 * loop 27:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(3)+1
  Such that:s(3) =< V1'

 * loop 28:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(5)+2
  Such that:s(5) =< V1'

 * loop 29:times(V,V1,Out) -> [times(V',V1',Out')] 
1
 * loop 30:times(V,V1,Out) -> [times(V',V1',Out')] 
2
#### Cost of phase [27,28,29,30]:times(V,V1,Out) -> [times(V',V1',Out')] 
6*it(27)+1*s(6)+1*s(7)+0
  Such that:aux(1) =< V1
aux(3) =< V
aux(4) =< V-V'
it(27) =< aux(3)
it(27) =< aux(4)
aux(2) =< aux(1)
s(6) =< it(27)*aux(1)
s(7) =< it(27)*aux(2)

#### Cost of chains of times(V,V1,Out):
* Chain [[27,28,29,30],31]: 6*it(27)+1*s(6)+1*s(7)+1
  Such that:aux(1) =< V1
aux(5) =< V
it(27) =< aux(5)
aux(2) =< aux(1)
s(6) =< it(27)*aux(1)
s(7) =< it(27)*aux(2)

  with precondition: [V>=1,V1>=0,Out>=0] 

* Chain [31]: 1
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [32] 

 * loop 32:loop(V,V1,V22,V21,Out) -> [loop(V',V1',V22',V21',Out')] 
2*s(18)+6*s(19)+1*s(21)+1*s(22)+4
  Such that:s(16) =< V1'
s(17) =< V22
s(18) =< s(17)
s(19) =< s(16)
s(20) =< s(17)
s(21) =< s(19)*s(17)
s(22) =< s(19)*s(20)

#### Cost of phase [32]:loop(V,V1,V22,V21,Out) -> [loop(V',V1',V22',V21',Out')] 
4*it(32)+2*s(23)+6*s(24)+1*s(25)+1*s(26)+0
#### Cost of phase [32]:loop(V,V1,V22,V21,Out) -> [loop(V',V1',V22',V21',Out')] 
4*it(32)+2*s(23)+6*s(24)+1*s(25)+1*s(26)+0
#### Cost of loops [32] 

 * loop 32:loop(V,V1,V22,V21,Out) -> [loop(V',V1',V22',V21',Out')] 
2*s(18)+6*s(19)+1*s(21)+1*s(22)+4
  Such that:s(16) =< V1'
s(17) =< V22
s(18) =< s(17)
s(19) =< s(16)
s(20) =< s(17)
s(21) =< s(19)*s(17)
s(22) =< s(19)*s(20)

#### Cost of phase [32]:loop(V,V1,V22,V21,Out) -> [] 
4*it(32)+2*it([35])+2*s(23)+6*s(24)+1*s(25)+1*s(26)+2*s(32)+1*s(33)+0
  Such that:it([35]) =< 1
aux(14) =< V
s(33) =< aux(14)
aux(11) =< aux(14)
s(34) =< it([35])*aux(11)
s(32) =< s(34)

#### Cost of phase [32]:loop(V,V1,V22,V21,Out) -> [loop(V',V1',V22',V21',Out')] 
4*it(32)+2*s(23)+6*s(24)+1*s(25)+1*s(26)+0
#### Cost of chains of loop(V,V1,V22,V21,Out):
* Chain [[32]]...: 14*it(32)+0
  with precondition: [V>=V22+1,V22>=1,V1>=2,V21>=0] 

* Chain [[32],35]: 4*it(32)+2*it([35])+2*s(23)+6*s(24)+1*s(25)+1*s(26)+2*s(32)+1*s(33)+0
  Such that:it([35]) =< 1
aux(14) =< V
s(33) =< aux(14)
aux(11) =< aux(14)
s(34) =< it([35])*aux(11)
s(32) =< s(34)

  with precondition: [Out=0,V1>=2,V22>=1,V21>=0,V>=V22+1] 

* Chain [[32],33]: 14*it(32)+1*s(35)+3
  Such that:s(35) =< V

  with precondition: [V1>=2,V22>=1,V21>=0,V>=V22+1,Out>=V21+1] 

* Chain [35]: 2*s(29)+1*s(31)+2
  Such that:s(31) =< V
aux(10) =< V22
s(29) =< aux(10)

  with precondition: [Out=0,V>=0,V1>=0,V22>=0,V21>=0] 

* Chain [34]: 3
  with precondition: [V=0,V21=Out,V1>=2,V22>=1,V21>=0] 

* Chain [33]: 1*s(35)+3
  Such that:s(35) =< V

  with precondition: [V21=Out,V>=1,V1>=2,V21>=0,V22>=V] 


#### Cost of chains of log(V,V1,Out):
* Chain [41]...: 14*s(50)+1
  with precondition: [V>=2,V1>=2] 

* Chain [40]: 1
  with precondition: [V=0,Out=2,V1>=2] 

* Chain [39]: 5*s(51)+2*s(54)+2*s(57)+14*s(59)+4
  Such that:s(53) =< V
aux(17) =< 1
s(51) =< aux(17)
s(54) =< s(53)
s(55) =< s(53)
s(56) =< s(51)*s(55)
s(57) =< s(56)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [38]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [37]: 1
  with precondition: [V1=1,Out=1,V>=0] 

* Chain [36]: 1*s(61)+14*s(62)+4
  Such that:s(61) =< V

  with precondition: [V>=2,V1>=2,Out>=1] 


#### Cost of chains of start(V,V1,V22,V21,V27):
* Chain [48]: 2*s(63)+16*s(65)+1*s(72)+1*s(73)+7*s(76)+4*s(80)+56*s(81)+2*s(91)+4
  Such that:s(85) =< V22
aux(18) =< 1
aux(19) =< V
aux(20) =< V1
s(76) =< aux(18)
s(65) =< aux(19)
s(63) =< aux(20)
s(78) =< aux(19)
s(79) =< s(76)*s(78)
s(80) =< s(79)
s(91) =< s(85)
s(71) =< aux(20)
s(72) =< s(65)*aux(20)
s(73) =< s(65)*s(71)

  with precondition: [V>=0,V1>=0] 

* Chain [47]: 4*s(96)+6*s(99)+4*s(102)+44*s(104)+24*s(107)+4*s(109)+4*s(110)+5
  Such that:aux(21) =< 1
aux(22) =< V1
aux(23) =< V22
aux(24) =< V21
s(96) =< aux(21)
s(99) =< aux(22)
s(100) =< aux(22)
s(101) =< s(96)*s(100)
s(102) =< s(101)
s(107) =< aux(23)
s(108) =< aux(24)
s(109) =< s(107)*aux(24)
s(110) =< s(107)*s(108)

  with precondition: [V=1,V1>=0,V22>=0,V21>=0,V27>=0] 

* Chain [46]: 1
  with precondition: [V=2,V1>=0,V22>=0,V21>=0,V27>=0] 

* Chain [45]: 1
  with precondition: [V1=0,V>=0] 

* Chain [44]: 1
  with precondition: [V1=1,V>=0] 

* Chain [43]...: 6*s(143)+1*s(145)+1*s(146)+14*s(147)+2
  Such that:s(142) =< V22
s(141) =< V21
s(143) =< s(142)
s(144) =< s(141)
s(145) =< s(143)*s(141)
s(146) =< s(143)*s(144)

  with precondition: [V=1,V1>=2,V22>=2,V21>=0,V27>=0] 

* Chain [42]...: 1*aux(25)+0
  with precondition: [V>=2,V1>=2] 


Closed-form bounds of start(V,V1,V22,V21,V27): 
-------------------------------------
* Chain [48] with precondition: [V>=0,V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [47] with precondition: [V=1,V1>=0,V22>=0,V21>=0,V27>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46] with precondition: [V=2,V1>=0,V22>=0,V21>=0,V27>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [45] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [44] with precondition: [V1=1,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43]... with precondition: [V=1,V1>=2,V22>=2,V21>=0,V27>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42]... with precondition: [V>=2,V1>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V22,V21,V27): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 49 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 128 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 156 ms.
   - Equation cost structures 69 ms.
   - Phase cost structures 68 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 411 ms.

