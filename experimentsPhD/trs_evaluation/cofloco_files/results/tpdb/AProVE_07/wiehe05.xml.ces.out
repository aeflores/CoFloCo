
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [double/2]
1. recursive  : [gt/3]
2. non_recursive  : [id/2]
3. non_recursive  : [if/4]
4. recursive  : [minus/3]
5. non_recursive  : [not/2]
6. recursive  : [plus/3]
7. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into double/2
1. SCC is partially evaluated into gt/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into if/4
4. SCC is partially evaluated into minus/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into plus/3
7. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations double/2 
* CE 12 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 13 is refined into CE [28] 


#### Refined cost equations double/2 
* CE 26: double(V1,Out) = 1
     [Out=0,V1=0] 
* CE 27: double(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 28: double(V1,Out) = 1+ double(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 

### Cost equations --> "Loop" of double/2 
* CEs [28] --> Loop 18 
* CEs [26,27] --> Loop 19 

#### Loops of double/2 
* Loop 18: double(V1,Out)->  double(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 
* Loop 19: double(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR double(V1,Out) 
* RF of phase [18]: [V1]

#### Partial ranking functions of CR double(V1,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V1


### Resulting Chains:double(V1,Out) 
* [[18],19]
* [19]


### Merging Chains  double/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[18]]] --> 2 


### Specialization of cost equations gt/3 
* CE 25 is refined into CE [29] 
* CE 22 is refined into CE [30] 
* CE 23 is refined into CE [31] 
* CE 24 is refined into CE [32] 


#### Refined cost equations gt/3 
* CE 29: gt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 30: gt(V1,V,Out) = 1
     [V1>=1,Out=2,V=3] 
* CE 31: gt(V1,V,Out) = 1
     [V>=0,Out=1,V1=3] 
* CE 32: gt(V1,V,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gt/3 
* CEs [32] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 

#### Loops of gt/3 
* Loop 20: gt(V1,V,Out)->  gt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 21: gt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 22: gt(V1,V,Out) [V1>=1,Out=2,V=3] 
* Loop 23: gt(V1,V,Out) [V>=0,Out=1,V1=3] 

### Ranking functions of CR gt(V1,V,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR gt(V1,V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:gt(V1,V,Out) 
* [[20],23]
* [[20],22]
* [[20],21]
* [23]
* [22]
* [21]


### Merging Chains  gt/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21],[21,[20]]] --> 3 
* [[23,[20]]] --> 4 
* [[22,[20]]] --> 5 


### Specialization of cost equations if/4 
* CE 21 is refined into CE [33] 
* CE 19 is refined into CE [34] 
* CE 20 is refined into CE [35] 


#### Refined cost equations if/4 
* CE 33: if(V1,V,V12,Out) = 0
     [V12>=0,V>=0,V1>=0,Out=0] 
* CE 34: if(A,B,C,B) = 1
     [C>=0,B>=0,A=2] 
* CE 35: if(A,B,C,C) = 1
     [C>=0,B>=0,A=1] 

### Cost equations --> "Loop" of if/4 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of if/4 
* Loop 24: if(V1,V,V12,Out) [V12>=0,V>=0,V1>=0,Out=0] 
* Loop 25: if(A,B,C,B) [C>=0,B>=0,A=2] 
* Loop 26: if(A,B,C,C) [C>=0,B>=0,A=1] 

### Ranking functions of CR if(V1,V,V12,Out) 

#### Partial ranking functions of CR if(V1,V,V12,Out) 


### Resulting Chains:if(V1,V,V12,Out) 
* [26]
* [25]
* [24]


### Merging Chains  if/4 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 


### Specialization of cost equations minus/3 
* CE 11 is refined into CE [36] 
* CE 9 is refined into CE [37] 
* CE 10 is refined into CE [38] 


#### Refined cost equations minus/3 
* CE 36: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 38: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [38] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [37] --> Loop 29 

#### Loops of minus/3 
* Loop 27: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 28: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 29: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [27]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[27],29]
* [[27],28]
* [29]
* [28]


### Merging Chains  minus/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28],[28,[27]]] --> 2 
* [[29,[27]]] --> 3 


### Specialization of cost equations plus/3 
* CE 18 is refined into CE [39] 
* CE 17 is refined into CE [40] 
* CE 15 is refined into CE [41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133] 
* CE 16 is refined into CE [134,135,136,137,138,139,140,141,142] 


#### Refined cost equations plus/3 
* CE 39: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 40: plus(A,B,B) = 1
     [B>=0,A=3] 
* CE 41: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):1+ if(H2,I2,X1,J2):2+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=3,J2=3,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 42: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):1+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 43: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):1+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 44: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):1+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=3,N2=3,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 45: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 46: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 47: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):3+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=0,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=0,C2=0,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 48: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):2+ if(H2,I2,X1,X1):1+ plus(X1,X1,J2)
     [X1>=4,5>=X1,J2+2=Out,X1+1=V,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 49: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):2+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 50: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,X1):1+ gt(B2,X1,C2):5+ if(D2,E2,F2,G2):3+ if(H2,I2,X1,J2):3+ plus(X1,K2,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 51: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 52: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 53: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 54: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):1+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=0,N2=3,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 55: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):2+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=1,J2=1,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 56: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):2+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=2,F2=2,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=4,V1=4] 
* CE 57: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):3+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=0,D2=0,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 58: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):2+ if(I2,J2,X1,X1):1+ plus(K2,X1,L2)
     [X1>=4,5>=X1,L2+2=Out,X1+1=V,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 59: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):2+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 60: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):1+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):5+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,W1=3,V1=4] 
* CE 61: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):2+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=3,N2=3,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 62: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 63: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=3,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 64: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):2+ if(H2,W1,I2,J2):1+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=3,J2=3,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 65: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):2+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=1,G2=1,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 66: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):2+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=2,C2=2,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 67: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):3+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=0,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 68: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):1+ if(H2,W1,I2,W1):2+ plus(W1,W1,J2)
     [W1>=4,6>=W1,J2+2=Out,W1+1=V1,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 69: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):1+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=2,G2=2,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 70: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,W1):2+ gt(W1,B2,C2):4+ if(D2,E2,F2,G2):3+ if(H2,W1,I2,J2):3+ plus(W1,K2,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=0,I2=3,H2=0,G2=0,F2=2,E2=1,D2=1,C2=1,B2=3,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 71: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):2+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=3,O2=0,N2=3,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 72: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):1+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=2,J2=2,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 73: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ gt(D2,E2,F2):1+ if(G2,H2,I2,J2):3+ if(K2,L2,M2,N2):3+ plus(O2,P2,Q2)
     [Q2+2=Out,P2=0,O2=0,N2=0,M2=3,L2=3,K2=0,J2=0,I2=2,H2=1,G2=1,F2=1,E2=3,D2=3,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=4,V1=4] 
* CE 74: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 75: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 76: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 77: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):3+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=0,D2=0,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 78: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):1+ if(I2,W1,J2,W1):2+ plus(K2,W1,L2)
     [W1>=4,6>=W1,L2+2=Out,W1+1=V1,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 79: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):1+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 80: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):2+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):4+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,X1=3,V=4] 
* CE 81: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 82: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 83: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=0,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=0,Y1=0,W1=3,V1=4] 
* CE 84: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 85: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 86: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=0,Y1=0,X1=3,V=4] 
* CE 87: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1>=0,W1>=0,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 88: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 89: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 90: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 91: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 92: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 93: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):3+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=0,Y1=0] 
* CE 94: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=3,L2=3,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 95: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=3,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 96: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):1+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=3,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 97: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):3+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=0,A2=0,Z1=1,Y1=1] 
* CE 98: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,W1):2+ plus(X1,W1,G2)
     [X1+3>=W1,W1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 99: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 100: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=1,A2=1,Z1=1,Y1=1] 
* CE 101: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,X1):1+ plus(X1,X1,G2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 102: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 103: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,X1):1+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(X1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=2,Z1=1,Y1=1] 
* CE 104: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):1+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=3,L2=0,K2=3,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 105: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):2+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=1,H2=1,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 106: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,A2,B2):3+ gt(W1,C2,D2):2+ if(E2,F2,G2,H2):3+ if(I2,W1,J2,K2):3+ plus(L2,M2,N2)
     [W1>=4,6>=W1,N2+2=Out,W1+1=V1,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=2,D2=2,C2=3,B2=0,A2=3,Z1=1,Y1=1,X1=3,V=4] 
* CE 107: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=1,Y1=1] 
* CE 108: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 109: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 110: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [X1+3>=W1,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=1,Y1=1] 
* CE 111: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 112: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 113: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):4+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=1,Y1=1] 
* CE 114: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=3,L2=3,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 115: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=3,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 116: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):2+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=3,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=3,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 117: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):3+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=0,A2=0,Z1=2,Y1=2] 
* CE 118: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,W1):2+ plus(W1,W1,G2)
     [X1+3>=W1,W1+2>=X1,W1>=4,X1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 119: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):1+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=2,E2=2,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 120: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):4+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=1,A2=1,Z1=2,Y1=2] 
* CE 121: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,X1):1+ plus(W1,X1,G2)
     [W1+2>=X1,X1>=4,G2+2=Out,X1+1=V,W1+1=V1,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 122: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):2+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=1,E2=1,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 123: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,W1):2+ gt(W1,X1,A2):5+ if(B2,C2,D2,E2):3+ if(F2,W1,X1,G2):3+ plus(W1,H2,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=0,F2=0,E2=0,D2=2,C2=1,B2=2,A2=2,Z1=2,Y1=2] 
* CE 124: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):2+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=3,L2=0,K2=3,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 125: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):1+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=2,H2=2,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 126: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,A2,X1,B2):3+ gt(C2,X1,D2):1+ if(E2,F2,G2,H2):3+ if(I2,J2,X1,K2):3+ plus(L2,M2,N2)
     [X1>=4,5>=X1,N2+2=Out,X1+1=V,M2=0,L2=0,K2=0,J2=3,I2=0,H2=0,G2=2,F2=1,E2=1,D2=1,C2=3,B2=0,A2=3,Z1=2,Y1=2,W1=3,V1=4] 
* CE 127: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):3+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=0,B2=0,A2=0,Z1=2,Y1=2] 
* CE 128: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,W1):2+ plus(H2,W1,I2)
     [X1+3>=W1,W1+2>=X1,W1>=4,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 129: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):1+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=2,F2=2,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 130: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):4+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1+3>=W1,X1>=4,W1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=1,B2=1,A2=0,Z1=2,Y1=2] 
* CE 131: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,X1):1+ plus(H2,X1,I2)
     [W1+2>=X1,X1>=4,I2+2=Out,X1+1=V,W1+1=V1,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 132: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):2+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=1,F2=1,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 133: plus(V1,V,Out) = 4+ gt(W1,X1,Y1):5+ if(Z1,W1,X1,A2):3+ gt(W1,X1,B2):5+ if(C2,D2,E2,F2):3+ if(G2,W1,X1,H2):3+ plus(I2,J2,K2)
     [W1+2>=X1,X1>=4,K2+2=Out,X1+1=V,W1+1=V1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=2,D2=1,C2=2,B2=2,A2=0,Z1=2,Y1=2] 
* CE 134: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):1+ plus(D2,E2,Out)
     [E2=4,D2=3,C2=3,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=3,V1=4] 
* CE 135: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):1+ if(Z1,A2,B2,C2):3+ plus(D2,E2,Out)
     [E2=4,D2=0,C2=0,B2=3,A2=3,Z1=1,Y1=1,X1=3,W1=3,V=3,V1=4] 
* CE 136: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):2+ plus(D2,E2,Out)
     [E2=4,D2=3,C2=3,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=3,V1=4] 
* CE 137: plus(V1,V,Out) = 3+ gt(W1,X1,Y1):2+ if(Z1,A2,B2,C2):3+ plus(D2,E2,Out)
     [E2=4,D2=0,C2=0,B2=3,A2=3,Z1=2,Y1=2,X1=3,W1=3,V=3,V1=4] 
* CE 138: plus(V1,V,Out) = 3+ gt(V,V,W1):3+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=0,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=0,W1=0] 
* CE 139: plus(V1,V,Out) = 3+ gt(V,V,W1):4+ if(X1,V,V,V):1+ plus(V,Y1,Out)
     [V>=4,V+1=Y1,V+1=V1,X1=1,W1=1] 
* CE 140: plus(V1,V,Out) = 3+ gt(V,V,W1):4+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=4,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=1,W1=1] 
* CE 141: plus(V1,V,Out) = 3+ gt(V,V,W1):5+ if(X1,V,V,V):2+ plus(V,Y1,Out)
     [V>=4,V+1=Y1,V+1=V1,X1=2,W1=2] 
* CE 142: plus(V1,V,Out) = 3+ gt(V,V,W1):5+ if(X1,V,V,Y1):3+ plus(Z1,A2,Out)
     [V>=4,V+1=A2,V+1=V1,Z1=0,Y1=0,X1=2,W1=2] 

### Cost equations --> "Loop" of plus/3 
* CEs [101] --> Loop 30 
* CEs [98] --> Loop 31 
* CEs [118] --> Loop 32 
* CEs [121] --> Loop 33 
* CEs [139,141] --> Loop 34 
* CEs [102,103] --> Loop 35 
* CEs [119,120] --> Loop 36 
* CEs [128] --> Loop 37 
* CEs [68] --> Loop 38 
* CEs [64] --> Loop 39 
* CEs [65,66,67,69,70] --> Loop 40 
* CEs [94] --> Loop 41 
* CEs [95,96,97,99,100] --> Loop 42 
* CEs [78,88,108] --> Loop 43 
* CEs [74,84,104] --> Loop 44 
* CEs [75,76,77,79,80,85,86,105,106] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [49,50] --> Loop 47 
* CEs [114] --> Loop 48 
* CEs [115,116,117,122,123] --> Loop 49 
* CEs [58,91,111,131] --> Loop 50 
* CEs [124] --> Loop 51 
* CEs [59,60,125,126] --> Loop 52 
* CEs [41,44,61] --> Loop 53 
* CEs [42,43,45,46,47,62,63] --> Loop 54 
* CEs [51,54,71,81] --> Loop 55 
* CEs [52,53,55,56,57,72,73,82,83,87,89,90,92,93,107,109,110,112,113,127,129,130,132,133] --> Loop 56 
* CEs [134,136] --> Loop 57 
* CEs [135,137,138,140,142] --> Loop 58 
* CEs [39] --> Loop 59 
* CEs [40] --> Loop 60 

#### Loops of plus/3 
* Loop 30: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V=V'+1,V=V1'+1] 
* Loop 31: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V1=V'+1,V=V1'+1] 
* Loop 32: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V'+1,V1=V1'+1] 
* Loop 33: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V=V'+1,V1=V1'+1] 
* Loop 34: plus(V1,V,Out)->  plus(A',V1,Out)
                  [V1>=5,V1=A'+1,V1=V+1] 
* Loop 35: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V=V1'+1,V'=0] 
* Loop 36: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V1'+1,V'=0] 
* Loop 37: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V+3>=V1,V>=5,V1>=5,Out=Out'+2,V1=V'+1,V1'=0] 
* Loop 38: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=5,7>=V1,Out=Out'+2,V1=V'+1,V1=V1'+1,V=4] 
* Loop 39: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V1=V1'+1,V'=3,V=4] 
* Loop 40: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V1=V1'+1,V'=0,V=4] 
* Loop 41: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=5,7>=V1,Out=Out'+2,V'=3,V1'=3,V=4] 
* Loop 42: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V=V1'+1,V'=0] 
* Loop 43: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V+3>=V1,V1>=5,Out=Out'+2,V1=V'+1,V1'=0] 
* Loop 44: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V'=3,V1'=0,V=4] 
* Loop 45: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1>=2,Out=Out'+2,V'=0,V1'=0,V=4] 
* Loop 46: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V=V'+1,V=V1'+1,V1=4] 
* Loop 47: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V=V1'+1,V'=0,V1=4] 
* Loop 48: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=3,V1'=3,V1=4] 
* Loop 49: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V1=V1'+1,V'=0] 
* Loop 50: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V1+2>=V,V>=5,Out=Out'+2,V=V'+1,V1'=0] 
* Loop 51: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=3,V1'=0,V1=4] 
* Loop 52: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=5,6>=V,Out=Out'+2,V'=0,V1'=0,V1=4] 
* Loop 53: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V=V1'+1,V'=3,V1=4] 
* Loop 54: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V=V1'+1,V'=0,V1=4] 
* Loop 55: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,Out=Out'+2,V'=3,V1'=0,V1=4] 
* Loop 56: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+2,V'=0,V1'=0] 
* Loop 57: plus(V1,V,Out)->  plus(V1',V',Out)
                  [V'=4,V1'=3,V=3,V1=4] 
* Loop 58: plus(V1,V,Out)->  plus(A',V1,Out)
                  [V1>=1,V1=V+1,A'=0] 
* Loop 59: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 60: plus(A,B,B) [B>=0,A=3] 

### Ranking functions of CR plus(V1,V,Out) 

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [30,31,32,33,34,38,39,46,53,57]:
  - RF of loop [30:1,33:1,46:1]:
    V-4 depends on loops [31:1,32:1,34:1,38:1,53:1,57:1] 
  - RF of loop [31:1]:
    V1/2+V/2-3 depends on loops [32:1,38:1] 
  - RF of loop [32:1,34:1,38:1]:
    V1-4 depends on loops [30:1,31:1,46:1,53:1] 
  - RF of loop [33:1]:
    V1-2 depends on loops [30:1,31:1,46:1,53:1] 
  - RF of loop [34:1]:
    V1/2-V/2 depends on loops [30:1,31:1,32:1,46:1,53:1] 
  - RF of loop [39:1]:
    V-3 depends on loops [31:1,32:1,34:1,38:1,53:1,57:1] 
    V1-1 depends on loops [30:1,31:1,46:1,53:1] 
  - RF of loop [53:1]:
    V1/2+V/2-2 depends on loops [32:1,38:1] 
  - RF of loop [57:1]:
    -V+4 depends on loops [30:1,31:1,32:1,33:1,39:1,46:1,53:1] 
    V1-3 depends on loops [30:1,31:1,46:1,53:1] 


### Resulting Chains:plus(V1,V,Out) 
* [[30,31,32,33,34,38,39,46,53,57]]...
* [[30,31,32,33,34,38,39,46,53,57],60]
* [[30,31,32,33,34,38,39,46,53,57],59]
* [[30,31,32,33,34,38,39,46,53,57],58,59]
* [[30,31,32,33,34,38,39,46,53,57],56,59]
* [[30,31,32,33,34,38,39,46,53,57],55,59]
* [[30,31,32,33,34,38,39,46,53,57],54,60]
* [[30,31,32,33,34,38,39,46,53,57],54,59]
* [[30,31,32,33,34,38,39,46,53,57],52,59]
* [[30,31,32,33,34,38,39,46,53,57],51,59]
* [[30,31,32,33,34,38,39,46,53,57],50,59]
* [[30,31,32,33,34,38,39,46,53,57],49,60]
* [[30,31,32,33,34,38,39,46,53,57],49,59]
* [[30,31,32,33,34,38,39,46,53,57],48,60]
* [[30,31,32,33,34,38,39,46,53,57],48,59]
* [[30,31,32,33,34,38,39,46,53,57],48,56,59]
* [[30,31,32,33,34,38,39,46,53,57],47,59]
* [[30,31,32,33,34,38,39,46,53,57],45,59]
* [[30,31,32,33,34,38,39,46,53,57],44,59]
* [[30,31,32,33,34,38,39,46,53,57],43,59]
* [[30,31,32,33,34,38,39,46,53,57],42,60]
* [[30,31,32,33,34,38,39,46,53,57],42,59]
* [[30,31,32,33,34,38,39,46,53,57],41,60]
* [[30,31,32,33,34,38,39,46,53,57],41,59]
* [[30,31,32,33,34,38,39,46,53,57],41,56,59]
* [[30,31,32,33,34,38,39,46,53,57],40,60]
* [[30,31,32,33,34,38,39,46,53,57],40,59]
* [[30,31,32,33,34,38,39,46,53,57],40,58,59]
* [[30,31,32,33,34,38,39,46,53,57],37,59]
* [[30,31,32,33,34,38,39,46,53,57],36,59]
* [[30,31,32,33,34,38,39,46,53,57],35,59]
* [60]
* [59]
* [58,59]
* [56,59]
* [55,59]
* [54,60]
* [54,59]
* [54,58,59]
* [52,59]
* [51,59]
* [50,59]
* [49,60]
* [49,59]
* [48,60]
* [48,59]
* [48,56,59]
* [47,59]
* [45,59]
* [44,59]
* [43,59]
* [42,60]
* [42,59]
* [42,58,59]
* [41,60]
* [41,59]
* [41,56,59]
* [40,60]
* [40,59]
* [40,58,59]
* [37,59]
* [36,59]
* [35,59]


### Merging Chains  plus/3 into  External patterns of execution 
* [[59,35],[59,36],[59,37],[59,58,40],[59,40],[59,42],[59,43],[59,44],[59,45],[59,49],[59,50],[59,56]] --> 1 
* [[60]] --> 2 
* [[59,58,54],[59,54],[59,55],[59,35,[30,31,32,33,34,38,39,46,53,57]],[59,36,[30,31,32,33,34,38,39,46,53,57]],[59,37,[30,31,32,33,34,38,39,46,53,57]],[59,58,40,[30,31,32,33,34,38,39,46,53,57]],[59,40,[30,31,32,33,34,38,39,46,53,57]],[60,40,[30,31,32,33,34,38,39,46,53,57]],[59,56,41,[30,31,32,33,34,38,39,46,53,57]],[59,41,[30,31,32,33,34,38,39,46,53,57]],[60,41,[30,31,32,33,34,38,39,46,53,57]],[59,42,[30,31,32,33,34,38,39,46,53,57]],[60,42,[30,31,32,33,34,38,39,46,53,57]],[59,43,[30,31,32,33,34,38,39,46,53,57]],[59,44,[30,31,32,33,34,38,39,46,53,57]],[59,45,[30,31,32,33,34,38,39,46,53,57]],[59,47,[30,31,32,33,34,38,39,46,53,57]],[59,56,48,[30,31,32,33,34,38,39,46,53,57]],[59,48,[30,31,32,33,34,38,39,46,53,57]],[60,48,[30,31,32,33,34,38,39,46,53,57]],[59,49,[30,31,32,33,34,38,39,46,53,57]],[60,49,[30,31,32,33,34,38,39,46,53,57]],[59,50,[30,31,32,33,34,38,39,46,53,57]],[59,51,[30,31,32,33,34,38,39,46,53,57]],[59,52,[30,31,32,33,34,38,39,46,53,57]],[59,54,[30,31,32,33,34,38,39,46,53,57]],[60,54,[30,31,32,33,34,38,39,46,53,57]],[59,55,[30,31,32,33,34,38,39,46,53,57]],[59,56,[30,31,32,33,34,38,39,46,53,57]],[59,58,[30,31,32,33,34,38,39,46,53,57]],[59,[30,31,32,33,34,38,39,46,53,57]],[60,[30,31,32,33,34,38,39,46,53,57]]] --> 3 
* [[60,40],[60,54]] --> 4 
* [[59,47],[59,48],[60,49],[59,51],[59,52]] --> 5 
* [[59,56,48]] --> 6 
* [[60,48]] --> 7 
* [[59,58,42]] --> 8 
* [[59,41],[60,42]] --> 9 
* [[59,56,41]] --> 10 
* [[60,41]] --> 11 
* [[59,58],[59]] --> 12 
* [[[30,31,32,33,34,38,39,46,53,57]]] --> 13 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [143,144,145] 
* CE 3 is refined into CE [146,147] 
* CE 4 is refined into CE [148,149,150,151,152,153,154,155,156,157,158,159,160] 
* CE 5 is refined into CE [161] 
* CE 6 is refined into CE [162,163,164] 
* CE 7 is refined into CE [165,166,167] 
* CE 8 is refined into CE [168,169,170,171,172] 


#### Refined cost equations start/3 
* CE 143: start(V1,V,V12) = 0+ minus(V1,W12,V1):1
     [V1>=0,W12=0,V=0] 
* CE 144: start(V1,V,V12) = 0+ minus(V1,V,W12):2
     [V>=0,V1>=0,W12=0] 
* CE 145: start(V1,V,V12) = 0+ minus(W12,V,X12):3
     [X12>=0,V>=1,V+X12=W12,V+X12=V1] 
* CE 146: start(V1,V,V12) = 0+ double(V1,W12):1
     [V1>=0,W12=0] 
* CE 147: start(V1,V,V12) = 0+ double(V1,W12):2
     [2*V1>=W12,W12>=2] 
* CE 148: start(V1,V,V12) = 0+ plus(V1,V,W12):1
     [V>=1,V1>=1,W12=2] 
* CE 149: start(V1,V,V12) = 0+ plus(W12,V,V):2
     [V>=0,W12=3,V1=3] 
* CE 150: start(V1,V,V12) = 0+ plus(V1,V,W12):3
     [2*V+2*W12+3*V1>=18,2*V+3*V1>=14,V+W12>=3,V1+W12>=4,W12>=0,V>=1,V1>=2] 
* CE 151: start(V1,V,V12) = 0+ plus(W12,X12,Y12):4
     [Y12=2,X12=4,W12=4,V=4,V1=4] 
* CE 152: start(V1,V,V12) = 0+ plus(W12,V,X12):5
     [V>=5,6>=V,X12=2,W12=4,V1=4] 
* CE 153: start(V1,V,V12) = 0+ plus(W12,V,X12):6
     [V>=5,6>=V,X12=4,W12=4,V1=4] 
* CE 154: start(V1,V,V12) = 0+ plus(W12,V,X12):7
     [V>=5,6>=V,X12=5,W12=4,V1=4] 
* CE 155: start(V1,V,V12) = 0+ plus(W12,X12,Y12):8
     [Y12=2,X12=2,W12=5,V=2,V1=5] 
* CE 156: start(V1,V,V12) = 0+ plus(V1,W12,X12):9
     [V1>=5,7>=V1,X12=2,W12=4,V=4] 
* CE 157: start(V1,V,V12) = 0+ plus(V1,W12,X12):10
     [V1>=5,7>=V1,X12=4,W12=4,V=4] 
* CE 158: start(V1,V,V12) = 0+ plus(V1,W12,X12):11
     [V1>=5,7>=V1,X12=5,W12=4,V=4] 
* CE 159: start(V1,V,V12) = 0+ plus(V1,V,W12):12
     [V>=0,V1>=0,W12=0] 
* CE 160: start(V1,V,V12) = 0+ plus(V1,V,W12):13
     [2*V+3*V1>=14,V>=1,V1>=2] 
* CE 161: start(V1,V,V12) = 1
     [V1>=0] 
* CE 162: start(V1,V,V12) = 0+ if(W12,V,V12,V12):1
     [V12>=0,V>=0,W12=1,V1=1] 
* CE 163: start(V1,V,V12) = 0+ if(W12,V,V12,V):2
     [V>=0,V12>=0,W12=2,V1=2] 
* CE 164: start(V1,V,V12) = 0+ if(V1,V,V12,W12):3
     [V12>=0,V>=0,V1>=0,W12=0] 
* CE 165: start(V1,V,V12) = 1+ if(W12,X12,Y12,Z12):1
     [Z12=2,Y12=2,X12=1,W12=1,V1=1] 
* CE 166: start(V1,V,V12) = 1+ if(W12,X12,Y12,Z12):2
     [Z12=1,Y12=2,X12=1,W12=2,V1=2] 
* CE 167: start(V1,V,V12) = 1+ if(V1,W12,X12,Y12):3
     [V1>=0,Y12=0,X12=2,W12=1] 
* CE 168: start(V1,V,V12) = 0+ gt(W12,V,X12):1
     [V>=0,X12=1,W12=3,V1=3] 
* CE 169: start(V1,V,V12) = 0+ gt(V1,W12,X12):2
     [V1>=1,X12=2,W12=3,V=3] 
* CE 170: start(V1,V,V12) = 0+ gt(V1,V,W12):3
     [V>=0,V1>=0,W12=0] 
* CE 171: start(V1,V,V12) = 0+ gt(V1,V,W12):4
     [V+3>=V1,V1>=4,W12=1] 
* CE 172: start(V1,V,V12) = 0+ gt(V1,V,W12):5
     [V1+2>=V,V>=4,W12=2] 

### Cost equations --> "Loop" of start/3 
* CEs [156,157,158] --> Loop 61 
* CEs [169] --> Loop 62 
* CEs [143] --> Loop 63 
* CEs [155] --> Loop 64 
* CEs [152,153,154] --> Loop 65 
* CEs [151] --> Loop 66 
* CEs [149,168] --> Loop 67 
* CEs [163,166] --> Loop 68 
* CEs [144,145,146,147,148,150,159,161,162,164,165,167,170,171,172] --> Loop 69 
* CEs [160] --> Loop 70 

#### Loops of start/3 
* Loop 61: start(V1,V,V12) [V1>=5,7>=V1,V=4] 
* Loop 62: start(V1,V,V12) [V1>=1,V=3] 
* Loop 63: start(V1,V,V12) [V1>=0,V=0] 
* Loop 64: start(V1,V,V12) [V=2,V1=5] 
* Loop 65: start(V1,V,V12) [V>=5,6>=V,V1=4] 
* Loop 66: start(V1,V,V12) [V=4,V1=4] 
* Loop 67: start(V1,V,V12) [V>=0,V1=3] 
* Loop 68: start(V1,V,V12) [V1=2] 
* Loop 69: start(V1,V,V12) [V1>=0] 
* Loop 70: start(V1,V,V12) [2*V+3*V1>=14,V>=1,V1>=2] 

### Ranking functions of CR start(V1,V,V12) 

#### Partial ranking functions of CR start(V1,V,V12) 


### Resulting Chains:start(V1,V,V12) 
* [70]...
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]


### Merging Chains  start/3 into  External patterns of execution 
* [[68],[69]] --> 1 
* [[67]] --> 2 
* [[66]] --> 3 
* [[65]] --> 4 
* [[64]] --> 5 
* [[63]] --> 6 
* [[62]] --> 7 
* [[61]] --> 8 
* [[70]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:double(V1,Out) -> [double(V1',Out')] 
1
#### Cost of phase [18]:double(V1,Out) -> [double(V1',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'

#### Cost of chains of double(V1,Out):
* Chain [[18],19]: 1*it(18)+1
  Such that:it(18) =< Out/2

  with precondition: [Out>=2,2*V1>=Out] 

* Chain [19]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [20] 

 * loop 20:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1
#### Cost of phase [20]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of chains of gt(V1,V,Out):
* Chain [[20],23]: 1*it(20)+1
  Such that:it(20) =< V1

  with precondition: [Out=1,V1>=4,V+3>=V1] 

* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [Out=2,V>=4,V1+2>=V] 

* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [23]: 1
  with precondition: [V1=3,Out=1,V>=0] 

* Chain [22]: 1
  with precondition: [V=3,Out=2,V1>=1] 

* Chain [21]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of if(V1,V,V12,Out):
* Chain [26]: 1
  with precondition: [V1=1,V12=Out,V>=0,V12>=0] 

* Chain [25]: 1
  with precondition: [V1=2,V=Out,V>=0,V12>=0] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0,V12>=0] 


#### Cost of loops [27] 

 * loop 27:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [27]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'
it(27) =< V
it(27) =< V-V'

#### Cost of phase [27]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'
it(27) =< V
it(27) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[27],29]: 1*it(27)+1
  Such that:it(27) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [29]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [28]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [30,31,32,33,34,38,39,46,53,57] 

 * loop 30:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(5)+1*s(6)+9
  Such that:s(5) =< V1
s(6) =< V'

 * loop 31:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(10)+9
  Such that:s(9) =< V'
s(10) =< s(9)

 * loop 32:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(13)+1*s(14)+9
  Such that:s(13) =< V
s(14) =< V'

 * loop 33:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(18)+9
  Such that:s(17) =< V'
s(18) =< s(17)

 * loop 34:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*s(22)+5
  Such that:s(21) =< V'
s(22) =< s(21)

 * loop 38:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(24)+9
  Such that:s(24) =< V1'

 * loop 39:plus(V1,V,Out) -> [plus(V1',V',Out')] 
9
 * loop 46:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*s(26)+9
  Such that:s(26) =< V1'

 * loop 53:plus(V1,V,Out) -> [plus(V1',V',Out')] 
9
 * loop 57:plus(V1,V,Out) -> [plus(V1',V',Out')] 
5
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of phase [30,31,32,33,34,38,39,46,53,57]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
88*it(30)+2*s(29)+2*s(33)+2*s(35)+0
#### Cost of chains of plus(V1,V,Out):
* Chain [[30,31,32,33,34,38,39,46,53,57]]...: 94*it(30)+0
  with precondition: [V>=1,2*V+3*V1>=14,V1>=2] 

* Chain [[30,31,32,33,34,38,39,46,53,57],60]: 94*it(30)+1
  with precondition: [V1>=4,V+3>=V1,2*V1>=V+1,11*V1+25*Out>=7*V+123,Out+V1>=V+1,V1+3*Out>=V+9] 

* Chain [[30,31,32,33,34,38,39,46,53,57],59]: 94*it(30)+0
  with precondition: [V1>=2,V>=1,Out>=0,Out+V1>=4,Out+V>=3,2*V+3*V1>=14,2*Out+2*V+3*V1>=18] 

* Chain [[30,31,32,33,34,38,39,46,53,57],58,59]: 94*it(30)+3*s(39)+4
  Such that:aux(90) =< 5/4*V1+V/2+Out/4
s(39) =< aux(90)

  with precondition: [V1>=4,V>=4,Out>=2,Out+V>=V1+1,Out+V1>=V+1] 

* Chain [[30,31,32,33,34,38,39,46,53,57],56,59]: 94*it(30)+22*s(42)+11*s(48)+7
  Such that:aux(99) =< V1+5/2*V+Out/2
aux(101) =< 5/2*V1+V+Out/2
aux(99) =< aux(101)
s(48) =< aux(99)
s(42) =< aux(101)

  with precondition: [V1>=2,V>=1,Out>=2,Out+V1>=6,Out+2*V>=8,2*V+3*V1>=14,Out+2*V+2*V1>=16] 

* Chain [[30,31,32,33,34,38,39,46,53,57],55,59]: 94*it(30)+1*s(75)+8
  Such that:s(75) =< 7

  with precondition: [V1>=4,V>=4,3*Out+4>=2*V1,3*Out+2>=2*V,V+3>=V1,V+V1>=9,3*Out+10*V1>=8*V+2,3*Out+14*V1>=8*V+22,2*V1+3*Out+6>=4*V,3*Out+6*V1>=4*V+14,3*Out+4*V1>=2*V+18] 

* Chain [[30,31,32,33,34,38,39,46,53,57],54,60]: 94*it(30)+1*s(76)+9
  Such that:s(76) =< 3

  with precondition: [V1>=4,V>=4,Out>=4,V+3>=V1,2*V1+11*Out+30>=12*V,11*Out+18>=6*V+4*V1,Out+6*V1>=4*V+6,Out+4*V1>=2*V+10,Out+3*V>=V1+11] 

* Chain [[30,31,32,33,34,38,39,46,53,57],54,59]: 94*it(30)+1*s(76)+8
  Such that:s(76) =< 7

  with precondition: [V1>=4,V>=4,3*Out+4>=2*V1,3*Out+2>=2*V,V+3>=V1,V+V1>=9,3*Out+10*V1>=8*V+2,3*Out+14*V1>=8*V+22,2*V1+3*Out+6>=4*V,3*Out+6*V1>=4*V+14,3*Out+4*V1>=2*V+18] 

* Chain [[30,31,32,33,34,38,39,46,53,57],52,59]: 94*it(30)+4*s(77)+7
  Such that:aux(102) =< -2*V1-2*V+5*Out+13
s(77) =< aux(102)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[30,31,32,33,34,38,39,46,53,57],51,59]: 94*it(30)+1*s(81)+8
  Such that:s(81) =< -2*V1-2*V+5*Out+13

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[30,31,32,33,34,38,39,46,53,57],50,59]: 94*it(30)+7*s(82)+8
  Such that:aux(106) =< 5/2*V1+V+Out/2
s(82) =< aux(106)

  with precondition: [V1>=4,V>=4,Out>=2,Out+2*V1>=12,Out+2*V+6*V1>=40] 

* Chain [[30,31,32,33,34,38,39,46,53,57],49,60]: 94*it(30)+8*s(89)+9
  Such that:aux(110) =< -2*V1-2*V+5*Out+13
s(89) =< aux(110)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[30,31,32,33,34,38,39,46,53,57],49,59]: 94*it(30)+8*s(89)+8
  Such that:aux(110) =< 7/4*V1+V/2+5/4*Out
s(89) =< aux(110)

  with precondition: [V1>=4,V>=4,Out>=2,Out+2*V1>=12,Out+2*V+6*V1>=40] 

* Chain [[30,31,32,33,34,38,39,46,53,57],48,60]: 94*it(30)+1*s(97)+10
  Such that:s(97) =< -2*V1-2*V+5*Out

  with precondition: [V1>=2,3*Out>=2*V+5,V+3>=V1,2*Out>=V+6,2*V+3*V1>=14,3*Out+8*V>=47,9*Out>=5*V+V1+18,6*Out+8*V1>=3*V+58,3*Out+4*V1>=2*V+25,3*Out+4*V+4*V1>=51] 

* Chain [[30,31,32,33,34,38,39,46,53,57],48,59]: 94*it(30)+1*s(97)+9
  Such that:s(97) =< -2*V1-2*V+5*Out+13

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[30,31,32,33,34,38,39,46,53,57],48,56,59]: 94*it(30)+33*s(42)+1*s(97)+16
  Such that:aux(111) =< 3
s(97) =< -2*V1-2*V+5*Out+3
s(42) =< aux(111)

  with precondition: [V1>=2,3*Out>=2*V+2,V+3>=V1,2*Out>=V+4,2*V+3*V1>=14,3*Out+8*V>=44,9*Out>=5*V+V1+9,6*Out+8*V1>=3*V+52,3*Out+4*V1>=2*V+22,3*Out+4*V+4*V1>=48] 

* Chain [[30,31,32,33,34,38,39,46,53,57],47,59]: 94*it(30)+2*s(98)+8
  Such that:aux(112) =< -2*V1-2*V+5*Out+13
s(98) =< aux(112)

  with precondition: [V1>=2,3*Out+4>=2*V,V+3>=V1,2*Out>=V,2*V+3*V1>=14,3*Out+8*V>=38,9*Out+9>=5*V+V1,6*Out+8*V1>=3*V+40,3*Out+4*V1>=2*V+16,3*Out+4*V+4*V1>=42] 

* Chain [[30,31,32,33,34,38,39,46,53,57],45,59]: 94*it(30)+3*s(100)+4*s(101)+7
  Such that:aux(113) =< 3
aux(114) =< 5/2*V1+V+Out/2
s(100) =< aux(113)
s(101) =< aux(114)

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[30,31,32,33,34,38,39,46,53,57],44,59]: 94*it(30)+1*s(107)+1*s(108)+8
  Such that:s(107) =< 3
s(108) =< 5/2*V1+V+Out/2

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[30,31,32,33,34,38,39,46,53,57],43,59]: 94*it(30)+4*s(109)+1*s(110)+8
  Such that:aux(116) =< V1+5/2*V+Out/2
aux(117) =< 5/2*V1+V+Out/2
aux(116) =< aux(117)
s(110) =< aux(117)
s(109) =< aux(116)

  with precondition: [V1>=4,V>=4,V+3>=V1,V1+3>=V,V+V1>=10,Out+V1>=8,Out+2*V>=12,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[30,31,32,33,34,38,39,46,53,57],42,60]: 94*it(30)+7*s(114)+1*s(117)+9
  Such that:s(117) =< 3
aux(120) =< 5/2*V1+V+Out/2
s(114) =< aux(120)

  with precondition: [V1>=4,Out>=4,V+3>=V1,Out+2*V>=14,Out+6*V1>=34,5*Out+6>=2*V+2*V1,5*Out+34*V1>=2*V+174,Out+4*V+4*V1>=48,Out+4*V+6*V1>=58] 

* Chain [[30,31,32,33,34,38,39,46,53,57],42,59]: 94*it(30)+7*s(114)+1*s(117)+8
  Such that:aux(120) =< V1+5/2*V+Out/2
aux(121) =< 5/2*V1+V+Out/2
aux(120) =< aux(121)
s(117) =< aux(121)
s(114) =< aux(120)

  with precondition: [V1>=4,V>=4,V+3>=V1,V1+3>=V,V+V1>=10,Out+V1>=8,Out+2*V>=12,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[30,31,32,33,34,38,39,46,53,57],41,60]: 94*it(30)+1*s(122)+10
  Such that:s(122) =< 5/2*V1+V+Out/2

  with precondition: [V1>=4,Out>=7,V+3>=V1,Out+2*V>=17,Out+6*V1>=37,5*Out>=2*V+2*V1+9,5*Out+34*V1>=2*V+189,Out+4*V+4*V1>=51,Out+4*V+6*V1>=61] 

* Chain [[30,31,32,33,34,38,39,46,53,57],41,59]: 94*it(30)+1*s(122)+9
  Such that:s(122) =< 5/2*V1+V+Out/2

  with precondition: [V1>=4,Out>=4,V+3>=V1,Out+2*V>=14,Out+6*V1>=34,5*Out+6>=2*V+2*V1,5*Out+34*V1>=2*V+174,Out+4*V+4*V1>=48,Out+4*V+6*V1>=58] 

* Chain [[30,31,32,33,34,38,39,46,53,57],41,56,59]: 94*it(30)+33*s(42)+1*s(122)+16
  Such that:aux(122) =< 3
s(122) =< 5/2*V1+V+Out/2
s(42) =< aux(122)

  with precondition: [V1>=4,Out>=6,V+3>=V1,Out+2*V>=16,Out+6*V1>=36,5*Out>=2*V+2*V1+4,5*Out+34*V1>=2*V+184,Out+4*V+4*V1>=50,Out+4*V+6*V1>=60] 

* Chain [[30,31,32,33,34,38,39,46,53,57],40,60]: 94*it(30)+3*s(123)+9
  Such that:aux(124) =< 3
s(123) =< aux(124)

  with precondition: [V1>=4,V>=4,Out>=4,V+3>=V1,2*V1+11*Out+30>=12*V,11*Out+18>=6*V+4*V1,Out+6*V1>=4*V+6,Out+4*V1>=2*V+10,Out+3*V>=V1+11] 

* Chain [[30,31,32,33,34,38,39,46,53,57],40,59]: 94*it(30)+1*s(123)+2*s(124)+8
  Such that:s(123) =< 3
aux(123) =< 5/2*V1+V+Out/2
s(124) =< aux(123)

  with precondition: [V1>=2,V>=1,Out>=2,Out+2*V1>=10,Out+5*V>=17,2*V+3*V1>=14,Out+2*V1+5*V>=25] 

* Chain [[30,31,32,33,34,38,39,46,53,57],40,58,59]: 94*it(30)+5*s(39)+1*s(123)+12
  Such that:aux(125) =< 1
s(123) =< 3
s(39) =< aux(125)

  with precondition: [V1>=2,V>=1,2*V+3*V1>=14,5*Out>=2*V+2*V1+4] 

* Chain [[30,31,32,33,34,38,39,46,53,57],37,59]: 94*it(30)+2*s(126)+8
  Such that:aux(126) =< V1+V+Out/2
s(126) =< aux(126)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[30,31,32,33,34,38,39,46,53,57],36,59]: 94*it(30)+4*s(128)+8
  Such that:aux(129) =< V1+V+Out/2
s(128) =< aux(129)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [[30,31,32,33,34,38,39,46,53,57],35,59]: 94*it(30)+2*s(132)+2*s(133)+8
  Such that:aux(130) =< V1+5/2*V+Out/2
aux(132) =< 5/2*V1+V+Out/2
aux(130) =< aux(132)
s(132) =< aux(130)
s(133) =< aux(132)

  with precondition: [V>=4,V+3>=V1,V1+3>=V,2*V1>=V+2,V+V1>=10,Out+2*V>=12,Out+6*V1>=4*V+4,3*V1+4*Out>=2*V+16,Out+V>=V1+1,V1+2*Out>=V+5,Out+2*V+2*V1>=24] 

* Chain [60]: 1
  with precondition: [V1=3,V=Out,V>=0] 

* Chain [59]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [58,59]: 3*s(39)+4
  Such that:aux(90) =< V+1
s(39) =< aux(90)

  with precondition: [Out=0,V+1=V1,V>=0] 

* Chain [56,59]: 22*s(42)+11*s(48)+7
  Such that:aux(99) =< V1
aux(100) =< V
s(48) =< aux(99)
s(42) =< aux(100)

  with precondition: [Out=2,V1>=1,V>=1] 

* Chain [55,59]: 1*s(75)+8
  Such that:s(75) =< V

  with precondition: [V1=4,Out=2,V>=1] 

* Chain [54,60]: 1*s(76)+9
  Such that:s(76) =< 3

  with precondition: [V1=4,V=4,Out=2] 

* Chain [54,59]: 1*s(76)+8
  Such that:s(76) =< V

  with precondition: [V1=4,Out=2,V>=1] 

* Chain [54,58,59]: 4*s(39)+12
  Such that:aux(133) =< 1
s(39) =< aux(133)

  with precondition: [V1=4,V=2,Out=2] 

* Chain [52,59]: 4*s(77)+7
  Such that:aux(102) =< V
s(77) =< aux(102)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [51,59]: 1*s(81)+8
  Such that:s(81) =< V

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [50,59]: 6*s(82)+1*s(85)+8
  Such that:s(85) =< V1
aux(105) =< V
s(82) =< aux(105)

  with precondition: [Out=2,V>=5,V1+2>=V] 

* Chain [49,60]: 8*s(89)+9
  Such that:aux(110) =< V
s(89) =< aux(110)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [49,59]: 8*s(89)+8
  Such that:aux(110) =< V
s(89) =< aux(110)

  with precondition: [Out=2,V>=5,V1+2>=V] 

* Chain [48,60]: 1*s(97)+10
  Such that:s(97) =< V

  with precondition: [V1=4,Out=5,6>=V,V>=5] 

* Chain [48,59]: 1*s(97)+9
  Such that:s(97) =< V

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [48,56,59]: 33*s(42)+1*s(97)+16
  Such that:s(97) =< V
aux(111) =< 3
s(42) =< aux(111)

  with precondition: [V1=4,Out=4,6>=V,V>=5] 

* Chain [47,59]: 2*s(98)+8
  Such that:aux(112) =< V
s(98) =< aux(112)

  with precondition: [V1=4,Out=2,6>=V,V>=5] 

* Chain [45,59]: 3*s(100)+4*s(101)+7
  Such that:aux(113) =< 3
aux(114) =< V1
s(100) =< aux(113)
s(101) =< aux(114)

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [44,59]: 1*s(107)+1*s(108)+8
  Such that:s(107) =< 3
s(108) =< V1

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [43,59]: 4*s(109)+1*s(110)+8
  Such that:aux(116) =< V1
s(110) =< V
s(109) =< aux(116)

  with precondition: [Out=2,V1>=5,V+3>=V1] 

* Chain [42,60]: 7*s(114)+1*s(117)+9
  Such that:s(117) =< 3
aux(120) =< V1
s(114) =< aux(120)

  with precondition: [V=4,Out=2,7>=V1,V1>=5] 

* Chain [42,59]: 7*s(114)+1*s(117)+8
  Such that:aux(120) =< V1
s(117) =< V
s(114) =< aux(120)

  with precondition: [Out=2,V1>=5,V+3>=V1] 

* Chain [42,58,59]: 4*s(39)+7*s(114)+12
  Such that:aux(120) =< 5
aux(134) =< 1
s(39) =< aux(134)
s(114) =< aux(120)

  with precondition: [V1=5,V=2,Out=2] 

* Chain [41,60]: 1*s(122)+10
  Such that:s(122) =< V1

  with precondition: [V=4,Out=5,7>=V1,V1>=5] 

* Chain [41,59]: 1*s(122)+9
  Such that:s(122) =< V1

  with precondition: [V=4,Out=2,7>=V1,V1>=5] 

* Chain [41,56,59]: 33*s(42)+1*s(122)+16
  Such that:s(122) =< V1
aux(122) =< 3
s(42) =< aux(122)

  with precondition: [V=4,Out=4,7>=V1,V1>=5] 

* Chain [40,60]: 3*s(123)+9
  Such that:aux(124) =< 3
s(123) =< aux(124)

  with precondition: [V1=4,V=4,Out=2] 

* Chain [40,59]: 1*s(123)+2*s(124)+8
  Such that:s(123) =< 3
aux(123) =< V1
s(124) =< aux(123)

  with precondition: [V=4,Out=2,V1>=2] 

* Chain [40,58,59]: 5*s(39)+1*s(123)+12
  Such that:s(123) =< 3
aux(125) =< 1
s(39) =< aux(125)

  with precondition: [V1=2,V=4,Out=2] 

* Chain [37,59]: 1*s(126)+1*s(127)+8
  Such that:s(127) =< V1
s(126) =< V

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 

* Chain [36,59]: 2*s(128)+2*s(129)+8
  Such that:aux(128) =< V1
aux(127) =< V
s(128) =< aux(127)
s(129) =< aux(128)

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 

* Chain [35,59]: 2*s(132)+2*s(133)+8
  Such that:aux(130) =< V1
aux(131) =< V
s(132) =< aux(130)
s(133) =< aux(131)

  with precondition: [Out=2,V1>=5,V>=5,V+3>=V1,V1+2>=V] 


#### Cost of chains of start(V1,V,V12):
* Chain [70]...: 94*s(287)+0
  with precondition: [V1>=2,V>=1,2*V+3*V1>=14] 

* Chain [69]: 49*s(288)+37*s(290)+83*s(295)+14*s(298)+2929*s(299)+2*s(312)+3*s(324)+16
  Such that:s(305) =< 7
s(323) =< V+1
aux(149) =< 1
aux(150) =< 3
aux(151) =< V1
aux(152) =< V
s(290) =< aux(151)
s(288) =< aux(152)
s(295) =< aux(150)
s(298) =< aux(149)
s(312) =< s(305)
s(324) =< s(323)

  with precondition: [V1>=0] 

* Chain [68]: 2
  with precondition: [V1=2] 

* Chain [67]: 1
  with precondition: [V1=3,V>=0] 

* Chain [66]: 21
  with precondition: [V1=4,V=4] 

* Chain [65]: 18*s(329)+33*s(332)+16
  Such that:s(331) =< 3
aux(153) =< V
s(329) =< aux(153)
s(332) =< s(331)

  with precondition: [V1=4,6>=V,V>=5] 

* Chain [64]: 4*s(336)+7*s(337)+12
  Such that:s(335) =< 1
s(334) =< 5
s(336) =< s(335)
s(337) =< s(334)

  with precondition: [V1=5,V=2] 

* Chain [63]: 1
  with precondition: [V=0,V1>=0] 

* Chain [62]: 1
  with precondition: [V=3,V1>=1] 

* Chain [61]: 34*s(338)+10*s(340)+16
  Such that:aux(154) =< 3
aux(155) =< V1
s(338) =< aux(154)
s(340) =< aux(155)

  with precondition: [V=4,7>=V1,V1>=5] 


Closed-form bounds of start(V1,V,V12): 
-------------------------------------
* Chain [70]... with precondition: [V1>=2,V>=1,2*V+3*V1>=14] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [69] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [68] with precondition: [V1=2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [67] with precondition: [V1=3,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [66] with precondition: [V1=4,V=4] 
    - Upper bound: 21 
    - Complexity: constant 
* Chain [65] with precondition: [V1=4,6>=V,V>=5] 
    - Upper bound: 18*V+115 
    - Complexity: n 
* Chain [64] with precondition: [V1=5,V=2] 
    - Upper bound: 51 
    - Complexity: constant 
* Chain [63] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [62] with precondition: [V=3,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [61] with precondition: [V=4,7>=V1,V1>=5] 
    - Upper bound: 10*V1+118 
    - Complexity: n 

### Maximum cost of start(V1,V,V12): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 71 ms.
* Invariants computed in 871 ms.
   - Backward Invariants 596 ms.
   - Transitive Invariants 165 ms.
* Refinement performed in 2259 ms.
* Termination proved in 55 ms.
* Upper bounds computed in 1631 ms.
   - Equation cost structures 134 ms.
   - Phase cost structures 266 ms.
   - Chain cost structures 761 ms.
   - Solving cost expressions 6 ms.
* Total analysis performed in 5007 ms.

