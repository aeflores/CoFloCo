
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [s/2]
1. non_recursive  : [any/2]
2. recursive  : [cons/3]
3. recursive  : [eq/3]
4. recursive  : [inf/2]
5. recursive  : [length/2]
6. non_recursive  : [proper/2]
7. recursive  : [take/3]
8. recursive  : [top/2]
9. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into s/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into cons/3
3. SCC is partially evaluated into eq/3
4. SCC is partially evaluated into inf/2
5. SCC is partially evaluated into length/2
6. SCC is partially evaluated into proper/2
7. SCC is partially evaluated into take/3
8. SCC is partially evaluated into top/2
9. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations s/2 
* CE 26 is refined into CE [33] 
* CE 25 is refined into CE [34] 


#### Refined cost equations s/2 
* CE 33: s(V,Out) = 0
     [V>=0,Out=0] 
* CE 34: s(V,Out) = 1+ s(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of s/2 
* CEs [34] --> Loop 23 
* CEs [33] --> Loop 24 

#### Loops of s/2 
* Loop 23: s(V,Out)->  s(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 24: s(V,Out) [V>=0,Out=0] 

### Ranking functions of CR s(V,Out) 
* RF of phase [23]: [V]

#### Partial ranking functions of CR s(V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V


### Resulting Chains:s(V,Out) 
* [[23],24]
* [24]


### Merging Chains  s/2 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations cons/3 
* CE 24 is refined into CE [35] 
* CE 23 is refined into CE [36] 


#### Refined cost equations cons/3 
* CE 35: cons(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 36: cons(V,V1,Out) = 1+ cons(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of cons/3 
* CEs [36] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of cons/3 
* Loop 25: cons(V,V1,Out)->  cons(V',V1',Out')
                  [V1'>=0,V'>=0,Out=Out'+1,V1'+1=V1,V'+1=V] 
* Loop 26: cons(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR cons(V,V1,Out) 
* RF of phase [25]: [V,V1]

#### Partial ranking functions of CR cons(V,V1,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V
    V1


### Resulting Chains:cons(V,V1,Out) 
* [[25],26]
* [26]


### Merging Chains  cons/3 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 


### Specialization of cost equations eq/3 
* CE 32 is refined into CE [37] 
* CE 31 is refined into CE [38] 


#### Refined cost equations eq/3 
* CE 37: eq(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 38: eq(V,V1,Out) = 1+ eq(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of eq/3 
* CEs [38] --> Loop 27 
* CEs [37] --> Loop 28 

#### Loops of eq/3 
* Loop 27: eq(V,V1,Out)->  eq(V',V1',Out')
                  [V1'>=0,V'>=0,Out=Out'+1,V1'+1=V1,V'+1=V] 
* Loop 28: eq(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR eq(V,V1,Out) 
* RF of phase [27]: [V,V1]

#### Partial ranking functions of CR eq(V,V1,Out) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V
    V1


### Resulting Chains:eq(V,V1,Out) 
* [[27],28]
* [28]


### Merging Chains  eq/3 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[27]]] --> 2 


### Specialization of cost equations inf/2 
* CE 28 is refined into CE [39] 
* CE 27 is refined into CE [40] 


#### Refined cost equations inf/2 
* CE 39: inf(V,Out) = 0
     [V>=0,Out=0] 
* CE 40: inf(V,Out) = 1+ inf(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of inf/2 
* CEs [40] --> Loop 29 
* CEs [39] --> Loop 30 

#### Loops of inf/2 
* Loop 29: inf(V,Out)->  inf(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 30: inf(V,Out) [V>=0,Out=0] 

### Ranking functions of CR inf(V,Out) 
* RF of phase [29]: [V]

#### Partial ranking functions of CR inf(V,Out) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V


### Resulting Chains:inf(V,Out) 
* [[29],30]
* [30]


### Merging Chains  inf/2 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations length/2 
* CE 30 is refined into CE [41] 
* CE 29 is refined into CE [42] 


#### Refined cost equations length/2 
* CE 41: length(V,Out) = 0
     [V>=0,Out=0] 
* CE 42: length(V,Out) = 1+ length(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of length/2 
* CEs [42] --> Loop 31 
* CEs [41] --> Loop 32 

#### Loops of length/2 
* Loop 31: length(V,Out)->  length(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 32: length(V,Out) [V>=0,Out=0] 

### Ranking functions of CR length(V,Out) 
* RF of phase [31]: [V]

#### Partial ranking functions of CR length(V,Out) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V


### Resulting Chains:length(V,Out) 
* [[31],32]
* [32]


### Merging Chains  length/2 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[31]]] --> 2 


### Specialization of cost equations proper/2 
* CE 15 is refined into CE [43] 
* CE 11 is refined into CE [44] 
* CE 12 is refined into CE [45] 
* CE 13 is refined into CE [46] 
* CE 14 is refined into CE [47] 


#### Refined cost equations proper/2 
* CE 43: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 44: proper(V,Out) = 1
     [Out=4,V=3] 
* CE 45: proper(V,Out) = 1
     [Out=3,V=2] 
* CE 46: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 47: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [43] --> Loop 33 
* CEs [44] --> Loop 34 
* CEs [45] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [47] --> Loop 37 

#### Loops of proper/2 
* Loop 33: proper(V,Out) [V>=0,Out=0] 
* Loop 34: proper(V,Out) [Out=4,V=3] 
* Loop 35: proper(V,Out) [Out=3,V=2] 
* Loop 36: proper(V,Out) [Out=2,V=1] 
* Loop 37: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [37]
* [36]
* [35]
* [34]
* [33]


### Merging Chains  proper/2 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 
* [[35]] --> 3 
* [[34]] --> 4 
* [[33]] --> 5 


### Specialization of cost equations take/3 
* CE 22 is refined into CE [48] 
* CE 19 is refined into CE [49] 
* CE 20 is refined into CE [50] 
* CE 21 is refined into CE [51] 


#### Refined cost equations take/3 
* CE 48: take(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 49: take(V,V1,Out) = 1+ take(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 50: take(V,V1,Out) = 1+ take(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 51: take(V,V1,Out) = 1+ take(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of take/3 
* CEs [49] --> Loop 38 
* CEs [50] --> Loop 39 
* CEs [51] --> Loop 40 
* CEs [48] --> Loop 41 

#### Loops of take/3 
* Loop 38: take(V,V1,Out)->  take(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 39: take(V,V1,Out)->  take(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 40: take(V,V1,Out)->  take(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 41: take(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR take(V,V1,Out) 
* RF of phase [38,39,40]: [V+V1]

#### Partial ranking functions of CR take(V,V1,Out) 
* Partial RF of phase [38,39,40]:
  - RF of loop [38:1,40:1]:
    V1
  - RF of loop [39:1,40:1]:
    V


### Resulting Chains:take(V,V1,Out) 
* [[38,39,40],41]
* [41]


### Merging Chains  take/3 into  External patterns of execution 
* [[41]] --> 1 
* [[41,[38,39,40]]] --> 2 


### Specialization of cost equations top/2 
* CE 18 is refined into CE [52] 
* CE 16 is refined into CE [53] 
* CE 17 is refined into CE [54,55,56,57,58] 


#### Refined cost equations top/2 
* CE 52: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 53: top(V,Out) = 1+ top(V,Out)
     [V>=1] 
* CE 54: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 55: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 56: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [Y=3,X=3,W=2,V=3] 
* CE 57: top(V,Out) = 1+ proper(W,X):4+ top(Y,Out)
     [Y=4,X=4,W=3,V=4] 
* CE 58: top(V,Out) = 1+ proper(W,X):5+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [58] --> Loop 42 
* CEs [57] --> Loop 43 
* CEs [56] --> Loop 44 
* CEs [55] --> Loop 45 
* CEs [53,54] --> Loop 46 
* CEs [52] --> Loop 47 

#### Loops of top/2 
* Loop 42: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 43: top(V,Out)->  top(V',Out)
                  [V'=4,V=4] 
* Loop 44: top(V,Out)->  top(V',Out)
                  [V'=3,V=3] 
* Loop 45: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 46: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 47: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[43,44,45,46]]...
* [[43,44,45,46],47]
* [[43,44,45,46],42,47]
* [47]
* [42,47]


### Merging Chains  top/2 into  External patterns of execution 
* [[47,42],[47],[47,42,[43,44,45,46]],[47,[43,44,45,46]]] --> 1 
* [[[43,44,45,46]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [59,60,61,62,63] 
* CE 3 is refined into CE [64,65] 
* CE 4 is refined into CE [66,67] 
* CE 5 is refined into CE [68,69] 
* CE 6 is refined into CE [70,71] 
* CE 7 is refined into CE [72,73] 
* CE 8 is refined into CE [74,75] 
* CE 9 is refined into CE [76,77] 
* CE 10 is refined into CE [78,79] 


#### Refined cost equations start/2 
* CE 59: start(V,V1) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 60: start(V,V1) = 0+ proper(W1,X1):2
     [X1=2,W1=1,V=1] 
* CE 61: start(V,V1) = 0+ proper(W1,X1):3
     [X1=3,W1=2,V=2] 
* CE 62: start(V,V1) = 0+ proper(W1,X1):4
     [X1=4,W1=3,V=3] 
* CE 63: start(V,V1) = 0+ proper(V,W1):5
     [V>=0,W1=0] 
* CE 64: start(V,V1) = 0+ top(V,W1):1
     [V>=0,W1=0] 
* CE 65: start(V,V1) = 0+ top(V,W1):2
     [V>=1] 
* CE 66: start(V,V1) = 0+ take(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 67: start(V,V1) = 0+ take(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 
* CE 68: start(V,V1) = 0+ cons(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 69: start(V,V1) = 0+ cons(V,V1,W1):2
     [V1>=W1,V>=W1,W1>=1] 
* CE 70: start(V,V1) = 1+ s(V,W1):1
     [V>=0,W1=0] 
* CE 71: start(V,V1) = 1+ s(V,W1):2
     [V>=W1,W1>=1] 
* CE 72: start(V,V1) = 0+ inf(V,W1):1
     [V>=0,W1=0] 
* CE 73: start(V,V1) = 0+ inf(V,W1):2
     [V>=W1,W1>=1] 
* CE 74: start(V,V1) = 0+ s(V,W1):1
     [V>=0,W1=0] 
* CE 75: start(V,V1) = 0+ s(V,W1):2
     [V>=W1,W1>=1] 
* CE 76: start(V,V1) = 0+ length(V,W1):1
     [V>=0,W1=0] 
* CE 77: start(V,V1) = 0+ length(V,W1):2
     [V>=W1,W1>=1] 
* CE 78: start(V,V1) = 0+ eq(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 79: start(V,V1) = 0+ eq(V,V1,W1):2
     [V1>=W1,V>=W1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [62] --> Loop 48 
* CEs [61] --> Loop 49 
* CEs [60] --> Loop 50 
* CEs [59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79] --> Loop 51 
* CEs [65] --> Loop 52 

#### Loops of start/2 
* Loop 48: start(V,V1) [V=3] 
* Loop 49: start(V,V1) [V=2] 
* Loop 50: start(V,V1) [V=1] 
* Loop 51: start(V,V1) [V>=0] 
* Loop 52: start(V,V1) [V>=1] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [52]...
* [51]
* [50]
* [49]
* [48]


### Merging Chains  start/2 into  External patterns of execution 
* [[50],[51]] --> 1 
* [[49]] --> 2 
* [[48]] --> 3 
* [[52]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [23] 

 * loop 23:s(V,Out) -> [s(V',Out')] 
1
#### Cost of phase [23]:s(V,Out) -> [s(V',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'

#### Cost of chains of s(V,Out):
* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [24]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [25] 

 * loop 25:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1
#### Cost of phase [25]:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1*it(25)+0
  Such that:it(25) =< V
it(25) =< V-V'
it(25) =< V1
it(25) =< V1-V1'

#### Cost of chains of cons(V,V1,Out):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< Out

  with precondition: [Out>=1,V>=Out,V1>=Out] 

* Chain [26]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [27] 

 * loop 27:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1
#### Cost of phase [27]:eq(V,V1,Out) -> [eq(V',V1',Out')] 
1*it(27)+0
  Such that:it(27) =< V
it(27) =< V-V'
it(27) =< V1
it(27) =< V1-V1'

#### Cost of chains of eq(V,V1,Out):
* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< Out

  with precondition: [Out>=1,V>=Out,V1>=Out] 

* Chain [28]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [29] 

 * loop 29:inf(V,Out) -> [inf(V',Out')] 
1
#### Cost of phase [29]:inf(V,Out) -> [inf(V',Out')] 
1*it(29)+0
  Such that:it(29) =< V
it(29) =< V-V'

#### Cost of chains of inf(V,Out):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [30]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [31] 

 * loop 31:length(V,Out) -> [length(V',Out')] 
1
#### Cost of phase [31]:length(V,Out) -> [length(V',Out')] 
1*it(31)+0
  Such that:it(31) =< V
it(31) =< V-V'

#### Cost of chains of length(V,Out):
* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [32]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of proper(V,Out):
* Chain [37]: 1
  with precondition: [V=0,Out=1] 

* Chain [36]: 1
  with precondition: [V=1,Out=2] 

* Chain [35]: 1
  with precondition: [V=2,Out=3] 

* Chain [34]: 1
  with precondition: [V=3,Out=4] 

* Chain [33]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [38,39,40] 

 * loop 38:take(V,V1,Out) -> [take(V',V1',Out')] 
1
 * loop 39:take(V,V1,Out) -> [take(V',V1',Out')] 
1
 * loop 40:take(V,V1,Out) -> [take(V',V1',Out')] 
1
#### Cost of phase [38,39,40]:take(V,V1,Out) -> [take(V',V1',Out')] 
1*it(38)+1*it(39)+1*it(40)+0
  Such that:aux(1) =< V
aux(2) =< V+V1
aux(3) =< V+V1-V'-V1'
aux(4) =< V-V'
aux(5) =< V1
aux(6) =< V1-V1'
it(39) =< aux(1)
it(40) =< aux(1)
it(38) =< aux(2)
it(39) =< aux(2)
it(40) =< aux(2)
it(38) =< aux(3)
it(39) =< aux(3)
it(40) =< aux(3)
it(39) =< aux(4)
it(40) =< aux(4)
it(38) =< aux(5)
it(40) =< aux(5)
it(38) =< aux(6)
it(40) =< aux(6)

#### Cost of chains of take(V,V1,Out):
* Chain [[38,39,40],41]: 1*it(38)+1*it(39)+1*it(40)+0
  Such that:aux(7) =< V
aux(8) =< V+V1
aux(9) =< V1
it(39) =< aux(7)
it(40) =< aux(7)
it(38) =< aux(8)
it(39) =< aux(8)
it(40) =< aux(8)
it(38) =< aux(9)
it(40) =< aux(9)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [41]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [43,44,45,46] 

 * loop 43:top(V,Out) -> [top(V',Out')] 
2
 * loop 44:top(V,Out) -> [top(V',Out')] 
2
 * loop 45:top(V,Out) -> [top(V',Out')] 
2
 * loop 46:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [43,44,45,46]:top(V,Out) -> [top(V',Out')] 
8*it(43)+0
#### Cost of phase [43,44,45,46]:top(V,Out) -> [top(V',Out')] 
8*it(43)+0
#### Cost of phase [43,44,45,46]:top(V,Out) -> [top(V',Out')] 
8*it(43)+0
#### Cost of chains of top(V,Out):
* Chain [[43,44,45,46]]...: 8*it(43)+0
  with precondition: [V>=1] 

* Chain [[43,44,45,46],47]: 8*it(43)+0
  with precondition: [Out=0,V>=1] 

* Chain [[43,44,45,46],42,47]: 8*it(43)+1
  with precondition: [Out=0,V>=1] 

* Chain [47]: 0
  with precondition: [Out=0,V>=0] 

* Chain [42,47]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1):
* Chain [52]...: 8*s(3)+0
  with precondition: [V>=1] 

* Chain [51]: 1*s(4)+1*s(8)+1*s(9)+1*s(10)+2*s(11)+4*s(12)+1
  Such that:s(6) =< V+V1
aux(11) =< V
aux(12) =< V1
s(12) =< aux(11)
s(11) =< aux(12)
s(8) =< aux(11)
s(9) =< aux(11)
s(10) =< s(6)
s(8) =< s(6)
s(9) =< s(6)
s(10) =< aux(12)
s(9) =< aux(12)

  with precondition: [V>=0] 

* Chain [50]: 1
  with precondition: [V=1] 

* Chain [49]: 1
  with precondition: [V=2] 

* Chain [48]: 1
  with precondition: [V=3] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [52]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [49] with precondition: [V=2] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [48] with precondition: [V=3] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 44 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 77 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 157 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 54 ms.
   - Chain cost structures 44 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 339 ms.

