
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [ge/3]
1. recursive  : [gen/4,if/5]
2. non_recursive  : [generate/3]
3. recursive  : [sum/2]
4. non_recursive  : [times/3]
5. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into ge/3
1. SCC is partially evaluated into gen/4
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into sum/2
4. SCC is partially evaluated into times/3
5. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations ge/3 
* CE 17 is refined into CE [18] 
* CE 15 is refined into CE [19] 
* CE 16 is refined into CE [20] 


#### Refined cost equations ge/3 
* CE 18: ge(V,V1,Out) = 1+ ge(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 19: ge(V,V1,Out) = 1
     [V>=0,Out=1,V1=0] 
* CE 20: ge(V,V1,Out) = 1
     [V1>=1,Out=0,V=0] 

### Cost equations --> "Loop" of ge/3 
* CEs [19] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of ge/3 
* Loop 12: ge(V,V1,Out) [V>=0,Out=1,V1=0] 
* Loop 13: ge(V,V1,Out) [V1>=1,Out=0,V=0] 
* Loop 14: ge(V,V1,Out)->  ge(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR ge(V,V1,Out) 
* RF of phase [14]: [V,V1]

#### Partial ranking functions of CR ge(V,V1,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V
    V1


### Resulting Chains:ge(V,V1,Out) 
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  ge/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[13,[14]]] --> 3 
* [[12,[14]]] --> 4 


### Specialization of cost equations gen/4 
* CE 10 is refined into CE [21,22] 
* CE 9 is refined into CE [23,24] 


#### Refined cost equations gen/4 
* CE 21: gen(V,V1,V9,Out) = 2+ ge(V9,W9,X9):2
     [V9>=0,V1>=0,X9=1,W9=0,Out=0,V=0] 
* CE 22: gen(V,V1,V9,Out) = 2+ ge(V9,V,W9):4
     [V9>=V,V>=1,V1>=0,W9=1,Out=0] 
* CE 23: gen(V,V1,V9,Out) = 2+ ge(W9,V,X9):1+ gen(V,V1,Y9,Z9)
     [V>=1,V1>=0,V1+Z9+1=Out,Y9=1,X9=0,W9=0,V9=0] 
* CE 24: gen(V,V1,V9,Out) = 2+ ge(V9,V,W9):3+ gen(V,V1,X9,Y9)
     [V>=V9+1,V9>=1,V1>=0,V1+Y9+1=Out,V9+1=X9,W9=0] 

### Cost equations --> "Loop" of gen/4 
* CEs [24] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of gen/4 
* Loop 15: gen(V,V1,V9,Out)->  gen(V,V1,V9',Out')
                  [V>=V9+1,V9>=1,V1>=0,V1+Out'+1=Out,V9+1=V9'] 
* Loop 16: gen(V,V1,V9,Out)->  gen(V,V1,V9',Out')
                  [V1>=0,V>=1,V1+Out'+1=Out,V9'=1,V9=0] 
* Loop 17: gen(V,V1,V9,Out) [V9>=V,V1>=0,V>=1,Out=0] 
* Loop 18: gen(V,V1,V9,Out) [V9>=0,V1>=0,Out=0,V=0] 

### Ranking functions of CR gen(V,V1,V9,Out) 
* RF of phase [15]: [V-V9]

#### Partial ranking functions of CR gen(V,V1,V9,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V-V9


### Resulting Chains:gen(V,V1,V9,Out) 
* [[15],17]
* [18]
* [17]
* [16,[15],17]
* [16,17]


### Merging Chains  gen/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17,16]] --> 2 
* [[17,[15],16]] --> 3 
* [[17]] --> 4 
* [[17,[15]]] --> 5 


### Specialization of cost equations sum/2 
* CE 14 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 12 is refined into CE [27] 


#### Refined cost equations sum/2 
* CE 25: sum(V,Out) = 1+ sum(W,X)
     [V>=2,V=W+1,X+1=Out] 
* CE 26: sum(V,Out) = 1+ sum(W,Out)
     [W>=0,W+1=V] 
* CE 27: sum(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of sum/2 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of sum/2 
* Loop 19: sum(V,Out) [Out=0,V=0] 
* Loop 20: sum(V,Out)->  sum(V',Out')
                  [V>=2,Out=Out'+1,V=V'+1] 
* Loop 21: sum(V,Out)->  sum(V',Out)
                  [V>=1,V=V'+1] 

### Ranking functions of CR sum(V,Out) 
* RF of phase [20,21]: [V]

#### Partial ranking functions of CR sum(V,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1]:
    V-1
  - RF of loop [21:1]:
    V


### Resulting Chains:sum(V,Out) 
* [[20,21],19]
* [19]


### Merging Chains  sum/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[20,21]]] --> 2 


### Specialization of cost equations times/3 
* CE 11 is refined into CE [28,29,30] 


#### Refined cost equations times/3 
* CE 28: times(V,V1,Out) = 2+ gen(W1,V1,X1,Y1):1+ sum(Z1,A2):1
     [V1>=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 29: times(V,V1,Out) = 2+ gen(W1,X1,Y1,Z1):2+ sum(Z1,Out):2
     [Z1>=Out+1,Out>=0,Z1=X1+1,Z1=V1+1,Y1=0,W1=1,V=1] 
* CE 30: times(V,V1,Out) = 2+ gen(V,V1,W1,X1):3+ sum(X1,Out):2
     [X1>=2*V1+V,X1>=Out+1,Out>=0,V1>=0,V>=2,W1=0] 

### Cost equations --> "Loop" of times/3 
* CEs [30] --> Loop 22 
* CEs [29] --> Loop 23 
* CEs [28] --> Loop 24 

#### Loops of times/3 
* Loop 22: times(V,V1,Out) [Out>=0,V1>=0,V>=2] 
* Loop 23: times(V,V1,Out) [V1>=Out,Out>=0,V=1] 
* Loop 24: times(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR times(V,V1,Out) 

#### Partial ranking functions of CR times(V,V1,Out) 


### Resulting Chains:times(V,V1,Out) 
* [24]
* [23]
* [22]


### Merging Chains  times/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations start/4 
* CE 3 is refined into CE [31] 
* CE 2 is refined into CE [32,33,34] 
* CE 4 is refined into CE [35,36,37] 
* CE 5 is refined into CE [38,39,40] 
* CE 6 is refined into CE [41,42,43,44,45] 
* CE 7 is refined into CE [46,47] 
* CE 8 is refined into CE [48,49,50,51] 


#### Refined cost equations start/4 
* CE 31: start(V,V1,V9,V13) = 1
     [V13>=0,V9>=0,V1>=0,V=1] 
* CE 32: start(V,V1,V9,V13) = 1+ gen(W13,V9,X13,Y13):1
     [X13>=1,V9>=0,X13=V13+1,Y13=0,W13=0,V1=0,V=0] 
* CE 33: start(V,V1,V9,V13) = 1+ gen(V1,V9,W13,X13):4
     [W13>=V1,V9>=0,V1>=1,W13=V13+1,X13=0,V=0] 
* CE 34: start(V,V1,V9,V13) = 1+ gen(V1,V9,W13,X13):5
     [W13+X13>=V1+V9,V1>=W13+1,W13>=1,V9>=0,W13=V13+1,V=0] 
* CE 35: start(V,V1,V9,V13) = 0+ times(W13,V1,X13):1
     [V1>=0,X13=0,W13=0,V=0] 
* CE 36: start(V,V1,V9,V13) = 0+ times(W13,V1,X13):2
     [V1>=X13,X13>=0,W13=1,V=1] 
* CE 37: start(V,V1,V9,V13) = 0+ times(V,V1,W13):3
     [W13>=0,V1>=0,V>=2] 
* CE 38: start(V,V1,V9,V13) = 1+ gen(W13,V1,X13,Y13):1
     [V1>=0,Y13=0,X13=0,W13=0,V=0] 
* CE 39: start(V,V1,V9,V13) = 1+ gen(W13,X13,Y13,Z13):2
     [Z13>=1,Z13=X13+1,Z13=V1+1,Y13=0,W13=1,V=1] 
* CE 40: start(V,V1,V9,V13) = 1+ gen(V,V1,W13,X13):3
     [X13>=2*V1+V,V1>=0,V>=2,W13=0] 
* CE 41: start(V,V1,V9,V13) = 0+ gen(W13,V1,V9,X13):1
     [V9>=0,V1>=0,X13=0,W13=0,V=0] 
* CE 42: start(V,V1,V9,V13) = 0+ gen(W13,X13,Y13,Z13):2
     [Z13>=1,Z13=X13+1,Z13=V1+1,Y13=0,W13=1,V9=0,V=1] 
* CE 43: start(V,V1,V9,V13) = 0+ gen(V,V1,W13,X13):3
     [X13>=2*V1+V,V1>=0,V>=2,W13=0,V9=0] 
* CE 44: start(V,V1,V9,V13) = 0+ gen(V,V1,V9,W13):4
     [V9>=V,V1>=0,V>=1,W13=0] 
* CE 45: start(V,V1,V9,V13) = 0+ gen(V,V1,V9,W13):5
     [V9+W13>=V+V1,V>=V9+1,V9>=1,V1>=0] 
* CE 46: start(V,V1,V9,V13) = 0+ sum(W13,X13):1
     [X13=0,W13=0,V=0] 
* CE 47: start(V,V1,V9,V13) = 0+ sum(V,W13):2
     [V>=W13+1,W13>=0] 
* CE 48: start(V,V1,V9,V13) = 0+ ge(W13,V1,X13):1
     [V1>=1,X13=0,W13=0,V=0] 
* CE 49: start(V,V1,V9,V13) = 0+ ge(V,W13,X13):2
     [V>=0,X13=1,W13=0,V1=0] 
* CE 50: start(V,V1,V9,V13) = 0+ ge(V,V1,W13):3
     [V1>=V+1,V>=1,W13=0] 
* CE 51: start(V,V1,V9,V13) = 0+ ge(V,V1,W13):4
     [V>=V1,V1>=1,W13=1] 

### Cost equations --> "Loop" of start/4 
* CEs [43] --> Loop 25 
* CEs [49] --> Loop 26 
* CEs [31,36,37,39,40,42,44,45,47,50,51] --> Loop 27 
* CEs [32,33,34,35,38,41,46,48] --> Loop 28 

#### Loops of start/4 
* Loop 25: start(V,V1,V9,V13) [V1>=0,V>=2,V9=0] 
* Loop 26: start(V,V1,V9,V13) [V>=0,V1=0] 
* Loop 27: start(V,V1,V9,V13) [V>=1] 
* Loop 28: start(V,V1,V9,V13) [V=0] 

### Ranking functions of CR start(V,V1,V9,V13) 

#### Partial ranking functions of CR start(V,V1,V9,V13) 


### Resulting Chains:start(V,V1,V9,V13) 
* [28]
* [27]
* [26]
* [25]


### Merging Chains  start/4 into  External patterns of execution 
* [[28]] --> 1 
* [[26]] --> 2 
* [[25],[27]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:ge(V,V1,Out) -> [ge(V',V1',Out')] 
1
#### Cost of phase [14]:ge(V,V1,Out) -> [ge(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of phase [14]:ge(V,V1,Out) -> [ge(V',V1',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'
it(14) =< V1
it(14) =< V1-V1'

#### Cost of chains of ge(V,V1,Out):
* Chain [[14],13]: 1*it(14)+1
  Such that:it(14) =< V

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [[14],12]: 1*it(14)+1
  Such that:it(14) =< V1

  with precondition: [Out=1,V1>=1,V>=V1] 

* Chain [13]: 1
  with precondition: [V=0,Out=0,V1>=1] 

* Chain [12]: 1
  with precondition: [V1=0,Out=1,V>=0] 


#### Cost of loops [15] 

 * loop 15:gen(V,V1,V9,Out) -> [gen(V',V1',V9',Out')] 
1*s(3)+3
  Such that:s(3) =< V9'

#### Cost of phase [15]:gen(V,V1,V9,Out) -> [gen(V',V1',V9',Out')] 
3*it(15)+1*s(4)+0
  Such that:aux(1) =< V
it(15) =< V-V9
it(15) =< V-V9-V'+V9'
s(4) =< it(15)*aux(1)

#### Cost of chains of gen(V,V1,V9,Out):
* Chain [[15],17]: 3*it(15)+1*s(1)+1*s(4)+3
  Such that:it(15) =< V-V9
aux(2) =< V
s(1) =< aux(2)
s(4) =< it(15)*aux(2)

  with precondition: [V1>=0,V9>=1,V>=V9+1,Out+V9>=V+V1] 

* Chain [18]: 3
  with precondition: [V=0,Out=0,V1>=0,V9>=0] 

* Chain [17]: 1*s(1)+3
  Such that:s(1) =< V

  with precondition: [Out=0,V>=1,V1>=0,V9>=V] 

* Chain [16,[15],17]: 4*it(15)+1*s(4)+6
  Such that:aux(3) =< V
it(15) =< aux(3)
s(4) =< it(15)*aux(3)

  with precondition: [V9=0,V>=2,V1>=0,Out>=2*V1+V] 

* Chain [16,17]: 1*s(1)+6
  Such that:s(1) =< 1

  with precondition: [V=1,V9=0,Out=V1+1,Out>=1] 


#### Cost of loops [20,21] 

 * loop 20:sum(V,Out) -> [sum(V',Out')] 
1
 * loop 21:sum(V,Out) -> [sum(V',Out')] 
1
#### Cost of phase [20,21]:sum(V,Out) -> [sum(V',Out')] 
2*it(20)+0
  Such that:aux(4) =< V
aux(5) =< V-V'
it(20) =< aux(4)
it(20) =< aux(5)

#### Cost of chains of sum(V,Out):
* Chain [[20,21],19]: 2*it(20)+1
  Such that:aux(6) =< V
it(20) =< aux(6)

  with precondition: [Out>=0,V>=Out+1] 

* Chain [19]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of times(V,V1,Out):
* Chain [24]: 6
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [23]: 1*s(5)+2*s(7)+9
  Such that:s(5) =< 1
s(6) =< V1+1
s(7) =< s(6)

  with precondition: [V=1,Out>=0,V1>=Out] 

* Chain [22]: 4*s(9)+1*s(10)+2*s(12)+9
  Such that:s(8) =< V
s(9) =< s(8)
s(10) =< s(9)*s(8)

  with precondition: [V>=2,V1>=0,Out>=0] 


#### Cost of chains of start(V,V1,V9,V13):
* Chain [28]: 2*s(13)+3*s(14)+1*s(17)+6
  Such that:s(14) =< V1-V13
aux(7) =< V1
s(13) =< aux(7)
s(17) =< s(14)*aux(7)

  with precondition: [V=0] 

* Chain [27]: 3*s(18)+2*s(20)+13*s(22)+2*s(23)+2*s(24)+3*s(31)+1*s(34)+1*s(38)+9
  Such that:s(31) =< V-V9
s(38) =< V1
s(19) =< V1+1
aux(8) =< 1
aux(9) =< V
s(18) =< aux(8)
s(22) =< aux(9)
s(20) =< s(19)
s(23) =< s(22)*aux(9)
s(34) =< s(31)*aux(9)

  with precondition: [V>=1] 

* Chain [26]: 1
  with precondition: [V1=0,V>=0] 

* Chain [25]: 4*s(40)+1*s(41)+6
  Such that:s(39) =< V
s(40) =< s(39)
s(41) =< s(40)*s(39)

  with precondition: [V9=0,V>=2,V1>=0] 


Closed-form bounds of start(V,V1,V9,V13): 
-------------------------------------
* Chain [28] with precondition: [V=0] 
    - Upper bound: nat(V1)*2+6+nat(V1-V13)*nat(V1)+nat(V1-V13)*3 
    - Complexity: n^2 
* Chain [27] with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [25] with precondition: [V9=0,V>=2,V1>=0] 
    - Upper bound: 4*V+6+V*V 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V9,V13): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 32 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 69 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 213 ms.

