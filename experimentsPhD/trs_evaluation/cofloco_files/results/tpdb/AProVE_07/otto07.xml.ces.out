
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lt/3]
1. recursive  : [help/4,minus/3]
2. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lt/3
1. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lt/3 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations lt/3 
* CE 11: lt(V1,V,Out) = 1+ lt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 12: lt(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 13: lt(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 

### Cost equations --> "Loop" of lt/3 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of lt/3 
* Loop 8: lt(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 9: lt(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 10: lt(V1,V,Out)->  lt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR lt(V1,V,Out) 
* RF of phase [10]: [V,V1]

#### Partial ranking functions of CR lt(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V
    V1


### Resulting Chains:lt(V1,V,Out) 
* [[10],9]
* [[10],8]
* [9]
* [8]


### Merging Chains  lt/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[8,[10]]] --> 3 
* [[9,[10]]] --> 4 


### Specialization of cost equations minus/3 
* CE 7 is refined into CE [14,15] 
* CE 6 is refined into CE [16,17] 


#### Refined cost equations minus/3 
* CE 14: minus(V1,V,Out) = 2+ lt(W1,V1,X1):1+ minus(V1,Y1,Z1)
     [V1>=1,Z1+1=Out,Y1=1,X1=1,W1=0,V=0] 
* CE 15: minus(V1,V,Out) = 2+ lt(V,V1,W1):4+ minus(V1,X1,Y1)
     [V1>=V+1,V>=1,V+1=X1,Y1+1=Out,W1=1] 
* CE 16: minus(V1,V,Out) = 2+ lt(V,W1,X1):2
     [V>=0,X1=0,W1=0,Out=0,V1=0] 
* CE 17: minus(V1,V,Out) = 2+ lt(V,V1,W1):3
     [V>=V1,V1>=1,W1=0,Out=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [17] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of minus/3 
* Loop 11: minus(V1,V,Out) [V>=V1,V1>=1,Out=0] 
* Loop 12: minus(V1,V,Out) [V>=0,Out=0,V1=0] 
* Loop 13: minus(V1,V,Out)->  minus(V1,V',Out')
                  [V1>=V+1,V>=1,Out=Out'+1,V+1=V'] 
* Loop 14: minus(V1,V,Out)->  minus(V1,V',Out')
                  [V1>=1,Out=Out'+1,V'=1,V=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [13]: [V1-V]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1-V


### Resulting Chains:minus(V1,V,Out) 
* [[13],11]
* [14,[13],11]
* [14,11]
* [12]
* [11]


### Merging Chains  minus/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11,14]] --> 2 
* [[11,[13],14]] --> 3 
* [[11]] --> 4 
* [[11,[13]]] --> 5 


### Specialization of cost equations start/3 
* CE 3 is refined into CE [18,19,20] 
* CE 2 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24,25] 
* CE 5 is refined into CE [26,27,28,29,30] 


#### Refined cost equations start/3 
* CE 18: start(V1,V,V10) = 1+ minus(W10,X10,Y10):1
     [X10>=1,X10=V10+1,Y10=0,W10=0,V=0,V1=1] 
* CE 19: start(V1,V,V10) = 1+ minus(V,W10,X10):4
     [W10>=V,V>=1,W10=V10+1,X10=0,V1=1] 
* CE 20: start(V1,V,V10) = 1+ minus(W10,X10,Y10):5
     [Y10>=1,X10>=1,X10+Y10=W10,X10+Y10=V,X10=V10+1,V1=1] 
* CE 21: start(V1,V,V10) = 1
     [V10>=0,V>=0,V1=0] 
* CE 22: start(V1,V,V10) = 0+ lt(W10,V,X10):1
     [V>=1,X10=1,W10=0,V1=0] 
* CE 23: start(V1,V,V10) = 0+ lt(V1,W10,X10):2
     [V1>=0,X10=0,W10=0,V=0] 
* CE 24: start(V1,V,V10) = 0+ lt(V1,V,W10):3
     [V1>=V,V>=1,W10=0] 
* CE 25: start(V1,V,V10) = 0+ lt(V1,V,W10):4
     [V>=V1+1,V1>=1,W10=1] 
* CE 26: start(V1,V,V10) = 0+ minus(W10,V,X10):1
     [V>=0,X10=0,W10=0,V1=0] 
* CE 27: start(V1,V,V10) = 0+ minus(W10,X10,Y10):2
     [Y10=1,X10=0,W10=1,V=0,V1=1] 
* CE 28: start(V1,V,V10) = 0+ minus(V1,W10,V1):3
     [V1>=2,W10=0,V=0] 
* CE 29: start(V1,V,V10) = 0+ minus(V1,V,W10):4
     [V>=V1,V1>=1,W10=0] 
* CE 30: start(V1,V,V10) = 0+ minus(W10,V,X10):5
     [X10>=1,V>=1,V+X10=W10,V+X10=V1] 

### Cost equations --> "Loop" of start/3 
* CEs [24,30] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [19,25,29] --> Loop 17 
* CEs [18,23,27,28] --> Loop 18 
* CEs [21,22,26] --> Loop 19 

#### Loops of start/3 
* Loop 15: start(V1,V,V10) [V1>=V,V>=1] 
* Loop 16: start(V1,V,V10) [V>=V10+2,V10>=0,V1=1] 
* Loop 17: start(V1,V,V10) [V>=V1,V1>=1] 
* Loop 18: start(V1,V,V10) [V1>=0,V=0] 
* Loop 19: start(V1,V,V10) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V,V10) 

#### Partial ranking functions of CR start(V1,V,V10) 


### Resulting Chains:start(V1,V,V10) 
* [19]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  start/3 into  External patterns of execution 
* [[19]] --> 1 
* [[16],[17]] --> 2 
* [[18]] --> 3 
* [[15]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1
#### Cost of phase [10]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:lt(V1,V,Out) -> [lt(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of chains of lt(V1,V,Out):
* Chain [[10],9]: 1*it(10)+1
  Such that:it(10) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[10],8]: 1*it(10)+1
  Such that:it(10) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [9]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [8]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [13] 

 * loop 13:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*s(3)+3
  Such that:s(3) =< V'

#### Cost of phase [13]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(13)+1*s(4)+0
  Such that:aux(1) =< V1
it(13) =< V1-V
it(13) =< V1-V-V1'+V'
s(4) =< it(13)*aux(1)

#### Cost of chains of minus(V1,V,Out):
* Chain [[13],11]: 3*it(13)+1*s(1)+1*s(4)+3
  Such that:it(13) =< Out
aux(2) =< V+Out
s(1) =< aux(2)
s(4) =< it(13)*aux(2)

  with precondition: [V1=Out+V,V>=1,V1>=V+1] 

* Chain [14,[13],11]: 4*it(13)+1*s(4)+6
  Such that:aux(3) =< Out
it(13) =< aux(3)
s(4) =< it(13)*aux(3)

  with precondition: [V=0,V1=Out,V1>=2] 

* Chain [14,11]: 1*s(1)+6
  Such that:s(1) =< 1

  with precondition: [V1=1,V=0,Out=1] 

* Chain [12]: 3
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [11]: 1*s(1)+3
  Such that:s(1) =< V1

  with precondition: [Out=0,V1>=1,V>=V1] 


#### Cost of chains of start(V1,V,V10):
* Chain [19]: 3
  with precondition: [V1=0,V>=0] 

* Chain [18]: 1*s(5)+4*s(7)+1*s(8)+6
  Such that:s(5) =< 1
s(6) =< V1
s(7) =< s(6)
s(8) =< s(7)*s(6)

  with precondition: [V=0,V1>=0] 

* Chain [17]: 1*s(9)+2*s(10)+4
  Such that:s(9) =< V
aux(4) =< V1
s(10) =< aux(4)

  with precondition: [V1>=1,V>=V1] 

* Chain [16]: 3*s(12)+1*s(14)+1*s(15)+4
  Such that:s(13) =< V
s(12) =< V-V10
s(14) =< s(13)
s(15) =< s(12)*s(13)

  with precondition: [V1=1,V10>=0,V>=V10+2] 

* Chain [15]: 1*s(16)+3*s(17)+1*s(19)+1*s(20)+3
  Such that:s(18) =< V1
s(17) =< V1-V
s(16) =< V
s(19) =< s(18)
s(20) =< s(17)*s(18)

  with precondition: [V>=1,V1>=V] 


Closed-form bounds of start(V1,V,V10): 
-------------------------------------
* Chain [19] with precondition: [V1=0,V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [18] with precondition: [V=0,V1>=0] 
    - Upper bound: 4*V1+7+V1*V1 
    - Complexity: n^2 
* Chain [17] with precondition: [V1>=1,V>=V1] 
    - Upper bound: 2*V1+V+4 
    - Complexity: n 
* Chain [16] with precondition: [V1=1,V10>=0,V>=V10+2] 
    - Upper bound: 3*V-3*V10+ (V+4+ (V-V10)*V) 
    - Complexity: n^2 
* Chain [15] with precondition: [V>=1,V1>=V] 
    - Upper bound: 3*V1-3*V+ (V1+3+ (V1-V)*V1+V) 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V10): max([max([V1+1+max([V,2*V1+3+V1*V1]),nat(V1-V)*V1+V+nat(V1-V)*3])+V1,V+1+nat(V-V10)*V+nat(V-V10)*3])+3 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 37 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 134 ms.

