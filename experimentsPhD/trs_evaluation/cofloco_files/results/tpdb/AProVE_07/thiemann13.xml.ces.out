
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [inc/2]
1. recursive  : [le/3]
2. recursive  : [minus/3]
3. recursive  : [quot/3]
4. recursive  : [if/5,if2/4,log2/3]
5. non_recursive  : [log/2]
6. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into inc/2
1. SCC is partially evaluated into le/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into quot/3
4. SCC is partially evaluated into log2/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations inc/2 
* CE 27 is refined into CE [34] 
* CE 29 is refined into CE [35] 
* CE 28 is refined into CE [36] 


#### Refined cost equations inc/2 
* CE 34: inc(V1,Out) = 1
     [Out=0,V1=0] 
* CE 35: inc(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 36: inc(V1,Out) = 1+ inc(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of inc/2 
* CEs [36] --> Loop 19 
* CEs [34,35] --> Loop 20 

#### Loops of inc/2 
* Loop 19: inc(V1,Out)->  inc(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 20: inc(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR inc(V1,Out) 
* RF of phase [19]: [V1]

#### Partial ranking functions of CR inc(V1,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V1


### Resulting Chains:inc(V1,Out) 
* [[19],20]
* [20]


### Merging Chains  inc/2 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 


### Specialization of cost equations le/3 
* CE 26 is refined into CE [37] 
* CE 24 is refined into CE [38] 
* CE 23 is refined into CE [39] 
* CE 25 is refined into CE [40] 


#### Refined cost equations le/3 
* CE 37: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 38: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 39: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 40: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [40] --> Loop 21 
* CEs [37] --> Loop 22 
* CEs [38] --> Loop 23 
* CEs [39] --> Loop 24 

#### Loops of le/3 
* Loop 21: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 22: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 23: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 24: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [21]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V
    V1


### Resulting Chains:le(V1,V,Out) 
* [[21],24]
* [[21],23]
* [[21],22]
* [24]
* [23]
* [22]


### Merging Chains  le/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22],[22,[21]]] --> 3 
* [[23,[21]]] --> 4 
* [[24,[21]]] --> 5 


### Specialization of cost equations minus/3 
* CE 31 is refined into CE [41] 
* CE 30 is refined into CE [42] 
* CE 33 is refined into CE [43] 
* CE 32 is refined into CE [44] 


#### Refined cost equations minus/3 
* CE 41: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 42: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 43: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 44: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [44] --> Loop 25 
* CEs [41] --> Loop 26 
* CEs [42,43] --> Loop 27 

#### Loops of minus/3 
* Loop 25: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 26: minus(A,B,A) [A>=0,B=0] 
* Loop 27: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [25]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  minus/3 into  External patterns of execution 
* [[26]] --> 1 
* [[27],[27,[25]]] --> 2 
* [[26,[25]]] --> 3 


### Specialization of cost equations quot/3 
* CE 15 is refined into CE [45] 
* CE 17 is refined into CE [46] 
* CE 16 is refined into CE [47,48,49] 


#### Refined cost equations quot/3 
* CE 45: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 46: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 47: quot(V1,V,Out) = 1+ minus(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 48: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 49: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [49] --> Loop 28 
* CEs [48] --> Loop 29 
* CEs [47] --> Loop 30 
* CEs [45,46] --> Loop 31 

#### Loops of quot/3 
* Loop 28: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 29: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 30: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 31: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [28]: [V1-1,V1-V+1]
* RF of phase [30]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V1-1
    V1-V+1
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[30],31]
* [[30],29,31]
* [[28],31]
* [[28],29,31]
* [31]
* [29,31]


### Merging Chains  quot/3 into  External patterns of execution 
* [[31,29,[30]],[31,[30]]] --> 1 
* [[31]] --> 2 
* [[31,29]] --> 3 
* [[31,[28]]] --> 4 
* [[31,29,[28]]] --> 5 


### Specialization of cost equations log2/3 
* CE 22 is refined into CE [50,51,52,53] 
* CE 18 is refined into CE [54,55,56,57,58,59] 
* CE 20 is refined into CE [60] 
* CE 21 is refined into CE [61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78] 
* CE 19 is refined into CE [79,80,81,82,83,84,85,86] 


#### Refined cost equations log2/3 
* CE 50: log2(V1,V,Out) = 2+ le(W1,X1,Y1):1+ le(Z1,A2,B2):1+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=1,V1=0] 
* CE 51: log2(V1,V,Out) = 2+ le(W1,X1,Y1):1+ le(Z1,A2,B2):1+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=1,V1=0] 
* CE 52: log2(V1,V,Out) = 2+ le(W1,X1,Y1):1+ le(Z1,A2,B2):3+ inc(V,C2):1
     [V>=0,C2=0,B2=0,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=1,V1=0] 
* CE 53: log2(V1,V,Out) = 2+ le(W1,X1,Y1):1+ le(Z1,A2,B2):3+ inc(V,C2):2
     [V>=C2,C2>=1,B2=0,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=1,V1=0] 
* CE 54: log2(V1,V,Out) = 2+ le(V1,W1,X1):2+ le(V1,Y1,Z1):3+ inc(V,A2):1
     [V>=0,V1>=1,A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0] 
* CE 55: log2(V1,V,Out) = 2+ le(V1,W1,X1):2+ le(V1,Y1,Z1):3+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=1,Z1=0,Y1=1,X1=1,W1=0,Out=0] 
* CE 56: log2(V1,V,Out) = 2+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1
     [V>=0,V1>=2,A2=0,Z1=1,Y1=1,X1=1,W1=0,Out=0] 
* CE 57: log2(V1,V,Out) = 2+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=2,Z1=1,Y1=1,X1=1,W1=0,Out=0] 
* CE 58: log2(V1,V,Out) = 2+ le(W1,X1,Y1):2+ le(Z1,A2,B2):5+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=1,Y1=1,X1=0,W1=1,Out=0,V1=1] 
* CE 59: log2(V1,V,Out) = 2+ le(W1,X1,Y1):2+ le(Z1,A2,B2):5+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=1,Y1=1,X1=0,W1=1,Out=0,V1=1] 
* CE 60: log2(V1,V,Out) = 3+ le(W1,X1,Y1):2+ le(Z1,A2,B2):5+ inc(V,C2):2
     [V>=C2,C2>=1,C2=Out+1,B2=2,A2=1,Z1=1,Y1=1,X1=0,W1=1,V1=1] 
* CE 61: log2(V1,V,Out) = 1+ le(W1,X1,Y1):1+ le(Z1,A2,B2):1+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 62: log2(V1,V,Out) = 1+ le(W1,X1,Y1):1+ le(Z1,A2,B2):1+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 63: log2(V1,V,Out) = 1+ le(W1,X1,Y1):1+ le(Z1,A2,B2):3+ inc(V,C2):1
     [V>=0,C2=0,B2=0,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 64: log2(V1,V,Out) = 1+ le(W1,X1,Y1):1+ le(Z1,A2,B2):3+ inc(V,C2):2
     [V>=C2,C2>=1,B2=0,A2=1,Z1=0,Y1=2,X1=0,W1=0,Out=0,V1=0] 
* CE 65: log2(V1,V,Out) = 1+ le(V1,W1,X1):2+ le(V1,Y1,Z1):3+ inc(V,A2):1
     [V>=0,V1>=1,A2=0,Z1=0,Y1=1,X1=1,W1=0,Out=0] 
* CE 66: log2(V1,V,Out) = 1+ le(V1,W1,X1):2+ le(V1,Y1,Z1):3+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=1,Z1=0,Y1=1,X1=1,W1=0,Out=0] 
* CE 67: log2(V1,V,Out) = 1+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1
     [V>=0,V1>=2,A2=0,Z1=1,Y1=1,X1=1,W1=0,Out=0] 
* CE 68: log2(V1,V,Out) = 1+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=2,Z1=1,Y1=1,X1=1,W1=0,Out=0] 
* CE 69: log2(V1,V,Out) = 1+ le(W1,X1,Y1):2+ le(Z1,A2,B2):5+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=1,Y1=1,X1=0,W1=1,Out=0,V1=1] 
* CE 70: log2(V1,V,Out) = 1+ le(W1,X1,Y1):2+ le(Z1,A2,B2):5+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=1,Y1=1,X1=0,W1=1,Out=0,V1=1] 
* CE 71: log2(V1,V,Out) = 1+ le(W1,X1,Y1):3+ le(Z1,A2,B2):1+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 72: log2(V1,V,Out) = 1+ le(W1,X1,Y1):3+ le(Z1,A2,B2):1+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=0,Y1=0,X1=0,W1=0,Out=0,V1=0] 
* CE 73: log2(V1,V,Out) = 1+ le(V1,W1,X1):3+ le(V1,Y1,Z1):3+ inc(V,A2):1
     [V>=0,V1>=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 74: log2(V1,V,Out) = 1+ le(V1,W1,X1):3+ le(V1,Y1,Z1):3+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 75: log2(V1,V,Out) = 1+ le(V1,W1,X1):3+ le(V1,Y1,Z1):4+ inc(V,A2):1
     [V>=0,V1>=2,A2=0,Z1=1,Y1=1,X1=0,W1=0,Out=0] 
* CE 76: log2(V1,V,Out) = 1+ le(V1,W1,X1):3+ le(V1,Y1,Z1):4+ inc(V,A2):2
     [V>=A2,A2>=1,V1>=2,Z1=1,Y1=1,X1=0,W1=0,Out=0] 
* CE 77: log2(V1,V,Out) = 1+ le(W1,X1,Y1):3+ le(Z1,A2,B2):5+ inc(V,C2):1
     [V>=0,C2=0,B2=2,A2=1,Z1=1,Y1=0,X1=0,W1=1,Out=0,V1=1] 
* CE 78: log2(V1,V,Out) = 1+ le(W1,X1,Y1):3+ le(Z1,A2,B2):5+ inc(V,C2):2
     [V>=C2,C2>=1,B2=2,A2=1,Z1=1,Y1=0,X1=0,W1=1,Out=0,V1=1] 
* CE 79: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1+ quot(V1,B2,C2):2+ log2(D2,E2,Out)
     [V1>=2,V>=0,E2=0,D2=0,C2=0,B2=2,A2=0,Z1=1,Y1=1,X1=1,W1=0] 
* CE 80: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1+ quot(V1,B2,C2):3+ log2(D2,E2,Out)
     [V1>=2,V>=0,E2=0,D2=1,C2=1,B2=2,A2=0,Z1=1,Y1=1,X1=1,W1=0] 
* CE 81: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1+ quot(V1,B2,C2):4+ log2(C2,D2,Out)
     [V1>=2*C2,C2>=1,V>=0,D2=0,B2=2,A2=0,Z1=1,Y1=1,X1=1,W1=0] 
* CE 82: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):1+ quot(V1,B2,C2):5+ log2(C2,D2,Out)
     [V1+1>=2*C2,C2>=2,V>=0,D2=0,B2=2,A2=0,Z1=1,Y1=1,X1=1,W1=0] 
* CE 83: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2+ quot(V1,B2,C2):2+ log2(D2,A2,Out)
     [V>=A2,V1>=2,A2>=1,D2=0,C2=0,B2=2,Z1=1,Y1=1,X1=1,W1=0] 
* CE 84: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2+ quot(V1,B2,C2):3+ log2(D2,A2,Out)
     [V>=A2,V1>=2,A2>=1,D2=1,C2=1,B2=2,Z1=1,Y1=1,X1=1,W1=0] 
* CE 85: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2+ quot(V1,B2,C2):4+ log2(C2,A2,Out)
     [V>=A2,V1>=2*C2,C2>=1,A2>=1,B2=2,Z1=1,Y1=1,X1=1,W1=0] 
* CE 86: log2(V1,V,Out) = 3+ le(V1,W1,X1):2+ le(V1,Y1,Z1):4+ inc(V,A2):2+ quot(V1,B2,C2):5+ log2(C2,A2,Out)
     [V>=A2,V1+1>=2*C2,C2>=2,A2>=1,B2=2,Z1=1,Y1=1,X1=1,W1=0] 

### Cost equations --> "Loop" of log2/3 
* CEs [86] --> Loop 32 
* CEs [82] --> Loop 33 
* CEs [84,85] --> Loop 34 
* CEs [80,81] --> Loop 35 
* CEs [83] --> Loop 36 
* CEs [79] --> Loop 37 
* CEs [60] --> Loop 38 
* CEs [58,59,69,70,77,78] --> Loop 39 
* CEs [50,51,52,53] --> Loop 40 
* CEs [54,55,56,57,61,62,63,64,65,66,67,68,71,72,73,74,75,76] --> Loop 41 

#### Loops of log2/3 
* Loop 32: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V>=V',V1+1>=2*V1',V'>=1,V1'>=2] 
* Loop 33: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V1+1>=2*V1',V1'>=2,V>=0,V'=0] 
* Loop 34: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V>=V',V1>=2*V1',V'>=1,V1'>=1] 
* Loop 35: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V1>=2*V1',V1'>=1,V>=0,V'=0] 
* Loop 36: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V>=V',V'>=1,V1>=2,V1'=0] 
* Loop 37: log2(V1,V,Out)->  log2(V1',V',Out)
                  [V>=0,V1>=2,V'=0,V1'=0] 
* Loop 38: log2(V1,V,Out) [V>=Out+1,Out>=0,V1=1] 
* Loop 39: log2(V1,V,Out) [V>=0,Out=0,V1=1] 
* Loop 40: log2(V1,V,Out) [V>=0,Out=1,V1=0] 
* Loop 41: log2(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR log2(V1,V,Out) 
* RF of phase [32,34]: [V1-1]
* RF of phase [33,35]: [V1-1]

#### Partial ranking functions of CR log2(V1,V,Out) 
* Partial RF of phase [32,34]:
  - RF of loop [32:1]:
    V1-2
  - RF of loop [34:1]:
    V1-1
* Partial RF of phase [33,35]:
  - RF of loop [33:1]:
    V1-2
  - RF of loop [35:1]:
    V1-1


### Resulting Chains:log2(V1,V,Out) 
* [[33,35],41]
* [[33,35],39]
* [[33,35],37,41]
* [[33,35],37,40]
* [[32,34],[33,35],41]
* [[32,34],[33,35],39]
* [[32,34],[33,35],37,41]
* [[32,34],[33,35],37,40]
* [[32,34],41]
* [[32,34],39]
* [[32,34],38]
* [[32,34],37,41]
* [[32,34],37,40]
* [[32,34],36,41]
* [[32,34],36,40]
* [41]
* [40]
* [39]
* [38]
* [37,41]
* [37,40]
* [36,41]
* [36,40]


### Merging Chains  log2/3 into  External patterns of execution 
* [[40]] --> 1 
* [[41,36],[41,37],[39],[41],[41,36,[32,34]],[41,37,[32,34]],[39,[32,34]],[41,[32,34]],[41,37,[33,35],[32,34]],[39,[33,35],[32,34]],[41,[33,35],[32,34]],[41,37,[33,35]],[39,[33,35]],[41,[33,35]]] --> 2 
* [[38]] --> 3 
* [[40,36],[40,37],[40,36,[32,34]],[40,37,[32,34]],[40,37,[33,35],[32,34]],[40,37,[33,35]]] --> 4 
* [[38,[32,34]]] --> 5 


### Specialization of cost equations start/4 
* CE 7 is refined into CE [87] 
* CE 8 is refined into CE [88] 
* CE 6 is refined into CE [89] 
* CE 2 is refined into CE [90] 
* CE 3 is refined into CE [91] 
* CE 4 is refined into CE [92,93,94,95,96,97,98,99,100,101,102] 
* CE 5 is refined into CE [103,104,105,106,107,108,109,110,111,112,113] 
* CE 9 is refined into CE [114,115,116,117,118] 
* CE 10 is refined into CE [119,120] 
* CE 11 is refined into CE [121,122,123] 
* CE 12 is refined into CE [124,125,126,127,128] 
* CE 13 is refined into CE [129,130,131] 
* CE 14 is refined into CE [132,133,134,135,136] 


#### Refined cost equations start/4 
* CE 87: start(V1,V,V17,V21) = 1
     [V17>=1,V>=0,V1=2] 
* CE 88: start(V1,V,V17,V21) = 1
     [V21>=0,V17>=0,V>=0,V1=2] 
* CE 89: start(V1,V,V17,V21) = 2
     [V21>=1,V17>=0,V=2,V1=1] 
* CE 90: start(V1,V,V17,V21) = 1
     [V21>=0,V17>=0,V>=0,V1=1] 
* CE 91: start(V1,V,V17,V21) = 0
     [V17>=0,V>=0,V1>=0] 
* CE 92: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):2+ log2(Y21,V21,Z21):1
     [V21>=0,V17>=0,Z21=1,Y21=0,X21=0,W21=2,V=1,V1=1] 
* CE 93: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):2+ log2(Y21,V21,Z21):2
     [V21>=0,V17>=0,Z21=0,Y21=0,X21=0,W21=2,V=1,V1=1] 
* CE 94: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):3+ log2(Y21,V21,Z21):2
     [V21>=0,V17>=1,Z21=0,Y21=1,X21=1,W21=2,V=1,V1=1] 
* CE 95: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):3+ log2(Y21,V21,Z21):3
     [V21>=Z21+1,Z21>=0,V17>=1,Y21=1,X21=1,W21=2,V=1,V1=1] 
* CE 96: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):4+ log2(X21,V21,Y21):2
     [V17>=2*X21,V21>=0,X21>=1,Y21=0,W21=2,V=1,V1=1] 
* CE 97: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):4+ log2(Y21,V21,Z21):3
     [V21>=Z21+1,Z21>=0,V17>=2,Y21=1,X21=1,W21=2,V=1,V1=1] 
* CE 98: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):4+ log2(X21,V21,Y21):4
     [V17>=2*X21,V21>=0,X21>=2,Y21=1,W21=2,V=1,V1=1] 
* CE 99: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):4+ log2(X21,V21,Y21):5
     [V21>=Y21+1,V17>=2*X21,Y21>=0,X21>=2,W21=2,V=1,V1=1] 
* CE 100: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):5+ log2(X21,V21,Y21):2
     [V17+1>=2*X21,V21>=0,X21>=2,Y21=0,W21=2,V=1,V1=1] 
* CE 101: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):5+ log2(X21,V21,Y21):4
     [V17+1>=2*X21,V21>=0,X21>=2,Y21=1,W21=2,V=1,V1=1] 
* CE 102: start(V1,V,V17,V21) = 2+ quot(V17,W21,X21):5+ log2(X21,V21,Y21):5
     [V21>=Y21+1,V17+1>=2*X21,Y21>=0,X21>=2,W21=2,V=1,V1=1] 
* CE 103: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):2+ log2(Y21,V17,Z21):1
     [V17>=0,V>=0,Z21=1,Y21=0,X21=0,W21=2,V1=1] 
* CE 104: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):2+ log2(Y21,V17,Z21):2
     [V17>=0,V>=0,Z21=0,Y21=0,X21=0,W21=2,V1=1] 
* CE 105: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):3+ log2(Y21,V17,Z21):2
     [V17>=0,V>=1,Z21=0,Y21=1,X21=1,W21=2,V1=1] 
* CE 106: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):3+ log2(Y21,V17,Z21):3
     [V17>=Z21+1,Z21>=0,V>=1,Y21=1,X21=1,W21=2,V1=1] 
* CE 107: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):4+ log2(X21,V17,Y21):2
     [V>=2*X21,V17>=0,X21>=1,Y21=0,W21=2,V1=1] 
* CE 108: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):4+ log2(Y21,V17,Z21):3
     [V17>=Z21+1,Z21>=0,V>=2,Y21=1,X21=1,W21=2,V1=1] 
* CE 109: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):4+ log2(X21,V17,Y21):4
     [V>=2*X21,V17>=0,X21>=2,Y21=1,W21=2,V1=1] 
* CE 110: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):4+ log2(X21,V17,Y21):5
     [V17>=Y21+1,V>=2*X21,Y21>=0,X21>=2,W21=2,V1=1] 
* CE 111: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):5+ log2(X21,V17,Y21):2
     [V+1>=2*X21,V17>=0,X21>=2,Y21=0,W21=2,V1=1] 
* CE 112: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):5+ log2(X21,V17,Y21):4
     [V+1>=2*X21,V17>=0,X21>=2,Y21=1,W21=2,V1=1] 
* CE 113: start(V1,V,V17,V21) = 1+ quot(V,W21,X21):5+ log2(X21,V17,Y21):5
     [V17>=Y21+1,V+1>=2*X21,Y21>=0,X21>=2,W21=2,V1=1] 
* CE 114: start(V1,V,V17,V21) = 0+ le(W21,V,X21):1
     [V>=0,X21=2,W21=0,V1=0] 
* CE 115: start(V1,V,V17,V21) = 0+ le(V1,W21,X21):2
     [V1>=1,X21=1,W21=0,V=0] 
* CE 116: start(V1,V,V17,V21) = 0+ le(V1,V,W21):3
     [V>=0,V1>=0,W21=0] 
* CE 117: start(V1,V,V17,V21) = 0+ le(V1,V,W21):4
     [V1>=V+1,V>=1,W21=1] 
* CE 118: start(V1,V,V17,V21) = 0+ le(V1,V,W21):5
     [V>=V1,V1>=1,W21=2] 
* CE 119: start(V1,V,V17,V21) = 0+ inc(V1,W21):1
     [V1>=0,W21=0] 
* CE 120: start(V1,V,V17,V21) = 0+ inc(V1,W21):2
     [V1>=W21,W21>=1] 
* CE 121: start(V1,V,V17,V21) = 0+ minus(V1,W21,V1):1
     [V1>=0,W21=0,V=0] 
* CE 122: start(V1,V,V17,V21) = 0+ minus(V1,V,W21):2
     [V>=0,V1>=0,W21=0] 
* CE 123: start(V1,V,V17,V21) = 0+ minus(W21,V,X21):3
     [X21>=0,V>=1,V+X21=W21,V+X21=V1] 
* CE 124: start(V1,V,V17,V21) = 0+ quot(V1,W21,X21):1
     [V1>=X21,X21>=1,W21=1,V=1] 
* CE 125: start(V1,V,V17,V21) = 0+ quot(V1,V,W21):2
     [V>=0,V1>=0,W21=0] 
* CE 126: start(V1,V,V17,V21) = 0+ quot(V1,V,W21):3
     [V>=1,V1>=1,W21=1] 
* CE 127: start(V1,V,V17,V21) = 0+ quot(V1,V,W21):4
     [V1+2>=2*W21+V,W21>=1,V>=2] 
* CE 128: start(V1,V,V17,V21) = 0+ quot(V1,V,W21):5
     [V1+3>=2*W21+V,W21>=2,V>=2] 
* CE 129: start(V1,V,V17,V21) = 1+ log2(W21,X21,Y21):1
     [Y21=1,X21=0,W21=0,V1=0] 
* CE 130: start(V1,V,V17,V21) = 1+ log2(V1,W21,X21):2
     [V1>=0,X21=0,W21=0] 
* CE 131: start(V1,V,V17,V21) = 1+ log2(V1,W21,X21):4
     [V1>=2,X21=1,W21=0] 
* CE 132: start(V1,V,V17,V21) = 0+ log2(W21,V,X21):1
     [V>=0,X21=1,W21=0,V1=0] 
* CE 133: start(V1,V,V17,V21) = 0+ log2(V1,V,W21):2
     [V>=0,V1>=0,W21=0] 
* CE 134: start(V1,V,V17,V21) = 0+ log2(W21,V,X21):3
     [V>=X21+1,X21>=0,W21=1,V1=1] 
* CE 135: start(V1,V,V17,V21) = 0+ log2(V1,V,W21):4
     [V>=0,V1>=2,W21=1] 
* CE 136: start(V1,V,V17,V21) = 0+ log2(V1,V,W21):5
     [V>=W21+1,W21>=0,V1>=2] 

### Cost equations --> "Loop" of start/4 
* CEs [124] --> Loop 42 
* CEs [115,121] --> Loop 43 
* CEs [87] --> Loop 44 
* CEs [88] --> Loop 45 
* CEs [89,134] --> Loop 46 
* CEs [90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113] --> Loop 47 
* CEs [91,114,116,117,118,119,120,122,123,125,126,127,128,129,130,131,132,133,135,136] --> Loop 48 

#### Loops of start/4 
* Loop 42: start(V1,V,V17,V21) [V1>=1,V=1] 
* Loop 43: start(V1,V,V17,V21) [V1>=0,V=0] 
* Loop 44: start(V1,V,V17,V21) [V17>=1,V>=0,V1=2] 
* Loop 45: start(V1,V,V17,V21) [V21>=0,V17>=0,V>=0,V1=2] 
* Loop 46: start(V1,V,V17,V21) [V>=1,V1=1] 
* Loop 47: start(V1,V,V17,V21) [V17>=0,V>=0,V1=1] 
* Loop 48: start(V1,V,V17,V21) [V1>=0] 

### Ranking functions of CR start(V1,V,V17,V21) 

#### Partial ranking functions of CR start(V1,V,V17,V21) 


### Resulting Chains:start(V1,V,V17,V21) 
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]


### Merging Chains  start/4 into  External patterns of execution 
* [[47],[48]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 
* [[44]] --> 4 
* [[43]] --> 5 
* [[42]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:inc(V1,Out) -> [inc(V1',Out')] 
1
#### Cost of phase [19]:inc(V1,Out) -> [inc(V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of chains of inc(V1,Out):
* Chain [[19],20]: 1*it(19)+1
  Such that:it(19) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [20]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [21] 

 * loop 21:le(V1,V,Out) -> [le(V1',V',Out')] 
1
#### Cost of phase [21]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of phase [21]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of phase [21]:le(V1,V,Out) -> [le(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of chains of le(V1,V,Out):
* Chain [[21],24]: 1*it(21)+1
  Such that:it(21) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[21],23]: 1*it(21)+1
  Such that:it(21) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [24]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [23]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [25] 

 * loop 25:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[25],26]: 1*it(25)+1
  Such that:it(25) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [27]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [26]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [30] 

 * loop 30:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [30]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of loops [28] 

 * loop 28:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(5)+2
  Such that:s(5) =< V'

#### Cost of phase [28]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(28)+1*s(6)+0
  Such that:it(28) =< V1-V+1
it(28) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(28) =< aux(1)
s(6) =< aux(1)
it(28) =< aux(2)
s(6) =< aux(2)

#### Cost of phase [28]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(28)+1*s(6)+0
  Such that:it(28) =< V1-V+1
it(28) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(28) =< aux(1)
s(6) =< aux(1)
it(28) =< aux(2)
s(6) =< aux(2)

#### Cost of chains of quot(V1,V,Out):
* Chain [[30],31]: 2*it(30)+1
  Such that:it(30) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[30],29,31]: 2*it(30)+1*s(3)+3
  Such that:s(3) =< 1
it(30) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[28],31]: 2*it(28)+1*s(6)+1
  Such that:it(28) =< V1-V+1
aux(3) =< V1
it(28) =< aux(3)
s(6) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[28],29,31]: 2*it(28)+1*s(3)+1*s(6)+3
  Such that:it(28) =< V1-V+1
s(3) =< V
aux(4) =< V1
it(28) =< aux(4)
s(6) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [31]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [29,31]: 1*s(3)+3
  Such that:s(3) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of loops [33,35] 

 * loop 33:log2(V1,V,Out) -> [log2(V1',V',Out')] 
1*s(44)+3*s(47)+1*s(45)+9
  Such that:s(44) =< 1
s(45) =< 2
s(46) =< V1
s(47) =< s(46)

 * loop 35:log2(V1,V,Out) -> [log2(V1',V',Out')] 
2*s(57)+1*s(54)+3*s(58)+9
  Such that:s(54) =< 2
s(55) =< V1
s(56) =< 1
s(57) =< s(56)
s(58) =< s(55)

#### Cost of phase [33,35]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(33)+9*it(35)+3*s(59)+3*s(60)+2*s(61)+3*s(65)+0
  Such that:s(66) =< 2*V1
s(66) =< 2*V1-2*V1'
aux(15) =< V1
aux(16) =< V1-V1'
aux(17) =< 3*V1
aux(18) =< 3*V1-3*V1'
aux(11) =< aux(15)
it(33) =< aux(15)
it(35) =< aux(15)
aux(11) =< aux(16)
it(33) =< aux(16)
it(35) =< aux(16)
it(35) =< aux(17)
s(62) =< aux(17)
it(35) =< aux(18)
s(62) =< aux(18)
s(61) =< aux(11)*2
s(59) =< aux(11)
s(65) =< s(66)
s(60) =< s(62)

#### Cost of phase [33,35]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(33)+9*it(35)+3*s(59)+3*s(60)+2*s(61)+3*s(65)+0
  Such that:s(66) =< 2*V1
s(66) =< 2*V1-2*V1'
aux(15) =< V1
aux(16) =< V1-V1'
aux(17) =< 3*V1
aux(18) =< 3*V1-3*V1'
aux(11) =< aux(15)
it(33) =< aux(15)
it(35) =< aux(15)
aux(11) =< aux(16)
it(33) =< aux(16)
it(35) =< aux(16)
it(35) =< aux(17)
s(62) =< aux(17)
it(35) =< aux(18)
s(62) =< aux(18)
s(61) =< aux(11)*2
s(59) =< aux(11)
s(65) =< s(66)
s(60) =< s(62)

#### Cost of phase [33,35]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(33)+9*it(35)+3*s(59)+3*s(60)+2*s(61)+3*s(65)+0
  Such that:s(66) =< 2*V1
s(66) =< 2*V1-2*V1'
aux(15) =< V1
aux(16) =< V1-V1'
aux(17) =< 3*V1
aux(18) =< 3*V1-3*V1'
aux(11) =< aux(15)
it(33) =< aux(15)
it(35) =< aux(15)
aux(11) =< aux(16)
it(33) =< aux(16)
it(35) =< aux(16)
it(35) =< aux(17)
s(62) =< aux(17)
it(35) =< aux(18)
s(62) =< aux(18)
s(61) =< aux(11)*2
s(59) =< aux(11)
s(65) =< s(66)
s(60) =< s(62)

#### Cost of phase [33,35]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(33)+9*it(35)+3*s(59)+3*s(60)+2*s(61)+3*s(65)+0
  Such that:s(66) =< 2*V1
s(66) =< 2*V1-2*V1'
aux(15) =< V1
aux(16) =< V1-V1'
aux(17) =< 3*V1
aux(18) =< 3*V1-3*V1'
aux(11) =< aux(15)
it(33) =< aux(15)
it(35) =< aux(15)
aux(11) =< aux(16)
it(33) =< aux(16)
it(35) =< aux(16)
it(35) =< aux(17)
s(62) =< aux(17)
it(35) =< aux(18)
s(62) =< aux(18)
s(61) =< aux(11)*2
s(59) =< aux(11)
s(65) =< s(66)
s(60) =< s(62)

#### Cost of loops [32,34] 

 * loop 32:log2(V1,V,Out) -> [log2(V1',V',Out')] 
1*s(90)+1*s(92)+3*s(94)+1*s(91)+9
  Such that:s(90) =< 1
s(91) =< 2
s(92) =< V'
s(93) =< V1
s(94) =< s(93)

 * loop 34:log2(V1,V,Out) -> [log2(V1',V',Out')] 
2*s(107)+2*s(108)+1*s(103)+3*s(109)+9
  Such that:s(103) =< 2
s(104) =< V1
s(105) =< 1
s(106) =< V'
s(107) =< s(105)
s(108) =< s(106)
s(109) =< s(104)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of phase [32,34]:log2(V1,V,Out) -> [log2(V1',V',Out')] 
9*it(32)+9*it(34)+3*s(110)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+0
  Such that:s(119) =< 2*V1+4*V
s(119) =< 2*V1+4*V-2*V1'-4*V'
aux(39) =< V
aux(43) =< V1
aux(44) =< V1-V1'
aux(45) =< 3*V1
aux(46) =< 3*V1-3*V1'
aux(37) =< aux(43)
it(32) =< aux(43)
it(34) =< aux(43)
aux(37) =< aux(44)
it(32) =< aux(44)
it(34) =< aux(44)
it(34) =< aux(45)
s(114) =< aux(45)
it(34) =< aux(46)
s(114) =< aux(46)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< s(114)

#### Cost of chains of log2(V1,V,Out):
* Chain [[33,35],41]: 12*it(33)+9*it(35)+14*s(10)+3*s(60)+2*s(61)+3*s(65)+5
  Such that:aux(6) =< 1
s(66) =< 2*V1
aux(19) =< V1
aux(20) =< 3*V1
s(10) =< aux(6)
it(33) =< aux(19)
it(35) =< aux(19)
it(35) =< aux(20)
s(61) =< aux(19)*2
s(65) =< s(66)
s(60) =< aux(20)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [[33,35],39]: 12*it(33)+9*it(35)+3*s(60)+2*s(61)+3*s(65)+6*s(68)+5
  Such that:aux(21) =< 1
s(66) =< 2*V1
aux(23) =< V1
aux(24) =< 3*V1
s(68) =< aux(21)
it(33) =< aux(23)
it(35) =< aux(23)
it(35) =< aux(24)
s(61) =< aux(23)*2
s(65) =< s(66)
s(60) =< aux(24)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [[33,35],37,41]: 12*it(33)+9*it(35)+15*s(10)+3*s(60)+2*s(61)+3*s(65)+12
  Such that:aux(25) =< 1
s(66) =< 2*V1
aux(26) =< V1
aux(27) =< 3*V1
s(10) =< aux(25)
it(33) =< aux(26)
it(35) =< aux(26)
it(35) =< aux(27)
s(61) =< aux(26)*2
s(65) =< s(66)
s(60) =< aux(27)

  with precondition: [Out=0,V1>=3,V>=0] 

* Chain [[33,35],37,40]: 12*it(33)+9*it(35)+3*s(60)+2*s(61)+3*s(65)+3*s(79)+12
  Such that:aux(30) =< 1
s(66) =< 2*V1
aux(31) =< V1
aux(32) =< 3*V1
s(79) =< aux(30)
it(33) =< aux(31)
it(35) =< aux(31)
it(35) =< aux(32)
s(61) =< aux(31)*2
s(65) =< s(66)
s(60) =< aux(32)

  with precondition: [Out=1,V1>=3,V>=0] 

* Chain [[32,34],[33,35],41]: 18*it(32)+12*it(33)+9*it(35)+14*s(10)+6*s(60)+2*s(61)+3*s(65)+3*s(110)+1*s(111)+2*s(113)+2*s(116)+3*s(118)+5
  Such that:aux(6) =< 1
s(66) =< 6*V1
s(119) =< 6*V1+12*V
aux(39) =< V
aux(47) =< V1
aux(48) =< 2*V1+4*V
aux(49) =< 3*V1
aux(19) =< aux(47)
aux(19) =< aux(48)
s(66) =< aux(48)
aux(19) =< aux(49)
s(10) =< aux(6)
it(33) =< aux(19)
it(35) =< aux(19)
it(35) =< aux(49)
s(61) =< aux(19)*2
s(65) =< s(66)
s(60) =< aux(49)
aux(37) =< aux(47)
it(32) =< aux(47)
aux(37) =< aux(49)
it(32) =< aux(49)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(32)*aux(42)
s(116) =< s(120)
s(118) =< s(119)

  with precondition: [Out=0,V1>=3,V>=1] 

* Chain [[32,34],[33,35],39]: 18*it(32)+12*it(33)+9*it(35)+6*s(60)+2*s(61)+3*s(65)+6*s(68)+3*s(110)+1*s(111)+2*s(113)+2*s(116)+3*s(118)+5
  Such that:aux(21) =< 1
s(66) =< 6*V1
s(119) =< 6*V1+12*V
aux(39) =< V
aux(50) =< V1
aux(51) =< 2*V1+4*V
aux(52) =< 3*V1
aux(23) =< aux(50)
aux(23) =< aux(51)
s(66) =< aux(51)
aux(23) =< aux(52)
s(68) =< aux(21)
it(33) =< aux(23)
it(35) =< aux(23)
it(35) =< aux(52)
s(61) =< aux(23)*2
s(65) =< s(66)
s(60) =< aux(52)
aux(37) =< aux(50)
it(32) =< aux(50)
aux(37) =< aux(52)
it(32) =< aux(52)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(32)*aux(42)
s(116) =< s(120)
s(118) =< s(119)

  with precondition: [Out=0,V1>=3,V>=1] 

* Chain [[32,34],[33,35],37,41]: 18*it(32)+12*it(33)+9*it(35)+15*s(10)+6*s(60)+2*s(61)+3*s(65)+3*s(110)+1*s(111)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(25) =< 1
s(66) =< 6*V1
s(119) =< 6*V1+12*V
aux(39) =< V
aux(53) =< V1
aux(54) =< 2*V1+4*V
aux(55) =< 3*V1
aux(26) =< aux(53)
aux(26) =< aux(54)
s(66) =< aux(54)
aux(26) =< aux(55)
s(10) =< aux(25)
it(33) =< aux(26)
it(35) =< aux(26)
it(35) =< aux(55)
s(61) =< aux(26)*2
s(65) =< s(66)
s(60) =< aux(55)
aux(37) =< aux(53)
it(32) =< aux(53)
aux(37) =< aux(55)
it(32) =< aux(55)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(32)*aux(42)
s(116) =< s(120)
s(118) =< s(119)

  with precondition: [Out=0,V1>=5,V>=1] 

* Chain [[32,34],[33,35],37,40]: 18*it(32)+12*it(33)+9*it(35)+6*s(60)+2*s(61)+3*s(65)+3*s(79)+3*s(110)+1*s(111)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(30) =< 1
s(66) =< 6*V1
s(119) =< 6*V1+12*V
aux(39) =< V
aux(56) =< V1
aux(57) =< 2*V1+4*V
aux(58) =< 3*V1
aux(31) =< aux(56)
aux(31) =< aux(57)
s(66) =< aux(57)
aux(31) =< aux(58)
s(79) =< aux(30)
it(33) =< aux(31)
it(35) =< aux(31)
it(35) =< aux(58)
s(61) =< aux(31)*2
s(65) =< s(66)
s(60) =< aux(58)
aux(37) =< aux(56)
it(32) =< aux(56)
aux(37) =< aux(58)
it(32) =< aux(58)
aux(42) =< aux(39)
s(113) =< aux(37)*2
s(111) =< it(32)*aux(39)
s(110) =< aux(37)
s(120) =< it(32)*aux(42)
s(116) =< s(120)
s(118) =< s(119)

  with precondition: [Out=1,V1>=5,V>=1] 

* Chain [[32,34],41]: 12*it(32)+9*it(34)+14*s(10)+9*s(12)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+5
  Such that:aux(6) =< 1
aux(59) =< V1
aux(60) =< 2*V1+4*V
aux(61) =< 3*V1
aux(62) =< V
aux(7) =< aux(60)
aux(7) =< aux(62)
s(10) =< aux(6)
s(12) =< aux(7)
it(32) =< aux(59)
it(34) =< aux(59)
it(34) =< aux(61)
aux(42) =< aux(62)
s(113) =< aux(59)*2
s(111) =< it(32)*aux(62)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< aux(60)
s(112) =< aux(61)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[32,34],39]: 12*it(32)+9*it(34)+6*s(68)+3*s(70)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+5
  Such that:aux(21) =< 1
aux(63) =< V1
aux(64) =< 2*V1+4*V
aux(65) =< 3*V1
aux(66) =< V
aux(22) =< aux(64)
aux(22) =< aux(66)
s(68) =< aux(21)
s(70) =< aux(22)
it(32) =< aux(63)
it(34) =< aux(63)
it(34) =< aux(65)
aux(42) =< aux(66)
s(113) =< aux(63)*2
s(111) =< it(32)*aux(66)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< aux(64)
s(112) =< aux(65)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [[32,34],38]: 12*it(32)+9*it(34)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+4*s(118)+1*s(122)+6
  Such that:s(122) =< 1
aux(39) =< V
aux(67) =< V1
aux(68) =< 2*V1+4*V
aux(69) =< 3*V1
s(118) =< aux(68)
it(32) =< aux(67)
it(34) =< aux(67)
it(34) =< aux(69)
aux(42) =< aux(39)
s(113) =< aux(67)*2
s(111) =< it(32)*aux(39)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(112) =< aux(69)

  with precondition: [V1>=2,Out>=0,V>=Out+1] 

* Chain [[32,34],37,41]: 12*it(32)+9*it(34)+15*s(10)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(25) =< 1
s(119) =< 2*V1+4*V
aux(39) =< V
aux(70) =< V1
aux(71) =< 3*V1
s(10) =< aux(25)
it(32) =< aux(70)
it(34) =< aux(70)
it(34) =< aux(71)
aux(42) =< aux(39)
s(113) =< aux(70)*2
s(111) =< it(32)*aux(39)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< aux(71)

  with precondition: [Out=0,V1>=3,V>=1] 

* Chain [[32,34],37,40]: 12*it(32)+9*it(34)+3*s(79)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(30) =< 1
s(119) =< 2*V1+4*V
aux(39) =< V
aux(72) =< V1
aux(73) =< 3*V1
s(79) =< aux(30)
it(32) =< aux(72)
it(34) =< aux(72)
it(34) =< aux(73)
aux(42) =< aux(39)
s(113) =< aux(72)*2
s(111) =< it(32)*aux(39)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< s(119)
s(112) =< aux(73)

  with precondition: [Out=1,V1>=3,V>=1] 

* Chain [[32,34],36,41]: 12*it(32)+9*it(34)+15*s(10)+10*s(12)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(74) =< 1
aux(76) =< V1
aux(77) =< 2*V1+4*V
aux(78) =< 3*V1
aux(79) =< V
aux(75) =< aux(77)
aux(75) =< aux(79)
s(10) =< aux(74)
s(12) =< aux(75)
it(32) =< aux(76)
it(34) =< aux(76)
it(34) =< aux(78)
aux(42) =< aux(79)
s(113) =< aux(76)*2
s(111) =< it(32)*aux(79)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< aux(77)
s(112) =< aux(78)

  with precondition: [Out=0,V1>=3,V>=1] 

* Chain [[32,34],36,40]: 12*it(32)+9*it(34)+3*s(80)+3*s(81)+1*s(111)+3*s(112)+2*s(113)+2*s(116)+3*s(118)+12
  Such that:aux(80) =< 1
aux(82) =< V1
aux(83) =< 2*V1+4*V
aux(84) =< 3*V1
aux(85) =< V
aux(81) =< aux(83)
aux(81) =< aux(85)
s(81) =< aux(80)
s(80) =< aux(81)
it(32) =< aux(82)
it(34) =< aux(82)
it(34) =< aux(84)
aux(42) =< aux(85)
s(113) =< aux(82)*2
s(111) =< it(32)*aux(85)
s(120) =< it(34)*aux(42)
s(116) =< s(120)
s(118) =< aux(83)
s(112) =< aux(84)

  with precondition: [Out=1,V1>=3,V>=1] 

* Chain [41]: 14*s(10)+9*s(12)+5
  Such that:aux(6) =< 1
aux(7) =< V
s(10) =< aux(6)
s(12) =< aux(7)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [40]: 2*s(80)+2*s(81)+5
  Such that:aux(28) =< 1
aux(29) =< V
s(81) =< aux(28)
s(80) =< aux(29)

  with precondition: [V1=0,Out=1,V>=0] 

* Chain [39]: 6*s(68)+3*s(70)+5
  Such that:aux(21) =< 1
aux(22) =< V
s(68) =< aux(21)
s(70) =< aux(22)

  with precondition: [V1=1,Out=0,V>=0] 

* Chain [38]: 1*s(122)+1*s(123)+6
  Such that:s(122) =< 1
s(123) =< V

  with precondition: [V1=1,Out>=0,V>=Out+1] 

* Chain [37,41]: 15*s(10)+12
  Such that:aux(25) =< 1
s(10) =< aux(25)

  with precondition: [Out=0,V1>=2,V>=0] 

* Chain [37,40]: 3*s(79)+12
  Such that:aux(30) =< 1
s(79) =< aux(30)

  with precondition: [Out=1,V1>=2,V>=0] 

* Chain [36,41]: 15*s(10)+10*s(12)+12
  Such that:aux(74) =< 1
aux(75) =< V
s(10) =< aux(74)
s(12) =< aux(75)

  with precondition: [Out=0,V1>=2,V>=1] 

* Chain [36,40]: 3*s(80)+3*s(81)+12
  Such that:aux(80) =< 1
aux(81) =< V
s(81) =< aux(80)
s(80) =< aux(81)

  with precondition: [Out=1,V1>=2,V>=1] 


#### Cost of chains of start(V1,V,V17,V21):
* Chain [48]: 33*s(376)+256*s(378)+4*s(383)+381*s(392)+333*s(408)+42*s(410)+42*s(414)+111*s(415)+48*s(417)+36*s(418)+8*s(419)+12*s(420)+16*s(422)+24*s(424)+12*s(425)+25*s(475)+7*s(480)+22*s(482)+22*s(483)+48*s(486)+36*s(487)+8*s(488)+12*s(489)+4*s(492)+12*s(494)+13
  Such that:aux(103) =< 1
aux(104) =< V1
aux(105) =< V1-V+1
aux(106) =< 2*V1
aux(107) =< 2*V1+4*V
aux(108) =< 3*V1
aux(109) =< 6*V1
aux(110) =< 6*V1+12*V
aux(111) =< V
s(392) =< aux(103)
s(378) =< aux(104)
s(383) =< aux(105)
s(471) =< aux(109)
s(376) =< aux(111)
s(402) =< aux(109)
s(408) =< aux(104)
s(408) =< aux(108)
s(410) =< aux(104)*2
s(414) =< aux(106)
s(415) =< aux(108)
s(416) =< aux(104)
s(416) =< aux(106)
s(402) =< aux(106)
s(416) =< aux(108)
s(417) =< s(416)
s(418) =< s(416)
s(418) =< aux(108)
s(419) =< s(416)*2
s(420) =< s(402)
s(421) =< aux(104)
s(421) =< aux(108)
s(422) =< s(421)*2
s(424) =< s(421)
s(425) =< aux(109)
s(474) =< aux(107)
s(474) =< aux(111)
s(475) =< s(474)
s(478) =< aux(111)
s(480) =< s(378)*aux(111)
s(481) =< s(408)*s(478)
s(482) =< s(481)
s(483) =< aux(107)
s(485) =< aux(104)
s(485) =< aux(107)
s(471) =< aux(107)
s(485) =< aux(108)
s(486) =< s(485)
s(487) =< s(485)
s(487) =< aux(108)
s(488) =< s(485)*2
s(489) =< s(471)
s(492) =< s(408)*aux(111)
s(494) =< aux(110)
s(383) =< aux(104)

  with precondition: [V1>=0] 

* Chain [47]: 1612*s(544)+98*s(545)+22*s(558)+12*s(566)+9*s(577)+28*s(579)+22*s(592)+234*s(594)+28*s(596)+4*s(597)+14*s(599)+12*s(600)+78*s(601)+36*s(603)+27*s(604)+6*s(605)+9*s(606)+12*s(608)+3*s(609)+18*s(610)+9*s(611)+131*s(616)+25*s(631)+132*s(632)+171*s(633)+22*s(635)+7*s(636)+22*s(638)+22*s(639)+57*s(640)+48*s(642)+36*s(643)+8*s(644)+12*s(645)+8*s(647)+4*s(648)+12*s(649)+12*s(650)+25*s(725)+132*s(726)+171*s(727)+22*s(729)+7*s(730)+22*s(732)+22*s(733)+57*s(734)+48*s(736)+36*s(737)+8*s(738)+12*s(739)+8*s(741)+4*s(742)+12*s(743)+12*s(744)+12*s(745)+22*s(816)+12*s(824)+9*s(835)+22*s(850)+4*s(855)+14*s(857)+12*s(858)+36*s(861)+27*s(862)+6*s(863)+9*s(864)+3*s(867)+9*s(869)+33*s(874)+25*s(889)+132*s(890)+171*s(891)+22*s(893)+7*s(894)+22*s(896)+22*s(897)+57*s(898)+48*s(900)+36*s(901)+8*s(902)+12*s(903)+8*s(905)+4*s(906)+12*s(907)+12*s(908)+25*s(983)+132*s(984)+171*s(985)+22*s(987)+7*s(988)+22*s(990)+22*s(991)+57*s(992)+48*s(994)+36*s(995)+8*s(996)+12*s(997)+8*s(999)+4*s(1000)+12*s(1001)+12*s(1002)+12*s(1003)+17
  Such that:s(807) =< 4*V17
s(841) =< 4*V17+2
s(810) =< 12*V17
s(844) =< 12*V17+6
s(549) =< 4*V21
s(583) =< 4*V21+2
s(552) =< 12*V21
s(586) =< 12*V21+6
aux(132) =< 1
aux(133) =< 2
aux(134) =< 3
aux(135) =< 6
aux(136) =< V
aux(137) =< V+1
aux(138) =< V+4*V17
aux(139) =< V+4*V17+1
aux(140) =< 3*V
aux(141) =< 3*V+3
aux(142) =< 3*V+12*V17
aux(143) =< 3*V+12*V17+3
aux(144) =< V/2
aux(145) =< V/2+1/2
aux(146) =< 3/2*V
aux(147) =< 3/2*V+3/2
aux(148) =< V17
aux(149) =< V17+1
aux(150) =< V17+4*V21
aux(151) =< V17+4*V21+1
aux(152) =< 3*V17
aux(153) =< 3*V17+3
aux(154) =< 3*V17+12*V21
aux(155) =< 3*V17+12*V21+3
aux(156) =< V17/2
aux(157) =< V17/2+1/2
aux(158) =< 3/2*V17
aux(159) =< 3/2*V17+3/2
aux(160) =< V21
s(544) =< aux(132)
s(579) =< aux(133)
s(885) =< aux(140)
s(979) =< aux(141)
s(616) =< aux(148)
s(627) =< aux(152)
s(721) =< aux(153)
s(545) =< aux(160)
s(557) =< s(549)
s(557) =< aux(160)
s(558) =< s(557)
s(566) =< s(549)
s(577) =< s(552)
s(630) =< aux(150)
s(630) =< aux(160)
s(631) =< s(630)
s(632) =< aux(156)
s(633) =< aux(156)
s(633) =< aux(158)
s(595) =< aux(160)
s(635) =< aux(156)*2
s(636) =< s(632)*aux(160)
s(637) =< s(633)*s(595)
s(638) =< s(637)
s(639) =< aux(150)
s(640) =< aux(158)
s(641) =< aux(156)
s(641) =< aux(150)
s(627) =< aux(150)
s(641) =< aux(158)
s(642) =< s(641)
s(643) =< s(641)
s(643) =< aux(158)
s(644) =< s(641)*2
s(645) =< s(627)
s(646) =< aux(156)
s(646) =< aux(158)
s(647) =< s(646)*2
s(648) =< s(633)*aux(160)
s(649) =< s(646)
s(650) =< aux(154)
s(724) =< aux(151)
s(724) =< aux(160)
s(725) =< s(724)
s(726) =< aux(157)
s(727) =< aux(157)
s(727) =< aux(159)
s(729) =< aux(157)*2
s(730) =< s(726)*aux(160)
s(731) =< s(727)*s(595)
s(732) =< s(731)
s(733) =< aux(151)
s(734) =< aux(159)
s(735) =< aux(157)
s(735) =< aux(151)
s(721) =< aux(151)
s(735) =< aux(159)
s(736) =< s(735)
s(737) =< s(735)
s(737) =< aux(159)
s(738) =< s(735)*2
s(739) =< s(721)
s(740) =< aux(157)
s(740) =< aux(159)
s(741) =< s(740)*2
s(742) =< s(727)*aux(160)
s(743) =< s(740)
s(744) =< aux(155)
s(745) =< aux(149)
s(815) =< s(807)
s(815) =< aux(148)
s(816) =< s(815)
s(824) =< s(807)
s(835) =< s(810)
s(874) =< aux(136)
s(888) =< aux(138)
s(888) =< aux(148)
s(889) =< s(888)
s(890) =< aux(144)
s(891) =< aux(144)
s(891) =< aux(146)
s(853) =< aux(148)
s(893) =< aux(144)*2
s(894) =< s(890)*aux(148)
s(895) =< s(891)*s(853)
s(896) =< s(895)
s(897) =< aux(138)
s(898) =< aux(146)
s(899) =< aux(144)
s(899) =< aux(138)
s(885) =< aux(138)
s(899) =< aux(146)
s(900) =< s(899)
s(901) =< s(899)
s(901) =< aux(146)
s(902) =< s(899)*2
s(903) =< s(885)
s(904) =< aux(144)
s(904) =< aux(146)
s(905) =< s(904)*2
s(906) =< s(891)*aux(148)
s(907) =< s(904)
s(908) =< aux(142)
s(982) =< aux(139)
s(982) =< aux(148)
s(983) =< s(982)
s(984) =< aux(145)
s(985) =< aux(145)
s(985) =< aux(147)
s(987) =< aux(145)*2
s(988) =< s(984)*aux(148)
s(989) =< s(985)*s(853)
s(990) =< s(989)
s(991) =< aux(139)
s(992) =< aux(147)
s(993) =< aux(145)
s(993) =< aux(139)
s(979) =< aux(139)
s(993) =< aux(147)
s(994) =< s(993)
s(995) =< s(993)
s(995) =< aux(147)
s(996) =< s(993)*2
s(997) =< s(979)
s(998) =< aux(145)
s(998) =< aux(147)
s(999) =< s(998)*2
s(1000) =< s(985)*aux(148)
s(1001) =< s(998)
s(1002) =< aux(143)
s(1003) =< aux(137)
s(588) =< aux(135)
s(591) =< s(583)
s(591) =< aux(160)
s(592) =< s(591)
s(594) =< aux(132)
s(594) =< aux(134)
s(596) =< aux(132)*2
s(597) =< s(544)*aux(160)
s(598) =< s(594)*s(595)
s(599) =< s(598)
s(600) =< s(583)
s(601) =< aux(134)
s(602) =< aux(132)
s(602) =< s(583)
s(588) =< s(583)
s(602) =< aux(134)
s(603) =< s(602)
s(604) =< s(602)
s(604) =< aux(134)
s(605) =< s(602)*2
s(606) =< s(588)
s(607) =< aux(132)
s(607) =< aux(134)
s(608) =< s(607)*2
s(609) =< s(594)*aux(160)
s(610) =< s(607)
s(611) =< s(586)
s(846) =< aux(135)
s(849) =< s(841)
s(849) =< aux(148)
s(850) =< s(849)
s(855) =< s(544)*aux(148)
s(856) =< s(594)*s(853)
s(857) =< s(856)
s(858) =< s(841)
s(860) =< aux(132)
s(860) =< s(841)
s(846) =< s(841)
s(860) =< aux(134)
s(861) =< s(860)
s(862) =< s(860)
s(862) =< aux(134)
s(863) =< s(860)*2
s(864) =< s(846)
s(867) =< s(594)*aux(148)
s(869) =< s(844)

  with precondition: [V1=1,V>=0,V17>=0] 

* Chain [46]: 1*s(1058)+1*s(1059)+6
  Such that:s(1058) =< 1
s(1059) =< V

  with precondition: [V1=1,V>=1] 

* Chain [45]: 1
  with precondition: [V1=2,V>=0,V17>=0,V21>=0] 

* Chain [44]: 1
  with precondition: [V1=2,V>=0,V17>=1] 

* Chain [43]: 1
  with precondition: [V=0,V1>=0] 

* Chain [42]: 1*s(1060)+4*s(1062)+3
  Such that:s(1060) =< 1
s(1061) =< V1
s(1062) =< s(1061)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V17,V21): 
-------------------------------------
* Chain [48] with precondition: [V1>=0] 
    - Upper bound: 929*V1+394+nat(V)*33+nat(V)*33*V1+84*V1+333*V1+216*V1+nat(2*V1+4*V)*47+nat(6*V1+12*V)*12+nat(V1-V+1)*4 
    - Complexity: n^2 
* Chain [47] with precondition: [V1=1,V>=0,V17>=0] 
    - Upper bound: 33*V+152*V17+2509+ (V/2+1/2)* (33*V17)+V/2* (33*V17)+nat(V21)*119+ (V17/2+1/2)* (nat(V21)*33)+V17/2* (nat(V21)*33)+36*V+36*V17+136*V17+nat(4*V21)*34+108*V17+nat(12*V21)*9+171/2*V+171/2*V17+ (12*V+12)+ (47*V+188*V17)+ (12*V17+12)+nat(V17+4*V21)*47+ (36*V+36)+ (36*V+144*V17)+ (36*V17+36)+nat(3*V17+12*V21)*12+ (136*V17+68)+nat(4*V21+2)*34+ (108*V17+54)+nat(12*V21+6)*9+ (171/2*V+171/2)+ (171/2*V17+171/2)+ (47*V+188*V17+47)+nat(V17+4*V21+1)*47+ (36*V+144*V17+36)+nat(3*V17+12*V21+3)*12+ (475/2*V+475/2)+ (475/2*V17+475/2)+475/2*V+475/2*V17 
    - Complexity: n^2 
* Chain [46] with precondition: [V1=1,V>=1] 
    - Upper bound: V+7 
    - Complexity: n 
* Chain [45] with precondition: [V1=2,V>=0,V17>=0,V21>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [44] with precondition: [V1=2,V>=0,V17>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [42] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+4 
    - Complexity: n 

### Maximum cost of start(V1,V,V17,V21): max([4*V1+3,nat(V)*32+387+max([nat(V)*33*V1+929*V1+84*V1+333*V1+216*V1+nat(2*V1+4*V)*47+nat(6*V1+12*V)*12+nat(V1-V+1)*4,nat(V17)*152+2115+nat(V17)*33*nat(V/2+1/2)+nat(V17)*33*nat(V/2)+nat(V21)*119+nat(V21)*33*nat(V17/2+1/2)+nat(V21)*33*nat(V17/2)+nat(3*V)*12+nat(3*V17)*12+nat(4*V17)*34+nat(4*V21)*34+nat(12*V17)*9+nat(12*V21)*9+nat(3/2*V)*57+nat(3/2*V17)*57+nat(V+1)*12+nat(V+4*V17)*47+nat(V17+1)*12+nat(V17+4*V21)*47+nat(3*V+3)*12+nat(3*V+12*V17)*12+nat(3*V17+3)*12+nat(3*V17+12*V21)*12+nat(4*V17+2)*34+nat(4*V21+2)*34+nat(12*V17+6)*9+nat(12*V21+6)*9+nat(3/2*V+3/2)*57+nat(3/2*V17+3/2)*57+nat(V+4*V17+1)*47+nat(V17+4*V21+1)*47+nat(3*V+12*V17+3)*12+nat(3*V17+12*V21+3)*12+nat(V/2+1/2)*475+nat(V17/2+1/2)*475+nat(V/2)*475+nat(V17/2)*475])+ (nat(V)+6)])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 133 ms.
* Invariants computed in 291 ms.
   - Backward Invariants 166 ms.
   - Transitive Invariants 29 ms.
* Refinement performed in 708 ms.
* Termination proved in 44 ms.
* Upper bounds computed in 1572 ms.
   - Equation cost structures 1101 ms.
   - Phase cost structures 119 ms.
   - Chain cost structures 178 ms.
   - Solving cost expressions 56 ms.
* Total analysis performed in 2889 ms.

