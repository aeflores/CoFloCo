
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [any/2]
1. recursive  : [max/3]
2. recursive  : [min/3]
3. recursive  : [minus/3]
4. recursive  : [gcd/3]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into any/2
1. SCC is partially evaluated into max/3
2. SCC is partially evaluated into min/3
3. SCC is partially evaluated into minus/3
4. SCC is partially evaluated into gcd/3
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations any/2 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 


#### Refined cost equations any/2 
* CE 22: any(A,A) = 1
     [A>=0] 
* CE 23: any(V1,Out) = 1+ any(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 

### Cost equations --> "Loop" of any/2 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 

#### Loops of any/2 
* Loop 16: any(V1,Out)->  any(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 
* Loop 17: any(A,A) [A>=0] 

### Ranking functions of CR any(V1,Out) 
* RF of phase [16]: [V1]

#### Partial ranking functions of CR any(V1,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V1


### Resulting Chains:any(V1,Out) 
* [[16],17]
* [17]


### Merging Chains  any/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations max/3 
* CE 14 is refined into CE [24] 
* CE 11 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 13 is refined into CE [27] 


#### Refined cost equations max/3 
* CE 24: max(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 25: max(A,B,A) = 1
     [A>=0,B=0] 
* CE 26: max(A,B,B) = 1
     [B>=0,A=0] 
* CE 27: max(V1,V,Out) = 1+ max(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of max/3 
* CEs [27] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of max/3 
* Loop 18: max(V1,V,Out)->  max(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 19: max(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 20: max(A,B,A) [A>=0,B=0] 
* Loop 21: max(A,B,B) [B>=0,A=0] 

### Ranking functions of CR max(V1,V,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR max(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:max(V1,V,Out) 
* [[18],21]
* [[18],20]
* [[18],19]
* [21]
* [20]
* [19]


### Merging Chains  max/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 
* [[20,[18]]] --> 4 
* [[21,[18]]] --> 5 
* [[19,[18]]] --> 6 


### Specialization of cost equations min/3 
* CE 7 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 9 is refined into CE [31] 


#### Refined cost equations min/3 
* CE 28: min(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 29: min(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 30: min(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 31: min(V1,V,Out) = 1+ min(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of min/3 
* CEs [31] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [29,30] --> Loop 24 

#### Loops of min/3 
* Loop 22: min(V1,V,Out)->  min(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 23: min(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 24: min(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR min(V1,V,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR min(V1,V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:min(V1,V,Out) 
* [[22],24]
* [[22],23]
* [24]
* [23]


### Merging Chains  min/3 into  External patterns of execution 
* [[23],[24]] --> 1 
* [[23,[22]],[24,[22]]] --> 2 


### Specialization of cost equations minus/3 
* CE 17 is refined into CE [32] 
* CE 15 is refined into CE [33] 
* CE 16 is refined into CE [34,35] 


#### Refined cost equations minus/3 
* CE 32: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 33: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 34: minus(V1,V,Out) = 1+ any(W1,W1):1+ minus(X1,W1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,W1+1=V,X1+1=V1] 
* CE 35: minus(V1,V,Out) = 1+ any(W1,X1):2+ minus(Y1,X1,Z1)
     [2*W1>=X1,X1>=W1+1,Y1>=0,Z1+1=Out,W1+1=V,Y1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [35] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [33] --> Loop 28 

#### Loops of minus/3 
* Loop 25: minus(V1,V,Out)->  minus(V1',V',Out')
                  [2*V>=V'+2,V'>=V,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 26: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 27: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 28: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [25,26]: [V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1,26:1]:
    V1
  - RF of loop [26:1]:
    V depends on loops [25:1] 


### Resulting Chains:minus(V1,V,Out) 
* [[25,26],28]
* [[25,26],27]
* [28]
* [27]


### Merging Chains  minus/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[27,[25,26]],[28,[25,26]]] --> 3 


### Specialization of cost equations gcd/3 
* CE 19 is refined into CE [36] 
* CE 18 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70] 


#### Refined cost equations gcd/3 
* CE 36: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ min(Y1,X1,Z1):1+ minus(X1,A2,X1):1+ min(B2,X1,C2):1+ gcd(X1,D2,Out)
     [X1>=0,X1+1=V,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,W1=0,V1=1] 
* CE 38: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ min(Y1,X1,Z1):1+ minus(X1,A2,B2):2+ min(C2,X1,D2):1+ gcd(E2,F2,Out)
     [X1>=0,X1+1=V,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,W1=0,V1=1] 
* CE 39: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,W1):1+ min(W1,B2,C2):1+ gcd(W1,D2,Out)
     [W1>=0,W1+1=V1,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,V=1] 
* CE 40: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,B2):2+ min(W1,C2,D2):1+ gcd(E2,F2,Out)
     [W1>=0,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,V=1] 
* CE 41: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):1+ minus(A2,B2,C2):1+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 42: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):1+ minus(A2,B2,C2):1+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=D2,D2>=1,D2+1=F2,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 43: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):1+ minus(A2,B2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 44: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):1+ minus(A2,B2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=D2,D2>=1,D2+1=F2,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 45: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):2+ minus(A2,Z1,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [X1>=Z1,W1>=Z1,Z1>=1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0,A2=0,Y1=0] 
* CE 46: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ min(W1,X1,Z1):2+ minus(A2,Z1,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [X1>=C2,W1>=C2,X1>=Z1,W1>=Z1,C2>=1,Z1>=1,C2+1=E2,X1+1=V,W1+1=V1,D2=0,B2=0,A2=0,Y1=0] 
* CE 47: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):1+ minus(W1,Z1,W1):1+ min(W1,X1,A2):1+ gcd(W1,B2,Out)
     [W1>=X1,X1>=1,X1+1=V,W1+1=V1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 48: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):1+ minus(W1,Z1,W1):1+ min(W1,X1,A2):2+ gcd(W1,B2,Out)
     [X1>=A2,W1>=X1,A2>=1,A2+1=B2,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 49: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):1+ minus(W1,Z1,A2):2+ min(W1,X1,B2):1+ gcd(C2,D2,Out)
     [W1>=X1,X1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 50: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):1+ minus(W1,Z1,A2):2+ min(W1,X1,B2):2+ gcd(C2,D2,Out)
     [X1>=B2,W1>=X1,B2>=1,B2+1=D2,X1+1=V,W1+1=V1,C2=0,A2=0,Z1=0,Y1=0] 
* CE 51: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):2+ minus(W1,Y1,Z1):2+ min(W1,X1,A2):1+ gcd(B2,C2,Out)
     [W1>=X1,X1>=Y1,Y1>=1,X1+1=V,W1+1=V1,C2=1,B2=0,A2=0,Z1=0] 
* CE 52: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):2+ minus(W1,Y1,Z1):2+ min(W1,X1,A2):2+ gcd(B2,C2,Out)
     [X1>=A2,W1>=X1,X1>=Y1,A2>=1,Y1>=1,A2+1=C2,X1+1=V,W1+1=V1,B2=0,Z1=0] 
* CE 53: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):2+ minus(W1,Y1,Z1):3+ min(W1,X1,A2):1+ gcd(Z1,B2,Out)
     [W1>=X1,W1>=Z1,X1>=Y1,Z1>=1,Y1>=1,X1+1=V,W1+1=V1,B2=1,A2=0] 
* CE 54: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ min(W1,X1,Y1):2+ minus(W1,Y1,Z1):3+ min(W1,X1,A2):2+ gcd(Z1,B2,Out)
     [X1>=A2,W1>=X1,W1>=Z1,X1>=Y1,A2>=1,Z1>=1,Y1>=1,A2+1=B2,X1+1=V,W1+1=V1] 
* CE 55: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):1+ minus(X1,Z1,X1):1+ min(W1,X1,A2):1+ gcd(X1,B2,Out)
     [X1>=W1,W1>=1,X1+1=V,W1+1=V1,B2=1,A2=0,Z1=0,Y1=0] 
* CE 56: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):1+ minus(X1,Z1,X1):1+ min(W1,X1,A2):2+ gcd(X1,B2,Out)
     [W1>=A2,X1>=W1,A2>=1,A2+1=B2,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 57: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ min(W1,X1,B2):1+ gcd(C2,D2,Out)
     [X1>=W1,W1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0,Z1=0,Y1=0] 
* CE 58: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):1+ minus(X1,Z1,A2):2+ min(W1,X1,B2):2+ gcd(C2,D2,Out)
     [W1>=B2,X1>=W1,B2>=1,B2+1=D2,X1+1=V,W1+1=V1,C2=0,A2=0,Z1=0,Y1=0] 
* CE 59: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):2+ minus(X1,Y1,Z1):2+ min(W1,X1,A2):1+ gcd(B2,C2,Out)
     [X1>=W1,W1>=Y1,Y1>=1,X1+1=V,W1+1=V1,C2=1,B2=0,A2=0,Z1=0] 
* CE 60: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):2+ minus(X1,Y1,Z1):2+ min(W1,X1,A2):2+ gcd(B2,C2,Out)
     [W1>=A2,X1>=W1,W1>=Y1,A2>=1,Y1>=1,A2+1=C2,X1+1=V,W1+1=V1,B2=0,Z1=0] 
* CE 61: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):2+ minus(X1,Y1,Z1):3+ min(W1,X1,A2):1+ gcd(Z1,B2,Out)
     [X1>=W1,X1>=Z1,W1>=Y1,Z1>=1,Y1>=1,X1+1=V,W1+1=V1,B2=1,A2=0] 
* CE 62: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ min(W1,X1,Y1):2+ minus(X1,Y1,Z1):3+ min(W1,X1,A2):2+ gcd(Z1,B2,Out)
     [W1>=A2,X1>=W1,X1>=Z1,W1>=Y1,A2>=1,Z1>=1,Y1>=1,A2+1=B2,X1+1=V,W1+1=V1] 
* CE 63: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):1+ minus(Y1,A2,Y1):1+ min(W1,X1,B2):1+ gcd(Y1,C2,Out)
     [X1>=Y1,W1>=Y1,Y1>=1,X1+1=V,W1+1=V1,C2=1,B2=0,A2=0,Z1=0] 
* CE 64: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):1+ minus(Y1,A2,Y1):1+ min(W1,X1,B2):2+ gcd(Y1,C2,Out)
     [X1>=B2,W1>=B2,X1>=Y1,W1>=Y1,B2>=1,Y1>=1,B2+1=C2,X1+1=V,W1+1=V1,A2=0,Z1=0] 
* CE 65: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):1+ minus(Y1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [X1>=Y1,W1>=Y1,Y1>=1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0,A2=0,Z1=0] 
* CE 66: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):1+ minus(Y1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [X1>=C2,W1>=C2,X1>=Y1,W1>=Y1,C2>=1,Y1>=1,C2+1=E2,X1+1=V,W1+1=V1,D2=0,B2=0,A2=0,Z1=0] 
* CE 67: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):2+ minus(Y1,Z1,A2):2+ min(W1,X1,B2):1+ gcd(C2,D2,Out)
     [X1>=Z1,W1>=Z1,X1>=Y1,W1>=Y1,Z1>=1,Y1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 68: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):2+ minus(Y1,Z1,A2):2+ min(W1,X1,B2):2+ gcd(C2,D2,Out)
     [X1>=B2,W1>=B2,X1>=Z1,W1>=Z1,X1>=Y1,W1>=Y1,B2>=1,Z1>=1,Y1>=1,B2+1=D2,X1+1=V,W1+1=V1,C2=0,A2=0] 
* CE 69: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):2+ minus(Y1,Z1,A2):3+ min(W1,X1,B2):1+ gcd(A2,C2,Out)
     [Y1>=A2,X1>=Z1,W1>=Z1,X1>=Y1,W1>=Y1,A2>=1,Z1>=1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 70: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ min(W1,X1,Z1):2+ minus(Y1,Z1,A2):3+ min(W1,X1,B2):2+ gcd(A2,C2,Out)
     [X1>=B2,W1>=B2,Y1>=A2,X1>=Z1,W1>=Z1,X1>=Y1,W1>=Y1,B2>=1,A2>=1,Z1>=1,B2+1=C2,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [64,70] --> Loop 29 
* CEs [56,62] --> Loop 30 
* CEs [48,54] --> Loop 31 
* CEs [63,69] --> Loop 32 
* CEs [55,61] --> Loop 33 
* CEs [47,53] --> Loop 34 
* CEs [50,52] --> Loop 35 
* CEs [42,44,46,58,60,66,68] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [37] --> Loop 39 
* CEs [38,41,43,45,49,51,57,59,65,67] --> Loop 40 
* CEs [36] --> Loop 41 

#### Loops of gcd/3 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V',V>=V1'+1,V1>=V1'+1,V'>=2,V1'>=1] 
* Loop 30: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V',V>=V1'+1,V>=V1,V'>=2,V1'>=1] 
* Loop 31: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V1'+1,V1>=V,V'>=2,V1'>=1] 
* Loop 32: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V1'+1,V1>=V1'+1,V1'>=1,V'=1] 
* Loop 33: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V1'+1,V>=V1,V1'>=1,V1>=2,V'=1] 
* Loop 34: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V1'+1,V1>=V,V1'>=1,V>=2,V'=1] 
* Loop 35: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V,V'>=2,V1'=0] 
* Loop 36: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V',V'>=2,V1'=0] 
* Loop 37: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 38: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 39: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=1,V=V1'+1,V'=1,V1=1] 
* Loop 40: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=1,V1>=1,V'=1,V1'=0] 
* Loop 41: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [29,30,31]: [V1+V-3]
* RF of phase [37,39]: [V1+V-1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [29,30,31]:
  - RF of loop [29:1,30:1]:
    V1+V-3
  - RF of loop [29:1,31:1]:
    V1-1 depends on loops [30:1] 
* Partial RF of phase [37,39]:
  - RF of loop [37:1]:
    V1 depends on loops [39:1] 
  - RF of loop [39:1]:
    V1+V-1


### Resulting Chains:gcd(V1,V,Out) 
* [[37,39],41]
* [[37,39],40,41]
* [[37,39],38,41]
* [[29,30,31],[37,39],41]
* [[29,30,31],[37,39],40,41]
* [[29,30,31],[37,39],38,41]
* [[29,30,31],41]
* [[29,30,31],40,41]
* [[29,30,31],36,41]
* [[29,30,31],35,41]
* [[29,30,31],34,[37,39],41]
* [[29,30,31],34,[37,39],40,41]
* [[29,30,31],34,[37,39],38,41]
* [[29,30,31],34,41]
* [[29,30,31],34,40,41]
* [[29,30,31],34,38,41]
* [[29,30,31],33,[37,39],41]
* [[29,30,31],33,[37,39],40,41]
* [[29,30,31],33,[37,39],38,41]
* [[29,30,31],33,41]
* [[29,30,31],33,40,41]
* [[29,30,31],33,38,41]
* [[29,30,31],32,[37,39],41]
* [[29,30,31],32,[37,39],40,41]
* [[29,30,31],32,[37,39],38,41]
* [[29,30,31],32,41]
* [[29,30,31],32,40,41]
* [[29,30,31],32,38,41]
* [41]
* [40,41]
* [38,41]
* [36,41]
* [35,41]
* [34,[37,39],41]
* [34,[37,39],40,41]
* [34,[37,39],38,41]
* [34,41]
* [34,40,41]
* [34,38,41]
* [33,[37,39],41]
* [33,[37,39],40,41]
* [33,[37,39],38,41]
* [33,41]
* [33,40,41]
* [33,38,41]
* [32,[37,39],41]
* [32,[37,39],40,41]
* [32,[37,39],38,41]
* [32,41]
* [32,40,41]
* [32,38,41]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[41,38,32],[41,40,32],[41,32],[41,38,[37,39],32],[41,40,[37,39],32],[41,[37,39],32],[41,38,33],[41,40,33],[41,33],[41,38,[37,39],33],[41,40,[37,39],33],[41,[37,39],33],[41,38,34],[41,40,34],[41,34],[41,38,[37,39],34],[41,40,[37,39],34],[41,[37,39],34],[41,35],[41,36],[41,38],[41,40],[41],[41,38,32,[29,30,31]],[41,40,32,[29,30,31]],[41,32,[29,30,31]],[41,38,[37,39],32,[29,30,31]],[41,40,[37,39],32,[29,30,31]],[41,[37,39],32,[29,30,31]],[41,38,33,[29,30,31]],[41,40,33,[29,30,31]],[41,33,[29,30,31]],[41,38,[37,39],33,[29,30,31]],[41,40,[37,39],33,[29,30,31]],[41,[37,39],33,[29,30,31]],[41,38,34,[29,30,31]],[41,40,34,[29,30,31]],[41,34,[29,30,31]],[41,38,[37,39],34,[29,30,31]],[41,40,[37,39],34,[29,30,31]],[41,[37,39],34,[29,30,31]],[41,35,[29,30,31]],[41,36,[29,30,31]],[41,40,[29,30,31]],[41,[29,30,31]],[41,38,[37,39],[29,30,31]],[41,40,[37,39],[29,30,31]],[41,[37,39],[29,30,31]],[41,38,[37,39]],[41,40,[37,39]],[41,[37,39]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [71,72] 
* CE 3 is refined into CE [73,74,75,76,77,78] 
* CE 4 is refined into CE [79,80,81] 
* CE 5 is refined into CE [82] 
* CE 6 is refined into CE [83,84] 


#### Refined cost equations start/2 
* CE 71: start(V1,V) = 0+ min(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 72: start(V1,V) = 0+ min(V1,V,W1):2
     [V>=W1,V1>=W1,W1>=1] 
* CE 73: start(V1,V) = 0+ max(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 74: start(V1,V) = 0+ max(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 75: start(V1,V) = 0+ max(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 76: start(V1,V) = 0+ max(V1,V,V1):4
     [V1>=V,V>=1] 
* CE 77: start(V1,V) = 0+ max(V1,V,V):5
     [V>=V1,V1>=1] 
* CE 78: start(V1,V) = 0+ max(V1,V,W1):6
     [V>=W1,V1>=W1,W1>=1] 
* CE 79: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 80: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 81: start(V1,V) = 0+ minus(V1,V,W1):3
     [V1>=W1,W1>=1,V>=1] 
* CE 82: start(V1,V) = 0+ gcd(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 83: start(V1,V) = 0+ any(V1,V1):1
     [V1>=0] 
* CE 84: start(V1,V) = 0+ any(V1,W1):2
     [2*V1>=W1,W1>=V1+1] 

### Cost equations --> "Loop" of start/2 
* CEs [74,79] --> Loop 42 
* CEs [71,72,73,75,76,77,78,80,81,82,83,84] --> Loop 43 

#### Loops of start/2 
* Loop 42: start(V1,V) [V1>=0,V=0] 
* Loop 43: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [43]
* [42]


### Merging Chains  start/2 into  External patterns of execution 
* [[42],[43]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:any(V1,Out) -> [any(V1',Out')] 
1
#### Cost of phase [16]:any(V1,Out) -> [any(V1',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'

#### Cost of chains of any(V1,Out):
* Chain [[16],17]: 1*it(16)+1
  Such that:it(16) =< -V1+Out

  with precondition: [Out>=V1+1,2*V1>=Out] 

* Chain [17]: 1
  with precondition: [V1=Out,V1>=0] 


#### Cost of loops [18] 

 * loop 18:max(V1,V,Out) -> [max(V1',V',Out')] 
1
#### Cost of phase [18]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of chains of max(V1,V,Out):
* Chain [[18],21]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [V=Out,V1>=1,V>=V1] 

* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [V1=Out,V>=1,V1>=V] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [21]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [20]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [19]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [22] 

 * loop 22:min(V1,V,Out) -> [min(V1',V',Out')] 
1
#### Cost of phase [22]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of chains of min(V1,V,Out):
* Chain [[22],24]: 1*it(22)+1
  Such that:it(22) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [[22],23]: 1*it(22)+1
  Such that:it(22) =< Out

  with precondition: [V=Out,V>=1,V1>=V] 

* Chain [24]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [23]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [25,26] 

 * loop 25:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< -V+V'+1

 * loop 26:minus(V1,V,Out) -> [minus(V1',V',Out')] 
2
#### Cost of phase [25,26]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
4*it(25)+1*s(5)+0
  Such that:aux(9) =< V1
aux(10) =< V1-V1'
it(25) =< aux(9)
it(25) =< aux(10)

#### Cost of phase [25,26]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
4*it(25)+1*s(5)+0
  Such that:aux(9) =< V1
aux(10) =< V1-V1'
it(25) =< aux(9)
it(25) =< aux(10)

#### Cost of chains of minus(V1,V,Out):
* Chain [[25,26],28]: 4*it(25)+1*s(5)+1
  Such that:aux(12) =< Out
it(25) =< aux(12)

  with precondition: [V1=Out,V>=1,V1>=V] 

* Chain [[25,26],27]: 4*it(25)+1*s(5)+0
  Such that:aux(9) =< V1
aux(10) =< Out
it(25) =< aux(9)
it(25) =< aux(10)

  with precondition: [V>=1,Out>=1,V1>=Out] 

* Chain [28]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [27]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [37,39] 

 * loop 37:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5
 * loop 39:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5
#### Cost of phase [37,39]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(37)+5*it(39)+0
  Such that:aux(15) =< V1
aux(17) =< V1-V1'
aux(19) =< V1+V
aux(20) =< V1+V-V1'-V'
aux(21) =< V
aux(22) =< V-V'
it(37) =< aux(19)
it(39) =< aux(19)
it(37) =< aux(20)
it(39) =< aux(20)
aux(14) =< aux(21)
aux(14) =< aux(22)
it(37) =< aux(14)+aux(15)
it(37) =< aux(14)+aux(17)

#### Cost of phase [37,39]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(37)+5*it(39)+0
  Such that:aux(15) =< V1
aux(17) =< V1-V1'
aux(19) =< V1+V
aux(20) =< V1+V-V1'-V'
aux(21) =< V
aux(22) =< V-V'
it(37) =< aux(19)
it(39) =< aux(19)
it(37) =< aux(20)
it(39) =< aux(20)
aux(14) =< aux(21)
aux(14) =< aux(22)
it(37) =< aux(14)+aux(15)
it(37) =< aux(14)+aux(17)

#### Cost of phase [37,39]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(37)+5*it(39)+0
  Such that:aux(15) =< V1
aux(17) =< V1-V1'
aux(19) =< V1+V
aux(20) =< V1+V-V1'-V'
aux(21) =< V
aux(22) =< V-V'
it(37) =< aux(19)
it(39) =< aux(19)
it(37) =< aux(20)
it(39) =< aux(20)
aux(14) =< aux(21)
aux(14) =< aux(22)
it(37) =< aux(14)+aux(15)
it(37) =< aux(14)+aux(17)

#### Cost of loops [29,30,31] 

 * loop 29:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*s(44)+4*s(46)+3*s(45)+4*s(47)+2*s(48)+4
  Such that:s(40) =< V1
s(41) =< V
s(42) =< V1'
s(43) =< V'
s(44) =< s(42)
s(45) =< s(41)
s(46) =< s(43)
s(47) =< s(40)
s(47) =< s(42)

 * loop 30:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*s(66)+4*s(67)+4*s(68)+4*s(69)+2*s(70)+5
  Such that:s(62) =< V
s(63) =< V1'
s(64) =< V1
s(65) =< V'
s(66) =< s(64)
s(67) =< s(65)
s(68) =< s(62)
s(68) =< s(63)
s(69) =< s(63)

 * loop 31:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*s(88)+4*s(89)+4*s(90)+4*s(91)+2*s(92)+5
  Such that:s(84) =< V1
s(85) =< V1'
s(86) =< V
s(87) =< V'
s(88) =< s(86)
s(89) =< s(87)
s(90) =< s(84)
s(90) =< s(85)
s(91) =< s(85)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of phase [29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(64) =< V1
aux(65) =< V1+V
aux(66) =< V1+V-V1'-V'
aux(67) =< V1-V1'
aux(68) =< V
aux(69) =< V-V'
it(29) =< aux(65)
it(30) =< aux(65)
it(29) =< aux(66)
it(30) =< aux(66)
aux(45) =< aux(68)
aux(45) =< aux(69)
aux(54) =< aux(68)
aux(51) =< aux(65)-1
aux(52) =< aux(65)
aux(55) =< aux(68)-1
it(29) =< aux(45)+aux(64)
it(29) =< aux(45)+aux(67)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(68)
s(99) =< it(29)*aux(65)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[37,39],41]: 5*it(37)+5*it(39)+0
  Such that:aux(23) =< V1
aux(24) =< V1+V
aux(25) =< V
it(37) =< aux(24)
it(39) =< aux(24)
it(37) =< aux(25)+aux(23)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[37,39],40,41]: 5*it(37)+10*it(39)+9*s(14)+4
  Such that:aux(29) =< 1
aux(30) =< V1
aux(31) =< V1+V
aux(32) =< V
it(39) =< aux(31)
s(14) =< aux(29)
it(37) =< aux(31)
it(37) =< aux(32)+aux(30)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[37,39],38,41]: 5*it(37)+5*it(39)+4
  Such that:aux(33) =< V1
aux(34) =< V1+V
aux(35) =< V
it(37) =< aux(34)
it(39) =< aux(34)
it(37) =< aux(35)+aux(33)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[29,30,31],[37,39],41]: 9*it(29)+10*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(70) =< V1
aux(71) =< V1+V
aux(72) =< V
aux(25) =< aux(71)
aux(25) =< aux(72)
it(37) =< aux(71)
it(30) =< aux(71)
it(37) =< aux(25)+aux(71)
it(29) =< aux(71)
aux(54) =< aux(72)
aux(51) =< aux(71)-1
aux(52) =< aux(71)
aux(55) =< aux(72)-1
it(29) =< aux(72)+aux(70)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(72)
s(99) =< it(29)*aux(71)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[29,30,31],[37,39],40,41]: 9*it(29)+15*it(30)+5*it(37)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4
  Such that:aux(29) =< 1
aux(73) =< V1
aux(74) =< V1+V
aux(75) =< V
aux(32) =< aux(74)
aux(32) =< aux(75)
it(30) =< aux(74)
s(14) =< aux(29)
it(37) =< aux(74)
it(37) =< aux(32)+aux(74)
it(29) =< aux(74)
aux(54) =< aux(75)
aux(51) =< aux(74)-1
aux(52) =< aux(74)
aux(55) =< aux(75)-1
it(29) =< aux(75)+aux(73)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(75)
s(99) =< it(29)*aux(74)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[29,30,31],[37,39],38,41]: 9*it(29)+10*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4
  Such that:aux(76) =< V1
aux(77) =< V1+V
aux(78) =< V
aux(35) =< aux(77)
aux(35) =< aux(78)
it(37) =< aux(77)
it(30) =< aux(77)
it(37) =< aux(35)+aux(77)
it(29) =< aux(77)
aux(54) =< aux(78)
aux(51) =< aux(77)-1
aux(52) =< aux(77)
aux(55) =< aux(78)-1
it(29) =< aux(78)+aux(76)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(78)
s(99) =< it(29)*aux(77)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[29,30,31],41]: 9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+0
  Such that:aux(79) =< V1
aux(80) =< V1+V
aux(81) =< V
it(29) =< aux(80)
it(30) =< aux(80)
aux(54) =< aux(81)
aux(51) =< aux(80)-1
aux(52) =< aux(80)
aux(55) =< aux(81)-1
it(29) =< aux(81)+aux(79)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(81)
s(99) =< it(29)*aux(80)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[29,30,31],40,41]: 9*it(29)+10*it(30)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4
  Such that:aux(82) =< V1
aux(83) =< V1+V
aux(84) =< V
aux(29) =< aux(83)
aux(29) =< aux(84)
it(30) =< aux(83)
s(14) =< aux(29)
it(29) =< aux(83)
aux(54) =< aux(84)
aux(51) =< aux(83)-1
aux(52) =< aux(83)
aux(55) =< aux(84)-1
it(29) =< aux(84)+aux(82)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(84)
s(99) =< it(29)*aux(83)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[29,30,31],36,41]: 9*it(29)+26*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+3*s(139)+4
  Such that:aux(90) =< V1
aux(91) =< V1+V
aux(92) =< V
aux(86) =< aux(91)
aux(86) =< aux(92)
it(30) =< aux(91)
s(139) =< aux(86)
it(29) =< aux(91)
aux(54) =< aux(92)
aux(51) =< aux(91)-1
aux(52) =< aux(91)
aux(55) =< aux(92)-1
it(29) =< aux(92)+aux(90)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(92)
s(99) =< it(29)*aux(91)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],35,41]: 9*it(29)+5*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+6*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+8*s(144)+4
  Such that:aux(97) =< V1
aux(98) =< V1+V
aux(99) =< V
s(144) =< aux(99)
it(29) =< aux(98)
it(30) =< aux(98)
aux(54) =< aux(99)
aux(51) =< aux(98)-1
aux(52) =< aux(98)
aux(55) =< aux(99)-1
it(29) =< aux(99)+aux(97)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(99)
s(99) =< it(29)*aux(98)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],34,[37,39],41]: 9*it(29)+18*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+5
  Such that:aux(25) =< 1
aux(103) =< V1
aux(104) =< V1+V
aux(105) =< V
aux(101) =< aux(104)
aux(101) =< aux(105)
it(37) =< aux(104)
it(30) =< aux(104)
it(37) =< aux(25)+aux(104)
s(152) =< aux(101)
it(29) =< aux(104)
aux(54) =< aux(105)
aux(51) =< aux(104)-1
aux(52) =< aux(104)
aux(55) =< aux(105)-1
it(29) =< aux(105)+aux(103)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(105)
s(99) =< it(29)*aux(104)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],34,[37,39],40,41]: 9*it(29)+23*it(30)+5*it(37)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+9
  Such that:aux(106) =< 1
aux(108) =< V1
aux(109) =< V1+V
aux(110) =< V
aux(101) =< aux(109)
aux(101) =< aux(110)
it(30) =< aux(109)
s(14) =< aux(106)
it(37) =< aux(109)
it(37) =< aux(106)+aux(109)
s(152) =< aux(101)
it(29) =< aux(109)
aux(54) =< aux(110)
aux(51) =< aux(109)-1
aux(52) =< aux(109)
aux(55) =< aux(110)-1
it(29) =< aux(110)+aux(108)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(110)
s(99) =< it(29)*aux(109)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[29,30,31],34,[37,39],38,41]: 9*it(29)+18*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+9
  Such that:aux(35) =< 1
aux(112) =< V1
aux(113) =< V1+V
aux(114) =< V
aux(101) =< aux(113)
aux(101) =< aux(114)
it(37) =< aux(113)
it(30) =< aux(113)
it(37) =< aux(35)+aux(113)
s(152) =< aux(101)
it(29) =< aux(113)
aux(54) =< aux(114)
aux(51) =< aux(113)-1
aux(52) =< aux(113)
aux(55) =< aux(114)-1
it(29) =< aux(114)+aux(112)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(114)
s(99) =< it(29)*aux(113)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[29,30,31],34,41]: 9*it(29)+13*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+5
  Such that:aux(116) =< V1
aux(117) =< V1+V
aux(118) =< V
aux(101) =< aux(117)
aux(101) =< aux(118)
s(152) =< aux(101)
it(30) =< aux(117)
it(29) =< aux(117)
aux(54) =< aux(118)
aux(51) =< aux(117)-1
aux(52) =< aux(117)
aux(55) =< aux(118)-1
it(29) =< aux(118)+aux(116)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(118)
s(99) =< it(29)*aux(117)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],34,40,41]: 9*it(29)+18*it(30)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+9
  Such that:aux(29) =< 1
aux(120) =< V1
aux(121) =< V1+V
aux(122) =< V
aux(101) =< aux(121)
aux(101) =< aux(122)
it(30) =< aux(121)
s(14) =< aux(29)
s(152) =< aux(101)
it(29) =< aux(121)
aux(54) =< aux(122)
aux(51) =< aux(121)-1
aux(52) =< aux(121)
aux(55) =< aux(122)-1
it(29) =< aux(122)+aux(120)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(122)
s(99) =< it(29)*aux(121)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],34,38,41]: 9*it(29)+13*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(152)+9
  Such that:aux(124) =< V1
aux(125) =< V1+V
aux(126) =< V
aux(101) =< aux(125)
aux(101) =< aux(126)
s(152) =< aux(101)
it(30) =< aux(125)
it(29) =< aux(125)
aux(54) =< aux(126)
aux(51) =< aux(125)-1
aux(52) =< aux(125)
aux(55) =< aux(126)-1
it(29) =< aux(126)+aux(124)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(126)
s(99) =< it(29)*aux(125)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],33,[37,39],41]: 9*it(29)+18*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+5
  Such that:aux(25) =< 1
aux(130) =< V1
aux(131) =< V1+V
aux(132) =< V
aux(128) =< aux(130)
aux(128) =< aux(131)
it(37) =< aux(131)
it(30) =< aux(131)
it(37) =< aux(25)+aux(131)
s(161) =< aux(128)
it(29) =< aux(131)
aux(54) =< aux(132)
aux(51) =< aux(131)-1
aux(52) =< aux(131)
aux(55) =< aux(132)-1
it(29) =< aux(132)+aux(130)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(132)
s(99) =< it(29)*aux(131)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],33,[37,39],40,41]: 9*it(29)+23*it(30)+5*it(37)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+9
  Such that:aux(133) =< 1
aux(135) =< V1
aux(136) =< V1+V
aux(137) =< V
aux(128) =< aux(135)
aux(128) =< aux(136)
it(30) =< aux(136)
s(14) =< aux(133)
it(37) =< aux(136)
it(37) =< aux(133)+aux(136)
s(161) =< aux(128)
it(29) =< aux(136)
aux(54) =< aux(137)
aux(51) =< aux(136)-1
aux(52) =< aux(136)
aux(55) =< aux(137)-1
it(29) =< aux(137)+aux(135)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(137)
s(99) =< it(29)*aux(136)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [[29,30,31],33,[37,39],38,41]: 9*it(29)+18*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+9
  Such that:aux(35) =< 1
aux(139) =< V1
aux(140) =< V1+V
aux(141) =< V
aux(128) =< aux(139)
aux(128) =< aux(140)
it(37) =< aux(140)
it(30) =< aux(140)
it(37) =< aux(35)+aux(140)
s(161) =< aux(128)
it(29) =< aux(140)
aux(54) =< aux(141)
aux(51) =< aux(140)-1
aux(52) =< aux(140)
aux(55) =< aux(141)-1
it(29) =< aux(141)+aux(139)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(141)
s(99) =< it(29)*aux(140)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [[29,30,31],33,41]: 9*it(29)+13*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+5
  Such that:aux(143) =< V1
aux(144) =< V1+V
aux(145) =< V
aux(128) =< aux(143)
aux(128) =< aux(144)
s(161) =< aux(128)
it(30) =< aux(144)
it(29) =< aux(144)
aux(54) =< aux(145)
aux(51) =< aux(144)-1
aux(52) =< aux(144)
aux(55) =< aux(145)-1
it(29) =< aux(145)+aux(143)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(145)
s(99) =< it(29)*aux(144)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],33,40,41]: 9*it(29)+18*it(30)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+9
  Such that:aux(29) =< 1
aux(147) =< V1
aux(148) =< V1+V
aux(149) =< V
aux(128) =< aux(147)
aux(128) =< aux(148)
it(30) =< aux(148)
s(14) =< aux(29)
s(161) =< aux(128)
it(29) =< aux(148)
aux(54) =< aux(149)
aux(51) =< aux(148)-1
aux(52) =< aux(148)
aux(55) =< aux(149)-1
it(29) =< aux(149)+aux(147)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(149)
s(99) =< it(29)*aux(148)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],33,38,41]: 9*it(29)+13*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4*s(161)+9
  Such that:aux(151) =< V1
aux(152) =< V1+V
aux(153) =< V
aux(128) =< aux(151)
aux(128) =< aux(152)
s(161) =< aux(128)
it(30) =< aux(152)
it(29) =< aux(152)
aux(54) =< aux(153)
aux(51) =< aux(152)-1
aux(52) =< aux(152)
aux(55) =< aux(153)-1
it(29) =< aux(153)+aux(151)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(153)
s(99) =< it(29)*aux(152)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],32,[37,39],41]: 9*it(29)+22*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4
  Such that:aux(25) =< 1
aux(157) =< V1
aux(158) =< V1+V
aux(159) =< V
it(37) =< aux(158)
it(30) =< aux(158)
it(37) =< aux(25)+aux(158)
it(29) =< aux(158)
aux(54) =< aux(159)
aux(51) =< aux(158)-1
aux(52) =< aux(158)
aux(55) =< aux(159)-1
it(29) =< aux(159)+aux(157)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(159)
s(99) =< it(29)*aux(158)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],32,[37,39],40,41]: 9*it(29)+27*it(30)+5*it(37)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+8
  Such that:aux(160) =< 1
aux(162) =< V1
aux(163) =< V1+V
aux(164) =< V
it(30) =< aux(163)
s(14) =< aux(160)
it(37) =< aux(163)
it(37) =< aux(160)+aux(163)
it(29) =< aux(163)
aux(54) =< aux(164)
aux(51) =< aux(163)-1
aux(52) =< aux(163)
aux(55) =< aux(164)-1
it(29) =< aux(164)+aux(162)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(164)
s(99) =< it(29)*aux(163)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[29,30,31],32,[37,39],38,41]: 9*it(29)+22*it(30)+5*it(37)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+8
  Such that:aux(35) =< 1
aux(166) =< V1
aux(167) =< V1+V
aux(168) =< V
it(37) =< aux(167)
it(30) =< aux(167)
it(37) =< aux(35)+aux(167)
it(29) =< aux(167)
aux(54) =< aux(168)
aux(51) =< aux(167)-1
aux(52) =< aux(167)
aux(55) =< aux(168)-1
it(29) =< aux(168)+aux(166)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(168)
s(99) =< it(29)*aux(167)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[29,30,31],32,41]: 9*it(29)+17*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+4
  Such that:aux(170) =< V1
aux(171) =< V1+V
aux(172) =< V
it(30) =< aux(171)
it(29) =< aux(171)
aux(54) =< aux(172)
aux(51) =< aux(171)-1
aux(52) =< aux(171)
aux(55) =< aux(172)-1
it(29) =< aux(172)+aux(170)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(172)
s(99) =< it(29)*aux(171)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],32,40,41]: 9*it(29)+22*it(30)+9*s(14)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+8
  Such that:aux(29) =< 1
aux(174) =< V1
aux(175) =< V1+V
aux(176) =< V
it(30) =< aux(175)
s(14) =< aux(29)
it(29) =< aux(175)
aux(54) =< aux(176)
aux(51) =< aux(175)-1
aux(52) =< aux(175)
aux(55) =< aux(176)-1
it(29) =< aux(176)+aux(174)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(176)
s(99) =< it(29)*aux(175)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[29,30,31],32,38,41]: 9*it(29)+17*it(30)+9*s(93)+4*s(94)+3*s(95)+4*s(96)+8*s(97)+8*s(102)+4*s(104)+4*s(105)+8*s(111)+4*s(113)+8
  Such that:aux(178) =< V1
aux(179) =< V1+V
aux(180) =< V
it(30) =< aux(179)
it(29) =< aux(179)
aux(54) =< aux(180)
aux(51) =< aux(179)-1
aux(52) =< aux(179)
aux(55) =< aux(180)-1
it(29) =< aux(180)+aux(178)
s(109) =< it(30)*aux(52)
s(107) =< it(30)*aux(55)
s(108) =< it(30)*aux(54)
s(118) =< it(29)*aux(54)
s(98) =< it(29)*aux(51)
s(100) =< it(29)*aux(52)
s(101) =< it(29)*aux(180)
s(99) =< it(29)*aux(179)
s(111) =< s(118)
s(113) =< s(100)
s(113) =< s(98)
s(93) =< s(98)
s(102) =< s(109)
s(104) =< s(108)
s(104) =< s(107)
s(105) =< s(107)
s(95) =< s(101)
s(94) =< s(100)
s(96) =< s(99)
s(96) =< s(98)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [41]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [40,41]: 9*s(14)+5*s(19)+4
  Such that:aux(28) =< V1
aux(29) =< V
s(19) =< aux(28)
s(14) =< aux(29)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [38,41]: 4
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [36,41]: 21*s(121)+3*s(139)+4
  Such that:aux(86) =< V
aux(89) =< V1
s(121) =< aux(89)
s(139) =< aux(86)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [35,41]: 8*s(144)+4
  Such that:aux(96) =< V
s(144) =< aux(96)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [34,[37,39],41]: 5*it(37)+13*it(39)+4*s(152)+2*s(160)+5
  Such that:aux(25) =< 1
aux(101) =< V
aux(102) =< V1
it(37) =< aux(102)
it(39) =< aux(102)
it(37) =< aux(25)+aux(102)
s(152) =< aux(101)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [34,[37,39],40,41]: 5*it(37)+18*it(39)+9*s(14)+4*s(152)+2*s(160)+9
  Such that:aux(101) =< V
aux(106) =< 1
aux(107) =< V1
it(39) =< aux(107)
s(14) =< aux(106)
it(37) =< aux(107)
it(37) =< aux(106)+aux(107)
s(152) =< aux(101)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [34,[37,39],38,41]: 5*it(37)+13*it(39)+4*s(152)+2*s(160)+9
  Such that:aux(35) =< 1
aux(101) =< V
aux(111) =< V1
it(37) =< aux(111)
it(39) =< aux(111)
it(37) =< aux(35)+aux(111)
s(152) =< aux(101)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [34,41]: 4*s(152)+8*s(158)+2*s(160)+5
  Such that:aux(101) =< V
aux(115) =< V1
s(152) =< aux(101)
s(158) =< aux(115)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [34,40,41]: 9*s(14)+13*s(19)+4*s(152)+2*s(160)+9
  Such that:aux(29) =< 1
aux(101) =< V
aux(119) =< V1
s(19) =< aux(119)
s(14) =< aux(29)
s(152) =< aux(101)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [34,38,41]: 4*s(152)+8*s(158)+2*s(160)+9
  Such that:aux(101) =< V
aux(123) =< V1
s(152) =< aux(101)
s(158) =< aux(123)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [33,[37,39],41]: 5*it(37)+13*it(39)+4*s(161)+2*s(169)+5
  Such that:aux(25) =< 1
aux(128) =< V1
aux(129) =< V
it(37) =< aux(129)
it(39) =< aux(129)
it(37) =< aux(25)+aux(129)
s(161) =< aux(128)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [33,[37,39],40,41]: 5*it(37)+18*it(39)+9*s(14)+4*s(161)+2*s(169)+9
  Such that:aux(128) =< V1
aux(133) =< 1
aux(134) =< V
it(39) =< aux(134)
s(14) =< aux(133)
it(37) =< aux(134)
it(37) =< aux(133)+aux(134)
s(161) =< aux(128)

  with precondition: [Out=0,V1>=2,V>=3,V>=V1] 

* Chain [33,[37,39],38,41]: 5*it(37)+13*it(39)+4*s(161)+2*s(169)+9
  Such that:aux(35) =< 1
aux(128) =< V1
aux(138) =< V
it(37) =< aux(138)
it(39) =< aux(138)
it(37) =< aux(35)+aux(138)
s(161) =< aux(128)

  with precondition: [Out=0,V1>=2,V>=3,V>=V1] 

* Chain [33,41]: 4*s(161)+8*s(167)+2*s(169)+5
  Such that:aux(128) =< V1
aux(142) =< V
s(161) =< aux(128)
s(167) =< aux(142)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [33,40,41]: 9*s(14)+13*s(19)+4*s(161)+2*s(169)+9
  Such that:aux(29) =< 1
aux(128) =< V1
aux(146) =< V
s(19) =< aux(146)
s(14) =< aux(29)
s(161) =< aux(128)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [33,38,41]: 4*s(161)+8*s(167)+2*s(169)+9
  Such that:aux(128) =< V1
aux(150) =< V
s(161) =< aux(128)
s(167) =< aux(150)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [32,[37,39],41]: 5*it(37)+15*it(39)+2*s(173)+2*s(178)+4
  Such that:aux(25) =< 1
s(172) =< V
aux(156) =< V1
it(37) =< aux(156)
it(39) =< aux(156)
it(37) =< aux(25)+aux(156)
s(173) =< s(172)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,[37,39],40,41]: 5*it(37)+20*it(39)+9*s(14)+2*s(173)+2*s(178)+8
  Such that:s(172) =< V
aux(160) =< 1
aux(161) =< V1
it(39) =< aux(161)
s(14) =< aux(160)
it(37) =< aux(161)
it(37) =< aux(160)+aux(161)
s(173) =< s(172)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [32,[37,39],38,41]: 5*it(37)+15*it(39)+2*s(173)+2*s(178)+8
  Such that:aux(35) =< 1
s(172) =< V
aux(165) =< V1
it(37) =< aux(165)
it(39) =< aux(165)
it(37) =< aux(35)+aux(165)
s(173) =< s(172)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [32,41]: 7*s(170)+1*s(171)+4*s(176)+2*s(178)+4
  Such that:aux(154) =< V1
aux(169) =< V
s(170) =< aux(169)
s(171) =< aux(154)
s(176) =< aux(154)
s(176) =< aux(169)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,40,41]: 9*s(14)+15*s(19)+2*s(173)+2*s(178)+8
  Such that:aux(29) =< 1
s(172) =< V
aux(173) =< V1
s(19) =< aux(173)
s(14) =< aux(29)
s(173) =< s(172)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,38,41]: 7*s(170)+1*s(171)+4*s(176)+2*s(178)+8
  Such that:aux(154) =< V1
aux(177) =< V
s(170) =< aux(177)
s(171) =< aux(154)
s(176) =< aux(154)
s(176) =< aux(177)

  with precondition: [Out=0,V1>=2,V>=2] 


#### Cost of chains of start(V1,V):
* Chain [43]: 151*s(1065)+200*s(1067)+224*s(1073)+126*s(1079)+30*s(1081)+15*s(1082)+434*s(1083)+240*s(1084)+200*s(1097)+100*s(1098)+225*s(1099)+200*s(1100)+100*s(1101)+100*s(1102)+75*s(1103)+100*s(1104)+100*s(1105)+45*s(1106)+24*s(1108)+36*s(1110)+15*s(1111)+8*s(1112)+9
  Such that:s(1074) =< 1
s(1076) =< V1+V
aux(186) =< V1
aux(187) =< V
s(1067) =< aux(186)
s(1065) =< aux(187)
s(1079) =< s(1074)
s(1081) =< aux(186)
s(1081) =< s(1074)+aux(186)
s(1082) =< aux(187)
s(1082) =< s(1074)+aux(187)
s(1083) =< s(1076)
s(1084) =< s(1076)
s(1085) =< aux(187)
s(1086) =< s(1076)-1
s(1087) =< s(1076)
s(1088) =< aux(187)-1
s(1084) =< aux(187)+aux(186)
s(1089) =< s(1083)*s(1087)
s(1090) =< s(1083)*s(1088)
s(1091) =< s(1083)*s(1085)
s(1092) =< s(1084)*s(1085)
s(1093) =< s(1084)*s(1086)
s(1094) =< s(1084)*s(1087)
s(1095) =< s(1084)*aux(187)
s(1096) =< s(1084)*s(1076)
s(1097) =< s(1092)
s(1098) =< s(1094)
s(1098) =< s(1093)
s(1099) =< s(1093)
s(1100) =< s(1089)
s(1101) =< s(1091)
s(1101) =< s(1090)
s(1102) =< s(1090)
s(1103) =< s(1095)
s(1104) =< s(1094)
s(1105) =< s(1096)
s(1105) =< s(1093)
s(1106) =< s(1076)
s(1106) =< s(1074)+s(1076)
s(1107) =< aux(186)
s(1107) =< s(1076)
s(1108) =< s(1107)
s(1109) =< s(1076)
s(1109) =< aux(187)
s(1110) =< s(1109)
s(1111) =< s(1076)
s(1111) =< s(1109)+s(1076)
s(1112) =< aux(186)
s(1112) =< aux(187)

  with precondition: [V1>=0] 

* Chain [42]: 1
  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [43] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 279 ms.
   - Backward Invariants 150 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 703 ms.
* Termination proved in 33 ms.
* Upper bounds computed in 1598 ms.
   - Equation cost structures 65 ms.
   - Phase cost structures 171 ms.
   - Chain cost structures 349 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 2744 ms.

