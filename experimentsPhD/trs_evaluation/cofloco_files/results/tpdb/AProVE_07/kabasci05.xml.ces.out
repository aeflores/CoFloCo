
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. recursive  : [max/3]
2. recursive  : [min/3]
3. recursive  : [minus/3]
4. recursive  : [transform/2]
5. recursive  : [gcd/3]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into max/3
2. SCC is partially evaluated into min/3
3. SCC is partially evaluated into minus/3
4. SCC is partially evaluated into transform/2
5. SCC is partially evaluated into gcd/3
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations max/3 
* CE 11 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 9 is refined into CE [25] 
* CE 10 is refined into CE [26] 


#### Refined cost equations max/3 
* CE 23: max(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 24: max(A,B,A) = 1
     [A>=0,B=0] 
* CE 25: max(A,B,B) = 1
     [B>=0,A=0] 
* CE 26: max(V1,V,Out) = 1+ max(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of max/3 
* CEs [26] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of max/3 
* Loop 16: max(V1,V,Out)->  max(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 17: max(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 18: max(A,B,A) [A>=0,B=0] 
* Loop 19: max(A,B,B) [B>=0,A=0] 

### Ranking functions of CR max(V1,V,Out) 
* RF of phase [16]: [V,V1]

#### Partial ranking functions of CR max(V1,V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V
    V1


### Resulting Chains:max(V1,V,Out) 
* [[16],19]
* [[16],18]
* [[16],17]
* [19]
* [18]
* [17]


### Merging Chains  max/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 
* [[18,[16]]] --> 4 
* [[19,[16]]] --> 5 
* [[17,[16]]] --> 6 


### Specialization of cost equations min/3 
* CE 14 is refined into CE [27] 
* CE 15 is refined into CE [28] 
* CE 17 is refined into CE [29] 
* CE 16 is refined into CE [30] 


#### Refined cost equations min/3 
* CE 27: min(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 28: min(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 29: min(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 30: min(V1,V,Out) = 1+ min(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of min/3 
* CEs [30] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [28,29] --> Loop 22 

#### Loops of min/3 
* Loop 20: min(V1,V,Out)->  min(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 21: min(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 22: min(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR min(V1,V,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR min(V1,V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:min(V1,V,Out) 
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  min/3 into  External patterns of execution 
* [[21],[22]] --> 1 
* [[21,[20]],[22,[20]]] --> 2 


### Specialization of cost equations minus/3 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 
* CE 18 is refined into CE [33] 


#### Refined cost equations minus/3 
* CE 31: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 32: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 33: minus(V1,V,Out) = 1+ minus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [33] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of minus/3 
* Loop 23: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 24: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 25: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[23],25]
* [[23],24]
* [25]
* [24]


### Merging Chains  minus/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[25,[23]]] --> 3 
* [[24,[23]]] --> 4 


### Specialization of cost equations transform/2 
* CE 22 is refined into CE [34] 
* CE 21 is refined into CE [35] 


#### Refined cost equations transform/2 
* CE 34: transform(V1,Out) = 1+ transform(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 
* CE 35: transform(V1,Out) = 1
     [V1>=0,V1+2=Out] 

### Cost equations --> "Loop" of transform/2 
* CEs [35] --> Loop 26 
* CEs [34] --> Loop 27 

#### Loops of transform/2 
* Loop 26: transform(V1,Out) [V1>=0,V1+2=Out] 
* Loop 27: transform(V1,Out)->  transform(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 

### Ranking functions of CR transform(V1,Out) 
* RF of phase [27]: [V1]

#### Partial ranking functions of CR transform(V1,Out) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V1


### Resulting Chains:transform(V1,Out) 
* [[27],26]
* [26]


### Merging Chains  transform/2 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[27]]] --> 2 


### Specialization of cost equations gcd/3 
* CE 13 is refined into CE [36] 
* CE 12 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117] 


#### Refined cost equations gcd/3 
* CE 36: gcd(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ transform(X1,Y1):1+ min(Z1,A2,B2):1+ minus(X1,C2,X1):1+ min(D2,X1,E2):1+ gcd(X1,F2,Out)
     [X1>=0,X1+2=A2,X1+2=Y1,X1+1=V,F2=1,E2=0,D2=0,C2=0,B2=0,Z1=0,W1=0,V1=1] 
* CE 38: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ transform(X1,Y1):1+ min(Z1,A2,B2):1+ minus(X1,C2,D2):2+ min(E2,X1,F2):1+ gcd(G2,H2,Out)
     [X1>=0,X1+2=A2,X1+2=Y1,X1+1=V,H2=1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,Z1=0,W1=0,V1=1] 
* CE 39: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ transform(X1,Y1):2+ min(Z1,Y1,A2):1+ minus(X1,B2,X1):1+ min(C2,X1,D2):1+ gcd(X1,E2,Out)
     [Y1>=X1+3,2*X1+2>=Y1,X1+1=V,E2=1,D2=0,C2=0,B2=0,A2=0,Z1=0,W1=0,V1=1] 
* CE 40: gcd(V1,V,Out) = 1+ max(W1,X1,X1):1+ transform(X1,Y1):2+ min(Z1,Y1,A2):1+ minus(X1,B2,C2):2+ min(D2,X1,E2):1+ gcd(F2,G2,Out)
     [Y1>=X1+3,2*X1+2>=Y1,X1+1=V,G2=1,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,W1=0,V1=1] 
* CE 41: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ transform(Y1,Z1):1+ min(W1,A2,B2):1+ minus(W1,C2,W1):1+ min(W1,D2,E2):1+ gcd(W1,F2,Out)
     [W1>=0,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=2,Z1=2,Y1=0,X1=0,V=1] 
* CE 42: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ transform(Y1,Z1):1+ min(W1,A2,B2):1+ minus(W1,C2,D2):2+ min(W1,E2,F2):1+ gcd(G2,H2,Out)
     [W1>=0,W1+1=V1,H2=1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=2,Z1=2,Y1=0,X1=0,V=1] 
* CE 43: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ transform(Y1,Z1):1+ min(W1,A2,B2):2+ minus(W1,B2,C2):2+ min(W1,D2,E2):1+ gcd(F2,G2,Out)
     [W1>=B2,B2>=1,2>=B2,W1+1=V1,G2=1,F2=0,E2=0,D2=0,C2=0,A2=2,Z1=2,Y1=0,X1=0,V=1] 
* CE 44: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ transform(Y1,Z1):1+ min(W1,A2,B2):2+ minus(W1,B2,W1):3+ min(W1,C2,D2):1+ gcd(W1,E2,Out)
     [W1>=B2,B2>=1,2>=B2,W1+1=V1,E2=1,D2=0,C2=0,A2=2,Z1=2,Y1=0,X1=0,V=1] 
* CE 45: gcd(V1,V,Out) = 1+ max(W1,X1,W1):2+ transform(Y1,Z1):1+ min(W1,A2,B2):2+ minus(W1,B2,C2):4+ min(W1,D2,E2):1+ gcd(C2,F2,Out)
     [B2>=C2,W1>=B2,C2>=1,2>=B2,W1+1=V1,F2=1,E2=0,D2=0,A2=2,Z1=2,Y1=0,X1=0,V=1] 
* CE 46: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(C2,D2,E2):1+ min(W1,X1,F2):1+ gcd(G2,H2,Out)
     [X1>=0,W1>=0,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,H2=1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,Y1=0] 
* CE 47: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(C2,D2,E2):1+ min(W1,X1,F2):2+ gcd(G2,H2,Out)
     [X1>=F2,W1>=F2,F2>=1,F2+1=H2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,G2=0,E2=0,D2=0,C2=0,B2=0,Y1=0] 
* CE 48: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(C2,D2,E2):2+ min(W1,X1,F2):1+ gcd(G2,H2,Out)
     [X1>=0,W1>=0,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,H2=1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,Y1=0] 
* CE 49: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(C2,D2,E2):2+ min(W1,X1,F2):2+ gcd(G2,H2,Out)
     [X1>=F2,W1>=F2,F2>=1,F2+1=H2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,G2=0,E2=0,D2=0,C2=0,B2=0,Y1=0] 
* CE 50: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(C2,B2,D2):2+ min(W1,X1,E2):1+ gcd(F2,G2,Out)
     [X1+2>=B2,W1>=B2,X1>=0,B2>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,G2=1,F2=0,E2=0,D2=0,C2=0,Y1=0] 
* CE 51: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(C2,B2,D2):2+ min(W1,X1,E2):2+ gcd(F2,G2,Out)
     [X1>=E2,W1>=E2,X1+2>=B2,W1>=B2,E2>=1,B2>=1,E2+1=G2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,F2=0,D2=0,C2=0,Y1=0] 
* CE 52: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(B2,C2,D2):1+ min(W1,X1,E2):1+ gcd(F2,G2,Out)
     [Z1>=X1+3,2*X1+2>=Z1,W1>=0,X1+1=V,W1+1=V1,G2=1,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Y1=0] 
* CE 53: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(B2,C2,D2):1+ min(W1,X1,E2):2+ gcd(F2,G2,Out)
     [X1>=E2,W1>=E2,Z1>=X1+3,2*X1+2>=Z1,E2>=1,E2+1=G2,X1+1=V,W1+1=V1,F2=0,D2=0,C2=0,B2=0,A2=0,Y1=0] 
* CE 54: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(B2,C2,D2):2+ min(W1,X1,E2):1+ gcd(F2,G2,Out)
     [Z1>=X1+3,2*X1+2>=Z1,W1>=0,X1+1=V,W1+1=V1,G2=1,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Y1=0] 
* CE 55: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(B2,C2,D2):2+ min(W1,X1,E2):2+ gcd(F2,G2,Out)
     [X1>=E2,W1>=E2,Z1>=X1+3,2*X1+2>=Z1,E2>=1,E2+1=G2,X1+1=V,W1+1=V1,F2=0,D2=0,C2=0,B2=0,A2=0,Y1=0] 
* CE 56: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(B2,A2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [Z1>=X1+3,W1>=A2,Z1>=A2,2*X1+2>=Z1,A2>=1,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,Y1=0] 
* CE 57: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):3+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(B2,A2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=D2,Z1>=X1+3,W1>=A2,Z1>=A2,2*X1+2>=Z1,D2>=1,A2>=1,D2+1=F2,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,Y1=0] 
* CE 58: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(W1,B2,W1):1+ min(W1,X1,C2):1+ gcd(W1,D2,Out)
     [W1>=X1,X1>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 59: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(W1,B2,W1):1+ min(W1,X1,C2):2+ gcd(W1,D2,Out)
     [X1>=C2,W1>=X1,C2>=1,C2+1=D2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,B2=0,A2=0] 
* CE 60: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(W1,B2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [W1>=X1,X1>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0] 
* CE 61: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(W1,B2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=X1,D2>=1,D2+1=F2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,A2=0] 
* CE 62: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [W1>=X1,X1+2>=A2,W1>=A2,X1>=1,A2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0] 
* CE 63: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [X1>=C2,W1>=X1,X1+2>=A2,W1>=A2,C2>=1,A2>=1,C2+1=E2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=0,B2=0] 
* CE 64: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,W1):3+ min(W1,X1,B2):1+ gcd(W1,C2,Out)
     [W1>=X1,X1+2>=A2,W1>=A2,X1>=1,A2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 65: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,W1):3+ min(W1,X1,B2):2+ gcd(W1,C2,Out)
     [X1>=B2,W1>=X1,X1+2>=A2,W1>=A2,B2>=1,A2>=1,B2+1=C2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1] 
* CE 66: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,B2):4+ min(W1,X1,C2):1+ gcd(B2,D2,Out)
     [W1>=X1,A2>=B2,X1+2>=A2,W1>=A2,X1>=1,B2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=1,C2=0] 
* CE 67: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(W1,A2,B2):4+ min(W1,X1,C2):2+ gcd(B2,D2,Out)
     [X1>=C2,W1>=X1,A2>=B2,X1+2>=A2,W1>=A2,C2>=1,B2>=1,C2+1=D2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1] 
* CE 68: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,W1):1+ min(W1,X1,B2):1+ gcd(W1,C2,Out)
     [W1>=X1,Y1>=X1+3,2*X1+2>=Y1,X1+1=V,W1+1=V1,C2=1,B2=0,A2=0,Z1=0] 
* CE 69: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,W1):1+ min(W1,X1,B2):2+ gcd(W1,C2,Out)
     [X1>=B2,W1>=X1,Y1>=X1+3,2*X1+2>=Y1,B2>=1,B2+1=C2,X1+1=V,W1+1=V1,A2=0,Z1=0] 
* CE 70: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [W1>=X1,Y1>=X1+3,2*X1+2>=Y1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0,A2=0,Z1=0] 
* CE 71: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(W1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [X1>=C2,W1>=X1,Y1>=X1+3,2*X1+2>=Y1,C2>=1,C2+1=E2,X1+1=V,W1+1=V1,D2=0,B2=0,A2=0,Z1=0] 
* CE 72: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,A2):2+ min(W1,X1,B2):1+ gcd(C2,D2,Out)
     [W1>=X1,Y1>=X1+3,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,Z1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 73: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,A2):2+ min(W1,X1,B2):2+ gcd(C2,D2,Out)
     [X1>=B2,W1>=X1,Y1>=X1+3,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,B2>=1,Z1>=1,B2+1=D2,X1+1=V,W1+1=V1,C2=0,A2=0] 
* CE 74: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,W1):3+ min(W1,X1,A2):1+ gcd(W1,B2,Out)
     [W1>=X1,Y1>=X1+3,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,Z1>=1,X1+1=V,W1+1=V1,B2=1,A2=0] 
* CE 75: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,W1):3+ min(W1,X1,A2):2+ gcd(W1,B2,Out)
     [X1>=A2,W1>=X1,Y1>=X1+3,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,A2>=1,Z1>=1,A2+1=B2,X1+1=V,W1+1=V1] 
* CE 76: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,A2):4+ min(W1,X1,B2):1+ gcd(A2,C2,Out)
     [W1>=X1,Y1>=X1+3,Z1>=A2,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,A2>=1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 77: gcd(V1,V,Out) = 1+ max(W1,X1,W1):4+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(W1,Z1,A2):4+ min(W1,X1,B2):2+ gcd(A2,C2,Out)
     [X1>=B2,W1>=X1,Y1>=X1+3,Z1>=A2,W1>=Z1,Y1>=Z1,2*X1+2>=Y1,B2>=1,A2>=1,B2+1=C2,X1+1=V,W1+1=V1] 
* CE 78: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(X1,B2,X1):1+ min(W1,X1,C2):1+ gcd(X1,D2,Out)
     [X1>=W1,W1>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 79: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(X1,B2,X1):1+ min(W1,X1,C2):2+ gcd(X1,D2,Out)
     [W1>=C2,X1>=W1,C2>=1,C2+1=D2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,B2=0,A2=0] 
* CE 80: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(X1,B2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [X1>=W1,W1>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0] 
* CE 81: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):1+ minus(X1,B2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [W1>=D2,X1>=W1,D2>=1,D2+1=F2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,A2=0] 
* CE 82: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [X1>=W1,W1>=A2,A2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0] 
* CE 83: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [W1>=C2,X1>=W1,W1>=A2,C2>=1,A2>=1,C2+1=E2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=0,B2=0] 
* CE 84: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,X1):3+ min(W1,X1,B2):1+ gcd(X1,C2,Out)
     [X1>=W1,W1>=A2,A2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 85: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,X1):3+ min(W1,X1,B2):2+ gcd(X1,C2,Out)
     [W1>=B2,X1>=W1,W1>=A2,B2>=1,A2>=1,B2+1=C2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1] 
* CE 86: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,B2):4+ min(W1,X1,C2):1+ gcd(B2,D2,Out)
     [X1>=W1,A2>=B2,W1>=A2,B2>=1,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1,D2=1,C2=0] 
* CE 87: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):1+ min(W1,Z1,A2):2+ minus(X1,A2,B2):4+ min(W1,X1,C2):2+ gcd(B2,D2,Out)
     [W1>=C2,X1>=W1,A2>=B2,W1>=A2,C2>=1,B2>=1,C2+1=D2,X1+2=Z1,X1+2=Y1,X1+1=V,W1+1=V1] 
* CE 88: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(X1,A2,X1):1+ min(W1,X1,B2):1+ gcd(X1,C2,Out)
     [Y1>=X1+3,X1>=W1,2*X1+2>=Y1,W1>=1,X1+1=V,W1+1=V1,C2=1,B2=0,A2=0,Z1=0] 
* CE 89: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(X1,A2,X1):1+ min(W1,X1,B2):2+ gcd(X1,C2,Out)
     [W1>=B2,Y1>=X1+3,X1>=W1,2*X1+2>=Y1,B2>=1,B2+1=C2,X1+1=V,W1+1=V1,A2=0,Z1=0] 
* CE 90: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(X1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [Y1>=X1+3,X1>=W1,2*X1+2>=Y1,W1>=1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0,A2=0,Z1=0] 
* CE 91: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):1+ minus(X1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [W1>=C2,Y1>=X1+3,X1>=W1,2*X1+2>=Y1,C2>=1,C2+1=E2,X1+1=V,W1+1=V1,D2=0,B2=0,A2=0,Z1=0] 
* CE 92: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,A2):2+ min(W1,X1,B2):1+ gcd(C2,D2,Out)
     [Y1>=X1+3,X1>=W1,W1>=Z1,2*X1+2>=Y1,Z1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 93: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,A2):2+ min(W1,X1,B2):2+ gcd(C2,D2,Out)
     [W1>=B2,Y1>=X1+3,X1>=W1,W1>=Z1,2*X1+2>=Y1,B2>=1,Z1>=1,B2+1=D2,X1+1=V,W1+1=V1,C2=0,A2=0] 
* CE 94: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,X1):3+ min(W1,X1,A2):1+ gcd(X1,B2,Out)
     [Y1>=X1+3,X1>=W1,W1>=Z1,2*X1+2>=Y1,Z1>=1,X1+1=V,W1+1=V1,B2=1,A2=0] 
* CE 95: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,X1):3+ min(W1,X1,A2):2+ gcd(X1,B2,Out)
     [W1>=A2,Y1>=X1+3,X1>=W1,W1>=Z1,2*X1+2>=Y1,A2>=1,Z1>=1,A2+1=B2,X1+1=V,W1+1=V1] 
* CE 96: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,A2):4+ min(W1,X1,B2):1+ gcd(A2,C2,Out)
     [Y1>=X1+3,X1>=W1,Z1>=A2,W1>=Z1,2*X1+2>=Y1,A2>=1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 97: gcd(V1,V,Out) = 1+ max(W1,X1,X1):5+ transform(X1,Y1):2+ min(W1,Y1,Z1):2+ minus(X1,Z1,A2):4+ min(W1,X1,B2):2+ gcd(A2,C2,Out)
     [W1>=B2,Y1>=X1+3,X1>=W1,Z1>=A2,W1>=Z1,2*X1+2>=Y1,B2>=1,A2>=1,B2+1=C2,X1+1=V,W1+1=V1] 
* CE 98: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(Y1,C2,Y1):1+ min(W1,X1,D2):1+ gcd(Y1,E2,Out)
     [X1>=Y1,W1>=Y1,Y1>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0] 
* CE 99: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(Y1,C2,Y1):1+ min(W1,X1,D2):2+ gcd(Y1,E2,Out)
     [X1>=D2,W1>=D2,X1>=Y1,W1>=Y1,D2>=1,Y1>=1,D2+1=E2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,C2=0,B2=0] 
* CE 100: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(Y1,C2,D2):2+ min(W1,X1,E2):1+ gcd(F2,G2,Out)
     [X1>=Y1,W1>=Y1,Y1>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,G2=1,F2=0,E2=0,D2=0,C2=0,B2=0] 
* CE 101: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):1+ minus(Y1,C2,D2):2+ min(W1,X1,E2):2+ gcd(F2,G2,Out)
     [X1>=E2,W1>=E2,X1>=Y1,W1>=Y1,E2>=1,Y1>=1,E2+1=G2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,F2=0,D2=0,C2=0,B2=0] 
* CE 102: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [X1+2>=B2,W1>=B2,X1>=Y1,W1>=Y1,B2>=1,Y1>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0] 
* CE 103: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=D2,X1+2>=B2,W1>=B2,X1>=Y1,W1>=Y1,D2>=1,B2>=1,Y1>=1,D2+1=F2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,E2=0,C2=0] 
* CE 104: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,Y1):3+ min(W1,X1,C2):1+ gcd(Y1,D2,Out)
     [X1>=Y1,W1>=Y1,Y1>=B2,B2>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,D2=1,C2=0] 
* CE 105: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,Y1):3+ min(W1,X1,C2):2+ gcd(Y1,D2,Out)
     [X1>=C2,W1>=C2,X1>=Y1,W1>=Y1,Y1>=B2,C2>=1,B2>=1,C2+1=D2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1] 
* CE 106: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,C2):4+ min(W1,X1,D2):1+ gcd(C2,E2,Out)
     [B2>=C2,Y1>=C2,X1+2>=B2,W1>=B2,X1>=Y1,W1>=Y1,C2>=1,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1,E2=1,D2=0] 
* CE 107: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):1+ min(W1,A2,B2):2+ minus(Y1,B2,C2):4+ min(W1,X1,D2):2+ gcd(C2,E2,Out)
     [X1>=D2,W1>=D2,B2>=C2,Y1>=C2,X1+2>=B2,W1>=B2,X1>=Y1,W1>=Y1,D2>=1,C2>=1,D2+1=E2,X1+2=A2,X1+2=Z1,X1+1=V,W1+1=V1] 
* CE 108: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(Y1,B2,Y1):1+ min(W1,X1,C2):1+ gcd(Y1,D2,Out)
     [Z1>=X1+3,X1>=Y1,W1>=Y1,2*X1+2>=Z1,Y1>=1,X1+1=V,W1+1=V1,D2=1,C2=0,B2=0,A2=0] 
* CE 109: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(Y1,B2,Y1):1+ min(W1,X1,C2):2+ gcd(Y1,D2,Out)
     [X1>=C2,W1>=C2,Z1>=X1+3,X1>=Y1,W1>=Y1,2*X1+2>=Z1,C2>=1,Y1>=1,C2+1=D2,X1+1=V,W1+1=V1,B2=0,A2=0] 
* CE 110: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(Y1,B2,C2):2+ min(W1,X1,D2):1+ gcd(E2,F2,Out)
     [Z1>=X1+3,X1>=Y1,W1>=Y1,2*X1+2>=Z1,Y1>=1,X1+1=V,W1+1=V1,F2=1,E2=0,D2=0,C2=0,B2=0,A2=0] 
* CE 111: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):1+ minus(Y1,B2,C2):2+ min(W1,X1,D2):2+ gcd(E2,F2,Out)
     [X1>=D2,W1>=D2,Z1>=X1+3,X1>=Y1,W1>=Y1,2*X1+2>=Z1,D2>=1,Y1>=1,D2+1=F2,X1+1=V,W1+1=V1,E2=0,C2=0,B2=0,A2=0] 
* CE 112: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,B2):2+ min(W1,X1,C2):1+ gcd(D2,E2,Out)
     [Z1>=X1+3,W1>=A2,Z1>=A2,X1>=Y1,W1>=Y1,2*X1+2>=Z1,A2>=1,Y1>=1,X1+1=V,W1+1=V1,E2=1,D2=0,C2=0,B2=0] 
* CE 113: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,B2):2+ min(W1,X1,C2):2+ gcd(D2,E2,Out)
     [X1>=C2,W1>=C2,Z1>=X1+3,W1>=A2,Z1>=A2,X1>=Y1,W1>=Y1,2*X1+2>=Z1,C2>=1,A2>=1,Y1>=1,C2+1=E2,X1+1=V,W1+1=V1,D2=0,B2=0] 
* CE 114: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,Y1):3+ min(W1,X1,B2):1+ gcd(Y1,C2,Out)
     [Z1>=X1+3,X1>=Y1,W1>=Y1,Y1>=A2,2*X1+2>=Z1,A2>=1,X1+1=V,W1+1=V1,C2=1,B2=0] 
* CE 115: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,Y1):3+ min(W1,X1,B2):2+ gcd(Y1,C2,Out)
     [X1>=B2,W1>=B2,Z1>=X1+3,X1>=Y1,W1>=Y1,Y1>=A2,2*X1+2>=Z1,B2>=1,A2>=1,B2+1=C2,X1+1=V,W1+1=V1] 
* CE 116: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,B2):4+ min(W1,X1,C2):1+ gcd(B2,D2,Out)
     [Z1>=X1+3,A2>=B2,Y1>=B2,W1>=A2,Z1>=A2,X1>=Y1,W1>=Y1,2*X1+2>=Z1,B2>=1,X1+1=V,W1+1=V1,D2=1,C2=0] 
* CE 117: gcd(V1,V,Out) = 1+ max(W1,X1,Y1):6+ transform(X1,Z1):2+ min(W1,Z1,A2):2+ minus(Y1,A2,B2):4+ min(W1,X1,C2):2+ gcd(B2,D2,Out)
     [X1>=C2,W1>=C2,Z1>=X1+3,A2>=B2,Y1>=B2,W1>=A2,Z1>=A2,X1>=Y1,W1>=Y1,2*X1+2>=Z1,C2>=1,B2>=1,C2+1=D2,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [67,77] --> Loop 28 
* CEs [87,97,99,105,107,109,115,117] --> Loop 29 
* CEs [79,85,89,95] --> Loop 30 
* CEs [59,65,69,75] --> Loop 31 
* CEs [86,96,98,104,106,108,114,116] --> Loop 32 
* CEs [66,76] --> Loop 33 
* CEs [78,84,88,94] --> Loop 34 
* CEs [58,64,68,74] --> Loop 35 
* CEs [61,63,71,73] --> Loop 36 
* CEs [47,49,51,53,55,57,81,83,91,93,101,103,111,113] --> Loop 37 
* CEs [45] --> Loop 38 
* CEs [41,44] --> Loop 39 
* CEs [42,43] --> Loop 40 
* CEs [37,39] --> Loop 41 
* CEs [38,40,46,48,50,52,54,56,60,62,70,72,80,82,90,92,100,102,110,112] --> Loop 42 
* CEs [36] --> Loop 43 

#### Loops of gcd/3 
* Loop 28: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',2*V>=V1',V1>=V1'+1,V1>=V,V'>=2,V1'>=1] 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V',V>=V1'+1,V1>=V1'+1,V'>=2,V1'>=1] 
* Loop 30: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V',V>=V1,V'>=2,V=V1'+1] 
* Loop 31: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V,V'>=2,V1=V1'+1] 
* Loop 32: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V1'+1,V1>=V1'+1,V1'>=1,V'=1] 
* Loop 33: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [2*V>=V1',V1>=V1'+1,V1>=V,V1'>=1,V>=2,V'=1] 
* Loop 34: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V1,V1>=2,V=V1'+1,V'=1] 
* Loop 35: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V,V>=2,V1=V1'+1,V'=1] 
* Loop 36: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V,V'>=2,V1'=0] 
* Loop 37: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=V',V1>=V',V'>=2,V1'=0] 
* Loop 38: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=V1'+1,V1'>=1,2>=V1',V'=1,V=1] 
* Loop 39: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V1=V1'+1,V'=1,V=1] 
* Loop 40: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V1>=1,V'=1,V1'=0,V=1] 
* Loop 41: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=1,V=V1'+1,V'=1,V1=1] 
* Loop 42: gcd(V1,V,Out)->  gcd(V1',V',Out)
                  [V>=1,V1>=1,V'=1,V1'=0] 
* Loop 43: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [28,29,30,31]: [V1+V-3]
* RF of phase [38,39,41]: [V1+V-1]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [28,29,30,31]:
  - RF of loop [28:1,29:1,31:1]:
    V1-1 depends on loops [30:1] 
  - RF of loop [29:1,30:1]:
    V1+V-3
* Partial RF of phase [38,39,41]:
  - RF of loop [38:1]:
    V1-1 depends on loops [41:1] 
  - RF of loop [39:1]:
    V1 depends on loops [41:1] 
  - RF of loop [41:1]:
    V1+V-1


### Resulting Chains:gcd(V1,V,Out) 
* [[38,39,41],43]
* [[38,39,41],42,43]
* [[38,39,41],40,43]
* [[28,29,30,31],[38,39,41],43]
* [[28,29,30,31],[38,39,41],42,43]
* [[28,29,30,31],[38,39,41],40,43]
* [[28,29,30,31],43]
* [[28,29,30,31],42,43]
* [[28,29,30,31],37,43]
* [[28,29,30,31],36,43]
* [[28,29,30,31],35,[38,39,41],43]
* [[28,29,30,31],35,[38,39,41],42,43]
* [[28,29,30,31],35,[38,39,41],40,43]
* [[28,29,30,31],35,43]
* [[28,29,30,31],35,42,43]
* [[28,29,30,31],35,40,43]
* [[28,29,30,31],34,[38,39,41],43]
* [[28,29,30,31],34,[38,39,41],42,43]
* [[28,29,30,31],34,[38,39,41],40,43]
* [[28,29,30,31],34,43]
* [[28,29,30,31],34,42,43]
* [[28,29,30,31],34,40,43]
* [[28,29,30,31],33,[38,39,41],43]
* [[28,29,30,31],33,[38,39,41],42,43]
* [[28,29,30,31],33,[38,39,41],40,43]
* [[28,29,30,31],33,43]
* [[28,29,30,31],33,42,43]
* [[28,29,30,31],33,40,43]
* [[28,29,30,31],32,[38,39,41],43]
* [[28,29,30,31],32,[38,39,41],42,43]
* [[28,29,30,31],32,[38,39,41],40,43]
* [[28,29,30,31],32,43]
* [[28,29,30,31],32,42,43]
* [[28,29,30,31],32,40,43]
* [43]
* [42,43]
* [40,43]
* [37,43]
* [36,43]
* [35,[38,39,41],43]
* [35,[38,39,41],42,43]
* [35,[38,39,41],40,43]
* [35,43]
* [35,42,43]
* [35,40,43]
* [34,[38,39,41],43]
* [34,[38,39,41],42,43]
* [34,[38,39,41],40,43]
* [34,43]
* [34,42,43]
* [34,40,43]
* [33,[38,39,41],43]
* [33,[38,39,41],42,43]
* [33,[38,39,41],40,43]
* [33,43]
* [33,42,43]
* [33,40,43]
* [32,[38,39,41],43]
* [32,[38,39,41],42,43]
* [32,[38,39,41],40,43]
* [32,43]
* [32,42,43]
* [32,40,43]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[43,40,32],[43,42,32],[43,32],[43,40,[38,39,41],32],[43,42,[38,39,41],32],[43,[38,39,41],32],[43,40,33],[43,42,33],[43,33],[43,40,[38,39,41],33],[43,42,[38,39,41],33],[43,[38,39,41],33],[43,40,34],[43,42,34],[43,34],[43,40,[38,39,41],34],[43,42,[38,39,41],34],[43,[38,39,41],34],[43,40,35],[43,42,35],[43,35],[43,40,[38,39,41],35],[43,42,[38,39,41],35],[43,[38,39,41],35],[43,36],[43,37],[43,40],[43,42],[43],[43,40,32,[28,29,30,31]],[43,42,32,[28,29,30,31]],[43,32,[28,29,30,31]],[43,40,[38,39,41],32,[28,29,30,31]],[43,42,[38,39,41],32,[28,29,30,31]],[43,[38,39,41],32,[28,29,30,31]],[43,40,33,[28,29,30,31]],[43,42,33,[28,29,30,31]],[43,33,[28,29,30,31]],[43,40,[38,39,41],33,[28,29,30,31]],[43,42,[38,39,41],33,[28,29,30,31]],[43,[38,39,41],33,[28,29,30,31]],[43,40,34,[28,29,30,31]],[43,42,34,[28,29,30,31]],[43,34,[28,29,30,31]],[43,40,[38,39,41],34,[28,29,30,31]],[43,42,[38,39,41],34,[28,29,30,31]],[43,[38,39,41],34,[28,29,30,31]],[43,40,35,[28,29,30,31]],[43,42,35,[28,29,30,31]],[43,35,[28,29,30,31]],[43,40,[38,39,41],35,[28,29,30,31]],[43,42,[38,39,41],35,[28,29,30,31]],[43,[38,39,41],35,[28,29,30,31]],[43,36,[28,29,30,31]],[43,37,[28,29,30,31]],[43,42,[28,29,30,31]],[43,[28,29,30,31]],[43,40,[38,39,41],[28,29,30,31]],[43,42,[38,39,41],[28,29,30,31]],[43,[38,39,41],[28,29,30,31]],[43,40,[38,39,41]],[43,42,[38,39,41]],[43,[38,39,41]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [118,119,120,121,122,123] 
* CE 3 is refined into CE [124] 
* CE 4 is refined into CE [125,126] 
* CE 5 is refined into CE [127,128,129,130] 
* CE 6 is refined into CE [131,132] 
* CE 7 is refined into CE [133] 


#### Refined cost equations start/2 
* CE 118: start(V1,V) = 0+ max(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 119: start(V1,V) = 0+ max(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 120: start(V1,V) = 0+ max(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 121: start(V1,V) = 0+ max(V1,V,V1):4
     [V1>=V,V>=1] 
* CE 122: start(V1,V) = 0+ max(V1,V,V):5
     [V>=V1,V1>=1] 
* CE 123: start(V1,V) = 0+ max(V1,V,W1):6
     [V>=W1,V1>=W1,W1>=1] 
* CE 124: start(V1,V) = 0+ gcd(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 125: start(V1,V) = 0+ min(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 126: start(V1,V) = 0+ min(V1,V,W1):2
     [V>=W1,V1>=W1,W1>=1] 
* CE 127: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 128: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 129: start(V1,V) = 0+ minus(V1,V,V1):3
     [V1>=V,V>=1] 
* CE 130: start(V1,V) = 0+ minus(V1,V,W1):4
     [V>=W1,V1>=W1,W1>=1] 
* CE 131: start(V1,V) = 0+ transform(W1,X1):1
     [X1>=2,X1=W1+2,X1=V1+2] 
* CE 132: start(V1,V) = 0+ transform(V1,W1):2
     [2*V1+2>=W1,W1>=V1+3] 
* CE 133: start(V1,V) = 1
     [V>=0,V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [119,127] --> Loop 44 
* CEs [118,120,121,122,123,124,125,126,128,129,130,131,132,133] --> Loop 45 

#### Loops of start/2 
* Loop 44: start(V1,V) [V1>=0,V=0] 
* Loop 45: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [45]
* [44]


### Merging Chains  start/2 into  External patterns of execution 
* [[44],[45]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:max(V1,V,Out) -> [max(V1',V',Out')] 
1
#### Cost of phase [16]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of phase [16]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of phase [16]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'
it(16) =< V
it(16) =< V-V'

#### Cost of chains of max(V1,V,Out):
* Chain [[16],19]: 1*it(16)+1
  Such that:it(16) =< V1

  with precondition: [V=Out,V1>=1,V>=V1] 

* Chain [[16],18]: 1*it(16)+1
  Such that:it(16) =< V

  with precondition: [V1=Out,V>=1,V1>=V] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [19]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [18]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [20] 

 * loop 20:min(V1,V,Out) -> [min(V1',V',Out')] 
1
#### Cost of phase [20]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of phase [20]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of chains of min(V1,V,Out):
* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< Out

  with precondition: [V=Out,V>=1,V1>=V] 

* Chain [22]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [21]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [23] 

 * loop 23:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [23]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
it(23) =< V
it(23) =< V-V'

#### Cost of phase [23]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
it(23) =< V
it(23) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[23],25]: 1*it(23)+1
  Such that:it(23) =< V

  with precondition: [V1=Out,V>=1,V1>=V] 

* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [25]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [27] 

 * loop 27:transform(V1,Out) -> [transform(V1',Out')] 
1
#### Cost of phase [27]:transform(V1,Out) -> [transform(V1',Out')] 
1*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'

#### Cost of chains of transform(V1,Out):
* Chain [[27],26]: 1*it(27)+1
  Such that:it(27) =< -V1+Out

  with precondition: [Out>=V1+3,2*V1+2>=Out] 

* Chain [26]: 1
  with precondition: [V1+2=Out,V1>=0] 


#### Cost of loops [38,39,41] 

 * loop 38:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*s(8)+1*s(7)+5
  Such that:s(6) =< V1
s(7) =< V1'
s(8) =< s(6)

 * loop 39:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
12
 * loop 41:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
1*s(13)+6
  Such that:s(13) =< V+1

#### Cost of phase [38,39,41]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+0
  Such that:aux(16) =< 2
aux(13) =< 2*V1
s(17) =< 2*V1+3*V
s(17) =< 2*V1+3*V-2*V1'-3*V'
aux(15) =< 2*V1-2*V1'
aux(8) =< 3*V1
aux(10) =< 3*V1-3*V1'
aux(28) =< V1
aux(29) =< V1+V
aux(30) =< V1+V-V1'-V'
aux(31) =< V1-V1'
aux(32) =< V
aux(33) =< V-V'
it(38) =< aux(29)
it(39) =< aux(29)
it(41) =< aux(29)
it(38) =< aux(30)
it(39) =< aux(30)
it(41) =< aux(30)
aux(3) =< aux(32)
aux(3) =< aux(33)
aux(7) =< aux(3)*3
aux(12) =< aux(3)*2
it(38) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(31)
it(39) =< aux(12)+aux(15)
s(15) =< aux(12)+aux(15)
it(39) =< aux(12)+aux(13)
s(15) =< aux(12)+aux(13)
it(39) =< aux(7)+aux(10)
s(16) =< aux(7)+aux(10)
it(39) =< aux(7)+aux(8)
s(16) =< aux(7)+aux(8)
it(38) =< aux(3)+aux(31)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(29)
s(14) =< s(16)

#### Cost of phase [38,39,41]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+0
  Such that:aux(16) =< 2
aux(13) =< 2*V1
s(17) =< 2*V1+3*V
s(17) =< 2*V1+3*V-2*V1'-3*V'
aux(15) =< 2*V1-2*V1'
aux(8) =< 3*V1
aux(10) =< 3*V1-3*V1'
aux(28) =< V1
aux(29) =< V1+V
aux(30) =< V1+V-V1'-V'
aux(31) =< V1-V1'
aux(32) =< V
aux(33) =< V-V'
it(38) =< aux(29)
it(39) =< aux(29)
it(41) =< aux(29)
it(38) =< aux(30)
it(39) =< aux(30)
it(41) =< aux(30)
aux(3) =< aux(32)
aux(3) =< aux(33)
aux(7) =< aux(3)*3
aux(12) =< aux(3)*2
it(38) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(31)
it(39) =< aux(12)+aux(15)
s(15) =< aux(12)+aux(15)
it(39) =< aux(12)+aux(13)
s(15) =< aux(12)+aux(13)
it(39) =< aux(7)+aux(10)
s(16) =< aux(7)+aux(10)
it(39) =< aux(7)+aux(8)
s(16) =< aux(7)+aux(8)
it(38) =< aux(3)+aux(31)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(29)
s(14) =< s(16)

#### Cost of phase [38,39,41]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+0
  Such that:aux(16) =< 2
aux(13) =< 2*V1
s(17) =< 2*V1+3*V
s(17) =< 2*V1+3*V-2*V1'-3*V'
aux(15) =< 2*V1-2*V1'
aux(8) =< 3*V1
aux(10) =< 3*V1-3*V1'
aux(28) =< V1
aux(29) =< V1+V
aux(30) =< V1+V-V1'-V'
aux(31) =< V1-V1'
aux(32) =< V
aux(33) =< V-V'
it(38) =< aux(29)
it(39) =< aux(29)
it(41) =< aux(29)
it(38) =< aux(30)
it(39) =< aux(30)
it(41) =< aux(30)
aux(3) =< aux(32)
aux(3) =< aux(33)
aux(7) =< aux(3)*3
aux(12) =< aux(3)*2
it(38) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(28)
it(39) =< aux(3)+aux(31)
it(39) =< aux(12)+aux(15)
s(15) =< aux(12)+aux(15)
it(39) =< aux(12)+aux(13)
s(15) =< aux(12)+aux(13)
it(39) =< aux(7)+aux(10)
s(16) =< aux(7)+aux(10)
it(39) =< aux(7)+aux(8)
s(16) =< aux(7)+aux(8)
it(38) =< aux(3)+aux(31)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(29)
s(14) =< s(16)

#### Cost of loops [28,29,30,31] 

 * loop 28:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
2*s(76)+4*s(79)+2*s(77)+4*s(78)+1*s(71)+5
  Such that:s(71) =< V+1
s(72) =< V1
s(73) =< V
s(74) =< V1'
s(75) =< V'
s(76) =< s(73)
s(77) =< s(74)
s(78) =< s(75)
s(79) =< s(72)

 * loop 29:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
10*s(135)+14*s(133)+16*s(134)+4*s(132)+2*s(131)+5
  Such that:s(126) =< V1
s(127) =< V
s(128) =< V+1
s(129) =< V1'
s(130) =< V'
s(131) =< s(127)
s(132) =< s(128)
s(133) =< s(129)
s(134) =< s(130)
s(135) =< s(126)

 * loop 30:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
10*s(159)+8*s(161)+2*s(160)+6
  Such that:s(156) =< V1
s(157) =< V1'+2
s(158) =< V'
s(159) =< s(156)
s(160) =< s(157)
s(161) =< s(158)

 * loop 31:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
4*s(186)+8*s(188)+5*s(187)+3*s(189)+6
  Such that:s(182) =< 2*V
s(183) =< V
s(184) =< V+1
s(185) =< V'
s(186) =< s(183)
s(187) =< s(184)
s(188) =< s(185)
s(189) =< s(182)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of phase [28,29,30,31]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(105) =< V1
aux(106) =< V1+V
aux(107) =< V1+V-V1'-V'
aux(108) =< V1-V1'
aux(109) =< V
aux(110) =< V-V'
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(105)
it(28) =< aux(79)+aux(108)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[38,39,41],43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+0
  Such that:aux(16) =< 2
s(17) =< 2*V1+3*V
aux(34) =< V1
aux(35) =< V1+V
aux(36) =< 2*V1
aux(37) =< 3*V1
aux(38) =< V
it(38) =< aux(35)
it(39) =< aux(35)
it(41) =< aux(35)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(34)
it(39) =< aux(38)+aux(34)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(35)
s(14) =< s(16)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[38,39,41],42,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+5
  Such that:aux(42) =< 1
aux(44) =< 2
aux(45) =< V1
aux(46) =< V1+V
aux(47) =< 2*V1
aux(48) =< 2*V1+3*V
aux(49) =< 3*V1
aux(50) =< V
aux(41) =< aux(46)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(44)
it(38) =< aux(46)
it(39) =< aux(46)
it(41) =< aux(46)
aux(7) =< aux(50)*3
aux(12) =< aux(50)*2
it(38) =< aux(50)+aux(45)
it(39) =< aux(50)+aux(45)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(46)
s(14) =< s(16)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[38,39,41],40,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+9
  Such that:aux(16) =< 2
s(17) =< 2*V1+3*V
aux(51) =< V1
aux(52) =< V1+V
aux(53) =< 2*V1
aux(54) =< 3*V1
aux(55) =< V
it(38) =< aux(52)
it(39) =< aux(52)
it(41) =< aux(52)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(51)
it(39) =< aux(55)+aux(51)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(52)
s(14) =< s(16)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[28,29,30,31],[38,39,41],43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(16) =< 2
aux(107) =< 3*V1+2*V
aux(109) =< V
aux(111) =< V1
aux(112) =< V1+V
aux(113) =< 2*V1+3*V
aux(114) =< 3*V1+3*V
aux(115) =< 6*V1+6*V
aux(116) =< 9*V1+9*V
aux(34) =< aux(112)
aux(107) =< aux(113)
aux(34) =< aux(114)
aux(107) =< aux(114)
aux(107) =< aux(115)
aux(107) =< aux(116)
s(17) =< aux(116)
it(38) =< aux(112)
it(39) =< aux(112)
it(41) =< aux(112)
aux(7) =< aux(34)*3
aux(12) =< aux(34)*2
it(38) =< aux(34)+aux(34)
it(39) =< aux(34)+aux(34)
it(39) =< aux(12)+aux(115)
s(15) =< aux(12)+aux(115)
it(39) =< aux(7)+aux(114)
s(16) =< aux(7)+aux(114)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(112)
s(14) =< s(16)
it(28) =< aux(112)
it(30) =< aux(112)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(113)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(112)
aux(93) =< aux(112)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(111)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(112)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[28,29,30,31],[38,39,41],42,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+5
  Such that:aux(42) =< 1
aux(44) =< 2
aux(109) =< V
aux(117) =< V1
aux(118) =< V1+V
aux(119) =< 2*V1+3*V
aux(120) =< 3*V1+3*V
aux(121) =< 6*V1+6*V
aux(122) =< 9*V1+9*V
aux(45) =< aux(118)
aux(48) =< aux(119)
aux(107) =< aux(119)
aux(45) =< aux(120)
aux(48) =< aux(121)
aux(48) =< aux(122)
aux(107) =< aux(122)
aux(41) =< aux(118)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(44)
it(38) =< aux(118)
it(39) =< aux(118)
it(41) =< aux(118)
aux(7) =< aux(120)*3
aux(12) =< aux(120)*2
it(38) =< aux(120)+aux(45)
it(39) =< aux(120)+aux(45)
it(39) =< aux(12)+aux(121)
s(15) =< aux(12)+aux(121)
it(39) =< aux(7)+aux(122)
s(16) =< aux(7)+aux(122)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(118)
s(14) =< s(16)
it(28) =< aux(118)
it(30) =< aux(118)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(119)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(118)
aux(93) =< aux(118)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(117)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(118)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[28,29,30,31],[38,39,41],40,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+9
  Such that:aux(16) =< 2
aux(107) =< 3*V1+2*V
aux(109) =< V
aux(123) =< V1
aux(124) =< V1+V
aux(125) =< 2*V1+3*V
aux(126) =< 3*V1+3*V
aux(127) =< 6*V1+6*V
aux(128) =< 9*V1+9*V
aux(51) =< aux(124)
aux(107) =< aux(125)
aux(51) =< aux(126)
aux(107) =< aux(126)
aux(107) =< aux(127)
aux(107) =< aux(128)
s(17) =< aux(128)
it(38) =< aux(124)
it(39) =< aux(124)
it(41) =< aux(124)
aux(7) =< aux(51)*3
aux(12) =< aux(51)*2
it(38) =< aux(51)+aux(51)
it(39) =< aux(51)+aux(51)
it(39) =< aux(12)+aux(127)
s(15) =< aux(12)+aux(127)
it(39) =< aux(7)+aux(126)
s(16) =< aux(7)+aux(126)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(124)
s(14) =< s(16)
it(28) =< aux(124)
it(30) =< aux(124)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(125)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(124)
aux(93) =< aux(124)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(123)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(124)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[28,29,30,31],43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+0
  Such that:aux(129) =< V1
aux(130) =< V1+V
aux(131) =< V
it(28) =< aux(130)
it(30) =< aux(130)
aux(87) =< aux(131)
aux(85) =< aux(131)+1
aux(90) =< aux(130)
aux(93) =< aux(130)-1
aux(86) =< aux(131)*2
it(28) =< aux(131)+aux(129)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(131)
s(195) =< it(28)*aux(130)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[28,29,30,31],42,43]: 16*it(28)+6*it(30)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+5
  Such that:aux(132) =< V1
aux(133) =< V1+V
aux(134) =< V1+V+1
aux(135) =< V
aux(136) =< V+1
aux(41) =< aux(133)
aux(42) =< aux(133)
aux(43) =< aux(133)
aux(41) =< aux(134)
aux(43) =< aux(134)
aux(42) =< aux(135)
aux(43) =< aux(136)
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)
it(28) =< aux(133)
it(30) =< aux(133)
it(28) =< aux(134)
it(30) =< aux(134)
aux(79) =< aux(135)
aux(79) =< aux(136)
aux(87) =< aux(135)
aux(85) =< aux(135)+1
aux(90) =< aux(133)
aux(93) =< aux(133)-1
aux(86) =< aux(135)*2
it(28) =< aux(79)+aux(132)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(135)
s(195) =< it(28)*aux(133)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[28,29,30,31],37,43]: 16*it(28)+51*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+7*s(231)+3*s(263)+5
  Such that:aux(141) =< V1+V+1
aux(144) =< V1
aux(145) =< V1+V
aux(146) =< V
aux(140) =< aux(145)
aux(140) =< aux(146)
it(30) =< aux(145)
s(263) =< aux(140)
s(231) =< aux(141)
it(28) =< aux(145)
aux(87) =< aux(146)
aux(85) =< aux(146)+1
aux(90) =< aux(145)
aux(93) =< aux(145)-1
aux(86) =< aux(146)*2
it(28) =< aux(146)+aux(144)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(146)
s(195) =< it(28)*aux(145)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],36,43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+12*s(278)+4*s(283)+2*s(287)+5
  Such that:aux(109) =< V
aux(110) =< V+1
aux(152) =< V1
aux(153) =< V1+V
aux(154) =< V1+V+1
aux(147) =< aux(153)
aux(147) =< aux(154)
s(278) =< aux(153)
s(287) =< aux(154)
s(283) =< aux(147)
it(28) =< aux(153)
it(30) =< aux(153)
it(28) =< aux(154)
it(30) =< aux(154)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(153)
aux(93) =< aux(153)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(152)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(153)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],35,[38,39,41],43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+4*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+6
  Such that:aux(38) =< 1
aux(16) =< 2
aux(158) =< V1+V+1
aux(158) =< 2*V1+2*V+3
aux(37) =< 6*V1+6*V
aux(109) =< V
aux(110) =< 2*V
aux(160) =< V1
aux(161) =< V1+V
aux(162) =< 2*V1+2*V
aux(163) =< 2*V1+2*V+1
aux(157) =< aux(161)
aux(158) =< aux(161)
aux(157) =< aux(163)
s(17) =< aux(163)
it(38) =< aux(162)
it(39) =< aux(162)
it(41) =< aux(162)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(162)
it(39) =< aux(38)+aux(162)
it(39) =< aux(12)+aux(162)
s(15) =< aux(12)+aux(162)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(162)
s(14) =< s(16)
s(296) =< aux(157)
s(299) =< aux(158)
it(28) =< aux(161)
it(30) =< aux(161)
it(28) =< aux(163)
it(30) =< aux(163)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(161)
aux(93) =< aux(161)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(160)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(161)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],35,[38,39,41],42,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+9*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+11
  Such that:aux(164) =< 1
aux(44) =< 2
aux(158) =< V1+V+1
aux(48) =< 2*V1+2*V+1
aux(49) =< 6*V1+6*V
aux(109) =< V
aux(110) =< 2*V
aux(166) =< V1
aux(167) =< V1+V
aux(168) =< 2*V1+2*V
aux(107) =< aux(167)
aux(107) =< aux(168)
aux(41) =< aux(168)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(164)
s(18) =< aux(44)
it(38) =< aux(168)
it(39) =< aux(168)
it(41) =< aux(168)
aux(7) =< aux(164)*3
aux(12) =< aux(164)*2
it(38) =< aux(164)+aux(168)
it(39) =< aux(164)+aux(168)
it(39) =< aux(12)+aux(168)
s(15) =< aux(12)+aux(168)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(168)
s(14) =< s(16)
s(296) =< aux(167)
s(299) =< aux(158)
it(28) =< aux(167)
it(30) =< aux(167)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(167)
aux(93) =< aux(167)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(166)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(167)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[28,29,30,31],35,[38,39,41],40,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+4*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+15
  Such that:aux(55) =< 1
aux(16) =< 2
aux(158) =< V1+V+1
aux(158) =< 2*V1+2*V+3
aux(54) =< 6*V1+6*V
aux(109) =< V
aux(110) =< 2*V
aux(170) =< V1
aux(171) =< V1+V
aux(172) =< 2*V1+2*V
aux(173) =< 2*V1+2*V+1
aux(157) =< aux(171)
aux(158) =< aux(171)
aux(157) =< aux(173)
s(17) =< aux(173)
it(38) =< aux(172)
it(39) =< aux(172)
it(41) =< aux(172)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(172)
it(39) =< aux(55)+aux(172)
it(39) =< aux(12)+aux(172)
s(15) =< aux(12)+aux(172)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(172)
s(14) =< s(16)
s(296) =< aux(157)
s(299) =< aux(158)
it(28) =< aux(171)
it(30) =< aux(171)
it(28) =< aux(173)
it(30) =< aux(173)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(171)
aux(93) =< aux(171)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(170)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(171)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[28,29,30,31],35,43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+3*s(306)+6
  Such that:aux(158) =< V+1
aux(174) =< V1
aux(175) =< V1+V
aux(176) =< V
aux(177) =< 2*V
aux(110) =< aux(176)
aux(110) =< aux(177)
s(296) =< aux(176)
s(299) =< aux(158)
s(306) =< aux(177)
it(28) =< aux(175)
it(30) =< aux(175)
aux(79) =< aux(176)
aux(79) =< aux(110)
aux(87) =< aux(176)
aux(85) =< aux(176)+1
aux(90) =< aux(175)
aux(93) =< aux(175)-1
aux(86) =< aux(176)*2
it(28) =< aux(79)+aux(174)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(176)
s(195) =< it(28)*aux(175)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],35,42,43]: 16*it(28)+6*it(30)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+3*s(306)+11
  Such that:aux(42) =< 1
aux(43) =< 2
aux(109) =< V
aux(110) =< 2*V
aux(178) =< V1
aux(179) =< V1+V
aux(180) =< V1+V+1
aux(181) =< 2*V1+2*V
aux(41) =< aux(179)
aux(41) =< aux(180)
aux(107) =< aux(180)
aux(41) =< aux(181)
aux(107) =< aux(181)
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)
s(296) =< aux(179)
s(299) =< aux(180)
s(306) =< aux(181)
it(28) =< aux(179)
it(30) =< aux(179)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(179)
aux(93) =< aux(179)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(178)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(179)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],35,40,43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(296)+5*s(299)+3*s(306)+15
  Such that:aux(158) =< V+1
aux(182) =< V1
aux(183) =< V1+V
aux(184) =< V
aux(185) =< 2*V
aux(110) =< aux(184)
aux(110) =< aux(185)
s(296) =< aux(184)
s(299) =< aux(158)
s(306) =< aux(185)
it(28) =< aux(183)
it(30) =< aux(183)
aux(79) =< aux(184)
aux(79) =< aux(110)
aux(87) =< aux(184)
aux(85) =< aux(184)+1
aux(90) =< aux(183)
aux(93) =< aux(183)-1
aux(86) =< aux(184)*2
it(28) =< aux(79)+aux(182)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(184)
s(195) =< it(28)*aux(183)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],34,[38,39,41],43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+6
  Such that:aux(38) =< 1
aux(16) =< 2
aux(109) =< V
aux(110) =< 3*V
aux(191) =< V1
aux(192) =< V1+V
aux(193) =< V1+V+1
aux(194) =< 2*V1+2*V
aux(195) =< 2*V1+2*V+1
aux(196) =< 3*V1+3*V
aux(188) =< aux(192)
aux(188) =< aux(193)
aux(107) =< aux(194)
aux(188) =< aux(194)
aux(107) =< aux(195)
aux(188) =< aux(195)
s(17) =< aux(195)
aux(107) =< aux(196)
aux(188) =< aux(196)
it(38) =< aux(192)
it(39) =< aux(192)
it(41) =< aux(192)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(192)
it(39) =< aux(38)+aux(192)
it(39) =< aux(12)+aux(194)
s(15) =< aux(12)+aux(194)
it(39) =< aux(7)+aux(196)
s(16) =< aux(7)+aux(196)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(192)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(193)
it(28) =< aux(192)
it(30) =< aux(192)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(192)
aux(93) =< aux(192)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(191)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(192)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],34,[38,39,41],42,43]: 16*it(28)+12*it(30)+5*it(38)+12*it(39)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+11
  Such that:aux(197) =< 1
aux(44) =< 2
aux(48) =< 2*V1+2*V+1
aux(49) =< 3*V1+3*V
aux(109) =< V
aux(110) =< 3*V
aux(199) =< V1
aux(200) =< V1+V
aux(201) =< V1+V+1
aux(202) =< 2*V1+2*V
aux(188) =< aux(200)
aux(188) =< aux(201)
aux(188) =< aux(202)
aux(41) =< aux(200)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(197)
s(18) =< aux(44)
it(38) =< aux(200)
it(39) =< aux(200)
it(30) =< aux(200)
aux(7) =< aux(197)*3
aux(12) =< aux(197)*2
it(38) =< aux(197)+aux(200)
it(39) =< aux(197)+aux(200)
it(39) =< aux(12)+aux(202)
s(15) =< aux(12)+aux(202)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(200)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(201)
it(28) =< aux(200)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(200)
aux(93) =< aux(200)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(199)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(200)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [[28,29,30,31],34,[38,39,41],40,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+15
  Such that:aux(55) =< 1
aux(16) =< 2
aux(54) =< 3*V1+3*V
aux(109) =< V
aux(110) =< 3*V
aux(204) =< V1
aux(205) =< V1+V
aux(206) =< V1+V+1
aux(207) =< 2*V1+2*V
aux(208) =< 2*V1+2*V+1
aux(107) =< aux(205)
aux(188) =< aux(205)
aux(188) =< aux(206)
aux(188) =< aux(207)
aux(107) =< aux(208)
aux(188) =< aux(208)
s(17) =< aux(208)
it(38) =< aux(205)
it(39) =< aux(205)
it(41) =< aux(205)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(205)
it(39) =< aux(55)+aux(205)
it(39) =< aux(12)+aux(207)
s(15) =< aux(12)+aux(207)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(205)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(206)
it(28) =< aux(205)
it(30) =< aux(205)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(205)
aux(93) =< aux(205)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(204)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(205)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [[28,29,30,31],34,43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+6
  Such that:aux(106) =< V1+V
aux(109) =< V
aux(110) =< V+1
aux(209) =< V1
aux(210) =< V1+V+1
aux(188) =< aux(209)
aux(188) =< aux(210)
s(308) =< aux(188)
s(314) =< aux(210)
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(210)
it(30) =< aux(210)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(209)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],34,42,43]: 16*it(28)+6*it(30)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+11
  Such that:aux(42) =< 1
aux(43) =< 2
aux(110) =< V+1
aux(211) =< V1
aux(212) =< V1+V
aux(213) =< V1+V+1
aux(214) =< V
aux(41) =< aux(212)
aux(188) =< aux(212)
aux(188) =< aux(213)
aux(41) =< aux(214)
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)
s(308) =< aux(188)
s(314) =< aux(213)
it(28) =< aux(212)
it(30) =< aux(212)
it(28) =< aux(213)
it(30) =< aux(213)
aux(79) =< aux(214)
aux(79) =< aux(110)
aux(87) =< aux(214)
aux(85) =< aux(214)+1
aux(90) =< aux(212)
aux(93) =< aux(212)-1
aux(86) =< aux(214)*2
it(28) =< aux(79)+aux(211)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(214)
s(195) =< it(28)*aux(212)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],34,40,43]: 16*it(28)+6*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(308)+2*s(314)+15
  Such that:aux(106) =< V1+V
aux(109) =< V
aux(110) =< V+1
aux(215) =< V1
aux(216) =< V1+V+1
aux(188) =< aux(215)
aux(188) =< aux(216)
s(308) =< aux(188)
s(314) =< aux(216)
it(28) =< aux(106)
it(30) =< aux(106)
it(28) =< aux(216)
it(30) =< aux(216)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(106)
aux(93) =< aux(106)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(215)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(106)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],33,[38,39,41],43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+12*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+5
  Such that:aux(38) =< 1
aux(16) =< 2
aux(36) =< 2*V1+2*V
aux(221) =< V1
aux(222) =< V1+V
aux(223) =< 2*V1+2*V+1
aux(224) =< 2*V1+2*V+3
aux(225) =< 3*V1+3*V
aux(226) =< V
aux(218) =< aux(222)
aux(107) =< aux(223)
aux(218) =< aux(223)
s(17) =< aux(223)
aux(107) =< aux(224)
s(325) =< aux(224)
aux(218) =< aux(225)
it(38) =< aux(222)
it(39) =< aux(222)
it(41) =< aux(222)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(222)
it(39) =< aux(38)+aux(222)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(225)
s(16) =< aux(7)+aux(225)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(222)
s(14) =< s(16)
s(320) =< aux(218)
it(28) =< aux(222)
it(30) =< aux(222)
it(28) =< aux(107)
it(30) =< aux(107)
aux(87) =< aux(226)
aux(85) =< aux(226)+1
aux(90) =< aux(222)
aux(93) =< aux(222)-1
aux(86) =< aux(226)*2
it(28) =< aux(226)+aux(221)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(226)
s(195) =< it(28)*aux(222)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],33,[38,39,41],42,43]: 16*it(28)+18*it(30)+5*it(38)+12*it(39)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+10
  Such that:aux(227) =< 1
aux(44) =< 2
s(325) =< V1+V+1
aux(47) =< 2*V1+2*V
aux(48) =< 2*V1+2*V+1
aux(229) =< V1
aux(230) =< V1+V
aux(231) =< 3*V1+3*V
aux(232) =< V
aux(218) =< aux(230)
aux(218) =< aux(231)
aux(41) =< aux(230)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(227)
s(18) =< aux(44)
it(38) =< aux(230)
it(39) =< aux(230)
it(30) =< aux(230)
aux(7) =< aux(227)*3
aux(12) =< aux(227)*2
it(38) =< aux(227)+aux(230)
it(39) =< aux(227)+aux(230)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(231)
s(16) =< aux(7)+aux(231)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(230)
s(14) =< s(16)
s(320) =< aux(218)
it(28) =< aux(230)
aux(87) =< aux(232)
aux(85) =< aux(232)+1
aux(90) =< aux(230)
aux(93) =< aux(230)-1
aux(86) =< aux(232)*2
it(28) =< aux(232)+aux(229)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(232)
s(195) =< it(28)*aux(230)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[28,29,30,31],33,[38,39,41],40,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+12*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+14
  Such that:aux(55) =< 1
aux(16) =< 2
aux(53) =< 2*V1+2*V
aux(234) =< V1
aux(235) =< V1+V
aux(236) =< 2*V1+2*V+1
aux(237) =< 2*V1+2*V+3
aux(238) =< 3*V1+3*V
aux(239) =< V
aux(218) =< aux(235)
aux(107) =< aux(236)
aux(218) =< aux(236)
s(17) =< aux(236)
aux(107) =< aux(237)
s(325) =< aux(237)
aux(218) =< aux(238)
it(38) =< aux(235)
it(39) =< aux(235)
it(41) =< aux(235)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(235)
it(39) =< aux(55)+aux(235)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(238)
s(16) =< aux(7)+aux(238)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(235)
s(14) =< s(16)
s(320) =< aux(218)
it(28) =< aux(235)
it(30) =< aux(235)
it(28) =< aux(107)
it(30) =< aux(107)
aux(87) =< aux(239)
aux(85) =< aux(239)+1
aux(90) =< aux(235)
aux(93) =< aux(235)-1
aux(86) =< aux(239)*2
it(28) =< aux(239)+aux(234)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(239)
s(195) =< it(28)*aux(235)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=6] 

* Chain [[28,29,30,31],33,43]: 16*it(28)+12*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+5
  Such that:s(325) =< V1+V+1
aux(241) =< V1
aux(242) =< V1+V
aux(243) =< V
aux(218) =< aux(242)
aux(218) =< aux(243)
s(320) =< aux(218)
it(30) =< aux(242)
it(28) =< aux(242)
aux(87) =< aux(243)
aux(85) =< aux(243)+1
aux(90) =< aux(242)
aux(93) =< aux(242)-1
aux(86) =< aux(243)*2
it(28) =< aux(243)+aux(241)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(243)
s(195) =< it(28)*aux(242)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],33,42,43]: 16*it(28)+32*it(30)+10*s(18)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+10
  Such that:aux(42) =< 1
aux(43) =< 2
s(325) =< V1+V+1
aux(245) =< V1
aux(246) =< V1+V
aux(247) =< V
aux(218) =< aux(246)
aux(218) =< aux(247)
it(30) =< aux(246)
s(26) =< aux(42)
s(18) =< aux(43)
s(320) =< aux(218)
it(28) =< aux(246)
aux(87) =< aux(247)
aux(85) =< aux(247)+1
aux(90) =< aux(246)
aux(93) =< aux(246)-1
aux(86) =< aux(247)*2
it(28) =< aux(247)+aux(245)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(247)
s(195) =< it(28)*aux(246)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],33,40,43]: 16*it(28)+12*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+2*s(320)+1*s(325)+14
  Such that:s(325) =< V1+V+1
aux(249) =< V1
aux(250) =< V1+V
aux(251) =< V
aux(218) =< aux(250)
aux(218) =< aux(251)
s(320) =< aux(218)
it(30) =< aux(250)
it(28) =< aux(250)
aux(87) =< aux(251)
aux(85) =< aux(251)+1
aux(90) =< aux(250)
aux(93) =< aux(250)-1
aux(86) =< aux(251)*2
it(28) =< aux(251)+aux(249)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(251)
s(195) =< it(28)*aux(250)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],32,[38,39,41],43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+22*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(329)+4*s(334)+5
  Such that:aux(38) =< 1
aux(16) =< 2
aux(37) =< 3*V1+3*V
aux(109) =< V
aux(110) =< 3*V
aux(261) =< V1
aux(262) =< V1+V
aux(263) =< V1+V+1
aux(264) =< 2*V1+2*V
aux(265) =< 2*V1+2*V+1
aux(107) =< aux(262)
aux(256) =< aux(262)
aux(256) =< aux(263)
aux(256) =< aux(264)
aux(107) =< aux(265)
aux(256) =< aux(265)
s(17) =< aux(265)
it(38) =< aux(262)
it(39) =< aux(262)
it(41) =< aux(262)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(262)
it(39) =< aux(38)+aux(262)
it(39) =< aux(12)+aux(264)
s(15) =< aux(12)+aux(264)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(262)
s(14) =< s(16)
s(334) =< aux(263)
s(329) =< aux(256)
it(28) =< aux(262)
it(30) =< aux(262)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(262)
aux(93) =< aux(262)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(261)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(262)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],32,[38,39,41],42,43]: 16*it(28)+28*it(30)+5*it(38)+12*it(39)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(329)+4*s(334)+10
  Such that:aux(266) =< 1
aux(44) =< 2
aux(48) =< 2*V1+2*V+1
aux(49) =< 3*V1+3*V
aux(109) =< V
aux(110) =< 2*V+1
aux(268) =< V1
aux(269) =< V1+V
aux(270) =< V1+V+1
aux(271) =< 2*V1+2*V
aux(256) =< aux(269)
aux(256) =< aux(270)
aux(256) =< aux(271)
aux(41) =< aux(269)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(266)
s(18) =< aux(44)
it(38) =< aux(269)
it(39) =< aux(269)
it(30) =< aux(269)
aux(7) =< aux(266)*3
aux(12) =< aux(266)*2
it(38) =< aux(266)+aux(269)
it(39) =< aux(266)+aux(269)
it(39) =< aux(12)+aux(271)
s(15) =< aux(12)+aux(271)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(269)
s(14) =< s(16)
s(334) =< aux(270)
s(329) =< aux(256)
it(28) =< aux(269)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(269)
aux(93) =< aux(269)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(268)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(269)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[28,29,30,31],32,[38,39,41],40,43]: 16*it(28)+6*it(30)+5*it(38)+12*it(39)+22*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+10*s(329)+4*s(334)+14
  Such that:aux(55) =< 1
aux(16) =< 2
aux(54) =< 3*V1+3*V
aux(109) =< V
aux(110) =< 3*V
aux(273) =< V1
aux(274) =< V1+V
aux(275) =< V1+V+1
aux(276) =< 2*V1+2*V
aux(277) =< 2*V1+2*V+1
aux(107) =< aux(274)
aux(256) =< aux(274)
aux(256) =< aux(275)
aux(256) =< aux(276)
aux(107) =< aux(277)
aux(256) =< aux(277)
s(17) =< aux(277)
it(38) =< aux(274)
it(39) =< aux(274)
it(41) =< aux(274)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(274)
it(39) =< aux(55)+aux(274)
it(39) =< aux(12)+aux(276)
s(15) =< aux(12)+aux(276)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(274)
s(14) =< s(16)
s(334) =< aux(275)
s(329) =< aux(256)
it(28) =< aux(274)
it(30) =< aux(274)
it(28) =< aux(107)
it(30) =< aux(107)
aux(79) =< aux(109)
aux(79) =< aux(110)
aux(87) =< aux(109)
aux(85) =< aux(109)+1
aux(90) =< aux(274)
aux(93) =< aux(274)-1
aux(86) =< aux(109)*2
it(28) =< aux(79)+aux(273)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(109)
s(195) =< it(28)*aux(274)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=3,V>=3,V+V1>=7] 

* Chain [[28,29,30,31],32,43]: 16*it(28)+30*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(334)+2*s(343)+5
  Such that:aux(258) =< V1+V+1
aux(279) =< V1
aux(280) =< V1+V
aux(281) =< V
aux(257) =< aux(280)
aux(257) =< aux(281)
s(343) =< aux(257)
s(334) =< aux(258)
it(30) =< aux(280)
it(28) =< aux(280)
aux(87) =< aux(281)
aux(85) =< aux(281)+1
aux(90) =< aux(280)
aux(93) =< aux(280)-1
aux(86) =< aux(281)*2
it(28) =< aux(281)+aux(279)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(281)
s(195) =< it(28)*aux(280)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],32,42,43]: 16*it(28)+50*it(30)+10*s(18)+8*s(26)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(334)+2*s(343)+10
  Such that:aux(42) =< 1
aux(43) =< 2
aux(258) =< V1+V+1
aux(283) =< V1
aux(284) =< V1+V
aux(285) =< V
aux(257) =< aux(284)
aux(257) =< aux(285)
it(30) =< aux(284)
s(26) =< aux(42)
s(18) =< aux(43)
s(343) =< aux(257)
s(334) =< aux(258)
it(28) =< aux(284)
aux(87) =< aux(285)
aux(85) =< aux(285)+1
aux(90) =< aux(284)
aux(93) =< aux(284)-1
aux(86) =< aux(285)*2
it(28) =< aux(285)+aux(283)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(285)
s(195) =< it(28)*aux(284)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [[28,29,30,31],32,40,43]: 16*it(28)+30*it(30)+2*s(190)+4*s(191)+2*s(192)+18*s(193)+1*s(194)+26*s(199)+14*s(200)+9*s(202)+18*s(209)+2*s(211)+3*s(218)+4*s(334)+2*s(343)+14
  Such that:aux(258) =< V1+V+1
aux(287) =< V1
aux(288) =< V1+V
aux(289) =< V
aux(257) =< aux(288)
aux(257) =< aux(289)
s(343) =< aux(257)
s(334) =< aux(258)
it(30) =< aux(288)
it(28) =< aux(288)
aux(87) =< aux(289)
aux(85) =< aux(289)+1
aux(90) =< aux(288)
aux(93) =< aux(288)-1
aux(86) =< aux(289)*2
it(28) =< aux(289)+aux(287)
s(212) =< it(30)*aux(90)
s(213) =< it(30)*aux(85)
aux(103) =< it(28)*aux(87)
s(207) =< it(28)*aux(85)
s(204) =< it(28)*aux(90)
s(206) =< it(28)*aux(93)
s(197) =< it(28)*aux(86)
s(194) =< it(28)*aux(85)
s(198) =< it(28)*aux(289)
s(195) =< it(28)*aux(288)
s(219) =< aux(103)*2
s(193) =< aux(103)
s(202) =< s(207)
s(218) =< s(219)
s(209) =< s(212)
s(211) =< s(213)
s(200) =< s(206)
s(199) =< s(204)
s(190) =< s(198)
s(192) =< s(197)
s(191) =< s(195)

  with precondition: [Out=0,V1>=2,V>=2,V+V1>=5] 

* Chain [43]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [42,43]: 10*s(18)+20*s(20)+8*s(26)+5
  Such that:aux(41) =< V1
aux(42) =< V
aux(43) =< V+1
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [40,43]: 9
  with precondition: [V=1,Out=0,V1>=1] 

* Chain [37,43]: 45*s(224)+7*s(231)+3*s(263)+5
  Such that:aux(140) =< V
aux(141) =< V+1
aux(143) =< V1
s(224) =< aux(143)
s(263) =< aux(140)
s(231) =< aux(141)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [36,43]: 12*s(278)+4*s(283)+2*s(287)+5
  Such that:aux(147) =< V1
aux(149) =< V+1
aux(151) =< V
s(278) =< aux(151)
s(287) =< aux(149)
s(283) =< aux(147)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [35,[38,39,41],43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+4*s(296)+5*s(299)+3*s(306)+6
  Such that:aux(38) =< 1
aux(16) =< 2
aux(36) =< 2*V1
s(17) =< 2*V1+1
aux(37) =< 3*V1
aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
aux(159) =< V1
it(38) =< aux(159)
it(39) =< aux(159)
it(41) =< aux(159)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(159)
it(39) =< aux(38)+aux(159)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(159)
s(14) =< s(16)
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [35,[38,39,41],42,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+4*s(296)+5*s(299)+3*s(306)+11
  Such that:aux(44) =< 2
aux(47) =< 2*V1
aux(48) =< 2*V1+1
aux(49) =< 3*V1
aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
aux(164) =< 1
aux(165) =< V1
aux(41) =< aux(165)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(164)
s(18) =< aux(44)
it(38) =< aux(165)
it(39) =< aux(165)
it(41) =< aux(165)
aux(7) =< aux(164)*3
aux(12) =< aux(164)*2
it(38) =< aux(164)+aux(165)
it(39) =< aux(164)+aux(165)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(165)
s(14) =< s(16)
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [35,[38,39,41],40,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+4*s(296)+5*s(299)+3*s(306)+15
  Such that:aux(55) =< 1
aux(16) =< 2
aux(53) =< 2*V1
s(17) =< 2*V1+1
aux(54) =< 3*V1
aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
aux(169) =< V1
it(38) =< aux(169)
it(39) =< aux(169)
it(41) =< aux(169)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(169)
it(39) =< aux(55)+aux(169)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(169)
s(14) =< s(16)
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [35,43]: 4*s(296)+5*s(299)+3*s(306)+6
  Such that:aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [35,42,43]: 10*s(18)+20*s(20)+8*s(26)+4*s(296)+5*s(299)+3*s(306)+11
  Such that:aux(42) =< 1
aux(43) =< 2
aux(41) =< V1
aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [35,40,43]: 4*s(296)+5*s(299)+3*s(306)+15
  Such that:aux(157) =< V
aux(158) =< V+1
aux(156) =< 2*V
s(296) =< aux(157)
s(299) =< aux(158)
s(306) =< aux(156)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [34,[38,39,41],43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(308)+2*s(314)+6
  Such that:aux(38) =< 1
aux(16) =< 2
aux(188) =< V1
aux(189) =< V+1
aux(36) =< 2*V
s(17) =< 2*V+1
aux(37) =< 3*V
aux(190) =< V
it(38) =< aux(190)
it(39) =< aux(190)
it(41) =< aux(190)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(190)
it(39) =< aux(38)+aux(190)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(190)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [34,[38,39,41],42,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+10*s(308)+2*s(314)+11
  Such that:aux(44) =< 2
aux(188) =< V1
aux(189) =< V+1
aux(47) =< 2*V
aux(48) =< 2*V+1
aux(49) =< 3*V
aux(197) =< 1
aux(198) =< V
aux(41) =< aux(198)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(197)
s(18) =< aux(44)
it(38) =< aux(198)
it(39) =< aux(198)
it(41) =< aux(198)
aux(7) =< aux(197)*3
aux(12) =< aux(197)*2
it(38) =< aux(197)+aux(198)
it(39) =< aux(197)+aux(198)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(198)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=3,V>=V1] 

* Chain [34,[38,39,41],40,43]: 5*it(38)+12*it(39)+6*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(308)+2*s(314)+15
  Such that:aux(55) =< 1
aux(16) =< 2
aux(188) =< V1
aux(189) =< V+1
aux(53) =< 2*V
s(17) =< 2*V+1
aux(54) =< 3*V
aux(203) =< V
it(38) =< aux(203)
it(39) =< aux(203)
it(41) =< aux(203)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(203)
it(39) =< aux(55)+aux(203)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(203)
s(14) =< s(16)
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=3,V>=V1] 

* Chain [34,43]: 10*s(308)+2*s(314)+6
  Such that:aux(188) =< V1
aux(189) =< V+1
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [34,42,43]: 10*s(18)+20*s(20)+8*s(26)+10*s(308)+2*s(314)+11
  Such that:aux(42) =< 1
aux(43) =< 2
aux(188) =< V1
aux(41) =< V
aux(189) =< V+1
s(20) =< aux(41)
s(26) =< aux(42)
s(18) =< aux(43)
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [34,40,43]: 10*s(308)+2*s(314)+15
  Such that:aux(188) =< V1
aux(189) =< V+1
s(308) =< aux(188)
s(314) =< aux(189)

  with precondition: [Out=0,V1>=2,V>=V1] 

* Chain [33,[38,39,41],43]: 5*it(38)+12*it(39)+12*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(320)+1*s(325)+5
  Such that:aux(38) =< 1
aux(16) =< 2
aux(36) =< 2*V1
s(17) =< 2*V1+1
aux(37) =< 3*V1
aux(218) =< V
s(325) =< V+1
aux(220) =< V1
it(38) =< aux(220)
it(39) =< aux(220)
it(41) =< aux(220)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(220)
it(39) =< aux(38)+aux(220)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(220)
s(14) =< s(16)
s(320) =< aux(218)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [33,[38,39,41],42,43]: 5*it(38)+12*it(39)+12*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+2*s(320)+1*s(325)+10
  Such that:aux(44) =< 2
aux(47) =< 2*V1
aux(48) =< 2*V1+1
aux(49) =< 3*V1
aux(218) =< V
s(325) =< V+1
aux(227) =< 1
aux(228) =< V1
aux(41) =< aux(228)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(227)
s(18) =< aux(44)
it(38) =< aux(228)
it(39) =< aux(228)
it(41) =< aux(228)
aux(7) =< aux(227)*3
aux(12) =< aux(227)*2
it(38) =< aux(227)+aux(228)
it(39) =< aux(227)+aux(228)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(228)
s(14) =< s(16)
s(320) =< aux(218)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [33,[38,39,41],40,43]: 5*it(38)+12*it(39)+12*it(41)+2*s(14)+1*s(15)+1*s(17)+2*s(320)+1*s(325)+14
  Such that:aux(55) =< 1
aux(16) =< 2
aux(53) =< 2*V1
s(17) =< 2*V1+1
aux(54) =< 3*V1
aux(218) =< V
s(325) =< V+1
aux(233) =< V1
it(38) =< aux(233)
it(39) =< aux(233)
it(41) =< aux(233)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(233)
it(39) =< aux(55)+aux(233)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(233)
s(14) =< s(16)
s(320) =< aux(218)

  with precondition: [Out=0,V1>=3,V>=2,V1>=V] 

* Chain [33,43]: 2*s(320)+6*s(322)+1*s(325)+5
  Such that:aux(218) =< V
s(325) =< V+1
aux(240) =< V1
s(320) =< aux(218)
s(322) =< aux(240)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [33,42,43]: 10*s(18)+26*s(20)+8*s(26)+2*s(320)+1*s(325)+10
  Such that:aux(42) =< 1
aux(43) =< 2
aux(218) =< V
s(325) =< V+1
aux(244) =< V1
s(20) =< aux(244)
s(26) =< aux(42)
s(18) =< aux(43)
s(320) =< aux(218)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [33,40,43]: 2*s(320)+6*s(322)+1*s(325)+14
  Such that:aux(218) =< V
s(325) =< V+1
aux(248) =< V1
s(320) =< aux(218)
s(322) =< aux(248)

  with precondition: [Out=0,V>=2,V1>=V] 

* Chain [32,[38,39,41],43]: 5*it(38)+12*it(39)+22*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(329)+4*s(334)+5
  Such that:aux(38) =< 1
aux(16) =< 2
aux(256) =< V1
aux(258) =< V+1
aux(36) =< 2*V
s(17) =< 2*V+1
aux(37) =< 3*V
aux(260) =< V
it(38) =< aux(260)
it(39) =< aux(260)
it(41) =< aux(260)
aux(7) =< aux(38)*3
aux(12) =< aux(38)*2
it(38) =< aux(38)+aux(260)
it(39) =< aux(38)+aux(260)
it(39) =< aux(12)+aux(36)
s(15) =< aux(12)+aux(36)
it(39) =< aux(7)+aux(37)
s(16) =< aux(7)+aux(37)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(260)
s(14) =< s(16)
s(334) =< aux(258)
s(329) =< aux(256)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,[38,39,41],42,43]: 5*it(38)+12*it(39)+22*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(18)+20*s(20)+8*s(26)+10*s(329)+4*s(334)+10
  Such that:aux(44) =< 2
aux(256) =< V1
aux(258) =< V+1
aux(47) =< 2*V
aux(48) =< 2*V+1
aux(49) =< 3*V
aux(266) =< 1
aux(267) =< V
aux(41) =< aux(267)
aux(41) =< aux(48)
s(17) =< aux(48)
s(20) =< aux(41)
s(26) =< aux(266)
s(18) =< aux(44)
it(38) =< aux(267)
it(39) =< aux(267)
it(41) =< aux(267)
aux(7) =< aux(266)*3
aux(12) =< aux(266)*2
it(38) =< aux(266)+aux(267)
it(39) =< aux(266)+aux(267)
it(39) =< aux(12)+aux(47)
s(15) =< aux(12)+aux(47)
it(39) =< aux(7)+aux(49)
s(16) =< aux(7)+aux(49)
s(15) =< it(38)*aux(44)
s(16) =< it(38)*aux(267)
s(14) =< s(16)
s(334) =< aux(258)
s(329) =< aux(256)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [32,[38,39,41],40,43]: 5*it(38)+12*it(39)+22*it(41)+2*s(14)+1*s(15)+1*s(17)+10*s(329)+4*s(334)+14
  Such that:aux(55) =< 1
aux(16) =< 2
aux(256) =< V1
aux(258) =< V+1
aux(53) =< 2*V
s(17) =< 2*V+1
aux(54) =< 3*V
aux(272) =< V
it(38) =< aux(272)
it(39) =< aux(272)
it(41) =< aux(272)
aux(7) =< aux(55)*3
aux(12) =< aux(55)*2
it(38) =< aux(55)+aux(272)
it(39) =< aux(55)+aux(272)
it(39) =< aux(12)+aux(53)
s(15) =< aux(12)+aux(53)
it(39) =< aux(7)+aux(54)
s(16) =< aux(7)+aux(54)
s(15) =< it(38)*aux(16)
s(16) =< it(38)*aux(272)
s(14) =< s(16)
s(334) =< aux(258)
s(329) =< aux(256)

  with precondition: [Out=0,V1>=3,V>=3] 

* Chain [32,43]: 24*s(329)+4*s(334)+2*s(343)+5
  Such that:aux(257) =< V
aux(258) =< V+1
aux(278) =< V1
s(343) =< aux(257)
s(334) =< aux(258)
s(329) =< aux(278)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,42,43]: 10*s(18)+44*s(20)+8*s(26)+4*s(334)+2*s(343)+10
  Such that:aux(42) =< 1
aux(43) =< 2
aux(257) =< V
aux(258) =< V+1
aux(282) =< V1
s(20) =< aux(282)
s(26) =< aux(42)
s(18) =< aux(43)
s(343) =< aux(257)
s(334) =< aux(258)

  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [32,40,43]: 24*s(329)+4*s(334)+2*s(343)+14
  Such that:aux(257) =< V
aux(258) =< V+1
aux(286) =< V1
s(343) =< aux(257)
s(334) =< aux(258)
s(329) =< aux(286)

  with precondition: [Out=0,V1>=2,V>=2] 


#### Cost of chains of start(V1,V):
* Chain [45]: 183*s(2121)+364*s(2122)+59*s(2145)+6*s(2147)+3*s(2148)+101*s(2150)+6*s(2151)+144*s(2153)+180*s(2154)+30*s(2156)+72*s(2157)+6*s(2160)+12*s(2162)+30*s(2163)+72*s(2164)+6*s(2165)+12*s(2167)+24*s(2168)+429*s(2170)+43*s(2171)+159*s(2172)+9*s(2185)+162*s(2189)+81*s(2190)+27*s(2191)+234*s(2192)+26*s(2193)+126*s(2194)+234*s(2195)+18*s(2196)+18*s(2197)+36*s(2198)+18*s(2201)+45*s(2202)+108*s(2203)+9*s(2204)+18*s(2206)+30*s(2207)+48*s(2208)+18*s(2209)+3*s(2218)+54*s(2222)+27*s(2223)+9*s(2224)+54*s(2225)+6*s(2226)+42*s(2227)+78*s(2228)+6*s(2229)+6*s(2230)+12*s(2231)+68*s(2233)+40*s(2234)+16*s(2235)+1*s(2242)+18*s(2246)+9*s(2247)+3*s(2248)+14*s(2249)+26*s(2250)+2*s(2251)+2*s(2252)+4*s(2253)+2*s(2256)+4*s(2257)+32*s(2258)+12*s(2259)+2*s(2267)+36*s(2271)+18*s(2272)+6*s(2273)+36*s(2274)+4*s(2275)+28*s(2276)+52*s(2277)+4*s(2278)+4*s(2279)+8*s(2280)+2*s(2282)+34*s(2284)+80*s(2285)+30*s(2286)+5*s(2295)+90*s(2299)+45*s(2300)+15*s(2301)+90*s(2302)+10*s(2303)+70*s(2304)+130*s(2305)+10*s(2306)+10*s(2307)+20*s(2308)+16*s(2309)+1*s(2315)+18*s(2319)+9*s(2320)+3*s(2321)+14*s(2322)+26*s(2323)+2*s(2324)+2*s(2325)+4*s(2326)+10*s(2329)+16*s(2330)+6*s(2331)+1*s(2339)+18*s(2343)+9*s(2344)+3*s(2345)+18*s(2346)+2*s(2347)+14*s(2348)+26*s(2349)+2*s(2350)+2*s(2351)+4*s(2352)+24*s(2354)+16*s(2355)+6*s(2356)+1*s(2365)+18*s(2369)+9*s(2370)+3*s(2371)+18*s(2372)+2*s(2373)+14*s(2374)+26*s(2375)+2*s(2376)+2*s(2377)+4*s(2378)+15*s(2379)+36*s(2380)+3*s(2381)+6*s(2383)+10*s(2384)+32*s(2385)+12*s(2386)+2*s(2394)+36*s(2398)+18*s(2399)+6*s(2400)+36*s(2401)+4*s(2402)+28*s(2403)+52*s(2404)+4*s(2405)+4*s(2406)+8*s(2407)+20*s(2410)+16*s(2411)+6*s(2412)+1*s(2420)+18*s(2424)+9*s(2425)+3*s(2426)+18*s(2427)+2*s(2428)+14*s(2429)+26*s(2430)+2*s(2431)+2*s(2432)+4*s(2433)+1*s(2437)+20*s(2438)+5*s(2439)+12*s(2440)+1*s(2443)+2*s(2445)+16*s(2446)+6*s(2447)+1*s(2456)+18*s(2460)+9*s(2461)+3*s(2462)+18*s(2463)+2*s(2464)+14*s(2465)+26*s(2466)+2*s(2467)+2*s(2468)+4*s(2469)+20*s(2471)+36*s(2472)+3*s(2475)+6*s(2477)+40*s(2478)+40*s(2480)+2*s(2481)+10*s(2482)+24*s(2483)+2*s(2486)+4*s(2488)+32*s(2489)+12*s(2490)+2*s(2498)+36*s(2502)+18*s(2503)+6*s(2504)+36*s(2505)+4*s(2506)+28*s(2507)+52*s(2508)+4*s(2509)+4*s(2510)+8*s(2511)+10*s(2513)+20*s(2515)+32*s(2516)+2*s(2523)+36*s(2527)+18*s(2528)+6*s(2529)+28*s(2530)+52*s(2531)+4*s(2532)+4*s(2533)+8*s(2534)+1*s(2539)+15
  Such that:s(2124) =< 1
s(2125) =< 2
s(2539) =< V1+2
s(2127) =< V1+V
s(2128) =< V1+V+1
s(2129) =< 2*V1
s(2130) =< 2*V1+1
s(2131) =< 2*V1+2*V
s(2132) =< 2*V1+2*V+1
s(2133) =< 2*V1+2*V+3
s(2134) =< 2*V1+3*V
s(2135) =< 3*V1
s(2136) =< 3*V1+2*V
s(2137) =< 3*V1+3*V
s(2138) =< 6*V1+6*V
s(2139) =< 9*V1+9*V
s(2141) =< V+1
s(2142) =< 2*V
s(2143) =< 2*V+1
s(2144) =< 3*V
aux(311) =< V1
aux(312) =< V
s(2122) =< aux(311)
s(2121) =< aux(312)
s(2145) =< s(2128)
s(2146) =< s(2128)
s(2147) =< s(2130)
s(2146) =< s(2133)
s(2148) =< s(2134)
s(2149) =< s(2136)
s(2150) =< s(2141)
s(2151) =< s(2143)
s(2153) =< s(2124)
s(2154) =< s(2125)
s(2156) =< aux(312)
s(2157) =< aux(312)
s(2158) =< s(2124)*3
s(2159) =< s(2124)*2
s(2156) =< s(2124)+aux(312)
s(2157) =< s(2124)+aux(312)
s(2157) =< s(2159)+s(2142)
s(2160) =< s(2159)+s(2142)
s(2157) =< s(2158)+s(2144)
s(2161) =< s(2158)+s(2144)
s(2160) =< s(2156)*s(2125)
s(2161) =< s(2156)*aux(312)
s(2162) =< s(2161)
s(2163) =< aux(311)
s(2164) =< aux(311)
s(2163) =< s(2124)+aux(311)
s(2164) =< s(2124)+aux(311)
s(2164) =< s(2159)+s(2129)
s(2165) =< s(2159)+s(2129)
s(2164) =< s(2158)+s(2135)
s(2166) =< s(2158)+s(2135)
s(2165) =< s(2163)*s(2125)
s(2166) =< s(2163)*aux(311)
s(2167) =< s(2166)
s(2168) =< s(2142)
s(2169) =< s(2127)
s(2169) =< aux(312)
s(2170) =< s(2127)
s(2171) =< s(2169)
s(2172) =< s(2127)
s(2173) =< aux(312)
s(2174) =< aux(312)+1
s(2175) =< s(2127)
s(2176) =< s(2127)-1
s(2177) =< aux(312)*2
s(2172) =< aux(312)+aux(311)
s(2178) =< s(2170)*s(2175)
s(2179) =< s(2170)*s(2174)
s(2180) =< s(2172)*s(2173)
s(2181) =< s(2172)*s(2174)
s(2182) =< s(2172)*s(2175)
s(2183) =< s(2172)*s(2176)
s(2184) =< s(2172)*s(2177)
s(2185) =< s(2172)*s(2174)
s(2186) =< s(2172)*aux(312)
s(2187) =< s(2172)*s(2127)
s(2188) =< s(2180)*2
s(2189) =< s(2180)
s(2190) =< s(2181)
s(2191) =< s(2188)
s(2192) =< s(2178)
s(2193) =< s(2179)
s(2194) =< s(2183)
s(2195) =< s(2182)
s(2196) =< s(2186)
s(2197) =< s(2184)
s(2198) =< s(2187)
s(2199) =< s(2127)
s(2200) =< s(2127)
s(2200) =< s(2128)
s(2200) =< s(2131)
s(2199) =< s(2132)
s(2200) =< s(2132)
s(2201) =< s(2132)
s(2202) =< s(2127)
s(2203) =< s(2127)
s(2202) =< s(2124)+s(2127)
s(2203) =< s(2124)+s(2127)
s(2203) =< s(2159)+s(2131)
s(2204) =< s(2159)+s(2131)
s(2203) =< s(2158)+s(2137)
s(2205) =< s(2158)+s(2137)
s(2204) =< s(2202)*s(2125)
s(2205) =< s(2202)*s(2127)
s(2206) =< s(2205)
s(2207) =< s(2200)
s(2208) =< s(2127)
s(2209) =< s(2127)
s(2208) =< s(2199)
s(2209) =< s(2199)
s(2210) =< aux(312)
s(2210) =< s(2144)
s(2208) =< s(2210)+aux(311)
s(2211) =< s(2209)*s(2175)
s(2212) =< s(2209)*s(2174)
s(2213) =< s(2208)*s(2173)
s(2214) =< s(2208)*s(2174)
s(2215) =< s(2208)*s(2175)
s(2216) =< s(2208)*s(2176)
s(2217) =< s(2208)*s(2177)
s(2218) =< s(2208)*s(2174)
s(2219) =< s(2208)*aux(312)
s(2220) =< s(2208)*s(2127)
s(2221) =< s(2213)*2
s(2222) =< s(2213)
s(2223) =< s(2214)
s(2224) =< s(2221)
s(2225) =< s(2211)
s(2226) =< s(2212)
s(2227) =< s(2216)
s(2228) =< s(2215)
s(2229) =< s(2219)
s(2230) =< s(2217)
s(2231) =< s(2220)
s(2232) =< s(2127)
s(2232) =< s(2128)
s(2232) =< s(2131)
s(2233) =< s(2199)
s(2234) =< s(2232)
s(2235) =< s(2127)
s(2236) =< aux(312)
s(2236) =< s(2143)
s(2235) =< s(2236)+aux(311)
s(2237) =< s(2235)*s(2173)
s(2238) =< s(2235)*s(2174)
s(2239) =< s(2235)*s(2175)
s(2240) =< s(2235)*s(2176)
s(2241) =< s(2235)*s(2177)
s(2242) =< s(2235)*s(2174)
s(2243) =< s(2235)*aux(312)
s(2244) =< s(2235)*s(2127)
s(2245) =< s(2237)*2
s(2246) =< s(2237)
s(2247) =< s(2238)
s(2248) =< s(2245)
s(2249) =< s(2240)
s(2250) =< s(2239)
s(2251) =< s(2243)
s(2252) =< s(2241)
s(2253) =< s(2244)
s(2254) =< s(2127)
s(2255) =< s(2132)
s(2254) =< s(2132)
s(2255) =< s(2133)
s(2256) =< s(2133)
s(2254) =< s(2137)
s(2257) =< s(2254)
s(2258) =< s(2127)
s(2259) =< s(2127)
s(2258) =< s(2255)
s(2259) =< s(2255)
s(2258) =< aux(312)+aux(311)
s(2260) =< s(2259)*s(2175)
s(2261) =< s(2259)*s(2174)
s(2262) =< s(2258)*s(2173)
s(2263) =< s(2258)*s(2174)
s(2264) =< s(2258)*s(2175)
s(2265) =< s(2258)*s(2176)
s(2266) =< s(2258)*s(2177)
s(2267) =< s(2258)*s(2174)
s(2268) =< s(2258)*aux(312)
s(2269) =< s(2258)*s(2127)
s(2270) =< s(2262)*2
s(2271) =< s(2262)
s(2272) =< s(2263)
s(2273) =< s(2270)
s(2274) =< s(2260)
s(2275) =< s(2261)
s(2276) =< s(2265)
s(2277) =< s(2264)
s(2278) =< s(2268)
s(2279) =< s(2266)
s(2280) =< s(2269)
s(2281) =< s(2127)
s(2281) =< s(2137)
s(2282) =< s(2281)
s(2283) =< s(2127)
s(2283) =< s(2128)
s(2284) =< s(2283)
s(2285) =< s(2127)
s(2286) =< s(2127)
s(2285) =< s(2128)
s(2286) =< s(2128)
s(2287) =< aux(312)
s(2287) =< s(2141)
s(2285) =< s(2287)+aux(311)
s(2288) =< s(2286)*s(2175)
s(2289) =< s(2286)*s(2174)
s(2290) =< s(2285)*s(2173)
s(2291) =< s(2285)*s(2174)
s(2292) =< s(2285)*s(2175)
s(2293) =< s(2285)*s(2176)
s(2294) =< s(2285)*s(2177)
s(2295) =< s(2285)*s(2174)
s(2296) =< s(2285)*aux(312)
s(2297) =< s(2285)*s(2127)
s(2298) =< s(2290)*2
s(2299) =< s(2290)
s(2300) =< s(2291)
s(2301) =< s(2298)
s(2302) =< s(2288)
s(2303) =< s(2289)
s(2304) =< s(2293)
s(2305) =< s(2292)
s(2306) =< s(2296)
s(2307) =< s(2294)
s(2308) =< s(2297)
s(2309) =< s(2127)
s(2309) =< s(2210)+aux(311)
s(2310) =< s(2309)*s(2173)
s(2311) =< s(2309)*s(2174)
s(2312) =< s(2309)*s(2175)
s(2313) =< s(2309)*s(2176)
s(2314) =< s(2309)*s(2177)
s(2315) =< s(2309)*s(2174)
s(2316) =< s(2309)*aux(312)
s(2317) =< s(2309)*s(2127)
s(2318) =< s(2310)*2
s(2319) =< s(2310)
s(2320) =< s(2311)
s(2321) =< s(2318)
s(2322) =< s(2313)
s(2323) =< s(2312)
s(2324) =< s(2316)
s(2325) =< s(2314)
s(2326) =< s(2317)
s(2327) =< s(2127)
s(2327) =< s(2128)
s(2328) =< s(2131)
s(2327) =< s(2131)
s(2328) =< s(2132)
s(2327) =< s(2132)
s(2328) =< s(2137)
s(2327) =< s(2137)
s(2329) =< s(2327)
s(2330) =< s(2127)
s(2331) =< s(2127)
s(2330) =< s(2328)
s(2331) =< s(2328)
s(2330) =< s(2210)+aux(311)
s(2332) =< s(2331)*s(2175)
s(2333) =< s(2331)*s(2174)
s(2334) =< s(2330)*s(2173)
s(2335) =< s(2330)*s(2174)
s(2336) =< s(2330)*s(2175)
s(2337) =< s(2330)*s(2176)
s(2338) =< s(2330)*s(2177)
s(2339) =< s(2330)*s(2174)
s(2340) =< s(2330)*aux(312)
s(2341) =< s(2330)*s(2127)
s(2342) =< s(2334)*2
s(2343) =< s(2334)
s(2344) =< s(2335)
s(2345) =< s(2342)
s(2346) =< s(2332)
s(2347) =< s(2333)
s(2348) =< s(2337)
s(2349) =< s(2336)
s(2350) =< s(2340)
s(2351) =< s(2338)
s(2352) =< s(2341)
s(2353) =< s(2128)
s(2353) =< s(2131)
s(2354) =< s(2131)
s(2355) =< s(2127)
s(2356) =< s(2127)
s(2355) =< s(2353)
s(2356) =< s(2353)
s(2357) =< aux(312)
s(2357) =< s(2142)
s(2355) =< s(2357)+aux(311)
s(2358) =< s(2356)*s(2175)
s(2359) =< s(2356)*s(2174)
s(2360) =< s(2355)*s(2173)
s(2361) =< s(2355)*s(2174)
s(2362) =< s(2355)*s(2175)
s(2363) =< s(2355)*s(2176)
s(2364) =< s(2355)*s(2177)
s(2365) =< s(2355)*s(2174)
s(2366) =< s(2355)*aux(312)
s(2367) =< s(2355)*s(2127)
s(2368) =< s(2360)*2
s(2369) =< s(2360)
s(2370) =< s(2361)
s(2371) =< s(2368)
s(2372) =< s(2358)
s(2373) =< s(2359)
s(2374) =< s(2363)
s(2375) =< s(2362)
s(2376) =< s(2366)
s(2377) =< s(2364)
s(2378) =< s(2367)
s(2146) =< s(2127)
s(2379) =< s(2131)
s(2380) =< s(2131)
s(2379) =< s(2124)+s(2131)
s(2380) =< s(2124)+s(2131)
s(2380) =< s(2159)+s(2131)
s(2381) =< s(2159)+s(2131)
s(2380) =< s(2158)+s(2138)
s(2382) =< s(2158)+s(2138)
s(2381) =< s(2379)*s(2125)
s(2382) =< s(2379)*s(2131)
s(2383) =< s(2382)
s(2384) =< s(2146)
s(2385) =< s(2127)
s(2386) =< s(2127)
s(2385) =< s(2132)
s(2386) =< s(2132)
s(2385) =< s(2357)+aux(311)
s(2387) =< s(2386)*s(2175)
s(2388) =< s(2386)*s(2174)
s(2389) =< s(2385)*s(2173)
s(2390) =< s(2385)*s(2174)
s(2391) =< s(2385)*s(2175)
s(2392) =< s(2385)*s(2176)
s(2393) =< s(2385)*s(2177)
s(2394) =< s(2385)*s(2174)
s(2395) =< s(2385)*aux(312)
s(2396) =< s(2385)*s(2127)
s(2397) =< s(2389)*2
s(2398) =< s(2389)
s(2399) =< s(2390)
s(2400) =< s(2397)
s(2401) =< s(2387)
s(2402) =< s(2388)
s(2403) =< s(2392)
s(2404) =< s(2391)
s(2405) =< s(2395)
s(2406) =< s(2393)
s(2407) =< s(2396)
s(2408) =< s(2127)
s(2408) =< s(2131)
s(2409) =< s(2131)
s(2409) =< s(2132)
s(2410) =< s(2409)
s(2411) =< s(2127)
s(2412) =< s(2127)
s(2411) =< s(2408)
s(2412) =< s(2408)
s(2411) =< s(2357)+aux(311)
s(2413) =< s(2412)*s(2175)
s(2414) =< s(2412)*s(2174)
s(2415) =< s(2411)*s(2173)
s(2416) =< s(2411)*s(2174)
s(2417) =< s(2411)*s(2175)
s(2418) =< s(2411)*s(2176)
s(2419) =< s(2411)*s(2177)
s(2420) =< s(2411)*s(2174)
s(2421) =< s(2411)*aux(312)
s(2422) =< s(2411)*s(2127)
s(2423) =< s(2415)*2
s(2424) =< s(2415)
s(2425) =< s(2416)
s(2426) =< s(2423)
s(2427) =< s(2413)
s(2428) =< s(2414)
s(2429) =< s(2418)
s(2430) =< s(2417)
s(2431) =< s(2421)
s(2432) =< s(2419)
s(2433) =< s(2422)
s(2434) =< s(2134)
s(2435) =< s(2134)
s(2434) =< s(2138)
s(2434) =< s(2139)
s(2435) =< s(2139)
s(2436) =< s(2127)
s(2436) =< s(2434)
s(2437) =< s(2434)
s(2438) =< s(2436)
s(2439) =< s(2127)
s(2440) =< s(2127)
s(2441) =< s(2137)*3
s(2442) =< s(2137)*2
s(2439) =< s(2137)+s(2281)
s(2440) =< s(2137)+s(2281)
s(2440) =< s(2442)+s(2138)
s(2443) =< s(2442)+s(2138)
s(2440) =< s(2441)+s(2139)
s(2444) =< s(2441)+s(2139)
s(2443) =< s(2439)*s(2125)
s(2444) =< s(2439)*s(2127)
s(2445) =< s(2444)
s(2446) =< s(2127)
s(2447) =< s(2127)
s(2446) =< s(2435)
s(2447) =< s(2435)
s(2448) =< aux(312)
s(2448) =< s(2134)
s(2446) =< s(2448)+aux(311)
s(2449) =< s(2447)*s(2175)
s(2450) =< s(2447)*s(2174)
s(2451) =< s(2446)*s(2173)
s(2452) =< s(2446)*s(2174)
s(2453) =< s(2446)*s(2175)
s(2454) =< s(2446)*s(2176)
s(2455) =< s(2446)*s(2177)
s(2456) =< s(2446)*s(2174)
s(2457) =< s(2446)*aux(312)
s(2458) =< s(2446)*s(2127)
s(2459) =< s(2451)*2
s(2460) =< s(2451)
s(2461) =< s(2452)
s(2462) =< s(2459)
s(2463) =< s(2449)
s(2464) =< s(2450)
s(2465) =< s(2454)
s(2466) =< s(2453)
s(2467) =< s(2457)
s(2468) =< s(2455)
s(2469) =< s(2458)
s(2470) =< s(2127)
s(2470) =< s(2134)
s(2471) =< s(2470)
s(2472) =< s(2127)
s(2473) =< aux(312)*3
s(2474) =< aux(312)*2
s(2472) =< aux(312)+aux(311)
s(2472) =< s(2474)+s(2129)
s(2475) =< s(2474)+s(2129)
s(2472) =< s(2473)+s(2135)
s(2476) =< s(2473)+s(2135)
s(2475) =< s(2172)*s(2125)
s(2476) =< s(2172)*s(2127)
s(2477) =< s(2476)
s(2478) =< s(2236)
s(2479) =< aux(311)
s(2479) =< s(2130)
s(2480) =< s(2479)
s(2149) =< s(2134)
s(2149) =< s(2137)
s(2149) =< s(2138)
s(2149) =< s(2139)
s(2481) =< s(2139)
s(2482) =< s(2127)
s(2483) =< s(2127)
s(2484) =< s(2281)*3
s(2485) =< s(2281)*2
s(2482) =< s(2281)+s(2281)
s(2483) =< s(2281)+s(2281)
s(2483) =< s(2485)+s(2138)
s(2486) =< s(2485)+s(2138)
s(2483) =< s(2484)+s(2137)
s(2487) =< s(2484)+s(2137)
s(2486) =< s(2482)*s(2125)
s(2487) =< s(2482)*s(2127)
s(2488) =< s(2487)
s(2489) =< s(2127)
s(2490) =< s(2127)
s(2489) =< s(2149)
s(2490) =< s(2149)
s(2489) =< s(2448)+aux(311)
s(2491) =< s(2490)*s(2175)
s(2492) =< s(2490)*s(2174)
s(2493) =< s(2489)*s(2173)
s(2494) =< s(2489)*s(2174)
s(2495) =< s(2489)*s(2175)
s(2496) =< s(2489)*s(2176)
s(2497) =< s(2489)*s(2177)
s(2498) =< s(2489)*s(2174)
s(2499) =< s(2489)*aux(312)
s(2500) =< s(2489)*s(2127)
s(2501) =< s(2493)*2
s(2502) =< s(2493)
s(2503) =< s(2494)
s(2504) =< s(2501)
s(2505) =< s(2491)
s(2506) =< s(2492)
s(2507) =< s(2496)
s(2508) =< s(2495)
s(2509) =< s(2499)
s(2510) =< s(2497)
s(2511) =< s(2500)
s(2512) =< s(2127)
s(2512) =< s(2128)
s(2512) =< s(2141)
s(2513) =< s(2512)
s(2514) =< aux(311)
s(2514) =< s(2128)
s(2515) =< s(2514)
s(2516) =< s(2127)
s(2517) =< aux(312)
s(2517) =< s(2357)
s(2516) =< s(2517)+aux(311)
s(2518) =< s(2516)*s(2173)
s(2519) =< s(2516)*s(2174)
s(2520) =< s(2516)*s(2175)
s(2521) =< s(2516)*s(2176)
s(2522) =< s(2516)*s(2177)
s(2523) =< s(2516)*s(2174)
s(2524) =< s(2516)*aux(312)
s(2525) =< s(2516)*s(2127)
s(2526) =< s(2518)*2
s(2527) =< s(2518)
s(2528) =< s(2519)
s(2529) =< s(2526)
s(2530) =< s(2521)
s(2531) =< s(2520)
s(2532) =< s(2524)
s(2533) =< s(2522)
s(2534) =< s(2525)

  with precondition: [V1>=0] 

* Chain [44]: 1
  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [45] with precondition: [V1>=0] 
    - Upper bound: 526*V1+711+nat(V)*349+nat(V)*1302*nat(V1+V)+nat(nat(V1+V)+ -1)*434*nat(V1+V)+18*V1+nat(2*V)*30+54*V1+nat(3*V)*12+nat(V1+V)*1957+nat(V1+V)*1488*nat(V1+V)+ (V1+2)+nat(V+1)*101+ (12*V1+6)+nat(2*V1+2*V)*107+nat(2*V1+3*V)*4+nat(2*V+1)*6+nat(3*V1+3*V)*30+nat(6*V1+6*V)*9+nat(9*V1+9*V)*4+nat(V1+V+1)*69+nat(2*V1+2*V+1)*18+nat(2*V1+2*V+3)*2 
    - Complexity: n^2 
* Chain [44] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): 526*V1+710+nat(V)*349+nat(V)*1302*nat(V1+V)+nat(nat(V1+V)+ -1)*434*nat(V1+V)+18*V1+nat(2*V)*30+54*V1+nat(3*V)*12+nat(V1+V)*1957+nat(V1+V)*1488*nat(V1+V)+ (V1+2)+nat(V+1)*101+ (12*V1+6)+nat(2*V1+2*V)*107+nat(2*V1+3*V)*4+nat(2*V+1)*6+nat(3*V1+3*V)*30+nat(6*V1+6*V)*9+nat(9*V1+9*V)*4+nat(V1+V+1)*69+nat(2*V1+2*V+1)*18+nat(2*V1+2*V+3)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 276 ms.
   - Backward Invariants 147 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 550 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 16457 ms.
   - Equation cost structures 1818 ms.
   - Phase cost structures 605 ms.
   - Chain cost structures 1812 ms.
   - Solving cost expressions 360 ms.
* Total analysis performed in 17354 ms.

