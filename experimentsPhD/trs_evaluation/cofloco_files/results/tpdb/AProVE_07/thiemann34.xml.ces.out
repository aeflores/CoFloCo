
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [ (div)/4]
1. non_recursive  : [divides/3]
2. recursive  : [gt/3]
3. recursive  : [if1/4,if2/4,test/3]
4. non_recursive  : [prime/2]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into (div)/4
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into gt/3
3. SCC is partially evaluated into test/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations (div)/4 
* CE 18 is refined into CE [27] 
* CE 15 is refined into CE [28] 
* CE 14 is refined into CE [29] 
* CE 17 is refined into CE [30] 
* CE 16 is refined into CE [31] 


#### Refined cost equations (div)/4 
* CE 27: div(V,V1,V9,Out) = 0
     [V9>=0,V1>=0,V>=0,Out=0] 
* CE 28: div(V,V1,V9,Out) = 1
     [V9>=0,V1>=1,Out=1,V=0] 
* CE 29: div(V,V1,V9,Out) = 1
     [V9>=0,Out=2,V1=0,V=0] 
* CE 30: div(V,V1,V9,Out) = 1+ div(W9,X9,V9,Out)
     [X9>=0,W9>=0,V9>=0,X9+1=V1,W9+1=V] 
* CE 31: div(V,V1,V9,Out) = 1+ div(V,V9,V9,Out)
     [V9>=1,V>=1,V1=0] 

### Cost equations --> "Loop" of (div)/4 
* CEs [30] --> Loop 15 
* CEs [31] --> Loop 16 
* CEs [27] --> Loop 17 
* CEs [28] --> Loop 18 
* CEs [29] --> Loop 19 

#### Loops of (div)/4 
* Loop 15: div(V,V1,V9,Out)->  div(V',V1',V9,Out)
                  [V9>=0,V1>=1,V>=1,V1=V1'+1,V=V'+1] 
* Loop 16: div(V,V1,V9,Out)->  div(V,V9,V9,Out)
                  [V9>=1,V>=1,V1=0] 
* Loop 17: div(V,V1,V9,Out) [V9>=0,V1>=0,V>=0,Out=0] 
* Loop 18: div(V,V1,V9,Out) [V9>=0,V1>=1,Out=1,V=0] 
* Loop 19: div(V,V1,V9,Out) [V9>=0,Out=2,V1=0,V=0] 

### Ranking functions of CR div(V,V1,V9,Out) 

#### Partial ranking functions of CR div(V,V1,V9,Out) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    V
    V1 depends on loops [16:1] 
  - RF of loop [16:1]:
    -V1+1 depends on loops [15:1] 


### Resulting Chains:div(V,V1,V9,Out) 
* [[15,16],19]
* [[15,16],18]
* [[15,16],17]
* [19]
* [18]
* [17]


### Merging Chains  (div)/4 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17],[17,[15,16]]] --> 3 
* [[18,[15,16]]] --> 4 
* [[19,[15,16]]] --> 5 


### Specialization of cost equations gt/3 
* CE 26 is refined into CE [32] 
* CE 24 is refined into CE [33] 
* CE 25 is refined into CE [34] 


#### Refined cost equations gt/3 
* CE 32: gt(V,V1,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 
* CE 33: gt(V,V1,Out) = 1
     [V>=1,Out=2,V1=0] 
* CE 34: gt(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of gt/3 
* CEs [33] --> Loop 20 
* CEs [34] --> Loop 21 
* CEs [32] --> Loop 22 

#### Loops of gt/3 
* Loop 20: gt(V,V1,Out) [V>=1,Out=2,V1=0] 
* Loop 21: gt(V,V1,Out) [V1>=0,Out=1,V=0] 
* Loop 22: gt(V,V1,Out)->  gt(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 

### Ranking functions of CR gt(V,V1,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR gt(V,V1,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:gt(V,V1,Out) 
* [[22],21]
* [[22],20]
* [21]
* [20]


### Merging Chains  gt/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[21,[22]]] --> 3 
* [[20,[22]]] --> 4 


### Specialization of cost equations test/3 
* CE 23 is refined into CE [35,36] 
* CE 21 is refined into CE [37] 
* CE 19 is refined into CE [38,39,40,41] 
* CE 22 is refined into CE [42,43,44,45] 
* CE 20 is refined into CE [46] 


#### Refined cost equations test/3 
* CE 35: test(V,V1,Out) = 2+ gt(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,Out=2,V=0] 
* CE 36: test(V,V1,Out) = 2+ gt(V,V1,W1):3
     [V1>=V,V>=1,W1=1,Out=2] 
* CE 37: test(V,V1,Out) = 4+ gt(V,V1,W1):4+ div(V,V1,V1,X1):5
     [V>=V1+1,V1>=1,X1=2,W1=2,Out=1] 
* CE 38: test(V,V1,Out) = 3+ gt(V,W1,X1):2+ div(V,Y1,Z1,A2):3
     [V>=1,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=0,V1=0] 
* CE 39: test(V,V1,Out) = 3+ gt(V,V1,W1):4+ div(V,V1,V1,X1):3
     [V>=V1+1,V1>=1,X1=0,W1=2,Out=0] 
* CE 40: test(V,V1,Out) = 3+ gt(V,V1,W1):4+ div(V,V1,V1,X1):4
     [V>=V1+1,V1>=1,X1=1,W1=2,Out=0] 
* CE 41: test(V,V1,Out) = 3+ gt(V,V1,W1):4+ div(V,V1,V1,X1):5
     [V>=V1+1,V1>=1,X1=2,W1=2,Out=0] 
* CE 42: test(V,V1,Out) = 1+ gt(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,Out=0,V=0] 
* CE 43: test(V,V1,Out) = 1+ gt(V,W1,X1):2
     [V>=1,X1=2,W1=0,Out=0,V1=0] 
* CE 44: test(V,V1,Out) = 1+ gt(V,V1,W1):3
     [V1>=V,V>=1,W1=1,Out=0] 
* CE 45: test(V,V1,Out) = 1+ gt(V,V1,W1):4
     [V>=V1+1,V1>=1,W1=2,Out=0] 
* CE 46: test(V,V1,Out) = 4+ gt(V,V1,W1):4+ div(V,V1,V1,X1):4+ test(V,Y1,Out)
     [V>=V1+1,V1>=1,V1+1=Y1,X1=1,W1=2] 

### Cost equations --> "Loop" of test/3 
* CEs [46] --> Loop 23 
* CEs [36] --> Loop 24 
* CEs [37] --> Loop 25 
* CEs [39,40,41,45] --> Loop 26 
* CEs [44] --> Loop 27 
* CEs [38,43] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [42] --> Loop 30 

#### Loops of test/3 
* Loop 23: test(V,V1,Out)->  test(V,V1',Out)
                  [V>=V1+1,V1>=1,V1+1=V1'] 
* Loop 24: test(V,V1,Out) [V1>=V,V>=1,Out=2] 
* Loop 25: test(V,V1,Out) [V>=V1+1,V1>=1,Out=1] 
* Loop 26: test(V,V1,Out) [V>=V1+1,V1>=1,Out=0] 
* Loop 27: test(V,V1,Out) [V1>=V,V>=1,Out=0] 
* Loop 28: test(V,V1,Out) [V>=1,Out=0,V1=0] 
* Loop 29: test(V,V1,Out) [V1>=0,Out=2,V=0] 
* Loop 30: test(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR test(V,V1,Out) 
* RF of phase [23]: [V-V1]

#### Partial ranking functions of CR test(V,V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V-V1


### Resulting Chains:test(V,V1,Out) 
* [[23],27]
* [[23],26]
* [[23],25]
* [[23],24]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  test/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 
* [[26],[26,[23]],[27,[23]]] --> 5 
* [[25],[25,[23]]] --> 6 
* [[24]] --> 7 
* [[24,[23]]] --> 8 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [47,48,49,50,51] 
* CE 4 is refined into CE [52,53,54,55,56,57,58] 
* CE 6 is refined into CE [59,60] 
* CE 7 is refined into CE [61] 
* CE 3 is refined into CE [62] 
* CE 5 is refined into CE [63,64,65,66,67,68,69] 
* CE 8 is refined into CE [70] 
* CE 9 is refined into CE [71,72,73,74] 
* CE 10 is refined into CE [75,76,77,78,79] 
* CE 11 is refined into CE [80,81,82,83,84] 
* CE 12 is refined into CE [85,86,87,88,89,90,91] 
* CE 13 is refined into CE [92,93,94,95,96,97,98,99] 


#### Refined cost equations start/3 
* CE 47: start(V,V1,V9) = 2+ div(W9,X9,Y9,Z9):1
     [Z9=2,Y9=0,X9=0,W9=0,V9=0,V1=0,V=2] 
* CE 48: start(V,V1,V9) = 2+ div(W9,V9,V9,X9):2
     [V9>=1,X9=1,W9=0,V1=0,V=2] 
* CE 49: start(V,V1,V9) = 2+ div(V1,V9,V9,W9):3
     [V9>=0,V1>=0,W9=0,V=2] 
* CE 50: start(V,V1,V9) = 2+ div(V1,V9,V9,W9):4
     [2*V9>=1,V1>=1,W9=1,V=2] 
* CE 51: start(V,V1,V9) = 2+ div(V1,V9,V9,W9):5
     [V1>=V9,2*V9>=1,V1>=1,W9=2,V=2] 
* CE 52: start(V,V1,V9) = 3+ div(W9,X9,Y9,Z9):2+ test(A10,B10,C10):1
     [B10>=2,B10=Y9+1,B10=X9+1,B10=V9+1,C10=0,A10=0,Z9=1,W9=0,V1=0,V=2] 
* CE 53: start(V,V1,V9) = 3+ div(W9,X9,Y9,Z9):2+ test(A10,B10,C10):2
     [B10>=2,B10=Y9+1,B10=X9+1,B10=V9+1,C10=2,A10=0,Z9=1,W9=0,V1=0,V=2] 
* CE 54: start(V,V1,V9) = 3+ div(V1,W9,X9,Y9):4+ test(V1,Z9,A10):4
     [Z9>=V1,2*Z9>=3,V1>=1,Z9=X9+1,Z9=W9+1,Z9=V9+1,A10=0,Y9=1,V=2] 
* CE 55: start(V,V1,V9) = 3+ div(V1,W9,X9,Y9):4+ test(V1,Z9,A10):5
     [V1>=Z9+1,2*Z9>=3,Z9=X9+1,Z9=W9+1,Z9=V9+1,A10=0,Y9=1,V=2] 
* CE 56: start(V,V1,V9) = 3+ div(V1,W9,X9,Y9):4+ test(V1,Z9,A10):6
     [V1>=Z9+1,2*Z9>=3,Z9=X9+1,Z9=W9+1,Z9=V9+1,A10=1,Y9=1,V=2] 
* CE 57: start(V,V1,V9) = 3+ div(V1,W9,X9,Y9):4+ test(V1,Z9,A10):7
     [Z9>=V1,2*Z9>=3,V1>=1,Z9=X9+1,Z9=W9+1,Z9=V9+1,A10=2,Y9=1,V=2] 
* CE 58: start(V,V1,V9) = 3+ div(V1,W9,X9,Y9):4+ test(V1,Z9,A10):8
     [V1>=Z9+1,2*Z9>=3,Z9=X9+1,Z9=W9+1,Z9=V9+1,A10=2,Y9=1,V=2] 
* CE 59: start(V,V1,V9) = 3+ div(W9,X9,Y9,Z9):1
     [Z9=2,Y9=0,X9=0,W9=0,V9=0,V1=0,V=2] 
* CE 60: start(V,V1,V9) = 3+ div(V1,V9,V9,W9):5
     [V1>=V9,2*V9>=1,V1>=1,W9=2,V=2] 
* CE 61: start(V,V1,V9) = 1
     [V9>=0,V1>=0,V=2] 
* CE 62: start(V,V1,V9) = 0
     [V9>=0,V1>=0,V>=0] 
* CE 63: start(V,V1,V9) = 1+ test(W9,X9,Y9):1
     [X9>=1,X9=V9+1,Y9=0,W9=0,V1=0,V=1] 
* CE 64: start(V,V1,V9) = 1+ test(W9,X9,Y9):2
     [X9>=1,X9=V9+1,Y9=2,W9=0,V1=0,V=1] 
* CE 65: start(V,V1,V9) = 1+ test(V1,W9,X9):4
     [W9>=V1,V1>=1,W9=V9+1,X9=0,V=1] 
* CE 66: start(V,V1,V9) = 1+ test(V1,W9,X9):5
     [V1>=W9+1,W9>=1,W9=V9+1,X9=0,V=1] 
* CE 67: start(V,V1,V9) = 1+ test(V1,W9,X9):6
     [V1>=W9+1,W9>=1,W9=V9+1,X9=1,V=1] 
* CE 68: start(V,V1,V9) = 1+ test(V1,W9,X9):7
     [W9>=V1,V1>=1,W9=V9+1,X9=2,V=1] 
* CE 69: start(V,V1,V9) = 1+ test(V1,W9,X9):8
     [V1>=W9+1,W9>=1,W9=V9+1,X9=2,V=1] 
* CE 70: start(V,V1,V9) = 1
     [V9>=0,V1>=0,V=1] 
* CE 71: start(V,V1,V9) = 0+ gt(W9,V1,X9):1
     [V1>=0,X9=1,W9=0,V=0] 
* CE 72: start(V,V1,V9) = 0+ gt(V,W9,X9):2
     [V>=1,X9=2,W9=0,V1=0] 
* CE 73: start(V,V1,V9) = 0+ gt(V,V1,W9):3
     [V1>=V,V>=1,W9=1] 
* CE 74: start(V,V1,V9) = 0+ gt(V,V1,W9):4
     [V>=V1+1,V1>=1,W9=2] 
* CE 75: start(V,V1,V9) = 1+ div(W9,X9,Y9,Z9):1
     [Z9=2,Y9=0,X9=0,W9=0,V1=0,V=0] 
* CE 76: start(V,V1,V9) = 1+ div(W9,V1,V1,X9):2
     [V1>=1,X9=1,W9=0,V=0] 
* CE 77: start(V,V1,V9) = 1+ div(V,V1,V1,W9):3
     [V1>=0,V>=0,W9=0] 
* CE 78: start(V,V1,V9) = 1+ div(V,V1,V1,W9):4
     [2*V1>=1,V>=1,W9=1] 
* CE 79: start(V,V1,V9) = 1+ div(V,V1,V1,W9):5
     [V>=V1,2*V1>=1,V>=1,W9=2] 
* CE 80: start(V,V1,V9) = 0+ div(W9,X9,V9,Y9):1
     [V9>=0,Y9=2,X9=0,W9=0,V1=0,V=0] 
* CE 81: start(V,V1,V9) = 0+ div(W9,V1,V9,X9):2
     [V9>=0,V1>=1,X9=1,W9=0,V=0] 
* CE 82: start(V,V1,V9) = 0+ div(V,V1,V9,W9):3
     [V9>=0,V1>=0,V>=0,W9=0] 
* CE 83: start(V,V1,V9) = 0+ div(V,V1,V9,W9):4
     [V1+V9>=1,V9>=0,V1>=0,V>=1,W9=1] 
* CE 84: start(V,V1,V9) = 0+ div(V,V1,V9,W9):5
     [V1+V9>=1,V>=V1,V9>=0,V1>=0,V>=1,W9=2] 
* CE 85: start(V,V1,V9) = 1+ test(W9,X9,Y9):1
     [Y9=0,X9=2,W9=0,V=0] 
* CE 86: start(V,V1,V9) = 1+ test(W9,X9,Y9):2
     [Y9=2,X9=2,W9=0,V=0] 
* CE 87: start(V,V1,V9) = 1+ test(V,W9,X9):4
     [V>=1,2>=V,X9=0,W9=2] 
* CE 88: start(V,V1,V9) = 1+ test(V,W9,X9):5
     [V>=3,X9=0,W9=2] 
* CE 89: start(V,V1,V9) = 1+ test(V,W9,X9):6
     [V>=3,X9=1,W9=2] 
* CE 90: start(V,V1,V9) = 1+ test(V,W9,X9):7
     [V>=1,2>=V,X9=2,W9=2] 
* CE 91: start(V,V1,V9) = 1+ test(V,W9,X9):8
     [V>=3,X9=2,W9=2] 
* CE 92: start(V,V1,V9) = 0+ test(W9,V1,X9):1
     [V1>=0,X9=0,W9=0,V=0] 
* CE 93: start(V,V1,V9) = 0+ test(W9,V1,X9):2
     [V1>=0,X9=2,W9=0,V=0] 
* CE 94: start(V,V1,V9) = 0+ test(V,W9,X9):3
     [V>=1,X9=0,W9=0,V1=0] 
* CE 95: start(V,V1,V9) = 0+ test(V,V1,W9):4
     [V1>=V,V>=1,W9=0] 
* CE 96: start(V,V1,V9) = 0+ test(V,V1,W9):5
     [V>=V1+1,V1>=1,W9=0] 
* CE 97: start(V,V1,V9) = 0+ test(V,V1,W9):6
     [V>=V1+1,V1>=1,W9=1] 
* CE 98: start(V,V1,V9) = 0+ test(V,V1,W9):7
     [V1>=V,V>=1,W9=2] 
* CE 99: start(V,V1,V9) = 0+ test(V,V1,W9):8
     [V>=V1+1,V1>=1,W9=2] 

### Cost equations --> "Loop" of start/3 
* CEs [88,89,91] --> Loop 31 
* CEs [48,52,53,72,94] --> Loop 32 
* CEs [47,49,50,51,54,55,56,57,58,59,60,61,62,73,74,77,78,79,82,83,84,95,96,97,98,99] --> Loop 33 
* CEs [63,64,65,66,67,68,69,70,87,90] --> Loop 34 
* CEs [71,75,76,80,81,85,86,92,93] --> Loop 35 

#### Loops of start/3 
* Loop 31: start(V,V1,V9) [V>=3] 
* Loop 32: start(V,V1,V9) [V>=1,V1=0] 
* Loop 33: start(V,V1,V9) [V1>=0,V>=0] 
* Loop 34: start(V,V1,V9) [V>=1,2>=V] 
* Loop 35: start(V,V1,V9) [V=0] 

### Ranking functions of CR start(V,V1,V9) 

#### Partial ranking functions of CR start(V,V1,V9) 


### Resulting Chains:start(V,V1,V9) 
* [35]
* [34]
* [33]
* [32]
* [31]


### Merging Chains  start/3 into  External patterns of execution 
* [[35]] --> 1 
* [[32],[33]] --> 2 
* [[34]] --> 3 
* [[31]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [15,16] 

 * loop 15:div(V,V1,V9,Out) -> [div(V',V1',V9',Out')] 
1
 * loop 16:div(V,V1,V9,Out) -> [div(V',V1',V9',Out')] 
1
#### Cost of phase [15,16]:div(V,V1,V9,Out) -> [div(V',V1',V9',Out')] 
1*it(15)+1*it(16)+0
  Such that:it(15) =< V
it(15) =< V-V'
aux(5) =< -V1+1
aux(6) =< -V1+V1'
it(16) =< it(15)+aux(6)
it(16) =< it(15)+aux(5)

#### Cost of phase [15,16]:div(V,V1,V9,Out) -> [div(V',V1',V9',Out')] 
1*it(15)+1*it(16)+0
  Such that:it(15) =< V
it(15) =< V-V'
aux(5) =< -V1+1
aux(6) =< -V1+V1'
it(16) =< it(15)+aux(6)
it(16) =< it(15)+aux(5)

#### Cost of phase [15,16]:div(V,V1,V9,Out) -> [div(V',V1',V9',Out')] 
1*it(15)+1*it(16)+0
  Such that:it(15) =< V
it(15) =< V-V'
aux(5) =< -V1+1
aux(6) =< -V1+V1'
it(16) =< it(15)+aux(6)
it(16) =< it(15)+aux(5)

#### Cost of chains of div(V,V1,V9,Out):
* Chain [[15,16],19]: 1*it(15)+1*it(16)+1
  Such that:it(15) =< V
aux(6) =< -V1
aux(5) =< -V1+1
it(16) =< it(15)+aux(6)
it(16) =< it(15)+aux(5)

  with precondition: [Out=2,V>=1,V1>=0,V9>=0,V>=V1,V1+V9>=1] 

* Chain [[15,16],18]: 1*it(15)+1*it(16)+1
  Such that:it(15) =< V
aux(5) =< -V1+1
it(16) =< it(15)+aux(5)

  with precondition: [Out=1,V>=1,V1>=0,V9>=0,V1+V9>=1] 

* Chain [[15,16],17]: 1*it(15)+1*it(16)+0
  Such that:it(15) =< V
aux(5) =< -V1+1
it(16) =< it(15)+aux(5)

  with precondition: [Out=0,V>=1,V1>=0,V9>=0,V1+V9>=1] 

* Chain [19]: 1
  with precondition: [V=0,V1=0,Out=2,V9>=0] 

* Chain [18]: 1
  with precondition: [V=0,Out=1,V1>=1,V9>=0] 

* Chain [17]: 0
  with precondition: [Out=0,V>=0,V1>=0,V9>=0] 


#### Cost of loops [22] 

 * loop 22:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1
#### Cost of phase [22]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'
it(22) =< V1
it(22) =< V1-V1'

#### Cost of phase [22]:gt(V,V1,Out) -> [gt(V',V1',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'
it(22) =< V1
it(22) =< V1-V1'

#### Cost of chains of gt(V,V1,Out):
* Chain [[22],21]: 1*it(22)+1
  Such that:it(22) =< V

  with precondition: [Out=1,V>=1,V1>=V] 

* Chain [[22],20]: 1*it(22)+1
  Such that:it(22) =< V1

  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [21]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [20]: 1
  with precondition: [V1=0,Out=2,V>=1] 


#### Cost of loops [23] 

 * loop 23:test(V,V1,Out) -> [test(V',V1',Out')] 
1*s(10)+1*s(11)+1*s(12)+6
  Such that:s(9) =< -V1+1
s(10) =< V1
s(11) =< V'
s(12) =< s(11)+s(9)

#### Cost of phase [23]:test(V,V1,Out) -> [test(V',V1',Out')] 
6*it(23)+2*s(13)+1*s(15)+0
  Such that:it(23) =< V-V1
it(23) =< V-V1-V'+V1'
s(16) =< -V1+1
s(16) =< -V1+V1'
aux(13) =< V
s(13) =< it(23)*aux(13)
s(15) =< s(13)+s(16)

#### Cost of phase [23]:test(V,V1,Out) -> [test(V',V1',Out')] 
6*it(23)+2*s(13)+1*s(15)+0
  Such that:it(23) =< V-V1
it(23) =< V-V1-V'+V1'
s(16) =< -V1+1
s(16) =< -V1+V1'
aux(13) =< V
s(13) =< it(23)*aux(13)
s(15) =< s(13)+s(16)

#### Cost of phase [23]:test(V,V1,Out) -> [test(V',V1',Out')] 
6*it(23)+2*s(13)+1*s(15)+0
  Such that:it(23) =< V-V1
it(23) =< V-V1-V'+V1'
s(16) =< -V1+1
s(16) =< -V1+V1'
aux(13) =< V
s(13) =< it(23)*aux(13)
s(15) =< s(13)+s(16)

#### Cost of phase [23]:test(V,V1,Out) -> [test(V',V1',Out')] 
6*it(23)+2*s(13)+1*s(15)+0
  Such that:it(23) =< V-V1
it(23) =< V-V1-V'+V1'
s(16) =< -V1+1
s(16) =< -V1+V1'
aux(13) =< V
s(13) =< it(23)*aux(13)
s(15) =< s(13)+s(16)

#### Cost of chains of test(V,V1,Out):
* Chain [[23],27]: 6*it(23)+1*s(4)+2*s(13)+1*s(15)+2
  Such that:s(16) =< -V1+1
aux(14) =< V
aux(15) =< V-V1
s(4) =< aux(14)
it(23) =< aux(15)
s(16) =< aux(15)
s(13) =< it(23)*aux(14)
s(15) =< s(13)+s(16)

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [[23],26]: 6*it(23)+2*s(13)+1*s(15)+7*s(17)+3*s(20)+5
  Such that:s(16) =< -V1+1
aux(19) =< V
aux(20) =< V-V1
aux(21) =< -V1
it(23) =< aux(20)
s(16) =< aux(20)
s(17) =< aux(19)
s(20) =< s(17)+aux(21)
s(13) =< it(23)*aux(19)
s(15) =< s(13)+s(16)

  with precondition: [Out=0,V1>=1,V>=V1+2] 

* Chain [[23],25]: 6*it(23)+2*s(13)+1*s(15)+2*s(31)+1*s(35)+6
  Such that:s(16) =< -V1+1
aux(22) =< V
aux(23) =< V-V1
aux(24) =< -V1
s(31) =< aux(22)
it(23) =< aux(23)
s(16) =< aux(23)
s(35) =< s(31)+aux(24)
s(13) =< it(23)*aux(22)
s(15) =< s(13)+s(16)

  with precondition: [Out=1,V1>=1,V>=V1+2] 

* Chain [[23],24]: 6*it(23)+2*s(13)+1*s(15)+1*s(36)+3
  Such that:s(16) =< -V1+1
aux(25) =< V
aux(26) =< V-V1
s(36) =< aux(25)
it(23) =< aux(26)
s(16) =< aux(26)
s(13) =< it(23)*aux(25)
s(15) =< s(13)+s(16)

  with precondition: [Out=2,V1>=1,V>=V1+1] 

* Chain [30]: 2
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [29]: 3
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [28]: 1*s(37)+1*s(39)+4
  Such that:s(38) =< 1
s(37) =< V
s(39) =< s(37)+s(38)

  with precondition: [V1=0,Out=0,V>=1] 

* Chain [27]: 1*s(4)+2
  Such that:s(4) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [26]: 4*s(17)+3*s(18)+2*s(20)+1*s(29)+5
  Such that:s(27) =< -V1
aux(16) =< V
aux(17) =< -V1+1
aux(18) =< V1
s(18) =< aux(16)
s(17) =< aux(18)
s(20) =< s(18)+aux(17)
s(29) =< s(18)+s(27)
s(29) =< s(18)+aux(17)

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [25]: 1*s(31)+1*s(32)+1*s(35)+6
  Such that:s(32) =< V
s(33) =< -V1
s(34) =< -V1+1
s(31) =< V1
s(35) =< s(32)+s(33)
s(35) =< s(32)+s(34)

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [24]: 1*s(36)+3
  Such that:s(36) =< V

  with precondition: [Out=2,V>=1,V1>=V] 


#### Cost of chains of start(V,V1,V9):
* Chain [35]: 4
  with precondition: [V=0] 

* Chain [34]: 17*s(78)+5*s(86)+8*s(87)+24*s(89)+8*s(91)+4*s(92)+2*s(113)+7
  Such that:aux(36) =< V
aux(37) =< V1
aux(38) =< V1-V9
aux(39) =< -V9
aux(40) =< V9+1
s(113) =< aux(36)
s(78) =< aux(37)
s(84) =< aux(39)
s(86) =< aux(40)
s(87) =< s(78)+aux(39)
s(89) =< aux(38)
s(84) =< aux(38)
s(91) =< s(89)*aux(37)
s(92) =< s(91)+s(84)

  with precondition: [2>=V,V>=1] 

* Chain [33]: 32*s(115)+7*s(117)+2*s(124)+5*s(139)+8*s(140)+24*s(142)+8*s(144)+4*s(145)+24*s(179)+6*s(183)+4*s(190)+24*s(212)+4*s(213)+8*s(214)+4*s(215)+10
  Such that:aux(48) =< V
aux(49) =< V-V1
aux(50) =< -V1
aux(51) =< -V1+1
aux(52) =< V1
aux(53) =< V1-V9
aux(54) =< -V9
aux(55) =< -V9+1
aux(56) =< V9+1
s(179) =< aux(48)
s(207) =< aux(51)
s(115) =< aux(52)
s(137) =< aux(54)
s(139) =< aux(56)
s(183) =< s(179)+aux(51)
s(190) =< s(179)+aux(50)
s(190) =< s(179)+aux(51)
s(212) =< aux(49)
s(207) =< aux(49)
s(213) =< s(179)+aux(50)
s(214) =< s(212)*aux(48)
s(215) =< s(214)+s(207)
s(117) =< s(115)+aux(55)
s(124) =< s(115)+aux(54)
s(124) =< s(115)+aux(55)
s(140) =< s(115)+aux(54)
s(142) =< aux(53)
s(137) =< aux(53)
s(144) =< s(142)*aux(52)
s(145) =< s(144)+s(137)

  with precondition: [V>=0,V1>=0] 

* Chain [32]: 1*s(237)+1*s(238)+7
  Such that:s(236) =< 1
s(237) =< V
s(238) =< s(237)+s(236)

  with precondition: [V1=0,V>=1] 

* Chain [31]: 39*s(245)+5*s(246)+8*s(247)+8*s(251)+4*s(252)+7
  Such that:aux(62) =< 2
aux(63) =< V
s(246) =< aux(62)
s(245) =< aux(63)
s(247) =< s(245)
s(251) =< s(245)*aux(63)
s(252) =< s(251)

  with precondition: [V>=3] 


Closed-form bounds of start(V,V1,V9): 
-------------------------------------
* Chain [35] with precondition: [V=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [34] with precondition: [2>=V,V>=1] 
    - Upper bound: 2*V+7+nat(V1)*25+nat(V1)*12*nat(V1-V9)+nat(-V9)*12+nat(V9+1)*5+nat(V1-V9)*24 
    - Complexity: n^2 
* Chain [33] with precondition: [V>=0,V1>=0] 
    - Upper bound: 38*V+10+12*V*nat(V-V1)+49*V1+12*V1*nat(V1-V9)+nat(-V9)*14+nat(V9+1)*5+nat(-V1+1)*10+nat(-V9+1)*7+nat(V-V1)*24+nat(V1-V9)*24 
    - Complexity: n^2 
* Chain [32] with precondition: [V1=0,V>=1] 
    - Upper bound: 2*V+8 
    - Complexity: n 
* Chain [31] with precondition: [V>=3] 
    - Upper bound: 47*V+17+12*V*V 
    - Complexity: n^2 

### Maximum cost of start(V,V1,V9): 2*V+3+max([max([1,nat(V1)*12*nat(V1-V9)+nat(V1)*25+nat(-V9)*12+nat(V9+1)*5+nat(V1-V9)*24]),36*V+3+max([9*V+7+12*V*V,12*V*nat(V-V1)+nat(V1)*49+nat(V1)*12*nat(V1-V9)+nat(-V9)*14+nat(V9+1)*5+nat(-V1+1)*10+nat(-V9+1)*7+nat(V-V1)*24+nat(V1-V9)*24])])+4 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 142 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 247 ms.
   - Equation cost structures 145 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 47 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 517 ms.

