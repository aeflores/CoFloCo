
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [p/2]
1. recursive [multiple] : [f/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into p/2
1. SCC is partially evaluated into f/2
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations p/2 
* CE 7 is refined into CE [9] 
* CE 8 is refined into CE [10] 


#### Refined cost equations p/2 
* CE 9: p(V,Out) = 1
     [Out>=0,Out+1=V] 
* CE 10: p(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [9] --> Loop 6 
* CEs [10] --> Loop 7 

#### Loops of p/2 
* Loop 6: p(V,Out) [V>=1,V=Out+1] 
* Loop 7: p(V,Out) [V>=0,Out=0] 

### Ranking functions of CR p(V,Out) 

#### Partial ranking functions of CR p(V,Out) 


### Resulting Chains:p(V,Out) 
* [7]
* [6]


### Merging Chains  p/2 into  External patterns of execution 
* [[7]] --> 1 
* [[6]] --> 2 


### Specialization of cost equations f/2 
* CE 5 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 


#### Refined cost equations f/2 
* CE 11: f(V,Out) = 1
     [Out=0,V=0] 
* CE 12: f(V,Out) = 0
     [V>=0,Out=0] 
* CE 13: f(V,Out) = 1+ p(V,W):1+ f(X,Y)+ f(Y,Z)
     [V>=1,Z+1=Out,X=0,W=0] 
* CE 14: f(V,Out) = 1+ p(W,X):2+ f(X,Y)+ f(Y,Z)
     [X>=0,X+1=W,Z+1=Out,X+1=V] 

### Cost equations --> "Loop" of f/2 
* CEs [14] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [11,12] --> Loop 10 

#### Loops of f/2 
* Loop 8: f(V,Out)->  f(V',Out')  f(Out',A'2)
                  [V>=1,Out=A'2+1,V=V'+1] 
* Loop 9: f(V,Out)->  f(V',Out')  f(Out',A'2)
                  [V>=1,Out=A'2+1,V'=0] 
* Loop 10: f(V,Out) [V>=0,Out=0] 

### Ranking functions of CR f(V,Out) 

#### Partial ranking functions of CR f(V,Out) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1,9:1]:
    V depends on loops [8:2,9:2] 


### Resulting Chains:f(V,Out) 
* [multiple([8,9],[[],[10]])]...
* [10]


### Merging Chains  f/2 into  External patterns of execution 
* [[10]] --> 1 
* [[multiple([8,9],[[],[10]])]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [15,16] 
* CE 3 is refined into CE [17,18] 


#### Refined cost equations start/1 
* CE 15: start(V) = 0+ f(V,W):1
     [V>=0,W=0] 
* CE 16: start(V) = 0+ f(V,W):2
     [V>=1] 
* CE 17: start(V) = 0+ p(V,W):1
     [V>=0,W=0] 
* CE 18: start(V) = 0+ p(W,X):2
     [X>=0,X+1=W,X+1=V] 

### Cost equations --> "Loop" of start/1 
* CEs [15,17,18] --> Loop 11 
* CEs [16] --> Loop 12 

#### Loops of start/1 
* Loop 11: start(V) [V>=0] 
* Loop 12: start(V) [V>=1] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [12]...
* [11]


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of p(V,Out):
* Chain [7]: 0
  with precondition: [Out=0,V>=0] 

* Chain [6]: 1
  with precondition: [V=Out+1,V>=1] 


#### Cost of loops [8,9] 

 * loop 8:f(V,Out) -> [f(V',Out'),f(V'2,Out'2)] 
2
 * loop 9:f(V,Out) -> [f(V',Out'),f(V'2,Out'2)] 
1
#### Cost of phase [8,9]:f(V,Out) -> [] 
3*it(8)+1*it([10])+0
#### Cost of chains of f(V,Out):
* Chain [multiple([8,9],[[],[10]])]...: 3*it(8)+1*it([10])+0
  with precondition: [V>=1] 

* Chain [10]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V):
* Chain [12]...: 4*s(1)+0
  with precondition: [V>=1] 

* Chain [11]: 1
  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [12]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11] with precondition: [V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 14 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 49 ms.

