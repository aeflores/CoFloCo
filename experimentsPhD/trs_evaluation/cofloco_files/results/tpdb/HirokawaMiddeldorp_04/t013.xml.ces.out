
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [f/2,g/2]  
 Merged into fg/2

#### Computed strongly connected components 
0. recursive  : [minus/3]
2. non_recursive  : [start/2]
1. recursive [non_tail,multiple] : [fg/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/3
2. SCC is partially evaluated into start/2
1. SCC is partially evaluated into fg/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/3 
* CE 6 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations minus/3 
* CE 10: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 11: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 12: minus(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 

### Cost equations --> "Loop" of minus/3 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of minus/3 
* Loop 8: minus(A,B,A) [A>=0,B=0] 
* Loop 9: minus(V1,V,Out) [V>=1,Out=0,V1=0] 
* Loop 10: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [10]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[10],9]
* [[10],8]
* [9]
* [8]


### Merging Chains  minus/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[9,[10]]] --> 3 
* [[8,[10]]] --> 4 


### Specialization of cost equations fg/2 
* CE 9 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 8 is refined into CE [15,16,17] 


#### Refined cost equations fg/2 
* CE 13: fg(A,B) = 1
     [B=1,A=0] 
* CE 14: fg(A,B) = 1
     [B=0,A=0] 
* CE 15: fg(A,A) = 1+ fg(B,C)+ fg(C,D)+ minus(A,E,A):2
     [A>=1,A=B+1,D=0,E=0] 
* CE 16: fg(A,B) = 1+ fg(C,D)+ fg(D,E)+ minus(A,E,F):3
     [E>=A+1,A>=1,A=C+1,F=0,B=0] 
* CE 17: fg(A,B) = 1+ fg(C,D)+ fg(D,E)+ minus(F,E,B):4
     [B>=0,E>=1,B+E=C+1,B+E=F,B+E=A] 

### Cost equations --> "Loop" of fg/2 
* CEs [17] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of fg/2 
* Loop 11: fg(A,B)->  fg(A',B')  fg(B',A'2)
                  [A>=B+1,B>=0,B+A'2=A,A=A'+1] 
* Loop 12: fg(A,A)->  fg(A',B')  fg(B',A'2)
                  [A>=1,A=A'+1,A'2=0] 
* Loop 13: fg(A,B)->  fg(A',B')  fg(B',A'2)
                  [A'2>=A+1,A>=1,A=A'+1,B=0] 
* Loop 14: fg(A,B) [B=1,A=0] 
* Loop 15: fg(A,B) [B=0,A=0] 

### Ranking functions of CR fg(A,B) 

#### Partial ranking functions of CR fg(A,B) 
* Partial RF of phase [11,12,13]:
  - RF of loop [11:1,12:1,13:1]:
    A depends on loops [11:2,12:2,13:2] 


### Resulting Chains:fg(A,B) 
* [multiple([11,12,13],[[],[15],[14]])]...
* [15]
* [14]


### Merging Chains  fg/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[multiple([11,12,13],[[],[15],[14]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [18,19,20,21] 
* CE 3 is refined into CE [22,23,24] 


#### Refined cost equations start/2 
* CE 18: start(V1,V) = 0+ minus(W1,V,X1):1
     [V>=1,X1=0,W1=0,V1=0] 
* CE 19: start(V1,V) = 0+ minus(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 20: start(V1,V) = 0+ minus(V1,V,W1):3
     [V>=V1+1,V1>=1,W1=0] 
* CE 21: start(V1,V) = 0+ minus(W1,V,X1):4
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 
* CE 22: start(V1,V) = 0+ fg(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 23: start(V1,V) = 0+ fg(W1,X1):2
     [X1=1,W1=0,V1=0] 
* CE 24: start(V1,V) = 0+ fg(V1,W1):3
     [V1>=W1,W1>=0,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [24] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18,22,23] --> Loop 20 

#### Loops of start/2 
* Loop 16: start(V1,V) [V1>=1] 
* Loop 17: start(V1,V) [V1>=V,V>=1] 
* Loop 18: start(V1,V) [V>=V1+1,V1>=1] 
* Loop 19: start(V1,V) [V1>=0,V=0] 
* Loop 20: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]
* [19]
* [18]
* [17]
* [16]...


### Merging Chains  start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 
* [[16]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [10]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of phase [10]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(10)+0
  Such that:it(10) =< V1
it(10) =< V1-V1'
it(10) =< V
it(10) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[10],9]: 1*it(10)+1
  Such that:it(10) =< V1

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [[10],8]: 1*it(10)+1
  Such that:it(10) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [9]: 1
  with precondition: [V1=0,Out=0,V>=1] 

* Chain [8]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [11,12,13] 

 * loop 11:fg(A,B) -> [fg(A',B'),fg(A'2,B'2)] 
1*s(2)+2
  Such that:s(2) =< A'+1

 * loop 12:fg(A,B) -> [fg(A',B'),fg(A'2,B'2)] 
2
 * loop 13:fg(A,B) -> [fg(A',B'),fg(A'2,B'2)] 
1*s(4)+2
  Such that:s(4) =< A

#### Cost of phase [11,12,13]:fg(A,B) -> [] 
6*it(11)+2*it([14])+1*s(5)+1*s(6)+0
#### Cost of chains of fg(A,B):
* Chain [multiple([11,12,13],[[],[15],[14]])]...: 6*it(11)+2*it([14])+1*s(5)+1*s(6)+0
  with precondition: [A>=B,B>=0,A>=1] 

* Chain [15]: 1
  with precondition: [A=0,B=0] 

* Chain [14]: 1
  with precondition: [A=0,B=1] 


#### Cost of chains of start(V1,V):
* Chain [20]: 1
  with precondition: [V1=0] 

* Chain [19]: 1
  with precondition: [V=0,V1>=0] 

* Chain [18]: 1*s(7)+1
  Such that:s(7) =< V1

  with precondition: [V1>=1,V>=V1+1] 

* Chain [17]: 1*s(8)+1
  Such that:s(8) =< V

  with precondition: [V>=1,V1>=V] 

* Chain [16]...: 10*s(9)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20] with precondition: [V1=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [V1>=1,V>=V1+1] 
    - Upper bound: V1+1 
    - Complexity: n 
* Chain [17] with precondition: [V>=1,V1>=V] 
    - Upper bound: V+1 
    - Complexity: n 
* Chain [16]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 31 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 137 ms.

