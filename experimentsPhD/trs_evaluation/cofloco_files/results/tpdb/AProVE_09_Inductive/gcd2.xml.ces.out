
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [ge/3]
1. recursive  : [gt/3]
2. recursive  : [if/4,minus/3]
3. recursive  : [gcd/3,if1/4,if2/4,if3/4]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into ge/3
1. SCC is partially evaluated into gt/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into gcd/3
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations ge/3 
* CE 35 is refined into CE [36] 
* CE 32 is refined into CE [37] 
* CE 33 is refined into CE [38] 
* CE 34 is refined into CE [39] 


#### Refined cost equations ge/3 
* CE 36: ge(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: ge(V1,V,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 38: ge(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 39: ge(V1,V,Out) = 1+ ge(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of ge/3 
* CEs [39] --> Loop 18 
* CEs [36] --> Loop 19 
* CEs [37] --> Loop 20 
* CEs [38] --> Loop 21 

#### Loops of ge/3 
* Loop 18: ge(V1,V,Out)->  ge(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 19: ge(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 20: ge(V1,V,Out) [V1>=0,Out=2,V=0] 
* Loop 21: ge(V1,V,Out) [V>=1,Out=1,V1=0] 

### Ranking functions of CR ge(V1,V,Out) 
* RF of phase [18]: [V,V1]

#### Partial ranking functions of CR ge(V1,V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:ge(V1,V,Out) 
* [[18],21]
* [[18],20]
* [[18],19]
* [21]
* [20]
* [19]


### Merging Chains  ge/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19],[19,[18]]] --> 3 
* [[21,[18]]] --> 4 
* [[20,[18]]] --> 5 


### Specialization of cost equations gt/3 
* CE 20 is refined into CE [40] 
* CE 18 is refined into CE [41] 
* CE 17 is refined into CE [42] 
* CE 19 is refined into CE [43] 


#### Refined cost equations gt/3 
* CE 40: gt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 41: gt(V1,V,Out) = 1
     [V1>=1,Out=2,V=0] 
* CE 42: gt(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 
* CE 43: gt(V1,V,Out) = 1+ gt(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of gt/3 
* CEs [43] --> Loop 22 
* CEs [40] --> Loop 23 
* CEs [41] --> Loop 24 
* CEs [42] --> Loop 25 

#### Loops of gt/3 
* Loop 22: gt(V1,V,Out)->  gt(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 23: gt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 24: gt(V1,V,Out) [V1>=1,Out=2,V=0] 
* Loop 25: gt(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR gt(V1,V,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR gt(V1,V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:gt(V1,V,Out) 
* [[22],25]
* [[22],24]
* [[22],23]
* [25]
* [24]
* [23]


### Merging Chains  gt/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23],[23,[22]]] --> 3 
* [[25,[22]]] --> 4 
* [[24,[22]]] --> 5 


### Specialization of cost equations minus/3 
* CE 21 is refined into CE [44,45,46,47] 
* CE 22 is refined into CE [48] 
* CE 24 is refined into CE [49] 
* CE 23 is refined into CE [50,51] 


#### Refined cost equations minus/3 
* CE 44: minus(V1,V,Out) = 1+ gt(V1,W1,X1):2
     [V1>=1,X1=2,W1=0,Out=0,V=0] 
* CE 45: minus(V1,V,Out) = 1+ gt(V1,V,W1):3
     [V>=0,V1>=1,W1=0,Out=0] 
* CE 46: minus(V1,V,Out) = 1+ gt(V1,V,W1):4
     [V>=V1,V1>=1,W1=1,Out=0] 
* CE 47: minus(V1,V,Out) = 1+ gt(V1,V,W1):5
     [V1>=V+1,V>=1,W1=2,Out=0] 
* CE 48: minus(V1,V,Out) = 2+ gt(V1,V,W1):4
     [V>=V1,V1>=1,W1=1,Out=0] 
* CE 49: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 50: minus(V1,V,Out) = 2+ gt(V1,W1,X1):2+ minus(Y1,Z1,A2)
     [V1>=1,V1=Y1+1,A2+1=Out,Z1=0,X1=2,W1=0,V=0] 
* CE 51: minus(V1,V,Out) = 2+ gt(V1,V,W1):5+ minus(X1,V,Y1)
     [V1>=V+1,V>=1,V1=X1+1,Y1+1=Out,W1=2] 

### Cost equations --> "Loop" of minus/3 
* CEs [51] --> Loop 26 
* CEs [50] --> Loop 27 
* CEs [44,45,46,47,48,49] --> Loop 28 

#### Loops of minus/3 
* Loop 26: minus(V1,V,Out)->  minus(V1',V,Out')
                  [V1>=V+1,V>=1,Out=Out'+1,V1=V1'+1] 
* Loop 27: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=0,V=0] 
* Loop 28: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [26]: [V1-1,V1-V]
* RF of phase [27]: [V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V1-1
    V1-V
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[27],28]
* [[26],28]
* [28]


### Merging Chains  minus/3 into  External patterns of execution 
* [[28,[27]]] --> 1 
* [[28]] --> 2 
* [[28,[26]]] --> 3 


### Specialization of cost equations gcd/3 
* CE 26 is refined into CE [52] 
* CE 29 is refined into CE [53] 
* CE 25 is refined into CE [54,55,56,57] 
* CE 28 is refined into CE [58,59,60,61] 
* CE 31 is refined into CE [62,63,64,65,66] 
* CE 30 is refined into CE [67,68] 
* CE 27 is refined into CE [69,70] 


#### Refined cost equations gcd/3 
* CE 52: gcd(A,B,B) = 3+ ge(C,B,D):1+ gt(E,F,G):1
     [B>=1,G=1,F=0,E=0,D=1,C=0,A=0] 
* CE 53: gcd(A,B,A) = 3+ ge(A,C,D):2+ gt(E,F,G):1
     [A>=0,G=1,F=0,E=0,D=2,C=0,B=0] 
* CE 54: gcd(V1,V,Out) = 2+ ge(W1,V,X1):1+ gt(Y1,Z1,A2):1
     [V>=1,A2=1,Z1=0,Y1=0,X1=1,W1=0,Out=0,V1=0] 
* CE 55: gcd(V1,V,Out) = 2+ ge(W1,V,X1):1+ gt(Y1,Z1,A2):3
     [V>=1,A2=0,Z1=0,Y1=0,X1=1,W1=0,Out=0,V1=0] 
* CE 56: gcd(V1,V,Out) = 2+ ge(V1,V,W1):4+ gt(V1,X1,Y1):2
     [V>=V1+1,V1>=1,Y1=2,X1=0,W1=1,Out=0] 
* CE 57: gcd(V1,V,Out) = 2+ ge(V1,V,W1):4+ gt(V1,X1,Y1):3
     [V>=V1+1,V1>=1,Y1=0,X1=0,W1=1,Out=0] 
* CE 58: gcd(V1,V,Out) = 2+ ge(V1,W1,X1):2+ gt(Y1,Z1,A2):1
     [V1>=0,A2=1,Z1=0,Y1=0,X1=2,W1=0,Out=0,V=0] 
* CE 59: gcd(V1,V,Out) = 2+ ge(V1,W1,X1):2+ gt(Y1,Z1,A2):3
     [V1>=0,A2=0,Z1=0,Y1=0,X1=2,W1=0,Out=0,V=0] 
* CE 60: gcd(V1,V,Out) = 2+ ge(V1,V,W1):5+ gt(V,X1,Y1):2
     [V1>=V,V>=1,Y1=2,X1=0,W1=2,Out=0] 
* CE 61: gcd(V1,V,Out) = 2+ ge(V1,V,W1):5+ gt(V,X1,Y1):3
     [V1>=V,V>=1,Y1=0,X1=0,W1=2,Out=0] 
* CE 62: gcd(V1,V,Out) = 1+ ge(W1,V,X1):1
     [V>=1,X1=1,W1=0,Out=0,V1=0] 
* CE 63: gcd(V1,V,Out) = 1+ ge(V1,W1,X1):2
     [V1>=0,X1=2,W1=0,Out=0,V=0] 
* CE 64: gcd(V1,V,Out) = 1+ ge(V1,V,W1):3
     [V>=0,V1>=0,W1=0,Out=0] 
* CE 65: gcd(V1,V,Out) = 1+ ge(V1,V,W1):4
     [V>=V1+1,V1>=1,W1=1,Out=0] 
* CE 66: gcd(V1,V,Out) = 1+ ge(V1,V,W1):5
     [V1>=V,V>=1,W1=2,Out=0] 
* CE 67: gcd(V1,V,Out) = 3+ ge(V1,V,W1):5+ gt(V,X1,Y1):2+ minus(V1,V,Z1):2+ gcd(A2,V,Out)
     [V1>=V,V>=1,A2=0,Z1=0,Y1=2,X1=0,W1=2] 
* CE 68: gcd(V1,V,Out) = 3+ ge(V1,V,W1):5+ gt(V,X1,Y1):2+ minus(V1,V,Z1):3+ gcd(Z1,V,Out)
     [V1>=V+Z1,Z1>=1,V>=1,Y1=2,X1=0,W1=2] 
* CE 69: gcd(V1,V,Out) = 3+ ge(V1,V,W1):4+ gt(V1,X1,Y1):2+ minus(V,V1,Z1):2+ gcd(V1,A2,Out)
     [V>=V1+1,V1>=1,A2=0,Z1=0,Y1=2,X1=0,W1=1] 
* CE 70: gcd(V1,V,Out) = 3+ ge(V1,V,W1):4+ gt(V1,X1,Y1):2+ minus(V,V1,Z1):3+ gcd(V1,Z1,Out)
     [V>=V1+Z1,Z1>=1,V1>=1,Y1=2,X1=0,W1=1] 

### Cost equations --> "Loop" of gcd/3 
* CEs [68] --> Loop 29 
* CEs [70] --> Loop 30 
* CEs [69] --> Loop 31 
* CEs [67] --> Loop 32 
* CEs [53] --> Loop 33 
* CEs [58,59,63] --> Loop 34 
* CEs [52] --> Loop 35 
* CEs [54,55,56,57,60,61,62,64,65,66] --> Loop 36 

#### Loops of gcd/3 
* Loop 29: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V+V1',V1'>=1,V>=1] 
* Loop 30: gcd(V1,V,Out)->  gcd(V1,V',Out)
                  [V>=V1+V',V'>=1,V1>=1] 
* Loop 31: gcd(V1,V,Out)->  gcd(V1,V',Out)
                  [V>=V1+1,V1>=1,V'=0] 
* Loop 32: gcd(V1,V,Out)->  gcd(V1',V,Out)
                  [V1>=V,V>=1,V1'=0] 
* Loop 33: gcd(A,B,A) [A>=0,B=0] 
* Loop 34: gcd(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 35: gcd(A,B,B) [B>=1,A=0] 
* Loop 36: gcd(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR gcd(V1,V,Out) 
* RF of phase [29,30]: [V1+V-2]

#### Partial ranking functions of CR gcd(V1,V,Out) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1]:
    V1-1
    V1-V depends on loops [30:1] 
  - RF of loop [30:1]:
    V-1
    -V1+V depends on loops [29:1] 


### Resulting Chains:gcd(V1,V,Out) 
* [[29,30],36]
* [[29,30],32,36]
* [[29,30],32,35]
* [[29,30],31,36]
* [[29,30],31,34]
* [[29,30],31,33]
* [36]
* [35]
* [34]
* [33]
* [32,36]
* [32,35]
* [31,36]
* [31,34]
* [31,33]


### Merging Chains  gcd/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34,31],[36,31],[36,32],[34],[36],[34,31,[29,30]],[36,31,[29,30]],[36,32,[29,30]],[36,[29,30]]] --> 2 
* [[33]] --> 3 
* [[33,31]] --> 4 
* [[35,32]] --> 5 
* [[33,31,[29,30]],[35,32,[29,30]]] --> 6 


### Specialization of cost equations start/3 
* CE 7 is refined into CE [71,72,73,74,75,76,77,78] 
* CE 8 is refined into CE [79,80,81] 
* CE 9 is refined into CE [82] 
* CE 10 is refined into CE [83,84,85,86,87,88] 
* CE 11 is refined into CE [89,90,91,92,93,94,95,96,97] 
* CE 12 is refined into CE [98,99,100] 
* CE 2 is refined into CE [101,102,103] 
* CE 3 is refined into CE [104] 
* CE 4 is refined into CE [105] 
* CE 5 is refined into CE [106] 
* CE 6 is refined into CE [107,108,109,110,111,112] 
* CE 13 is refined into CE [113,114,115] 
* CE 14 is refined into CE [116,117,118,119,120,121] 
* CE 15 is refined into CE [122,123,124,125,126] 
* CE 16 is refined into CE [127,128,129,130,131] 


#### Refined cost equations start/3 
* CE 71: start(V1,V,V5) = 1+ minus(V5,W5,X5):1+ gcd(Y5,X5,X5):1
     [V5>=X5,X5>=1,Y5=0,W5=0,V=0,V1=2] 
* CE 72: start(V1,V,V5) = 1+ minus(V5,W5,X5):1+ gcd(Y5,X5,Z5):2
     [V5>=X5,X5>=1,Z5=0,Y5=0,W5=0,V=0,V1=2] 
* CE 73: start(V1,V,V5) = 1+ minus(V5,V,W5):2+ gcd(V,X5,Y5):2
     [V>=0,V5>=0,Y5=0,X5=0,W5=0,V1=2] 
* CE 74: start(V1,V,V5) = 1+ minus(V5,V,W5):2+ gcd(V,X5,V):3
     [V>=0,V5>=0,X5=0,W5=0,V1=2] 
* CE 75: start(V1,V,V5) = 1+ minus(V5,V,W5):3+ gcd(V,W5,X5):2
     [V5>=V+W5,W5>=1,V>=1,X5=0,V1=2] 
* CE 76: start(V1,V,V5) = 1+ minus(V5,V,W5):3+ gcd(V,W5,V):4
     [V5>=V+W5,W5>=V+1,V>=1,V1=2] 
* CE 77: start(V1,V,V5) = 1+ minus(V5,V,W5):3+ gcd(V,W5,W5):5
     [V5>=V+W5,V>=W5,W5>=1,V1=2] 
* CE 78: start(V1,V,V5) = 1+ minus(V5,V,W5):3+ gcd(V,W5,X5):6
     [V5>=V+W5,V+W5>=3*X5,W5>=X5,V>=X5,X5>=1,V1=2] 
* CE 79: start(V1,V,V5) = 1+ gt(W5,X5,Y5):1
     [V>=0,Y5=1,X5=0,W5=0,V5=0,V1=2] 
* CE 80: start(V1,V,V5) = 1+ gt(V5,W5,X5):2
     [V5>=1,V>=0,X5=2,W5=0,V1=2] 
* CE 81: start(V1,V,V5) = 1+ gt(V5,W5,X5):3
     [V5>=0,V>=0,X5=0,W5=0,V1=2] 
* CE 82: start(V1,V,V5) = 2+ gt(W5,X5,Y5):1
     [V>=0,Y5=1,X5=0,W5=0,V5=0,V1=2] 
* CE 83: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):2+ gcd(Z5,V5,V5):1
     [V5>=1,V>=0,Z5=0,Y5=0,X5=2,W5=0,V1=2] 
* CE 84: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):2+ gcd(Z5,V5,A6):2
     [V5>=1,V>=0,A6=0,Z5=0,Y5=0,X5=2,W5=0,V1=2] 
* CE 85: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):3+ gcd(Y5,V5,Z5):2
     [V>=V5+Y5,V5>=1,Y5>=1,Z5=0,X5=2,W5=0,V1=2] 
* CE 86: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):3+ gcd(Y5,V5,Y5):4
     [V>=V5+Y5,V5>=Y5+1,Y5>=1,X5=2,W5=0,V1=2] 
* CE 87: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):3+ gcd(Y5,V5,V5):5
     [V>=V5+Y5,Y5>=V5,V5>=1,X5=2,W5=0,V1=2] 
* CE 88: start(V1,V,V5) = 2+ gt(V5,W5,X5):2+ minus(V,V5,Y5):3+ gcd(Y5,V5,Z5):6
     [V>=V5+Y5,V5+Y5>=3*Z5,V5>=Z5,Y5>=Z5,Z5>=1,X5=2,W5=0,V1=2] 
* CE 89: start(V1,V,V5) = 1+ minus(V,W5,X5):1+ gcd(X5,Y5,Z5):2
     [V>=X5,X5>=1,Z5=0,Y5=0,W5=0,V5=0,V1=2] 
* CE 90: start(V1,V,V5) = 1+ minus(V,W5,X5):1+ gcd(X5,Y5,X5):3
     [V>=X5,X5>=1,Y5=0,W5=0,V5=0,V1=2] 
* CE 91: start(V1,V,V5) = 1+ minus(V,V5,W5):2+ gcd(X5,V5,V5):1
     [V5>=1,V>=0,X5=0,W5=0,V1=2] 
* CE 92: start(V1,V,V5) = 1+ minus(V,V5,W5):2+ gcd(X5,V5,Y5):2
     [V5>=0,V>=0,Y5=0,X5=0,W5=0,V1=2] 
* CE 93: start(V1,V,V5) = 1+ minus(V,W5,X5):2+ gcd(Y5,Z5,A6):3
     [V>=0,A6=0,Z5=0,Y5=0,X5=0,W5=0,V5=0,V1=2] 
* CE 94: start(V1,V,V5) = 1+ minus(V,V5,W5):3+ gcd(W5,V5,X5):2
     [V>=V5+W5,V5>=1,W5>=1,X5=0,V1=2] 
* CE 95: start(V1,V,V5) = 1+ minus(V,V5,W5):3+ gcd(W5,V5,W5):4
     [V>=V5+W5,V5>=W5+1,W5>=1,V1=2] 
* CE 96: start(V1,V,V5) = 1+ minus(V,V5,W5):3+ gcd(W5,V5,V5):5
     [V>=V5+W5,W5>=V5,V5>=1,V1=2] 
* CE 97: start(V1,V,V5) = 1+ minus(V,V5,W5):3+ gcd(W5,V5,X5):6
     [V>=V5+W5,V5+W5>=3*X5,V5>=X5,W5>=X5,X5>=1,V1=2] 
* CE 98: start(V1,V,V5) = 1+ minus(V,W5,X5):1
     [V>=X5,X5>=1,W5=0,V5=0,V1=2] 
* CE 99: start(V1,V,V5) = 1+ minus(V,V5,W5):2
     [V5>=0,V>=0,W5=0,V1=2] 
* CE 100: start(V1,V,V5) = 1+ minus(V,V5,W5):3
     [V>=V5+W5,W5>=1,V5>=1,V1=2] 
* CE 101: start(V1,V,V5) = 1+ gt(W5,X5,Y5):1
     [V5>=0,Y5=1,X5=0,W5=0,V=0,V1=1] 
* CE 102: start(V1,V,V5) = 1+ gt(V,W5,X5):2
     [V>=1,V5>=0,X5=2,W5=0,V1=1] 
* CE 103: start(V1,V,V5) = 1+ gt(V,W5,X5):3
     [V>=0,V5>=0,X5=0,W5=0,V1=1] 
* CE 104: start(V1,V,V5) = 0
     [V5>=0,V>=0,V1>=0] 
* CE 105: start(V1,V,V5) = 2+ gt(W5,X5,Y5):1
     [V5>=0,Y5=1,X5=0,W5=0,V=0,V1=1] 
* CE 106: start(V1,V,V5) = 1
     [V5>=0,V>=0,V1=1] 
* CE 107: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):2+ gcd(V,Z5,A6):2
     [V>=1,V5>=0,A6=0,Z5=0,Y5=0,X5=2,W5=0,V1=1] 
* CE 108: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):2+ gcd(V,Z5,V):3
     [V>=1,V5>=0,Z5=0,Y5=0,X5=2,W5=0,V1=1] 
* CE 109: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):3+ gcd(V,Y5,Z5):2
     [V5>=V+Y5,Y5>=1,V>=1,Z5=0,X5=2,W5=0,V1=1] 
* CE 110: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):3+ gcd(V,Y5,V):4
     [V5>=V+Y5,Y5>=V+1,V>=1,X5=2,W5=0,V1=1] 
* CE 111: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):3+ gcd(V,Y5,Y5):5
     [V5>=V+Y5,V>=Y5,Y5>=1,X5=2,W5=0,V1=1] 
* CE 112: start(V1,V,V5) = 2+ gt(V,W5,X5):2+ minus(V5,V,Y5):3+ gcd(V,Y5,Z5):6
     [V5>=V+Y5,V+Y5>=3*Z5,Y5>=Z5,V>=Z5,Z5>=1,X5=2,W5=0,V1=1] 
* CE 113: start(V1,V,V5) = 0+ minus(V1,W5,X5):1
     [V1>=X5,X5>=1,W5=0,V=0] 
* CE 114: start(V1,V,V5) = 0+ minus(V1,V,W5):2
     [V>=0,V1>=0,W5=0] 
* CE 115: start(V1,V,V5) = 0+ minus(V1,V,W5):3
     [V1>=V+W5,W5>=1,V>=1] 
* CE 116: start(V1,V,V5) = 0+ gcd(W5,V,V):1
     [V>=1,W5=0,V1=0] 
* CE 117: start(V1,V,V5) = 0+ gcd(V1,V,W5):2
     [V>=0,V1>=0,W5=0] 
* CE 118: start(V1,V,V5) = 0+ gcd(V1,W5,V1):3
     [V1>=0,W5=0,V=0] 
* CE 119: start(V1,V,V5) = 0+ gcd(V1,V,V1):4
     [V>=V1+1,V1>=1] 
* CE 120: start(V1,V,V5) = 0+ gcd(V1,V,V):5
     [V1>=V,V>=1] 
* CE 121: start(V1,V,V5) = 0+ gcd(V1,V,W5):6
     [V1+V>=3*W5,V>=W5,V1>=W5,W5>=1] 
* CE 122: start(V1,V,V5) = 0+ gt(W5,V,X5):1
     [V>=0,X5=1,W5=0,V1=0] 
* CE 123: start(V1,V,V5) = 0+ gt(V1,W5,X5):2
     [V1>=1,X5=2,W5=0,V=0] 
* CE 124: start(V1,V,V5) = 0+ gt(V1,V,W5):3
     [V>=0,V1>=0,W5=0] 
* CE 125: start(V1,V,V5) = 0+ gt(V1,V,W5):4
     [V>=V1,V1>=1,W5=1] 
* CE 126: start(V1,V,V5) = 0+ gt(V1,V,W5):5
     [V1>=V+1,V>=1,W5=2] 
* CE 127: start(V1,V,V5) = 0+ ge(W5,V,X5):1
     [V>=1,X5=1,W5=0,V1=0] 
* CE 128: start(V1,V,V5) = 0+ ge(V1,W5,X5):2
     [V1>=0,X5=2,W5=0,V=0] 
* CE 129: start(V1,V,V5) = 0+ ge(V1,V,W5):3
     [V>=0,V1>=0,W5=0] 
* CE 130: start(V1,V,V5) = 0+ ge(V1,V,W5):4
     [V>=V1+1,V1>=1,W5=1] 
* CE 131: start(V1,V,V5) = 0+ ge(V1,V,W5):5
     [V1>=V,V>=1,W5=2] 

### Cost equations --> "Loop" of start/3 
* CEs [113,118,123,128] --> Loop 37 
* CEs [79,82,89,90,93,98] --> Loop 38 
* CEs [71,72,73,74,75,76,77,78,80,81,83,84,85,86,87,88,91,92,94,95,96,97,99,100] --> Loop 39 
* CEs [101,102,103,105,106,107,108,109,110,111,112] --> Loop 40 
* CEs [104,114,115,116,117,119,120,121,122,124,125,126,127,129,130,131] --> Loop 41 

#### Loops of start/3 
* Loop 37: start(V1,V,V5) [V1>=0,V=0] 
* Loop 38: start(V1,V,V5) [V>=0,V5=0,V1=2] 
* Loop 39: start(V1,V,V5) [V5>=0,V>=0,V1=2] 
* Loop 40: start(V1,V,V5) [V5>=0,V>=0,V1=1] 
* Loop 41: start(V1,V,V5) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V5) 

#### Partial ranking functions of CR start(V1,V,V5) 


### Resulting Chains:start(V1,V,V5) 
* [41]
* [40]
* [39]
* [38]
* [37]


### Merging Chains  start/3 into  External patterns of execution 
* [[40],[41]] --> 1 
* [[38],[39]] --> 2 
* [[37]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:ge(V1,V,Out) -> [ge(V1',V',Out')] 
1
#### Cost of phase [18]:ge(V1,V,Out) -> [ge(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:ge(V1,V,Out) -> [ge(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of phase [18]:ge(V1,V,Out) -> [ge(V1',V',Out')] 
1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
it(18) =< V
it(18) =< V-V'

#### Cost of chains of ge(V1,V,Out):
* Chain [[18],21]: 1*it(18)+1
  Such that:it(18) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [21]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [20]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [19]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [22] 

 * loop 22:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1
#### Cost of phase [22]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:gt(V1,V,Out) -> [gt(V1',V',Out')] 
1*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of chains of gt(V1,V,Out):
* Chain [[22],25]: 1*it(22)+1
  Such that:it(22) =< V1

  with precondition: [Out=1,V1>=1,V>=V1] 

* Chain [[22],24]: 1*it(22)+1
  Such that:it(22) =< V

  with precondition: [Out=2,V>=1,V1>=V+1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [25]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [24]: 1
  with precondition: [V=0,Out=2,V1>=1] 

* Chain [23]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [27] 

 * loop 27:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3
#### Cost of phase [27]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(27)+0
  Such that:it(27) =< V1
it(27) =< V1-V1'

#### Cost of loops [26] 

 * loop 26:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*s(8)+3
  Such that:s(8) =< V'

#### Cost of phase [26]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
3*it(26)+1*s(9)+0
  Such that:it(26) =< V1
it(26) =< V1-V
it(26) =< V1-V-V1'+V'
it(26) =< V1-V1'
aux(3) =< V
s(9) =< it(26)*aux(3)

#### Cost of chains of minus(V1,V,Out):
* Chain [[27],28]: 3*it(27)+2*s(4)+3
  Such that:aux(1) =< V1-Out
it(27) =< Out
s(4) =< aux(1)

  with precondition: [V=0,Out>=1,V1>=Out] 

* Chain [[26],28]: 3*it(26)+2*s(3)+2*s(4)+1*s(9)+3
  Such that:aux(1) =< V1-Out
it(26) =< Out
aux(4) =< V
s(4) =< aux(1)
s(3) =< aux(4)
s(9) =< it(26)*aux(4)

  with precondition: [V>=1,Out>=1,V1>=Out+V] 

* Chain [28]: 2*s(3)+2*s(4)+3
  Such that:aux(1) =< V1
aux(2) =< V
s(4) =< aux(1)
s(3) =< aux(2)

  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [29,30] 

 * loop 29:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(30)+3*s(28)+2*s(31)+1*s(32)+8
  Such that:s(27) =< V1-V1'
s(28) =< V1'
s(29) =< V'
s(30) =< s(29)
s(31) =< s(27)
s(32) =< s(28)*s(29)

 * loop 30:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
3*s(43)+3*s(41)+2*s(44)+1*s(45)+8
  Such that:s(40) =< V-V'
s(41) =< V'
s(42) =< V1
s(43) =< s(42)
s(44) =< s(40)
s(45) =< s(41)*s(42)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of phase [29,30]:gcd(V1,V,Out) -> [gcd(V1',V',Out')] 
8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+0
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(15) =< V1
aux(16) =< V1+V
aux(17) =< V1+V-V1'-V'
aux(18) =< V1-V1'
aux(19) =< V
aux(20) =< V-V'
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(19)

#### Cost of chains of gcd(V1,V,Out):
* Chain [[29,30],36]: 8*it(29)+8*it(30)+3*s(11)+7*s(14)+5*s(46)+3*s(47)+1*s(49)+3*s(53)+2*s(54)+1*s(55)+4
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V
aux(5) =< aux(21)
aux(5) =< aux(22)
aux(6) =< aux(22)
aux(6) =< aux(23)
s(11) =< aux(5)
s(14) =< aux(6)
it(29) =< aux(21)
it(29) =< aux(22)
it(30) =< aux(22)
it(30) =< aux(23)
it(30) =< aux(22)+aux(13)
it(29) =< aux(22)+aux(10)
s(53) =< it(30)*aux(23)
s(47) =< it(29)*aux(21)
s(54) =< aux(23)
s(55) =< s(53)*aux(21)
s(46) =< aux(21)
s(49) =< s(47)*aux(23)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[29,30],32,36]: 8*it(29)+8*it(30)+9*s(14)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+12
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(26) =< V1
aux(27) =< V1+V
aux(28) =< V
s(14) =< aux(27)
it(29) =< aux(26)
it(29) =< aux(27)
it(30) =< aux(27)
s(57) =< aux(27)
it(30) =< aux(28)
s(57) =< aux(28)
it(30) =< aux(27)+aux(13)
it(29) =< aux(27)+aux(10)
s(53) =< it(30)*aux(28)
s(47) =< it(29)*aux(26)
s(52) =< s(57)
s(54) =< aux(28)
s(55) =< s(53)*aux(26)
s(46) =< aux(26)
s(49) =< s(47)*aux(28)

  with precondition: [Out=0,V1>=1,V>=1,V+V1>=3] 

* Chain [[29,30],32,35]: 8*it(29)+8*it(30)+7*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+3*s(58)+13
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(16) =< V1+V
aux(17) =< V1+V-Out
aux(19) =< V
aux(20) =< V-Out
aux(24) =< Out
aux(29) =< V1
s(58) =< aux(24)
s(46) =< aux(29)
it(29) =< aux(29)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(30) =< aux(19)
s(56) =< aux(19)
s(57) =< aux(19)
it(30) =< aux(20)
s(56) =< aux(20)
s(57) =< aux(20)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(19)
s(47) =< it(29)*aux(29)
s(52) =< s(57)
s(54) =< s(56)
s(55) =< s(53)*aux(29)
s(49) =< s(47)*aux(19)

  with precondition: [Out>=1,V1>=Out,V>=Out,V+V1>=3*Out] 

* Chain [[29,30],31,36]: 8*it(29)+8*it(30)+8*s(11)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+12
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(32) =< V1
aux(33) =< V1+V
aux(34) =< V
s(11) =< aux(33)
it(29) =< aux(32)
it(29) =< aux(33)
it(30) =< aux(33)
s(57) =< aux(33)
it(30) =< aux(34)
s(57) =< aux(34)
it(30) =< aux(33)+aux(13)
it(29) =< aux(33)+aux(10)
s(53) =< it(30)*aux(34)
s(47) =< it(29)*aux(32)
s(52) =< s(57)
s(54) =< aux(34)
s(55) =< s(53)*aux(32)
s(46) =< aux(32)
s(49) =< s(47)*aux(34)

  with precondition: [Out=0,V1>=1,V>=2,V1+2*V>=7] 

* Chain [[29,30],31,34]: 8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+2*s(54)+1*s(55)+5*s(63)+12
  Such that:aux(13) =< -V1+V
aux(10) =< V1-V
aux(35) =< V1
aux(36) =< V1+V
aux(37) =< V
s(63) =< aux(36)
it(29) =< aux(35)
it(29) =< aux(36)
it(30) =< aux(36)
s(57) =< aux(36)
it(30) =< aux(37)
s(57) =< aux(37)
it(30) =< aux(36)+aux(13)
it(29) =< aux(36)+aux(10)
s(53) =< it(30)*aux(37)
s(47) =< it(29)*aux(35)
s(52) =< s(57)
s(54) =< aux(37)
s(55) =< s(53)*aux(35)
s(46) =< aux(35)
s(49) =< s(47)*aux(37)

  with precondition: [Out=0,V1>=1,V>=2,V1+2*V>=7] 

* Chain [[29,30],31,33]: 8*it(29)+8*it(30)+5*s(46)+3*s(47)+1*s(49)+3*s(52)+3*s(53)+4*s(54)+1*s(55)+3*s(63)+13
  Such that:aux(13) =< -V1+V
aux(15) =< V1
aux(10) =< V1-V
aux(16) =< V1+V
aux(17) =< V1+V-Out
aux(18) =< V1-Out
aux(30) =< Out
aux(38) =< V
s(63) =< aux(30)
s(54) =< aux(38)
it(29) =< aux(15)
s(50) =< aux(15)
aux(9) =< aux(16)
it(29) =< aux(16)
it(30) =< aux(16)
s(57) =< aux(16)
aux(9) =< aux(17)
it(29) =< aux(17)
it(30) =< aux(17)
s(57) =< aux(17)
it(29) =< aux(18)
s(50) =< aux(18)
it(30) =< aux(38)
s(57) =< aux(38)
it(30) =< aux(9)+aux(13)
it(29) =< aux(9)+aux(10)
s(53) =< it(30)*aux(38)
s(47) =< it(29)*aux(15)
s(52) =< s(57)
s(55) =< s(53)*aux(15)
s(46) =< s(50)
s(49) =< s(47)*aux(38)

  with precondition: [Out>=1,V1>=Out,V>=Out+1,V1+2*V>=4*Out+3,V+V1>=3*Out+1] 

* Chain [36]: 3*s(11)+4*s(14)+4
  Such that:aux(5) =< V1
aux(6) =< V
s(11) =< aux(5)
s(14) =< aux(6)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [35]: 5
  with precondition: [V1=0,V=Out,V>=1] 

* Chain [34]: 4
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [33]: 5
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [32,36]: 7*s(14)+2*s(61)+12
  Such that:s(59) =< V1
aux(25) =< V
s(14) =< aux(25)
s(61) =< s(59)

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [32,35]: 3*s(58)+2*s(61)+13
  Such that:s(59) =< V1
aux(24) =< Out
s(58) =< aux(24)
s(61) =< s(59)

  with precondition: [V=Out,V>=1,V1>=V] 

* Chain [31,36]: 6*s(11)+2*s(66)+12
  Such that:s(64) =< V
aux(31) =< V1
s(11) =< aux(31)
s(66) =< s(64)

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [31,34]: 3*s(63)+2*s(66)+12
  Such that:aux(30) =< V1
s(64) =< V
s(63) =< aux(30)
s(66) =< s(64)

  with precondition: [Out=0,V1>=1,V>=V1+1] 

* Chain [31,33]: 3*s(63)+2*s(66)+13
  Such that:s(64) =< V
aux(30) =< Out
s(63) =< aux(30)
s(66) =< s(64)

  with precondition: [V1=Out,V1>=1,V>=V1+1] 


#### Cost of chains of start(V1,V,V5):
* Chain [41]: 66*s(194)+42*s(195)+1*s(201)+22*s(207)+48*s(208)+48*s(209)+18*s(211)+18*s(212)+22*s(213)+6*s(215)+6*s(217)+3*s(219)+13
  Such that:aux(55) =< -V1+V
aux(56) =< V1
aux(57) =< V1-V
aux(58) =< V1+V
aux(59) =< V
s(194) =< aux(56)
s(195) =< aux(59)
s(207) =< aux(58)
s(208) =< aux(56)
s(208) =< aux(58)
s(209) =< aux(58)
s(210) =< aux(58)
s(209) =< aux(59)
s(210) =< aux(59)
s(209) =< aux(58)+aux(55)
s(208) =< aux(58)+aux(57)
s(211) =< s(209)*aux(59)
s(212) =< s(208)*aux(56)
s(213) =< s(210)
s(215) =< s(211)*aux(56)
s(217) =< s(212)*aux(59)
s(218) =< aux(56)
s(218) =< aux(58)
s(219) =< s(218)
s(201) =< s(194)*aux(59)

  with precondition: [V1>=0,V>=0] 

* Chain [40]: 54*s(270)+122*s(271)+32*s(278)+12*s(282)+20*s(297)+4*s(299)+28*s(305)+32*s(306)+32*s(307)+12*s(309)+12*s(310)+4*s(313)+4*s(315)+3*s(317)+16*s(355)+16*s(358)+6*s(360)+6*s(361)+6*s(362)+2*s(363)+2*s(365)+19
  Such that:aux(71) =< -2*V+V5
aux(72) =< V
aux(73) =< V+V5
aux(74) =< V5
s(294) =< aux(73)
s(294) =< aux(74)
s(270) =< aux(74)
s(305) =< aux(73)
s(306) =< aux(72)
s(306) =< aux(73)
s(307) =< aux(73)
s(307) =< aux(74)
s(307) =< aux(73)+aux(71)
s(306) =< aux(73)+aux(72)
s(309) =< s(307)*aux(74)
s(310) =< s(306)*aux(72)
s(297) =< s(294)
s(313) =< s(309)*aux(72)
s(271) =< aux(72)
s(315) =< s(310)*aux(74)
s(316) =< aux(72)
s(316) =< aux(73)
s(317) =< s(316)
s(299) =< s(270)*aux(72)
s(355) =< aux(72)
s(357) =< aux(73)
s(355) =< aux(73)
s(358) =< aux(73)
s(359) =< aux(73)
s(357) =< s(294)
s(355) =< s(294)
s(358) =< s(294)
s(359) =< s(294)
s(358) =< aux(74)
s(359) =< aux(74)
s(358) =< s(357)+aux(71)
s(355) =< s(357)+aux(72)
s(360) =< s(358)*aux(74)
s(361) =< s(355)*aux(72)
s(362) =< s(359)
s(363) =< s(360)*aux(72)
s(365) =< s(361)*aux(74)
s(278) =< aux(72)
s(278) =< aux(72)+aux(72)
s(282) =< s(278)*aux(72)

  with precondition: [V1=1,V>=0,V5>=0] 

* Chain [39]: 343*s(378)+96*s(390)+36*s(392)+277*s(404)+32*s(411)+12*s(415)+64*s(430)+4*s(432)+72*s(438)+32*s(439)+32*s(440)+12*s(442)+12*s(443)+4*s(446)+4*s(448)+13*s(450)+16*s(488)+16*s(491)+6*s(493)+6*s(494)+6*s(495)+2*s(496)+2*s(498)+9*s(542)+80*s(549)+96*s(550)+36*s(552)+30*s(553)+12*s(556)+10*s(558)+16*s(598)+6*s(604)+10*s(607)+2*s(608)+19
  Such that:aux(112) =< -2*V+V5
aux(113) =< V
aux(114) =< V-2*V5
aux(115) =< V-V5
aux(116) =< V+V5
aux(117) =< V5
s(587) =< aux(115)
s(427) =< aux(116)
s(427) =< aux(117)
s(378) =< aux(117)
s(438) =< aux(116)
s(439) =< aux(113)
s(439) =< aux(116)
s(440) =< aux(116)
s(440) =< aux(117)
s(440) =< aux(116)+aux(112)
s(439) =< aux(116)+aux(113)
s(442) =< s(440)*aux(117)
s(443) =< s(439)*aux(113)
s(430) =< s(427)
s(446) =< s(442)*aux(113)
s(404) =< aux(113)
s(448) =< s(443)*aux(117)
s(449) =< aux(113)
s(449) =< aux(116)
s(450) =< s(449)
s(432) =< s(378)*aux(113)
s(488) =< aux(113)
s(490) =< aux(116)
s(488) =< aux(116)
s(491) =< aux(116)
s(492) =< aux(116)
s(490) =< s(427)
s(488) =< s(427)
s(491) =< s(427)
s(492) =< s(427)
s(491) =< aux(117)
s(492) =< aux(117)
s(491) =< s(490)+aux(112)
s(488) =< s(490)+aux(113)
s(493) =< s(491)*aux(117)
s(494) =< s(488)*aux(113)
s(495) =< s(492)
s(496) =< s(493)*aux(113)
s(498) =< s(494)*aux(117)
s(542) =< s(404)*aux(117)
s(390) =< aux(117)
s(390) =< aux(117)+aux(117)
s(392) =< s(390)*aux(117)
s(549) =< aux(113)
s(549) =< aux(116)
s(550) =< aux(116)
s(550) =< aux(117)
s(550) =< aux(116)+aux(117)
s(549) =< aux(116)+aux(114)
s(552) =< s(550)*aux(117)
s(553) =< s(549)*aux(113)
s(556) =< s(552)*aux(113)
s(558) =< s(553)*aux(117)
s(587) =< aux(113)
s(598) =< aux(113)
s(599) =< aux(113)
s(598) =< aux(116)
s(598) =< s(587)
s(599) =< s(587)
s(598) =< aux(116)+aux(114)
s(604) =< s(598)*aux(113)
s(607) =< s(599)
s(608) =< s(604)*aux(117)
s(411) =< aux(113)
s(411) =< aux(113)+aux(113)
s(415) =< s(411)*aux(113)

  with precondition: [V1=2,V>=0,V5>=0] 

* Chain [38]: 76*s(740)+32*s(748)+12*s(752)+16
  Such that:aux(122) =< V
s(740) =< aux(122)
s(748) =< aux(122)
s(748) =< aux(122)+aux(122)
s(752) =< s(748)*aux(122)

  with precondition: [V1=2,V5=0,V>=0] 

* Chain [37]: 5*s(771)+5
  Such that:aux(123) =< V1
s(771) =< aux(123)

  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V,V5): 
-------------------------------------
* Chain [41] with precondition: [V1>=0,V>=0] 
    - Upper bound: 117*V1+13+18*V1*V1+ (V1+V)* (6*V1*V)+42*V+V*V1+6*V*V1*V1+ (V1+V)* (18*V)+ (92*V1+92*V) 
    - Complexity: n^3 
* Chain [40] with precondition: [V1=1,V>=0,V5>=0] 
    - Upper bound: 205*V+19+30*V*V+4*V*V5+ (V+V5)* (6*V*V5)+54*V5+6*V5*V*V+ (V+V5)* (18*V5)+ (102*V+102*V5) 
    - Complexity: n^3 
* Chain [39] with precondition: [V1=2,V>=0,V5>=0] 
    - Upper bound: 476*V+19+66*V*V+4*V*V5+ (V+V5)* (18*V*V5)+439*V5+9*V5*V+18*V5*V*V+36*V5*V5+ (V+V5)* (54*V5)+ (286*V+286*V5) 
    - Complexity: n^3 
* Chain [38] with precondition: [V1=2,V5=0,V>=0] 
    - Upper bound: 108*V+16+12*V*V 
    - Complexity: n^2 
* Chain [37] with precondition: [V=0,V1>=0] 
    - Upper bound: 5*V1+5 
    - Complexity: n 

### Maximum cost of start(V1,V,V5): max([5*V1,42*V+8+max([18*V1*V1+117*V1+ (V1+V)* (6*V1*V)+V*V1+6*V*V1*V1+ (V1+V)* (18*V)+ (92*V1+92*V),36*V*V+271*V+12*V*nat(V5)*nat(V+V5)+nat(V5)*385+nat(V5)*9*V+nat(V5)*12*V*V+nat(V5)*36*nat(V5)+nat(V5)*36*nat(V+V5)+nat(V+V5)*184+ (97*V+3+18*V*V+4*V*nat(V5)+6*V*nat(V5)*nat(V+V5)+nat(V5)*54+nat(V5)*6*V*V+nat(V5)*18*nat(V+V5)+nat(V+V5)*102)+ (66*V+3+12*V*V)])])+5 
Asymptotic class: n^3 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 184 ms.
* Invariants computed in 197 ms.
   - Backward Invariants 113 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 699 ms.
* Termination proved in 36 ms.
* Upper bounds computed in 2005 ms.
   - Equation cost structures 1203 ms.
   - Phase cost structures 292 ms.
   - Chain cost structures 284 ms.
   - Solving cost expressions 44 ms.
* Total analysis performed in 3270 ms.

