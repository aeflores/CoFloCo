
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. recursive  : [fun1/3]
2. recursive [multiple] : [fun2/3,fun3/4,mark/2]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is partially evaluated into fun1/3
2. SCC is partially evaluated into mark/2
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 29 is refined into CE [30] 
* CE 27 is refined into CE [31] 
* CE 28 is refined into CE [32] 


#### Refined cost equations fun/3 
* CE 30: fun(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 31: fun(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 32: fun(V,V1,Out) = 1+ fun(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of fun/3 
* CEs [32] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [31] --> Loop 22 

#### Loops of fun/3 
* Loop 20: fun(V,V1,Out)->  fun(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 21: fun(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 22: fun(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR fun(V,V1,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR fun(V,V1,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:fun(V,V1,Out) 
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  fun/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[20]]] --> 2 
* [[21]] --> 3 
* [[21,[20]]] --> 4 


### Specialization of cost equations fun1/3 
* CE 14 is refined into CE [33] 
* CE 11 is refined into CE [34] 
* CE 12 is refined into CE [35] 
* CE 13 is refined into CE [36] 


#### Refined cost equations fun1/3 
* CE 33: fun1(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 34: fun1(V,V1,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 35: fun1(V,V1,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 36: fun1(V,V1,Out) = 1+ fun1(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of fun1/3 
* CEs [36] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of fun1/3 
* Loop 23: fun1(V,V1,Out)->  fun1(V',V1',Out)
                  [V1'>=0,V'>=0,V1'+1=V1,V'+1=V] 
* Loop 24: fun1(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 25: fun1(V,V1,Out) [V>=0,Out=2,V1=0] 
* Loop 26: fun1(V,V1,Out) [V1>=1,Out=1,V=0] 

### Ranking functions of CR fun1(V,V1,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR fun1(V,V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:fun1(V,V1,Out) 
* [[23],26]
* [[23],25]
* [[23],24]
* [26]
* [25]
* [24]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[26,[23]]] --> 3 
* [[25,[23]]] --> 4 
* [[24]] --> 5 
* [[24,[23]]] --> 6 


### Specialization of cost equations mark/2 
* CE 24 is refined into CE [37,38,39,40] 
* CE 25 is refined into CE [41,42,43,44,45,46] 
* CE 22 is refined into CE [47] 
* CE 26 is refined into CE [48] 
* CE 15 is refined into CE [49,50,51,52,53,54] 
* CE 16 is refined into CE [55] 
* CE 23 is refined into CE [56] 
* CE 21 is refined into CE [57] 
* CE 19 is refined into CE [58,59,60,61] 
* CE 17 is refined into CE [62,63,64,65] 
* CE 20 is refined into CE [66] 
* CE 18 is refined into CE [67] 


#### Refined cost equations mark/2 
* CE 37: mark(V,Out) = 1+ fun(W,X,Y):1
     [X>=0,X+1=V,Y=0,W=0,Out=0] 
* CE 38: mark(V,Out) = 1+ fun(W,X,Y):2
     [X>=W,W>=1,W+X+1=V,Y=0,Out=0] 
* CE 39: mark(A,A) = 1+ fun(B,C,A):3
     [A>=B+1,B>=0,A=B+C+1] 
* CE 40: mark(V,Out) = 1+ fun(W,X,Out):4
     [W+X>=Out+1,Out+W>=X+1,Out+X>=W+1,W+X+1=V] 
* CE 41: mark(V,Out) = 1+ fun1(W,X,Y):1
     [X>=1,X+1=V,Y=1,W=0,Out=1] 
* CE 42: mark(V,Out) = 1+ fun1(W,X,Y):2
     [W>=0,W+1=V,Y=2,X=0,Out=2] 
* CE 43: mark(V,Out) = 1+ fun1(W,X,Y):3
     [X>=W+1,W>=1,W+X+1=V,Y=1,Out=1] 
* CE 44: mark(V,Out) = 1+ fun1(W,X,Y):4
     [W>=X,X>=1,W+X+1=V,Y=2,Out=2] 
* CE 45: mark(A,A) = 1+ fun1(B,C,A):5
     [A>=B+1,B>=0,A=B+C+1] 
* CE 46: mark(V,Out) = 1+ fun1(W,X,Out):6
     [W+X>=Out+1,Out+W>=X+1,Out+X>=W+1,W+X+1=V] 
* CE 47: mark(V,Out) = 1
     [Out=0,V=0] 
* CE 48: mark(V,Out) = 0
     [V>=0,Out=0] 
* CE 49: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):1
     [V>=Z+2,Z>=1,Z+W+2=V,2*Z+6=Out,X=1,A1=1,Y=0] 
* CE 50: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):2
     [Y>=0,V>=2,Y+1=X,V=W+2,Y+7=Out,A1=2,Z=0] 
* CE 51: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):3
     [V>=Z+2,Z>=Y+1,Y>=1,Y+2*Z+6=Out,Z+W+2=V,Y+1=X,A1=1] 
* CE 52: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):4
     [Y>=Z,V>=Z+2,Z>=1,Y+2*Z+7=Out,Z+W+2=V,Y+1=X,A1=2] 
* CE 53: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):5
     [V+Y>=A1+1,A1>=Y+1,Y>=0,A1+W+1=V+Y,A1=Y+Z+1,3*A1+3=Out+Y,Y+1=X] 
* CE 54: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):6
     [Y+Z>=A1+1,Y+A1>=Z+1,Z+A1>=Y+1,V>=Z+2,Y+A1+2*Z+5=Out,Z+W+2=V,Y+1=X] 
* CE 55: mark(V,Out) = 2+ mark(W,X)
     [Out+W>=V,V>=W+1,W>=0,V+X=Out+W] 
* CE 56: mark(V,Out) = 1+ mark(W,X)
     [W>=0,X+1=Out,W+1=V] 
* CE 57: mark(V,Out) = 2+ mark(W,X)
     [V>=W+2,W>=0,X=0,Out=0] 
* CE 58: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):2+ mark(B1,Out)
     [Y>=0,V>=2,Y+4=B1,Y+1=X,V=W+2,A1=2,Z=0] 
* CE 59: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):4+ mark(B1,Out)
     [Y>=Z,V>=Z+2,Z>=1,Y+2*Z+4=B1,Z+W+2=V,Y+1=X,A1=2] 
* CE 60: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):5+ mark(B1,Out)
     [V+Y>=3,Y>=0,1>=Y,V+Y=W+3,Y+B1=6,Y+Z=1,Y+1=X,A1=2] 
* CE 61: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):6+ mark(B1,Out)
     [Y+Z>=3,Y+1>=Z,V>=Z+2,Z+1>=Y,Y+2*Z+4=B1,Z+W+2=V,Y+1=X,A1=2] 
* CE 62: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):1+ mark(B1,Out)
     [V>=Z+2,Z>=1,Z+W+2=V,B1=0,X=1,A1=1,Y=0] 
* CE 63: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):3+ mark(B1,Out)
     [V>=Z+2,Z>=Y+1,Y>=1,Z+W+2=V,Y+1=X,B1=0,A1=1] 
* CE 64: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Z,A1):5+ mark(B1,Out)
     [V>=2,V=W+2,B1=0,X=1,A1=1,Z=0,Y=0] 
* CE 65: mark(V,Out) = 3+ mark(W,X)+ fun1(Y,Y,Z):6+ mark(A1,Out)
     [V>=Y+2,Y>=1,Y+W+2=V,Y+1=X,A1=0,Z=1] 
* CE 66: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Out)
     [V>=W+Y+1,Y>=0,W>=0,X=2] 
* CE 67: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Out)
     [V>=W+Y+1,Y>=0,W>=0,X=1] 

### Cost equations --> "Loop" of mark/2 
* CEs [59] --> Loop 27 
* CEs [61] --> Loop 28 
* CEs [60] --> Loop 29 
* CEs [58] --> Loop 30 
* CEs [63] --> Loop 31 
* CEs [65] --> Loop 32 
* CEs [66] --> Loop 33 
* CEs [62] --> Loop 34 
* CEs [64,67] --> Loop 35 
* CEs [54] --> Loop 36 
* CEs [55] --> Loop 37 
* CEs [51] --> Loop 38 
* CEs [52] --> Loop 39 
* CEs [53] --> Loop 40 
* CEs [50] --> Loop 41 
* CEs [56] --> Loop 42 
* CEs [49] --> Loop 43 
* CEs [57] --> Loop 44 
* CEs [40,46] --> Loop 45 
* CEs [39,45] --> Loop 46 
* CEs [42,44] --> Loop 47 
* CEs [41,43] --> Loop 48 
* CEs [37,38,47,48] --> Loop 49 

#### Loops of mark/2 
* Loop 27: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V'+Out'+1>=V,V>=V'+3,V'>=0,V'2+2*V'+1=2*V+Out'] 
* Loop 28: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V+Out'>=V'+6,V>=V'+Out',V'+Out'+2>=V,V'>=0,V'2+2*V'+1=2*V+Out'] 
* Loop 29: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+2,V'+3>=V,V'>=0,V+Out'=V'+4,V+3=V'+V'2] 
* Loop 30: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [Out'>=1,V>=2,Out'+3=V'2,V=V'+2] 
* Loop 31: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+Out'+2,Out'>=2,V'>=0,V'2=0] 
* Loop 32: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+3,V'>=0,V'+Out'+1=V,V'2=0] 
* Loop 33: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+V'2+1,V'2>=0,V'>=0,Out'=2] 
* Loop 34: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+3,V'>=0,V'2=0,Out'=1] 
* Loop 35: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [V>=V'+V'2+1,V'2>=0,V'>=0,Out'=1] 
* Loop 36: mark(V,Out)->  mark(V',Out')
                  [Out+V'>=2*Out'+V+2,2*Out'+3*V>=3*V'+Out+4,Out+3*V'>=3*V,V'>=0] 
* Loop 37: mark(V,Out)->  mark(V',Out')
                  [Out+V'>=V,V>=V'+1,V'>=0,V+Out'=Out+V'] 
* Loop 38: mark(V,Out)->  mark(V',Out')
                  [Out+2*V'>=2*V+3,3*V>=3*V'+Out+1,V'>=0,Out+2*V'=2*V+Out'+1] 
* Loop 39: mark(V,Out)->  mark(V',Out')
                  [Out+3*V'>=3*V+1,V>=V'+3,V'>=0,Out'+2*V+2=2*V'+Out] 
* Loop 40: mark(V,Out)->  mark(V',Out')
                  [Out+3*V'>=3*V,V>=V'+2,V'>=0,2*Out'+3*V=3*V'+Out+2] 
* Loop 41: mark(V,Out)->  mark(V',Out')
                  [Out>=7,V>=2,Out=Out'+6,V=V'+2] 
* Loop 42: mark(V,Out)->  mark(V',Out')
                  [V>=1,Out=Out'+1,V=V'+1] 
* Loop 43: mark(V,Out)->  mark(V',Out')
                  [2*V+2>=Out,Out>=8,Out+2*V'=2*V+2,Out'=1] 
* Loop 44: mark(V,Out)->  mark(V',Out')
                  [V>=V'+2,V'>=0,Out'=0,Out=0] 
* Loop 45: mark(V,Out) [V>=Out+2,Out>=1] 
* Loop 46: mark(A,A) [A>=1] 
* Loop 47: mark(V,Out) [V>=1,Out=2] 
* Loop 48: mark(V,Out) [V>=2,Out=1] 
* Loop 49: mark(V,Out) [V>=0,Out=0] 

### Ranking functions of CR mark(V,Out) 

#### Partial ranking functions of CR mark(V,Out) 
* Partial RF of phase [27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]:
  - RF of loop [27:1,28:1,32:1,32:2,34:1,34:2,36:1,39:1,43:1]:
    V-2 depends on loops [27:2,28:2,29:2,30:2] 
  - RF of loop [29:1]:
    V/2-1/2 depends on loops [27:2,28:2,29:2,30:2] 
  - RF of loop [30:1,40:1,41:1,44:1]:
    V-1 depends on loops [27:2,28:2,29:2,30:2] 
  - RF of loop [31:1,31:2,38:1]:
    V-3 depends on loops [27:2,28:2,29:2,30:2] 
  - RF of loop [33:1,33:2,35:1,35:2,37:1,42:1]:
    V depends on loops [27:2,28:2,29:2,30:2] 


### Resulting Chains:mark(V,Out) 
* [multiple([27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],[[],[49],[48],[47],[46],[45]])]...
* [49]
* [48]
* [47]
* [46]
* [45]


### Merging Chains  mark/2 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 
* [[46]] --> 4 
* [[45]] --> 5 
* [[multiple([27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],[[],[49],[48],[47],[46],[45]])]] --> 6 


### Specialization of cost equations start/3 
* CE 7 is refined into CE [68,69,70,71,72,73] 
* CE 2 is refined into CE [74,75,76,77,78,79] 
* CE 3 is refined into CE [80] 
* CE 4 is refined into CE [81,82,83,84] 
* CE 5 is refined into CE [85,86,87,88,89,90] 
* CE 6 is refined into CE [91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114] 
* CE 8 is refined into CE [115,116,117,118] 
* CE 9 is refined into CE [119,120,121,122,123,124] 
* CE 10 is refined into CE [125,126,127,128,129,130] 


#### Refined cost equations start/3 
* CE 68: start(V,V1,V24) = 1+ mark(V1,W24):1
     [V1>=0,V24>=0,W24=0,V=2] 
* CE 69: start(V,V1,V24) = 1+ mark(V1,W24):2
     [V1>=2,V24>=0,W24=1,V=2] 
* CE 70: start(V,V1,V24) = 1+ mark(V1,W24):3
     [V1>=1,V24>=0,W24=2,V=2] 
* CE 71: start(V,V1,V24) = 1+ mark(V1,V1):4
     [V1>=1,V24>=0,V=2] 
* CE 72: start(V,V1,V24) = 1+ mark(V1,W24):5
     [V1>=W24+2,W24>=1,V24>=0,V=2] 
* CE 73: start(V,V1,V24) = 1+ mark(V1,W24):6
     [V1>=1,V24>=0,V=2] 
* CE 74: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):1
     [X24>=1,X24+1=V1,Y24=1,W24=0,V=1] 
* CE 75: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2
     [W24>=0,W24+1=V,Y24=2,X24=0,V1=1] 
* CE 76: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):3
     [X24>=W24+1,W24>=1,X24+1=V1,W24+1=V,Y24=1] 
* CE 77: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4
     [W24>=X24,X24>=1,X24+1=V1,W24+1=V,Y24=2] 
* CE 78: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5
     [Y24>=W24+1,W24>=0,Y24=W24+X24+1,Y24=V1+W24,W24+1=V] 
* CE 79: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6
     [W24+X24>=Y24+1,W24+Y24>=X24+1,X24+Y24>=W24+1,X24+1=V1,W24+1=V] 
* CE 80: start(V,V1,V24) = 1
     [V1>=0,V>=0] 
* CE 81: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):1+ mark(Z24,A25):1
     [X24>=1,X24+1=V1,A25=0,Z24=0,Y24=1,W24=0,V=1] 
* CE 82: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):3+ mark(Z24,A25):1
     [X24>=W24+1,W24>=1,X24+1=V1,W24+1=V,A25=0,Z24=0,Y24=1] 
* CE 83: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):1
     [A25=0,Z24=0,Y24=1,X24=0,W24=0,V1=1,V=1] 
* CE 84: start(V,V1,V24) = 2+ fun1(W24,W24,X24):6+ mark(Y24,Z24):1
     [W24>=1,W24+1=V1,W24+1=V,Z24=0,Y24=0,X24=1] 
* CE 85: start(V,V1,V24) = 1+ mark(V24,W24):1
     [V24>=0,V1>=0,W24=0,V=1] 
* CE 86: start(V,V1,V24) = 1+ mark(V24,W24):2
     [V24>=2,V1>=0,W24=1,V=1] 
* CE 87: start(V,V1,V24) = 1+ mark(V24,W24):3
     [V24>=1,V1>=0,W24=2,V=1] 
* CE 88: start(V,V1,V24) = 1+ mark(V24,V24):4
     [V24>=1,V1>=0,V=1] 
* CE 89: start(V,V1,V24) = 1+ mark(V24,W24):5
     [V24>=W24+2,W24>=1,V1>=0,V=1] 
* CE 90: start(V,V1,V24) = 1+ mark(V24,W24):6
     [V24>=1,V1>=0,V=1] 
* CE 91: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,A25):1
     [Z24>=4,Z24=W24+4,Z24=V+3,A25=0,Y24=2,X24=0,V1=1] 
* CE 92: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,A25):2
     [Z24>=4,Z24=W24+4,Z24=V+3,A25=1,Y24=2,X24=0,V1=1] 
* CE 93: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,A25):3
     [Z24>=4,Z24=W24+4,Z24=V+3,A25=2,Y24=2,X24=0,V1=1] 
* CE 94: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,Z24):4
     [Z24>=4,Z24=W24+4,Z24=V+3,Y24=2,X24=0,V1=1] 
* CE 95: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,A25):5
     [Z24>=A25+2,A25>=1,Z24>=4,Z24=W24+4,Z24=V+3,Y24=2,X24=0,V1=1] 
* CE 96: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):2+ mark(Z24,A25):6
     [Z24>=4,Z24=W24+4,Z24=V+3,Y24=2,X24=0,V1=1] 
* CE 97: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,A25):1
     [Z24>=3*X24+4,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,A25=0,Y24=2] 
* CE 98: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,A25):2
     [Z24>=3*X24+4,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,A25=1,Y24=2] 
* CE 99: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,A25):3
     [Z24>=3*X24+4,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,A25=2,Y24=2] 
* CE 100: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,Z24):4
     [Z24>=3*X24+4,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,Y24=2] 
* CE 101: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,A25):5
     [Z24>=A25+2,Z24>=3*X24+4,A25>=1,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,Y24=2] 
* CE 102: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):4+ mark(Z24,A25):6
     [Z24>=3*X24+4,X24>=1,Z24=2*X24+W24+4,Z24=2*X24+V+3,X24+1=V1,Y24=2] 
* CE 103: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):1
     [Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,A25=0,Y24=2] 
* CE 104: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):2
     [Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,A25=1,Y24=2] 
* CE 105: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):3
     [Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,A25=2,Y24=2] 
* CE 106: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,Z24):4
     [Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,Y24=2] 
* CE 107: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):5
     [Z24>=A25+2,A25>=1,Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,Y24=2] 
* CE 108: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):5+ mark(Z24,A25):6
     [Z24>=5,6>=Z24,W24+Z24=6,V+Z24=7,Z24=X24+5,Z24=V1+4,Y24=2] 
* CE 109: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,A25):1
     [W24+Z24>=10,3*W24+6>=Z24,Z24>=3*W24+2,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,A25=0,Y24=2] 
* CE 110: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,A25):2
     [W24+Z24>=10,3*W24+6>=Z24,Z24>=3*W24+2,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,A25=1,Y24=2] 
* CE 111: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,A25):3
     [W24+Z24>=10,3*W24+6>=Z24,Z24>=3*W24+2,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,A25=2,Y24=2] 
* CE 112: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,Z24):4
     [W24+Z24>=10,3*W24+6>=Z24,Z24>=3*W24+2,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,Y24=2] 
* CE 113: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,A25):5
     [W24+Z24>=10,Z24>=A25+2,3*W24+6>=Z24,Z24>=3*W24+2,A25>=1,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,Y24=2] 
* CE 114: start(V,V1,V24) = 2+ fun1(W24,X24,Y24):6+ mark(Z24,A25):6
     [W24+Z24>=10,3*W24+6>=Z24,Z24>=3*W24+2,Z24=2*X24+W24+4,Z24=2*V1+W24+2,W24+1=V,Y24=2] 
* CE 115: start(V,V1,V24) = 0+ fun(W24,V1,X24):1
     [V1>=0,X24=0,W24=0,V=0] 
* CE 116: start(V,V1,V24) = 0+ fun(V,V1,W24):2
     [V1>=V,V>=1,W24=0] 
* CE 117: start(V,V1,V24) = 0+ fun(V,W24,X24):3
     [X24>=V+1,V>=0,X24=V+W24+1,X24=V+V1+1] 
* CE 118: start(V,V1,V24) = 0+ fun(V,V1,W24):4
     [V+V1>=W24+1,V+W24>=V1+1,V1+W24>=V+1] 
* CE 119: start(V,V1,V24) = 0+ mark(V,W24):1
     [V>=0,W24=0] 
* CE 120: start(V,V1,V24) = 0+ mark(V,W24):2
     [V>=2,W24=1] 
* CE 121: start(V,V1,V24) = 0+ mark(V,W24):3
     [V>=1,W24=2] 
* CE 122: start(V,V1,V24) = 0+ mark(V,V):4
     [V>=1] 
* CE 123: start(V,V1,V24) = 0+ mark(V,W24):5
     [V>=W24+2,W24>=1] 
* CE 124: start(V,V1,V24) = 0+ mark(V,W24):6
     [V>=1] 
* CE 125: start(V,V1,V24) = 0+ fun1(W24,V1,X24):1
     [V1>=1,X24=1,W24=0,V=0] 
* CE 126: start(V,V1,V24) = 0+ fun1(V,W24,X24):2
     [V>=0,X24=2,W24=0,V1=0] 
* CE 127: start(V,V1,V24) = 0+ fun1(V,V1,W24):3
     [V1>=V+1,V>=1,W24=1] 
* CE 128: start(V,V1,V24) = 0+ fun1(V,V1,W24):4
     [V>=V1,V1>=1,W24=2] 
* CE 129: start(V,V1,V24) = 0+ fun1(V,W24,X24):5
     [X24>=V+1,V>=0,X24=V+W24+1,X24=V+V1+1] 
* CE 130: start(V,V1,V24) = 0+ fun1(V,V1,W24):6
     [V+V1>=W24+1,V+W24>=V1+1,V1+W24>=V+1] 

### Cost equations --> "Loop" of start/3 
* CEs [103,104,105,106,107] --> Loop 50 
* CEs [84] --> Loop 51 
* CEs [126] --> Loop 52 
* CEs [68,69,70,71,72] --> Loop 53 
* CEs [74,81] --> Loop 54 
* CEs [85,86,87,88,89] --> Loop 55 
* CEs [75,83,91,92,93,94,95] --> Loop 56 
* CEs [76,77,78,79,80,82,97,98,99,100,101,109,110,111,112,113,115,116,117,118,119,120,121,122,123,125,127,128,129,130] --> Loop 57 
* CEs [108] --> Loop 58 
* CEs [96] --> Loop 59 
* CEs [73] --> Loop 60 
* CEs [90,102,114,124] --> Loop 61 

#### Loops of start/3 
* Loop 50: start(V,V1,V24) [V>=1,2>=V,V+V1=3] 
* Loop 51: start(A,A,B) [A>=2] 
* Loop 52: start(V,V1,V24) [V>=0,V1=0] 
* Loop 53: start(V,V1,V24) [V24>=0,V1>=0,V=2] 
* Loop 54: start(V,V1,V24) [V1>=2,V=1] 
* Loop 55: start(V,V1,V24) [V24>=0,V1>=0,V=1] 
* Loop 56: start(V,V1,V24) [V>=1,V1=1] 
* Loop 57: start(V,V1,V24) [V>=0] 
* Loop 58: start(V,V1,V24) [V>=1,2>=V,V+V1=3] 
* Loop 59: start(V,V1,V24) [V>=1,V1=1] 
* Loop 60: start(V,V1,V24) [V24>=0,V1>=1,V=2] 
* Loop 61: start(V,V1,V24) [V>=1] 

### Ranking functions of CR start(V,V1,V24) 

#### Partial ranking functions of CR start(V,V1,V24) 


### Resulting Chains:start(V,V1,V24) 
* [61]...
* [60]...
* [59]...
* [58]...
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]


### Merging Chains  start/3 into  External patterns of execution 
* [[55],[57]] --> 1 
* [[54]] --> 2 
* [[53]] --> 3 
* [[52]] --> 4 
* [[56]] --> 5 
* [[51]] --> 6 
* [[50]] --> 7 
* [[60]] --> 8 
* [[59]] --> 9 
* [[58]] --> 10 
* [[61]] --> 11 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1
#### Cost of phase [20]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of phase [20]:fun(V,V1,Out) -> [fun(V',V1',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
it(20) =< V1
it(20) =< V1-V1'

#### Cost of chains of fun(V,V1,Out):
* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< V

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< V/2+V1/2-Out/2+1/2

  with precondition: [Out+V1>=V+1,Out+V>=V1+1,V+V1>=Out+1] 

* Chain [22]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [21]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of loops [23] 

 * loop 23:fun1(V,V1,Out) -> [fun1(V',V1',Out')] 
1
#### Cost of phase [23]:fun1(V,V1,Out) -> [fun1(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of phase [23]:fun1(V,V1,Out) -> [fun1(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of phase [23]:fun1(V,V1,Out) -> [fun1(V',V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
it(23) =< V1
it(23) =< V1-V1'

#### Cost of chains of fun1(V,V1,Out):
* Chain [[23],26]: 1*it(23)+1
  Such that:it(23) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[23],25]: 1*it(23)+1
  Such that:it(23) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[23],24]: 1*it(23)+1
  Such that:it(23) =< V/2+V1/2-Out/2+1/2

  with precondition: [Out+V1>=V+1,Out+V>=V1+1,V+V1>=Out+1] 

* Chain [26]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [25]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [24]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of loops [27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44] 

 * loop 27:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
1*s(7)+4
  Such that:s(7) =< V-V'

 * loop 28:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
1*s(9)+4
  Such that:s(9) =< -V/2+V'/2+V'2/2

 * loop 29:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
4
 * loop 30:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
4
 * loop 31:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
1*s(11)+4
  Such that:s(11) =< V-V'

 * loop 32:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
1*s(13)+4
  Such that:s(13) =< V-V'

 * loop 33:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 34:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
4
 * loop 35:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
4
 * loop 36:mark(V,Out) -> [mark(V',Out')] 
1*s(15)+4
  Such that:s(15) =< V-V'

 * loop 37:mark(V,Out) -> [mark(V',Out')] 
2
 * loop 38:mark(V,Out) -> [mark(V',Out')] 
1*s(17)+4
  Such that:s(17) =< V-V'

 * loop 39:mark(V,Out) -> [mark(V',Out')] 
1*s(19)+4
  Such that:s(19) =< V-V'

 * loop 40:mark(V,Out) -> [mark(V',Out')] 
4
 * loop 41:mark(V,Out) -> [mark(V',Out')] 
4
 * loop 42:mark(V,Out) -> [mark(V',Out')] 
1
 * loop 43:mark(V,Out) -> [mark(V',Out')] 
4
 * loop 44:mark(V,Out) -> [mark(V',Out')] 
2
#### Cost of phase [27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]:mark(V,Out) -> [] 
16*it(27)+8*it(31)+52*it(32)+2*it([49])+1*s(20)+1*s(21)+1*s(22)+2*s(23)+2*s(30)+0
#### Cost of chains of mark(V,Out):
* Chain [multiple([27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],[[],[49],[48],[47],[46],[45]])]...: 16*it(27)+8*it(31)+52*it(32)+2*it([49])+1*s(20)+1*s(21)+1*s(22)+2*s(23)+2*s(30)+0
  with precondition: [V>=1] 

* Chain [49]: 1*s(1)+2
  Such that:s(1) =< V/2

  with precondition: [Out=0,V>=0] 

* Chain [48]: 1*s(2)+2
  Such that:s(2) =< V/2

  with precondition: [Out=1,V>=2] 

* Chain [47]: 1*s(3)+2
  Such that:s(3) =< V/2

  with precondition: [Out=2,V>=1] 

* Chain [46]: 2
  with precondition: [V=Out,V>=1] 

* Chain [45]: 2*s(4)+2
  Such that:aux(1) =< V/2
s(4) =< aux(1)

  with precondition: [Out>=1,V>=Out+2] 


#### Cost of chains of start(V,V1,V24):
* Chain [61]...: 340*s(32)+1*s(41)+1*s(51)+3
  Such that:s(51) =< V/2+V1/2
s(41) =< V1

  with precondition: [V>=1] 

* Chain [60]...: 85*s(70)+1
  with precondition: [V=2,V1>=1,V24>=0] 

* Chain [59]...: 85*s(79)+3
  with precondition: [V1=1,V>=1] 

* Chain [58]...: 85*s(88)+3
  with precondition: [V+V1=3,2>=V,V>=1] 

* Chain [57]: 4*s(97)+10*s(98)+10*s(103)+5*s(112)+5*s(124)+5
  Such that:aux(32) =< V
aux(33) =< V/2
aux(34) =< V/2+V1+1/2
aux(35) =< V/2+V1/2
aux(36) =< V1
s(97) =< aux(32)
s(124) =< aux(33)
s(103) =< aux(34)
s(112) =< aux(35)
s(98) =< aux(36)

  with precondition: [V>=0] 

* Chain [56]: 5*s(133)+5
  Such that:aux(37) =< V/2+3/2
s(133) =< aux(37)

  with precondition: [V1=1,V>=1] 

* Chain [55]: 5*s(138)+3
  Such that:aux(38) =< V24/2
s(138) =< aux(38)

  with precondition: [V=1,V1>=0,V24>=0] 

* Chain [54]: 5
  with precondition: [V=1,V1>=2] 

* Chain [53]: 5*s(144)+3
  Such that:aux(39) =< V1/2
s(144) =< aux(39)

  with precondition: [V=2,V1>=0,V24>=0] 

* Chain [52]: 1
  with precondition: [V1=0,V>=0] 

* Chain [51]: 1*s(149)+5
  Such that:s(149) =< V1

  with precondition: [V=V1,V>=2] 

* Chain [50]: 5*s(151)+5
  Such that:aux(40) =< -V/2+7/2
s(151) =< aux(40)

  with precondition: [V+V1=3,2>=V,V>=1] 


Closed-form bounds of start(V,V1,V24): 
-------------------------------------
* Chain [61]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [60]... with precondition: [V=2,V1>=1,V24>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [59]... with precondition: [V1=1,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [58]... with precondition: [V+V1=3,2>=V,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [57] with precondition: [V>=0] 
    - Upper bound: 4*V+5+nat(V1)*10+nat(V/2+V1+1/2)*10+nat(V/2+V1/2)*5+5/2*V 
    - Complexity: n 
* Chain [56] with precondition: [V1=1,V>=1] 
    - Upper bound: 5/2*V+25/2 
    - Complexity: n 
* Chain [55] with precondition: [V=1,V1>=0,V24>=0] 
    - Upper bound: 5/2*V24+3 
    - Complexity: n 
* Chain [54] with precondition: [V=1,V1>=2] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [53] with precondition: [V=2,V1>=0,V24>=0] 
    - Upper bound: 5/2*V1+3 
    - Complexity: n 
* Chain [52] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [51] with precondition: [V=V1,V>=2] 
    - Upper bound: V1+5 
    - Complexity: n 
* Chain [50] with precondition: [V+V1=3,2>=V,V>=1] 
    - Upper bound: -5/2*V+45/2 
    - Complexity: n 

### Maximum cost of start(V,V1,V24): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 122 ms.
* Invariants computed in 181 ms.
   - Backward Invariants 53 ms.
   - Transitive Invariants 44 ms.
* Refinement performed in 678 ms.
* Termination proved in 172 ms.
* Upper bounds computed in 740 ms.
   - Equation cost structures 295 ms.
   - Phase cost structures 429 ms.
   - Chain cost structures 50 ms.
   - Solving cost expressions 7 ms.
* Total analysis performed in 2020 ms.

