
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. non_recursive  : [empty/2]
2. recursive  : [fstsplit/3]
3. recursive [non_tail] : [fun/3]
4. recursive  : [length/2]
5. recursive  : [leq/3]
6. recursive  : [sndsplit/3]
7. recursive  : [if1/4,if2/4,if3/4,process/3]
8. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into empty/2
2. SCC is partially evaluated into fstsplit/3
3. SCC is partially evaluated into fun/3
4. SCC is partially evaluated into length/2
5. SCC is partially evaluated into leq/3
6. SCC is partially evaluated into sndsplit/3
7. SCC is partially evaluated into process/3
8. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 22 is refined into CE [46] 
* CE 20 is refined into CE [47] 
* CE 21 is refined into CE [48] 


#### Refined cost equations app/3 
* CE 46: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 47: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 48: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [48] --> Loop 25 
* CEs [46] --> Loop 26 
* CEs [47] --> Loop 27 

#### Loops of app/3 
* Loop 25: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 26: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 27: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [25]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  app/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[27,[25]]] --> 3 
* [[26,[25]]] --> 4 


### Specialization of cost equations empty/2 
* CE 28 is refined into CE [49] 
* CE 29 is refined into CE [50] 
* CE 27 is refined into CE [51] 


#### Refined cost equations empty/2 
* CE 49: empty(V1,Out) = 1
     [V1>=1,Out=1] 
* CE 50: empty(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 51: empty(V1,Out) = 1
     [Out=2,V1=0] 

### Cost equations --> "Loop" of empty/2 
* CEs [49] --> Loop 28 
* CEs [50] --> Loop 29 
* CEs [51] --> Loop 30 

#### Loops of empty/2 
* Loop 28: empty(V1,Out) [V1>=1,Out=1] 
* Loop 29: empty(V1,Out) [V1>=0,Out=0] 
* Loop 30: empty(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR empty(V1,Out) 

#### Partial ranking functions of CR empty(V1,Out) 


### Resulting Chains:empty(V1,Out) 
* [30]
* [29]
* [28]


### Merging Chains  empty/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 


### Specialization of cost equations fstsplit/3 
* CE 24 is refined into CE [52] 
* CE 23 is refined into CE [53] 
* CE 26 is refined into CE [54] 
* CE 25 is refined into CE [55] 


#### Refined cost equations fstsplit/3 
* CE 52: fstsplit(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 53: fstsplit(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 54: fstsplit(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 55: fstsplit(V1,V,Out) = 1+ fstsplit(W1,X1,Y1)
     [V+Y1>=Out,Out>=Y1+1,W1>=0,V+Y1=Out+X1,W1+1=V1] 

### Cost equations --> "Loop" of fstsplit/3 
* CEs [55] --> Loop 31 
* CEs [52] --> Loop 32 
* CEs [53,54] --> Loop 33 

#### Loops of fstsplit/3 
* Loop 31: fstsplit(V1,V,Out)->  fstsplit(V1',V',Out')
                  [V+Out'>=Out,Out>=Out'+1,V1'>=0,V+Out'=Out+V',V1'+1=V1] 
* Loop 32: fstsplit(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 33: fstsplit(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fstsplit(V1,V,Out) 
* RF of phase [31]: [V,V1]

#### Partial ranking functions of CR fstsplit(V1,V,Out) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V
    V1


### Resulting Chains:fstsplit(V1,V,Out) 
* [[31],33]
* [[31],32]
* [33]
* [32]


### Merging Chains  fstsplit/3 into  External patterns of execution 
* [[32],[33]] --> 1 
* [[32,[31]],[33,[31]]] --> 2 


### Specialization of cost equations fun/3 
* CE 17 is refined into CE [56] 
* CE 19 is refined into CE [57] 
* CE 18 is refined into CE [58,59,60] 


#### Refined cost equations fun/3 
* CE 56: fun(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 57: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 58: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,Y1,A2):2
     [Z1+X1>=V,V>=X1+1,X1>=0,Y1>=0,Z1+X1=V+W1,Z1+X1=V1+V,A2=0,Out=0] 
* CE 59: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,A2,Out):3
     [Z1+X1>=V,V>=X1+1,Out>=Z1,X1>=0,Z1+X1=V+W1,Z1+X1=V1+V,Out=Z1+Y1,Out=Z1+A2] 
* CE 60: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,Y1,Out):4
     [Z1+X1>=V,V>=X1+1,Z1>=Out,X1>=0,Out>=1,Y1>=0,Z1+X1=V+W1,Z1+X1=V1+V] 

### Cost equations --> "Loop" of fun/3 
* CEs [59] --> Loop 34 
* CEs [60] --> Loop 35 
* CEs [58] --> Loop 36 
* CEs [56,57] --> Loop 37 

#### Loops of fun/3 
* Loop 34: fun(V1,V,Out)->  fun(V1,V',Out')
                  [Out+V'>=V1+V,V>=V'+1,V'>=0,V1>=0,V1+V+Out'=Out+V'] 
* Loop 35: fun(V1,V,Out)->  fun(V1,V',Out')
                  [V1+V>=Out+V',V>=V'+1,Out'>=0,V'>=0,Out>=1,V1>=0] 
* Loop 36: fun(V1,V,Out)->  fun(V1,V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=0,Out=0] 
* Loop 37: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [34,35,36]: [V]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [34,35,36]:
  - RF of loop [34:1,35:1,36:1]:
    V


### Resulting Chains:fun(V1,V,Out) 
* [[34,35,36],37]
* [37]


### Merging Chains  fun/3 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[34,35,36]]] --> 2 


### Specialization of cost equations length/2 
* CE 43 is refined into CE [61] 
* CE 45 is refined into CE [62] 
* CE 44 is refined into CE [63] 


#### Refined cost equations length/2 
* CE 61: length(V1,Out) = 1
     [Out=0,V1=0] 
* CE 62: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 63: length(V1,Out) = 1+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [63] --> Loop 38 
* CEs [61,62] --> Loop 39 

#### Loops of length/2 
* Loop 38: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 39: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 
* RF of phase [38]: [V1]

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[38],39]
* [39]


### Merging Chains  length/2 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[38]]] --> 2 


### Specialization of cost equations leq/3 
* CE 42 is refined into CE [64] 
* CE 40 is refined into CE [65] 
* CE 39 is refined into CE [66] 
* CE 41 is refined into CE [67] 


#### Refined cost equations leq/3 
* CE 64: leq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 65: leq(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 66: leq(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 67: leq(V1,V,Out) = 1+ leq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of leq/3 
* CEs [67] --> Loop 40 
* CEs [64] --> Loop 41 
* CEs [65] --> Loop 42 
* CEs [66] --> Loop 43 

#### Loops of leq/3 
* Loop 40: leq(V1,V,Out)->  leq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 41: leq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 42: leq(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 43: leq(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR leq(V1,V,Out) 
* RF of phase [40]: [V,V1]

#### Partial ranking functions of CR leq(V1,V,Out) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V
    V1


### Resulting Chains:leq(V1,V,Out) 
* [[40],43]
* [[40],42]
* [[40],41]
* [43]
* [42]
* [41]


### Merging Chains  leq/3 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 
* [[41],[41,[40]]] --> 3 
* [[42,[40]]] --> 4 
* [[43,[40]]] --> 5 


### Specialization of cost equations sndsplit/3 
* CE 31 is refined into CE [68] 
* CE 33 is refined into CE [69] 
* CE 30 is refined into CE [70] 
* CE 32 is refined into CE [71] 


#### Refined cost equations sndsplit/3 
* CE 68: sndsplit(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 69: sndsplit(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 70: sndsplit(A,B,B) = 1
     [B>=0,A=0] 
* CE 71: sndsplit(V1,V,Out) = 1+ sndsplit(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sndsplit/3 
* CEs [71] --> Loop 44 
* CEs [68,69] --> Loop 45 
* CEs [70] --> Loop 46 

#### Loops of sndsplit/3 
* Loop 44: sndsplit(V1,V,Out)->  sndsplit(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 45: sndsplit(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 46: sndsplit(A,B,B) [B>=0,A=0] 

### Ranking functions of CR sndsplit(V1,V,Out) 
* RF of phase [44]: [V,V1]

#### Partial ranking functions of CR sndsplit(V1,V,Out) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    V
    V1


### Resulting Chains:sndsplit(V1,V,Out) 
* [[44],46]
* [[44],45]
* [46]
* [45]


### Merging Chains  sndsplit/3 into  External patterns of execution 
* [[46]] --> 1 
* [[45],[45,[44]]] --> 2 
* [[46,[44]]] --> 3 


### Specialization of cost equations process/3 
* CE 34 is refined into CE [72,73,74,75,76,77,78] 
* CE 36 is refined into CE [79,80,81,82,83,84,85,86,87,88,89,90] 
* CE 38 is refined into CE [91,92,93,94,95,96,97,98] 
* CE 35 is refined into CE [99,100,101,102,103,104] 
* CE 37 is refined into CE [105,106,107,108] 


#### Refined cost equations process/3 
* CE 72: process(V1,V,Out) = 1+ length(V1,W1):1+ leq(X1,Y1,Z1):1
     [V1>=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 73: process(V1,V,Out) = 1+ length(V1,W1):1+ leq(V,X1,Y1):2
     [V>=1,V1>=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 74: process(V1,V,Out) = 1+ length(V1,W1):1+ leq(V,X1,Y1):3
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 75: process(V1,V,Out) = 1+ length(V1,W1):2+ leq(X1,W1,Y1):1
     [V1>=W1,W1>=1,Y1=2,X1=0,Out=0,V=0] 
* CE 76: process(V1,V,Out) = 1+ length(V1,W1):2+ leq(V,W1,X1):3
     [V1>=W1,W1>=1,V>=0,X1=0,Out=0] 
* CE 77: process(V1,V,Out) = 1+ length(V1,W1):2+ leq(V,W1,X1):4
     [V>=W1+1,V1>=W1,W1>=1,X1=1,Out=0] 
* CE 78: process(V1,V,Out) = 1+ length(V1,W1):2+ leq(V,W1,X1):5
     [V1>=W1,W1>=V,V>=1,X1=2,Out=0] 
* CE 79: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):1+ empty(E2,F2):1
     [V1>=0,V>=1,F2=2,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 80: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):1+ empty(E2,F2):2
     [V1>=0,V>=1,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 81: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):2+ empty(D2,E2):2
     [V1>=D2,D2>=1,V>=1,E2=0,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 82: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):2+ empty(D2,E2):3
     [V1>=D2,D2>=1,V>=1,E2=1,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 83: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,D2):2+ fstsplit(V,E2,F2):1+ empty(G2,H2):1
     [V>=1,V1>=0,H2=2,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 84: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,D2):2+ fstsplit(V,E2,F2):1+ empty(G2,H2):2
     [V>=1,V1>=0,H2=0,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0,Out=0] 
* CE 85: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):1+ empty(D2,E2):1
     [V1>=W1,V>=W1+1,W1>=1,E2=2,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 86: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):1+ empty(D2,E2):2
     [V1>=W1,V>=W1+1,W1>=1,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 87: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):2+ empty(C2,D2):2
     [V1>=C2,V1>=W1,V>=W1+1,C2>=1,W1>=1,D2=0,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 88: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):2+ empty(C2,D2):3
     [V1>=C2,V1>=W1,V>=W1+1,C2>=1,W1>=1,D2=1,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 89: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,C2):2+ fstsplit(V,D2,E2):1+ empty(F2,G2):1
     [V>=W1+1,V1>=W1,W1>=1,G2=2,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 90: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,C2):2+ fstsplit(V,D2,E2):1+ empty(F2,G2):2
     [V>=W1+1,V1>=W1,W1>=1,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=1,Out=0] 
* CE 91: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(X1,Y1,Z1):1+ fstsplit(A2,V1,B2):1+ empty(C2,D2):1
     [V1>=0,D2=2,C2=0,B2=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 92: process(V1,V,Out) = 2+ length(V1,W1):1+ leq(X1,Y1,Z1):1+ fstsplit(A2,V1,B2):1+ empty(C2,D2):2
     [V1>=0,D2=0,C2=0,B2=0,A2=0,Z1=2,Y1=0,X1=0,W1=0,Out=0,V=0] 
* CE 93: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(X1,W1,Y1):1+ fstsplit(Z1,V1,A2):1+ empty(B2,C2):1
     [V1>=W1,W1>=1,C2=2,B2=0,A2=0,Z1=0,Y1=2,X1=0,Out=0,V=0] 
* CE 94: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(X1,W1,Y1):1+ fstsplit(Z1,V1,A2):1+ empty(B2,C2):2
     [V1>=W1,W1>=1,C2=0,B2=0,A2=0,Z1=0,Y1=2,X1=0,Out=0,V=0] 
* CE 95: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):1+ empty(Z1,A2):1
     [W1>=V,V1>=W1,V>=1,A2=2,Z1=0,Y1=0,X1=2,Out=0] 
* CE 96: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):1+ empty(Z1,A2):2
     [W1>=V,V1>=W1,V>=1,A2=0,Z1=0,Y1=0,X1=2,Out=0] 
* CE 97: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):2
     [V1>=Y1,W1>=V,V1>=W1,Y1>=1,V>=1,Z1=0,X1=2,Out=0] 
* CE 98: process(V1,V,Out) = 2+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):3
     [V1>=Y1,W1>=V,V1>=W1,Y1>=1,V>=1,Z1=1,X1=2,Out=0] 
* CE 99: process(V1,V,Out) = 3+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):2+ empty(D2,E2):3+ fun(F2,G2,H2):1+ app(I2,V1,V1):1+ sndsplit(V,V1,J2):2+ process(K2,V,Out)
     [V1>=D2,V>=1,D2>=1,K2=0,J2=0,I2=0,H2=0,G2=0,F2=0,E2=1,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0] 
* CE 100: process(V1,V,Out) = 3+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):2+ empty(D2,E2):3+ fun(F2,G2,H2):1+ app(I2,V1,V1):1+ sndsplit(V,V1,J2):3+ process(J2,V,Out)
     [V1>=V+J2,V1>=D2,J2>=0,V>=1,D2>=1,I2=0,H2=0,G2=0,F2=0,E2=1,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0] 
* CE 101: process(V1,V,Out) = 3+ length(V1,W1):1+ leq(V,X1,Y1):2+ fun(Z1,A2,B2):1+ app(C2,V1,V1):1+ fstsplit(V,V1,D2):2+ empty(D2,E2):3+ fun(F2,G2,H2):1+ app(I2,V1,J2):2+ sndsplit(V,K2,L2):2+ process(M2,V,Out)
     [V1>=D2,V>=1,D2>=1,M2=0,L2=0,K2=0,J2=0,I2=0,H2=0,G2=0,F2=0,E2=1,C2=0,B2=0,A2=0,Z1=0,Y1=1,X1=0,W1=0] 
* CE 102: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):2+ empty(C2,D2):3+ fun(E2,F2,G2):1+ app(H2,V1,V1):1+ sndsplit(V,V1,I2):2+ process(J2,V,Out)
     [V1>=C2,V1>=W1,V>=W1+1,C2>=1,W1>=1,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,B2=0,A2=0,Z1=0,Y1=0,X1=1] 
* CE 103: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):2+ empty(C2,D2):3+ fun(E2,F2,G2):1+ app(H2,V1,V1):1+ sndsplit(V,V1,I2):3+ process(I2,V,Out)
     [V1>=V+I2,V1>=C2,V>=W1+1,I2>=0,C2>=1,W1>=1,H2=0,G2=0,F2=0,E2=0,D2=1,B2=0,A2=0,Z1=0,Y1=0,X1=1] 
* CE 104: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):4+ fun(Y1,Z1,A2):1+ app(B2,V1,V1):1+ fstsplit(V,V1,C2):2+ empty(C2,D2):3+ fun(E2,F2,G2):1+ app(H2,V1,I2):2+ sndsplit(V,J2,K2):2+ process(L2,V,Out)
     [V1>=C2,V>=W1+1,V1>=W1,C2>=1,W1>=1,L2=0,K2=0,J2=0,I2=0,H2=0,G2=0,F2=0,E2=0,D2=1,B2=0,A2=0,Z1=0,Y1=0,X1=1] 
* CE 105: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):3+ fun(A2,B2,C2):1+ sndsplit(V,V1,D2):2+ app(E2,F2,G2):1+ process(H2,V,Out)
     [W1>=V,V1>=Y1,V1>=W1,V>=1,Y1>=1,H2=0,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=1,X1=2] 
* CE 106: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):3+ fun(A2,B2,C2):1+ sndsplit(V,V1,D2):2+ app(E2,F2,G2):2+ process(H2,V,Out)
     [W1>=V,V1>=Y1,V1>=W1,V>=1,Y1>=1,H2=0,G2=0,F2=0,E2=0,D2=0,C2=0,B2=0,A2=0,Z1=1,X1=2] 
* CE 107: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):3+ fun(A2,B2,C2):1+ sndsplit(V,V1,D2):3+ app(E2,D2,D2):1+ process(D2,V,Out)
     [V1>=V+D2,W1>=V,V1>=Y1,V1>=W1,D2>=0,V>=1,Y1>=1,E2=0,C2=0,B2=0,A2=0,Z1=1,X1=2] 
* CE 108: process(V1,V,Out) = 3+ length(V1,W1):2+ leq(V,W1,X1):5+ fstsplit(V,V1,Y1):2+ empty(Y1,Z1):3+ fun(A2,B2,C2):1+ sndsplit(V,V1,D2):3+ app(E2,D2,F2):2+ process(G2,V,Out)
     [V1>=V+D2,W1>=V,V1>=Y1,V1>=W1,D2>=0,V>=1,Y1>=1,G2=0,F2=0,E2=0,C2=0,B2=0,A2=0,Z1=1,X1=2] 

### Cost equations --> "Loop" of process/3 
* CEs [100,103,107] --> Loop 47 
* CEs [99,101,102,104,105,106,108] --> Loop 48 
* CEs [72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98] --> Loop 49 

#### Loops of process/3 
* Loop 47: process(V1,V,Out)->  process(V1',V,Out)
                  [V1>=V+V1',V1'>=0,V>=1] 
* Loop 48: process(V1,V,Out)->  process(V1',V,Out)
                  [V>=1,V1>=1,V1'=0] 
* Loop 49: process(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR process(V1,V,Out) 
* RF of phase [47]: [V1,V1-V+1]

#### Partial ranking functions of CR process(V1,V,Out) 
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    V1
    V1-V+1


### Resulting Chains:process(V1,V,Out) 
* [[47],49]
* [[47],48,49]
* [49]
* [48,49]


### Merging Chains  process/3 into  External patterns of execution 
* [[49,48],[49],[49,48,[47]],[49,[47]]] --> 1 


### Specialization of cost equations start/3 
* CE 5 is refined into CE [109,110,111,112] 
* CE 6 is refined into CE [113,114,115,116] 
* CE 2 is refined into CE [117] 
* CE 3 is refined into CE [118,119,120] 
* CE 4 is refined into CE [121,122,123,124,125,126] 
* CE 7 is refined into CE [127,128,129,130,131,132] 
* CE 8 is refined into CE [133,134,135,136,137] 
* CE 9 is refined into CE [138,139] 
* CE 10 is refined into CE [140,141,142] 
* CE 11 is refined into CE [143,144,145] 
* CE 12 is refined into CE [146,147,148,149,150] 
* CE 13 is refined into CE [151,152] 
* CE 14 is refined into CE [153,154,155,156] 
* CE 15 is refined into CE [157,158] 
* CE 16 is refined into CE [159] 


#### Refined cost equations start/3 
* CE 109: start(V1,V,V31) = 2+ fstsplit(V,V1,W31):2+ empty(W31,X31):3+ fun(Y31,Z31,A32):1+ sndsplit(V,V1,B32):2+ app(C32,D32,E32):1+ process(F32,V,G32):1
     [V1>=W31,V>=1,W31>=1,G32=0,F32=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=1,V31=2] 
* CE 110: start(V1,V,V31) = 2+ fstsplit(V,V1,W31):2+ empty(W31,X31):3+ fun(Y31,Z31,A32):1+ sndsplit(V,V1,B32):2+ app(C32,D32,E32):2+ process(F32,V,G32):1
     [V1>=W31,V>=1,W31>=1,G32=0,F32=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=1,V31=2] 
* CE 111: start(V1,V,V31) = 2+ fstsplit(V,V1,W31):2+ empty(W31,X31):3+ fun(Y31,Z31,A32):1+ sndsplit(V,V1,B32):3+ app(C32,B32,B32):1+ process(B32,V,D32):1
     [V1>=V+B32,V1>=W31,V>=1,B32>=0,W31>=1,D32=0,C32=0,A32=0,Z31=0,Y31=0,X31=1,V31=2] 
* CE 112: start(V1,V,V31) = 2+ fstsplit(V,V1,W31):2+ empty(W31,X31):3+ fun(Y31,Z31,A32):1+ sndsplit(V,V1,B32):3+ app(C32,B32,D32):2+ process(E32,V,F32):1
     [V1>=V+B32,V1>=W31,V>=1,B32>=0,W31>=1,F32=0,E32=0,D32=0,C32=0,A32=0,Z31=0,Y31=0,X31=1,V31=2] 
* CE 113: start(V1,V,V31) = 1+ fstsplit(V,V1,W31):1+ empty(X31,Y31):1
     [V1>=0,V>=0,Y31=2,X31=0,W31=0,V31=2] 
* CE 114: start(V1,V,V31) = 1+ fstsplit(V,V1,W31):1+ empty(X31,Y31):2
     [V1>=0,V>=0,Y31=0,X31=0,W31=0,V31=2] 
* CE 115: start(V1,V,V31) = 1+ fstsplit(V,V1,W31):2+ empty(W31,X31):2
     [V1>=W31,W31>=1,V>=1,X31=0,V31=2] 
* CE 116: start(V1,V,V31) = 1+ fstsplit(V,V1,W31):2+ empty(W31,X31):3
     [V1>=W31,W31>=1,V>=1,X31=1,V31=2] 
* CE 117: start(V1,V,V31) = 0
     [V31>=0,V>=0,V1>=0] 
* CE 118: start(V1,V,V31) = 2+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):2+ empty(A32,B32):3+ fun(C32,D32,E32):1+ app(F32,V1,V1):1+ sndsplit(V,V1,G32):2+ process(H32,V,I32):1
     [V1>=A32,V>=1,A32>=1,I32=0,H32=0,G32=0,F32=0,E32=0,D32=0,C32=0,B32=1,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 119: start(V1,V,V31) = 2+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):2+ empty(A32,B32):3+ fun(C32,D32,E32):1+ app(F32,V1,V1):1+ sndsplit(V,V1,G32):3+ process(G32,V,H32):1
     [V1>=V+G32,V1>=A32,V>=1,G32>=0,A32>=1,H32=0,F32=0,E32=0,D32=0,C32=0,B32=1,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 120: start(V1,V,V31) = 2+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):2+ empty(A32,B32):3+ fun(C32,D32,E32):1+ app(F32,V1,G32):2+ sndsplit(V,H32,I32):2+ process(J32,V,K32):1
     [V1>=A32,V>=1,A32>=1,K32=0,J32=0,I32=0,H32=0,G32=0,F32=0,E32=0,D32=0,C32=0,B32=1,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 121: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):1+ empty(B32,C32):1
     [V1>=0,V>=0,C32=2,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 122: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):1+ empty(B32,C32):2
     [V1>=0,V>=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 123: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):2+ empty(A32,B32):2
     [V1>=A32,A32>=1,V>=1,B32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 124: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ fstsplit(V,V1,A32):2+ empty(A32,B32):3
     [V1>=A32,A32>=1,V>=1,B32=1,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 125: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,A32):2+ fstsplit(V,B32,C32):1+ empty(D32,E32):1
     [V>=0,V1>=0,E32=2,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 126: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,A32):2+ fstsplit(V,B32,C32):1+ empty(D32,E32):2
     [V>=0,V1>=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 127: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(Z31,V1,V1):1+ app(A32,V1,V1):1+ process(V1,B32,C32):1
     [V1>=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1,V=0] 
* CE 128: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(Z31,V1,V1):1+ app(A32,V1,B32):2+ process(C32,D32,E32):1
     [V1>=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1,V=0] 
* CE 129: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(V,V1,Z31):2+ app(A32,B32,C32):1+ process(D32,V,E32):1
     [V>=0,V1>=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 130: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(V,V1,Z31):2+ app(A32,B32,C32):2+ process(D32,V,E32):1
     [V>=0,V1>=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 131: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(V,V1,Z31):3+ app(A32,Z31,Z31):1+ process(Z31,V,B32):1
     [V1>=V+Z31,V>=1,Z31>=0,B32=0,A32=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 132: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ sndsplit(V,V1,Z31):3+ app(A32,Z31,B32):2+ process(C32,V,D32):1
     [V1>=V+Z31,V>=1,Z31>=0,D32=0,C32=0,B32=0,A32=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 133: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ sndsplit(A32,V1,V1):1+ process(V1,B32,C32):1
     [V1>=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1,V=0] 
* CE 134: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ sndsplit(V,V1,A32):2+ process(B32,V,C32):1
     [V>=0,V1>=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 135: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,V1):1+ sndsplit(V,V1,A32):3+ process(A32,V,B32):1
     [V1>=V+A32,V>=1,A32>=0,B32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 136: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,A32):2+ sndsplit(B32,C32,D32):1+ process(E32,F32,G32):1
     [V1>=0,G32=0,F32=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1,V=0] 
* CE 137: start(V1,V,V31) = 1+ fun(W31,X31,Y31):1+ app(Z31,V1,A32):2+ sndsplit(V,B32,C32):2+ process(D32,V,E32):1
     [V>=0,V1>=0,E32=0,D32=0,C32=0,B32=0,A32=0,Z31=0,Y31=0,X31=0,W31=0,V31=1] 
* CE 138: start(V1,V,V31) = 0+ fstsplit(V1,V,W31):1
     [V>=0,V1>=0,W31=0] 
* CE 139: start(V1,V,V31) = 0+ fstsplit(V1,V,W31):2
     [V>=W31,W31>=1,V1>=1] 
* CE 140: start(V1,V,V31) = 0+ sndsplit(W31,V,V):1
     [V>=0,W31=0,V1=0] 
* CE 141: start(V1,V,V31) = 0+ sndsplit(V1,V,W31):2
     [V>=0,V1>=0,W31=0] 
* CE 142: start(V1,V,V31) = 0+ sndsplit(V1,V,W31):3
     [V>=V1+W31,W31>=0,V1>=1] 
* CE 143: start(V1,V,V31) = 0+ empty(W31,X31):1
     [X31=2,W31=0,V1=0] 
* CE 144: start(V1,V,V31) = 0+ empty(V1,W31):2
     [V1>=0,W31=0] 
* CE 145: start(V1,V,V31) = 0+ empty(V1,W31):3
     [V1>=1,W31=1] 
* CE 146: start(V1,V,V31) = 0+ leq(W31,V,X31):1
     [V>=0,X31=2,W31=0,V1=0] 
* CE 147: start(V1,V,V31) = 0+ leq(V1,W31,X31):2
     [V1>=1,X31=1,W31=0,V=0] 
* CE 148: start(V1,V,V31) = 0+ leq(V1,V,W31):3
     [V>=0,V1>=0,W31=0] 
* CE 149: start(V1,V,V31) = 0+ leq(V1,V,W31):4
     [V1>=V+1,V>=1,W31=1] 
* CE 150: start(V1,V,V31) = 0+ leq(V1,V,W31):5
     [V>=V1,V1>=1,W31=2] 
* CE 151: start(V1,V,V31) = 0+ length(V1,W31):1
     [V1>=0,W31=0] 
* CE 152: start(V1,V,V31) = 0+ length(V1,W31):2
     [V1>=W31,W31>=1] 
* CE 153: start(V1,V,V31) = 0+ app(W31,V,V):1
     [V>=0,W31=0,V1=0] 
* CE 154: start(V1,V,V31) = 0+ app(V1,V,W31):2
     [V>=0,V1>=0,W31=0] 
* CE 155: start(V1,V,V31) = 0+ app(V1,W31,X31):3
     [X31>=V1,V1>=1,X31=V1+W31,X31=V1+V] 
* CE 156: start(V1,V,V31) = 0+ app(V1,V,W31):4
     [V1>=W31,W31>=1,V>=0] 
* CE 157: start(V1,V,V31) = 0+ fun(V1,V,W31):1
     [V>=0,V1>=0,W31=0] 
* CE 158: start(V1,V,V31) = 0+ fun(V1,V,W31):2
     [W31>=0,V>=1,V1>=0] 
* CE 159: start(V1,V,V31) = 0+ process(V1,V,W31):1
     [V>=0,V1>=0,W31=0] 

### Cost equations --> "Loop" of start/3 
* CEs [109,110,111,112,113,114,115,116] --> Loop 50 
* CEs [147] --> Loop 51 
* CEs [118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137] --> Loop 52 
* CEs [117,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159] --> Loop 53 

#### Loops of start/3 
* Loop 50: start(V1,V,V31) [V>=0,V1>=0,V31=2] 
* Loop 51: start(V1,V,V31) [V1>=1,V=0] 
* Loop 52: start(V1,V,V31) [V>=0,V1>=0,V31=1] 
* Loop 53: start(V1,V,V31) [V1>=0] 

### Ranking functions of CR start(V1,V,V31) 

#### Partial ranking functions of CR start(V1,V,V31) 


### Resulting Chains:start(V1,V,V31) 
* [53]
* [52]
* [51]
* [50]


### Merging Chains  start/3 into  External patterns of execution 
* [[51],[53]] --> 1 
* [[52]] --> 2 
* [[50]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:app(V1,V,Out) -> [app(V1',V',Out')] 
1
#### Cost of phase [25]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'

#### Cost of phase [25]:app(V1,V,Out) -> [app(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'

#### Cost of chains of app(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [27]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of empty(V1,Out):
* Chain [30]: 1
  with precondition: [V1=0,Out=2] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [28]: 1
  with precondition: [Out=1,V1>=1] 


#### Cost of loops [31] 

 * loop 31:fstsplit(V1,V,Out) -> [fstsplit(V1',V',Out')] 
1
#### Cost of phase [31]:fstsplit(V1,V,Out) -> [fstsplit(V1',V',Out')] 
1*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'
it(31) =< V
it(31) =< V-V'

#### Cost of phase [31]:fstsplit(V1,V,Out) -> [fstsplit(V1',V',Out')] 
1*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'
it(31) =< V
it(31) =< V-V'

#### Cost of chains of fstsplit(V1,V,Out):
* Chain [[31],33]: 1*it(31)+1
  Such that:it(31) =< V1

  with precondition: [V1>=1,Out>=1,V>=Out] 

* Chain [[31],32]: 1*it(31)+1
  Such that:it(31) =< V1

  with precondition: [V=Out,V1>=2,V>=1] 

* Chain [33]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [32]: 1
  with precondition: [V=0,Out=0,V1>=1] 


#### Cost of loops [34,35,36] 

 * loop 34:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V1+V-V'

 * loop 35:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*s(6)+1
  Such that:s(6) =< V+V1'-V'

 * loop 36:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [34,35,36]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
4*it(34)+1*s(7)+1*s(8)+0
  Such that:aux(2) =< V1+V
aux(4) =< V
aux(5) =< V-V'
it(34) =< aux(4)
it(34) =< aux(5)
aux(3) =< aux(2)
s(7) =< it(34)*aux(2)
s(8) =< it(34)*aux(3)

#### Cost of chains of fun(V1,V,Out):
* Chain [[34,35,36],37]: 4*it(34)+1*s(7)+1*s(8)+1
  Such that:aux(2) =< V1+V
aux(6) =< V
it(34) =< aux(6)
aux(3) =< aux(2)
s(7) =< it(34)*aux(2)
s(8) =< it(34)*aux(3)

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [37]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [38] 

 * loop 38:length(V1,Out) -> [length(V1',Out')] 
1
#### Cost of phase [38]:length(V1,Out) -> [length(V1',Out')] 
1*it(38)+0
  Such that:it(38) =< V1
it(38) =< V1-V1'

#### Cost of chains of length(V1,Out):
* Chain [[38],39]: 1*it(38)+1
  Such that:it(38) =< V1

  with precondition: [Out>=1,V1>=Out] 

* Chain [39]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [40] 

 * loop 40:leq(V1,V,Out) -> [leq(V1',V',Out')] 
1
#### Cost of phase [40]:leq(V1,V,Out) -> [leq(V1',V',Out')] 
1*it(40)+0
  Such that:it(40) =< V1
it(40) =< V1-V1'
it(40) =< V
it(40) =< V-V'

#### Cost of phase [40]:leq(V1,V,Out) -> [leq(V1',V',Out')] 
1*it(40)+0
  Such that:it(40) =< V1
it(40) =< V1-V1'
it(40) =< V
it(40) =< V-V'

#### Cost of phase [40]:leq(V1,V,Out) -> [leq(V1',V',Out')] 
1*it(40)+0
  Such that:it(40) =< V1
it(40) =< V1-V1'
it(40) =< V
it(40) =< V-V'

#### Cost of chains of leq(V1,V,Out):
* Chain [[40],43]: 1*it(40)+1
  Such that:it(40) =< V1

  with precondition: [Out=2,V1>=1,V>=V1] 

* Chain [[40],42]: 1*it(40)+1
  Such that:it(40) =< V

  with precondition: [Out=1,V>=1,V1>=V+1] 

* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [43]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [42]: 1
  with precondition: [V=0,Out=1,V1>=1] 

* Chain [41]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [44] 

 * loop 44:sndsplit(V1,V,Out) -> [sndsplit(V1',V',Out')] 
1
#### Cost of phase [44]:sndsplit(V1,V,Out) -> [sndsplit(V1',V',Out')] 
1*it(44)+0
  Such that:it(44) =< V1
it(44) =< V1-V1'
it(44) =< V
it(44) =< V-V'

#### Cost of phase [44]:sndsplit(V1,V,Out) -> [sndsplit(V1',V',Out')] 
1*it(44)+0
  Such that:it(44) =< V1
it(44) =< V1-V1'
it(44) =< V
it(44) =< V-V'

#### Cost of chains of sndsplit(V1,V,Out):
* Chain [[44],46]: 1*it(44)+1
  Such that:it(44) =< V1

  with precondition: [V1>=1,Out>=0,V>=Out+V1] 

* Chain [[44],45]: 1*it(44)+1
  Such that:it(44) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [46]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [45]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [47] 

 * loop 47:process(V1,V,Out) -> [process(V1',V',Out')] 
11*s(69)+2*s(68)+12
  Such that:s(66) =< V1
s(67) =< V'
s(68) =< s(66)
s(69) =< s(67)

#### Cost of phase [47]:process(V1,V,Out) -> [process(V1',V',Out')] 
12*it(47)+11*s(70)+2*s(71)+0
  Such that:it(47) =< V1-V+1
it(47) =< V1-V-V1'+V'
aux(25) =< V1
aux(26) =< V1-V1'
it(47) =< aux(25)
s(72) =< aux(25)
it(47) =< aux(26)
s(72) =< aux(26)
s(73) =< it(47)*aux(25)
s(71) =< s(73)
s(70) =< s(72)

#### Cost of phase [47]:process(V1,V,Out) -> [process(V1',V',Out')] 
12*it(47)+11*s(70)+2*s(71)+0
  Such that:it(47) =< V1-V+1
it(47) =< V1-V-V1'+V'
aux(25) =< V1
aux(26) =< V1-V1'
it(47) =< aux(25)
s(72) =< aux(25)
it(47) =< aux(26)
s(72) =< aux(26)
s(73) =< it(47)*aux(25)
s(71) =< s(73)
s(70) =< s(72)

#### Cost of chains of process(V1,V,Out):
* Chain [[47],49]: 23*it(47)+22*s(12)+19*s(18)+2*s(71)+8
  Such that:aux(17) =< V1-V
aux(18) =< V
aux(27) =< V1
aux(17) =< aux(27)
it(47) =< aux(27)
s(12) =< aux(17)
s(18) =< aux(18)
s(73) =< it(47)*aux(27)
s(71) =< s(73)

  with precondition: [Out=0,V>=1,V1>=V] 

* Chain [[47],48,49]: 34*it(47)+37*s(18)+2*s(71)+20
  Such that:aux(37) =< V
aux(38) =< V1
it(47) =< aux(38)
s(18) =< aux(37)
s(73) =< it(47)*aux(38)
s(71) =< s(73)

  with precondition: [Out=0,V>=1,V1>=V+1] 

* Chain [49]: 22*s(12)+19*s(18)+8
  Such that:aux(17) =< V1
aux(18) =< V
s(12) =< aux(17)
s(18) =< aux(18)

  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [48,49]: 37*s(18)+11*s(76)+20
  Such that:aux(35) =< V1
aux(37) =< V
s(18) =< aux(37)
s(76) =< aux(35)

  with precondition: [Out=0,V1>=1,V>=1] 


#### Cost of chains of start(V1,V,V31):
* Chain [53]: 97*s(128)+119*s(129)+1*s(141)+1*s(142)+22*s(148)+4*s(150)+20
  Such that:s(143) =< V1-V
s(137) =< V1+V
aux(41) =< V1
aux(42) =< V
s(128) =< aux(41)
s(129) =< aux(42)
s(143) =< aux(41)
s(148) =< s(143)
s(149) =< s(128)*aux(41)
s(150) =< s(149)
s(140) =< s(137)
s(141) =< s(129)*s(137)
s(142) =< s(129)*s(140)

  with precondition: [V1>=0] 

* Chain [52]: 1134*s(152)+228*s(153)+270*s(169)+66*s(170)+12*s(172)+8*s(195)+29
  Such that:aux(55) =< V1
aux(56) =< V1-2*V
aux(57) =< V1-V
aux(58) =< V
s(153) =< aux(55)
s(165) =< aux(56)
s(194) =< s(153)*aux(55)
s(195) =< s(194)
s(152) =< aux(58)
s(169) =< aux(57)
s(165) =< aux(57)
s(170) =< s(165)
s(171) =< s(169)*aux(57)
s(172) =< s(171)

  with precondition: [V31=1,V1>=0,V>=0] 

* Chain [51]: 1
  with precondition: [V=0,V1>=1] 

* Chain [50]: 462*s(284)+2*s(285)+90*s(312)+22*s(313)+4*s(315)+27
  Such that:s(308) =< V1-2*V
s(309) =< V1-V
aux(63) =< V1
aux(64) =< V
s(285) =< aux(63)
s(284) =< aux(64)
s(312) =< s(309)
s(308) =< s(309)
s(313) =< s(308)
s(314) =< s(312)*s(309)
s(315) =< s(314)

  with precondition: [V31=2,V1>=0,V>=0] 


Closed-form bounds of start(V1,V,V31): 
-------------------------------------
* Chain [53] with precondition: [V1>=0] 
    - Upper bound: 97*V1+20+4*V1*V1+nat(V)*119+nat(V1+V)*2*nat(V)+nat(V1-V)*22 
    - Complexity: n^2 
* Chain [52] with precondition: [V31=1,V1>=0,V>=0] 
    - Upper bound: 228*V1+29+8*V1*V1+1134*V+nat(V1-V)*270+nat(V1-V)*12*nat(V1-V)+nat(V1-2*V)*66 
    - Complexity: n^2 
* Chain [51] with precondition: [V=0,V1>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [50] with precondition: [V31=2,V1>=0,V>=0] 
    - Upper bound: 2*V1+462*V+27+nat(V1-V)*90+nat(V1-V)*4*nat(V1-V)+nat(V1-2*V)*22 
    - Complexity: n^2 

### Maximum cost of start(V1,V,V31): 2*V1+19+nat(V)*119+nat(V1-V)*22+max([4*V1*V1+95*V1+max([nat(V1+V)*2*nat(V),131*V1+9+4*V1*V1+nat(V)*1015+nat(V1-V)*248+nat(V1-V)*12*nat(V1-V)+nat(V1-2*V)*66]),nat(V)*343+7+nat(V1-V)*68+nat(V1-V)*4*nat(V1-V)+nat(V1-2*V)*22])+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 29 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 388 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 291 ms.
   - Equation cost structures 169 ms.
   - Phase cost structures 57 ms.
   - Chain cost structures 38 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 873 ms.

