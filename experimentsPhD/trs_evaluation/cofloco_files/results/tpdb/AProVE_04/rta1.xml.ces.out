
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [plus/3]
1. recursive [non_tail,multiple] : [ack/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is partially evaluated into ack/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 6 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14] 


#### Refined cost equations plus/3 
* CE 11: plus(V1,V,Out) = 1
     [V>=0,V+1=Out,V1=1] 
* CE 12: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 13: plus(V1,V,Out) = 1+ plus(W1,X1,Y1)
     [X1>=0,V1>=0,V1+1=W1,Y1+1=Out,X1+2=V] 
* CE 14: plus(V1,V,Out) = 1+ plus(W1,X1,Y1)
     [W1>=0,V>=0,V+1=X1,Y1+1=Out,W1+2=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [13] --> Loop 9 
* CEs [14] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of plus/3 
* Loop 9: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=2,V1>=0,Out=Out'+1,V=V'+2,V1+1=V1'] 
* Loop 10: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=0,V1>=2,Out=Out'+1,V+1=V',V1=V1'+2] 
* Loop 11: plus(V1,V,Out) [V>=0,V+1=Out,V1=1] 
* Loop 12: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [9,10]: [V1+V-1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [9,10]:
  - RF of loop [9:1]:
    V/2-1/2 depends on loops [10:1] 
  - RF of loop [10:1]:
    V1/2-1/2 depends on loops [9:1] 


### Resulting Chains:plus(V1,V,Out) 
* [[9,10],12]
* [[9,10],11]
* [12]
* [11]


### Merging Chains  plus/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,[9,10]]] --> 3 
* [[11,[9,10]]] --> 4 


### Specialization of cost equations ack/3 
* CE 10 is refined into CE [15,16,17,18] 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations ack/3 
* CE 15: ack(V1,V,Out) = 1+ ack(W1,X1,Y1)+ plus(Z1,Y1,Y1):1+ ack(A2,Y1,Out)
     [A2>=0,Y1>=0,A2+1=W1,A2+1=V1,X1=0,Z1=0,V=1] 
* CE 16: ack(V1,V,Out) = 1+ ack(W1,X1,Y1)+ plus(Z1,A2,B2):2+ ack(C2,B2,Out)
     [C2>=0,B2>=1,B2=Y1+1,C2+1=W1,B2=A2+1,C2+1=V1,X1=1,Z1=1,V=2] 
* CE 17: ack(V1,V,Out) = 1+ ack(W1,X1,Y1)+ plus(X1,Z1,A2):3+ ack(B2,A2,Out)
     [X1+A2>=4,A2>=X1,B2>=0,X1>=0,A2=X1+Y1,A2=X1+Z1,B2+1=W1,X1+1=V,B2+1=V1] 
* CE 18: ack(V1,V,Out) = 1+ ack(W1,X1,Y1)+ plus(X1,Z1,A2):4+ ack(B2,A2,Out)
     [3*A2>=X1+6,A2>=X1,B2>=0,X1>=0,A2=X1+Y1,A2=X1+Z1,B2+1=W1,X1+1=V,B2+1=V1] 
* CE 19: ack(V1,V,Out) = 1+ ack(W1,X1,Out)
     [W1>=0,W1+1=V1,X1=1,V=0] 
* CE 20: ack(V1,V,Out) = 1
     [V>=0,V+1=Out,V1=0] 

### Cost equations --> "Loop" of ack/3 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

#### Loops of ack/3 
* Loop 13: ack(V1,V,Out) [V>=0,V+1=Out,V1=0] 
* Loop 14: ack(V1,V,Out)->  ack(V1',V',Out)
                  [V1'>=0,V1'+1=V1,V'=1,V=0] 
* Loop 15: ack(V1,V,Out)->  ack(V1,V',Out')  ack(V1'2,V'2,Out)
                  [2*V+3*Out'>=8,Out'>=0,V>=1,V1>=1,V+Out'=V'2+1,V1=V1'2+1,V=V'+1] 
* Loop 16: ack(V1,V,Out)->  ack(V1,V',Out')  ack(V1'2,V'2,Out)
                  [Out'+2*V>=6,Out'>=0,V>=1,V1>=1,V+Out'=V'2+1,V1=V1'2+1,V=V'+1] 
* Loop 17: ack(V1,V,Out)->  ack(V1,V',Out')  ack(V1'2,V'2,Out)
                  [Out'>=0,V1>=1,Out'+1=V'2,V1=V1'2+1,V'=1,V=2] 
* Loop 18: ack(V1,V,Out)->  ack(V1,V',Out')  ack(A'2,Out',Out)
                  [Out'>=0,V1>=1,V1=A'2+1,V'=0,V=1] 

### Ranking functions of CR ack(V1,V,Out) 

#### Partial ranking functions of CR ack(V1,V,Out) 
* Partial RF of phase [14,15,16,17,18]:
  - RF of loop [14:1]:
    -V+1 depends on loops [15:1,15:2,16:1,16:2,17:1,17:2,18:1,18:2] 
  - RF of loop [14:1,15:2,16:2,17:2,18:2]:
    V1
  - RF of loop [15:1,16:1,18:1]:
    V depends on loops [14:1,15:2,16:2,17:2,18:2] 
  - RF of loop [17:1]:
    V-1 depends on loops [14:1,15:2,16:2,17:2,18:2] 


### Resulting Chains:ack(V1,V,Out) 
* [13]
* [multiple([14,15,16,17,18],[[13]])]


### Merging Chains  ack/3 into  External patterns of execution 
* [[13]] --> 1 
* [[multiple([14,15,16,17,18],[[13]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21,22,23,24] 
* CE 3 is refined into CE [25,26] 


#### Refined cost equations start/2 
* CE 21: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 22: start(V1,V) = 0+ plus(W1,X1,Y1):2
     [Y1>=1,Y1=X1+1,Y1=V+1,W1=1,V1=1] 
* CE 23: start(V1,V) = 0+ plus(V1,W1,X1):3
     [V1+X1>=4,X1>=V1,V1>=0,X1=V1+W1,X1=V1+V] 
* CE 24: start(V1,V) = 0+ plus(V1,W1,X1):4
     [3*X1>=V1+6,X1>=V1,V1>=0,X1=V1+W1,X1=V1+V] 
* CE 25: start(V1,V) = 0+ ack(W1,X1,Y1):1
     [Y1>=1,Y1=X1+1,Y1=V+1,W1=0,V1=0] 
* CE 26: start(V1,V) = 0+ ack(V1,V,W1):2
     [W1>=V1+V+1,W1>=2*V+V1,V>=0,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22,26] --> Loop 21 
* CEs [21,25] --> Loop 22 

#### Loops of start/2 
* Loop 19: start(V1,V) [2*V1+3*V>=6,V>=0,V1>=0] 
* Loop 20: start(V1,V) [V+2*V1>=4,V>=0,V1>=0] 
* Loop 21: start(V1,V) [V>=0,V1>=1] 
* Loop 22: start(V1,V) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [22]
* [21]
* [20]
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[22]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 
* [[21]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [9,10] 

 * loop 9:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
 * loop 10:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [9,10]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*it(9)+0
  Such that:aux(5) =< V1+V
aux(6) =< V1+V-V1'-V'
it(9) =< aux(5)
it(9) =< aux(6)

#### Cost of phase [9,10]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
2*it(9)+0
  Such that:aux(5) =< V1+V
aux(6) =< V1+V-V1'-V'
it(9) =< aux(5)
it(9) =< aux(6)

#### Cost of chains of plus(V1,V,Out):
* Chain [[9,10],12]: 2*it(9)+1
  Such that:aux(7) =< Out
it(9) =< aux(7)

  with precondition: [V+V1=Out,V1>=0,V>=0,V+2*V1>=4] 

* Chain [[9,10],11]: 2*it(9)+1
  Such that:aux(6) =< -V1+3*Out
aux(5) =< Out
it(9) =< aux(5)
it(9) =< aux(6)

  with precondition: [V+V1=Out,V1>=0,V>=0,2*V1+3*V>=6] 

* Chain [12]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [11]: 1
  with precondition: [V1=1,V+1=Out,V>=0] 


#### Cost of loops [14,15,16,17,18] 

 * loop 14:ack(V1,V,Out) -> [ack(V1',V',Out')] 
1
 * loop 15:ack(V1,V,Out) -> [ack(V1',V',Out'),ack(V1'2,V'2,Out'2)] 
2*s(6)+2
  Such that:s(4) =< -V'+3*V'2
s(5) =< V'2
s(6) =< s(5)
s(6) =< s(4)

 * loop 16:ack(V1,V,Out) -> [ack(V1',V',Out'),ack(V1'2,V'2,Out'2)] 
2*s(10)+2
  Such that:s(9) =< V'2
s(10) =< s(9)

 * loop 17:ack(V1,V,Out) -> [ack(V1',V',Out'),ack(V1'2,V'2,Out'2)] 
2
 * loop 18:ack(V1,V,Out) -> [ack(V1',V',Out'),ack(V1'2,V'2,Out'2)] 
2
#### Cost of phase [14,15,16,17,18]:ack(V1,V,Out) -> [] 
1*it(14)+7*it(15)+2*it(18)+2*s(11)+2*s(14)+0
  Such that:aux(84) =< 2*V1-2*V+1
aux(86) =< -V+1
it(18) =< aux(84)
it(14) =< aux(86)

#### Cost of chains of ack(V1,V,Out):
* Chain [13]: 1
  with precondition: [V1=0,V+1=Out,V>=0] 

* Chain [multiple([14,15,16,17,18],[[13]])]: 1*it(14)+7*it(15)+2*it(18)+2*s(11)+2*s(14)+0
  Such that:aux(84) =< 2*V1-2*V+1
aux(86) =< -V+1
it(18) =< aux(84)
it(14) =< aux(86)

  with precondition: [V1>=1,V>=0,Out>=2*V+V1,Out>=V+V1+1] 


#### Cost of chains of start(V1,V):
* Chain [22]: 1
  with precondition: [V1=0,V>=0] 

* Chain [21]: 2*s(18)+1*s(19)+11*s(20)+1
  Such that:s(16) =< 2*V1-2*V+1
s(17) =< -V+1
s(18) =< s(16)
s(19) =< s(17)

  with precondition: [V1>=1,V>=0] 

* Chain [20]: 2*s(24)+1
  Such that:s(23) =< V1+V
s(24) =< s(23)

  with precondition: [V1>=0,V>=0,V+2*V1>=4] 

* Chain [19]: 2*s(27)+1
  Such that:s(26) =< V1+V
s(25) =< 2*V1+3*V
s(27) =< s(26)
s(27) =< s(25)

  with precondition: [V1>=0,V>=0,2*V1+3*V>=6] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [22] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [21] with precondition: [V1>=1,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20] with precondition: [V1>=0,V>=0,V+2*V1>=4] 
    - Upper bound: 2*V1+2*V+1 
    - Complexity: n 
* Chain [19] with precondition: [V1>=0,V>=0,2*V1+3*V>=6] 
    - Upper bound: 2*V1+2*V+1 
    - Complexity: n 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 45 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 56 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 252 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 231 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 400 ms.

