
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [ (div)/3,quot/4]
1. recursive  : [plus/3]
2. recursive [non_tail] : [times/3]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into quot/4
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into times/3
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations quot/4 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 7 is refined into CE [24] 


#### Refined cost equations quot/4 
* CE 20: quot(V,V1,V8,Out) = 1
     [V8>=0,V1>=1,Out=0,V=0] 
* CE 21: quot(V,V1,V8,Out) = 0
     [V8>=0,V1>=0,V>=0,Out=0] 
* CE 22: quot(V,V1,V8,Out) = 2
     [V8>=1,Out=1,V1=0,V=0] 
* CE 23: quot(V,V1,V8,Out) = 1+ quot(W8,X8,V8,Out)
     [X8>=0,W8>=0,V8>=0,X8+1=V1,W8+1=V] 
* CE 24: quot(V,V1,V8,Out) = 2+ quot(V,V8,V8,W8)
     [V8>=1,V>=0,W8+1=Out,V1=0] 

### Cost equations --> "Loop" of quot/4 
* CEs [23] --> Loop 13 
* CEs [24] --> Loop 14 
* CEs [20,21] --> Loop 15 
* CEs [22] --> Loop 16 

#### Loops of quot/4 
* Loop 13: quot(V,V1,V8,Out)->  quot(V',V1',V8,Out)
                  [V8>=0,V1>=1,V>=1,V1=V1'+1,V=V'+1] 
* Loop 14: quot(V,V1,V8,Out)->  quot(V,V8,V8,A')
                  [V8>=1,V>=0,Out=A'+1,V1=0] 
* Loop 15: quot(V,V1,V8,Out) [V8>=0,V1>=0,V>=0,Out=0] 
* Loop 16: quot(V,V1,V8,Out) [V8>=1,Out=1,V1=0,V=0] 

### Ranking functions of CR quot(V,V1,V8,Out) 

#### Partial ranking functions of CR quot(V,V1,V8,Out) 
* Partial RF of phase [13,14]:
  - RF of loop [13:1]:
    V
    V1 depends on loops [14:1] 
  - RF of loop [14:1]:
    -V1+1 depends on loops [13:1] 


### Resulting Chains:quot(V,V1,V8,Out) 
* [[13,14],16]
* [[13,14],15]
* [16]
* [15]


### Merging Chains  quot/4 into  External patterns of execution 
* [[16],[15,[13,14]],[16,[13,14]]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations plus/3 
* CE 15 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 12 is refined into CE [28] 


#### Refined cost equations plus/3 
* CE 25: plus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 26: plus(A,B,A) = 1
     [A>=0,B=0] 
* CE 27: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 28: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 

### Cost equations --> "Loop" of plus/3 
* CEs [28] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 

#### Loops of plus/3 
* Loop 17: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 
* Loop 18: plus(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 19: plus(A,B,A) [A>=0,B=0] 
* Loop 20: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [17]: [V]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[17],20]
* [[17],19]
* [[17],18]
* [20]
* [19]
* [18]


### Merging Chains  plus/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19],[19,[17]]] --> 2 
* [[18]] --> 3 
* [[20,[17]]] --> 4 
* [[18,[17]]] --> 5 


### Specialization of cost equations times/3 
* CE 17 is refined into CE [29] 
* CE 18 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 16 is refined into CE [32,33,34,35,36] 


#### Refined cost equations times/3 
* CE 29: times(A,B,B) = 1
     [B>=0,A=1] 
* CE 30: times(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 31: times(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 32: times(V,V1,Out) = 1+ times(W1,X1,Out)+ plus(Y1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V,X1=0,Y1=0,V1=0] 
* CE 33: times(A,B,B) = 1+ times(C,B,D)+ plus(B,E,B):2
     [C>=0,B>=0,C+1=A,D=0,E=0] 
* CE 34: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,X1,Y1):3
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 35: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,Y1,Out):4
     [Out>=V1,W1>=0,V1>=1,Out=V1+X1,Out=V1+Y1,W1+1=V] 
* CE 36: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,X1,Out):5
     [V1>=Out,W1>=0,Out>=1,X1>=0,W1+1=V] 

### Cost equations --> "Loop" of times/3 
* CEs [36] --> Loop 21 
* CEs [35] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [32] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [30,31] --> Loop 27 

#### Loops of times/3 
* Loop 21: times(V,V1,Out)->  times(V',V1,Out')
                  [V1>=Out,Out'>=0,Out>=1,V>=1,V=V'+1] 
* Loop 22: times(V,V1,Out)->  times(V',V1,Out')
                  [Out>=V1,V1>=1,V>=1,V1+Out'=Out,V=V'+1] 
* Loop 23: times(A,B,B)->  times(A',B,B')
                  [B>=0,A>=1,A=A'+1,B'=0] 
* Loop 24: times(V,V1,Out)->  times(V',V1,Out')
                  [Out'>=0,V1>=0,V>=1,V=V'+1,Out=0] 
* Loop 25: times(V,V1,Out)->  times(V',V1',Out)
                  [Out>=0,V>=1,V=V'+1,V1'=0,V1=0] 
* Loop 26: times(A,B,B) [B>=0,A=1] 
* Loop 27: times(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR times(V,V1,Out) 
* RF of phase [21,22,23,24,25]: [V]

#### Partial ranking functions of CR times(V,V1,Out) 
* Partial RF of phase [21,22,23,24,25]:
  - RF of loop [21:1,22:1,23:1,24:1,25:1]:
    V


### Resulting Chains:times(V,V1,Out) 
* [[21,22,23,24,25],27]
* [[21,22,23,24,25],26]
* [27]
* [26]


### Merging Chains  times/3 into  External patterns of execution 
* [[26],[26,[21,22,23,24,25]],[27,[21,22,23,24,25]]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [37,38] 
* CE 3 is refined into CE [39] 
* CE 4 is refined into CE [40,41,42,43,44] 
* CE 5 is refined into CE [45,46] 
* CE 6 is refined into CE [47,48] 


#### Refined cost equations start/3 
* CE 37: start(V,V1,V8) = 1+ quot(V,V1,V1,W8):1
     [V1+W8>=1,V+W8>=1,V+V1>=1,2*V1>=1,W8>=0,V>=0] 
* CE 38: start(V,V1,V8) = 1+ quot(V,V1,V1,W8):2
     [V1>=0,V>=0,W8=0] 
* CE 39: start(V,V1,V8) = 1
     [V1>=0,V=0] 
* CE 40: start(V,V1,V8) = 0+ plus(W8,V1,V1):1
     [V1>=0,W8=0,V=0] 
* CE 41: start(V,V1,V8) = 0+ plus(V,W8,V):2
     [V>=0,W8=0,V1=0] 
* CE 42: start(V,V1,V8) = 0+ plus(V,V1,W8):3
     [V1>=0,V>=0,W8=0] 
* CE 43: start(V,V1,V8) = 0+ plus(V,W8,X8):4
     [X8>=V,V>=1,X8=V+W8,X8=V+V1] 
* CE 44: start(V,V1,V8) = 0+ plus(V,V1,W8):5
     [V>=W8,W8>=1,V1>=0] 
* CE 45: start(V,V1,V8) = 0+ times(V,V1,W8):1
     [W8>=0,V1>=0,V>=1] 
* CE 46: start(V,V1,V8) = 0+ times(V,V1,W8):2
     [V1>=0,V>=0,W8=0] 
* CE 47: start(V,V1,V8) = 0+ quot(V,V1,V8,W8):1
     [V1+W8>=1,V1+V8>=1,V+W8>=1,V+V8>=1,W8>=0,V8>=0,V1>=0,V>=0] 
* CE 48: start(V,V1,V8) = 0+ quot(V,V1,V8,W8):2
     [V8>=0,V1>=0,V>=0,W8=0] 

### Cost equations --> "Loop" of start/3 
* CEs [41] --> Loop 28 
* CEs [37,38,39,40,42,43,44,45,46,47,48] --> Loop 29 

#### Loops of start/3 
* Loop 28: start(V,V1,V8) [V>=0,V1=0] 
* Loop 29: start(V,V1,V8) [V1>=0,V>=0] 

### Ranking functions of CR start(V,V1,V8) 

#### Partial ranking functions of CR start(V,V1,V8) 


### Resulting Chains:start(V,V1,V8) 
* [29]
* [28]


### Merging Chains  start/3 into  External patterns of execution 
* [[28],[29]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [13,14] 

 * loop 13:quot(V,V1,V8,Out) -> [quot(V',V1',V8',Out')] 
1
 * loop 14:quot(V,V1,V8,Out) -> [quot(V',V1',V8',Out')] 
2
#### Cost of phase [13,14]:quot(V,V1,V8,Out) -> [quot(V',V1',V8',Out')] 
1*it(13)+2*it(14)+0
  Such that:it(13) =< V
it(13) =< V-V'
aux(5) =< -V1+1
aux(6) =< -V1+V1'
it(14) =< it(13)+aux(6)
it(14) =< it(13)+aux(5)

#### Cost of phase [13,14]:quot(V,V1,V8,Out) -> [quot(V',V1',V8',Out')] 
1*it(13)+2*it(14)+0
  Such that:it(13) =< V
it(13) =< V-V'
aux(5) =< -V1+1
aux(6) =< -V1+V1'
it(14) =< it(13)+aux(6)
it(14) =< it(13)+aux(5)

#### Cost of chains of quot(V,V1,V8,Out):
* Chain [[13,14],16]: 1*it(13)+2*it(14)+2
  Such that:it(13) =< V
aux(6) =< -V1
aux(5) =< -V1+1
it(14) =< it(13)+aux(6)
it(14) =< it(13)+aux(5)

  with precondition: [V1>=0,V8>=0,Out>=1,V1+V8>=1,Out+V1>=2,V+1>=Out+V1] 

* Chain [[13,14],15]: 1*it(13)+2*it(14)+1
  Such that:it(13) =< V
aux(5) =< -V1+1
it(14) =< it(13)+aux(5)

  with precondition: [V>=0,V1>=0,V8>=0,Out>=0,V+V8>=1,Out+V>=1,V1+V8>=1,Out+V1>=1] 

* Chain [16]: 2
  with precondition: [V=0,V1=0,Out=1,V8>=1] 

* Chain [15]: 1
  with precondition: [Out=0,V>=0,V1>=0,V8>=0] 


#### Cost of loops [17] 

 * loop 17:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [17]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of phase [17]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of chains of plus(V,V1,Out):
* Chain [[17],20]: 1*it(17)+1
  Such that:it(17) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< Out

  with precondition: [V1=0,V=Out,V>=1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< Out

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [20]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [19]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [21,22,23,24,25] 

 * loop 21:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(10)+1
  Such that:s(10) =< V1'

 * loop 22:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(12)+2
  Such that:s(12) =< V1'

 * loop 23:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(14)+2
  Such that:s(14) =< V1

 * loop 24:times(V,V1,Out) -> [times(V',V1',Out')] 
1
 * loop 25:times(V,V1,Out) -> [times(V',V1',Out')] 
2
#### Cost of phase [21,22,23,24,25]:times(V,V1,Out) -> [times(V',V1',Out')] 
8*it(21)+1*s(15)+2*s(16)+0
  Such that:aux(13) =< V1
aux(16) =< V
aux(17) =< V-V'
it(21) =< aux(16)
it(21) =< aux(17)
aux(14) =< aux(13)
s(15) =< it(21)*aux(13)
s(16) =< it(21)*aux(14)

#### Cost of phase [21,22,23,24,25]:times(V,V1,Out) -> [times(V',V1',Out')] 
8*it(21)+1*s(15)+2*s(16)+0
  Such that:aux(13) =< V1
aux(16) =< V
aux(17) =< V-V'
it(21) =< aux(16)
it(21) =< aux(17)
aux(14) =< aux(13)
s(15) =< it(21)*aux(13)
s(16) =< it(21)*aux(14)

#### Cost of chains of times(V,V1,Out):
* Chain [[21,22,23,24,25],27]: 8*it(21)+1*s(15)+2*s(16)+1
  Such that:aux(13) =< V1
aux(18) =< V
it(21) =< aux(18)
aux(14) =< aux(13)
s(15) =< it(21)*aux(13)
s(16) =< it(21)*aux(14)

  with precondition: [V>=1,V1>=0,Out>=0] 

* Chain [[21,22,23,24,25],26]: 8*it(21)+1*s(15)+2*s(16)+1
  Such that:aux(13) =< V1
aux(19) =< V
it(21) =< aux(19)
aux(14) =< aux(13)
s(15) =< it(21)*aux(13)
s(16) =< it(21)*aux(14)

  with precondition: [V>=2,V1>=0,Out>=0] 

* Chain [27]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [26]: 1
  with precondition: [V=1,V1=Out,V1>=0] 


#### Cost of chains of start(V,V1,V8):
* Chain [29]: 22*s(33)+4*s(34)+4*s(35)+2*s(42)+4*s(43)+3
  Such that:s(39) =< V1
aux(22) =< V
aux(23) =< -V1
aux(24) =< -V1+1
s(33) =< aux(22)
s(34) =< s(33)+aux(24)
s(35) =< s(33)+aux(23)
s(35) =< s(33)+aux(24)
s(41) =< s(39)
s(42) =< s(33)*s(39)
s(43) =< s(33)*s(41)

  with precondition: [V>=0,V1>=0] 

* Chain [28]: 1*s(50)+1
  Such that:s(50) =< V

  with precondition: [V1=0,V>=0] 


Closed-form bounds of start(V,V1,V8): 
-------------------------------------
* Chain [29] with precondition: [V>=0,V1>=0] 
    - Upper bound: 30*V+3+6*V1*V+nat(-V1+1)*4 
    - Complexity: n^2 
* Chain [28] with precondition: [V1=0,V>=0] 
    - Upper bound: V+1 
    - Complexity: n 

### Maximum cost of start(V,V1,V8): 29*V+2+6*V1*V+nat(-V1+1)*4+ (V+1) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 46 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 65 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 45 ms.
   - Chain cost structures 26 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 257 ms.

