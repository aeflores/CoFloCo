
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [intlist/2]
1. recursive [non_tail] : [int/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into intlist/2
1. SCC is partially evaluated into int/3
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations intlist/2 
* CE 6 is refined into CE [13] 
* CE 4 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 5 is refined into CE [16] 


#### Refined cost equations intlist/2 
* CE 13: intlist(V,Out) = 1
     [V>=1,V+1=Out] 
* CE 14: intlist(V,Out) = 1
     [Out=0,V=0] 
* CE 15: intlist(V,Out) = 0
     [V>=0,Out=0] 
* CE 16: intlist(V,Out) = 1+ intlist(W,X)
     [V>=W+1,W>=0,Out+W=V+X+1] 

### Cost equations --> "Loop" of intlist/2 
* CEs [16] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [14,15] --> Loop 11 

#### Loops of intlist/2 
* Loop 9: intlist(V,Out)->  intlist(V',Out')
                  [V>=V'+1,V'>=0,V+Out'+1=Out+V'] 
* Loop 10: intlist(V,Out) [V>=1,V+1=Out] 
* Loop 11: intlist(V,Out) [V>=0,Out=0] 

### Ranking functions of CR intlist(V,Out) 
* RF of phase [9]: [V]

#### Partial ranking functions of CR intlist(V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:intlist(V,Out) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  intlist/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10],[10,[9]],[11,[9]]] --> 2 


### Specialization of cost equations int/3 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 10 is refined into CE [20,21] 
* CE 11 is refined into CE [22] 


#### Refined cost equations int/3 
* CE 17: int(A,A,B) = 1
     [A>=0,A+1=B] 
* CE 18: int(V,V1,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 19: int(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 20: int(V,V1,Out) = 1+ int(W1,X1,Y1)+ intlist(Y1,Z1):1
     [X1>=0,W1>=0,Y1>=0,X1+1=V1,W1+1=V,Z1=0,Out=0] 
* CE 21: int(V,V1,Out) = 1+ int(W1,X1,Y1)+ intlist(Y1,Out):2
     [2*Y1>=Out,X1>=0,W1>=0,Out>=2,X1+1=V1,W1+1=V] 
* CE 22: int(V,V1,Out) = 1+ int(W1,V1,X1)
     [V1>=1,X1+1=Out,W1=1,V=0] 

### Cost equations --> "Loop" of int/3 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [22] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18,19] --> Loop 16 

#### Loops of int/3 
* Loop 12: int(V,V1,Out)->  int(V',V1',Out')
                  [2*Out'>=Out,Out>=2,V1>=1,V>=1,V1=V1'+1,V=V'+1] 
* Loop 13: int(V,V1,Out)->  int(V',V1',Out')
                  [Out'>=0,V1>=1,V>=1,V1=V1'+1,V=V'+1,Out=0] 
* Loop 14: int(V,V1,Out)->  int(V',V1,Out')
                  [V1>=1,Out=Out'+1,V'=1,V=0] 
* Loop 15: int(A,A,B) [A>=0,A+1=B] 
* Loop 16: int(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR int(V,V1,Out) 

#### Partial ranking functions of CR int(V,V1,Out) 
* Partial RF of phase [12,13,14]:
  - RF of loop [12:1,13:1]:
    V depends on loops [14:1] 
    V1
  - RF of loop [14:1]:
    -V+1 depends on loops [12:1,13:1] 


### Resulting Chains:int(V,V1,Out) 
* [[12,13,14],16]
* [[12,13,14],15]
* [16]
* [15]


### Merging Chains  int/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[15,[12,13,14]],[16,[12,13,14]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [23,24] 
* CE 3 is refined into CE [25,26,27] 


#### Refined cost equations start/2 
* CE 23: start(V,V1) = 0+ intlist(V,W1):1
     [V>=0,W1=0] 
* CE 24: start(V,V1) = 0+ intlist(V,W1):2
     [2*V>=W1,W1>=2] 
* CE 25: start(V,V1) = 0+ int(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 26: start(A,A) = 0+ int(A,A,B):2
     [A>=0,A+1=B] 
* CE 27: start(V,V1) = 0+ int(V,V1,W1):3
     [V+W1>=1,W1>=0,V1>=1,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [23,24,25,26,27] --> Loop 17 

#### Loops of start/2 
* Loop 17: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [17]


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:intlist(V,Out) -> [intlist(V',Out')] 
1
#### Cost of phase [9]:intlist(V,Out) -> [intlist(V',Out')] 
1*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:intlist(V,Out) -> [intlist(V',Out')] 
1*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of chains of intlist(V,Out):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [Out>=2,2*V>=Out] 

* Chain [[9],10]: 1*it(9)+1
  Such that:it(9) =< V

  with precondition: [Out>=V+2,2*V>=Out] 

* Chain [11]: 1
  with precondition: [Out=0,V>=0] 

* Chain [10]: 1
  with precondition: [V+1=Out,V>=1] 


#### Cost of loops [12,13,14] 

 * loop 12:int(V,V1,Out) -> [int(V',V1',Out')] 
2*s(5)+2
 * loop 13:int(V,V1,Out) -> [int(V',V1',Out')] 
2
 * loop 14:int(V,V1,Out) -> [int(V',V1',Out')] 
1
#### Cost of phase [12,13,14]:int(V,V1,Out) -> [int(V',V1',Out')] 
4*it(12)+1*it(14)+2*s(6)+0
  Such that:aux(6) =< -V+1
aux(7) =< -V+V'
aux(10) =< V1
aux(11) =< V1-V1'
it(12) =< aux(10)
it(12) =< aux(11)
it(14) =< it(12)+it(12)+aux(7)
it(14) =< it(12)+it(12)+aux(6)

#### Cost of phase [12,13,14]:int(V,V1,Out) -> [int(V',V1',Out')] 
4*it(12)+1*it(14)+2*s(6)+0
  Such that:aux(6) =< -V+1
aux(7) =< -V+V'
aux(10) =< V1
aux(11) =< V1-V1'
it(12) =< aux(10)
it(12) =< aux(11)
it(14) =< it(12)+it(12)+aux(7)
it(14) =< it(12)+it(12)+aux(6)

#### Cost of chains of int(V,V1,Out):
* Chain [[12,13,14],16]: 4*it(12)+1*it(14)+2*s(6)+1
  Such that:aux(6) =< -V+1
aux(12) =< V1
it(12) =< aux(12)
it(14) =< it(12)+it(12)+aux(6)

  with precondition: [V>=0,V1>=1,Out>=0,Out+V>=1] 

* Chain [[12,13,14],15]: 4*it(12)+1*it(14)+2*s(6)+1
  Such that:aux(7) =< -2*V+2*V1
aux(6) =< -V+1
aux(13) =< V1
it(12) =< aux(13)
it(14) =< it(12)+it(12)+aux(7)
it(14) =< it(12)+it(12)+aux(6)

  with precondition: [V>=0,V1>=1,Out>=0,V1>=V,Out+V>=1] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [15]: 1
  with precondition: [V1=V,V1+1=Out,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [17]: 2*s(19)+8*s(23)+1*s(24)+1*s(25)+4*s(26)+1
  Such that:s(20) =< -2*V+2*V1
s(21) =< -V+1
s(18) =< V
s(22) =< V1
s(23) =< s(22)
s(24) =< s(23)+s(23)+s(20)
s(24) =< s(23)+s(23)+s(21)
s(25) =< s(23)+s(23)+s(21)
s(19) =< s(18)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [17] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 31 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 35 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 111 ms.

