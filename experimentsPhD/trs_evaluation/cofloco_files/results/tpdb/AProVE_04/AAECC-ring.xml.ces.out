
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [app/3]
1. non_recursive  : [empty/2]
2. recursive  : [fstsplit/3]
3. recursive [non_tail] : [fun/3]
4. recursive  : [sndsplit/3]
5. non_recursive  : [head/2]
6. non_recursive  : [tail/2]
7. recursive  : [length/2]
8. recursive  : [leq/3]
9. recursive  : [fun1/8,fun2/8,fun3/8,fun4/8,fun5/8,fun6/8,fun7/8,fun8/8,fun9/8,ring/7]
10. non_recursive  : [start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into empty/2
2. SCC is partially evaluated into fstsplit/3
3. SCC is partially evaluated into fun/3
4. SCC is partially evaluated into sndsplit/3
5. SCC is partially evaluated into head/2
6. SCC is partially evaluated into tail/2
7. SCC is partially evaluated into length/2
8. SCC is partially evaluated into leq/3
9. SCC is partially evaluated into ring/7
10. SCC is partially evaluated into start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 35 is refined into CE [72] 
* CE 33 is refined into CE [73] 
* CE 34 is refined into CE [74] 


#### Refined cost equations app/3 
* CE 72: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 73: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 74: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [74] --> Loop 31 
* CEs [72] --> Loop 32 
* CEs [73] --> Loop 33 

#### Loops of app/3 
* Loop 31: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 32: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 33: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [31]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V1


### Resulting Chains:app(V1,V,Out) 
* [[31],33]
* [[31],32]
* [33]
* [32]


### Merging Chains  app/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[33,[31]]] --> 3 
* [[32,[31]]] --> 4 


### Specialization of cost equations empty/2 
* CE 41 is refined into CE [75] 
* CE 42 is refined into CE [76] 
* CE 40 is refined into CE [77] 


#### Refined cost equations empty/2 
* CE 75: empty(V1,Out) = 1
     [V1>=1,Out=1] 
* CE 76: empty(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 77: empty(V1,Out) = 1
     [Out=2,V1=0] 

### Cost equations --> "Loop" of empty/2 
* CEs [75] --> Loop 34 
* CEs [76] --> Loop 35 
* CEs [77] --> Loop 36 

#### Loops of empty/2 
* Loop 34: empty(V1,Out) [V1>=1,Out=1] 
* Loop 35: empty(V1,Out) [V1>=0,Out=0] 
* Loop 36: empty(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR empty(V1,Out) 

#### Partial ranking functions of CR empty(V1,Out) 


### Resulting Chains:empty(V1,Out) 
* [36]
* [35]
* [34]


### Merging Chains  empty/2 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34]] --> 3 


### Specialization of cost equations fstsplit/3 
* CE 37 is refined into CE [78] 
* CE 36 is refined into CE [79] 
* CE 39 is refined into CE [80] 
* CE 38 is refined into CE [81] 


#### Refined cost equations fstsplit/3 
* CE 78: fstsplit(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 79: fstsplit(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 80: fstsplit(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 81: fstsplit(V1,V,Out) = 1+ fstsplit(W1,X1,Y1)
     [V+Y1>=Out,Out>=Y1+1,W1>=0,V+Y1=Out+X1,W1+1=V1] 

### Cost equations --> "Loop" of fstsplit/3 
* CEs [81] --> Loop 37 
* CEs [78] --> Loop 38 
* CEs [79,80] --> Loop 39 

#### Loops of fstsplit/3 
* Loop 37: fstsplit(V1,V,Out)->  fstsplit(V1',V',Out')
                  [V+Out'>=Out,Out>=Out'+1,V1'>=0,V+Out'=Out+V',V1'+1=V1] 
* Loop 38: fstsplit(V1,V,Out) [V1>=1,Out=0,V=0] 
* Loop 39: fstsplit(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fstsplit(V1,V,Out) 
* RF of phase [37]: [V,V1]

#### Partial ranking functions of CR fstsplit(V1,V,Out) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    V
    V1


### Resulting Chains:fstsplit(V1,V,Out) 
* [[37],39]
* [[37],38]
* [39]
* [38]


### Merging Chains  fstsplit/3 into  External patterns of execution 
* [[38],[39]] --> 1 
* [[38,[37]],[39,[37]]] --> 2 


### Specialization of cost equations fun/3 
* CE 30 is refined into CE [82] 
* CE 32 is refined into CE [83] 
* CE 31 is refined into CE [84,85,86] 


#### Refined cost equations fun/3 
* CE 82: fun(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 83: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 84: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,Y1,A2):2
     [Z1+X1>=V,V>=X1+1,X1>=0,Y1>=0,Z1+X1=V+W1,Z1+X1=V1+V,A2=0,Out=0] 
* CE 85: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,A2,Out):3
     [Z1+X1>=V,V>=X1+1,Out>=Z1,X1>=0,Z1+X1=V+W1,Z1+X1=V1+V,Out=Z1+Y1,Out=Z1+A2] 
* CE 86: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)+ app(Z1,Y1,Out):4
     [Z1+X1>=V,V>=X1+1,Z1>=Out,X1>=0,Out>=1,Y1>=0,Z1+X1=V+W1,Z1+X1=V1+V] 

### Cost equations --> "Loop" of fun/3 
* CEs [85] --> Loop 40 
* CEs [86] --> Loop 41 
* CEs [84] --> Loop 42 
* CEs [82,83] --> Loop 43 

#### Loops of fun/3 
* Loop 40: fun(V1,V,Out)->  fun(V1,V',Out')
                  [Out+V'>=V1+V,V>=V'+1,V'>=0,V1>=0,V1+V+Out'=Out+V'] 
* Loop 41: fun(V1,V,Out)->  fun(V1,V',Out')
                  [V1+V>=Out+V',V>=V'+1,Out'>=0,V'>=0,Out>=1,V1>=0] 
* Loop 42: fun(V1,V,Out)->  fun(V1,V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=0,Out=0] 
* Loop 43: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [40,41,42]: [V]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [40,41,42]:
  - RF of loop [40:1,41:1,42:1]:
    V


### Resulting Chains:fun(V1,V,Out) 
* [[40,41,42],43]
* [43]


### Merging Chains  fun/3 into  External patterns of execution 
* [[43]] --> 1 
* [[43,[40,41,42]]] --> 2 


### Specialization of cost equations sndsplit/3 
* CE 46 is refined into CE [87] 
* CE 48 is refined into CE [88] 
* CE 45 is refined into CE [89] 
* CE 47 is refined into CE [90] 


#### Refined cost equations sndsplit/3 
* CE 87: sndsplit(V1,V,Out) = 1
     [V1>=1,Out=0,V=0] 
* CE 88: sndsplit(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 89: sndsplit(A,B,B) = 1
     [B>=0,A=0] 
* CE 90: sndsplit(V1,V,Out) = 1+ sndsplit(W1,X1,Out)
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 

### Cost equations --> "Loop" of sndsplit/3 
* CEs [90] --> Loop 44 
* CEs [87,88] --> Loop 45 
* CEs [89] --> Loop 46 

#### Loops of sndsplit/3 
* Loop 44: sndsplit(V1,V,Out)->  sndsplit(V1',V',Out)
                  [V>=V'+1,V'>=0,V1'>=0,V1'+1=V1] 
* Loop 45: sndsplit(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 46: sndsplit(A,B,B) [B>=0,A=0] 

### Ranking functions of CR sndsplit(V1,V,Out) 
* RF of phase [44]: [V,V1]

#### Partial ranking functions of CR sndsplit(V1,V,Out) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    V
    V1


### Resulting Chains:sndsplit(V1,V,Out) 
* [[44],46]
* [[44],45]
* [46]
* [45]


### Merging Chains  sndsplit/3 into  External patterns of execution 
* [[46]] --> 1 
* [[45],[45,[44]]] --> 2 
* [[46,[44]]] --> 3 


### Specialization of cost equations head/2 
* CE 28 is refined into CE [91] 
* CE 29 is refined into CE [92] 


#### Refined cost equations head/2 
* CE 91: head(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 92: head(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [91] --> Loop 47 
* CEs [92] --> Loop 48 

#### Loops of head/2 
* Loop 47: head(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 48: head(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR head(V1,Out) 

#### Partial ranking functions of CR head(V1,Out) 


### Resulting Chains:head(V1,Out) 
* [48]
* [47]


### Merging Chains  head/2 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


### Specialization of cost equations tail/2 
* CE 43 is refined into CE [93] 
* CE 44 is refined into CE [94] 


#### Refined cost equations tail/2 
* CE 93: tail(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 94: tail(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [93] --> Loop 49 
* CEs [94] --> Loop 50 

#### Loops of tail/2 
* Loop 49: tail(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 50: tail(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR tail(V1,Out) 

#### Partial ranking functions of CR tail(V1,Out) 


### Resulting Chains:tail(V1,Out) 
* [50]
* [49]


### Merging Chains  tail/2 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 


### Specialization of cost equations length/2 
* CE 69 is refined into CE [95] 
* CE 71 is refined into CE [96] 
* CE 70 is refined into CE [97] 


#### Refined cost equations length/2 
* CE 95: length(V1,Out) = 1
     [Out=0,V1=0] 
* CE 96: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 97: length(V1,Out) = 1+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [97] --> Loop 51 
* CEs [95,96] --> Loop 52 

#### Loops of length/2 
* Loop 51: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 52: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 
* RF of phase [51]: [V1]

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [51]:
  - RF of loop [51:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[51],52]
* [52]


### Merging Chains  length/2 into  External patterns of execution 
* [[52]] --> 1 
* [[52,[51]]] --> 2 


### Specialization of cost equations leq/3 
* CE 68 is refined into CE [98] 
* CE 66 is refined into CE [99] 
* CE 65 is refined into CE [100] 
* CE 67 is refined into CE [101] 


#### Refined cost equations leq/3 
* CE 98: leq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 99: leq(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 100: leq(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 101: leq(V1,V,Out) = 1+ leq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of leq/3 
* CEs [101] --> Loop 53 
* CEs [98] --> Loop 54 
* CEs [99] --> Loop 55 
* CEs [100] --> Loop 56 

#### Loops of leq/3 
* Loop 53: leq(V1,V,Out)->  leq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 54: leq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 55: leq(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 56: leq(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR leq(V1,V,Out) 
* RF of phase [53]: [V,V1]

#### Partial ranking functions of CR leq(V1,V,Out) 
* Partial RF of phase [53]:
  - RF of loop [53:1]:
    V
    V1


### Resulting Chains:leq(V1,V,Out) 
* [[53],56]
* [[53],55]
* [[53],54]
* [56]
* [55]
* [54]


### Merging Chains  leq/3 into  External patterns of execution 
* [[56]] --> 1 
* [[55]] --> 2 
* [[54],[54,[53]]] --> 3 
* [[55,[53]]] --> 4 
* [[56,[53]]] --> 5 

