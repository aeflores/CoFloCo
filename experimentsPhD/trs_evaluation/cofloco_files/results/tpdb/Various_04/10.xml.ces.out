
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [hd/2]
1. recursive  : [length/2]
2. recursive  : [minus/3]
3. recursive  : [quot/3]
4. recursive  : [plus/3]
5. recursive  : [sum/2]
6. non_recursive  : [avg/2]
7. recursive  : [fun/3]
8. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into hd/2
1. SCC is partially evaluated into length/2
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into quot/3
4. SCC is partially evaluated into plus/3
5. SCC is partially evaluated into sum/2
6. SCC is partially evaluated into avg/2
7. SCC is partially evaluated into fun/3
8. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations hd/2 
* CE 30 is refined into CE [32] 
* CE 31 is refined into CE [33] 


#### Refined cost equations hd/2 
* CE 32: hd(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 33: hd(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of hd/2 
* CEs [32] --> Loop 21 
* CEs [33] --> Loop 22 

#### Loops of hd/2 
* Loop 21: hd(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 22: hd(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR hd(V1,Out) 

#### Partial ranking functions of CR hd(V1,Out) 


### Resulting Chains:hd(V1,Out) 
* [22]
* [21]


### Merging Chains  hd/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations length/2 
* CE 18 is refined into CE [34] 
* CE 19 is refined into CE [35] 
* CE 17 is refined into CE [36] 


#### Refined cost equations length/2 
* CE 34: length(V1,Out) = 1
     [Out=0,V1=0] 
* CE 35: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 36: length(V1,Out) = 1+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [36] --> Loop 23 
* CEs [34,35] --> Loop 24 

#### Loops of length/2 
* Loop 23: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 24: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 
* RF of phase [23]: [V1]

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[23],24]
* [24]


### Merging Chains  length/2 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations minus/3 
* CE 15 is refined into CE [37] 
* CE 14 is refined into CE [38] 
* CE 16 is refined into CE [39] 
* CE 13 is refined into CE [40] 


#### Refined cost equations minus/3 
* CE 37: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 38: minus(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 39: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 40: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [40] --> Loop 25 
* CEs [37] --> Loop 26 
* CEs [38,39] --> Loop 27 

#### Loops of minus/3 
* Loop 25: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 26: minus(A,B,A) [A>=0,B=0] 
* Loop 27: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [25]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  minus/3 into  External patterns of execution 
* [[26]] --> 1 
* [[27],[27,[25]]] --> 2 
* [[26,[25]]] --> 3 


### Specialization of cost equations quot/3 
* CE 20 is refined into CE [41] 
* CE 22 is refined into CE [42] 
* CE 21 is refined into CE [43,44,45] 


#### Refined cost equations quot/3 
* CE 41: quot(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 42: quot(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 43: quot(V1,V,Out) = 1+ minus(W1,X1,W1):1+ quot(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 44: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ quot(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 45: quot(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ quot(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of quot/3 
* CEs [45] --> Loop 28 
* CEs [44] --> Loop 29 
* CEs [43] --> Loop 30 
* CEs [41,42] --> Loop 31 

#### Loops of quot/3 
* Loop 28: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 29: quot(V1,V,Out)->  quot(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 30: quot(V1,V,Out)->  quot(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 31: quot(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR quot(V1,V,Out) 
* RF of phase [28]: [V1-1,V1-V+1]
* RF of phase [30]: [V1]

#### Partial ranking functions of CR quot(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V1-1
    V1-V+1
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V1


### Resulting Chains:quot(V1,V,Out) 
* [[30],31]
* [[30],29,31]
* [[28],31]
* [[28],29,31]
* [31]
* [29,31]


### Merging Chains  quot/3 into  External patterns of execution 
* [[31,29,[30]],[31,[30]]] --> 1 
* [[31]] --> 2 
* [[31,29]] --> 3 
* [[31,[28]]] --> 4 
* [[31,29,[28]]] --> 5 


### Specialization of cost equations plus/3 
* CE 26 is refined into CE [46] 
* CE 25 is refined into CE [47] 
* CE 24 is refined into CE [48] 


#### Refined cost equations plus/3 
* CE 46: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 47: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 48: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [48] --> Loop 32 
* CEs [46] --> Loop 33 
* CEs [47] --> Loop 34 

#### Loops of plus/3 
* Loop 32: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 33: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 34: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [32]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[32],34]
* [[32],33]
* [34]
* [33]


### Merging Chains  plus/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 
* [[34,[32]]] --> 3 
* [[33,[32]]] --> 4 


### Specialization of cost equations sum/2 
* CE 28 is refined into CE [49] 
* CE 29 is refined into CE [50] 
* CE 27 is refined into CE [51,52,53,54] 


#### Refined cost equations sum/2 
* CE 49: sum(A,A) = 1
     [A>=1] 
* CE 50: sum(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 51: sum(V1,Out) = 1+ plus(W1,X1,X1):1+ sum(Y1,Out)
     [Y1>=X1+1,X1>=0,Y1+1=V1,W1=0] 
* CE 52: sum(V1,Out) = 1+ plus(W1,X1,Y1):2+ sum(Z1,Out)
     [Z1>=1,X1>=0,W1>=0,W1+X1+Z1+1=V1,Y1=0] 
* CE 53: sum(V1,Out) = 1+ plus(W1,X1,Y1):3+ sum(Z1,Out)
     [Z1>=Y1+1,Y1>=W1,W1>=1,Y1=W1+X1,Z1+1=V1] 
* CE 54: sum(V1,Out) = 1+ plus(W1,X1,Y1):4+ sum(Z1,Out)
     [Z1>=Y1+1,W1>=Y1,Y1>=1,X1>=0,W1+X1+Z1+1=V1+Y1] 

### Cost equations --> "Loop" of sum/2 
* CEs [51,52,53,54] --> Loop 35 
* CEs [49] --> Loop 36 
* CEs [50] --> Loop 37 

#### Loops of sum/2 
* Loop 35: sum(V1,Out)->  sum(V1',Out)
                  [V1>=V1'+1,V1'>=1] 
* Loop 36: sum(A,A) [A>=1] 
* Loop 37: sum(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR sum(V1,Out) 
* RF of phase [35]: [V1-1]

#### Partial ranking functions of CR sum(V1,Out) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V1-1


### Resulting Chains:sum(V1,Out) 
* [[35],37]
* [[35],36]
* [37]
* [36]


### Merging Chains  sum/2 into  External patterns of execution 
* [[37],[37,[35]]] --> 1 
* [[36]] --> 2 
* [[36,[35]]] --> 3 


### Specialization of cost equations avg/2 
* CE 23 is refined into CE [55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72] 


#### Refined cost equations avg/2 
* CE 55: avg(V1,Out) = 1+ sum(V1,W1):1+ hd(X1,Y1):1+ length(V1,Z1):1+ quot(A2,B2,C2):2
     [V1>=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 56: avg(V1,Out) = 1+ sum(V1,W1):1+ hd(X1,Y1):1+ length(V1,Z1):2+ quot(A2,Z1,B2):2
     [V1>=Z1,Z1>=1,B2=0,A2=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 57: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):1+ length(V1,X1):1+ quot(Y1,Z1,A2):2
     [V1>=1,A2=0,Z1=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 58: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):1+ length(V1,X1):2+ quot(Y1,X1,Z1):2
     [V1>=X1,X1>=1,Z1=0,Y1=0,W1=0,Out=0] 
* CE 59: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):1+ quot(W1,Y1,Z1):2
     [V1>=W1+1,W1>=0,Z1=0,Y1=0,X1=0,Out=0] 
* CE 60: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):2+ quot(W1,Y1,Out):1
     [W1>=Out,V1>=W1+1,Out>=1,Y1=1,X1=1] 
* CE 61: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):2+ quot(W1,X1,Y1):2
     [V1>=X1,V1>=W1+1,X1>=1,W1>=0,Y1=0,Out=0] 
* CE 62: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):2+ quot(W1,X1,Y1):3
     [V1>=X1,V1>=W1+1,X1>=1,W1>=1,Y1=1,Out=1] 
* CE 63: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):2+ quot(W1,X1,Out):4
     [W1+2>=2*Out+X1,V1>=W1+1,Out>=1,X1>=2] 
* CE 64: avg(V1,Out) = 1+ sum(V1,V1):2+ hd(V1,W1):2+ length(V1,X1):2+ quot(W1,X1,Out):5
     [W1+3>=2*Out+X1,V1>=W1+1,Out>=2,X1>=2] 
* CE 65: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):1+ length(V1,Y1):1+ quot(Z1,A2,B2):2
     [V1>=W1+1,W1>=1,B2=0,A2=0,Z1=0,Y1=0,X1=0,Out=0] 
* CE 66: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):1+ length(V1,Y1):2+ quot(Z1,Y1,A2):2
     [V1>=Y1,V1>=W1+1,Y1>=1,W1>=1,A2=0,Z1=0,X1=0,Out=0] 
* CE 67: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):1+ quot(X1,Z1,A2):2
     [W1>=X1+1,V1>=W1+1,X1>=0,A2=0,Z1=0,Y1=0,Out=0] 
* CE 68: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):2+ quot(X1,Z1,Out):1
     [X1>=Out,W1>=X1+1,V1>=W1+1,Out>=1,Z1=1,Y1=1] 
* CE 69: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):2+ quot(X1,Y1,Z1):2
     [V1>=Y1,W1>=X1+1,V1>=W1+1,Y1>=1,X1>=0,Z1=0,Out=0] 
* CE 70: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):2+ quot(X1,Y1,Z1):3
     [V1>=Y1,W1>=X1+1,V1>=W1+1,Y1>=1,X1>=1,Z1=1,Out=1] 
* CE 71: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):2+ quot(X1,Y1,Out):4
     [X1+2>=2*Out+Y1,W1>=X1+1,V1>=W1+1,Out>=1,Y1>=2] 
* CE 72: avg(V1,Out) = 1+ sum(V1,W1):3+ hd(W1,X1):2+ length(V1,Y1):2+ quot(X1,Y1,Out):5
     [X1+3>=2*Out+Y1,W1>=X1+1,V1>=W1+1,Out>=2,Y1>=2] 

### Cost equations --> "Loop" of avg/2 
* CEs [63,71] --> Loop 38 
* CEs [60,62,64,68,70,72] --> Loop 39 
* CEs [55,56,57,58,59,61,65,66,67,69] --> Loop 40 

#### Loops of avg/2 
* Loop 38: avg(V1,Out) [V1>=2*Out+1,Out>=1] 
* Loop 39: avg(V1,Out) [V1>=Out+1,Out>=1] 
* Loop 40: avg(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR avg(V1,Out) 

#### Partial ranking functions of CR avg(V1,Out) 


### Resulting Chains:avg(V1,Out) 
* [40]
* [39]
* [38]


### Merging Chains  avg/2 into  External patterns of execution 
* [[40]] --> 1 
* [[38],[39]] --> 2 


### Specialization of cost equations fun/3 
* CE 12 is refined into CE [73] 
* CE 11 is refined into CE [74] 
* CE 10 is refined into CE [75] 


#### Refined cost equations fun/3 
* CE 73: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 74: fun(A,B,B) = 1
     [B>=0,A=0] 
* CE 75: fun(V1,V,Out) = 1+ fun(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of fun/3 
* CEs [75] --> Loop 41 
* CEs [73] --> Loop 42 
* CEs [74] --> Loop 43 

#### Loops of fun/3 
* Loop 41: fun(V1,V,Out)->  fun(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 42: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 43: fun(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [41]: [V1]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    V1


### Resulting Chains:fun(V1,V,Out) 
* [[41],43]
* [[41],42]
* [43]
* [42]


### Merging Chains  fun/3 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 
* [[43,[41]]] --> 3 
* [[42,[41]]] --> 4 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [76,77,78,79] 
* CE 3 is refined into CE [80,81,82] 
* CE 4 is refined into CE [83,84] 
* CE 5 is refined into CE [85,86,87,88,89] 
* CE 6 is refined into CE [90,91] 
* CE 7 is refined into CE [92,93,94,95] 
* CE 8 is refined into CE [96,97,98] 
* CE 9 is refined into CE [99,100] 


#### Refined cost equations start/2 
* CE 76: start(V1,V) = 0+ fun(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 77: start(V1,V) = 0+ fun(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 78: start(V1,V) = 0+ fun(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 79: start(V1,V) = 0+ fun(V1,V,W1):4
     [V1>=W1,W1>=1,V>=0] 
* CE 80: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 81: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 82: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 
* CE 83: start(V1,V) = 0+ length(V1,W1):1
     [V1>=0,W1=0] 
* CE 84: start(V1,V) = 0+ length(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 85: start(V1,V) = 0+ quot(V1,W1,X1):1
     [V1>=X1,X1>=1,W1=1,V=1] 
* CE 86: start(V1,V) = 0+ quot(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 87: start(V1,V) = 0+ quot(V1,V,W1):3
     [V>=1,V1>=1,W1=1] 
* CE 88: start(V1,V) = 0+ quot(V1,V,W1):4
     [V1+2>=2*W1+V,W1>=1,V>=2] 
* CE 89: start(V1,V) = 0+ quot(V1,V,W1):5
     [V1+3>=2*W1+V,W1>=2,V>=2] 
* CE 90: start(V1,V) = 0+ avg(V1,W1):1
     [V1>=0,W1=0] 
* CE 91: start(V1,V) = 0+ avg(V1,W1):2
     [V1>=W1+1,W1>=1] 
* CE 92: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 93: start(V1,V) = 0+ plus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 94: start(V1,V) = 0+ plus(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 95: start(V1,V) = 0+ plus(V1,V,W1):4
     [V1>=W1,W1>=1,V>=0] 
* CE 96: start(V1,V) = 0+ sum(V1,W1):1
     [V1>=0,W1=0] 
* CE 97: start(V1,V) = 0+ sum(V1,V1):2
     [V1>=1] 
* CE 98: start(V1,V) = 0+ sum(V1,W1):3
     [V1>=W1+1,W1>=1] 
* CE 99: start(V1,V) = 0+ hd(V1,W1):1
     [V1>=0,W1=0] 
* CE 100: start(V1,V) = 0+ hd(V1,W1):2
     [V1>=W1+1,W1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [85] --> Loop 44 
* CEs [80] --> Loop 45 
* CEs [76,77,78,79,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100] --> Loop 46 

#### Loops of start/2 
* Loop 44: start(V1,V) [V1>=1,V=1] 
* Loop 45: start(V1,V) [V1>=0,V=0] 
* Loop 46: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [46]
* [45]
* [44]


### Merging Chains  start/2 into  External patterns of execution 
* [[45],[46]] --> 1 
* [[44]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of hd(V1,Out):
* Chain [22]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [21]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of loops [23] 

 * loop 23:length(V1,Out) -> [length(V1',Out')] 
1
#### Cost of phase [23]:length(V1,Out) -> [length(V1',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'

#### Cost of chains of length(V1,Out):
* Chain [[23],24]: 1*it(23)+1
  Such that:it(23) =< V1

  with precondition: [Out>=1,V1>=Out] 

* Chain [24]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [25] 

 * loop 25:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[25],26]: 1*it(25)+1
  Such that:it(25) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [27]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [26]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [30] 

 * loop 30:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2
#### Cost of phase [30]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of phase [30]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'

#### Cost of loops [28] 

 * loop 28:quot(V1,V,Out) -> [quot(V1',V',Out')] 
1*s(4)+2
  Such that:s(4) =< V'

#### Cost of phase [28]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(28)+1*s(5)+0
  Such that:it(28) =< V1-V+1
it(28) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(28) =< aux(1)
s(5) =< aux(1)
it(28) =< aux(2)
s(5) =< aux(2)

#### Cost of phase [28]:quot(V1,V,Out) -> [quot(V1',V',Out')] 
2*it(28)+1*s(5)+0
  Such that:it(28) =< V1-V+1
it(28) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(28) =< aux(1)
s(5) =< aux(1)
it(28) =< aux(2)
s(5) =< aux(2)

#### Cost of chains of quot(V1,V,Out):
* Chain [[30],31]: 2*it(30)+1
  Such that:it(30) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[30],29,31]: 2*it(30)+1*s(2)+3
  Such that:s(2) =< 1
it(30) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[28],31]: 2*it(28)+1*s(5)+1
  Such that:it(28) =< V1-V+1
aux(3) =< V1
it(28) =< aux(3)
s(5) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[28],29,31]: 2*it(28)+1*s(2)+1*s(5)+3
  Such that:it(28) =< V1-V+1
s(2) =< V
aux(4) =< V1
it(28) =< aux(4)
s(5) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [31]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [29,31]: 1*s(2)+3
  Such that:s(2) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of loops [32] 

 * loop 32:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [32]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(32)+0
  Such that:it(32) =< V1
it(32) =< V1-V1'

#### Cost of phase [32]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(32)+0
  Such that:it(32) =< V1
it(32) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[32],34]: 1*it(32)+1
  Such that:it(32) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [34]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [33]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [35] 

 * loop 35:sum(V1,Out) -> [sum(V1',Out')] 
2*s(12)+2
  Such that:s(11) =< V1'
s(12) =< s(11)

#### Cost of phase [35]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(35)+2*s(13)+0
  Such that:it(35) =< V1-V1'
aux(8) =< V1
it(35) =< aux(8)
s(14) =< it(35)*aux(8)
s(13) =< s(14)

#### Cost of phase [35]:sum(V1,Out) -> [sum(V1',Out')] 
2*it(35)+2*s(13)+0
  Such that:it(35) =< V1-V1'
aux(8) =< V1
it(35) =< aux(8)
s(14) =< it(35)*aux(8)
s(13) =< s(14)

#### Cost of chains of sum(V1,Out):
* Chain [[35],37]: 2*it(35)+2*s(13)+0
  Such that:aux(9) =< V1
it(35) =< aux(9)
s(14) =< it(35)*aux(9)
s(13) =< s(14)

  with precondition: [Out=0,V1>=2] 

* Chain [[35],36]: 2*it(35)+2*s(13)+1
  Such that:aux(8) =< V1
it(35) =< V1-Out
it(35) =< aux(8)
s(14) =< it(35)*aux(8)
s(13) =< s(14)

  with precondition: [Out>=1,V1>=Out+1] 

* Chain [37]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [36]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of avg(V1,Out):
* Chain [40]: 17*s(20)+12*s(22)+5
  Such that:aux(15) =< V1
s(20) =< aux(15)
s(21) =< s(20)*aux(15)
s(22) =< s(21)

  with precondition: [Out=0,V1>=0] 

* Chain [39]: 30*s(48)+2*s(49)+6*s(62)+7
  Such that:aux(22) =< 1
aux(23) =< V1
s(49) =< aux(22)
s(48) =< aux(23)
s(61) =< s(48)*aux(23)
s(62) =< s(61)

  with precondition: [Out>=1,V1>=Out+1] 

* Chain [38]: 10*s(82)+2*s(89)+5
  Such that:aux(26) =< V1
s(82) =< aux(26)
s(88) =< s(82)*aux(26)
s(89) =< s(88)

  with precondition: [Out>=1,V1>=2*Out+1] 


#### Cost of loops [41] 

 * loop 41:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [41]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(41)+0
  Such that:it(41) =< V1
it(41) =< V1-V1'

#### Cost of phase [41]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(41)+0
  Such that:it(41) =< V1
it(41) =< V1-V1'

#### Cost of chains of fun(V1,V,Out):
* Chain [[41],43]: 1*it(41)+1
  Such that:it(41) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[41],42]: 1*it(41)+0
  Such that:it(41) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [43]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [42]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [46]: 68*s(104)+4*s(106)+4*s(110)+24*s(120)+2*s(123)+7
  Such that:s(121) =< 1
aux(29) =< V1
aux(30) =< V1-V+1
aux(31) =< V
s(104) =< aux(29)
s(110) =< aux(30)
s(106) =< aux(31)
s(123) =< s(121)
s(119) =< s(104)*aux(29)
s(120) =< s(119)
s(110) =< aux(29)

  with precondition: [V1>=0] 

* Chain [45]: 1
  with precondition: [V=0,V1>=0] 

* Chain [44]: 1*s(137)+4*s(139)+3
  Such that:s(137) =< 1
s(138) =< V1
s(139) =< s(138)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [46] with precondition: [V1>=0] 
    - Upper bound: 68*V1+9+24*V1*V1+nat(V)*4+nat(V1-V+1)*4 
    - Complexity: n^2 
* Chain [45] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [44] with precondition: [V=1,V1>=1] 
    - Upper bound: 4*V1+4 
    - Complexity: n 

### Maximum cost of start(V1,V): 64*V1+5+24*V1*V1+nat(V)*4+nat(V1-V+1)*4+ (4*V1+3)+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 52 ms.
* Invariants computed in 154 ms.
   - Backward Invariants 86 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 442 ms.
* Termination proved in 34 ms.
* Upper bounds computed in 442 ms.
   - Equation cost structures 243 ms.
   - Phase cost structures 95 ms.
   - Chain cost structures 100 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 1239 ms.

