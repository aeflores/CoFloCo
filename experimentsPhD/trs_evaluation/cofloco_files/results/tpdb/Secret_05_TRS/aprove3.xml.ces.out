
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [function/5]
1. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into function/5
1. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations function/5 
* CE 11 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 8 is refined into CE [21] 
* CE 7 is refined into CE [22] 


#### Refined cost equations function/5 
* CE 13: function(A,B,C,D,D) = 1
     [D>=0,C>=0,B>=0,A=4] 
* CE 14: function(V,V1,V5,V4,Out) = 1
     [V4>=0,V5>=0,Out=0,V1=1,V=2] 
* CE 15: function(V,V1,V5,V4,Out) = 1
     [V4>=0,V5>=0,Out=0,V1=0,V=2] 
* CE 16: function(V,V1,V5,V4,Out) = 0
     [V4>=0,V5>=0,V1>=0,V>=0,Out=0] 
* CE 17: function(V,V1,V5,V4,Out) = 1
     [V4>=0,V5>=0,V1>=1,Out=1,V=1] 
* CE 18: function(V,V1,V5,V4,Out) = 1
     [V4>=0,V5>=0,Out=2,V1=0,V=1] 
* CE 19: function(A,B,C,D,D) = 1
     [D>=0,C>=0,B=2,A=0] 
* CE 20: function(V,V1,V5,V4,Out) = 1+ function(W5,V5,V4,V4,X5)+ function(Y5,V5,V5,V4,Z5)+ function(A6,X5,Z5,B6,Out)
     [V4>=0,V5>=0,V4+1=B6,A6=3,Y5=2,W5=4,V1=1,V=0] 
* CE 21: function(V,V1,V5,V4,Out) = 1+ function(W5,V5,V5,V5,X5)+ function(Y5,X5,V5,V4,Out)
     [V4>=0,V5>=0,V1>=0,Y5=0,W5=1,V=3] 
* CE 22: function(V,V1,V5,V4,Out) = 1+ function(W5,X5,Y5,Y5,Z5)
     [Y5>=0,V4>=0,V5>=0,Y5+1=X5,Z5+1=Out,Y5+2=V1,W5=2,V=2] 

### Cost equations --> "Loop" of function/5 
* CEs [22] --> Loop 11 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15,16] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of function/5 
* Loop 11: function(V,V1,V5,V4,Out)->  function(A',B',C',C',D')
                  [C'>=0,V4>=0,V5>=0,Out=D'+1,C'+1=B',C'+2=V1,A'=2,V=2] 
* Loop 12: function(V,V1,V5,V4,Out)->  function(A',V5,V5,V5,B')  function(A'2,B',V5,V4,Out)
                  [V4>=0,V5>=0,V1>=0,A'2=0,A'=1,V=3] 
* Loop 13: function(V,V1,V5,V4,Out)->  function(A',V5,V4,V4,B')  function(A'2,V5,V5,V4,B'2)  function(A'3,B',B'2,B'3,Out)
                  [V4>=0,V5>=0,V4+1=B'3,A'3=3,A'2=2,A'=4,V1=1,V=0] 
* Loop 14: function(A,B,C,D,D) [D>=0,C>=0,B>=0,A=4] 
* Loop 15: function(V,V1,V5,V4,Out) [V4>=0,V5>=0,Out=0,V1=1,V=2] 
* Loop 16: function(V,V1,V5,V4,Out) [V4>=0,V5>=0,V1>=0,V>=0,Out=0] 
* Loop 17: function(V,V1,V5,V4,Out) [V4>=0,V5>=0,V1>=1,Out=1,V=1] 
* Loop 18: function(V,V1,V5,V4,Out) [V4>=0,V5>=0,Out=2,V1=0,V=1] 
* Loop 19: function(A,B,C,D,D) [D>=0,C>=0,B=2,A=0] 

### Ranking functions of CR function(V,V1,V5,V4,Out) 
* RF of phase [11]: [V1-1]

#### Partial ranking functions of CR function(V,V1,V5,V4,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V1-1
* Partial RF of phase [12,13]:
  - RF of loop [12:1]:
    V/2-1 depends on loops [13:1,13:2,13:3] 
  - RF of loop [12:2]:
    V-2 depends on loops [13:1,13:2,13:3] 
  - RF of loop [13:1]:
    -V/4+1/4 depends on loops [12:1,12:2] 
  - RF of loop [13:2]:
    -V/2+1/2 depends on loops [12:1,12:2] 
  - RF of loop [13:3]:
    -V/3+1/3 depends on loops [12:1,12:2] 


### Resulting Chains:function(V,V1,V5,V4,Out) 
* [[11],16]
* [[11],15]
* [19]
* [18]
* [17]
* [16]
* [15]
* [14]
* [multiple([12,13],[[],[[11],16],[[11],15],[19],[18],[17],[16],[15],[14]])]...


### Merging Chains  function/5 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 
* [[15],[16]] --> 4 
* [[15,[11]],[16,[11]]] --> 5 
* [[14]] --> 6 
* [[multiple([12,13],[[],[[11],16],[[11],15],[19],[18],[17],[16],[15],[14]])]] --> 7 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [23,24,25,26,27,28,29] 


#### Refined cost equations start/4 
* CE 23: start(V,V1,V5,V4) = 0+ function(W5,X5,V5,V4,V4):1
     [V4>=0,V5>=0,X5=2,W5=0,V1=2,V=0] 
* CE 24: start(V,V1,V5,V4) = 0+ function(W5,X5,V5,V4,Y5):2
     [V4>=0,V5>=0,Y5=2,X5=0,W5=1,V1=0,V=1] 
* CE 25: start(V,V1,V5,V4) = 0+ function(W5,V1,V5,V4,X5):3
     [V4>=0,V5>=0,V1>=1,X5=1,W5=1,V=1] 
* CE 26: start(V,V1,V5,V4) = 0+ function(V,V1,V5,V4,W5):4
     [V4>=0,V5>=0,V1>=0,V>=0,W5=0] 
* CE 27: start(V,V1,V5,V4) = 0+ function(W5,V1,V5,V4,X5):5
     [V1>=X5+1,X5>=1,V4>=0,V5>=0,W5=2,V=2] 
* CE 28: start(V,V1,V5,V4) = 0+ function(W5,V1,V5,V4,V4):6
     [V4>=0,V5>=0,V1>=0,W5=4,V=4] 
* CE 29: start(V,V1,V5,V4) = 0+ function(V,V1,V5,V4,W5):7
     [V+3*V1>=3,V4>=0,V5>=0,V>=0,3>=V] 

### Cost equations --> "Loop" of start/4 
* CEs [29] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [23,26] --> Loop 25 

#### Loops of start/4 
* Loop 20: start(V,V1,V5,V4) [V+3*V1>=3,V4>=0,V5>=0,V>=0,3>=V] 
* Loop 21: start(V,V1,V5,V4) [V4>=0,V5>=0,V1>=0,V=4] 
* Loop 22: start(V,V1,V5,V4) [V4>=0,V5>=0,V1>=2,V=2] 
* Loop 23: start(V,V1,V5,V4) [V4>=0,V5>=0,V1>=1,V=1] 
* Loop 24: start(V,V1,V5,V4) [V4>=0,V5>=0,V1=0,V=1] 
* Loop 25: start(V,V1,V5,V4) [V4>=0,V5>=0,V1>=0,V>=0] 

### Ranking functions of CR start(V,V1,V5,V4) 

#### Partial ranking functions of CR start(V,V1,V5,V4) 


### Resulting Chains:start(V,V1,V5,V4) 
* [25]
* [24]
* [23]
* [22]
* [21]
* [20]...


### Merging Chains  start/4 into  External patterns of execution 
* [[24],[25]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 
* [[21]] --> 4 
* [[20]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:function(V,V1,V5,V4,Out) -> [function(V',V1',V5',V4',Out')] 
1
#### Cost of phase [11]:function(V,V1,V5,V4,Out) -> [function(V',V1',V5',V4',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of phase [11]:function(V,V1,V5,V4,Out) -> [function(V',V1',V5',V4',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'

#### Cost of loops [12,13] 

 * loop 12:function(V,V1,V5,V4,Out) -> [function(V',V1',V5',V4',Out'),function(V'2,V1'2,V5'2,V4'2,Out'2)] 
1
 * loop 13:function(V,V1,V5,V4,Out) -> [function(V',V1',V5',V4',Out'),function(V'2,V1'2,V5'2,V4'2,Out'2),function(V'3,V1'3,V5'3,V4'3,Out'3)] 
1
#### Cost of phase [12,13]:function(V,V1,V5,V4,Out) -> [] 
12*it(12)+0
#### Cost of chains of function(V,V1,V5,V4,Out):
* Chain [[11],16]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V=2,V5>=0,V4>=0,Out>=1,V1>=Out+1] 

* Chain [[11],15]: 1*it(11)+1
  Such that:it(11) =< Out

  with precondition: [V=2,V1=Out+1,V1>=2,V5>=0,V4>=0] 

* Chain [19]: 1
  with precondition: [V=0,V1=2,V4=Out,V5>=0,V4>=0] 

* Chain [18]: 1
  with precondition: [V=1,V1=0,Out=2,V5>=0,V4>=0] 

* Chain [17]: 1
  with precondition: [V=1,Out=1,V1>=1,V5>=0,V4>=0] 

* Chain [16]: 1
  with precondition: [Out=0,V>=0,V1>=0,V5>=0,V4>=0] 

* Chain [15]: 1
  with precondition: [V=2,V1=1,Out=0,V5>=0,V4>=0] 

* Chain [14]: 1
  with precondition: [V=4,V4=Out,V1>=0,V5>=0,V4>=0] 

* Chain [multiple([12,13],[[],[[11],16],[[11],15],[19],[18],[17],[16],[15],[14]])]...: 12*it(12)+0
  with precondition: [V4>=0,V5>=0,V+3*V1>=3,3>=V,V>=0] 


#### Cost of chains of start(V,V1,V5,V4):
* Chain [25]: 1
  with precondition: [V>=0,V1>=0,V5>=0,V4>=0] 

* Chain [24]: 1
  with precondition: [V=1,V1=0,V5>=0,V4>=0] 

* Chain [23]: 1
  with precondition: [V=1,V1>=1,V5>=0,V4>=0] 

* Chain [22]: 2*s(6)+1
  Such that:s(5) =< V1
s(6) =< s(5)

  with precondition: [V=2,V1>=2,V5>=0,V4>=0] 

* Chain [21]: 1
  with precondition: [V=4,V1>=0,V5>=0,V4>=0] 

* Chain [20]...: 12*s(7)+0
  with precondition: [3>=V,V>=0,V5>=0,V4>=0,V+3*V1>=3] 


Closed-form bounds of start(V,V1,V5,V4): 
-------------------------------------
* Chain [25] with precondition: [V>=0,V1>=0,V5>=0,V4>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [24] with precondition: [V=1,V1=0,V5>=0,V4>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [23] with precondition: [V=1,V1>=1,V5>=0,V4>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [22] with precondition: [V=2,V1>=2,V5>=0,V4>=0] 
    - Upper bound: 2*V1+1 
    - Complexity: n 
* Chain [21] with precondition: [V=4,V1>=0,V5>=0,V4>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20]... with precondition: [3>=V,V>=0,V5>=0,V4>=0,V+3*V1>=3] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V5,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 72 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 129 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 108 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 310 ms.

