
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [plus/3]
1. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into plus/3
1. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations plus/3 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


#### Refined cost equations plus/3 
* CE 5: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 6: plus(V1,V,Out) = 1+ plus(W1,X1,Y1)+ plus(Y1,V,Out)
     [V>=0,X1=1,W1=0,V1=1] 

### Cost equations --> "Loop" of plus/3 
* CEs [6] --> Loop 4 
* CEs [5] --> Loop 5 

#### Loops of plus/3 
* Loop 4: plus(V1,V,Out)->  plus(V1',V',Out')  plus(Out',V,Out)
                  [V>=0,V'=1,V1'=0,V1=1] 
* Loop 5: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [4]:
  - RF of loop [4:1]:
    V1 depends on loops [4:2] 


### Resulting Chains:plus(V1,V,Out) 
* [multiple([4],[[],[5]])]...
* [5]


### Merging Chains  plus/3 into  External patterns of execution 
* [[5]] --> 1 
* [[multiple([4],[[],[5]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [7,8] 


#### Refined cost equations start/2 
* CE 7: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 8: start(V1,V) = 0+ plus(W1,V,X1):2
     [V>=0,W1=1,V1=1] 

### Cost equations --> "Loop" of start/2 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of start/2 
* Loop 6: start(V1,V) [V>=0,V1=1] 
* Loop 7: start(V1,V) [V>=0,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [7]
* [6]...


### Merging Chains  start/2 into  External patterns of execution 
* [[7]] --> 1 
* [[6]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [4] 

 * loop 4:plus(V1,V,Out) -> [plus(V1',V',Out'),plus(V1'2,V'2,Out'2)] 
1
#### Cost of phase [4]:plus(V1,V,Out) -> [] 
1*it(4)+1*it([5])+0
#### Cost of chains of plus(V1,V,Out):
* Chain [multiple([4],[[],[5]])]...: 1*it(4)+1*it([5])+0
  with precondition: [V1=1,V>=0] 

* Chain [5]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [7]: 1
  with precondition: [V1=0,V>=0] 

* Chain [6]...: 2*s(1)+0
  with precondition: [V1=1,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [7] with precondition: [V1=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [6]... with precondition: [V1=1,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 32 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 32 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 132 ms.

