
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
1. non_recursive  : [fun1/1]
2. recursive [multiple] : [fun2/1,fun3/2,fun4/2,fun5/2,mark/2]
3. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/1
1. SCC is partially evaluated into fun1/1
2. SCC is partially evaluated into mark/2
3. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/1 
* CE 22 is refined into CE [24] 
* CE 23 is refined into CE [25] 


#### Refined cost equations fun/1 
* CE 24: fun(Out) = 1
     [Out=3] 
* CE 25: fun(Out) = 1
     [Out=1] 

### Cost equations --> "Loop" of fun/1 
* CEs [24] --> Loop 15 
* CEs [25] --> Loop 16 

#### Loops of fun/1 
* Loop 15: fun(Out) [Out=3] 
* Loop 16: fun(Out) [Out=1] 

### Ranking functions of CR fun(Out) 

#### Partial ranking functions of CR fun(Out) 


### Resulting Chains:fun(Out) 
* [16]
* [15]


### Merging Chains  fun/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations fun1/1 
* CE 9 is refined into CE [26] 
* CE 10 is refined into CE [27] 


#### Refined cost equations fun1/1 
* CE 26: fun1(Out) = 1
     [Out=5] 
* CE 27: fun1(Out) = 1
     [Out=4] 

### Cost equations --> "Loop" of fun1/1 
* CEs [26] --> Loop 17 
* CEs [27] --> Loop 18 

#### Loops of fun1/1 
* Loop 17: fun1(Out) [Out=5] 
* Loop 18: fun1(Out) [Out=4] 

### Ranking functions of CR fun1(Out) 

#### Partial ranking functions of CR fun1(Out) 


### Resulting Chains:fun1(Out) 
* [18]
* [17]


### Merging Chains  fun1/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations mark/2 
* CE 14 is refined into CE [28] 
* CE 20 is refined into CE [29] 
* CE 12 is refined into CE [30,31] 
* CE 18 is refined into CE [32,33] 
* CE 11 is refined into CE [34] 
* CE 13 is refined into CE [35,36] 
* CE 21 is refined into CE [37] 
* CE 17 is refined into CE [38,39] 
* CE 19 is refined into CE [40] 
* CE 15 is refined into CE [41] 
* CE 16 is refined into CE [42] 


#### Refined cost equations mark/2 
* CE 28: mark(V,Out) = 2+ mark(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 29: mark(V,Out) = 1+ mark(W,X)
     [V+X>=Out,Out>=X+1,V+X=Out+W] 
* CE 30: mark(V,Out) = 3+ fun1(W):1+ mark(X,Y)
     [Out>=Y+3,Y+6>=Out,Y+6=Out+X,W=4,V=3] 
* CE 31: mark(V,Out) = 3+ fun1(W):2+ mark(X,Y)
     [Out>=Y+3,Y+7>=Out,Y+7=Out+X,W=5,V=3] 
* CE 32: mark(V,Out) = 1+ fun1(W):1
     [W=4,Out=4,V=4] 
* CE 33: mark(V,Out) = 1+ fun1(W):2
     [W=5,Out=5,V=4] 
* CE 34: mark(V,Out) = 2
     [Out=3,V=3] 
* CE 35: mark(V,Out) = 3+ fun1(W):1
     [W=4,Out=5,V=3] 
* CE 36: mark(V,Out) = 3+ fun1(W):2
     [W=5,Out=6,V=3] 
* CE 37: mark(V,Out) = 1
     [Out=2,V=2] 
* CE 38: mark(V,Out) = 1+ fun(W):1
     [W=1,Out=1,V=1] 
* CE 39: mark(V,Out) = 1+ fun(W):2
     [W=3,Out=3,V=1] 
* CE 40: mark(V,Out) = 1
     [Out=0,V=0] 
* CE 41: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Z)
     [Out>=Z+3,Y>=0,W>=0,X+Z+2=Out+Y,W+1=V] 
* CE 42: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Out)
     [X>=Y+1,Y>=0,W>=0,W+1=V] 

### Cost equations --> "Loop" of mark/2 
* CEs [41] --> Loop 19 
* CEs [42] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [32] --> Loop 22 
* CEs [36] --> Loop 23 
* CEs [35] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [37] --> Loop 26 
* CEs [39] --> Loop 27 
* CEs [38] --> Loop 28 
* CEs [40] --> Loop 29 
* CEs [28,29] --> Loop 30 
* CEs [31] --> Loop 31 
* CEs [30] --> Loop 32 

#### Loops of mark/2 
* Loop 19: mark(V,Out)->  mark(V',Out')  mark(V'2,Out'2)
                  [Out'>=V'2+1,V'2>=0,V>=1,Out'+Out'2+2=Out+V'2,V=V'+1] 
* Loop 20: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [Out'>=V'2+1,V'2>=0,V>=1,V=V'+1] 
* Loop 21: mark(V,Out) [Out=5,V=4] 
* Loop 22: mark(V,Out) [Out=4,V=4] 
* Loop 23: mark(V,Out) [Out=6,V=3] 
* Loop 24: mark(V,Out) [Out=5,V=3] 
* Loop 25: mark(V,Out) [Out=3,V=3] 
* Loop 26: mark(V,Out) [Out=2,V=2] 
* Loop 27: mark(V,Out) [Out=3,V=1] 
* Loop 28: mark(V,Out) [Out=1,V=1] 
* Loop 29: mark(V,Out) [Out=0,V=0] 
* Loop 30: mark(V,Out)->  mark(V',Out')
                  [V>=V'+1,V'>=0,Out+V'=V+Out'] 
* Loop 31: mark(V,Out)->  mark(V',Out')
                  [V'>=0,4>=V',Out+V'=Out'+7,V=3] 
* Loop 32: mark(V,Out)->  mark(V',Out')
                  [V'>=0,3>=V',Out+V'=Out'+6,V=3] 

### Ranking functions of CR mark(V,Out) 

#### Partial ranking functions of CR mark(V,Out) 
* Partial RF of phase [19,20,30,31,32]:
  - RF of loop [19:1,20:1,30:1]:
    V depends on loops [19:2,20:2,31:1] 


### Resulting Chains:mark(V,Out) 
* [multiple([19,20,30,31,32],[[],[29],[28],[27],[26],[25],[24],[23],[22],[21]])]...
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]


### Merging Chains  mark/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 
* [[25]] --> 5 
* [[24]] --> 6 
* [[23]] --> 7 
* [[22]] --> 8 
* [[21]] --> 9 
* [[multiple([19,20,30,31,32],[[],[29],[28],[27],[26],[25],[24],[23],[22],[21]])]] --> 10 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [43] 
* CE 3 is refined into CE [44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61] 
* CE 4 is refined into CE [62,63] 
* CE 5 is refined into CE [64,65,66,67,68,69,70,71,72,73] 
* CE 6 is refined into CE [74,75] 
* CE 7 is refined into CE [76,77] 
* CE 8 is refined into CE [78,79,80,81,82,83,84,85,86,87] 


#### Refined cost equations start/1 
* CE 43: start(V) = 1
     [] 
* CE 44: start(V) = 2+ fun1(W):1+ mark(X,Y):1
     [Y=0,X=0,W=4] 
* CE 45: start(V) = 2+ fun1(W):1+ mark(X,Y):2
     [Y=1,X=1,W=4] 
* CE 46: start(V) = 2+ fun1(W):1+ mark(X,Y):3
     [Y=3,X=1,W=4] 
* CE 47: start(V) = 2+ fun1(W):1+ mark(X,Y):4
     [Y=2,X=2,W=4] 
* CE 48: start(V) = 2+ fun1(W):1+ mark(X,Y):5
     [Y=3,X=3,W=4] 
* CE 49: start(V) = 2+ fun1(W):1+ mark(X,Y):6
     [Y=5,X=3,W=4] 
* CE 50: start(V) = 2+ fun1(W):1+ mark(X,Y):7
     [Y=6,X=3,W=4] 
* CE 51: start(V) = 2+ fun1(W):1+ mark(X,Y):10
     [X>=1,3>=X,W=4] 
* CE 52: start(V) = 2+ fun1(W):2+ mark(X,Y):1
     [Y=0,X=0,W=5] 
* CE 53: start(V) = 2+ fun1(W):2+ mark(X,Y):2
     [Y=1,X=1,W=5] 
* CE 54: start(V) = 2+ fun1(W):2+ mark(X,Y):3
     [Y=3,X=1,W=5] 
* CE 55: start(V) = 2+ fun1(W):2+ mark(X,Y):4
     [Y=2,X=2,W=5] 
* CE 56: start(V) = 2+ fun1(W):2+ mark(X,Y):5
     [Y=3,X=3,W=5] 
* CE 57: start(V) = 2+ fun1(W):2+ mark(X,Y):6
     [Y=5,X=3,W=5] 
* CE 58: start(V) = 2+ fun1(W):2+ mark(X,Y):7
     [Y=6,X=3,W=5] 
* CE 59: start(V) = 2+ fun1(W):2+ mark(X,Y):8
     [Y=4,X=4,W=5] 
* CE 60: start(V) = 2+ fun1(W):2+ mark(X,Y):9
     [Y=5,X=4,W=5] 
* CE 61: start(V) = 2+ fun1(W):2+ mark(X,Y):10
     [X>=1,4>=X,W=5] 
* CE 62: start(V) = 2+ fun1(W):1
     [W=4] 
* CE 63: start(V) = 2+ fun1(W):2
     [W=5] 
* CE 64: start(V) = 1+ mark(W,X):1
     [V>=1,X=0,W=0] 
* CE 65: start(V) = 1+ mark(W,X):2
     [V>=2,X=1,W=1] 
* CE 66: start(V) = 1+ mark(W,X):3
     [V>=2,X=3,W=1] 
* CE 67: start(V) = 1+ mark(W,X):4
     [V>=3,X=2,W=2] 
* CE 68: start(V) = 1+ mark(W,X):5
     [V>=4,X=3,W=3] 
* CE 69: start(V) = 1+ mark(W,X):6
     [V>=4,X=5,W=3] 
* CE 70: start(V) = 1+ mark(W,X):7
     [V>=4,X=6,W=3] 
* CE 71: start(V) = 1+ mark(W,X):8
     [V>=5,X=4,W=4] 
* CE 72: start(V) = 1+ mark(W,X):9
     [V>=5,X=5,W=4] 
* CE 73: start(V) = 1+ mark(W,X):10
     [V>=W+1,W>=1] 
* CE 74: start(V) = 0+ fun(W):1
     [W=1] 
* CE 75: start(V) = 0+ fun(W):2
     [W=3] 
* CE 76: start(V) = 0+ fun1(W):1
     [W=4] 
* CE 77: start(V) = 0+ fun1(W):2
     [W=5] 
* CE 78: start(V) = 0+ mark(W,X):1
     [X=0,W=0,V=0] 
* CE 79: start(V) = 0+ mark(W,X):2
     [X=1,W=1,V=1] 
* CE 80: start(V) = 0+ mark(W,X):3
     [X=3,W=1,V=1] 
* CE 81: start(V) = 0+ mark(W,X):4
     [X=2,W=2,V=2] 
* CE 82: start(V) = 0+ mark(W,X):5
     [X=3,W=3,V=3] 
* CE 83: start(V) = 0+ mark(W,X):6
     [X=5,W=3,V=3] 
* CE 84: start(V) = 0+ mark(W,X):7
     [X=6,W=3,V=3] 
* CE 85: start(V) = 0+ mark(W,X):8
     [X=4,W=4,V=4] 
* CE 86: start(V) = 0+ mark(W,X):9
     [X=5,W=4,V=4] 
* CE 87: start(V) = 0+ mark(V,W):10
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [51,61,73,87] --> Loop 33 
* CEs [43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86] --> Loop 34 

#### Loops of start/1 
* Loop 33: start(V) [] 
* Loop 34: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [34]
* [33]...


### Merging Chains  start/1 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of fun(Out):
* Chain [16]: 1
  with precondition: [Out=1] 

* Chain [15]: 1
  with precondition: [Out=3] 


#### Cost of chains of fun1(Out):
* Chain [18]: 1
  with precondition: [Out=4] 

* Chain [17]: 1
  with precondition: [Out=5] 


#### Cost of loops [19,20,30,31,32] 

 * loop 19:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 20:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 30:mark(V,Out) -> [mark(V',Out')] 
2
 * loop 31:mark(V,Out) -> [mark(V',Out')] 
4
 * loop 32:mark(V,Out) -> [mark(V',Out')] 
4
#### Cost of phase [19,20,30,31,32]:mark(V,Out) -> [] 
12*it(19)+2*it(30)+19*it([21])+1*it([29])+0
#### Cost of chains of mark(V,Out):
* Chain [multiple([19,20,30,31,32],[[],[29],[28],[27],[26],[25],[24],[23],[22],[21]])]...: 12*it(19)+2*it(30)+19*it([21])+1*it([29])+0
  with precondition: [V>=1] 

* Chain [29]: 1
  with precondition: [V=0,Out=0] 

* Chain [28]: 2
  with precondition: [V=1,Out=1] 

* Chain [27]: 2
  with precondition: [V=1,Out=3] 

* Chain [26]: 1
  with precondition: [V=2,Out=2] 

* Chain [25]: 2
  with precondition: [V=3,Out=3] 

* Chain [24]: 4
  with precondition: [V=3,Out=5] 

* Chain [23]: 4
  with precondition: [V=3,Out=6] 

* Chain [22]: 2
  with precondition: [V=4,Out=4] 

* Chain [21]: 2
  with precondition: [V=4,Out=5] 


#### Cost of chains of start(V):
* Chain [34]: 7
  with precondition: [] 

* Chain [33]...: 1*aux(13)+0
  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 62 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 55 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 200 ms.

