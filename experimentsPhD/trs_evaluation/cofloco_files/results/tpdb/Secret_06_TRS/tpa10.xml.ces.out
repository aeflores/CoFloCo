
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [max/3]
1. recursive  : [min/3]
2. recursive  : [minus/3]
3. recursive  : [plus/3]
4. recursive [non_tail] : [times/3]
5. recursive  : [f/3]
6. non_recursive  : [p/2]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into max/3
1. SCC is partially evaluated into min/3
2. SCC is partially evaluated into minus/3
3. SCC is partially evaluated into plus/3
4. SCC is partially evaluated into times/3
5. SCC is partially evaluated into f/3
6. SCC is partially evaluated into p/2
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations max/3 
* CE 16 is refined into CE [30] 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 
* CE 15 is refined into CE [33] 


#### Refined cost equations max/3 
* CE 30: max(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 31: max(A,B,A) = 1
     [A>=0,B=0] 
* CE 32: max(A,B,B) = 1
     [B>=0,A=0] 
* CE 33: max(V1,V,Out) = 1+ max(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of max/3 
* CEs [33] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [32] --> Loop 24 

#### Loops of max/3 
* Loop 21: max(V1,V,Out)->  max(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 22: max(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 23: max(A,B,A) [A>=0,B=0] 
* Loop 24: max(A,B,B) [B>=0,A=0] 

### Ranking functions of CR max(V1,V,Out) 
* RF of phase [21]: [V,V1]

#### Partial ranking functions of CR max(V1,V,Out) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V
    V1


### Resulting Chains:max(V1,V,Out) 
* [[21],24]
* [[21],23]
* [[21],22]
* [24]
* [23]
* [22]


### Merging Chains  max/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 
* [[23,[21]]] --> 4 
* [[24,[21]]] --> 5 
* [[22,[21]]] --> 6 


### Specialization of cost equations min/3 
* CE 10 is refined into CE [34] 
* CE 9 is refined into CE [35] 
* CE 12 is refined into CE [36] 
* CE 11 is refined into CE [37] 


#### Refined cost equations min/3 
* CE 34: min(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 35: min(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 36: min(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: min(V1,V,Out) = 1+ min(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of min/3 
* CEs [37] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [35,36] --> Loop 27 

#### Loops of min/3 
* Loop 25: min(V1,V,Out)->  min(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 26: min(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 27: min(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR min(V1,V,Out) 
* RF of phase [25]: [V,V1]

#### Partial ranking functions of CR min(V1,V,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V
    V1


### Resulting Chains:min(V1,V,Out) 
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  min/3 into  External patterns of execution 
* [[26],[27]] --> 1 
* [[26,[25]],[27,[25]]] --> 2 


### Specialization of cost equations minus/3 
* CE 22 is refined into CE [38] 
* CE 20 is refined into CE [39] 
* CE 21 is refined into CE [40] 


#### Refined cost equations minus/3 
* CE 38: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 39: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 40: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [40] --> Loop 28 
* CEs [38] --> Loop 29 
* CEs [39] --> Loop 30 

#### Loops of minus/3 
* Loop 28: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 29: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 30: minus(A,B,A) [A>=0,B=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [28]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[28],30]
* [[28],29]
* [30]
* [29]


### Merging Chains  minus/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29],[29,[28]]] --> 2 
* [[30,[28]]] --> 3 


### Specialization of cost equations plus/3 
* CE 19 is refined into CE [41] 
* CE 17 is refined into CE [42] 
* CE 18 is refined into CE [43] 


#### Refined cost equations plus/3 
* CE 41: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 42: plus(A,B,B) = 1
     [B>=0,A=0] 
* CE 43: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [43] --> Loop 31 
* CEs [41] --> Loop 32 
* CEs [42] --> Loop 33 

#### Loops of plus/3 
* Loop 31: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 32: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 33: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [31]: [V1]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[31],33]
* [[31],32]
* [33]
* [32]


### Merging Chains  plus/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[33,[31]]] --> 3 
* [[32,[31]]] --> 4 


### Specialization of cost equations times/3 
* CE 23 is refined into CE [44] 
* CE 25 is refined into CE [45] 
* CE 24 is refined into CE [46,47,48,49] 


#### Refined cost equations times/3 
* CE 44: times(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 45: times(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 46: times(V1,V,Out) = 1+ times(W1,X1,Out)+ plus(Y1,Out,Out):1
     [X1>=0,Out>=0,X1+1=V,W1=0,Y1=0,V1=0] 
* CE 47: times(V1,V,Out) = 1+ times(V1,W1,X1)+ plus(V1,X1,Y1):2
     [W1>=0,X1>=0,V1>=0,W1+1=V,Y1=0,Out=0] 
* CE 48: times(V1,V,Out) = 1+ times(V1,W1,X1)+ plus(V1,Y1,Out):3
     [Out>=V1,W1>=0,V1>=1,Out=V1+X1,Out=V1+Y1,W1+1=V] 
* CE 49: times(V1,V,Out) = 1+ times(V1,W1,X1)+ plus(V1,X1,Out):4
     [V1>=Out,W1>=0,Out>=1,X1>=0,W1+1=V] 

### Cost equations --> "Loop" of times/3 
* CEs [49] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [46] --> Loop 37 
* CEs [44,45] --> Loop 38 

#### Loops of times/3 
* Loop 34: times(V1,V,Out)->  times(V1,V',Out')
                  [V1>=Out,Out'>=0,Out>=1,V>=1,V=V'+1] 
* Loop 35: times(V1,V,Out)->  times(V1,V',Out')
                  [Out>=V1,V>=1,V1>=1,V1+Out'=Out,V=V'+1] 
* Loop 36: times(V1,V,Out)->  times(V1,V',Out')
                  [Out'>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 37: times(V1,V,Out)->  times(V1',V',Out)
                  [Out>=0,V>=1,V=V'+1,V1'=0,V1=0] 
* Loop 38: times(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR times(V1,V,Out) 
* RF of phase [34,35,36,37]: [V]

#### Partial ranking functions of CR times(V1,V,Out) 
* Partial RF of phase [34,35,36,37]:
  - RF of loop [34:1,35:1,36:1,37:1]:
    V


### Resulting Chains:times(V1,V,Out) 
* [[34,35,36,37],38]
* [38]


### Merging Chains  times/3 into  External patterns of execution 
* [[38]] --> 1 
* [[38,[34,35,36,37]]] --> 2 


### Specialization of cost equations f/3 
* CE 29 is refined into CE [50] 
* CE 28 is refined into CE [51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76] 


#### Refined cost equations f/3 
* CE 50: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 51: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):3+ minus(Y1,Z1,A2):1+ times(V1,V,B2):1+ f(C2,D2,Out)
     [V>=1,V1>=1,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 52: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):3+ minus(Y1,Z1,A2):1+ times(V1,V,B2):2+ f(C2,B2,Out)
     [B2>=0,V>=1,V1>=1,C2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 53: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):3+ minus(Y1,Z1,A2):2+ times(V1,V,B2):1+ f(C2,D2,Out)
     [V>=1,V1>=1,D2=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 54: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):3+ minus(Y1,Z1,A2):2+ times(V1,V,B2):2+ f(C2,B2,Out)
     [B2>=0,V>=1,V1>=1,C2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 55: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,V1):4+ minus(X1,V1,Y1):2+ times(V1,V,Z1):1+ f(A2,B2,Out)
     [V1>=V,V>=1,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 56: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,V1):4+ minus(X1,V1,Y1):2+ times(V1,V,Z1):2+ f(A2,Z1,Out)
     [V1>=V,Z1>=0,V>=1,A2=0,Y1=0,X1=0,W1=0] 
* CE 57: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,V):5+ minus(X1,V,Y1):2+ times(V1,V,Z1):1+ f(A2,B2,Out)
     [V>=V1,V1>=1,B2=0,A2=0,Z1=0,Y1=0,X1=0,W1=0] 
* CE 58: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,V):5+ minus(X1,V,Y1):2+ times(V1,V,Z1):2+ f(A2,Z1,Out)
     [V>=V1,Z1>=0,V1>=1,A2=0,Y1=0,X1=0,W1=0] 
* CE 59: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):6+ minus(Y1,X1,Z1):2+ times(V1,V,A2):1+ f(B2,C2,Out)
     [V>=X1,V1>=X1,X1>=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,W1=0] 
* CE 60: f(V1,V,Out) = 1+ min(V1,V,W1):1+ max(V1,V,X1):6+ minus(Y1,X1,Z1):2+ times(V1,V,A2):2+ f(B2,A2,Out)
     [V>=X1,V1>=X1,A2>=0,X1>=1,B2=0,Z1=0,Y1=0,W1=0] 
* CE 61: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):3+ minus(W1,Y1,W1):1+ times(V1,V,Z1):1+ f(W1,A2,Out)
     [V>=W1,V1>=W1,W1>=1,A2=0,Z1=0,Y1=0,X1=0] 
* CE 62: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):3+ minus(W1,Y1,W1):1+ times(V1,V,Z1):2+ f(W1,Z1,Out)
     [V>=W1,V1>=W1,Z1>=0,W1>=1,Y1=0,X1=0] 
* CE 63: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):3+ minus(W1,Y1,Z1):2+ times(V1,V,A2):1+ f(B2,C2,Out)
     [V>=W1,V1>=W1,W1>=1,C2=0,B2=0,A2=0,Z1=0,Y1=0,X1=0] 
* CE 64: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):3+ minus(W1,Y1,Z1):2+ times(V1,V,A2):2+ f(B2,A2,Out)
     [V>=W1,V1>=W1,A2>=0,W1>=1,B2=0,Z1=0,Y1=0,X1=0] 
* CE 65: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,V1):4+ minus(W1,V1,X1):2+ times(V1,V,Y1):1+ f(Z1,A2,Out)
     [V1>=V,V>=W1,W1>=1,A2=0,Z1=0,Y1=0,X1=0] 
* CE 66: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,V1):4+ minus(W1,V1,X1):2+ times(V1,V,Y1):2+ f(Z1,Y1,Out)
     [V1>=V,V>=W1,Y1>=0,W1>=1,Z1=0,X1=0] 
* CE 67: f(A,A,B) = 1+ min(A,A,A):2+ max(A,A,A):4+ minus(A,A,C):3+ times(A,A,D):1+ f(E,F,B)
     [A>=1,F=0,E=0,D=0,C=0] 
* CE 68: f(A,A,B) = 1+ min(A,A,A):2+ max(A,A,A):4+ minus(A,A,C):3+ times(A,A,D):2+ f(E,D,B)
     [D>=0,A>=1,E=0,C=0] 
* CE 69: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,V):5+ minus(W1,V,X1):2+ times(V1,V,Y1):1+ f(Z1,A2,Out)
     [V>=V1,V1>=W1,W1>=1,A2=0,Z1=0,Y1=0,X1=0] 
* CE 70: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,V):5+ minus(W1,V,X1):2+ times(V1,V,Y1):2+ f(Z1,Y1,Out)
     [V>=V1,V1>=W1,Y1>=0,W1>=1,Z1=0,X1=0] 
* CE 71: f(A,A,B) = 1+ min(A,A,A):2+ max(A,A,A):5+ minus(A,A,C):3+ times(A,A,D):1+ f(E,F,B)
     [A>=1,F=0,E=0,D=0,C=0] 
* CE 72: f(A,A,B) = 1+ min(A,A,A):2+ max(A,A,A):5+ minus(A,A,C):3+ times(A,A,D):2+ f(E,D,B)
     [D>=0,A>=1,E=0,C=0] 
* CE 73: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):6+ minus(W1,X1,Y1):2+ times(V1,V,Z1):1+ f(A2,B2,Out)
     [V>=X1,V1>=X1,V>=W1,V1>=W1,X1>=1,W1>=1,B2=0,A2=0,Z1=0,Y1=0] 
* CE 74: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):6+ minus(W1,X1,Y1):2+ times(V1,V,Z1):2+ f(A2,Z1,Out)
     [V>=X1,V1>=X1,V>=W1,V1>=W1,Z1>=0,X1>=1,W1>=1,A2=0,Y1=0] 
* CE 75: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):6+ minus(Y1,X1,Z1):3+ times(V1,V,A2):1+ f(Z1,B2,Out)
     [V>=X1+Z1,V1>=X1+Z1,Z1>=0,X1>=1,X1+Z1=Y1,X1+Z1=W1,B2=0,A2=0] 
* CE 76: f(V1,V,Out) = 1+ min(V1,V,W1):2+ max(V1,V,X1):6+ minus(Y1,X1,Z1):3+ times(V1,V,A2):2+ f(Z1,A2,Out)
     [V>=X1+Z1,V1>=X1+Z1,A2>=0,Z1>=0,X1>=1,X1+Z1=Y1,X1+Z1=W1] 

### Cost equations --> "Loop" of f/3 
* CEs [61,62] --> Loop 39 
* CEs [75] --> Loop 40 
* CEs [68,72] --> Loop 41 
* CEs [51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,69,70,71,73,74,76] --> Loop 42 
* CEs [50] --> Loop 43 

#### Loops of f/3 
* Loop 39: f(V1,V,Out)->  f(V1',V',Out)
                  [V>=V1',V1>=V1',V'>=0,V1'>=1] 
* Loop 40: f(V1,V,Out)->  f(V1',V',Out)
                  [V>=V1'+1,V1>=V1'+1,V1'>=0,V'=0] 
* Loop 41: f(A,A,B)->  f(A',B',B)
                  [B'>=0,A>=1,A'=0] 
* Loop 42: f(V1,V,Out)->  f(V1',V',Out)
                  [V>=V1'+1,V1>=V1'+1,V'>=0,V1'>=0] 
* Loop 43: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 

#### Partial ranking functions of CR f(V1,V,Out) 
* Partial RF of phase [39,42]:
  - RF of loop [42:1]:
    V1


### Resulting Chains:f(V1,V,Out) 
* [[39,42]]...
* [[39,42],43]
* [[39,42],41,43]
* [[39,42],40,43]
* [43]
* [41,43]
* [40,43]


### Merging Chains  f/3 into  External patterns of execution 
* [[43,40],[43,41],[43],[43,40,[39,42]],[43,41,[39,42]],[43,[39,42]]] --> 1 
* [[[39,42]]] --> 2 


### Specialization of cost equations p/2 
* CE 26 is refined into CE [77] 
* CE 27 is refined into CE [78] 


#### Refined cost equations p/2 
* CE 77: p(V1,Out) = 1
     [Out>=0,Out+1=V1] 
* CE 78: p(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of p/2 
* CEs [77] --> Loop 44 
* CEs [78] --> Loop 45 

#### Loops of p/2 
* Loop 44: p(V1,Out) [V1>=1,V1=Out+1] 
* Loop 45: p(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR p(V1,Out) 

#### Partial ranking functions of CR p(V1,Out) 


### Resulting Chains:p(V1,Out) 
* [45]
* [44]


### Merging Chains  p/2 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [79,80] 
* CE 3 is refined into CE [81,82,83,84,85,86] 
* CE 4 is refined into CE [87,88,89,90] 
* CE 5 is refined into CE [91,92,93] 
* CE 6 is refined into CE [94,95] 
* CE 7 is refined into CE [96,97] 
* CE 8 is refined into CE [98,99] 


#### Refined cost equations start/2 
* CE 79: start(V1,V) = 0+ min(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 80: start(V1,V) = 0+ min(V1,V,W1):2
     [V>=W1,V1>=W1,W1>=1] 
* CE 81: start(V1,V) = 0+ max(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 82: start(V1,V) = 0+ max(V1,W1,V1):2
     [V1>=0,W1=0,V=0] 
* CE 83: start(V1,V) = 0+ max(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 84: start(V1,V) = 0+ max(V1,V,V1):4
     [V1>=V,V>=1] 
* CE 85: start(V1,V) = 0+ max(V1,V,V):5
     [V>=V1,V1>=1] 
* CE 86: start(V1,V) = 0+ max(V1,V,W1):6
     [V>=W1,V1>=W1,W1>=1] 
* CE 87: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 88: start(V1,V) = 0+ plus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 89: start(V1,V) = 0+ plus(V1,W1,X1):3
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 90: start(V1,V) = 0+ plus(V1,V,W1):4
     [V1>=W1,W1>=1,V>=0] 
* CE 91: start(V1,V) = 0+ minus(V1,W1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 92: start(V1,V) = 0+ minus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 93: start(V1,V) = 0+ minus(W1,V,X1):3
     [X1>=0,V>=1,V+X1=W1,V+X1=V1] 
* CE 94: start(V1,V) = 0+ times(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 95: start(V1,V) = 0+ times(V1,V,W1):2
     [W1>=0,V>=1,V1>=0] 
* CE 96: start(V1,V) = 0+ p(V1,W1):1
     [V1>=0,W1=0] 
* CE 97: start(V1,V) = 0+ p(W1,X1):2
     [X1>=0,X1+1=W1,X1+1=V1] 
* CE 98: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 99: start(V1,V) = 0+ f(V1,V,W1):2
     [V>=1,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [99] --> Loop 46 
* CEs [82,91] --> Loop 47 
* CEs [79,80,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98] --> Loop 48 

#### Loops of start/2 
* Loop 46: start(V1,V) [V>=1,V1>=1] 
* Loop 47: start(V1,V) [V1>=0,V=0] 
* Loop 48: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [48]
* [47]
* [46]...


### Merging Chains  start/2 into  External patterns of execution 
* [[47],[48]] --> 1 
* [[46]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:max(V1,V,Out) -> [max(V1',V',Out')] 
1
#### Cost of phase [21]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of phase [21]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of phase [21]:max(V1,V,Out) -> [max(V1',V',Out')] 
1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
it(21) =< V
it(21) =< V-V'

#### Cost of chains of max(V1,V,Out):
* Chain [[21],24]: 1*it(21)+1
  Such that:it(21) =< V1

  with precondition: [V=Out,V1>=1,V>=V1] 

* Chain [[21],23]: 1*it(21)+1
  Such that:it(21) =< V

  with precondition: [V1=Out,V>=1,V1>=V] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [24]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [23]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [25] 

 * loop 25:min(V1,V,Out) -> [min(V1',V',Out')] 
1
#### Cost of phase [25]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of phase [25]:min(V1,V,Out) -> [min(V1',V',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'
it(25) =< V
it(25) =< V-V'

#### Cost of chains of min(V1,V,Out):
* Chain [[25],27]: 1*it(25)+1
  Such that:it(25) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [[25],26]: 1*it(25)+1
  Such that:it(25) =< Out

  with precondition: [V=Out,V>=1,V1>=V] 

* Chain [27]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [26]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of loops [28] 

 * loop 28:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [28]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(28)+0
  Such that:it(28) =< V1
it(28) =< V1-V1'
it(28) =< V
it(28) =< V-V'

#### Cost of phase [28]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(28)+0
  Such that:it(28) =< V1
it(28) =< V1-V1'
it(28) =< V
it(28) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[28],30]: 1*it(28)+1
  Such that:it(28) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [30]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [31] 

 * loop 31:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [31]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of phase [31]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(31)+0
  Such that:it(31) =< V1
it(31) =< V1-V1'

#### Cost of chains of plus(V1,V,Out):
* Chain [[31],33]: 1*it(31)+1
  Such that:it(31) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< Out

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [33]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [32]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [34,35,36,37] 

 * loop 34:times(V1,V,Out) -> [times(V1',V',Out')] 
1*s(5)+1
  Such that:s(5) =< V1'

 * loop 35:times(V1,V,Out) -> [times(V1',V',Out')] 
1*s(7)+2
  Such that:s(7) =< V1'

 * loop 36:times(V1,V,Out) -> [times(V1',V',Out')] 
1
 * loop 37:times(V1,V,Out) -> [times(V1',V',Out')] 
2
#### Cost of phase [34,35,36,37]:times(V1,V,Out) -> [times(V1',V',Out')] 
6*it(34)+1*s(8)+1*s(9)+0
  Such that:aux(2) =< V1
aux(4) =< V
aux(5) =< V-V'
it(34) =< aux(4)
it(34) =< aux(5)
aux(3) =< aux(2)
s(8) =< it(34)*aux(2)
s(9) =< it(34)*aux(3)

#### Cost of chains of times(V1,V,Out):
* Chain [[34,35,36,37],38]: 6*it(34)+1*s(8)+1*s(9)+1
  Such that:aux(2) =< V1
aux(6) =< V
it(34) =< aux(6)
aux(3) =< aux(2)
s(8) =< it(34)*aux(2)
s(9) =< it(34)*aux(3)

  with precondition: [V1>=0,V>=1,Out>=0] 

* Chain [38]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [39,42] 

 * loop 39:f(V1,V,Out) -> [f(V1',V',Out')] 
4*s(27)+6*s(23)+1*s(25)+1*s(26)+4
  Such that:s(20) =< V1
s(21) =< V
s(22) =< V1'
s(23) =< s(21)
s(24) =< s(20)
s(25) =< s(23)*s(20)
s(26) =< s(23)*s(24)
s(27) =< s(22)

 * loop 42:f(V1,V,Out) -> [f(V1',V',Out')] 
88*s(148)+10*s(150)+10*s(151)+22*s(147)+2*s(152)+5
  Such that:s(144) =< V1-V1'
s(145) =< V1
s(146) =< V
s(147) =< s(145)
s(148) =< s(146)
s(149) =< s(145)
s(150) =< s(148)*s(145)
s(151) =< s(148)*s(149)
s(152) =< s(144)

#### Cost of phase [39,42]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(39)+5*it(42)+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+2*s(163)+0
  Such that:aux(39) =< V1
aux(40) =< V1-V1'
it(42) =< aux(39)
s(164) =< aux(39)
it(42) =< aux(40)
s(164) =< aux(40)
aux(34) =< aux(39)
s(166) =< it(42)*aux(34)
s(162) =< s(166)
s(163) =< s(164)

#### Cost of phase [39,42]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(39)+5*it(42)+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+2*s(163)+0
  Such that:aux(39) =< V1
aux(40) =< V1-V1'
it(42) =< aux(39)
s(164) =< aux(39)
it(42) =< aux(40)
s(164) =< aux(40)
aux(34) =< aux(39)
s(166) =< it(42)*aux(34)
s(162) =< s(166)
s(163) =< s(164)

#### Cost of phase [39,42]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(39)+5*it(42)+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+2*s(163)+0
  Such that:aux(39) =< V1
aux(40) =< V1-V1'
it(42) =< aux(39)
s(164) =< aux(39)
it(42) =< aux(40)
s(164) =< aux(40)
aux(34) =< aux(39)
s(166) =< it(42)*aux(34)
s(162) =< s(166)
s(163) =< s(164)

#### Cost of phase [39,42]:f(V1,V,Out) -> [f(V1',V',Out')] 
4*it(39)+5*it(42)+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+2*s(163)+0
  Such that:aux(39) =< V1
aux(40) =< V1-V1'
it(42) =< aux(39)
s(164) =< aux(39)
it(42) =< aux(40)
s(164) =< aux(40)
aux(34) =< aux(39)
s(166) =< it(42)*aux(34)
s(162) =< s(166)
s(163) =< s(164)

#### Cost of loops [39,42] 

 * loop 39:f(V1,V,Out) -> [f(V1',V',Out')] 
4*s(27)+6*s(23)+1*s(25)+1*s(26)+4
  Such that:s(20) =< V1
s(21) =< V
s(22) =< V1'
s(23) =< s(21)
s(24) =< s(20)
s(25) =< s(23)*s(20)
s(26) =< s(23)*s(24)
s(27) =< s(22)

 * loop 42:f(V1,V,Out) -> [f(V1',V',Out')] 
88*s(148)+10*s(150)+10*s(151)+22*s(147)+2*s(152)+5
  Such that:s(144) =< V1-V1'
s(145) =< V1
s(146) =< V
s(147) =< s(145)
s(148) =< s(146)
s(149) =< s(145)
s(150) =< s(148)*s(145)
s(151) =< s(148)*s(149)
s(152) =< s(144)

#### Cost of phase [39,42]:f(V1,V,Out) -> [] 
4*it(39)+7*it(42)+4*it([40,43])+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+4*s(191)+0
  Such that:it([40,43]) =< 1
aux(59) =< V1
it(42) =< aux(59)
it([40,43]) =< aux(59)
aux(53) =< aux(59)
s(166) =< it(42)*aux(53)
s(162) =< s(166)

#### Cost of chains of f(V1,V,Out):
* Chain [[39,42]]...: 124*it(39)+7*it(42)+22*s(162)+0
  Such that:aux(41) =< V1
it(42) =< aux(41)
aux(34) =< aux(41)
s(166) =< it(42)*aux(34)
s(162) =< s(166)

  with precondition: [V>=1,V1>=1] 

* Chain [[39,42],43]: 124*it(39)+7*it(42)+22*s(162)+0
  Such that:aux(42) =< V1
it(42) =< aux(42)
aux(34) =< aux(42)
s(166) =< it(42)*aux(34)
s(162) =< s(166)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[39,42],41,43]: 124*it(39)+27*it(42)+22*s(162)+2*s(175)+2*s(176)+5
  Such that:aux(46) =< V1
it(42) =< aux(46)
aux(34) =< aux(46)
s(175) =< it(42)*aux(46)
s(176) =< it(42)*aux(34)
s(166) =< it(42)*aux(34)
s(162) =< s(166)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[39,42],40,43]: 4*it(39)+7*it(42)+4*it([40,43])+4*s(153)+6*s(154)+1*s(155)+1*s(156)+88*s(159)+10*s(160)+10*s(161)+22*s(162)+4*s(191)+0
  Such that:it([40,43]) =< 1
aux(59) =< V1
it(42) =< aux(59)
it([40,43]) =< aux(59)
aux(53) =< aux(59)
s(166) =< it(42)*aux(53)
s(162) =< s(166)

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [43]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [41,43]: 20*s(168)+2*s(175)+2*s(176)+5
  Such that:aux(45) =< V1
s(168) =< aux(45)
s(174) =< aux(45)
s(175) =< s(168)*aux(45)
s(176) =< s(168)*s(174)

  with precondition: [Out=0,V1=V,V1>=1] 

* Chain [40,43]: 4*s(188)+4
  Such that:aux(48) =< V
s(188) =< aux(48)

  with precondition: [Out=0,V1>=1,V>=1] 


#### Cost of chains of p(V1,Out):
* Chain [45]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [44]: 1
  with precondition: [V1=Out+1,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [48]: 16*s(230)+64*s(232)+1*s(242)+1*s(243)+4*s(244)+66*s(250)+4*s(251)+4*s(252)+376*s(254)+5
  Such that:s(244) =< 1
aux(61) =< V1
aux(62) =< V
s(232) =< aux(61)
s(230) =< aux(62)
s(244) =< aux(61)
s(241) =< aux(61)
s(249) =< s(232)*s(241)
s(250) =< s(249)
s(251) =< s(232)*aux(61)
s(252) =< s(232)*s(241)
s(242) =< s(230)*aux(61)
s(243) =< s(230)*s(241)

  with precondition: [V1>=0] 

* Chain [47]: 1
  with precondition: [V=0,V1>=0] 

* Chain [46]...: 7*s(256)+22*s(259)+124*s(260)+0
  Such that:s(255) =< V1
s(256) =< s(255)
s(257) =< s(255)
s(258) =< s(256)*s(257)
s(259) =< s(258)

  with precondition: [V1>=1,V>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [48] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [47] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [46]... with precondition: [V1>=1,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 131 ms.
   - Backward Invariants 61 ms.
   - Transitive Invariants 25 ms.
* Refinement performed in 503 ms.
* Termination proved in 24 ms.
* Upper bounds computed in 865 ms.
   - Equation cost structures 363 ms.
   - Phase cost structures 570 ms.
   - Chain cost structures 129 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 1581 ms.

