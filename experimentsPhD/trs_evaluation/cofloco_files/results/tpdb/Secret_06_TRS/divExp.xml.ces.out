
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [minus/3]
1. recursive  : [ (div)/3]
2. recursive [non_tail] : [f/4]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into minus/3
1. SCC is partially evaluated into (div)/3
2. SCC is partially evaluated into f/4
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations minus/3 
* CE 5 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations minus/3 
* CE 16: minus(A,A,B) = 1
     [A>=0,B=0] 
* CE 17: minus(A,B,A) = 1
     [A>=0,B=0] 
* CE 18: minus(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 19: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 20: minus(V1,V,Out) = 1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [20] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [18,19] --> Loop 14 

#### Loops of minus/3 
* Loop 11: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 12: minus(A,A,B) [A>=0,B=0] 
* Loop 13: minus(A,B,A) [A>=0,B=0] 
* Loop 14: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [11]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[11],14]
* [[11],13]
* [[11],12]
* [14]
* [13]
* [12]


### Merging Chains  minus/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12],[14],[12,[11]],[14,[11]]] --> 2 
* [[13,[11]]] --> 3 


### Specialization of cost equations (div)/3 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 10 is refined into CE [23,24,25] 


#### Refined cost equations (div)/3 
* CE 21: div(V1,V,Out) = 1
     [V>=1,Out=0,V1=0] 
* CE 22: div(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 23: div(V1,V,Out) = 1+ minus(W1,X1,W1):1+ div(W1,Y1,Z1)
     [W1>=0,Z1+1=Out,W1+1=V1,Y1=1,X1=0,V=1] 
* CE 24: div(V1,V,Out) = 1+ minus(W1,X1,Y1):2+ div(Z1,A2,B2)
     [X1>=0,W1>=0,X1+1=A2,B2+1=Out,X1+1=V,W1+1=V1,Z1=0,Y1=0] 
* CE 25: div(V1,V,Out) = 1+ minus(W1,X1,Y1):3+ div(Y1,Z1,A2)
     [Y1>=0,X1>=1,X1+Y1=W1,X1+Y1+1=V1,X1+1=Z1,A2+1=Out,X1+1=V] 

### Cost equations --> "Loop" of (div)/3 
* CEs [25] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [21,22] --> Loop 18 

#### Loops of (div)/3 
* Loop 15: div(V1,V,Out)->  div(V1',V,Out')
                  [V1>=V,V>=2,V1=V+V1',Out=Out'+1] 
* Loop 16: div(V1,V,Out)->  div(V1',V,Out')
                  [V>=1,V1>=1,Out=Out'+1,V1'=0] 
* Loop 17: div(V1,V,Out)->  div(V1',V',Out')
                  [V1>=1,Out=Out'+1,V1=V1'+1,V'=1,V=1] 
* Loop 18: div(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR div(V1,V,Out) 
* RF of phase [15]: [V1-1,V1-V+1]
* RF of phase [17]: [V1]

#### Partial ranking functions of CR div(V1,V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1-1
    V1-V+1
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V1


### Resulting Chains:div(V1,V,Out) 
* [[17],18]
* [[17],16,18]
* [[15],18]
* [[15],16,18]
* [18]
* [16,18]


### Merging Chains  (div)/3 into  External patterns of execution 
* [[18,16,[17]],[18,[17]]] --> 1 
* [[18]] --> 2 
* [[18,16]] --> 3 
* [[18,[15]]] --> 4 
* [[18,16,[15]]] --> 5 


### Specialization of cost equations f/4 
* CE 15 is refined into CE [26] 
* CE 13 is refined into CE [27] 
* CE 14 is refined into CE [28,29,30,31,32,33,34,35,36,37] 


#### Refined cost equations f/4 
* CE 26: f(V1,V,V10,Out) = 0
     [V10>=0,V>=0,V1>=0,Out=0] 
* CE 27: f(A,B,C,A) = 1
     [C>=0,A>=0,B=0] 
* CE 28: f(V1,V,V10,Out) = 1+ minus(V,W10,X10):2+ f(V1,Y10,Z10,A11)+ div(A11,B11,Out):1
     [A11>=Out,Out>=1,V>=1,V1>=0,Z10=1,Y10=0,B11=1,X10=0,W10=1,V10=1] 
* CE 29: f(V1,V,V10,Out) = 1+ minus(V,W10,X10):2+ f(V1,Y10,V10,Z10)+ div(Z10,V10,A11):2
     [V10>=0,Z10>=0,V>=1,V1>=0,Y10=0,A11=0,X10=0,W10=1,Out=0] 
* CE 30: f(V1,V,V10,Out) = 1+ minus(V,W10,X10):2+ f(V1,Y10,V10,Z10)+ div(Z10,V10,A11):3
     [V10>=1,Z10>=1,V>=1,V1>=0,Y10=0,A11=1,X10=0,W10=1,Out=1] 
* CE 31: f(V1,V,V10,Out) = 1+ minus(V,W10,X10):2+ f(V1,Y10,V10,Z10)+ div(Z10,V10,Out):4
     [Z10+2>=2*Out+V10,Out>=1,V10>=2,V>=1,V1>=0,Y10=0,X10=0,W10=1] 
* CE 32: f(V1,V,V10,Out) = 1+ minus(V,W10,X10):2+ f(V1,Y10,V10,Z10)+ div(Z10,V10,Out):5
     [Z10+3>=2*Out+V10,Out>=2,V10>=2,V>=1,V1>=0,Y10=0,X10=0,W10=1] 
* CE 33: f(V1,V,V10,Out) = 1+ minus(W10,X10,Y10):3+ f(V1,Y10,Z10,A11)+ div(A11,B11,Out):1
     [A11>=Out,Out>=1,Y10>=0,V1>=0,Y10+1=W10,Y10+1=V,Z10=1,B11=1,X10=1,V10=1] 
* CE 34: f(V1,V,V10,Out) = 1+ minus(W10,X10,Y10):3+ f(V1,Y10,V10,Z10)+ div(Z10,V10,A11):2
     [V10>=0,Z10>=0,Y10>=0,V1>=0,Y10+1=W10,Y10+1=V,A11=0,X10=1,Out=0] 
* CE 35: f(V1,V,V10,Out) = 1+ minus(W10,X10,Y10):3+ f(V1,Y10,V10,Z10)+ div(Z10,V10,A11):3
     [V10>=1,Z10>=1,Y10>=0,V1>=0,Y10+1=W10,Y10+1=V,A11=1,X10=1,Out=1] 
* CE 36: f(V1,V,V10,Out) = 1+ minus(W10,X10,Y10):3+ f(V1,Y10,V10,Z10)+ div(Z10,V10,Out):4
     [Z10+2>=2*Out+V10,Out>=1,V10>=2,Y10>=0,V1>=0,Y10+1=W10,Y10+1=V,X10=1] 
* CE 37: f(V1,V,V10,Out) = 1+ minus(W10,X10,Y10):3+ f(V1,Y10,V10,Z10)+ div(Z10,V10,Out):5
     [Z10+3>=2*Out+V10,Out>=2,V10>=2,Y10>=0,V1>=0,Y10+1=W10,Y10+1=V,X10=1] 

### Cost equations --> "Loop" of f/4 
* CEs [37] --> Loop 19 
* CEs [36] --> Loop 20 
* CEs [32] --> Loop 21 
* CEs [31] --> Loop 22 
* CEs [35] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [33] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [27] --> Loop 30 

#### Loops of f/4 
* Loop 19: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'+3>=2*Out+V10,Out>=2,V10>=2,V>=1,V1>=0,V=V'+1] 
* Loop 20: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'+2>=2*Out+V10,Out>=1,V10>=2,V>=1,V1>=0,V=V'+1] 
* Loop 21: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'+3>=2*Out+V10,Out>=2,V10>=2,V>=1,V1>=0,V'=0] 
* Loop 22: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'+2>=2*Out+V10,Out>=1,V10>=2,V>=1,V1>=0,V'=0] 
* Loop 23: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'>=1,V10>=1,V>=1,V1>=0,V=V'+1,Out=1] 
* Loop 24: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'>=1,V10>=1,V>=1,V1>=0,V'=0,Out=1] 
* Loop 25: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'>=0,V10>=0,V>=1,V1>=0,V=V'+1,Out=0] 
* Loop 26: f(V1,V,V10,Out)->  f(V1,V',V10,Out')
                  [Out'>=0,V10>=0,V>=1,V1>=0,V'=0,Out=0] 
* Loop 27: f(V1,V,V10,Out)->  f(V1,V',V10',Out')
                  [Out'>=Out,Out>=1,V>=1,V1>=0,V=V'+1,V10'=1,V10=1] 
* Loop 28: f(V1,V,V10,Out)->  f(V1,V',V10',Out')
                  [Out'>=Out,Out>=1,V>=1,V1>=0,V10'=1,V'=0,V10=1] 
* Loop 29: f(V1,V,V10,Out) [V10>=0,V>=0,V1>=0,Out=0] 
* Loop 30: f(A,B,C,A) [C>=0,A>=0,B=0] 

### Ranking functions of CR f(V1,V,V10,Out) 
* RF of phase [19,20]: [V]
* RF of phase [23,27]: [V]
* RF of phase [25]: [V]

#### Partial ranking functions of CR f(V1,V,V10,Out) 
* Partial RF of phase [19,20]:
  - RF of loop [19:1,20:1]:
    V
* Partial RF of phase [23,27]:
  - RF of loop [23:1,27:1]:
    V
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V


### Resulting Chains:f(V1,V,V10,Out) 
* [[25],[23,27],[19,20],30]
* [[25],[23,27],[19,20],22,30]
* [[25],[23,27],[19,20],21,30]
* [[25],[23,27],30]
* [[25],[23,27],28,30]
* [[25],[23,27],24,30]
* [[25],[23,27],22,30]
* [[25],[23,27],21,30]
* [[25],[19,20],30]
* [[25],[19,20],22,30]
* [[25],[19,20],21,30]
* [[25],30]
* [[25],29]
* [[25],28,30]
* [[25],26,30]
* [[25],26,29]
* [[25],24,30]
* [[25],22,30]
* [[25],21,30]
* [[23,27],[19,20],30]
* [[23,27],[19,20],22,30]
* [[23,27],[19,20],21,30]
* [[23,27],30]
* [[23,27],28,30]
* [[23,27],24,30]
* [[23,27],22,30]
* [[23,27],21,30]
* [[19,20],30]
* [[19,20],22,30]
* [[19,20],21,30]
* [30]
* [29]
* [28,30]
* [26,30]
* [26,29]
* [24,30]
* [22,30]
* [21,30]


### Merging Chains  f/4 into  External patterns of execution 
* [[30]] --> 1 
* [[29,26],[30,26],[29],[30,21,[25]],[30,22,[25]],[30,24,[25]],[29,26,[25]],[30,26,[25]],[30,28,[25]],[29,[25]],[30,[25]],[30,21,[19,20],[25]],[30,22,[19,20],[25]],[30,[19,20],[25]],[30,21,[23,27],[25]],[30,22,[23,27],[25]],[30,24,[23,27],[25]],[30,28,[23,27],[25]],[30,[23,27],[25]],[30,21,[19,20],[23,27],[25]],[30,22,[19,20],[23,27],[25]],[30,[19,20],[23,27],[25]]] --> 2 
* [[30,21],[30,22],[30,28],[30,21,[19,20]],[30,22,[19,20]],[30,[19,20]],[30,28,[23,27]],[30,[23,27]]] --> 3 
* [[30,24],[30,21,[23,27]],[30,22,[23,27]],[30,24,[23,27]],[30,21,[19,20],[23,27]],[30,22,[19,20],[23,27]],[30,[19,20],[23,27]]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [38,39,40] 
* CE 3 is refined into CE [41,42,43,44,45] 
* CE 4 is refined into CE [46,47,48,49] 


#### Refined cost equations start/3 
* CE 38: start(V1,V,V10) = 0+ minus(V1,W10,V1):1
     [V1>=0,W10=0,V=0] 
* CE 39: start(V1,V,V10) = 0+ minus(V1,V,W10):2
     [V>=0,V1>=0,W10=0] 
* CE 40: start(V1,V,V10) = 0+ minus(W10,V,X10):3
     [X10>=0,V>=1,V+X10=W10,V+X10=V1] 
* CE 41: start(V1,V,V10) = 0+ div(V1,W10,X10):1
     [V1>=X10,X10>=1,W10=1,V=1] 
* CE 42: start(V1,V,V10) = 0+ div(V1,V,W10):2
     [V>=0,V1>=0,W10=0] 
* CE 43: start(V1,V,V10) = 0+ div(V1,V,W10):3
     [V>=1,V1>=1,W10=1] 
* CE 44: start(V1,V,V10) = 0+ div(V1,V,W10):4
     [V1+2>=2*W10+V,W10>=1,V>=2] 
* CE 45: start(V1,V,V10) = 0+ div(V1,V,W10):5
     [V1+3>=2*W10+V,W10>=2,V>=2] 
* CE 46: start(V1,V,V10) = 0+ f(V1,W10,V10,V1):1
     [V1>=0,V10>=0,W10=0,V=0] 
* CE 47: start(V1,V,V10) = 0+ f(V1,V,V10,W10):2
     [V10>=0,V>=0,V1>=0,W10=0] 
* CE 48: start(V1,V,V10) = 0+ f(V1,V,V10,W10):3
     [V1>=W10,W10>=1,V10>=1,V>=1] 
* CE 49: start(V1,V,V10) = 0+ f(V1,V,V10,W10):4
     [V10>=1,V>=1,V1>=1,W10=1] 

### Cost equations --> "Loop" of start/3 
* CEs [41] --> Loop 31 
* CEs [38,39,40,42,43,44,45,46,47,48,49] --> Loop 32 

#### Loops of start/3 
* Loop 31: start(V1,V,V10) [V1>=1,V=1] 
* Loop 32: start(V1,V,V10) [V>=0,V1>=0] 

### Ranking functions of CR start(V1,V,V10) 

#### Partial ranking functions of CR start(V1,V,V10) 


### Resulting Chains:start(V1,V,V10) 
* [32]
* [31]


### Merging Chains  start/3 into  External patterns of execution 
* [[31],[32]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [11]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of phase [11]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of phase [11]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(11)+0
  Such that:it(11) =< V1
it(11) =< V1-V1'
it(11) =< V
it(11) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[11],14]: 1*it(11)+1
  Such that:it(11) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< V

  with precondition: [V1=Out+V,V>=1,V1>=V] 

* Chain [[11],12]: 1*it(11)+1
  Such that:it(11) =< V1

  with precondition: [Out=0,V1=V,V1>=1] 

* Chain [14]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [13]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [12]: 1
  with precondition: [Out=0,V=V1,V>=0] 


#### Cost of loops [17] 

 * loop 17:div(V1,V,Out) -> [div(V1',V',Out')] 
2
#### Cost of phase [17]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'

#### Cost of phase [17]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(17)+0
  Such that:it(17) =< V1
it(17) =< V1-V1'

#### Cost of loops [15] 

 * loop 15:div(V1,V,Out) -> [div(V1',V',Out')] 
1*s(6)+2
  Such that:s(6) =< V'

#### Cost of phase [15]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(15)+1*s(7)+0
  Such that:it(15) =< V1-V+1
it(15) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(15) =< aux(1)
s(7) =< aux(1)
it(15) =< aux(2)
s(7) =< aux(2)

#### Cost of phase [15]:div(V1,V,Out) -> [div(V1',V',Out')] 
2*it(15)+1*s(7)+0
  Such that:it(15) =< V1-V+1
it(15) =< V1-V-V1'+V'
aux(1) =< V1
aux(2) =< V1-V1'
it(15) =< aux(1)
s(7) =< aux(1)
it(15) =< aux(2)
s(7) =< aux(2)

#### Cost of chains of div(V1,V,Out):
* Chain [[17],18]: 2*it(17)+1
  Such that:it(17) =< Out

  with precondition: [V=1,Out>=1,V1>=Out] 

* Chain [[17],16,18]: 2*it(17)+1*s(3)+1*s(4)+3
  Such that:s(4) =< 1
s(3) =< V1-Out+1
it(17) =< Out

  with precondition: [V=1,Out>=2,V1>=Out] 

* Chain [[15],18]: 2*it(15)+1*s(7)+1
  Such that:it(15) =< V1-V+1
aux(3) =< V1
it(15) =< aux(3)
s(7) =< aux(3)

  with precondition: [V>=2,Out>=1,V1+2>=2*Out+V] 

* Chain [[15],16,18]: 4*it(15)+1*s(4)+3
  Such that:s(4) =< V
aux(4) =< V1
it(15) =< aux(4)

  with precondition: [V>=2,Out>=2,V1+3>=2*Out+V] 

* Chain [18]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [16,18]: 1*s(3)+1*s(4)+3
  Such that:s(3) =< V1
s(4) =< V

  with precondition: [Out=1,V1>=1,V>=1] 


#### Cost of loops [19,20] 

 * loop 19:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
1*s(16)+1*s(18)+4*s(19)+5
  Such that:s(16) =< 1
s(17) =< V1'
s(18) =< V10'
s(19) =< s(17)

 * loop 20:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
1*s(24)+2*s(26)+1*s(27)+3
  Such that:s(24) =< 1
s(25) =< V1'
s(26) =< V1'-V10'+1
s(26) =< s(25)
s(27) =< s(25)

#### Cost of phase [19,20]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
8*it(19)+2*s(28)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+0
  Such that:aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(12) =< V
aux(13) =< V-V'
aux(6) =< aux(12)
it(19) =< aux(12)
aux(6) =< aux(13)
it(19) =< aux(13)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(28) =< aux(6)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

#### Cost of loops [23,27] 

 * loop 23:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
1*s(39)+1*s(40)+1*s(41)+5
  Such that:s(39) =< 1
s(40) =< V1'
s(41) =< V10'

 * loop 27:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
2*s(50)+1*s(47)+4*s(51)+5
  Such that:s(47) =< V1'
s(48) =< 1
s(49) =< V1'+1
s(50) =< s(48)
s(47) =< s(49)
s(51) =< s(49)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of loops [25] 

 * loop 25:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
1*s(61)+3
  Such that:s(61) =< 1

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [19,20]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
8*it(19)+2*s(28)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+0
  Such that:aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(12) =< V
aux(13) =< V-V'
aux(6) =< aux(12)
it(19) =< aux(12)
aux(6) =< aux(13)
it(19) =< aux(13)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(28) =< aux(6)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [19,20]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
8*it(19)+2*s(28)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+0
  Such that:aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(12) =< V
aux(13) =< V-V'
aux(6) =< aux(12)
it(19) =< aux(12)
aux(6) =< aux(13)
it(19) =< aux(13)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(28) =< aux(6)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [23,27]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
10*it(23)+3*s(52)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+0
  Such that:aux(18) =< V1
aux(19) =< V10
aux(23) =< V
aux(24) =< V-V'
aux(17) =< aux(23)
it(23) =< aux(23)
aux(17) =< aux(24)
it(23) =< aux(24)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(52) =< aux(17)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of phase [25]:f(V1,V,V10,Out) -> [f(V1',V',V10',Out')] 
3*it(25)+1*s(62)+0
  Such that:aux(29) =< V
aux(30) =< V-V'
aux(28) =< aux(29)
it(25) =< aux(29)
aux(28) =< aux(30)
it(25) =< aux(30)
s(62) =< aux(28)

#### Cost of chains of f(V1,V,V10,Out):
* Chain [[25],[23,27],[19,20],30]: 27*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1
  Such that:aux(25) =< V1
aux(11) =< V1-V10+1
aux(27) =< V10
aux(31) =< V
it(19) =< aux(31)
aux(10) =< aux(25)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(27)
s(31) =< it(19)*aux(25)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(25)+1
s(53) =< it(19)*aux(25)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V>=3,V10>=2,V1>=V10] 

* Chain [[25],[23,27],[19,20],22,30]: 28*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(33) =< V1
aux(11) =< V1-V10+1
aux(35) =< V10
aux(36) =< V
it(19) =< aux(36)
aux(10) =< aux(33)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(35)
s(31) =< it(19)*aux(33)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(33)+1
s(53) =< it(19)*aux(33)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V>=4,V10>=2,V1+2>=3*V10] 

* Chain [[25],[23,27],[19,20],21,30]: 28*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(39) =< V1
aux(11) =< V1-V10+1
aux(41) =< V10
aux(42) =< V
it(19) =< aux(42)
s(70) =< aux(41)
aux(10) =< aux(39)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(41)
s(31) =< it(19)*aux(39)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(39)+1
s(53) =< it(19)*aux(39)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V>=4,V10>=2,V1+3>=3*V10] 

* Chain [[25],[23,27],30]: 17*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1
  Such that:aux(18) =< V1
aux(19) =< V10
aux(44) =< V
it(23) =< aux(44)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V1>=1,V>=2,V10>=1] 

* Chain [[25],[23,27],28,30]: 18*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+2*s(74)+5*s(76)+6
  Such that:aux(46) =< 1
aux(18) =< V1
aux(48) =< V
it(23) =< aux(48)
s(74) =< aux(46)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(46)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [V10=1,Out=0,V1>=1,V>=3] 

* Chain [[25],[23,27],24,30]: 18*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(80)+1*s(81)+1*s(82)+6
  Such that:s(80) =< 1
aux(18) =< V1
aux(50) =< V10
aux(51) =< V
it(23) =< aux(51)
s(82) =< aux(50)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(50)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V1>=1,V>=3,V10>=1] 

* Chain [[25],[23,27],22,30]: 18*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(18) =< V1
aux(19) =< V10
aux(53) =< V
it(23) =< aux(53)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V>=3,V10>=2,V1>=V10] 

* Chain [[25],[23,27],21,30]: 18*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(18) =< V1
aux(55) =< V10
aux(56) =< V
it(23) =< aux(56)
s(70) =< aux(55)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(55)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=0,V>=3,V10>=2,V1>=V10+1] 

* Chain [[25],[19,20],30]: 14*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1
  Such that:aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(57) =< V
it(19) =< aux(57)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [Out=0,V>=2,V10>=2,V1>=V10] 

* Chain [[25],[19,20],22,30]: 15*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(58) =< V
it(19) =< aux(58)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [Out=0,V>=3,V10>=2,V1+2>=3*V10] 

* Chain [[25],[19,20],21,30]: 15*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(7) =< V1
aux(11) =< V1-V10+1
aux(38) =< V10
aux(59) =< V
it(19) =< aux(59)
s(70) =< aux(38)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(38)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [Out=0,V>=3,V10>=2,V1+3>=3*V10] 

* Chain [[25],30]: 4*it(25)+1
  Such that:aux(60) =< V
it(25) =< aux(60)

  with precondition: [Out=0,V1>=0,V>=1,V10>=0] 

* Chain [[25],29]: 4*it(25)+0
  Such that:aux(61) =< V
it(25) =< aux(61)

  with precondition: [Out=0,V1>=0,V>=1,V10>=0] 

* Chain [[25],28,30]: 5*it(25)+2*s(74)+5*s(76)+6
  Such that:aux(45) =< 1
aux(62) =< V
it(25) =< aux(62)
s(74) =< aux(45)

  with precondition: [V10=1,Out=0,V1>=1,V>=2] 

* Chain [[25],26,30]: 5*it(25)+1*s(84)+4
  Such that:s(84) =< 1
aux(63) =< V
it(25) =< aux(63)

  with precondition: [Out=0,V1>=0,V>=2,V10>=0] 

* Chain [[25],26,29]: 5*it(25)+1*s(84)+3
  Such that:s(84) =< 1
aux(64) =< V
it(25) =< aux(64)

  with precondition: [Out=0,V1>=0,V>=2,V10>=0] 

* Chain [[25],24,30]: 5*it(25)+1*s(80)+1*s(81)+1*s(82)+6
  Such that:s(80) =< 1
s(82) =< V10
aux(65) =< V
it(25) =< aux(65)

  with precondition: [Out=0,V1>=1,V>=2,V10>=1] 

* Chain [[25],22,30]: 5*it(25)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(66) =< V
it(25) =< aux(66)

  with precondition: [Out=0,V>=2,V10>=2,V1>=V10] 

* Chain [[25],21,30]: 5*it(25)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
s(70) =< V10
aux(67) =< V
it(25) =< aux(67)

  with precondition: [Out=0,V>=2,V10>=2,V1>=V10+1] 

* Chain [[23,27],[19,20],30]: 23*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1
  Such that:aux(11) =< V1-V10+1
aux(25) =< V1
aux(26) =< V
aux(27) =< V10
it(19) =< aux(26)
aux(10) =< aux(25)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(27)
s(31) =< it(19)*aux(25)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(25)+1
s(53) =< it(19)*aux(25)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V>=2,V10>=2,V1>=V10] 

* Chain [[23,27],[19,20],22,30]: 24*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(11) =< V1-V10+1
aux(33) =< V1
aux(34) =< V
aux(35) =< V10
it(19) =< aux(34)
aux(10) =< aux(33)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(35)
s(31) =< it(19)*aux(33)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(33)+1
s(53) =< it(19)*aux(33)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V>=3,V10>=2,V1+2>=3*V10] 

* Chain [[23,27],[19,20],21,30]: 24*it(19)+2*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(53)+1*s(56)+4*s(57)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(11) =< V1-V10+1
aux(39) =< V1
aux(40) =< V
aux(41) =< V10
it(19) =< aux(40)
s(70) =< aux(41)
aux(10) =< aux(39)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(41)
s(31) =< it(19)*aux(39)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)
aux(22) =< aux(39)+1
s(53) =< it(19)*aux(39)
s(58) =< it(19)*aux(22)
s(56) =< it(19)*aux(10)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V>=3,V10>=2,V1+3>=3*V10] 

* Chain [[23,27],30]: 13*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1
  Such that:aux(18) =< V1
aux(19) =< V10
aux(43) =< V
it(23) =< aux(43)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [V>=1,V10>=1,Out>=1,V1>=Out] 

* Chain [[23,27],28,30]: 14*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+2*s(74)+5*s(76)+6
  Such that:aux(18) =< V1
aux(46) =< 1
aux(47) =< V
it(23) =< aux(47)
s(74) =< aux(46)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(46)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [V10=1,V>=2,Out>=1,V1>=Out] 

* Chain [[23,27],24,30]: 14*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(80)+1*s(81)+1*s(82)+6
  Such that:s(80) =< 1
aux(18) =< V1
aux(49) =< V
aux(50) =< V10
it(23) =< aux(49)
s(82) =< aux(50)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(50)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V1>=1,V>=2,V10>=1] 

* Chain [[23,27],22,30]: 14*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(18) =< V1
aux(19) =< V10
aux(52) =< V
it(23) =< aux(52)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(19)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V>=2,V10>=2,V1>=V10] 

* Chain [[23,27],21,30]: 14*it(23)+1*s(53)+1*s(54)+1*s(56)+4*s(57)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(18) =< V1
aux(54) =< V
aux(55) =< V10
it(23) =< aux(54)
s(70) =< aux(55)
aux(22) =< aux(18)+1
aux(21) =< aux(18)
s(54) =< it(23)*aux(55)
s(53) =< it(23)*aux(18)
s(58) =< it(23)*aux(22)
s(56) =< it(23)*aux(21)
s(56) =< s(58)
s(57) =< s(58)

  with precondition: [Out=1,V>=2,V10>=2,V1>=V10+1] 

* Chain [[19,20],30]: 10*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1
  Such that:aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(14) =< V
it(19) =< aux(14)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [V>=1,V10>=2,Out>=1,V1+5>=2*Out+2*V+V10,V1+2>=Out+V+V10] 

* Chain [[19,20],22,30]: 11*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
aux(7) =< V1
aux(11) =< V1-V10+1
aux(8) =< V10
aux(32) =< V
it(19) =< aux(32)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(8)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [V>=2,V10>=2,Out>=1,V1+8>=4*Out+3*V10,V1+4>=3*V10+2*Out] 

* Chain [[19,20],21,30]: 11*it(19)+1*s(29)+4*s(30)+2*s(33)+1*s(34)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
aux(7) =< V1
aux(11) =< V1-V10+1
aux(37) =< V
aux(38) =< V10
it(19) =< aux(37)
s(70) =< aux(38)
aux(10) =< aux(7)
s(33) =< it(19)*aux(11)
s(29) =< it(19)*aux(38)
s(31) =< it(19)*aux(7)
s(35) =< it(19)*aux(10)
s(33) =< s(35)
s(34) =< s(35)
s(30) =< s(31)

  with precondition: [V>=2,V10>=2,Out>=1,V1+9>=4*Out+3*V10,V1+5>=3*V10+2*Out] 

* Chain [30]: 1
  with precondition: [V=0,V1=Out,V1>=0,V10>=0] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0,V10>=0] 

* Chain [28,30]: 1*s(73)+2*s(74)+5*s(76)+6
  Such that:aux(45) =< 1
s(73) =< V
s(74) =< aux(45)

  with precondition: [V10=1,V>=1,Out>=1,V1>=Out] 

* Chain [26,30]: 1*s(83)+1*s(84)+4
  Such that:s(84) =< 1
s(83) =< V

  with precondition: [Out=0,V1>=0,V>=1,V10>=0] 

* Chain [26,29]: 1*s(83)+1*s(84)+3
  Such that:s(84) =< 1
s(83) =< V

  with precondition: [Out=0,V1>=0,V>=1,V10>=0] 

* Chain [24,30]: 1*s(79)+1*s(80)+1*s(81)+1*s(82)+6
  Such that:s(80) =< 1
s(79) =< V
s(82) =< V10

  with precondition: [Out=1,V1>=1,V>=1,V10>=1] 

* Chain [22,30]: 1*s(63)+1*s(64)+3*s(65)+4
  Such that:s(64) =< 1
s(63) =< V

  with precondition: [V>=1,V10>=2,Out>=1,V1+2>=2*Out+V10] 

* Chain [21,30]: 1*s(68)+1*s(69)+1*s(70)+4*s(72)+6
  Such that:s(69) =< 1
s(68) =< V
s(70) =< V10

  with precondition: [V>=1,V10>=2,Out>=2,V1+3>=2*Out+V10] 


#### Cost of chains of start(V1,V,V10):
* Chain [32]: 7*s(457)+436*s(458)+2*s(462)+32*s(473)+12*s(475)+24*s(477)+26*s(478)+12*s(481)+48*s(482)+16*s(484)+16*s(486)+64*s(487)+2*s(488)+80*s(489)+6
  Such that:s(462) =< V1-V+1
aux(83) =< 1
aux(84) =< V1
aux(85) =< V1-V10+1
aux(86) =< V
aux(87) =< V10
s(457) =< aux(84)
s(458) =< aux(86)
s(473) =< aux(83)
s(475) =< aux(87)
s(476) =< aux(84)
s(477) =< s(458)*aux(85)
s(478) =< s(458)*aux(87)
s(479) =< s(458)*aux(84)
s(480) =< s(458)*s(476)
s(477) =< s(480)
s(481) =< s(480)
s(482) =< s(479)
s(483) =< aux(84)+1
s(484) =< s(458)*aux(84)
s(485) =< s(458)*s(483)
s(486) =< s(458)*s(476)
s(486) =< s(485)
s(487) =< s(485)
s(488) =< s(458)*aux(83)
s(462) =< aux(84)

  with precondition: [V1>=0,V>=0] 

* Chain [31]: 1*s(533)+1*s(534)+4*s(536)+3
  Such that:s(533) =< 1
s(534) =< V1
aux(88) =< V1+1
s(534) =< aux(88)
s(536) =< aux(88)

  with precondition: [V=1,V1>=1] 


Closed-form bounds of start(V1,V,V10): 
-------------------------------------
* Chain [32] with precondition: [V1>=0,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31] with precondition: [V=1,V1>=1] 
    - Upper bound: 5*V1+8 
    - Complexity: n 

### Maximum cost of start(V1,V,V10): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 177 ms.
   - Backward Invariants 90 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 117 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 491 ms.
   - Equation cost structures 62 ms.
   - Phase cost structures 91 ms.
   - Chain cost structures 193 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 833 ms.

