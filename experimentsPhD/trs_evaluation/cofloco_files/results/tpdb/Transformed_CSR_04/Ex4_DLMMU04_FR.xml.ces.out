
Preprocessing Cost Relations
=====================================
9. SCC does not have a single cut point : [isNat/2,isNatIList/2,isNatList/2]  
 Merged into isNatisNatIListisNatList/2

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [fun/1]
2. non_recursive  : [length/2]
3. non_recursive  : [nil/1]
4. non_recursive  : [s/2]
5. non_recursive  : [take/3]
6. non_recursive  : [zeros/1]
7. recursive [non_tail,multiple] : [activate/2]
8. non_recursive  : [and/3]
10. non_recursive  : [uLength/3]
11. non_recursive  : [uTake1/2]
12. non_recursive  : [uTake2/5]
13. non_recursive  : [start/4]
9. recursive [non_tail,multiple] : [isNatisNatIListisNatList/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into zeros/1
7. SCC is partially evaluated into activate/2
8. SCC is partially evaluated into and/3
10. SCC is partially evaluated into uLength/3
11. SCC is partially evaluated into uTake1/2
12. SCC is partially evaluated into uTake2/5
13. SCC is partially evaluated into start/4
9. SCC is partially evaluated into isNatisNatIListisNatList/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations zeros/1 
* CE 19 is refined into CE [33] 
* CE 20 is refined into CE [34] 


#### Refined cost equations zeros/1 
* CE 33: zeros(Out) = 3
     [Out=3] 
* CE 34: zeros(Out) = 1
     [Out=2] 

### Cost equations --> "Loop" of zeros/1 
* CEs [33] --> Loop 23 
* CEs [34] --> Loop 24 

#### Loops of zeros/1 
* Loop 23: zeros(Out) [Out=3] 
* Loop 24: zeros(Out) [Out=2] 

### Ranking functions of CR zeros(Out) 

#### Partial ranking functions of CR zeros(Out) 


### Resulting Chains:zeros(Out) 
* [24]
* [23]


### Merging Chains  zeros/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations activate/2 
* CE 29 is refined into CE [35,36] 
* CE 30 is refined into CE [37] 
* CE 27 is refined into CE [38] 
* CE 32 is refined into CE [39] 
* CE 31 is refined into CE [40] 
* CE 28 is refined into CE [41] 


#### Refined cost equations activate/2 
* CE 35: activate(V1,Out) = 1+ zeros(W1):1
     [W1=2,Out=2,V1=2] 
* CE 36: activate(V1,Out) = 1+ zeros(W1):2
     [W1=3,Out=3,V1=2] 
* CE 37: activate(V1,Out) = 2
     [Out=1,V1=1] 
* CE 38: activate(V1,Out) = 2
     [Out=0,V1=0] 
* CE 39: activate(A,A) = 1
     [A>=0] 
* CE 40: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 41: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of activate/2 
* CEs [41] --> Loop 25 
* CEs [40] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [35] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [38,39] --> Loop 30 

#### Loops of activate/2 
* Loop 25: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 26: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out'2>=0,V1'2>=0,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 27: activate(V1,Out) [Out=3,V1=2] 
* Loop 28: activate(V1,Out) [Out=2,V1=2] 
* Loop 29: activate(V1,Out) [Out=1,V1=1] 
* Loop 30: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [25,26]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1,26:1,26:2]:
    V1


### Resulting Chains:activate(V1,Out) 
* [30]
* [29]
* [28]
* [27]
* [multiple([25,26],[[30],[29],[28],[27]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[29],[30]] --> 1 
* [[28],[multiple([25,26],[[30],[29],[28],[27]])]] --> 2 
* [[27]] --> 3 


### Specialization of cost equations and/3 
* CE 11 is refined into CE [42] 
* CE 10 is refined into CE [43] 


#### Refined cost equations and/3 
* CE 42: and(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 43: and(A,B,B) = 1
     [B>=0,A=1] 

### Cost equations --> "Loop" of and/3 
* CEs [42] --> Loop 31 
* CEs [43] --> Loop 32 

#### Loops of and/3 
* Loop 31: and(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 32: and(A,B,B) [B>=0,A=1] 

### Ranking functions of CR and(V1,V,Out) 

#### Partial ranking functions of CR and(V1,V,Out) 


### Resulting Chains:and(V1,V,Out) 
* [32]
* [31]


### Merging Chains  and/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations isNatisNatIListisNatList/2 
* CE 14 is refined into CE [44] 
* CE 16 is refined into CE [45] 
* CE 18 is refined into CE [46] 
* CE 12 is refined into CE [47] 
* CE 17 is refined into CE [48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65] 
* CE 13 is refined into CE [66,67,68] 
* CE 15 is refined into CE [69,70,71] 


#### Refined cost equations isNatisNatIListisNatList/2 
* CE 44: isNatisNatIListisNatList(A,B) = 0
     [A>=0,B=0] 
* CE 45: isNatisNatIListisNatList(A,B) = 1
     [B=1,A=2] 
* CE 46: isNatisNatIListisNatList(A,B) = 1
     [B=1,A=1] 
* CE 47: isNatisNatIListisNatList(A,B) = 1
     [B=1,A=0] 
* CE 48: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,E):1+ isNatisNatIListisNatList(E,B)+ and(F,B,B):1
     [B>=0,E>=0,C>=0,C+E+1=A,D=1,F=1] 
* CE 49: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,E):1+ isNatisNatIListisNatList(E,F)+ and(D,F,G):2
     [F>=0,D>=0,E>=0,C>=0,C+E+1=A,G=0,B=0] 
* CE 50: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,F):2+ isNatisNatIListisNatList(F,B)+ and(G,B,B):1
     [F>=E,3*E>=2*F+1,4*E+1>=3*F,B>=0,C>=0,C+E+1=A,D=1,G=1] 
* CE 51: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,F):2+ isNatisNatIListisNatList(F,G)+ and(D,G,H):2
     [F>=E,3*E>=2*F+1,4*E+1>=3*F,G>=0,D>=0,C>=0,C+E+1=A,H=0,B=0] 
* CE 52: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,F):3+ isNatisNatIListisNatList(G,B)+ and(H,B,B):1
     [B>=0,C>=0,C+3=A,G=3,D=1,H=1,F=3,E=2] 
* CE 53: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,D)+ activate(E,F):3+ isNatisNatIListisNatList(G,H)+ and(D,H,I):2
     [H>=0,D>=0,C>=0,C+3=A,G=3,I=0,F=3,E=2,B=0] 
* CE 54: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,F):1+ isNatisNatIListisNatList(F,B)+ and(G,B,B):1
     [D>=C,3*C>=2*D+1,4*C+1>=3*D,B>=0,F>=0,C+F+1=A,E=1,G=1] 
* CE 55: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,F):1+ isNatisNatIListisNatList(F,G)+ and(E,G,H):2
     [D>=C,3*C>=2*D+1,4*C+1>=3*D,G>=0,E>=0,F>=0,C+F+1=A,H=0,B=0] 
* CE 56: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,G):2+ isNatisNatIListisNatList(G,B)+ and(H,B,B):1
     [G>=F,D>=C,3*F>=2*G+1,3*C>=2*D+1,4*F+1>=3*G,4*C+1>=3*D,B>=0,C+F+1=A,E=1,H=1] 
* CE 57: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,G):2+ isNatisNatIListisNatList(G,H)+ and(E,H,I):2
     [G>=F,D>=C,3*F>=2*G+1,3*C>=2*D+1,4*F+1>=3*G,4*C+1>=3*D,H>=0,E>=0,C+F+1=A,I=0,B=0] 
* CE 58: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,G):3+ isNatisNatIListisNatList(H,B)+ and(I,B,B):1
     [D>=C,3*C>=2*D+1,4*C+1>=3*D,B>=0,C+3=A,H=3,E=1,I=1,G=3,F=2] 
* CE 59: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,E)+ activate(F,G):3+ isNatisNatIListisNatList(H,I)+ and(E,I,J):2
     [D>=C,3*C>=2*D+1,4*C+1>=3*D,I>=0,E>=0,C+3=A,H=3,J=0,G=3,F=2,B=0] 
* CE 60: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,G):1+ isNatisNatIListisNatList(G,B)+ and(H,B,B):1
     [B>=0,G>=0,G+3=A,F=1,E=3,H=1,D=3,C=2] 
* CE 61: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,G):1+ isNatisNatIListisNatList(G,H)+ and(F,H,I):2
     [H>=0,F>=0,G>=0,G+3=A,E=3,I=0,D=3,C=2,B=0] 
* CE 62: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,H):2+ isNatisNatIListisNatList(H,B)+ and(I,B,B):1
     [H>=G,3*G>=2*H+1,4*G+1>=3*H,B>=0,G+3=A,F=1,E=3,I=1,D=3,C=2] 
* CE 63: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,H):2+ isNatisNatIListisNatList(H,I)+ and(F,I,J):2
     [H>=G,3*G>=2*H+1,4*G+1>=3*H,I>=0,F>=0,G+3=A,E=3,J=0,D=3,C=2,B=0] 
* CE 64: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,H):3+ isNatisNatIListisNatList(I,B)+ and(J,B,B):1
     [B>=0,I=3,F=1,E=3,J=1,H=3,G=2,D=3,C=2,A=5] 
* CE 65: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,F)+ activate(G,H):3+ isNatisNatIListisNatList(I,J)+ and(F,J,K):2
     [J>=0,F>=0,I=3,E=3,K=0,H=3,G=2,D=3,C=2,B=0,A=5] 
* CE 66: isNatisNatIListisNatList(A,B) = 1+ activate(C,C):1+ isNatisNatIListisNatList(C,B)
     [C>=0,C+1=A] 
* CE 67: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):2+ isNatisNatIListisNatList(D,B)
     [D>=C,3*C>=2*D+1,4*C+1>=3*D,C+1=A] 
* CE 68: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,B)
     [E=3,D=3,C=2,A=3] 
* CE 69: isNatisNatIListisNatList(A,B) = 1+ activate(A,A):1+ isNatisNatIListisNatList(A,B)
     [A>=0] 
* CE 70: isNatisNatIListisNatList(A,B) = 1+ activate(A,C):2+ isNatisNatIListisNatList(C,B)
     [C>=A,3*A>=2*C+1,4*A+1>=3*C] 
* CE 71: isNatisNatIListisNatList(A,B) = 1+ activate(C,D):3+ isNatisNatIListisNatList(E,B)
     [E=3,D=3,C=2,A=2] 

### Cost equations --> "Loop" of isNatisNatIListisNatList/2 
* CEs [67] --> Loop 33 
* CEs [70] --> Loop 34 
* CEs [66] --> Loop 35 
* CEs [68,69] --> Loop 36 
* CEs [71] --> Loop 37 
* CEs [54] --> Loop 38 
* CEs [56] --> Loop 39 
* CEs [50] --> Loop 40 
* CEs [48] --> Loop 41 
* CEs [58] --> Loop 42 
* CEs [52] --> Loop 43 
* CEs [62] --> Loop 44 
* CEs [60] --> Loop 45 
* CEs [55] --> Loop 46 
* CEs [57] --> Loop 47 
* CEs [51] --> Loop 48 
* CEs [49] --> Loop 49 
* CEs [59] --> Loop 50 
* CEs [53] --> Loop 51 
* CEs [63] --> Loop 52 
* CEs [61] --> Loop 53 
* CEs [64] --> Loop 54 
* CEs [65] --> Loop 55 
* CEs [44] --> Loop 56 
* CEs [45] --> Loop 57 
* CEs [46] --> Loop 58 
* CEs [47] --> Loop 59 

#### Loops of isNatisNatIListisNatList/2 
* Loop 33: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B)
                  [A'+1>=A,3*A>=2*A'+4,4*A>=3*A'+3] 
* Loop 34: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B)
                  [A'>=A,3*A>=2*A'+1,4*A+1>=3*A'] 
* Loop 35: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B)
                  [A>=1,A=A'+1] 
* Loop 36: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A,B)
                  [A>=0] 
* Loop 37: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B)
                  [A'=3,A=2] 
* Loop 38: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A'+A'2+1>=A,3*A>=3*A'2+2*A'+4,4*A>=4*A'2+3*A'+3,A'2>=0,B>=0,B'=1] 
* Loop 39: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A'+A'2+1>=A,3*A>=2*A'+2*A'2+5,4*A>=3*A'+3*A'2+2,12*A>=9*A'2+8*A'+13,12*A>=9*A'+8*A'2+13,A'2>=1,A'>=1,B>=0,B'=1] 
* Loop 40: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A'+A'2+1>=A,3*A>=3*A'+2*A'2+4,4*A>=4*A'+3*A'2+3,A'>=0,B>=0,B'=1] 
* Loop 41: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A>=A'+1,A'>=0,B>=0,A'+A'2+1=A,B'=1] 
* Loop 42: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A'+3>=A,3*A>=2*A'+10,4*A>=3*A'+11,B>=0,A'2=3,B'=1] 
* Loop 43: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [B>=0,A>=3,A=A'+3,A'2=3,B'=1] 
* Loop 44: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [A'2+3>=A,3*A>=2*A'2+10,4*A>=3*A'2+11,B>=0,B'=1,A'=3] 
* Loop 45: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [B>=0,A>=3,A=A'2+3,B'=1,A'=3] 
* Loop 46: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A'+A'2+1>=A,3*A>=3*A'2+2*A'+4,4*A>=4*A'2+3*A'+3,B'2>=0,A'2>=0,B'>=0,B=0] 
* Loop 47: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A'+A'2+1>=A,3*A>=2*A'+2*A'2+5,4*A>=3*A'+3*A'2+2,12*A>=9*A'2+8*A'+13,12*A>=9*A'+8*A'2+13,B'2>=0,A'2>=1,B'>=0,A'>=1,B=0] 
* Loop 48: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A'+A'2+1>=A,3*A>=3*A'+2*A'2+4,4*A>=4*A'+3*A'2+3,B'2>=0,B'>=0,A'>=0,B=0] 
* Loop 49: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A>=A'+1,B'2>=0,B'>=0,A'>=0,A'+A'2+1=A,B=0] 
* Loop 50: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A'+3>=A,3*A>=2*A'+10,4*A>=3*A'+11,B'2>=0,B'>=0,A'2=3,B=0] 
* Loop 51: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [B'2>=0,B'>=0,A>=3,A=A'+3,A'2=3,B=0] 
* Loop 52: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [A'2+3>=A,3*A>=2*A'2+10,4*A>=3*A'2+11,B'2>=0,B'>=0,A'=3,B=0] 
* Loop 53: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [B'2>=0,B'>=0,A>=3,A=A'2+3,A'=3,B=0] 
* Loop 54: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B)
                  [B>=0,A'2=3,B'=1,A'=3,A=5] 
* Loop 55: isNatisNatIListisNatList(A,B)->  isNatisNatIListisNatList(A',B')  isNatisNatIListisNatList(A'2,B'2)
                  [B'2>=0,B'>=0,A'2=3,A'=3,B=0,A=5] 
* Loop 56: isNatisNatIListisNatList(A,B) [A>=0,B=0] 
* Loop 57: isNatisNatIListisNatList(A,B) [B=1,A=2] 
* Loop 58: isNatisNatIListisNatList(A,B) [B=1,A=1] 
* Loop 59: isNatisNatIListisNatList(A,B) [B=1,A=0] 

### Ranking functions of CR isNatisNatIListisNatList(A,B) 

#### Partial ranking functions of CR isNatisNatIListisNatList(A,B) 
* Partial RF of phase [33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55]:
  - RF of loop [35:1,41:1,41:2,49:1,49:2]:
    A depends on loops [33:1,34:1,37:1,38:1,39:1,39:2,40:2,42:1,44:2,46:1,47:1,47:2,48:2,50:1,52:2] 
  - RF of loop [37:1]:
    -A+3 depends on loops [33:1,35:1,38:1,38:2,39:1,39:2,40:1,40:2,41:1,41:2,42:1,42:2,43:1,43:2,44:1,44:2,45:1,45:2,46:1,46:2,47:1,47:2,48:1,48:2,49:1,49:2,50:1,50:2,51:1,51:2,52:1,52:2,53:1,53:2,54:1,54:2,55:1,55:2] 
  - RF of loop [38:2,40:1,46:2,48:1]:
    A-1 depends on loops [33:1,34:1,37:1,38:1,39:1,39:2,40:2,42:1,44:2,46:1,47:1,47:2,48:2,50:1,52:2] 
  - RF of loop [42:2,44:1,50:2,52:1]:
    A-3 depends on loops [33:1,34:1,37:1,38:1,39:1,39:2,40:2,42:1,44:2,46:1,47:1,47:2,48:2,50:1,52:2] 
  - RF of loop [43:1,45:2,51:1,53:2]:
    A-2 depends on loops [33:1,34:1,37:1,38:1,39:1,39:2,40:2,42:1,44:2,46:1,47:1,47:2,48:2,50:1,52:2] 
  - RF of loop [54:1,54:2,55:1,55:2]:
    A/2-2 depends on loops [33:1,34:1,37:1,38:1,39:1,39:2,40:2,42:1,44:2,46:1,47:1,47:2,48:2,50:1,52:2] 


### Resulting Chains:isNatisNatIListisNatList(A,B) 
* [multiple([33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],[[],[59],[58],[57],[56]])]...
* [59]
* [58]
* [57]
* [56]


### Merging Chains  isNatisNatIListisNatList/2 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 
* [[57]] --> 3 
* [[56]] --> 4 
* [[multiple([33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],[[],[59],[58],[57],[56]])]] --> 5 


### Specialization of cost equations uLength/3 
* CE 26 is refined into CE [72] 
* CE 25 is refined into CE [73,74,75] 


#### Refined cost equations uLength/3 
* CE 72: uLength(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 73: uLength(V1,V,Out) = 3+ activate(V,V):1
     [V>=0,V+2=Out,V1=1] 
* CE 74: uLength(V1,V,Out) = 3+ activate(V,W1):2
     [W1>=V,3*V>=2*W1+1,4*V+1>=3*W1,W1+2=Out,V1=1] 
* CE 75: uLength(V1,V,Out) = 3+ activate(W1,X1):3
     [X1=3,W1=2,Out=5,V=2,V1=1] 

### Cost equations --> "Loop" of uLength/3 
* CEs [72] --> Loop 60 
* CEs [74] --> Loop 61 
* CEs [73] --> Loop 62 
* CEs [75] --> Loop 63 

#### Loops of uLength/3 
* Loop 60: uLength(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 61: uLength(V1,V,Out) [Out>=V+2,3*V+3>=2*Out,4*V+7>=3*Out,V1=1] 
* Loop 62: uLength(V1,V,Out) [V>=0,V+2=Out,V1=1] 
* Loop 63: uLength(V1,V,Out) [Out=5,V=2,V1=1] 

### Ranking functions of CR uLength(V1,V,Out) 

#### Partial ranking functions of CR uLength(V1,V,Out) 


### Resulting Chains:uLength(V1,V,Out) 
* [63]
* [62]
* [61]
* [60]


### Merging Chains  uLength/3 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 
* [[61]] --> 3 
* [[60]] --> 4 


### Specialization of cost equations uTake1/2 
* CE 22 is refined into CE [76] 
* CE 21 is refined into CE [77] 


#### Refined cost equations uTake1/2 
* CE 76: uTake1(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 77: uTake1(V1,Out) = 2
     [Out=1,V1=1] 

### Cost equations --> "Loop" of uTake1/2 
* CEs [76] --> Loop 64 
* CEs [77] --> Loop 65 

#### Loops of uTake1/2 
* Loop 64: uTake1(V1,Out) [V1>=0,Out=0] 
* Loop 65: uTake1(V1,Out) [Out=1,V1=1] 

### Ranking functions of CR uTake1(V1,Out) 

#### Partial ranking functions of CR uTake1(V1,Out) 


### Resulting Chains:uTake1(V1,Out) 
* [65]
* [64]


### Merging Chains  uTake1/2 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 


### Specialization of cost equations uTake2/5 
* CE 24 is refined into CE [78] 
* CE 23 is refined into CE [79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105] 


#### Refined cost equations uTake2/5 
* CE 78: uTake2(V1,V,V2,V3,Out) = 0
     [V3>=0,V2>=0,V>=0,V1>=0,Out=0] 
* CE 79: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,V):1+ activate(V3,V3):1
     [V3>=0,V>=0,V2>=0,V+V2+V3+2=Out,V1=1] 
* CE 80: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,V):1+ activate(V3,W3):2
     [W3>=V3,3*V3>=2*W3+1,4*V3+1>=3*W3,V>=0,V2>=0,V+V2+W3+2=Out,V1=1] 
* CE 81: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,V):1+ activate(W3,X3):3
     [V>=0,V2>=0,V+V2+5=Out,X3=3,W3=2,V3=2,V1=1] 
* CE 82: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,W3):2+ activate(V3,V3):1
     [W3>=V,3*V>=2*W3+1,4*V+1>=3*W3,V3>=0,V2>=0,V2+V3+W3+2=Out,V1=1] 
* CE 83: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,W3):2+ activate(V3,X3):2
     [X3>=V3,W3>=V,3*V3>=2*X3+1,3*V>=2*W3+1,4*V3+1>=3*X3,4*V+1>=3*W3,V2>=0,V2+W3+X3+2=Out,V1=1] 
* CE 84: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(V,W3):2+ activate(X3,Y3):3
     [W3>=V,3*V>=2*W3+1,4*V+1>=3*W3,V2>=0,V2+W3+5=Out,Y3=3,X3=2,V3=2,V1=1] 
* CE 85: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(W3,X3):3+ activate(V3,V3):1
     [V3>=0,V2>=0,V2+V3+5=Out,X3=3,W3=2,V=2,V1=1] 
* CE 86: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(W3,X3):3+ activate(V3,Y3):2
     [Y3>=V3,3*V3>=2*Y3+1,4*V3+1>=3*Y3,V2>=0,V2+Y3+5=Out,X3=3,W3=2,V=2,V1=1] 
* CE 87: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,V2):1+ activate(W3,X3):3+ activate(Y3,Z3):3
     [V2>=0,V2+8=Out,Z3=3,Y3=2,X3=3,W3=2,V3=2,V=2,V1=1] 
* CE 88: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,V):1+ activate(V3,V3):1
     [W3>=V2,3*V2>=2*W3+1,4*V2+1>=3*W3,V3>=0,V>=0,V+V3+W3+2=Out,V1=1] 
* CE 89: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,V):1+ activate(V3,X3):2
     [X3>=V3,W3>=V2,3*V3>=2*X3+1,3*V2>=2*W3+1,4*V3+1>=3*X3,4*V2+1>=3*W3,V>=0,V+W3+X3+2=Out,V1=1] 
* CE 90: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,V):1+ activate(X3,Y3):3
     [W3>=V2,3*V2>=2*W3+1,4*V2+1>=3*W3,V>=0,V+W3+5=Out,Y3=3,X3=2,V3=2,V1=1] 
* CE 91: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,X3):2+ activate(V3,V3):1
     [X3>=V,W3>=V2,3*V>=2*X3+1,3*V2>=2*W3+1,4*V+1>=3*X3,4*V2+1>=3*W3,V3>=0,V3+W3+X3+2=Out,V1=1] 
* CE 92: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,X3):2+ activate(V3,Y3):2
     [Y3>=V3,X3>=V,W3>=V2,3*V3>=2*Y3+1,3*V>=2*X3+1,3*V2>=2*W3+1,4*V3+1>=3*Y3,4*V+1>=3*X3,4*V2+1>=3*W3,W3+X3+Y3+2=Out,V1=1] 
* CE 93: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(V,X3):2+ activate(Y3,Z3):3
     [X3>=V,W3>=V2,3*V>=2*X3+1,3*V2>=2*W3+1,4*V+1>=3*X3,4*V2+1>=3*W3,W3+X3+5=Out,Z3=3,Y3=2,V3=2,V1=1] 
* CE 94: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(X3,Y3):3+ activate(V3,V3):1
     [W3>=V2,3*V2>=2*W3+1,4*V2+1>=3*W3,V3>=0,V3+W3+5=Out,Y3=3,X3=2,V=2,V1=1] 
* CE 95: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(X3,Y3):3+ activate(V3,Z3):2
     [Z3>=V3,W3>=V2,3*V3>=2*Z3+1,3*V2>=2*W3+1,4*V3+1>=3*Z3,4*V2+1>=3*W3,W3+Z3+5=Out,Y3=3,X3=2,V=2,V1=1] 
* CE 96: uTake2(V1,V,V2,V3,Out) = 2+ activate(V2,W3):2+ activate(X3,Y3):3+ activate(Z3,A4):3
     [W3>=V2,3*V2>=2*W3+1,4*V2+1>=3*W3,W3+8=Out,A4=3,Z3=2,Y3=3,X3=2,V3=2,V=2,V1=1] 
* CE 97: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,V):1+ activate(V3,V3):1
     [V3>=0,V>=0,V+V3+5=Out,X3=3,W3=2,V2=2,V1=1] 
* CE 98: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,V):1+ activate(V3,Y3):2
     [Y3>=V3,3*V3>=2*Y3+1,4*V3+1>=3*Y3,V>=0,V+Y3+5=Out,X3=3,W3=2,V2=2,V1=1] 
* CE 99: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,V):1+ activate(Y3,Z3):3
     [V>=0,V+8=Out,Z3=3,Y3=2,X3=3,W3=2,V3=2,V2=2,V1=1] 
* CE 100: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,Y3):2+ activate(V3,V3):1
     [Y3>=V,3*V>=2*Y3+1,4*V+1>=3*Y3,V3>=0,V3+Y3+5=Out,X3=3,W3=2,V2=2,V1=1] 
* CE 101: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,Y3):2+ activate(V3,Z3):2
     [Z3>=V3,Y3>=V,3*V3>=2*Z3+1,3*V>=2*Y3+1,4*V3+1>=3*Z3,4*V+1>=3*Y3,Y3+Z3+5=Out,X3=3,W3=2,V2=2,V1=1] 
* CE 102: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(V,Y3):2+ activate(Z3,A4):3
     [Y3>=V,3*V>=2*Y3+1,4*V+1>=3*Y3,Y3+8=Out,A4=3,Z3=2,X3=3,W3=2,V3=2,V2=2,V1=1] 
* CE 103: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(Y3,Z3):3+ activate(V3,V3):1
     [V3>=0,V3+8=Out,Z3=3,Y3=2,X3=3,W3=2,V2=2,V=2,V1=1] 
* CE 104: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(Y3,Z3):3+ activate(V3,A4):2
     [A4>=V3,3*V3>=2*A4+1,4*V3+1>=3*A4,A4+8=Out,Z3=3,Y3=2,X3=3,W3=2,V2=2,V=2,V1=1] 
* CE 105: uTake2(V1,V,V2,V3,Out) = 2+ activate(W3,X3):3+ activate(Y3,Z3):3+ activate(A4,B4):3
     [B4=3,A4=2,Z3=3,Y3=2,X3=3,W3=2,Out=11,V3=2,V2=2,V=2,V1=1] 

### Cost equations --> "Loop" of uTake2/5 
* CEs [78] --> Loop 66 
* CEs [82] --> Loop 67 
* CEs [92] --> Loop 68 
* CEs [91] --> Loop 69 
* CEs [83] --> Loop 70 
* CEs [88] --> Loop 71 
* CEs [89] --> Loop 72 
* CEs [80] --> Loop 73 
* CEs [79] --> Loop 74 
* CEs [84] --> Loop 75 
* CEs [93] --> Loop 76 
* CEs [90] --> Loop 77 
* CEs [81] --> Loop 78 
* CEs [100] --> Loop 79 
* CEs [101] --> Loop 80 
* CEs [98] --> Loop 81 
* CEs [97] --> Loop 82 
* CEs [102] --> Loop 83 
* CEs [99] --> Loop 84 
* CEs [94] --> Loop 85 
* CEs [95] --> Loop 86 
* CEs [86] --> Loop 87 
* CEs [85] --> Loop 88 
* CEs [96] --> Loop 89 
* CEs [87] --> Loop 90 
* CEs [104] --> Loop 91 
* CEs [103] --> Loop 92 
* CEs [105] --> Loop 93 

#### Loops of uTake2/5 
* Loop 66: uTake2(V1,V,V2,V3,Out) [V3>=0,V2>=0,V>=0,V1>=0,Out=0] 
* Loop 67: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V2+2*V3+3*V+3>=2*Out,3*V2+3*V3+4*V+7>=3*Out,V3>=0,V2>=0,V1=1] 
* Loop 68: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,3*V+3*V2+3*V3+1>=2*Out,4*V+4*V2+4*V3+9>=3*Out,8*V3+9*V+9*V2+8>=6*Out,8*V2+9*V+9*V3+8>=6*Out,8*V2+8*V3+9*V+13>=6*Out,8*V+9*V2+9*V3+8>=6*Out,8*V+8*V3+9*V2+13>=6*Out,8*V+8*V2+9*V3+13>=6*Out,V3>=1,V2>=1,V>=1,V1=1] 
* Loop 69: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V3+3*V+3*V2+2>=2*Out,3*V3+4*V+4*V2+8>=3*Out,6*V3+8*V2+9*V+11>=6*Out,6*V3+8*V+9*V2+11>=6*Out,V3>=0,V2>=1,V>=1,V1=1] 
* Loop 70: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V2+3*V+3*V3+2>=2*Out,3*V2+4*V+4*V3+8>=3*Out,6*V2+8*V3+9*V+11>=6*Out,6*V2+8*V+9*V3+11>=6*Out,V3>=1,V2>=0,V>=1,V1=1] 
* Loop 71: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V+2*V3+3*V2+3>=2*Out,3*V+3*V3+4*V2+7>=3*Out,V3>=0,V>=0,V1=1] 
* Loop 72: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V+3*V2+3*V3+2>=2*Out,3*V+4*V2+4*V3+8>=3*Out,6*V+8*V3+9*V2+11>=6*Out,6*V+8*V2+9*V3+11>=6*Out,V3>=1,V2>=1,V>=0,V1=1] 
* Loop 73: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+V3+2,2*V+2*V2+3*V3+3>=2*Out,3*V+3*V2+4*V3+7>=3*Out,V2>=0,V>=0,V1=1] 
* Loop 74: uTake2(V1,V,V2,V3,Out) [V3>=0,V2>=0,V>=0,V+V2+V3+2=Out,V1=1] 
* Loop 75: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+5,2*V2+3*V+9>=2*Out,3*V2+4*V+16>=3*Out,V2>=0,V3=2,V1=1] 
* Loop 76: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+5,3*V+3*V2+8>=2*Out,4*V+4*V2+17>=3*Out,8*V2+9*V+29>=6*Out,8*V+9*V2+29>=6*Out,V2>=1,V>=1,V3=2,V1=1] 
* Loop 77: uTake2(V1,V,V2,V3,Out) [Out>=V+V2+5,2*V+3*V2+9>=2*Out,3*V+4*V2+16>=3*Out,V>=0,V3=2,V1=1] 
* Loop 78: uTake2(V1,V,V2,V3,Out) [V2>=0,V>=0,V+V2+5=Out,V3=2,V1=1] 
* Loop 79: uTake2(V1,V,V2,V3,Out) [Out>=V+V3+5,2*V3+3*V+9>=2*Out,3*V3+4*V+16>=3*Out,V3>=0,V2=2,V1=1] 
* Loop 80: uTake2(V1,V,V2,V3,Out) [Out>=V+V3+5,3*V+3*V3+8>=2*Out,4*V+4*V3+17>=3*Out,8*V3+9*V+29>=6*Out,8*V+9*V3+29>=6*Out,V3>=1,V>=1,V2=2,V1=1] 
* Loop 81: uTake2(V1,V,V2,V3,Out) [Out>=V+V3+5,2*V+3*V3+9>=2*Out,3*V+4*V3+16>=3*Out,V>=0,V2=2,V1=1] 
* Loop 82: uTake2(V1,V,V2,V3,Out) [V3>=0,V>=0,V+V3+5=Out,V2=2,V1=1] 
* Loop 83: uTake2(V1,V,V2,V3,Out) [Out>=V+8,3*V+15>=2*Out,4*V+25>=3*Out,V3=2,V2=2,V1=1] 
* Loop 84: uTake2(V1,V,V2,V3,Out) [V>=0,V+8=Out,V3=2,V2=2,V1=1] 
* Loop 85: uTake2(V1,V,V2,V3,Out) [Out>=V2+V3+5,2*V3+3*V2+9>=2*Out,3*V3+4*V2+16>=3*Out,V3>=0,V=2,V1=1] 
* Loop 86: uTake2(V1,V,V2,V3,Out) [Out>=V2+V3+5,3*V2+3*V3+8>=2*Out,4*V2+4*V3+17>=3*Out,8*V3+9*V2+29>=6*Out,8*V2+9*V3+29>=6*Out,V3>=1,V2>=1,V=2,V1=1] 
* Loop 87: uTake2(V1,V,V2,V3,Out) [Out>=V2+V3+5,2*V2+3*V3+9>=2*Out,3*V2+4*V3+16>=3*Out,V2>=0,V=2,V1=1] 
* Loop 88: uTake2(V1,V,V2,V3,Out) [V3>=0,V2>=0,V2+V3+5=Out,V=2,V1=1] 
* Loop 89: uTake2(V1,V,V2,V3,Out) [Out>=V2+8,3*V2+15>=2*Out,4*V2+25>=3*Out,V3=2,V=2,V1=1] 
* Loop 90: uTake2(V1,V,V2,V3,Out) [V2>=0,V2+8=Out,V3=2,V=2,V1=1] 
* Loop 91: uTake2(V1,V,V2,V3,Out) [Out>=V3+8,3*V3+15>=2*Out,4*V3+25>=3*Out,V2=2,V=2,V1=1] 
* Loop 92: uTake2(V1,V,V2,V3,Out) [V3>=0,V3+8=Out,V2=2,V=2,V1=1] 
* Loop 93: uTake2(V1,V,V2,V3,Out) [Out=11,V3=2,V2=2,V=2,V1=1] 

### Ranking functions of CR uTake2(V1,V,V2,V3,Out) 

#### Partial ranking functions of CR uTake2(V1,V,V2,V3,Out) 


### Resulting Chains:uTake2(V1,V,V2,V3,Out) 
* [93]
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]


### Merging Chains  uTake2/5 into  External patterns of execution 
* [[93]] --> 1 
* [[92]] --> 2 
* [[91]] --> 3 
* [[90]] --> 4 
* [[89]] --> 5 
* [[88]] --> 6 
* [[87]] --> 7 
* [[86]] --> 8 
* [[85]] --> 9 
* [[84]] --> 10 
* [[83]] --> 11 
* [[82]] --> 12 
* [[81]] --> 13 
* [[80]] --> 14 
* [[79]] --> 15 
* [[78]] --> 16 
* [[77]] --> 17 
* [[76]] --> 18 
* [[75]] --> 19 
* [[74]] --> 20 
* [[73]] --> 21 
* [[72]] --> 22 
* [[71]] --> 23 
* [[70]] --> 24 
* [[69]] --> 25 
* [[68]] --> 26 
* [[67]] --> 27 
* [[66]] --> 28 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [106,107] 
* CE 3 is refined into CE [108,109,110,111,112] 
* CE 4 is refined into CE [113,114] 
* CE 5 is refined into CE [115,116] 
* CE 6 is refined into CE [117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144] 
* CE 7 is refined into CE [145,146,147,148] 
* CE 8 is refined into CE [149] 
* CE 9 is refined into CE [150,151,152] 


#### Refined cost equations start/4 
* CE 106: start(V1,V,V2,V3) = 0+ and(W3,V,V):1
     [V>=0,W3=1,V1=1] 
* CE 107: start(V1,V,V2,V3) = 0+ and(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 108: start(V1,V,V2,V3) = 0+ isNatisNatIListisNatList(W3,X3):1
     [X3=1,W3=0,V1=0] 
* CE 109: start(V1,V,V2,V3) = 0+ isNatisNatIListisNatList(W3,X3):2
     [X3=1,W3=1,V1=1] 
* CE 110: start(V1,V,V2,V3) = 0+ isNatisNatIListisNatList(W3,X3):3
     [X3=1,W3=2,V1=2] 
* CE 111: start(V1,V,V2,V3) = 0+ isNatisNatIListisNatList(V1,W3):4
     [V1>=0,W3=0] 
* CE 112: start(V1,V,V2,V3) = 0+ isNatisNatIListisNatList(V1,W3):5
     [V1>=0] 
* CE 113: start(V1,V,V2,V3) = 0+ zeros(W3):1
     [W3=2] 
* CE 114: start(V1,V,V2,V3) = 0+ zeros(W3):2
     [W3=3] 
* CE 115: start(V1,V,V2,V3) = 0+ uTake1(W3,X3):1
     [X3=1,W3=1,V1=1] 
* CE 116: start(V1,V,V2,V3) = 0+ uTake1(V1,W3):2
     [V1>=0,W3=0] 
* CE 117: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,Y3,Z3,A4):1
     [A4=11,Z3=2,Y3=2,X3=2,W3=1,V3=2,V2=2,V=2,V1=1] 
* CE 118: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,Y3,Z3,A4):2
     [A4>=8,A4=Z3+8,A4=V3+8,Y3=2,X3=2,W3=1,V2=2,V=2,V1=1] 
* CE 119: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,Y3,V3,Z3):3
     [Z3>=V3+8,3*V3+15>=2*Z3,4*V3+25>=3*Z3,Y3=2,X3=2,W3=1,V2=2,V=2,V1=1] 
* CE 120: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,Y3,Z3,A4):4
     [A4>=8,A4=Y3+8,A4=V2+8,Z3=2,X3=2,W3=1,V3=2,V=2,V1=1] 
* CE 121: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,V2,Y3,Z3):5
     [Z3>=V2+8,3*V2+15>=2*Z3,4*V2+25>=3*Z3,Y3=2,X3=2,W3=1,V3=2,V=2,V1=1] 
* CE 122: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,V2,Y3,Z3):6
     [Z3>=V2+5,V2>=0,Z3=V2+Y3+5,Z3=V2+V3+5,X3=2,W3=1,V=2,V1=1] 
* CE 123: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,V2,V3,Y3):7
     [Y3>=V2+V3+5,2*V2+3*V3+9>=2*Y3,3*V2+4*V3+16>=3*Y3,V2>=0,X3=2,W3=1,V=2,V1=1] 
* CE 124: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,V2,V3,Y3):8
     [Y3>=V2+V3+5,3*V2+3*V3+8>=2*Y3,4*V2+4*V3+17>=3*Y3,8*V3+9*V2+29>=6*Y3,8*V2+9*V3+29>=6*Y3,V3>=1,V2>=1,X3=2,W3=1,V=2,V1=1] 
* CE 125: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,V2,V3,Y3):9
     [Y3>=V2+V3+5,2*V3+3*V2+9>=2*Y3,3*V3+4*V2+16>=3*Y3,V3>=0,X3=2,W3=1,V=2,V1=1] 
* CE 126: start(V1,V,V2,V3) = 0+ uTake2(W3,X3,Y3,Z3,A4):10
     [A4>=8,A4=X3+8,A4=V+8,Z3=2,Y3=2,W3=1,V3=2,V2=2,V1=1] 
* CE 127: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,Y3,Z3):11
     [Z3>=V+8,3*V+15>=2*Z3,4*V+25>=3*Z3,Y3=2,X3=2,W3=1,V3=2,V2=2,V1=1] 
* CE 128: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,Y3,Z3):12
     [Z3>=V+5,V>=0,Z3=V+Y3+5,Z3=V+V3+5,X3=2,W3=1,V2=2,V1=1] 
* CE 129: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,V3,Y3):13
     [Y3>=V+V3+5,2*V+3*V3+9>=2*Y3,3*V+4*V3+16>=3*Y3,V>=0,X3=2,W3=1,V2=2,V1=1] 
* CE 130: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,V3,Y3):14
     [Y3>=V+V3+5,3*V+3*V3+8>=2*Y3,4*V+4*V3+17>=3*Y3,8*V3+9*V+29>=6*Y3,8*V+9*V3+29>=6*Y3,V3>=1,V>=1,X3=2,W3=1,V2=2,V1=1] 
* CE 131: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,V3,Y3):15
     [Y3>=V+V3+5,2*V3+3*V+9>=2*Y3,3*V3+4*V+16>=3*Y3,V3>=0,X3=2,W3=1,V2=2,V1=1] 
* CE 132: start(V1,V,V2,V3) = 0+ uTake2(W3,V,X3,Y3,Z3):16
     [Z3>=V+5,V>=0,Z3=V+X3+5,Z3=V+V2+5,Y3=2,W3=1,V3=2,V1=1] 
* CE 133: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,X3,Y3):17
     [Y3>=V+V2+5,2*V+3*V2+9>=2*Y3,3*V+4*V2+16>=3*Y3,V>=0,X3=2,W3=1,V3=2,V1=1] 
* CE 134: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,X3,Y3):18
     [Y3>=V+V2+5,3*V+3*V2+8>=2*Y3,4*V+4*V2+17>=3*Y3,8*V2+9*V+29>=6*Y3,8*V+9*V2+29>=6*Y3,V2>=1,V>=1,X3=2,W3=1,V3=2,V1=1] 
* CE 135: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,X3,Y3):19
     [Y3>=V+V2+5,2*V2+3*V+9>=2*Y3,3*V2+4*V+16>=3*Y3,V2>=0,X3=2,W3=1,V3=2,V1=1] 
* CE 136: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,X3,Y3):20
     [Y3>=V+V2+2,V2>=0,V>=0,Y3=V+V2+X3+2,Y3=V+V2+V3+2,W3=1,V1=1] 
* CE 137: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):21
     [X3>=V+V2+V3+2,2*V+2*V2+3*V3+3>=2*X3,3*V+3*V2+4*V3+7>=3*X3,V2>=0,V>=0,W3=1,V1=1] 
* CE 138: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):22
     [X3>=V+V2+V3+2,2*V+3*V2+3*V3+2>=2*X3,3*V+4*V2+4*V3+8>=3*X3,6*V+8*V3+9*V2+11>=6*X3,6*V+8*V2+9*V3+11>=6*X3,V3>=1,V2>=1,V>=0,W3=1,V1=1] 
* CE 139: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):23
     [X3>=V+V2+V3+2,2*V+2*V3+3*V2+3>=2*X3,3*V+3*V3+4*V2+7>=3*X3,V3>=0,V>=0,W3=1,V1=1] 
* CE 140: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):24
     [X3>=V+V2+V3+2,2*V2+3*V+3*V3+2>=2*X3,3*V2+4*V+4*V3+8>=3*X3,6*V2+8*V3+9*V+11>=6*X3,6*V2+8*V+9*V3+11>=6*X3,V3>=1,V2>=0,V>=1,W3=1,V1=1] 
* CE 141: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):25
     [X3>=V+V2+V3+2,2*V3+3*V+3*V2+2>=2*X3,3*V3+4*V+4*V2+8>=3*X3,6*V3+8*V2+9*V+11>=6*X3,6*V3+8*V+9*V2+11>=6*X3,V3>=0,V2>=1,V>=1,W3=1,V1=1] 
* CE 142: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):26
     [X3>=V+V2+V3+2,3*V+3*V2+3*V3+1>=2*X3,4*V+4*V2+4*V3+9>=3*X3,8*V3+9*V+9*V2+8>=6*X3,8*V2+9*V+9*V3+8>=6*X3,8*V2+8*V3+9*V+13>=6*X3,8*V+9*V2+9*V3+8>=6*X3,8*V+8*V3+9*V2+13>=6*X3,8*V+8*V2+9*V3+13>=6*X3,V3>=1,V2>=1,V>=1,W3=1,V1=1] 
* CE 143: start(V1,V,V2,V3) = 0+ uTake2(W3,V,V2,V3,X3):27
     [X3>=V+V2+V3+2,2*V2+2*V3+3*V+3>=2*X3,3*V2+3*V3+4*V+7>=3*X3,V3>=0,V2>=0,W3=1,V1=1] 
* CE 144: start(V1,V,V2,V3) = 0+ uTake2(V1,V,V2,V3,W3):28
     [V3>=0,V2>=0,V>=0,V1>=0,W3=0] 
* CE 145: start(V1,V,V2,V3) = 0+ uLength(W3,X3,Y3):1
     [Y3=5,X3=2,W3=1,V=2,V1=1] 
* CE 146: start(V1,V,V2,V3) = 0+ uLength(W3,X3,Y3):2
     [Y3>=2,Y3=X3+2,Y3=V+2,W3=1,V1=1] 
* CE 147: start(V1,V,V2,V3) = 0+ uLength(W3,V,X3):3
     [X3>=V+2,3*V+3>=2*X3,4*V+7>=3*X3,W3=1,V1=1] 
* CE 148: start(V1,V,V2,V3) = 0+ uLength(V1,V,W3):4
     [V>=0,V1>=0,W3=0] 
* CE 149: start(V1,V,V2,V3) = 1
     [] 
* CE 150: start(V1,V,V2,V3) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 151: start(V1,V,V2,V3) = 0+ activate(V1,W3):2
     [W3>=V1,3*V1>=2*W3+1,4*V1+1>=3*W3] 
* CE 152: start(V1,V,V2,V3) = 0+ activate(W3,X3):3
     [X3=3,W3=2,V1=2] 

### Cost equations --> "Loop" of start/4 
* CEs [106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152] --> Loop 94 
* CEs [112] --> Loop 95 

#### Loops of start/4 
* Loop 94: start(V1,V,V2,V3) [] 
* Loop 95: start(V1,V,V2,V3) [V1>=0] 

### Ranking functions of CR start(V1,V,V2,V3) 

#### Partial ranking functions of CR start(V1,V,V2,V3) 


### Resulting Chains:start(V1,V,V2,V3) 
* [95]...
* [94]


### Merging Chains  start/4 into  External patterns of execution 
* [[94]] --> 1 
* [[95]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of zeros(Out):
* Chain [24]: 1
  with precondition: [Out=2] 

* Chain [23]: 3
  with precondition: [Out=3] 


#### Cost of loops [25,26] 

 * loop 25:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 26:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
#### Cost of phase [25,26]:activate(V1,Out) -> [] 
2*it(25)+2*it(26)+8*it([27])+2*it([30])+0
  Such that:aux(9) =< 1
aux(10) =< V1
aux(11) =< 2*V1+1
it(25) =< aux(10)
it(26) =< aux(10)
it([27]) =< aux(10)
it(26) =< aux(11)
it([27]) =< aux(11)
it([30]) =< aux(11)
it([27]) =< it(26)+aux(9)
it([30]) =< it(26)+aux(9)

#### Cost of chains of activate(V1,Out):
* Chain [30]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [29]: 2
  with precondition: [V1=1,Out=1] 

* Chain [28]: 2
  with precondition: [V1=2,Out=2] 

* Chain [27]: 4
  with precondition: [V1=2,Out=3] 

* Chain [multiple([25,26],[[30],[29],[28],[27]])]: 2*it(25)+2*it(26)+8*it([27])+2*it([30])+0
  Such that:aux(9) =< 1
aux(10) =< V1
aux(11) =< 2*V1+1
it(25) =< aux(10)
it(26) =< aux(10)
it([27]) =< aux(10)
it(26) =< aux(11)
it([27]) =< aux(11)
it([30]) =< aux(11)
it([27]) =< it(26)+aux(9)
it([30]) =< it(26)+aux(9)

  with precondition: [4*V1+1>=3*Out,3*V1>=2*Out+1,Out>=V1] 


#### Cost of chains of and(V1,V,Out):
* Chain [32]: 1
  with precondition: [V1=1,V=Out,V>=0] 

* Chain [31]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55] 

 * loop 33:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B')] 
2*s(18)+2*s(19)+8*s(20)+2*s(21)+3
  Such that:s(15) =< 1
s(16) =< A
s(17) =< 2*A
s(18) =< s(16)
s(19) =< s(16)
s(20) =< s(16)
s(19) =< s(17)
s(20) =< s(17)
s(21) =< s(17)
s(20) =< s(19)+s(15)
s(21) =< s(19)+s(15)

 * loop 34:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B')] 
2*s(32)+2*s(33)+8*s(34)+2*s(35)+3
  Such that:s(29) =< 1
s(30) =< A
s(31) =< 2*A+1
s(32) =< s(30)
s(33) =< s(30)
s(34) =< s(30)
s(33) =< s(31)
s(34) =< s(31)
s(35) =< s(31)
s(34) =< s(33)+s(29)
s(35) =< s(33)+s(29)

 * loop 35:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B')] 
3
 * loop 36:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B')] 
5
 * loop 37:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B')] 
5
 * loop 38:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(46)+2*s(47)+8*s(48)+2*s(49)+6
  Such that:s(43) =< 1
s(44) =< A-A'2
s(45) =< 2*A-2*A'2
s(46) =< s(44)
s(47) =< s(44)
s(48) =< s(44)
s(47) =< s(45)
s(48) =< s(45)
s(49) =< s(45)
s(48) =< s(47)+s(43)
s(49) =< s(47)+s(43)

 * loop 39:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(69)+2*s(70)+8*s(71)+2*s(72)+4*s(67)+10*s(68)+6
  Such that:s(64) =< A
s(65) =< 1
s(66) =< 2*A
s(67) =< s(66)
s(68) =< s(66)
s(68) =< s(67)+s(65)
s(69) =< s(64)
s(70) =< s(64)
s(71) =< s(64)
s(70) =< s(66)
s(71) =< s(66)
s(72) =< s(66)
s(71) =< s(70)+s(65)
s(72) =< s(70)+s(65)

 * loop 40:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(83)+2*s(84)+8*s(85)+2*s(86)+6
  Such that:s(80) =< 1
s(81) =< A-A'
s(82) =< 2*A-2*A'
s(83) =< s(81)
s(84) =< s(81)
s(85) =< s(81)
s(84) =< s(82)
s(85) =< s(82)
s(86) =< s(82)
s(85) =< s(84)+s(80)
s(86) =< s(84)+s(80)

 * loop 41:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
6
 * loop 42:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(97)+2*s(98)+8*s(99)+2*s(100)+8
  Such that:s(94) =< 1
s(95) =< A
s(96) =< 2*A
s(97) =< s(95)
s(98) =< s(95)
s(99) =< s(95)
s(98) =< s(96)
s(99) =< s(96)
s(100) =< s(96)
s(99) =< s(98)+s(94)
s(100) =< s(98)+s(94)

 * loop 43:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
8
 * loop 44:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(111)+2*s(112)+8*s(113)+2*s(114)+8
  Such that:s(108) =< 1
s(109) =< A
s(110) =< 2*A
s(111) =< s(109)
s(112) =< s(109)
s(113) =< s(109)
s(112) =< s(110)
s(113) =< s(110)
s(114) =< s(110)
s(113) =< s(112)+s(108)
s(114) =< s(112)+s(108)

 * loop 45:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
8
 * loop 46:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(125)+2*s(126)+8*s(127)+2*s(128)+5
  Such that:s(122) =< 1
s(123) =< A-A'2
s(124) =< 2*A-2*A'2
s(125) =< s(123)
s(126) =< s(123)
s(127) =< s(123)
s(126) =< s(124)
s(127) =< s(124)
s(128) =< s(124)
s(127) =< s(126)+s(122)
s(128) =< s(126)+s(122)

 * loop 47:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(148)+2*s(149)+8*s(150)+2*s(151)+4*s(146)+10*s(147)+5
  Such that:s(143) =< A
s(144) =< 1
s(145) =< 2*A
s(146) =< s(145)
s(147) =< s(145)
s(147) =< s(146)+s(144)
s(148) =< s(143)
s(149) =< s(143)
s(150) =< s(143)
s(149) =< s(145)
s(150) =< s(145)
s(151) =< s(145)
s(150) =< s(149)+s(144)
s(151) =< s(149)+s(144)

 * loop 48:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(162)+2*s(163)+8*s(164)+2*s(165)+5
  Such that:s(159) =< 1
s(160) =< A-A'
s(161) =< 2*A-2*A'
s(162) =< s(160)
s(163) =< s(160)
s(164) =< s(160)
s(163) =< s(161)
s(164) =< s(161)
s(165) =< s(161)
s(164) =< s(163)+s(159)
s(165) =< s(163)+s(159)

 * loop 49:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
5
 * loop 50:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(176)+2*s(177)+8*s(178)+2*s(179)+7
  Such that:s(173) =< 1
s(174) =< A
s(175) =< 2*A
s(176) =< s(174)
s(177) =< s(174)
s(178) =< s(174)
s(177) =< s(175)
s(178) =< s(175)
s(179) =< s(175)
s(178) =< s(177)+s(173)
s(179) =< s(177)+s(173)

 * loop 51:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
7
 * loop 52:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
2*s(190)+2*s(191)+8*s(192)+2*s(193)+7
  Such that:s(187) =< 1
s(188) =< A
s(189) =< 2*A
s(190) =< s(188)
s(191) =< s(188)
s(192) =< s(188)
s(191) =< s(189)
s(192) =< s(189)
s(193) =< s(189)
s(192) =< s(191)+s(187)
s(193) =< s(191)+s(187)

 * loop 53:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
7
 * loop 54:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
10
 * loop 55:isNatisNatIListisNatList(A,B) -> [isNatisNatIListisNatList(A',B'),isNatisNatIListisNatList(A'2,B'2)] 
9
#### Cost of phase [33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55]:isNatisNatIListisNatList(A,B) -> [] 
145*it(33)+2*s(194)+2*s(195)+8*s(196)+2*s(197)+2*s(201)+2*s(202)+8*s(203)+2*s(204)+2*s(208)+2*s(209)+8*s(210)+2*s(211)+2*s(215)+2*s(216)+8*s(217)+2*s(218)+4*s(219)+10*s(220)+2*s(224)+2*s(225)+8*s(226)+2*s(227)+2*s(231)+2*s(232)+8*s(233)+2*s(234)+2*s(238)+2*s(239)+8*s(240)+2*s(241)+2*s(245)+2*s(246)+8*s(247)+2*s(248)+2*s(252)+2*s(253)+8*s(254)+2*s(255)+4*s(256)+10*s(257)+2*s(261)+2*s(262)+8*s(263)+2*s(264)+2*s(268)+2*s(269)+8*s(270)+2*s(271)+2*s(275)+2*s(276)+8*s(277)+2*s(278)+0
#### Cost of chains of isNatisNatIListisNatList(A,B):
* Chain [multiple([33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],[[],[59],[58],[57],[56]])]...: 145*it(33)+2*s(194)+2*s(195)+8*s(196)+2*s(197)+2*s(201)+2*s(202)+8*s(203)+2*s(204)+2*s(208)+2*s(209)+8*s(210)+2*s(211)+2*s(215)+2*s(216)+8*s(217)+2*s(218)+4*s(219)+10*s(220)+2*s(224)+2*s(225)+8*s(226)+2*s(227)+2*s(231)+2*s(232)+8*s(233)+2*s(234)+2*s(238)+2*s(239)+8*s(240)+2*s(241)+2*s(245)+2*s(246)+8*s(247)+2*s(248)+2*s(252)+2*s(253)+8*s(254)+2*s(255)+4*s(256)+10*s(257)+2*s(261)+2*s(262)+8*s(263)+2*s(264)+2*s(268)+2*s(269)+8*s(270)+2*s(271)+2*s(275)+2*s(276)+8*s(277)+2*s(278)+0
  with precondition: [A>=0] 

* Chain [59]: 1
  with precondition: [A=0,B=1] 

* Chain [58]: 1
  with precondition: [A=1,B=1] 

* Chain [57]: 1
  with precondition: [A=2,B=1] 

* Chain [56]: 0
  with precondition: [B=0,A>=0] 


#### Cost of chains of uLength(V1,V,Out):
* Chain [63]: 7
  with precondition: [V1=1,V=2,Out=5] 

* Chain [62]: 5
  with precondition: [V1=1,V+2=Out,V>=0] 

* Chain [61]: 2*s(285)+2*s(286)+8*s(287)+2*s(288)+5
  Such that:s(282) =< 1
s(283) =< V
s(284) =< 2*V+1
s(285) =< s(283)
s(286) =< s(283)
s(287) =< s(283)
s(286) =< s(284)
s(287) =< s(284)
s(288) =< s(284)
s(287) =< s(286)+s(282)
s(288) =< s(286)+s(282)

  with precondition: [V1=1,4*V+7>=3*Out,3*V+3>=2*Out,Out>=V+2] 

* Chain [60]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of uTake1(V1,Out):
* Chain [65]: 2
  with precondition: [V1=1,Out=1] 

* Chain [64]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of uTake2(V1,V,V2,V3,Out):
* Chain [93]: 14
  with precondition: [V1=1,V=2,V2=2,V3=2,Out=11] 

* Chain [92]: 12
  with precondition: [V1=1,V=2,V2=2,V3+8=Out,V3>=0] 

* Chain [91]: 2*s(292)+2*s(293)+8*s(294)+2*s(295)+12
  Such that:s(289) =< 1
s(290) =< V3
s(291) =< 2*V3+1
s(292) =< s(290)
s(293) =< s(290)
s(294) =< s(290)
s(293) =< s(291)
s(294) =< s(291)
s(295) =< s(291)
s(294) =< s(293)+s(289)
s(295) =< s(293)+s(289)

  with precondition: [V1=1,V=2,V2=2,4*V3+25>=3*Out,3*V3+15>=2*Out,Out>=V3+8] 

* Chain [90]: 12
  with precondition: [V1=1,V=2,V3=2,V2+8=Out,V2>=0] 

* Chain [89]: 2*s(299)+2*s(300)+8*s(301)+2*s(302)+12
  Such that:s(296) =< 1
s(297) =< V2
s(298) =< 2*V2+1
s(299) =< s(297)
s(300) =< s(297)
s(301) =< s(297)
s(300) =< s(298)
s(301) =< s(298)
s(302) =< s(298)
s(301) =< s(300)+s(296)
s(302) =< s(300)+s(296)

  with precondition: [V1=1,V=2,V3=2,4*V2+25>=3*Out,3*V2+15>=2*Out,Out>=V2+8] 

* Chain [88]: 10
  with precondition: [V1=1,V=2,V2+V3+5=Out,V2>=0,V3>=0] 

* Chain [87]: 2*s(306)+2*s(307)+8*s(308)+2*s(309)+10
  Such that:s(303) =< 1
s(304) =< V3
s(305) =< 2*V3+1
s(306) =< s(304)
s(307) =< s(304)
s(308) =< s(304)
s(307) =< s(305)
s(308) =< s(305)
s(309) =< s(305)
s(308) =< s(307)+s(303)
s(309) =< s(307)+s(303)

  with precondition: [V1=1,V=2,V2>=0,3*V2+4*V3+16>=3*Out,2*V2+3*V3+9>=2*Out,Out>=V2+V3+5] 

* Chain [86]: 2*s(313)+2*s(314)+8*s(315)+2*s(316)+2*s(320)+2*s(321)+8*s(322)+2*s(323)+10
  Such that:s(311) =< V2
s(312) =< 2*V2+1
s(318) =< V3
s(319) =< 2*V3+1
aux(133) =< 1
s(320) =< s(318)
s(321) =< s(318)
s(322) =< s(318)
s(321) =< s(319)
s(322) =< s(319)
s(323) =< s(319)
s(322) =< s(321)+aux(133)
s(323) =< s(321)+aux(133)
s(313) =< s(311)
s(314) =< s(311)
s(315) =< s(311)
s(314) =< s(312)
s(315) =< s(312)
s(316) =< s(312)
s(315) =< s(314)+aux(133)
s(316) =< s(314)+aux(133)

  with precondition: [V1=1,V=2,V2>=1,V3>=1,8*V2+9*V3+29>=6*Out,8*V3+9*V2+29>=6*Out,4*V2+4*V3+17>=3*Out,3*V2+3*V3+8>=2*Out,Out>=V2+V3+5] 

* Chain [85]: 2*s(327)+2*s(328)+8*s(329)+2*s(330)+10
  Such that:s(324) =< 1
s(325) =< V2
s(326) =< 2*V2+1
s(327) =< s(325)
s(328) =< s(325)
s(329) =< s(325)
s(328) =< s(326)
s(329) =< s(326)
s(330) =< s(326)
s(329) =< s(328)+s(324)
s(330) =< s(328)+s(324)

  with precondition: [V1=1,V=2,V3>=0,3*V3+4*V2+16>=3*Out,2*V3+3*V2+9>=2*Out,Out>=V2+V3+5] 

* Chain [84]: 12
  with precondition: [V1=1,V2=2,V3=2,V+8=Out,V>=0] 

* Chain [83]: 2*s(334)+2*s(335)+8*s(336)+2*s(337)+12
  Such that:s(331) =< 1
s(332) =< V
s(333) =< 2*V+1
s(334) =< s(332)
s(335) =< s(332)
s(336) =< s(332)
s(335) =< s(333)
s(336) =< s(333)
s(337) =< s(333)
s(336) =< s(335)+s(331)
s(337) =< s(335)+s(331)

  with precondition: [V1=1,V2=2,V3=2,4*V+25>=3*Out,3*V+15>=2*Out,Out>=V+8] 

* Chain [82]: 10
  with precondition: [V1=1,V2=2,V+V3+5=Out,V>=0,V3>=0] 

* Chain [81]: 2*s(341)+2*s(342)+8*s(343)+2*s(344)+10
  Such that:s(338) =< 1
s(339) =< V3
s(340) =< 2*V3+1
s(341) =< s(339)
s(342) =< s(339)
s(343) =< s(339)
s(342) =< s(340)
s(343) =< s(340)
s(344) =< s(340)
s(343) =< s(342)+s(338)
s(344) =< s(342)+s(338)

  with precondition: [V1=1,V2=2,V>=0,3*V+4*V3+16>=3*Out,2*V+3*V3+9>=2*Out,Out>=V+V3+5] 

* Chain [80]: 2*s(348)+2*s(349)+8*s(350)+2*s(351)+2*s(355)+2*s(356)+8*s(357)+2*s(358)+10
  Such that:s(346) =< V
s(347) =< 2*V+1
s(353) =< V3
s(354) =< 2*V3+1
aux(134) =< 1
s(355) =< s(353)
s(356) =< s(353)
s(357) =< s(353)
s(356) =< s(354)
s(357) =< s(354)
s(358) =< s(354)
s(357) =< s(356)+aux(134)
s(358) =< s(356)+aux(134)
s(348) =< s(346)
s(349) =< s(346)
s(350) =< s(346)
s(349) =< s(347)
s(350) =< s(347)
s(351) =< s(347)
s(350) =< s(349)+aux(134)
s(351) =< s(349)+aux(134)

  with precondition: [V1=1,V2=2,V>=1,V3>=1,8*V+9*V3+29>=6*Out,8*V3+9*V+29>=6*Out,4*V+4*V3+17>=3*Out,3*V+3*V3+8>=2*Out,Out>=V+V3+5] 

* Chain [79]: 2*s(362)+2*s(363)+8*s(364)+2*s(365)+10
  Such that:s(359) =< 1
s(360) =< V
s(361) =< 2*V+1
s(362) =< s(360)
s(363) =< s(360)
s(364) =< s(360)
s(363) =< s(361)
s(364) =< s(361)
s(365) =< s(361)
s(364) =< s(363)+s(359)
s(365) =< s(363)+s(359)

  with precondition: [V1=1,V2=2,V3>=0,3*V3+4*V+16>=3*Out,2*V3+3*V+9>=2*Out,Out>=V+V3+5] 

* Chain [78]: 10
  with precondition: [V1=1,V3=2,V+V2+5=Out,V>=0,V2>=0] 

* Chain [77]: 2*s(369)+2*s(370)+8*s(371)+2*s(372)+10
  Such that:s(366) =< 1
s(367) =< V2
s(368) =< 2*V2+1
s(369) =< s(367)
s(370) =< s(367)
s(371) =< s(367)
s(370) =< s(368)
s(371) =< s(368)
s(372) =< s(368)
s(371) =< s(370)+s(366)
s(372) =< s(370)+s(366)

  with precondition: [V1=1,V3=2,V>=0,3*V+4*V2+16>=3*Out,2*V+3*V2+9>=2*Out,Out>=V+V2+5] 

* Chain [76]: 2*s(376)+2*s(377)+8*s(378)+2*s(379)+2*s(383)+2*s(384)+8*s(385)+2*s(386)+10
  Such that:s(381) =< V
s(382) =< 2*V+1
s(374) =< V2
s(375) =< 2*V2+1
aux(135) =< 1
s(383) =< s(381)
s(384) =< s(381)
s(385) =< s(381)
s(384) =< s(382)
s(385) =< s(382)
s(386) =< s(382)
s(385) =< s(384)+aux(135)
s(386) =< s(384)+aux(135)
s(376) =< s(374)
s(377) =< s(374)
s(378) =< s(374)
s(377) =< s(375)
s(378) =< s(375)
s(379) =< s(375)
s(378) =< s(377)+aux(135)
s(379) =< s(377)+aux(135)

  with precondition: [V1=1,V3=2,V>=1,V2>=1,8*V+9*V2+29>=6*Out,8*V2+9*V+29>=6*Out,4*V+4*V2+17>=3*Out,3*V+3*V2+8>=2*Out,Out>=V+V2+5] 

* Chain [75]: 2*s(390)+2*s(391)+8*s(392)+2*s(393)+10
  Such that:s(387) =< 1
s(388) =< V
s(389) =< 2*V+1
s(390) =< s(388)
s(391) =< s(388)
s(392) =< s(388)
s(391) =< s(389)
s(392) =< s(389)
s(393) =< s(389)
s(392) =< s(391)+s(387)
s(393) =< s(391)+s(387)

  with precondition: [V1=1,V3=2,V2>=0,3*V2+4*V+16>=3*Out,2*V2+3*V+9>=2*Out,Out>=V+V2+5] 

* Chain [74]: 8
  with precondition: [V1=1,V+V2+V3+2=Out,V>=0,V2>=0,V3>=0] 

* Chain [73]: 2*s(397)+2*s(398)+8*s(399)+2*s(400)+8
  Such that:s(394) =< 1
s(395) =< V3
s(396) =< 2*V3+1
s(397) =< s(395)
s(398) =< s(395)
s(399) =< s(395)
s(398) =< s(396)
s(399) =< s(396)
s(400) =< s(396)
s(399) =< s(398)+s(394)
s(400) =< s(398)+s(394)

  with precondition: [V1=1,V>=0,V2>=0,3*V+3*V2+4*V3+7>=3*Out,2*V+2*V2+3*V3+3>=2*Out,Out>=V+V2+V3+2] 

* Chain [72]: 2*s(404)+2*s(405)+8*s(406)+2*s(407)+2*s(411)+2*s(412)+8*s(413)+2*s(414)+8
  Such that:s(402) =< V2
s(403) =< 2*V2+1
s(409) =< V3
s(410) =< 2*V3+1
aux(136) =< 1
s(411) =< s(409)
s(412) =< s(409)
s(413) =< s(409)
s(412) =< s(410)
s(413) =< s(410)
s(414) =< s(410)
s(413) =< s(412)+aux(136)
s(414) =< s(412)+aux(136)
s(404) =< s(402)
s(405) =< s(402)
s(406) =< s(402)
s(405) =< s(403)
s(406) =< s(403)
s(407) =< s(403)
s(406) =< s(405)+aux(136)
s(407) =< s(405)+aux(136)

  with precondition: [V1=1,V>=0,V2>=1,V3>=1,6*V+8*V2+9*V3+11>=6*Out,6*V+8*V3+9*V2+11>=6*Out,3*V+4*V2+4*V3+8>=3*Out,2*V+3*V2+3*V3+2>=2*Out,Out>=V+V2+V3+2] 

* Chain [71]: 2*s(418)+2*s(419)+8*s(420)+2*s(421)+8
  Such that:s(415) =< 1
s(416) =< V2
s(417) =< 2*V2+1
s(418) =< s(416)
s(419) =< s(416)
s(420) =< s(416)
s(419) =< s(417)
s(420) =< s(417)
s(421) =< s(417)
s(420) =< s(419)+s(415)
s(421) =< s(419)+s(415)

  with precondition: [V1=1,V>=0,V3>=0,3*V+3*V3+4*V2+7>=3*Out,2*V+2*V3+3*V2+3>=2*Out,Out>=V+V2+V3+2] 

* Chain [70]: 2*s(425)+2*s(426)+8*s(427)+2*s(428)+2*s(432)+2*s(433)+8*s(434)+2*s(435)+8
  Such that:s(423) =< V
s(424) =< 2*V+1
s(430) =< V3
s(431) =< 2*V3+1
aux(137) =< 1
s(432) =< s(430)
s(433) =< s(430)
s(434) =< s(430)
s(433) =< s(431)
s(434) =< s(431)
s(435) =< s(431)
s(434) =< s(433)+aux(137)
s(435) =< s(433)+aux(137)
s(425) =< s(423)
s(426) =< s(423)
s(427) =< s(423)
s(426) =< s(424)
s(427) =< s(424)
s(428) =< s(424)
s(427) =< s(426)+aux(137)
s(428) =< s(426)+aux(137)

  with precondition: [V1=1,V>=1,V2>=0,V3>=1,6*V2+8*V+9*V3+11>=6*Out,6*V2+8*V3+9*V+11>=6*Out,3*V2+4*V+4*V3+8>=3*Out,2*V2+3*V+3*V3+2>=2*Out,Out>=V+V2+V3+2] 

* Chain [69]: 2*s(439)+2*s(440)+8*s(441)+2*s(442)+2*s(446)+2*s(447)+8*s(448)+2*s(449)+8
  Such that:s(444) =< V
s(445) =< 2*V+1
s(437) =< V2
s(438) =< 2*V2+1
aux(138) =< 1
s(446) =< s(444)
s(447) =< s(444)
s(448) =< s(444)
s(447) =< s(445)
s(448) =< s(445)
s(449) =< s(445)
s(448) =< s(447)+aux(138)
s(449) =< s(447)+aux(138)
s(439) =< s(437)
s(440) =< s(437)
s(441) =< s(437)
s(440) =< s(438)
s(441) =< s(438)
s(442) =< s(438)
s(441) =< s(440)+aux(138)
s(442) =< s(440)+aux(138)

  with precondition: [V1=1,V>=1,V2>=1,V3>=0,6*V3+8*V+9*V2+11>=6*Out,6*V3+8*V2+9*V+11>=6*Out,3*V3+4*V+4*V2+8>=3*Out,2*V3+3*V+3*V2+2>=2*Out,Out>=V+V2+V3+2] 

* Chain [68]: 2*s(453)+2*s(454)+8*s(455)+2*s(456)+2*s(460)+2*s(461)+8*s(462)+2*s(463)+2*s(467)+2*s(468)+8*s(469)+2*s(470)+8
  Such that:s(458) =< V
s(459) =< 2*V+1
s(451) =< V2
s(452) =< 2*V2+1
s(465) =< V3
s(466) =< 2*V3+1
aux(139) =< 1
s(467) =< s(465)
s(468) =< s(465)
s(469) =< s(465)
s(468) =< s(466)
s(469) =< s(466)
s(470) =< s(466)
s(469) =< s(468)+aux(139)
s(470) =< s(468)+aux(139)
s(460) =< s(458)
s(461) =< s(458)
s(462) =< s(458)
s(461) =< s(459)
s(462) =< s(459)
s(463) =< s(459)
s(462) =< s(461)+aux(139)
s(463) =< s(461)+aux(139)
s(453) =< s(451)
s(454) =< s(451)
s(455) =< s(451)
s(454) =< s(452)
s(455) =< s(452)
s(456) =< s(452)
s(455) =< s(454)+aux(139)
s(456) =< s(454)+aux(139)

  with precondition: [V1=1,V>=1,V2>=1,V3>=1,8*V+8*V2+9*V3+13>=6*Out,8*V+8*V3+9*V2+13>=6*Out,8*V+9*V2+9*V3+8>=6*Out,8*V2+8*V3+9*V+13>=6*Out,8*V2+9*V+9*V3+8>=6*Out,8*V3+9*V+9*V2+8>=6*Out,4*V+4*V2+4*V3+9>=3*Out,3*V+3*V2+3*V3+1>=2*Out,Out>=V+V2+V3+2] 

* Chain [67]: 2*s(474)+2*s(475)+8*s(476)+2*s(477)+8
  Such that:s(471) =< 1
s(472) =< V
s(473) =< 2*V+1
s(474) =< s(472)
s(475) =< s(472)
s(476) =< s(472)
s(475) =< s(473)
s(476) =< s(473)
s(477) =< s(473)
s(476) =< s(475)+s(471)
s(477) =< s(475)+s(471)

  with precondition: [V1=1,V2>=0,V3>=0,3*V2+3*V3+4*V+7>=3*Out,2*V2+2*V3+3*V+3>=2*Out,Out>=V+V2+V3+2] 

* Chain [66]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0,V3>=0] 


#### Cost of chains of start(V1,V,V2,V3):
* Chain [95]...: 341*s(478)+0
  with precondition: [V1>=0] 

* Chain [94]: 18*s(534)+18*s(535)+72*s(536)+18*s(537)+18*s(541)+18*s(542)+72*s(543)+18*s(544)+20*s(575)+20*s(576)+80*s(577)+20*s(578)+2*s(722)+2*s(723)+8*s(724)+2*s(725)+14
  Such that:s(720) =< V1
s(721) =< 2*V1+1
aux(140) =< 1
aux(141) =< V
aux(142) =< 2*V+1
aux(143) =< V2
aux(144) =< 2*V2+1
aux(145) =< V3
aux(146) =< 2*V3+1
s(534) =< aux(145)
s(535) =< aux(145)
s(536) =< aux(145)
s(535) =< aux(146)
s(536) =< aux(146)
s(537) =< aux(146)
s(536) =< s(535)+aux(140)
s(537) =< s(535)+aux(140)
s(541) =< aux(143)
s(542) =< aux(143)
s(543) =< aux(143)
s(542) =< aux(144)
s(543) =< aux(144)
s(544) =< aux(144)
s(543) =< s(542)+aux(140)
s(544) =< s(542)+aux(140)
s(575) =< aux(141)
s(576) =< aux(141)
s(577) =< aux(141)
s(576) =< aux(142)
s(577) =< aux(142)
s(578) =< aux(142)
s(577) =< s(576)+aux(140)
s(578) =< s(576)+aux(140)
s(722) =< s(720)
s(723) =< s(720)
s(724) =< s(720)
s(723) =< s(721)
s(724) =< s(721)
s(725) =< s(721)
s(724) =< s(723)+aux(140)
s(725) =< s(723)+aux(140)

  with precondition: [] 


Closed-form bounds of start(V1,V,V2,V3): 
-------------------------------------
* Chain [95]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [94] with precondition: [] 
    - Upper bound: nat(V1)*12+14+nat(V)*120+nat(V2)*108+nat(V3)*108+nat(2*V1+1)*2+nat(2*V+1)*20+nat(2*V2+1)*18+nat(2*V3+1)*18 
    - Complexity: n 

### Maximum cost of start(V1,V,V2,V3): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 393 ms.
   - Backward Invariants 97 ms.
   - Transitive Invariants 146 ms.
* Refinement performed in 899 ms.
* Termination proved in 332 ms.
* Upper bounds computed in 2957 ms.
   - Equation cost structures 949 ms.
   - Phase cost structures 2096 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 10 ms.
* Total analysis performed in 4717 ms.

