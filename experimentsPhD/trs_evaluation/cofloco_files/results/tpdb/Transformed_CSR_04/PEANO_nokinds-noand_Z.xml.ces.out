
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun6/1]
1. non_recursive  : [plus/3]
2. non_recursive  : [s/2]
3. non_recursive  : [activate/2]
4. non_recursive  : [fun1/2]
5. non_recursive  : [fun2/2]
6. recursive [non_tail,multiple] : [fun/3,isNat/2]
7. non_recursive  : [fun3/3]
8. non_recursive  : [fun5/4]
9. non_recursive  : [fun4/4]
10. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into activate/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into isNat/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into fun5/4
9. SCC is partially evaluated into fun4/4
10. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 9 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 11 is refined into CE [19] 


#### Refined cost equations activate/2 
* CE 17: activate(V3,Out) = 2
     [Out=0,V3=0] 
* CE 18: activate(A,A) = 2
     [A>=1] 
* CE 19: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [17,18,19] --> Loop 8 

#### Loops of activate/2 
* Loop 8: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V3,Out) 

#### Partial ranking functions of CR activate(V3,Out) 


### Resulting Chains:activate(V3,Out) 
* [8]


### Merging Chains  activate/2 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations isNat/2 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations isNat/2 
* CE 20: isNat(V3,Out) = 2+ activate(W3,W3):1+ isNat(W3,X3)
     [W3>=0,W3+1=V3,X3=0,Out=0] 
* CE 21: isNat(V3,Out) = 1
     [Out=0,V3=0] 
* CE 22: isNat(V3,Out) = 3+ activate(W3,W3):1+ isNat(W3,X3)+ activate(Y3,Y3):1+ activate(Y3,Y3):1+ isNat(Y3,Z3)
     [Y3>=0,W3>=0,W3+Y3+1=V3,Z3=0,X3=0,Out=0] 

### Cost equations --> "Loop" of isNat/2 
* CEs [22] --> Loop 9 
* CEs [21] --> Loop 10 
* CEs [20] --> Loop 11 

#### Loops of isNat/2 
* Loop 9: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3'2>=0,V3'>=0,V3'+V3'2+1=V3,Out'2=0,Out'=0,Out=0] 
* Loop 10: isNat(V3,Out) [Out=0,V3=0] 
* Loop 11: isNat(V3,Out)->  isNat(V3',Out')
                  [V3'>=0,V3'+1=V3,Out'=0,Out=0] 

### Ranking functions of CR isNat(V3,Out) 
* RF of phase [9,11]: [V3]

#### Partial ranking functions of CR isNat(V3,Out) 
* Partial RF of phase [9,11]:
  - RF of loop [9:1,9:2,11:1]:
    V3


### Resulting Chains:isNat(V3,Out) 
* [10]
* [multiple([9,11],[[10]])]


### Merging Chains  isNat/2 into  External patterns of execution 
* [[10]] --> 1 
* [[multiple([9,11],[[10]])]] --> 2 


### Specialization of cost equations fun5/4 
* CE 16 is refined into CE [23] 


#### Refined cost equations fun5/4 
* CE 23: fun5(V3,V,V4,Out) = 3+ activate(V4,V4):1+ activate(V,V):1
     [V>=0,V4>=0,V+V4+2=Out,V3=0] 

### Cost equations --> "Loop" of fun5/4 
* CEs [23] --> Loop 12 

#### Loops of fun5/4 
* Loop 12: fun5(V3,V,V4,Out) [V4>=0,V>=0,V+V4+2=Out,V3=0] 

### Ranking functions of CR fun5(V3,V,V4,Out) 

#### Partial ranking functions of CR fun5(V3,V,V4,Out) 


### Resulting Chains:fun5(V3,V,V4,Out) 
* [12]


### Merging Chains  fun5/4 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations fun4/4 
* CE 15 is refined into CE [24,25] 


#### Refined cost equations fun4/4 
* CE 24: fun4(V3,V,V4,Out) = 1+ activate(W4,X4):1+ isNat(Y4,Z4):1+ activate(A5,B5):1+ activate(C5,D5):1+ fun5(E5,F5,G5,Out):1
     [Out>=2,Out=F5+2,Out=B5+2,Out=A5+2,Out=V+2,G5=0,E5=0,D5=0,C5=0,Z4=0,Y4=0,X4=0,W4=0,V4=0,V3=0] 
* CE 25: fun4(V3,V,V4,Out) = 1+ activate(W4,X4):1+ isNat(Y4,Z4):2+ activate(V,V):1+ activate(A5,B5):1+ fun5(C5,V,D5,Out):1
     [Out>=V+3,V>=0,Out=V+D5+2,Out=V+B5+2,Out=V+A5+2,Out=V+Y4+2,Out=V+X4+2,Out=V+W4+2,Out=V+V4+2,C5=0,Z4=0,V3=0] 

### Cost equations --> "Loop" of fun4/4 
* CEs [25] --> Loop 13 
* CEs [24] --> Loop 14 

#### Loops of fun4/4 
* Loop 13: fun4(V3,V,V4,Out) [V4>=1,V>=0,V+V4+2=Out,V3=0] 
* Loop 14: fun4(V3,V,V4,Out) [V>=0,V+2=Out,V4=0,V3=0] 

### Ranking functions of CR fun4(V3,V,V4,Out) 

#### Partial ranking functions of CR fun4(V3,V,V4,Out) 


### Resulting Chains:fun4(V3,V,V4,Out) 
* [14]
* [13]


### Merging Chains  fun4/4 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [26,27] 
* CE 3 is refined into CE [28] 
* CE 4 is refined into CE [29] 
* CE 5 is refined into CE [30,31] 
* CE 6 is refined into CE [32] 
* CE 7 is refined into CE [33,34] 
* CE 8 is refined into CE [35] 


#### Refined cost equations start/3 
* CE 26: start(V3,V,V4) = 2+ activate(W4,X4):1+ isNat(Y4,Z4):1
     [Z4=0,Y4=0,X4=0,W4=0,V=0,V3=0] 
* CE 27: start(V3,V,V4) = 2+ activate(V,V):1+ isNat(V,W4):2
     [V>=1,W4=0,V3=0] 
* CE 28: start(V3,V,V4) = 1
     [] 
* CE 29: start(V3,V,V4) = 1+ activate(V,V):1
     [V>=0,V3=0] 
* CE 30: start(V3,V,V4) = 0+ fun4(W4,X4,Y4,Z4):1
     [Z4>=2,Z4=X4+2,Z4=V+2,Y4=0,W4=0,V4=0,V3=0] 
* CE 31: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):2
     [Y4>=V+3,V>=0,Y4=V+X4+2,Y4=V+V4+2,W4=0,V3=0] 
* CE 32: start(V3,V,V4) = 0+ fun5(W4,V,X4,Y4):1
     [Y4>=V+2,V>=0,Y4=V+X4+2,Y4=V+V4+2,W4=0,V3=0] 
* CE 33: start(V3,V,V4) = 0+ isNat(W4,X4):1
     [X4=0,W4=0,V3=0] 
* CE 34: start(V3,V,V4) = 0+ isNat(V3,W4):2
     [V3>=1,W4=0] 
* CE 35: start(V3,V,V4) = 0+ activate(V3,V3):1
     [V3>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [26,27,28,29,30,31,32,33,34,35] --> Loop 15 

#### Loops of start/3 
* Loop 15: start(V3,V,V4) [] 

### Ranking functions of CR start(V3,V,V4) 

#### Partial ranking functions of CR start(V3,V,V4) 


### Resulting Chains:start(V3,V,V4) 
* [15]


### Merging Chains  start/3 into  External patterns of execution 
* [[15]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of activate(V3,Out):
* Chain [8]: 2
  with precondition: [V3=Out,V3>=0] 


#### Cost of loops [9,11] 

 * loop 9:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
9
 * loop 11:isNat(V3,Out) -> [isNat(V3',Out')] 
4
#### Cost of phase [9,11]:isNat(V3,Out) -> [] 
13*it(9)+1*it([10])+0
  Such that:it([10]) =< V3+1
aux(1) =< V3
it(9) =< aux(1)

#### Cost of chains of isNat(V3,Out):
* Chain [10]: 1
  with precondition: [V3=0,Out=0] 

* Chain [multiple([9,11],[[10]])]: 13*it(9)+1*it([10])+0
  Such that:it([10]) =< V3+1
aux(1) =< V3
it(9) =< aux(1)

  with precondition: [Out=0,V3>=1] 


#### Cost of chains of fun5(V3,V,V4,Out):
* Chain [12]: 7
  with precondition: [V3=0,V+V4+2=Out,V>=0,V4>=0] 


#### Cost of chains of fun4(V3,V,V4,Out):
* Chain [14]: 15
  with precondition: [V3=0,V4=0,V+2=Out,V>=0] 

* Chain [13]: 1*s(1)+13*s(3)+14
  Such that:s(2) =< V4
s(1) =< V4+1
s(3) =< s(2)

  with precondition: [V3=0,V+V4+2=Out,V>=0,V4>=1] 


#### Cost of chains of start(V3,V,V4):
* Chain [15]: 1*s(4)+13*s(6)+1*s(8)+13*s(9)+1*s(10)+13*s(12)+15
  Such that:s(11) =< V3
s(10) =< V3+1
s(5) =< V
s(4) =< V+1
s(7) =< V4
s(8) =< V4+1
s(12) =< s(11)
s(6) =< s(5)
s(9) =< s(7)

  with precondition: [] 


Closed-form bounds of start(V3,V,V4): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: nat(V3)*13+15+nat(V)*13+nat(V4)*13+nat(V3+1)+nat(V+1)+nat(V4+1) 
    - Complexity: n 

### Maximum cost of start(V3,V,V4): nat(V3)*13+15+nat(V)*13+nat(V4)*13+nat(V3+1)+nat(V+1)+nat(V4+1) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 39 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 72 ms.
   - Equation cost structures 38 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 165 ms.

