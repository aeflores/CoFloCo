
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. non_recursive  : [s/2]
2. non_recursive  : [take/3]
3. recursive [non_tail,multiple] : [activate/2]
4. non_recursive  : [head/2]
5. non_recursive  : [fun/2]
6. non_recursive  : [sel/3]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into take/3
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into head/2
5. SCC is partially evaluated into fun/2
6. SCC is partially evaluated into sel/3
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 19 is refined into CE [23] 
* CE 20 is refined into CE [24] 


#### Refined cost equations from/2 
* CE 23: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 24: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [23] --> Loop 15 
* CEs [24] --> Loop 16 

#### Loops of from/2 
* Loop 15: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 16: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [16]
* [15]


### Merging Chains  from/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations take/3 
* CE 17 is refined into CE [25] 
* CE 18 is refined into CE [26] 


#### Refined cost equations take/3 
* CE 25: take(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 26: take(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of take/3 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 

#### Loops of take/3 
* Loop 17: take(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 18: take(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR take(V1,V,Out) 

#### Partial ranking functions of CR take(V1,V,Out) 


### Resulting Chains:take(V1,V,Out) 
* [18]
* [17]


### Merging Chains  take/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations activate/2 
* CE 16 is refined into CE [27,28] 
* CE 14 is refined into CE [29] 
* CE 15 is refined into CE [30,31] 
* CE 13 is refined into CE [32] 


#### Refined cost equations activate/2 
* CE 27: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ take(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=0,B2=1,A2=0,Out=1] 
* CE 28: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ take(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 
* CE 29: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 30: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 31: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 32: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [32] --> Loop 19 
* CEs [29,30] --> Loop 20 
* CEs [31] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of activate/2 
* Loop 19: activate(A,A) [A>=0] 
* Loop 20: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 21: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 22: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 23: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=1] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [20,21,22,23]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [20,21,22,23]:
  - RF of loop [20:1,21:1,22:1,22:2,23:1,23:2]:
    V1


### Resulting Chains:activate(V1,Out) 
* [19]
* [multiple([20,21,22,23],[[19]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[19]] --> 1 
* [[multiple([20,21,22,23],[[19]])]] --> 2 


### Specialization of cost equations head/2 
* CE 11 is refined into CE [33] 
* CE 12 is refined into CE [34] 


#### Refined cost equations head/2 
* CE 33: head(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 34: head(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 

#### Loops of head/2 
* Loop 24: head(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 25: head(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR head(V1,Out) 

#### Partial ranking functions of CR head(V1,Out) 


### Resulting Chains:head(V1,Out) 
* [25]
* [24]


### Merging Chains  head/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations fun/2 
* CE 21 is refined into CE [35,36,37,38] 
* CE 22 is refined into CE [39] 


#### Refined cost equations fun/2 
* CE 35: fun(V1,Out) = 1+ activate(W1,W1):1+ head(W1,X1):1
     [V1>=W1+1,W1>=0,X1=0,Out=0] 
* CE 36: fun(V1,Out) = 1+ activate(W1,W1):1+ head(W1,Out):2
     [W1>=Out+1,V1>=W1+1,Out>=0] 
* CE 37: fun(V1,Out) = 1+ activate(W1,X1):2+ head(X1,Y1):1
     [V1>=W1+1,X1>=1,W1>=1,Y1=0,Out=0] 
* CE 38: fun(V1,Out) = 1+ activate(W1,X1):2+ head(X1,Out):2
     [X1>=Out+1,V1>=W1+1,Out>=0,W1>=1] 
* CE 39: fun(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fun/2 
* CEs [36,38] --> Loop 26 
* CEs [35,37,39] --> Loop 27 

#### Loops of fun/2 
* Loop 26: fun(V1,Out) [Out>=0,V1>=2] 
* Loop 27: fun(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR fun(V1,Out) 

#### Partial ranking functions of CR fun(V1,Out) 


### Resulting Chains:fun(V1,Out) 
* [27]
* [26]


### Merging Chains  fun/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations sel/3 
* CE 10 is refined into CE [40] 
* CE 9 is refined into CE [41] 


#### Refined cost equations sel/3 
* CE 40: sel(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 41: sel(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 

### Cost equations --> "Loop" of sel/3 
* CEs [40] --> Loop 28 
* CEs [41] --> Loop 29 

#### Loops of sel/3 
* Loop 28: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 29: sel(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel(V1,V,Out) 

#### Partial ranking functions of CR sel(V1,V,Out) 


### Resulting Chains:sel(V1,V,Out) 
* [29]
* [28]


### Merging Chains  sel/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [42,43] 
* CE 3 is refined into CE [44,45] 
* CE 4 is refined into CE [46,47] 
* CE 5 is refined into CE [48,49] 
* CE 6 is refined into CE [50,51] 
* CE 7 is refined into CE [52] 
* CE 8 is refined into CE [53,54] 


#### Refined cost equations start/2 
* CE 42: start(V1,V) = 0+ sel(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 43: start(V1,V) = 0+ sel(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 44: start(V1,V) = 0+ head(V1,W1):1
     [V1>=0,W1=0] 
* CE 45: start(V1,V) = 0+ head(V1,W1):2
     [V1>=W1+1,W1>=0] 
* CE 46: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 47: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=1,V1>=1] 
* CE 48: start(V1,V) = 0+ take(W1,V,X1):1
     [V>=0,X1=1,W1=0,V1=0] 
* CE 49: start(V1,V) = 0+ take(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 50: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 51: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 52: start(V1,V) = 1
     [V1>=0] 
* CE 53: start(V1,V) = 0+ fun(V1,W1):1
     [V1>=0,W1=0] 
* CE 54: start(V1,V) = 0+ fun(V1,W1):2
     [W1>=0,V1>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [42,43,44,45,46,47,48,49,50,51,52,53,54] --> Loop 30 

#### Loops of start/2 
* Loop 30: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [30]


### Merging Chains  start/2 into  External patterns of execution 
* [[30]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [16]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [15]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of chains of take(V1,V,Out):
* Chain [18]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [17]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of loops [20,21,22,23] 

 * loop 20:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 21:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 22:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 23:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
#### Cost of phase [20,21,22,23]:activate(V1,Out) -> [] 
8*it(20)+1*it([19])+0
  Such that:aux(3) =< 1
aux(4) =< V1
it(20) =< aux(4)
it([19]) =< it(20)+it(20)+aux(3)

#### Cost of chains of activate(V1,Out):
* Chain [19]: 1
  with precondition: [V1=Out,V1>=0] 

* Chain [multiple([20,21,22,23],[[19]])]: 8*it(20)+1*it([19])+0
  Such that:aux(3) =< 1
aux(4) =< V1
it(20) =< aux(4)
it([19]) =< it(20)+it(20)+aux(3)

  with precondition: [V1>=1,Out>=1] 


#### Cost of chains of head(V1,Out):
* Chain [25]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [24]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of fun(V1,Out):
* Chain [27]: 8*s(3)+1*s(4)+2
  Such that:s(1) =< 1
s(2) =< V1
s(3) =< s(2)
s(4) =< s(3)+s(3)+s(1)

  with precondition: [Out=0,V1>=0] 

* Chain [26]: 8*s(7)+1*s(8)+3
  Such that:s(5) =< 1
s(6) =< V1
s(7) =< s(6)
s(8) =< s(7)+s(7)+s(5)

  with precondition: [V1>=2,Out>=0] 


#### Cost of chains of sel(V1,V,Out):
* Chain [29]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [28]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [30]: 24*s(11)+3*s(12)+3
  Such that:aux(5) =< 1
aux(6) =< V1
s(11) =< aux(6)
s(12) =< s(11)+s(11)+aux(5)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [30] with precondition: [V1>=0] 
    - Upper bound: 30*V1+6 
    - Complexity: n 

### Maximum cost of start(V1,V): 30*V1+6 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 48 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 39 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 23 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 139 ms.

