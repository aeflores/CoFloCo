
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [active/2]
1. recursive  : [f/3]
2. recursive  : [g/3]
3. recursive  : [h/2]
4. non_recursive  : [proper/2]
5. recursive  : [top/2]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into active/2
1. SCC is partially evaluated into f/3
2. SCC is partially evaluated into g/3
3. SCC is partially evaluated into h/2
4. SCC is partially evaluated into proper/2
5. SCC is partially evaluated into top/2
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations active/2 
* CE 21 is refined into CE [24] 
* CE 20 is refined into CE [25] 


#### Refined cost equations active/2 
* CE 24: active(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 25: active(V1,Out) = 1
     [Out=2,V1=0] 

### Cost equations --> "Loop" of active/2 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 

#### Loops of active/2 
* Loop 17: active(V1,Out) [V1>=0,Out=0] 
* Loop 18: active(V1,Out) [Out=2,V1=0] 

### Ranking functions of CR active(V1,Out) 

#### Partial ranking functions of CR active(V1,Out) 


### Resulting Chains:active(V1,Out) 
* [18]
* [17]


### Merging Chains  active/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations f/3 
* CE 10 is refined into CE [26] 
* CE 8 is refined into CE [27] 
* CE 9 is refined into CE [28] 


#### Refined cost equations f/3 
* CE 26: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 27: f(V1,V,Out) = 1+ f(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 28: f(V1,V,Out) = 1+ f(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of f/3 
* CEs [27] --> Loop 19 
* CEs [28] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of f/3 
* Loop 19: f(V1,V,Out)->  f(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 20: f(V1,V,Out)->  f(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 21: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 
* RF of phase [19,20]: [V1]

#### Partial ranking functions of CR f(V1,V,Out) 
* Partial RF of phase [19,20]:
  - RF of loop [19:1,20:1]:
    V1
  - RF of loop [20:1]:
    V


### Resulting Chains:f(V1,V,Out) 
* [[19,20],21]
* [21]


### Merging Chains  f/3 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[19,20]]] --> 2 


### Specialization of cost equations g/3 
* CE 19 is refined into CE [29] 
* CE 17 is refined into CE [30] 
* CE 18 is refined into CE [31] 


#### Refined cost equations g/3 
* CE 29: g(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 30: g(V1,V,Out) = 1+ g(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 31: g(V1,V,Out) = 1+ g(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of g/3 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of g/3 
* Loop 22: g(V1,V,Out)->  g(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 23: g(V1,V,Out)->  g(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 24: g(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR g(V1,V,Out) 
* RF of phase [22,23]: [V1]

#### Partial ranking functions of CR g(V1,V,Out) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1,23:1]:
    V1
  - RF of loop [23:1]:
    V


### Resulting Chains:g(V1,V,Out) 
* [[22,23],24]
* [24]


### Merging Chains  g/3 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[22,23]]] --> 2 


### Specialization of cost equations h/2 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 


#### Refined cost equations h/2 
* CE 32: h(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 33: h(V1,Out) = 1+ h(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of h/2 
* CEs [33] --> Loop 25 
* CEs [32] --> Loop 26 

#### Loops of h/2 
* Loop 25: h(V1,Out)->  h(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 26: h(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR h(V1,Out) 
* RF of phase [25]: [V1]

#### Partial ranking functions of CR h(V1,Out) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V1


### Resulting Chains:h(V1,Out) 
* [[25],26]
* [26]


### Merging Chains  h/2 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 


### Specialization of cost equations proper/2 
* CE 16 is refined into CE [34] 
* CE 14 is refined into CE [35] 
* CE 15 is refined into CE [36] 


#### Refined cost equations proper/2 
* CE 34: proper(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 35: proper(V1,Out) = 1
     [Out=2,V1=1] 
* CE 36: proper(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [34] --> Loop 27 
* CEs [35] --> Loop 28 
* CEs [36] --> Loop 29 

#### Loops of proper/2 
* Loop 27: proper(V1,Out) [V1>=0,Out=0] 
* Loop 28: proper(V1,Out) [Out=2,V1=1] 
* Loop 29: proper(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR proper(V1,Out) 

#### Partial ranking functions of CR proper(V1,Out) 


### Resulting Chains:proper(V1,Out) 
* [29]
* [28]
* [27]


### Merging Chains  proper/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 


### Specialization of cost equations top/2 
* CE 13 is refined into CE [37] 
* CE 11 is refined into CE [38,39] 
* CE 12 is refined into CE [40,41,42] 


#### Refined cost equations top/2 
* CE 37: top(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 38: top(V1,Out) = 1+ active(W1,X1):1+ top(Y1,Out)
     [Y1=2,X1=2,W1=0,V1=1] 
* CE 39: top(V1,Out) = 1+ active(W1,X1):2+ top(Y1,Out)
     [W1>=0,W1+1=V1,Y1=0,X1=0] 
* CE 40: top(V1,Out) = 1+ proper(W1,X1):1+ top(Y1,Out)
     [Y1=1,X1=1,W1=0,V1=1] 
* CE 41: top(V1,Out) = 1+ proper(W1,X1):2+ top(Y1,Out)
     [Y1=2,X1=2,W1=1,V1=2] 
* CE 42: top(V1,Out) = 1+ proper(W1,X1):3+ top(Y1,Out)
     [W1>=0,W1+1=V1,Y1=0,X1=0] 

### Cost equations --> "Loop" of top/2 
* CEs [39,42] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [40] --> Loop 33 
* CEs [37] --> Loop 34 

#### Loops of top/2 
* Loop 30: top(V1,Out)->  top(V1',Out)
                  [V1>=1,V1'=0] 
* Loop 31: top(V1,Out)->  top(V1',Out)
                  [V1'=2,V1=2] 
* Loop 32: top(V1,Out)->  top(V1',Out)
                  [V1'=2,V1=1] 
* Loop 33: top(V1,Out)->  top(V1',Out)
                  [V1'=1,V1=1] 
* Loop 34: top(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR top(V1,Out) 

#### Partial ranking functions of CR top(V1,Out) 


### Resulting Chains:top(V1,Out) 
* [[33]]...
* [[33],34]
* [[33],32,[31]]...
* [[33],32,[31],34]
* [[33],32,[31],30,34]
* [[33],32,34]
* [[33],32,30,34]
* [[33],30,34]
* [[31]]...
* [[31],34]
* [[31],30,34]
* [34]
* [32,[31]]...
* [32,[31],34]
* [32,[31],30,34]
* [32,34]
* [32,30,34]
* [30,34]


### Merging Chains  top/2 into  External patterns of execution 
* [[34,30],[34,30,32],[34,32],[34,30,[31],32],[34,[31],32],[34],[34,30,[33]],[34,30,32,[33]],[34,32,[33]],[34,30,[31],32,[33]],[34,[31],32,[33]],[34,[33]]] --> 1 
* [[34,30,[31]],[34,[31]]] --> 2 
* [[[31],32],[[33]],[[31],32,[33]]] --> 3 
* [[[31]]] --> 4 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [43,44] 
* CE 3 is refined into CE [45,46,47,48] 
* CE 4 is refined into CE [49,50,51] 
* CE 5 is refined into CE [52,53] 
* CE 6 is refined into CE [54,55] 
* CE 7 is refined into CE [56,57] 


#### Refined cost equations start/2 
* CE 43: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 44: start(V1,V) = 0+ f(V1,V,W1):2
     [V1>=W1,W1>=1,V>=0] 
* CE 45: start(V1,V) = 0+ top(V1,W1):1
     [V1>=0,W1=0] 
* CE 46: start(V1,V) = 0+ top(W1,X1):2
     [X1=0,W1=2,V1=2] 
* CE 47: start(V1,V) = 0+ top(W1,X1):3
     [W1=1,V1=1] 
* CE 48: start(V1,V) = 0+ top(W1,X1):4
     [W1=2,V1=2] 
* CE 49: start(V1,V) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 50: start(V1,V) = 0+ proper(W1,X1):2
     [X1=2,W1=1,V1=1] 
* CE 51: start(V1,V) = 0+ proper(V1,W1):3
     [V1>=0,W1=0] 
* CE 52: start(V1,V) = 0+ g(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 53: start(V1,V) = 0+ g(V1,V,W1):2
     [V1>=W1,W1>=1,V>=0] 
* CE 54: start(V1,V) = 0+ active(W1,X1):1
     [X1=2,W1=0,V1=0] 
* CE 55: start(V1,V) = 0+ active(V1,W1):2
     [V1>=0,W1=0] 
* CE 56: start(V1,V) = 0+ h(V1,W1):1
     [V1>=0,W1=0] 
* CE 57: start(V1,V) = 0+ h(V1,W1):2
     [V1>=W1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [46] --> Loop 35 
* CEs [50] --> Loop 36 
* CEs [43,44,45,49,51,52,53,54,55,56,57] --> Loop 37 
* CEs [48] --> Loop 38 
* CEs [47] --> Loop 39 

#### Loops of start/2 
* Loop 35: start(V1,V) [V1=2] 
* Loop 36: start(V1,V) [V1=1] 
* Loop 37: start(V1,V) [V1>=0] 
* Loop 38: start(V1,V) [V1=2] 
* Loop 39: start(V1,V) [V1=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [39]...
* [38]...
* [37]
* [36]
* [35]


### Merging Chains  start/2 into  External patterns of execution 
* [[36],[37]] --> 1 
* [[35]] --> 2 
* [[39]] --> 3 
* [[38]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of active(V1,Out):
* Chain [18]: 1
  with precondition: [V1=0,Out=2] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [19,20] 

 * loop 19:f(V1,V,Out) -> [f(V1',V',Out')] 
1
 * loop 20:f(V1,V,Out) -> [f(V1',V',Out')] 
1
#### Cost of phase [19,20]:f(V1,V,Out) -> [f(V1',V',Out')] 
1*it(19)+1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'
aux(1) =< V1
aux(2) =< V1-V1'
it(19) =< aux(1)
it(20) =< aux(1)
it(19) =< aux(2)
it(20) =< aux(2)

#### Cost of chains of f(V1,V,Out):
* Chain [[19,20],21]: 1*it(19)+1*it(20)+0
  Such that:aux(1) =< V1
it(20) =< V
aux(2) =< Out
it(19) =< aux(1)
it(20) =< aux(1)
it(19) =< aux(2)
it(20) =< aux(2)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [21]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [22,23] 

 * loop 22:g(V1,V,Out) -> [g(V1',V',Out')] 
1
 * loop 23:g(V1,V,Out) -> [g(V1',V',Out')] 
1
#### Cost of phase [22,23]:g(V1,V,Out) -> [g(V1',V',Out')] 
1*it(22)+1*it(23)+0
  Such that:it(23) =< V
it(23) =< V-V'
aux(3) =< V1
aux(4) =< V1-V1'
it(22) =< aux(3)
it(23) =< aux(3)
it(22) =< aux(4)
it(23) =< aux(4)

#### Cost of chains of g(V1,V,Out):
* Chain [[22,23],24]: 1*it(22)+1*it(23)+0
  Such that:aux(3) =< V1
it(23) =< V
aux(4) =< Out
it(22) =< aux(3)
it(23) =< aux(3)
it(22) =< aux(4)
it(23) =< aux(4)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [25] 

 * loop 25:h(V1,Out) -> [h(V1',Out')] 
1
#### Cost of phase [25]:h(V1,Out) -> [h(V1',Out')] 
1*it(25)+0
  Such that:it(25) =< V1
it(25) =< V1-V1'

#### Cost of chains of h(V1,Out):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of proper(V1,Out):
* Chain [29]: 1
  with precondition: [V1=0,Out=1] 

* Chain [28]: 1
  with precondition: [V1=1,Out=2] 

* Chain [27]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [33] 

 * loop 33:top(V1,Out) -> [top(V1',Out')] 
2
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of loops [31] 

 * loop 31:top(V1,Out) -> [top(V1',Out')] 
2
#### Cost of phase [31]:top(V1,Out) -> [top(V1',Out')] 
2*it(31)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [31]:top(V1,Out) -> [top(V1',Out')] 
2*it(31)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [31]:top(V1,Out) -> [top(V1',Out')] 
2*it(31)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of phase [33]:top(V1,Out) -> [top(V1',Out')] 
2*it(33)+0
#### Cost of chains of top(V1,Out):
* Chain [[33]]...: 2*it(33)+0
  with precondition: [V1=1] 

* Chain [[33],34]: 2*it(33)+0
  with precondition: [V1=1,Out=0] 

* Chain [[33],32,[31]]...: 4*it(31)+2
  with precondition: [V1=1] 

* Chain [[33],32,[31],34]: 4*it(31)+2
  with precondition: [V1=1,Out=0] 

* Chain [[33],32,[31],30,34]: 4*it(31)+3
  with precondition: [V1=1,Out=0] 

* Chain [[33],32,34]: 2*it(33)+2
  with precondition: [V1=1,Out=0] 

* Chain [[33],32,30,34]: 2*it(33)+3
  with precondition: [V1=1,Out=0] 

* Chain [[33],30,34]: 2*it(33)+1
  with precondition: [V1=1,Out=0] 

* Chain [[31]]...: 2*it(31)+0
  with precondition: [V1=2] 

* Chain [[31],34]: 2*it(31)+0
  with precondition: [V1=2,Out=0] 

* Chain [[31],30,34]: 2*it(31)+1
  with precondition: [V1=2,Out=0] 

* Chain [34]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [32,[31]]...: 2*it(31)+2
  with precondition: [V1=1] 

* Chain [32,[31],34]: 2*it(31)+2
  with precondition: [V1=1,Out=0] 

* Chain [32,[31],30,34]: 2*it(31)+3
  with precondition: [V1=1,Out=0] 

* Chain [32,34]: 2
  with precondition: [V1=1,Out=0] 

* Chain [32,30,34]: 3
  with precondition: [V1=1,Out=0] 

* Chain [30,34]: 1
  with precondition: [Out=0,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [39]...: 1*s(14)+0
  with precondition: [V1=1] 

* Chain [38]...: 2*s(15)+0
  with precondition: [V1=2] 

* Chain [37]: 2*s(17)+3*s(19)+1*s(20)+1
  Such that:aux(10) =< V1
aux(11) =< V
s(19) =< aux(10)
s(17) =< aux(11)
s(17) =< aux(10)

  with precondition: [V1>=0] 

* Chain [36]: 1
  with precondition: [V1=1] 

* Chain [35]: 1*s(26)+0
  with precondition: [V1=2] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [39]... with precondition: [V1=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [V1=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [35] with precondition: [V1=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 143 ms.
   - Backward Invariants 64 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 176 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 176 ms.
   - Equation cost structures 53 ms.
   - Phase cost structures 47 ms.
   - Chain cost structures 60 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 632 ms.

