
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [g/2]
1. recursive [non_tail] : [activate/2,c/1,f/2]
2. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into c/1
2. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations c/1 
* CE 10 is refined into CE [13] 
* CE 12 is refined into CE [14] 
* CE 11 is refined into CE [15] 


#### Refined cost equations c/1 
* CE 13: c(Out) = 4
     [Out=1] 
* CE 14: c(Out) = 1
     [Out=0] 
* CE 15: c(Out) = 4+ c(B)
     [B>=0,B+1=Out] 

### Cost equations --> "Loop" of c/1 
* CEs [15] --> Loop 5 
* CEs [13] --> Loop 6 
* CEs [14] --> Loop 7 

#### Loops of c/1 
* Loop 5: c(Out)->  c(Out')
                  [Out'>=0,Out'+1=Out] 
* Loop 6: c(Out) [Out=1] 
* Loop 7: c(Out) [Out=0] 

### Ranking functions of CR c(Out) 

#### Partial ranking functions of CR c(Out) 


### Resulting Chains:c(Out) 
* [[5]]...
* [[5],7]
* [[5],6]
* [7]
* [6]


### Merging Chains  c/1 into  External patterns of execution 
* [[7]] --> 1 
* [[6],[6,[5]],[7,[5]]] --> 2 
* [[[5]]] --> 3 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [16] 
* CE 3 is refined into CE [17] 
* CE 4 is refined into CE [18,19,20] 
* CE 5 is refined into CE [21,22,23] 
* CE 6 is refined into CE [24] 
* CE 7 is refined into CE [25] 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27,28,29] 


#### Refined cost equations start/1 
* CE 16: start(V) = 3
     [V>=1] 
* CE 17: start(V) = 1
     [V>=0] 
* CE 18: start(V) = 3+ c(W):1
     [W=0,V=1] 
* CE 19: start(V) = 3+ c(W):2
     [W>=1,V=1] 
* CE 20: start(V) = 3+ c(W):3
     [W>=1,V=1] 
* CE 21: start(V) = 1+ c(W):1
     [W=0,V=0] 
* CE 22: start(V) = 1+ c(W):2
     [W>=1,V=0] 
* CE 23: start(V) = 1+ c(W):3
     [W>=1,V=0] 
* CE 24: start(V) = 4
     [V>=2] 
* CE 25: start(V) = 2
     [V>=1] 
* CE 26: start(V) = 0
     [V>=0] 
* CE 27: start(V) = 0+ c(W):1
     [W=0] 
* CE 28: start(V) = 0+ c(W):2
     [W>=1] 
* CE 29: start(V) = 0+ c(W):3
     [W>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [20,23,29] --> Loop 8 
* CEs [16,17,18,19,21,22,24,25,26,27,28] --> Loop 9 

#### Loops of start/1 
* Loop 8: start(V) [] 
* Loop 9: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [9]
* [8]...


### Merging Chains  start/1 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:c(Out) -> [c(Out')] 
4
#### Cost of phase [5]:c(Out) -> [c(Out')] 
4*it(5)+0
#### Cost of phase [5]:c(Out) -> [c(Out')] 
4*it(5)+0
#### Cost of phase [5]:c(Out) -> [c(Out')] 
4*it(5)+0
#### Cost of chains of c(Out):
* Chain [[5]]...: 4*it(5)+0
  with precondition: [Out>=1] 

* Chain [[5],7]: 4*it(5)+1
  with precondition: [Out>=1] 

* Chain [[5],6]: 4*it(5)+4
  with precondition: [Out>=2] 

* Chain [7]: 1
  with precondition: [Out=0] 

* Chain [6]: 4
  with precondition: [Out=1] 


#### Cost of chains of start(V):
* Chain [9]: 1*aux(2)+0
  with precondition: [] 

* Chain [8]...: 1*aux(3)+0
  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [9] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [8]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 39 ms.

