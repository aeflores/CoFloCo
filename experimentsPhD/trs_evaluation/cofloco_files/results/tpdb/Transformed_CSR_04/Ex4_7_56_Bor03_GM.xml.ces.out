
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun1/3,mark/2]  
 Merged into fun1mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun/2,fun1mark/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into fun1mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1mark/3 
* CE 9 is refined into CE [13] 
* CE 12 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations fun1mark/3 
* CE 13: fun1mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 14: fun1mark(A,B,C) = 1
     [C=0,A=0] 
* CE 15: fun1mark(A,B,C) = 2+ fun1mark(D,E,F)
     [F>=0,D>=0,F+1=C,D+1=A] 
* CE 16: fun1mark(A,B,C) = 1+ fun1mark(D,E,F)
     [A+F>=C,C>=F+1,A+F=C+D] 
* CE 17: fun1mark(A,B,C) = 1+ fun1mark(B,D,C)
     [B>=0,A=0] 
* CE 18: fun1mark(A,B,C) = 1+ fun1mark(D,E,F)+ fun1mark(G,H,I)+ fun1mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 19: fun1mark(A,B,C) = 1+ fun1mark(D,E,F)+ fun1mark(G,H,I)+ fun1mark(F,I,C)
     [B>=G+1,G>=0,D>=0,D+1=A] 
* CE 20: fun1mark(A,B,C) = 2+ fun1mark(D,E,F)+ fun1mark(F,G,H)
     [F>=0,D>=0,F+H+3=C,D+1=A] 

### Cost equations --> "Loop" of fun1mark/3 
* CEs [20] --> Loop 9 
* CEs [18] --> Loop 10 
* CEs [19] --> Loop 11 
* CEs [15,16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

#### Loops of fun1mark/3 
* Loop 9: fun1mark(A,B,C)->  fun1mark(A',B',C')  fun1mark(C',A'2,B'2)
                  [C'>=0,A'>=0,C'+B'2+3=C,A'+1=A] 
* Loop 10: fun1mark(A,B,C)->  fun1mark(A',B',C')  fun1mark(A'2,B'2,C'2)  fun1mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 11: fun1mark(A,B,C)->  fun1mark(A',B',C')  fun1mark(A'2,B'2,C'2)  fun1mark(C',C'2,C)
                  [B>=A'2+1,A'2>=0,A>=1,A=A'+1] 
* Loop 12: fun1mark(A,B,C)->  fun1mark(A',B',C')
                  [A>=A'+1,A'>=0,C+A'=A+C'] 
* Loop 13: fun1mark(A,B,C)->  fun1mark(B,A',C)
                  [B>=0,A=0] 
* Loop 14: fun1mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 15: fun1mark(A,B,C) [C=0,A=0] 

### Ranking functions of CR fun1mark(A,B,C) 

#### Partial ranking functions of CR fun1mark(A,B,C) 
* Partial RF of phase [9,10,11,12,13]:
  - RF of loop [9:1,10:1,10:2,11:1,12:1]:
    A depends on loops [9:2,10:3,11:2,11:3,13:1] 


### Resulting Chains:fun1mark(A,B,C) 
* [multiple([9,10,11,12,13],[[],[15],[14]])]...
* [15]
* [14]


### Merging Chains  fun1mark/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[multiple([9,10,11,12,13],[[],[15],[14]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21] 
* CE 3 is refined into CE [22,23,24] 
* CE 4 is refined into CE [25,26,27] 


#### Refined cost equations start/2 
* CE 21: start(V,V1) = 1
     [V>=0] 
* CE 22: start(V,V1) = 1+ fun1mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 23: start(V,V1) = 1+ fun1mark(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 24: start(V,V1) = 1+ fun1mark(V,W1,X1):3
     [V>=0] 
* CE 25: start(V,V1) = 0+ fun1mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 26: start(V,V1) = 0+ fun1mark(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 27: start(V,V1) = 0+ fun1mark(V,W1,X1):3
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [24,27] --> Loop 16 
* CEs [21,22,23,25,26] --> Loop 17 

#### Loops of start/2 
* Loop 16: start(V,V1) [V>=0] 
* Loop 17: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [17]
* [16]...


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9,10,11,12,13] 

 * loop 9:fun1mark(A,B,C) -> [fun1mark(A',B',C'),fun1mark(A'2,B'2,C'2)] 
2
 * loop 10:fun1mark(A,B,C) -> [fun1mark(A',B',C'),fun1mark(A'2,B'2,C'2),fun1mark(A'3,B'3,C'3)] 
1
 * loop 11:fun1mark(A,B,C) -> [fun1mark(A',B',C'),fun1mark(A'2,B'2,C'2),fun1mark(A'3,B'3,C'3)] 
1
 * loop 12:fun1mark(A,B,C) -> [fun1mark(A',B',C')] 
2
 * loop 13:fun1mark(A,B,C) -> [fun1mark(A',B',C')] 
1
#### Cost of phase [9,10,11,12,13]:fun1mark(A,B,C) -> [] 
5*it(9)+2*it(12)+2*it([14])+0
#### Cost of chains of fun1mark(A,B,C):
* Chain [multiple([9,10,11,12,13],[[],[15],[14]])]...: 5*it(9)+2*it(12)+2*it([14])+0
  with precondition: [A>=0] 

* Chain [15]: 1
  with precondition: [A=0,C=0] 

* Chain [14]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V,V1):
* Chain [17]: 2
  with precondition: [V>=0] 

* Chain [16]...: 1*aux(22)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [17] with precondition: [V>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [16]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 35 ms.
* Invariants computed in 45 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 121 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 218 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 205 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 507 ms.

