
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [first/3]
1. non_recursive  : [from/2]
2. non_recursive  : [s/2]
3. recursive [non_tail,multiple] : [activate/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into first/3
1. SCC is partially evaluated into from/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations first/3 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15] 


#### Refined cost equations first/3 
* CE 14: first(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 15: first(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of first/3 
* CEs [14] --> Loop 9 
* CEs [15] --> Loop 10 

#### Loops of first/3 
* Loop 9: first(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 10: first(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR first(V1,V,Out) 

#### Partial ranking functions of CR first(V1,V,Out) 


### Resulting Chains:first(V1,V,Out) 
* [10]
* [9]


### Merging Chains  first/3 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations from/2 
* CE 8 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations from/2 
* CE 16: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 17: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of from/2 
* Loop 11: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 12: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [12]
* [11]


### Merging Chains  from/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations activate/2 
* CE 13 is refined into CE [18] 
* CE 11 is refined into CE [19,20] 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22,23] 


#### Refined cost equations activate/2 
* CE 18: activate(A,A) = 1
     [A>=0] 
* CE 19: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 20: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 21: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 22: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ first(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=0,B2=1,A2=0,Out=1] 
* CE 23: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ first(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 

### Cost equations --> "Loop" of activate/2 
* CEs [23] --> Loop 13 
* CEs [22] --> Loop 14 
* CEs [19,21] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of activate/2 
* Loop 13: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 14: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=1] 
* Loop 15: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 16: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 17: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [13,14,15,16]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [13,14,15,16]:
  - RF of loop [13:1,13:2,14:1,14:2,15:1,16:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [17]
* [multiple([13,14,15,16],[[17]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[17]] --> 1 
* [[multiple([13,14,15,16],[[17]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [24,25] 
* CE 3 is refined into CE [26,27] 
* CE 4 is refined into CE [28] 
* CE 5 is refined into CE [29,30] 


#### Refined cost equations start/2 
* CE 24: start(V1,V) = 0+ first(W1,V,X1):1
     [V>=0,X1=1,W1=0,V1=0] 
* CE 25: start(V1,V) = 0+ first(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 26: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 27: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 28: start(V1,V) = 1
     [V1>=0] 
* CE 29: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 30: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=1,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [24,25,26,27,28,29,30] --> Loop 18 

#### Loops of start/2 
* Loop 18: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of first(V1,V,Out):
* Chain [10]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [9]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of chains of from(V1,Out):
* Chain [12]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [11]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [13,14,15,16] 

 * loop 13:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 14:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 15:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 16:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [13,14,15,16]:activate(V1,Out) -> [] 
8*it(13)+1*it([17])+0
  Such that:it([17]) =< V1+1
aux(1) =< V1
it(13) =< aux(1)

#### Cost of chains of activate(V1,Out):
* Chain [17]: 1
  with precondition: [V1=Out,V1>=0] 

* Chain [multiple([13,14,15,16],[[17]])]: 8*it(13)+1*it([17])+0
  Such that:it([17]) =< V1+1
aux(1) =< V1
it(13) =< aux(1)

  with precondition: [V1>=1,Out>=1] 


#### Cost of chains of start(V1,V):
* Chain [18]: 1*s(1)+8*s(3)+1
  Such that:s(2) =< V1
s(1) =< V1+1
s(3) =< s(2)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [18] with precondition: [V1>=0] 
    - Upper bound: 9*V1+2 
    - Complexity: n 

### Maximum cost of start(V1,V): 9*V1+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 102 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 27 ms.
   - Phase cost structures 73 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 315 ms.

