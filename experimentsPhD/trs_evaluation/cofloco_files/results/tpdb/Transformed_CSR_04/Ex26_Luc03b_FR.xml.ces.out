
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [add/3]
1. non_recursive  : [dbl/2]
2. non_recursive  : [first/3]
3. non_recursive  : [s/2]
4. non_recursive  : [sqr/2]
5. non_recursive  : [terms/2]
6. recursive [non_tail,multiple] : [activate/2]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into sqr/2
5. SCC is partially evaluated into terms/2
6. SCC is partially evaluated into activate/2
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 16 is refined into CE [26] 
* CE 15 is refined into CE [27] 


#### Refined cost equations add/3 
* CE 26: add(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 27: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [26] --> Loop 14 
* CEs [27] --> Loop 15 

#### Loops of add/3 
* Loop 14: add(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 15: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 

#### Partial ranking functions of CR add(V,V1,Out) 


### Resulting Chains:add(V,V1,Out) 
* [15]
* [14]


### Merging Chains  add/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations dbl/2 
* CE 14 is refined into CE [28] 
* CE 13 is refined into CE [29] 


#### Refined cost equations dbl/2 
* CE 28: dbl(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 29: dbl(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [28] --> Loop 16 
* CEs [29] --> Loop 17 

#### Loops of dbl/2 
* Loop 16: dbl(V,Out) [V>=0,V+1=Out] 
* Loop 17: dbl(V,Out) [Out=0,V=0] 

### Ranking functions of CR dbl(V,Out) 

#### Partial ranking functions of CR dbl(V,Out) 


### Resulting Chains:dbl(V,Out) 
* [17]
* [16]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations first/3 
* CE 18 is refined into CE [30] 
* CE 17 is refined into CE [31] 


#### Refined cost equations first/3 
* CE 30: first(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 31: first(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of first/3 
* CEs [30] --> Loop 18 
* CEs [31] --> Loop 19 

#### Loops of first/3 
* Loop 18: first(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 19: first(V,V1,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR first(V,V1,Out) 

#### Partial ranking functions of CR first(V,V1,Out) 


### Resulting Chains:first(V,V1,Out) 
* [19]
* [18]


### Merging Chains  first/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations sqr/2 
* CE 12 is refined into CE [32] 
* CE 11 is refined into CE [33] 


#### Refined cost equations sqr/2 
* CE 32: sqr(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 33: sqr(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 

#### Loops of sqr/2 
* Loop 20: sqr(V,Out) [V>=0,V+1=Out] 
* Loop 21: sqr(V,Out) [Out=0,V=0] 

### Ranking functions of CR sqr(V,Out) 

#### Partial ranking functions of CR sqr(V,Out) 


### Resulting Chains:sqr(V,Out) 
* [21]
* [20]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations terms/2 
* CE 9 is refined into CE [34,35] 
* CE 10 is refined into CE [36] 


#### Refined cost equations terms/2 
* CE 34: terms(V,Out) = 1+ sqr(W,X):1
     [X=0,W=0,Out=4,V=0] 
* CE 35: terms(V,Out) = 1+ sqr(W,X):2
     [X>=1,X=W+1,2*X+3=Out,X=V+1] 
* CE 36: terms(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of terms/2 
* CEs [36] --> Loop 22 
* CEs [35] --> Loop 23 
* CEs [34] --> Loop 24 

#### Loops of terms/2 
* Loop 22: terms(V,Out) [V>=0,V+1=Out] 
* Loop 23: terms(V,Out) [V>=0,2*V+5=Out] 
* Loop 24: terms(V,Out) [Out=4,V=0] 

### Ranking functions of CR terms(V,Out) 

#### Partial ranking functions of CR terms(V,Out) 


### Resulting Chains:terms(V,Out) 
* [24]
* [23]
* [22]


### Merging Chains  terms/2 into  External patterns of execution 
* [[24]] --> 1 
* [[22]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations activate/2 
* CE 20 is refined into CE [37] 
* CE 25 is refined into CE [38] 
* CE 21 is refined into CE [39,40] 
* CE 24 is refined into CE [41,42] 
* CE 19 is refined into CE [43,44,45] 
* CE 22 is refined into CE [46,47] 
* CE 23 is refined into CE [48,49] 


#### Refined cost equations activate/2 
* CE 37: activate(A,A) = 2
     [A>=1] 
* CE 38: activate(A,A) = 1
     [A>=0] 
* CE 39: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Out)+ add(Z,Out,Out):1
     [Y>=0,W>=0,Out>=0,W+Y+1=V,X=0,Z=0] 
* CE 40: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ add(X,A1,Out):2
     [Out>=X+1,Y>=0,W>=0,X>=0,Out=X+Z+1,Out=X+A1+1,W+Y+1=V] 
* CE 41: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ first(A1,Z,B1):1
     [Y>=0,W>=0,Z>=0,W+Y+1=V,X=0,B1=1,A1=0,Out=1] 
* CE 42: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ first(X,A1,Out):2
     [Out>=X+1,Y>=0,W>=0,X>=0,Out=X+Z+1,Out=X+A1+1,W+Y+1=V] 
* CE 43: activate(V,Out) = 1+ activate(W,X)+ terms(Y,Z):1
     [W>=0,W+1=V,X=0,Z=4,Y=0,Out=4] 
* CE 44: activate(V,Out) = 1+ activate(W,X)+ terms(Y,Out):2
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 
* CE 45: activate(V,Out) = 1+ activate(W,X)+ terms(Y,Out):3
     [W>=0,Out>=5,W+1=V,Out=2*X+5,Out=2*Y+5] 
* CE 46: activate(V,Out) = 1+ activate(W,X)+ sqr(Y,Z):1
     [W>=0,W+1=V,X=0,Z=0,Y=0,Out=0] 
* CE 47: activate(V,Out) = 1+ activate(W,X)+ sqr(Y,Out):2
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 
* CE 48: activate(V,Out) = 1+ activate(W,X)+ dbl(Y,Z):1
     [W>=0,W+1=V,X=0,Z=0,Y=0,Out=0] 
* CE 49: activate(V,Out) = 1+ activate(W,X)+ dbl(Y,Out):2
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 

### Cost equations --> "Loop" of activate/2 
* CEs [44,47,49] --> Loop 25 
* CEs [45] --> Loop 26 
* CEs [43] --> Loop 27 
* CEs [46,48] --> Loop 28 
* CEs [40,42] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [37,38] --> Loop 32 

#### Loops of activate/2 
* Loop 25: activate(V,Out)->  activate(V',Out')
                  [Out>=1,V>=1,Out=Out'+1,V=V'+1] 
* Loop 26: activate(V,Out)->  activate(V',Out')
                  [Out>=5,V>=1,V=V'+1,Out=2*Out'+5] 
* Loop 27: activate(V,Out)->  activate(V',Out')
                  [V>=1,V=V'+1,Out'=0,Out=4] 
* Loop 28: activate(V,Out)->  activate(V',Out')
                  [V>=1,V=V'+1,Out'=0,Out=0] 
* Loop 29: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out>=Out'+1,V>=V'+1,Out'>=0,V'>=0,Out'+Out'2+1=Out,V'+V'2+1=V] 
* Loop 30: activate(V,Out)->  activate(V',Out')  activate(V'2,Out)
                  [V>=V'+1,V'>=0,Out>=0,V'+V'2+1=V,Out'=0] 
* Loop 31: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [V>=V'+1,Out'2>=0,V'>=0,V'+V'2+1=V,Out'=0,Out=1] 
* Loop 32: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [25,26,27,28,29,30,31]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [25,26,27,28,29,30,31]:
  - RF of loop [25:1,26:1,27:1,28:1,29:1,29:2,30:1,30:2,31:1,31:2]:
    V


### Resulting Chains:activate(V,Out) 
* [32]
* [multiple([25,26,27,28,29,30,31],[[32]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[32]] --> 1 
* [[multiple([25,26,27,28,29,30,31],[[32]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [50,51,52] 
* CE 3 is refined into CE [53,54] 
* CE 4 is refined into CE [55,56] 
* CE 5 is refined into CE [57,58] 
* CE 6 is refined into CE [59,60] 
* CE 7 is refined into CE [61] 
* CE 8 is refined into CE [62,63] 


#### Refined cost equations start/2 
* CE 50: start(V,V1) = 0+ terms(W1,X1):1
     [X1=4,W1=0,V=0] 
* CE 51: start(V,V1) = 0+ terms(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 52: start(V,V1) = 0+ terms(W1,X1):3
     [X1>=5,X1=2*W1+5,X1=2*V+5] 
* CE 53: start(V,V1) = 0+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 54: start(V,V1) = 0+ sqr(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 55: start(V,V1) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 56: start(V,V1) = 0+ dbl(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 57: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 58: start(V,V1) = 0+ add(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 59: start(V,V1) = 0+ first(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 60: start(V,V1) = 0+ first(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 61: start(V,V1) = 1
     [V>=0] 
* CE 62: start(V,V1) = 0+ activate(V,V):1
     [V>=0] 
* CE 63: start(V,V1) = 0+ activate(V,W1):2
     [W1>=0,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [50,51,52,53,54,55,56,57,58,59,60,61,62,63] --> Loop 33 

#### Loops of start/2 
* Loop 33: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [33]


### Merging Chains  start/2 into  External patterns of execution 
* [[33]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of add(V,V1,Out):
* Chain [15]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [14]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of dbl(V,Out):
* Chain [17]: 1
  with precondition: [V=0,Out=0] 

* Chain [16]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of first(V,V1,Out):
* Chain [19]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [18]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of sqr(V,Out):
* Chain [21]: 1
  with precondition: [V=0,Out=0] 

* Chain [20]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of terms(V,Out):
* Chain [24]: 2
  with precondition: [V=0,Out=4] 

* Chain [23]: 2
  with precondition: [2*V+5=Out,V>=0] 

* Chain [22]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of loops [25,26,27,28,29,30,31] 

 * loop 25:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 26:activate(V,Out) -> [activate(V',Out')] 
3
 * loop 27:activate(V,Out) -> [activate(V',Out')] 
3
 * loop 28:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 29:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
 * loop 30:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
 * loop 31:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
#### Cost of phase [25,26,27,28,29,30,31]:activate(V,Out) -> [] 
16*it(25)+2*it([32])+0
  Such that:aux(3) =< 1
aux(4) =< V
it(25) =< aux(4)
it([32]) =< it(25)+it(25)+it(25)+aux(3)

#### Cost of chains of activate(V,Out):
* Chain [32]: 2
  with precondition: [V=Out,V>=0] 

* Chain [multiple([25,26,27,28,29,30,31],[[32]])]: 16*it(25)+2*it([32])+0
  Such that:aux(3) =< 1
aux(4) =< V
it(25) =< aux(4)
it([32]) =< it(25)+it(25)+it(25)+aux(3)

  with precondition: [V>=1,Out>=0] 


#### Cost of chains of start(V,V1):
* Chain [33]: 16*s(3)+2*s(4)+2
  Such that:s(1) =< 1
s(2) =< V
s(3) =< s(2)
s(4) =< s(3)+s(3)+s(3)+s(1)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [33] with precondition: [V>=0] 
    - Upper bound: 22*V+4 
    - Complexity: n 

### Maximum cost of start(V,V1): 22*V+4 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 113 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 163 ms.
   - Equation cost structures 58 ms.
   - Phase cost structures 122 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 388 ms.

