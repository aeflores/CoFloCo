
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun/3,fun4/2,fun3/3,fun5/3,fun6/2,fun7/2,fun8/2,mark/2]  
 Merged into funfun4fun3fun5fun6fun7fun8mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun1/3,fun2/2,fun9/3,funfun4fun3fun5fun6fun7fun8mark/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into funfun4fun3fun5fun6fun7fun8mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations funfun4fun3fun5fun6fun7fun8mark/3 
* CE 16 is refined into CE [32] 
* CE 17 is refined into CE [33] 
* CE 30 is refined into CE [34] 
* CE 25 is refined into CE [35] 
* CE 29 is refined into CE [36] 
* CE 31 is refined into CE [37] 
* CE 23 is refined into CE [38] 
* CE 20 is refined into CE [39] 
* CE 28 is refined into CE [40] 
* CE 26 is refined into CE [41] 
* CE 9 is refined into CE [42] 
* CE 18 is refined into CE [43] 
* CE 15 is refined into CE [44] 
* CE 6 is refined into CE [45] 
* CE 22 is refined into CE [46] 
* CE 10 is refined into CE [47] 
* CE 24 is refined into CE [48] 
* CE 27 is refined into CE [49] 
* CE 8 is refined into CE [50] 
* CE 11 is refined into CE [51] 
* CE 21 is refined into CE [52] 
* CE 7 is refined into CE [53] 
* CE 12 is refined into CE [54] 
* CE 19 is refined into CE [55] 
* CE 14 is refined into CE [56] 
* CE 13 is refined into CE [57] 


#### Refined cost equations funfun4fun3fun5fun6fun7fun8mark/3 
* CE 32: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 33: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [A>=0,A+1=C] 
* CE 34: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=3,A=3] 
* CE 35: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=2,A=3] 
* CE 36: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=2,A=2] 
* CE 37: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=1,A=1] 
* CE 38: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=0,A=1] 
* CE 39: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [B>=0,C=3,A=0] 
* CE 40: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1
     [C=0,A=0] 
* CE 41: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,C)
     [D>=0,D+1=A] 
* CE 42: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)
     [F>=0,D>=0,F+1=C,D+1=A] 
* CE 43: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)
     [A+F>=C,C>=F+1,A+F=C+D] 
* CE 44: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,C)
     [B>=D+1,D>=0,A=0] 
* CE 45: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)
     [I>=0,G>=0,F>=0,D>=0,F+I+1=C,D+G+1=A] 
* CE 46: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)
     [G>=0,D>=0,F+I+1=C,D+G+1=A] 
* CE 47: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(F,G,H)
     [F>=0,D>=0,F+H+3=C,D+1=A] 
* CE 48: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(F,G,H)
     [D>=0,H+1=C,D+1=A] 
* CE 49: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(F,G,C)
     [D>=0,D+1=A] 
* CE 50: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)
     [I>=0,G>=0,D>=0,D+G+1=A,F=0,C=2] 
* CE 51: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(F,G,H)+ funfun4fun3fun5fun6fun7fun8mark(I,J,K)+ funfun4fun3fun5fun6fun7fun8mark(K,L,M)
     [M>=0,I>=0,H>=0,D>=0,H+M+1=C,D+I+1=A] 
* CE 52: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)+ funfun4fun3fun5fun6fun7fun8mark(J,K,L)+ funfun4fun3fun5fun6fun7fun8mark(I,L,M)
     [J>=0,G>=0,D>=0,F+M+1=C,D+J+1=B,G+1=A] 
* CE 53: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)+ funfun4fun3fun5fun6fun7fun8mark(J,K,L)
     [C+J>=I+L+1,I>=J+1,J>=0,G>=0,D>=0,F+I+L=C+J,D+G+1=A] 
* CE 54: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)+ funfun4fun3fun5fun6fun7fun8mark(F,J,K)
     [I>=0,G>=0,F>=0,D>=0,I+K+1=C,D+G+1=A] 
* CE 55: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)+ funfun4fun3fun5fun6fun7fun8mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 56: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 1+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(G,H,I)+ funfun4fun3fun5fun6fun7fun8mark(F,I,C)
     [B>=G+1,G>=0,D>=0,D+1=A] 
* CE 57: funfun4fun3fun5fun6fun7fun8mark(A,B,C) = 2+ funfun4fun3fun5fun6fun7fun8mark(D,E,F)+ funfun4fun3fun5fun6fun7fun8mark(F,G,H)+ funfun4fun3fun5fun6fun7fun8mark(I,J,K)+ funfun4fun3fun5fun6fun7fun8mark(K,L,M)+ funfun4fun3fun5fun6fun7fun8mark(H,N,O)
     [M>=0,I>=0,H>=0,D>=0,M+O+1=C,D+I+1=A] 

### Cost equations --> "Loop" of funfun4fun3fun5fun6fun7fun8mark/3 
* CEs [57] --> Loop 26 
* CEs [53] --> Loop 27 
* CEs [54] --> Loop 28 
* CEs [55] --> Loop 29 
* CEs [56] --> Loop 30 
* CEs [51] --> Loop 31 
* CEs [52] --> Loop 32 
* CEs [45,46] --> Loop 33 
* CEs [47] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [49] --> Loop 36 
* CEs [50] --> Loop 37 
* CEs [41] --> Loop 38 
* CEs [42,43] --> Loop 39 
* CEs [44] --> Loop 40 
* CEs [32] --> Loop 41 
* CEs [33] --> Loop 42 
* CEs [34] --> Loop 43 
* CEs [35] --> Loop 44 
* CEs [36] --> Loop 45 
* CEs [37] --> Loop 46 
* CEs [38] --> Loop 47 
* CEs [39] --> Loop 48 
* CEs [40] --> Loop 49 

#### Loops of funfun4fun3fun5fun6fun7fun8mark/3 
* Loop 26: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(C',A'2,B'2)  funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)  funfun4fun3fun5fun6fun7fun8mark(C'3,A'4,B'4)  funfun4fun3fun5fun6fun7fun8mark(B'2,A'5,B'5)
                  [B'4>=0,A'3>=0,B'2>=0,A'>=0,B'4+B'5+1=C,A'+A'3+1=A] 
* Loop 27: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)  funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)
                  [C'2>=A'3+1,A>=A'+1,A'3>=0,C'>=1,A'>=0,C'+C'2+C'3=C+A'3,A'+A'2+1=A] 
* Loop 28: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)  funfun4fun3fun5fun6fun7fun8mark(C',A'3,B'3)
                  [A>=A'+1,C'2>=0,C'>=0,A'>=0,C'2+B'3+1=C,A'+A'2+1=A] 
* Loop 29: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)  funfun4fun3fun5fun6fun7fun8mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 30: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)  funfun4fun3fun5fun6fun7fun8mark(C',C'2,C)
                  [B>=A'2+1,A'2>=0,A>=1,A=A'+1] 
* Loop 31: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(C',A'2,B'2)  funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)  funfun4fun3fun5fun6fun7fun8mark(C'3,A'4,B'4)
                  [C>=B'2+1,A>=A'+1,B'2>=0,A'>=0,B'2+B'4+1=C,A'+A'3+1=A] 
* Loop 32: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)  funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)  funfun4fun3fun5fun6fun7fun8mark(C'2,C'3,A'4)
                  [B>=A'+1,A'>=0,A>=1,C=C'+A'4+1,A'+A'3+1=B,A=A'2+1] 
* Loop 33: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)
                  [A>=A'+1,A'>=0,C=C'+C'2+1,A'+A'2+1=A] 
* Loop 34: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(C',A'2,B'2)
                  [C'>=0,A>=1,C'+B'2+3=C,A=A'+1] 
* Loop 35: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(C',A'2,B'2)
                  [A>=1,C=B'2+1,A=A'+1] 
* Loop 36: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(C',A'2,C)
                  [A>=1,A=A'+1] 
* Loop 37: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')  funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)
                  [A>=A'+1,C'2>=0,A'>=0,A'+A'2+1=A,C'=0,C=2] 
* Loop 38: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C)
                  [A>=1,A=A'+1] 
* Loop 39: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C')
                  [A>=A'+1,A'>=0,C+A'=A+C'] 
* Loop 40: funfun4fun3fun5fun6fun7fun8mark(A,B,C)->  funfun4fun3fun5fun6fun7fun8mark(A',B',C)
                  [B>=A'+1,A'>=0,A=0] 
* Loop 41: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 42: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [A>=0,A+1=C] 
* Loop 43: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=3,A=3] 
* Loop 44: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=2,A=3] 
* Loop 45: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=2,A=2] 
* Loop 46: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=1,A=1] 
* Loop 47: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=0,A=1] 
* Loop 48: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [B>=0,C=3,A=0] 
* Loop 49: funfun4fun3fun5fun6fun7fun8mark(A,B,C) [C=0,A=0] 

### Ranking functions of CR funfun4fun3fun5fun6fun7fun8mark(A,B,C) 

#### Partial ranking functions of CR funfun4fun3fun5fun6fun7fun8mark(A,B,C) 
* Partial RF of phase [26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]:
  - RF of loop [26:1,26:3,27:1,27:2,28:1,28:2,29:1,29:2,30:1,31:1,31:3,32:2,33:1,33:2,34:1,35:1,36:1,37:1,37:2,38:1,39:1]:
    A depends on loops [26:2,26:4,26:5,27:3,28:3,29:3,30:2,30:3,31:2,31:4,32:1,32:3,32:4,34:2,35:2,36:2,40:1] 


### Resulting Chains:funfun4fun3fun5fun6fun7fun8mark(A,B,C) 
* [multiple([26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],[[],[49],[48],[47],[46],[45],[44],[43],[42],[41]])]...
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]


### Merging Chains  funfun4fun3fun5fun6fun7fun8mark/3 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 
* [[46]] --> 4 
* [[45]] --> 5 
* [[44]] --> 6 
* [[43]] --> 7 
* [[42]] --> 8 
* [[41]] --> 9 
* [[multiple([26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],[[],[49],[48],[47],[46],[45],[44],[43],[42],[41]])]] --> 10 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [58] 
* CE 3 is refined into CE [59,60,61,62,63,64,65,66,67,68] 
* CE 4 is refined into CE [69,70,71,72,73,74,75,76,77,78] 
* CE 5 is refined into CE [79,80,81,82,83,84,85,86,87,88] 


#### Refined cost equations start/2 
* CE 58: start(V1,V) = 1
     [V1>=0] 
* CE 59: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):1
     [V>=1,V1>=1,Y1=0,W1=0] 
* CE 60: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):2
     [X1>=0,V>=1,V1>=1,Y1=3,W1=0] 
* CE 61: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):3
     [V>=2,V1>=1,Y1=0,W1=1] 
* CE 62: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):4
     [V>=2,V1>=1,Y1=1,W1=1] 
* CE 63: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):5
     [V>=3,V1>=1,Y1=2,W1=2] 
* CE 64: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):6
     [V>=4,V1>=1,Y1=2,W1=3] 
* CE 65: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):7
     [V>=4,V1>=1,Y1=3,W1=3] 
* CE 66: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):8
     [V>=Y1,Y1>=1,V1>=1,Y1=W1+1] 
* CE 67: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):9
     [Y1>=W1+1,V>=W1+1,W1>=0,V1>=1,Y1=W1+X1+1] 
* CE 68: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):10
     [V>=W1+1,W1>=0,V1>=1] 
* CE 69: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):1
     [Y1=0,W1=0,V1=0] 
* CE 70: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):2
     [X1>=0,Y1=3,W1=0,V1=0] 
* CE 71: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):3
     [Y1=0,W1=1,V1=1] 
* CE 72: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):4
     [Y1=1,W1=1,V1=1] 
* CE 73: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):5
     [Y1=2,W1=2,V1=2] 
* CE 74: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):6
     [Y1=2,W1=3,V1=3] 
* CE 75: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):7
     [Y1=3,W1=3,V1=3] 
* CE 76: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):8
     [Y1>=1,Y1=W1+1,Y1=V1+1] 
* CE 77: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(V1,W1,X1):9
     [X1>=V1+1,V1>=0,X1=V1+W1+1] 
* CE 78: start(V1,V) = 1+ funfun4fun3fun5fun6fun7fun8mark(V1,W1,X1):10
     [V1>=0] 
* CE 79: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):1
     [Y1=0,W1=0,V1=0] 
* CE 80: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):2
     [X1>=0,Y1=3,W1=0,V1=0] 
* CE 81: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):3
     [Y1=0,W1=1,V1=1] 
* CE 82: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):4
     [Y1=1,W1=1,V1=1] 
* CE 83: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):5
     [Y1=2,W1=2,V1=2] 
* CE 84: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):6
     [Y1=2,W1=3,V1=3] 
* CE 85: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):7
     [Y1=3,W1=3,V1=3] 
* CE 86: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(W1,X1,Y1):8
     [Y1>=1,Y1=W1+1,Y1=V1+1] 
* CE 87: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(V1,W1,X1):9
     [X1>=V1+1,V1>=0,X1=V1+W1+1] 
* CE 88: start(V1,V) = 0+ funfun4fun3fun5fun6fun7fun8mark(V1,W1,X1):10
     [V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [68,78,88] --> Loop 50 
* CEs [74,75,84,85] --> Loop 51 
* CEs [73,83] --> Loop 52 
* CEs [71,72,81,82] --> Loop 53 
* CEs [58,59,60,61,62,63,64,65,66,67,69,70,76,77,79,80,86,87] --> Loop 54 

#### Loops of start/2 
* Loop 50: start(V1,V) [V1>=0] 
* Loop 51: start(V1,V) [V1=3] 
* Loop 52: start(V1,V) [V1=2] 
* Loop 53: start(V1,V) [V1=1] 
* Loop 54: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [54]
* [53]
* [52]
* [51]
* [50]...


### Merging Chains  start/2 into  External patterns of execution 
* [[53],[54]] --> 1 
* [[52]] --> 2 
* [[51]] --> 3 
* [[50]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [26,27,28,29,30,31,32,33,34,35,36,37,38,39,40] 

 * loop 26:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3),funfun4fun3fun5fun6fun7fun8mark(A'4,B'4,C'4),funfun4fun3fun5fun6fun7fun8mark(A'5,B'5,C'5)] 
2
 * loop 27:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)] 
2
 * loop 28:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)] 
2
 * loop 29:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)] 
1
 * loop 30:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3)] 
1
 * loop 31:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3),funfun4fun3fun5fun6fun7fun8mark(A'4,B'4,C'4)] 
2
 * loop 32:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2),funfun4fun3fun5fun6fun7fun8mark(A'3,B'3,C'3),funfun4fun3fun5fun6fun7fun8mark(A'4,B'4,C'4)] 
1
 * loop 33:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)] 
2
 * loop 34:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)] 
2
 * loop 35:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)] 
1
 * loop 36:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)] 
1
 * loop 37:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C'),funfun4fun3fun5fun6fun7fun8mark(A'2,B'2,C'2)] 
2
 * loop 38:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C')] 
1
 * loop 39:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C')] 
2
 * loop 40:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [funfun4fun3fun5fun6fun7fun8mark(A',B',C')] 
1
#### Cost of phase [26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]:funfun4fun3fun5fun6fun7fun8mark(A,B,C) -> [] 
16*it(26)+12*it(33)+4*it([41])+0
#### Cost of chains of funfun4fun3fun5fun6fun7fun8mark(A,B,C):
* Chain [multiple([26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],[[],[49],[48],[47],[46],[45],[44],[43],[42],[41]])]...: 16*it(26)+12*it(33)+4*it([41])+0
  with precondition: [A>=0] 

* Chain [49]: 1
  with precondition: [A=0,C=0] 

* Chain [48]: 1
  with precondition: [A=0,C=3,B>=0] 

* Chain [47]: 1
  with precondition: [A=1,C=0] 

* Chain [46]: 1
  with precondition: [A=1,C=1] 

* Chain [45]: 1
  with precondition: [A=2,C=2] 

* Chain [44]: 1
  with precondition: [A=3,C=2] 

* Chain [43]: 1
  with precondition: [A=3,C=3] 

* Chain [42]: 1
  with precondition: [A+1=C,A>=0] 

* Chain [41]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V1,V):
* Chain [54]: 2
  with precondition: [V1>=0] 

* Chain [53]: 2
  with precondition: [V1=1] 

* Chain [52]: 2
  with precondition: [V1=2] 

* Chain [51]: 2
  with precondition: [V1=3] 

* Chain [50]...: 1*aux(26)+0
  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [54] with precondition: [V1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [53] with precondition: [V1=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [52] with precondition: [V1=2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [51] with precondition: [V1=3] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [50]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 182 ms.
* Invariants computed in 200 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 64 ms.
* Refinement performed in 464 ms.
* Termination proved in 71 ms.
* Upper bounds computed in 701 ms.
   - Equation cost structures 86 ms.
   - Phase cost structures 651 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 1860 ms.

