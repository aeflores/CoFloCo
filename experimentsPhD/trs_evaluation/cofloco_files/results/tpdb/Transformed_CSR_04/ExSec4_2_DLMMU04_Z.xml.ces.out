
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [natsFrom/2]
1. non_recursive  : [activate/2]
2. non_recursive  : [snd/2]
3. non_recursive  : [u/5]
4. recursive [non_tail] : [splitAt/3]
5. non_recursive  : [afterNth/3]
6. non_recursive  : [fst/2]
7. non_recursive  : [head/2]
8. non_recursive  : [sel/3]
9. non_recursive  : [tail/2]
10. non_recursive  : [take/3]
11. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into natsFrom/2
1. SCC is partially evaluated into activate/2
2. SCC is partially evaluated into snd/2
3. SCC is partially evaluated into u/5
4. SCC is partially evaluated into splitAt/3
5. SCC is partially evaluated into afterNth/3
6. SCC is partially evaluated into fst/2
7. SCC is partially evaluated into head/2
8. SCC is partially evaluated into sel/3
9. SCC is partially evaluated into tail/2
10. SCC is partially evaluated into take/3
11. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations natsFrom/2 
* CE 13 is refined into CE [33] 
* CE 14 is refined into CE [34] 


#### Refined cost equations natsFrom/2 
* CE 33: natsFrom(V,Out) = 1
     [V>=0,2*V+3=Out] 
* CE 34: natsFrom(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of natsFrom/2 
* CEs [33] --> Loop 22 
* CEs [34] --> Loop 23 

#### Loops of natsFrom/2 
* Loop 22: natsFrom(V,Out) [V>=0,2*V+3=Out] 
* Loop 23: natsFrom(V,Out) [V>=0,V+1=Out] 

### Ranking functions of CR natsFrom(V,Out) 

#### Partial ranking functions of CR natsFrom(V,Out) 


### Resulting Chains:natsFrom(V,Out) 
* [23]
* [22]


### Merging Chains  natsFrom/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations activate/2 
* CE 31 is refined into CE [35,36] 
* CE 32 is refined into CE [37] 


#### Refined cost equations activate/2 
* CE 35: activate(A,A) = 1+ natsFrom(B,A):1
     [A>=1,A=B+1] 
* CE 36: activate(V,Out) = 1+ natsFrom(W,Out):2
     [Out>=3,Out=2*W+3,Out=2*V+1] 
* CE 37: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [36] --> Loop 24 
* CEs [35,37] --> Loop 25 

#### Loops of activate/2 
* Loop 24: activate(V,Out) [V>=1,2*V+1=Out] 
* Loop 25: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [25]
* [24]


### Merging Chains  activate/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations snd/2 
* CE 17 is refined into CE [38] 
* CE 18 is refined into CE [39] 


#### Refined cost equations snd/2 
* CE 38: snd(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 39: snd(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of snd/2 
* CEs [38] --> Loop 26 
* CEs [39] --> Loop 27 

#### Loops of snd/2 
* Loop 26: snd(V,Out) [V>=Out+1,Out>=0] 
* Loop 27: snd(V,Out) [V>=0,Out=0] 

### Ranking functions of CR snd(V,Out) 

#### Partial ranking functions of CR snd(V,Out) 


### Resulting Chains:snd(V,Out) 
* [27]
* [26]


### Merging Chains  snd/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations u/5 
* CE 22 is refined into CE [40,41] 
* CE 23 is refined into CE [42] 


#### Refined cost equations u/5 
* CE 40: u(V,V1,V2,V3,Out) = 1+ activate(V2,V2):1
     [V2>=0,V3>=0,V1>=0,V>=1,V+V2+1=Out] 
* CE 41: u(V,V1,V2,V3,Out) = 1+ activate(W3,X3):2
     [X3>=3,V3>=0,V1>=0,V>=1,V+X3+1=Out,X3=2*W3+1,X3=2*V2+1] 
* CE 42: u(V,V1,V2,V3,Out) = 0
     [V3>=0,V2>=0,V1>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of u/5 
* CEs [41] --> Loop 28 
* CEs [40] --> Loop 29 
* CEs [42] --> Loop 30 

#### Loops of u/5 
* Loop 28: u(V,V1,V2,V3,Out) [V3>=0,V2>=1,V1>=0,V>=1,V+2*V2+2=Out] 
* Loop 29: u(V,V1,V2,V3,Out) [V3>=0,V2>=0,V1>=0,V>=1,V+V2+1=Out] 
* Loop 30: u(V,V1,V2,V3,Out) [V3>=0,V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR u(V,V1,V2,V3,Out) 

#### Partial ranking functions of CR u(V,V1,V2,V3,Out) 


### Resulting Chains:u(V,V1,V2,V3,Out) 
* [30]
* [29]
* [28]


### Merging Chains  u/5 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 


### Specialization of cost equations splitAt/3 
* CE 21 is refined into CE [43] 
* CE 19 is refined into CE [44] 
* CE 20 is refined into CE [45,46,47,48,49,50,51,52,53,54,55,56] 


#### Refined cost equations splitAt/3 
* CE 43: splitAt(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 44: splitAt(V,V1,Out) = 1
     [V1>=0,V1+2=Out,V=0] 
* CE 45: splitAt(V,V1,Out) = 1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(W1,W1):1+ u(Y1,X1,Z1,W1,A2):1
     [W1>=0,Z1>=0,X1>=0,Y1>=0,W1+Z1+1=V1,X1+1=V,A2=0,Out=0] 
* CE 46: splitAt(V,V1,Out) = 1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(W1,W1):1+ u(Y1,X1,Z1,W1,Out):2
     [Out>=Y1+1,W1>=0,X1>=0,Y1>=1,Out+W1=V1+Y1,Out=Y1+Z1+1,X1+1=V] 
* CE 47: splitAt(V,V1,Out) = 1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(W1,W1):1+ u(Y1,X1,Z1,W1,Out):3
     [Out>=Y1+4,W1>=0,X1>=0,Y1>=1,Out+2*W1=2*V1+Y1,Out=2*Z1+Y1+2,X1+1=V] 
* CE 48: splitAt(V,V1,Out) = 1+ activate(W1,X1):1+ splitAt(Y1,Z1,A2)+ activate(B2,C2):2+ u(A2,Y1,D2,C2,E2):1
     [C2>=3,D2>=0,Y1>=0,A2>=0,C2+2*D2+1=2*V1,Y1+1=V,C2=2*Z1+1,C2=2*B2+1,C2=2*X1+1,C2=2*W1+1,E2=0,Out=0] 
* CE 49: splitAt(V,V1,Out) = 1+ activate(W1,X1):1+ splitAt(Y1,Z1,A2)+ activate(B2,C2):2+ u(A2,Y1,D2,C2,Out):2
     [Out>=A2+1,C2>=3,Y1>=0,A2>=1,C2+2*Out=2*V1+2*A2+1,Out=A2+D2+1,Y1+1=V,C2=2*Z1+1,C2=2*B2+1,C2=2*X1+1,C2=2*W1+1] 
* CE 50: splitAt(V,V1,Out) = 1+ activate(W1,X1):1+ splitAt(Y1,Z1,A2)+ activate(B2,C2):2+ u(A2,Y1,D2,C2,Out):3
     [Out>=A2+4,C2>=3,Y1>=0,A2>=1,Out+C2=2*V1+A2+1,Out=2*D2+A2+2,Y1+1=V,C2=2*Z1+1,C2=2*B2+1,C2=2*X1+1,C2=2*W1+1] 
* CE 51: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,Z1,A2)+ activate(W1,W1):1+ u(A2,Y1,B2,W1,C2):1
     [W1>=1,B2>=0,Y1>=0,A2>=0,W1+B2+1=V1,2*W1+1=Z1,2*W1+1=X1,Y1+1=V,C2=0,Out=0] 
* CE 52: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,Z1,A2)+ activate(W1,W1):1+ u(A2,Y1,B2,W1,Out):2
     [Out>=A2+1,W1>=1,Y1>=0,A2>=1,Out+W1=V1+A2,Out=A2+B2+1,2*W1+1=Z1,2*W1+1=X1,Y1+1=V] 
* CE 53: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,Z1,A2)+ activate(W1,W1):1+ u(A2,Y1,B2,W1,Out):3
     [Out>=A2+4,W1>=1,Y1>=0,A2>=1,Out+2*W1=2*V1+A2,Out=2*B2+A2+2,2*W1+1=Z1,2*W1+1=X1,Y1+1=V] 
* CE 54: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,X1,Z1)+ activate(A2,X1):2+ u(Z1,Y1,B2,X1,C2):1
     [X1>=3,B2>=0,Y1>=0,Z1>=0,X1+2*B2+1=2*V1,Y1+1=V,X1=2*A2+1,X1=2*W1+1,C2=0,Out=0] 
* CE 55: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,X1,Z1)+ activate(A2,X1):2+ u(Z1,Y1,B2,X1,Out):2
     [Out>=Z1+1,X1>=3,Y1>=0,Z1>=1,X1+2*Out=2*V1+2*Z1+1,Out=Z1+B2+1,Y1+1=V,X1=2*A2+1,X1=2*W1+1] 
* CE 56: splitAt(V,V1,Out) = 1+ activate(W1,X1):2+ splitAt(Y1,X1,Z1)+ activate(A2,X1):2+ u(Z1,Y1,B2,X1,Out):3
     [Out>=Z1+4,X1>=3,Y1>=0,Z1>=1,Out+X1=2*V1+Z1+1,Out=2*B2+Z1+2,Y1+1=V,X1=2*A2+1,X1=2*W1+1] 

### Cost equations --> "Loop" of splitAt/3 
* CEs [53,56] --> Loop 31 
* CEs [46,49] --> Loop 32 
* CEs [47,50] --> Loop 33 
* CEs [52,55] --> Loop 34 
* CEs [51,54] --> Loop 35 
* CEs [45,48] --> Loop 36 
* CEs [43] --> Loop 37 
* CEs [44] --> Loop 38 

#### Loops of splitAt/3 
* Loop 31: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [Out+V1'>=2*V1+2,2*V1>=V1'+3,V1'>=3,V>=1,Out'+2*V1+1=Out+V1',V=V'+1] 
* Loop 32: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [Out+V1'>=V1+1,V1>=V1'+1,V1'>=0,V>=1,V1+Out'=Out+V1',V=V'+1] 
* Loop 33: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [Out+2*V1'>=2*V1+1,V1>=V1'+2,V1'>=0,V>=1,Out'+2*V1=2*V1'+Out,V=V'+1] 
* Loop 34: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [V1'+2*Out>=2*V1+3,2*V1>=V1'+1,V1'>=3,V>=1,2*V1+2*Out'+1=2*Out+V1',V=V'+1] 
* Loop 35: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [2*V1>=V1'+1,Out'>=0,V1'>=3,V>=1,V=V'+1,Out=0] 
* Loop 36: splitAt(V,V1,Out)->  splitAt(V',V1',Out')
                  [V1>=V1'+1,Out'>=0,V1'>=0,V>=1,V=V'+1,Out=0] 
* Loop 37: splitAt(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 38: splitAt(V,V1,Out) [V1>=0,V1+2=Out,V=0] 

### Ranking functions of CR splitAt(V,V1,Out) 
* RF of phase [31,32,33,34]: [V]
* RF of phase [35,36]: [V]

#### Partial ranking functions of CR splitAt(V,V1,Out) 
* Partial RF of phase [31,32,33,34]:
  - RF of loop [31:1,32:1,33:1,34:1]:
    V
  - RF of loop [32:1]:
    V1 depends on loops [31:1,34:1] 
  - RF of loop [33:1]:
    V1/2-1/2 depends on loops [31:1,34:1] 
* Partial RF of phase [35,36]:
  - RF of loop [35:1,36:1]:
    V
  - RF of loop [36:1]:
    V1 depends on loops [35:1] 


### Resulting Chains:splitAt(V,V1,Out) 
* [[35,36],[31,32,33,34],38]
* [[35,36],38]
* [[35,36],37]
* [[31,32,33,34],38]
* [38]
* [37]


### Merging Chains  splitAt/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37],[37,[35,36]],[38,[35,36]],[38,[31,32,33,34],[35,36]]] --> 2 
* [[38,[31,32,33,34]]] --> 3 


### Specialization of cost equations afterNth/3 
* CE 30 is refined into CE [57,58,59,60,61] 


#### Refined cost equations afterNth/3 
* CE 57: afterNth(V,V1,Out) = 1+ splitAt(W1,X1,Y1):1+ snd(Y1,Z1):1
     [Y1>=2,Y1=X1+2,Y1=V1+2,Z1=0,W1=0,Out=0,V=0] 
* CE 58: afterNth(V,V1,Out) = 1+ splitAt(W1,X1,Y1):1+ snd(Y1,Out):2
     [Y1>=Out+1,Out>=0,Y1>=2,Y1=X1+2,Y1=V1+2,W1=0,V=0] 
* CE 59: afterNth(V,V1,Out) = 1+ splitAt(V,V1,W1):2+ snd(X1,Y1):1
     [V1>=0,V>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 60: afterNth(V,V1,Out) = 1+ splitAt(V,V1,W1):3+ snd(W1,X1):1
     [W1>=V1+2,V1>=1,V>=1,X1=0,Out=0] 
* CE 61: afterNth(V,V1,Out) = 1+ splitAt(V,V1,W1):3+ snd(W1,Out):2
     [W1>=Out+1,W1>=V1+2,Out>=0,V1>=1,V>=1] 

### Cost equations --> "Loop" of afterNth/3 
* CEs [61] --> Loop 39 
* CEs [59,60] --> Loop 40 
* CEs [57,58] --> Loop 41 

#### Loops of afterNth/3 
* Loop 39: afterNth(V,V1,Out) [Out>=0,V1>=1,V>=1] 
* Loop 40: afterNth(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 41: afterNth(V,V1,Out) [V1+1>=Out,Out>=0,V1>=0,V=0] 

### Ranking functions of CR afterNth(V,V1,Out) 

#### Partial ranking functions of CR afterNth(V,V1,Out) 


### Resulting Chains:afterNth(V,V1,Out) 
* [41]
* [40]
* [39]


### Merging Chains  afterNth/3 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 


### Specialization of cost equations fst/2 
* CE 15 is refined into CE [62] 
* CE 16 is refined into CE [63] 


#### Refined cost equations fst/2 
* CE 62: fst(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 63: fst(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of fst/2 
* CEs [62] --> Loop 42 
* CEs [63] --> Loop 43 

#### Loops of fst/2 
* Loop 42: fst(V,Out) [V>=Out+1,Out>=0] 
* Loop 43: fst(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fst(V,Out) 

#### Partial ranking functions of CR fst(V,Out) 


### Resulting Chains:fst(V,Out) 
* [43]
* [42]


### Merging Chains  fst/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations head/2 
* CE 24 is refined into CE [64] 
* CE 25 is refined into CE [65] 


#### Refined cost equations head/2 
* CE 64: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 65: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [64] --> Loop 44 
* CEs [65] --> Loop 45 

#### Loops of head/2 
* Loop 44: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 45: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [45]
* [44]


### Merging Chains  head/2 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


### Specialization of cost equations sel/3 
* CE 28 is refined into CE [66,67,68,69,70] 


#### Refined cost equations sel/3 
* CE 66: sel(V,V1,Out) = 1+ afterNth(W1,V1,X1):1+ head(X1,Y1):1
     [V1+1>=X1,X1>=0,V1>=0,Y1=0,W1=0,Out=0,V=0] 
* CE 67: sel(V,V1,Out) = 1+ afterNth(W1,V1,X1):1+ head(X1,Out):2
     [X1>=Out+1,V1+1>=X1,Out>=0,W1=0,V=0] 
* CE 68: sel(V,V1,Out) = 1+ afterNth(V,V1,W1):2+ head(X1,Y1):1
     [V1>=0,V>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 69: sel(V,V1,Out) = 1+ afterNth(V,V1,W1):3+ head(W1,X1):1
     [W1>=0,V1>=1,V>=1,X1=0,Out=0] 
* CE 70: sel(V,V1,Out) = 1+ afterNth(V,V1,W1):3+ head(W1,Out):2
     [W1>=Out+1,Out>=0,V1>=1,V>=1] 

### Cost equations --> "Loop" of sel/3 
* CEs [70] --> Loop 46 
* CEs [68,69] --> Loop 47 
* CEs [66,67] --> Loop 48 

#### Loops of sel/3 
* Loop 46: sel(V,V1,Out) [Out>=0,V1>=1,V>=1] 
* Loop 47: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 48: sel(V,V1,Out) [V1>=Out,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 

#### Partial ranking functions of CR sel(V,V1,Out) 


### Resulting Chains:sel(V,V1,Out) 
* [48]
* [47]
* [46]


### Merging Chains  sel/3 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[46]] --> 3 


### Specialization of cost equations tail/2 
* CE 26 is refined into CE [71,72] 
* CE 27 is refined into CE [73] 


#### Refined cost equations tail/2 
* CE 71: tail(V,Out) = 1+ activate(Out,Out):1
     [V>=Out+1,Out>=0] 
* CE 72: tail(V,Out) = 1+ activate(W,Out):2
     [2*V>=Out+1,Out>=3,Out=2*W+1] 
* CE 73: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [72] --> Loop 49 
* CEs [71] --> Loop 50 
* CEs [73] --> Loop 51 

#### Loops of tail/2 
* Loop 49: tail(V,Out) [2*V>=Out+1,Out>=3] 
* Loop 50: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 51: tail(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [51]
* [50]
* [49]


### Merging Chains  tail/2 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 
* [[49]] --> 3 


### Specialization of cost equations take/3 
* CE 29 is refined into CE [74,75,76,77,78] 


#### Refined cost equations take/3 
* CE 74: take(V,V1,Out) = 1+ splitAt(W1,X1,Y1):1+ fst(Y1,Z1):1
     [Y1>=2,Y1=X1+2,Y1=V1+2,Z1=0,W1=0,Out=0,V=0] 
* CE 75: take(V,V1,Out) = 1+ splitAt(W1,X1,Y1):1+ fst(Y1,Out):2
     [Y1>=Out+1,Out>=0,Y1>=2,Y1=X1+2,Y1=V1+2,W1=0,V=0] 
* CE 76: take(V,V1,Out) = 1+ splitAt(V,V1,W1):2+ fst(X1,Y1):1
     [V1>=0,V>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 77: take(V,V1,Out) = 1+ splitAt(V,V1,W1):3+ fst(W1,X1):1
     [W1>=V1+2,V1>=1,V>=1,X1=0,Out=0] 
* CE 78: take(V,V1,Out) = 1+ splitAt(V,V1,W1):3+ fst(W1,Out):2
     [W1>=Out+1,W1>=V1+2,Out>=0,V1>=1,V>=1] 

### Cost equations --> "Loop" of take/3 
* CEs [78] --> Loop 52 
* CEs [76,77] --> Loop 53 
* CEs [74,75] --> Loop 54 

#### Loops of take/3 
* Loop 52: take(V,V1,Out) [Out>=0,V1>=1,V>=1] 
* Loop 53: take(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 54: take(V,V1,Out) [V1+1>=Out,Out>=0,V1>=0,V=0] 

### Ranking functions of CR take(V,V1,Out) 

#### Partial ranking functions of CR take(V,V1,Out) 


### Resulting Chains:take(V,V1,Out) 
* [54]
* [53]
* [52]


### Merging Chains  take/3 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [79,80] 
* CE 3 is refined into CE [81,82] 
* CE 4 is refined into CE [83,84] 
* CE 5 is refined into CE [85,86,87] 
* CE 6 is refined into CE [88,89,90] 
* CE 7 is refined into CE [91,92] 
* CE 8 is refined into CE [93,94,95] 
* CE 9 is refined into CE [96,97,98] 
* CE 10 is refined into CE [99,100,101] 
* CE 11 is refined into CE [102,103,104] 
* CE 12 is refined into CE [105,106] 


#### Refined cost equations start/4 
* CE 79: start(V,V1,V2,V3) = 0+ natsFrom(W3,X3):1
     [X3>=1,X3=W3+1,X3=V+1] 
* CE 80: start(V,V1,V2,V3) = 0+ natsFrom(W3,X3):2
     [X3>=3,X3=2*W3+3,X3=2*V+3] 
* CE 81: start(V,V1,V2,V3) = 0+ fst(V,W3):1
     [V>=0,W3=0] 
* CE 82: start(V,V1,V2,V3) = 0+ fst(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 83: start(V,V1,V2,V3) = 0+ snd(V,W3):1
     [V>=0,W3=0] 
* CE 84: start(V,V1,V2,V3) = 0+ snd(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 85: start(V,V1,V2,V3) = 0+ splitAt(W3,X3,Y3):1
     [Y3>=2,Y3=X3+2,Y3=V1+2,W3=0,V=0] 
* CE 86: start(V,V1,V2,V3) = 0+ splitAt(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 87: start(V,V1,V2,V3) = 0+ splitAt(V,V1,W3):3
     [W3>=V1+2,V1>=1,V>=1] 
* CE 88: start(V,V1,V2,V3) = 0+ u(V,V1,V2,V3,W3):1
     [V3>=0,V2>=0,V1>=0,V>=0,W3=0] 
* CE 89: start(V,V1,V2,V3) = 0+ u(V,V1,W3,V3,X3):2
     [X3>=V+1,V3>=0,V1>=0,V>=1,X3=V+W3+1,X3=V+V2+1] 
* CE 90: start(V,V1,V2,V3) = 0+ u(V,V1,W3,V3,X3):3
     [X3>=V+4,V3>=0,V1>=0,V>=1,X3=2*W3+V+2,X3=2*V2+V+2] 
* CE 91: start(V,V1,V2,V3) = 0+ head(V,W3):1
     [V>=0,W3=0] 
* CE 92: start(V,V1,V2,V3) = 0+ head(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 93: start(V,V1,V2,V3) = 0+ tail(V,W3):1
     [V>=0,W3=0] 
* CE 94: start(V,V1,V2,V3) = 0+ tail(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 95: start(V,V1,V2,V3) = 0+ tail(V,W3):3
     [2*V>=W3+1,W3>=3] 
* CE 96: start(V,V1,V2,V3) = 0+ sel(W3,V1,X3):1
     [V1>=X3,X3>=0,W3=0,V=0] 
* CE 97: start(V,V1,V2,V3) = 0+ sel(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 98: start(V,V1,V2,V3) = 0+ sel(V,V1,W3):3
     [W3>=0,V1>=1,V>=1] 
* CE 99: start(V,V1,V2,V3) = 0+ take(W3,V1,X3):1
     [V1+1>=X3,X3>=0,V1>=0,W3=0,V=0] 
* CE 100: start(V,V1,V2,V3) = 0+ take(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 101: start(V,V1,V2,V3) = 0+ take(V,V1,W3):3
     [W3>=0,V1>=1,V>=1] 
* CE 102: start(V,V1,V2,V3) = 0+ afterNth(W3,V1,X3):1
     [V1+1>=X3,X3>=0,V1>=0,W3=0,V=0] 
* CE 103: start(V,V1,V2,V3) = 0+ afterNth(V,V1,W3):2
     [V1>=0,V>=0,W3=0] 
* CE 104: start(V,V1,V2,V3) = 0+ afterNth(V,V1,W3):3
     [W3>=0,V1>=1,V>=1] 
* CE 105: start(V,V1,V2,V3) = 0+ activate(V,V):1
     [V>=0] 
* CE 106: start(V,V1,V2,V3) = 0+ activate(W3,X3):2
     [X3>=3,X3=2*W3+1,X3=2*V+1] 

### Cost equations --> "Loop" of start/4 
* CEs [79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106] --> Loop 55 

#### Loops of start/4 
* Loop 55: start(V,V1,V2,V3) [V>=0] 

### Ranking functions of CR start(V,V1,V2,V3) 

#### Partial ranking functions of CR start(V,V1,V2,V3) 


### Resulting Chains:start(V,V1,V2,V3) 
* [55]


### Merging Chains  start/4 into  External patterns of execution 
* [[55]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of natsFrom(V,Out):
* Chain [23]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [22]: 1
  with precondition: [2*V+3=Out,V>=0] 


#### Cost of chains of activate(V,Out):
* Chain [25]: 2
  with precondition: [V=Out,V>=0] 

* Chain [24]: 2
  with precondition: [2*V+1=Out,V>=1] 


#### Cost of chains of snd(V,Out):
* Chain [27]: 0
  with precondition: [Out=0,V>=0] 

* Chain [26]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of u(V,V1,V2,V3,Out):
* Chain [30]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0,V3>=0] 

* Chain [29]: 3
  with precondition: [V+V2+1=Out,V>=1,V1>=0,V2>=0,V3>=0] 

* Chain [28]: 3
  with precondition: [V+2*V2+2=Out,V>=1,V1>=0,V2>=1,V3>=0] 


#### Cost of loops [31,32,33,34] 

 * loop 31:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
8
 * loop 32:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
8
 * loop 33:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
8
 * loop 34:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
8
#### Cost of phase [31,32,33,34]:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
16*it(31)+8*it(32)+8*it(33)+0
  Such that:aux(21) =< V
aux(22) =< V-V'
it(31) =< aux(21)
it(32) =< aux(21)
it(33) =< aux(21)
it(31) =< aux(22)
it(32) =< aux(22)
it(33) =< aux(22)

#### Cost of loops [35,36] 

 * loop 35:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
5
 * loop 36:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
5
#### Cost of phase [35,36]:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
5*it(35)+5*it(36)+0
  Such that:aux(30) =< V
aux(31) =< V-V'
it(35) =< aux(30)
it(36) =< aux(30)
it(35) =< aux(31)
it(36) =< aux(31)

#### Cost of phase [35,36]:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
5*it(35)+5*it(36)+0
  Such that:aux(30) =< V
aux(31) =< V-V'
it(35) =< aux(30)
it(36) =< aux(30)
it(35) =< aux(31)
it(36) =< aux(31)

#### Cost of phase [35,36]:splitAt(V,V1,Out) -> [splitAt(V',V1',Out')] 
5*it(35)+5*it(36)+0
  Such that:aux(30) =< V
aux(31) =< V-V'
it(35) =< aux(30)
it(36) =< aux(30)
it(35) =< aux(31)
it(36) =< aux(31)

#### Cost of chains of splitAt(V,V1,Out):
* Chain [[35,36],[31,32,33,34],38]: 42*it(31)+1
  Such that:aux(32) =< V
it(31) =< aux(32)

  with precondition: [Out=0,V>=2,V1>=2] 

* Chain [[35,36],38]: 10*it(35)+1
  Such that:aux(33) =< V
it(35) =< aux(33)

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [[35,36],37]: 10*it(35)+0
  Such that:aux(34) =< V
it(35) =< aux(34)

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [[31,32,33,34],38]: 32*it(31)+1
  Such that:aux(23) =< V
it(31) =< aux(23)

  with precondition: [V>=1,V1>=1,Out>=V1+2] 

* Chain [38]: 1
  with precondition: [V=0,V1+2=Out,V1>=0] 

* Chain [37]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of afterNth(V,V1,Out):
* Chain [41]: 3
  with precondition: [V=0,V1>=0,Out>=0,V1+1>=Out] 

* Chain [40]: 94*s(8)+2
  Such that:aux(36) =< V
s(8) =< aux(36)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [39]: 32*s(12)+3
  Such that:s(11) =< V
s(12) =< s(11)

  with precondition: [V>=1,V1>=1,Out>=0] 


#### Cost of chains of fst(V,Out):
* Chain [43]: 0
  with precondition: [Out=0,V>=0] 

* Chain [42]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of head(V,Out):
* Chain [45]: 0
  with precondition: [Out=0,V>=0] 

* Chain [44]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of sel(V,V1,Out):
* Chain [48]: 5
  with precondition: [V=0,Out>=0,V1>=Out] 

* Chain [47]: 126*s(14)+4
  Such that:aux(37) =< V
s(14) =< aux(37)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [46]: 32*s(18)+5
  Such that:s(17) =< V
s(18) =< s(17)

  with precondition: [V>=1,V1>=1,Out>=0] 


#### Cost of chains of tail(V,Out):
* Chain [51]: 0
  with precondition: [Out=0,V>=0] 

* Chain [50]: 3
  with precondition: [Out>=0,V>=Out+1] 

* Chain [49]: 3
  with precondition: [Out>=3,2*V>=Out+1] 


#### Cost of chains of take(V,V1,Out):
* Chain [54]: 3
  with precondition: [V=0,V1>=0,Out>=0,V1+1>=Out] 

* Chain [53]: 94*s(20)+2
  Such that:aux(38) =< V
s(20) =< aux(38)

  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [52]: 32*s(24)+3
  Such that:s(23) =< V
s(24) =< s(23)

  with precondition: [V>=1,V1>=1,Out>=0] 


#### Cost of chains of start(V,V1,V2,V3):
* Chain [55]: 504*s(26)+5
  Such that:aux(39) =< V
s(26) =< aux(39)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1,V2,V3): 
-------------------------------------
* Chain [55] with precondition: [V>=0] 
    - Upper bound: 504*V+5 
    - Complexity: n 

### Maximum cost of start(V,V1,V2,V3): 504*V+5 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 157 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 115 ms.
   - Equation cost structures 51 ms.
   - Phase cost structures 62 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 390 ms.

