
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun1/3,fun3/3,mark/2]  
 Merged into fun1fun3mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun/2,fun1fun3mark/3,fun2/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into fun1fun3mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1fun3mark/3 
* CE 7 is refined into CE [20] 
* CE 18 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 14 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 11 is refined into CE [26] 
* CE 17 is refined into CE [27] 
* CE 13 is refined into CE [28] 
* CE 16 is refined into CE [29] 
* CE 9 is refined into CE [30] 
* CE 10 is refined into CE [31] 
* CE 8 is refined into CE [32] 


#### Refined cost equations fun1fun3mark/3 
* CE 20: fun1fun3mark(A,B,C) = 2+ fun1fun3mark(D,E,F)
     [F>=0,D>=0,F+1=C,D+1=A] 
* CE 21: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(D,E,F)
     [A+F>=C,C>=F+1,A+F=C+D] 
* CE 22: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(D,E,C)
     [B>=D+1,D>=0,A=0] 
* CE 23: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(B,D,C)
     [B>=0,A=0] 
* CE 24: fun1fun3mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 25: fun1fun3mark(A,B,C) = 1
     [C=0,A=0] 
* CE 26: fun1fun3mark(A,B,C) = 2+ fun1fun3mark(D,E,F)+ fun1fun3mark(G,H,I)+ fun1fun3mark(F,J,K)
     [I>=0,G>=0,F>=0,D>=0,F+K+2*I+3=C,D+G+1=A] 
* CE 27: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(D,E,F)+ fun1fun3mark(G,H,I)+ fun1fun3mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 28: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(D,E,F)+ fun1fun3mark(G,H,I)+ fun1fun3mark(F,I,C)
     [B>=G+1,G>=0,D>=0,D+1=A] 
* CE 29: fun1fun3mark(A,B,C) = 1+ fun1fun3mark(D,E,F)+ fun1fun3mark(B,G,H)+ fun1fun3mark(F,H,I)
     [D>=0,B>=0,I+1=C,D+1=A] 
* CE 30: fun1fun3mark(A,B,C) = 3+ fun1fun3mark(D,E,F)+ fun1fun3mark(F,G,H)+ fun1fun3mark(H,I,C)
     [F>=0,D>=0,D+1=A,I=3] 
* CE 31: fun1fun3mark(A,B,C) = 2+ fun1fun3mark(D,E,F)+ fun1fun3mark(G,H,I)
     [I>=0,G>=0,F>=0,D>=0,F+I+1=C,D+G+1=A] 
* CE 32: fun1fun3mark(A,B,C) = 3+ fun1fun3mark(D,E,F)+ fun1fun3mark(F,G,H)+ fun1fun3mark(I,J,K)+ fun1fun3mark(H,L,C)
     [F>=0,D>=0,L=K+6,D+1=A,I=1] 

### Cost equations --> "Loop" of fun1fun3mark/3 
* CEs [32] --> Loop 14 
* CEs [31] --> Loop 15 
* CEs [26] --> Loop 16 
* CEs [27] --> Loop 17 
* CEs [28] --> Loop 18 
* CEs [29] --> Loop 19 
* CEs [30] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [20,21] --> Loop 23 
* CEs [22] --> Loop 24 
* CEs [23] --> Loop 25 

#### Loops of fun1fun3mark/3 
* Loop 14: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(C',A'2,B'2)  fun1fun3mark(A'3,B'3,C'3)  fun1fun3mark(B'2,A'4,C)
                  [C'>=0,A'>=0,C'3+6=A'4,A'+1=A,A'3=1] 
* Loop 15: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(A'2,B'2,C'2)
                  [C'2>=0,A'2>=0,C'>=0,A'>=0,C'+C'2+1=C,A'+A'2+1=A] 
* Loop 16: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(A'2,B'2,C'2)  fun1fun3mark(C',A'3,B'3)
                  [A>=A'+1,C'2>=0,C'>=0,A'>=0,C'+B'3+2*C'2+3=C,A'+A'2+1=A] 
* Loop 17: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(A'2,B'2,C'2)  fun1fun3mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 18: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(A'2,B'2,C'2)  fun1fun3mark(C',C'2,C)
                  [B>=A'2+1,A'2>=0,A>=1,A=A'+1] 
* Loop 19: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(B,A'2,B'2)  fun1fun3mark(C',B'2,A'3)
                  [B>=0,A>=1,C=A'3+1,A=A'+1] 
* Loop 20: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')  fun1fun3mark(C',A'2,B'2)  fun1fun3mark(B'2,A'3,C)
                  [C'>=0,A>=1,A=A'+1,A'3=3] 
* Loop 21: fun1fun3mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 22: fun1fun3mark(A,B,C) [C=0,A=0] 
* Loop 23: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C')
                  [A>=A'+1,A'>=0,C+A'=A+C'] 
* Loop 24: fun1fun3mark(A,B,C)->  fun1fun3mark(A',B',C)
                  [B>=A'+1,A'>=0,A=0] 
* Loop 25: fun1fun3mark(A,B,C)->  fun1fun3mark(B,A',C)
                  [B>=0,A=0] 

### Ranking functions of CR fun1fun3mark(A,B,C) 

#### Partial ranking functions of CR fun1fun3mark(A,B,C) 
* Partial RF of phase [14,15,16,17,18,19,20,23,24,25]:
  - RF of loop [14:1,15:1,15:2,16:1,16:2,17:1,17:2,18:1,19:1,20:1,23:1]:
    A depends on loops [14:2,14:4,16:3,17:3,18:2,18:3,19:2,19:3,20:2,20:3,24:1,25:1] 


### Resulting Chains:fun1fun3mark(A,B,C) 
* [multiple([14,15,16,17,18,19,20,23,24,25],[[],[22],[21]])]...
* [22]
* [21]


### Merging Chains  fun1fun3mark/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[multiple([14,15,16,17,18,19,20,23,24,25],[[],[22],[21]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [33] 
* CE 3 is refined into CE [34,35,36,37,38,39,40,41] 
* CE 4 is refined into CE [42,43,44,45,46,47] 
* CE 5 is refined into CE [48,49,50] 
* CE 6 is refined into CE [51,52,53] 


#### Refined cost equations start/2 
* CE 33: start(V,V1) = 1
     [V>=0] 
* CE 34: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):2+ fun1fun3mark(C2,D2,E2):1
     [B2>=2,B2+6=D2,B2=A2+2,E2=0,C2=0,Z1=1,Y1=0,W1=0,V=0] 
* CE 35: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):2+ fun1fun3mark(C2,D2,E2):2
     [E2>=9,E2=D2+1,E2=B2+7,E2=A2+9,C2=0,Z1=1,Y1=0,W1=0,V=0] 
* CE 36: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):2+ fun1fun3mark(C2,D2,E2):3
     [B2>=2,B2+6=D2,B2=A2+2,C2=0,Z1=1,Y1=0,W1=0,V=0] 
* CE 37: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):3
     [C2=B2+6,D2=0,Z1=1,Y1=0,W1=0,V=0] 
* CE 38: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):2+ fun1fun3mark(Y1,Z1,A2):2+ fun1fun3mark(X1,B2,C2):2
     [C2>=X1+9,X1>=V+1,V>=0,C2=X1+B2+1,C2=X1+A2+7,C2=X1+Z1+9,X1=V+W1+1,Y1=1] 
* CE 39: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):2+ fun1fun3mark(Y1,Z1,A2):2+ fun1fun3mark(X1,B2,C2):3
     [X1>=V+1,A2>=2,V>=0,X1=V+W1+1,A2+6=B2,A2=Z1+2,Y1=1] 
* CE 40: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):2+ fun1fun3mark(Y1,Z1,A2):3
     [X1>=V+1,V>=0,X1=V+W1+1,B2=A2+6,Y1=1] 
* CE 41: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):3
     [V>=0,Y1=Z1+6,A2=1] 
* CE 42: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):1
     [B2=0,A2=3,Z1=0,Y1=0,W1=0,V=0] 
* CE 43: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):2
     [B2=4,A2=3,Z1=0,Y1=0,W1=0,V=0] 
* CE 44: start(V,V1) = 2+ fun1fun3mark(W1,X1,Y1):1+ fun1fun3mark(Z1,A2,B2):3
     [A2=3,Z1=0,Y1=0,W1=0,V=0] 
* CE 45: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):2+ fun1fun3mark(Y1,Z1,A2):2
     [A2>=V+5,V>=0,A2=V+W1+5,A2=Y1+4,A2=X1+4,Z1=3] 
* CE 46: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):2+ fun1fun3mark(X1,Y1,Z1):3
     [X1>=V+1,V>=0,X1=V+W1+1,Y1=3] 
* CE 47: start(V,V1) = 2+ fun1fun3mark(V,W1,X1):3
     [V>=0,Y1=3] 
* CE 48: start(V,V1) = 1+ fun1fun3mark(W1,X1,Y1):1
     [V1>=0,Y1=0,W1=0,V=0] 
* CE 49: start(V,V1) = 1+ fun1fun3mark(V,W1,X1):2
     [X1>=V+1,V>=0,V1>=0,X1=V+W1+1] 
* CE 50: start(V,V1) = 1+ fun1fun3mark(V,W1,X1):3
     [V>=0,V1>=0] 
* CE 51: start(V,V1) = 0+ fun1fun3mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 52: start(V,V1) = 0+ fun1fun3mark(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 53: start(V,V1) = 0+ fun1fun3mark(V,W1,X1):3
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [36,37,39,40,41,44,46,47,50,53] --> Loop 26 
* CEs [33,34,35,38,42,43,45,48,49,51,52] --> Loop 27 

#### Loops of start/2 
* Loop 26: start(V,V1) [V>=0] 
* Loop 27: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [27]
* [26]...


### Merging Chains  start/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14,15,16,17,18,19,20,23,24,25] 

 * loop 14:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3),fun1fun3mark(A'4,B'4,C'4)] 
3
 * loop 15:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2)] 
2
 * loop 16:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3)] 
2
 * loop 17:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3)] 
1
 * loop 18:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3)] 
1
 * loop 19:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3)] 
1
 * loop 20:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C'),fun1fun3mark(A'2,B'2,C'2),fun1fun3mark(A'3,B'3,C'3)] 
3
 * loop 23:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C')] 
2
 * loop 24:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C')] 
1
 * loop 25:fun1fun3mark(A,B,C) -> [fun1fun3mark(A',B',C')] 
1
#### Cost of phase [14,15,16,17,18,19,20,23,24,25]:fun1fun3mark(A,B,C) -> [] 
13*it(14)+4*it(15)+2*it([21])+0
#### Cost of chains of fun1fun3mark(A,B,C):
* Chain [multiple([14,15,16,17,18,19,20,23,24,25],[[],[22],[21]])]...: 13*it(14)+4*it(15)+2*it([21])+0
  with precondition: [A>=0] 

* Chain [22]: 1
  with precondition: [A=0,C=0] 

* Chain [21]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V,V1):
* Chain [27]: 5
  with precondition: [V>=0] 

* Chain [26]...: 1*aux(20)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [27] with precondition: [V>=0] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [26]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 90 ms.
* Invariants computed in 98 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 38 ms.
* Refinement performed in 304 ms.
* Termination proved in 46 ms.
* Upper bounds computed in 474 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 436 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1125 ms.

