
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [active/2]
1. recursive  : [g/2]
2. recursive  : [h/2]
3. non_recursive  : [proper/2]
4. recursive  : [top/2]
5. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into active/2
1. SCC is partially evaluated into g/2
2. SCC is partially evaluated into h/2
3. SCC is partially evaluated into proper/2
4. SCC is partially evaluated into top/2
5. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations active/2 
* CE 16 is refined into CE [19] 
* CE 15 is refined into CE [20] 


#### Refined cost equations active/2 
* CE 19: active(V,Out) = 0
     [V>=0,Out=0] 
* CE 20: active(V,Out) = 1
     [Out=2,V=0] 

### Cost equations --> "Loop" of active/2 
* CEs [19] --> Loop 13 
* CEs [20] --> Loop 14 

#### Loops of active/2 
* Loop 13: active(V,Out) [V>=0,Out=0] 
* Loop 14: active(V,Out) [Out=2,V=0] 

### Ranking functions of CR active(V,Out) 

#### Partial ranking functions of CR active(V,Out) 


### Resulting Chains:active(V,Out) 
* [14]
* [13]


### Merging Chains  active/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations g/2 
* CE 8 is refined into CE [21] 
* CE 7 is refined into CE [22] 


#### Refined cost equations g/2 
* CE 21: g(V,Out) = 0
     [V>=0,Out=0] 
* CE 22: g(V,Out) = 1+ g(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of g/2 
* CEs [22] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of g/2 
* Loop 15: g(V,Out)->  g(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 16: g(V,Out) [V>=0,Out=0] 

### Ranking functions of CR g(V,Out) 
* RF of phase [15]: [V]

#### Partial ranking functions of CR g(V,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V


### Resulting Chains:g(V,Out) 
* [[15],16]
* [16]


### Merging Chains  g/2 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations h/2 
* CE 18 is refined into CE [23] 
* CE 17 is refined into CE [24] 


#### Refined cost equations h/2 
* CE 23: h(V,Out) = 0
     [V>=0,Out=0] 
* CE 24: h(V,Out) = 1+ h(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of h/2 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of h/2 
* Loop 17: h(V,Out)->  h(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 18: h(V,Out) [V>=0,Out=0] 

### Ranking functions of CR h(V,Out) 
* RF of phase [17]: [V]

#### Partial ranking functions of CR h(V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V


### Resulting Chains:h(V,Out) 
* [[17],18]
* [18]


### Merging Chains  h/2 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations proper/2 
* CE 14 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 12 is refined into CE [27] 


#### Refined cost equations proper/2 
* CE 25: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 26: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 27: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 

#### Loops of proper/2 
* Loop 19: proper(V,Out) [V>=0,Out=0] 
* Loop 20: proper(V,Out) [Out=2,V=1] 
* Loop 21: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [21]
* [20]
* [19]


### Merging Chains  proper/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations top/2 
* CE 11 is refined into CE [28] 
* CE 9 is refined into CE [29,30] 
* CE 10 is refined into CE [31,32,33] 


#### Refined cost equations top/2 
* CE 28: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 29: top(V,Out) = 1+ active(W,X):1+ top(Y,Out)
     [Y=2,X=2,W=0,V=1] 
* CE 30: top(V,Out) = 1+ active(W,X):2+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 
* CE 31: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 32: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 33: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [30,33] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of top/2 
* Loop 22: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 23: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 24: top(V,Out)->  top(V',Out)
                  [V'=2,V=1] 
* Loop 25: top(V,Out)->  top(V',Out)
                  [V'=1,V=1] 
* Loop 26: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[25]]...
* [[25],26]
* [[25],24,[23]]...
* [[25],24,[23],26]
* [[25],24,[23],22,26]
* [[25],24,26]
* [[25],24,22,26]
* [[25],22,26]
* [[23]]...
* [[23],26]
* [[23],22,26]
* [26]
* [24,[23]]...
* [24,[23],26]
* [24,[23],22,26]
* [24,26]
* [24,22,26]
* [22,26]


### Merging Chains  top/2 into  External patterns of execution 
* [[26,22],[26,22,24],[26,24],[26,22,[23],24],[26,[23],24],[26],[26,22,[25]],[26,22,24,[25]],[26,24,[25]],[26,22,[23],24,[25]],[26,[23],24,[25]],[26,[25]]] --> 1 
* [[26,22,[23]],[26,[23]]] --> 2 
* [[[23],24],[[25]],[[23],24,[25]]] --> 3 
* [[[23]]] --> 4 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [34,35] 
* CE 3 is refined into CE [36,37,38,39] 
* CE 4 is refined into CE [40,41,42] 
* CE 5 is refined into CE [43,44] 
* CE 6 is refined into CE [45,46] 


#### Refined cost equations start/1 
* CE 34: start(V) = 0+ g(V,W):1
     [V>=0,W=0] 
* CE 35: start(V) = 0+ g(V,W):2
     [V>=W,W>=1] 
* CE 36: start(V) = 0+ top(V,W):1
     [V>=0,W=0] 
* CE 37: start(V) = 0+ top(W,X):2
     [X=0,W=2,V=2] 
* CE 38: start(V) = 0+ top(W,X):3
     [W=1,V=1] 
* CE 39: start(V) = 0+ top(W,X):4
     [W=2,V=2] 
* CE 40: start(V) = 0+ proper(W,X):1
     [X=1,W=0,V=0] 
* CE 41: start(V) = 0+ proper(W,X):2
     [X=2,W=1,V=1] 
* CE 42: start(V) = 0+ proper(V,W):3
     [V>=0,W=0] 
* CE 43: start(V) = 0+ active(W,X):1
     [X=2,W=0,V=0] 
* CE 44: start(V) = 0+ active(V,W):2
     [V>=0,W=0] 
* CE 45: start(V) = 0+ h(V,W):1
     [V>=0,W=0] 
* CE 46: start(V) = 0+ h(V,W):2
     [V>=W,W>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [37] --> Loop 27 
* CEs [41] --> Loop 28 
* CEs [34,35,36,40,42,43,44,45,46] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [38] --> Loop 31 

#### Loops of start/1 
* Loop 27: start(V) [V=2] 
* Loop 28: start(V) [V=1] 
* Loop 29: start(V) [V>=0] 
* Loop 30: start(V) [V=2] 
* Loop 31: start(V) [V=1] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [31]...
* [30]...
* [29]
* [28]
* [27]


### Merging Chains  start/1 into  External patterns of execution 
* [[28],[29]] --> 1 
* [[27]] --> 2 
* [[31]] --> 3 
* [[30]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of active(V,Out):
* Chain [14]: 1
  with precondition: [V=0,Out=2] 

* Chain [13]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [15] 

 * loop 15:g(V,Out) -> [g(V',Out')] 
1
#### Cost of phase [15]:g(V,Out) -> [g(V',Out')] 
1*it(15)+0
  Such that:it(15) =< V
it(15) =< V-V'

#### Cost of chains of g(V,Out):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [16]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [17] 

 * loop 17:h(V,Out) -> [h(V',Out')] 
1
#### Cost of phase [17]:h(V,Out) -> [h(V',Out')] 
1*it(17)+0
  Such that:it(17) =< V
it(17) =< V-V'

#### Cost of chains of h(V,Out):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [18]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of proper(V,Out):
* Chain [21]: 1
  with precondition: [V=0,Out=1] 

* Chain [20]: 1
  with precondition: [V=1,Out=2] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [25] 

 * loop 25:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of loops [23] 

 * loop 23:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [23]:top(V,Out) -> [top(V',Out')] 
2*it(23)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [23]:top(V,Out) -> [top(V',Out')] 
2*it(23)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [23]:top(V,Out) -> [top(V',Out')] 
2*it(23)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of chains of top(V,Out):
* Chain [[25]]...: 2*it(25)+0
  with precondition: [V=1] 

* Chain [[25],26]: 2*it(25)+0
  with precondition: [V=1,Out=0] 

* Chain [[25],24,[23]]...: 4*it(23)+2
  with precondition: [V=1] 

* Chain [[25],24,[23],26]: 4*it(23)+2
  with precondition: [V=1,Out=0] 

* Chain [[25],24,[23],22,26]: 4*it(23)+3
  with precondition: [V=1,Out=0] 

* Chain [[25],24,26]: 2*it(25)+2
  with precondition: [V=1,Out=0] 

* Chain [[25],24,22,26]: 2*it(25)+3
  with precondition: [V=1,Out=0] 

* Chain [[25],22,26]: 2*it(25)+1
  with precondition: [V=1,Out=0] 

* Chain [[23]]...: 2*it(23)+0
  with precondition: [V=2] 

* Chain [[23],26]: 2*it(23)+0
  with precondition: [V=2,Out=0] 

* Chain [[23],22,26]: 2*it(23)+1
  with precondition: [V=2,Out=0] 

* Chain [26]: 0
  with precondition: [Out=0,V>=0] 

* Chain [24,[23]]...: 2*it(23)+2
  with precondition: [V=1] 

* Chain [24,[23],26]: 2*it(23)+2
  with precondition: [V=1,Out=0] 

* Chain [24,[23],22,26]: 2*it(23)+3
  with precondition: [V=1,Out=0] 

* Chain [24,26]: 2
  with precondition: [V=1,Out=0] 

* Chain [24,22,26]: 3
  with precondition: [V=1,Out=0] 

* Chain [22,26]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V):
* Chain [31]...: 1*s(14)+0
  with precondition: [V=1] 

* Chain [30]...: 2*s(15)+0
  with precondition: [V=2] 

* Chain [29]: 2*s(16)+1*s(17)+1
  Such that:aux(4) =< V
s(16) =< aux(4)

  with precondition: [V>=0] 

* Chain [28]: 1
  with precondition: [V=1] 

* Chain [27]: 1*s(19)+0
  with precondition: [V=2] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [31]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [27] with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 106 ms.
   - Backward Invariants 52 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 111 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 115 ms.
   - Equation cost structures 29 ms.
   - Phase cost structures 20 ms.
   - Chain cost structures 41 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 420 ms.

