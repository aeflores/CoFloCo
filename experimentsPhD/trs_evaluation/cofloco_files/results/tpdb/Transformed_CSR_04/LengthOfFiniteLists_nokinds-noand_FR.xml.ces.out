
Preprocessing Cost Relations
=====================================
12. SCC does not have a single cut point : [isNatList/2,isNat/2]  
 Merged into isNatListisNat/2

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [fun/1]
2. non_recursive  : [length/2]
3. non_recursive  : [nil/1]
4. non_recursive  : [s/2]
5. non_recursive  : [zeros/1]
6. recursive [non_tail] : [activate/2]
7. non_recursive  : [fun1/2]
8. non_recursive  : [fun2/2]
9. non_recursive  : [fun3/2]
10. non_recursive  : [fun5/2]
11. non_recursive  : [fun7/2]
13. recursive [non_tail] : [fun4/3,isNatIList/2]
14. non_recursive  : [fun9/3]
15. non_recursive  : [fun8/4]
16. non_recursive  : [start/3]
12. recursive [non_tail,multiple] : [fun6/3,isNatListisNat/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into zeros/1
6. SCC is partially evaluated into activate/2
7. SCC is partially evaluated into fun1/2
8. SCC is partially evaluated into fun2/2
9. SCC is partially evaluated into fun3/2
10. SCC is partially evaluated into fun5/2
11. SCC is partially evaluated into fun7/2
13. SCC is partially evaluated into isNatIList/2
14. SCC is partially evaluated into fun9/3
15. SCC is partially evaluated into fun8/4
16. SCC is partially evaluated into start/3
12. SCC is partially evaluated into isNatListisNat/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations zeros/1 
* CE 37 is refined into CE [49] 
* CE 38 is refined into CE [50] 


#### Refined cost equations zeros/1 
* CE 49: zeros(Out) = 3
     [Out=3] 
* CE 50: zeros(Out) = 1
     [Out=2] 

### Cost equations --> "Loop" of zeros/1 
* CEs [49] --> Loop 30 
* CEs [50] --> Loop 31 

#### Loops of zeros/1 
* Loop 30: zeros(Out) [Out=3] 
* Loop 31: zeros(Out) [Out=2] 

### Ranking functions of CR zeros(Out) 

#### Partial ranking functions of CR zeros(Out) 


### Resulting Chains:zeros(Out) 
* [31]
* [30]


### Merging Chains  zeros/1 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations activate/2 
* CE 17 is refined into CE [51,52] 
* CE 20 is refined into CE [53] 
* CE 18 is refined into CE [54] 
* CE 21 is refined into CE [55] 
* CE 19 is refined into CE [56] 


#### Refined cost equations activate/2 
* CE 51: activate(V3,Out) = 1+ zeros(W3):1
     [W3=2,Out=2,V3=2] 
* CE 52: activate(V3,Out) = 1+ zeros(W3):2
     [W3=3,Out=3,V3=2] 
* CE 53: activate(V3,Out) = 2
     [Out=1,V3=1] 
* CE 54: activate(V3,Out) = 2
     [Out=0,V3=0] 
* CE 55: activate(A,A) = 1
     [A>=0] 
* CE 56: activate(V3,Out) = 2+ activate(W3,X3)
     [Out+W3>=V3,V3>=W3+1,W3>=0,V3+X3=Out+W3] 

### Cost equations --> "Loop" of activate/2 
* CEs [56] --> Loop 32 
* CEs [52] --> Loop 33 
* CEs [51] --> Loop 34 
* CEs [53] --> Loop 35 
* CEs [54,55] --> Loop 36 

#### Loops of activate/2 
* Loop 32: activate(V3,Out)->  activate(V3',Out')
                  [Out+V3'>=V3,V3>=V3'+1,V3'>=0,V3+Out'=Out+V3'] 
* Loop 33: activate(V3,Out) [Out=3,V3=2] 
* Loop 34: activate(V3,Out) [Out=2,V3=2] 
* Loop 35: activate(V3,Out) [Out=1,V3=1] 
* Loop 36: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V3,Out) 
* RF of phase [32]: [V3]

#### Partial ranking functions of CR activate(V3,Out) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V3


### Resulting Chains:activate(V3,Out) 
* [[32],36]
* [[32],35]
* [[32],34]
* [[32],33]
* [36]
* [35]
* [34]
* [33]


### Merging Chains  activate/2 into  External patterns of execution 
* [[35],[36],[34,[32]],[35,[32]],[36,[32]]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 
* [[33,[32]]] --> 4 


### Specialization of cost equations fun1/2 
* CE 40 is refined into CE [57] 
* CE 39 is refined into CE [58] 


#### Refined cost equations fun1/2 
* CE 57: fun1(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 58: fun1(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun1/2 
* CEs [57] --> Loop 37 
* CEs [58] --> Loop 38 

#### Loops of fun1/2 
* Loop 37: fun1(V3,Out) [V3>=0,Out=0] 
* Loop 38: fun1(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun1(V3,Out) 

#### Partial ranking functions of CR fun1(V3,Out) 


### Resulting Chains:fun1(V3,Out) 
* [38]
* [37]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations fun2/2 
* CE 42 is refined into CE [59] 
* CE 41 is refined into CE [60] 


#### Refined cost equations fun2/2 
* CE 59: fun2(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 60: fun2(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun2/2 
* CEs [59] --> Loop 39 
* CEs [60] --> Loop 40 

#### Loops of fun2/2 
* Loop 39: fun2(V3,Out) [V3>=0,Out=0] 
* Loop 40: fun2(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun2(V3,Out) 

#### Partial ranking functions of CR fun2(V3,Out) 


### Resulting Chains:fun2(V3,Out) 
* [40]
* [39]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations fun3/2 
* CE 44 is refined into CE [61] 
* CE 43 is refined into CE [62] 


#### Refined cost equations fun3/2 
* CE 61: fun3(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 62: fun3(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun3/2 
* CEs [61] --> Loop 41 
* CEs [62] --> Loop 42 

#### Loops of fun3/2 
* Loop 41: fun3(V3,Out) [V3>=0,Out=0] 
* Loop 42: fun3(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun3(V3,Out) 

#### Partial ranking functions of CR fun3(V3,Out) 


### Resulting Chains:fun3(V3,Out) 
* [42]
* [41]


### Merging Chains  fun3/2 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations fun5/2 
* CE 36 is refined into CE [63] 
* CE 35 is refined into CE [64] 


#### Refined cost equations fun5/2 
* CE 63: fun5(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 64: fun5(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun5/2 
* CEs [63] --> Loop 43 
* CEs [64] --> Loop 44 

#### Loops of fun5/2 
* Loop 43: fun5(V3,Out) [V3>=0,Out=0] 
* Loop 44: fun5(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun5(V3,Out) 

#### Partial ranking functions of CR fun5(V3,Out) 


### Resulting Chains:fun5(V3,Out) 
* [44]
* [43]


### Merging Chains  fun5/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations fun7/2 
* CE 30 is refined into CE [65] 
* CE 29 is refined into CE [66] 


#### Refined cost equations fun7/2 
* CE 65: fun7(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 66: fun7(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun7/2 
* CEs [65] --> Loop 45 
* CEs [66] --> Loop 46 

#### Loops of fun7/2 
* Loop 45: fun7(V3,Out) [V3>=0,Out=0] 
* Loop 46: fun7(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun7(V3,Out) 

#### Partial ranking functions of CR fun7(V3,Out) 


### Resulting Chains:fun7(V3,Out) 
* [46]
* [45]


### Merging Chains  fun7/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


### Specialization of cost equations isNatListisNat/2 
* CE 22 is refined into CE [67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82] 
* CE 27 is refined into CE [83,84,85,86,87,88,89,90] 
* CE 28 is refined into CE [91,92,93,94,95,96,97,98] 
* CE 25 is refined into CE [99] 
* CE 24 is refined into CE [100] 
* CE 26 is refined into CE [101] 
* CE 23 is refined into CE [102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189] 


#### Refined cost equations isNatListisNat/2 
* CE 67: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,E):1
     [D>=0,E>=0,C>=0,C+E+1=A,B=0] 
* CE 68: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2
     [D>=0,C>=0,C+3=A,F=2,E=2,B=0] 
* CE 69: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):3
     [D>=0,C>=0,C+3=A,F=3,E=2,B=0] 
* CE 70: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):4
     [D>=0,F>=4,C>=0,C+F=A,F=E+1,B=0] 
* CE 71: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,G):1
     [F>=0,G>=0,G+3=A,E=2,D=2,C=2,B=0] 
* CE 72: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2
     [F>=0,E=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 73: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):3
     [F>=0,E=2,H=3,G=2,D=2,C=2,B=0,A=5] 
* CE 74: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):4
     [F>=0,H>=4,H=G+1,H+2=A,E=2,D=2,C=2,B=0] 
* CE 75: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,G):1
     [F>=0,G>=0,G+3=A,E=3,D=3,C=2,B=0] 
* CE 76: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2
     [F>=0,E=3,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 77: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):3
     [F>=0,E=3,H=3,G=2,D=3,C=2,B=0,A=5] 
* CE 78: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):4
     [F>=0,H>=4,H=G+1,H+2=A,E=3,D=3,C=2,B=0] 
* CE 79: isNatListisNat(A,B) = 1+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,F):1
     [E>=0,F>=0,D>=4,D+F=A,D=C+1,B=0] 
* CE 80: isNatListisNat(A,B) = 1+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2
     [E>=0,D>=4,D=C+1,D+2=A,G=2,F=2,B=0] 
* CE 81: isNatListisNat(A,B) = 1+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):3
     [E>=0,D>=4,D=C+1,D+2=A,G=3,F=2,B=0] 
* CE 82: isNatListisNat(A,B) = 1+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):4
     [E>=0,G>=4,D>=4,D+G=A+1,G=F+1,D=C+1,B=0] 
* CE 83: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ fun1(E,F):1
     [C>=0,C+1=A,D=1,F=1,E=1,B=1] 
* CE 84: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ fun1(D,E):2
     [D>=0,C>=0,C+1=A,E=0,B=0] 
* CE 85: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ fun1(G,H):1
     [F=1,E=2,H=1,G=1,D=2,C=2,B=1,A=3] 
* CE 86: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ fun1(F,G):2
     [F>=0,E=2,G=0,D=2,C=2,B=0,A=3] 
* CE 87: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ fun1(G,H):1
     [F=1,E=3,H=1,G=1,D=3,C=2,B=1,A=3] 
* CE 88: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ fun1(F,G):2
     [F>=0,E=3,G=0,D=3,C=2,B=0,A=3] 
* CE 89: isNatListisNat(A,B) = 1+ activate(C,A):4+ isNatListisNat(A,D)+ fun1(E,F):1
     [A>=4,A=C+1,D=1,F=1,E=1,B=1] 
* CE 90: isNatListisNat(A,B) = 1+ activate(C,A):4+ isNatListisNat(A,D)+ fun1(D,E):2
     [D>=0,A>=4,A=C+1,E=0,B=0] 
* CE 91: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ fun2(E,F):1
     [C>=0,C+1=A,D=1,F=1,E=1,B=1] 
* CE 92: isNatListisNat(A,B) = 1+ activate(C,C):1+ isNatListisNat(C,D)+ fun2(D,E):2
     [D>=0,C>=0,C+1=A,E=0,B=0] 
* CE 93: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ fun2(G,H):1
     [F=1,E=2,H=1,G=1,D=2,C=2,B=1,A=3] 
* CE 94: isNatListisNat(A,B) = 1+ activate(C,D):2+ isNatListisNat(E,F)+ fun2(F,G):2
     [F>=0,E=2,G=0,D=2,C=2,B=0,A=3] 
* CE 95: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ fun2(G,H):1
     [F=1,E=3,H=1,G=1,D=3,C=2,B=1,A=3] 
* CE 96: isNatListisNat(A,B) = 1+ activate(C,D):3+ isNatListisNat(E,F)+ fun2(F,G):2
     [F>=0,E=3,G=0,D=3,C=2,B=0,A=3] 
* CE 97: isNatListisNat(A,B) = 1+ activate(C,A):4+ isNatListisNat(A,D)+ fun2(E,F):1
     [A>=4,A=C+1,D=1,F=1,E=1,B=1] 
* CE 98: isNatListisNat(A,B) = 1+ activate(C,A):4+ isNatListisNat(A,D)+ fun2(D,E):2
     [D>=0,A>=4,A=C+1,E=0,B=0] 
* CE 99: isNatListisNat(A,B) = 0
     [A>=0,B=0] 
* CE 100: isNatListisNat(A,B) = 1
     [B=1,A=1] 
* CE 101: isNatListisNat(A,B) = 1
     [B=1,A=0] 
* CE 102: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,E):1+ activate(E,E):1+ isNatListisNat(E,F)+ fun7(G,H):1
     [E>=0,C>=0,C+E+1=A,F=1,D=1,H=1,G=1,B=1] 
* CE 103: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,E):1+ activate(E,E):1+ isNatListisNat(E,F)+ fun7(F,G):2
     [F>=0,E>=0,C>=0,C+E+1=A,D=1,G=0,B=0] 
* CE 104: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):2+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 105: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):2+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 106: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):3+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=3,D=1,L=1,K=1,H=3,G=2,F=2,E=2,B=1] 
* CE 107: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):3+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=3,D=1,K=0,H=3,G=2,F=2,E=2,B=0] 
* CE 108: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):4+ isNatListisNat(H,I)+ fun7(J,K):1
     [H>=4,C>=0,C+H=A,H=G+1,H=F+1,H=E+1,I=1,D=1,K=1,J=1,B=1] 
* CE 109: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):1+ activate(G,H):4+ isNatListisNat(H,I)+ fun7(I,J):2
     [I>=0,H>=4,C>=0,C+H=A,H=G+1,H=F+1,H=E+1,D=1,J=0,B=0] 
* CE 110: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):1+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 111: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):1+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 112: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):2+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 113: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):2+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 114: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):3+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=3,D=1,L=1,K=1,H=3,G=2,F=2,E=2,B=1] 
* CE 115: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):2+ activate(G,H):3+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=3,D=1,K=0,H=3,G=2,F=2,E=2,B=0] 
* CE 116: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):3+ activate(G,H):1+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=2,B=1] 
* CE 117: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):3+ activate(G,H):1+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=3,D=1,K=0,H=3,G=3,F=3,E=2,B=0] 
* CE 118: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):3+ activate(G,H):4+ isNatListisNat(I,J)+ fun7(K,L):1
     [C>=0,C+3=A,J=1,I=4,D=1,L=1,K=1,H=4,G=3,F=3,E=2,B=1] 
* CE 119: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):3+ activate(G,H):4+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,C>=0,C+3=A,I=4,D=1,K=0,H=4,G=3,F=3,E=2,B=0] 
* CE 120: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):4+ activate(F,F):1+ isNatListisNat(F,G)+ fun7(H,I):1
     [F>=4,C>=0,C+F=A,F=E+1,G=1,D=1,I=1,H=1,B=1] 
* CE 121: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):4+ activate(F,F):1+ isNatListisNat(F,G)+ fun7(G,H):2
     [G>=0,F>=4,C>=0,C+F=A,F=E+1,D=1,H=0,B=0] 
* CE 122: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):4+ activate(G,H):4+ isNatListisNat(H,I)+ fun7(J,K):1
     [H>=5,C>=0,C+H=A+1,H=G+1,H=F+1,H=E+2,I=1,D=1,K=1,J=1,B=1] 
* CE 123: isNatListisNat(A,B) = 2+ activate(C,C):1+ isNatListisNat(C,D)+ activate(E,F):4+ activate(G,H):4+ isNatListisNat(H,I)+ fun7(I,J):2
     [I>=0,H>=5,C>=0,C+H=A+1,H=G+1,H=F+1,H=E+2,D=1,J=0,B=0] 
* CE 124: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,G):1+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(I,J):1
     [G>=0,G+3=A,H=1,F=1,E=2,J=1,I=1,D=2,C=2,B=1] 
* CE 125: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,G):1+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(H,I):2
     [H>=0,G>=0,G+3=A,F=1,E=2,I=0,D=2,C=2,B=0] 
* CE 126: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 127: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 128: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 129: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 130: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(L,M):1
     [J>=4,J=I+1,J=H+1,J=G+1,J+2=A,K=1,F=1,E=2,M=1,L=1,D=2,C=2,B=1] 
* CE 131: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,J>=4,J=I+1,J=H+1,J=G+1,J+2=A,F=1,E=2,L=0,D=2,C=2,B=0] 
* CE 132: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 133: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 134: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 135: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 136: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 137: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 138: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=2,D=2,C=2,B=1,A=5] 
* CE 139: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=2,D=2,C=2,B=0,A=5] 
* CE 140: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):4+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=3,H=3,G=2,D=2,C=2,B=1,A=5] 
* CE 141: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):4+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=3,H=3,G=2,D=2,C=2,B=0,A=5] 
* CE 142: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):4+ activate(H,H):1+ isNatListisNat(H,I)+ fun7(J,K):1
     [H>=4,H=G+1,H+2=A,I=1,F=1,E=2,K=1,J=1,D=2,C=2,B=1] 
* CE 143: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):4+ activate(H,H):1+ isNatListisNat(H,I)+ fun7(I,J):2
     [I>=0,H>=4,H=G+1,H+2=A,F=1,E=2,J=0,D=2,C=2,B=0] 
* CE 144: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):4+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(L,M):1
     [J>=5,J=I+1,J=H+1,J=G+2,J+1=A,K=1,F=1,E=2,M=1,L=1,D=2,C=2,B=1] 
* CE 145: isNatListisNat(A,B) = 2+ activate(C,D):2+ isNatListisNat(E,F)+ activate(G,H):4+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,J>=5,J=I+1,J=H+1,J=G+2,J+1=A,F=1,E=2,L=0,D=2,C=2,B=0] 
* CE 146: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,G):1+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(I,J):1
     [G>=0,G+3=A,H=1,F=1,E=3,J=1,I=1,D=3,C=2,B=1] 
* CE 147: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,G):1+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(H,I):2
     [H>=0,G>=0,G+3=A,F=1,E=3,I=0,D=3,C=2,B=0] 
* CE 148: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=2,B=1,A=5] 
* CE 149: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 150: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=2,H=2,G=2,D=3,C=2,B=1,A=5] 
* CE 151: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=2,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 152: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(L,M):1
     [J>=4,J=I+1,J=H+1,J=G+1,J+2=A,K=1,F=1,E=3,M=1,L=1,D=3,C=2,B=1] 
* CE 153: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):1+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,J>=4,J=I+1,J=H+1,J=G+1,J+2=A,F=1,E=3,L=0,D=3,C=2,B=0] 
* CE 154: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=2,B=1,A=5] 
* CE 155: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 156: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=2,B=1,A=5] 
* CE 157: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):2+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 158: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=2,H=2,G=2,D=3,C=2,B=1,A=5] 
* CE 159: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):2+ activate(I,J):3+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=2,H=2,G=2,D=3,C=2,B=0,A=5] 
* CE 160: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=2,D=3,C=2,B=1,A=5] 
* CE 161: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):1+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=2,D=3,C=2,B=0,A=5] 
* CE 162: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):4+ isNatListisNat(K,L)+ fun7(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=3,H=3,G=2,D=3,C=2,B=1,A=5] 
* CE 163: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):3+ activate(I,J):4+ isNatListisNat(K,L)+ fun7(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=3,H=3,G=2,D=3,C=2,B=0,A=5] 
* CE 164: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):4+ activate(H,H):1+ isNatListisNat(H,I)+ fun7(J,K):1
     [H>=4,H=G+1,H+2=A,I=1,F=1,E=3,K=1,J=1,D=3,C=2,B=1] 
* CE 165: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):4+ activate(H,H):1+ isNatListisNat(H,I)+ fun7(I,J):2
     [I>=0,H>=4,H=G+1,H+2=A,F=1,E=3,J=0,D=3,C=2,B=0] 
* CE 166: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):4+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(L,M):1
     [J>=5,J=I+1,J=H+1,J=G+2,J+1=A,K=1,F=1,E=3,M=1,L=1,D=3,C=2,B=1] 
* CE 167: isNatListisNat(A,B) = 2+ activate(C,D):3+ isNatListisNat(E,F)+ activate(G,H):4+ activate(I,J):4+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,J>=5,J=I+1,J=H+1,J=G+2,J+1=A,F=1,E=3,L=0,D=3,C=2,B=0] 
* CE 168: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,F):1+ activate(F,F):1+ isNatListisNat(F,G)+ fun7(H,I):1
     [F>=0,D>=4,D+F=A,D=C+1,G=1,E=1,I=1,H=1,B=1] 
* CE 169: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,F):1+ activate(F,F):1+ isNatListisNat(F,G)+ fun7(G,H):2
     [G>=0,F>=0,D>=4,D+F=A,D=C+1,E=1,H=0,B=0] 
* CE 170: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):2+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=2,E=1,M=1,L=1,I=2,H=2,G=2,F=2,B=1] 
* CE 171: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):2+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=2,E=1,L=0,I=2,H=2,G=2,F=2,B=0] 
* CE 172: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):3+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=3,E=1,M=1,L=1,I=3,H=2,G=2,F=2,B=1] 
* CE 173: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):3+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=3,E=1,L=0,I=3,H=2,G=2,F=2,B=0] 
* CE 174: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):4+ isNatListisNat(I,J)+ fun7(K,L):1
     [I>=4,D>=4,D+I=A+1,I=H+1,I=G+1,I=F+1,D=C+1,J=1,E=1,L=1,K=1,B=1] 
* CE 175: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):1+ activate(H,I):4+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,I>=4,D>=4,D+I=A+1,I=H+1,I=G+1,I=F+1,D=C+1,E=1,K=0,B=0] 
* CE 176: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):1+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=2,E=1,M=1,L=1,I=2,H=2,G=2,F=2,B=1] 
* CE 177: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):1+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=2,E=1,L=0,I=2,H=2,G=2,F=2,B=0] 
* CE 178: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):2+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=2,E=1,M=1,L=1,I=2,H=2,G=2,F=2,B=1] 
* CE 179: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):2+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=2,E=1,L=0,I=2,H=2,G=2,F=2,B=0] 
* CE 180: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):3+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=3,E=1,M=1,L=1,I=3,H=2,G=2,F=2,B=1] 
* CE 181: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):2+ activate(H,I):3+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=3,E=1,L=0,I=3,H=2,G=2,F=2,B=0] 
* CE 182: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):3+ activate(H,I):1+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=3,E=1,M=1,L=1,I=3,H=3,G=3,F=2,B=1] 
* CE 183: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):3+ activate(H,I):1+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=3,E=1,L=0,I=3,H=3,G=3,F=2,B=0] 
* CE 184: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):3+ activate(H,I):4+ isNatListisNat(J,K)+ fun7(L,M):1
     [D>=4,D=C+1,D+2=A,K=1,J=4,E=1,M=1,L=1,I=4,H=3,G=3,F=2,B=1] 
* CE 185: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):3+ activate(H,I):4+ isNatListisNat(J,K)+ fun7(K,L):2
     [K>=0,D>=4,D=C+1,D+2=A,J=4,E=1,L=0,I=4,H=3,G=3,F=2,B=0] 
* CE 186: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):4+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(I,J):1
     [G>=4,D>=4,D+G=A+1,G=F+1,D=C+1,H=1,E=1,J=1,I=1,B=1] 
* CE 187: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):4+ activate(G,G):1+ isNatListisNat(G,H)+ fun7(H,I):2
     [H>=0,G>=4,D>=4,D+G=A+1,G=F+1,D=C+1,E=1,I=0,B=0] 
* CE 188: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):4+ activate(H,I):4+ isNatListisNat(I,J)+ fun7(K,L):1
     [I>=5,D>=4,D+I=A+2,I=H+1,I=G+1,I=F+2,D=C+1,J=1,E=1,L=1,K=1,B=1] 
* CE 189: isNatListisNat(A,B) = 2+ activate(C,D):4+ isNatListisNat(D,E)+ activate(F,G):4+ activate(H,I):4+ isNatListisNat(I,J)+ fun7(J,K):2
     [J>=0,I>=5,D>=4,D+I=A+2,I=H+1,I=G+1,I=F+2,D=C+1,E=1,K=0,B=0] 

### Cost equations --> "Loop" of isNatListisNat/2 
* CEs [188] --> Loop 47 
* CEs [174,186] --> Loop 48 
* CEs [184] --> Loop 49 
* CEs [172,180,182] --> Loop 50 
* CEs [168,170,176,178] --> Loop 51 
* CEs [104,110,112] --> Loop 52 
* CEs [152,164] --> Loop 53 
* CEs [166] --> Loop 54 
* CEs [108,120,130,142] --> Loop 55 
* CEs [122,144] --> Loop 56 
* CEs [189] --> Loop 57 
* CEs [175,187] --> Loop 58 
* CEs [185] --> Loop 59 
* CEs [173,181,183] --> Loop 60 
* CEs [169,171,177,179] --> Loop 61 
* CEs [105,111,113] --> Loop 62 
* CEs [153,165] --> Loop 63 
* CEs [167] --> Loop 64 
* CEs [109,121,131,143] --> Loop 65 
* CEs [123,145] --> Loop 66 
* CEs [162] --> Loop 67 
* CEs [150,158,160] --> Loop 68 
* CEs [146,148,154,156] --> Loop 69 
* CEs [118,140] --> Loop 70 
* CEs [106,114,116,128,136,138] --> Loop 71 
* CEs [102,124,126,132,134] --> Loop 72 
* CEs [163] --> Loop 73 
* CEs [151,159,161] --> Loop 74 
* CEs [147,149,155,157] --> Loop 75 
* CEs [119,141] --> Loop 76 
* CEs [107,115,117,129,137,139] --> Loop 77 
* CEs [103,125,127,133,135] --> Loop 78 
* CEs [99] --> Loop 79 
* CEs [100] --> Loop 80 
* CEs [101] --> Loop 81 
* CEs [89,97] --> Loop 82 
* CEs [80,81] --> Loop 83 
* CEs [79,90,98] --> Loop 84 
* CEs [84,92] --> Loop 85 
* CEs [76,77] --> Loop 86 
* CEs [68,69,72,73] --> Loop 87 
* CEs [87,95] --> Loop 88 
* CEs [83,85,91,93] --> Loop 89 
* CEs [75,78,88,96] --> Loop 90 
* CEs [67,70,71,74,82,86,94] --> Loop 91 

#### Loops of isNatListisNat/2 
* Loop 47: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+3,A'>=4,A'+A'2=A+2,B'2=1,B'=1,B=1] 
* Loop 48: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+3,A'>=4,A'+A'2=A+1,B'2=1,B'=1,B=1] 
* Loop 49: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=6,A=A'+2,B'2=1,A'2=4,B'=1,B=1] 
* Loop 50: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=6,A=A'+2,B'2=1,A'2=3,B'=1,B=1] 
* Loop 51: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A',A'>=4,A'+A'2=A,B'2=1,B'=1,B=1] 
* Loop 52: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=3,A=A'+3,B'2=1,A'2=2,B'=1,B=1] 
* Loop 53: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=6,A=A'2+2,B'2=1,B'=1,A'=3,B=1] 
* Loop 54: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=6,A=A'2+1,B'2=1,B'=1,A'=3,B=1] 
* Loop 55: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+4,A'>=0,A'+A'2=A,B'2=1,B'=1,B=1] 
* Loop 56: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+4,A'>=0,A'+A'2=A+1,B'2=1,B'=1,B=1] 
* Loop 57: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+3,B'2>=0,A'>=4,A'+A'2=A+2,B'=1,B=0] 
* Loop 58: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+3,B'2>=0,A'>=4,A'+A'2=A+1,B'=1,B=0] 
* Loop 59: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=6,A=A'+2,A'2=4,B'=1,B=0] 
* Loop 60: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=6,A=A'+2,A'2=3,B'=1,B=0] 
* Loop 61: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A',B'2>=0,A'>=4,A'+A'2=A,B'=1,B=0] 
* Loop 62: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=3,A=A'+3,A'2=2,B'=1,B=0] 
* Loop 63: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=6,A=A'2+2,B'=1,A'=3,B=0] 
* Loop 64: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=6,A=A'2+1,B'=1,A'=3,B=0] 
* Loop 65: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+4,B'2>=0,A'>=0,A'+A'2=A,B'=1,B=0] 
* Loop 66: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+4,B'2>=0,A'>=0,A'+A'2=A+1,B'=1,B=0] 
* Loop 67: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2=1,A'2=4,B'=1,A'=3,B=1,A=5] 
* Loop 68: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2=1,A'2=3,B'=1,A'=3,B=1,A=5] 
* Loop 69: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=3,A=A'2+3,B'2=1,B'=1,A'=3,B=1] 
* Loop 70: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=3,A=A'+3,B'2=1,A'2=4,B'=1,B=1] 
* Loop 71: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=3,A=A'+3,B'2=1,A'2=3,B'=1,B=1] 
* Loop 72: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,B'2=1,B'=1,B=1] 
* Loop 73: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A'2=4,B'=1,A'=3,B=0,A=5] 
* Loop 74: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A'2=3,B'=1,A'=3,B=0,A=5] 
* Loop 75: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=3,A=A'2+3,B'=1,A'=3,B=0] 
* Loop 76: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=3,A=A'+3,A'2=4,B'=1,B=0] 
* Loop 77: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [B'2>=0,A>=3,A=A'+3,A'2=3,B'=1,B=0] 
* Loop 78: isNatListisNat(A,B)->  isNatListisNat(A',B')  isNatListisNat(A'2,B'2)
                  [A>=A'+1,B'2>=0,A'>=0,A'+A'2+1=A,B'=1,B=0] 
* Loop 79: isNatListisNat(A,B) [A>=0,B=0] 
* Loop 80: isNatListisNat(A,B) [B=1,A=1] 
* Loop 81: isNatListisNat(A,B) [B=1,A=0] 
* Loop 82: isNatListisNat(A,B)->  isNatListisNat(A,A')
                  [A>=4,A'=1,B=1] 
* Loop 83: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'>=0,A>=6,A=A'+2,B=0] 
* Loop 84: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [A>=A',B'>=0,A'>=4,B=0] 
* Loop 85: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'>=0,A>=1,A=A'+1,B=0] 
* Loop 86: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'>=0,A'=3,B=0,A=5] 
* Loop 87: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'>=0,A>=3,A=A'+3,B=0] 
* Loop 88: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'=1,A'=3,B=1,A=3] 
* Loop 89: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [A>=1,A=A'+1,B'=1,B=1] 
* Loop 90: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [B'>=0,A>=3,A'=3,B=0] 
* Loop 91: isNatListisNat(A,B)->  isNatListisNat(A',B')
                  [A>=A'+1,B'>=0,A'>=0,B=0] 

### Ranking functions of CR isNatListisNat(A,B) 

#### Partial ranking functions of CR isNatListisNat(A,B) 
* Partial RF of phase [47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89]:
  - RF of loop [47:1,48:1,48:2]:
    A/3-2 depends on loops [56:2,70:2] 
  - RF of loop [47:2]:
    A/2-3 depends on loops [56:2,70:2] 
  - RF of loop [49:1,49:2,50:1,50:2,53:1,53:2,54:1,54:2]:
    A-5 depends on loops [56:2,70:2] 
  - RF of loop [51:2,55:1,56:1]:
    A-3 depends on loops [56:2,70:2] 
  - RF of loop [52:1,52:2,69:2,70:1,71:1]:
    A-2 depends on loops [56:2,70:2] 
  - RF of loop [67:1,68:1,68:2]:
    A/2-2 depends on loops [56:2,70:2] 
  - RF of loop [67:2]:
    A-4 depends on loops [56:2,70:2] 
  - RF of loop [72:1,72:2,89:1]:
    A depends on loops [56:2,70:2] 
* Partial RF of phase [57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91]:
  - RF of loop [57:1,58:1,58:2]:
    A/3-2 depends on loops [66:2,76:2] 
  - RF of loop [57:2]:
    A/2-3 depends on loops [66:2,76:2] 
  - RF of loop [59:1,59:2,60:1,60:2,63:1,63:2,64:1,64:2,83:1]:
    A-5 depends on loops [66:2,76:2] 
  - RF of loop [61:2,65:1,66:1]:
    A-3 depends on loops [66:2,76:2] 
  - RF of loop [62:1,62:2,75:2,76:1,77:1,87:1]:
    A-2 depends on loops [66:2,76:2] 
  - RF of loop [73:1,74:1,74:2,86:1]:
    A/2-2 depends on loops [66:2,76:2] 
  - RF of loop [73:2]:
    A-4 depends on loops [66:2,76:2] 
  - RF of loop [78:1,78:2,85:1,91:1]:
    A depends on loops [66:2,76:2] 


### Resulting Chains:isNatListisNat(A,B) 
* [multiple([57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91],[[],[multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])],[81],[80],[79]])]...
* [multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])]...
* [81]
* [80]
* [79]


### Merging Chains  isNatListisNat/2 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 
* [[79]] --> 3 
* [[multiple([57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91],[[],[multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])],[81],[80],[79]])]] --> 4 
* [[multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])]] --> 5 


### Specialization of cost equations isNatIList/2 
* CE 31 is refined into CE [190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221] 
* CE 33 is refined into CE [222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237] 
* CE 34 is refined into CE [238] 
* CE 32 is refined into CE [239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286] 


#### Refined cost equations isNatIList/2 
* CE 190: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,A4):1
     [A4>=0,A4+1=V3,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 191: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2
     [B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 192: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):3
     [B4=3,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 193: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,V3):4
     [V3>=4,V3=A4+1,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 194: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,A4):1
     [A4>=0,A4+2=V3,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 195: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2
     [B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 196: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):3
     [B4=3,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 197: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):4
     [B4>=4,B4=A4+1,B4+1=V3,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 198: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):3+ activate(Y3,Y3):1
     [Y3>=0,W3>=0,W3+Y3+1=V3,X3=0,Out=0] 
* CE 199: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):3+ activate(Y3,Z3):2
     [W3>=0,W3+3=V3,Z3=2,Y3=2,X3=0,Out=0] 
* CE 200: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):3+ activate(Y3,Z3):3
     [W3>=0,W3+3=V3,Z3=3,Y3=2,X3=0,Out=0] 
* CE 201: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):3+ activate(Y3,Z3):4
     [Z3>=4,W3>=0,W3+Z3=V3,Z3=Y3+1,X3=0,Out=0] 
* CE 202: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):4
     [Y3>=0,Z3>=0,W3>=1,W3+Z3+1=V3,X3=0,Out=0] 
* CE 203: isNatIList(V3,Out) = 1+ activate(W3,W3):1+ isNatListisNat(W3,X3):5
     [Y3>=0,Z3>=0,W3>=1,W3+Z3+1=V3,X3=1,Out=0] 
* CE 204: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):3+ activate(A4,A4):1
     [A4>=0,A4+3=V3,Z3=0,Y3=2,X3=2,W3=2,Out=0] 
* CE 205: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):2
     [B4=2,A4=2,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=5] 
* CE 206: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):3
     [B4=3,A4=2,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=5] 
* CE 207: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):4
     [B4>=4,B4=A4+1,B4+2=V3,Z3=0,Y3=2,X3=2,W3=2,Out=0] 
* CE 208: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):4
     [A4>=0,B4>=0,B4+3=V3,Z3=0,Y3=2,X3=2,W3=2,Out=0] 
* CE 209: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):5
     [A4>=0,B4>=0,B4+3=V3,Z3=1,Y3=2,X3=2,W3=2,Out=0] 
* CE 210: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):3+ activate(A4,A4):1
     [A4>=0,A4+3=V3,Z3=0,Y3=3,X3=3,W3=2,Out=0] 
* CE 211: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):2
     [B4=2,A4=2,Z3=0,Y3=3,X3=3,W3=2,Out=0,V3=5] 
* CE 212: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):3
     [B4=3,A4=2,Z3=0,Y3=3,X3=3,W3=2,Out=0,V3=5] 
* CE 213: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):3+ activate(A4,B4):4
     [B4>=4,B4=A4+1,B4+2=V3,Z3=0,Y3=3,X3=3,W3=2,Out=0] 
* CE 214: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):4
     [A4>=0,B4>=0,B4+3=V3,Z3=0,Y3=3,X3=3,W3=2,Out=0] 
* CE 215: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):5
     [A4>=0,B4>=0,B4+3=V3,Z3=1,Y3=3,X3=3,W3=2,Out=0] 
* CE 216: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):3+ activate(Z3,Z3):1
     [Z3>=0,X3>=4,X3+Z3=V3,X3=W3+1,Y3=0,Out=0] 
* CE 217: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):3+ activate(Z3,A4):2
     [X3>=4,X3=W3+1,X3+2=V3,A4=2,Z3=2,Y3=0,Out=0] 
* CE 218: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):3+ activate(Z3,A4):3
     [X3>=4,X3=W3+1,X3+2=V3,A4=3,Z3=2,Y3=0,Out=0] 
* CE 219: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):3+ activate(Z3,A4):4
     [A4>=4,X3>=4,X3+A4=V3+1,A4=Z3+1,X3=W3+1,Y3=0,Out=0] 
* CE 220: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):4
     [Z3>=0,A4>=0,X3>=4,X3+A4=V3,X3=W3+1,Y3=0,Out=0] 
* CE 221: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):5
     [Z3>=0,A4>=0,X3>=4,X3+A4=V3,X3=W3+1,Y3=1,Out=0] 
* CE 222: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ fun3(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=0] 
* CE 223: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ fun3(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=0] 
* CE 224: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ fun3(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=1] 
* CE 225: isNatIList(V3,Out) = 1+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ fun3(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=1] 
* CE 226: isNatIList(V3,Out) = 1+ activate(V3,V3):1+ isNatListisNat(V3,W3):3+ fun3(X3,Y3):2
     [V3>=0,Y3=0,X3=0,W3=0,Out=0] 
* CE 227: isNatIList(V3,Out) = 1+ activate(V3,V3):1+ isNatListisNat(V3,W3):4
     [V3>=1,X3=0,W3=0] 
* CE 228: isNatIList(V3,Out) = 1+ activate(V3,V3):1+ isNatListisNat(V3,W3):5
     [V3>=1,X3=1,W3=1] 
* CE 229: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):3+ fun3(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 230: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):4
     [A4=0,Z3=0,Y3=2,X3=2,W3=2,V3=2] 
* CE 231: isNatIList(V3,Out) = 1+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):5
     [A4=1,Z3=1,Y3=2,X3=2,W3=2,V3=2] 
* CE 232: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):3+ fun3(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=3,X3=3,W3=2,Out=0,V3=2] 
* CE 233: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):4
     [A4=0,Z3=0,Y3=3,X3=3,W3=2,V3=2] 
* CE 234: isNatIList(V3,Out) = 1+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):5
     [A4=1,Z3=1,Y3=3,X3=3,W3=2,V3=2] 
* CE 235: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):3+ fun3(Z3,A4):2
     [X3>=4,X3=W3+1,X3=V3+1,A4=0,Z3=0,Y3=0,Out=0] 
* CE 236: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):4
     [X3>=4,X3=W3+1,X3=V3+1,Z3=0,Y3=0] 
* CE 237: isNatIList(V3,Out) = 1+ activate(W3,X3):4+ isNatListisNat(X3,Y3):5
     [X3>=4,X3=W3+1,X3=V3+1,Z3=1,Y3=1] 
* CE 238: isNatIList(V3,Out) = 1
     [Out=1,V3=2] 
* CE 239: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,A4):1+ activate(A4,A4):1+ isNatIList(A4,B4)+ fun5(C4,D4):1
     [A4>=0,A4+1=V3,B4=1,D4=1,C4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1] 
* CE 240: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,A4):1+ activate(A4,A4):1+ isNatIList(A4,B4)+ fun5(B4,C4):2
     [B4>=0,A4>=0,A4+1=V3,C4=0,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 241: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 242: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 243: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 244: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 245: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,V3):4+ isNatIList(V3,D4)+ fun5(E4,F4):1
     [V3>=4,V3=C4+1,V3=B4+1,V3=A4+1,D4=1,F4=1,E4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1] 
* CE 246: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):1+ activate(C4,V3):4+ isNatIList(V3,D4)+ fun5(D4,E4):2
     [D4>=0,V3>=4,V3=C4+1,V3=B4+1,V3=A4+1,E4=0,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 247: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 248: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 249: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 250: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 251: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 252: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):2+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 253: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):3+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=3,B4=3,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 254: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):3+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=3,B4=3,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 255: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):3+ activate(C4,D4):4+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=4,H4=1,G4=1,D4=4,C4=3,B4=3,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=3] 
* CE 256: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):3+ activate(C4,D4):4+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=4,G4=0,D4=4,C4=3,B4=3,A4=2,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=3] 
* CE 257: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,V3):4+ activate(V3,V3):1+ isNatIList(V3,B4)+ fun5(C4,D4):1
     [V3>=4,V3=A4+1,B4=1,D4=1,C4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1] 
* CE 258: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,V3):4+ activate(V3,V3):1+ isNatIList(V3,B4)+ fun5(B4,C4):2
     [B4>=0,V3>=4,V3=A4+1,C4=0,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 259: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):4+ activate(C4,D4):4+ isNatIList(D4,E4)+ fun5(F4,G4):1
     [D4>=5,D4=C4+1,D4=B4+1,D4=A4+2,D4=V3+1,E4=1,G4=1,F4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1] 
* CE 260: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):1+ activate(A4,B4):4+ activate(C4,D4):4+ isNatIList(D4,E4)+ fun5(E4,F4):2
     [E4>=0,D4>=5,D4=C4+1,D4=B4+1,D4=A4+2,D4=V3+1,F4=0,Z3=1,Y3=0,X3=0,W3=0,Out=0] 
* CE 261: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,A4):1+ activate(A4,A4):1+ isNatIList(A4,B4)+ fun5(C4,D4):1
     [A4>=0,A4+2=V3,B4=1,D4=1,C4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1] 
* CE 262: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,A4):1+ activate(A4,A4):1+ isNatIList(A4,B4)+ fun5(B4,C4):2
     [B4>=0,A4>=0,A4+2=V3,C4=0,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 263: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 264: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 265: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 266: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 267: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):4+ isNatIList(D4,E4)+ fun5(F4,G4):1
     [D4>=4,D4=C4+1,D4=B4+1,D4=A4+1,D4+1=V3,E4=1,G4=1,F4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1] 
* CE 268: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):1+ activate(C4,D4):4+ isNatIList(D4,E4)+ fun5(E4,F4):2
     [E4>=0,D4>=4,D4=C4+1,D4=B4+1,D4=A4+1,D4+1=V3,F4=0,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 269: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 270: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 271: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=2,H4=1,G4=1,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 272: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):2+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=2,G4=0,D4=2,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 273: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 274: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):2+ activate(C4,D4):3+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=2,B4=2,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 275: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):3+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=3,H4=1,G4=1,D4=3,C4=3,B4=3,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 276: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):3+ activate(C4,D4):1+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=3,G4=0,D4=3,C4=3,B4=3,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 277: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):3+ activate(C4,D4):4+ isNatIList(E4,F4)+ fun5(G4,H4):1
     [F4=1,E4=4,H4=1,G4=1,D4=4,C4=3,B4=3,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=4] 
* CE 278: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):3+ activate(C4,D4):4+ isNatIList(E4,F4)+ fun5(F4,G4):2
     [F4>=0,E4=4,G4=0,D4=4,C4=3,B4=3,A4=2,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=4] 
* CE 279: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):4+ activate(B4,B4):1+ isNatIList(B4,C4)+ fun5(D4,E4):1
     [B4>=4,B4=A4+1,B4+1=V3,C4=1,E4=1,D4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1] 
* CE 280: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):4+ activate(B4,B4):1+ isNatIList(B4,C4)+ fun5(C4,D4):2
     [C4>=0,B4>=4,B4=A4+1,B4+1=V3,D4=0,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 281: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):4+ activate(C4,V3):4+ isNatIList(V3,D4)+ fun5(E4,F4):1
     [V3>=5,V3=C4+1,V3=B4+1,V3=A4+2,D4=1,F4=1,E4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1] 
* CE 282: isNatIList(V3,Out) = 2+ activate(W3,X3):1+ isNatListisNat(Y3,Z3):2+ activate(A4,B4):4+ activate(C4,V3):4+ isNatIList(V3,D4)+ fun5(D4,E4):2
     [D4>=0,V3>=5,V3=C4+1,V3=B4+1,V3=A4+2,E4=0,Z3=1,Y3=1,X3=1,W3=1,Out=0] 
* CE 283: isNatIList(V3,Out) = 2+ activate(W3,W3):1+ isNatListisNat(W3,X3):5
     [Y3>=0,Z3>=0,W3>=1,W3+Z3+1=V3,X3=1] 
* CE 284: isNatIList(V3,Out) = 2+ activate(W3,X3):2+ isNatListisNat(Y3,Z3):5
     [A4>=0,B4>=0,B4+3=V3,Z3=1,Y3=2,X3=2,W3=2] 
* CE 285: isNatIList(V3,Out) = 2+ activate(W3,X3):3+ isNatListisNat(Y3,Z3):5
     [A4>=0,B4>=0,B4+3=V3,Z3=1,Y3=3,X3=3,W3=2] 
* CE 286: isNatIList(V3,Out) = 2+ activate(W3,X3):4+ isNatListisNat(X3,Y3):5
     [Z3>=0,A4>=0,X3>=4,X3+A4=V3,X3=W3+1,Y3=1] 

### Cost equations --> "Loop" of isNatIList/2 
* CEs [202,203,208,209,214,215,220,221] --> Loop 92 
* CEs [227,228,230,231,233,234,236,237,283,284,285,286] --> Loop 93 
* CEs [259] --> Loop 94 
* CEs [260] --> Loop 95 
* CEs [245,257,277,281] --> Loop 96 
* CEs [265,273,275] --> Loop 97 
* CEs [261,263,269,271] --> Loop 98 
* CEs [246,258,278,282] --> Loop 99 
* CEs [266,274,276] --> Loop 100 
* CEs [262,264,270,272] --> Loop 101 
* CEs [255] --> Loop 102 
* CEs [243,251,253] --> Loop 103 
* CEs [239,241,247,249,267,279] --> Loop 104 
* CEs [256] --> Loop 105 
* CEs [244,252,254] --> Loop 106 
* CEs [240,242,248,250,268,280] --> Loop 107 
* CEs [205,206,211,212] --> Loop 108 
* CEs [195,196] --> Loop 109 
* CEs [191,192] --> Loop 110 
* CEs [238] --> Loop 111 
* CEs [229,232] --> Loop 112 
* CEs [224] --> Loop 113 
* CEs [225] --> Loop 114 
* CEs [222] --> Loop 115 
* CEs [190,193,194,197,198,199,200,201,204,207,210,213,216,217,218,219,223,226,235] --> Loop 116 

#### Loops of isNatIList/2 
* Loop 92: isNatIList(V3,Out) [V3>=2,Out=0] 
* Loop 93: isNatIList(V3,Out) [V3>=1] 
* Loop 94: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [V3>=4,V3+1=V3',Out'=1,Out=1] 
* Loop 95: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3>=4,V3+1=V3',Out=0] 
* Loop 96: isNatIList(V3,Out)->  isNatIList(V3,Out')
                  [V3>=4,Out'=1,Out=1] 
* Loop 97: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'=1,V3'=3,Out=1,V3=4] 
* Loop 98: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [V3>=2,V3=V3'+2,Out'=1,Out=1] 
* Loop 99: isNatIList(V3,Out)->  isNatIList(V3,Out')
                  [Out'>=0,V3>=4,Out=0] 
* Loop 100: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3'=3,Out=0,V3=4] 
* Loop 101: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3>=2,V3=V3'+2,Out=0] 
* Loop 102: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'=1,V3'=4,Out=1,V3=3] 
* Loop 103: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'=1,V3'=3,Out=1,V3=3] 
* Loop 104: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [V3>=1,V3=V3'+1,Out'=1,Out=1] 
* Loop 105: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3'=4,Out=0,V3=3] 
* Loop 106: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3'=3,Out=0,V3=3] 
* Loop 107: isNatIList(V3,Out)->  isNatIList(V3',Out')
                  [Out'>=0,V3>=1,V3=V3'+1,Out=0] 
* Loop 108: isNatIList(V3,Out) [Out=0,V3=5] 
* Loop 109: isNatIList(V3,Out) [Out=0,V3=4] 
* Loop 110: isNatIList(V3,Out) [Out=0,V3=3] 
* Loop 111: isNatIList(V3,Out) [Out=1,V3=2] 
* Loop 112: isNatIList(V3,Out) [Out=0,V3=2] 
* Loop 113: isNatIList(V3,Out) [Out=1,V3=1] 
* Loop 114: isNatIList(V3,Out) [Out=0,V3=1] 
* Loop 115: isNatIList(V3,Out) [Out=1,V3=0] 
* Loop 116: isNatIList(V3,Out) [V3>=0,Out=0] 

### Ranking functions of CR isNatIList(V3,Out) 

#### Partial ranking functions of CR isNatIList(V3,Out) 
* Partial RF of phase [94,96,97,98,102,103,104]:
  - RF of loop [97:1]:
    V3-3 depends on loops [94:1,102:1] 
  - RF of loop [98:1]:
    V3-1 depends on loops [94:1,102:1] 
  - RF of loop [102:1]:
    -V3+4 depends on loops [97:1,98:1,104:1] 
  - RF of loop [104:1]:
    V3 depends on loops [94:1,102:1] 
* Partial RF of phase [95,99,100,101,105,106,107]:
  - RF of loop [100:1]:
    V3-3 depends on loops [95:1,105:1] 
  - RF of loop [101:1]:
    V3-1 depends on loops [95:1,105:1] 
  - RF of loop [105:1]:
    -V3+4 depends on loops [100:1,101:1,107:1] 
  - RF of loop [107:1]:
    V3 depends on loops [95:1,105:1] 


### Resulting Chains:isNatIList(V3,Out) 
* [[95,99,100,101,105,106,107]]...
* [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104]]...
* [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],115]
* [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],113]
* [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],111]
* [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],93]...
* [[95,99,100,101,105,106,107],116]
* [[95,99,100,101,105,106,107],115]
* [[95,99,100,101,105,106,107],114]
* [[95,99,100,101,105,106,107],113]
* [[95,99,100,101,105,106,107],112]
* [[95,99,100,101,105,106,107],111]
* [[95,99,100,101,105,106,107],110]
* [[95,99,100,101,105,106,107],109]
* [[95,99,100,101,105,106,107],108]
* [[95,99,100,101,105,106,107],93]...
* [[95,99,100,101,105,106,107],92]...
* [[94,96,97,98,102,103,104]]...
* [[94,96,97,98,102,103,104],115]
* [[94,96,97,98,102,103,104],113]
* [[94,96,97,98,102,103,104],111]
* [[94,96,97,98,102,103,104],93]...
* [116]
* [115]
* [114]
* [113]
* [112]
* [111]
* [110]
* [109]
* [108]
* [93]...
* [92]...


### Merging Chains  isNatIList/2 into  External patterns of execution 
* [[115]] --> 1 
* [[114],[116],[108,[95,99,100,101,105,106,107]],[109,[95,99,100,101,105,106,107]],[110,[95,99,100,101,105,106,107]],[111,[95,99,100,101,105,106,107]],[112,[95,99,100,101,105,106,107]],[113,[95,99,100,101,105,106,107]],[114,[95,99,100,101,105,106,107]],[115,[95,99,100,101,105,106,107]],[116,[95,99,100,101,105,106,107]],[111,[94,96,97,98,102,103,104],[95,99,100,101,105,106,107]],[113,[94,96,97,98,102,103,104],[95,99,100,101,105,106,107]],[115,[94,96,97,98,102,103,104],[95,99,100,101,105,106,107]]] --> 2 
* [[113],[111,[94,96,97,98,102,103,104]],[113,[94,96,97,98,102,103,104]],[115,[94,96,97,98,102,103,104]]] --> 3 
* [[112]] --> 4 
* [[111]] --> 5 
* [[110]] --> 6 
* [[109]] --> 7 
* [[108]] --> 8 
* [[92],[93,[95,99,100,101,105,106,107]],[[94,96,97,98,102,103,104],[95,99,100,101,105,106,107]]] --> 9 
* [[92,[95,99,100,101,105,106,107]],[93,[94,96,97,98,102,103,104],[95,99,100,101,105,106,107]]] --> 10 
* [[93,[94,96,97,98,102,103,104]]] --> 11 
* [[93]] --> 12 
* [[[95,99,100,101,105,106,107]]] --> 13 
* [[[94,96,97,98,102,103,104]]] --> 14 


### Specialization of cost equations fun9/3 
* CE 48 is refined into CE [287] 
* CE 47 is refined into CE [288,289,290,291] 


#### Refined cost equations fun9/3 
* CE 287: fun9(V3,V4,Out) = 0
     [V4>=0,V3>=0,Out=0] 
* CE 288: fun9(V3,V4,Out) = 3+ activate(V4,V4):1
     [V4>=0,V4+2=Out,V3=1] 
* CE 289: fun9(V3,V4,Out) = 3+ activate(W4,X4):2
     [X4=2,W4=2,Out=4,V4=2,V3=1] 
* CE 290: fun9(V3,V4,Out) = 3+ activate(W4,X4):3
     [X4=3,W4=2,Out=5,V4=2,V3=1] 
* CE 291: fun9(V3,V4,Out) = 3+ activate(W4,X4):4
     [X4>=4,X4=W4+1,X4+2=Out,X4=V4+1,V3=1] 

### Cost equations --> "Loop" of fun9/3 
* CEs [287] --> Loop 117 
* CEs [291] --> Loop 118 
* CEs [290] --> Loop 119 
* CEs [288,289] --> Loop 120 

#### Loops of fun9/3 
* Loop 117: fun9(V3,V4,Out) [V4>=0,V3>=0,Out=0] 
* Loop 118: fun9(V3,V4,Out) [V4>=3,V4+3=Out,V3=1] 
* Loop 119: fun9(V3,V4,Out) [Out=5,V4=2,V3=1] 
* Loop 120: fun9(V3,V4,Out) [V4>=0,V4+2=Out,V3=1] 

### Ranking functions of CR fun9(V3,V4,Out) 

#### Partial ranking functions of CR fun9(V3,V4,Out) 


### Resulting Chains:fun9(V3,V4,Out) 
* [120]
* [119]
* [118]
* [117]


### Merging Chains  fun9/3 into  External patterns of execution 
* [[119]] --> 1 
* [[118]] --> 2 
* [[120]] --> 3 
* [[117]] --> 4 


### Specialization of cost equations fun8/4 
* CE 46 is refined into CE [292] 
* CE 45 is refined into CE [293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342] 


#### Refined cost equations fun8/4 
* CE 292: fun8(V3,V4,V5,Out) = 0
     [V5>=0,V4>=0,V3>=0,Out=0] 
* CE 293: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):1+ fun9(C6,D6,E6):1
     [E6=5,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=5,V5=0,V4=2,V3=1] 
* CE 294: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):1+ fun9(C6,D6,Out):2
     [Out>=6,Out=D6+3,Out=B6+3,Out=A6+3,Out=V4+3,C6=1,Z5=1,Y5=0,X5=0,W5=0,V5=0,V3=1] 
* CE 295: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):1+ fun9(C6,D6,Out):3
     [Out>=2,Out=D6+2,Out=B6+2,Out=A6+2,Out=V4+2,C6=1,Z5=1,Y5=0,X5=0,W5=0,V5=0,V3=1] 
* CE 296: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(V4,V4):1+ fun9(A6,V4,B6):4
     [V4>=0,B6=0,A6=1,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V3=1] 
* CE 297: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):2+ fun9(C6,D6,E6):1
     [E6=5,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=5,V5=0,V4=2,V3=1] 
* CE 298: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):2+ fun9(C6,D6,E6):3
     [E6=4,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=4,V5=0,V4=2,V3=1] 
* CE 299: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):2+ fun9(C6,D6,E6):4
     [E6=0,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V4=2,V3=1] 
* CE 300: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):3+ fun9(C6,D6,E6):2
     [E6=6,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=6,V5=0,V4=2,V3=1] 
* CE 301: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):3+ fun9(C6,D6,E6):3
     [E6=5,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=5,V5=0,V4=2,V3=1] 
* CE 302: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):3+ fun9(C6,D6,E6):4
     [E6=0,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V4=2,V3=1] 
* CE 303: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):4+ fun9(C6,D6,Out):2
     [Out>=7,Out=D6+3,Out=B6+3,Out=A6+4,Out=V4+4,C6=1,Z5=1,Y5=0,X5=0,W5=0,V5=0,V3=1] 
* CE 304: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):4+ fun9(C6,D6,Out):3
     [Out>=6,Out=D6+2,Out=B6+2,Out=A6+3,Out=V4+3,C6=1,Z5=1,Y5=0,X5=0,W5=0,V5=0,V3=1] 
* CE 305: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ activate(A6,B6):4+ fun9(C6,B6,D6):4
     [B6>=4,B6=A6+1,B6=V4+1,D6=0,C6=1,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V3=1] 
* CE 306: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):1+ fun9(C6,D6,E6):1
     [E6=5,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=5,V5=1,V4=2,V3=1] 
* CE 307: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):1+ fun9(C6,D6,Out):2
     [Out>=6,Out=D6+3,Out=B6+3,Out=A6+3,Out=V4+3,C6=1,Z5=1,Y5=1,X5=1,W5=1,V5=1,V3=1] 
* CE 308: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):1+ fun9(C6,D6,Out):3
     [Out>=2,Out=D6+2,Out=B6+2,Out=A6+2,Out=V4+2,C6=1,Z5=1,Y5=1,X5=1,W5=1,V5=1,V3=1] 
* CE 309: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(V4,V4):1+ fun9(A6,V4,B6):4
     [V4>=0,B6=0,A6=1,Z5=1,Y5=1,X5=1,W5=1,Out=0,V5=1,V3=1] 
* CE 310: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):2+ fun9(C6,D6,E6):1
     [E6=5,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=5,V5=1,V4=2,V3=1] 
* CE 311: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):2+ fun9(C6,D6,E6):3
     [E6=4,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=4,V5=1,V4=2,V3=1] 
* CE 312: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):2+ fun9(C6,D6,E6):4
     [E6=0,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=0,V5=1,V4=2,V3=1] 
* CE 313: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):3+ fun9(C6,D6,E6):2
     [E6=6,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=6,V5=1,V4=2,V3=1] 
* CE 314: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):3+ fun9(C6,D6,E6):3
     [E6=5,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=5,V5=1,V4=2,V3=1] 
* CE 315: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):3+ fun9(C6,D6,E6):4
     [E6=0,D6=3,C6=1,B6=3,A6=2,Z5=1,Y5=1,X5=1,W5=1,Out=0,V5=1,V4=2,V3=1] 
* CE 316: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):4+ fun9(C6,D6,Out):2
     [Out>=7,Out=D6+3,Out=B6+3,Out=A6+4,Out=V4+4,C6=1,Z5=1,Y5=1,X5=1,W5=1,V5=1,V3=1] 
* CE 317: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):4+ fun9(C6,D6,Out):3
     [Out>=6,Out=D6+2,Out=B6+2,Out=A6+3,Out=V4+3,C6=1,Z5=1,Y5=1,X5=1,W5=1,V5=1,V3=1] 
* CE 318: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ activate(A6,B6):4+ fun9(C6,B6,D6):4
     [B6>=4,B6=A6+1,B6=V4+1,D6=0,C6=1,Z5=1,Y5=1,X5=1,W5=1,Out=0,V5=1,V3=1] 
* CE 319: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):3+ activate(V4,V4):1+ fun9(X5,V4,Y5):4
     [V4>=0,V5>=0,Y5=0,X5=0,W5=0,Out=0,V3=1] 
* CE 320: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):3+ activate(X5,Y5):2+ fun9(Z5,A6,B6):4
     [V5>=0,B6=0,A6=2,Z5=0,Y5=2,X5=2,W5=0,Out=0,V4=2,V3=1] 
* CE 321: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):3+ activate(X5,Y5):3+ fun9(Z5,A6,B6):4
     [V5>=0,B6=0,A6=3,Z5=0,Y5=3,X5=2,W5=0,Out=0,V4=2,V3=1] 
* CE 322: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):3+ activate(X5,Y5):4+ fun9(Z5,Y5,A6):4
     [Y5>=4,V5>=0,Y5=X5+1,Y5=V4+1,A6=0,Z5=0,W5=0,Out=0,V3=1] 
* CE 323: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):4
     [V5>=1,V4>=0,X5=0,W5=0,V3=1] 
* CE 324: fun8(V3,V4,V5,Out) = 1+ activate(V5,V5):1+ isNatListisNat(V5,W5):5
     [V5>=1,V4>=0,X5=1,W5=1,V3=1] 
* CE 325: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):3+ activate(V4,V4):1+ fun9(A6,V4,B6):4
     [V4>=0,B6=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 326: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):2+ fun9(C6,D6,E6):4
     [E6=0,D6=2,C6=0,B6=2,A6=2,Z5=0,Y5=2,X5=2,W5=2,Out=0,V5=2,V4=2,V3=1] 
* CE 327: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):3+ fun9(C6,D6,E6):4
     [E6=0,D6=3,C6=0,B6=3,A6=2,Z5=0,Y5=2,X5=2,W5=2,Out=0,V5=2,V4=2,V3=1] 
* CE 328: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):4+ fun9(C6,B6,D6):4
     [B6>=4,B6=A6+1,B6=V4+1,D6=0,C6=0,Z5=0,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 329: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):4
     [V4>=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,V5=2,V3=1] 
* CE 330: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):5
     [V4>=0,A6=1,Z5=1,Y5=2,X5=2,W5=2,V5=2,V3=1] 
* CE 331: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):3+ activate(V4,V4):1+ fun9(A6,V4,B6):4
     [V4>=0,B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=2,Out=0,V5=2,V3=1] 
* CE 332: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):2+ fun9(C6,D6,E6):4
     [E6=0,D6=2,C6=0,B6=2,A6=2,Z5=0,Y5=3,X5=3,W5=2,Out=0,V5=2,V4=2,V3=1] 
* CE 333: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):3+ fun9(C6,D6,E6):4
     [E6=0,D6=3,C6=0,B6=3,A6=2,Z5=0,Y5=3,X5=3,W5=2,Out=0,V5=2,V4=2,V3=1] 
* CE 334: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):3+ activate(A6,B6):4+ fun9(C6,B6,D6):4
     [B6>=4,B6=A6+1,B6=V4+1,D6=0,C6=0,Z5=0,Y5=3,X5=3,W5=2,Out=0,V5=2,V3=1] 
* CE 335: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):4
     [V4>=0,A6=0,Z5=0,Y5=3,X5=3,W5=2,V5=2,V3=1] 
* CE 336: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):5
     [V4>=0,A6=1,Z5=1,Y5=3,X5=3,W5=2,V5=2,V3=1] 
* CE 337: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):3+ activate(V4,V4):1+ fun9(Z5,V4,A6):4
     [V4>=0,X5>=4,X5=W5+1,X5=V5+1,A6=0,Z5=0,Y5=0,Out=0,V3=1] 
* CE 338: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):3+ activate(Z5,A6):2+ fun9(B6,C6,D6):4
     [X5>=4,X5=W5+1,X5=V5+1,D6=0,C6=2,B6=0,A6=2,Z5=2,Y5=0,Out=0,V4=2,V3=1] 
* CE 339: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):3+ activate(Z5,A6):3+ fun9(B6,C6,D6):4
     [X5>=4,X5=W5+1,X5=V5+1,D6=0,C6=3,B6=0,A6=3,Z5=2,Y5=0,Out=0,V4=2,V3=1] 
* CE 340: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):3+ activate(Z5,A6):4+ fun9(B6,A6,C6):4
     [A6>=4,X5>=4,A6=Z5+1,X5=W5+1,X5=V5+1,A6=V4+1,C6=0,B6=0,Y5=0,Out=0,V3=1] 
* CE 341: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):4
     [X5>=4,V4>=0,X5=W5+1,X5=V5+1,Z5=0,Y5=0,V3=1] 
* CE 342: fun8(V3,V4,V5,Out) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):5
     [X5>=4,V4>=0,X5=W5+1,X5=V5+1,Z5=1,Y5=1,V3=1] 

### Cost equations --> "Loop" of fun8/4 
* CEs [323,324,329,330,335,336,341,342] --> Loop 121 
* CEs [307,317] --> Loop 122 
* CEs [316] --> Loop 123 
* CEs [294,304] --> Loop 124 
* CEs [303] --> Loop 125 
* CEs [296,305] --> Loop 126 
* CEs [325,326,327,328,331,332,333,334] --> Loop 127 
* CEs [313] --> Loop 128 
* CEs [306,310,314] --> Loop 129 
* CEs [308,311] --> Loop 130 
* CEs [309,312,315,318] --> Loop 131 
* CEs [300] --> Loop 132 
* CEs [293,297,301] --> Loop 133 
* CEs [295,298] --> Loop 134 
* CEs [292,299,302,319,320,321,322,337,338,339,340] --> Loop 135 

#### Loops of fun8/4 
* Loop 121: fun8(V3,V4,V5,Out) [V5>=1,V4>=0,V3=1] 
* Loop 122: fun8(V3,V4,V5,Out) [V4>=3,V4+3=Out,V5=1,V3=1] 
* Loop 123: fun8(V3,V4,V5,Out) [V4>=3,V4+4=Out,V5=1,V3=1] 
* Loop 124: fun8(V3,V4,V5,Out) [V4>=3,V4+3=Out,V5=0,V3=1] 
* Loop 125: fun8(V3,V4,V5,Out) [V4>=3,V4+4=Out,V5=0,V3=1] 
* Loop 126: fun8(V3,V4,V5,Out) [V4>=0,Out=0,V5=0,V3=1] 
* Loop 127: fun8(V3,V4,V5,Out) [V4>=0,Out=0,V5=2,V3=1] 
* Loop 128: fun8(V3,V4,V5,Out) [Out=6,V5=1,V4=2,V3=1] 
* Loop 129: fun8(V3,V4,V5,Out) [Out=5,V5=1,V4=2,V3=1] 
* Loop 130: fun8(V3,V4,V5,Out) [V4>=0,V4+2=Out,V5=1,V3=1] 
* Loop 131: fun8(V3,V4,V5,Out) [V4>=0,Out=0,V5=1,V3=1] 
* Loop 132: fun8(V3,V4,V5,Out) [Out=6,V5=0,V4=2,V3=1] 
* Loop 133: fun8(V3,V4,V5,Out) [Out=5,V5=0,V4=2,V3=1] 
* Loop 134: fun8(V3,V4,V5,Out) [V4>=0,V4+2=Out,V5=0,V3=1] 
* Loop 135: fun8(V3,V4,V5,Out) [V5>=0,V4>=0,V3>=0,Out=0] 

### Ranking functions of CR fun8(V3,V4,V5,Out) 

#### Partial ranking functions of CR fun8(V3,V4,V5,Out) 


### Resulting Chains:fun8(V3,V4,V5,Out) 
* [135]
* [134]
* [133]
* [132]
* [131]
* [130]
* [129]
* [128]
* [127]
* [126]
* [125]
* [124]
* [123]
* [122]
* [121]...


### Merging Chains  fun8/4 into  External patterns of execution 
* [[133]] --> 1 
* [[132]] --> 2 
* [[129]] --> 3 
* [[128]] --> 4 
* [[126],[135]] --> 5 
* [[125]] --> 6 
* [[124]] --> 7 
* [[134]] --> 8 
* [[131]] --> 9 
* [[123]] --> 10 
* [[122]] --> 11 
* [[130]] --> 12 
* [[127]] --> 13 
* [[121]] --> 14 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [343] 
* CE 3 is refined into CE [344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359] 
* CE 4 is refined into CE [360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408] 
* CE 5 is refined into CE [409,410] 
* CE 6 is refined into CE [411,412] 
* CE 7 is refined into CE [413,414] 
* CE 8 is refined into CE [415,416] 
* CE 9 is refined into CE [417,418] 
* CE 10 is refined into CE [419,420] 
* CE 11 is refined into CE [421,422,423,424,425,426,427,428,429,430,431,432,433,434] 
* CE 12 is refined into CE [435,436,437,438] 
* CE 13 is refined into CE [439,440,441,442,443] 
* CE 14 is refined into CE [444,445,446,447,448,449,450,451,452,453,454,455,456,457] 
* CE 15 is refined into CE [458] 
* CE 16 is refined into CE [459,460,461,462] 


#### Refined cost equations start/3 
* CE 343: start(V3,V4,V5) = 0
     [V4>=0,V3>=0] 
* CE 344: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ fun7(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=0,X5=0,W5=0,V4=0,V3=1] 
* CE 345: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):1+ fun7(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=0,X5=0,W5=0,V4=0,V3=1] 
* CE 346: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ fun7(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=1,X5=1,W5=1,V4=1,V3=1] 
* CE 347: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatListisNat(Y5,Z5):2+ fun7(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=1,X5=1,W5=1,V4=1,V3=1] 
* CE 348: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatListisNat(V4,W5):3+ fun7(X5,Y5):2
     [V4>=0,Y5=0,X5=0,W5=0,V3=1] 
* CE 349: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatListisNat(V4,W5):4
     [V4>=1,X5=0,W5=0,V3=1] 
* CE 350: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatListisNat(V4,W5):5
     [V4>=1,X5=1,W5=1,V3=1] 
* CE 351: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):3+ fun7(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 352: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):4
     [A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 353: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatListisNat(Y5,Z5):5
     [A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 354: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):3+ fun7(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 355: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):4
     [A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 356: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatListisNat(Y5,Z5):5
     [A6=1,Z5=1,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 357: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):3+ fun7(Z5,A6):2
     [X5>=4,X5=W5+1,X5=V4+1,A6=0,Z5=0,Y5=0,V3=1] 
* CE 358: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):4
     [X5>=4,X5=W5+1,X5=V4+1,Z5=0,Y5=0,V3=1] 
* CE 359: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatListisNat(X5,Y5):5
     [X5>=4,X5=W5+1,X5=V4+1,Z5=1,Y5=1,V3=1] 
* CE 360: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):1+ fun5(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=0,X5=0,W5=0,V4=0,V3=1] 
* CE 361: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):1+ fun5(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=0,X5=0,W5=0,V4=0,V3=1] 
* CE 362: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):2+ fun5(X5,Y5):2
     [V4>=0,Y5=0,X5=0,W5=0,V3=1] 
* CE 363: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):3+ fun5(X5,Y5):1
     [V4>=1,Y5=1,X5=1,W5=1,V3=1] 
* CE 364: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):3+ fun5(X5,Y5):2
     [V4>=1,Y5=0,X5=1,W5=1,V3=1] 
* CE 365: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):4+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 366: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):5+ fun5(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 367: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):5+ fun5(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 368: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):6+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=3,V4=3,V3=1] 
* CE 369: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):7+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=4,X5=4,W5=4,V4=4,V3=1] 
* CE 370: start(V3,V4,V5) = 1+ activate(W5,X5):1+ isNatIList(Y5,Z5):8+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=5,X5=5,W5=5,V4=5,V3=1] 
* CE 371: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):9
     [V4>=2,X5=0,W5=0,V3=1] 
* CE 372: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):10
     [V4>=3,X5=0,W5=0,V3=1] 
* CE 373: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):11
     [V4>=2,X5=1,W5=1,V3=1] 
* CE 374: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):12
     [V4>=1,V3=1] 
* CE 375: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):13
     [V4>=1,X5=0,W5=0,V3=1] 
* CE 376: start(V3,V4,V5) = 1+ activate(V4,V4):1+ isNatIList(V4,W5):14
     [V4>=1,X5=1,W5=1,V3=1] 
* CE 377: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):2+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 378: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):3+ fun5(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 379: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):3+ fun5(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 380: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):4+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 381: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):5+ fun5(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 382: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):5+ fun5(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 383: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):9
     [A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 384: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):11
     [A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 385: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):12
     [Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 386: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):13
     [A6=0,Z5=0,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 387: start(V3,V4,V5) = 1+ activate(W5,X5):2+ isNatIList(Y5,Z5):14
     [A6=1,Z5=1,Y5=2,X5=2,W5=2,V4=2,V3=1] 
* CE 388: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):2+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 389: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):3+ fun5(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 390: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):3+ fun5(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 391: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):6+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 392: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):9
     [A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 393: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):10
     [A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 394: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):11
     [A6=1,Z5=1,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 395: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):12
     [Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 396: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):13
     [A6=0,Z5=0,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 397: start(V3,V4,V5) = 1+ activate(W5,X5):3+ isNatIList(Y5,Z5):14
     [A6=1,Z5=1,Y5=3,X5=3,W5=2,V4=2,V3=1] 
* CE 398: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):2+ fun5(Z5,A6):2
     [X5>=4,X5=W5+1,X5=V4+1,A6=0,Z5=0,Y5=0,V3=1] 
* CE 399: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):3+ fun5(Z5,A6):1
     [X5>=4,X5=W5+1,X5=V4+1,A6=1,Z5=1,Y5=1,V3=1] 
* CE 400: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):3+ fun5(Z5,A6):2
     [X5>=4,X5=W5+1,X5=V4+1,A6=0,Z5=1,Y5=1,V3=1] 
* CE 401: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(Y5,Z5):7+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=4,X5=4,W5=3,V4=3,V3=1] 
* CE 402: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(Y5,Z5):8+ fun5(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=5,X5=5,W5=4,V4=4,V3=1] 
* CE 403: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):9
     [X5>=4,X5=W5+1,X5=V4+1,Z5=0,Y5=0,V3=1] 
* CE 404: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):10
     [X5>=4,X5=W5+1,X5=V4+1,Z5=0,Y5=0,V3=1] 
* CE 405: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):11
     [X5>=4,X5=W5+1,X5=V4+1,Z5=1,Y5=1,V3=1] 
* CE 406: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):12
     [X5>=4,X5=W5+1,X5=V4+1,V3=1] 
* CE 407: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):13
     [X5>=4,X5=W5+1,X5=V4+1,Z5=0,Y5=0,V3=1] 
* CE 408: start(V3,V4,V5) = 1+ activate(W5,X5):4+ isNatIList(X5,Y5):14
     [X5>=4,X5=W5+1,X5=V4+1,Z5=1,Y5=1,V3=1] 
* CE 409: start(V3,V4,V5) = 0+ zeros(W5):1
     [W5=2] 
* CE 410: start(V3,V4,V5) = 0+ zeros(W5):2
     [W5=3] 
* CE 411: start(V3,V4,V5) = 0+ fun1(W5,X5):1
     [X5=1,W5=1,V3=1] 
* CE 412: start(V3,V4,V5) = 0+ fun1(V3,W5):2
     [V3>=0,W5=0] 
* CE 413: start(V3,V4,V5) = 0+ fun2(W5,X5):1
     [X5=1,W5=1,V3=1] 
* CE 414: start(V3,V4,V5) = 0+ fun2(V3,W5):2
     [V3>=0,W5=0] 
* CE 415: start(V3,V4,V5) = 0+ fun3(W5,X5):1
     [X5=1,W5=1,V3=1] 
* CE 416: start(V3,V4,V5) = 0+ fun3(V3,W5):2
     [V3>=0,W5=0] 
* CE 417: start(V3,V4,V5) = 0+ fun5(W5,X5):1
     [X5=1,W5=1,V3=1] 
* CE 418: start(V3,V4,V5) = 0+ fun5(V3,W5):2
     [V3>=0,W5=0] 
* CE 419: start(V3,V4,V5) = 0+ fun7(W5,X5):1
     [X5=1,W5=1,V3=1] 
* CE 420: start(V3,V4,V5) = 0+ fun7(V3,W5):2
     [V3>=0,W5=0] 
* CE 421: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):1
     [Z5=5,Y5=0,X5=2,W5=1,V5=0,V4=2,V3=1] 
* CE 422: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):2
     [Z5=6,Y5=0,X5=2,W5=1,V5=0,V4=2,V3=1] 
* CE 423: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):3
     [Z5=5,Y5=1,X5=2,W5=1,V5=1,V4=2,V3=1] 
* CE 424: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):4
     [Z5=6,Y5=1,X5=2,W5=1,V5=1,V4=2,V3=1] 
* CE 425: start(V3,V4,V5) = 0+ fun8(V3,V4,V5,W5):5
     [V5>=0,V4>=0,V3>=0,W5=0] 
* CE 426: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):6
     [Z5>=7,Z5=X5+4,Z5=V4+4,Y5=0,W5=1,V5=0,V3=1] 
* CE 427: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):7
     [Z5>=6,Z5=X5+3,Z5=V4+3,Y5=0,W5=1,V5=0,V3=1] 
* CE 428: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):8
     [Z5>=2,Z5=X5+2,Z5=V4+2,Y5=0,W5=1,V5=0,V3=1] 
* CE 429: start(V3,V4,V5) = 0+ fun8(W5,V4,X5,Y5):9
     [V4>=0,Y5=0,X5=1,W5=1,V5=1,V3=1] 
* CE 430: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):10
     [Z5>=7,Z5=X5+4,Z5=V4+4,Y5=1,W5=1,V5=1,V3=1] 
* CE 431: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):11
     [Z5>=6,Z5=X5+3,Z5=V4+3,Y5=1,W5=1,V5=1,V3=1] 
* CE 432: start(V3,V4,V5) = 0+ fun8(W5,X5,Y5,Z5):12
     [Z5>=2,Z5=X5+2,Z5=V4+2,Y5=1,W5=1,V5=1,V3=1] 
* CE 433: start(V3,V4,V5) = 0+ fun8(W5,V4,X5,Y5):13
     [V4>=0,Y5=0,X5=2,W5=1,V5=2,V3=1] 
* CE 434: start(V3,V4,V5) = 0+ fun8(W5,V4,V5,X5):14
     [V5>=1,V4>=0,W5=1,V3=1] 
* CE 435: start(V3,V4,V5) = 0+ fun9(W5,X5,Y5):1
     [Y5=5,X5=2,W5=1,V4=2,V3=1] 
* CE 436: start(V3,V4,V5) = 0+ fun9(W5,X5,Y5):2
     [Y5>=6,Y5=X5+3,Y5=V4+3,W5=1,V3=1] 
* CE 437: start(V3,V4,V5) = 0+ fun9(W5,X5,Y5):3
     [Y5>=2,Y5=X5+2,Y5=V4+2,W5=1,V3=1] 
* CE 438: start(V3,V4,V5) = 0+ fun9(V3,V4,W5):4
     [V4>=0,V3>=0,W5=0] 
* CE 439: start(V3,V4,V5) = 0+ isNatListisNat(W5,X5):1
     [X5=1,W5=0,V3=0] 
* CE 440: start(V3,V4,V5) = 0+ isNatListisNat(W5,X5):2
     [X5=1,W5=1,V3=1] 
* CE 441: start(V3,V4,V5) = 0+ isNatListisNat(V3,W5):3
     [V3>=0,W5=0] 
* CE 442: start(V3,V4,V5) = 0+ isNatListisNat(V3,W5):4
     [V3>=1,W5=0] 
* CE 443: start(V3,V4,V5) = 0+ isNatListisNat(V3,W5):5
     [V3>=1,W5=1] 
* CE 444: start(V3,V4,V5) = 0+ isNatIList(W5,X5):1
     [X5=1,W5=0,V3=0] 
* CE 445: start(V3,V4,V5) = 0+ isNatIList(V3,W5):2
     [V3>=0,W5=0] 
* CE 446: start(V3,V4,V5) = 0+ isNatIList(V3,W5):3
     [V3>=1,W5=1] 
* CE 447: start(V3,V4,V5) = 0+ isNatIList(W5,X5):4
     [X5=0,W5=2,V3=2] 
* CE 448: start(V3,V4,V5) = 0+ isNatIList(W5,X5):5
     [X5=1,W5=2,V3=2] 
* CE 449: start(V3,V4,V5) = 0+ isNatIList(W5,X5):6
     [X5=0,W5=3,V3=3] 
* CE 450: start(V3,V4,V5) = 0+ isNatIList(W5,X5):7
     [X5=0,W5=4,V3=4] 
* CE 451: start(V3,V4,V5) = 0+ isNatIList(W5,X5):8
     [X5=0,W5=5,V3=5] 
* CE 452: start(V3,V4,V5) = 0+ isNatIList(V3,W5):9
     [V3>=2,W5=0] 
* CE 453: start(V3,V4,V5) = 0+ isNatIList(V3,W5):10
     [V3>=3,W5=0] 
* CE 454: start(V3,V4,V5) = 0+ isNatIList(V3,W5):11
     [V3>=2,W5=1] 
* CE 455: start(V3,V4,V5) = 0+ isNatIList(V3,W5):12
     [V3>=1] 
* CE 456: start(V3,V4,V5) = 0+ isNatIList(V3,W5):13
     [V3>=1,W5=0] 
* CE 457: start(V3,V4,V5) = 0+ isNatIList(V3,W5):14
     [V3>=1,W5=1] 
* CE 458: start(V3,V4,V5) = 1
     [] 
* CE 459: start(V3,V4,V5) = 0+ activate(V3,V3):1
     [V3>=0] 
* CE 460: start(V3,V4,V5) = 0+ activate(W5,X5):2
     [X5=2,W5=2,V3=2] 
* CE 461: start(V3,V4,V5) = 0+ activate(W5,X5):3
     [X5=3,W5=2,V3=2] 
* CE 462: start(V3,V4,V5) = 0+ activate(W5,X5):4
     [X5>=4,X5=W5+1,X5=V3+1] 

### Cost equations --> "Loop" of start/3 
* CEs [343,344,345,346,347,348,351,354,357,360,361,362,363,364,365,366,367,368,369,370,377,378,379,380,381,382,388,389,390,391,398,399,400,401,402,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,439,440,441,444,445,446,447,448,449,450,451,458,459,460,461,462] --> Loop 136 
* CEs [434] --> Loop 137 
* CEs [349,350,352,353,355,356,358,359,371,372,373,374,375,376,383,384,385,386,387,392,393,394,395,396,397,403,404,405,406,407,408,442,443,452,453,454,455,456,457] --> Loop 138 

#### Loops of start/3 
* Loop 136: start(V3,V4,V5) [] 
* Loop 137: start(V3,V4,V5) [V5>=1,V4>=0,V3=1] 
* Loop 138: start(V3,V4,V5) [V3>=1] 

### Ranking functions of CR start(V3,V4,V5) 

#### Partial ranking functions of CR start(V3,V4,V5) 


### Resulting Chains:start(V3,V4,V5) 
* [138]...
* [137]...
* [136]


### Merging Chains  start/3 into  External patterns of execution 
* [[136]] --> 1 
* [[137]] --> 2 
* [[138]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of zeros(Out):
* Chain [31]: 1
  with precondition: [Out=2] 

* Chain [30]: 3
  with precondition: [Out=3] 


#### Cost of loops [32] 

 * loop 32:activate(V3,Out) -> [activate(V3',Out')] 
2
#### Cost of phase [32]:activate(V3,Out) -> [activate(V3',Out')] 
2*it(32)+0
  Such that:it(32) =< V3
it(32) =< V3-V3'

#### Cost of phase [32]:activate(V3,Out) -> [activate(V3',Out')] 
2*it(32)+0
  Such that:it(32) =< V3
it(32) =< V3-V3'

#### Cost of phase [32]:activate(V3,Out) -> [activate(V3',Out')] 
2*it(32)+0
  Such that:it(32) =< V3
it(32) =< V3-V3'

#### Cost of phase [32]:activate(V3,Out) -> [activate(V3',Out')] 
2*it(32)+0
  Such that:it(32) =< V3
it(32) =< V3-V3'

#### Cost of chains of activate(V3,Out):
* Chain [[32],36]: 2*it(32)+2
  Such that:it(32) =< Out

  with precondition: [Out=V3,Out>=1] 

* Chain [[32],35]: 2*it(32)+2
  Such that:it(32) =< Out

  with precondition: [Out=V3,Out>=2] 

* Chain [[32],34]: 2*it(32)+2
  Such that:it(32) =< Out

  with precondition: [Out=V3,Out>=3] 

* Chain [[32],33]: 2*it(32)+4
  Such that:it(32) =< Out

  with precondition: [Out=V3+1,Out>=4] 

* Chain [36]: 2
  with precondition: [V3=Out,V3>=0] 

* Chain [35]: 2
  with precondition: [V3=1,Out=1] 

* Chain [34]: 2
  with precondition: [V3=2,Out=2] 

* Chain [33]: 4
  with precondition: [V3=2,Out=3] 


#### Cost of chains of fun1(V3,Out):
* Chain [38]: 1
  with precondition: [V3=1,Out=1] 

* Chain [37]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun2(V3,Out):
* Chain [40]: 1
  with precondition: [V3=1,Out=1] 

* Chain [39]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun3(V3,Out):
* Chain [42]: 1
  with precondition: [V3=1,Out=1] 

* Chain [41]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun5(V3,Out):
* Chain [44]: 1
  with precondition: [V3=1,Out=1] 

* Chain [43]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun7(V3,Out):
* Chain [46]: 1
  with precondition: [V3=1,Out=1] 

* Chain [45]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of loops [47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89] 

 * loop 47:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(7)+4*s(9)+15
  Such that:s(7) =< A-A'2+2
s(8) =< A'2
s(9) =< s(8)

 * loop 48:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(20)+16*s(21)+13
  Such that:s(18) =< A-A'2+1
s(19) =< A'2
s(20) =< s(18)
s(21) =< s(19)

 * loop 49:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(25)+2*s(24)+15
  Such that:s(24) =< 4
s(25) =< A'

 * loop 50:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(37)+6*s(38)+2*s(35)+6*s(39)+13
  Such that:s(33) =< 2
s(34) =< 3
s(35) =< A
s(36) =< A'
s(37) =< s(36)
s(38) =< s(33)
s(39) =< s(34)

 * loop 51:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(53)+12*s(59)+4*s(57)+12*s(58)+2*s(52)+11
  Such that:s(52) =< A
s(53) =< A-A'2
s(54) =< A'2
s(55) =< 2
s(56) =< A'
s(57) =< s(56)
s(58) =< s(55)
s(59) =< s(54)

 * loop 52:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(74)+12*s(73)+6*s(75)+9
  Such that:s(70) =< A'
s(71) =< 2
s(72) =< A
s(73) =< s(71)
s(74) =< s(72)
s(75) =< s(70)

 * loop 53:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
16*s(83)+13
  Such that:s(82) =< A'2
s(83) =< s(82)

 * loop 54:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(87)+15
  Such that:s(86) =< A'2
s(87) =< s(86)

 * loop 55:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(107)+32*s(106)+11
  Such that:s(104) =< A'
s(105) =< A'2
s(106) =< s(105)
s(107) =< s(104)

 * loop 56:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(117)+8*s(116)+13
  Such that:s(114) =< A'
s(115) =< A'2
s(116) =< s(115)
s(117) =< s(114)

 * loop 67:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(119)+15
  Such that:s(119) =< 4

 * loop 68:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
43
 * loop 69:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(135)+12*s(134)+11
  Such that:s(132) =< A
s(133) =< 2
s(134) =< s(133)
s(135) =< s(132)

 * loop 70:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(143)+4*s(142)+13
  Such that:s(140) =< A
s(141) =< 4
s(142) =< s(141)
s(143) =< s(140)

 * loop 71:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(163)+12*s(162)+6*s(165)+12*s(164)+11
  Such that:s(158) =< A'
s(159) =< 2
s(160) =< 3
s(161) =< A
s(162) =< s(159)
s(163) =< s(161)
s(164) =< s(160)
s(165) =< s(158)

 * loop 72:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(187)+12*s(186)+12*s(185)+12*s(184)+9
  Such that:s(180) =< A
s(181) =< A-A'
s(182) =< A'
s(183) =< 2
s(184) =< s(183)
s(185) =< s(180)
s(186) =< s(181)
s(187) =< s(182)

 * loop 82:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
4*s(191)+6
  Such that:s(190) =< A'
s(191) =< s(190)

 * loop 88:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
6
 * loop 89:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
12*s(197)+4
  Such that:s(196) =< A
s(197) =< s(196)

#### Cost of phase [47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89]:isNatListisNat(A,B) -> [] 
230*it(47)+12*it(82)+78*it(89)+2*it([80])+2*s(198)+24*s(199)+32*s(201)+2*s(205)+6*s(209)+18*s(210)+30*s(215)+102*s(216)+10*s(230)+8*s(237)+4*s(265)+12*s(267)+0
  Such that:aux(66) =< -A+2
aux(38) =< A
aux(67) =< 2*A
aux(68) =< 2/5*A
aux(69) =< 6/5*A
it(89) =< aux(67)
it(47) =< aux(68)
aux(37) =< aux(38)+it(47)+it(47)
it([80]) =< it(89)+it(47)*3+it(47)*2+it(47)+it(47)*2+it(47)+it(47)+it(47)*2+it(47)+it(47)*3+it(47)*2+it(47)+it(47)+aux(66)
aux(43) =< aux(37)+3
aux(52) =< aux(37)+2
aux(40) =< aux(37)
aux(56) =< aux(37)+4
aux(48) =< aux(37)-1
aux(39) =< aux(37)+1
s(198) =< it(47)*aux(37)
s(268) =< it(89)*aux(43)
s(231) =< it(47)*aux(52)
s(221) =< it(47)*aux(43)
s(203) =< it(47)*aux(40)
s(239) =< it(47)*aux(56)
s(219) =< it(47)*aux(48)
s(200) =< it(47)*aux(39)
s(209) =< it(47)*aux(43)
s(205) =< it(47)*aux(39)
s(267) =< s(268)
s(216) =< s(221)
s(230) =< s(231)
s(210) =< aux(69)
s(201) =< s(203)
s(237) =< s(239)
s(215) =< s(219)
s(199) =< s(200)

#### Cost of loops [57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91] 

 * loop 57:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(272)+4*s(274)+14
  Such that:s(272) =< A-A'2+2
s(273) =< A'2
s(274) =< s(273)

 * loop 58:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(285)+16*s(286)+12
  Such that:s(283) =< A-A'2+1
s(284) =< A'2
s(285) =< s(283)
s(286) =< s(284)

 * loop 59:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(290)+2*s(289)+14
  Such that:s(289) =< 4
s(290) =< A'

 * loop 60:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(302)+6*s(303)+2*s(300)+6*s(304)+12
  Such that:s(298) =< 2
s(299) =< 3
s(300) =< A
s(301) =< A'
s(302) =< s(301)
s(303) =< s(298)
s(304) =< s(299)

 * loop 61:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(318)+12*s(324)+4*s(322)+12*s(323)+2*s(317)+10
  Such that:s(317) =< A
s(318) =< A-A'2
s(319) =< A'2
s(320) =< 2
s(321) =< A'
s(322) =< s(321)
s(323) =< s(320)
s(324) =< s(319)

 * loop 62:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(339)+12*s(338)+6*s(340)+8
  Such that:s(335) =< A'
s(336) =< 2
s(337) =< A
s(338) =< s(336)
s(339) =< s(337)
s(340) =< s(335)

 * loop 63:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
16*s(348)+12
  Such that:s(347) =< A'2
s(348) =< s(347)

 * loop 64:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
4*s(352)+14
  Such that:s(351) =< A'2
s(352) =< s(351)

 * loop 65:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(372)+32*s(371)+10
  Such that:s(369) =< A'
s(370) =< A'2
s(371) =< s(370)
s(372) =< s(369)

 * loop 66:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(382)+8*s(381)+12
  Such that:s(379) =< A'
s(380) =< A'2
s(381) =< s(380)
s(382) =< s(379)

 * loop 73:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
2*s(384)+14
  Such that:s(384) =< 4

 * loop 74:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
42
 * loop 75:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(400)+12*s(399)+10
  Such that:s(397) =< A
s(398) =< 2
s(399) =< s(398)
s(400) =< s(397)

 * loop 76:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(408)+4*s(407)+12
  Such that:s(405) =< A
s(406) =< 4
s(407) =< s(406)
s(408) =< s(405)

 * loop 77:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
12*s(428)+12*s(427)+6*s(430)+12*s(429)+10
  Such that:s(423) =< A'
s(424) =< 2
s(425) =< 3
s(426) =< A
s(427) =< s(424)
s(428) =< s(426)
s(429) =< s(425)
s(430) =< s(423)

 * loop 78:isNatListisNat(A,B) -> [isNatListisNat(A',B'),isNatListisNat(A'2,B'2)] 
6*s(452)+12*s(451)+12*s(450)+12*s(449)+8
  Such that:s(445) =< A
s(446) =< A-A'
s(447) =< A'
s(448) =< 2
s(449) =< s(448)
s(450) =< s(445)
s(451) =< s(446)
s(452) =< s(447)

 * loop 83:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
4*s(456)+9
  Such that:s(455) =< A'
s(456) =< s(455)

 * loop 84:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
6*s(464)+6*s(465)+7
  Such that:s(462) =< A-A'
s(463) =< A'
s(464) =< s(463)
s(465) =< s(462)

 * loop 85:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
12*s(471)+3
  Such that:s(470) =< A
s(471) =< s(470)

 * loop 86:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
9
 * loop 87:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
12*s(477)+7
  Such that:s(476) =< A
s(477) =< s(476)

 * loop 90:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
8*s(482)+9
  Such that:s(481) =< A
s(482) =< s(481)

 * loop 91:isNatListisNat(A,B) -> [isNatListisNat(A',B')] 
14*s(501)+8*s(500)+8*s(499)+2*s(495)+9
  Such that:s(495) =< A-A'+1
s(496) =< A
s(497) =< A-A'
s(498) =< A'
s(499) =< s(496)
s(500) =< s(497)
s(501) =< s(498)

#### Cost of phase [57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91]:isNatListisNat(A,B) -> [] 
221*it(57)+110*it(83)+32*it(84)+1*it([80])+1*it([81])+2*s(502)+24*s(503)+32*s(505)+2*s(509)+6*s(513)+26*s(514)+30*s(519)+114*s(520)+10*s(534)+8*s(541)+4*s(569)+14*s(571)+20*s(575)+14*s(581)+2*s(584)+230*s(588)+78*s(590)+2*s(591)+2*s(592)+24*s(593)+32*s(594)+2*s(595)+6*s(596)+18*s(597)+30*s(598)+102*s(599)+10*s(600)+8*s(601)+12*s(603)+0
  Such that:aux(147) =< 1
aux(111) =< A
aux(152) =< 2*A
aux(153) =< 2/5*A
aux(154) =< 6/5*A
it(83) =< aux(152)
it(57) =< aux(153)
aux(38) =< aux(111)+it(57)+it(57)
aux(150) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
it([81]) =< it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+aux(147)
s(612) =< it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+aux(147)
it([80]) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
it([multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])]) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
s(584) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
aux(149) =< aux(38)*2
aux(126) =< aux(38)-1
aux(130) =< aux(38)+1
aux(117) =< aux(38)
aux(113) =< aux(38)-2
aux(112) =< aux(38)-3
aux(122) =< aux(38)-4
aux(68) =< aux(38)* (2/5)
aux(150) =< it([multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])])*aux(149)
s(585) =< it(83)*aux(126)
s(584) =< it(83)*aux(130)
s(576) =< it(83)*aux(117)
s(525) =< it(57)*aux(117)
s(570) =< it(83)*aux(113)
s(535) =< it(57)*aux(126)
s(507) =< it(57)*aux(112)
s(543) =< it(57)*aux(130)
s(523) =< it(57)*aux(122)
s(504) =< it(57)*aux(113)
s(513) =< it(57)*aux(117)
s(509) =< it(57)*aux(113)
s(502) =< it(57)*aux(112)
s(608) =< aux(150)* (3/5)
s(613) =< aux(150)* (1/5)
s(590) =< aux(150)
s(588) =< s(613)
aux(37) =< aux(38)+aux(68)+aux(68)
s(591) =< s(590)+s(588)*3+s(588)*2+s(588)+s(588)*2+s(588)+s(588)+s(588)*2+s(588)+s(588)*3+s(588)*2+s(588)+s(588)+s(612)
aux(43) =< aux(37)+3
aux(52) =< aux(37)+2
aux(40) =< aux(37)
aux(56) =< aux(37)+4
aux(48) =< aux(37)-1
aux(39) =< aux(37)+1
s(592) =< s(588)*aux(37)
s(611) =< s(590)*aux(43)
s(609) =< s(588)*aux(52)
s(610) =< s(588)*aux(43)
s(607) =< s(588)*aux(40)
s(606) =< s(588)*aux(56)
s(605) =< s(588)*aux(48)
s(604) =< s(588)*aux(39)
s(596) =< s(588)*aux(43)
s(595) =< s(588)*aux(39)
s(603) =< s(611)
s(599) =< s(610)
s(600) =< s(609)
s(597) =< s(608)
s(594) =< s(607)
s(601) =< s(606)
s(598) =< s(605)
s(593) =< s(604)
s(575) =< s(576)
s(514) =< aux(154)
s(581) =< s(585)
s(520) =< s(525)
s(569) =< s(570)
s(534) =< s(535)
s(505) =< s(507)
s(541) =< s(543)
s(519) =< s(523)
s(503) =< s(504)

#### Cost of chains of isNatListisNat(A,B):
* Chain [multiple([57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,83,84,85,86,87,90,91],[[],[multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])],[81],[80],[79]])]...: 221*it(57)+110*it(83)+32*it(84)+1*it([80])+1*it([81])+2*s(502)+24*s(503)+32*s(505)+2*s(509)+6*s(513)+26*s(514)+30*s(519)+114*s(520)+10*s(534)+8*s(541)+4*s(569)+14*s(571)+20*s(575)+14*s(581)+2*s(584)+230*s(588)+78*s(590)+2*s(591)+2*s(592)+24*s(593)+32*s(594)+2*s(595)+6*s(596)+18*s(597)+30*s(598)+102*s(599)+10*s(600)+8*s(601)+12*s(603)+0
  Such that:aux(147) =< 1
aux(111) =< A
aux(152) =< 2*A
aux(153) =< 2/5*A
aux(154) =< 6/5*A
it(83) =< aux(152)
it(57) =< aux(153)
aux(38) =< aux(111)+it(57)+it(57)
aux(150) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
it([81]) =< it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+aux(147)
s(612) =< it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+it(57)+aux(147)
it([80]) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
it([multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])]) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
s(584) =< it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+it(57)*2+it(57)*2+it(57)*4+it(57)*2+it(57)*4+aux(152)
aux(149) =< aux(38)*2
aux(126) =< aux(38)-1
aux(130) =< aux(38)+1
aux(117) =< aux(38)
aux(113) =< aux(38)-2
aux(112) =< aux(38)-3
aux(122) =< aux(38)-4
aux(68) =< aux(38)* (2/5)
aux(150) =< it([multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])])*aux(149)
s(585) =< it(83)*aux(126)
s(584) =< it(83)*aux(130)
s(576) =< it(83)*aux(117)
s(525) =< it(57)*aux(117)
s(570) =< it(83)*aux(113)
s(535) =< it(57)*aux(126)
s(507) =< it(57)*aux(112)
s(543) =< it(57)*aux(130)
s(523) =< it(57)*aux(122)
s(504) =< it(57)*aux(113)
s(513) =< it(57)*aux(117)
s(509) =< it(57)*aux(113)
s(502) =< it(57)*aux(112)
s(608) =< aux(150)* (3/5)
s(613) =< aux(150)* (1/5)
s(590) =< aux(150)
s(588) =< s(613)
aux(37) =< aux(38)+aux(68)+aux(68)
s(591) =< s(590)+s(588)*3+s(588)*2+s(588)+s(588)*2+s(588)+s(588)+s(588)*2+s(588)+s(588)*3+s(588)*2+s(588)+s(588)+s(612)
aux(43) =< aux(37)+3
aux(52) =< aux(37)+2
aux(40) =< aux(37)
aux(56) =< aux(37)+4
aux(48) =< aux(37)-1
aux(39) =< aux(37)+1
s(592) =< s(588)*aux(37)
s(611) =< s(590)*aux(43)
s(609) =< s(588)*aux(52)
s(610) =< s(588)*aux(43)
s(607) =< s(588)*aux(40)
s(606) =< s(588)*aux(56)
s(605) =< s(588)*aux(48)
s(604) =< s(588)*aux(39)
s(596) =< s(588)*aux(43)
s(595) =< s(588)*aux(39)
s(603) =< s(611)
s(599) =< s(610)
s(600) =< s(609)
s(597) =< s(608)
s(594) =< s(607)
s(601) =< s(606)
s(598) =< s(605)
s(593) =< s(604)
s(575) =< s(576)
s(514) =< aux(154)
s(581) =< s(585)
s(520) =< s(525)
s(569) =< s(570)
s(534) =< s(535)
s(505) =< s(507)
s(541) =< s(543)
s(519) =< s(523)
s(503) =< s(504)

  with precondition: [A>=1,B=0] 

* Chain [multiple([47,48,49,50,51,52,53,54,55,56,67,68,69,70,71,72,82,88,89],[[],[81],[80]])]...: 230*it(47)+12*it(82)+78*it(89)+2*it([80])+2*s(198)+24*s(199)+32*s(201)+2*s(205)+6*s(209)+18*s(210)+30*s(215)+102*s(216)+10*s(230)+8*s(237)+4*s(265)+12*s(267)+0
  Such that:aux(66) =< -A+2
aux(38) =< A
aux(67) =< 2*A
aux(68) =< 2/5*A
aux(69) =< 6/5*A
it(89) =< aux(67)
it(47) =< aux(68)
aux(37) =< aux(38)+it(47)+it(47)
it([80]) =< it(89)+it(47)*3+it(47)*2+it(47)+it(47)*2+it(47)+it(47)+it(47)*2+it(47)+it(47)*3+it(47)*2+it(47)+it(47)+aux(66)
aux(43) =< aux(37)+3
aux(52) =< aux(37)+2
aux(40) =< aux(37)
aux(56) =< aux(37)+4
aux(48) =< aux(37)-1
aux(39) =< aux(37)+1
s(198) =< it(47)*aux(37)
s(268) =< it(89)*aux(43)
s(231) =< it(47)*aux(52)
s(221) =< it(47)*aux(43)
s(203) =< it(47)*aux(40)
s(239) =< it(47)*aux(56)
s(219) =< it(47)*aux(48)
s(200) =< it(47)*aux(39)
s(209) =< it(47)*aux(43)
s(205) =< it(47)*aux(39)
s(267) =< s(268)
s(216) =< s(221)
s(230) =< s(231)
s(210) =< aux(69)
s(201) =< s(203)
s(237) =< s(239)
s(215) =< s(219)
s(199) =< s(200)

  with precondition: [A>=1,B=1] 

* Chain [81]: 1
  with precondition: [A=0,B=1] 

* Chain [80]: 1
  with precondition: [A=1,B=1] 

* Chain [79]: 0
  with precondition: [B=0,A>=0] 


#### Cost of loops [95,99,100,101,105,106,107] 

 * loop 95:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(620)+13
  Such that:s(619) =< V3'
s(620) =< s(619)

 * loop 99:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(642)+12*s(641)+2*s(638)+13
  Such that:s(638) =< 4
s(639) =< 1
s(640) =< V3'
s(641) =< s(639)
s(642) =< s(640)

 * loop 100:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
59
 * loop 101:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(673)+12*s(672)+12*s(674)+9
  Such that:s(669) =< V3'
s(670) =< 1
s(671) =< 2
s(672) =< s(669)
s(673) =< s(670)
s(674) =< s(671)

 * loop 105:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(678)+13
  Such that:s(678) =< 4

 * loop 106:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
41
 * loop 107:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(722)+12*s(721)+12*s(720)+16*s(719)+11
  Such that:s(715) =< V3
s(716) =< 1
s(717) =< 2
s(718) =< V3'
s(719) =< s(718)
s(720) =< s(716)
s(721) =< s(717)
s(722) =< s(715)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of loops [94,96,97,98,102,103,104] 

 * loop 94:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(750)+14
  Such that:s(749) =< V3'
s(750) =< s(749)

 * loop 96:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(772)+12*s(771)+2*s(768)+14
  Such that:s(768) =< 4
s(769) =< 1
s(770) =< V3'
s(771) =< s(769)
s(772) =< s(770)

 * loop 97:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
60
 * loop 98:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(803)+12*s(802)+12*s(804)+10
  Such that:s(799) =< V3'
s(800) =< 1
s(801) =< 2
s(802) =< s(799)
s(803) =< s(800)
s(804) =< s(801)

 * loop 102:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(808)+14
  Such that:s(808) =< 4

 * loop 103:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
42
 * loop 104:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(852)+12*s(851)+12*s(850)+16*s(849)+12
  Such that:s(845) =< V3
s(846) =< 1
s(847) =< 2
s(848) =< V3'
s(849) =< s(848)
s(850) =< s(846)
s(851) =< s(847)
s(852) =< s(845)

#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
168*it(94)+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
168*it(94)+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
168*it(94)+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
168*it(94)+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
168*it(94)+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+0
#### Cost of loops [94,96,97,98,102,103,104] 

 * loop 94:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(750)+14
  Such that:s(749) =< V3'
s(750) =< s(749)

 * loop 96:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(772)+12*s(771)+2*s(768)+14
  Such that:s(768) =< 4
s(769) =< 1
s(770) =< V3'
s(771) =< s(769)
s(772) =< s(770)

 * loop 97:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
60
 * loop 98:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(803)+12*s(802)+12*s(804)+10
  Such that:s(799) =< V3'
s(800) =< 1
s(801) =< 2
s(802) =< s(799)
s(803) =< s(800)
s(804) =< s(801)

 * loop 102:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(808)+14
  Such that:s(808) =< 4

 * loop 103:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
42
 * loop 104:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(852)+12*s(851)+12*s(850)+16*s(849)+12
  Such that:s(845) =< V3
s(846) =< 1
s(847) =< 2
s(848) =< V3'
s(849) =< s(848)
s(850) =< s(846)
s(851) =< s(847)
s(852) =< s(845)

#### Cost of phase [94,96,97,98,102,103,104]:isNatIList(V3,Out) -> [] 
480*it(94)+6*it([93])+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+20*s(1472)+344*s(1473)+911*s(1474)+1*s(1475)+1*s(1476)+2*s(1477)+6*s(1478)+2*s(1479)+2*s(1480)+78*s(1481)+230*s(1482)+2*s(1483)+2*s(1484)+6*s(1485)+2*s(1486)+12*s(1487)+102*s(1488)+10*s(1489)+18*s(1490)+32*s(1491)+8*s(1492)+30*s(1493)+24*s(1494)+20*s(1495)+80*s(1496)+14*s(1497)+210*s(1498)+4*s(1499)+100*s(1500)+32*s(1501)+80*s(1502)+30*s(1503)+24*s(1504)+4*s(1506)+6*s(1507)+18*s(1508)+6*s(1509)+36*s(1510)+306*s(1511)+30*s(1512)+24*s(1513)+266*s(1514)+681*s(1515)+1*s(1516)+1*s(1517)+2*s(1518)+6*s(1519)+2*s(1520)+2*s(1521)+78*s(1522)+230*s(1523)+2*s(1524)+2*s(1525)+6*s(1526)+2*s(1527)+12*s(1528)+102*s(1529)+10*s(1530)+18*s(1531)+32*s(1532)+8*s(1533)+30*s(1534)+24*s(1535)+20*s(1536)+62*s(1537)+14*s(1538)+178*s(1539)+4*s(1540)+70*s(1541)+32*s(1542)+56*s(1543)+30*s(1544)+24*s(1545)+4*s(1546)+4*s(1547)+12*s(1548)+4*s(1549)+24*s(1550)+204*s(1551)+20*s(1552)+16*s(1553)+266*s(1554)+681*s(1555)+1*s(1556)+1*s(1557)+2*s(1558)+6*s(1559)+2*s(1560)+2*s(1561)+78*s(1562)+230*s(1563)+2*s(1564)+2*s(1565)+6*s(1566)+2*s(1567)+12*s(1568)+102*s(1569)+10*s(1570)+18*s(1571)+32*s(1572)+8*s(1573)+30*s(1574)+24*s(1575)+20*s(1576)+62*s(1577)+14*s(1578)+178*s(1579)+4*s(1580)+70*s(1581)+32*s(1582)+56*s(1583)+30*s(1584)+24*s(1585)+4*s(1586)+4*s(1587)+12*s(1588)+4*s(1589)+24*s(1590)+204*s(1591)+20*s(1592)+16*s(1593)+4*s(1594)+188*s(1595)+451*s(1596)+1*s(1597)+1*s(1598)+2*s(1599)+6*s(1600)+2*s(1601)+2*s(1602)+78*s(1603)+230*s(1604)+2*s(1605)+2*s(1606)+6*s(1607)+2*s(1608)+12*s(1609)+102*s(1610)+10*s(1611)+18*s(1612)+32*s(1613)+8*s(1614)+30*s(1615)+24*s(1616)+20*s(1617)+44*s(1618)+14*s(1619)+146*s(1620)+4*s(1621)+40*s(1622)+32*s(1623)+32*s(1624)+30*s(1625)+24*s(1626)+2*s(1627)+2*s(1628)+6*s(1629)+2*s(1630)+12*s(1631)+102*s(1632)+10*s(1633)+8*s(1634)+2*s(1636)+0
  Such that:aux(238) =< 2
aux(239) =< 3
aux(242) =< 4/5
aux(243) =< 6/5
aux(292) =< 1
it([93]) =< aux(292)
s(1689) =< aux(292)* (18/5)
s(1713) =< aux(292)* (12/5)
s(1704) =< aux(292)* (6/5)
s(1728) =< aux(292)* (4/5)
s(1703) =< aux(292)*6
s(1727) =< aux(292)*4
s(1514) =< s(1727)
s(1515) =< s(1728)
s(1001) =< aux(238)+aux(242)+aux(242)
s(1725) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1516) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1723) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1517) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1726) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1518) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1725) =< s(1726)*s(1008)
s(1712) =< s(1514)*s(1009)
s(1518) =< s(1514)*s(1010)
s(1714) =< s(1514)*s(1011)
s(1711) =< s(1515)*s(1011)
s(1710) =< s(1514)*s(1012)
s(1709) =< s(1515)*s(1009)
s(1708) =< s(1515)*s(1013)
s(1707) =< s(1515)*s(1010)
s(1706) =< s(1515)*s(1014)
s(1705) =< s(1515)*s(1012)
s(1519) =< s(1515)*s(1011)
s(1520) =< s(1515)*s(1012)
s(1521) =< s(1515)*s(1013)
s(1719) =< s(1725)* (3/5)
s(1724) =< s(1725)* (1/5)
s(1522) =< s(1725)
s(1523) =< s(1724)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1524) =< s(1522)+s(1523)*3+s(1523)*2+s(1523)+s(1523)*2+s(1523)+s(1523)+s(1523)*2+s(1523)+s(1523)*3+s(1523)*2+s(1523)+s(1523)+s(1723)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1525) =< s(1523)*s(1032)
s(1722) =< s(1522)*s(1034)
s(1720) =< s(1523)*s(1035)
s(1721) =< s(1523)*s(1034)
s(1718) =< s(1523)*s(1036)
s(1717) =< s(1523)*s(1037)
s(1716) =< s(1523)*s(1038)
s(1715) =< s(1523)*s(1039)
s(1526) =< s(1523)*s(1034)
s(1527) =< s(1523)*s(1039)
s(1528) =< s(1722)
s(1529) =< s(1721)
s(1530) =< s(1720)
s(1531) =< s(1719)
s(1532) =< s(1718)
s(1533) =< s(1717)
s(1534) =< s(1716)
s(1535) =< s(1715)
s(1536) =< s(1714)
s(1537) =< s(1713)
s(1538) =< s(1712)
s(1539) =< s(1711)
s(1540) =< s(1710)
s(1541) =< s(1709)
s(1542) =< s(1708)
s(1543) =< s(1707)
s(1544) =< s(1706)
s(1545) =< s(1705)
s(1554) =< s(1703)
s(1555) =< s(1704)
s(1112) =< aux(239)+aux(243)+aux(243)
s(1701) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1556) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1699) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1557) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1702) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1558) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1701) =< s(1702)*s(1119)
s(1688) =< s(1554)*s(1120)
s(1558) =< s(1554)*s(1121)
s(1690) =< s(1554)*s(1122)
s(1687) =< s(1555)*s(1122)
s(1686) =< s(1554)*s(1123)
s(1685) =< s(1555)*s(1120)
s(1684) =< s(1555)*s(1124)
s(1683) =< s(1555)*s(1121)
s(1682) =< s(1555)*s(1125)
s(1681) =< s(1555)*s(1123)
s(1559) =< s(1555)*s(1122)
s(1560) =< s(1555)*s(1123)
s(1561) =< s(1555)*s(1124)
s(1695) =< s(1701)* (3/5)
s(1700) =< s(1701)* (1/5)
s(1562) =< s(1701)
s(1563) =< s(1700)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1564) =< s(1562)+s(1563)*3+s(1563)*2+s(1563)+s(1563)*2+s(1563)+s(1563)+s(1563)*2+s(1563)+s(1563)*3+s(1563)*2+s(1563)+s(1563)+s(1699)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1565) =< s(1563)*s(1143)
s(1698) =< s(1562)*s(1145)
s(1696) =< s(1563)*s(1146)
s(1697) =< s(1563)*s(1145)
s(1694) =< s(1563)*s(1147)
s(1693) =< s(1563)*s(1148)
s(1692) =< s(1563)*s(1149)
s(1691) =< s(1563)*s(1150)
s(1566) =< s(1563)*s(1145)
s(1567) =< s(1563)*s(1150)
s(1568) =< s(1698)
s(1569) =< s(1697)
s(1570) =< s(1696)
s(1571) =< s(1695)
s(1572) =< s(1694)
s(1573) =< s(1693)
s(1574) =< s(1692)
s(1575) =< s(1691)
s(1576) =< s(1690)
s(1577) =< s(1689)
s(1578) =< s(1688)
s(1579) =< s(1687)
s(1580) =< s(1686)
s(1581) =< s(1685)
s(1582) =< s(1684)
s(1583) =< s(1683)
s(1584) =< s(1682)
s(1585) =< s(1681)
s(1546) =< s(1514)+s(1515)*3+s(1515)*2+s(1515)+s(1515)*2+s(1515)+s(1515)+s(1515)*2+s(1515)+s(1515)*3+s(1515)*2+s(1515)+s(1515)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1547) =< s(1515)*s(1001)
s(1650) =< s(1514)*s(1079)
s(1648) =< s(1515)*s(1080)
s(1649) =< s(1515)*s(1079)
s(1647) =< s(1515)*s(1082)
s(1548) =< s(1515)*s(1079)
s(1549) =< s(1515)*s(1010)
s(1550) =< s(1650)
s(1551) =< s(1649)
s(1552) =< s(1648)
s(1553) =< s(1647)
s(1586) =< s(1554)+s(1555)*3+s(1555)*2+s(1555)+s(1555)*2+s(1555)+s(1555)+s(1555)*2+s(1555)+s(1555)*3+s(1555)*2+s(1555)+s(1555)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1587) =< s(1555)*s(1112)
s(1646) =< s(1554)*s(1190)
s(1644) =< s(1555)*s(1191)
s(1645) =< s(1555)*s(1190)
s(1643) =< s(1555)*s(1193)
s(1588) =< s(1555)*s(1190)
s(1589) =< s(1555)*s(1121)
s(1590) =< s(1646)
s(1591) =< s(1645)
s(1592) =< s(1644)
s(1593) =< s(1643)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of loops [95,99,100,101,105,106,107] 

 * loop 95:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(620)+13
  Such that:s(619) =< V3'
s(620) =< s(619)

 * loop 99:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(642)+12*s(641)+2*s(638)+13
  Such that:s(638) =< 4
s(639) =< 1
s(640) =< V3'
s(641) =< s(639)
s(642) =< s(640)

 * loop 100:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
59
 * loop 101:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(673)+12*s(672)+12*s(674)+9
  Such that:s(669) =< V3'
s(670) =< 1
s(671) =< 2
s(672) =< s(669)
s(673) =< s(670)
s(674) =< s(671)

 * loop 105:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(678)+13
  Such that:s(678) =< 4

 * loop 106:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
41
 * loop 107:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(722)+12*s(721)+12*s(720)+16*s(719)+11
  Such that:s(715) =< V3
s(716) =< 1
s(717) =< 2
s(718) =< V3'
s(719) =< s(718)
s(720) =< s(716)
s(721) =< s(717)
s(722) =< s(715)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [] 
161*it(95)+21*it([116])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+82*s(1797)+6*s(1799)+0
  Such that:aux(328) =< 1
it([116]) =< aux(328)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of loops [95,99,100,101,105,106,107] 

 * loop 95:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(620)+13
  Such that:s(619) =< V3'
s(620) =< s(619)

 * loop 99:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(642)+12*s(641)+2*s(638)+13
  Such that:s(638) =< 4
s(639) =< 1
s(640) =< V3'
s(641) =< s(639)
s(642) =< s(640)

 * loop 100:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
59
 * loop 101:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(673)+12*s(672)+12*s(674)+9
  Such that:s(669) =< V3'
s(670) =< 1
s(671) =< 2
s(672) =< s(669)
s(673) =< s(670)
s(674) =< s(671)

 * loop 105:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(678)+13
  Such that:s(678) =< 4

 * loop 106:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
41
 * loop 107:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(722)+12*s(721)+12*s(720)+16*s(719)+11
  Such that:s(715) =< V3
s(716) =< 1
s(717) =< 2
s(718) =< V3'
s(719) =< s(718)
s(720) =< s(716)
s(721) =< s(717)
s(722) =< s(715)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [] 
473*it(95)+6*it([93])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+20*s(1472)+344*s(1473)+911*s(1474)+1*s(1475)+1*s(1476)+2*s(1477)+6*s(1478)+2*s(1479)+2*s(1480)+78*s(1481)+230*s(1482)+2*s(1483)+2*s(1484)+6*s(1485)+2*s(1486)+12*s(1487)+102*s(1488)+10*s(1489)+18*s(1490)+32*s(1491)+8*s(1492)+30*s(1493)+24*s(1494)+20*s(1495)+80*s(1496)+14*s(1497)+210*s(1498)+4*s(1499)+100*s(1500)+32*s(1501)+80*s(1502)+30*s(1503)+24*s(1504)+4*s(1506)+6*s(1507)+18*s(1508)+6*s(1509)+36*s(1510)+306*s(1511)+30*s(1512)+24*s(1513)+266*s(1514)+681*s(1515)+1*s(1516)+1*s(1517)+2*s(1518)+6*s(1519)+2*s(1520)+2*s(1521)+78*s(1522)+230*s(1523)+2*s(1524)+2*s(1525)+6*s(1526)+2*s(1527)+12*s(1528)+102*s(1529)+10*s(1530)+18*s(1531)+32*s(1532)+8*s(1533)+30*s(1534)+24*s(1535)+20*s(1536)+62*s(1537)+14*s(1538)+178*s(1539)+4*s(1540)+70*s(1541)+32*s(1542)+56*s(1543)+30*s(1544)+24*s(1545)+4*s(1546)+4*s(1547)+12*s(1548)+4*s(1549)+24*s(1550)+204*s(1551)+20*s(1552)+16*s(1553)+266*s(1554)+681*s(1555)+1*s(1556)+1*s(1557)+2*s(1558)+6*s(1559)+2*s(1560)+2*s(1561)+78*s(1562)+230*s(1563)+2*s(1564)+2*s(1565)+6*s(1566)+2*s(1567)+12*s(1568)+102*s(1569)+10*s(1570)+18*s(1571)+32*s(1572)+8*s(1573)+30*s(1574)+24*s(1575)+20*s(1576)+62*s(1577)+14*s(1578)+178*s(1579)+4*s(1580)+70*s(1581)+32*s(1582)+56*s(1583)+30*s(1584)+24*s(1585)+4*s(1586)+4*s(1587)+12*s(1588)+4*s(1589)+24*s(1590)+204*s(1591)+20*s(1592)+16*s(1593)+4*s(1594)+188*s(1595)+451*s(1596)+1*s(1597)+1*s(1598)+2*s(1599)+6*s(1600)+2*s(1601)+2*s(1602)+78*s(1603)+230*s(1604)+2*s(1605)+2*s(1606)+6*s(1607)+2*s(1608)+12*s(1609)+102*s(1610)+10*s(1611)+18*s(1612)+32*s(1613)+8*s(1614)+30*s(1615)+24*s(1616)+20*s(1617)+44*s(1618)+14*s(1619)+146*s(1620)+4*s(1621)+40*s(1622)+32*s(1623)+32*s(1624)+30*s(1625)+24*s(1626)+2*s(1627)+2*s(1628)+6*s(1629)+2*s(1630)+12*s(1631)+102*s(1632)+10*s(1633)+8*s(1634)+2*s(1636)+0
  Such that:aux(238) =< 2
aux(239) =< 3
aux(242) =< 4/5
aux(243) =< 6/5
aux(370) =< 1
it([93]) =< aux(370)
s(1689) =< aux(370)* (18/5)
s(1713) =< aux(370)* (12/5)
s(1704) =< aux(370)* (6/5)
s(1728) =< aux(370)* (4/5)
s(1703) =< aux(370)*6
s(1727) =< aux(370)*4
s(1514) =< s(1727)
s(1515) =< s(1728)
s(1001) =< aux(238)+aux(242)+aux(242)
s(1725) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1516) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(370)
s(1723) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(370)
s(1517) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1726) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1518) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1725) =< s(1726)*s(1008)
s(1712) =< s(1514)*s(1009)
s(1518) =< s(1514)*s(1010)
s(1714) =< s(1514)*s(1011)
s(1711) =< s(1515)*s(1011)
s(1710) =< s(1514)*s(1012)
s(1709) =< s(1515)*s(1009)
s(1708) =< s(1515)*s(1013)
s(1707) =< s(1515)*s(1010)
s(1706) =< s(1515)*s(1014)
s(1705) =< s(1515)*s(1012)
s(1519) =< s(1515)*s(1011)
s(1520) =< s(1515)*s(1012)
s(1521) =< s(1515)*s(1013)
s(1719) =< s(1725)* (3/5)
s(1724) =< s(1725)* (1/5)
s(1522) =< s(1725)
s(1523) =< s(1724)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1524) =< s(1522)+s(1523)*3+s(1523)*2+s(1523)+s(1523)*2+s(1523)+s(1523)+s(1523)*2+s(1523)+s(1523)*3+s(1523)*2+s(1523)+s(1523)+s(1723)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1525) =< s(1523)*s(1032)
s(1722) =< s(1522)*s(1034)
s(1720) =< s(1523)*s(1035)
s(1721) =< s(1523)*s(1034)
s(1718) =< s(1523)*s(1036)
s(1717) =< s(1523)*s(1037)
s(1716) =< s(1523)*s(1038)
s(1715) =< s(1523)*s(1039)
s(1526) =< s(1523)*s(1034)
s(1527) =< s(1523)*s(1039)
s(1528) =< s(1722)
s(1529) =< s(1721)
s(1530) =< s(1720)
s(1531) =< s(1719)
s(1532) =< s(1718)
s(1533) =< s(1717)
s(1534) =< s(1716)
s(1535) =< s(1715)
s(1536) =< s(1714)
s(1537) =< s(1713)
s(1538) =< s(1712)
s(1539) =< s(1711)
s(1540) =< s(1710)
s(1541) =< s(1709)
s(1542) =< s(1708)
s(1543) =< s(1707)
s(1544) =< s(1706)
s(1545) =< s(1705)
s(1554) =< s(1703)
s(1555) =< s(1704)
s(1112) =< aux(239)+aux(243)+aux(243)
s(1701) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1556) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(370)
s(1699) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(370)
s(1557) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1702) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1558) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1701) =< s(1702)*s(1119)
s(1688) =< s(1554)*s(1120)
s(1558) =< s(1554)*s(1121)
s(1690) =< s(1554)*s(1122)
s(1687) =< s(1555)*s(1122)
s(1686) =< s(1554)*s(1123)
s(1685) =< s(1555)*s(1120)
s(1684) =< s(1555)*s(1124)
s(1683) =< s(1555)*s(1121)
s(1682) =< s(1555)*s(1125)
s(1681) =< s(1555)*s(1123)
s(1559) =< s(1555)*s(1122)
s(1560) =< s(1555)*s(1123)
s(1561) =< s(1555)*s(1124)
s(1695) =< s(1701)* (3/5)
s(1700) =< s(1701)* (1/5)
s(1562) =< s(1701)
s(1563) =< s(1700)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1564) =< s(1562)+s(1563)*3+s(1563)*2+s(1563)+s(1563)*2+s(1563)+s(1563)+s(1563)*2+s(1563)+s(1563)*3+s(1563)*2+s(1563)+s(1563)+s(1699)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1565) =< s(1563)*s(1143)
s(1698) =< s(1562)*s(1145)
s(1696) =< s(1563)*s(1146)
s(1697) =< s(1563)*s(1145)
s(1694) =< s(1563)*s(1147)
s(1693) =< s(1563)*s(1148)
s(1692) =< s(1563)*s(1149)
s(1691) =< s(1563)*s(1150)
s(1566) =< s(1563)*s(1145)
s(1567) =< s(1563)*s(1150)
s(1568) =< s(1698)
s(1569) =< s(1697)
s(1570) =< s(1696)
s(1571) =< s(1695)
s(1572) =< s(1694)
s(1573) =< s(1693)
s(1574) =< s(1692)
s(1575) =< s(1691)
s(1576) =< s(1690)
s(1577) =< s(1689)
s(1578) =< s(1688)
s(1579) =< s(1687)
s(1580) =< s(1686)
s(1581) =< s(1685)
s(1582) =< s(1684)
s(1583) =< s(1683)
s(1584) =< s(1682)
s(1585) =< s(1681)
s(1546) =< s(1514)+s(1515)*3+s(1515)*2+s(1515)+s(1515)*2+s(1515)+s(1515)+s(1515)*2+s(1515)+s(1515)*3+s(1515)*2+s(1515)+s(1515)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1547) =< s(1515)*s(1001)
s(1650) =< s(1514)*s(1079)
s(1648) =< s(1515)*s(1080)
s(1649) =< s(1515)*s(1079)
s(1647) =< s(1515)*s(1082)
s(1548) =< s(1515)*s(1079)
s(1549) =< s(1515)*s(1010)
s(1550) =< s(1650)
s(1551) =< s(1649)
s(1552) =< s(1648)
s(1553) =< s(1647)
s(1586) =< s(1554)+s(1555)*3+s(1555)*2+s(1555)+s(1555)*2+s(1555)+s(1555)+s(1555)*2+s(1555)+s(1555)*3+s(1555)*2+s(1555)+s(1555)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1587) =< s(1555)*s(1112)
s(1646) =< s(1554)*s(1190)
s(1644) =< s(1555)*s(1191)
s(1645) =< s(1555)*s(1190)
s(1643) =< s(1555)*s(1193)
s(1588) =< s(1555)*s(1190)
s(1589) =< s(1555)*s(1121)
s(1590) =< s(1646)
s(1591) =< s(1645)
s(1592) =< s(1644)
s(1593) =< s(1643)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
161*it(95)+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+0
#### Cost of loops [95,99,100,101,105,106,107] 

 * loop 95:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
4*s(620)+13
  Such that:s(619) =< V3'
s(620) =< s(619)

 * loop 99:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
20*s(642)+12*s(641)+2*s(638)+13
  Such that:s(638) =< 4
s(639) =< 1
s(640) =< V3'
s(641) =< s(639)
s(642) =< s(640)

 * loop 100:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
59
 * loop 101:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
24*s(673)+12*s(672)+12*s(674)+9
  Such that:s(669) =< V3'
s(670) =< 1
s(671) =< 2
s(672) =< s(669)
s(673) =< s(670)
s(674) =< s(671)

 * loop 105:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
2*s(678)+13
  Such that:s(678) =< 4

 * loop 106:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
41
 * loop 107:isNatIList(V3,Out) -> [isNatIList(V3',Out')] 
12*s(722)+12*s(721)+12*s(720)+16*s(719)+11
  Such that:s(715) =< V3
s(716) =< 1
s(717) =< 2
s(718) =< V3'
s(719) =< s(718)
s(720) =< s(716)
s(721) =< s(717)
s(722) =< s(715)

#### Cost of phase [95,99,100,101,105,106,107]:isNatIList(V3,Out) -> [] 
409*it(95)+5*it([92])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+16*s(2263)+376*s(2264)+902*s(2265)+2*s(2266)+2*s(2267)+4*s(2268)+12*s(2269)+4*s(2270)+4*s(2271)+156*s(2272)+460*s(2273)+4*s(2274)+4*s(2275)+12*s(2276)+4*s(2277)+24*s(2278)+204*s(2279)+20*s(2280)+36*s(2281)+64*s(2282)+16*s(2283)+60*s(2284)+48*s(2285)+40*s(2286)+88*s(2287)+28*s(2288)+292*s(2289)+8*s(2290)+80*s(2291)+64*s(2292)+64*s(2293)+60*s(2294)+48*s(2295)+2*s(2297)+4*s(2298)+12*s(2299)+4*s(2300)+24*s(2301)+204*s(2302)+20*s(2303)+16*s(2304)+188*s(2305)+451*s(2306)+1*s(2307)+1*s(2308)+2*s(2309)+6*s(2310)+2*s(2311)+2*s(2312)+78*s(2313)+230*s(2314)+2*s(2315)+2*s(2316)+6*s(2317)+2*s(2318)+12*s(2319)+102*s(2320)+10*s(2321)+18*s(2322)+32*s(2323)+8*s(2324)+30*s(2325)+24*s(2326)+20*s(2327)+44*s(2328)+14*s(2329)+146*s(2330)+4*s(2331)+40*s(2332)+32*s(2333)+32*s(2334)+30*s(2335)+24*s(2336)+2*s(2337)+2*s(2338)+6*s(2339)+2*s(2340)+12*s(2341)+102*s(2342)+10*s(2343)+8*s(2344)+188*s(2345)+451*s(2346)+1*s(2347)+1*s(2348)+2*s(2349)+6*s(2350)+2*s(2351)+2*s(2352)+78*s(2353)+230*s(2354)+2*s(2355)+2*s(2356)+6*s(2357)+2*s(2358)+12*s(2359)+102*s(2360)+10*s(2361)+18*s(2362)+32*s(2363)+8*s(2364)+30*s(2365)+24*s(2366)+20*s(2367)+44*s(2368)+14*s(2369)+146*s(2370)+4*s(2371)+40*s(2372)+32*s(2373)+32*s(2374)+30*s(2375)+24*s(2376)+2*s(2377)+2*s(2378)+6*s(2379)+2*s(2380)+12*s(2381)+102*s(2382)+10*s(2383)+8*s(2384)+2*s(2385)+0
  Such that:aux(378) =< 2
aux(379) =< 3
aux(382) =< 4/5
aux(383) =< 6/5
aux(422) =< 1
it([92]) =< aux(422)
s(2402) =< aux(422)* (18/5)
s(2427) =< aux(422)* (12/5)
s(2418) =< aux(422)* (6/5)
s(2442) =< aux(422)* (4/5)
s(2416) =< aux(422)*6
s(2441) =< aux(422)*4
s(2305) =< s(2441)
s(2306) =< s(2442)
s(1935) =< aux(378)+aux(382)+aux(382)
s(2439) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2307) =< s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+aux(422)
s(2437) =< s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+aux(422)
s(2308) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2440) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2309) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(1942) =< s(1935)*2
s(1943) =< s(1935)-1
s(1944) =< s(1935)+1
s(1945) =< s(1935)
s(1946) =< s(1935)-2
s(1947) =< s(1935)-3
s(1948) =< s(1935)-4
s(1949) =< s(1935)* (2/5)
s(2439) =< s(2440)*s(1942)
s(2426) =< s(2305)*s(1943)
s(2309) =< s(2305)*s(1944)
s(2428) =< s(2305)*s(1945)
s(2425) =< s(2306)*s(1945)
s(2424) =< s(2305)*s(1946)
s(2423) =< s(2306)*s(1943)
s(2422) =< s(2306)*s(1947)
s(2421) =< s(2306)*s(1944)
s(2420) =< s(2306)*s(1948)
s(2419) =< s(2306)*s(1946)
s(2310) =< s(2306)*s(1945)
s(2311) =< s(2306)*s(1946)
s(2312) =< s(2306)*s(1947)
s(2433) =< s(2439)* (3/5)
s(2438) =< s(2439)* (1/5)
s(2313) =< s(2439)
s(2314) =< s(2438)
s(1966) =< s(1935)+s(1949)+s(1949)
s(2315) =< s(2313)+s(2314)*3+s(2314)*2+s(2314)+s(2314)*2+s(2314)+s(2314)+s(2314)*2+s(2314)+s(2314)*3+s(2314)*2+s(2314)+s(2314)+s(2437)
s(1968) =< s(1966)+3
s(1969) =< s(1966)+2
s(1970) =< s(1966)
s(1971) =< s(1966)+4
s(1972) =< s(1966)-1
s(1973) =< s(1966)+1
s(2316) =< s(2314)*s(1966)
s(2436) =< s(2313)*s(1968)
s(2434) =< s(2314)*s(1969)
s(2435) =< s(2314)*s(1968)
s(2432) =< s(2314)*s(1970)
s(2431) =< s(2314)*s(1971)
s(2430) =< s(2314)*s(1972)
s(2429) =< s(2314)*s(1973)
s(2317) =< s(2314)*s(1968)
s(2318) =< s(2314)*s(1973)
s(2319) =< s(2436)
s(2320) =< s(2435)
s(2321) =< s(2434)
s(2322) =< s(2433)
s(2323) =< s(2432)
s(2324) =< s(2431)
s(2325) =< s(2430)
s(2326) =< s(2429)
s(2327) =< s(2428)
s(2328) =< s(2427)
s(2329) =< s(2426)
s(2330) =< s(2425)
s(2331) =< s(2424)
s(2332) =< s(2423)
s(2333) =< s(2422)
s(2334) =< s(2421)
s(2335) =< s(2420)
s(2336) =< s(2419)
s(2345) =< s(2416)
s(2346) =< s(2418)
s(2046) =< aux(379)+aux(383)+aux(383)
s(2414) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2347) =< s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+aux(422)
s(2412) =< s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+aux(422)
s(2348) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2415) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2349) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2053) =< s(2046)*2
s(2054) =< s(2046)-1
s(2055) =< s(2046)+1
s(2056) =< s(2046)
s(2057) =< s(2046)-2
s(2058) =< s(2046)-3
s(2059) =< s(2046)-4
s(2060) =< s(2046)* (2/5)
s(2414) =< s(2415)*s(2053)
s(2401) =< s(2345)*s(2054)
s(2349) =< s(2345)*s(2055)
s(2403) =< s(2345)*s(2056)
s(2400) =< s(2346)*s(2056)
s(2399) =< s(2345)*s(2057)
s(2398) =< s(2346)*s(2054)
s(2397) =< s(2346)*s(2058)
s(2396) =< s(2346)*s(2055)
s(2395) =< s(2346)*s(2059)
s(2394) =< s(2346)*s(2057)
s(2350) =< s(2346)*s(2056)
s(2351) =< s(2346)*s(2057)
s(2352) =< s(2346)*s(2058)
s(2408) =< s(2414)* (3/5)
s(2413) =< s(2414)* (1/5)
s(2353) =< s(2414)
s(2354) =< s(2413)
s(2077) =< s(2046)+s(2060)+s(2060)
s(2355) =< s(2353)+s(2354)*3+s(2354)*2+s(2354)+s(2354)*2+s(2354)+s(2354)+s(2354)*2+s(2354)+s(2354)*3+s(2354)*2+s(2354)+s(2354)+s(2412)
s(2079) =< s(2077)+3
s(2080) =< s(2077)+2
s(2081) =< s(2077)
s(2082) =< s(2077)+4
s(2083) =< s(2077)-1
s(2084) =< s(2077)+1
s(2356) =< s(2354)*s(2077)
s(2411) =< s(2353)*s(2079)
s(2409) =< s(2354)*s(2080)
s(2410) =< s(2354)*s(2079)
s(2407) =< s(2354)*s(2081)
s(2406) =< s(2354)*s(2082)
s(2405) =< s(2354)*s(2083)
s(2404) =< s(2354)*s(2084)
s(2357) =< s(2354)*s(2079)
s(2358) =< s(2354)*s(2084)
s(2359) =< s(2411)
s(2360) =< s(2410)
s(2361) =< s(2409)
s(2362) =< s(2408)
s(2363) =< s(2407)
s(2364) =< s(2406)
s(2365) =< s(2405)
s(2366) =< s(2404)
s(2367) =< s(2403)
s(2368) =< s(2402)
s(2369) =< s(2401)
s(2370) =< s(2400)
s(2371) =< s(2399)
s(2372) =< s(2398)
s(2373) =< s(2397)
s(2374) =< s(2396)
s(2375) =< s(2395)
s(2376) =< s(2394)
s(2337) =< s(2305)+s(2306)*3+s(2306)*2+s(2306)+s(2306)*2+s(2306)+s(2306)+s(2306)*2+s(2306)+s(2306)*3+s(2306)*2+s(2306)+s(2306)
s(2013) =< s(1935)+3
s(2014) =< s(1935)+2
s(2016) =< s(1935)+4
s(2338) =< s(2306)*s(1935)
s(2393) =< s(2305)*s(2013)
s(2391) =< s(2306)*s(2014)
s(2392) =< s(2306)*s(2013)
s(2390) =< s(2306)*s(2016)
s(2339) =< s(2306)*s(2013)
s(2340) =< s(2306)*s(1944)
s(2341) =< s(2393)
s(2342) =< s(2392)
s(2343) =< s(2391)
s(2344) =< s(2390)
s(2377) =< s(2345)+s(2346)*3+s(2346)*2+s(2346)+s(2346)*2+s(2346)+s(2346)+s(2346)*2+s(2346)+s(2346)*3+s(2346)*2+s(2346)+s(2346)
s(2124) =< s(2046)+3
s(2125) =< s(2046)+2
s(2127) =< s(2046)+4
s(2378) =< s(2346)*s(2046)
s(2389) =< s(2345)*s(2124)
s(2387) =< s(2346)*s(2125)
s(2388) =< s(2346)*s(2124)
s(2386) =< s(2346)*s(2127)
s(2379) =< s(2346)*s(2124)
s(2380) =< s(2346)*s(2055)
s(2381) =< s(2389)
s(2382) =< s(2388)
s(2383) =< s(2387)
s(2384) =< s(2386)

#### Cost of chains of isNatIList(V3,Out):
* Chain [[95,99,100,101,105,106,107]]...: 299*it(95)+0
  with precondition: [V3>=1,Out=0] 

* Chain [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104]]...: 605*it(94)+0
  with precondition: [Out=0,V3>=2] 

* Chain [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],115]: 605*it(94)+5
  with precondition: [Out=0,V3>=2] 

* Chain [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],113]: 605*it(94)+6*s(878)+5
  Such that:s(877) =< 1
s(878) =< s(877)

  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],111]: 605*it(94)+1
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],[94,96,97,98,102,103,104],93]...: 5531*it(94)+6*it([93])+266*s(1514)+681*s(1515)+1*s(1516)+1*s(1517)+2*s(1518)+6*s(1519)+2*s(1520)+2*s(1521)+78*s(1522)+230*s(1523)+2*s(1524)+2*s(1525)+6*s(1526)+2*s(1527)+12*s(1528)+102*s(1529)+10*s(1530)+18*s(1531)+32*s(1532)+8*s(1533)+30*s(1534)+24*s(1535)+20*s(1536)+62*s(1537)+14*s(1538)+178*s(1539)+4*s(1540)+70*s(1541)+32*s(1542)+56*s(1543)+30*s(1544)+24*s(1545)+4*s(1546)+4*s(1547)+12*s(1548)+4*s(1549)+24*s(1550)+204*s(1551)+20*s(1552)+16*s(1553)+266*s(1554)+681*s(1555)+1*s(1556)+1*s(1557)+2*s(1558)+6*s(1559)+2*s(1560)+2*s(1561)+78*s(1562)+230*s(1563)+2*s(1564)+2*s(1565)+6*s(1566)+2*s(1567)+12*s(1568)+102*s(1569)+10*s(1570)+18*s(1571)+32*s(1572)+8*s(1573)+30*s(1574)+24*s(1575)+20*s(1576)+62*s(1577)+14*s(1578)+178*s(1579)+4*s(1580)+70*s(1581)+32*s(1582)+56*s(1583)+30*s(1584)+24*s(1585)+4*s(1586)+4*s(1587)+12*s(1588)+4*s(1589)+24*s(1590)+204*s(1591)+20*s(1592)+16*s(1593)+0
  Such that:aux(292) =< 1
aux(238) =< 2
aux(239) =< 3
aux(242) =< 4/5
aux(243) =< 6/5
it([93]) =< aux(292)
s(1689) =< aux(292)* (18/5)
s(1713) =< aux(292)* (12/5)
s(1704) =< aux(292)* (6/5)
s(1728) =< aux(292)* (4/5)
s(1703) =< aux(292)*6
s(1727) =< aux(292)*4
s(1514) =< s(1727)
s(1515) =< s(1728)
s(1001) =< aux(238)+aux(242)+aux(242)
s(1725) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1516) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1723) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1517) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1726) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1518) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1725) =< s(1726)*s(1008)
s(1712) =< s(1514)*s(1009)
s(1518) =< s(1514)*s(1010)
s(1714) =< s(1514)*s(1011)
s(1711) =< s(1515)*s(1011)
s(1710) =< s(1514)*s(1012)
s(1709) =< s(1515)*s(1009)
s(1708) =< s(1515)*s(1013)
s(1707) =< s(1515)*s(1010)
s(1706) =< s(1515)*s(1014)
s(1705) =< s(1515)*s(1012)
s(1519) =< s(1515)*s(1011)
s(1520) =< s(1515)*s(1012)
s(1521) =< s(1515)*s(1013)
s(1719) =< s(1725)* (3/5)
s(1724) =< s(1725)* (1/5)
s(1522) =< s(1725)
s(1523) =< s(1724)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1524) =< s(1522)+s(1523)*3+s(1523)*2+s(1523)+s(1523)*2+s(1523)+s(1523)+s(1523)*2+s(1523)+s(1523)*3+s(1523)*2+s(1523)+s(1523)+s(1723)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1525) =< s(1523)*s(1032)
s(1722) =< s(1522)*s(1034)
s(1720) =< s(1523)*s(1035)
s(1721) =< s(1523)*s(1034)
s(1718) =< s(1523)*s(1036)
s(1717) =< s(1523)*s(1037)
s(1716) =< s(1523)*s(1038)
s(1715) =< s(1523)*s(1039)
s(1526) =< s(1523)*s(1034)
s(1527) =< s(1523)*s(1039)
s(1528) =< s(1722)
s(1529) =< s(1721)
s(1530) =< s(1720)
s(1531) =< s(1719)
s(1532) =< s(1718)
s(1533) =< s(1717)
s(1534) =< s(1716)
s(1535) =< s(1715)
s(1536) =< s(1714)
s(1537) =< s(1713)
s(1538) =< s(1712)
s(1539) =< s(1711)
s(1540) =< s(1710)
s(1541) =< s(1709)
s(1542) =< s(1708)
s(1543) =< s(1707)
s(1544) =< s(1706)
s(1545) =< s(1705)
s(1554) =< s(1703)
s(1555) =< s(1704)
s(1112) =< aux(239)+aux(243)+aux(243)
s(1701) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1556) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1699) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1557) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1702) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1558) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1701) =< s(1702)*s(1119)
s(1688) =< s(1554)*s(1120)
s(1558) =< s(1554)*s(1121)
s(1690) =< s(1554)*s(1122)
s(1687) =< s(1555)*s(1122)
s(1686) =< s(1554)*s(1123)
s(1685) =< s(1555)*s(1120)
s(1684) =< s(1555)*s(1124)
s(1683) =< s(1555)*s(1121)
s(1682) =< s(1555)*s(1125)
s(1681) =< s(1555)*s(1123)
s(1559) =< s(1555)*s(1122)
s(1560) =< s(1555)*s(1123)
s(1561) =< s(1555)*s(1124)
s(1695) =< s(1701)* (3/5)
s(1700) =< s(1701)* (1/5)
s(1562) =< s(1701)
s(1563) =< s(1700)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1564) =< s(1562)+s(1563)*3+s(1563)*2+s(1563)+s(1563)*2+s(1563)+s(1563)+s(1563)*2+s(1563)+s(1563)*3+s(1563)*2+s(1563)+s(1563)+s(1699)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1565) =< s(1563)*s(1143)
s(1698) =< s(1562)*s(1145)
s(1696) =< s(1563)*s(1146)
s(1697) =< s(1563)*s(1145)
s(1694) =< s(1563)*s(1147)
s(1693) =< s(1563)*s(1148)
s(1692) =< s(1563)*s(1149)
s(1691) =< s(1563)*s(1150)
s(1566) =< s(1563)*s(1145)
s(1567) =< s(1563)*s(1150)
s(1568) =< s(1698)
s(1569) =< s(1697)
s(1570) =< s(1696)
s(1571) =< s(1695)
s(1572) =< s(1694)
s(1573) =< s(1693)
s(1574) =< s(1692)
s(1575) =< s(1691)
s(1576) =< s(1690)
s(1577) =< s(1689)
s(1578) =< s(1688)
s(1579) =< s(1687)
s(1580) =< s(1686)
s(1581) =< s(1685)
s(1582) =< s(1684)
s(1583) =< s(1683)
s(1584) =< s(1682)
s(1585) =< s(1681)
s(1546) =< s(1514)+s(1515)*3+s(1515)*2+s(1515)+s(1515)*2+s(1515)+s(1515)+s(1515)*2+s(1515)+s(1515)*3+s(1515)*2+s(1515)+s(1515)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1547) =< s(1515)*s(1001)
s(1650) =< s(1514)*s(1079)
s(1648) =< s(1515)*s(1080)
s(1649) =< s(1515)*s(1079)
s(1647) =< s(1515)*s(1082)
s(1548) =< s(1515)*s(1079)
s(1549) =< s(1515)*s(1010)
s(1550) =< s(1650)
s(1551) =< s(1649)
s(1552) =< s(1648)
s(1553) =< s(1647)
s(1586) =< s(1554)+s(1555)*3+s(1555)*2+s(1555)+s(1555)*2+s(1555)+s(1555)+s(1555)*2+s(1555)+s(1555)*3+s(1555)*2+s(1555)+s(1555)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1587) =< s(1555)*s(1112)
s(1646) =< s(1554)*s(1190)
s(1644) =< s(1555)*s(1191)
s(1645) =< s(1555)*s(1190)
s(1643) =< s(1555)*s(1193)
s(1588) =< s(1555)*s(1190)
s(1589) =< s(1555)*s(1121)
s(1590) =< s(1646)
s(1591) =< s(1645)
s(1592) =< s(1644)
s(1593) =< s(1643)

  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],116]: 161*it(95)+21*it([116])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+82*s(1797)+6*s(1799)+0
  Such that:aux(328) =< 1
it([116]) =< aux(328)

  with precondition: [Out=0,V3>=1] 

* Chain [[95,99,100,101,105,106,107],115]: 299*it(95)+5
  with precondition: [Out=0,V3>=1] 

* Chain [[95,99,100,101,105,106,107],114]: 299*it(95)+6*s(1804)+4
  Such that:s(1803) =< 1
s(1804) =< s(1803)

  with precondition: [Out=0,V3>=2] 

* Chain [[95,99,100,101,105,106,107],113]: 299*it(95)+6*s(878)+5
  Such that:s(877) =< 1
s(878) =< s(877)

  with precondition: [Out=0,V3>=2] 

* Chain [[95,99,100,101,105,106,107],112]: 299*it(95)+5
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],111]: 299*it(95)+1
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],110]: 299*it(95)+8
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],109]: 299*it(95)+20
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],108]: 299*it(95)+9
  with precondition: [Out=0,V3>=3] 

* Chain [[95,99,100,101,105,106,107],93]...: 473*it(95)+6*it([93])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+20*s(1472)+344*s(1473)+911*s(1474)+1*s(1475)+1*s(1476)+2*s(1477)+6*s(1478)+2*s(1479)+2*s(1480)+78*s(1481)+230*s(1482)+2*s(1483)+2*s(1484)+6*s(1485)+2*s(1486)+12*s(1487)+102*s(1488)+10*s(1489)+18*s(1490)+32*s(1491)+8*s(1492)+30*s(1493)+24*s(1494)+20*s(1495)+80*s(1496)+14*s(1497)+210*s(1498)+4*s(1499)+100*s(1500)+32*s(1501)+80*s(1502)+30*s(1503)+24*s(1504)+4*s(1506)+6*s(1507)+18*s(1508)+6*s(1509)+36*s(1510)+306*s(1511)+30*s(1512)+24*s(1513)+266*s(1514)+681*s(1515)+1*s(1516)+1*s(1517)+2*s(1518)+6*s(1519)+2*s(1520)+2*s(1521)+78*s(1522)+230*s(1523)+2*s(1524)+2*s(1525)+6*s(1526)+2*s(1527)+12*s(1528)+102*s(1529)+10*s(1530)+18*s(1531)+32*s(1532)+8*s(1533)+30*s(1534)+24*s(1535)+20*s(1536)+62*s(1537)+14*s(1538)+178*s(1539)+4*s(1540)+70*s(1541)+32*s(1542)+56*s(1543)+30*s(1544)+24*s(1545)+4*s(1546)+4*s(1547)+12*s(1548)+4*s(1549)+24*s(1550)+204*s(1551)+20*s(1552)+16*s(1553)+266*s(1554)+681*s(1555)+1*s(1556)+1*s(1557)+2*s(1558)+6*s(1559)+2*s(1560)+2*s(1561)+78*s(1562)+230*s(1563)+2*s(1564)+2*s(1565)+6*s(1566)+2*s(1567)+12*s(1568)+102*s(1569)+10*s(1570)+18*s(1571)+32*s(1572)+8*s(1573)+30*s(1574)+24*s(1575)+20*s(1576)+62*s(1577)+14*s(1578)+178*s(1579)+4*s(1580)+70*s(1581)+32*s(1582)+56*s(1583)+30*s(1584)+24*s(1585)+4*s(1586)+4*s(1587)+12*s(1588)+4*s(1589)+24*s(1590)+204*s(1591)+20*s(1592)+16*s(1593)+4*s(1594)+188*s(1595)+451*s(1596)+1*s(1597)+1*s(1598)+2*s(1599)+6*s(1600)+2*s(1601)+2*s(1602)+78*s(1603)+230*s(1604)+2*s(1605)+2*s(1606)+6*s(1607)+2*s(1608)+12*s(1609)+102*s(1610)+10*s(1611)+18*s(1612)+32*s(1613)+8*s(1614)+30*s(1615)+24*s(1616)+20*s(1617)+44*s(1618)+14*s(1619)+146*s(1620)+4*s(1621)+40*s(1622)+32*s(1623)+32*s(1624)+30*s(1625)+24*s(1626)+2*s(1627)+2*s(1628)+6*s(1629)+2*s(1630)+12*s(1631)+102*s(1632)+10*s(1633)+8*s(1634)+2*s(1636)+0
  Such that:aux(238) =< 2
aux(239) =< 3
aux(242) =< 4/5
aux(243) =< 6/5
aux(370) =< 1
it([93]) =< aux(370)
s(1689) =< aux(370)* (18/5)
s(1713) =< aux(370)* (12/5)
s(1704) =< aux(370)* (6/5)
s(1728) =< aux(370)* (4/5)
s(1703) =< aux(370)*6
s(1727) =< aux(370)*4
s(1514) =< s(1727)
s(1515) =< s(1728)
s(1001) =< aux(238)+aux(242)+aux(242)
s(1725) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1516) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(370)
s(1723) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(370)
s(1517) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1726) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1518) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1725) =< s(1726)*s(1008)
s(1712) =< s(1514)*s(1009)
s(1518) =< s(1514)*s(1010)
s(1714) =< s(1514)*s(1011)
s(1711) =< s(1515)*s(1011)
s(1710) =< s(1514)*s(1012)
s(1709) =< s(1515)*s(1009)
s(1708) =< s(1515)*s(1013)
s(1707) =< s(1515)*s(1010)
s(1706) =< s(1515)*s(1014)
s(1705) =< s(1515)*s(1012)
s(1519) =< s(1515)*s(1011)
s(1520) =< s(1515)*s(1012)
s(1521) =< s(1515)*s(1013)
s(1719) =< s(1725)* (3/5)
s(1724) =< s(1725)* (1/5)
s(1522) =< s(1725)
s(1523) =< s(1724)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1524) =< s(1522)+s(1523)*3+s(1523)*2+s(1523)+s(1523)*2+s(1523)+s(1523)+s(1523)*2+s(1523)+s(1523)*3+s(1523)*2+s(1523)+s(1523)+s(1723)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1525) =< s(1523)*s(1032)
s(1722) =< s(1522)*s(1034)
s(1720) =< s(1523)*s(1035)
s(1721) =< s(1523)*s(1034)
s(1718) =< s(1523)*s(1036)
s(1717) =< s(1523)*s(1037)
s(1716) =< s(1523)*s(1038)
s(1715) =< s(1523)*s(1039)
s(1526) =< s(1523)*s(1034)
s(1527) =< s(1523)*s(1039)
s(1528) =< s(1722)
s(1529) =< s(1721)
s(1530) =< s(1720)
s(1531) =< s(1719)
s(1532) =< s(1718)
s(1533) =< s(1717)
s(1534) =< s(1716)
s(1535) =< s(1715)
s(1536) =< s(1714)
s(1537) =< s(1713)
s(1538) =< s(1712)
s(1539) =< s(1711)
s(1540) =< s(1710)
s(1541) =< s(1709)
s(1542) =< s(1708)
s(1543) =< s(1707)
s(1544) =< s(1706)
s(1545) =< s(1705)
s(1554) =< s(1703)
s(1555) =< s(1704)
s(1112) =< aux(239)+aux(243)+aux(243)
s(1701) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1556) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(370)
s(1699) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(370)
s(1557) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1702) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1558) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1701) =< s(1702)*s(1119)
s(1688) =< s(1554)*s(1120)
s(1558) =< s(1554)*s(1121)
s(1690) =< s(1554)*s(1122)
s(1687) =< s(1555)*s(1122)
s(1686) =< s(1554)*s(1123)
s(1685) =< s(1555)*s(1120)
s(1684) =< s(1555)*s(1124)
s(1683) =< s(1555)*s(1121)
s(1682) =< s(1555)*s(1125)
s(1681) =< s(1555)*s(1123)
s(1559) =< s(1555)*s(1122)
s(1560) =< s(1555)*s(1123)
s(1561) =< s(1555)*s(1124)
s(1695) =< s(1701)* (3/5)
s(1700) =< s(1701)* (1/5)
s(1562) =< s(1701)
s(1563) =< s(1700)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1564) =< s(1562)+s(1563)*3+s(1563)*2+s(1563)+s(1563)*2+s(1563)+s(1563)+s(1563)*2+s(1563)+s(1563)*3+s(1563)*2+s(1563)+s(1563)+s(1699)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1565) =< s(1563)*s(1143)
s(1698) =< s(1562)*s(1145)
s(1696) =< s(1563)*s(1146)
s(1697) =< s(1563)*s(1145)
s(1694) =< s(1563)*s(1147)
s(1693) =< s(1563)*s(1148)
s(1692) =< s(1563)*s(1149)
s(1691) =< s(1563)*s(1150)
s(1566) =< s(1563)*s(1145)
s(1567) =< s(1563)*s(1150)
s(1568) =< s(1698)
s(1569) =< s(1697)
s(1570) =< s(1696)
s(1571) =< s(1695)
s(1572) =< s(1694)
s(1573) =< s(1693)
s(1574) =< s(1692)
s(1575) =< s(1691)
s(1576) =< s(1690)
s(1577) =< s(1689)
s(1578) =< s(1688)
s(1579) =< s(1687)
s(1580) =< s(1686)
s(1581) =< s(1685)
s(1582) =< s(1684)
s(1583) =< s(1683)
s(1584) =< s(1682)
s(1585) =< s(1681)
s(1546) =< s(1514)+s(1515)*3+s(1515)*2+s(1515)+s(1515)*2+s(1515)+s(1515)+s(1515)*2+s(1515)+s(1515)*3+s(1515)*2+s(1515)+s(1515)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1547) =< s(1515)*s(1001)
s(1650) =< s(1514)*s(1079)
s(1648) =< s(1515)*s(1080)
s(1649) =< s(1515)*s(1079)
s(1647) =< s(1515)*s(1082)
s(1548) =< s(1515)*s(1079)
s(1549) =< s(1515)*s(1010)
s(1550) =< s(1650)
s(1551) =< s(1649)
s(1552) =< s(1648)
s(1553) =< s(1647)
s(1586) =< s(1554)+s(1555)*3+s(1555)*2+s(1555)+s(1555)*2+s(1555)+s(1555)+s(1555)*2+s(1555)+s(1555)*3+s(1555)*2+s(1555)+s(1555)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1587) =< s(1555)*s(1112)
s(1646) =< s(1554)*s(1190)
s(1644) =< s(1555)*s(1191)
s(1645) =< s(1555)*s(1190)
s(1643) =< s(1555)*s(1193)
s(1588) =< s(1555)*s(1190)
s(1589) =< s(1555)*s(1121)
s(1590) =< s(1646)
s(1591) =< s(1645)
s(1592) =< s(1644)
s(1593) =< s(1643)

  with precondition: [Out=0,V3>=2] 

* Chain [[95,99,100,101,105,106,107],92]...: 409*it(95)+5*it([92])+4*s(723)+20*s(725)+12*s(726)+2*s(727)+24*s(730)+12*s(731)+12*s(732)+12*s(737)+12*s(738)+12*s(739)+16*s(740)+16*s(2263)+376*s(2264)+902*s(2265)+2*s(2266)+2*s(2267)+4*s(2268)+12*s(2269)+4*s(2270)+4*s(2271)+156*s(2272)+460*s(2273)+4*s(2274)+4*s(2275)+12*s(2276)+4*s(2277)+24*s(2278)+204*s(2279)+20*s(2280)+36*s(2281)+64*s(2282)+16*s(2283)+60*s(2284)+48*s(2285)+40*s(2286)+88*s(2287)+28*s(2288)+292*s(2289)+8*s(2290)+80*s(2291)+64*s(2292)+64*s(2293)+60*s(2294)+48*s(2295)+2*s(2297)+4*s(2298)+12*s(2299)+4*s(2300)+24*s(2301)+204*s(2302)+20*s(2303)+16*s(2304)+188*s(2305)+451*s(2306)+1*s(2307)+1*s(2308)+2*s(2309)+6*s(2310)+2*s(2311)+2*s(2312)+78*s(2313)+230*s(2314)+2*s(2315)+2*s(2316)+6*s(2317)+2*s(2318)+12*s(2319)+102*s(2320)+10*s(2321)+18*s(2322)+32*s(2323)+8*s(2324)+30*s(2325)+24*s(2326)+20*s(2327)+44*s(2328)+14*s(2329)+146*s(2330)+4*s(2331)+40*s(2332)+32*s(2333)+32*s(2334)+30*s(2335)+24*s(2336)+2*s(2337)+2*s(2338)+6*s(2339)+2*s(2340)+12*s(2341)+102*s(2342)+10*s(2343)+8*s(2344)+188*s(2345)+451*s(2346)+1*s(2347)+1*s(2348)+2*s(2349)+6*s(2350)+2*s(2351)+2*s(2352)+78*s(2353)+230*s(2354)+2*s(2355)+2*s(2356)+6*s(2357)+2*s(2358)+12*s(2359)+102*s(2360)+10*s(2361)+18*s(2362)+32*s(2363)+8*s(2364)+30*s(2365)+24*s(2366)+20*s(2367)+44*s(2368)+14*s(2369)+146*s(2370)+4*s(2371)+40*s(2372)+32*s(2373)+32*s(2374)+30*s(2375)+24*s(2376)+2*s(2377)+2*s(2378)+6*s(2379)+2*s(2380)+12*s(2381)+102*s(2382)+10*s(2383)+8*s(2384)+2*s(2385)+0
  Such that:aux(378) =< 2
aux(379) =< 3
aux(382) =< 4/5
aux(383) =< 6/5
aux(422) =< 1
it([92]) =< aux(422)
s(2402) =< aux(422)* (18/5)
s(2427) =< aux(422)* (12/5)
s(2418) =< aux(422)* (6/5)
s(2442) =< aux(422)* (4/5)
s(2416) =< aux(422)*6
s(2441) =< aux(422)*4
s(2305) =< s(2441)
s(2306) =< s(2442)
s(1935) =< aux(378)+aux(382)+aux(382)
s(2439) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2307) =< s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+aux(422)
s(2437) =< s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+s(2306)+aux(422)
s(2308) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2440) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(2309) =< s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*2+s(2306)*4+s(2306)*2+s(2306)*4+s(2441)
s(1942) =< s(1935)*2
s(1943) =< s(1935)-1
s(1944) =< s(1935)+1
s(1945) =< s(1935)
s(1946) =< s(1935)-2
s(1947) =< s(1935)-3
s(1948) =< s(1935)-4
s(1949) =< s(1935)* (2/5)
s(2439) =< s(2440)*s(1942)
s(2426) =< s(2305)*s(1943)
s(2309) =< s(2305)*s(1944)
s(2428) =< s(2305)*s(1945)
s(2425) =< s(2306)*s(1945)
s(2424) =< s(2305)*s(1946)
s(2423) =< s(2306)*s(1943)
s(2422) =< s(2306)*s(1947)
s(2421) =< s(2306)*s(1944)
s(2420) =< s(2306)*s(1948)
s(2419) =< s(2306)*s(1946)
s(2310) =< s(2306)*s(1945)
s(2311) =< s(2306)*s(1946)
s(2312) =< s(2306)*s(1947)
s(2433) =< s(2439)* (3/5)
s(2438) =< s(2439)* (1/5)
s(2313) =< s(2439)
s(2314) =< s(2438)
s(1966) =< s(1935)+s(1949)+s(1949)
s(2315) =< s(2313)+s(2314)*3+s(2314)*2+s(2314)+s(2314)*2+s(2314)+s(2314)+s(2314)*2+s(2314)+s(2314)*3+s(2314)*2+s(2314)+s(2314)+s(2437)
s(1968) =< s(1966)+3
s(1969) =< s(1966)+2
s(1970) =< s(1966)
s(1971) =< s(1966)+4
s(1972) =< s(1966)-1
s(1973) =< s(1966)+1
s(2316) =< s(2314)*s(1966)
s(2436) =< s(2313)*s(1968)
s(2434) =< s(2314)*s(1969)
s(2435) =< s(2314)*s(1968)
s(2432) =< s(2314)*s(1970)
s(2431) =< s(2314)*s(1971)
s(2430) =< s(2314)*s(1972)
s(2429) =< s(2314)*s(1973)
s(2317) =< s(2314)*s(1968)
s(2318) =< s(2314)*s(1973)
s(2319) =< s(2436)
s(2320) =< s(2435)
s(2321) =< s(2434)
s(2322) =< s(2433)
s(2323) =< s(2432)
s(2324) =< s(2431)
s(2325) =< s(2430)
s(2326) =< s(2429)
s(2327) =< s(2428)
s(2328) =< s(2427)
s(2329) =< s(2426)
s(2330) =< s(2425)
s(2331) =< s(2424)
s(2332) =< s(2423)
s(2333) =< s(2422)
s(2334) =< s(2421)
s(2335) =< s(2420)
s(2336) =< s(2419)
s(2345) =< s(2416)
s(2346) =< s(2418)
s(2046) =< aux(379)+aux(383)+aux(383)
s(2414) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2347) =< s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+aux(422)
s(2412) =< s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+s(2346)+aux(422)
s(2348) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2415) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2349) =< s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*2+s(2346)*4+s(2346)*2+s(2346)*4+s(2416)
s(2053) =< s(2046)*2
s(2054) =< s(2046)-1
s(2055) =< s(2046)+1
s(2056) =< s(2046)
s(2057) =< s(2046)-2
s(2058) =< s(2046)-3
s(2059) =< s(2046)-4
s(2060) =< s(2046)* (2/5)
s(2414) =< s(2415)*s(2053)
s(2401) =< s(2345)*s(2054)
s(2349) =< s(2345)*s(2055)
s(2403) =< s(2345)*s(2056)
s(2400) =< s(2346)*s(2056)
s(2399) =< s(2345)*s(2057)
s(2398) =< s(2346)*s(2054)
s(2397) =< s(2346)*s(2058)
s(2396) =< s(2346)*s(2055)
s(2395) =< s(2346)*s(2059)
s(2394) =< s(2346)*s(2057)
s(2350) =< s(2346)*s(2056)
s(2351) =< s(2346)*s(2057)
s(2352) =< s(2346)*s(2058)
s(2408) =< s(2414)* (3/5)
s(2413) =< s(2414)* (1/5)
s(2353) =< s(2414)
s(2354) =< s(2413)
s(2077) =< s(2046)+s(2060)+s(2060)
s(2355) =< s(2353)+s(2354)*3+s(2354)*2+s(2354)+s(2354)*2+s(2354)+s(2354)+s(2354)*2+s(2354)+s(2354)*3+s(2354)*2+s(2354)+s(2354)+s(2412)
s(2079) =< s(2077)+3
s(2080) =< s(2077)+2
s(2081) =< s(2077)
s(2082) =< s(2077)+4
s(2083) =< s(2077)-1
s(2084) =< s(2077)+1
s(2356) =< s(2354)*s(2077)
s(2411) =< s(2353)*s(2079)
s(2409) =< s(2354)*s(2080)
s(2410) =< s(2354)*s(2079)
s(2407) =< s(2354)*s(2081)
s(2406) =< s(2354)*s(2082)
s(2405) =< s(2354)*s(2083)
s(2404) =< s(2354)*s(2084)
s(2357) =< s(2354)*s(2079)
s(2358) =< s(2354)*s(2084)
s(2359) =< s(2411)
s(2360) =< s(2410)
s(2361) =< s(2409)
s(2362) =< s(2408)
s(2363) =< s(2407)
s(2364) =< s(2406)
s(2365) =< s(2405)
s(2366) =< s(2404)
s(2367) =< s(2403)
s(2368) =< s(2402)
s(2369) =< s(2401)
s(2370) =< s(2400)
s(2371) =< s(2399)
s(2372) =< s(2398)
s(2373) =< s(2397)
s(2374) =< s(2396)
s(2375) =< s(2395)
s(2376) =< s(2394)
s(2337) =< s(2305)+s(2306)*3+s(2306)*2+s(2306)+s(2306)*2+s(2306)+s(2306)+s(2306)*2+s(2306)+s(2306)*3+s(2306)*2+s(2306)+s(2306)
s(2013) =< s(1935)+3
s(2014) =< s(1935)+2
s(2016) =< s(1935)+4
s(2338) =< s(2306)*s(1935)
s(2393) =< s(2305)*s(2013)
s(2391) =< s(2306)*s(2014)
s(2392) =< s(2306)*s(2013)
s(2390) =< s(2306)*s(2016)
s(2339) =< s(2306)*s(2013)
s(2340) =< s(2306)*s(1944)
s(2341) =< s(2393)
s(2342) =< s(2392)
s(2343) =< s(2391)
s(2344) =< s(2390)
s(2377) =< s(2345)+s(2346)*3+s(2346)*2+s(2346)+s(2346)*2+s(2346)+s(2346)+s(2346)*2+s(2346)+s(2346)*3+s(2346)*2+s(2346)+s(2346)
s(2124) =< s(2046)+3
s(2125) =< s(2046)+2
s(2127) =< s(2046)+4
s(2378) =< s(2346)*s(2046)
s(2389) =< s(2345)*s(2124)
s(2387) =< s(2346)*s(2125)
s(2388) =< s(2346)*s(2124)
s(2386) =< s(2346)*s(2127)
s(2379) =< s(2346)*s(2124)
s(2380) =< s(2346)*s(2055)
s(2381) =< s(2389)
s(2382) =< s(2388)
s(2383) =< s(2387)
s(2384) =< s(2386)

  with precondition: [Out=0,V3>=3] 

* Chain [[94,96,97,98,102,103,104]]...: 306*it(94)+0
  with precondition: [V3>=1,Out=1] 

* Chain [[94,96,97,98,102,103,104],115]: 306*it(94)+5
  with precondition: [Out=1,V3>=1] 

* Chain [[94,96,97,98,102,103,104],113]: 306*it(94)+6*s(878)+5
  Such that:s(877) =< 1
s(878) =< s(877)

  with precondition: [Out=1,V3>=2] 

* Chain [[94,96,97,98,102,103,104],111]: 306*it(94)+1
  with precondition: [Out=1,V3>=3] 

* Chain [[94,96,97,98,102,103,104],93]...: 480*it(94)+6*it([93])+4*s(853)+20*s(855)+12*s(856)+2*s(857)+24*s(860)+12*s(861)+12*s(862)+12*s(867)+12*s(868)+12*s(869)+16*s(870)+20*s(1472)+344*s(1473)+911*s(1474)+1*s(1475)+1*s(1476)+2*s(1477)+6*s(1478)+2*s(1479)+2*s(1480)+78*s(1481)+230*s(1482)+2*s(1483)+2*s(1484)+6*s(1485)+2*s(1486)+12*s(1487)+102*s(1488)+10*s(1489)+18*s(1490)+32*s(1491)+8*s(1492)+30*s(1493)+24*s(1494)+20*s(1495)+80*s(1496)+14*s(1497)+210*s(1498)+4*s(1499)+100*s(1500)+32*s(1501)+80*s(1502)+30*s(1503)+24*s(1504)+4*s(1506)+6*s(1507)+18*s(1508)+6*s(1509)+36*s(1510)+306*s(1511)+30*s(1512)+24*s(1513)+266*s(1514)+681*s(1515)+1*s(1516)+1*s(1517)+2*s(1518)+6*s(1519)+2*s(1520)+2*s(1521)+78*s(1522)+230*s(1523)+2*s(1524)+2*s(1525)+6*s(1526)+2*s(1527)+12*s(1528)+102*s(1529)+10*s(1530)+18*s(1531)+32*s(1532)+8*s(1533)+30*s(1534)+24*s(1535)+20*s(1536)+62*s(1537)+14*s(1538)+178*s(1539)+4*s(1540)+70*s(1541)+32*s(1542)+56*s(1543)+30*s(1544)+24*s(1545)+4*s(1546)+4*s(1547)+12*s(1548)+4*s(1549)+24*s(1550)+204*s(1551)+20*s(1552)+16*s(1553)+266*s(1554)+681*s(1555)+1*s(1556)+1*s(1557)+2*s(1558)+6*s(1559)+2*s(1560)+2*s(1561)+78*s(1562)+230*s(1563)+2*s(1564)+2*s(1565)+6*s(1566)+2*s(1567)+12*s(1568)+102*s(1569)+10*s(1570)+18*s(1571)+32*s(1572)+8*s(1573)+30*s(1574)+24*s(1575)+20*s(1576)+62*s(1577)+14*s(1578)+178*s(1579)+4*s(1580)+70*s(1581)+32*s(1582)+56*s(1583)+30*s(1584)+24*s(1585)+4*s(1586)+4*s(1587)+12*s(1588)+4*s(1589)+24*s(1590)+204*s(1591)+20*s(1592)+16*s(1593)+4*s(1594)+188*s(1595)+451*s(1596)+1*s(1597)+1*s(1598)+2*s(1599)+6*s(1600)+2*s(1601)+2*s(1602)+78*s(1603)+230*s(1604)+2*s(1605)+2*s(1606)+6*s(1607)+2*s(1608)+12*s(1609)+102*s(1610)+10*s(1611)+18*s(1612)+32*s(1613)+8*s(1614)+30*s(1615)+24*s(1616)+20*s(1617)+44*s(1618)+14*s(1619)+146*s(1620)+4*s(1621)+40*s(1622)+32*s(1623)+32*s(1624)+30*s(1625)+24*s(1626)+2*s(1627)+2*s(1628)+6*s(1629)+2*s(1630)+12*s(1631)+102*s(1632)+10*s(1633)+8*s(1634)+2*s(1636)+0
  Such that:aux(238) =< 2
aux(239) =< 3
aux(242) =< 4/5
aux(243) =< 6/5
aux(292) =< 1
it([93]) =< aux(292)
s(1689) =< aux(292)* (18/5)
s(1713) =< aux(292)* (12/5)
s(1704) =< aux(292)* (6/5)
s(1728) =< aux(292)* (4/5)
s(1703) =< aux(292)*6
s(1727) =< aux(292)*4
s(1514) =< s(1727)
s(1515) =< s(1728)
s(1001) =< aux(238)+aux(242)+aux(242)
s(1725) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1516) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1723) =< s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+s(1515)+aux(292)
s(1517) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1726) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1518) =< s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*2+s(1515)*4+s(1515)*2+s(1515)*4+s(1727)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1725) =< s(1726)*s(1008)
s(1712) =< s(1514)*s(1009)
s(1518) =< s(1514)*s(1010)
s(1714) =< s(1514)*s(1011)
s(1711) =< s(1515)*s(1011)
s(1710) =< s(1514)*s(1012)
s(1709) =< s(1515)*s(1009)
s(1708) =< s(1515)*s(1013)
s(1707) =< s(1515)*s(1010)
s(1706) =< s(1515)*s(1014)
s(1705) =< s(1515)*s(1012)
s(1519) =< s(1515)*s(1011)
s(1520) =< s(1515)*s(1012)
s(1521) =< s(1515)*s(1013)
s(1719) =< s(1725)* (3/5)
s(1724) =< s(1725)* (1/5)
s(1522) =< s(1725)
s(1523) =< s(1724)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1524) =< s(1522)+s(1523)*3+s(1523)*2+s(1523)+s(1523)*2+s(1523)+s(1523)+s(1523)*2+s(1523)+s(1523)*3+s(1523)*2+s(1523)+s(1523)+s(1723)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1525) =< s(1523)*s(1032)
s(1722) =< s(1522)*s(1034)
s(1720) =< s(1523)*s(1035)
s(1721) =< s(1523)*s(1034)
s(1718) =< s(1523)*s(1036)
s(1717) =< s(1523)*s(1037)
s(1716) =< s(1523)*s(1038)
s(1715) =< s(1523)*s(1039)
s(1526) =< s(1523)*s(1034)
s(1527) =< s(1523)*s(1039)
s(1528) =< s(1722)
s(1529) =< s(1721)
s(1530) =< s(1720)
s(1531) =< s(1719)
s(1532) =< s(1718)
s(1533) =< s(1717)
s(1534) =< s(1716)
s(1535) =< s(1715)
s(1536) =< s(1714)
s(1537) =< s(1713)
s(1538) =< s(1712)
s(1539) =< s(1711)
s(1540) =< s(1710)
s(1541) =< s(1709)
s(1542) =< s(1708)
s(1543) =< s(1707)
s(1544) =< s(1706)
s(1545) =< s(1705)
s(1554) =< s(1703)
s(1555) =< s(1704)
s(1112) =< aux(239)+aux(243)+aux(243)
s(1701) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1556) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1699) =< s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+s(1555)+aux(292)
s(1557) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1702) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1558) =< s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*2+s(1555)*4+s(1555)*2+s(1555)*4+s(1703)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1701) =< s(1702)*s(1119)
s(1688) =< s(1554)*s(1120)
s(1558) =< s(1554)*s(1121)
s(1690) =< s(1554)*s(1122)
s(1687) =< s(1555)*s(1122)
s(1686) =< s(1554)*s(1123)
s(1685) =< s(1555)*s(1120)
s(1684) =< s(1555)*s(1124)
s(1683) =< s(1555)*s(1121)
s(1682) =< s(1555)*s(1125)
s(1681) =< s(1555)*s(1123)
s(1559) =< s(1555)*s(1122)
s(1560) =< s(1555)*s(1123)
s(1561) =< s(1555)*s(1124)
s(1695) =< s(1701)* (3/5)
s(1700) =< s(1701)* (1/5)
s(1562) =< s(1701)
s(1563) =< s(1700)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1564) =< s(1562)+s(1563)*3+s(1563)*2+s(1563)+s(1563)*2+s(1563)+s(1563)+s(1563)*2+s(1563)+s(1563)*3+s(1563)*2+s(1563)+s(1563)+s(1699)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1565) =< s(1563)*s(1143)
s(1698) =< s(1562)*s(1145)
s(1696) =< s(1563)*s(1146)
s(1697) =< s(1563)*s(1145)
s(1694) =< s(1563)*s(1147)
s(1693) =< s(1563)*s(1148)
s(1692) =< s(1563)*s(1149)
s(1691) =< s(1563)*s(1150)
s(1566) =< s(1563)*s(1145)
s(1567) =< s(1563)*s(1150)
s(1568) =< s(1698)
s(1569) =< s(1697)
s(1570) =< s(1696)
s(1571) =< s(1695)
s(1572) =< s(1694)
s(1573) =< s(1693)
s(1574) =< s(1692)
s(1575) =< s(1691)
s(1576) =< s(1690)
s(1577) =< s(1689)
s(1578) =< s(1688)
s(1579) =< s(1687)
s(1580) =< s(1686)
s(1581) =< s(1685)
s(1582) =< s(1684)
s(1583) =< s(1683)
s(1584) =< s(1682)
s(1585) =< s(1681)
s(1546) =< s(1514)+s(1515)*3+s(1515)*2+s(1515)+s(1515)*2+s(1515)+s(1515)+s(1515)*2+s(1515)+s(1515)*3+s(1515)*2+s(1515)+s(1515)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1547) =< s(1515)*s(1001)
s(1650) =< s(1514)*s(1079)
s(1648) =< s(1515)*s(1080)
s(1649) =< s(1515)*s(1079)
s(1647) =< s(1515)*s(1082)
s(1548) =< s(1515)*s(1079)
s(1549) =< s(1515)*s(1010)
s(1550) =< s(1650)
s(1551) =< s(1649)
s(1552) =< s(1648)
s(1553) =< s(1647)
s(1586) =< s(1554)+s(1555)*3+s(1555)*2+s(1555)+s(1555)*2+s(1555)+s(1555)+s(1555)*2+s(1555)+s(1555)*3+s(1555)*2+s(1555)+s(1555)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1587) =< s(1555)*s(1112)
s(1646) =< s(1554)*s(1190)
s(1644) =< s(1555)*s(1191)
s(1645) =< s(1555)*s(1190)
s(1643) =< s(1555)*s(1193)
s(1588) =< s(1555)*s(1190)
s(1589) =< s(1555)*s(1121)
s(1590) =< s(1646)
s(1591) =< s(1645)
s(1592) =< s(1644)
s(1593) =< s(1643)

  with precondition: [Out=1,V3>=2] 

* Chain [116]: 82*s(1757)+12*s(1762)+6*s(1790)+9
  Such that:aux(299) =< 1
aux(300) =< V3
aux(301) =< V3+1
s(1757) =< aux(300)
s(1790) =< aux(301)
s(1762) =< aux(299)

  with precondition: [Out=0,V3>=0] 

* Chain [115]: 5
  with precondition: [V3=0,Out=1] 

* Chain [114]: 6*s(1804)+4
  Such that:s(1803) =< 1
s(1804) =< s(1803)

  with precondition: [V3=1,Out=0] 

* Chain [113]: 6*s(878)+5
  Such that:s(877) =< 1
s(878) =< s(877)

  with precondition: [V3=1,Out=1] 

* Chain [112]: 5
  with precondition: [V3=2,Out=0] 

* Chain [111]: 1
  with precondition: [V3=2,Out=1] 

* Chain [110]: 8
  with precondition: [V3=3,Out=0] 

* Chain [109]: 20
  with precondition: [V3=4,Out=0] 

* Chain [108]: 9
  with precondition: [V3=5,Out=0] 

* Chain [93]...: 20*s(880)+344*s(886)+911*s(887)+1*s(890)+1*s(892)+2*s(894)+6*s(912)+2*s(913)+2*s(914)+78*s(917)+230*s(918)+2*s(920)+2*s(927)+6*s(935)+2*s(936)+12*s(937)+102*s(938)+10*s(939)+18*s(940)+32*s(941)+8*s(942)+30*s(943)+24*s(944)+20*s(945)+80*s(946)+14*s(947)+210*s(948)+4*s(949)+100*s(950)+32*s(951)+80*s(952)+30*s(953)+24*s(954)+312*s(955)+2*s(967)+6*s(974)+18*s(982)+6*s(983)+36*s(984)+306*s(985)+30*s(986)+24*s(989)+266*s(999)+681*s(1000)+1*s(1003)+1*s(1005)+2*s(1007)+6*s(1025)+2*s(1026)+2*s(1027)+78*s(1030)+230*s(1031)+2*s(1033)+2*s(1040)+6*s(1048)+2*s(1049)+12*s(1050)+102*s(1051)+10*s(1052)+18*s(1053)+32*s(1054)+8*s(1055)+30*s(1056)+24*s(1057)+20*s(1058)+62*s(1059)+14*s(1060)+178*s(1061)+4*s(1062)+70*s(1063)+32*s(1064)+56*s(1065)+30*s(1066)+24*s(1067)+4*s(1078)+4*s(1085)+12*s(1093)+4*s(1094)+24*s(1095)+204*s(1096)+20*s(1097)+16*s(1100)+266*s(1110)+681*s(1111)+1*s(1114)+1*s(1116)+2*s(1118)+6*s(1136)+2*s(1137)+2*s(1138)+78*s(1141)+230*s(1142)+2*s(1144)+2*s(1151)+6*s(1159)+2*s(1160)+12*s(1161)+102*s(1162)+10*s(1163)+18*s(1164)+32*s(1165)+8*s(1166)+30*s(1167)+24*s(1168)+20*s(1169)+62*s(1170)+14*s(1171)+178*s(1172)+4*s(1173)+70*s(1174)+32*s(1175)+56*s(1176)+30*s(1177)+24*s(1178)+4*s(1189)+4*s(1196)+12*s(1204)+4*s(1205)+24*s(1206)+204*s(1207)+20*s(1208)+16*s(1211)+4*s(1216)+188*s(1222)+451*s(1223)+1*s(1226)+1*s(1228)+2*s(1230)+6*s(1248)+2*s(1249)+2*s(1250)+78*s(1253)+230*s(1254)+2*s(1256)+2*s(1263)+6*s(1271)+2*s(1272)+12*s(1273)+102*s(1274)+10*s(1275)+18*s(1276)+32*s(1277)+8*s(1278)+30*s(1279)+24*s(1280)+20*s(1281)+44*s(1282)+14*s(1283)+146*s(1284)+4*s(1285)+40*s(1286)+32*s(1287)+32*s(1288)+30*s(1289)+24*s(1290)+2*s(1302)+2*s(1309)+6*s(1317)+2*s(1318)+12*s(1319)+102*s(1320)+10*s(1321)+8*s(1324)+2*s(1339)+2*s(1445)+6
  Such that:s(1294) =< -V3+1
s(959) =< -V3+2
aux(237) =< 1
aux(238) =< 2
aux(239) =< 3
aux(240) =< 4
aux(241) =< 6
aux(242) =< 4/5
aux(243) =< 6/5
aux(244) =< 12/5
aux(245) =< 18/5
aux(246) =< V3
aux(247) =< V3+1
aux(248) =< 2*V3
aux(249) =< 2*V3+2
aux(250) =< 2/5*V3
aux(251) =< 2/5*V3+2/5
aux(252) =< 6/5*V3
aux(253) =< 6/5*V3+6/5
s(886) =< aux(248)
s(887) =< aux(250)
s(888) =< aux(246)+s(887)+s(887)
s(889) =< s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+aux(248)
s(890) =< s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+aux(237)
s(891) =< s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+s(887)+aux(237)
s(892) =< s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+aux(248)
s(893) =< s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+aux(248)
s(894) =< s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+s(887)*2+s(887)*2+s(887)*4+s(887)*2+s(887)*4+aux(248)
s(895) =< s(888)*2
s(896) =< s(888)-1
s(897) =< s(888)+1
s(898) =< s(888)
s(899) =< s(888)-2
s(900) =< s(888)-3
s(901) =< s(888)-4
s(902) =< s(888)* (2/5)
s(889) =< s(893)*s(895)
s(903) =< s(886)*s(896)
s(894) =< s(886)*s(897)
s(904) =< s(886)*s(898)
s(905) =< s(887)*s(898)
s(906) =< s(886)*s(899)
s(907) =< s(887)*s(896)
s(908) =< s(887)*s(900)
s(909) =< s(887)*s(897)
s(910) =< s(887)*s(901)
s(911) =< s(887)*s(899)
s(912) =< s(887)*s(898)
s(913) =< s(887)*s(899)
s(914) =< s(887)*s(900)
s(915) =< s(889)* (3/5)
s(916) =< s(889)* (1/5)
s(917) =< s(889)
s(918) =< s(916)
s(919) =< s(888)+s(902)+s(902)
s(920) =< s(917)+s(918)*3+s(918)*2+s(918)+s(918)*2+s(918)+s(918)+s(918)*2+s(918)+s(918)*3+s(918)*2+s(918)+s(918)+s(891)
s(921) =< s(919)+3
s(922) =< s(919)+2
s(923) =< s(919)
s(924) =< s(919)+4
s(925) =< s(919)-1
s(926) =< s(919)+1
s(927) =< s(918)*s(919)
s(928) =< s(917)*s(921)
s(929) =< s(918)*s(922)
s(930) =< s(918)*s(921)
s(931) =< s(918)*s(923)
s(932) =< s(918)*s(924)
s(933) =< s(918)*s(925)
s(934) =< s(918)*s(926)
s(935) =< s(918)*s(921)
s(936) =< s(918)*s(926)
s(937) =< s(928)
s(938) =< s(930)
s(939) =< s(929)
s(940) =< s(915)
s(941) =< s(931)
s(942) =< s(932)
s(943) =< s(933)
s(944) =< s(934)
s(945) =< s(904)
s(946) =< aux(252)
s(947) =< s(903)
s(948) =< s(905)
s(949) =< s(906)
s(950) =< s(907)
s(951) =< s(908)
s(952) =< s(909)
s(953) =< s(910)
s(954) =< s(911)
s(880) =< aux(246)
s(999) =< aux(240)
s(1000) =< aux(242)
s(1001) =< aux(238)+s(1000)+s(1000)
s(1002) =< s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+aux(240)
s(1003) =< s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+aux(237)
s(1004) =< s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+s(1000)+aux(237)
s(1005) =< s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+aux(240)
s(1006) =< s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+aux(240)
s(1007) =< s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*2+s(1000)*4+s(1000)*2+s(1000)*4+aux(240)
s(1008) =< s(1001)*2
s(1009) =< s(1001)-1
s(1010) =< s(1001)+1
s(1011) =< s(1001)
s(1012) =< s(1001)-2
s(1013) =< s(1001)-3
s(1014) =< s(1001)-4
s(1015) =< s(1001)* (2/5)
s(1002) =< s(1006)*s(1008)
s(1016) =< s(999)*s(1009)
s(1007) =< s(999)*s(1010)
s(1017) =< s(999)*s(1011)
s(1018) =< s(1000)*s(1011)
s(1019) =< s(999)*s(1012)
s(1020) =< s(1000)*s(1009)
s(1021) =< s(1000)*s(1013)
s(1022) =< s(1000)*s(1010)
s(1023) =< s(1000)*s(1014)
s(1024) =< s(1000)*s(1012)
s(1025) =< s(1000)*s(1011)
s(1026) =< s(1000)*s(1012)
s(1027) =< s(1000)*s(1013)
s(1028) =< s(1002)* (3/5)
s(1029) =< s(1002)* (1/5)
s(1030) =< s(1002)
s(1031) =< s(1029)
s(1032) =< s(1001)+s(1015)+s(1015)
s(1033) =< s(1030)+s(1031)*3+s(1031)*2+s(1031)+s(1031)*2+s(1031)+s(1031)+s(1031)*2+s(1031)+s(1031)*3+s(1031)*2+s(1031)+s(1031)+s(1004)
s(1034) =< s(1032)+3
s(1035) =< s(1032)+2
s(1036) =< s(1032)
s(1037) =< s(1032)+4
s(1038) =< s(1032)-1
s(1039) =< s(1032)+1
s(1040) =< s(1031)*s(1032)
s(1041) =< s(1030)*s(1034)
s(1042) =< s(1031)*s(1035)
s(1043) =< s(1031)*s(1034)
s(1044) =< s(1031)*s(1036)
s(1045) =< s(1031)*s(1037)
s(1046) =< s(1031)*s(1038)
s(1047) =< s(1031)*s(1039)
s(1048) =< s(1031)*s(1034)
s(1049) =< s(1031)*s(1039)
s(1050) =< s(1041)
s(1051) =< s(1043)
s(1052) =< s(1042)
s(1053) =< s(1028)
s(1054) =< s(1044)
s(1055) =< s(1045)
s(1056) =< s(1046)
s(1057) =< s(1047)
s(1058) =< s(1017)
s(1059) =< aux(244)
s(1060) =< s(1016)
s(1061) =< s(1018)
s(1062) =< s(1019)
s(1063) =< s(1020)
s(1064) =< s(1021)
s(1065) =< s(1022)
s(1066) =< s(1023)
s(1067) =< s(1024)
s(1110) =< aux(241)
s(1111) =< aux(243)
s(1112) =< aux(239)+s(1111)+s(1111)
s(1113) =< s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+aux(241)
s(1114) =< s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+aux(237)
s(1115) =< s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+s(1111)+aux(237)
s(1116) =< s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+aux(241)
s(1117) =< s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+aux(241)
s(1118) =< s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*2+s(1111)*4+s(1111)*2+s(1111)*4+aux(241)
s(1119) =< s(1112)*2
s(1120) =< s(1112)-1
s(1121) =< s(1112)+1
s(1122) =< s(1112)
s(1123) =< s(1112)-2
s(1124) =< s(1112)-3
s(1125) =< s(1112)-4
s(1126) =< s(1112)* (2/5)
s(1113) =< s(1117)*s(1119)
s(1127) =< s(1110)*s(1120)
s(1118) =< s(1110)*s(1121)
s(1128) =< s(1110)*s(1122)
s(1129) =< s(1111)*s(1122)
s(1130) =< s(1110)*s(1123)
s(1131) =< s(1111)*s(1120)
s(1132) =< s(1111)*s(1124)
s(1133) =< s(1111)*s(1121)
s(1134) =< s(1111)*s(1125)
s(1135) =< s(1111)*s(1123)
s(1136) =< s(1111)*s(1122)
s(1137) =< s(1111)*s(1123)
s(1138) =< s(1111)*s(1124)
s(1139) =< s(1113)* (3/5)
s(1140) =< s(1113)* (1/5)
s(1141) =< s(1113)
s(1142) =< s(1140)
s(1143) =< s(1112)+s(1126)+s(1126)
s(1144) =< s(1141)+s(1142)*3+s(1142)*2+s(1142)+s(1142)*2+s(1142)+s(1142)+s(1142)*2+s(1142)+s(1142)*3+s(1142)*2+s(1142)+s(1142)+s(1115)
s(1145) =< s(1143)+3
s(1146) =< s(1143)+2
s(1147) =< s(1143)
s(1148) =< s(1143)+4
s(1149) =< s(1143)-1
s(1150) =< s(1143)+1
s(1151) =< s(1142)*s(1143)
s(1152) =< s(1141)*s(1145)
s(1153) =< s(1142)*s(1146)
s(1154) =< s(1142)*s(1145)
s(1155) =< s(1142)*s(1147)
s(1156) =< s(1142)*s(1148)
s(1157) =< s(1142)*s(1149)
s(1158) =< s(1142)*s(1150)
s(1159) =< s(1142)*s(1145)
s(1160) =< s(1142)*s(1150)
s(1161) =< s(1152)
s(1162) =< s(1154)
s(1163) =< s(1153)
s(1164) =< s(1139)
s(1165) =< s(1155)
s(1166) =< s(1156)
s(1167) =< s(1157)
s(1168) =< s(1158)
s(1169) =< s(1128)
s(1170) =< aux(245)
s(1171) =< s(1127)
s(1172) =< s(1129)
s(1173) =< s(1130)
s(1174) =< s(1131)
s(1175) =< s(1132)
s(1176) =< s(1133)
s(1177) =< s(1134)
s(1178) =< s(1135)
s(1216) =< aux(247)
s(1222) =< aux(249)
s(1223) =< aux(251)
s(1224) =< aux(247)+s(1223)+s(1223)
s(1225) =< s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+aux(249)
s(1226) =< s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+aux(237)
s(1227) =< s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+s(1223)+aux(237)
s(1228) =< s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+aux(249)
s(1229) =< s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+aux(249)
s(1230) =< s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*2+s(1223)*4+s(1223)*2+s(1223)*4+aux(249)
s(1231) =< s(1224)*2
s(1232) =< s(1224)-1
s(1233) =< s(1224)+1
s(1234) =< s(1224)
s(1235) =< s(1224)-2
s(1236) =< s(1224)-3
s(1237) =< s(1224)-4
s(1238) =< s(1224)* (2/5)
s(1225) =< s(1229)*s(1231)
s(1239) =< s(1222)*s(1232)
s(1230) =< s(1222)*s(1233)
s(1240) =< s(1222)*s(1234)
s(1241) =< s(1223)*s(1234)
s(1242) =< s(1222)*s(1235)
s(1243) =< s(1223)*s(1232)
s(1244) =< s(1223)*s(1236)
s(1245) =< s(1223)*s(1233)
s(1246) =< s(1223)*s(1237)
s(1247) =< s(1223)*s(1235)
s(1248) =< s(1223)*s(1234)
s(1249) =< s(1223)*s(1235)
s(1250) =< s(1223)*s(1236)
s(1251) =< s(1225)* (3/5)
s(1252) =< s(1225)* (1/5)
s(1253) =< s(1225)
s(1254) =< s(1252)
s(1255) =< s(1224)+s(1238)+s(1238)
s(1256) =< s(1253)+s(1254)*3+s(1254)*2+s(1254)+s(1254)*2+s(1254)+s(1254)+s(1254)*2+s(1254)+s(1254)*3+s(1254)*2+s(1254)+s(1254)+s(1227)
s(1257) =< s(1255)+3
s(1258) =< s(1255)+2
s(1259) =< s(1255)
s(1260) =< s(1255)+4
s(1261) =< s(1255)-1
s(1262) =< s(1255)+1
s(1263) =< s(1254)*s(1255)
s(1264) =< s(1253)*s(1257)
s(1265) =< s(1254)*s(1258)
s(1266) =< s(1254)*s(1257)
s(1267) =< s(1254)*s(1259)
s(1268) =< s(1254)*s(1260)
s(1269) =< s(1254)*s(1261)
s(1270) =< s(1254)*s(1262)
s(1271) =< s(1254)*s(1257)
s(1272) =< s(1254)*s(1262)
s(1273) =< s(1264)
s(1274) =< s(1266)
s(1275) =< s(1265)
s(1276) =< s(1251)
s(1277) =< s(1267)
s(1278) =< s(1268)
s(1279) =< s(1269)
s(1280) =< s(1270)
s(1281) =< s(1240)
s(1282) =< aux(253)
s(1283) =< s(1239)
s(1284) =< s(1241)
s(1285) =< s(1242)
s(1286) =< s(1243)
s(1287) =< s(1244)
s(1288) =< s(1245)
s(1289) =< s(1246)
s(1290) =< s(1247)
s(1339) =< s(886)+s(887)*3+s(887)*2+s(887)+s(887)*2+s(887)+s(887)+s(887)*2+s(887)+s(887)*3+s(887)*2+s(887)+s(887)+aux(237)
s(968) =< s(888)+3
s(969) =< s(888)+2
s(971) =< s(888)+4
s(974) =< s(887)*s(888)
s(975) =< s(886)*s(968)
s(976) =< s(887)*s(969)
s(977) =< s(887)*s(968)
s(979) =< s(887)*s(971)
s(982) =< s(887)*s(968)
s(983) =< s(887)*s(897)
s(984) =< s(975)
s(985) =< s(977)
s(986) =< s(976)
s(989) =< s(979)
s(1078) =< s(999)+s(1000)*3+s(1000)*2+s(1000)+s(1000)*2+s(1000)+s(1000)+s(1000)*2+s(1000)+s(1000)*3+s(1000)*2+s(1000)+s(1000)
s(1079) =< s(1001)+3
s(1080) =< s(1001)+2
s(1082) =< s(1001)+4
s(1085) =< s(1000)*s(1001)
s(1086) =< s(999)*s(1079)
s(1087) =< s(1000)*s(1080)
s(1088) =< s(1000)*s(1079)
s(1090) =< s(1000)*s(1082)
s(1093) =< s(1000)*s(1079)
s(1094) =< s(1000)*s(1010)
s(1095) =< s(1086)
s(1096) =< s(1088)
s(1097) =< s(1087)
s(1100) =< s(1090)
s(1189) =< s(1110)+s(1111)*3+s(1111)*2+s(1111)+s(1111)*2+s(1111)+s(1111)+s(1111)*2+s(1111)+s(1111)*3+s(1111)*2+s(1111)+s(1111)
s(1190) =< s(1112)+3
s(1191) =< s(1112)+2
s(1193) =< s(1112)+4
s(1196) =< s(1111)*s(1112)
s(1197) =< s(1110)*s(1190)
s(1198) =< s(1111)*s(1191)
s(1199) =< s(1111)*s(1190)
s(1201) =< s(1111)*s(1193)
s(1204) =< s(1111)*s(1190)
s(1205) =< s(1111)*s(1121)
s(1206) =< s(1197)
s(1207) =< s(1199)
s(1208) =< s(1198)
s(1211) =< s(1201)
s(1302) =< s(1222)+s(1223)*3+s(1223)*2+s(1223)+s(1223)*2+s(1223)+s(1223)+s(1223)*2+s(1223)+s(1223)*3+s(1223)*2+s(1223)+s(1223)+s(1294)
s(1303) =< s(1224)+3
s(1304) =< s(1224)+2
s(1306) =< s(1224)+4
s(1309) =< s(1223)*s(1224)
s(1310) =< s(1222)*s(1303)
s(1311) =< s(1223)*s(1304)
s(1312) =< s(1223)*s(1303)
s(1314) =< s(1223)*s(1306)
s(1317) =< s(1223)*s(1303)
s(1318) =< s(1223)*s(1233)
s(1319) =< s(1310)
s(1320) =< s(1312)
s(1321) =< s(1311)
s(1324) =< s(1314)
s(967) =< s(886)+s(887)*3+s(887)*2+s(887)+s(887)*2+s(887)+s(887)+s(887)*2+s(887)+s(887)*3+s(887)*2+s(887)+s(887)+s(959)
s(1445) =< s(886)+s(887)*3+s(887)*2+s(887)+s(887)*2+s(887)+s(887)+s(887)*2+s(887)+s(887)*3+s(887)*2+s(887)+s(887)

  with precondition: [V3>=1] 

* Chain [92]...: 16*s(1814)+376*s(1820)+902*s(1821)+2*s(1824)+2*s(1826)+4*s(1828)+12*s(1846)+4*s(1847)+4*s(1848)+156*s(1851)+460*s(1852)+4*s(1854)+4*s(1861)+12*s(1869)+4*s(1870)+24*s(1871)+204*s(1872)+20*s(1873)+36*s(1874)+64*s(1875)+16*s(1876)+60*s(1877)+48*s(1878)+40*s(1879)+88*s(1880)+28*s(1881)+292*s(1882)+8*s(1883)+80*s(1884)+64*s(1885)+64*s(1886)+60*s(1887)+48*s(1888)+248*s(1889)+2*s(1901)+4*s(1908)+12*s(1916)+4*s(1917)+24*s(1918)+204*s(1919)+20*s(1920)+16*s(1923)+188*s(1933)+451*s(1934)+1*s(1937)+1*s(1939)+2*s(1941)+6*s(1959)+2*s(1960)+2*s(1961)+78*s(1964)+230*s(1965)+2*s(1967)+2*s(1974)+6*s(1982)+2*s(1983)+12*s(1984)+102*s(1985)+10*s(1986)+18*s(1987)+32*s(1988)+8*s(1989)+30*s(1990)+24*s(1991)+20*s(1992)+44*s(1993)+14*s(1994)+146*s(1995)+4*s(1996)+40*s(1997)+32*s(1998)+32*s(1999)+30*s(2000)+24*s(2001)+2*s(2012)+2*s(2019)+6*s(2027)+2*s(2028)+12*s(2029)+102*s(2030)+10*s(2031)+8*s(2034)+188*s(2044)+451*s(2045)+1*s(2048)+1*s(2050)+2*s(2052)+6*s(2070)+2*s(2071)+2*s(2072)+78*s(2075)+230*s(2076)+2*s(2078)+2*s(2085)+6*s(2093)+2*s(2094)+12*s(2095)+102*s(2096)+10*s(2097)+18*s(2098)+32*s(2099)+8*s(2100)+30*s(2101)+24*s(2102)+20*s(2103)+44*s(2104)+14*s(2105)+146*s(2106)+4*s(2107)+40*s(2108)+32*s(2109)+32*s(2110)+30*s(2111)+24*s(2112)+2*s(2123)+2*s(2130)+6*s(2138)+2*s(2139)+12*s(2140)+102*s(2141)+10*s(2142)+8*s(2145)+2*s(2236)+5
  Such that:aux(377) =< 1
aux(378) =< 2
aux(379) =< 3
aux(380) =< 4
aux(381) =< 6
aux(382) =< 4/5
aux(383) =< 6/5
aux(384) =< 12/5
aux(385) =< 18/5
aux(386) =< V3
aux(387) =< 2*V3
aux(388) =< 2/5*V3
aux(389) =< 6/5*V3
s(1820) =< aux(387)
s(1821) =< aux(388)
s(1822) =< aux(386)+s(1821)+s(1821)
s(1823) =< s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+aux(387)
s(1824) =< s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+aux(377)
s(1825) =< s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+s(1821)+aux(377)
s(1826) =< s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+aux(387)
s(1827) =< s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+aux(387)
s(1828) =< s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*2+s(1821)*4+s(1821)*2+s(1821)*4+aux(387)
s(1829) =< s(1822)*2
s(1830) =< s(1822)-1
s(1831) =< s(1822)+1
s(1832) =< s(1822)
s(1833) =< s(1822)-2
s(1834) =< s(1822)-3
s(1835) =< s(1822)-4
s(1836) =< s(1822)* (2/5)
s(1823) =< s(1827)*s(1829)
s(1837) =< s(1820)*s(1830)
s(1828) =< s(1820)*s(1831)
s(1838) =< s(1820)*s(1832)
s(1839) =< s(1821)*s(1832)
s(1840) =< s(1820)*s(1833)
s(1841) =< s(1821)*s(1830)
s(1842) =< s(1821)*s(1834)
s(1843) =< s(1821)*s(1831)
s(1844) =< s(1821)*s(1835)
s(1845) =< s(1821)*s(1833)
s(1846) =< s(1821)*s(1832)
s(1847) =< s(1821)*s(1833)
s(1848) =< s(1821)*s(1834)
s(1849) =< s(1823)* (3/5)
s(1850) =< s(1823)* (1/5)
s(1851) =< s(1823)
s(1852) =< s(1850)
s(1853) =< s(1822)+s(1836)+s(1836)
s(1854) =< s(1851)+s(1852)*3+s(1852)*2+s(1852)+s(1852)*2+s(1852)+s(1852)+s(1852)*2+s(1852)+s(1852)*3+s(1852)*2+s(1852)+s(1852)+s(1825)
s(1855) =< s(1853)+3
s(1856) =< s(1853)+2
s(1857) =< s(1853)
s(1858) =< s(1853)+4
s(1859) =< s(1853)-1
s(1860) =< s(1853)+1
s(1861) =< s(1852)*s(1853)
s(1862) =< s(1851)*s(1855)
s(1863) =< s(1852)*s(1856)
s(1864) =< s(1852)*s(1855)
s(1865) =< s(1852)*s(1857)
s(1866) =< s(1852)*s(1858)
s(1867) =< s(1852)*s(1859)
s(1868) =< s(1852)*s(1860)
s(1869) =< s(1852)*s(1855)
s(1870) =< s(1852)*s(1860)
s(1871) =< s(1862)
s(1872) =< s(1864)
s(1873) =< s(1863)
s(1874) =< s(1849)
s(1875) =< s(1865)
s(1876) =< s(1866)
s(1877) =< s(1867)
s(1878) =< s(1868)
s(1879) =< s(1838)
s(1880) =< aux(389)
s(1881) =< s(1837)
s(1882) =< s(1839)
s(1883) =< s(1840)
s(1884) =< s(1841)
s(1885) =< s(1842)
s(1886) =< s(1843)
s(1887) =< s(1844)
s(1888) =< s(1845)
s(1814) =< aux(386)
s(1901) =< s(1820)+s(1821)*3+s(1821)*2+s(1821)+s(1821)*2+s(1821)+s(1821)+s(1821)*2+s(1821)+s(1821)*3+s(1821)*2+s(1821)+s(1821)+aux(377)
s(1902) =< s(1822)+3
s(1903) =< s(1822)+2
s(1905) =< s(1822)+4
s(1908) =< s(1821)*s(1822)
s(1909) =< s(1820)*s(1902)
s(1910) =< s(1821)*s(1903)
s(1911) =< s(1821)*s(1902)
s(1913) =< s(1821)*s(1905)
s(1916) =< s(1821)*s(1902)
s(1917) =< s(1821)*s(1831)
s(1918) =< s(1909)
s(1919) =< s(1911)
s(1920) =< s(1910)
s(1923) =< s(1913)
s(1933) =< aux(380)
s(1934) =< aux(382)
s(1935) =< aux(378)+s(1934)+s(1934)
s(1936) =< s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+aux(380)
s(1937) =< s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+aux(377)
s(1938) =< s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+s(1934)+aux(377)
s(1939) =< s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+aux(380)
s(1940) =< s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+aux(380)
s(1941) =< s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*2+s(1934)*4+s(1934)*2+s(1934)*4+aux(380)
s(1942) =< s(1935)*2
s(1943) =< s(1935)-1
s(1944) =< s(1935)+1
s(1945) =< s(1935)
s(1946) =< s(1935)-2
s(1947) =< s(1935)-3
s(1948) =< s(1935)-4
s(1949) =< s(1935)* (2/5)
s(1936) =< s(1940)*s(1942)
s(1950) =< s(1933)*s(1943)
s(1941) =< s(1933)*s(1944)
s(1951) =< s(1933)*s(1945)
s(1952) =< s(1934)*s(1945)
s(1953) =< s(1933)*s(1946)
s(1954) =< s(1934)*s(1943)
s(1955) =< s(1934)*s(1947)
s(1956) =< s(1934)*s(1944)
s(1957) =< s(1934)*s(1948)
s(1958) =< s(1934)*s(1946)
s(1959) =< s(1934)*s(1945)
s(1960) =< s(1934)*s(1946)
s(1961) =< s(1934)*s(1947)
s(1962) =< s(1936)* (3/5)
s(1963) =< s(1936)* (1/5)
s(1964) =< s(1936)
s(1965) =< s(1963)
s(1966) =< s(1935)+s(1949)+s(1949)
s(1967) =< s(1964)+s(1965)*3+s(1965)*2+s(1965)+s(1965)*2+s(1965)+s(1965)+s(1965)*2+s(1965)+s(1965)*3+s(1965)*2+s(1965)+s(1965)+s(1938)
s(1968) =< s(1966)+3
s(1969) =< s(1966)+2
s(1970) =< s(1966)
s(1971) =< s(1966)+4
s(1972) =< s(1966)-1
s(1973) =< s(1966)+1
s(1974) =< s(1965)*s(1966)
s(1975) =< s(1964)*s(1968)
s(1976) =< s(1965)*s(1969)
s(1977) =< s(1965)*s(1968)
s(1978) =< s(1965)*s(1970)
s(1979) =< s(1965)*s(1971)
s(1980) =< s(1965)*s(1972)
s(1981) =< s(1965)*s(1973)
s(1982) =< s(1965)*s(1968)
s(1983) =< s(1965)*s(1973)
s(1984) =< s(1975)
s(1985) =< s(1977)
s(1986) =< s(1976)
s(1987) =< s(1962)
s(1988) =< s(1978)
s(1989) =< s(1979)
s(1990) =< s(1980)
s(1991) =< s(1981)
s(1992) =< s(1951)
s(1993) =< aux(384)
s(1994) =< s(1950)
s(1995) =< s(1952)
s(1996) =< s(1953)
s(1997) =< s(1954)
s(1998) =< s(1955)
s(1999) =< s(1956)
s(2000) =< s(1957)
s(2001) =< s(1958)
s(2044) =< aux(381)
s(2045) =< aux(383)
s(2046) =< aux(379)+s(2045)+s(2045)
s(2047) =< s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+aux(381)
s(2048) =< s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+aux(377)
s(2049) =< s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+s(2045)+aux(377)
s(2050) =< s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+aux(381)
s(2051) =< s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+aux(381)
s(2052) =< s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*2+s(2045)*4+s(2045)*2+s(2045)*4+aux(381)
s(2053) =< s(2046)*2
s(2054) =< s(2046)-1
s(2055) =< s(2046)+1
s(2056) =< s(2046)
s(2057) =< s(2046)-2
s(2058) =< s(2046)-3
s(2059) =< s(2046)-4
s(2060) =< s(2046)* (2/5)
s(2047) =< s(2051)*s(2053)
s(2061) =< s(2044)*s(2054)
s(2052) =< s(2044)*s(2055)
s(2062) =< s(2044)*s(2056)
s(2063) =< s(2045)*s(2056)
s(2064) =< s(2044)*s(2057)
s(2065) =< s(2045)*s(2054)
s(2066) =< s(2045)*s(2058)
s(2067) =< s(2045)*s(2055)
s(2068) =< s(2045)*s(2059)
s(2069) =< s(2045)*s(2057)
s(2070) =< s(2045)*s(2056)
s(2071) =< s(2045)*s(2057)
s(2072) =< s(2045)*s(2058)
s(2073) =< s(2047)* (3/5)
s(2074) =< s(2047)* (1/5)
s(2075) =< s(2047)
s(2076) =< s(2074)
s(2077) =< s(2046)+s(2060)+s(2060)
s(2078) =< s(2075)+s(2076)*3+s(2076)*2+s(2076)+s(2076)*2+s(2076)+s(2076)+s(2076)*2+s(2076)+s(2076)*3+s(2076)*2+s(2076)+s(2076)+s(2049)
s(2079) =< s(2077)+3
s(2080) =< s(2077)+2
s(2081) =< s(2077)
s(2082) =< s(2077)+4
s(2083) =< s(2077)-1
s(2084) =< s(2077)+1
s(2085) =< s(2076)*s(2077)
s(2086) =< s(2075)*s(2079)
s(2087) =< s(2076)*s(2080)
s(2088) =< s(2076)*s(2079)
s(2089) =< s(2076)*s(2081)
s(2090) =< s(2076)*s(2082)
s(2091) =< s(2076)*s(2083)
s(2092) =< s(2076)*s(2084)
s(2093) =< s(2076)*s(2079)
s(2094) =< s(2076)*s(2084)
s(2095) =< s(2086)
s(2096) =< s(2088)
s(2097) =< s(2087)
s(2098) =< s(2073)
s(2099) =< s(2089)
s(2100) =< s(2090)
s(2101) =< s(2091)
s(2102) =< s(2092)
s(2103) =< s(2062)
s(2104) =< aux(385)
s(2105) =< s(2061)
s(2106) =< s(2063)
s(2107) =< s(2064)
s(2108) =< s(2065)
s(2109) =< s(2066)
s(2110) =< s(2067)
s(2111) =< s(2068)
s(2112) =< s(2069)
s(2012) =< s(1933)+s(1934)*3+s(1934)*2+s(1934)+s(1934)*2+s(1934)+s(1934)+s(1934)*2+s(1934)+s(1934)*3+s(1934)*2+s(1934)+s(1934)
s(2013) =< s(1935)+3
s(2014) =< s(1935)+2
s(2016) =< s(1935)+4
s(2019) =< s(1934)*s(1935)
s(2020) =< s(1933)*s(2013)
s(2021) =< s(1934)*s(2014)
s(2022) =< s(1934)*s(2013)
s(2024) =< s(1934)*s(2016)
s(2027) =< s(1934)*s(2013)
s(2028) =< s(1934)*s(1944)
s(2029) =< s(2020)
s(2030) =< s(2022)
s(2031) =< s(2021)
s(2034) =< s(2024)
s(2123) =< s(2044)+s(2045)*3+s(2045)*2+s(2045)+s(2045)*2+s(2045)+s(2045)+s(2045)*2+s(2045)+s(2045)*3+s(2045)*2+s(2045)+s(2045)
s(2124) =< s(2046)+3
s(2125) =< s(2046)+2
s(2127) =< s(2046)+4
s(2130) =< s(2045)*s(2046)
s(2131) =< s(2044)*s(2124)
s(2132) =< s(2045)*s(2125)
s(2133) =< s(2045)*s(2124)
s(2135) =< s(2045)*s(2127)
s(2138) =< s(2045)*s(2124)
s(2139) =< s(2045)*s(2055)
s(2140) =< s(2131)
s(2141) =< s(2133)
s(2142) =< s(2132)
s(2145) =< s(2135)
s(2236) =< s(1820)+s(1821)*3+s(1821)*2+s(1821)+s(1821)*2+s(1821)+s(1821)+s(1821)*2+s(1821)+s(1821)*3+s(1821)*2+s(1821)+s(1821)

  with precondition: [Out=0,V3>=2] 


#### Cost of chains of fun9(V3,V4,Out):
* Chain [120]: 6*s(3480)+5
  Such that:s(3479) =< V4
s(3480) =< s(3479)

  with precondition: [V3=1,V4+2=Out,V4>=0] 

* Chain [119]: 7
  with precondition: [V3=1,V4=2,Out=5] 

* Chain [118]: 2*s(3481)+7
  Such that:s(3481) =< V4+1

  with precondition: [V3=1,V4+3=Out,V4>=3] 

* Chain [117]: 0
  with precondition: [Out=0,V3>=0,V4>=0] 


#### Cost of chains of fun8(V3,V4,V5,Out):
* Chain [135]: 24*s(3487)+12*s(3489)+4*s(3496)+8*s(3497)+9
  Such that:aux(438) =< V4
aux(439) =< V4+1
aux(440) =< V5
aux(441) =< V5+1
s(3496) =< aux(439)
s(3497) =< aux(441)
s(3489) =< aux(438)
s(3487) =< aux(440)

  with precondition: [Out=0,V3>=0,V4>=0,V5>=0] 

* Chain [134]: 12*s(3507)+6*s(3513)+11
  Such that:s(3512) =< 2
aux(442) =< V4
s(3513) =< s(3512)
s(3507) =< aux(442)

  with precondition: [V3=1,V5=0,V4+2=Out,V4>=0] 

* Chain [133]: 43
  with precondition: [V3=1,V4=2,V5=0,Out=5] 

* Chain [132]: 2*s(3526)+15
  Such that:s(3526) =< 4

  with precondition: [V3=1,V4=2,V5=0,Out=6] 

* Chain [131]: 24*s(3528)+6*s(3530)+2*s(3537)+8
  Such that:s(3529) =< V4
s(3537) =< V4+1
aux(443) =< 1
s(3530) =< s(3529)
s(3528) =< aux(443)

  with precondition: [V3=1,V5=1,Out=0,V4>=0] 

* Chain [130]: 12*s(3539)+12*s(3541)+6*s(3547)+11
  Such that:s(3546) =< 2
aux(444) =< V4
aux(445) =< 1
s(3541) =< aux(444)
s(3539) =< aux(445)
s(3547) =< s(3546)

  with precondition: [V3=1,V5=1,V4+2=Out,V4>=0] 

* Chain [129]: 61
  with precondition: [V3=1,V4=2,V5=1,Out=5] 

* Chain [128]: 6*s(3559)+2*s(3560)+15
  Such that:s(3558) =< 1
s(3560) =< 4
s(3559) =< s(3558)

  with precondition: [V3=1,V4=2,V5=1,Out=6] 

* Chain [127]: 12*s(3562)+4*s(3563)+9
  Such that:aux(447) =< V4
aux(448) =< V4+1
s(3563) =< aux(448)
s(3562) =< aux(447)

  with precondition: [V3=1,V5=2,Out=0,V4>=0] 

* Chain [126]: 6*s(3570)+2*s(3573)+8
  Such that:s(3569) =< V4
s(3573) =< V4+1
s(3570) =< s(3569)

  with precondition: [V3=1,V5=0,Out=0,V4>=0] 

* Chain [125]: 2*s(3576)+2*s(3577)+15
  Such that:s(3576) =< V4+1
s(3577) =< V4+2

  with precondition: [V3=1,V5=0,V4+4=Out,V4>=3] 

* Chain [124]: 6*s(3581)+10*s(3582)+13
  Such that:s(3580) =< V4
aux(450) =< V4+1
s(3582) =< aux(450)
s(3581) =< s(3580)

  with precondition: [V3=1,V5=0,V4+3=Out,V4>=3] 

* Chain [123]: 6*s(3589)+2*s(3590)+2*s(3591)+15
  Such that:s(3588) =< 1
s(3590) =< V4+1
s(3591) =< V4+2
s(3589) =< s(3588)

  with precondition: [V3=1,V5=1,V4+4=Out,V4>=3] 

* Chain [122]: 12*s(3593)+6*s(3595)+10*s(3596)+13
  Such that:s(3594) =< V4
aux(452) =< 1
aux(453) =< V4+1
s(3596) =< aux(453)
s(3595) =< s(3594)
s(3593) =< aux(452)

  with precondition: [V3=1,V5=1,V4+3=Out,V4>=3] 

* Chain [121]...: 12*s(3603)+188*s(3609)+451*s(3610)+1*s(3613)+1*s(3615)+2*s(3617)+6*s(3635)+2*s(3636)+2*s(3637)+78*s(3640)+230*s(3641)+2*s(3643)+2*s(3650)+6*s(3658)+2*s(3659)+12*s(3660)+102*s(3661)+10*s(3662)+18*s(3663)+32*s(3664)+8*s(3665)+30*s(3666)+24*s(3667)+20*s(3668)+44*s(3669)+14*s(3670)+146*s(3671)+4*s(3672)+40*s(3673)+32*s(3674)+32*s(3675)+30*s(3676)+24*s(3677)+248*s(3678)+2*s(3690)+2*s(3697)+6*s(3705)+2*s(3706)+12*s(3707)+102*s(3708)+10*s(3709)+8*s(3712)+188*s(3722)+451*s(3723)+1*s(3726)+1*s(3728)+2*s(3730)+6*s(3748)+2*s(3749)+2*s(3750)+78*s(3753)+230*s(3754)+2*s(3756)+2*s(3763)+6*s(3771)+2*s(3772)+12*s(3773)+102*s(3774)+10*s(3775)+18*s(3776)+32*s(3777)+8*s(3778)+30*s(3779)+24*s(3780)+20*s(3781)+44*s(3782)+14*s(3783)+146*s(3784)+4*s(3785)+40*s(3786)+32*s(3787)+32*s(3788)+30*s(3789)+24*s(3790)+2*s(3801)+2*s(3808)+6*s(3816)+2*s(3817)+12*s(3818)+102*s(3819)+10*s(3820)+8*s(3823)+188*s(3833)+451*s(3834)+1*s(3837)+1*s(3839)+2*s(3841)+6*s(3859)+2*s(3860)+2*s(3861)+78*s(3864)+230*s(3865)+2*s(3867)+2*s(3874)+6*s(3882)+2*s(3883)+12*s(3884)+102*s(3885)+10*s(3886)+18*s(3887)+32*s(3888)+8*s(3889)+30*s(3890)+24*s(3891)+20*s(3892)+44*s(3893)+14*s(3894)+146*s(3895)+4*s(3896)+40*s(3897)+32*s(3898)+32*s(3899)+30*s(3900)+24*s(3901)+2*s(3912)+2*s(3919)+6*s(3927)+2*s(3928)+12*s(3929)+102*s(3930)+10*s(3931)+8*s(3934)+4*s(3939)+188*s(3945)+451*s(3946)+1*s(3949)+1*s(3951)+2*s(3953)+6*s(3971)+2*s(3972)+2*s(3973)+78*s(3976)+230*s(3977)+2*s(3979)+2*s(3986)+6*s(3994)+2*s(3995)+12*s(3996)+102*s(3997)+10*s(3998)+18*s(3999)+32*s(4000)+8*s(4001)+30*s(4002)+24*s(4003)+20*s(4004)+44*s(4005)+14*s(4006)+146*s(4007)+4*s(4008)+40*s(4009)+32*s(4010)+32*s(4011)+30*s(4012)+24*s(4013)+2*s(4025)+2*s(4032)+6*s(4040)+2*s(4041)+12*s(4042)+102*s(4043)+10*s(4044)+8*s(4047)+5
  Such that:s(4017) =< -V5+1
s(3682) =< -V5+2
aux(458) =< 1
aux(459) =< 2
aux(460) =< 3
aux(461) =< 4
aux(462) =< 6
aux(463) =< 4/5
aux(464) =< 6/5
aux(465) =< 12/5
aux(466) =< 18/5
aux(467) =< V5
aux(468) =< V5+1
aux(469) =< 2*V5
aux(470) =< 2*V5+2
aux(471) =< 2/5*V5
aux(472) =< 2/5*V5+2/5
aux(473) =< 6/5*V5
aux(474) =< 6/5*V5+6/5
s(3609) =< aux(469)
s(3610) =< aux(471)
s(3611) =< aux(467)+s(3610)+s(3610)
s(3612) =< s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+aux(469)
s(3613) =< s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+aux(458)
s(3614) =< s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+s(3610)+aux(458)
s(3615) =< s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+aux(469)
s(3616) =< s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+aux(469)
s(3617) =< s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*2+s(3610)*4+s(3610)*2+s(3610)*4+aux(469)
s(3618) =< s(3611)*2
s(3619) =< s(3611)-1
s(3620) =< s(3611)+1
s(3621) =< s(3611)
s(3622) =< s(3611)-2
s(3623) =< s(3611)-3
s(3624) =< s(3611)-4
s(3625) =< s(3611)* (2/5)
s(3612) =< s(3616)*s(3618)
s(3626) =< s(3609)*s(3619)
s(3617) =< s(3609)*s(3620)
s(3627) =< s(3609)*s(3621)
s(3628) =< s(3610)*s(3621)
s(3629) =< s(3609)*s(3622)
s(3630) =< s(3610)*s(3619)
s(3631) =< s(3610)*s(3623)
s(3632) =< s(3610)*s(3620)
s(3633) =< s(3610)*s(3624)
s(3634) =< s(3610)*s(3622)
s(3635) =< s(3610)*s(3621)
s(3636) =< s(3610)*s(3622)
s(3637) =< s(3610)*s(3623)
s(3638) =< s(3612)* (3/5)
s(3639) =< s(3612)* (1/5)
s(3640) =< s(3612)
s(3641) =< s(3639)
s(3642) =< s(3611)+s(3625)+s(3625)
s(3643) =< s(3640)+s(3641)*3+s(3641)*2+s(3641)+s(3641)*2+s(3641)+s(3641)+s(3641)*2+s(3641)+s(3641)*3+s(3641)*2+s(3641)+s(3641)+s(3614)
s(3644) =< s(3642)+3
s(3645) =< s(3642)+2
s(3646) =< s(3642)
s(3647) =< s(3642)+4
s(3648) =< s(3642)-1
s(3649) =< s(3642)+1
s(3650) =< s(3641)*s(3642)
s(3651) =< s(3640)*s(3644)
s(3652) =< s(3641)*s(3645)
s(3653) =< s(3641)*s(3644)
s(3654) =< s(3641)*s(3646)
s(3655) =< s(3641)*s(3647)
s(3656) =< s(3641)*s(3648)
s(3657) =< s(3641)*s(3649)
s(3658) =< s(3641)*s(3644)
s(3659) =< s(3641)*s(3649)
s(3660) =< s(3651)
s(3661) =< s(3653)
s(3662) =< s(3652)
s(3663) =< s(3638)
s(3664) =< s(3654)
s(3665) =< s(3655)
s(3666) =< s(3656)
s(3667) =< s(3657)
s(3668) =< s(3627)
s(3669) =< aux(473)
s(3670) =< s(3626)
s(3671) =< s(3628)
s(3672) =< s(3629)
s(3673) =< s(3630)
s(3674) =< s(3631)
s(3675) =< s(3632)
s(3676) =< s(3633)
s(3677) =< s(3634)
s(3603) =< aux(467)
s(3722) =< aux(461)
s(3723) =< aux(463)
s(3724) =< aux(459)+s(3723)+s(3723)
s(3725) =< s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+aux(461)
s(3726) =< s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+aux(458)
s(3727) =< s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+s(3723)+aux(458)
s(3728) =< s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+aux(461)
s(3729) =< s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+aux(461)
s(3730) =< s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*2+s(3723)*4+s(3723)*2+s(3723)*4+aux(461)
s(3731) =< s(3724)*2
s(3732) =< s(3724)-1
s(3733) =< s(3724)+1
s(3734) =< s(3724)
s(3735) =< s(3724)-2
s(3736) =< s(3724)-3
s(3737) =< s(3724)-4
s(3738) =< s(3724)* (2/5)
s(3725) =< s(3729)*s(3731)
s(3739) =< s(3722)*s(3732)
s(3730) =< s(3722)*s(3733)
s(3740) =< s(3722)*s(3734)
s(3741) =< s(3723)*s(3734)
s(3742) =< s(3722)*s(3735)
s(3743) =< s(3723)*s(3732)
s(3744) =< s(3723)*s(3736)
s(3745) =< s(3723)*s(3733)
s(3746) =< s(3723)*s(3737)
s(3747) =< s(3723)*s(3735)
s(3748) =< s(3723)*s(3734)
s(3749) =< s(3723)*s(3735)
s(3750) =< s(3723)*s(3736)
s(3751) =< s(3725)* (3/5)
s(3752) =< s(3725)* (1/5)
s(3753) =< s(3725)
s(3754) =< s(3752)
s(3755) =< s(3724)+s(3738)+s(3738)
s(3756) =< s(3753)+s(3754)*3+s(3754)*2+s(3754)+s(3754)*2+s(3754)+s(3754)+s(3754)*2+s(3754)+s(3754)*3+s(3754)*2+s(3754)+s(3754)+s(3727)
s(3757) =< s(3755)+3
s(3758) =< s(3755)+2
s(3759) =< s(3755)
s(3760) =< s(3755)+4
s(3761) =< s(3755)-1
s(3762) =< s(3755)+1
s(3763) =< s(3754)*s(3755)
s(3764) =< s(3753)*s(3757)
s(3765) =< s(3754)*s(3758)
s(3766) =< s(3754)*s(3757)
s(3767) =< s(3754)*s(3759)
s(3768) =< s(3754)*s(3760)
s(3769) =< s(3754)*s(3761)
s(3770) =< s(3754)*s(3762)
s(3771) =< s(3754)*s(3757)
s(3772) =< s(3754)*s(3762)
s(3773) =< s(3764)
s(3774) =< s(3766)
s(3775) =< s(3765)
s(3776) =< s(3751)
s(3777) =< s(3767)
s(3778) =< s(3768)
s(3779) =< s(3769)
s(3780) =< s(3770)
s(3781) =< s(3740)
s(3782) =< aux(465)
s(3783) =< s(3739)
s(3784) =< s(3741)
s(3785) =< s(3742)
s(3786) =< s(3743)
s(3787) =< s(3744)
s(3788) =< s(3745)
s(3789) =< s(3746)
s(3790) =< s(3747)
s(3833) =< aux(462)
s(3834) =< aux(464)
s(3835) =< aux(460)+s(3834)+s(3834)
s(3836) =< s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+aux(462)
s(3837) =< s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+aux(458)
s(3838) =< s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+s(3834)+aux(458)
s(3839) =< s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+aux(462)
s(3840) =< s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+aux(462)
s(3841) =< s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*2+s(3834)*4+s(3834)*2+s(3834)*4+aux(462)
s(3842) =< s(3835)*2
s(3843) =< s(3835)-1
s(3844) =< s(3835)+1
s(3845) =< s(3835)
s(3846) =< s(3835)-2
s(3847) =< s(3835)-3
s(3848) =< s(3835)-4
s(3849) =< s(3835)* (2/5)
s(3836) =< s(3840)*s(3842)
s(3850) =< s(3833)*s(3843)
s(3841) =< s(3833)*s(3844)
s(3851) =< s(3833)*s(3845)
s(3852) =< s(3834)*s(3845)
s(3853) =< s(3833)*s(3846)
s(3854) =< s(3834)*s(3843)
s(3855) =< s(3834)*s(3847)
s(3856) =< s(3834)*s(3844)
s(3857) =< s(3834)*s(3848)
s(3858) =< s(3834)*s(3846)
s(3859) =< s(3834)*s(3845)
s(3860) =< s(3834)*s(3846)
s(3861) =< s(3834)*s(3847)
s(3862) =< s(3836)* (3/5)
s(3863) =< s(3836)* (1/5)
s(3864) =< s(3836)
s(3865) =< s(3863)
s(3866) =< s(3835)+s(3849)+s(3849)
s(3867) =< s(3864)+s(3865)*3+s(3865)*2+s(3865)+s(3865)*2+s(3865)+s(3865)+s(3865)*2+s(3865)+s(3865)*3+s(3865)*2+s(3865)+s(3865)+s(3838)
s(3868) =< s(3866)+3
s(3869) =< s(3866)+2
s(3870) =< s(3866)
s(3871) =< s(3866)+4
s(3872) =< s(3866)-1
s(3873) =< s(3866)+1
s(3874) =< s(3865)*s(3866)
s(3875) =< s(3864)*s(3868)
s(3876) =< s(3865)*s(3869)
s(3877) =< s(3865)*s(3868)
s(3878) =< s(3865)*s(3870)
s(3879) =< s(3865)*s(3871)
s(3880) =< s(3865)*s(3872)
s(3881) =< s(3865)*s(3873)
s(3882) =< s(3865)*s(3868)
s(3883) =< s(3865)*s(3873)
s(3884) =< s(3875)
s(3885) =< s(3877)
s(3886) =< s(3876)
s(3887) =< s(3862)
s(3888) =< s(3878)
s(3889) =< s(3879)
s(3890) =< s(3880)
s(3891) =< s(3881)
s(3892) =< s(3851)
s(3893) =< aux(466)
s(3894) =< s(3850)
s(3895) =< s(3852)
s(3896) =< s(3853)
s(3897) =< s(3854)
s(3898) =< s(3855)
s(3899) =< s(3856)
s(3900) =< s(3857)
s(3901) =< s(3858)
s(3939) =< aux(468)
s(3945) =< aux(470)
s(3946) =< aux(472)
s(3947) =< aux(468)+s(3946)+s(3946)
s(3948) =< s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+aux(470)
s(3949) =< s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+aux(458)
s(3950) =< s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+s(3946)+aux(458)
s(3951) =< s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+aux(470)
s(3952) =< s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+aux(470)
s(3953) =< s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*2+s(3946)*4+s(3946)*2+s(3946)*4+aux(470)
s(3954) =< s(3947)*2
s(3955) =< s(3947)-1
s(3956) =< s(3947)+1
s(3957) =< s(3947)
s(3958) =< s(3947)-2
s(3959) =< s(3947)-3
s(3960) =< s(3947)-4
s(3961) =< s(3947)* (2/5)
s(3948) =< s(3952)*s(3954)
s(3962) =< s(3945)*s(3955)
s(3953) =< s(3945)*s(3956)
s(3963) =< s(3945)*s(3957)
s(3964) =< s(3946)*s(3957)
s(3965) =< s(3945)*s(3958)
s(3966) =< s(3946)*s(3955)
s(3967) =< s(3946)*s(3959)
s(3968) =< s(3946)*s(3956)
s(3969) =< s(3946)*s(3960)
s(3970) =< s(3946)*s(3958)
s(3971) =< s(3946)*s(3957)
s(3972) =< s(3946)*s(3958)
s(3973) =< s(3946)*s(3959)
s(3974) =< s(3948)* (3/5)
s(3975) =< s(3948)* (1/5)
s(3976) =< s(3948)
s(3977) =< s(3975)
s(3978) =< s(3947)+s(3961)+s(3961)
s(3979) =< s(3976)+s(3977)*3+s(3977)*2+s(3977)+s(3977)*2+s(3977)+s(3977)+s(3977)*2+s(3977)+s(3977)*3+s(3977)*2+s(3977)+s(3977)+s(3950)
s(3980) =< s(3978)+3
s(3981) =< s(3978)+2
s(3982) =< s(3978)
s(3983) =< s(3978)+4
s(3984) =< s(3978)-1
s(3985) =< s(3978)+1
s(3986) =< s(3977)*s(3978)
s(3987) =< s(3976)*s(3980)
s(3988) =< s(3977)*s(3981)
s(3989) =< s(3977)*s(3980)
s(3990) =< s(3977)*s(3982)
s(3991) =< s(3977)*s(3983)
s(3992) =< s(3977)*s(3984)
s(3993) =< s(3977)*s(3985)
s(3994) =< s(3977)*s(3980)
s(3995) =< s(3977)*s(3985)
s(3996) =< s(3987)
s(3997) =< s(3989)
s(3998) =< s(3988)
s(3999) =< s(3974)
s(4000) =< s(3990)
s(4001) =< s(3991)
s(4002) =< s(3992)
s(4003) =< s(3993)
s(4004) =< s(3963)
s(4005) =< aux(474)
s(4006) =< s(3962)
s(4007) =< s(3964)
s(4008) =< s(3965)
s(4009) =< s(3966)
s(4010) =< s(3967)
s(4011) =< s(3968)
s(4012) =< s(3969)
s(4013) =< s(3970)
s(3801) =< s(3722)+s(3723)*3+s(3723)*2+s(3723)+s(3723)*2+s(3723)+s(3723)+s(3723)*2+s(3723)+s(3723)*3+s(3723)*2+s(3723)+s(3723)
s(3802) =< s(3724)+3
s(3803) =< s(3724)+2
s(3805) =< s(3724)+4
s(3808) =< s(3723)*s(3724)
s(3809) =< s(3722)*s(3802)
s(3810) =< s(3723)*s(3803)
s(3811) =< s(3723)*s(3802)
s(3813) =< s(3723)*s(3805)
s(3816) =< s(3723)*s(3802)
s(3817) =< s(3723)*s(3733)
s(3818) =< s(3809)
s(3819) =< s(3811)
s(3820) =< s(3810)
s(3823) =< s(3813)
s(3912) =< s(3833)+s(3834)*3+s(3834)*2+s(3834)+s(3834)*2+s(3834)+s(3834)+s(3834)*2+s(3834)+s(3834)*3+s(3834)*2+s(3834)+s(3834)
s(3913) =< s(3835)+3
s(3914) =< s(3835)+2
s(3916) =< s(3835)+4
s(3919) =< s(3834)*s(3835)
s(3920) =< s(3833)*s(3913)
s(3921) =< s(3834)*s(3914)
s(3922) =< s(3834)*s(3913)
s(3924) =< s(3834)*s(3916)
s(3927) =< s(3834)*s(3913)
s(3928) =< s(3834)*s(3844)
s(3929) =< s(3920)
s(3930) =< s(3922)
s(3931) =< s(3921)
s(3934) =< s(3924)
s(4025) =< s(3945)+s(3946)*3+s(3946)*2+s(3946)+s(3946)*2+s(3946)+s(3946)+s(3946)*2+s(3946)+s(3946)*3+s(3946)*2+s(3946)+s(3946)+s(4017)
s(4026) =< s(3947)+3
s(4027) =< s(3947)+2
s(4029) =< s(3947)+4
s(4032) =< s(3946)*s(3947)
s(4033) =< s(3945)*s(4026)
s(4034) =< s(3946)*s(4027)
s(4035) =< s(3946)*s(4026)
s(4037) =< s(3946)*s(4029)
s(4040) =< s(3946)*s(4026)
s(4041) =< s(3946)*s(3956)
s(4042) =< s(4033)
s(4043) =< s(4035)
s(4044) =< s(4034)
s(4047) =< s(4037)
s(3690) =< s(3609)+s(3610)*3+s(3610)*2+s(3610)+s(3610)*2+s(3610)+s(3610)+s(3610)*2+s(3610)+s(3610)*3+s(3610)*2+s(3610)+s(3610)+s(3682)
s(3691) =< s(3611)+3
s(3692) =< s(3611)+2
s(3694) =< s(3611)+4
s(3697) =< s(3610)*s(3611)
s(3698) =< s(3609)*s(3691)
s(3699) =< s(3610)*s(3692)
s(3700) =< s(3610)*s(3691)
s(3702) =< s(3610)*s(3694)
s(3705) =< s(3610)*s(3691)
s(3706) =< s(3610)*s(3620)
s(3707) =< s(3698)
s(3708) =< s(3700)
s(3709) =< s(3699)
s(3712) =< s(3702)

  with precondition: [V3=1,V4>=0,V5>=1] 

