
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [add/3]
1. non_recursive  : [from/2]
2. non_recursive  : [fst/3]
3. non_recursive  : [s/2]
4. recursive [non_tail,multiple] : [activate/2,len/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into from/2
2. SCC is partially evaluated into fst/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into activate/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 


#### Refined cost equations add/3 
* CE 22: add(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 23: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [22] --> Loop 13 
* CEs [23] --> Loop 14 

#### Loops of add/3 
* Loop 13: add(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 14: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V1,V,Out) 

#### Partial ranking functions of CR add(V1,V,Out) 


### Resulting Chains:add(V1,V,Out) 
* [14]
* [13]


### Merging Chains  add/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations from/2 
* CE 18 is refined into CE [24] 
* CE 19 is refined into CE [25] 


#### Refined cost equations from/2 
* CE 24: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 25: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [24] --> Loop 15 
* CEs [25] --> Loop 16 

#### Loops of from/2 
* Loop 15: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 16: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [16]
* [15]


### Merging Chains  from/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations fst/3 
* CE 17 is refined into CE [26] 
* CE 16 is refined into CE [27] 


#### Refined cost equations fst/3 
* CE 26: fst(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 27: fst(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of fst/3 
* CEs [26] --> Loop 17 
* CEs [27] --> Loop 18 

#### Loops of fst/3 
* Loop 17: fst(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 18: fst(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR fst(V1,V,Out) 

#### Partial ranking functions of CR fst(V1,V,Out) 


### Resulting Chains:fst(V1,V,Out) 
* [18]
* [17]


### Merging Chains  fst/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations activate/2 
* CE 13 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 11 is refined into CE [30,31] 
* CE 14 is refined into CE [32,33] 
* CE 9 is refined into CE [34] 
* CE 8 is refined into CE [35] 
* CE 10 is refined into CE [36] 
* CE 12 is refined into CE [37,38] 


#### Refined cost equations activate/2 
* CE 28: activate(A,A) = 2
     [A>=1] 
* CE 29: activate(A,A) = 1
     [A>=0] 
* CE 30: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ fst(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=0,B2=1,A2=0,Out=1] 
* CE 31: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ fst(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 
* CE 32: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Out)+ add(Z1,Out,Out):1
     [Y1>=0,W1>=0,Out>=0,W1+Y1+1=V1,X1=0,Z1=0] 
* CE 33: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ add(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 
* CE 34: activate(V1,Out) = 3+ activate(W1,X1)+ activate(Y1,Z1)
     [X1>=Y1+1,Z1+1>=0,Y1>=0,W1>=0,Z1+2=Out,W1+1=V1] 
* CE 35: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 36: activate(V1,Out) = 2+ activate(W1,X1)
     [W1>=0,W1+1=V1,X1=1,Out=0] 
* CE 37: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 38: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 

### Cost equations --> "Loop" of activate/2 
* CEs [35,37] --> Loop 19 
* CEs [38] --> Loop 20 
* CEs [36] --> Loop 21 
* CEs [31,33] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [28,29] --> Loop 26 

#### Loops of activate/2 
* Loop 19: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 20: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 21: activate(V1,Out)->  activate(V1',Out')
                  [V1>=1,V1=V1'+1,Out'=1,Out=0] 
* Loop 22: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 23: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out'>=V1'2+1,V1'2>=0,Out>=1,V1>=1,Out=Out'2+2,V1=V1'+1] 
* Loop 24: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out)
                  [V1>=V1'+1,V1'>=0,Out>=0,V1'+V1'2+1=V1,Out'=0] 
* Loop 25: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=1] 
* Loop 26: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [19,20,21,22,23,24,25]:
  - RF of loop [19:1,20:1,21:1,22:1,22:2,23:1,24:1,24:2,25:1,25:2]:
    V1 depends on loops [23:2] 


### Resulting Chains:activate(V1,Out) 
* [multiple([19,20,21,22,23,24,25],[[],[26]])]...
* [26]


### Merging Chains  activate/2 into  External patterns of execution 
* [[26]] --> 1 
* [[multiple([19,20,21,22,23,24,25],[[],[26]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40,41] 
* CE 4 is refined into CE [42,43] 
* CE 5 is refined into CE [44,45] 
* CE 6 is refined into CE [46,47] 
* CE 7 is refined into CE [48,49] 


#### Refined cost equations start/2 
* CE 39: start(V1,V) = 1
     [V1>=0] 
* CE 40: start(V1,V) = 2+ activate(W1,W1):1
     [V1>=W1+1,W1>=0] 
* CE 41: start(V1,V) = 2+ activate(W1,X1):2
     [V1>=W1+1,X1>=0,W1>=1] 
* CE 42: start(V1,V) = 0+ fst(W1,V,X1):1
     [V>=0,X1=1,W1=0,V1=0] 
* CE 43: start(V1,V) = 0+ fst(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 44: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 45: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 46: start(V1,V) = 0+ add(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 47: start(V1,V) = 0+ add(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 48: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 49: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=0,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [41,49] --> Loop 27 
* CEs [39,40,42,43,44,45,46,47,48] --> Loop 28 

#### Loops of start/2 
* Loop 27: start(V1,V) [V1>=1] 
* Loop 28: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [28]
* [27]...


### Merging Chains  start/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of add(V1,V,Out):
* Chain [14]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [13]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of chains of from(V1,Out):
* Chain [16]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [15]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of chains of fst(V1,V,Out):
* Chain [18]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [17]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of loops [19,20,21,22,23,24,25] 

 * loop 19:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 20:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 21:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 22:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 23:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
3
 * loop 24:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 25:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
#### Cost of phase [19,20,21,22,23,24,25]:activate(V1,Out) -> [] 
12*it(19)+3*it(23)+2*it([26])+0
#### Cost of chains of activate(V1,Out):
* Chain [multiple([19,20,21,22,23,24,25],[[],[26]])]...: 12*it(19)+3*it(23)+2*it([26])+0
  with precondition: [V1>=1,Out>=0] 

* Chain [26]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [28]: 4
  with precondition: [V1>=0] 

* Chain [27]...: 1*aux(16)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [28] with precondition: [V1>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [27]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 56 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 47 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 167 ms.

