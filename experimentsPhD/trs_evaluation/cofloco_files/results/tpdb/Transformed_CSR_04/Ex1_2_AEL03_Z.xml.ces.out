
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [from/2]
2. non_recursive  : [activate/2]
3. non_recursive  : [fun/3]
4. non_recursive  : [fun1/3]
5. non_recursive  : [pi/2]
6. recursive  : [plus/3]
7. recursive [non_tail] : [times/3]
8. non_recursive  : [square/2]
9. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into from/2
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into fun/3
4. SCC is partially evaluated into fun1/3
5. SCC is partially evaluated into pi/2
6. SCC is partially evaluated into plus/3
7. SCC is partially evaluated into times/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 12 is refined into CE [25] 
* CE 11 is refined into CE [26] 


#### Refined cost equations from/2 
* CE 25: from(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 26: from(V,Out) = 2
     [Out>=3,Out=2*V+3] 

### Cost equations --> "Loop" of from/2 
* CEs [25] --> Loop 15 
* CEs [26] --> Loop 16 

#### Loops of from/2 
* Loop 15: from(V,Out) [V>=0,V+1=Out] 
* Loop 16: from(V,Out) [V>=0,2*V+3=Out] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 


### Resulting Chains:from(V,Out) 
* [16]
* [15]


### Merging Chains  from/2 into  External patterns of execution 
* [[15]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations activate/2 
* CE 22 is refined into CE [27,28] 
* CE 23 is refined into CE [29] 
* CE 24 is refined into CE [30] 


#### Refined cost equations activate/2 
* CE 27: activate(A,A) = 1+ from(B,A):1
     [A>=1,A=B+1] 
* CE 28: activate(V,Out) = 1+ from(W,Out):2
     [Out>=3,Out=2*W+3,Out=2*V+1] 
* CE 29: activate(A,A) = 2
     [A>=1] 
* CE 30: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [28] --> Loop 17 
* CEs [27,29,30] --> Loop 18 

#### Loops of activate/2 
* Loop 17: activate(V,Out) [V>=1,2*V+1=Out] 
* Loop 18: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [18]
* [17]


### Merging Chains  activate/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations fun/3 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


#### Refined cost equations fun/3 
* CE 31: fun(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 32: fun(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [31] --> Loop 19 
* CEs [32] --> Loop 20 

#### Loops of fun/3 
* Loop 19: fun(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 20: fun(V,V1,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR fun(V,V1,Out) 

#### Partial ranking functions of CR fun(V,V1,Out) 


### Resulting Chains:fun(V,V1,Out) 
* [20]
* [19]


### Merging Chains  fun/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations fun1/3 
* CE 16 is refined into CE [33] 
* CE 15 is refined into CE [34] 


#### Refined cost equations fun1/3 
* CE 33: fun1(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 34: fun1(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of fun1/3 
* CEs [33] --> Loop 21 
* CEs [34] --> Loop 22 

#### Loops of fun1/3 
* Loop 21: fun1(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 22: fun1(V,V1,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR fun1(V,V1,Out) 

#### Partial ranking functions of CR fun1(V,V1,Out) 


### Resulting Chains:fun1(V,V1,Out) 
* [22]
* [21]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations pi/2 
* CE 17 is refined into CE [35,36,37,38] 


#### Refined cost equations pi/2 
* CE 35: pi(V,Out) = 1+ from(W,X):1+ fun(Y,Z,A1):1
     [A1=1,Z=1,Y=0,X=1,W=0,Out=1,V=0] 
* CE 36: pi(V,Out) = 1+ from(W,X):1+ fun(V,Y,Z):2
     [V>=0,Z=0,Y=1,X=1,W=0,Out=0] 
* CE 37: pi(V,Out) = 1+ from(W,X):2+ fun(Y,Z,A1):1
     [A1=1,Z=3,Y=0,X=3,W=0,Out=1,V=0] 
* CE 38: pi(V,Out) = 1+ from(W,X):2+ fun(V,Y,Z):2
     [V>=0,Z=0,Y=3,X=3,W=0,Out=0] 

### Cost equations --> "Loop" of pi/2 
* CEs [36,38] --> Loop 23 
* CEs [35,37] --> Loop 24 

#### Loops of pi/2 
* Loop 23: pi(V,Out) [V>=0,Out=0] 
* Loop 24: pi(V,Out) [Out=1,V=0] 

### Ranking functions of CR pi(V,Out) 

#### Partial ranking functions of CR pi(V,Out) 


### Resulting Chains:pi(V,Out) 
* [24]
* [23]


### Merging Chains  pi/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations plus/3 
* CE 19 is refined into CE [39] 
* CE 18 is refined into CE [40] 


#### Refined cost equations plus/3 
* CE 39: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 40: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [40] --> Loop 25 
* CEs [39] --> Loop 26 

#### Loops of plus/3 
* Loop 25: plus(A,B,B) [B>=0,A=0] 
* Loop 26: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [26]: [V]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[26],25]
* [25]


### Merging Chains  plus/3 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[26]]] --> 2 


### Specialization of cost equations times/3 
* CE 21 is refined into CE [41,42] 
* CE 20 is refined into CE [43] 


#### Refined cost equations times/3 
* CE 41: times(V,V1,Out) = 1+ times(W1,X1,Out)+ plus(Y1,Out,Out):1
     [W1>=0,Out>=0,W1+1=V,X1=0,Y1=0,V1=0] 
* CE 42: times(V,V1,Out) = 1+ times(W1,V1,X1)+ plus(V1,Y1,Out):2
     [Out>=V1,W1>=0,V1>=1,Out=V1+X1,Out=V1+Y1,W1+1=V] 
* CE 43: times(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 

### Cost equations --> "Loop" of times/3 
* CEs [43] --> Loop 27 
* CEs [42] --> Loop 28 
* CEs [41] --> Loop 29 

#### Loops of times/3 
* Loop 27: times(V,V1,Out) [V1>=0,Out=0,V=0] 
* Loop 28: times(V,V1,Out)->  times(V',V1,Out')
                  [Out>=V1,V1>=1,V>=1,V1+Out'=Out,V=V'+1] 
* Loop 29: times(V,V1,Out)->  times(V',V1',Out)
                  [Out>=0,V>=1,V=V'+1,V1'=0,V1=0] 

### Ranking functions of CR times(V,V1,Out) 
* RF of phase [28]: [V]
* RF of phase [29]: [V]

#### Partial ranking functions of CR times(V,V1,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V


### Resulting Chains:times(V,V1,Out) 
* [[29],27]
* [[28],27]
* [27]


### Merging Chains  times/3 into  External patterns of execution 
* [[27]] --> 1 
* [[27,[29]]] --> 2 
* [[27,[28]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [44,45] 
* CE 3 is refined into CE [46,47] 
* CE 4 is refined into CE [48,49] 
* CE 5 is refined into CE [50,51] 
* CE 6 is refined into CE [52,53] 
* CE 7 is refined into CE [54,55,56] 
* CE 8 is refined into CE [57,58] 
* CE 9 is refined into CE [59] 
* CE 10 is refined into CE [60,61] 


#### Refined cost equations start/2 
* CE 44: start(V,V1) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 45: start(V,V1) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V+3] 
* CE 46: start(V,V1) = 0+ fun(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 47: start(V,V1) = 0+ fun(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 48: start(V,V1) = 0+ fun1(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 49: start(V,V1) = 0+ fun1(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 50: start(V,V1) = 0+ pi(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 51: start(V,V1) = 0+ pi(V,W1):2
     [V>=0,W1=0] 
* CE 52: start(V,V1) = 0+ plus(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 53: start(V,V1) = 0+ plus(V,W1,X1):2
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 54: start(V,V1) = 0+ times(W1,V1,X1):1
     [V1>=0,X1=0,W1=0,V=0] 
* CE 55: start(V,V1) = 0+ times(V,W1,X1):2
     [V>=1,X1=0,W1=0,V1=0] 
* CE 56: start(V,V1) = 0+ times(V,V1,W1):3
     [W1+1>=V+V1,V1>=1,V>=1] 
* CE 57: start(V,V1) = 1+ times(W1,X1,Y1):1
     [Y1=0,X1=0,W1=0,V=0] 
* CE 58: start(V,V1) = 1+ times(V,V,W1):3
     [W1+1>=2*V,V>=1] 
* CE 59: start(V,V1) = 1
     [V1>=0,V>=0] 
* CE 60: start(V,V1) = 0+ activate(V,V):1
     [V>=0] 
* CE 61: start(V,V1) = 0+ activate(W1,X1):2
     [X1>=3,X1=2*W1+1,X1=2*V+1] 

### Cost equations --> "Loop" of start/2 
* CEs [55] --> Loop 30 
* CEs [44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61] --> Loop 31 

#### Loops of start/2 
* Loop 30: start(V,V1) [V>=1,V1=0] 
* Loop 31: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [31]
* [30]


### Merging Chains  start/2 into  External patterns of execution 
* [[30],[31]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V,Out):
* Chain [16]: 2
  with precondition: [2*V+3=Out,V>=0] 

* Chain [15]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of activate(V,Out):
* Chain [18]: 2
  with precondition: [V=Out,V>=0] 

* Chain [17]: 3
  with precondition: [2*V+1=Out,V>=1] 


#### Cost of chains of fun(V,V1,Out):
* Chain [20]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of fun1(V,V1,Out):
* Chain [22]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [21]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of pi(V,Out):
* Chain [24]: 4
  with precondition: [V=0,Out=1] 

* Chain [23]: 3
  with precondition: [Out=0,V>=0] 


#### Cost of loops [26] 

 * loop 26:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [26]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'

#### Cost of chains of plus(V,V1,Out):
* Chain [[26],25]: 1*it(26)+1
  Such that:it(26) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [25]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [29] 

 * loop 29:times(V,V1,Out) -> [times(V',V1',Out')] 
2
#### Cost of phase [29]:times(V,V1,Out) -> [times(V',V1',Out')] 
2*it(29)+0
  Such that:it(29) =< V
it(29) =< V-V'

#### Cost of loops [28] 

 * loop 28:times(V,V1,Out) -> [times(V',V1',Out')] 
1*s(2)+2
  Such that:s(2) =< V1'

#### Cost of phase [28]:times(V,V1,Out) -> [times(V',V1',Out')] 
2*it(28)+1*s(3)+0
  Such that:it(28) =< V
it(28) =< V-V'
aux(1) =< V1
s(3) =< it(28)*aux(1)

#### Cost of chains of times(V,V1,Out):
* Chain [[29],27]: 2*it(29)+1
  Such that:it(29) =< V

  with precondition: [V1=0,Out=0,V>=1] 

* Chain [[28],27]: 2*it(28)+1*s(3)+1
  Such that:it(28) =< V
aux(1) =< V1
s(3) =< it(28)*aux(1)

  with precondition: [V>=1,V1>=1,Out+1>=V+V1] 

* Chain [27]: 1
  with precondition: [V=0,Out=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [31]: 5*s(4)+1*s(7)+1*s(10)+4
  Such that:s(6) =< V1
aux(3) =< V
s(4) =< aux(3)
s(10) =< s(4)*aux(3)
s(7) =< s(4)*s(6)

  with precondition: [V>=0] 

* Chain [30]: 2*s(11)+1
  Such that:s(11) =< V

  with precondition: [V1=0,V>=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [31] with precondition: [V>=0] 
    - Upper bound: 5*V+4+V*V+nat(V1)*V 
    - Complexity: n^2 
* Chain [30] with precondition: [V1=0,V>=1] 
    - Upper bound: 2*V+1 
    - Complexity: n 

### Maximum cost of start(V,V1): 3*V+3+V*V+nat(V1)*V+ (2*V+1) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 56 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 39 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 156 ms.

