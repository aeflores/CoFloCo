
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun4/3,mark/2]  
 Merged into fun4mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun/2,fun1/2,fun2/2,fun3/3,fun4mark/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into fun4mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun4mark/3 
* CE 19 is refined into CE [24] 
* CE 23 is refined into CE [25] 
* CE 22 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 21 is refined into CE [28] 
* CE 17 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 20 is refined into CE [31] 
* CE 15 is refined into CE [32] 
* CE 18 is refined into CE [33] 
* CE 9 is refined into CE [34] 
* CE 16 is refined into CE [35] 
* CE 13 is refined into CE [36] 
* CE 14 is refined into CE [37] 
* CE 11 is refined into CE [38] 


#### Refined cost equations fun4mark/3 
* CE 24: fun4mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 25: fun4mark(A,B,C) = 1
     [C=1,A=1] 
* CE 26: fun4mark(A,B,C) = 1
     [C=0,A=0] 
* CE 27: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)
     [F>=0,D>=0,F+1=C,D+1=A] 
* CE 28: fun4mark(A,B,C) = 1+ fun4mark(D,E,F)
     [A+F>=C,C>=F+1,A+F=C+D] 
* CE 29: fun4mark(A,B,C) = 1+ fun4mark(D,E,C)
     [B>=D+1,D>=0,A=0] 
* CE 30: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)+ fun4mark(G,H,I)+ fun4mark(J,K,L)
     [C+J>=I+L+1,I>=J+1,J>=0,G>=0,D>=0,F+I+L=C+J,D+G+1=A] 
* CE 31: fun4mark(A,B,C) = 1+ fun4mark(D,E,F)+ fun4mark(G,H,I)+ fun4mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 32: fun4mark(A,B,C) = 3+ fun4mark(D,E,F)+ fun4mark(G,H,I)+ fun4mark(J,K,C)
     [I>=J+1,F>=G+1,J>=0,G>=0,D>=0,D+1=A] 
* CE 33: fun4mark(A,B,C) = 1+ fun4mark(D,E,F)+ fun4mark(G,H,I)+ fun4mark(F,I,C)
     [B>=G+1,G>=0,D>=0,D+1=A] 
* CE 34: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)+ fun4mark(G,H,I)
     [I>=0,G>=0,F>=0,D>=0,F+I+1=C,D+G+1=A] 
* CE 35: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)+ fun4mark(G,H,C)
     [F>=G+1,G>=0,D>=0,D+1=A] 
* CE 36: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)+ fun4mark(F,G,H)
     [F>=0,D>=0,F+H+3=C,D+1=A] 
* CE 37: fun4mark(A,B,C) = 3+ fun4mark(D,E,F)+ fun4mark(G,H,I)
     [F>=G+1,I>=0,G>=0,D>=0,I+1=C,D+1=A] 
* CE 38: fun4mark(A,B,C) = 2+ fun4mark(D,E,F)+ fun4mark(G,H,I)
     [I>=0,G>=0,D>=0,D+G+1=A,F=0,C=1] 

### Cost equations --> "Loop" of fun4mark/3 
* CEs [34] --> Loop 16 
* CEs [35] --> Loop 17 
* CEs [36] --> Loop 18 
* CEs [37] --> Loop 19 
* CEs [38] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [27,28] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [24] --> Loop 27 
* CEs [25] --> Loop 28 
* CEs [26] --> Loop 29 

#### Loops of fun4mark/3 
* Loop 16: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)
                  [C>=C'+1,A>=A'+1,C'>=0,A'>=0,C'+C'2+1=C,A'+A'2+1=A] 
* Loop 17: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C)
                  [C'>=A'2+1,A'2>=0,A>=1,A=A'+1] 
* Loop 18: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(C',A'2,B'2)
                  [C'>=0,A>=1,C'+B'2+3=C,A=A'+1] 
* Loop 19: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)
                  [C'>=A'2+1,A'2>=0,C>=1,A>=1,C=C'2+1,A=A'+1] 
* Loop 20: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)
                  [A>=A'+1,C'2>=0,A'>=0,A'+A'2+1=A,C'=0,C=1] 
* Loop 21: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)  fun4mark(A'3,B'3,C'3)
                  [C'2>=A'3+1,A>=A'+1,A'3>=0,C'>=1,A'>=0,C'+C'2+C'3=C+A'3,A'+A'2+1=A] 
* Loop 22: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)  fun4mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 23: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)  fun4mark(A'3,B'3,C)
                  [C'2>=A'3+1,C'>=A'2+1,A'3>=0,A'2>=0,A>=1,A=A'+1] 
* Loop 24: fun4mark(A,B,C)->  fun4mark(A',B',C')  fun4mark(A'2,B'2,C'2)  fun4mark(C',C'2,C)
                  [B>=A'2+1,A'2>=0,A>=1,A=A'+1] 
* Loop 25: fun4mark(A,B,C)->  fun4mark(A',B',C')
                  [A>=A'+1,A'>=0,C+A'=A+C'] 
* Loop 26: fun4mark(A,B,C)->  fun4mark(A',B',C)
                  [B>=A'+1,A'>=0,A=0] 
* Loop 27: fun4mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 28: fun4mark(A,B,C) [C=1,A=1] 
* Loop 29: fun4mark(A,B,C) [C=0,A=0] 

### Ranking functions of CR fun4mark(A,B,C) 

#### Partial ranking functions of CR fun4mark(A,B,C) 
* Partial RF of phase [16,17,18,19,20,21,22,23,24,25,26]:
  - RF of loop [16:1,16:2,17:1,18:1,19:1,20:1,20:2,21:1,21:2,22:1,22:2,23:1,24:1,25:1]:
    A depends on loops [17:2,18:2,19:2,21:3,22:3,23:2,23:3,24:2,24:3,26:1] 


### Resulting Chains:fun4mark(A,B,C) 
* [multiple([16,17,18,19,20,21,22,23,24,25,26],[[],[29],[28],[27]])]...
* [29]
* [28]
* [27]


### Merging Chains  fun4mark/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[multiple([16,17,18,19,20,21,22,23,24,25,26],[[],[29],[28],[27]])]] --> 4 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40,41,42,43] 
* CE 4 is refined into CE [44,45,46,47] 
* CE 5 is refined into CE [48,49,50,51] 
* CE 6 is refined into CE [52,53,54,55,56,57,58,59] 
* CE 7 is refined into CE [60,61,62,63] 
* CE 8 is refined into CE [64,65,66,67] 


#### Refined cost equations start/2 
* CE 39: start(V,V1) = 1
     [V>=0] 
* CE 40: start(V,V1) = 1+ fun4mark(W1,X1,Y1):1
     [V1>=1,V>=1,Y1=0,W1=0] 
* CE 41: start(V,V1) = 1+ fun4mark(W1,X1,Y1):2
     [V1>=2,V>=1,Y1=1,W1=1] 
* CE 42: start(V,V1) = 1+ fun4mark(W1,X1,Y1):3
     [Y1>=W1+1,V1>=W1+1,W1>=0,V>=1,Y1=W1+X1+1] 
* CE 43: start(V,V1) = 1+ fun4mark(W1,X1,Y1):4
     [V1>=W1+1,W1>=0,V>=1] 
* CE 44: start(V,V1) = 1+ fun4mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 45: start(V,V1) = 1+ fun4mark(W1,X1,Y1):2
     [Y1=1,W1=1,V=1] 
* CE 46: start(V,V1) = 1+ fun4mark(V,W1,X1):3
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 47: start(V,V1) = 1+ fun4mark(V,W1,X1):4
     [V>=0] 
* CE 48: start(V,V1) = 2+ fun4mark(W1,X1,Y1):1
     [V>=1,Y1=0,W1=0] 
* CE 49: start(V,V1) = 2+ fun4mark(W1,X1,Y1):2
     [V>=2,Y1=1,W1=1] 
* CE 50: start(V,V1) = 2+ fun4mark(W1,X1,Y1):3
     [Y1>=W1+1,V>=W1+1,W1>=0,Y1=W1+X1+1] 
* CE 51: start(V,V1) = 2+ fun4mark(W1,X1,Y1):4
     [V>=W1+1,Y1>=0,W1>=0] 
* CE 52: start(V,V1) = 2+ fun4mark(W1,X1,Y1):2+ fun4mark(Z1,A2,B2):1
     [V>=2,B2=0,Z1=0,Y1=1,W1=1] 
* CE 53: start(V,V1) = 2+ fun4mark(W1,X1,Y1):2+ fun4mark(Z1,A2,B2):3
     [B2>=1,V>=2,B2=A2+1,Z1=0,Y1=1,W1=1] 
* CE 54: start(V,V1) = 2+ fun4mark(W1,X1,Y1):2+ fun4mark(Z1,A2,B2):4
     [V>=2,Z1=0,Y1=1,W1=1] 
* CE 55: start(V,V1) = 2+ fun4mark(W1,X1,Y1):3+ fun4mark(Z1,A2,B2):1
     [Y1>=W1+1,V>=W1+1,W1>=0,Y1=W1+X1+1,B2=0,Z1=0] 
* CE 56: start(V,V1) = 2+ fun4mark(W1,X1,Y1):3+ fun4mark(Z1,A2,B2):2
     [Y1>=W1+1,V>=W1+1,Y1>=2,W1>=0,Y1=W1+X1+1,B2=1,Z1=1] 
* CE 57: start(V,V1) = 2+ fun4mark(W1,X1,Y1):3+ fun4mark(Z1,A2,B2):3
     [B2>=Z1+1,Y1>=Z1+1,Y1>=W1+1,V>=W1+1,Z1>=0,W1>=0,B2=Z1+A2+1,Y1=W1+X1+1] 
* CE 58: start(V,V1) = 2+ fun4mark(W1,X1,Y1):3+ fun4mark(Z1,A2,B2):4
     [Y1>=Z1+1,Y1>=W1+1,V>=W1+1,Z1>=0,W1>=0,Y1=W1+X1+1] 
* CE 59: start(V,V1) = 2+ fun4mark(W1,X1,Y1):4
     [Y1>=Z1+1,V>=W1+1,Z1>=0,W1>=0] 
* CE 60: start(V,V1) = 1+ fun4mark(W1,X1,Y1):1
     [V>=1,Y1=0,W1=0] 
* CE 61: start(V,V1) = 1+ fun4mark(W1,X1,Y1):2
     [V>=2,Y1=1,W1=1] 
* CE 62: start(V,V1) = 1+ fun4mark(W1,X1,Y1):3
     [Y1>=W1+1,V>=W1+1,W1>=0,Y1=W1+X1+1] 
* CE 63: start(V,V1) = 1+ fun4mark(W1,X1,Y1):4
     [V>=W1+1,W1>=0] 
* CE 64: start(V,V1) = 0+ fun4mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 65: start(V,V1) = 0+ fun4mark(W1,X1,Y1):2
     [Y1=1,W1=1,V=1] 
* CE 66: start(V,V1) = 0+ fun4mark(V,W1,X1):3
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 67: start(V,V1) = 0+ fun4mark(V,W1,X1):4
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [43,47,51,54,58,59,63,67] --> Loop 30 
* CEs [45,65] --> Loop 31 
* CEs [39,40,41,42,44,46,48,49,50,52,53,55,56,57,60,61,62,64,66] --> Loop 32 

#### Loops of start/2 
* Loop 30: start(V,V1) [V>=0] 
* Loop 31: start(V,V1) [V=1] 
* Loop 32: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [32]
* [31]
* [30]...


### Merging Chains  start/2 into  External patterns of execution 
* [[31],[32]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16,17,18,19,20,21,22,23,24,25,26] 

 * loop 16:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2)] 
2
 * loop 17:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2)] 
2
 * loop 18:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2)] 
2
 * loop 19:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2)] 
3
 * loop 20:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2)] 
2
 * loop 21:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2),fun4mark(A'3,B'3,C'3)] 
2
 * loop 22:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2),fun4mark(A'3,B'3,C'3)] 
1
 * loop 23:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2),fun4mark(A'3,B'3,C'3)] 
3
 * loop 24:fun4mark(A,B,C) -> [fun4mark(A',B',C'),fun4mark(A'2,B'2,C'2),fun4mark(A'3,B'3,C'3)] 
1
 * loop 25:fun4mark(A,B,C) -> [fun4mark(A',B',C')] 
2
 * loop 26:fun4mark(A,B,C) -> [fun4mark(A',B',C')] 
1
#### Cost of phase [16,17,18,19,20,21,22,23,24,25,26]:fun4mark(A,B,C) -> [] 
7*it(16)+15*it(17)+2*it([27])+0
#### Cost of chains of fun4mark(A,B,C):
* Chain [multiple([16,17,18,19,20,21,22,23,24,25,26],[[],[29],[28],[27]])]...: 7*it(16)+15*it(17)+2*it([27])+0
  with precondition: [A>=0] 

* Chain [29]: 1
  with precondition: [A=0,C=0] 

* Chain [28]: 1
  with precondition: [A=1,C=1] 

* Chain [27]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V,V1):
* Chain [32]: 4
  with precondition: [V>=0] 

* Chain [31]: 2
  with precondition: [V=1] 

* Chain [30]...: 1*aux(36)+0
  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [32] with precondition: [V>=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [31] with precondition: [V=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [30]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 36 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 103 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 179 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 165 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 408 ms.

