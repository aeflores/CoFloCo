
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun3/1]
1. non_recursive  : [plus/3]
2. non_recursive  : [s/2]
3. non_recursive  : [x/3]
4. recursive [multiple] : [activate/2,and/3,isNat/2]
5. non_recursive  : [fun/3]
6. non_recursive  : [fun1/4]
7. non_recursive  : [fun2/2]
8. non_recursive  : [fun4/4]
9. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into isNat/2
5. SCC is partially evaluated into fun/3
6. SCC is partially evaluated into fun1/4
7. SCC is partially evaluated into fun2/2
8. SCC is partially evaluated into fun4/4
9. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations isNat/2 
* CE 79 is refined into CE [139] 
* CE 33 is refined into CE [140] 
* CE 34 is refined into CE [141] 
* CE 36 is refined into CE [142] 
* CE 42 is refined into CE [143] 
* CE 43 is refined into CE [144] 
* CE 45 is refined into CE [145] 
* CE 46 is refined into CE [146] 
* CE 48 is refined into CE [147] 
* CE 54 is refined into CE [148] 
* CE 67 is refined into CE [149] 
* CE 69 is refined into CE [150] 
* CE 70 is refined into CE [151] 
* CE 72 is refined into CE [152] 
* CE 78 is refined into CE [153] 
* CE 19 is refined into CE [154] 
* CE 27 is refined into CE [155] 
* CE 31 is refined into CE [156] 
* CE 80 is refined into CE [157] 
* CE 81 is refined into CE [158] 
* CE 83 is refined into CE [159] 
* CE 15 is refined into CE [160] 
* CE 16 is refined into CE [161] 
* CE 18 is refined into CE [162] 
* CE 20 is refined into CE [163] 
* CE 22 is refined into CE [164] 
* CE 28 is refined into CE [165] 
* CE 30 is refined into CE [166] 
* CE 82 is refined into CE [167] 
* CE 50 is refined into CE [168] 
* CE 74 is refined into CE [169] 
* CE 44 is refined into CE [170] 
* CE 68 is refined into CE [171] 
* CE 38 is refined into CE [172] 
* CE 40 is refined into CE [173] 
* CE 55 is refined into CE [174] 
* CE 57 is refined into CE [175] 
* CE 58 is refined into CE [176] 
* CE 60 is refined into CE [177] 
* CE 66 is refined into CE [178] 
* CE 23 is refined into CE [179] 
* CE 24 is refined into CE [180] 
* CE 26 is refined into CE [181] 
* CE 49 is refined into CE [182] 
* CE 52 is refined into CE [183] 
* CE 73 is refined into CE [184] 
* CE 76 is refined into CE [185] 
* CE 17 is refined into CE [186] 
* CE 21 is refined into CE [187] 
* CE 29 is refined into CE [188] 
* CE 37 is refined into CE [189] 
* CE 32 is refined into CE [190] 
* CE 35 is refined into CE [191] 
* CE 41 is refined into CE [192] 
* CE 47 is refined into CE [193] 
* CE 53 is refined into CE [194] 
* CE 71 is refined into CE [195] 
* CE 77 is refined into CE [196] 
* CE 62 is refined into CE [197] 
* CE 64 is refined into CE [198] 
* CE 56 is refined into CE [199] 
* CE 59 is refined into CE [200] 
* CE 65 is refined into CE [201] 
* CE 39 is refined into CE [202] 
* CE 51 is refined into CE [203] 
* CE 75 is refined into CE [204] 
* CE 25 is refined into CE [205] 
* CE 61 is refined into CE [206] 
* CE 63 is refined into CE [207] 


#### Refined cost equations isNat/2 
* CE 139: isNat(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 140: isNat(A,A) = 7+ isNat(B,C)
     [A>=1,C=1,B=0] 
* CE 141: isNat(A,A) = 8+ isNat(B,C)
     [A>=2,C=1,B=0] 
* CE 142: isNat(A,A) = 7+ isNat(B,C)
     [A>=1,C=1,B=0] 
* CE 143: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 144: isNat(V3,Out) = 8+ isNat(W3,X3)
     [V3>=2,V3=W3+1,X3=1,Out=1] 
* CE 145: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+1,W3>=1,V3=Out+W3,X3=1] 
* CE 146: isNat(V3,Out) = 8+ isNat(W3,X3)
     [V3>=W3+2,W3>=1,V3=Out+W3,X3=1] 
* CE 147: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+1,W3>=1,V3=Out+W3,X3=1] 
* CE 148: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 149: isNat(V3,Out) = 7+ isNat(W3,X3)
     [W3>=0,W3+1=V3,X3=1,Out=1] 
* CE 150: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 151: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+2,W3>=0,V3=Out+W3,X3=1] 
* CE 152: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+2,W3>=0,V3=Out+W3,X3=1] 
* CE 153: isNat(V3,Out) = 5+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 154: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,V3>=2,V3=W3+1,Out=0] 
* CE 155: isNat(V3,Out) = 4+ isNat(W3,X3)
     [X3>=0,W3>=0,W3+1=V3,Out=0] 
* CE 156: isNat(V3,Out) = 8+ isNat(W3,X3)
     [X3=1,W3=0,Out=1,V3=1] 
* CE 157: isNat(V3,Out) = 3+ isNat(W3,Out)
     [W3=0,V3=1] 
* CE 158: isNat(V3,Out) = 3+ isNat(W3,Out)
     [V3>=2,V3=W3+1] 
* CE 159: isNat(V3,Out) = 2+ isNat(W3,Out)
     [W3>=0,W3+1=V3] 
* CE 160: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,W3=0,Out=0,V3=1] 
* CE 161: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,V3>=2,W3=0,Out=0] 
* CE 162: isNat(V3,Out) = 4+ isNat(W3,X3)
     [X3>=0,V3>=1,W3=0,Out=0] 
* CE 163: isNat(V3,Out) = 5+ isNat(W3,X3)
     [V3>=W3+2,X3>=0,W3>=1,Out=0] 
* CE 164: isNat(V3,Out) = 4+ isNat(W3,X3)
     [V3>=W3+1,X3>=0,W3>=1,Out=0] 
* CE 165: isNat(V3,Out) = 4+ isNat(W3,X3)
     [V3>=W3+2,X3>=0,W3>=0,Out=0] 
* CE 166: isNat(V3,Out) = 3+ isNat(W3,X3)
     [V3>=W3+1,X3>=0,W3>=0,Out=0] 
* CE 167: isNat(V3,Out) = 2+ isNat(W3,X3)+ isNat(X3,Out)
     [V3>=2,V3=W3+2] 
* CE 168: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Z3>=0,Y3>=0,V3=W3+Y3+2,Z3+1=Out,X3=1] 
* CE 169: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Z3>=0,Y3>=0,W3+Y3+2=V3,Z3+1=Out,X3=1] 
* CE 170: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=2,V3=W3+1,Y3=0,X3=1] 
* CE 171: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [W3>=0,W3+1=V3,Y3=0,X3=1] 
* CE 172: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Z3>=0,V3>=2,V3=Y3+2,Z3+1=Out,X3=1,W3=0] 
* CE 173: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Out>=0,V3>=2,Out=Z3+1,V3=Y3+2,X3=1,W3=0] 
* CE 174: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=2,V3=W3+2,Y3=1,Out=1] 
* CE 175: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 176: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+3,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 177: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 178: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 179: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(X3,Y3)
     [Y3>=0,V3>=2,V3=W3+2,Out=0] 
* CE 180: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+3,Y3>=0,W3>=0,Out=0] 
* CE 181: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,Y3>=0,W3>=0,Out=0] 
* CE 182: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Y3>=0,V3=W3+Y3+2,Z3+1=0,X3=1,Out=0] 
* CE 183: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Y3>=0,Out>=0,V3=W3+Y3+2,Out=Z3+1,X3=1] 
* CE 184: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Y3>=0,W3+Y3+2=V3,Z3+1=0,X3=1,Out=0] 
* CE 185: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Y3>=0,Out>=0,W3+Y3+2=V3,Out=Z3+1,X3=1] 
* CE 186: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Z3+1>=0,X3>=0,V3>=2,V3=Y3+2,W3=0,Out=0] 
* CE 187: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Z3+1>=0,Y3>=0,X3>=0,V3=W3+Y3+2,Out=0] 
* CE 188: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Z3+1>=0,Y3>=0,X3>=0,W3+Y3+2=V3,Out=0] 
* CE 189: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=2,V3=Y3+2,Z3+1=0,X3=1,W3=0,Out=0] 
* CE 190: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [Y3=0,X3=1,W3=0,V3=1] 
* CE 191: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=2,V3=Y3+1,X3=1,W3=0] 
* CE 192: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [Y3>=0,Y3+1=V3,X3=1,W3=0] 
* CE 193: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+2,Y3>=1,V3=W3+Y3+1,X3=1] 
* CE 194: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+2,Y3>=0,V3=W3+Y3+1,X3=1] 
* CE 195: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+1,Y3>=1,V3=W3+Y3+1,X3=1] 
* CE 196: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+1,Y3>=0,W3+Y3+1=V3,X3=1] 
* CE 197: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,A4>=0,Z3>=0,W3+Z3+3=V3,A4+1=Out,Y3=1] 
* CE 198: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,Z3>=0,Out>=0,W3+Z3+3=V3,Out=A4+1,Y3=1] 
* CE 199: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=2,V3=W3+2,Z3=0,Y3=1] 
* CE 200: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=Z3+2,Z3>=1,V3=W3+Z3+2,Y3=1] 
* CE 201: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=Z3+2,Z3>=0,W3+Z3+2=V3,Y3=1] 
* CE 202: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [Z3>=0,V3>=2,V3=Y3+2,X3=1,W3=0] 
* CE 203: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [V3>=Y3+3,Z3>=0,Y3>=0,V3=W3+Y3+2,X3=1] 
* CE 204: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [V3>=Y3+2,Z3>=0,Y3>=0,W3+Y3+2=V3,X3=1] 
* CE 205: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,A4+1>=0,Z3>=0,Y3>=0,W3+Z3+3=V3,Out=0] 
* CE 206: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,Z3>=0,W3+Z3+3=V3,A4+1=0,Y3=1,Out=0] 
* CE 207: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)+ isNat(A4,Out)
     [V3>=Z3+3,A4>=0,Z3>=0,W3+Z3+3=V3,Y3=1] 

### Cost equations --> "Loop" of isNat/2 
* CEs [207] --> Loop 40 
* CEs [197,198] --> Loop 41 
* CEs [199,200,201] --> Loop 42 
* CEs [202,203,204] --> Loop 43 
* CEs [205,206] --> Loop 44 
* CEs [167] --> Loop 45 
* CEs [168,169] --> Loop 46 
* CEs [170,171] --> Loop 47 
* CEs [172,173] --> Loop 48 
* CEs [174,175,176,177,178] --> Loop 49 
* CEs [179,180,181] --> Loop 50 
* CEs [182,183,184,185] --> Loop 51 
* CEs [186,187,188,189] --> Loop 52 
* CEs [190,191,192,193,194,195,196] --> Loop 53 
* CEs [140,141,142] --> Loop 54 
* CEs [143,144,145,146,147,148,149,150,151,152,153] --> Loop 55 
* CEs [154,155] --> Loop 56 
* CEs [156,157,158,159] --> Loop 57 
* CEs [160,161,162,163,164,165,166] --> Loop 58 
* CEs [139] --> Loop 59 

#### Loops of isNat/2 
* Loop 40: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)  isNat(Out'3,Out)
                  [V3>=V3'3+3,Out'3>=0,V3'3>=0,V3=V3'+V3'3+3,A'2=1] 
* Loop 41: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)
                  [V3>=V3'+3,V3'>=0,Out>=0,V3'+V3'3+3=V3,Out=Out'3+1,A'2=1] 
* Loop 42: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out)
                  [V3>=V3'+2,V3'>=0,V3'+V3'3+2=V3,A'2=1] 
* Loop 43: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)  isNat(Out'2,Out)
                  [V3>=V3'+2,Out'2>=0,V3'>=0,V3'+V3'2+2=V3,Out'=1] 
* Loop 44: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)
                  [V3>=V3'+3,Out'3+1>=0,A'2>=0,V3'>=0,V3'+V3'3+3=V3,Out=0] 
* Loop 45: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',Out)
                  [V3>=2,V3=V3'+2] 
* Loop 46: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,V3'>=0,Out>=1,V3'+V3'2+2=V3,Out=Out'2+1,Out'=1] 
* Loop 47: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out)
                  [V3>=1,V3=V3'+1,V3'2=0,Out'=1] 
* Loop 48: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [Out>=0,V3>=2,Out=Out'2+1,V3=V3'2+2,Out'=1,V3'=0] 
* Loop 49: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)
                  [V3>=Out+1,Out>=1,Out+V3'+1=V3,A'2=1] 
* Loop 50: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)
                  [V3>=V3'+2,A'2>=0,V3'>=0,Out=0] 
* Loop 51: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,V3'>=0,Out>=0,V3'+V3'2+2=V3,Out=Out'2+1,Out'=1] 
* Loop 52: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,Out'2+1>=0,Out'>=0,V3'>=0,V3'+V3'2+2=V3,Out=0] 
* Loop 53: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out)
                  [V3>=V3'+1,V3'>=0,V3'+V3'2+1=V3,Out'=1] 
* Loop 54: isNat(A,A)->  isNat(V3',Out')
                  [A>=1,Out'=1,V3'=0] 
* Loop 55: isNat(V3,Out)->  isNat(V3',Out')
                  [V3>=Out,Out>=1,Out+V3'=V3,Out'=1] 
* Loop 56: isNat(V3,Out)->  isNat(V3',Out')
                  [Out'>=0,V3>=1,V3=V3'+1,Out=0] 
* Loop 57: isNat(V3,Out)->  isNat(V3',Out)
                  [V3>=1,V3=V3'+1] 
* Loop 58: isNat(V3,Out)->  isNat(V3',Out')
                  [V3>=V3'+1,Out'>=0,V3'>=0,Out=0] 
* Loop 59: isNat(V3,Out) [V3>=0,V3+1=Out] 

### Ranking functions of CR isNat(V3,Out) 

#### Partial ranking functions of CR isNat(V3,Out) 
* Partial RF of phase [40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58]:
  - RF of loop [40:1,40:3,41:1,41:3,44:1,44:3]:
    V3-2 depends on loops [40:2,40:4,41:2,42:2,43:3,44:2,45:2,49:2,50:2] 
  - RF of loop [42:1,42:3,43:1,43:2,45:1,46:1,46:2,48:1,48:2,49:1,50:1,51:1,51:2,52:1,52:2]:
    V3-1 depends on loops [40:2,40:4,41:2,42:2,43:3,44:2,45:2,49:2,50:2] 
  - RF of loop [47:1,47:2,53:1,53:2,55:1,56:1,57:1,58:1]:
    V3 depends on loops [40:2,40:4,41:2,42:2,43:3,44:2,45:2,49:2,50:2] 


### Resulting Chains:isNat(V3,Out) 
* [multiple([40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58],[[],[59],[54,59]])]...
* [59]
* [54,59]


### Merging Chains  isNat/2 into  External patterns of execution 
* [[59]] --> 1 
* [[59,54]] --> 2 
* [[multiple([40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58],[[],[59],[54,59]])]] --> 3 


### Specialization of cost equations fun/3 
* CE 88 is refined into CE [208] 
* CE 86 is refined into CE [209,210,211] 
* CE 84 is refined into CE [212] 
* CE 85 is refined into CE [213] 
* CE 87 is refined into CE [214] 


#### Refined cost equations fun/3 
* CE 208: fun(V3,V,Out) = 0
     [V>=0,V3>=0,Out=0] 
* CE 209: fun(A,B,B) = 2+ isNat(C,B):1
     [B>=1,B=C+1,A=1] 
* CE 210: fun(V3,V,Out) = 2+ isNat(Out,Out):2
     [Out>=1,Out+1=V,V3=1] 
* CE 211: fun(V3,V,Out) = 2+ isNat(W3,Out):3
     [W3>=1,W3+1=V,V3=1] 
* CE 212: fun(V3,V,Out) = 3
     [Out=0,V=0,V3=1] 
* CE 213: fun(A,B,B) = 3
     [B>=1,A=1] 
* CE 214: fun(A,B,B) = 2
     [B>=0,A=1] 

### Cost equations --> "Loop" of fun/3 
* CEs [208] --> Loop 60 
* CEs [210] --> Loop 61 
* CEs [209,212,213,214] --> Loop 62 
* CEs [211] --> Loop 63 

#### Loops of fun/3 
* Loop 60: fun(V3,V,Out) [V>=0,V3>=0,Out=0] 
* Loop 61: fun(V3,V,Out) [V>=2,V=Out+1,V3=1] 
* Loop 62: fun(A,B,B) [B>=0,A=1] 
* Loop 63: fun(V3,V,Out) [V>=2,V3=1] 

### Ranking functions of CR fun(V3,V,Out) 

#### Partial ranking functions of CR fun(V3,V,Out) 


### Resulting Chains:fun(V3,V,Out) 
* [63]...
* [62]
* [61]
* [60]


### Merging Chains  fun/3 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 
* [[60]] --> 3 
* [[63]] --> 4 


### Specialization of cost equations fun1/4 
* CE 105 is refined into CE [215] 
* CE 99 is refined into CE [216,217,218,219,220,221,222] 
* CE 94 is refined into CE [223] 
* CE 102 is refined into CE [224] 
* CE 91 is refined into CE [225,226,227] 
* CE 95 is refined into CE [228,229,230] 
* CE 103 is refined into CE [231,232,233] 
* CE 90 is refined into CE [234] 
* CE 92 is refined into CE [235] 
* CE 97 is refined into CE [236,237,238] 
* CE 98 is refined into CE [239,240,241] 
* CE 100 is refined into CE [242,243,244] 
* CE 89 is refined into CE [245] 
* CE 93 is refined into CE [246] 
* CE 96 is refined into CE [247] 
* CE 101 is refined into CE [248] 
* CE 104 is refined into CE [249] 


#### Refined cost equations fun1/4 
* CE 215: fun1(V3,V,V4,Out) = 0
     [V4>=0,V>=0,V3>=0,Out=0] 
* CE 216: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,V):1
     [V>=1,V4>=1,V+V4+2=Out,V=X4+1,V4=W4+1,V3=1] 
* CE 217: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,X4):2
     [X4>=1,V4>=1,V4+X4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 218: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,Y4):3
     [Out>=V4+2,X4>=1,V4>=1,V4+Y4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 219: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,V):1
     [V>=1,W4>=1,V+W4+2=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 220: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,W4+X4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 221: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=W4+2,X4>=1,W4>=1,W4+Y4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 222: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=Y4+2,Y4>=0,Z4>=0,W4>=1,Out=X4+Y4+2,W4+1=V4,Z4+1=V,V3=1] 
* CE 223: fun1(V3,V,V4,Out) = 7
     [V4>=1,V>=1,V+V4+2=Out,V3=1] 
* CE 224: fun1(V3,V,V4,Out) = 6
     [V4>=0,V>=1,V+V4+2=Out,V3=1] 
* CE 225: fun1(V3,V,V4,Out) = 6+ isNat(W4,V):1
     [V>=1,V=W4+1,V+2=Out,V4=0,V3=1] 
* CE 226: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V,V4=0,V3=1] 
* CE 227: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V,V4=0,V3=1] 
* CE 228: fun1(V3,V,V4,Out) = 6+ isNat(W4,V):1
     [V>=1,V4>=1,V+V4+2=Out,V=W4+1,V3=1] 
* CE 229: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,V4>=1,V4+W4+2=Out,W4+1=V,V3=1] 
* CE 230: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=V4+2,W4>=1,V4>=1,V4+X4+2=Out,W4+1=V,V3=1] 
* CE 231: fun1(V3,V,V4,Out) = 5+ isNat(W4,V):1
     [Out>=V+2,V>=1,V+V4+2=Out,V=W4+1,V3=1] 
* CE 232: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2
     [Out>=W4+2,W4>=1,V4+W4+2=Out,W4+1=V,V3=1] 
* CE 233: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=X4+2,X4>=0,W4>=1,Out=V4+X4+2,W4+1=V,V3=1] 
* CE 234: fun1(V3,V,V4,Out) = 7
     [V>=1,V+2=Out,V4=0,V3=1] 
* CE 235: fun1(V3,V,V4,Out) = 6
     [Out>=2,Out=V+2,V4=0,V3=1] 
* CE 236: fun1(V3,V,V4,Out) = 6+ isNat(W4,V4):1
     [V4>=1,V4=W4+1,V4+2=Out,V=0,V3=1] 
* CE 237: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V4,V=0,V3=1] 
* CE 238: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V4,V=0,V3=1] 
* CE 239: fun1(V3,V,V4,Out) = 6+ isNat(W4,V4):1
     [V4>=1,V>=1,V+V4+2=Out,V4=W4+1,V3=1] 
* CE 240: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,V>=1,V+W4+2=Out,W4+1=V4,V3=1] 
* CE 241: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=V+2,W4>=1,V>=1,V+X4+2=Out,W4+1=V4,V3=1] 
* CE 242: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1
     [Out>=V4+2,V4>=1,V+V4+2=Out,V4=W4+1,V3=1] 
* CE 243: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2
     [Out>=W4+2,W4>=1,V+W4+2=Out,W4+1=V4,V3=1] 
* CE 244: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=X4+2,X4>=0,W4>=1,Out=V+X4+2,W4+1=V4,V3=1] 
* CE 245: fun1(V3,V,V4,Out) = 7
     [Out=2,V4=0,V=0,V3=1] 
* CE 246: fun1(V3,V,V4,Out) = 7
     [V4>=1,V4+2=Out,V=0,V3=1] 
* CE 247: fun1(V3,V,V4,Out) = 6
     [Out>=V4+2,V4>=1,V+V4+2=Out,V3=1] 
* CE 248: fun1(V3,V,V4,Out) = 6
     [Out>=2,Out=V4+2,V=0,V3=1] 
* CE 249: fun1(V3,V,V4,Out) = 5
     [Out>=V4+2,V4>=0,V+V4+2=Out,V3=1] 

### Cost equations --> "Loop" of fun1/4 
* CEs [215] --> Loop 64 
* CEs [220] --> Loop 65 
* CEs [219,240] --> Loop 66 
* CEs [216,223,224,228,231,239] --> Loop 67 
* CEs [217,226,229,232] --> Loop 68 
* CEs [225,234,235] --> Loop 69 
* CEs [237,243] --> Loop 70 
* CEs [236,242,245,246,247,248,249] --> Loop 71 
* CEs [221,222] --> Loop 72 
* CEs [218,227,230,233] --> Loop 73 
* CEs [238,241,244] --> Loop 74 

#### Loops of fun1/4 
* Loop 64: fun1(V3,V,V4,Out) [V4>=0,V>=0,V3>=0,Out=0] 
* Loop 65: fun1(V3,V,V4,Out) [V4>=2,V>=2,V+V4=Out,V3=1] 
* Loop 66: fun1(V3,V,V4,Out) [V4>=2,V>=1,V+V4+1=Out,V3=1] 
* Loop 67: fun1(V3,V,V4,Out) [V4>=0,V>=1,V+V4+2=Out,V3=1] 
* Loop 68: fun1(V3,V,V4,Out) [V4>=0,V>=2,V+V4+1=Out,V3=1] 
* Loop 69: fun1(V3,V,V4,Out) [V>=0,V+2=Out,V4=0,V3=1] 
* Loop 70: fun1(V3,V,V4,Out) [V4>=2,V>=0,V+V4+1=Out,V3=1] 
* Loop 71: fun1(V3,V,V4,Out) [V4>=0,V>=0,V+V4+2=Out,V3=1] 
* Loop 72: fun1(V3,V,V4,Out) [Out>=2,V4>=2,V>=1,V3=1] 
* Loop 73: fun1(V3,V,V4,Out) [Out>=V4+2,V4>=0,V>=2,V3=1] 
* Loop 74: fun1(V3,V,V4,Out) [Out>=V+2,V4>=2,V>=0,V3=1] 

### Ranking functions of CR fun1(V3,V,V4,Out) 

#### Partial ranking functions of CR fun1(V3,V,V4,Out) 


### Resulting Chains:fun1(V3,V,V4,Out) 
* [74]...
* [73]...
* [72]...
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[67],[69],[71]] --> 1 
* [[66],[70]] --> 2 
* [[68]] --> 3 
* [[65]] --> 4 
* [[64]] --> 5 
* [[74]] --> 6 
* [[72]] --> 7 
* [[73]] --> 8 


### Specialization of cost equations fun2/2 
* CE 106 is refined into CE [250] 
* CE 107 is refined into CE [251] 


#### Refined cost equations fun2/2 
* CE 250: fun2(V3,Out) = 2
     [Out=0,V3=1] 
* CE 251: fun2(V3,Out) = 0
     [V3>=0,Out=0] 

### Cost equations --> "Loop" of fun2/2 
* CEs [250,251] --> Loop 75 

#### Loops of fun2/2 
* Loop 75: fun2(V3,Out) [V3>=0,Out=0] 

### Ranking functions of CR fun2(V3,Out) 

#### Partial ranking functions of CR fun2(V3,Out) 


### Resulting Chains:fun2(V3,Out) 
* [75]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[75]] --> 1 


### Specialization of cost equations fun4/4 
* CE 138 is refined into CE [252] 
* CE 122 is refined into CE [253,254,255,256,257,258,259] 
* CE 128 is refined into CE [260,261,262,263,264,265,266] 
* CE 129 is refined into CE [267,268,269,270,271,272,273,274,275,276,277,278,279,280,281] 
* CE 130 is refined into CE [282,283,284,285,286,287,288] 
* CE 135 is refined into CE [289,290,291,292,293,294,295] 
* CE 118 is refined into CE [296] 
* CE 134 is refined into CE [297] 
* CE 112 is refined into CE [298,299,300] 
* CE 113 is refined into CE [301,302,303] 
* CE 121 is refined into CE [304,305,306] 
* CE 123 is refined into CE [307,308,309] 
* CE 136 is refined into CE [310,311,312] 
* CE 109 is refined into CE [313] 
* CE 110 is refined into CE [314] 
* CE 111 is refined into CE [315] 
* CE 114 is refined into CE [316] 
* CE 116 is refined into CE [317,318,319] 
* CE 119 is refined into CE [320,321,322] 
* CE 124 is refined into CE [323,324,325] 
* CE 126 is refined into CE [326,327,328,329,330,331,332] 
* CE 127 is refined into CE [333,334,335,336,337,338,339] 
* CE 131 is refined into CE [340,341,342,343,344,345,346] 
* CE 132 is refined into CE [347,348,349] 
* CE 108 is refined into CE [350] 
* CE 115 is refined into CE [351] 
* CE 117 is refined into CE [352] 
* CE 120 is refined into CE [353] 
* CE 125 is refined into CE [354] 
* CE 133 is refined into CE [355] 
* CE 137 is refined into CE [356] 


#### Refined cost equations fun4/4 
* CE 252: fun4(V3,V,V4,Out) = 0
     [V4>=0,V>=0,V3>=0,Out=0] 
* CE 253: fun4(V3,V,V4,Out) = 7+ isNat(W4,V):1+ isNat(X4,V4):1
     [V4>=1,V>=1,V+2*V4+2=Out,V4=X4+1,V=W4+1,V3=1] 
* CE 254: fun4(V3,V,V4,Out) = 7+ isNat(W4,V):1+ isNat(X4,X4):2
     [X4>=1,V>=1,V+2*X4+3=Out,V=W4+1,X4+1=V4,V3=1] 
* CE 255: fun4(V3,V,V4,Out) = 7+ isNat(W4,V):1+ isNat(X4,Y4):3
     [Out>=V+X4+3,X4>=1,V>=1,V+X4+Y4+3=Out,V=W4+1,X4+1=V4,V3=1] 
* CE 256: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,V4):1
     [V4>=1,W4>=1,W4+2*V4+2=Out,V4=X4+1,W4+1=V,V3=1] 
* CE 257: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,W4+2*X4+3=Out,X4+1=V4,W4+1=V,V3=1] 
* CE 258: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=W4+X4+3,X4>=1,W4>=1,W4+X4+Y4+3=Out,X4+1=V4,W4+1=V,V3=1] 
* CE 259: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=V4+Y4+2,Y4>=0,W4>=1,V4>=1,V4+X4+Y4+2=Out,V4=Z4+1,W4+1=V,V3=1] 
* CE 260: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1+ isNat(X4,V):1
     [V>=1,V4>=1,V+2*V4+2=Out,V=X4+1,V4=W4+1,V3=1] 
* CE 261: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1+ isNat(X4,X4):2
     [X4>=1,V4>=1,X4+2*V4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 262: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1+ isNat(X4,Y4):3
     [Out>=2*V4+2,X4>=1,V4>=1,Y4+2*V4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 263: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,V):1
     [V>=1,W4>=1,V+2*W4+3=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 264: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,X4+2*W4+3=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 265: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=2*W4+3,X4>=1,W4>=1,Y4+2*W4+3=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 266: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=W4+Y4+3,Y4>=0,Z4>=0,W4>=1,W4+X4+Y4+3=Out,W4+1=V4,Z4+1=V,V3=1] 
* CE 267: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,V):1+ isNat(Y4,V4):1
     [V4>=1,V>=1,V+2*V4+2=Out,V4=Y4+1,V=X4+1,V4=W4+1,V3=1] 
* CE 268: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(Y4,V):1+ isNat(W4,W4):2
     [W4>=1,V>=1,V+2*W4+3=Out,V=Y4+1,W4+1=X4,W4+1=V4,V3=1] 
* CE 269: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(Y4,V):1+ isNat(W4,Z4):3
     [Out>=V+W4+3,W4>=1,V>=1,V+W4+Z4+3=Out,V=Y4+1,W4+1=X4,W4+1=V4,V3=1] 
* CE 270: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,X4):2+ isNat(Y4,V4):1
     [V4>=1,X4>=1,X4+2*V4+2=Out,V4=Y4+1,V4=W4+1,X4+1=V,V3=1] 
* CE 271: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(Y4,Y4):2+ isNat(W4,W4):2
     [W4>=1,Y4>=1,Y4+2*W4+3=Out,W4+1=X4,W4+1=V4,Y4+1=V,V3=1] 
* CE 272: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(Y4,Y4):2+ isNat(W4,Z4):3
     [Out>=W4+Y4+3,W4>=1,Y4>=1,W4+Y4+Z4+3=Out,W4+1=X4,W4+1=V4,Y4+1=V,V3=1] 
* CE 273: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,Y4):3
     [Out>=V4+Y4+2,Y4>=0,X4>=1,V4>=1,V4+Y4+Z4+2=Out,V4=A5+1,V4=W4+1,X4+1=V,V3=1] 
* CE 274: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):2+ isNat(Y4,V):1+ isNat(Z4,V4):1
     [V4>=2,V>=1,V+2*V4+1=Out,V4=Z4+1,V=Y4+1,V4=X4+1,V4=W4+1,V3=1] 
* CE 275: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,V):1+ isNat(W4,W4):2
     [W4>=1,V>=1,V+2*W4+2=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 276: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,V):1+ isNat(W4,Y4):3
     [Out>=V+W4+2,W4>=1,V>=1,V+W4+Y4+2=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 277: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):2+ isNat(Y4,Y4):2+ isNat(Z4,V4):1
     [V4>=2,Y4>=1,Y4+2*V4+1=Out,V4=Z4+1,V4=X4+1,V4=W4+1,Y4+1=V,V3=1] 
* CE 278: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,X4):2+ isNat(W4,W4):2
     [W4>=1,X4>=1,X4+2*W4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 279: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,X4):2+ isNat(W4,Y4):3
     [Out>=W4+X4+2,W4>=1,X4>=1,W4+X4+Y4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 280: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=W4+Y4+2,Y4>=0,X4>=1,W4>=1,W4+Y4+Z4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 281: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=Y4+Z4+2,Z4>=0,Y4>=0,A5>=0,W4>=1,Out=X4+Y4+Z4+2,W4+1=V4,A5+1=V,V3=1] 
* CE 282: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,V):1
     [V>=1,V4>=1,V+2*V4+2=Out,V=X4+1,V4=W4+1,V3=1] 
* CE 283: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,X4):2
     [X4>=1,V4>=1,X4+2*V4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 284: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,Y4):3
     [Out>=2*V4+2,X4>=1,V4>=1,Y4+2*V4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 285: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,V):1
     [V>=1,W4>=1,V+2*W4+3=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 286: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,X4+2*W4+3=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 287: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=2*W4+3,X4>=1,W4>=1,Y4+2*W4+3=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 288: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=W4+Y4+3,Y4>=0,Z4>=0,W4>=1,W4+X4+Y4+3=Out,W4+1=V4,Z4+1=V,V3=1] 
* CE 289: fun4(V3,V,V4,Out) = 6+ isNat(W4,V):1+ isNat(X4,V4):1
     [V4>=1,V>=1,V+2*V4+2=Out,V4=X4+1,V=W4+1,V3=1] 
* CE 290: fun4(V3,V,V4,Out) = 6+ isNat(W4,V):1+ isNat(X4,X4):2
     [X4>=1,V>=1,V+2*X4+3=Out,V=W4+1,X4+1=V4,V3=1] 
* CE 291: fun4(V3,V,V4,Out) = 6+ isNat(W4,V):1+ isNat(X4,Y4):3
     [Out>=V+X4+3,X4>=1,V>=1,V+X4+Y4+3=Out,V=W4+1,X4+1=V4,V3=1] 
* CE 292: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,V4):1
     [V4>=1,W4>=1,W4+2*V4+2=Out,V4=X4+1,W4+1=V,V3=1] 
* CE 293: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,W4+2*X4+3=Out,X4+1=V4,W4+1=V,V3=1] 
* CE 294: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=W4+X4+3,X4>=1,W4>=1,W4+X4+Y4+3=Out,X4+1=V4,W4+1=V,V3=1] 
* CE 295: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=V4+Y4+2,Y4>=0,W4>=1,V4>=1,V4+X4+Y4+2=Out,V4=Z4+1,W4+1=V,V3=1] 
* CE 296: fun4(V3,V,V4,Out) = 9
     [V4>=1,V>=1,V+2*V4+2=Out,V3=1] 
* CE 297: fun4(V3,V,V4,Out) = 7
     [V4>=0,V>=1,V+2*V4+2=Out,V3=1] 
* CE 298: fun4(V3,V,V4,Out) = 8+ isNat(W4,V):1
     [V>=1,V=W4+1,V+2=Out,V4=0,V3=1] 
* CE 299: fun4(V3,V,V4,Out) = 8+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V,V4=0,V3=1] 
* CE 300: fun4(V3,V,V4,Out) = 8+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V,V4=0,V3=1] 
* CE 301: fun4(V3,V,V4,Out) = 7+ isNat(W4,V):1
     [V>=1,V=W4+1,V+2=Out,V4=0,V3=1] 
* CE 302: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V,V4=0,V3=1] 
* CE 303: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V,V4=0,V3=1] 
* CE 304: fun4(V3,V,V4,Out) = 8+ isNat(W4,V):1
     [V>=1,V4>=1,V+2*V4+2=Out,V=W4+1,V3=1] 
* CE 305: fun4(V3,V,V4,Out) = 8+ isNat(W4,W4):2
     [W4>=1,V4>=1,W4+2*V4+2=Out,W4+1=V,V3=1] 
* CE 306: fun4(V3,V,V4,Out) = 8+ isNat(W4,X4):3
     [Out>=2*V4+2,W4>=1,V4>=1,X4+2*V4+2=Out,W4+1=V,V3=1] 
* CE 307: fun4(V3,V,V4,Out) = 7+ isNat(W4,V):1
     [V>=1,V4>=1,V+2*V4+2=Out,V=W4+1,V3=1] 
* CE 308: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2
     [W4>=1,V4>=1,W4+2*V4+2=Out,W4+1=V,V3=1] 
* CE 309: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=2*V4+2,W4>=1,V4>=1,X4+2*V4+2=Out,W4+1=V,V3=1] 
* CE 310: fun4(V3,V,V4,Out) = 6+ isNat(W4,V):1
     [Out>=V+2,V>=1,V+2*V4+2=Out,V=W4+1,V3=1] 
* CE 311: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [Out>=W4+2,W4>=1,W4+2*V4+2=Out,W4+1=V,V3=1] 
* CE 312: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=X4+2,X4>=0,W4>=1,Out=2*V4+X4+2,W4+1=V,V3=1] 
* CE 313: fun4(V3,V,V4,Out) = 8
     [Out>=2,Out=V+2,V4=0,V3=1] 
* CE 314: fun4(V3,V,V4,Out) = 9
     [V>=1,V+2=Out,V4=0,V3=1] 
* CE 315: fun4(V3,V,V4,Out) = 8
     [V>=1,V+2=Out,V4=0,V3=1] 
* CE 316: fun4(V3,V,V4,Out) = 7
     [Out>=2,Out=V+2,V4=0,V3=1] 
* CE 317: fun4(V3,V,V4,Out) = 8+ isNat(W4,V4):1
     [V4>=1,V4=W4+1,2*V4+2=Out,V=0,V3=1] 
* CE 318: fun4(V3,V,V4,Out) = 8+ isNat(W4,W4):2
     [W4>=1,2*W4+3=Out,W4+1=V4,V=0,V3=1] 
* CE 319: fun4(V3,V,V4,Out) = 8+ isNat(W4,X4):3
     [Out>=W4+3,W4>=1,W4+X4+3=Out,W4+1=V4,V=0,V3=1] 
* CE 320: fun4(V3,V,V4,Out) = 8+ isNat(W4,V4):1
     [V4>=1,V>=1,V+2*V4+2=Out,V4=W4+1,V3=1] 
* CE 321: fun4(V3,V,V4,Out) = 8+ isNat(W4,W4):2
     [W4>=1,V>=1,V+2*W4+3=Out,W4+1=V4,V3=1] 
* CE 322: fun4(V3,V,V4,Out) = 8+ isNat(W4,X4):3
     [Out>=V+W4+3,W4>=1,V>=1,V+W4+X4+3=Out,W4+1=V4,V3=1] 
* CE 323: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V4=W4+1,V3=1] 
* CE 324: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2
     [Out>=2*W4+3,W4>=1,V+2*W4+3=Out,W4+1=V4,V3=1] 
* CE 325: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=W4+X4+3,X4>=0,W4>=1,V+W4+X4+3=Out,W4+1=V4,V3=1] 
* CE 326: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1+ isNat(X4,V4):1
     [V4>=1,V4=X4+1,V4=W4+1,2*V4+2=Out,V=0,V3=1] 
* CE 327: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):1+ isNat(W4,W4):2
     [W4>=1,W4+1=X4,2*W4+3=Out,W4+1=V4,V=0,V3=1] 
* CE 328: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):1+ isNat(W4,Y4):3
     [Out>=W4+3,W4>=1,W4+Y4+3=Out,W4+1=X4,W4+1=V4,V=0,V3=1] 
* CE 329: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):2+ isNat(Y4,V4):1
     [V4>=2,V4=Y4+1,V4=X4+1,V4=W4+1,2*V4+1=Out,V=0,V3=1] 
* CE 330: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(W4,W4):2
     [W4>=1,2*W4+2=Out,W4+1=V4,V=0,V3=1] 
* CE 331: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(W4,X4):3
     [Out>=W4+2,W4>=1,W4+X4+2=Out,W4+1=V4,V=0,V3=1] 
* CE 332: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=Y4+2,Y4>=0,W4>=1,Out=X4+Y4+2,W4+1=V4,V=0,V3=1] 
* CE 333: fun4(V3,V,V4,Out) = 7+ isNat(W4,V4):1+ isNat(X4,V4):1
     [V4>=1,V>=1,V+2*V4+2=Out,V4=X4+1,V4=W4+1,V3=1] 
* CE 334: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):1+ isNat(W4,W4):2
     [W4>=1,V>=1,V+2*W4+3=Out,W4+1=X4,W4+1=V4,V3=1] 
* CE 335: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):1+ isNat(W4,Y4):3
     [Out>=V+W4+3,W4>=1,V>=1,V+W4+Y4+3=Out,W4+1=X4,W4+1=V4,V3=1] 
* CE 336: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):2+ isNat(Y4,V4):1
     [V4>=2,V>=1,V+2*V4+1=Out,V4=Y4+1,V4=X4+1,V4=W4+1,V3=1] 
* CE 337: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(W4,W4):2
     [W4>=1,V>=1,V+2*W4+2=Out,W4+1=V4,V3=1] 
* CE 338: fun4(V3,V,V4,Out) = 7+ isNat(W4,W4):2+ isNat(W4,X4):3
     [Out>=V+W4+2,W4>=1,V>=1,V+W4+X4+2=Out,W4+1=V4,V3=1] 
* CE 339: fun4(V3,V,V4,Out) = 7+ isNat(W4,X4):3
     [Out>=V+Y4+2,Y4>=0,W4>=1,V>=1,V+X4+Y4+2=Out,W4+1=V4,V3=1] 
* CE 340: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1+ isNat(X4,V4):1
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V4=X4+1,V4=W4+1,V3=1] 
* CE 341: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(W4,W4):2
     [Out>=2*W4+3,W4>=1,V+2*W4+3=Out,W4+1=X4,W4+1=V4,V3=1] 
* CE 342: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):1+ isNat(W4,Y4):3
     [Out>=W4+Y4+3,Y4>=0,W4>=1,V+W4+Y4+3=Out,W4+1=X4,W4+1=V4,V3=1] 
* CE 343: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):2+ isNat(Y4,V4):1
     [Out>=2*V4+1,V4>=2,V+2*V4+1=Out,V4=Y4+1,V4=X4+1,V4=W4+1,V3=1] 
* CE 344: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(W4,W4):2
     [Out>=2*W4+2,W4>=1,V+2*W4+2=Out,W4+1=V4,V3=1] 
* CE 345: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2+ isNat(W4,X4):3
     [Out>=W4+X4+2,X4>=0,W4>=1,V+W4+X4+2=Out,W4+1=V4,V3=1] 
* CE 346: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=X4+Y4+2,Y4>=0,X4>=0,W4>=1,Out=V+X4+Y4+2,W4+1=V4,V3=1] 
* CE 347: fun4(V3,V,V4,Out) = 6+ isNat(W4,V4):1
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V4=W4+1,V3=1] 
* CE 348: fun4(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [Out>=2*W4+3,W4>=1,V+2*W4+3=Out,W4+1=V4,V3=1] 
* CE 349: fun4(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=W4+X4+3,X4>=0,W4>=1,V+W4+X4+3=Out,W4+1=V4,V3=1] 
* CE 350: fun4(V3,V,V4,Out) = 9
     [Out=2,V4=0,V=0,V3=1] 
* CE 351: fun4(V3,V,V4,Out) = 9
     [V4>=1,2*V4+2=Out,V=0,V3=1] 
* CE 352: fun4(V3,V,V4,Out) = 8
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V3=1] 
* CE 353: fun4(V3,V,V4,Out) = 8
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V3=1] 
* CE 354: fun4(V3,V,V4,Out) = 7
     [Out>=2*V4+2,V4>=1,V+2*V4+2=Out,V3=1] 
* CE 355: fun4(V3,V,V4,Out) = 7
     [Out>=2,Out=2*V4+2,V=0,V3=1] 
* CE 356: fun4(V3,V,V4,Out) = 6
     [Out>=2*V4+2,V4>=0,V+2*V4+2=Out,V3=1] 

### Cost equations --> "Loop" of fun4/4 
* CEs [252] --> Loop 76 
* CEs [278] --> Loop 77 
* CEs [257,264,271,275,277,286,293,337] --> Loop 78 
* CEs [254,263,268,274,285,290,321,334,336] --> Loop 79 
* CEs [253,260,267,282,289,296,297,304,307,310,320,333] --> Loop 80 
* CEs [256,261,270,283,292,299,302,305,308,311] --> Loop 81 
* CEs [298,301,313,314,315,316] --> Loop 82 
* CEs [330,344] --> Loop 83 
* CEs [318,324,327,329,341,343,348] --> Loop 84 
* CEs [317,323,326,340,347,350,351,352,353,354,355,356] --> Loop 85 
* CEs [259,273,295] --> Loop 86 
* CEs [265,266,280,281,287,288] --> Loop 87 
* CEs [262,284,300,303,306,309,312] --> Loop 88 
* CEs [255,258,269,272,276,279,291,294,319,322,325,328,331,332,335,338,339,342,345,346,349] --> Loop 89 

#### Loops of fun4/4 
* Loop 76: fun4(V3,V,V4,Out) [V4>=0,V>=0,V3>=0,Out=0] 
* Loop 77: fun4(V3,V,V4,Out) [V4>=2,V>=2,V+2*V4=Out+1,V3=1] 
* Loop 78: fun4(V3,V,V4,Out) [V4>=2,V>=1,V+2*V4=Out,V3=1] 
* Loop 79: fun4(V3,V,V4,Out) [V4>=2,V>=1,V+2*V4+1=Out,V3=1] 
* Loop 80: fun4(V3,V,V4,Out) [V4>=0,V>=1,V+2*V4+2=Out,V3=1] 
* Loop 81: fun4(V3,V,V4,Out) [V4>=0,V>=2,V+2*V4+1=Out,V3=1] 
* Loop 82: fun4(V3,V,V4,Out) [V>=0,V+2=Out,V4=0,V3=1] 
* Loop 83: fun4(V3,V,V4,Out) [V4>=2,V>=0,V+2*V4=Out,V3=1] 
* Loop 84: fun4(V3,V,V4,Out) [V4>=2,V>=0,V+2*V4+1=Out,V3=1] 
* Loop 85: fun4(V3,V,V4,Out) [V4>=0,V>=0,V+2*V4+2=Out,V3=1] 
* Loop 86: fun4(V3,V,V4,Out) [Out>=V4+2,V4>=1,V>=2,V3=1] 
* Loop 87: fun4(V3,V,V4,Out) [Out>=2,V4>=2,V>=1,V3=1] 
* Loop 88: fun4(V3,V,V4,Out) [Out>=2*V4+2,V4>=0,V>=2,V3=1] 
* Loop 89: fun4(V3,V,V4,Out) [Out>=V+2,V4>=2,V>=0,V3=1] 

### Ranking functions of CR fun4(V3,V,V4,Out) 

#### Partial ranking functions of CR fun4(V3,V,V4,Out) 


### Resulting Chains:fun4(V3,V,V4,Out) 
* [89]...
* [88]...
* [87]...
* [86]...
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]


### Merging Chains  fun4/4 into  External patterns of execution 
* [[80],[82],[85]] --> 1 
* [[79],[84]] --> 2 
* [[81]] --> 3 
* [[78],[83]] --> 4 
* [[77]] --> 5 
* [[76]] --> 6 
* [[89]] --> 7 
* [[87]] --> 8 
* [[88]] --> 9 
* [[86]] --> 10 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [357] 
* CE 3 is refined into CE [358] 
* CE 4 is refined into CE [359] 
* CE 5 is refined into CE [360,361,362] 
* CE 6 is refined into CE [363] 
* CE 7 is refined into CE [364,365,366,367] 
* CE 8 is refined into CE [368,369,370,371,372,373,374,375] 
* CE 9 is refined into CE [376] 
* CE 10 is refined into CE [377,378,379,380,381,382,383,384,385,386] 
* CE 11 is refined into CE [387,388,389] 
* CE 12 is refined into CE [390] 
* CE 13 is refined into CE [391] 
* CE 14 is refined into CE [392,393,394] 


#### Refined cost equations start/3 
* CE 357: start(V3,V,V4) = 0
     [V>=0,V3>=0] 
* CE 358: start(V3,V,V4) = 3
     [V=0,V3=1] 
* CE 359: start(V3,V,V4) = 3
     [V>=1,V3=1] 
* CE 360: start(V3,V,V4) = 2+ isNat(W4,V):1
     [V>=1,V=W4+1,V3=1] 
* CE 361: start(V3,V,V4) = 2+ isNat(W4,W4):2
     [W4>=1,W4+1=V,V3=1] 
* CE 362: start(V3,V,V4) = 2+ isNat(W4,X4):3
     [W4>=1,W4+1=V,V3=1] 
* CE 363: start(V3,V,V4) = 2
     [V3>=1] 
* CE 364: start(V3,V,V4) = 0+ fun(W4,V,V):1
     [V>=0,W4=1,V3=1] 
* CE 365: start(V3,V,V4) = 0+ fun(W4,X4,Y4):2
     [Y4>=1,Y4+1=X4,Y4+1=V,W4=1,V3=1] 
* CE 366: start(V3,V,V4) = 0+ fun(V3,V,W4):3
     [V>=0,V3>=0,W4=0] 
* CE 367: start(V3,V,V4) = 0+ fun(W4,V,X4):4
     [V>=2,W4=1,V3=1] 
* CE 368: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):1
     [Y4>=V+2,V>=0,Y4=V+X4+2,Y4=V+V4+2,W4=1,V3=1] 
* CE 369: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):2
     [Y4>=V+3,V>=0,Y4=V+X4+1,Y4=V+V4+1,W4=1,V3=1] 
* CE 370: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):3
     [Y4>=V+1,V>=2,Y4=V+X4+1,Y4=V+V4+1,W4=1,V3=1] 
* CE 371: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):4
     [Y4>=V+2,V>=2,Y4=V+X4,Y4=V+V4,W4=1,V3=1] 
* CE 372: start(V3,V,V4) = 0+ fun1(V3,V,V4,W4):5
     [V4>=0,V>=0,V3>=0,W4=0] 
* CE 373: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):6
     [X4>=V+2,V4>=2,V>=0,W4=1,V3=1] 
* CE 374: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):7
     [X4>=2,V4>=2,V>=1,W4=1,V3=1] 
* CE 375: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):8
     [X4>=V4+2,V4>=0,V>=2,W4=1,V3=1] 
* CE 376: start(V3,V,V4) = 0+ fun2(V3,W4):1
     [V3>=0,W4=0] 
* CE 377: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):1
     [Y4>=V+2,V>=0,Y4=2*X4+V+2,Y4=2*V4+V+2,W4=1,V3=1] 
* CE 378: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):2
     [Y4>=V+5,V>=0,Y4=2*X4+V+1,Y4=2*V4+V+1,W4=1,V3=1] 
* CE 379: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):3
     [Y4>=V+1,V>=2,Y4=2*X4+V+1,Y4=2*V4+V+1,W4=1,V3=1] 
* CE 380: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):4
     [Y4>=V+4,V>=0,Y4=2*X4+V,Y4=2*V4+V,W4=1,V3=1] 
* CE 381: start(V3,V,V4) = 0+ fun4(W4,V,X4,Y4):5
     [Y4>=V+3,V>=2,Y4+1=2*X4+V,Y4+1=2*V4+V,W4=1,V3=1] 
* CE 382: start(V3,V,V4) = 0+ fun4(V3,V,V4,W4):6
     [V4>=0,V>=0,V3>=0,W4=0] 
* CE 383: start(V3,V,V4) = 0+ fun4(W4,V,V4,X4):7
     [X4>=V+2,V4>=2,V>=0,W4=1,V3=1] 
* CE 384: start(V3,V,V4) = 0+ fun4(W4,V,V4,X4):8
     [X4>=2,V4>=2,V>=1,W4=1,V3=1] 
* CE 385: start(V3,V,V4) = 0+ fun4(W4,V,V4,X4):9
     [X4>=2*V4+2,V4>=0,V>=2,W4=1,V3=1] 
* CE 386: start(V3,V,V4) = 0+ fun4(W4,V,V4,X4):10
     [X4>=V4+2,V4>=1,V>=2,W4=1,V3=1] 
* CE 387: start(V3,V,V4) = 0+ isNat(W4,X4):1
     [X4>=1,X4=W4+1,X4=V3+1] 
* CE 388: start(V3,V,V4) = 0+ isNat(V3,V3):2
     [V3>=1] 
* CE 389: start(V3,V,V4) = 0+ isNat(V3,W4):3
     [V3>=1] 
* CE 390: start(V3,V,V4) = 1
     [] 
* CE 391: start(V3,V,V4) = 2
     [V3=0] 
* CE 392: start(V3,V,V4) = 1+ isNat(W4,V3):1
     [V3>=1,V3=W4+1] 
* CE 393: start(V3,V,V4) = 1+ isNat(W4,W4):2
     [W4>=1,W4+1=V3] 
* CE 394: start(V3,V,V4) = 1+ isNat(W4,X4):3
     [W4>=1,W4+1=V3] 

### Cost equations --> "Loop" of start/3 
* CEs [362,367,375,385,386] --> Loop 90 
* CEs [373,374,383,384,389,394] --> Loop 91 
* CEs [357,358,359,360,361,363,364,365,366,368,369,370,371,372,376,377,378,379,380,381,382,387,388,390,391,392,393] --> Loop 92 

#### Loops of start/3 
* Loop 90: start(V3,V,V4) [V>=2,V3=1] 
* Loop 91: start(V3,V,V4) [V3>=1] 
* Loop 92: start(V3,V,V4) [] 

### Ranking functions of CR start(V3,V,V4) 

#### Partial ranking functions of CR start(V3,V,V4) 


### Resulting Chains:start(V3,V,V4) 
* [92]
* [91]...
* [90]...


### Merging Chains  start/3 into  External patterns of execution 
* [[92]] --> 1 
* [[90]] --> 2 
* [[91]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58] 

 * loop 40:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3),isNat(V3'4,Out'4)] 
5
 * loop 41:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 42:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 43:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 44:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 45:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
2
 * loop 46:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 47:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 48:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 49:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 50:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
4
 * loop 51:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 52:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 53:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 55:isNat(V3,Out) -> [isNat(V3',Out')] 
8
 * loop 56:isNat(V3,Out) -> [isNat(V3',Out')] 
5
 * loop 57:isNat(V3,Out) -> [isNat(V3',Out')] 
8
 * loop 58:isNat(V3,Out) -> [isNat(V3',Out')] 
5
#### Cost of phase [40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58]:isNat(V3,Out) -> [] 
42*it(40)+28*it(46)+49*it(47)+1*it([59])+0
#### Cost of chains of isNat(V3,Out):
* Chain [multiple([40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58],[[],[59],[54,59]])]...: 42*it(40)+28*it(46)+49*it(47)+1*it([59])+0
  with precondition: [V3>=1] 

* Chain [59]: 1
  with precondition: [V3+1=Out,V3>=0] 

* Chain [54,59]: 9
  with precondition: [V3=Out,V3>=1] 


#### Cost of chains of fun(V3,V,Out):
* Chain [63]...: 120*s(1)+2
  with precondition: [V3=1,V>=2] 

* Chain [62]: 3
  with precondition: [V3=1,V=Out,V>=0] 

* Chain [61]: 11
  with precondition: [V3=1,V=Out+1,V>=2] 

* Chain [60]: 0
  with precondition: [Out=0,V3>=0,V>=0] 


#### Cost of chains of fun1(V3,V,V4,Out):
* Chain [74]...: 1*aux(36)+0
  with precondition: [V3=1,V>=0,V4>=2,Out>=V+2] 

* Chain [73]...: 1*aux(37)+0
  with precondition: [V3=1,V>=2,V4>=0,Out>=V4+2] 

* Chain [72]...: 1*aux(38)+0
  with precondition: [V3=1,V>=1,V4>=2,Out>=2] 

* Chain [71]: 7
  with precondition: [V3=1,V+V4+2=Out,V>=0,V4>=0] 

* Chain [70]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=0,V4>=2] 

* Chain [69]: 7
  with precondition: [V3=1,V4=0,V+2=Out,V>=0] 

* Chain [68]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=2,V4>=0] 

* Chain [67]: 7
  with precondition: [V3=1,V+V4+2=Out,V>=1,V4>=0] 

* Chain [66]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=1,V4>=2] 

* Chain [65]: 23
  with precondition: [V3=1,V+V4=Out,V>=2,V4>=2] 

* Chain [64]: 0
  with precondition: [Out=0,V3>=0,V>=0,V4>=0] 


#### Cost of chains of fun2(V3,Out):
* Chain [75]: 2
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun4(V3,V,V4,Out):
* Chain [89]...: 1*aux(39)+0
  with precondition: [V3=1,V>=0,V4>=2,Out>=V+2] 

* Chain [88]...: 1*aux(40)+0
  with precondition: [V3=1,V>=2,V4>=0,Out>=2*V4+2] 

* Chain [87]...: 1*aux(41)+0
  with precondition: [V3=1,V>=1,V4>=2,Out>=2] 

* Chain [86]...: 1*aux(42)+0
  with precondition: [V3=1,V>=2,V4>=1,Out>=V4+2] 

* Chain [85]: 9
  with precondition: [V3=1,V+2*V4+2=Out,V>=0,V4>=0] 

* Chain [84]: 17
  with precondition: [V3=1,V+2*V4+1=Out,V>=0,V4>=2] 

* Chain [83]: 25
  with precondition: [V3=1,V+2*V4=Out,V>=0,V4>=2] 

* Chain [82]: 9
  with precondition: [V3=1,V4=0,V+2=Out,V>=0] 

* Chain [81]: 17
  with precondition: [V3=1,V+2*V4+1=Out,V>=2,V4>=0] 

* Chain [80]: 9
  with precondition: [V3=1,V+2*V4+2=Out,V>=1,V4>=0] 

* Chain [79]: 17
  with precondition: [V3=1,V+2*V4+1=Out,V>=1,V4>=2] 

* Chain [78]: 25
  with precondition: [V3=1,V+2*V4=Out,V>=1,V4>=2] 

* Chain [77]: 33
  with precondition: [V3=1,V+2*V4=Out+1,V>=2,V4>=2] 

* Chain [76]: 0
  with precondition: [Out=0,V3>=0,V>=0,V4>=0] 


#### Cost of chains of start(V3,V,V4):
* Chain [92]: 33
  with precondition: [] 

* Chain [91]...: 1*aux(43)+0
  with precondition: [V3>=1] 

* Chain [90]...: 1*aux(44)+0
  with precondition: [V3=1,V>=2] 


Closed-form bounds of start(V3,V,V4): 
-------------------------------------
* Chain [92] with precondition: [] 
    - Upper bound: 33 
    - Complexity: constant 
* Chain [91]... with precondition: [V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [90]... with precondition: [V3=1,V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V3,V,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3263 ms.
* Invariants computed in 208 ms.
   - Backward Invariants 34 ms.
   - Transitive Invariants 51 ms.
* Refinement performed in 1512 ms.
* Termination proved in 134 ms.
* Upper bounds computed in 309 ms.
   - Equation cost structures 167 ms.
   - Phase cost structures 169 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 5656 ms.

