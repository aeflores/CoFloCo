
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [and/3]
1. recursive  : [fun/3]
2. recursive  : [fun1/4]
3. recursive  : [isNat/2]
4. recursive  : [plus/3]
5. non_recursive  : [proper/2]
6. recursive  : [s/2]
7. recursive  : [top/2]
8. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into fun/3
2. SCC is partially evaluated into fun1/4
3. SCC is partially evaluated into isNat/2
4. SCC is partially evaluated into plus/3
5. SCC is partially evaluated into proper/2
6. SCC is partially evaluated into s/2
7. SCC is partially evaluated into top/2
8. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 21 is refined into CE [33] 
* CE 19 is refined into CE [34] 
* CE 20 is refined into CE [35] 


#### Refined cost equations and/3 
* CE 33: and(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 34: and(V1,V,Out) = 1+ and(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 35: and(V1,V,Out) = 1+ and(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of and/3 
* CEs [34] --> Loop 24 
* CEs [35] --> Loop 25 
* CEs [33] --> Loop 26 

#### Loops of and/3 
* Loop 24: and(V1,V,Out)->  and(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 25: and(V1,V,Out)->  and(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 26: and(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR and(V1,V,Out) 
* RF of phase [24,25]: [V1]

#### Partial ranking functions of CR and(V1,V,Out) 
* Partial RF of phase [24,25]:
  - RF of loop [24:1,25:1]:
    V1
  - RF of loop [25:1]:
    V


### Resulting Chains:and(V1,V,Out) 
* [[24,25],26]
* [26]


### Merging Chains  and/3 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[24,25]]] --> 2 


### Specialization of cost equations fun/3 
* CE 12 is refined into CE [36] 
* CE 11 is refined into CE [37] 
* CE 10 is refined into CE [38] 


#### Refined cost equations fun/3 
* CE 36: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: fun(V1,V,Out) = 1+ fun(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 38: fun(V1,V,Out) = 1+ fun(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fun/3 
* CEs [37] --> Loop 27 
* CEs [38] --> Loop 28 
* CEs [36] --> Loop 29 

#### Loops of fun/3 
* Loop 27: fun(V1,V,Out)->  fun(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 28: fun(V1,V,Out)->  fun(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 29: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [27,28]: [V1]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [27,28]:
  - RF of loop [27:1,28:1]:
    V1
  - RF of loop [28:1]:
    V


### Resulting Chains:fun(V1,V,Out) 
* [[27,28],29]
* [29]


### Merging Chains  fun/3 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[27,28]]] --> 2 


### Specialization of cost equations fun1/4 
* CE 32 is refined into CE [39] 
* CE 31 is refined into CE [40] 
* CE 30 is refined into CE [41] 


#### Refined cost equations fun1/4 
* CE 39: fun1(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 40: fun1(V1,V,V2,Out) = 1+ fun1(W2,V,V2,X2)
     [W2>=0,V2>=0,V>=0,X2+1=Out,W2+1=V1] 
* CE 41: fun1(V1,V,V2,Out) = 1+ fun1(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V,W2+1=V1] 

### Cost equations --> "Loop" of fun1/4 
* CEs [40] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [39] --> Loop 32 

#### Loops of fun1/4 
* Loop 30: fun1(V1,V,V2,Out)->  fun1(V1',V,V2,Out')
                  [V2>=0,V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 31: fun1(V1,V,V2,Out)->  fun1(V1',V',V2',Out')
                  [V2>=1,V>=1,V1>=1,Out=Out'+1,V2=V2'+1,V=V'+1,V1=V1'+1] 
* Loop 32: fun1(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun1(V1,V,V2,Out) 
* RF of phase [30,31]: [V1]

#### Partial ranking functions of CR fun1(V1,V,V2,Out) 
* Partial RF of phase [30,31]:
  - RF of loop [30:1,31:1]:
    V1
  - RF of loop [31:1]:
    V
    V2


### Resulting Chains:fun1(V1,V,V2,Out) 
* [[30,31],32]
* [32]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[30,31]]] --> 2 


### Specialization of cost equations isNat/2 
* CE 23 is refined into CE [42] 
* CE 22 is refined into CE [43] 


#### Refined cost equations isNat/2 
* CE 42: isNat(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 43: isNat(V1,Out) = 1+ isNat(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of isNat/2 
* CEs [43] --> Loop 33 
* CEs [42] --> Loop 34 

#### Loops of isNat/2 
* Loop 33: isNat(V1,Out)->  isNat(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 34: isNat(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR isNat(V1,Out) 
* RF of phase [33]: [V1]

#### Partial ranking functions of CR isNat(V1,Out) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V1


### Resulting Chains:isNat(V1,Out) 
* [[33],34]
* [34]


### Merging Chains  isNat/2 into  External patterns of execution 
* [[34]] --> 1 
* [[34,[33]]] --> 2 


### Specialization of cost equations plus/3 
* CE 29 is refined into CE [44] 
* CE 28 is refined into CE [45] 
* CE 26 is refined into CE [46] 
* CE 27 is refined into CE [47] 


#### Refined cost equations plus/3 
* CE 44: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 45: plus(V1,V,Out) = 1+ plus(V1,W1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 46: plus(V1,V,Out) = 1+ plus(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 47: plus(V1,V,Out) = 1+ plus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of plus/3 
* CEs [45] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [47] --> Loop 37 
* CEs [44] --> Loop 38 

#### Loops of plus/3 
* Loop 35: plus(V1,V,Out)->  plus(V1,V',Out')
                  [V>=1,V1>=0,Out=Out'+1,V=V'+1] 
* Loop 36: plus(V1,V,Out)->  plus(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 37: plus(V1,V,Out)->  plus(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 38: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR plus(V1,V,Out) 
* RF of phase [35,36,37]: [V1+V]

#### Partial ranking functions of CR plus(V1,V,Out) 
* Partial RF of phase [35,36,37]:
  - RF of loop [35:1,37:1]:
    V
  - RF of loop [36:1,37:1]:
    V1


### Resulting Chains:plus(V1,V,Out) 
* [[35,36,37],38]
* [38]


### Merging Chains  plus/3 into  External patterns of execution 
* [[38]] --> 1 
* [[38,[35,36,37]]] --> 2 


### Specialization of cost equations proper/2 
* CE 18 is refined into CE [48] 
* CE 16 is refined into CE [49] 
* CE 17 is refined into CE [50] 


#### Refined cost equations proper/2 
* CE 48: proper(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 49: proper(V1,Out) = 1
     [Out=2,V1=1] 
* CE 50: proper(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [48] --> Loop 39 
* CEs [49] --> Loop 40 
* CEs [50] --> Loop 41 

#### Loops of proper/2 
* Loop 39: proper(V1,Out) [V1>=0,Out=0] 
* Loop 40: proper(V1,Out) [Out=2,V1=1] 
* Loop 41: proper(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR proper(V1,Out) 

#### Partial ranking functions of CR proper(V1,Out) 


### Resulting Chains:proper(V1,Out) 
* [41]
* [40]
* [39]


### Merging Chains  proper/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 


### Specialization of cost equations s/2 
* CE 25 is refined into CE [51] 
* CE 24 is refined into CE [52] 


#### Refined cost equations s/2 
* CE 51: s(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 52: s(V1,Out) = 1+ s(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of s/2 
* CEs [52] --> Loop 42 
* CEs [51] --> Loop 43 

#### Loops of s/2 
* Loop 42: s(V1,Out)->  s(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 43: s(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR s(V1,Out) 
* RF of phase [42]: [V1]

#### Partial ranking functions of CR s(V1,Out) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V1


### Resulting Chains:s(V1,Out) 
* [[42],43]
* [43]


### Merging Chains  s/2 into  External patterns of execution 
* [[43]] --> 1 
* [[43,[42]]] --> 2 


### Specialization of cost equations top/2 
* CE 15 is refined into CE [53] 
* CE 13 is refined into CE [54] 
* CE 14 is refined into CE [55,56,57] 


#### Refined cost equations top/2 
* CE 53: top(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 54: top(V1,Out) = 1+ top(V1,Out)
     [V1>=1] 
* CE 55: top(V1,Out) = 1+ proper(W1,X1):1+ top(Y1,Out)
     [Y1=1,X1=1,W1=0,V1=1] 
* CE 56: top(V1,Out) = 1+ proper(W1,X1):2+ top(Y1,Out)
     [Y1=2,X1=2,W1=1,V1=2] 
* CE 57: top(V1,Out) = 1+ proper(W1,X1):3+ top(Y1,Out)
     [W1>=0,W1+1=V1,Y1=0,X1=0] 

### Cost equations --> "Loop" of top/2 
* CEs [57] --> Loop 44 
* CEs [56] --> Loop 45 
* CEs [54,55] --> Loop 46 
* CEs [53] --> Loop 47 

#### Loops of top/2 
* Loop 44: top(V1,Out)->  top(V1',Out)
                  [V1>=1,V1'=0] 
* Loop 45: top(V1,Out)->  top(V1',Out)
                  [V1'=2,V1=2] 
* Loop 46: top(V1,Out)->  top(V1,Out)
                  [V1>=1] 
* Loop 47: top(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR top(V1,Out) 

#### Partial ranking functions of CR top(V1,Out) 


### Resulting Chains:top(V1,Out) 
* [[45,46]]...
* [[45,46],47]
* [[45,46],44,47]
* [47]
* [44,47]


### Merging Chains  top/2 into  External patterns of execution 
* [[47,44],[47],[47,44,[45,46]],[47,[45,46]]] --> 1 
* [[[45,46]]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [58,59] 
* CE 3 is refined into CE [60,61] 
* CE 4 is refined into CE [62,63,64] 
* CE 5 is refined into CE [65,66] 
* CE 6 is refined into CE [67,68] 
* CE 7 is refined into CE [69,70] 
* CE 8 is refined into CE [71,72] 
* CE 9 is refined into CE [73,74] 


#### Refined cost equations start/3 
* CE 58: start(V1,V,V2) = 0+ fun(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 59: start(V1,V,V2) = 0+ fun(V1,V,W2):2
     [V1>=W2,W2>=1,V>=0] 
* CE 60: start(V1,V,V2) = 0+ top(V1,W2):1
     [V1>=0,W2=0] 
* CE 61: start(V1,V,V2) = 0+ top(V1,W2):2
     [V1>=1] 
* CE 62: start(V1,V,V2) = 0+ proper(W2,X2):1
     [X2=1,W2=0,V1=0] 
* CE 63: start(V1,V,V2) = 0+ proper(W2,X2):2
     [X2=2,W2=1,V1=1] 
* CE 64: start(V1,V,V2) = 0+ proper(V1,W2):3
     [V1>=0,W2=0] 
* CE 65: start(V1,V,V2) = 0+ and(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 66: start(V1,V,V2) = 0+ and(V1,V,W2):2
     [V1>=W2,W2>=1,V>=0] 
* CE 67: start(V1,V,V2) = 0+ isNat(V1,W2):1
     [V1>=0,W2=0] 
* CE 68: start(V1,V,V2) = 0+ isNat(V1,W2):2
     [V1>=W2,W2>=1] 
* CE 69: start(V1,V,V2) = 0+ s(V1,W2):1
     [V1>=0,W2=0] 
* CE 70: start(V1,V,V2) = 0+ s(V1,W2):2
     [V1>=W2,W2>=1] 
* CE 71: start(V1,V,V2) = 0+ plus(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 72: start(V1,V,V2) = 0+ plus(V1,V,W2):2
     [V1+V>=W2,W2>=1,V>=0,V1>=0] 
* CE 73: start(V1,V,V2) = 0+ fun1(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 74: start(V1,V,V2) = 0+ fun1(V1,V,V2,W2):2
     [V1>=W2,W2>=1,V2>=0,V>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [63] --> Loop 48 
* CEs [58,59,60,62,64,65,66,67,68,69,70,71,72,73,74] --> Loop 49 
* CEs [61] --> Loop 50 

#### Loops of start/3 
* Loop 48: start(V1,V,V2) [V1=1] 
* Loop 49: start(V1,V,V2) [V1>=0] 
* Loop 50: start(V1,V,V2) [V1>=1] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [50]...
* [49]
* [48]


### Merging Chains  start/3 into  External patterns of execution 
* [[48],[49]] --> 1 
* [[50]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24,25] 

 * loop 24:and(V1,V,Out) -> [and(V1',V',Out')] 
1
 * loop 25:and(V1,V,Out) -> [and(V1',V',Out')] 
1
#### Cost of phase [24,25]:and(V1,V,Out) -> [and(V1',V',Out')] 
1*it(24)+1*it(25)+0
  Such that:it(25) =< V
it(25) =< V-V'
aux(1) =< V1
aux(2) =< V1-V1'
it(24) =< aux(1)
it(25) =< aux(1)
it(24) =< aux(2)
it(25) =< aux(2)

#### Cost of chains of and(V1,V,Out):
* Chain [[24,25],26]: 1*it(24)+1*it(25)+0
  Such that:aux(1) =< V1
it(25) =< V
aux(2) =< Out
it(24) =< aux(1)
it(25) =< aux(1)
it(24) =< aux(2)
it(25) =< aux(2)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [27,28] 

 * loop 27:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
 * loop 28:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1
#### Cost of phase [27,28]:fun(V1,V,Out) -> [fun(V1',V',Out')] 
1*it(27)+1*it(28)+0
  Such that:it(28) =< V
it(28) =< V-V'
aux(3) =< V1
aux(4) =< V1-V1'
it(27) =< aux(3)
it(28) =< aux(3)
it(27) =< aux(4)
it(28) =< aux(4)

#### Cost of chains of fun(V1,V,Out):
* Chain [[27,28],29]: 1*it(27)+1*it(28)+0
  Such that:aux(3) =< V1
it(28) =< V
aux(4) =< Out
it(27) =< aux(3)
it(28) =< aux(3)
it(27) =< aux(4)
it(28) =< aux(4)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [30,31] 

 * loop 30:fun1(V1,V,V2,Out) -> [fun1(V1',V',V2',Out')] 
1
 * loop 31:fun1(V1,V,V2,Out) -> [fun1(V1',V',V2',Out')] 
1
#### Cost of phase [30,31]:fun1(V1,V,V2,Out) -> [fun1(V1',V',V2',Out')] 
1*it(30)+1*it(31)+0
  Such that:it(31) =< V
it(31) =< V-V'
it(31) =< V2
it(31) =< V2-V2'
aux(5) =< V1
aux(6) =< V1-V1'
it(30) =< aux(5)
it(31) =< aux(5)
it(30) =< aux(6)
it(31) =< aux(6)

#### Cost of chains of fun1(V1,V,V2,Out):
* Chain [[30,31],32]: 1*it(30)+1*it(31)+0
  Such that:aux(5) =< V1
it(31) =< V
aux(6) =< Out
it(30) =< aux(5)
it(31) =< aux(5)
it(30) =< aux(6)
it(31) =< aux(6)

  with precondition: [V>=0,V2>=0,Out>=1,V1>=Out] 

* Chain [32]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 


#### Cost of loops [33] 

 * loop 33:isNat(V1,Out) -> [isNat(V1',Out')] 
1
#### Cost of phase [33]:isNat(V1,Out) -> [isNat(V1',Out')] 
1*it(33)+0
  Such that:it(33) =< V1
it(33) =< V1-V1'

#### Cost of chains of isNat(V1,Out):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [34]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [35,36,37] 

 * loop 35:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
 * loop 36:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
 * loop 37:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1
#### Cost of phase [35,36,37]:plus(V1,V,Out) -> [plus(V1',V',Out')] 
1*it(35)+1*it(36)+1*it(37)+0
  Such that:aux(7) =< V1
aux(8) =< V1+V
aux(9) =< V1+V-V1'-V'
aux(10) =< V1-V1'
aux(11) =< V
aux(12) =< V-V'
it(36) =< aux(7)
it(37) =< aux(7)
it(35) =< aux(8)
it(36) =< aux(8)
it(37) =< aux(8)
it(35) =< aux(9)
it(36) =< aux(9)
it(37) =< aux(9)
it(36) =< aux(10)
it(37) =< aux(10)
it(35) =< aux(11)
it(37) =< aux(11)
it(35) =< aux(12)
it(37) =< aux(12)

#### Cost of chains of plus(V1,V,Out):
* Chain [[35,36,37],38]: 1*it(35)+1*it(36)+1*it(37)+0
  Such that:aux(13) =< V1
aux(14) =< V1+V
aux(15) =< V
it(36) =< aux(13)
it(37) =< aux(13)
it(35) =< aux(14)
it(36) =< aux(14)
it(37) =< aux(14)
it(35) =< aux(15)
it(37) =< aux(15)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=Out] 

* Chain [38]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of proper(V1,Out):
* Chain [41]: 1
  with precondition: [V1=0,Out=1] 

* Chain [40]: 1
  with precondition: [V1=1,Out=2] 

* Chain [39]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [42] 

 * loop 42:s(V1,Out) -> [s(V1',Out')] 
1
#### Cost of phase [42]:s(V1,Out) -> [s(V1',Out')] 
1*it(42)+0
  Such that:it(42) =< V1
it(42) =< V1-V1'

#### Cost of chains of s(V1,Out):
* Chain [[42],43]: 1*it(42)+0
  Such that:it(42) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [43]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [45,46] 

 * loop 45:top(V1,Out) -> [top(V1',Out')] 
2
 * loop 46:top(V1,Out) -> [top(V1',Out')] 
2
#### Cost of phase [45,46]:top(V1,Out) -> [top(V1',Out')] 
4*it(45)+0
#### Cost of phase [45,46]:top(V1,Out) -> [top(V1',Out')] 
4*it(45)+0
#### Cost of phase [45,46]:top(V1,Out) -> [top(V1',Out')] 
4*it(45)+0
#### Cost of chains of top(V1,Out):
* Chain [[45,46]]...: 4*it(45)+0
  with precondition: [V1>=1] 

* Chain [[45,46],47]: 4*it(45)+0
  with precondition: [Out=0,V1>=1] 

* Chain [[45,46],44,47]: 4*it(45)+1
  with precondition: [Out=0,V1>=1] 

* Chain [47]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [44,47]: 1
  with precondition: [Out=0,V1>=1] 


#### Cost of chains of start(V1,V,V2):
* Chain [50]...: 4*s(3)+0
  with precondition: [V1>=1] 

* Chain [49]: 3*s(5)+5*s(7)+1*s(8)+1*s(18)+1*s(19)+1*s(20)+1
  Such that:s(16) =< V1+V
aux(20) =< V1
aux(21) =< V
s(7) =< aux(20)
s(5) =< aux(21)
s(18) =< aux(20)
s(19) =< aux(20)
s(20) =< s(16)
s(18) =< s(16)
s(19) =< s(16)
s(20) =< aux(21)
s(19) =< aux(21)
s(5) =< aux(20)

  with precondition: [V1>=0] 

* Chain [48]: 1
  with precondition: [V1=1] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [50]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 149 ms.
   - Backward Invariants 61 ms.
   - Transitive Invariants 39 ms.
* Refinement performed in 193 ms.
* Termination proved in 49 ms.
* Upper bounds computed in 272 ms.
   - Equation cost structures 89 ms.
   - Phase cost structures 113 ms.
   - Chain cost structures 86 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 733 ms.

