
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/4]
1. recursive  : [fun1/4]
2. recursive  : [fun2/4]
3. recursive  : [fun3/4]
4. recursive  : [plus/3]
5. non_recursive  : [proper/2]
6. recursive  : [s/2]
7. recursive  : [top/2]
8. recursive  : [x/3]
9. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/4
1. SCC is partially evaluated into fun1/4
2. SCC is partially evaluated into fun2/4
3. SCC is partially evaluated into fun3/4
4. SCC is partially evaluated into plus/3
5. SCC is partially evaluated into proper/2
6. SCC is partially evaluated into s/2
7. SCC is partially evaluated into top/2
8. SCC is partially evaluated into x/3
9. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/4 
* CE 19 is refined into CE [39] 
* CE 17 is refined into CE [40] 
* CE 18 is refined into CE [41] 


#### Refined cost equations fun/4 
* CE 39: fun(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 40: fun(V,V1,V2,Out) = 1+ fun(W2,V1,V2,X2)
     [W2>=0,V2>=0,V1>=0,X2+1=Out,W2+1=V] 
* CE 41: fun(V,V1,V2,Out) = 1+ fun(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of fun/4 
* CEs [40] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [39] --> Loop 31 

#### Loops of fun/4 
* Loop 29: fun(V,V1,V2,Out)->  fun(V',V1,V2,Out')
                  [V2>=0,V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 30: fun(V,V1,V2,Out)->  fun(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 31: fun(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR fun(V,V1,V2,Out) 
* RF of phase [29,30]: [V]

#### Partial ranking functions of CR fun(V,V1,V2,Out) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1,30:1]:
    V
  - RF of loop [30:1]:
    V1
    V2


### Resulting Chains:fun(V,V1,V2,Out) 
* [[29,30],31]
* [31]


### Merging Chains  fun/4 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[29,30]]] --> 2 


### Specialization of cost equations fun1/4 
* CE 22 is refined into CE [42] 
* CE 21 is refined into CE [43] 
* CE 20 is refined into CE [44] 


#### Refined cost equations fun1/4 
* CE 42: fun1(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 43: fun1(V,V1,V2,Out) = 1+ fun1(W2,V1,V2,X2)
     [W2>=0,V2>=0,V1>=0,X2+1=Out,W2+1=V] 
* CE 44: fun1(V,V1,V2,Out) = 1+ fun1(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of fun1/4 
* CEs [43] --> Loop 32 
* CEs [44] --> Loop 33 
* CEs [42] --> Loop 34 

#### Loops of fun1/4 
* Loop 32: fun1(V,V1,V2,Out)->  fun1(V',V1,V2,Out')
                  [V2>=0,V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 33: fun1(V,V1,V2,Out)->  fun1(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 34: fun1(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR fun1(V,V1,V2,Out) 
* RF of phase [32,33]: [V]

#### Partial ranking functions of CR fun1(V,V1,V2,Out) 
* Partial RF of phase [32,33]:
  - RF of loop [32:1,33:1]:
    V
  - RF of loop [33:1]:
    V1
    V2


### Resulting Chains:fun1(V,V1,V2,Out) 
* [[32,33],34]
* [34]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[34]] --> 1 
* [[34,[32,33]]] --> 2 


### Specialization of cost equations fun2/4 
* CE 29 is refined into CE [45] 
* CE 28 is refined into CE [46] 
* CE 27 is refined into CE [47] 


#### Refined cost equations fun2/4 
* CE 45: fun2(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 46: fun2(V,V1,V2,Out) = 1+ fun2(W2,V1,V2,X2)
     [W2>=0,V2>=0,V1>=0,X2+1=Out,W2+1=V] 
* CE 47: fun2(V,V1,V2,Out) = 1+ fun2(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of fun2/4 
* CEs [46] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [45] --> Loop 37 

#### Loops of fun2/4 
* Loop 35: fun2(V,V1,V2,Out)->  fun2(V',V1,V2,Out')
                  [V2>=0,V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 36: fun2(V,V1,V2,Out)->  fun2(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 37: fun2(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR fun2(V,V1,V2,Out) 
* RF of phase [35,36]: [V]

#### Partial ranking functions of CR fun2(V,V1,V2,Out) 
* Partial RF of phase [35,36]:
  - RF of loop [35:1,36:1]:
    V
  - RF of loop [36:1]:
    V1
    V2


### Resulting Chains:fun2(V,V1,V2,Out) 
* [[35,36],37]
* [37]


### Merging Chains  fun2/4 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[35,36]]] --> 2 


### Specialization of cost equations fun3/4 
* CE 38 is refined into CE [48] 
* CE 37 is refined into CE [49] 
* CE 36 is refined into CE [50] 


#### Refined cost equations fun3/4 
* CE 48: fun3(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 49: fun3(V,V1,V2,Out) = 1+ fun3(W2,V1,V2,X2)
     [W2>=0,V2>=0,V1>=0,X2+1=Out,W2+1=V] 
* CE 50: fun3(V,V1,V2,Out) = 1+ fun3(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of fun3/4 
* CEs [49] --> Loop 38 
* CEs [50] --> Loop 39 
* CEs [48] --> Loop 40 

#### Loops of fun3/4 
* Loop 38: fun3(V,V1,V2,Out)->  fun3(V',V1,V2,Out')
                  [V2>=0,V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 39: fun3(V,V1,V2,Out)->  fun3(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 40: fun3(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR fun3(V,V1,V2,Out) 
* RF of phase [38,39]: [V]

#### Partial ranking functions of CR fun3(V,V1,V2,Out) 
* Partial RF of phase [38,39]:
  - RF of loop [38:1,39:1]:
    V
  - RF of loop [39:1]:
    V1
    V2


### Resulting Chains:fun3(V,V1,V2,Out) 
* [[38,39],40]
* [40]


### Merging Chains  fun3/4 into  External patterns of execution 
* [[40]] --> 1 
* [[40,[38,39]]] --> 2 


### Specialization of cost equations plus/3 
* CE 35 is refined into CE [51] 
* CE 34 is refined into CE [52] 
* CE 32 is refined into CE [53] 
* CE 33 is refined into CE [54] 


#### Refined cost equations plus/3 
* CE 51: plus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 52: plus(V,V1,Out) = 1+ plus(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 53: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 54: plus(V,V1,Out) = 1+ plus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of plus/3 
* CEs [52] --> Loop 41 
* CEs [53] --> Loop 42 
* CEs [54] --> Loop 43 
* CEs [51] --> Loop 44 

#### Loops of plus/3 
* Loop 41: plus(V,V1,Out)->  plus(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 42: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 43: plus(V,V1,Out)->  plus(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 44: plus(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [41,42,43]: [V+V1]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [41,42,43]:
  - RF of loop [41:1,43:1]:
    V1
  - RF of loop [42:1,43:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[41,42,43],44]
* [44]


### Merging Chains  plus/3 into  External patterns of execution 
* [[44]] --> 1 
* [[44,[41,42,43]]] --> 2 


### Specialization of cost equations proper/2 
* CE 16 is refined into CE [55] 
* CE 14 is refined into CE [56] 
* CE 15 is refined into CE [57] 


#### Refined cost equations proper/2 
* CE 55: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 56: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 57: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [55] --> Loop 45 
* CEs [56] --> Loop 46 
* CEs [57] --> Loop 47 

#### Loops of proper/2 
* Loop 45: proper(V,Out) [V>=0,Out=0] 
* Loop 46: proper(V,Out) [Out=2,V=1] 
* Loop 47: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [47]
* [46]
* [45]


### Merging Chains  proper/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 


### Specialization of cost equations s/2 
* CE 31 is refined into CE [58] 
* CE 30 is refined into CE [59] 


#### Refined cost equations s/2 
* CE 58: s(V,Out) = 0
     [V>=0,Out=0] 
* CE 59: s(V,Out) = 1+ s(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of s/2 
* CEs [59] --> Loop 48 
* CEs [58] --> Loop 49 

#### Loops of s/2 
* Loop 48: s(V,Out)->  s(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 49: s(V,Out) [V>=0,Out=0] 

### Ranking functions of CR s(V,Out) 
* RF of phase [48]: [V]

#### Partial ranking functions of CR s(V,Out) 
* Partial RF of phase [48]:
  - RF of loop [48:1]:
    V


### Resulting Chains:s(V,Out) 
* [[48],49]
* [49]


### Merging Chains  s/2 into  External patterns of execution 
* [[49]] --> 1 
* [[49,[48]]] --> 2 


### Specialization of cost equations top/2 
* CE 13 is refined into CE [60] 
* CE 11 is refined into CE [61] 
* CE 12 is refined into CE [62,63,64] 


#### Refined cost equations top/2 
* CE 60: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 61: top(V,Out) = 1+ top(V,Out)
     [V>=1] 
* CE 62: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 63: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 64: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [64] --> Loop 50 
* CEs [63] --> Loop 51 
* CEs [61,62] --> Loop 52 
* CEs [60] --> Loop 53 

#### Loops of top/2 
* Loop 50: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 51: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 52: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 53: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[51,52]]...
* [[51,52],53]
* [[51,52],50,53]
* [53]
* [50,53]


### Merging Chains  top/2 into  External patterns of execution 
* [[53,50],[53],[53,50,[51,52]],[53,[51,52]]] --> 1 
* [[[51,52]]] --> 2 


### Specialization of cost equations x/3 
* CE 26 is refined into CE [65] 
* CE 25 is refined into CE [66] 
* CE 23 is refined into CE [67] 
* CE 24 is refined into CE [68] 


#### Refined cost equations x/3 
* CE 65: x(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 66: x(V,V1,Out) = 1+ x(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 67: x(V,V1,Out) = 1+ x(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 68: x(V,V1,Out) = 1+ x(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of x/3 
* CEs [66] --> Loop 54 
* CEs [67] --> Loop 55 
* CEs [68] --> Loop 56 
* CEs [65] --> Loop 57 

#### Loops of x/3 
* Loop 54: x(V,V1,Out)->  x(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 55: x(V,V1,Out)->  x(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 56: x(V,V1,Out)->  x(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 57: x(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR x(V,V1,Out) 
* RF of phase [54,55,56]: [V+V1]

#### Partial ranking functions of CR x(V,V1,Out) 
* Partial RF of phase [54,55,56]:
  - RF of loop [54:1,56:1]:
    V1
  - RF of loop [55:1,56:1]:
    V


### Resulting Chains:x(V,V1,Out) 
* [[54,55,56],57]
* [57]


### Merging Chains  x/3 into  External patterns of execution 
* [[57]] --> 1 
* [[57,[54,55,56]]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [69,70] 
* CE 3 is refined into CE [71,72,73] 
* CE 4 is refined into CE [74,75] 
* CE 5 is refined into CE [76,77] 
* CE 6 is refined into CE [78,79] 
* CE 7 is refined into CE [80,81] 
* CE 8 is refined into CE [82,83] 
* CE 9 is refined into CE [84,85] 
* CE 10 is refined into CE [86,87] 


#### Refined cost equations start/3 
* CE 69: start(V,V1,V2) = 0+ top(V,W2):1
     [V>=0,W2=0] 
* CE 70: start(V,V1,V2) = 0+ top(V,W2):2
     [V>=1] 
* CE 71: start(V,V1,V2) = 0+ proper(W2,X2):1
     [X2=1,W2=0,V=0] 
* CE 72: start(V,V1,V2) = 0+ proper(W2,X2):2
     [X2=2,W2=1,V=1] 
* CE 73: start(V,V1,V2) = 0+ proper(V,W2):3
     [V>=0,W2=0] 
* CE 74: start(V,V1,V2) = 0+ fun(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 75: start(V,V1,V2) = 0+ fun(V,V1,V2,W2):2
     [V>=W2,W2>=1,V2>=0,V1>=0] 
* CE 76: start(V,V1,V2) = 0+ fun1(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 77: start(V,V1,V2) = 0+ fun1(V,V1,V2,W2):2
     [V>=W2,W2>=1,V2>=0,V1>=0] 
* CE 78: start(V,V1,V2) = 0+ x(V,V1,W2):1
     [V1>=0,V>=0,W2=0] 
* CE 79: start(V,V1,V2) = 0+ x(V,V1,W2):2
     [V+V1>=W2,W2>=1,V1>=0,V>=0] 
* CE 80: start(V,V1,V2) = 0+ fun2(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 81: start(V,V1,V2) = 0+ fun2(V,V1,V2,W2):2
     [V>=W2,W2>=1,V2>=0,V1>=0] 
* CE 82: start(V,V1,V2) = 0+ s(V,W2):1
     [V>=0,W2=0] 
* CE 83: start(V,V1,V2) = 0+ s(V,W2):2
     [V>=W2,W2>=1] 
* CE 84: start(V,V1,V2) = 0+ plus(V,V1,W2):1
     [V1>=0,V>=0,W2=0] 
* CE 85: start(V,V1,V2) = 0+ plus(V,V1,W2):2
     [V+V1>=W2,W2>=1,V1>=0,V>=0] 
* CE 86: start(V,V1,V2) = 0+ fun3(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 87: start(V,V1,V2) = 0+ fun3(V,V1,V2,W2):2
     [V>=W2,W2>=1,V2>=0,V1>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [72] --> Loop 58 
* CEs [69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87] --> Loop 59 
* CEs [70] --> Loop 60 

#### Loops of start/3 
* Loop 58: start(V,V1,V2) [V=1] 
* Loop 59: start(V,V1,V2) [V>=0] 
* Loop 60: start(V,V1,V2) [V>=1] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [60]...
* [59]
* [58]


### Merging Chains  start/3 into  External patterns of execution 
* [[58],[59]] --> 1 
* [[60]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [29,30] 

 * loop 29:fun(V,V1,V2,Out) -> [fun(V',V1',V2',Out')] 
1
 * loop 30:fun(V,V1,V2,Out) -> [fun(V',V1',V2',Out')] 
1
#### Cost of phase [29,30]:fun(V,V1,V2,Out) -> [fun(V',V1',V2',Out')] 
1*it(29)+1*it(30)+0
  Such that:it(30) =< V1
it(30) =< V1-V1'
it(30) =< V2
it(30) =< V2-V2'
aux(1) =< V
aux(2) =< V-V'
it(29) =< aux(1)
it(30) =< aux(1)
it(29) =< aux(2)
it(30) =< aux(2)

#### Cost of chains of fun(V,V1,V2,Out):
* Chain [[29,30],31]: 1*it(29)+1*it(30)+0
  Such that:aux(1) =< V
it(30) =< V1
aux(2) =< Out
it(29) =< aux(1)
it(30) =< aux(1)
it(29) =< aux(2)
it(30) =< aux(2)

  with precondition: [V1>=0,V2>=0,Out>=1,V>=Out] 

* Chain [31]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of loops [32,33] 

 * loop 32:fun1(V,V1,V2,Out) -> [fun1(V',V1',V2',Out')] 
1
 * loop 33:fun1(V,V1,V2,Out) -> [fun1(V',V1',V2',Out')] 
1
#### Cost of phase [32,33]:fun1(V,V1,V2,Out) -> [fun1(V',V1',V2',Out')] 
1*it(32)+1*it(33)+0
  Such that:it(33) =< V1
it(33) =< V1-V1'
it(33) =< V2
it(33) =< V2-V2'
aux(3) =< V
aux(4) =< V-V'
it(32) =< aux(3)
it(33) =< aux(3)
it(32) =< aux(4)
it(33) =< aux(4)

#### Cost of chains of fun1(V,V1,V2,Out):
* Chain [[32,33],34]: 1*it(32)+1*it(33)+0
  Such that:aux(3) =< V
it(33) =< V1
aux(4) =< Out
it(32) =< aux(3)
it(33) =< aux(3)
it(32) =< aux(4)
it(33) =< aux(4)

  with precondition: [V1>=0,V2>=0,Out>=1,V>=Out] 

* Chain [34]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of loops [35,36] 

 * loop 35:fun2(V,V1,V2,Out) -> [fun2(V',V1',V2',Out')] 
1
 * loop 36:fun2(V,V1,V2,Out) -> [fun2(V',V1',V2',Out')] 
1
#### Cost of phase [35,36]:fun2(V,V1,V2,Out) -> [fun2(V',V1',V2',Out')] 
1*it(35)+1*it(36)+0
  Such that:it(36) =< V1
it(36) =< V1-V1'
it(36) =< V2
it(36) =< V2-V2'
aux(5) =< V
aux(6) =< V-V'
it(35) =< aux(5)
it(36) =< aux(5)
it(35) =< aux(6)
it(36) =< aux(6)

#### Cost of chains of fun2(V,V1,V2,Out):
* Chain [[35,36],37]: 1*it(35)+1*it(36)+0
  Such that:aux(5) =< V
it(36) =< V1
aux(6) =< Out
it(35) =< aux(5)
it(36) =< aux(5)
it(35) =< aux(6)
it(36) =< aux(6)

  with precondition: [V1>=0,V2>=0,Out>=1,V>=Out] 

* Chain [37]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of loops [38,39] 

 * loop 38:fun3(V,V1,V2,Out) -> [fun3(V',V1',V2',Out')] 
1
 * loop 39:fun3(V,V1,V2,Out) -> [fun3(V',V1',V2',Out')] 
1
#### Cost of phase [38,39]:fun3(V,V1,V2,Out) -> [fun3(V',V1',V2',Out')] 
1*it(38)+1*it(39)+0
  Such that:it(39) =< V1
it(39) =< V1-V1'
it(39) =< V2
it(39) =< V2-V2'
aux(7) =< V
aux(8) =< V-V'
it(38) =< aux(7)
it(39) =< aux(7)
it(38) =< aux(8)
it(39) =< aux(8)

#### Cost of chains of fun3(V,V1,V2,Out):
* Chain [[38,39],40]: 1*it(38)+1*it(39)+0
  Such that:aux(7) =< V
it(39) =< V1
aux(8) =< Out
it(38) =< aux(7)
it(39) =< aux(7)
it(38) =< aux(8)
it(39) =< aux(8)

  with precondition: [V1>=0,V2>=0,Out>=1,V>=Out] 

* Chain [40]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of loops [41,42,43] 

 * loop 41:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
 * loop 42:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
 * loop 43:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [41,42,43]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(41)+1*it(42)+1*it(43)+0
  Such that:aux(9) =< V
aux(10) =< V+V1
aux(11) =< V+V1-V'-V1'
aux(12) =< V-V'
aux(13) =< V1
aux(14) =< V1-V1'
it(42) =< aux(9)
it(43) =< aux(9)
it(41) =< aux(10)
it(42) =< aux(10)
it(43) =< aux(10)
it(41) =< aux(11)
it(42) =< aux(11)
it(43) =< aux(11)
it(42) =< aux(12)
it(43) =< aux(12)
it(41) =< aux(13)
it(43) =< aux(13)
it(41) =< aux(14)
it(43) =< aux(14)

#### Cost of chains of plus(V,V1,Out):
* Chain [[41,42,43],44]: 1*it(41)+1*it(42)+1*it(43)+0
  Such that:aux(15) =< V
aux(16) =< V+V1
aux(17) =< V1
it(42) =< aux(15)
it(43) =< aux(15)
it(41) =< aux(16)
it(42) =< aux(16)
it(43) =< aux(16)
it(41) =< aux(17)
it(43) =< aux(17)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [44]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of proper(V,Out):
* Chain [47]: 1
  with precondition: [V=0,Out=1] 

* Chain [46]: 1
  with precondition: [V=1,Out=2] 

* Chain [45]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [48] 

 * loop 48:s(V,Out) -> [s(V',Out')] 
1
#### Cost of phase [48]:s(V,Out) -> [s(V',Out')] 
1*it(48)+0
  Such that:it(48) =< V
it(48) =< V-V'

#### Cost of chains of s(V,Out):
* Chain [[48],49]: 1*it(48)+0
  Such that:it(48) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [49]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [51,52] 

 * loop 51:top(V,Out) -> [top(V',Out')] 
2
 * loop 52:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [51,52]:top(V,Out) -> [top(V',Out')] 
4*it(51)+0
#### Cost of phase [51,52]:top(V,Out) -> [top(V',Out')] 
4*it(51)+0
#### Cost of phase [51,52]:top(V,Out) -> [top(V',Out')] 
4*it(51)+0
#### Cost of chains of top(V,Out):
* Chain [[51,52]]...: 4*it(51)+0
  with precondition: [V>=1] 

* Chain [[51,52],53]: 4*it(51)+0
  with precondition: [Out=0,V>=1] 

* Chain [[51,52],50,53]: 4*it(51)+1
  with precondition: [Out=0,V>=1] 

* Chain [53]: 0
  with precondition: [Out=0,V>=0] 

* Chain [50,53]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of loops [54,55,56] 

 * loop 54:x(V,V1,Out) -> [x(V',V1',Out')] 
1
 * loop 55:x(V,V1,Out) -> [x(V',V1',Out')] 
1
 * loop 56:x(V,V1,Out) -> [x(V',V1',Out')] 
1
#### Cost of phase [54,55,56]:x(V,V1,Out) -> [x(V',V1',Out')] 
1*it(54)+1*it(55)+1*it(56)+0
  Such that:aux(19) =< V
aux(20) =< V+V1
aux(21) =< V+V1-V'-V1'
aux(22) =< V-V'
aux(23) =< V1
aux(24) =< V1-V1'
it(55) =< aux(19)
it(56) =< aux(19)
it(54) =< aux(20)
it(55) =< aux(20)
it(56) =< aux(20)
it(54) =< aux(21)
it(55) =< aux(21)
it(56) =< aux(21)
it(55) =< aux(22)
it(56) =< aux(22)
it(54) =< aux(23)
it(56) =< aux(23)
it(54) =< aux(24)
it(56) =< aux(24)

#### Cost of chains of x(V,V1,Out):
* Chain [[54,55,56],57]: 1*it(54)+1*it(55)+1*it(56)+0
  Such that:aux(25) =< V
aux(26) =< V+V1
aux(27) =< V1
it(55) =< aux(25)
it(56) =< aux(25)
it(54) =< aux(26)
it(55) =< aux(26)
it(56) =< aux(26)
it(54) =< aux(27)
it(56) =< aux(27)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [57]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of start(V,V1,V2):
* Chain [60]...: 4*s(3)+0
  with precondition: [V>=1] 

* Chain [59]: 1*s(4)+4*s(6)+5*s(8)+2*s(16)+2*s(17)+2*s(18)+1
  Such that:aux(32) =< V
aux(33) =< V+V1
aux(34) =< V1
s(8) =< aux(32)
s(6) =< aux(34)
s(16) =< aux(32)
s(17) =< aux(32)
s(18) =< aux(33)
s(16) =< aux(33)
s(17) =< aux(33)
s(18) =< aux(34)
s(17) =< aux(34)
s(6) =< aux(32)

  with precondition: [V>=0] 

* Chain [58]: 1
  with precondition: [V=1] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [60]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [59] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [58] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 86 ms.
* Invariants computed in 240 ms.
   - Backward Invariants 93 ms.
   - Transitive Invariants 68 ms.
* Refinement performed in 398 ms.
* Termination proved in 83 ms.
* Upper bounds computed in 411 ms.
   - Equation cost structures 126 ms.
   - Phase cost structures 172 ms.
   - Chain cost structures 145 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 1392 ms.

