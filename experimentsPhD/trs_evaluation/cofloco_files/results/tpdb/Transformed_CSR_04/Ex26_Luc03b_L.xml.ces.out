
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [add/3]
1. non_recursive  : [dbl/2]
2. non_recursive  : [first/3]
3. non_recursive  : [sqr/2]
4. non_recursive  : [terms/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is partially evaluated into sqr/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations add/3 
* CE 16: add(V,V1,Out) = 1
     [V1>=0,Out=1,V=1] 
* CE 17: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [16] --> Loop 10 
* CEs [17] --> Loop 11 

#### Loops of add/3 
* Loop 10: add(V,V1,Out) [V1>=0,Out=1,V=1] 
* Loop 11: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 

#### Partial ranking functions of CR add(V,V1,Out) 


### Resulting Chains:add(V,V1,Out) 
* [11]
* [10]


### Merging Chains  add/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations dbl/2 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations dbl/2 
* CE 18: dbl(V,Out) = 1
     [Out=1,V=1] 
* CE 19: dbl(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [18] --> Loop 12 
* CEs [19] --> Loop 13 

#### Loops of dbl/2 
* Loop 12: dbl(V,Out) [Out=1,V=1] 
* Loop 13: dbl(V,Out) [Out=0,V=0] 

### Ranking functions of CR dbl(V,Out) 

#### Partial ranking functions of CR dbl(V,Out) 


### Resulting Chains:dbl(V,Out) 
* [13]
* [12]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations first/3 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 15 is refined into CE [22] 


#### Refined cost equations first/3 
* CE 20: first(A,B,B) = 1
     [B>=1,A=1] 
* CE 21: first(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 22: first(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of first/3 
* CEs [20] --> Loop 14 
* CEs [21,22] --> Loop 15 

#### Loops of first/3 
* Loop 14: first(A,B,B) [B>=1,A=1] 
* Loop 15: first(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR first(V,V1,Out) 

#### Partial ranking functions of CR first(V,V1,Out) 


### Resulting Chains:first(V,V1,Out) 
* [15]
* [14]


### Merging Chains  first/3 into  External patterns of execution 
* [[14]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations sqr/2 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24] 


#### Refined cost equations sqr/2 
* CE 23: sqr(V,Out) = 1
     [Out=1,V=1] 
* CE 24: sqr(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [23] --> Loop 16 
* CEs [24] --> Loop 17 

#### Loops of sqr/2 
* Loop 16: sqr(V,Out) [Out=1,V=1] 
* Loop 17: sqr(V,Out) [Out=0,V=0] 

### Ranking functions of CR sqr(V,Out) 

#### Partial ranking functions of CR sqr(V,Out) 


### Resulting Chains:sqr(V,Out) 
* [17]
* [16]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [25,26] 
* CE 3 is refined into CE [27,28] 
* CE 4 is refined into CE [29,30] 
* CE 5 is refined into CE [31,32] 
* CE 6 is refined into CE [33,34] 


#### Refined cost equations start/2 
* CE 25: start(V,V1) = 1+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 26: start(V,V1) = 1+ sqr(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 27: start(V,V1) = 0+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 28: start(V,V1) = 0+ sqr(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 29: start(V,V1) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 30: start(V,V1) = 0+ dbl(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 31: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 32: start(V,V1) = 0+ add(W1,V1,X1):2
     [V1>=0,X1=1,W1=1,V=1] 
* CE 33: start(V,V1) = 0+ first(W1,V1,V1):1
     [V1>=1,W1=1,V=1] 
* CE 34: start(V,V1) = 0+ first(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [34] --> Loop 18 
* CEs [26,28,30,32,33] --> Loop 19 
* CEs [25,27,29,31] --> Loop 20 

#### Loops of start/2 
* Loop 18: start(V,V1) [V1>=0,V>=0] 
* Loop 19: start(V,V1) [V=1] 
* Loop 20: start(V,V1) [V=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [20]
* [19]
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of add(V,V1,Out):
* Chain [11]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [10]: 1
  with precondition: [V=1,Out=1,V1>=0] 


#### Cost of chains of dbl(V,Out):
* Chain [13]: 1
  with precondition: [V=0,Out=0] 

* Chain [12]: 1
  with precondition: [V=1,Out=1] 


#### Cost of chains of first(V,V1,Out):
* Chain [15]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [14]: 1
  with precondition: [V=1,V1=Out,V1>=1] 


#### Cost of chains of sqr(V,Out):
* Chain [17]: 1
  with precondition: [V=0,Out=0] 

* Chain [16]: 1
  with precondition: [V=1,Out=1] 


#### Cost of chains of start(V,V1):
* Chain [20]: 2
  with precondition: [V=0] 

* Chain [19]: 2
  with precondition: [V=1] 

* Chain [18]: 1
  with precondition: [V>=0,V1>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [20] with precondition: [V=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [19] with precondition: [V=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [18] with precondition: [V>=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): 2 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 65 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 173 ms.

