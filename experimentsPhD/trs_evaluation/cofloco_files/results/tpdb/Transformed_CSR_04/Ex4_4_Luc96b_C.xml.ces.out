
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f/3]
1. recursive  : [g/2]
2. recursive  : [top/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f/3
1. SCC is partially evaluated into g/2
2. SCC is partially evaluated into top/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/3 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


#### Refined cost equations f/3 
* CE 12: f(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 13: f(V1,V,Out) = 1+ f(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 14: f(V1,V,Out) = 1+ f(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of f/3 
* CEs [13] --> Loop 9 
* CEs [14] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of f/3 
* Loop 9: f(V1,V,Out)->  f(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 10: f(V1,V,Out)->  f(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 11: f(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR f(V1,V,Out) 
* RF of phase [9,10]: [V1]

#### Partial ranking functions of CR f(V1,V,Out) 
* Partial RF of phase [9,10]:
  - RF of loop [9:1,10:1]:
    V1
  - RF of loop [10:1]:
    V


### Resulting Chains:f(V1,V,Out) 
* [[9,10],11]
* [11]


### Merging Chains  f/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[9,10]]] --> 2 


### Specialization of cost equations g/2 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations g/2 
* CE 15: g(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 16: g(V1,Out) = 1+ g(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of g/2 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of g/2 
* Loop 12: g(V1,Out)->  g(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 13: g(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR g(V1,Out) 
* RF of phase [12]: [V1]

#### Partial ranking functions of CR g(V1,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V1


### Resulting Chains:g(V1,Out) 
* [[12],13]
* [13]


### Merging Chains  g/2 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations top/2 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 


#### Refined cost equations top/2 
* CE 17: top(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 18: top(V1,Out) = 1+ top(V1,Out)
     [V1>=1] 

### Cost equations --> "Loop" of top/2 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of top/2 
* Loop 14: top(V1,Out)->  top(V1,Out)
                  [V1>=1] 
* Loop 15: top(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR top(V1,Out) 

#### Partial ranking functions of CR top(V1,Out) 


### Resulting Chains:top(V1,Out) 
* [[14]]...
* [[14],15]
* [15]


### Merging Chains  top/2 into  External patterns of execution 
* [[15],[15,[14]]] --> 1 
* [[[14]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [19,20] 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23,24] 


#### Refined cost equations start/2 
* CE 19: start(V1,V) = 0+ f(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 20: start(V1,V) = 0+ f(V1,V,W1):2
     [V1>=W1,W1>=1,V>=0] 
* CE 21: start(V1,V) = 0+ g(V1,W1):1
     [V1>=0,W1=0] 
* CE 22: start(V1,V) = 0+ g(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 23: start(V1,V) = 0+ top(V1,W1):1
     [V1>=0,W1=0] 
* CE 24: start(V1,V) = 0+ top(V1,W1):2
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [24] --> Loop 16 
* CEs [19,20,21,22,23] --> Loop 17 

#### Loops of start/2 
* Loop 16: start(V1,V) [V1>=1] 
* Loop 17: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [17]
* [16]...


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9,10] 

 * loop 9:f(V1,V,Out) -> [f(V1',V',Out')] 
1
 * loop 10:f(V1,V,Out) -> [f(V1',V',Out')] 
1
#### Cost of phase [9,10]:f(V1,V,Out) -> [f(V1',V',Out')] 
1*it(9)+1*it(10)+0
  Such that:it(10) =< V
it(10) =< V-V'
aux(1) =< V1
aux(2) =< V1-V1'
it(9) =< aux(1)
it(10) =< aux(1)
it(9) =< aux(2)
it(10) =< aux(2)

#### Cost of chains of f(V1,V,Out):
* Chain [[9,10],11]: 1*it(9)+1*it(10)+0
  Such that:aux(1) =< V1
it(10) =< V
aux(2) =< Out
it(9) =< aux(1)
it(10) =< aux(1)
it(9) =< aux(2)
it(10) =< aux(2)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [11]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [12] 

 * loop 12:g(V1,Out) -> [g(V1',Out')] 
1
#### Cost of phase [12]:g(V1,Out) -> [g(V1',Out')] 
1*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of g(V1,Out):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [14] 

 * loop 14:top(V1,Out) -> [top(V1',Out')] 
1
#### Cost of phase [14]:top(V1,Out) -> [top(V1',Out')] 
1*it(14)+0
#### Cost of phase [14]:top(V1,Out) -> [top(V1',Out')] 
1*it(14)+0
#### Cost of chains of top(V1,Out):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [V1>=1] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [Out=0,V1>=1] 

* Chain [15]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [17]: 1*s(3)+2*s(5)+1*s(7)+0
  Such that:s(3) =< V
aux(5) =< V1
s(5) =< aux(5)
s(3) =< aux(5)

  with precondition: [V1>=0] 

* Chain [16]...: 1*s(8)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [17] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 25 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 84 ms.

