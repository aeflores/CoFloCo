
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [ (div)/3]
1. recursive  : [geq/3]
2. recursive  : [if/4]
3. recursive  : [minus/3]
4. non_recursive  : [proper/2]
5. recursive  : [s/2]
6. recursive  : [top/2]
7. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into (div)/3
1. SCC is partially evaluated into geq/3
2. SCC is partially evaluated into if/4
3. SCC is partially evaluated into minus/3
4. SCC is partially evaluated into proper/2
5. SCC is partially evaluated into s/2
6. SCC is partially evaluated into top/2
7. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations (div)/3 
* CE 11 is refined into CE [28] 
* CE 9 is refined into CE [29] 
* CE 10 is refined into CE [30] 


#### Refined cost equations (div)/3 
* CE 28: div(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 29: div(V1,V,Out) = 1+ div(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 30: div(V1,V,Out) = 1+ div(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of (div)/3 
* CEs [29] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of (div)/3 
* Loop 20: div(V1,V,Out)->  div(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 21: div(V1,V,Out)->  div(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 22: div(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR div(V1,V,Out) 
* RF of phase [20,21]: [V1]

#### Partial ranking functions of CR div(V1,V,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1,21:1]:
    V1
  - RF of loop [21:1]:
    V


### Resulting Chains:div(V1,V,Out) 
* [[20,21],22]
* [22]


### Merging Chains  (div)/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[20,21]]] --> 2 


### Specialization of cost equations geq/3 
* CE 27 is refined into CE [31] 
* CE 26 is refined into CE [32] 


#### Refined cost equations geq/3 
* CE 31: geq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 32: geq(V1,V,Out) = 1+ geq(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of geq/3 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of geq/3 
* Loop 23: geq(V1,V,Out)->  geq(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 24: geq(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR geq(V1,V,Out) 
* RF of phase [23]: [V,V1]

#### Partial ranking functions of CR geq(V1,V,Out) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V
    V1


### Resulting Chains:geq(V1,V,Out) 
* [[23],24]
* [24]


### Merging Chains  geq/3 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations if/4 
* CE 25 is refined into CE [33] 
* CE 23 is refined into CE [34] 
* CE 24 is refined into CE [35] 


#### Refined cost equations if/4 
* CE 33: if(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 34: if(V1,V,V2,Out) = 1+ if(W2,V,V2,X2)
     [W2>=0,V2>=0,V>=0,X2+1=Out,W2+1=V1] 
* CE 35: if(V1,V,V2,Out) = 1+ if(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V,W2+1=V1] 

### Cost equations --> "Loop" of if/4 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 
* CEs [33] --> Loop 27 

#### Loops of if/4 
* Loop 25: if(V1,V,V2,Out)->  if(V1',V,V2,Out')
                  [V2>=0,V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 26: if(V1,V,V2,Out)->  if(V1',V',V2',Out')
                  [V2>=1,V>=1,V1>=1,Out=Out'+1,V2=V2'+1,V=V'+1,V1=V1'+1] 
* Loop 27: if(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 

### Ranking functions of CR if(V1,V,V2,Out) 
* RF of phase [25,26]: [V1]

#### Partial ranking functions of CR if(V1,V,V2,Out) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1,26:1]:
    V1
  - RF of loop [26:1]:
    V
    V2


### Resulting Chains:if(V1,V,V2,Out) 
* [[25,26],27]
* [27]


### Merging Chains  if/4 into  External patterns of execution 
* [[27]] --> 1 
* [[27,[25,26]]] --> 2 


### Specialization of cost equations minus/3 
* CE 20 is refined into CE [36] 
* CE 19 is refined into CE [37] 


#### Refined cost equations minus/3 
* CE 36: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 37: minus(V1,V,Out) = 1+ minus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [37] --> Loop 28 
* CEs [36] --> Loop 29 

#### Loops of minus/3 
* Loop 28: minus(V1,V,Out)->  minus(V1',V',Out')
                  [V'>=0,V1'>=0,Out=Out'+1,V'+1=V,V1'+1=V1] 
* Loop 29: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [28]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[28],29]
* [29]


### Merging Chains  minus/3 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[28]]] --> 2 


### Specialization of cost equations proper/2 
* CE 15 is refined into CE [38] 
* CE 12 is refined into CE [39] 
* CE 13 is refined into CE [40] 
* CE 14 is refined into CE [41] 


#### Refined cost equations proper/2 
* CE 38: proper(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 39: proper(V1,Out) = 1
     [Out=3,V1=2] 
* CE 40: proper(V1,Out) = 1
     [Out=2,V1=1] 
* CE 41: proper(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [38] --> Loop 30 
* CEs [39] --> Loop 31 
* CEs [40] --> Loop 32 
* CEs [41] --> Loop 33 

#### Loops of proper/2 
* Loop 30: proper(V1,Out) [V1>=0,Out=0] 
* Loop 31: proper(V1,Out) [Out=3,V1=2] 
* Loop 32: proper(V1,Out) [Out=2,V1=1] 
* Loop 33: proper(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR proper(V1,Out) 

#### Partial ranking functions of CR proper(V1,Out) 


### Resulting Chains:proper(V1,Out) 
* [33]
* [32]
* [31]
* [30]


### Merging Chains  proper/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 
* [[30]] --> 4 


### Specialization of cost equations s/2 
* CE 22 is refined into CE [42] 
* CE 21 is refined into CE [43] 


#### Refined cost equations s/2 
* CE 42: s(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 43: s(V1,Out) = 1+ s(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of s/2 
* CEs [43] --> Loop 34 
* CEs [42] --> Loop 35 

#### Loops of s/2 
* Loop 34: s(V1,Out)->  s(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 35: s(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR s(V1,Out) 
* RF of phase [34]: [V1]

#### Partial ranking functions of CR s(V1,Out) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V1


### Resulting Chains:s(V1,Out) 
* [[34],35]
* [35]


### Merging Chains  s/2 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[34]]] --> 2 


### Specialization of cost equations top/2 
* CE 18 is refined into CE [44] 
* CE 16 is refined into CE [45] 
* CE 17 is refined into CE [46,47,48,49] 


#### Refined cost equations top/2 
* CE 44: top(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 45: top(V1,Out) = 1+ top(V1,Out)
     [V1>=1] 
* CE 46: top(V1,Out) = 1+ proper(W1,X1):1+ top(Y1,Out)
     [Y1=1,X1=1,W1=0,V1=1] 
* CE 47: top(V1,Out) = 1+ proper(W1,X1):2+ top(Y1,Out)
     [Y1=2,X1=2,W1=1,V1=2] 
* CE 48: top(V1,Out) = 1+ proper(W1,X1):3+ top(Y1,Out)
     [Y1=3,X1=3,W1=2,V1=3] 
* CE 49: top(V1,Out) = 1+ proper(W1,X1):4+ top(Y1,Out)
     [W1>=0,W1+1=V1,Y1=0,X1=0] 

### Cost equations --> "Loop" of top/2 
* CEs [49] --> Loop 36 
* CEs [48] --> Loop 37 
* CEs [47] --> Loop 38 
* CEs [45,46] --> Loop 39 
* CEs [44] --> Loop 40 

#### Loops of top/2 
* Loop 36: top(V1,Out)->  top(V1',Out)
                  [V1>=1,V1'=0] 
* Loop 37: top(V1,Out)->  top(V1',Out)
                  [V1'=3,V1=3] 
* Loop 38: top(V1,Out)->  top(V1',Out)
                  [V1'=2,V1=2] 
* Loop 39: top(V1,Out)->  top(V1,Out)
                  [V1>=1] 
* Loop 40: top(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR top(V1,Out) 

#### Partial ranking functions of CR top(V1,Out) 


### Resulting Chains:top(V1,Out) 
* [[37,38,39]]...
* [[37,38,39],40]
* [[37,38,39],36,40]
* [40]
* [36,40]


### Merging Chains  top/2 into  External patterns of execution 
* [[40,36],[40],[40,36,[37,38,39]],[40,[37,38,39]]] --> 1 
* [[[37,38,39]]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [50,51] 
* CE 3 is refined into CE [52,53,54,55] 
* CE 4 is refined into CE [56,57] 
* CE 5 is refined into CE [58,59] 
* CE 6 is refined into CE [60,61] 
* CE 7 is refined into CE [62,63] 
* CE 8 is refined into CE [64,65] 


#### Refined cost equations start/3 
* CE 50: start(V1,V,V2) = 0+ div(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 51: start(V1,V,V2) = 0+ div(V1,V,W2):2
     [V1>=W2,W2>=1,V>=0] 
* CE 52: start(V1,V,V2) = 0+ proper(W2,X2):1
     [X2=1,W2=0,V1=0] 
* CE 53: start(V1,V,V2) = 0+ proper(W2,X2):2
     [X2=2,W2=1,V1=1] 
* CE 54: start(V1,V,V2) = 0+ proper(W2,X2):3
     [X2=3,W2=2,V1=2] 
* CE 55: start(V1,V,V2) = 0+ proper(V1,W2):4
     [V1>=0,W2=0] 
* CE 56: start(V1,V,V2) = 0+ top(V1,W2):1
     [V1>=0,W2=0] 
* CE 57: start(V1,V,V2) = 0+ top(V1,W2):2
     [V1>=1] 
* CE 58: start(V1,V,V2) = 0+ minus(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 59: start(V1,V,V2) = 0+ minus(V1,V,W2):2
     [V>=W2,V1>=W2,W2>=1] 
* CE 60: start(V1,V,V2) = 0+ s(V1,W2):1
     [V1>=0,W2=0] 
* CE 61: start(V1,V,V2) = 0+ s(V1,W2):2
     [V1>=W2,W2>=1] 
* CE 62: start(V1,V,V2) = 0+ if(V1,V,V2,W2):1
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 63: start(V1,V,V2) = 0+ if(V1,V,V2,W2):2
     [V1>=W2,W2>=1,V2>=0,V>=0] 
* CE 64: start(V1,V,V2) = 0+ geq(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 65: start(V1,V,V2) = 0+ geq(V1,V,W2):2
     [V>=W2,V1>=W2,W2>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [54] --> Loop 41 
* CEs [53] --> Loop 42 
* CEs [50,51,52,55,56,58,59,60,61,62,63,64,65] --> Loop 43 
* CEs [57] --> Loop 44 

#### Loops of start/3 
* Loop 41: start(V1,V,V2) [V1=2] 
* Loop 42: start(V1,V,V2) [V1=1] 
* Loop 43: start(V1,V,V2) [V1>=0] 
* Loop 44: start(V1,V,V2) [V1>=1] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [44]...
* [43]
* [42]
* [41]


### Merging Chains  start/3 into  External patterns of execution 
* [[42],[43]] --> 1 
* [[41]] --> 2 
* [[44]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [20,21] 

 * loop 20:div(V1,V,Out) -> [div(V1',V',Out')] 
1
 * loop 21:div(V1,V,Out) -> [div(V1',V',Out')] 
1
#### Cost of phase [20,21]:div(V1,V,Out) -> [div(V1',V',Out')] 
1*it(20)+1*it(21)+0
  Such that:it(21) =< V
it(21) =< V-V'
aux(1) =< V1
aux(2) =< V1-V1'
it(20) =< aux(1)
it(21) =< aux(1)
it(20) =< aux(2)
it(21) =< aux(2)

#### Cost of chains of div(V1,V,Out):
* Chain [[20,21],22]: 1*it(20)+1*it(21)+0
  Such that:aux(1) =< V1
it(21) =< V
aux(2) =< Out
it(20) =< aux(1)
it(21) =< aux(1)
it(20) =< aux(2)
it(21) =< aux(2)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [23] 

 * loop 23:geq(V1,V,Out) -> [geq(V1',V',Out')] 
1
#### Cost of phase [23]:geq(V1,V,Out) -> [geq(V1',V',Out')] 
1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
it(23) =< V
it(23) =< V-V'

#### Cost of chains of geq(V1,V,Out):
* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [24]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [25,26] 

 * loop 25:if(V1,V,V2,Out) -> [if(V1',V',V2',Out')] 
1
 * loop 26:if(V1,V,V2,Out) -> [if(V1',V',V2',Out')] 
1
#### Cost of phase [25,26]:if(V1,V,V2,Out) -> [if(V1',V',V2',Out')] 
1*it(25)+1*it(26)+0
  Such that:it(26) =< V
it(26) =< V-V'
it(26) =< V2
it(26) =< V2-V2'
aux(3) =< V1
aux(4) =< V1-V1'
it(25) =< aux(3)
it(26) =< aux(3)
it(25) =< aux(4)
it(26) =< aux(4)

#### Cost of chains of if(V1,V,V2,Out):
* Chain [[25,26],27]: 1*it(25)+1*it(26)+0
  Such that:aux(3) =< V1
it(26) =< V
aux(4) =< Out
it(25) =< aux(3)
it(26) =< aux(3)
it(25) =< aux(4)
it(26) =< aux(4)

  with precondition: [V>=0,V2>=0,Out>=1,V1>=Out] 

* Chain [27]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 


#### Cost of loops [28] 

 * loop 28:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1
#### Cost of phase [28]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
1*it(28)+0
  Such that:it(28) =< V1
it(28) =< V1-V1'
it(28) =< V
it(28) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< Out

  with precondition: [Out>=1,V1>=Out,V>=Out] 

* Chain [29]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of proper(V1,Out):
* Chain [33]: 1
  with precondition: [V1=0,Out=1] 

* Chain [32]: 1
  with precondition: [V1=1,Out=2] 

* Chain [31]: 1
  with precondition: [V1=2,Out=3] 

* Chain [30]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [34] 

 * loop 34:s(V1,Out) -> [s(V1',Out')] 
1
#### Cost of phase [34]:s(V1,Out) -> [s(V1',Out')] 
1*it(34)+0
  Such that:it(34) =< V1
it(34) =< V1-V1'

#### Cost of chains of s(V1,Out):
* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [35]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [37,38,39] 

 * loop 37:top(V1,Out) -> [top(V1',Out')] 
2
 * loop 38:top(V1,Out) -> [top(V1',Out')] 
2
 * loop 39:top(V1,Out) -> [top(V1',Out')] 
2
#### Cost of phase [37,38,39]:top(V1,Out) -> [top(V1',Out')] 
6*it(37)+0
#### Cost of phase [37,38,39]:top(V1,Out) -> [top(V1',Out')] 
6*it(37)+0
#### Cost of phase [37,38,39]:top(V1,Out) -> [top(V1',Out')] 
6*it(37)+0
#### Cost of chains of top(V1,Out):
* Chain [[37,38,39]]...: 6*it(37)+0
  with precondition: [V1>=1] 

* Chain [[37,38,39],40]: 6*it(37)+0
  with precondition: [Out=0,V1>=1] 

* Chain [[37,38,39],36,40]: 6*it(37)+1
  with precondition: [Out=0,V1>=1] 

* Chain [40]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [36,40]: 1
  with precondition: [Out=0,V1>=1] 


#### Cost of chains of start(V1,V,V2):
* Chain [44]...: 6*s(3)+0
  with precondition: [V1>=1] 

* Chain [43]: 2*s(5)+3*s(7)+1*s(8)+2*s(9)+1
  Such that:aux(8) =< V1
aux(9) =< V
s(7) =< aux(8)
s(5) =< aux(9)
s(9) =< aux(9)
s(5) =< aux(8)

  with precondition: [V1>=0] 

* Chain [42]: 1
  with precondition: [V1=1] 

* Chain [41]: 1
  with precondition: [V1=2] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [44]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [41] with precondition: [V1=2] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 74 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 62 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 21 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 237 ms.

