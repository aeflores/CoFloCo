
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
1. non_recursive  : [s/2]
2. non_recursive  : [activate/2]
3. recursive  : [geq/3]
4. non_recursive  : [if/4]
5. recursive  : [minus/3]
6. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into geq/3
4. SCC is partially evaluated into if/4
5. SCC is partially evaluated into minus/3
6. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations activate/2 
* CE 20: activate(V1,Out) = 2
     [Out=0,V1=0] 
* CE 21: activate(A,A) = 1
     [A>=0] 
* CE 22: activate(A,A) = 2
     [A>=1] 

### Cost equations --> "Loop" of activate/2 
* CEs [20,21,22] --> Loop 12 

#### Loops of activate/2 
* Loop 12: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 


### Resulting Chains:activate(V1,Out) 
* [12]


### Merging Chains  activate/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations geq/3 
* CE 16 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 15 is refined into CE [25] 
* CE 14 is refined into CE [26] 


#### Refined cost equations geq/3 
* CE 23: geq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 24: geq(V1,V,Out) = 1
     [V1>=0,Out=2,V=0] 
* CE 25: geq(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 26: geq(V1,V,Out) = 1+ activate(W1,W1):1+ activate(X1,X1):1+ geq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of geq/3 
* CEs [26] --> Loop 13 
* CEs [23] --> Loop 14 
* CEs [24] --> Loop 15 
* CEs [25] --> Loop 16 

#### Loops of geq/3 
* Loop 13: geq(V1,V,Out)->  geq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 14: geq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 15: geq(V1,V,Out) [V1>=0,Out=2,V=0] 
* Loop 16: geq(V1,V,Out) [V>=1,Out=1,V1=0] 

### Ranking functions of CR geq(V1,V,Out) 
* RF of phase [13]: [V,V1]

#### Partial ranking functions of CR geq(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V
    V1


### Resulting Chains:geq(V1,V,Out) 
* [[13],16]
* [[13],15]
* [[13],14]
* [16]
* [15]
* [14]


### Merging Chains  geq/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14],[14,[13]]] --> 3 
* [[16,[13]]] --> 4 
* [[15,[13]]] --> 5 


### Specialization of cost equations if/4 
* CE 19 is refined into CE [27] 
* CE 18 is refined into CE [28] 
* CE 17 is refined into CE [29] 


#### Refined cost equations if/4 
* CE 27: if(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 28: if(A,B,C,B) = 1+ activate(B,B):1
     [B>=0,C>=0,A=2] 
* CE 29: if(A,B,C,C) = 1+ activate(C,C):1
     [C>=0,B>=0,A=1] 

### Cost equations --> "Loop" of if/4 
* CEs [27] --> Loop 17 
* CEs [28] --> Loop 18 
* CEs [29] --> Loop 19 

#### Loops of if/4 
* Loop 17: if(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 
* Loop 18: if(A,B,C,B) [C>=0,B>=0,A=2] 
* Loop 19: if(A,B,C,C) [C>=0,B>=0,A=1] 

### Ranking functions of CR if(V1,V,V2,Out) 

#### Partial ranking functions of CR if(V1,V,V2,Out) 


### Resulting Chains:if(V1,V,V2,Out) 
* [19]
* [18]
* [17]


### Merging Chains  if/4 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 


### Specialization of cost equations minus/3 
* CE 7 is refined into CE [30] 
* CE 9 is refined into CE [31] 
* CE 8 is refined into CE [32] 


#### Refined cost equations minus/3 
* CE 30: minus(V1,V,Out) = 2
     [V>=0,Out=0,V1=0] 
* CE 31: minus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 32: minus(V1,V,Out) = 1+ activate(W1,W1):1+ activate(X1,X1):1+ minus(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of minus/3 
* CEs [32] --> Loop 20 
* CEs [30,31] --> Loop 21 

#### Loops of minus/3 
* Loop 20: minus(V1,V,Out)->  minus(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 21: minus(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR minus(V1,V,Out) 
* RF of phase [20]: [V,V1]

#### Partial ranking functions of CR minus(V1,V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V
    V1


### Resulting Chains:minus(V1,V,Out) 
* [[20],21]
* [21]


### Merging Chains  minus/3 into  External patterns of execution 
* [[21],[21,[20]]] --> 1 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [33] 
* CE 3 is refined into CE [34] 
* CE 4 is refined into CE [35,36,37,38,39] 
* CE 5 is refined into CE [40,41,42] 
* CE 6 is refined into CE [43] 


#### Refined cost equations start/3 
* CE 33: start(V1,V,V2) = 0+ minus(V1,V,W2):1
     [V>=0,V1>=0,W2=0] 
* CE 34: start(V1,V,V2) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 35: start(V1,V,V2) = 0+ geq(W2,V,X2):1
     [V>=1,X2=1,W2=0,V1=0] 
* CE 36: start(V1,V,V2) = 0+ geq(V1,W2,X2):2
     [V1>=0,X2=2,W2=0,V=0] 
* CE 37: start(V1,V,V2) = 0+ geq(V1,V,W2):3
     [V>=0,V1>=0,W2=0] 
* CE 38: start(V1,V,V2) = 0+ geq(V1,V,W2):4
     [V>=V1+1,V1>=1,W2=1] 
* CE 39: start(V1,V,V2) = 0+ geq(V1,V,W2):5
     [V1>=V,V>=1,W2=2] 
* CE 40: start(V1,V,V2) = 0+ if(W2,V,V2,V2):1
     [V2>=0,V>=0,W2=1,V1=1] 
* CE 41: start(V1,V,V2) = 0+ if(W2,V,V2,V):2
     [V>=0,V2>=0,W2=2,V1=2] 
* CE 42: start(V1,V,V2) = 0+ if(V1,V,V2,W2):3
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 43: start(V1,V,V2) = 1
     [] 

### Cost equations --> "Loop" of start/3 
* CEs [33,34,35,36,37,38,39,40,41,42,43] --> Loop 22 

#### Loops of start/3 
* Loop 22: start(V1,V,V2) [] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [22]


### Merging Chains  start/3 into  External patterns of execution 
* [[22]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of activate(V1,Out):
* Chain [12]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of loops [13] 

 * loop 13:geq(V1,V,Out) -> [geq(V1',V',Out')] 
5
#### Cost of phase [13]:geq(V1,V,Out) -> [geq(V1',V',Out')] 
5*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'
it(13) =< V
it(13) =< V-V'

#### Cost of phase [13]:geq(V1,V,Out) -> [geq(V1',V',Out')] 
5*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'
it(13) =< V
it(13) =< V-V'

#### Cost of phase [13]:geq(V1,V,Out) -> [geq(V1',V',Out')] 
5*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'
it(13) =< V
it(13) =< V-V'

#### Cost of chains of geq(V1,V,Out):
* Chain [[13],16]: 5*it(13)+1
  Such that:it(13) =< V1

  with precondition: [Out=1,V1>=1,V>=V1+1] 

* Chain [[13],15]: 5*it(13)+1
  Such that:it(13) =< V

  with precondition: [Out=2,V>=1,V1>=V] 

* Chain [[13],14]: 5*it(13)+0
  Such that:it(13) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [16]: 1
  with precondition: [V1=0,Out=1,V>=1] 

* Chain [15]: 1
  with precondition: [V=0,Out=2,V1>=0] 

* Chain [14]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of if(V1,V,V2,Out):
* Chain [19]: 3
  with precondition: [V1=1,V2=Out,V>=0,V2>=0] 

* Chain [18]: 3
  with precondition: [V1=2,V=Out,V>=0,V2>=0] 

* Chain [17]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 


#### Cost of loops [20] 

 * loop 20:minus(V1,V,Out) -> [minus(V1',V',Out')] 
5
#### Cost of phase [20]:minus(V1,V,Out) -> [minus(V1',V',Out')] 
5*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
it(20) =< V
it(20) =< V-V'

#### Cost of chains of minus(V1,V,Out):
* Chain [[20],21]: 5*it(20)+2
  Such that:it(20) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [21]: 2
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V,V2):
* Chain [22]: 15*s(3)+5*s(5)+3
  Such that:s(5) =< V1
aux(1) =< V
s(3) =< aux(1)

  with precondition: [] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: nat(V1)*5+3+nat(V)*15 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): nat(V1)*5+3+nat(V)*15 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 37 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 122 ms.

