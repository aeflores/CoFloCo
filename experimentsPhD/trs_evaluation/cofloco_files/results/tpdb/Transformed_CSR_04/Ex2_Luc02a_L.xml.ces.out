
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [dbl/2]
2. non_recursive  : [first/3]
3. recursive [non_tail] : [sqr/2]
4. non_recursive  : [terms/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is partially evaluated into sqr/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations add/3 
* CE 16: add(V,V1,Out) = 1+ add(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 17: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [17] --> Loop 10 
* CEs [16] --> Loop 11 

#### Loops of add/3 
* Loop 10: add(A,B,B) [B>=0,A=0] 
* Loop 11: add(V,V1,Out)->  add(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 

### Ranking functions of CR add(V,V1,Out) 
* RF of phase [11]: [V]

#### Partial ranking functions of CR add(V,V1,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V


### Resulting Chains:add(V,V1,Out) 
* [[11],10]
* [10]


### Merging Chains  add/3 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[11]]] --> 2 


### Specialization of cost equations dbl/2 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations dbl/2 
* CE 18: dbl(V,Out) = 1+ dbl(W,X)
     [W>=0,X+2=Out,W+1=V] 
* CE 19: dbl(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [19] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of dbl/2 
* Loop 12: dbl(V,Out) [Out=0,V=0] 
* Loop 13: dbl(V,Out)->  dbl(V',Out')
                  [V'>=0,Out=Out'+2,V'+1=V] 

### Ranking functions of CR dbl(V,Out) 
* RF of phase [13]: [V]

#### Partial ranking functions of CR dbl(V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V


### Resulting Chains:dbl(V,Out) 
* [[13],12]
* [12]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[12]] --> 1 
* [[12,[13]]] --> 2 


### Specialization of cost equations first/3 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 15 is refined into CE [22] 


#### Refined cost equations first/3 
* CE 20: first(A,B,B) = 1
     [B>=1,A>=1] 
* CE 21: first(V,V1,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 22: first(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of first/3 
* CEs [20] --> Loop 14 
* CEs [21,22] --> Loop 15 

#### Loops of first/3 
* Loop 14: first(A,B,B) [B>=1,A>=1] 
* Loop 15: first(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR first(V,V1,Out) 

#### Partial ranking functions of CR first(V,V1,Out) 


### Resulting Chains:first(V,V1,Out) 
* [15]
* [14]


### Merging Chains  first/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations sqr/2 
* CE 8 is refined into CE [23,24,25,26] 
* CE 7 is refined into CE [27] 


#### Refined cost equations sqr/2 
* CE 23: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):1+ add(A1,B1,C1):1
     [X=0,W=0,C1=0,B1=0,A1=0,Z=0,Y=0,Out=1,V=1] 
* CE 24: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):1+ add(X,A1,X):2
     [X>=1,X+1=Out,W=0,A1=0,Z=0,Y=0,V=1] 
* CE 25: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):2+ add(A1,Z,Z):1
     [Z>=2,Z+1=Out,Z=2*W,Z=2*Y,Z+2=2*V,X=0,A1=0] 
* CE 26: sqr(V,Out) = 1+ sqr(W,X)+ dbl(Y,Z):2+ add(X,A1,B1):2
     [B1>=X+2,X>=1,B1=X+A1,B1=Z+X,B1=2*W+X,B1=2*Y+X,B1+2=2*V+X,B1+1=Out] 
* CE 27: sqr(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [27] --> Loop 16 
* CEs [26] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of sqr/2 
* Loop 16: sqr(V,Out) [Out=0,V=0] 
* Loop 17: sqr(V,Out)->  sqr(V',Out')
                  [Out>=2*V,V>=2,Out'+2*V=Out+1,V=V'+1] 
* Loop 18: sqr(V,Out)->  sqr(V',Out')
                  [V>=2,V=V'+1,2*V=Out+1,Out'=0] 
* Loop 19: sqr(V,Out)->  sqr(V',Out')
                  [Out>=2,Out=Out'+1,V'=0,V=1] 
* Loop 20: sqr(V,Out)->  sqr(V',Out')
                  [Out'=0,V'=0,Out=1,V=1] 

### Ranking functions of CR sqr(V,Out) 
* RF of phase [17]: [V-1]

#### Partial ranking functions of CR sqr(V,Out) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V-1


### Resulting Chains:sqr(V,Out) 
* [[17],20,16]
* [20,16]
* [16]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[16]] --> 1 
* [[16,20]] --> 2 
* [[16,20,[17]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [28,29,30] 
* CE 3 is refined into CE [31,32,33] 
* CE 4 is refined into CE [34,35] 
* CE 5 is refined into CE [36,37] 
* CE 6 is refined into CE [38,39] 


#### Refined cost equations start/2 
* CE 28: start(V,V1) = 1+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 29: start(V,V1) = 1+ sqr(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 30: start(V,V1) = 1+ sqr(V,W1):3
     [W1>=2*V,V>=2] 
* CE 31: start(V,V1) = 0+ sqr(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 32: start(V,V1) = 0+ sqr(W1,X1):2
     [X1=1,W1=1,V=1] 
* CE 33: start(V,V1) = 0+ sqr(V,W1):3
     [W1>=2*V,V>=2] 
* CE 34: start(V,V1) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 35: start(V,V1) = 0+ dbl(W1,X1):2
     [X1>=2,X1=2*W1,X1=2*V] 
* CE 36: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 37: start(V,V1) = 0+ add(V,W1,X1):2
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 38: start(V,V1) = 0+ first(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 39: start(V,V1) = 0+ first(V,V1,V1):2
     [V1>=1,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [38] --> Loop 21 
* CEs [29,30,32,33,35,37,39] --> Loop 22 
* CEs [28,31,34,36] --> Loop 23 

#### Loops of start/2 
* Loop 21: start(V,V1) [V1>=0,V>=0] 
* Loop 22: start(V,V1) [V>=1] 
* Loop 23: start(V,V1) [V=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [23]
* [22]
* [21]


### Merging Chains  start/2 into  External patterns of execution 
* [[23]] --> 1 
* [[21]] --> 2 
* [[22]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:add(V,V1,Out) -> [add(V',V1',Out')] 
1
#### Cost of phase [11]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(11)+0
  Such that:it(11) =< V
it(11) =< V-V'

#### Cost of chains of add(V,V1,Out):
* Chain [[11],10]: 1*it(11)+1
  Such that:it(11) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [10]: 1
  with precondition: [V=0,V1=Out,V1>=0] 


#### Cost of loops [13] 

 * loop 13:dbl(V,Out) -> [dbl(V',Out')] 
1
#### Cost of phase [13]:dbl(V,Out) -> [dbl(V',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of chains of dbl(V,Out):
* Chain [[13],12]: 1*it(13)+1
  Such that:it(13) =< Out/2

  with precondition: [2*V=Out,V>=1] 

* Chain [12]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of first(V,V1,Out):
* Chain [15]: 1
  with precondition: [Out=0,V>=0,V1>=0] 

* Chain [14]: 1
  with precondition: [V1=Out,V>=1,V1>=1] 


#### Cost of loops [17] 

 * loop 17:sqr(V,Out) -> [sqr(V',Out')] 
1*s(3)+1*s(4)+3
  Such that:s(3) =< V'

#### Cost of phase [17]:sqr(V,Out) -> [sqr(V',Out')] 
3*it(17)+1*s(5)+1*s(6)+0
  Such that:it(17) =< V-V'
aux(2) =< V
it(17) =< aux(2)
s(5) =< it(17)*aux(2)

#### Cost of chains of sqr(V,Out):
* Chain [[17],20,16]: 3*it(17)+1*s(5)+1*s(6)+4
  Such that:aux(3) =< V
it(17) =< aux(3)
s(5) =< it(17)*aux(3)

  with precondition: [V>=2,Out>=2*V] 

* Chain [20,16]: 4
  with precondition: [V=1,Out=1] 

* Chain [16]: 1
  with precondition: [V=0,Out=0] 


#### Cost of chains of start(V,V1):
* Chain [23]: 2
  with precondition: [V=0] 

* Chain [22]: 8*s(8)+2*s(9)+2*s(10)+5
  Such that:aux(4) =< V
s(8) =< aux(4)
s(9) =< s(8)*aux(4)

  with precondition: [V>=1] 

* Chain [21]: 1
  with precondition: [V>=0,V1>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [23] with precondition: [V=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [22] with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21] with precondition: [V>=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 39 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 114 ms.

