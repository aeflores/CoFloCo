
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [activate/2,incr/2]
1. non_recursive  : [head/2]
2. recursive  : [nats/1]
3. recursive [non_tail] : [odds/1,pairs/1]
4. non_recursive  : [tail/2]
5. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into incr/2
1. SCC is partially evaluated into head/2
2. SCC is partially evaluated into nats/1
3. SCC is partially evaluated into pairs/1
4. SCC is partially evaluated into tail/2
5. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations incr/2 
* CE 13 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations incr/2 
* CE 20: incr(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 21: incr(V,Out) = 2
     [V>=1,V+2=Out] 
* CE 22: incr(V,Out) = 2+ incr(W,X)
     [V>=W+2,W>=0,Out+W=V+X+1] 

### Cost equations --> "Loop" of incr/2 
* CEs [22] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [21] --> Loop 14 

#### Loops of incr/2 
* Loop 12: incr(V,Out)->  incr(V',Out')
                  [V>=V'+2,V'>=0,V+Out'+1=Out+V'] 
* Loop 13: incr(V,Out) [V>=0,V+1=Out] 
* Loop 14: incr(V,Out) [V>=1,V+2=Out] 

### Ranking functions of CR incr(V,Out) 
* RF of phase [12]: [V-1]

#### Partial ranking functions of CR incr(V,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V-1


### Resulting Chains:incr(V,Out) 
* [[12],14]
* [[12],13]
* [14]
* [13]


### Merging Chains  incr/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[14,[12]]] --> 3 
* [[13,[12]]] --> 4 


### Specialization of cost equations head/2 
* CE 15 is refined into CE [23] 
* CE 16 is refined into CE [24] 


#### Refined cost equations head/2 
* CE 23: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 24: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [23] --> Loop 15 
* CEs [24] --> Loop 16 

#### Loops of head/2 
* Loop 15: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 16: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [16]
* [15]


### Merging Chains  head/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations nats/1 
* CE 14 is refined into CE [25] 


#### Refined cost equations nats/1 
* CE 25: nats(Out) = 1+ nats(B)
     [B+2=Out] 

### Cost equations --> "Loop" of nats/1 
* CEs [25] --> Loop 17 

#### Loops of nats/1 
* Loop 17: nats(Out)->  nats(Out')
                  [Out=Out'+2] 

### Ranking functions of CR nats(Out) 

#### Partial ranking functions of CR nats(Out) 

Warning: no base case found for predicate

### Resulting Chains:nats(Out) 
* [[17]]...


### Merging Chains  nats/1 into  External patterns of execution 
* [[[17]]] --> 1 


### Specialization of cost equations pairs/1 
* CE 10 is refined into CE [26,27,28,29] 


#### Refined cost equations pairs/1 
* CE 26: pairs(Out) = 2+ pairs(B)+ incr(C,D):1
     [D>=3,D=B+2,D=C+2,D+2=Out] 
* CE 27: pairs(Out) = 2+ pairs(B)+ incr(C,D):2
     [D>=1,D=B+1,D=C+1,D+2=Out] 
* CE 28: pairs(Out) = 2+ pairs(B)+ incr(B,C):3
     [C>=B+3,3*B+3>=2*C,C+2=Out] 
* CE 29: pairs(Out) = 2+ pairs(B)+ incr(B,C):4
     [C>=B+2,3*B+2>=2*C,C+2=Out] 

### Cost equations --> "Loop" of pairs/1 
* CEs [29] --> Loop 18 
* CEs [28] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 

#### Loops of pairs/1 
* Loop 18: pairs(Out)->  pairs(Out')
                  [Out>=Out'+4,3*Out'+6>=2*Out] 
* Loop 19: pairs(Out)->  pairs(Out')
                  [Out>=Out'+5,3*Out'+7>=2*Out] 
* Loop 20: pairs(Out)->  pairs(Out')
                  [Out>=5,Out=Out'+4] 
* Loop 21: pairs(Out)->  pairs(Out')
                  [Out>=3,Out=Out'+3] 

### Ranking functions of CR pairs(Out) 

#### Partial ranking functions of CR pairs(Out) 

Warning: no base case found for predicate

### Resulting Chains:pairs(Out) 
* [[18,19,20,21]]...


### Merging Chains  pairs/1 into  External patterns of execution 
* [[[18,19,20,21]]] --> 1 


### Specialization of cost equations tail/2 
* CE 17 is refined into CE [30] 
* CE 18 is refined into CE [31,32,33,34] 
* CE 19 is refined into CE [35] 


#### Refined cost equations tail/2 
* CE 30: tail(V,Out) = 2
     [V>=Out+1,Out>=0] 
* CE 31: tail(V,Out) = 2+ incr(W,Out):1
     [V>=Out,Out>=3,Out=W+2] 
* CE 32: tail(V,Out) = 2+ incr(W,Out):2
     [V>=Out+1,Out>=1,Out=W+1] 
* CE 33: tail(V,Out) = 2+ incr(W,Out):3
     [Out>=W+3,V>=W+2,3*W+3>=2*Out] 
* CE 34: tail(V,Out) = 2+ incr(W,Out):4
     [Out>=W+2,V>=W+2,3*W+2>=2*Out] 
* CE 35: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [33] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [30,32] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of tail/2 
* Loop 22: tail(V,Out) [3*V>=2*Out+3,Out>=6] 
* Loop 23: tail(V,Out) [3*V>=2*Out+4,Out>=4] 
* Loop 24: tail(V,Out) [V>=Out,Out>=3] 
* Loop 25: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 26: tail(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [26]
* [25]
* [24]
* [23]
* [22]


### Merging Chains  tail/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 
* [[22]] --> 5 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [36] 
* CE 3 is refined into CE [37] 
* CE 4 is refined into CE [38,39,40,41] 
* CE 5 is refined into CE [42] 
* CE 6 is refined into CE [43] 
* CE 7 is refined into CE [44,45,46,47] 
* CE 8 is refined into CE [48,49] 
* CE 9 is refined into CE [50,51,52,53,54] 


#### Refined cost equations start/1 
* CE 36: start(V) = 1+ pairs(W):1
     [W>=3] 
* CE 37: start(V) = 1
     [V>=0] 
* CE 38: start(V) = 1+ incr(W,X):1
     [X>=3,X=W+2,X=V+1] 
* CE 39: start(V) = 1+ incr(W,V):2
     [V>=1,V=W+1] 
* CE 40: start(V) = 1+ incr(W,X):3
     [X>=W+3,3*W+3>=2*X,W+1=V] 
* CE 41: start(V) = 1+ incr(W,X):4
     [X>=W+2,3*W+2>=2*X,W+1=V] 
* CE 42: start(V) = 0+ nats(W):1
     [] 
* CE 43: start(V) = 0+ pairs(W):1
     [W>=3] 
* CE 44: start(V) = 0+ incr(W,X):1
     [X>=3,X=W+2,X=V+2] 
* CE 45: start(V) = 0+ incr(W,X):2
     [X>=1,X=W+1,X=V+1] 
* CE 46: start(V) = 0+ incr(V,W):3
     [W>=V+3,3*V+3>=2*W] 
* CE 47: start(V) = 0+ incr(V,W):4
     [W>=V+2,3*V+2>=2*W] 
* CE 48: start(V) = 0+ head(V,W):1
     [V>=0,W=0] 
* CE 49: start(V) = 0+ head(V,W):2
     [V>=W+1,W>=0] 
* CE 50: start(V) = 0+ tail(V,W):1
     [V>=0,W=0] 
* CE 51: start(V) = 0+ tail(V,W):2
     [V>=W+1,W>=0] 
* CE 52: start(V) = 0+ tail(V,W):3
     [V>=W,W>=3] 
* CE 53: start(V) = 0+ tail(V,W):4
     [3*V>=2*W+4,W>=4] 
* CE 54: start(V) = 0+ tail(V,W):5
     [3*V>=2*W+3,W>=6] 

### Cost equations --> "Loop" of start/1 
* CEs [37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54] --> Loop 27 
* CEs [36,42,43] --> Loop 28 

#### Loops of start/1 
* Loop 27: start(V) [V>=0] 
* Loop 28: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [28]...
* [27]


### Merging Chains  start/1 into  External patterns of execution 
* [[27]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:incr(V,Out) -> [incr(V',Out')] 
2
#### Cost of phase [12]:incr(V,Out) -> [incr(V',Out')] 
2*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of phase [12]:incr(V,Out) -> [incr(V',Out')] 
2*it(12)+0
  Such that:it(12) =< V
it(12) =< V-V'

#### Cost of chains of incr(V,Out):
* Chain [[12],14]: 2*it(12)+2
  Such that:it(12) =< V

  with precondition: [3*V+3>=2*Out,Out>=V+3] 

* Chain [[12],13]: 2*it(12)+1
  Such that:it(12) =< V

  with precondition: [3*V+2>=2*Out,Out>=V+2] 

* Chain [14]: 2
  with precondition: [V+2=Out,V>=1] 

* Chain [13]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of head(V,Out):
* Chain [16]: 0
  with precondition: [Out=0,V>=0] 

* Chain [15]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of loops [17] 

 * loop 17:nats(Out) -> [nats(Out')] 
1
#### Cost of phase [17]:nats(Out) -> [nats(Out')] 
1*it(17)+0
#### Cost of chains of nats(Out):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [] 


#### Cost of loops [18,19,20,21] 

 * loop 18:pairs(Out) -> [pairs(Out')] 
2*s(2)+3
 * loop 19:pairs(Out) -> [pairs(Out')] 
2*s(4)+4
 * loop 20:pairs(Out) -> [pairs(Out')] 
4
 * loop 21:pairs(Out) -> [pairs(Out')] 
3
#### Cost of phase [18,19,20,21]:pairs(Out) -> [pairs(Out')] 
18*it(18)+0
#### Cost of chains of pairs(Out):
* Chain [[18,19,20,21]]...: 18*it(18)+0
  with precondition: [Out>=3] 


#### Cost of chains of tail(V,Out):
* Chain [26]: 0
  with precondition: [Out=0,V>=0] 

* Chain [25]: 3
  with precondition: [Out>=0,V>=Out+1] 

* Chain [24]: 4
  with precondition: [Out>=3,V>=Out] 

* Chain [23]: 2*s(7)+3
  Such that:s(7) =< V

  with precondition: [Out>=4,3*V>=2*Out+4] 

* Chain [22]: 2*s(8)+4
  Such that:s(8) =< V

  with precondition: [Out>=6,3*V>=2*Out+3] 


#### Cost of chains of start(V):
* Chain [28]...: 1*aux(1)+0
  with precondition: [] 

* Chain [27]: 12*s(12)+4
  Such that:aux(2) =< V
s(12) =< aux(2)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [28]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [V>=0] 
    - Upper bound: 12*V+4 
    - Complexity: n 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 44 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 121 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 45 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 331 ms.

