
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [first/3]
1. non_recursive  : [s/2]
2. recursive [non_tail,multiple] : [activate/2,add/3,from/2]
3. non_recursive  : [and/3]
4. non_recursive  : [if/4]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into first/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into and/3
4. SCC is partially evaluated into if/4
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations first/3 
* CE 22 is refined into CE [23] 
* CE 21 is refined into CE [24] 


#### Refined cost equations first/3 
* CE 23: first(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 24: first(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 

### Cost equations --> "Loop" of first/3 
* CEs [23] --> Loop 14 
* CEs [24] --> Loop 15 

#### Loops of first/3 
* Loop 14: first(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 15: first(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR first(V1,V,Out) 

#### Partial ranking functions of CR first(V1,V,Out) 


### Resulting Chains:first(V1,V,Out) 
* [15]
* [14]


### Merging Chains  first/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations activate/2 
* CE 11 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 10 is refined into CE [28] 
* CE 13 is refined into CE [29,30] 
* CE 9 is refined into CE [31] 


#### Refined cost equations activate/2 
* CE 25: activate(A,A) = 2
     [A>=1] 
* CE 26: activate(A,A) = 1
     [A>=0] 
* CE 27: activate(V1,Out) = 2+ activate(W1,X1)+ activate(W1,Y1)
     [W1>=0,X1+Y1+3=Out,W1+1=V1] 
* CE 28: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Out)
     [Y1>=0,W1>=0,W1+Y1+1=V1,X1=0] 
* CE 29: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ first(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=0,B2=2,A2=0,Out=2] 
* CE 30: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ first(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 
* CE 31: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of activate/2 
* CEs [31] --> Loop 16 
* CEs [30] --> Loop 17 
* CEs [27] --> Loop 18 
* CEs [28] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [25,26] --> Loop 21 

#### Loops of activate/2 
* Loop 16: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 17: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 18: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=1,Out=Out'+Out'2+3,V1=V1'2+1,V1=V1'+1] 
* Loop 19: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out)
                  [V1>=V1'+1,V1'>=0,V1'+V1'2+1=V1,Out'=0] 
* Loop 20: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=2] 
* Loop 21: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [16,17,18,19,20]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [16,17,18,19,20]:
  - RF of loop [16:1,17:1,17:2,18:1,18:2,19:1,19:2,20:1,20:2]:
    V1


### Resulting Chains:activate(V1,Out) 
* [21]
* [multiple([16,17,18,19,20],[[21]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[21]] --> 1 
* [[multiple([16,17,18,19,20],[[21]])]] --> 2 


### Specialization of cost equations and/3 
* CE 17 is refined into CE [32] 
* CE 15 is refined into CE [33,34] 
* CE 16 is refined into CE [35] 


#### Refined cost equations and/3 
* CE 32: and(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 33: and(A,B,B) = 1+ activate(B,B):1
     [B>=0,A=3] 
* CE 34: and(V1,V,Out) = 1+ activate(V,Out):2
     [Out>=0,V>=1,V1=3] 
* CE 35: and(V1,V,Out) = 1
     [V>=0,Out=1,V1=1] 

### Cost equations --> "Loop" of and/3 
* CEs [32] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [35] --> Loop 25 

#### Loops of and/3 
* Loop 22: and(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 23: and(V1,V,Out) [Out>=0,V>=1,V1=3] 
* Loop 24: and(A,B,B) [B>=0,A=3] 
* Loop 25: and(V1,V,Out) [V>=0,Out=1,V1=1] 

### Ranking functions of CR and(V1,V,Out) 

#### Partial ranking functions of CR and(V1,V,Out) 


### Resulting Chains:and(V1,V,Out) 
* [25]
* [24]
* [23]
* [22]


### Merging Chains  and/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 
* [[22]] --> 4 


### Specialization of cost equations if/4 
* CE 20 is refined into CE [36] 
* CE 18 is refined into CE [37,38] 
* CE 19 is refined into CE [39,40] 


#### Refined cost equations if/4 
* CE 36: if(V1,V,V2,Out) = 0
     [V2>=0,V>=0,V1>=0,Out=0] 
* CE 37: if(A,B,C,B) = 1+ activate(B,B):1
     [B>=0,C>=0,A=3] 
* CE 38: if(V1,V,V2,Out) = 1+ activate(V,Out):2
     [Out>=0,V>=1,V2>=0,V1=3] 
* CE 39: if(A,B,C,C) = 1+ activate(C,C):1
     [C>=0,B>=0,A=1] 
* CE 40: if(V1,V,V2,Out) = 1+ activate(V2,Out):2
     [Out>=0,V2>=1,V>=0,V1=1] 

### Cost equations --> "Loop" of if/4 
* CEs [36] --> Loop 26 
* CEs [38] --> Loop 27 
* CEs [37] --> Loop 28 
* CEs [40] --> Loop 29 
* CEs [39] --> Loop 30 

#### Loops of if/4 
* Loop 26: if(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,Out=0] 
* Loop 27: if(V1,V,V2,Out) [Out>=0,V2>=0,V>=1,V1=3] 
* Loop 28: if(A,B,C,B) [C>=0,B>=0,A=3] 
* Loop 29: if(V1,V,V2,Out) [Out>=0,V2>=1,V>=0,V1=1] 
* Loop 30: if(A,B,C,C) [C>=0,B>=0,A=1] 

### Ranking functions of CR if(V1,V,V2,Out) 

#### Partial ranking functions of CR if(V1,V,V2,Out) 


### Resulting Chains:if(V1,V,V2,Out) 
* [30]
* [29]
* [28]
* [27]
* [26]


### Merging Chains  if/4 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 
* [[26]] --> 5 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [41] 
* CE 3 is refined into CE [42,43] 
* CE 4 is refined into CE [44,45,46,47] 
* CE 5 is refined into CE [48,49,50,51] 
* CE 6 is refined into CE [52,53,54,55,56] 
* CE 7 is refined into CE [57,58] 
* CE 8 is refined into CE [59,60] 


#### Refined cost equations start/3 
* CE 41: start(V1,V,V2) = 1
     [V1>=0] 
* CE 42: start(V1,V,V2) = 1+ activate(V,V):1
     [V>=0,V1=0] 
* CE 43: start(V1,V,V2) = 1+ activate(V,W2):2
     [W2>=0,V>=1,V1=0] 
* CE 44: start(V1,V,V2) = 1+ activate(V1,V1):1+ activate(V1,V1):1
     [V1>=0] 
* CE 45: start(V1,V,V2) = 1+ activate(V1,V1):1+ activate(V1,W2):2
     [W2>=0,V1>=1] 
* CE 46: start(V1,V,V2) = 1+ activate(V1,W2):2+ activate(V1,V1):1
     [V1>=1,W2>=0] 
* CE 47: start(V1,V,V2) = 1+ activate(V1,W2):2+ activate(V1,X2):2
     [X2>=0,V1>=1,W2>=0] 
* CE 48: start(V1,V,V2) = 0+ and(W2,V,X2):1
     [V>=0,X2=1,W2=1,V1=1] 
* CE 49: start(V1,V,V2) = 0+ and(W2,V,V):2
     [V>=0,W2=3,V1=3] 
* CE 50: start(V1,V,V2) = 0+ and(W2,V,X2):3
     [X2>=0,V>=1,W2=3,V1=3] 
* CE 51: start(V1,V,V2) = 0+ and(V1,V,W2):4
     [V>=0,V1>=0,W2=0] 
* CE 52: start(V1,V,V2) = 0+ if(W2,V,V2,V2):1
     [V2>=0,V>=0,W2=1,V1=1] 
* CE 53: start(V1,V,V2) = 0+ if(W2,V,V2,X2):2
     [X2>=0,V2>=1,V>=0,W2=1,V1=1] 
* CE 54: start(V1,V,V2) = 0+ if(W2,V,V2,V):3
     [V>=0,V2>=0,W2=3,V1=3] 
* CE 55: start(V1,V,V2) = 0+ if(W2,V,V2,X2):4
     [X2>=0,V2>=0,V>=1,W2=3,V1=3] 
* CE 56: start(V1,V,V2) = 0+ if(V1,V,V2,W2):5
     [V2>=0,V>=0,V1>=0,W2=0] 
* CE 57: start(V1,V,V2) = 0+ first(W2,V,X2):1
     [V>=0,X2=2,W2=0,V1=0] 
* CE 58: start(V1,V,V2) = 0+ first(V1,W2,X2):2
     [X2>=V1+1,V1>=0,X2=V1+W2+1,X2=V1+V+1] 
* CE 59: start(V1,V,V2) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 60: start(V1,V,V2) = 0+ activate(V1,W2):2
     [W2>=0,V1>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [49,50,54,55] --> Loop 31 
* CEs [48,52,53] --> Loop 32 
* CEs [41,42,43,44,45,46,47,51,56,57,58,59,60] --> Loop 33 

#### Loops of start/3 
* Loop 31: start(V1,V,V2) [V>=0,V1=3] 
* Loop 32: start(V1,V,V2) [V>=0,V1=1] 
* Loop 33: start(V1,V,V2) [V1>=0] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [33]
* [32]
* [31]


### Merging Chains  start/3 into  External patterns of execution 
* [[32],[33]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of first(V1,V,Out):
* Chain [15]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [14]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of loops [16,17,18,19,20] 

 * loop 16:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 17:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 18:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 19:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 20:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
#### Cost of phase [16,17,18,19,20]:activate(V1,Out) -> [] 
8*it(16)+2*it(18)+2*it([21])+0
#### Cost of chains of activate(V1,Out):
* Chain [21]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [multiple([16,17,18,19,20],[[21]])]: 8*it(16)+2*it(18)+2*it([21])+0
  with precondition: [V1>=1,Out>=0] 


#### Cost of chains of and(V1,V,Out):
* Chain [25]: 1
  with precondition: [V1=1,Out=1,V>=0] 

* Chain [24]: 3
  with precondition: [V1=3,V=Out,V>=0] 

* Chain [23]: 12*s(1)+1
  with precondition: [V1=3,V>=1,Out>=0] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of if(V1,V,V2,Out):
* Chain [30]: 3
  with precondition: [V1=1,V2=Out,V>=0,V2>=0] 

* Chain [29]: 12*s(4)+1
  with precondition: [V1=1,V>=0,V2>=1,Out>=0] 

* Chain [28]: 3
  with precondition: [V1=3,V=Out,V>=0,V2>=0] 

* Chain [27]: 12*s(7)+1
  with precondition: [V1=3,V>=1,V2>=0,Out>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0,V2>=0] 


#### Cost of chains of start(V1,V,V2):
* Chain [33]: 1*aux(12)+0
  with precondition: [V1>=0] 

* Chain [32]: 1*aux(13)+0
  with precondition: [V1=1,V>=0] 

* Chain [31]: 1*aux(14)+0
  with precondition: [V1=3,V>=0] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [33] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32] with precondition: [V1=1,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31] with precondition: [V1=3,V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 67 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 52 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 33 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 190 ms.

