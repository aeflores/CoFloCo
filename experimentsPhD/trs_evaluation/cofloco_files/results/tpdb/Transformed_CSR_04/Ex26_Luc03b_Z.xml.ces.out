
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [add/3]
1. non_recursive  : [dbl/2]
2. non_recursive  : [first/3]
3. non_recursive  : [s/2]
4. non_recursive  : [sqr/2]
5. non_recursive  : [terms/2]
6. non_recursive  : [activate/2]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into sqr/2
5. SCC is partially evaluated into terms/2
6. SCC is partially evaluated into activate/2
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 21 is refined into CE [25] 
* CE 22 is refined into CE [26] 


#### Refined cost equations add/3 
* CE 25: add(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 26: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [25] --> Loop 12 
* CEs [26] --> Loop 13 

#### Loops of add/3 
* Loop 12: add(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 13: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 

#### Partial ranking functions of CR add(V,V1,Out) 


### Resulting Chains:add(V,V1,Out) 
* [13]
* [12]


### Merging Chains  add/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations dbl/2 
* CE 10 is refined into CE [27] 
* CE 9 is refined into CE [28] 


#### Refined cost equations dbl/2 
* CE 27: dbl(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 28: dbl(V,Out) = 1
     [Out=0,V=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [27] --> Loop 14 
* CEs [28] --> Loop 15 

#### Loops of dbl/2 
* Loop 14: dbl(V,Out) [V>=0,V+1=Out] 
* Loop 15: dbl(V,Out) [Out=0,V=0] 

### Ranking functions of CR dbl(V,Out) 

#### Partial ranking functions of CR dbl(V,Out) 


### Resulting Chains:dbl(V,Out) 
* [15]
* [14]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations first/3 
* CE 14 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations first/3 
* CE 29: first(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 30: first(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of first/3 
* CEs [29] --> Loop 16 
* CEs [30] --> Loop 17 

#### Loops of first/3 
* Loop 16: first(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 17: first(V,V1,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR first(V,V1,Out) 

#### Partial ranking functions of CR first(V,V1,Out) 


### Resulting Chains:first(V,V1,Out) 
* [17]
* [16]


### Merging Chains  first/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations sqr/2 
* CE 23 is refined into CE [31] 
* CE 24 is refined into CE [32] 


#### Refined cost equations sqr/2 
* CE 31: sqr(V,Out) = 1
     [Out=0,V=0] 
* CE 32: sqr(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [31,32] --> Loop 18 

#### Loops of sqr/2 
* Loop 18: sqr(V,Out) [V>=0,Out=0] 

### Ranking functions of CR sqr(V,Out) 

#### Partial ranking functions of CR sqr(V,Out) 


### Resulting Chains:sqr(V,Out) 
* [18]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations terms/2 
* CE 11 is refined into CE [33] 
* CE 12 is refined into CE [34] 


#### Refined cost equations terms/2 
* CE 33: terms(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 34: terms(V,Out) = 2+ sqr(V,W):1
     [V>=0,V+4=Out,W=0] 

### Cost equations --> "Loop" of terms/2 
* CEs [33] --> Loop 19 
* CEs [34] --> Loop 20 

#### Loops of terms/2 
* Loop 19: terms(V,Out) [V>=0,V+1=Out] 
* Loop 20: terms(V,Out) [V>=0,V+4=Out] 

### Ranking functions of CR terms(V,Out) 

#### Partial ranking functions of CR terms(V,Out) 


### Resulting Chains:terms(V,Out) 
* [20]
* [19]


### Merging Chains  terms/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations activate/2 
* CE 15 is refined into CE [35,36] 
* CE 16 is refined into CE [37,38] 
* CE 18 is refined into CE [39,40] 
* CE 19 is refined into CE [41,42] 
* CE 17 is refined into CE [43] 
* CE 20 is refined into CE [44] 


#### Refined cost equations activate/2 
* CE 35: activate(V,Out) = 1+ add(W,Out,Out):1
     [Out>=0,Out+1=V,W=0] 
* CE 36: activate(A,A) = 1+ add(B,C,A):2
     [A>=B+1,B>=0,A=B+C+1] 
* CE 37: activate(V,Out) = 1+ dbl(W,X):1
     [X=0,W=0,Out=0,V=1] 
* CE 38: activate(A,A) = 1+ dbl(B,A):2
     [A>=1,A=B+1] 
* CE 39: activate(V,Out) = 1+ first(W,X,Y):1
     [X>=0,X+1=V,Y=1,W=0,Out=1] 
* CE 40: activate(A,A) = 1+ first(B,C,A):2
     [A>=B+1,B>=0,A=B+C+1] 
* CE 41: activate(V,Out) = 1+ terms(W,Out):1
     [Out>=4,Out=W+4,Out=V+3] 
* CE 42: activate(A,A) = 1+ terms(B,A):2
     [A>=1,A=B+1] 
* CE 43: activate(A,A) = 1
     [A>=0] 
* CE 44: activate(A,A) = 2
     [A>=1] 

### Cost equations --> "Loop" of activate/2 
* CEs [36,38,40,42,43,44] --> Loop 21 
* CEs [41] --> Loop 22 
* CEs [39] --> Loop 23 
* CEs [35,37] --> Loop 24 

#### Loops of activate/2 
* Loop 21: activate(A,A) [A>=0] 
* Loop 22: activate(V,Out) [V>=1,V+3=Out] 
* Loop 23: activate(V,Out) [V>=1,Out=1] 
* Loop 24: activate(V,Out) [V>=1,V=Out+1] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [24]
* [23]
* [22]
* [21]


### Merging Chains  activate/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[24]] --> 4 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [45,46] 
* CE 3 is refined into CE [47,48] 
* CE 4 is refined into CE [49,50] 
* CE 5 is refined into CE [51,52,53,54] 
* CE 6 is refined into CE [55,56] 
* CE 7 is refined into CE [57] 
* CE 8 is refined into CE [58] 


#### Refined cost equations start/2 
* CE 45: start(V,V1) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V=0] 
* CE 46: start(V,V1) = 0+ dbl(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 47: start(V,V1) = 0+ terms(W1,X1):1
     [X1>=4,X1=W1+4,X1=V+4] 
* CE 48: start(V,V1) = 0+ terms(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 49: start(V,V1) = 0+ first(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 50: start(V,V1) = 0+ first(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 51: start(V,V1) = 0+ activate(V,W1):1
     [V>=1,W1=1] 
* CE 52: start(V,V1) = 0+ activate(W1,X1):2
     [X1>=4,X1=W1+3,X1=V+3] 
* CE 53: start(V,V1) = 0+ activate(V,V):3
     [V>=0] 
* CE 54: start(V,V1) = 0+ activate(W1,X1):4
     [X1>=0,X1+1=W1,X1+1=V] 
* CE 55: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 56: start(V,V1) = 0+ add(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 57: start(V,V1) = 0+ sqr(V,W1):1
     [V>=0,W1=0] 
* CE 58: start(V,V1) = 1
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [45,46,47,48,49,50,51,52,53,54,55,56,57,58] --> Loop 25 

#### Loops of start/2 
* Loop 25: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [25]


### Merging Chains  start/2 into  External patterns of execution 
* [[25]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of add(V,V1,Out):
* Chain [13]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [12]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of dbl(V,Out):
* Chain [15]: 1
  with precondition: [V=0,Out=0] 

* Chain [14]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of first(V,V1,Out):
* Chain [17]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [16]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of sqr(V,Out):
* Chain [18]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of terms(V,Out):
* Chain [20]: 3
  with precondition: [V+4=Out,V>=0] 

* Chain [19]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of activate(V,Out):
* Chain [24]: 2
  with precondition: [V=Out+1,V>=1] 

* Chain [23]: 2
  with precondition: [Out=1,V>=1] 

* Chain [22]: 4
  with precondition: [V+3=Out,V>=1] 

* Chain [21]: 2
  with precondition: [V=Out,V>=0] 


#### Cost of chains of start(V,V1):
* Chain [25]: 4
  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [25] with precondition: [V>=0] 
    - Upper bound: 4 
    - Complexity: constant 

### Maximum cost of start(V,V1): 4 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 37 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 121 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 49 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 292 ms.

