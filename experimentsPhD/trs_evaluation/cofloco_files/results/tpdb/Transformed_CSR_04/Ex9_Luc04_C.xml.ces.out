
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [active/2]
1. recursive  : [f/4]
2. non_recursive  : [proper/2]
3. recursive  : [top/2]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into active/2
1. SCC is partially evaluated into f/4
2. SCC is partially evaluated into proper/2
3. SCC is partially evaluated into top/2
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations active/2 
* CE 11 is refined into CE [20] 
* CE 10 is refined into CE [21] 
* CE 9 is refined into CE [22] 


#### Refined cost equations active/2 
* CE 20: active(V,Out) = 0
     [V>=0,Out=0] 
* CE 21: active(V,Out) = 1
     [Out=2,V=2] 
* CE 22: active(V,Out) = 1
     [Out=1,V=2] 

### Cost equations --> "Loop" of active/2 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 

#### Loops of active/2 
* Loop 15: active(V,Out) [V>=0,Out=0] 
* Loop 16: active(V,Out) [Out=2,V=2] 
* Loop 17: active(V,Out) [Out=1,V=2] 

### Ranking functions of CR active(V,Out) 

#### Partial ranking functions of CR active(V,Out) 


### Resulting Chains:active(V,Out) 
* [17]
* [16]
* [15]


### Merging Chains  active/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations f/4 
* CE 15 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 14 is refined into CE [26] 


#### Refined cost equations f/4 
* CE 23: f(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 24: f(V,V1,V2,Out) = 1+ f(V,V1,W2,X2)
     [W2>=0,V1>=0,V>=0,X2+1=Out,W2+1=V2] 
* CE 25: f(V,V1,V2,Out) = 1+ f(W2,V1,V2,X2)
     [W2>=0,V2>=0,V1>=0,X2+1=Out,W2+1=V] 
* CE 26: f(V,V1,V2,Out) = 1+ f(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of f/4 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [23] --> Loop 21 

#### Loops of f/4 
* Loop 18: f(V,V1,V2,Out)->  f(V,V1,V2',Out')
                  [V2>=1,V1>=0,V>=0,Out=Out'+1,V2=V2'+1] 
* Loop 19: f(V,V1,V2,Out)->  f(V',V1,V2,Out')
                  [V2>=0,V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 20: f(V,V1,V2,Out)->  f(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 21: f(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR f(V,V1,V2,Out) 
* RF of phase [18,19,20]: [V+V2]

#### Partial ranking functions of CR f(V,V1,V2,Out) 
* Partial RF of phase [18,19,20]:
  - RF of loop [18:1,20:1]:
    V2
  - RF of loop [19:1,20:1]:
    V
  - RF of loop [20:1]:
    V1


### Resulting Chains:f(V,V1,V2,Out) 
* [[18,19,20],21]
* [21]


### Merging Chains  f/4 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[18,19,20]]] --> 2 


### Specialization of cost equations proper/2 
* CE 19 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 16 is refined into CE [29] 
* CE 18 is refined into CE [30] 


#### Refined cost equations proper/2 
* CE 27: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 28: proper(V,Out) = 1
     [Out=3,V=2] 
* CE 29: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 30: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [27] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [30] --> Loop 25 

#### Loops of proper/2 
* Loop 22: proper(V,Out) [V>=0,Out=0] 
* Loop 23: proper(V,Out) [Out=3,V=2] 
* Loop 24: proper(V,Out) [Out=2,V=1] 
* Loop 25: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [25]
* [24]
* [23]
* [22]


### Merging Chains  proper/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 
* [[22]] --> 4 


### Specialization of cost equations top/2 
* CE 8 is refined into CE [31] 
* CE 6 is refined into CE [32,33,34] 
* CE 7 is refined into CE [35,36,37,38] 


#### Refined cost equations top/2 
* CE 31: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 32: top(V,Out) = 1+ active(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=2,V=3] 
* CE 33: top(V,Out) = 1+ active(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=2,V=3] 
* CE 34: top(V,Out) = 1+ active(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 
* CE 35: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 36: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 37: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [Y=3,X=3,W=2,V=3] 
* CE 38: top(V,Out) = 1+ proper(W,X):4+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [34,38] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [32] --> Loop 29 
* CEs [36] --> Loop 30 
* CEs [35] --> Loop 31 
* CEs [31] --> Loop 32 

#### Loops of top/2 
* Loop 26: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 27: top(V,Out)->  top(V',Out)
                  [V'=3,V=3] 
* Loop 28: top(V,Out)->  top(V',Out)
                  [V'=2,V=3] 
* Loop 29: top(V,Out)->  top(V',Out)
                  [V'=1,V=3] 
* Loop 30: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 31: top(V,Out)->  top(V',Out)
                  [V'=1,V=1] 
* Loop 32: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[31]]...
* [[31],32]
* [[31],26,32]
* [[30]]...
* [[30],32]
* [[30],26,32]
* [[27]]...
* [[27],32]
* [[27],29,[31]]...
* [[27],29,[31],32]
* [[27],29,[31],26,32]
* [[27],29,32]
* [[27],29,26,32]
* [[27],28,[30]]...
* [[27],28,[30],32]
* [[27],28,[30],26,32]
* [[27],28,32]
* [[27],28,26,32]
* [[27],26,32]
* [32]
* [29,[31]]...
* [29,[31],32]
* [29,[31],26,32]
* [29,32]
* [29,26,32]
* [28,[30]]...
* [28,[30],32]
* [28,[30],26,32]
* [28,32]
* [28,26,32]
* [26,32]


### Merging Chains  top/2 into  External patterns of execution 
* [[32,26],[32],[32,26,[31]],[32,[31]]] --> 1 
* [[32,26,[30]],[32,[30]]] --> 2 
* [[32,26,28],[32,28],[32,26,[30],28],[32,[30],28],[32,26,29],[32,29],[32,26,[31],29],[32,[31],29],[32,26,[27]],[32,26,28,[27]],[32,28,[27]],[32,26,[30],28,[27]],[32,[30],28,[27]],[32,26,29,[27]],[32,29,[27]],[32,26,[31],29,[27]],[32,[31],29,[27]],[32,[27]]] --> 3 
* [[[31]]] --> 4 
* [[[30]]] --> 5 
* [[[30],28],[[31],29],[[27]],[[30],28,[27]],[[31],29,[27]]] --> 6 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [39,40,41,42,43,44] 
* CE 3 is refined into CE [45,46,47] 
* CE 4 is refined into CE [48,49] 
* CE 5 is refined into CE [50,51,52,53] 


#### Refined cost equations start/3 
* CE 39: start(V,V1,V2) = 0+ top(V,W2):1
     [V>=0,W2=0] 
* CE 40: start(V,V1,V2) = 0+ top(W2,X2):2
     [X2=0,W2=2,V=2] 
* CE 41: start(V,V1,V2) = 0+ top(W2,X2):3
     [X2=0,W2=3,V=3] 
* CE 42: start(V,V1,V2) = 0+ top(W2,X2):4
     [W2=1,V=1] 
* CE 43: start(V,V1,V2) = 0+ top(W2,X2):5
     [W2=2,V=2] 
* CE 44: start(V,V1,V2) = 0+ top(W2,X2):6
     [W2=3,V=3] 
* CE 45: start(V,V1,V2) = 0+ active(W2,X2):1
     [X2=1,W2=2,V=2] 
* CE 46: start(V,V1,V2) = 0+ active(W2,X2):2
     [X2=2,W2=2,V=2] 
* CE 47: start(V,V1,V2) = 0+ active(V,W2):3
     [V>=0,W2=0] 
* CE 48: start(V,V1,V2) = 0+ f(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 49: start(V,V1,V2) = 0+ f(V,V1,V2,W2):2
     [V+V2>=W2,W2>=1,V2>=0,V1>=0,V>=0] 
* CE 50: start(V,V1,V2) = 0+ proper(W2,X2):1
     [X2=1,W2=0,V=0] 
* CE 51: start(V,V1,V2) = 0+ proper(W2,X2):2
     [X2=2,W2=1,V=1] 
* CE 52: start(V,V1,V2) = 0+ proper(W2,X2):3
     [X2=3,W2=2,V=2] 
* CE 53: start(V,V1,V2) = 0+ proper(V,W2):4
     [V>=0,W2=0] 

### Cost equations --> "Loop" of start/3 
* CEs [41] --> Loop 33 
* CEs [40,45,46,52] --> Loop 34 
* CEs [51] --> Loop 35 
* CEs [39,47,48,49,50,53] --> Loop 36 
* CEs [44] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [42] --> Loop 39 

#### Loops of start/3 
* Loop 33: start(V,V1,V2) [V=3] 
* Loop 34: start(V,V1,V2) [V=2] 
* Loop 35: start(V,V1,V2) [V=1] 
* Loop 36: start(V,V1,V2) [V>=0] 
* Loop 37: start(V,V1,V2) [V=3] 
* Loop 38: start(V,V1,V2) [V=2] 
* Loop 39: start(V,V1,V2) [V=1] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [39]...
* [38]...
* [37]...
* [36]
* [35]
* [34]
* [33]


### Merging Chains  start/3 into  External patterns of execution 
* [[35],[36]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 
* [[39]] --> 4 
* [[38]] --> 5 
* [[37]] --> 6 


Computing Bounds
=====================================

#### Cost of chains of active(V,Out):
* Chain [17]: 1
  with precondition: [V=2,Out=1] 

* Chain [16]: 1
  with precondition: [V=2,Out=2] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [18,19,20] 

 * loop 18:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1
 * loop 19:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1
 * loop 20:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1
#### Cost of phase [18,19,20]:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1*it(18)+1*it(19)+1*it(20)+0
  Such that:it(20) =< V1
it(20) =< V1-V1'
aux(1) =< V
aux(2) =< V+V2
aux(3) =< V+V2-V'-V2'
aux(4) =< V-V'
aux(5) =< V2
aux(6) =< V2-V2'
it(19) =< aux(1)
it(20) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(20) =< aux(2)
it(18) =< aux(3)
it(19) =< aux(3)
it(20) =< aux(3)
it(19) =< aux(4)
it(20) =< aux(4)
it(18) =< aux(5)
it(20) =< aux(5)
it(18) =< aux(6)
it(20) =< aux(6)

#### Cost of chains of f(V,V1,V2,Out):
* Chain [[18,19,20],21]: 1*it(18)+1*it(19)+1*it(20)+0
  Such that:aux(5) =< V2
aux(7) =< V
aux(8) =< V+V2
aux(9) =< V1+Out
aux(4) =< aux(7)
it(20) =< aux(7)
aux(4) =< aux(9)
it(19) =< aux(7)
it(18) =< aux(8)
it(19) =< aux(8)
it(20) =< aux(8)
it(19) =< aux(4)
it(20) =< aux(4)
it(18) =< aux(5)
it(20) =< aux(5)
it(18) =< aux(9)
it(20) =< aux(9)

  with precondition: [V>=0,V1>=0,V2>=0,Out>=1,V+V2>=Out] 

* Chain [21]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of chains of proper(V,Out):
* Chain [25]: 1
  with precondition: [V=0,Out=1] 

* Chain [24]: 1
  with precondition: [V=1,Out=2] 

* Chain [23]: 1
  with precondition: [V=2,Out=3] 

* Chain [22]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [31] 

 * loop 31:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of loops [30] 

 * loop 30:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [30]:top(V,Out) -> [top(V',Out')] 
2*it(30)+0
#### Cost of phase [30]:top(V,Out) -> [top(V',Out')] 
2*it(30)+0
#### Cost of phase [30]:top(V,Out) -> [top(V',Out')] 
2*it(30)+0
#### Cost of loops [27] 

 * loop 27:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of phase [27]:top(V,Out) -> [top(V',Out')] 
2*it(27)+0
#### Cost of chains of top(V,Out):
* Chain [[31]]...: 2*it(31)+0
  with precondition: [V=1] 

* Chain [[31],32]: 2*it(31)+0
  with precondition: [V=1,Out=0] 

* Chain [[31],26,32]: 2*it(31)+1
  with precondition: [V=1,Out=0] 

* Chain [[30]]...: 2*it(30)+0
  with precondition: [V=2] 

* Chain [[30],32]: 2*it(30)+0
  with precondition: [V=2,Out=0] 

* Chain [[30],26,32]: 2*it(30)+1
  with precondition: [V=2,Out=0] 

* Chain [[27]]...: 2*it(27)+0
  with precondition: [V=3] 

* Chain [[27],32]: 2*it(27)+0
  with precondition: [V=3,Out=0] 

* Chain [[27],29,[31]]...: 4*it(27)+2
  with precondition: [V=3] 

* Chain [[27],29,[31],32]: 4*it(27)+2
  with precondition: [V=3,Out=0] 

* Chain [[27],29,[31],26,32]: 4*it(27)+3
  with precondition: [V=3,Out=0] 

* Chain [[27],29,32]: 2*it(27)+2
  with precondition: [V=3,Out=0] 

* Chain [[27],29,26,32]: 2*it(27)+3
  with precondition: [V=3,Out=0] 

* Chain [[27],28,[30]]...: 4*it(27)+2
  with precondition: [V=3] 

* Chain [[27],28,[30],32]: 4*it(27)+2
  with precondition: [V=3,Out=0] 

* Chain [[27],28,[30],26,32]: 4*it(27)+3
  with precondition: [V=3,Out=0] 

* Chain [[27],28,32]: 2*it(27)+2
  with precondition: [V=3,Out=0] 

* Chain [[27],28,26,32]: 2*it(27)+3
  with precondition: [V=3,Out=0] 

* Chain [[27],26,32]: 2*it(27)+1
  with precondition: [V=3,Out=0] 

* Chain [32]: 0
  with precondition: [Out=0,V>=0] 

* Chain [29,[31]]...: 2*it(31)+2
  with precondition: [V=3] 

* Chain [29,[31],32]: 2*it(31)+2
  with precondition: [V=3,Out=0] 

* Chain [29,[31],26,32]: 2*it(31)+3
  with precondition: [V=3,Out=0] 

* Chain [29,32]: 2
  with precondition: [V=3,Out=0] 

* Chain [29,26,32]: 3
  with precondition: [V=3,Out=0] 

* Chain [28,[30]]...: 2*it(30)+2
  with precondition: [V=3] 

* Chain [28,[30],32]: 2*it(30)+2
  with precondition: [V=3,Out=0] 

* Chain [28,[30],26,32]: 2*it(30)+3
  with precondition: [V=3,Out=0] 

* Chain [28,32]: 2
  with precondition: [V=3,Out=0] 

* Chain [28,26,32]: 3
  with precondition: [V=3,Out=0] 

* Chain [26,32]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1,V2):
* Chain [39]...: 2*s(24)+0
  with precondition: [V=1] 

* Chain [38]...: 2*s(25)+0
  with precondition: [V=2] 

* Chain [37]...: 1*s(26)+0
  with precondition: [V=3] 

* Chain [36]: 1*s(27)+1*s(33)+1*s(34)+1*s(35)+1
  Such that:s(29) =< V
s(31) =< V+V1+V2
s(30) =< V+V2
s(28) =< V2
s(32) =< s(29)
s(33) =< s(29)
s(32) =< s(31)
s(34) =< s(29)
s(35) =< s(30)
s(34) =< s(30)
s(33) =< s(30)
s(34) =< s(32)
s(33) =< s(32)
s(35) =< s(28)
s(33) =< s(28)
s(35) =< s(31)
s(33) =< s(31)

  with precondition: [V>=0] 

* Chain [35]: 1
  with precondition: [V=1] 

* Chain [34]: 1*aux(14)+0
  with precondition: [V=2] 

* Chain [33]: 1*s(37)+0
  with precondition: [V=3] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [39]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37]... with precondition: [V=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [34] with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33] with precondition: [V=3] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 58 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 55 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 74 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 232 ms.

