
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun1/3,fun2/3,mark/2]  
 Merged into fun1fun2mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun/3,fun1fun2mark/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into fun1fun2mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1fun2mark/3 
* CE 5 is refined into CE [16] 
* CE 15 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 12 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 11 is refined into CE [25] 
* CE 6 is refined into CE [26] 


#### Refined cost equations fun1fun2mark/3 
* CE 16: fun1fun2mark(A,B,C) = 2+ fun1fun2mark(D,E,F)
     [C+D>=A,A>=D+1,D>=0,C+D=A+F] 
* CE 17: fun1fun2mark(A,B,C) = 1+ fun1fun2mark(D,E,F)
     [D>=0,F+1=C,D+1=A] 
* CE 18: fun1fun2mark(A,B,C) = 1+ fun1fun2mark(A,D,C)
     [A>=0,B=0] 
* CE 19: fun1fun2mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 20: fun1fun2mark(A,B,C) = 1
     [A>=0,C=0,B=0] 
* CE 21: fun1fun2mark(A,B,C) = 1
     [C=1,A=1] 
* CE 22: fun1fun2mark(A,B,C) = 1
     [C=0,A=0] 
* CE 23: fun1fun2mark(A,B,C) = 1+ fun1fun2mark(D,E,F)+ fun1fun2mark(G,H,I)+ fun1fun2mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 24: fun1fun2mark(A,B,C) = 1+ fun1fun2mark(A,D,E)+ fun1fun2mark(F,G,H)+ fun1fun2mark(E,H,I)
     [F>=0,A>=0,I+1=C,F+1=B] 
* CE 25: fun1fun2mark(A,B,C) = 1+ fun1fun2mark(A,D,E)+ fun1fun2mark(F,G,H)+ fun1fun2mark(E,H,I)+ fun1fun2mark(A,J,K)+ fun1fun2mark(I,K,C)
     [F>=0,A>=0,F+1=B] 
* CE 26: fun1fun2mark(A,B,C) = 2+ fun1fun2mark(D,E,F)+ fun1fun2mark(G,H,C)
     [G>=0,D>=0,D+G+1=A,F=1] 

### Cost equations --> "Loop" of fun1fun2mark/3 
* CEs [26] --> Loop 13 
* CEs [25] --> Loop 14 
* CEs [23] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [16] --> Loop 21 
* CEs [17] --> Loop 22 
* CEs [18] --> Loop 23 

#### Loops of fun1fun2mark/3 
* Loop 13: fun1fun2mark(A,B,C)->  fun1fun2mark(A',B',C')  fun1fun2mark(A'2,B'2,C)
                  [A'2>=0,A'>=0,A'+A'2+1=A,C'=1] 
* Loop 14: fun1fun2mark(A,B,C)->  fun1fun2mark(A,A',B')  fun1fun2mark(A'2,B'2,C'2)  fun1fun2mark(B',C'2,A'3)  fun1fun2mark(A,A'4,B'4)  fun1fun2mark(A'3,B'4,C)
                  [A'2>=0,A>=0,A'2+1=B] 
* Loop 15: fun1fun2mark(A,B,C)->  fun1fun2mark(A',B',C')  fun1fun2mark(A'2,B'2,C'2)  fun1fun2mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 16: fun1fun2mark(A,B,C)->  fun1fun2mark(A,A',B')  fun1fun2mark(A'2,B'2,C'2)  fun1fun2mark(B',C'2,A'3)
                  [B>=1,A>=0,C=A'3+1,B=A'2+1] 
* Loop 17: fun1fun2mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 18: fun1fun2mark(A,B,C) [A>=0,C=0,B=0] 
* Loop 19: fun1fun2mark(A,B,C) [C=1,A=1] 
* Loop 20: fun1fun2mark(A,B,C) [C=0,A=0] 
* Loop 21: fun1fun2mark(A,B,C)->  fun1fun2mark(A',B',C')
                  [C+A'>=A,A>=A'+1,A'>=0,A+C'=C+A'] 
* Loop 22: fun1fun2mark(A,B,C)->  fun1fun2mark(A',B',C')
                  [A>=1,C=C'+1,A=A'+1] 
* Loop 23: fun1fun2mark(A,B,C)->  fun1fun2mark(A,A',C)
                  [A>=0,B=0] 

### Ranking functions of CR fun1fun2mark(A,B,C) 

#### Partial ranking functions of CR fun1fun2mark(A,B,C) 
* Partial RF of phase [13,14,15,16,21,22,23]:
  - RF of loop [13:1,13:2,15:1,15:2,21:1,22:1]:
    A depends on loops [14:2,14:3,14:5,15:3,16:2,16:3] 


### Resulting Chains:fun1fun2mark(A,B,C) 
* [multiple([13,14,15,16,21,22,23],[[],[20],[19],[18],[17]])]...
* [20]
* [19]
* [18]
* [17]


### Merging Chains  fun1fun2mark/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 
* [[multiple([13,14,15,16,21,22,23],[[],[20],[19],[18],[17]])]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [27] 
* CE 3 is refined into CE [28,29,30,31,32] 
* CE 4 is refined into CE [33,34,35,36,37] 


#### Refined cost equations start/2 
* CE 27: start(V1,V) = 1
     [V>=0,V1>=0] 
* CE 28: start(V1,V) = 1+ fun1fun2mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0,V1=1] 
* CE 29: start(V1,V) = 1+ fun1fun2mark(W1,X1,Y1):2
     [Y1=1,W1=1,V=1,V1=1] 
* CE 30: start(V1,V) = 1+ fun1fun2mark(V,W1,X1):3
     [V>=0,X1=0,W1=0,V1=1] 
* CE 31: start(V1,V) = 1+ fun1fun2mark(V,W1,X1):4
     [X1>=V+1,V>=0,X1=V+W1+1,V1=1] 
* CE 32: start(V1,V) = 1+ fun1fun2mark(V,W1,X1):5
     [V>=0,V1=1] 
* CE 33: start(V1,V) = 0+ fun1fun2mark(W1,X1,Y1):1
     [Y1=0,W1=0,V1=0] 
* CE 34: start(V1,V) = 0+ fun1fun2mark(W1,X1,Y1):2
     [Y1=1,W1=1,V1=1] 
* CE 35: start(V1,V) = 0+ fun1fun2mark(V1,W1,X1):3
     [V1>=0,X1=0,W1=0] 
* CE 36: start(V1,V) = 0+ fun1fun2mark(V1,W1,X1):4
     [X1>=V1+1,V1>=0,X1=V1+W1+1] 
* CE 37: start(V1,V) = 0+ fun1fun2mark(V1,W1,X1):5
     [V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [32,37] --> Loop 24 
* CEs [28,29,30,31,34] --> Loop 25 
* CEs [27,33,35,36] --> Loop 26 

#### Loops of start/2 
* Loop 24: start(V1,V) [V1>=0] 
* Loop 25: start(V1,V) [V1=1] 
* Loop 26: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [26]
* [25]
* [24]...


### Merging Chains  start/2 into  External patterns of execution 
* [[25],[26]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13,14,15,16,21,22,23] 

 * loop 13:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C'),fun1fun2mark(A'2,B'2,C'2)] 
2
 * loop 14:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C'),fun1fun2mark(A'2,B'2,C'2),fun1fun2mark(A'3,B'3,C'3),fun1fun2mark(A'4,B'4,C'4),fun1fun2mark(A'5,B'5,C'5)] 
1
 * loop 15:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C'),fun1fun2mark(A'2,B'2,C'2),fun1fun2mark(A'3,B'3,C'3)] 
1
 * loop 16:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C'),fun1fun2mark(A'2,B'2,C'2),fun1fun2mark(A'3,B'3,C'3)] 
1
 * loop 21:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C')] 
2
 * loop 22:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C')] 
1
 * loop 23:fun1fun2mark(A,B,C) -> [fun1fun2mark(A',B',C')] 
1
#### Cost of phase [13,14,15,16,21,22,23]:fun1fun2mark(A,B,C) -> [] 
9*it(13)+4*it([17])+0
#### Cost of chains of fun1fun2mark(A,B,C):
* Chain [multiple([13,14,15,16,21,22,23],[[],[20],[19],[18],[17]])]...: 9*it(13)+4*it([17])+0
  with precondition: [A>=0] 

* Chain [20]: 1
  with precondition: [A=0,C=0] 

* Chain [19]: 1
  with precondition: [A=1,C=1] 

* Chain [18]: 1
  with precondition: [B=0,C=0,A>=0] 

* Chain [17]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V1,V):
* Chain [26]: 1
  with precondition: [V1>=0] 

* Chain [25]: 2
  with precondition: [V1=1] 

* Chain [24]...: 1*aux(2)+0
  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [26] with precondition: [V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [25] with precondition: [V1=1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [24]... with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 60 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 54 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 48 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 193 ms.

