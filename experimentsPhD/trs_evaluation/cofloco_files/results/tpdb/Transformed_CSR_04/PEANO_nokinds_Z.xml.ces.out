
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun2/1]
1. non_recursive  : [plus/3]
2. non_recursive  : [s/2]
3. recursive [multiple] : [activate/2,and/3,isNat/2]
4. non_recursive  : [fun/3]
5. non_recursive  : [fun1/4]
6. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into isNat/2
4. SCC is partially evaluated into fun/3
5. SCC is partially evaluated into fun1/4
6. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations isNat/2 
* CE 77 is refined into CE [104] 
* CE 31 is refined into CE [105] 
* CE 32 is refined into CE [106] 
* CE 34 is refined into CE [107] 
* CE 40 is refined into CE [108] 
* CE 41 is refined into CE [109] 
* CE 43 is refined into CE [110] 
* CE 44 is refined into CE [111] 
* CE 46 is refined into CE [112] 
* CE 52 is refined into CE [113] 
* CE 65 is refined into CE [114] 
* CE 67 is refined into CE [115] 
* CE 68 is refined into CE [116] 
* CE 70 is refined into CE [117] 
* CE 76 is refined into CE [118] 
* CE 17 is refined into CE [119] 
* CE 25 is refined into CE [120] 
* CE 29 is refined into CE [121] 
* CE 78 is refined into CE [122] 
* CE 79 is refined into CE [123] 
* CE 81 is refined into CE [124] 
* CE 13 is refined into CE [125] 
* CE 14 is refined into CE [126] 
* CE 16 is refined into CE [127] 
* CE 18 is refined into CE [128] 
* CE 20 is refined into CE [129] 
* CE 26 is refined into CE [130] 
* CE 28 is refined into CE [131] 
* CE 80 is refined into CE [132] 
* CE 48 is refined into CE [133] 
* CE 72 is refined into CE [134] 
* CE 42 is refined into CE [135] 
* CE 66 is refined into CE [136] 
* CE 36 is refined into CE [137] 
* CE 38 is refined into CE [138] 
* CE 53 is refined into CE [139] 
* CE 55 is refined into CE [140] 
* CE 56 is refined into CE [141] 
* CE 58 is refined into CE [142] 
* CE 64 is refined into CE [143] 
* CE 21 is refined into CE [144] 
* CE 22 is refined into CE [145] 
* CE 24 is refined into CE [146] 
* CE 47 is refined into CE [147] 
* CE 50 is refined into CE [148] 
* CE 71 is refined into CE [149] 
* CE 74 is refined into CE [150] 
* CE 15 is refined into CE [151] 
* CE 19 is refined into CE [152] 
* CE 27 is refined into CE [153] 
* CE 35 is refined into CE [154] 
* CE 30 is refined into CE [155] 
* CE 33 is refined into CE [156] 
* CE 39 is refined into CE [157] 
* CE 45 is refined into CE [158] 
* CE 51 is refined into CE [159] 
* CE 69 is refined into CE [160] 
* CE 75 is refined into CE [161] 
* CE 60 is refined into CE [162] 
* CE 62 is refined into CE [163] 
* CE 54 is refined into CE [164] 
* CE 57 is refined into CE [165] 
* CE 63 is refined into CE [166] 
* CE 37 is refined into CE [167] 
* CE 49 is refined into CE [168] 
* CE 73 is refined into CE [169] 
* CE 23 is refined into CE [170] 
* CE 59 is refined into CE [171] 
* CE 61 is refined into CE [172] 


#### Refined cost equations isNat/2 
* CE 104: isNat(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 105: isNat(A,A) = 7+ isNat(B,C)
     [A>=1,C=1,B=0] 
* CE 106: isNat(A,A) = 8+ isNat(B,C)
     [A>=2,C=1,B=0] 
* CE 107: isNat(A,A) = 7+ isNat(B,C)
     [A>=1,C=1,B=0] 
* CE 108: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 109: isNat(V3,Out) = 8+ isNat(W3,X3)
     [V3>=2,V3=W3+1,X3=1,Out=1] 
* CE 110: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+1,W3>=1,V3=Out+W3,X3=1] 
* CE 111: isNat(V3,Out) = 8+ isNat(W3,X3)
     [V3>=W3+2,W3>=1,V3=Out+W3,X3=1] 
* CE 112: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+1,W3>=1,V3=Out+W3,X3=1] 
* CE 113: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 114: isNat(V3,Out) = 7+ isNat(W3,X3)
     [W3>=0,W3+1=V3,X3=1,Out=1] 
* CE 115: isNat(V3,Out) = 6+ isNat(W3,X3)
     [W3>=0,W3+1=V3,X3=1,Out=1] 
* CE 116: isNat(V3,Out) = 7+ isNat(W3,X3)
     [V3>=W3+2,W3>=0,V3=Out+W3,X3=1] 
* CE 117: isNat(V3,Out) = 6+ isNat(W3,X3)
     [V3>=W3+2,W3>=0,V3=Out+W3,X3=1] 
* CE 118: isNat(V3,Out) = 5+ isNat(W3,X3)
     [V3>=W3+1,W3>=0,V3=Out+W3,X3=1] 
* CE 119: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,V3>=2,V3=W3+1,Out=0] 
* CE 120: isNat(V3,Out) = 4+ isNat(W3,X3)
     [X3>=0,W3>=0,W3+1=V3,Out=0] 
* CE 121: isNat(V3,Out) = 8+ isNat(W3,X3)
     [X3=1,W3=0,Out=1,V3=1] 
* CE 122: isNat(V3,Out) = 3+ isNat(W3,Out)
     [W3=0,V3=1] 
* CE 123: isNat(V3,Out) = 3+ isNat(W3,Out)
     [V3>=2,V3=W3+1] 
* CE 124: isNat(V3,Out) = 2+ isNat(W3,Out)
     [W3>=0,W3+1=V3] 
* CE 125: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,W3=0,Out=0,V3=1] 
* CE 126: isNat(V3,Out) = 5+ isNat(W3,X3)
     [X3>=0,V3>=2,W3=0,Out=0] 
* CE 127: isNat(V3,Out) = 4+ isNat(W3,X3)
     [X3>=0,V3>=1,W3=0,Out=0] 
* CE 128: isNat(V3,Out) = 5+ isNat(W3,X3)
     [V3>=W3+2,X3>=0,W3>=1,Out=0] 
* CE 129: isNat(V3,Out) = 4+ isNat(W3,X3)
     [V3>=W3+1,X3>=0,W3>=1,Out=0] 
* CE 130: isNat(V3,Out) = 4+ isNat(W3,X3)
     [V3>=W3+2,X3>=0,W3>=0,Out=0] 
* CE 131: isNat(V3,Out) = 3+ isNat(W3,X3)
     [V3>=W3+1,X3>=0,W3>=0,Out=0] 
* CE 132: isNat(V3,Out) = 2+ isNat(W3,X3)+ isNat(X3,Out)
     [V3>=2,V3=W3+2] 
* CE 133: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Z3>=0,Y3>=0,V3=W3+Y3+2,Z3+1=Out,X3=1] 
* CE 134: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Z3>=0,Y3>=0,W3+Y3+2=V3,Z3+1=Out,X3=1] 
* CE 135: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=2,V3=W3+1,Y3=0,X3=1] 
* CE 136: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [W3>=0,W3+1=V3,Y3=0,X3=1] 
* CE 137: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Z3>=0,V3>=2,V3=Y3+2,Z3+1=Out,X3=1,W3=0] 
* CE 138: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Out>=0,V3>=2,Out=Z3+1,V3=Y3+2,X3=1,W3=0] 
* CE 139: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=2,V3=W3+2,Y3=1,Out=1] 
* CE 140: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 141: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+3,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 142: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 143: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,W3>=0,V3=Out+W3+1,Y3=1] 
* CE 144: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(X3,Y3)
     [Y3>=0,V3>=2,V3=W3+2,Out=0] 
* CE 145: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+3,Y3>=0,W3>=0,Out=0] 
* CE 146: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(X3,Y3)
     [V3>=W3+2,Y3>=0,W3>=0,Out=0] 
* CE 147: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Y3>=0,V3=W3+Y3+2,Z3+1=0,X3=1,Out=0] 
* CE 148: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Y3>=0,Out>=0,V3=W3+Y3+2,Out=Z3+1,X3=1] 
* CE 149: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Y3>=0,W3+Y3+2=V3,Z3+1=0,X3=1,Out=0] 
* CE 150: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Y3>=0,Out>=0,W3+Y3+2=V3,Out=Z3+1,X3=1] 
* CE 151: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(Y3,Z3)
     [Z3+1>=0,X3>=0,V3>=2,V3=Y3+2,W3=0,Out=0] 
* CE 152: isNat(V3,Out) = 4+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+3,Z3+1>=0,Y3>=0,X3>=0,V3=W3+Y3+2,Out=0] 
* CE 153: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=Y3+2,Z3+1>=0,Y3>=0,X3>=0,W3+Y3+2=V3,Out=0] 
* CE 154: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Z3)
     [V3>=2,V3=Y3+2,Z3+1=0,X3=1,W3=0,Out=0] 
* CE 155: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [Y3=0,X3=1,W3=0,V3=1] 
* CE 156: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=2,V3=Y3+1,X3=1,W3=0] 
* CE 157: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [Y3>=0,Y3+1=V3,X3=1,W3=0] 
* CE 158: isNat(V3,Out) = 7+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+2,Y3>=1,V3=W3+Y3+1,X3=1] 
* CE 159: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+2,Y3>=0,V3=W3+Y3+1,X3=1] 
* CE 160: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+1,Y3>=1,V3=W3+Y3+1,X3=1] 
* CE 161: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Out)
     [V3>=Y3+1,Y3>=0,W3+Y3+1=V3,X3=1] 
* CE 162: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,A4>=0,Z3>=0,W3+Z3+3=V3,A4+1=Out,Y3=1] 
* CE 163: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,Z3>=0,Out>=0,W3+Z3+3=V3,Out=A4+1,Y3=1] 
* CE 164: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=2,V3=W3+2,Z3=0,Y3=1] 
* CE 165: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=Z3+2,Z3>=1,V3=W3+Z3+2,Y3=1] 
* CE 166: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,Out)
     [V3>=Z3+2,Z3>=0,W3+Z3+2=V3,Y3=1] 
* CE 167: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [Z3>=0,V3>=2,V3=Y3+2,X3=1,W3=0] 
* CE 168: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [V3>=Y3+3,Z3>=0,Y3>=0,V3=W3+Y3+2,X3=1] 
* CE 169: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(Y3,Z3)+ isNat(Z3,Out)
     [V3>=Y3+2,Z3>=0,Y3>=0,W3+Y3+2=V3,X3=1] 
* CE 170: isNat(V3,Out) = 3+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,A4+1>=0,Z3>=0,Y3>=0,W3+Z3+3=V3,Out=0] 
* CE 171: isNat(V3,Out) = 6+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)
     [V3>=Z3+3,Z3>=0,W3+Z3+3=V3,A4+1=0,Y3=1,Out=0] 
* CE 172: isNat(V3,Out) = 5+ isNat(W3,X3)+ isNat(X3,Y3)+ isNat(Z3,A4)+ isNat(A4,Out)
     [V3>=Z3+3,A4>=0,Z3>=0,W3+Z3+3=V3,Y3=1] 

### Cost equations --> "Loop" of isNat/2 
* CEs [172] --> Loop 32 
* CEs [162,163] --> Loop 33 
* CEs [164,165,166] --> Loop 34 
* CEs [167,168,169] --> Loop 35 
* CEs [170,171] --> Loop 36 
* CEs [132] --> Loop 37 
* CEs [133,134] --> Loop 38 
* CEs [135,136] --> Loop 39 
* CEs [137,138] --> Loop 40 
* CEs [139,140,141,142,143] --> Loop 41 
* CEs [144,145,146] --> Loop 42 
* CEs [147,148,149,150] --> Loop 43 
* CEs [151,152,153,154] --> Loop 44 
* CEs [155,156,157,158,159,160,161] --> Loop 45 
* CEs [105,106,107] --> Loop 46 
* CEs [108,109,110,111,112,113,114,115,116,117,118] --> Loop 47 
* CEs [119,120] --> Loop 48 
* CEs [121,122,123,124] --> Loop 49 
* CEs [125,126,127,128,129,130,131] --> Loop 50 
* CEs [104] --> Loop 51 

#### Loops of isNat/2 
* Loop 32: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)  isNat(Out'3,Out)
                  [V3>=V3'3+3,Out'3>=0,V3'3>=0,V3=V3'+V3'3+3,A'2=1] 
* Loop 33: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)
                  [V3>=V3'+3,V3'>=0,Out>=0,V3'+V3'3+3=V3,Out=Out'3+1,A'2=1] 
* Loop 34: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out)
                  [V3>=V3'+2,V3'>=0,V3'+V3'3+2=V3,A'2=1] 
* Loop 35: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)  isNat(Out'2,Out)
                  [V3>=V3'+2,Out'2>=0,V3'>=0,V3'+V3'2+2=V3,Out'=1] 
* Loop 36: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)  isNat(V3'3,Out'3)
                  [V3>=V3'+3,Out'3+1>=0,A'2>=0,V3'>=0,V3'+V3'3+3=V3,Out=0] 
* Loop 37: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',Out)
                  [V3>=2,V3=V3'+2] 
* Loop 38: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,V3'>=0,Out>=1,V3'+V3'2+2=V3,Out=Out'2+1,Out'=1] 
* Loop 39: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out)
                  [V3>=1,V3=V3'+1,V3'2=0,Out'=1] 
* Loop 40: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [Out>=0,V3>=2,Out=Out'2+1,V3=V3'2+2,Out'=1,V3'=0] 
* Loop 41: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)
                  [V3>=Out+1,Out>=1,Out+V3'+1=V3,A'2=1] 
* Loop 42: isNat(V3,Out)->  isNat(V3',Out')  isNat(Out',A'2)
                  [V3>=V3'+2,A'2>=0,V3'>=0,Out=0] 
* Loop 43: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,V3'>=0,Out>=0,V3'+V3'2+2=V3,Out=Out'2+1,Out'=1] 
* Loop 44: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out'2)
                  [V3>=V3'+2,Out'2+1>=0,Out'>=0,V3'>=0,V3'+V3'2+2=V3,Out=0] 
* Loop 45: isNat(V3,Out)->  isNat(V3',Out')  isNat(V3'2,Out)
                  [V3>=V3'+1,V3'>=0,V3'+V3'2+1=V3,Out'=1] 
* Loop 46: isNat(A,A)->  isNat(V3',Out')
                  [A>=1,Out'=1,V3'=0] 
* Loop 47: isNat(V3,Out)->  isNat(V3',Out')
                  [V3>=Out,Out>=1,Out+V3'=V3,Out'=1] 
* Loop 48: isNat(V3,Out)->  isNat(V3',Out')
                  [Out'>=0,V3>=1,V3=V3'+1,Out=0] 
* Loop 49: isNat(V3,Out)->  isNat(V3',Out)
                  [V3>=1,V3=V3'+1] 
* Loop 50: isNat(V3,Out)->  isNat(V3',Out')
                  [V3>=V3'+1,Out'>=0,V3'>=0,Out=0] 
* Loop 51: isNat(V3,Out) [V3>=0,V3+1=Out] 

### Ranking functions of CR isNat(V3,Out) 

#### Partial ranking functions of CR isNat(V3,Out) 
* Partial RF of phase [32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50]:
  - RF of loop [32:1,32:3,33:1,33:3,36:1,36:3]:
    V3-2 depends on loops [32:2,32:4,33:2,34:2,35:3,36:2,37:2,41:2,42:2] 
  - RF of loop [34:1,34:3,35:1,35:2,37:1,38:1,38:2,40:1,40:2,41:1,42:1,43:1,43:2,44:1,44:2]:
    V3-1 depends on loops [32:2,32:4,33:2,34:2,35:3,36:2,37:2,41:2,42:2] 
  - RF of loop [39:1,39:2,45:1,45:2,47:1,48:1,49:1,50:1]:
    V3 depends on loops [32:2,32:4,33:2,34:2,35:3,36:2,37:2,41:2,42:2] 


### Resulting Chains:isNat(V3,Out) 
* [multiple([32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50],[[],[51],[46,51]])]...
* [51]
* [46,51]


### Merging Chains  isNat/2 into  External patterns of execution 
* [[51]] --> 1 
* [[51,46]] --> 2 
* [[multiple([32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50],[[],[51],[46,51]])]] --> 3 


### Specialization of cost equations fun/3 
* CE 86 is refined into CE [173] 
* CE 84 is refined into CE [174,175,176] 
* CE 82 is refined into CE [177] 
* CE 83 is refined into CE [178] 
* CE 85 is refined into CE [179] 


#### Refined cost equations fun/3 
* CE 173: fun(V3,V,Out) = 0
     [V>=0,V3>=0,Out=0] 
* CE 174: fun(A,B,B) = 2+ isNat(C,B):1
     [B>=1,B=C+1,A=1] 
* CE 175: fun(V3,V,Out) = 2+ isNat(Out,Out):2
     [Out>=1,Out+1=V,V3=1] 
* CE 176: fun(V3,V,Out) = 2+ isNat(W3,Out):3
     [W3>=1,W3+1=V,V3=1] 
* CE 177: fun(V3,V,Out) = 3
     [Out=0,V=0,V3=1] 
* CE 178: fun(A,B,B) = 3
     [B>=1,A=1] 
* CE 179: fun(A,B,B) = 2
     [B>=0,A=1] 

### Cost equations --> "Loop" of fun/3 
* CEs [173] --> Loop 52 
* CEs [175] --> Loop 53 
* CEs [174,177,178,179] --> Loop 54 
* CEs [176] --> Loop 55 

#### Loops of fun/3 
* Loop 52: fun(V3,V,Out) [V>=0,V3>=0,Out=0] 
* Loop 53: fun(V3,V,Out) [V>=2,V=Out+1,V3=1] 
* Loop 54: fun(A,B,B) [B>=0,A=1] 
* Loop 55: fun(V3,V,Out) [V>=2,V3=1] 

### Ranking functions of CR fun(V3,V,Out) 

#### Partial ranking functions of CR fun(V3,V,Out) 


### Resulting Chains:fun(V3,V,Out) 
* [55]...
* [54]
* [53]
* [52]


### Merging Chains  fun/3 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 
* [[55]] --> 4 


### Specialization of cost equations fun1/4 
* CE 103 is refined into CE [180] 
* CE 97 is refined into CE [181,182,183,184,185,186,187] 
* CE 92 is refined into CE [188] 
* CE 100 is refined into CE [189] 
* CE 89 is refined into CE [190,191,192] 
* CE 93 is refined into CE [193,194,195] 
* CE 101 is refined into CE [196,197,198] 
* CE 88 is refined into CE [199] 
* CE 90 is refined into CE [200] 
* CE 95 is refined into CE [201,202,203] 
* CE 96 is refined into CE [204,205,206] 
* CE 98 is refined into CE [207,208,209] 
* CE 87 is refined into CE [210] 
* CE 91 is refined into CE [211] 
* CE 94 is refined into CE [212] 
* CE 99 is refined into CE [213] 
* CE 102 is refined into CE [214] 


#### Refined cost equations fun1/4 
* CE 180: fun1(V3,V,V4,Out) = 0
     [V4>=0,V>=0,V3>=0,Out=0] 
* CE 181: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,V):1
     [V>=1,V4>=1,V+V4+2=Out,V=X4+1,V4=W4+1,V3=1] 
* CE 182: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,X4):2
     [X4>=1,V4>=1,V4+X4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 183: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1+ isNat(X4,Y4):3
     [Out>=V4+2,X4>=1,V4>=1,V4+Y4+2=Out,V4=W4+1,X4+1=V,V3=1] 
* CE 184: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,V):1
     [V>=1,W4>=1,V+W4+2=Out,V=X4+1,W4+1=V4,V3=1] 
* CE 185: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,X4):2
     [X4>=1,W4>=1,W4+X4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 186: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2+ isNat(X4,Y4):3
     [Out>=W4+2,X4>=1,W4>=1,W4+Y4+2=Out,W4+1=V4,X4+1=V,V3=1] 
* CE 187: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=Y4+2,Y4>=0,Z4>=0,W4>=1,Out=X4+Y4+2,W4+1=V4,Z4+1=V,V3=1] 
* CE 188: fun1(V3,V,V4,Out) = 7
     [V4>=1,V>=1,V+V4+2=Out,V3=1] 
* CE 189: fun1(V3,V,V4,Out) = 6
     [V4>=0,V>=1,V+V4+2=Out,V3=1] 
* CE 190: fun1(V3,V,V4,Out) = 6+ isNat(W4,V):1
     [V>=1,V=W4+1,V+2=Out,V4=0,V3=1] 
* CE 191: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V,V4=0,V3=1] 
* CE 192: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V,V4=0,V3=1] 
* CE 193: fun1(V3,V,V4,Out) = 6+ isNat(W4,V):1
     [V>=1,V4>=1,V+V4+2=Out,V=W4+1,V3=1] 
* CE 194: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,V4>=1,V4+W4+2=Out,W4+1=V,V3=1] 
* CE 195: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=V4+2,W4>=1,V4>=1,V4+X4+2=Out,W4+1=V,V3=1] 
* CE 196: fun1(V3,V,V4,Out) = 5+ isNat(W4,V):1
     [Out>=V+2,V>=1,V+V4+2=Out,V=W4+1,V3=1] 
* CE 197: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2
     [Out>=W4+2,W4>=1,V4+W4+2=Out,W4+1=V,V3=1] 
* CE 198: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=X4+2,X4>=0,W4>=1,Out=V4+X4+2,W4+1=V,V3=1] 
* CE 199: fun1(V3,V,V4,Out) = 7
     [V>=1,V+2=Out,V4=0,V3=1] 
* CE 200: fun1(V3,V,V4,Out) = 6
     [Out>=2,Out=V+2,V4=0,V3=1] 
* CE 201: fun1(V3,V,V4,Out) = 6+ isNat(W4,V4):1
     [V4>=1,V4=W4+1,V4+2=Out,V=0,V3=1] 
* CE 202: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,W4+2=Out,W4+1=V4,V=0,V3=1] 
* CE 203: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [W4>=1,Out>=2,Out=X4+2,W4+1=V4,V=0,V3=1] 
* CE 204: fun1(V3,V,V4,Out) = 6+ isNat(W4,V4):1
     [V4>=1,V>=1,V+V4+2=Out,V4=W4+1,V3=1] 
* CE 205: fun1(V3,V,V4,Out) = 6+ isNat(W4,W4):2
     [W4>=1,V>=1,V+W4+2=Out,W4+1=V4,V3=1] 
* CE 206: fun1(V3,V,V4,Out) = 6+ isNat(W4,X4):3
     [Out>=V+2,W4>=1,V>=1,V+X4+2=Out,W4+1=V4,V3=1] 
* CE 207: fun1(V3,V,V4,Out) = 5+ isNat(W4,V4):1
     [Out>=V4+2,V4>=1,V+V4+2=Out,V4=W4+1,V3=1] 
* CE 208: fun1(V3,V,V4,Out) = 5+ isNat(W4,W4):2
     [Out>=W4+2,W4>=1,V+W4+2=Out,W4+1=V4,V3=1] 
* CE 209: fun1(V3,V,V4,Out) = 5+ isNat(W4,X4):3
     [Out>=X4+2,X4>=0,W4>=1,Out=V+X4+2,W4+1=V4,V3=1] 
* CE 210: fun1(V3,V,V4,Out) = 7
     [Out=2,V4=0,V=0,V3=1] 
* CE 211: fun1(V3,V,V4,Out) = 7
     [V4>=1,V4+2=Out,V=0,V3=1] 
* CE 212: fun1(V3,V,V4,Out) = 6
     [Out>=V4+2,V4>=1,V+V4+2=Out,V3=1] 
* CE 213: fun1(V3,V,V4,Out) = 6
     [Out>=2,Out=V4+2,V=0,V3=1] 
* CE 214: fun1(V3,V,V4,Out) = 5
     [Out>=V4+2,V4>=0,V+V4+2=Out,V3=1] 

### Cost equations --> "Loop" of fun1/4 
* CEs [180] --> Loop 56 
* CEs [185] --> Loop 57 
* CEs [184,205] --> Loop 58 
* CEs [181,188,189,193,196,204] --> Loop 59 
* CEs [182,191,194,197] --> Loop 60 
* CEs [190,199,200] --> Loop 61 
* CEs [202,208] --> Loop 62 
* CEs [201,207,210,211,212,213,214] --> Loop 63 
* CEs [186,187] --> Loop 64 
* CEs [183,192,195,198] --> Loop 65 
* CEs [203,206,209] --> Loop 66 

#### Loops of fun1/4 
* Loop 56: fun1(V3,V,V4,Out) [V4>=0,V>=0,V3>=0,Out=0] 
* Loop 57: fun1(V3,V,V4,Out) [V4>=2,V>=2,V+V4=Out,V3=1] 
* Loop 58: fun1(V3,V,V4,Out) [V4>=2,V>=1,V+V4+1=Out,V3=1] 
* Loop 59: fun1(V3,V,V4,Out) [V4>=0,V>=1,V+V4+2=Out,V3=1] 
* Loop 60: fun1(V3,V,V4,Out) [V4>=0,V>=2,V+V4+1=Out,V3=1] 
* Loop 61: fun1(V3,V,V4,Out) [V>=0,V+2=Out,V4=0,V3=1] 
* Loop 62: fun1(V3,V,V4,Out) [V4>=2,V>=0,V+V4+1=Out,V3=1] 
* Loop 63: fun1(V3,V,V4,Out) [V4>=0,V>=0,V+V4+2=Out,V3=1] 
* Loop 64: fun1(V3,V,V4,Out) [Out>=2,V4>=2,V>=1,V3=1] 
* Loop 65: fun1(V3,V,V4,Out) [Out>=V4+2,V4>=0,V>=2,V3=1] 
* Loop 66: fun1(V3,V,V4,Out) [Out>=V+2,V4>=2,V>=0,V3=1] 

### Ranking functions of CR fun1(V3,V,V4,Out) 

#### Partial ranking functions of CR fun1(V3,V,V4,Out) 


### Resulting Chains:fun1(V3,V,V4,Out) 
* [66]...
* [65]...
* [64]...
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[59],[61],[63]] --> 1 
* [[58],[62]] --> 2 
* [[60]] --> 3 
* [[57]] --> 4 
* [[56]] --> 5 
* [[66]] --> 6 
* [[64]] --> 7 
* [[65]] --> 8 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [215] 
* CE 3 is refined into CE [216] 
* CE 4 is refined into CE [217] 
* CE 5 is refined into CE [218,219,220] 
* CE 6 is refined into CE [221] 
* CE 7 is refined into CE [222,223,224,225] 
* CE 8 is refined into CE [226,227,228,229,230,231,232,233] 
* CE 9 is refined into CE [234,235,236] 
* CE 10 is refined into CE [237] 
* CE 11 is refined into CE [238] 
* CE 12 is refined into CE [239,240,241] 


#### Refined cost equations start/3 
* CE 215: start(V3,V,V4) = 0
     [V>=0,V3>=0] 
* CE 216: start(V3,V,V4) = 3
     [V=0,V3=1] 
* CE 217: start(V3,V,V4) = 3
     [V>=1,V3=1] 
* CE 218: start(V3,V,V4) = 2+ isNat(W4,V):1
     [V>=1,V=W4+1,V3=1] 
* CE 219: start(V3,V,V4) = 2+ isNat(W4,W4):2
     [W4>=1,W4+1=V,V3=1] 
* CE 220: start(V3,V,V4) = 2+ isNat(W4,X4):3
     [W4>=1,W4+1=V,V3=1] 
* CE 221: start(V3,V,V4) = 2
     [V3>=1] 
* CE 222: start(V3,V,V4) = 0+ fun(W4,V,V):1
     [V>=0,W4=1,V3=1] 
* CE 223: start(V3,V,V4) = 0+ fun(W4,X4,Y4):2
     [Y4>=1,Y4+1=X4,Y4+1=V,W4=1,V3=1] 
* CE 224: start(V3,V,V4) = 0+ fun(V3,V,W4):3
     [V>=0,V3>=0,W4=0] 
* CE 225: start(V3,V,V4) = 0+ fun(W4,V,X4):4
     [V>=2,W4=1,V3=1] 
* CE 226: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):1
     [Y4>=V+2,V>=0,Y4=V+X4+2,Y4=V+V4+2,W4=1,V3=1] 
* CE 227: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):2
     [Y4>=V+3,V>=0,Y4=V+X4+1,Y4=V+V4+1,W4=1,V3=1] 
* CE 228: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):3
     [Y4>=V+1,V>=2,Y4=V+X4+1,Y4=V+V4+1,W4=1,V3=1] 
* CE 229: start(V3,V,V4) = 0+ fun1(W4,V,X4,Y4):4
     [Y4>=V+2,V>=2,Y4=V+X4,Y4=V+V4,W4=1,V3=1] 
* CE 230: start(V3,V,V4) = 0+ fun1(V3,V,V4,W4):5
     [V4>=0,V>=0,V3>=0,W4=0] 
* CE 231: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):6
     [X4>=V+2,V4>=2,V>=0,W4=1,V3=1] 
* CE 232: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):7
     [X4>=2,V4>=2,V>=1,W4=1,V3=1] 
* CE 233: start(V3,V,V4) = 0+ fun1(W4,V,V4,X4):8
     [X4>=V4+2,V4>=0,V>=2,W4=1,V3=1] 
* CE 234: start(V3,V,V4) = 0+ isNat(W4,X4):1
     [X4>=1,X4=W4+1,X4=V3+1] 
* CE 235: start(V3,V,V4) = 0+ isNat(V3,V3):2
     [V3>=1] 
* CE 236: start(V3,V,V4) = 0+ isNat(V3,W4):3
     [V3>=1] 
* CE 237: start(V3,V,V4) = 1
     [] 
* CE 238: start(V3,V,V4) = 2
     [V3=0] 
* CE 239: start(V3,V,V4) = 1+ isNat(W4,V3):1
     [V3>=1,V3=W4+1] 
* CE 240: start(V3,V,V4) = 1+ isNat(W4,W4):2
     [W4>=1,W4+1=V3] 
* CE 241: start(V3,V,V4) = 1+ isNat(W4,X4):3
     [W4>=1,W4+1=V3] 

### Cost equations --> "Loop" of start/3 
* CEs [220,225,233] --> Loop 67 
* CEs [231,232,236,241] --> Loop 68 
* CEs [215,216,217,218,219,221,222,223,224,226,227,228,229,230,234,235,237,238,239,240] --> Loop 69 

#### Loops of start/3 
* Loop 67: start(V3,V,V4) [V>=2,V3=1] 
* Loop 68: start(V3,V,V4) [V3>=1] 
* Loop 69: start(V3,V,V4) [] 

### Ranking functions of CR start(V3,V,V4) 

#### Partial ranking functions of CR start(V3,V,V4) 


### Resulting Chains:start(V3,V,V4) 
* [69]
* [68]...
* [67]...


### Merging Chains  start/3 into  External patterns of execution 
* [[69]] --> 1 
* [[67]] --> 2 
* [[68]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50] 

 * loop 32:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3),isNat(V3'4,Out'4)] 
5
 * loop 33:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 34:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 35:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 36:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2),isNat(V3'3,Out'3)] 
6
 * loop 37:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
2
 * loop 38:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 39:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 40:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 41:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 42:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
4
 * loop 43:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 44:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 45:isNat(V3,Out) -> [isNat(V3',Out'),isNat(V3'2,Out'2)] 
7
 * loop 47:isNat(V3,Out) -> [isNat(V3',Out')] 
8
 * loop 48:isNat(V3,Out) -> [isNat(V3',Out')] 
5
 * loop 49:isNat(V3,Out) -> [isNat(V3',Out')] 
8
 * loop 50:isNat(V3,Out) -> [isNat(V3',Out')] 
5
#### Cost of phase [32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50]:isNat(V3,Out) -> [] 
42*it(32)+28*it(38)+49*it(39)+1*it([51])+0
#### Cost of chains of isNat(V3,Out):
* Chain [multiple([32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50],[[],[51],[46,51]])]...: 42*it(32)+28*it(38)+49*it(39)+1*it([51])+0
  with precondition: [V3>=1] 

* Chain [51]: 1
  with precondition: [V3+1=Out,V3>=0] 

* Chain [46,51]: 9
  with precondition: [V3=Out,V3>=1] 


#### Cost of chains of fun(V3,V,Out):
* Chain [55]...: 120*s(1)+2
  with precondition: [V3=1,V>=2] 

* Chain [54]: 3
  with precondition: [V3=1,V=Out,V>=0] 

* Chain [53]: 11
  with precondition: [V3=1,V=Out+1,V>=2] 

* Chain [52]: 0
  with precondition: [Out=0,V3>=0,V>=0] 


#### Cost of chains of fun1(V3,V,V4,Out):
* Chain [66]...: 1*aux(36)+0
  with precondition: [V3=1,V>=0,V4>=2,Out>=V+2] 

* Chain [65]...: 1*aux(37)+0
  with precondition: [V3=1,V>=2,V4>=0,Out>=V4+2] 

* Chain [64]...: 1*aux(38)+0
  with precondition: [V3=1,V>=1,V4>=2,Out>=2] 

* Chain [63]: 7
  with precondition: [V3=1,V+V4+2=Out,V>=0,V4>=0] 

* Chain [62]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=0,V4>=2] 

* Chain [61]: 7
  with precondition: [V3=1,V4=0,V+2=Out,V>=0] 

* Chain [60]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=2,V4>=0] 

* Chain [59]: 7
  with precondition: [V3=1,V+V4+2=Out,V>=1,V4>=0] 

* Chain [58]: 15
  with precondition: [V3=1,V+V4+1=Out,V>=1,V4>=2] 

* Chain [57]: 23
  with precondition: [V3=1,V+V4=Out,V>=2,V4>=2] 

* Chain [56]: 0
  with precondition: [Out=0,V3>=0,V>=0,V4>=0] 


#### Cost of chains of start(V3,V,V4):
* Chain [69]: 23
  with precondition: [] 

* Chain [68]...: 1*aux(39)+0
  with precondition: [V3>=1] 

* Chain [67]...: 1*aux(40)+0
  with precondition: [V3=1,V>=2] 


Closed-form bounds of start(V3,V,V4): 
-------------------------------------
* Chain [69] with precondition: [] 
    - Upper bound: 23 
    - Complexity: constant 
* Chain [68]... with precondition: [V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [67]... with precondition: [V3=1,V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V3,V,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 1759 ms.
* Invariants computed in 198 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 52 ms.
* Refinement performed in 955 ms.
* Termination proved in 132 ms.
* Upper bounds computed in 577 ms.
   - Equation cost structures 163 ms.
   - Phase cost structures 525 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 3830 ms.

