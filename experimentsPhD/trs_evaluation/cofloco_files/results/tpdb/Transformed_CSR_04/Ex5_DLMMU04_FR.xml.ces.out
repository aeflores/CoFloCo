
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [incr/2]
2. non_recursive  : [pairNs/1]
3. non_recursive  : [oddNs/1]
4. non_recursive  : [repItems/2]
5. non_recursive  : [take/3]
6. non_recursive  : [zip/3]
7. recursive [non_tail,multiple] : [activate/2]
8. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into oddNs/1
4. SCC is partially evaluated into repItems/2
5. SCC is partially evaluated into take/3
6. SCC is partially evaluated into zip/3
7. SCC is partially evaluated into activate/2
8. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations oddNs/1 
* CE 21 is refined into CE [24] 
* CE 20 is refined into CE [25] 


#### Refined cost equations oddNs/1 
* CE 24: oddNs(Out) = 4
     [Out=4] 
* CE 25: oddNs(Out) = 1
     [Out=1] 

### Cost equations --> "Loop" of oddNs/1 
* CEs [24] --> Loop 16 
* CEs [25] --> Loop 17 

#### Loops of oddNs/1 
* Loop 16: oddNs(Out) [Out=4] 
* Loop 17: oddNs(Out) [Out=1] 

### Ranking functions of CR oddNs(Out) 

#### Partial ranking functions of CR oddNs(Out) 


### Resulting Chains:oddNs(Out) 
* [17]
* [16]


### Merging Chains  oddNs/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations repItems/2 
* CE 12 is refined into CE [26] 
* CE 13 is refined into CE [27] 


#### Refined cost equations repItems/2 
* CE 26: repItems(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 27: repItems(V1,Out) = 1
     [Out=2,V1=2] 

### Cost equations --> "Loop" of repItems/2 
* CEs [26] --> Loop 18 
* CEs [27] --> Loop 19 

#### Loops of repItems/2 
* Loop 18: repItems(V1,Out) [V1>=0,V1+1=Out] 
* Loop 19: repItems(V1,Out) [Out=2,V1=2] 

### Ranking functions of CR repItems(V1,Out) 

#### Partial ranking functions of CR repItems(V1,Out) 


### Resulting Chains:repItems(V1,Out) 
* [19]
* [18]


### Merging Chains  repItems/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations take/3 
* CE 22 is refined into CE [28] 
* CE 23 is refined into CE [29] 


#### Refined cost equations take/3 
* CE 28: take(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 29: take(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 

### Cost equations --> "Loop" of take/3 
* CEs [28] --> Loop 20 
* CEs [29] --> Loop 21 

#### Loops of take/3 
* Loop 20: take(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 21: take(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR take(V1,V,Out) 

#### Partial ranking functions of CR take(V1,V,Out) 


### Resulting Chains:take(V1,V,Out) 
* [21]
* [20]


### Merging Chains  take/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations zip/3 
* CE 11 is refined into CE [30] 
* CE 10 is refined into CE [31] 
* CE 9 is refined into CE [32] 


#### Refined cost equations zip/3 
* CE 30: zip(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 31: zip(V1,V,Out) = 1
     [V1>=0,Out=2,V=2] 
* CE 32: zip(V1,V,Out) = 1
     [V>=0,Out=2,V1=2] 

### Cost equations --> "Loop" of zip/3 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [32] --> Loop 24 

#### Loops of zip/3 
* Loop 22: zip(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 23: zip(V1,V,Out) [V1>=0,Out=2,V=2] 
* Loop 24: zip(V1,V,Out) [V>=0,Out=2,V1=2] 

### Ranking functions of CR zip(V1,V,Out) 

#### Partial ranking functions of CR zip(V1,V,Out) 


### Resulting Chains:zip(V1,V,Out) 
* [24]
* [23]
* [22]


### Merging Chains  zip/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations activate/2 
* CE 16 is refined into CE [33] 
* CE 14 is refined into CE [34,35] 
* CE 15 is refined into CE [36] 
* CE 19 is refined into CE [37,38] 
* CE 17 is refined into CE [39,40,41] 
* CE 18 is refined into CE [42,43] 


#### Refined cost equations activate/2 
* CE 33: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 
* CE 34: activate(V1,Out) = 1+ activate(W1,X1)+ repItems(Y1,Z1):1
     [W1>=0,W1+1=V1,X1=2,Z1=2,Y1=2,Out=2] 
* CE 35: activate(V1,Out) = 1+ activate(W1,X1)+ repItems(Y1,Out):2
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 36: activate(A,A) = 1
     [A>=0] 
* CE 37: activate(V1,Out) = 1+ oddNs(W1):1
     [W1=1,Out=1,V1=1] 
* CE 38: activate(V1,Out) = 1+ oddNs(W1):2
     [W1=4,Out=4,V1=1] 
* CE 39: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ zip(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=2,B2=2,A2=2,Out=2] 
* CE 40: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ zip(X1,A2,B2):2
     [Y1>=0,W1>=0,X1>=0,W1+Y1+1=V1,Z1=2,B2=2,A2=2,Out=2] 
* CE 41: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ zip(X1,A2,Out):3
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 
* CE 42: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ take(A2,Z1,B2):1
     [Y1>=0,W1>=0,Z1>=0,W1+Y1+1=V1,X1=0,B2=2,A2=0,Out=2] 
* CE 43: activate(V1,Out) = 1+ activate(W1,X1)+ activate(Y1,Z1)+ take(X1,A2,Out):2
     [Out>=X1+1,Y1>=0,W1>=0,X1>=0,Out=X1+Z1+1,Out=X1+A2+1,W1+Y1+1=V1] 

### Cost equations --> "Loop" of activate/2 
* CEs [41,43] --> Loop 25 
* CEs [40] --> Loop 26 
* CEs [39] --> Loop 27 
* CEs [42] --> Loop 28 
* CEs [38] --> Loop 29 
* CEs [36,37] --> Loop 30 
* CEs [33,35] --> Loop 31 
* CEs [34] --> Loop 32 

#### Loops of activate/2 
* Loop 25: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 26: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'>=0,V1'>=0,V1'+V1'2+1=V1,Out'2=2,Out=2] 
* Loop 27: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=2,Out=2] 
* Loop 28: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=2] 
* Loop 29: activate(V1,Out) [Out=4,V1=1] 
* Loop 30: activate(A,A) [A>=0] 
* Loop 31: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 32: activate(V1,Out)->  activate(V1',Out')
                  [V1>=1,V1=V1'+1,Out'=2,Out=2] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [25,26,27,28,31,32]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [25,26,27,28,31,32]:
  - RF of loop [25:1,25:2,26:1,26:2,27:1,27:2,28:1,28:2,31:1,32:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [30]
* [29]
* [multiple([25,26,27,28,31,32],[[30],[29]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[29]] --> 1 
* [[30]] --> 2 
* [[multiple([25,26,27,28,31,32],[[30],[29]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [44,45,46] 
* CE 3 is refined into CE [47,48] 
* CE 4 is refined into CE [49,50,51] 
* CE 5 is refined into CE [52] 
* CE 6 is refined into CE [53,54] 
* CE 7 is refined into CE [55,56] 
* CE 8 is refined into CE [57] 


#### Refined cost equations start/2 
* CE 44: start(V1,V) = 0+ zip(W1,V,X1):1
     [V>=0,X1=2,W1=2,V1=2] 
* CE 45: start(V1,V) = 0+ zip(V1,W1,X1):2
     [V1>=0,X1=2,W1=2,V=2] 
* CE 46: start(V1,V) = 0+ zip(V1,W1,X1):3
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 47: start(V1,V) = 0+ repItems(W1,X1):1
     [X1=2,W1=2,V1=2] 
* CE 48: start(V1,V) = 0+ repItems(W1,X1):2
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 49: start(V1,V) = 0+ activate(W1,X1):1
     [X1=4,W1=1,V1=1] 
* CE 50: start(V1,V) = 0+ activate(V1,V1):2
     [V1>=0] 
* CE 51: start(V1,V) = 0+ activate(V1,W1):3
     [7*V1>=2*W1+3,5*V1+3>=2*W1,W1>=1,V1>=1] 
* CE 52: start(V1,V) = 1
     [V1>=0] 
* CE 53: start(V1,V) = 0+ oddNs(W1):1
     [W1=1] 
* CE 54: start(V1,V) = 0+ oddNs(W1):2
     [W1=4] 
* CE 55: start(V1,V) = 0+ take(W1,V,X1):1
     [V>=0,X1=2,W1=0,V1=0] 
* CE 56: start(V1,V) = 0+ take(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 57: start(V1,V) = 2
     [] 

### Cost equations --> "Loop" of start/2 
* CEs [44,45,46,47,48,49,50,51,52,53,54,55,56,57] --> Loop 33 

#### Loops of start/2 
* Loop 33: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [33]


### Merging Chains  start/2 into  External patterns of execution 
* [[33]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of oddNs(Out):
* Chain [17]: 1
  with precondition: [Out=1] 

* Chain [16]: 4
  with precondition: [Out=4] 


#### Cost of chains of repItems(V1,Out):
* Chain [19]: 1
  with precondition: [V1=2,Out=2] 

* Chain [18]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of chains of take(V1,V,Out):
* Chain [21]: 1
  with precondition: [V1=0,Out=2,V>=0] 

* Chain [20]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of chains of zip(V1,V,Out):
* Chain [24]: 1
  with precondition: [V1=2,Out=2,V>=0] 

* Chain [23]: 1
  with precondition: [V=2,Out=2,V1>=0] 

* Chain [22]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of loops [25,26,27,28,31,32] 

 * loop 25:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 26:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 27:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 28:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 31:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 32:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [25,26,27,28,31,32]:activate(V1,Out) -> [] 
2*it(25)+4*it(26)+6*it(28)+5*it([29])+2*it([30])+0
  Such that:it([30]) =< V1+1
it([29]) =< V1/2+1/2
aux(1) =< V1
aux(2) =< 5/2*V1+3/2
aux(3) =< 20/19*V1+1/19
it(28) =< aux(1)
it([29]) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(28) =< aux(2)
it([29]) =< aux(2)
it([30]) =< aux(2)
it(26) =< aux(3)
it(28) =< aux(3)
it([29]) =< aux(3)

#### Cost of chains of activate(V1,Out):
* Chain [30]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [29]: 5
  with precondition: [V1=1,Out=4] 

* Chain [multiple([25,26,27,28,31,32],[[30],[29]])]: 2*it(25)+4*it(26)+6*it(28)+5*it([29])+2*it([30])+0
  Such that:it([30]) =< V1+1
it([29]) =< V1/2+1/2
aux(1) =< V1
aux(2) =< 5/2*V1+3/2
aux(3) =< 20/19*V1+1/19
it(28) =< aux(1)
it([29]) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(28) =< aux(2)
it([29]) =< aux(2)
it([30]) =< aux(2)
it(26) =< aux(3)
it(28) =< aux(3)
it([29]) =< aux(3)

  with precondition: [V1>=1,Out>=1,5*V1+3>=2*Out,7*V1>=2*Out+3] 


#### Cost of chains of start(V1,V):
* Chain [33]: 2*s(1)+5*s(2)+6*s(6)+2*s(7)+4*s(8)+5
  Such that:s(3) =< V1
s(1) =< V1+1
s(2) =< V1/2+1/2
s(4) =< 5/2*V1+3/2
s(5) =< 20/19*V1+1/19
s(6) =< s(3)
s(2) =< s(3)
s(7) =< s(4)
s(8) =< s(4)
s(6) =< s(4)
s(2) =< s(4)
s(1) =< s(4)
s(8) =< s(5)
s(6) =< s(5)
s(2) =< s(5)

  with precondition: [] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [33] with precondition: [] 
    - Upper bound: nat(V1)*6+5+nat(V1+1)*2+nat(5/2*V1+3/2)*6+nat(V1/2+1/2)*5 
    - Complexity: n 

### Maximum cost of start(V1,V): nat(V1)*6+5+nat(V1+1)*2+nat(5/2*V1+3/2)*6+nat(V1/2+1/2)*5 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 61 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 64 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 205 ms.

