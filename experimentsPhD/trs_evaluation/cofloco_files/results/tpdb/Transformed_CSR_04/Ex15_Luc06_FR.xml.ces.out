
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [a/1]
1. recursive  : [f/2]
2. non_recursive  : [g/2]
3. recursive [non_tail] : [activate/2]
4. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into f/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f/2 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations f/2 
* CE 11: f(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 12: f(V,Out) = 1+ f(W,Out)
     [W=2,V=1] 

### Cost equations --> "Loop" of f/2 
* CEs [12] --> Loop 7 
* CEs [11] --> Loop 8 

#### Loops of f/2 
* Loop 7: f(V,Out)->  f(V',Out)
                  [V'=2,V=1] 
* Loop 8: f(V,Out) [V>=0,V+1=Out] 

### Ranking functions of CR f(V,Out) 

#### Partial ranking functions of CR f(V,Out) 


### Resulting Chains:f(V,Out) 
* [8]
* [7,8]


### Merging Chains  f/2 into  External patterns of execution 
* [[8,7]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations activate/2 
* CE 7 is refined into CE [13,14] 
* CE 8 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations activate/2 
* CE 13: activate(V,Out) = 1+ f(W,X):1
     [X=3,W=1,Out=3,V=2] 
* CE 14: activate(A,A) = 1+ f(B,A):2
     [A>=1,A=B+1] 
* CE 15: activate(V,Out) = 2
     [Out=0,V=0] 
* CE 16: activate(A,A) = 1
     [A>=0] 
* CE 17: activate(V,Out) = 2+ activate(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of activate/2 
* CEs [17] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [14,15,16] --> Loop 11 

#### Loops of activate/2 
* Loop 9: activate(V,Out)->  activate(V',Out')
                  [Out'>=0,V'>=0,Out'+1=Out,V'+1=V] 
* Loop 10: activate(V,Out) [Out=3,V=2] 
* Loop 11: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [9]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V


### Resulting Chains:activate(V,Out) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 
* [[11],[11,[9]]] --> 3 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [18,19] 
* CE 3 is refined into CE [20] 
* CE 4 is refined into CE [21,22,23] 


#### Refined cost equations start/1 
* CE 18: start(V) = 0+ f(W,X):1
     [X=3,W=1,V=1] 
* CE 19: start(V) = 0+ f(W,X):2
     [X>=1,X=W+1,X=V+1] 
* CE 20: start(V) = 1
     [] 
* CE 21: start(V) = 0+ activate(W,X):1
     [X=3,W=2,V=2] 
* CE 22: start(V) = 0+ activate(W,X):2
     [X>=4,X=W+1,X=V+1] 
* CE 23: start(V) = 0+ activate(V,V):3
     [V>=0] 

### Cost equations --> "Loop" of start/1 
* CEs [18,19,20,21,22,23] --> Loop 12 

#### Loops of start/1 
* Loop 12: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [12]


### Merging Chains  start/1 into  External patterns of execution 
* [[12]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of f(V,Out):
* Chain [8]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [7,8]: 2
  with precondition: [V=1,Out=3] 


#### Cost of loops [9] 

 * loop 9:activate(V,Out) -> [activate(V',Out')] 
2
#### Cost of phase [9]:activate(V,Out) -> [activate(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of phase [9]:activate(V,Out) -> [activate(V',Out')] 
2*it(9)+0
  Such that:it(9) =< V
it(9) =< V-V'

#### Cost of chains of activate(V,Out):
* Chain [[9],11]: 2*it(9)+2
  Such that:it(9) =< Out

  with precondition: [V=Out,V>=1] 

* Chain [[9],10]: 2*it(9)+3
  Such that:it(9) =< Out

  with precondition: [V+1=Out,V>=3] 

* Chain [11]: 2
  with precondition: [V=Out,V>=0] 

* Chain [10]: 3
  with precondition: [V=2,Out=3] 


#### Cost of chains of start(V):
* Chain [12]: 2*s(2)+2*s(3)+3
  Such that:s(3) =< V
s(2) =< V+1

  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: nat(V)*2+3+nat(V+1)*2 
    - Complexity: n 

### Maximum cost of start(V): nat(V)*2+3+nat(V+1)*2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 16 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 53 ms.

