
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [and/3]
1. recursive  : [plus/3]
2. non_recursive  : [proper/2]
3. recursive  : [s/2]
4. recursive  : [top/2]
5. recursive  : [x/3]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into and/3
1. SCC is partially evaluated into plus/3
2. SCC is partially evaluated into proper/2
3. SCC is partially evaluated into s/2
4. SCC is partially evaluated into top/2
5. SCC is partially evaluated into x/3
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations and/3 
* CE 16 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 15 is refined into CE [29] 


#### Refined cost equations and/3 
* CE 27: and(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 28: and(V,V1,Out) = 1+ and(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 29: and(V,V1,Out) = 1+ and(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of and/3 
* CEs [28] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of and/3 
* Loop 20: and(V,V1,Out)->  and(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 21: and(V,V1,Out)->  and(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 22: and(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR and(V,V1,Out) 
* RF of phase [20,21]: [V]

#### Partial ranking functions of CR and(V,V1,Out) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1,21:1]:
    V
  - RF of loop [21:1]:
    V1


### Resulting Chains:and(V,V1,Out) 
* [[20,21],22]
* [22]


### Merging Chains  and/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[20,21]]] --> 2 


### Specialization of cost equations plus/3 
* CE 26 is refined into CE [30] 
* CE 25 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 24 is refined into CE [33] 


#### Refined cost equations plus/3 
* CE 30: plus(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 31: plus(V,V1,Out) = 1+ plus(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 32: plus(V,V1,Out) = 1+ plus(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 33: plus(V,V1,Out) = 1+ plus(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of plus/3 
* CEs [31] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [30] --> Loop 26 

#### Loops of plus/3 
* Loop 23: plus(V,V1,Out)->  plus(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 24: plus(V,V1,Out)->  plus(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 25: plus(V,V1,Out)->  plus(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 26: plus(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR plus(V,V1,Out) 
* RF of phase [23,24,25]: [V+V1]

#### Partial ranking functions of CR plus(V,V1,Out) 
* Partial RF of phase [23,24,25]:
  - RF of loop [23:1,25:1]:
    V1
  - RF of loop [24:1,25:1]:
    V


### Resulting Chains:plus(V,V1,Out) 
* [[23,24,25],26]
* [26]


### Merging Chains  plus/3 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[23,24,25]]] --> 2 


### Specialization of cost equations proper/2 
* CE 13 is refined into CE [34] 
* CE 11 is refined into CE [35] 
* CE 12 is refined into CE [36] 


#### Refined cost equations proper/2 
* CE 34: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 35: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 36: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [34] --> Loop 27 
* CEs [35] --> Loop 28 
* CEs [36] --> Loop 29 

#### Loops of proper/2 
* Loop 27: proper(V,Out) [V>=0,Out=0] 
* Loop 28: proper(V,Out) [Out=2,V=1] 
* Loop 29: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [29]
* [28]
* [27]


### Merging Chains  proper/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 


### Specialization of cost equations s/2 
* CE 22 is refined into CE [37] 
* CE 21 is refined into CE [38] 


#### Refined cost equations s/2 
* CE 37: s(V,Out) = 0
     [V>=0,Out=0] 
* CE 38: s(V,Out) = 1+ s(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of s/2 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 

#### Loops of s/2 
* Loop 30: s(V,Out)->  s(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 31: s(V,Out) [V>=0,Out=0] 

### Ranking functions of CR s(V,Out) 
* RF of phase [30]: [V]

#### Partial ranking functions of CR s(V,Out) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V


### Resulting Chains:s(V,Out) 
* [[30],31]
* [31]


### Merging Chains  s/2 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 


### Specialization of cost equations top/2 
* CE 10 is refined into CE [39] 
* CE 8 is refined into CE [40] 
* CE 9 is refined into CE [41,42,43] 


#### Refined cost equations top/2 
* CE 39: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 40: top(V,Out) = 1+ top(V,Out)
     [V>=1] 
* CE 41: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 42: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 43: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [43] --> Loop 32 
* CEs [42] --> Loop 33 
* CEs [40,41] --> Loop 34 
* CEs [39] --> Loop 35 

#### Loops of top/2 
* Loop 32: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 33: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 34: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 35: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[33,34]]...
* [[33,34],35]
* [[33,34],32,35]
* [35]
* [32,35]


### Merging Chains  top/2 into  External patterns of execution 
* [[35,32],[35],[35,32,[33,34]],[35,[33,34]]] --> 1 
* [[[33,34]]] --> 2 


### Specialization of cost equations x/3 
* CE 20 is refined into CE [44] 
* CE 19 is refined into CE [45] 
* CE 17 is refined into CE [46] 
* CE 18 is refined into CE [47] 


#### Refined cost equations x/3 
* CE 44: x(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 45: x(V,V1,Out) = 1+ x(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 46: x(V,V1,Out) = 1+ x(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 47: x(V,V1,Out) = 1+ x(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of x/3 
* CEs [45] --> Loop 36 
* CEs [46] --> Loop 37 
* CEs [47] --> Loop 38 
* CEs [44] --> Loop 39 

#### Loops of x/3 
* Loop 36: x(V,V1,Out)->  x(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 37: x(V,V1,Out)->  x(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 38: x(V,V1,Out)->  x(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 39: x(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR x(V,V1,Out) 
* RF of phase [36,37,38]: [V+V1]

#### Partial ranking functions of CR x(V,V1,Out) 
* Partial RF of phase [36,37,38]:
  - RF of loop [36:1,38:1]:
    V1
  - RF of loop [37:1,38:1]:
    V


### Resulting Chains:x(V,V1,Out) 
* [[36,37,38],39]
* [39]


### Merging Chains  x/3 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[36,37,38]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [48,49] 
* CE 3 is refined into CE [50,51,52] 
* CE 4 is refined into CE [53,54] 
* CE 5 is refined into CE [55,56] 
* CE 6 is refined into CE [57,58] 
* CE 7 is refined into CE [59,60] 


#### Refined cost equations start/2 
* CE 48: start(V,V1) = 0+ top(V,W1):1
     [V>=0,W1=0] 
* CE 49: start(V,V1) = 0+ top(V,W1):2
     [V>=1] 
* CE 50: start(V,V1) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 51: start(V,V1) = 0+ proper(W1,X1):2
     [X1=2,W1=1,V=1] 
* CE 52: start(V,V1) = 0+ proper(V,W1):3
     [V>=0,W1=0] 
* CE 53: start(V,V1) = 0+ and(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 54: start(V,V1) = 0+ and(V,V1,W1):2
     [V>=W1,W1>=1,V1>=0] 
* CE 55: start(V,V1) = 0+ x(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 56: start(V,V1) = 0+ x(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 
* CE 57: start(V,V1) = 0+ s(V,W1):1
     [V>=0,W1=0] 
* CE 58: start(V,V1) = 0+ s(V,W1):2
     [V>=W1,W1>=1] 
* CE 59: start(V,V1) = 0+ plus(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 60: start(V,V1) = 0+ plus(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [51] --> Loop 40 
* CEs [48,50,52,53,54,55,56,57,58,59,60] --> Loop 41 
* CEs [49] --> Loop 42 

#### Loops of start/2 
* Loop 40: start(V,V1) [V=1] 
* Loop 41: start(V,V1) [V>=0] 
* Loop 42: start(V,V1) [V>=1] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [42]...
* [41]
* [40]


### Merging Chains  start/2 into  External patterns of execution 
* [[40],[41]] --> 1 
* [[42]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [20,21] 

 * loop 20:and(V,V1,Out) -> [and(V',V1',Out')] 
1
 * loop 21:and(V,V1,Out) -> [and(V',V1',Out')] 
1
#### Cost of phase [20,21]:and(V,V1,Out) -> [and(V',V1',Out')] 
1*it(20)+1*it(21)+0
  Such that:it(21) =< V1
it(21) =< V1-V1'
aux(1) =< V
aux(2) =< V-V'
it(20) =< aux(1)
it(21) =< aux(1)
it(20) =< aux(2)
it(21) =< aux(2)

#### Cost of chains of and(V,V1,Out):
* Chain [[20,21],22]: 1*it(20)+1*it(21)+0
  Such that:aux(1) =< V
it(21) =< V1
aux(2) =< Out
it(20) =< aux(1)
it(21) =< aux(1)
it(20) =< aux(2)
it(21) =< aux(2)

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [22]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [23,24,25] 

 * loop 23:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
 * loop 24:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
 * loop 25:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1
#### Cost of phase [23,24,25]:plus(V,V1,Out) -> [plus(V',V1',Out')] 
1*it(23)+1*it(24)+1*it(25)+0
  Such that:aux(3) =< V
aux(4) =< V+V1
aux(5) =< V+V1-V'-V1'
aux(6) =< V-V'
aux(7) =< V1
aux(8) =< V1-V1'
it(24) =< aux(3)
it(25) =< aux(3)
it(23) =< aux(4)
it(24) =< aux(4)
it(25) =< aux(4)
it(23) =< aux(5)
it(24) =< aux(5)
it(25) =< aux(5)
it(24) =< aux(6)
it(25) =< aux(6)
it(23) =< aux(7)
it(25) =< aux(7)
it(23) =< aux(8)
it(25) =< aux(8)

#### Cost of chains of plus(V,V1,Out):
* Chain [[23,24,25],26]: 1*it(23)+1*it(24)+1*it(25)+0
  Such that:aux(9) =< V
aux(10) =< V+V1
aux(11) =< V1
it(24) =< aux(9)
it(25) =< aux(9)
it(23) =< aux(10)
it(24) =< aux(10)
it(25) =< aux(10)
it(23) =< aux(11)
it(25) =< aux(11)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [26]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of proper(V,Out):
* Chain [29]: 1
  with precondition: [V=0,Out=1] 

* Chain [28]: 1
  with precondition: [V=1,Out=2] 

* Chain [27]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [30] 

 * loop 30:s(V,Out) -> [s(V',Out')] 
1
#### Cost of phase [30]:s(V,Out) -> [s(V',Out')] 
1*it(30)+0
  Such that:it(30) =< V
it(30) =< V-V'

#### Cost of chains of s(V,Out):
* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [31]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [33,34] 

 * loop 33:top(V,Out) -> [top(V',Out')] 
2
 * loop 34:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [33,34]:top(V,Out) -> [top(V',Out')] 
4*it(33)+0
#### Cost of phase [33,34]:top(V,Out) -> [top(V',Out')] 
4*it(33)+0
#### Cost of phase [33,34]:top(V,Out) -> [top(V',Out')] 
4*it(33)+0
#### Cost of chains of top(V,Out):
* Chain [[33,34]]...: 4*it(33)+0
  with precondition: [V>=1] 

* Chain [[33,34],35]: 4*it(33)+0
  with precondition: [Out=0,V>=1] 

* Chain [[33,34],32,35]: 4*it(33)+1
  with precondition: [Out=0,V>=1] 

* Chain [35]: 0
  with precondition: [Out=0,V>=0] 

* Chain [32,35]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of loops [36,37,38] 

 * loop 36:x(V,V1,Out) -> [x(V',V1',Out')] 
1
 * loop 37:x(V,V1,Out) -> [x(V',V1',Out')] 
1
 * loop 38:x(V,V1,Out) -> [x(V',V1',Out')] 
1
#### Cost of phase [36,37,38]:x(V,V1,Out) -> [x(V',V1',Out')] 
1*it(36)+1*it(37)+1*it(38)+0
  Such that:aux(13) =< V
aux(14) =< V+V1
aux(15) =< V+V1-V'-V1'
aux(16) =< V-V'
aux(17) =< V1
aux(18) =< V1-V1'
it(37) =< aux(13)
it(38) =< aux(13)
it(36) =< aux(14)
it(37) =< aux(14)
it(38) =< aux(14)
it(36) =< aux(15)
it(37) =< aux(15)
it(38) =< aux(15)
it(37) =< aux(16)
it(38) =< aux(16)
it(36) =< aux(17)
it(38) =< aux(17)
it(36) =< aux(18)
it(38) =< aux(18)

#### Cost of chains of x(V,V1,Out):
* Chain [[36,37,38],39]: 1*it(36)+1*it(37)+1*it(38)+0
  Such that:aux(19) =< V
aux(20) =< V+V1
aux(21) =< V1
it(37) =< aux(19)
it(38) =< aux(19)
it(36) =< aux(20)
it(37) =< aux(20)
it(38) =< aux(20)
it(36) =< aux(21)
it(38) =< aux(21)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [39]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [42]...: 4*s(3)+0
  with precondition: [V>=1] 

* Chain [41]: 1*s(4)+1*s(6)+2*s(8)+2*s(12)+2*s(13)+2*s(14)+1
  Such that:aux(23) =< V
aux(24) =< V+V1
aux(25) =< V1
s(8) =< aux(23)
s(6) =< aux(25)
s(12) =< aux(23)
s(13) =< aux(23)
s(14) =< aux(24)
s(12) =< aux(24)
s(13) =< aux(24)
s(14) =< aux(25)
s(13) =< aux(25)
s(6) =< aux(23)

  with precondition: [V>=0] 

* Chain [40]: 1
  with precondition: [V=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [42]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [41] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 67 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 73 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 31 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 241 ms.

