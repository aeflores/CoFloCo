
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/3]
1. non_recursive  : [fun1/1]
2. recursive [non_tail] : [mark/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/3
1. SCC is partially evaluated into fun1/1
2. SCC is partially evaluated into mark/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/3 
* CE 6 is refined into CE [12] 
* CE 5 is refined into CE [13] 


#### Refined cost equations fun/3 
* CE 12: fun(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 13: fun(A,A,B) = 1+ fun(C,D,B)
     [A>=0,D=1,C=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of fun/3 
* Loop 9: fun(A,A,B)->  fun(A',B',B)
                  [A>=0,B'=1,A'=0] 
* Loop 10: fun(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 

### Ranking functions of CR fun(V1,V,Out) 

#### Partial ranking functions of CR fun(V1,V,Out) 


### Resulting Chains:fun(V1,V,Out) 
* [10]
* [9,10]


### Merging Chains  fun/3 into  External patterns of execution 
* [[10,9]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations fun1/1 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations fun1/1 
* CE 14: fun1(Out) = 1
     [Out=1] 
* CE 15: fun1(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of fun1/1 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of fun1/1 
* Loop 11: fun1(Out) [Out=1] 
* Loop 12: fun1(Out) [Out=0] 

### Ranking functions of CR fun1(Out) 

#### Partial ranking functions of CR fun1(Out) 


### Resulting Chains:fun1(Out) 
* [12]
* [11]


### Merging Chains  fun1/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations mark/2 
* CE 10 is refined into CE [16,17] 
* CE 11 is refined into CE [18] 
* CE 9 is refined into CE [19,20] 


#### Refined cost equations mark/2 
* CE 16: mark(V1,Out) = 1+ fun1(W1):1
     [W1=0,Out=0,V1=1] 
* CE 17: mark(V1,Out) = 1+ fun1(W1):2
     [W1=1,Out=1,V1=1] 
* CE 18: mark(V1,Out) = 1
     [Out=0,V1=0] 
* CE 19: mark(V1,Out) = 1+ mark(W1,X1)+ fun(X1,X1,Y1):1
     [W1>=0,X1>=0,X1+W1+1=V1,Y1=2,Out=2] 
* CE 20: mark(V1,Out) = 1+ mark(W1,X1)+ fun(X1,Y1,Out):2
     [Out>=X1+1,W1>=0,X1>=0,Out+W1=V1+X1,Out=X1+Y1+1] 

### Cost equations --> "Loop" of mark/2 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of mark/2 
* Loop 13: mark(V1,Out)->  mark(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 14: mark(V1,Out)->  mark(V1',Out')
                  [V1>=V1'+1,V1'>=0,V1'+Out'+1=V1,Out=2] 
* Loop 15: mark(V1,Out) [Out=1,V1=1] 
* Loop 16: mark(V1,Out) [Out=0,V1=1] 
* Loop 17: mark(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR mark(V1,Out) 
* RF of phase [13,14]: [V1]

#### Partial ranking functions of CR mark(V1,Out) 
* Partial RF of phase [13,14]:
  - RF of loop [13:1,14:1]:
    V1


### Resulting Chains:mark(V1,Out) 
* [[13,14],17]
* [[13,14],16]
* [[13,14],15]
* [17]
* [16]
* [15]


### Merging Chains  mark/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15],[15,[13,14]],[16,[13,14]],[17,[13,14]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21,22] 
* CE 3 is refined into CE [23,24] 
* CE 4 is refined into CE [25,26,27] 


#### Refined cost equations start/2 
* CE 21: start(A,A) = 0+ fun(A,A,B):1
     [A>=0,B=2] 
* CE 22: start(V1,V) = 0+ fun(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 23: start(V1,V) = 0+ fun1(W1):1
     [W1=0] 
* CE 24: start(V1,V) = 0+ fun1(W1):2
     [W1=1] 
* CE 25: start(V1,V) = 0+ mark(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 26: start(V1,V) = 0+ mark(W1,X1):2
     [X1=0,W1=1,V1=1] 
* CE 27: start(V1,V) = 0+ mark(V1,W1):3
     [V1+1>=W1,W1>=1,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [21,22,23,24,25,26,27] --> Loop 18 

#### Loops of start/2 
* Loop 18: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of fun(V1,V,Out):
* Chain [10]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 

* Chain [9,10]: 2
  with precondition: [Out=2,V1=V,V1>=0] 


#### Cost of chains of fun1(Out):
* Chain [12]: 1
  with precondition: [Out=0] 

* Chain [11]: 1
  with precondition: [Out=1] 


#### Cost of loops [13,14] 

 * loop 13:mark(V1,Out) -> [mark(V1',Out')] 
2
 * loop 14:mark(V1,Out) -> [mark(V1',Out')] 
3
#### Cost of phase [13,14]:mark(V1,Out) -> [mark(V1',Out')] 
5*it(13)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(13) =< aux(1)
it(13) =< aux(2)

#### Cost of phase [13,14]:mark(V1,Out) -> [mark(V1',Out')] 
5*it(13)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(13) =< aux(1)
it(13) =< aux(2)

#### Cost of phase [13,14]:mark(V1,Out) -> [mark(V1',Out')] 
5*it(13)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(13) =< aux(1)
it(13) =< aux(2)

#### Cost of chains of mark(V1,Out):
* Chain [[13,14],17]: 5*it(13)+1
  Such that:aux(3) =< V1
it(13) =< aux(3)

  with precondition: [V1>=1,Out>=1,V1+1>=Out] 

* Chain [[13,14],16]: 5*it(13)+2
  Such that:aux(4) =< V1
it(13) =< aux(4)

  with precondition: [V1>=2,Out>=1,V1>=Out] 

* Chain [[13,14],15]: 5*it(13)+2
  Such that:aux(5) =< V1
it(13) =< aux(5)

  with precondition: [Out>=2,V1>=Out] 

* Chain [17]: 1
  with precondition: [V1=0,Out=0] 

* Chain [16]: 2
  with precondition: [V1=1,Out=0] 

* Chain [15]: 2
  with precondition: [V1=1,Out=1] 


#### Cost of chains of start(V1,V):
* Chain [18]: 15*s(8)+2
  Such that:s(7) =< V1
s(8) =< s(7)

  with precondition: [] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: nat(V1)*15+2 
    - Complexity: n 

### Maximum cost of start(V1,V): nat(V1)*15+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 28 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 74 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 75 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 253 ms.

