
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [c/2]
1. recursive  : [d/2]
2. recursive  : [f/2]
3. recursive  : [g/2]
4. recursive  : [h/2]
5. recursive  : [top/2]
6. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into c/2
1. SCC is partially evaluated into d/2
2. SCC is partially evaluated into f/2
3. SCC is partially evaluated into g/2
4. SCC is partially evaluated into h/2
5. SCC is partially evaluated into top/2
6. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations c/2 
* CE 15 is refined into CE [20] 
* CE 14 is refined into CE [21] 


#### Refined cost equations c/2 
* CE 20: c(V,Out) = 0
     [V>=0,Out=0] 
* CE 21: c(V,Out) = 1+ c(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of c/2 
* CEs [21] --> Loop 14 
* CEs [20] --> Loop 15 

#### Loops of c/2 
* Loop 14: c(V,Out)->  c(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 15: c(V,Out) [V>=0,Out=0] 

### Ranking functions of CR c(V,Out) 
* RF of phase [14]: [V]

#### Partial ranking functions of CR c(V,Out) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V


### Resulting Chains:c(V,Out) 
* [[14],15]
* [15]


### Merging Chains  c/2 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[14]]] --> 2 


### Specialization of cost equations d/2 
* CE 17 is refined into CE [22] 
* CE 16 is refined into CE [23] 


#### Refined cost equations d/2 
* CE 22: d(V,Out) = 0
     [V>=0,Out=0] 
* CE 23: d(V,Out) = 1+ d(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of d/2 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 

#### Loops of d/2 
* Loop 16: d(V,Out)->  d(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 17: d(V,Out) [V>=0,Out=0] 

### Ranking functions of CR d(V,Out) 
* RF of phase [16]: [V]

#### Partial ranking functions of CR d(V,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V


### Resulting Chains:d(V,Out) 
* [[16],17]
* [17]


### Merging Chains  d/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations f/2 
* CE 13 is refined into CE [24] 
* CE 12 is refined into CE [25] 


#### Refined cost equations f/2 
* CE 24: f(V,Out) = 0
     [V>=0,Out=0] 
* CE 25: f(V,Out) = 1+ f(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of f/2 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of f/2 
* Loop 18: f(V,Out)->  f(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 19: f(V,Out) [V>=0,Out=0] 

### Ranking functions of CR f(V,Out) 
* RF of phase [18]: [V]

#### Partial ranking functions of CR f(V,Out) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V


### Resulting Chains:f(V,Out) 
* [[18],19]
* [19]


### Merging Chains  f/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[18]]] --> 2 


### Specialization of cost equations g/2 
* CE 9 is refined into CE [26] 
* CE 8 is refined into CE [27] 


#### Refined cost equations g/2 
* CE 26: g(V,Out) = 0
     [V>=0,Out=0] 
* CE 27: g(V,Out) = 1+ g(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of g/2 
* CEs [27] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of g/2 
* Loop 20: g(V,Out)->  g(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 21: g(V,Out) [V>=0,Out=0] 

### Ranking functions of CR g(V,Out) 
* RF of phase [20]: [V]

#### Partial ranking functions of CR g(V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V


### Resulting Chains:g(V,Out) 
* [[20],21]
* [21]


### Merging Chains  g/2 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[20]]] --> 2 


### Specialization of cost equations h/2 
* CE 19 is refined into CE [28] 
* CE 18 is refined into CE [29] 


#### Refined cost equations h/2 
* CE 28: h(V,Out) = 0
     [V>=0,Out=0] 
* CE 29: h(V,Out) = 1+ h(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of h/2 
* CEs [29] --> Loop 22 
* CEs [28] --> Loop 23 

#### Loops of h/2 
* Loop 22: h(V,Out)->  h(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 23: h(V,Out) [V>=0,Out=0] 

### Ranking functions of CR h(V,Out) 
* RF of phase [22]: [V]

#### Partial ranking functions of CR h(V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V


### Resulting Chains:h(V,Out) 
* [[22],23]
* [23]


### Merging Chains  h/2 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[22]]] --> 2 


### Specialization of cost equations top/2 
* CE 11 is refined into CE [30] 
* CE 10 is refined into CE [31] 


#### Refined cost equations top/2 
* CE 30: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 31: top(V,Out) = 1+ top(V,Out)
     [V>=1] 

### Cost equations --> "Loop" of top/2 
* CEs [31] --> Loop 24 
* CEs [30] --> Loop 25 

#### Loops of top/2 
* Loop 24: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 25: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[24]]...
* [[24],25]
* [25]


### Merging Chains  top/2 into  External patterns of execution 
* [[25],[25,[24]]] --> 1 
* [[[24]]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [32,33] 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36,37] 
* CE 5 is refined into CE [38,39] 
* CE 6 is refined into CE [40,41] 
* CE 7 is refined into CE [42,43] 


#### Refined cost equations start/1 
* CE 32: start(V) = 0+ g(V,W):1
     [V>=0,W=0] 
* CE 33: start(V) = 0+ g(V,W):2
     [V>=W,W>=1] 
* CE 34: start(V) = 0+ top(V,W):1
     [V>=0,W=0] 
* CE 35: start(V) = 0+ top(V,W):2
     [V>=1] 
* CE 36: start(V) = 0+ f(V,W):1
     [V>=0,W=0] 
* CE 37: start(V) = 0+ f(V,W):2
     [V>=W,W>=1] 
* CE 38: start(V) = 0+ c(V,W):1
     [V>=0,W=0] 
* CE 39: start(V) = 0+ c(V,W):2
     [V>=W,W>=1] 
* CE 40: start(V) = 0+ d(V,W):1
     [V>=0,W=0] 
* CE 41: start(V) = 0+ d(V,W):2
     [V>=W,W>=1] 
* CE 42: start(V) = 0+ h(V,W):1
     [V>=0,W=0] 
* CE 43: start(V) = 0+ h(V,W):2
     [V>=W,W>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [32,33,34,36,37,38,39,40,41,42,43] --> Loop 26 
* CEs [35] --> Loop 27 

#### Loops of start/1 
* Loop 26: start(V) [V>=0] 
* Loop 27: start(V) [V>=1] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [27]...
* [26]


### Merging Chains  start/1 into  External patterns of execution 
* [[26]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:c(V,Out) -> [c(V',Out')] 
1
#### Cost of phase [14]:c(V,Out) -> [c(V',Out')] 
1*it(14)+0
  Such that:it(14) =< V
it(14) =< V-V'

#### Cost of chains of c(V,Out):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [16] 

 * loop 16:d(V,Out) -> [d(V',Out')] 
1
#### Cost of phase [16]:d(V,Out) -> [d(V',Out')] 
1*it(16)+0
  Such that:it(16) =< V
it(16) =< V-V'

#### Cost of chains of d(V,Out):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [17]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [18] 

 * loop 18:f(V,Out) -> [f(V',Out')] 
1
#### Cost of phase [18]:f(V,Out) -> [f(V',Out')] 
1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'

#### Cost of chains of f(V,Out):
* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [20] 

 * loop 20:g(V,Out) -> [g(V',Out')] 
1
#### Cost of phase [20]:g(V,Out) -> [g(V',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of chains of g(V,Out):
* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [21]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [22] 

 * loop 22:h(V,Out) -> [h(V',Out')] 
1
#### Cost of phase [22]:h(V,Out) -> [h(V',Out')] 
1*it(22)+0
  Such that:it(22) =< V
it(22) =< V-V'

#### Cost of chains of h(V,Out):
* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [23]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [24] 

 * loop 24:top(V,Out) -> [top(V',Out')] 
1
#### Cost of phase [24]:top(V,Out) -> [top(V',Out')] 
1*it(24)+0
#### Cost of phase [24]:top(V,Out) -> [top(V',Out')] 
1*it(24)+0
#### Cost of chains of top(V,Out):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [V>=1] 

* Chain [[24],25]: 1*it(24)+0
  with precondition: [Out=0,V>=1] 

* Chain [25]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V):
* Chain [27]...: 1*s(2)+0
  with precondition: [V>=1] 

* Chain [26]: 5*s(3)+1*s(4)+0
  Such that:aux(2) =< V
s(3) =< aux(2)

  with precondition: [V>=0] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [27]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 33 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 116 ms.

