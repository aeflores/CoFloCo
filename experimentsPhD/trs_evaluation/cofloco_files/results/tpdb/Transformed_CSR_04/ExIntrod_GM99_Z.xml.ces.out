
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [filter/3]
2. non_recursive  : [from/2]
3. non_recursive  : [activate/2]
4. non_recursive  : [if/4]
5. non_recursive  : [primes/1]
6. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into from/2
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into if/4
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations from/2 
* CE 14: from(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 15: from(V,Out) = 2
     [Out>=3,Out=2*V+3] 

### Cost equations --> "Loop" of from/2 
* CEs [14] --> Loop 8 
* CEs [15] --> Loop 9 

#### Loops of from/2 
* Loop 8: from(V,Out) [V>=0,V+1=Out] 
* Loop 9: from(V,Out) [V>=0,2*V+3=Out] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 


### Resulting Chains:from(V,Out) 
* [9]
* [8]


### Merging Chains  from/2 into  External patterns of execution 
* [[8]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations activate/2 
* CE 11 is refined into CE [16,17] 
* CE 12 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations activate/2 
* CE 16: activate(A,A) = 1+ from(B,A):1
     [A>=1,A=B+1] 
* CE 17: activate(V,Out) = 1+ from(W,Out):2
     [Out>=3,Out=2*W+3,Out=2*V+1] 
* CE 18: activate(A,A) = 1
     [A>=0] 
* CE 19: activate(A,A) = 2
     [A>=1] 

### Cost equations --> "Loop" of activate/2 
* CEs [17] --> Loop 10 
* CEs [16,18,19] --> Loop 11 

#### Loops of activate/2 
* Loop 10: activate(V,Out) [V>=1,2*V+1=Out] 
* Loop 11: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [11]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations if/4 
* CE 10 is refined into CE [20,21] 
* CE 9 is refined into CE [22,23] 


#### Refined cost equations if/4 
* CE 20: if(A,B,C,B) = 1+ activate(B,B):1
     [B>=0,C>=0,A=1] 
* CE 21: if(V,V1,V2,Out) = 1+ activate(W2,Out):2
     [Out>=3,V2>=0,Out=2*W2+1,Out=2*V1+1,V=1] 
* CE 22: if(A,B,C,C) = 1+ activate(C,C):1
     [C>=0,B>=0,A=0] 
* CE 23: if(V,V1,V2,Out) = 1+ activate(W2,Out):2
     [Out>=3,V1>=0,Out=2*W2+1,Out=2*V2+1,V=0] 

### Cost equations --> "Loop" of if/4 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 

#### Loops of if/4 
* Loop 12: if(V,V1,V2,Out) [V2>=0,V1>=1,2*V1+1=Out,V=1] 
* Loop 13: if(A,B,C,B) [C>=0,B>=0,A=1] 
* Loop 14: if(V,V1,V2,Out) [V2>=1,V1>=0,2*V2+1=Out,V=0] 
* Loop 15: if(A,B,C,C) [C>=0,B>=0,A=0] 

### Ranking functions of CR if(V,V1,V2,Out) 

#### Partial ranking functions of CR if(V,V1,V2,Out) 


### Resulting Chains:if(V,V1,V2,Out) 
* [15]
* [14]
* [13]
* [12]


### Merging Chains  if/4 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 
* [[12]] --> 4 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [24,25] 
* CE 3 is refined into CE [26,27] 
* CE 4 is refined into CE [28] 
* CE 5 is refined into CE [29,30,31,32] 
* CE 6 is refined into CE [33,34] 


#### Refined cost equations start/3 
* CE 24: start(V,V1,V2) = 1+ from(W2,X2):1
     [X2=3,W2=2] 
* CE 25: start(V,V1,V2) = 1+ from(W2,X2):2
     [X2=7,W2=2] 
* CE 26: start(V,V1,V2) = 0+ from(W2,X2):1
     [X2>=1,X2=W2+1,X2=V+1] 
* CE 27: start(V,V1,V2) = 0+ from(W2,X2):2
     [X2>=3,X2=2*W2+3,X2=2*V+3] 
* CE 28: start(V,V1,V2) = 1
     [V1>=0,V>=0] 
* CE 29: start(V,V1,V2) = 0+ if(W2,V1,V2,V2):1
     [V2>=0,V1>=0,W2=0,V=0] 
* CE 30: start(V,V1,V2) = 0+ if(W2,V1,X2,Y2):2
     [Y2>=3,V1>=0,Y2=2*X2+1,Y2=2*V2+1,W2=0,V=0] 
* CE 31: start(V,V1,V2) = 0+ if(W2,V1,V2,V1):3
     [V1>=0,V2>=0,W2=1,V=1] 
* CE 32: start(V,V1,V2) = 0+ if(W2,X2,V2,Y2):4
     [Y2>=3,V2>=0,Y2=2*X2+1,Y2=2*V1+1,W2=1,V=1] 
* CE 33: start(V,V1,V2) = 0+ activate(V,V):1
     [V>=0] 
* CE 34: start(V,V1,V2) = 0+ activate(W2,X2):2
     [X2>=3,X2=2*W2+1,X2=2*V+1] 

### Cost equations --> "Loop" of start/3 
* CEs [24,25,26,27,28,29,30,31,32,33,34] --> Loop 16 

#### Loops of start/3 
* Loop 16: start(V,V1,V2) [] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [16]


### Merging Chains  start/3 into  External patterns of execution 
* [[16]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V,Out):
* Chain [9]: 2
  with precondition: [2*V+3=Out,V>=0] 

* Chain [8]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of chains of activate(V,Out):
* Chain [11]: 2
  with precondition: [V=Out,V>=0] 

* Chain [10]: 3
  with precondition: [2*V+1=Out,V>=1] 


#### Cost of chains of if(V,V1,V2,Out):
* Chain [15]: 3
  with precondition: [V=0,V2=Out,V1>=0,V2>=0] 

* Chain [14]: 4
  with precondition: [V=0,2*V2+1=Out,V1>=0,V2>=1] 

* Chain [13]: 3
  with precondition: [V=1,V1=Out,V1>=0,V2>=0] 

* Chain [12]: 4
  with precondition: [V=1,2*V1+1=Out,V1>=1,V2>=0] 


#### Cost of chains of start(V,V1,V2):
* Chain [16]: 4
  with precondition: [] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: 4 
    - Complexity: constant 

### Maximum cost of start(V,V1,V2): 4 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 26 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 67 ms.

