
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
1. non_recursive  : [inf/2]
2. non_recursive  : [s/2]
3. non_recursive  : [take/3]
4. recursive [non_tail,multiple] : [activate/2,length/2]
5. recursive  : [eq/3]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into inf/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into activate/2
5. SCC is partially evaluated into eq/3
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations inf/2 
* CE 19 is refined into CE [21] 
* CE 20 is refined into CE [22] 


#### Refined cost equations inf/2 
* CE 21: inf(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 22: inf(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of inf/2 
* CEs [21] --> Loop 12 
* CEs [22] --> Loop 13 

#### Loops of inf/2 
* Loop 12: inf(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 13: inf(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR inf(V1,Out) 

#### Partial ranking functions of CR inf(V1,Out) 


### Resulting Chains:inf(V1,Out) 
* [13]
* [12]


### Merging Chains  inf/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations activate/2 
* CE 11 is refined into CE [23] 
* CE 12 is refined into CE [24] 
* CE 15 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 9 is refined into CE [27] 
* CE 8 is refined into CE [28] 
* CE 10 is refined into CE [29] 
* CE 13 is refined into CE [30,31] 


#### Refined cost equations activate/2 
* CE 23: activate(V1,Out) = 2
     [Out=0,V1=0] 
* CE 24: activate(A,A) = 2
     [A>=1] 
* CE 25: activate(A,A) = 1
     [A>=0] 
* CE 26: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 27: activate(V1,Out) = 3+ activate(W1,X1)+ activate(Y1,Z1)
     [X1>=Y1+1,Z1+1>=0,Y1>=0,W1>=0,Z1+2=Out,W1+1=V1] 
* CE 28: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 29: activate(V1,Out) = 3+ activate(W1,X1)
     [W1>=0,W1+1=V1,X1=1,Out=0] 
* CE 30: activate(V1,Out) = 1+ activate(W1,X1)+ inf(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 31: activate(V1,Out) = 1+ activate(W1,X1)+ inf(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 

### Cost equations --> "Loop" of activate/2 
* CEs [28,30] --> Loop 14 
* CEs [31] --> Loop 15 
* CEs [29] --> Loop 16 
* CEs [26] --> Loop 17 
* CEs [27] --> Loop 18 
* CEs [23,24,25] --> Loop 19 

#### Loops of activate/2 
* Loop 14: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 15: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 16: activate(V1,Out)->  activate(V1',Out')
                  [V1>=1,V1=V1'+1,Out'=1,Out=0] 
* Loop 17: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 18: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out'>=V1'2+1,V1'2>=0,Out>=1,V1>=1,Out=Out'2+2,V1=V1'+1] 
* Loop 19: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [14,15,16,17,18]:
  - RF of loop [14:1,15:1,16:1,17:1,17:2,18:1]:
    V1 depends on loops [18:2] 


### Resulting Chains:activate(V1,Out) 
* [multiple([14,15,16,17,18],[[],[19]])]...
* [19]


### Merging Chains  activate/2 into  External patterns of execution 
* [[19]] --> 1 
* [[multiple([14,15,16,17,18],[[],[19]])]] --> 2 


### Specialization of cost equations eq/3 
* CE 18 is refined into CE [32] 
* CE 16 is refined into CE [33] 
* CE 17 is refined into CE [34,35,36] 


#### Refined cost equations eq/3 
* CE 32: eq(V1,V,Out) = 1
     [V>=0,V1>=0,Out=0] 
* CE 33: eq(V1,V,Out) = 1
     [Out=1,V=0,V1=0] 
* CE 34: eq(V1,V,Out) = 1+ activate(W1,W1):1+ activate(X1,X1):1+ eq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 
* CE 35: eq(V1,V,Out) = 1+ activate(W1,W1):1+ activate(X1,Y1):2
     [Y1>=0,X1>=1,W1>=0,X1+1=V,W1+1=V1] 
* CE 36: eq(V1,V,Out) = 1+ activate(W1,X1):2
     [Y1>=0,X1>=0,W1>=1,Y1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of eq/3 
* CEs [36] --> Loop 20 
* CEs [35] --> Loop 21 
* CEs [34] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 

#### Loops of eq/3 
* Loop 20: eq(V1,V,Out) [V>=1,V1>=2] 
* Loop 21: eq(V1,V,Out) [V>=2,V1>=1] 
* Loop 22: eq(V1,V,Out)->  eq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 23: eq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 24: eq(V1,V,Out) [Out=1,V=0,V1=0] 

### Ranking functions of CR eq(V1,V,Out) 
* RF of phase [22]: [V,V1]

#### Partial ranking functions of CR eq(V1,V,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V
    V1


### Resulting Chains:eq(V1,V,Out) 
* [[22],24]
* [[22],23]
* [[22],21]...
* [[22],20]...
* [24]
* [23]
* [21]...
* [20]...


### Merging Chains  eq/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23],[23,[22]]] --> 2 
* [[24,[22]]] --> 3 
* [[21]] --> 4 
* [[20]] --> 5 
* [[21,[22]]] --> 6 
* [[20,[22]]] --> 7 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [37] 
* CE 3 is refined into CE [38,39] 
* CE 4 is refined into CE [40] 
* CE 5 is refined into CE [41,42,43,44,45,46,47] 
* CE 6 is refined into CE [48,49] 
* CE 7 is refined into CE [50,51] 


#### Refined cost equations start/2 
* CE 37: start(V1,V) = 1
     [] 
* CE 38: start(V1,V) = 2+ activate(W1,W1):1
     [V1>=W1+1,W1>=0] 
* CE 39: start(V1,V) = 2+ activate(W1,X1):2
     [V1>=W1+1,X1>=0,W1>=1] 
* CE 40: start(V1,V) = 2
     [V1=1] 
* CE 41: start(V1,V) = 0+ eq(W1,X1,Y1):1
     [Y1=1,X1=0,W1=0,V=0,V1=0] 
* CE 42: start(V1,V) = 0+ eq(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 43: start(A,A) = 0+ eq(A,A,B):3
     [A>=1,B=1] 
* CE 44: start(V1,V) = 0+ eq(V1,V,W1):4
     [V>=2,V1>=1] 
* CE 45: start(V1,V) = 0+ eq(V1,V,W1):5
     [V>=1,V1>=2] 
* CE 46: start(V1,V) = 0+ eq(V1,V,W1):6
     [V>=3,V1>=2] 
* CE 47: start(V1,V) = 0+ eq(V1,V,W1):7
     [V>=2,V1>=3] 
* CE 48: start(V1,V) = 0+ inf(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 49: start(V1,V) = 0+ inf(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 50: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 51: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=0,V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [39,44,45,46,47,51] --> Loop 25 
* CEs [37,38,40,41,42,43,48,49,50] --> Loop 26 

#### Loops of start/2 
* Loop 25: start(V1,V) [V1>=1] 
* Loop 26: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [26]
* [25]...


### Merging Chains  start/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of inf(V1,Out):
* Chain [13]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [12]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [14,15,16,17,18] 

 * loop 14:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 15:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 16:activate(V1,Out) -> [activate(V1',Out')] 
3
 * loop 17:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 18:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
3
#### Cost of phase [14,15,16,17,18]:activate(V1,Out) -> [] 
9*it(14)+3*it(18)+2*it([19])+0
#### Cost of chains of activate(V1,Out):
* Chain [multiple([14,15,16,17,18],[[],[19]])]...: 9*it(14)+3*it(18)+2*it([19])+0
  with precondition: [V1>=1,Out>=0] 

* Chain [19]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of loops [22] 

 * loop 22:eq(V1,V,Out) -> [eq(V1',V',Out')] 
5
#### Cost of phase [22]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
5*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
5*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
5*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of phase [22]:eq(V1,V,Out) -> [eq(V1',V',Out')] 
5*it(22)+0
  Such that:it(22) =< V1
it(22) =< V1-V1'
it(22) =< V
it(22) =< V-V'

#### Cost of chains of eq(V1,V,Out):
* Chain [[22],24]: 5*it(22)+1
  Such that:it(22) =< V1

  with precondition: [Out=1,V1=V,V1>=1] 

* Chain [[22],23]: 5*it(22)+1
  Such that:it(22) =< V

  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[22],21]...: 5*it(22)+14*s(1)+3
  Such that:it(22) =< V

  with precondition: [V1>=2,V>=3] 

* Chain [[22],20]...: 5*it(22)+14*s(4)+1
  Such that:it(22) =< V

  with precondition: [V1>=3,V>=2] 

* Chain [24]: 1
  with precondition: [V1=0,V=0,Out=1] 

* Chain [23]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [21]...: 14*s(1)+3
  with precondition: [V1>=1,V>=2] 

* Chain [20]...: 14*s(4)+1
  with precondition: [V1>=2,V>=1] 


#### Cost of chains of start(V1,V):
* Chain [26]: 10*s(8)+4
  Such that:aux(16) =< V
s(8) =< aux(16)

  with precondition: [] 

* Chain [25]...: 84*s(10)+10*s(15)+3
  Such that:aux(17) =< V
s(15) =< aux(17)

  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: nat(V)*10+4 
    - Complexity: n 
* Chain [25]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 52 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 57 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 33 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 180 ms.

