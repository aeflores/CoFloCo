
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [f/3]
1. non_recursive  : [g/2]
2. recursive [non_tail] : [activate/2]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


#### Refined cost equations activate/2 
* CE 6: activate(A,A) = 1
     [A>=0] 
* CE 7: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of activate/2 
* CEs [7] --> Loop 4 
* CEs [6] --> Loop 5 

#### Loops of activate/2 
* Loop 4: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 5: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [4]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [4]:
  - RF of loop [4:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [[4],5]
* [5]


### Merging Chains  activate/2 into  External patterns of execution 
* [[5],[5,[4]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [8] 
* CE 3 is refined into CE [9] 


#### Refined cost equations start/2 
* CE 8: start(V1,V) = 1
     [V1>=0] 
* CE 9: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [8,9] --> Loop 6 

#### Loops of start/2 
* Loop 6: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [6]


### Merging Chains  start/2 into  External patterns of execution 
* [[6]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [4] 

 * loop 4:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [4]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(4)+0
  Such that:it(4) =< V1
it(4) =< V1-V1'

#### Cost of chains of activate(V1,Out):
* Chain [[4],5]: 2*it(4)+1
  Such that:it(4) =< Out

  with precondition: [Out=V1,Out>=1] 

* Chain [5]: 1
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [6]: 2*s(2)+1
  Such that:s(2) =< V1

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [6] with precondition: [V1>=0] 
    - Upper bound: 2*V1+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 2*V1+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 7 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 6 ms.
   - Equation cost structures 1 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 32 ms.

