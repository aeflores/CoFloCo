
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/4]
1. non_recursive  : [fun1/2]
2. non_recursive  : [fun2/1]
3. recursive [non_tail] : [mark/2]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/4
1. SCC is partially evaluated into fun1/2
2. SCC is partially evaluated into fun2/1
3. SCC is partially evaluated into mark/2
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/4 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations fun/4 
* CE 15: fun(V1,V,V2,Out) = 1
     [V2>=0,V>=0,V1>=0,V1+V+V2+1=Out] 
* CE 16: fun(V1,V,V2,Out) = 1+ fun(V2,V2,V2,Out)
     [V2>=0,V1>=0,V1+1=V] 

### Cost equations --> "Loop" of fun/4 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 

#### Loops of fun/4 
* Loop 10: fun(V1,V,V2,Out)->  fun(V2,V2,V2,Out)
                  [V2>=0,V1>=0,V1+1=V] 
* Loop 11: fun(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,V1+V+V2+1=Out] 

### Ranking functions of CR fun(V1,V,V2,Out) 

#### Partial ranking functions of CR fun(V1,V,V2,Out) 


### Resulting Chains:fun(V1,V,V2,Out) 
* [11]
* [10,11]


### Merging Chains  fun/4 into  External patterns of execution 
* [[11,10]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations fun1/2 
* CE 8 is refined into CE [17] 


#### Refined cost equations fun1/2 
* CE 17: fun1(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of fun1/2 
* CEs [17] --> Loop 12 

#### Loops of fun1/2 
* Loop 12: fun1(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR fun1(V1,Out) 

#### Partial ranking functions of CR fun1(V1,Out) 


### Resulting Chains:fun1(V1,Out) 
* [12]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations fun2/1 
* CE 9 is refined into CE [18] 
* CE 10 is refined into CE [19] 


#### Refined cost equations fun2/1 
* CE 18: fun2(Out) = 1
     [Out=1] 
* CE 19: fun2(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of fun2/1 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of fun2/1 
* Loop 13: fun2(Out) [Out=1] 
* Loop 14: fun2(Out) [Out=0] 

### Ranking functions of CR fun2(Out) 

#### Partial ranking functions of CR fun2(Out) 


### Resulting Chains:fun2(Out) 
* [14]
* [13]


### Merging Chains  fun2/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations mark/2 
* CE 11 is refined into CE [20,21] 
* CE 14 is refined into CE [22] 
* CE 13 is refined into CE [23,24] 
* CE 12 is refined into CE [25] 


#### Refined cost equations mark/2 
* CE 20: mark(V1,Out) = 1+ fun(W1,X1,Y1,Out):1
     [Out>=1,X1>=1,Out+6*X1=3*V1+1,X1=W1+1,Out=3*Y1+1] 
* CE 21: mark(A,A) = 1+ fun(B,C,D,A):2
     [A>=B+C+1,C>=0,B>=0,A=B+C+D+1] 
* CE 22: mark(V1,Out) = 1
     [Out=1,V1=1] 
* CE 23: mark(V1,Out) = 1+ fun2(W1):1
     [W1=0,Out=0,V1=0] 
* CE 24: mark(V1,Out) = 1+ fun2(W1):2
     [W1=1,Out=1,V1=0] 
* CE 25: mark(V1,Out) = 1+ mark(W1,X1)+ fun1(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 

### Cost equations --> "Loop" of mark/2 
* CEs [25] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [21,22] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of mark/2 
* Loop 15: mark(V1,Out)->  mark(V1',Out')
                  [Out'>=0,V1'>=0,Out'+1=Out,V1'+1=V1] 
* Loop 16: mark(V1,Out) [3*V1>=Out+5,Out>=1] 
* Loop 17: mark(A,A) [A>=1] 
* Loop 18: mark(V1,Out) [Out=1,V1=0] 
* Loop 19: mark(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR mark(V1,Out) 
* RF of phase [15]: [V1]

#### Partial ranking functions of CR mark(V1,Out) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V1


### Resulting Chains:mark(V1,Out) 
* [[15],19]
* [[15],18]
* [[15],17]
* [[15],16]
* [19]
* [18]
* [17]
* [16]


### Merging Chains  mark/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[18,[15]]] --> 3 
* [[17],[17,[15]],[19,[15]]] --> 4 
* [[16],[16,[15]]] --> 5 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [26,27] 
* CE 3 is refined into CE [28] 
* CE 4 is refined into CE [29,30] 
* CE 5 is refined into CE [31,32,33,34,35] 


#### Refined cost equations start/3 
* CE 26: start(V1,V,V2) = 0+ fun(W2,V,X2,Y2):1
     [Y2>=1,V>=1,V=W2+1,V=V1+1,Y2=3*X2+1,Y2=3*V2+1] 
* CE 27: start(V1,V,V2) = 0+ fun(V1,V,W2,X2):2
     [X2>=V1+V+1,V>=0,V1>=0,X2=V1+V+W2+1,X2=V1+V+V2+1] 
* CE 28: start(V1,V,V2) = 0+ fun1(W2,X2):1
     [X2>=1,X2=W2+1,X2=V1+1] 
* CE 29: start(V1,V,V2) = 0+ fun2(W2):1
     [W2=0] 
* CE 30: start(V1,V,V2) = 0+ fun2(W2):2
     [W2=1] 
* CE 31: start(V1,V,V2) = 0+ mark(W2,X2):1
     [X2=0,W2=0,V1=0] 
* CE 32: start(V1,V,V2) = 0+ mark(W2,X2):2
     [X2=1,W2=0,V1=0] 
* CE 33: start(V1,V,V2) = 0+ mark(W2,X2):3
     [X2>=2,X2=W2+1,X2=V1+1] 
* CE 34: start(V1,V,V2) = 0+ mark(V1,V1):4
     [V1>=1] 
* CE 35: start(V1,V,V2) = 0+ mark(V1,W2):5
     [3*V1>=W2+5,W2>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [26,27,28,29,30,31,32,33,34,35] --> Loop 20 

#### Loops of start/3 
* Loop 20: start(V1,V,V2) [] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [20]


### Merging Chains  start/3 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of fun(V1,V,V2,Out):
* Chain [11]: 1
  with precondition: [V+V1+V2+1=Out,V1>=0,V>=0,V2>=0] 

* Chain [10,11]: 2
  with precondition: [V=V1+1,3*V2+1=Out,V>=1,V2>=0] 


#### Cost of chains of fun1(V1,Out):
* Chain [12]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of chains of fun2(Out):
* Chain [14]: 1
  with precondition: [Out=0] 

* Chain [13]: 1
  with precondition: [Out=1] 


#### Cost of loops [15] 

 * loop 15:mark(V1,Out) -> [mark(V1',Out')] 
2
#### Cost of phase [15]:mark(V1,Out) -> [mark(V1',Out')] 
2*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of phase [15]:mark(V1,Out) -> [mark(V1',Out')] 
2*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of phase [15]:mark(V1,Out) -> [mark(V1',Out')] 
2*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of phase [15]:mark(V1,Out) -> [mark(V1',Out')] 
2*it(15)+0
  Such that:it(15) =< V1
it(15) =< V1-V1'

#### Cost of chains of mark(V1,Out):
* Chain [[15],19]: 2*it(15)+2
  Such that:it(15) =< Out

  with precondition: [V1=Out,V1>=1] 

* Chain [[15],18]: 2*it(15)+2
  Such that:it(15) =< Out

  with precondition: [V1+1=Out,V1>=1] 

* Chain [[15],17]: 2*it(15)+2
  Such that:it(15) =< Out

  with precondition: [V1=Out,V1>=2] 

* Chain [[15],16]: 2*it(15)+3
  Such that:it(15) =< 3/2*V1-Out/2

  with precondition: [Out>=2,3*V1>=Out+7] 

* Chain [19]: 2
  with precondition: [V1=0,Out=0] 

* Chain [18]: 2
  with precondition: [V1=0,Out=1] 

* Chain [17]: 2
  with precondition: [V1=Out,V1>=1] 

* Chain [16]: 3
  with precondition: [Out>=1,3*V1>=Out+5] 


#### Cost of chains of start(V1,V,V2):
* Chain [20]: 2*s(4)+4*s(6)+2*s(7)+3
  Such that:s(5) =< V1
s(4) =< V1+1
s(7) =< 3/2*V1
s(6) =< s(5)

  with precondition: [] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: nat(V1)*4+3+nat(3/2*V1)*2+nat(V1+1)*2 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): nat(V1)*4+3+nat(3/2*V1)*2+nat(V1+1)*2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 47 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 96 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 29 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 295 ms.

