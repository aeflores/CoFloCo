
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [cons/3]
1. recursive  : [first/3]
2. recursive  : [from/2]
3. non_recursive  : [proper/2]
4. recursive  : [s/2]
5. recursive  : [sel/3]
6. recursive  : [top/2]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into cons/3
1. SCC is partially evaluated into first/3
2. SCC is partially evaluated into from/2
3. SCC is partially evaluated into proper/2
4. SCC is partially evaluated into s/2
5. SCC is partially evaluated into sel/3
6. SCC is partially evaluated into top/2
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations cons/3 
* CE 19 is refined into CE [30] 
* CE 18 is refined into CE [31] 
* CE 17 is refined into CE [32] 


#### Refined cost equations cons/3 
* CE 30: cons(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 31: cons(V,V1,Out) = 1+ cons(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 32: cons(V,V1,Out) = 1+ cons(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of cons/3 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [30] --> Loop 24 

#### Loops of cons/3 
* Loop 22: cons(V,V1,Out)->  cons(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 23: cons(V,V1,Out)->  cons(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 24: cons(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR cons(V,V1,Out) 
* RF of phase [22,23]: [V]

#### Partial ranking functions of CR cons(V,V1,Out) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1,23:1]:
    V
  - RF of loop [23:1]:
    V1


### Resulting Chains:cons(V,V1,Out) 
* [[22,23],24]
* [24]


### Merging Chains  cons/3 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[22,23]]] --> 2 


### Specialization of cost equations first/3 
* CE 27 is refined into CE [33] 
* CE 26 is refined into CE [34] 
* CE 25 is refined into CE [35] 
* CE 24 is refined into CE [36] 


#### Refined cost equations first/3 
* CE 33: first(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 34: first(V,V1,Out) = 1+ first(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 35: first(V,V1,Out) = 1+ first(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 36: first(V,V1,Out) = 1+ first(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of first/3 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [33] --> Loop 28 

#### Loops of first/3 
* Loop 25: first(V,V1,Out)->  first(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 26: first(V,V1,Out)->  first(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 27: first(V,V1,Out)->  first(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 28: first(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR first(V,V1,Out) 
* RF of phase [25,26,27]: [V+V1]

#### Partial ranking functions of CR first(V,V1,Out) 
* Partial RF of phase [25,26,27]:
  - RF of loop [25:1,27:1]:
    V1
  - RF of loop [26:1,27:1]:
    V


### Resulting Chains:first(V,V1,Out) 
* [[25,26,27],28]
* [28]


### Merging Chains  first/3 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[25,26,27]]] --> 2 


### Specialization of cost equations from/2 
* CE 16 is refined into CE [37] 
* CE 15 is refined into CE [38] 


#### Refined cost equations from/2 
* CE 37: from(V,Out) = 0
     [V>=0,Out=0] 
* CE 38: from(V,Out) = 1+ from(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of from/2 
* CEs [38] --> Loop 29 
* CEs [37] --> Loop 30 

#### Loops of from/2 
* Loop 29: from(V,Out)->  from(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 30: from(V,Out) [V>=0,Out=0] 

### Ranking functions of CR from(V,Out) 
* RF of phase [29]: [V]

#### Partial ranking functions of CR from(V,Out) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V


### Resulting Chains:from(V,Out) 
* [[29],30]
* [30]


### Merging Chains  from/2 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations proper/2 
* CE 14 is refined into CE [39] 
* CE 12 is refined into CE [40] 
* CE 13 is refined into CE [41] 


#### Refined cost equations proper/2 
* CE 39: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 40: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 41: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [39] --> Loop 31 
* CEs [40] --> Loop 32 
* CEs [41] --> Loop 33 

#### Loops of proper/2 
* Loop 31: proper(V,Out) [V>=0,Out=0] 
* Loop 32: proper(V,Out) [Out=2,V=1] 
* Loop 33: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [33]
* [32]
* [31]


### Merging Chains  proper/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 


### Specialization of cost equations s/2 
* CE 29 is refined into CE [42] 
* CE 28 is refined into CE [43] 


#### Refined cost equations s/2 
* CE 42: s(V,Out) = 0
     [V>=0,Out=0] 
* CE 43: s(V,Out) = 1+ s(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of s/2 
* CEs [43] --> Loop 34 
* CEs [42] --> Loop 35 

#### Loops of s/2 
* Loop 34: s(V,Out)->  s(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 35: s(V,Out) [V>=0,Out=0] 

### Ranking functions of CR s(V,Out) 
* RF of phase [34]: [V]

#### Partial ranking functions of CR s(V,Out) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V


### Resulting Chains:s(V,Out) 
* [[34],35]
* [35]


### Merging Chains  s/2 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[34]]] --> 2 


### Specialization of cost equations sel/3 
* CE 23 is refined into CE [44] 
* CE 22 is refined into CE [45] 
* CE 20 is refined into CE [46] 
* CE 21 is refined into CE [47] 


#### Refined cost equations sel/3 
* CE 44: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 45: sel(V,V1,Out) = 1+ sel(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 46: sel(V,V1,Out) = 1+ sel(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 47: sel(V,V1,Out) = 1+ sel(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [45] --> Loop 36 
* CEs [46] --> Loop 37 
* CEs [47] --> Loop 38 
* CEs [44] --> Loop 39 

#### Loops of sel/3 
* Loop 36: sel(V,V1,Out)->  sel(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 37: sel(V,V1,Out)->  sel(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 38: sel(V,V1,Out)->  sel(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 39: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [36,37,38]: [V+V1]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [36,37,38]:
  - RF of loop [36:1,38:1]:
    V1
  - RF of loop [37:1,38:1]:
    V


### Resulting Chains:sel(V,V1,Out) 
* [[36,37,38],39]
* [39]


### Merging Chains  sel/3 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[36,37,38]]] --> 2 


### Specialization of cost equations top/2 
* CE 11 is refined into CE [48] 
* CE 9 is refined into CE [49] 
* CE 10 is refined into CE [50,51,52] 


#### Refined cost equations top/2 
* CE 48: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 49: top(V,Out) = 1+ top(V,Out)
     [V>=1] 
* CE 50: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 51: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 52: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [52] --> Loop 40 
* CEs [51] --> Loop 41 
* CEs [49,50] --> Loop 42 
* CEs [48] --> Loop 43 

#### Loops of top/2 
* Loop 40: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 41: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 42: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 43: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[41,42]]...
* [[41,42],43]
* [[41,42],40,43]
* [43]
* [40,43]


### Merging Chains  top/2 into  External patterns of execution 
* [[43,40],[43],[43,40,[41,42]],[43,[41,42]]] --> 1 
* [[[41,42]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [53,54] 
* CE 3 is refined into CE [55,56,57] 
* CE 4 is refined into CE [58,59] 
* CE 5 is refined into CE [60,61] 
* CE 6 is refined into CE [62,63] 
* CE 7 is refined into CE [64,65] 
* CE 8 is refined into CE [66,67] 


#### Refined cost equations start/2 
* CE 53: start(V,V1) = 0+ top(V,W1):1
     [V>=0,W1=0] 
* CE 54: start(V,V1) = 0+ top(V,W1):2
     [V>=1] 
* CE 55: start(V,V1) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 56: start(V,V1) = 0+ proper(W1,X1):2
     [X1=2,W1=1,V=1] 
* CE 57: start(V,V1) = 0+ proper(V,W1):3
     [V>=0,W1=0] 
* CE 58: start(V,V1) = 0+ from(V,W1):1
     [V>=0,W1=0] 
* CE 59: start(V,V1) = 0+ from(V,W1):2
     [V>=W1,W1>=1] 
* CE 60: start(V,V1) = 0+ cons(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 61: start(V,V1) = 0+ cons(V,V1,W1):2
     [V>=W1,W1>=1,V1>=0] 
* CE 62: start(V,V1) = 0+ sel(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 63: start(V,V1) = 0+ sel(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 
* CE 64: start(V,V1) = 0+ first(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 65: start(V,V1) = 0+ first(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 
* CE 66: start(V,V1) = 0+ s(V,W1):1
     [V>=0,W1=0] 
* CE 67: start(V,V1) = 0+ s(V,W1):2
     [V>=W1,W1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [56] --> Loop 44 
* CEs [53,55,57,58,59,60,61,62,63,64,65,66,67] --> Loop 45 
* CEs [54] --> Loop 46 

#### Loops of start/2 
* Loop 44: start(V,V1) [V=1] 
* Loop 45: start(V,V1) [V>=0] 
* Loop 46: start(V,V1) [V>=1] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [46]...
* [45]
* [44]


### Merging Chains  start/2 into  External patterns of execution 
* [[44],[45]] --> 1 
* [[46]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22,23] 

 * loop 22:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1
 * loop 23:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1
#### Cost of phase [22,23]:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1*it(22)+1*it(23)+0
  Such that:it(23) =< V1
it(23) =< V1-V1'
aux(1) =< V
aux(2) =< V-V'
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)

#### Cost of chains of cons(V,V1,Out):
* Chain [[22,23],24]: 1*it(22)+1*it(23)+0
  Such that:aux(1) =< V
it(23) =< V1
aux(2) =< Out
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [24]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [25,26,27] 

 * loop 25:first(V,V1,Out) -> [first(V',V1',Out')] 
1
 * loop 26:first(V,V1,Out) -> [first(V',V1',Out')] 
1
 * loop 27:first(V,V1,Out) -> [first(V',V1',Out')] 
1
#### Cost of phase [25,26,27]:first(V,V1,Out) -> [first(V',V1',Out')] 
1*it(25)+1*it(26)+1*it(27)+0
  Such that:aux(3) =< V
aux(4) =< V+V1
aux(5) =< V+V1-V'-V1'
aux(6) =< V-V'
aux(7) =< V1
aux(8) =< V1-V1'
it(26) =< aux(3)
it(27) =< aux(3)
it(25) =< aux(4)
it(26) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(26) =< aux(5)
it(27) =< aux(5)
it(26) =< aux(6)
it(27) =< aux(6)
it(25) =< aux(7)
it(27) =< aux(7)
it(25) =< aux(8)
it(27) =< aux(8)

#### Cost of chains of first(V,V1,Out):
* Chain [[25,26,27],28]: 1*it(25)+1*it(26)+1*it(27)+0
  Such that:aux(9) =< V
aux(10) =< V+V1
aux(11) =< V1
it(26) =< aux(9)
it(27) =< aux(9)
it(25) =< aux(10)
it(26) =< aux(10)
it(27) =< aux(10)
it(25) =< aux(11)
it(27) =< aux(11)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [28]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [29] 

 * loop 29:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [29]:from(V,Out) -> [from(V',Out')] 
1*it(29)+0
  Such that:it(29) =< V
it(29) =< V-V'

#### Cost of chains of from(V,Out):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [30]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of proper(V,Out):
* Chain [33]: 1
  with precondition: [V=0,Out=1] 

* Chain [32]: 1
  with precondition: [V=1,Out=2] 

* Chain [31]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [34] 

 * loop 34:s(V,Out) -> [s(V',Out')] 
1
#### Cost of phase [34]:s(V,Out) -> [s(V',Out')] 
1*it(34)+0
  Such that:it(34) =< V
it(34) =< V-V'

#### Cost of chains of s(V,Out):
* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [35]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [36,37,38] 

 * loop 36:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
 * loop 37:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
 * loop 38:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
#### Cost of phase [36,37,38]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(36)+1*it(37)+1*it(38)+0
  Such that:aux(12) =< V
aux(13) =< V+V1
aux(14) =< V+V1-V'-V1'
aux(15) =< V-V'
aux(16) =< V1
aux(17) =< V1-V1'
it(37) =< aux(12)
it(38) =< aux(12)
it(36) =< aux(13)
it(37) =< aux(13)
it(38) =< aux(13)
it(36) =< aux(14)
it(37) =< aux(14)
it(38) =< aux(14)
it(37) =< aux(15)
it(38) =< aux(15)
it(36) =< aux(16)
it(38) =< aux(16)
it(36) =< aux(17)
it(38) =< aux(17)

#### Cost of chains of sel(V,V1,Out):
* Chain [[36,37,38],39]: 1*it(36)+1*it(37)+1*it(38)+0
  Such that:aux(18) =< V
aux(19) =< V+V1
aux(20) =< V1
it(37) =< aux(18)
it(38) =< aux(18)
it(36) =< aux(19)
it(37) =< aux(19)
it(38) =< aux(19)
it(36) =< aux(20)
it(38) =< aux(20)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [39]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [41,42] 

 * loop 41:top(V,Out) -> [top(V',Out')] 
2
 * loop 42:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [41,42]:top(V,Out) -> [top(V',Out')] 
4*it(41)+0
#### Cost of phase [41,42]:top(V,Out) -> [top(V',Out')] 
4*it(41)+0
#### Cost of phase [41,42]:top(V,Out) -> [top(V',Out')] 
4*it(41)+0
#### Cost of chains of top(V,Out):
* Chain [[41,42]]...: 4*it(41)+0
  with precondition: [V>=1] 

* Chain [[41,42],43]: 4*it(41)+0
  with precondition: [Out=0,V>=1] 

* Chain [[41,42],40,43]: 4*it(41)+1
  with precondition: [Out=0,V>=1] 

* Chain [43]: 0
  with precondition: [Out=0,V>=0] 

* Chain [40,43]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1):
* Chain [46]...: 4*s(3)+0
  with precondition: [V>=1] 

* Chain [45]: 1*s(4)+3*s(5)+1*s(7)+2*s(13)+2*s(14)+2*s(15)+1
  Such that:aux(23) =< V
aux(24) =< V+V1
aux(25) =< V1
s(5) =< aux(23)
s(7) =< aux(25)
s(13) =< aux(23)
s(14) =< aux(23)
s(15) =< aux(24)
s(13) =< aux(24)
s(14) =< aux(24)
s(15) =< aux(25)
s(14) =< aux(25)
s(7) =< aux(23)

  with precondition: [V>=0] 

* Chain [44]: 1
  with precondition: [V=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [46]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 47 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 74 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 77 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 33 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 260 ms.

