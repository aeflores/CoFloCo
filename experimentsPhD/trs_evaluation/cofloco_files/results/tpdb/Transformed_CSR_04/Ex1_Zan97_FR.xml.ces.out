
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [d/1]
1. non_recursive  : [c/1]
2. non_recursive  : [activate/2]
3. recursive  : [g/2,h/2]
4. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into c/1
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into h/2
4. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations c/1 
* CE 12 is refined into CE [14] 
* CE 13 is refined into CE [15] 


#### Refined cost equations c/1 
* CE 14: c(Out) = 2
     [Out=1] 
* CE 15: c(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of c/1 
* CEs [14] --> Loop 8 
* CEs [15] --> Loop 9 

#### Loops of c/1 
* Loop 8: c(Out) [Out=1] 
* Loop 9: c(Out) [Out=0] 

### Ranking functions of CR c(Out) 

#### Partial ranking functions of CR c(Out) 


### Resulting Chains:c(Out) 
* [9]
* [8]


### Merging Chains  c/1 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations activate/2 
* CE 7 is refined into CE [16] 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18,19] 


#### Refined cost equations activate/2 
* CE 16: activate(V,Out) = 2
     [Out=1,V=1] 
* CE 17: activate(A,A) = 1
     [A>=0] 
* CE 18: activate(V,Out) = 1+ c(W):1
     [W=0,Out=0,V=0] 
* CE 19: activate(V,Out) = 1+ c(W):2
     [W=1,Out=1,V=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [16] --> Loop 10 
* CEs [19] --> Loop 11 
* CEs [17,18] --> Loop 12 

#### Loops of activate/2 
* Loop 10: activate(V,Out) [Out=1,V=1] 
* Loop 11: activate(V,Out) [Out=1,V=0] 
* Loop 12: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [12]
* [11]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10],[12]] --> 2 


### Specialization of cost equations h/2 
* CE 11 is refined into CE [20] 
* CE 10 is refined into CE [21,22] 


#### Refined cost equations h/2 
* CE 20: h(V,Out) = 0
     [V>=0,Out=0] 
* CE 21: h(V,Out) = 2+ activate(W,X):1+ h(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 22: h(V,Out) = 2+ activate(W,X):2+ h(Y,Out)
     [Y=0,X=0,W=0,V=1] 

### Cost equations --> "Loop" of h/2 
* CEs [21] --> Loop 13 
* CEs [22] --> Loop 14 
* CEs [20] --> Loop 15 

#### Loops of h/2 
* Loop 13: h(V,Out)->  h(V',Out)
                  [V'=1,V=1] 
* Loop 14: h(V,Out)->  h(V',Out)
                  [V'=0,V=1] 
* Loop 15: h(V,Out) [V>=0,Out=0] 

### Ranking functions of CR h(V,Out) 

#### Partial ranking functions of CR h(V,Out) 


### Resulting Chains:h(V,Out) 
* [[13]]...
* [[13],15]
* [[13],14,15]
* [15]
* [14,15]


### Merging Chains  h/2 into  External patterns of execution 
* [[15,14],[15],[15,14,[13]],[15,[13]]] --> 1 
* [[[13]]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [23,24,25,26] 
* CE 3 is refined into CE [27,28] 
* CE 4 is refined into CE [29,30] 
* CE 5 is refined into CE [31] 
* CE 6 is refined into CE [32,33] 


#### Refined cost equations start/1 
* CE 23: start(V) = 1+ activate(W,X):1+ h(Y,Z):1
     [Z=0,Y=1,X=1,W=0,V=0] 
* CE 24: start(V) = 1+ activate(W,X):1+ h(Y,Z):2
     [Y=1,X=1,W=0,V=0] 
* CE 25: start(V) = 1+ activate(V,V):2+ h(V,W):1
     [V>=0,W=0] 
* CE 26: start(V) = 1+ activate(W,X):2+ h(Y,Z):2
     [Y=1,X=1,W=1,V=1] 
* CE 27: start(V) = 0+ c(W):1
     [W=0] 
* CE 28: start(V) = 0+ c(W):2
     [W=1] 
* CE 29: start(V) = 0+ h(V,W):1
     [V>=0,W=0] 
* CE 30: start(V) = 0+ h(W,X):2
     [W=1,V=1] 
* CE 31: start(V) = 1
     [] 
* CE 32: start(V) = 0+ activate(W,X):1
     [X=1,W=0,V=0] 
* CE 33: start(V) = 0+ activate(V,V):2
     [V>=0] 

### Cost equations --> "Loop" of start/1 
* CEs [23,25,27,28,29,31,32,33] --> Loop 16 
* CEs [26,30] --> Loop 17 
* CEs [24] --> Loop 18 

#### Loops of start/1 
* Loop 16: start(V) [] 
* Loop 17: start(V) [V=1] 
* Loop 18: start(V) [V=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [18]...
* [17]...
* [16]


### Merging Chains  start/1 into  External patterns of execution 
* [[16]] --> 1 
* [[18]] --> 2 
* [[17]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of c(Out):
* Chain [9]: 1
  with precondition: [Out=0] 

* Chain [8]: 2
  with precondition: [Out=1] 


#### Cost of chains of activate(V,Out):
* Chain [12]: 2
  with precondition: [V=Out,V>=0] 

* Chain [11]: 3
  with precondition: [V=0,Out=1] 

* Chain [10]: 2
  with precondition: [V=1,Out=1] 


#### Cost of loops [13] 

 * loop 13:h(V,Out) -> [h(V',Out')] 
5
#### Cost of phase [13]:h(V,Out) -> [h(V',Out')] 
5*it(13)+0
#### Cost of phase [13]:h(V,Out) -> [h(V',Out')] 
5*it(13)+0
#### Cost of phase [13]:h(V,Out) -> [h(V',Out')] 
5*it(13)+0
#### Cost of chains of h(V,Out):
* Chain [[13]]...: 5*it(13)+0
  with precondition: [V=1] 

* Chain [[13],15]: 5*it(13)+0
  with precondition: [V=1,Out=0] 

* Chain [[13],14,15]: 5*it(13)+4
  with precondition: [V=1,Out=0] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0] 

* Chain [14,15]: 4
  with precondition: [V=1,Out=0] 


#### Cost of chains of start(V):
* Chain [18]...: 5*s(3)+4
  with precondition: [V=0] 

* Chain [17]...: 1*aux(2)+0
  with precondition: [V=1] 

* Chain [16]: 1*aux(3)+0
  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [18]... with precondition: [V=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 56 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 168 ms.

