
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [fun3/3,fun4/3,mark/2]  
 Merged into fun3fun4mark/3

#### Computed strongly connected components 
0. non_recursive  : [fun2/2]
2. non_recursive  : [start/3]
1. recursive [non_tail,multiple] : [fun/2,fun1/4,fun3fun4mark/3,fun5/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun2/2
2. SCC is partially evaluated into start/3
1. SCC is partially evaluated into fun3fun4mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun2/2 
* CE 30 is refined into CE [31] 
* CE 29 is refined into CE [32] 
* CE 28 is refined into CE [33] 


#### Refined cost equations fun2/2 
* CE 31: fun2(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 32: fun2(V,Out) = 1
     [V>=1,Out=1] 
* CE 33: fun2(V,Out) = 1
     [Out=2,V=0] 

### Cost equations --> "Loop" of fun2/2 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 

#### Loops of fun2/2 
* Loop 22: fun2(V,Out) [V>=0,V+1=Out] 
* Loop 23: fun2(V,Out) [V>=1,Out=1] 
* Loop 24: fun2(V,Out) [Out=2,V=0] 

### Ranking functions of CR fun2(V,Out) 

#### Partial ranking functions of CR fun2(V,Out) 


### Resulting Chains:fun2(V,Out) 
* [24]
* [23]
* [22]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations fun3fun4mark/3 
* CE 20 is refined into CE [34] 
* CE 26 is refined into CE [35] 
* CE 27 is refined into CE [36] 
* CE 21 is refined into CE [37] 
* CE 12 is refined into CE [38] 
* CE 23 is refined into CE [39,40,41] 
* CE 25 is refined into CE [42] 
* CE 18 is refined into CE [43] 
* CE 24 is refined into CE [44] 
* CE 13 is refined into CE [45,46] 
* CE 19 is refined into CE [47] 
* CE 15 is refined into CE [48,49] 
* CE 22 is refined into CE [50] 
* CE 11 is refined into CE [51,52,53] 
* CE 17 is refined into CE [54] 
* CE 16 is refined into CE [55] 
* CE 14 is refined into CE [56] 


#### Refined cost equations fun3fun4mark/3 
* CE 34: fun3fun4mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 35: fun3fun4mark(A,B,C) = 1
     [C=2,A=2] 
* CE 36: fun3fun4mark(A,B,C) = 1
     [C=1,A=1] 
* CE 37: fun3fun4mark(A,B,C) = 1
     [C=0,A=0] 
* CE 38: fun3fun4mark(A,B,C) = 2+ fun3fun4mark(D,E,F)
     [C+D>=A,A>=D+1,D>=0,C+D=A+F] 
* CE 39: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)+ fun2(G,H):1
     [D>=0,D+1=A,F=0,H=2,G=0,C=2] 
* CE 40: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)+ fun2(F,G):2
     [D>=0,F>=1,D+1=A,G=1,C=1] 
* CE 41: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)+ fun2(G,C):3
     [D>=0,C>=1,C=F+1,C=G+1,D+1=A] 
* CE 42: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)
     [D>=0,F+1=C,D+1=A] 
* CE 43: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(B,D,C)
     [B>=0,A=0] 
* CE 44: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)+ fun3fun4mark(G,H,I)+ fun3fun4mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 45: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(H,I):2+ fun3fun4mark(J,K,C)
     [F>=0,D>=0,H>=1,2*F+3=J,D+1=A,I=1] 
* CE 46: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(I,J):3+ fun3fun4mark(K,L,C)
     [F>=0,D>=0,2*F+3=K,D+1=A,H=0,J=1,I=0] 
* CE 47: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(D,E,F)+ fun3fun4mark(B,G,H)+ fun3fun4mark(F,H,I)
     [D>=0,B>=0,I+1=C,D+1=A] 
* CE 48: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(I,J):1+ fun3fun4mark(K,L,C)
     [F>=0,D>=0,D+1=A,K=1,H=0,J=2,I=0] 
* CE 49: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(I,J):3+ fun3fun4mark(K,L,C)
     [F>=0,D>=0,D+1=A,K=1,H=1,J=2,I=1] 
* CE 50: fun3fun4mark(A,B,C) = 1+ fun3fun4mark(B,D,E)+ fun3fun4mark(F,G,H)+ fun3fun4mark(B,I,J)+ fun3fun4mark(H,J,K)+ fun3fun4mark(E,K,C)
     [F>=0,B>=0,F+1=A] 
* CE 51: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(I,J):1
     [F>=0,D>=0,2*F+7=C,D+1=A,H=0,J=2,I=0] 
* CE 52: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(H,I):2
     [F>=0,D>=0,H>=1,2*F+6=C,D+1=A,I=1] 
* CE 53: fun3fun4mark(A,B,C) = 3+ fun3fun4mark(D,E,F)+ fun3fun4mark(F,G,H)+ fun2(I,J):3
     [F>=0,D>=0,J>=1,J+2*F+5=C,J=H+1,J=I+1,D+1=A] 
* CE 54: fun3fun4mark(A,B,C) = 2+ fun3fun4mark(D,E,F)+ fun3fun4mark(G,H,C)
     [G>=0,D>=0,G+1=F,D+1=A] 
* CE 55: fun3fun4mark(A,B,C) = 2+ fun3fun4mark(D,E,F)+ fun3fun4mark(G,H,C)
     [A>=D+G+1,G>=0,D>=0,F=2] 
* CE 56: fun3fun4mark(A,B,C) = 2+ fun3fun4mark(D,E,F)+ fun3fun4mark(G,H,C)
     [A>=D+G+1,G>=0,D>=0,F=1] 

### Cost equations --> "Loop" of fun3fun4mark/3 
* CEs [53] --> Loop 25 
* CEs [54] --> Loop 26 
* CEs [52] --> Loop 27 
* CEs [51] --> Loop 28 
* CEs [55] --> Loop 29 
* CEs [56] --> Loop 30 
* CEs [50] --> Loop 31 
* CEs [44] --> Loop 32 
* CEs [45] --> Loop 33 
* CEs [47] --> Loop 34 
* CEs [49] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [48] --> Loop 37 
* CEs [38] --> Loop 38 
* CEs [41,42] --> Loop 39 
* CEs [39] --> Loop 40 
* CEs [40] --> Loop 41 
* CEs [43] --> Loop 42 
* CEs [34] --> Loop 43 
* CEs [35] --> Loop 44 
* CEs [36] --> Loop 45 
* CEs [37] --> Loop 46 

#### Loops of fun3fun4mark/3 
* Loop 25: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(C',A'2,B'2)
                  [C>=2*C'+6,C'>=0,A>=1,B'2+2*C'+6=C,A=A'+1] 
* Loop 26: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C)
                  [C'>=1,A>=1,C'=A'2+1,A=A'+1] 
* Loop 27: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C'2)
                  [C'2>=1,C>=6,A>=1,A=A'+1,C=2*A'2+6,C=2*C'+6] 
* Loop 28: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C'2)
                  [C>=7,A>=1,A=A'+1,C=2*A'2+7,C=2*C'+7,C'2=0] 
* Loop 29: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C)
                  [A>=A'+A'2+1,A'2>=0,A'>=0,C'=2] 
* Loop 30: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C)
                  [A>=A'+A'2+1,A'2>=0,A'>=0,C'=1] 
* Loop 31: fun3fun4mark(A,B,C)->  fun3fun4mark(B,A',B')  fun3fun4mark(A'2,B'2,C'2)  fun3fun4mark(B,A'3,B'3)  fun3fun4mark(C'2,B'3,A'4)  fun3fun4mark(B',A'4,C)
                  [A'2>=0,B>=0,A'2+1=A] 
* Loop 32: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(A'2,B'2,C'2)  fun3fun4mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 33: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(C',A'2,B'2)  fun3fun4mark(A'3,B'3,C)
                  [B'2>=1,C'>=0,A>=1,2*C'+3=A'3,A=A'+1] 
* Loop 34: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(B,A'2,B'2)  fun3fun4mark(C',B'2,A'3)
                  [B>=0,A>=1,C=A'3+1,A=A'+1] 
* Loop 35: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(C',A'2,B'2)  fun3fun4mark(A'3,B'3,C)
                  [C'>=0,A>=1,A=A'+1,A'3=1,B'2=1] 
* Loop 36: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(C',A'2,B'2)  fun3fun4mark(A'3,B'3,C)
                  [C'>=0,A>=1,2*C'+3=A'3,A=A'+1,B'2=0] 
* Loop 37: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')  fun3fun4mark(C',A'2,B'2)  fun3fun4mark(A'3,B'3,C)
                  [C'>=0,A>=1,A=A'+1,A'3=1,B'2=0] 
* Loop 38: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')
                  [C+A'>=A,A>=A'+1,A'>=0,A+C'=C+A'] 
* Loop 39: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')
                  [A>=1,C=C'+1,A=A'+1] 
* Loop 40: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')
                  [A>=1,A=A'+1,C'=0,C=2] 
* Loop 41: fun3fun4mark(A,B,C)->  fun3fun4mark(A',B',C')
                  [C'>=1,A>=1,A=A'+1,C=1] 
* Loop 42: fun3fun4mark(A,B,C)->  fun3fun4mark(B,A',C)
                  [B>=0,A=0] 
* Loop 43: fun3fun4mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 44: fun3fun4mark(A,B,C) [C=2,A=2] 
* Loop 45: fun3fun4mark(A,B,C) [C=1,A=1] 
* Loop 46: fun3fun4mark(A,B,C) [C=0,A=0] 

### Ranking functions of CR fun3fun4mark(A,B,C) 

#### Partial ranking functions of CR fun3fun4mark(A,B,C) 
* Partial RF of phase [25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42]:
  - RF of loop [25:1,26:1,27:1,28:1,29:1,29:2,30:1,30:2,31:2,32:1,32:2,33:1,34:1,35:1,36:1,37:1,38:1,39:1,40:1,41:1]:
    A depends on loops [25:2,26:2,27:2,28:2,31:1,31:3,31:4,31:5,32:3,33:2,33:3,34:2,34:3,35:2,36:2,36:3,37:2,42:1] 


### Resulting Chains:fun3fun4mark(A,B,C) 
* [multiple([25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],[[],[46],[45],[44],[43]])]...
* [46]
* [45]
* [44]
* [43]


### Merging Chains  fun3fun4mark/3 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 
* [[43]] --> 4 
* [[multiple([25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],[[],[46],[45],[44],[43]])]] --> 5 


### Specialization of cost equations start/3 
* CE 7 is refined into CE [57,58,59,60,61] 
* CE 2 is refined into CE [62,63,64,65,66,67,68,69,70] 
* CE 3 is refined into CE [71] 
* CE 4 is refined into CE [72,73,74,75,76,77,78,79,80] 
* CE 5 is refined into CE [81,82,83,84,85] 
* CE 6 is refined into CE [86,87,88,89,90,91,92,93,94,95] 
* CE 8 is refined into CE [96,97,98,99,100] 
* CE 9 is refined into CE [101,102,103,104,105] 
* CE 10 is refined into CE [106,107,108] 


#### Refined cost equations start/3 
* CE 57: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):1
     [V2>=0,Y2=0,W2=0,V1=0,V=2] 
* CE 58: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):2
     [V2>=0,Y2=1,W2=1,V1=1,V=2] 
* CE 59: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):3
     [V2>=0,Y2=2,W2=2,V1=2,V=2] 
* CE 60: start(V,V1,V2) = 1+ fun3fun4mark(V1,W2,X2):4
     [X2>=V1+1,V1>=0,V2>=0,X2=V1+W2+1,V=2] 
* CE 61: start(V,V1,V2) = 1+ fun3fun4mark(V1,W2,X2):5
     [V1>=0,V2>=0,V=2] 
* CE 62: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):1
     [A3=2,Z2=0,Y2=0,W2=0,V=0] 
* CE 63: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):3
     [A3=1,Z2=0,Y2=0,W2=0,V=0] 
* CE 64: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):2
     [A3=1,Z2=1,Y2=1,W2=1,V=1] 
* CE 65: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):3
     [A3=2,Z2=1,Y2=1,W2=1,V=1] 
* CE 66: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):3+ fun2(Z2,A3):2
     [A3=1,Z2=2,Y2=2,W2=2,V=2] 
* CE 67: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):3+ fun2(Z2,A3):3
     [A3=3,Z2=2,Y2=2,W2=2,V=2] 
* CE 68: start(V,V1,V2) = 2+ fun3fun4mark(V,W2,X2):4+ fun2(X2,Y2):2
     [X2>=V+1,V>=0,X2=V+W2+1,Y2=1] 
* CE 69: start(V,V1,V2) = 2+ fun3fun4mark(V,W2,X2):4+ fun2(Y2,Z2):3
     [Z2>=V+2,V>=0,Z2=V+W2+2,Z2=Y2+1,Z2=X2+1] 
* CE 70: start(V,V1,V2) = 2+ fun3fun4mark(V,W2,X2):5
     [Y2>=0,V>=0] 
* CE 71: start(V,V1,V2) = 1
     [V>=0] 
* CE 72: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):4
     [D3>=4,D3=C3+4,B3=3,A3=1,Z2=0,Y2=0,W2=0,V=0] 
* CE 73: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):5
     [B3=3,A3=1,Z2=0,Y2=0,W2=0,V=0] 
* CE 74: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):2+ fun3fun4mark(B3,C3,D3):4
     [D3>=6,D3=C3+6,B3=5,A3=1,Z2=1,Y2=1,W2=1,V=1] 
* CE 75: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):2+ fun3fun4mark(B3,C3,D3):5
     [B3=5,A3=1,Z2=1,Y2=1,W2=1,V=1] 
* CE 76: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):3+ fun2(Z2,A3):2+ fun3fun4mark(B3,C3,D3):4
     [D3>=8,D3=C3+8,B3=7,A3=1,Z2=2,Y2=2,W2=2,V=2] 
* CE 77: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):3+ fun2(Z2,A3):2+ fun3fun4mark(B3,C3,D3):5
     [B3=7,A3=1,Z2=2,Y2=2,W2=2,V=2] 
* CE 78: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):4+ fun2(Y2,Z2):2+ fun3fun4mark(A3,B3,C3):4
     [2*Y2+1>=A3,C3>=A3+1,A3>=3,C3=A3+B3+1,A3+2*X2=2*Y2+1,A3=2*W2+3,A3=2*V+3,Z2=1] 
* CE 79: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):4+ fun2(Y2,Z2):2+ fun3fun4mark(A3,B3,C3):5
     [2*Y2+1>=A3,A3>=3,A3+2*X2=2*Y2+1,A3=2*W2+3,A3=2*V+3,Z2=1] 
* CE 80: start(V,V1,V2) = 2+ fun3fun4mark(V,W2,X2):5
     [V>=0,2*V+3=Y2,Z2=1] 
* CE 81: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):1
     [V1>=0,Y2=0,W2=0,V2=0,V=1] 
* CE 82: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):2
     [V1>=0,Y2=1,W2=1,V2=1,V=1] 
* CE 83: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):3
     [V1>=0,Y2=2,W2=2,V2=2,V=1] 
* CE 84: start(V,V1,V2) = 1+ fun3fun4mark(V2,W2,X2):4
     [X2>=V2+1,V2>=0,V1>=0,X2=V2+W2+1,V=1] 
* CE 85: start(V,V1,V2) = 1+ fun3fun4mark(V2,W2,X2):5
     [V2>=0,V1>=0,V=1] 
* CE 86: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):1+ fun3fun4mark(B3,C3,D3):2
     [D3=1,B3=1,A3=2,Z2=0,Y2=0,W2=0,V=0] 
* CE 87: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):1+ fun3fun4mark(B3,C3,D3):4
     [D3>=2,D3=C3+2,B3=1,A3=2,Z2=0,Y2=0,W2=0,V=0] 
* CE 88: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):1+ fun2(Z2,A3):1+ fun3fun4mark(B3,C3,D3):5
     [B3=1,A3=2,Z2=0,Y2=0,W2=0,V=0] 
* CE 89: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):2
     [D3=1,B3=1,A3=2,Z2=1,Y2=1,W2=1,V=1] 
* CE 90: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):4
     [D3>=2,D3=C3+2,B3=1,A3=2,Z2=1,Y2=1,W2=1,V=1] 
* CE 91: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):2+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):5
     [B3=1,A3=2,Z2=1,Y2=1,W2=1,V=1] 
* CE 92: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):4+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):2
     [D3=1,B3=1,A3=2,Z2=1,Y2=1,X2=0,W2=0,V=0] 
* CE 93: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):4+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):4
     [D3>=2,D3=C3+2,B3=1,A3=2,Z2=1,Y2=1,X2=0,W2=0,V=0] 
* CE 94: start(V,V1,V2) = 2+ fun3fun4mark(W2,X2,Y2):4+ fun2(Z2,A3):3+ fun3fun4mark(B3,C3,D3):5
     [B3=1,A3=2,Z2=1,Y2=1,X2=0,W2=0,V=0] 
* CE 95: start(V,V1,V2) = 2+ fun3fun4mark(V,W2,X2):5
     [V>=0,Y2=1,Z2=2] 
* CE 96: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):1
     [Y2=0,W2=0,V=1] 
* CE 97: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):2
     [Y2=1,W2=1,V=2] 
* CE 98: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):3
     [Y2=2,W2=2,V=3] 
* CE 99: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):4
     [Y2>=W2+1,W2>=0,Y2=W2+X2+1,W2+1=V] 
* CE 100: start(V,V1,V2) = 1+ fun3fun4mark(W2,X2,Y2):5
     [W2>=0,W2+1=V] 
* CE 101: start(V,V1,V2) = 0+ fun3fun4mark(W2,X2,Y2):1
     [Y2=0,W2=0,V=0] 
* CE 102: start(V,V1,V2) = 0+ fun3fun4mark(W2,X2,Y2):2
     [Y2=1,W2=1,V=1] 
* CE 103: start(V,V1,V2) = 0+ fun3fun4mark(W2,X2,Y2):3
     [Y2=2,W2=2,V=2] 
* CE 104: start(V,V1,V2) = 0+ fun3fun4mark(V,W2,X2):4
     [X2>=V+1,V>=0,X2=V+W2+1] 
* CE 105: start(V,V1,V2) = 0+ fun3fun4mark(V,W2,X2):5
     [V>=0] 
* CE 106: start(V,V1,V2) = 0+ fun2(W2,X2):1
     [X2=2,W2=0,V=0] 
* CE 107: start(V,V1,V2) = 0+ fun2(V,W2):2
     [V>=1,W2=1] 
* CE 108: start(V,V1,V2) = 0+ fun2(W2,X2):3
     [X2>=1,X2=W2+1,X2=V+1] 

### Cost equations --> "Loop" of start/3 
* CEs [98] --> Loop 47 
* CEs [57,58,59,60,66,67,76,97,103] --> Loop 48 
* CEs [64,65,74,81,82,83,84,89,90,96,102] --> Loop 49 
* CEs [62,63,68,69,71,72,78,86,87,92,93,99,101,104,106,107,108] --> Loop 50 
* CEs [61,77] --> Loop 51 
* CEs [75,85,91] --> Loop 52 
* CEs [70,73,79,80,88,94,95,100,105] --> Loop 53 

#### Loops of start/3 
* Loop 47: start(V,V1,V2) [V=3] 
* Loop 48: start(V,V1,V2) [V=2] 
* Loop 49: start(V,V1,V2) [V=1] 
* Loop 50: start(V,V1,V2) [V>=0] 
* Loop 51: start(V,V1,V2) [V=2] 
* Loop 52: start(V,V1,V2) [V=1] 
* Loop 53: start(V,V1,V2) [V>=0] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [53]...
* [52]...
* [51]...
* [50]
* [49]
* [48]
* [47]


### Merging Chains  start/3 into  External patterns of execution 
* [[49],[50]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 
* [[52]] --> 4 
* [[51]] --> 5 
* [[53]] --> 6 


Computing Bounds
=====================================

#### Cost of chains of fun2(V,Out):
* Chain [24]: 1
  with precondition: [V=0,Out=2] 

* Chain [23]: 1
  with precondition: [Out=1,V>=1] 

* Chain [22]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of loops [25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42] 

 * loop 25:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
4
 * loop 26:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
2
 * loop 27:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
4
 * loop 28:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
4
 * loop 29:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
2
 * loop 30:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2)] 
2
 * loop 31:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3),fun3fun4mark(A'4,B'4,C'4),fun3fun4mark(A'5,B'5,C'5)] 
1
 * loop 32:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
1
 * loop 33:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
4
 * loop 34:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
1
 * loop 35:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
4
 * loop 36:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
4
 * loop 37:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C'),fun3fun4mark(A'2,B'2,C'2),fun3fun4mark(A'3,B'3,C'3)] 
4
 * loop 38:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C')] 
2
 * loop 39:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C')] 
2
 * loop 40:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C')] 
2
 * loop 41:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C')] 
2
 * loop 42:fun3fun4mark(A,B,C) -> [fun3fun4mark(A',B',C')] 
1
#### Cost of phase [25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42]:fun3fun4mark(A,B,C) -> [] 
34*it(25)+14*it(29)+2*it([43])+0
#### Cost of chains of fun3fun4mark(A,B,C):
* Chain [multiple([25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],[[],[46],[45],[44],[43]])]...: 34*it(25)+14*it(29)+2*it([43])+0
  with precondition: [A>=0] 

* Chain [46]: 1
  with precondition: [A=0,C=0] 

* Chain [45]: 1
  with precondition: [A=1,C=1] 

* Chain [44]: 1
  with precondition: [A=2,C=2] 

* Chain [43]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V,V1,V2):
* Chain [53]...: 1*aux(28)+0
  with precondition: [V>=0] 

* Chain [52]...: 1*aux(29)+0
  with precondition: [V=1] 

* Chain [51]...: 1*aux(30)+0
  with precondition: [V=2] 

* Chain [50]: 5
  with precondition: [V>=0] 

* Chain [49]: 5
  with precondition: [V=1] 

* Chain [48]: 5
  with precondition: [V=2] 

* Chain [47]: 2
  with precondition: [V=3] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [53]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51]... with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50] with precondition: [V>=0] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [49] with precondition: [V=1] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [48] with precondition: [V=2] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [47] with precondition: [V=3] 
    - Upper bound: 2 
    - Complexity: constant 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 43 ms.
* Invariants computed in 63 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 172 ms.
* Termination proved in 25 ms.
* Upper bounds computed in 220 ms.
   - Equation cost structures 39 ms.
   - Phase cost structures 191 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 572 ms.

