
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [first/3]
1. non_recursive  : [s/2]
2. non_recursive  : [sqr/2]
3. non_recursive  : [terms/2]
4. recursive [non_tail,multiple] : [activate/2]
5. non_recursive  : [add/3]
6. non_recursive  : [dbl/2]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into first/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into sqr/2
3. SCC is partially evaluated into terms/2
4. SCC is partially evaluated into activate/2
5. SCC is partially evaluated into add/3
6. SCC is partially evaluated into dbl/2
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations first/3 
* CE 14 is refined into CE [23] 
* CE 13 is refined into CE [24] 


#### Refined cost equations first/3 
* CE 23: first(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 24: first(V,V1,Out) = 1
     [V1>=0,Out=1,V=0] 

### Cost equations --> "Loop" of first/3 
* CEs [23] --> Loop 12 
* CEs [24] --> Loop 13 

#### Loops of first/3 
* Loop 12: first(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 13: first(V,V1,Out) [V1>=0,Out=1,V=0] 

### Ranking functions of CR first(V,V1,Out) 

#### Partial ranking functions of CR first(V,V1,Out) 


### Resulting Chains:first(V,V1,Out) 
* [13]
* [12]


### Merging Chains  first/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations sqr/2 
* CE 19 is refined into CE [25] 
* CE 20 is refined into CE [26] 


#### Refined cost equations sqr/2 
* CE 25: sqr(V,Out) = 1
     [Out=0,V=0] 
* CE 26: sqr(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of sqr/2 
* CEs [25,26] --> Loop 14 

#### Loops of sqr/2 
* Loop 14: sqr(V,Out) [V>=0,Out=0] 

### Ranking functions of CR sqr(V,Out) 

#### Partial ranking functions of CR sqr(V,Out) 


### Resulting Chains:sqr(V,Out) 
* [14]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations terms/2 
* CE 11 is refined into CE [27] 
* CE 12 is refined into CE [28] 


#### Refined cost equations terms/2 
* CE 27: terms(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 28: terms(V,Out) = 1+ sqr(V,W):1
     [V>=0,V+4=Out,W=0] 

### Cost equations --> "Loop" of terms/2 
* CEs [27] --> Loop 15 
* CEs [28] --> Loop 16 

#### Loops of terms/2 
* Loop 15: terms(V,Out) [V>=0,V+1=Out] 
* Loop 16: terms(V,Out) [V>=0,V+4=Out] 

### Ranking functions of CR terms(V,Out) 

#### Partial ranking functions of CR terms(V,Out) 


### Resulting Chains:terms(V,Out) 
* [16]
* [15]


### Merging Chains  terms/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations activate/2 
* CE 18 is refined into CE [29,30] 
* CE 16 is refined into CE [31] 
* CE 17 is refined into CE [32,33] 
* CE 15 is refined into CE [34] 


#### Refined cost equations activate/2 
* CE 29: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ first(A1,Z,B1):1
     [Y>=0,W>=0,Z>=0,W+Y+1=V,X=0,B1=1,A1=0,Out=1] 
* CE 30: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ first(X,A1,Out):2
     [Out>=X+1,Y>=0,W>=0,X>=0,Out=X+Z+1,Out=X+A1+1,W+Y+1=V] 
* CE 31: activate(V,Out) = 2+ activate(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 32: activate(V,Out) = 1+ activate(W,X)+ terms(Y,Out):1
     [W>=0,Out>=4,Out=X+4,Out=Y+4,W+1=V] 
* CE 33: activate(V,Out) = 1+ activate(W,X)+ terms(Y,Out):2
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 
* CE 34: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [34] --> Loop 17 
* CEs [32] --> Loop 18 
* CEs [31,33] --> Loop 19 
* CEs [30] --> Loop 20 
* CEs [29] --> Loop 21 

#### Loops of activate/2 
* Loop 17: activate(A,A) [A>=0] 
* Loop 18: activate(V,Out)->  activate(V',Out')
                  [Out>=4,V>=1,Out=Out'+4,V=V'+1] 
* Loop 19: activate(V,Out)->  activate(V',Out')
                  [Out>=1,V>=1,Out=Out'+1,V=V'+1] 
* Loop 20: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out>=Out'+1,V>=V'+1,Out'>=0,V'>=0,Out'+Out'2+1=Out,V'+V'2+1=V] 
* Loop 21: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [V>=V'+1,Out'2>=0,V'>=0,V'+V'2+1=V,Out'=0,Out=1] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [18,19,20,21]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [18,19,20,21]:
  - RF of loop [18:1,19:1,20:1,20:2,21:1,21:2]:
    V


### Resulting Chains:activate(V,Out) 
* [17]
* [multiple([18,19,20,21],[[17]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[17]] --> 1 
* [[multiple([18,19,20,21],[[17]])]] --> 2 


### Specialization of cost equations add/3 
* CE 22 is refined into CE [35] 
* CE 21 is refined into CE [36] 


#### Refined cost equations add/3 
* CE 35: add(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 36: add(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of add/3 
* CEs [35] --> Loop 22 
* CEs [36] --> Loop 23 

#### Loops of add/3 
* Loop 22: add(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 23: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 

#### Partial ranking functions of CR add(V,V1,Out) 


### Resulting Chains:add(V,V1,Out) 
* [23]
* [22]


### Merging Chains  add/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations dbl/2 
* CE 9 is refined into CE [37] 
* CE 10 is refined into CE [38] 


#### Refined cost equations dbl/2 
* CE 37: dbl(V,Out) = 1
     [Out=0,V=0] 
* CE 38: dbl(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [37,38] --> Loop 24 

#### Loops of dbl/2 
* Loop 24: dbl(V,Out) [V>=0,Out=0] 

### Ranking functions of CR dbl(V,Out) 

#### Partial ranking functions of CR dbl(V,Out) 


### Resulting Chains:dbl(V,Out) 
* [24]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40,41] 
* CE 4 is refined into CE [42,43] 
* CE 5 is refined into CE [44,45] 
* CE 6 is refined into CE [46] 
* CE 7 is refined into CE [47,48] 
* CE 8 is refined into CE [49] 


#### Refined cost equations start/2 
* CE 39: start(V,V1) = 0+ dbl(V,W1):1
     [V>=0,W1=0] 
* CE 40: start(V,V1) = 0+ terms(W1,X1):1
     [X1>=4,X1=W1+4,X1=V+4] 
* CE 41: start(V,V1) = 0+ terms(W1,X1):2
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 42: start(V,V1) = 0+ first(W1,V1,X1):1
     [V1>=0,X1=1,W1=0,V=0] 
* CE 43: start(V,V1) = 0+ first(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 44: start(V,V1) = 0+ activate(V,V):1
     [V>=0] 
* CE 45: start(V,V1) = 0+ activate(V,W1):2
     [4*V>=W1,W1>=1,V>=1] 
* CE 46: start(V,V1) = 0+ sqr(V,W1):1
     [V>=0,W1=0] 
* CE 47: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 48: start(V,V1) = 0+ add(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 49: start(V,V1) = 1
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [39,40,41,42,43,44,45,46,47,48,49] --> Loop 25 

#### Loops of start/2 
* Loop 25: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [25]


### Merging Chains  start/2 into  External patterns of execution 
* [[25]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of first(V,V1,Out):
* Chain [13]: 1
  with precondition: [V=0,Out=1,V1>=0] 

* Chain [12]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of sqr(V,Out):
* Chain [14]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of terms(V,Out):
* Chain [16]: 2
  with precondition: [V+4=Out,V>=0] 

* Chain [15]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of loops [18,19,20,21] 

 * loop 18:activate(V,Out) -> [activate(V',Out')] 
3
 * loop 19:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 20:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
 * loop 21:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
#### Cost of phase [18,19,20,21]:activate(V,Out) -> [] 
9*it(18)+1*it([17])+0
  Such that:aux(3) =< 1
aux(4) =< V
it(18) =< aux(4)
it([17]) =< it(18)+it(18)+aux(3)

#### Cost of chains of activate(V,Out):
* Chain [17]: 1
  with precondition: [V=Out,V>=0] 

* Chain [multiple([18,19,20,21],[[17]])]: 9*it(18)+1*it([17])+0
  Such that:aux(3) =< 1
aux(4) =< V
it(18) =< aux(4)
it([17]) =< it(18)+it(18)+aux(3)

  with precondition: [V>=1,Out>=1,4*V>=Out] 


#### Cost of chains of add(V,V1,Out):
* Chain [23]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [22]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of dbl(V,Out):
* Chain [24]: 1
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V,V1):
* Chain [25]: 9*s(3)+1*s(4)+2
  Such that:s(1) =< 1
s(2) =< V
s(3) =< s(2)
s(4) =< s(3)+s(3)+s(1)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [25] with precondition: [V>=0] 
    - Upper bound: 11*V+3 
    - Complexity: n 

### Maximum cost of start(V,V1): 11*V+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 48 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 137 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 114 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 83 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 402 ms.

