
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun2/3,fun3/2,fun1/2,mark/2]  
 Merged into fun2fun3fun1mark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [fun/2,fun2fun3fun1mark/3,fun4/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into fun2fun3fun1mark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun2fun3fun1mark/3 
* CE 13 is refined into CE [22] 
* CE 16 is refined into CE [23] 
* CE 21 is refined into CE [24] 
* CE 14 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 20 is refined into CE [27] 
* CE 11 is refined into CE [28] 
* CE 7 is refined into CE [29] 
* CE 19 is refined into CE [30] 
* CE 10 is refined into CE [31] 
* CE 12 is refined into CE [32] 
* CE 6 is refined into CE [33] 
* CE 15 is refined into CE [34] 
* CE 18 is refined into CE [35] 
* CE 8 is refined into CE [36] 
* CE 17 is refined into CE [37] 


#### Refined cost equations fun2fun3fun1mark/3 
* CE 22: fun2fun3fun1mark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 23: fun2fun3fun1mark(A,B,C) = 1
     [A>=0,A+1=C] 
* CE 24: fun2fun3fun1mark(A,B,C) = 1
     [C=1,A=1] 
* CE 25: fun2fun3fun1mark(A,B,C) = 1
     [C=0,A=0] 
* CE 26: fun2fun3fun1mark(A,B,C) = 2+ fun2fun3fun1mark(D,E,F)
     [F>=0,D>=0,F+1=C,D+1=A] 
* CE 27: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)
     [A+F>=C,C>=F+1,A+F=C+D] 
* CE 28: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(B,D,C)
     [B>=0,A=0] 
* CE 29: fun2fun3fun1mark(A,B,C) = 2+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(G,H,I)+ fun2fun3fun1mark(J,K,L)
     [C+J>=I+L+1,I>=J+1,J>=0,G>=0,D>=0,F+I+L=C+J,D+G+1=A] 
* CE 30: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(G,H,I)+ fun2fun3fun1mark(F,I,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 31: fun2fun3fun1mark(A,B,C) = 2+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(F,G,H)+ fun2fun3fun1mark(H,I,J)
     [F>=0,D>=0,F+J+4=C,D+1=A] 
* CE 32: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(B,G,H)+ fun2fun3fun1mark(F,H,I)
     [D>=0,B>=0,I+1=C,D+1=A] 
* CE 33: fun2fun3fun1mark(A,B,C) = 2+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(G,H,I)
     [I>=0,G>=0,F>=0,D>=0,F+I+1=C,D+G+1=A] 
* CE 34: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(F,G,H)
     [D>=0,H+2=C,D+1=A] 
* CE 35: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(F,G,C)
     [D>=0,D+1=A] 
* CE 36: fun2fun3fun1mark(A,B,C) = 2+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(G,H,I)
     [I>=0,G>=0,D>=0,D+G+1=A,F=0,C=1] 
* CE 37: fun2fun3fun1mark(A,B,C) = 1+ fun2fun3fun1mark(D,E,F)+ fun2fun3fun1mark(F,G,H)+ fun2fun3fun1mark(D,I,J)+ fun2fun3fun1mark(J,K,L)+ fun2fun3fun1mark(H,L,M)
     [D>=0,M+1=C,D+1=A] 

### Cost equations --> "Loop" of fun2fun3fun1mark/3 
* CEs [37] --> Loop 17 
* CEs [33] --> Loop 18 
* CEs [34] --> Loop 19 
* CEs [35] --> Loop 20 
* CEs [36] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 
* CEs [26,27] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [22] --> Loop 28 
* CEs [23] --> Loop 29 
* CEs [24] --> Loop 30 
* CEs [25] --> Loop 31 

#### Loops of fun2fun3fun1mark/3 
* Loop 17: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(C',A'2,B'2)  fun2fun3fun1mark(A',A'3,B'3)  fun2fun3fun1mark(B'3,A'4,B'4)  fun2fun3fun1mark(B'2,B'4,A'5)
                  [A'>=0,C=A'5+1,A'+1=A] 
* Loop 18: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(A'2,B'2,C'2)
                  [C>=C'+1,A>=A'+1,C'>=0,A'>=0,C'+C'2+1=C,A'+A'2+1=A] 
* Loop 19: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(C',A'2,B'2)
                  [A>=1,C=B'2+2,A=A'+1] 
* Loop 20: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(C',A'2,C)
                  [A>=1,A=A'+1] 
* Loop 21: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(A'2,B'2,C'2)
                  [A>=A'+1,C'2>=0,A'>=0,A'+A'2+1=A,C'=0,C=1] 
* Loop 22: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(A'2,B'2,C'2)  fun2fun3fun1mark(A'3,B'3,C'3)
                  [C'2>=A'3+1,A>=A'+1,A'3>=0,C'>=1,A'>=0,C'+C'2+C'3=C+A'3,A'+A'2+1=A] 
* Loop 23: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(A'2,B'2,C'2)  fun2fun3fun1mark(C',C'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 24: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(C',A'2,B'2)  fun2fun3fun1mark(B'2,A'3,B'3)
                  [C'>=0,A>=1,C'+B'3+4=C,A=A'+1] 
* Loop 25: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')  fun2fun3fun1mark(B,A'2,B'2)  fun2fun3fun1mark(C',B'2,A'3)
                  [B>=0,A>=1,C=A'3+1,A=A'+1] 
* Loop 26: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(A',B',C')
                  [A>=A'+1,A'>=0,C+A'=A+C'] 
* Loop 27: fun2fun3fun1mark(A,B,C)->  fun2fun3fun1mark(B,A',C)
                  [B>=0,A=0] 
* Loop 28: fun2fun3fun1mark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 29: fun2fun3fun1mark(A,B,C) [A>=0,A+1=C] 
* Loop 30: fun2fun3fun1mark(A,B,C) [C=1,A=1] 
* Loop 31: fun2fun3fun1mark(A,B,C) [C=0,A=0] 

### Ranking functions of CR fun2fun3fun1mark(A,B,C) 

#### Partial ranking functions of CR fun2fun3fun1mark(A,B,C) 
* Partial RF of phase [17,18,19,20,21,22,23,24,25,26,27]:
  - RF of loop [17:1,17:3,18:1,18:2,19:1,20:1,21:1,21:2,22:1,22:2,23:1,23:2,24:1,25:1,26:1]:
    A depends on loops [17:2,17:4,17:5,19:2,20:2,22:3,23:3,24:2,24:3,25:2,25:3,27:1] 


### Resulting Chains:fun2fun3fun1mark(A,B,C) 
* [multiple([17,18,19,20,21,22,23,24,25,26,27],[[],[31],[30],[29],[28]])]...
* [31]
* [30]
* [29]
* [28]


### Merging Chains  fun2fun3fun1mark/3 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 
* [[multiple([17,18,19,20,21,22,23,24,25,26,27],[[],[31],[30],[29],[28]])]] --> 5 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [38] 
* CE 3 is refined into CE [39,40,41,42,43] 
* CE 4 is refined into CE [44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60] 
* CE 5 is refined into CE [61,62,63,64,65] 


#### Refined cost equations start/2 
* CE 38: start(V,V1) = 1
     [V>=0] 
* CE 39: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):1
     [V1>=1,V>=1,Y1=0,W1=0] 
* CE 40: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):2
     [V1>=2,V>=1,Y1=1,W1=1] 
* CE 41: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):3
     [V1>=Y1,Y1>=1,V>=1,Y1=W1+1] 
* CE 42: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):4
     [Y1>=W1+1,V1>=W1+1,W1>=0,V>=1,Y1=W1+X1+1] 
* CE 43: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):5
     [V1>=W1+1,W1>=0,V>=1] 
* CE 44: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):1+ fun2fun3fun1mark(Z1,A2,B2):1
     [B2=0,Z1=0,Y1=0,W1=0,V=0] 
* CE 45: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):1+ fun2fun3fun1mark(Z1,A2,B2):3
     [B2=1,Z1=0,Y1=0,W1=0,V=0] 
* CE 46: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):1+ fun2fun3fun1mark(Z1,A2,B2):4
     [B2>=1,B2=A2+1,Z1=0,Y1=0,W1=0,V=0] 
* CE 47: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):1+ fun2fun3fun1mark(Z1,A2,B2):5
     [Z1=0,Y1=0,W1=0,V=0] 
* CE 48: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):2+ fun2fun3fun1mark(Z1,A2,B2):2
     [B2=1,Z1=1,Y1=1,W1=1,V=1] 
* CE 49: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):2+ fun2fun3fun1mark(Z1,A2,B2):3
     [B2=2,Z1=1,Y1=1,W1=1,V=1] 
* CE 50: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):2+ fun2fun3fun1mark(Z1,A2,B2):4
     [B2>=2,B2=A2+2,Z1=1,Y1=1,W1=1,V=1] 
* CE 51: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):2+ fun2fun3fun1mark(Z1,A2,B2):5
     [Z1=1,Y1=1,W1=1,V=1] 
* CE 52: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):3+ fun2fun3fun1mark(Z1,A2,B2):2
     [B2=1,Z1=1,Y1=1,W1=0,V=0] 
* CE 53: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):3+ fun2fun3fun1mark(Z1,A2,B2):3
     [B2>=2,B2=Z1+1,B2=Y1+1,B2=W1+2,B2=V+2] 
* CE 54: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):3+ fun2fun3fun1mark(Y1,Z1,A2):4
     [A2>=Y1+1,Y1>=1,A2=Y1+Z1+1,Y1=W1+1,Y1=V+1] 
* CE 55: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):3+ fun2fun3fun1mark(Y1,Z1,A2):5
     [Y1>=1,Y1=W1+1,Y1=V+1] 
* CE 56: start(V,V1) = 1+ fun2fun3fun1mark(W1,X1,Y1):4+ fun2fun3fun1mark(Z1,A2,B2):2
     [B2=1,Z1=1,Y1=1,X1=0,W1=0,V=0] 
* CE 57: start(V,V1) = 1+ fun2fun3fun1mark(V,W1,X1):4+ fun2fun3fun1mark(Y1,Z1,A2):3
     [A2>=V+2,V>=0,A2=V+W1+2,A2=Y1+1,A2=X1+1] 
* CE 58: start(V,V1) = 1+ fun2fun3fun1mark(V,W1,X1):4+ fun2fun3fun1mark(X1,Y1,Z1):4
     [Z1>=X1+1,X1>=V+1,V>=0,Z1=X1+Y1+1,X1=V+W1+1] 
* CE 59: start(V,V1) = 1+ fun2fun3fun1mark(V,W1,X1):4+ fun2fun3fun1mark(X1,Y1,Z1):5
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 60: start(V,V1) = 1+ fun2fun3fun1mark(V,W1,X1):5
     [V>=0] 
* CE 61: start(V,V1) = 0+ fun2fun3fun1mark(W1,X1,Y1):1
     [Y1=0,W1=0,V=0] 
* CE 62: start(V,V1) = 0+ fun2fun3fun1mark(W1,X1,Y1):2
     [Y1=1,W1=1,V=1] 
* CE 63: start(V,V1) = 0+ fun2fun3fun1mark(W1,X1,Y1):3
     [Y1>=1,Y1=W1+1,Y1=V+1] 
* CE 64: start(V,V1) = 0+ fun2fun3fun1mark(V,W1,X1):4
     [X1>=V+1,V>=0,X1=V+W1+1] 
* CE 65: start(V,V1) = 0+ fun2fun3fun1mark(V,W1,X1):5
     [V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [51] --> Loop 32 
* CEs [43,47,55,59,60,65] --> Loop 33 
* CEs [48,49,50,62] --> Loop 34 
* CEs [38,39,40,41,42,44,45,46,52,53,54,56,57,58,61,63,64] --> Loop 35 

#### Loops of start/2 
* Loop 32: start(V,V1) [V=1] 
* Loop 33: start(V,V1) [V>=0] 
* Loop 34: start(V,V1) [V=1] 
* Loop 35: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [35]
* [34]
* [33]...
* [32]...


### Merging Chains  start/2 into  External patterns of execution 
* [[34],[35]] --> 1 
* [[32]] --> 2 
* [[33]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [17,18,19,20,21,22,23,24,25,26,27] 

 * loop 17:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2),fun2fun3fun1mark(A'3,B'3,C'3),fun2fun3fun1mark(A'4,B'4,C'4),fun2fun3fun1mark(A'5,B'5,C'5)] 
1
 * loop 18:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2)] 
2
 * loop 19:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2)] 
1
 * loop 20:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2)] 
1
 * loop 21:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2)] 
2
 * loop 22:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2),fun2fun3fun1mark(A'3,B'3,C'3)] 
2
 * loop 23:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2),fun2fun3fun1mark(A'3,B'3,C'3)] 
1
 * loop 24:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2),fun2fun3fun1mark(A'3,B'3,C'3)] 
2
 * loop 25:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C'),fun2fun3fun1mark(A'2,B'2,C'2),fun2fun3fun1mark(A'3,B'3,C'3)] 
1
 * loop 26:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C')] 
2
 * loop 27:fun2fun3fun1mark(A,B,C) -> [fun2fun3fun1mark(A',B',C')] 
1
#### Cost of phase [17,18,19,20,21,22,23,24,25,26,27]:fun2fun3fun1mark(A,B,C) -> [] 
16*it(17)+4*it([28])+0
#### Cost of chains of fun2fun3fun1mark(A,B,C):
* Chain [multiple([17,18,19,20,21,22,23,24,25,26,27],[[],[31],[30],[29],[28]])]...: 16*it(17)+4*it([28])+0
  with precondition: [A>=0] 

* Chain [31]: 1
  with precondition: [A=0,C=0] 

* Chain [30]: 1
  with precondition: [A=1,C=1] 

* Chain [29]: 1
  with precondition: [A+1=C,A>=0] 

* Chain [28]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V,V1):
* Chain [35]: 3
  with precondition: [V>=0] 

* Chain [34]: 3
  with precondition: [V=1] 

* Chain [33]...: 1*aux(2)+0
  with precondition: [V>=0] 

* Chain [32]...: 20*s(13)+2
  with precondition: [V=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [35] with precondition: [V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [V=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [33]... with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 107 ms.
* Termination proved in 15 ms.
* Upper bounds computed in 88 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 73 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 312 ms.

