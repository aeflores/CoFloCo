
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun3/2]
1. recursive [non_tail,multiple] : [fun/3,fun1/2,fun2/3,mark/2]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun3/2
1. SCC is partially evaluated into mark/2
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun3/2 
* CE 19 is refined into CE [21] 
* CE 20 is refined into CE [22] 
* CE 18 is refined into CE [23] 


#### Refined cost equations fun3/2 
* CE 21: fun3(V1,Out) = 1
     [V1+1>=Out,Out>=2] 
* CE 22: fun3(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 23: fun3(V1,Out) = 1
     [Out=0,V1=1] 

### Cost equations --> "Loop" of fun3/2 
* CEs [21] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [23] --> Loop 16 

#### Loops of fun3/2 
* Loop 14: fun3(V1,Out) [V1+1>=Out,Out>=2] 
* Loop 15: fun3(V1,Out) [V1>=0,V1+1=Out] 
* Loop 16: fun3(V1,Out) [Out=0,V1=1] 

### Ranking functions of CR fun3(V1,Out) 

#### Partial ranking functions of CR fun3(V1,Out) 


### Resulting Chains:fun3(V1,Out) 
* [16]
* [15]
* [14]


### Merging Chains  fun3/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 


### Specialization of cost equations mark/2 
* CE 17 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 14 is refined into CE [26,27,28] 
* CE 16 is refined into CE [29] 
* CE 15 is refined into CE [30] 
* CE 8 is refined into CE [31] 
* CE 13 is refined into CE [32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34] 
* CE 9 is refined into CE [35] 


#### Refined cost equations mark/2 
* CE 24: mark(V1,Out) = 1+ mark(W1,X1)
     [V1+X1>=Out,Out>=X1+1,V1+X1=Out+W1] 
* CE 25: mark(V1,Out) = 2+ mark(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 26: mark(V1,Out) = 1+ mark(W1,X1)+ fun3(Y1,Z1):1
     [W1>=0,W1+1=V1,X1=1,Z1=0,Y1=1,Out=0] 
* CE 27: mark(V1,Out) = 1+ mark(W1,X1)+ fun3(Y1,Out):2
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 28: mark(V1,Out) = 1+ mark(W1,X1)+ fun3(X1,Out):3
     [X1+1>=Out,W1>=0,Out>=2,W1+1=V1] 
* CE 29: mark(A,A) = 1
     [A>=1] 
* CE 30: mark(V1,Out) = 1
     [Out=0,V1=0] 
* CE 31: mark(V1,Out) = 2+ mark(W1,X1)+ mark(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 32: mark(V1,Out) = 2+ mark(W1,X1)+ mark(X1,Y1)
     [X1>=0,W1>=0,X1+Y1+3=Out,W1+1=V1] 
* CE 33: mark(V1,Out) = 2+ mark(W1,X1)+ mark(Y1,Z1)
     [Z1>=0,Y1>=0,W1>=0,W1+Y1+1=V1,X1=0,Out=1] 
* CE 34: mark(V1,Out) = 2+ mark(W1,X1)+ mark(Y1,Z1)+ mark(A2,B2)
     [Out+A2>=Z1+B2+1,Z1>=A2+1,A2>=0,Y1>=0,W1>=0,X1+Z1+B2=Out+A2,W1+Y1+1=V1] 
* CE 35: mark(V1,Out) = 2+ mark(W1,X1)+ mark(Y1,Z1)+ mark(Z1,Out)
     [Z1>=0,Y1>=0,W1>=0,W1+Y1+1=V1,X1=0] 

### Cost equations --> "Loop" of mark/2 
* CEs [34] --> Loop 17 
* CEs [35] --> Loop 18 
* CEs [31] --> Loop 19 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [24,25,27] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of mark/2 
* Loop 17: mark(V1,Out)->  mark(V1',Out')  mark(V1'2,Out'2)  mark(V1'3,Out'3)
                  [Out'2>=V1'3+1,V1>=V1'+1,V1'3>=0,Out'>=1,V1'>=0,Out'+Out'2+Out'3=Out+V1'3,V1'+V1'2+1=V1] 
* Loop 18: mark(V1,Out)->  mark(V1',Out')  mark(V1'2,Out'2)  mark(Out'2,Out)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0] 
* Loop 19: mark(V1,Out)->  mark(V1',Out')  mark(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 20: mark(V1,Out)->  mark(V1',Out')  mark(Out',A'2)
                  [Out'>=0,V1>=1,Out'+A'2+3=Out,V1=V1'+1] 
* Loop 21: mark(V1,Out)->  mark(V1',Out')  mark(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0,Out=1] 
* Loop 22: mark(A,A) [A>=1] 
* Loop 23: mark(V1,Out) [Out=0,V1=0] 
* Loop 24: mark(V1,Out)->  mark(V1',Out')
                  [Out'+1>=Out,Out>=2,V1>=1,V1=V1'+1] 
* Loop 25: mark(V1,Out)->  mark(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out+V1'=V1+Out'] 
* Loop 26: mark(V1,Out)->  mark(V1',Out')
                  [V1>=1,V1=V1'+1,Out'=1,Out=0] 

### Ranking functions of CR mark(V1,Out) 

#### Partial ranking functions of CR mark(V1,Out) 
* Partial RF of phase [17,18,19,20,21,24,25,26]:
  - RF of loop [17:1,17:2,18:1,18:2,19:1,19:2,20:1,21:1,21:2,24:1,25:1,26:1]:
    V1 depends on loops [17:3,18:3,20:2] 


### Resulting Chains:mark(V1,Out) 
* [multiple([17,18,19,20,21,24,25,26],[[],[23],[22]])]...
* [23]
* [22]


### Merging Chains  mark/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[multiple([17,18,19,20,21,24,25,26],[[],[23],[22]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [36] 
* CE 3 is refined into CE [37,38,39] 
* CE 4 is refined into CE [40,41,42] 
* CE 5 is refined into CE [43,44,45] 
* CE 6 is refined into CE [46,47,48] 
* CE 7 is refined into CE [49,50,51] 


#### Refined cost equations start/2 
* CE 36: start(V1,V) = 1
     [V1>=0] 
* CE 37: start(V1,V) = 1+ mark(W1,X1):1
     [X1=0,W1=0,V=0,V1=0] 
* CE 38: start(V1,V) = 1+ mark(V,V):2
     [V>=1,V1=0] 
* CE 39: start(V1,V) = 1+ mark(V,W1):3
     [V>=1,V1=0] 
* CE 40: start(V1,V) = 1+ mark(W1,X1):1
     [V>=1,V1>=1,X1=0,W1=0] 
* CE 41: start(V1,V) = 1+ mark(W1,W1):2
     [V>=W1+1,W1>=1,V1>=1] 
* CE 42: start(V1,V) = 1+ mark(W1,X1):3
     [V>=W1+1,W1>=1,V1>=1] 
* CE 43: start(V1,V) = 1+ mark(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 44: start(V1,V) = 1+ mark(V1,V1):2
     [V1>=1] 
* CE 45: start(V1,V) = 1+ mark(V1,W1):3
     [V1>=1] 
* CE 46: start(V1,V) = 0+ fun3(W1,X1):1
     [X1=0,W1=1,V1=1] 
* CE 47: start(V1,V) = 0+ fun3(W1,X1):2
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 48: start(V1,V) = 0+ fun3(V1,W1):3
     [V1+1>=W1,W1>=2] 
* CE 49: start(V1,V) = 0+ mark(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 50: start(V1,V) = 0+ mark(V1,V1):2
     [V1>=1] 
* CE 51: start(V1,V) = 0+ mark(V1,W1):3
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [42,45,51] --> Loop 27 
* CEs [39] --> Loop 28 
* CEs [46] --> Loop 29 
* CEs [36,37,38,40,41,43,44,47,48,49,50] --> Loop 30 

#### Loops of start/2 
* Loop 27: start(V1,V) [V1>=1] 
* Loop 28: start(V1,V) [V>=1,V1=0] 
* Loop 29: start(V1,V) [V1=1] 
* Loop 30: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [30]
* [29]
* [28]...
* [27]...


### Merging Chains  start/2 into  External patterns of execution 
* [[29],[30]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of fun3(V1,Out):
* Chain [16]: 1
  with precondition: [V1=1,Out=0] 

* Chain [15]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [14]: 1
  with precondition: [Out>=2,V1+1>=Out] 


#### Cost of loops [17,18,19,20,21,24,25,26] 

 * loop 17:mark(V1,Out) -> [mark(V1',Out'),mark(V1'2,Out'2),mark(V1'3,Out'3)] 
2
 * loop 18:mark(V1,Out) -> [mark(V1',Out'),mark(V1'2,Out'2),mark(V1'3,Out'3)] 
2
 * loop 19:mark(V1,Out) -> [mark(V1',Out'),mark(V1'2,Out'2)] 
2
 * loop 20:mark(V1,Out) -> [mark(V1',Out'),mark(V1'2,Out'2)] 
2
 * loop 21:mark(V1,Out) -> [mark(V1',Out'),mark(V1'2,Out'2)] 
2
 * loop 24:mark(V1,Out) -> [mark(V1',Out')] 
2
 * loop 25:mark(V1,Out) -> [mark(V1',Out')] 
2
 * loop 26:mark(V1,Out) -> [mark(V1',Out')] 
2
#### Cost of phase [17,18,19,20,21,24,25,26]:mark(V1,Out) -> [] 
6*it(17)+11*it(19)+1*it([23])+0
#### Cost of chains of mark(V1,Out):
* Chain [multiple([17,18,19,20,21,24,25,26],[[],[23],[22]])]...: 6*it(17)+11*it(19)+1*it([23])+0
  with precondition: [V1>=1] 

* Chain [23]: 1
  with precondition: [V1=0,Out=0] 

* Chain [22]: 1
  with precondition: [V1=Out,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [30]: 2
  with precondition: [V1>=0] 

* Chain [29]: 1
  with precondition: [V1=1] 

* Chain [28]...: 18*s(1)+1
  with precondition: [V1=0,V>=1] 

* Chain [27]...: 1*aux(9)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [30] with precondition: [V1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [29] with precondition: [V1=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [28]... with precondition: [V1=0,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 26 ms.
* Invariants computed in 71 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 23 ms.
* Refinement performed in 209 ms.
* Termination proved in 27 ms.
* Upper bounds computed in 216 ms.
   - Equation cost structures 43 ms.
   - Phase cost structures 188 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 610 ms.

