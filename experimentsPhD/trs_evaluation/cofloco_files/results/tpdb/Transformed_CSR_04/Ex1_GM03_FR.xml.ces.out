
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
1. non_recursive  : [p/2]
2. non_recursive  : [s/2]
3. recursive [non_tail,multiple] : [activate/2,diff/3,if/4]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 11 is refined into CE [14] 
* CE 13 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations activate/2 
* CE 14: activate(V1,Out) = 2
     [Out=0,V1=0] 
* CE 15: activate(A,A) = 1
     [A>=0] 
* CE 16: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 17: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 18: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,W1+Y1+1=V1,Out=0] 
* CE 19: activate(V1,Out) = 3+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,Out)
     [Y1>=0,W1>=0,W1+Y1+1=V1,A2=0,Z1=0,X1=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [19] --> Loop 7 
* CEs [17] --> Loop 8 
* CEs [18] --> Loop 9 
* CEs [16] --> Loop 10 
* CEs [14,15] --> Loop 11 

#### Loops of activate/2 
* Loop 7: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out)
                  [V1'2>=0,V1'>=0,V1'+V1'2+1=V1,V1'3=0,Out'2=0,Out'=0] 
* Loop 8: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 9: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=V1'+1,Out'2>=0,Out'>=0,V1'>=0,V1'+V1'2+1=V1,Out=0] 
* Loop 10: activate(V1,Out)->  activate(V1',Out')
                  [Out'>=0,V1'>=0,Out'+1=Out,V1'+1=V1] 
* Loop 11: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [7,8,9,10]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [7,8,9,10]:
  - RF of loop [7:1,7:2,7:3,8:1,8:2,9:1,9:2,10:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [11]
* [multiple([7,8,9,10],[[11]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[11]] --> 1 
* [[multiple([7,8,9,10],[[11]])]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [20] 
* CE 3 is refined into CE [21] 
* CE 4 is refined into CE [22,23] 
* CE 5 is refined into CE [24] 
* CE 6 is refined into CE [25,26] 
* CE 7 is refined into CE [27,28] 


#### Refined cost equations start/3 
* CE 20: start(V1,V,V2) = 1
     [] 
* CE 21: start(V1,V,V2) = 0
     [V2>=0,V>=0,V1>=0] 
* CE 22: start(V1,V,V2) = 1+ activate(V2,V2):1
     [V2>=0,V>=0,V1=0] 
* CE 23: start(V1,V,V2) = 1+ activate(V2,W2):2
     [V2>=W2,W2>=0,V2>=1,V>=0,V1=0] 
* CE 24: start(V1,V,V2) = 2+ activate(W2,X2):1
     [X2=0,W2=0,V=0,V1=0] 
* CE 25: start(V1,V,V2) = 1+ activate(V,V):1
     [V>=0,V2>=0,V1=1] 
* CE 26: start(V1,V,V2) = 1+ activate(V,W2):2
     [V>=W2,W2>=0,V>=1,V2>=0,V1=1] 
* CE 27: start(V1,V,V2) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 28: start(V1,V,V2) = 0+ activate(V1,W2):2
     [V1>=W2,W2>=0,V1>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [20,21,22,23,24,25,26,27,28] --> Loop 12 

#### Loops of start/3 
* Loop 12: start(V1,V,V2) [] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [12]


### Merging Chains  start/3 into  External patterns of execution 
* [[12]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7,8,9,10] 

 * loop 7:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3)] 
3
 * loop 8:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 9:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 10:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [7,8,9,10]:activate(V1,Out) -> [] 
9*it(7)+2*it([11])+0
  Such that:it([11]) =< 2*V1+1
aux(1) =< V1
it(7) =< aux(1)

#### Cost of chains of activate(V1,Out):
* Chain [11]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [multiple([7,8,9,10],[[11]])]: 9*it(7)+2*it([11])+0
  Such that:it([11]) =< 2*V1+1
aux(1) =< V1
it(7) =< aux(1)

  with precondition: [V1>=1,Out>=0,V1>=Out] 


#### Cost of chains of start(V1,V,V2):
* Chain [12]: 2*s(1)+9*s(3)+2*s(4)+9*s(6)+2*s(7)+9*s(9)+4
  Such that:s(8) =< V1
s(7) =< 2*V1+1
s(5) =< V
s(4) =< 2*V+1
s(2) =< V2
s(1) =< 2*V2+1
s(9) =< s(8)
s(6) =< s(5)
s(3) =< s(2)

  with precondition: [] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: nat(V1)*9+4+nat(V)*9+nat(V2)*9+nat(2*V1+1)*2+nat(2*V+1)*2+nat(2*V2+1)*2 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): nat(V1)*9+4+nat(V)*9+nat(V2)*9+nat(2*V1+1)*2+nat(2*V+1)*2+nat(2*V2+1)*2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 36 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 42 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 32 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 135 ms.

