
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [natsFrom/2]
1. non_recursive  : [s/2]
2. recursive [non_tail] : [activate/2]
3. non_recursive  : [snd/2]
4. non_recursive  : [splitAt/3]
5. non_recursive  : [afterNth/3]
6. non_recursive  : [fst/2]
7. non_recursive  : [head/2]
8. non_recursive  : [sel/3]
9. non_recursive  : [tail/2]
10. non_recursive  : [take/3]
11. non_recursive  : [u/5]
12. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into natsFrom/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into snd/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into afterNth/3
6. SCC is partially evaluated into fst/2
7. SCC is partially evaluated into head/2
8. SCC is partially evaluated into sel/3
9. SCC is partially evaluated into tail/2
10. SCC is partially evaluated into take/3
11. SCC is partially evaluated into u/5
12. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations natsFrom/2 
* CE 13 is refined into CE [31] 
* CE 14 is refined into CE [32] 


#### Refined cost equations natsFrom/2 
* CE 31: natsFrom(V,Out) = 1
     [V>=0,2*V+3=Out] 
* CE 32: natsFrom(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of natsFrom/2 
* CEs [31] --> Loop 19 
* CEs [32] --> Loop 20 

#### Loops of natsFrom/2 
* Loop 19: natsFrom(V,Out) [V>=0,2*V+3=Out] 
* Loop 20: natsFrom(V,Out) [V>=0,V+1=Out] 

### Ranking functions of CR natsFrom(V,Out) 

#### Partial ranking functions of CR natsFrom(V,Out) 


### Resulting Chains:natsFrom(V,Out) 
* [20]
* [19]


### Merging Chains  natsFrom/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations activate/2 
* CE 20 is refined into CE [33] 
* CE 21 is refined into CE [34,35] 
* CE 19 is refined into CE [36] 


#### Refined cost equations activate/2 
* CE 33: activate(V,Out) = 2+ activate(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 34: activate(V,Out) = 1+ activate(W,X)+ natsFrom(Y,Out):1
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 
* CE 35: activate(V,Out) = 1+ activate(W,X)+ natsFrom(Y,Out):2
     [W>=0,Out>=3,W+1=V,Out=2*X+3,Out=2*Y+3] 
* CE 36: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [36] --> Loop 21 
* CEs [33,34] --> Loop 22 
* CEs [35] --> Loop 23 

#### Loops of activate/2 
* Loop 21: activate(A,A) [A>=0] 
* Loop 22: activate(V,Out)->  activate(V',Out')
                  [Out>=1,V>=1,Out=Out'+1,V=V'+1] 
* Loop 23: activate(V,Out)->  activate(V',Out')
                  [Out>=3,V>=1,V=V'+1,Out=2*Out'+3] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [22,23]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1,23:1]:
    V


### Resulting Chains:activate(V,Out) 
* [[22,23],21]
* [21]


### Merging Chains  activate/2 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[22,23]]] --> 2 


### Specialization of cost equations snd/2 
* CE 22 is refined into CE [37] 
* CE 23 is refined into CE [38] 


#### Refined cost equations snd/2 
* CE 37: snd(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 38: snd(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of snd/2 
* CEs [37] --> Loop 24 
* CEs [38] --> Loop 25 

#### Loops of snd/2 
* Loop 24: snd(V,Out) [V>=Out+1,Out>=0] 
* Loop 25: snd(V,Out) [V>=0,Out=0] 

### Ranking functions of CR snd(V,Out) 

#### Partial ranking functions of CR snd(V,Out) 


### Resulting Chains:snd(V,Out) 
* [25]
* [24]


### Merging Chains  snd/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations afterNth/3 
* CE 25 is refined into CE [39,40] 


#### Refined cost equations afterNth/3 
* CE 39: afterNth(V,V1,Out) = 2+ snd(W1,X1):1
     [W1>=1,W1=V1+1,X1=0,Out=0,V=0] 
* CE 40: afterNth(V,V1,Out) = 2+ snd(W1,Out):2
     [W1>=Out+1,Out>=0,W1=V1+1,V=0] 

### Cost equations --> "Loop" of afterNth/3 
* CEs [39,40] --> Loop 26 

#### Loops of afterNth/3 
* Loop 26: afterNth(V,V1,Out) [V1>=Out,Out>=0,V=0] 

### Ranking functions of CR afterNth(V,V1,Out) 

#### Partial ranking functions of CR afterNth(V,V1,Out) 


### Resulting Chains:afterNth(V,V1,Out) 
* [26]


### Merging Chains  afterNth/3 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations fst/2 
* CE 26 is refined into CE [41] 
* CE 27 is refined into CE [42] 


#### Refined cost equations fst/2 
* CE 41: fst(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 42: fst(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of fst/2 
* CEs [41] --> Loop 27 
* CEs [42] --> Loop 28 

#### Loops of fst/2 
* Loop 27: fst(V,Out) [V>=Out+1,Out>=0] 
* Loop 28: fst(V,Out) [V>=0,Out=0] 

### Ranking functions of CR fst(V,Out) 

#### Partial ranking functions of CR fst(V,Out) 


### Resulting Chains:fst(V,Out) 
* [28]
* [27]


### Merging Chains  fst/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations head/2 
* CE 17 is refined into CE [43] 
* CE 18 is refined into CE [44] 


#### Refined cost equations head/2 
* CE 43: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 44: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [43] --> Loop 29 
* CEs [44] --> Loop 30 

#### Loops of head/2 
* Loop 29: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 30: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [30]
* [29]


### Merging Chains  head/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations sel/3 
* CE 30 is refined into CE [45,46] 


#### Refined cost equations sel/3 
* CE 45: sel(V,V1,Out) = 1+ afterNth(W1,V1,X1):1+ head(X1,Y1):1
     [V1>=X1,X1>=0,Y1=0,W1=0,Out=0,V=0] 
* CE 46: sel(V,V1,Out) = 1+ afterNth(W1,V1,X1):1+ head(X1,Out):2
     [X1>=Out+1,V1>=X1,Out>=0,W1=0,V=0] 

### Cost equations --> "Loop" of sel/3 
* CEs [46] --> Loop 31 
* CEs [45] --> Loop 32 

#### Loops of sel/3 
* Loop 31: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 
* Loop 32: sel(V,V1,Out) [V1>=0,Out=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 

#### Partial ranking functions of CR sel(V,V1,Out) 


### Resulting Chains:sel(V,V1,Out) 
* [32]
* [31]


### Merging Chains  sel/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations tail/2 
* CE 28 is refined into CE [47,48] 
* CE 29 is refined into CE [49] 


#### Refined cost equations tail/2 
* CE 47: tail(V,Out) = 1+ activate(Out,Out):1
     [V>=Out+1,Out>=0] 
* CE 48: tail(V,Out) = 1+ activate(W,Out):2
     [Out>=W,V>=W+1,W>=1] 
* CE 49: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [47] --> Loop 33 
* CEs [48] --> Loop 34 
* CEs [49] --> Loop 35 

#### Loops of tail/2 
* Loop 33: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 34: tail(V,Out) [Out>=1,V>=2] 
* Loop 35: tail(V,Out) [V>=0,Out=0] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [35]
* [34]
* [33]


### Merging Chains  tail/2 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations take/3 
* CE 24 is refined into CE [50,51] 


#### Refined cost equations take/3 
* CE 50: take(V,V1,Out) = 2+ fst(W1,X1):1
     [W1>=1,W1=V1+1,X1=0,Out=0,V=0] 
* CE 51: take(V,V1,Out) = 2+ fst(W1,Out):2
     [W1>=Out+1,Out>=0,W1=V1+1,V=0] 

### Cost equations --> "Loop" of take/3 
* CEs [50,51] --> Loop 36 

#### Loops of take/3 
* Loop 36: take(V,V1,Out) [V1>=Out,Out>=0,V=0] 

### Ranking functions of CR take(V,V1,Out) 

#### Partial ranking functions of CR take(V,V1,Out) 


### Resulting Chains:take(V,V1,Out) 
* [36]


### Merging Chains  take/3 into  External patterns of execution 
* [[36]] --> 1 


### Specialization of cost equations u/5 
* CE 15 is refined into CE [52,53] 
* CE 16 is refined into CE [54] 


#### Refined cost equations u/5 
* CE 52: u(V,V1,V2,V3,Out) = 1+ activate(V2,V2):1
     [V2>=0,V3>=0,V1>=0,V>=1,V+V2+1=Out] 
* CE 53: u(V,V1,V2,V3,Out) = 1+ activate(V2,W3):2
     [W3>=V2,V2>=1,V3>=0,V1>=0,V>=1,V+W3+1=Out] 
* CE 54: u(V,V1,V2,V3,Out) = 0
     [V3>=0,V2>=0,V1>=0,V>=0,Out=0] 

### Cost equations --> "Loop" of u/5 
* CEs [53] --> Loop 37 
* CEs [52] --> Loop 38 
* CEs [54] --> Loop 39 

#### Loops of u/5 
* Loop 37: u(V,V1,V2,V3,Out) [Out>=V+V2+1,V3>=0,V2>=1,V1>=0,V>=1] 
* Loop 38: u(V,V1,V2,V3,Out) [V3>=0,V2>=0,V1>=0,V>=1,V+V2+1=Out] 
* Loop 39: u(V,V1,V2,V3,Out) [V3>=0,V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR u(V,V1,V2,V3,Out) 

#### Partial ranking functions of CR u(V,V1,V2,V3,Out) 


### Resulting Chains:u(V,V1,V2,V3,Out) 
* [39]
* [38]
* [37]


### Merging Chains  u/5 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [55,56] 
* CE 3 is refined into CE [57] 
* CE 4 is refined into CE [58,59,60] 
* CE 5 is refined into CE [61,62] 
* CE 6 is refined into CE [63,64] 
* CE 7 is refined into CE [65,66] 
* CE 8 is refined into CE [67] 
* CE 9 is refined into CE [68] 
* CE 10 is refined into CE [69,70] 
* CE 11 is refined into CE [71,72,73] 
* CE 12 is refined into CE [74,75] 


#### Refined cost equations start/4 
* CE 55: start(V,V1,V2,V3) = 0+ natsFrom(W3,X3):1
     [X3>=1,X3=W3+1,X3=V+1] 
* CE 56: start(V,V1,V2,V3) = 0+ natsFrom(W3,X3):2
     [X3>=3,X3=2*W3+3,X3=2*V+3] 
* CE 57: start(V,V1,V2,V3) = 1
     [V>=0] 
* CE 58: start(V,V1,V2,V3) = 0+ u(V,V1,V2,V3,W3):1
     [V3>=0,V2>=0,V1>=0,V>=0,W3=0] 
* CE 59: start(V,V1,V2,V3) = 0+ u(V,V1,W3,V3,X3):2
     [X3>=V+1,V3>=0,V1>=0,V>=1,X3=V+W3+1,X3=V+V2+1] 
* CE 60: start(V,V1,V2,V3) = 0+ u(V,V1,V2,V3,W3):3
     [W3>=V+V2+1,V3>=0,V2>=1,V1>=0,V>=1] 
* CE 61: start(V,V1,V2,V3) = 0+ head(V,W3):1
     [V>=0,W3=0] 
* CE 62: start(V,V1,V2,V3) = 0+ head(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 63: start(V,V1,V2,V3) = 0+ activate(V,V):1
     [V>=0] 
* CE 64: start(V,V1,V2,V3) = 0+ activate(V,W3):2
     [W3>=V,V>=1] 
* CE 65: start(V,V1,V2,V3) = 0+ snd(V,W3):1
     [V>=0,W3=0] 
* CE 66: start(V,V1,V2,V3) = 0+ snd(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 67: start(V,V1,V2,V3) = 0+ take(W3,V1,X3):1
     [V1>=X3,X3>=0,W3=0,V=0] 
* CE 68: start(V,V1,V2,V3) = 0+ afterNth(W3,V1,X3):1
     [V1>=X3,X3>=0,W3=0,V=0] 
* CE 69: start(V,V1,V2,V3) = 0+ fst(V,W3):1
     [V>=0,W3=0] 
* CE 70: start(V,V1,V2,V3) = 0+ fst(V,W3):2
     [V>=W3+1,W3>=0] 
* CE 71: start(V,V1,V2,V3) = 0+ tail(V,W3):1
     [V>=0,W3=0] 
* CE 72: start(V,V1,V2,V3) = 0+ tail(V,W3):2
     [W3>=1,V>=2] 
* CE 73: start(V,V1,V2,V3) = 0+ tail(V,W3):3
     [V>=W3+1,W3>=0] 
* CE 74: start(V,V1,V2,V3) = 0+ sel(W3,V1,X3):1
     [V1>=0,X3=0,W3=0,V=0] 
* CE 75: start(V,V1,V2,V3) = 0+ sel(W3,V1,X3):2
     [V1>=X3+1,X3>=0,W3=0,V=0] 

### Cost equations --> "Loop" of start/4 
* CEs [55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75] --> Loop 40 

#### Loops of start/4 
* Loop 40: start(V,V1,V2,V3) [V>=0] 

### Ranking functions of CR start(V,V1,V2,V3) 

#### Partial ranking functions of CR start(V,V1,V2,V3) 


### Resulting Chains:start(V,V1,V2,V3) 
* [40]


### Merging Chains  start/4 into  External patterns of execution 
* [[40]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of natsFrom(V,Out):
* Chain [20]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [19]: 1
  with precondition: [2*V+3=Out,V>=0] 


#### Cost of loops [22,23] 

 * loop 22:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 23:activate(V,Out) -> [activate(V',Out')] 
2
#### Cost of phase [22,23]:activate(V,Out) -> [activate(V',Out')] 
4*it(22)+0
  Such that:aux(1) =< V
aux(2) =< V-V'
it(22) =< aux(1)
it(22) =< aux(2)

#### Cost of chains of activate(V,Out):
* Chain [[22,23],21]: 4*it(22)+1
  Such that:aux(3) =< V
it(22) =< aux(3)

  with precondition: [V>=1,Out>=V] 

* Chain [21]: 1
  with precondition: [V=Out,V>=0] 


#### Cost of chains of snd(V,Out):
* Chain [25]: 0
  with precondition: [Out=0,V>=0] 

* Chain [24]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of afterNth(V,V1,Out):
* Chain [26]: 3
  with precondition: [V=0,Out>=0,V1>=Out] 


#### Cost of chains of fst(V,Out):
* Chain [28]: 0
  with precondition: [Out=0,V>=0] 

* Chain [27]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of head(V,Out):
* Chain [30]: 0
  with precondition: [Out=0,V>=0] 

* Chain [29]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of sel(V,V1,Out):
* Chain [32]: 4
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [31]: 5
  with precondition: [V=0,Out>=0,V1>=Out+1] 


#### Cost of chains of tail(V,Out):
* Chain [35]: 0
  with precondition: [Out=0,V>=0] 

* Chain [34]: 4*s(2)+2
  Such that:s(1) =< V
s(2) =< s(1)

  with precondition: [V>=2,Out>=1] 

* Chain [33]: 2
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of take(V,V1,Out):
* Chain [36]: 3
  with precondition: [V=0,Out>=0,V1>=Out] 


#### Cost of chains of u(V,V1,V2,V3,Out):
* Chain [39]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0,V3>=0] 

* Chain [38]: 2
  with precondition: [V+V2+1=Out,V>=1,V1>=0,V2>=0,V3>=0] 

* Chain [37]: 4*s(4)+2
  Such that:s(3) =< V2
s(4) =< s(3)

  with precondition: [V>=1,V1>=0,V2>=1,V3>=0,Out>=V+V2+1] 


#### Cost of chains of start(V,V1,V2,V3):
* Chain [40]: 4*s(6)+8*s(8)+5
  Such that:s(5) =< V2
aux(4) =< V
s(8) =< aux(4)
s(6) =< s(5)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1,V2,V3): 
-------------------------------------
* Chain [40] with precondition: [V>=0] 
    - Upper bound: 8*V+5+nat(V2)*4 
    - Complexity: n 

### Maximum cost of start(V,V1,V2,V3): 8*V+5+nat(V2)*4 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 64 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 160 ms.

