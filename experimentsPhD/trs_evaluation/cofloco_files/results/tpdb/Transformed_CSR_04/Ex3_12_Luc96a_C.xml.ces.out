
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [cons/3]
1. recursive  : [from/2]
2. non_recursive  : [proper/2]
3. recursive  : [s/2]
4. recursive  : [sel/3]
5. recursive  : [top/2]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into cons/3
1. SCC is partially evaluated into from/2
2. SCC is partially evaluated into proper/2
3. SCC is partially evaluated into s/2
4. SCC is partially evaluated into sel/3
5. SCC is partially evaluated into top/2
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations cons/3 
* CE 17 is refined into CE [24] 
* CE 16 is refined into CE [25] 
* CE 15 is refined into CE [26] 


#### Refined cost equations cons/3 
* CE 24: cons(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 25: cons(V,V1,Out) = 1+ cons(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 26: cons(V,V1,Out) = 1+ cons(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of cons/3 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of cons/3 
* Loop 17: cons(V,V1,Out)->  cons(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 18: cons(V,V1,Out)->  cons(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 19: cons(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR cons(V,V1,Out) 
* RF of phase [17,18]: [V]

#### Partial ranking functions of CR cons(V,V1,Out) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1,18:1]:
    V
  - RF of loop [18:1]:
    V1


### Resulting Chains:cons(V,V1,Out) 
* [[17,18],19]
* [19]


### Merging Chains  cons/3 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[17,18]]] --> 2 


### Specialization of cost equations from/2 
* CE 12 is refined into CE [27] 
* CE 11 is refined into CE [28] 


#### Refined cost equations from/2 
* CE 27: from(V,Out) = 0
     [V>=0,Out=0] 
* CE 28: from(V,Out) = 1+ from(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of from/2 
* CEs [28] --> Loop 20 
* CEs [27] --> Loop 21 

#### Loops of from/2 
* Loop 20: from(V,Out)->  from(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 21: from(V,Out) [V>=0,Out=0] 

### Ranking functions of CR from(V,Out) 
* RF of phase [20]: [V]

#### Partial ranking functions of CR from(V,Out) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V


### Resulting Chains:from(V,Out) 
* [[20],21]
* [21]


### Merging Chains  from/2 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[20]]] --> 2 


### Specialization of cost equations proper/2 
* CE 19 is refined into CE [29] 
* CE 18 is refined into CE [30] 


#### Refined cost equations proper/2 
* CE 29: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 30: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 

#### Loops of proper/2 
* Loop 22: proper(V,Out) [V>=0,Out=0] 
* Loop 23: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [23]
* [22]


### Merging Chains  proper/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations s/2 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


#### Refined cost equations s/2 
* CE 31: s(V,Out) = 0
     [V>=0,Out=0] 
* CE 32: s(V,Out) = 1+ s(W,X)
     [W>=0,X+1=Out,W+1=V] 

### Cost equations --> "Loop" of s/2 
* CEs [32] --> Loop 24 
* CEs [31] --> Loop 25 

#### Loops of s/2 
* Loop 24: s(V,Out)->  s(V',Out')
                  [V'>=0,Out=Out'+1,V'+1=V] 
* Loop 25: s(V,Out) [V>=0,Out=0] 

### Ranking functions of CR s(V,Out) 
* RF of phase [24]: [V]

#### Partial ranking functions of CR s(V,Out) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V


### Resulting Chains:s(V,Out) 
* [[24],25]
* [25]


### Merging Chains  s/2 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[24]]] --> 2 


### Specialization of cost equations sel/3 
* CE 23 is refined into CE [33] 
* CE 22 is refined into CE [34] 
* CE 20 is refined into CE [35] 
* CE 21 is refined into CE [36] 


#### Refined cost equations sel/3 
* CE 33: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 34: sel(V,V1,Out) = 1+ sel(V,W1,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 35: sel(V,V1,Out) = 1+ sel(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 36: sel(V,V1,Out) = 1+ sel(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V1,W1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [34] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [33] --> Loop 29 

#### Loops of sel/3 
* Loop 26: sel(V,V1,Out)->  sel(V,V1',Out')
                  [V1>=1,V>=0,Out=Out'+1,V1=V1'+1] 
* Loop 27: sel(V,V1,Out)->  sel(V',V1,Out')
                  [V1>=0,V>=1,Out=Out'+1,V=V'+1] 
* Loop 28: sel(V,V1,Out)->  sel(V',V1',Out')
                  [V1>=1,V>=1,Out=Out'+1,V1=V1'+1,V=V'+1] 
* Loop 29: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [26,27,28]: [V+V1]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [26,27,28]:
  - RF of loop [26:1,28:1]:
    V1
  - RF of loop [27:1,28:1]:
    V


### Resulting Chains:sel(V,V1,Out) 
* [[26,27,28],29]
* [29]


### Merging Chains  sel/3 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[26,27,28]]] --> 2 


### Specialization of cost equations top/2 
* CE 10 is refined into CE [37] 
* CE 8 is refined into CE [38] 
* CE 9 is refined into CE [39,40] 


#### Refined cost equations top/2 
* CE 37: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 38: top(V,Out) = 1+ top(V,Out)
     [V>=1] 
* CE 39: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 40: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [40] --> Loop 30 
* CEs [38,39] --> Loop 31 
* CEs [37] --> Loop 32 

#### Loops of top/2 
* Loop 30: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 31: top(V,Out)->  top(V,Out)
                  [V>=1] 
* Loop 32: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[31]]...
* [[31],32]
* [[31],30,32]
* [32]
* [30,32]


### Merging Chains  top/2 into  External patterns of execution 
* [[32,30],[32],[32,30,[31]],[32,[31]]] --> 1 
* [[[31]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [41,42] 
* CE 3 is refined into CE [43,44] 
* CE 4 is refined into CE [45,46] 
* CE 5 is refined into CE [47,48] 
* CE 6 is refined into CE [49,50] 
* CE 7 is refined into CE [51,52] 


#### Refined cost equations start/2 
* CE 41: start(V,V1) = 0+ top(V,W1):1
     [V>=0,W1=0] 
* CE 42: start(V,V1) = 0+ top(V,W1):2
     [V>=1] 
* CE 43: start(V,V1) = 0+ from(V,W1):1
     [V>=0,W1=0] 
* CE 44: start(V,V1) = 0+ from(V,W1):2
     [V>=W1,W1>=1] 
* CE 45: start(V,V1) = 0+ s(V,W1):1
     [V>=0,W1=0] 
* CE 46: start(V,V1) = 0+ s(V,W1):2
     [V>=W1,W1>=1] 
* CE 47: start(V,V1) = 0+ cons(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 48: start(V,V1) = 0+ cons(V,V1,W1):2
     [V>=W1,W1>=1,V1>=0] 
* CE 49: start(V,V1) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 50: start(V,V1) = 0+ proper(V,W1):2
     [V>=0,W1=0] 
* CE 51: start(V,V1) = 0+ sel(V,V1,W1):1
     [V1>=0,V>=0,W1=0] 
* CE 52: start(V,V1) = 0+ sel(V,V1,W1):2
     [V+V1>=W1,W1>=1,V1>=0,V>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [41,43,44,45,46,47,48,49,50,51,52] --> Loop 33 
* CEs [42] --> Loop 34 

#### Loops of start/2 
* Loop 33: start(V,V1) [V>=0] 
* Loop 34: start(V,V1) [V>=1] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [34]...
* [33]


### Merging Chains  start/2 into  External patterns of execution 
* [[33]] --> 1 
* [[34]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17,18] 

 * loop 17:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1
 * loop 18:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1
#### Cost of phase [17,18]:cons(V,V1,Out) -> [cons(V',V1',Out')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< V1
it(18) =< V1-V1'
aux(1) =< V
aux(2) =< V-V'
it(17) =< aux(1)
it(18) =< aux(1)
it(17) =< aux(2)
it(18) =< aux(2)

#### Cost of chains of cons(V,V1,Out):
* Chain [[17,18],19]: 1*it(17)+1*it(18)+0
  Such that:aux(1) =< V
it(18) =< V1
aux(2) =< Out
it(17) =< aux(1)
it(18) =< aux(1)
it(17) =< aux(2)
it(18) =< aux(2)

  with precondition: [V1>=0,Out>=1,V>=Out] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [20] 

 * loop 20:from(V,Out) -> [from(V',Out')] 
1
#### Cost of phase [20]:from(V,Out) -> [from(V',Out')] 
1*it(20)+0
  Such that:it(20) =< V
it(20) =< V-V'

#### Cost of chains of from(V,Out):
* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [21]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of proper(V,Out):
* Chain [23]: 1
  with precondition: [V=0,Out=1] 

* Chain [22]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [24] 

 * loop 24:s(V,Out) -> [s(V',Out')] 
1
#### Cost of phase [24]:s(V,Out) -> [s(V',Out')] 
1*it(24)+0
  Such that:it(24) =< V
it(24) =< V-V'

#### Cost of chains of s(V,Out):
* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< Out

  with precondition: [Out>=1,V>=Out] 

* Chain [25]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [26,27,28] 

 * loop 26:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
 * loop 27:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
 * loop 28:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1
#### Cost of phase [26,27,28]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*it(26)+1*it(27)+1*it(28)+0
  Such that:aux(3) =< V
aux(4) =< V+V1
aux(5) =< V+V1-V'-V1'
aux(6) =< V-V'
aux(7) =< V1
aux(8) =< V1-V1'
it(27) =< aux(3)
it(28) =< aux(3)
it(26) =< aux(4)
it(27) =< aux(4)
it(28) =< aux(4)
it(26) =< aux(5)
it(27) =< aux(5)
it(28) =< aux(5)
it(27) =< aux(6)
it(28) =< aux(6)
it(26) =< aux(7)
it(28) =< aux(7)
it(26) =< aux(8)
it(28) =< aux(8)

#### Cost of chains of sel(V,V1,Out):
* Chain [[26,27,28],29]: 1*it(26)+1*it(27)+1*it(28)+0
  Such that:aux(9) =< V
aux(10) =< V+V1
aux(11) =< V1
it(27) =< aux(9)
it(28) =< aux(9)
it(26) =< aux(10)
it(27) =< aux(10)
it(28) =< aux(10)
it(26) =< aux(11)
it(28) =< aux(11)

  with precondition: [V>=0,V1>=0,Out>=1,V+V1>=Out] 

* Chain [29]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of loops [31] 

 * loop 31:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of phase [31]:top(V,Out) -> [top(V',Out')] 
2*it(31)+0
#### Cost of chains of top(V,Out):
* Chain [[31]]...: 2*it(31)+0
  with precondition: [V>=1] 

* Chain [[31],32]: 2*it(31)+0
  with precondition: [Out=0,V>=1] 

* Chain [[31],30,32]: 2*it(31)+1
  with precondition: [Out=0,V>=1] 

* Chain [32]: 0
  with precondition: [Out=0,V>=0] 

* Chain [30,32]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1):
* Chain [34]...: 2*s(3)+0
  with precondition: [V>=1] 

* Chain [33]: 1*s(4)+3*s(5)+1*s(8)+1*s(14)+1*s(15)+1*s(16)+1
  Such that:s(12) =< V+V1
aux(14) =< V
aux(15) =< V1
s(5) =< aux(14)
s(8) =< aux(15)
s(14) =< aux(14)
s(15) =< aux(14)
s(16) =< s(12)
s(14) =< s(12)
s(15) =< s(12)
s(16) =< aux(15)
s(15) =< aux(15)
s(8) =< aux(14)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [34]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 52 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 54 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 20 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 187 ms.

