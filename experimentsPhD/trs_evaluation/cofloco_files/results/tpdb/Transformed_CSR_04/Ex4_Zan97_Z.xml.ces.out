
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [g/2]
1. non_recursive  : [f/2]
2. non_recursive  : [activate/2]
3. recursive  : [sel/3]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into g/2
1. SCC is partially evaluated into f/2
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into sel/3
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations g/2 
* CE 10 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 9 is refined into CE [18] 


#### Refined cost equations g/2 
* CE 16: g(V,Out) = 0
     [V>=0,Out=0] 
* CE 17: g(V,Out) = 1
     [Out=1,V=0] 
* CE 18: g(V,Out) = 1+ g(W,X)
     [W>=0,X+2=Out,W+1=V] 

### Cost equations --> "Loop" of g/2 
* CEs [18] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 

#### Loops of g/2 
* Loop 11: g(V,Out)->  g(V',Out')
                  [V'>=0,Out=Out'+2,V'+1=V] 
* Loop 12: g(V,Out) [V>=0,Out=0] 
* Loop 13: g(V,Out) [Out=1,V=0] 

### Ranking functions of CR g(V,Out) 
* RF of phase [11]: [V]

#### Partial ranking functions of CR g(V,Out) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V


### Resulting Chains:g(V,Out) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  g/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[13,[11]]] --> 3 
* [[12,[11]]] --> 4 


### Specialization of cost equations f/2 
* CE 6 is refined into CE [19,20,21,22] 
* CE 7 is refined into CE [23] 


#### Refined cost equations f/2 
* CE 19: f(V,Out) = 1+ g(W,X):1
     [X=1,W=0,Out=3,V=0] 
* CE 20: f(V,Out) = 1+ g(V,W):2
     [V>=0,V+2=Out,W=0] 
* CE 21: f(V,Out) = 1+ g(W,X):3
     [X>=3,X=2*W+1,3*X+3=2*Out,X=2*V+1] 
* CE 22: f(V,Out) = 1+ g(V,W):4
     [2*V>=W,W>=2,V+W+2=Out] 
* CE 23: f(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of f/2 
* CEs [22] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of f/2 
* Loop 14: f(V,Out) [3*V+2>=Out,Out>=V+4] 
* Loop 15: f(V,Out) [V>=1,3*V+3=Out] 
* Loop 16: f(V,Out) [V>=0,V+1=Out] 
* Loop 17: f(V,Out) [V>=0,V+2=Out] 
* Loop 18: f(V,Out) [Out=3,V=0] 

### Ranking functions of CR f(V,Out) 

#### Partial ranking functions of CR f(V,Out) 


### Resulting Chains:f(V,Out) 
* [18]
* [17]
* [16]
* [15]
* [14]


### Merging Chains  f/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 
* [[15]] --> 4 
* [[14]] --> 5 


### Specialization of cost equations activate/2 
* CE 14 is refined into CE [24,25,26,27,28] 
* CE 15 is refined into CE [29] 


#### Refined cost equations activate/2 
* CE 24: activate(V,Out) = 1+ f(W,X):1
     [X=3,W=0,Out=3,V=1] 
* CE 25: activate(V,Out) = 1+ f(W,Out):2
     [Out>=2,Out=W+2,Out=V+1] 
* CE 26: activate(A,A) = 1+ f(B,A):3
     [A>=1,A=B+1] 
* CE 27: activate(V,Out) = 1+ f(W,Out):4
     [Out>=6,Out=3*W+3,Out=3*V] 
* CE 28: activate(V,Out) = 1+ f(W,Out):5
     [3*W+2>=Out,Out>=W+4,W+1=V] 
* CE 29: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [28] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [26,29] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [24] --> Loop 23 

#### Loops of activate/2 
* Loop 19: activate(V,Out) [3*V>=Out+1,Out>=V+3] 
* Loop 20: activate(V,Out) [V>=2,3*V=Out] 
* Loop 21: activate(A,A) [A>=0] 
* Loop 22: activate(V,Out) [V>=1,V+1=Out] 
* Loop 23: activate(V,Out) [Out=3,V=1] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [23]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  activate/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 
* [[19]] --> 5 


### Specialization of cost equations sel/3 
* CE 13 is refined into CE [30] 
* CE 11 is refined into CE [31] 
* CE 12 is refined into CE [32,33,34,35,36] 


#### Refined cost equations sel/3 
* CE 30: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 31: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 32: sel(V,V1,Out) = 1+ activate(W1,X1):1+ sel(Y1,Z1,Out)
     [Y1>=0,V1>=2,Y1+1=V,Z1=3,X1=3,W1=1] 
* CE 33: sel(V,V1,Out) = 1+ activate(W1,X1):2+ sel(Y1,X1,Out)
     [V1>=X1,Y1>=0,X1>=2,X1=W1+1,Y1+1=V] 
* CE 34: sel(V,V1,Out) = 1+ activate(W1,W1):3+ sel(X1,W1,Out)
     [V1>=W1+1,X1>=0,W1>=0,X1+1=V] 
* CE 35: sel(V,V1,Out) = 1+ activate(W1,X1):4+ sel(Y1,X1,Out)
     [3*V1>=X1+3,Y1>=0,X1>=6,Y1+1=V,X1=3*W1] 
* CE 36: sel(V,V1,Out) = 1+ activate(W1,X1):5+ sel(Y1,X1,Out)
     [3*W1>=X1+1,X1>=W1+3,V1>=W1+1,Y1>=0,Y1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [35] --> Loop 24 
* CEs [36] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [34] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 

#### Loops of sel/3 
* Loop 24: sel(V,V1,Out)->  sel(V',V1',Out)
                  [3*V1>=V1'+3,V1'>=6,V>=1,V=V'+1] 
* Loop 25: sel(V,V1,Out)->  sel(V',V1',Out)
                  [3*V1>=V1'+4,V1'>=5,V>=1,V=V'+1] 
* Loop 26: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1',V1'>=2,V>=1,V=V'+1] 
* Loop 27: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V>=1,V=V'+1] 
* Loop 28: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=2,V>=1,V=V'+1,V1'=3] 
* Loop 29: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 30: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [24,25,26,27,28]: [V]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [24,25,26,27,28]:
  - RF of loop [24:1,25:1,26:1,27:1,28:1]:
    V
  - RF of loop [27:1]:
    V1 depends on loops [24:1,25:1,28:1] 


### Resulting Chains:sel(V,V1,Out) 
* [[24,25,26,27,28],30]
* [[24,25,26,27,28],29]
* [30]
* [29]


### Merging Chains  sel/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29],[29,[24,25,26,27,28]]] --> 2 
* [[30,[24,25,26,27,28]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [37,38,39,40,41] 
* CE 3 is refined into CE [42,43,44,45] 
* CE 4 is refined into CE [46,47,48] 
* CE 5 is refined into CE [49,50,51,52,53] 


#### Refined cost equations start/2 
* CE 37: start(V,V1) = 0+ f(W1,X1):1
     [X1=3,W1=0,V=0] 
* CE 38: start(V,V1) = 0+ f(W1,X1):2
     [X1>=2,X1=W1+2,X1=V+2] 
* CE 39: start(V,V1) = 0+ f(W1,X1):3
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 40: start(V,V1) = 0+ f(W1,X1):4
     [X1>=6,X1=3*W1+3,X1=3*V+3] 
* CE 41: start(V,V1) = 0+ f(V,W1):5
     [3*V+2>=W1,W1>=V+4] 
* CE 42: start(V,V1) = 0+ g(W1,X1):1
     [X1=1,W1=0,V=0] 
* CE 43: start(V,V1) = 0+ g(V,W1):2
     [V>=0,W1=0] 
* CE 44: start(V,V1) = 0+ g(W1,X1):3
     [X1>=3,X1=2*W1+1,X1=2*V+1] 
* CE 45: start(V,V1) = 0+ g(V,W1):4
     [2*V>=W1,W1>=2] 
* CE 46: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 47: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 48: start(V,V1) = 0+ sel(V,V1,W1):3
     [W1>=0,V1>=2,V>=1] 
* CE 49: start(V,V1) = 0+ activate(W1,X1):1
     [X1=3,W1=1,V=1] 
* CE 50: start(V,V1) = 0+ activate(W1,X1):2
     [X1>=2,X1=W1+1,X1=V+1] 
* CE 51: start(V,V1) = 0+ activate(V,V):3
     [V>=0] 
* CE 52: start(V,V1) = 0+ activate(W1,X1):4
     [X1>=6,X1=3*W1,X1=3*V] 
* CE 53: start(V,V1) = 0+ activate(V,W1):5
     [3*V>=W1+1,W1>=V+3] 

### Cost equations --> "Loop" of start/2 
* CEs [49] --> Loop 31 
* CEs [37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53] --> Loop 32 

#### Loops of start/2 
* Loop 31: start(V,V1) [V=1] 
* Loop 32: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [32]
* [31]


### Merging Chains  start/2 into  External patterns of execution 
* [[31],[32]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:g(V,Out) -> [g(V',Out')] 
1
#### Cost of phase [11]:g(V,Out) -> [g(V',Out')] 
1*it(11)+0
  Such that:it(11) =< V
it(11) =< V-V'

#### Cost of phase [11]:g(V,Out) -> [g(V',Out')] 
1*it(11)+0
  Such that:it(11) =< V
it(11) =< V-V'

#### Cost of chains of g(V,Out):
* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< Out/2

  with precondition: [2*V+1=Out,V>=1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< Out/2

  with precondition: [Out>=2,2*V>=Out] 

* Chain [13]: 1
  with precondition: [V=0,Out=1] 

* Chain [12]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of f(V,Out):
* Chain [18]: 2
  with precondition: [V=0,Out=3] 

* Chain [17]: 1
  with precondition: [V+2=Out,V>=0] 

* Chain [16]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [15]: 1*s(1)+2
  Such that:s(1) =< V+1/2

  with precondition: [3*V+3=Out,V>=1] 

* Chain [14]: 1*s(2)+1
  Such that:s(2) =< V

  with precondition: [Out>=V+4,3*V+2>=Out] 


#### Cost of chains of activate(V,Out):
* Chain [23]: 3
  with precondition: [V=1,Out=3] 

* Chain [22]: 2
  with precondition: [V+1=Out,V>=1] 

* Chain [21]: 2
  with precondition: [V=Out,V>=0] 

* Chain [20]: 1*s(3)+3
  Such that:s(3) =< V

  with precondition: [3*V=Out,V>=2] 

* Chain [19]: 1*s(4)+2
  Such that:s(4) =< V

  with precondition: [Out>=V+3,3*V>=Out+1] 


#### Cost of loops [24,25,26,27,28] 

 * loop 24:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*s(6)+4
  Such that:s(6) =< V1'/3

 * loop 25:sel(V,V1,Out) -> [sel(V',V1',Out')] 
1*s(8)+3
  Such that:s(8) =< V1

 * loop 26:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3
 * loop 27:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3
 * loop 28:sel(V,V1,Out) -> [sel(V',V1',Out')] 
4
#### Cost of phase [24,25,26,27,28]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
17*it(24)+2*s(9)+0
  Such that:aux(13) =< V
aux(14) =< V-V'
it(24) =< aux(13)
it(24) =< aux(14)

#### Cost of phase [24,25,26,27,28]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
17*it(24)+2*s(9)+0
  Such that:aux(13) =< V
aux(14) =< V-V'
it(24) =< aux(13)
it(24) =< aux(14)

#### Cost of chains of sel(V,V1,Out):
* Chain [[24,25,26,27,28],30]: 17*it(24)+2*s(9)+1
  Such that:aux(16) =< V
it(24) =< aux(16)

  with precondition: [V>=1,V1>=2,Out>=0] 

* Chain [[24,25,26,27,28],29]: 17*it(24)+2*s(9)+0
  Such that:aux(17) =< V
it(24) =< aux(17)

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [30]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [29]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [32]: 2*s(14)+38*s(15)+4*s(20)+3
  Such that:aux(18) =< V
aux(19) =< V+1/2
s(15) =< aux(18)
s(14) =< aux(19)

  with precondition: [V>=0] 

* Chain [31]: 3
  with precondition: [V=1] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [32] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31] with precondition: [V=1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 27 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 55 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 70 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 42 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 184 ms.

