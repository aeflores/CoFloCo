
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [fun1/1]
1. recursive  : [fun/4]
2. recursive [non_tail] : [mark/2]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun1/1
1. SCC is partially evaluated into fun/4
2. SCC is partially evaluated into mark/2
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1/1 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations fun1/1 
* CE 12: fun1(Out) = 1
     [Out=1] 
* CE 13: fun1(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of fun1/1 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of fun1/1 
* Loop 9: fun1(Out) [Out=1] 
* Loop 10: fun1(Out) [Out=0] 

### Ranking functions of CR fun1(Out) 

#### Partial ranking functions of CR fun1(Out) 


### Resulting Chains:fun1(Out) 
* [10]
* [9]


### Merging Chains  fun1/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations fun/4 
* CE 6 is refined into CE [14] 
* CE 5 is refined into CE [15,16] 


#### Refined cost equations fun/4 
* CE 14: fun(V1,V,V2,Out) = 1
     [V2>=0,V>=0,V1>=0,V1+V+V2+1=Out] 
* CE 15: fun(V1,V,V2,Out) = 1+ fun1(W2):1+ fun(V,X2,V,Out)
     [V>=0,X2=0,W2=0,V2=1,V1=0] 
* CE 16: fun(V1,V,V2,Out) = 1+ fun1(W2):2+ fun(V,X2,V,Out)
     [V>=0,X2=1,W2=1,V2=1,V1=0] 

### Cost equations --> "Loop" of fun/4 
* CEs [16] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of fun/4 
* Loop 11: fun(V1,V,V2,Out)->  fun(V,A',V,Out)
                  [V>=0,A'=1,V2=1,V1=0] 
* Loop 12: fun(V1,V,V2,Out)->  fun(V,A',V,Out)
                  [V>=0,A'=0,V2=1,V1=0] 
* Loop 13: fun(V1,V,V2,Out) [V2>=0,V>=0,V1>=0,V1+V+V2+1=Out] 

### Ranking functions of CR fun(V1,V,V2,Out) 

#### Partial ranking functions of CR fun(V1,V,V2,Out) 


### Resulting Chains:fun(V1,V,V2,Out) 
* [13]
* [12,13]
* [11,13]


### Merging Chains  fun/4 into  External patterns of execution 
* [[13,12]] --> 1 
* [[13,11]] --> 2 
* [[13]] --> 3 


### Specialization of cost equations mark/2 
* CE 10 is refined into CE [17,18] 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20,21,22] 


#### Refined cost equations mark/2 
* CE 17: mark(V1,Out) = 1+ fun1(W1):1
     [W1=0,Out=0,V1=1] 
* CE 18: mark(V1,Out) = 1+ fun1(W1):2
     [W1=1,Out=1,V1=1] 
* CE 19: mark(V1,Out) = 1
     [Out=0,V1=0] 
* CE 20: mark(V1,Out) = 1+ mark(W1,X1)+ fun(Y1,Z1,A2,Out):1
     [W1>=0,Out>=1,W1+2=V1,Out=2*X1+1,Out=2*Z1+1,A2=1,Y1=0] 
* CE 21: mark(V1,Out) = 1+ mark(W1,X1)+ fun(Y1,Z1,A2,Out):2
     [W1>=0,Out>=2,W1+2=V1,Out=2*X1+2,Out=2*Z1+2,A2=1,Y1=0] 
* CE 22: mark(V1,Out) = 1+ mark(W1,X1)+ fun(Y1,X1,Z1,Out):3
     [Out>=Y1+X1+1,W1>=0,X1>=0,Y1>=0,Out=Y1+X1+Z1+1,Out+W1=V1+X1] 

### Cost equations --> "Loop" of mark/2 
* CEs [22] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of mark/2 
* Loop 14: mark(V1,Out)->  mark(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 15: mark(V1,Out)->  mark(V1',Out')
                  [Out>=1,V1>=2,V1=V1'+2,Out=2*Out'+1] 
* Loop 16: mark(V1,Out)->  mark(V1',Out')
                  [Out>=2,V1>=2,V1=V1'+2,Out=2*Out'+2] 
* Loop 17: mark(V1,Out) [Out=1,V1=1] 
* Loop 18: mark(V1,Out) [Out=0,V1=1] 
* Loop 19: mark(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR mark(V1,Out) 
* RF of phase [14,15,16]: [V1]

#### Partial ranking functions of CR mark(V1,Out) 
* Partial RF of phase [14,15,16]:
  - RF of loop [14:1]:
    V1
  - RF of loop [15:1,16:1]:
    V1-1


### Resulting Chains:mark(V1,Out) 
* [[14,15,16],19]
* [[14,15,16],18]
* [[14,15,16],17]
* [19]
* [18]
* [17]


### Merging Chains  mark/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 
* [[17],[17,[14,15,16]],[18,[14,15,16]],[19,[14,15,16]]] --> 3 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [23,24,25] 
* CE 3 is refined into CE [26,27] 
* CE 4 is refined into CE [28,29,30] 


#### Refined cost equations start/3 
* CE 23: start(V1,V,V2) = 0+ fun(W2,X2,Y2,Z2):1
     [Z2>=1,Z2=2*X2+1,Z2=2*V+1,Y2=1,W2=0,V2=1,V1=0] 
* CE 24: start(V1,V,V2) = 0+ fun(W2,X2,Y2,Z2):2
     [Z2>=2,Z2=2*X2+2,Z2=2*V+2,Y2=1,W2=0,V2=1,V1=0] 
* CE 25: start(V1,V,V2) = 0+ fun(V1,V,W2,X2):3
     [X2>=V1+V+1,V>=0,V1>=0,X2=V1+V+W2+1,X2=V1+V+V2+1] 
* CE 26: start(V1,V,V2) = 0+ fun1(W2):1
     [W2=0] 
* CE 27: start(V1,V,V2) = 0+ fun1(W2):2
     [W2=1] 
* CE 28: start(V1,V,V2) = 0+ mark(W2,X2):1
     [X2=0,W2=0,V1=0] 
* CE 29: start(V1,V,V2) = 0+ mark(W2,X2):2
     [X2=0,W2=1,V1=1] 
* CE 30: start(V1,V,V2) = 0+ mark(V1,W2):3
     [W2>=1,V1>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [23,24,25,26,27,28,29,30] --> Loop 20 

#### Loops of start/3 
* Loop 20: start(V1,V,V2) [] 

### Ranking functions of CR start(V1,V,V2) 

#### Partial ranking functions of CR start(V1,V,V2) 


### Resulting Chains:start(V1,V,V2) 
* [20]


### Merging Chains  start/3 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of fun1(Out):
* Chain [10]: 1
  with precondition: [Out=0] 

* Chain [9]: 1
  with precondition: [Out=1] 


#### Cost of chains of fun(V1,V,V2,Out):
* Chain [13]: 1
  with precondition: [V+V1+V2+1=Out,V1>=0,V>=0,V2>=0] 

* Chain [12,13]: 3
  with precondition: [V1=0,V2=1,Out=2*V+1,Out>=1] 

* Chain [11,13]: 3
  with precondition: [V1=0,V2=1,Out=2*V+2,Out>=2] 


#### Cost of loops [14,15,16] 

 * loop 14:mark(V1,Out) -> [mark(V1',Out')] 
2
 * loop 15:mark(V1,Out) -> [mark(V1',Out')] 
4
 * loop 16:mark(V1,Out) -> [mark(V1',Out')] 
4
#### Cost of phase [14,15,16]:mark(V1,Out) -> [mark(V1',Out')] 
10*it(14)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of phase [14,15,16]:mark(V1,Out) -> [mark(V1',Out')] 
10*it(14)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of phase [14,15,16]:mark(V1,Out) -> [mark(V1',Out')] 
10*it(14)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of chains of mark(V1,Out):
* Chain [[14,15,16],19]: 10*it(14)+1
  Such that:aux(3) =< V1
it(14) =< aux(3)

  with precondition: [V1>=1,Out>=1,Out+1>=V1] 

* Chain [[14,15,16],18]: 10*it(14)+2
  Such that:aux(4) =< V1
it(14) =< aux(4)

  with precondition: [V1>=1,Out>=1,Out+2>=V1] 

* Chain [[14,15,16],17]: 10*it(14)+2
  Such that:aux(5) =< V1
it(14) =< aux(5)

  with precondition: [V1>=1,Out>=1] 

* Chain [19]: 1
  with precondition: [V1=0,Out=0] 

* Chain [18]: 2
  with precondition: [V1=1,Out=0] 

* Chain [17]: 2
  with precondition: [V1=1,Out=1] 


#### Cost of chains of start(V1,V,V2):
* Chain [20]: 30*s(8)+3
  Such that:s(7) =< V1
s(8) =< s(7)

  with precondition: [] 


Closed-form bounds of start(V1,V,V2): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: nat(V1)*30+3 
    - Complexity: n 

### Maximum cost of start(V1,V,V2): nat(V1)*30+3 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 33 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 106 ms.

