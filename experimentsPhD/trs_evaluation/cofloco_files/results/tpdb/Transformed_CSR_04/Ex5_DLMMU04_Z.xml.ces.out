
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [incr/2]
2. non_recursive  : [repItems/2]
3. non_recursive  : [take/3]
4. non_recursive  : [zip/3]
5. non_recursive  : [activate/2]
6. recursive [non_tail] : [oddNs/1,pairNs/1]
7. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into repItems/2
3. SCC is partially evaluated into take/3
4. SCC is partially evaluated into zip/3
5. SCC is partially evaluated into activate/2
6. SCC is partially evaluated into pairNs/1
7. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations repItems/2 
* CE 13 is refined into CE [22] 
* CE 14 is refined into CE [23] 


#### Refined cost equations repItems/2 
* CE 22: repItems(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 23: repItems(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of repItems/2 
* CEs [22] --> Loop 12 
* CEs [23] --> Loop 13 

#### Loops of repItems/2 
* Loop 12: repItems(V1,Out) [V1>=0,V1+1=Out] 
* Loop 13: repItems(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR repItems(V1,Out) 

#### Partial ranking functions of CR repItems(V1,Out) 


### Resulting Chains:repItems(V1,Out) 
* [13]
* [12]


### Merging Chains  repItems/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations take/3 
* CE 20 is refined into CE [24] 
* CE 21 is refined into CE [25] 


#### Refined cost equations take/3 
* CE 24: take(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 25: take(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of take/3 
* CEs [24] --> Loop 14 
* CEs [25] --> Loop 15 

#### Loops of take/3 
* Loop 14: take(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 15: take(V1,V,Out) [V>=0,Out=0,V1=0] 

### Ranking functions of CR take(V1,V,Out) 

#### Partial ranking functions of CR take(V1,V,Out) 


### Resulting Chains:take(V1,V,Out) 
* [15]
* [14]


### Merging Chains  take/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations zip/3 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 
* CE 10 is refined into CE [28] 


#### Refined cost equations zip/3 
* CE 26: zip(V1,V,Out) = 1
     [V>=0,V1>=0,V1+V+1=Out] 
* CE 27: zip(V1,V,Out) = 1
     [V1>=0,Out=0,V=0] 
* CE 28: zip(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 

### Cost equations --> "Loop" of zip/3 
* CEs [26] --> Loop 16 
* CEs [27] --> Loop 17 
* CEs [28] --> Loop 18 

#### Loops of zip/3 
* Loop 16: zip(V1,V,Out) [V>=0,V1>=0,V1+V+1=Out] 
* Loop 17: zip(V1,V,Out) [V1>=0,Out=0,V=0] 
* Loop 18: zip(V1,V,Out) [V>=0,Out=0,V1=0] 

### Ranking functions of CR zip(V1,V,Out) 

#### Partial ranking functions of CR zip(V1,V,Out) 


### Resulting Chains:zip(V1,V,Out) 
* [18]
* [17]
* [16]


### Merging Chains  zip/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 


### Specialization of cost equations activate/2 
* CE 15 is refined into CE [29,30] 
* CE 17 is refined into CE [31,32] 
* CE 19 is refined into CE [33,34,35] 
* CE 16 is refined into CE [36] 
* CE 18 is refined into CE [37] 


#### Refined cost equations activate/2 
* CE 29: activate(V1,Out) = 1+ take(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=0,W1=0,Out=0] 
* CE 30: activate(A,A) = 1+ take(B,C,A):2
     [A>=B+1,B>=0,A=B+C+1] 
* CE 31: activate(V1,Out) = 1+ repItems(W1,X1):1
     [X1=0,W1=0,Out=0,V1=1] 
* CE 32: activate(A,A) = 1+ repItems(B,A):2
     [A>=1,A=B+1] 
* CE 33: activate(V1,Out) = 1+ zip(W1,X1,Y1):1
     [X1>=0,X1+1=V1,Y1=0,W1=0,Out=0] 
* CE 34: activate(V1,Out) = 1+ zip(W1,X1,Y1):2
     [W1>=0,W1+1=V1,Y1=0,X1=0,Out=0] 
* CE 35: activate(A,A) = 1+ zip(B,C,A):3
     [A>=B+1,B>=0,A=B+C+1] 
* CE 36: activate(A,A) = 1
     [A>=0] 
* CE 37: activate(A,A) = 2
     [A>=1] 

### Cost equations --> "Loop" of activate/2 
* CEs [30,32,35,36,37] --> Loop 19 
* CEs [29,31,33,34] --> Loop 20 

#### Loops of activate/2 
* Loop 19: activate(A,A) [A>=0] 
* Loop 20: activate(V1,Out) [V1>=1,Out=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 


### Resulting Chains:activate(V1,Out) 
* [20]
* [19]


### Merging Chains  activate/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations pairNs/1 
* CE 9 is refined into CE [38] 


#### Refined cost equations pairNs/1 
* CE 38: pairNs(Out) = 4+ pairNs(B)
     [Out>=3,Out=B+3] 

### Cost equations --> "Loop" of pairNs/1 
* CEs [38] --> Loop 21 

#### Loops of pairNs/1 
* Loop 21: pairNs(Out)->  pairNs(Out')
                  [Out>=3,Out=Out'+3] 

### Ranking functions of CR pairNs(Out) 

#### Partial ranking functions of CR pairNs(Out) 

Warning: no base case found for predicate

### Resulting Chains:pairNs(Out) 
* [[21]]...


### Merging Chains  pairNs/1 into  External patterns of execution 
* [[[21]]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40,41,42] 
* CE 4 is refined into CE [43,44] 
* CE 5 is refined into CE [45,46] 
* CE 6 is refined into CE [47] 
* CE 7 is refined into CE [48] 
* CE 8 is refined into CE [49,50] 


#### Refined cost equations start/2 
* CE 39: start(V1,V) = 2+ pairNs(W1):1
     [W1>=3] 
* CE 40: start(V1,V) = 0+ zip(W1,V,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 41: start(V1,V) = 0+ zip(V1,W1,X1):2
     [V1>=0,X1=0,W1=0,V=0] 
* CE 42: start(V1,V) = 0+ zip(V1,W1,X1):3
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 
* CE 43: start(V1,V) = 0+ repItems(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 44: start(V1,V) = 0+ repItems(W1,X1):2
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 45: start(V1,V) = 0+ activate(V1,W1):1
     [V1>=1,W1=0] 
* CE 46: start(V1,V) = 0+ activate(V1,V1):2
     [V1>=0] 
* CE 47: start(V1,V) = 1
     [V1>=0] 
* CE 48: start(V1,V) = 0+ pairNs(W1):1
     [W1>=3] 
* CE 49: start(V1,V) = 0+ take(W1,V,X1):1
     [V>=0,X1=0,W1=0,V1=0] 
* CE 50: start(V1,V) = 0+ take(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1,X1=V1+V+1] 

### Cost equations --> "Loop" of start/2 
* CEs [41] --> Loop 22 
* CEs [40,42,43,44,45,46,47,49,50] --> Loop 23 
* CEs [39,48] --> Loop 24 

#### Loops of start/2 
* Loop 22: start(V1,V) [V1>=0,V=0] 
* Loop 23: start(V1,V) [V1>=0] 
* Loop 24: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [24]...
* [23]
* [22]


### Merging Chains  start/2 into  External patterns of execution 
* [[22],[23]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of repItems(V1,Out):
* Chain [13]: 1
  with precondition: [V1=0,Out=0] 

* Chain [12]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of chains of take(V1,V,Out):
* Chain [15]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [14]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of chains of zip(V1,V,Out):
* Chain [18]: 1
  with precondition: [V1=0,Out=0,V>=0] 

* Chain [17]: 1
  with precondition: [V=0,Out=0,V1>=0] 

* Chain [16]: 1
  with precondition: [V+V1+1=Out,V1>=0,V>=0] 


#### Cost of chains of activate(V1,Out):
* Chain [20]: 2
  with precondition: [Out=0,V1>=1] 

* Chain [19]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of loops [21] 

 * loop 21:pairNs(Out) -> [pairNs(Out')] 
4
#### Cost of phase [21]:pairNs(Out) -> [pairNs(Out')] 
4*it(21)+0
#### Cost of chains of pairNs(Out):
* Chain [[21]]...: 4*it(21)+0
  with precondition: [Out>=3] 


#### Cost of chains of start(V1,V):
* Chain [24]...: 1*aux(1)+0
  with precondition: [] 

* Chain [23]: 2
  with precondition: [V1>=0] 

* Chain [22]: 1
  with precondition: [V=0,V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23] with precondition: [V1>=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [22] with precondition: [V=0,V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 45 ms.
* Invariants computed in 20 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 106 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 36 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 261 ms.

