
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [from/2]
2. non_recursive  : [s/2]
3. recursive [non_tail] : [activate/2]
4. non_recursive  : [fun/3]
5. non_recursive  : [fun1/3]
6. non_recursive  : [pi/2]
7. non_recursive  : [plus/3]
8. non_recursive  : [times/3]
9. non_recursive  : [square/2]
10. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into from/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into activate/2
4. SCC is partially evaluated into fun/3
5. SCC is partially evaluated into fun1/3
6. SCC is partially evaluated into pi/2
7. SCC is partially evaluated into plus/3
8. SCC is partially evaluated into times/3
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 21 is refined into CE [25] 
* CE 20 is refined into CE [26] 


#### Refined cost equations from/2 
* CE 25: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 26: from(V1,Out) = 2
     [Out>=3,Out=2*V1+3] 

### Cost equations --> "Loop" of from/2 
* CEs [25] --> Loop 15 
* CEs [26] --> Loop 16 

#### Loops of from/2 
* Loop 15: from(V1,Out) [V1>=0,V1+1=Out] 
* Loop 16: from(V1,Out) [V1>=0,2*V1+3=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [16]
* [15]


### Merging Chains  from/2 into  External patterns of execution 
* [[15]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations activate/2 
* CE 16 is refined into CE [27] 
* CE 17 is refined into CE [28,29] 
* CE 15 is refined into CE [30] 


#### Refined cost equations activate/2 
* CE 27: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 
* CE 28: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 29: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 30: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [30] --> Loop 17 
* CEs [27,28] --> Loop 18 
* CEs [29] --> Loop 19 

#### Loops of activate/2 
* Loop 17: activate(A,A) [A>=0] 
* Loop 18: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 19: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [18,19]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1,19:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [[18,19],17]
* [17]


### Merging Chains  activate/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[18,19]]] --> 2 


### Specialization of cost equations fun/3 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 


#### Refined cost equations fun/3 
* CE 31: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 32: fun(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of fun/3 
* CEs [31] --> Loop 20 
* CEs [32] --> Loop 21 

#### Loops of fun/3 
* Loop 20: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 21: fun(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR fun(V1,V,Out) 

#### Partial ranking functions of CR fun(V1,V,Out) 


### Resulting Chains:fun(V1,V,Out) 
* [21]
* [20]


### Merging Chains  fun/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations fun1/3 
* CE 24 is refined into CE [33] 
* CE 23 is refined into CE [34] 


#### Refined cost equations fun1/3 
* CE 33: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 34: fun1(V1,V,Out) = 1
     [V>=0,Out=1,V1=0] 

### Cost equations --> "Loop" of fun1/3 
* CEs [33] --> Loop 22 
* CEs [34] --> Loop 23 

#### Loops of fun1/3 
* Loop 22: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 23: fun1(V1,V,Out) [V>=0,Out=1,V1=0] 

### Ranking functions of CR fun1(V1,V,Out) 

#### Partial ranking functions of CR fun1(V1,V,Out) 


### Resulting Chains:fun1(V1,V,Out) 
* [23]
* [22]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations pi/2 
* CE 22 is refined into CE [35,36,37,38] 


#### Refined cost equations pi/2 
* CE 35: pi(V1,Out) = 1+ from(W1,X1):1+ fun(Y1,Z1,A2):1
     [A2=1,Z1=1,Y1=0,X1=1,W1=0,Out=1,V1=0] 
* CE 36: pi(V1,Out) = 1+ from(W1,X1):1+ fun(V1,Y1,Z1):2
     [V1>=0,Z1=0,Y1=1,X1=1,W1=0,Out=0] 
* CE 37: pi(V1,Out) = 1+ from(W1,X1):2+ fun(Y1,Z1,A2):1
     [A2=1,Z1=3,Y1=0,X1=3,W1=0,Out=1,V1=0] 
* CE 38: pi(V1,Out) = 1+ from(W1,X1):2+ fun(V1,Y1,Z1):2
     [V1>=0,Z1=0,Y1=3,X1=3,W1=0,Out=0] 

### Cost equations --> "Loop" of pi/2 
* CEs [36,38] --> Loop 24 
* CEs [35,37] --> Loop 25 

#### Loops of pi/2 
* Loop 24: pi(V1,Out) [V1>=0,Out=0] 
* Loop 25: pi(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR pi(V1,Out) 

#### Partial ranking functions of CR pi(V1,Out) 


### Resulting Chains:pi(V1,Out) 
* [25]
* [24]


### Merging Chains  pi/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations plus/3 
* CE 14 is refined into CE [39] 
* CE 13 is refined into CE [40] 


#### Refined cost equations plus/3 
* CE 39: plus(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 40: plus(A,B,B) = 1
     [B>=0,A=0] 

### Cost equations --> "Loop" of plus/3 
* CEs [39] --> Loop 26 
* CEs [40] --> Loop 27 

#### Loops of plus/3 
* Loop 26: plus(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 27: plus(A,B,B) [B>=0,A=0] 

### Ranking functions of CR plus(V1,V,Out) 

#### Partial ranking functions of CR plus(V1,V,Out) 


### Resulting Chains:plus(V1,V,Out) 
* [27]
* [26]


### Merging Chains  plus/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations times/3 
* CE 18 is refined into CE [41] 
* CE 19 is refined into CE [42] 


#### Refined cost equations times/3 
* CE 41: times(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 42: times(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of times/3 
* CEs [41,42] --> Loop 28 

#### Loops of times/3 
* Loop 28: times(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR times(V1,V,Out) 

#### Partial ranking functions of CR times(V1,V,Out) 


### Resulting Chains:times(V1,V,Out) 
* [28]


### Merging Chains  times/3 into  External patterns of execution 
* [[28]] --> 1 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [43,44] 
* CE 3 is refined into CE [45,46] 
* CE 4 is refined into CE [47,48] 
* CE 5 is refined into CE [49] 
* CE 6 is refined into CE [50] 
* CE 7 is refined into CE [51] 
* CE 8 is refined into CE [52,53] 
* CE 9 is refined into CE [54,55] 
* CE 10 is refined into CE [56,57] 


#### Refined cost equations start/2 
* CE 43: start(V1,V) = 0+ fun(W1,V,X1):1
     [V>=0,X1=1,W1=0,V1=0] 
* CE 44: start(V1,V) = 0+ fun(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 45: start(V1,V) = 0+ plus(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 46: start(V1,V) = 0+ plus(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 47: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 48: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=V1,V1>=1] 
* CE 49: start(V1,V) = 0+ times(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 50: start(V1,V) = 1
     [V1>=0] 
* CE 51: start(V1,V) = 1+ times(V1,V1,W1):1
     [V1>=0,W1=0] 
* CE 52: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 53: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 54: start(V1,V) = 0+ pi(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 55: start(V1,V) = 0+ pi(V1,W1):2
     [V1>=0,W1=0] 
* CE 56: start(V1,V) = 0+ fun1(W1,V,X1):1
     [V>=0,X1=1,W1=0,V1=0] 
* CE 57: start(V1,V) = 0+ fun1(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [43,44,45,46,47,48,49,50,51,52,53,54,55,56,57] --> Loop 29 

#### Loops of start/2 
* Loop 29: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [29]


### Merging Chains  start/2 into  External patterns of execution 
* [[29]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [16]: 2
  with precondition: [2*V1+3=Out,V1>=0] 

* Chain [15]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of loops [18,19] 

 * loop 18:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 19:activate(V1,Out) -> [activate(V1',Out')] 
3
#### Cost of phase [18,19]:activate(V1,Out) -> [activate(V1',Out')] 
5*it(18)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(18) =< aux(1)
it(18) =< aux(2)

#### Cost of chains of activate(V1,Out):
* Chain [[18,19],17]: 5*it(18)+1
  Such that:aux(3) =< V1
it(18) =< aux(3)

  with precondition: [V1>=1,Out>=V1] 

* Chain [17]: 1
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of fun(V1,V,Out):
* Chain [21]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [20]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun1(V1,V,Out):
* Chain [23]: 1
  with precondition: [V1=0,Out=1,V>=0] 

* Chain [22]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of pi(V1,Out):
* Chain [25]: 4
  with precondition: [V1=0,Out=1] 

* Chain [24]: 3
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of plus(V1,V,Out):
* Chain [27]: 1
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [26]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of times(V1,V,Out):
* Chain [28]: 1
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [29]: 5*s(2)+4
  Such that:s(1) =< V1
s(2) =< s(1)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [29] with precondition: [V1>=0] 
    - Upper bound: 5*V1+4 
    - Complexity: n 

### Maximum cost of start(V1,V): 5*V1+4 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 46 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 23 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 120 ms.

