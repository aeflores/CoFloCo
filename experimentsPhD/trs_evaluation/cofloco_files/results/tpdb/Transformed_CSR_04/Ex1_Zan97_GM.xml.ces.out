
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [fun/2,fun1/2]
1. non_recursive  : [fun2/1]
2. non_recursive  : [mark/2]
3. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun1/2
1. SCC is partially evaluated into fun2/1
2. SCC is partially evaluated into mark/2
3. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1/2 
* CE 9 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations fun1/2 
* CE 17: fun1(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 18: fun1(V,Out) = 2
     [Out=1,V=1] 
* CE 19: fun1(V,Out) = 2+ fun1(W,Out)
     [W=0,V=1] 

### Cost equations --> "Loop" of fun1/2 
* CEs [19] --> Loop 9 
* CEs [17] --> Loop 10 
* CEs [18] --> Loop 11 

#### Loops of fun1/2 
* Loop 9: fun1(V,Out)->  fun1(V',Out)
                  [V'=0,V=1] 
* Loop 10: fun1(V,Out) [V>=0,V+1=Out] 
* Loop 11: fun1(V,Out) [Out=1,V=1] 

### Ranking functions of CR fun1(V,Out) 

#### Partial ranking functions of CR fun1(V,Out) 


### Resulting Chains:fun1(V,Out) 
* [11]
* [10]
* [9,10]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[10,9],[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations fun2/1 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 


#### Refined cost equations fun2/1 
* CE 20: fun2(Out) = 1
     [Out=1] 
* CE 21: fun2(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of fun2/1 
* CEs [20] --> Loop 12 
* CEs [21] --> Loop 13 

#### Loops of fun2/1 
* Loop 12: fun2(Out) [Out=1] 
* Loop 13: fun2(Out) [Out=0] 

### Ranking functions of CR fun2(Out) 

#### Partial ranking functions of CR fun2(Out) 


### Resulting Chains:fun2(Out) 
* [13]
* [12]


### Merging Chains  fun2/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations mark/2 
* CE 12 is refined into CE [22] 
* CE 13 is refined into CE [23,24] 
* CE 14 is refined into CE [25,26] 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28,29] 


#### Refined cost equations mark/2 
* CE 22: mark(A,A) = 2
     [A>=1] 
* CE 23: mark(V,Out) = 2+ fun1(W,X):1
     [X=1,W=1,Out=1,V=2] 
* CE 24: mark(A,A) = 2+ fun1(B,A):2
     [A>=1,A=B+1] 
* CE 25: mark(V,Out) = 1+ fun1(W,X):1
     [X=1,W=1,Out=1,V=2] 
* CE 26: mark(A,A) = 1+ fun1(B,A):2
     [A>=1,A=B+1] 
* CE 27: mark(V,Out) = 1
     [Out=1,V=1] 
* CE 28: mark(V,Out) = 1+ fun2(W):1
     [W=0,Out=0,V=0] 
* CE 29: mark(V,Out) = 1+ fun2(W):2
     [W=1,Out=1,V=0] 

### Cost equations --> "Loop" of mark/2 
* CEs [23,25] --> Loop 14 
* CEs [22,24,26,27] --> Loop 15 
* CEs [29] --> Loop 16 
* CEs [28] --> Loop 17 

#### Loops of mark/2 
* Loop 14: mark(V,Out) [Out=1,V=2] 
* Loop 15: mark(A,A) [A>=1] 
* Loop 16: mark(V,Out) [Out=1,V=0] 
* Loop 17: mark(V,Out) [Out=0,V=0] 

### Ranking functions of CR mark(V,Out) 

#### Partial ranking functions of CR mark(V,Out) 


### Resulting Chains:mark(V,Out) 
* [17]
* [16]
* [15]
* [14]


### Merging Chains  mark/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[14]] --> 3 
* [[15]] --> 4 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [30] 
* CE 3 is refined into CE [31,32] 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35,36] 
* CE 6 is refined into CE [37,38,39,40] 


#### Refined cost equations start/1 
* CE 30: start(V) = 1
     [V>=0] 
* CE 31: start(V) = 1+ fun1(W,X):1
     [X=1,W=1,V=1] 
* CE 32: start(V) = 1+ fun1(W,X):2
     [X>=1,X=W+1,X=V+1] 
* CE 33: start(V) = 0+ fun2(W):1
     [W=0] 
* CE 34: start(V) = 0+ fun2(W):2
     [W=1] 
* CE 35: start(V) = 0+ fun1(W,X):1
     [X=1,W=1,V=1] 
* CE 36: start(V) = 0+ fun1(W,X):2
     [X>=1,X=W+1,X=V+1] 
* CE 37: start(V) = 0+ mark(W,X):1
     [X=0,W=0,V=0] 
* CE 38: start(V) = 0+ mark(W,X):2
     [X=1,W=0,V=0] 
* CE 39: start(V) = 0+ mark(W,X):3
     [X=1,W=2,V=2] 
* CE 40: start(V) = 0+ mark(V,V):4
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [30,31,32,33,34,35,36,37,38,39,40] --> Loop 18 

#### Loops of start/1 
* Loop 18: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [18]


### Merging Chains  start/1 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of fun1(V,Out):
* Chain [11]: 2
  with precondition: [V=1,Out=1] 

* Chain [10]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [9,10]: 3
  with precondition: [V=1,Out=1] 


#### Cost of chains of fun2(Out):
* Chain [13]: 1
  with precondition: [Out=0] 

* Chain [12]: 1
  with precondition: [Out=1] 


#### Cost of chains of mark(V,Out):
* Chain [17]: 2
  with precondition: [V=0,Out=0] 

* Chain [16]: 2
  with precondition: [V=0,Out=1] 

* Chain [15]: 3
  with precondition: [V=Out,V>=1] 

* Chain [14]: 5
  with precondition: [V=2,Out=1] 


#### Cost of chains of start(V):
* Chain [18]: 5
  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: 5 
    - Complexity: constant 

### Maximum cost of start(V): 5 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 66 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 168 ms.

