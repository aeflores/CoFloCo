
Preprocessing Cost Relations
=====================================
20. SCC does not have a single cut point : [isList/2,isNeList/2]  
 Merged into isListisNeList/2

#### Computed strongly connected components 
0. non_recursive  : [a/1]
1. non_recursive  : [e/1]
2. non_recursive  : [fun11/3]
3. non_recursive  : [i/1]
4. non_recursive  : [nil/1]
5. non_recursive  : [o/1]
6. non_recursive  : [u/1]
7. non_recursive  : [activate/2]
8. non_recursive  : [fun/2]
9. non_recursive  : [fun2/2]
10. non_recursive  : [fun12/2]
11. non_recursive  : [fun10/2]
12. non_recursive  : [isQid/2]
13. non_recursive  : [isNePal/2]
14. non_recursive  : [isPal/2]
15. non_recursive  : [fun1/3]
16. non_recursive  : [fun4/2]
17. non_recursive  : [fun6/2]
18. non_recursive  : [fun7/2]
19. non_recursive  : [fun9/2]
21. non_recursive  : [start/2]
20. recursive [non_tail,multiple] : [fun3/3,fun5/3,fun8/3,isListisNeList/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into activate/2
8. SCC is partially evaluated into fun/2
9. SCC is partially evaluated into fun2/2
10. SCC is partially evaluated into fun12/2
11. SCC is partially evaluated into fun10/2
12. SCC is partially evaluated into isQid/2
13. SCC is partially evaluated into isNePal/2
14. SCC is partially evaluated into isPal/2
15. SCC is partially evaluated into fun1/3
16. SCC is partially evaluated into fun4/2
17. SCC is partially evaluated into fun6/2
18. SCC is partially evaluated into fun7/2
19. SCC is partially evaluated into fun9/2
21. SCC is partially evaluated into start/2
20. SCC is partially evaluated into isListisNeList/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 26 is refined into CE [62] 
* CE 23 is refined into CE [63] 
* CE 22 is refined into CE [64] 
* CE 25 is refined into CE [65] 
* CE 21 is refined into CE [66] 
* CE 24 is refined into CE [67] 
* CE 27 is refined into CE [68] 


#### Refined cost equations activate/2 
* CE 62: activate(V3,Out) = 2
     [Out=4,V3=4] 
* CE 63: activate(V3,Out) = 2
     [Out=3,V3=3] 
* CE 64: activate(V3,Out) = 2
     [Out=2,V3=2] 
* CE 65: activate(V3,Out) = 2
     [Out=1,V3=1] 
* CE 66: activate(A,A) = 2
     [A>=1] 
* CE 67: activate(A,A) = 1
     [A>=0] 
* CE 68: activate(V3,Out) = 2
     [Out=0,V3=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [62] --> Loop 36 
* CEs [63] --> Loop 37 
* CEs [64] --> Loop 38 
* CEs [65] --> Loop 39 
* CEs [66,67,68] --> Loop 40 

#### Loops of activate/2 
* Loop 36: activate(V3,Out) [Out=4,V3=4] 
* Loop 37: activate(V3,Out) [Out=3,V3=3] 
* Loop 38: activate(V3,Out) [Out=2,V3=2] 
* Loop 39: activate(V3,Out) [Out=1,V3=1] 
* Loop 40: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V3,Out) 

#### Partial ranking functions of CR activate(V3,Out) 


### Resulting Chains:activate(V3,Out) 
* [40]
* [39]
* [38]
* [37]
* [36]


### Merging Chains  activate/2 into  External patterns of execution 
* [[39],[40]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 
* [[36]] --> 4 


### Specialization of cost equations fun/2 
* CE 38 is refined into CE [69] 
* CE 37 is refined into CE [70] 


#### Refined cost equations fun/2 
* CE 69: fun(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 70: fun(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun/2 
* CEs [69] --> Loop 41 
* CEs [70] --> Loop 42 

#### Loops of fun/2 
* Loop 41: fun(V3,Out) [V3>=0,Out=0] 
* Loop 42: fun(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun(V3,Out) 

#### Partial ranking functions of CR fun(V3,Out) 


### Resulting Chains:fun(V3,Out) 
* [42]
* [41]


### Merging Chains  fun/2 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations fun2/2 
* CE 54 is refined into CE [71] 
* CE 53 is refined into CE [72] 


#### Refined cost equations fun2/2 
* CE 71: fun2(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 72: fun2(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun2/2 
* CEs [71] --> Loop 43 
* CEs [72] --> Loop 44 

#### Loops of fun2/2 
* Loop 43: fun2(V3,Out) [V3>=0,Out=0] 
* Loop 44: fun2(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun2(V3,Out) 

#### Partial ranking functions of CR fun2(V3,Out) 


### Resulting Chains:fun2(V3,Out) 
* [44]
* [43]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations fun12/2 
* CE 59 is refined into CE [73] 
* CE 58 is refined into CE [74] 


#### Refined cost equations fun12/2 
* CE 73: fun12(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 74: fun12(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun12/2 
* CEs [73] --> Loop 45 
* CEs [74] --> Loop 46 

#### Loops of fun12/2 
* Loop 45: fun12(V3,Out) [V3>=0,Out=0] 
* Loop 46: fun12(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun12(V3,Out) 

#### Partial ranking functions of CR fun12(V3,Out) 


### Resulting Chains:fun12(V3,Out) 
* [46]
* [45]


### Merging Chains  fun12/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


### Specialization of cost equations fun10/2 
* CE 61 is refined into CE [75] 
* CE 60 is refined into CE [76] 


#### Refined cost equations fun10/2 
* CE 75: fun10(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 76: fun10(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun10/2 
* CEs [75] --> Loop 47 
* CEs [76] --> Loop 48 

#### Loops of fun10/2 
* Loop 47: fun10(V3,Out) [V3>=0,Out=0] 
* Loop 48: fun10(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun10(V3,Out) 

#### Partial ranking functions of CR fun10(V3,Out) 


### Resulting Chains:fun10(V3,Out) 
* [48]
* [47]


### Merging Chains  fun10/2 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


### Specialization of cost equations isQid/2 
* CE 48 is refined into CE [77] 
* CE 47 is refined into CE [78] 
* CE 44 is refined into CE [79] 
* CE 45 is refined into CE [80] 
* CE 43 is refined into CE [81] 
* CE 46 is refined into CE [82] 


#### Refined cost equations isQid/2 
* CE 77: isQid(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 78: isQid(V3,Out) = 1
     [Out=1,V3=5] 
* CE 79: isQid(V3,Out) = 1
     [Out=1,V3=4] 
* CE 80: isQid(V3,Out) = 1
     [Out=1,V3=2] 
* CE 81: isQid(V3,Out) = 1
     [Out=1,V3=1] 
* CE 82: isQid(V3,Out) = 1
     [Out=1,V3=0] 

### Cost equations --> "Loop" of isQid/2 
* CEs [77] --> Loop 49 
* CEs [78] --> Loop 50 
* CEs [79] --> Loop 51 
* CEs [80] --> Loop 52 
* CEs [81] --> Loop 53 
* CEs [82] --> Loop 54 

#### Loops of isQid/2 
* Loop 49: isQid(V3,Out) [V3>=0,Out=0] 
* Loop 50: isQid(V3,Out) [Out=1,V3=5] 
* Loop 51: isQid(V3,Out) [Out=1,V3=4] 
* Loop 52: isQid(V3,Out) [Out=1,V3=2] 
* Loop 53: isQid(V3,Out) [Out=1,V3=1] 
* Loop 54: isQid(V3,Out) [Out=1,V3=0] 

### Ranking functions of CR isQid(V3,Out) 

#### Partial ranking functions of CR isQid(V3,Out) 


### Resulting Chains:isQid(V3,Out) 
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]


### Merging Chains  isQid/2 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 
* [[51]] --> 4 
* [[50]] --> 5 
* [[49]] --> 6 


### Specialization of cost equations isNePal/2 
* CE 55 is refined into CE [83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100] 


#### Refined cost equations isNePal/2 
* CE 83: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):1+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=0] 
* CE 84: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):1+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=0] 
* CE 85: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):2+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=1] 
* CE 86: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):2+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=1] 
* CE 87: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):3+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=1,V3=2] 
* CE 88: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):3+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 89: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):4+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=1,V3=4] 
* CE 90: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):4+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 91: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):5+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=5,X3=5,W3=5,Out=1,V3=5] 
* CE 92: isNePal(V3,Out) = 1+ activate(W3,X3):1+ isQid(Y3,Z3):5+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=5,X3=5,W3=5,Out=0,V3=5] 
* CE 93: isNePal(V3,Out) = 1+ activate(V3,V3):1+ isQid(V3,W3):6+ fun10(X3,Y3):2
     [V3>=0,Y3=0,X3=0,W3=0,Out=0] 
* CE 94: isNePal(V3,Out) = 1+ activate(W3,X3):2+ isQid(Y3,Z3):3+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=1,V3=2] 
* CE 95: isNePal(V3,Out) = 1+ activate(W3,X3):2+ isQid(Y3,Z3):3+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 96: isNePal(V3,Out) = 1+ activate(W3,X3):2+ isQid(Y3,Z3):6+ fun10(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 97: isNePal(V3,Out) = 1+ activate(W3,X3):3+ isQid(Y3,Z3):6+ fun10(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=3,X3=3,W3=3,Out=0,V3=3] 
* CE 98: isNePal(V3,Out) = 1+ activate(W3,X3):4+ isQid(Y3,Z3):4+ fun10(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=1,V3=4] 
* CE 99: isNePal(V3,Out) = 1+ activate(W3,X3):4+ isQid(Y3,Z3):4+ fun10(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 100: isNePal(V3,Out) = 1+ activate(W3,X3):4+ isQid(Y3,Z3):6+ fun10(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=4,X3=4,W3=4,Out=0,V3=4] 

### Cost equations --> "Loop" of isNePal/2 
* CEs [91] --> Loop 55 
* CEs [92] --> Loop 56 
* CEs [89,98] --> Loop 57 
* CEs [90,99,100] --> Loop 58 
* CEs [97] --> Loop 59 
* CEs [87,94] --> Loop 60 
* CEs [88,95,96] --> Loop 61 
* CEs [85] --> Loop 62 
* CEs [86] --> Loop 63 
* CEs [83] --> Loop 64 
* CEs [84,93] --> Loop 65 

#### Loops of isNePal/2 
* Loop 55: isNePal(V3,Out) [Out=1,V3=5] 
* Loop 56: isNePal(V3,Out) [Out=0,V3=5] 
* Loop 57: isNePal(V3,Out) [Out=1,V3=4] 
* Loop 58: isNePal(V3,Out) [Out=0,V3=4] 
* Loop 59: isNePal(V3,Out) [Out=0,V3=3] 
* Loop 60: isNePal(V3,Out) [Out=1,V3=2] 
* Loop 61: isNePal(V3,Out) [Out=0,V3=2] 
* Loop 62: isNePal(V3,Out) [Out=1,V3=1] 
* Loop 63: isNePal(V3,Out) [Out=0,V3=1] 
* Loop 64: isNePal(V3,Out) [Out=1,V3=0] 
* Loop 65: isNePal(V3,Out) [V3>=0,Out=0] 

### Ranking functions of CR isNePal(V3,Out) 

#### Partial ranking functions of CR isNePal(V3,Out) 


### Resulting Chains:isNePal(V3,Out) 
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]


### Merging Chains  isNePal/2 into  External patterns of execution 
* [[64]] --> 1 
* [[63],[65]] --> 2 
* [[62]] --> 3 
* [[61]] --> 4 
* [[60]] --> 5 
* [[59]] --> 6 
* [[58]] --> 7 
* [[57]] --> 8 
* [[56]] --> 9 
* [[55]] --> 10 


### Specialization of cost equations isPal/2 
* CE 41 is refined into CE [101] 
* CE 42 is refined into CE [102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126] 


#### Refined cost equations isPal/2 
* CE 101: isPal(V3,Out) = 1
     [Out=1,V3=3] 
* CE 102: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):1+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=1,V3=0] 
* CE 103: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):1+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=0,X3=0,W3=0,Out=0,V3=0] 
* CE 104: isPal(V3,Out) = 1+ activate(V3,V3):1+ isNePal(V3,W3):2+ fun12(X3,Y3):2
     [V3>=0,Y3=0,X3=0,W3=0,Out=0] 
* CE 105: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):3+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=1,V3=1] 
* CE 106: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):3+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=1,X3=1,W3=1,Out=0,V3=1] 
* CE 107: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):4+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 108: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):5+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=1,V3=2] 
* CE 109: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):5+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 110: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):6+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=3,X3=3,W3=3,Out=0,V3=3] 
* CE 111: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):7+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 112: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):8+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=1,V3=4] 
* CE 113: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):8+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 114: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):9+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=5,X3=5,W3=5,Out=0,V3=5] 
* CE 115: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):10+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=5,X3=5,W3=5,Out=1,V3=5] 
* CE 116: isPal(V3,Out) = 1+ activate(W3,X3):1+ isNePal(Y3,Z3):10+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=5,X3=5,W3=5,Out=0,V3=5] 
* CE 117: isPal(V3,Out) = 1+ activate(W3,X3):2+ isNePal(Y3,Z3):2+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 118: isPal(V3,Out) = 1+ activate(W3,X3):2+ isNePal(Y3,Z3):4+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 119: isPal(V3,Out) = 1+ activate(W3,X3):2+ isNePal(Y3,Z3):5+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=1,V3=2] 
* CE 120: isPal(V3,Out) = 1+ activate(W3,X3):2+ isNePal(Y3,Z3):5+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=2,X3=2,W3=2,Out=0,V3=2] 
* CE 121: isPal(V3,Out) = 1+ activate(W3,X3):3+ isNePal(Y3,Z3):2+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=3,X3=3,W3=3,Out=0,V3=3] 
* CE 122: isPal(V3,Out) = 1+ activate(W3,X3):3+ isNePal(Y3,Z3):6+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=3,X3=3,W3=3,Out=0,V3=3] 
* CE 123: isPal(V3,Out) = 1+ activate(W3,X3):4+ isNePal(Y3,Z3):2+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 124: isPal(V3,Out) = 1+ activate(W3,X3):4+ isNePal(Y3,Z3):7+ fun12(A4,B4):2
     [B4=0,A4=0,Z3=0,Y3=4,X3=4,W3=4,Out=0,V3=4] 
* CE 125: isPal(V3,Out) = 1+ activate(W3,X3):4+ isNePal(Y3,Z3):8+ fun12(A4,B4):1
     [B4=1,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=1,V3=4] 
* CE 126: isPal(V3,Out) = 1+ activate(W3,X3):4+ isNePal(Y3,Z3):8+ fun12(A4,B4):2
     [B4=0,A4=1,Z3=1,Y3=4,X3=4,W3=4,Out=0,V3=4] 

### Cost equations --> "Loop" of isPal/2 
* CEs [115] --> Loop 66 
* CEs [114,116] --> Loop 67 
* CEs [112,125] --> Loop 68 
* CEs [111,113,123,124,126] --> Loop 69 
* CEs [101] --> Loop 70 
* CEs [110,121,122] --> Loop 71 
* CEs [108,119] --> Loop 72 
* CEs [107,109,117,118,120] --> Loop 73 
* CEs [105] --> Loop 74 
* CEs [106] --> Loop 75 
* CEs [102] --> Loop 76 
* CEs [103,104] --> Loop 77 

#### Loops of isPal/2 
* Loop 66: isPal(V3,Out) [Out=1,V3=5] 
* Loop 67: isPal(V3,Out) [Out=0,V3=5] 
* Loop 68: isPal(V3,Out) [Out=1,V3=4] 
* Loop 69: isPal(V3,Out) [Out=0,V3=4] 
* Loop 70: isPal(V3,Out) [Out=1,V3=3] 
* Loop 71: isPal(V3,Out) [Out=0,V3=3] 
* Loop 72: isPal(V3,Out) [Out=1,V3=2] 
* Loop 73: isPal(V3,Out) [Out=0,V3=2] 
* Loop 74: isPal(V3,Out) [Out=1,V3=1] 
* Loop 75: isPal(V3,Out) [Out=0,V3=1] 
* Loop 76: isPal(V3,Out) [Out=1,V3=0] 
* Loop 77: isPal(V3,Out) [V3>=0,Out=0] 

### Ranking functions of CR isPal(V3,Out) 

#### Partial ranking functions of CR isPal(V3,Out) 


### Resulting Chains:isPal(V3,Out) 
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]


### Merging Chains  isPal/2 into  External patterns of execution 
* [[76]] --> 1 
* [[75],[77]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[72]] --> 5 
* [[71]] --> 6 
* [[70]] --> 7 
* [[69]] --> 8 
* [[68]] --> 9 
* [[67]] --> 10 
* [[66]] --> 11 


### Specialization of cost equations fun1/3 
* CE 50 is refined into CE [127] 
* CE 49 is refined into CE [128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156] 


#### Refined cost equations fun1/3 
* CE 127: fun1(V3,V4,Out) = 0
     [V4>=0,V3>=0,Out=0] 
* CE 128: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):1+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=0,X4=0,W4=0,Out=1,V4=0,V3=1] 
* CE 129: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):1+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=0,X4=0,W4=0,Out=0,V4=0,V3=1] 
* CE 130: fun1(V3,V4,Out) = 1+ activate(V4,V4):1+ isPal(V4,W4):2+ fun2(X4,Y4):2
     [V4>=0,Y4=0,X4=0,W4=0,Out=0,V3=1] 
* CE 131: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):3+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=1,X4=1,W4=1,Out=1,V4=1,V3=1] 
* CE 132: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):3+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=1,X4=1,W4=1,Out=0,V4=1,V3=1] 
* CE 133: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):4+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,Out=0,V4=2,V3=1] 
* CE 134: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):5+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,Out=1,V4=2,V3=1] 
* CE 135: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):5+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,Out=0,V4=2,V3=1] 
* CE 136: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):6+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,Out=0,V4=3,V3=1] 
* CE 137: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):7+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,Out=1,V4=3,V3=1] 
* CE 138: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):7+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,Out=0,V4=3,V3=1] 
* CE 139: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):8+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,Out=0,V4=4,V3=1] 
* CE 140: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):9+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,Out=1,V4=4,V3=1] 
* CE 141: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):9+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,Out=0,V4=4,V3=1] 
* CE 142: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):10+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=5,X4=5,W4=5,Out=0,V4=5,V3=1] 
* CE 143: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):11+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=5,X4=5,W4=5,Out=1,V4=5,V3=1] 
* CE 144: fun1(V3,V4,Out) = 1+ activate(W4,X4):1+ isPal(Y4,Z4):11+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=5,X4=5,W4=5,Out=0,V4=5,V3=1] 
* CE 145: fun1(V3,V4,Out) = 1+ activate(W4,X4):2+ isPal(Y4,Z4):2+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,Out=0,V4=2,V3=1] 
* CE 146: fun1(V3,V4,Out) = 1+ activate(W4,X4):2+ isPal(Y4,Z4):4+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,Out=0,V4=2,V3=1] 
* CE 147: fun1(V3,V4,Out) = 1+ activate(W4,X4):2+ isPal(Y4,Z4):5+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,Out=1,V4=2,V3=1] 
* CE 148: fun1(V3,V4,Out) = 1+ activate(W4,X4):2+ isPal(Y4,Z4):5+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,Out=0,V4=2,V3=1] 
* CE 149: fun1(V3,V4,Out) = 1+ activate(W4,X4):3+ isPal(Y4,Z4):2+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,Out=0,V4=3,V3=1] 
* CE 150: fun1(V3,V4,Out) = 1+ activate(W4,X4):3+ isPal(Y4,Z4):6+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,Out=0,V4=3,V3=1] 
* CE 151: fun1(V3,V4,Out) = 1+ activate(W4,X4):3+ isPal(Y4,Z4):7+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,Out=1,V4=3,V3=1] 
* CE 152: fun1(V3,V4,Out) = 1+ activate(W4,X4):3+ isPal(Y4,Z4):7+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,Out=0,V4=3,V3=1] 
* CE 153: fun1(V3,V4,Out) = 1+ activate(W4,X4):4+ isPal(Y4,Z4):2+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,Out=0,V4=4,V3=1] 
* CE 154: fun1(V3,V4,Out) = 1+ activate(W4,X4):4+ isPal(Y4,Z4):8+ fun2(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,Out=0,V4=4,V3=1] 
* CE 155: fun1(V3,V4,Out) = 1+ activate(W4,X4):4+ isPal(Y4,Z4):9+ fun2(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,Out=1,V4=4,V3=1] 
* CE 156: fun1(V3,V4,Out) = 1+ activate(W4,X4):4+ isPal(Y4,Z4):9+ fun2(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,Out=0,V4=4,V3=1] 

### Cost equations --> "Loop" of fun1/3 
* CEs [143] --> Loop 78 
* CEs [142,144] --> Loop 79 
* CEs [140,155] --> Loop 80 
* CEs [139,141,153,154,156] --> Loop 81 
* CEs [137,151] --> Loop 82 
* CEs [136,138,149,150,152] --> Loop 83 
* CEs [134,147] --> Loop 84 
* CEs [133,135,145,146,148] --> Loop 85 
* CEs [131] --> Loop 86 
* CEs [132] --> Loop 87 
* CEs [128] --> Loop 88 
* CEs [127,129,130] --> Loop 89 

#### Loops of fun1/3 
* Loop 78: fun1(V3,V4,Out) [Out=1,V4=5,V3=1] 
* Loop 79: fun1(V3,V4,Out) [Out=0,V4=5,V3=1] 
* Loop 80: fun1(V3,V4,Out) [Out=1,V4=4,V3=1] 
* Loop 81: fun1(V3,V4,Out) [Out=0,V4=4,V3=1] 
* Loop 82: fun1(V3,V4,Out) [Out=1,V4=3,V3=1] 
* Loop 83: fun1(V3,V4,Out) [Out=0,V4=3,V3=1] 
* Loop 84: fun1(V3,V4,Out) [Out=1,V4=2,V3=1] 
* Loop 85: fun1(V3,V4,Out) [Out=0,V4=2,V3=1] 
* Loop 86: fun1(V3,V4,Out) [Out=1,V4=1,V3=1] 
* Loop 87: fun1(V3,V4,Out) [Out=0,V4=1,V3=1] 
* Loop 88: fun1(V3,V4,Out) [Out=1,V4=0,V3=1] 
* Loop 89: fun1(V3,V4,Out) [V4>=0,V3>=0,Out=0] 

### Ranking functions of CR fun1(V3,V4,Out) 

#### Partial ranking functions of CR fun1(V3,V4,Out) 


### Resulting Chains:fun1(V3,V4,Out) 
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[88]] --> 1 
* [[87],[89]] --> 2 
* [[86]] --> 3 
* [[85]] --> 4 
* [[84]] --> 5 
* [[83]] --> 6 
* [[82]] --> 7 
* [[81]] --> 8 
* [[80]] --> 9 
* [[79]] --> 10 
* [[78]] --> 11 


### Specialization of cost equations fun4/2 
* CE 36 is refined into CE [157] 
* CE 35 is refined into CE [158] 


#### Refined cost equations fun4/2 
* CE 157: fun4(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 158: fun4(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun4/2 
* CEs [157] --> Loop 90 
* CEs [158] --> Loop 91 

#### Loops of fun4/2 
* Loop 90: fun4(V3,Out) [V3>=0,Out=0] 
* Loop 91: fun4(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun4(V3,Out) 

#### Partial ranking functions of CR fun4(V3,Out) 


### Resulting Chains:fun4(V3,Out) 
* [91]
* [90]


### Merging Chains  fun4/2 into  External patterns of execution 
* [[91]] --> 1 
* [[90]] --> 2 


### Specialization of cost equations fun6/2 
* CE 52 is refined into CE [159] 
* CE 51 is refined into CE [160] 


#### Refined cost equations fun6/2 
* CE 159: fun6(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 160: fun6(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun6/2 
* CEs [159] --> Loop 92 
* CEs [160] --> Loop 93 

#### Loops of fun6/2 
* Loop 92: fun6(V3,Out) [V3>=0,Out=0] 
* Loop 93: fun6(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun6(V3,Out) 

#### Partial ranking functions of CR fun6(V3,Out) 


### Resulting Chains:fun6(V3,Out) 
* [93]
* [92]


### Merging Chains  fun6/2 into  External patterns of execution 
* [[93]] --> 1 
* [[92]] --> 2 


### Specialization of cost equations fun7/2 
* CE 57 is refined into CE [161] 
* CE 56 is refined into CE [162] 


#### Refined cost equations fun7/2 
* CE 161: fun7(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 162: fun7(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun7/2 
* CEs [161] --> Loop 94 
* CEs [162] --> Loop 95 

#### Loops of fun7/2 
* Loop 94: fun7(V3,Out) [V3>=0,Out=0] 
* Loop 95: fun7(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun7(V3,Out) 

#### Partial ranking functions of CR fun7(V3,Out) 


### Resulting Chains:fun7(V3,Out) 
* [95]
* [94]


### Merging Chains  fun7/2 into  External patterns of execution 
* [[95]] --> 1 
* [[94]] --> 2 


### Specialization of cost equations fun9/2 
* CE 40 is refined into CE [163] 
* CE 39 is refined into CE [164] 


#### Refined cost equations fun9/2 
* CE 163: fun9(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 164: fun9(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun9/2 
* CEs [163] --> Loop 96 
* CEs [164] --> Loop 97 

#### Loops of fun9/2 
* Loop 96: fun9(V3,Out) [V3>=0,Out=0] 
* Loop 97: fun9(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun9(V3,Out) 

#### Partial ranking functions of CR fun9(V3,Out) 


### Resulting Chains:fun9(V3,Out) 
* [97]
* [96]


### Merging Chains  fun9/2 into  External patterns of execution 
* [[97]] --> 1 
* [[96]] --> 2 


### Specialization of cost equations isListisNeList/2 
* CE 32 is refined into CE [165] 
* CE 34 is refined into CE [166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183] 
* CE 28 is refined into CE [184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199] 
* CE 33 is refined into CE [200,201,202,203,204,205,206,207] 
* CE 29 is refined into CE [208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287] 
* CE 30 is refined into CE [288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367] 
* CE 31 is refined into CE [368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447] 


#### Refined cost equations isListisNeList/2 
* CE 165: isListisNeList(A,B) = 1
     [B=1,A=3] 
* CE 166: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):1+ fun7(G,H):1
     [H=1,G=1,F=1,E=0,D=0,C=0,B=1,A=0] 
* CE 167: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):1+ fun7(G,H):2
     [H=0,G=1,F=1,E=0,D=0,C=0,B=0,A=0] 
* CE 168: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):2+ fun7(G,H):1
     [H=1,G=1,F=1,E=1,D=1,C=1,B=1,A=1] 
* CE 169: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):2+ fun7(G,H):2
     [H=0,G=1,F=1,E=1,D=1,C=1,B=0,A=1] 
* CE 170: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):3+ fun7(G,H):1
     [H=1,G=1,F=1,E=2,D=2,C=2,B=1,A=2] 
* CE 171: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):3+ fun7(G,H):2
     [H=0,G=1,F=1,E=2,D=2,C=2,B=0,A=2] 
* CE 172: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):4+ fun7(G,H):1
     [H=1,G=1,F=1,E=4,D=4,C=4,B=1,A=4] 
* CE 173: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):4+ fun7(G,H):2
     [H=0,G=1,F=1,E=4,D=4,C=4,B=0,A=4] 
* CE 174: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):5+ fun7(G,H):1
     [H=1,G=1,F=1,E=5,D=5,C=5,B=1,A=5] 
* CE 175: isListisNeList(A,B) = 1+ activate(C,D):1+ isQid(E,F):5+ fun7(G,H):2
     [H=0,G=1,F=1,E=5,D=5,C=5,B=0,A=5] 
* CE 176: isListisNeList(A,B) = 1+ activate(A,A):1+ isQid(A,C):6+ fun7(D,E):2
     [A>=0,E=0,D=0,C=0,B=0] 
* CE 177: isListisNeList(A,B) = 1+ activate(C,D):2+ isQid(E,F):3+ fun7(G,H):1
     [H=1,G=1,F=1,E=2,D=2,C=2,B=1,A=2] 
* CE 178: isListisNeList(A,B) = 1+ activate(C,D):2+ isQid(E,F):3+ fun7(G,H):2
     [H=0,G=1,F=1,E=2,D=2,C=2,B=0,A=2] 
* CE 179: isListisNeList(A,B) = 1+ activate(C,D):2+ isQid(E,F):6+ fun7(G,H):2
     [H=0,G=0,F=0,E=2,D=2,C=2,B=0,A=2] 
* CE 180: isListisNeList(A,B) = 1+ activate(C,D):3+ isQid(E,F):6+ fun7(G,H):2
     [H=0,G=0,F=0,E=3,D=3,C=3,B=0,A=3] 
* CE 181: isListisNeList(A,B) = 1+ activate(C,D):4+ isQid(E,F):4+ fun7(G,H):1
     [H=1,G=1,F=1,E=4,D=4,C=4,B=1,A=4] 
* CE 182: isListisNeList(A,B) = 1+ activate(C,D):4+ isQid(E,F):4+ fun7(G,H):2
     [H=0,G=1,F=1,E=4,D=4,C=4,B=0,A=4] 
* CE 183: isListisNeList(A,B) = 1+ activate(C,D):4+ isQid(E,F):6+ fun7(G,H):2
     [H=0,G=0,F=0,E=4,D=4,C=4,B=0,A=4] 
* CE 184: isListisNeList(A,B) = 1+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1
     [D>=0,E>=0,C>=0,C+E+1=A,B=0] 
* CE 185: isListisNeList(A,B) = 1+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2
     [D>=0,C>=0,C+3=A,F=2,E=2,B=0] 
* CE 186: isListisNeList(A,B) = 1+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3
     [D>=0,C>=0,C+4=A,F=3,E=3,B=0] 
* CE 187: isListisNeList(A,B) = 1+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4
     [D>=0,C>=0,C+5=A,F=4,E=4,B=0] 
* CE 188: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1
     [F>=0,G>=0,G+3=A,E=2,D=2,C=2,B=0] 
* CE 189: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2
     [F>=0,E=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 190: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3
     [F>=0,E=2,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 191: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4
     [F>=0,E=2,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 192: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1
     [F>=0,G>=0,G+4=A,E=3,D=3,C=3,B=0] 
* CE 193: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2
     [F>=0,E=3,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 194: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3
     [F>=0,E=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 195: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4
     [F>=0,E=3,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 196: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1
     [F>=0,G>=0,G+5=A,E=4,D=4,C=4,B=0] 
* CE 197: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2
     [F>=0,E=4,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 198: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3
     [F>=0,E=4,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 199: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4
     [F>=0,E=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 200: isListisNeList(A,B) = 1+ activate(A,A):1+ isListisNeList(A,C)+ fun6(D,E):1
     [A>=0,C=1,E=1,D=1,B=1] 
* CE 201: isListisNeList(A,B) = 1+ activate(A,A):1+ isListisNeList(A,C)+ fun6(C,D):2
     [C>=0,A>=0,D=0,B=0] 
* CE 202: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ fun6(G,H):1
     [F=1,E=2,H=1,G=1,D=2,C=2,B=1,A=2] 
* CE 203: isListisNeList(A,B) = 1+ activate(C,D):2+ isListisNeList(E,F)+ fun6(F,G):2
     [F>=0,E=2,G=0,D=2,C=2,B=0,A=2] 
* CE 204: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ fun6(G,H):1
     [F=1,E=3,H=1,G=1,D=3,C=3,B=1,A=3] 
* CE 205: isListisNeList(A,B) = 1+ activate(C,D):3+ isListisNeList(E,F)+ fun6(F,G):2
     [F>=0,E=3,G=0,D=3,C=3,B=0,A=3] 
* CE 206: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ fun6(G,H):1
     [F=1,E=4,H=1,G=1,D=4,C=4,B=1,A=4] 
* CE 207: isListisNeList(A,B) = 1+ activate(C,D):4+ isListisNeList(E,F)+ fun6(F,G):2
     [F>=0,E=4,G=0,D=4,C=4,B=0,A=4] 
* CE 208: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun4(G,H):1
     [E>=0,C>=0,C+E+1=A,F=1,D=1,H=1,G=1,B=1] 
* CE 209: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun4(F,G):2
     [F>=0,E>=0,C>=0,C+E+1=A,D=1,G=0,B=0] 
* CE 210: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 211: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 212: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 213: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 214: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 215: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 216: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 217: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 218: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 219: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 220: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 221: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 222: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 223: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 224: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 225: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 226: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun4(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 227: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun4(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 228: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(I,J):1
     [G>=0,G+3=A,H=1,F=1,E=2,J=1,I=1,D=2,C=2,B=1] 
* CE 229: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(H,I):2
     [H>=0,G>=0,G+3=A,F=1,E=2,I=0,D=2,C=2,B=0] 
* CE 230: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 231: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 232: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 233: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 234: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 235: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 236: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 237: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 238: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 239: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 240: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 241: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 242: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 243: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 244: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 245: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 246: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 247: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 248: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(I,J):1
     [G>=0,G+4=A,H=1,F=1,E=3,J=1,I=1,D=3,C=3,B=1] 
* CE 249: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(H,I):2
     [H>=0,G>=0,G+4=A,F=1,E=3,I=0,D=3,C=3,B=0] 
* CE 250: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 251: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 252: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 253: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 254: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 255: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 256: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 257: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 258: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 259: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 260: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 261: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 262: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 263: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 264: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 265: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 266: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 267: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 268: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(I,J):1
     [G>=0,G+5=A,H=1,F=1,E=4,J=1,I=1,D=4,C=4,B=1] 
* CE 269: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun4(H,I):2
     [H>=0,G>=0,G+5=A,F=1,E=4,I=0,D=4,C=4,B=0] 
* CE 270: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 271: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 272: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 273: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 274: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 275: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 276: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 277: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 278: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 279: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 280: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 281: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 282: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 283: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 284: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 285: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 286: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 287: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun4(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 288: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun(G,H):1
     [E>=0,C>=0,C+E+1=A,F=1,D=1,H=1,G=1,B=1] 
* CE 289: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun(F,G):2
     [F>=0,E>=0,C>=0,C+E+1=A,D=1,G=0,B=0] 
* CE 290: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 291: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 292: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 293: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 294: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 295: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 296: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 297: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 298: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 299: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 300: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 301: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 302: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 303: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 304: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 305: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 306: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 307: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 308: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(I,J):1
     [G>=0,G+3=A,H=1,F=1,E=2,J=1,I=1,D=2,C=2,B=1] 
* CE 309: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(H,I):2
     [H>=0,G>=0,G+3=A,F=1,E=2,I=0,D=2,C=2,B=0] 
* CE 310: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 311: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 312: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 313: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 314: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 315: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 316: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 317: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 318: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 319: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 320: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 321: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 322: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 323: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 324: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 325: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 326: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 327: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 328: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(I,J):1
     [G>=0,G+4=A,H=1,F=1,E=3,J=1,I=1,D=3,C=3,B=1] 
* CE 329: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(H,I):2
     [H>=0,G>=0,G+4=A,F=1,E=3,I=0,D=3,C=3,B=0] 
* CE 330: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 331: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 332: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 333: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 334: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 335: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 336: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 337: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 338: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 339: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 340: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 341: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 342: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 343: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 344: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 345: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 346: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 347: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 348: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(I,J):1
     [G>=0,G+5=A,H=1,F=1,E=4,J=1,I=1,D=4,C=4,B=1] 
* CE 349: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun(H,I):2
     [H>=0,G>=0,G+5=A,F=1,E=4,I=0,D=4,C=4,B=0] 
* CE 350: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 351: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 352: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 353: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 354: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 355: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 356: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 357: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 358: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 359: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 360: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 361: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 362: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 363: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 364: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 365: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 366: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 367: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 368: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun9(G,H):1
     [E>=0,C>=0,C+E+1=A,F=1,D=1,H=1,G=1,B=1] 
* CE 369: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,E):1+ activate(E,E):1+ isListisNeList(E,F)+ fun9(F,G):2
     [F>=0,E>=0,C>=0,C+E+1=A,D=1,G=0,B=0] 
* CE 370: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 371: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):2+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 372: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 373: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):3+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 374: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 375: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):1+ activate(G,H):4+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 376: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 377: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):1+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 378: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+3=A,J=1,I=2,D=1,L=1,K=1,H=2,G=2,F=2,E=2,B=1] 
* CE 379: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):2+ activate(G,H):2+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+3=A,I=2,D=1,K=0,H=2,G=2,F=2,E=2,B=0] 
* CE 380: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 381: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):1+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 382: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+4=A,J=1,I=3,D=1,L=1,K=1,H=3,G=3,F=3,E=3,B=1] 
* CE 383: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):3+ activate(G,H):3+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+4=A,I=3,D=1,K=0,H=3,G=3,F=3,E=3,B=0] 
* CE 384: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 385: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):1+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 386: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun9(K,L):1
     [C>=0,C+5=A,J=1,I=4,D=1,L=1,K=1,H=4,G=4,F=4,E=4,B=1] 
* CE 387: isListisNeList(A,B) = 2+ activate(C,C):1+ isListisNeList(C,D)+ activate(E,F):4+ activate(G,H):4+ isListisNeList(I,J)+ fun9(J,K):2
     [J>=0,C>=0,C+5=A,I=4,D=1,K=0,H=4,G=4,F=4,E=4,B=0] 
* CE 388: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(I,J):1
     [G>=0,G+3=A,H=1,F=1,E=2,J=1,I=1,D=2,C=2,B=1] 
* CE 389: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(H,I):2
     [H>=0,G>=0,G+3=A,F=1,E=2,I=0,D=2,C=2,B=0] 
* CE 390: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 391: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 392: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 393: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 394: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 395: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 396: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 397: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 398: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=2,N=1,M=1,J=2,I=2,H=2,G=2,D=2,C=2,B=1,A=5] 
* CE 399: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=2,M=0,J=2,I=2,H=2,G=2,D=2,C=2,B=0,A=5] 
* CE 400: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 401: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 402: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=2,N=1,M=1,J=3,I=3,H=3,G=3,D=2,C=2,B=1,A=6] 
* CE 403: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=2,M=0,J=3,I=3,H=3,G=3,D=2,C=2,B=0,A=6] 
* CE 404: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 405: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 406: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=2,N=1,M=1,J=4,I=4,H=4,G=4,D=2,C=2,B=1,A=7] 
* CE 407: isListisNeList(A,B) = 2+ activate(C,D):2+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=2,M=0,J=4,I=4,H=4,G=4,D=2,C=2,B=0,A=7] 
* CE 408: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(I,J):1
     [G>=0,G+4=A,H=1,F=1,E=3,J=1,I=1,D=3,C=3,B=1] 
* CE 409: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(H,I):2
     [H>=0,G>=0,G+4=A,F=1,E=3,I=0,D=3,C=3,B=0] 
* CE 410: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 411: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 412: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 413: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 414: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 415: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 416: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 417: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 418: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=3,N=1,M=1,J=2,I=2,H=2,G=2,D=3,C=3,B=1,A=6] 
* CE 419: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=3,M=0,J=2,I=2,H=2,G=2,D=3,C=3,B=0,A=6] 
* CE 420: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 421: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 422: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=3,N=1,M=1,J=3,I=3,H=3,G=3,D=3,C=3,B=1,A=7] 
* CE 423: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=3,M=0,J=3,I=3,H=3,G=3,D=3,C=3,B=0,A=7] 
* CE 424: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 425: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 426: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=3,N=1,M=1,J=4,I=4,H=4,G=4,D=3,C=3,B=1,A=8] 
* CE 427: isListisNeList(A,B) = 2+ activate(C,D):3+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=3,M=0,J=4,I=4,H=4,G=4,D=3,C=3,B=0,A=8] 
* CE 428: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(I,J):1
     [G>=0,G+5=A,H=1,F=1,E=4,J=1,I=1,D=4,C=4,B=1] 
* CE 429: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,G):1+ activate(G,G):1+ isListisNeList(G,H)+ fun9(H,I):2
     [H>=0,G>=0,G+5=A,F=1,E=4,I=0,D=4,C=4,B=0] 
* CE 430: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 431: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 432: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 433: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 434: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 435: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):1+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 436: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 437: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 438: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=2,F=1,E=4,N=1,M=1,J=2,I=2,H=2,G=2,D=4,C=4,B=1,A=7] 
* CE 439: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):2+ activate(I,J):2+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=2,F=1,E=4,M=0,J=2,I=2,H=2,G=2,D=4,C=4,B=0,A=7] 
* CE 440: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 441: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 442: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=3,F=1,E=4,N=1,M=1,J=3,I=3,H=3,G=3,D=4,C=4,B=1,A=8] 
* CE 443: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):3+ activate(I,J):3+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=3,F=1,E=4,M=0,J=3,I=3,H=3,G=3,D=4,C=4,B=0,A=8] 
* CE 444: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 445: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):1+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 
* CE 446: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(M,N):1
     [L=1,K=4,F=1,E=4,N=1,M=1,J=4,I=4,H=4,G=4,D=4,C=4,B=1,A=9] 
* CE 447: isListisNeList(A,B) = 2+ activate(C,D):4+ isListisNeList(E,F)+ activate(G,H):4+ activate(I,J):4+ isListisNeList(K,L)+ fun9(L,M):2
     [L>=0,K=4,F=1,E=4,M=0,J=4,I=4,H=4,G=4,D=4,C=4,B=0,A=9] 

### Cost equations --> "Loop" of isListisNeList/2 
* CEs [210,216,218,290,296,298,370,376,378] --> Loop 98 
* CEs [211,217,219,291,297,299,371,377,379] --> Loop 99 
* CEs [274,284,286,354,364,366,434,444,446] --> Loop 100 
* CEs [275,285,287,355,365,367,435,445,447] --> Loop 101 
* CEs [272,280,282,352,360,362,432,440,442] --> Loop 102 
* CEs [254,264,266,334,344,346,414,424,426] --> Loop 103 
* CEs [273,281,283,353,361,363,433,441,443] --> Loop 104 
* CEs [255,265,267,335,345,347,415,425,427] --> Loop 105 
* CEs [268,270,276,278,348,350,356,358,428,430,436,438] --> Loop 106 
* CEs [252,260,262,332,340,342,412,420,422] --> Loop 107 
* CEs [214,224,226,234,244,246,294,304,306,314,324,326,374,384,386,394,404,406] --> Loop 108 
* CEs [269,271,277,279,349,351,357,359,429,431,437,439] --> Loop 109 
* CEs [253,261,263,333,341,343,413,421,423] --> Loop 110 
* CEs [215,225,227,235,245,247,295,305,307,315,325,327,375,385,387,395,405,407] --> Loop 111 
* CEs [248,250,256,258,328,330,336,338,408,410,416,418] --> Loop 112 
* CEs [212,220,222,232,240,242,292,300,302,312,320,322,372,380,382,392,400,402] --> Loop 113 
* CEs [249,251,257,259,329,331,337,339,409,411,417,419] --> Loop 114 
* CEs [213,221,223,233,241,243,293,301,303,313,321,323,373,381,383,393,401,403] --> Loop 115 
* CEs [208,228,230,236,238,288,308,310,316,318,368,388,390,396,398] --> Loop 116 
* CEs [209,229,231,237,239,289,309,311,317,319,369,389,391,397,399] --> Loop 117 
* CEs [185] --> Loop 118 
* CEs [199] --> Loop 119 
* CEs [198] --> Loop 120 
* CEs [195] --> Loop 121 
* CEs [196,197] --> Loop 122 
* CEs [194] --> Loop 123 
* CEs [187,191] --> Loop 124 
* CEs [192,193] --> Loop 125 
* CEs [186,190] --> Loop 126 
* CEs [184,188,189] --> Loop 127 
* CEs [206] --> Loop 128 
* CEs [207] --> Loop 129 
* CEs [204] --> Loop 130 
* CEs [205] --> Loop 131 
* CEs [200,202] --> Loop 132 
* CEs [201,203] --> Loop 133 
* CEs [174] --> Loop 134 
* CEs [175] --> Loop 135 
* CEs [172,181] --> Loop 136 
* CEs [173,182,183] --> Loop 137 
* CEs [165] --> Loop 138 
* CEs [180] --> Loop 139 
* CEs [170,177] --> Loop 140 
* CEs [171,178,179] --> Loop 141 
* CEs [168] --> Loop 142 
* CEs [169] --> Loop 143 
* CEs [166] --> Loop 144 
* CEs [167,176] --> Loop 145 

#### Loops of isListisNeList/2 
* Loop 98: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=3,A=A'+3,B'2=1,A'2=2,B'=1,B=1] 
* Loop 99: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A>=3,A=A'+3,A'2=2,B'=1,B=0] 
* Loop 100: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2=1,A'2=4,B'=1,A'=4,B=1,A=9] 
* Loop 101: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A'2=4,B'=1,A'=4,B=0,A=9] 
* Loop 102: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2=1,A'2=3,B'=1,A'=4,B=1,A=8] 
* Loop 103: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2=1,A'2=4,B'=1,A'=3,B=1,A=8] 
* Loop 104: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A'2=3,B'=1,A'=4,B=0,A=8] 
* Loop 105: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A'2=4,B'=1,A'=3,B=0,A=8] 
* Loop 106: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=5,A=A'2+5,B'2=1,B'=1,A'=4,B=1] 
* Loop 107: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2=1,A'2=3,B'=1,A'=3,B=1,A=7] 
* Loop 108: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=5,A=A'+5,B'2=1,A'2=4,B'=1,B=1] 
* Loop 109: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A>=5,A=A'2+5,B'=1,A'=4,B=0] 
* Loop 110: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A'2=3,B'=1,A'=3,B=0,A=7] 
* Loop 111: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A>=5,A=A'+5,A'2=4,B'=1,B=0] 
* Loop 112: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=4,A=A'2+4,B'2=1,B'=1,A'=3,B=1] 
* Loop 113: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=4,A=A'+4,B'2=1,A'2=3,B'=1,B=1] 
* Loop 114: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A>=4,A=A'2+4,B'=1,A'=3,B=0] 
* Loop 115: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [B'2>=0,A>=4,A=A'+4,A'2=3,B'=1,B=0] 
* Loop 116: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,B'2=1,B'=1,B=1] 
* Loop 117: isListisNeList(A,B)->  isListisNeList(A',B')  isListisNeList(A'2,B'2)
                  [A>=A'+1,B'2>=0,A'>=0,A'+A'2+1=A,B'=1,B=0] 
* Loop 118: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A>=3,A=A'+3,B=0] 
* Loop 119: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=4,B=0,A=9] 
* Loop 120: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=4,B=0,A=8] 
* Loop 121: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=3,B=0,A=8] 
* Loop 122: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A>=5,A'=4,B=0] 
* Loop 123: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=3,B=0,A=7] 
* Loop 124: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A>=5,A=A'+5,B=0] 
* Loop 125: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A>=4,A'=3,B=0] 
* Loop 126: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A>=4,A=A'+4,B=0] 
* Loop 127: isListisNeList(A,B)->  isListisNeList(A',B')
                  [A>=A'+1,B'>=0,A'>=0,B=0] 
* Loop 128: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'=1,A'=4,B=1,A=4] 
* Loop 129: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=4,B=0,A=4] 
* Loop 130: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'=1,A'=3,B=1,A=3] 
* Loop 131: isListisNeList(A,B)->  isListisNeList(A',B')
                  [B'>=0,A'=3,B=0,A=3] 
* Loop 132: isListisNeList(A,B)->  isListisNeList(A,A')
                  [A>=0,A'=1,B=1] 
* Loop 133: isListisNeList(A,B)->  isListisNeList(A,A')
                  [A'>=0,A>=0,B=0] 
* Loop 134: isListisNeList(A,B) [B=1,A=5] 
* Loop 135: isListisNeList(A,B) [B=0,A=5] 
* Loop 136: isListisNeList(A,B) [B=1,A=4] 
* Loop 137: isListisNeList(A,B) [B=0,A=4] 
* Loop 138: isListisNeList(A,B) [B=1,A=3] 
* Loop 139: isListisNeList(A,B) [B=0,A=3] 
* Loop 140: isListisNeList(A,B) [B=1,A=2] 
* Loop 141: isListisNeList(A,B) [B=0,A=2] 
* Loop 142: isListisNeList(A,B) [B=1,A=1] 
* Loop 143: isListisNeList(A,B) [B=0,A=1] 
* Loop 144: isListisNeList(A,B) [B=1,A=0] 
* Loop 145: isListisNeList(A,B) [A>=0,B=0] 

### Ranking functions of CR isListisNeList(A,B) 

#### Partial ranking functions of CR isListisNeList(A,B) 
* Partial RF of phase [98,100,102,103,106,107,108,112,113,116,128,130,132]:
  - RF of loop [98:1,98:2]:
    A-2
  - RF of loop [100:1,100:2]:
    A/5-8/5
  - RF of loop [102:1,103:2]:
    A-7
  - RF of loop [102:2,103:1]:
    A/5-7/5
  - RF of loop [106:1,106:2,108:1,108:2]:
    A-4
  - RF of loop [107:1,107:2]:
    A/4-3/2
  - RF of loop [112:1,112:2,113:1,113:2]:
    A-3
  - RF of loop [116:1,116:2]:
    A
* Partial RF of phase [99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133]:
  - RF of loop [99:1,99:2,118:1]:
    A-2
  - RF of loop [101:1,101:2,119:1]:
    A/5-8/5
  - RF of loop [104:1,105:2,120:1]:
    A-7
  - RF of loop [104:2,105:1,121:1]:
    A/5-7/5
  - RF of loop [109:1,109:2,111:1,111:2,122:1,124:1]:
    A-4
  - RF of loop [110:1,110:2,123:1]:
    A/4-3/2
  - RF of loop [114:1,114:2,115:1,115:2,125:1,126:1]:
    A-3
  - RF of loop [117:1,117:2,127:1]:
    A


### Resulting Chains:isListisNeList(A,B) 
* [multiple([99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133],[[],[multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])],[145],[144],[143],[142],[141],[140],[139],[138],[137],[136],[135],[134]])]...
* [multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])]...
* [145]
* [144]
* [143]
* [142]
* [141]
* [140]
* [139]
* [138]
* [137]
* [136]
* [135]
* [134]


### Merging Chains  isListisNeList/2 into  External patterns of execution 
* [[144]] --> 1 
* [[143],[145]] --> 2 
* [[142]] --> 3 
* [[141]] --> 4 
* [[140]] --> 5 
* [[139]] --> 6 
* [[138]] --> 7 
* [[137]] --> 8 
* [[136]] --> 9 
* [[135]] --> 10 
* [[134]] --> 11 
* [[multiple([99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133],[[],[multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])],[145],[144],[143],[142],[141],[140],[139],[138],[137],[136],[135],[134]])]] --> 12 
* [[multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])]] --> 13 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [448] 
* CE 3 is refined into CE [449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485] 
* CE 4 is refined into CE [486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522] 
* CE 5 is refined into CE [523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559] 
* CE 6 is refined into CE [560,561] 
* CE 7 is refined into CE [562,563,564,565] 
* CE 8 is refined into CE [566,567,568,569,570,571,572,573,574,575,576] 
* CE 9 is refined into CE [577,578,579,580,581,582] 
* CE 10 is refined into CE [583,584,585,586,587,588,589,590,591,592,593] 
* CE 11 is refined into CE [594,595,596,597,598,599,600,601,602,603,604,605,606] 
* CE 12 is refined into CE [607,608] 
* CE 13 is refined into CE [609] 
* CE 14 is refined into CE [610,611] 
* CE 15 is refined into CE [612,613] 
* CE 16 is refined into CE [614,615,616,617,618,619,620,621,622,623] 
* CE 17 is refined into CE [624,625] 
* CE 18 is refined into CE [626,627] 
* CE 19 is refined into CE [628,629] 
* CE 20 is refined into CE [630,631] 


#### Refined cost equations start/2 
* CE 448: start(V3,V4) = 0
     [V4>=0,V3>=0] 
* CE 449: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 450: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 451: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):2+ fun4(X4,Y4):2
     [V4>=0,Y4=0,X4=0,W4=0,V3=1] 
* CE 452: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 453: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 454: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):4+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 455: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 456: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 457: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):6+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 458: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 459: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 460: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):8+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 461: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 462: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 463: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):10+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 464: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 465: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 466: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):12
     [V4>=0,X4=0,W4=0,V3=1] 
* CE 467: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):13
     [V4>=0,X4=1,W4=1,V3=1] 
* CE 468: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):2+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 469: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):4+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 470: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 471: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 472: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 473: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 474: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):2+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 475: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):6+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 476: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 477: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 478: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 479: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 480: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):2+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 481: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):8+ fun4(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 482: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun4(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 483: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun4(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 484: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 485: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 486: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 487: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 488: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):2+ fun(X4,Y4):2
     [V4>=0,Y4=0,X4=0,W4=0,V3=1] 
* CE 489: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 490: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 491: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):4+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 492: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 493: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 494: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):6+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 495: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 496: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 497: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):8+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 498: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 499: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 500: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):10+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 501: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 502: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 503: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):12
     [V4>=0,X4=0,W4=0,V3=1] 
* CE 504: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):13
     [V4>=0,X4=1,W4=1,V3=1] 
* CE 505: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):2+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 506: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):4+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 507: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 508: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 509: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 510: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 511: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):2+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 512: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):6+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 513: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 514: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 515: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 516: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 517: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):2+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 518: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):8+ fun(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 519: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 520: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 521: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 522: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 523: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 524: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):1+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=0,X4=0,W4=0,V4=0,V3=1] 
* CE 525: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):2+ fun9(X4,Y4):2
     [V4>=0,Y4=0,X4=0,W4=0,V3=1] 
* CE 526: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 527: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):3+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 528: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):4+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 529: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 530: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):5+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 531: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):6+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 532: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 533: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):7+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 534: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):8+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 535: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 536: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):9+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 537: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):10+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 538: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 539: start(V3,V4) = 1+ activate(W4,X4):1+ isListisNeList(Y4,Z4):11+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=5,X4=5,W4=5,V4=5,V3=1] 
* CE 540: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):12
     [V4>=0,X4=0,W4=0,V3=1] 
* CE 541: start(V3,V4) = 1+ activate(V4,V4):1+ isListisNeList(V4,W4):13
     [V4>=0,X4=1,W4=1,V3=1] 
* CE 542: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):2+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 543: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):4+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 544: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 545: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):5+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 546: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 547: start(V3,V4) = 1+ activate(W4,X4):2+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=2,X4=2,W4=2,V4=2,V3=1] 
* CE 548: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):2+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 549: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):6+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 550: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 551: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):7+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 552: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 553: start(V3,V4) = 1+ activate(W4,X4):3+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=3,X4=3,W4=3,V4=3,V3=1] 
* CE 554: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):2+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 555: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):8+ fun9(A5,B5):2
     [B5=0,A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 556: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun9(A5,B5):1
     [B5=1,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 557: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):9+ fun9(A5,B5):2
     [B5=0,A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 558: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):12
     [A5=0,Z4=0,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 559: start(V3,V4) = 1+ activate(W4,X4):4+ isListisNeList(Y4,Z4):13
     [A5=1,Z4=1,Y4=4,X4=4,W4=4,V4=4,V3=1] 
* CE 560: start(V3,V4) = 0+ fun(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 561: start(V3,V4) = 0+ fun(V3,W4):2
     [V3>=0,W4=0] 
* CE 562: start(V3,V4) = 0+ activate(V3,V3):1
     [V3>=0] 
* CE 563: start(V3,V4) = 0+ activate(W4,X4):2
     [X4=2,W4=2,V3=2] 
* CE 564: start(V3,V4) = 0+ activate(W4,X4):3
     [X4=3,W4=3,V3=3] 
* CE 565: start(V3,V4) = 0+ activate(W4,X4):4
     [X4=4,W4=4,V3=4] 
* CE 566: start(V3,V4) = 0+ isPal(W4,X4):1
     [X4=1,W4=0,V3=0] 
* CE 567: start(V3,V4) = 0+ isPal(V3,W4):2
     [V3>=0,W4=0] 
* CE 568: start(V3,V4) = 0+ isPal(W4,X4):3
     [X4=1,W4=1,V3=1] 
* CE 569: start(V3,V4) = 0+ isPal(W4,X4):4
     [X4=0,W4=2,V3=2] 
* CE 570: start(V3,V4) = 0+ isPal(W4,X4):5
     [X4=1,W4=2,V3=2] 
* CE 571: start(V3,V4) = 0+ isPal(W4,X4):6
     [X4=0,W4=3,V3=3] 
* CE 572: start(V3,V4) = 0+ isPal(W4,X4):7
     [X4=1,W4=3,V3=3] 
* CE 573: start(V3,V4) = 0+ isPal(W4,X4):8
     [X4=0,W4=4,V3=4] 
* CE 574: start(V3,V4) = 0+ isPal(W4,X4):9
     [X4=1,W4=4,V3=4] 
* CE 575: start(V3,V4) = 0+ isPal(W4,X4):10
     [X4=0,W4=5,V3=5] 
* CE 576: start(V3,V4) = 0+ isPal(W4,X4):11
     [X4=1,W4=5,V3=5] 
* CE 577: start(V3,V4) = 0+ isQid(W4,X4):1
     [X4=1,W4=0,V3=0] 
* CE 578: start(V3,V4) = 0+ isQid(W4,X4):2
     [X4=1,W4=1,V3=1] 
* CE 579: start(V3,V4) = 0+ isQid(W4,X4):3
     [X4=1,W4=2,V3=2] 
* CE 580: start(V3,V4) = 0+ isQid(W4,X4):4
     [X4=1,W4=4,V3=4] 
* CE 581: start(V3,V4) = 0+ isQid(W4,X4):5
     [X4=1,W4=5,V3=5] 
* CE 582: start(V3,V4) = 0+ isQid(V3,W4):6
     [V3>=0,W4=0] 
* CE 583: start(V3,V4) = 0+ fun1(W4,X4,Y4):1
     [Y4=1,X4=0,W4=1,V4=0,V3=1] 
* CE 584: start(V3,V4) = 0+ fun1(V3,V4,W4):2
     [V4>=0,V3>=0,W4=0] 
* CE 585: start(V3,V4) = 0+ fun1(W4,X4,Y4):3
     [Y4=1,X4=1,W4=1,V4=1,V3=1] 
* CE 586: start(V3,V4) = 0+ fun1(W4,X4,Y4):4
     [Y4=0,X4=2,W4=1,V4=2,V3=1] 
* CE 587: start(V3,V4) = 0+ fun1(W4,X4,Y4):5
     [Y4=1,X4=2,W4=1,V4=2,V3=1] 
* CE 588: start(V3,V4) = 0+ fun1(W4,X4,Y4):6
     [Y4=0,X4=3,W4=1,V4=3,V3=1] 
* CE 589: start(V3,V4) = 0+ fun1(W4,X4,Y4):7
     [Y4=1,X4=3,W4=1,V4=3,V3=1] 
* CE 590: start(V3,V4) = 0+ fun1(W4,X4,Y4):8
     [Y4=0,X4=4,W4=1,V4=4,V3=1] 
* CE 591: start(V3,V4) = 0+ fun1(W4,X4,Y4):9
     [Y4=1,X4=4,W4=1,V4=4,V3=1] 
* CE 592: start(V3,V4) = 0+ fun1(W4,X4,Y4):10
     [Y4=0,X4=5,W4=1,V4=5,V3=1] 
* CE 593: start(V3,V4) = 0+ fun1(W4,X4,Y4):11
     [Y4=1,X4=5,W4=1,V4=5,V3=1] 
* CE 594: start(V3,V4) = 0+ isListisNeList(W4,X4):1
     [X4=1,W4=0,V3=0] 
* CE 595: start(V3,V4) = 0+ isListisNeList(V3,W4):2
     [V3>=0,W4=0] 
* CE 596: start(V3,V4) = 0+ isListisNeList(W4,X4):3
     [X4=1,W4=1,V3=1] 
* CE 597: start(V3,V4) = 0+ isListisNeList(W4,X4):4
     [X4=0,W4=2,V3=2] 
* CE 598: start(V3,V4) = 0+ isListisNeList(W4,X4):5
     [X4=1,W4=2,V3=2] 
* CE 599: start(V3,V4) = 0+ isListisNeList(W4,X4):6
     [X4=0,W4=3,V3=3] 
* CE 600: start(V3,V4) = 0+ isListisNeList(W4,X4):7
     [X4=1,W4=3,V3=3] 
* CE 601: start(V3,V4) = 0+ isListisNeList(W4,X4):8
     [X4=0,W4=4,V3=4] 
* CE 602: start(V3,V4) = 0+ isListisNeList(W4,X4):9
     [X4=1,W4=4,V3=4] 
* CE 603: start(V3,V4) = 0+ isListisNeList(W4,X4):10
     [X4=0,W4=5,V3=5] 
* CE 604: start(V3,V4) = 0+ isListisNeList(W4,X4):11
     [X4=1,W4=5,V3=5] 
* CE 605: start(V3,V4) = 0+ isListisNeList(V3,W4):12
     [V3>=0,W4=0] 
* CE 606: start(V3,V4) = 0+ isListisNeList(V3,W4):13
     [V3>=0,W4=1] 
* CE 607: start(V3,V4) = 0+ fun6(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 608: start(V3,V4) = 0+ fun6(V3,W4):2
     [V3>=0,W4=0] 
* CE 609: start(V3,V4) = 1
     [] 
* CE 610: start(V3,V4) = 0+ fun2(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 611: start(V3,V4) = 0+ fun2(V3,W4):2
     [V3>=0,W4=0] 
* CE 612: start(V3,V4) = 0+ fun9(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 613: start(V3,V4) = 0+ fun9(V3,W4):2
     [V3>=0,W4=0] 
* CE 614: start(V3,V4) = 0+ isNePal(W4,X4):1
     [X4=1,W4=0,V3=0] 
* CE 615: start(V3,V4) = 0+ isNePal(V3,W4):2
     [V3>=0,W4=0] 
* CE 616: start(V3,V4) = 0+ isNePal(W4,X4):3
     [X4=1,W4=1,V3=1] 
* CE 617: start(V3,V4) = 0+ isNePal(W4,X4):4
     [X4=0,W4=2,V3=2] 
* CE 618: start(V3,V4) = 0+ isNePal(W4,X4):5
     [X4=1,W4=2,V3=2] 
* CE 619: start(V3,V4) = 0+ isNePal(W4,X4):6
     [X4=0,W4=3,V3=3] 
* CE 620: start(V3,V4) = 0+ isNePal(W4,X4):7
     [X4=0,W4=4,V3=4] 
* CE 621: start(V3,V4) = 0+ isNePal(W4,X4):8
     [X4=1,W4=4,V3=4] 
* CE 622: start(V3,V4) = 0+ isNePal(W4,X4):9
     [X4=0,W4=5,V3=5] 
* CE 623: start(V3,V4) = 0+ isNePal(W4,X4):10
     [X4=1,W4=5,V3=5] 
* CE 624: start(V3,V4) = 0+ fun7(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 625: start(V3,V4) = 0+ fun7(V3,W4):2
     [V3>=0,W4=0] 
* CE 626: start(V3,V4) = 0+ fun4(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 627: start(V3,V4) = 0+ fun4(V3,W4):2
     [V3>=0,W4=0] 
* CE 628: start(V3,V4) = 0+ fun12(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 629: start(V3,V4) = 0+ fun12(V3,W4):2
     [V3>=0,W4=0] 
* CE 630: start(V3,V4) = 0+ fun10(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 631: start(V3,V4) = 0+ fun10(V3,W4):2
     [V3>=0,W4=0] 

### Cost equations --> "Loop" of start/2 
* CEs [448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,468,469,470,471,474,475,476,477,480,481,482,483,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,505,506,507,508,511,512,513,514,517,518,519,520,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,542,543,544,545,548,549,550,551,554,555,556,557,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631] --> Loop 146 
* CEs [484,485,521,522,558,559] --> Loop 147 
* CEs [478,479,515,516,552,553] --> Loop 148 
* CEs [466,467,472,473,503,504,509,510,540,541,546,547,605,606] --> Loop 149 

#### Loops of start/2 
* Loop 146: start(V3,V4) [] 
* Loop 147: start(V3,V4) [V4=4,V3=1] 
* Loop 148: start(V3,V4) [V4=3,V3=1] 
* Loop 149: start(V3,V4) [V3>=0] 

### Ranking functions of CR start(V3,V4) 

#### Partial ranking functions of CR start(V3,V4) 


### Resulting Chains:start(V3,V4) 
* [149]...
* [148]...
* [147]...
* [146]


### Merging Chains  start/2 into  External patterns of execution 
* [[146]] --> 1 
* [[148]] --> 2 
* [[147]] --> 3 
* [[149]] --> 4 


Computing Bounds
=====================================

#### Cost of chains of activate(V3,Out):
* Chain [40]: 2
  with precondition: [V3=Out,V3>=0] 

* Chain [39]: 2
  with precondition: [V3=1,Out=1] 

* Chain [38]: 2
  with precondition: [V3=2,Out=2] 

* Chain [37]: 2
  with precondition: [V3=3,Out=3] 

* Chain [36]: 2
  with precondition: [V3=4,Out=4] 


#### Cost of chains of fun(V3,Out):
* Chain [42]: 1
  with precondition: [V3=1,Out=1] 

* Chain [41]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun2(V3,Out):
* Chain [44]: 1
  with precondition: [V3=1,Out=1] 

* Chain [43]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun12(V3,Out):
* Chain [46]: 1
  with precondition: [V3=1,Out=1] 

* Chain [45]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun10(V3,Out):
* Chain [48]: 1
  with precondition: [V3=1,Out=1] 

* Chain [47]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of isQid(V3,Out):
* Chain [54]: 1
  with precondition: [V3=0,Out=1] 

* Chain [53]: 1
  with precondition: [V3=1,Out=1] 

* Chain [52]: 1
  with precondition: [V3=2,Out=1] 

* Chain [51]: 1
  with precondition: [V3=4,Out=1] 

* Chain [50]: 1
  with precondition: [V3=5,Out=1] 

* Chain [49]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of isNePal(V3,Out):
* Chain [65]: 4
  with precondition: [Out=0,V3>=0] 

* Chain [64]: 5
  with precondition: [V3=0,Out=1] 

* Chain [63]: 4
  with precondition: [V3=1,Out=0] 

* Chain [62]: 5
  with precondition: [V3=1,Out=1] 

* Chain [61]: 4
  with precondition: [V3=2,Out=0] 

* Chain [60]: 5
  with precondition: [V3=2,Out=1] 

* Chain [59]: 3
  with precondition: [V3=3,Out=0] 

* Chain [58]: 4
  with precondition: [V3=4,Out=0] 

* Chain [57]: 5
  with precondition: [V3=4,Out=1] 

* Chain [56]: 4
  with precondition: [V3=5,Out=0] 

* Chain [55]: 5
  with precondition: [V3=5,Out=1] 


#### Cost of chains of isPal(V3,Out):
* Chain [77]: 8
  with precondition: [Out=0,V3>=0] 

* Chain [76]: 9
  with precondition: [V3=0,Out=1] 

* Chain [75]: 8
  with precondition: [V3=1,Out=0] 

* Chain [74]: 9
  with precondition: [V3=1,Out=1] 

* Chain [73]: 8
  with precondition: [V3=2,Out=0] 

* Chain [72]: 9
  with precondition: [V3=2,Out=1] 

* Chain [71]: 7
  with precondition: [V3=3,Out=0] 

* Chain [70]: 1
  with precondition: [V3=3,Out=1] 

* Chain [69]: 8
  with precondition: [V3=4,Out=0] 

* Chain [68]: 9
  with precondition: [V3=4,Out=1] 

* Chain [67]: 8
  with precondition: [V3=5,Out=0] 

* Chain [66]: 9
  with precondition: [V3=5,Out=1] 


#### Cost of chains of fun1(V3,V4,Out):
* Chain [89]: 12
  with precondition: [Out=0,V3>=0,V4>=0] 

* Chain [88]: 13
  with precondition: [V3=1,V4=0,Out=1] 

* Chain [87]: 12
  with precondition: [V3=1,V4=1,Out=0] 

* Chain [86]: 13
  with precondition: [V3=1,V4=1,Out=1] 

* Chain [85]: 12
  with precondition: [V3=1,V4=2,Out=0] 

* Chain [84]: 13
  with precondition: [V3=1,V4=2,Out=1] 

* Chain [83]: 11
  with precondition: [V3=1,V4=3,Out=0] 

* Chain [82]: 5
  with precondition: [V3=1,V4=3,Out=1] 

* Chain [81]: 12
  with precondition: [V3=1,V4=4,Out=0] 

* Chain [80]: 13
  with precondition: [V3=1,V4=4,Out=1] 

* Chain [79]: 12
  with precondition: [V3=1,V4=5,Out=0] 

* Chain [78]: 13
  with precondition: [V3=1,V4=5,Out=1] 


#### Cost of chains of fun4(V3,Out):
* Chain [91]: 1
  with precondition: [V3=1,Out=1] 

* Chain [90]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun6(V3,Out):
* Chain [93]: 1
  with precondition: [V3=1,Out=1] 

* Chain [92]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun7(V3,Out):
* Chain [95]: 1
  with precondition: [V3=1,Out=1] 

* Chain [94]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of chains of fun9(V3,Out):
* Chain [97]: 1
  with precondition: [V3=1,Out=1] 

* Chain [96]: 0
  with precondition: [Out=0,V3>=0] 


#### Cost of loops [98,100,102,103,106,107,108,112,113,116,128,130,132] 

 * loop 98:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 100:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 102:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 103:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 106:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 107:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 108:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 112:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 113:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 116:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
9
 * loop 128:isListisNeList(A,B) -> [isListisNeList(A',B')] 
4
 * loop 130:isListisNeList(A,B) -> [isListisNeList(A',B')] 
4
 * loop 132:isListisNeList(A,B) -> [isListisNeList(A',B')] 
4
#### Cost of phase [98,100,102,103,106,107,108,112,113,116,128,130,132]:isListisNeList(A,B) -> [] 
101*it(98)+12*it(128)+5*it([140])+5*it([142])+5*it([144])+0
  Such that:it([144]) =< A+1
it([142]) =< A/2+1/2
it([140]) =< A/3+1/3
aux(1) =< A/2
it(98) =< aux(1)

#### Cost of loops [99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133] 

 * loop 99:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 101:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 104:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 105:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 109:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 110:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 111:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 114:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 115:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 117:isListisNeList(A,B) -> [isListisNeList(A',B'),isListisNeList(A'2,B'2)] 
8
 * loop 118:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 119:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 120:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 121:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 122:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 123:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 124:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 125:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 126:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 127:isListisNeList(A,B) -> [isListisNeList(A',B')] 
5
 * loop 129:isListisNeList(A,B) -> [isListisNeList(A',B')] 
3
 * loop 131:isListisNeList(A,B) -> [isListisNeList(A',B')] 
3
 * loop 133:isListisNeList(A,B) -> [isListisNeList(A',B')] 
3
#### Cost of phase [99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133]:isListisNeList(A,B) -> [] 
137*it(99)+5*it(122)+10*it(125)+21*it(129)+9*it([140])+9*it([142])+14*it([144])+101*s(1)+5*s(3)+5*s(4)+0
  Such that:aux(5) =< A
aux(6) =< A+1
aux(7) =< A/2
aux(8) =< A/2+1/2
aux(9) =< A/3+1/3
it(122) =< aux(5)
it(125) =< aux(5)
it([140]) =< aux(5)
it([142]) =< aux(5)
s(6) =< aux(5)
it([144]) =< aux(6)
it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])]) =< aux(6)
it(99) =< aux(7)
it([142]) =< aux(8)
s(6) =< aux(8)
it([140]) =< aux(9)
s(3) =< aux(9)
s(4) =< aux(6)* (1/2)
it(125) =< it([140])+it([140])+it([142])*2+it([142])*2+it([144])*3+it([144])*3+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*3+aux(5)
it(122) =< it(99)+it(99)+it([140])*2+it([140])*2+it([142])*3+it([142])*3+it([144])*4+it([144])*4+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*4+aux(5)
it(125) =< it(99)+it(99)+it([140])*2+it([140])*2+it([142])*3+it([142])*3+it([144])*4+it([144])*4+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*4+aux(5)
s(1) =< s(6)

#### Cost of chains of isListisNeList(A,B):
* Chain [multiple([99,101,104,105,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,129,131,133],[[],[multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])],[145],[144],[143],[142],[141],[140],[139],[138],[137],[136],[135],[134]])]...: 137*it(99)+5*it(122)+10*it(125)+21*it(129)+9*it([140])+9*it([142])+14*it([144])+101*s(1)+5*s(3)+5*s(4)+0
  Such that:aux(5) =< A
aux(6) =< A+1
aux(7) =< A/2
aux(8) =< A/2+1/2
aux(9) =< A/3+1/3
it(122) =< aux(5)
it(125) =< aux(5)
it([140]) =< aux(5)
it([142]) =< aux(5)
s(6) =< aux(5)
it([144]) =< aux(6)
it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])]) =< aux(6)
it(99) =< aux(7)
it([142]) =< aux(8)
s(6) =< aux(8)
it([140]) =< aux(9)
s(3) =< aux(9)
s(4) =< aux(6)* (1/2)
it(125) =< it([140])+it([140])+it([142])*2+it([142])*2+it([144])*3+it([144])*3+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*3+aux(5)
it(122) =< it(99)+it(99)+it([140])*2+it([140])*2+it([142])*3+it([142])*3+it([144])*4+it([144])*4+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*4+aux(5)
it(125) =< it(99)+it(99)+it([140])*2+it([140])*2+it([142])*3+it([142])*3+it([144])*4+it([144])*4+it([multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])])*4+aux(5)
s(1) =< s(6)

  with precondition: [A>=0,B=0] 

* Chain [multiple([98,100,102,103,106,107,108,112,113,116,128,130,132],[[],[144],[142],[140],[138],[136],[134]])]...: 101*it(98)+12*it(128)+5*it([140])+5*it([142])+5*it([144])+0
  Such that:it([144]) =< A+1
it([142]) =< A/2+1/2
it([140]) =< A/3+1/3
aux(1) =< A/2
it(98) =< aux(1)

  with precondition: [A>=0,B=1] 

* Chain [145]: 4
  with precondition: [B=0,A>=0] 

* Chain [144]: 5
  with precondition: [A=0,B=1] 

* Chain [143]: 4
  with precondition: [A=1,B=0] 

* Chain [142]: 5
  with precondition: [A=1,B=1] 

* Chain [141]: 4
  with precondition: [A=2,B=0] 

* Chain [140]: 5
  with precondition: [A=2,B=1] 

* Chain [139]: 3
  with precondition: [A=3,B=0] 

* Chain [138]: 1
  with precondition: [A=3,B=1] 

* Chain [137]: 4
  with precondition: [A=4,B=0] 

* Chain [136]: 5
  with precondition: [A=4,B=1] 

* Chain [135]: 4
  with precondition: [A=5,B=0] 

* Chain [134]: 5
  with precondition: [A=5,B=1] 


#### Cost of chains of start(V3,V4):
* Chain [149]...: 15*s(12)+30*s(13)+27*s(14)+27*s(15)+57*s(17)+714*s(19)+30*s(20)+15*s(21)+303*s(22)+231*s(23)+15*s(25)+15*s(35)+30*s(36)+27*s(37)+27*s(38)+57*s(40)+744*s(42)+15*s(44)+303*s(45)+15*s(48)+5*s(150)+10*s(151)+9*s(152)+9*s(153)+19*s(155)+238*s(157)+10*s(158)+5*s(159)+101*s(160)+5*s(163)+3
  Such that:s(145) =< V3
aux(16) =< 1
aux(17) =< 2
aux(18) =< 3
aux(19) =< 3/2
aux(20) =< V3+1
aux(21) =< V3/2
aux(22) =< V3/2+1/2
aux(23) =< V3/3+1/3
aux(24) =< V4
aux(25) =< V4+1
aux(26) =< V4/2
aux(27) =< V4/2+1/2
aux(28) =< V4/3+1/3
s(40) =< aux(18)
s(48) =< aux(19)
s(155) =< aux(20)
s(163) =< aux(22)
s(158) =< aux(23)
s(17) =< aux(25)
s(25) =< aux(27)
s(20) =< aux(28)
s(35) =< aux(17)
s(36) =< aux(17)
s(37) =< aux(17)
s(38) =< aux(17)
s(39) =< aux(17)
s(42) =< aux(16)
s(38) =< aux(19)
s(39) =< aux(19)
s(37) =< aux(16)
s(44) =< aux(18)* (1/2)
s(36) =< s(37)+s(37)+s(38)*2+s(38)*2+s(40)*3+s(40)*3+aux(18)*3+aux(17)
s(35) =< s(42)+s(42)+s(37)*2+s(37)*2+s(38)*3+s(38)*3+s(40)*4+s(40)*4+aux(18)*4+aux(17)
s(36) =< s(42)+s(42)+s(37)*2+s(37)*2+s(38)*3+s(38)*3+s(40)*4+s(40)*4+aux(18)*4+aux(17)
s(45) =< s(39)
s(150) =< s(145)
s(151) =< s(145)
s(152) =< s(145)
s(153) =< s(145)
s(154) =< s(145)
s(157) =< aux(21)
s(153) =< aux(22)
s(154) =< aux(22)
s(152) =< aux(23)
s(159) =< aux(20)* (1/2)
s(151) =< s(152)+s(152)+s(153)*2+s(153)*2+s(155)*3+s(155)*3+aux(20)*3+s(145)
s(150) =< s(157)+s(157)+s(152)*2+s(152)*2+s(153)*3+s(153)*3+s(155)*4+s(155)*4+aux(20)*4+s(145)
s(151) =< s(157)+s(157)+s(152)*2+s(152)*2+s(153)*3+s(153)*3+s(155)*4+s(155)*4+aux(20)*4+s(145)
s(160) =< s(154)
s(12) =< aux(24)
s(13) =< aux(24)
s(14) =< aux(24)
s(15) =< aux(24)
s(16) =< aux(24)
s(19) =< aux(26)
s(15) =< aux(27)
s(16) =< aux(27)
s(14) =< aux(28)
s(21) =< aux(25)* (1/2)
s(13) =< s(14)+s(14)+s(15)*2+s(15)*2+s(17)*3+s(17)*3+aux(25)*3+aux(24)
s(12) =< s(19)+s(19)+s(14)*2+s(14)*2+s(15)*3+s(15)*3+s(17)*4+s(17)*4+aux(25)*4+aux(24)
s(13) =< s(19)+s(19)+s(14)*2+s(14)*2+s(15)*3+s(15)*3+s(17)*4+s(17)*4+aux(25)*4+aux(24)
s(22) =< s(16)

  with precondition: [V3>=0] 

* Chain [148]...: 1*aux(34)+0
  with precondition: [V3=1,V4=3] 

* Chain [147]...: 1*aux(40)+0
  with precondition: [V3=1,V4=4] 

* Chain [146]: 13
  with precondition: [] 


Closed-form bounds of start(V3,V4): 
-------------------------------------
* Chain [149]... with precondition: [V3>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [148]... with precondition: [V3=1,V4=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [147]... with precondition: [V3=1,V4=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [146] with precondition: [] 
    - Upper bound: 13 
    - Complexity: constant 

### Maximum cost of start(V3,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 133 ms.
* Invariants computed in 151 ms.
   - Backward Invariants 53 ms.
   - Transitive Invariants 21 ms.
* Refinement performed in 3244 ms.
* Termination proved in 142 ms.
* Upper bounds computed in 693 ms.
   - Equation cost structures 560 ms.
   - Phase cost structures 351 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 8 ms.
* Total analysis performed in 4539 ms.

