
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [cons/3]
2. recursive  : [fib/2]
3. recursive  : [fib1/3]
4. non_recursive  : [proper/2]
5. recursive  : [s/2]
6. recursive  : [sel/3]
7. recursive  : [top/2]
8. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into cons/3
2. SCC is partially evaluated into fib/2
3. SCC is partially evaluated into fib1/3
4. SCC is partially evaluated into proper/2
5. SCC is partially evaluated into s/2
6. SCC is partially evaluated into sel/3
7. SCC is partially evaluated into top/2
8. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 17 is refined into CE [34] 
* CE 15 is refined into CE [35] 
* CE 16 is refined into CE [36] 
* CE 14 is refined into CE [37] 


#### Refined cost equations add/3 
* CE 34: add(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 35: add(V1,V,Out) = 1+ add(V1,W1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 36: add(V1,V,Out) = 1+ add(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 37: add(V1,V,Out) = 1+ add(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of add/3 
* CEs [35] --> Loop 25 
* CEs [36] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [34] --> Loop 28 

#### Loops of add/3 
* Loop 25: add(V1,V,Out)->  add(V1,V',Out')
                  [V>=1,V1>=0,Out=Out'+1,V=V'+1] 
* Loop 26: add(V1,V,Out)->  add(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 27: add(V1,V,Out)->  add(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 28: add(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR add(V1,V,Out) 
* RF of phase [25,26,27]: [V1+V]

#### Partial ranking functions of CR add(V1,V,Out) 
* Partial RF of phase [25,26,27]:
  - RF of loop [25:1,27:1]:
    V
  - RF of loop [26:1,27:1]:
    V1


### Resulting Chains:add(V1,V,Out) 
* [[25,26,27],28]
* [28]


### Merging Chains  add/3 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[25,26,27]]] --> 2 


### Specialization of cost equations cons/3 
* CE 25 is refined into CE [38] 
* CE 24 is refined into CE [39] 
* CE 23 is refined into CE [40] 


#### Refined cost equations cons/3 
* CE 38: cons(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 39: cons(V1,V,Out) = 1+ cons(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 40: cons(V1,V,Out) = 1+ cons(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of cons/3 
* CEs [39] --> Loop 29 
* CEs [40] --> Loop 30 
* CEs [38] --> Loop 31 

#### Loops of cons/3 
* Loop 29: cons(V1,V,Out)->  cons(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 30: cons(V1,V,Out)->  cons(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 31: cons(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR cons(V1,V,Out) 
* RF of phase [29,30]: [V1]

#### Partial ranking functions of CR cons(V1,V,Out) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1,30:1]:
    V1
  - RF of loop [30:1]:
    V


### Resulting Chains:cons(V1,V,Out) 
* [[29,30],31]
* [31]


### Merging Chains  cons/3 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[29,30]]] --> 2 


### Specialization of cost equations fib/2 
* CE 22 is refined into CE [41] 
* CE 21 is refined into CE [42] 


#### Refined cost equations fib/2 
* CE 41: fib(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 42: fib(V1,Out) = 1+ fib(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of fib/2 
* CEs [42] --> Loop 32 
* CEs [41] --> Loop 33 

#### Loops of fib/2 
* Loop 32: fib(V1,Out)->  fib(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 33: fib(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR fib(V1,Out) 
* RF of phase [32]: [V1]

#### Partial ranking functions of CR fib(V1,Out) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V1


### Resulting Chains:fib(V1,Out) 
* [[32],33]
* [33]


### Merging Chains  fib/2 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 


### Specialization of cost equations fib1/3 
* CE 13 is refined into CE [43] 
* CE 11 is refined into CE [44] 
* CE 10 is refined into CE [45] 
* CE 12 is refined into CE [46] 


#### Refined cost equations fib1/3 
* CE 43: fib1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 44: fib1(V1,V,Out) = 1+ fib1(V1,W1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 45: fib1(V1,V,Out) = 1+ fib1(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 46: fib1(V1,V,Out) = 1+ fib1(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of fib1/3 
* CEs [44] --> Loop 34 
* CEs [45] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [43] --> Loop 37 

#### Loops of fib1/3 
* Loop 34: fib1(V1,V,Out)->  fib1(V1,V',Out')
                  [V>=1,V1>=0,Out=Out'+1,V=V'+1] 
* Loop 35: fib1(V1,V,Out)->  fib1(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 36: fib1(V1,V,Out)->  fib1(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 37: fib1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fib1(V1,V,Out) 
* RF of phase [34,35,36]: [V1+V]

#### Partial ranking functions of CR fib1(V1,V,Out) 
* Partial RF of phase [34,35,36]:
  - RF of loop [34:1,36:1]:
    V
  - RF of loop [35:1,36:1]:
    V1


### Resulting Chains:fib1(V1,V,Out) 
* [[34,35,36],37]
* [37]


### Merging Chains  fib1/3 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[34,35,36]]] --> 2 


### Specialization of cost equations proper/2 
* CE 33 is refined into CE [47] 
* CE 32 is refined into CE [48] 


#### Refined cost equations proper/2 
* CE 47: proper(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 48: proper(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [47] --> Loop 38 
* CEs [48] --> Loop 39 

#### Loops of proper/2 
* Loop 38: proper(V1,Out) [V1>=0,Out=0] 
* Loop 39: proper(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR proper(V1,Out) 

#### Partial ranking functions of CR proper(V1,Out) 


### Resulting Chains:proper(V1,Out) 
* [39]
* [38]


### Merging Chains  proper/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations s/2 
* CE 31 is refined into CE [49] 
* CE 30 is refined into CE [50] 


#### Refined cost equations s/2 
* CE 49: s(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 50: s(V1,Out) = 1+ s(W1,X1)
     [W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of s/2 
* CEs [50] --> Loop 40 
* CEs [49] --> Loop 41 

#### Loops of s/2 
* Loop 40: s(V1,Out)->  s(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+1=V1] 
* Loop 41: s(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR s(V1,Out) 
* RF of phase [40]: [V1]

#### Partial ranking functions of CR s(V1,Out) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V1


### Resulting Chains:s(V1,Out) 
* [[40],41]
* [41]


### Merging Chains  s/2 into  External patterns of execution 
* [[41]] --> 1 
* [[41,[40]]] --> 2 


### Specialization of cost equations sel/3 
* CE 29 is refined into CE [51] 
* CE 28 is refined into CE [52] 
* CE 26 is refined into CE [53] 
* CE 27 is refined into CE [54] 


#### Refined cost equations sel/3 
* CE 51: sel(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 52: sel(V1,V,Out) = 1+ sel(V1,W1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 
* CE 53: sel(V1,V,Out) = 1+ sel(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 
* CE 54: sel(V1,V,Out) = 1+ sel(W1,X1,Y1)
     [X1>=0,W1>=0,Y1+1=Out,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of sel/3 
* CEs [52] --> Loop 42 
* CEs [53] --> Loop 43 
* CEs [54] --> Loop 44 
* CEs [51] --> Loop 45 

#### Loops of sel/3 
* Loop 42: sel(V1,V,Out)->  sel(V1,V',Out')
                  [V>=1,V1>=0,Out=Out'+1,V=V'+1] 
* Loop 43: sel(V1,V,Out)->  sel(V1',V,Out')
                  [V>=0,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 44: sel(V1,V,Out)->  sel(V1',V',Out')
                  [V>=1,V1>=1,Out=Out'+1,V=V'+1,V1=V1'+1] 
* Loop 45: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR sel(V1,V,Out) 
* RF of phase [42,43,44]: [V1+V]

#### Partial ranking functions of CR sel(V1,V,Out) 
* Partial RF of phase [42,43,44]:
  - RF of loop [42:1,44:1]:
    V
  - RF of loop [43:1,44:1]:
    V1


### Resulting Chains:sel(V1,V,Out) 
* [[42,43,44],45]
* [45]


### Merging Chains  sel/3 into  External patterns of execution 
* [[45]] --> 1 
* [[45,[42,43,44]]] --> 2 


### Specialization of cost equations top/2 
* CE 20 is refined into CE [55] 
* CE 18 is refined into CE [56] 
* CE 19 is refined into CE [57,58] 


#### Refined cost equations top/2 
* CE 55: top(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 56: top(V1,Out) = 1+ top(V1,Out)
     [V1>=1] 
* CE 57: top(V1,Out) = 1+ proper(W1,X1):1+ top(Y1,Out)
     [Y1=1,X1=1,W1=0,V1=1] 
* CE 58: top(V1,Out) = 1+ proper(W1,X1):2+ top(Y1,Out)
     [W1>=0,W1+1=V1,Y1=0,X1=0] 

### Cost equations --> "Loop" of top/2 
* CEs [58] --> Loop 46 
* CEs [56,57] --> Loop 47 
* CEs [55] --> Loop 48 

#### Loops of top/2 
* Loop 46: top(V1,Out)->  top(V1',Out)
                  [V1>=1,V1'=0] 
* Loop 47: top(V1,Out)->  top(V1,Out)
                  [V1>=1] 
* Loop 48: top(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR top(V1,Out) 

#### Partial ranking functions of CR top(V1,Out) 


### Resulting Chains:top(V1,Out) 
* [[47]]...
* [[47],48]
* [[47],46,48]
* [48]
* [46,48]


### Merging Chains  top/2 into  External patterns of execution 
* [[48,46],[48],[48,46,[47]],[48,[47]]] --> 1 
* [[[47]]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [59,60] 
* CE 3 is refined into CE [61,62] 
* CE 4 is refined into CE [63,64] 
* CE 5 is refined into CE [65,66] 
* CE 6 is refined into CE [67,68] 
* CE 7 is refined into CE [69,70] 
* CE 8 is refined into CE [71,72] 
* CE 9 is refined into CE [73,74] 


#### Refined cost equations start/2 
* CE 59: start(V1,V) = 0+ fib1(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 60: start(V1,V) = 0+ fib1(V1,V,W1):2
     [V1+V>=W1,W1>=1,V>=0,V1>=0] 
* CE 61: start(V1,V) = 0+ add(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 62: start(V1,V) = 0+ add(V1,V,W1):2
     [V1+V>=W1,W1>=1,V>=0,V1>=0] 
* CE 63: start(V1,V) = 0+ top(V1,W1):1
     [V1>=0,W1=0] 
* CE 64: start(V1,V) = 0+ top(V1,W1):2
     [V1>=1] 
* CE 65: start(V1,V) = 0+ fib(V1,W1):1
     [V1>=0,W1=0] 
* CE 66: start(V1,V) = 0+ fib(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 67: start(V1,V) = 0+ cons(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 68: start(V1,V) = 0+ cons(V1,V,W1):2
     [V1>=W1,W1>=1,V>=0] 
* CE 69: start(V1,V) = 0+ sel(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 70: start(V1,V) = 0+ sel(V1,V,W1):2
     [V1+V>=W1,W1>=1,V>=0,V1>=0] 
* CE 71: start(V1,V) = 0+ s(V1,W1):1
     [V1>=0,W1=0] 
* CE 72: start(V1,V) = 0+ s(V1,W1):2
     [V1>=W1,W1>=1] 
* CE 73: start(V1,V) = 0+ proper(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 74: start(V1,V) = 0+ proper(V1,W1):2
     [V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [59,60,61,62,63,65,66,67,68,69,70,71,72,73,74] --> Loop 49 
* CEs [64] --> Loop 50 

#### Loops of start/2 
* Loop 49: start(V1,V) [V1>=0] 
* Loop 50: start(V1,V) [V1>=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [50]...
* [49]


### Merging Chains  start/2 into  External patterns of execution 
* [[49]] --> 1 
* [[50]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25,26,27] 

 * loop 25:add(V1,V,Out) -> [add(V1',V',Out')] 
1
 * loop 26:add(V1,V,Out) -> [add(V1',V',Out')] 
1
 * loop 27:add(V1,V,Out) -> [add(V1',V',Out')] 
1
#### Cost of phase [25,26,27]:add(V1,V,Out) -> [add(V1',V',Out')] 
1*it(25)+1*it(26)+1*it(27)+0
  Such that:aux(1) =< V1
aux(2) =< V1+V
aux(3) =< V1+V-V1'-V'
aux(4) =< V1-V1'
aux(5) =< V
aux(6) =< V-V'
it(26) =< aux(1)
it(27) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(27) =< aux(2)
it(25) =< aux(3)
it(26) =< aux(3)
it(27) =< aux(3)
it(26) =< aux(4)
it(27) =< aux(4)
it(25) =< aux(5)
it(27) =< aux(5)
it(25) =< aux(6)
it(27) =< aux(6)

#### Cost of chains of add(V1,V,Out):
* Chain [[25,26,27],28]: 1*it(25)+1*it(26)+1*it(27)+0
  Such that:aux(7) =< V1
aux(8) =< V1+V
aux(9) =< V
it(26) =< aux(7)
it(27) =< aux(7)
it(25) =< aux(8)
it(26) =< aux(8)
it(27) =< aux(8)
it(25) =< aux(9)
it(27) =< aux(9)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=Out] 

* Chain [28]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [29,30] 

 * loop 29:cons(V1,V,Out) -> [cons(V1',V',Out')] 
1
 * loop 30:cons(V1,V,Out) -> [cons(V1',V',Out')] 
1
#### Cost of phase [29,30]:cons(V1,V,Out) -> [cons(V1',V',Out')] 
1*it(29)+1*it(30)+0
  Such that:it(30) =< V
it(30) =< V-V'
aux(10) =< V1
aux(11) =< V1-V1'
it(29) =< aux(10)
it(30) =< aux(10)
it(29) =< aux(11)
it(30) =< aux(11)

#### Cost of chains of cons(V1,V,Out):
* Chain [[29,30],31]: 1*it(29)+1*it(30)+0
  Such that:aux(10) =< V1
it(30) =< V
aux(11) =< Out
it(29) =< aux(10)
it(30) =< aux(10)
it(29) =< aux(11)
it(30) =< aux(11)

  with precondition: [V>=0,Out>=1,V1>=Out] 

* Chain [31]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [32] 

 * loop 32:fib(V1,Out) -> [fib(V1',Out')] 
1
#### Cost of phase [32]:fib(V1,Out) -> [fib(V1',Out')] 
1*it(32)+0
  Such that:it(32) =< V1
it(32) =< V1-V1'

#### Cost of chains of fib(V1,Out):
* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [33]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [34,35,36] 

 * loop 34:fib1(V1,V,Out) -> [fib1(V1',V',Out')] 
1
 * loop 35:fib1(V1,V,Out) -> [fib1(V1',V',Out')] 
1
 * loop 36:fib1(V1,V,Out) -> [fib1(V1',V',Out')] 
1
#### Cost of phase [34,35,36]:fib1(V1,V,Out) -> [fib1(V1',V',Out')] 
1*it(34)+1*it(35)+1*it(36)+0
  Such that:aux(12) =< V1
aux(13) =< V1+V
aux(14) =< V1+V-V1'-V'
aux(15) =< V1-V1'
aux(16) =< V
aux(17) =< V-V'
it(35) =< aux(12)
it(36) =< aux(12)
it(34) =< aux(13)
it(35) =< aux(13)
it(36) =< aux(13)
it(34) =< aux(14)
it(35) =< aux(14)
it(36) =< aux(14)
it(35) =< aux(15)
it(36) =< aux(15)
it(34) =< aux(16)
it(36) =< aux(16)
it(34) =< aux(17)
it(36) =< aux(17)

#### Cost of chains of fib1(V1,V,Out):
* Chain [[34,35,36],37]: 1*it(34)+1*it(35)+1*it(36)+0
  Such that:aux(18) =< V1
aux(19) =< V1+V
aux(20) =< V
it(35) =< aux(18)
it(36) =< aux(18)
it(34) =< aux(19)
it(35) =< aux(19)
it(36) =< aux(19)
it(34) =< aux(20)
it(36) =< aux(20)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=Out] 

* Chain [37]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of proper(V1,Out):
* Chain [39]: 1
  with precondition: [V1=0,Out=1] 

* Chain [38]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [40] 

 * loop 40:s(V1,Out) -> [s(V1',Out')] 
1
#### Cost of phase [40]:s(V1,Out) -> [s(V1',Out')] 
1*it(40)+0
  Such that:it(40) =< V1
it(40) =< V1-V1'

#### Cost of chains of s(V1,Out):
* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< Out

  with precondition: [Out>=1,V1>=Out] 

* Chain [41]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of loops [42,43,44] 

 * loop 42:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1
 * loop 43:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1
 * loop 44:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1
#### Cost of phase [42,43,44]:sel(V1,V,Out) -> [sel(V1',V',Out')] 
1*it(42)+1*it(43)+1*it(44)+0
  Such that:aux(21) =< V1
aux(22) =< V1+V
aux(23) =< V1+V-V1'-V'
aux(24) =< V1-V1'
aux(25) =< V
aux(26) =< V-V'
it(43) =< aux(21)
it(44) =< aux(21)
it(42) =< aux(22)
it(43) =< aux(22)
it(44) =< aux(22)
it(42) =< aux(23)
it(43) =< aux(23)
it(44) =< aux(23)
it(43) =< aux(24)
it(44) =< aux(24)
it(42) =< aux(25)
it(44) =< aux(25)
it(42) =< aux(26)
it(44) =< aux(26)

#### Cost of chains of sel(V1,V,Out):
* Chain [[42,43,44],45]: 1*it(42)+1*it(43)+1*it(44)+0
  Such that:aux(27) =< V1
aux(28) =< V1+V
aux(29) =< V
it(43) =< aux(27)
it(44) =< aux(27)
it(42) =< aux(28)
it(43) =< aux(28)
it(44) =< aux(28)
it(42) =< aux(29)
it(44) =< aux(29)

  with precondition: [V1>=0,V>=0,Out>=1,V+V1>=Out] 

* Chain [45]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of loops [47] 

 * loop 47:top(V1,Out) -> [top(V1',Out')] 
2
#### Cost of phase [47]:top(V1,Out) -> [top(V1',Out')] 
2*it(47)+0
#### Cost of phase [47]:top(V1,Out) -> [top(V1',Out')] 
2*it(47)+0
#### Cost of phase [47]:top(V1,Out) -> [top(V1',Out')] 
2*it(47)+0
#### Cost of chains of top(V1,Out):
* Chain [[47]]...: 2*it(47)+0
  with precondition: [V1>=1] 

* Chain [[47],48]: 2*it(47)+0
  with precondition: [Out=0,V1>=1] 

* Chain [[47],46,48]: 2*it(47)+1
  with precondition: [Out=0,V1>=1] 

* Chain [48]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [46,48]: 1
  with precondition: [Out=0,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [50]...: 2*s(3)+0
  with precondition: [V1>=1] 

* Chain [49]: 3*s(7)+3*s(8)+3*s(9)+1*s(16)+3*s(17)+1*s(19)+1
  Such that:aux(32) =< V1
aux(33) =< V1+V
aux(34) =< V
s(17) =< aux(32)
s(19) =< aux(34)
s(7) =< aux(32)
s(8) =< aux(32)
s(9) =< aux(33)
s(7) =< aux(33)
s(8) =< aux(33)
s(9) =< aux(34)
s(8) =< aux(34)
s(19) =< aux(32)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [50]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 21 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 89 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 98 ms.
   - Equation cost structures 31 ms.
   - Phase cost structures 43 ms.
   - Chain cost structures 31 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 317 ms.

