
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. non_recursive  : [fib1/3]
2. recursive [non_tail,multiple] : [activate/2]
3. recursive  : [sel/3]
4. non_recursive  : [fib/2]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into fib1/3
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into sel/3
4. SCC is partially evaluated into fib/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 12 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 


#### Refined cost equations add/3 
* CE 19: add(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 
* CE 20: add(A,B,B) = 1
     [B>=0,A=0] 
* CE 21: add(V,V1,Out) = 1+ add(W1,V1,X1)
     [W1>=0,V1>=0,X1+1=Out,W1+1=V] 

### Cost equations --> "Loop" of add/3 
* CEs [21] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 

#### Loops of add/3 
* Loop 13: add(V,V1,Out)->  add(V',V1,Out')
                  [V'>=0,V1>=0,Out=Out'+1,V'+1=V] 
* Loop 14: add(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 
* Loop 15: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V,V1,Out) 
* RF of phase [13]: [V]

#### Partial ranking functions of CR add(V,V1,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V


### Resulting Chains:add(V,V1,Out) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  add/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14],[14,[13]]] --> 2 
* [[15,[13]]] --> 3 


### Specialization of cost equations fib1/3 
* CE 8 is refined into CE [22] 
* CE 9 is refined into CE [23] 


#### Refined cost equations fib1/3 
* CE 22: fib1(V,V1,Out) = 1
     [V1>=0,V>=0,2*V+2*V1+3=Out] 
* CE 23: fib1(V,V1,Out) = 1
     [V1>=0,V>=0,V+V1+1=Out] 

### Cost equations --> "Loop" of fib1/3 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 

#### Loops of fib1/3 
* Loop 16: fib1(V,V1,Out) [V1>=0,V>=0,2*V+2*V1+3=Out] 
* Loop 17: fib1(V,V1,Out) [V1>=0,V>=0,V+V1+1=Out] 

### Ranking functions of CR fib1(V,V1,Out) 

#### Partial ranking functions of CR fib1(V,V1,Out) 


### Resulting Chains:fib1(V,V1,Out) 
* [17]
* [16]


### Merging Chains  fib1/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations activate/2 
* CE 18 is refined into CE [24] 
* CE 16 is refined into CE [25,26] 
* CE 17 is refined into CE [27,28,29] 


#### Refined cost equations activate/2 
* CE 24: activate(A,A) = 1
     [A>=0] 
* CE 25: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ fib1(X,A1,Out):1
     [Out>=X+1,Y>=0,W>=0,X>=0,Out=X+Z+1,Out=X+A1+1,W+Y+1=V] 
* CE 26: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ fib1(X,A1,Out):2
     [Out>=2*X+3,Y>=0,W>=0,X>=0,W+Y+1=V,Out=2*X+2*Z+3,Out=2*X+2*A1+3] 
* CE 27: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Out)+ add(Z,Out,Out):1
     [Y>=0,W>=0,Out>=0,W+Y+1=V,X=0,Z=0] 
* CE 28: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ add(X,A1,Out):2
     [Out>=X+1,Y>=0,W>=0,X>=0,Out=X+Z+1,Out=X+A1+1,W+Y+1=V] 
* CE 29: activate(V,Out) = 1+ activate(W,X)+ activate(Y,Z)+ add(X,A1,Out):3
     [Out>=X,Y>=0,W>=0,X>=1,Out=X+Z,Out=X+A1,W+Y+1=V] 

### Cost equations --> "Loop" of activate/2 
* CEs [26] --> Loop 18 
* CEs [29] --> Loop 19 
* CEs [25,28] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of activate/2 
* Loop 18: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [V>=V'+1,Out>=2*Out'+3,Out'>=0,V'>=0,2*Out'+2*Out'2+3=Out,V'+V'2+1=V] 
* Loop 19: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out>=Out',V>=V'+1,Out'>=1,V'>=0,Out'+Out'2=Out,V'+V'2+1=V] 
* Loop 20: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out>=Out'+1,V>=V'+1,Out'>=0,V'>=0,Out'+Out'2+1=Out,V'+V'2+1=V] 
* Loop 21: activate(V,Out)->  activate(V',Out')  activate(V'2,Out)
                  [V>=V'+1,V'>=0,Out>=0,V'+V'2+1=V,Out'=0] 
* Loop 22: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [18,19,20,21]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [18,19,20,21]:
  - RF of loop [18:1,18:2,19:1,19:2,20:1,20:2,21:1,21:2]:
    V


### Resulting Chains:activate(V,Out) 
* [22]
* [multiple([18,19,20,21],[[22]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[22]] --> 1 
* [[multiple([18,19,20,21],[[22]])]] --> 2 


### Specialization of cost equations sel/3 
* CE 15 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 14 is refined into CE [32,33] 


#### Refined cost equations sel/3 
* CE 30: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 31: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 32: sel(V,V1,Out) = 1+ activate(W1,W1):1+ sel(X1,W1,Out)
     [V1>=W1+1,X1>=0,W1>=0,X1+1=V] 
* CE 33: sel(V,V1,Out) = 1+ activate(W1,X1):2+ sel(Y1,X1,Out)
     [V1>=W1+1,Y1>=0,X1>=0,W1>=1,Y1+1=V] 

### Cost equations --> "Loop" of sel/3 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [31] --> Loop 26 

#### Loops of sel/3 
* Loop 23: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V>=1,V=V'+1] 
* Loop 24: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1'>=0,V1>=2,V>=1,V=V'+1] 
* Loop 25: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 26: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [23,24]: [V]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1]:
    V1 depends on loops [24:1] 
  - RF of loop [23:1,24:1]:
    V


### Resulting Chains:sel(V,V1,Out) 
* [[23,24],26]
* [[23,24],25]
* [26]
* [25]


### Merging Chains  sel/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25],[25,[23,24]]] --> 2 
* [[26,[23,24]]] --> 3 


### Specialization of cost equations fib/2 
* CE 7 is refined into CE [34,35,36,37,38,39] 


#### Refined cost equations fib/2 
* CE 34: fib(V,Out) = 1+ fib1(W,X,Y):1+ sel(Z,A1,Out):1
     [Out>=0,2>=Out,A1=3,Z=0,Y=3,X=1,W=1,V=0] 
* CE 35: fib(V,Out) = 1+ fib1(W,X,Y):1+ sel(V,Z,A1):2
     [V>=0,A1=0,Z=3,Y=3,X=1,W=1,Out=0] 
* CE 36: fib(V,Out) = 1+ fib1(W,X,Y):1+ sel(V,Z,Out):3
     [Out>=0,V>=1,Z=3,Y=3,X=1,W=1] 
* CE 37: fib(V,Out) = 1+ fib1(W,X,Y):2+ sel(Z,A1,Out):1
     [Out>=0,6>=Out,A1=7,Z=0,Y=7,X=1,W=1,V=0] 
* CE 38: fib(V,Out) = 1+ fib1(W,X,Y):2+ sel(V,Z,A1):2
     [V>=0,A1=0,Z=7,Y=7,X=1,W=1,Out=0] 
* CE 39: fib(V,Out) = 1+ fib1(W,X,Y):2+ sel(V,Z,Out):3
     [Out>=0,V>=1,Z=7,Y=7,X=1,W=1] 

### Cost equations --> "Loop" of fib/2 
* CEs [36,39] --> Loop 27 
* CEs [35,38] --> Loop 28 
* CEs [34,37] --> Loop 29 

#### Loops of fib/2 
* Loop 27: fib(V,Out) [Out>=0,V>=1] 
* Loop 28: fib(V,Out) [V>=0,Out=0] 
* Loop 29: fib(V,Out) [Out>=0,6>=Out,V=0] 

### Ranking functions of CR fib(V,Out) 

#### Partial ranking functions of CR fib(V,Out) 


### Resulting Chains:fib(V,Out) 
* [29]
* [28]
* [27]


### Merging Chains  fib/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [40,41,42] 
* CE 3 is refined into CE [43,44] 
* CE 4 is refined into CE [45,46,47] 
* CE 5 is refined into CE [48,49,50] 
* CE 6 is refined into CE [51,52] 


#### Refined cost equations start/2 
* CE 40: start(V,V1) = 0+ fib(W1,X1):1
     [X1>=0,6>=X1,W1=0,V=0] 
* CE 41: start(V,V1) = 0+ fib(V,W1):2
     [V>=0,W1=0] 
* CE 42: start(V,V1) = 0+ fib(V,W1):3
     [W1>=0,V>=1] 
* CE 43: start(V,V1) = 0+ fib1(V,W1,X1):1
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 44: start(V,V1) = 0+ fib1(V,W1,X1):2
     [X1>=2*V+3,V>=0,X1=2*V+2*W1+3,X1=2*V+2*V1+3] 
* CE 45: start(V,V1) = 0+ add(W1,V1,V1):1
     [V1>=0,W1=0,V=0] 
* CE 46: start(V,V1) = 0+ add(V,W1,X1):2
     [X1>=V+1,V>=0,X1=V+W1+1,X1=V+V1+1] 
* CE 47: start(V,V1) = 0+ add(V,W1,X1):3
     [X1>=V,V>=1,X1=V+W1,X1=V+V1] 
* CE 48: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 49: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 50: start(V,V1) = 0+ sel(V,V1,W1):3
     [W1>=0,V1>=2,V>=1] 
* CE 51: start(V,V1) = 0+ activate(V,V):1
     [V>=0] 
* CE 52: start(V,V1) = 0+ activate(V,W1):2
     [W1>=0,V>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [40,41,42,43,44,45,46,47,48,49,50,51,52] --> Loop 30 

#### Loops of start/2 
* Loop 30: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [30]


### Merging Chains  start/2 into  External patterns of execution 
* [[30]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:add(V,V1,Out) -> [add(V',V1',Out')] 
1
#### Cost of phase [13]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of phase [13]:add(V,V1,Out) -> [add(V',V1',Out')] 
1*it(13)+0
  Such that:it(13) =< V
it(13) =< V-V'

#### Cost of chains of add(V,V1,Out):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -V1+Out

  with precondition: [V+V1=Out,V>=1,V1>=0] 

* Chain [[13],14]: 1*it(13)+1
  Such that:it(13) =< -V1+Out

  with precondition: [V+V1+1=Out,V>=1,V1>=0] 

* Chain [15]: 1
  with precondition: [V=0,V1=Out,V1>=0] 

* Chain [14]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 


#### Cost of chains of fib1(V,V1,Out):
* Chain [17]: 1
  with precondition: [V+V1+1=Out,V>=0,V1>=0] 

* Chain [16]: 1
  with precondition: [2*V+2*V1+3=Out,V>=0,V1>=0] 


#### Cost of loops [18,19,20,21] 

 * loop 18:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
 * loop 19:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
1*s(3)+2
 * loop 20:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
1*s(5)+0
 * loop 21:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
#### Cost of phase [18,19,20,21]:activate(V,Out) -> [] 
6*it(18)+1*it([22])+2*s(6)+0
  Such that:it([22]) =< V+1
aux(2) =< V
it(18) =< aux(2)

#### Cost of chains of activate(V,Out):
* Chain [22]: 1
  with precondition: [V=Out,V>=0] 

* Chain [multiple([18,19,20,21],[[22]])]: 6*it(18)+1*it([22])+2*s(6)+0
  Such that:it([22]) =< V+1
aux(2) =< V
it(18) =< aux(2)

  with precondition: [V>=1,Out>=0] 


#### Cost of loops [23,24] 

 * loop 23:sel(V,V1,Out) -> [sel(V',V1',Out')] 
2
 * loop 24:sel(V,V1,Out) -> [sel(V',V1',Out')] 
7*s(13)+2*s(14)+1
  Such that:s(12) =< V1
s(13) =< s(12)

#### Cost of phase [23,24]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3*it(23)+7*s(15)+2*s(16)+0
  Such that:aux(8) =< V
aux(9) =< V-V'
it(23) =< aux(8)
it(23) =< aux(9)

#### Cost of phase [23,24]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3*it(23)+7*s(15)+2*s(16)+0
  Such that:aux(8) =< V
aux(9) =< V-V'
it(23) =< aux(8)
it(23) =< aux(9)

#### Cost of chains of sel(V,V1,Out):
* Chain [[23,24],26]: 3*it(23)+9*s(15)+1
  Such that:aux(10) =< V
it(23) =< aux(10)

  with precondition: [V>=1,V1>=2,Out>=0] 

* Chain [[23,24],25]: 3*it(23)+9*s(15)+0
  Such that:aux(11) =< V
it(23) =< aux(11)

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [26]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [25]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of fib(V,Out):
* Chain [29]: 3
  with precondition: [V=0,6>=Out,Out>=0] 

* Chain [28]: 6*s(22)+18*s(23)+2
  Such that:aux(12) =< V
s(22) =< aux(12)

  with precondition: [Out=0,V>=0] 

* Chain [27]: 6*s(28)+18*s(29)+3
  Such that:aux(13) =< V
s(28) =< aux(13)

  with precondition: [V>=1,Out>=0] 


#### Cost of chains of start(V,V1):
* Chain [30]: 25*s(34)+56*s(35)+2*s(39)+3
  Such that:aux(14) =< V
aux(15) =< V+1
s(34) =< aux(14)
s(39) =< aux(15)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [30] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 32 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 73 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 51 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 226 ms.

