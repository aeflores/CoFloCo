
Preprocessing Cost Relations
=====================================
0. SCC does not have a single cut point : [fun/3,mark/2]  
 Merged into funmark/3

#### Computed strongly connected components 
1. non_recursive  : [start/2]
0. recursive [multiple] : [funmark/3]

#### Obtained direct recursion through partial evaluation 
1. SCC is partially evaluated into start/2
0. SCC is partially evaluated into funmark/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations funmark/3 
* CE 4 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 3 is refined into CE [12] 


#### Refined cost equations funmark/3 
* CE 8: funmark(A,B,C) = 1
     [B>=0,A>=0,A+B+1=C] 
* CE 9: funmark(A,B,C) = 0
     [A>=0,C=0] 
* CE 10: funmark(A,B,C) = 1+ funmark(D,E,F)
     [D>=0,F+1=C,D+1=A] 
* CE 11: funmark(A,B,C) = 1+ funmark(D,E,F)+ funmark(F,G,C)
     [G>=0,D>=0,D+G+1=A] 
* CE 12: funmark(A,B,C) = 1+ funmark(D,E,F)+ funmark(F,G,C)
     [D>=0,B>=0,B+D+2=G,D+1=A] 

### Cost equations --> "Loop" of funmark/3 
* CEs [11] --> Loop 7 
* CEs [12] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 
* CEs [9] --> Loop 11 

#### Loops of funmark/3 
* Loop 7: funmark(A,B,C)->  funmark(A',B',C')  funmark(C',A'2,C)
                  [A>=A'+1,A'>=0,A'+A'2+1=A] 
* Loop 8: funmark(A,B,C)->  funmark(A',B',C')  funmark(C',A'2,C)
                  [B>=0,A>=1,A+B+1=A'2,A=A'+1] 
* Loop 9: funmark(A,B,C)->  funmark(A',B',C')
                  [A'>=0,C=C'+1,A'+1=A] 
* Loop 10: funmark(A,B,C) [B>=0,A>=0,A+B+1=C] 
* Loop 11: funmark(A,B,C) [A>=0,C=0] 

### Ranking functions of CR funmark(A,B,C) 

#### Partial ranking functions of CR funmark(A,B,C) 
* Partial RF of phase [7,8,9]:
  - RF of loop [7:1,8:1,9:1]:
    A depends on loops [7:2,8:2] 


### Resulting Chains:funmark(A,B,C) 
* [multiple([7,8,9],[[],[11],[10]])]...
* [11]
* [10]


### Merging Chains  funmark/3 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[multiple([7,8,9],[[],[11],[10]])]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [13,14,15] 


#### Refined cost equations start/2 
* CE 13: start(V1,V) = 0+ funmark(V1,W1,X1):1
     [V1>=0,X1=0] 
* CE 14: start(V1,V) = 0+ funmark(V1,W1,X1):2
     [X1>=V1+1,V1>=0,X1=V1+W1+1] 
* CE 15: start(V1,V) = 0+ funmark(V1,W1,X1):3
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [15] --> Loop 12 
* CEs [13,14] --> Loop 13 

#### Loops of start/2 
* Loop 12: start(V1,V) [V1>=1] 
* Loop 13: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [13]
* [12]...


### Merging Chains  start/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7,8,9] 

 * loop 7:funmark(A,B,C) -> [funmark(A',B',C'),funmark(A'2,B'2,C'2)] 
1
 * loop 8:funmark(A,B,C) -> [funmark(A',B',C'),funmark(A'2,B'2,C'2)] 
1
 * loop 9:funmark(A,B,C) -> [funmark(A',B',C')] 
1
#### Cost of phase [7,8,9]:funmark(A,B,C) -> [] 
2*it(7)+1*it(9)+1*it([10])+0
#### Cost of chains of funmark(A,B,C):
* Chain [multiple([7,8,9],[[],[11],[10]])]...: 2*it(7)+1*it(9)+1*it([10])+0
  with precondition: [A>=1] 

* Chain [11]: 0
  with precondition: [C=0,A>=0] 

* Chain [10]: 1
  with precondition: [A+B+1=C,A>=0,B>=0] 


#### Cost of chains of start(V1,V):
* Chain [13]: 1
  with precondition: [V1>=0] 

* Chain [12]...: 4*s(1)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [13] with precondition: [V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [12]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 21 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 34 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 87 ms.

