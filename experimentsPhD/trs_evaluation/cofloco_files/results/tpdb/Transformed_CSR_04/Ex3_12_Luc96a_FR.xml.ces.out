
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. non_recursive  : [s/2]
2. recursive [non_tail] : [activate/2]
3. non_recursive  : [sel/3]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into sel/3
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 11 is refined into CE [13] 
* CE 12 is refined into CE [14] 


#### Refined cost equations from/2 
* CE 13: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 14: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [13] --> Loop 8 
* CEs [14] --> Loop 9 

#### Loops of from/2 
* Loop 8: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 9: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [9]
* [8]


### Merging Chains  from/2 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations activate/2 
* CE 8 is refined into CE [15,16] 
* CE 10 is refined into CE [17] 
* CE 9 is refined into CE [18] 


#### Refined cost equations activate/2 
* CE 15: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 16: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 17: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 18: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [18] --> Loop 10 
* CEs [15,17] --> Loop 11 
* CEs [16] --> Loop 12 

#### Loops of activate/2 
* Loop 10: activate(A,A) [A>=0] 
* Loop 11: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 12: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [11,12]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1,12:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [[11,12],10]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[11,12]]] --> 2 


### Specialization of cost equations sel/3 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations sel/3 
* CE 19: sel(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 20: sel(V1,V,Out) = 1
     [V>=Out+1,Out>=0,V1=0] 

### Cost equations --> "Loop" of sel/3 
* CEs [19] --> Loop 13 
* CEs [20] --> Loop 14 

#### Loops of sel/3 
* Loop 13: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 14: sel(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel(V1,V,Out) 

#### Partial ranking functions of CR sel(V1,V,Out) 


### Resulting Chains:sel(V1,V,Out) 
* [14]
* [13]


### Merging Chains  sel/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21,22] 
* CE 3 is refined into CE [23,24] 
* CE 4 is refined into CE [25,26] 
* CE 5 is refined into CE [27] 


#### Refined cost equations start/2 
* CE 21: start(V1,V) = 0+ sel(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 22: start(V1,V) = 0+ sel(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 23: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 24: start(V1,V) = 0+ activate(V1,W1):2
     [W1>=V1,V1>=1] 
* CE 25: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 26: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 27: start(V1,V) = 1
     [V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [21,22,23,24,25,26,27] --> Loop 15 

#### Loops of start/2 
* Loop 15: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [15]


### Merging Chains  start/2 into  External patterns of execution 
* [[15]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [9]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [8]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [11,12] 

 * loop 11:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 12:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [11,12]:activate(V1,Out) -> [activate(V1',Out')] 
4*it(11)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(11) =< aux(1)
it(11) =< aux(2)

#### Cost of chains of activate(V1,Out):
* Chain [[11,12],10]: 4*it(11)+1
  Such that:aux(3) =< V1
it(11) =< aux(3)

  with precondition: [V1>=1,Out>=V1] 

* Chain [10]: 1
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of sel(V1,V,Out):
* Chain [14]: 1
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [13]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of start(V1,V):
* Chain [15]: 4*s(2)+1
  Such that:s(1) =< V1
s(2) =< s(1)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [15] with precondition: [V1>=0] 
    - Upper bound: 4*V1+1 
    - Complexity: n 

### Maximum cost of start(V1,V): 4*V1+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 19 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 63 ms.

