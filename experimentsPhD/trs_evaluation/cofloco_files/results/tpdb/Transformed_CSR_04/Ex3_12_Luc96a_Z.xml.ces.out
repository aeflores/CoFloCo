
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. non_recursive  : [activate/2]
2. recursive  : [sel/3]
3. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is partially evaluated into activate/2
2. SCC is partially evaluated into sel/3
3. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 5 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations from/2 
* CE 12: from(V,Out) = 1
     [V>=0,2*V+3=Out] 
* CE 13: from(V,Out) = 1
     [V>=0,V+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of from/2 
* Loop 9: from(V,Out) [V>=0,2*V+3=Out] 
* Loop 10: from(V,Out) [V>=0,V+1=Out] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 


### Resulting Chains:from(V,Out) 
* [10]
* [9]


### Merging Chains  from/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations activate/2 
* CE 10 is refined into CE [14,15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations activate/2 
* CE 14: activate(A,A) = 1+ from(B,A):1
     [A>=1,A=B+1] 
* CE 15: activate(V,Out) = 1+ from(W,Out):2
     [Out>=3,Out=2*W+3,Out=2*V+1] 
* CE 16: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [15] --> Loop 11 
* CEs [14,16] --> Loop 12 

#### Loops of activate/2 
* Loop 11: activate(V,Out) [V>=1,2*V+1=Out] 
* Loop 12: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 


### Resulting Chains:activate(V,Out) 
* [12]
* [11]


### Merging Chains  activate/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations sel/3 
* CE 9 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 8 is refined into CE [19,20] 


#### Refined cost equations sel/3 
* CE 17: sel(V,V1,Out) = 0
     [V1>=0,V>=0,Out=0] 
* CE 18: sel(V,V1,Out) = 1
     [V1>=Out+1,Out>=0,V=0] 
* CE 19: sel(V,V1,Out) = 1+ activate(W1,W1):1+ sel(X1,W1,Out)
     [V1>=W1+1,X1>=0,W1>=0,X1+1=V] 
* CE 20: sel(V,V1,Out) = 1+ activate(W1,X1):2+ sel(Y1,X1,Out)
     [2*V1>=X1+1,Y1>=0,X1>=3,Y1+1=V,X1=2*W1+1] 

### Cost equations --> "Loop" of sel/3 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of sel/3 
* Loop 13: sel(V,V1,Out)->  sel(V',V1',Out)
                  [2*V1>=V1'+1,V1'>=3,V>=1,V=V'+1] 
* Loop 14: sel(V,V1,Out)->  sel(V',V1',Out)
                  [V1>=V1'+1,V1'>=0,V>=1,V=V'+1] 
* Loop 15: sel(V,V1,Out) [V1>=0,V>=0,Out=0] 
* Loop 16: sel(V,V1,Out) [V1>=Out+1,Out>=0,V=0] 

### Ranking functions of CR sel(V,V1,Out) 
* RF of phase [13,14]: [V]

#### Partial ranking functions of CR sel(V,V1,Out) 
* Partial RF of phase [13,14]:
  - RF of loop [13:1,14:1]:
    V
  - RF of loop [14:1]:
    V1 depends on loops [13:1] 


### Resulting Chains:sel(V,V1,Out) 
* [[13,14],16]
* [[13,14],15]
* [16]
* [15]


### Merging Chains  sel/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15],[15,[13,14]]] --> 2 
* [[16,[13,14]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21,22] 
* CE 3 is refined into CE [23,24,25] 
* CE 4 is refined into CE [26,27] 


#### Refined cost equations start/2 
* CE 21: start(V,V1) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V+1] 
* CE 22: start(V,V1) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V+3] 
* CE 23: start(V,V1) = 0+ sel(W1,V1,X1):1
     [V1>=X1+1,X1>=0,W1=0,V=0] 
* CE 24: start(V,V1) = 0+ sel(V,V1,W1):2
     [V1>=0,V>=0,W1=0] 
* CE 25: start(V,V1) = 0+ sel(V,V1,W1):3
     [W1>=0,V1>=2,V>=1] 
* CE 26: start(V,V1) = 0+ activate(V,V):1
     [V>=0] 
* CE 27: start(V,V1) = 0+ activate(W1,X1):2
     [X1>=3,X1=2*W1+1,X1=2*V+1] 

### Cost equations --> "Loop" of start/2 
* CEs [21,22,23,24,25,26,27] --> Loop 17 

#### Loops of start/2 
* Loop 17: start(V,V1) [V>=0] 

### Ranking functions of CR start(V,V1) 

#### Partial ranking functions of CR start(V,V1) 


### Resulting Chains:start(V,V1) 
* [17]


### Merging Chains  start/2 into  External patterns of execution 
* [[17]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V,Out):
* Chain [10]: 1
  with precondition: [V+1=Out,V>=0] 

* Chain [9]: 1
  with precondition: [2*V+3=Out,V>=0] 


#### Cost of chains of activate(V,Out):
* Chain [12]: 2
  with precondition: [V=Out,V>=0] 

* Chain [11]: 2
  with precondition: [2*V+1=Out,V>=1] 


#### Cost of loops [13,14] 

 * loop 13:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3
 * loop 14:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3
#### Cost of phase [13,14]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3*it(13)+3*it(14)+0
  Such that:aux(7) =< V
aux(8) =< V-V'
it(13) =< aux(7)
it(14) =< aux(7)
it(13) =< aux(8)
it(14) =< aux(8)

#### Cost of phase [13,14]:sel(V,V1,Out) -> [sel(V',V1',Out')] 
3*it(13)+3*it(14)+0
  Such that:aux(7) =< V
aux(8) =< V-V'
it(13) =< aux(7)
it(14) =< aux(7)
it(13) =< aux(8)
it(14) =< aux(8)

#### Cost of chains of sel(V,V1,Out):
* Chain [[13,14],16]: 6*it(13)+1
  Such that:aux(9) =< V
it(13) =< aux(9)

  with precondition: [V>=1,V1>=2,Out>=0] 

* Chain [[13,14],15]: 6*it(13)+0
  Such that:aux(10) =< V
it(13) =< aux(10)

  with precondition: [Out=0,V>=1,V1>=1] 

* Chain [16]: 1
  with precondition: [V=0,Out>=0,V1>=Out+1] 

* Chain [15]: 0
  with precondition: [Out=0,V>=0,V1>=0] 


#### Cost of chains of start(V,V1):
* Chain [17]: 12*s(4)+2
  Such that:aux(11) =< V
s(4) =< aux(11)

  with precondition: [V>=0] 


Closed-form bounds of start(V,V1): 
-------------------------------------
* Chain [17] with precondition: [V>=0] 
    - Upper bound: 12*V+2 
    - Complexity: n 

### Maximum cost of start(V,V1): 12*V+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 25 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 86 ms.

