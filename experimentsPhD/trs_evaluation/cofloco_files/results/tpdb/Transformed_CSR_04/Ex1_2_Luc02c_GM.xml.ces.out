
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [fun/2,fun1/2,mark/2]
1. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into mark/2
1. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations mark/2 
* CE 10 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 8 is refined into CE [15] 


#### Refined cost equations mark/2 
* CE 11: mark(V,Out) = 0
     [V>=0,Out=0] 
* CE 12: mark(V,Out) = 2+ mark(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 13: mark(V,Out) = 1+ mark(W,X)
     [V+X>=Out,Out>=X+1,V+X=Out+W] 
* CE 14: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Out)
     [X>=Y+2,Y>=0,W>=0,W+1=V] 
* CE 15: mark(V,Out) = 2+ mark(W,X)+ mark(X,Y)
     [X>=0,W>=0,X+Y+3=Out,W+1=V] 

### Cost equations --> "Loop" of mark/2 
* CEs [14] --> Loop 6 
* CEs [15] --> Loop 7 
* CEs [12,13] --> Loop 8 
* CEs [11] --> Loop 9 

#### Loops of mark/2 
* Loop 6: mark(V,Out)->  mark(V',Out')  mark(V'2,Out)
                  [Out'>=V'2+2,V'2>=0,V>=1,V=V'+1] 
* Loop 7: mark(V,Out)->  mark(V',Out')  mark(Out',A'2)
                  [Out'>=0,V>=1,Out'+A'2+3=Out,V=V'+1] 
* Loop 8: mark(V,Out)->  mark(V',Out')
                  [V+Out'>=Out,Out>=Out'+1,V+Out'=Out+V'] 
* Loop 9: mark(V,Out) [V>=0,Out=0] 

### Ranking functions of CR mark(V,Out) 

#### Partial ranking functions of CR mark(V,Out) 
* Partial RF of phase [6,7,8]:
  - RF of loop [6:1,7:1,8:1]:
    V depends on loops [6:2,7:2] 


### Resulting Chains:mark(V,Out) 
* [multiple([6,7,8],[[],[9]])]...
* [9]


### Merging Chains  mark/2 into  External patterns of execution 
* [[9]] --> 1 
* [[multiple([6,7,8],[[],[9]])]] --> 2 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [16] 
* CE 3 is refined into CE [17,18] 
* CE 4 is refined into CE [19,20] 
* CE 5 is refined into CE [21,22] 


#### Refined cost equations start/1 
* CE 16: start(V) = 1
     [V>=0] 
* CE 17: start(V) = 1+ mark(W,X):1
     [V>=W+2,W>=0,X=0] 
* CE 18: start(V) = 1+ mark(W,X):2
     [V>=W+2,W>=1] 
* CE 19: start(V) = 1+ mark(V,W):1
     [V>=0,W=0] 
* CE 20: start(V) = 1+ mark(V,W):2
     [V>=1] 
* CE 21: start(V) = 0+ mark(V,W):1
     [V>=0,W=0] 
* CE 22: start(V) = 0+ mark(V,W):2
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [18,20,22] --> Loop 10 
* CEs [16,17,19,21] --> Loop 11 

#### Loops of start/1 
* Loop 10: start(V) [V>=1] 
* Loop 11: start(V) [V>=0] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [11]
* [10]...


### Merging Chains  start/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6,7,8] 

 * loop 6:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 7:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 8:mark(V,Out) -> [mark(V',Out')] 
2
#### Cost of phase [6,7,8]:mark(V,Out) -> [] 
4*it(6)+2*it(8)+0
#### Cost of chains of mark(V,Out):
* Chain [multiple([6,7,8],[[],[9]])]...: 4*it(6)+2*it(8)+0
  with precondition: [V>=1] 

* Chain [9]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of chains of start(V):
* Chain [11]: 1
  with precondition: [V>=0] 

* Chain [10]...: 1*aux(13)+0
  with precondition: [V>=1] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [11] with precondition: [V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [10]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 0 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 21 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 32 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 28 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 86 ms.

