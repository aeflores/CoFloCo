
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [natsFrom/2]
1. non_recursive  : [s/2]
2. recursive [non_tail] : [activate/2]
3. non_recursive  : [fun9/3]
4. non_recursive  : [fun8/3]
5. non_recursive  : [snd/2]
6. non_recursive  : [splitAt/3]
7. non_recursive  : [fun1/4]
8. non_recursive  : [fun/4]
9. non_recursive  : [afterNth/3]
10. non_recursive  : [fun3/3]
11. non_recursive  : [fun2/3]
12. non_recursive  : [fst/2]
13. non_recursive  : [fun13/3]
14. non_recursive  : [fun12/5]
15. non_recursive  : [fun11/5]
16. non_recursive  : [fun10/5]
17. non_recursive  : [fun15/3]
18. non_recursive  : [fun14/3]
19. non_recursive  : [fun17/4]
20. non_recursive  : [fun16/4]
21. non_recursive  : [fun5/3]
22. non_recursive  : [fun4/3]
23. non_recursive  : [head/2]
24. non_recursive  : [fun7/4]
25. non_recursive  : [fun6/4]
26. non_recursive  : [sel/3]
27. non_recursive  : [tail/2]
28. non_recursive  : [take/3]
29. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into natsFrom/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into fun8/3
5. SCC is partially evaluated into snd/2
6. SCC is partially evaluated into splitAt/3
7. SCC is partially evaluated into fun1/4
8. SCC is partially evaluated into fun/4
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into fun2/3
12. SCC is partially evaluated into fst/2
13. SCC is partially evaluated into fun13/3
14. SCC is partially evaluated into fun12/5
15. SCC is partially evaluated into fun11/5
16. SCC is partially evaluated into fun10/5
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into fun14/3
19. SCC is partially evaluated into fun17/4
20. SCC is partially evaluated into fun16/4
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into fun4/3
23. SCC is partially evaluated into head/2
24. SCC is partially evaluated into fun7/4
25. SCC is partially evaluated into fun6/4
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into tail/2
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations natsFrom/2 
* CE 50 is refined into CE [58] 
* CE 51 is refined into CE [59] 


#### Refined cost equations natsFrom/2 
* CE 58: natsFrom(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 59: natsFrom(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of natsFrom/2 
* CEs [58] --> Loop 31 
* CEs [59] --> Loop 32 

#### Loops of natsFrom/2 
* Loop 31: natsFrom(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 32: natsFrom(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR natsFrom(V1,Out) 

#### Partial ranking functions of CR natsFrom(V1,Out) 


### Resulting Chains:natsFrom(V1,Out) 
* [32]
* [31]


### Merging Chains  natsFrom/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations activate/2 
* CE 33 is refined into CE [60] 
* CE 31 is refined into CE [61,62] 
* CE 32 is refined into CE [63] 


#### Refined cost equations activate/2 
* CE 60: activate(A,A) = 1
     [A>=0] 
* CE 61: activate(V1,Out) = 1+ activate(W1,X1)+ natsFrom(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 62: activate(V1,Out) = 1+ activate(W1,X1)+ natsFrom(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 63: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of activate/2 
* CEs [61,63] --> Loop 33 
* CEs [62] --> Loop 34 
* CEs [60] --> Loop 35 

#### Loops of activate/2 
* Loop 33: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 34: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 35: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [33,34]: [V1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [33,34]:
  - RF of loop [33:1,34:1]:
    V1


### Resulting Chains:activate(V1,Out) 
* [[33,34],35]
* [35]


### Merging Chains  activate/2 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[33,34]]] --> 2 


### Specialization of cost equations fun8/3 
* CE 37 is refined into CE [64,65,66,67] 


#### Refined cost equations fun8/3 
* CE 64: fun8(A,B,B) = 2+ activate(B,B):1+ activate(B,B):1
     [B>=0,A=0] 
* CE 65: fun8(V1,V,Out) = 2+ activate(V,V):1+ activate(V,Out):2
     [Out>=V,V>=1,V1=0] 
* CE 66: fun8(V1,V,Out) = 2+ activate(V,Out):2+ activate(Out,Out):1
     [Out>=V,V>=1,V1=0] 
* CE 67: fun8(V1,V,Out) = 2+ activate(V,W1):2+ activate(W1,Out):2
     [Out>=W1,W1>=V,V>=1,V1=0] 

### Cost equations --> "Loop" of fun8/3 
* CEs [65,66,67] --> Loop 36 
* CEs [64] --> Loop 37 

#### Loops of fun8/3 
* Loop 36: fun8(V1,V,Out) [Out>=V,V>=1,V1=0] 
* Loop 37: fun8(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun8(V1,V,Out) 

#### Partial ranking functions of CR fun8(V1,V,Out) 


### Resulting Chains:fun8(V1,V,Out) 
* [37]
* [36]


### Merging Chains  fun8/3 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations snd/2 
* CE 52 is refined into CE [68,69] 
* CE 53 is refined into CE [70] 


#### Refined cost equations snd/2 
* CE 68: snd(V1,Out) = 1+ fun8(W1,Out,Out):1
     [V1>=Out+1,Out>=0,W1=0] 
* CE 69: snd(V1,Out) = 1+ fun8(W1,X1,Out):2
     [Out>=X1,V1>=X1+1,X1>=1,W1=0] 
* CE 70: snd(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of snd/2 
* CEs [68] --> Loop 38 
* CEs [69] --> Loop 39 
* CEs [70] --> Loop 40 

#### Loops of snd/2 
* Loop 38: snd(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 39: snd(V1,Out) [Out>=1,V1>=2] 
* Loop 40: snd(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR snd(V1,Out) 

#### Partial ranking functions of CR snd(V1,Out) 


### Resulting Chains:snd(V1,Out) 
* [40]
* [39]
* [38]


### Merging Chains  snd/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 


### Specialization of cost equations splitAt/3 
* CE 55 is refined into CE [71] 
* CE 54 is refined into CE [72] 


#### Refined cost equations splitAt/3 
* CE 71: splitAt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 72: splitAt(V1,V,Out) = 1
     [V>=0,V+2=Out,V1=0] 

### Cost equations --> "Loop" of splitAt/3 
* CEs [71] --> Loop 41 
* CEs [72] --> Loop 42 

#### Loops of splitAt/3 
* Loop 41: splitAt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 42: splitAt(V1,V,Out) [V>=0,V+2=Out,V1=0] 

### Ranking functions of CR splitAt(V1,V,Out) 

#### Partial ranking functions of CR splitAt(V1,V,Out) 


### Resulting Chains:splitAt(V1,V,Out) 
* [42]
* [41]


### Merging Chains  splitAt/3 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations fun1/4 
* CE 29 is refined into CE [73,74,75,76,77,78,79,80,81,82] 


#### Refined cost equations fun1/4 
* CE 73: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ snd(C3,D3):1
     [C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,D3=0,A3=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 74: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ snd(C3,Out):2
     [Out>=1,C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,A3=0,X2=0,W2=0,V=0,V1=0] 
* CE 75: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ snd(C3,Out):3
     [C3>=Out+1,Out>=0,C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,A3=0,X2=0,W2=0,V=0,V1=0] 
* CE 76: fun1(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ splitAt(V,V2,W2):2+ snd(X2,Y2):1
     [V2>=0,V>=0,Y2=0,X2=0,W2=0,Out=0,V1=0] 
* CE 77: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ snd(B3,C3):1
     [B3>=V2+2,V2>=1,B3=A3+2,B3=Y2+2,C3=0,Z2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 78: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ snd(B3,Out):2
     [B3>=V2+2,Out>=1,V2>=1,B3=A3+2,B3=Y2+2,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 79: fun1(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ snd(B3,Out):3
     [B3>=Out+1,B3>=V2+2,Out>=0,V2>=1,B3=A3+2,B3=Y2+2,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 80: fun1(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,W2):2+ splitAt(V,W2,X2):2+ snd(Y2,Z2):1
     [W2>=V2,V>=0,V2>=1,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 81: fun1(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,V2):1+ splitAt(W2,V2,X2):2+ snd(Y2,Z2):1
     [W2>=V,V2>=0,V>=1,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 82: fun1(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,X2):2+ splitAt(W2,X2,Y2):2+ snd(Z2,A3):1
     [X2>=V2,W2>=V,V2>=1,V>=1,A3=0,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun1/4 
* CEs [76,80,81,82] --> Loop 43 
* CEs [79] --> Loop 44 
* CEs [74,78] --> Loop 45 
* CEs [73,75,77] --> Loop 46 

#### Loops of fun1/4 
* Loop 43: fun1(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 44: fun1(V1,V,V2,Out) [Out>=0,V2>=1,V=0,V1=0] 
* Loop 45: fun1(V1,V,V2,Out) [Out>=1,V2>=0,V=0,V1=0] 
* Loop 46: fun1(V1,V,V2,Out) [V2+1>=Out,Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun1(V1,V,V2,Out) 

#### Partial ranking functions of CR fun1(V1,V,V2,Out) 


### Resulting Chains:fun1(V1,V,V2,Out) 
* [46]
* [45]
* [44]
* [43]


### Merging Chains  fun1/4 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 
* [[43]] --> 4 


### Specialization of cost equations fun/4 
* CE 28 is refined into CE [83,84,85,86,87,88,89,90,91,92] 


#### Refined cost equations fun/4 
* CE 83: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun1(Y2,Z2,V2,Out):1
     [V2+1>=Out,Out>=0,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 84: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun1(Y2,Z2,V2,Out):2
     [Out>=1,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 85: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun1(Y2,Z2,V2,Out):3
     [Out>=0,V2>=1,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 86: fun(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ fun1(W2,V,V2,X2):4
     [V2>=0,V>=0,X2=0,W2=0,Out=0,V1=0] 
* CE 87: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun1(Z2,A3,Y2,Out):1
     [Y2+1>=Out,Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 88: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun1(Z2,A3,Y2,Out):2
     [Y2>=V2,Out>=1,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 89: fun(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun1(Z2,A3,Y2,Out):3
     [Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 90: fun(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,W2):2+ fun1(X2,V,W2,Y2):4
     [W2>=V2,V>=0,V2>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 91: fun(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,V2):1+ fun1(X2,W2,V2,Y2):4
     [W2>=V,V2>=0,V>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 92: fun(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,X2):2+ fun1(Y2,W2,X2,Z2):4
     [X2>=V2,W2>=V,V2>=1,V>=1,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun/4 
* CEs [86,90,91,92] --> Loop 47 
* CEs [85,87,89] --> Loop 48 
* CEs [84,88] --> Loop 49 
* CEs [83] --> Loop 50 

#### Loops of fun/4 
* Loop 47: fun(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 48: fun(V1,V,V2,Out) [Out>=0,V2>=1,V=0,V1=0] 
* Loop 49: fun(V1,V,V2,Out) [Out>=1,V2>=0,V=0,V1=0] 
* Loop 50: fun(V1,V,V2,Out) [V2+1>=Out,Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun(V1,V,V2,Out) 

#### Partial ranking functions of CR fun(V1,V,V2,Out) 


### Resulting Chains:fun(V1,V,V2,Out) 
* [50]
* [49]
* [48]
* [47]


### Merging Chains  fun/4 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 
* [[48]] --> 3 
* [[47]] --> 4 


### Specialization of cost equations fun2/3 
* CE 30 is refined into CE [93,94,95,96] 


#### Refined cost equations fun2/3 
* CE 93: fun2(A,B,B) = 2+ activate(B,B):1+ activate(B,B):1
     [B>=0,A=0] 
* CE 94: fun2(V1,V,Out) = 2+ activate(V,V):1+ activate(V,Out):2
     [Out>=V,V>=1,V1=0] 
* CE 95: fun2(V1,V,Out) = 2+ activate(V,Out):2+ activate(Out,Out):1
     [Out>=V,V>=1,V1=0] 
* CE 96: fun2(V1,V,Out) = 2+ activate(V,W1):2+ activate(W1,Out):2
     [Out>=W1,W1>=V,V>=1,V1=0] 

### Cost equations --> "Loop" of fun2/3 
* CEs [94,95,96] --> Loop 51 
* CEs [93] --> Loop 52 

#### Loops of fun2/3 
* Loop 51: fun2(V1,V,Out) [Out>=V,V>=1,V1=0] 
* Loop 52: fun2(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun2(V1,V,Out) 

#### Partial ranking functions of CR fun2(V1,V,Out) 


### Resulting Chains:fun2(V1,V,Out) 
* [52]
* [51]


### Merging Chains  fun2/3 into  External patterns of execution 
* [[52]] --> 1 
* [[51]] --> 2 


### Specialization of cost equations fst/2 
* CE 46 is refined into CE [97,98] 
* CE 47 is refined into CE [99] 


#### Refined cost equations fst/2 
* CE 97: fst(V1,Out) = 1+ fun2(W1,Out,Out):1
     [V1>=Out+1,Out>=0,W1=0] 
* CE 98: fst(V1,Out) = 1+ fun2(W1,X1,Out):2
     [Out>=X1,V1>=X1+1,X1>=1,W1=0] 
* CE 99: fst(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fst/2 
* CEs [97] --> Loop 53 
* CEs [98] --> Loop 54 
* CEs [99] --> Loop 55 

#### Loops of fst/2 
* Loop 53: fst(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 54: fst(V1,Out) [Out>=1,V1>=2] 
* Loop 55: fst(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR fst(V1,Out) 

#### Partial ranking functions of CR fst(V1,Out) 


### Resulting Chains:fst(V1,Out) 
* [55]
* [54]
* [53]


### Merging Chains  fst/2 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 
* [[53]] --> 3 


### Specialization of cost equations fun13/3 
* CE 41 is refined into CE [100,101] 
* CE 42 is refined into CE [102] 


#### Refined cost equations fun13/3 
* CE 100: fun13(V1,V,Out) = 1+ activate(V,V):1
     [V>=0,V1>=1,V1+V+1=Out] 
* CE 101: fun13(V1,V,Out) = 1+ activate(V,W1):2
     [W1>=V,V>=1,V1>=1,V1+W1+1=Out] 
* CE 102: fun13(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fun13/3 
* CEs [101] --> Loop 56 
* CEs [100] --> Loop 57 
* CEs [102] --> Loop 58 

#### Loops of fun13/3 
* Loop 56: fun13(V1,V,Out) [Out>=V1+V+1,V>=1,V1>=1] 
* Loop 57: fun13(V1,V,Out) [V>=0,V1>=1,V1+V+1=Out] 
* Loop 58: fun13(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun13(V1,V,Out) 

#### Partial ranking functions of CR fun13(V1,V,Out) 


### Resulting Chains:fun13(V1,V,Out) 
* [58]
* [57]
* [56]


### Merging Chains  fun13/3 into  External patterns of execution 
* [[58]] --> 1 
* [[57]] --> 2 
* [[56]] --> 3 


### Specialization of cost equations fun12/5 
* CE 40 is refined into CE [103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122] 


#### Refined cost equations fun12/5 
* CE 103: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,V2):1+ fun13(C4,V2,D4):1
     [V2>=0,C4>=2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,D4=0,A4=0,X3=0,W3=0,Out=0,V=0,V1=0] 
* CE 104: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):1+ fun13(C4,F4,Out):2
     [Out>=C4+1,C4>=2,Out=C4+F4+1,Out=C4+E4+1,Out=C4+D4+1,Out=V2+C4+1,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 105: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,V2):1+ fun13(C4,V2,Out):3
     [Out>=V2+C4+1,V2>=1,C4>=2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 106: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,D4):2+ fun13(C4,D4,E4):1
     [D4>=V2,C4>=2,V2>=1,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,E4=0,A4=0,X3=0,W3=0,Out=0,V=0,V1=0] 
* CE 107: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,D4):2+ fun13(C4,E4,Out):2
     [Out>=V2+C4+1,C4>=2,V2>=1,Out=C4+E4+1,Out=C4+D4+1,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 108: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,D4):2+ fun13(C4,D4,Out):3
     [Out>=C4+D4+1,D4>=V2,C4>=2,V2>=1,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 109: fun12(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):2+ activate(V2,V2):1+ fun13(X3,V2,Y3):1
     [V2>=0,V3>=0,V>=0,Y3=0,X3=0,W3=0,Out=0,V1=0] 
* CE 110: fun12(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):2+ activate(V2,X3):2+ fun13(Y3,X3,Z3):1
     [X3>=V2,V2>=1,V3>=0,V>=0,Z3=0,Y3=0,W3=0,Out=0,V1=0] 
* CE 111: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(V2,V2):1+ fun13(B4,V2,C4):1
     [B4>=V3+2,V2>=0,V3>=1,B4=A4+2,B4=Y3+2,C4=0,Z3=0,X3=0,W3=0,Out=0,V=0,V1=0] 
* CE 112: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(C4,D4):1+ fun13(B4,E4,Out):2
     [Out>=B4+1,B4>=V3+2,V3>=1,Out=B4+E4+1,Out=B4+D4+1,Out=B4+C4+1,Out=V2+B4+1,B4=A4+2,B4=Y3+2,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 113: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(V2,V2):1+ fun13(B4,V2,Out):3
     [Out>=V2+B4+1,B4>=V3+2,V2>=1,V3>=1,B4=A4+2,B4=Y3+2,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 114: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(V2,C4):2+ fun13(B4,C4,D4):1
     [C4>=V2,B4>=V3+2,V2>=1,V3>=1,B4=A4+2,B4=Y3+2,D4=0,Z3=0,X3=0,W3=0,Out=0,V=0,V1=0] 
* CE 115: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(V2,C4):2+ fun13(B4,D4,Out):2
     [Out>=V2+B4+1,B4>=V3+2,V2>=1,V3>=1,Out=B4+D4+1,Out=B4+C4+1,B4=A4+2,B4=Y3+2,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 116: fun12(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V3,Y3):2+ splitAt(Z3,A4,B4):1+ activate(V2,C4):2+ fun13(B4,C4,Out):3
     [Out>=B4+C4+1,C4>=V2,B4>=V3+2,V2>=1,V3>=1,B4=A4+2,B4=Y3+2,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 117: fun12(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V3,W3):2+ splitAt(V,W3,X3):2+ activate(V2,V2):1+ fun13(Y3,V2,Z3):1
     [W3>=V3,V2>=0,V>=0,V3>=1,Z3=0,Y3=0,X3=0,Out=0,V1=0] 
* CE 118: fun12(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V3,W3):2+ splitAt(V,W3,X3):2+ activate(V2,Y3):2+ fun13(Z3,Y3,A4):1
     [Y3>=V2,W3>=V3,V2>=1,V>=0,V3>=1,A4=0,Z3=0,X3=0,Out=0,V1=0] 
* CE 119: fun12(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V3,V3):1+ splitAt(W3,V3,X3):2+ activate(V2,V2):1+ fun13(Y3,V2,Z3):1
     [W3>=V,V2>=0,V3>=0,V>=1,Z3=0,Y3=0,X3=0,Out=0,V1=0] 
* CE 120: fun12(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V3,V3):1+ splitAt(W3,V3,X3):2+ activate(V2,Y3):2+ fun13(Z3,Y3,A4):1
     [Y3>=V2,W3>=V,V2>=1,V3>=0,V>=1,A4=0,Z3=0,X3=0,Out=0,V1=0] 
* CE 121: fun12(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V3,X3):2+ splitAt(W3,X3,Y3):2+ activate(V2,V2):1+ fun13(Z3,V2,A4):1
     [X3>=V3,W3>=V,V2>=0,V3>=1,V>=1,A4=0,Z3=0,Y3=0,Out=0,V1=0] 
* CE 122: fun12(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V3,X3):2+ splitAt(W3,X3,Y3):2+ activate(V2,Z3):2+ fun13(A4,Z3,B4):1
     [Z3>=V2,X3>=V3,W3>=V,V2>=1,V3>=1,V>=1,B4=0,A4=0,Y3=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun12/5 
* CEs [105,107,108] --> Loop 59 
* CEs [112,113,115,116] --> Loop 60 
* CEs [104] --> Loop 61 
* CEs [103,106,109,110,111,114,117,118,119,120,121,122] --> Loop 62 

#### Loops of fun12/5 
* Loop 59: fun12(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=0,V2>=1,V=0,V1=0] 
* Loop 60: fun12(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=1,V2>=0,V=0,V1=0] 
* Loop 61: fun12(V1,V,V2,V3,Out) [V3>=0,V2>=0,V2+V3+3=Out,V=0,V1=0] 
* Loop 62: fun12(V1,V,V2,V3,Out) [V3>=0,V2>=0,V>=0,Out=0,V1=0] 

### Ranking functions of CR fun12(V1,V,V2,V3,Out) 

#### Partial ranking functions of CR fun12(V1,V,V2,V3,Out) 


### Resulting Chains:fun12(V1,V,V2,V3,Out) 
* [62]
* [61]
* [60]
* [59]


### Merging Chains  fun12/5 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 
* [[59]] --> 3 
* [[62]] --> 4 


### Specialization of cost equations fun11/5 
* CE 39 is refined into CE [123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142] 


#### Refined cost equations fun11/5 
* CE 123: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(Y3,Z3):1+ fun12(A4,B4,V2,C4,Out):1
     [Out>=V2+3,V2>=0,Out=V2+C4+3,Out=V2+Z3+3,Out=V2+Y3+3,Out=V2+V3+3,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 124: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun12(Y3,Z3,V2,V3,Out):2
     [Out>=V2+V3+3,V3>=1,V2>=0,Z3=0,Y3=0,X3=0,W3=0,V=0,V1=0] 
* CE 125: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun12(Y3,Z3,V2,V3,Out):3
     [Out>=V2+V3+3,V3>=0,V2>=1,Z3=0,Y3=0,X3=0,W3=0,V=0,V1=0] 
* CE 126: fun11(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun12(W3,V,V2,V3,X3):4
     [V3>=0,V2>=0,V>=0,X3=0,W3=0,Out=0,V1=0] 
* CE 127: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun12(Z3,A4,V2,B4,Out):1
     [Out>=V2+V3+3,V2>=0,V3>=1,Out=V2+B4+3,Out=V2+Y3+3,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 128: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun12(Z3,A4,V2,Y3,Out):2
     [Out>=V2+Y3+3,Y3>=V3,V2>=0,V3>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 129: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun12(Z3,A4,V2,Y3,Out):3
     [Out>=V2+Y3+3,Y3>=V3,V2>=1,V3>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 130: fun11(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ activate(V3,W3):2+ fun12(X3,V,V2,W3,Y3):4
     [W3>=V3,V2>=0,V>=0,V3>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 131: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(Z3,A4):1+ fun12(B4,C4,Y3,D4,Out):1
     [Out>=Y3+3,Y3>=V2,V2>=1,Out=Y3+D4+3,Out=Y3+A4+3,Out=Y3+Z3+3,Out=V3+Y3+3,C4=0,B4=0,X3=0,W3=0,V=0,V1=0] 
* CE 132: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,V3):1+ fun12(Z3,A4,Y3,V3,Out):2
     [Out>=V3+Y3+3,Y3>=V2,V3>=1,V2>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 133: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,V3):1+ fun12(Z3,A4,Y3,V3,Out):3
     [Out>=V3+Y3+3,Y3>=V2,V3>=0,V2>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 134: fun11(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,W3):2+ activate(V3,V3):1+ fun12(X3,V,W3,V3,Y3):4
     [W3>=V2,V3>=0,V>=0,V2>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 135: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun12(A4,B4,Y3,C4,Out):1
     [Out>=V3+Y3+3,Y3>=V2,V3>=1,V2>=1,Out=Y3+C4+3,Out=Y3+Z3+3,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 136: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun12(A4,B4,Y3,Z3,Out):2
     [Out>=Y3+Z3+3,Z3>=V3,Y3>=V2,V3>=1,V2>=1,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 137: fun11(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun12(A4,B4,Y3,Z3,Out):3
     [Out>=Y3+Z3+3,Z3>=V3,Y3>=V2,V3>=1,V2>=1,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 138: fun11(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,W3):2+ activate(V3,X3):2+ fun12(Y3,V,W3,X3,Z3):4
     [X3>=V3,W3>=V2,V>=0,V3>=1,V2>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 139: fun11(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,V2):1+ activate(V3,V3):1+ fun12(X3,W3,V2,V3,Y3):4
     [W3>=V,V3>=0,V2>=0,V>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 140: fun11(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,V2):1+ activate(V3,X3):2+ fun12(Y3,W3,V2,X3,Z3):4
     [X3>=V3,W3>=V,V2>=0,V3>=1,V>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 141: fun11(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,X3):2+ activate(V3,V3):1+ fun12(Y3,W3,X3,V3,Z3):4
     [X3>=V2,W3>=V,V3>=0,V2>=1,V>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 142: fun11(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,X3):2+ activate(V3,Y3):2+ fun12(Z3,W3,X3,Y3,A4):4
     [Y3>=V3,X3>=V2,W3>=V,V3>=1,V2>=1,V>=1,A4=0,Z3=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun11/5 
* CEs [126,130,134,138,139,140,141,142] --> Loop 63 
* CEs [125,131,133] --> Loop 64 
* CEs [124,127,128,129,132,135,136,137] --> Loop 65 
* CEs [123] --> Loop 66 

#### Loops of fun11/5 
* Loop 63: fun11(V1,V,V2,V3,Out) [V3>=0,V2>=0,V>=0,Out=0,V1=0] 
* Loop 64: fun11(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=0,V2>=1,V=0,V1=0] 
* Loop 65: fun11(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=1,V2>=0,V=0,V1=0] 
* Loop 66: fun11(V1,V,V2,V3,Out) [V3>=0,V2>=0,V2+V3+3=Out,V=0,V1=0] 

### Ranking functions of CR fun11(V1,V,V2,V3,Out) 

#### Partial ranking functions of CR fun11(V1,V,V2,V3,Out) 


### Resulting Chains:fun11(V1,V,V2,V3,Out) 
* [66]
* [65]
* [64]
* [63]


### Merging Chains  fun11/5 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[63]] --> 4 


### Specialization of cost equations fun10/5 
* CE 38 is refined into CE [143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162] 


#### Refined cost equations fun10/5 
* CE 143: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(Y3,Z3):1+ fun11(A4,B4,V2,C4,Out):1
     [Out>=V2+3,V2>=0,Out=V2+C4+3,Out=V2+Z3+3,Out=V2+Y3+3,Out=V2+V3+3,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 144: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun11(Y3,Z3,V2,V3,Out):2
     [Out>=V2+V3+3,V3>=1,V2>=0,Z3=0,Y3=0,X3=0,W3=0,V=0,V1=0] 
* CE 145: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun11(Y3,Z3,V2,V3,Out):3
     [Out>=V2+V3+3,V3>=0,V2>=1,Z3=0,Y3=0,X3=0,W3=0,V=0,V1=0] 
* CE 146: fun10(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ activate(V3,V3):1+ fun11(W3,V,V2,V3,X3):4
     [V3>=0,V2>=0,V>=0,X3=0,W3=0,Out=0,V1=0] 
* CE 147: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun11(Z3,A4,V2,B4,Out):1
     [Out>=V2+V3+3,V2>=0,V3>=1,Out=V2+B4+3,Out=V2+Y3+3,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 148: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun11(Z3,A4,V2,Y3,Out):2
     [Out>=V2+Y3+3,Y3>=V3,V2>=0,V3>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 149: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,V2):1+ activate(V3,Y3):2+ fun11(Z3,A4,V2,Y3,Out):3
     [Out>=V2+Y3+3,Y3>=V3,V2>=1,V3>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 150: fun10(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ activate(V3,W3):2+ fun11(X3,V,V2,W3,Y3):4
     [W3>=V3,V2>=0,V>=0,V3>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 151: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(Z3,A4):1+ fun11(B4,C4,Y3,D4,Out):1
     [Out>=Y3+3,Y3>=V2,V2>=1,Out=Y3+D4+3,Out=Y3+A4+3,Out=Y3+Z3+3,Out=V3+Y3+3,C4=0,B4=0,X3=0,W3=0,V=0,V1=0] 
* CE 152: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,V3):1+ fun11(Z3,A4,Y3,V3,Out):2
     [Out>=V3+Y3+3,Y3>=V2,V3>=1,V2>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 153: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,V3):1+ fun11(Z3,A4,Y3,V3,Out):3
     [Out>=V3+Y3+3,Y3>=V2,V3>=0,V2>=1,A4=0,Z3=0,X3=0,W3=0,V=0,V1=0] 
* CE 154: fun10(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,W3):2+ activate(V3,V3):1+ fun11(X3,V,W3,V3,Y3):4
     [W3>=V2,V3>=0,V>=0,V2>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 155: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun11(A4,B4,Y3,C4,Out):1
     [Out>=V3+Y3+3,Y3>=V2,V3>=1,V2>=1,Out=Y3+C4+3,Out=Y3+Z3+3,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 156: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun11(A4,B4,Y3,Z3,Out):2
     [Out>=Y3+Z3+3,Z3>=V3,Y3>=V2,V3>=1,V2>=1,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 157: fun10(V1,V,V2,V3,Out) = 1+ activate(W3,X3):1+ activate(V2,Y3):2+ activate(V3,Z3):2+ fun11(A4,B4,Y3,Z3,Out):3
     [Out>=Y3+Z3+3,Z3>=V3,Y3>=V2,V3>=1,V2>=1,B4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 158: fun10(V1,V,V2,V3,Out) = 1+ activate(V,V):1+ activate(V2,W3):2+ activate(V3,X3):2+ fun11(Y3,V,W3,X3,Z3):4
     [X3>=V3,W3>=V2,V>=0,V3>=1,V2>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 159: fun10(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,V2):1+ activate(V3,V3):1+ fun11(X3,W3,V2,V3,Y3):4
     [W3>=V,V3>=0,V2>=0,V>=1,Y3=0,X3=0,Out=0,V1=0] 
* CE 160: fun10(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,V2):1+ activate(V3,X3):2+ fun11(Y3,W3,V2,X3,Z3):4
     [X3>=V3,W3>=V,V2>=0,V3>=1,V>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 161: fun10(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,X3):2+ activate(V3,V3):1+ fun11(Y3,W3,X3,V3,Z3):4
     [X3>=V2,W3>=V,V3>=0,V2>=1,V>=1,Z3=0,Y3=0,Out=0,V1=0] 
* CE 162: fun10(V1,V,V2,V3,Out) = 1+ activate(V,W3):2+ activate(V2,X3):2+ activate(V3,Y3):2+ fun11(Z3,W3,X3,Y3,A4):4
     [Y3>=V3,X3>=V2,W3>=V,V3>=1,V2>=1,V>=1,A4=0,Z3=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun10/5 
* CEs [146,150,154,158,159,160,161,162] --> Loop 67 
* CEs [145,151,153] --> Loop 68 
* CEs [144,147,148,149,152,155,156,157] --> Loop 69 
* CEs [143] --> Loop 70 

#### Loops of fun10/5 
* Loop 67: fun10(V1,V,V2,V3,Out) [V3>=0,V2>=0,V>=0,Out=0,V1=0] 
* Loop 68: fun10(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=0,V2>=1,V=0,V1=0] 
* Loop 69: fun10(V1,V,V2,V3,Out) [Out>=V2+V3+3,V3>=1,V2>=0,V=0,V1=0] 
* Loop 70: fun10(V1,V,V2,V3,Out) [V3>=0,V2>=0,V2+V3+3=Out,V=0,V1=0] 

### Ranking functions of CR fun10(V1,V,V2,V3,Out) 

#### Partial ranking functions of CR fun10(V1,V,V2,V3,Out) 


### Resulting Chains:fun10(V1,V,V2,V3,Out) 
* [70]
* [69]
* [68]
* [67]


### Merging Chains  fun10/5 into  External patterns of execution 
* [[70]] --> 1 
* [[69]] --> 2 
* [[68]] --> 3 
* [[67]] --> 4 


### Specialization of cost equations fun14/3 
* CE 43 is refined into CE [163,164,165,166] 


#### Refined cost equations fun14/3 
* CE 163: fun14(A,B,B) = 2+ activate(B,B):1+ activate(B,B):1
     [B>=0,A=0] 
* CE 164: fun14(V1,V,Out) = 2+ activate(V,V):1+ activate(V,Out):2
     [Out>=V,V>=1,V1=0] 
* CE 165: fun14(V1,V,Out) = 2+ activate(V,Out):2+ activate(Out,Out):1
     [Out>=V,V>=1,V1=0] 
* CE 166: fun14(V1,V,Out) = 2+ activate(V,W1):2+ activate(W1,Out):2
     [Out>=W1,W1>=V,V>=1,V1=0] 

### Cost equations --> "Loop" of fun14/3 
* CEs [164,165,166] --> Loop 71 
* CEs [163] --> Loop 72 

#### Loops of fun14/3 
* Loop 71: fun14(V1,V,Out) [Out>=V,V>=1,V1=0] 
* Loop 72: fun14(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun14(V1,V,Out) 

#### Partial ranking functions of CR fun14(V1,V,Out) 


### Resulting Chains:fun14(V1,V,Out) 
* [72]
* [71]


### Merging Chains  fun14/3 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 


### Specialization of cost equations fun17/4 
* CE 45 is refined into CE [167,168,169,170,171,172,173,174,175,176] 


#### Refined cost equations fun17/4 
* CE 167: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ fst(C3,D3):1
     [C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,D3=0,A3=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 168: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ fst(C3,Out):2
     [Out>=1,C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,A3=0,X2=0,W2=0,V=0,V1=0] 
* CE 169: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(Y2,Z2):1+ splitAt(A3,B3,C3):1+ fst(C3,Out):3
     [C3>=Out+1,Out>=0,C3>=2,C3=B3+2,C3=Z2+2,C3=Y2+2,C3=V2+2,A3=0,X2=0,W2=0,V=0,V1=0] 
* CE 170: fun17(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ splitAt(V,V2,W2):2+ fst(X2,Y2):1
     [V2>=0,V>=0,Y2=0,X2=0,W2=0,Out=0,V1=0] 
* CE 171: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ fst(B3,C3):1
     [B3>=V2+2,V2>=1,B3=A3+2,B3=Y2+2,C3=0,Z2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 172: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ fst(B3,Out):2
     [B3>=V2+2,Out>=1,V2>=1,B3=A3+2,B3=Y2+2,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 173: fun17(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ splitAt(Z2,A3,B3):1+ fst(B3,Out):3
     [B3>=Out+1,B3>=V2+2,Out>=0,V2>=1,B3=A3+2,B3=Y2+2,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 174: fun17(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,W2):2+ splitAt(V,W2,X2):2+ fst(Y2,Z2):1
     [W2>=V2,V>=0,V2>=1,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 175: fun17(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,V2):1+ splitAt(W2,V2,X2):2+ fst(Y2,Z2):1
     [W2>=V,V2>=0,V>=1,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 176: fun17(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,X2):2+ splitAt(W2,X2,Y2):2+ fst(Z2,A3):1
     [X2>=V2,W2>=V,V2>=1,V>=1,A3=0,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun17/4 
* CEs [170,174,175,176] --> Loop 73 
* CEs [173] --> Loop 74 
* CEs [168,172] --> Loop 75 
* CEs [167,169,171] --> Loop 76 

#### Loops of fun17/4 
* Loop 73: fun17(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 74: fun17(V1,V,V2,Out) [Out>=0,V2>=1,V=0,V1=0] 
* Loop 75: fun17(V1,V,V2,Out) [Out>=1,V2>=0,V=0,V1=0] 
* Loop 76: fun17(V1,V,V2,Out) [V2+1>=Out,Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun17(V1,V,V2,Out) 

#### Partial ranking functions of CR fun17(V1,V,V2,Out) 


### Resulting Chains:fun17(V1,V,V2,Out) 
* [76]
* [75]
* [74]
* [73]


### Merging Chains  fun17/4 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 


### Specialization of cost equations fun16/4 
* CE 44 is refined into CE [177,178,179,180,181,182,183,184,185,186] 


#### Refined cost equations fun16/4 
* CE 177: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun17(Y2,Z2,V2,Out):1
     [V2+1>=Out,Out>=0,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 178: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun17(Y2,Z2,V2,Out):2
     [Out>=1,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 179: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun17(Y2,Z2,V2,Out):3
     [Out>=0,V2>=1,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 180: fun16(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ fun17(W2,V,V2,X2):4
     [V2>=0,V>=0,X2=0,W2=0,Out=0,V1=0] 
* CE 181: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun17(Z2,A3,Y2,Out):1
     [Y2+1>=Out,Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 182: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun17(Z2,A3,Y2,Out):2
     [Y2>=V2,Out>=1,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 183: fun16(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun17(Z2,A3,Y2,Out):3
     [Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 184: fun16(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,W2):2+ fun17(X2,V,W2,Y2):4
     [W2>=V2,V>=0,V2>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 185: fun16(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,V2):1+ fun17(X2,W2,V2,Y2):4
     [W2>=V,V2>=0,V>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 186: fun16(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,X2):2+ fun17(Y2,W2,X2,Z2):4
     [X2>=V2,W2>=V,V2>=1,V>=1,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun16/4 
* CEs [180,184,185,186] --> Loop 77 
* CEs [179,181,183] --> Loop 78 
* CEs [178,182] --> Loop 79 
* CEs [177] --> Loop 80 

#### Loops of fun16/4 
* Loop 77: fun16(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 78: fun16(V1,V,V2,Out) [Out>=0,V2>=1,V=0,V1=0] 
* Loop 79: fun16(V1,V,V2,Out) [Out>=1,V2>=0,V=0,V1=0] 
* Loop 80: fun16(V1,V,V2,Out) [V2+1>=Out,Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun16(V1,V,V2,Out) 

#### Partial ranking functions of CR fun16(V1,V,V2,Out) 


### Resulting Chains:fun16(V1,V,V2,Out) 
* [80]
* [79]
* [78]
* [77]


### Merging Chains  fun16/4 into  External patterns of execution 
* [[80]] --> 1 
* [[79]] --> 2 
* [[78]] --> 3 
* [[77]] --> 4 


### Specialization of cost equations fun4/3 
* CE 34 is refined into CE [187,188,189,190] 


#### Refined cost equations fun4/3 
* CE 187: fun4(A,B,B) = 2+ activate(B,B):1+ activate(B,B):1
     [B>=0,A=0] 
* CE 188: fun4(V1,V,Out) = 2+ activate(V,V):1+ activate(V,Out):2
     [Out>=V,V>=1,V1=0] 
* CE 189: fun4(V1,V,Out) = 2+ activate(V,Out):2+ activate(Out,Out):1
     [Out>=V,V>=1,V1=0] 
* CE 190: fun4(V1,V,Out) = 2+ activate(V,W1):2+ activate(W1,Out):2
     [Out>=W1,W1>=V,V>=1,V1=0] 

### Cost equations --> "Loop" of fun4/3 
* CEs [188,189,190] --> Loop 81 
* CEs [187] --> Loop 82 

#### Loops of fun4/3 
* Loop 81: fun4(V1,V,Out) [Out>=V,V>=1,V1=0] 
* Loop 82: fun4(A,B,B) [B>=0,A=0] 

### Ranking functions of CR fun4(V1,V,Out) 

#### Partial ranking functions of CR fun4(V1,V,Out) 


### Resulting Chains:fun4(V1,V,Out) 
* [82]
* [81]


### Merging Chains  fun4/3 into  External patterns of execution 
* [[82]] --> 1 
* [[81]] --> 2 


### Specialization of cost equations head/2 
* CE 48 is refined into CE [191,192] 
* CE 49 is refined into CE [193] 


#### Refined cost equations head/2 
* CE 191: head(V1,Out) = 1+ fun4(W1,Out,Out):1
     [V1>=Out+1,Out>=0,W1=0] 
* CE 192: head(V1,Out) = 1+ fun4(W1,X1,Out):2
     [Out>=X1,V1>=X1+1,X1>=1,W1=0] 
* CE 193: head(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [191] --> Loop 83 
* CEs [192] --> Loop 84 
* CEs [193] --> Loop 85 

#### Loops of head/2 
* Loop 83: head(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 84: head(V1,Out) [Out>=1,V1>=2] 
* Loop 85: head(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR head(V1,Out) 

#### Partial ranking functions of CR head(V1,Out) 


### Resulting Chains:head(V1,Out) 
* [85]
* [84]
* [83]


### Merging Chains  head/2 into  External patterns of execution 
* [[85]] --> 1 
* [[84]] --> 2 
* [[83]] --> 3 


### Specialization of cost equations fun7/4 
* CE 36 is refined into CE [194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215] 


#### Refined cost equations fun7/4 
* CE 194: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):1+ head(A3,B3):1
     [V2+1>=A3,A3>=0,V2>=0,B3=0,Z2=0,Y2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 195: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):1+ head(A3,Out):2
     [V2+1>=A3,Out>=1,A3>=2,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 196: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):1+ head(A3,Out):3
     [A3>=Out+1,V2+1>=A3,Out>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 197: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):2+ head(A3,B3):1
     [A3>=1,V2>=0,B3=0,Z2=0,Y2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 198: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):2+ head(A3,Out):2
     [Out>=1,A3>=2,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 199: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):2+ head(A3,Out):3
     [A3>=Out+1,Out>=0,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 200: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):3+ head(A3,B3):1
     [A3>=0,V2>=1,B3=0,Z2=0,Y2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 201: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):3+ head(A3,Out):2
     [Out>=1,A3>=2,V2>=1,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 202: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,V2):1+ fun(Y2,Z2,V2,A3):3+ head(A3,Out):3
     [A3>=Out+1,Out>=0,V2>=1,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 203: fun7(V1,V,V2,Out) = 2+ activate(V,V):1+ activate(V2,V2):1+ fun(W2,V,V2,X2):4+ head(Y2,Z2):1
     [V2>=0,V>=0,Z2=0,Y2=0,X2=0,W2=0,Out=0,V1=0] 
* CE 204: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):1+ head(B3,C3):1
     [Y2+1>=B3,Y2>=V2,B3>=0,V2>=1,C3=0,A3=0,Z2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 205: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):1+ head(B3,Out):2
     [Y2+1>=B3,Y2>=V2,Out>=1,B3>=2,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 206: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):1+ head(B3,Out):3
     [B3>=Out+1,Y2+1>=B3,Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 207: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):2+ head(B3,C3):1
     [Y2>=V2,B3>=1,V2>=1,C3=0,A3=0,Z2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 208: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):2+ head(B3,Out):2
     [Y2>=V2,Out>=1,B3>=2,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 209: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):2+ head(B3,Out):3
     [B3>=Out+1,Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 210: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):3+ head(B3,C3):1
     [Y2>=V2,B3>=0,V2>=1,C3=0,A3=0,Z2=0,X2=0,W2=0,Out=0,V=0,V1=0] 
* CE 211: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):3+ head(B3,Out):2
     [Y2>=V2,Out>=1,B3>=2,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 212: fun7(V1,V,V2,Out) = 2+ activate(W2,X2):1+ activate(V2,Y2):2+ fun(Z2,A3,Y2,B3):3+ head(B3,Out):3
     [B3>=Out+1,Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 213: fun7(V1,V,V2,Out) = 2+ activate(V,V):1+ activate(V2,W2):2+ fun(X2,V,W2,Y2):4+ head(Z2,A3):1
     [W2>=V2,V>=0,V2>=1,A3=0,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 214: fun7(V1,V,V2,Out) = 2+ activate(V,W2):2+ activate(V2,V2):1+ fun(X2,W2,V2,Y2):4+ head(Z2,A3):1
     [W2>=V,V2>=0,V>=1,A3=0,Z2=0,Y2=0,X2=0,Out=0,V1=0] 
* CE 215: fun7(V1,V,V2,Out) = 2+ activate(V,W2):2+ activate(V2,X2):2+ fun(Y2,W2,X2,Z2):4+ head(A3,B3):1
     [X2>=V2,W2>=V,V2>=1,V>=1,B3=0,A3=0,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun7/4 
* CEs [203,213,214,215] --> Loop 86 
* CEs [194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212] --> Loop 87 

#### Loops of fun7/4 
* Loop 86: fun7(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 87: fun7(V1,V,V2,Out) [Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun7(V1,V,V2,Out) 

#### Partial ranking functions of CR fun7(V1,V,V2,Out) 


### Resulting Chains:fun7(V1,V,V2,Out) 
* [87]
* [86]


### Merging Chains  fun7/4 into  External patterns of execution 
* [[87]] --> 1 
* [[86]] --> 2 


### Specialization of cost equations fun6/4 
* CE 35 is refined into CE [216,217,218,219,220,221] 


#### Refined cost equations fun6/4 
* CE 216: fun6(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,V2):1+ fun7(Y2,Z2,V2,Out):1
     [Out>=0,V2>=0,Z2=0,Y2=0,X2=0,W2=0,V=0,V1=0] 
* CE 217: fun6(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,V2):1+ fun7(W2,V,V2,X2):2
     [V2>=0,V>=0,X2=0,W2=0,Out=0,V1=0] 
* CE 218: fun6(V1,V,V2,Out) = 1+ activate(W2,X2):1+ activate(V2,Y2):2+ fun7(Z2,A3,Y2,Out):1
     [Y2>=V2,Out>=0,V2>=1,A3=0,Z2=0,X2=0,W2=0,V=0,V1=0] 
* CE 219: fun6(V1,V,V2,Out) = 1+ activate(V,V):1+ activate(V2,W2):2+ fun7(X2,V,W2,Y2):2
     [W2>=V2,V>=0,V2>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 220: fun6(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,V2):1+ fun7(X2,W2,V2,Y2):2
     [W2>=V,V2>=0,V>=1,Y2=0,X2=0,Out=0,V1=0] 
* CE 221: fun6(V1,V,V2,Out) = 1+ activate(V,W2):2+ activate(V2,X2):2+ fun7(Y2,W2,X2,Z2):2
     [X2>=V2,W2>=V,V2>=1,V>=1,Z2=0,Y2=0,Out=0,V1=0] 

### Cost equations --> "Loop" of fun6/4 
* CEs [217,219,220,221] --> Loop 88 
* CEs [216,218] --> Loop 89 

#### Loops of fun6/4 
* Loop 88: fun6(V1,V,V2,Out) [V2>=0,V>=0,Out=0,V1=0] 
* Loop 89: fun6(V1,V,V2,Out) [Out>=0,V2>=0,V=0,V1=0] 

### Ranking functions of CR fun6(V1,V,V2,Out) 

#### Partial ranking functions of CR fun6(V1,V,V2,Out) 


### Resulting Chains:fun6(V1,V,V2,Out) 
* [89]
* [88]


### Merging Chains  fun6/4 into  External patterns of execution 
* [[89]] --> 1 
* [[88]] --> 2 


### Specialization of cost equations tail/2 
* CE 56 is refined into CE [222,223,224,225] 
* CE 57 is refined into CE [226] 


#### Refined cost equations tail/2 
* CE 222: tail(V1,Out) = 1+ activate(Out,Out):1+ fun14(W1,Out,Out):1
     [V1>=Out+1,Out>=0,W1=0] 
* CE 223: tail(V1,Out) = 1+ activate(W1,W1):1+ fun14(X1,W1,Out):2
     [Out>=W1,V1>=W1+1,W1>=1,X1=0] 
* CE 224: tail(V1,Out) = 1+ activate(W1,Out):2+ fun14(X1,Out,Out):1
     [Out>=W1,V1>=W1+1,W1>=1,X1=0] 
* CE 225: tail(V1,Out) = 1+ activate(W1,X1):2+ fun14(Y1,X1,Out):2
     [Out>=X1,X1>=W1,V1>=W1+1,W1>=1,Y1=0] 
* CE 226: tail(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [222] --> Loop 90 
* CEs [223,224,225] --> Loop 91 
* CEs [226] --> Loop 92 

#### Loops of tail/2 
* Loop 90: tail(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 91: tail(V1,Out) [Out>=1,V1>=2] 
* Loop 92: tail(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR tail(V1,Out) 

#### Partial ranking functions of CR tail(V1,Out) 


### Resulting Chains:tail(V1,Out) 
* [92]
* [91]
* [90]


### Merging Chains  tail/2 into  External patterns of execution 
* [[92]] --> 1 
* [[91]] --> 2 
* [[90]] --> 3 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [227,228,229,230] 
* CE 3 is refined into CE [231,232,233,234] 
* CE 4 is refined into CE [235,236] 
* CE 5 is refined into CE [237,238] 
* CE 6 is refined into CE [239,240] 
* CE 7 is refined into CE [241,242] 
* CE 8 is refined into CE [243,244] 
* CE 9 is refined into CE [245,246] 
* CE 10 is refined into CE [247,248,249,250] 
* CE 11 is refined into CE [251,252,253,254] 
* CE 12 is refined into CE [255,256,257,258] 
* CE 13 is refined into CE [259,260,261] 
* CE 14 is refined into CE [262,263] 
* CE 15 is refined into CE [264,265,266,267] 
* CE 16 is refined into CE [268,269,270,271] 
* CE 17 is refined into CE [272,273,274,275] 
* CE 18 is refined into CE [276,277,278] 
* CE 19 is refined into CE [279,280,281] 
* CE 20 is refined into CE [282,283] 
* CE 21 is refined into CE [284,285] 
* CE 22 is refined into CE [286,287,288] 
* CE 23 is refined into CE [289,290] 
* CE 24 is refined into CE [291,292,293] 
* CE 25 is refined into CE [294,295,296,297] 
* CE 26 is refined into CE [298] 
* CE 27 is refined into CE [299,300] 


#### Refined cost equations start/4 
* CE 227: start(V1,V,V2,V3) = 0+ fun(W3,X3,V2,Y3):1
     [V2+1>=Y3,Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 228: start(V1,V,V2,V3) = 0+ fun(W3,X3,V2,Y3):2
     [Y3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 229: start(V1,V,V2,V3) = 0+ fun(W3,X3,V2,Y3):3
     [Y3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 230: start(V1,V,V2,V3) = 0+ fun(W3,V,V2,X3):4
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 231: start(V1,V,V2,V3) = 0+ fun1(W3,X3,V2,Y3):1
     [V2+1>=Y3,Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 232: start(V1,V,V2,V3) = 0+ fun1(W3,X3,V2,Y3):2
     [Y3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 233: start(V1,V,V2,V3) = 0+ fun1(W3,X3,V2,Y3):3
     [Y3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 234: start(V1,V,V2,V3) = 0+ fun1(W3,V,V2,X3):4
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 235: start(V1,V,V2,V3) = 0+ fun2(W3,V,V):1
     [V>=0,W3=0,V1=0] 
* CE 236: start(V1,V,V2,V3) = 0+ fun2(W3,V,X3):2
     [X3>=V,V>=1,W3=0,V1=0] 
* CE 237: start(V1,V,V2,V3) = 1+ activate(V,V):1
     [V>=0,V1=0] 
* CE 238: start(V1,V,V2,V3) = 1+ activate(V,W3):2
     [W3>=V,V>=1,V1=0] 
* CE 239: start(V1,V,V2,V3) = 0+ fun4(W3,V,V):1
     [V>=0,W3=0,V1=0] 
* CE 240: start(V1,V,V2,V3) = 0+ fun4(W3,V,X3):2
     [X3>=V,V>=1,W3=0,V1=0] 
* CE 241: start(V1,V,V2,V3) = 0+ fun6(W3,X3,V2,Y3):1
     [Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 242: start(V1,V,V2,V3) = 0+ fun6(W3,V,V2,X3):2
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 243: start(V1,V,V2,V3) = 0+ fun7(W3,X3,V2,Y3):1
     [Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 244: start(V1,V,V2,V3) = 0+ fun7(W3,V,V2,X3):2
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 245: start(V1,V,V2,V3) = 0+ fun8(W3,V,V):1
     [V>=0,W3=0,V1=0] 
* CE 246: start(V1,V,V2,V3) = 0+ fun8(W3,V,X3):2
     [X3>=V,V>=1,W3=0,V1=0] 
* CE 247: start(V1,V,V2,V3) = 0+ fun10(W3,X3,V2,Y3,Z3):1
     [Z3>=V2+3,V2>=0,Z3=V2+Y3+3,Z3=V2+V3+3,X3=0,W3=0,V=0,V1=0] 
* CE 248: start(V1,V,V2,V3) = 0+ fun10(W3,X3,V2,V3,Y3):2
     [Y3>=V2+V3+3,V3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 249: start(V1,V,V2,V3) = 0+ fun10(W3,X3,V2,V3,Y3):3
     [Y3>=V2+V3+3,V3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 250: start(V1,V,V2,V3) = 0+ fun10(W3,V,V2,V3,X3):4
     [V3>=0,V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 251: start(V1,V,V2,V3) = 0+ fun11(W3,X3,V2,Y3,Z3):1
     [Z3>=V2+3,V2>=0,Z3=V2+Y3+3,Z3=V2+V3+3,X3=0,W3=0,V=0,V1=0] 
* CE 252: start(V1,V,V2,V3) = 0+ fun11(W3,X3,V2,V3,Y3):2
     [Y3>=V2+V3+3,V3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 253: start(V1,V,V2,V3) = 0+ fun11(W3,X3,V2,V3,Y3):3
     [Y3>=V2+V3+3,V3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 254: start(V1,V,V2,V3) = 0+ fun11(W3,V,V2,V3,X3):4
     [V3>=0,V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 255: start(V1,V,V2,V3) = 0+ fun12(W3,X3,V2,Y3,Z3):1
     [Z3>=V2+3,V2>=0,Z3=V2+Y3+3,Z3=V2+V3+3,X3=0,W3=0,V=0,V1=0] 
* CE 256: start(V1,V,V2,V3) = 0+ fun12(W3,X3,V2,V3,Y3):2
     [Y3>=V2+V3+3,V3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 257: start(V1,V,V2,V3) = 0+ fun12(W3,X3,V2,V3,Y3):3
     [Y3>=V2+V3+3,V3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 258: start(V1,V,V2,V3) = 0+ fun12(W3,V,V2,V3,X3):4
     [V3>=0,V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 259: start(V1,V,V2,V3) = 0+ fun13(V1,V,W3):1
     [V>=0,V1>=0,W3=0] 
* CE 260: start(V1,V,V2,V3) = 0+ fun13(V1,W3,X3):2
     [X3>=V1+1,V1>=1,X3=V1+W3+1,X3=V1+V+1] 
* CE 261: start(V1,V,V2,V3) = 0+ fun13(V1,V,W3):3
     [W3>=V1+V+1,V>=1,V1>=1] 
* CE 262: start(V1,V,V2,V3) = 0+ fun14(W3,V,V):1
     [V>=0,W3=0,V1=0] 
* CE 263: start(V1,V,V2,V3) = 0+ fun14(W3,V,X3):2
     [X3>=V,V>=1,W3=0,V1=0] 
* CE 264: start(V1,V,V2,V3) = 0+ fun16(W3,X3,V2,Y3):1
     [V2+1>=Y3,Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 265: start(V1,V,V2,V3) = 0+ fun16(W3,X3,V2,Y3):2
     [Y3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 266: start(V1,V,V2,V3) = 0+ fun16(W3,X3,V2,Y3):3
     [Y3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 267: start(V1,V,V2,V3) = 0+ fun16(W3,V,V2,X3):4
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 268: start(V1,V,V2,V3) = 0+ fun17(W3,X3,V2,Y3):1
     [V2+1>=Y3,Y3>=0,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 269: start(V1,V,V2,V3) = 0+ fun17(W3,X3,V2,Y3):2
     [Y3>=1,V2>=0,X3=0,W3=0,V=0,V1=0] 
* CE 270: start(V1,V,V2,V3) = 0+ fun17(W3,X3,V2,Y3):3
     [Y3>=0,V2>=1,X3=0,W3=0,V=0,V1=0] 
* CE 271: start(V1,V,V2,V3) = 0+ fun17(W3,V,V2,X3):4
     [V2>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 272: start(V1,V,V2,V3) = 1+ fun(W3,X3,V,Y3):1
     [V+1>=Y3,Y3>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 273: start(V1,V,V2,V3) = 1+ fun(W3,X3,V,Y3):2
     [Y3>=1,V>=0,X3=0,W3=0,V1=0] 
* CE 274: start(V1,V,V2,V3) = 1+ fun(W3,X3,V,Y3):3
     [Y3>=0,V>=1,X3=0,W3=0,V1=0] 
* CE 275: start(V1,V,V2,V3) = 1+ fun(W3,V1,V,X3):4
     [V>=0,V1>=0,X3=0,W3=0] 
* CE 276: start(V1,V,V2,V3) = 0+ fst(V1,W3):1
     [V1>=0,W3=0] 
* CE 277: start(V1,V,V2,V3) = 0+ fst(V1,W3):2
     [W3>=1,V1>=2] 
* CE 278: start(V1,V,V2,V3) = 0+ fst(V1,W3):3
     [V1>=W3+1,W3>=0] 
* CE 279: start(V1,V,V2,V3) = 0+ head(V1,W3):1
     [V1>=0,W3=0] 
* CE 280: start(V1,V,V2,V3) = 0+ head(V1,W3):2
     [W3>=1,V1>=2] 
* CE 281: start(V1,V,V2,V3) = 0+ head(V1,W3):3
     [V1>=W3+1,W3>=0] 
* CE 282: start(V1,V,V2,V3) = 0+ natsFrom(W3,X3):1
     [X3>=1,X3=W3+1,X3=V1+1] 
* CE 283: start(V1,V,V2,V3) = 0+ natsFrom(W3,X3):2
     [X3>=3,X3=2*W3+3,X3=2*V1+3] 
* CE 284: start(V1,V,V2,V3) = 1+ fun6(W3,X3,V,Y3):1
     [Y3>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 285: start(V1,V,V2,V3) = 1+ fun6(W3,V1,V,X3):2
     [V>=0,V1>=0,X3=0,W3=0] 
* CE 286: start(V1,V,V2,V3) = 0+ snd(V1,W3):1
     [V1>=0,W3=0] 
* CE 287: start(V1,V,V2,V3) = 0+ snd(V1,W3):2
     [W3>=1,V1>=2] 
* CE 288: start(V1,V,V2,V3) = 0+ snd(V1,W3):3
     [V1>=W3+1,W3>=0] 
* CE 289: start(V1,V,V2,V3) = 0+ splitAt(W3,X3,Y3):1
     [Y3>=2,Y3=X3+2,Y3=V+2,W3=0,V1=0] 
* CE 290: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 291: start(V1,V,V2,V3) = 0+ tail(V1,W3):1
     [V1>=0,W3=0] 
* CE 292: start(V1,V,V2,V3) = 0+ tail(V1,W3):2
     [W3>=1,V1>=2] 
* CE 293: start(V1,V,V2,V3) = 0+ tail(V1,W3):3
     [V1>=W3+1,W3>=0] 
* CE 294: start(V1,V,V2,V3) = 1+ fun16(W3,X3,V,Y3):1
     [V+1>=Y3,Y3>=0,V>=0,X3=0,W3=0,V1=0] 
* CE 295: start(V1,V,V2,V3) = 1+ fun16(W3,X3,V,Y3):2
     [Y3>=1,V>=0,X3=0,W3=0,V1=0] 
* CE 296: start(V1,V,V2,V3) = 1+ fun16(W3,X3,V,Y3):3
     [Y3>=0,V>=1,X3=0,W3=0,V1=0] 
* CE 297: start(V1,V,V2,V3) = 1+ fun16(W3,V1,V,X3):4
     [V>=0,V1>=0,X3=0,W3=0] 
* CE 298: start(V1,V,V2,V3) = 1
     [V1>=0] 
* CE 299: start(V1,V,V2,V3) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 300: start(V1,V,V2,V3) = 0+ activate(V1,W3):2
     [W3>=V1,V1>=1] 

### Cost equations --> "Loop" of start/4 
* CEs [227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300] --> Loop 93 

#### Loops of start/4 
* Loop 93: start(V1,V,V2,V3) [V1>=0] 

### Ranking functions of CR start(V1,V,V2,V3) 

#### Partial ranking functions of CR start(V1,V,V2,V3) 


### Resulting Chains:start(V1,V,V2,V3) 
* [93]


### Merging Chains  start/4 into  External patterns of execution 
* [[93]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of natsFrom(V1,Out):
* Chain [32]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [31]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [33,34] 

 * loop 33:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 34:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [33,34]:activate(V1,Out) -> [activate(V1',Out')] 
4*it(33)+0
  Such that:aux(1) =< V1
aux(2) =< V1-V1'
it(33) =< aux(1)
it(33) =< aux(2)

#### Cost of chains of activate(V1,Out):
* Chain [[33,34],35]: 4*it(33)+1
  Such that:aux(3) =< V1
it(33) =< aux(3)

  with precondition: [V1>=1,Out>=V1] 

* Chain [35]: 1
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of fun8(V1,V,Out):
* Chain [37]: 4
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [36]: 12*s(2)+4*s(8)+4
  Such that:aux(4) =< V
s(2) =< aux(4)

  with precondition: [V1=0,V>=1,Out>=V] 


#### Cost of chains of snd(V1,Out):
* Chain [40]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [39]: 12*s(10)+4*s(11)+5
  Such that:s(9) =< V1
s(10) =< s(9)

  with precondition: [V1>=2,Out>=1] 

* Chain [38]: 5
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of splitAt(V1,V,Out):
* Chain [42]: 1
  with precondition: [V1=0,V+2=Out,V>=0] 

* Chain [41]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fun1(V1,V,V2,Out):
* Chain [46]: 4*s(13)+9
  Such that:s(12) =< V2
s(13) =< s(12)

  with precondition: [V1=0,V=0,V2>=0,Out>=0,V2+1>=Out] 

* Chain [45]: 12*s(15)+20*s(16)+4*s(18)+9
  Such that:s(17) =< V2
s(14) =< V2+2
s(18) =< s(17)
s(15) =< s(14)

  with precondition: [V1=0,V=0,V2>=0,Out>=1] 

* Chain [44]: 4*s(23)+9
  Such that:s(22) =< V2
s(23) =< s(22)

  with precondition: [V1=0,V=0,V2>=1,Out>=0] 

* Chain [43]: 8*s(25)+8*s(27)+3
  Such that:aux(5) =< V
aux(6) =< V2
s(27) =< aux(5)
s(25) =< aux(6)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of fun(V1,V,V2,Out):
* Chain [50]: 4*s(33)+12
  Such that:s(32) =< V2
s(33) =< s(32)

  with precondition: [V1=0,V=0,V2>=0,Out>=0,V2+1>=Out] 

* Chain [49]: 8*s(36)+12*s(37)+56*s(38)+12
  Such that:s(35) =< V2+2
aux(7) =< V2
s(36) =< aux(7)
s(37) =< s(35)

  with precondition: [V1=0,V=0,V2>=0,Out>=1] 

* Chain [48]: 12*s(47)+8*s(51)+12
  Such that:aux(8) =< V2
s(47) =< aux(8)

  with precondition: [V1=0,V=0,V2>=1,Out>=0] 

* Chain [47]: 24*s(58)+24*s(59)+32*s(65)+6
  Such that:aux(9) =< V
aux(10) =< V2
s(58) =< aux(9)
s(59) =< aux(10)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of fun2(V1,V,Out):
* Chain [52]: 4
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [51]: 12*s(81)+4*s(87)+4
  Such that:aux(11) =< V
s(81) =< aux(11)

  with precondition: [V1=0,V>=1,Out>=V] 


#### Cost of chains of fst(V1,Out):
* Chain [55]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [54]: 12*s(89)+4*s(90)+5
  Such that:s(88) =< V1
s(89) =< s(88)

  with precondition: [V1>=2,Out>=1] 

* Chain [53]: 5
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of fun13(V1,V,Out):
* Chain [58]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [57]: 2
  with precondition: [V+V1+1=Out,V1>=1,V>=0] 

* Chain [56]: 4*s(92)+2
  Such that:s(91) =< V
s(92) =< s(91)

  with precondition: [V1>=1,V>=1,Out>=V+V1+1] 


#### Cost of chains of fun12(V1,V,V2,V3,Out):
* Chain [62]: 24*s(94)+24*s(98)+16*s(110)+5
  Such that:aux(12) =< V
aux(13) =< V2
aux(14) =< V3
s(110) =< aux(12)
s(94) =< aux(13)
s(98) =< aux(14)

  with precondition: [V1=0,Out=0,V>=0,V2>=0,V3>=0] 

* Chain [61]: 7
  with precondition: [V1=0,V=0,V2+V3+3=Out,V2>=0,V3>=0] 

* Chain [60]: 16*s(126)+12*s(130)+4*s(140)+7
  Such that:aux(15) =< V2
aux(16) =< V3
s(130) =< aux(15)
s(126) =< aux(16)

  with precondition: [V1=0,V=0,V2>=0,V3>=1,Out>=V2+V3+3] 

* Chain [59]: 12*s(142)+4*s(148)+7
  Such that:aux(17) =< V2
s(142) =< aux(17)

  with precondition: [V1=0,V=0,V2>=1,V3>=0,Out>=V2+V3+3] 


#### Cost of chains of fun11(V1,V,V2,V3,Out):
* Chain [66]: 11
  with precondition: [V1=0,V=0,V2+V3+3=Out,V2>=0,V3>=0] 

* Chain [65]: 52*s(151)+56*s(152)+92*s(153)+11
  Such that:aux(18) =< V2
aux(19) =< V3
s(151) =< aux(18)
s(152) =< aux(19)

  with precondition: [V1=0,V=0,V2>=0,V3>=1,Out>=V2+V3+3] 

* Chain [64]: 20*s(196)+20*s(197)+11
  Such that:aux(20) =< V2
s(196) =< aux(20)

  with precondition: [V1=0,V=0,V2>=1,V3>=0,Out>=V2+V3+3] 

* Chain [63]: 80*s(208)+112*s(209)+112*s(210)+256*s(218)+9
  Such that:aux(21) =< V
aux(22) =< V2
aux(23) =< V3
s(208) =< aux(21)
s(209) =< aux(22)
s(210) =< aux(23)

  with precondition: [V1=0,Out=0,V>=0,V2>=0,V3>=0] 


#### Cost of chains of fun10(V1,V,V2,V3,Out):
* Chain [70]: 15
  with precondition: [V1=0,V=0,V2+V3+3=Out,V2>=0,V3>=0] 

* Chain [69]: 140*s(279)+136*s(280)+644*s(281)+15
  Such that:aux(24) =< V2
aux(25) =< V3
s(279) =< aux(24)
s(280) =< aux(25)

  with precondition: [V1=0,V=0,V2>=0,V3>=1,Out>=V2+V3+3] 

* Chain [68]: 28*s(324)+60*s(325)+15
  Such that:aux(26) =< V2
s(324) =< aux(26)

  with precondition: [V1=0,V=0,V2>=1,V3>=0,Out>=V2+V3+3] 

* Chain [67]: 336*s(336)+464*s(337)+464*s(338)+3264*s(339)+13
  Such that:aux(27) =< V
aux(28) =< V2
aux(29) =< V3
s(336) =< aux(27)
s(337) =< aux(28)
s(338) =< aux(29)

  with precondition: [V1=0,Out=0,V>=0,V2>=0,V3>=0] 


#### Cost of chains of fun14(V1,V,Out):
* Chain [72]: 4
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [71]: 12*s(414)+4*s(420)+4
  Such that:aux(30) =< V
s(414) =< aux(30)

  with precondition: [V1=0,V>=1,Out>=V] 


#### Cost of chains of fun17(V1,V,V2,Out):
* Chain [76]: 4*s(422)+9
  Such that:s(421) =< V2
s(422) =< s(421)

  with precondition: [V1=0,V=0,V2>=0,Out>=0,V2+1>=Out] 

* Chain [75]: 12*s(424)+20*s(425)+4*s(427)+9
  Such that:s(426) =< V2
s(423) =< V2+2
s(427) =< s(426)
s(424) =< s(423)

  with precondition: [V1=0,V=0,V2>=0,Out>=1] 

* Chain [74]: 4*s(432)+9
  Such that:s(431) =< V2
s(432) =< s(431)

  with precondition: [V1=0,V=0,V2>=1,Out>=0] 

* Chain [73]: 8*s(434)+8*s(436)+3
  Such that:aux(31) =< V
aux(32) =< V2
s(436) =< aux(31)
s(434) =< aux(32)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of fun16(V1,V,V2,Out):
* Chain [80]: 4*s(442)+12
  Such that:s(441) =< V2
s(442) =< s(441)

  with precondition: [V1=0,V=0,V2>=0,Out>=0,V2+1>=Out] 

* Chain [79]: 8*s(445)+12*s(446)+56*s(447)+12
  Such that:s(444) =< V2+2
aux(33) =< V2
s(445) =< aux(33)
s(446) =< s(444)

  with precondition: [V1=0,V=0,V2>=0,Out>=1] 

* Chain [78]: 12*s(456)+8*s(460)+12
  Such that:aux(34) =< V2
s(456) =< aux(34)

  with precondition: [V1=0,V=0,V2>=1,Out>=0] 

* Chain [77]: 24*s(467)+24*s(468)+32*s(474)+6
  Such that:aux(35) =< V
aux(36) =< V2
s(467) =< aux(35)
s(468) =< aux(36)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of fun4(V1,V,Out):
* Chain [82]: 4
  with precondition: [V1=0,V=Out,V>=0] 

* Chain [81]: 12*s(490)+4*s(496)+4
  Such that:aux(37) =< V
s(490) =< aux(37)

  with precondition: [V1=0,V>=1,Out>=V] 


#### Cost of chains of head(V1,Out):
* Chain [85]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [84]: 12*s(498)+4*s(499)+5
  Such that:s(497) =< V1
s(498) =< s(497)

  with precondition: [V1>=2,Out>=1] 

* Chain [83]: 5
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of fun7(V1,V,V2,Out):
* Chain [87]: 108*s(501)+12*s(505)+576*s(506)+36*s(512)+21
  Such that:s(504) =< V2+1
aux(38) =< V2
aux(39) =< V2+2
s(501) =< aux(38)
s(505) =< s(504)
s(512) =< aux(39)

  with precondition: [V1=0,V=0,V2>=0,Out>=0] 

* Chain [86]: 56*s(598)+56*s(599)+224*s(600)+10
  Such that:aux(40) =< V
aux(41) =< V2
s(598) =< aux(40)
s(599) =< aux(41)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of fun6(V1,V,V2,Out):
* Chain [89]: 112*s(627)+12*s(628)+36*s(629)+1308*s(630)+24
  Such that:s(624) =< V2+1
s(626) =< V2+2
aux(42) =< V2
s(627) =< aux(42)
s(628) =< s(624)
s(629) =< s(626)

  with precondition: [V1=0,V=0,V2>=0,Out>=0] 

* Chain [88]: 120*s(642)+120*s(643)+1120*s(644)+13
  Such that:aux(43) =< V
aux(44) =< V2
s(642) =< aux(43)
s(643) =< aux(44)

  with precondition: [V1=0,Out=0,V>=0,V2>=0] 


#### Cost of chains of tail(V1,Out):
* Chain [92]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [91]: 20*s(669)+20*s(670)+6
  Such that:aux(45) =< V1
s(669) =< aux(45)

  with precondition: [V1>=2,Out>=1] 

* Chain [90]: 6
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of start(V1,V,V2,V3):
* Chain [93]: 1396*s(679)+120*s(683)+10472*s(684)+1056*s(690)+24*s(718)+808*s(744)+60*s(823)+228*s(830)+12*s(843)+25
  Such that:s(839) =< V+1
aux(46) =< V1
aux(47) =< V
aux(48) =< V+2
aux(49) =< V2
aux(50) =< V2+1
aux(51) =< V2+2
aux(52) =< V3
s(830) =< aux(46)
s(690) =< aux(47)
s(679) =< aux(49)
s(744) =< aux(52)
s(823) =< aux(48)
s(843) =< s(839)
s(683) =< aux(51)
s(718) =< aux(50)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V,V2,V3): 
-------------------------------------
* Chain [93] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V2,V3): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 102 ms.
   - Backward Invariants 61 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 1632 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 1300 ms.
   - Equation cost structures 1235 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 4 ms.
* Total analysis performed in 3194 ms.

