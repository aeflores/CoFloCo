
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. recursive [multiple] : [activate/2,add/3,fst/3,len/2]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is partially evaluated into activate/2
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 16 is refined into CE [18] 
* CE 17 is refined into CE [19] 


#### Refined cost equations from/2 
* CE 18: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 19: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [18] --> Loop 11 
* CEs [19] --> Loop 12 

#### Loops of from/2 
* Loop 11: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 12: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [12]
* [11]


### Merging Chains  from/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations activate/2 
* CE 7 is refined into CE [20] 
* CE 15 is refined into CE [21] 
* CE 13 is refined into CE [22] 
* CE 11 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 14 is refined into CE [25,26] 
* CE 12 is refined into CE [27] 
* CE 8 is refined into CE [28] 
* CE 10 is refined into CE [29] 


#### Refined cost equations activate/2 
* CE 20: activate(A,A) = 2
     [A>=1] 
* CE 21: activate(A,A) = 1
     [A>=0] 
* CE 22: activate(V1,Out) = 2
     [Out>=0,Out+1=V1] 
* CE 23: activate(V1,Out) = 2
     [V1>=1,Out=1] 
* CE 24: activate(V1,Out) = 2
     [Out=0,V1=2] 
* CE 25: activate(A,A) = 1+ from(B,A):1
     [A>=1,A=B+1] 
* CE 26: activate(V1,Out) = 1+ from(W1,Out):2
     [Out>=3,Out=2*W1+3,Out=2*V1+1] 
* CE 27: activate(V1,Out) = 2+ activate(W1,X1)
     [V1>=W1+2,W1>=0,V1+X1=Out+W1] 
* CE 28: activate(V1,Out) = 2+ activate(W1,X1)
     [V1>=W1+2,W1>=0,X1+2=Out] 
* CE 29: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [V1+X1+Z1>=Out+W1+1,Out>=X1+Z1+2,W1>=0,V1+X1+Z1=Out+W1+Y1+1] 

### Cost equations --> "Loop" of activate/2 
* CEs [29] --> Loop 13 
* CEs [27] --> Loop 14 
* CEs [28] --> Loop 15 
* CEs [26] --> Loop 16 
* CEs [20,21,25] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of activate/2 
* Loop 13: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1+Out'+Out'2>=Out+V1'+1,Out>=Out'+Out'2+2,V1'>=0,V1+Out'+Out'2=Out+V1'+V1'2+1] 
* Loop 14: activate(V1,Out)->  activate(V1',Out')
                  [V1>=V1'+2,V1'>=0,V1+Out'=Out+V1'] 
* Loop 15: activate(V1,Out)->  activate(V1',Out')
                  [V1>=V1'+2,V1'>=0,Out=Out'+2] 
* Loop 16: activate(V1,Out) [V1>=1,2*V1+1=Out] 
* Loop 17: activate(A,A) [A>=0] 
* Loop 18: activate(V1,Out) [V1>=1,V1=Out+1] 
* Loop 19: activate(V1,Out) [V1>=1,Out=1] 
* Loop 20: activate(V1,Out) [Out=0,V1=2] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [13,14,15]: [V1-1]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [13,14,15]:
  - RF of loop [13:1,13:2]:
    V1-2
  - RF of loop [14:1,15:1]:
    V1-1


### Resulting Chains:activate(V1,Out) 
* [20]
* [19]
* [18]
* [17]
* [16]
* [multiple([13,14,15],[[20],[19],[18],[17],[16]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[17]] --> 3 
* [[18]] --> 4 
* [[16]] --> 5 
* [[multiple([13,14,15],[[20],[19],[18],[17],[16]])]] --> 6 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [30] 
* CE 3 is refined into CE [31,32,33,34,35,36] 
* CE 4 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72] 
* CE 5 is refined into CE [73,74] 
* CE 6 is refined into CE [75,76,77,78,79,80] 


#### Refined cost equations start/2 
* CE 30: start(V1,V) = 1
     [V1>=0] 
* CE 31: start(V1,V) = 1+ activate(W1,X1):1
     [V1>=3,X1=0,W1=2] 
* CE 32: start(V1,V) = 1+ activate(W1,X1):2
     [V1>=W1+1,W1>=1,X1=1] 
* CE 33: start(V1,V) = 1+ activate(W1,W1):3
     [V1>=W1+1,W1>=0] 
* CE 34: start(V1,V) = 1+ activate(W1,X1):4
     [V1>=X1+2,X1>=0,X1+1=W1] 
* CE 35: start(V1,V) = 1+ activate(W1,X1):5
     [2*V1>=X1+1,X1>=3,X1=2*W1+1] 
* CE 36: start(V1,V) = 1+ activate(W1,X1):6
     [3*W1>=X1+4,2*W1>=X1+1,V1>=W1+1,X1>=2] 
* CE 37: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Z1):1
     [V>=3,Z1=0,Y1=2,X1=0,W1=2,V1=3] 
* CE 38: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Z1):2
     [V>=Y1+1,Y1>=1,Z1=1,X1=0,W1=2,V1=3] 
* CE 39: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Y1):3
     [V>=Y1+1,Y1>=0,X1=0,W1=2,V1=3] 
* CE 40: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Z1):4
     [V>=Z1+2,Z1>=0,Z1+1=Y1,X1=0,W1=2,V1=3] 
* CE 41: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Z1):5
     [2*V>=Z1+1,Z1>=3,Z1=2*Y1+1,X1=0,W1=2,V1=3] 
* CE 42: start(V1,V) = 1+ activate(W1,X1):1+ activate(Y1,Z1):6
     [3*Y1>=Z1+4,2*Y1>=Z1+1,V>=Y1+1,Z1>=2,X1=0,W1=2,V1=3] 
* CE 43: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Z1):1
     [W1>=1,V>=3,W1+1=V1,Z1=0,Y1=2,X1=1] 
* CE 44: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Z1):2
     [V>=Y1+1,Y1>=1,W1>=1,W1+1=V1,Z1=1,X1=1] 
* CE 45: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Y1):3
     [V>=Y1+1,Y1>=0,W1>=1,W1+1=V1,X1=1] 
* CE 46: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Z1):4
     [V>=Z1+2,Z1>=0,W1>=1,Z1+1=Y1,W1+1=V1,X1=1] 
* CE 47: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Z1):5
     [2*V>=Z1+1,Z1>=3,W1>=1,W1+1=V1,Z1=2*Y1+1,X1=1] 
* CE 48: start(V1,V) = 1+ activate(W1,X1):2+ activate(Y1,Z1):6
     [3*Y1>=Z1+4,2*Y1>=Z1+1,V>=Y1+1,Z1>=2,W1>=1,W1+1=V1,X1=1] 
* CE 49: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,Y1):1
     [W1>=0,V>=3,W1+1=V1,Y1=0,X1=2] 
* CE 50: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,Y1):2
     [V>=X1+1,X1>=1,W1>=0,W1+1=V1,Y1=1] 
* CE 51: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,X1):3
     [V>=X1+1,X1>=0,W1>=0,W1+1=V1] 
* CE 52: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,Y1):4
     [V>=Y1+2,Y1>=0,W1>=0,Y1+1=X1,W1+1=V1] 
* CE 53: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,Y1):5
     [2*V>=Y1+1,Y1>=3,W1>=0,W1+1=V1,Y1=2*X1+1] 
* CE 54: start(V1,V) = 1+ activate(W1,W1):3+ activate(X1,Y1):6
     [3*X1>=Y1+4,2*X1>=Y1+1,V>=X1+1,Y1>=2,W1>=0,W1+1=V1] 
* CE 55: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Z1):1
     [X1>=0,V>=3,X1+1=W1,X1+2=V1,Z1=0,Y1=2] 
* CE 56: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Z1):2
     [V>=Y1+1,Y1>=1,X1>=0,X1+1=W1,X1+2=V1,Z1=1] 
* CE 57: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Y1):3
     [V>=Y1+1,Y1>=0,X1>=0,X1+1=W1,X1+2=V1] 
* CE 58: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Z1):4
     [V>=Z1+2,Z1>=0,X1>=0,Z1+1=Y1,X1+1=W1,X1+2=V1] 
* CE 59: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Z1):5
     [2*V>=Z1+1,Z1>=3,X1>=0,X1+1=W1,X1+2=V1,Z1=2*Y1+1] 
* CE 60: start(V1,V) = 1+ activate(W1,X1):4+ activate(Y1,Z1):6
     [3*Y1>=Z1+4,2*Y1>=Z1+1,V>=Y1+1,Z1>=2,X1>=0,X1+1=W1,X1+2=V1] 
* CE 61: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Z1):1
     [X1>=3,V>=3,X1=2*W1+1,X1+1=2*V1,Z1=0,Y1=2] 
* CE 62: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Z1):2
     [V>=Y1+1,Y1>=1,X1>=3,X1=2*W1+1,X1+1=2*V1,Z1=1] 
* CE 63: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Y1):3
     [V>=Y1+1,Y1>=0,X1>=3,X1=2*W1+1,X1+1=2*V1] 
* CE 64: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Z1):4
     [V>=Z1+2,Z1>=0,X1>=3,Z1+1=Y1,X1=2*W1+1,X1+1=2*V1] 
* CE 65: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Z1):5
     [2*V>=Z1+1,Z1>=3,X1>=3,Z1=2*Y1+1,X1=2*W1+1,X1+1=2*V1] 
* CE 66: start(V1,V) = 1+ activate(W1,X1):5+ activate(Y1,Z1):6
     [3*Y1>=Z1+4,2*Y1>=Z1+1,V>=Y1+1,Z1>=2,X1>=3,X1=2*W1+1,X1+1=2*V1] 
* CE 67: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Z1):1
     [3*W1>=X1+4,2*W1>=X1+1,X1>=2,V>=3,W1+1=V1,Z1=0,Y1=2] 
* CE 68: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Z1):2
     [V>=Y1+1,3*W1>=X1+4,2*W1>=X1+1,Y1>=1,X1>=2,W1+1=V1,Z1=1] 
* CE 69: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Y1):3
     [V>=Y1+1,3*W1>=X1+4,2*W1>=X1+1,Y1>=0,X1>=2,W1+1=V1] 
* CE 70: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Z1):4
     [V>=Z1+2,3*W1>=X1+4,2*W1>=X1+1,Z1>=0,X1>=2,Z1+1=Y1,W1+1=V1] 
* CE 71: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Z1):5
     [2*V>=Z1+1,3*W1>=X1+4,2*W1>=X1+1,Z1>=3,X1>=2,W1+1=V1,Z1=2*Y1+1] 
* CE 72: start(V1,V) = 1+ activate(W1,X1):6+ activate(Y1,Z1):6
     [3*Y1>=Z1+4,2*Y1>=Z1+1,V>=Y1+1,3*W1>=X1+4,2*W1>=X1+1,Z1>=2,X1>=2,W1+1=V1] 
* CE 73: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 74: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 75: start(V1,V) = 0+ activate(W1,X1):1
     [X1=0,W1=2,V1=2] 
* CE 76: start(V1,V) = 0+ activate(V1,W1):2
     [V1>=1,W1=1] 
* CE 77: start(V1,V) = 0+ activate(V1,V1):3
     [V1>=0] 
* CE 78: start(V1,V) = 0+ activate(W1,X1):4
     [X1>=0,X1+1=W1,X1+1=V1] 
* CE 79: start(V1,V) = 0+ activate(W1,X1):5
     [X1>=3,X1=2*W1+1,X1=2*V1+1] 
* CE 80: start(V1,V) = 0+ activate(V1,W1):6
     [3*V1>=W1+4,2*V1>=W1+1,W1>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [37,38,39,40,41,42] --> Loop 21 
* CEs [30,31,32,33,34,35,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80] --> Loop 22 

#### Loops of start/2 
* Loop 21: start(V1,V) [V>=1,V1=3] 
* Loop 22: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [22]
* [21]


### Merging Chains  start/2 into  External patterns of execution 
* [[21],[22]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [12]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [11]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [13,14,15] 

 * loop 13:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 14:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 15:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [13,14,15]:activate(V1,Out) -> [] 
2*it(13)+4*it(14)+2*it([16])+2*it([17])+4*it([18])+2*it([20])+0
  Such that:it([20]) =< V1/5+3/5
aux(5) =< V1
aux(6) =< V1/3+1
aux(7) =< V1/4+3/4
aux(8) =< 2/5*V1+1/5
it(14) =< aux(5)
it([20]) =< aux(5)
it([17]) =< aux(6)
it([18]) =< aux(6)
it([20]) =< aux(6)
it([16]) =< aux(7)
it([18]) =< aux(7)
it([20]) =< aux(7)
it(13) =< aux(8)
it([20]) =< aux(8)
it(14) =< it([17])+aux(5)
it([20]) =< it([17])+aux(5)

#### Cost of chains of activate(V1,Out):
* Chain [20]: 2
  with precondition: [V1=2,Out=0] 

* Chain [19]: 2
  with precondition: [Out=1,V1>=1] 

* Chain [18]: 2
  with precondition: [V1=Out+1,V1>=1] 

* Chain [17]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [16]: 2
  with precondition: [2*V1+1=Out,V1>=1] 

* Chain [multiple([13,14,15],[[20],[19],[18],[17],[16]])]: 2*it(13)+4*it(14)+2*it([16])+2*it([17])+4*it([18])+2*it([20])+0
  Such that:it([20]) =< V1/5+3/5
aux(5) =< V1
aux(6) =< V1/3+1
aux(7) =< V1/4+3/4
aux(8) =< 2/5*V1+1/5
it(14) =< aux(5)
it([20]) =< aux(5)
it([17]) =< aux(6)
it([18]) =< aux(6)
it([20]) =< aux(6)
it([16]) =< aux(7)
it([18]) =< aux(7)
it([20]) =< aux(7)
it(13) =< aux(8)
it([20]) =< aux(8)
it(14) =< it([17])+aux(5)
it([20]) =< it([17])+aux(5)

  with precondition: [Out>=2,2*V1>=Out+1,3*V1>=Out+4] 


#### Cost of chains of start(V1,V):
* Chain [22]: 14*s(1)+28*s(6)+14*s(7)+28*s(8)+14*s(9)+14*s(10)+10*s(11)+20*s(16)+10*s(17)+20*s(18)+10*s(19)+10*s(20)+2*s(121)+4*s(126)+2*s(127)+4*s(128)+2*s(129)+2*s(130)+5
  Such that:s(123) =< V1/3+1
s(124) =< V1/4+3/4
s(121) =< V1/5+3/5
s(125) =< 2/5*V1+1/5
aux(9) =< V1
aux(10) =< V1/3+2/3
aux(11) =< V1/4+1/2
aux(12) =< V1/5+2/5
aux(13) =< 2/5*V1
aux(14) =< V
aux(15) =< V/3+2/3
aux(16) =< V/4+1/2
aux(17) =< V/5+2/5
aux(18) =< 2/5*V
s(1) =< aux(12)
s(11) =< aux(17)
s(6) =< aux(9)
s(1) =< aux(9)
s(7) =< aux(10)
s(8) =< aux(10)
s(1) =< aux(10)
s(9) =< aux(11)
s(8) =< aux(11)
s(1) =< aux(11)
s(10) =< aux(13)
s(1) =< aux(13)
s(6) =< s(7)+aux(9)
s(1) =< s(7)+aux(9)
s(16) =< aux(14)
s(11) =< aux(14)
s(17) =< aux(15)
s(18) =< aux(15)
s(11) =< aux(15)
s(19) =< aux(16)
s(18) =< aux(16)
s(11) =< aux(16)
s(20) =< aux(18)
s(11) =< aux(18)
s(16) =< s(17)+aux(14)
s(11) =< s(17)+aux(14)
s(126) =< aux(9)
s(121) =< aux(9)
s(127) =< s(123)
s(128) =< s(123)
s(121) =< s(123)
s(129) =< s(124)
s(128) =< s(124)
s(121) =< s(124)
s(130) =< s(125)
s(121) =< s(125)
s(126) =< s(127)+aux(9)
s(121) =< s(127)+aux(9)

  with precondition: [V1>=0] 

* Chain [21]: 2*s(131)+4*s(136)+2*s(137)+4*s(138)+2*s(139)+2*s(140)+5
  Such that:s(132) =< V
s(133) =< V/3+2/3
s(134) =< V/4+1/2
s(131) =< V/5+2/5
s(135) =< 2/5*V
s(136) =< s(132)
s(131) =< s(132)
s(137) =< s(133)
s(138) =< s(133)
s(131) =< s(133)
s(139) =< s(134)
s(138) =< s(134)
s(131) =< s(134)
s(140) =< s(135)
s(131) =< s(135)
s(136) =< s(137)+s(132)
s(131) =< s(137)+s(132)

  with precondition: [V1=3,V>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [22] with precondition: [V1>=0] 
    - Upper bound: V1/2+3/2+ (32*V1+5+nat(V)*20+28/5*V1+nat(2/5*V)*10+ (4/5*V1+2/5)+ (2*V1+6)+ (14*V1+28)+ (7/2*V1+7))+ (14/5*V1+28/5)+ (2/5*V1+6/5)+nat(V/3+2/3)*30+nat(V/4+1/2)*10+nat(V/5+2/5)*10 
    - Complexity: n 
* Chain [21] with precondition: [V1=3,V>=1] 
    - Upper bound: 77/10*V+54/5 
    - Complexity: n 

### Maximum cost of start(V1,V): V1/2+3/2+ (nat(V)*16+32*V1+28/5*V1+nat(2/5*V)*8+ (4/5*V1+2/5)+ (2*V1+6)+ (14*V1+28)+ (7/2*V1+7))+ (14/5*V1+28/5)+ (2/5*V1+6/5)+nat(V/3+2/3)*24+nat(V/4+1/2)*8+nat(V/5+2/5)*8+ (nat(V)*4+5+nat(2/5*V)*2+nat(V/3+2/3)*6+nat(V/4+1/2)*2+nat(V/5+2/5)*2) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 271 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 552 ms.
   - Equation cost structures 380 ms.
   - Phase cost structures 131 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 17 ms.
* Total analysis performed in 997 ms.

