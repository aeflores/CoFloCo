
Preprocessing Cost Relations
=====================================
18. SCC does not have a single cut point : [isList/2,isNeList/2]  
 Merged into isListisNeList/2

#### Computed strongly connected components 
0. non_recursive  : [a/1]
1. non_recursive  : [e/1]
2. non_recursive  : [fun16/3]
3. non_recursive  : [i/1]
4. non_recursive  : [nil/1]
5. non_recursive  : [o/1]
6. non_recursive  : [u/1]
7. non_recursive  : [activate/2]
8. non_recursive  : [fun1/2]
9. non_recursive  : [fun20/2]
10. non_recursive  : [fun36/2]
11. recursive [non_tail,multiple] : [fun35/3,isPalListKind/2]
12. non_recursive  : [fun29/2]
13. non_recursive  : [fun17/2]
14. non_recursive  : [fun15/2]
15. non_recursive  : [isQid/2]
16. non_recursive  : [fun3/3]
17. non_recursive  : [fun2/3]
19. non_recursive  : [fun11/2]
20. non_recursive  : [fun28/2]
21. non_recursive  : [fun27/3]
22. non_recursive  : [fun33/3]
23. non_recursive  : [isNePal/2]
24. non_recursive  : [fun10/3]
25. non_recursive  : [fun32/3]
26. non_recursive  : [fun7/2]
27. non_recursive  : [fun6/3]
28. non_recursive  : [isPal/2]
29. non_recursive  : [fun5/3]
30. non_recursive  : [fun4/4]
31. non_recursive  : [start/3]
18. recursive [non_tail,multiple] : [fun/3,fun12/4,fun13/4,fun14/4,fun18/4,fun19/4,fun21/4,fun22/4,fun23/3,fun24/4,fun25/3,fun26/4,fun30/3,fun31/4,fun34/3,fun8/4,fun9/4,isListisNeList/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into activate/2
8. SCC is partially evaluated into fun1/2
9. SCC is partially evaluated into fun20/2
10. SCC is partially evaluated into fun36/2
11. SCC is partially evaluated into isPalListKind/2
12. SCC is partially evaluated into fun29/2
13. SCC is partially evaluated into fun17/2
14. SCC is partially evaluated into fun15/2
15. SCC is partially evaluated into isQid/2
16. SCC is partially evaluated into fun3/3
17. SCC is partially evaluated into fun2/3
19. SCC is partially evaluated into fun11/2
20. SCC is partially evaluated into fun28/2
21. SCC is partially evaluated into fun27/3
22. SCC is partially evaluated into fun33/3
23. SCC is partially evaluated into isNePal/2
24. SCC is partially evaluated into fun10/3
25. SCC is partially evaluated into fun32/3
26. SCC is partially evaluated into fun7/2
27. SCC is partially evaluated into fun6/3
28. SCC is partially evaluated into isPal/2
29. SCC is partially evaluated into fun5/3
30. SCC is partially evaluated into fun4/4
31. SCC is partially evaluated into start/3
18. SCC is partially evaluated into isListisNeList/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations activate/2 
* CE 60 is refined into CE [128] 
* CE 57 is refined into CE [129] 
* CE 59 is refined into CE [130] 
* CE 56 is refined into CE [131] 
* CE 58 is refined into CE [132] 
* CE 61 is refined into CE [133] 


#### Refined cost equations activate/2 
* CE 128: activate(V3,Out) = 2
     [Out=4,V3=4] 
* CE 129: activate(V3,Out) = 2
     [Out=3,V3=3] 
* CE 130: activate(V3,Out) = 2
     [Out=1,V3=1] 
* CE 131: activate(A,A) = 2
     [A>=1] 
* CE 132: activate(A,A) = 1
     [A>=0] 
* CE 133: activate(V3,Out) = 2
     [Out=0,V3=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [128] --> Loop 62 
* CEs [129] --> Loop 63 
* CEs [130] --> Loop 64 
* CEs [131,132,133] --> Loop 65 

#### Loops of activate/2 
* Loop 62: activate(V3,Out) [Out=4,V3=4] 
* Loop 63: activate(V3,Out) [Out=3,V3=3] 
* Loop 64: activate(V3,Out) [Out=1,V3=1] 
* Loop 65: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V3,Out) 

#### Partial ranking functions of CR activate(V3,Out) 


### Resulting Chains:activate(V3,Out) 
* [65]
* [64]
* [63]
* [62]


### Merging Chains  activate/2 into  External patterns of execution 
* [[64],[65]] --> 1 
* [[63]] --> 2 
* [[62]] --> 3 


### Specialization of cost equations fun1/2 
* CE 90 is refined into CE [134] 
* CE 89 is refined into CE [135] 


#### Refined cost equations fun1/2 
* CE 134: fun1(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 135: fun1(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun1/2 
* CEs [134] --> Loop 66 
* CEs [135] --> Loop 67 

#### Loops of fun1/2 
* Loop 66: fun1(V3,Out) [V3>=0,Out=0] 
* Loop 67: fun1(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun1(V3,Out) 

#### Partial ranking functions of CR fun1(V3,Out) 


### Resulting Chains:fun1(V3,Out) 
* [67]
* [66]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


### Specialization of cost equations fun20/2 
* CE 84 is refined into CE [136] 
* CE 83 is refined into CE [137] 


#### Refined cost equations fun20/2 
* CE 136: fun20(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 137: fun20(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun20/2 
* CEs [136] --> Loop 68 
* CEs [137] --> Loop 69 

#### Loops of fun20/2 
* Loop 68: fun20(V3,Out) [V3>=0,Out=0] 
* Loop 69: fun20(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun20(V3,Out) 

#### Partial ranking functions of CR fun20(V3,Out) 


### Resulting Chains:fun20(V3,Out) 
* [69]
* [68]


### Merging Chains  fun20/2 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 


### Specialization of cost equations fun36/2 
* CE 92 is refined into CE [138] 
* CE 91 is refined into CE [139] 


#### Refined cost equations fun36/2 
* CE 138: fun36(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 139: fun36(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun36/2 
* CEs [138] --> Loop 70 
* CEs [139] --> Loop 71 

#### Loops of fun36/2 
* Loop 70: fun36(V3,Out) [V3>=0,Out=0] 
* Loop 71: fun36(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun36(V3,Out) 

#### Partial ranking functions of CR fun36(V3,Out) 


### Resulting Chains:fun36(V3,Out) 
* [71]
* [70]


### Merging Chains  fun36/2 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 


### Specialization of cost equations isPalListKind/2 
* CE 67 is refined into CE [140] 
* CE 68 is refined into CE [141] 
* CE 64 is refined into CE [142] 
* CE 69 is refined into CE [143] 
* CE 66 is refined into CE [144] 
* CE 65 is refined into CE [145] 
* CE 63 is refined into CE [146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187] 
* CE 62 is refined into CE [188,189,190,191,192,193,194,195,196] 


#### Refined cost equations isPalListKind/2 
* CE 140: isPalListKind(V3,Out) = 1
     [Out=1,V3=5] 
* CE 141: isPalListKind(V3,Out) = 1
     [Out=1,V3=4] 
* CE 142: isPalListKind(V3,Out) = 1
     [Out=1,V3=3] 
* CE 143: isPalListKind(V3,Out) = 1
     [Out=1,V3=2] 
* CE 144: isPalListKind(V3,Out) = 1
     [Out=1,V3=1] 
* CE 145: isPalListKind(V3,Out) = 1
     [Out=1,V3=0] 
* CE 146: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Y3):1+ activate(Y3,Y3):1+ isPalListKind(Y3,Z3)+ fun36(A4,B4):1
     [Y3>=0,W3>=0,W3+Y3+1=V3,Z3=1,X3=1,B4=1,A4=1,Out=1] 
* CE 147: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Y3):1+ activate(Y3,Y3):1+ isPalListKind(Y3,Z3)+ fun36(Z3,A4):2
     [Z3>=0,Y3>=0,W3>=0,W3+Y3+1=V3,X3=1,A4=0,Out=0] 
* CE 148: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):1+ activate(A4,B4):2+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+4=V3,D4=1,C4=3,X3=1,F4=1,E4=1,B4=3,A4=3,Z3=3,Y3=3,Out=1] 
* CE 149: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):1+ activate(A4,B4):2+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+4=V3,C4=3,X3=1,E4=0,B4=3,A4=3,Z3=3,Y3=3,Out=0] 
* CE 150: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):1+ activate(A4,B4):3+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+5=V3,D4=1,C4=4,X3=1,F4=1,E4=1,B4=4,A4=4,Z3=4,Y3=4,Out=1] 
* CE 151: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):1+ activate(A4,B4):3+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+5=V3,C4=4,X3=1,E4=0,B4=4,A4=4,Z3=4,Y3=4,Out=0] 
* CE 152: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):2+ activate(A4,B4):1+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+4=V3,D4=1,C4=3,X3=1,F4=1,E4=1,B4=3,A4=3,Z3=3,Y3=3,Out=1] 
* CE 153: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):2+ activate(A4,B4):1+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+4=V3,C4=3,X3=1,E4=0,B4=3,A4=3,Z3=3,Y3=3,Out=0] 
* CE 154: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):2+ activate(A4,B4):2+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+4=V3,D4=1,C4=3,X3=1,F4=1,E4=1,B4=3,A4=3,Z3=3,Y3=3,Out=1] 
* CE 155: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):2+ activate(A4,B4):2+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+4=V3,C4=3,X3=1,E4=0,B4=3,A4=3,Z3=3,Y3=3,Out=0] 
* CE 156: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):3+ activate(A4,B4):1+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+5=V3,D4=1,C4=4,X3=1,F4=1,E4=1,B4=4,A4=4,Z3=4,Y3=4,Out=1] 
* CE 157: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):3+ activate(A4,B4):1+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+5=V3,C4=4,X3=1,E4=0,B4=4,A4=4,Z3=4,Y3=4,Out=0] 
* CE 158: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):3+ activate(A4,B4):3+ isPalListKind(C4,D4)+ fun36(E4,F4):1
     [W3>=0,W3+5=V3,D4=1,C4=4,X3=1,F4=1,E4=1,B4=4,A4=4,Z3=4,Y3=4,Out=1] 
* CE 159: isPalListKind(V3,Out) = 2+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):3+ activate(A4,B4):3+ isPalListKind(C4,D4)+ fun36(D4,E4):2
     [D4>=0,W3>=0,W3+5=V3,C4=4,X3=1,E4=0,B4=4,A4=4,Z3=4,Y3=4,Out=0] 
* CE 160: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,A4):1+ activate(A4,A4):1+ isPalListKind(A4,B4)+ fun36(C4,D4):1
     [A4>=0,A4+4=V3,B4=1,Z3=1,Y3=3,D4=1,C4=1,X3=3,W3=3,Out=1] 
* CE 161: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,A4):1+ activate(A4,A4):1+ isPalListKind(A4,B4)+ fun36(B4,C4):2
     [B4>=0,A4>=0,A4+4=V3,Z3=1,Y3=3,C4=0,X3=3,W3=3,Out=0] 
* CE 162: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=3,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=1,V3=7] 
* CE 163: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=3,G4=0,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=0,V3=7] 
* CE 164: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=3,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=1,V3=8] 
* CE 165: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=3,G4=0,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=0,V3=8] 
* CE 166: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=3,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=1,V3=7] 
* CE 167: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=3,G4=0,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=0,V3=7] 
* CE 168: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=3,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=1,V3=7] 
* CE 169: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=3,G4=0,D4=3,C4=3,B4=3,A4=3,X3=3,W3=3,Out=0,V3=7] 
* CE 170: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=3,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=1,V3=8] 
* CE 171: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=3,G4=0,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=0,V3=8] 
* CE 172: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=3,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=1,V3=8] 
* CE 173: isPalListKind(V3,Out) = 2+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=3,G4=0,D4=4,C4=4,B4=4,A4=4,X3=3,W3=3,Out=0,V3=8] 
* CE 174: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,A4):1+ activate(A4,A4):1+ isPalListKind(A4,B4)+ fun36(C4,D4):1
     [A4>=0,A4+5=V3,B4=1,Z3=1,Y3=4,D4=1,C4=1,X3=4,W3=4,Out=1] 
* CE 175: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,A4):1+ activate(A4,A4):1+ isPalListKind(A4,B4)+ fun36(B4,C4):2
     [B4>=0,A4>=0,A4+5=V3,Z3=1,Y3=4,C4=0,X3=4,W3=4,Out=0] 
* CE 176: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=4,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=1,V3=8] 
* CE 177: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=4,G4=0,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=0,V3=8] 
* CE 178: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=4,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=1,V3=9] 
* CE 179: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):1+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=4,G4=0,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=0,V3=9] 
* CE 180: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=4,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=1,V3=8] 
* CE 181: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=4,G4=0,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=0,V3=8] 
* CE 182: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=3,Z3=1,Y3=4,H4=1,G4=1,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=1,V3=8] 
* CE 183: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):2+ activate(C4,D4):2+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=3,Z3=1,Y3=4,G4=0,D4=3,C4=3,B4=3,A4=3,X3=4,W3=4,Out=0,V3=8] 
* CE 184: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=4,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=1,V3=9] 
* CE 185: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):1+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=4,G4=0,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=0,V3=9] 
* CE 186: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(G4,H4):1
     [F4=1,E4=4,Z3=1,Y3=4,H4=1,G4=1,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=1,V3=9] 
* CE 187: isPalListKind(V3,Out) = 2+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):3+ activate(C4,D4):3+ isPalListKind(E4,F4)+ fun36(F4,G4):2
     [F4>=0,E4=4,Z3=1,Y3=4,G4=0,D4=4,C4=4,B4=4,A4=4,X3=4,W3=4,Out=0,V3=9] 
* CE 188: isPalListKind(V3,Out) = 1+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Y3):1
     [X3>=0,Y3>=0,W3>=0,W3+Y3+1=V3,Out=0] 
* CE 189: isPalListKind(V3,Out) = 1+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):2
     [X3>=0,W3>=0,W3+4=V3,Z3=3,Y3=3,Out=0] 
* CE 190: isPalListKind(V3,Out) = 1+ activate(W3,W3):1+ isPalListKind(W3,X3)+ activate(Y3,Z3):3
     [X3>=0,W3>=0,W3+5=V3,Z3=4,Y3=4,Out=0] 
* CE 191: isPalListKind(V3,Out) = 1+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,A4):1
     [Z3>=0,A4>=0,A4+4=V3,Y3=3,X3=3,W3=3,Out=0] 
* CE 192: isPalListKind(V3,Out) = 1+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):2
     [Z3>=0,Y3=3,B4=3,A4=3,X3=3,W3=3,Out=0,V3=7] 
* CE 193: isPalListKind(V3,Out) = 1+ activate(W3,X3):2+ isPalListKind(Y3,Z3)+ activate(A4,B4):3
     [Z3>=0,Y3=3,B4=4,A4=4,X3=3,W3=3,Out=0,V3=8] 
* CE 194: isPalListKind(V3,Out) = 1+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,A4):1
     [Z3>=0,A4>=0,A4+5=V3,Y3=4,X3=4,W3=4,Out=0] 
* CE 195: isPalListKind(V3,Out) = 1+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):2
     [Z3>=0,Y3=4,B4=3,A4=3,X3=4,W3=4,Out=0,V3=8] 
* CE 196: isPalListKind(V3,Out) = 1+ activate(W3,X3):3+ isPalListKind(Y3,Z3)+ activate(A4,B4):3
     [Z3>=0,Y3=4,B4=4,A4=4,X3=4,W3=4,Out=0,V3=9] 

### Cost equations --> "Loop" of isPalListKind/2 
* CEs [189] --> Loop 72 
* CEs [196] --> Loop 73 
* CEs [194,195] --> Loop 74 
* CEs [190,193] --> Loop 75 
* CEs [188,191,192] --> Loop 76 
* CEs [148,152,154] --> Loop 77 
* CEs [149,153,155] --> Loop 78 
* CEs [178,184,186] --> Loop 79 
* CEs [179,185,187] --> Loop 80 
* CEs [174,176,180,182] --> Loop 81 
* CEs [150,156,158,164,170,172] --> Loop 82 
* CEs [175,177,181,183] --> Loop 83 
* CEs [151,157,159,165,171,173] --> Loop 84 
* CEs [146,160,162,166,168] --> Loop 85 
* CEs [147,161,163,167,169] --> Loop 86 
* CEs [140] --> Loop 87 
* CEs [141] --> Loop 88 
* CEs [142] --> Loop 89 
* CEs [143] --> Loop 90 
* CEs [144] --> Loop 91 
* CEs [145] --> Loop 92 

#### Loops of isPalListKind/2 
* Loop 72: isPalListKind(V3,Out)->  isPalListKind(V3',Out')
                  [Out'>=0,V3>=4,V3=V3'+4,Out=0] 
* Loop 73: isPalListKind(V3,Out)->  isPalListKind(V3',Out')
                  [Out'>=0,V3'=4,Out=0,V3=9] 
* Loop 74: isPalListKind(V3,Out)->  isPalListKind(V3',Out')
                  [Out'>=0,V3>=5,V3'=4,Out=0] 
* Loop 75: isPalListKind(V3,Out)->  isPalListKind(V3',Out')
                  [Out'>=0,V3>=5,V3=V3'+5,Out=0] 
* Loop 76: isPalListKind(V3,Out)->  isPalListKind(V3',Out')
                  [V3>=V3'+1,Out'>=0,V3'>=0,Out=0] 
* Loop 77: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [V3>=4,V3=V3'+4,Out'2=1,V3'2=3,Out'=1,Out=1] 
* Loop 78: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [Out'2>=0,V3>=4,V3=V3'+4,V3'2=3,Out'=1,Out=0] 
* Loop 79: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [Out'2=1,V3'2=4,Out'=1,V3'=4,Out=1,V3=9] 
* Loop 80: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [Out'2>=0,V3'2=4,Out'=1,V3'=4,Out=0,V3=9] 
* Loop 81: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [V3>=5,V3=V3'2+5,Out'2=1,Out'=1,V3'=4,Out=1] 
* Loop 82: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [V3>=5,V3=V3'+5,Out'2=1,V3'2=4,Out'=1,Out=1] 
* Loop 83: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [Out'2>=0,V3>=5,V3=V3'2+5,Out'=1,V3'=4,Out=0] 
* Loop 84: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [Out'2>=0,V3>=5,V3=V3'+5,V3'2=4,Out'=1,Out=0] 
* Loop 85: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [V3>=V3'+1,V3'>=0,V3'+V3'2+1=V3,Out'2=1,Out'=1,Out=1] 
* Loop 86: isPalListKind(V3,Out)->  isPalListKind(V3',Out')  isPalListKind(V3'2,Out'2)
                  [V3>=V3'+1,Out'2>=0,V3'>=0,V3'+V3'2+1=V3,Out'=1,Out=0] 
* Loop 87: isPalListKind(V3,Out) [Out=1,V3=5] 
* Loop 88: isPalListKind(V3,Out) [Out=1,V3=4] 
* Loop 89: isPalListKind(V3,Out) [Out=1,V3=3] 
* Loop 90: isPalListKind(V3,Out) [Out=1,V3=2] 
* Loop 91: isPalListKind(V3,Out) [Out=1,V3=1] 
* Loop 92: isPalListKind(V3,Out) [Out=1,V3=0] 

### Ranking functions of CR isPalListKind(V3,Out) 
* RF of phase [72,73,74,75,76,78,80,83,84,86]: [V3]
* RF of phase [77,79,81,82,85]: [V3]

#### Partial ranking functions of CR isPalListKind(V3,Out) 
* Partial RF of phase [72,73,74,75,76,78,80,83,84,86]:
  - RF of loop [72:1,78:1,78:2]:
    V3-3
  - RF of loop [73:1,80:1,80:2]:
    V3/5-8/5
  - RF of loop [74:1,75:1,83:1,83:2,84:1,84:2]:
    V3-4
  - RF of loop [76:1,86:1,86:2]:
    V3
* Partial RF of phase [77,79,81,82,85]:
  - RF of loop [77:1,77:2]:
    V3-3
  - RF of loop [79:1,79:2]:
    V3/5-8/5
  - RF of loop [81:1,81:2,82:1,82:2]:
    V3-4
  - RF of loop [85:1,85:2]:
    V3


### Resulting Chains:isPalListKind(V3,Out) 
* [92]
* [91]
* [90]
* [89]
* [88]
* [87]
* [multiple([77,79,81,82,85],[[92],[91],[90],[89],[88],[87]])]
* [multiple([72,73,74,75,76,78,80,83,84,86],[[multiple([77,79,81,82,85],[[92],[91],[90],[89],[88],[87]])],[92],[91],[90],[89],[88],[87]])]


### Merging Chains  isPalListKind/2 into  External patterns of execution 
* [[92]] --> 1 
* [[91],[multiple([77,79,81,82,85],[[92],[91],[90],[89],[88],[87]])]] --> 2 
* [[90]] --> 3 
* [[89]] --> 4 
* [[88]] --> 5 
* [[87]] --> 6 
* [[multiple([72,73,74,75,76,78,80,83,84,86],[[multiple([77,79,81,82,85],[[92],[91],[90],[89],[88],[87]])],[92],[91],[90],[89],[88],[87]])]] --> 7 


### Specialization of cost equations fun29/2 
* CE 86 is refined into CE [197] 
* CE 85 is refined into CE [198] 


#### Refined cost equations fun29/2 
* CE 197: fun29(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 198: fun29(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun29/2 
* CEs [197] --> Loop 93 
* CEs [198] --> Loop 94 

#### Loops of fun29/2 
* Loop 93: fun29(V3,Out) [V3>=0,Out=0] 
* Loop 94: fun29(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun29(V3,Out) 

#### Partial ranking functions of CR fun29(V3,Out) 


### Resulting Chains:fun29(V3,Out) 
* [94]
* [93]


### Merging Chains  fun29/2 into  External patterns of execution 
* [[94]] --> 1 
* [[93]] --> 2 


### Specialization of cost equations fun17/2 
* CE 88 is refined into CE [199] 
* CE 87 is refined into CE [200] 


#### Refined cost equations fun17/2 
* CE 199: fun17(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 200: fun17(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun17/2 
* CEs [199] --> Loop 95 
* CEs [200] --> Loop 96 

#### Loops of fun17/2 
* Loop 95: fun17(V3,Out) [V3>=0,Out=0] 
* Loop 96: fun17(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun17(V3,Out) 

#### Partial ranking functions of CR fun17(V3,Out) 


### Resulting Chains:fun17(V3,Out) 
* [96]
* [95]


### Merging Chains  fun17/2 into  External patterns of execution 
* [[96]] --> 1 
* [[95]] --> 2 


### Specialization of cost equations fun15/2 
* CE 110 is refined into CE [201] 
* CE 109 is refined into CE [202] 


#### Refined cost equations fun15/2 
* CE 201: fun15(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 202: fun15(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun15/2 
* CEs [201] --> Loop 97 
* CEs [202] --> Loop 98 

#### Loops of fun15/2 
* Loop 97: fun15(V3,Out) [V3>=0,Out=0] 
* Loop 98: fun15(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun15(V3,Out) 

#### Partial ranking functions of CR fun15(V3,Out) 


### Resulting Chains:fun15(V3,Out) 
* [98]
* [97]


### Merging Chains  fun15/2 into  External patterns of execution 
* [[98]] --> 1 
* [[97]] --> 2 


### Specialization of cost equations isQid/2 
* CE 106 is refined into CE [203] 
* CE 103 is refined into CE [204] 
* CE 104 is refined into CE [205] 
* CE 105 is refined into CE [206] 
* CE 101 is refined into CE [207] 
* CE 102 is refined into CE [208] 


#### Refined cost equations isQid/2 
* CE 203: isQid(V3,Out) = 0
     [V3>=0,Out=0] 
* CE 204: isQid(V3,Out) = 1
     [Out=1,V3=5] 
* CE 205: isQid(V3,Out) = 1
     [Out=1,V3=4] 
* CE 206: isQid(V3,Out) = 1
     [Out=1,V3=2] 
* CE 207: isQid(V3,Out) = 1
     [Out=1,V3=1] 
* CE 208: isQid(V3,Out) = 1
     [Out=1,V3=0] 

### Cost equations --> "Loop" of isQid/2 
* CEs [203] --> Loop 99 
* CEs [204] --> Loop 100 
* CEs [205] --> Loop 101 
* CEs [206] --> Loop 102 
* CEs [207] --> Loop 103 
* CEs [208] --> Loop 104 

#### Loops of isQid/2 
* Loop 99: isQid(V3,Out) [V3>=0,Out=0] 
* Loop 100: isQid(V3,Out) [Out=1,V3=5] 
* Loop 101: isQid(V3,Out) [Out=1,V3=4] 
* Loop 102: isQid(V3,Out) [Out=1,V3=2] 
* Loop 103: isQid(V3,Out) [Out=1,V3=1] 
* Loop 104: isQid(V3,Out) [Out=1,V3=0] 

### Ranking functions of CR isQid(V3,Out) 

#### Partial ranking functions of CR isQid(V3,Out) 


### Resulting Chains:isQid(V3,Out) 
* [104]
* [103]
* [102]
* [101]
* [100]
* [99]


### Merging Chains  isQid/2 into  External patterns of execution 
* [[104]] --> 1 
* [[103]] --> 2 
* [[102]] --> 3 
* [[101]] --> 4 
* [[100]] --> 5 
* [[99]] --> 6 


### Specialization of cost equations fun3/3 
* CE 116 is refined into CE [209] 
* CE 115 is refined into CE [210,211,212,213,214,215,216,217,218,219,220,221,222,223,224] 


#### Refined cost equations fun3/3 
* CE 209: fun3(V3,V5,Out) = 0
     [V5>=0,V3>=0,Out=0] 
* CE 210: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):1+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=0,X5=0,W5=0,Out=1,V5=0,V3=1] 
* CE 211: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):1+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V3=1] 
* CE 212: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):2+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=1,X5=1,W5=1,Out=1,V5=1,V3=1] 
* CE 213: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):2+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=1,X5=1,W5=1,Out=0,V5=1,V3=1] 
* CE 214: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):3+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=2,X5=2,W5=2,Out=1,V5=2,V3=1] 
* CE 215: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):3+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 216: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):4+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 217: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):4+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 218: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):5+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=5,X5=5,W5=5,Out=1,V5=5,V3=1] 
* CE 219: fun3(V3,V5,Out) = 1+ activate(W5,X5):1+ isQid(Y5,Z5):5+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=5,X5=5,W5=5,Out=0,V5=5,V3=1] 
* CE 220: fun3(V3,V5,Out) = 1+ activate(V5,V5):1+ isQid(V5,W5):6+ fun15(X5,Y5):2
     [V5>=0,Y5=0,X5=0,W5=0,Out=0,V3=1] 
* CE 221: fun3(V3,V5,Out) = 1+ activate(W5,X5):2+ isQid(Y5,Z5):6+ fun15(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 222: fun3(V3,V5,Out) = 1+ activate(W5,X5):3+ isQid(Y5,Z5):4+ fun15(A6,B6):1
     [B6=1,A6=1,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 223: fun3(V3,V5,Out) = 1+ activate(W5,X5):3+ isQid(Y5,Z5):4+ fun15(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 224: fun3(V3,V5,Out) = 1+ activate(W5,X5):3+ isQid(Y5,Z5):6+ fun15(A6,B6):2
     [B6=0,A6=0,Z5=0,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 

### Cost equations --> "Loop" of fun3/3 
* CEs [218] --> Loop 105 
* CEs [219] --> Loop 106 
* CEs [216,222] --> Loop 107 
* CEs [217,223,224] --> Loop 108 
* CEs [221] --> Loop 109 
* CEs [214] --> Loop 110 
* CEs [215] --> Loop 111 
* CEs [212] --> Loop 112 
* CEs [213] --> Loop 113 
* CEs [210] --> Loop 114 
* CEs [209,211,220] --> Loop 115 

#### Loops of fun3/3 
* Loop 105: fun3(V3,V5,Out) [Out=1,V5=5,V3=1] 
* Loop 106: fun3(V3,V5,Out) [Out=0,V5=5,V3=1] 
* Loop 107: fun3(V3,V5,Out) [Out=1,V5=4,V3=1] 
* Loop 108: fun3(V3,V5,Out) [Out=0,V5=4,V3=1] 
* Loop 109: fun3(V3,V5,Out) [Out=0,V5=3,V3=1] 
* Loop 110: fun3(V3,V5,Out) [Out=1,V5=2,V3=1] 
* Loop 111: fun3(V3,V5,Out) [Out=0,V5=2,V3=1] 
* Loop 112: fun3(V3,V5,Out) [Out=1,V5=1,V3=1] 
* Loop 113: fun3(V3,V5,Out) [Out=0,V5=1,V3=1] 
* Loop 114: fun3(V3,V5,Out) [Out=1,V5=0,V3=1] 
* Loop 115: fun3(V3,V5,Out) [V5>=0,V3>=0,Out=0] 

### Ranking functions of CR fun3(V3,V5,Out) 

#### Partial ranking functions of CR fun3(V3,V5,Out) 


### Resulting Chains:fun3(V3,V5,Out) 
* [115]
* [114]
* [113]
* [112]
* [111]
* [110]
* [109]
* [108]
* [107]
* [106]
* [105]


### Merging Chains  fun3/3 into  External patterns of execution 
* [[114]] --> 1 
* [[113],[115]] --> 2 
* [[112]] --> 3 
* [[111]] --> 4 
* [[110]] --> 5 
* [[109]] --> 6 
* [[108]] --> 7 
* [[107]] --> 8 
* [[106]] --> 9 
* [[105]] --> 10 


### Specialization of cost equations fun2/3 
* CE 94 is refined into CE [225] 
* CE 93 is refined into CE [226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284] 


#### Refined cost equations fun2/3 
* CE 225: fun2(V3,V5,Out) = 0
     [V5>=0,V3>=0,Out=0] 
* CE 226: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):1+ activate(A6,B6):1+ fun3(C6,D6,E6):1
     [E6=1,D6=0,C6=1,B6=0,A6=0,Z5=1,Y5=0,X5=0,W5=0,Out=1,V5=0,V3=1] 
* CE 227: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):1+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=0,C6=1,B6=0,A6=0,Z5=1,Y5=0,X5=0,W5=0,Out=0,V5=0,V3=1] 
* CE 228: fun2(V3,V5,Out) = 1+ activate(V5,V5):1+ isPalListKind(V5,W5):2+ activate(V5,V5):1+ fun3(X5,V5,Y5):2
     [V5>=1,Y5=0,X5=1,W5=1,Out=0,V3=1] 
* CE 229: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):3
     [E6=1,D6=1,C6=1,B6=1,A6=1,Z5=1,Y5=1,X5=1,W5=1,Out=1,V5=1,V3=1] 
* CE 230: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):4
     [E6=0,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 231: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):5
     [E6=1,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=2,X5=2,W5=2,Out=1,V5=2,V3=1] 
* CE 232: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 233: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 234: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 235: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):9
     [E6=0,D6=5,C6=1,B6=5,A6=5,Z5=1,Y5=5,X5=5,W5=5,Out=0,V5=5,V3=1] 
* CE 236: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):10
     [E6=1,D6=5,C6=1,B6=5,A6=5,Z5=1,Y5=5,X5=5,W5=5,Out=1,V5=5,V3=1] 
* CE 237: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 238: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):2+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 239: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 240: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 241: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 242: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):3+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 243: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):3+ activate(A6,B6):1+ fun3(C6,D6,E6):4
     [E6=0,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=2,X5=2,W5=2,Out=0,V5=2,V3=1] 
* CE 244: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):3+ activate(A6,B6):1+ fun3(C6,D6,E6):5
     [E6=1,D6=2,C6=1,B6=2,A6=2,Z5=1,Y5=2,X5=2,W5=2,Out=1,V5=2,V3=1] 
* CE 245: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):4+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 246: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):4+ activate(A6,B6):1+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 247: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):4+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 248: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):4+ activate(A6,B6):2+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 249: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 250: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 251: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 252: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 253: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 254: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 255: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):6+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=5,C6=1,B6=5,A6=5,Z5=1,Y5=5,X5=5,W5=5,Out=0,V5=5,V3=1] 
* CE 256: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):6+ activate(A6,B6):1+ fun3(C6,D6,E6):9
     [E6=0,D6=5,C6=1,B6=5,A6=5,Z5=1,Y5=5,X5=5,W5=5,Out=0,V5=5,V3=1] 
* CE 257: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):6+ activate(A6,B6):1+ fun3(C6,D6,E6):10
     [E6=1,D6=5,C6=1,B6=5,A6=5,Z5=1,Y5=5,X5=5,W5=5,Out=1,V5=5,V3=1] 
* CE 258: fun2(V3,V5,Out) = 1+ activate(V5,V5):1+ isPalListKind(V5,W5):7+ activate(V5,V5):1+ fun3(X5,V5,Y5):2
     [V5>=1,Y5=0,X5=0,W5=0,Out=0,V3=1] 
* CE 259: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):7+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=0,B6=3,A6=3,Z5=0,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 260: fun2(V3,V5,Out) = 1+ activate(W5,X5):1+ isPalListKind(Y5,Z5):7+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=0,B6=4,A6=4,Z5=0,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 261: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 262: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 263: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):2+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 264: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):2+ activate(A6,B6):2+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 265: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):4+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 266: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):4+ activate(A6,B6):1+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 267: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):4+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 268: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):4+ activate(A6,B6):2+ fun3(C6,D6,E6):6
     [E6=0,D6=3,C6=1,B6=3,A6=3,Z5=1,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 269: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):7+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=0,B6=3,A6=3,Z5=0,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 270: fun2(V3,V5,Out) = 1+ activate(W5,X5):2+ isPalListKind(Y5,Z5):7+ activate(A6,B6):2+ fun3(C6,D6,E6):2
     [E6=0,D6=3,C6=0,B6=3,A6=3,Z5=0,Y5=3,X5=3,W5=3,Out=0,V5=3,V3=1] 
* CE 271: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 272: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 273: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):1+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 274: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 275: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 276: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):2+ activate(A6,B6):3+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 277: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 278: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 279: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):1+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 280: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 281: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):7
     [E6=0,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 282: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):5+ activate(A6,B6):3+ fun3(C6,D6,E6):8
     [E6=1,D6=4,C6=1,B6=4,A6=4,Z5=1,Y5=4,X5=4,W5=4,Out=1,V5=4,V3=1] 
* CE 283: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):7+ activate(A6,B6):1+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=0,B6=4,A6=4,Z5=0,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 
* CE 284: fun2(V3,V5,Out) = 1+ activate(W5,X5):3+ isPalListKind(Y5,Z5):7+ activate(A6,B6):3+ fun3(C6,D6,E6):2
     [E6=0,D6=4,C6=0,B6=4,A6=4,Z5=0,Y5=4,X5=4,W5=4,Out=0,V5=4,V3=1] 

### Cost equations --> "Loop" of fun2/3 
* CEs [236,257] --> Loop 116 
* CEs [235,255,256] --> Loop 117 
* CEs [234,241,251,254,273,276,279,282] --> Loop 118 
* CEs [233,239,240,249,250,252,253,260,271,272,274,275,277,278,280,281,283,284] --> Loop 119 
* CEs [232,237,238,245,246,247,248,259,261,262,263,264,265,266,267,268,269,270] --> Loop 120 
* CEs [231,244] --> Loop 121 
* CEs [228,230,242,243,258] --> Loop 122 
* CEs [229] --> Loop 123 
* CEs [226] --> Loop 124 
* CEs [225,227] --> Loop 125 

#### Loops of fun2/3 
* Loop 116: fun2(V3,V5,Out) [Out=1,V5=5,V3=1] 
* Loop 117: fun2(V3,V5,Out) [Out=0,V5=5,V3=1] 
* Loop 118: fun2(V3,V5,Out) [Out=1,V5=4,V3=1] 
* Loop 119: fun2(V3,V5,Out) [Out=0,V5=4,V3=1] 
* Loop 120: fun2(V3,V5,Out) [Out=0,V5=3,V3=1] 
* Loop 121: fun2(V3,V5,Out) [Out=1,V5=2,V3=1] 
* Loop 122: fun2(V3,V5,Out) [V5>=1,Out=0,V3=1] 
* Loop 123: fun2(V3,V5,Out) [Out=1,V5=1,V3=1] 
* Loop 124: fun2(V3,V5,Out) [Out=1,V5=0,V3=1] 
* Loop 125: fun2(V3,V5,Out) [V5>=0,V3>=0,Out=0] 

### Ranking functions of CR fun2(V3,V5,Out) 

#### Partial ranking functions of CR fun2(V3,V5,Out) 


### Resulting Chains:fun2(V3,V5,Out) 
* [125]
* [124]
* [123]
* [122]
* [121]
* [120]
* [119]
* [118]
* [117]
* [116]


### Merging Chains  fun2/3 into  External patterns of execution 
* [[124]] --> 1 
* [[123]] --> 2 
* [[121]] --> 3 
* [[120],[122],[125]] --> 4 
* [[119]] --> 5 
* [[118]] --> 6 
* [[117]] --> 7 
* [[116]] --> 8 

