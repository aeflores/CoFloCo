
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [nats/1]
1. non_recursive  : [pairs/1]
2. recursive [multiple] : [activate/2,incr/2,odds/1]
3. non_recursive  : [head/2]
4. non_recursive  : [tail/2]
5. non_recursive  : [start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into nats/1
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into head/2
4. SCC is partially evaluated into tail/2
5. SCC is partially evaluated into start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations nats/1 
* CE 17 is refined into CE [23] 
* CE 18 is refined into CE [24] 


#### Refined cost equations nats/1 
* CE 23: nats(Out) = 1
     [Out=2] 
* CE 24: nats(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of nats/1 
* CEs [23] --> Loop 14 
* CEs [24] --> Loop 15 

#### Loops of nats/1 
* Loop 14: nats(Out) [Out=2] 
* Loop 15: nats(Out) [Out=0] 

### Ranking functions of CR nats(Out) 

#### Partial ranking functions of CR nats(Out) 


### Resulting Chains:nats(Out) 
* [15]
* [14]


### Merging Chains  nats/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations activate/2 
* CE 10 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28,29] 
* CE 13 is refined into CE [30] 
* CE 11 is refined into CE [31] 
* CE 12 is refined into CE [32] 


#### Refined cost equations activate/2 
* CE 25: activate(V,Out) = 4
     [Out=4,V=1] 
* CE 26: activate(V,Out) = 2
     [Out=1,V=1] 
* CE 27: activate(A,A) = 1
     [A>=0] 
* CE 28: activate(V,Out) = 1+ nats(W):1
     [W=0,Out=0,V=0] 
* CE 29: activate(V,Out) = 1+ nats(W):2
     [W=2,Out=2,V=0] 
* CE 30: activate(V,Out) = 2+ activate(W,X)+ activate(Y,Z)
     [Out>=Z+3,Y>=0,W>=0,X+Z+2=Out+Y,W+1=V] 
* CE 31: activate(V,Out) = 2+ activate(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 32: activate(V,Out) = 4+ activate(W,X)
     [W>=0,2>=W,Out+W=X+5,V=1] 

### Cost equations --> "Loop" of activate/2 
* CEs [31] --> Loop 16 
* CEs [32] --> Loop 17 
* CEs [30] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [29] --> Loop 21 
* CEs [27,28] --> Loop 22 

#### Loops of activate/2 
* Loop 16: activate(V,Out)->  activate(V',Out')
                  [Out>=1,V>=1,Out=Out'+1,V=V'+1] 
* Loop 17: activate(V,Out)->  activate(V',Out')
                  [V'>=0,2>=V',Out+V'=Out'+5,V=1] 
* Loop 18: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out>=Out'2+3,V'2>=0,V'>=0,Out+V'2=Out'+Out'2+2,V'+1=V] 
* Loop 19: activate(V,Out) [Out=4,V=1] 
* Loop 20: activate(V,Out) [Out=1,V=1] 
* Loop 21: activate(V,Out) [Out=2,V=0] 
* Loop 22: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V,Out) 

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [16,17,18]:
  - RF of loop [16:1,18:1]:
    V depends on loops [17:1,18:2] 


### Resulting Chains:activate(V,Out) 
* [multiple([16,17,18],[[],[22],[21],[20],[19]])]...
* [22]
* [21]
* [20]
* [19]


### Merging Chains  activate/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20],[22]] --> 2 
* [[19]] --> 3 
* [[multiple([16,17,18],[[],[22],[21],[20],[19]])]] --> 4 


### Specialization of cost equations head/2 
* CE 19 is refined into CE [33] 
* CE 20 is refined into CE [34] 


#### Refined cost equations head/2 
* CE 33: head(V,Out) = 1
     [V>=Out+1,Out>=0] 
* CE 34: head(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [33] --> Loop 23 
* CEs [34] --> Loop 24 

#### Loops of head/2 
* Loop 23: head(V,Out) [V>=Out+1,Out>=0] 
* Loop 24: head(V,Out) [V>=0,Out=0] 

### Ranking functions of CR head(V,Out) 

#### Partial ranking functions of CR head(V,Out) 


### Resulting Chains:head(V,Out) 
* [24]
* [23]


### Merging Chains  head/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations tail/2 
* CE 21 is refined into CE [35,36,37,38] 
* CE 22 is refined into CE [39] 


#### Refined cost equations tail/2 
* CE 35: tail(V,Out) = 1+ activate(W,X):1
     [V>=1,X=2,W=0,Out=2] 
* CE 36: tail(V,Out) = 1+ activate(Out,Out):2
     [V>=Out+1,Out>=0] 
* CE 37: tail(V,Out) = 1+ activate(W,X):3
     [V>=2,X=4,W=1,Out=4] 
* CE 38: tail(V,Out) = 1+ activate(W,Out):4
     [V>=W+1,W>=1] 
* CE 39: tail(V,Out) = 0
     [V>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [36] --> Loop 25 
* CEs [37] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [39] --> Loop 28 
* CEs [38] --> Loop 29 

#### Loops of tail/2 
* Loop 25: tail(V,Out) [V>=Out+1,Out>=0] 
* Loop 26: tail(V,Out) [V>=2,Out=4] 
* Loop 27: tail(V,Out) [V>=1,Out=2] 
* Loop 28: tail(V,Out) [V>=0,Out=0] 
* Loop 29: tail(V,Out) [V>=2] 

### Ranking functions of CR tail(V,Out) 

#### Partial ranking functions of CR tail(V,Out) 


### Resulting Chains:tail(V,Out) 
* [29]...
* [28]
* [27]
* [26]
* [25]


### Merging Chains  tail/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 
* [[29]] --> 5 


### Specialization of cost equations start/1 
* CE 2 is refined into CE [40] 
* CE 3 is refined into CE [41] 
* CE 4 is refined into CE [42,43,44,45] 
* CE 5 is refined into CE [46,47,48,49] 
* CE 6 is refined into CE [50,51] 
* CE 7 is refined into CE [52,53] 
* CE 8 is refined into CE [54,55,56,57,58] 
* CE 9 is refined into CE [59,60,61,62] 


#### Refined cost equations start/1 
* CE 40: start(V) = 3
     [] 
* CE 41: start(V) = 1
     [] 
* CE 42: start(V) = 3+ activate(W,X):1
     [X=2,W=0] 
* CE 43: start(V) = 3+ activate(W,W):2
     [W>=0,2>=W] 
* CE 44: start(V) = 3+ activate(W,X):3
     [X=4,W=1] 
* CE 45: start(V) = 3+ activate(W,X):4
     [W>=1,2>=W] 
* CE 46: start(V) = 1+ activate(W,X):1
     [V>=1,X=2,W=0] 
* CE 47: start(V) = 1+ activate(W,W):2
     [V>=W+1,W>=0] 
* CE 48: start(V) = 1+ activate(W,X):3
     [V>=2,X=4,W=1] 
* CE 49: start(V) = 1+ activate(W,X):4
     [V>=W+1,W>=1] 
* CE 50: start(V) = 0+ nats(W):1
     [W=0] 
* CE 51: start(V) = 0+ nats(W):2
     [W=2] 
* CE 52: start(V) = 0+ head(V,W):1
     [V>=0,W=0] 
* CE 53: start(V) = 0+ head(V,W):2
     [V>=W+1,W>=0] 
* CE 54: start(V) = 0+ tail(V,W):1
     [V>=0,W=0] 
* CE 55: start(V) = 0+ tail(V,W):2
     [V>=1,W=2] 
* CE 56: start(V) = 0+ tail(V,W):3
     [V>=2,W=4] 
* CE 57: start(V) = 0+ tail(V,W):4
     [V>=W+1,W>=0] 
* CE 58: start(V) = 0+ tail(V,W):5
     [V>=2] 
* CE 59: start(V) = 0+ activate(W,X):1
     [X=2,W=0,V=0] 
* CE 60: start(V) = 0+ activate(V,V):2
     [V>=0] 
* CE 61: start(V) = 0+ activate(W,X):3
     [X=4,W=1,V=1] 
* CE 62: start(V) = 0+ activate(V,W):4
     [V>=1] 

### Cost equations --> "Loop" of start/1 
* CEs [45,49,58,62] --> Loop 30 
* CEs [40,41,42,43,44,46,47,48,50,51,52,53,54,55,56,57,59,60,61] --> Loop 31 

#### Loops of start/1 
* Loop 30: start(V) [] 
* Loop 31: start(V) [] 

### Ranking functions of CR start(V) 

#### Partial ranking functions of CR start(V) 


### Resulting Chains:start(V) 
* [31]
* [30]...


### Merging Chains  start/1 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of nats(Out):
* Chain [15]: 1
  with precondition: [Out=0] 

* Chain [14]: 1
  with precondition: [Out=2] 


#### Cost of loops [16,17,18] 

 * loop 16:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 17:activate(V,Out) -> [activate(V',Out')] 
4
 * loop 18:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
#### Cost of phase [16,17,18]:activate(V,Out) -> [] 
2*it(16)+6*it(17)+6*it([19])+4*it([21])+0
#### Cost of chains of activate(V,Out):
* Chain [multiple([16,17,18],[[],[22],[21],[20],[19]])]...: 2*it(16)+6*it(17)+6*it([19])+4*it([21])+0
  with precondition: [V>=1] 

* Chain [22]: 2
  with precondition: [V=Out,V>=0] 

* Chain [21]: 2
  with precondition: [V=0,Out=2] 

* Chain [20]: 2
  with precondition: [V=1,Out=1] 

* Chain [19]: 4
  with precondition: [V=1,Out=4] 


#### Cost of chains of head(V,Out):
* Chain [24]: 0
  with precondition: [Out=0,V>=0] 

* Chain [23]: 1
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of tail(V,Out):
* Chain [29]...: 18*s(1)+1
  with precondition: [V>=2] 

* Chain [28]: 0
  with precondition: [Out=0,V>=0] 

* Chain [27]: 3
  with precondition: [Out=2,V>=1] 

* Chain [26]: 5
  with precondition: [Out=4,V>=2] 

* Chain [25]: 3
  with precondition: [Out>=0,V>=Out+1] 


#### Cost of chains of start(V):
* Chain [31]: 7
  with precondition: [] 

* Chain [30]...: 1*aux(9)+0
  with precondition: [] 


Closed-form bounds of start(V): 
-------------------------------------
* Chain [31] with precondition: [] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [30]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 41 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 21 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 119 ms.

