
Preprocessing Cost Relations
=====================================
3. SCC does not have a single cut point : [mark/2,fun6/4]  
 Merged into markfun6/4

#### Computed strongly connected components 
0. non_recursive  : [fun1/2]
1. non_recursive  : [fun3/2]
2. recursive [non_tail,multiple] : [fun/3,fun2/2]
4. non_recursive  : [start/3]
3. recursive [non_tail,multiple] : [fun4/3,fun5/4,fun7/3,markfun6/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun1/2
1. SCC is partially evaluated into fun3/2
2. SCC is partially evaluated into fun2/2
4. SCC is partially evaluated into start/3
3. SCC is partially evaluated into markfun6/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun1/2 
* CE 41 is refined into CE [44] 
* CE 40 is refined into CE [45] 


#### Refined cost equations fun1/2 
* CE 44: fun1(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 45: fun1(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun1/2 
* CEs [44] --> Loop 30 
* CEs [45] --> Loop 31 

#### Loops of fun1/2 
* Loop 30: fun1(V3,Out) [V3>=0,V3+1=Out] 
* Loop 31: fun1(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun1(V3,Out) 

#### Partial ranking functions of CR fun1(V3,Out) 


### Resulting Chains:fun1(V3,Out) 
* [31]
* [30]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations fun3/2 
* CE 43 is refined into CE [46] 
* CE 42 is refined into CE [47] 


#### Refined cost equations fun3/2 
* CE 46: fun3(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 47: fun3(V3,Out) = 1
     [Out=1,V3=1] 

### Cost equations --> "Loop" of fun3/2 
* CEs [46] --> Loop 32 
* CEs [47] --> Loop 33 

#### Loops of fun3/2 
* Loop 32: fun3(V3,Out) [V3>=0,V3+1=Out] 
* Loop 33: fun3(V3,Out) [Out=1,V3=1] 

### Ranking functions of CR fun3(V3,Out) 

#### Partial ranking functions of CR fun3(V3,Out) 


### Resulting Chains:fun3(V3,Out) 
* [33]
* [32]


### Merging Chains  fun3/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations fun2/2 
* CE 16 is refined into CE [48] 
* CE 14 is refined into CE [49] 
* CE 17 is refined into CE [50,51] 
* CE 15 is refined into CE [52,53] 


#### Refined cost equations fun2/2 
* CE 48: fun2(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 49: fun2(V3,Out) = 2+ fun2(W3,X3)
     [Out+W3>=V3,V3>=W3+1,W3>=0,V3+X3=Out+W3] 
* CE 50: fun2(V3,Out) = 1+ fun2(W3,X3)+ fun3(Y3,Z3):1
     [W3>=0,W3+1=V3,X3=1,Z3=1,Y3=1,Out=1] 
* CE 51: fun2(V3,Out) = 1+ fun2(W3,X3)+ fun3(Y3,Out):2
     [W3>=0,Out>=1,Out=X3+1,Out=Y3+1,W3+1=V3] 
* CE 52: fun2(V3,Out) = 2+ fun2(W3,X3)+ fun2(Y3,Z3)+ fun1(A4,B4):1
     [Y3>=0,W3>=0,W3+Y3+1=V3,Z3=1,X3=1,B4=1,A4=1,Out=1] 
* CE 53: fun2(V3,Out) = 2+ fun2(W3,X3)+ fun2(Y3,Z3)+ fun1(A4,Out):2
     [Y3>=0,W3>=0,Out>=1,W3+Y3+1=V3,Out=Z3+1,Out=A4+1,X3=1] 

### Cost equations --> "Loop" of fun2/2 
* CEs [53] --> Loop 34 
* CEs [52] --> Loop 35 
* CEs [49,51] --> Loop 36 
* CEs [50] --> Loop 37 
* CEs [48] --> Loop 38 

#### Loops of fun2/2 
* Loop 34: fun2(V3,Out)->  fun2(V3',Out')  fun2(V3'2,Out'2)
                  [V3>=V3'+1,V3'>=0,Out>=1,V3'+V3'2+1=V3,Out=Out'2+1,Out'=1] 
* Loop 35: fun2(V3,Out)->  fun2(V3',Out')  fun2(V3'2,Out'2)
                  [V3>=V3'+1,V3'>=0,V3'+V3'2+1=V3,Out'2=1,Out'=1,Out=1] 
* Loop 36: fun2(V3,Out)->  fun2(V3',Out')
                  [Out+V3'>=V3,V3>=V3'+1,V3'>=0,V3+Out'=Out+V3'] 
* Loop 37: fun2(V3,Out)->  fun2(V3',Out')
                  [V3>=1,V3=V3'+1,Out'=1,Out=1] 
* Loop 38: fun2(V3,Out) [V3>=0,V3+1=Out] 

### Ranking functions of CR fun2(V3,Out) 
* RF of phase [34,35,36,37]: [V3]

#### Partial ranking functions of CR fun2(V3,Out) 
* Partial RF of phase [34,35,36,37]:
  - RF of loop [34:1,34:2,35:1,35:2,36:1,37:1]:
    V3


### Resulting Chains:fun2(V3,Out) 
* [38]
* [multiple([34,35,36,37],[[38]])]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[38]] --> 1 
* [[multiple([34,35,36,37],[[38]])]] --> 2 


### Specialization of cost equations markfun6/4 
* CE 39 is refined into CE [54] 
* CE 33 is refined into CE [55,56] 
* CE 36 is refined into CE [57] 
* CE 38 is refined into CE [58] 
* CE 28 is refined into CE [59] 
* CE 32 is refined into CE [60,61] 
* CE 34 is refined into CE [62,63] 
* CE 37 is refined into CE [64] 
* CE 31 is refined into CE [65,66,67,68] 
* CE 22 is refined into CE [69,70] 
* CE 18 is refined into CE [71] 
* CE 35 is refined into CE [72] 
* CE 26 is refined into CE [73,74] 
* CE 30 is refined into CE [75,76] 
* CE 29 is refined into CE [77] 
* CE 23 is refined into CE [78,79] 
* CE 19 is refined into CE [80] 
* CE 27 is refined into CE [81,82] 
* CE 20 is refined into CE [83,84,85,86] 
* CE 24 is refined into CE [87,88] 
* CE 21 is refined into CE [89,90,91,92] 
* CE 25 is refined into CE [93,94] 


#### Refined cost equations markfun6/4 
* CE 54: markfun6(A,B,C,D) = 1
     [C>=0,B>=0,A>=0,A+B+C+1=D] 
* CE 55: markfun6(A,B,C,A) = 1+ fun2(D,A):1
     [A>=1,A=D+1] 
* CE 56: markfun6(A,B,C,D) = 1+ fun2(E,D):2
     [E+1>=D,D>=1,E>=1,E+1=A] 
* CE 57: markfun6(A,B,C,D) = 1
     [D=1,A=1] 
* CE 58: markfun6(A,B,C,D) = 1
     [D=0,A=0] 
* CE 59: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)
     [D+E>=A,A>=E+1,E>=0,D+E=A+H] 
* CE 60: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)+ fun1(I,J):1
     [E>=0,E+1=A,H=1,J=1,I=1,D=1] 
* CE 61: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)+ fun1(I,D):2
     [E>=0,D>=1,D=H+1,D=I+1,E+1=A] 
* CE 62: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)+ fun3(I,J):1
     [E>=0,E+1=A,H=1,J=1,I=1,D=1] 
* CE 63: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)+ fun3(I,D):2
     [E>=0,D>=1,D=H+1,D=I+1,E+1=A] 
* CE 64: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)
     [E>=0,H+1=D,E+1=A] 
* CE 65: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):1+ fun1(K,L):1
     [E>=0,E+1=A,H=1,L=1,K=1,J=1,I=0,D=1] 
* CE 66: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):1+ fun1(K,D):2
     [E>=0,D>=2,D+E=A+1,D=K+1,D=J+1,D=I+2,H=1] 
* CE 67: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):2+ fun1(K,L):1
     [E>=0,I>=1,I+E+1=A,H=1,L=1,K=1,J=1,D=1] 
* CE 68: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):2+ fun1(K,D):2
     [I+2>=D,E>=0,D>=2,I>=1,I+E+1=A,D=K+1,D=J+1,H=1] 
* CE 69: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,L):1
     [I>=0,H>=0,E>=0,L>=1,H+2*L=D,E+I+1=A,L=M+1] 
* CE 70: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):2
     [M+1>=N,I>=0,H>=0,E>=0,N>=1,M>=1,M+N+H+1=D,E+I+1=A,M+1=L] 
* CE 71: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)
     [L>=0,I>=0,H>=0,E>=0,H+L+1=D,E+I+1=A] 
* CE 72: markfun6(A,B,C,D) = 1+ markfun6(E,F,G,H)+ markfun6(H,I,J,D)
     [J>=0,I>=0,E>=0,E+I+J+1=A] 
* CE 73: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):1
     [I>=0,E>=0,N>=1,E+I+1=A,N=H+1,N=M+1,2*N=D,L=0] 
* CE 74: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(H,M):2
     [H+1>=M,I>=0,E>=0,M>=1,H>=1,H+M+1=D,E+I+1=A,L=0] 
* CE 75: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):1+ markfun6(J,K,L,D)
     [K>=0,E>=0,J>=1,J+E+K=A,J=L+1,J=I+1,H=1] 
* CE 76: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ fun2(I,J):2+ markfun6(J,K,I,D)
     [I+1>=J,K>=0,E>=0,J>=1,I>=1,I+E+K+1=A,H=1] 
* CE 77: markfun6(A,B,C,D) = 2+ markfun6(E,F,G,H)+ markfun6(I,J,K,D)
     [I>=0,E>=0,E+I+1=A,H=1] 
* CE 78: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,J):1
     [D>=2*J+1,J>=1,C>=0,B>=0,G+2*J+1=D,J=K+1,A=1] 
* CE 79: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):2
     [D>=K+L+2,K+1>=L,L>=1,K>=1,C>=0,B>=0,K+L+G+2=D,K+1=J,A=1] 
* CE 80: markfun6(A,B,C,D) = 2+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)
     [D>=J+2,J>=0,C>=0,B>=0,G+J+2=D,A=1] 
* CE 81: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):1
     [L>=1,C>=0,B>=0,L=G+1,L=K+1,2*L+1=D,J=0,A=1] 
* CE 82: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(G,K):2
     [G+1>=K,K>=1,G>=1,C>=0,B>=0,G+K+2=D,J=0,A=1] 
* CE 83: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):1+ fun2(O,P):1+ markfun6(P,Q,R,D)
     [I>=0,E>=0,P>=1,E+I+1=A,P=R+1,P=H+1,P=O+1,Q=0,L=1,N=1,M=0] 
* CE 84: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):1+ fun2(H,O):2+ markfun6(O,P,H,D)
     [H+1>=O,I>=0,E>=0,O>=1,H>=1,E+I+1=A,P=0,L=1,N=1,M=0] 
* CE 85: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):2+ fun2(O,P):1+ markfun6(P,M,Q,D)
     [I>=0,E>=0,P>=1,M>=1,E+I+1=A,P=Q+1,M+1=L,P=H+1,P=O+1,N=1] 
* CE 86: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):2+ fun2(H,O):2+ markfun6(O,M,H,D)
     [H+1>=O,I>=0,E>=0,O>=1,H>=1,M>=1,E+I+1=A,M+1=L,N=1] 
* CE 87: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(M,N):1+ markfun6(O,P,Q,D)
     [I>=0,E>=0,E+I+1=A,O=0,L=0,H=0,N=1,M=0] 
* CE 88: markfun6(A,B,C,D) = 3+ markfun6(E,F,G,H)+ markfun6(I,J,K,L)+ fun2(H,M):2+ markfun6(H,N,O,D)
     [I>=0,E>=0,H>=1,E+I+1=A,L=0,M=1] 
* CE 89: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):1+ fun2(M,N):1+ markfun6(N,O,P,Q)
     [N>=1,C>=0,B>=0,N=P+1,N=G+1,N=M+1,Q+1=D,O=0,J=1,L=1,K=0,A=1] 
* CE 90: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):1+ fun2(G,M):2+ markfun6(M,N,G,O)
     [G+1>=M,M>=1,G>=1,C>=0,B>=0,O+1=D,N=0,J=1,L=1,K=0,A=1] 
* CE 91: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):2+ fun2(M,N):1+ markfun6(N,K,O,P)
     [N>=1,K>=1,C>=0,B>=0,N=O+1,K+1=J,N=G+1,N=M+1,P+1=D,L=1,A=1] 
* CE 92: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):2+ fun2(G,M):2+ markfun6(M,K,G,N)
     [G+1>=M,M>=1,G>=1,K>=1,C>=0,B>=0,K+1=J,N+1=D,L=1,A=1] 
* CE 93: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(K,L):1+ markfun6(M,N,O,P)
     [C>=0,B>=0,P+1=D,M=0,J=0,G=0,L=1,K=0,A=1] 
* CE 94: markfun6(A,B,C,D) = 3+ markfun6(C,E,F,G)+ markfun6(B,H,I,J)+ fun2(G,K):2+ markfun6(G,L,M,N)
     [G>=1,C>=0,B>=0,N+1=D,J=0,K=1,A=1] 

### Cost equations --> "Loop" of markfun6/4 
* CEs [86] --> Loop 39 
* CEs [85] --> Loop 40 
* CEs [84] --> Loop 41 
* CEs [83] --> Loop 42 
* CEs [88] --> Loop 43 
* CEs [87] --> Loop 44 
* CEs [92] --> Loop 45 
* CEs [91] --> Loop 46 
* CEs [90] --> Loop 47 
* CEs [89] --> Loop 48 
* CEs [94] --> Loop 49 
* CEs [93] --> Loop 50 
* CEs [70] --> Loop 51 
* CEs [71] --> Loop 52 
* CEs [69] --> Loop 53 
* CEs [72] --> Loop 54 
* CEs [74] --> Loop 55 
* CEs [73] --> Loop 56 
* CEs [76] --> Loop 57 
* CEs [77] --> Loop 58 
* CEs [75] --> Loop 59 
* CEs [79] --> Loop 60 
* CEs [80] --> Loop 61 
* CEs [78] --> Loop 62 
* CEs [82] --> Loop 63 
* CEs [81] --> Loop 64 
* CEs [61,63,64] --> Loop 65 
* CEs [68] --> Loop 66 
* CEs [59,66] --> Loop 67 
* CEs [67] --> Loop 68 
* CEs [60,62,65] --> Loop 69 
* CEs [56] --> Loop 70 
* CEs [54] --> Loop 71 
* CEs [55,57] --> Loop 72 
* CEs [58] --> Loop 73 

#### Loops of markfun6/4 
* Loop 39: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(A'3,B'3,D',D)
                  [D'+1>=A'3,A>=A'+1,A'3>=1,D'2>=2,D'>=1,A'>=0,A'+A'2+1=A,D'2=B'3+1] 
* Loop 40: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(A'3,B'3,D',D)
                  [A>=A'+1,D'2>=2,D'>=0,A'>=0,A'+A'2+1=A,D'2=B'3+1,D'+1=A'3] 
* Loop 41: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(A'3,B'3,D',D)
                  [D'+1>=A'3,A>=A'+1,A'3>=1,D'>=1,A'>=0,A'+A'2+1=A,B'3=0,D'2=1] 
* Loop 42: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(A'3,B'3,D',D)
                  [A>=A'+1,D'>=0,A'>=0,A'+A'2+1=A,D'+1=A'3,B'3=0,D'2=1] 
* Loop 43: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(D',A'3,B'3,D)
                  [A>=A'+1,D'>=1,A'>=0,A'+A'2+1=A,D'2=0] 
* Loop 44: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)  markfun6(A'3,B'3,C'3,D)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,A'3=0,D'2=0,D'=0] 
* Loop 45: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(A'3,B'3,C',C'3)
                  [C'+1>=A'3,A'3>=1,C'2>=2,C'>=1,C>=0,B>=0,D=C'3+1,C'2=B'3+1,A=1] 
* Loop 46: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(A'3,B'3,C',C'3)
                  [C'2>=2,C'>=0,C>=0,B>=0,D=C'3+1,C'2=B'3+1,C'+1=A'3,A=1] 
* Loop 47: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(A'3,B'3,C',C'3)
                  [C'+1>=A'3,A'3>=1,C'>=1,C>=0,B>=0,D=C'3+1,B'3=0,C'2=1,A=1] 
* Loop 48: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(A'3,B'3,C',C'3)
                  [C'>=0,C>=0,B>=0,D=C'3+1,C'+1=A'3,B'3=0,C'2=1,A=1] 
* Loop 49: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(C',A'3,B'3,C'3)
                  [C'>=1,C>=0,B>=0,D=C'3+1,C'2=0,A=1] 
* Loop 50: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)  markfun6(A'3,B'3,C'3,D'3)
                  [C>=0,B>=0,D=D'3+1,A'3=0,C'2=0,C'=0,A=1] 
* Loop 51: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)
                  [D>=D'+D'2+1,D'+2*D'2>=D,A>=A'+1,D'2>=2,D'>=0,A'>=0,A'+A'2+1=A] 
* Loop 52: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)
                  [D>=D'+1,A>=A'+1,D'>=0,A'>=0,D'+D'2+1=D,A'+A'2+1=A] 
* Loop 53: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)
                  [D>=D'+2,A>=A'+1,D'>=0,A'>=0,D'+2*D'2=D,A'+A'2+1=A] 
* Loop 54: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(D',A'2,B'2,D)
                  [A>=A'+A'2+1,A'2>=0,A'>=0,A'+A'2+B'2+1=A] 
* Loop 55: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)
                  [D>=D'+2,A>=A'+1,2*D'+2>=D,D'>=1,A'>=0,A'+A'2+1=A,D'2=0] 
* Loop 56: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D'2)
                  [A>=A'+1,A'>=0,D>=2,A'+A'2+1=A,D=2*D'+2,D'2=0] 
* Loop 57: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D)
                  [A>=A'+A'2+B'2,A>=A'+B'2+2,B'2>=0,A'2>=1,A'>=0,A'+B'2+C'2+1=A,D'=1] 
* Loop 58: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,D'=1] 
* Loop 59: markfun6(A,B,C,D)->  markfun6(A',B',C',D')  markfun6(A'2,B'2,C'2,D)
                  [A>=A'+A'2,A'2>=1,A'>=0,A'+A'2+B'2=A,A'2=C'2+1,D'=1] 
* Loop 60: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)
                  [D>=C'+C'2+2,C'+2*C'2+1>=D,C'2>=2,C'>=0,C>=0,B>=0,A=1] 
* Loop 61: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)
                  [D>=C'+2,C'>=0,C>=0,B>=0,C'+C'2+2=D,A=1] 
* Loop 62: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)
                  [D>=C'+3,C'>=0,C>=0,B>=0,C'+2*C'2+1=D,A=1] 
* Loop 63: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)
                  [D>=C'+3,2*C'+3>=D,C'>=1,C>=0,B>=0,C'2=0,A=1] 
* Loop 64: markfun6(A,B,C,D)->  markfun6(C,A',B',C')  markfun6(B,A'2,B'2,C'2)
                  [D>=3,C>=0,B>=0,D=2*C'+3,C'2=0,A=1] 
* Loop 65: markfun6(A,B,C,D)->  markfun6(A',B',C',D')
                  [A>=1,D=D'+1,A=A'+1] 
* Loop 66: markfun6(A,B,C,D)->  markfun6(A',B',C',D')
                  [A+1>=D+A',A>=A'+2,A'>=0,D>=2,D'=1] 
* Loop 67: markfun6(A,B,C,D)->  markfun6(A',B',C',D')
                  [D+A'>=A,A>=A'+1,A'>=0,A+D'=D+A'] 
* Loop 68: markfun6(A,B,C,D)->  markfun6(A',B',C',D')
                  [A>=A'+2,A'>=0,D'=1,D=1] 
* Loop 69: markfun6(A,B,C,D)->  markfun6(A',B',C',D')
                  [A>=1,A=A'+1,D'=1,D=1] 
* Loop 70: markfun6(A,B,C,D) [A>=D,D>=1,A>=2] 
* Loop 71: markfun6(A,B,C,D) [C>=0,B>=0,A>=0,A+B+C+1=D] 
* Loop 72: markfun6(A,B,C,A) [A>=1] 
* Loop 73: markfun6(A,B,C,D) [D=0,A=0] 

### Ranking functions of CR markfun6(A,B,C,D) 

#### Partial ranking functions of CR markfun6(A,B,C,D) 
* Partial RF of phase [39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69]:
  - RF of loop [39:1,39:2,40:1,40:2,41:1,41:2,42:1,42:2,43:1,43:2,44:1,44:2,44:3,50:3,51:1,51:2,52:1,52:2,53:1,53:2,54:1,55:1,55:2,56:1,56:2,58:1,58:2,59:1,65:1,67:1,69:1]:
    A depends on loops [39:3,40:3,41:3,42:3,43:3,45:1,45:2,45:3,46:1,46:2,46:3,47:1,47:2,47:3,48:1,48:2,48:3,49:1,49:2,49:3,50:1,50:2,54:2,60:1,60:2,61:1,61:2,62:1,62:2,63:1,63:2,64:1,64:2] 
  - RF of loop [57:1,66:1,68:1]:
    A-1 depends on loops [39:3,40:3,41:3,42:3,43:3,45:1,45:2,45:3,46:1,46:2,46:3,47:1,47:2,47:3,48:1,48:2,48:3,49:1,49:2,49:3,50:1,50:2,54:2,60:1,60:2,61:1,61:2,62:1,62:2,63:1,63:2,64:1,64:2] 


### Resulting Chains:markfun6(A,B,C,D) 
* [multiple([39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],[[],[73],[72],[71],[70]])]...
* [73]
* [72]
* [71]
* [70]


### Merging Chains  markfun6/4 into  External patterns of execution 
* [[73]] --> 1 
* [[72]] --> 2 
* [[71]] --> 3 
* [[70]] --> 4 
* [[multiple([39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],[[],[73],[72],[71],[70]])]] --> 5 


### Specialization of cost equations start/3 
* CE 5 is refined into CE [95,96,97,98,99,100] 
* CE 6 is refined into CE [101,102] 
* CE 2 is refined into CE [103] 
* CE 3 is refined into CE [104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119] 
* CE 4 is refined into CE [120,121] 
* CE 7 is refined into CE [122,123,124,125,126] 
* CE 8 is refined into CE [127,128,129,130,131,132,133,134] 
* CE 9 is refined into CE [135,136,137,138] 
* CE 10 is refined into CE [139,140] 
* CE 11 is refined into CE [141,142] 
* CE 12 is refined into CE [143,144,145,146,147] 
* CE 13 is refined into CE [148,149] 


#### Refined cost equations start/3 
* CE 95: start(V3,V,V4) = 2+ fun2(W4,X4):1+ markfun6(Y4,Z4,A5,B5):1
     [B5=0,Y4=0,X4=1,W4=0,V=0,V3=0] 
* CE 96: start(V3,V,V4) = 2+ fun2(W4,X4):1+ markfun6(Y4,Z4,A5,B5):3
     [B5>=Z4+1,Z4>=0,B5=Z4+A5+1,Y4=0,X4=1,W4=0,V=0,V3=0] 
* CE 97: start(V3,V,V4) = 2+ fun2(V3,W4):2+ markfun6(V3,X4,Y4,V3):2
     [V3>=1,W4=1,V=0] 
* CE 98: start(V3,V,V4) = 2+ fun2(V3,W4):2+ markfun6(V3,X4,Y4,Z4):3
     [Z4>=V3+X4+1,X4>=0,V3>=1,Z4=V3+X4+Y4+1,W4=1,V=0] 
* CE 99: start(V3,V,V4) = 2+ fun2(V3,W4):2+ markfun6(V3,X4,Y4,Z4):4
     [V3>=Z4,Z4>=1,V3>=2,W4=1,V=0] 
* CE 100: start(V3,V,V4) = 2+ fun2(V3,W4):2+ markfun6(V3,X4,Y4,Z4):5
     [V3>=1,W4=1,V=0] 
* CE 101: start(V3,V,V4) = 2+ fun2(W4,X4):1
     [X4>=1,X4=W4+1,X4=V3+1,V=0] 
* CE 102: start(V3,V,V4) = 2+ fun2(V3,W4):2
     [V3+1>=W4,W4>=1,V3>=1,V=0] 
* CE 103: start(V3,V,V4) = 1
     [V>=0,V3>=0] 
* CE 104: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(Y4,Z4):1+ markfun6(Z4,A5,B5,Z4):2
     [Z4>=1,Z4=B5+1,Z4=Y4+1,Z4=V3+1,A5=0,X4=1,W4=0,V=1] 
* CE 105: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(Y4,Z4):1+ markfun6(A5,B5,C5,D5):3
     [D5>=2,D5=2*C5+2,D5=2*A5,D5=2*Z4,D5=2*Y4+2,D5=2*V3+2,B5=0,X4=1,W4=0,V=1] 
* CE 106: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(Y4,Z4):1+ markfun6(Z4,A5,B5,C5):4
     [Z4>=C5,C5>=1,Z4>=2,Z4=B5+1,Z4=Y4+1,Z4=V3+1,A5=0,X4=1,W4=0,V=1] 
* CE 107: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(Y4,Z4):1+ markfun6(Z4,A5,B5,C5):5
     [Z4>=1,Z4=B5+1,Z4=Y4+1,Z4=V3+1,A5=0,X4=1,W4=0,V=1] 
* CE 108: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(V3,Y4):2+ markfun6(Y4,Z4,V3,Y4):2
     [V3+1>=Y4,Y4>=1,V3>=1,Z4=0,X4=1,W4=0,V=1] 
* CE 109: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(Y4,Z4):2+ markfun6(Z4,A5,B5,C5):3
     [C5>=Z4+2,C5>=2*Z4,Z4>=1,C5=Z4+B5+1,C5=Y4+Z4+1,C5=V3+Z4+1,A5=0,X4=1,W4=0,V=1] 
* CE 110: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(V3,Y4):2+ markfun6(Y4,Z4,V3,A5):4
     [Y4>=A5,V3+1>=Y4,A5>=1,Y4>=2,Z4=0,X4=1,W4=0,V=1] 
* CE 111: start(V3,V,V4) = 2+ fun2(W4,X4):1+ fun2(V3,Y4):2+ markfun6(Y4,Z4,V3,A5):5
     [V3+1>=Y4,Y4>=1,V3>=1,Z4=0,X4=1,W4=0,V=1] 
* CE 112: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(Y4,Z4):1+ markfun6(Z4,W4,A5,Z4):2
     [Z4>=1,W4>=1,Z4=A5+1,Z4=Y4+1,W4+1=V,Z4=V3+1,X4=1] 
* CE 113: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(Y4,Z4):1+ markfun6(Z4,A5,B5,C5):3
     [C5>=2*Z4+1,Z4>=1,C5=2*Z4+A5,C5=2*Z4+W4,C5+1=2*Z4+V,Z4=B5+1,Z4=Y4+1,Z4=V3+1,X4=1] 
* CE 114: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(Y4,Z4):1+ markfun6(Z4,W4,A5,B5):4
     [Z4>=B5,B5>=1,Z4>=2,W4>=1,Z4=A5+1,Z4=Y4+1,W4+1=V,Z4=V3+1,X4=1] 
* CE 115: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(Y4,Z4):1+ markfun6(Z4,W4,A5,B5):5
     [Z4>=1,W4>=1,Z4=A5+1,Z4=Y4+1,W4+1=V,Z4=V3+1,X4=1] 
* CE 116: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(V3,Y4):2+ markfun6(Y4,W4,V3,Y4):2
     [V3+1>=Y4,Y4>=1,V3>=1,W4>=1,W4+1=V,X4=1] 
* CE 117: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(Y4,Z4):2+ markfun6(Z4,W4,A5,B5):3
     [B5>=W4+Z4+2,B5>=2*Z4+W4,W4>=1,Z4>=1,B5=W4+Z4+A5+1,B5=W4+Y4+Z4+1,B5=V3+W4+Z4+1,W4+1=V,X4=1] 
* CE 118: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(V3,Y4):2+ markfun6(Y4,W4,V3,Z4):4
     [Y4>=Z4,V3+1>=Y4,Z4>=1,Y4>=2,W4>=1,W4+1=V,X4=1] 
* CE 119: start(V3,V,V4) = 2+ fun2(W4,X4):2+ fun2(V3,Y4):2+ markfun6(Y4,W4,V3,Z4):5
     [V3+1>=Y4,Y4>=1,V3>=1,W4>=1,W4+1=V,X4=1] 
* CE 120: start(V3,V,V4) = 2+ fun2(W4,V):1
     [V>=1,V3>=0,V=W4+1] 
* CE 121: start(V3,V,V4) = 2+ fun2(W4,X4):2
     [W4+1>=X4,X4>=1,W4>=1,V3>=0,W4+1=V] 
* CE 122: start(V3,V,V4) = 1+ markfun6(W4,X4,Y4,Z4):1
     [Z4=0,W4=0,V=0,V3=1] 
* CE 123: start(V3,V,V4) = 1+ markfun6(V,W4,X4,V):2
     [V>=1,V3=1] 
* CE 124: start(V3,V,V4) = 1+ markfun6(V,W4,X4,Y4):3
     [Y4>=V+W4+1,W4>=0,V>=0,Y4=V+W4+X4+1,V3=1] 
* CE 125: start(V3,V,V4) = 1+ markfun6(V,W4,X4,Y4):4
     [V>=Y4,Y4>=1,V>=2,V3=1] 
* CE 126: start(V3,V,V4) = 1+ markfun6(V,W4,X4,Y4):5
     [V>=1,V3=1] 
* CE 127: start(V3,V,V4) = 1+ fun2(W4,X4):1+ markfun6(X4,V,Y4,X4):2
     [X4>=1,V>=0,X4=Y4+1,X4=W4+1,X4=V4+1,V3=1] 
* CE 128: start(V3,V,V4) = 1+ fun2(W4,X4):1+ markfun6(X4,Y4,Z4,A5):3
     [A5>=2*X4,X4>=1,A5=2*X4+Y4,A5=2*X4+V,X4=Z4+1,X4=W4+1,X4=V4+1,V3=1] 
* CE 129: start(V3,V,V4) = 1+ fun2(W4,X4):1+ markfun6(X4,V,Y4,Z4):4
     [X4>=Z4,Z4>=1,X4>=2,V>=0,X4=Y4+1,X4=W4+1,X4=V4+1,V3=1] 
* CE 130: start(V3,V,V4) = 1+ fun2(W4,X4):1+ markfun6(X4,V,Y4,Z4):5
     [X4>=1,V>=0,X4=Y4+1,X4=W4+1,X4=V4+1,V3=1] 
* CE 131: start(V3,V,V4) = 1+ fun2(V4,W4):2+ markfun6(W4,V,V4,W4):2
     [V4+1>=W4,W4>=1,V4>=1,V>=0,V3=1] 
* CE 132: start(V3,V,V4) = 1+ fun2(W4,X4):2+ markfun6(X4,V,Y4,Z4):3
     [Z4>=V+X4+2,Z4>=2*X4+V,V>=0,X4>=1,Z4=V+X4+Y4+1,Z4=V+W4+X4+1,Z4=V+V4+X4+1,V3=1] 
* CE 133: start(V3,V,V4) = 1+ fun2(V4,W4):2+ markfun6(W4,V,V4,X4):4
     [W4>=X4,V4+1>=W4,X4>=1,W4>=2,V>=0,V3=1] 
* CE 134: start(V3,V,V4) = 1+ fun2(V4,W4):2+ markfun6(W4,V,V4,X4):5
     [V4+1>=W4,W4>=1,V4>=1,V>=0,V3=1] 
* CE 135: start(V3,V,V4) = 1+ fun2(W4,X4):1+ fun1(Y4,Z4):1
     [Z4=1,Y4=1,X4=1,W4=0,V=0,V3=1] 
* CE 136: start(V3,V,V4) = 1+ fun2(W4,X4):1+ fun1(Y4,Z4):2
     [Z4>=2,Z4=Y4+1,Z4=X4+1,Z4=W4+2,Z4=V+2,V3=1] 
* CE 137: start(V3,V,V4) = 1+ fun2(V,W4):2+ fun1(X4,Y4):1
     [V>=1,Y4=1,X4=1,W4=1,V3=1] 
* CE 138: start(V3,V,V4) = 1+ fun2(V,W4):2+ fun1(X4,Y4):2
     [V+2>=Y4,Y4>=2,V>=1,Y4=X4+1,Y4=W4+1,V3=1] 
* CE 139: start(V3,V,V4) = 0+ fun1(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 140: start(V3,V,V4) = 0+ fun1(W4,X4):2
     [X4>=1,X4=W4+1,X4=V3+1] 
* CE 141: start(V3,V,V4) = 0+ fun3(W4,X4):1
     [X4=1,W4=1,V3=1] 
* CE 142: start(V3,V,V4) = 0+ fun3(W4,X4):2
     [X4>=1,X4=W4+1,X4=V3+1] 
* CE 143: start(V3,V,V4) = 0+ markfun6(W4,X4,Y4,Z4):1
     [Z4=0,W4=0,V3=0] 
* CE 144: start(V3,V,V4) = 0+ markfun6(V3,W4,X4,V3):2
     [V3>=1] 
* CE 145: start(V3,V,V4) = 0+ markfun6(V3,W4,X4,Y4):3
     [Y4>=V3+W4+1,W4>=0,V3>=0,Y4=V3+W4+X4+1] 
* CE 146: start(V3,V,V4) = 0+ markfun6(V3,W4,X4,Y4):4
     [V3>=Y4,Y4>=1,V3>=2] 
* CE 147: start(V3,V,V4) = 0+ markfun6(V3,W4,X4,Y4):5
     [V3>=1] 
* CE 148: start(V3,V,V4) = 0+ fun2(W4,X4):1
     [X4>=1,X4=W4+1,X4=V3+1] 
* CE 149: start(V3,V,V4) = 0+ fun2(V3,W4):2
     [V3+1>=W4,W4>=1,V3>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [104,105,106,108,109,110] --> Loop 74 
* CEs [97,98,99,101,102] --> Loop 75 
* CEs [122,123,124,125,127,128,129,131,132,133,135,136,137,138,139,141] --> Loop 76 
* CEs [95,96,103,112,113,114,116,117,118,120,121,140,142,143,144,145,146,148,149] --> Loop 77 
* CEs [115] --> Loop 78 
* CEs [107,111] --> Loop 79 
* CEs [100] --> Loop 80 
* CEs [126] --> Loop 81 
* CEs [119,130,134,147] --> Loop 82 

#### Loops of start/3 
* Loop 74: start(V3,V,V4) [V3>=0,V=1] 
* Loop 75: start(V3,V,V4) [V3>=0,V=0] 
* Loop 76: start(V3,V,V4) [V3=1] 
* Loop 77: start(V3,V,V4) [V3>=0] 
* Loop 78: start(V3,V,V4) [V>=2,V3>=0] 
* Loop 79: start(V3,V,V4) [V3>=0,V=1] 
* Loop 80: start(V3,V,V4) [V3>=1,V=0] 
* Loop 81: start(V3,V,V4) [V>=1,V3=1] 
* Loop 82: start(V3,V,V4) [V3>=1] 

### Ranking functions of CR start(V3,V,V4) 

#### Partial ranking functions of CR start(V3,V,V4) 


### Resulting Chains:start(V3,V,V4) 
* [82]...
* [81]...
* [80]...
* [79]...
* [78]...
* [77]
* [76]
* [75]
* [74]


### Merging Chains  start/3 into  External patterns of execution 
* [[76],[77]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[81]] --> 4 
* [[80]] --> 5 
* [[79]] --> 6 
* [[78]] --> 7 
* [[82]] --> 8 


Computing Bounds
=====================================

#### Cost of chains of fun1(V3,Out):
* Chain [31]: 1
  with precondition: [V3=1,Out=1] 

* Chain [30]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of chains of fun3(V3,Out):
* Chain [33]: 1
  with precondition: [V3=1,Out=1] 

* Chain [32]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of loops [34,35,36,37] 

 * loop 34:fun2(V3,Out) -> [fun2(V3',Out'),fun2(V3'2,Out'2)] 
3
 * loop 35:fun2(V3,Out) -> [fun2(V3',Out'),fun2(V3'2,Out'2)] 
3
 * loop 36:fun2(V3,Out) -> [fun2(V3',Out')] 
2
 * loop 37:fun2(V3,Out) -> [fun2(V3',Out')] 
2
#### Cost of phase [34,35,36,37]:fun2(V3,Out) -> [] 
10*it(34)+1*it([38])+0
  Such that:it([38]) =< V3+1
aux(1) =< V3
it(34) =< aux(1)

#### Cost of chains of fun2(V3,Out):
* Chain [38]: 1
  with precondition: [V3+1=Out,V3>=0] 

* Chain [multiple([34,35,36,37],[[38]])]: 10*it(34)+1*it([38])+0
  Such that:it([38]) =< V3+1
aux(1) =< V3
it(34) =< aux(1)

  with precondition: [V3>=1,Out>=1,V3+1>=Out] 


#### Cost of loops [39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69] 

 * loop 39:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(11)+10*s(15)+1*s(13)+10*s(14)+3
  Such that:s(10) =< B'3
s(11) =< B'3+1
s(12) =< C'3
s(13) =< C'3+1
s(14) =< s(12)
s(15) =< s(10)

 * loop 40:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(20)+10*s(21)+4
  Such that:s(19) =< B'3
s(20) =< B'3+1
s(21) =< s(19)

 * loop 41:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(26)+10*s(27)+4
  Such that:s(25) =< C'3
s(26) =< C'3+1
s(27) =< s(25)

 * loop 42:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
5
 * loop 43:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(32)+10*s(33)+3
  Such that:s(31) =< A'3
s(32) =< A'3+1
s(33) =< s(31)

 * loop 44:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
4
 * loop 45:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(41)+10*s(45)+1*s(43)+10*s(44)+3
  Such that:s(40) =< B'3
s(41) =< B'3+1
s(42) =< C'3
s(43) =< C'3+1
s(44) =< s(42)
s(45) =< s(40)

 * loop 46:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(50)+10*s(51)+4
  Such that:s(49) =< B'3
s(50) =< B'3+1
s(51) =< s(49)

 * loop 47:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(56)+10*s(57)+4
  Such that:s(55) =< C'3
s(56) =< C'3+1
s(57) =< s(55)

 * loop 48:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
5
 * loop 49:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
1*s(62)+10*s(63)+3
  Such that:s(61) =< A'3
s(62) =< A'3+1
s(63) =< s(61)

 * loop 50:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2),markfun6(A'3,B'3,C'3,D'3)] 
4
 * loop 51:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1*s(67)+10*s(68)+3
 * loop 52:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
2
 * loop 53:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
4
 * loop 54:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1
 * loop 55:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1*s(72)+10*s(73)+3
 * loop 56:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
4
 * loop 57:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1*s(78)+10*s(79)+2
  Such that:s(77) =< C'2
s(78) =< C'2+1
s(79) =< s(77)

 * loop 58:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
2
 * loop 59:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
3
 * loop 60:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1*s(83)+10*s(84)+3
 * loop 61:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
2
 * loop 62:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
4
 * loop 63:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
1*s(88)+10*s(89)+3
 * loop 64:markfun6(A,B,C,D) -> [markfun6(A',B',C',D'),markfun6(A'2,B'2,C'2,D'2)] 
4
 * loop 65:markfun6(A,B,C,D) -> [markfun6(A',B',C',D')] 
2
 * loop 66:markfun6(A,B,C,D) -> [markfun6(A',B',C',D')] 
11*s(94)+3
  Such that:s(93) =< A-A'
s(94) =< s(93)

 * loop 67:markfun6(A,B,C,D) -> [markfun6(A',B',C',D')] 
4
 * loop 68:markfun6(A,B,C,D) -> [markfun6(A',B',C',D')] 
11*s(99)+3
  Such that:s(98) =< A-A'
s(99) =< s(98)

 * loop 69:markfun6(A,B,C,D) -> [markfun6(A',B',C',D')] 
4
#### Cost of phase [39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69]:markfun6(A,B,C,D) -> [] 
103*it(39)+41*it(44)+5*it(57)+2*it([71])+1*s(100)+10*s(101)+1*s(102)+10*s(103)+1*s(106)+10*s(107)+1*s(109)+10*s(110)+1*s(112)+10*s(113)+1*s(115)+10*s(116)+1*s(117)+10*s(118)+1*s(121)+10*s(122)+1*s(124)+10*s(125)+1*s(127)+10*s(128)+1*s(134)+10*s(135)+22*s(141)+11*s(145)+0
#### Cost of chains of markfun6(A,B,C,D):
* Chain [multiple([39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],[[],[73],[72],[71],[70]])]...: 103*it(39)+41*it(44)+5*it(57)+2*it([71])+1*s(100)+10*s(101)+1*s(102)+10*s(103)+1*s(106)+10*s(107)+1*s(109)+10*s(110)+1*s(112)+10*s(113)+1*s(115)+10*s(116)+1*s(117)+10*s(118)+1*s(121)+10*s(122)+1*s(124)+10*s(125)+1*s(127)+10*s(128)+1*s(134)+10*s(135)+22*s(141)+11*s(145)+0
  with precondition: [A>=1] 

* Chain [73]: 1
  with precondition: [A=0,D=0] 

* Chain [72]: 2
  with precondition: [A=D,A>=1] 

* Chain [71]: 1
  with precondition: [A+B+C+1=D,A>=0,B>=0,C>=0] 

* Chain [70]: 11*s(1)+1
  Such that:aux(2) =< A
s(1) =< aux(2)

  with precondition: [A>=2,D>=1,A>=D] 


#### Cost of chains of start(V3,V,V4):
* Chain [82]...: 11*s(147)+1*s(150)+10*s(152)+1220*s(153)+1*s(209)+10*s(211)+2
  Such that:s(151) =< V3
s(150) =< V3+1
aux(137) =< V
s(210) =< V4
s(209) =< V4+1
s(147) =< aux(137)
s(152) =< s(151)
s(211) =< s(210)

  with precondition: [V3>=1] 

* Chain [81]...: 305*s(268)+1
  with precondition: [V3=1,V>=1] 

* Chain [80]...: 1*s(296)+10*s(298)+305*s(299)+2
  Such that:s(297) =< V3
s(296) =< V3+1
s(298) =< s(297)

  with precondition: [V=0,V3>=1] 

* Chain [79]...: 610*s(327)+1*s(355)+10*s(357)+4
  Such that:s(356) =< V3
s(355) =< V3+1
s(357) =< s(356)

  with precondition: [V=1,V3>=0] 

* Chain [78]...: 11*s(386)+305*s(389)+3
  Such that:aux(138) =< V
s(386) =< aux(138)

  with precondition: [V3>=0,V>=2] 

* Chain [77]: 77*s(417)+26*s(427)+51*s(433)+5
  Such that:aux(147) =< V3
aux(148) =< V3+1
aux(149) =< V
s(427) =< aux(148)
s(417) =< aux(149)
s(433) =< aux(147)

  with precondition: [V3>=0] 

* Chain [76]: 31*s(457)+25*s(459)+30*s(462)+2*s(471)+4
  Such that:aux(151) =< V
aux(152) =< V+1
aux(153) =< V4
aux(154) =< V4+1
s(471) =< aux(152)
s(459) =< aux(154)
s(457) =< aux(151)
s(462) =< aux(153)

  with precondition: [V3=1] 

* Chain [75]: 4*s(477)+51*s(479)+4
  Such that:aux(156) =< V3
aux(157) =< V3+1
s(477) =< aux(157)
s(479) =< aux(156)

  with precondition: [V=0,V3>=0] 

* Chain [74]: 25*s(492)+30*s(495)+6
  Such that:aux(159) =< V3
aux(160) =< V3+1
s(492) =< aux(160)
s(495) =< aux(159)

  with precondition: [V=1,V3>=0] 


Closed-form bounds of start(V3,V,V4): 
-------------------------------------
* Chain [82]... with precondition: [V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [81]... with precondition: [V3=1,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [80]... with precondition: [V=0,V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [79]... with precondition: [V=1,V3>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [78]... with precondition: [V3>=0,V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [77] with precondition: [V3>=0] 
    - Upper bound: 51*V3+5+nat(V)*77+ (26*V3+26) 
    - Complexity: n 
* Chain [76] with precondition: [V3=1] 
    - Upper bound: nat(V)*31+4+nat(V4)*30+nat(V+1)*2+nat(V4+1)*25 
    - Complexity: n 
* Chain [75] with precondition: [V=0,V3>=0] 
    - Upper bound: 55*V3+8 
    - Complexity: n 
* Chain [74] with precondition: [V=1,V3>=0] 
    - Upper bound: 55*V3+31 
    - Complexity: n 

### Maximum cost of start(V3,V,V4): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 69 ms.
* Invariants computed in 129 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 49 ms.
* Refinement performed in 345 ms.
* Termination proved in 87 ms.
* Upper bounds computed in 1012 ms.
   - Equation cost structures 128 ms.
   - Phase cost structures 930 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 1710 ms.

