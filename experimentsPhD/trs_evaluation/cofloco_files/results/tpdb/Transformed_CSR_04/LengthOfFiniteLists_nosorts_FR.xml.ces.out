
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [zeros/1]
1. non_recursive  : [activate/2]
2. non_recursive  : [and/3]
3. recursive  : [length/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into zeros/1
1. SCC is partially evaluated into activate/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into length/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations zeros/1 
* CE 6 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations zeros/1 
* CE 13: zeros(Out) = 1
     [Out=1] 
* CE 14: zeros(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of zeros/1 
* CEs [13] --> Loop 8 
* CEs [14] --> Loop 9 

#### Loops of zeros/1 
* Loop 8: zeros(Out) [Out=1] 
* Loop 9: zeros(Out) [Out=0] 

### Ranking functions of CR zeros(Out) 

#### Partial ranking functions of CR zeros(Out) 


### Resulting Chains:zeros(Out) 
* [9]
* [8]


### Merging Chains  zeros/1 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations activate/2 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16,17] 


#### Refined cost equations activate/2 
* CE 15: activate(A,A) = 1
     [A>=0] 
* CE 16: activate(V1,Out) = 1+ zeros(W1):1
     [W1=0,Out=0,V1=0] 
* CE 17: activate(V1,Out) = 1+ zeros(W1):2
     [W1=1,Out=1,V1=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [17] --> Loop 10 
* CEs [15,16] --> Loop 11 

#### Loops of activate/2 
* Loop 10: activate(V1,Out) [Out=1,V1=0] 
* Loop 11: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 


### Resulting Chains:activate(V1,Out) 
* [11]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[10]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations length/2 
* CE 10 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20,21] 


#### Refined cost equations length/2 
* CE 18: length(V1,Out) = 1
     [Out=0,V1=1] 
* CE 19: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 20: length(V1,Out) = 1+ activate(W1,X1):1+ length(Y1,Z1)
     [V1>=1,Z1+1=Out,Y1=1,X1=1,W1=0] 
* CE 21: length(V1,Out) = 1+ activate(W1,W1):2+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [21] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [18,19] --> Loop 14 

#### Loops of length/2 
* Loop 12: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 13: length(V1,Out)->  length(V1',Out')
                  [V1>=1,Out=Out'+1,V1'=1] 
* Loop 14: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[12,13]]...
* [[12,13],14]
* [14]


### Merging Chains  length/2 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[12,13]]] --> 2 
* [[[12,13]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [22,23] 
* CE 3 is refined into CE [24,25] 
* CE 4 is refined into CE [26,27,28] 
* CE 5 is refined into CE [29,30] 


#### Refined cost equations start/2 
* CE 22: start(V1,V) = 0+ zeros(W1):1
     [W1=0] 
* CE 23: start(V1,V) = 0+ zeros(W1):2
     [W1=1] 
* CE 24: start(V1,V) = 1+ activate(W1,X1):1
     [X1=1,W1=0,V=0,V1=0] 
* CE 25: start(V1,V) = 1+ activate(V,V):2
     [V>=0,V1=0] 
* CE 26: start(V1,V) = 0+ length(V1,W1):1
     [V1>=0,W1=0] 
* CE 27: start(V1,V) = 0+ length(V1,W1):2
     [W1>=1,V1>=1] 
* CE 28: start(V1,V) = 0+ length(V1,W1):3
     [V1>=1] 
* CE 29: start(V1,V) = 0+ activate(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 30: start(V1,V) = 0+ activate(V1,V1):2
     [V1>=0] 

### Cost equations --> "Loop" of start/2 
* CEs [22,23,24,25,26,27,29,30] --> Loop 15 
* CEs [28] --> Loop 16 

#### Loops of start/2 
* Loop 15: start(V1,V) [] 
* Loop 16: start(V1,V) [V1>=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [16]...
* [15]


### Merging Chains  start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of zeros(Out):
* Chain [9]: 1
  with precondition: [Out=0] 

* Chain [8]: 1
  with precondition: [Out=1] 


#### Cost of chains of activate(V1,Out):
* Chain [11]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [10]: 2
  with precondition: [V1=0,Out=1] 


#### Cost of loops [12,13] 

 * loop 12:length(V1,Out) -> [length(V1',Out')] 
3
 * loop 13:length(V1,Out) -> [length(V1',Out')] 
3
#### Cost of phase [12,13]:length(V1,Out) -> [length(V1',Out')] 
3*it(12)+3*it(13)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12,13]:length(V1,Out) -> [length(V1',Out')] 
3*it(12)+3*it(13)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of length(V1,Out):
* Chain [[12,13]]...: 3*it(12)+3*it(13)+0
  Such that:it(12) =< V1

  with precondition: [V1>=1] 

* Chain [[12,13],14]: 3*it(12)+3*it(13)+1
  Such that:it(12) =< V1

  with precondition: [V1>=1,Out>=1] 

* Chain [14]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [16]...: 3*s(1)+3*s(2)+0
  Such that:s(1) =< V1

  with precondition: [V1>=1] 

* Chain [15]: 3*s(3)+3*s(4)+3
  Such that:s(3) =< V1

  with precondition: [] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [16]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 18 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 53 ms.

