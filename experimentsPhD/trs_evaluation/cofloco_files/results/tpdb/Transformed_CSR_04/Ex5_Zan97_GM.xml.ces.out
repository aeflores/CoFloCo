
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive [multiple] : [fun/2,fun1/4,mark/2]
1. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into mark/2
1. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations mark/2 
* CE 17 is refined into CE [19] 
* CE 18 is refined into CE [20] 
* CE 16 is refined into CE [21] 
* CE 15 is refined into CE [22] 
* CE 13 is refined into CE [23] 
* CE 11 is refined into CE [24] 
* CE 14 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 10 is refined into CE [27] 
* CE 9 is refined into CE [28] 


#### Refined cost equations mark/2 
* CE 19: mark(V,Out) = 1
     [Out=2,V=2] 
* CE 20: mark(V,Out) = 1
     [Out=1,V=1] 
* CE 21: mark(V,Out) = 1
     [Out=0,V=0] 
* CE 22: mark(V,Out) = 2+ mark(W,X)
     [X>=0,W>=0,X+1=Out,W+1=V] 
* CE 23: mark(V,Out) = 3+ mark(W,X)+ mark(X,Y)+ mark(Z,Out)
     [X>=0,W>=0,W+1=V,Z=0,Y=2] 
* CE 24: mark(V,Out) = 3+ mark(W,X)+ mark(X,Y)+ mark(Z,Out)
     [X>=0,W>=0,W+1=V,Z=3,Y=1] 
* CE 25: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Z)+ mark(Z,Out)
     [V>=W+Y+1,Z>=0,Y>=0,W>=0,X=2] 
* CE 26: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Z)+ mark(A1,Out)
     [A1>=0,Z>=0,Y>=0,W>=0,W+Y+A1+1=V,X=1] 
* CE 27: mark(V,Out) = 2+ mark(W,X)+ mark(Y,Z)
     [V+X+Z>=Out+Y,Out>=X+Z+1,Z>=0,Y>=0,X>=0,V+X+Z=Out+W+Y] 
* CE 28: mark(V,Out) = 3+ mark(W,X)+ mark(X,Y)
     [X>=0,W>=0,Out>=4,Out=Y+4,W+1=V] 

### Cost equations --> "Loop" of mark/2 
* CEs [27] --> Loop 13 
* CEs [28] --> Loop 14 
* CEs [23] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

#### Loops of mark/2 
* Loop 13: mark(V,Out)->  mark(V',Out')  mark(V'2,Out'2)
                  [Out+V'+V'2>=V+Out',V>=V'+V'2+1,V'2>=0,Out'>=0,V'>=0,Out+V'+V'2=V+Out'+Out'2] 
* Loop 14: mark(V,Out)->  mark(V',Out')  mark(Out',A'2)
                  [Out'>=0,Out>=4,V>=1,Out=A'2+4,V=V'+1] 
* Loop 15: mark(V,Out)->  mark(V',Out')  mark(Out',A'2)  mark(V'3,Out)
                  [Out'>=0,V>=1,V=V'+1,V'3=0,A'2=2] 
* Loop 16: mark(V,Out)->  mark(V',Out')  mark(Out',A'2)  mark(V'3,Out)
                  [Out'>=0,V>=1,V=V'+1,V'3=3,A'2=1] 
* Loop 17: mark(V,Out)->  mark(V',Out')  mark(V'2,Out'2)  mark(Out'2,Out)
                  [V>=V'+V'2+1,Out'2>=0,V'2>=0,V'>=0,Out'=2] 
* Loop 18: mark(V,Out)->  mark(V',Out')  mark(V'2,Out'2)  mark(V'3,Out)
                  [V>=V'+V'2+1,Out'2>=0,V'2>=0,V'>=0,V'+V'2+V'3+1=V,Out'=1] 
* Loop 19: mark(V,Out)->  mark(V',Out')
                  [Out'>=0,V'>=0,Out'+1=Out,V'+1=V] 
* Loop 20: mark(V,Out) [Out=2,V=2] 
* Loop 21: mark(V,Out) [Out=1,V=1] 
* Loop 22: mark(V,Out) [Out=0,V=0] 

### Ranking functions of CR mark(V,Out) 

#### Partial ranking functions of CR mark(V,Out) 
* Partial RF of phase [13,14,15,16,17,18,19]:
  - RF of loop [13:1,13:2,14:1,15:1,15:3,16:1,17:1,17:2,18:1,18:2,18:3,19:1]:
    V depends on loops [14:2,15:2,16:2,16:3,17:3] 


### Resulting Chains:mark(V,Out) 
* [multiple([13,14,15,16,17,18,19],[[],[22],[21],[20]])]...
* [22]
* [21]
* [20]


### Merging Chains  mark/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[multiple([13,14,15,16,17,18,19],[[],[22],[21],[20]])]] --> 4 


### Specialization of cost equations start/3 
* CE 7 is refined into CE [29,30,31,32] 
* CE 2 is refined into CE [33,34,35,36] 
* CE 3 is refined into CE [37] 
* CE 4 is refined into CE [38,39] 
* CE 5 is refined into CE [40,41,42,43] 
* CE 6 is refined into CE [44,45] 
* CE 8 is refined into CE [46,47,48,49] 


#### Refined cost equations start/3 
* CE 29: start(V,V1,V2) = 1+ mark(W2,X2):1
     [V2>=0,X2=0,W2=0,V1=0,V=2] 
* CE 30: start(V,V1,V2) = 1+ mark(W2,X2):2
     [V2>=0,X2=1,W2=1,V1=1,V=2] 
* CE 31: start(V,V1,V2) = 1+ mark(W2,X2):3
     [V2>=0,X2=2,W2=2,V1=2,V=2] 
* CE 32: start(V,V1,V2) = 1+ mark(V1,W2):4
     [V1>=1,V2>=0,V=2] 
* CE 33: start(V,V1,V2) = 2+ mark(W2,X2):1
     [X2=0,W2=0,V=0] 
* CE 34: start(V,V1,V2) = 2+ mark(W2,X2):2
     [X2=1,W2=1,V=1] 
* CE 35: start(V,V1,V2) = 2+ mark(W2,X2):3
     [X2=2,W2=2,V=2] 
* CE 36: start(V,V1,V2) = 2+ mark(V,W2):4
     [W2>=0,V>=1] 
* CE 37: start(V,V1,V2) = 1
     [V>=0] 
* CE 38: start(V,V1,V2) = 2+ mark(W2,X2):2+ mark(Y2,Z2):4
     [Y2=3,X2=1,W2=1,V=1] 
* CE 39: start(V,V1,V2) = 2+ mark(V,W2):4
     [V>=1,X2=3,W2=1] 
* CE 40: start(V,V1,V2) = 1+ mark(W2,X2):1
     [V1>=0,X2=0,W2=0,V2=0,V=1] 
* CE 41: start(V,V1,V2) = 1+ mark(W2,X2):2
     [V1>=0,X2=1,W2=1,V2=1,V=1] 
* CE 42: start(V,V1,V2) = 1+ mark(W2,X2):3
     [V1>=0,X2=2,W2=2,V2=2,V=1] 
* CE 43: start(V,V1,V2) = 1+ mark(V2,W2):4
     [V2>=1,V1>=0,V=1] 
* CE 44: start(V,V1,V2) = 2+ mark(W2,X2):3+ mark(Y2,Z2):1
     [Z2=0,Y2=0,X2=2,W2=2,V=2] 
* CE 45: start(V,V1,V2) = 2+ mark(V,W2):4
     [V>=1,X2=0,W2=2] 
* CE 46: start(V,V1,V2) = 0+ mark(W2,X2):1
     [X2=0,W2=0,V=0] 
* CE 47: start(V,V1,V2) = 0+ mark(W2,X2):2
     [X2=1,W2=1,V=1] 
* CE 48: start(V,V1,V2) = 0+ mark(W2,X2):3
     [X2=2,W2=2,V=2] 
* CE 49: start(V,V1,V2) = 0+ mark(V,W2):4
     [V>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [32] --> Loop 23 
* CEs [36,38,39,43,45,49] --> Loop 24 
* CEs [29,30,31,35,44,48] --> Loop 25 
* CEs [34,40,41,42,47] --> Loop 26 
* CEs [33,37,46] --> Loop 27 

#### Loops of start/3 
* Loop 23: start(V,V1,V2) [V2>=0,V1>=1,V=2] 
* Loop 24: start(V,V1,V2) [V>=1] 
* Loop 25: start(V,V1,V2) [V=2] 
* Loop 26: start(V,V1,V2) [V=1] 
* Loop 27: start(V,V1,V2) [V>=0] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [27]
* [26]
* [25]
* [24]...
* [23]...


### Merging Chains  start/3 into  External patterns of execution 
* [[26],[27]] --> 1 
* [[25]] --> 2 
* [[23]] --> 3 
* [[24]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [13,14,15,16,17,18,19] 

 * loop 13:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
2
 * loop 14:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2)] 
3
 * loop 15:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2),mark(V'3,Out'3)] 
3
 * loop 16:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2),mark(V'3,Out'3)] 
3
 * loop 17:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2),mark(V'3,Out'3)] 
2
 * loop 18:mark(V,Out) -> [mark(V',Out'),mark(V'2,Out'2),mark(V'3,Out'3)] 
2
 * loop 19:mark(V,Out) -> [mark(V',Out')] 
2
#### Cost of phase [13,14,15,16,17,18,19]:mark(V,Out) -> [] 
8*it(13)+11*it(14)+1*it([22])+0
#### Cost of chains of mark(V,Out):
* Chain [multiple([13,14,15,16,17,18,19],[[],[22],[21],[20]])]...: 8*it(13)+11*it(14)+1*it([22])+0
  with precondition: [V>=1] 

* Chain [22]: 1
  with precondition: [V=0,Out=0] 

* Chain [21]: 1
  with precondition: [V=1,Out=1] 

* Chain [20]: 1
  with precondition: [V=2,Out=2] 


#### Cost of chains of start(V,V1,V2):
* Chain [27]: 3
  with precondition: [V>=0] 

* Chain [26]: 3
  with precondition: [V=1] 

* Chain [25]: 4
  with precondition: [V=2] 

* Chain [24]...: 1*aux(19)+0
  with precondition: [V>=1] 

* Chain [23]...: 20*s(19)+1
  with precondition: [V=2,V1>=1,V2>=0] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [27] with precondition: [V>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26] with precondition: [V=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [25] with precondition: [V=2] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [24]... with precondition: [V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [V=2,V1>=1,V2>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 81 ms.
* Invariants computed in 76 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 222 ms.
* Termination proved in 32 ms.
* Upper bounds computed in 314 ms.
   - Equation cost structures 48 ms.
   - Phase cost structures 277 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 808 ms.

