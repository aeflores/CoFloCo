
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [zeros/1]
1. recursive  : [activate/2,take/3]
2. non_recursive  : [and/3]
3. recursive  : [length/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into zeros/1
1. SCC is partially evaluated into activate/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into length/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations zeros/1 
* CE 13 is refined into CE [18] 
* CE 14 is refined into CE [19] 


#### Refined cost equations zeros/1 
* CE 18: zeros(Out) = 1
     [Out=1] 
* CE 19: zeros(Out) = 1
     [Out=0] 

### Cost equations --> "Loop" of zeros/1 
* CEs [18] --> Loop 10 
* CEs [19] --> Loop 11 

#### Loops of zeros/1 
* Loop 10: zeros(Out) [Out=1] 
* Loop 11: zeros(Out) [Out=0] 

### Ranking functions of CR zeros(Out) 

#### Partial ranking functions of CR zeros(Out) 


### Resulting Chains:zeros(Out) 
* [11]
* [10]


### Merging Chains  zeros/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations activate/2 
* CE 8 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22] 
* CE 11 is refined into CE [23,24] 
* CE 9 is refined into CE [25] 


#### Refined cost equations activate/2 
* CE 20: activate(A,A) = 2
     [A>=1] 
* CE 21: activate(A,A) = 1
     [A>=0] 
* CE 22: activate(V1,Out) = 2
     [V1>=1,Out=1] 
* CE 23: activate(V1,Out) = 1+ zeros(W1):1
     [W1=0,Out=0,V1=0] 
* CE 24: activate(V1,Out) = 1+ zeros(W1):2
     [W1=1,Out=1,V1=0] 
* CE 25: activate(V1,Out) = 2+ activate(W1,X1)
     [V1>=W1+3,W1>=0,V1+X1=Out+W1+1] 

### Cost equations --> "Loop" of activate/2 
* CEs [25] --> Loop 12 
* CEs [22] --> Loop 13 
* CEs [24] --> Loop 14 
* CEs [20,21,23] --> Loop 15 

#### Loops of activate/2 
* Loop 12: activate(V1,Out)->  activate(V1',Out')
                  [V1>=V1'+3,V1'>=0,V1+Out'=Out+V1'+1] 
* Loop 13: activate(V1,Out) [V1>=1,Out=1] 
* Loop 14: activate(V1,Out) [Out=1,V1=0] 
* Loop 15: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [12]: [V1-2]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V1-2


### Resulting Chains:activate(V1,Out) 
* [[12],15]
* [[12],14]
* [[12],13]
* [15]
* [14]
* [13]


### Merging Chains  activate/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[15]] --> 3 
* [[13,[12]]] --> 4 
* [[15,[12]]] --> 5 
* [[14,[12]]] --> 6 


### Specialization of cost equations length/2 
* CE 15 is refined into CE [26] 
* CE 17 is refined into CE [27] 
* CE 16 is refined into CE [28,29,30,31,32,33] 


#### Refined cost equations length/2 
* CE 26: length(V1,Out) = 1
     [Out=0,V1=1] 
* CE 27: length(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 28: length(V1,Out) = 1+ activate(W1,X1):1+ length(Y1,Z1)
     [V1>=1,Z1+1=Out,Y1=1,X1=1,W1=0] 
* CE 29: length(V1,Out) = 1+ activate(W1,X1):2+ length(Y1,Z1)
     [V1>=W1+1,W1>=1,Z1+1=Out,Y1=1,X1=1] 
* CE 30: length(V1,Out) = 1+ activate(W1,W1):3+ length(W1,X1)
     [V1>=W1+1,W1>=0,X1+1=Out] 
* CE 31: length(V1,Out) = 1+ activate(W1,X1):4+ length(X1,Y1)
     [W1>=X1+1,V1>=W1+1,X1>=3,Y1+1=Out] 
* CE 32: length(V1,Out) = 1+ activate(W1,X1):5+ length(X1,Y1)
     [W1>=X1+1,V1>=W1+1,3*X1>=2*W1,Y1+1=Out] 
* CE 33: length(V1,Out) = 1+ activate(W1,X1):6+ length(X1,Y1)
     [W1>=X1,V1>=W1+1,3*X1>=2*W1+3,Y1+1=Out] 

### Cost equations --> "Loop" of length/2 
* CEs [30,31,32,33] --> Loop 16 
* CEs [28,29] --> Loop 17 
* CEs [26,27] --> Loop 18 

#### Loops of length/2 
* Loop 16: length(V1,Out)->  length(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out=Out'+1] 
* Loop 17: length(V1,Out)->  length(V1',Out')
                  [V1>=1,Out=Out'+1,V1'=1] 
* Loop 18: length(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR length(V1,Out) 

#### Partial ranking functions of CR length(V1,Out) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    V1


### Resulting Chains:length(V1,Out) 
* [[16,17]]...
* [[16,17],18]
* [18]


### Merging Chains  length/2 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[16,17]]] --> 2 
* [[[16,17]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [34] 
* CE 3 is refined into CE [35,36,37,38,39,40] 
* CE 4 is refined into CE [41,42] 
* CE 5 is refined into CE [43,44,45,46,47,48] 
* CE 6 is refined into CE [49,50,51] 
* CE 7 is refined into CE [52,53,54,55,56,57] 


#### Refined cost equations start/2 
* CE 34: start(V1,V) = 1
     [V>=0,V1>=0] 
* CE 35: start(V1,V) = 1+ activate(W1,X1):1
     [V>=1,V1>=1,X1=1,W1=0] 
* CE 36: start(V1,V) = 1+ activate(W1,X1):2
     [V>=W1+1,W1>=1,V1>=1,X1=1] 
* CE 37: start(V1,V) = 1+ activate(W1,W1):3
     [V>=W1+1,W1>=0,V1>=1] 
* CE 38: start(V1,V) = 1+ activate(W1,X1):4
     [W1>=X1+1,V>=W1+1,X1>=3,V1>=1] 
* CE 39: start(V1,V) = 1+ activate(W1,X1):5
     [W1>=X1+1,V>=W1+1,3*X1>=2*W1,V1>=1] 
* CE 40: start(V1,V) = 1+ activate(W1,X1):6
     [W1>=X1,V>=W1+1,3*X1>=2*W1+3,V1>=1] 
* CE 41: start(V1,V) = 0+ zeros(W1):1
     [W1=0] 
* CE 42: start(V1,V) = 0+ zeros(W1):2
     [W1=1] 
* CE 43: start(V1,V) = 1+ activate(W1,X1):1
     [X1=1,W1=0,V=0,V1=0] 
* CE 44: start(V1,V) = 1+ activate(V,W1):2
     [V>=1,W1=1,V1=0] 
* CE 45: start(V1,V) = 1+ activate(V,V):3
     [V>=0,V1=0] 
* CE 46: start(V1,V) = 1+ activate(V,W1):4
     [V>=W1+1,W1>=3,V1=0] 
* CE 47: start(V1,V) = 1+ activate(V,W1):5
     [V>=W1+1,3*W1>=2*V,V1=0] 
* CE 48: start(V1,V) = 1+ activate(V,W1):6
     [V>=W1,3*W1>=2*V+3,V1=0] 
* CE 49: start(V1,V) = 0+ length(V1,W1):1
     [V1>=0,W1=0] 
* CE 50: start(V1,V) = 0+ length(V1,W1):2
     [W1>=1,V1>=1] 
* CE 51: start(V1,V) = 0+ length(V1,W1):3
     [V1>=1] 
* CE 52: start(V1,V) = 0+ activate(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 53: start(V1,V) = 0+ activate(V1,W1):2
     [V1>=1,W1=1] 
* CE 54: start(V1,V) = 0+ activate(V1,V1):3
     [V1>=0] 
* CE 55: start(V1,V) = 0+ activate(V1,W1):4
     [V1>=W1+1,W1>=3] 
* CE 56: start(V1,V) = 0+ activate(V1,W1):5
     [V1>=W1+1,3*W1>=2*V1] 
* CE 57: start(V1,V) = 0+ activate(V1,W1):6
     [V1>=W1,3*W1>=2*V1+3] 

### Cost equations --> "Loop" of start/2 
* CEs [34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57] --> Loop 19 
* CEs [51] --> Loop 20 

#### Loops of start/2 
* Loop 19: start(V1,V) [] 
* Loop 20: start(V1,V) [V1>=1] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]...
* [19]


### Merging Chains  start/2 into  External patterns of execution 
* [[19]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of zeros(Out):
* Chain [11]: 1
  with precondition: [Out=0] 

* Chain [10]: 1
  with precondition: [Out=1] 


#### Cost of loops [12] 

 * loop 12:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [12]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of phase [12]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(12)+0
  Such that:it(12) =< V1
it(12) =< V1-V1'

#### Cost of chains of activate(V1,Out):
* Chain [[12],15]: 2*it(12)+2
  Such that:it(12) =< V1

  with precondition: [3*Out>=2*V1,V1>=Out+1] 

* Chain [[12],14]: 2*it(12)+2
  Such that:it(12) =< V1

  with precondition: [3*Out>=2*V1+3,V1>=Out] 

* Chain [[12],13]: 2*it(12)+2
  Such that:it(12) =< V1

  with precondition: [Out>=3,V1>=Out+1] 

* Chain [15]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [14]: 2
  with precondition: [V1=0,Out=1] 

* Chain [13]: 2
  with precondition: [Out=1,V1>=1] 


#### Cost of loops [16,17] 

 * loop 16:length(V1,Out) -> [length(V1',Out')] 
6*s(5)+3
  Such that:s(4) =< V1
s(5) =< s(4)

 * loop 17:length(V1,Out) -> [length(V1',Out')] 
3
#### Cost of phase [16,17]:length(V1,Out) -> [length(V1',Out')] 
3*it(16)+3*it(17)+6*s(6)+0
  Such that:it(16) =< V1-V1'
aux(3) =< V1
it(16) =< aux(3)
s(7) =< it(16)*aux(3)
s(6) =< s(7)

#### Cost of phase [16,17]:length(V1,Out) -> [length(V1',Out')] 
3*it(16)+3*it(17)+6*s(6)+0
  Such that:it(16) =< V1-V1'
aux(3) =< V1
it(16) =< aux(3)
s(7) =< it(16)*aux(3)
s(6) =< s(7)

#### Cost of chains of length(V1,Out):
* Chain [[16,17]]...: 3*it(16)+3*it(17)+6*s(6)+0
  Such that:aux(4) =< V1
it(16) =< aux(4)
s(7) =< it(16)*aux(4)
s(6) =< s(7)

  with precondition: [V1>=1] 

* Chain [[16,17],18]: 3*it(16)+3*it(17)+6*s(6)+1
  Such that:aux(5) =< V1
it(16) =< aux(5)
s(7) =< it(16)*aux(5)
s(6) =< s(7)

  with precondition: [V1>=1,Out>=1] 

* Chain [18]: 1
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [20]...: 3*s(9)+6*s(11)+3*s(12)+0
  Such that:s(8) =< V1
s(9) =< s(8)
s(10) =< s(9)*s(8)
s(11) =< s(10)

  with precondition: [V1>=1] 

* Chain [19]: 12*s(13)+9*s(20)+6*s(22)+3*s(23)+3
  Such that:aux(6) =< V1
aux(7) =< V
s(20) =< aux(6)
s(13) =< aux(7)
s(21) =< s(20)*aux(6)
s(22) =< s(21)

  with precondition: [] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 39 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 121 ms.

