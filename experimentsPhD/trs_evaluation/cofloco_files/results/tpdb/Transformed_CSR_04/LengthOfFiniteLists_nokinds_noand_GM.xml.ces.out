
Preprocessing Cost Relations
=====================================
4. SCC does not have a single cut point : [fun12/2,fun9/2]  
 Merged into fun12fun9/2
8. SCC does not have a single cut point : [mark/2,fun13/2]  
 Merged into markfun13/2

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
1. non_recursive  : [fun1/2]
2. non_recursive  : [fun2/2]
3. non_recursive  : [fun8/2]
5. non_recursive  : [fun3/2]
6. non_recursive  : [fun5/2]
7. recursive [non_tail] : [fun4/3,fun6/2]
9. non_recursive  : [start/3]
4. recursive [non_tail,multiple] : [fun12fun9/2,fun7/3]
8. recursive [non_tail,multiple] : [fun10/4,fun11/3,markfun13/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/1
1. SCC is partially evaluated into fun1/2
2. SCC is partially evaluated into fun2/2
3. SCC is partially evaluated into fun8/2
5. SCC is partially evaluated into fun3/2
6. SCC is partially evaluated into fun5/2
7. SCC is partially evaluated into fun6/2
9. SCC is partially evaluated into start/3
4. SCC is partially evaluated into fun12fun9/2
8. SCC is partially evaluated into markfun13/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/1 
* CE 56 is refined into CE [64] 
* CE 57 is refined into CE [65] 


#### Refined cost equations fun/1 
* CE 64: fun(Out) = 1
     [Out=4] 
* CE 65: fun(Out) = 1
     [Out=3] 

### Cost equations --> "Loop" of fun/1 
* CEs [64] --> Loop 34 
* CEs [65] --> Loop 35 

#### Loops of fun/1 
* Loop 34: fun(Out) [Out=4] 
* Loop 35: fun(Out) [Out=3] 

### Ranking functions of CR fun(Out) 

#### Partial ranking functions of CR fun(Out) 


### Resulting Chains:fun(Out) 
* [35]
* [34]


### Merging Chains  fun/1 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations fun1/2 
* CE 59 is refined into CE [66] 
* CE 58 is refined into CE [67] 


#### Refined cost equations fun1/2 
* CE 66: fun1(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 67: fun1(V3,Out) = 1
     [Out=2,V3=2] 

### Cost equations --> "Loop" of fun1/2 
* CEs [66] --> Loop 36 
* CEs [67] --> Loop 37 

#### Loops of fun1/2 
* Loop 36: fun1(V3,Out) [V3>=0,V3+1=Out] 
* Loop 37: fun1(V3,Out) [Out=2,V3=2] 

### Ranking functions of CR fun1(V3,Out) 

#### Partial ranking functions of CR fun1(V3,Out) 


### Resulting Chains:fun1(V3,Out) 
* [37]
* [36]


### Merging Chains  fun1/2 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations fun2/2 
* CE 61 is refined into CE [68] 
* CE 60 is refined into CE [69] 


#### Refined cost equations fun2/2 
* CE 68: fun2(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 69: fun2(V3,Out) = 1
     [Out=2,V3=2] 

### Cost equations --> "Loop" of fun2/2 
* CEs [68] --> Loop 38 
* CEs [69] --> Loop 39 

#### Loops of fun2/2 
* Loop 38: fun2(V3,Out) [V3>=0,V3+1=Out] 
* Loop 39: fun2(V3,Out) [Out=2,V3=2] 

### Ranking functions of CR fun2(V3,Out) 

#### Partial ranking functions of CR fun2(V3,Out) 


### Resulting Chains:fun2(V3,Out) 
* [39]
* [38]


### Merging Chains  fun2/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations fun8/2 
* CE 48 is refined into CE [70] 
* CE 47 is refined into CE [71] 


#### Refined cost equations fun8/2 
* CE 70: fun8(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 71: fun8(V3,Out) = 1
     [Out=2,V3=2] 

### Cost equations --> "Loop" of fun8/2 
* CEs [70] --> Loop 40 
* CEs [71] --> Loop 41 

#### Loops of fun8/2 
* Loop 40: fun8(V3,Out) [V3>=0,V3+1=Out] 
* Loop 41: fun8(V3,Out) [Out=2,V3=2] 

### Ranking functions of CR fun8(V3,Out) 

#### Partial ranking functions of CR fun8(V3,Out) 


### Resulting Chains:fun8(V3,Out) 
* [41]
* [40]


### Merging Chains  fun8/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations fun12fun9/2 
* CE 22 is refined into CE [72] 
* CE 19 is refined into CE [73] 
* CE 17 is refined into CE [74] 
* CE 20 is refined into CE [75,76] 
* CE 21 is refined into CE [77,78] 
* CE 18 is refined into CE [79,80] 


#### Refined cost equations fun12fun9/2 
* CE 72: fun12fun9(A,B) = 1
     [A>=0,A+1=B] 
* CE 73: fun12fun9(A,B) = 1
     [B=2,A=0] 
* CE 74: fun12fun9(A,B) = 2+ fun12fun9(C,D)
     [B+C>=A,A>=C+1,C>=0,A+D=B+C] 
* CE 75: fun12fun9(A,B) = 1+ fun12fun9(C,D)+ fun1(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 76: fun12fun9(A,B) = 1+ fun12fun9(C,D)+ fun1(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 77: fun12fun9(A,B) = 1+ fun12fun9(C,D)+ fun2(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 78: fun12fun9(A,B) = 1+ fun12fun9(C,D)+ fun2(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 79: fun12fun9(A,B) = 2+ fun12fun9(C,D)+ fun12fun9(E,F)+ fun8(G,H):1
     [E>=0,C>=0,C+E+1=A,F=2,D=2,H=2,G=2,B=2] 
* CE 80: fun12fun9(A,B) = 2+ fun12fun9(C,D)+ fun12fun9(E,F)+ fun8(G,B):2
     [E>=0,C>=0,B>=1,C+E+1=A,B=F+1,B=G+1,D=2] 

### Cost equations --> "Loop" of fun12fun9/2 
* CEs [80] --> Loop 42 
* CEs [79] --> Loop 43 
* CEs [74,76,78] --> Loop 44 
* CEs [75,77] --> Loop 45 
* CEs [72] --> Loop 46 
* CEs [73] --> Loop 47 

#### Loops of fun12fun9/2 
* Loop 42: fun12fun9(A,B)->  fun12fun9(A',B')  fun12fun9(A'2,B'2)
                  [A>=A'+1,A'>=0,B>=1,A'+A'2+1=A,B=B'2+1,B'=2] 
* Loop 43: fun12fun9(A,B)->  fun12fun9(A',B')  fun12fun9(A'2,B'2)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,B'2=2,B'=2,B=2] 
* Loop 44: fun12fun9(A,B)->  fun12fun9(A',B')
                  [B+A'>=A,A>=A'+1,A'>=0,A+B'=B+A'] 
* Loop 45: fun12fun9(A,B)->  fun12fun9(A',B')
                  [A>=1,A=A'+1,B'=2,B=2] 
* Loop 46: fun12fun9(A,B) [A>=0,A+1=B] 
* Loop 47: fun12fun9(A,B) [B=2,A=0] 

### Ranking functions of CR fun12fun9(A,B) 
* RF of phase [42,43,44,45]: [A]

#### Partial ranking functions of CR fun12fun9(A,B) 
* Partial RF of phase [42,43,44,45]:
  - RF of loop [42:1,42:2,43:1,43:2,44:1,45:1]:
    A


### Resulting Chains:fun12fun9(A,B) 
* [47]
* [46]
* [multiple([42,43,44,45],[[47],[46]])]


### Merging Chains  fun12fun9/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[multiple([42,43,44,45],[[47],[46]])]] --> 3 


### Specialization of cost equations fun3/2 
* CE 63 is refined into CE [81] 
* CE 62 is refined into CE [82] 


#### Refined cost equations fun3/2 
* CE 81: fun3(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 82: fun3(V3,Out) = 1
     [Out=2,V3=2] 

### Cost equations --> "Loop" of fun3/2 
* CEs [81] --> Loop 48 
* CEs [82] --> Loop 49 

#### Loops of fun3/2 
* Loop 48: fun3(V3,Out) [V3>=0,V3+1=Out] 
* Loop 49: fun3(V3,Out) [Out=2,V3=2] 

### Ranking functions of CR fun3(V3,Out) 

#### Partial ranking functions of CR fun3(V3,Out) 


### Resulting Chains:fun3(V3,Out) 
* [49]
* [48]


### Merging Chains  fun3/2 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations fun5/2 
* CE 55 is refined into CE [83] 
* CE 54 is refined into CE [84] 


#### Refined cost equations fun5/2 
* CE 83: fun5(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 84: fun5(V3,Out) = 1
     [Out=2,V3=2] 

### Cost equations --> "Loop" of fun5/2 
* CEs [83] --> Loop 50 
* CEs [84] --> Loop 51 

#### Loops of fun5/2 
* Loop 50: fun5(V3,Out) [V3>=0,V3+1=Out] 
* Loop 51: fun5(V3,Out) [Out=2,V3=2] 

### Ranking functions of CR fun5(V3,Out) 

#### Partial ranking functions of CR fun5(V3,Out) 


### Resulting Chains:fun5(V3,Out) 
* [51]
* [50]


### Merging Chains  fun5/2 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations fun6/2 
* CE 53 is refined into CE [85] 
* CE 49 is refined into CE [86,87,88] 
* CE 51 is refined into CE [89,90,91,92,93,94] 
* CE 52 is refined into CE [95] 
* CE 50 is refined into CE [96,97,98,99,100,101] 


#### Refined cost equations fun6/2 
* CE 85: fun6(V3,Out) = 1
     [V3>=0,V3+1=Out] 
* CE 86: fun6(V3,Out) = 2+ fun12fun9(W3,X3):1
     [V3>=1,V3+2=Out,X3=2,W3=0] 
* CE 87: fun6(V3,Out) = 2+ fun12fun9(W3,X3):2
     [V3>=X3,X3>=1,X3=W3+1,V3+1=Out] 
* CE 88: fun6(V3,Out) = 2+ fun12fun9(W3,X3):3
     [W3+2>=X3,V3>=W3+1,X3>=1,W3>=1,Out+W3=V3+X3] 
* CE 89: fun6(V3,Out) = 1+ fun12fun9(W3,X3):1+ fun3(Y3,Z3):1
     [Z3=2,Y3=2,X3=2,W3=0,Out=2,V3=0] 
* CE 90: fun6(V3,Out) = 1+ fun12fun9(W3,X3):1+ fun3(Y3,Z3):2
     [Z3=3,Y3=2,X3=2,W3=0,Out=3,V3=0] 
* CE 91: fun6(V3,Out) = 1+ fun12fun9(W3,X3):2+ fun3(Y3,Z3):1
     [Z3=2,Y3=2,X3=2,W3=1,Out=2,V3=1] 
* CE 92: fun6(V3,Out) = 1+ fun12fun9(W3,X3):2+ fun3(Y3,Out):2
     [Out>=2,Out=Y3+1,Out=X3+1,Out=W3+2,Out=V3+2] 
* CE 93: fun6(V3,Out) = 1+ fun12fun9(V3,W3):3+ fun3(X3,Y3):1
     [V3>=1,Y3=2,X3=2,W3=2,Out=2] 
* CE 94: fun6(V3,Out) = 1+ fun12fun9(V3,W3):3+ fun3(X3,Out):2
     [V3+3>=Out,Out>=2,V3>=1,Out=X3+1,Out=W3+1] 
* CE 95: fun6(V3,Out) = 1
     [Out=2,V3=3] 
* CE 96: fun6(V3,Out) = 2+ fun12fun9(W3,X3):1+ fun6(Y3,Z3)+ fun5(A4,B4):1
     [Y3>=0,Y3+1=V3,Z3=2,B4=2,A4=2,X3=2,W3=0,Out=2] 
* CE 97: fun6(V3,Out) = 2+ fun12fun9(W3,X3):1+ fun6(Y3,Z3)+ fun5(A4,Out):2
     [Y3>=0,Out>=1,Out=Z3+1,Out=A4+1,Y3+1=V3,X3=2,W3=0] 
* CE 98: fun6(V3,Out) = 2+ fun12fun9(W3,X3):2+ fun6(Y3,Z3)+ fun5(A4,B4):1
     [Y3>=0,Y3+2=V3,Z3=2,B4=2,A4=2,X3=2,W3=1,Out=2] 
* CE 99: fun6(V3,Out) = 2+ fun12fun9(W3,X3):2+ fun6(Y3,Z3)+ fun5(A4,Out):2
     [Y3>=0,Out>=1,Out=Z3+1,Out=A4+1,Y3+2=V3,X3=2,W3=1] 
* CE 100: fun6(V3,Out) = 2+ fun12fun9(W3,X3):3+ fun6(Y3,Z3)+ fun5(A4,B4):1
     [Y3>=0,W3>=1,W3+Y3+1=V3,Z3=2,B4=2,A4=2,X3=2,Out=2] 
* CE 101: fun6(V3,Out) = 2+ fun12fun9(W3,X3):3+ fun6(Y3,Z3)+ fun5(A4,Out):2
     [Y3>=0,Out>=1,W3>=1,W3+Y3+1=V3,Out=Z3+1,Out=A4+1,X3=2] 

### Cost equations --> "Loop" of fun6/2 
* CEs [97] --> Loop 52 
* CEs [99,101] --> Loop 53 
* CEs [96] --> Loop 54 
* CEs [98,100] --> Loop 55 
* CEs [85,87] --> Loop 56 
* CEs [95] --> Loop 57 
* CEs [88,91,93,94] --> Loop 58 
* CEs [90] --> Loop 59 
* CEs [86,89,92] --> Loop 60 

#### Loops of fun6/2 
* Loop 52: fun6(V3,Out)->  fun6(V3',Out')
                  [Out>=1,V3>=1,Out=Out'+1,V3=V3'+1] 
* Loop 53: fun6(V3,Out)->  fun6(V3',Out')
                  [V3>=V3'+2,V3'>=0,Out>=1,Out=Out'+1] 
* Loop 54: fun6(V3,Out)->  fun6(V3',Out')
                  [V3>=1,V3=V3'+1,Out'=2,Out=2] 
* Loop 55: fun6(V3,Out)->  fun6(V3',Out')
                  [V3>=V3'+2,V3'>=0,Out'=2,Out=2] 
* Loop 56: fun6(V3,Out) [V3>=0,V3+1=Out] 
* Loop 57: fun6(V3,Out) [Out=2,V3=3] 
* Loop 58: fun6(V3,Out) [V3+3>=Out,Out>=2,V3>=1] 
* Loop 59: fun6(V3,Out) [Out=3,V3=0] 
* Loop 60: fun6(V3,Out) [V3>=0,V3+2=Out] 

### Ranking functions of CR fun6(V3,Out) 
* RF of phase [52,53,54,55]: [V3]

#### Partial ranking functions of CR fun6(V3,Out) 
* Partial RF of phase [52,53,54,55]:
  - RF of loop [52:1,54:1]:
    V3
  - RF of loop [53:1,55:1]:
    V3-1


### Resulting Chains:fun6(V3,Out) 
* [[52,53,54,55],60]
* [[52,53,54,55],59]
* [[52,53,54,55],58]
* [[52,53,54,55],57]
* [[52,53,54,55],56]
* [60]
* [59]
* [58]
* [57]
* [56]


### Merging Chains  fun6/2 into  External patterns of execution 
* [[59]] --> 1 
* [[57],[58],[56,[52,53,54,55]],[57,[52,53,54,55]],[58,[52,53,54,55]],[59,[52,53,54,55]],[60,[52,53,54,55]]] --> 2 
* [[60]] --> 3 
* [[56]] --> 4 


### Specialization of cost equations markfun13/2 
* CE 46 is refined into CE [102] 
* CE 32 is refined into CE [103,104] 
* CE 43 is refined into CE [105] 
* CE 44 is refined into CE [106] 
* CE 24 is refined into CE [107,108,109] 
* CE 28 is refined into CE [110,111,112,113,114,115,116,117,118] 
* CE 37 is refined into CE [119,120,121,122] 
* CE 39 is refined into CE [123,124,125] 
* CE 45 is refined into CE [126] 
* CE 42 is refined into CE [127] 
* CE 23 is refined into CE [128] 
* CE 41 is refined into CE [129] 
* CE 33 is refined into CE [130,131] 
* CE 34 is refined into CE [132,133] 
* CE 35 is refined into CE [134,135] 
* CE 36 is refined into CE [136,137] 
* CE 38 is refined into CE [138,139] 
* CE 27 is refined into CE [140,141,142] 
* CE 30 is refined into CE [143,144,145,146,147,148] 
* CE 31 is refined into CE [149,150,151,152,153,154,155] 
* CE 26 is refined into CE [156,157,158,159,160,161,162,163,164] 
* CE 40 is refined into CE [165] 
* CE 25 is refined into CE [166,167,168] 
* CE 29 is refined into CE [169] 


#### Refined cost equations markfun13/2 
* CE 102: markfun13(A,B) = 1
     [A>=0,A+1=B] 
* CE 103: markfun13(A,B) = 1+ fun(C):1
     [C=3,B=3,A=3] 
* CE 104: markfun13(A,B) = 1+ fun(C):2
     [C=4,B=4,A=3] 
* CE 105: markfun13(A,B) = 1
     [B=2,A=2] 
* CE 106: markfun13(A,B) = 1
     [B=1,A=1] 
* CE 107: markfun13(A,B) = 2+ fun12fun9(C,D):1
     [A>=1,A+2=B,D=2,C=0] 
* CE 108: markfun13(A,B) = 2+ fun12fun9(C,D):2
     [A>=D,D>=1,A+D=B,D=C+1] 
* CE 109: markfun13(A,B) = 2+ fun12fun9(C,D):3
     [C+2>=D,A>=C+1,D>=1,C>=1,A+D=B] 
* CE 110: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,F):1
     [F=2,E=0,D=2,C=0,B=3,A=1] 
* CE 111: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,A):2
     [A>=1,A=E+1,A+1=B,D=2,C=0] 
* CE 112: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,F):3
     [E+2>=F,F>=1,E>=1,F+1=B,E+1=A,D=2,C=0] 
* CE 113: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):1
     [F=2,E=0,D=2,C=1,B=4,A=2] 
* CE 114: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):2
     [F>=1,F=E+1,F+2=B,F+1=A,D=2,C=1] 
* CE 115: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):3
     [E+2>=F,F>=1,E>=1,F+2=B,E+2=A,D=2,C=1] 
* CE 116: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):1
     [C>=1,C+3=B,C+1=A,F=2,E=0,D=2] 
* CE 117: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):2
     [F>=1,C>=1,C+F+1=B,C+F=A,F=E+1,D=2] 
* CE 118: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):3
     [E+2>=F,F>=1,E>=1,C>=1,C+F+1=B,C+E+1=A,D=2] 
* CE 119: markfun13(A,B) = 1+ fun6(C,D):1
     [D=3,C=0,B=3,A=1] 
* CE 120: markfun13(A,B) = 1+ fun6(C,B):2
     [C+3>=B,B>=2,C>=1,C+1=A] 
* CE 121: markfun13(A,B) = 1+ fun6(C,B):3
     [B>=2,B=C+2,B=A+1] 
* CE 122: markfun13(A,A) = 1+ fun6(B,A):4
     [A>=1,A=B+1] 
* CE 123: markfun13(A,B) = 1+ fun12fun9(C,D):1
     [D=2,C=0,B=2,A=1] 
* CE 124: markfun13(A,A) = 1+ fun12fun9(B,A):2
     [A>=1,A=B+1] 
* CE 125: markfun13(A,B) = 1+ fun12fun9(C,B):3
     [C+2>=B,B>=1,C>=1,C+1=A] 
* CE 126: markfun13(A,B) = 1
     [B=0,A=1] 
* CE 127: markfun13(A,B) = 1
     [B=0,A=0] 
* CE 128: markfun13(A,B) = 2+ markfun13(C,D)
     [B+C>=A,A>=C+1,C>=0,B+C=A+D] 
* CE 129: markfun13(A,B) = 1+ markfun13(C,D)
     [A+D>=B,B>=D+1,A+D=B+C] 
* CE 130: markfun13(A,B) = 1+ markfun13(C,D)+ fun1(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 131: markfun13(A,B) = 1+ markfun13(C,D)+ fun1(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 132: markfun13(A,B) = 1+ markfun13(C,D)+ fun2(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 133: markfun13(A,B) = 1+ markfun13(C,D)+ fun2(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 134: markfun13(A,B) = 1+ markfun13(C,D)+ fun3(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 135: markfun13(A,B) = 1+ markfun13(C,D)+ fun3(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 136: markfun13(A,B) = 1+ markfun13(C,D)+ fun5(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 137: markfun13(A,B) = 1+ markfun13(C,D)+ fun5(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 138: markfun13(A,B) = 1+ markfun13(C,D)+ fun8(E,F):1
     [C>=0,C+1=A,D=2,F=2,E=2,B=2] 
* CE 139: markfun13(A,B) = 1+ markfun13(C,D)+ fun8(E,B):2
     [C>=0,B>=1,B=D+1,B=E+1,C+1=A] 
* CE 140: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):1
     [C>=0,B>=3,B+C=A+2,D=2,F=2,E=0] 
* CE 141: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):2
     [B>=F+1,C>=0,F>=1,B+C=A+1,F=E+1,D=2] 
* CE 142: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):3
     [E+2>=F,B>=F+1,C>=0,F>=1,E>=1,B+E+C=A+F,D=2] 
* CE 143: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):1+ fun8(G,H):1
     [C>=0,C+1=A,D=2,H=2,G=2,F=2,E=0,B=2] 
* CE 144: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):1+ fun8(G,H):2
     [C>=0,C+1=A,D=2,H=3,G=2,F=2,E=0,B=3] 
* CE 145: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):2+ fun8(G,H):1
     [C>=0,C+2=A,D=2,H=2,G=2,F=2,E=1,B=2] 
* CE 146: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):2+ fun8(G,B):2
     [C>=0,B>=2,B+C=A+1,B=G+1,B=F+1,B=E+2,D=2] 
* CE 147: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):3+ fun8(G,H):1
     [C>=0,E>=1,E+C+1=A,D=2,H=2,G=2,F=2,B=2] 
* CE 148: markfun13(A,B) = 2+ markfun13(C,D)+ fun12fun9(E,F):3+ fun8(G,B):2
     [E+3>=B,C>=0,B>=2,E>=1,E+C+1=A,B=G+1,B=F+1,D=2] 
* CE 149: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):1+ fun5(G,H):2
     [C>=0,C+1=A,D=2,H=4,G=3,F=3,E=0,B=4] 
* CE 150: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):2+ fun5(G,H):1
     [C>=0,E>=1,E+C+1=A,D=2,H=2,G=2,F=2,B=2] 
* CE 151: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):2+ fun5(G,B):2
     [E+4>=B,C>=0,B>=3,E>=1,E+C+1=A,B=G+1,B=F+1,D=2] 
* CE 152: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):3+ fun5(G,H):1
     [C>=0,C+1=A,D=2,H=2,G=2,F=2,E=0,B=2] 
* CE 153: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):3+ fun5(G,B):2
     [C>=0,B>=3,B+C=A+2,B=G+1,B=F+1,B=E+3,D=2] 
* CE 154: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):4+ fun5(G,H):1
     [C>=0,C+2=A,D=2,H=2,G=2,F=2,E=1,B=2] 
* CE 155: markfun13(A,B) = 2+ markfun13(C,D)+ fun6(E,F):4+ fun5(G,B):2
     [C>=0,B>=2,B+C=A+1,B=G+1,B=F+1,B=E+2,D=2] 
* CE 156: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,F):1+ markfun13(G,H)+ markfun13(H,I)
     [I+1=B,G=0,F=2,E=0,D=2,C=0,A=1] 
* CE 157: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,F):2+ markfun13(G,H)+ markfun13(H,I)
     [I+1=B,G=0,F=2,E=1,D=2,C=0,A=2] 
* CE 158: markfun13(A,B) = 3+ fun12fun9(C,D):1+ fun12fun9(E,F):3+ markfun13(G,H)+ markfun13(H,I)
     [E>=1,I+1=B,E+1=A,G=0,F=2,D=2,C=0] 
* CE 159: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):1+ markfun13(G,H)+ markfun13(H,I)
     [I+1=B,G=1,F=2,E=0,D=2,C=1,A=2] 
* CE 160: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):2+ markfun13(G,H)+ markfun13(H,I)
     [I+1=B,G=1,F=2,E=1,D=2,C=1,A=3] 
* CE 161: markfun13(A,B) = 3+ fun12fun9(C,D):2+ fun12fun9(E,F):3+ markfun13(G,H)+ markfun13(H,I)
     [E>=1,I+1=B,E+2=A,G=1,F=2,D=2,C=1] 
* CE 162: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):1+ markfun13(C,G)+ markfun13(G,H)
     [C>=1,H+1=B,C+1=A,F=2,E=0,D=2] 
* CE 163: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):2+ markfun13(C,G)+ markfun13(G,H)
     [C>=1,H+1=B,C+2=A,F=2,E=1,D=2] 
* CE 164: markfun13(A,B) = 3+ fun12fun9(C,D):3+ fun12fun9(E,F):3+ markfun13(C,G)+ markfun13(G,H)
     [E>=1,C>=1,C+E+1=A,H+1=B,F=2,D=2] 
* CE 165: markfun13(A,B) = 1+ markfun13(C,D)+ markfun13(D,B)
     [C>=0,C+1=A] 
* CE 166: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):1+ markfun13(G,H)+ markfun13(H,I)
     [G>=0,C>=0,C+G+1=A,I+1=B,D=2,F=2,E=0] 
* CE 167: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):2+ markfun13(G,H)+ markfun13(H,I)
     [G>=0,C>=0,C+G+2=A,I+1=B,D=2,F=2,E=1] 
* CE 168: markfun13(A,B) = 3+ markfun13(C,D)+ fun12fun9(E,F):3+ markfun13(G,H)+ markfun13(H,I)
     [G>=0,C>=0,E>=1,E+C+G+1=A,I+1=B,D=2,F=2] 
* CE 169: markfun13(A,B) = 2+ markfun13(C,D)+ markfun13(E,F)+ markfun13(F,G)
     [E>=0,C>=0,C+E+1=A,G+1=B,D=2] 

### Cost equations --> "Loop" of markfun13/2 
* CEs [166,169] --> Loop 61 
* CEs [167,168] --> Loop 62 
* CEs [165] --> Loop 63 
* CEs [163] --> Loop 64 
* CEs [160,161,164] --> Loop 65 
* CEs [159,162] --> Loop 66 
* CEs [157,158] --> Loop 67 
* CEs [156] --> Loop 68 
* CEs [131,133,135,137,139] --> Loop 69 
* CEs [151] --> Loop 70 
* CEs [149] --> Loop 71 
* CEs [128,129,140,144,153] --> Loop 72 
* CEs [130,132,134,136,138,141,143,146,152,155] --> Loop 73 
* CEs [142,145,147,148,150,154] --> Loop 74 
* CEs [108] --> Loop 75 
* CEs [104,109] --> Loop 76 
* CEs [103] --> Loop 77 
* CEs [112,113,115,118,120] --> Loop 78 
* CEs [105,125] --> Loop 79 
* CEs [107,110,116,119] --> Loop 80 
* CEs [102,111,114,117,121,123] --> Loop 81 
* CEs [106,122,124] --> Loop 82 
* CEs [126] --> Loop 83 
* CEs [127] --> Loop 84 

#### Loops of markfun13/2 
* Loop 61: markfun13(A,B)->  markfun13(A',B')  markfun13(A'2,B'2)  markfun13(B'2,A'3)
                  [A>=A'+1,A'>=0,A'+A'2+1=A,B=A'3+1,B'=2] 
* Loop 62: markfun13(A,B)->  markfun13(A',B')  markfun13(A'2,B'2)  markfun13(B'2,A'3)
                  [A>=A'+A'2+2,A'2>=0,A'>=0,B=A'3+1,B'=2] 
* Loop 63: markfun13(A,B)->  markfun13(A',B')  markfun13(B',B)
                  [A>=1,A=A'+1] 
* Loop 64: markfun13(A,B)->  markfun13(A',B')  markfun13(B',A'2)
                  [A>=3,B=A'2+1,A=A'+2] 
* Loop 65: markfun13(A,B)->  markfun13(A',B')  markfun13(B',A'2)
                  [A>=A'+2,A'>=1,B=A'2+1] 
* Loop 66: markfun13(A,B)->  markfun13(A',B')  markfun13(B',A'2)
                  [A>=2,B=A'2+1,A=A'+1] 
* Loop 67: markfun13(A,B)->  markfun13(A',B')  markfun13(B',A'2)
                  [A>=2,B=A'2+1,A'=0] 
* Loop 68: markfun13(A,B)->  markfun13(A',B')  markfun13(B',A'2)
                  [B=A'2+1,A'=0,A=1] 
* Loop 69: markfun13(A,B)->  markfun13(A',B')
                  [B>=1,A>=1,B=B'+1,A=A'+1] 
* Loop 70: markfun13(A,B)->  markfun13(A',B')
                  [A+3>=B+A',A>=A'+2,A'>=0,B>=3,B'=2] 
* Loop 71: markfun13(A,B)->  markfun13(A',B')
                  [A>=1,A=A'+1,B'=2,B=4] 
* Loop 72: markfun13(A,B)->  markfun13(A',B')
                  [A>=A'+1,A'>=0,B+A'=A+B'] 
* Loop 73: markfun13(A,B)->  markfun13(A',B')
                  [A+1>=B,B>=2,B+A'=A+1,B'=2] 
* Loop 74: markfun13(A,B)->  markfun13(A',B')
                  [A+2>=B+A',A>=A'+2,A'>=0,B>=2,B'=2] 
* Loop 75: markfun13(A,B) [2*A>=B,B>=A+1] 
* Loop 76: markfun13(A,B) [2*A+1>=B,B>=A+1,A>=2] 
* Loop 77: markfun13(A,B) [B=3,A=3] 
* Loop 78: markfun13(A,B) [A+2>=B,B>=2,A>=2] 
* Loop 79: markfun13(A,B) [A+1>=B,B>=1,A>=2] 
* Loop 80: markfun13(A,B) [A>=1,A+2=B] 
* Loop 81: markfun13(A,B) [A>=0,A+1=B] 
* Loop 82: markfun13(A,A) [A>=1] 
* Loop 83: markfun13(A,B) [B=0,A=1] 
* Loop 84: markfun13(A,B) [B=0,A=0] 

### Ranking functions of CR markfun13(A,B) 

#### Partial ranking functions of CR markfun13(A,B) 
* Partial RF of phase [61,62,63,64,65,66,67,68,69,70,71,72,73,74]:
  - RF of loop [61:1,61:2,63:1,68:1,69:1,71:1,72:1,73:1]:
    A depends on loops [61:3,62:3,63:2,64:2,65:2,66:2,67:2,68:2] 
  - RF of loop [62:1,62:2,66:1,67:1,70:1,74:1]:
    A-1 depends on loops [61:3,62:3,63:2,64:2,65:2,66:2,67:2,68:2] 
  - RF of loop [64:1,65:1]:
    A/2-1 depends on loops [61:3,62:3,63:2,64:2,65:2,66:2,67:2,68:2] 


### Resulting Chains:markfun13(A,B) 
* [multiple([61,62,63,64,65,66,67,68,69,70,71,72,73,74],[[],[84],[83],[82],[81],[80],[79],[78],[77],[76],[75]])]...
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]


### Merging Chains  markfun13/2 into  External patterns of execution 
* [[84]] --> 1 
* [[83]] --> 2 
* [[77],[82]] --> 3 
* [[80]] --> 4 
* [[81]] --> 5 
* [[79]] --> 6 
* [[78]] --> 7 
* [[76]] --> 8 
* [[75]] --> 9 
* [[multiple([61,62,63,64,65,66,67,68,69,70,71,72,73,74],[[],[84],[83],[82],[81],[80],[79],[78],[77],[76],[75]])]] --> 10 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [170] 
* CE 3 is refined into CE [171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362] 
* CE 4 is refined into CE [363,364,365] 
* CE 5 is refined into CE [366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429] 
* CE 6 is refined into CE [430,431,432,433,434,435] 
* CE 7 is refined into CE [436,437,438,439,440,441,442] 
* CE 8 is refined into CE [443,444] 
* CE 9 is refined into CE [445,446] 
* CE 10 is refined into CE [447,448] 
* CE 11 is refined into CE [449,450] 
* CE 12 is refined into CE [451,452] 
* CE 13 is refined into CE [453,454] 
* CE 14 is refined into CE [455,456,457] 
* CE 15 is refined into CE [458,459,460,461] 
* CE 16 is refined into CE [462,463,464,465,466,467,468,469,470,471] 


#### Refined cost equations start/3 
* CE 170: start(V3,V4,V5) = 1
     [V4>=0,V3>=0] 
* CE 171: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):1+ markfun13(A6,B6):1
     [B6=0,A6=0,Z5=0,Y5=0,X5=2,W5=0,V5=0,V4=0,V3=2] 
* CE 172: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):1+ markfun13(A6,B6):5
     [B6=1,A6=0,Z5=0,Y5=0,X5=2,W5=0,V5=0,V4=0,V3=2] 
* CE 173: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):2+ markfun13(A6,B6):1
     [B6=0,A6=0,Z5=0,Y5=1,X5=2,W5=0,V5=0,V4=1,V3=2] 
* CE 174: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):2+ markfun13(A6,B6):5
     [B6=1,A6=0,Z5=0,Y5=1,X5=2,W5=0,V5=0,V4=1,V3=2] 
* CE 175: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):3+ markfun13(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=1,X5=2,W5=0,V5=0,V4=1,V3=2] 
* CE 176: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,V4):3
     [V4>=1,X5=2,W5=0,V5=0,V3=2] 
* CE 177: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):3+ markfun13(A6,B6):4
     [B6>=3,B6=A6+2,B6=Z5+2,B6=Y5+2,B6=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 178: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):3+ markfun13(A6,B6):5
     [B6>=2,B6=A6+1,B6=Z5+1,B6=Y5+1,B6=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 179: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,Y5):6
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 180: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,Y5):7
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 181: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,Y5):8
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 182: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,Y5):9
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 183: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,V4):3+ markfun13(V4,Y5):10
     [V4>=1,X5=2,W5=0,V5=0,V3=2] 
* CE 184: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,Z5):3
     [Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 185: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(A6,B6):4
     [B6>=5,B6=A6+2,B6=Z5+2,B6=Y5+4,B6=V4+4,X5=2,W5=0,V5=0,V3=2] 
* CE 186: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(A6,B6):5
     [B6>=4,B6=A6+1,B6=Z5+1,B6=Y5+3,B6=V4+3,X5=2,W5=0,V5=0,V3=2] 
* CE 187: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):6
     [Z5+1>=A6,A6>=1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 188: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):7
     [Z5+2>=A6,A6>=2,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 189: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):8
     [2*Z5+1>=A6,A6>=Z5+1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 190: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):9
     [2*Z5>=A6,A6>=Z5+1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 191: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):10
     [Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 192: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=0,X5=2,W5=0,V5=0,V4=0,V3=2] 
* CE 193: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,Z5):3
     [Z5>=1,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 194: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(A6,B6):4
     [B6>=3,B6=A6+2,B6=Z5+2,B6=Y5+3,B6=V4+3,X5=2,W5=0,V5=0,V3=2] 
* CE 195: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(A6,B6):5
     [B6>=2,B6=A6+1,B6=Z5+1,B6=Y5+2,B6=V4+2,X5=2,W5=0,V5=0,V3=2] 
* CE 196: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):6
     [Z5+1>=A6,A6>=1,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 197: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):7
     [Z5+2>=A6,A6>=2,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 198: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):8
     [2*Z5+1>=A6,A6>=Z5+1,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 199: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):9
     [2*Z5>=A6,A6>=Z5+1,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 200: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):10
     [Z5>=1,Z5=Y5+1,Z5=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 201: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Z5,A6):2
     [V4>=2,A6=0,Z5=1,Y5=1,X5=2,W5=0,V5=0,V3=2] 
* CE 202: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Y5):3
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 203: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Z5,A6):4
     [V4+3>=A6,A6>=3,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=0,V5=0,V3=2] 
* CE 204: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Z5,A6):5
     [V4+2>=A6,A6>=2,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=0,V5=0,V3=2] 
* CE 205: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,V4+1>=Y5,Z5>=1,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 206: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,V4+1>=Y5,Z5>=2,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 207: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,V4+1>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 208: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,V4+1>=Y5,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 209: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):10
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 210: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Y5):3
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 211: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Z5,A6):4
     [V4+4>=A6,A6>=4,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=0,V5=0,V3=2] 
* CE 212: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Z5,A6):5
     [V4+3>=A6,A6>=3,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=0,V5=0,V3=2] 
* CE 213: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,V4+2>=Y5,Z5>=1,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 214: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,V4+2>=Y5,Z5>=2,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 215: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 216: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 217: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):10
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 218: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Y5):3
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 219: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Z5,A6):4
     [2*V4+3>=A6,A6>=V4+3,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=0,V5=0,V3=2] 
* CE 220: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Z5,A6):5
     [2*V4+2>=A6,A6>=V4+2,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=0,V5=0,V3=2] 
* CE 221: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,2*V4+1>=Y5,Y5>=V4+1,Z5>=1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 222: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,2*V4+1>=Y5,Y5>=V4+1,Z5>=2,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 223: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,2*V4+1>=Y5,Z5>=Y5+1,Y5>=V4+1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 224: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,2*V4+1>=Y5,Z5>=Y5+1,Y5>=V4+1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 225: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):10
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 226: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Y5):3
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 227: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Z5,A6):4
     [2*V4+2>=A6,A6>=V4+3,A6=Z5+2,A6=Y5+2,X5=2,W5=0,V5=0,V3=2] 
* CE 228: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Z5,A6):5
     [2*V4+1>=A6,A6>=V4+2,A6=Z5+1,A6=Y5+1,X5=2,W5=0,V5=0,V3=2] 
* CE 229: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,2*V4>=Y5,Y5>=V4+1,Z5>=1,X5=2,W5=0,V5=0,V3=2] 
* CE 230: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,2*V4>=Y5,Y5>=V4+1,Z5>=2,X5=2,W5=0,V5=0,V3=2] 
* CE 231: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,2*V4>=Y5,Z5>=Y5+1,Y5>=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 232: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,2*V4>=Y5,Z5>=Y5+1,Y5>=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 233: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):10
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=0,V5=0,V3=2] 
* CE 234: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1+ markfun13(V4,Y5):10
     [V4>=1,X5=2,W5=0,V5=0,V3=2] 
* CE 235: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):1+ markfun13(A6,B6):1
     [B6=0,A6=0,Z5=0,Y5=0,X5=2,W5=1,V5=1,V4=0,V3=2] 
* CE 236: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):1+ markfun13(A6,B6):5
     [B6=1,A6=0,Z5=0,Y5=0,X5=2,W5=1,V5=1,V4=0,V3=2] 
* CE 237: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):2+ markfun13(A6,B6):1
     [B6=0,A6=0,Z5=0,Y5=1,X5=2,W5=1,V5=1,V4=1,V3=2] 
* CE 238: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):2+ markfun13(A6,B6):5
     [B6=1,A6=0,Z5=0,Y5=1,X5=2,W5=1,V5=1,V4=1,V3=2] 
* CE 239: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):3+ markfun13(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=1,X5=2,W5=1,V5=1,V4=1,V3=2] 
* CE 240: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,V4):3
     [V4>=1,X5=2,W5=1,V5=1,V3=2] 
* CE 241: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):3+ markfun13(A6,B6):4
     [B6>=3,B6=A6+2,B6=Z5+2,B6=Y5+2,B6=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 242: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):3+ markfun13(A6,B6):5
     [B6>=2,B6=A6+1,B6=Z5+1,B6=Y5+1,B6=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 243: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,Y5):6
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 244: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,Y5):7
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 245: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,Y5):8
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 246: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,Y5):9
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 247: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,V4):3+ markfun13(V4,Y5):10
     [V4>=1,X5=2,W5=1,V5=1,V3=2] 
* CE 248: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,Z5):3
     [Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 249: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(A6,B6):4
     [B6>=5,B6=A6+2,B6=Z5+2,B6=Y5+4,B6=V4+4,X5=2,W5=1,V5=1,V3=2] 
* CE 250: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(A6,B6):5
     [B6>=4,B6=A6+1,B6=Z5+1,B6=Y5+3,B6=V4+3,X5=2,W5=1,V5=1,V3=2] 
* CE 251: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):6
     [Z5+1>=A6,A6>=1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 252: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):7
     [Z5+2>=A6,A6>=2,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 253: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):8
     [2*Z5+1>=A6,A6>=Z5+1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 254: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):9
     [2*Z5>=A6,A6>=Z5+1,Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 255: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):4+ markfun13(Z5,A6):10
     [Z5>=3,Z5=Y5+2,Z5=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 256: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(A6,B6):2
     [B6=0,A6=1,Z5=1,Y5=0,X5=2,W5=1,V5=1,V4=0,V3=2] 
* CE 257: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,Z5):3
     [Z5>=1,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 258: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(A6,B6):4
     [B6>=3,B6=A6+2,B6=Z5+2,B6=Y5+3,B6=V4+3,X5=2,W5=1,V5=1,V3=2] 
* CE 259: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(A6,B6):5
     [B6>=2,B6=A6+1,B6=Z5+1,B6=Y5+2,B6=V4+2,X5=2,W5=1,V5=1,V3=2] 
* CE 260: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):6
     [Z5+1>=A6,A6>=1,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 261: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):7
     [Z5+2>=A6,A6>=2,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 262: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):8
     [2*Z5+1>=A6,A6>=Z5+1,Z5>=2,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 263: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):9
     [2*Z5>=A6,A6>=Z5+1,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 264: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(Y5,Z5):5+ markfun13(Z5,A6):10
     [Z5>=1,Z5=Y5+1,Z5=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 265: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Z5,A6):2
     [V4>=2,A6=0,Z5=1,Y5=1,X5=2,W5=1,V5=1,V3=2] 
* CE 266: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Y5):3
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 267: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Z5,A6):4
     [V4+3>=A6,A6>=3,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=1,V5=1,V3=2] 
* CE 268: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Z5,A6):5
     [V4+2>=A6,A6>=2,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=1,V5=1,V3=2] 
* CE 269: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,V4+1>=Y5,Z5>=1,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 270: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,V4+1>=Y5,Z5>=2,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 271: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,V4+1>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 272: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,V4+1>=Y5,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 273: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):6+ markfun13(Y5,Z5):10
     [V4+1>=Y5,Y5>=1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 274: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Y5):3
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 275: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Z5,A6):4
     [V4+4>=A6,A6>=4,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=1,V5=1,V3=2] 
* CE 276: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Z5,A6):5
     [V4+3>=A6,A6>=3,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=1,V5=1,V3=2] 
* CE 277: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,V4+2>=Y5,Z5>=1,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 278: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,V4+2>=Y5,Z5>=2,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 279: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 280: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 281: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):7+ markfun13(Y5,Z5):10
     [V4+2>=Y5,Y5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 282: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Y5):3
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 283: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Z5,A6):4
     [2*V4+3>=A6,A6>=V4+3,V4>=2,A6=Z5+2,A6=Y5+2,X5=2,W5=1,V5=1,V3=2] 
* CE 284: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Z5,A6):5
     [2*V4+2>=A6,A6>=V4+2,V4>=2,A6=Z5+1,A6=Y5+1,X5=2,W5=1,V5=1,V3=2] 
* CE 285: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,2*V4+1>=Y5,Y5>=V4+1,Z5>=1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 286: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,2*V4+1>=Y5,Y5>=V4+1,Z5>=2,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 287: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,2*V4+1>=Y5,Z5>=Y5+1,Y5>=V4+1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 288: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,2*V4+1>=Y5,Z5>=Y5+1,Y5>=V4+1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 289: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):8+ markfun13(Y5,Z5):10
     [2*V4+1>=Y5,Y5>=V4+1,V4>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 290: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Y5):3
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 291: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Z5,A6):4
     [2*V4+2>=A6,A6>=V4+3,A6=Z5+2,A6=Y5+2,X5=2,W5=1,V5=1,V3=2] 
* CE 292: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Z5,A6):5
     [2*V4+1>=A6,A6>=V4+2,A6=Z5+1,A6=Y5+1,X5=2,W5=1,V5=1,V3=2] 
* CE 293: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,2*V4>=Y5,Y5>=V4+1,Z5>=1,X5=2,W5=1,V5=1,V3=2] 
* CE 294: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,2*V4>=Y5,Y5>=V4+1,Z5>=2,X5=2,W5=1,V5=1,V3=2] 
* CE 295: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,2*V4>=Y5,Z5>=Y5+1,Y5>=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 296: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,2*V4>=Y5,Z5>=Y5+1,Y5>=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 297: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):9+ markfun13(Y5,Z5):10
     [2*V4>=Y5,Y5>=V4+1,X5=2,W5=1,V5=1,V3=2] 
* CE 298: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2+ markfun13(V4,Y5):10
     [V4>=1,X5=2,W5=1,V5=1,V3=2] 
* CE 299: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):1+ markfun13(Z5,A6):1
     [V5>=1,A6=0,Z5=0,Y5=0,X5=0,W5=2,V4=0,V3=2] 
* CE 300: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):1+ markfun13(Z5,A6):5
     [V5>=1,A6=1,Z5=0,Y5=0,X5=0,W5=2,V4=0,V3=2] 
* CE 301: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):2+ markfun13(Z5,A6):1
     [V5>=1,A6=0,Z5=0,Y5=0,X5=1,W5=2,V4=1,V3=2] 
* CE 302: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):2+ markfun13(Z5,A6):5
     [V5>=1,A6=1,Z5=0,Y5=0,X5=1,W5=2,V4=1,V3=2] 
* CE 303: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):3+ markfun13(Z5,A6):2
     [V5>=1,A6=0,Z5=1,Y5=1,X5=1,W5=2,V4=1,V3=2] 
* CE 304: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,V4):3
     [V4>=1,V5>=1,W5=2,V3=2] 
* CE 305: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):3+ markfun13(Z5,A6):4
     [A6>=3,V5>=1,A6=Z5+2,A6=Y5+2,A6=X5+2,A6=V4+2,W5=2,V3=2] 
* CE 306: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):3+ markfun13(Z5,A6):5
     [A6>=2,V5>=1,A6=Z5+1,A6=Y5+1,A6=X5+1,A6=V4+1,W5=2,V3=2] 
* CE 307: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,X5):6
     [V4+1>=X5,X5>=1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 308: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,X5):7
     [V4+2>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 309: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,X5):8
     [2*V4+1>=X5,X5>=V4+1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 310: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,X5):9
     [2*V4>=X5,X5>=V4+1,V5>=1,W5=2,V3=2] 
* CE 311: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,V4):3+ markfun13(V4,X5):10
     [V4>=1,V5>=1,W5=2,V3=2] 
* CE 312: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Y5):3
     [Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 313: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Z5,A6):4
     [A6>=5,V5>=1,A6=Z5+2,A6=Y5+2,A6=X5+4,A6=V4+4,W5=2,V3=2] 
* CE 314: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Z5,A6):5
     [A6>=4,V5>=1,A6=Z5+1,A6=Y5+1,A6=X5+3,A6=V4+3,W5=2,V3=2] 
* CE 315: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,Z5>=1,Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 316: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,Z5>=2,Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 317: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 318: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 319: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):4+ markfun13(Y5,Z5):10
     [Y5>=3,V5>=1,Y5=X5+2,Y5=V4+2,W5=2,V3=2] 
* CE 320: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Z5,A6):2
     [V5>=1,A6=0,Z5=1,Y5=1,X5=0,W5=2,V4=0,V3=2] 
* CE 321: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Y5):3
     [Y5>=1,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 322: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Z5,A6):4
     [A6>=3,V5>=1,A6=Z5+2,A6=Y5+2,A6=X5+3,A6=V4+3,W5=2,V3=2] 
* CE 323: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Z5,A6):5
     [A6>=2,V5>=1,A6=Z5+1,A6=Y5+1,A6=X5+2,A6=V4+2,W5=2,V3=2] 
* CE 324: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Z5):6
     [Y5+1>=Z5,Z5>=1,Y5>=2,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 325: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Z5):7
     [Y5+2>=Z5,Z5>=2,Y5>=2,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 326: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Z5):8
     [2*Y5+1>=Z5,Z5>=Y5+1,Y5>=2,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 327: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Z5):9
     [2*Y5>=Z5,Z5>=Y5+1,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 328: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(X5,Y5):5+ markfun13(Y5,Z5):10
     [Y5>=1,V5>=1,Y5=X5+1,Y5=V4+1,W5=2,V3=2] 
* CE 329: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(Y5,Z5):2
     [V4>=2,V5>=1,Z5=0,Y5=1,X5=1,W5=2,V3=2] 
* CE 330: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,X5):3
     [V4+1>=X5,X5>=1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 331: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(Y5,Z5):4
     [V4+3>=Z5,Z5>=3,V4>=2,V5>=1,Z5=Y5+2,Z5=X5+2,W5=2,V3=2] 
* CE 332: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(Y5,Z5):5
     [V4+2>=Z5,Z5>=2,V4>=2,V5>=1,Z5=Y5+1,Z5=X5+1,W5=2,V3=2] 
* CE 333: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,Y5):6
     [X5+1>=Y5,V4+1>=X5,Y5>=1,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 334: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,Y5):7
     [X5+2>=Y5,V4+1>=X5,Y5>=2,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 335: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,Y5>=X5+1,V4+1>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 336: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,Y5):9
     [2*X5>=Y5,Y5>=X5+1,V4+1>=X5,V4>=2,V5>=1,W5=2,V3=2] 
* CE 337: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):6+ markfun13(X5,Y5):10
     [V4+1>=X5,X5>=1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 338: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,X5):3
     [V4+2>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 339: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(Y5,Z5):4
     [V4+4>=Z5,Z5>=4,V4>=2,V5>=1,Z5=Y5+2,Z5=X5+2,W5=2,V3=2] 
* CE 340: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(Y5,Z5):5
     [V4+3>=Z5,Z5>=3,V4>=2,V5>=1,Z5=Y5+1,Z5=X5+1,W5=2,V3=2] 
* CE 341: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,Y5):6
     [X5+1>=Y5,V4+2>=X5,Y5>=1,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 342: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,Y5):7
     [X5+2>=Y5,V4+2>=X5,Y5>=2,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 343: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,Y5>=X5+1,V4+2>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 344: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,Y5):9
     [2*X5>=Y5,Y5>=X5+1,V4+2>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 345: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):7+ markfun13(X5,Y5):10
     [V4+2>=X5,X5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 346: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,X5):3
     [2*V4+1>=X5,X5>=V4+1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 347: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(Y5,Z5):4
     [2*V4+3>=Z5,Z5>=V4+3,V4>=2,V5>=1,Z5=Y5+2,Z5=X5+2,W5=2,V3=2] 
* CE 348: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(Y5,Z5):5
     [2*V4+2>=Z5,Z5>=V4+2,V4>=2,V5>=1,Z5=Y5+1,Z5=X5+1,W5=2,V3=2] 
* CE 349: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,Y5):6
     [X5+1>=Y5,2*V4+1>=X5,X5>=V4+1,Y5>=1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 350: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,Y5):7
     [X5+2>=Y5,2*V4+1>=X5,X5>=V4+1,Y5>=2,V4>=2,V5>=1,W5=2,V3=2] 
* CE 351: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,2*V4+1>=X5,Y5>=X5+1,X5>=V4+1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 352: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,Y5):9
     [2*X5>=Y5,2*V4+1>=X5,Y5>=X5+1,X5>=V4+1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 353: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):8+ markfun13(X5,Y5):10
     [2*V4+1>=X5,X5>=V4+1,V4>=2,V5>=1,W5=2,V3=2] 
* CE 354: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,X5):3
     [2*V4>=X5,X5>=V4+1,V5>=1,W5=2,V3=2] 
* CE 355: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(Y5,Z5):4
     [2*V4+2>=Z5,Z5>=V4+3,V5>=1,Z5=Y5+2,Z5=X5+2,W5=2,V3=2] 
* CE 356: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(Y5,Z5):5
     [2*V4+1>=Z5,Z5>=V4+2,V5>=1,Z5=Y5+1,Z5=X5+1,W5=2,V3=2] 
* CE 357: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,Y5):6
     [X5+1>=Y5,2*V4>=X5,X5>=V4+1,Y5>=1,V5>=1,W5=2,V3=2] 
* CE 358: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,Y5):7
     [X5+2>=Y5,2*V4>=X5,X5>=V4+1,Y5>=2,V5>=1,W5=2,V3=2] 
* CE 359: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,2*V4>=X5,Y5>=X5+1,X5>=V4+1,V5>=1,W5=2,V3=2] 
* CE 360: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,Y5):9
     [2*X5>=Y5,2*V4>=X5,Y5>=X5+1,X5>=V4+1,V5>=1,W5=2,V3=2] 
* CE 361: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):9+ markfun13(X5,Y5):10
     [2*V4>=X5,X5>=V4+1,V5>=1,W5=2,V3=2] 
* CE 362: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3+ markfun13(V4,X5):10
     [V4>=1,V5>=1,W5=2,V3=2] 
* CE 363: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):1
     [V4>=0,X5=2,W5=0,V5=0,V3=2] 
* CE 364: start(V3,V4,V5) = 2+ fun12fun9(W5,X5):2
     [X5>=1,V4>=0,X5=W5+1,X5=V5+1,V3=2] 
* CE 365: start(V3,V4,V5) = 2+ fun12fun9(V5,W5):3
     [V5+2>=W5,W5>=1,V5>=1,V4>=0,V3=2] 
* CE 366: start(V3,V4,V5) = 1+ markfun13(W5,X5):1+ markfun13(Y5,Z5):1
     [Z5=0,Y5=0,X5=0,W5=0,V4=0,V3=2] 
* CE 367: start(V3,V4,V5) = 1+ markfun13(W5,X5):1+ markfun13(Y5,Z5):5
     [Z5=1,Y5=0,X5=0,W5=0,V4=0,V3=2] 
* CE 368: start(V3,V4,V5) = 1+ markfun13(W5,X5):2+ markfun13(Y5,Z5):1
     [Z5=0,Y5=0,X5=0,W5=1,V4=1,V3=2] 
* CE 369: start(V3,V4,V5) = 1+ markfun13(W5,X5):2+ markfun13(Y5,Z5):5
     [Z5=1,Y5=0,X5=0,W5=1,V4=1,V3=2] 
* CE 370: start(V3,V4,V5) = 1+ markfun13(W5,X5):3+ markfun13(Y5,Z5):2
     [Z5=0,Y5=1,X5=1,W5=1,V4=1,V3=2] 
* CE 371: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,V4):3
     [V4>=1,V3=2] 
* CE 372: start(V3,V4,V5) = 1+ markfun13(W5,X5):3+ markfun13(Y5,Z5):4
     [Z5>=3,Z5=Y5+2,Z5=X5+2,Z5=W5+2,Z5=V4+2,V3=2] 
* CE 373: start(V3,V4,V5) = 1+ markfun13(W5,X5):3+ markfun13(Y5,Z5):5
     [Z5>=2,Z5=Y5+1,Z5=X5+1,Z5=W5+1,Z5=V4+1,V3=2] 
* CE 374: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,W5):6
     [V4+1>=W5,W5>=1,V4>=2,V3=2] 
* CE 375: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,W5):7
     [V4+2>=W5,W5>=2,V4>=2,V3=2] 
* CE 376: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,W5):8
     [2*V4+1>=W5,W5>=V4+1,V4>=2,V3=2] 
* CE 377: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,W5):9
     [2*V4>=W5,W5>=V4+1,V3=2] 
* CE 378: start(V3,V4,V5) = 1+ markfun13(V4,V4):3+ markfun13(V4,W5):10
     [V4>=1,V3=2] 
* CE 379: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,X5):3
     [X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 380: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(Y5,Z5):4
     [Z5>=5,Z5=Y5+2,Z5=X5+2,Z5=W5+4,Z5=V4+4,V3=2] 
* CE 381: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(Y5,Z5):5
     [Z5>=4,Z5=Y5+1,Z5=X5+1,Z5=W5+3,Z5=V4+3,V3=2] 
* CE 382: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,Y5):6
     [X5+1>=Y5,Y5>=1,X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 383: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,Y5):7
     [X5+2>=Y5,Y5>=2,X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 384: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,Y5>=X5+1,X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 385: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,Y5):9
     [2*X5>=Y5,Y5>=X5+1,X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 386: start(V3,V4,V5) = 1+ markfun13(W5,X5):4+ markfun13(X5,Y5):10
     [X5>=3,X5=W5+2,X5=V4+2,V3=2] 
* CE 387: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(Y5,Z5):2
     [Z5=0,Y5=1,X5=1,W5=0,V4=0,V3=2] 
* CE 388: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,X5):3
     [X5>=1,X5=W5+1,X5=V4+1,V3=2] 
* CE 389: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(Y5,Z5):4
     [Z5>=3,Z5=Y5+2,Z5=X5+2,Z5=W5+3,Z5=V4+3,V3=2] 
* CE 390: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(Y5,Z5):5
     [Z5>=2,Z5=Y5+1,Z5=X5+1,Z5=W5+2,Z5=V4+2,V3=2] 
* CE 391: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,Y5):6
     [X5+1>=Y5,Y5>=1,X5>=2,X5=W5+1,X5=V4+1,V3=2] 
* CE 392: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,Y5):7
     [X5+2>=Y5,Y5>=2,X5>=2,X5=W5+1,X5=V4+1,V3=2] 
* CE 393: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,Y5):8
     [2*X5+1>=Y5,Y5>=X5+1,X5>=2,X5=W5+1,X5=V4+1,V3=2] 
* CE 394: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,Y5):9
     [2*X5>=Y5,Y5>=X5+1,X5=W5+1,X5=V4+1,V3=2] 
* CE 395: start(V3,V4,V5) = 1+ markfun13(W5,X5):5+ markfun13(X5,Y5):10
     [X5>=1,X5=W5+1,X5=V4+1,V3=2] 
* CE 396: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(X5,Y5):2
     [V4>=2,Y5=0,X5=1,W5=1,V3=2] 
* CE 397: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,W5):3
     [V4+1>=W5,W5>=1,V4>=2,V3=2] 
* CE 398: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(X5,Y5):4
     [V4+3>=Y5,Y5>=3,V4>=2,Y5=X5+2,Y5=W5+2,V3=2] 
* CE 399: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(X5,Y5):5
     [V4+2>=Y5,Y5>=2,V4>=2,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 400: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,X5):6
     [W5+1>=X5,V4+1>=W5,X5>=1,W5>=2,V4>=2,V3=2] 
* CE 401: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,X5):7
     [W5+2>=X5,V4+1>=W5,X5>=2,W5>=2,V4>=2,V3=2] 
* CE 402: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,X5):8
     [2*W5+1>=X5,X5>=W5+1,V4+1>=W5,W5>=2,V4>=2,V3=2] 
* CE 403: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,X5):9
     [2*W5>=X5,X5>=W5+1,V4+1>=W5,V4>=2,V3=2] 
* CE 404: start(V3,V4,V5) = 1+ markfun13(V4,W5):6+ markfun13(W5,X5):10
     [V4+1>=W5,W5>=1,V4>=2,V3=2] 
* CE 405: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,W5):3
     [V4+2>=W5,W5>=2,V4>=2,V3=2] 
* CE 406: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(X5,Y5):4
     [V4+4>=Y5,Y5>=4,V4>=2,Y5=X5+2,Y5=W5+2,V3=2] 
* CE 407: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(X5,Y5):5
     [V4+3>=Y5,Y5>=3,V4>=2,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 408: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,X5):6
     [W5+1>=X5,V4+2>=W5,X5>=1,W5>=2,V4>=2,V3=2] 
* CE 409: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,X5):7
     [W5+2>=X5,V4+2>=W5,X5>=2,W5>=2,V4>=2,V3=2] 
* CE 410: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,X5):8
     [2*W5+1>=X5,X5>=W5+1,V4+2>=W5,W5>=2,V4>=2,V3=2] 
* CE 411: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,X5):9
     [2*W5>=X5,X5>=W5+1,V4+2>=W5,W5>=2,V4>=2,V3=2] 
* CE 412: start(V3,V4,V5) = 1+ markfun13(V4,W5):7+ markfun13(W5,X5):10
     [V4+2>=W5,W5>=2,V4>=2,V3=2] 
* CE 413: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,W5):3
     [2*V4+1>=W5,W5>=V4+1,V4>=2,V3=2] 
* CE 414: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(X5,Y5):4
     [2*V4+3>=Y5,Y5>=V4+3,V4>=2,Y5=X5+2,Y5=W5+2,V3=2] 
* CE 415: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(X5,Y5):5
     [2*V4+2>=Y5,Y5>=V4+2,V4>=2,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 416: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,X5):6
     [W5+1>=X5,2*V4+1>=W5,W5>=V4+1,X5>=1,V4>=2,V3=2] 
* CE 417: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,X5):7
     [W5+2>=X5,2*V4+1>=W5,W5>=V4+1,X5>=2,V4>=2,V3=2] 
* CE 418: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,X5):8
     [2*W5+1>=X5,2*V4+1>=W5,X5>=W5+1,W5>=V4+1,V4>=2,V3=2] 
* CE 419: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,X5):9
     [2*W5>=X5,2*V4+1>=W5,X5>=W5+1,W5>=V4+1,V4>=2,V3=2] 
* CE 420: start(V3,V4,V5) = 1+ markfun13(V4,W5):8+ markfun13(W5,X5):10
     [2*V4+1>=W5,W5>=V4+1,V4>=2,V3=2] 
* CE 421: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,W5):3
     [2*V4>=W5,W5>=V4+1,V3=2] 
* CE 422: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(X5,Y5):4
     [2*V4+2>=Y5,Y5>=V4+3,Y5=X5+2,Y5=W5+2,V3=2] 
* CE 423: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(X5,Y5):5
     [2*V4+1>=Y5,Y5>=V4+2,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 424: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,X5):6
     [W5+1>=X5,2*V4>=W5,W5>=V4+1,X5>=1,V3=2] 
* CE 425: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,X5):7
     [W5+2>=X5,2*V4>=W5,W5>=V4+1,X5>=2,V3=2] 
* CE 426: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,X5):8
     [2*W5+1>=X5,2*V4>=W5,X5>=W5+1,W5>=V4+1,V3=2] 
* CE 427: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,X5):9
     [2*W5>=X5,2*V4>=W5,X5>=W5+1,W5>=V4+1,V3=2] 
* CE 428: start(V3,V4,V5) = 1+ markfun13(V4,W5):9+ markfun13(W5,X5):10
     [2*V4>=W5,W5>=V4+1,V3=2] 
* CE 429: start(V3,V4,V5) = 1+ markfun13(V4,W5):10
     [V4>=1,V3=2] 
* CE 430: start(V3,V4,V5) = 1+ fun12fun9(W5,X5):1+ fun8(Y5,Z5):1
     [Z5=2,Y5=2,X5=2,W5=0,V4=0,V3=2] 
* CE 431: start(V3,V4,V5) = 1+ fun12fun9(W5,X5):1+ fun8(Y5,Z5):2
     [Z5=3,Y5=2,X5=2,W5=0,V4=0,V3=2] 
* CE 432: start(V3,V4,V5) = 1+ fun12fun9(W5,X5):2+ fun8(Y5,Z5):1
     [Z5=2,Y5=2,X5=2,W5=1,V4=1,V3=2] 
* CE 433: start(V3,V4,V5) = 1+ fun12fun9(W5,X5):2+ fun8(Y5,Z5):2
     [Z5>=2,Z5=Y5+1,Z5=X5+1,Z5=W5+2,Z5=V4+2,V3=2] 
* CE 434: start(V3,V4,V5) = 1+ fun12fun9(V4,W5):3+ fun8(X5,Y5):1
     [V4>=1,Y5=2,X5=2,W5=2,V3=2] 
* CE 435: start(V3,V4,V5) = 1+ fun12fun9(V4,W5):3+ fun8(X5,Y5):2
     [V4+3>=Y5,Y5>=2,V4>=1,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 436: start(V3,V4,V5) = 1+ fun6(W5,X5):1+ fun5(Y5,Z5):2
     [Z5=4,Y5=3,X5=3,W5=0,V4=0,V3=2] 
* CE 437: start(V3,V4,V5) = 1+ fun6(V4,W5):2+ fun5(X5,Y5):1
     [V4>=1,Y5=2,X5=2,W5=2,V3=2] 
* CE 438: start(V3,V4,V5) = 1+ fun6(V4,W5):2+ fun5(X5,Y5):2
     [V4+4>=Y5,Y5>=3,V4>=1,Y5=X5+1,Y5=W5+1,V3=2] 
* CE 439: start(V3,V4,V5) = 1+ fun6(W5,X5):3+ fun5(Y5,Z5):1
     [Z5=2,Y5=2,X5=2,W5=0,V4=0,V3=2] 
* CE 440: start(V3,V4,V5) = 1+ fun6(W5,X5):3+ fun5(Y5,Z5):2
     [Z5>=3,Z5=Y5+1,Z5=X5+1,Z5=W5+3,Z5=V4+3,V3=2] 
* CE 441: start(V3,V4,V5) = 1+ fun6(W5,X5):4+ fun5(Y5,Z5):1
     [Z5=2,Y5=2,X5=2,W5=1,V4=1,V3=2] 
* CE 442: start(V3,V4,V5) = 1+ fun6(W5,X5):4+ fun5(Y5,Z5):2
     [Z5>=2,Z5=Y5+1,Z5=X5+1,Z5=W5+2,Z5=V4+2,V3=2] 
* CE 443: start(V3,V4,V5) = 0+ fun(W5):1
     [W5=3] 
* CE 444: start(V3,V4,V5) = 0+ fun(W5):2
     [W5=4] 
* CE 445: start(V3,V4,V5) = 0+ fun1(W5,X5):1
     [X5=2,W5=2,V3=2] 
* CE 446: start(V3,V4,V5) = 0+ fun1(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 447: start(V3,V4,V5) = 0+ fun2(W5,X5):1
     [X5=2,W5=2,V3=2] 
* CE 448: start(V3,V4,V5) = 0+ fun2(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 449: start(V3,V4,V5) = 0+ fun3(W5,X5):1
     [X5=2,W5=2,V3=2] 
* CE 450: start(V3,V4,V5) = 0+ fun3(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 451: start(V3,V4,V5) = 0+ fun5(W5,X5):1
     [X5=2,W5=2,V3=2] 
* CE 452: start(V3,V4,V5) = 0+ fun5(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 453: start(V3,V4,V5) = 0+ fun8(W5,X5):1
     [X5=2,W5=2,V3=2] 
* CE 454: start(V3,V4,V5) = 0+ fun8(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 455: start(V3,V4,V5) = 0+ fun12fun9(W5,X5):1
     [X5=2,W5=0,V3=0] 
* CE 456: start(V3,V4,V5) = 0+ fun12fun9(W5,X5):2
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 457: start(V3,V4,V5) = 0+ fun12fun9(V3,W5):3
     [V3+2>=W5,W5>=1,V3>=1] 
* CE 458: start(V3,V4,V5) = 0+ fun6(W5,X5):1
     [X5=3,W5=0,V3=0] 
* CE 459: start(V3,V4,V5) = 0+ fun6(V3,W5):2
     [V3+3>=W5,W5>=2,V3>=1] 
* CE 460: start(V3,V4,V5) = 0+ fun6(W5,X5):3
     [X5>=2,X5=W5+2,X5=V3+2] 
* CE 461: start(V3,V4,V5) = 0+ fun6(W5,X5):4
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 462: start(V3,V4,V5) = 0+ markfun13(W5,X5):1
     [X5=0,W5=0,V3=0] 
* CE 463: start(V3,V4,V5) = 0+ markfun13(W5,X5):2
     [X5=0,W5=1,V3=1] 
* CE 464: start(V3,V4,V5) = 0+ markfun13(V3,V3):3
     [V3>=1] 
* CE 465: start(V3,V4,V5) = 0+ markfun13(W5,X5):4
     [X5>=3,X5=W5+2,X5=V3+2] 
* CE 466: start(V3,V4,V5) = 0+ markfun13(W5,X5):5
     [X5>=1,X5=W5+1,X5=V3+1] 
* CE 467: start(V3,V4,V5) = 0+ markfun13(V3,W5):6
     [V3+1>=W5,W5>=1,V3>=2] 
* CE 468: start(V3,V4,V5) = 0+ markfun13(V3,W5):7
     [V3+2>=W5,W5>=2,V3>=2] 
* CE 469: start(V3,V4,V5) = 0+ markfun13(V3,W5):8
     [2*V3+1>=W5,W5>=V3+1,V3>=2] 
* CE 470: start(V3,V4,V5) = 0+ markfun13(V3,W5):9
     [2*V3>=W5,W5>=V3+1] 
* CE 471: start(V3,V4,V5) = 0+ markfun13(V3,W5):10
     [V3>=1] 

### Cost equations --> "Loop" of start/3 
* CEs [247,255,264,273,281,289,297,298] --> Loop 85 
* CEs [183,191,200,209,217,225,233,234,311,319,328,337,345,353,361,362,378,386,395,404,412,420,428,429,471] --> Loop 86 
* CEs [170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,218,219,220,221,222,223,224,226,227,228,229,230,231,232,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,284,285,286,287,288,290,291,292,293,294,295,296,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344,346,347,348,349,350,351,352,354,355,356,357,358,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,413,414,415,416,417,418,419,421,422,423,424,425,426,427,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470] --> Loop 87 

#### Loops of start/3 
* Loop 85: start(V3,V4,V5) [V4>=0,V5=1,V3=2] 
* Loop 86: start(V3,V4,V5) [V3>=1] 
* Loop 87: start(V3,V4,V5) [] 

### Ranking functions of CR start(V3,V4,V5) 

#### Partial ranking functions of CR start(V3,V4,V5) 


### Resulting Chains:start(V3,V4,V5) 
* [87]
* [86]...
* [85]...


### Merging Chains  start/3 into  External patterns of execution 
* [[87]] --> 1 
* [[85]] --> 2 
* [[86]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of fun(Out):
* Chain [35]: 1
  with precondition: [Out=3] 

* Chain [34]: 1
  with precondition: [Out=4] 


#### Cost of chains of fun1(V3,Out):
* Chain [37]: 1
  with precondition: [V3=2,Out=2] 

* Chain [36]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of chains of fun2(V3,Out):
* Chain [39]: 1
  with precondition: [V3=2,Out=2] 

* Chain [38]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of chains of fun8(V3,Out):
* Chain [41]: 1
  with precondition: [V3=2,Out=2] 

* Chain [40]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of loops [42,43,44,45] 

 * loop 42:fun12fun9(A,B) -> [fun12fun9(A',B'),fun12fun9(A'2,B'2)] 
3
 * loop 43:fun12fun9(A,B) -> [fun12fun9(A',B'),fun12fun9(A'2,B'2)] 
3
 * loop 44:fun12fun9(A,B) -> [fun12fun9(A',B')] 
2
 * loop 45:fun12fun9(A,B) -> [fun12fun9(A',B')] 
2
#### Cost of phase [42,43,44,45]:fun12fun9(A,B) -> [] 
10*it(42)+2*it([46])+0
  Such that:aux(1) =< A
aux(2) =< A+1
it(42) =< aux(1)
it([46]) =< aux(2)

#### Cost of chains of fun12fun9(A,B):
* Chain [47]: 1
  with precondition: [A=0,B=2] 

* Chain [46]: 1
  with precondition: [A+1=B,A>=0] 

* Chain [multiple([42,43,44,45],[[47],[46]])]: 10*it(42)+2*it([46])+0
  Such that:aux(1) =< A
aux(2) =< A+1
it(42) =< aux(1)
it([46]) =< aux(2)

  with precondition: [A>=1,B>=1,A+2>=B] 


#### Cost of chains of fun3(V3,Out):
* Chain [49]: 1
  with precondition: [V3=2,Out=2] 

* Chain [48]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of chains of fun5(V3,Out):
* Chain [51]: 1
  with precondition: [V3=2,Out=2] 

* Chain [50]: 1
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of loops [52,53,54,55] 

 * loop 52:fun6(V3,Out) -> [fun6(V3',Out')] 
4
 * loop 53:fun6(V3,Out) -> [fun6(V3',Out')] 
12*s(6)+4
  Such that:s(5) =< V3-V3'
s(6) =< s(5)

 * loop 54:fun6(V3,Out) -> [fun6(V3',Out')] 
4
 * loop 55:fun6(V3,Out) -> [fun6(V3',Out')] 
12*s(12)+4
  Such that:s(11) =< V3-V3'
s(12) =< s(11)

#### Cost of phase [52,53,54,55]:fun6(V3,Out) -> [fun6(V3',Out')] 
8*it(52)+8*it(54)+12*s(13)+12*s(15)+0
  Such that:aux(5) =< V3
aux(6) =< V3+2
aux(7) =< V3-V3'
it(52) =< aux(5)
it(54) =< aux(5)
s(16) =< aux(5)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(7)
it(54) =< aux(7)
s(14) =< aux(7)
s(16) =< aux(7)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of phase [52,53,54,55]:fun6(V3,Out) -> [fun6(V3',Out')] 
8*it(52)+8*it(54)+12*s(13)+12*s(15)+0
  Such that:aux(5) =< V3
aux(6) =< V3+2
aux(7) =< V3-V3'
it(52) =< aux(5)
it(54) =< aux(5)
s(16) =< aux(5)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(7)
it(54) =< aux(7)
s(14) =< aux(7)
s(16) =< aux(7)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of phase [52,53,54,55]:fun6(V3,Out) -> [fun6(V3',Out')] 
8*it(52)+8*it(54)+12*s(13)+12*s(15)+0
  Such that:aux(5) =< V3
aux(6) =< V3+2
aux(7) =< V3-V3'
it(52) =< aux(5)
it(54) =< aux(5)
s(16) =< aux(5)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(7)
it(54) =< aux(7)
s(14) =< aux(7)
s(16) =< aux(7)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of phase [52,53,54,55]:fun6(V3,Out) -> [fun6(V3',Out')] 
8*it(52)+8*it(54)+12*s(13)+12*s(15)+0
  Such that:aux(5) =< V3
aux(6) =< V3+2
aux(7) =< V3-V3'
it(52) =< aux(5)
it(54) =< aux(5)
s(16) =< aux(5)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(7)
it(54) =< aux(7)
s(14) =< aux(7)
s(16) =< aux(7)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of phase [52,53,54,55]:fun6(V3,Out) -> [fun6(V3',Out')] 
8*it(52)+8*it(54)+12*s(13)+12*s(15)+0
  Such that:aux(5) =< V3
aux(6) =< V3+2
aux(7) =< V3-V3'
it(52) =< aux(5)
it(54) =< aux(5)
s(16) =< aux(5)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(7)
it(54) =< aux(7)
s(14) =< aux(7)
s(16) =< aux(7)
s(15) =< s(16)
s(13) =< s(14)

#### Cost of chains of fun6(V3,Out):
* Chain [[52,53,54,55],60]: 20*it(52)+8*it(54)+12*s(13)+3
  Such that:aux(6) =< V3+2
aux(8) =< V3
it(52) =< aux(8)
it(54) =< aux(8)
it(54) =< aux(6)
s(14) =< aux(6)
s(14) =< aux(8)
s(13) =< s(14)

  with precondition: [V3>=1,Out>=2,V3+2>=Out] 

* Chain [[52,53,54,55],59]: 20*it(52)+8*it(54)+12*s(13)+3
  Such that:aux(6) =< V3+2
aux(9) =< V3
it(52) =< aux(9)
it(54) =< aux(9)
it(54) =< aux(6)
s(14) =< aux(6)
s(14) =< aux(9)
s(13) =< s(14)

  with precondition: [Out>=4,V3+3>=Out] 

* Chain [[52,53,54,55],58]: 8*it(52)+8*it(54)+12*s(13)+12*s(15)+32*s(19)+4*s(24)+3
  Such that:aux(6) =< V3+2
aux(13) =< V3
aux(14) =< V3+1
s(19) =< aux(13)
s(24) =< aux(14)
it(52) =< aux(13)
it(54) =< aux(13)
s(16) =< aux(13)
it(54) =< aux(6)
s(14) =< aux(6)
it(52) =< aux(14)
it(54) =< aux(14)
s(14) =< aux(14)
s(16) =< aux(14)
s(15) =< s(16)
s(13) =< s(14)

  with precondition: [V3>=2,Out>=2,V3+3>=Out] 

* Chain [[52,53,54,55],57]: 20*it(52)+8*it(54)+12*s(13)+1
  Such that:aux(6) =< V3+2
aux(15) =< V3
it(52) =< aux(15)
it(54) =< aux(15)
it(54) =< aux(6)
s(14) =< aux(6)
s(14) =< aux(15)
s(13) =< s(14)

  with precondition: [V3>=4,Out>=2,V3>=Out+1] 

* Chain [[52,53,54,55],56]: 20*it(52)+8*it(54)+12*s(13)+3
  Such that:aux(6) =< V3+2
aux(16) =< V3
it(52) =< aux(16)
it(54) =< aux(16)
it(54) =< aux(6)
s(14) =< aux(6)
s(14) =< aux(16)
s(13) =< s(14)

  with precondition: [Out>=2,V3+1>=Out] 

* Chain [60]: 3
  with precondition: [V3+2=Out,V3>=0] 

* Chain [59]: 3
  with precondition: [V3=0,Out=3] 

* Chain [58]: 32*s(19)+4*s(24)+3
  Such that:aux(11) =< V3
aux(12) =< V3+1
s(19) =< aux(11)
s(24) =< aux(12)

  with precondition: [V3>=1,Out>=2,V3+3>=Out] 

* Chain [57]: 1
  with precondition: [V3=3,Out=2] 

* Chain [56]: 3
  with precondition: [V3+1=Out,V3>=0] 


#### Cost of loops [61,62,63,64,65,66,67,68,69,70,71,72,73,74] 

 * loop 61:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2),markfun13(A'3,B'3)] 
4
 * loop 62:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2),markfun13(A'3,B'3)] 
12*s(119)+4
  Such that:s(118) =< A-A'-A'2
s(119) =< s(118)

 * loop 63:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
1
 * loop 64:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
10*s(126)+2*s(127)+4
  Such that:s(124) =< A'
s(125) =< A'+1
s(126) =< s(124)
s(127) =< s(125)

 * loop 65:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
12*s(144)+10*s(146)+2*s(147)+12*s(145)+5
  Such that:s(140) =< A
s(141) =< A-A'
s(142) =< A'
s(143) =< A'+1
s(144) =< s(140)
s(145) =< s(141)
s(146) =< s(142)
s(147) =< s(143)

 * loop 66:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
10*s(154)+2*s(155)+5
  Such that:s(152) =< A'
s(153) =< A'+1
s(154) =< s(152)
s(155) =< s(153)

 * loop 67:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
12*s(161)+5
  Such that:s(160) =< A
s(161) =< s(160)

 * loop 68:markfun13(A,B) -> [markfun13(A',B'),markfun13(A'2,B'2)] 
5
 * loop 69:markfun13(A,B) -> [markfun13(A',B')] 
2
 * loop 70:markfun13(A,B) -> [markfun13(A',B')] 
172*s(178)+40*s(179)+60*s(181)+6
  Such that:s(176) =< A-A'+1
s(177) =< A-A'
s(178) =< s(177)
s(179) =< s(177)
s(179) =< s(176)
s(180) =< s(176)
s(180) =< s(177)
s(181) =< s(180)

 * loop 71:markfun13(A,B) -> [markfun13(A',B')] 
6
 * loop 72:markfun13(A,B) -> [markfun13(A',B')] 
6
 * loop 73:markfun13(A,B) -> [markfun13(A',B')] 
6
 * loop 74:markfun13(A,B) -> [markfun13(A',B')] 
208*s(210)+40*s(211)+60*s(213)+6
  Such that:s(208) =< A-A'+1
s(209) =< A-A'
s(210) =< s(209)
s(211) =< s(209)
s(211) =< s(208)
s(212) =< s(208)
s(212) =< s(209)
s(213) =< s(212)

#### Cost of phase [61,62,63,64,65,66,67,68,69,70,71,72,73,74]:markfun13(A,B) -> [] 
33*it(61)+2*it(69)+6*it(70)+34*it(71)+13*it([75])+6*it([81])+12*s(214)+20*s(216)+26*s(217)+26*s(220)+172*s(234)+40*s(235)+60*s(236)+220*s(240)+40*s(241)+60*s(242)+12*s(246)+244*s(248)+40*s(253)+60*s(254)+0
#### Cost of chains of markfun13(A,B):
* Chain [multiple([61,62,63,64,65,66,67,68,69,70,71,72,73,74],[[],[84],[83],[82],[81],[80],[79],[78],[77],[76],[75]])]...: 33*it(61)+2*it(69)+6*it(70)+34*it(71)+13*it([75])+6*it([81])+12*s(214)+20*s(216)+26*s(217)+26*s(220)+172*s(234)+40*s(235)+60*s(236)+220*s(240)+40*s(241)+60*s(242)+12*s(246)+244*s(248)+40*s(253)+60*s(254)+0
  with precondition: [A>=1] 

* Chain [84]: 1
  with precondition: [A=0,B=0] 

* Chain [83]: 1
  with precondition: [A=1,B=0] 

* Chain [82]: 4
  with precondition: [A=B,A>=1] 

* Chain [81]: 12*s(70)+5
  Such that:aux(20) =< A
s(70) =< aux(20)

  with precondition: [A+1=B,A>=0] 

* Chain [80]: 12*s(74)+5
  Such that:aux(21) =< A
s(74) =< aux(21)

  with precondition: [A+2=B,A>=1] 

* Chain [79]: 12*s(78)+1
  Such that:aux(22) =< A
s(78) =< aux(22)

  with precondition: [A>=2,B>=1,A+1>=B] 

* Chain [78]: 220*s(82)+40*s(101)+60*s(103)+5
  Such that:s(98) =< A+1
aux(27) =< A
s(82) =< aux(27)
s(101) =< aux(27)
s(101) =< s(98)
s(102) =< s(98)
s(102) =< aux(27)
s(103) =< s(102)

  with precondition: [A>=2,B>=2,A+2>=B] 

* Chain [77]: 2
  with precondition: [A=3,B=3] 

* Chain [76]: 12*s(112)+2
  Such that:aux(28) =< A
s(112) =< aux(28)

  with precondition: [A>=2,B>=A+1,2*A+1>=B] 

* Chain [75]: 3
  with precondition: [B>=A+1,2*A>=B] 


#### Cost of chains of start(V3,V4,V5):
* Chain [87]: 8932*s(265)+1296*s(273)+1944*s(275)+2144*s(283)+320*s(297)+480*s(299)+2164*s(313)+320*s(327)+504*s(329)+1072*s(427)+160*s(441)+240*s(443)+1072*s(451)+160*s(459)+240*s(461)+570*s(670)+114*s(671)+64*s(1317)+96*s(1319)+16*s(1321)+422*s(1342)+10*s(1343)+32*s(1349)+48*s(1351)+48*s(1352)+8*s(1353)+72*s(1356)+12*s(1357)+13
  Such that:s(1346) =< V3+2
aux(180) =< V3
aux(181) =< V3+1
aux(182) =< V4
aux(183) =< V4+1
aux(184) =< V4+2
aux(185) =< V4+3
aux(186) =< 2*V4
aux(187) =< 2*V4+1
aux(188) =< 2*V4+2
aux(189) =< V5
aux(190) =< V5+1
s(1342) =< aux(180)
s(1343) =< aux(181)
s(1349) =< aux(180)
s(1349) =< s(1346)
s(1350) =< s(1346)
s(1350) =< aux(180)
s(1351) =< s(1350)
s(1352) =< aux(180)
s(1353) =< aux(180)
s(1354) =< aux(180)
s(1353) =< s(1346)
s(1355) =< s(1346)
s(1352) =< aux(181)
s(1353) =< aux(181)
s(1355) =< aux(181)
s(1354) =< aux(181)
s(1356) =< s(1354)
s(1357) =< s(1355)
s(265) =< aux(182)
s(273) =< aux(182)
s(273) =< aux(183)
s(274) =< aux(183)
s(274) =< aux(182)
s(275) =< s(274)
s(283) =< aux(184)
s(297) =< aux(184)
s(297) =< aux(185)
s(298) =< aux(185)
s(298) =< aux(184)
s(299) =< s(298)
s(313) =< aux(183)
s(327) =< aux(183)
s(327) =< aux(184)
s(328) =< aux(184)
s(328) =< aux(183)
s(329) =< s(328)
s(427) =< aux(187)
s(441) =< aux(187)
s(441) =< aux(188)
s(442) =< aux(188)
s(442) =< aux(187)
s(443) =< s(442)
s(670) =< aux(189)
s(671) =< aux(190)
s(1317) =< aux(182)
s(1317) =< aux(184)
s(1318) =< aux(184)
s(1318) =< aux(182)
s(1319) =< s(1318)
s(1321) =< aux(182)
s(1321) =< aux(184)
s(1321) =< aux(183)
s(451) =< aux(186)
s(459) =< aux(186)
s(459) =< aux(187)
s(460) =< aux(187)
s(460) =< aux(186)
s(461) =< s(460)

  with precondition: [] 

* Chain [86]...: 28150*s(1372)+804*s(1393)+120*s(1461)+180*s(1463)+80*s(1548)+16*s(1549)+8
  Such that:aux(191) =< V4
aux(192) =< V4+1
aux(193) =< V5
aux(194) =< V5+1
s(1393) =< aux(191)
s(1461) =< aux(191)
s(1461) =< aux(192)
s(1462) =< aux(192)
s(1462) =< aux(191)
s(1463) =< s(1462)
s(1548) =< aux(193)
s(1549) =< aux(194)

  with precondition: [V3>=1] 

* Chain [85]...: 9008*s(1946)+268*s(1967)+40*s(2035)+60*s(2037)+8
  Such that:s(2032) =< V4+1
aux(195) =< V4
s(1967) =< aux(195)
s(2035) =< aux(195)
s(2035) =< s(2032)
s(2036) =< s(2032)
s(2036) =< aux(195)
s(2037) =< s(2036)

  with precondition: [V3=2,V5=1,V4>=0] 


Closed-form bounds of start(V3,V4,V5): 
-------------------------------------
* Chain [87] with precondition: [] 
    - Upper bound: nat(V3)*582+13+nat(V4)*10308+nat(V5)*570+nat(2*V4)*1232+nat(V3+1)*10+nat(V3+2)*60+nat(V4+1)*4428+nat(V4+2)*3064+nat(V4+3)*480+nat(V5+1)*114+nat(2*V4+1)*1472+nat(2*V4+2)*240 
    - Complexity: n 
* Chain [86]... with precondition: [V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [85]... with precondition: [V3=2,V5=1,V4>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V3,V4,V5): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 182 ms.
* Invariants computed in 210 ms.
   - Backward Invariants 74 ms.
   - Transitive Invariants 51 ms.
* Refinement performed in 2292 ms.
* Termination proved in 103 ms.
* Upper bounds computed in 3493 ms.
   - Equation cost structures 1609 ms.
   - Phase cost structures 1950 ms.
   - Chain cost structures 62 ms.
   - Solving cost expressions 7 ms.
* Total analysis performed in 6468 ms.

