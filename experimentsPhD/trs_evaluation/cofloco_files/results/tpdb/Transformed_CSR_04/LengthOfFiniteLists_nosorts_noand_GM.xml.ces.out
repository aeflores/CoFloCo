
Preprocessing Cost Relations
=====================================
1. SCC does not have a single cut point : [mark/2,fun3/2]  
 Merged into markfun3/2

#### Computed strongly connected components 
0. non_recursive  : [fun/1]
2. non_recursive  : [start/2]
1. recursive [multiple] : [fun1/3,fun2/3,markfun3/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into fun/1
2. SCC is partially evaluated into start/2
1. SCC is partially evaluated into markfun3/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations fun/1 
* CE 23 is refined into CE [25] 
* CE 24 is refined into CE [26] 


#### Refined cost equations fun/1 
* CE 25: fun(Out) = 1
     [Out=4] 
* CE 26: fun(Out) = 1
     [Out=3] 

### Cost equations --> "Loop" of fun/1 
* CEs [25] --> Loop 15 
* CEs [26] --> Loop 16 

#### Loops of fun/1 
* Loop 15: fun(Out) [Out=4] 
* Loop 16: fun(Out) [Out=3] 

### Ranking functions of CR fun(Out) 

#### Partial ranking functions of CR fun(Out) 


### Resulting Chains:fun(Out) 
* [16]
* [15]


### Merging Chains  fun/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations markfun3/2 
* CE 9 is refined into CE [27] 
* CE 13 is refined into CE [28] 
* CE 22 is refined into CE [29] 
* CE 15 is refined into CE [30,31] 
* CE 19 is refined into CE [32] 
* CE 20 is refined into CE [33] 
* CE 21 is refined into CE [34] 
* CE 18 is refined into CE [35] 
* CE 8 is refined into CE [36] 
* CE 12 is refined into CE [37] 
* CE 17 is refined into CE [38] 
* CE 11 is refined into CE [39] 
* CE 16 is refined into CE [40] 
* CE 10 is refined into CE [41] 
* CE 14 is refined into CE [42] 


#### Refined cost equations markfun3/2 
* CE 27: markfun3(A,B) = 2
     [A+2>=B,B>=3] 
* CE 28: markfun3(A,B) = 3
     [A+2>=B,B>=3] 
* CE 29: markfun3(A,B) = 1
     [A>=0,A+1=B] 
* CE 30: markfun3(A,B) = 1+ fun(C):1
     [C=3,B=3,A=3] 
* CE 31: markfun3(A,B) = 1+ fun(C):2
     [C=4,B=4,A=3] 
* CE 32: markfun3(A,B) = 1
     [B=2,A=2] 
* CE 33: markfun3(A,B) = 1
     [B=1,A=1] 
* CE 34: markfun3(A,B) = 1
     [B=0,A=1] 
* CE 35: markfun3(A,B) = 1
     [B=0,A=0] 
* CE 36: markfun3(A,B) = 2+ markfun3(C,D)
     [B+C>=A,A>=C+1,C>=0,B+C=A+D] 
* CE 37: markfun3(A,B) = 3+ markfun3(C,D)
     [A>=C+1,C>=0,B+C=A+2,D=2] 
* CE 38: markfun3(A,B) = 1+ markfun3(C,D)
     [A+D>=B,B>=D+1,A+D=B+C] 
* CE 39: markfun3(A,B) = 3+ markfun3(C,D)+ markfun3(D,E)
     [A>=C+1,C>=0,E+1=B] 
* CE 40: markfun3(A,B) = 1+ markfun3(C,D)+ markfun3(D,B)
     [C>=0,C+1=A] 
* CE 41: markfun3(A,B) = 3+ markfun3(C,D)+ markfun3(E,F)+ markfun3(F,G)
     [E>=0,C>=0,C+E+1=A,G+1=B,D=2] 
* CE 42: markfun3(A,B) = 2+ markfun3(C,D)+ markfun3(E,F)+ markfun3(F,G)
     [E>=0,C>=0,C+E+1=A,G+1=B,D=2] 

### Cost equations --> "Loop" of markfun3/2 
* CEs [41,42] --> Loop 17 
* CEs [39] --> Loop 18 
* CEs [40] --> Loop 19 
* CEs [36,37,38] --> Loop 20 
* CEs [29,31] --> Loop 21 
* CEs [27,28,30] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of markfun3/2 
* Loop 17: markfun3(A,B)->  markfun3(A',B')  markfun3(A'2,B'2)  markfun3(B'2,A'3)
                  [A'2>=0,A'>=0,A'+A'2+1=A,B=A'3+1,B'=2] 
* Loop 18: markfun3(A,B)->  markfun3(A',B')  markfun3(B',A'2)
                  [A>=A'+1,A'>=0,B=A'2+1] 
* Loop 19: markfun3(A,B)->  markfun3(A',B')  markfun3(B',B)
                  [A>=1,A=A'+1] 
* Loop 20: markfun3(A,B)->  markfun3(A',B')
                  [A+B'>=B,B>=B'+1,A+B'=B+A'] 
* Loop 21: markfun3(A,B) [A>=0,A+1=B] 
* Loop 22: markfun3(A,B) [A+2>=B,B>=3] 
* Loop 23: markfun3(A,B) [B=2,A=2] 
* Loop 24: markfun3(A,B) [B=1,A=1] 
* Loop 25: markfun3(A,B) [B=0,A=1] 
* Loop 26: markfun3(A,B) [B=0,A=0] 

### Ranking functions of CR markfun3(A,B) 

#### Partial ranking functions of CR markfun3(A,B) 
* Partial RF of phase [17,18,19,20]:
  - RF of loop [17:1,17:2,18:1,19:1,20:1]:
    A depends on loops [17:3,18:2,19:2] 


### Resulting Chains:markfun3(A,B) 
* [multiple([17,18,19,20],[[],[26],[25],[24],[23],[22],[21]])]...
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]


### Merging Chains  markfun3/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 
* [[21]] --> 5 
* [[22]] --> 6 
* [[multiple([17,18,19,20],[[],[26],[25],[24],[23],[22],[21]])]] --> 7 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [43] 
* CE 3 is refined into CE [44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66] 
* CE 4 is refined into CE [67] 
* CE 5 is refined into CE [68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90] 
* CE 6 is refined into CE [91,92] 
* CE 7 is refined into CE [93,94,95,96,97,98,99] 


#### Refined cost equations start/2 
* CE 43: start(V1,V) = 1
     [V>=0,V1>=0] 
* CE 44: start(V1,V) = 2+ markfun3(W1,X1):1+ markfun3(Y1,Z1):1
     [Z1=0,Y1=0,X1=0,W1=0,V=0,V1=2] 
* CE 45: start(V1,V) = 2+ markfun3(W1,X1):1+ markfun3(Y1,Z1):5
     [Z1=1,Y1=0,X1=0,W1=0,V=0,V1=2] 
* CE 46: start(V1,V) = 2+ markfun3(W1,X1):2+ markfun3(Y1,Z1):1
     [Z1=0,Y1=0,X1=0,W1=1,V=1,V1=2] 
* CE 47: start(V1,V) = 2+ markfun3(W1,X1):2+ markfun3(Y1,Z1):5
     [Z1=1,Y1=0,X1=0,W1=1,V=1,V1=2] 
* CE 48: start(V1,V) = 2+ markfun3(W1,X1):3+ markfun3(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 49: start(V1,V) = 2+ markfun3(W1,X1):3+ markfun3(Y1,Z1):3
     [Z1=1,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 50: start(V1,V) = 2+ markfun3(W1,X1):3+ markfun3(Y1,Z1):5
     [Z1=2,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 51: start(V1,V) = 2+ markfun3(W1,X1):3+ markfun3(Y1,Z1):6
     [Z1=3,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 52: start(V1,V) = 2+ markfun3(W1,X1):3+ markfun3(Y1,Z1):7
     [Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 53: start(V1,V) = 2+ markfun3(W1,X1):4+ markfun3(Y1,Z1):4
     [Z1=2,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 54: start(V1,V) = 2+ markfun3(W1,X1):4+ markfun3(Y1,Z1):5
     [Z1=3,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 55: start(V1,V) = 2+ markfun3(W1,X1):4+ markfun3(Y1,Z1):6
     [Z1>=3,4>=Z1,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 56: start(V1,V) = 2+ markfun3(W1,X1):4+ markfun3(Y1,Z1):7
     [Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 57: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=0,V=0,V1=2] 
* CE 58: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(Y1,Z1):3
     [Z1=1,Y1=1,X1=1,W1=0,V=0,V1=2] 
* CE 59: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(Y1,Z1):4
     [Z1=2,Y1=2,X1=2,W1=1,V=1,V1=2] 
* CE 60: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(Y1,Z1):5
     [Z1>=2,Z1=Y1+1,Z1=X1+1,Z1=W1+2,Z1=V+2,V1=2] 
* CE 61: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(X1,Y1):6
     [X1+2>=Y1,Y1>=3,X1=W1+1,X1=V+1,V1=2] 
* CE 62: start(V1,V) = 2+ markfun3(W1,X1):5+ markfun3(X1,Y1):7
     [X1>=1,X1=W1+1,X1=V+1,V1=2] 
* CE 63: start(V1,V) = 2+ markfun3(V,W1):6+ markfun3(X1,Y1):5
     [V+3>=Y1,Y1>=4,Y1=X1+1,Y1=W1+1,V1=2] 
* CE 64: start(V1,V) = 2+ markfun3(V,W1):6+ markfun3(W1,X1):6
     [W1+2>=X1,V+2>=W1,X1>=3,W1>=3,V1=2] 
* CE 65: start(V1,V) = 2+ markfun3(V,W1):6+ markfun3(W1,X1):7
     [V+2>=W1,W1>=3,V1=2] 
* CE 66: start(V1,V) = 2+ markfun3(V,W1):7
     [V>=1,V1=2] 
* CE 67: start(V1,V) = 2
     [V>=0,V1=2] 
* CE 68: start(V1,V) = 1+ markfun3(W1,X1):1+ markfun3(Y1,Z1):1
     [Z1=0,Y1=0,X1=0,W1=0,V=0,V1=2] 
* CE 69: start(V1,V) = 1+ markfun3(W1,X1):1+ markfun3(Y1,Z1):5
     [Z1=1,Y1=0,X1=0,W1=0,V=0,V1=2] 
* CE 70: start(V1,V) = 1+ markfun3(W1,X1):2+ markfun3(Y1,Z1):1
     [Z1=0,Y1=0,X1=0,W1=1,V=1,V1=2] 
* CE 71: start(V1,V) = 1+ markfun3(W1,X1):2+ markfun3(Y1,Z1):5
     [Z1=1,Y1=0,X1=0,W1=1,V=1,V1=2] 
* CE 72: start(V1,V) = 1+ markfun3(W1,X1):3+ markfun3(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 73: start(V1,V) = 1+ markfun3(W1,X1):3+ markfun3(Y1,Z1):3
     [Z1=1,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 74: start(V1,V) = 1+ markfun3(W1,X1):3+ markfun3(Y1,Z1):5
     [Z1=2,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 75: start(V1,V) = 1+ markfun3(W1,X1):3+ markfun3(Y1,Z1):6
     [Z1=3,Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 76: start(V1,V) = 1+ markfun3(W1,X1):3+ markfun3(Y1,Z1):7
     [Y1=1,X1=1,W1=1,V=1,V1=2] 
* CE 77: start(V1,V) = 1+ markfun3(W1,X1):4+ markfun3(Y1,Z1):4
     [Z1=2,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 78: start(V1,V) = 1+ markfun3(W1,X1):4+ markfun3(Y1,Z1):5
     [Z1=3,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 79: start(V1,V) = 1+ markfun3(W1,X1):4+ markfun3(Y1,Z1):6
     [Z1>=3,4>=Z1,Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 80: start(V1,V) = 1+ markfun3(W1,X1):4+ markfun3(Y1,Z1):7
     [Y1=2,X1=2,W1=2,V=2,V1=2] 
* CE 81: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(Y1,Z1):2
     [Z1=0,Y1=1,X1=1,W1=0,V=0,V1=2] 
* CE 82: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(Y1,Z1):3
     [Z1=1,Y1=1,X1=1,W1=0,V=0,V1=2] 
* CE 83: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(Y1,Z1):4
     [Z1=2,Y1=2,X1=2,W1=1,V=1,V1=2] 
* CE 84: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(Y1,Z1):5
     [Z1>=2,Z1=Y1+1,Z1=X1+1,Z1=W1+2,Z1=V+2,V1=2] 
* CE 85: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(X1,Y1):6
     [X1+2>=Y1,Y1>=3,X1=W1+1,X1=V+1,V1=2] 
* CE 86: start(V1,V) = 1+ markfun3(W1,X1):5+ markfun3(X1,Y1):7
     [X1>=1,X1=W1+1,X1=V+1,V1=2] 
* CE 87: start(V1,V) = 1+ markfun3(V,W1):6+ markfun3(X1,Y1):5
     [V+3>=Y1,Y1>=4,Y1=X1+1,Y1=W1+1,V1=2] 
* CE 88: start(V1,V) = 1+ markfun3(V,W1):6+ markfun3(W1,X1):6
     [W1+2>=X1,V+2>=W1,X1>=3,W1>=3,V1=2] 
* CE 89: start(V1,V) = 1+ markfun3(V,W1):6+ markfun3(W1,X1):7
     [V+2>=W1,W1>=3,V1=2] 
* CE 90: start(V1,V) = 1+ markfun3(V,W1):7
     [V>=1,V1=2] 
* CE 91: start(V1,V) = 0+ fun(W1):1
     [W1=3] 
* CE 92: start(V1,V) = 0+ fun(W1):2
     [W1=4] 
* CE 93: start(V1,V) = 0+ markfun3(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 94: start(V1,V) = 0+ markfun3(W1,X1):2
     [X1=0,W1=1,V1=1] 
* CE 95: start(V1,V) = 0+ markfun3(W1,X1):3
     [X1=1,W1=1,V1=1] 
* CE 96: start(V1,V) = 0+ markfun3(W1,X1):4
     [X1=2,W1=2,V1=2] 
* CE 97: start(V1,V) = 0+ markfun3(W1,X1):5
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 98: start(V1,V) = 0+ markfun3(V1,W1):6
     [V1+2>=W1,W1>=3] 
* CE 99: start(V1,V) = 0+ markfun3(V1,W1):7
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [56,80] --> Loop 27 
* CEs [52,62,65,66,76,86,89,90,99] --> Loop 28 
* CEs [43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,61,63,64,67,68,69,70,71,72,73,74,75,77,78,79,81,82,83,84,85,87,88,91,92,93,94,95,96,97,98] --> Loop 29 

#### Loops of start/2 
* Loop 27: start(V1,V) [V=2,V1=2] 
* Loop 28: start(V1,V) [V1>=1] 
* Loop 29: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [29]
* [28]...
* [27]...


### Merging Chains  start/2 into  External patterns of execution 
* [[29]] --> 1 
* [[27]] --> 2 
* [[28]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of fun(Out):
* Chain [16]: 1
  with precondition: [Out=3] 

* Chain [15]: 1
  with precondition: [Out=4] 


#### Cost of loops [17,18,19,20] 

 * loop 17:markfun3(A,B) -> [markfun3(A',B'),markfun3(A'2,B'2),markfun3(A'3,B'3)] 
3
 * loop 18:markfun3(A,B) -> [markfun3(A',B'),markfun3(A'2,B'2)] 
3
 * loop 19:markfun3(A,B) -> [markfun3(A',B'),markfun3(A'2,B'2)] 
1
 * loop 20:markfun3(A,B) -> [markfun3(A',B')] 
3
#### Cost of phase [17,18,19,20]:markfun3(A,B) -> [] 
7*it(17)+3*it(20)+3*it([21])+6*it([22])+0
#### Cost of chains of markfun3(A,B):
* Chain [multiple([17,18,19,20],[[],[26],[25],[24],[23],[22],[21]])]...: 7*it(17)+3*it(20)+3*it([21])+6*it([22])+0
  with precondition: [A>=1] 

* Chain [26]: 1
  with precondition: [A=0,B=0] 

* Chain [25]: 1
  with precondition: [A=1,B=0] 

* Chain [24]: 1
  with precondition: [A=1,B=1] 

* Chain [23]: 1
  with precondition: [A=2,B=2] 

* Chain [22]: 3
  with precondition: [B>=3,A+2>=B] 

* Chain [21]: 2
  with precondition: [A+1=B,A>=0] 


#### Cost of chains of start(V1,V):
* Chain [29]: 8
  with precondition: [] 

* Chain [28]...: 1*aux(17)+0
  with precondition: [V1>=1] 

* Chain [27]...: 1*aux(18)+0
  with precondition: [V1=2,V=2] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [29] with precondition: [] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [28]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [V1=2,V=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 98 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 76 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 45 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 231 ms.

