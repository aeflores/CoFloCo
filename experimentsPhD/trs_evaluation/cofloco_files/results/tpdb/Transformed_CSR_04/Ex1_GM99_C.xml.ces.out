
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [active/2]
1. recursive  : [f/4]
2. non_recursive  : [proper/2]
3. recursive  : [top/2]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into active/2
1. SCC is partially evaluated into f/4
2. SCC is partially evaluated into proper/2
3. SCC is partially evaluated into top/2
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations active/2 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 


#### Refined cost equations active/2 
* CE 19: active(V,Out) = 0
     [V>=0,Out=0] 
* CE 20: active(V,Out) = 1
     [Out=2,V=2] 
* CE 21: active(V,Out) = 1
     [Out=1,V=2] 

### Cost equations --> "Loop" of active/2 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of active/2 
* Loop 14: active(V,Out) [V>=0,Out=0] 
* Loop 15: active(V,Out) [Out=2,V=2] 
* Loop 16: active(V,Out) [Out=1,V=2] 

### Ranking functions of CR active(V,Out) 

#### Partial ranking functions of CR active(V,Out) 


### Resulting Chains:active(V,Out) 
* [16]
* [15]
* [14]


### Merging Chains  active/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 


### Specialization of cost equations f/4 
* CE 18 is refined into CE [22] 
* CE 16 is refined into CE [23] 
* CE 17 is refined into CE [24] 


#### Refined cost equations f/4 
* CE 22: f(V,V1,V2,Out) = 0
     [V2>=0,V1>=0,V>=0,Out=0] 
* CE 23: f(V,V1,V2,Out) = 1+ f(V,V1,W2,X2)
     [W2>=0,V1>=0,V>=0,X2+1=Out,W2+1=V2] 
* CE 24: f(V,V1,V2,Out) = 1+ f(W2,X2,Y2,Z2)
     [Y2>=0,X2>=0,W2>=0,Z2+1=Out,Y2+1=V2,X2+1=V1,W2+1=V] 

### Cost equations --> "Loop" of f/4 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [22] --> Loop 19 

#### Loops of f/4 
* Loop 17: f(V,V1,V2,Out)->  f(V,V1,V2',Out')
                  [V2>=1,V1>=0,V>=0,Out=Out'+1,V2=V2'+1] 
* Loop 18: f(V,V1,V2,Out)->  f(V',V1',V2',Out')
                  [V2>=1,V1>=1,V>=1,Out=Out'+1,V2=V2'+1,V1=V1'+1,V=V'+1] 
* Loop 19: f(V,V1,V2,Out) [V2>=0,V1>=0,V>=0,Out=0] 

### Ranking functions of CR f(V,V1,V2,Out) 
* RF of phase [17,18]: [V2]

#### Partial ranking functions of CR f(V,V1,V2,Out) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1,18:1]:
    V2
  - RF of loop [18:1]:
    V
    V1


### Resulting Chains:f(V,V1,V2,Out) 
* [[17,18],19]
* [19]


### Merging Chains  f/4 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[17,18]]] --> 2 


### Specialization of cost equations proper/2 
* CE 15 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 12 is refined into CE [27] 
* CE 14 is refined into CE [28] 


#### Refined cost equations proper/2 
* CE 25: proper(V,Out) = 0
     [V>=0,Out=0] 
* CE 26: proper(V,Out) = 1
     [Out=3,V=2] 
* CE 27: proper(V,Out) = 1
     [Out=2,V=1] 
* CE 28: proper(V,Out) = 1
     [Out=1,V=0] 

### Cost equations --> "Loop" of proper/2 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [28] --> Loop 23 

#### Loops of proper/2 
* Loop 20: proper(V,Out) [V>=0,Out=0] 
* Loop 21: proper(V,Out) [Out=3,V=2] 
* Loop 22: proper(V,Out) [Out=2,V=1] 
* Loop 23: proper(V,Out) [Out=1,V=0] 

### Ranking functions of CR proper(V,Out) 

#### Partial ranking functions of CR proper(V,Out) 


### Resulting Chains:proper(V,Out) 
* [23]
* [22]
* [21]
* [20]


### Merging Chains  proper/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 


### Specialization of cost equations top/2 
* CE 8 is refined into CE [29] 
* CE 6 is refined into CE [30,31,32] 
* CE 7 is refined into CE [33,34,35,36] 


#### Refined cost equations top/2 
* CE 29: top(V,Out) = 0
     [V>=0,Out=0] 
* CE 30: top(V,Out) = 1+ active(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=2,V=3] 
* CE 31: top(V,Out) = 1+ active(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=2,V=3] 
* CE 32: top(V,Out) = 1+ active(W,X):3+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 
* CE 33: top(V,Out) = 1+ proper(W,X):1+ top(Y,Out)
     [Y=1,X=1,W=0,V=1] 
* CE 34: top(V,Out) = 1+ proper(W,X):2+ top(Y,Out)
     [Y=2,X=2,W=1,V=2] 
* CE 35: top(V,Out) = 1+ proper(W,X):3+ top(Y,Out)
     [Y=3,X=3,W=2,V=3] 
* CE 36: top(V,Out) = 1+ proper(W,X):4+ top(Y,Out)
     [W>=0,W+1=V,Y=0,X=0] 

### Cost equations --> "Loop" of top/2 
* CEs [32,36] --> Loop 24 
* CEs [35] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [29] --> Loop 30 

#### Loops of top/2 
* Loop 24: top(V,Out)->  top(V',Out)
                  [V>=1,V'=0] 
* Loop 25: top(V,Out)->  top(V',Out)
                  [V'=3,V=3] 
* Loop 26: top(V,Out)->  top(V',Out)
                  [V'=2,V=3] 
* Loop 27: top(V,Out)->  top(V',Out)
                  [V'=1,V=3] 
* Loop 28: top(V,Out)->  top(V',Out)
                  [V'=2,V=2] 
* Loop 29: top(V,Out)->  top(V',Out)
                  [V'=1,V=1] 
* Loop 30: top(V,Out) [V>=0,Out=0] 

### Ranking functions of CR top(V,Out) 

#### Partial ranking functions of CR top(V,Out) 


### Resulting Chains:top(V,Out) 
* [[29]]...
* [[29],30]
* [[29],24,30]
* [[28]]...
* [[28],30]
* [[28],24,30]
* [[25]]...
* [[25],30]
* [[25],27,[29]]...
* [[25],27,[29],30]
* [[25],27,[29],24,30]
* [[25],27,30]
* [[25],27,24,30]
* [[25],26,[28]]...
* [[25],26,[28],30]
* [[25],26,[28],24,30]
* [[25],26,30]
* [[25],26,24,30]
* [[25],24,30]
* [30]
* [27,[29]]...
* [27,[29],30]
* [27,[29],24,30]
* [27,30]
* [27,24,30]
* [26,[28]]...
* [26,[28],30]
* [26,[28],24,30]
* [26,30]
* [26,24,30]
* [24,30]


### Merging Chains  top/2 into  External patterns of execution 
* [[30,24],[30],[30,24,[29]],[30,[29]]] --> 1 
* [[30,24,[28]],[30,[28]]] --> 2 
* [[30,24,26],[30,26],[30,24,[28],26],[30,[28],26],[30,24,27],[30,27],[30,24,[29],27],[30,[29],27],[30,24,[25]],[30,24,26,[25]],[30,26,[25]],[30,24,[28],26,[25]],[30,[28],26,[25]],[30,24,27,[25]],[30,27,[25]],[30,24,[29],27,[25]],[30,[29],27,[25]],[30,[25]]] --> 3 
* [[[29]]] --> 4 
* [[[28]]] --> 5 
* [[[28],26],[[29],27],[[25]],[[28],26,[25]],[[29],27,[25]]] --> 6 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [37,38,39,40,41,42] 
* CE 3 is refined into CE [43,44,45] 
* CE 4 is refined into CE [46,47,48,49] 
* CE 5 is refined into CE [50,51] 


#### Refined cost equations start/3 
* CE 37: start(V,V1,V2) = 0+ top(V,W2):1
     [V>=0,W2=0] 
* CE 38: start(V,V1,V2) = 0+ top(W2,X2):2
     [X2=0,W2=2,V=2] 
* CE 39: start(V,V1,V2) = 0+ top(W2,X2):3
     [X2=0,W2=3,V=3] 
* CE 40: start(V,V1,V2) = 0+ top(W2,X2):4
     [W2=1,V=1] 
* CE 41: start(V,V1,V2) = 0+ top(W2,X2):5
     [W2=2,V=2] 
* CE 42: start(V,V1,V2) = 0+ top(W2,X2):6
     [W2=3,V=3] 
* CE 43: start(V,V1,V2) = 0+ active(W2,X2):1
     [X2=1,W2=2,V=2] 
* CE 44: start(V,V1,V2) = 0+ active(W2,X2):2
     [X2=2,W2=2,V=2] 
* CE 45: start(V,V1,V2) = 0+ active(V,W2):3
     [V>=0,W2=0] 
* CE 46: start(V,V1,V2) = 0+ proper(W2,X2):1
     [X2=1,W2=0,V=0] 
* CE 47: start(V,V1,V2) = 0+ proper(W2,X2):2
     [X2=2,W2=1,V=1] 
* CE 48: start(V,V1,V2) = 0+ proper(W2,X2):3
     [X2=3,W2=2,V=2] 
* CE 49: start(V,V1,V2) = 0+ proper(V,W2):4
     [V>=0,W2=0] 
* CE 50: start(V,V1,V2) = 0+ f(V,V1,V2,W2):1
     [V2>=0,V1>=0,V>=0,W2=0] 
* CE 51: start(V,V1,V2) = 0+ f(V,V1,V2,W2):2
     [V2>=W2,W2>=1,V1>=0,V>=0] 

### Cost equations --> "Loop" of start/3 
* CEs [39] --> Loop 31 
* CEs [38,43,44,48] --> Loop 32 
* CEs [47] --> Loop 33 
* CEs [37,45,46,49,50,51] --> Loop 34 
* CEs [42] --> Loop 35 
* CEs [41] --> Loop 36 
* CEs [40] --> Loop 37 

#### Loops of start/3 
* Loop 31: start(V,V1,V2) [V=3] 
* Loop 32: start(V,V1,V2) [V=2] 
* Loop 33: start(V,V1,V2) [V=1] 
* Loop 34: start(V,V1,V2) [V>=0] 
* Loop 35: start(V,V1,V2) [V=3] 
* Loop 36: start(V,V1,V2) [V=2] 
* Loop 37: start(V,V1,V2) [V=1] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [37]...
* [36]...
* [35]...
* [34]
* [33]
* [32]
* [31]


### Merging Chains  start/3 into  External patterns of execution 
* [[33],[34]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 
* [[37]] --> 4 
* [[36]] --> 5 
* [[35]] --> 6 


Computing Bounds
=====================================

#### Cost of chains of active(V,Out):
* Chain [16]: 1
  with precondition: [V=2,Out=1] 

* Chain [15]: 1
  with precondition: [V=2,Out=2] 

* Chain [14]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [17,18] 

 * loop 17:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1
 * loop 18:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1
#### Cost of phase [17,18]:f(V,V1,V2,Out) -> [f(V',V1',V2',Out')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< V
it(18) =< V-V'
it(18) =< V1
it(18) =< V1-V1'
aux(1) =< V2
aux(2) =< V2-V2'
it(17) =< aux(1)
it(18) =< aux(1)
it(17) =< aux(2)
it(18) =< aux(2)

#### Cost of chains of f(V,V1,V2,Out):
* Chain [[17,18],19]: 1*it(17)+1*it(18)+0
  Such that:it(18) =< V
aux(1) =< V2
aux(2) =< Out
it(17) =< aux(1)
it(18) =< aux(1)
it(17) =< aux(2)
it(18) =< aux(2)

  with precondition: [V>=0,V1>=0,Out>=1,V2>=Out] 

* Chain [19]: 0
  with precondition: [Out=0,V>=0,V1>=0,V2>=0] 


#### Cost of chains of proper(V,Out):
* Chain [23]: 1
  with precondition: [V=0,Out=1] 

* Chain [22]: 1
  with precondition: [V=1,Out=2] 

* Chain [21]: 1
  with precondition: [V=2,Out=3] 

* Chain [20]: 0
  with precondition: [Out=0,V>=0] 


#### Cost of loops [29] 

 * loop 29:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [29]:top(V,Out) -> [top(V',Out')] 
2*it(29)+0
#### Cost of phase [29]:top(V,Out) -> [top(V',Out')] 
2*it(29)+0
#### Cost of phase [29]:top(V,Out) -> [top(V',Out')] 
2*it(29)+0
#### Cost of loops [28] 

 * loop 28:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [28]:top(V,Out) -> [top(V',Out')] 
2*it(28)+0
#### Cost of phase [28]:top(V,Out) -> [top(V',Out')] 
2*it(28)+0
#### Cost of phase [28]:top(V,Out) -> [top(V',Out')] 
2*it(28)+0
#### Cost of loops [25] 

 * loop 25:top(V,Out) -> [top(V',Out')] 
2
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of phase [25]:top(V,Out) -> [top(V',Out')] 
2*it(25)+0
#### Cost of chains of top(V,Out):
* Chain [[29]]...: 2*it(29)+0
  with precondition: [V=1] 

* Chain [[29],30]: 2*it(29)+0
  with precondition: [V=1,Out=0] 

* Chain [[29],24,30]: 2*it(29)+1
  with precondition: [V=1,Out=0] 

* Chain [[28]]...: 2*it(28)+0
  with precondition: [V=2] 

* Chain [[28],30]: 2*it(28)+0
  with precondition: [V=2,Out=0] 

* Chain [[28],24,30]: 2*it(28)+1
  with precondition: [V=2,Out=0] 

* Chain [[25]]...: 2*it(25)+0
  with precondition: [V=3] 

* Chain [[25],30]: 2*it(25)+0
  with precondition: [V=3,Out=0] 

* Chain [[25],27,[29]]...: 4*it(25)+2
  with precondition: [V=3] 

* Chain [[25],27,[29],30]: 4*it(25)+2
  with precondition: [V=3,Out=0] 

* Chain [[25],27,[29],24,30]: 4*it(25)+3
  with precondition: [V=3,Out=0] 

* Chain [[25],27,30]: 2*it(25)+2
  with precondition: [V=3,Out=0] 

* Chain [[25],27,24,30]: 2*it(25)+3
  with precondition: [V=3,Out=0] 

* Chain [[25],26,[28]]...: 4*it(25)+2
  with precondition: [V=3] 

* Chain [[25],26,[28],30]: 4*it(25)+2
  with precondition: [V=3,Out=0] 

* Chain [[25],26,[28],24,30]: 4*it(25)+3
  with precondition: [V=3,Out=0] 

* Chain [[25],26,30]: 2*it(25)+2
  with precondition: [V=3,Out=0] 

* Chain [[25],26,24,30]: 2*it(25)+3
  with precondition: [V=3,Out=0] 

* Chain [[25],24,30]: 2*it(25)+1
  with precondition: [V=3,Out=0] 

* Chain [30]: 0
  with precondition: [Out=0,V>=0] 

* Chain [27,[29]]...: 2*it(29)+2
  with precondition: [V=3] 

* Chain [27,[29],30]: 2*it(29)+2
  with precondition: [V=3,Out=0] 

* Chain [27,[29],24,30]: 2*it(29)+3
  with precondition: [V=3,Out=0] 

* Chain [27,30]: 2
  with precondition: [V=3,Out=0] 

* Chain [27,24,30]: 3
  with precondition: [V=3,Out=0] 

* Chain [26,[28]]...: 2*it(28)+2
  with precondition: [V=3] 

* Chain [26,[28],30]: 2*it(28)+2
  with precondition: [V=3,Out=0] 

* Chain [26,[28],24,30]: 2*it(28)+3
  with precondition: [V=3,Out=0] 

* Chain [26,30]: 2
  with precondition: [V=3,Out=0] 

* Chain [26,24,30]: 3
  with precondition: [V=3,Out=0] 

* Chain [24,30]: 1
  with precondition: [Out=0,V>=1] 


#### Cost of chains of start(V,V1,V2):
* Chain [37]...: 2*s(24)+0
  with precondition: [V=1] 

* Chain [36]...: 2*s(25)+0
  with precondition: [V=2] 

* Chain [35]...: 1*s(26)+0
  with precondition: [V=3] 

* Chain [34]: 1*s(27)+1*s(28)+1*s(31)+1
  Such that:s(28) =< V
aux(7) =< V2
s(31) =< aux(7)
s(28) =< aux(7)

  with precondition: [V>=0] 

* Chain [33]: 1
  with precondition: [V=1] 

* Chain [32]: 1*aux(8)+0
  with precondition: [V=2] 

* Chain [31]: 1*s(33)+0
  with precondition: [V=3] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [37]... with precondition: [V=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36]... with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [V=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [34] with precondition: [V>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33] with precondition: [V=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [32] with precondition: [V=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31] with precondition: [V=3] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V,V1,V2): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 174 ms.
   - Backward Invariants 80 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 161 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 191 ms.
   - Equation cost structures 38 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 73 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 639 ms.

