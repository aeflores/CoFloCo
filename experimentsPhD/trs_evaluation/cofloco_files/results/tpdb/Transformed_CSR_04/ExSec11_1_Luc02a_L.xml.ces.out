
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [add/3]
1. recursive  : [dbl/2]
2. non_recursive  : [first/3]
3. recursive  : [half/2]
4. recursive [non_tail] : [sqr/2]
5. non_recursive  : [terms/2]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is partially evaluated into dbl/2
2. SCC is partially evaluated into first/3
3. SCC is partially evaluated into half/2
4. SCC is partially evaluated into sqr/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 9 is refined into CE [20] 
* CE 8 is refined into CE [21] 


#### Refined cost equations add/3 
* CE 20: add(A,B,B) = 1
     [B>=0,A=0] 
* CE 21: add(V1,V,Out) = 1+ add(W1,V,X1)
     [W1>=0,V>=0,X1+1=Out,W1+1=V1] 

### Cost equations --> "Loop" of add/3 
* CEs [21] --> Loop 13 
* CEs [20] --> Loop 14 

#### Loops of add/3 
* Loop 13: add(V1,V,Out)->  add(V1',V,Out')
                  [V1'>=0,V>=0,Out=Out'+1,V1'+1=V1] 
* Loop 14: add(A,B,B) [B>=0,A=0] 

### Ranking functions of CR add(V1,V,Out) 
* RF of phase [13]: [V1]

#### Partial ranking functions of CR add(V1,V,Out) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V1


### Resulting Chains:add(V1,V,Out) 
* [[13],14]
* [14]


### Merging Chains  add/3 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations dbl/2 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 


#### Refined cost equations dbl/2 
* CE 22: dbl(V1,Out) = 1+ dbl(W1,X1)
     [W1>=0,X1+2=Out,W1+1=V1] 
* CE 23: dbl(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 

#### Loops of dbl/2 
* Loop 15: dbl(V1,Out) [Out=0,V1=0] 
* Loop 16: dbl(V1,Out)->  dbl(V1',Out')
                  [V1'>=0,Out=Out'+2,V1'+1=V1] 

### Ranking functions of CR dbl(V1,Out) 
* RF of phase [16]: [V1]

#### Partial ranking functions of CR dbl(V1,Out) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V1


### Resulting Chains:dbl(V1,Out) 
* [[16],15]
* [15]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[16]]] --> 2 


### Specialization of cost equations first/3 
* CE 18 is refined into CE [24] 
* CE 17 is refined into CE [25] 
* CE 19 is refined into CE [26] 


#### Refined cost equations first/3 
* CE 24: first(A,B,B) = 1
     [B>=1,A>=1] 
* CE 25: first(V1,V,Out) = 1
     [V>=0,Out=0,V1=0] 
* CE 26: first(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of first/3 
* CEs [24] --> Loop 17 
* CEs [25,26] --> Loop 18 

#### Loops of first/3 
* Loop 17: first(A,B,B) [B>=1,A>=1] 
* Loop 18: first(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR first(V1,V,Out) 

#### Partial ranking functions of CR first(V1,V,Out) 


### Resulting Chains:first(V1,V,Out) 
* [18]
* [17]


### Merging Chains  first/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations half/2 
* CE 10 is refined into CE [27] 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 


#### Refined cost equations half/2 
* CE 27: half(V1,Out) = 1
     [Out=0,V1=1] 
* CE 28: half(V1,Out) = 1
     [Out=0,V1=0] 
* CE 29: half(V1,Out) = 1+ half(W1,X1)
     [W1>=0,X1+1=Out,W1+2=V1] 

### Cost equations --> "Loop" of half/2 
* CEs [29] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of half/2 
* Loop 19: half(V1,Out)->  half(V1',Out')
                  [V1'>=0,Out=Out'+1,V1'+2=V1] 
* Loop 20: half(V1,Out) [Out=0,V1=1] 
* Loop 21: half(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR half(V1,Out) 
* RF of phase [19]: [V1-1]

#### Partial ranking functions of CR half(V1,Out) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V1-1


### Resulting Chains:half(V1,Out) 
* [[19],21]
* [[19],20]
* [21]
* [20]


### Merging Chains  half/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[21,[19]]] --> 3 
* [[20,[19]]] --> 4 


### Specialization of cost equations sqr/2 
* CE 14 is refined into CE [30] 
* CE 13 is refined into CE [31,32,33,34] 


#### Refined cost equations sqr/2 
* CE 30: sqr(V1,Out) = 1
     [Out=0,V1=0] 
* CE 31: sqr(V1,Out) = 1+ sqr(W1,X1)+ dbl(Y1,Z1):1+ add(A2,B2,C2):1
     [X1=0,W1=0,C2=0,B2=0,A2=0,Z1=0,Y1=0,Out=1,V1=1] 
* CE 32: sqr(V1,Out) = 1+ sqr(W1,X1)+ dbl(Y1,Z1):1+ add(X1,A2,X1):2
     [X1>=1,X1+1=Out,W1=0,A2=0,Z1=0,Y1=0,V1=1] 
* CE 33: sqr(V1,Out) = 1+ sqr(W1,X1)+ dbl(Y1,Z1):2+ add(A2,Z1,Z1):1
     [Z1>=2,Z1+1=Out,Z1=2*W1,Z1=2*Y1,Z1+2=2*V1,X1=0,A2=0] 
* CE 34: sqr(V1,Out) = 1+ sqr(W1,X1)+ dbl(Y1,Z1):2+ add(X1,A2,B2):2
     [B2>=X1+2,X1>=1,B2=X1+A2,B2=Z1+X1,B2=2*W1+X1,B2=2*Y1+X1,B2+2=2*V1+X1,B2+1=Out] 

### Cost equations --> "Loop" of sqr/2 
* CEs [34] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [30] --> Loop 26 

#### Loops of sqr/2 
* Loop 22: sqr(V1,Out)->  sqr(V1',Out')
                  [Out>=2*V1,V1>=2,Out'+2*V1=Out+1,V1=V1'+1] 
* Loop 23: sqr(V1,Out)->  sqr(V1',Out')
                  [V1>=2,V1=V1'+1,2*V1=Out+1,Out'=0] 
* Loop 24: sqr(V1,Out)->  sqr(V1',Out')
                  [Out>=2,Out=Out'+1,V1'=0,V1=1] 
* Loop 25: sqr(V1,Out)->  sqr(V1',Out')
                  [Out'=0,V1'=0,Out=1,V1=1] 
* Loop 26: sqr(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR sqr(V1,Out) 
* RF of phase [22]: [V1-1]

#### Partial ranking functions of CR sqr(V1,Out) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V1-1


### Resulting Chains:sqr(V1,Out) 
* [[22],25,26]
* [26]
* [25,26]


### Merging Chains  sqr/2 into  External patterns of execution 
* [[26]] --> 1 
* [[26,25]] --> 2 
* [[26,25,[22]]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [35,36] 
* CE 3 is refined into CE [37,38,39,40] 
* CE 4 is refined into CE [41,42,43] 
* CE 5 is refined into CE [44,45] 
* CE 6 is refined into CE [46,47] 
* CE 7 is refined into CE [48,49,50] 


#### Refined cost equations start/2 
* CE 35: start(V1,V) = 0+ add(W1,V,V):1
     [V>=0,W1=0,V1=0] 
* CE 36: start(V1,V) = 0+ add(V1,W1,X1):2
     [X1>=V1,V1>=1,X1=V1+W1,X1=V1+V] 
* CE 37: start(V1,V) = 0+ half(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 38: start(V1,V) = 0+ half(W1,X1):2
     [X1=0,W1=1,V1=1] 
* CE 39: start(V1,V) = 0+ half(W1,X1):3
     [X1>=1,2*X1=W1,2*X1=V1] 
* CE 40: start(V1,V) = 0+ half(W1,X1):4
     [X1>=1,2*X1+1=W1,2*X1+1=V1] 
* CE 41: start(V1,V) = 0+ sqr(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 42: start(V1,V) = 0+ sqr(W1,X1):2
     [X1=1,W1=1,V1=1] 
* CE 43: start(V1,V) = 0+ sqr(V1,W1):3
     [W1>=2*V1,V1>=2] 
* CE 44: start(V1,V) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 45: start(V1,V) = 0+ dbl(W1,X1):2
     [X1>=2,X1=2*W1,X1=2*V1] 
* CE 46: start(V1,V) = 0+ first(V1,V,W1):1
     [V>=0,V1>=0,W1=0] 
* CE 47: start(V1,V) = 0+ first(V1,V,V):2
     [V>=1,V1>=1] 
* CE 48: start(V1,V) = 1+ sqr(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 49: start(V1,V) = 1+ sqr(W1,X1):2
     [X1=1,W1=1,V1=1] 
* CE 50: start(V1,V) = 1+ sqr(V1,W1):3
     [W1>=2*V1,V1>=2] 

### Cost equations --> "Loop" of start/2 
* CEs [46] --> Loop 27 
* CEs [36,38,39,40,42,43,45,47,49,50] --> Loop 28 
* CEs [35,37,41,44,48] --> Loop 29 

#### Loops of start/2 
* Loop 27: start(V1,V) [V>=0,V1>=0] 
* Loop 28: start(V1,V) [V1>=1] 
* Loop 29: start(V1,V) [V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [29]
* [28]
* [27]


### Merging Chains  start/2 into  External patterns of execution 
* [[29]] --> 1 
* [[27]] --> 2 
* [[28]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:add(V1,V,Out) -> [add(V1',V',Out')] 
1
#### Cost of phase [13]:add(V1,V,Out) -> [add(V1',V',Out')] 
1*it(13)+0
  Such that:it(13) =< V1
it(13) =< V1-V1'

#### Cost of chains of add(V1,V,Out):
* Chain [[13],14]: 1*it(13)+1
  Such that:it(13) =< -V+Out

  with precondition: [V+V1=Out,V1>=1,V>=0] 

* Chain [14]: 1
  with precondition: [V1=0,V=Out,V>=0] 


#### Cost of loops [16] 

 * loop 16:dbl(V1,Out) -> [dbl(V1',Out')] 
1
#### Cost of phase [16]:dbl(V1,Out) -> [dbl(V1',Out')] 
1*it(16)+0
  Such that:it(16) =< V1
it(16) =< V1-V1'

#### Cost of chains of dbl(V1,Out):
* Chain [[16],15]: 1*it(16)+1
  Such that:it(16) =< Out/2

  with precondition: [2*V1=Out,V1>=1] 

* Chain [15]: 1
  with precondition: [V1=0,Out=0] 


#### Cost of chains of first(V1,V,Out):
* Chain [18]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [17]: 1
  with precondition: [V=Out,V1>=1,V>=1] 


#### Cost of loops [19] 

 * loop 19:half(V1,Out) -> [half(V1',Out')] 
1
#### Cost of phase [19]:half(V1,Out) -> [half(V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of phase [19]:half(V1,Out) -> [half(V1',Out')] 
1*it(19)+0
  Such that:it(19) =< V1
it(19) =< V1-V1'

#### Cost of chains of half(V1,Out):
* Chain [[19],21]: 1*it(19)+1
  Such that:it(19) =< 2*Out

  with precondition: [V1=2*Out,V1>=2] 

* Chain [[19],20]: 1*it(19)+1
  Such that:it(19) =< 2*Out

  with precondition: [V1=2*Out+1,V1>=3] 

* Chain [21]: 1
  with precondition: [V1=0,Out=0] 

* Chain [20]: 1
  with precondition: [V1=1,Out=0] 


#### Cost of loops [22] 

 * loop 22:sqr(V1,Out) -> [sqr(V1',Out')] 
1*s(3)+1*s(4)+3
  Such that:s(3) =< V1'

#### Cost of phase [22]:sqr(V1,Out) -> [sqr(V1',Out')] 
3*it(22)+1*s(5)+1*s(6)+0
  Such that:it(22) =< V1-V1'
aux(2) =< V1
it(22) =< aux(2)
s(5) =< it(22)*aux(2)

#### Cost of chains of sqr(V1,Out):
* Chain [[22],25,26]: 3*it(22)+1*s(5)+1*s(6)+4
  Such that:aux(3) =< V1
it(22) =< aux(3)
s(5) =< it(22)*aux(3)

  with precondition: [V1>=2,Out>=2*V1] 

* Chain [26]: 1
  with precondition: [V1=0,Out=0] 

* Chain [25,26]: 4
  with precondition: [V1=1,Out=1] 


#### Cost of chains of start(V1,V):
* Chain [29]: 2
  with precondition: [V1=0] 

* Chain [28]: 10*s(7)+2*s(12)+2*s(13)+5
  Such that:aux(4) =< V1
s(7) =< aux(4)
s(12) =< s(7)*aux(4)

  with precondition: [V1>=1] 

* Chain [27]: 1
  with precondition: [V1>=0,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [29] with precondition: [V1=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [28] with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [V1>=0,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 50 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 144 ms.

