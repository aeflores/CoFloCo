
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [dbl/2]
1. non_recursive  : [s/2]
2. recursive [non_tail,multiple] : [activate/2,dbls/2,from/2,indx/3,sel/3]
3. non_recursive  : [dbl1/2]
4. non_recursive  : [quote/2]
5. non_recursive  : [sel1/3]
6. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into dbl/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into activate/2
3. SCC is partially evaluated into dbl1/2
4. SCC is partially evaluated into quote/2
5. SCC is partially evaluated into sel1/3
6. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations dbl/2 
* CE 26 is refined into CE [31] 
* CE 25 is refined into CE [32] 


#### Refined cost equations dbl/2 
* CE 31: dbl(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 32: dbl(V1,Out) = 1
     [Out=0,V1=0] 

### Cost equations --> "Loop" of dbl/2 
* CEs [31] --> Loop 19 
* CEs [32] --> Loop 20 

#### Loops of dbl/2 
* Loop 19: dbl(V1,Out) [V1>=0,V1+1=Out] 
* Loop 20: dbl(V1,Out) [Out=0,V1=0] 

### Ranking functions of CR dbl(V1,Out) 

#### Partial ranking functions of CR dbl(V1,Out) 


### Resulting Chains:dbl(V1,Out) 
* [20]
* [19]


### Merging Chains  dbl/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations activate/2 
* CE 18 is refined into CE [33] 
* CE 22 is refined into CE [34] 
* CE 15 is refined into CE [35] 
* CE 21 is refined into CE [36,37] 
* CE 13 is refined into CE [38] 
* CE 16 is refined into CE [39] 
* CE 20 is refined into CE [40] 
* CE 19 is refined into CE [41] 
* CE 17 is refined into CE [42] 
* CE 14 is refined into CE [43] 


#### Refined cost equations activate/2 
* CE 33: activate(A,A) = 2
     [A>=1] 
* CE 34: activate(A,A) = 1
     [A>=0] 
* CE 35: activate(V1,Out) = 2+ activate(W1,X1)
     [Out+W1>=V1,V1>=W1+1,W1>=0,V1+X1=Out+W1] 
* CE 36: activate(V1,Out) = 1+ activate(W1,X1)+ dbl(Y1,Z1):1
     [W1>=0,W1+1=V1,X1=0,Z1=0,Y1=0,Out=0] 
* CE 37: activate(V1,Out) = 1+ activate(W1,X1)+ dbl(Y1,Out):2
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 38: activate(V1,Out) = 2+ activate(W1,X1)
     [V1>=W1+1,W1>=0,X1=1,Out=1] 
* CE 39: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,B2)
     [A2>=0,Y1>=0,W1>=0,Y1+A2+1=X1,Z1+B2+3=Out,W1+1=V1] 
* CE 40: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,Out)
     [Z1>=A2+1,A2>=0,Y1>=0,W1>=0,W1+Y1+1=V1,X1=0] 
* CE 41: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 42: activate(V1,Out) = 2+ activate(W1,X1)+ activate(W1,Y1)
     [W1>=0,X1+Y1+3=Out,W1+1=V1] 
* CE 43: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,B2)+ activate(C2,D2)+ activate(A2,E2)
     [C2>=0,A2>=0,Y1>=0,W1>=0,Z1+B2+D2+E2+3=Out,Y1+C2+1=X1,W1+A2+1=V1] 

### Cost equations --> "Loop" of activate/2 
* CEs [43] --> Loop 21 
* CEs [41] --> Loop 22 
* CEs [42] --> Loop 23 
* CEs [39] --> Loop 24 
* CEs [40] --> Loop 25 
* CEs [35,37] --> Loop 26 
* CEs [38] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [33,34] --> Loop 29 

#### Loops of activate/2 
* Loop 21: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out'3)  activate(V1'4,Out'4)  activate(V1'3,A'5)
                  [V1'4>=0,V1'3>=0,V1'2>=0,V1'>=0,Out=Out'2+Out'3+Out'4+A'5+3,V1'2+V1'4+1=Out',V1'+V1'3+1=V1] 
* Loop 22: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out>=Out'+1,V1>=V1'+1,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 23: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [V1>=1,Out=Out'+Out'2+3,V1=V1'2+1,V1=V1'+1] 
* Loop 24: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out'3)
                  [Out'>=V1'2+1,V1'2>=0,V1>=1,Out=Out'2+Out'3+3,V1'2+V1'3+1=Out',V1=V1'+1] 
* Loop 25: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out)
                  [Out'2>=V1'3+1,V1>=V1'+1,V1'3>=0,V1'>=0,V1'+V1'2+1=V1,Out'=0] 
* Loop 26: activate(V1,Out)->  activate(V1',Out')
                  [Out+V1'>=V1,V1>=V1'+1,V1'>=0,V1+Out'=Out+V1'] 
* Loop 27: activate(V1,Out)->  activate(V1',Out')
                  [V1>=V1'+1,V1'>=0,Out'=1,Out=1] 
* Loop 28: activate(V1,Out)->  activate(V1',Out')
                  [V1>=1,V1=V1'+1,Out'=0,Out=0] 
* Loop 29: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [21,22,23,24,25,26,27,28]:
  - RF of loop [21:1,21:3,21:5,22:1,22:2,23:1,23:2,24:1,25:1,25:2,26:1,27:1,28:1]:
    V1 depends on loops [21:2,21:4,24:2,24:3,25:3] 


### Resulting Chains:activate(V1,Out) 
* [multiple([21,22,23,24,25,26,27,28],[[],[29]])]...
* [29]


### Merging Chains  activate/2 into  External patterns of execution 
* [[29]] --> 1 
* [[multiple([21,22,23,24,25,26,27,28],[[],[29]])]] --> 2 


### Specialization of cost equations dbl1/2 
* CE 28 is refined into CE [44] 
* CE 27 is refined into CE [45] 


#### Refined cost equations dbl1/2 
* CE 44: dbl1(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 45: dbl1(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of dbl1/2 
* CEs [44] --> Loop 30 
* CEs [45] --> Loop 31 

#### Loops of dbl1/2 
* Loop 30: dbl1(V1,Out) [V1>=0,Out=0] 
* Loop 31: dbl1(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR dbl1(V1,Out) 

#### Partial ranking functions of CR dbl1(V1,Out) 


### Resulting Chains:dbl1(V1,Out) 
* [31]
* [30]


### Merging Chains  dbl1/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations quote/2 
* CE 30 is refined into CE [46] 
* CE 29 is refined into CE [47] 


#### Refined cost equations quote/2 
* CE 46: quote(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 47: quote(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of quote/2 
* CEs [46] --> Loop 32 
* CEs [47] --> Loop 33 

#### Loops of quote/2 
* Loop 32: quote(V1,Out) [V1>=0,Out=0] 
* Loop 33: quote(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR quote(V1,Out) 

#### Partial ranking functions of CR quote(V1,Out) 


### Resulting Chains:quote(V1,Out) 
* [33]
* [32]


### Merging Chains  quote/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations sel1/3 
* CE 24 is refined into CE [48] 
* CE 23 is refined into CE [49,50] 


#### Refined cost equations sel1/3 
* CE 48: sel1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 49: sel1(V1,V,Out) = 1+ activate(Out,Out):1
     [V>=Out+1,Out>=0,V1=0] 
* CE 50: sel1(V1,V,Out) = 1+ activate(W1,Out):2
     [V>=W1+1,W1>=1,V1=0] 

### Cost equations --> "Loop" of sel1/3 
* CEs [50] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [49] --> Loop 36 

#### Loops of sel1/3 
* Loop 34: sel1(V1,V,Out) [V>=2,V1=0] 
* Loop 35: sel1(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 36: sel1(V1,V,Out) [V>=Out+1,Out>=0,V1=0] 

### Ranking functions of CR sel1(V1,V,Out) 

#### Partial ranking functions of CR sel1(V1,V,Out) 


### Resulting Chains:sel1(V1,V,Out) 
* [36]
* [35]
* [34]...


### Merging Chains  sel1/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [51] 
* CE 3 is refined into CE [52,53,54,55,56] 
* CE 4 is refined into CE [57,58,59] 
* CE 5 is refined into CE [60] 
* CE 6 is refined into CE [61,62,63] 
* CE 7 is refined into CE [64,65] 
* CE 8 is refined into CE [66,67,68] 
* CE 9 is refined into CE [69,70] 
* CE 10 is refined into CE [71,72] 
* CE 11 is refined into CE [73,74] 
* CE 12 is refined into CE [75,76] 


#### Refined cost equations start/2 
* CE 51: start(V1,V) = 1
     [V1>=0] 
* CE 52: start(V1,V) = 1+ activate(W1,W1):1+ activate(V,V):1+ activate(X1,X1):1+ activate(V,V):1
     [V>=0,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 53: start(V1,V) = 1+ activate(W1,W1):1+ activate(V,V):1+ activate(X1,X1):1+ activate(V,Y1):2
     [V>=1,X1>=0,W1>=0,W1+X1+1=V1] 
* CE 54: start(V1,V) = 1+ activate(W1,W1):1+ activate(V,V):1+ activate(X1,Y1):2
     [X1>=1,V>=0,W1>=0,W1+X1+1=V1] 
* CE 55: start(V1,V) = 1+ activate(W1,W1):1+ activate(V,X1):2
     [Y1>=0,V>=1,W1>=0,W1+Y1+1=V1] 
* CE 56: start(V1,V) = 1+ activate(W1,X1):2
     [Y1>=0,W1>=1,V>=0,W1+Y1+1=V1] 
* CE 57: start(V1,V) = 1+ activate(W1,W1):1+ activate(X1,X1):1
     [X1>=0,W1>=0,W1+X1+1=V1] 
* CE 58: start(V1,V) = 1+ activate(W1,W1):1+ activate(X1,Y1):2
     [X1>=1,W1>=0,W1+X1+1=V1] 
* CE 59: start(V1,V) = 1+ activate(W1,X1):2
     [Y1>=0,W1>=1,W1+Y1+1=V1] 
* CE 60: start(V1,V) = 1
     [V1>=0] 
* CE 61: start(V1,V) = 1+ activate(V1,V1):1+ activate(V1,V1):1
     [V1>=0] 
* CE 62: start(V1,V) = 1+ activate(V1,V1):1+ activate(V1,W1):2
     [V1>=1] 
* CE 63: start(V1,V) = 1+ activate(V1,W1):2
     [V1>=1] 
* CE 64: start(V1,V) = 1+ activate(W1,W1):1
     [V>=W1+1,W1>=0,V1=0] 
* CE 65: start(V1,V) = 1+ activate(W1,X1):2
     [V>=W1+1,W1>=1,V1=0] 
* CE 66: start(V1,V) = 0+ sel1(W1,V,X1):1
     [V>=X1+1,X1>=0,W1=0,V1=0] 
* CE 67: start(V1,V) = 0+ sel1(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 68: start(V1,V) = 0+ sel1(W1,V,X1):3
     [V>=2,W1=0,V1=0] 
* CE 69: start(V1,V) = 0+ dbl(W1,X1):1
     [X1=0,W1=0,V1=0] 
* CE 70: start(V1,V) = 0+ dbl(W1,X1):2
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 71: start(V1,V) = 0+ dbl1(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 72: start(V1,V) = 0+ dbl1(V1,W1):2
     [V1>=0,W1=0] 
* CE 73: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 74: start(V1,V) = 0+ activate(V1,W1):2
     [V1>=1] 
* CE 75: start(V1,V) = 0+ quote(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 76: start(V1,V) = 0+ quote(V1,W1):2
     [V1>=0,W1=0] 

### Cost equations --> "Loop" of start/2 
* CEs [51,52,57,60,61,64,66,67,69,70,71,72,73,75,76] --> Loop 37 
* CEs [53,54,55,56,58,59,62,63,74] --> Loop 38 
* CEs [65,68] --> Loop 39 

#### Loops of start/2 
* Loop 37: start(V1,V) [V1>=0] 
* Loop 38: start(V1,V) [V1>=1] 
* Loop 39: start(V1,V) [V>=2,V1=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [39]...
* [38]...
* [37]


### Merging Chains  start/2 into  External patterns of execution 
* [[37]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of dbl(V1,Out):
* Chain [20]: 1
  with precondition: [V1=0,Out=0] 

* Chain [19]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of loops [21,22,23,24,25,26,27,28] 

 * loop 21:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3),activate(V1'4,Out'4),activate(V1'5,Out'5)] 
2
 * loop 22:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 23:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 24:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3)] 
2
 * loop 25:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3)] 
2
 * loop 26:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 27:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 28:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [21,22,23,24,25,26,27,28]:activate(V1,Out) -> [] 
16*it(21)+2*it([29])+0
#### Cost of chains of activate(V1,Out):
* Chain [multiple([21,22,23,24,25,26,27,28],[[],[29]])]...: 16*it(21)+2*it([29])+0
  with precondition: [V1>=1] 

* Chain [29]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of dbl1(V1,Out):
* Chain [31]: 1
  with precondition: [V1=0,Out=1] 

* Chain [30]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of quote(V1,Out):
* Chain [33]: 1
  with precondition: [V1=0,Out=1] 

* Chain [32]: 0
  with precondition: [Out=0,V1>=0] 


#### Cost of chains of sel1(V1,V,Out):
* Chain [36]: 3
  with precondition: [V1=0,Out>=0,V>=Out+1] 

* Chain [35]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [34]...: 18*s(1)+1
  with precondition: [V1=0,V>=2] 


#### Cost of chains of start(V1,V):
* Chain [39]...: 1*aux(2)+0
  with precondition: [V1=0,V>=2] 

* Chain [38]...: 1*aux(3)+0
  with precondition: [V1>=1] 

* Chain [37]: 9
  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [39]... with precondition: [V1=0,V>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37] with precondition: [V1>=0] 
    - Upper bound: 9 
    - Complexity: constant 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 102 ms.
* Invariants computed in 90 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 29 ms.
* Refinement performed in 295 ms.
* Termination proved in 33 ms.
* Upper bounds computed in 202 ms.
   - Equation cost structures 71 ms.
   - Phase cost structures 146 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 846 ms.

