
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. non_recursive  : [nil/1]
2. non_recursive  : [prefix/2]
3. non_recursive  : [s/2]
4. recursive [non_tail,multiple] : [activate/2,app/3,zWadr/3]
5. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into prefix/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into activate/2
5. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 18 is refined into CE [22] 
* CE 19 is refined into CE [23] 


#### Refined cost equations from/2 
* CE 22: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 23: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [22] --> Loop 12 
* CEs [23] --> Loop 13 

#### Loops of from/2 
* Loop 12: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 13: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [13]
* [12]


### Merging Chains  from/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations prefix/2 
* CE 21 is refined into CE [24] 
* CE 20 is refined into CE [25] 


#### Refined cost equations prefix/2 
* CE 24: prefix(V1,Out) = 1
     [V1>=0,V1+1=Out] 
* CE 25: prefix(V1,Out) = 2
     [Out>=3,Out=2*V1+3] 

### Cost equations --> "Loop" of prefix/2 
* CEs [24] --> Loop 14 
* CEs [25] --> Loop 15 

#### Loops of prefix/2 
* Loop 14: prefix(V1,Out) [V1>=0,V1+1=Out] 
* Loop 15: prefix(V1,Out) [V1>=0,2*V1+3=Out] 

### Ranking functions of CR prefix(V1,Out) 

#### Partial ranking functions of CR prefix(V1,Out) 


### Resulting Chains:prefix(V1,Out) 
* [15]
* [14]


### Merging Chains  prefix/2 into  External patterns of execution 
* [[14]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations activate/2 
* CE 15 is refined into CE [26] 
* CE 17 is refined into CE [27] 
* CE 13 is refined into CE [28,29] 
* CE 14 is refined into CE [30] 
* CE 16 is refined into CE [31,32] 
* CE 12 is refined into CE [33] 
* CE 11 is refined into CE [34] 
* CE 10 is refined into CE [35] 
* CE 9 is refined into CE [36] 


#### Refined cost equations activate/2 
* CE 26: activate(V1,Out) = 2
     [Out=0,V1=0] 
* CE 27: activate(A,A) = 1
     [A>=0] 
* CE 28: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 29: activate(V1,Out) = 1+ activate(W1,X1)+ from(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 30: activate(V1,Out) = 2+ activate(W1,X1)
     [X1>=0,W1>=0,X1+1=Out,W1+1=V1] 
* CE 31: activate(V1,Out) = 1+ activate(W1,X1)+ prefix(Y1,Out):1
     [W1>=0,Out>=1,Out=X1+1,Out=Y1+1,W1+1=V1] 
* CE 32: activate(V1,Out) = 1+ activate(W1,X1)+ prefix(Y1,Out):2
     [W1>=0,Out>=3,W1+1=V1,Out=2*X1+3,Out=2*Y1+3] 
* CE 33: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,B2)
     [X1+Z1+B2+1>=Out,Out>=Z1+B2+2,Z1>=0,Y1>=0,W1>=0,X1+Z1+B2+1=Out+A2,W1+Y1+1=V1] 
* CE 34: activate(V1,Out) = 3+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,B2)+ activate(C2,D2)+ activate(E2,F2)
     [X1+Z1+B2+D2+F2+2>=Out+C2+E2,Out+C2>=X1+B2+D2+F2+4,X1>=C2+1,E2>=0,C2>=0,Y1>=0,W1>=0,X1+Z1+B2+D2+F2+2=Out+A2+C2+E2,W1+Y1+1=V1] 
* CE 35: activate(V1,Out) = 2+ activate(W1,X1)+ activate(Y1,Z1)
     [Z1>=0,Y1>=0,X1>=0,W1>=0,X1+Z1+1=Out,W1+Y1+1=V1] 
* CE 36: activate(V1,Out) = 3+ activate(W1,X1)+ activate(Y1,Z1)+ activate(A2,B2)+ activate(C2,D2)
     [Z1>=C2+1,X1>=A2+1,C2>=0,A2>=0,Y1>=0,W1>=0,Out+A2+C2=X1+Z1+B2+D2+2,W1+Y1+1=V1] 

### Cost equations --> "Loop" of activate/2 
* CEs [36] --> Loop 16 
* CEs [35] --> Loop 17 
* CEs [34] --> Loop 18 
* CEs [33] --> Loop 19 
* CEs [28,30,31] --> Loop 20 
* CEs [29,32] --> Loop 21 
* CEs [26,27] --> Loop 22 

#### Loops of activate/2 
* Loop 16: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out'3)  activate(V1'4,Out'4)
                  [Out'2>=V1'4+1,Out'>=V1'3+1,V1'4>=0,V1'3>=0,V1'2>=0,V1'>=0,Out'+Out'2+Out'3+Out'4+2=Out+V1'3+V1'4,V1'+V1'2+1=V1] 
* Loop 17: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)
                  [Out'2>=0,V1'2>=0,Out'>=0,V1'>=0,Out'+Out'2+1=Out,V1'+V1'2+1=V1] 
* Loop 18: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out'3)  activate(V1'4,Out'4)  activate(V1'5,Out'5)
                  [Out'+Out'2+Out'3+Out'4+Out'5+2>=Out+V1'4+V1'5,Out+V1'4>=Out'+Out'3+Out'4+Out'5+4,Out'>=V1'4+1,V1'5>=0,V1'4>=0,V1'2>=0,V1'>=0,Out+V1'3+V1'4+V1'5=Out'+Out'2+Out'3+Out'4+Out'5+2,V1'+V1'2+1=V1] 
* Loop 19: activate(V1,Out)->  activate(V1',Out')  activate(V1'2,Out'2)  activate(V1'3,Out'3)
                  [Out'+Out'2+Out'3+1>=Out,Out>=Out'2+Out'3+2,Out'2>=0,V1'2>=0,V1'>=0,Out+V1'3=Out'+Out'2+Out'3+1,V1'+V1'2+1=V1] 
* Loop 20: activate(V1,Out)->  activate(V1',Out')
                  [Out>=1,V1>=1,Out=Out'+1,V1=V1'+1] 
* Loop 21: activate(V1,Out)->  activate(V1',Out')
                  [Out>=3,V1>=1,V1=V1'+1,Out=2*Out'+3] 
* Loop 22: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [16,17,18,19,20,21]:
  - RF of loop [16:1,16:2,17:1,17:2,18:1,18:2,19:1,19:2,20:1,21:1]:
    V1 depends on loops [16:3,16:4,18:3,18:4,18:5,19:3] 


### Resulting Chains:activate(V1,Out) 
* [multiple([16,17,18,19,20,21],[[],[22]])]...
* [22]


### Merging Chains  activate/2 into  External patterns of execution 
* [[22]] --> 1 
* [[multiple([16,17,18,19,20,21],[[],[22]])]] --> 2 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [37,38,39] 
* CE 3 is refined into CE [40] 
* CE 4 is refined into CE [41,42,43,44] 
* CE 5 is refined into CE [45,46] 
* CE 6 is refined into CE [47,48] 
* CE 7 is refined into CE [49,50] 
* CE 8 is refined into CE [51,52] 


#### Refined cost equations start/2 
* CE 37: start(V1,V) = 2+ activate(W1,W1):1+ activate(X1,X1):1
     [V>=X1+1,V1>=W1+1,X1>=0,W1>=0] 
* CE 38: start(V1,V) = 2+ activate(W1,W1):1+ activate(X1,Y1):2
     [V>=X1+1,V1>=W1+1,X1>=1,W1>=0] 
* CE 39: start(V1,V) = 2+ activate(W1,X1):2
     [V>=Y1+1,V1>=W1+1,Y1>=0,W1>=1] 
* CE 40: start(V1,V) = 1
     [] 
* CE 41: start(V1,V) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(Y1,Y1):1
     [V>=W1+Y1+2,V1>=X1+1,Y1>=0,X1>=0,W1>=0] 
* CE 42: start(V1,V) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(Y1,Z1):2
     [V>=W1+Y1+2,V1>=X1+1,Y1>=1,X1>=0,W1>=0] 
* CE 43: start(V1,V) = 2+ activate(W1,W1):1+ activate(X1,Y1):2
     [V>=W1+Z1+2,V1>=X1+1,Z1>=0,X1>=1,W1>=0] 
* CE 44: start(V1,V) = 2+ activate(W1,X1):2
     [V>=W1+Y1+2,V1>=Z1+1,Y1>=0,Z1>=0,W1>=1] 
* CE 45: start(V1,V) = 1+ activate(W1,W1):1
     [V1>=W1+1,W1>=0,V>=0] 
* CE 46: start(V1,V) = 1+ activate(W1,X1):2
     [V1>=W1+1,W1>=1,V>=0] 
* CE 47: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 48: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 49: start(V1,V) = 0+ prefix(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 50: start(V1,V) = 0+ prefix(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 51: start(V1,V) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 52: start(V1,V) = 0+ activate(V1,W1):2
     [V1>=1] 

### Cost equations --> "Loop" of start/2 
* CEs [38,39,42,43,44,46,52] --> Loop 23 
* CEs [37,40,41,45,47,48,49,50,51] --> Loop 24 

#### Loops of start/2 
* Loop 23: start(V1,V) [V1>=1] 
* Loop 24: start(V1,V) [] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [24]
* [23]...


### Merging Chains  start/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [13]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [12]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of chains of prefix(V1,Out):
* Chain [15]: 2
  with precondition: [2*V1+3=Out,V1>=0] 

* Chain [14]: 1
  with precondition: [V1+1=Out,V1>=0] 


#### Cost of loops [16,17,18,19,20,21] 

 * loop 16:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3),activate(V1'4,Out'4)] 
3
 * loop 17:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2)] 
2
 * loop 18:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3),activate(V1'4,Out'4),activate(V1'5,Out'5)] 
3
 * loop 19:activate(V1,Out) -> [activate(V1',Out'),activate(V1'2,Out'2),activate(V1'3,Out'3)] 
2
 * loop 20:activate(V1,Out) -> [activate(V1',Out')] 
2
 * loop 21:activate(V1,Out) -> [activate(V1',Out')] 
3
#### Cost of phase [16,17,18,19,20,21]:activate(V1,Out) -> [] 
8*it(16)+7*it(17)+2*it([22])+0
#### Cost of chains of activate(V1,Out):
* Chain [multiple([16,17,18,19,20,21],[[],[22]])]...: 8*it(16)+7*it(17)+2*it([22])+0
  with precondition: [V1>=1] 

* Chain [22]: 2
  with precondition: [V1=Out,V1>=0] 


#### Cost of chains of start(V1,V):
* Chain [24]: 8
  with precondition: [] 

* Chain [23]...: 1*aux(9)+0
  with precondition: [V1>=1] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [23]... with precondition: [V1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 87 ms.
* Invariants computed in 92 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 36 ms.
* Refinement performed in 268 ms.
* Termination proved in 34 ms.
* Upper bounds computed in 263 ms.
   - Equation cost structures 53 ms.
   - Phase cost structures 229 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 847 ms.

