
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [add/3]
1. non_recursive  : [from/2]
2. non_recursive  : [fst/3]
3. non_recursive  : [len/2]
4. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into add/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into fst/3
3. SCC is partially evaluated into len/2
4. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations add/3 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations add/3 
* CE 15: add(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 16: add(V1,V,Out) = 1
     [V>=0,Out=2,V1=2] 
* CE 17: add(A,B,B) = 1
     [B>=0,A=1] 

### Cost equations --> "Loop" of add/3 
* CEs [15] --> Loop 10 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of add/3 
* Loop 10: add(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 11: add(V1,V,Out) [V>=0,Out=2,V1=2] 
* Loop 12: add(A,B,B) [B>=0,A=1] 

### Ranking functions of CR add(V1,V,Out) 

#### Partial ranking functions of CR add(V1,V,Out) 


### Resulting Chains:add(V1,V,Out) 
* [12]
* [11]
* [10]


### Merging Chains  add/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 


### Specialization of cost equations fst/3 
* CE 7 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations fst/3 
* CE 18: fst(A,B,B) = 1
     [B>=1,A=2] 
* CE 19: fst(V1,V,Out) = 1
     [V>=0,Out=0,V1=1] 
* CE 20: fst(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fst/3 
* CEs [18] --> Loop 13 
* CEs [19,20] --> Loop 14 

#### Loops of fst/3 
* Loop 13: fst(A,B,B) [B>=1,A=2] 
* Loop 14: fst(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fst(V1,V,Out) 

#### Partial ranking functions of CR fst(V1,V,Out) 


### Resulting Chains:fst(V1,V,Out) 
* [14]
* [13]


### Merging Chains  fst/3 into  External patterns of execution 
* [[13]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations len/2 
* CE 13 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 12 is refined into CE [23] 


#### Refined cost equations len/2 
* CE 21: len(V1,Out) = 1
     [V1>=1,Out=2] 
* CE 22: len(V1,Out) = 0
     [V1>=0,Out=0] 
* CE 23: len(V1,Out) = 1
     [Out=1,V1=0] 

### Cost equations --> "Loop" of len/2 
* CEs [21] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 

#### Loops of len/2 
* Loop 15: len(V1,Out) [V1>=1,Out=2] 
* Loop 16: len(V1,Out) [V1>=0,Out=0] 
* Loop 17: len(V1,Out) [Out=1,V1=0] 

### Ranking functions of CR len(V1,Out) 

#### Partial ranking functions of CR len(V1,Out) 


### Resulting Chains:len(V1,Out) 
* [17]
* [16]
* [15]


### Merging Chains  len/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [24,25] 
* CE 3 is refined into CE [26] 
* CE 4 is refined into CE [27,28,29] 
* CE 5 is refined into CE [30,31,32] 


#### Refined cost equations start/2 
* CE 24: start(V1,V) = 0+ fst(W1,V,V):1
     [V>=1,W1=2,V1=2] 
* CE 25: start(V1,V) = 0+ fst(V1,V,W1):2
     [V>=0,V1>=0,W1=0] 
* CE 26: start(V1,V) = 1
     [V1>=0] 
* CE 27: start(V1,V) = 0+ add(W1,V,V):1
     [V>=0,W1=1,V1=1] 
* CE 28: start(V1,V) = 0+ add(W1,V,X1):2
     [V>=0,X1=2,W1=2,V1=2] 
* CE 29: start(V1,V) = 0+ add(V1,V,W1):3
     [V>=0,V1>=0,W1=0] 
* CE 30: start(V1,V) = 0+ len(W1,X1):1
     [X1=1,W1=0,V1=0] 
* CE 31: start(V1,V) = 0+ len(V1,W1):2
     [V1>=0,W1=0] 
* CE 32: start(V1,V) = 0+ len(V1,W1):3
     [V1>=1,W1=2] 

### Cost equations --> "Loop" of start/2 
* CEs [24,28] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [25,26,29,30,31,32] --> Loop 20 

#### Loops of start/2 
* Loop 18: start(V1,V) [V>=0,V1=2] 
* Loop 19: start(V1,V) [V>=0,V1=1] 
* Loop 20: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [20]
* [19]
* [18]


### Merging Chains  start/2 into  External patterns of execution 
* [[19],[20]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of add(V1,V,Out):
* Chain [12]: 1
  with precondition: [V1=1,V=Out,V>=0] 

* Chain [11]: 1
  with precondition: [V1=2,Out=2,V>=0] 

* Chain [10]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of fst(V1,V,Out):
* Chain [14]: 1
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [13]: 1
  with precondition: [V1=2,V=Out,V>=1] 


#### Cost of chains of len(V1,Out):
* Chain [17]: 1
  with precondition: [V1=0,Out=1] 

* Chain [16]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [15]: 1
  with precondition: [Out=2,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [20]: 1
  with precondition: [V1>=0] 

* Chain [19]: 1
  with precondition: [V1=1,V>=0] 

* Chain [18]: 1
  with precondition: [V1=2,V>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [20] with precondition: [V1>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V1=1,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [V1=2,V>=0] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of start(V1,V): 1 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 65 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 170 ms.

