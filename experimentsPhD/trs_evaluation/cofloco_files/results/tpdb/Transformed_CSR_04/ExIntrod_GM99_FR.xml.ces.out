
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [cons/3]
1. non_recursive  : [filter/3]
2. non_recursive  : [from/2]
3. non_recursive  : [s/2]
4. non_recursive  : [sieve/2]
5. recursive [non_tail,multiple] : [activate/2]
6. non_recursive  : [if/4]
7. non_recursive  : [primes/1]
8. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into from/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into activate/2
6. SCC is partially evaluated into if/4
7. SCC is partially evaluated into primes/1
8. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 


#### Refined cost equations from/2 
* CE 16: from(V,Out) = 1
     [V>=0,V+1=Out] 
* CE 17: from(V,Out) = 2
     [Out>=3,Out=2*V+3] 

### Cost equations --> "Loop" of from/2 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of from/2 
* Loop 11: from(V,Out) [V>=0,V+1=Out] 
* Loop 12: from(V,Out) [V>=0,2*V+3=Out] 

### Ranking functions of CR from(V,Out) 

#### Partial ranking functions of CR from(V,Out) 


### Resulting Chains:from(V,Out) 
* [12]
* [11]


### Merging Chains  from/2 into  External patterns of execution 
* [[11]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations activate/2 
* CE 10 is refined into CE [18] 
* CE 11 is refined into CE [19,20] 
* CE 9 is refined into CE [21] 
* CE 8 is refined into CE [22] 


#### Refined cost equations activate/2 
* CE 18: activate(V,Out) = 2+ activate(W,X)
     [Out+W>=V,V>=W+1,W>=0,V+X=Out+W] 
* CE 19: activate(V,Out) = 1+ activate(W,X)+ from(Y,Out):1
     [W>=0,Out>=1,Out=X+1,Out=Y+1,W+1=V] 
* CE 20: activate(V,Out) = 1+ activate(W,X)+ from(Y,Out):2
     [W>=0,Out>=3,W+1=V,Out=2*X+3,Out=2*Y+3] 
* CE 21: activate(A,A) = 1
     [A>=0] 
* CE 22: activate(V,Out) = 2+ activate(W,X)+ activate(Y,Z)
     [Z>=0,Y>=0,X>=0,W>=0,X+Z+1=Out,W+Y+1=V] 

### Cost equations --> "Loop" of activate/2 
* CEs [22] --> Loop 13 
* CEs [21] --> Loop 14 
* CEs [18,19] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of activate/2 
* Loop 13: activate(V,Out)->  activate(V',Out')  activate(V'2,Out'2)
                  [Out'2>=0,V'2>=0,Out'>=0,V'>=0,Out'+Out'2+1=Out,V'+V'2+1=V] 
* Loop 14: activate(A,A) [A>=0] 
* Loop 15: activate(V,Out)->  activate(V',Out')
                  [Out+V'>=V,V>=V'+1,V'>=0,V+Out'=Out+V'] 
* Loop 16: activate(V,Out)->  activate(V',Out')
                  [Out>=3,V>=1,V=V'+1,Out=2*Out'+3] 

### Ranking functions of CR activate(V,Out) 
* RF of phase [13,15,16]: [V]

#### Partial ranking functions of CR activate(V,Out) 
* Partial RF of phase [13,15,16]:
  - RF of loop [13:1,13:2,15:1,16:1]:
    V


### Resulting Chains:activate(V,Out) 
* [14]
* [multiple([13,15,16],[[14]])]


### Merging Chains  activate/2 into  External patterns of execution 
* [[14]] --> 1 
* [[multiple([13,15,16],[[14]])]] --> 2 


### Specialization of cost equations if/4 
* CE 12 is refined into CE [23,24] 
* CE 13 is refined into CE [25,26] 


#### Refined cost equations if/4 
* CE 23: if(A,B,C,B) = 1+ activate(B,B):1
     [B>=0,C>=0,A=1] 
* CE 24: if(V,V1,V2,Out) = 1+ activate(V1,Out):2
     [Out>=V1,V1>=1,V2>=0,V=1] 
* CE 25: if(A,B,C,C) = 1+ activate(C,C):1
     [C>=0,B>=0,A=0] 
* CE 26: if(V,V1,V2,Out) = 1+ activate(V2,Out):2
     [Out>=V2,V2>=1,V1>=0,V=0] 

### Cost equations --> "Loop" of if/4 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of if/4 
* Loop 17: if(V,V1,V2,Out) [Out>=V1,V2>=0,V1>=1,V=1] 
* Loop 18: if(A,B,C,B) [C>=0,B>=0,A=1] 
* Loop 19: if(V,V1,V2,Out) [Out>=V2,V2>=1,V1>=0,V=0] 
* Loop 20: if(A,B,C,C) [C>=0,B>=0,A=0] 

### Ranking functions of CR if(V,V1,V2,Out) 

#### Partial ranking functions of CR if(V,V1,V2,Out) 


### Resulting Chains:if(V,V1,V2,Out) 
* [20]
* [19]
* [18]
* [17]


### Merging Chains  if/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 


### Specialization of cost equations primes/1 
* CE 7 is refined into CE [27,28] 


#### Refined cost equations primes/1 
* CE 27: primes(Out) = 4+ from(B,C):1
     [C=3,B=2,Out=4] 
* CE 28: primes(Out) = 4+ from(B,C):2
     [C=7,B=2,Out=8] 

### Cost equations --> "Loop" of primes/1 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of primes/1 
* Loop 21: primes(Out) [Out=8] 
* Loop 22: primes(Out) [Out=4] 

### Ranking functions of CR primes(Out) 

#### Partial ranking functions of CR primes(Out) 


### Resulting Chains:primes(Out) 
* [22]
* [21]


### Merging Chains  primes/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations start/3 
* CE 2 is refined into CE [29,30] 
* CE 3 is refined into CE [31,32] 
* CE 4 is refined into CE [33] 
* CE 5 is refined into CE [34,35,36,37] 
* CE 6 is refined into CE [38,39] 


#### Refined cost equations start/3 
* CE 29: start(V,V1,V2) = 0+ primes(W2):1
     [W2=4] 
* CE 30: start(V,V1,V2) = 0+ primes(W2):2
     [W2=8] 
* CE 31: start(V,V1,V2) = 0+ activate(V,V):1
     [V>=0] 
* CE 32: start(V,V1,V2) = 0+ activate(V,W2):2
     [W2>=V,V>=1] 
* CE 33: start(V,V1,V2) = 1
     [V>=0] 
* CE 34: start(V,V1,V2) = 0+ if(W2,V1,V2,V2):1
     [V2>=0,V1>=0,W2=0,V=0] 
* CE 35: start(V,V1,V2) = 0+ if(W2,V1,V2,X2):2
     [X2>=V2,V2>=1,V1>=0,W2=0,V=0] 
* CE 36: start(V,V1,V2) = 0+ if(W2,V1,V2,V1):3
     [V1>=0,V2>=0,W2=1,V=1] 
* CE 37: start(V,V1,V2) = 0+ if(W2,V1,V2,X2):4
     [X2>=V1,V2>=0,V1>=1,W2=1,V=1] 
* CE 38: start(V,V1,V2) = 0+ from(W2,X2):1
     [X2>=1,X2=W2+1,X2=V+1] 
* CE 39: start(V,V1,V2) = 0+ from(W2,X2):2
     [X2>=3,X2=2*W2+3,X2=2*V+3] 

### Cost equations --> "Loop" of start/3 
* CEs [29,30,31,32,33,34,35,36,37,38,39] --> Loop 23 

#### Loops of start/3 
* Loop 23: start(V,V1,V2) [] 

### Ranking functions of CR start(V,V1,V2) 

#### Partial ranking functions of CR start(V,V1,V2) 


### Resulting Chains:start(V,V1,V2) 
* [23]


### Merging Chains  start/3 into  External patterns of execution 
* [[23]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V,Out):
* Chain [12]: 2
  with precondition: [2*V+3=Out,V>=0] 

* Chain [11]: 1
  with precondition: [V+1=Out,V>=0] 


#### Cost of loops [13,15,16] 

 * loop 13:activate(V,Out) -> [activate(V',Out'),activate(V'2,Out'2)] 
2
 * loop 15:activate(V,Out) -> [activate(V',Out')] 
2
 * loop 16:activate(V,Out) -> [activate(V',Out')] 
3
#### Cost of phase [13,15,16]:activate(V,Out) -> [] 
7*it(13)+1*it([14])+0
  Such that:it([14]) =< V+1
aux(1) =< V
it(13) =< aux(1)

#### Cost of chains of activate(V,Out):
* Chain [14]: 1
  with precondition: [V=Out,V>=0] 

* Chain [multiple([13,15,16],[[14]])]: 7*it(13)+1*it([14])+0
  Such that:it([14]) =< V+1
aux(1) =< V
it(13) =< aux(1)

  with precondition: [V>=1,Out>=V] 


#### Cost of chains of if(V,V1,V2,Out):
* Chain [20]: 2
  with precondition: [V=0,V2=Out,V1>=0,V2>=0] 

* Chain [19]: 1*s(1)+7*s(3)+1
  Such that:s(2) =< V2
s(1) =< V2+1
s(3) =< s(2)

  with precondition: [V=0,V1>=0,V2>=1,Out>=V2] 

* Chain [18]: 2
  with precondition: [V=1,V1=Out,V1>=0,V2>=0] 

* Chain [17]: 1*s(4)+7*s(6)+1
  Such that:s(5) =< V1
s(4) =< V1+1
s(6) =< s(5)

  with precondition: [V=1,V1>=1,V2>=0,Out>=V1] 


#### Cost of chains of primes(Out):
* Chain [22]: 5
  with precondition: [Out=4] 

* Chain [21]: 6
  with precondition: [Out=8] 


#### Cost of chains of start(V,V1,V2):
* Chain [23]: 1*s(7)+7*s(9)+1*s(11)+7*s(12)+1*s(14)+7*s(15)+6
  Such that:s(8) =< V
s(7) =< V+1
s(13) =< V1
s(14) =< V1+1
s(10) =< V2
s(11) =< V2+1
s(9) =< s(8)
s(15) =< s(13)
s(12) =< s(10)

  with precondition: [] 


Closed-form bounds of start(V,V1,V2): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: nat(V)*7+6+nat(V1)*7+nat(V2)*7+nat(V+1)+nat(V1+1)+nat(V2+1) 
    - Complexity: n 

### Maximum cost of start(V,V1,V2): nat(V)*7+6+nat(V1)*7+nat(V2)*7+nat(V+1)+nat(V1+1)+nat(V2+1) 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 54 ms.
* Invariants computed in 43 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 128 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 102 ms.
   - Equation cost structures 44 ms.
   - Phase cost structures 54 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 403 ms.

