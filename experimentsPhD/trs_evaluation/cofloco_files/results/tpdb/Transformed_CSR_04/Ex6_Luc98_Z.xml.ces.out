
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [from/2]
1. recursive  : [activate/2,first/3]
2. non_recursive  : [start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into from/2
1. SCC is partially evaluated into activate/2
2. SCC is partially evaluated into start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations from/2 
* CE 11 is refined into CE [13] 
* CE 12 is refined into CE [14] 


#### Refined cost equations from/2 
* CE 13: from(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 14: from(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of from/2 
* CEs [13] --> Loop 7 
* CEs [14] --> Loop 8 

#### Loops of from/2 
* Loop 7: from(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 8: from(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR from(V1,Out) 

#### Partial ranking functions of CR from(V1,Out) 


### Resulting Chains:from(V1,Out) 
* [8]
* [7]


### Merging Chains  from/2 into  External patterns of execution 
* [[8]] --> 1 
* [[7]] --> 2 


### Specialization of cost equations activate/2 
* CE 6 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 9 is refined into CE [18,19] 
* CE 7 is refined into CE [20] 


#### Refined cost equations activate/2 
* CE 15: activate(A,A) = 2
     [A>=1] 
* CE 16: activate(A,A) = 1
     [A>=0] 
* CE 17: activate(V1,Out) = 2
     [V1>=1,Out=0] 
* CE 18: activate(A,A) = 1+ from(B,A):1
     [A>=1,A=B+1] 
* CE 19: activate(V1,Out) = 1+ from(W1,Out):2
     [Out>=3,Out=2*W1+3,Out=2*V1+1] 
* CE 20: activate(V1,Out) = 2+ activate(W1,X1)
     [V1>=W1+3,W1>=0,V1+X1=Out+W1+1] 

### Cost equations --> "Loop" of activate/2 
* CEs [20] --> Loop 9 
* CEs [19] --> Loop 10 
* CEs [15,16,18] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of activate/2 
* Loop 9: activate(V1,Out)->  activate(V1',Out')
                  [V1>=V1'+3,V1'>=0,V1+Out'=Out+V1'+1] 
* Loop 10: activate(V1,Out) [V1>=1,2*V1+1=Out] 
* Loop 11: activate(A,A) [A>=0] 
* Loop 12: activate(V1,Out) [V1>=1,Out=0] 

### Ranking functions of CR activate(V1,Out) 
* RF of phase [9]: [V1-2]

#### Partial ranking functions of CR activate(V1,Out) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V1-2


### Resulting Chains:activate(V1,Out) 
* [[9],12]
* [[9],11]
* [[9],10]
* [12]
* [11]
* [10]


### Merging Chains  activate/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 
* [[12,[9]]] --> 4 
* [[11,[9]]] --> 5 
* [[10,[9]]] --> 6 


### Specialization of cost equations start/2 
* CE 2 is refined into CE [21] 
* CE 3 is refined into CE [22,23,24,25,26,27] 
* CE 4 is refined into CE [28,29] 
* CE 5 is refined into CE [30,31,32,33,34,35] 


#### Refined cost equations start/2 
* CE 21: start(V1,V) = 1
     [V>=0,V1>=0] 
* CE 22: start(V1,V) = 1+ activate(W1,X1):1
     [V>=W1+1,W1>=1,V1>=1,X1=0] 
* CE 23: start(V1,V) = 1+ activate(W1,W1):2
     [V>=W1+1,W1>=0,V1>=1] 
* CE 24: start(V1,V) = 1+ activate(W1,X1):3
     [2*V>=X1+1,X1>=3,V1>=1,X1=2*W1+1] 
* CE 25: start(V1,V) = 1+ activate(W1,X1):4
     [W1>=X1+2,V>=W1+1,X1>=2,V1>=1] 
* CE 26: start(V1,V) = 1+ activate(W1,X1):5
     [W1>=X1+1,V>=W1+1,3*X1>=2*W1,V1>=1] 
* CE 27: start(V1,V) = 1+ activate(W1,X1):6
     [2*W1>=X1+3,V>=W1+1,3*X1>=2*W1+7,V1>=1] 
* CE 28: start(V1,V) = 0+ from(W1,X1):1
     [X1>=1,X1=W1+1,X1=V1+1] 
* CE 29: start(V1,V) = 0+ from(W1,X1):2
     [X1>=3,X1=2*W1+3,X1=2*V1+3] 
* CE 30: start(V1,V) = 0+ activate(V1,W1):1
     [V1>=1,W1=0] 
* CE 31: start(V1,V) = 0+ activate(V1,V1):2
     [V1>=0] 
* CE 32: start(V1,V) = 0+ activate(W1,X1):3
     [X1>=3,X1=2*W1+1,X1=2*V1+1] 
* CE 33: start(V1,V) = 0+ activate(V1,W1):4
     [V1>=W1+2,W1>=2] 
* CE 34: start(V1,V) = 0+ activate(V1,W1):5
     [V1>=W1+1,3*W1>=2*V1] 
* CE 35: start(V1,V) = 0+ activate(V1,W1):6
     [2*V1>=W1+3,3*W1>=2*V1+7] 

### Cost equations --> "Loop" of start/2 
* CEs [21,22,23,24,25,26,27,28,29,30,31,32,33,34,35] --> Loop 13 

#### Loops of start/2 
* Loop 13: start(V1,V) [V1>=0] 

### Ranking functions of CR start(V1,V) 

#### Partial ranking functions of CR start(V1,V) 


### Resulting Chains:start(V1,V) 
* [13]


### Merging Chains  start/2 into  External patterns of execution 
* [[13]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of from(V1,Out):
* Chain [8]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [7]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of loops [9] 

 * loop 9:activate(V1,Out) -> [activate(V1',Out')] 
2
#### Cost of phase [9]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of phase [9]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of phase [9]:activate(V1,Out) -> [activate(V1',Out')] 
2*it(9)+0
  Such that:it(9) =< V1
it(9) =< V1-V1'

#### Cost of chains of activate(V1,Out):
* Chain [[9],12]: 2*it(9)+2
  Such that:it(9) =< V1

  with precondition: [Out>=2,V1>=Out+2] 

* Chain [[9],11]: 2*it(9)+2
  Such that:it(9) =< V1

  with precondition: [3*Out>=2*V1,V1>=Out+1] 

* Chain [[9],10]: 2*it(9)+2
  Such that:it(9) =< V1

  with precondition: [3*Out>=2*V1+7,2*V1>=Out+3] 

* Chain [12]: 2
  with precondition: [Out=0,V1>=1] 

* Chain [11]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [10]: 2
  with precondition: [2*V1+1=Out,V1>=1] 


#### Cost of chains of start(V1,V):
* Chain [13]: 6*s(1)+6*s(4)+3
  Such that:aux(1) =< V1
aux(2) =< V
s(4) =< aux(1)
s(1) =< aux(2)

  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V): 
-------------------------------------
* Chain [13] with precondition: [V1>=0] 
    - Upper bound: 6*V1+3+nat(V)*6 
    - Complexity: n 

### Maximum cost of start(V1,V): 6*V1+3+nat(V)*6 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 30 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 79 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 243 ms.

