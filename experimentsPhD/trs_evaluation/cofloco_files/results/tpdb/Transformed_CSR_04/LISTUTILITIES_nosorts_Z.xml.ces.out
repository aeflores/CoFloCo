
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [natsFrom/2]
1. non_recursive  : [activate/2]
2. non_recursive  : [snd/2]
3. non_recursive  : [fun1/3]
4. recursive [non_tail] : [fun/5,splitAt/3]
5. non_recursive  : [afterNth/3]
6. non_recursive  : [and/3]
7. non_recursive  : [fst/2]
8. non_recursive  : [head/2]
9. non_recursive  : [sel/3]
10. non_recursive  : [tail/2]
11. non_recursive  : [take/3]
12. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into natsFrom/2
1. SCC is partially evaluated into activate/2
2. SCC is partially evaluated into snd/2
3. SCC is partially evaluated into fun1/3
4. SCC is partially evaluated into splitAt/3
5. SCC is partially evaluated into afterNth/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into fst/2
8. SCC is partially evaluated into head/2
9. SCC is partially evaluated into sel/3
10. SCC is partially evaluated into tail/2
11. SCC is partially evaluated into take/3
12. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations natsFrom/2 
* CE 27 is refined into CE [35] 
* CE 28 is refined into CE [36] 


#### Refined cost equations natsFrom/2 
* CE 35: natsFrom(V1,Out) = 1
     [V1>=0,2*V1+3=Out] 
* CE 36: natsFrom(V1,Out) = 1
     [V1>=0,V1+1=Out] 

### Cost equations --> "Loop" of natsFrom/2 
* CEs [35] --> Loop 22 
* CEs [36] --> Loop 23 

#### Loops of natsFrom/2 
* Loop 22: natsFrom(V1,Out) [V1>=0,2*V1+3=Out] 
* Loop 23: natsFrom(V1,Out) [V1>=0,V1+1=Out] 

### Ranking functions of CR natsFrom(V1,Out) 

#### Partial ranking functions of CR natsFrom(V1,Out) 


### Resulting Chains:natsFrom(V1,Out) 
* [23]
* [22]


### Merging Chains  natsFrom/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations activate/2 
* CE 15 is refined into CE [37,38] 
* CE 16 is refined into CE [39] 


#### Refined cost equations activate/2 
* CE 37: activate(A,A) = 1+ natsFrom(B,A):1
     [A>=1,A=B+1] 
* CE 38: activate(V1,Out) = 1+ natsFrom(W1,Out):2
     [Out>=3,Out=2*W1+3,Out=2*V1+1] 
* CE 39: activate(A,A) = 1
     [A>=0] 

### Cost equations --> "Loop" of activate/2 
* CEs [38] --> Loop 24 
* CEs [37,39] --> Loop 25 

#### Loops of activate/2 
* Loop 24: activate(V1,Out) [V1>=1,2*V1+1=Out] 
* Loop 25: activate(A,A) [A>=0] 

### Ranking functions of CR activate(V1,Out) 

#### Partial ranking functions of CR activate(V1,Out) 


### Resulting Chains:activate(V1,Out) 
* [25]
* [24]


### Merging Chains  activate/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations snd/2 
* CE 30 is refined into CE [40] 
* CE 31 is refined into CE [41] 


#### Refined cost equations snd/2 
* CE 40: snd(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 41: snd(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of snd/2 
* CEs [40] --> Loop 26 
* CEs [41] --> Loop 27 

#### Loops of snd/2 
* Loop 26: snd(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 27: snd(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR snd(V1,Out) 

#### Partial ranking functions of CR snd(V1,Out) 


### Resulting Chains:snd(V1,Out) 
* [27]
* [26]


### Merging Chains  snd/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations fun1/3 
* CE 20 is refined into CE [42,43] 
* CE 21 is refined into CE [44] 


#### Refined cost equations fun1/3 
* CE 42: fun1(V1,V,Out) = 1+ activate(V,V):1
     [V>=0,V1>=1,V1+V+1=Out] 
* CE 43: fun1(V1,V,Out) = 1+ activate(W1,X1):2
     [X1>=3,V1>=1,V1+X1+1=Out,X1=2*W1+1,X1=2*V+1] 
* CE 44: fun1(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 

### Cost equations --> "Loop" of fun1/3 
* CEs [43] --> Loop 28 
* CEs [42] --> Loop 29 
* CEs [44] --> Loop 30 

#### Loops of fun1/3 
* Loop 28: fun1(V1,V,Out) [V>=1,V1>=1,V1+2*V+2=Out] 
* Loop 29: fun1(V1,V,Out) [V>=0,V1>=1,V1+V+1=Out] 
* Loop 30: fun1(V1,V,Out) [V>=0,V1>=0,Out=0] 

### Ranking functions of CR fun1(V1,V,Out) 

#### Partial ranking functions of CR fun1(V1,V,Out) 


### Resulting Chains:fun1(V1,V,Out) 
* [30]
* [29]
* [28]


### Merging Chains  fun1/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 


### Specialization of cost equations splitAt/3 
* CE 19 is refined into CE [45] 
* CE 18 is refined into CE [46] 
* CE 17 is refined into CE [47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94] 


#### Refined cost equations splitAt/3 
* CE 45: splitAt(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 46: splitAt(V1,V,Out) = 1
     [V>=0,V+2=Out,V1=0] 
* CE 47: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,Z1):1+ fun1(Y1,Z1,A2):1
     [Z1>=0,Y1>=0,W1>=0,X1>=0,W1+Z1+1=V,X1+1=V1,A2=0,Out=0] 
* CE 48: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,A2):1+ fun1(Y1,B2,Out):2
     [Out>=Y1+1,Y1>=1,W1>=0,X1>=0,Out+W1=V+Y1,Out=Y1+B2+1,Out=A2+Y1+1,Out=Z1+Y1+1,X1+1=V1] 
* CE 49: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,A2):1+ fun1(Y1,B2,Out):3
     [Out>=Y1+4,Y1>=1,W1>=0,X1>=0,Out+2*W1=2*V+Y1,Out=2*B2+Y1+2,Out=2*A2+Y1+2,Out=2*Z1+Y1+2,X1+1=V1] 
* CE 50: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,A2):2+ fun1(Y1,A2,B2):1
     [A2>=3,Y1>=0,W1>=0,X1>=0,A2+2*W1+1=2*V,X1+1=V1,A2=2*Z1+1,B2=0,Out=0] 
* CE 51: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,A2):2+ fun1(Y1,B2,Out):2
     [Out>=Y1+4,Y1>=1,W1>=0,X1>=0,Out+2*W1=2*V+Y1,Out=Y1+B2+1,Out=A2+Y1+1,Out=2*Z1+Y1+2,X1+1=V1] 
* CE 52: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,X1):1+ activate(W1,W1):1+ splitAt(X1,W1,Y1)+ activate(Z1,A2):2+ fun1(Y1,B2,Out):3
     [Out>=Y1+8,Y1>=1,W1>=0,X1>=0,Out+4*W1=4*V+Y1,Out=2*B2+Y1+2,Out=2*A2+Y1+2,Out=4*Z1+Y1+4,X1+1=V1] 
* CE 53: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,C2):1+ fun1(B2,C2,D2):1
     [C2>=0,B2>=0,A2>=3,Y1>=0,A2+2*C2+1=2*V,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1,D2=0,Out=0] 
* CE 54: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):1+ fun1(B2,E2,Out):2
     [Out>=B2+1,B2>=1,A2>=3,Y1>=0,A2+2*Out=2*V+2*B2+1,Out=B2+E2+1,Out=D2+B2+1,Out=C2+B2+1,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1] 
* CE 55: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):1+ fun1(B2,E2,Out):3
     [Out>=B2+4,B2>=1,A2>=3,Y1>=0,Out+A2=2*V+B2+1,Out=2*E2+B2+2,Out=2*D2+B2+2,Out=2*C2+B2+2,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1] 
* CE 56: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,D2,E2):1
     [D2>=3,B2>=0,A2>=3,Y1>=0,A2+D2=2*V,Y1+1=V1,D2=2*C2+1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1,E2=0,Out=0] 
* CE 57: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,E2,Out):2
     [Out>=B2+4,B2>=1,A2>=3,Y1>=0,Out+A2=2*V+B2+1,Out=B2+E2+1,Out=D2+B2+1,Out=2*C2+B2+2,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1] 
* CE 58: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,E2,Out):3
     [Out>=B2+8,B2>=1,A2>=3,Y1>=0,Out+2*A2=4*V+B2+2,Out=2*E2+B2+2,Out=2*D2+B2+2,Out=4*C2+B2+4,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=2*W1+1] 
* CE 59: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,A2):1+ fun1(Z1,A2,B2):1
     [A2>=0,Z1>=0,W1>=0,Y1>=3,W1+A2+1=V,Y1=2*X1+1,Y1+1=2*V1,B2=0,Out=0] 
* CE 60: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,B2):1+ fun1(Z1,C2,Out):2
     [Out>=Z1+1,Z1>=1,W1>=0,Y1>=3,Out+W1=V+Z1,Out=Z1+C2+1,Out=B2+Z1+1,Out=A2+Z1+1,Y1=2*X1+1,Y1+1=2*V1] 
* CE 61: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,B2):1+ fun1(Z1,C2,Out):3
     [Out>=Z1+4,Z1>=1,W1>=0,Y1>=3,Out+2*W1=2*V+Z1,Out=2*C2+Z1+2,Out=2*B2+Z1+2,Out=2*A2+Z1+2,Y1=2*X1+1,Y1+1=2*V1] 
* CE 62: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,B2):2+ fun1(Z1,B2,C2):1
     [B2>=3,Z1>=0,W1>=0,Y1>=3,B2+2*W1+1=2*V,B2=2*A2+1,Y1=2*X1+1,Y1+1=2*V1,C2=0,Out=0] 
* CE 63: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,B2):2+ fun1(Z1,C2,Out):2
     [Out>=Z1+4,Z1>=1,W1>=0,Y1>=3,Out+2*W1=2*V+Z1,Out=Z1+C2+1,Out=B2+Z1+1,Out=2*A2+Z1+2,Y1=2*X1+1,Y1+1=2*V1] 
* CE 64: splitAt(V1,V,Out) = 2+ activate(W1,W1):1+ activate(X1,Y1):2+ activate(W1,W1):1+ splitAt(Y1,W1,Z1)+ activate(A2,B2):2+ fun1(Z1,C2,Out):3
     [Out>=Z1+8,Z1>=1,W1>=0,Y1>=3,Out+4*W1=4*V+Z1,Out=2*C2+Z1+2,Out=2*B2+Z1+2,Out=4*A2+Z1+4,Y1=2*X1+1,Y1+1=2*V1] 
* CE 65: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,D2):1+ fun1(C2,D2,E2):1
     [D2>=0,C2>=0,B2>=3,Z1>=3,B2+2*D2+1=2*V,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1,E2=0,Out=0] 
* CE 66: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):1+ fun1(C2,F2,Out):2
     [Out>=C2+1,C2>=1,B2>=3,Z1>=3,B2+2*Out=2*V+2*C2+1,Out=C2+F2+1,Out=E2+C2+1,Out=D2+C2+1,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1] 
* CE 67: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):1+ fun1(C2,F2,Out):3
     [Out>=C2+4,C2>=1,B2>=3,Z1>=3,Out+B2=2*V+C2+1,Out=2*F2+C2+2,Out=2*E2+C2+2,Out=2*D2+C2+2,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1] 
* CE 68: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,E2,F2):1
     [E2>=3,C2>=0,B2>=3,Z1>=3,B2+E2=2*V,E2=2*D2+1,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1,F2=0,Out=0] 
* CE 69: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,F2,Out):2
     [Out>=C2+4,C2>=1,B2>=3,Z1>=3,Out+B2=2*V+C2+1,Out=C2+F2+1,Out=E2+C2+1,Out=2*D2+C2+2,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1] 
* CE 70: splitAt(V1,V,Out) = 2+ activate(W1,X1):1+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,F2,Out):3
     [Out>=C2+8,C2>=1,B2>=3,Z1>=3,Out+2*B2=4*V+C2+2,Out=2*F2+C2+2,Out=2*E2+C2+2,Out=4*D2+C2+4,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,B2=2*W1+1,Z1+1=2*V1] 
* CE 71: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,A2):1+ fun1(Z1,A2,B2):1
     [A2>=0,Z1>=0,X1>=3,Y1>=0,X1+2*A2+1=2*V,Y1+1=V1,X1=2*W1+1,B2=0,Out=0] 
* CE 72: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,B2):1+ fun1(Z1,C2,Out):2
     [Out>=Z1+1,Z1>=1,X1>=3,Y1>=0,X1+2*Out=2*V+2*Z1+1,Out=Z1+C2+1,Out=B2+Z1+1,Out=A2+Z1+1,Y1+1=V1,X1=2*W1+1] 
* CE 73: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,B2):1+ fun1(Z1,C2,Out):3
     [Out>=Z1+4,Z1>=1,X1>=3,Y1>=0,Out+X1=2*V+Z1+1,Out=2*C2+Z1+2,Out=2*B2+Z1+2,Out=2*A2+Z1+2,Y1+1=V1,X1=2*W1+1] 
* CE 74: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,B2):2+ fun1(Z1,B2,C2):1
     [B2>=3,Z1>=0,X1>=3,Y1>=0,X1+B2=2*V,Y1+1=V1,B2=2*A2+1,X1=2*W1+1,C2=0,Out=0] 
* CE 75: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,B2):2+ fun1(Z1,C2,Out):2
     [Out>=Z1+4,Z1>=1,X1>=3,Y1>=0,Out+X1=2*V+Z1+1,Out=Z1+C2+1,Out=B2+Z1+1,Out=2*A2+Z1+2,Y1+1=V1,X1=2*W1+1] 
* CE 76: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(X1,X1):1+ splitAt(Y1,X1,Z1)+ activate(A2,B2):2+ fun1(Z1,C2,Out):3
     [Out>=Z1+8,Z1>=1,X1>=3,Y1>=0,Out+2*X1=4*V+Z1+2,Out=2*C2+Z1+2,Out=2*B2+Z1+2,Out=4*A2+Z1+4,Y1+1=V1,X1=2*W1+1] 
* CE 77: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,C2):1+ fun1(B2,C2,D2):1
     [C2>=0,B2>=0,A2>=7,Y1>=0,A2+4*C2+1=4*V,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3,D2=0,Out=0] 
* CE 78: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):1+ fun1(B2,E2,Out):2
     [Out>=B2+1,B2>=1,A2>=7,Y1>=0,A2+4*Out=4*V+4*B2+3,Out=B2+E2+1,Out=D2+B2+1,Out=C2+B2+1,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3] 
* CE 79: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):1+ fun1(B2,E2,Out):3
     [Out>=B2+4,B2>=1,A2>=7,Y1>=0,A2+2*Out=4*V+2*B2+3,Out=2*E2+B2+2,Out=2*D2+B2+2,Out=2*C2+B2+2,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3] 
* CE 80: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,D2,E2):1
     [D2>=3,B2>=0,A2>=7,Y1>=0,A2+2*D2=4*V+1,Y1+1=V1,D2=2*C2+1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3,E2=0,Out=0] 
* CE 81: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,E2,Out):2
     [Out>=B2+4,B2>=1,A2>=7,Y1>=0,A2+2*Out=4*V+2*B2+3,Out=B2+E2+1,Out=D2+B2+1,Out=2*C2+B2+2,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3] 
* CE 82: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Y1):1+ activate(Z1,A2):2+ splitAt(Y1,A2,B2)+ activate(C2,D2):2+ fun1(B2,E2,Out):3
     [Out>=B2+8,B2>=1,A2>=7,Y1>=0,Out+A2=4*V+B2+3,Out=2*E2+B2+2,Out=2*D2+B2+2,Out=4*C2+B2+4,Y1+1=V1,A2=2*Z1+1,A2=2*X1+1,A2=4*W1+3] 
* CE 83: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,B2):1+ fun1(A2,B2,C2):1
     [B2>=0,A2>=0,X1>=3,Z1>=3,X1+2*B2+1=2*V,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1,C2=0,Out=0] 
* CE 84: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,C2):1+ fun1(A2,D2,Out):2
     [Out>=A2+1,A2>=1,X1>=3,Z1>=3,X1+2*Out=2*V+2*A2+1,Out=A2+D2+1,Out=C2+A2+1,Out=B2+A2+1,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1] 
* CE 85: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,C2):1+ fun1(A2,D2,Out):3
     [Out>=A2+4,A2>=1,X1>=3,Z1>=3,Out+X1=2*V+A2+1,Out=2*D2+A2+2,Out=2*C2+A2+2,Out=2*B2+A2+2,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1] 
* CE 86: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,C2):2+ fun1(A2,C2,D2):1
     [C2>=3,A2>=0,X1>=3,Z1>=3,X1+C2=2*V,C2=2*B2+1,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1,D2=0,Out=0] 
* CE 87: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,C2):2+ fun1(A2,D2,Out):2
     [Out>=A2+4,A2>=1,X1>=3,Z1>=3,Out+X1=2*V+A2+1,Out=A2+D2+1,Out=C2+A2+1,Out=2*B2+A2+2,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1] 
* CE 88: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(X1,X1):1+ splitAt(Z1,X1,A2)+ activate(B2,C2):2+ fun1(A2,D2,Out):3
     [Out>=A2+8,A2>=1,X1>=3,Z1>=3,Out+2*X1=4*V+A2+2,Out=2*D2+A2+2,Out=2*C2+A2+2,Out=4*B2+A2+4,Z1=2*Y1+1,X1=2*W1+1,Z1+1=2*V1] 
* CE 89: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,D2):1+ fun1(C2,D2,E2):1
     [D2>=0,C2>=0,B2>=7,Z1>=3,B2+4*D2+1=4*V,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3,E2=0,Out=0] 
* CE 90: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):1+ fun1(C2,F2,Out):2
     [Out>=C2+1,C2>=1,B2>=7,Z1>=3,B2+4*Out=4*V+4*C2+3,Out=C2+F2+1,Out=E2+C2+1,Out=D2+C2+1,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3] 
* CE 91: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):1+ fun1(C2,F2,Out):3
     [Out>=C2+4,C2>=1,B2>=7,Z1>=3,B2+2*Out=4*V+2*C2+3,Out=2*F2+C2+2,Out=2*E2+C2+2,Out=2*D2+C2+2,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3] 
* CE 92: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,E2,F2):1
     [E2>=3,C2>=0,B2>=7,Z1>=3,B2+2*E2=4*V+1,E2=2*D2+1,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3,F2=0,Out=0] 
* CE 93: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,F2,Out):2
     [Out>=C2+4,C2>=1,B2>=7,Z1>=3,B2+2*Out=4*V+2*C2+3,Out=C2+F2+1,Out=E2+C2+1,Out=2*D2+C2+2,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3] 
* CE 94: splitAt(V1,V,Out) = 2+ activate(W1,X1):2+ activate(Y1,Z1):2+ activate(A2,B2):2+ splitAt(Z1,B2,C2)+ activate(D2,E2):2+ fun1(C2,F2,Out):3
     [Out>=C2+8,C2>=1,B2>=7,Z1>=3,Out+B2=4*V+C2+3,Out=2*F2+C2+2,Out=2*E2+C2+2,Out=4*D2+C2+4,B2=2*A2+1,Z1=2*Y1+1,B2=2*X1+1,Z1+1=2*V1,B2=4*W1+3] 

### Cost equations --> "Loop" of splitAt/3 
* CEs [94] --> Loop 31 
* CEs [67,69,85,87] --> Loop 32 
* CEs [60] --> Loop 33 
* CEs [70,88] --> Loop 34 
* CEs [61,63] --> Loop 35 
* CEs [91,93] --> Loop 36 
* CEs [66,84] --> Loop 37 
* CEs [64] --> Loop 38 
* CEs [90] --> Loop 39 
* CEs [82] --> Loop 40 
* CEs [55,57,73,75] --> Loop 41 
* CEs [48] --> Loop 42 
* CEs [58,76] --> Loop 43 
* CEs [49,51] --> Loop 44 
* CEs [79,81] --> Loop 45 
* CEs [54,72] --> Loop 46 
* CEs [52] --> Loop 47 
* CEs [78] --> Loop 48 
* CEs [89,92] --> Loop 49 
* CEs [65,68,83,86] --> Loop 50 
* CEs [59,62] --> Loop 51 
* CEs [77,80] --> Loop 52 
* CEs [53,56,71,74] --> Loop 53 
* CEs [47,50] --> Loop 54 
* CEs [45] --> Loop 55 
* CEs [46] --> Loop 56 

#### Loops of splitAt/3 
* Loop 31: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=4*V+4,4*V>=V'+5,V'>=7,V1>=2,Out'+4*V+3=Out+V',2*V1=V1'+1] 
* Loop 32: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=2*V+2,2*V>=V'+3,V'>=3,V1>=2,Out'+2*V+1=Out+V',2*V1=V1'+1] 
* Loop 33: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=V+1,V>=V'+1,V'>=0,V1>=2,V+Out'=Out+V',2*V1=V1'+1] 
* Loop 34: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+2*V'>=4*V+3,2*V>=V'+3,V'>=3,V1>=2,Out'+4*V+2=2*V'+Out,2*V1=V1'+1] 
* Loop 35: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+2*V'>=2*V+1,V>=V'+2,V'>=0,V1>=2,Out'+2*V=2*V'+Out,2*V1=V1'+1] 
* Loop 36: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+2*Out>=4*V+5,4*V>=V'+5,V'>=7,V1>=2,2*Out'+4*V+3=2*Out+V',2*V1=V1'+1] 
* Loop 37: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+2*Out>=2*V+3,2*V>=V'+1,V'>=3,V1>=2,2*V+2*Out'+1=2*Out+V',2*V1=V1'+1] 
* Loop 38: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+4*V'>=4*V+1,V>=V'+2,V'>=0,V1>=2,Out'+4*V=4*V'+Out,2*V1=V1'+1] 
* Loop 39: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+4*Out>=4*V+7,4*V>=V'+1,V'>=7,V1>=2,4*V+4*Out'+3=4*Out+V',2*V1=V1'+1] 
* Loop 40: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=4*V+4,4*V>=V'+5,V'>=7,V1>=1,Out'+4*V+3=Out+V',V1=V1'+1] 
* Loop 41: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=2*V+2,2*V>=V'+3,V'>=3,V1>=1,Out'+2*V+1=Out+V',V1=V1'+1] 
* Loop 42: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+V'>=V+1,V>=V'+1,V'>=0,V1>=1,V+Out'=Out+V',V1=V1'+1] 
* Loop 43: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+2*V'>=4*V+3,2*V>=V'+3,V'>=3,V1>=1,Out'+4*V+2=2*V'+Out,V1=V1'+1] 
* Loop 44: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+2*V'>=2*V+1,V>=V'+2,V'>=0,V1>=1,Out'+2*V=2*V'+Out,V1=V1'+1] 
* Loop 45: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+2*Out>=4*V+5,4*V>=V'+5,V'>=7,V1>=1,2*Out'+4*V+3=2*Out+V',V1=V1'+1] 
* Loop 46: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+2*Out>=2*V+3,2*V>=V'+1,V'>=3,V1>=1,2*V+2*Out'+1=2*Out+V',V1=V1'+1] 
* Loop 47: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [Out+4*V'>=4*V+1,V>=V'+2,V'>=0,V1>=1,Out'+4*V=4*V'+Out,V1=V1'+1] 
* Loop 48: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V'+4*Out>=4*V+7,4*V>=V'+1,V'>=7,V1>=1,4*V+4*Out'+3=4*Out+V',V1=V1'+1] 
* Loop 49: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [4*V>=V'+1,Out'>=0,V'>=7,V1>=2,2*V1=V1'+1,Out=0] 
* Loop 50: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [2*V>=V'+1,Out'>=0,V'>=3,V1>=2,2*V1=V1'+1,Out=0] 
* Loop 51: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=2,2*V1=V1'+1,Out=0] 
* Loop 52: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [4*V>=V'+1,Out'>=0,V'>=7,V1>=1,V1=V1'+1,Out=0] 
* Loop 53: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [2*V>=V'+1,Out'>=0,V'>=3,V1>=1,V1=V1'+1,Out=0] 
* Loop 54: splitAt(V1,V,Out)->  splitAt(V1',V',Out')
                  [V>=V'+1,Out'>=0,V'>=0,V1>=1,V1=V1'+1,Out=0] 
* Loop 55: splitAt(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 56: splitAt(V1,V,Out) [V>=0,V+2=Out,V1=0] 

### Ranking functions of CR splitAt(V1,V,Out) 

#### Partial ranking functions of CR splitAt(V1,V,Out) 
* Partial RF of phase [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]:
  - RF of loop [33:1,42:1]:
    V depends on loops [31:1,32:1,34:1,36:1,37:1,39:1,40:1,41:1,43:1,45:1,46:1,48:1] 
  - RF of loop [35:1,38:1,44:1,47:1]:
    V/2-1/2 depends on loops [31:1,32:1,34:1,36:1,37:1,39:1,40:1,41:1,43:1,45:1,46:1,48:1] 
  - RF of loop [40:1,41:1,42:1,43:1,44:1,45:1,46:1,47:1,48:1]:
    V1 depends on loops [31:1,32:1,33:1,34:1,35:1,36:1,37:1,38:1,39:1] 
* Partial RF of phase [49,50,51,52,53,54]:
  - RF of loop [51:1,54:1]:
    V depends on loops [49:1,50:1,52:1,53:1] 
  - RF of loop [52:1,53:1,54:1]:
    V1 depends on loops [49:1,50:1,51:1] 


### Resulting Chains:splitAt(V1,V,Out) 
* [[49,50,51,52,53,54]]...
* [[49,50,51,52,53,54],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]...
* [[49,50,51,52,53,54],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],56]
* [[49,50,51,52,53,54],56]
* [[49,50,51,52,53,54],55]
* [[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]...
* [[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],56]
* [56]
* [55]


### Merging Chains  splitAt/3 into  External patterns of execution 
* [[56]] --> 1 
* [[55],[55,[49,50,51,52,53,54]],[56,[49,50,51,52,53,54]],[56,[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],[49,50,51,52,53,54]]] --> 2 
* [[56,[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]] --> 3 
* [[[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],[49,50,51,52,53,54]]] --> 4 
* [[[49,50,51,52,53,54]]] --> 5 
* [[[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]] --> 6 


### Specialization of cost equations afterNth/3 
* CE 22 is refined into CE [95,96,97,98,99,100,101,102] 


#### Refined cost equations afterNth/3 
* CE 95: afterNth(V1,V,Out) = 1+ splitAt(W1,X1,Y1):1+ snd(Y1,Z1):1
     [Y1>=2,Y1=X1+2,Y1=V+2,Z1=0,W1=0,Out=0,V1=0] 
* CE 96: afterNth(V1,V,Out) = 1+ splitAt(W1,X1,Y1):1+ snd(Y1,Out):2
     [Y1>=Out+1,Out>=0,Y1>=2,Y1=X1+2,Y1=V+2,W1=0,V1=0] 
* CE 97: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):2+ snd(X1,Y1):1
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 98: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):3+ snd(W1,X1):1
     [W1>=V+2,V>=1,V1>=1,X1=0,Out=0] 
* CE 99: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):3+ snd(W1,Out):2
     [W1>=Out+1,W1>=V+2,Out>=0,V>=1,V1>=1] 
* CE 100: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):4
     [V>=2,V1>=2,X1=0,W1=0] 
* CE 101: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):5
     [V>=1,V1>=1,X1=0,W1=0] 
* CE 102: afterNth(V1,V,Out) = 1+ splitAt(V1,V,W1):6
     [W1>=2,V>=1,V1>=1] 

### Cost equations --> "Loop" of afterNth/3 
* CEs [100,101,102] --> Loop 57 
* CEs [99] --> Loop 58 
* CEs [97,98] --> Loop 59 
* CEs [95,96] --> Loop 60 

#### Loops of afterNth/3 
* Loop 57: afterNth(V1,V,Out) [V>=1,V1>=1] 
* Loop 58: afterNth(V1,V,Out) [Out>=0,V>=1,V1>=1] 
* Loop 59: afterNth(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 60: afterNth(V1,V,Out) [V+1>=Out,Out>=0,V>=0,V1=0] 

### Ranking functions of CR afterNth(V1,V,Out) 

#### Partial ranking functions of CR afterNth(V1,V,Out) 


### Resulting Chains:afterNth(V1,V,Out) 
* [60]
* [59]
* [58]
* [57]...


### Merging Chains  afterNth/3 into  External patterns of execution 
* [[60]] --> 1 
* [[59]] --> 2 
* [[58]] --> 3 
* [[57]] --> 4 


### Specialization of cost equations fst/2 
* CE 23 is refined into CE [103] 
* CE 24 is refined into CE [104] 


#### Refined cost equations fst/2 
* CE 103: fst(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 104: fst(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of fst/2 
* CEs [103] --> Loop 61 
* CEs [104] --> Loop 62 

#### Loops of fst/2 
* Loop 61: fst(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 62: fst(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR fst(V1,Out) 

#### Partial ranking functions of CR fst(V1,Out) 


### Resulting Chains:fst(V1,Out) 
* [62]
* [61]


### Merging Chains  fst/2 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 


### Specialization of cost equations head/2 
* CE 25 is refined into CE [105] 
* CE 26 is refined into CE [106] 


#### Refined cost equations head/2 
* CE 105: head(V1,Out) = 1
     [V1>=Out+1,Out>=0] 
* CE 106: head(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of head/2 
* CEs [105] --> Loop 63 
* CEs [106] --> Loop 64 

#### Loops of head/2 
* Loop 63: head(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 64: head(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR head(V1,Out) 

#### Partial ranking functions of CR head(V1,Out) 


### Resulting Chains:head(V1,Out) 
* [64]
* [63]


### Merging Chains  head/2 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations sel/3 
* CE 29 is refined into CE [107,108,109,110,111,112] 


#### Refined cost equations sel/3 
* CE 107: sel(V1,V,Out) = 1+ afterNth(W1,V,X1):1+ head(X1,Y1):1
     [V+1>=X1,X1>=0,V>=0,Y1=0,W1=0,Out=0,V1=0] 
* CE 108: sel(V1,V,Out) = 1+ afterNth(W1,V,X1):1+ head(X1,Out):2
     [X1>=Out+1,V+1>=X1,Out>=0,W1=0,V1=0] 
* CE 109: sel(V1,V,Out) = 1+ afterNth(V1,V,W1):2+ head(X1,Y1):1
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 110: sel(V1,V,Out) = 1+ afterNth(V1,V,W1):3+ head(W1,X1):1
     [W1>=0,V>=1,V1>=1,X1=0,Out=0] 
* CE 111: sel(V1,V,Out) = 1+ afterNth(V1,V,W1):3+ head(W1,Out):2
     [W1>=Out+1,Out>=0,V>=1,V1>=1] 
* CE 112: sel(V1,V,Out) = 1+ afterNth(V1,V,W1):4
     [V>=1,V1>=1] 

### Cost equations --> "Loop" of sel/3 
* CEs [112] --> Loop 65 
* CEs [111] --> Loop 66 
* CEs [109,110] --> Loop 67 
* CEs [107,108] --> Loop 68 

#### Loops of sel/3 
* Loop 65: sel(V1,V,Out) [V>=1,V1>=1] 
* Loop 66: sel(V1,V,Out) [Out>=0,V>=1,V1>=1] 
* Loop 67: sel(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 68: sel(V1,V,Out) [V>=Out,Out>=0,V1=0] 

### Ranking functions of CR sel(V1,V,Out) 

#### Partial ranking functions of CR sel(V1,V,Out) 


### Resulting Chains:sel(V1,V,Out) 
* [68]
* [67]
* [66]
* [65]...


### Merging Chains  sel/3 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 
* [[66]] --> 3 
* [[65]] --> 4 


### Specialization of cost equations tail/2 
* CE 32 is refined into CE [113,114] 
* CE 33 is refined into CE [115] 


#### Refined cost equations tail/2 
* CE 113: tail(V1,Out) = 1+ activate(Out,Out):1
     [V1>=Out+1,Out>=0] 
* CE 114: tail(V1,Out) = 1+ activate(W1,Out):2
     [2*V1>=Out+1,Out>=3,Out=2*W1+1] 
* CE 115: tail(V1,Out) = 0
     [V1>=0,Out=0] 

### Cost equations --> "Loop" of tail/2 
* CEs [114] --> Loop 69 
* CEs [113] --> Loop 70 
* CEs [115] --> Loop 71 

#### Loops of tail/2 
* Loop 69: tail(V1,Out) [2*V1>=Out+1,Out>=3] 
* Loop 70: tail(V1,Out) [V1>=Out+1,Out>=0] 
* Loop 71: tail(V1,Out) [V1>=0,Out=0] 

### Ranking functions of CR tail(V1,Out) 

#### Partial ranking functions of CR tail(V1,Out) 


### Resulting Chains:tail(V1,Out) 
* [71]
* [70]
* [69]


### Merging Chains  tail/2 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 
* [[69]] --> 3 


### Specialization of cost equations take/3 
* CE 34 is refined into CE [116,117,118,119,120,121,122,123] 


#### Refined cost equations take/3 
* CE 116: take(V1,V,Out) = 1+ splitAt(W1,X1,Y1):1+ fst(Y1,Z1):1
     [Y1>=2,Y1=X1+2,Y1=V+2,Z1=0,W1=0,Out=0,V1=0] 
* CE 117: take(V1,V,Out) = 1+ splitAt(W1,X1,Y1):1+ fst(Y1,Out):2
     [Y1>=Out+1,Out>=0,Y1>=2,Y1=X1+2,Y1=V+2,W1=0,V1=0] 
* CE 118: take(V1,V,Out) = 1+ splitAt(V1,V,W1):2+ fst(X1,Y1):1
     [V>=0,V1>=0,Y1=0,X1=0,W1=0,Out=0] 
* CE 119: take(V1,V,Out) = 1+ splitAt(V1,V,W1):3+ fst(W1,X1):1
     [W1>=V+2,V>=1,V1>=1,X1=0,Out=0] 
* CE 120: take(V1,V,Out) = 1+ splitAt(V1,V,W1):3+ fst(W1,Out):2
     [W1>=Out+1,W1>=V+2,Out>=0,V>=1,V1>=1] 
* CE 121: take(V1,V,Out) = 1+ splitAt(V1,V,W1):4
     [V>=2,V1>=2,X1=0,W1=0] 
* CE 122: take(V1,V,Out) = 1+ splitAt(V1,V,W1):5
     [V>=1,V1>=1,X1=0,W1=0] 
* CE 123: take(V1,V,Out) = 1+ splitAt(V1,V,W1):6
     [W1>=2,V>=1,V1>=1] 

### Cost equations --> "Loop" of take/3 
* CEs [121,122,123] --> Loop 72 
* CEs [120] --> Loop 73 
* CEs [118,119] --> Loop 74 
* CEs [116,117] --> Loop 75 

#### Loops of take/3 
* Loop 72: take(V1,V,Out) [V>=1,V1>=1] 
* Loop 73: take(V1,V,Out) [Out>=0,V>=1,V1>=1] 
* Loop 74: take(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 75: take(V1,V,Out) [V+1>=Out,Out>=0,V>=0,V1=0] 

### Ranking functions of CR take(V1,V,Out) 

#### Partial ranking functions of CR take(V1,V,Out) 


### Resulting Chains:take(V1,V,Out) 
* [75]
* [74]
* [73]
* [72]...


### Merging Chains  take/3 into  External patterns of execution 
* [[75]] --> 1 
* [[74]] --> 2 
* [[73]] --> 3 
* [[72]] --> 4 


### Specialization of cost equations start/4 
* CE 2 is refined into CE [124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179] 
* CE 3 is refined into CE [180,181,182] 
* CE 4 is refined into CE [183,184,185,186] 
* CE 5 is refined into CE [187,188] 
* CE 6 is refined into CE [189,190] 
* CE 7 is refined into CE [191,192] 
* CE 8 is refined into CE [193,194] 
* CE 9 is refined into CE [195,196,197,198] 
* CE 10 is refined into CE [199,200] 
* CE 11 is refined into CE [201,202,203,204,205,206] 
* CE 12 is refined into CE [207,208,209] 
* CE 13 is refined into CE [210,211,212,213] 
* CE 14 is refined into CE [214,215] 


#### Refined cost equations start/4 
* CE 124: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(V2,V2):1+ fun1(C4,V2,D4):1
     [V2>=0,C4>=2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,D4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 125: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):1+ fun1(C4,F4,G4):2
     [G4>=C4+1,C4>=2,G4=C4+F4+1,G4=C4+E4+1,G4=C4+D4+1,G4=V2+C4+1,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 126: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):1+ fun1(C4,F4,G4):3
     [G4>=C4+4,C4>=2,G4=2*F4+C4+2,G4=2*E4+C4+2,G4=2*D4+C4+2,G4=2*V2+C4+2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 127: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,E4,F4):1
     [E4>=3,C4>=2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,E4=2*D4+1,E4=2*V2+1,F4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 128: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,F4,G4):2
     [G4>=C4+4,C4>=2,G4=C4+F4+1,G4=C4+E4+1,G4=2*D4+C4+2,G4=2*V2+C4+2,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 129: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):1+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,F4,G4):3
     [G4>=C4+8,C4>=2,G4=2*F4+C4+2,G4=2*E4+C4+2,G4=4*D4+C4+4,G4=4*V2+C4+4,C4=B4+2,C4=Z3+2,C4=Y3+2,C4=V3+2,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 130: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):2+ activate(V2,V2):1+ fun1(X3,V2,Y3):1
     [V2>=0,V3>=0,V>=0,Y3=0,X3=0,W3=0,V1=0] 
* CE 131: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):2+ activate(X3,Y3):2+ fun1(Z3,Y3,A4):1
     [Y3>=3,V3>=0,V>=0,Y3=2*X3+1,Y3=2*V2+1,A4=0,Z3=0,W3=0,V1=0] 
* CE 132: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(V2,V2):1+ fun1(W3,V2,X3):1
     [W3>=V3+2,V2>=0,V3>=1,V>=1,X3=0,V1=0] 
* CE 133: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(X3,Y3):1+ fun1(W3,Z3,A4):2
     [A4>=W3+1,W3>=V3+2,V3>=1,V>=1,A4=W3+Z3+1,A4=W3+Y3+1,A4=W3+X3+1,A4=V2+W3+1,V1=0] 
* CE 134: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(X3,Y3):1+ fun1(W3,Z3,A4):3
     [A4>=W3+4,W3>=V3+2,V3>=1,V>=1,A4=2*Z3+W3+2,A4=2*Y3+W3+2,A4=2*X3+W3+2,A4=2*V2+W3+2,V1=0] 
* CE 135: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(X3,Y3):2+ fun1(W3,Y3,Z3):1
     [W3>=V3+2,Y3>=3,V3>=1,V>=1,Y3=2*X3+1,Y3=2*V2+1,Z3=0,V1=0] 
* CE 136: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(X3,Y3):2+ fun1(W3,Z3,A4):2
     [A4>=W3+4,W3>=V3+2,V3>=1,V>=1,A4=W3+Z3+1,A4=W3+Y3+1,A4=2*X3+W3+2,A4=2*V2+W3+2,V1=0] 
* CE 137: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):3+ activate(X3,Y3):2+ fun1(W3,Z3,A4):3
     [A4>=W3+8,W3>=V3+2,V3>=1,V>=1,A4=2*Z3+W3+2,A4=2*Y3+W3+2,A4=4*X3+W3+4,A4=4*V2+W3+4,V1=0] 
* CE 138: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):4
     [V3>=2,V>=2,V2>=0,X3=0,W3=0,V1=0] 
* CE 139: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):5
     [V3>=1,V>=1,V2>=0,X3=0,W3=0,V1=0] 
* CE 140: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(V3,V3):1+ splitAt(V,V3,W3):6
     [W3>=2,V3>=1,V>=1,V2>=0,V1=0] 
* CE 141: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(V2,V2):1+ fun1(C4,V2,D4):1
     [V2>=0,C4>=5,C4=B4+2,C4=Z3+2,C4=2*Y3+3,C4=2*V3+3,D4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 142: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(D4,E4):1+ fun1(C4,F4,G4):2
     [G4>=C4+1,C4>=5,G4=C4+F4+1,G4=C4+E4+1,G4=C4+D4+1,G4=V2+C4+1,C4=B4+2,C4=Z3+2,C4=2*Y3+3,C4=2*V3+3,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 143: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(D4,E4):1+ fun1(C4,F4,G4):3
     [G4>=C4+4,C4>=5,G4=2*F4+C4+2,G4=2*E4+C4+2,G4=2*D4+C4+2,G4=2*V2+C4+2,C4=B4+2,C4=Z3+2,C4=2*Y3+3,C4=2*V3+3,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 144: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,E4,F4):1
     [E4>=3,C4>=5,C4=B4+2,C4=Z3+2,E4=2*D4+1,C4=2*Y3+3,C4=2*V3+3,E4=2*V2+1,F4=0,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 145: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,F4,G4):2
     [G4>=C4+4,C4>=5,G4=C4+F4+1,G4=C4+E4+1,G4=2*D4+C4+2,G4=2*V2+C4+2,C4=B4+2,C4=Z3+2,C4=2*Y3+3,C4=2*V3+3,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 146: start(V1,V,V2,V3) = 1+ activate(W3,X3):1+ activate(Y3,Z3):2+ splitAt(A4,B4,C4):1+ activate(D4,E4):2+ fun1(C4,F4,G4):3
     [G4>=C4+8,C4>=5,G4=2*F4+C4+2,G4=2*E4+C4+2,G4=4*D4+C4+4,G4=4*V2+C4+4,C4=B4+2,C4=Z3+2,C4=2*Y3+3,C4=2*V3+3,A4=0,X3=0,W3=0,V=0,V1=0] 
* CE 147: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):2+ activate(V2,V2):1+ fun1(Z3,V2,A4):1
     [V2>=0,X3>=3,V>=0,X3=2*W3+1,X3=2*V3+1,A4=0,Z3=0,Y3=0,V1=0] 
* CE 148: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):2+ activate(Z3,A4):2+ fun1(B4,A4,C4):1
     [A4>=3,X3>=3,V>=0,A4=2*Z3+1,X3=2*W3+1,X3=2*V3+1,A4=2*V2+1,C4=0,B4=0,Y3=0,V1=0] 
* CE 149: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(V2,V2):1+ fun1(Y3,V2,Z3):1
     [Y3>=X3+2,V2>=0,X3>=3,V>=1,X3=2*W3+1,X3=2*V3+1,Z3=0,V1=0] 
* CE 150: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(Z3,A4):1+ fun1(Y3,B4,C4):2
     [C4>=Y3+1,Y3>=X3+2,X3>=3,V>=1,C4=Y3+B4+1,C4=Y3+A4+1,C4=Y3+Z3+1,C4=V2+Y3+1,X3=2*W3+1,X3=2*V3+1,V1=0] 
* CE 151: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(Z3,A4):1+ fun1(Y3,B4,C4):3
     [C4>=Y3+4,Y3>=X3+2,X3>=3,V>=1,C4=2*B4+Y3+2,C4=2*A4+Y3+2,C4=2*Z3+Y3+2,C4=2*V2+Y3+2,X3=2*W3+1,X3=2*V3+1,V1=0] 
* CE 152: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,A4,B4):1
     [Y3>=X3+2,A4>=3,X3>=3,V>=1,A4=2*Z3+1,X3=2*W3+1,X3=2*V3+1,A4=2*V2+1,B4=0,V1=0] 
* CE 153: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,B4,C4):2
     [C4>=Y3+4,Y3>=X3+2,X3>=3,V>=1,C4=Y3+B4+1,C4=Y3+A4+1,C4=2*Z3+Y3+2,C4=2*V2+Y3+2,X3=2*W3+1,X3=2*V3+1,V1=0] 
* CE 154: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,B4,C4):3
     [C4>=Y3+8,Y3>=X3+2,X3>=3,V>=1,C4=2*B4+Y3+2,C4=2*A4+Y3+2,C4=4*Z3+Y3+4,C4=4*V2+Y3+4,X3=2*W3+1,X3=2*V3+1,V1=0] 
* CE 155: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):4
     [X3>=3,V>=2,V2>=0,X3=2*W3+1,X3=2*V3+1,Z3=0,Y3=0,V1=0] 
* CE 156: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):5
     [X3>=3,V>=1,V2>=0,X3=2*W3+1,X3=2*V3+1,Z3=0,Y3=0,V1=0] 
* CE 157: start(V1,V,V2,V3) = 1+ activate(V,V):1+ activate(W3,X3):2+ splitAt(V,X3,Y3):6
     [Y3>=2,X3>=3,V>=1,V2>=0,X3=2*W3+1,X3=2*V3+1,V1=0] 
* CE 158: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):2+ activate(V2,V2):1+ fun1(Z3,V2,A4):1
     [V2>=0,V3>=0,X3>=3,X3=2*W3+1,X3=2*V+1,A4=0,Z3=0,Y3=0,V1=0] 
* CE 159: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):2+ activate(Z3,A4):2+ fun1(B4,A4,C4):1
     [A4>=3,V3>=0,X3>=3,A4=2*Z3+1,X3=2*W3+1,A4=2*V2+1,X3=2*V+1,C4=0,B4=0,Y3=0,V1=0] 
* CE 160: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(V2,V2):1+ fun1(Y3,V2,Z3):1
     [Y3>=V3+2,V2>=0,V3>=1,X3>=3,X3=2*W3+1,X3=2*V+1,Z3=0,V1=0] 
* CE 161: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(Z3,A4):1+ fun1(Y3,B4,C4):2
     [C4>=Y3+1,Y3>=V3+2,V3>=1,X3>=3,C4=Y3+B4+1,C4=Y3+A4+1,C4=Y3+Z3+1,C4=V2+Y3+1,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 162: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(Z3,A4):1+ fun1(Y3,B4,C4):3
     [C4>=Y3+4,Y3>=V3+2,V3>=1,X3>=3,C4=2*B4+Y3+2,C4=2*A4+Y3+2,C4=2*Z3+Y3+2,C4=2*V2+Y3+2,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 163: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,A4,B4):1
     [Y3>=V3+2,A4>=3,V3>=1,X3>=3,A4=2*Z3+1,X3=2*W3+1,A4=2*V2+1,X3=2*V+1,B4=0,V1=0] 
* CE 164: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,B4,C4):2
     [C4>=Y3+4,Y3>=V3+2,V3>=1,X3>=3,C4=Y3+B4+1,C4=Y3+A4+1,C4=2*Z3+Y3+2,C4=2*V2+Y3+2,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 165: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):3+ activate(Z3,A4):2+ fun1(Y3,B4,C4):3
     [C4>=Y3+8,Y3>=V3+2,V3>=1,X3>=3,C4=2*B4+Y3+2,C4=2*A4+Y3+2,C4=4*Z3+Y3+4,C4=4*V2+Y3+4,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 166: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):4
     [V3>=2,X3>=3,V2>=0,X3=2*W3+1,X3=2*V+1,Z3=0,Y3=0,V1=0] 
* CE 167: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):5
     [V3>=1,X3>=3,V2>=0,X3=2*W3+1,X3=2*V+1,Z3=0,Y3=0,V1=0] 
* CE 168: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(V3,V3):1+ splitAt(X3,V3,Y3):6
     [Y3>=2,V3>=1,X3>=3,V2>=0,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 169: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):2+ activate(V2,V2):1+ fun1(B4,V2,C4):1
     [V2>=0,Z3>=3,X3>=3,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,C4=0,B4=0,A4=0,V1=0] 
* CE 170: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):2+ activate(B4,C4):2+ fun1(D4,C4,E4):1
     [C4>=3,Z3>=3,X3>=3,C4=2*B4+1,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,C4=2*V2+1,X3=2*V+1,E4=0,D4=0,A4=0,V1=0] 
* CE 171: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(V2,V2):1+ fun1(A4,V2,B4):1
     [A4>=Z3+2,V2>=0,Z3>=3,X3>=3,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,B4=0,V1=0] 
* CE 172: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(B4,C4):1+ fun1(A4,D4,E4):2
     [E4>=A4+1,A4>=Z3+2,Z3>=3,X3>=3,E4=A4+D4+1,E4=A4+C4+1,E4=A4+B4+1,E4=V2+A4+1,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,V1=0] 
* CE 173: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(B4,C4):1+ fun1(A4,D4,E4):3
     [E4>=A4+4,A4>=Z3+2,Z3>=3,X3>=3,E4=2*D4+A4+2,E4=2*C4+A4+2,E4=2*B4+A4+2,E4=2*V2+A4+2,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,V1=0] 
* CE 174: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(B4,C4):2+ fun1(A4,C4,D4):1
     [A4>=Z3+2,C4>=3,Z3>=3,X3>=3,C4=2*B4+1,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,C4=2*V2+1,X3=2*V+1,D4=0,V1=0] 
* CE 175: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(B4,C4):2+ fun1(A4,D4,E4):2
     [E4>=A4+4,A4>=Z3+2,Z3>=3,X3>=3,E4=A4+D4+1,E4=A4+C4+1,E4=2*B4+A4+2,E4=2*V2+A4+2,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,V1=0] 
* CE 176: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):3+ activate(B4,C4):2+ fun1(A4,D4,E4):3
     [E4>=A4+8,A4>=Z3+2,Z3>=3,X3>=3,E4=2*D4+A4+2,E4=2*C4+A4+2,E4=4*B4+A4+4,E4=4*V2+A4+4,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,V1=0] 
* CE 177: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):4
     [Z3>=3,X3>=3,V2>=0,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,B4=0,A4=0,V1=0] 
* CE 178: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):5
     [Z3>=3,X3>=3,V2>=0,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,B4=0,A4=0,V1=0] 
* CE 179: start(V1,V,V2,V3) = 1+ activate(W3,X3):2+ activate(Y3,Z3):2+ splitAt(X3,Z3,A4):6
     [A4>=2,Z3>=3,X3>=3,V2>=0,Z3=2*Y3+1,X3=2*W3+1,Z3=2*V3+1,X3=2*V+1,V1=0] 
* CE 180: start(V1,V,V2,V3) = 0+ fun1(V1,V,W3):1
     [V>=0,V1>=0,W3=0] 
* CE 181: start(V1,V,V2,V3) = 0+ fun1(V1,W3,X3):2
     [X3>=V1+1,V1>=1,X3=V1+W3+1,X3=V1+V+1] 
* CE 182: start(V1,V,V2,V3) = 0+ fun1(V1,W3,X3):3
     [X3>=V1+4,V1>=1,X3=2*W3+V1+2,X3=2*V+V1+2] 
* CE 183: start(V1,V,V2,V3) = 0+ afterNth(W3,V,X3):1
     [V+1>=X3,X3>=0,V>=0,W3=0,V1=0] 
* CE 184: start(V1,V,V2,V3) = 0+ afterNth(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 185: start(V1,V,V2,V3) = 0+ afterNth(V1,V,W3):3
     [W3>=0,V>=1,V1>=1] 
* CE 186: start(V1,V,V2,V3) = 0+ afterNth(V1,V,W3):4
     [V>=1,V1>=1] 
* CE 187: start(V1,V,V2,V3) = 1+ activate(V,V):1
     [V>=0,V1=0] 
* CE 188: start(V1,V,V2,V3) = 1+ activate(W3,X3):2
     [X3>=3,X3=2*W3+1,X3=2*V+1,V1=0] 
* CE 189: start(V1,V,V2,V3) = 0+ fst(V1,W3):1
     [V1>=0,W3=0] 
* CE 190: start(V1,V,V2,V3) = 0+ fst(V1,W3):2
     [V1>=W3+1,W3>=0] 
* CE 191: start(V1,V,V2,V3) = 0+ head(V1,W3):1
     [V1>=0,W3=0] 
* CE 192: start(V1,V,V2,V3) = 0+ head(V1,W3):2
     [V1>=W3+1,W3>=0] 
* CE 193: start(V1,V,V2,V3) = 0+ natsFrom(W3,X3):1
     [X3>=1,X3=W3+1,X3=V1+1] 
* CE 194: start(V1,V,V2,V3) = 0+ natsFrom(W3,X3):2
     [X3>=3,X3=2*W3+3,X3=2*V1+3] 
* CE 195: start(V1,V,V2,V3) = 0+ sel(W3,V,X3):1
     [V>=X3,X3>=0,W3=0,V1=0] 
* CE 196: start(V1,V,V2,V3) = 0+ sel(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 197: start(V1,V,V2,V3) = 0+ sel(V1,V,W3):3
     [W3>=0,V>=1,V1>=1] 
* CE 198: start(V1,V,V2,V3) = 0+ sel(V1,V,W3):4
     [V>=1,V1>=1] 
* CE 199: start(V1,V,V2,V3) = 0+ snd(V1,W3):1
     [V1>=0,W3=0] 
* CE 200: start(V1,V,V2,V3) = 0+ snd(V1,W3):2
     [V1>=W3+1,W3>=0] 
* CE 201: start(V1,V,V2,V3) = 0+ splitAt(W3,X3,Y3):1
     [Y3>=2,Y3=X3+2,Y3=V+2,W3=0,V1=0] 
* CE 202: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 203: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):3
     [W3>=V+2,V>=1,V1>=1] 
* CE 204: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):4
     [V>=2,V1>=2,W3=0] 
* CE 205: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):5
     [V>=1,V1>=1,W3=0] 
* CE 206: start(V1,V,V2,V3) = 0+ splitAt(V1,V,W3):6
     [W3>=2,V>=1,V1>=1] 
* CE 207: start(V1,V,V2,V3) = 0+ tail(V1,W3):1
     [V1>=0,W3=0] 
* CE 208: start(V1,V,V2,V3) = 0+ tail(V1,W3):2
     [V1>=W3+1,W3>=0] 
* CE 209: start(V1,V,V2,V3) = 0+ tail(V1,W3):3
     [2*V1>=W3+1,W3>=3] 
* CE 210: start(V1,V,V2,V3) = 0+ take(W3,V,X3):1
     [V+1>=X3,X3>=0,V>=0,W3=0,V1=0] 
* CE 211: start(V1,V,V2,V3) = 0+ take(V1,V,W3):2
     [V>=0,V1>=0,W3=0] 
* CE 212: start(V1,V,V2,V3) = 0+ take(V1,V,W3):3
     [W3>=0,V>=1,V1>=1] 
* CE 213: start(V1,V,V2,V3) = 0+ take(V1,V,W3):4
     [V>=1,V1>=1] 
* CE 214: start(V1,V,V2,V3) = 0+ activate(V1,V1):1
     [V1>=0] 
* CE 215: start(V1,V,V2,V3) = 0+ activate(W3,X3):2
     [X3>=3,X3=2*W3+1,X3=2*V1+1] 

### Cost equations --> "Loop" of start/4 
* CEs [124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,160,161,162,163,164,165,169,170,171,172,173,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,207,208,209,210,211,212,214,215] --> Loop 76 
* CEs [186,198,204,205,206,213] --> Loop 77 
* CEs [138,139,140,155,156,157,166,167,168,177,178,179] --> Loop 78 

#### Loops of start/4 
* Loop 76: start(V1,V,V2,V3) [V1>=0] 
* Loop 77: start(V1,V,V2,V3) [V>=1,V1>=1] 
* Loop 78: start(V1,V,V2,V3) [V3>=1,V2>=0,V>=1,V1=0] 

### Ranking functions of CR start(V1,V,V2,V3) 

#### Partial ranking functions of CR start(V1,V,V2,V3) 


### Resulting Chains:start(V1,V,V2,V3) 
* [78]...
* [77]...
* [76]


### Merging Chains  start/4 into  External patterns of execution 
* [[76]] --> 1 
* [[78]] --> 2 
* [[77]] --> 3 


Computing Bounds
=====================================

#### Cost of chains of natsFrom(V1,Out):
* Chain [23]: 1
  with precondition: [V1+1=Out,V1>=0] 

* Chain [22]: 1
  with precondition: [2*V1+3=Out,V1>=0] 


#### Cost of chains of activate(V1,Out):
* Chain [25]: 2
  with precondition: [V1=Out,V1>=0] 

* Chain [24]: 2
  with precondition: [2*V1+1=Out,V1>=1] 


#### Cost of chains of snd(V1,Out):
* Chain [27]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [26]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of fun1(V1,V,Out):
* Chain [30]: 0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [29]: 3
  with precondition: [V+V1+1=Out,V1>=1,V>=0] 

* Chain [28]: 3
  with precondition: [V1+2*V+2=Out,V1>=1,V>=1] 


#### Cost of loops [49,50,51,52,53,54] 

 * loop 49:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
 * loop 50:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
 * loop 51:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
 * loop 52:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
 * loop 53:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
 * loop 54:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
10
#### Cost of phase [49,50,51,52,53,54]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
60*it(49)+0
#### Cost of loops [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48] 

 * loop 31:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 32:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 33:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 34:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 35:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 36:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 37:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 38:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 39:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 40:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 41:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 42:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 43:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 44:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 45:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 46:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 47:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
 * loop 48:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
13
#### Cost of phase [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
234*it(31)+0
#### Cost of phase [49,50,51,52,53,54]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
60*it(49)+0
#### Cost of phase [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
234*it(31)+0
#### Cost of phase [49,50,51,52,53,54]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
60*it(49)+0
#### Cost of phase [49,50,51,52,53,54]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
60*it(49)+0
#### Cost of phase [49,50,51,52,53,54]:splitAt(V1,V,Out) -> [splitAt(V1',V',Out')] 
60*it(49)+0
#### Cost of chains of splitAt(V1,V,Out):
* Chain [[49,50,51,52,53,54]]...: 60*it(49)+0
  with precondition: [V1>=1,V>=1,Out=0] 

* Chain [[49,50,51,52,53,54],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]...: 294*it(31)+0
  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[49,50,51,52,53,54],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],56]: 294*it(31)+1
  with precondition: [Out=0,V1>=2,V>=2] 

* Chain [[49,50,51,52,53,54],56]: 60*it(49)+1
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[49,50,51,52,53,54],55]: 60*it(49)+0
  with precondition: [Out=0,V1>=1,V>=1] 

* Chain [[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]...: 234*it(31)+0
  with precondition: [V1>=1,V>=1,Out>=2] 

* Chain [[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],56]: 234*it(31)+1
  with precondition: [V1>=1,V>=1,Out>=V+2] 

* Chain [56]: 1
  with precondition: [V1=0,V+2=Out,V>=0] 

* Chain [55]: 0
  with precondition: [Out=0,V1>=0,V>=0] 


#### Cost of chains of afterNth(V1,V,Out):
* Chain [60]: 3
  with precondition: [V1=0,V>=0,Out>=0,V+1>=Out] 

* Chain [59]: 1*aux(122)+0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [58]: 234*s(6)+3
  with precondition: [V1>=1,V>=1,Out>=0] 

* Chain [57]...: 1*aux(123)+0
  with precondition: [V1>=1,V>=1] 


#### Cost of chains of fst(V1,Out):
* Chain [62]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [61]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of head(V1,Out):
* Chain [64]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [63]: 1
  with precondition: [Out>=0,V1>=Out+1] 


#### Cost of chains of sel(V1,V,Out):
* Chain [68]: 5
  with precondition: [V1=0,Out>=0,V>=Out] 

* Chain [67]: 1*aux(124)+0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [66]: 234*s(12)+5
  with precondition: [V1>=1,V>=1,Out>=0] 

* Chain [65]...: 1*s(13)+1
  with precondition: [V1>=1,V>=1] 


#### Cost of chains of tail(V1,Out):
* Chain [71]: 0
  with precondition: [Out=0,V1>=0] 

* Chain [70]: 3
  with precondition: [Out>=0,V1>=Out+1] 

* Chain [69]: 3
  with precondition: [Out>=3,2*V1>=Out+1] 


#### Cost of chains of take(V1,V,Out):
* Chain [75]: 3
  with precondition: [V1=0,V>=0,Out>=0,V+1>=Out] 

* Chain [74]: 1*aux(125)+0
  with precondition: [Out=0,V1>=0,V>=0] 

* Chain [73]: 234*s(16)+3
  with precondition: [V1>=1,V>=1,Out>=0] 

* Chain [72]...: 1*aux(126)+0
  with precondition: [V1>=1,V>=1] 


#### Cost of chains of start(V1,V,V2,V3):
* Chain [78]...: 1*aux(127)+0
  with precondition: [V1=0,V>=1,V2>=0,V3>=1] 

* Chain [77]...: 1*aux(128)+0
  with precondition: [V1>=1,V>=1] 

* Chain [76]: 1*aux(129)+0
  with precondition: [V1>=0] 


Closed-form bounds of start(V1,V,V2,V3): 
-------------------------------------
* Chain [78]... with precondition: [V1=0,V>=1,V2>=0,V3>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [77]... with precondition: [V1>=1,V>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [76] with precondition: [V1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(V1,V,V2,V3): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 69 ms.
* Invariants computed in 827 ms.
   - Backward Invariants 132 ms.
   - Transitive Invariants 527 ms.
* Refinement performed in 2270 ms.
* Termination proved in 98 ms.
* Upper bounds computed in 1721 ms.
   - Equation cost structures 582 ms.
   - Phase cost structures 1311 ms.
   - Chain cost structures 50 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 5099 ms.

