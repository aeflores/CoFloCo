This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1+2*nat(A)+nat(A)*nat(B),1+nat(A),2+nat(A),6+nat(B+1)+c(failed(schemes_failed,[scc=4,cr=if2/2])),6+nat(B+1),2+2*nat(B)+nat(B)*nat(C)+c(failed(schemes_failed,[scc=4,cr=if2/2])),c(failed(schemes_failed,[scc=4,cr=if2/2])),1+c(failed(schemes_failed,[scc=4,cr=if2/2])),5+nat(A)+c(failed(schemes_failed,[scc=4,cr=if2/2])),5+nat(A),7+c(failed(schemes_failed,[scc=4,cr=if2/2]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([1+2*nat(A)+nat(A)*nat(B),1+nat(A),2+nat(A),6+nat(B+1)+c(failed(schemes_failed,[scc=4,cr=if2/2])),6+nat(B+1),2+2*nat(B)+nat(B)*nat(C)+c(failed(schemes_failed,[scc=4,cr=if2/2])),c(failed(schemes_failed,[scc=4,cr=if2/2])),1+c(failed(schemes_failed,[scc=4,cr=if2/2])),5+nat(A)+c(failed(schemes_failed,[scc=4,cr=if2/2])),5+nat(A),7+c(failed(schemes_failed,[scc=4,cr=if2/2]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS table

  * Non Asymptotic Upper Bound: 7+c(failed(schemes_failed,[scc=4,cr=if2/2])) 

  * LOOPS table -> table

  * Ranking function: N/A

  * Invariants table -> table

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS if2(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=if2/2])) 

  * LOOPS if2(C,D) -> if2(E,F)
     - [F>=1,E>=0,C=E,D+1=F]
     - [D>=1,E>=1,C+1=E,E=F]

  * Ranking function: c(failed(no_rf,[scc=4,cr=if2/2]))

  * Invariants if2(A,B) -> if2(C,D)

     entry  : [A>=0,B>=0]
     non-rec: [A=C,B=D,A>=0,B>=0]
     rec    : [A>=0,A+D>=C,B>=0,C>=A,D>=1]
     inv    : [A+D>=C,B>=0,C>=A,A>=0]

CRS le(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A) 

  * LOOPS le(C,D) -> le(E,F)
     - [D=F+1,C=E+1,D>=1,C>=1]

  * Ranking function: nat(D)

  * Invariants le(A,B) -> le(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS times(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*nat(B) 

  * LOOPS times(C,D) -> times(E,F)
     - [D>=0,E>=0,C=E+1,D=F]

  * Ranking function: nat(C)

  * Invariants times(A,B) -> times(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B=D,B>=0,C>=0,A>=C+1]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS plus(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS plus(C,D) -> plus(E,F)
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants plus(A,B) -> plus(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B=D,B>=0,C>=0,A>=C+1]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


