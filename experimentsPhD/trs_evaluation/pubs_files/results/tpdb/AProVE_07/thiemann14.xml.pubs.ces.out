This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([10+nat(B-1)+nat(C-1)+c(failed(schemes_failed,[scc=6,cr=fun1/4]))+c(failed(schemes_failed,[scc=3,cr=fun/2])),4+c(failed(schemes_failed,[scc=6,cr=fun1/4])),c(failed(schemes_failed,[scc=6,cr=fun1/4])),3+c(failed(schemes_failed,[scc=6,cr=fun1/4])),c(failed(schemes_failed,[scc=3,cr=fun/2])),2+c(failed(schemes_failed,[scc=3,cr=fun/2])),2+nat(A-1)]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([10+nat(B-1)+nat(C-1)+c(failed(schemes_failed,[scc=6,cr=fun1/4]))+c(failed(schemes_failed,[scc=3,cr=fun/2])),4+c(failed(schemes_failed,[scc=6,cr=fun1/4])),c(failed(schemes_failed,[scc=6,cr=fun1/4])),3+c(failed(schemes_failed,[scc=6,cr=fun1/4])),c(failed(schemes_failed,[scc=3,cr=fun/2])),2+c(failed(schemes_failed,[scc=3,cr=fun/2])),2+nat(A-1)]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun1(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=fun1/4])) 

  * LOOPS fun1(E,F,G,H) -> fun1(I,J,K,L)
     - [2>=J,2>=I,J>=0,I>=0,G>=0,H>=0,K=1,F=1,E=2,H=L]
     - [2>=J,2>=I,J>=0,I>=0,K>=0,H>=0,G>=0,L>=0,E=1,F=1]

  * Ranking function: c(failed(no_rf,[scc=6,cr=fun1/4]))

  * Invariants fun1(A,B,C,D) -> fun1(E,F,G,H)

     entry  : [A>=0,B>=0,C>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,A>=0,B>=0,C>=0,D>=0]
     rec    : [G>=0,F>=0,A>=1,E>=0,2>=F,2>=E,C>=0,D>=0,H>=0,2>=A,B=1]
     inv    : [E+2>=A,2*B+E>=A,A+B>=F,F>=0,2*A>=E,A+B>=E,A+F>=B,A+1>=E,E>=0,F+1>=B,B+1>=F,2*B>=F,C>=0,D>=0,H>=0,G>=0]

CRS p(A)

  * Non Asymptotic Upper Bound: 2+nat(A-1) 

  * LOOPS p(B) -> p(C)
     - [B=C+1,B>=2]

  * Ranking function: nat(B-1)

  * Invariants p(A) -> p(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=1,A>=B+1]
     inv    : [B>=0,A>=B]

CRS zero(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS zero(B) -> zero(C)

  * Ranking function: N/A

  * Invariants zero(A) -> zero(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=fun/2])) 

  * LOOPS fun(C,D) -> fun(E,F)
     - [D>=F,F>=0,2>=E,E>=0,C=1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=fun/2]))

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [A>=0,B>=0]
     non-rec: [A=C,B=D,A>=0,B>=0]
     rec    : [B>=D,D>=0,2>=C,C>=0,A=1]
     inv    : [A+1>=C,2*A>=C,C>=0,C+1>=A,D>=0,B>=D]

CRS tail(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS tail(B) -> tail(C)

  * Ranking function: N/A

  * Invariants tail(A) -> tail(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS head(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS head(B) -> head(C)

  * Ranking function: N/A

  * Invariants head(A) -> head(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS empty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS empty(B) -> empty(C)

  * Ranking function: N/A

  * Invariants empty(A) -> empty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


