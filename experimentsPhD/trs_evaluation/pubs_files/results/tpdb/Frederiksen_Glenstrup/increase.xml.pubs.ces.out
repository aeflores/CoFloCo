This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=1,cr=increase/1])),c(failed(schemes_failed,[scc=1,cr=increase/1]))]) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS start(A)

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=1,cr=increase/1])),c(failed(schemes_failed,[scc=1,cr=increase/1]))]) 

  * LOOPS start(B) -> start(C)

  * Ranking function: N/A

  * Invariants start(A) -> start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS goal(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=increase/1])) 

  * LOOPS goal(B) -> goal(C)

  * Ranking function: N/A

  * Invariants goal(A) -> goal(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS increase(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=increase/1])) 

  * LOOPS increase(B) -> increase(C)
     - [B+2=C,B>=1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=increase/1]))

  * Invariants increase(A) -> increase(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1,B>=A+2]
     inv    : [A>=0,B>=A]

CRS number42(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS number42(B) -> number42(C)

  * Ranking function: N/A

  * Invariants number42(A) -> number42(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


