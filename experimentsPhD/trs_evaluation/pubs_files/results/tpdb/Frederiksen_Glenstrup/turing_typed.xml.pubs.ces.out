This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1+nat(B-2)+c(failed(schemes_failed,[scc=2,cr=turing/4])),1+c(failed(schemes_failed,[scc=2,cr=turing/4])),1+nat(A),c(failed(schemes_failed,[scc=2,cr=turing/4]))]) 

  * LOOPS $pubs_aux_entry$(F,G,H,I,J) -> $pubs_aux_entry$(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E) -> $pubs_aux_entry$(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS start(A,B,C,D,E)

  * Non Asymptotic Upper Bound: max([1+nat(B-2)+c(failed(schemes_failed,[scc=2,cr=turing/4])),1+c(failed(schemes_failed,[scc=2,cr=turing/4])),1+nat(A),c(failed(schemes_failed,[scc=2,cr=turing/4]))]) 

  * LOOPS start(F,G,H,I,J) -> start(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants start(A,B,C,D,E) -> start(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS run(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=turing/4])) 

  * LOOPS run(C,D) -> run(E,F)

  * Ranking function: N/A

  * Invariants run(A,B) -> run(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS notEmpty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS notEmpty(B) -> notEmpty(C)

  * Ranking function: N/A

  * Invariants notEmpty(A) -> notEmpty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS instrsSecond(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS instrsSecond(B) -> instrsSecond(C)

  * Ranking function: N/A

  * Invariants instrsSecond(A) -> instrsSecond(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS instrsFirst(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS instrsFirst(B) -> instrsFirst(C)

  * Ranking function: N/A

  * Invariants instrsFirst(A) -> instrsFirst(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS instrsConstrCheck(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS instrsConstrCheck(C,D) -> instrsConstrCheck(E,F)

  * Ranking function: N/A

  * Invariants instrsConstrCheck(A,B) -> instrsConstrCheck(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS instrConstrCheck(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS instrConstrCheck(C,D) -> instrConstrCheck(E,F)

  * Ranking function: N/A

  * Invariants instrConstrCheck(A,B) -> instrConstrCheck(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS getWrite(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS getWrite(B) -> getWrite(C)

  * Ranking function: N/A

  * Invariants getWrite(A) -> getWrite(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS getGotoSecond(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS getGotoSecond(B) -> getGotoSecond(C)

  * Ranking function: N/A

  * Invariants getGotoSecond(A) -> getGotoSecond(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS getGotoFirst(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS getGotoFirst(B) -> getGotoFirst(C)

  * Ranking function: N/A

  * Invariants getGotoFirst(A) -> getGotoFirst(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS getGoto(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS getGoto(B) -> getGoto(C)

  * Ranking function: N/A

  * Invariants getGoto(A) -> getGoto(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS turing(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=turing/4])) 

  * LOOPS turing(E,F,G,H) -> turing(I,J,K,L)
     - [H>=0,G>=1,F>=0,E>=2,H=L,G=K,F=J]
     - [E>=2,E>=I+1,I>=0,G>=1,F>=0,H>=0,F=J,H=L,G=K]
     - [H>=0,G>=0,F>=0,E>=2,H=L,G=K,F=J]
     - [F+G=J+K,H=L,E=I+3,E>=3,F>=0,G>=K+1,K>=0,H>=0]
     - [E=I+3,F+1=J,K=0,G=0,H=L,E>=3,F>=0,H>=0]
     - [F+G=J+K,H=L,E=I+2,E>=2,J>=0,F>=J+1,G>=0,H>=0]
     - [E=I+2,J=0,F=0,G+1=K,H=L,E>=2,G>=0,H>=0]
     - [F=J,H=L,I>=0,E>=I+2,F>=0,I+K+1>=E,E+G>=I+K+2,H>=0]

  * Ranking function: c(failed(no_rf,[scc=2,cr=turing/4]))

  * Invariants turing(A,B,C,D) -> turing(E,F,G,H)

     entry  : [B>=0,C>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,B>=0,C>=0,D>=0]
     rec    : [F>=0,A>=2,B>=0,C>=0,D>=0,G>=0,D=H]
     inv    : [F>=0,B>=0,C>=0,D>=0,G>=0,D=H]

CRS fun1(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(C,D) -> fun1(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: N/A

  * Invariants fun1(A,B) -> fun1(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS lookup(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS lookup(C,D) -> lookup(E,F)
     - [C=E+1,C>=1,F>=0,D>=F+1]

  * Ranking function: nat(D)

  * Invariants lookup(A,B) -> lookup(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B+C>=A+D,C>=0,D>=0,A>=C+1]
     inv    : [A>=C,C>=0,D>=0,B+C>=A+D]


