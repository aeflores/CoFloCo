This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,nat(A)+nat(1*A+1)/2+3/2*nat(B+1),nat(A)+nat(A+1)]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS start(A,B)

  * Non Asymptotic Upper Bound: max([1,nat(A)+nat(1*A+1)/2+3/2*nat(B+1),nat(A)+nat(A+1)]) 

  * LOOPS start(C,D) -> start(E,F)

  * Ranking function: N/A

  * Invariants start(A,B) -> start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS second(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS second(B) -> second(C)

  * Ranking function: N/A

  * Invariants second(A) -> second(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS first(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS first(B) -> first(C)

  * Ranking function: N/A

  * Invariants first(A) -> first(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS eqZList(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(A+1)/2+3/2*nat(B+1) 

  * LOOPS eqZList(C,D) -> eqZList(E,F)
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]

  * Ranking function: nat(D)

  * Invariants eqZList(A,B) -> eqZList(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A>=C+1,B>=D+1,C>=0,D>=0]
     inv    : [B>=D,A>=C,C>=0,D>=0]

CRS and(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS and(C,D) -> and(E,F)

  * Ranking function: N/A

  * Invariants and(A,B) -> and(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS a(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(A+1) 

  * LOOPS a(C,D) -> a(E,F)
     - [D>=0,C>=E+1,E>=0,D=F]
     - [D>=0,C>=E+1,E>=0,C=F]

  * Ranking function: nat(C)

  * Invariants a(A,B) -> a(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+B>=D,B>=0,A>=C+1]
     inv    : [A+B>=D,C>=0,D>=0,A>=C,B>=0]


