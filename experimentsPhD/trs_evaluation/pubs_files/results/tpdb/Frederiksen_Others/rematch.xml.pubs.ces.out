This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3+2*nat(C)+nat(C)*nat(C-1)+nat(C),34+2*nat(A-1),34+2*nat(A-1),1+2*nat(A)+nat(A)*nat(A-1),34+2*nat(A),1011+2*nat(A)+3*nat(c(maximize_failed))+nat(B)+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed))+nat(c(maximize_failed)),2+nat(A),974+3*nat(C-1)+nat(A),2+nat(C),974+3*nat(B)+nat(A),34+2*nat(A-1),36+2*nat(B-1)+nat(B-1)*nat(B-2)+nat(B-1)+2*nat(A-1),34+2*nat(A-1),34+2*nat(A-1),33+2*nat(A),973+3*nat(A)+nat(B),1+nat(A)]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([3+2*nat(C)+nat(C)*nat(C-1)+nat(C),34+2*nat(A-1),34+2*nat(A-1),1+2*nat(A)+nat(A)*nat(A-1),34+2*nat(A),1011+2*nat(A)+3*nat(c(maximize_failed))+nat(B)+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed))+nat(c(maximize_failed)),2+nat(A),974+3*nat(C-1)+nat(A),2+nat(C),974+3*nat(B)+nat(A),34+2*nat(A-1),36+2*nat(B-1)+nat(B-1)*nat(B-2)+nat(B-1)+2*nat(A-1),34+2*nat(A-1),34+2*nat(A-1),33+2*nat(A),973+3*nat(A)+nat(B),1+nat(A)]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS stringlist(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS stringlist(B) -> stringlist(C)

  * Ranking function: N/A

  * Invariants stringlist(A) -> stringlist(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS rematch(A,B)

  * Non Asymptotic Upper Bound: 1011+2*nat(A)+3*nat(c(maximize_failed))+nat(B)+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed))+nat(c(maximize_failed)) 

  * LOOPS rematch(C,D) -> rematch(E,F)

  * Ranking function: N/A

  * Invariants rematch(A,B) -> rematch(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS parsepstar(A,B,C)

  * Non Asymptotic Upper Bound: 34+2*nat(A-1) 

  * LOOPS parsepstar(D,E,F) -> parsepstar(G,H,I)

  * Ranking function: N/A

  * Invariants parsepstar(A,B,C) -> parsepstar(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS parsepopenb(A,B,C)

  * Non Asymptotic Upper Bound: 34+2*nat(A-1) 

  * LOOPS parsepopenb(D,E,F) -> parsepopenb(G,H,I)

  * Ranking function: N/A

  * Invariants parsepopenb(A,B,C) -> parsepopenb(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS parsepcloseb(A,B,C)

  * Non Asymptotic Upper Bound: max([1,36+2*nat(B-1)+nat(B-1)*nat(B-2)+nat(B-1)+2*nat(A-1)]) 

  * LOOPS parsepcloseb(D,E,F) -> parsepcloseb(G,H,I)

  * Ranking function: N/A

  * Invariants parsepcloseb(A,B,C) -> parsepcloseb(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS parsepchar(A,B,C)

  * Non Asymptotic Upper Bound: 34+2*nat(A-1) 

  * LOOPS parsepchar(D,E,F) -> parsepchar(G,H,I)

  * Ranking function: N/A

  * Invariants parsepchar(A,B,C) -> parsepchar(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS parsepat(A)

  * Non Asymptotic Upper Bound: 34+2*nat(A) 

  * LOOPS parsepat(B) -> parsepat(C)

  * Ranking function: N/A

  * Invariants parsepat(A) -> parsepat(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS parsep(A,B,C)

  * Non Asymptotic Upper Bound: 33+2*nat(A) 

  * LOOPS parsep(D,E,F) -> parsep(G,H,I)
     - [E+24=H,F=I,F>=0,E>=1,G>=0,D>=4,D>=G+1]

  * Ranking function: nat(D-3)

  * Invariants parsep(A,B,C) -> parsep(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [C=F,24*A+B>=E+72,C>=0,B>=1,24*A+B>=24*D+E,E>=B+24,D>=0]
     inv    : [D>=0,B>=0,E>=B,24*A+B>=24*D+E,C>=0,C=F]

CRS notEmpty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS notEmpty(B) -> notEmpty(C)

  * Ranking function: N/A

  * Invariants notEmpty(A) -> notEmpty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS isSpecialChar(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isSpecialChar(C,D) -> isSpecialChar(E,F)

  * Ranking function: N/A

  * Invariants isSpecialChar(A,B) -> isSpecialChar(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun3(A,B,C)

  * Non Asymptotic Upper Bound: 3+2*nat(C)+nat(C)*nat(C-1)+nat(C) 

  * LOOPS fun3(D,E,F) -> fun3(G,H,I)

  * Ranking function: N/A

  * Invariants fun3(A,B,C) -> fun3(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS reverse(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+nat(A)*nat(A-1) 

  * LOOPS reverse(B) -> reverse(C)
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants reverse(A) -> reverse(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS liststring(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS liststring(B) -> liststring(C)

  * Ranking function: N/A

  * Invariants liststring(A) -> liststring(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS eqChar(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS eqChar(C,D) -> eqChar(E,F)

  * Ranking function: N/A

  * Invariants eqChar(A,B) -> eqChar(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS dummy(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS dummy(B) -> dummy(C)

  * Ranking function: N/A

  * Invariants dummy(A) -> dummy(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS domatchdot(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS domatchdot(B) -> domatchdot(C)

  * Ranking function: N/A

  * Invariants domatchdot(A) -> domatchdot(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS domatchchar(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS domatchchar(C,D) -> domatchchar(E,F)

  * Ranking function: N/A

  * Invariants domatchchar(A,B) -> domatchchar(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS domatch(A,B)

  * Non Asymptotic Upper Bound: 973+3*nat(A)+nat(B) 

  * LOOPS domatch(C,D) -> domatch(E,F)
     - [D>=0,C>=E+2,E>=0,D=F]
     - [D>=1,C>=1,C=E+1,D=F]

  * Ranking function: nat(C)

  * Invariants domatch(A,B) -> domatch(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [B>=0,A+B>=C+2,A>=C+1,C>=0,B=D]
     inv    : [A>=C,B>=0,B=D]

CRS fun1(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(E,F,G,H) -> fun1(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun1(A,B,C,D) -> fun1(E,F,G,H)

     entry  : [A>=0,B>=0,C>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,A>=0,B>=0,C>=0,D>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun2(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun2(E,F,G,H) -> fun2(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun2(A,B,C,D) -> fun2(E,F,G,H)

     entry  : [C>=0,A>=0,B>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,C>=0,A>=0,B>=0,D>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS fun(C,D) -> fun(E,F)
     - [D=F,E>=0,C>=E+1,D>=0]

  * Ranking function: nat(C)

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,A>=C+1,C>=0,B=D]
     inv    : [A>=C,C>=0,B>=0,B=D]


