This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E,F) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1+2*nat(A)+3*nat(A),2+2*nat(B)+3*nat(B),5+c(failed(schemes_failed,[scc=13,cr=fun14/1]))+2*nat(c(maximize_failed))+nat(c(maximize_failed))*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,c(failed(schemes_failed,[scc=13,cr=fun14/1])),1+c(failed(schemes_failed,[scc=13,cr=fun14/1])),5+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+2*nat(B)+nat(1*B)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,2+2*nat(A)+nat(1*A)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,3+2*nat(A)+nat(1*A)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,6+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+2*nat(c(maximize_failed)),c(failed(schemes_failed,[scc=10,cr=fun10/1])),1+c(failed(schemes_failed,[scc=10,cr=fun10/1])),16+3*nat(C),18+3*nat(C),19+3*nat(A-2),14+3*nat(B),15+3*nat(B),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS $pubs_aux_entry$(G,H,I,J,K,L) -> $pubs_aux_entry$(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E,F) -> $pubs_aux_entry$(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS start(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: max([1+2*nat(A)+3*nat(A),2+2*nat(B)+3*nat(B),5+c(failed(schemes_failed,[scc=13,cr=fun14/1]))+2*nat(c(maximize_failed))+nat(c(maximize_failed))*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,c(failed(schemes_failed,[scc=13,cr=fun14/1])),1+c(failed(schemes_failed,[scc=13,cr=fun14/1])),5+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+2*nat(B)+nat(1*B)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,2+2*nat(A)+nat(1*A)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,3+2*nat(A)+nat(1*A)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2,6+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+c(failed(schemes_failed,[scc=10,cr=fun10/1]))+2*nat(c(maximize_failed)),c(failed(schemes_failed,[scc=10,cr=fun10/1])),1+c(failed(schemes_failed,[scc=10,cr=fun10/1])),16+3*nat(C),18+3*nat(C),19+3*nat(A-2),14+3*nat(B),15+3*nat(B),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS start(G,H,I,J,K,L) -> start(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants start(A,B,C,D,E,F) -> start(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS splitAndSort(A)

  * Non Asymptotic Upper Bound: 5+c(failed(schemes_failed,[scc=13,cr=fun14/1]))+2*nat(c(maximize_failed))+nat(c(maximize_failed))*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2 

  * LOOPS splitAndSort(B) -> splitAndSort(C)

  * Ranking function: N/A

  * Invariants splitAndSort(A) -> splitAndSort(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun14(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=13,cr=fun14/1])) 

  * LOOPS fun14(B) -> fun14(C)
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun14(A) -> fun14(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS fun6(A,B,C)

  * Non Asymptotic Upper Bound: 14+3*nat(B) 

  * LOOPS fun6(D,E,F) -> fun6(G,H,I)
     - [F>=0,E>=H+2,H>=0,D>=1,F=I,F=G]

  * Ranking function: nat(E/2)

  * Invariants fun6(A,B,C) -> fun6(D,E,F)

     entry  : [A>=0,C>=0,B>=0]
     non-rec: [A=D,B=E,C=F,A>=0,C>=0,B>=0]
     rec    : [C>=0,B>=E+2,E>=0,A>=1,C=F,C=D]
     inv    : [B>=E,A>=0,A+C>=D,C>=0,D>=0,E>=0,C=F]

CRS fun12(A)

  * Non Asymptotic Upper Bound: 2+2*nat(A)+nat(A)*c(failed(schemes_failed,[scc=10,cr=fun10/1]))/2 

  * LOOPS fun12(B) -> fun12(C)
     - [B>=C+2,C>=0]

  * Ranking function: nat(B/2)

  * Invariants fun12(A) -> fun12(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+2,B>=0]
     inv    : [A>=B,B>=0]

CRS fun10(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=10,cr=fun10/1])) 

  * LOOPS fun10(B) -> fun10(C)
     - [C>=0,B>=1]
     - [C>=0,B>=1]

  * Ranking function: c(failed(no_rf,[scc=10,cr=fun10/1]))

  * Invariants fun10(A) -> fun10(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1,B>=0]
     inv    : [A>=0,B>=0]

CRS fun15(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(A)+3*nat(A) 

  * LOOPS fun15(C,D) -> fun15(E,F)
     - [D>=0,C>=E+1,E>=0,D=F]

  * Ranking function: nat(C)

  * Invariants fun15(A,B) -> fun15(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,A>=C+1,C>=0,B=D]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS fun16(A,B,C)

  * Non Asymptotic Upper Bound: 3 

  * LOOPS fun16(D,E,F) -> fun16(G,H,I)

  * Ranking function: N/A

  * Invariants fun16(A,B,C) -> fun16(D,E,F)

     entry  : [B>=0,C>=0]
     non-rec: [A=D,B=E,C=F,B>=0,C>=0]
     rec    : [0=1]
     inv    : [B>=0,C>=0,A=D,B=E,C=F]

CRS fun2(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun2(C,D) -> fun2(E,F)

  * Ranking function: N/A

  * Invariants fun2(A,B) -> fun2(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun4(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun4(C,D) -> fun4(E,F)
     - [C=F+1,D=E+1,C>=1,D>=1]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: N/A

  * Invariants fun4(A,B) -> fun4(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=1,A>=1,A+B>=C+D+2]
     inv    : [B>=0,A>=0,A+B>=C+D,D>=0,C>=0]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun17(A,B,C,D)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun17(E,F,G,H) -> fun17(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun17(A,B,C,D) -> fun17(E,F,G,H)

     entry  : [B>=0,C>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,B>=0,C>=0,D>=0]
     rec    : [0=1]
     inv    : [B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun(C,D) -> fun(E,F)

  * Ranking function: N/A

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun1(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(C,D) -> fun1(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]

  * Ranking function: N/A

  * Invariants fun1(A,B) -> fun1(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A>=C+1,B>=D+1,C>=0,D>=0]
     inv    : [B>=D,A>=C,C>=0,D>=0]

CRS fun18(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun18(C,D) -> fun18(E,F)

  * Ranking function: N/A

  * Invariants fun18(A,B) -> fun18(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS append(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(A) 

  * LOOPS append(C,D) -> append(E,F)
     - [D=F,E>=0,C>=E+1,D>=0]

  * Ranking function: nat(C)

  * Invariants append(A,B) -> append(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B>=0,A>=C+1,C>=0,B=D]
     inv    : [A>=C,B=D]


