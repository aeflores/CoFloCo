This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([4+2*nat(A),1+10*nat(A)+6*nat(A-1)+9*nat(A)*nat(B-1),2+10*nat(A)+6*nat(A-1)+9*nat(A)*nat(B-1),5+9*nat(D),6+9*nat(D),2+9*nat(A),3+9*nat(B),6+2*nat(B),7+2*nat(B),12+9*nat(A-1)+6*nat(D)+9*nat(A-2),13+9*nat(C-1)+6*nat(A-1)+9*nat(C-2),8+6*nat(A)+9*nat(B-1),3+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(C-1)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),8+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-2)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),1+c(failed(schemes_failed,[scc=18,cr=fun3/2])),9+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-3)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),2+c(failed(schemes_failed,[scc=18,cr=fun3/2])),8+2*nat(A-1),10+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-4)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),3+c(failed(schemes_failed,[scc=18,cr=fun3/2])),c(failed(schemes_failed,[scc=18,cr=fun3/2])),1+c(failed(schemes_failed,[scc=18,cr=fun3/2])),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([4+2*nat(A),1+10*nat(A)+6*nat(A-1)+9*nat(A)*nat(B-1),2+10*nat(A)+6*nat(A-1)+9*nat(A)*nat(B-1),5+9*nat(D),6+9*nat(D),2+9*nat(A),3+9*nat(B),6+2*nat(B),7+2*nat(B),12+9*nat(A-1)+6*nat(D)+9*nat(A-2),13+9*nat(C-1)+6*nat(A-1)+9*nat(C-2),8+6*nat(A)+9*nat(B-1),3+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(C-1)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),8+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-2)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),1+c(failed(schemes_failed,[scc=18,cr=fun3/2])),9+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-3)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),2+c(failed(schemes_failed,[scc=18,cr=fun3/2])),8+2*nat(A-1),10+10*nat(B)+6*nat(B-1)+9*nat(B)*nat(A-4)+c(failed(schemes_failed,[scc=18,cr=fun3/2])),3+c(failed(schemes_failed,[scc=18,cr=fun3/2])),c(failed(schemes_failed,[scc=18,cr=fun3/2])),1+c(failed(schemes_failed,[scc=18,cr=fun3/2])),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS bftMult(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=18,cr=fun3/2])) 

  * LOOPS bftMult(C,D) -> bftMult(E,F)

  * Ranking function: N/A

  * Invariants bftMult(A,B) -> bftMult(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun3(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=18,cr=fun3/2])) 

  * LOOPS fun3(C,D) -> fun3(E,F)
     - [E>=0,F>=0,C>=0,D=F]
     - [E>=0,D>=0,C>=0]

  * Ranking function: c(failed(no_rf,[scc=18,cr=fun3/2]))

  * Invariants fun3(A,B) -> fun3(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [B>=0,A>=0,C>=0]
     inv    : [C>=0,A>=0]

CRS fun5(A)

  * Non Asymptotic Upper Bound: 8+2*nat(A-1) 

  * LOOPS fun5(B) -> fun5(C)

  * Ranking function: N/A

  * Invariants fun5(A) -> fun5(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS dequeue(A,B)

  * Non Asymptotic Upper Bound: 7+2*nat(B) 

  * LOOPS dequeue(C,D) -> dequeue(E,F)

  * Ranking function: N/A

  * Invariants dequeue(A,B) -> dequeue(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun11(A,B)

  * Non Asymptotic Upper Bound: 6+2*nat(B) 

  * LOOPS fun11(C,D) -> fun11(E,F)

  * Ranking function: N/A

  * Invariants fun11(A,B) -> fun11(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS reverse(A)

  * Non Asymptotic Upper Bound: 4+2*nat(A) 

  * LOOPS reverse(B) -> reverse(C)

  * Ranking function: N/A

  * Invariants reverse(A) -> reverse(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun12(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun12(B) -> fun12(C)

  * Ranking function: N/A

  * Invariants fun12(A) -> fun12(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun16(A,B)

  * Non Asymptotic Upper Bound: 1+10*nat(A)+6*nat(A-1)+9*nat(A)*nat(B-1) 

  * LOOPS fun16(C,D) -> fun16(E,F)
     - [D>=0,C>=E+1,E>=0,D=F]

  * Ranking function: nat(C)

  * Invariants fun16(A,B) -> fun16(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,A>=C+1,C>=0,B=D]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS computeLine(A,B,C)

  * Non Asymptotic Upper Bound: 8+6*nat(A)+9*nat(B-1) 

  * LOOPS computeLine(D,E,F) -> computeLine(G,H,I)
     - [F>=0,E>=H+1,H>=0,D>=G+1,G>=0]

  * Ranking function: nat(E)

  * Invariants computeLine(A,B,C) -> computeLine(D,E,F)

     entry  : [A>=0,B>=0]
     non-rec: [A=D,B=E,C=F,A>=0,B>=0]
     rec    : [C>=0,B>=E+1,E>=0,A>=D+1,D>=0]
     inv    : [B>=E,A>=D,E>=0,D>=0]

CRS fun14(A,B,C)

  * Non Asymptotic Upper Bound: 2+9*nat(A) 

  * LOOPS fun14(D,E,F) -> fun14(G,H,I)
     - [F>=0,E>=H+1,H>=0,D>=G+1,G>=0,F=I]
     - [F>=0,D>=G+1,G>=0,E=2,H=2,F=I]

  * Ranking function: nat(D)

  * Invariants fun14(A,B,C) -> fun14(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [2*B>=E+2,E>=0,B>=E,C>=0,D>=0,A>=D+1,C=F]
     inv    : [E>=0,A>=D,B>=E,D>=0,C>=0,C=F]

CRS times(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS times(C,D) -> times(E,F)

  * Ranking function: N/A

  * Invariants times(A,B) -> times(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun(C,D) -> fun(E,F)

  * Ranking function: N/A

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun19(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun19(C,D) -> fun19(E,F)
     - [D>=0,E>=0,C=E+1,D=F]

  * Ranking function: N/A

  * Invariants fun19(A,B) -> fun19(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B=D,B>=0,C>=0,A>=C+1]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS plus(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS plus(C,D) -> plus(E,F)

  * Ranking function: N/A

  * Invariants plus(A,B) -> plus(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [0=1]
     inv    : [B>=0,A=C,B=D]

CRS fun1(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(C,D) -> fun1(E,F)
     - [D=F,C=E+1,C>=3,D>=0]
     - [D=F,C=E+1,C>=3,D>=0]

  * Ranking function: N/A

  * Invariants fun1(A,B) -> fun1(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [B=D,B>=0,C>=2,A>=C+1]
     inv    : [C>=0,A>=C,B=D]

CRS fun18(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun18(B) -> fun18(C)

  * Ranking function: N/A

  * Invariants fun18(A) -> fun18(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun17(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun17(B) -> fun17(C)

  * Ranking function: N/A

  * Invariants fun17(A) -> fun17(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS enqueue(A,B)

  * Non Asymptotic Upper Bound: 2 

  * LOOPS enqueue(C,D) -> enqueue(E,F)

  * Ranking function: N/A

  * Invariants enqueue(A,B) -> enqueue(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=C,B=D]

CRS fun13(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun13(C,D) -> fun13(E,F)

  * Ranking function: N/A

  * Invariants fun13(A,B) -> fun13(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS appendreverse(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(A) 

  * LOOPS appendreverse(C,D) -> appendreverse(E,F)
     - [C+D=E+F,E>=0,C>=E+1,D>=0]

  * Ranking function: nat(C)

  * Invariants appendreverse(A,B) -> appendreverse(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,D>=B+1,A+B>=D,A+B=C+D]
     inv    : [D>=B,A+B>=D,B>=0,A+B=C+D]


