This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([13+77/6*nat(D)+5*nat(B)+35/6*nat(D)*nat(B)+7/6*nat(D),11+77/6*nat(A)+5*nat(B)+35/6*nat(A)*nat(B)+7/6*nat(A),12+77/6*nat(B)+5*nat(A)+35/6*nat(B)*nat(A)+7/6*nat(B),1+13*nat(A)+5*nat(A-1)+77/6*nat(A)*nat(A-1)+nat(A)+7/6*nat(A)*nat(A-1)+35/6*pow(nat(1*A+ -1),2),2+13*nat(A)+5*nat(A-1)+77/6*nat(A)*nat(A-1)+nat(A)+7/6*nat(A)*nat(A-1)+35/6*pow(nat(1*A+ -1),2),12+5*nat(C),13+5*nat(A-1),9+5*nat(A)]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([13+77/6*nat(D)+5*nat(B)+35/6*nat(D)*nat(B)+7/6*nat(D),11+77/6*nat(A)+5*nat(B)+35/6*nat(A)*nat(B)+7/6*nat(A),12+77/6*nat(B)+5*nat(A)+35/6*nat(B)*nat(A)+7/6*nat(B),1+13*nat(A)+5*nat(A-1)+77/6*nat(A)*nat(A-1)+nat(A)+7/6*nat(A)*nat(A-1)+35/6*pow(nat(1*A+ -1),2),2+13*nat(A)+5*nat(A-1)+77/6*nat(A)*nat(A-1)+nat(A)+7/6*nat(A)*nat(A-1)+35/6*pow(nat(1*A+ -1),2),12+5*nat(C),13+5*nat(A-1),9+5*nat(A)]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1+13*nat(A)+5*nat(A-1)+77/6*nat(A)*nat(A-1)+nat(A)+7/6*nat(A)*nat(A-1)+35/6*pow(nat(A-1),2) 

  * LOOPS fun6(B) -> fun6(C)
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun6(A) -> fun6(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS fun7(A,B)

  * Non Asymptotic Upper Bound: 11+77/6*nat(A)+5*nat(B)+35/6*nat(A)*nat(B)+7/6*nat(A) 

  * LOOPS fun7(C,D) -> fun7(E,F)
     - [2*D>=1,2*C>=2*E+3,E>=0,D=F]
     - [D>=1,C>=E+2,E>=0,D=F]

  * Ranking function: nat(2/3*C)

  * Invariants fun7(A,B) -> fun7(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [2*A>=2*C+3,2*B>=1,C>=0,B=D]
     inv    : [A>=C,B>=0,C>=0,B=D]

CRS eq(A,B)

  * Non Asymptotic Upper Bound: 9+5*nat(A) 

  * LOOPS eq(C,D) -> eq(E,F)
     - [E>=0,F>=0,D>=F+1,C>=E+1]

  * Ranking function: nat(D)

  * Invariants eq(A,B) -> eq(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=D+1,D>=0,A>=C+1,C>=0]
     inv    : [B>=D,A>=C,C>=0,D>=0]

CRS fun5(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun5(B) -> fun5(C)

  * Ranking function: N/A

  * Invariants fun5(A) -> fun5(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun(C,D) -> fun(E,F)

  * Ranking function: N/A

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun1(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(C,D) -> fun1(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]

  * Ranking function: N/A

  * Invariants fun1(A,B) -> fun1(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A>=C+1,B>=D+1,C>=0,D>=0]
     inv    : [B>=D,A>=C,C>=0,D>=0]

CRS and(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS and(C,D) -> and(E,F)

  * Ranking function: N/A

  * Invariants and(A,B) -> and(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun2(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun2(C,D) -> fun2(E,F)

  * Ranking function: N/A

  * Invariants fun2(A,B) -> fun2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]


