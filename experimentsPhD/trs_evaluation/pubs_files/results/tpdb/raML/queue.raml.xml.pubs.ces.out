This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([5+c(failed(schemes_failed,[scc=10,cr=breadth/2])),6+c(failed(schemes_failed,[scc=10,cr=breadth/2])),6+4*nat(A-1),3+4*nat(A),1+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),1+c(failed(schemes_failed,[scc=0,cr=copyover/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2])),3+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),3+c(failed(schemes_failed,[scc=0,cr=copyover/2])),4+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),c(failed(schemes_failed,[scc=1,cr=dequeue/2])),1+c(failed(schemes_failed,[scc=0,cr=copyover/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2])),c(failed(schemes_failed,[scc=0,cr=copyover/2])),1+c(failed(schemes_failed,[scc=10,cr=breadth/2])),4+4*nat(A-1),5+4*nat(A-1)+c(failed(schemes_failed,[scc=10,cr=breadth/2])),9+4*nat(c(maximize_failed)),10+4*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=10,cr=breadth/2])),10+4*nat(c(maximize_failed)),11+4*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=10,cr=breadth/2])),c(failed(schemes_failed,[scc=10,cr=breadth/2]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([5+c(failed(schemes_failed,[scc=10,cr=breadth/2])),6+c(failed(schemes_failed,[scc=10,cr=breadth/2])),6+4*nat(A-1),3+4*nat(A),1+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),1+c(failed(schemes_failed,[scc=0,cr=copyover/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2])),3+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),3+c(failed(schemes_failed,[scc=0,cr=copyover/2])),4+c(failed(schemes_failed,[scc=0,cr=copyover/2]))+c(failed(schemes_failed,[scc=1,cr=dequeue/2])),c(failed(schemes_failed,[scc=1,cr=dequeue/2])),1+c(failed(schemes_failed,[scc=0,cr=copyover/2])),2+c(failed(schemes_failed,[scc=0,cr=copyover/2])),c(failed(schemes_failed,[scc=0,cr=copyover/2])),1+c(failed(schemes_failed,[scc=10,cr=breadth/2])),4+4*nat(A-1),5+4*nat(A-1)+c(failed(schemes_failed,[scc=10,cr=breadth/2])),9+4*nat(c(maximize_failed)),10+4*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=10,cr=breadth/2])),10+4*nat(c(maximize_failed)),11+4*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=10,cr=breadth/2])),c(failed(schemes_failed,[scc=10,cr=breadth/2]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS startBreadth(A)

  * Non Asymptotic Upper Bound: 6+c(failed(schemes_failed,[scc=10,cr=breadth/2])) 

  * LOOPS startBreadth(B) -> startBreadth(C)

  * Ranking function: N/A

  * Invariants startBreadth(A) -> startBreadth(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun16(A)

  * Non Asymptotic Upper Bound: 5+c(failed(schemes_failed,[scc=10,cr=breadth/2])) 

  * LOOPS fun16(B) -> fun16(C)

  * Ranking function: N/A

  * Invariants fun16(A) -> fun16(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun17(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=10,cr=breadth/2])) 

  * LOOPS fun17(B) -> fun17(C)

  * Ranking function: N/A

  * Invariants fun17(A) -> fun17(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS empty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS empty(B) -> empty(C)

  * Ranking function: N/A

  * Invariants empty(A) -> empty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS breadth(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=10,cr=breadth/2])) 

  * LOOPS breadth(C,D) -> breadth(E,F)
     - [F>=0,E>=0,D>=0,C>=0]

  * Ranking function: c(failed(no_rf,[scc=10,cr=breadth/2]))

  * Invariants breadth(A,B) -> breadth(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=0,A>=0]
     inv    : [C>=0,A>=0,B>=0,D>=0]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 4 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS children(A,B,C,D)

  * Non Asymptotic Upper Bound: 3 

  * LOOPS children(E,F,G,H) -> children(I,J,K,L)

  * Ranking function: N/A

  * Invariants children(A,B,C,D) -> children(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun5(A,B,C)

  * Non Asymptotic Upper Bound: 2 

  * LOOPS fun5(D,E,F) -> fun5(G,H,I)

  * Ranking function: N/A

  * Invariants fun5(A,B,C) -> fun5(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun7(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun7(C,D) -> fun7(E,F)

  * Ranking function: N/A

  * Invariants fun7(A,B) -> fun7(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun6(A,B,C,D)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(E,F,G,H) -> fun6(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun6(A,B,C,D) -> fun6(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS enqueues(A,B)

  * Non Asymptotic Upper Bound: 3+4*nat(A) 

  * LOOPS enqueues(C,D) -> enqueues(E,F)
     - [D>=0,C>=E+1,E>=0]

  * Ranking function: nat(C)

  * Invariants enqueues(A,B) -> enqueues(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [B>=0,A>=C+1,C>=0]
     inv    : [A>=C,C>=0]

CRS enqueue(A,B)

  * Non Asymptotic Upper Bound: 2 

  * LOOPS enqueue(C,D) -> enqueue(E,F)

  * Ranking function: N/A

  * Invariants enqueue(A,B) -> enqueue(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=C,B=D]

CRS fun14(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun14(C,D) -> fun14(E,F)

  * Ranking function: N/A

  * Invariants fun14(A,B) -> fun14(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS dequeue(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=dequeue/2])) 

  * LOOPS dequeue(C,D) -> dequeue(E,F)
     - [C+D>=1,D>=0,C>=0,E>=0,F>=0]

  * Ranking function: c(failed(no_rf,[scc=1,cr=dequeue/2]))

  * Invariants dequeue(A,B) -> dequeue(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+B>=1,B>=0,A>=0,C>=0,D>=0]
     inv    : [A>=0,C>=0,B>=0,D>=0]

CRS copyover(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=copyover/2])) 

  * LOOPS copyover(C,D) -> copyover(E,F)
     - [C+D=E+F,F>=1,E>=0,E+F>=D,D>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=copyover/2]))

  * Invariants copyover(A,B) -> copyover(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,C+D>=B,C>=0,D>=1,A+B=C+D]
     inv    : [A>=0,D>=0,A+B>=D,B>=0,A+B=C+D]


