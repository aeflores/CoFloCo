This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E,F,G) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([4+2*nat(A),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),3+c(failed(schemes_failed,[scc=9,cr=dfs/2])),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),4+c(failed(schemes_failed,[scc=9,cr=dfs/2])),2+c(failed(schemes_failed,[scc=9,cr=dfs/2])),c(failed(schemes_failed,[scc=9,cr=dfs/2])),2+c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+c(failed(schemes_failed,[scc=5,cr=bfs/3]))+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),3+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),5+2*nat(A)+c(failed(schemes_failed,[scc=5,cr=bfs/3])),6+2*nat(B)+c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+c(failed(schemes_failed,[scc=5,cr=bfs/3])),2+c(failed(schemes_failed,[scc=5,cr=bfs/3])),c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS $pubs_aux_entry$(H,I,J,K,L,M,N) -> $pubs_aux_entry$(O,P,Q,R,S,T,U)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E,F,G) -> $pubs_aux_entry$(H,I,J,K,L,M,N)

     entry  : []
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N]
     rec    : [0=1]
     inv    : [A=H,B=I,C=J,D=K,E=L,F=M,G=N]

CRS start(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: max([4+2*nat(A),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),3+c(failed(schemes_failed,[scc=9,cr=dfs/2])),1+c(failed(schemes_failed,[scc=9,cr=dfs/2])),4+c(failed(schemes_failed,[scc=9,cr=dfs/2])),2+c(failed(schemes_failed,[scc=9,cr=dfs/2])),c(failed(schemes_failed,[scc=9,cr=dfs/2])),2+c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+c(failed(schemes_failed,[scc=5,cr=bfs/3]))+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),3+c(failed(schemes_failed,[scc=5,cr=bfs/3])),1+c(failed(schemes_failed,[scc=5,cr=bfs/3])),5+2*nat(A)+c(failed(schemes_failed,[scc=5,cr=bfs/3])),6+2*nat(B)+c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+c(failed(schemes_failed,[scc=5,cr=bfs/3])),2+c(failed(schemes_failed,[scc=5,cr=bfs/3])),c(failed(schemes_failed,[scc=5,cr=bfs/3])),4+2*nat(A-1),3+2*nat(A)]) 

  * LOOPS start(H,I,J,K,L,M,N) -> start(O,P,Q,R,S,T,U)

  * Ranking function: N/A

  * Invariants start(A,B,C,D,E,F,G) -> start(H,I,J,K,L,M,N)

     entry  : []
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N]
     rec    : [0=1]
     inv    : [A=H,B=I,C=J,D=K,E=L,F=M,G=N]

CRS dodfs(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=9,cr=dfs/2])) 

  * LOOPS dodfs(C,D) -> dodfs(E,F)

  * Ranking function: N/A

  * Invariants dodfs(A,B) -> dodfs(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS dfs(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=9,cr=dfs/2])) 

  * LOOPS dfs(C,D) -> dfs(E,F)
     - [C=E+2,D=F,C>=2,D>=0]
     - [D>=0,C>=E,E>=2,D=F]

  * Ranking function: c(failed(no_rf,[scc=9,cr=dfs/2]))

  * Invariants dfs(A,B) -> dfs(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A>=2,C>=0,A>=C,B>=0,B=D]
     inv    : [C>=0,A>=C,B>=0,B=D]

CRS bfs2(A,B)

  * Non Asymptotic Upper Bound: 4+2*c(failed(schemes_failed,[scc=5,cr=bfs/3])) 

  * LOOPS bfs2(C,D) -> bfs2(E,F)

  * Ranking function: N/A

  * Invariants bfs2(A,B) -> bfs2(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun7(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=5,cr=bfs/3])) 

  * LOOPS fun7(C,D) -> fun7(E,F)

  * Ranking function: N/A

  * Invariants fun7(A,B) -> fun7(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [0=1]
     inv    : [B>=0,A=C,B=D]

CRS dobfs(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=bfs/3])) 

  * LOOPS dobfs(C,D) -> dobfs(E,F)

  * Ranking function: N/A

  * Invariants dobfs(A,B) -> dobfs(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS bfs(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=bfs/3])) 

  * LOOPS bfs(D,E,F) -> bfs(G,H,I)
     - [E=H,F=I,D=G+2,D>=2,E>=0,F>=0]
     - [F>=0,E>=0,D+E>=G+H,H>=E+2,G>=0,F=I]
     - [F>=0,E>=1,F=I,D=2,H=2]

  * Ranking function: c(failed(no_rf,[scc=5,cr=bfs/3]))

  * Invariants bfs(A,B,C) -> bfs(D,E,F)

     entry  : [B>=0,C>=0]
     non-rec: [A=D,B=E,C=F,B>=0,C>=0]
     rec    : [E>=0,A>=2,B>=0,C>=0,C=F]
     inv    : [E>=0,B>=0,C>=0,C=F]

CRS reverse(A)

  * Non Asymptotic Upper Bound: 4+2*nat(A) 

  * LOOPS reverse(B) -> reverse(C)

  * Ranking function: N/A

  * Invariants reverse(A) -> reverse(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun(C,D) -> fun(E,F)

  * Ranking function: N/A

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun1(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun1(C,D) -> fun1(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]
     - [D>=F+1,F>=0,C>=E+1,E>=0]

  * Ranking function: N/A

  * Invariants fun1(A,B) -> fun1(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A>=C+1,B>=D+1,C>=0,D>=0]
     inv    : [B>=D,A>=C,C>=0,D>=0]

CRS fun11(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS fun11(C,D) -> fun11(E,F)

  * Ranking function: N/A

  * Invariants fun11(A,B) -> fun11(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS appendreverse(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(A) 

  * LOOPS appendreverse(C,D) -> appendreverse(E,F)
     - [C+D=E+F,E>=0,C>=E+1,D>=0]

  * Ranking function: nat(C)

  * Invariants appendreverse(A,B) -> appendreverse(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,D>=B+1,A+B>=D,A+B=C+D]
     inv    : [D>=B,A+B>=D,B>=0,A+B=C+D]


