This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([ (pow(2,nat(1*A))-1)* (nat(1*A+ -1)+2)+ (pow(2,nat(1*A))-1+2*pow(2,nat(1*A)))-1,2+nat(A),3+nat(A),1+4*nat(B)+nat(A)*nat(B)+nat(B),3+4*nat(C)+nat(B+1)*nat(C)+nat(C)+c(failed(schemes_failed,[scc=6,cr=cond1/3])),c(failed(schemes_failed,[scc=6,cr=cond1/3])),2+4*nat(B)+nat(A)*nat(B)+nat(B)+c(failed(schemes_failed,[scc=6,cr=cond1/3])),3+4*nat(A)+nat(A)+c(failed(schemes_failed,[scc=6,cr=cond1/3]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([ (pow(2,nat(1*A))-1)* (nat(1*A+ -1)+2)+ (pow(2,nat(1*A))-1+2*pow(2,nat(1*A)))-1,2+nat(A),3+nat(A),1+4*nat(B)+nat(A)*nat(B)+nat(B),3+4*nat(C)+nat(B+1)*nat(C)+nat(C)+c(failed(schemes_failed,[scc=6,cr=cond1/3])),c(failed(schemes_failed,[scc=6,cr=cond1/3])),2+4*nat(B)+nat(A)*nat(B)+nat(B)+c(failed(schemes_failed,[scc=6,cr=cond1/3])),3+4*nat(A)+nat(A)+c(failed(schemes_failed,[scc=6,cr=cond1/3]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS sort(A)

  * Non Asymptotic Upper Bound: 3+4*nat(A)+nat(A)+c(failed(schemes_failed,[scc=6,cr=cond1/3])) 

  * LOOPS sort(B) -> sort(C)

  * Ranking function: N/A

  * Invariants sort(A) -> sort(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS cond1(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=cond1/3])) 

  * LOOPS cond1(D,E,F) -> cond1(G,H,I)
     - [F>=G,E>=0,1>=G,G>=0,E+1=H,D=1,F=I]
     - [1>=G,I>=G,G>=0,H>=1,E+1=H,D=0,F=I]

  * Ranking function: c(failed(no_rf,[scc=6,cr=cond1/3]))

  * Invariants cond1(A,B,C) -> cond1(D,E,F)

     entry  : [A>=0,C>=0,B>=0,1>=A]
     non-rec: [A=D,B=E,C=F,A>=0,C>=0,B>=0,1>=A]
     rec    : [C=F,B>=0,C>=D,1>=A,1>=D,E>=B+1,D>=0,A>=0]
     inv    : [D+E>=A+B,C>=0,D>=0,A+C>=D,A>=0,A+E>=B+D,1>=A,1>=D,B>=0,C=F]

CRS max(A)

  * Non Asymptotic Upper Bound: (pow(2,nat(A))-1)* (nat(A-1)+2)+ (pow(2,nat(A))-1+2*pow(2,nat(A)))-1 

  * LOOPS max(B) -> max(C)
     - [B>=C+1,C>=0]
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants max(A) -> max(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS if(A,B,C)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS if(D,E,F) -> if(G,H,I)

  * Ranking function: N/A

  * Invariants if(A,B,C) -> if(D,E,F)

     entry  : [1>=A,C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,1>=A,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [B>=0,C>=0,A>=0,1>=A,A=D,B=E,C=F]

CRS gt(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A) 

  * LOOPS gt(C,D) -> gt(E,F)
     - [D=F+1,C=E+1,D>=1,C>=1]

  * Ranking function: nat(D)

  * Invariants gt(A,B) -> gt(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS member(A,B)

  * Non Asymptotic Upper Bound: 1+4*nat(B)+nat(A)*nat(B)+nat(B) 

  * LOOPS member(C,D) -> member(E,F)
     - [E>=0,F>=0,D>=F+1,C=E]

  * Ranking function: nat(D)

  * Invariants member(A,B) -> member(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=D+1,D>=0,C>=0,A=C]
     inv    : [B>=D,A>=0,D>=0,A=C]

CRS or(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS or(C,D) -> or(E,F)

  * Ranking function: N/A

  * Invariants or(A,B) -> or(C,D)

     entry  : [1>=B,B>=0,A>=0]
     non-rec: [A=C,B=D,1>=B,B>=0,A>=0]
     rec    : [0=1]
     inv    : [B>=0,A>=0,1>=B,A=C,B=D]

CRS equal(A,B)

  * Non Asymptotic Upper Bound: 3+nat(A) 

  * LOOPS equal(C,D) -> equal(E,F)
     - [D=F+1,C=E+1,D>=1,C>=1]

  * Ranking function: nat(D)

  * Invariants equal(A,B) -> equal(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]


