This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3+nat(A+B-1)+nat(2*A+B-1),c(failed(schemes_failed,[scc=1,cr=ack/2])),c(failed(schemes_failed,[scc=4,cr=permute/3])),1+c(failed(schemes_failed,[scc=4,cr=permute/3]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([3+nat(A+B-1)+nat(2*A+B-1),c(failed(schemes_failed,[scc=1,cr=ack/2])),c(failed(schemes_failed,[scc=4,cr=permute/3])),1+c(failed(schemes_failed,[scc=4,cr=permute/3]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS double(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=permute/3])) 

  * LOOPS double(B) -> double(C)

  * Ranking function: N/A

  * Invariants double(A) -> double(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS permute(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=permute/3])) 

  * LOOPS permute(D,E,F) -> permute(G,H,I)
     - [E>=0,H>=0,I=1,D=H,F=0]
     - [E>=0,I=2,D=1,F=1]
     - [I=0,E=G,D=H,F=2,D>=0,E>=0]

  * Ranking function: c(failed(no_rf,[scc=4,cr=permute/3]))

  * Invariants permute(A,B,C) -> permute(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [F>=0,C>=0,2>=C,A>=0,2>=F,B>=0]
     inv    : [A>=0,B>=0,F>=0,F+2>=C,C+2>=F,C>=0]

CRS p(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS p(B) -> p(C)

  * Ranking function: N/A

  * Invariants p(A) -> p(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS isZero(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isZero(B) -> isZero(C)

  * Ranking function: N/A

  * Invariants isZero(A) -> isZero(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS ack(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=ack/2])) 

  * LOOPS ack(C,D) -> ack(E,F)
     - [F=1,C=E+1,D=0,C>=1]
     - [D>=1,C>=1,C=E,D=F+1]
     - [D>=1,C>=1,C=E+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=ack/2]))

  * Invariants ack(A,B) -> ack(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [C>=0,B>=0,A+B>=C+1,A>=1,A>=C]
     inv    : [C>=0,B>=0,A>=C]

CRS plus(A,B)

  * Non Asymptotic Upper Bound: 3+nat(A+B-1)+nat(2*A+B-1) 

  * LOOPS plus(C,D) -> plus(E,F)
     - [D+1=F,C=E+1,E>=0,D>=0]
     - [D=F+2,C+1=E,E>=1,D>=2]

  * Ranking function: nat(3*C+2*D-2)

  * Invariants plus(A,B) -> plus(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [C>=0,B>=0,A+B>=C+D,C+D>=1,A>=0,2*A+B>=2*C+D,D>=0,A+B>=C+1,3*A+2*B>=3*C+2*D+1,2*A+B>=C+D+1]
     inv    : [2*A+B>=2*C+D,C>=0,A>=0,A+B>=C+D,D>=0,B>=0]


