This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(schemes_failed,[scc=3,cr=prefix/1])),2+2*nat(A)+nat(B-1),c(failed(schemes_failed,[scc=1,cr=from/1])),1+nat(A)]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS start(A,B)

  * Non Asymptotic Upper Bound: max([c(failed(schemes_failed,[scc=3,cr=prefix/1])),2+2*nat(A)+nat(B-1),c(failed(schemes_failed,[scc=1,cr=from/1])),1+nat(A)]) 

  * LOOPS start(C,D) -> start(E,F)

  * Ranking function: N/A

  * Invariants start(A,B) -> start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS prefix(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=prefix/1])) 

  * LOOPS prefix(B) -> prefix(C)
     - [C>=0,B=C]

  * Ranking function: c(failed(no_rf,[scc=3,cr=prefix/1]))

  * Invariants prefix(A) -> prefix(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A=B]
     inv    : [A>=0,A=B]

CRS zWadr(A,B)

  * Non Asymptotic Upper Bound: 2+2*nat(A)+nat(B-1) 

  * LOOPS zWadr(C,D) -> zWadr(E,F)
     - [D>=F+1,F>=0,C>=E+1,E>=0]

  * Ranking function: nat(D)

  * Invariants zWadr(A,B) -> zWadr(C,D)

     entry  : [A>=0]
     non-rec: [A=C,B=D,A>=0]
     rec    : [B>=D+1,D>=0,A>=C+1,C>=0]
     inv    : [A>=C,B>=D,C>=0]

CRS from(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=from/1])) 

  * LOOPS from(B) -> from(C)
     - [B+1=C,C>=1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=from/1]))

  * Invariants from(A) -> from(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=0,B>=A+1]
     inv    : [B>=A,A>=0]

CRS app(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS app(C,D) -> app(E,F)
     - [D=F,E>=0,C>=E+1,D>=0]

  * Ranking function: nat(C)

  * Invariants app(A,B) -> app(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B>=0,A>=C+1,C>=0,B=D]
     inv    : [A>=C,C>=0,B>=0,B=D]


