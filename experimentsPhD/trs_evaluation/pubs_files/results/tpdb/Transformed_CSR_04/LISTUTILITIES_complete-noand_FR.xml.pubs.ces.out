This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=take/2])),c(failed(cover_point,[scc=34,cr=sel/2])),c(failed(cover_point,[scc=34,cr=natsFrom/1])),c(failed(cover_point,[scc=34,cr=isPLNatKind/1])),c(failed(cover_point,[scc=34,cr=isPLNat/1])),c(failed(cover_point,[scc=34,cr=isNaturalKind/1])),c(failed(cover_point,[scc=34,cr=isNatural/1])),c(failed(cover_point,[scc=34,cr=isLNatKind/1])),c(failed(cover_point,[scc=34,cr=isLNat/1])),c(failed(cover_point,[scc=34,cr=afterNth/2])),c(failed(cover_point,[scc=34,cr=fun108/2])),c(failed(cover_point,[scc=34,cr=fun107/2])),c(failed(cover_point,[scc=34,cr=fun105/2])),c(failed(cover_point,[scc=34,cr=fun104/2])),c(failed(cover_point,[scc=34,cr=fun102/2])),c(failed(cover_point,[scc=34,cr=fun101/2])),c(failed(cover_point,[scc=34,cr=fun99/2])),c(failed(cover_point,[scc=34,cr=fun98/2])),c(failed(cover_point,[scc=34,cr=fun96/2])),c(failed(cover_point,[scc=34,cr=fun95/3])),c(failed(cover_point,[scc=34,cr=fun94/3])),c(failed(cover_point,[scc=34,cr=fun93/3])),c(failed(cover_point,[scc=34,cr=fun92/3])),c(failed(cover_point,[scc=34,cr=fun90/2])),c(failed(cover_point,[scc=34,cr=fun89/3])),c(failed(cover_point,[scc=34,cr=fun88/3])),c(failed(cover_point,[scc=34,cr=fun87/3])),c(failed(cover_point,[scc=34,cr=fun86/3])),c(failed(cover_point,[scc=34,cr=fun85/3])),c(failed(cover_point,[scc=34,cr=fun84/3])),c(failed(cover_point,[scc=34,cr=fun83/3])),c(failed(cover_point,[scc=34,cr=fun82/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),1+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),5+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),6+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),7+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),1+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun61/3])),c(failed(cover_point,[scc=34,cr=fun60/3])),c(failed(cover_point,[scc=34,cr=fun59/3])),c(failed(cover_point,[scc=34,cr=fun58/3])),c(failed(cover_point,[scc=34,cr=fun57/2])),c(failed(cover_point,[scc=34,cr=fun56/2])),c(failed(cover_point,[scc=34,cr=fun54/2])),c(failed(cover_point,[scc=34,cr=fun52/2])),c(failed(cover_point,[scc=34,cr=fun50/2])),c(failed(cover_point,[scc=34,cr=fun49/3])),c(failed(cover_point,[scc=34,cr=fun48/3])),c(failed(cover_point,[scc=34,cr=fun47/3])),c(failed(cover_point,[scc=34,cr=fun46/3])),c(failed(cover_point,[scc=34,cr=fun44/2])),c(failed(cover_point,[scc=34,cr=fun43/3])),c(failed(cover_point,[scc=34,cr=fun42/3])),c(failed(cover_point,[scc=34,cr=fun41/3])),c(failed(cover_point,[scc=34,cr=fun40/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun38/2])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun30/2])),c(failed(cover_point,[scc=34,cr=fun29/3])),c(failed(cover_point,[scc=34,cr=fun28/3])),c(failed(cover_point,[scc=34,cr=fun27/3])),c(failed(cover_point,[scc=34,cr=fun26/3])),c(failed(cover_point,[scc=34,cr=fun24/2])),c(failed(cover_point,[scc=34,cr=fun23/2])),c(failed(cover_point,[scc=34,cr=fun21/2])),c(failed(cover_point,[scc=34,cr=fun20/2])),c(failed(cover_point,[scc=34,cr=fun18/2])),c(failed(cover_point,[scc=34,cr=fun13/3])),c(failed(cover_point,[scc=34,cr=fun10/3])),c(failed(cover_point,[scc=34,cr=fun11/2])),c(failed(cover_point,[scc=34,cr=fun7/3])),c(failed(cover_point,[scc=34,cr=fun8/2])),c(failed(cover_point,[scc=34,cr=fun6/3])),c(failed(cover_point,[scc=34,cr=fun4/2])),c(failed(cover_point,[scc=34,cr=fun3/3])),c(failed(cover_point,[scc=34,cr=fun2/3])),c(failed(cover_point,[scc=34,cr=fun1/3])),c(failed(cover_point,[scc=34,cr=fun/3]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=take/2])),c(failed(cover_point,[scc=34,cr=sel/2])),c(failed(cover_point,[scc=34,cr=natsFrom/1])),c(failed(cover_point,[scc=34,cr=isPLNatKind/1])),c(failed(cover_point,[scc=34,cr=isPLNat/1])),c(failed(cover_point,[scc=34,cr=isNaturalKind/1])),c(failed(cover_point,[scc=34,cr=isNatural/1])),c(failed(cover_point,[scc=34,cr=isLNatKind/1])),c(failed(cover_point,[scc=34,cr=isLNat/1])),c(failed(cover_point,[scc=34,cr=afterNth/2])),c(failed(cover_point,[scc=34,cr=fun108/2])),c(failed(cover_point,[scc=34,cr=fun107/2])),c(failed(cover_point,[scc=34,cr=fun105/2])),c(failed(cover_point,[scc=34,cr=fun104/2])),c(failed(cover_point,[scc=34,cr=fun102/2])),c(failed(cover_point,[scc=34,cr=fun101/2])),c(failed(cover_point,[scc=34,cr=fun99/2])),c(failed(cover_point,[scc=34,cr=fun98/2])),c(failed(cover_point,[scc=34,cr=fun96/2])),c(failed(cover_point,[scc=34,cr=fun95/3])),c(failed(cover_point,[scc=34,cr=fun94/3])),c(failed(cover_point,[scc=34,cr=fun93/3])),c(failed(cover_point,[scc=34,cr=fun92/3])),c(failed(cover_point,[scc=34,cr=fun90/2])),c(failed(cover_point,[scc=34,cr=fun89/3])),c(failed(cover_point,[scc=34,cr=fun88/3])),c(failed(cover_point,[scc=34,cr=fun87/3])),c(failed(cover_point,[scc=34,cr=fun86/3])),c(failed(cover_point,[scc=34,cr=fun85/3])),c(failed(cover_point,[scc=34,cr=fun84/3])),c(failed(cover_point,[scc=34,cr=fun83/3])),c(failed(cover_point,[scc=34,cr=fun82/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),1+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),5+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),6+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),7+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),1+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun61/3])),c(failed(cover_point,[scc=34,cr=fun60/3])),c(failed(cover_point,[scc=34,cr=fun59/3])),c(failed(cover_point,[scc=34,cr=fun58/3])),c(failed(cover_point,[scc=34,cr=fun57/2])),c(failed(cover_point,[scc=34,cr=fun56/2])),c(failed(cover_point,[scc=34,cr=fun54/2])),c(failed(cover_point,[scc=34,cr=fun52/2])),c(failed(cover_point,[scc=34,cr=fun50/2])),c(failed(cover_point,[scc=34,cr=fun49/3])),c(failed(cover_point,[scc=34,cr=fun48/3])),c(failed(cover_point,[scc=34,cr=fun47/3])),c(failed(cover_point,[scc=34,cr=fun46/3])),c(failed(cover_point,[scc=34,cr=fun44/2])),c(failed(cover_point,[scc=34,cr=fun43/3])),c(failed(cover_point,[scc=34,cr=fun42/3])),c(failed(cover_point,[scc=34,cr=fun41/3])),c(failed(cover_point,[scc=34,cr=fun40/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun38/2])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun30/2])),c(failed(cover_point,[scc=34,cr=fun29/3])),c(failed(cover_point,[scc=34,cr=fun28/3])),c(failed(cover_point,[scc=34,cr=fun27/3])),c(failed(cover_point,[scc=34,cr=fun26/3])),c(failed(cover_point,[scc=34,cr=fun24/2])),c(failed(cover_point,[scc=34,cr=fun23/2])),c(failed(cover_point,[scc=34,cr=fun21/2])),c(failed(cover_point,[scc=34,cr=fun20/2])),c(failed(cover_point,[scc=34,cr=fun18/2])),c(failed(cover_point,[scc=34,cr=fun13/3])),c(failed(cover_point,[scc=34,cr=fun10/3])),c(failed(cover_point,[scc=34,cr=fun11/2])),c(failed(cover_point,[scc=34,cr=fun7/3])),c(failed(cover_point,[scc=34,cr=fun8/2])),c(failed(cover_point,[scc=34,cr=fun6/3])),c(failed(cover_point,[scc=34,cr=fun4/2])),c(failed(cover_point,[scc=34,cr=fun3/3])),c(failed(cover_point,[scc=34,cr=fun2/3])),c(failed(cover_point,[scc=34,cr=fun1/3])),c(failed(cover_point,[scc=34,cr=fun/3]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun78(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun78(D,E,F) -> fun78(G,H,I)

  * Ranking function: N/A

  * Invariants fun78(A,B,C) -> fun78(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun79(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+5*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun79(C,D) -> fun79(E,F)

  * Ranking function: N/A

  * Invariants fun79(A,B) -> fun79(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun80(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun80(C,D) -> fun80(E,F)

  * Ranking function: N/A

  * Invariants fun80(A,B) -> fun80(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun81(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun81(C,D) -> fun81(E,F)

  * Ranking function: N/A

  * Invariants fun81(A,B) -> fun81(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun71(A,B,C,D)

  * Non Asymptotic Upper Bound: 7+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+23*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isNaturalKind/1])) 

  * LOOPS fun71(E,F,G,H) -> fun71(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun71(A,B,C,D) -> fun71(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun72(A,B,C,D)

  * Non Asymptotic Upper Bound: 6+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+19*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun72(E,F,G,H) -> fun72(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun72(A,B,C,D) -> fun72(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun73(A,B,C,D)

  * Non Asymptotic Upper Bound: 5+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+15*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun73(E,F,G,H) -> fun73(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun73(A,B,C,D) -> fun73(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun74(A,B,C,D)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+11*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun74(E,F,G,H) -> fun74(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun74(A,B,C,D) -> fun74(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun75(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun75(E,F,G,H) -> fun75(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun75(A,B,C,D) -> fun75(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun76(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun76(E,F,G,H) -> fun76(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun76(A,B,C,D) -> fun76(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun68(A,B)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun68(C,D) -> fun68(E,F)

  * Ranking function: N/A

  * Invariants fun68(A,B) -> fun68(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun69(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun69(C,D) -> fun69(E,F)

  * Ranking function: N/A

  * Invariants fun69(A,B) -> fun69(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun66(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+9*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun66(D,E,F) -> fun66(G,H,I)

  * Ranking function: N/A

  * Invariants fun66(A,B,C) -> fun66(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun67(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+6*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun67(D,E,F) -> fun67(G,H,I)

  * Ranking function: N/A

  * Invariants fun67(A,B,C) -> fun67(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun70(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun70(D,E,F) -> fun70(G,H,I)

  * Ranking function: N/A

  * Invariants fun70(A,B,C) -> fun70(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun77(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun77(C,D) -> fun77(E,F)

  * Ranking function: N/A

  * Invariants fun77(A,B) -> fun77(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun62(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isLNatKind/1])) 

  * LOOPS fun62(D,E,F) -> fun62(G,H,I)

  * Ranking function: N/A

  * Invariants fun62(A,B,C) -> fun62(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun63(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+5*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun63(C,D) -> fun63(E,F)

  * Ranking function: N/A

  * Invariants fun63(A,B) -> fun63(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun64(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun64(C,D) -> fun64(E,F)

  * Ranking function: N/A

  * Invariants fun64(A,B) -> fun64(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun65(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun65(C,D) -> fun65(E,F)

  * Ranking function: N/A

  * Invariants fun65(A,B) -> fun65(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun32(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+9*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isLNatKind/1])) 

  * LOOPS fun32(D,E,F) -> fun32(G,H,I)

  * Ranking function: N/A

  * Invariants fun32(A,B,C) -> fun32(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun33(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+6*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun33(D,E,F) -> fun33(G,H,I)

  * Ranking function: N/A

  * Invariants fun33(A,B,C) -> fun33(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun35(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun35(D,E,F) -> fun35(G,H,I)

  * Ranking function: N/A

  * Invariants fun35(A,B,C) -> fun35(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun37(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun37(C,D) -> fun37(E,F)

  * Ranking function: N/A

  * Invariants fun37(A,B) -> fun37(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS tail(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS tail(B) -> tail(C)

  * Ranking function: N/A

  * Invariants tail(A) -> tail(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS pair(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS pair(C,D) -> pair(E,F)

  * Ranking function: N/A

  * Invariants pair(A,B) -> pair(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS head(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS head(B) -> head(C)

  * Ranking function: N/A

  * Invariants head(A) -> head(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun110

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun110 -> fun110

  * Ranking function: N/A

  * Invariants fun110 -> fun110

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS fst(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fst(B) -> fst(C)

  * Ranking function: N/A

  * Invariants fst(A) -> fst(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS cons(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS cons(C,D) -> cons(E,F)

  * Ranking function: N/A

  * Invariants cons(A,B) -> cons(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun100(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun100(B) -> fun100(C)

  * Ranking function: N/A

  * Invariants fun100(A) -> fun100(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun97(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun97(B) -> fun97(C)

  * Ranking function: N/A

  * Invariants fun97(A) -> fun97(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun91(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun91(B) -> fun91(C)

  * Ranking function: N/A

  * Invariants fun91(A) -> fun91(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun109(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun109(B) -> fun109(C)

  * Ranking function: N/A

  * Invariants fun109(A) -> fun109(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun51(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun51(B) -> fun51(C)

  * Ranking function: N/A

  * Invariants fun51(A) -> fun51(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun45(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun45(B) -> fun45(C)

  * Ranking function: N/A

  * Invariants fun45(A) -> fun45(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun106(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun106(B) -> fun106(C)

  * Ranking function: N/A

  * Invariants fun106(A) -> fun106(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun103(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun103(B) -> fun103(C)

  * Ranking function: N/A

  * Invariants fun103(A) -> fun103(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun31(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun31(B) -> fun31(C)

  * Ranking function: N/A

  * Invariants fun31(A) -> fun31(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun25(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun25(B) -> fun25(C)

  * Ranking function: N/A

  * Invariants fun25(A) -> fun25(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun22(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun22(B) -> fun22(C)

  * Ranking function: N/A

  * Invariants fun22(A) -> fun22(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun5(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun5(B) -> fun5(C)

  * Ranking function: N/A

  * Invariants fun5(A) -> fun5(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun55(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun55(B) -> fun55(C)

  * Ranking function: N/A

  * Invariants fun55(A) -> fun55(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun53(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun53(B) -> fun53(C)

  * Ranking function: N/A

  * Invariants fun53(A) -> fun53(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun39(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun39(B) -> fun39(C)

  * Ranking function: N/A

  * Invariants fun39(A) -> fun39(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun36(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun36(B) -> fun36(C)

  * Ranking function: N/A

  * Invariants fun36(A) -> fun36(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun34(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun34(B) -> fun34(C)

  * Ranking function: N/A

  * Invariants fun34(A) -> fun34(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun9(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun9(B) -> fun9(C)

  * Ranking function: N/A

  * Invariants fun9(A) -> fun9(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun19(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun19(B) -> fun19(C)

  * Ranking function: N/A

  * Invariants fun19(A) -> fun19(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun17(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun17(B) -> fun17(C)

  * Ranking function: N/A

  * Invariants fun17(A) -> fun17(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun16(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun16(B) -> fun16(C)

  * Ranking function: N/A

  * Invariants fun16(A) -> fun16(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun15(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun15(B) -> fun15(C)

  * Ranking function: N/A

  * Invariants fun15(A) -> fun15(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun14(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun14(B) -> fun14(C)

  * Ranking function: N/A

  * Invariants fun14(A) -> fun14(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun12(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun12(B) -> fun12(C)

  * Ranking function: N/A

  * Invariants fun12(A) -> fun12(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS splitAt(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS splitAt(C,D) -> splitAt(E,F)

  * Ranking function: N/A

  * Invariants splitAt(A,B) -> splitAt(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS snd(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS snd(B) -> snd(C)

  * Ranking function: N/A

  * Invariants snd(A) -> snd(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


