This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([5,c(failed(cover_point,[scc=11,cr=mark/1])),23+3/2*nat(A-2)+nat(1*A+ -2)/2+nat(1*A+ -2)/2+nat(1*A+ -2)/2,21+3/2*nat(A-2)+nat(1*A+ -2)/2+nat(1*A+ -2)/2+nat(1*A+ -2)/2,c(failed(cover_point,[scc=10,cr=fun8/1])),c(failed(cover_point,[scc=10,cr=fun4/1])),19+3/2*nat(B)+nat(1*B)/2+nat(1*B)/2+nat(1*B)/2,c(failed(cover_point,[scc=10,cr=fun9/2])),c(failed(cover_point,[scc=10,cr=fun6/2])),c(failed(cover_point,[scc=10,cr=fun2/2])),c(failed(cover_point,[scc=11,cr=fun/2]))]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS start(A,B)

  * Non Asymptotic Upper Bound: max([5,c(failed(cover_point,[scc=11,cr=mark/1])),23+3/2*nat(A-2)+nat(1*A+ -2)/2+nat(1*A+ -2)/2+nat(1*A+ -2)/2,21+3/2*nat(A-2)+nat(1*A+ -2)/2+nat(1*A+ -2)/2+nat(1*A+ -2)/2,c(failed(cover_point,[scc=10,cr=fun8/1])),c(failed(cover_point,[scc=10,cr=fun4/1])),19+3/2*nat(B)+nat(1*B)/2+nat(1*B)/2+nat(1*B)/2,c(failed(cover_point,[scc=10,cr=fun9/2])),c(failed(cover_point,[scc=10,cr=fun6/2])),c(failed(cover_point,[scc=10,cr=fun2/2])),c(failed(cover_point,[scc=11,cr=fun/2]))]) 

  * LOOPS start(C,D) -> start(E,F)

  * Ranking function: N/A

  * Invariants start(A,B) -> start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun7(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun7(B) -> fun7(C)

  * Ranking function: N/A

  * Invariants fun7(A) -> fun7(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun5(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun5(B) -> fun5(C)

  * Ranking function: N/A

  * Invariants fun5(A) -> fun5(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun12(A,B)

  * Non Asymptotic Upper Bound: 19+3/2*nat(B)+nat(B)/2+nat(B)/2+nat(B)/2 

  * LOOPS fun12(C,D) -> fun12(E,F)
     - [D>=F+2,F>=0,C=5]

  * Ranking function: nat(D/2)

  * Invariants fun12(A,B) -> fun12(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [B>=D+2,D>=0,A=5]
     inv    : [B>=D,D>=0]

CRS fun16(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun16(B) -> fun16(C)

  * Ranking function: N/A

  * Invariants fun16(A) -> fun16(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun15(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun15(B) -> fun15(C)

  * Ranking function: N/A

  * Invariants fun15(A) -> fun15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun13(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun13(B) -> fun13(C)

  * Ranking function: N/A

  * Invariants fun13(A) -> fun13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun11(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun11(B) -> fun11(C)

  * Ranking function: N/A

  * Invariants fun11(A) -> fun11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun10(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun10(B) -> fun10(C)

  * Ranking function: N/A

  * Invariants fun10(A) -> fun10(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun1(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun1(B) -> fun1(C)

  * Ranking function: N/A

  * Invariants fun1(A) -> fun1(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


