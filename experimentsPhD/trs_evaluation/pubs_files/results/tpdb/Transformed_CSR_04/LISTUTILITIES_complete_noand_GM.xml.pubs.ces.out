This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,c(failed(cover_point,[scc=26,cr=mark/1])),c(failed(cover_point,[scc=26,cr=fun125/2])),c(failed(cover_point,[scc=26,cr=fun124/1])),c(failed(cover_point,[scc=26,cr=fun20/2])),c(failed(cover_point,[scc=26,cr=fun19/1])),c(failed(cover_point,[scc=26,cr=fun123/2])),c(failed(cover_point,[scc=26,cr=fun122/1])),c(failed(cover_point,[scc=12,cr=fun110/1])),c(failed(cover_point,[scc=25,cr=fun112/1])),c(failed(cover_point,[scc=12,cr=fun2/1])),c(failed(cover_point,[scc=25,cr=fun7/1])),c(failed(cover_point,[scc=12,cr=fun4/1])),c(failed(cover_point,[scc=25,cr=fun9/1])),c(failed(cover_point,[scc=26,cr=fun68/1])),c(failed(cover_point,[scc=26,cr=fun95/1])),c(failed(cover_point,[scc=26,cr=fun69/2])),c(failed(cover_point,[scc=25,cr=fun120/2])),c(failed(cover_point,[scc=25,cr=fun119/2])),c(failed(cover_point,[scc=25,cr=fun117/2])),c(failed(cover_point,[scc=25,cr=fun116/2])),c(failed(cover_point,[scc=25,cr=fun114/2])),c(failed(cover_point,[scc=25,cr=fun113/2])),c(failed(cover_point,[scc=25,cr=fun109/2])),c(failed(cover_point,[scc=25,cr=fun108/2])),c(failed(cover_point,[scc=25,cr=fun106/2])),c(failed(cover_point,[scc=25,cr=fun105/3])),c(failed(cover_point,[scc=25,cr=fun104/3])),c(failed(cover_point,[scc=25,cr=fun103/3])),c(failed(cover_point,[scc=25,cr=fun102/3])),c(failed(cover_point,[scc=25,cr=fun100/2])),c(failed(cover_point,[scc=25,cr=fun99/3])),c(failed(cover_point,[scc=25,cr=fun98/3])),c(failed(cover_point,[scc=25,cr=fun97/3])),c(failed(cover_point,[scc=25,cr=fun96/3])),c(failed(cover_point,[scc=26,cr=fun94/3])),c(failed(cover_point,[scc=26,cr=fun93/3])),c(failed(cover_point,[scc=26,cr=fun92/3])),c(failed(cover_point,[scc=26,cr=fun91/3])),c(failed(cover_point,[scc=26,cr=fun86/2])),c(failed(cover_point,[scc=26,cr=fun90/2])),c(failed(cover_point,[scc=26,cr=fun89/2])),c(failed(cover_point,[scc=26,cr=fun88/2])),c(failed(cover_point,[scc=26,cr=fun87/3])),c(failed(cover_point,[scc=26,cr=fun78/3])),c(failed(cover_point,[scc=26,cr=fun85/2])),c(failed(cover_point,[scc=26,cr=fun84/4])),c(failed(cover_point,[scc=26,cr=fun83/4])),c(failed(cover_point,[scc=26,cr=fun82/4])),c(failed(cover_point,[scc=26,cr=fun81/4])),c(failed(cover_point,[scc=26,cr=fun80/4])),c(failed(cover_point,[scc=26,cr=fun79/4])),c(failed(cover_point,[scc=26,cr=fun75/3])),c(failed(cover_point,[scc=26,cr=fun77/2])),c(failed(cover_point,[scc=26,cr=fun76/2])),c(failed(cover_point,[scc=26,cr=fun74/3])),c(failed(cover_point,[scc=26,cr=fun73/2])),c(failed(cover_point,[scc=26,cr=fun72/2])),c(failed(cover_point,[scc=26,cr=fun71/2])),c(failed(cover_point,[scc=26,cr=fun70/3])),c(failed(cover_point,[scc=26,cr=fun67/3])),c(failed(cover_point,[scc=26,cr=fun66/3])),c(failed(cover_point,[scc=26,cr=fun65/3])),c(failed(cover_point,[scc=26,cr=fun64/3])),c(failed(cover_point,[scc=26,cr=fun63/2])),c(failed(cover_point,[scc=26,cr=fun62/2])),c(failed(cover_point,[scc=12,cr=fun60/2])),c(failed(cover_point,[scc=12,cr=fun58/2])),c(failed(cover_point,[scc=25,cr=fun56/2])),c(failed(cover_point,[scc=25,cr=fun55/3])),c(failed(cover_point,[scc=25,cr=fun54/3])),c(failed(cover_point,[scc=25,cr=fun53/3])),c(failed(cover_point,[scc=25,cr=fun52/3])),c(failed(cover_point,[scc=25,cr=fun50/2])),c(failed(cover_point,[scc=25,cr=fun49/3])),c(failed(cover_point,[scc=25,cr=fun48/3])),c(failed(cover_point,[scc=25,cr=fun47/3])),c(failed(cover_point,[scc=25,cr=fun46/3])),c(failed(cover_point,[scc=26,cr=fun43/2])),c(failed(cover_point,[scc=12,cr=fun44/2])),c(failed(cover_point,[scc=26,cr=fun41/3])),c(failed(cover_point,[scc=26,cr=fun39/3])),c(failed(cover_point,[scc=26,cr=fun38/3])),c(failed(cover_point,[scc=25,cr=fun36/2])),c(failed(cover_point,[scc=25,cr=fun35/3])),c(failed(cover_point,[scc=25,cr=fun34/3])),c(failed(cover_point,[scc=25,cr=fun33/3])),c(failed(cover_point,[scc=25,cr=fun32/3])),c(failed(cover_point,[scc=25,cr=fun30/2])),c(failed(cover_point,[scc=25,cr=fun29/2])),c(failed(cover_point,[scc=25,cr=fun27/2])),c(failed(cover_point,[scc=25,cr=fun26/2])),c(failed(cover_point,[scc=12,cr=fun24/2])),c(failed(cover_point,[scc=26,cr=fun17/3])),c(failed(cover_point,[scc=26,cr=fun14/3])),c(failed(cover_point,[scc=12,cr=fun15/2])),c(failed(cover_point,[scc=26,cr=fun11/3])),c(failed(cover_point,[scc=12,cr=fun12/2])),c(failed(cover_point,[scc=26,cr=fun10/3])),c(failed(cover_point,[scc=25,cr=fun6/2])),c(failed(cover_point,[scc=25,cr=fun5/3])),c(failed(cover_point,[scc=25,cr=fun3/3])),c(failed(cover_point,[scc=25,cr=fun1/3])),c(failed(cover_point,[scc=25,cr=fun/3]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([1,c(failed(cover_point,[scc=26,cr=mark/1])),c(failed(cover_point,[scc=26,cr=fun125/2])),c(failed(cover_point,[scc=26,cr=fun124/1])),c(failed(cover_point,[scc=26,cr=fun20/2])),c(failed(cover_point,[scc=26,cr=fun19/1])),c(failed(cover_point,[scc=26,cr=fun123/2])),c(failed(cover_point,[scc=26,cr=fun122/1])),c(failed(cover_point,[scc=12,cr=fun110/1])),c(failed(cover_point,[scc=25,cr=fun112/1])),c(failed(cover_point,[scc=12,cr=fun2/1])),c(failed(cover_point,[scc=25,cr=fun7/1])),c(failed(cover_point,[scc=12,cr=fun4/1])),c(failed(cover_point,[scc=25,cr=fun9/1])),c(failed(cover_point,[scc=26,cr=fun68/1])),c(failed(cover_point,[scc=26,cr=fun95/1])),c(failed(cover_point,[scc=26,cr=fun69/2])),c(failed(cover_point,[scc=25,cr=fun120/2])),c(failed(cover_point,[scc=25,cr=fun119/2])),c(failed(cover_point,[scc=25,cr=fun117/2])),c(failed(cover_point,[scc=25,cr=fun116/2])),c(failed(cover_point,[scc=25,cr=fun114/2])),c(failed(cover_point,[scc=25,cr=fun113/2])),c(failed(cover_point,[scc=25,cr=fun109/2])),c(failed(cover_point,[scc=25,cr=fun108/2])),c(failed(cover_point,[scc=25,cr=fun106/2])),c(failed(cover_point,[scc=25,cr=fun105/3])),c(failed(cover_point,[scc=25,cr=fun104/3])),c(failed(cover_point,[scc=25,cr=fun103/3])),c(failed(cover_point,[scc=25,cr=fun102/3])),c(failed(cover_point,[scc=25,cr=fun100/2])),c(failed(cover_point,[scc=25,cr=fun99/3])),c(failed(cover_point,[scc=25,cr=fun98/3])),c(failed(cover_point,[scc=25,cr=fun97/3])),c(failed(cover_point,[scc=25,cr=fun96/3])),c(failed(cover_point,[scc=26,cr=fun94/3])),c(failed(cover_point,[scc=26,cr=fun93/3])),c(failed(cover_point,[scc=26,cr=fun92/3])),c(failed(cover_point,[scc=26,cr=fun91/3])),c(failed(cover_point,[scc=26,cr=fun86/2])),c(failed(cover_point,[scc=26,cr=fun90/2])),c(failed(cover_point,[scc=26,cr=fun89/2])),c(failed(cover_point,[scc=26,cr=fun88/2])),c(failed(cover_point,[scc=26,cr=fun87/3])),c(failed(cover_point,[scc=26,cr=fun78/3])),c(failed(cover_point,[scc=26,cr=fun85/2])),c(failed(cover_point,[scc=26,cr=fun84/4])),c(failed(cover_point,[scc=26,cr=fun83/4])),c(failed(cover_point,[scc=26,cr=fun82/4])),c(failed(cover_point,[scc=26,cr=fun81/4])),c(failed(cover_point,[scc=26,cr=fun80/4])),c(failed(cover_point,[scc=26,cr=fun79/4])),c(failed(cover_point,[scc=26,cr=fun75/3])),c(failed(cover_point,[scc=26,cr=fun77/2])),c(failed(cover_point,[scc=26,cr=fun76/2])),c(failed(cover_point,[scc=26,cr=fun74/3])),c(failed(cover_point,[scc=26,cr=fun73/2])),c(failed(cover_point,[scc=26,cr=fun72/2])),c(failed(cover_point,[scc=26,cr=fun71/2])),c(failed(cover_point,[scc=26,cr=fun70/3])),c(failed(cover_point,[scc=26,cr=fun67/3])),c(failed(cover_point,[scc=26,cr=fun66/3])),c(failed(cover_point,[scc=26,cr=fun65/3])),c(failed(cover_point,[scc=26,cr=fun64/3])),c(failed(cover_point,[scc=26,cr=fun63/2])),c(failed(cover_point,[scc=26,cr=fun62/2])),c(failed(cover_point,[scc=12,cr=fun60/2])),c(failed(cover_point,[scc=12,cr=fun58/2])),c(failed(cover_point,[scc=25,cr=fun56/2])),c(failed(cover_point,[scc=25,cr=fun55/3])),c(failed(cover_point,[scc=25,cr=fun54/3])),c(failed(cover_point,[scc=25,cr=fun53/3])),c(failed(cover_point,[scc=25,cr=fun52/3])),c(failed(cover_point,[scc=25,cr=fun50/2])),c(failed(cover_point,[scc=25,cr=fun49/3])),c(failed(cover_point,[scc=25,cr=fun48/3])),c(failed(cover_point,[scc=25,cr=fun47/3])),c(failed(cover_point,[scc=25,cr=fun46/3])),c(failed(cover_point,[scc=26,cr=fun43/2])),c(failed(cover_point,[scc=12,cr=fun44/2])),c(failed(cover_point,[scc=26,cr=fun41/3])),c(failed(cover_point,[scc=26,cr=fun39/3])),c(failed(cover_point,[scc=26,cr=fun38/3])),c(failed(cover_point,[scc=25,cr=fun36/2])),c(failed(cover_point,[scc=25,cr=fun35/3])),c(failed(cover_point,[scc=25,cr=fun34/3])),c(failed(cover_point,[scc=25,cr=fun33/3])),c(failed(cover_point,[scc=25,cr=fun32/3])),c(failed(cover_point,[scc=25,cr=fun30/2])),c(failed(cover_point,[scc=25,cr=fun29/2])),c(failed(cover_point,[scc=25,cr=fun27/2])),c(failed(cover_point,[scc=25,cr=fun26/2])),c(failed(cover_point,[scc=12,cr=fun24/2])),c(failed(cover_point,[scc=26,cr=fun17/3])),c(failed(cover_point,[scc=26,cr=fun14/3])),c(failed(cover_point,[scc=12,cr=fun15/2])),c(failed(cover_point,[scc=26,cr=fun11/3])),c(failed(cover_point,[scc=12,cr=fun12/2])),c(failed(cover_point,[scc=26,cr=fun10/3])),c(failed(cover_point,[scc=25,cr=fun6/2])),c(failed(cover_point,[scc=25,cr=fun5/3])),c(failed(cover_point,[scc=25,cr=fun3/3])),c(failed(cover_point,[scc=25,cr=fun1/3])),c(failed(cover_point,[scc=25,cr=fun/3]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun101(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun101(B) -> fun101(C)

  * Ranking function: N/A

  * Invariants fun101(A) -> fun101(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun121(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun121(B) -> fun121(C)

  * Ranking function: N/A

  * Invariants fun121(A) -> fun121(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun118(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun118(B) -> fun118(C)

  * Ranking function: N/A

  * Invariants fun118(A) -> fun118(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun115(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun115(B) -> fun115(C)

  * Ranking function: N/A

  * Invariants fun115(A) -> fun115(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun57(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun57(B) -> fun57(C)

  * Ranking function: N/A

  * Invariants fun57(A) -> fun57(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun51(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun51(B) -> fun51(C)

  * Ranking function: N/A

  * Invariants fun51(A) -> fun51(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun111(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun111(B) -> fun111(C)

  * Ranking function: N/A

  * Invariants fun111(A) -> fun111(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun37(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun37(B) -> fun37(C)

  * Ranking function: N/A

  * Invariants fun37(A) -> fun37(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun31(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun31(B) -> fun31(C)

  * Ranking function: N/A

  * Invariants fun31(A) -> fun31(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun28(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun28(B) -> fun28(C)

  * Ranking function: N/A

  * Invariants fun28(A) -> fun28(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun107(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun107(B) -> fun107(C)

  * Ranking function: N/A

  * Invariants fun107(A) -> fun107(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun8(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun8(B) -> fun8(C)

  * Ranking function: N/A

  * Invariants fun8(A) -> fun8(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun25(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun25(B) -> fun25(C)

  * Ranking function: N/A

  * Invariants fun25(A) -> fun25(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun23(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun23(B) -> fun23(C)

  * Ranking function: N/A

  * Invariants fun23(A) -> fun23(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun22(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun22(B) -> fun22(C)

  * Ranking function: N/A

  * Invariants fun22(A) -> fun22(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun21(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun21(B) -> fun21(C)

  * Ranking function: N/A

  * Invariants fun21(A) -> fun21(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun18(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun18(B) -> fun18(C)

  * Ranking function: N/A

  * Invariants fun18(A) -> fun18(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun16(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun16(B) -> fun16(C)

  * Ranking function: N/A

  * Invariants fun16(A) -> fun16(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun13(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun13(B) -> fun13(C)

  * Ranking function: N/A

  * Invariants fun13(A) -> fun13(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun61(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun61(B) -> fun61(C)

  * Ranking function: N/A

  * Invariants fun61(A) -> fun61(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun59(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun59(B) -> fun59(C)

  * Ranking function: N/A

  * Invariants fun59(A) -> fun59(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun45(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun45(B) -> fun45(C)

  * Ranking function: N/A

  * Invariants fun45(A) -> fun45(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun42(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun42(B) -> fun42(C)

  * Ranking function: N/A

  * Invariants fun42(A) -> fun42(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun40(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun40(B) -> fun40(C)

  * Ranking function: N/A

  * Invariants fun40(A) -> fun40(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


