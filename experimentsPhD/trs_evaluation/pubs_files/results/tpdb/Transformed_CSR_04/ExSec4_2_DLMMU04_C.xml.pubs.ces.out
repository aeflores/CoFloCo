This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,nat(A),nat(A)+nat(D),nat(A),nat(A),nat(A),2*nat(A)+nat(B),2*nat(A)+nat(B),2*nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),2*nat(A)+nat(B),2*nat(A)+nat(B),c(failed(schemes_failed,[scc=13,cr=top/1]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([1,nat(A),nat(A)+nat(D),nat(A),nat(A),nat(A),2*nat(A)+nat(B),2*nat(A)+nat(B),2*nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),2*nat(A)+nat(B),2*nat(A)+nat(B),c(failed(schemes_failed,[scc=13,cr=top/1]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS u(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(A)+nat(D) 

  * LOOPS u(E,F,G,H) -> u(I,J,K,L)
     - [H=L,E=I+1,F=J,G=K,I>=0,F>=0,G>=0,H>=0]
     - [H=L+1,E=I+1,F=J+1,G=K+1,E>=1,F>=1,G>=1,H>=1]

  * Ranking function: nat(E)

  * Invariants u(A,B,C,D) -> u(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [B+H=D+F,B+G=C+F,D+F>=B,C+F>=B,F>=0,E>=0,A+F>=B+E,B>=F,A>=E+1]
     inv    : [D>=H,A+H>=D+E,E>=0,B+H>=D,C+H>=D,H>=0,C+H=D+G,B+H=D+F]

CRS top(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=13,cr=top/1])) 

  * LOOPS top(B) -> top(C)
     - [B=C,B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=13,cr=top/1]))

  * Invariants top(A) -> top(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1]
     inv    : [A>=0]

CRS take(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS take(C,D) -> take(E,F)
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F+1,C=E,E>=0,F>=0]

  * Ranking function: nat(C+D)

  * Invariants take(A,B) -> take(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS tail(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS tail(B) -> tail(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants tail(A) -> tail(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS splitAt(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS splitAt(C,D) -> splitAt(E,F)
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(C+D)

  * Invariants splitAt(A,B) -> splitAt(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS snd(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS snd(B) -> snd(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants snd(A) -> snd(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS sel(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS sel(C,D) -> sel(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C+D)

  * Invariants sel(A,B) -> sel(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS s(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS s(B) -> s(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants s(A) -> s(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS proper(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS proper(B) -> proper(C)

  * Ranking function: N/A

  * Invariants proper(A) -> proper(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS pair(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS pair(C,D) -> pair(E,F)
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(C+D)

  * Invariants pair(A,B) -> pair(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS natsFrom(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS natsFrom(B) -> natsFrom(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants natsFrom(A) -> natsFrom(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS head(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS head(B) -> head(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants head(A) -> head(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fst(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fst(B) -> fst(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fst(A) -> fst(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS cons(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS cons(C,D) -> cons(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants cons(A,B) -> cons(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS afterNth(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS afterNth(C,D) -> afterNth(E,F)
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(C+D)

  * Invariants afterNth(A,B) -> afterNth(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]


