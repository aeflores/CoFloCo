This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=3,cr=activate/1])),c(failed(cover_point,[scc=3,cr=isNatKind/1])),c(failed(schemes_failed,[scc=6,cr=isNat/1])),c(failed(cover_point,[scc=3,cr=and/2])),3+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(cover_point,[scc=3,cr=activate/1])),1+c(failed(cover_point,[scc=3,cr=activate/1])),2+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1])),2+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1])),1+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))+c(failed(cover_point,[scc=3,cr=activate/1])),3+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=3,cr=activate/1])),c(failed(cover_point,[scc=3,cr=isNatKind/1])),c(failed(schemes_failed,[scc=6,cr=isNat/1])),c(failed(cover_point,[scc=3,cr=and/2])),3+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(cover_point,[scc=3,cr=activate/1])),1+c(failed(cover_point,[scc=3,cr=activate/1])),2+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1])),2+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1])),1+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))+c(failed(cover_point,[scc=3,cr=activate/1])),3+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(cover_point,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=6,cr=isNat/1]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun6(A,B,C)

  * Non Asymptotic Upper Bound: 3+2*c(failed(cover_point,[scc=3,cr=activate/1])) 

  * LOOPS fun6(D,E,F) -> fun6(G,H,I)

  * Ranking function: N/A

  * Invariants fun6(A,B,C) -> fun6(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun5(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=3,cr=activate/1])) 

  * LOOPS fun5(C,D) -> fun5(E,F)

  * Ranking function: N/A

  * Invariants fun5(A,B) -> fun5(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS isNat(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=isNat/1])) 

  * LOOPS isNat(B) -> isNat(C)
     - [B>=1]
     - [B>=1]
     - [B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=6,cr=isNat/1]))

  * Invariants isNat(A) -> isNat(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=1]
     inv    : []

CRS fun4(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun4(B) -> fun4(C)

  * Ranking function: N/A

  * Invariants fun4(A) -> fun4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun2(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun2(B) -> fun2(C)

  * Ranking function: N/A

  * Invariants fun2(A) -> fun2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS plus(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS plus(C,D) -> plus(E,F)

  * Ranking function: N/A

  * Invariants plus(A,B) -> plus(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun7

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun7 -> fun7

  * Ranking function: N/A

  * Invariants fun7 -> fun7

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


