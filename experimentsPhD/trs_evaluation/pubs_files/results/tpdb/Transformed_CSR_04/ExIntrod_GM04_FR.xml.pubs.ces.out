This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3,c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1])),2+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),2+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))]) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS start(A)

  * Non Asymptotic Upper Bound: max([3,c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1])),2+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),2+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),1+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))]) 

  * LOOPS start(B) -> start(C)

  * Ranking function: N/A

  * Invariants start(A) -> start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS tl(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=activate/1])) 

  * LOOPS tl(B) -> tl(C)

  * Ranking function: N/A

  * Invariants tl(A) -> tl(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS nats

  * Non Asymptotic Upper Bound: max([3,4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1])),4+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))+c(failed(schemes_failed,[scc=3,cr=activate/1]))]) 

  * LOOPS nats -> nats

  * Ranking function: N/A

  * Invariants nats -> nats

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS hd(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=activate/1])) 

  * LOOPS hd(B) -> hd(C)

  * Ranking function: N/A

  * Invariants hd(A) -> hd(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS activate(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=activate/1])) 

  * LOOPS activate(B) -> activate(C)
     - [C>=0,B=C+1]
     - [C>=0,B>=1]
     - [C>=0,B>=1]
     - [B=C+1,C>=0]
     - [C>=0,B=C+1]
     - [C>=0,B>=1]
     - [C>=0,B>=1]
     - [C>=0,B>=1]
     - [C>=0,B>=1]
     - [C>=0,B=C+1]
     - [C>=0,B>=1]
     - [C>=0,B>=1]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=3,cr=activate/1]))

  * Invariants activate(A) -> activate(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=1]
     inv    : [A>=0,B>=0]

CRS zeros

  * Non Asymptotic Upper Bound: 1 

  * LOOPS zeros -> zeros

  * Ranking function: N/A

  * Invariants zeros -> zeros

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


