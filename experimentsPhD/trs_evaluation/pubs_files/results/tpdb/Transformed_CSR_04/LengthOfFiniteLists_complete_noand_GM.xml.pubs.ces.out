This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=14,cr=mark/1])),c(failed(cover_point,[scc=14,cr=fun35/1])),c(failed(cover_point,[scc=8,cr=fun5/1])),c(failed(cover_point,[scc=5,cr=fun8/1])),c(failed(cover_point,[scc=5,cr=fun3/1])),37+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(A-1)+nat(A-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(A-1)+2*nat(A-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(A-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),1+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),c(failed(cover_point,[scc=8,cr=fun10/1])),c(failed(cover_point,[scc=14,cr=fun34/2])),c(failed(cover_point,[scc=14,cr=fun33/3])),c(failed(cover_point,[scc=14,cr=fun32/3])),c(failed(cover_point,[scc=14,cr=fun31/3])),c(failed(cover_point,[scc=8,cr=fun29/2])),c(failed(cover_point,[scc=8,cr=fun28/3])),c(failed(cover_point,[scc=8,cr=fun27/3])),c(failed(cover_point,[scc=8,cr=fun26/3])),c(failed(cover_point,[scc=8,cr=fun25/3])),c(failed(cover_point,[scc=5,cr=fun21/2])),39+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(B-1)+nat(B-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(B-1)+2*nat(B-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(B-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=8,cr=fun10/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1])),40+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=5,cr=fun3/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),41+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=5,cr=fun3/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1])),4+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),42+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),36+6*nat(B+C)+nat(B+C)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(B+C)+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),2+c(failed(cover_point,[scc=8,cr=fun5/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1])),c(failed(cover_point,[scc=8,cr=fun7/2])),c(failed(cover_point,[scc=8,cr=fun6/2])),c(failed(cover_point,[scc=8,cr=fun2/2])),c(failed(cover_point,[scc=8,cr=fun1/2]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=14,cr=mark/1])),c(failed(cover_point,[scc=14,cr=fun35/1])),c(failed(cover_point,[scc=8,cr=fun5/1])),c(failed(cover_point,[scc=5,cr=fun8/1])),c(failed(cover_point,[scc=5,cr=fun3/1])),37+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(A-1)+nat(A-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(A-1)+2*nat(A-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(A-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),1+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),c(failed(cover_point,[scc=8,cr=fun10/1])),c(failed(cover_point,[scc=14,cr=fun34/2])),c(failed(cover_point,[scc=14,cr=fun33/3])),c(failed(cover_point,[scc=14,cr=fun32/3])),c(failed(cover_point,[scc=14,cr=fun31/3])),c(failed(cover_point,[scc=8,cr=fun29/2])),c(failed(cover_point,[scc=8,cr=fun28/3])),c(failed(cover_point,[scc=8,cr=fun27/3])),c(failed(cover_point,[scc=8,cr=fun26/3])),c(failed(cover_point,[scc=8,cr=fun25/3])),c(failed(cover_point,[scc=5,cr=fun21/2])),39+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(B-1)+nat(B-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(B-1)+2*nat(B-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(B-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=8,cr=fun10/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1])),40+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1])),4+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=5,cr=fun3/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),41+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),5+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),2+c(failed(cover_point,[scc=5,cr=fun3/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1])),4+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),42+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun8/1]))+6*nat(C-1)+nat(C-1)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(C-1)+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(C-1)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1])),6+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun10/1]))+c(failed(cover_point,[scc=5,cr=fun3/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]),36+6*nat(B+C)+nat(B+C)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(B+C)+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])),2+c(failed(cover_point,[scc=8,cr=fun5/1])),3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1])),c(failed(cover_point,[scc=8,cr=fun7/2])),c(failed(cover_point,[scc=8,cr=fun6/2])),c(failed(cover_point,[scc=8,cr=fun2/2])),c(failed(cover_point,[scc=8,cr=fun1/2]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun14(A,B,C)

  * Non Asymptotic Upper Bound: 36+6*nat(B+C)+nat(B+C)*c(failed(cover_point,[scc=8,cr=fun10/1]))+nat(B+C)+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun3/1]))+2*nat(B+C)*c(failed(cover_point,[scc=5,cr=fun8/1]))+4*c(failed(cover_point,[scc=8,cr=fun10/1]))+max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))])+12*c(failed(cover_point,[scc=5,cr=fun3/1]))+7*c(failed(cover_point,[scc=5,cr=fun8/1])) 

  * LOOPS fun14(D,E,F) -> fun14(G,H,I)
     - [F>=H+1,H>=0,E>=0,D=2,F=H+I+1]

  * Ranking function: nat(F)

  * Invariants fun14(A,B,C) -> fun14(D,E,F)

     entry  : [B>=0,C>=0]
     non-rec: [A=D,B=E,C=F,B>=0,C>=0]
     rec    : [C>=E+F+1,B>=0,E>=0,F>=0,A=2]
     inv    : [C>=F,B+C>=E+F,E>=0,B>=0,F>=0]

CRS fun19(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun19(B) -> fun19(C)

  * Ranking function: N/A

  * Invariants fun19(A) -> fun19(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun11(A,B)

  * Non Asymptotic Upper Bound: max([1,3+c(failed(cover_point,[scc=5,cr=fun3/1]))+c(failed(cover_point,[scc=8,cr=fun5/1]))]) 

  * LOOPS fun11(C,D) -> fun11(E,F)

  * Ranking function: N/A

  * Invariants fun11(A,B) -> fun11(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [0=1]
     inv    : [B>=0,A=C,B=D]

CRS fun12(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=8,cr=fun5/1])) 

  * LOOPS fun12(C,D) -> fun12(E,F)

  * Ranking function: N/A

  * Invariants fun12(A,B) -> fun12(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [0=1]
     inv    : [B>=0,A=C,B=D]

CRS fun13(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun13(B) -> fun13(C)

  * Ranking function: N/A

  * Invariants fun13(A) -> fun13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun30(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun30(B) -> fun30(C)

  * Ranking function: N/A

  * Invariants fun30(A) -> fun30(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun9(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun9(B) -> fun9(C)

  * Ranking function: N/A

  * Invariants fun9(A) -> fun9(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun24(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun24(B) -> fun24(C)

  * Ranking function: N/A

  * Invariants fun24(A) -> fun24(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun23(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun23(B) -> fun23(C)

  * Ranking function: N/A

  * Invariants fun23(A) -> fun23(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun22(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun22(B) -> fun22(C)

  * Ranking function: N/A

  * Invariants fun22(A) -> fun22(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun4(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun4(B) -> fun4(C)

  * Ranking function: N/A

  * Invariants fun4(A) -> fun4(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


