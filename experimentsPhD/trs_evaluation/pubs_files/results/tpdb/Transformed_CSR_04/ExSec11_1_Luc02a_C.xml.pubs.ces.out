This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,nat(A),nat(A),2*nat(A)+nat(B),nat(A),nat(A)+nat(B),nat(A),nat(A),c(failed(schemes_failed,[scc=10,cr=top/1])),2*nat(A)+nat(B),nat(A)]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS start(A,B)

  * Non Asymptotic Upper Bound: max([1,nat(A),nat(A),2*nat(A)+nat(B),nat(A),nat(A)+nat(B),nat(A),nat(A),c(failed(schemes_failed,[scc=10,cr=top/1])),2*nat(A)+nat(B),nat(A)]) 

  * LOOPS start(C,D) -> start(E,F)

  * Ranking function: N/A

  * Invariants start(A,B) -> start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS top(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=10,cr=top/1])) 

  * LOOPS top(B) -> top(C)
     - [B=C,B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=10,cr=top/1]))

  * Invariants top(A) -> top(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1]
     inv    : [A>=0]

CRS terms(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS terms(B) -> terms(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants terms(A) -> terms(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS sqr(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS sqr(B) -> sqr(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants sqr(A) -> sqr(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS s(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS s(B) -> s(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants s(A) -> s(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS recip(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS recip(B) -> recip(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants recip(A) -> recip(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS proper(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS proper(B) -> proper(C)

  * Ranking function: N/A

  * Invariants proper(A) -> proper(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS half(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS half(B) -> half(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants half(A) -> half(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS first(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS first(C,D) -> first(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E,E>=0,F>=0]

  * Ranking function: nat(C+D)

  * Invariants first(A,B) -> first(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS dbl(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS dbl(B) -> dbl(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants dbl(A) -> dbl(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS cons(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS cons(C,D) -> cons(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants cons(A,B) -> cons(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS add(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS add(C,D) -> add(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C+D)

  * Invariants add(A,B) -> add(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]


