This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([5,c(failed(cover_point,[scc=11,cr=fun4/1])),c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=fun8/1])),2+c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=fun2/1])),4+c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=isNeList/0])),c(failed(cover_point,[scc=11,cr=isList/0]))]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS start(A,B)

  * Non Asymptotic Upper Bound: max([5,c(failed(cover_point,[scc=11,cr=fun4/1])),c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=fun8/1])),2+c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=fun2/1])),4+c(failed(schemes_failed,[scc=7,cr=fun11/1])),c(failed(cover_point,[scc=11,cr=isNeList/0])),c(failed(cover_point,[scc=11,cr=isList/0]))]) 

  * LOOPS start(C,D) -> start(E,F)

  * Ranking function: N/A

  * Invariants start(A,B) -> start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun9(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun9(B) -> fun9(C)

  * Ranking function: N/A

  * Invariants fun9(A) -> fun9(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(B) -> fun6(C)

  * Ranking function: N/A

  * Invariants fun6(A) -> fun6(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun12(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun12(C,D) -> fun12(E,F)

  * Ranking function: N/A

  * Invariants fun12(A,B) -> fun12(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun11(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=fun11/1])) 

  * LOOPS fun11(B) -> fun11(C)
     - [B=0]

  * Ranking function: c(failed(no_rf,[scc=7,cr=fun11/1]))

  * Invariants fun11(A) -> fun11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=0]
     inv    : []

CRS isQid

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isQid -> isQid

  * Ranking function: N/A

  * Invariants isQid -> isQid

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS fun7(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun7(B) -> fun7(C)

  * Ranking function: N/A

  * Invariants fun7(A) -> fun7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun5(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun5(B) -> fun5(C)

  * Ranking function: N/A

  * Invariants fun5(A) -> fun5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun10(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun10(B) -> fun10(C)

  * Ranking function: N/A

  * Invariants fun10(A) -> fun10(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun1(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun1(B) -> fun1(C)

  * Ranking function: N/A

  * Invariants fun1(A) -> fun1(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun(B) -> fun(C)

  * Ranking function: N/A

  * Invariants fun(A) -> fun(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


