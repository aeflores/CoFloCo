This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=15,cr=fun7/3])),c(failed(cover_point,[scc=15,cr=fun11/2])),4+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun16/2])),c(failed(cover_point,[scc=15,cr=isNeList/1])),c(failed(cover_point,[scc=15,cr=fun15/3])),c(failed(cover_point,[scc=15,cr=fun13/2])),3+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun8/3])),c(failed(cover_point,[scc=15,cr=isList/1])),c(failed(cover_point,[scc=7,cr=and/2])),6+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),3+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun/2])),7+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=7,cr=isPalListKind/1]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=15,cr=fun7/3])),c(failed(cover_point,[scc=15,cr=fun11/2])),4+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun16/2])),c(failed(cover_point,[scc=15,cr=isNeList/1])),c(failed(cover_point,[scc=15,cr=fun15/3])),c(failed(cover_point,[scc=15,cr=fun13/2])),3+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun8/3])),c(failed(cover_point,[scc=15,cr=isList/1])),c(failed(cover_point,[scc=7,cr=and/2])),6+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),3+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=15,cr=fun/2])),7+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=7,cr=activate/1])),c(failed(cover_point,[scc=7,cr=isPalListKind/1]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS isPal(A)

  * Non Asymptotic Upper Bound: max([1,7+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))+c(failed(cover_point,[scc=7,cr=activate/1]))]) 

  * LOOPS isPal(B) -> isPal(C)

  * Ranking function: N/A

  * Invariants isPal(A) -> isPal(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun5(A,B)

  * Non Asymptotic Upper Bound: 6+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+4*c(failed(cover_point,[scc=7,cr=activate/1])) 

  * LOOPS fun5(C,D) -> fun5(E,F)

  * Ranking function: N/A

  * Invariants fun5(A,B) -> fun5(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS isNePal(A)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=7,cr=isPalListKind/1]))+3*c(failed(cover_point,[scc=7,cr=activate/1])) 

  * LOOPS isNePal(B) -> isNePal(C)

  * Ranking function: N/A

  * Invariants isNePal(A) -> isNePal(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(B) -> fun6(C)

  * Ranking function: N/A

  * Invariants fun6(A) -> fun6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun3(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=7,cr=activate/1])) 

  * LOOPS fun3(C,D) -> fun3(E,F)

  * Ranking function: N/A

  * Invariants fun3(A,B) -> fun3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun4(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun4(B) -> fun4(C)

  * Ranking function: N/A

  * Invariants fun4(A) -> fun4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun14(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun14(B) -> fun14(C)

  * Ranking function: N/A

  * Invariants fun14(A) -> fun14(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun9(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=7,cr=activate/1])) 

  * LOOPS fun9(C,D) -> fun9(E,F)

  * Ranking function: N/A

  * Invariants fun9(A,B) -> fun9(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS isQid(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isQid(B) -> isQid(C)

  * Ranking function: N/A

  * Invariants isQid(A) -> isQid(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun10(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun10(B) -> fun10(C)

  * Ranking function: N/A

  * Invariants fun10(A) -> fun10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun17(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun17(B) -> fun17(C)

  * Ranking function: N/A

  * Invariants fun17(A) -> fun17(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun12(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun12(B) -> fun12(C)

  * Ranking function: N/A

  * Invariants fun12(A) -> fun12(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun1(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun1(B) -> fun1(C)

  * Ranking function: N/A

  * Invariants fun1(A) -> fun1(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS u

  * Non Asymptotic Upper Bound: 1 

  * LOOPS u -> u

  * Ranking function: N/A

  * Invariants u -> u

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS o

  * Non Asymptotic Upper Bound: 1 

  * LOOPS o -> o

  * Ranking function: N/A

  * Invariants o -> o

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS i

  * Non Asymptotic Upper Bound: 1 

  * LOOPS i -> i

  * Ranking function: N/A

  * Invariants i -> i

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS fun2(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun2(C,D) -> fun2(E,F)

  * Ranking function: N/A

  * Invariants fun2(A,B) -> fun2(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS e

  * Non Asymptotic Upper Bound: 1 

  * LOOPS e -> e

  * Ranking function: N/A

  * Invariants e -> e

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS a

  * Non Asymptotic Upper Bound: 1 

  * LOOPS a -> a

  * Ranking function: N/A

  * Invariants a -> a

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


