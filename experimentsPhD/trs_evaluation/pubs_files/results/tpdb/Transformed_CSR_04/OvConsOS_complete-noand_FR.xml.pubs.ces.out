This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3,2*nat(A)+31/3*nat(A+1)+nat(1*A+1)*3/3,c(failed(cover_point,[scc=19,cr=isNatList/1])),c(failed(cover_point,[scc=16,cr=isNatKind/1])),c(failed(cover_point,[scc=16,cr=isNatIListKind/1])),c(failed(cover_point,[scc=19,cr=isNatIList/1])),c(failed(cover_point,[scc=19,cr=isNat/1])),c(failed(cover_point,[scc=19,cr=fun44/2])),c(failed(cover_point,[scc=19,cr=fun43/3])),c(failed(cover_point,[scc=19,cr=fun42/3])),c(failed(cover_point,[scc=19,cr=fun41/3])),c(failed(cover_point,[scc=19,cr=fun40/3])),c(failed(cover_point,[scc=16,cr=fun36/2])),c(failed(cover_point,[scc=16,cr=fun34/2])),c(failed(cover_point,[scc=19,cr=fun32/2])),c(failed(cover_point,[scc=19,cr=fun31/3])),c(failed(cover_point,[scc=19,cr=fun30/3])),c(failed(cover_point,[scc=19,cr=fun29/3])),c(failed(cover_point,[scc=19,cr=fun28/3])),c(failed(cover_point,[scc=19,cr=fun26/2])),c(failed(cover_point,[scc=19,cr=fun25/2])),c(failed(cover_point,[scc=19,cr=fun23/2])),c(failed(cover_point,[scc=19,cr=fun22/2])),2+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,4+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,6+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,7+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1])),c(failed(cover_point,[scc=19,cr=fun8/2])),3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,4+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,6+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,c(failed(cover_point,[scc=19,cr=fun7/2])),c(failed(cover_point,[scc=19,cr=fun5/2])),c(failed(cover_point,[scc=19,cr=fun4/3])),c(failed(cover_point,[scc=19,cr=fun3/3])),c(failed(cover_point,[scc=19,cr=fun2/3])),c(failed(cover_point,[scc=19,cr=fun1/3]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([3,2*nat(A)+31/3*nat(A+1)+nat(1*A+1)*3/3,c(failed(cover_point,[scc=19,cr=isNatList/1])),c(failed(cover_point,[scc=16,cr=isNatKind/1])),c(failed(cover_point,[scc=16,cr=isNatIListKind/1])),c(failed(cover_point,[scc=19,cr=isNatIList/1])),c(failed(cover_point,[scc=19,cr=isNat/1])),c(failed(cover_point,[scc=19,cr=fun44/2])),c(failed(cover_point,[scc=19,cr=fun43/3])),c(failed(cover_point,[scc=19,cr=fun42/3])),c(failed(cover_point,[scc=19,cr=fun41/3])),c(failed(cover_point,[scc=19,cr=fun40/3])),c(failed(cover_point,[scc=16,cr=fun36/2])),c(failed(cover_point,[scc=16,cr=fun34/2])),c(failed(cover_point,[scc=19,cr=fun32/2])),c(failed(cover_point,[scc=19,cr=fun31/3])),c(failed(cover_point,[scc=19,cr=fun30/3])),c(failed(cover_point,[scc=19,cr=fun29/3])),c(failed(cover_point,[scc=19,cr=fun28/3])),c(failed(cover_point,[scc=19,cr=fun26/2])),c(failed(cover_point,[scc=19,cr=fun25/2])),c(failed(cover_point,[scc=19,cr=fun23/2])),c(failed(cover_point,[scc=19,cr=fun22/2])),2+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,4+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,6+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,7+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1])),c(failed(cover_point,[scc=19,cr=fun8/2])),3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,4+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,6+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3,c(failed(cover_point,[scc=19,cr=fun7/2])),c(failed(cover_point,[scc=19,cr=fun5/2])),c(failed(cover_point,[scc=19,cr=fun4/3])),c(failed(cover_point,[scc=19,cr=fun3/3])),c(failed(cover_point,[scc=19,cr=fun2/3])),c(failed(cover_point,[scc=19,cr=fun1/3]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun9(A,B,C)

  * Non Asymptotic Upper Bound: 6+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3 

  * LOOPS fun9(D,E,F) -> fun9(G,H,I)

  * Ranking function: N/A

  * Invariants fun9(A,B,C) -> fun9(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun16(A,B,C,D)

  * Non Asymptotic Upper Bound: 7+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*c(failed(cover_point,[scc=19,cr=isNat/1]))+2*c(failed(cover_point,[scc=16,cr=isNatKind/1])) 

  * LOOPS fun16(E,F,G,H) -> fun16(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun16(A,B,C,D) -> fun16(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun17(A,B,C,D)

  * Non Asymptotic Upper Bound: 6+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*c(failed(cover_point,[scc=19,cr=isNat/1]))+2*c(failed(cover_point,[scc=16,cr=isNatKind/1])) 

  * LOOPS fun17(E,F,G,H) -> fun17(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun17(A,B,C,D) -> fun17(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun18(A,B,C,D)

  * Non Asymptotic Upper Bound: 5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*c(failed(cover_point,[scc=16,cr=isNatKind/1])) 

  * LOOPS fun18(E,F,G,H) -> fun18(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun18(A,B,C,D) -> fun18(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun19(A,B,C,D)

  * Non Asymptotic Upper Bound: 4+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3 

  * LOOPS fun19(E,F,G,H) -> fun19(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun19(A,B,C,D) -> fun19(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun20(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3 

  * LOOPS fun20(E,F,G,H) -> fun20(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun20(A,B,C,D) -> fun20(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun21(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3 

  * LOOPS fun21(E,F,G,H) -> fun21(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun21(A,B,C,D) -> fun21(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun14(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatIListKind/1])) 

  * LOOPS fun14(C,D) -> fun14(E,F)

  * Ranking function: N/A

  * Invariants fun14(A,B) -> fun14(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun15(A)

  * Non Asymptotic Upper Bound: 2 

  * LOOPS fun15(B) -> fun15(C)

  * Ranking function: N/A

  * Invariants fun15(A) -> fun15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun10(A,B,C)

  * Non Asymptotic Upper Bound: 5+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=19,cr=isNat/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3 

  * LOOPS fun10(D,E,F) -> fun10(G,H,I)

  * Ranking function: N/A

  * Invariants fun10(A,B,C) -> fun10(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun11(A,B,C)

  * Non Asymptotic Upper Bound: 4+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+c(failed(cover_point,[scc=16,cr=isNatKind/1]))+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(c(maximize_failed))+31/3*nat(c(maximize_failed))+nat(c(maximize_failed))*3/3 

  * LOOPS fun11(D,E,F) -> fun11(G,H,I)

  * Ranking function: N/A

  * Invariants fun11(A,B,C) -> fun11(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun12(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3 

  * LOOPS fun12(C,D) -> fun12(E,F)

  * Ranking function: N/A

  * Invariants fun12(A,B) -> fun12(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun33(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun33(B) -> fun33(C)

  * Ranking function: N/A

  * Invariants fun33(A) -> fun33(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun13(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun13(B) -> fun13(C)

  * Ranking function: N/A

  * Invariants fun13(A) -> fun13(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun37(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun37(B) -> fun37(C)

  * Ranking function: N/A

  * Invariants fun37(A) -> fun37(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun35(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun35(B) -> fun35(C)

  * Ranking function: N/A

  * Invariants fun35(A) -> fun35(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun39(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun39(B) -> fun39(C)

  * Ranking function: N/A

  * Invariants fun39(A) -> fun39(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun38(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun38(B) -> fun38(C)

  * Ranking function: N/A

  * Invariants fun38(A) -> fun38(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun24(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun24(B) -> fun24(C)

  * Ranking function: N/A

  * Invariants fun24(A) -> fun24(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun45(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun45(B) -> fun45(C)

  * Ranking function: N/A

  * Invariants fun45(A) -> fun45(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun27(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun27(B) -> fun27(C)

  * Ranking function: N/A

  * Invariants fun27(A) -> fun27(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(B) -> fun6(C)

  * Ranking function: N/A

  * Invariants fun6(A) -> fun6(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS activate(A)

  * Non Asymptotic Upper Bound: 2*nat(A)+31/3*nat(A+1)+nat(A+1)*3/3 

  * LOOPS activate(B) -> activate(C)
     - [B>=C+1,C>=0]
     - [B>=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants activate(A) -> activate(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS zeros

  * Non Asymptotic Upper Bound: 3 

  * LOOPS zeros -> zeros

  * Ranking function: N/A

  * Invariants zeros -> zeros

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS take(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS take(C,D) -> take(E,F)

  * Ranking function: N/A

  * Invariants take(A,B) -> take(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS length(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS length(B) -> length(C)

  * Ranking function: N/A

  * Invariants length(A) -> length(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS cons(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS cons(C,D) -> cons(E,F)

  * Ranking function: N/A

  * Invariants cons(A,B) -> cons(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]


