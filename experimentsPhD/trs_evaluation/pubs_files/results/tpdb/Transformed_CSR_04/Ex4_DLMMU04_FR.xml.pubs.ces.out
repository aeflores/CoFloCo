This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3,2*nat(A)+31/3*nat(A+1)+nat(1*A+1)*3/3,3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,2+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3,c(failed(cover_point,[scc=9,cr=isNatList/1])),c(failed(cover_point,[scc=9,cr=isNat/1])),c(failed(cover_point,[scc=9,cr=isNatIList/1]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([3,2*nat(A)+31/3*nat(A+1)+nat(1*A+1)*3/3,3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3,2+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3,c(failed(cover_point,[scc=9,cr=isNatList/1])),c(failed(cover_point,[scc=9,cr=isNat/1])),c(failed(cover_point,[scc=9,cr=isNatIList/1]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS uTake2(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+2*nat(C)+31/3*nat(C+1)+nat(1*C+1)*3/3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3+2*nat(D)+31/3*nat(D+1)+nat(1*D+1)*3/3 

  * LOOPS uTake2(E,F,G,H) -> uTake2(I,J,K,L)

  * Ranking function: N/A

  * Invariants uTake2(A,B,C,D) -> uTake2(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS uTake1(A)

  * Non Asymptotic Upper Bound: 2 

  * LOOPS uTake1(B) -> uTake1(C)

  * Ranking function: N/A

  * Invariants uTake1(A) -> uTake1(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS uLength(A,B)

  * Non Asymptotic Upper Bound: 3+2*nat(B)+31/3*nat(B+1)+nat(1*B+1)*3/3 

  * LOOPS uLength(C,D) -> uLength(E,F)

  * Ranking function: N/A

  * Invariants uLength(A,B) -> uLength(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS and(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS and(C,D) -> and(E,F)

  * Ranking function: N/A

  * Invariants and(A,B) -> and(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS activate(A)

  * Non Asymptotic Upper Bound: 2*nat(A)+31/3*nat(A+1)+nat(A+1)*3/3 

  * LOOPS activate(B) -> activate(C)
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B>=C+1,C>=0]
     - [B>=C+1,C>=0]
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants activate(A) -> activate(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS zeros

  * Non Asymptotic Upper Bound: 3 

  * LOOPS zeros -> zeros

  * Ranking function: N/A

  * Invariants zeros -> zeros

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS take(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS take(C,D) -> take(E,F)

  * Ranking function: N/A

  * Invariants take(A,B) -> take(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS length(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS length(B) -> length(C)

  * Ranking function: N/A

  * Invariants length(A) -> length(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS cons(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS cons(C,D) -> cons(E,F)

  * Ranking function: N/A

  * Invariants cons(A,B) -> cons(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]


