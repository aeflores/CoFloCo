This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,nat(B)+nat(C),c(failed(schemes_failed,[scc=3,cr=top/1]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([1,nat(B)+nat(C),c(failed(schemes_failed,[scc=3,cr=top/1]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS top(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=top/1])) 

  * LOOPS top(B) -> top(C)
     - [B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=top/1]))

  * Invariants top(A) -> top(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1]
     inv    : [A>=0]

CRS proper(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS proper(B) -> proper(C)

  * Ranking function: N/A

  * Invariants proper(A) -> proper(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS f(A,B,C)

  * Non Asymptotic Upper Bound: nat(B)+nat(C) 

  * LOOPS f(D,E,F) -> f(G,H,I)
     - [F=I+1,D=G+1,E=H+1,D>=1,E>=1,F>=1]
     - [F=I,D=G,E=H+1,G>=0,H>=0,F>=0]

  * Ranking function: nat(E)

  * Invariants f(A,B,C) -> f(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [A+F=C+D,C+D>=A,E>=0,D>=0,B+D>=A+E,A>=D,B>=E+1]
     inv    : [C>=F,B+F>=C+E,A+F>=C,E>=0,F>=0,A+F=C+D]

CRS active(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS active(B) -> active(C)

  * Ranking function: N/A

  * Invariants active(A) -> active(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


