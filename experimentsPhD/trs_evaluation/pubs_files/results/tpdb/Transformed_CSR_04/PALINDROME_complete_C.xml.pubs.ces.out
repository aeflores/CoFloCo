This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1,nat(A)+nat(C),nat(A),nat(A),nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),nat(A)+nat(C),nat(A)+nat(B),nat(A),nat(A)+nat(B),nat(A),nat(A),nat(A),nat(A),2*nat(A)+nat(B),nat(A)+nat(C),nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),nat(A)+nat(B),nat(A),nat(A),c(failed(schemes_failed,[scc=26,cr=top/1])),nat(A)+nat(B)]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([1,nat(A)+nat(C),nat(A),nat(A),nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),nat(A)+nat(C),nat(A)+nat(B),nat(A),nat(A)+nat(B),nat(A),nat(A),nat(A),nat(A),2*nat(A)+nat(B),nat(A)+nat(C),nat(A)+nat(B),nat(A),nat(A),nat(A)+nat(B),nat(A)+nat(B),nat(A),nat(A),c(failed(schemes_failed,[scc=26,cr=top/1])),nat(A)+nat(B)]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS top(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=26,cr=top/1])) 

  * LOOPS top(B) -> top(C)
     - [B=C,B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=26,cr=top/1]))

  * Invariants top(A) -> top(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=1]
     inv    : [A>=0]

CRS proper(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS proper(B) -> proper(C)

  * Ranking function: N/A

  * Invariants proper(A) -> proper(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS isQid(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isQid(B) -> isQid(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isQid(A) -> isQid(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS isPalListKind(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isPalListKind(B) -> isPalListKind(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isPalListKind(A) -> isPalListKind(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS isPal(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isPal(B) -> isPal(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isPal(A) -> isPal(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS isNePal(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isNePal(B) -> isNePal(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isNePal(A) -> isNePal(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS isNeList(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isNeList(B) -> isNeList(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isNeList(A) -> isNeList(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS isList(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS isList(B) -> isList(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants isList(A) -> isList(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun9(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun9(B) -> fun9(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun9(A) -> fun9(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun8(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun8(B) -> fun8(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun8(A) -> fun8(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun7(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A)+nat(B) 

  * LOOPS fun7(C,D) -> fun7(E,F)
     - [D=F+1,C=E,E>=0,F>=0]
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(C+D)

  * Invariants fun7(A,B) -> fun7(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,B>=D,A>=C,A+B>=C+D+1]
     inv    : [A>=C,B>=D,C>=0,D>=0]

CRS fun6(A,B,C)

  * Non Asymptotic Upper Bound: nat(A)+nat(C) 

  * LOOPS fun6(D,E,F) -> fun6(G,H,I)
     - [F=I,D=G+1,E=H,G>=0,E>=0,F>=0]
     - [F=I+1,D=G+1,E=H+1,D>=1,E>=1,F>=1]

  * Ranking function: nat(D)

  * Invariants fun6(A,B,C) -> fun6(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [B+F=C+E,C+E>=B,E>=0,D>=0,A+E>=B+D,B>=E,A>=D+1]
     inv    : [C>=F,A+F>=C+D,D>=0,B+F>=C,F>=0,B+F=C+E]

CRS fun5(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun5(C,D) -> fun5(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun5(A,B) -> fun5(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun4(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun4(B) -> fun4(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun4(A) -> fun4(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun3(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun3(B) -> fun3(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun3(A) -> fun3(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun2(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun2(C,D) -> fun2(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun2(A,B) -> fun2(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun17(A,B,C)

  * Non Asymptotic Upper Bound: nat(A)+nat(C) 

  * LOOPS fun17(D,E,F) -> fun17(G,H,I)
     - [F=I,D=G+1,E=H,G>=0,E>=0,F>=0]
     - [F=I+1,D=G+1,E=H+1,D>=1,E>=1,F>=1]

  * Ranking function: nat(D)

  * Invariants fun17(A,B,C) -> fun17(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [B+F=C+E,C+E>=B,E>=0,D>=0,A+E>=B+D,B>=E,A>=D+1]
     inv    : [C>=F,A+F>=C+D,D>=0,B+F>=C,F>=0,B+F=C+E]

CRS fun16(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun16(C,D) -> fun16(E,F)
     - [D=F,C=E+1,E>=0,D>=0]
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(C)

  * Invariants fun16(A,B) -> fun16(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun15(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun15(C,D) -> fun15(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun15(A,B) -> fun15(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun14(A,B,C)

  * Non Asymptotic Upper Bound: nat(A)+nat(C) 

  * LOOPS fun14(D,E,F) -> fun14(G,H,I)
     - [F=I+1,D=G+1,E=H+1,D>=1,E>=1,F>=1]
     - [F=I,D=G+1,E=H,G>=0,E>=0,F>=0]

  * Ranking function: nat(D)

  * Invariants fun14(A,B,C) -> fun14(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [B+F=C+E,C+E>=B,E>=0,D>=0,A+E>=B+D,B>=E,A>=D+1]
     inv    : [C>=F,A+F>=C+D,D>=0,B+F>=C,F>=0,B+F=C+E]

CRS fun13(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun13(C,D) -> fun13(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun13(A,B) -> fun13(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun12(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun12(B) -> fun12(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun12(A) -> fun12(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun11(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun11(C,D) -> fun11(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun11(A,B) -> fun11(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS fun10(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun10(B) -> fun10(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun10(A) -> fun10(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun1(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS fun1(B) -> fun1(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants fun1(A) -> fun1(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS fun(C,D) -> fun(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]

CRS and(A,B)

  * Non Asymptotic Upper Bound: nat(A)+nat(B) 

  * LOOPS and(C,D) -> and(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants and(A,B) -> and(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [D>=0,C>=0,A+D>=B+C,B>=D,A>=C+1]
     inv    : [B>=D,A+D>=B+C,C>=0,D>=0]


