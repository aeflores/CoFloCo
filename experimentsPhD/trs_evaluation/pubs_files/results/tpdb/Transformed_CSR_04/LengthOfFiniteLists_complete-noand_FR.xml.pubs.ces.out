This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([9+6*nat(A),c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=13,cr=isNatKind/1])),c(failed(cover_point,[scc=13,cr=isNatIListKind/1])),28+6*nat(A-1)+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(A-1)+6*nat(A-1)+c(failed(schemes_failed,[scc=19,cr=fun10/3])),49+6*nat(A)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(A)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=14,cr=isNat/1])),12+6*nat(B),31+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(B)+6*nat(c(maximize_failed)),59+6*nat(C)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),87+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),c(failed(cover_point,[scc=14,cr=fun24/2])),c(failed(cover_point,[scc=14,cr=fun23/3])),c(failed(cover_point,[scc=14,cr=fun22/3])),c(failed(cover_point,[scc=14,cr=fun21/3])),c(failed(cover_point,[scc=14,cr=fun20/3])),c(failed(cover_point,[scc=13,cr=fun16/2])),39+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),12+6*nat(B),60+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),19+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C),58+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),31+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed)),79+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),28+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C),47+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed)),86+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),59+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),107+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),28+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C),56+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),75+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed)),114+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),87+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),135+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(schemes_failed,[scc=19,cr=fun10/3])),11+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNatList/1])),30+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=14,cr=fun5/2])),c(failed(cover_point,[scc=14,cr=fun4/2])),c(failed(cover_point,[scc=14,cr=fun2/2])),c(failed(cover_point,[scc=14,cr=fun1/2]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([9+6*nat(A),c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=13,cr=isNatKind/1])),c(failed(cover_point,[scc=13,cr=isNatIListKind/1])),28+6*nat(A-1)+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(A-1)+6*nat(A-1)+c(failed(schemes_failed,[scc=19,cr=fun10/3])),49+6*nat(A)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(A)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=14,cr=isNat/1])),12+6*nat(B),31+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(B)+6*nat(c(maximize_failed)),59+6*nat(C)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),87+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),c(failed(cover_point,[scc=14,cr=fun24/2])),c(failed(cover_point,[scc=14,cr=fun23/3])),c(failed(cover_point,[scc=14,cr=fun22/3])),c(failed(cover_point,[scc=14,cr=fun21/3])),c(failed(cover_point,[scc=14,cr=fun20/3])),c(failed(cover_point,[scc=13,cr=fun16/2])),39+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),12+6*nat(B),60+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),19+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C),58+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),31+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed)),79+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(C)+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),28+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C),47+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed)),86+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),59+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),107+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),28+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C),56+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),75+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed)),114+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=19,cr=fun10/3])),87+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)),135+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(schemes_failed,[scc=19,cr=fun10/3])),11+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNatList/1])),30+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])),c(failed(cover_point,[scc=14,cr=fun5/2])),c(failed(cover_point,[scc=14,cr=fun4/2])),c(failed(cover_point,[scc=14,cr=fun2/2])),c(failed(cover_point,[scc=14,cr=fun1/2]))]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun26(A,B,C)

  * Non Asymptotic Upper Bound: 87+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)) 

  * LOOPS fun26(D,E,F) -> fun26(G,H,I)

  * Ranking function: N/A

  * Invariants fun26(A,B,C) -> fun26(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun27(A,B,C)

  * Non Asymptotic Upper Bound: 59+6*nat(C)+c(failed(cover_point,[scc=14,cr=isNat/1]))+6*nat(B)+6*nat(C)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(c(maximize_failed))+6*nat(c(maximize_failed)) 

  * LOOPS fun27(D,E,F) -> fun27(G,H,I)

  * Ranking function: N/A

  * Invariants fun27(A,B,C) -> fun27(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun28(A,B,C)

  * Non Asymptotic Upper Bound: 31+6*nat(C)+c(failed(cover_point,[scc=13,cr=isNatKind/1]))+6*nat(B)+6*nat(c(maximize_failed)) 

  * LOOPS fun28(D,E,F) -> fun28(G,H,I)

  * Ranking function: N/A

  * Invariants fun28(A,B,C) -> fun28(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun29(A,B)

  * Non Asymptotic Upper Bound: 12+6*nat(B) 

  * LOOPS fun29(C,D) -> fun29(E,F)

  * Ranking function: N/A

  * Invariants fun29(A,B) -> fun29(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun10(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=19,cr=fun10/3])) 

  * LOOPS fun10(D,E,F) -> fun10(G,H,I)
     - [F>=0,E>=0,D=1]

  * Ranking function: c(failed(no_rf,[scc=19,cr=fun10/3]))

  * Invariants fun10(A,B,C) -> fun10(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [C>=0,B>=0,A=1]
     inv    : []

CRS fun7(A,B)

  * Non Asymptotic Upper Bound: 30+6*nat(B)+c(failed(cover_point,[scc=13,cr=isNatIListKind/1]))+6*nat(B)+6*nat(c(maximize_failed))+c(failed(cover_point,[scc=14,cr=isNatList/1])) 

  * LOOPS fun7(C,D) -> fun7(E,F)

  * Ranking function: N/A

  * Invariants fun7(A,B) -> fun7(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun8(A,B)

  * Non Asymptotic Upper Bound: 11+6*nat(B)+c(failed(cover_point,[scc=14,cr=isNatList/1])) 

  * LOOPS fun8(C,D) -> fun8(E,F)

  * Ranking function: N/A

  * Invariants fun8(A,B) -> fun8(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun9(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun9(B) -> fun9(C)

  * Ranking function: N/A

  * Invariants fun9(A) -> fun9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun15(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun15(B) -> fun15(C)

  * Ranking function: N/A

  * Invariants fun15(A) -> fun15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun17(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun17(B) -> fun17(C)

  * Ranking function: N/A

  * Invariants fun17(A) -> fun17(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun19(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun19(B) -> fun19(C)

  * Ranking function: N/A

  * Invariants fun19(A) -> fun19(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun18(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun18(B) -> fun18(C)

  * Ranking function: N/A

  * Invariants fun18(A) -> fun18(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(B) -> fun6(C)

  * Ranking function: N/A

  * Invariants fun6(A) -> fun6(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun25(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun25(B) -> fun25(C)

  * Ranking function: N/A

  * Invariants fun25(A) -> fun25(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS activate(A)

  * Non Asymptotic Upper Bound: 9+6*nat(A) 

  * LOOPS activate(B) -> activate(C)
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B>=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants activate(A) -> activate(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=0]
     inv    : [A>=B,B>=0]

CRS zeros

  * Non Asymptotic Upper Bound: 3 

  * LOOPS zeros -> zeros

  * Ranking function: N/A

  * Invariants zeros -> zeros

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS length(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS length(B) -> length(C)

  * Ranking function: N/A

  * Invariants length(A) -> length(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS fun

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun -> fun

  * Ranking function: N/A

  * Invariants fun -> fun

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS cons(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS cons(C,D) -> cons(E,F)

  * Ranking function: N/A

  * Invariants cons(A,B) -> cons(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [0=1]
     inv    : [B>=0,A=C,B=D]


