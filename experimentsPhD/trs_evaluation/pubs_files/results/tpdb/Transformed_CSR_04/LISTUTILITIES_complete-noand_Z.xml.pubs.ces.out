This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=34,cr=fun96/2])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun99/2])),c(failed(cover_point,[scc=34,cr=fun91/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun56/2])),c(failed(cover_point,[scc=34,cr=fun102/2])),c(failed(cover_point,[scc=34,cr=fun109/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun7/3])),c(failed(cover_point,[scc=34,cr=fun51/3])),c(failed(cover_point,[scc=34,cr=fun84/3])),c(failed(cover_point,[scc=34,cr=fun107/3])),c(failed(cover_point,[scc=34,cr=fun67/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun106/2])),c(failed(cover_point,[scc=34,cr=fun77/2])),c(failed(cover_point,[scc=34,cr=fun86/2])),c(failed(cover_point,[scc=34,cr=fun1/3])),c(failed(cover_point,[scc=34,cr=fun50/2])),c(failed(cover_point,[scc=34,cr=fun82/2])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun101/2])),c(failed(cover_point,[scc=34,cr=fun39/3])),c(failed(cover_point,[scc=34,cr=isPLNat/1])),c(failed(cover_point,[scc=34,cr=fun65/2])),c(failed(cover_point,[scc=34,cr=fun46/3])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),7+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun36/3])),c(failed(cover_point,[scc=34,cr=fun92/2])),c(failed(cover_point,[scc=34,cr=fun34/3])),c(failed(cover_point,[scc=34,cr=fun12/3])),c(failed(cover_point,[scc=34,cr=fun41/3])),c(failed(cover_point,[scc=34,cr=fun80/2])),c(failed(cover_point,[scc=34,cr=fun47/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun88/3])),c(failed(cover_point,[scc=34,cr=fun64/3])),c(failed(cover_point,[scc=34,cr=fun83/2])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun81/3])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun76/2])),c(failed(cover_point,[scc=34,cr=fun20/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun71/3])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun69/2])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun66/3])),c(failed(cover_point,[scc=34,cr=fun57/3])),c(failed(cover_point,[scc=34,cr=isPLNatKind/1])),c(failed(cover_point,[scc=34,cr=fun4/3])),6+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun61/2])),3+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun59/3])),c(failed(cover_point,[scc=34,cr=fun43/2])),c(failed(cover_point,[scc=34,cr=fun30/3])),c(failed(cover_point,[scc=34,cr=fun55/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun49/2])),c(failed(cover_point,[scc=34,cr=isNaturalKind/1])),c(failed(cover_point,[scc=34,cr=fun16/3])),c(failed(cover_point,[scc=34,cr=fun45/3])),c(failed(cover_point,[scc=34,cr=sel/2])),c(failed(cover_point,[scc=34,cr=fun42/2])),c(failed(cover_point,[scc=34,cr=fun40/3])),c(failed(cover_point,[scc=34,cr=fun38/3])),c(failed(cover_point,[scc=34,cr=fun35/3])),c(failed(cover_point,[scc=34,cr=fun33/3])),c(failed(cover_point,[scc=34,cr=fun29/3])),c(failed(cover_point,[scc=34,cr=fun28/3])),c(failed(cover_point,[scc=34,cr=fun25/2])),c(failed(cover_point,[scc=34,cr=fun23/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun19/3])),c(failed(cover_point,[scc=34,cr=fun17/2])),c(failed(cover_point,[scc=34,cr=take/2])),c(failed(cover_point,[scc=34,cr=isLNatKind/1])),5+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun11/3])),c(failed(cover_point,[scc=34,cr=natsFrom/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun8/3])),c(failed(cover_point,[scc=34,cr=isNatural/1])),c(failed(cover_point,[scc=34,cr=fun5/2])),c(failed(cover_point,[scc=34,cr=afterNth/2])),c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=isLNat/1])),c(failed(cover_point,[scc=34,cr=fun/3]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([c(failed(cover_point,[scc=34,cr=fun96/2])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun99/2])),c(failed(cover_point,[scc=34,cr=fun91/3])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun56/2])),c(failed(cover_point,[scc=34,cr=fun102/2])),c(failed(cover_point,[scc=34,cr=fun109/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun7/3])),c(failed(cover_point,[scc=34,cr=fun51/3])),c(failed(cover_point,[scc=34,cr=fun84/3])),c(failed(cover_point,[scc=34,cr=fun107/3])),c(failed(cover_point,[scc=34,cr=fun67/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun106/2])),c(failed(cover_point,[scc=34,cr=fun77/2])),c(failed(cover_point,[scc=34,cr=fun86/2])),c(failed(cover_point,[scc=34,cr=fun1/3])),c(failed(cover_point,[scc=34,cr=fun50/2])),c(failed(cover_point,[scc=34,cr=fun82/2])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun101/2])),c(failed(cover_point,[scc=34,cr=fun39/3])),c(failed(cover_point,[scc=34,cr=isPLNat/1])),c(failed(cover_point,[scc=34,cr=fun65/2])),c(failed(cover_point,[scc=34,cr=fun46/3])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),7+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun36/3])),c(failed(cover_point,[scc=34,cr=fun92/2])),c(failed(cover_point,[scc=34,cr=fun34/3])),c(failed(cover_point,[scc=34,cr=fun12/3])),c(failed(cover_point,[scc=34,cr=fun41/3])),c(failed(cover_point,[scc=34,cr=fun80/2])),c(failed(cover_point,[scc=34,cr=fun47/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun88/3])),c(failed(cover_point,[scc=34,cr=fun64/3])),c(failed(cover_point,[scc=34,cr=fun83/2])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun81/3])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun76/2])),c(failed(cover_point,[scc=34,cr=fun20/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun71/3])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun69/2])),1+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun66/3])),c(failed(cover_point,[scc=34,cr=fun57/3])),c(failed(cover_point,[scc=34,cr=isPLNatKind/1])),c(failed(cover_point,[scc=34,cr=fun4/3])),6+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun61/2])),3+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun59/3])),c(failed(cover_point,[scc=34,cr=fun43/2])),c(failed(cover_point,[scc=34,cr=fun30/3])),c(failed(cover_point,[scc=34,cr=fun55/3])),4+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun49/2])),c(failed(cover_point,[scc=34,cr=isNaturalKind/1])),c(failed(cover_point,[scc=34,cr=fun16/3])),c(failed(cover_point,[scc=34,cr=fun45/3])),c(failed(cover_point,[scc=34,cr=sel/2])),c(failed(cover_point,[scc=34,cr=fun42/2])),c(failed(cover_point,[scc=34,cr=fun40/3])),c(failed(cover_point,[scc=34,cr=fun38/3])),c(failed(cover_point,[scc=34,cr=fun35/3])),c(failed(cover_point,[scc=34,cr=fun33/3])),c(failed(cover_point,[scc=34,cr=fun29/3])),c(failed(cover_point,[scc=34,cr=fun28/3])),c(failed(cover_point,[scc=34,cr=fun25/2])),c(failed(cover_point,[scc=34,cr=fun23/2])),3+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun19/3])),c(failed(cover_point,[scc=34,cr=fun17/2])),c(failed(cover_point,[scc=34,cr=take/2])),c(failed(cover_point,[scc=34,cr=isLNatKind/1])),5+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun11/3])),c(failed(cover_point,[scc=34,cr=natsFrom/1])),2+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+c(failed(cover_point,[scc=34,cr=activate/1]))+c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=fun8/3])),c(failed(cover_point,[scc=34,cr=isNatural/1])),c(failed(cover_point,[scc=34,cr=fun5/2])),c(failed(cover_point,[scc=34,cr=afterNth/2])),c(failed(cover_point,[scc=34,cr=activate/1])),c(failed(cover_point,[scc=34,cr=isLNat/1])),c(failed(cover_point,[scc=34,cr=fun/3]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun95(A,B,C,D)

  * Non Asymptotic Upper Bound: 7+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+23*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isNaturalKind/1])) 

  * LOOPS fun95(E,F,G,H) -> fun95(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun95(A,B,C,D) -> fun95(E,F,G,H)

     entry  : [D>=0,C>=0,B>=0,A>=0]
     non-rec: [A=E,B=F,C=G,D=H,D>=0,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,D>=0,A=E,B=F,C=G,D=H]

CRS fun94(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isLNatKind/1])) 

  * LOOPS fun94(D,E,F) -> fun94(G,H,I)

  * Ranking function: N/A

  * Invariants fun94(A,B,C) -> fun94(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun89(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+9*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun89(D,E,F) -> fun89(G,H,I)

  * Ranking function: N/A

  * Invariants fun89(A,B,C) -> fun89(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun78(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+5*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun78(C,D) -> fun78(E,F)

  * Ranking function: N/A

  * Invariants fun78(A,B) -> fun78(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun79(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun79(C,D) -> fun79(E,F)

  * Ranking function: N/A

  * Invariants fun79(A,B) -> fun79(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun63(A,B,C,D)

  * Non Asymptotic Upper Bound: 6+c(failed(cover_point,[scc=34,cr=isNatural/1]))+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+19*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun63(E,F,G,H) -> fun63(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun63(A,B,C,D) -> fun63(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun52(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun52(D,E,F) -> fun52(G,H,I)

  * Ranking function: N/A

  * Invariants fun52(A,B,C) -> fun52(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun53(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+5*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun53(C,D) -> fun53(E,F)

  * Ranking function: N/A

  * Invariants fun53(A,B) -> fun53(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun97(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun97(C,D) -> fun97(E,F)

  * Ranking function: N/A

  * Invariants fun97(A,B) -> fun97(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun68(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun68(C,D) -> fun68(E,F)

  * Ranking function: N/A

  * Invariants fun68(A,B) -> fun68(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun21(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+6*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun21(D,E,F) -> fun21(G,H,I)

  * Ranking function: N/A

  * Invariants fun21(A,B,C) -> fun21(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun22(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun22(D,E,F) -> fun22(G,H,I)

  * Ranking function: N/A

  * Invariants fun22(A,B,C) -> fun22(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun98(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun98(C,D) -> fun98(E,F)

  * Ranking function: N/A

  * Invariants fun98(A,B) -> fun98(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun13(A,B,C,D)

  * Non Asymptotic Upper Bound: 5+c(failed(cover_point,[scc=34,cr=isNaturalKind/1]))+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+15*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun13(E,F,G,H) -> fun13(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun13(A,B,C,D) -> fun13(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun14(A,B,C,D)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+11*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun14(E,F,G,H) -> fun14(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun14(A,B,C,D) -> fun14(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun73(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+7*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun73(E,F,G,H) -> fun73(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun73(A,B,C,D) -> fun73(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun74(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun74(E,F,G,H) -> fun74(I,J,K,L)

  * Ranking function: N/A

  * Invariants fun74(A,B,C,D) -> fun74(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS fun108(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun108(C,D) -> fun108(E,F)

  * Ranking function: N/A

  * Invariants fun108(A,B) -> fun108(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun104(A,B,C)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNat/1]))+9*c(failed(cover_point,[scc=34,cr=activate/1]))+2*c(failed(cover_point,[scc=34,cr=isLNatKind/1])) 

  * LOOPS fun104(D,E,F) -> fun104(G,H,I)

  * Ranking function: N/A

  * Invariants fun104(A,B,C) -> fun104(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS fun70(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=isLNat/1]))+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+6*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun70(D,E,F) -> fun70(G,H,I)

  * Ranking function: N/A

  * Invariants fun70(A,B,C) -> fun70(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun9(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun9(D,E,F) -> fun9(G,H,I)

  * Ranking function: N/A

  * Invariants fun9(A,B,C) -> fun9(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS fun103(A,B)

  * Non Asymptotic Upper Bound: 4+c(failed(cover_point,[scc=34,cr=isLNatKind/1]))+3*c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun103(C,D) -> fun103(E,F)

  * Ranking function: N/A

  * Invariants fun103(A,B) -> fun103(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun60(A,B)

  * Non Asymptotic Upper Bound: 3+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun60(C,D) -> fun60(E,F)

  * Ranking function: N/A

  * Invariants fun60(A,B) -> fun60(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS fun10(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(cover_point,[scc=34,cr=activate/1])) 

  * LOOPS fun10(C,D) -> fun10(E,F)

  * Ranking function: N/A

  * Invariants fun10(A,B) -> fun10(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS tail(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS tail(B) -> tail(C)

  * Ranking function: N/A

  * Invariants tail(A) -> tail(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS pair(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS pair(C,D) -> pair(E,F)

  * Ranking function: N/A

  * Invariants pair(A,B) -> pair(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS nil

  * Non Asymptotic Upper Bound: 1 

  * LOOPS nil -> nil

  * Ranking function: N/A

  * Invariants nil -> nil

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS s(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS s(B) -> s(C)

  * Ranking function: N/A

  * Invariants s(A) -> s(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS head(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS head(B) -> head(C)

  * Ranking function: N/A

  * Invariants head(A) -> head(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun72

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun72 -> fun72

  * Ranking function: N/A

  * Invariants fun72 -> fun72

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS fst(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fst(B) -> fst(C)

  * Ranking function: N/A

  * Invariants fst(A) -> fst(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS cons(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS cons(C,D) -> cons(E,F)

  * Ranking function: N/A

  * Invariants cons(A,B) -> cons(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS fun90(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun90(B) -> fun90(C)

  * Ranking function: N/A

  * Invariants fun90(A) -> fun90(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun110(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun110(B) -> fun110(C)

  * Ranking function: N/A

  * Invariants fun110(A) -> fun110(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun54(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun54(B) -> fun54(C)

  * Ranking function: N/A

  * Invariants fun54(A) -> fun54(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun105(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun105(B) -> fun105(C)

  * Ranking function: N/A

  * Invariants fun105(A) -> fun105(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun87(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun87(B) -> fun87(C)

  * Ranking function: N/A

  * Invariants fun87(A) -> fun87(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun44(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun44(B) -> fun44(C)

  * Ranking function: N/A

  * Invariants fun44(A) -> fun44(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun58(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun58(B) -> fun58(C)

  * Ranking function: N/A

  * Invariants fun58(A) -> fun58(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun75(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun75(B) -> fun75(C)

  * Ranking function: N/A

  * Invariants fun75(A) -> fun75(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun18(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun18(B) -> fun18(C)

  * Ranking function: N/A

  * Invariants fun18(A) -> fun18(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun62(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun62(B) -> fun62(C)

  * Ranking function: N/A

  * Invariants fun62(A) -> fun62(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun6(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun6(B) -> fun6(C)

  * Ranking function: N/A

  * Invariants fun6(A) -> fun6(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun27(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun27(B) -> fun27(C)

  * Ranking function: N/A

  * Invariants fun27(A) -> fun27(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun93(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun93(B) -> fun93(C)

  * Ranking function: N/A

  * Invariants fun93(A) -> fun93(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun100(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun100(B) -> fun100(C)

  * Ranking function: N/A

  * Invariants fun100(A) -> fun100(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun48(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun48(B) -> fun48(C)

  * Ranking function: N/A

  * Invariants fun48(A) -> fun48(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun3(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun3(B) -> fun3(C)

  * Ranking function: N/A

  * Invariants fun3(A) -> fun3(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun26(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun26(B) -> fun26(C)

  * Ranking function: N/A

  * Invariants fun26(A) -> fun26(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun85(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun85(B) -> fun85(C)

  * Ranking function: N/A

  * Invariants fun85(A) -> fun85(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun37(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun37(B) -> fun37(C)

  * Ranking function: N/A

  * Invariants fun37(A) -> fun37(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun32(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun32(B) -> fun32(C)

  * Ranking function: N/A

  * Invariants fun32(A) -> fun32(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun24(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun24(B) -> fun24(C)

  * Ranking function: N/A

  * Invariants fun24(A) -> fun24(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun2(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun2(B) -> fun2(C)

  * Ranking function: N/A

  * Invariants fun2(A) -> fun2(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun15(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun15(B) -> fun15(C)

  * Ranking function: N/A

  * Invariants fun15(A) -> fun15(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun31(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS fun31(B) -> fun31(C)

  * Ranking function: N/A

  * Invariants fun31(A) -> fun31(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS splitAt(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS splitAt(C,D) -> splitAt(E,F)

  * Ranking function: N/A

  * Invariants splitAt(A,B) -> splitAt(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS snd(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS snd(B) -> snd(C)

  * Ranking function: N/A

  * Invariants snd(A) -> snd(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]


