This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([2+nat(A),1+nat(A),c(failed(schemes_failed,[scc=12,cr=ifquick/2])),2+c(failed(schemes_failed,[scc=12,cr=ifquick/2])),12+12*nat(C-1)+nat(C-2)+nat(C-3)+2*nat(C-1)*nat(C-2)+nat(C-1)* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3])))+2* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3]))),15+nat(B-1)+12*nat(B-1)+nat(B-2)+nat(B-3)+2*nat(B-1)*nat(B-2)+nat(B-1)* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3])))+2* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3]))),6+8*nat(C-1)+2*nat(C-1)*nat(C-2),9+nat(B-1)+8*nat(B-1)+2*nat(B-1)*nat(B-2),4+nat(B)+nat(C)+nat(D)+c(failed(schemes_failed,[scc=4,cr=averIter/3])),c(failed(schemes_failed,[scc=4,cr=averIter/3])),1+c(failed(schemes_failed,[scc=4,cr=averIter/3])),1+c(failed(schemes_failed,[scc=4,cr=averIter/3])),4+nat(A)+c(failed(schemes_failed,[scc=4,cr=averIter/3]))]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([2+nat(A),1+nat(A),c(failed(schemes_failed,[scc=12,cr=ifquick/2])),2+c(failed(schemes_failed,[scc=12,cr=ifquick/2])),12+12*nat(C-1)+nat(C-2)+nat(C-3)+2*nat(C-1)*nat(C-2)+nat(C-1)* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3])))+2* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3]))),15+nat(B-1)+12*nat(B-1)+nat(B-2)+nat(B-3)+2*nat(B-1)*nat(B-2)+nat(B-1)* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3])))+2* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3]))),6+8*nat(C-1)+2*nat(C-1)*nat(C-2),9+nat(B-1)+8*nat(B-1)+2*nat(B-1)*nat(B-2),4+nat(B)+nat(C)+nat(D)+c(failed(schemes_failed,[scc=4,cr=averIter/3])),c(failed(schemes_failed,[scc=4,cr=averIter/3])),1+c(failed(schemes_failed,[scc=4,cr=averIter/3])),1+c(failed(schemes_failed,[scc=4,cr=averIter/3])),4+nat(A)+c(failed(schemes_failed,[scc=4,cr=averIter/3]))]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS ifquick(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=12,cr=ifquick/2])) 

  * LOOPS ifquick(C,D) -> ifquick(E,F)
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]
     - [F>=0,D>=0,C=1]

  * Ranking function: c(failed(no_rf,[scc=12,cr=ifquick/2]))

  * Invariants ifquick(A,B) -> ifquick(C,D)

     entry  : [B>=0]
     non-rec: [A=C,B=D,B>=0]
     rec    : [B>=0,D>=0,A=1]
     inv    : [D>=0,B>=0]

CRS tail(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS tail(B) -> tail(C)

  * Ranking function: N/A

  * Invariants tail(A) -> tail(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS isempty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isempty(B) -> isempty(C)

  * Ranking function: N/A

  * Invariants isempty(A) -> isempty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS head(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS head(B) -> head(C)

  * Ranking function: N/A

  * Invariants head(A) -> head(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS fun1(A,B,C)

  * Non Asymptotic Upper Bound: 12+12*nat(C-1)+nat(C-2)+nat(C-3)+2*nat(C-1)*nat(C-2)+nat(C-1)* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3])))+2* (1+c(failed(schemes_failed,[scc=4,cr=averIter/3]))) 

  * LOOPS fun1(D,E,F) -> fun1(G,H,I)
     - [F>=I+1,I>=1,E>=0,D=1,E=H]
     - [F>=I+1,I>=1,E>=0,D=2,E=H]

  * Ranking function: nat(F-1)

  * Invariants fun1(A,B,C) -> fun1(D,E,F)

     entry  : [C>=0,B>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0]
     rec    : [B>=0,C>=F+1,F>=1,A>=1,2>=A,B=E]
     inv    : [F>=0,C>=F,B>=0,B=E]

CRS fun(A,B,C)

  * Non Asymptotic Upper Bound: 6+8*nat(C-1)+2*nat(C-1)*nat(C-2) 

  * LOOPS fun(D,E,F) -> fun(G,H,I)
     - [F>=I+1,I>=1,E>=0,D=1,E=H]
     - [F>=I+1,I>=1,E>=0,D=2,E=H]

  * Ranking function: nat(F-1)

  * Invariants fun(A,B,C) -> fun(D,E,F)

     entry  : [C>=0,B>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0]
     rec    : [B>=0,C>=F+1,F>=1,A>=1,2>=A,B=E]
     inv    : [F>=0,C>=F,B>=0,B=E]

CRS average(A,B)

  * Non Asymptotic Upper Bound: 4+nat(A)+c(failed(schemes_failed,[scc=4,cr=averIter/3])) 

  * LOOPS average(C,D) -> average(E,F)

  * Ranking function: N/A

  * Invariants average(A,B) -> average(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS if(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=averIter/3])) 

  * LOOPS if(D,E,F) -> if(G,H,I)

  * Ranking function: N/A

  * Invariants if(A,B,C) -> if(D,E,F)

     entry  : [B>=0,C>=0]
     non-rec: [A=D,B=E,C=F,B>=0,C>=0]
     rec    : [0=1]
     inv    : [B>=0,C>=0,A=D,B=E,C=F]

CRS averIter(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=averIter/3])) 

  * LOOPS averIter(D,E,F) -> averIter(G,H,I)
     - [F>=0,E>=0,D>=0]

  * Ranking function: c(failed(no_rf,[scc=4,cr=averIter/3]))

  * Invariants averIter(A,B,C) -> averIter(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [C>=0,B>=0,A>=0]
     inv    : []

CRS plus(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS plus(C,D) -> plus(E,F)
     - [D=F,C=E+1,E>=0,D>=0]

  * Ranking function: nat(C)

  * Invariants plus(A,B) -> plus(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [B=D,B>=0,C>=0,A>=C+1]
     inv    : [A>=C,C>=0,B>=0,B=D]

CRS ge(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A) 

  * LOOPS ge(C,D) -> ge(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(D)

  * Invariants ge(A,B) -> ge(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS append(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS append(C,D) -> append(E,F)

  * Ranking function: N/A

  * Invariants append(A,B) -> append(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS a

  * Non Asymptotic Upper Bound: 1 

  * LOOPS a -> a

  * Ranking function: N/A

  * Invariants a -> a

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


