This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([2+nat(A-1),c(failed(schemes_failed,[scc=8,cr=ifmap/3])),2+c(failed(schemes_failed,[scc=8,cr=ifmap/3])),3+c(failed(schemes_failed,[scc=8,cr=ifmap/3])),c(failed(schemes_failed,[scc=4,cr=if/4])),3+nat(A)+c(failed(schemes_failed,[scc=4,cr=if/4])),4+nat(A)+c(failed(schemes_failed,[scc=4,cr=if/4])),1+nat(A),2+nat(A)]) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS start(A,B,C,D)

  * Non Asymptotic Upper Bound: max([2+nat(A-1),c(failed(schemes_failed,[scc=8,cr=ifmap/3])),2+c(failed(schemes_failed,[scc=8,cr=ifmap/3])),3+c(failed(schemes_failed,[scc=8,cr=ifmap/3])),c(failed(schemes_failed,[scc=4,cr=if/4])),3+nat(A)+c(failed(schemes_failed,[scc=4,cr=if/4])),4+nat(A)+c(failed(schemes_failed,[scc=4,cr=if/4])),1+nat(A),2+nat(A)]) 

  * LOOPS start(E,F,G,H) -> start(I,J,K,L)

  * Ranking function: N/A

  * Invariants start(A,B,C,D) -> start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS maplog(A)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=8,cr=ifmap/3])) 

  * LOOPS maplog(B) -> maplog(C)

  * Ranking function: N/A

  * Invariants maplog(A) -> maplog(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS ifmap(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=8,cr=ifmap/3])) 

  * LOOPS ifmap(D,E,F) -> ifmap(G,H,I)
     - [I>=0,H>=0,F>=0,E>=0,D=1]

  * Ranking function: c(failed(no_rf,[scc=8,cr=ifmap/3]))

  * Invariants ifmap(A,B,C) -> ifmap(D,E,F)

     entry  : [C>=0,B>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0]
     rec    : [F>=0,E>=0,C>=0,B>=0,A=1]
     inv    : [E>=0,B>=0,C>=0,F>=0]

CRS isempty(A)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS isempty(B) -> isempty(C)

  * Ranking function: N/A

  * Invariants isempty(A) -> isempty(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [0=1]
     inv    : [A>=0,A=B]

CRS log(A)

  * Non Asymptotic Upper Bound: max([1,4+nat(A)+c(failed(schemes_failed,[scc=4,cr=if/4]))]) 

  * LOOPS log(B) -> log(C)

  * Ranking function: N/A

  * Invariants log(A) -> log(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS last(A)

  * Non Asymptotic Upper Bound: 2+nat(A-1) 

  * LOOPS last(B) -> last(C)
     - [C>=1,B>=C+1]

  * Ranking function: nat(B-1)

  * Invariants last(A) -> last(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=1]
     inv    : [B>=0,A>=B]

CRS if(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=if/4])) 

  * LOOPS if(E,F,G,H) -> if(I,J,K,L)
     - [K>=1,H>=0,G>=0,F>=0,F=J,E=1,H+1=L]

  * Ranking function: c(failed(no_rf,[scc=4,cr=if/4]))

  * Invariants if(A,B,C,D) -> if(E,F,G,H)

     entry  : [C>=0,B>=0,D>=0]
     non-rec: [A=E,B=F,C=G,D=H,C>=0,B>=0,D>=0]
     rec    : [B=F,A=1,C>=0,B>=0,G>=1,D>=0,H>=D+1]
     inv    : [G>=0,H>=D,C>=0,D>=0,B>=0,B=F]

CRS le(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A) 

  * LOOPS le(C,D) -> le(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(D)

  * Invariants le(A,B) -> le(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS droplast(A)

  * Non Asymptotic Upper Bound: 2+nat(A-1) 

  * LOOPS droplast(B) -> droplast(C)
     - [C>=1,B>=C+1]

  * Ranking function: nat(B-1)

  * Invariants droplast(A) -> droplast(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [A>=B+1,B>=1]
     inv    : [B>=0,A>=B]

CRS double(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS double(B) -> double(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants double(A) -> double(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B,B>=0]

CRS a

  * Non Asymptotic Upper Bound: 1 

  * LOOPS a -> a

  * Ranking function: N/A

  * Invariants a -> a

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


