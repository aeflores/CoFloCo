This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([c(failed(schemes_failed,[scc=4,cr=f/3])),1+c(failed(schemes_failed,[scc=4,cr=f/3])),2+nat(1*A)/2,2+nat(1*A)/2,1+nat(B),1+nat(A)]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS start(A,B,C)

  * Non Asymptotic Upper Bound: max([c(failed(schemes_failed,[scc=4,cr=f/3])),1+c(failed(schemes_failed,[scc=4,cr=f/3])),2+nat(1*A)/2,2+nat(1*A)/2,1+nat(B),1+nat(A)]) 

  * LOOPS start(D,E,F) -> start(G,H,I)

  * Ranking function: N/A

  * Invariants start(A,B,C) -> start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS minus(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS minus(C,D) -> minus(E,F)
     - [D=F+1,C=E+1,C>=1,D>=1]

  * Ranking function: nat(D)

  * Invariants minus(A,B) -> minus(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A+D=B+C,C>=0,B+C>=A,A>=C+1]
     inv    : [B>=D,A+D>=B,D>=0,A+D=B+C]

CRS fun(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=f/3])) 

  * LOOPS fun(C,D) -> fun(E,F)

  * Ranking function: N/A

  * Invariants fun(A,B) -> fun(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,A=C,B=D]

CRS f(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=f/3])) 

  * LOOPS f(D,E,F) -> f(G,H,I)
     - [I>=0,F>=0,E>=1,G>=0,D=G,E=H+1]
     - [E>=1,E>=2*H,H>=0,F>=0,G>=0,D>=0,F=I]

  * Ranking function: nat(2*E-1)

  * Invariants f(A,B,C) -> f(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [A>=0,D>=0,2*B>=2*E+1,E>=0,B>=1,C>=0,F>=0]
     inv    : [D>=0,A>=0,E>=0,F>=0,C>=0,B>=E]

CRS times(A,B)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS times(C,D) -> times(E,F)
     - [D=F+1,C=E,E>=0,F>=0]

  * Ranking function: nat(D)

  * Invariants times(A,B) -> times(C,D)

     entry  : [B>=0,A>=0]
     non-rec: [A=C,B=D,B>=0,A>=0]
     rec    : [A=C,A>=0,D>=0,B>=D+1]
     inv    : [B>=D,A>=0,D>=0,A=C]

CRS odd(A)

  * Non Asymptotic Upper Bound: 2+nat(A)/2 

  * LOOPS odd(B) -> odd(C)
     - [B=C+2,B>=2]

  * Ranking function: nat(B/2)

  * Invariants odd(A) -> odd(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+2]
     inv    : [A>=B,B>=0]

CRS if(A,B,C)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS if(D,E,F) -> if(G,H,I)

  * Ranking function: N/A

  * Invariants if(A,B,C) -> if(D,E,F)

     entry  : [C>=0,B>=0,A>=0]
     non-rec: [A=D,B=E,C=F,C>=0,B>=0,A>=0]
     rec    : [0=1]
     inv    : [A>=0,B>=0,C>=0,A=D,B=E,C=F]

CRS half(A)

  * Non Asymptotic Upper Bound: 2+nat(A)/2 

  * LOOPS half(B) -> half(C)
     - [B=C+2,B>=2]

  * Ranking function: nat(B/2)

  * Invariants half(A) -> half(B)

     entry  : [A>=0]
     non-rec: [A=B,A>=0]
     rec    : [B>=0,A>=B+2]
     inv    : [A>=B,B>=0]


