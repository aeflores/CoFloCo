
Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive : [app/3]
1. recursive : [eq/3]
2. recursive : [le/3]
3. recursive : [fun/3,min/2]
4. recursive : [fun1/4,rm/3]
5. recursive : [fun2/4,minsort/3]
6. non_recursive : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into app/3
1. SCC is partially evaluated into eq/3
2. SCC is partially evaluated into le/3
3. SCC is partially evaluated into fun/3
4. SCC is partially evaluated into fun1/4
5. SCC is partially evaluated into fun2/4
6. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations app/3 
* CE 61 is refined into CE [62] 
* CE 59 is refined into CE [63] 
* CE 60 is refined into CE [64] 


#### Refined cost equations app/3 
* CE 62: app(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 63: app(A,B,B) = 1
     [B>=0,A=0] 
* CE 64: app(V1,V,Out) = 1+ app(W1,V,X1)
     [V1+X1>=Out,Out>=X1+1,V>=0,V1+X1=Out+W1] 

### Cost equations --> "Loop" of app/3 
* CEs [64] --> Loop 61 
* CEs [62] --> Loop 62 
* CEs [63] --> Loop 63 

#### Loops of app/3 
* Loop 61: app(V1,V,Out)->  app(V1',V,Out')
                  [V1+Out'>=Out,Out>=Out'+1,V>=0,V1+Out'=Out+V1'] 
* Loop 62: app(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 63: app(A,B,B) [B>=0,A=0] 

### Ranking functions of CR app(V1,V,Out) 
* RF of phase [61]: [V1]

#### Partial ranking functions of CR app(V1,V,Out) 
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    V1

Discarded unfeasible chain [[61]]...(Non-terminating chain proved terminating)

### Resulting Chains:app(V1,V,Out) 
* [[61],63]
* [[61],62]
* [63]
* [62]


### Specialization of cost equations eq/3 
* CE 20 is refined into CE [65] 
* CE 18 is refined into CE [66] 
* CE 17 is refined into CE [67] 
* CE 16 is refined into CE [68] 
* CE 19 is refined into CE [69] 


#### Refined cost equations eq/3 
* CE 65: eq(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 66: eq(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 67: eq(V1,V,Out) = 1
     [V>=1,Out=1,V1=0] 
* CE 68: eq(V1,V,Out) = 1
     [Out=2,V=0,V1=0] 
* CE 69: eq(V1,V,Out) = 1+ eq(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of eq/3 
* CEs [69] --> Loop 64 
* CEs [65] --> Loop 65 
* CEs [66] --> Loop 66 
* CEs [67] --> Loop 67 
* CEs [68] --> Loop 68 

#### Loops of eq/3 
* Loop 64: eq(V1,V,Out)->  eq(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 65: eq(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 66: eq(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 67: eq(V1,V,Out) [V>=1,Out=1,V1=0] 
* Loop 68: eq(V1,V,Out) [Out=2,V=0,V1=0] 

### Ranking functions of CR eq(V1,V,Out) 
* RF of phase [64]: [V,V1]

#### Partial ranking functions of CR eq(V1,V,Out) 
* Partial RF of phase [64]:
  - RF of loop [64:1]:
    V
    V1

Discarded unfeasible chain [[64]]...(Non-terminating chain proved terminating)

### Resulting Chains:eq(V1,V,Out) 
* [[64],68]
* [[64],67]
* [[64],66]
* [[64],65]
* [68]
* [67]
* [66]
* [65]


### Specialization of cost equations le/3 
* CE 44 is refined into CE [70] 
* CE 42 is refined into CE [71] 
* CE 41 is refined into CE [72] 
* CE 43 is refined into CE [73] 


#### Refined cost equations le/3 
* CE 70: le(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 71: le(V1,V,Out) = 1
     [V1>=1,Out=1,V=0] 
* CE 72: le(V1,V,Out) = 1
     [V>=0,Out=2,V1=0] 
* CE 73: le(V1,V,Out) = 1+ le(W1,X1,Out)
     [X1>=0,W1>=0,X1+1=V,W1+1=V1] 

### Cost equations --> "Loop" of le/3 
* CEs [73] --> Loop 69 
* CEs [70] --> Loop 70 
* CEs [71] --> Loop 71 
* CEs [72] --> Loop 72 

#### Loops of le/3 
* Loop 69: le(V1,V,Out)->  le(V1',V',Out)
                  [V'>=0,V1'>=0,V'+1=V,V1'+1=V1] 
* Loop 70: le(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 71: le(V1,V,Out) [V1>=1,Out=1,V=0] 
* Loop 72: le(V1,V,Out) [V>=0,Out=2,V1=0] 

### Ranking functions of CR le(V1,V,Out) 
* RF of phase [69]: [V,V1]

#### Partial ranking functions of CR le(V1,V,Out) 
* Partial RF of phase [69]:
  - RF of loop [69:1]:
    V
    V1

Discarded unfeasible chain [[69]]...(Non-terminating chain proved terminating)

### Resulting Chains:le(V1,V,Out) 
* [[69],72]
* [[69],71]
* [[69],70]
* [72]
* [71]
* [70]


### Specialization of cost equations fun/3 
* CE 51 is refined into CE [74] 
* CE 50 is refined into CE [75] 
* CE 46 is refined into CE [76] 
* CE 49 is refined into CE [77] 
* CE 45 is refined into CE [78] 
* CE 48 is refined into CE [79,80,81,82,83,84] 
* CE 47 is refined into CE [85,86,87,88,89,90] 


#### Refined cost equations fun/3 
* CE 74: fun(V1,V,Out) = 0
     [V>=0,V1>=0,Out=0] 
* CE 75: fun(V1,V,Out) = 2
     [V>=Out+2,Out>=0,V1=2] 
* CE 76: fun(V1,V,Out) = 1
     [V>=2,Out=0,V1=2] 
* CE 77: fun(V1,V,Out) = 2
     [V>=Out+2,Out>=0,V1=1] 
* CE 78: fun(V1,V,Out) = 1
     [V>=2,Out=0,V1=1] 
* CE 79: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],72]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=W1,W1>=1,Z1=2,Y1=2,V1=2] 
* CE 80: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],71]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,W1>=X1+1,X1>=1,Z1=1,Y1=1,V1=2] 
* CE 81: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],70]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=1,W1>=1,Z1=0,Y1=0,V1=2] 
* CE 82: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[72]+ fun(Z1,A2,Out)
     [V>=A2+1,A2>=X1+2,X1>=0,Z1=2,Y1=2,W1=0,V1=2] 
* CE 83: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[71]+ fun(Z1,A2,Out)
     [V>=A2+1,A2>=W1+2,W1>=1,Z1=1,Y1=1,X1=0,V1=2] 
* CE 84: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[70]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=0,W1>=0,Z1=0,Y1=0,V1=2] 
* CE 85: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],72]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=W1,W1>=1,Z1=2,Y1=2,V1=1] 
* CE 86: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],71]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,W1>=X1+1,X1>=1,Z1=1,Y1=1,V1=1] 
* CE 87: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[[69],70]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=1,W1>=1,Z1=0,Y1=0,V1=1] 
* CE 88: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[72]+ fun(Z1,A2,Out)
     [V>=A2+1,A2>=X1+2,X1>=0,Z1=2,Y1=2,W1=0,V1=1] 
* CE 89: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[71]+ fun(Z1,A2,Out)
     [V>=A2+1,A2>=W1+2,W1>=1,Z1=1,Y1=1,X1=0,V1=1] 
* CE 90: fun(V1,V,Out) = 2+ le(W1,X1,Y1):[70]+ fun(Z1,A2,Out)
     [A2>=W1+X1+2,V>=A2+1,X1>=0,W1>=0,Z1=0,Y1=0,V1=1] 

### Cost equations --> "Loop" of fun/3 
* CEs [79] --> Loop 73 
* CEs [82] --> Loop 74 
* CEs [80] --> Loop 75 
* CEs [83] --> Loop 76 
* CEs [81] --> Loop 77 
* CEs [84] --> Loop 78 
* CEs [85] --> Loop 79 
* CEs [88] --> Loop 80 
* CEs [86] --> Loop 81 
* CEs [89] --> Loop 82 
* CEs [87] --> Loop 83 
* CEs [90] --> Loop 84 
* CEs [74] --> Loop 85 
* CEs [75] --> Loop 86 
* CEs [76] --> Loop 87 
* CEs [77] --> Loop 88 
* CEs [78] --> Loop 89 

#### Loops of fun/3 
* Loop 73: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=4,V1'=2,V1=2] 
* Loop 74: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=2,V1'=2,V1=2] 
* Loop 75: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=5,V1'=1,V1=2] 
* Loop 76: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=3,V1'=1,V1=2] 
* Loop 77: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=4,V1'=0,V1=2] 
* Loop 78: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=2,V1'=0,V1=2] 
* Loop 79: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=4,V1'=2,V1=1] 
* Loop 80: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=2,V1'=2,V1=1] 
* Loop 81: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=5,V1'=1,V1=1] 
* Loop 82: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=3,V1'=1,V1=1] 
* Loop 83: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=4,V1'=0,V1=1] 
* Loop 84: fun(V1,V,Out)->  fun(V1',V',Out)
                  [V>=V'+1,V'>=2,V1'=0,V1=1] 
* Loop 85: fun(V1,V,Out) [V>=0,V1>=0,Out=0] 
* Loop 86: fun(V1,V,Out) [V>=Out+2,Out>=0,V1=2] 
* Loop 87: fun(V1,V,Out) [V>=2,Out=0,V1=2] 
* Loop 88: fun(V1,V,Out) [V>=Out+2,Out>=0,V1=1] 
* Loop 89: fun(V1,V,Out) [V>=2,Out=0,V1=1] 

### Ranking functions of CR fun(V1,V,Out) 
* RF of phase [73,74,75,76,79,80,81,82]: [V-2]

#### Partial ranking functions of CR fun(V1,V,Out) 
* Partial RF of phase [73,74,75,76,79,80,81,82]:
  - RF of loop [73:1]:
    V-4
  - RF of loop [74:1]:
    V-2
  - RF of loop [75:1,76:1]:
    V1-1 depends on loops [79:1,80:1] 
  - RF of loop [79:1,80:1]:
    -V1+2 depends on loops [75:1,76:1] 
  - RF of loop [81:1]:
    V-5
  - RF of loop [82:1]:
    V-3

Discarded unfeasible chain [[73,74,75,76,79,80,81,82]]...(Non-terminating chain proved terminating)

### Resulting Chains:fun(V1,V,Out) 
* [[73,74,75,76,79,80,81,82],89]
* [[73,74,75,76,79,80,81,82],88]
* [[73,74,75,76,79,80,81,82],87]
* [[73,74,75,76,79,80,81,82],86]
* [[73,74,75,76,79,80,81,82],85]
* [[73,74,75,76,79,80,81,82],84,85]
* [[73,74,75,76,79,80,81,82],83,85]
* [[73,74,75,76,79,80,81,82],78,85]
* [[73,74,75,76,79,80,81,82],77,85]
* [89]
* [88]
* [87]
* [86]
* [85]
* [84,85]
* [83,85]
* [78,85]
* [77,85]


### Specialization of cost equations fun1/4 
* CE 58 is refined into CE [91] 
* CE 57 is refined into CE [92] 
* CE 53 is refined into CE [93] 
* CE 52 is refined into CE [94] 
* CE 56 is refined into CE [95] 
* CE 55 is refined into CE [96,97,98,99,100,101,102,103] 
* CE 54 is refined into CE [104,105,106,107,108,109,110,111] 


#### Refined cost equations fun1/4 
* CE 91: fun1(V1,V,V29,Out) = 0
     [V29>=0,V>=0,V1>=0,Out=0] 
* CE 92: fun1(V1,V,V29,Out) = 2
     [V29>=1,V>=0,Out=0,V1=2] 
* CE 93: fun1(V1,V,V29,Out) = 1
     [V29>=1,V>=0,Out=0,V1=2] 
* CE 94: fun1(V1,V,V29,Out) = 1
     [V29>=Out,Out>=1,V>=0,V1=1] 
* CE 95: fun1(A,B,C,C) = 2
     [C>=1,B>=0,A=1] 
* CE 96: fun1(V1,V,V29,Out) = 2+ eq(V,V,W29):[[64],68]+ fun1(X29,V,Y29,Out)
     [V29>=Y29+1,Y29>=V+1,V>=1,X29=2,W29=2,V1=2] 
* CE 97: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],67]+ fun1(Y29,V,Z29,Out)
     [V29>=Z29+1,Z29>=W29+1,W29>=V+1,V>=1,Y29=1,X29=1,V1=2] 
* CE 98: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],66]+ fun1(Y29,V,Z29,Out)
     [V29>=Z29+1,Z29>=W29+1,V>=W29+1,W29>=1,Y29=1,X29=1,V1=2] 
* CE 99: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],65]+ fun1(Y29,V,Z29,Out)
     [V29>=Z29+1,Z29>=W29+1,W29>=1,V>=1,Y29=0,X29=0,V1=2] 
* CE 100: fun1(V1,V,V29,Out) = 2+ eq(W29,X29,Y29):[68]+ fun1(Z29,A30,B30,Out)
     [V29>=B30+1,B30>=1,A30=0,Z29=2,Y29=2,X29=0,W29=0,V=0,V1=2] 
* CE 101: fun1(V1,V,V29,Out) = 2+ eq(W29,X29,Y29):[67]+ fun1(Z29,A30,B30,Out)
     [V29>=B30+1,B30>=X29+1,X29>=1,A30=0,Z29=1,Y29=1,W29=0,V=0,V1=2] 
* CE 102: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[66]+ fun1(Y29,V,Z29,Out)
     [V29>=Z29+1,Z29>=1,V>=1,Y29=1,X29=1,W29=0,V1=2] 
* CE 103: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[65]+ fun1(Y29,V,Z29,Out)
     [V29>=Z29+1,Z29>=W29+1,W29>=0,V>=0,Y29=0,X29=0,V1=2] 
* CE 104: fun1(V1,V,V29,Out) = 2+ eq(V,V,W29):[[64],68]+ fun1(X29,V,Y29,Z29)
     [V29>=Y29+1,Y29>=V+1,V>=1,V29+Z29=Out+Y29,X29=2,W29=2,V1=1] 
* CE 105: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],67]+ fun1(Y29,V,Z29,A30)
     [V29>=Z29+1,Z29>=W29+1,W29>=V+1,V>=1,V29+A30=Out+Z29,Y29=1,X29=1,V1=1] 
* CE 106: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],66]+ fun1(Y29,V,Z29,A30)
     [V29>=Z29+1,Z29>=W29+1,V>=W29+1,W29>=1,V29+A30=Out+Z29,Y29=1,X29=1,V1=1] 
* CE 107: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[[64],65]+ fun1(Y29,V,Z29,A30)
     [V29>=Z29+1,Z29>=W29+1,W29>=1,V>=1,V29+A30=Out+Z29,Y29=0,X29=0,V1=1] 
* CE 108: fun1(V1,V,V29,Out) = 2+ eq(W29,X29,Y29):[68]+ fun1(Z29,A30,B30,C30)
     [V29>=B30+1,B30>=1,V29+C30=Out+B30,A30=0,Z29=2,Y29=2,X29=0,W29=0,V=0,V1=1] 
* CE 109: fun1(V1,V,V29,Out) = 2+ eq(W29,X29,Y29):[67]+ fun1(Z29,A30,B30,C30)
     [V29>=B30+1,B30>=X29+1,X29>=1,V29+C30=Out+B30,A30=0,Z29=1,Y29=1,W29=0,V=0,V1=1] 
* CE 110: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[66]+ fun1(Y29,V,Z29,A30)
     [V29>=Z29+1,Z29>=1,V>=1,V29+A30=Out+Z29,Y29=1,X29=1,W29=0,V1=1] 
* CE 111: fun1(V1,V,V29,Out) = 2+ eq(V,W29,X29):[65]+ fun1(Y29,V,Z29,A30)
     [V29>=Z29+1,Z29>=W29+1,W29>=0,V>=0,V29+A30=Out+Z29,Y29=0,X29=0,V1=1] 

### Cost equations --> "Loop" of fun1/4 
* CEs [96] --> Loop 90 
* CEs [98] --> Loop 91 
* CEs [97] --> Loop 92 
* CEs [102] --> Loop 93 
* CEs [99] --> Loop 94 
* CEs [103] --> Loop 95 
* CEs [100] --> Loop 96 
* CEs [101] --> Loop 97 
* CEs [104] --> Loop 98 
* CEs [105] --> Loop 99 
* CEs [110] --> Loop 100 
* CEs [106] --> Loop 101 
* CEs [107] --> Loop 102 
* CEs [111] --> Loop 103 
* CEs [108] --> Loop 104 
* CEs [109] --> Loop 105 
* CEs [91] --> Loop 106 
* CEs [93] --> Loop 107 
* CEs [92] --> Loop 108 
* CEs [94] --> Loop 109 
* CEs [95] --> Loop 110 

#### Loops of fun1/4 
* Loop 90: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=V+1,V>=1,V1'=2,V1=2] 
* Loop 91: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=2,V>=2,V1'=1,V1=2] 
* Loop 92: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=V+2,V>=1,V1'=1,V1=2] 
* Loop 93: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=1,V>=1,V1'=1,V1=2] 
* Loop 94: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=2,V>=1,V1'=0,V1=2] 
* Loop 95: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out)
                  [V29>=V29'+1,V29'>=1,V>=0,V1'=0,V1=2] 
* Loop 96: fun1(V1,V,V29,Out)->  fun1(V1',V',V29',Out)
                  [V29>=V29'+1,V29'>=1,V'=0,V1'=2,V=0,V1=2] 
* Loop 97: fun1(V1,V,V29,Out)->  fun1(V1',V',V29',Out)
                  [V29>=V29'+1,V29'>=2,V'=0,V1'=1,V=0,V1=2] 
* Loop 98: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=V+1,V>=1,V29+Out'=Out+V29',V1'=2,V1=1] 
* Loop 99: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=V+2,V>=1,V29+Out'=Out+V29',V1'=1,V1=1] 
* Loop 100: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=1,V>=1,V29+Out'=Out+V29',V1'=1,V1=1] 
* Loop 101: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=2,V>=2,Out+V29'=V29+Out',V1'=1,V1=1] 
* Loop 102: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=2,V>=1,V29+Out'=Out+V29',V1'=0,V1=1] 
* Loop 103: fun1(V1,V,V29,Out)->  fun1(V1',V,V29',Out')
                  [V29>=V29'+1,V29'>=1,V>=0,V29+Out'=Out+V29',V1'=0,V1=1] 
* Loop 104: fun1(V1,V,V29,Out)->  fun1(V1',V',V29',Out')
                  [V29>=V29'+1,V29'>=1,V29+Out'=Out+V29',V'=0,V1'=2,V=0,V1=1] 
* Loop 105: fun1(V1,V,V29,Out)->  fun1(V1',V',V29',Out')
                  [V29>=V29'+1,V29'>=2,V29+Out'=Out+V29',V'=0,V1'=1,V=0,V1=1] 
* Loop 106: fun1(V1,V,V29,Out) [V29>=0,V>=0,V1>=0,Out=0] 
* Loop 107: fun1(V1,V,V29,Out) [V29>=1,V>=0,Out=0,V1=2] 
* Loop 108: fun1(V1,V,V29,Out) [V29>=1,V>=0,Out=0,V1=2] 
* Loop 109: fun1(V1,V,V29,Out) [V29>=Out,Out>=1,V>=0,V1=1] 
* Loop 110: fun1(A,B,C,C) [C>=1,B>=0,A=1] 

### Ranking functions of CR fun1(V1,V,V29,Out) 
* RF of phase [90,91,92,93,98,99,100,101]: [V29-1]
* RF of phase [96,97,104,105]: [V29-1]

#### Partial ranking functions of CR fun1(V1,V,V29,Out) 
* Partial RF of phase [90,91,92,93,98,99,100,101]:
  - RF of loop [90:1]:
    -V+V29-1
  - RF of loop [91:1,92:1,93:1]:
    V1-1 depends on loops [98:1] 
  - RF of loop [98:1]:
    -V1+2 depends on loops [91:1,92:1,93:1] 
  - RF of loop [99:1]:
    -V+V29-2
  - RF of loop [100:1]:
    V29-1
  - RF of loop [101:1]:
    V29-2
* Partial RF of phase [96,97,104,105]:
  - RF of loop [96:1]:
    V29-1
  - RF of loop [97:1]:
    V1-1 depends on loops [104:1] 
  - RF of loop [104:1]:
    -V1+2 depends on loops [97:1] 
  - RF of loop [105:1]:
    V29-2

Discarded unfeasible chain [[96,97,104,105]]...(Non-terminating chain proved terminating)
Discarded unfeasible chain [[90,91,92,93,98,99,100,101]](Non-terminating chain proved terminating)

### Resulting Chains:fun1(V1,V,V29,Out) 
* [[96,97,104,105],110]
* [[96,97,104,105],109]
* [[96,97,104,105],108]
* [[96,97,104,105],107]
* [[96,97,104,105],106]
* [[96,97,104,105],103,106]
* [[96,97,104,105],95,106]
* [[90,91,92,93,98,99,100,101],110]
* [[90,91,92,93,98,99,100,101],109]
* [[90,91,92,93,98,99,100,101],108]
* [[90,91,92,93,98,99,100,101],107]
* [[90,91,92,93,98,99,100,101],106]
* [[90,91,92,93,98,99,100,101],103,106]
* [[90,91,92,93,98,99,100,101],102,106]
* [[90,91,92,93,98,99,100,101],95,106]
* [[90,91,92,93,98,99,100,101],94,106]
* [110]
* [109]
* [108]
* [107]
* [106]
* [103,106]
* [102,106]
* [95,106]
* [94,106]

