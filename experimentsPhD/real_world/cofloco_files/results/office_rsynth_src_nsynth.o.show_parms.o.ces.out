Warning: Ignored call to eval_show_parms_stop/1 in equation eval_show_parms_20/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_show_parms_6/4,eval_show_parms_7/4,eval_show_parms_bb1_in/4]
1. recursive  : [eval_show_parms_12/4,eval_show_parms_13/5,eval_show_parms_16/7,eval_show_parms_17/7,eval_show_parms_bb4_in/4]
2. non_recursive  : [eval_show_parms_20/1]
3. non_recursive  : [eval_show_parms_19/2]
4. non_recursive  : [loop_cont_eval_show_parms_bb4_in/3]
5. non_recursive  : [eval_show_parms_10/2]
6. non_recursive  : [eval_show_parms_9/2]
7. non_recursive  : [loop_cont_eval_show_parms_bb1_in/3]
8. non_recursive  : [eval_show_parms_bb0_in/2]
9. non_recursive  : [eval_show_parms_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_show_parms_bb1_in/4
1. SCC is partially evaluated into eval_show_parms_bb4_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_show_parms_10/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_show_parms_bb0_in/2
9. SCC is partially evaluated into eval_show_parms_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_show_parms_bb1_in/4 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_show_parms_bb1_in/4 
* CE 14: eval_show_parms_bb1_in(A,B,C,A) = 0
     [B>=40,C=3] 
* CE 15: eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) = 1+ eval_show_parms_bb1_in(V__show_parms_names,D,E,C)
     [V_i_0>=0,39>=V_i_0,V_i_0+1=D,E=3,B=3] 

### Cost equations --> "Loop" of eval_show_parms_bb1_in/4 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 

#### Loops of eval_show_parms_bb1_in/4 
* Loop 10: eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C)->  eval_show_parms_bb1_in(V__show_parms_names,V_i_0',B',C)
                  [V_i_0>=0,39>=V_i_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 11: eval_show_parms_bb1_in(A,B,C,A) [B>=40,C=3] 

### Ranking functions of CR eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) 
* RF of phase [10]: [-V_i_0+40]

#### Partial ranking functions of CR eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_i_0+40


### Resulting Chains:eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) 
* [[10],11]


### Merging Chains  eval_show_parms_bb1_in/4 into  External patterns of execution 
* [[11,[10]]] --> 1 


### Specialization of cost equations eval_show_parms_bb4_in/4 
* CE 13 is refined into CE [16] 
* CE 12 is refined into CE [17] 


#### Refined cost equations eval_show_parms_bb4_in/4 
* CE 16: eval_show_parms_bb4_in(A,B,C,A) = 0
     [B>=40,C=2] 
* CE 17: eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) = 1+ eval_show_parms_bb4_in(V__show_parms_names,D,E,C)
     [V_i_1>=0,39>=V_i_1,V_i_1+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_show_parms_bb4_in/4 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of eval_show_parms_bb4_in/4 
* Loop 12: eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C)->  eval_show_parms_bb4_in(V__show_parms_names,V_i_1',B',C)
                  [V_i_1>=0,39>=V_i_1,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 13: eval_show_parms_bb4_in(A,B,C,A) [B>=40,C=2] 

### Ranking functions of CR eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) 
* RF of phase [12]: [-V_i_1+40]

#### Partial ranking functions of CR eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    -V_i_1+40


### Resulting Chains:eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) 
* [[12],13]


### Merging Chains  eval_show_parms_bb4_in/4 into  External patterns of execution 
* [[13,[12]]] --> 1 


### Specialization of cost equations eval_show_parms_10/2 
* CE 11 is refined into CE [18] 


#### Refined cost equations eval_show_parms_10/2 
* CE 18: eval_show_parms_10(V__show_parms_names,B) = 1+ eval_show_parms_bb4_in(V__show_parms_names,C,D,V__show_parms_names):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_show_parms_10/2 
* CEs [18] --> Loop 14 

#### Loops of eval_show_parms_10/2 
* Loop 14: eval_show_parms_10(V__show_parms_names,B) [] 

### Ranking functions of CR eval_show_parms_10(V__show_parms_names,B) 

#### Partial ranking functions of CR eval_show_parms_10(V__show_parms_names,B) 


### Resulting Chains:eval_show_parms_10(V__show_parms_names,B) 
* [14]


### Merging Chains  eval_show_parms_10/2 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_show_parms_bb0_in/2 
* CE 4 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 3 is refined into CE [23] 
* CE 6 is refined into CE [24] 


#### Refined cost equations eval_show_parms_bb0_in/2 
* CE 19: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb1_in(C,D,E,C):1+ eval_show_parms_10(C,B):1
     [C>=2,C=V__show_parms_names+1,E=3,D=0] 
* CE 20: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb4_in(C,D,E,C):1
     [C>=2,C=V__show_parms_names+1,E=2,D=0] 
* CE 21: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb1_in(C,D,E,C):1+ eval_show_parms_10(C,B):1
     [0>=C,C=V__show_parms_names+1,E=3,D=0] 
* CE 22: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb4_in(C,D,E,C):1
     [0>=C,C=V__show_parms_names+1,E=2,D=0] 
* CE 23: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb1_in(C,D,E,F):1+ eval_show_parms_10(G,B):1
     [G=1,F=1,E=3,D=0,C=1,V__show_parms_names=0] 
* CE 24: eval_show_parms_bb0_in(V__show_parms_names,B) = 1+ eval_show_parms_bb4_in(C,D,E,F):1
     [F=1,E=2,D=0,C=1,V__show_parms_names=0] 

### Cost equations --> "Loop" of eval_show_parms_bb0_in/2 
* CEs [19,20] --> Loop 15 
* CEs [21,22] --> Loop 16 
* CEs [23,24] --> Loop 17 

#### Loops of eval_show_parms_bb0_in/2 
* Loop 15: eval_show_parms_bb0_in(V__show_parms_names,B) [V__show_parms_names>=1] 
* Loop 16: eval_show_parms_bb0_in(V__show_parms_names,B) [0>=V__show_parms_names+1] 
* Loop 17: eval_show_parms_bb0_in(V__show_parms_names,B) [V__show_parms_names=0] 

### Ranking functions of CR eval_show_parms_bb0_in(V__show_parms_names,B) 

#### Partial ranking functions of CR eval_show_parms_bb0_in(V__show_parms_names,B) 


### Resulting Chains:eval_show_parms_bb0_in(V__show_parms_names,B) 
* [17]
* [16]
* [15]


### Merging Chains  eval_show_parms_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations eval_show_parms_start/2 
* CE 2 is refined into CE [25,26,27] 


#### Refined cost equations eval_show_parms_start/2 
* CE 25: eval_show_parms_start(V__show_parms_names,B) = 0+ eval_show_parms_bb0_in(C,B):1
     [C=0,V__show_parms_names=0] 
* CE 26: eval_show_parms_start(V__show_parms_names,B) = 0+ eval_show_parms_bb0_in(V__show_parms_names,B):2
     [0>=V__show_parms_names+1] 
* CE 27: eval_show_parms_start(V__show_parms_names,B) = 0+ eval_show_parms_bb0_in(V__show_parms_names,B):3
     [V__show_parms_names>=1] 

### Cost equations --> "Loop" of eval_show_parms_start/2 
* CEs [27] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of eval_show_parms_start/2 
* Loop 18: eval_show_parms_start(V__show_parms_names,B) [V__show_parms_names>=1] 
* Loop 19: eval_show_parms_start(V__show_parms_names,B) [0>=V__show_parms_names+1] 
* Loop 20: eval_show_parms_start(V__show_parms_names,B) [V__show_parms_names=0] 

### Ranking functions of CR eval_show_parms_start(V__show_parms_names,B) 

#### Partial ranking functions of CR eval_show_parms_start(V__show_parms_names,B) 


### Resulting Chains:eval_show_parms_start(V__show_parms_names,B) 
* [20]
* [19]
* [18]


### Merging Chains  eval_show_parms_start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) -> [eval_show_parms_bb1_in(V__show_parms_names',V_i_0',B',C')] 
1
#### Cost of phase [10]:eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C) -> [eval_show_parms_bb1_in(V__show_parms_names',V_i_0',B',C')] 
1*it(10)+0
  Such that:it(10) =< -V_i_0+40
it(10) =< -V_i_0+V_i_0'

#### Cost of chains of eval_show_parms_bb1_in(V__show_parms_names,V_i_0,B,C):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_i_0+40

  with precondition: [B=3,V__show_parms_names=C,39>=V_i_0,V_i_0>=0] 


#### Cost of loops [12] 

 * loop 12:eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) -> [eval_show_parms_bb4_in(V__show_parms_names',V_i_1',B',C')] 
1
#### Cost of phase [12]:eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C) -> [eval_show_parms_bb4_in(V__show_parms_names',V_i_1',B',C')] 
1*it(12)+0
  Such that:it(12) =< -V_i_1+40
it(12) =< -V_i_1+V_i_1'

#### Cost of chains of eval_show_parms_bb4_in(V__show_parms_names,V_i_1,B,C):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -V_i_1+40

  with precondition: [B=2,V__show_parms_names=C,39>=V_i_1,V_i_1>=0] 


#### Cost of chains of eval_show_parms_10(V__show_parms_names,B):
* Chain [14]: 1*s(1)+1
  Such that:s(1) =< 40

  with precondition: [] 


#### Cost of chains of eval_show_parms_bb0_in(V__show_parms_names,B):
* Chain [17]: 122
  with precondition: [V__show_parms_names=0] 

* Chain [16]: 122
  with precondition: [0>=V__show_parms_names+1] 

* Chain [15]: 122
  with precondition: [V__show_parms_names>=1] 


#### Cost of chains of eval_show_parms_start(V__show_parms_names,B):
* Chain [20]: 122
  with precondition: [V__show_parms_names=0] 

* Chain [19]: 122
  with precondition: [0>=V__show_parms_names+1] 

* Chain [18]: 122
  with precondition: [V__show_parms_names>=1] 


Closed-form bounds of eval_show_parms_start(V__show_parms_names,B): 
-------------------------------------
* Chain [20] with precondition: [V__show_parms_names=0] 
    - Upper bound: 122 
    - Complexity: constant 
* Chain [19] with precondition: [0>=V__show_parms_names+1] 
    - Upper bound: 122 
    - Complexity: constant 
* Chain [18] with precondition: [V__show_parms_names>=1] 
    - Upper bound: 122 
    - Complexity: constant 

### Maximum cost of eval_show_parms_start(V__show_parms_names,B): 122 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 27 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 107 ms.

