WARNING: Excluded non-linear constraints:[M=4*K*L]
WARNING: Excluded non-linear constraints:[D=4*B*C]
Warning: Ignored call to eval_cvt_by_tile_stop/1 in equation eval_cvt_by_tile_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_cvt_by_tile_bb17_in/1]
1. non_recursive  : [eval_cvt_by_tile_20/1]
2. non_recursive  : [eval_cvt_by_tile_19/1]
3. non_recursive  : [eval_cvt_by_tile_18/1]
4. recursive  : [eval_cvt_by_tile_50/10,eval_cvt_by_tile_51/10,eval_cvt_by_tile_53/11,eval_cvt_by_tile_54/11,eval_cvt_by_tile_56/12,eval_cvt_by_tile_57/12,eval_cvt_by_tile_bb10_in/9]
5. recursive  : [eval_cvt_by_tile_34/8,eval_cvt_by_tile_35/8,eval_cvt_by_tile_59/9,eval_cvt_by_tile_60/10,eval_cvt_by_tile_64/11,eval_cvt_by_tile_65/11,eval_cvt_by_tile_bb8_in/8,loop_cont_eval_cvt_by_tile_bb10_in/10]
6. recursive  : [eval_cvt_by_tile_bb14_in/5,eval_cvt_by_tile_bb7_in/3,loop_cont_eval_cvt_by_tile_bb8_in/6]
7. non_recursive  : [eval_cvt_by_tile_74/1]
8. non_recursive  : [eval_cvt_by_tile_73/1]
9. non_recursive  : [eval_cvt_by_tile_72/1]
10. non_recursive  : [loop_cont_eval_cvt_by_tile_bb7_in/2]
11. non_recursive  : [eval_cvt_by_tile_bb6_in/2]
12. non_recursive  : [eval_cvt_by_tile_29/1]
13. non_recursive  : [eval_cvt_by_tile_28/1]
14. non_recursive  : [eval_cvt_by_tile_27/1]
15. non_recursive  : [eval_cvt_by_tile_26/1]
16. non_recursive  : [eval_cvt_by_tile_25/2]
17. non_recursive  : [eval_cvt_by_tile_17/1]
18. non_recursive  : [eval_cvt_by_tile_16/2]
19. non_recursive  : [eval_cvt_by_tile_10/1]
20. non_recursive  : [eval_cvt_by_tile_9/2]
21. non_recursive  : [eval_cvt_by_tile_8/1]
22. non_recursive  : [eval_cvt_by_tile_7/2]
23. non_recursive  : [eval_cvt_by_tile_77/1]
24. non_recursive  : [eval_cvt_by_tile_76/1]
25. non_recursive  : [eval_cvt_by_tile_75/1]
26. non_recursive  : [eval_cvt_by_tile_bb16_in/1]
27. non_recursive  : [eval_cvt_by_tile_5/1]
28. non_recursive  : [eval_cvt_by_tile_4/1]
29. non_recursive  : [eval_cvt_by_tile_3/1]
30. non_recursive  : [eval_cvt_by_tile_2/1]
31. non_recursive  : [eval_cvt_by_tile_1/1]
32. non_recursive  : [eval_cvt_by_tile_0/1]
33. non_recursive  : [eval_cvt_by_tile_bb0_in/1]
34. non_recursive  : [eval_cvt_by_tile_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_cvt_by_tile_bb10_in/9
5. SCC is partially evaluated into eval_cvt_by_tile_bb8_in/8
6. SCC is partially evaluated into eval_cvt_by_tile_bb7_in/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_cvt_by_tile_bb6_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_cvt_by_tile_26/1
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_cvt_by_tile_17/1
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_cvt_by_tile_5/1
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into eval_cvt_by_tile_3/1
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_cvt_by_tile_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cvt_by_tile_bb10_in/9 
* CE 23 is refined into CE [24] 
* CE 22 is refined into CE [25] 


#### Refined cost equations eval_cvt_by_tile_bb10_in/9 
* CE 24: eval_cvt_by_tile_bb10_in(A,B,C,D,E,A,B,C,D) = 0
     [D>=0,E=2] 
* CE 25: eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) = 1+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,C,D,E,F)
     [V_i_row_0>=0,V_i_row_0+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_cvt_by_tile_bb10_in/9 
* CEs [25] --> Loop 17 
* CEs [24] --> Loop 18 

#### Loops of eval_cvt_by_tile_bb10_in/9 
* Loop 17: eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F)->  eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0',B',C,D,E,F)
                  [V_i_row_0>=0,V_i_row_0+1=V_i_row_0',B'=2,B=2] 
* Loop 18: eval_cvt_by_tile_bb10_in(A,B,C,D,E,A,B,C,D) [D>=0,E=2] 

### Ranking functions of CR eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) 


### Resulting Chains:eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) 
* [[17]]...
* [[17],18]
* [18]


### Merging Chains  eval_cvt_by_tile_bb10_in/9 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 
* [[[17]]] --> 3 


### Specialization of cost equations eval_cvt_by_tile_bb8_in/8 
* CE 21 is refined into CE [26] 
* CE 15 is refined into CE [27] 
* CE 17 is refined into CE [28,29,30] 
* CE 16 is refined into CE [31] 
* CE 18 is refined into CE [32,33,34] 
* CE 19 is refined into CE [35,36,37] 
* CE 20 is refined into CE [38,39,40] 


#### Refined cost equations eval_cvt_by_tile_bb8_in/8 
* CE 26: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,A) = 0
     [D=3] 
* CE 27: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 0
     [A>=1,E=0,D=3] 
* CE 28: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 1+ eval_cvt_by_tile_bb10_in(A,B,C,F,G,A,B,C,H):1
     [A>=1,H=0,G=2,F=0,E=0,D=3] 
* CE 29: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 1+ eval_cvt_by_tile_bb10_in(A,B,C,F,G,A,B,C,H):2
     [H>=1,A>=1,G=2,F=0,E=0,D=3] 
* CE 30: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 1+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,C,D,E,I):3
     [V_ok_1>=1,H=2,G=0,F=0,B=3] 
* CE 31: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 0
     [0>=A+1,E=0,D=3] 
* CE 32: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 1+ eval_cvt_by_tile_bb10_in(A,B,C,F,G,A,B,C,H):1
     [0>=A+1,H=0,G=2,F=0,E=0,D=3] 
* CE 33: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) = 1+ eval_cvt_by_tile_bb10_in(A,B,C,F,G,A,B,C,H):2
     [H>=1,0>=A+1,G=2,F=0,E=0,D=3] 
* CE 34: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 1+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,C,D,E,I):3
     [0>=V_ok_1+1,H=2,G=0,F=0,B=3] 
* CE 35: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,V_ok_1,V_row_0,V_col_0,I):1+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,J,K,C,D,E,F)
     [V_ok_1>=1,K=3,I=0,H=2,G=0,B=3] 
* CE 36: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,V_ok_1,V_row_0,V_col_0,I):2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,J,K,C,D,E,F)
     [I>=1,V_ok_1>=1,K=3,H=2,G=0,B=3] 
* CE 37: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,I,J,K,L):3
     [V_ok_1>=1,M=3,H=2,G=0,B=3] 
* CE 38: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,V_ok_1,V_row_0,V_col_0,I):1+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,J,K,C,D,E,F)
     [0>=V_ok_1+1,K=3,I=0,H=2,G=0,B=3] 
* CE 39: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,V_ok_1,V_row_0,V_col_0,I):2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,J,K,C,D,E,F)
     [I>=1,0>=V_ok_1+1,K=3,H=2,G=0,B=3] 
* CE 40: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) = 2+ eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,G,H,I,J,K,L):3
     [0>=V_ok_1+1,M=3,H=2,G=0,B=3] 

### Cost equations --> "Loop" of eval_cvt_by_tile_bb8_in/8 
* CEs [30,37] --> Loop 19 
* CEs [34,40] --> Loop 20 
* CEs [35,36] --> Loop 21 
* CEs [38,39] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [27,28,29] --> Loop 24 
* CEs [31,32,33] --> Loop 25 

#### Loops of eval_cvt_by_tile_bb8_in/8 
* Loop 19: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) [V_ok_1>=1,B=3] 
* Loop 20: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) [0>=V_ok_1+1,B=3] 
* Loop 21: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F)->  eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0',B',C,D,E,F)
                  [V_ok_1>=1,B'=3,B=3] 
* Loop 22: eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F)->  eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0',B',C,D,E,F)
                  [0>=V_ok_1+1,B'=3,B=3] 
* Loop 23: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,A) [D=3] 
* Loop 24: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) [A>=1,E=0,D=3] 
* Loop 25: eval_cvt_by_tile_bb8_in(A,B,C,D,A,B,C,E) [0>=A+1,E=0,D=3] 

### Ranking functions of CR eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) 


### Resulting Chains:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) 
* [[22]]...
* [[22],25]
* [[22],23]
* [[22],20]...
* [[21]]...
* [[21],24]
* [[21],23]
* [[21],19]...
* [25]
* [24]
* [23]
* [20]...
* [19]...


### Merging Chains  eval_cvt_by_tile_bb8_in/8 into  External patterns of execution 
* [[25],[25,[22]]] --> 1 
* [[24],[24,[21]]] --> 2 
* [[23]] --> 3 
* [[23,[22]]] --> 4 
* [[23,[21]]] --> 5 
* [[20],[20,[22]]] --> 6 
* [[19],[19,[21]]] --> 7 
* [[[22]]] --> 8 
* [[[21]]] --> 9 


### Specialization of cost equations eval_cvt_by_tile_bb7_in/3 
* CE 14 is refined into CE [41] 
* CE 12 is refined into CE [42,43,44,45,46] 
* CE 13 is refined into CE [47,48,49,50,51] 


#### Refined cost equations eval_cvt_by_tile_bb7_in/3 
* CE 41: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 0
     [B=4] 
* CE 42: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,F):2+ eval_cvt_by_tile_bb7_in(G,H,I)
     [V_ok_1>=1,I=4,G=0,F=0,D=3,C=0,B=4] 
* CE 43: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,V_ok_1):3+ eval_cvt_by_tile_bb7_in(V_ok_1,F,G)
     [V_ok_1>=1,G=4,E=0,D=3,C=0,B=4] 
* CE 44: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,V_ok_1):5+ eval_cvt_by_tile_bb7_in(V_ok_1,F,G)
     [V_ok_1>=1,G=4,D=3,C=0,B=4] 
* CE 45: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,E,F,G,H):7
     [V_ok_1>=1,I=4,D=3,C=0,B=4] 
* CE 46: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,E,F,G,H):9
     [V_ok_1>=1,I=4,D=3,C=0,B=4] 
* CE 47: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,F):1+ eval_cvt_by_tile_bb7_in(G,H,I)
     [0>=V_ok_1+1,I=4,G=0,F=0,D=3,C=0,B=4] 
* CE 48: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,V_ok_1):3+ eval_cvt_by_tile_bb7_in(V_ok_1,F,G)
     [0>=V_ok_1+1,G=4,E=0,D=3,C=0,B=4] 
* CE 49: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,V_ok_1,V_row_0,E,V_ok_1):4+ eval_cvt_by_tile_bb7_in(V_ok_1,F,G)
     [0>=V_ok_1+1,G=4,D=3,C=0,B=4] 
* CE 50: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,E,F,G,H):6
     [0>=V_ok_1+1,I=4,D=3,C=0,B=4] 
* CE 51: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) = 2+ eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,C,D,E,F,G,H):8
     [0>=V_ok_1+1,I=4,D=3,C=0,B=4] 

### Cost equations --> "Loop" of eval_cvt_by_tile_bb7_in/3 
* CEs [45,46] --> Loop 26 
* CEs [50,51] --> Loop 27 
* CEs [43,44] --> Loop 28 
* CEs [48,49] --> Loop 29 
* CEs [42] --> Loop 30 
* CEs [47] --> Loop 31 
* CEs [41] --> Loop 32 

#### Loops of eval_cvt_by_tile_bb7_in/3 
* Loop 26: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) [V_ok_1>=1,B=4] 
* Loop 27: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) [0>=V_ok_1+1,B=4] 
* Loop 28: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B)->  eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0',B')
                  [V_ok_1>=1,B'=4,B=4] 
* Loop 29: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B)->  eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0',B')
                  [0>=V_ok_1+1,B'=4,B=4] 
* Loop 30: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B)->  eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')
                  [V_ok_1>=1,B'=4,V_ok_1'=0,B=4] 
* Loop 31: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B)->  eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')
                  [0>=V_ok_1+1,B'=4,V_ok_1'=0,B=4] 
* Loop 32: eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) [B=4] 

### Ranking functions of CR eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) 

#### Partial ranking functions of CR eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) 


### Resulting Chains:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) 
* [[28]]...
* [[28],32]
* [[28],30,32]
* [[28],26]...
* [32]
* [30,32]
* [26]...


### Merging Chains  eval_cvt_by_tile_bb7_in/3 into  External patterns of execution 
* [[32,30],[32],[32,30,[28]],[32,[28]]] --> 1 
* [[26],[26,[28]]] --> 2 
* [[[28]]] --> 3 


### Specialization of cost equations eval_cvt_by_tile_bb6_in/2 
* CE 11 is refined into CE [52,53,54] 


#### Refined cost equations eval_cvt_by_tile_bb6_in/2 
* CE 52: eval_cvt_by_tile_bb6_in(V_ok_0,B) = 1+ eval_cvt_by_tile_bb7_in(V_ok_0,C,D):1
     [V_ok_0>=0,1>=V_ok_0,D=4,C=0] 
* CE 53: eval_cvt_by_tile_bb6_in(V_ok_0,B) = 1+ eval_cvt_by_tile_bb7_in(C,D,E):2
     [E=4,D=0,C=1,V_ok_0=1] 
* CE 54: eval_cvt_by_tile_bb6_in(V_ok_0,B) = 1+ eval_cvt_by_tile_bb7_in(C,D,E):3
     [E=4,D=0,C=1,V_ok_0=1] 

### Cost equations --> "Loop" of eval_cvt_by_tile_bb6_in/2 
* CEs [53,54] --> Loop 33 
* CEs [52] --> Loop 34 

#### Loops of eval_cvt_by_tile_bb6_in/2 
* Loop 33: eval_cvt_by_tile_bb6_in(V_ok_0,B) [V_ok_0=1] 
* Loop 34: eval_cvt_by_tile_bb6_in(V_ok_0,B) [V_ok_0>=0,1>=V_ok_0] 

### Ranking functions of CR eval_cvt_by_tile_bb6_in(V_ok_0,B) 

#### Partial ranking functions of CR eval_cvt_by_tile_bb6_in(V_ok_0,B) 


### Resulting Chains:eval_cvt_by_tile_bb6_in(V_ok_0,B) 
* [34]
* [33]...


### Merging Chains  eval_cvt_by_tile_bb6_in/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_cvt_by_tile_26/1 
* CE 9 is refined into CE [55] 
* CE 10 is refined into CE [56,57] 


#### Refined cost equations eval_cvt_by_tile_26/1 
* CE 55: eval_cvt_by_tile_26(B) = 0+ eval_cvt_by_tile_bb6_in(C,B):1
     [C=0] 
* CE 56: eval_cvt_by_tile_26(B) = 0+ eval_cvt_by_tile_bb6_in(C,B):1
     [C=1] 
* CE 57: eval_cvt_by_tile_26(B) = 0+ eval_cvt_by_tile_bb6_in(C,B):2
     [C=1] 

### Cost equations --> "Loop" of eval_cvt_by_tile_26/1 
* CEs [57] --> Loop 35 
* CEs [55,56] --> Loop 36 

#### Loops of eval_cvt_by_tile_26/1 
* Loop 35: eval_cvt_by_tile_26(B) [] 
* Loop 36: eval_cvt_by_tile_26(B) [] 

### Ranking functions of CR eval_cvt_by_tile_26(B) 

#### Partial ranking functions of CR eval_cvt_by_tile_26(B) 


### Resulting Chains:eval_cvt_by_tile_26(B) 
* [36]
* [35]...


### Merging Chains  eval_cvt_by_tile_26/1 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_cvt_by_tile_17/1 
* CE 7 is refined into CE [58] 
* CE 8 is refined into CE [59,60] 


#### Refined cost equations eval_cvt_by_tile_17/1 
* CE 58: eval_cvt_by_tile_17(B) = 0
     [] 
* CE 59: eval_cvt_by_tile_17(B) = 0+ eval_cvt_by_tile_26(B):1
     [] 
* CE 60: eval_cvt_by_tile_17(B) = 0+ eval_cvt_by_tile_26(B):2
     [] 

### Cost equations --> "Loop" of eval_cvt_by_tile_17/1 
* CEs [60] --> Loop 37 
* CEs [58,59] --> Loop 38 

#### Loops of eval_cvt_by_tile_17/1 
* Loop 37: eval_cvt_by_tile_17(B) [] 
* Loop 38: eval_cvt_by_tile_17(B) [] 

### Ranking functions of CR eval_cvt_by_tile_17(B) 

#### Partial ranking functions of CR eval_cvt_by_tile_17(B) 


### Resulting Chains:eval_cvt_by_tile_17(B) 
* [38]
* [37]...


### Merging Chains  eval_cvt_by_tile_17/1 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_cvt_by_tile_5/1 
* CE 5 is refined into CE [61,62] 
* CE 6 is refined into CE [63] 


#### Refined cost equations eval_cvt_by_tile_5/1 
* CE 61: eval_cvt_by_tile_5(B) = 0+ eval_cvt_by_tile_17(B):1
     [] 
* CE 62: eval_cvt_by_tile_5(B) = 0+ eval_cvt_by_tile_17(B):2
     [] 
* CE 63: eval_cvt_by_tile_5(B) = 0
     [] 

### Cost equations --> "Loop" of eval_cvt_by_tile_5/1 
* CEs [61,63] --> Loop 39 
* CEs [62] --> Loop 40 

#### Loops of eval_cvt_by_tile_5/1 
* Loop 39: eval_cvt_by_tile_5(B) [] 
* Loop 40: eval_cvt_by_tile_5(B) [] 

### Ranking functions of CR eval_cvt_by_tile_5(B) 

#### Partial ranking functions of CR eval_cvt_by_tile_5(B) 


### Resulting Chains:eval_cvt_by_tile_5(B) 
* [40]...
* [39]


### Merging Chains  eval_cvt_by_tile_5/1 into  External patterns of execution 
* [[39]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_cvt_by_tile_3/1 
* CE 3 is refined into CE [64,65] 
* CE 4 is refined into CE [66] 


#### Refined cost equations eval_cvt_by_tile_3/1 
* CE 64: eval_cvt_by_tile_3(B) = 0+ eval_cvt_by_tile_5(B):1
     [] 
* CE 65: eval_cvt_by_tile_3(B) = 0+ eval_cvt_by_tile_5(B):2
     [] 
* CE 66: eval_cvt_by_tile_3(B) = 0
     [] 

### Cost equations --> "Loop" of eval_cvt_by_tile_3/1 
* CEs [64,66] --> Loop 41 
* CEs [65] --> Loop 42 

#### Loops of eval_cvt_by_tile_3/1 
* Loop 41: eval_cvt_by_tile_3(B) [] 
* Loop 42: eval_cvt_by_tile_3(B) [] 

### Ranking functions of CR eval_cvt_by_tile_3(B) 

#### Partial ranking functions of CR eval_cvt_by_tile_3(B) 


### Resulting Chains:eval_cvt_by_tile_3(B) 
* [42]...
* [41]


### Merging Chains  eval_cvt_by_tile_3/1 into  External patterns of execution 
* [[41]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations eval_cvt_by_tile_start/1 
* CE 2 is refined into CE [67,68] 


#### Refined cost equations eval_cvt_by_tile_start/1 
* CE 67: eval_cvt_by_tile_start(B) = 0+ eval_cvt_by_tile_3(B):1
     [] 
* CE 68: eval_cvt_by_tile_start(B) = 0+ eval_cvt_by_tile_3(B):2
     [] 

### Cost equations --> "Loop" of eval_cvt_by_tile_start/1 
* CEs [68] --> Loop 43 
* CEs [67] --> Loop 44 

#### Loops of eval_cvt_by_tile_start/1 
* Loop 43: eval_cvt_by_tile_start(B) [] 
* Loop 44: eval_cvt_by_tile_start(B) [] 

### Ranking functions of CR eval_cvt_by_tile_start(B) 

#### Partial ranking functions of CR eval_cvt_by_tile_start(B) 


### Resulting Chains:eval_cvt_by_tile_start(B) 
* [44]
* [43]...


### Merging Chains  eval_cvt_by_tile_start/1 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb10_in(V_ok_1',V_row_0',V_col_0',V_i_row_0',B',C',D',E',F')] 
1
#### Cost of phase [17]:eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb10_in(V_ok_1',V_row_0',V_col_0',V_i_row_0',B',C',D',E',F')] 
1*it(17)+0
#### Cost of phase [17]:eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb10_in(V_ok_1',V_row_0',V_col_0',V_i_row_0',B',C',D',E',F')] 
1*it(17)+0
#### Cost of chains of eval_cvt_by_tile_bb10_in(V_ok_1,V_row_0,V_col_0,V_i_row_0,B,C,D,E,F):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [V_i_row_0>=0,B=2] 

* Chain [[17],18]: 1*it(17)+0
  with precondition: [B=2,V_ok_1=C,V_row_0=D,V_col_0=E,V_i_row_0>=0,F>=V_i_row_0+1] 

* Chain [18]: 0
  with precondition: [B=2,C=V_ok_1,D=V_row_0,E=V_col_0,V_i_row_0=F,V_i_row_0>=0] 


#### Cost of loops [22] 

 * loop 22:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(2)+0
#### Cost of phase [22]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(3)+0
#### Cost of phase [22]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(3)+0
#### Cost of phase [22]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(3)+0
#### Cost of phase [22]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(3)+0
#### Cost of loops [21] 

 * loop 21:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(8)+0
#### Cost of phase [21]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(9)+0
#### Cost of phase [21]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(9)+0
#### Cost of phase [21]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(9)+0
#### Cost of phase [21]:eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F) -> [eval_cvt_by_tile_bb8_in(V_ok_1',V_row_0',V_col_0',B',C',D',E',F')] 
1*s(9)+0
#### Cost of chains of eval_cvt_by_tile_bb8_in(V_ok_1,V_row_0,V_col_0,B,C,D,E,F):
* Chain [[22]]...: 1*s(3)+0
  with precondition: [0>=V_ok_1+1,B=3] 

* Chain [[22],25]: 2*aux(2)+0
  with precondition: [B=3,F=0,V_ok_1=C,V_row_0=D,0>=V_ok_1+1] 

* Chain [[22],23]: 1*s(3)+0
  with precondition: [B=3,V_ok_1=C,V_row_0=D,V_ok_1=F,0>=V_ok_1+1] 

* Chain [[22],20]...: 2*aux(3)+0
  with precondition: [B=3,0>=V_ok_1+1] 

* Chain [[21]]...: 1*s(9)+0
  with precondition: [V_ok_1>=1,B=3] 

* Chain [[21],24]: 2*aux(5)+0
  with precondition: [B=3,F=0,V_ok_1=C,V_row_0=D,V_ok_1>=1] 

* Chain [[21],23]: 1*s(9)+0
  with precondition: [B=3,V_ok_1=C,V_row_0=D,V_ok_1=F,V_ok_1>=1] 

* Chain [[21],19]...: 2*aux(6)+0
  with precondition: [B=3,V_ok_1>=1] 

* Chain [25]: 1*aux(2)+0
  with precondition: [B=3,F=0,D=V_row_0,E=V_col_0,V_ok_1=C,0>=V_ok_1+1] 

* Chain [24]: 1*aux(5)+0
  with precondition: [B=3,F=0,D=V_row_0,E=V_col_0,V_ok_1=C,V_ok_1>=1] 

* Chain [23]: 0
  with precondition: [B=3,D=V_row_0,E=V_col_0,V_ok_1=C,V_ok_1=F] 

* Chain [20]...: 1*aux(3)+0
  with precondition: [B=3,0>=V_ok_1+1] 

* Chain [19]...: 1*aux(6)+0
  with precondition: [B=3,V_ok_1>=1] 


#### Cost of loops [28] 

 * loop 28:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) -> [eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')] 
1*s(22)+0
#### Cost of phase [28]:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) -> [eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')] 
1*s(23)+0
#### Cost of phase [28]:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) -> [eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')] 
1*s(23)+0
#### Cost of phase [28]:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) -> [eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')] 
1*s(23)+0
#### Cost of phase [28]:eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B) -> [eval_cvt_by_tile_bb7_in(V_ok_1',V_row_0',B')] 
1*s(23)+0
#### Cost of chains of eval_cvt_by_tile_bb7_in(V_ok_1,V_row_0,B):
* Chain [[28]]...: 1*s(23)+0
  with precondition: [V_ok_1>=1,B=4] 

* Chain [[28],32]: 1*s(23)+0
  with precondition: [V_ok_1=1,B=4] 

* Chain [[28],30,32]: 2*s(23)+2
  with precondition: [V_ok_1=1,B=4] 

* Chain [[28],26]...: 2*aux(12)+0
  with precondition: [V_ok_1=1,B=4] 

* Chain [32]: 0
  with precondition: [B=4,1>=V_ok_1,V_ok_1>=0] 

* Chain [30,32]: 1*s(24)+2
  with precondition: [V_ok_1=1,B=4] 

* Chain [26]...: 1*aux(12)+0
  with precondition: [V_ok_1=1,B=4] 


#### Cost of chains of eval_cvt_by_tile_bb6_in(V_ok_0,B):
* Chain [34]: 1*s(32)+1
  with precondition: [1>=V_ok_0,V_ok_0>=0] 

* Chain [33]...: 1*aux(15)+0
  with precondition: [V_ok_0=1] 


#### Cost of chains of eval_cvt_by_tile_26(B):
* Chain [36]: 1*aux(16)+0
  with precondition: [] 

* Chain [35]...: 1*s(37)+0
  with precondition: [] 


#### Cost of chains of eval_cvt_by_tile_17(B):
* Chain [38]: 1*aux(17)+0
  with precondition: [] 

* Chain [37]...: 1*s(39)+0
  with precondition: [] 


#### Cost of chains of eval_cvt_by_tile_5(B):
* Chain [40]...: 1*s(40)+0
  with precondition: [] 

* Chain [39]: 1*aux(18)+0
  with precondition: [] 


#### Cost of chains of eval_cvt_by_tile_3(B):
* Chain [42]...: 1*s(42)+0
  with precondition: [] 

* Chain [41]: 1*aux(19)+0
  with precondition: [] 


#### Cost of chains of eval_cvt_by_tile_start(B):
* Chain [44]: 1*s(44)+0
  with precondition: [] 

* Chain [43]...: 1*s(45)+0
  with precondition: [] 


Closed-form bounds of eval_cvt_by_tile_start(B): 
-------------------------------------
* Chain [44] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cvt_by_tile_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 76 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 101 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 27 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 24 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 363 ms.

