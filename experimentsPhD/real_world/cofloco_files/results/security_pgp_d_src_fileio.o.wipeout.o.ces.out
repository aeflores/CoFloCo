Warning: Ignored call to eval_wipeout_stop/1 in equation loop_cont_eval_wipeout_bb5_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_wipeout_bb2_in/4]
1. recursive  : [eval_wipeout_bb1_in/3,loop_cont_eval_wipeout_bb2_in/4]
2. recursive  : [eval_wipeout_bb6_in/3]
3. recursive  : [eval_wipeout_bb7_in/3]
4. recursive  : [eval_wipeout_bb8_in/3]
5. recursive  : [eval_wipeout_29/2,eval_wipeout_30/2,eval_wipeout_32/2,eval_wipeout_33/2,eval_wipeout_bb5_in/2,loop_cont_eval_wipeout_bb6_in/3,loop_cont_eval_wipeout_bb7_in/3,loop_cont_eval_wipeout_bb8_in/3]
6. non_recursive  : [loop_cont_eval_wipeout_bb5_in/2]
7. non_recursive  : [loop_cont_eval_wipeout_bb1_in/3]
8. non_recursive  : [eval_wipeout_3/2]
9. non_recursive  : [eval_wipeout_2/2]
10. non_recursive  : [eval_wipeout_1/1]
11. non_recursive  : [eval_wipeout_0/1]
12. non_recursive  : [eval_wipeout_bb0_in/1]
13. non_recursive  : [eval_wipeout_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_wipeout_bb2_in/4
1. SCC is partially evaluated into eval_wipeout_bb1_in/3
2. SCC is partially evaluated into eval_wipeout_bb6_in/3
3. SCC is partially evaluated into eval_wipeout_bb7_in/3
4. SCC is partially evaluated into eval_wipeout_bb8_in/3
5. SCC is partially evaluated into eval_wipeout_bb5_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_wipeout_bb1_in/3
8. SCC is partially evaluated into eval_wipeout_3/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_wipeout_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_wipeout_bb2_in/4 
* CE 9 is refined into CE [22] 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24] 


#### Refined cost equations eval_wipeout_bb2_in/4 
* CE 22: eval_wipeout_bb2_in(A,B,C,A) = 0
     [B>=32,C=7] 
* CE 23: eval_wipeout_bb2_in(A,B,C,A) = 0
     [B>=32,C=6] 
* CE 24: eval_wipeout_bb2_in(V_1,V_i_0,B,C) = 1+ eval_wipeout_bb2_in(V_1,D,B,C)
     [B>=6,V_i_0>=0,7>=B,31>=V_i_0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_wipeout_bb2_in/4 
* CEs [24] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

#### Loops of eval_wipeout_bb2_in/4 
* Loop 19: eval_wipeout_bb2_in(V_1,V_i_0,B,C)->  eval_wipeout_bb2_in(V_1,V_i_0',B,C)
                  [B>=6,V_i_0>=0,7>=B,31>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 20: eval_wipeout_bb2_in(A,B,C,A) [B>=32,C=7] 
* Loop 21: eval_wipeout_bb2_in(A,B,C,A) [B>=32,C=6] 

### Ranking functions of CR eval_wipeout_bb2_in(V_1,V_i_0,B,C) 
* RF of phase [19]: [-V_i_0+32]

#### Partial ranking functions of CR eval_wipeout_bb2_in(V_1,V_i_0,B,C) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -V_i_0+32


### Resulting Chains:eval_wipeout_bb2_in(V_1,V_i_0,B,C) 
* [[19],21]
* [[19],20]


### Merging Chains  eval_wipeout_bb2_in/4 into  External patterns of execution 
* [[21,[19]]] --> 1 
* [[20,[19]]] --> 2 


### Specialization of cost equations eval_wipeout_bb1_in/3 
* CE 5 is refined into CE [25] 
* CE 4 is refined into CE [26] 


#### Refined cost equations eval_wipeout_bb1_in/3 
* CE 25: eval_wipeout_bb1_in(V_1,B,C) = 2+ eval_wipeout_bb2_in(V_1,D,E,V_1):1+ eval_wipeout_bb1_in(V_1,B,C)
     [E=6,D=0] 
* CE 26: eval_wipeout_bb1_in(A,B,A) = 1+ eval_wipeout_bb2_in(A,C,D,A):2
     [D=7,C=0,B=7] 

### Cost equations --> "Loop" of eval_wipeout_bb1_in/3 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of eval_wipeout_bb1_in/3 
* Loop 22: eval_wipeout_bb1_in(A,B,A) [B=7] 
* Loop 23: eval_wipeout_bb1_in(V_1,B,C)->  eval_wipeout_bb1_in(V_1,B,C)
                  [] 

### Ranking functions of CR eval_wipeout_bb1_in(V_1,B,C) 

#### Partial ranking functions of CR eval_wipeout_bb1_in(V_1,B,C) 


### Resulting Chains:eval_wipeout_bb1_in(V_1,B,C) 
* [[23]]...
* [[23],22]
* [22]


### Merging Chains  eval_wipeout_bb1_in/3 into  External patterns of execution 
* [[22],[22,[23]]] --> 1 
* [[[23]]] --> 2 


### Specialization of cost equations eval_wipeout_bb6_in/3 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28] 


#### Refined cost equations eval_wipeout_bb6_in/3 
* CE 27: eval_wipeout_bb6_in(A,B,A) = 0
     [B=2] 
* CE 28: eval_wipeout_bb6_in(V_len_0,B,C) = 1+ eval_wipeout_bb6_in(V_len_0,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_wipeout_bb6_in/3 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of eval_wipeout_bb6_in/3 
* Loop 24: eval_wipeout_bb6_in(V_len_0,B,C)->  eval_wipeout_bb6_in(V_len_0,B',C)
                  [B'=2,B=2] 
* Loop 25: eval_wipeout_bb6_in(A,B,A) [B=2] 

### Ranking functions of CR eval_wipeout_bb6_in(V_len_0,B,C) 

#### Partial ranking functions of CR eval_wipeout_bb6_in(V_len_0,B,C) 


### Resulting Chains:eval_wipeout_bb6_in(V_len_0,B,C) 
* [[24]]...
* [[24],25]
* [25]


### Merging Chains  eval_wipeout_bb6_in/3 into  External patterns of execution 
* [[25],[25,[24]]] --> 1 
* [[[24]]] --> 2 


### Specialization of cost equations eval_wipeout_bb7_in/3 
* CE 18 is refined into CE [29] 
* CE 17 is refined into CE [30] 


#### Refined cost equations eval_wipeout_bb7_in/3 
* CE 29: eval_wipeout_bb7_in(A,B,A) = 0
     [B=3] 
* CE 30: eval_wipeout_bb7_in(V_len_0,B,C) = 1+ eval_wipeout_bb7_in(V_len_0,D,C)
     [D=3,B=3] 

### Cost equations --> "Loop" of eval_wipeout_bb7_in/3 
* CEs [30] --> Loop 26 
* CEs [29] --> Loop 27 

#### Loops of eval_wipeout_bb7_in/3 
* Loop 26: eval_wipeout_bb7_in(V_len_0,B,C)->  eval_wipeout_bb7_in(V_len_0,B',C)
                  [B'=3,B=3] 
* Loop 27: eval_wipeout_bb7_in(A,B,A) [B=3] 

### Ranking functions of CR eval_wipeout_bb7_in(V_len_0,B,C) 

#### Partial ranking functions of CR eval_wipeout_bb7_in(V_len_0,B,C) 


### Resulting Chains:eval_wipeout_bb7_in(V_len_0,B,C) 
* [[26]]...
* [[26],27]
* [27]


### Merging Chains  eval_wipeout_bb7_in/3 into  External patterns of execution 
* [[27],[27,[26]]] --> 1 
* [[[26]]] --> 2 


### Specialization of cost equations eval_wipeout_bb8_in/3 
* CE 21 is refined into CE [31] 
* CE 20 is refined into CE [32] 
* CE 19 is refined into CE [33] 


#### Refined cost equations eval_wipeout_bb8_in/3 
* CE 31: eval_wipeout_bb8_in(A,B,A) = 0
     [B=5] 
* CE 32: eval_wipeout_bb8_in(A,B,A) = 0
     [B=4] 
* CE 33: eval_wipeout_bb8_in(V_len_0,B,C) = 1+ eval_wipeout_bb8_in(V_len_0,B,C)
     [B>=4,5>=B] 

### Cost equations --> "Loop" of eval_wipeout_bb8_in/3 
* CEs [33] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [32] --> Loop 30 

#### Loops of eval_wipeout_bb8_in/3 
* Loop 28: eval_wipeout_bb8_in(V_len_0,B,C)->  eval_wipeout_bb8_in(V_len_0,B,C)
                  [B>=4,5>=B] 
* Loop 29: eval_wipeout_bb8_in(A,B,A) [B=5] 
* Loop 30: eval_wipeout_bb8_in(A,B,A) [B=4] 

### Ranking functions of CR eval_wipeout_bb8_in(V_len_0,B,C) 

#### Partial ranking functions of CR eval_wipeout_bb8_in(V_len_0,B,C) 


### Resulting Chains:eval_wipeout_bb8_in(V_len_0,B,C) 
* [[28]]...
* [[28],30]
* [[28],29]
* [30]
* [29]


### Merging Chains  eval_wipeout_bb8_in/3 into  External patterns of execution 
* [[30],[30,[28]]] --> 1 
* [[29],[29,[28]]] --> 2 
* [[[28]]] --> 3 


### Specialization of cost equations eval_wipeout_bb5_in/2 
* CE 14 is refined into CE [34] 
* CE 10 is refined into CE [35,36,37,38] 
* CE 12 is refined into CE [39,40,41,42] 
* CE 11 is refined into CE [43,44,45,46] 
* CE 13 is refined into CE [47,48,49,50] 


#### Refined cost equations eval_wipeout_bb5_in/2 
* CE 34: eval_wipeout_bb5_in(V_len_0,B) = 0
     [B=8,V_len_0=0] 
* CE 35: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,V_len_0):1+ eval_wipeout_bb5_in(F,G)
     [V_len_0>=1,V_len_0=F+8192,G=8,E=4,D=3,C=2,B=8] 
* CE 36: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,F):3
     [V_len_0>=1,G+8192=F,H=8,E=4,D=3,C=2,B=8] 
* CE 37: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,E):2
     [V_len_0>=1,F+8192=G,H=8,I=4,D=3,C=2,B=8] 
* CE 38: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,D):2
     [V_len_0>=1,E+8192=F,G=8,H=4,I=3,C=2,B=8] 
* CE 39: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,V_len_0):2+ eval_wipeout_bb5_in(F,G)
     [V_len_0>=1,G=8,F=0,E=5,D=3,C=2,B=8] 
* CE 40: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,F):3
     [V_len_0>=1,G=8,H=0,E=5,D=3,C=2,B=8] 
* CE 41: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,E):2
     [V_len_0>=1,F=8,G=0,H=5,D=3,C=2,B=8] 
* CE 42: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,D):2
     [V_len_0>=1,E=8,F=0,G=5,H=3,C=2,B=8] 
* CE 43: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,V_len_0):1+ eval_wipeout_bb5_in(F,G)
     [0>=V_len_0+1,V_len_0=F+8192,G=8,E=4,D=3,C=2,B=8] 
* CE 44: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,F):3
     [0>=V_len_0+1,G+8192=F,H=8,E=4,D=3,C=2,B=8] 
* CE 45: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,E):2
     [0>=V_len_0+1,F+8192=G,H=8,I=4,D=3,C=2,B=8] 
* CE 46: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,D):2
     [0>=V_len_0+1,E+8192=F,G=8,H=4,I=3,C=2,B=8] 
* CE 47: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,V_len_0):2+ eval_wipeout_bb5_in(F,G)
     [0>=V_len_0+1,G=8,F=0,E=5,D=3,C=2,B=8] 
* CE 48: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,V_len_0):1+ eval_wipeout_bb8_in(V_len_0,E,F):3
     [0>=V_len_0+1,G=8,H=0,E=5,D=3,C=2,B=8] 
* CE 49: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,V_len_0):1+ eval_wipeout_bb7_in(V_len_0,D,E):2
     [0>=V_len_0+1,F=8,G=0,H=5,D=3,C=2,B=8] 
* CE 50: eval_wipeout_bb5_in(V_len_0,B) = 4+ eval_wipeout_bb6_in(V_len_0,C,D):2
     [0>=V_len_0+1,E=8,F=0,G=5,H=3,C=2,B=8] 

### Cost equations --> "Loop" of eval_wipeout_bb5_in/2 
* CEs [36,37,38,40,41,42] --> Loop 31 
* CEs [44,45,46,48,49,50] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [43] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [34] --> Loop 37 

#### Loops of eval_wipeout_bb5_in/2 
* Loop 31: eval_wipeout_bb5_in(V_len_0,B) [V_len_0>=1,B=8] 
* Loop 32: eval_wipeout_bb5_in(V_len_0,B) [0>=V_len_0+1,B=8] 
* Loop 33: eval_wipeout_bb5_in(V_len_0,B)->  eval_wipeout_bb5_in(V_len_0',B')
                  [V_len_0>=1,V_len_0=V_len_0'+8192,B'=8,B=8] 
* Loop 34: eval_wipeout_bb5_in(V_len_0,B)->  eval_wipeout_bb5_in(V_len_0',B')
                  [0>=V_len_0+1,V_len_0=V_len_0'+8192,B'=8,B=8] 
* Loop 35: eval_wipeout_bb5_in(V_len_0,B)->  eval_wipeout_bb5_in(V_len_0',B')
                  [V_len_0>=1,B'=8,V_len_0'=0,B=8] 
* Loop 36: eval_wipeout_bb5_in(V_len_0,B)->  eval_wipeout_bb5_in(V_len_0',B')
                  [0>=V_len_0+1,B'=8,V_len_0'=0,B=8] 
* Loop 37: eval_wipeout_bb5_in(V_len_0,B) [B=8,V_len_0=0] 

### Ranking functions of CR eval_wipeout_bb5_in(V_len_0,B) 
* RF of phase [33]: [V_len_0/8192]

#### Partial ranking functions of CR eval_wipeout_bb5_in(V_len_0,B) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_len_0/8192


### Resulting Chains:eval_wipeout_bb5_in(V_len_0,B) 
* [[34]]...
* [[34],36,37]
* [[34],32]...
* [[33],[34]]...
* [[33],[34],36,37]
* [[33],[34],32]...
* [[33],37]
* [[33],36,37]
* [[33],35,37]
* [[33],32]...
* [[33],31]...
* [37]
* [36,37]
* [35,37]
* [32]...
* [31]...


### Merging Chains  eval_wipeout_bb5_in/2 into  External patterns of execution 
* [[37]] --> 1 
* [[37,36],[37,36,[34]]] --> 2 
* [[37,35],[37,35,[33]],[37,36,[33]],[37,[33]],[37,36,[34],[33]]] --> 3 
* [[32],[32,[34]]] --> 4 
* [[31],[32,[33]],[[34],[33]],[32,[34],[33]]] --> 5 
* [[31,[33]]] --> 6 
* [[[34]]] --> 7 


### Specialization of cost equations loop_cont_eval_wipeout_bb1_in/3 
* CE 6 is refined into CE [51,52,53,54,55,56,57] 


#### Refined cost equations loop_cont_eval_wipeout_bb1_in/3 
* CE 51: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(F,G):1
     [G=8,F=0,A=0,E=7] 
* CE 52: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):2
     [0>=A+1,F=8,E=7] 
* CE 53: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):3
     [A>=1,F=8,E=7] 
* CE 54: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):4
     [0>=A+1,F=8,E=7] 
* CE 55: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):5
     [A>=1,F=8,E=7] 
* CE 56: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):6
     [A>=8193,F=8,E=7] 
* CE 57: loop_cont_eval_wipeout_bb1_in(E,A,B) = 1+ eval_wipeout_bb5_in(A,F):7
     [0>=A+1,F=8,E=7] 

### Cost equations --> "Loop" of loop_cont_eval_wipeout_bb1_in/3 
* CEs [55,56] --> Loop 38 
* CEs [54,57] --> Loop 39 
* CEs [53] --> Loop 40 
* CEs [52] --> Loop 41 
* CEs [51] --> Loop 42 

#### Loops of loop_cont_eval_wipeout_bb1_in/3 
* Loop 38: loop_cont_eval_wipeout_bb1_in(E,A,B) [A>=1,E=7] 
* Loop 39: loop_cont_eval_wipeout_bb1_in(E,A,B) [0>=A+1,E=7] 
* Loop 40: loop_cont_eval_wipeout_bb1_in(E,A,B) [A>=1,E=7] 
* Loop 41: loop_cont_eval_wipeout_bb1_in(E,A,B) [0>=A+1,E=7] 
* Loop 42: loop_cont_eval_wipeout_bb1_in(E,A,B) [A=0,E=7] 

### Ranking functions of CR loop_cont_eval_wipeout_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_wipeout_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_wipeout_bb1_in(E,A,B) 
* [42]
* [41]
* [40]
* [39]...
* [38]...


### Merging Chains  loop_cont_eval_wipeout_bb1_in/3 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 
* [[39]] --> 4 
* [[38]] --> 5 


### Specialization of cost equations eval_wipeout_3/2 
* CE 3 is refined into CE [58,59,60,61,62,63] 


#### Refined cost equations eval_wipeout_3/2 
* CE 58: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(C,D,E):1+ loop_cont_eval_wipeout_bb1_in(F,G,B):1
     [G=0,F=7,E=0,D=7,C=0,V_1=0] 
* CE 59: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(V_1,C,V_1):1+ loop_cont_eval_wipeout_bb1_in(D,V_1,B):2
     [0>=V_1+1,D=7,C=7] 
* CE 60: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(V_1,C,V_1):1+ loop_cont_eval_wipeout_bb1_in(D,V_1,B):3
     [V_1>=1,D=7,C=7] 
* CE 61: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(V_1,C,V_1):1+ loop_cont_eval_wipeout_bb1_in(D,V_1,B):4
     [0>=V_1+1,D=7,C=7] 
* CE 62: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(V_1,C,V_1):1+ loop_cont_eval_wipeout_bb1_in(D,V_1,B):5
     [V_1>=1,D=7,C=7] 
* CE 63: eval_wipeout_3(V_1,B) = 1+ eval_wipeout_bb1_in(V_1,C,D):2
     [] 

### Cost equations --> "Loop" of eval_wipeout_3/2 
* CEs [61,62,63] --> Loop 43 
* CEs [60] --> Loop 44 
* CEs [59] --> Loop 45 
* CEs [58] --> Loop 46 

#### Loops of eval_wipeout_3/2 
* Loop 43: eval_wipeout_3(V_1,B) [] 
* Loop 44: eval_wipeout_3(V_1,B) [V_1>=1] 
* Loop 45: eval_wipeout_3(V_1,B) [0>=V_1+1] 
* Loop 46: eval_wipeout_3(V_1,B) [V_1=0] 

### Ranking functions of CR eval_wipeout_3(V_1,B) 

#### Partial ranking functions of CR eval_wipeout_3(V_1,B) 


### Resulting Chains:eval_wipeout_3(V_1,B) 
* [46]
* [45]
* [44]
* [43]...


### Merging Chains  eval_wipeout_3/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 
* [[43]] --> 4 


### Specialization of cost equations eval_wipeout_start/1 
* CE 2 is refined into CE [64,65,66,67] 


#### Refined cost equations eval_wipeout_start/1 
* CE 64: eval_wipeout_start(B) = 0+ eval_wipeout_3(C,B):1
     [C=0] 
* CE 65: eval_wipeout_start(B) = 0+ eval_wipeout_3(C,B):2
     [0>=C+1] 
* CE 66: eval_wipeout_start(B) = 0+ eval_wipeout_3(C,B):3
     [C>=1] 
* CE 67: eval_wipeout_start(B) = 0+ eval_wipeout_3(C,B):4
     [] 

### Cost equations --> "Loop" of eval_wipeout_start/1 
* CEs [67] --> Loop 47 
* CEs [64,65,66] --> Loop 48 

#### Loops of eval_wipeout_start/1 
* Loop 47: eval_wipeout_start(B) [] 
* Loop 48: eval_wipeout_start(B) [] 

### Ranking functions of CR eval_wipeout_start(B) 

#### Partial ranking functions of CR eval_wipeout_start(B) 


### Resulting Chains:eval_wipeout_start(B) 
* [48]
* [47]...


### Merging Chains  eval_wipeout_start/1 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_wipeout_bb2_in(V_1,V_i_0,B,C) -> [eval_wipeout_bb2_in(V_1',V_i_0',B',C')] 
1
#### Cost of phase [19]:eval_wipeout_bb2_in(V_1,V_i_0,B,C) -> [eval_wipeout_bb2_in(V_1',V_i_0',B',C')] 
1*it(19)+0
  Such that:it(19) =< -V_i_0+32
it(19) =< -V_i_0+V_i_0'

#### Cost of phase [19]:eval_wipeout_bb2_in(V_1,V_i_0,B,C) -> [eval_wipeout_bb2_in(V_1',V_i_0',B',C')] 
1*it(19)+0
  Such that:it(19) =< -V_i_0+32
it(19) =< -V_i_0+V_i_0'

#### Cost of chains of eval_wipeout_bb2_in(V_1,V_i_0,B,C):
* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< -V_i_0+32

  with precondition: [B=6,V_1=C,31>=V_i_0,V_i_0>=0] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< -V_i_0+32

  with precondition: [B=7,V_1=C,31>=V_i_0,V_i_0>=0] 


#### Cost of loops [23] 

 * loop 23:eval_wipeout_bb1_in(V_1,B,C) -> [eval_wipeout_bb1_in(V_1',B',C')] 
1*s(2)+2
  Such that:s(2) =< 32

#### Cost of phase [23]:eval_wipeout_bb1_in(V_1,B,C) -> [eval_wipeout_bb1_in(V_1',B',C')] 
2*it(23)+1*s(3)+0
#### Cost of phase [23]:eval_wipeout_bb1_in(V_1,B,C) -> [eval_wipeout_bb1_in(V_1',B',C')] 
2*it(23)+1*s(3)+0
#### Cost of chains of eval_wipeout_bb1_in(V_1,B,C):
* Chain [[23]]...: 3*it(23)+0
  with precondition: [] 

* Chain [[23],22]: 3*it(23)+1*s(4)+1
  Such that:s(4) =< 32

  with precondition: [B=7,V_1=C] 

* Chain [22]: 1*s(4)+1
  Such that:s(4) =< 32

  with precondition: [B=7,C=V_1] 


#### Cost of loops [24] 

 * loop 24:eval_wipeout_bb6_in(V_len_0,B,C) -> [eval_wipeout_bb6_in(V_len_0',B',C')] 
1
#### Cost of phase [24]:eval_wipeout_bb6_in(V_len_0,B,C) -> [eval_wipeout_bb6_in(V_len_0',B',C')] 
1*it(24)+0
#### Cost of phase [24]:eval_wipeout_bb6_in(V_len_0,B,C) -> [eval_wipeout_bb6_in(V_len_0',B',C')] 
1*it(24)+0
#### Cost of chains of eval_wipeout_bb6_in(V_len_0,B,C):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [B=2] 

* Chain [[24],25]: 1*it(24)+0
  with precondition: [B=2,V_len_0=C] 

* Chain [25]: 0
  with precondition: [B=2,C=V_len_0] 


#### Cost of loops [26] 

 * loop 26:eval_wipeout_bb7_in(V_len_0,B,C) -> [eval_wipeout_bb7_in(V_len_0',B',C')] 
1
#### Cost of phase [26]:eval_wipeout_bb7_in(V_len_0,B,C) -> [eval_wipeout_bb7_in(V_len_0',B',C')] 
1*it(26)+0
#### Cost of phase [26]:eval_wipeout_bb7_in(V_len_0,B,C) -> [eval_wipeout_bb7_in(V_len_0',B',C')] 
1*it(26)+0
#### Cost of chains of eval_wipeout_bb7_in(V_len_0,B,C):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [B=3] 

* Chain [[26],27]: 1*it(26)+0
  with precondition: [B=3,V_len_0=C] 

* Chain [27]: 0
  with precondition: [B=3,C=V_len_0] 


#### Cost of loops [28] 

 * loop 28:eval_wipeout_bb8_in(V_len_0,B,C) -> [eval_wipeout_bb8_in(V_len_0',B',C')] 
1
#### Cost of phase [28]:eval_wipeout_bb8_in(V_len_0,B,C) -> [eval_wipeout_bb8_in(V_len_0',B',C')] 
1*it(28)+0
#### Cost of phase [28]:eval_wipeout_bb8_in(V_len_0,B,C) -> [eval_wipeout_bb8_in(V_len_0',B',C')] 
1*it(28)+0
#### Cost of phase [28]:eval_wipeout_bb8_in(V_len_0,B,C) -> [eval_wipeout_bb8_in(V_len_0',B',C')] 
1*it(28)+0
#### Cost of chains of eval_wipeout_bb8_in(V_len_0,B,C):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [B>=4,5>=B] 

* Chain [[28],30]: 1*it(28)+0
  with precondition: [B=4,V_len_0=C] 

* Chain [[28],29]: 1*it(28)+0
  with precondition: [B=5,V_len_0=C] 

* Chain [30]: 0
  with precondition: [B=4,C=V_len_0] 

* Chain [29]: 0
  with precondition: [B=5,C=V_len_0] 


#### Cost of loops [34] 

 * loop 34:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
3*s(15)+4
#### Cost of phase [34]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
7*it(34)+0
#### Cost of phase [34]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
7*it(34)+0
#### Cost of phase [34]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
7*it(34)+0
#### Cost of loops [33] 

 * loop 33:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
3*s(35)+4
#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of phase [33]:eval_wipeout_bb5_in(V_len_0,B) -> [eval_wipeout_bb5_in(V_len_0',B')] 
4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192
it(33) =< V_len_0/8192-V_len_0'/8192

#### Cost of chains of eval_wipeout_bb5_in(V_len_0,B):
* Chain [[34]]...: 7*it(34)+0
  with precondition: [0>=V_len_0+1,B=8] 

* Chain [[34],36,37]: 10*it(34)+4
  with precondition: [B=8,0>=V_len_0+1] 

* Chain [[34],32]...: 8*aux(8)+0
  with precondition: [B=8,0>=V_len_0+1] 

* Chain [[33],[34]]...: 4*it(33)+10*it(34)+0
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=1] 

* Chain [[33],[34],36,37]: 4*it(33)+13*it(34)+4
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=1] 

* Chain [[33],[34],32]...: 11*aux(8)+4*it(33)+0
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=1] 

* Chain [[33],37]: 4*it(33)+3*s(36)+0
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=8192] 

* Chain [[33],36,37]: 4*it(33)+6*s(17)+4
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=1] 

* Chain [[33],35,37]: 4*it(33)+6*s(36)+4
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=8193] 

* Chain [[33],32]...: 4*aux(8)+4*it(33)+0
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=1] 

* Chain [[33],31]...: 4*aux(9)+4*it(33)+0
  Such that:it(33) =< V_len_0/8192

  with precondition: [B=8,V_len_0>=8193] 

* Chain [37]: 0
  with precondition: [V_len_0=0,B=8] 

* Chain [36,37]: 3*s(17)+4
  with precondition: [B=8,0>=V_len_0+1] 

* Chain [35,37]: 3*s(37)+4
  with precondition: [B=8,V_len_0>=1] 

* Chain [32]...: 1*aux(8)+0
  with precondition: [B=8,0>=V_len_0+1] 

* Chain [31]...: 1*aux(9)+0
  with precondition: [B=8,V_len_0>=1] 


#### Cost of chains of loop_cont_eval_wipeout_bb1_in(E,A,B):
* Chain [42]: 1
  with precondition: [E=7,A=0] 

* Chain [41]: 1*s(72)+1
  with precondition: [E=7,0>=A+1] 

* Chain [40]: 16*s(74)+31*s(75)+5
  Such that:s(73) =< A/8192
s(74) =< s(73)

  with precondition: [E=7,A>=1] 

* Chain [39]...: 1*aux(14)+0
  with precondition: [E=7,0>=A+1] 

* Chain [38]...: 16*s(79)+30*s(80)+1
  Such that:aux(15) =< A/8192
s(79) =< aux(15)

  with precondition: [E=7,A>=1] 


#### Cost of chains of eval_wipeout_3(V_1,B):
* Chain [46]: 1*s(83)+2
  with precondition: [V_1=0] 

* Chain [45]: 2*s(84)+2
  with precondition: [0>=V_1+1] 

* Chain [44]: 32*s(86)+16*s(88)+6
  Such that:s(87) =< V_1/8192
s(88) =< s(87)

  with precondition: [V_1>=1] 

* Chain [43]...: 36*s(90)+16*s(94)+2
  Such that:s(93) =< V_1/8192
s(94) =< s(93)

  with precondition: [] 


#### Cost of chains of eval_wipeout_start(B):
* Chain [48]: 1*aux(16)+0
  with precondition: [] 

* Chain [47]...: 16*s(103)+36*s(104)+2
  with precondition: [] 


Closed-form bounds of eval_wipeout_start(B): 
-------------------------------------
* Chain [48] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [47]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_wipeout_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 86 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 238 ms.
   - Equation cost structures 86 ms.
   - Phase cost structures 45 ms.
   - Chain cost structures 92 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 442 ms.

