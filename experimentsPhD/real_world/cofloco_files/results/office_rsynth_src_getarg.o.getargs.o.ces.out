Warning: Ignored call to eval_getargs_stop/1 in equation eval_getargs_bb69_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_getargs_100/13,eval_getargs_101/13,eval_getargs_102/13,eval_getargs_103/13,eval_getargs_104/13,eval_getargs_105/13,eval_getargs_106/13,eval_getargs_111/13,eval_getargs_112/13,eval_getargs_117/14,eval_getargs_118/14,eval_getargs_120/14,eval_getargs_121/14,eval_getargs_122/13,eval_getargs_123/13,eval_getargs_124/13,eval_getargs_125/13,eval_getargs_127/13,eval_getargs_128/13,eval_getargs_17/13,eval_getargs_18/13,eval_getargs_40/13,eval_getargs_41/13,eval_getargs_42/13,eval_getargs_43/13,eval_getargs_NewDefault3_in/13,eval_getargs_bb13_in/13,eval_getargs_bb16_in/13,eval_getargs_bb19_in/13,eval_getargs_bb48_in/13,eval_getargs_bb52_in/13,eval_getargs_bb55_in/13,eval_getargs_bb58_in/13,eval_getargs_bb6_in/13,eval_getargs_bb9_in/13]
1. recursive  : [eval_getargs_129/14,eval_getargs_130/14,eval_getargs_49/12,eval_getargs_50/12,eval_getargs_51/12,eval_getargs_52/12,eval_getargs_53/12,eval_getargs_54/12,eval_getargs_57/12,eval_getargs_58/12,eval_getargs_78/12,eval_getargs_79/12,eval_getargs_8/12,eval_getargs_80/12,eval_getargs_81/12,eval_getargs_82/12,eval_getargs_83/12,eval_getargs_86/12,eval_getargs_87/12,eval_getargs_9/12,eval_getargs_bb33_in/13,eval_getargs_bb45_in/13,eval_getargs_bb4_in/12,eval_getargs_bb60_in/14,loop_cont_eval_getargs_bb6_in/15]
2. recursive  : [eval_getargs_bb63_in/12]
3. recursive  : [eval_getargs_NewDefault_in/6,eval_getargs_bb1_in/5,eval_getargs_bb61_in/8,eval_getargs_bb66_in/6,loop_cont_eval_getargs_bb4_in/9,loop_cont_eval_getargs_bb63_in/6]
4. non_recursive  : [eval_getargs_bb69_in/1]
5. non_recursive  : [eval_getargs_146/1]
6. non_recursive  : [eval_getargs_145/2]
7. non_recursive  : [loop_cont_eval_getargs_bb1_in/3]
8. non_recursive  : [eval_getargs_bb0_in/3]
9. non_recursive  : [eval_getargs_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_getargs_bb6_in/13
1. SCC is partially evaluated into eval_getargs_bb4_in/12
2. SCC is partially evaluated into eval_getargs_bb63_in/12
3. SCC is partially evaluated into eval_getargs_bb1_in/5
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_getargs_bb1_in/3
8. SCC is partially evaluated into eval_getargs_bb0_in/3
9. SCC is partially evaluated into eval_getargs_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_getargs_bb6_in/13 
* CE 23 is refined into CE [34] 
* CE 24 is refined into CE [35] 
* CE 25 is refined into CE [36] 
* CE 26 is refined into CE [37] 
* CE 30 is refined into CE [38] 
* CE 29 is refined into CE [39] 
* CE 31 is refined into CE [40] 
* CE 32 is refined into CE [41] 
* CE 33 is refined into CE [42] 
* CE 27 is refined into CE [43] 
* CE 28 is refined into CE [44] 


#### Refined cost equations eval_getargs_bb6_in/13 
* CE 34: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,E) = 0
     [G=0,F=8] 
* CE 35: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,D,E,E,H) = 0
     [F=7] 
* CE 36: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [F=6] 
* CE 37: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [F=5] 
* CE 38: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [F=3] 
* CE 39: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [F=2] 
* CE 40: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,D,E,E,H) = 0
     [F=4] 
* CE 41: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,D,E,E,H) = 0
     [D>=44,F=4] 
* CE 42: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,H,E,E,I) = 0
     [H=43,F=4,D=43] 
* CE 43: eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) = 1+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)
     [B>=2,8>=B] 
* CE 44: eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) = 1+ eval_getargs_bb6_in(J,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)
     [B>=2,8>=B,J=1] 

### Cost equations --> "Loop" of eval_getargs_bb6_in/13 
* CEs [43] --> Loop 22 
* CEs [44] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [35] --> Loop 25 
* CEs [36] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [38] --> Loop 28 
* CEs [39] --> Loop 29 
* CEs [40,41,42] --> Loop 30 

#### Loops of eval_getargs_bb6_in/13 
* Loop 22: eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)->  eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)
                  [B>=2,8>=B] 
* Loop 23: eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)->  eval_getargs_bb6_in(V__help_only',V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I)
                  [B>=2,8>=B,V__help_only'=1] 
* Loop 24: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,E) [G=0,F=8] 
* Loop 25: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,D,E,E,H) [F=7] 
* Loop 26: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [F=6] 
* Loop 27: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [F=5] 
* Loop 28: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [F=3] 
* Loop 29: eval_getargs_bb6_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [F=2] 
* Loop 30: eval_getargs_bb6_in(A,B,C,D,E,F,G,B,C,D,E,E,H) [F=4] 

### Ranking functions of CR eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) 
* [[22,23]]...
* [[22,23],30]
* [[22,23],29]
* [[22,23],28]
* [[22,23],27]
* [[22,23],26]
* [[22,23],25]
* [[22,23],24]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  eval_getargs_bb6_in/13 into  External patterns of execution 
* [[29],[29,[22,23]]] --> 1 
* [[28],[28,[22,23]]] --> 2 
* [[30],[30,[22,23]]] --> 3 
* [[27],[27,[22,23]]] --> 4 
* [[26],[26,[22,23]]] --> 5 
* [[25],[25,[22,23]]] --> 6 
* [[24],[24,[22,23]]] --> 7 
* [[[22,23]]] --> 8 


### Specialization of cost equations eval_getargs_bb4_in/12 
* CE 20 is refined into CE [45] 
* CE 11 is refined into CE [46,47] 
* CE 12 is refined into CE [48,49] 
* CE 13 is refined into CE [50,51] 
* CE 14 is refined into CE [52,53] 
* CE 15 is refined into CE [54,55] 
* CE 16 is refined into CE [56,57] 
* CE 17 is refined into CE [58,59] 
* CE 18 is refined into CE [60] 
* CE 19 is refined into CE [61] 


#### Refined cost equations eval_getargs_bb4_in/12 
* CE 45: eval_getargs_bb4_in(A,B,C,D,E,F,A,B,C,D,E,E) = 0
     [F=9] 
* CE 46: eval_getargs_bb4_in(A,B,C,D,E,F,G,B,C,D,E,H) = 1+ eval_getargs_bb6_in(A,B,C,D,E,I,G,B,C,D,E,J,E):7
     [J=0,I=8,H=0,F=9] 
* CE 47: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 1+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,C,D,E,F,G,J,K):8
     [J=0,I=8,H=0,B=9] 
* CE 48: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,K,L):4+ eval_getargs_bb4_in(M,V_i_0,V__0,V_24,N,O,C,D,E,F,G,H)
     [O=9,I=5,B=9] 
* CE 49: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=5,B=9] 
* CE 50: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,K,L):1+ eval_getargs_bb4_in(M,V_i_0,V__0,V_24,N,O,C,D,E,F,G,H)
     [O=9,I=2,B=9] 
* CE 51: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=2,B=9] 
* CE 52: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,K,L):2+ eval_getargs_bb4_in(J,V_i_0,V__0,V_24,V_off_0,M,C,D,E,F,G,H)
     [M=9,I=3,B=9] 
* CE 53: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=3,B=9] 
* CE 54: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,V_off_0,K):3+ eval_getargs_bb4_in(J,V_i_0,V__0,V_24,V_off_0,L,C,D,E,F,G,H)
     [L=9,I=4,B=9] 
* CE 55: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=4,B=9] 
* CE 56: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,K,L):5+ eval_getargs_bb4_in(J,V_i_0,V__0,V_24,V_off_0,M,C,D,E,F,G,H)
     [M=9,I=6,B=9] 
* CE 57: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=6,B=9] 
* CE 58: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,V_i_0,V__0,V_24,V_off_0,V_off_0,K):6+ eval_getargs_bb4_in(J,V_i_0,V__0,V_24,V_off_0,L,C,D,E,F,G,H)
     [L=9,I=7,B=9] 
* CE 59: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [Q=9,I=7,B=9] 
* CE 60: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [O>=1,Q=9,I=8,B=9] 
* CE 61: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) = 2+ eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,I,J,K,L,M,N,O,P):8
     [0>=O+1,Q=9,I=8,B=9] 

### Cost equations --> "Loop" of eval_getargs_bb4_in/12 
* CEs [47,49,51,53,55,57,59,60,61] --> Loop 31 
* CEs [48,50,52,54,56,58] --> Loop 32 
* CEs [45] --> Loop 33 
* CEs [46] --> Loop 34 

#### Loops of eval_getargs_bb4_in/12 
* Loop 31: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) [B=9] 
* Loop 32: eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H)->  eval_getargs_bb4_in(V__help_only',V_i_0,V__0,V_24,V_off_0',B',C,D,E,F,G,H)
                  [B'=9,B=9] 
* Loop 33: eval_getargs_bb4_in(A,B,C,D,E,F,A,B,C,D,E,E) [F=9] 
* Loop 34: eval_getargs_bb4_in(A,B,C,D,E,F,G,B,C,D,E,H) [H=0,F=9] 

### Ranking functions of CR eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) 
* [[32]]...
* [[32],34]
* [[32],33]
* [[32],31]...
* [34]
* [33]
* [31]...


### Merging Chains  eval_getargs_bb4_in/12 into  External patterns of execution 
* [[34],[34,[32]]] --> 1 
* [[33],[33,[32]]] --> 2 
* [[[32]]] --> 3 
* [[31],[31,[32]]] --> 4 


### Specialization of cost equations eval_getargs_bb63_in/12 
* CE 22 is refined into CE [62] 
* CE 21 is refined into CE [63] 


#### Refined cost equations eval_getargs_bb63_in/12 
* CE 62: eval_getargs_bb63_in(A,B,C,D,E,F,G,H,I,A,B,G) = 0
     [H>=G+1,H>=B,F+G=C,I=10] 
* CE 63: eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) = 1+ eval_getargs_bb63_in(F,V_i_0,G,V_24,V_off_0,V_off_6,V_214,H,I,C,D,E)
     [V_214>=V_j_0,V_j_0>=V_i_0,V_off_6+V_214=G,V_off_6+V_214=V__0,V_j_0+1=H,I=10,B=10] 

### Cost equations --> "Loop" of eval_getargs_bb63_in/12 
* CEs [63] --> Loop 35 
* CEs [62] --> Loop 36 

#### Loops of eval_getargs_bb63_in/12 
* Loop 35: eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E)->  eval_getargs_bb63_in(V__help_only',V_i_0,V__0',V_24,V_off_0,V_off_6,V_214,V_j_0',B',C,D,E)
                  [V_214>=V_j_0,V_j_0>=V_i_0,V_off_6+V_214=V__0',V_off_6+V_214=V__0,V_j_0+1=V_j_0',B'=10,B=10] 
* Loop 36: eval_getargs_bb63_in(A,B,C,D,E,F,G,H,I,A,B,G) [H>=G+1,H>=B,F+G=C,I=10] 

### Ranking functions of CR eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) 
* RF of phase [35]: [V_214-V_j_0+1,V__0-V_off_6-V_j_0+1]

#### Partial ranking functions of CR eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_214-V_j_0+1
    V__0-V_off_6-V_j_0+1


### Resulting Chains:eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) 
* [[35],36]
* [36]


### Merging Chains  eval_getargs_bb63_in/12 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[35]]] --> 2 


### Specialization of cost equations eval_getargs_bb1_in/5 
* CE 8 is refined into CE [64] 
* CE 7 is refined into CE [65] 
* CE 4 is refined into CE [66,67,68,69] 
* CE 5 is refined into CE [70,71,72,73,74] 
* CE 6 is refined into CE [75] 


#### Refined cost equations eval_getargs_bb1_in/5 
* CE 64: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 0
     [V_i_0>=V__0,B=12] 
* CE 65: eval_getargs_bb1_in(A,B,C,D,A) = 0
     [B>=C,D=11] 
* CE 66: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 2+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,V_i_0,V__0,D,H,I):1+ eval_getargs_bb1_in(G,J,V__0,B,C)
     [V__0>=V_i_0+1,V_i_0+1=J,I=0,F=9,E=1] 
* CE 67: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 2+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,V_i_0,V__0,D,H,H):2+ eval_getargs_bb1_in(G,I,V__0,B,C)
     [V__0>=V_i_0+1,V_i_0+1=I,F=9,E=1] 
* CE 68: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 2+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,H,I,J,K,L):3
     [V__0>=V_i_0+1,M=H+1,F=9,E=1] 
* CE 69: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 2+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,H,I,J,K,L):4
     [V__0>=V_i_0+1,M=H+1,F=9,E=1] 
* CE 70: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 3+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,V_i_0,V__0,D,H,I):1+ eval_getargs_bb63_in(G,V_i_0,V__0,D,H,J,V__0,V_i_0,K,L,V_i_0,V__0):2+ eval_getargs_bb1_in(L,V_i_0,V__0,B,C)
     [V__0>=V_i_0+1,K=10,J=0,I=0,F=9,E=1] 
* CE 71: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 3+ eval_getargs_bb4_in(V__help_only,V_i_0,D,E,F,G,H,V_i_0,I,E,J,J):2+ eval_getargs_bb63_in(H,V_i_0,K,E,J,J,L,V_i_0,M,H,V_i_0,L):1+ eval_getargs_bb1_in(H,V_i_0,L,B,C)
     [J+L>=V_i_0+1,V_i_0>=L+1,J+L=K,J+L=I,J+L=D,J+L=V__0,M=10,G=9,F=1] 
* CE 72: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 3+ eval_getargs_bb4_in(V__help_only,V_i_0,D,E,F,G,H,V_i_0,I,E,J,J):2+ eval_getargs_bb63_in(H,V_i_0,K,E,J,J,L,V_i_0,M,N,V_i_0,L):2+ eval_getargs_bb1_in(N,V_i_0,L,B,C)
     [J+L>=V_i_0+1,L>=V_i_0,J+L=K,J+L=I,J+L=D,J+L=V__0,M=10,G=9,F=1] 
* CE 73: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 3+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,H,I,J,K,L):3
     [V__0>=V_i_0+1,I=L+M,N=10,F=9,E=1] 
* CE 74: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 3+ eval_getargs_bb4_in(V__help_only,V_i_0,V__0,D,E,F,G,H,I,J,K,L):4
     [V__0>=V_i_0+1,I=L+M,N=10,F=9,E=1] 
* CE 75: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) = 1+ eval_getargs_bb1_in(V__help_only,D,V__0,B,C)
     [V__0>=V_i_0+1,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_getargs_bb1_in/5 
* CEs [71] --> Loop 37 
* CEs [70,72] --> Loop 38 
* CEs [66,67,75] --> Loop 39 
* CEs [68,69,73,74] --> Loop 40 
* CEs [64] --> Loop 41 
* CEs [65] --> Loop 42 

#### Loops of eval_getargs_bb1_in/5 
* Loop 37: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C)->  eval_getargs_bb1_in(V__help_only',V_i_0,V__0',B,C)
                  [V_i_0>=V__0'+1,V__0>=V_i_0+1] 
* Loop 38: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C)->  eval_getargs_bb1_in(V__help_only',V_i_0,V__0',B,C)
                  [V__0'>=V_i_0,V__0>=V_i_0+1] 
* Loop 39: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C)->  eval_getargs_bb1_in(V__help_only',V_i_0',V__0,B,C)
                  [V__0>=V_i_0+1,V_i_0+1=V_i_0'] 
* Loop 40: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) [V__0>=V_i_0+1] 
* Loop 41: eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) [V_i_0>=V__0,B=12] 
* Loop 42: eval_getargs_bb1_in(A,B,C,D,A) [B>=C,D=11] 

### Ranking functions of CR eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) 

#### Partial ranking functions of CR eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) 
* Partial RF of phase [38,39]:
  - RF of loop [39:1]:
    -V_i_0+V__0 depends on loops [38:1] 


### Resulting Chains:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) 
* [[38,39]]...
* [[38,39],42]
* [[38,39],41]
* [[38,39],40]...
* [[38,39],37,42]
* [[38,39],37,41]
* [42]
* [41]
* [40]...
* [37,42]
* [37,41]


### Merging Chains  eval_getargs_bb1_in/5 into  External patterns of execution 
* [[42]] --> 1 
* [[42,37],[42,37,[38,39]],[42,[38,39]]] --> 2 
* [[41,37],[41,37,[38,39]],[41,[38,39]]] --> 3 
* [[41]] --> 4 
* [[40],[40,[38,39]]] --> 5 
* [[[38,39]]] --> 6 


### Specialization of cost equations loop_cont_eval_getargs_bb1_in/3 
* CE 10 is refined into CE [76] 
* CE 9 is refined into CE [77] 


#### Refined cost equations loop_cont_eval_getargs_bb1_in/3 
* CE 76: loop_cont_eval_getargs_bb1_in(E,A,B) = 0
     [E=12] 
* CE 77: loop_cont_eval_getargs_bb1_in(E,A,B) = 0
     [E=11] 

### Cost equations --> "Loop" of loop_cont_eval_getargs_bb1_in/3 
* CEs [76] --> Loop 43 
* CEs [77] --> Loop 44 

#### Loops of loop_cont_eval_getargs_bb1_in/3 
* Loop 43: loop_cont_eval_getargs_bb1_in(E,A,B) [E=12] 
* Loop 44: loop_cont_eval_getargs_bb1_in(E,A,B) [E=11] 

### Ranking functions of CR loop_cont_eval_getargs_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_getargs_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_getargs_bb1_in(E,A,B) 
* [44]
* [43]


### Merging Chains  loop_cont_eval_getargs_bb1_in/3 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_getargs_bb0_in/3 
* CE 3 is refined into CE [78,79,80,81,82,83] 


#### Refined cost equations eval_getargs_bb0_in/3 
* CE 78: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,V__help_only):1+ loop_cont_eval_getargs_bb1_in(E,V__help_only,B):1
     [0>=V_argc,E=11,D=11,C=0] 
* CE 79: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,E):2+ loop_cont_eval_getargs_bb1_in(F,E,B):1
     [V_argc>=1,F=11,D=11,C=0] 
* CE 80: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,E):3+ loop_cont_eval_getargs_bb1_in(F,E,B):2
     [V_argc>=1,F=12,D=12,C=0] 
* CE 81: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,E):4+ loop_cont_eval_getargs_bb1_in(F,E,B):2
     [0>=V_argc,F=12,D=12,C=0] 
* CE 82: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,E):5
     [V_argc>=1,C=0] 
* CE 83: eval_getargs_bb0_in(V_argc,V__help_only,B) = 1+ eval_getargs_bb1_in(V__help_only,C,V_argc,D,E):6
     [V_argc>=1,C=0] 

### Cost equations --> "Loop" of eval_getargs_bb0_in/3 
* CEs [82,83] --> Loop 45 
* CEs [79,80] --> Loop 46 
* CEs [78,81] --> Loop 47 

#### Loops of eval_getargs_bb0_in/3 
* Loop 45: eval_getargs_bb0_in(V_argc,V__help_only,B) [V_argc>=1] 
* Loop 46: eval_getargs_bb0_in(V_argc,V__help_only,B) [V_argc>=1] 
* Loop 47: eval_getargs_bb0_in(V_argc,V__help_only,B) [0>=V_argc] 

### Ranking functions of CR eval_getargs_bb0_in(V_argc,V__help_only,B) 

#### Partial ranking functions of CR eval_getargs_bb0_in(V_argc,V__help_only,B) 


### Resulting Chains:eval_getargs_bb0_in(V_argc,V__help_only,B) 
* [47]
* [46]
* [45]...


### Merging Chains  eval_getargs_bb0_in/3 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 


### Specialization of cost equations eval_getargs_start/3 
* CE 2 is refined into CE [84,85,86] 


#### Refined cost equations eval_getargs_start/3 
* CE 84: eval_getargs_start(V_argc,V__help_only,B) = 0+ eval_getargs_bb0_in(V_argc,V__help_only,B):1
     [0>=V_argc] 
* CE 85: eval_getargs_start(V_argc,V__help_only,B) = 0+ eval_getargs_bb0_in(V_argc,V__help_only,B):2
     [V_argc>=1] 
* CE 86: eval_getargs_start(V_argc,V__help_only,B) = 0+ eval_getargs_bb0_in(V_argc,V__help_only,B):3
     [V_argc>=1] 

### Cost equations --> "Loop" of eval_getargs_start/3 
* CEs [86] --> Loop 48 
* CEs [85] --> Loop 49 
* CEs [84] --> Loop 50 

#### Loops of eval_getargs_start/3 
* Loop 48: eval_getargs_start(V_argc,V__help_only,B) [V_argc>=1] 
* Loop 49: eval_getargs_start(V_argc,V__help_only,B) [V_argc>=1] 
* Loop 50: eval_getargs_start(V_argc,V__help_only,B) [0>=V_argc] 

### Ranking functions of CR eval_getargs_start(V_argc,V__help_only,B) 

#### Partial ranking functions of CR eval_getargs_start(V_argc,V__help_only,B) 


### Resulting Chains:eval_getargs_start(V_argc,V__help_only,B) 
* [50]
* [49]
* [48]...


### Merging Chains  eval_getargs_start/3 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 
* [[48]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [22,23] 

 * loop 22:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
1
 * loop 23:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of phase [22,23]:eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I) -> [eval_getargs_bb6_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H',I')] 
2*it(22)+0
#### Cost of chains of eval_getargs_bb6_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H,I):
* Chain [[22,23]]...: 2*it(22)+0
  with precondition: [B>=2,8>=B] 

* Chain [[22,23],30]: 2*it(22)+0
  with precondition: [B=4,V_i_0=D,V__0=E,V_24=F,V_off_0=G,V_off_0=H] 

* Chain [[22,23],29]: 2*it(22)+0
  with precondition: [B=2,V_i_0=D,V__0=E,V_24=F,V_off_0=G] 

* Chain [[22,23],28]: 2*it(22)+0
  with precondition: [B=3,V_i_0=D,V__0=E,V_24=F,V_off_0=G] 

* Chain [[22,23],27]: 2*it(22)+0
  with precondition: [B=5,V_i_0=D,V__0=E,V_24=F,V_off_0=G] 

* Chain [[22,23],26]: 2*it(22)+0
  with precondition: [B=6,V_i_0=D,V__0=E,V_24=F,V_off_0=G] 

* Chain [[22,23],25]: 2*it(22)+0
  with precondition: [B=7,V_i_0=D,V__0=E,V_24=F,V_off_0=G,V_off_0=H] 

* Chain [[22,23],24]: 2*it(22)+0
  with precondition: [B=8,H=0,V_i_0=D,V__0=E,V_24=F,V_off_0=G,V_off_0=I] 

* Chain [30]: 0
  with precondition: [B=4,D=V_i_0,E=V__0,F=V_24,V_off_0=G,V_off_0=H] 

* Chain [29]: 0
  with precondition: [B=2,C=V__help_only,D=V_i_0,E=V__0,F=V_24,G=V_off_0] 

* Chain [28]: 0
  with precondition: [B=3,C=V__help_only,D=V_i_0,E=V__0,F=V_24,G=V_off_0] 

* Chain [27]: 0
  with precondition: [B=5,C=V__help_only,D=V_i_0,E=V__0,F=V_24,G=V_off_0] 

* Chain [26]: 0
  with precondition: [B=6,C=V__help_only,D=V_i_0,E=V__0,F=V_24,G=V_off_0] 

* Chain [25]: 0
  with precondition: [B=7,D=V_i_0,E=V__0,F=V_24,V_off_0=G,V_off_0=H] 

* Chain [24]: 0
  with precondition: [B=8,H=0,C=V__help_only,D=V_i_0,E=V__0,F=V_24,V_off_0=G,V_off_0=I] 


#### Cost of loops [32] 

 * loop 32:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) -> [eval_getargs_bb4_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H')] 
1*s(14)+0
#### Cost of phase [32]:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) -> [eval_getargs_bb4_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H')] 
1*s(15)+0
#### Cost of phase [32]:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) -> [eval_getargs_bb4_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H')] 
1*s(15)+0
#### Cost of phase [32]:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) -> [eval_getargs_bb4_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H')] 
1*s(15)+0
#### Cost of phase [32]:eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H) -> [eval_getargs_bb4_in(V__help_only',V_i_0',V__0',V_24',V_off_0',B',C',D',E',F',G',H')] 
1*s(15)+0
#### Cost of chains of eval_getargs_bb4_in(V__help_only,V_i_0,V__0,V_24,V_off_0,B,C,D,E,F,G,H):
* Chain [[32]]...: 1*s(15)+0
  with precondition: [B=9] 

* Chain [[32],34]: 2*s(15)+1
  with precondition: [B=9,H=0,V_i_0=D,V__0=E,V_24=F,V__0>=V_i_0+1] 

* Chain [[32],33]: 1*s(15)+0
  with precondition: [B=9,V_i_0=D,V__0=E,V_24=F,G=H,V__0>=V_i_0+1] 

* Chain [[32],31]...: 2*aux(9)+0
  with precondition: [B=9,V__0>=V_i_0+1] 

* Chain [34]: 1*s(16)+1
  with precondition: [B=9,H=0,F=V_24,G=V_off_0,V_i_0=D,V__0=E,V__0>=V_i_0+1] 

* Chain [33]: 0
  with precondition: [B=9,C=V__help_only,F=V_24,V_i_0=D,V__0=E,V_off_0=G,V_off_0=H,V__0>=V_i_0+1] 

* Chain [31]...: 1*aux(9)+0
  with precondition: [B=9,V__0>=V_i_0+1] 


#### Cost of loops [35] 

 * loop 35:eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) -> [eval_getargs_bb63_in(V__help_only',V_i_0',V__0',V_24',V_off_0',V_off_6',V_214',V_j_0',B',C',D',E')] 
1
#### Cost of phase [35]:eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E) -> [eval_getargs_bb63_in(V__help_only',V_i_0',V__0',V_24',V_off_0',V_off_6',V_214',V_j_0',B',C',D',E')] 
1*it(35)+0
  Such that:it(35) =< V__0-V_off_6-V_j_0+1
it(35) =< V__0-V_off_6-V_j_0-V__0'+V_off_6'+V_j_0'
it(35) =< V_214-V_j_0+1
it(35) =< V_214-V_j_0-V_214'+V_j_0'

#### Cost of chains of eval_getargs_bb63_in(V__help_only,V_i_0,V__0,V_24,V_off_0,V_off_6,V_214,V_j_0,B,C,D,E):
* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< V__0-V_off_6-V_j_0+1

  with precondition: [B=10,V_i_0=D,V__0=V_214+V_off_6,V__0=V_off_6+E,V_j_0>=V_i_0,V__0>=V_j_0+V_off_6] 

* Chain [36]: 0
  with precondition: [B=10,C=V__help_only,V_i_0=D,V_214=E,V_214+V_off_6=V__0,V_j_0>=V_i_0,V_j_0>=V_214+1] 


#### Cost of loops [38,39] 

 * loop 38:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
2*s(37)+1*s(36)+1*s(35)+3
  Such that:s(35) =< -V_i_0+V__0'+1
s(36) =< -V_i_0'+V__0'+1

 * loop 39:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
1*s(40)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of phase [38,39]:eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C) -> [eval_getargs_bb1_in(V__help_only',V_i_0',V__0',B',C')] 
6*it(38)+1*s(42)+1*s(43)+0
#### Cost of chains of eval_getargs_bb1_in(V__help_only,V_i_0,V__0,B,C):
* Chain [[38,39]]...: 8*it(38)+0
  with precondition: [V__0>=V_i_0+1] 

* Chain [[38,39],42]: 8*it(38)+0
  with precondition: [B=11,V_i_0>=0,V__0>=V_i_0+1] 

* Chain [[38,39],41]: 8*it(38)+0
  with precondition: [B=12,V_i_0>=0,V__0>=V_i_0+1] 

* Chain [[38,39],40]...: 9*aux(16)+0
  with precondition: [V_i_0>=0,V__0>=V_i_0+1] 

* Chain [[38,39],37,42]: 9*it(38)+3
  with precondition: [B=11,V_i_0>=0,V__0>=V_i_0+1] 

* Chain [[38,39],37,41]: 9*it(38)+3
  with precondition: [B=12,V_i_0>=0,V__0>=V_i_0+1] 

* Chain [42]: 0
  with precondition: [B=11,C=V__help_only,V_i_0>=0,V_i_0>=V__0] 

* Chain [41]: 0
  with precondition: [B=12,V_i_0>=0,V_i_0>=V__0] 

* Chain [40]...: 1*aux(16)+0
  with precondition: [V_i_0>=0,V__0>=V_i_0+1] 

* Chain [37,42]: 1*s(49)+3
  with precondition: [B=11,V_i_0>=0,V__0>=V_i_0+1] 

* Chain [37,41]: 1*s(49)+3
  with precondition: [B=12,V_i_0>=0,V__0>=V_i_0+1] 


#### Cost of chains of loop_cont_eval_getargs_bb1_in(E,A,B):
* Chain [44]: 0
  with precondition: [E=11] 

* Chain [43]: 0
  with precondition: [E=12] 


#### Cost of chains of eval_getargs_bb0_in(V_argc,V__help_only,B):
* Chain [47]: 1
  with precondition: [0>=V_argc] 

* Chain [46]: 1*aux(20)+0
  with precondition: [V_argc>=1] 

* Chain [45]...: 1*aux(21)+0
  with precondition: [V_argc>=1] 


#### Cost of chains of eval_getargs_start(V_argc,V__help_only,B):
* Chain [50]: 1
  with precondition: [0>=V_argc] 

* Chain [49]: 1*s(62)+0
  with precondition: [V_argc>=1] 

* Chain [48]...: 1*s(63)+0
  with precondition: [V_argc>=1] 


Closed-form bounds of eval_getargs_start(V_argc,V__help_only,B): 
-------------------------------------
* Chain [50] with precondition: [0>=V_argc] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [49] with precondition: [V_argc>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48]... with precondition: [V_argc>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_getargs_start(V_argc,V__help_only,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 1167 ms.
* Invariants computed in 113 ms.
   - Backward Invariants 72 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 406 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 158 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 51 ms.
   - Chain cost structures 60 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 2455 ms.

