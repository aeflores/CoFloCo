Warning: Ignored call to eval_copyfile_from_canon_stop/1 in equation eval_copyfile_from_canon_35/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_copyfile_from_canon_10/15,eval_copyfile_from_canon_12/15,eval_copyfile_from_canon_13/15,eval_copyfile_from_canon_9/15,eval_copyfile_from_canon_NewDefault_in/14,eval_copyfile_from_canon_bb2_in/14,eval_copyfile_from_canon_bb7_in/15,eval_copyfile_from_canon_bb9_in/15]
1. recursive  : [eval_copyfile_from_canon_27/9,eval_copyfile_from_canon_28/9,eval_copyfile_from_canon_3/5,eval_copyfile_from_canon_4/6,eval_copyfile_from_canon_bb12_in/8,eval_copyfile_from_canon_bb1_in/4,loop_cont_eval_copyfile_from_canon_bb2_in/10]
2. non_recursive  : [eval_copyfile_from_canon_35/1]
3. non_recursive  : [eval_copyfile_from_canon_34/2]
4. non_recursive  : [eval_copyfile_from_canon_33/2]
5. non_recursive  : [eval_copyfile_from_canon_bb13_in/2]
6. non_recursive  : [loop_cont_eval_copyfile_from_canon_bb1_in/3]
7. non_recursive  : [eval_copyfile_from_canon_bb0_in/3]
8. non_recursive  : [eval_copyfile_from_canon_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_copyfile_from_canon_bb2_in/14
1. SCC is partially evaluated into eval_copyfile_from_canon_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_copyfile_from_canon_bb0_in/3
8. SCC is partially evaluated into eval_copyfile_from_canon_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_copyfile_from_canon_bb2_in/14 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 


#### Refined cost equations eval_copyfile_from_canon_bb2_in/14 
* CE 14: eval_copyfile_from_canon_bb2_in(A,B,C,D,D,E,F,A,B,C,D,D,E,G) = 0
     [E>=D,E>=0,F=2] 
* CE 15: eval_copyfile_from_canon_bb2_in(A,B,C,D,D,E,F,G,H,I,J,K,L,M) = 1+ eval_copyfile_from_canon_bb2_in(N,B,C,D,D,O,P,G,H,I,J,K,L,M)
     [D>=E+1,E>=0,E+1=O,P=2,F=2] 

### Cost equations --> "Loop" of eval_copyfile_from_canon_bb2_in/14 
* CEs [15] --> Loop 7 
* CEs [14] --> Loop 8 

#### Loops of eval_copyfile_from_canon_bb2_in/14 
* Loop 7: eval_copyfile_from_canon_bb2_in(A,B,C,D,D,E,F,G,H,I,J,K,L,M)->  eval_copyfile_from_canon_bb2_in(A',B,C,D,D,B',C',G,H,I,J,K,L,M)
                  [D>=E+1,E>=0,E+1=B',C'=2,F=2] 
* Loop 8: eval_copyfile_from_canon_bb2_in(A,B,C,D,D,E,F,A,B,C,D,D,E,G) [E>=D,E>=0,F=2] 

### Ranking functions of CR eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I) 
* RF of phase [7]: [V_4-V_i_0,V_5-V_i_0]

#### Partial ranking functions of CR eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_4-V_i_0
    V_5-V_i_0


### Resulting Chains:eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I) 
* [[7],8]
* [8]


### Merging Chains  eval_copyfile_from_canon_bb2_in/14 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_copyfile_from_canon_bb1_in/4 
* CE 4 is refined into CE [16,17] 
* CE 5 is refined into CE [18,19] 
* CE 6 is refined into CE [20] 
* CE 7 is refined into CE [21,22] 
* CE 8 is refined into CE [23,24] 
* CE 9 is refined into CE [25] 
* CE 10 is refined into CE [26] 
* CE 11 is refined into CE [27] 


#### Refined cost equations eval_copyfile_from_canon_bb1_in/4 
* CE 16: eval_copyfile_from_canon_bb1_in(A,B,C,A) = 1+ eval_copyfile_from_canon_bb2_in(A,B,D,E,E,F,G,A,B,H,E,E,I,J):1
     [0>=E,I=0,H=4096,G=2,F=0,D=4096,C=3] 
* CE 17: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 1+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,D,E,E,F,G,C,V__0,H,E,E,E,I):2
     [E>=1,H=4096,G=2,F=0,D=4096,B=3] 
* CE 18: eval_copyfile_from_canon_bb1_in(A,B,C,A) = 1+ eval_copyfile_from_canon_bb2_in(A,B,B,D,D,E,F,A,B,B,D,D,G,H):1
     [0>=D,G=0,F=2,E=0,C=3] 
* CE 19: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 1+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V__0,D,D,E,F,C,V__0,V__0,D,D,D,G):2
     [D>=1,F=2,E=0,B=3] 
* CE 20: eval_copyfile_from_canon_bb1_in(A,B,C,A) = 0
     [C=3] 
* CE 21: eval_copyfile_from_canon_bb1_in(A,B,C,A) = 1+ eval_copyfile_from_canon_bb2_in(A,B,D,E,E,F,G,A,B,H,E,E,I,J):1
     [0>=E,I=0,H=4096,G=2,F=0,D=4096,C=3] 
* CE 22: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 1+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,D,E,E,F,G,C,V__0,H,E,E,E,I):2
     [E>=1,4095>=E,H=4096,G=2,F=0,D=4096,B=3] 
* CE 23: eval_copyfile_from_canon_bb1_in(A,B,C,A) = 1+ eval_copyfile_from_canon_bb2_in(A,B,B,D,D,E,F,A,B,B,D,D,G,H):1
     [0>=D,G=0,F=2,E=0,C=3] 
* CE 24: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 1+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V__0,D,D,E,F,C,V__0,V__0,D,D,D,G):2
     [D>=1,4095>=D,F=2,E=0,B=3] 
* CE 25: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 2+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,D,E,F,G,H,I,V__0,J,K,L,M,N):2+ eval_copyfile_from_canon_bb1_in(I,O,P,C)
     [V__0=O+4096,P=3,M=4096,L=4096,K=4096,J=4096,H=2,G=0,F=4096,E=4096,D=4096,B=3] 
* CE 26: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 2+ eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V__0,D,E,F,G,H,V__0,V__0,I,J,K,L):2+ eval_copyfile_from_canon_bb1_in(H,M,N,C)
     [V__0=M+4096,N=3,K=4096,J=4096,I=4096,G=2,F=0,E=4096,D=4096,B=3] 
* CE 27: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) = 1+ eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,D,C)
     [D=3,B=3] 

### Cost equations --> "Loop" of eval_copyfile_from_canon_bb1_in/4 
* CEs [25,26] --> Loop 9 
* CEs [27] --> Loop 10 
* CEs [16,17,18,19,20,21,22,23,24] --> Loop 11 

#### Loops of eval_copyfile_from_canon_bb1_in/4 
* Loop 9: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C)->  eval_copyfile_from_canon_bb1_in(V__CONVERSION',V__0',B',C)
                  [V__0=V__0'+4096,B'=3,B=3] 
* Loop 10: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C)->  eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B',C)
                  [B'=3,B=3] 
* Loop 11: eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) [B=3] 

### Ranking functions of CR eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) 

#### Partial ranking functions of CR eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) 


### Resulting Chains:eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) 
* [[9,10]]...
* [[9,10],11]
* [11]


### Merging Chains  eval_copyfile_from_canon_bb1_in/4 into  External patterns of execution 
* [[11],[11,[9,10]]] --> 1 
* [[[9,10]]] --> 2 


### Specialization of cost equations eval_copyfile_from_canon_bb0_in/3 
* CE 3 is refined into CE [28,29] 


#### Refined cost equations eval_copyfile_from_canon_bb0_in/3 
* CE 28: eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) = 1+ eval_copyfile_from_canon_bb1_in(V__CONVERSION,V_longcount,C,D):1
     [C=3] 
* CE 29: eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) = 1+ eval_copyfile_from_canon_bb1_in(V__CONVERSION,V_longcount,C,D):2
     [C=3] 

### Cost equations --> "Loop" of eval_copyfile_from_canon_bb0_in/3 
* CEs [29] --> Loop 12 
* CEs [28] --> Loop 13 

#### Loops of eval_copyfile_from_canon_bb0_in/3 
* Loop 12: eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) [] 
* Loop 13: eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) [] 

### Ranking functions of CR eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) 

#### Partial ranking functions of CR eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) 


### Resulting Chains:eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B) 
* [13]
* [12]...


### Merging Chains  eval_copyfile_from_canon_bb0_in/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_copyfile_from_canon_start/3 
* CE 2 is refined into CE [30,31] 


#### Refined cost equations eval_copyfile_from_canon_start/3 
* CE 30: eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) = 0+ eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B):1
     [] 
* CE 31: eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) = 0+ eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B):2
     [] 

### Cost equations --> "Loop" of eval_copyfile_from_canon_start/3 
* CEs [31] --> Loop 14 
* CEs [30] --> Loop 15 

#### Loops of eval_copyfile_from_canon_start/3 
* Loop 14: eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) [] 
* Loop 15: eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) [] 

### Ranking functions of CR eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) 

#### Partial ranking functions of CR eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) 


### Resulting Chains:eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B) 
* [15]
* [14]...


### Merging Chains  eval_copyfile_from_canon_start/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I) -> [eval_copyfile_from_canon_bb2_in(V__CONVERSION',V__0',V_2',V_4',V_5',V_i_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [7]:eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I) -> [eval_copyfile_from_canon_bb2_in(V__CONVERSION',V__0',V_2',V_4',V_5',V_i_0',B',C',D',E',F',G',H',I')] 
1*it(7)+0
  Such that:it(7) =< V_4-V_i_0
it(7) =< V_4-V_i_0-V_4'+V_i_0'
it(7) =< V_5-V_i_0
it(7) =< V_5-V_i_0-V_5'+V_i_0'

#### Cost of chains of eval_copyfile_from_canon_bb2_in(V__CONVERSION,V__0,V_2,V_4,V_5,V_i_0,B,C,D,E,F,G,H,I):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_i_0+F

  with precondition: [B=2,V_4=V_5,V__0=D,V_2=E,V_4=F,V_4=G,V_4=H,V_i_0>=0,V_4>=V_i_0+1] 

* Chain [8]: 0
  with precondition: [B=2,C=V__CONVERSION,D=V__0,E=V_2,V_5=V_4,V_5=F,V_5=G,V_i_0=H,V_i_0>=0,V_i_0>=V_5] 


#### Cost of loops [9,10] 

 * loop 9:eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) -> [eval_copyfile_from_canon_bb1_in(V__CONVERSION',V__0',B',C')] 
8194
 * loop 10:eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) -> [eval_copyfile_from_canon_bb1_in(V__CONVERSION',V__0',B',C')] 
1
#### Cost of phase [9,10]:eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) -> [eval_copyfile_from_canon_bb1_in(V__CONVERSION',V__0',B',C')] 
8195*it(9)+0
#### Cost of phase [9,10]:eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C) -> [eval_copyfile_from_canon_bb1_in(V__CONVERSION',V__0',B',C')] 
8195*it(9)+0
#### Cost of chains of eval_copyfile_from_canon_bb1_in(V__CONVERSION,V__0,B,C):
* Chain [[9,10]]...: 8195*it(9)+0
  with precondition: [B=3] 

* Chain [[9,10],11]: 8196*aux(3)+0
  with precondition: [B=3] 

* Chain [11]: 1*aux(3)+0
  with precondition: [B=3] 


#### Cost of chains of eval_copyfile_from_canon_bb0_in(V_longcount,V__CONVERSION,B):
* Chain [13]: 1*s(9)+1
  with precondition: [] 

* Chain [12]...: 8195*s(10)+1
  with precondition: [] 


#### Cost of chains of eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B):
* Chain [15]: 1*s(11)+1
  with precondition: [] 

* Chain [14]...: 8195*s(12)+1
  with precondition: [] 


Closed-form bounds of eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_copyfile_from_canon_start(V_longcount,V__CONVERSION,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 80 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 58 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 249 ms.

