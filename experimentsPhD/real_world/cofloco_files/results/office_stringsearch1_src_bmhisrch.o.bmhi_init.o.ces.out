Warning: Ignored call to eval_bmhi_init_stop/1 in equation eval_bmhi_init_75/1 
Warning: Ignored call to eval_bmhi_init_stop/1 in equation loop_cont_eval_bmhi_init_bb10_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_bmhi_init_75/1]
1. non_recursive  : [eval_bmhi_init_74/3]
2. recursive  : [eval_bmhi_init_15/8,eval_bmhi_init_16/8,eval_bmhi_init_bb2_in/7]
3. recursive  : [eval_bmhi_init_bb5_in/7]
4. recursive  : [eval_bmhi_init_43/8,eval_bmhi_init_44/8,eval_bmhi_init_bb7_in/7]
5. recursive  : [eval_bmhi_init_bb10_in/3,eval_bmhi_init_bb13_in/3]
6. non_recursive  : [loop_cont_eval_bmhi_init_bb10_in/2]
7. non_recursive  : [eval_bmhi_init_55/2]
8. non_recursive  : [eval_bmhi_init_54/4]
9. non_recursive  : [loop_cont_eval_bmhi_init_bb7_in/5]
10. non_recursive  : [loop_cont_eval_bmhi_init_bb5_in/5]
11. non_recursive  : [loop_cont_eval_bmhi_init_bb2_in/5]
12. non_recursive  : [eval_bmhi_init_9/3]
13. non_recursive  : [eval_bmhi_init_8/3]
14. non_recursive  : [eval_bmhi_init_6/3]
15. non_recursive  : [eval_bmhi_init_5/4]
16. non_recursive  : [eval_bmhi_init_1/4]
17. non_recursive  : [eval_bmhi_init_0/3]
18. non_recursive  : [eval_bmhi_init_bb0_in/3]
19. non_recursive  : [eval_bmhi_init_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_bmhi_init_bb2_in/7
3. SCC is partially evaluated into eval_bmhi_init_bb5_in/7
4. SCC is partially evaluated into eval_bmhi_init_bb7_in/7
5. SCC is partially evaluated into eval_bmhi_init_bb10_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_bmhi_init_55/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_bmhi_init_bb5_in/5
11. SCC is partially evaluated into loop_cont_eval_bmhi_init_bb2_in/5
12. SCC is partially evaluated into eval_bmhi_init_9/3
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_bmhi_init_6/3
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_bmhi_init_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bmhi_init_bb2_in/7 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 


#### Refined cost equations eval_bmhi_init_bb2_in/7 
* CE 17: eval_bmhi_init_bb2_in(A,B,C,D,A,B,E) = 0
     [C>=A,C>=0,E=0,D=4] 
* CE 18: eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) = 1+ eval_bmhi_init_bb2_in(F,G,H,B,C,D,E)
     [V__patlen>=V_i_0+1,V_i_0>=0,V_i_0+1=H] 

### Cost equations --> "Loop" of eval_bmhi_init_bb2_in/7 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_bmhi_init_bb2_in/7 
* Loop 15: eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E)->  eval_bmhi_init_bb2_in(V__patlen',V__skip2',V_i_0',B,C,D,E)
                  [V__patlen>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 16: eval_bmhi_init_bb2_in(A,B,C,D,A,B,E) [C>=A,C>=0,E=0,D=4] 

### Ranking functions of CR eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) 

#### Partial ranking functions of CR eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) 


### Resulting Chains:eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) 
* [[15]]...
* [[15],16]
* [16]


### Merging Chains  eval_bmhi_init_bb2_in/7 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 
* [[[15]]] --> 3 


### Specialization of cost equations eval_bmhi_init_bb5_in/7 
* CE 10 is refined into CE [19] 
* CE 9 is refined into CE [20] 


#### Refined cost equations eval_bmhi_init_bb5_in/7 
* CE 19: eval_bmhi_init_bb5_in(A,B,C,D,A,B,E) = 0
     [C>=256,E=0,D=3] 
* CE 20: eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) = 1+ eval_bmhi_init_bb5_in(V__patlen,V__skip2,F,B,C,D,E)
     [255>=V_i_1,V_i_1+1=F] 

### Cost equations --> "Loop" of eval_bmhi_init_bb5_in/7 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_bmhi_init_bb5_in/7 
* Loop 17: eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E)->  eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1',B,C,D,E)
                  [255>=V_i_1,V_i_1+1=V_i_1'] 
* Loop 18: eval_bmhi_init_bb5_in(A,B,C,D,A,B,E) [C>=256,E=0,D=3] 

### Ranking functions of CR eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) 
* RF of phase [17]: [-V_i_1+256]

#### Partial ranking functions of CR eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -V_i_1+256


### Resulting Chains:eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) 
* [[17],18]
* [18]


### Merging Chains  eval_bmhi_init_bb5_in/7 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations eval_bmhi_init_bb7_in/7 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations eval_bmhi_init_bb7_in/7 
* CE 21: eval_bmhi_init_bb7_in(A,B,C,D,A,B,E) = 0
     [C+1>=A,D=2] 
* CE 22: eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) = 1+ eval_bmhi_init_bb7_in(V__patlen,V__skip2,F,G,C,D,E)
     [V__patlen>=V_i_2+2,V_i_2+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_bmhi_init_bb7_in/7 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_bmhi_init_bb7_in/7 
* Loop 19: eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E)->  eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2',B',C,D,E)
                  [V__patlen>=V_i_2+2,V_i_2+1=V_i_2',B'=2,B=2] 
* Loop 20: eval_bmhi_init_bb7_in(A,B,C,D,A,B,E) [C+1>=A,D=2] 

### Ranking functions of CR eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) 
* RF of phase [19]: [V__patlen-V_i_2-1]

#### Partial ranking functions of CR eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V__patlen-V_i_2-1


### Resulting Chains:eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) 
* [[19],20]
* [20]


### Merging Chains  eval_bmhi_init_bb7_in/7 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 


### Specialization of cost equations eval_bmhi_init_bb10_in/3 
* CE 16 is refined into CE [23] 
* CE 15 is refined into CE [24] 


#### Refined cost equations eval_bmhi_init_bb10_in/3 
* CE 23: eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) = 0
     [V_i_3+1>=V__patlen,V_i_3>=0,B=5] 
* CE 24: eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) = 1+ eval_bmhi_init_bb10_in(V__patlen,C,D)
     [V__patlen>=V_i_3+2,V_i_3>=0,V_i_3+1=C,D=5,B=5] 

### Cost equations --> "Loop" of eval_bmhi_init_bb10_in/3 
* CEs [24] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of eval_bmhi_init_bb10_in/3 
* Loop 21: eval_bmhi_init_bb10_in(V__patlen,V_i_3,B)->  eval_bmhi_init_bb10_in(V__patlen,V_i_3',B')
                  [V__patlen>=V_i_3+2,V_i_3>=0,V_i_3+1=V_i_3',B'=5,B=5] 
* Loop 22: eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) [V_i_3+1>=V__patlen,V_i_3>=0,B=5] 

### Ranking functions of CR eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) 
* RF of phase [21]: [V__patlen-V_i_3-1]

#### Partial ranking functions of CR eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V__patlen-V_i_3-1


### Resulting Chains:eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) 
* [[21],22]
* [22]


### Merging Chains  eval_bmhi_init_bb10_in/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations eval_bmhi_init_55/2 
* CE 14 is refined into CE [25,26] 


#### Refined cost equations eval_bmhi_init_55/2 
* CE 25: eval_bmhi_init_55(V__patlen,B) = 1+ eval_bmhi_init_bb10_in(V__patlen,C,D):1
     [1>=V__patlen,D=5,C=0] 
* CE 26: eval_bmhi_init_55(V__patlen,B) = 1+ eval_bmhi_init_bb10_in(V__patlen,C,D):2
     [V__patlen>=2,D=5,C=0] 

### Cost equations --> "Loop" of eval_bmhi_init_55/2 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of eval_bmhi_init_55/2 
* Loop 23: eval_bmhi_init_55(V__patlen,B) [V__patlen>=2] 
* Loop 24: eval_bmhi_init_55(V__patlen,B) [1>=V__patlen] 

### Ranking functions of CR eval_bmhi_init_55(V__patlen,B) 

#### Partial ranking functions of CR eval_bmhi_init_55(V__patlen,B) 


### Resulting Chains:eval_bmhi_init_55(V__patlen,B) 
* [24]
* [23]


### Merging Chains  eval_bmhi_init_55/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations loop_cont_eval_bmhi_init_bb5_in/5 
* CE 11 is refined into CE [27,28,29,30] 


#### Refined cost equations loop_cont_eval_bmhi_init_bb5_in/5 
* CE 27: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) = 1+ eval_bmhi_init_bb7_in(A,B,C,K,A,B,L):1+ eval_bmhi_init_55(A,D):1
     [C+1>=A,1>=A,K=2,J=3] 
* CE 28: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) = 1+ eval_bmhi_init_bb7_in(A,B,C,K,A,B,L):1+ eval_bmhi_init_55(A,D):2
     [C+1>=A,A>=2,K=2,J=3] 
* CE 29: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) = 1+ eval_bmhi_init_bb7_in(A,B,C,K,A,B,L):2+ eval_bmhi_init_55(A,D):1
     [A>=C+2,1>=A,K=2,J=3] 
* CE 30: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) = 1+ eval_bmhi_init_bb7_in(A,B,C,K,A,B,L):2+ eval_bmhi_init_55(A,D):2
     [A>=C+2,A>=2,K=2,J=3] 

### Cost equations --> "Loop" of loop_cont_eval_bmhi_init_bb5_in/5 
* CEs [30] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [27] --> Loop 28 

#### Loops of loop_cont_eval_bmhi_init_bb5_in/5 
* Loop 25: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) [A>=C+2,A>=2,J=3] 
* Loop 26: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) [C+1>=A,A>=2,J=3] 
* Loop 27: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) [A>=C+2,1>=A,J=3] 
* Loop 28: loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) [C+1>=A,1>=A,J=3] 

### Ranking functions of CR loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D) 
* [28]
* [27]
* [26]
* [25]


### Merging Chains  loop_cont_eval_bmhi_init_bb5_in/5 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 


### Specialization of cost equations loop_cont_eval_bmhi_init_bb2_in/5 
* CE 8 is refined into CE [31,32,33,34] 


#### Refined cost equations loop_cont_eval_bmhi_init_bb2_in/5 
* CE 31: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) = 1+ eval_bmhi_init_bb5_in(A,B,C,L,A,B,M):1+ loop_cont_eval_bmhi_init_bb5_in(N,A,B,O,D):1
     [C>=256,1>=A,O=0,N=3,M=0,L=3,K=4] 
* CE 32: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) = 1+ eval_bmhi_init_bb5_in(A,B,C,L,A,B,M):1+ loop_cont_eval_bmhi_init_bb5_in(N,A,B,O,D):4
     [A>=2,C>=256,O=0,N=3,M=0,L=3,K=4] 
* CE 33: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) = 1+ eval_bmhi_init_bb5_in(A,B,C,L,A,B,M):2+ loop_cont_eval_bmhi_init_bb5_in(N,A,B,O,D):1
     [1>=A,255>=C,O=0,N=3,M=0,L=3,K=4] 
* CE 34: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) = 1+ eval_bmhi_init_bb5_in(A,B,C,L,A,B,M):2+ loop_cont_eval_bmhi_init_bb5_in(N,A,B,O,D):4
     [A>=2,255>=C,O=0,N=3,M=0,L=3,K=4] 

### Cost equations --> "Loop" of loop_cont_eval_bmhi_init_bb2_in/5 
* CEs [32] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [31] --> Loop 31 
* CEs [33] --> Loop 32 

#### Loops of loop_cont_eval_bmhi_init_bb2_in/5 
* Loop 29: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) [C>=256,A>=2,K=4] 
* Loop 30: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) [A>=2,255>=C,K=4] 
* Loop 31: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) [C>=256,1>=A,K=4] 
* Loop 32: loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) [255>=C,1>=A,K=4] 

### Ranking functions of CR loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) 


### Resulting Chains:loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D) 
* [32]
* [31]
* [30]
* [29]


### Merging Chains  loop_cont_eval_bmhi_init_bb2_in/5 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29]] --> 4 


### Specialization of cost equations eval_bmhi_init_9/3 
* CE 5 is refined into CE [35,36,37,38] 


#### Refined cost equations eval_bmhi_init_9/3 
* CE 35: eval_bmhi_init_9(V__patlen,V__skip2,B) = 1+ eval_bmhi_init_bb2_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E):1+ loop_cont_eval_bmhi_init_bb2_in(F,V__patlen,V__skip2,G,B):1
     [0>=V__patlen,G=0,F=4,E=0,D=4,C=0] 
* CE 36: eval_bmhi_init_9(V__patlen,V__skip2,B) = 1+ eval_bmhi_init_bb2_in(V__patlen,V__skip2,C,D,E,F,G):2+ loop_cont_eval_bmhi_init_bb2_in(H,E,F,I,B):1
     [V__patlen>=1,1>=E,I=0,H=4,G=0,D=4,C=0] 
* CE 37: eval_bmhi_init_9(V__patlen,V__skip2,B) = 1+ eval_bmhi_init_bb2_in(V__patlen,V__skip2,C,D,E,F,G):2+ loop_cont_eval_bmhi_init_bb2_in(H,E,F,I,B):3
     [E>=2,V__patlen>=1,I=0,H=4,G=0,D=4,C=0] 
* CE 38: eval_bmhi_init_9(V__patlen,V__skip2,B) = 1+ eval_bmhi_init_bb2_in(V__patlen,V__skip2,C,D,E,F,G):3
     [V__patlen>=1,C=0] 

### Cost equations --> "Loop" of eval_bmhi_init_9/3 
* CEs [38] --> Loop 33 
* CEs [36,37] --> Loop 34 
* CEs [35] --> Loop 35 

#### Loops of eval_bmhi_init_9/3 
* Loop 33: eval_bmhi_init_9(V__patlen,V__skip2,B) [V__patlen>=1] 
* Loop 34: eval_bmhi_init_9(V__patlen,V__skip2,B) [V__patlen>=1] 
* Loop 35: eval_bmhi_init_9(V__patlen,V__skip2,B) [0>=V__patlen] 

### Ranking functions of CR eval_bmhi_init_9(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_init_9(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_init_9(V__patlen,V__skip2,B) 
* [35]
* [34]
* [33]...


### Merging Chains  eval_bmhi_init_9/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations eval_bmhi_init_6/3 
* CE 3 is refined into CE [39,40,41] 
* CE 4 is refined into CE [42] 


#### Refined cost equations eval_bmhi_init_6/3 
* CE 39: eval_bmhi_init_6(V__patlen,V__skip2,B) = 0+ eval_bmhi_init_9(V__patlen,V__skip2,B):1
     [0>=V__patlen] 
* CE 40: eval_bmhi_init_6(V__patlen,V__skip2,B) = 0+ eval_bmhi_init_9(V__patlen,V__skip2,B):2
     [V__patlen>=1] 
* CE 41: eval_bmhi_init_6(V__patlen,V__skip2,B) = 0+ eval_bmhi_init_9(V__patlen,V__skip2,B):3
     [V__patlen>=1] 
* CE 42: eval_bmhi_init_6(V__patlen,V__skip2,B) = 0
     [] 

### Cost equations --> "Loop" of eval_bmhi_init_6/3 
* CEs [39,40,42] --> Loop 36 
* CEs [41] --> Loop 37 

#### Loops of eval_bmhi_init_6/3 
* Loop 36: eval_bmhi_init_6(V__patlen,V__skip2,B) [] 
* Loop 37: eval_bmhi_init_6(V__patlen,V__skip2,B) [V__patlen>=1] 

### Ranking functions of CR eval_bmhi_init_6(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_init_6(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_init_6(V__patlen,V__skip2,B) 
* [37]...
* [36]


### Merging Chains  eval_bmhi_init_6/3 into  External patterns of execution 
* [[36]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_bmhi_init_start/3 
* CE 2 is refined into CE [43,44] 


#### Refined cost equations eval_bmhi_init_start/3 
* CE 43: eval_bmhi_init_start(V__patlen,V__skip2,B) = 0+ eval_bmhi_init_6(C,V__skip2,B):1
     [] 
* CE 44: eval_bmhi_init_start(V__patlen,V__skip2,B) = 0+ eval_bmhi_init_6(C,V__skip2,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_bmhi_init_start/3 
* CEs [44] --> Loop 38 
* CEs [43] --> Loop 39 

#### Loops of eval_bmhi_init_start/3 
* Loop 38: eval_bmhi_init_start(V__patlen,V__skip2,B) [] 
* Loop 39: eval_bmhi_init_start(V__patlen,V__skip2,B) [] 

### Ranking functions of CR eval_bmhi_init_start(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_init_start(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_init_start(V__patlen,V__skip2,B) 
* [39]
* [38]...


### Merging Chains  eval_bmhi_init_start/3 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) -> [eval_bmhi_init_bb2_in(V__patlen',V__skip2',V_i_0',B',C',D',E')] 
1
#### Cost of phase [15]:eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) -> [eval_bmhi_init_bb2_in(V__patlen',V__skip2',V_i_0',B',C',D',E')] 
1*it(15)+0
#### Cost of phase [15]:eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E) -> [eval_bmhi_init_bb2_in(V__patlen',V__skip2',V_i_0',B',C',D',E')] 
1*it(15)+0
#### Cost of chains of eval_bmhi_init_bb2_in(V__patlen,V__skip2,V_i_0,B,C,D,E):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [V__patlen>=V_i_0+1,V_i_0>=0] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=4,E=0,V_i_0>=0,V__patlen>=V_i_0+1] 

* Chain [16]: 0
  with precondition: [B=4,E=0,D=V__skip2,V__patlen=C,V_i_0>=0,V_i_0>=V__patlen] 


#### Cost of loops [17] 

 * loop 17:eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) -> [eval_bmhi_init_bb5_in(V__patlen',V__skip2',V_i_1',B',C',D',E')] 
1
#### Cost of phase [17]:eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E) -> [eval_bmhi_init_bb5_in(V__patlen',V__skip2',V_i_1',B',C',D',E')] 
1*it(17)+0
  Such that:it(17) =< -V_i_1+256
it(17) =< -V_i_1+V_i_1'

#### Cost of chains of eval_bmhi_init_bb5_in(V__patlen,V__skip2,V_i_1,B,C,D,E):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_i_1+256

  with precondition: [B=3,E=0,V__patlen=C,V__skip2=D,255>=V_i_1] 

* Chain [18]: 0
  with precondition: [B=3,E=0,C=V__patlen,D=V__skip2,V_i_1>=256] 


#### Cost of loops [19] 

 * loop 19:eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) -> [eval_bmhi_init_bb7_in(V__patlen',V__skip2',V_i_2',B',C',D',E')] 
1
#### Cost of phase [19]:eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E) -> [eval_bmhi_init_bb7_in(V__patlen',V__skip2',V_i_2',B',C',D',E')] 
1*it(19)+0
  Such that:it(19) =< V__patlen-V_i_2
it(19) =< V__patlen-V_i_2-V__patlen'+V_i_2'

#### Cost of chains of eval_bmhi_init_bb7_in(V__patlen,V__skip2,V_i_2,B,C,D,E):
* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V__patlen-V_i_2

  with precondition: [B=2,V__patlen=C,V__skip2=D,V__patlen>=V_i_2+2] 

* Chain [20]: 0
  with precondition: [B=2,D=V__skip2,V__patlen=C,V_i_2+1>=V__patlen] 


#### Cost of loops [21] 

 * loop 21:eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) -> [eval_bmhi_init_bb10_in(V__patlen',V_i_3',B')] 
1
#### Cost of phase [21]:eval_bmhi_init_bb10_in(V__patlen,V_i_3,B) -> [eval_bmhi_init_bb10_in(V__patlen',V_i_3',B')] 
1*it(21)+0
  Such that:it(21) =< V__patlen-V_i_3
it(21) =< V__patlen-V_i_3-V__patlen'+V_i_3'

#### Cost of chains of eval_bmhi_init_bb10_in(V__patlen,V_i_3,B):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V__patlen-V_i_3

  with precondition: [B=5,V_i_3>=0,V__patlen>=V_i_3+2] 

* Chain [22]: 0
  with precondition: [B=5,V_i_3>=0,V_i_3+1>=V__patlen] 


#### Cost of chains of eval_bmhi_init_55(V__patlen,B):
* Chain [24]: 1
  with precondition: [1>=V__patlen] 

* Chain [23]: 1*s(1)+1
  Such that:s(1) =< V__patlen

  with precondition: [V__patlen>=2] 


#### Cost of chains of loop_cont_eval_bmhi_init_bb5_in(J,A,B,C,D):
* Chain [28]: 2
  with precondition: [J=3,1>=A,C+1>=A] 

* Chain [27]: 1*s(2)+2
  Such that:s(2) =< A-C

  with precondition: [J=3,1>=A,A>=C+2] 

* Chain [26]: 1*s(3)+2
  Such that:s(3) =< A

  with precondition: [J=3,A>=2,C+1>=A] 

* Chain [25]: 1*s(4)+1*s(5)+2
  Such that:s(5) =< A
s(4) =< A-C

  with precondition: [J=3,A>=2,A>=C+2] 


#### Cost of chains of loop_cont_eval_bmhi_init_bb2_in(K,A,B,C,D):
* Chain [32]: 1*s(6)+3
  Such that:s(6) =< -C+256

  with precondition: [K=4,1>=A,255>=C] 

* Chain [31]: 3
  with precondition: [K=4,1>=A,C>=256] 

* Chain [30]: 1*s(7)+2*s(8)+3
  Such that:s(7) =< -C+256
aux(1) =< A
s(8) =< aux(1)

  with precondition: [K=4,255>=C,A>=2] 

* Chain [29]: 2*s(10)+3
  Such that:aux(2) =< A
s(10) =< aux(2)

  with precondition: [K=4,A>=2,C>=256] 


#### Cost of chains of eval_bmhi_init_9(V__patlen,V__skip2,B):
* Chain [35]: 1*s(12)+4
  Such that:s(12) =< 256

  with precondition: [0>=V__patlen] 

* Chain [34]: 1*aux(4)+0
  with precondition: [V__patlen>=1] 

* Chain [33]...: 1*s(19)+1
  with precondition: [V__patlen>=1] 


#### Cost of chains of eval_bmhi_init_6(V__patlen,V__skip2,B):
* Chain [37]...: 1*s(20)+1
  with precondition: [V__patlen>=1] 

* Chain [36]: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_bmhi_init_start(V__patlen,V__skip2,B):
* Chain [39]: 1*s(23)+0
  with precondition: [] 

* Chain [38]...: 1*s(24)+1
  with precondition: [] 


Closed-form bounds of eval_bmhi_init_start(V__patlen,V__skip2,B): 
-------------------------------------
* Chain [39] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bmhi_init_start(V__patlen,V__skip2,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 72 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 48 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 221 ms.

