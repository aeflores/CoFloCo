Warning: Ignored call to eval_inflate_entry_stop/1 in equation eval_inflate_entry_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_inflate_entry_5/10,eval_inflate_entry_6/11,eval_inflate_entry_bb1_in/10]
1. non_recursive  : [eval_inflate_entry_bb4_in/1]
2. non_recursive  : [eval_inflate_entry_14/1]
3. non_recursive  : [eval_inflate_entry_13/6]
4. non_recursive  : [loop_cont_eval_inflate_entry_bb1_in/7]
5. non_recursive  : [eval_inflate_entry_bb0_in/5]
6. non_recursive  : [eval_inflate_entry_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_inflate_entry_bb1_in/10
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_inflate_entry_bb1_in/7
5. SCC is partially evaluated into eval_inflate_entry_bb0_in/5
6. SCC is partially evaluated into eval_inflate_entry_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_inflate_entry_bb1_in/10 
* CE 4 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations eval_inflate_entry_bb1_in/10 
* CE 9: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) = 0
     [G=0,F=0,E=0,D=0,C=0,B=3,V__wp=0,V__bk=0,V__bb=0] 
* CE 10: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) = 0
     [B=2,V__wp=0,V__bk=0,V__bb=0] 
* CE 11: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) = 1+ eval_inflate_entry_bb1_in(H,I,J,K,B,C,D,E,F,G)
     [K=0,J=0,I=0,H=0,V__wp=0,V__bk=0,V__bb=0] 

### Cost equations --> "Loop" of eval_inflate_entry_bb1_in/10 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_inflate_entry_bb1_in/10 
* Loop 8: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G)->  eval_inflate_entry_bb1_in(V__hufts',V__bb',V__bk',V__wp',B,C,D,E,F,G)
                  [V__wp'=0,V__bk'=0,V__bb'=0,V__hufts'=0,V__wp=0,V__bk=0,V__bb=0] 
* Loop 9: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) [G=0,F=0,E=0,D=0,C=0,B=3,V__wp=0,V__bk=0,V__bb=0] 
* Loop 10: eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) [B=2,V__wp=0,V__bk=0,V__bb=0] 

### Ranking functions of CR eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) 


### Resulting Chains:eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) 
* [[8]]...
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_inflate_entry_bb1_in/10 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9],[9,[8]]] --> 2 
* [[[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_inflate_entry_bb1_in/7 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations loop_cont_eval_inflate_entry_bb1_in/7 
* CE 12: loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) = 0
     [H=3] 
* CE 13: loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_inflate_entry_bb1_in/7 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of loop_cont_eval_inflate_entry_bb1_in/7 
* Loop 11: loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) [H=3] 
* Loop 12: loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) [H=2] 

### Ranking functions of CR loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) 

#### Partial ranking functions of CR loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) 


### Resulting Chains:loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_inflate_entry_bb1_in/7 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_inflate_entry_bb0_in/5 
* CE 3 is refined into CE [14,15,16] 


#### Refined cost equations eval_inflate_entry_bb0_in/5 
* CE 14: eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) = 1+ eval_inflate_entry_bb1_in(V__hufts,C,D,E,F,G,H,I,J,K):1+ loop_cont_eval_inflate_entry_bb1_in(L,G,H,I,J,K,B):1
     [L=2,F=2,E=0,D=0,C=0] 
* CE 15: eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) = 1+ eval_inflate_entry_bb1_in(V__hufts,C,D,E,F,G,H,I,J,K):2+ loop_cont_eval_inflate_entry_bb1_in(L,M,N,O,P,Q,B):2
     [Q=0,P=0,O=0,N=0,M=0,L=3,K=0,J=0,I=0,H=0,G=0,F=3,E=0,D=0,C=0] 
* CE 16: eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) = 1+ eval_inflate_entry_bb1_in(V__hufts,C,D,E,F,G,H,I,J,K):3
     [E=0,D=0,C=0] 

### Cost equations --> "Loop" of eval_inflate_entry_bb0_in/5 
* CEs [16] --> Loop 13 
* CEs [14,15] --> Loop 14 

#### Loops of eval_inflate_entry_bb0_in/5 
* Loop 13: eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) [] 
* Loop 14: eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) [] 

### Ranking functions of CR eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) 

#### Partial ranking functions of CR eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) 


### Resulting Chains:eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B) 
* [14]
* [13]...


### Merging Chains  eval_inflate_entry_bb0_in/5 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_inflate_entry_start/5 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_inflate_entry_start/5 
* CE 17: eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) = 0+ eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B):1
     [] 
* CE 18: eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) = 0+ eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B):2
     [] 

### Cost equations --> "Loop" of eval_inflate_entry_start/5 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_inflate_entry_start/5 
* Loop 15: eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) [] 
* Loop 16: eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) [] 

### Ranking functions of CR eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) 

#### Partial ranking functions of CR eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) 


### Resulting Chains:eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B) 
* [16]
* [15]...


### Merging Chains  eval_inflate_entry_start/5 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) -> [eval_inflate_entry_bb1_in(V__hufts',V__bb',V__bk',V__wp',B',C',D',E',F',G')] 
1
#### Cost of phase [8]:eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) -> [eval_inflate_entry_bb1_in(V__hufts',V__bb',V__bk',V__wp',B',C',D',E',F',G')] 
1*it(8)+0
#### Cost of phase [8]:eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) -> [eval_inflate_entry_bb1_in(V__hufts',V__bb',V__bk',V__wp',B',C',D',E',F',G')] 
1*it(8)+0
#### Cost of phase [8]:eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G) -> [eval_inflate_entry_bb1_in(V__hufts',V__bb',V__bk',V__wp',B',C',D',E',F',G')] 
1*it(8)+0
#### Cost of chains of eval_inflate_entry_bb1_in(V__hufts,V__bb,V__bk,V__wp,B,C,D,E,F,G):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [V__bb=0,V__bk=0,V__wp=0] 

* Chain [[8],10]: 1*it(8)+0
  with precondition: [V__bb=0,V__bk=0,V__wp=0,B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [V__bb=0,V__bk=0,V__wp=0,B=3,C=0,D=0,E=0,F=0,G=0] 

* Chain [10]: 0
  with precondition: [V__bb=0,V__bk=0,V__wp=0,B=2] 

* Chain [9]: 0
  with precondition: [V__bb=0,V__bk=0,V__wp=0,B=3,C=0,D=0,E=0,F=0,G=0] 


#### Cost of chains of loop_cont_eval_inflate_entry_bb1_in(H,A,B,C,D,E,F):
* Chain [12]: 0
  with precondition: [H=2] 

* Chain [11]: 0
  with precondition: [H=3] 


#### Cost of chains of eval_inflate_entry_bb0_in(V__hufts,V__bb,V__bk,V__wp,B):
* Chain [14]: 1*aux(3)+0
  with precondition: [] 

* Chain [13]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B):
* Chain [16]: 1*s(6)+0
  with precondition: [] 

* Chain [15]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_inflate_entry_start(V__hufts,V__bb,V__bk,V__wp,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 26 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 97 ms.

