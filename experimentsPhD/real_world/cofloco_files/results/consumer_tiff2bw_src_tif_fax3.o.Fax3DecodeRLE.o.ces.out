Warning: Ignored call to eval_Fax3DecodeRLE_stop/1 in equation eval_Fax3DecodeRLE_bb56_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Fax3DecodeRLE_bb34_in/10,eval_Fax3DecodeRLE_bb3_in/10,eval_Fax3DecodeRLE_bb9_in/10]
1. recursive  : [eval_Fax3DecodeRLE_bb11_in/11,eval_Fax3DecodeRLE_bb30_in/11]
2. recursive  : [eval_Fax3DecodeRLE_bb2_in/9,loop_cont_eval_Fax3DecodeRLE_bb11_in/12,loop_cont_eval_Fax3DecodeRLE_bb3_in/12]
3. recursive  : [eval_Fax3DecodeRLE_bb40_in/15]
4. recursive  : [eval_Fax3DecodeRLE_128/8,eval_Fax3DecodeRLE_129/8,eval_Fax3DecodeRLE_135/7,eval_Fax3DecodeRLE_136/7,eval_Fax3DecodeRLE_141/9,eval_Fax3DecodeRLE_142/9,eval_Fax3DecodeRLE_166/9,eval_Fax3DecodeRLE_167/9,eval_Fax3DecodeRLE_NewDefault14_in/8,eval_Fax3DecodeRLE_NewDefault_in/7,eval_Fax3DecodeRLE_bb1_in/5,eval_Fax3DecodeRLE_bb36_in/8,eval_Fax3DecodeRLE_bb38_in/9,eval_Fax3DecodeRLE_bb45_in/10,eval_Fax3DecodeRLE_bb48_in/9,eval_Fax3DecodeRLE_bb53_in/9,loop_cont_eval_Fax3DecodeRLE_bb2_in/9,loop_cont_eval_Fax3DecodeRLE_bb40_in/11]
5. recursive  : [eval_Fax3DecodeRLE_bb18_in/3]
6. non_recursive  : [eval_Fax3DecodeRLE_bb56_in/1]
7. non_recursive  : [eval_Fax3DecodeRLE_75/1]
8. non_recursive  : [eval_Fax3DecodeRLE_74/1]
9. non_recursive  : [eval_Fax3DecodeRLE_bb26_in/1]
10. non_recursive  : [eval_Fax3DecodeRLE_bb23_in/1]
11. non_recursive  : [loop_cont_eval_Fax3DecodeRLE_bb18_in/2]
12. non_recursive  : [eval_Fax3DecodeRLE_50/3]
13. non_recursive  : [eval_Fax3DecodeRLE_49/3]
14. non_recursive  : [eval_Fax3DecodeRLE_bb16_in/3]
15. non_recursive  : [eval_Fax3DecodeRLE_44/3]
16. non_recursive  : [eval_Fax3DecodeRLE_43/3]
17. non_recursive  : [eval_Fax3DecodeRLE_bb14_in/3]
18. non_recursive  : [loop_cont_eval_Fax3DecodeRLE_bb1_in/4]
19. non_recursive  : [eval_Fax3DecodeRLE_bb0_in/2]
20. non_recursive  : [eval_Fax3DecodeRLE_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Fax3DecodeRLE_bb3_in/10
1. SCC is partially evaluated into eval_Fax3DecodeRLE_bb11_in/11
2. SCC is partially evaluated into eval_Fax3DecodeRLE_bb2_in/9
3. SCC is partially evaluated into eval_Fax3DecodeRLE_bb40_in/15
4. SCC is partially evaluated into eval_Fax3DecodeRLE_bb1_in/5
5. SCC is partially evaluated into eval_Fax3DecodeRLE_bb18_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_Fax3DecodeRLE_bb18_in/2
12. SCC is partially evaluated into eval_Fax3DecodeRLE_50/3
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_Fax3DecodeRLE_bb16_in/3
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into loop_cont_eval_Fax3DecodeRLE_bb1_in/4
19. SCC is partially evaluated into eval_Fax3DecodeRLE_bb0_in/2
20. SCC is partially evaluated into eval_Fax3DecodeRLE_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Fax3DecodeRLE_bb3_in/10 
* CE 30 is refined into CE [46] 
* CE 31 is refined into CE [47] 
* CE 29 is refined into CE [48] 
* CE 33 is refined into CE [49] 
* CE 32 is refined into CE [50] 


#### Refined cost equations eval_Fax3DecodeRLE_bb3_in/10 
* CE 46: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [E=5] 
* CE 47: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [E=4] 
* CE 48: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [E=3] 
* CE 49: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,D,F,G,H) = 0
     [E=2] 
* CE 50: eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) = 1+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,H,B,C,D,E,F,G)
     [B>=2,5>=B] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb3_in/10 
* CEs [50] --> Loop 34 
* CEs [46] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [48] --> Loop 37 
* CEs [49] --> Loop 38 

#### Loops of eval_Fax3DecodeRLE_bb3_in/10 
* Loop 34: eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G)->  eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1',B,C,D,E,F,G)
                  [B>=2,5>=B] 
* Loop 35: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) [E=5] 
* Loop 36: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) [E=4] 
* Loop 37: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,B,C,D,F) [E=3] 
* Loop 38: eval_Fax3DecodeRLE_bb3_in(A,B,C,D,E,A,D,F,G,H) [E=2] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) 


### Resulting Chains:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) 
* [[34]]...
* [[34],38]
* [[34],37]
* [[34],36]
* [[34],35]
* [38]
* [37]
* [36]
* [35]


### Merging Chains  eval_Fax3DecodeRLE_bb3_in/10 into  External patterns of execution 
* [[38],[38,[34]]] --> 1 
* [[37],[37,[34]]] --> 2 
* [[36],[36,[34]]] --> 3 
* [[35],[35,[34]]] --> 4 
* [[[34]]] --> 5 


### Specialization of cost equations eval_Fax3DecodeRLE_bb11_in/11 
* CE 36 is refined into CE [51] 
* CE 37 is refined into CE [52] 
* CE 38 is refined into CE [53] 
* CE 34 is refined into CE [54] 
* CE 39 is refined into CE [55] 
* CE 35 is refined into CE [56] 


#### Refined cost equations eval_Fax3DecodeRLE_bb11_in/11 
* CE 51: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=7] 
* CE 52: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,G,H,I) = 0
     [A>=G+1,F=6] 
* CE 53: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,G) = 0
     [G>=A,F=3] 
* CE 54: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=3] 
* CE 55: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,E,G,H,I) = 0
     [F=2] 
* CE 56: eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) = 1+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,H,B,C,D,E,F,G)
     [B>=2,7>=B] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb11_in/11 
* CEs [56] --> Loop 39 
* CEs [51] --> Loop 40 
* CEs [52] --> Loop 41 
* CEs [53] --> Loop 42 
* CEs [54] --> Loop 43 
* CEs [55] --> Loop 44 

#### Loops of eval_Fax3DecodeRLE_bb11_in/11 
* Loop 39: eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G)->  eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2',B,C,D,E,F,G)
                  [B>=2,7>=B] 
* Loop 40: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,E) [F=7] 
* Loop 41: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,G,H,I) [A>=G+1,F=6] 
* Loop 42: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,G) [G>=A,F=3] 
* Loop 43: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,B,C,D,E) [F=3] 
* Loop 44: eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E,F,A,E,G,H,I) [F=2] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) 


### Resulting Chains:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) 
* [[39]]...
* [[39],44]
* [[39],43]
* [[39],42]
* [[39],41]
* [[39],40]
* [44]
* [43]
* [42]
* [41]
* [40]


### Merging Chains  eval_Fax3DecodeRLE_bb11_in/11 into  External patterns of execution 
* [[44],[44,[39]]] --> 1 
* [[43],[42,[39]],[43,[39]]] --> 2 
* [[42]] --> 3 
* [[41],[41,[39]]] --> 4 
* [[40],[40,[39]]] --> 5 
* [[[39]]] --> 6 


### Specialization of cost equations eval_Fax3DecodeRLE_bb2_in/9 
* CE 17 is refined into CE [57,58,59] 
* CE 21 is refined into CE [60,61] 
* CE 19 is refined into CE [62,63,64,65] 
* CE 22 is refined into CE [66,67] 
* CE 20 is refined into CE [68,69,70] 
* CE 23 is refined into CE [71,72] 
* CE 18 is refined into CE [73,74,75] 


#### Refined cost equations eval_Fax3DecodeRLE_bb2_in/9 
* CE 57: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) = 2+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,G,A,B,C,E,H):3+ eval_Fax3DecodeRLE_bb11_in(A,B,C,E,H,I,A,B,C,E,F):5
     [I=7,G=4,D=7] 
* CE 58: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,V_6,V__02,V_a0_0,I,J):3+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,I,J,K,C,D,E,F,G):6
     [K=7,H=4,B=7] 
* CE 59: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,I,J,K,L,M):5
     [N=7,H=4,B=7] 
* CE 60: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) = 1+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,G,A,B,C,E,H):4
     [G=5,D=5] 
* CE 61: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 1+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,C,D,E,F,I):5
     [H=5,B=5] 
* CE 62: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) = 2+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,G,A,B,C,E,H):3+ eval_Fax3DecodeRLE_bb11_in(A,B,C,E,H,I,A,B,C,E,F):2
     [I=3,G=4,D=3] 
* CE 63: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) = 2+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,G,A,B,C,E,H):3+ eval_Fax3DecodeRLE_bb11_in(A,B,C,E,H,I,A,B,C,E,F):3
     [F>=A,I=3,G=4,D=3] 
* CE 64: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,V_6,V__02,V_a0_0,I,J):3+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,I,J,K,C,D,E,F,G):6
     [K=3,H=4,B=3] 
* CE 65: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,I,J,K,L,M):5
     [N=3,H=4,B=3] 
* CE 66: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) = 1+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,G,A,B,C,E,F):2
     [G=3,D=3] 
* CE 67: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 1+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,C,D,E,F,G):5
     [H=3,B=3] 
* CE 68: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,E,F,G,H) = 2+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,I,A,B,C,J,K):3+ eval_Fax3DecodeRLE_bb11_in(A,B,C,J,K,L,A,E,M,N,O):1
     [L=2,I=4,D=2] 
* CE 69: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,V_6,V__02,V_a0_0,I,J):3+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,I,J,K,C,D,L,M,N):6
     [K=2,H=4,B=2] 
* CE 70: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 2+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,I,J,K,L,M):5
     [N=2,H=4,B=2] 
* CE 71: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,E,F,G,H) = 1+ eval_Fax3DecodeRLE_bb3_in(A,B,C,C,I,A,E,J,K,L):1
     [I=2,D=2] 
* CE 72: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 1+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,C,D,I,J,K):5
     [H=2,B=2] 
* CE 73: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 3+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,V_6,V__02,V_a0_0,I,J):3+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,I,J,K,V_6,V__02,L,M,N):4+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,L,B,C,D,E,F,G)
     [V_6>=L+1,B>=2,7>=B,K=6,H=4] 
* CE 74: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 3+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,V_6,V__02,V_a0_0,I,J):3+ eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,I,J,K,L,M,N,O,P):6
     [B>=2,7>=B,K=6,H=4] 
* CE 75: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) = 3+ eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_0,H,I,J,K,L,M):5
     [B>=2,7>=B,N=6,H=4] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb2_in/9 
* CEs [58,59] --> Loop 45 
* CEs [61] --> Loop 46 
* CEs [64,65,67] --> Loop 47 
* CEs [69,70,72,74,75] --> Loop 48 
* CEs [73] --> Loop 49 
* CEs [57] --> Loop 50 
* CEs [60] --> Loop 51 
* CEs [62,63,66] --> Loop 52 
* CEs [68,71] --> Loop 53 

#### Loops of eval_Fax3DecodeRLE_bb2_in/9 
* Loop 45: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) [B=7] 
* Loop 46: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) [B=5] 
* Loop 47: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) [B=3] 
* Loop 48: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) [B>=2,7>=B] 
* Loop 49: eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G)->  eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0',B,C,D,E,F,G)
                  [V_6>=V_a0_0'+1,B>=2,7>=B] 
* Loop 50: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) [D=7] 
* Loop 51: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) [D=5] 
* Loop 52: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,B,C,E,F) [D=3] 
* Loop 53: eval_Fax3DecodeRLE_bb2_in(A,B,C,D,A,E,F,G,H) [D=2] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) 


### Resulting Chains:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) 
* [[49]]...
* [[49],53]
* [[49],52]
* [[49],51]
* [[49],50]
* [[49],48]...
* [[49],47]...
* [[49],46]...
* [[49],45]...
* [53]
* [52]
* [51]
* [50]
* [48]...
* [47]...
* [46]...
* [45]...


### Merging Chains  eval_Fax3DecodeRLE_bb2_in/9 into  External patterns of execution 
* [[53],[53,[49]]] --> 1 
* [[52]] --> 2 
* [[52,[49]]] --> 3 
* [[51]] --> 4 
* [[51,[49]]] --> 5 
* [[50]] --> 6 
* [[50,[49]]] --> 7 
* [[47],[47,[49]]] --> 8 
* [[46],[46,[49]]] --> 9 
* [[45],[45,[49]]] --> 10 
* [[48],[48,[49]]] --> 11 
* [[[49]]] --> 12 


### Specialization of cost equations eval_Fax3DecodeRLE_bb40_in/15 
* CE 26 is refined into CE [76] 
* CE 25 is refined into CE [77] 
* CE 24 is refined into CE [78] 


#### Refined cost equations eval_Fax3DecodeRLE_bb40_in/15 
* CE 76: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,A,B,C,D,E,E,H) = 0
     [G=9] 
* CE 77: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,A,B,C,D,E,E,F) = 0
     [G=8] 
* CE 78: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,H,I,J,K,L,M,N) = 1+ eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,O,G,H,I,J,K,L,M,N)
     [F>=A+1,G>=8,9>=G] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb40_in/15 
* CEs [78] --> Loop 54 
* CEs [76] --> Loop 55 
* CEs [77] --> Loop 56 

#### Loops of eval_Fax3DecodeRLE_bb40_in/15 
* Loop 54: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,H,I,J,K,L,M,N)->  eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,A',G,H,I,J,K,L,M,N)
                  [F>=A+1,G>=8,9>=G] 
* Loop 55: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,A,B,C,D,E,E,H) [G=9] 
* Loop 56: eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,E,F,G,A,B,C,D,E,E,F) [G=8] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) 
* [[54]]...
* [[54],56]
* [[54],55]
* [56]
* [55]


### Merging Chains  eval_Fax3DecodeRLE_bb40_in/15 into  External patterns of execution 
* [[56]] --> 1 
* [[56,[54]]] --> 2 
* [[55],[55,[54]]] --> 3 
* [[[54]]] --> 4 


### Specialization of cost equations eval_Fax3DecodeRLE_bb1_in/5 
* CE 14 is refined into CE [79] 
* CE 4 is refined into CE [80,81,82] 
* CE 5 is refined into CE [83,84,85,86,87,88,89] 
* CE 6 is refined into CE [90,91,92,93,94,95,96] 
* CE 7 is refined into CE [97,98,99,100,101,102,103] 
* CE 8 is refined into CE [104,105,106,107,108,109,110,111,112] 
* CE 9 is refined into CE [113,114,115,116,117,118,119,120,121] 
* CE 10 is refined into CE [122,123,124,125,126,127,128,129,130] 
* CE 11 is refined into CE [131,132,133,134,135] 
* CE 12 is refined into CE [136,137,138,139,140] 
* CE 13 is refined into CE [141,142,143,144,145] 


#### Refined cost equations eval_Fax3DecodeRLE_bb1_in/5 
* CE 79: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 0
     [0>=V__02,B=10] 
* CE 80: eval_Fax3DecodeRLE_bb1_in(A,B,C,A,D) = 1+ eval_Fax3DecodeRLE_bb2_in(A,B,E,F,A,D,G,H,I):1
     [B>=1,F=2,E=0,C=2] 
* CE 81: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 1+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,C,D,G,H,I):11
     [V__02>=1,F=2,E=0,B=2] 
* CE 82: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 1+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,C,D,G,H,I):12
     [V__02>=1,F=2,E=0,B=2] 
* CE 83: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,M):3+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [V__02>=1,L=0,K=9,J=0,G=0,F=3,E=0] 
* CE 84: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,L,M,N,O,P,Q,R):4
     [I>=V_6+1,V__02>=1,K=9,J=0,G=0,F=3,E=0] 
* CE 85: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,K):3+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,V__02>=1,J=9,F=3,E=0] 
* CE 86: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,K,L,M,N,O,P,Q):4
     [I>=V_6+1,V_6>=G+1,V__02>=1,J=9,F=3,E=0] 
* CE 87: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):8
     [V__02>=1,L=9,F=3,E=0] 
* CE 88: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=9,F=3,E=0] 
* CE 89: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=9,F=3,E=0] 
* CE 90: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,M):3+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [V__02>=1,L=0,K=9,J=0,G=0,F=7,E=0] 
* CE 91: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,L,M,N,O,P,Q,R):4
     [I>=V_6+1,V__02>=1,K=9,J=0,G=0,F=7,E=0] 
* CE 92: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,K):3+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,V__02>=1,J=9,F=7,E=0] 
* CE 93: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,K,L,M,N,O,P,Q):4
     [I>=V_6+1,V_6>=G+1,V__02>=1,J=9,F=7,E=0] 
* CE 94: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):10
     [V__02>=1,L=9,F=7,E=0] 
* CE 95: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=9,F=7,E=0] 
* CE 96: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=9,F=7,E=0] 
* CE 97: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,H,H,H,K,V_6,V__02,L,H,H,H,M):3+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [V__02>=1,L=0,K=9,J=0,G=0,F=5,E=0] 
* CE 98: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,H,H,H,K,L,M,N,O,P,Q,R):4
     [H>=V_6+1,V__02>=1,K=9,J=0,G=0,F=5,E=0] 
* CE 99: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,H,H,H,J,V_6,V__02,G,H,H,H,K):3+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,V__02>=1,J=9,F=5,E=0] 
* CE 100: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,H,H,H,J,K,L,M,N,O,P,Q):4
     [H>=V_6+1,V_6>=G+1,V__02>=1,J=9,F=5,E=0] 
* CE 101: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):9
     [V__02>=1,L=9,F=5,E=0] 
* CE 102: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=9,F=5,E=0] 
* CE 103: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=9,F=5,E=0] 
* CE 104: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,I):1+ eval_Fax3DecodeRLE_bb1_in(V_6,M,B,C,D)
     [V__02>=1,L=0,K=8,J=0,G=0,F=3,E=0] 
* CE 105: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,M):2+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [I>=V_6+1,V__02>=1,L=0,K=8,J=0,G=0,F=3,E=0] 
* CE 106: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,L,M,N,O,P,Q,R):4
     [I>=V_6+1,V__02>=1,K=8,J=0,G=0,F=3,E=0] 
* CE 107: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,I):1+ eval_Fax3DecodeRLE_bb1_in(V_6,K,B,C,D)
     [V_6>=G+1,V__02>=1,J=8,F=3,E=0] 
* CE 108: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,K):2+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,I>=V_6+1,V__02>=1,J=8,F=3,E=0] 
* CE 109: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,K,L,M,N,O,P,Q):4
     [I>=V_6+1,V_6>=G+1,V__02>=1,J=8,F=3,E=0] 
* CE 110: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):8
     [V__02>=1,L=8,F=3,E=0] 
* CE 111: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=8,F=3,E=0] 
* CE 112: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=8,F=3,E=0] 
* CE 113: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,I):1+ eval_Fax3DecodeRLE_bb1_in(V_6,M,B,C,D)
     [V__02>=1,L=0,K=8,J=0,G=0,F=7,E=0] 
* CE 114: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,V_6,V__02,L,H,I,I,M):2+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [I>=V_6+1,V__02>=1,L=0,K=8,J=0,G=0,F=7,E=0] 
* CE 115: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,I,I,I,K,L,M,N,O,P,Q,R):4
     [I>=V_6+1,V__02>=1,K=8,J=0,G=0,F=7,E=0] 
* CE 116: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,I):1+ eval_Fax3DecodeRLE_bb1_in(V_6,K,B,C,D)
     [V_6>=G+1,V__02>=1,J=8,F=7,E=0] 
* CE 117: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,V_6,V__02,G,H,I,I,K):2+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,I>=V_6+1,V__02>=1,J=8,F=7,E=0] 
* CE 118: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,I,I,I,J,K,L,M,N,O,P,Q):4
     [I>=V_6+1,V_6>=G+1,V__02>=1,J=8,F=7,E=0] 
* CE 119: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):10
     [V__02>=1,L=8,F=7,E=0] 
* CE 120: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=8,F=7,E=0] 
* CE 121: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=8,F=7,E=0] 
* CE 122: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,H,H,H,K,V_6,V__02,L,H,H,H,H):1+ eval_Fax3DecodeRLE_bb1_in(V_6,M,B,C,D)
     [V__02>=1,L=0,K=8,J=0,G=0,F=5,E=0] 
* CE 123: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,H,H,H,K,V_6,V__02,L,H,H,H,M):2+ eval_Fax3DecodeRLE_bb1_in(V_6,N,B,C,D)
     [H>=V_6+1,V__02>=1,L=0,K=8,J=0,G=0,F=5,E=0] 
* CE 124: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,J,H,H,H,H,K,L,M,N,O,P,Q,R):4
     [H>=V_6+1,V__02>=1,K=8,J=0,G=0,F=5,E=0] 
* CE 125: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,H,H,H,J,V_6,V__02,G,H,H,H,H):1+ eval_Fax3DecodeRLE_bb1_in(V_6,K,B,C,D)
     [V_6>=G+1,V__02>=1,J=8,F=5,E=0] 
* CE 126: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,H,H,H,J,V_6,V__02,G,H,H,H,K):2+ eval_Fax3DecodeRLE_bb1_in(V_6,L,B,C,D)
     [V_6>=G+1,H>=V_6+1,V__02>=1,J=8,F=5,E=0] 
* CE 127: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb40_in(V_6,V__02,G,H,H,H,H,J,K,L,M,N,O,P,Q):4
     [H>=V_6+1,V_6>=G+1,V__02>=1,J=8,F=5,E=0] 
* CE 128: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):9
     [V__02>=1,L=8,F=5,E=0] 
* CE 129: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,L=8,F=5,E=0] 
* CE 130: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 3+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,L=8,F=5,E=0] 
* CE 131: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):2+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V__02>=1,G=0,F=3,E=0] 
* CE 132: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):3+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V_6>=G+1,V__02>=1,F=3,E=0] 
* CE 133: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):8
     [V__02>=1,F=3,E=0] 
* CE 134: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,F=3,E=0] 
* CE 135: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,F=3,E=0] 
* CE 136: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):6+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V__02>=1,G=0,F=7,E=0] 
* CE 137: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):7+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V_6>=G+1,V__02>=1,F=7,E=0] 
* CE 138: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):10
     [V__02>=1,F=7,E=0] 
* CE 139: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,F=7,E=0] 
* CE 140: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,F=7,E=0] 
* CE 141: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):4+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V__02>=1,G=0,F=5,E=0] 
* CE 142: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,V_6,V__02,G,H,I):5+ eval_Fax3DecodeRLE_bb1_in(V_6,J,B,C,D)
     [V_6>=G+1,V__02>=1,F=5,E=0] 
* CE 143: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):9
     [V__02>=1,F=5,E=0] 
* CE 144: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):11
     [V__02>=1,F=5,E=0] 
* CE 145: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) = 2+ eval_Fax3DecodeRLE_bb2_in(V_6,V__02,E,F,G,H,I,J,K):12
     [V__02>=1,F=5,E=0] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb1_in/5 
* CEs [81,82,84,86,87,88,89,91,93,94,95,96,98,100,101,102,103,106,109,110,111,112,115,118,119,120,121,124,127,128,129,130,133,134,135,138,139,140,143,144,145] --> Loop 57 
* CEs [83,85,90,92,97,99,104,105,107,108,113,114,116,117,122,123,125,126,131,132,136,137,141,142] --> Loop 58 
* CEs [79] --> Loop 59 
* CEs [80] --> Loop 60 

#### Loops of eval_Fax3DecodeRLE_bb1_in/5 
* Loop 57: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) [V__02>=1] 
* Loop 58: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D)->  eval_Fax3DecodeRLE_bb1_in(V_6,V__02',B,C,D)
                  [V__02>=1] 
* Loop 59: eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) [0>=V__02,B=10] 
* Loop 60: eval_Fax3DecodeRLE_bb1_in(A,B,C,A,D) [B>=1,C=2] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) 


### Resulting Chains:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) 
* [[58]]...
* [[58],60]
* [[58],59]
* [[58],57]...
* [60]
* [59]
* [57]...


### Merging Chains  eval_Fax3DecodeRLE_bb1_in/5 into  External patterns of execution 
* [[60],[60,[58]]] --> 1 
* [[59]] --> 2 
* [[59,[58]]] --> 3 
* [[57],[[58]],[57,[58]]] --> 4 


### Specialization of cost equations eval_Fax3DecodeRLE_bb18_in/3 
* CE 43 is refined into CE [146] 
* CE 42 is refined into CE [147] 
* CE 41 is refined into CE [148] 


#### Refined cost equations eval_Fax3DecodeRLE_bb18_in/3 
* CE 146: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) = 0
     [B=12] 
* CE 147: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) = 0
     [B=11] 
* CE 148: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) = 1+ eval_Fax3DecodeRLE_bb18_in(V_6,C,B)
     [V_a0_5>=V_6+1] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb18_in/3 
* CEs [148] --> Loop 61 
* CEs [146] --> Loop 62 
* CEs [147] --> Loop 63 

#### Loops of eval_Fax3DecodeRLE_bb18_in/3 
* Loop 61: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B)->  eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5',B)
                  [V_a0_5>=V_6+1] 
* Loop 62: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) [B=12] 
* Loop 63: eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) [B=11] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) 


### Resulting Chains:eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) 
* [[61]]...
* [[61],63]
* [[61],62]
* [63]
* [62]


### Merging Chains  eval_Fax3DecodeRLE_bb18_in/3 into  External patterns of execution 
* [[63],[63,[61]]] --> 1 
* [[62],[62,[61]]] --> 2 
* [[[61]]] --> 3 


### Specialization of cost equations loop_cont_eval_Fax3DecodeRLE_bb18_in/2 
* CE 45 is refined into CE [149] 
* CE 44 is refined into CE [150] 


#### Refined cost equations loop_cont_eval_Fax3DecodeRLE_bb18_in/2 
* CE 149: loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) = 0
     [F=12] 
* CE 150: loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) = 0
     [F=11] 

### Cost equations --> "Loop" of loop_cont_eval_Fax3DecodeRLE_bb18_in/2 
* CEs [149] --> Loop 64 
* CEs [150] --> Loop 65 

#### Loops of loop_cont_eval_Fax3DecodeRLE_bb18_in/2 
* Loop 64: loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) [F=12] 
* Loop 65: loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) [F=11] 

### Ranking functions of CR loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) 

#### Partial ranking functions of CR loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) 


### Resulting Chains:loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A) 
* [65]
* [64]


### Merging Chains  loop_cont_eval_Fax3DecodeRLE_bb18_in/2 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 


### Specialization of cost equations eval_Fax3DecodeRLE_50/3 
* CE 40 is refined into CE [151,152,153] 


#### Refined cost equations eval_Fax3DecodeRLE_50/3 
* CE 151: eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) = 1+ eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_4,C):1+ loop_cont_eval_Fax3DecodeRLE_bb18_in(D,B):1
     [D=11,C=11] 
* CE 152: eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) = 1+ eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_4,C):2+ loop_cont_eval_Fax3DecodeRLE_bb18_in(D,B):2
     [D=12,C=12] 
* CE 153: eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) = 1+ eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_4,C):3
     [V_a0_4>=V_6+1] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_50/3 
* CEs [153] --> Loop 66 
* CEs [151,152] --> Loop 67 

#### Loops of eval_Fax3DecodeRLE_50/3 
* Loop 66: eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) [V_a0_4>=V_6+1] 
* Loop 67: eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) [] 

### Ranking functions of CR eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) 


### Resulting Chains:eval_Fax3DecodeRLE_50(V_6,V_a0_4,B) 
* [67]
* [66]...


### Merging Chains  eval_Fax3DecodeRLE_50/3 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


### Specialization of cost equations eval_Fax3DecodeRLE_bb16_in/3 
* CE 27 is refined into CE [154,155] 
* CE 28 is refined into CE [156] 


#### Refined cost equations eval_Fax3DecodeRLE_bb16_in/3 
* CE 154: eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) = 0+ eval_Fax3DecodeRLE_50(V_6,V_a0_4,B):1
     [] 
* CE 155: eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) = 0+ eval_Fax3DecodeRLE_50(V_6,V_a0_4,B):2
     [V_a0_4>=V_6+1] 
* CE 156: eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) = 0
     [] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb16_in/3 
* CEs [154,156] --> Loop 68 
* CEs [155] --> Loop 69 

#### Loops of eval_Fax3DecodeRLE_bb16_in/3 
* Loop 68: eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) [] 
* Loop 69: eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) [V_a0_4>=V_6+1] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) 


### Resulting Chains:eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B) 
* [69]...
* [68]


### Merging Chains  eval_Fax3DecodeRLE_bb16_in/3 into  External patterns of execution 
* [[68]] --> 1 
* [[69]] --> 2 


### Specialization of cost equations loop_cont_eval_Fax3DecodeRLE_bb1_in/4 
* CE 15 is refined into CE [157] 
* CE 16 is refined into CE [158,159] 


#### Refined cost equations loop_cont_eval_Fax3DecodeRLE_bb1_in/4 
* CE 157: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) = 0
     [E=10] 
* CE 158: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) = 0+ eval_Fax3DecodeRLE_bb16_in(A,B,C):1
     [E=2] 
* CE 159: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) = 0+ eval_Fax3DecodeRLE_bb16_in(A,B,C):2
     [B>=A+1,E=2] 

### Cost equations --> "Loop" of loop_cont_eval_Fax3DecodeRLE_bb1_in/4 
* CEs [159] --> Loop 70 
* CEs [157] --> Loop 71 
* CEs [158] --> Loop 72 

#### Loops of loop_cont_eval_Fax3DecodeRLE_bb1_in/4 
* Loop 70: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) [B>=A+1,E=2] 
* Loop 71: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) [E=10] 
* Loop 72: loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) [E=2] 

### Ranking functions of CR loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) 


### Resulting Chains:loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C) 
* [72]
* [71]
* [70]...


### Merging Chains  loop_cont_eval_Fax3DecodeRLE_bb1_in/4 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 
* [[70]] --> 3 


### Specialization of cost equations eval_Fax3DecodeRLE_bb0_in/2 
* CE 3 is refined into CE [160,161,162,163,164] 


#### Refined cost equations eval_Fax3DecodeRLE_bb0_in/2 
* CE 160: eval_Fax3DecodeRLE_bb0_in(V_occ,B) = 1+ eval_Fax3DecodeRLE_bb1_in(C,V_occ,D,C,E):1+ loop_cont_eval_Fax3DecodeRLE_bb1_in(F,C,E,B):1
     [V_occ>=1,F=2,D=2] 
* CE 161: eval_Fax3DecodeRLE_bb0_in(V_occ,B) = 1+ eval_Fax3DecodeRLE_bb1_in(C,V_occ,D,C,E):1+ loop_cont_eval_Fax3DecodeRLE_bb1_in(F,C,E,B):3
     [E>=C+1,V_occ>=1,F=2,D=2] 
* CE 162: eval_Fax3DecodeRLE_bb0_in(V_occ,B) = 1+ eval_Fax3DecodeRLE_bb1_in(C,V_occ,D,E,F):2+ loop_cont_eval_Fax3DecodeRLE_bb1_in(G,E,F,B):2
     [0>=V_occ,G=10,D=10] 
* CE 163: eval_Fax3DecodeRLE_bb0_in(V_occ,B) = 1+ eval_Fax3DecodeRLE_bb1_in(C,V_occ,D,E,F):3+ loop_cont_eval_Fax3DecodeRLE_bb1_in(G,E,F,B):2
     [V_occ>=1,G=10,D=10] 
* CE 164: eval_Fax3DecodeRLE_bb0_in(V_occ,B) = 1+ eval_Fax3DecodeRLE_bb1_in(C,V_occ,D,E,F):4
     [V_occ>=1] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_bb0_in/2 
* CEs [161,164] --> Loop 73 
* CEs [160,163] --> Loop 74 
* CEs [162] --> Loop 75 

#### Loops of eval_Fax3DecodeRLE_bb0_in/2 
* Loop 73: eval_Fax3DecodeRLE_bb0_in(V_occ,B) [V_occ>=1] 
* Loop 74: eval_Fax3DecodeRLE_bb0_in(V_occ,B) [V_occ>=1] 
* Loop 75: eval_Fax3DecodeRLE_bb0_in(V_occ,B) [0>=V_occ] 

### Ranking functions of CR eval_Fax3DecodeRLE_bb0_in(V_occ,B) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_bb0_in(V_occ,B) 


### Resulting Chains:eval_Fax3DecodeRLE_bb0_in(V_occ,B) 
* [75]
* [74]
* [73]...


### Merging Chains  eval_Fax3DecodeRLE_bb0_in/2 into  External patterns of execution 
* [[75]] --> 1 
* [[74]] --> 2 
* [[73]] --> 3 


### Specialization of cost equations eval_Fax3DecodeRLE_start/3 
* CE 2 is refined into CE [165,166,167] 


#### Refined cost equations eval_Fax3DecodeRLE_start/3 
* CE 165: eval_Fax3DecodeRLE_start(V_occ,V_s,B) = 0+ eval_Fax3DecodeRLE_bb0_in(V_occ,B):1
     [0>=V_occ] 
* CE 166: eval_Fax3DecodeRLE_start(V_occ,V_s,B) = 0+ eval_Fax3DecodeRLE_bb0_in(V_occ,B):2
     [V_occ>=1] 
* CE 167: eval_Fax3DecodeRLE_start(V_occ,V_s,B) = 0+ eval_Fax3DecodeRLE_bb0_in(V_occ,B):3
     [V_occ>=1] 

### Cost equations --> "Loop" of eval_Fax3DecodeRLE_start/3 
* CEs [167] --> Loop 76 
* CEs [166] --> Loop 77 
* CEs [165] --> Loop 78 

#### Loops of eval_Fax3DecodeRLE_start/3 
* Loop 76: eval_Fax3DecodeRLE_start(V_occ,V_s,B) [V_occ>=1] 
* Loop 77: eval_Fax3DecodeRLE_start(V_occ,V_s,B) [V_occ>=1] 
* Loop 78: eval_Fax3DecodeRLE_start(V_occ,V_s,B) [0>=V_occ] 

### Ranking functions of CR eval_Fax3DecodeRLE_start(V_occ,V_s,B) 

#### Partial ranking functions of CR eval_Fax3DecodeRLE_start(V_occ,V_s,B) 


### Resulting Chains:eval_Fax3DecodeRLE_start(V_occ,V_s,B) 
* [78]
* [77]
* [76]...


### Merging Chains  eval_Fax3DecodeRLE_start/3 into  External patterns of execution 
* [[78]] --> 1 
* [[77]] --> 2 
* [[76]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [34] 

 * loop 34:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1
#### Cost of phase [34]:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1*it(34)+0
#### Cost of phase [34]:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1*it(34)+0
#### Cost of phase [34]:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1*it(34)+0
#### Cost of phase [34]:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1*it(34)+0
#### Cost of phase [34]:eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb3_in(V_6',V__02',V_a0_0',V_a0_1',B',C',D',E',F',G')] 
1*it(34)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb3_in(V_6,V__02,V_a0_0,V_a0_1,B,C,D,E,F,G):
* Chain [[34]]...: 1*it(34)+0
  with precondition: [B>=2,5>=B] 

* Chain [[34],38]: 1*it(34)+0
  with precondition: [B=2,V_6=C] 

* Chain [[34],37]: 1*it(34)+0
  with precondition: [B=3,V_6=C,V__02=D,V_a0_0=E] 

* Chain [[34],36]: 1*it(34)+0
  with precondition: [B=4,V_6=C,V__02=D,V_a0_0=E] 

* Chain [[34],35]: 1*it(34)+0
  with precondition: [B=5,V_6=C,V__02=D,V_a0_0=E] 

* Chain [38]: 0
  with precondition: [B=2,C=V_6,D=V_a0_1] 

* Chain [37]: 0
  with precondition: [B=3,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1] 

* Chain [36]: 0
  with precondition: [B=4,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1] 

* Chain [35]: 0
  with precondition: [B=5,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1] 


#### Cost of loops [39] 

 * loop 39:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of phase [39]:eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb11_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_2',B',C',D',E',F',G')] 
1*it(39)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb11_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_2,B,C,D,E,F,G):
* Chain [[39]]...: 1*it(39)+0
  with precondition: [B>=2,7>=B] 

* Chain [[39],44]: 1*it(39)+0
  with precondition: [B=2,V_6=C] 

* Chain [[39],43]: 1*it(39)+0
  with precondition: [B=3,V_6=C,V__02=D,V_a0_0=E,V_a0_1=F] 

* Chain [[39],42]: 1*it(39)+0
  with precondition: [B=3,V_6=C,V__02=D,V_a0_0=E,V_a0_1=F,G>=V_6] 

* Chain [[39],41]: 1*it(39)+0
  with precondition: [B=6,V_6=C,V__02=D,V_6>=E+1] 

* Chain [[39],40]: 1*it(39)+0
  with precondition: [B=7,V_6=C,V__02=D,V_a0_0=E,V_a0_1=F] 

* Chain [44]: 0
  with precondition: [B=2,C=V_6,D=V_a0_2] 

* Chain [43]: 0
  with precondition: [B=3,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1,G=V_a0_2] 

* Chain [42]: 0
  with precondition: [B=3,D=V__02,E=V_a0_0,F=V_a0_1,V_6=C,G>=V_6] 

* Chain [41]: 0
  with precondition: [B=6,D=V__02,V_6=C,V_6>=E+1] 

* Chain [40]: 0
  with precondition: [B=7,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1,G=V_a0_2] 


#### Cost of loops [49] 

 * loop 49:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
2*s(12)+3
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of phase [49]:eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G) -> [eval_Fax3DecodeRLE_bb2_in(V_6',V__02',V_a0_0',B',C',D',E',F',G')] 
5*it(49)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb2_in(V_6,V__02,V_a0_0,B,C,D,E,F,G):
* Chain [[49]]...: 5*it(49)+0
  with precondition: [B>=2,7>=B] 

* Chain [[49],53]: 6*aux(9)+0
  with precondition: [B=2,V_6=C,V__02>=1] 

* Chain [[49],52]: 6*aux(10)+0
  with precondition: [B=3,D=V__02,V_6=C,D>=1,V_6>=E+1] 

* Chain [[49],51]: 6*it(49)+1
  with precondition: [B=5,D=V__02,V_6=C,D>=1,V_6>=E+1] 

* Chain [[49],50]: 7*it(49)+2
  with precondition: [B=7,D=V__02,V_6=C,D>=1,V_6>=E+1] 

* Chain [[49],48]...: 6*aux(11)+0
  with precondition: [7>=B,V__02>=1,B>=2] 

* Chain [[49],47]...: 6*aux(12)+0
  with precondition: [B=3,V__02>=1] 

* Chain [[49],46]...: 6*it(49)+1
  with precondition: [B=5,V__02>=1] 

* Chain [[49],45]...: 6*aux(13)+0
  with precondition: [B=7,V__02>=1] 

* Chain [53]: 1*aux(9)+0
  with precondition: [B=2,C=V_6,V__02>=1] 

* Chain [52]: 1*aux(10)+0
  with precondition: [B=3,C=V_6,E=V_a0_0,V__02=D,V__02>=1] 

* Chain [51]: 1*s(21)+1
  with precondition: [B=5,C=V_6,E=V_a0_0,V__02=D,V__02>=1] 

* Chain [50]: 2*s(22)+2
  with precondition: [B=7,C=V_6,E=V_a0_0,V__02=D,V__02>=1] 

* Chain [48]...: 1*aux(11)+0
  with precondition: [7>=B,V__02>=1,B>=2] 

* Chain [47]...: 1*aux(12)+0
  with precondition: [B=3,V__02>=1] 

* Chain [46]...: 1*s(35)+1
  with precondition: [B=5,V__02>=1] 

* Chain [45]...: 1*aux(13)+0
  with precondition: [B=7,V__02>=1] 


#### Cost of loops [54] 

 * loop 54:eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) -> [eval_Fax3DecodeRLE_bb40_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_8',V_a0_9',V_a0_10',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [54]:eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) -> [eval_Fax3DecodeRLE_bb40_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_8',V_a0_9',V_a0_10',B',C',D',E',F',G',H',I')] 
1*it(54)+0
#### Cost of phase [54]:eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) -> [eval_Fax3DecodeRLE_bb40_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_8',V_a0_9',V_a0_10',B',C',D',E',F',G',H',I')] 
1*it(54)+0
#### Cost of phase [54]:eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I) -> [eval_Fax3DecodeRLE_bb40_in(V_6',V__02',V_a0_0',V_a0_1',V_a0_8',V_a0_9',V_a0_10',B',C',D',E',F',G',H',I')] 
1*it(54)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb40_in(V_6,V__02,V_a0_0,V_a0_1,V_a0_8,V_a0_9,V_a0_10,B,C,D,E,F,G,H,I):
* Chain [[54]]...: 1*it(54)+0
  with precondition: [V_a0_8=V_a0_9,V_a0_10>=V_6+1,B>=8,9>=B] 

* Chain [[54],56]: 1*it(54)+0
  with precondition: [B=8,V_a0_8=V_a0_9,V_6=C,V__02=D,V_a0_0=E,V_a0_1=F,V_a0_8=G,V_a0_8=H,V_a0_10>=V_6+1] 

* Chain [[54],55]: 1*it(54)+0
  with precondition: [B=9,V_a0_8=V_a0_9,V_6=C,V__02=D,V_a0_0=E,V_a0_1=F,V_a0_8=G,V_a0_8=H,V_a0_10>=V_6+1] 

* Chain [56]: 0
  with precondition: [B=8,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1,V_a0_9=V_a0_8,I=V_a0_10,V_a0_9=G,V_a0_9=H] 

* Chain [55]: 0
  with precondition: [B=9,C=V_6,D=V__02,E=V_a0_0,F=V_a0_1,V_a0_9=V_a0_8,V_a0_9=G,V_a0_9=H] 


#### Cost of loops [58] 

 * loop 58:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) -> [eval_Fax3DecodeRLE_bb1_in(V_6',V__02',B',C',D')] 
1*s(86)+0
#### Cost of phase [58]:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) -> [eval_Fax3DecodeRLE_bb1_in(V_6',V__02',B',C',D')] 
1*s(87)+0
#### Cost of phase [58]:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) -> [eval_Fax3DecodeRLE_bb1_in(V_6',V__02',B',C',D')] 
1*s(87)+0
#### Cost of phase [58]:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) -> [eval_Fax3DecodeRLE_bb1_in(V_6',V__02',B',C',D')] 
1*s(87)+0
#### Cost of phase [58]:eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D) -> [eval_Fax3DecodeRLE_bb1_in(V_6',V__02',B',C',D')] 
1*s(87)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb1_in(V_6,V__02,B,C,D):
* Chain [[58]]...: 1*s(87)+0
  with precondition: [V__02>=1] 

* Chain [[58],60]: 2*s(87)+1
  with precondition: [B=2,V_6=C,V__02>=1] 

* Chain [[58],59]: 1*s(87)+0
  with precondition: [B=10,V__02>=1] 

* Chain [[58],57]...: 2*aux(21)+0
  with precondition: [V__02>=1] 

* Chain [60]: 1*s(88)+1
  with precondition: [B=2,C=V_6,V__02>=1] 

* Chain [59]: 0
  with precondition: [B=10,0>=V__02] 

* Chain [57]...: 1*aux(21)+0
  with precondition: [V__02>=1] 


#### Cost of loops [61] 

 * loop 61:eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) -> [eval_Fax3DecodeRLE_bb18_in(V_6',V_a0_5',B')] 
1
#### Cost of phase [61]:eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) -> [eval_Fax3DecodeRLE_bb18_in(V_6',V_a0_5',B')] 
1*it(61)+0
#### Cost of phase [61]:eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) -> [eval_Fax3DecodeRLE_bb18_in(V_6',V_a0_5',B')] 
1*it(61)+0
#### Cost of phase [61]:eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B) -> [eval_Fax3DecodeRLE_bb18_in(V_6',V_a0_5',B')] 
1*it(61)+0
#### Cost of chains of eval_Fax3DecodeRLE_bb18_in(V_6,V_a0_5,B):
* Chain [[61]]...: 1*it(61)+0
  with precondition: [V_a0_5>=V_6+1] 

* Chain [[61],63]: 1*it(61)+0
  with precondition: [B=11,V_a0_5>=V_6+1] 

* Chain [[61],62]: 1*it(61)+0
  with precondition: [B=12,V_a0_5>=V_6+1] 

* Chain [63]: 0
  with precondition: [B=11] 

* Chain [62]: 0
  with precondition: [B=12] 


#### Cost of chains of loop_cont_eval_Fax3DecodeRLE_bb18_in(F,A):
* Chain [65]: 0
  with precondition: [F=11] 

* Chain [64]: 0
  with precondition: [F=12] 


#### Cost of chains of eval_Fax3DecodeRLE_50(V_6,V_a0_4,B):
* Chain [67]: 1*aux(26)+0
  with precondition: [] 

* Chain [66]...: 1*s(151)+1
  with precondition: [V_a0_4>=V_6+1] 


#### Cost of chains of eval_Fax3DecodeRLE_bb16_in(V_6,V_a0_4,B):
* Chain [69]...: 1*s(152)+1
  with precondition: [V_a0_4>=V_6+1] 

* Chain [68]: 1*aux(27)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_Fax3DecodeRLE_bb1_in(E,A,B,C):
* Chain [72]: 1*s(154)+0
  with precondition: [E=2] 

* Chain [71]: 0
  with precondition: [E=10] 

* Chain [70]...: 1*s(155)+1
  with precondition: [E=2,B>=A+1] 


#### Cost of chains of eval_Fax3DecodeRLE_bb0_in(V_occ,B):
* Chain [75]: 1
  with precondition: [0>=V_occ] 

* Chain [74]: 1*aux(28)+0
  with precondition: [V_occ>=1] 

* Chain [73]...: 1*aux(29)+0
  with precondition: [V_occ>=1] 


#### Cost of chains of eval_Fax3DecodeRLE_start(V_occ,V_s,B):
* Chain [78]: 1
  with precondition: [0>=V_occ] 

* Chain [77]: 1*s(162)+0
  with precondition: [V_occ>=1] 

* Chain [76]...: 1*s(163)+0
  with precondition: [V_occ>=1] 


Closed-form bounds of eval_Fax3DecodeRLE_start(V_occ,V_s,B): 
-------------------------------------
* Chain [78] with precondition: [0>=V_occ] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [77] with precondition: [V_occ>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [76]... with precondition: [V_occ>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_Fax3DecodeRLE_start(V_occ,V_s,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 185 ms.
* Invariants computed in 116 ms.
   - Backward Invariants 78 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 460 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 235 ms.
   - Equation cost structures 139 ms.
   - Phase cost structures 62 ms.
   - Chain cost structures 70 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1148 ms.

