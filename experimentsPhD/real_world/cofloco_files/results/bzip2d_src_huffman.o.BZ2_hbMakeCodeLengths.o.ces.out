Warning: Ignored call to eval_BZ2_hbMakeCodeLengths_stop/1 in equation loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BZ2_hbMakeCodeLengths_bb1_in/4,eval_BZ2_hbMakeCodeLengths_bb4_in/4]
1. recursive  : [eval_BZ2_hbMakeCodeLengths_bb9_in/9]
2. recursive  : [eval_BZ2_hbMakeCodeLengths_bb7_in/7,loop_cont_eval_BZ2_hbMakeCodeLengths_bb9_in/8]
3. recursive  : [eval_BZ2_hbMakeCodeLengths_bb17_in/11,eval_BZ2_hbMakeCodeLengths_bb20_in/11]
4. recursive  : [eval_BZ2_hbMakeCodeLengths_bb22_in/13,eval_BZ2_hbMakeCodeLengths_bb25_in/13]
5. recursive  : [eval_BZ2_hbMakeCodeLengths_bb30_in/13]
6. recursive  : [eval_BZ2_hbMakeCodeLengths_bb15_in/10,eval_BZ2_hbMakeCodeLengths_bb21_in/11,eval_BZ2_hbMakeCodeLengths_bb26_in/12,eval_BZ2_hbMakeCodeLengths_bb29_in/12,loop_cont_eval_BZ2_hbMakeCodeLengths_bb17_in/12,loop_cont_eval_BZ2_hbMakeCodeLengths_bb22_in/13,loop_cont_eval_BZ2_hbMakeCodeLengths_bb30_in/11]
7. recursive  : [eval_BZ2_hbMakeCodeLengths_bb38_in/11]
8. recursive  : [eval_BZ2_hbMakeCodeLengths_bb37_in/12,loop_cont_eval_BZ2_hbMakeCodeLengths_bb38_in/13]
9. recursive  : [eval_BZ2_hbMakeCodeLengths_bb42_in/8]
10. recursive  : [eval_BZ2_hbMakeCodeLengths_174/5,eval_BZ2_hbMakeCodeLengths_175/5,eval_BZ2_hbMakeCodeLengths_43/4,eval_BZ2_hbMakeCodeLengths_44/4,eval_BZ2_hbMakeCodeLengths_bb14_in/4,eval_BZ2_hbMakeCodeLengths_bb6_in/2,loop_cont_eval_BZ2_hbMakeCodeLengths_bb15_in/7,loop_cont_eval_BZ2_hbMakeCodeLengths_bb37_in/8,loop_cont_eval_BZ2_hbMakeCodeLengths_bb42_in/3,loop_cont_eval_BZ2_hbMakeCodeLengths_bb7_in/5]
11. non_recursive  : [loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in/2]
12. non_recursive  : [loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3]
13. non_recursive  : [eval_BZ2_hbMakeCodeLengths_bb0_in/2]
14. non_recursive  : [eval_BZ2_hbMakeCodeLengths_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb1_in/4
1. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb9_in/9
2. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb7_in/7
3. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb17_in/11
4. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb22_in/13
5. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb30_in/13
6. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb15_in/10
7. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb38_in/11
8. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb37_in/12
9. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb42_in/8
10. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb6_in/2
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3
13. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_bb0_in/2
14. SCC is partially evaluated into eval_BZ2_hbMakeCodeLengths_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb1_in/4 
* CE 5 is refined into CE [36] 
* CE 4 is refined into CE [37] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb1_in/4 
* CE 36: eval_BZ2_hbMakeCodeLengths_bb1_in(A,B,C,A) = 0
     [B>=A,B>=0,C=12] 
* CE 37: eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,D,B,C)
     [V_alphaSize>=V_i_0+1,V_i_0>=0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb1_in/4 
* CEs [37] --> Loop 29 
* CEs [36] --> Loop 30 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb1_in/4 
* Loop 29: eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C)->  eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0',B,C)
                  [V_alphaSize>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 30: eval_BZ2_hbMakeCodeLengths_bb1_in(A,B,C,A) [B>=A,B>=0,C=12] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) 
* RF of phase [29]: [V_alphaSize-V_i_0]

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_alphaSize-V_i_0


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) 
* [[29],30]
* [30]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb1_in/4 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb9_in/9 
* CE 27 is refined into CE [38] 
* CE 26 is refined into CE [39] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb9_in/9 
* CE 38: eval_BZ2_hbMakeCodeLengths_bb9_in(A,B,C,D,E,F,A,G,D) = 0
     [A>=B,B+1=G,D=C+1,F=2] 
* CE 39: eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) = 1+ eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,F,V_20,V_28,G,C,D,E)
     [V_alphaSize>=V_i_1,V_20=F+1,V_20=V_nHeap_0+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb9_in/9 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb9_in/9 
* Loop 31: eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E)->  eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0',V_20,V_28,B',C,D,E)
                  [V_alphaSize>=V_i_1,V_20=V_nHeap_0'+1,V_20=V_nHeap_0+1,B'=2,B=2] 
* Loop 32: eval_BZ2_hbMakeCodeLengths_bb9_in(A,B,C,D,E,F,A,G,D) [A>=B,B+1=G,D=C+1,F=2] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) 
* [[31]]...
* [[31],32]
* [32]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb9_in/9 into  External patterns of execution 
* [[32],[32,[31]]] --> 1 
* [[[31]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb7_in/7 
* CE 17 is refined into CE [40] 
* CE 16 is refined into CE [41] 
* CE 15 is refined into CE [42,43] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb7_in/7 
* CE 40: eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C,D,A,B,C) = 0
     [B>=A+1,D=8] 
* CE 41: eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C,D,A,B,C) = 0
     [B>=A+1,D=7] 
* CE 42: eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) = 2+ eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,F,G,H,I,J,V_alphaSize,K,H):1+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,K,H,B,C,D,E)
     [V_alphaSize+1>=K,B>=7,8>=B,H=G+1,K=F+1,H=V_nHeap_0+1,K=V_i_1+1,J=2] 
* CE 43: eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) = 2+ eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,F,G,H,I,J,K):2
     [V_alphaSize>=V_i_1,B>=7,8>=B,V_nHeap_0+1=F,H=2] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb7_in/7 
* CEs [43] --> Loop 33 
* CEs [42] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [41] --> Loop 36 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb7_in/7 
* Loop 33: eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) [V_alphaSize>=V_i_1,B>=7,8>=B] 
* Loop 34: eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E)->  eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1',V_nHeap_0',B,C,D,E)
                  [V_alphaSize+1>=V_i_1',B>=7,8>=B,V_nHeap_0+1=V_nHeap_0',V_i_1'=V_i_1+1] 
* Loop 35: eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C,D,A,B,C) [B>=A+1,D=8] 
* Loop 36: eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C,D,A,B,C) [B>=A+1,D=7] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) 
* RF of phase [34]: [V_alphaSize-V_i_1+1,V_alphaSize-V_nHeap_0]

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V_alphaSize-V_i_1+1
    V_alphaSize-V_nHeap_0


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) 
* [[34],36]
* [[34],35]
* [[34],33]...
* [36]
* [35]
* [33]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb7_in/7 into  External patterns of execution 
* [[36,[34]]] --> 1 
* [[36]] --> 2 
* [[35,[34]]] --> 3 
* [[35]] --> 4 
* [[33]] --> 5 
* [[33,[34]]] --> 6 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb17_in/11 
* CE 29 is refined into CE [44] 
* CE 28 is refined into CE [45] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb17_in/11 
* CE 44: eval_BZ2_hbMakeCodeLengths_bb17_in(A,B,C,D,E,F,A,B,C,G,E) = 0
     [E>=1,E+1=G,E+1=D,F=3] 
* CE 45: eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) = 1+ eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,H,V_57,I,C,D,E,F,G)
     [V_57>=1,V_57+1=H,V_57+1=V_nHeap_1,I=3,B=3] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb17_in/11 
* CEs [45] --> Loop 37 
* CEs [44] --> Loop 38 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb17_in/11 
* Loop 37: eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G)->  eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1',V_57,B',C,D,E,F,G)
                  [V_57>=1,V_57+1=V_nHeap_1',V_57+1=V_nHeap_1,B'=3,B=3] 
* Loop 38: eval_BZ2_hbMakeCodeLengths_bb17_in(A,B,C,D,E,F,A,B,C,G,E) [E>=1,E+1=G,E+1=D,F=3] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) 
* [[37]]...
* [[37],38]
* [38]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb17_in/11 into  External patterns of execution 
* [[38],[38,[37]]] --> 1 
* [[[37]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb22_in/13 
* CE 31 is refined into CE [46] 
* CE 30 is refined into CE [47] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb22_in/13 
* CE 46: eval_BZ2_hbMakeCodeLengths_bb22_in(A,B,C,D,E,F,G,A,B,C,D,H,F) = 0
     [F+1=H,F+1=E,G=4] 
* CE 47: eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) = 1+ eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,I,V_95,J,C,D,E,F,G,H)
     [V_95+1=I,V_95+1=V_57,J=4,B=4] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb22_in/13 
* CEs [47] --> Loop 39 
* CEs [46] --> Loop 40 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb22_in/13 
* Loop 39: eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H)->  eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57',V_95,B',C,D,E,F,G,H)
                  [V_95+1=V_57',V_95+1=V_57,B'=4,B=4] 
* Loop 40: eval_BZ2_hbMakeCodeLengths_bb22_in(A,B,C,D,E,F,G,A,B,C,D,H,F) [F+1=H,F+1=E,G=4] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) 
* [[39]]...
* [[39],40]
* [40]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb22_in/13 into  External patterns of execution 
* [[40],[40,[39]]] --> 1 
* [[[39]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb30_in/13 
* CE 33 is refined into CE [48] 
* CE 32 is refined into CE [49] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb30_in/13 
* CE 48: eval_BZ2_hbMakeCodeLengths_bb30_in(A,B,C,D,E,F,G,H,I,A,B,C,G) = 0
     [G=F+1,I=5] 
* CE 49: eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) = 1+ eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,G,V_165,V_173,H,C,D,E,F)
     [V_165=G+1,V_165=V_95+1,H=5,B=5] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb30_in/13 
* CEs [49] --> Loop 41 
* CEs [48] --> Loop 42 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb30_in/13 
* Loop 41: eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F)->  eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95',V_165,V_173,B',C,D,E,F)
                  [V_165=V_95'+1,V_165=V_95+1,B'=5,B=5] 
* Loop 42: eval_BZ2_hbMakeCodeLengths_bb30_in(A,B,C,D,E,F,G,H,I,A,B,C,G) [G=F+1,I=5] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) 
* [[41]]...
* [[41],42]
* [42]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb30_in/13 into  External patterns of execution 
* [[42],[42,[41]]] --> 1 
* [[[41]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb15_in/10 
* CE 20 is refined into CE [50] 
* CE 19 is refined into CE [51] 
* CE 18 is refined into CE [52,53,54,55] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb15_in/10 
* CE 50: eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D,E,A,B,C,D,F) = 0
     [1>=D,E=9] 
* CE 51: eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D,E,A,B,C,D,F) = 0
     [1>=D,F=1,E=6] 
* CE 52: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) = 4+ eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,H,I,J,V_alphaSize,V_i_1,V_nHeap_0,K,I):1+ eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,L,I,M,N,V_alphaSize,V_i_1,V_nHeap_0,O,I,P):1+ eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,Q,I,R,I,S,T,V_alphaSize,V_i_1,V_nHeap_0,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,I,B,C,D,E,F,G)
     [I>=1,B>=6,9>=B,I=R+1,I+1=Q,I=P+1,I+1=O,I=M+1,I+1=L,I+1=K,I+1=H,I+1=V_nHeap_1,T=5,N=4,J=3] 
* CE 53: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) = 4+ eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,H,I,J,V_alphaSize,V_i_1,V_nHeap_0,K,L):1+ eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,M,N,O,P,V_alphaSize,V_i_1,V_nHeap_0,Q,R,O):1+ eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,S,T,O,U,V,W,X,Y,Z,A1):2
     [O>=0,B>=6,9>=B,O+1=U,O+1=T,O+2=S,O+1=R,O+2=Q,O+1=N,O+2=M,O+1=L,O+2=K,O+1=I,O+2=H,O+2=V_nHeap_1,W=5,P=4,J=3] 
* CE 54: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) = 4+ eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,H,I,J,V_alphaSize,V_i_1,V_nHeap_0,K,I):1+ eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,L,I,M,N,O,P,Q,R,S,T):2
     [I>=1,B>=6,9>=B,T+1=U,I=M+1,I+1=L,I+1=K,I+1=H,I+1=V_nHeap_1,V=5,N=4,J=3] 
* CE 55: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) = 4+ eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,H,I,J,K,L,M,N):2
     [V_nHeap_1>=2,B>=6,9>=B,O+1=P,N=Q+1,V_nHeap_1=H+1,R=5,S=4,I=3] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb15_in/10 
* CEs [53,54,55] --> Loop 43 
* CEs [52] --> Loop 44 
* CEs [50] --> Loop 45 
* CEs [51] --> Loop 46 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb15_in/10 
* Loop 43: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) [B>=6,V_nHeap_1>=2,9>=B] 
* Loop 44: eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G)->  eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1',B,C,D,E,F,G)
                  [B>=6,V_nHeap_1>=2,9>=B,V_nHeap_1=V_nHeap_1'+1] 
* Loop 45: eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D,E,A,B,C,D,F) [1>=D,E=9] 
* Loop 46: eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D,E,A,B,C,D,F) [1>=D,F=1,E=6] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) 
* RF of phase [44]: [V_nHeap_1-1]

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    V_nHeap_1-1


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) 
* [[44],46]
* [[44],45]
* [[44],43]...
* [46]
* [45]
* [43]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb15_in/10 into  External patterns of execution 
* [[46,[44]]] --> 1 
* [[46]] --> 2 
* [[45,[44]]] --> 3 
* [[45]] --> 4 
* [[43]] --> 5 
* [[43,[44]]] --> 6 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb38_in/11 
* CE 35 is refined into CE [56] 
* CE 34 is refined into CE [57] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb38_in/11 
* CE 56: eval_BZ2_hbMakeCodeLengths_bb38_in(A,B,C,D,E,F,A,B,C,D,G) = 0
     [A>=E,E+1=G,F=6] 
* CE 57: eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) = 1+ eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,H,C,D,E,F,G)
     [V_alphaSize>=V_i_2,H=6,B=6] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb38_in/11 
* CEs [57] --> Loop 47 
* CEs [56] --> Loop 48 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb38_in/11 
* Loop 47: eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G)->  eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B',C,D,E,F,G)
                  [V_alphaSize>=V_i_2,B'=6,B=6] 
* Loop 48: eval_BZ2_hbMakeCodeLengths_bb38_in(A,B,C,D,E,F,A,B,C,D,G) [A>=E,E+1=G,F=6] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) 
* [[47]]...
* [[47],48]
* [48]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb38_in/11 into  External patterns of execution 
* [[48],[48,[47]]] --> 1 
* [[[47]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb37_in/12 
* CE 23 is refined into CE [58] 
* CE 22 is refined into CE [59] 
* CE 21 is refined into CE [60,61] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb37_in/12 
* CE 58: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) = 0
     [V_i_2>=V_alphaSize+1,B=11] 
* CE 59: eval_BZ2_hbMakeCodeLengths_bb37_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [E>=A+1,G=1,F=10] 
* CE 60: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) = 2+ eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,I,J,V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,K,B,C,D,E,F,G,H)
     [V_alphaSize+1>=K,B>=10,11>=B,K=I+1,K=V_i_2+1,J=6] 
* CE 61: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) = 2+ eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,I,J,K,L,M,N):2
     [V_alphaSize>=V_i_2,B>=10,11>=B,I=6] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb37_in/12 
* CEs [61] --> Loop 49 
* CEs [60] --> Loop 50 
* CEs [58] --> Loop 51 
* CEs [59] --> Loop 52 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb37_in/12 
* Loop 49: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) [V_alphaSize>=V_i_2,B>=10,11>=B] 
* Loop 50: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H)->  eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2',B,C,D,E,F,G,H)
                  [V_alphaSize+1>=V_i_2',B>=10,11>=B,V_i_2'=V_i_2+1] 
* Loop 51: eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) [V_i_2>=V_alphaSize+1,B=11] 
* Loop 52: eval_BZ2_hbMakeCodeLengths_bb37_in(A,B,C,D,E,F,A,B,C,D,E,G) [E>=A+1,G=1,F=10] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) 
* RF of phase [50]: [V_alphaSize-V_i_2+1]

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) 
* Partial RF of phase [50]:
  - RF of loop [50:1]:
    V_alphaSize-V_i_2+1


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) 
* [[50],52]
* [[50],51]
* [[50],49]...
* [52]
* [51]
* [49]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb37_in/12 into  External patterns of execution 
* [[52]] --> 1 
* [[52,[50]]] --> 2 
* [[51]] --> 3 
* [[51,[50]]] --> 4 
* [[49]] --> 5 
* [[49,[50]]] --> 6 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb42_in/8 
* CE 25 is refined into CE [62] 
* CE 24 is refined into CE [63] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb42_in/8 
* CE 62: eval_BZ2_hbMakeCodeLengths_bb42_in(A,B,C,D,E,F,G,A) = 0
     [F>=A+1,G=12] 
* CE 63: eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) = 1+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,D,E,C)
     [V_alphaSize>=V_i_3,V_i_3+1=D,E=12,B=12] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb42_in/8 
* CEs [63] --> Loop 53 
* CEs [62] --> Loop 54 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb42_in/8 
* Loop 53: eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C)->  eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3',B',C)
                  [V_alphaSize>=V_i_3,V_i_3+1=V_i_3',B'=12,B=12] 
* Loop 54: eval_BZ2_hbMakeCodeLengths_bb42_in(A,B,C,D,E,F,G,A) [F>=A+1,G=12] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) 
* RF of phase [53]: [V_alphaSize-V_i_3+1]

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) 
* Partial RF of phase [53]:
  - RF of loop [53:1]:
    V_alphaSize-V_i_3+1


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) 
* [[53],54]
* [54]


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb42_in/8 into  External patterns of execution 
* [[54]] --> 1 
* [[54,[53]]] --> 2 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb6_in/2 
* CE 11 is refined into CE [64,65,66,67,68,69,70,71,72,73] 
* CE 12 is refined into CE [74,75,76,77,78,79,80,81,82,83] 
* CE 13 is refined into CE [84,85,86,87,88,89,90,91,92,93] 
* CE 14 is refined into CE [94,95,96,97,98,99,100,101,102,103] 
* CE 7 is refined into CE [104,105,106,107,108,109,110,111,112,113] 
* CE 8 is refined into CE [114,115,116,117,118,119,120,121,122,123] 
* CE 9 is refined into CE [124,125,126,127,128,129,130,131,132,133] 
* CE 10 is refined into CE [134,135,136,137,138,139,140,141,142,143] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb6_in/2 
* CE 64: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):4
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 65: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 66: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 67: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):4
     [Y=11,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 68: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [Y=11,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 69: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,H=6,E=7,D=0,C=1,B=11] 
* CE 70: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,H=6,E=7,D=0,C=1,B=11] 
* CE 71: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):2+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,U,V,W,X,Y,Z):3
     [0>=V_alphaSize,T=11,S=1,R=0,Q=0,P=1,O=1,N=0,M=0,L=1,K=6,J=0,I=0,H=1,G=0,F=1,E=7,D=0,C=1,B=11] 
* CE 72: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=6,E=7,D=0,C=1,B=11] 
* CE 73: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=6,E=7,D=0,C=1,B=11] 
* CE 74: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):4
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 75: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 76: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 77: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):4
     [Y=11,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 78: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [Y=11,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 79: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,H=6,E=8,D=0,C=1,B=11] 
* CE 80: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,H=6,E=8,D=0,C=1,B=11] 
* CE 81: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):4+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,U,V,W,X,Y,Z):3
     [0>=V_alphaSize,T=11,S=1,R=0,Q=0,P=1,O=1,N=0,M=0,L=1,K=6,J=0,I=0,H=1,G=0,F=1,E=8,D=0,C=1,B=11] 
* CE 82: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=6,E=8,D=0,C=1,B=11] 
* CE 83: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=6,E=8,D=0,C=1,B=11] 
* CE 84: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):4
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 85: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 86: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 87: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):4
     [Y=11,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 88: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [Y=11,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 89: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=1,H=9,E=7,D=0,C=1,B=11] 
* CE 90: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=1,H=9,E=7,D=0,C=1,B=11] 
* CE 91: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):2+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,U,V,W,X,Y,Z):3
     [0>=V_alphaSize,T=11,S=1,R=0,Q=0,P=1,N=0,M=0,L=1,K=9,J=0,I=0,H=1,G=0,F=1,E=7,D=0,C=1,B=11] 
* CE 92: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=1,K=9,E=7,D=0,C=1,B=11] 
* CE 93: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=1,K=9,E=7,D=0,C=1,B=11] 
* CE 94: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):4
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 95: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 96: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,O=11,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 97: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):4
     [Y=11,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 98: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [Y=11,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 99: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=1,H=9,E=8,D=0,C=1,B=11] 
* CE 100: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=1,H=9,E=8,D=0,C=1,B=11] 
* CE 101: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):4+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,U,V,W,X,Y,Z):3
     [0>=V_alphaSize,T=11,S=1,R=0,Q=0,P=1,N=0,M=0,L=1,K=9,J=0,I=0,H=1,G=0,F=1,E=8,D=0,C=1,B=11] 
* CE 102: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=1,K=9,E=8,D=0,C=1,B=11] 
* CE 103: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 3+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=1,K=9,E=8,D=0,C=1,B=11] 
* CE 104: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,V_alphaSize,P,V_alphaSize,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,T,V_alphaSize,U,V,W,X,V_alphaSize):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,Y)
     [V_alphaSize>=2,V_alphaSize+1=V,V_alphaSize+1=T,V_alphaSize+1=R,V_alphaSize+1=P,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,Y=11,X=12,W=1,U=1,S=1,Q=1,O=10,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 105: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 106: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,K=1,J=1,H=6,E=7,D=0,C=1,B=11] 
* CE 107: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(F1,G1,H1,I1,J1,K1,L1,M1):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(N1,O1)
     [O1=11,N1=1,M1=1,L1=12,K1=1,J1=2,I1=1,H1=1,G1=2,F1=1,E1=1,D1=2,C1=1,B1=1,A1=2,Z=1,Y=10,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 108: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [F1=11,G1=12,Y=10,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 109: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,H=6,E=7,D=0,C=1,B=11] 
* CE 110: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,H=6,E=7,D=0,C=1,B=11] 
* CE 111: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):2+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,V_alphaSize,U,V,W,X,Y):1+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,Z,A1,B1,C1,D1,E1,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,F1)
     [0>=V_alphaSize,F1=11,E1=12,D1=1,C1=1,B1=0,A1=0,Z=1,Y=1,X=1,W=0,V=0,U=1,T=10,S=1,R=0,Q=0,P=1,O=1,N=0,M=0,L=1,K=6,J=0,I=0,H=1,G=0,F=1,E=7,D=0,C=1,B=11] 
* CE 112: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=12,K=10,L=6,E=7,D=0,C=1,B=11] 
* CE 113: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=12,K=10,L=6,E=7,D=0,C=1,B=11] 
* CE 114: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,V_alphaSize,P,V_alphaSize,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,T,V_alphaSize,U,V,W,X,V_alphaSize):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,Y)
     [V_alphaSize>=2,V_alphaSize+1=V,V_alphaSize+1=T,V_alphaSize+1=R,V_alphaSize+1=P,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,Y=11,X=12,W=1,U=1,S=1,Q=1,O=10,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 115: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 116: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):1+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,K=1,J=1,H=6,E=8,D=0,C=1,B=11] 
* CE 117: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(F1,G1,H1,I1,J1,K1,L1,M1):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(N1,O1)
     [O1=11,N1=1,M1=1,L1=12,K1=1,J1=2,I1=1,H1=1,G1=2,F1=1,E1=1,D1=2,C1=1,B1=1,A1=2,Z=1,Y=10,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 118: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [F1=11,G1=12,Y=10,X=1,W=1,V=1,U=2,T=1,S=1,R=1,Q=1,P=2,O=1,N=6,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 119: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,H=6,E=8,D=0,C=1,B=11] 
* CE 120: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,H=6,E=8,D=0,C=1,B=11] 
* CE 121: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):4+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):2+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,V_alphaSize,U,V,W,X,Y):1+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,Z,A1,B1,C1,D1,E1,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,F1)
     [0>=V_alphaSize,F1=11,E1=12,D1=1,C1=1,B1=0,A1=0,Z=1,Y=1,X=1,W=0,V=0,U=1,T=10,S=1,R=0,Q=0,P=1,O=1,N=0,M=0,L=1,K=6,J=0,I=0,H=1,G=0,F=1,E=8,D=0,C=1,B=11] 
* CE 122: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=12,K=10,L=6,E=8,D=0,C=1,B=11] 
* CE 123: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=12,K=10,L=6,E=8,D=0,C=1,B=11] 
* CE 124: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,V_alphaSize,P,V_alphaSize,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,T,V_alphaSize,U,V,W,X,V_alphaSize):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,Y)
     [V_alphaSize>=2,V_alphaSize+1=V,V_alphaSize+1=T,V_alphaSize+1=R,V_alphaSize+1=P,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,Y=11,X=12,W=1,U=1,S=1,Q=1,O=10,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 125: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 126: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,J=1,H=9,E=7,D=0,C=1,B=11] 
* CE 127: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(F1,G1,H1,I1,J1,K1,L1,M1):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(N1,O1)
     [O1=11,N1=1,M1=1,L1=12,K1=1,J1=2,I1=1,H1=1,G1=2,F1=1,E1=1,D1=2,C1=1,B1=1,A1=2,Z=1,Y=10,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 128: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [F1=11,G1=12,Y=10,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=7,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 129: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,Q=1,H=9,E=7,D=0,C=1,B=11] 
* CE 130: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,Q=1,H=9,E=7,D=0,C=1,B=11] 
* CE 131: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):2+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,V_alphaSize,U,V,W,X,Y):1+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,Z,A1,B1,C1,D1,E1,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,F1)
     [0>=V_alphaSize,F1=11,E1=12,D1=1,C1=1,B1=0,A1=0,Z=1,Y=1,X=1,W=0,V=0,U=1,T=10,S=1,R=0,Q=0,P=1,N=0,M=0,L=1,K=9,J=0,I=0,H=1,G=0,F=1,E=7,D=0,C=1,B=11] 
* CE 132: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=12,K=10,L=1,M=9,E=7,D=0,C=1,B=11] 
* CE 133: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=12,K=10,L=1,M=9,E=7,D=0,C=1,B=11] 
* CE 134: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,V_alphaSize,P,V_alphaSize,Q,R,S):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,T,V_alphaSize,U,V,W,X,V_alphaSize):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,Y)
     [V_alphaSize>=2,V_alphaSize+1=V,V_alphaSize+1=T,V_alphaSize+1=R,V_alphaSize+1=P,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,Y=11,X=12,W=1,U=1,S=1,Q=1,O=10,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 135: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):5
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 136: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,V_alphaSize,I,V_alphaSize,J,K):3+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,L,V_alphaSize,M,N,O,P,Q,R,S,T,U):6
     [V_alphaSize>=2,V_alphaSize+1=L,V_alphaSize+1=I,V_alphaSize+1=G,V_alphaSize+1=F,V=11,W=12,O=10,N=1,M=1,J=1,H=9,E=8,D=0,C=1,B=11] 
* CE 137: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):2+ eval_BZ2_hbMakeCodeLengths_bb42_in(F1,G1,H1,I1,J1,K1,L1,M1):2+ eval_BZ2_hbMakeCodeLengths_bb6_in(N1,O1)
     [O1=11,N1=1,M1=1,L1=12,K1=1,J1=2,I1=1,H1=1,G1=2,F1=1,E1=1,D1=2,C1=1,B1=1,A1=2,Z=1,Y=10,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 138: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(C,D,E,F,G,H,I):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(J,K,L,M,N,O,P,Q,R,S):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):5
     [F1=11,G1=12,Y=10,X=1,W=1,V=1,U=2,T=1,R=1,Q=1,P=2,O=1,N=9,M=1,L=1,K=2,J=1,I=1,H=2,G=1,F=8,E=0,D=1,C=1,B=11,V_alphaSize=1] 
* CE 139: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):5
     [V_alphaSize>=2,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,Q=1,H=9,E=8,D=0,C=1,B=11] 
* CE 140: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,V_alphaSize):3+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,G,V_alphaSize,V_alphaSize,H,I,J,K,L,M):6
     [V_alphaSize>=3,V_alphaSize+1=G,V_alphaSize+1=F,N=11,O=12,P=10,Q=1,H=9,E=8,D=0,C=1,B=11] 
* CE 141: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,V_alphaSize,F,G):4+ eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,H,I,J,K,V_alphaSize,L,M,N,O):4+ eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,P,Q,R,S,T,V_alphaSize,U,V,W,X,Y):1+ eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,Z,A1,B1,C1,D1,E1,V_alphaSize):1+ eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,F1)
     [0>=V_alphaSize,F1=11,E1=12,D1=1,C1=1,B1=0,A1=0,Z=1,Y=1,X=1,W=0,V=0,U=1,T=10,S=1,R=0,Q=0,P=1,N=0,M=0,L=1,K=9,J=0,I=0,H=1,G=0,F=1,E=8,D=0,C=1,B=11] 
* CE 142: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):5
     [V_alphaSize>=1,I=11,J=12,K=10,L=1,M=9,E=8,D=0,C=1,B=11] 
* CE 143: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) = 5+ eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,C,D,E,F,G,H):6
     [V_alphaSize>=2,I=11,J=12,K=10,L=1,M=9,E=8,D=0,C=1,B=11] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb6_in/2 
* CEs [65,66,68,69,70,72,73,75,76,78,79,80,82,83,85,86,88,89,90,92,93,95,96,98,99,100,102,103,105,106,108,109,110,112,113,115,116,118,119,120,122,123,125,126,128,129,130,132,133,135,136,138,139,140,142,143] --> Loop 55 
* CEs [104,114,124,134] --> Loop 56 
* CEs [111,121,131,141] --> Loop 57 
* CEs [107,117,127,137] --> Loop 58 
* CEs [64,74,84,94] --> Loop 59 
* CEs [71,81,91,101] --> Loop 60 
* CEs [67,77,87,97] --> Loop 61 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb6_in/2 
* Loop 55: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) [V_alphaSize>=1,B=11] 
* Loop 56: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B)->  eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B')
                  [V_alphaSize>=2,B'=11,B=11] 
* Loop 57: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B)->  eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B')
                  [0>=V_alphaSize,B'=11,B=11] 
* Loop 58: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B)->  eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')
                  [B'=11,V_alphaSize'=1,B=11,V_alphaSize=1] 
* Loop 59: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) [V_alphaSize>=2,B=11] 
* Loop 60: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) [0>=V_alphaSize,B=11] 
* Loop 61: eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) [B=11,V_alphaSize=1] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) 
* [[58]]...
* [[58],61]
* [[58],55]...
* [[57]]...
* [[57],60]
* [[56]]...
* [[56],59]
* [[56],55]...
* [61]
* [60]
* [59]
* [55]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb6_in/2 into  External patterns of execution 
* [[61],[61,[58]]] --> 1 
* [[60],[60,[57]]] --> 2 
* [[59],[59,[56]]] --> 3 
* [[[58]],[55,[58]]] --> 4 
* [[55]] --> 5 
* [[55,[56]]] --> 6 
* [[[57]]] --> 7 
* [[[56]]] --> 8 


### Specialization of cost equations loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3 
* CE 6 is refined into CE [144,145,146,147,148,149,150,151] 


#### Refined cost equations loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3 
* CE 144: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(G,H):1
     [H=11,G=1,A=1,F=12] 
* CE 145: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):2
     [0>=A,G=11,F=12] 
* CE 146: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):3
     [A>=2,G=11,F=12] 
* CE 147: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(G,H):4
     [H=11,G=1,A=1,F=12] 
* CE 148: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):5
     [A>=1,G=11,F=12] 
* CE 149: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):6
     [A>=2,G=11,F=12] 
* CE 150: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):7
     [0>=A,G=11,F=12] 
* CE 151: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb6_in(A,G):8
     [A>=2,G=11,F=12] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3 
* CEs [150] --> Loop 62 
* CEs [147,148,149,151] --> Loop 63 
* CEs [146] --> Loop 64 
* CEs [145] --> Loop 65 
* CEs [144] --> Loop 66 

#### Loops of loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3 
* Loop 62: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) [0>=A,F=12] 
* Loop 63: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) [A>=1,F=12] 
* Loop 64: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) [A>=2,F=12] 
* Loop 65: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) [0>=A,F=12] 
* Loop 66: loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) [A=1,F=12] 

### Ranking functions of CR loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) 


### Resulting Chains:loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B) 
* [66]
* [65]
* [64]
* [63]...
* [62]...


### Merging Chains  loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in/3 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[62]] --> 4 
* [[63]] --> 5 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_bb0_in/2 
* CE 3 is refined into CE [152,153,154,155,156] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_bb0_in/2 
* CE 152: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,C,D,V_alphaSize):1+ loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(E,V_alphaSize,B):2
     [0>=V_alphaSize,E=12,D=12,C=0] 
* CE 153: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,C,D,V_alphaSize):1+ loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(E,V_alphaSize,B):4
     [0>=V_alphaSize,E=12,D=12,C=0] 
* CE 154: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(C,D,E,F):2+ loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(G,H,B):1
     [H=1,G=12,F=1,E=12,D=0,C=1,V_alphaSize=1] 
* CE 155: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,C,D,V_alphaSize):2+ loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(E,V_alphaSize,B):3
     [V_alphaSize>=2,E=12,D=12,C=0] 
* CE 156: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) = 1+ eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,C,D,V_alphaSize):2+ loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(E,V_alphaSize,B):5
     [V_alphaSize>=1,E=12,D=12,C=0] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_bb0_in/2 
* CEs [156] --> Loop 67 
* CEs [153] --> Loop 68 
* CEs [155] --> Loop 69 
* CEs [152] --> Loop 70 
* CEs [154] --> Loop 71 

#### Loops of eval_BZ2_hbMakeCodeLengths_bb0_in/2 
* Loop 67: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) [V_alphaSize>=1] 
* Loop 68: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) [0>=V_alphaSize] 
* Loop 69: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) [V_alphaSize>=2] 
* Loop 70: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) [0>=V_alphaSize] 
* Loop 71: eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) [V_alphaSize=1] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B) 
* [71]
* [70]
* [69]
* [68]...
* [67]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_bb0_in/2 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 
* [[69]] --> 3 
* [[68]] --> 4 
* [[67]] --> 5 


### Specialization of cost equations eval_BZ2_hbMakeCodeLengths_start/3 
* CE 2 is refined into CE [157,158,159,160,161] 


#### Refined cost equations eval_BZ2_hbMakeCodeLengths_start/3 
* CE 157: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) = 0+ eval_BZ2_hbMakeCodeLengths_bb0_in(C,B):1
     [C=1,V_alphaSize=1] 
* CE 158: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) = 0+ eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B):2
     [0>=V_alphaSize] 
* CE 159: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) = 0+ eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B):3
     [V_alphaSize>=2] 
* CE 160: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) = 0+ eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B):4
     [0>=V_alphaSize] 
* CE 161: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) = 0+ eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B):5
     [V_alphaSize>=1] 

### Cost equations --> "Loop" of eval_BZ2_hbMakeCodeLengths_start/3 
* CEs [161] --> Loop 72 
* CEs [160] --> Loop 73 
* CEs [159] --> Loop 74 
* CEs [158] --> Loop 75 
* CEs [157] --> Loop 76 

#### Loops of eval_BZ2_hbMakeCodeLengths_start/3 
* Loop 72: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) [V_alphaSize>=1] 
* Loop 73: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) [0>=V_alphaSize] 
* Loop 74: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) [V_alphaSize>=2] 
* Loop 75: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) [0>=V_alphaSize] 
* Loop 76: eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) [V_alphaSize=1] 

### Ranking functions of CR eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) 

#### Partial ranking functions of CR eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) 


### Resulting Chains:eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B) 
* [76]
* [75]
* [74]
* [73]...
* [72]...


### Merging Chains  eval_BZ2_hbMakeCodeLengths_start/3 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[72]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [29] 

 * loop 29:eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) -> [eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize',V_i_0',B',C')] 
1
#### Cost of phase [29]:eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C) -> [eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize',V_i_0',B',C')] 
1*it(29)+0
  Such that:it(29) =< V_alphaSize-V_i_0
it(29) =< V_alphaSize-V_i_0-V_alphaSize'+V_i_0'

#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb1_in(V_alphaSize,V_i_0,B,C):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -V_i_0+C

  with precondition: [B=12,V_alphaSize=C,V_i_0>=0,V_alphaSize>=V_i_0+1] 

* Chain [30]: 0
  with precondition: [B=12,V_alphaSize=C,V_i_0>=0,V_i_0>=V_alphaSize] 


#### Cost of loops [31] 

 * loop 31:eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize',V_i_1',V_nHeap_0',V_20',V_28',B',C',D',E')] 
1
#### Cost of phase [31]:eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize',V_i_1',V_nHeap_0',V_20',V_28',B',C',D',E')] 
1*it(31)+0
#### Cost of phase [31]:eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize',V_i_1',V_nHeap_0',V_20',V_28',B',C',D',E')] 
1*it(31)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb9_in(V_alphaSize,V_i_1,V_nHeap_0,V_20,V_28,B,C,D,E):
* Chain [[31]]...: 1*it(31)+0
  with precondition: [V_alphaSize>=V_i_1,V_nHeap_0+1=V_20,B=2] 

* Chain [[31],32]: 1*it(31)+0
  with precondition: [B=2,V_nHeap_0+1=V_20,V_alphaSize=C,V_i_1+1=D,V_nHeap_0+1=E,V_alphaSize>=V_i_1] 

* Chain [32]: 0
  with precondition: [B=2,V_nHeap_0+1=V_20,V_alphaSize=C,V_i_1+1=D,V_nHeap_0+1=E,V_alphaSize>=V_i_1] 


#### Cost of loops [34] 

 * loop 34:eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize',V_i_1',V_nHeap_0',B',C',D',E')] 
1*s(3)+2
#### Cost of phase [34]:eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize',V_i_1',V_nHeap_0',B',C',D',E')] 
2*it(34)+1*s(4)+0
  Such that:it(34) =< V_alphaSize-V_i_1+1
it(34) =< V_alphaSize-V_i_1-V_alphaSize'+V_i_1'
it(34) =< V_alphaSize-V_nHeap_0
it(34) =< V_alphaSize-V_nHeap_0-V_alphaSize'+V_nHeap_0'

#### Cost of phase [34]:eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize',V_i_1',V_nHeap_0',B',C',D',E')] 
2*it(34)+1*s(4)+0
  Such that:it(34) =< V_alphaSize-V_i_1+1
it(34) =< V_alphaSize-V_i_1-V_alphaSize'+V_i_1'
it(34) =< V_alphaSize-V_nHeap_0
it(34) =< V_alphaSize-V_nHeap_0-V_alphaSize'+V_nHeap_0'

#### Cost of phase [34]:eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E) -> [eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize',V_i_1',V_nHeap_0',B',C',D',E')] 
2*it(34)+1*s(4)+0
  Such that:it(34) =< V_alphaSize-V_i_1+1
it(34) =< V_alphaSize-V_i_1-V_alphaSize'+V_i_1'
it(34) =< V_alphaSize-V_nHeap_0
it(34) =< V_alphaSize-V_nHeap_0-V_alphaSize'+V_nHeap_0'

#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb7_in(V_alphaSize,V_i_1,V_nHeap_0,B,C,D,E):
* Chain [[34],36]: 2*it(34)+1*s(4)+0
  Such that:it(34) =< -V_i_1+E+1

  with precondition: [B=7,V_i_1=V_nHeap_0+1,V_alphaSize=C,V_alphaSize+1=D,V_alphaSize=E,V_i_1>=1,V_alphaSize>=V_i_1] 

* Chain [[34],35]: 2*it(34)+1*s(4)+0
  Such that:it(34) =< -V_i_1+E+1

  with precondition: [B=8,V_i_1=V_nHeap_0+1,V_alphaSize=C,V_alphaSize+1=D,V_alphaSize=E,V_i_1>=1,V_alphaSize>=V_i_1] 

* Chain [[34],33]...: 2*it(34)+2*s(4)+2
  Such that:it(34) =< V_alphaSize-V_nHeap_0

  with precondition: [V_i_1=V_nHeap_0+1,8>=B,V_i_1>=1,B>=7,V_alphaSize>=V_i_1+1] 

* Chain [36]: 0
  with precondition: [B=7,V_i_1=V_nHeap_0+1,V_alphaSize=C,V_i_1=D,V_i_1=E+1,V_i_1>=1,V_i_1>=V_alphaSize+1] 

* Chain [35]: 0
  with precondition: [B=8,V_i_1=V_nHeap_0+1,V_alphaSize=C,V_i_1=D,V_i_1=E+1,V_i_1>=1,V_i_1>=V_alphaSize+1] 

* Chain [33]...: 1*s(5)+2
  with precondition: [V_i_1=V_nHeap_0+1,8>=B,V_i_1>=1,B>=7,V_alphaSize>=V_i_1] 


#### Cost of loops [37] 

 * loop 37:eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',B',C',D',E',F',G')] 
1
#### Cost of phase [37]:eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',B',C',D',E',F',G')] 
1*it(37)+0
#### Cost of phase [37]:eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',B',C',D',E',F',G')] 
1*it(37)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb17_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,B,C,D,E,F,G):
* Chain [[37]]...: 1*it(37)+0
  with precondition: [V_nHeap_1>=2,V_nHeap_1=V_57+1,B=3] 

* Chain [[37],38]: 1*it(37)+0
  with precondition: [B=3,F=V_nHeap_1,F=V_57+1,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,F=G+1,F>=2] 

* Chain [38]: 0
  with precondition: [B=3,C=V_alphaSize,D=V_i_1,E=V_nHeap_0,V_nHeap_1=V_57+1,V_nHeap_1=F,V_nHeap_1=G+1,V_nHeap_1>=2] 


#### Cost of loops [39] 

 * loop 39:eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',B',C',D',E',F',G',H')] 
1
#### Cost of phase [39]:eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',B',C',D',E',F',G',H')] 
1*it(39)+0
#### Cost of phase [39]:eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',B',C',D',E',F',G',H')] 
1*it(39)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb22_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,B,C,D,E,F,G,H):
* Chain [[39]]...: 1*it(39)+0
  with precondition: [V_57=V_95+1,B=4] 

* Chain [[39],40]: 1*it(39)+0
  with precondition: [B=4,V_57=V_95+1,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_nHeap_1=F,V_57=G,V_57=H+1] 

* Chain [40]: 0
  with precondition: [B=4,C=V_alphaSize,D=V_i_1,E=V_nHeap_0,F=V_nHeap_1,V_57=V_95+1,V_57=G,V_57=H+1] 


#### Cost of loops [41] 

 * loop 41:eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) -> [eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',V_165',V_173',B',C',D',E',F')] 
1
#### Cost of phase [41]:eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) -> [eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',V_165',V_173',B',C',D',E',F')] 
1*it(41)+0
#### Cost of phase [41]:eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F) -> [eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_57',V_95',V_165',V_173',B',C',D',E',F')] 
1*it(41)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb30_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_57,V_95,V_165,V_173,B,C,D,E,F):
* Chain [[41]]...: 1*it(41)+0
  with precondition: [V_95+1=V_165,B=5] 

* Chain [[41],42]: 1*it(41)+0
  with precondition: [B=5,V_95+1=V_165,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_95+1=F] 

* Chain [42]: 0
  with precondition: [B=5,C=V_alphaSize,D=V_i_1,E=V_nHeap_0,V_95+1=V_165,V_95+1=F] 


#### Cost of loops [44] 

 * loop 44:eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',B',C',D',E',F',G')] 
3*s(12)+4
#### Cost of phase [44]:eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',B',C',D',E',F',G')] 
4*it(44)+3*s(13)+0
  Such that:it(44) =< V_nHeap_1
it(44) =< V_nHeap_1-V_nHeap_1'

#### Cost of phase [44]:eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',B',C',D',E',F',G')] 
4*it(44)+3*s(13)+0
  Such that:it(44) =< V_nHeap_1
it(44) =< V_nHeap_1-V_nHeap_1'

#### Cost of phase [44]:eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',B',C',D',E',F',G')] 
4*it(44)+3*s(13)+0
  Such that:it(44) =< V_nHeap_1
it(44) =< V_nHeap_1-V_nHeap_1'

#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb15_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,B,C,D,E,F,G):
* Chain [[44],46]: 4*it(44)+3*s(13)+0
  Such that:it(44) =< V_nHeap_1

  with precondition: [B=6,F=1,G=1,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_nHeap_1>=2,V_nHeap_0>=V_nHeap_1] 

* Chain [[44],45]: 4*it(44)+3*s(13)+0
  Such that:it(44) =< V_nHeap_1

  with precondition: [B=9,F=1,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_nHeap_1>=2,V_nHeap_0>=V_nHeap_1] 

* Chain [[44],43]...: 4*aux(5)+4*it(44)+0
  Such that:it(44) =< V_nHeap_1

  with precondition: [9>=B,V_nHeap_1>=3,B>=6,V_nHeap_0>=V_nHeap_1] 

* Chain [46]: 0
  with precondition: [B=6,G=1,C=V_alphaSize,D=V_i_1,V_nHeap_0=E,V_nHeap_1=F,1>=V_nHeap_1,V_nHeap_0>=V_nHeap_1] 

* Chain [45]: 0
  with precondition: [B=9,C=V_alphaSize,D=V_i_1,V_nHeap_0=E,V_nHeap_1=F,1>=V_nHeap_1,V_nHeap_0>=V_nHeap_1] 

* Chain [43]...: 1*aux(5)+0
  with precondition: [9>=B,V_nHeap_1>=2,B>=6,V_nHeap_0>=V_nHeap_1] 


#### Cost of loops [47] 

 * loop 47:eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G')] 
1
#### Cost of phase [47]:eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G')] 
1*it(47)+0
#### Cost of phase [47]:eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G) -> [eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G')] 
1*it(47)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb38_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G):
* Chain [[47]]...: 1*it(47)+0
  with precondition: [V_alphaSize>=V_i_2,B=6] 

* Chain [[47],48]: 1*it(47)+0
  with precondition: [B=6,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_nHeap_1=F,V_i_2+1=G,V_alphaSize>=V_i_2] 

* Chain [48]: 0
  with precondition: [B=6,D=V_i_1,E=V_nHeap_0,F=V_nHeap_1,V_alphaSize=C,V_i_2+1=G,V_alphaSize>=V_i_2] 


#### Cost of loops [50] 

 * loop 50:eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G',H')] 
1*s(22)+2
#### Cost of phase [50]:eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G',H')] 
2*it(50)+1*s(23)+0
  Such that:it(50) =< V_alphaSize-V_i_2+1
it(50) =< V_alphaSize-V_i_2-V_alphaSize'+V_i_2'

#### Cost of phase [50]:eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G',H')] 
2*it(50)+1*s(23)+0
  Such that:it(50) =< V_alphaSize-V_i_2+1
it(50) =< V_alphaSize-V_i_2-V_alphaSize'+V_i_2'

#### Cost of phase [50]:eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H) -> [eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',B',C',D',E',F',G',H')] 
2*it(50)+1*s(23)+0
  Such that:it(50) =< V_alphaSize-V_i_2+1
it(50) =< V_alphaSize-V_i_2-V_alphaSize'+V_i_2'

#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb37_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,B,C,D,E,F,G,H):
* Chain [[50],52]: 2*it(50)+1*s(23)+0
  Such that:it(50) =< V_alphaSize-V_i_2+1

  with precondition: [B=10,H=1,V_alphaSize=C,V_i_1=D,V_nHeap_0=E,V_nHeap_1=F,V_alphaSize+1=G,V_alphaSize>=V_i_2] 

* Chain [[50],51]: 2*it(50)+1*s(23)+0
  Such that:it(50) =< V_alphaSize-V_i_2+1

  with precondition: [B=11,V_alphaSize>=V_i_2] 

* Chain [[50],49]...: 2*it(50)+2*s(23)+2
  Such that:it(50) =< V_alphaSize-V_i_2

  with precondition: [11>=B,B>=10,V_alphaSize>=V_i_2+1] 

* Chain [52]: 0
  with precondition: [B=10,H=1,D=V_i_1,E=V_nHeap_0,F=V_nHeap_1,V_alphaSize=C,V_i_2=G,V_i_2>=V_alphaSize+1] 

* Chain [51]: 0
  with precondition: [B=11,V_i_2>=V_alphaSize+1] 

* Chain [49]...: 1*s(24)+2
  with precondition: [11>=B,B>=10,V_alphaSize>=V_i_2] 


#### Cost of loops [53] 

 * loop 53:eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) -> [eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',V_i_3',B',C')] 
1
#### Cost of phase [53]:eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C) -> [eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize',V_i_1',V_nHeap_0',V_nHeap_1',V_i_2',V_i_3',B',C')] 
1*it(53)+0
  Such that:it(53) =< V_alphaSize-V_i_3+1
it(53) =< V_alphaSize-V_i_3-V_alphaSize'+V_i_3'

#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb42_in(V_alphaSize,V_i_1,V_nHeap_0,V_nHeap_1,V_i_2,V_i_3,B,C):
* Chain [[53],54]: 1*it(53)+0
  Such that:it(53) =< V_alphaSize-V_i_3+1

  with precondition: [B=12,V_alphaSize=C,V_alphaSize>=V_i_3] 

* Chain [54]: 0
  with precondition: [B=12,V_alphaSize=C,V_i_3>=V_alphaSize+1] 


#### Cost of loops [58] 

 * loop 58:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
1*s(45)+0
#### Cost of phase [58]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
1*s(46)+0
#### Cost of phase [58]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
1*s(46)+0
#### Cost of phase [58]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
1*s(46)+0
#### Cost of loops [57] 

 * loop 57:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
5
#### Cost of phase [57]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
5*it(57)+0
#### Cost of phase [57]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
5*it(57)+0
#### Cost of loops [56] 

 * loop 56:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
36*s(284)+20*s(285)+5
  Such that:s(283) =< V_alphaSize'
s(284) =< s(283)

#### Cost of phase [56]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
25*it(56)+36*s(286)+0
#### Cost of phase [56]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
25*it(56)+36*s(286)+0
#### Cost of phase [56]:eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B) -> [eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize',B')] 
25*it(56)+36*s(286)+0
#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb6_in(V_alphaSize,B):
* Chain [[58]]...: 1*s(46)+0
  with precondition: [V_alphaSize=1,B=11] 

* Chain [[58],61]: 2*aux(18)+0
  with precondition: [V_alphaSize=1,B=11] 

* Chain [[58],55]...: 185*s(46)+208*s(63)+7
  Such that:aux(45) =< 1
s(63) =< aux(45)

  with precondition: [V_alphaSize=1,B=11] 

* Chain [[57]]...: 5*it(57)+0
  with precondition: [0>=V_alphaSize,B=11] 

* Chain [[57],60]: 5*it(57)+3
  with precondition: [B=11,0>=V_alphaSize] 

* Chain [[56]]...: 61*it(56)+0
  with precondition: [V_alphaSize>=2,B=11] 

* Chain [[56],59]: 81*it(56)+32*s(289)+3
  Such that:aux(56) =< V_alphaSize
s(289) =< aux(56)

  with precondition: [B=11,V_alphaSize>=2] 

* Chain [[56],55]...: 245*it(56)+192*s(63)+16*s(74)+7
  Such that:aux(43) =< 1
aux(44) =< V_alphaSize
s(74) =< aux(43)
s(63) =< aux(44)

  with precondition: [B=11,V_alphaSize>=2] 

* Chain [61]: 1*aux(18)+0
  with precondition: [V_alphaSize=1,B=11] 

* Chain [60]: 3
  with precondition: [B=11,0>=V_alphaSize] 

* Chain [59]: 32*s(289)+20*s(290)+3
  Such that:aux(56) =< V_alphaSize
s(289) =< aux(56)

  with precondition: [B=11,V_alphaSize>=2] 

* Chain [55]...: 192*s(63)+184*s(64)+16*s(74)+7
  Such that:aux(43) =< 1
aux(44) =< V_alphaSize
s(74) =< aux(43)
s(63) =< aux(44)

  with precondition: [B=11,V_alphaSize>=1] 


#### Cost of chains of loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(F,A,B):
* Chain [66]: 1*s(326)+1
  with precondition: [F=12,A=1] 

* Chain [65]: 1*s(327)+1
  with precondition: [F=12,0>=A] 

* Chain [64]: 64*s(329)+101*s(330)+4
  Such that:s(328) =< A
s(329) =< s(328)

  with precondition: [F=12,A>=2] 

* Chain [63]...: 491*s(331)+32*s(334)+384*s(335)+8
  Such that:aux(61) =< 1
aux(62) =< A
s(334) =< aux(61)
s(335) =< aux(62)

  with precondition: [F=12,A>=1] 

* Chain [62]...: 5*s(343)+1
  with precondition: [F=12,0>=A] 


#### Cost of chains of eval_BZ2_hbMakeCodeLengths_bb0_in(V_alphaSize,B):
* Chain [71]: 1*s(344)+1*s(345)+2
  Such that:s(344) =< 1

  with precondition: [V_alphaSize=1] 

* Chain [70]: 1*s(346)+2
  with precondition: [0>=V_alphaSize] 

* Chain [69]: 65*s(347)+101*s(350)+5
  Such that:aux(63) =< V_alphaSize
s(347) =< aux(63)

  with precondition: [V_alphaSize>=2] 

* Chain [68]...: 5*s(351)+2
  with precondition: [0>=V_alphaSize] 

* Chain [67]...: 385*s(352)+32*s(355)+491*s(357)+9
  Such that:s(353) =< 1
aux(64) =< V_alphaSize
s(352) =< aux(64)
s(355) =< s(353)

  with precondition: [V_alphaSize>=1] 


#### Cost of chains of eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B):
* Chain [76]: 1*s(358)+1*s(359)+2
  Such that:s(358) =< 1

  with precondition: [V_alphaSize=1] 

* Chain [75]: 1*s(360)+2
  with precondition: [0>=V_alphaSize] 

* Chain [74]: 65*s(362)+101*s(363)+5
  Such that:s(361) =< V_alphaSize
s(362) =< s(361)

  with precondition: [V_alphaSize>=2] 

* Chain [73]...: 5*s(364)+2
  with precondition: [0>=V_alphaSize] 

* Chain [72]...: 385*s(367)+32*s(368)+491*s(369)+9
  Such that:s(365) =< 1
s(366) =< V_alphaSize
s(367) =< s(366)
s(368) =< s(365)

  with precondition: [V_alphaSize>=1] 


Closed-form bounds of eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B): 
-------------------------------------
* Chain [76] with precondition: [V_alphaSize=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [75] with precondition: [0>=V_alphaSize] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [74] with precondition: [V_alphaSize>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [73]... with precondition: [0>=V_alphaSize] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [72]... with precondition: [V_alphaSize>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_BZ2_hbMakeCodeLengths_start(V_alphaSize,V_maxLen,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 146 ms.
* Invariants computed in 151 ms.
   - Backward Invariants 81 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 884 ms.
* Termination proved in 27 ms.
* Upper bounds computed in 998 ms.
   - Equation cost structures 824 ms.
   - Phase cost structures 226 ms.
   - Chain cost structures 107 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 2336 ms.

