Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_13/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_23/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_30/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_37/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main1_13/1]
1. non_recursive  : [eval_main1_12/1]
2. non_recursive  : [eval_main1_11/1]
3. recursive  : [eval_main1_18/1,eval_main1_19/2,eval_main1_20/3,eval_main1_25/4,eval_main1_26/4,eval_main1_bb8_in/1]
4. non_recursive  : [eval_main1_23/1]
5. non_recursive  : [eval_main1_22/1]
6. non_recursive  : [eval_main1_21/1]
7. non_recursive  : [eval_main1_30/1]
8. non_recursive  : [eval_main1_29/1]
9. non_recursive  : [eval_main1_28/1]
10. non_recursive  : [eval_main1_37/1]
11. non_recursive  : [eval_main1_36/1]
12. non_recursive  : [eval_main1_35/1]
13. non_recursive  : [eval_main1_34/1]
14. non_recursive  : [eval_main1_33/2]
15. non_recursive  : [eval_main1_32/2]
16. non_recursive  : [eval_main1_31/1]
17. non_recursive  : [loop_cont_eval_main1_bb8_in/2]
18. non_recursive  : [eval_main1_17/1]
19. non_recursive  : [eval_main1_16/1]
20. non_recursive  : [eval_main1_15/1]
21. non_recursive  : [eval_main1_14/1]
22. non_recursive  : [eval_main1_bb7_in/1]
23. non_recursive  : [eval_main1_10/1]
24. non_recursive  : [eval_main1_9/1]
25. non_recursive  : [eval_main1_8/1]
26. non_recursive  : [eval_main1_7/1]
27. non_recursive  : [eval_main1_5/1]
28. non_recursive  : [eval_main1_4/2]
29. non_recursive  : [eval_main1_bb2_in/2]
30. non_recursive  : [eval_main1_3/2]
31. non_recursive  : [eval_main1_2/2]
32. non_recursive  : [eval_main1_1/2]
33. non_recursive  : [eval_main1_0/2]
34. non_recursive  : [eval_main1_bb0_in/2]
35. non_recursive  : [eval_main1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_main1_bb8_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into loop_cont_eval_main1_bb8_in/2
18. SCC is partially evaluated into eval_main1_17/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_main1_10/1
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_main1_8/1
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_main1_5/1
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_main1_1/2
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is partially evaluated into eval_main1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb8_in/1 
* CE 9 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 12 is refined into CE [20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations eval_main1_bb8_in/1 
* CE 18: eval_main1_bb8_in(B) = 0
     [B=4] 
* CE 19: eval_main1_bb8_in(B) = 0
     [B=3] 
* CE 20: eval_main1_bb8_in(B) = 0
     [B=2] 
* CE 21: eval_main1_bb8_in(B) = 1+ eval_main1_bb8_in(B)
     [] 

### Cost equations --> "Loop" of eval_main1_bb8_in/1 
* CEs [21] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_main1_bb8_in/1 
* Loop 14: eval_main1_bb8_in(B)->  eval_main1_bb8_in(B)
                  [] 
* Loop 15: eval_main1_bb8_in(B) [B=4] 
* Loop 16: eval_main1_bb8_in(B) [B=3] 
* Loop 17: eval_main1_bb8_in(B) [B=2] 

### Ranking functions of CR eval_main1_bb8_in(B) 

#### Partial ranking functions of CR eval_main1_bb8_in(B) 


### Resulting Chains:eval_main1_bb8_in(B) 
* [[14]]...
* [[14],17]
* [[14],16]
* [[14],15]
* [17]
* [16]
* [15]


### Merging Chains  eval_main1_bb8_in/1 into  External patterns of execution 
* [[17],[17,[14]]] --> 1 
* [[16],[16,[14]]] --> 2 
* [[15],[15,[14]]] --> 3 
* [[[14]]] --> 4 


### Specialization of cost equations loop_cont_eval_main1_bb8_in/2 
* CE 15 is refined into CE [22] 
* CE 14 is refined into CE [23] 
* CE 13 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_main1_bb8_in/2 
* CE 22: loop_cont_eval_main1_bb8_in(C,A) = 0
     [C=4] 
* CE 23: loop_cont_eval_main1_bb8_in(C,A) = 0
     [C=3] 
* CE 24: loop_cont_eval_main1_bb8_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_main1_bb8_in/2 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of loop_cont_eval_main1_bb8_in/2 
* Loop 18: loop_cont_eval_main1_bb8_in(C,A) [C=4] 
* Loop 19: loop_cont_eval_main1_bb8_in(C,A) [C=3] 
* Loop 20: loop_cont_eval_main1_bb8_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_main1_bb8_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_main1_bb8_in(C,A) 


### Resulting Chains:loop_cont_eval_main1_bb8_in(C,A) 
* [20]
* [19]
* [18]


### Merging Chains  loop_cont_eval_main1_bb8_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_main1_17/1 
* CE 6 is refined into CE [25,26,27,28] 


#### Refined cost equations eval_main1_17/1 
* CE 25: eval_main1_17(B) = 1+ eval_main1_bb8_in(C):1+ loop_cont_eval_main1_bb8_in(D,B):1
     [D=2,C=2] 
* CE 26: eval_main1_17(B) = 1+ eval_main1_bb8_in(C):2+ loop_cont_eval_main1_bb8_in(D,B):2
     [D=3,C=3] 
* CE 27: eval_main1_17(B) = 1+ eval_main1_bb8_in(C):3+ loop_cont_eval_main1_bb8_in(D,B):3
     [D=4,C=4] 
* CE 28: eval_main1_17(B) = 1+ eval_main1_bb8_in(C):4
     [] 

### Cost equations --> "Loop" of eval_main1_17/1 
* CEs [28] --> Loop 21 
* CEs [25,26,27] --> Loop 22 

#### Loops of eval_main1_17/1 
* Loop 21: eval_main1_17(B) [] 
* Loop 22: eval_main1_17(B) [] 

### Ranking functions of CR eval_main1_17(B) 

#### Partial ranking functions of CR eval_main1_17(B) 


### Resulting Chains:eval_main1_17(B) 
* [22]
* [21]...


### Merging Chains  eval_main1_17/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_main1_10/1 
* CE 16 is refined into CE [29] 
* CE 17 is refined into CE [30,31] 


#### Refined cost equations eval_main1_10/1 
* CE 29: eval_main1_10(B) = 0
     [] 
* CE 30: eval_main1_10(B) = 0+ eval_main1_17(B):1
     [] 
* CE 31: eval_main1_10(B) = 0+ eval_main1_17(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_10/1 
* CEs [31] --> Loop 23 
* CEs [29,30] --> Loop 24 

#### Loops of eval_main1_10/1 
* Loop 23: eval_main1_10(B) [] 
* Loop 24: eval_main1_10(B) [] 

### Ranking functions of CR eval_main1_10(B) 

#### Partial ranking functions of CR eval_main1_10(B) 


### Resulting Chains:eval_main1_10(B) 
* [24]
* [23]...


### Merging Chains  eval_main1_10/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_main1_8/1 
* CE 7 is refined into CE [32,33] 
* CE 8 is refined into CE [34,35] 


#### Refined cost equations eval_main1_8/1 
* CE 32: eval_main1_8(B) = 0+ eval_main1_10(B):1
     [] 
* CE 33: eval_main1_8(B) = 0+ eval_main1_10(B):2
     [] 
* CE 34: eval_main1_8(B) = 0+ eval_main1_17(B):1
     [] 
* CE 35: eval_main1_8(B) = 0+ eval_main1_17(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_8/1 
* CEs [33,35] --> Loop 25 
* CEs [32,34] --> Loop 26 

#### Loops of eval_main1_8/1 
* Loop 25: eval_main1_8(B) [] 
* Loop 26: eval_main1_8(B) [] 

### Ranking functions of CR eval_main1_8(B) 

#### Partial ranking functions of CR eval_main1_8(B) 


### Resulting Chains:eval_main1_8(B) 
* [26]
* [25]...


### Merging Chains  eval_main1_8/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_main1_5/1 
* CE 4 is refined into CE [36,37] 
* CE 5 is refined into CE [38,39] 


#### Refined cost equations eval_main1_5/1 
* CE 36: eval_main1_5(B) = 0+ eval_main1_17(B):1
     [] 
* CE 37: eval_main1_5(B) = 0+ eval_main1_17(B):2
     [] 
* CE 38: eval_main1_5(B) = 0+ eval_main1_8(B):1
     [] 
* CE 39: eval_main1_5(B) = 0+ eval_main1_8(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_5/1 
* CEs [37,39] --> Loop 27 
* CEs [36,38] --> Loop 28 

#### Loops of eval_main1_5/1 
* Loop 27: eval_main1_5(B) [] 
* Loop 28: eval_main1_5(B) [] 

### Ranking functions of CR eval_main1_5(B) 

#### Partial ranking functions of CR eval_main1_5(B) 


### Resulting Chains:eval_main1_5(B) 
* [28]
* [27]...


### Merging Chains  eval_main1_5/1 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_main1_1/2 
* CE 3 is refined into CE [40,41] 


#### Refined cost equations eval_main1_1/2 
* CE 40: eval_main1_1(V_argc,B) = 0+ eval_main1_5(B):1
     [] 
* CE 41: eval_main1_1(V_argc,B) = 0+ eval_main1_5(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_1/2 
* CEs [41] --> Loop 29 
* CEs [40] --> Loop 30 

#### Loops of eval_main1_1/2 
* Loop 29: eval_main1_1(V_argc,B) [] 
* Loop 30: eval_main1_1(V_argc,B) [] 

### Ranking functions of CR eval_main1_1(V_argc,B) 

#### Partial ranking functions of CR eval_main1_1(V_argc,B) 


### Resulting Chains:eval_main1_1(V_argc,B) 
* [30]
* [29]...


### Merging Chains  eval_main1_1/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_main1_start/2 
* CE 2 is refined into CE [42,43] 


#### Refined cost equations eval_main1_start/2 
* CE 42: eval_main1_start(V_argc,B) = 0+ eval_main1_1(V_argc,B):1
     [] 
* CE 43: eval_main1_start(V_argc,B) = 0+ eval_main1_1(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_start/2 
* CEs [43] --> Loop 31 
* CEs [42] --> Loop 32 

#### Loops of eval_main1_start/2 
* Loop 31: eval_main1_start(V_argc,B) [] 
* Loop 32: eval_main1_start(V_argc,B) [] 

### Ranking functions of CR eval_main1_start(V_argc,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,B) 


### Resulting Chains:eval_main1_start(V_argc,B) 
* [32]
* [31]...


### Merging Chains  eval_main1_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1
#### Cost of phase [14]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(14)+0
#### Cost of chains of eval_main1_bb8_in(B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [] 

* Chain [[14],17]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],16]: 1*it(14)+0
  with precondition: [B=3] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=4] 

* Chain [17]: 0
  with precondition: [B=2] 

* Chain [16]: 0
  with precondition: [B=3] 

* Chain [15]: 0
  with precondition: [B=4] 


#### Cost of chains of loop_cont_eval_main1_bb8_in(C,A):
* Chain [20]: 0
  with precondition: [C=2] 

* Chain [19]: 0
  with precondition: [C=3] 

* Chain [18]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_main1_17(B):
* Chain [22]: 1*aux(4)+0
  with precondition: [] 

* Chain [21]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_main1_10(B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 

* Chain [23]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_main1_8(B):
* Chain [26]: 1*aux(6)+0
  with precondition: [] 

* Chain [25]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_main1_5(B):
* Chain [28]: 1*aux(8)+0
  with precondition: [] 

* Chain [27]...: 1*aux(9)+0
  with precondition: [] 


#### Cost of chains of eval_main1_1(V_argc,B):
* Chain [30]: 1*s(18)+0
  with precondition: [] 

* Chain [29]...: 1*s(19)+0
  with precondition: [] 


#### Cost of chains of eval_main1_start(V_argc,B):
* Chain [32]: 1*s(20)+0
  with precondition: [] 

* Chain [31]...: 1*s(21)+0
  with precondition: [] 


Closed-form bounds of eval_main1_start(V_argc,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main1_start(V_argc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 50 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 43 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 210 ms.

