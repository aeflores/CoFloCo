Warning: Ignored call to eval_int_upsample_stop/1 in equation loop_cont_eval_int_upsample_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_int_upsample_bb5_in/8]
1. recursive  : [eval_int_upsample_bb3_in/10,loop_cont_eval_int_upsample_bb5_in/11]
2. recursive  : [eval_int_upsample_24/7,eval_int_upsample_25/7,eval_int_upsample_bb1_in/4,eval_int_upsample_bb9_in/4,loop_cont_eval_int_upsample_bb3_in/8]
3. non_recursive  : [loop_cont_eval_int_upsample_bb1_in/2]
4. non_recursive  : [eval_int_upsample_bb0_in/1]
5. non_recursive  : [eval_int_upsample_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_int_upsample_bb5_in/8
1. SCC is partially evaluated into eval_int_upsample_bb3_in/10
2. SCC is partially evaluated into eval_int_upsample_bb1_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_int_upsample_bb0_in/1
5. SCC is partially evaluated into eval_int_upsample_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_int_upsample_bb5_in/8 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


#### Refined cost equations eval_int_upsample_bb5_in/8 
* CE 12: eval_int_upsample_bb5_in(A,B,C,D,E,A,B,C) = 0
     [A>=D,0>=D,E=2] 
* CE 13: eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) = 1+ eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,F,G,C,D,E)
     [V_10>=V_h_0,V_h_0>=1,V_h_0=F+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_int_upsample_bb5_in/8 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_int_upsample_bb5_in/8 
* Loop 10: eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E)->  eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0',B',C,D,E)
                  [V_10>=V_h_0,V_h_0>=1,V_h_0=V_h_0'+1,B'=2,B=2] 
* Loop 11: eval_int_upsample_bb5_in(A,B,C,D,E,A,B,C) [A>=D,0>=D,E=2] 

### Ranking functions of CR eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) 
* RF of phase [10]: [V_h_0]

#### Partial ranking functions of CR eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_h_0


### Resulting Chains:eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) 
* [[10],11]
* [11]


### Merging Chains  eval_int_upsample_bb5_in/8 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations eval_int_upsample_bb3_in/10 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 7 is refined into CE [16,17] 


#### Refined cost equations eval_int_upsample_bb3_in/10 
* CE 14: eval_int_upsample_bb3_in(A,B,C,D,A,B,C,E,F,G) = 0
     [D=4] 
* CE 15: eval_int_upsample_bb3_in(A,B,C,D,A,B,C,E,F,G) = 0
     [B=F+1,C+1=E,D=3] 
* CE 16: eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) = 2+ eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_10,I,V_10,V_17,V_outrow_0):1+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)
     [B>=3,0>=V_10,4>=B,I=2] 
* CE 17: eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) = 2+ eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_10,I,V_10,V_17,V_outrow_0):2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)
     [V_10>=1,B>=3,4>=B,I=2] 

### Cost equations --> "Loop" of eval_int_upsample_bb3_in/10 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_int_upsample_bb3_in/10 
* Loop 12: eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)->  eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)
                  [B>=3,V_10>=1,4>=B] 
* Loop 13: eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)->  eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H)
                  [B>=3,4>=B,0>=V_10] 
* Loop 14: eval_int_upsample_bb3_in(A,B,C,D,A,B,C,E,F,G) [D=4] 
* Loop 15: eval_int_upsample_bb3_in(A,B,C,D,A,B,C,E,F,G) [B=F+1,C+1=E,D=3] 

### Ranking functions of CR eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) 
* [[13]]...
* [[13],15]
* [[13],14]
* [[12]]...
* [[12],15]
* [[12],14]
* [15]
* [14]


### Merging Chains  eval_int_upsample_bb3_in/10 into  External patterns of execution 
* [[15],[15,[12]],[15,[13]]] --> 1 
* [[14],[14,[12]],[14,[13]]] --> 2 
* [[[13]]] --> 3 
* [[[12]]] --> 4 


### Specialization of cost equations eval_int_upsample_bb1_in/4 
* CE 6 is refined into CE [18] 
* CE 4 is refined into CE [19,20,21] 
* CE 5 is refined into CE [22,23,24] 


#### Refined cost equations eval_int_upsample_bb1_in/4 
* CE 18: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 0
     [B=5] 
* CE 19: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,V_10,V_17,V_outrow_0,D,E,F):2+ eval_int_upsample_bb1_in(V_10,V_17,G,H)
     [V_17+V_outrow_0=G,H=5,C=4,B=5] 
* CE 20: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,D,E,F,G,H,I):3
     [0>=V_10,E+F=J,K=5,C=4,B=5] 
* CE 21: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,D,E,F,G,H,I):4
     [V_10>=1,E+F=J,K=5,C=4,B=5] 
* CE 22: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,V_10,V_17,V_outrow_0,D,E,F):1+ eval_int_upsample_bb1_in(V_10,V_17,G,H)
     [V_17+V_outrow_0=G,V_17=E+1,V_outrow_0+1=D,H=5,C=3,B=5] 
* CE 23: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,D,E,F,G,H,I):3
     [0>=V_10,E+F=J,K=5,C=3,B=5] 
* CE 24: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) = 2+ eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,C,D,E,F,G,H,I):4
     [V_10>=1,E+F=J,K=5,C=3,B=5] 

### Cost equations --> "Loop" of eval_int_upsample_bb1_in/4 
* CEs [21,24] --> Loop 16 
* CEs [20,23] --> Loop 17 
* CEs [19,22] --> Loop 18 
* CEs [18] --> Loop 19 

#### Loops of eval_int_upsample_bb1_in/4 
* Loop 16: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) [V_10>=1,B=5] 
* Loop 17: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) [0>=V_10,B=5] 
* Loop 18: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B)->  eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0',B')
                  [V_17+V_outrow_0=V_outrow_0',B'=5,B=5] 
* Loop 19: eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) [B=5] 

### Ranking functions of CR eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) 

#### Partial ranking functions of CR eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) 


### Resulting Chains:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) 
* [[18]]...
* [[18],19]
* [[18],17]...
* [[18],16]...
* [19]
* [17]...
* [16]...


### Merging Chains  eval_int_upsample_bb1_in/4 into  External patterns of execution 
* [[19],[19,[18]]] --> 1 
* [[[18]]] --> 2 
* [[17],[17,[18]]] --> 3 
* [[16],[16,[18]]] --> 4 


### Specialization of cost equations eval_int_upsample_bb0_in/1 
* CE 3 is refined into CE [25,26,27,28] 


#### Refined cost equations eval_int_upsample_bb0_in/1 
* CE 25: eval_int_upsample_bb0_in(B) = 1+ eval_int_upsample_bb1_in(C,D,E,F):1
     [F=5,E=0] 
* CE 26: eval_int_upsample_bb0_in(B) = 1+ eval_int_upsample_bb1_in(C,D,E,F):2
     [F=5,E=0] 
* CE 27: eval_int_upsample_bb0_in(B) = 1+ eval_int_upsample_bb1_in(C,D,E,F):3
     [0>=C,F=5,E=0] 
* CE 28: eval_int_upsample_bb0_in(B) = 1+ eval_int_upsample_bb1_in(C,D,E,F):4
     [C>=1,F=5,E=0] 

### Cost equations --> "Loop" of eval_int_upsample_bb0_in/1 
* CEs [26,27,28] --> Loop 20 
* CEs [25] --> Loop 21 

#### Loops of eval_int_upsample_bb0_in/1 
* Loop 20: eval_int_upsample_bb0_in(B) [] 
* Loop 21: eval_int_upsample_bb0_in(B) [] 

### Ranking functions of CR eval_int_upsample_bb0_in(B) 

#### Partial ranking functions of CR eval_int_upsample_bb0_in(B) 


### Resulting Chains:eval_int_upsample_bb0_in(B) 
* [21]
* [20]...


### Merging Chains  eval_int_upsample_bb0_in/1 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_int_upsample_start/1 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_int_upsample_start/1 
* CE 29: eval_int_upsample_start(B) = 0+ eval_int_upsample_bb0_in(B):1
     [] 
* CE 30: eval_int_upsample_start(B) = 0+ eval_int_upsample_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_int_upsample_start/1 
* CEs [30] --> Loop 22 
* CEs [29] --> Loop 23 

#### Loops of eval_int_upsample_start/1 
* Loop 22: eval_int_upsample_start(B) [] 
* Loop 23: eval_int_upsample_start(B) [] 

### Ranking functions of CR eval_int_upsample_start(B) 

#### Partial ranking functions of CR eval_int_upsample_start(B) 


### Resulting Chains:eval_int_upsample_start(B) 
* [23]
* [22]...


### Merging Chains  eval_int_upsample_start/1 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) -> [eval_int_upsample_bb5_in(V_10',V_17',V_outrow_0',V_h_0',B',C',D',E')] 
1
#### Cost of phase [10]:eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E) -> [eval_int_upsample_bb5_in(V_10',V_17',V_outrow_0',V_h_0',B',C',D',E')] 
1*it(10)+0
  Such that:it(10) =< V_h_0
it(10) =< V_h_0-V_h_0'

#### Cost of chains of eval_int_upsample_bb5_in(V_10,V_17,V_outrow_0,V_h_0,B,C,D,E):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_h_0

  with precondition: [B=2,V_10=C,V_17=D,V_outrow_0=E,V_h_0>=1,V_10>=V_h_0] 

* Chain [11]: 0
  with precondition: [B=2,D=V_17,E=V_outrow_0,V_10=C,0>=V_h_0,V_10>=V_h_0] 


#### Cost of loops [13] 

 * loop 13:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [13]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(13)+0
#### Cost of phase [13]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(13)+0
#### Cost of phase [13]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(13)+0
#### Cost of loops [12] 

 * loop 12:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
1*s(2)+2
  Such that:s(2) =< V_10'

#### Cost of phase [12]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(12)+1*s(3)+0
#### Cost of phase [12]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(12)+1*s(3)+0
#### Cost of phase [12]:eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H) -> [eval_int_upsample_bb3_in(V_10',V_17',V_outrow_0',B',C',D',E',F',G',H')] 
2*it(12)+1*s(3)+0
#### Cost of chains of eval_int_upsample_bb3_in(V_10,V_17,V_outrow_0,B,C,D,E,F,G,H):
* Chain [[13]]...: 2*it(13)+0
  with precondition: [0>=V_10,B>=3,4>=B] 

* Chain [[13],15]: 2*it(13)+0
  with precondition: [B=3,V_10=C,V_17=D,V_outrow_0=E,V_outrow_0+1=F,V_17=G+1,0>=V_10] 

* Chain [[13],14]: 2*it(13)+0
  with precondition: [B=4,V_10=C,V_17=D,V_outrow_0=E,0>=V_10] 

* Chain [[12]]...: 3*it(12)+0
  with precondition: [V_10>=1,B>=3,4>=B] 

* Chain [[12],15]: 3*it(12)+0
  with precondition: [B=3,V_10=C,V_17=D,V_outrow_0=E,V_outrow_0+1=F,V_17=G+1,V_10>=1] 

* Chain [[12],14]: 3*it(12)+0
  with precondition: [B=4,V_10=C,V_17=D,V_outrow_0=E,V_10>=1] 

* Chain [15]: 0
  with precondition: [B=3,C=V_10,V_17=D,V_outrow_0=E,V_outrow_0+1=F,V_17=G+1] 

* Chain [14]: 0
  with precondition: [B=4,C=V_10,D=V_17,E=V_outrow_0] 


#### Cost of loops [18] 

 * loop 18:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) -> [eval_int_upsample_bb1_in(V_10',V_17',V_outrow_0',B')] 
1*s(10)+0
#### Cost of phase [18]:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) -> [eval_int_upsample_bb1_in(V_10',V_17',V_outrow_0',B')] 
1*s(11)+0
#### Cost of phase [18]:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) -> [eval_int_upsample_bb1_in(V_10',V_17',V_outrow_0',B')] 
1*s(11)+0
#### Cost of phase [18]:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) -> [eval_int_upsample_bb1_in(V_10',V_17',V_outrow_0',B')] 
1*s(11)+0
#### Cost of phase [18]:eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B) -> [eval_int_upsample_bb1_in(V_10',V_17',V_outrow_0',B')] 
1*s(11)+0
#### Cost of chains of eval_int_upsample_bb1_in(V_10,V_17,V_outrow_0,B):
* Chain [[18]]...: 1*s(11)+0
  with precondition: [B=5] 

* Chain [[18],19]: 1*s(11)+0
  with precondition: [B=5] 

* Chain [[18],17]...: 2*aux(5)+0
  with precondition: [B=5,0>=V_10] 

* Chain [[18],16]...: 2*aux(6)+0
  with precondition: [B=5,V_10>=1] 

* Chain [19]: 0
  with precondition: [B=5] 

* Chain [17]...: 1*aux(5)+0
  with precondition: [B=5,0>=V_10] 

* Chain [16]...: 1*aux(6)+0
  with precondition: [B=5,V_10>=1] 


#### Cost of chains of eval_int_upsample_bb0_in(B):
* Chain [21]: 1*s(21)+1
  with precondition: [] 

* Chain [20]...: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_int_upsample_start(B):
* Chain [23]: 1*s(25)+1
  with precondition: [] 

* Chain [22]...: 1*s(26)+0
  with precondition: [] 


Closed-form bounds of eval_int_upsample_start(B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_int_upsample_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 23 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 59 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 63 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 27 ms.
   - Chain cost structures 26 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 218 ms.

