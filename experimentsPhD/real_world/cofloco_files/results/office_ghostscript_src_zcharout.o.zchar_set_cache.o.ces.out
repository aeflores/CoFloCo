Warning: Ignored call to eval_zchar_set_cache_stop/1 in equation eval_zchar_set_cache_bb42_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_zchar_set_cache_bb42_in/1]
1. non_recursive  : [eval_zchar_set_cache_67/1]
2. non_recursive  : [eval_zchar_set_cache_66/1]
3. non_recursive  : [eval_zchar_set_cache_bb24_in/1]
4. non_recursive  : [eval_zchar_set_cache_bb19_in/1]
5. non_recursive  : [eval_zchar_set_cache_55/1]
6. non_recursive  : [eval_zchar_set_cache_54/1]
7. non_recursive  : [eval_zchar_set_cache_57/1]
8. non_recursive  : [eval_zchar_set_cache_56/1]
9. non_recursive  : [eval_zchar_set_cache_136/1]
10. non_recursive  : [eval_zchar_set_cache_135/1]
11. recursive  : [eval_zchar_set_cache_bb38_in/3]
12. non_recursive  : [eval_zchar_set_cache_134/1]
13. non_recursive  : [eval_zchar_set_cache_133/1]
14. non_recursive  : [eval_zchar_set_cache_124/1]
15. non_recursive  : [eval_zchar_set_cache_123/1]
16. non_recursive  : [loop_cont_eval_zchar_set_cache_bb38_in/2]
17. non_recursive  : [eval_zchar_set_cache_bb37_in/2]
18. non_recursive  : [eval_zchar_set_cache_bb30_in/2]
19. non_recursive  : [eval_zchar_set_cache_78/2]
20. non_recursive  : [eval_zchar_set_cache_77/2]
21. non_recursive  : [eval_zchar_set_cache_bb28_in/2]
22. non_recursive  : [eval_zchar_set_cache_bb25_in/1]
23. non_recursive  : [eval_zchar_set_cache_47/1]
24. non_recursive  : [eval_zchar_set_cache_46/1]
25. non_recursive  : [eval_zchar_set_cache_44/2]
26. non_recursive  : [eval_zchar_set_cache_43/1]
27. non_recursive  : [eval_zchar_set_cache_bb12_in/1]
28. non_recursive  : [eval_zchar_set_cache_38/1]
29. non_recursive  : [eval_zchar_set_cache_37/1]
30. non_recursive  : [eval_zchar_set_cache_29/1]
31. non_recursive  : [eval_zchar_set_cache_28/1]
32. non_recursive  : [eval_zchar_set_cache_20/1]
33. non_recursive  : [eval_zchar_set_cache_19/1]
34. non_recursive  : [eval_zchar_set_cache_bb4_in/1]
35. non_recursive  : [eval_zchar_set_cache_14/1]
36. non_recursive  : [eval_zchar_set_cache_13/1]
37. non_recursive  : [eval_zchar_set_cache_bb3_in/1]
38. non_recursive  : [eval_zchar_set_cache_12/1]
39. non_recursive  : [eval_zchar_set_cache_11/1]
40. non_recursive  : [eval_zchar_set_cache_10/1]
41. non_recursive  : [eval_zchar_set_cache_9/1]
42. non_recursive  : [eval_zchar_set_cache_1/1]
43. non_recursive  : [eval_zchar_set_cache_0/1]
44. non_recursive  : [eval_zchar_set_cache_bb0_in/1]
45. non_recursive  : [eval_zchar_set_cache_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_zchar_set_cache_bb19_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_zchar_set_cache_bb38_in/3
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_zchar_set_cache_bb37_in/2
18. SCC is partially evaluated into eval_zchar_set_cache_bb30_in/2
19. SCC is partially evaluated into eval_zchar_set_cache_78/2
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_zchar_set_cache_bb28_in/2
22. SCC is partially evaluated into eval_zchar_set_cache_bb25_in/1
23. SCC is partially evaluated into eval_zchar_set_cache_47/1
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_zchar_set_cache_44/2
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_zchar_set_cache_38/1
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_zchar_set_cache_29/1
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_zchar_set_cache_20/1
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is partially evaluated into eval_zchar_set_cache_10/1
41. SCC is completely evaluated into other SCCs
42. SCC is partially evaluated into eval_zchar_set_cache_1/1
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is partially evaluated into eval_zchar_set_cache_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zchar_set_cache_bb19_in/1 
* CE 26 is refined into CE [34] 


#### Refined cost equations eval_zchar_set_cache_bb19_in/1 
* CE 34: eval_zchar_set_cache_bb19_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb19_in/1 
* CEs [34] --> Loop 18 

#### Loops of eval_zchar_set_cache_bb19_in/1 
* Loop 18: eval_zchar_set_cache_bb19_in(B) [] 

### Ranking functions of CR eval_zchar_set_cache_bb19_in(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_bb19_in(B) 


### Resulting Chains:eval_zchar_set_cache_bb19_in(B) 
* [18]


### Merging Chains  eval_zchar_set_cache_bb19_in/1 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_bb38_in/3 
* CE 33 is refined into CE [35] 
* CE 32 is refined into CE [36] 


#### Refined cost equations eval_zchar_set_cache_bb38_in/3 
* CE 35: eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) = 0
     [V_i_0>=V_nparams_1,V_nparams_1>=6,10>=V_nparams_1,B=2] 
* CE 36: eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) = 1+ eval_zchar_set_cache_bb38_in(V_nparams_1,C,D)
     [V_nparams_1>=V_i_0+1,V_i_0>=0,V_nparams_1>=6,10>=V_nparams_1,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb38_in/3 
* CEs [36] --> Loop 19 
* CEs [35] --> Loop 20 

#### Loops of eval_zchar_set_cache_bb38_in/3 
* Loop 19: eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B)->  eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0',B')
                  [V_nparams_1>=V_i_0+1,V_i_0>=0,V_nparams_1>=6,10>=V_nparams_1,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 20: eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) [V_i_0>=V_nparams_1,V_nparams_1>=6,10>=V_nparams_1,B=2] 

### Ranking functions of CR eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) 
* RF of phase [19]: [-V_i_0+10,V_nparams_1-V_i_0]

#### Partial ranking functions of CR eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -V_i_0+10
    V_nparams_1-V_i_0


### Resulting Chains:eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) 
* [[19],20]


### Merging Chains  eval_zchar_set_cache_bb38_in/3 into  External patterns of execution 
* [[20,[19]]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_bb37_in/2 
* CE 31 is refined into CE [37] 


#### Refined cost equations eval_zchar_set_cache_bb37_in/2 
* CE 37: eval_zchar_set_cache_bb37_in(V_nparams_1,B) = 1+ eval_zchar_set_cache_bb38_in(V_nparams_1,C,D):1
     [V_nparams_1>=6,10>=V_nparams_1,D=2,C=0] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb37_in/2 
* CEs [37] --> Loop 21 

#### Loops of eval_zchar_set_cache_bb37_in/2 
* Loop 21: eval_zchar_set_cache_bb37_in(V_nparams_1,B) [V_nparams_1>=6,10>=V_nparams_1] 

### Ranking functions of CR eval_zchar_set_cache_bb37_in(V_nparams_1,B) 

#### Partial ranking functions of CR eval_zchar_set_cache_bb37_in(V_nparams_1,B) 


### Resulting Chains:eval_zchar_set_cache_bb37_in(V_nparams_1,B) 
* [21]


### Merging Chains  eval_zchar_set_cache_bb37_in/2 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_bb30_in/2 
* CE 29 is refined into CE [38] 
* CE 30 is refined into CE [39] 


#### Refined cost equations eval_zchar_set_cache_bb30_in/2 
* CE 38: eval_zchar_set_cache_bb30_in(V_nparams_1,B) = 0
     [V_nparams_1>=6,10>=V_nparams_1] 
* CE 39: eval_zchar_set_cache_bb30_in(V_nparams_1,B) = 0+ eval_zchar_set_cache_bb37_in(V_nparams_1,B):1
     [V_nparams_1>=6,10>=V_nparams_1] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb30_in/2 
* CEs [38,39] --> Loop 22 

#### Loops of eval_zchar_set_cache_bb30_in/2 
* Loop 22: eval_zchar_set_cache_bb30_in(V_nparams_1,B) [V_nparams_1>=6,10>=V_nparams_1] 

### Ranking functions of CR eval_zchar_set_cache_bb30_in(V_nparams_1,B) 

#### Partial ranking functions of CR eval_zchar_set_cache_bb30_in(V_nparams_1,B) 


### Resulting Chains:eval_zchar_set_cache_bb30_in(V_nparams_1,B) 
* [22]


### Merging Chains  eval_zchar_set_cache_bb30_in/2 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_78/2 
* CE 27 is refined into CE [40] 
* CE 28 is refined into CE [41] 


#### Refined cost equations eval_zchar_set_cache_78/2 
* CE 40: eval_zchar_set_cache_78(V_nparams_1,B) = 0
     [V_nparams_1>=6,10>=V_nparams_1] 
* CE 41: eval_zchar_set_cache_78(V_nparams_1,B) = 0+ eval_zchar_set_cache_bb30_in(V_nparams_1,B):1
     [V_nparams_1>=6,10>=V_nparams_1] 

### Cost equations --> "Loop" of eval_zchar_set_cache_78/2 
* CEs [40,41] --> Loop 23 

#### Loops of eval_zchar_set_cache_78/2 
* Loop 23: eval_zchar_set_cache_78(V_nparams_1,B) [V_nparams_1>=6,10>=V_nparams_1] 

### Ranking functions of CR eval_zchar_set_cache_78(V_nparams_1,B) 

#### Partial ranking functions of CR eval_zchar_set_cache_78(V_nparams_1,B) 


### Resulting Chains:eval_zchar_set_cache_78(V_nparams_1,B) 
* [23]


### Merging Chains  eval_zchar_set_cache_78/2 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_bb28_in/2 
* CE 24 is refined into CE [42] 
* CE 25 is refined into CE [43] 


#### Refined cost equations eval_zchar_set_cache_bb28_in/2 
* CE 42: eval_zchar_set_cache_bb28_in(V_nparams_1,B) = 0+ eval_zchar_set_cache_78(V_nparams_1,B):1
     [V_nparams_1>=6,10>=V_nparams_1] 
* CE 43: eval_zchar_set_cache_bb28_in(V_nparams_1,B) = 0+ eval_zchar_set_cache_bb30_in(V_nparams_1,B):1
     [V_nparams_1>=6,10>=V_nparams_1] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb28_in/2 
* CEs [42,43] --> Loop 24 

#### Loops of eval_zchar_set_cache_bb28_in/2 
* Loop 24: eval_zchar_set_cache_bb28_in(V_nparams_1,B) [V_nparams_1>=6,10>=V_nparams_1] 

### Ranking functions of CR eval_zchar_set_cache_bb28_in(V_nparams_1,B) 

#### Partial ranking functions of CR eval_zchar_set_cache_bb28_in(V_nparams_1,B) 


### Resulting Chains:eval_zchar_set_cache_bb28_in(V_nparams_1,B) 
* [24]


### Merging Chains  eval_zchar_set_cache_bb28_in/2 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_bb25_in/1 
* CE 22 is refined into CE [44] 
* CE 23 is refined into CE [45] 


#### Refined cost equations eval_zchar_set_cache_bb25_in/1 
* CE 44: eval_zchar_set_cache_bb25_in(B) = 0+ eval_zchar_set_cache_bb28_in(C,B):1
     [C=10] 
* CE 45: eval_zchar_set_cache_bb25_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_bb25_in/1 
* CEs [44,45] --> Loop 25 

#### Loops of eval_zchar_set_cache_bb25_in/1 
* Loop 25: eval_zchar_set_cache_bb25_in(B) [] 

### Ranking functions of CR eval_zchar_set_cache_bb25_in(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_bb25_in(B) 


### Resulting Chains:eval_zchar_set_cache_bb25_in(B) 
* [25]


### Merging Chains  eval_zchar_set_cache_bb25_in/1 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_47/1 
* CE 18 is refined into CE [46] 
* CE 19 is refined into CE [47] 
* CE 20 is refined into CE [48] 
* CE 21 is refined into CE [49] 


#### Refined cost equations eval_zchar_set_cache_47/1 
* CE 46: eval_zchar_set_cache_47(B) = 0+ eval_zchar_set_cache_bb25_in(B):1
     [] 
* CE 47: eval_zchar_set_cache_47(B) = 0+ eval_zchar_set_cache_bb28_in(C,B):1
     [C=10] 
* CE 48: eval_zchar_set_cache_47(B) = 0+ eval_zchar_set_cache_bb28_in(C,B):1
     [C=6] 
* CE 49: eval_zchar_set_cache_47(B) = 0+ eval_zchar_set_cache_bb19_in(B):1
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_47/1 
* CEs [46,47,48,49] --> Loop 26 

#### Loops of eval_zchar_set_cache_47/1 
* Loop 26: eval_zchar_set_cache_47(B) [] 

### Ranking functions of CR eval_zchar_set_cache_47(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_47(B) 


### Resulting Chains:eval_zchar_set_cache_47(B) 
* [26]


### Merging Chains  eval_zchar_set_cache_47/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_44/2 
* CE 14 is refined into CE [50] 
* CE 15 is refined into CE [51] 
* CE 12 is refined into CE [52] 
* CE 13 is refined into CE [53] 


#### Refined cost equations eval_zchar_set_cache_44/2 
* CE 50: eval_zchar_set_cache_44(V_123,B) = 0+ eval_zchar_set_cache_47(B):1
     [V_123>=1] 
* CE 51: eval_zchar_set_cache_44(V_123,B) = 0+ eval_zchar_set_cache_bb25_in(B):1
     [V_123>=1] 
* CE 52: eval_zchar_set_cache_44(V_123,B) = 0+ eval_zchar_set_cache_47(B):1
     [0>=V_123] 
* CE 53: eval_zchar_set_cache_44(V_123,B) = 0+ eval_zchar_set_cache_bb25_in(B):1
     [0>=V_123] 

### Cost equations --> "Loop" of eval_zchar_set_cache_44/2 
* CEs [50,51] --> Loop 27 
* CEs [52,53] --> Loop 28 

#### Loops of eval_zchar_set_cache_44/2 
* Loop 27: eval_zchar_set_cache_44(V_123,B) [V_123>=1] 
* Loop 28: eval_zchar_set_cache_44(V_123,B) [0>=V_123] 

### Ranking functions of CR eval_zchar_set_cache_44(V_123,B) 

#### Partial ranking functions of CR eval_zchar_set_cache_44(V_123,B) 


### Resulting Chains:eval_zchar_set_cache_44(V_123,B) 
* [28]
* [27]


### Merging Chains  eval_zchar_set_cache_44/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_zchar_set_cache_38/1 
* CE 16 is refined into CE [54] 
* CE 17 is refined into CE [55,56] 


#### Refined cost equations eval_zchar_set_cache_38/1 
* CE 54: eval_zchar_set_cache_38(B) = 0
     [] 
* CE 55: eval_zchar_set_cache_38(B) = 0+ eval_zchar_set_cache_44(C,B):1
     [0>=C] 
* CE 56: eval_zchar_set_cache_38(B) = 0+ eval_zchar_set_cache_44(C,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_zchar_set_cache_38/1 
* CEs [54,55,56] --> Loop 29 

#### Loops of eval_zchar_set_cache_38/1 
* Loop 29: eval_zchar_set_cache_38(B) [] 

### Ranking functions of CR eval_zchar_set_cache_38(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_38(B) 


### Resulting Chains:eval_zchar_set_cache_38(B) 
* [29]


### Merging Chains  eval_zchar_set_cache_38/1 into  External patterns of execution 
* [[29]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_29/1 
* CE 9 is refined into CE [57] 
* CE 10 is refined into CE [58,59] 
* CE 11 is refined into CE [60] 


#### Refined cost equations eval_zchar_set_cache_29/1 
* CE 57: eval_zchar_set_cache_29(B) = 0+ eval_zchar_set_cache_38(B):1
     [] 
* CE 58: eval_zchar_set_cache_29(B) = 0+ eval_zchar_set_cache_44(C,B):1
     [0>=C] 
* CE 59: eval_zchar_set_cache_29(B) = 0+ eval_zchar_set_cache_44(C,B):2
     [C>=1] 
* CE 60: eval_zchar_set_cache_29(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_29/1 
* CEs [57,58,59,60] --> Loop 30 

#### Loops of eval_zchar_set_cache_29/1 
* Loop 30: eval_zchar_set_cache_29(B) [] 

### Ranking functions of CR eval_zchar_set_cache_29(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_29(B) 


### Resulting Chains:eval_zchar_set_cache_29(B) 
* [30]


### Merging Chains  eval_zchar_set_cache_29/1 into  External patterns of execution 
* [[30]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_20/1 
* CE 5 is refined into CE [61] 
* CE 6 is refined into CE [62] 
* CE 7 is refined into CE [63,64] 


#### Refined cost equations eval_zchar_set_cache_20/1 
* CE 61: eval_zchar_set_cache_20(B) = 0+ eval_zchar_set_cache_29(B):1
     [] 
* CE 62: eval_zchar_set_cache_20(B) = 0
     [] 
* CE 63: eval_zchar_set_cache_20(B) = 0+ eval_zchar_set_cache_44(C,B):1
     [0>=C] 
* CE 64: eval_zchar_set_cache_20(B) = 0+ eval_zchar_set_cache_44(C,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_zchar_set_cache_20/1 
* CEs [61,62,63,64] --> Loop 31 

#### Loops of eval_zchar_set_cache_20/1 
* Loop 31: eval_zchar_set_cache_20(B) [] 

### Ranking functions of CR eval_zchar_set_cache_20(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_20(B) 


### Resulting Chains:eval_zchar_set_cache_20(B) 
* [31]


### Merging Chains  eval_zchar_set_cache_20/1 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_10/1 
* CE 8 is refined into CE [65] 


#### Refined cost equations eval_zchar_set_cache_10/1 
* CE 65: eval_zchar_set_cache_10(B) = 0+ eval_zchar_set_cache_20(B):1
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_10/1 
* CEs [65] --> Loop 32 

#### Loops of eval_zchar_set_cache_10/1 
* Loop 32: eval_zchar_set_cache_10(B) [] 

### Ranking functions of CR eval_zchar_set_cache_10(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_10(B) 


### Resulting Chains:eval_zchar_set_cache_10(B) 
* [32]


### Merging Chains  eval_zchar_set_cache_10/1 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_1/1 
* CE 3 is refined into CE [66] 
* CE 4 is refined into CE [67] 


#### Refined cost equations eval_zchar_set_cache_1/1 
* CE 66: eval_zchar_set_cache_1(B) = 0+ eval_zchar_set_cache_20(B):1
     [] 
* CE 67: eval_zchar_set_cache_1(B) = 0+ eval_zchar_set_cache_10(B):1
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_1/1 
* CEs [66,67] --> Loop 33 

#### Loops of eval_zchar_set_cache_1/1 
* Loop 33: eval_zchar_set_cache_1(B) [] 

### Ranking functions of CR eval_zchar_set_cache_1(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_1(B) 


### Resulting Chains:eval_zchar_set_cache_1(B) 
* [33]


### Merging Chains  eval_zchar_set_cache_1/1 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_zchar_set_cache_start/1 
* CE 2 is refined into CE [68] 


#### Refined cost equations eval_zchar_set_cache_start/1 
* CE 68: eval_zchar_set_cache_start(B) = 0+ eval_zchar_set_cache_1(B):1
     [] 

### Cost equations --> "Loop" of eval_zchar_set_cache_start/1 
* CEs [68] --> Loop 34 

#### Loops of eval_zchar_set_cache_start/1 
* Loop 34: eval_zchar_set_cache_start(B) [] 

### Ranking functions of CR eval_zchar_set_cache_start(B) 

#### Partial ranking functions of CR eval_zchar_set_cache_start(B) 


### Resulting Chains:eval_zchar_set_cache_start(B) 
* [34]


### Merging Chains  eval_zchar_set_cache_start/1 into  External patterns of execution 
* [[34]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of eval_zchar_set_cache_bb19_in(B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of loops [19] 

 * loop 19:eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) -> [eval_zchar_set_cache_bb38_in(V_nparams_1',V_i_0',B')] 
1
#### Cost of phase [19]:eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B) -> [eval_zchar_set_cache_bb38_in(V_nparams_1',V_i_0',B')] 
1*it(19)+0
  Such that:it(19) =< V_nparams_1-V_i_0
it(19) =< V_nparams_1-V_i_0-V_nparams_1'+V_i_0'
it(19) =< -V_i_0+10
it(19) =< -V_i_0+V_i_0'

#### Cost of chains of eval_zchar_set_cache_bb38_in(V_nparams_1,V_i_0,B):
* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V_nparams_1-V_i_0

  with precondition: [B=2,10>=V_nparams_1,V_nparams_1>=6,V_i_0>=0,V_nparams_1>=V_i_0+1] 


#### Cost of chains of eval_zchar_set_cache_bb37_in(V_nparams_1,B):
* Chain [21]: 1*s(1)+1
  Such that:s(1) =< V_nparams_1

  with precondition: [10>=V_nparams_1,V_nparams_1>=6] 


#### Cost of chains of eval_zchar_set_cache_bb30_in(V_nparams_1,B):
* Chain [22]: 1*s(2)+1
  Such that:s(2) =< V_nparams_1

  with precondition: [10>=V_nparams_1,V_nparams_1>=6] 


#### Cost of chains of eval_zchar_set_cache_78(V_nparams_1,B):
* Chain [23]: 1*s(3)+1
  Such that:s(3) =< V_nparams_1

  with precondition: [10>=V_nparams_1,V_nparams_1>=6] 


#### Cost of chains of eval_zchar_set_cache_bb28_in(V_nparams_1,B):
* Chain [24]: 2*s(4)+1
  Such that:aux(1) =< V_nparams_1
s(4) =< aux(1)

  with precondition: [10>=V_nparams_1,V_nparams_1>=6] 


#### Cost of chains of eval_zchar_set_cache_bb25_in(B):
* Chain [25]: 21
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_47(B):
* Chain [26]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_44(V_123,B):
* Chain [28]: 53
  with precondition: [0>=V_123] 

* Chain [27]: 53
  with precondition: [V_123>=1] 


#### Cost of chains of eval_zchar_set_cache_38(B):
* Chain [29]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_29(B):
* Chain [30]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_20(B):
* Chain [31]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_10(B):
* Chain [32]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_1(B):
* Chain [33]: 53
  with precondition: [] 


#### Cost of chains of eval_zchar_set_cache_start(B):
* Chain [34]: 53
  with precondition: [] 


Closed-form bounds of eval_zchar_set_cache_start(B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: 53 
    - Complexity: constant 

### Maximum cost of eval_zchar_set_cache_start(B): 53 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 52 ms.
* Invariants computed in 30 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 84 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 42 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 328 ms.

