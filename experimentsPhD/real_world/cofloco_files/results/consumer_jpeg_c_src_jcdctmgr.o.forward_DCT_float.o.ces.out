Warning: Ignored call to eval_forward_DCT_float_stop/1 in equation loop_cont_eval_forward_DCT_float_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_forward_DCT_float_bb3_in/7]
1. recursive  : [eval_forward_DCT_float_bb6_in/7]
2. recursive  : [eval_forward_DCT_float_41/4,eval_forward_DCT_float_42/4,eval_forward_DCT_float_bb1_in/3,loop_cont_eval_forward_DCT_float_bb3_in/5,loop_cont_eval_forward_DCT_float_bb6_in/4]
3. non_recursive  : [loop_cont_eval_forward_DCT_float_bb1_in/2]
4. non_recursive  : [eval_forward_DCT_float_bb0_in/2]
5. non_recursive  : [eval_forward_DCT_float_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_forward_DCT_float_bb3_in/7
1. SCC is partially evaluated into eval_forward_DCT_float_bb6_in/7
2. SCC is partially evaluated into eval_forward_DCT_float_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_forward_DCT_float_bb0_in/2
5. SCC is partially evaluated into eval_forward_DCT_float_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_forward_DCT_float_bb3_in/7 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations eval_forward_DCT_float_bb3_in/7 
* CE 10: eval_forward_DCT_float_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=B+1,C>=8,D=2] 
* CE 11: eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) = 1+ eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,F,G,C,D,E)
     [V_num_blocks>=V_bi_0+1,V_elemr_0>=0,7>=V_elemr_0,V_elemr_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_forward_DCT_float_bb3_in/7 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_forward_DCT_float_bb3_in/7 
* Loop 9: eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E)->  eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0',B',C,D,E)
                  [V_num_blocks>=V_bi_0+1,V_elemr_0>=0,7>=V_elemr_0,V_elemr_0+1=V_elemr_0',B'=2,B=2] 
* Loop 10: eval_forward_DCT_float_bb3_in(A,B,C,D,A,B,C) [A>=B+1,C>=8,D=2] 

### Ranking functions of CR eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) 
* RF of phase [9]: [-V_elemr_0+8]

#### Partial ranking functions of CR eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V_elemr_0+8


### Resulting Chains:eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) 
* [[9],10]


### Merging Chains  eval_forward_DCT_float_bb3_in/7 into  External patterns of execution 
* [[10,[9]]] --> 1 


### Specialization of cost equations eval_forward_DCT_float_bb6_in/7 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations eval_forward_DCT_float_bb6_in/7 
* CE 12: eval_forward_DCT_float_bb6_in(A,B,C,D,E,A,F) = 0
     [D>=64,F=B+1,E=3] 
* CE 13: eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) = 1+ eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,E,F,C,D)
     [V_i_0>=0,63>=V_i_0,V_i_0+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_forward_DCT_float_bb6_in/7 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_forward_DCT_float_bb6_in/7 
* Loop 11: eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D)->  eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0',B',C,D)
                  [V_i_0>=0,63>=V_i_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 12: eval_forward_DCT_float_bb6_in(A,B,C,D,E,A,F) [D>=64,B+1=F,E=3] 

### Ranking functions of CR eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) 
* RF of phase [11]: [-V_i_0+64]

#### Partial ranking functions of CR eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_i_0+64


### Resulting Chains:eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) 
* [[11],12]


### Merging Chains  eval_forward_DCT_float_bb6_in/7 into  External patterns of execution 
* [[12,[11]]] --> 1 


### Specialization of cost equations eval_forward_DCT_float_bb1_in/3 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15] 


#### Refined cost equations eval_forward_DCT_float_bb1_in/3 
* CE 14: eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) = 0
     [V_bi_0>=V_num_blocks,B=4] 
* CE 15: eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) = 3+ eval_forward_DCT_float_bb3_in(V_num_blocks,C,D,E,V_num_blocks,F,G):1+ eval_forward_DCT_float_bb6_in(V_num_blocks,H,I,J,K,V_num_blocks,L):1+ eval_forward_DCT_float_bb1_in(V_num_blocks,L,M)
     [V_num_blocks>=L,L=H+1,L=F+1,L=C+1,L=V_bi_0+1,M=4,K=3,J=0,I=8,G=8,E=2,D=0,B=4] 

### Cost equations --> "Loop" of eval_forward_DCT_float_bb1_in/3 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_forward_DCT_float_bb1_in/3 
* Loop 13: eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B)->  eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0',B')
                  [V_num_blocks>=V_bi_0',V_bi_0'=V_bi_0+1,B'=4,B=4] 
* Loop 14: eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) [V_bi_0>=V_num_blocks,B=4] 

### Ranking functions of CR eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) 
* RF of phase [13]: [V_num_blocks-V_bi_0]

#### Partial ranking functions of CR eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_num_blocks-V_bi_0


### Resulting Chains:eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) 
* [[13],14]
* [14]


### Merging Chains  eval_forward_DCT_float_bb1_in/3 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations eval_forward_DCT_float_bb0_in/2 
* CE 3 is refined into CE [16,17] 


#### Refined cost equations eval_forward_DCT_float_bb0_in/2 
* CE 16: eval_forward_DCT_float_bb0_in(V_num_blocks,B) = 1+ eval_forward_DCT_float_bb1_in(V_num_blocks,C,D):1
     [0>=V_num_blocks,D=4,C=0] 
* CE 17: eval_forward_DCT_float_bb0_in(V_num_blocks,B) = 1+ eval_forward_DCT_float_bb1_in(V_num_blocks,C,D):2
     [V_num_blocks>=1,D=4,C=0] 

### Cost equations --> "Loop" of eval_forward_DCT_float_bb0_in/2 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_forward_DCT_float_bb0_in/2 
* Loop 15: eval_forward_DCT_float_bb0_in(V_num_blocks,B) [V_num_blocks>=1] 
* Loop 16: eval_forward_DCT_float_bb0_in(V_num_blocks,B) [0>=V_num_blocks] 

### Ranking functions of CR eval_forward_DCT_float_bb0_in(V_num_blocks,B) 

#### Partial ranking functions of CR eval_forward_DCT_float_bb0_in(V_num_blocks,B) 


### Resulting Chains:eval_forward_DCT_float_bb0_in(V_num_blocks,B) 
* [16]
* [15]


### Merging Chains  eval_forward_DCT_float_bb0_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_forward_DCT_float_start/4 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_forward_DCT_float_start/4 
* CE 18: eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) = 0+ eval_forward_DCT_float_bb0_in(V_num_blocks,B):1
     [0>=V_num_blocks] 
* CE 19: eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) = 0+ eval_forward_DCT_float_bb0_in(V_num_blocks,B):2
     [V_num_blocks>=1] 

### Cost equations --> "Loop" of eval_forward_DCT_float_start/4 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of eval_forward_DCT_float_start/4 
* Loop 17: eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) [V_num_blocks>=1] 
* Loop 18: eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) [0>=V_num_blocks] 

### Ranking functions of CR eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) 

#### Partial ranking functions of CR eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) 


### Resulting Chains:eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B) 
* [18]
* [17]


### Merging Chains  eval_forward_DCT_float_start/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) -> [eval_forward_DCT_float_bb3_in(V_num_blocks',V_bi_0',V_elemr_0',B',C',D',E')] 
1
#### Cost of phase [9]:eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E) -> [eval_forward_DCT_float_bb3_in(V_num_blocks',V_bi_0',V_elemr_0',B',C',D',E')] 
1*it(9)+0
  Such that:it(9) =< -V_elemr_0+8
it(9) =< -V_elemr_0+V_elemr_0'

#### Cost of chains of eval_forward_DCT_float_bb3_in(V_num_blocks,V_bi_0,V_elemr_0,B,C,D,E):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_elemr_0+8

  with precondition: [B=2,E=8,V_num_blocks=C,V_bi_0=D,7>=V_elemr_0,V_elemr_0>=0,V_num_blocks>=V_bi_0+1] 


#### Cost of loops [11] 

 * loop 11:eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) -> [eval_forward_DCT_float_bb6_in(V_num_blocks',V_bi_0',V_elemr_0',V_i_0',B',C',D')] 
1
#### Cost of phase [11]:eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D) -> [eval_forward_DCT_float_bb6_in(V_num_blocks',V_bi_0',V_elemr_0',V_i_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< -V_i_0+64
it(11) =< -V_i_0+V_i_0'

#### Cost of chains of eval_forward_DCT_float_bb6_in(V_num_blocks,V_bi_0,V_elemr_0,V_i_0,B,C,D):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V_i_0+64

  with precondition: [B=3,V_num_blocks=C,V_bi_0+1=D,63>=V_i_0,V_i_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) -> [eval_forward_DCT_float_bb1_in(V_num_blocks',V_bi_0',B')] 
1*s(3)+1*s(4)+3
  Such that:s(3) =< 8
s(4) =< 64

#### Cost of phase [13]:eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B) -> [eval_forward_DCT_float_bb1_in(V_num_blocks',V_bi_0',B')] 
3*it(13)+1*s(5)+1*s(6)+0
  Such that:aux(3) =< V_num_blocks-V_bi_0
aux(4) =< V_num_blocks-V_bi_0-V_num_blocks'+V_bi_0'
aux(1) =< aux(3)
it(13) =< aux(3)
aux(1) =< aux(4)
it(13) =< aux(4)
s(6) =< aux(1)*64
s(5) =< aux(1)*8

#### Cost of chains of eval_forward_DCT_float_bb1_in(V_num_blocks,V_bi_0,B):
* Chain [[13],14]: 3*it(13)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_num_blocks-V_bi_0
it(13) =< aux(5)
s(6) =< aux(5)*64
s(5) =< aux(5)*8

  with precondition: [B=4,V_bi_0>=0,V_num_blocks>=V_bi_0+1] 

* Chain [14]: 0
  with precondition: [B=4,V_bi_0>=0,V_bi_0>=V_num_blocks] 


#### Cost of chains of eval_forward_DCT_float_bb0_in(V_num_blocks,B):
* Chain [16]: 1
  with precondition: [0>=V_num_blocks] 

* Chain [15]: 3*s(8)+1*s(9)+1*s(10)+1
  Such that:s(7) =< V_num_blocks
s(8) =< s(7)
s(9) =< s(7)*64
s(10) =< s(7)*8

  with precondition: [V_num_blocks>=1] 


#### Cost of chains of eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B):
* Chain [18]: 1
  with precondition: [0>=V_num_blocks] 

* Chain [17]: 3*s(12)+1*s(13)+1*s(14)+1
  Such that:s(11) =< V_num_blocks
s(12) =< s(11)
s(13) =< s(11)*64
s(14) =< s(11)*8

  with precondition: [V_num_blocks>=1] 


Closed-form bounds of eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_num_blocks] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [17] with precondition: [V_num_blocks>=1] 
    - Upper bound: 75*V_num_blocks+1 
    - Complexity: n 

### Maximum cost of eval_forward_DCT_float_start(V_start_row,V_start_col,V_num_blocks,B): nat(V_num_blocks)*75+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 40 ms.
* Invariants computed in 71 ms.
   - Backward Invariants 28 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 106 ms.
* Termination proved in 21 ms.
* Upper bounds computed in 92 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 33 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 400 ms.

