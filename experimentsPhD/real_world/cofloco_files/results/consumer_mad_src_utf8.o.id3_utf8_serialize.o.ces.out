Warning: Ignored call to eval_id3_utf8_serialize_stop/1 in equation eval_id3_utf8_serialize_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_id3_utf8_serialize_10/3,eval_id3_utf8_serialize_11/3,eval_id3_utf8_serialize_14/3,eval_id3_utf8_serialize_15/3,eval_id3_utf8_serialize_18/3,eval_id3_utf8_serialize_19/3,eval_id3_utf8_serialize_22/3,eval_id3_utf8_serialize_23/3,eval_id3_utf8_serialize_26/3,eval_id3_utf8_serialize_27/3,eval_id3_utf8_serialize_3/2,eval_id3_utf8_serialize_4/2,eval_id3_utf8_serialize_6/3,eval_id3_utf8_serialize_7/3,eval_id3_utf8_serialize_NewDefault_in/2,eval_id3_utf8_serialize_bb1_in/1,eval_id3_utf8_serialize_bb4_in/2,eval_id3_utf8_serialize_bb5_in/2,eval_id3_utf8_serialize_bb6_in/2,eval_id3_utf8_serialize_bb7_in/2,eval_id3_utf8_serialize_bb8_in/2]
1. non_recursive  : [eval_id3_utf8_serialize_bb11_in/1]
2. non_recursive  : [eval_id3_utf8_serialize_30/1]
3. non_recursive  : [eval_id3_utf8_serialize_29/1]
4. non_recursive  : [loop_cont_eval_id3_utf8_serialize_bb1_in/2]
5. non_recursive  : [eval_id3_utf8_serialize_bb0_in/1]
6. non_recursive  : [eval_id3_utf8_serialize_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_id3_utf8_serialize_bb1_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_id3_utf8_serialize_bb1_in/2
5. SCC is partially evaluated into eval_id3_utf8_serialize_bb0_in/1
6. SCC is partially evaluated into eval_id3_utf8_serialize_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_id3_utf8_serialize_bb1_in/1 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_id3_utf8_serialize_bb1_in/1 
* CE 9: eval_id3_utf8_serialize_bb1_in(B) = 0
     [B=3] 
* CE 10: eval_id3_utf8_serialize_bb1_in(B) = 0
     [B=2] 
* CE 11: eval_id3_utf8_serialize_bb1_in(B) = 1+ eval_id3_utf8_serialize_bb1_in(B)
     [] 

### Cost equations --> "Loop" of eval_id3_utf8_serialize_bb1_in/1 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_id3_utf8_serialize_bb1_in/1 
* Loop 8: eval_id3_utf8_serialize_bb1_in(B)->  eval_id3_utf8_serialize_bb1_in(B)
                  [] 
* Loop 9: eval_id3_utf8_serialize_bb1_in(B) [B=3] 
* Loop 10: eval_id3_utf8_serialize_bb1_in(B) [B=2] 

### Ranking functions of CR eval_id3_utf8_serialize_bb1_in(B) 

#### Partial ranking functions of CR eval_id3_utf8_serialize_bb1_in(B) 


### Resulting Chains:eval_id3_utf8_serialize_bb1_in(B) 
* [[8]]...
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_id3_utf8_serialize_bb1_in/1 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9],[9,[8]]] --> 2 
* [[[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_id3_utf8_serialize_bb1_in/2 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations loop_cont_eval_id3_utf8_serialize_bb1_in/2 
* CE 12: loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) = 0
     [B=3] 
* CE 13: loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_id3_utf8_serialize_bb1_in/2 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of loop_cont_eval_id3_utf8_serialize_bb1_in/2 
* Loop 11: loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) [B=3] 
* Loop 12: loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_id3_utf8_serialize_bb1_in(B,A) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_id3_utf8_serialize_bb1_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_id3_utf8_serialize_bb0_in/1 
* CE 3 is refined into CE [14,15,16] 


#### Refined cost equations eval_id3_utf8_serialize_bb0_in/1 
* CE 14: eval_id3_utf8_serialize_bb0_in(B) = 1+ eval_id3_utf8_serialize_bb1_in(C):1+ loop_cont_eval_id3_utf8_serialize_bb1_in(D,B):1
     [D=2,C=2] 
* CE 15: eval_id3_utf8_serialize_bb0_in(B) = 1+ eval_id3_utf8_serialize_bb1_in(C):2+ loop_cont_eval_id3_utf8_serialize_bb1_in(D,B):2
     [D=3,C=3] 
* CE 16: eval_id3_utf8_serialize_bb0_in(B) = 1+ eval_id3_utf8_serialize_bb1_in(C):3
     [] 

### Cost equations --> "Loop" of eval_id3_utf8_serialize_bb0_in/1 
* CEs [16] --> Loop 13 
* CEs [14,15] --> Loop 14 

#### Loops of eval_id3_utf8_serialize_bb0_in/1 
* Loop 13: eval_id3_utf8_serialize_bb0_in(B) [] 
* Loop 14: eval_id3_utf8_serialize_bb0_in(B) [] 

### Ranking functions of CR eval_id3_utf8_serialize_bb0_in(B) 

#### Partial ranking functions of CR eval_id3_utf8_serialize_bb0_in(B) 


### Resulting Chains:eval_id3_utf8_serialize_bb0_in(B) 
* [14]
* [13]...


### Merging Chains  eval_id3_utf8_serialize_bb0_in/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_id3_utf8_serialize_start/2 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_id3_utf8_serialize_start/2 
* CE 17: eval_id3_utf8_serialize_start(V_terminate,B) = 0+ eval_id3_utf8_serialize_bb0_in(B):1
     [] 
* CE 18: eval_id3_utf8_serialize_start(V_terminate,B) = 0+ eval_id3_utf8_serialize_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_id3_utf8_serialize_start/2 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_id3_utf8_serialize_start/2 
* Loop 15: eval_id3_utf8_serialize_start(V_terminate,B) [] 
* Loop 16: eval_id3_utf8_serialize_start(V_terminate,B) [] 

### Ranking functions of CR eval_id3_utf8_serialize_start(V_terminate,B) 

#### Partial ranking functions of CR eval_id3_utf8_serialize_start(V_terminate,B) 


### Resulting Chains:eval_id3_utf8_serialize_start(V_terminate,B) 
* [16]
* [15]...


### Merging Chains  eval_id3_utf8_serialize_start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_id3_utf8_serialize_bb1_in(B) -> [eval_id3_utf8_serialize_bb1_in(B')] 
1
#### Cost of phase [8]:eval_id3_utf8_serialize_bb1_in(B) -> [eval_id3_utf8_serialize_bb1_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_id3_utf8_serialize_bb1_in(B) -> [eval_id3_utf8_serialize_bb1_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_id3_utf8_serialize_bb1_in(B) -> [eval_id3_utf8_serialize_bb1_in(B')] 
1*it(8)+0
#### Cost of chains of eval_id3_utf8_serialize_bb1_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [] 

* Chain [[8],10]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=3] 

* Chain [10]: 0
  with precondition: [B=2] 

* Chain [9]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_id3_utf8_serialize_bb1_in(B,A):
* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_id3_utf8_serialize_bb0_in(B):
* Chain [14]: 1*aux(3)+0
  with precondition: [] 

* Chain [13]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_id3_utf8_serialize_start(V_terminate,B):
* Chain [16]: 1*s(6)+0
  with precondition: [] 

* Chain [15]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_id3_utf8_serialize_start(V_terminate,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_id3_utf8_serialize_start(V_terminate,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 22 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 17 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 134 ms.

