WARNING: Excluded non-linear constraints:[F*G+H*I+J*K+L*M+N*O+P*Q+R*S+T*U+V*W-100*X=0]
WARNING: Excluded non-linear constraints:[F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X>=0+1,F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X-F*Y-G*Y-H*Y-I*Y-J*Y-K*Y-L*Y-M*Y-N*Y>=0,F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X-F*Y-G*Y-H*Y-I*Y-J*Y-K*Y-L*Y-M*Y-N*Y+1=<F+G+H+I+J+K+L+M+N-100]
WARNING: Excluded non-linear constraints:[F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X>=0+1,F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X-F*Y-G*Y-H*Y-I*Y-J*Y-K*Y-L*Y-M*Y-N*Y>=0,F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X-F*Y-G*Y-H*Y-I*Y-J*Y-K*Y-L*Y-M*Y-N*Y+1=< -F-G-H-I-J-K-L-M-N+100]
WARNING: Excluded non-linear constraints:[F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X+1=<0,-F*O-G*P-H*Q-I*R-J*S-K*T-L*U-M*V-N*W+100*X+F*Y+G*Y+H*Y+I*Y+J*Y+K*Y+L*Y+M*Y+N*Y>=0,-F*O-G*P-H*Q-I*R-J*S-K*T-L*U-M*V-N*W+100*X+F*Y+G*Y+H*Y+I*Y+J*Y+K*Y+L*Y+M*Y+N*Y+1=<F+G+H+I+J+K+L+M+N-100]
WARNING: Excluded non-linear constraints:[F*O+G*P+H*Q+I*R+J*S+K*T+L*U+M*V+N*W-100*X+1=<0,-F*O-G*P-H*Q-I*R-J*S-K*T-L*U-M*V-N*W+100*X+F*Y+G*Y+H*Y+I*Y+J*Y+K*Y+L*Y+M*Y+N*Y>=0,-F*O-G*P-H*Q-I*R-J*S-K*T-L*U-M*V-N*W+100*X+F*Y+G*Y+H*Y+I*Y+J*Y+K*Y+L*Y+M*Y+N*Y+1=< -F-G-H-I-J-K-L-M-N+100]
WARNING: Excluded non-linear constraints:[V=H+S*T*U,W=I+S*T]
WARNING: Excluded non-linear constraints:[E-10000*D-F*I>=0,E-10000*D-F*I+1=<F-10000]
WARNING: Excluded non-linear constraints:[E-10000*D-F*I>=0,E-10000*D-F*I+1=< -F+10000]
WARNING: Excluded non-linear constraints:[-E+10000*D+F*I>=0,-E+10000*D+F*I+1=<F-10000]
WARNING: Excluded non-linear constraints:[-E+10000*D+F*I>=0,-E+10000*D+F*I+1=< -F+10000]
WARNING: Excluded non-linear constraints:[O-10000*P-N*Q>=0,O-10000*P-N*Q+1=<N-10000]
WARNING: Excluded non-linear constraints:[O-10000*P-N*Q>=0,O-10000*P-N*Q+1=< -N+10000]
WARNING: Excluded non-linear constraints:[-O+10000*P+N*Q>=0,-O+10000*P+N*Q+1=<N-10000]
WARNING: Excluded non-linear constraints:[-O+10000*P+N*Q>=0,-O+10000*P+N*Q+1=< -N+10000]
WARNING: Excluded non-linear constraints:[C=4* (A*A)+4*A+1]
WARNING: Excluded non-linear constraints:[E=C*D+2*C*A+2*A*D+4* (A*A)]
Warning: Ignored call to eval_susan_smoothing_stop/1 in equation eval_susan_smoothing_11/1 
Warning: Ignored call to eval_susan_smoothing_stop/1 in equation eval_susan_smoothing_24/1 
Warning: Ignored call to eval_susan_smoothing_stop/1 in equation eval_susan_smoothing_bb36_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_susan_smoothing_50/6,eval_susan_smoothing_51/6,eval_susan_smoothing_bb11_in/6]
1. recursive  : [eval_susan_smoothing_bb9_in/5,loop_cont_eval_susan_smoothing_bb11_in/6]
2. recursive  : [eval_susan_smoothing_bb20_in/18]
3. recursive  : [eval_susan_smoothing_bb18_in/16,loop_cont_eval_susan_smoothing_bb20_in/17]
4. recursive  : [eval_susan_smoothing_103/11,eval_susan_smoothing_104/11,eval_susan_smoothing_bb16_in/6,eval_susan_smoothing_bb26_in/10,loop_cont_eval_susan_smoothing_bb18_in/12]
5. recursive  : [eval_susan_smoothing_bb15_in/3,loop_cont_eval_susan_smoothing_bb16_in/4]
6. non_recursive  : [eval_susan_smoothing_bb36_in/1]
7. non_recursive  : [eval_susan_smoothing_117/1]
8. non_recursive  : [eval_susan_smoothing_116/1]
9. non_recursive  : [loop_cont_eval_susan_smoothing_bb15_in/2]
10. non_recursive  : [loop_cont_eval_susan_smoothing_bb9_in/4]
11. non_recursive  : [eval_susan_smoothing_43/2]
12. non_recursive  : [eval_susan_smoothing_42/3]
13. recursive  : [eval_susan_smoothing_226/5,eval_susan_smoothing_227/5,eval_susan_smoothing_bb30_in/4,eval_susan_smoothing_bb34_in/4]
14. recursive  : [eval_susan_smoothing_bb29_in/2,loop_cont_eval_susan_smoothing_bb30_in/3]
15. non_recursive  : [loop_cont_eval_susan_smoothing_bb29_in/2]
16. non_recursive  : [eval_susan_smoothing_35/2]
17. non_recursive  : [eval_susan_smoothing_34/2]
18. non_recursive  : [eval_susan_smoothing_33/3]
19. non_recursive  : [eval_susan_smoothing_11/1]
20. non_recursive  : [eval_susan_smoothing_10/1]
21. non_recursive  : [eval_susan_smoothing_9/1]
22. non_recursive  : [eval_susan_smoothing_8/1]
23. non_recursive  : [eval_susan_smoothing_7/1]
24. non_recursive  : [eval_susan_smoothing_24/1]
25. non_recursive  : [eval_susan_smoothing_23/1]
26. non_recursive  : [eval_susan_smoothing_22/4]
27. non_recursive  : [eval_susan_smoothing_bb6_in/2]
28. non_recursive  : [eval_susan_smoothing_bb2_in/2]
29. non_recursive  : [eval_susan_smoothing_bb0_in/1]
30. non_recursive  : [eval_susan_smoothing_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_susan_smoothing_bb11_in/6
1. SCC is partially evaluated into eval_susan_smoothing_bb9_in/5
2. SCC is partially evaluated into eval_susan_smoothing_bb20_in/18
3. SCC is partially evaluated into eval_susan_smoothing_bb18_in/16
4. SCC is partially evaluated into eval_susan_smoothing_bb16_in/6
5. SCC is partially evaluated into eval_susan_smoothing_bb15_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_susan_smoothing_bb9_in/4
11. SCC is partially evaluated into eval_susan_smoothing_43/2
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_susan_smoothing_bb30_in/4
14. SCC is partially evaluated into eval_susan_smoothing_bb29_in/2
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_susan_smoothing_35/2
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_susan_smoothing_bb2_in/2
29. SCC is partially evaluated into eval_susan_smoothing_bb0_in/1
30. SCC is partially evaluated into eval_susan_smoothing_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_susan_smoothing_bb11_in/6 
* CE 17 is refined into CE [32] 
* CE 16 is refined into CE [33] 


#### Refined cost equations eval_susan_smoothing_bb11_in/6 
* CE 32: eval_susan_smoothing_bb11_in(A,B,C,D,A,E) = 0
     [A+C>=0,A>=B,C>=A+1,B+1=E,D=2] 
* CE 33: eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) = 1+ eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,E,F,C,D)
     [V_mask_size_0+V_j_0>=0,V_mask_size_0>=V_j_0,V_mask_size_0>=V_i_0,V_j_0+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb11_in/6 
* CEs [33] --> Loop 28 
* CEs [32] --> Loop 29 

#### Loops of eval_susan_smoothing_bb11_in/6 
* Loop 28: eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D)->  eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0',B',C,D)
                  [V_mask_size_0+V_j_0>=0,V_mask_size_0>=V_j_0,V_mask_size_0>=V_i_0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 29: eval_susan_smoothing_bb11_in(A,B,C,D,A,E) [A+C>=0,A>=B,C>=A+1,B+1=E,D=2] 

### Ranking functions of CR eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) 
* RF of phase [28]: [V_mask_size_0-V_j_0+1]

#### Partial ranking functions of CR eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V_mask_size_0-V_j_0+1


### Resulting Chains:eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) 
* [[28],29]
* [29]


### Merging Chains  eval_susan_smoothing_bb11_in/6 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[28]]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb9_in/5 
* CE 12 is refined into CE [34] 
* CE 11 is refined into CE [35,36] 


#### Refined cost equations eval_susan_smoothing_bb9_in/5 
* CE 34: eval_susan_smoothing_bb9_in(A,B,C,A,A) = 0
     [B>=A+1,C=7] 
* CE 35: eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) = 2+ eval_susan_smoothing_bb11_in(V_mask_size_0,E,F,G,V_mask_size_0,H):1+ eval_susan_smoothing_bb9_in(V_mask_size_0,H,B,C,D)
     [V_mask_size_0+1>=H,0>=2*V_mask_size_0+1,V_mask_size_0+F=0,H=E+1,H=V_i_0+1,G=2] 
* CE 36: eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) = 2+ eval_susan_smoothing_bb11_in(V_mask_size_0,E,F,G,V_mask_size_0,H):2+ eval_susan_smoothing_bb9_in(V_mask_size_0,H,B,C,D)
     [V_mask_size_0+1>=H,V_mask_size_0>=0,V_mask_size_0+F=0,H=E+1,H=V_i_0+1,G=2] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb9_in/5 
* CEs [36] --> Loop 30 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 

#### Loops of eval_susan_smoothing_bb9_in/5 
* Loop 30: eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D)->  eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0',B,C,D)
                  [V_mask_size_0>=V_i_0,V_mask_size_0>=0,V_i_0+1=V_i_0'] 
* Loop 31: eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D)->  eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0',B,C,D)
                  [V_mask_size_0>=V_i_0,0>=2*V_mask_size_0+1,V_i_0+1=V_i_0'] 
* Loop 32: eval_susan_smoothing_bb9_in(A,B,C,A,A) [B>=A+1,C=7] 

### Ranking functions of CR eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) 
* RF of phase [30]: [V_mask_size_0-V_i_0+1]

#### Partial ranking functions of CR eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V_mask_size_0-V_i_0+1


### Resulting Chains:eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) 
* [[30],32]
* [32]


### Merging Chains  eval_susan_smoothing_bb9_in/5 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[30]]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb20_in/18 
* CE 31 is refined into CE [37] 
* CE 30 is refined into CE [38] 


#### Refined cost equations eval_susan_smoothing_bb20_in/18 
* CE 37: eval_susan_smoothing_bb20_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,H,I,L) = 0
     [A+J>=0,A>=G,J>=A+1,G+1=L,K=4] 
* CE 38: eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) = 1+ eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,J,K,L,M,C,D,E,F,G,H,I)
     [V_mask_size_0+V_x_0>=0,V_mask_size_0>=V_x_0,V_mask_size_0>=V_y_0,V_x_0+1=L,M=4,B=4] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb20_in/18 
* CEs [38] --> Loop 33 
* CEs [37] --> Loop 34 

#### Loops of eval_susan_smoothing_bb20_in/18 
* Loop 33: eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I)->  eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1',V_area_1',V_x_0',B',C,D,E,F,G,H,I)
                  [V_mask_size_0+V_x_0>=0,V_mask_size_0>=V_x_0,V_mask_size_0>=V_y_0,V_x_0+1=V_x_0',B'=4,B=4] 
* Loop 34: eval_susan_smoothing_bb20_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,H,I,L) [A+J>=0,A>=G,J>=A+1,G+1=L,K=4] 

### Ranking functions of CR eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) 
* RF of phase [33]: [V_mask_size_0-V_x_0+1]

#### Partial ranking functions of CR eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_mask_size_0-V_x_0+1


### Resulting Chains:eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) 
* [[33],34]
* [34]


### Merging Chains  eval_susan_smoothing_bb20_in/18 into  External patterns of execution 
* [[34]] --> 1 
* [[34,[33]]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb18_in/16 
* CE 28 is refined into CE [39] 
* CE 26 is refined into CE [40] 
* CE 29 is refined into CE [41] 
* CE 27 is refined into CE [42] 
* CE 25 is refined into CE [43] 
* CE 24 is refined into CE [44] 
* CE 23 is refined into CE [45,46] 


#### Refined cost equations eval_susan_smoothing_bb18_in/16 
* CE 39: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) = 0
     [10000*D>=E+1,G>=A+1,F>=10001,H=6] 
* CE 40: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) = 0
     [G>=A+1,E>=10000*D+1,F>=10001,H=6] 
* CE 41: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) = 0
     [10000*D>=E+1,G>=A+1,9999>=F,H=6] 
* CE 42: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) = 0
     [G>=A+1,E>=10000*D+1,9999>=F,H=6] 
* CE 43: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J) = 0
     [G>=A+1,10000*D=I,10000*D=E,H=6] 
* CE 44: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) = 0
     [G>=A+1,H=5] 
* CE 45: eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) = 2+ eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,K,V_total_0,V_area_0,L,M,V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,N):1+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,N,B,C,D,E,F,G,H,I,J)
     [V_mask_size_0+1>=N,B>=5,6>=B,0>=2*V_mask_size_0+1,V_mask_size_0+L=0,N=K+1,N=V_y_0+1,M=4] 
* CE 46: eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) = 2+ eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,K,V_total_0,V_area_0,L,M,V_mask_size_0,V_i_1,V_j_1,V_90,N,O,P):2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,N,O,P,B,C,D,E,F,G,H,I,J)
     [V_mask_size_0+1>=P,V_mask_size_0>=0,B>=5,6>=B,V_mask_size_0+L=0,P=K+1,P=V_y_0+1,M=4] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb18_in/16 
* CEs [46] --> Loop 35 
* CEs [45] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [42] --> Loop 40 
* CEs [43] --> Loop 41 
* CEs [44] --> Loop 42 

#### Loops of eval_susan_smoothing_bb18_in/16 
* Loop 35: eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J)->  eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0',V_area_0',V_y_0',B,C,D,E,F,G,H,I,J)
                  [V_mask_size_0>=V_y_0,B>=5,V_mask_size_0>=0,6>=B,V_y_0+1=V_y_0'] 
* Loop 36: eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J)->  eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0',B,C,D,E,F,G,H,I,J)
                  [V_mask_size_0>=V_y_0,B>=5,6>=B,0>=2*V_mask_size_0+1,V_y_0+1=V_y_0'] 
* Loop 37: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) [10000*D>=E+1,G>=A+1,F>=10001,H=6] 
* Loop 38: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) [G>=A+1,E>=10000*D+1,F>=10001,H=6] 
* Loop 39: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) [10000*D>=E+1,G>=A+1,9999>=F,H=6] 
* Loop 40: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) [G>=A+1,E>=10000*D+1,9999>=F,H=6] 
* Loop 41: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J) [G>=A+1,10000*D=I,10000*D=E,H=6] 
* Loop 42: eval_susan_smoothing_bb18_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G,I) [G>=A+1,H=5] 

### Ranking functions of CR eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) 
* RF of phase [35]: [V_mask_size_0-V_y_0+1]

#### Partial ranking functions of CR eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_mask_size_0-V_y_0+1


### Resulting Chains:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) 
* [[35],42]
* [[35],41]
* [[35],40]
* [[35],39]
* [[35],38]
* [[35],37]
* [42]
* [41]
* [40]
* [39]


### Merging Chains  eval_susan_smoothing_bb18_in/16 into  External patterns of execution 
* [[42]] --> 1 
* [[42,[35]]] --> 2 
* [[41]] --> 3 
* [[40]] --> 4 
* [[39]] --> 5 
* [[41,[35]]] --> 6 
* [[40,[35]]] --> 7 
* [[39,[35]]] --> 8 
* [[38,[35]]] --> 9 
* [[37,[35]]] --> 10 


### Specialization of cost equations eval_susan_smoothing_bb16_in/6 
* CE 22 is refined into CE [47] 
* CE 20 is refined into CE [48,49,50,51,52,53,54,55] 
* CE 21 is refined into CE [56,57] 


#### Refined cost equations eval_susan_smoothing_bb16_in/6 
* CE 47: eval_susan_smoothing_bb16_in(A,B,C,D,A,E) = 0
     [E=B+1,D=7] 
* CE 48: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,J,K,L,M,N):3+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,O,P,C,D)
     [0>=2*V_mask_size_0+1,V_mask_size_0+M=0,V_mask_size_0+H=0,V_j_1+1=O,P=7,L=0,K=0,J=0,I=6,G=0,F=0,E=0,B=7] 
* CE 49: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):4+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [0>=2*V_mask_size_0+1,0>=10000*E+1,V_mask_size_0+L=0,V_mask_size_0+H=0,V_j_1+1=N,O=7,K=0,J=0,I=6,G=0,F=0,B=7] 
* CE 50: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):5+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [10000*E>=1,0>=2*V_mask_size_0+1,V_mask_size_0+L=0,V_mask_size_0+H=0,V_j_1+1=N,O=7,K=0,J=0,I=6,G=0,F=0,B=7] 
* CE 51: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):6+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [V_mask_size_0>=0,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,10000*E=J,O=7,I=6,G=0,F=0,B=7] 
* CE 52: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):7+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [J>=10000*E+1,V_mask_size_0>=0,9999>=K,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,O=7,I=6,G=0,F=0,B=7] 
* CE 53: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):8+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [10000*E>=J+1,V_mask_size_0>=0,9999>=K,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,O=7,I=6,G=0,F=0,B=7] 
* CE 54: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):9+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [J>=10000*E+1,K>=10001,V_mask_size_0>=0,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,O=7,I=6,G=0,F=0,B=7] 
* CE 55: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):10+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [10000*E>=J+1,K>=10001,V_mask_size_0>=0,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,O=7,I=6,G=0,F=0,B=7] 
* CE 56: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):1+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [0>=2*V_mask_size_0+1,V_mask_size_0+L=0,V_mask_size_0+H=0,V_j_1+1=N,O=7,K=0,J=0,I=5,G=0,F=0,B=7] 
* CE 57: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) = 2+ eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,E,F,G,H,I,V_mask_size_0,V_i_1,V_j_1,E,J,K,L,M):2+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,N,O,C,D)
     [V_mask_size_0>=0,V_mask_size_0+H=0,V_j_1+1=N,V_mask_size_0+1=L,O=7,I=5,G=0,F=0,B=7] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb16_in/6 
* CEs [51,52,53,54,55,57] --> Loop 43 
* CEs [48,49,50,56] --> Loop 44 
* CEs [47] --> Loop 45 

#### Loops of eval_susan_smoothing_bb16_in/6 
* Loop 43: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D)->  eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1',B',C,D)
                  [V_mask_size_0>=0,V_j_1+1=V_j_1',B'=7,B=7] 
* Loop 44: eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D)->  eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1',B',C,D)
                  [0>=2*V_mask_size_0+1,V_j_1+1=V_j_1',B'=7,B=7] 
* Loop 45: eval_susan_smoothing_bb16_in(A,B,C,D,A,E) [B+1=E,D=7] 

### Ranking functions of CR eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) 

#### Partial ranking functions of CR eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) 


### Resulting Chains:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) 
* [[44]]...
* [[44],45]
* [[43]]...
* [[43],45]
* [45]


### Merging Chains  eval_susan_smoothing_bb16_in/6 into  External patterns of execution 
* [[45],[45,[43]],[45,[44]]] --> 1 
* [[[44]]] --> 2 
* [[[43]]] --> 3 


### Specialization of cost equations eval_susan_smoothing_bb15_in/3 
* CE 19 is refined into CE [58] 
* CE 18 is refined into CE [59,60,61] 


#### Refined cost equations eval_susan_smoothing_bb15_in/3 
* CE 58: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) = 0
     [B=9] 
* CE 59: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) = 2+ eval_susan_smoothing_bb16_in(V_mask_size_0,C,V_mask_size_0,D,V_mask_size_0,E):1+ eval_susan_smoothing_bb15_in(V_mask_size_0,E,F)
     [E=C+1,E=V_i_1+1,F=9,D=7,B=9] 
* CE 60: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) = 2+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_mask_size_0,C,D,E):2
     [0>=2*V_mask_size_0+1,F=9,C=7,B=9] 
* CE 61: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) = 2+ eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_mask_size_0,C,D,E):3
     [V_mask_size_0>=0,F=9,C=7,B=9] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb15_in/3 
* CEs [61] --> Loop 46 
* CEs [60] --> Loop 47 
* CEs [59] --> Loop 48 
* CEs [58] --> Loop 49 

#### Loops of eval_susan_smoothing_bb15_in/3 
* Loop 46: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) [V_mask_size_0>=0,B=9] 
* Loop 47: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) [0>=2*V_mask_size_0+1,B=9] 
* Loop 48: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B)->  eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1',B')
                  [V_i_1+1=V_i_1',B'=9,B=9] 
* Loop 49: eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) [B=9] 

### Ranking functions of CR eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) 

#### Partial ranking functions of CR eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) 


### Resulting Chains:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) 
* [[48]]...
* [[48],49]
* [[48],47]...
* [[48],46]...
* [49]
* [47]...
* [46]...


### Merging Chains  eval_susan_smoothing_bb15_in/3 into  External patterns of execution 
* [[49],[49,[48]]] --> 1 
* [[[48]]] --> 2 
* [[47],[47,[48]]] --> 3 
* [[46],[46,[48]]] --> 4 


### Specialization of cost equations loop_cont_eval_susan_smoothing_bb9_in/4 
* CE 13 is refined into CE [62,63,64,65] 


#### Refined cost equations loop_cont_eval_susan_smoothing_bb9_in/4 
* CE 62: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) = 1+ eval_susan_smoothing_bb15_in(A,B,H):1
     [H=9,G=7] 
* CE 63: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) = 1+ eval_susan_smoothing_bb15_in(A,B,H):2
     [H=9,G=7] 
* CE 64: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) = 1+ eval_susan_smoothing_bb15_in(A,B,H):3
     [0>=2*A+1,H=9,G=7] 
* CE 65: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) = 1+ eval_susan_smoothing_bb15_in(A,B,H):4
     [A>=0,H=9,G=7] 

### Cost equations --> "Loop" of loop_cont_eval_susan_smoothing_bb9_in/4 
* CEs [63,64,65] --> Loop 50 
* CEs [62] --> Loop 51 

#### Loops of loop_cont_eval_susan_smoothing_bb9_in/4 
* Loop 50: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) [G=7] 
* Loop 51: loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) [G=7] 

### Ranking functions of CR loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C) 
* [51]
* [50]...


### Merging Chains  loop_cont_eval_susan_smoothing_bb9_in/4 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_susan_smoothing_43/2 
* CE 8 is refined into CE [66,67,68,69] 


#### Refined cost equations eval_susan_smoothing_43/2 
* CE 66: eval_susan_smoothing_43(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb9_in(V_mask_size_0,C,D,V_mask_size_0,V_mask_size_0):1+ loop_cont_eval_susan_smoothing_bb9_in(E,V_mask_size_0,V_mask_size_0,B):1
     [0>=2*V_mask_size_0+1,V_mask_size_0+C=0,E=7,D=7] 
* CE 67: eval_susan_smoothing_43(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb9_in(V_mask_size_0,C,D,V_mask_size_0,V_mask_size_0):1+ loop_cont_eval_susan_smoothing_bb9_in(E,V_mask_size_0,V_mask_size_0,B):2
     [0>=2*V_mask_size_0+1,V_mask_size_0+C=0,E=7,D=7] 
* CE 68: eval_susan_smoothing_43(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb9_in(V_mask_size_0,C,D,V_mask_size_0,V_mask_size_0):2+ loop_cont_eval_susan_smoothing_bb9_in(E,V_mask_size_0,V_mask_size_0,B):1
     [V_mask_size_0>=0,V_mask_size_0+C=0,E=7,D=7] 
* CE 69: eval_susan_smoothing_43(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb9_in(V_mask_size_0,C,D,V_mask_size_0,V_mask_size_0):2+ loop_cont_eval_susan_smoothing_bb9_in(E,V_mask_size_0,V_mask_size_0,B):2
     [V_mask_size_0>=0,V_mask_size_0+C=0,E=7,D=7] 

### Cost equations --> "Loop" of eval_susan_smoothing_43/2 
* CEs [69] --> Loop 52 
* CEs [67] --> Loop 53 
* CEs [68] --> Loop 54 
* CEs [66] --> Loop 55 

#### Loops of eval_susan_smoothing_43/2 
* Loop 52: eval_susan_smoothing_43(V_mask_size_0,B) [V_mask_size_0>=0] 
* Loop 53: eval_susan_smoothing_43(V_mask_size_0,B) [0>=2*V_mask_size_0+1] 
* Loop 54: eval_susan_smoothing_43(V_mask_size_0,B) [V_mask_size_0>=0] 
* Loop 55: eval_susan_smoothing_43(V_mask_size_0,B) [0>=2*V_mask_size_0+1] 

### Ranking functions of CR eval_susan_smoothing_43(V_mask_size_0,B) 

#### Partial ranking functions of CR eval_susan_smoothing_43(V_mask_size_0,B) 


### Resulting Chains:eval_susan_smoothing_43(V_mask_size_0,B) 
* [55]
* [54]
* [53]...
* [52]...


### Merging Chains  eval_susan_smoothing_43/2 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 
* [[53]] --> 3 
* [[52]] --> 4 


### Specialization of cost equations eval_susan_smoothing_bb30_in/4 
* CE 15 is refined into CE [70] 
* CE 14 is refined into CE [71] 


#### Refined cost equations eval_susan_smoothing_bb30_in/4 
* CE 70: eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) = 0
     [V_j_2>=1,C=V_i_2+1,B=3] 
* CE 71: eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) = 1+ eval_susan_smoothing_bb30_in(V_i_2,D,E,C)
     [V_j_2>=1,V_j_2+1=D,E=3,B=3] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb30_in/4 
* CEs [71] --> Loop 56 
* CEs [70] --> Loop 57 

#### Loops of eval_susan_smoothing_bb30_in/4 
* Loop 56: eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C)->  eval_susan_smoothing_bb30_in(V_i_2,V_j_2',B',C)
                  [V_j_2>=1,V_j_2+1=V_j_2',B'=3,B=3] 
* Loop 57: eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) [V_j_2>=1,V_i_2+1=C,B=3] 

### Ranking functions of CR eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) 

#### Partial ranking functions of CR eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) 


### Resulting Chains:eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) 
* [[56]]...
* [[56],57]
* [57]


### Merging Chains  eval_susan_smoothing_bb30_in/4 into  External patterns of execution 
* [[57],[57,[56]]] --> 1 
* [[[56]]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb29_in/2 
* CE 10 is refined into CE [72] 
* CE 9 is refined into CE [73,74] 


#### Refined cost equations eval_susan_smoothing_bb29_in/2 
* CE 72: eval_susan_smoothing_bb29_in(V_i_2,B) = 0
     [B=8] 
* CE 73: eval_susan_smoothing_bb29_in(V_i_2,B) = 2+ eval_susan_smoothing_bb30_in(C,D,E,F):1+ eval_susan_smoothing_bb29_in(F,G)
     [F=C+1,F=V_i_2+1,G=8,E=3,D=1,B=8] 
* CE 74: eval_susan_smoothing_bb29_in(V_i_2,B) = 2+ eval_susan_smoothing_bb30_in(V_i_2,C,D,E):2
     [F=8,D=3,C=1,B=8] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb29_in/2 
* CEs [74] --> Loop 58 
* CEs [73] --> Loop 59 
* CEs [72] --> Loop 60 

#### Loops of eval_susan_smoothing_bb29_in/2 
* Loop 58: eval_susan_smoothing_bb29_in(V_i_2,B) [B=8] 
* Loop 59: eval_susan_smoothing_bb29_in(V_i_2,B)->  eval_susan_smoothing_bb29_in(V_i_2',B')
                  [V_i_2+1=V_i_2',B'=8,B=8] 
* Loop 60: eval_susan_smoothing_bb29_in(V_i_2,B) [B=8] 

### Ranking functions of CR eval_susan_smoothing_bb29_in(V_i_2,B) 

#### Partial ranking functions of CR eval_susan_smoothing_bb29_in(V_i_2,B) 


### Resulting Chains:eval_susan_smoothing_bb29_in(V_i_2,B) 
* [[59]]...
* [[59],60]
* [[59],58]...
* [60]
* [58]...


### Merging Chains  eval_susan_smoothing_bb29_in/2 into  External patterns of execution 
* [[60],[60,[59]]] --> 1 
* [[[59]]] --> 2 
* [[58],[58,[59]]] --> 3 


### Specialization of cost equations eval_susan_smoothing_35/2 
* CE 6 is refined into CE [75,76,77,78] 
* CE 7 is refined into CE [79,80,81] 


#### Refined cost equations eval_susan_smoothing_35/2 
* CE 75: eval_susan_smoothing_35(V_mask_size_0,B) = 0+ eval_susan_smoothing_43(V_mask_size_0,B):1
     [0>=2*V_mask_size_0+1] 
* CE 76: eval_susan_smoothing_35(V_mask_size_0,B) = 0+ eval_susan_smoothing_43(V_mask_size_0,B):2
     [V_mask_size_0>=0] 
* CE 77: eval_susan_smoothing_35(V_mask_size_0,B) = 0+ eval_susan_smoothing_43(V_mask_size_0,B):3
     [0>=2*V_mask_size_0+1] 
* CE 78: eval_susan_smoothing_35(V_mask_size_0,B) = 0+ eval_susan_smoothing_43(V_mask_size_0,B):4
     [V_mask_size_0>=0] 
* CE 79: eval_susan_smoothing_35(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb29_in(C,D):1
     [D=8,C=1] 
* CE 80: eval_susan_smoothing_35(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb29_in(C,D):2
     [D=8,C=1] 
* CE 81: eval_susan_smoothing_35(V_mask_size_0,B) = 1+ eval_susan_smoothing_bb29_in(C,D):3
     [D=8,C=1] 

### Cost equations --> "Loop" of eval_susan_smoothing_35/2 
* CEs [77,78,80,81] --> Loop 61 
* CEs [75,76,79] --> Loop 62 

#### Loops of eval_susan_smoothing_35/2 
* Loop 61: eval_susan_smoothing_35(V_mask_size_0,B) [] 
* Loop 62: eval_susan_smoothing_35(V_mask_size_0,B) [] 

### Ranking functions of CR eval_susan_smoothing_35(V_mask_size_0,B) 

#### Partial ranking functions of CR eval_susan_smoothing_35(V_mask_size_0,B) 


### Resulting Chains:eval_susan_smoothing_35(V_mask_size_0,B) 
* [62]
* [61]...


### Merging Chains  eval_susan_smoothing_35/2 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb2_in/2 
* CE 4 is refined into CE [82] 
* CE 5 is refined into CE [83,84] 


#### Refined cost equations eval_susan_smoothing_bb2_in/2 
* CE 82: eval_susan_smoothing_bb2_in(V_mask_size_0,B) = 0
     [] 
* CE 83: eval_susan_smoothing_bb2_in(V_mask_size_0,B) = 0+ eval_susan_smoothing_35(V_mask_size_0,B):1
     [] 
* CE 84: eval_susan_smoothing_bb2_in(V_mask_size_0,B) = 0+ eval_susan_smoothing_35(V_mask_size_0,B):2
     [] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb2_in/2 
* CEs [84] --> Loop 63 
* CEs [82,83] --> Loop 64 

#### Loops of eval_susan_smoothing_bb2_in/2 
* Loop 63: eval_susan_smoothing_bb2_in(V_mask_size_0,B) [] 
* Loop 64: eval_susan_smoothing_bb2_in(V_mask_size_0,B) [] 

### Ranking functions of CR eval_susan_smoothing_bb2_in(V_mask_size_0,B) 

#### Partial ranking functions of CR eval_susan_smoothing_bb2_in(V_mask_size_0,B) 


### Resulting Chains:eval_susan_smoothing_bb2_in(V_mask_size_0,B) 
* [64]
* [63]...


### Merging Chains  eval_susan_smoothing_bb2_in/2 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations eval_susan_smoothing_bb0_in/1 
* CE 3 is refined into CE [85,86] 


#### Refined cost equations eval_susan_smoothing_bb0_in/1 
* CE 85: eval_susan_smoothing_bb0_in(B) = 0+ eval_susan_smoothing_bb2_in(C,B):1
     [] 
* CE 86: eval_susan_smoothing_bb0_in(B) = 0+ eval_susan_smoothing_bb2_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_susan_smoothing_bb0_in/1 
* CEs [86] --> Loop 65 
* CEs [85] --> Loop 66 

#### Loops of eval_susan_smoothing_bb0_in/1 
* Loop 65: eval_susan_smoothing_bb0_in(B) [] 
* Loop 66: eval_susan_smoothing_bb0_in(B) [] 

### Ranking functions of CR eval_susan_smoothing_bb0_in(B) 

#### Partial ranking functions of CR eval_susan_smoothing_bb0_in(B) 


### Resulting Chains:eval_susan_smoothing_bb0_in(B) 
* [66]
* [65]...


### Merging Chains  eval_susan_smoothing_bb0_in/1 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 


### Specialization of cost equations eval_susan_smoothing_start/4 
* CE 2 is refined into CE [87,88] 


#### Refined cost equations eval_susan_smoothing_start/4 
* CE 87: eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) = 0+ eval_susan_smoothing_bb0_in(B):1
     [] 
* CE 88: eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) = 0+ eval_susan_smoothing_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_susan_smoothing_start/4 
* CEs [88] --> Loop 67 
* CEs [87] --> Loop 68 

#### Loops of eval_susan_smoothing_start/4 
* Loop 67: eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) [] 
* Loop 68: eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) [] 

### Ranking functions of CR eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B) 
* [68]
* [67]...


### Merging Chains  eval_susan_smoothing_start/4 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [28] 

 * loop 28:eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) -> [eval_susan_smoothing_bb11_in(V_mask_size_0',V_i_0',V_j_0',B',C',D')] 
1
#### Cost of phase [28]:eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D) -> [eval_susan_smoothing_bb11_in(V_mask_size_0',V_i_0',V_j_0',B',C',D')] 
1*it(28)+0
  Such that:it(28) =< V_mask_size_0-V_j_0+1
it(28) =< V_mask_size_0-V_j_0-V_mask_size_0'+V_j_0'

#### Cost of chains of eval_susan_smoothing_bb11_in(V_mask_size_0,V_i_0,V_j_0,B,C,D):
* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< -V_j_0+C+1

  with precondition: [B=2,V_mask_size_0=C,V_i_0+1=D,V_mask_size_0>=V_i_0,V_mask_size_0>=V_j_0,V_j_0+V_mask_size_0>=0] 

* Chain [29]: 0
  with precondition: [B=2,V_mask_size_0=C,V_i_0+1=D,V_j_0>=V_mask_size_0+1,V_mask_size_0>=V_i_0,V_j_0+V_mask_size_0>=0] 


#### Cost of loops [30] 

 * loop 30:eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) -> [eval_susan_smoothing_bb9_in(V_mask_size_0',V_i_0',B',C',D')] 
1*s(2)+2
  Such that:s(2) =< 2*V_mask_size_0'+1

#### Cost of phase [30]:eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D) -> [eval_susan_smoothing_bb9_in(V_mask_size_0',V_i_0',B',C',D')] 
2*it(30)+1*s(3)+0
  Such that:it(30) =< V_mask_size_0-V_i_0+1
it(30) =< V_mask_size_0-V_i_0-V_mask_size_0'+V_i_0'
aux(1) =< 2*V_mask_size_0+1
s(3) =< it(30)*aux(1)

#### Cost of chains of eval_susan_smoothing_bb9_in(V_mask_size_0,V_i_0,B,C,D):
* Chain [[30],32]: 2*it(30)+1*s(3)+0
  Such that:it(30) =< -V_i_0+D+1
aux(1) =< 2*D+1
s(3) =< it(30)*aux(1)

  with precondition: [B=7,V_mask_size_0=C,V_mask_size_0=D,V_mask_size_0>=V_i_0,V_i_0+V_mask_size_0>=0] 

* Chain [32]: 0
  with precondition: [B=7,V_mask_size_0=C,V_mask_size_0=D,V_i_0>=V_mask_size_0+1,V_i_0+V_mask_size_0>=0] 


#### Cost of loops [33] 

 * loop 33:eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) -> [eval_susan_smoothing_bb20_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',V_total_1',V_area_1',V_x_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [33]:eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I) -> [eval_susan_smoothing_bb20_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',V_total_1',V_area_1',V_x_0',B',C',D',E',F',G',H',I')] 
1*it(33)+0
  Such that:it(33) =< V_mask_size_0-V_x_0+1
it(33) =< V_mask_size_0-V_x_0-V_mask_size_0'+V_x_0'

#### Cost of chains of eval_susan_smoothing_bb20_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,V_total_1,V_area_1,V_x_0,B,C,D,E,F,G,H,I):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< V_mask_size_0-V_x_0+1

  with precondition: [B=4,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_y_0+1=I,V_mask_size_0>=V_y_0,V_mask_size_0>=V_x_0,V_mask_size_0+V_x_0>=0] 

* Chain [34]: 0
  with precondition: [B=4,D=V_i_1,E=V_j_1,F=V_90,G=V_total_1,H=V_area_1,V_mask_size_0=C,V_y_0+1=I,V_x_0>=V_mask_size_0+1,V_mask_size_0>=V_y_0,V_mask_size_0+V_x_0>=0] 


#### Cost of loops [35] 

 * loop 35:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
1*s(5)+2
  Such that:s(5) =< 2*V_mask_size_0+1

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of phase [35]:eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J) -> [eval_susan_smoothing_bb18_in(V_mask_size_0',V_i_1',V_j_1',V_90',V_total_0',V_area_0',V_y_0',B',C',D',E',F',G',H',I',J')] 
2*it(35)+1*s(6)+0
  Such that:it(35) =< V_mask_size_0-V_y_0+1
it(35) =< V_mask_size_0-V_y_0-V_mask_size_0'+V_y_0'
aux(2) =< 2*V_mask_size_0+1
s(6) =< it(35)*aux(2)

#### Cost of chains of eval_susan_smoothing_bb18_in(V_mask_size_0,V_i_1,V_j_1,V_90,V_total_0,V_area_0,V_y_0,B,C,D,E,F,G,H,I,J):
* Chain [[35],42]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=5,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_mask_size_0+1=I,V_mask_size_0>=V_y_0,V_mask_size_0+V_y_0>=0] 

* Chain [[35],41]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=6,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,10000*V_90=G,V_mask_size_0+1=I,V_mask_size_0>=V_y_0,V_mask_size_0+V_y_0>=0] 

* Chain [[35],40]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=6,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_mask_size_0+1=I,9999>=H,G>=10000*V_90+1,V_mask_size_0>=V_y_0,V_mask_size_0+V_y_0>=0] 

* Chain [[35],39]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=6,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_mask_size_0+1=I,9999>=H,V_mask_size_0>=V_y_0,10000*V_90>=G+1,V_mask_size_0+V_y_0>=0] 

* Chain [[35],38]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=6,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_mask_size_0+1=I,H>=10001,G>=10000*V_90+1,V_mask_size_0>=V_y_0,V_mask_size_0+V_y_0>=0] 

* Chain [[35],37]: 2*it(35)+1*s(6)+0
  Such that:it(35) =< -V_y_0+I
aux(2) =< 2*I
s(6) =< it(35)*aux(2)

  with precondition: [B=6,V_mask_size_0=C,V_i_1=D,V_j_1=E,V_90=F,V_mask_size_0+1=I,H>=10001,V_mask_size_0>=V_y_0,10000*V_90>=G+1,V_mask_size_0+V_y_0>=0] 

* Chain [42]: 0
  with precondition: [B=5,D=V_i_1,E=V_j_1,F=V_90,G=V_total_0,H=V_area_0,V_mask_size_0=C,V_y_0=I,V_y_0>=V_mask_size_0+1,V_mask_size_0+V_y_0>=0] 

* Chain [41]: 0
  with precondition: [B=6,D=V_i_1,E=V_j_1,10000*V_90=V_total_0,H=V_area_0,V_mask_size_0=C,V_90=F,10000*V_90=G,V_y_0=I,V_y_0>=V_mask_size_0+1,V_mask_size_0+V_y_0>=0] 

* Chain [40]: 0
  with precondition: [B=6,D=V_i_1,E=V_j_1,V_mask_size_0=C,V_90=F,V_total_0=G,V_area_0=H,V_y_0=I,9999>=V_area_0,V_total_0>=10000*V_90+1,V_y_0>=V_mask_size_0+1,V_mask_size_0+V_y_0>=0] 

* Chain [39]: 0
  with precondition: [B=6,D=V_i_1,E=V_j_1,V_mask_size_0=C,V_90=F,V_total_0=G,V_area_0=H,V_y_0=I,9999>=V_area_0,V_y_0>=V_mask_size_0+1,10000*V_90>=V_total_0+1,V_mask_size_0+V_y_0>=0] 


#### Cost of loops [44] 

 * loop 44:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
2
#### Cost of phase [44]:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
2*it(44)+0
#### Cost of phase [44]:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
2*it(44)+0
#### Cost of loops [43] 

 * loop 43:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
12*s(27)+6*s(28)+2
  Such that:s(25) =< 2*V_mask_size_0'+1
s(26) =< 2*V_mask_size_0'+2
s(27) =< s(25)
s(28) =< s(27)*s(26)

#### Cost of phase [43]:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
2*it(43)+12*s(29)+6*s(30)+0
#### Cost of phase [43]:eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D) -> [eval_susan_smoothing_bb16_in(V_mask_size_0',V_i_1',V_j_1',B',C',D')] 
2*it(43)+12*s(29)+6*s(30)+0
#### Cost of chains of eval_susan_smoothing_bb16_in(V_mask_size_0,V_i_1,V_j_1,B,C,D):
* Chain [[44]]...: 2*it(44)+0
  with precondition: [0>=2*V_mask_size_0+1,B=7] 

* Chain [[44],45]: 2*it(44)+0
  with precondition: [B=7,V_mask_size_0=C,V_i_1+1=D,0>=2*V_mask_size_0+1,V_j_1>=V_mask_size_0] 

* Chain [[43]]...: 20*it(43)+0
  with precondition: [V_mask_size_0>=0,B=7] 

* Chain [[43],45]: 20*it(43)+0
  with precondition: [B=7,V_mask_size_0=C,V_i_1+1=D,V_mask_size_0>=0,V_j_1>=V_mask_size_0] 

* Chain [45]: 0
  with precondition: [B=7,D=V_i_1+1,V_mask_size_0=C,V_j_1>=V_mask_size_0] 


#### Cost of loops [48] 

 * loop 48:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) -> [eval_susan_smoothing_bb15_in(V_mask_size_0',V_i_1',B')] 
1*s(35)+2
#### Cost of phase [48]:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) -> [eval_susan_smoothing_bb15_in(V_mask_size_0',V_i_1',B')] 
3*it(48)+0
#### Cost of phase [48]:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) -> [eval_susan_smoothing_bb15_in(V_mask_size_0',V_i_1',B')] 
3*it(48)+0
#### Cost of phase [48]:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) -> [eval_susan_smoothing_bb15_in(V_mask_size_0',V_i_1',B')] 
3*it(48)+0
#### Cost of phase [48]:eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B) -> [eval_susan_smoothing_bb15_in(V_mask_size_0',V_i_1',B')] 
3*it(48)+0
#### Cost of chains of eval_susan_smoothing_bb15_in(V_mask_size_0,V_i_1,B):
* Chain [[48]]...: 3*it(48)+0
  with precondition: [B=9] 

* Chain [[48],49]: 3*it(48)+0
  with precondition: [B=9] 

* Chain [[48],47]...: 5*it(48)+2
  with precondition: [B=9,0>=2*V_mask_size_0+1] 

* Chain [[48],46]...: 23*it(48)+2
  with precondition: [B=9,V_mask_size_0>=0] 

* Chain [49]: 0
  with precondition: [B=9] 

* Chain [47]...: 2*s(37)+2
  with precondition: [B=9,0>=2*V_mask_size_0+1] 

* Chain [46]...: 20*s(38)+2
  with precondition: [B=9,V_mask_size_0>=0] 


#### Cost of chains of loop_cont_eval_susan_smoothing_bb9_in(G,A,B,C):
* Chain [51]: 1*s(44)+1
  with precondition: [G=7] 

* Chain [50]...: 1*aux(10)+0
  with precondition: [G=7] 


#### Cost of chains of eval_susan_smoothing_43(V_mask_size_0,B):
* Chain [55]: 1*s(48)+2
  with precondition: [0>=2*V_mask_size_0+1] 

* Chain [54]: 2*s(49)+1*s(51)+1*s(52)+2
  Such that:aux(11) =< 2*V_mask_size_0+1
s(49) =< aux(11)
s(51) =< s(49)*aux(11)

  with precondition: [V_mask_size_0>=0] 

* Chain [53]...: 1*s(53)+1
  with precondition: [0>=2*V_mask_size_0+1] 

* Chain [52]...: 2*s(54)+1*s(56)+1*s(57)+1
  Such that:aux(12) =< 2*V_mask_size_0+1
s(54) =< aux(12)
s(56) =< s(54)*aux(12)

  with precondition: [V_mask_size_0>=0] 


#### Cost of loops [56] 

 * loop 56:eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) -> [eval_susan_smoothing_bb30_in(V_i_2',V_j_2',B',C')] 
1
#### Cost of phase [56]:eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) -> [eval_susan_smoothing_bb30_in(V_i_2',V_j_2',B',C')] 
1*it(56)+0
#### Cost of phase [56]:eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C) -> [eval_susan_smoothing_bb30_in(V_i_2',V_j_2',B',C')] 
1*it(56)+0
#### Cost of chains of eval_susan_smoothing_bb30_in(V_i_2,V_j_2,B,C):
* Chain [[56]]...: 1*it(56)+0
  with precondition: [V_j_2>=1,B=3] 

* Chain [[56],57]: 1*it(56)+0
  with precondition: [B=3,V_i_2+1=C,V_j_2>=1] 

* Chain [57]: 0
  with precondition: [B=3,C=V_i_2+1,V_j_2>=1] 


#### Cost of loops [59] 

 * loop 59:eval_susan_smoothing_bb29_in(V_i_2,B) -> [eval_susan_smoothing_bb29_in(V_i_2',B')] 
1*s(60)+2
#### Cost of phase [59]:eval_susan_smoothing_bb29_in(V_i_2,B) -> [eval_susan_smoothing_bb29_in(V_i_2',B')] 
3*it(59)+0
#### Cost of phase [59]:eval_susan_smoothing_bb29_in(V_i_2,B) -> [eval_susan_smoothing_bb29_in(V_i_2',B')] 
3*it(59)+0
#### Cost of phase [59]:eval_susan_smoothing_bb29_in(V_i_2,B) -> [eval_susan_smoothing_bb29_in(V_i_2',B')] 
3*it(59)+0
#### Cost of chains of eval_susan_smoothing_bb29_in(V_i_2,B):
* Chain [[59]]...: 3*it(59)+0
  with precondition: [B=8] 

* Chain [[59],60]: 3*it(59)+0
  with precondition: [B=8,V_i_2>=1] 

* Chain [[59],58]...: 4*it(59)+2
  with precondition: [B=8,V_i_2>=1] 

* Chain [60]: 0
  with precondition: [B=8,V_i_2>=1] 

* Chain [58]...: 1*s(62)+2
  with precondition: [B=8,V_i_2>=1] 


#### Cost of chains of eval_susan_smoothing_35(V_mask_size_0,B):
* Chain [62]: 3*s(66)+2*s(68)+1*s(69)+2
  Such that:s(67) =< 2*V_mask_size_0+1
s(68) =< s(67)
s(69) =< s(68)*s(67)

  with precondition: [] 

* Chain [61]...: 6*s(72)+2*s(74)+1*s(75)+1
  Such that:s(73) =< 2*V_mask_size_0+1
s(74) =< s(73)
s(75) =< s(74)*s(73)

  with precondition: [] 


#### Cost of chains of eval_susan_smoothing_bb2_in(V_mask_size_0,B):
* Chain [64]: 2*s(80)+1*s(81)+3*s(82)+2
  Such that:s(79) =< 2*V_mask_size_0+1
s(80) =< s(79)
s(81) =< s(80)*s(79)

  with precondition: [] 

* Chain [63]...: 2*s(84)+1*s(85)+6*s(86)+1
  Such that:s(83) =< 2*V_mask_size_0+1
s(84) =< s(83)
s(85) =< s(84)*s(83)

  with precondition: [] 


#### Cost of chains of eval_susan_smoothing_bb0_in(B):
* Chain [66]: 2*s(88)+1*s(89)+3*s(90)+2
  with precondition: [] 

* Chain [65]...: 2*s(92)+1*s(93)+6*s(94)+1
  with precondition: [] 


#### Cost of chains of eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B):
* Chain [68]: 6*s(95)+2
  with precondition: [] 

* Chain [67]...: 9*s(98)+1
  with precondition: [] 


Closed-form bounds of eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B): 
-------------------------------------
* Chain [68] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [67]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_susan_smoothing_start(V_three_by_three,V_x_size,V_y_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 74 ms.
* Invariants computed in 146 ms.
   - Backward Invariants 81 ms.
   - Transitive Invariants 26 ms.
* Refinement performed in 227 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 219 ms.
   - Equation cost structures 71 ms.
   - Phase cost structures 97 ms.
   - Chain cost structures 85 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 790 ms.

