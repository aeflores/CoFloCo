Warning: Ignored call to eval_trie_lookup_stop/1 in equation eval_trie_lookup_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_trie_lookup_bb3_in/1]
1. recursive  : [eval_trie_lookup_bb1_in/1,loop_cont_eval_trie_lookup_bb3_in/2]
2. non_recursive  : [eval_trie_lookup_bb8_in/1]
3. non_recursive  : [loop_cont_eval_trie_lookup_bb1_in/2]
4. non_recursive  : [eval_trie_lookup_bb0_in/1]
5. non_recursive  : [eval_trie_lookup_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_trie_lookup_bb3_in/1
1. SCC is partially evaluated into eval_trie_lookup_bb1_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_trie_lookup_bb0_in/1
5. SCC is partially evaluated into eval_trie_lookup_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_trie_lookup_bb3_in/1 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_trie_lookup_bb3_in/1 
* CE 10: eval_trie_lookup_bb3_in(B) = 1+ eval_trie_lookup_bb3_in(B)
     [B>=2,3>=B] 
* CE 11: eval_trie_lookup_bb3_in(B) = 0
     [B=3] 
* CE 12: eval_trie_lookup_bb3_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_trie_lookup_bb3_in/1 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_trie_lookup_bb3_in/1 
* Loop 8: eval_trie_lookup_bb3_in(B) [B=3] 
* Loop 9: eval_trie_lookup_bb3_in(B) [B=2] 
* Loop 10: eval_trie_lookup_bb3_in(B)->  eval_trie_lookup_bb3_in(B)
                  [B>=2,3>=B] 

### Ranking functions of CR eval_trie_lookup_bb3_in(B) 

#### Partial ranking functions of CR eval_trie_lookup_bb3_in(B) 


### Resulting Chains:eval_trie_lookup_bb3_in(B) 
* [[10]]...
* [[10],9]
* [[10],8]
* [9]
* [8]


### Merging Chains  eval_trie_lookup_bb3_in/1 into  External patterns of execution 
* [[9],[9,[10]]] --> 1 
* [[8],[8,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations eval_trie_lookup_bb1_in/1 
* CE 5 is refined into CE [13,14] 
* CE 6 is refined into CE [15] 
* CE 4 is refined into CE [16,17] 


#### Refined cost equations eval_trie_lookup_bb1_in/1 
* CE 13: eval_trie_lookup_bb1_in(B) = 1+ eval_trie_lookup_bb3_in(C):1
     [C=2,B=2] 
* CE 14: eval_trie_lookup_bb1_in(B) = 1+ eval_trie_lookup_bb3_in(C):3
     [C=2,B=2] 
* CE 15: eval_trie_lookup_bb1_in(B) = 0
     [B=2] 
* CE 16: eval_trie_lookup_bb1_in(B) = 2+ eval_trie_lookup_bb3_in(C):2+ eval_trie_lookup_bb1_in(D)
     [D=2,C=3,B=2] 
* CE 17: eval_trie_lookup_bb1_in(B) = 2+ eval_trie_lookup_bb3_in(C):3
     [D=2,C=3,B=2] 

### Cost equations --> "Loop" of eval_trie_lookup_bb1_in/1 
* CEs [14,17] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [13,15] --> Loop 13 

#### Loops of eval_trie_lookup_bb1_in/1 
* Loop 11: eval_trie_lookup_bb1_in(B) [B=2] 
* Loop 12: eval_trie_lookup_bb1_in(B)->  eval_trie_lookup_bb1_in(B')
                  [B'=2,B=2] 
* Loop 13: eval_trie_lookup_bb1_in(B) [B=2] 

### Ranking functions of CR eval_trie_lookup_bb1_in(B) 

#### Partial ranking functions of CR eval_trie_lookup_bb1_in(B) 


### Resulting Chains:eval_trie_lookup_bb1_in(B) 
* [[12]]...
* [[12],13]
* [[12],11]...
* [13]
* [11]...


### Merging Chains  eval_trie_lookup_bb1_in/1 into  External patterns of execution 
* [[13],[13,[12]]] --> 1 
* [[11],[[12]],[11,[12]]] --> 2 


### Specialization of cost equations eval_trie_lookup_bb0_in/1 
* CE 3 is refined into CE [18,19] 


#### Refined cost equations eval_trie_lookup_bb0_in/1 
* CE 18: eval_trie_lookup_bb0_in(B) = 1+ eval_trie_lookup_bb1_in(C):1
     [C=2] 
* CE 19: eval_trie_lookup_bb0_in(B) = 1+ eval_trie_lookup_bb1_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_trie_lookup_bb0_in/1 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_trie_lookup_bb0_in/1 
* Loop 14: eval_trie_lookup_bb0_in(B) [] 
* Loop 15: eval_trie_lookup_bb0_in(B) [] 

### Ranking functions of CR eval_trie_lookup_bb0_in(B) 

#### Partial ranking functions of CR eval_trie_lookup_bb0_in(B) 


### Resulting Chains:eval_trie_lookup_bb0_in(B) 
* [15]
* [14]...


### Merging Chains  eval_trie_lookup_bb0_in/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_trie_lookup_start/1 
* CE 2 is refined into CE [20,21] 


#### Refined cost equations eval_trie_lookup_start/1 
* CE 20: eval_trie_lookup_start(B) = 0+ eval_trie_lookup_bb0_in(B):1
     [] 
* CE 21: eval_trie_lookup_start(B) = 0+ eval_trie_lookup_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_trie_lookup_start/1 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_trie_lookup_start/1 
* Loop 16: eval_trie_lookup_start(B) [] 
* Loop 17: eval_trie_lookup_start(B) [] 

### Ranking functions of CR eval_trie_lookup_start(B) 

#### Partial ranking functions of CR eval_trie_lookup_start(B) 


### Resulting Chains:eval_trie_lookup_start(B) 
* [17]
* [16]...


### Merging Chains  eval_trie_lookup_start/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_trie_lookup_bb3_in(B) -> [eval_trie_lookup_bb3_in(B')] 
1
#### Cost of phase [10]:eval_trie_lookup_bb3_in(B) -> [eval_trie_lookup_bb3_in(B')] 
1*it(10)+0
#### Cost of phase [10]:eval_trie_lookup_bb3_in(B) -> [eval_trie_lookup_bb3_in(B')] 
1*it(10)+0
#### Cost of phase [10]:eval_trie_lookup_bb3_in(B) -> [eval_trie_lookup_bb3_in(B')] 
1*it(10)+0
#### Cost of chains of eval_trie_lookup_bb3_in(B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [B>=2,3>=B] 

* Chain [[10],9]: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],8]: 1*it(10)+0
  with precondition: [B=3] 

* Chain [9]: 0
  with precondition: [B=2] 

* Chain [8]: 0
  with precondition: [B=3] 


#### Cost of loops [12] 

 * loop 12:eval_trie_lookup_bb1_in(B) -> [eval_trie_lookup_bb1_in(B')] 
1*s(4)+2
#### Cost of phase [12]:eval_trie_lookup_bb1_in(B) -> [eval_trie_lookup_bb1_in(B')] 
3*it(12)+0
#### Cost of phase [12]:eval_trie_lookup_bb1_in(B) -> [eval_trie_lookup_bb1_in(B')] 
3*it(12)+0
#### Cost of phase [12]:eval_trie_lookup_bb1_in(B) -> [eval_trie_lookup_bb1_in(B')] 
3*it(12)+0
#### Cost of chains of eval_trie_lookup_bb1_in(B):
* Chain [[12]]...: 3*it(12)+0
  with precondition: [B=2] 

* Chain [[12],13]: 4*aux(3)+0
  with precondition: [B=2] 

* Chain [[12],11]...: 4*aux(4)+0
  with precondition: [B=2] 

* Chain [13]: 1*aux(3)+0
  with precondition: [B=2] 

* Chain [11]...: 1*aux(4)+0
  with precondition: [B=2] 


#### Cost of chains of eval_trie_lookup_bb0_in(B):
* Chain [15]: 1*s(14)+1
  with precondition: [] 

* Chain [14]...: 1*s(15)+1
  with precondition: [] 


#### Cost of chains of eval_trie_lookup_start(B):
* Chain [17]: 1*s(16)+1
  with precondition: [] 

* Chain [16]...: 1*s(17)+1
  with precondition: [] 


Closed-form bounds of eval_trie_lookup_start(B): 
-------------------------------------
* Chain [17] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_trie_lookup_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 10 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 41 ms.

