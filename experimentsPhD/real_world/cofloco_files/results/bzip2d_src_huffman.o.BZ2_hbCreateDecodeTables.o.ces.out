Warning: Ignored call to eval_BZ2_hbCreateDecodeTables_stop/1 in equation loop_cont_eval_BZ2_hbCreateDecodeTables_bb17_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BZ2_hbCreateDecodeTables_bb2_in/10,eval_BZ2_hbCreateDecodeTables_bb5_in/10]
1. recursive  : [eval_BZ2_hbCreateDecodeTables_bb1_in/9,loop_cont_eval_BZ2_hbCreateDecodeTables_bb2_in/10]
2. recursive  : [eval_BZ2_hbCreateDecodeTables_bb7_in/9]
3. recursive  : [eval_BZ2_hbCreateDecodeTables_bb9_in/8]
4. recursive  : [eval_BZ2_hbCreateDecodeTables_bb11_in/7]
5. recursive  : [eval_BZ2_hbCreateDecodeTables_bb13_in/7]
6. recursive  : [eval_BZ2_hbCreateDecodeTables_bb15_in/6]
7. recursive  : [eval_BZ2_hbCreateDecodeTables_bb17_in/3]
8. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb17_in/2]
9. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4]
10. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5]
11. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5]
12. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5]
13. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6]
14. non_recursive  : [loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6]
15. non_recursive  : [eval_BZ2_hbCreateDecodeTables_bb0_in/4]
16. non_recursive  : [eval_BZ2_hbCreateDecodeTables_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb2_in/10
1. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb1_in/9
2. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb7_in/9
3. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb9_in/8
4. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb11_in/7
5. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb13_in/7
6. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb15_in/6
7. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb17_in/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4
10. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5
11. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5
12. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5
13. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6
14. SCC is partially evaluated into loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6
15. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_bb0_in/4
16. SCC is partially evaluated into eval_BZ2_hbCreateDecodeTables_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb2_in/10 
* CE 8 is refined into CE [26] 
* CE 7 is refined into CE [27] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb2_in/10 
* CE 26: eval_BZ2_hbCreateDecodeTables_bb2_in(A,B,C,D,E,F,A,B,C,G) = 0
     [B>=D,E>=C,E>=0,D+1=G,F=2] 
* CE 27: eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) = 1+ eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,G,H,C,D,E,F)
     [V_alphaSize>=V_j_0+1,V_maxLen>=V_i_0,V_j_0>=0,V_j_0+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb2_in/10 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb2_in/10 
* Loop 25: eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F)->  eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0',B',C,D,E,F)
                  [V_alphaSize>=V_j_0+1,V_maxLen>=V_i_0,V_j_0>=0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 26: eval_BZ2_hbCreateDecodeTables_bb2_in(A,B,C,D,E,F,A,B,C,G) [B>=D,E>=C,E>=0,D+1=G,F=2] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) 
* RF of phase [25]: [V_alphaSize-V_j_0]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V_alphaSize-V_j_0


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) 
* [[25],26]
* [26]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb2_in/10 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb1_in/9 
* CE 5 is refined into CE [28] 
* CE 4 is refined into CE [29,30] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb1_in/9 
* CE 28: eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,C,D,E,A,B,C,F) = 0
     [D>=B+1,F=0,E=5] 
* CE 29: eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) = 2+ eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,G,H,I,V_minLen,V_maxLen,V_alphaSize,J):1+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,J,B,C,D,E,F)
     [V_maxLen+1>=J,0>=V_alphaSize,J=G+1,J=V_i_0+1,I=2,H=0] 
* CE 30: eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) = 2+ eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,G,H,I,V_minLen,V_maxLen,V_alphaSize,J):2+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,J,B,C,D,E,F)
     [V_maxLen+1>=J,V_alphaSize>=1,J=G+1,J=V_i_0+1,I=2,H=0] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb1_in/9 
* CEs [30] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb1_in/9 
* Loop 27: eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F)->  eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0',B,C,D,E,F)
                  [V_maxLen>=V_i_0,V_alphaSize>=1,V_i_0+1=V_i_0'] 
* Loop 28: eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F)->  eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0',B,C,D,E,F)
                  [V_maxLen>=V_i_0,0>=V_alphaSize,V_i_0+1=V_i_0'] 
* Loop 29: eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,C,D,E,A,B,C,F) [D>=B+1,F=0,E=5] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) 
* RF of phase [27]: [V_maxLen-V_i_0+1]
* RF of phase [28]: [V_maxLen-V_i_0+1]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V_maxLen-V_i_0+1
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V_maxLen-V_i_0+1


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) 
* [[28],29]
* [[27],29]
* [29]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb1_in/9 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[28]]] --> 2 
* [[29,[27]]] --> 3 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb7_in/9 
* CE 10 is refined into CE [31] 
* CE 9 is refined into CE [32] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb7_in/9 
* CE 31: eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,E,A,B,C,F) = 0
     [D>=23,F=0,E=4] 
* CE 32: eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,G,B,C,D,E,F)
     [22>=V_i_1,V_i_1+1=G] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb7_in/9 
* CEs [32] --> Loop 30 
* CEs [31] --> Loop 31 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb7_in/9 
* Loop 30: eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F)->  eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1',B,C,D,E,F)
                  [22>=V_i_1,V_i_1+1=V_i_1'] 
* Loop 31: eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,E,A,B,C,F) [D>=23,F=0,E=4] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) 
* RF of phase [30]: [-V_i_1+23]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    -V_i_1+23


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) 
* [[30],31]
* [31]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb7_in/9 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb9_in/8 
* CE 13 is refined into CE [33] 
* CE 12 is refined into CE [34] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb9_in/8 
* CE 33: eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,E,A,B,F) = 0
     [D>=C,F=1,E=3] 
* CE 34: eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,F,B,C,D,E)
     [V_alphaSize>=V_i_2+1,V_i_2+1=F] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb9_in/8 
* CEs [34] --> Loop 32 
* CEs [33] --> Loop 33 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb9_in/8 
* Loop 32: eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E)->  eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2',B,C,D,E)
                  [V_alphaSize>=V_i_2+1,V_i_2+1=V_i_2'] 
* Loop 33: eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,E,A,B,F) [D>=C,F=1,E=3] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) 
* RF of phase [32]: [V_alphaSize-V_i_2]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_alphaSize-V_i_2


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) 
* [[32],33]
* [33]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb9_in/8 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb11_in/7 
* CE 16 is refined into CE [35] 
* CE 15 is refined into CE [36] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb11_in/7 
* CE 35: eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,D,A,B,E) = 0
     [C>=23,E=0,D=9] 
* CE 36: eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,F,B,C,D,E)
     [22>=V_i_3,V_i_3+1=F] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb11_in/7 
* CEs [36] --> Loop 34 
* CEs [35] --> Loop 35 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb11_in/7 
* Loop 34: eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E)->  eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3',B,C,D,E)
                  [22>=V_i_3,V_i_3+1=V_i_3'] 
* Loop 35: eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,D,A,B,E) [C>=23,E=0,D=9] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) 
* RF of phase [34]: [-V_i_3+23]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    -V_i_3+23


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) 
* [[34],35]
* [35]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb11_in/7 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[34]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb13_in/7 
* CE 19 is refined into CE [37] 
* CE 18 is refined into CE [38] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb13_in/7 
* CE 37: eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,D,A,B,A) = 0
     [C>=23,D=8] 
* CE 38: eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,F,B,C,D,E)
     [22>=V_i_4,V_i_4+1=F] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb13_in/7 
* CEs [38] --> Loop 36 
* CEs [37] --> Loop 37 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb13_in/7 
* Loop 36: eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E)->  eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4',B,C,D,E)
                  [22>=V_i_4,V_i_4+1=V_i_4'] 
* Loop 37: eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,D,A,B,A) [C>=23,D=8] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) 
* RF of phase [36]: [-V_i_4+23]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    -V_i_4+23


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) 
* [[36],37]
* [37]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb13_in/7 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[36]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb15_in/6 
* CE 22 is refined into CE [39] 
* CE 21 is refined into CE [40] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb15_in/6 
* CE 39: eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,D,B,A) = 0
     [C>=B+1,D=7] 
* CE 40: eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,E,B,C,D)
     [V_maxLen>=V_i_5,V_i_5+1=E] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb15_in/6 
* CEs [40] --> Loop 38 
* CEs [39] --> Loop 39 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb15_in/6 
* Loop 38: eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D)->  eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5',B,C,D)
                  [V_maxLen>=V_i_5,V_i_5+1=V_i_5'] 
* Loop 39: eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,D,B,A) [C>=B+1,D=7] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) 
* RF of phase [38]: [V_maxLen-V_i_5+1]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V_maxLen-V_i_5+1


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) 
* [[38],39]
* [39]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb15_in/6 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[38]]] --> 2 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb17_in/3 
* CE 25 is refined into CE [41] 
* CE 24 is refined into CE [42] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb17_in/3 
* CE 41: eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) = 0
     [V_minLen_sink>=V_maxLen,B=6] 
* CE 42: eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) = 1+ eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,C,D)
     [V_maxLen>=V_minLen_sink+1,V_minLen_sink+1=C,D=6,B=6] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb17_in/3 
* CEs [42] --> Loop 40 
* CEs [41] --> Loop 41 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb17_in/3 
* Loop 40: eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B)->  eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink',B')
                  [V_maxLen>=V_minLen_sink+1,V_minLen_sink+1=V_minLen_sink',B'=6,B=6] 
* Loop 41: eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) [V_minLen_sink>=V_maxLen,B=6] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) 
* RF of phase [40]: [V_maxLen-V_minLen_sink]

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V_maxLen-V_minLen_sink


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) 
* [[40],41]
* [41]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb17_in/3 into  External patterns of execution 
* [[41]] --> 1 
* [[41,[40]]] --> 2 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4 
* CE 23 is refined into CE [43,44] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4 
* CE 43: loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) = 1+ eval_BZ2_hbCreateDecodeTables_bb17_in(A,B,H):1
     [B>=A,H=6,G=7] 
* CE 44: loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) = 1+ eval_BZ2_hbCreateDecodeTables_bb17_in(A,B,H):2
     [A>=B+1,H=6,G=7] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4 
* CEs [44] --> Loop 42 
* CEs [43] --> Loop 43 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4 
* Loop 42: loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) [A>=B+1,G=7] 
* Loop 43: loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) [B>=A,G=7] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C) 
* [43]
* [42]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in/4 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5 
* CE 20 is refined into CE [45,46,47,48] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5 
* CE 45: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,J,B,A):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(K,B,A,D):1
     [A>=B,C>=B+1,K=7,J=7,I=8] 
* CE 46: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,J,B,A):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(K,B,A,D):2
     [B>=A+1,C>=B+1,K=7,J=7,I=8] 
* CE 47: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,J,B,A):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(K,B,A,D):1
     [A>=B,B>=C,K=7,J=7,I=8] 
* CE 48: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb15_in(A,B,C,J,B,A):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(K,B,A,D):2
     [B>=A+1,B>=C,K=7,J=7,I=8] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5 
* CEs [47] --> Loop 44 
* CEs [45] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [46] --> Loop 47 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5 
* Loop 44: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) [B>=C,A>=B,I=8] 
* Loop 45: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) [C>=B+1,A>=B,I=8] 
* Loop 46: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) [B>=C,B>=A+1,I=8] 
* Loop 47: loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) [C>=B+1,B>=A+1,I=8] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D) 
* [47]
* [46]
* [45]
* [44]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in/5 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 
* [[44]] --> 4 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5 
* CE 17 is refined into CE [49,50,51,52,53,54] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5 
* CE 49: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,K,A,B,A):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(L,A,B,A,D):2
     [B>=A+1,C>=23,L=8,K=8,J=9] 
* CE 50: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,K,A,B,A):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(L,A,B,A,D):3
     [A>=B+1,C>=23,L=8,K=8,J=9] 
* CE 51: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(B,B,C,E,B,B,B):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(F,B,B,B,D):4
     [C>=23,F=8,E=8,A=9] 
* CE 52: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,K,A,B,A):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(L,A,B,A,D):2
     [B>=A+1,22>=C,L=8,K=8,J=9] 
* CE 53: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(A,B,C,K,A,B,A):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(L,A,B,A,D):3
     [A>=B+1,22>=C,L=8,K=8,J=9] 
* CE 54: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb13_in(B,B,C,E,B,B,B):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(F,B,B,B,D):4
     [22>=C,F=8,E=8,A=9] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5 
* CEs [50] --> Loop 48 
* CEs [49] --> Loop 49 
* CEs [53] --> Loop 50 
* CEs [52] --> Loop 51 
* CEs [51] --> Loop 52 
* CEs [54] --> Loop 53 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5 
* Loop 48: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) [A>=B+1,C>=23,J=9] 
* Loop 49: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) [B>=A+1,C>=23,J=9] 
* Loop 50: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) [A>=B+1,22>=C,J=9] 
* Loop 51: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) [B>=A+1,22>=C,J=9] 
* Loop 52: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,B,C,D) [C>=23,A=9] 
* Loop 53: loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,B,C,D) [22>=C,A=9] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D) 
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in/5 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 
* [[51]] --> 3 
* [[50]] --> 4 
* [[49]] --> 5 
* [[48]] --> 6 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5 
* CE 14 is refined into CE [55,56,57,58,59,60] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5 
* CE 55: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(B,B,C,E,B,B,F):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(G,B,B,H,D):1
     [C>=23,H=0,G=9,F=0,E=9,A=3] 
* CE 56: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,L,A,B,M):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(N,A,B,O,D):3
     [B>=A+1,C>=23,O=0,N=9,M=0,L=9,K=3] 
* CE 57: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,L,A,B,M):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(N,A,B,O,D):4
     [A>=B+1,C>=23,O=0,N=9,M=0,L=9,K=3] 
* CE 58: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(B,B,C,E,B,B,F):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(G,B,B,H,D):1
     [22>=C,H=0,G=9,F=0,E=9,A=3] 
* CE 59: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,L,A,B,M):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(N,A,B,O,D):3
     [B>=A+1,22>=C,O=0,N=9,M=0,L=9,K=3] 
* CE 60: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) = 1+ eval_BZ2_hbCreateDecodeTables_bb11_in(A,B,C,L,A,B,M):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(N,A,B,O,D):4
     [A>=B+1,22>=C,O=0,N=9,M=0,L=9,K=3] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5 
* CEs [57] --> Loop 54 
* CEs [56] --> Loop 55 
* CEs [60] --> Loop 56 
* CEs [59] --> Loop 57 
* CEs [55] --> Loop 58 
* CEs [58] --> Loop 59 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5 
* Loop 54: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) [A>=B+1,C>=23,K=3] 
* Loop 55: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) [B>=A+1,C>=23,K=3] 
* Loop 56: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) [A>=B+1,22>=C,K=3] 
* Loop 57: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) [B>=A+1,22>=C,K=3] 
* Loop 58: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,B,C,D) [C>=23,A=3] 
* Loop 59: loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,B,C,D) [22>=C,A=3] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D) 
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in/5 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 
* [[57]] --> 3 
* [[56]] --> 4 
* [[55]] --> 5 
* [[54]] --> 6 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6 
* CE 11 is refined into CE [61,62,63,64,65,66] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6 
* CE 61: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(B,B,C,D,F,B,B,G):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(H,B,B,I,E):1
     [D>=C,I=1,H=3,G=1,F=3,A=4] 
* CE 62: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,L,A,B,M):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(N,A,B,O,E):3
     [B>=A+1,D>=C,O=1,N=3,M=1,L=3,K=4] 
* CE 63: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,L,A,B,M):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(N,A,B,O,E):4
     [A>=B+1,D>=C,O=1,N=3,M=1,L=3,K=4] 
* CE 64: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(B,B,C,D,F,B,B,G):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(H,B,B,I,E):1
     [C>=D+1,I=1,H=3,G=1,F=3,A=4] 
* CE 65: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,L,A,B,M):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(N,A,B,O,E):3
     [B>=A+1,C>=D+1,O=1,N=3,M=1,L=3,K=4] 
* CE 66: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb9_in(A,B,C,D,L,A,B,M):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(N,A,B,O,E):4
     [A>=B+1,C>=D+1,O=1,N=3,M=1,L=3,K=4] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6 
* CEs [66] --> Loop 60 
* CEs [63] --> Loop 61 
* CEs [65] --> Loop 62 
* CEs [62] --> Loop 63 
* CEs [64] --> Loop 64 
* CEs [61] --> Loop 65 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6 
* Loop 60: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) [C>=D+1,A>=B+1,K=4] 
* Loop 61: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) [D>=C,A>=B+1,K=4] 
* Loop 62: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) [C>=D+1,B>=A+1,K=4] 
* Loop 63: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) [D>=C,B>=A+1,K=4] 
* Loop 64: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,B,C,D,E) [C>=D+1,A=4] 
* Loop 65: loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,B,C,D,E) [D>=C,A=4] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E) 
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in/6 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 
* [[63]] --> 3 
* [[62]] --> 4 
* [[61]] --> 5 
* [[60]] --> 6 


### Specialization of cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6 
* CE 6 is refined into CE [67,68,69,70,71,72,73,74,75,76,77,78] 


#### Refined cost equations loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6 
* CE 67: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(B,B,C,D,F,B,B,C,G):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(H,B,B,C,I,E):1
     [D>=23,0>=C,I=0,H=4,G=0,F=4,A=5] 
* CE 68: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(B,B,C,D,F,B,B,C,G):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(H,B,B,C,I,E):2
     [C>=1,D>=23,I=0,H=4,G=0,F=4,A=5] 
* CE 69: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):3
     [B>=A+1,D>=23,0>=C,Q=0,P=4,O=0,N=4,M=5] 
* CE 70: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):4
     [B>=A+1,C>=1,D>=23,Q=0,P=4,O=0,N=4,M=5] 
* CE 71: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):5
     [A>=B+1,D>=23,0>=C,Q=0,P=4,O=0,N=4,M=5] 
* CE 72: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):6
     [A>=B+1,C>=1,D>=23,Q=0,P=4,O=0,N=4,M=5] 
* CE 73: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(B,B,C,D,F,B,B,C,G):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(H,B,B,C,I,E):1
     [0>=C,22>=D,I=0,H=4,G=0,F=4,A=5] 
* CE 74: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(B,B,C,D,F,B,B,C,G):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(H,B,B,C,I,E):2
     [C>=1,22>=D,I=0,H=4,G=0,F=4,A=5] 
* CE 75: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):3
     [B>=A+1,0>=C,22>=D,Q=0,P=4,O=0,N=4,M=5] 
* CE 76: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):4
     [B>=A+1,C>=1,22>=D,Q=0,P=4,O=0,N=4,M=5] 
* CE 77: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):5
     [A>=B+1,0>=C,22>=D,Q=0,P=4,O=0,N=4,M=5] 
* CE 78: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) = 1+ eval_BZ2_hbCreateDecodeTables_bb7_in(A,B,C,D,N,A,B,C,O):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(P,A,B,C,Q,E):6
     [A>=B+1,C>=1,22>=D,Q=0,P=4,O=0,N=4,M=5] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6 
* CEs [72] --> Loop 66 
* CEs [70] --> Loop 67 
* CEs [78] --> Loop 68 
* CEs [76] --> Loop 69 
* CEs [71] --> Loop 70 
* CEs [69] --> Loop 71 
* CEs [77] --> Loop 72 
* CEs [75] --> Loop 73 
* CEs [68] --> Loop 74 
* CEs [74] --> Loop 75 
* CEs [67] --> Loop 76 
* CEs [73] --> Loop 77 

#### Loops of loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6 
* Loop 66: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [A>=B+1,D>=23,C>=1,M=5] 
* Loop 67: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [B>=A+1,D>=23,C>=1,M=5] 
* Loop 68: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [A>=B+1,C>=1,22>=D,M=5] 
* Loop 69: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [B>=A+1,C>=1,22>=D,M=5] 
* Loop 70: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [A>=B+1,D>=23,0>=C,M=5] 
* Loop 71: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [B>=A+1,D>=23,0>=C,M=5] 
* Loop 72: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [A>=B+1,22>=D,0>=C,M=5] 
* Loop 73: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) [B>=A+1,22>=D,0>=C,M=5] 
* Loop 74: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) [D>=23,C>=1,A=5] 
* Loop 75: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) [C>=1,22>=D,A=5] 
* Loop 76: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) [D>=23,0>=C,A=5] 
* Loop 77: loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(A,B,B,C,D,E) [22>=D,0>=C,A=5] 

### Ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E) 
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]


### Merging Chains  loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in/6 into  External patterns of execution 
* [[77]] --> 1 
* [[76]] --> 2 
* [[75]] --> 3 
* [[74]] --> 4 
* [[73]] --> 5 
* [[72]] --> 6 
* [[71]] --> 7 
* [[70]] --> 8 
* [[69]] --> 9 
* [[68]] --> 10 
* [[67]] --> 11 
* [[66]] --> 12 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_bb0_in/4 
* CE 3 is refined into CE [79,80,81,82,83,84] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_bb0_in/4 
* CE 79: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_minLen,C,V_minLen,V_maxLen,V_alphaSize,D):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(E,V_minLen,V_maxLen,V_alphaSize,F,B):6
     [V_minLen>=V_maxLen+1,0>=V_alphaSize,F=0,E=5,D=0,C=5] 
* CE 80: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_minLen,C,V_minLen,V_maxLen,V_alphaSize,D):1+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(E,V_minLen,V_maxLen,V_alphaSize,F,B):10
     [V_minLen>=V_maxLen+1,V_alphaSize>=1,F=0,E=5,D=0,C=5] 
* CE 81: eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(A,A,B,A,D,A,A,B,E):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(F,A,A,B,G,C):1
     [0>=B,G=0,F=5,E=0,D=5] 
* CE 82: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_minLen,C,V_minLen,V_maxLen,V_alphaSize,D):2+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(E,V_minLen,V_maxLen,V_alphaSize,F,B):5
     [V_maxLen>=V_minLen+1,0>=V_alphaSize,F=0,E=5,D=0,C=5] 
* CE 83: eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(A,A,B,A,D,A,A,B,E):3+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(F,A,A,B,G,C):3
     [B>=1,G=0,F=5,E=0,D=5] 
* CE 84: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) = 1+ eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_minLen,C,V_minLen,V_maxLen,V_alphaSize,D):3+ loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(E,V_minLen,V_maxLen,V_alphaSize,F,B):9
     [V_maxLen>=V_minLen+1,V_alphaSize>=1,F=0,E=5,D=0,C=5] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_bb0_in/4 
* CEs [80] --> Loop 78 
* CEs [84] --> Loop 79 
* CEs [79] --> Loop 80 
* CEs [82] --> Loop 81 
* CEs [83] --> Loop 82 
* CEs [81] --> Loop 83 

#### Loops of eval_BZ2_hbCreateDecodeTables_bb0_in/4 
* Loop 78: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) [V_minLen>=V_maxLen+1,V_alphaSize>=1] 
* Loop 79: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) [V_maxLen>=V_minLen+1,V_alphaSize>=1] 
* Loop 80: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) [V_minLen>=V_maxLen+1,0>=V_alphaSize] 
* Loop 81: eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) [V_maxLen>=V_minLen+1,0>=V_alphaSize] 
* Loop 82: eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C) [B>=1] 
* Loop 83: eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C) [0>=B] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) 

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) 


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B) 
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_bb0_in/4 into  External patterns of execution 
* [[83]] --> 1 
* [[82]] --> 2 
* [[81]] --> 3 
* [[80]] --> 4 
* [[79]] --> 5 
* [[78]] --> 6 


### Specialization of cost equations eval_BZ2_hbCreateDecodeTables_start/4 
* CE 2 is refined into CE [85,86,87,88,89,90] 


#### Refined cost equations eval_BZ2_hbCreateDecodeTables_start/4 
* CE 85: eval_BZ2_hbCreateDecodeTables_start(A,A,B,C) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C):1
     [0>=B] 
* CE 86: eval_BZ2_hbCreateDecodeTables_start(A,A,B,C) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(A,A,B,C):2
     [B>=1] 
* CE 87: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B):3
     [V_maxLen>=V_minLen+1,0>=V_alphaSize] 
* CE 88: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B):4
     [V_minLen>=V_maxLen+1,0>=V_alphaSize] 
* CE 89: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B):5
     [V_maxLen>=V_minLen+1,V_alphaSize>=1] 
* CE 90: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) = 0+ eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B):6
     [V_minLen>=V_maxLen+1,V_alphaSize>=1] 

### Cost equations --> "Loop" of eval_BZ2_hbCreateDecodeTables_start/4 
* CEs [90] --> Loop 84 
* CEs [89] --> Loop 85 
* CEs [88] --> Loop 86 
* CEs [87] --> Loop 87 
* CEs [86] --> Loop 88 
* CEs [85] --> Loop 89 

#### Loops of eval_BZ2_hbCreateDecodeTables_start/4 
* Loop 84: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) [V_minLen>=V_maxLen+1,V_alphaSize>=1] 
* Loop 85: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) [V_maxLen>=V_minLen+1,V_alphaSize>=1] 
* Loop 86: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) [V_minLen>=V_maxLen+1,0>=V_alphaSize] 
* Loop 87: eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) [V_maxLen>=V_minLen+1,0>=V_alphaSize] 
* Loop 88: eval_BZ2_hbCreateDecodeTables_start(A,A,B,C) [B>=1] 
* Loop 89: eval_BZ2_hbCreateDecodeTables_start(A,A,B,C) [0>=B] 

### Ranking functions of CR eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) 

#### Partial ranking functions of CR eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) 


### Resulting Chains:eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B) 
* [89]
* [88]
* [87]
* [86]
* [85]
* [84]


### Merging Chains  eval_BZ2_hbCreateDecodeTables_start/4 into  External patterns of execution 
* [[89]] --> 1 
* [[88]] --> 2 
* [[87]] --> 3 
* [[86]] --> 4 
* [[85]] --> 5 
* [[84]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',V_j_0',B',C',D',E',F')] 
1
#### Cost of phase [25]:eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',V_j_0',B',C',D',E',F')] 
1*it(25)+0
  Such that:it(25) =< V_alphaSize-V_j_0
it(25) =< V_alphaSize-V_j_0-V_alphaSize'+V_j_0'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb2_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,V_j_0,B,C,D,E,F):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< -V_j_0+E

  with precondition: [B=2,V_minLen=C,V_maxLen=D,V_alphaSize=E,V_i_0+1=F,V_j_0>=0,V_maxLen>=V_i_0,V_alphaSize>=V_j_0+1] 

* Chain [26]: 0
  with precondition: [B=2,C=V_minLen,V_maxLen=D,V_alphaSize=E,V_i_0+1=F,V_j_0>=0,V_j_0>=V_alphaSize,V_maxLen>=V_i_0] 


#### Cost of loops [28] 

 * loop 28:eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',B',C',D',E',F')] 
2
#### Cost of phase [28]:eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',B',C',D',E',F')] 
2*it(28)+0
  Such that:it(28) =< V_maxLen-V_i_0+1
it(28) =< V_maxLen-V_i_0-V_maxLen'+V_i_0'

#### Cost of loops [27] 

 * loop 27:eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',B',C',D',E',F')] 
1*s(2)+2
  Such that:s(2) =< V_alphaSize'

#### Cost of phase [27]:eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen',V_maxLen',V_alphaSize',V_i_0',B',C',D',E',F')] 
2*it(27)+1*s(3)+0
  Such that:it(27) =< V_maxLen-V_i_0+1
it(27) =< V_maxLen-V_i_0-V_maxLen'+V_i_0'
aux(1) =< V_alphaSize
s(3) =< it(27)*aux(1)

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb1_in(V_minLen,V_maxLen,V_alphaSize,V_i_0,B,C,D,E,F):
* Chain [[28],29]: 2*it(28)+0
  Such that:it(28) =< -V_i_0+D+1

  with precondition: [B=5,F=0,V_minLen=C,V_maxLen=D,V_alphaSize=E,0>=V_alphaSize,V_i_0>=V_minLen,V_maxLen>=V_i_0] 

* Chain [[27],29]: 2*it(27)+1*s(3)+0
  Such that:it(27) =< -V_i_0+D+1
aux(1) =< E
s(3) =< it(27)*aux(1)

  with precondition: [B=5,F=0,V_minLen=C,V_maxLen=D,V_alphaSize=E,V_alphaSize>=1,V_i_0>=V_minLen,V_maxLen>=V_i_0] 

* Chain [29]: 0
  with precondition: [B=5,F=0,E=V_alphaSize,V_minLen=C,V_maxLen=D,V_i_0>=V_minLen,V_i_0>=V_maxLen+1] 


#### Cost of loops [30] 

 * loop 30:eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen',V_maxLen',V_alphaSize',V_i_1',B',C',D',E',F')] 
1
#### Cost of phase [30]:eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F) -> [eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen',V_maxLen',V_alphaSize',V_i_1',B',C',D',E',F')] 
1*it(30)+0
  Such that:it(30) =< -V_i_1+23
it(30) =< -V_i_1+V_i_1'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb7_in(V_minLen,V_maxLen,V_alphaSize,V_i_1,B,C,D,E,F):
* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< -V_i_1+23

  with precondition: [B=4,F=0,V_minLen=C,V_maxLen=D,V_alphaSize=E,22>=V_i_1] 

* Chain [31]: 0
  with precondition: [B=4,F=0,C=V_minLen,D=V_maxLen,E=V_alphaSize,V_i_1>=23] 


#### Cost of loops [32] 

 * loop 32:eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen',V_maxLen',V_alphaSize',V_i_2',B',C',D',E')] 
1
#### Cost of phase [32]:eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen',V_maxLen',V_alphaSize',V_i_2',B',C',D',E')] 
1*it(32)+0
  Such that:it(32) =< V_alphaSize-V_i_2
it(32) =< V_alphaSize-V_i_2-V_alphaSize'+V_i_2'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb9_in(V_minLen,V_maxLen,V_alphaSize,V_i_2,B,C,D,E):
* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< V_alphaSize-V_i_2

  with precondition: [B=3,E=1,V_minLen=C,V_maxLen=D,V_alphaSize>=V_i_2+1] 

* Chain [33]: 0
  with precondition: [B=3,E=1,C=V_minLen,D=V_maxLen,V_i_2>=V_alphaSize] 


#### Cost of loops [34] 

 * loop 34:eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen',V_maxLen',V_i_3',B',C',D',E')] 
1
#### Cost of phase [34]:eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen',V_maxLen',V_i_3',B',C',D',E')] 
1*it(34)+0
  Such that:it(34) =< -V_i_3+23
it(34) =< -V_i_3+V_i_3'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb11_in(V_minLen,V_maxLen,V_i_3,B,C,D,E):
* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< -V_i_3+23

  with precondition: [B=9,E=0,V_minLen=C,V_maxLen=D,22>=V_i_3] 

* Chain [35]: 0
  with precondition: [B=9,E=0,C=V_minLen,D=V_maxLen,V_i_3>=23] 


#### Cost of loops [36] 

 * loop 36:eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen',V_maxLen',V_i_4',B',C',D',E')] 
1
#### Cost of phase [36]:eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E) -> [eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen',V_maxLen',V_i_4',B',C',D',E')] 
1*it(36)+0
  Such that:it(36) =< -V_i_4+23
it(36) =< -V_i_4+V_i_4'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb13_in(V_minLen,V_maxLen,V_i_4,B,C,D,E):
* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< -V_i_4+23

  with precondition: [B=8,V_minLen=C,V_maxLen=D,V_minLen=E,22>=V_i_4] 

* Chain [37]: 0
  with precondition: [B=8,D=V_maxLen,V_minLen=C,V_minLen=E,V_i_4>=23] 


#### Cost of loops [38] 

 * loop 38:eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) -> [eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen',V_maxLen',V_i_5',B',C',D')] 
1
#### Cost of phase [38]:eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D) -> [eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen',V_maxLen',V_i_5',B',C',D')] 
1*it(38)+0
  Such that:it(38) =< V_maxLen-V_i_5+1
it(38) =< V_maxLen-V_i_5-V_maxLen'+V_i_5'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb15_in(V_minLen,V_maxLen,V_i_5,B,C,D):
* Chain [[38],39]: 1*it(38)+0
  Such that:it(38) =< V_maxLen-V_i_5+1

  with precondition: [B=7,V_maxLen=C,V_minLen=D,V_maxLen>=V_i_5] 

* Chain [39]: 0
  with precondition: [B=7,D=V_minLen,V_maxLen=C,V_i_5>=V_maxLen+1] 


#### Cost of loops [40] 

 * loop 40:eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) -> [eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen',V_minLen_sink',B')] 
1
#### Cost of phase [40]:eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B) -> [eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen',V_minLen_sink',B')] 
1*it(40)+0
  Such that:it(40) =< V_maxLen-V_minLen_sink
it(40) =< V_maxLen-V_minLen_sink-V_maxLen'+V_minLen_sink'

#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb17_in(V_maxLen,V_minLen_sink,B):
* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< V_maxLen-V_minLen_sink

  with precondition: [B=6,V_maxLen>=V_minLen_sink+1] 

* Chain [41]: 0
  with precondition: [B=6,V_minLen_sink>=V_maxLen] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb15_in(G,A,B,C):
* Chain [43]: 1
  with precondition: [G=7,B>=A] 

* Chain [42]: 1*s(4)+1
  Such that:s(4) =< A-B

  with precondition: [G=7,A>=B+1] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb13_in(I,A,B,C,D):
* Chain [47]: 1*s(5)+2
  Such that:s(5) =< -A+B

  with precondition: [I=8,B>=A+1,C>=B+1] 

* Chain [46]: 1*s(6)+1*s(7)+2
  Such that:s(7) =< -A+B
s(6) =< B-C+1

  with precondition: [I=8,B>=A+1,B>=C] 

* Chain [45]: 2
  with precondition: [I=8,A>=B,C>=B+1] 

* Chain [44]: 1*s(8)+2
  Such that:s(8) =< B-C+1

  with precondition: [I=8,A>=B,B>=C] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb11_in(J,A,B,C,D):
* Chain [53]: 1*s(9)+1*s(10)+3
  Such that:s(10) =< 1
s(9) =< -C+23

  with precondition: [J=9,B=A,22>=C] 

* Chain [52]: 1*s(11)+3
  Such that:s(11) =< 1

  with precondition: [J=9,B=A,C>=23] 

* Chain [51]: 1*s(12)+1*s(13)+1*s(14)+3
  Such that:s(13) =< -A+B
s(14) =< -A+B+1
s(12) =< -C+23

  with precondition: [J=9,22>=C,B>=A+1] 

* Chain [50]: 1*s(15)+3
  Such that:s(15) =< -C+23

  with precondition: [J=9,22>=C,A>=B+1] 

* Chain [49]: 1*s(16)+1*s(17)+3
  Such that:s(16) =< -A+B
s(17) =< -A+B+1

  with precondition: [J=9,C>=23,B>=A+1] 

* Chain [48]: 3
  with precondition: [J=9,C>=23,A>=B+1] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb9_in(K,A,B,C,D):
* Chain [59]: 1*s(18)+1*s(19)+1*s(20)+4
  Such that:s(19) =< 1
s(20) =< 23
s(18) =< -C+23

  with precondition: [K=3,B=A,22>=C] 

* Chain [58]: 1*s(21)+1*s(22)+4
  Such that:s(21) =< 1
s(22) =< 23

  with precondition: [K=3,B=A,C>=23] 

* Chain [57]: 1*s(23)+1*s(24)+1*s(25)+1*s(26)+4
  Such that:s(26) =< 23
s(24) =< -A+B
s(25) =< -A+B+1
s(23) =< -C+23

  with precondition: [K=3,22>=C,B>=A+1] 

* Chain [56]: 1*s(27)+1*s(28)+4
  Such that:s(28) =< 23
s(27) =< -C+23

  with precondition: [K=3,22>=C,A>=B+1] 

* Chain [55]: 1*s(29)+1*s(30)+1*s(31)+4
  Such that:s(31) =< 23
s(29) =< -A+B
s(30) =< -A+B+1

  with precondition: [K=3,C>=23,B>=A+1] 

* Chain [54]: 1*s(32)+4
  Such that:s(32) =< 23

  with precondition: [K=3,C>=23,A>=B+1] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb7_in(K,A,B,C,D,E):
* Chain [65]: 1*s(33)+1*s(34)+1*s(35)+5
  Such that:s(33) =< 1
s(35) =< 22
s(34) =< 23

  with precondition: [K=4,B=A,D>=C] 

* Chain [64]: 1*s(36)+1*s(37)+1*s(38)+1*s(39)+5
  Such that:s(37) =< 1
s(39) =< 22
s(38) =< 23
s(36) =< C-D

  with precondition: [K=4,B=A,C>=D+1] 

* Chain [63]: 1*s(40)+1*s(41)+1*s(42)+1*s(43)+5
  Such that:s(43) =< 22
s(40) =< 23
s(41) =< -A+B
s(42) =< -A+B+1

  with precondition: [K=4,B>=A+1,D>=C] 

* Chain [62]: 1*s(44)+1*s(45)+1*s(46)+1*s(47)+1*s(48)+5
  Such that:s(48) =< 22
s(45) =< 23
s(46) =< -A+B
s(47) =< -A+B+1
s(44) =< C-D

  with precondition: [K=4,B>=A+1,C>=D+1] 

* Chain [61]: 1*s(49)+1*s(50)+5
  Such that:s(50) =< 22
s(49) =< 23

  with precondition: [K=4,A>=B+1,D>=C] 

* Chain [60]: 1*s(51)+1*s(52)+1*s(53)+5
  Such that:s(53) =< 22
s(52) =< 23
s(51) =< C-D

  with precondition: [K=4,A>=B+1,C>=D+1] 


#### Cost of chains of loop_cont_eval_BZ2_hbCreateDecodeTables_bb1_in(M,A,B,C,D,E):
* Chain [77]: 1*s(54)+1*s(55)+1*s(56)+1*s(57)+6
  Such that:s(55) =< 1
s(56) =< 22
s(57) =< 23
s(54) =< -D+23

  with precondition: [M=5,B=A,0>=C,22>=D] 

* Chain [76]: 1*s(58)+1*s(59)+1*s(60)+6
  Such that:s(58) =< 1
s(59) =< 22
s(60) =< 23

  with precondition: [M=5,B=A,0>=C,D>=23] 

* Chain [75]: 1*s(61)+1*s(62)+1*s(63)+1*s(64)+1*s(65)+6
  Such that:s(62) =< 1
s(63) =< 22
s(64) =< 23
s(65) =< C
s(61) =< -D+23

  with precondition: [M=5,B=A,22>=D,C>=1] 

* Chain [74]: 1*s(66)+1*s(67)+1*s(68)+1*s(69)+6
  Such that:s(66) =< 1
s(67) =< 22
s(68) =< 23
s(69) =< C

  with precondition: [M=5,B=A,C>=1,D>=23] 

* Chain [73]: 1*s(70)+1*s(71)+1*s(72)+1*s(73)+1*s(74)+6
  Such that:s(71) =< 22
s(72) =< 23
s(73) =< -A+B
s(74) =< -A+B+1
s(70) =< -D+23

  with precondition: [M=5,0>=C,22>=D,B>=A+1] 

* Chain [72]: 1*s(75)+1*s(76)+1*s(77)+6
  Such that:s(76) =< 22
s(77) =< 23
s(75) =< -D+23

  with precondition: [M=5,0>=C,22>=D,A>=B+1] 

* Chain [71]: 1*s(78)+1*s(79)+1*s(80)+1*s(81)+6
  Such that:s(78) =< 22
s(79) =< 23
s(80) =< -A+B
s(81) =< -A+B+1

  with precondition: [M=5,0>=C,D>=23,B>=A+1] 

* Chain [70]: 1*s(82)+1*s(83)+6
  Such that:s(82) =< 22
s(83) =< 23

  with precondition: [M=5,0>=C,D>=23,A>=B+1] 

* Chain [69]: 1*s(84)+1*s(85)+1*s(86)+1*s(87)+1*s(88)+1*s(89)+6
  Such that:s(85) =< 22
s(86) =< 23
s(87) =< -A+B
s(88) =< -A+B+1
s(89) =< C
s(84) =< -D+23

  with precondition: [M=5,22>=D,C>=1,B>=A+1] 

* Chain [68]: 1*s(90)+1*s(91)+1*s(92)+1*s(93)+6
  Such that:s(91) =< 22
s(92) =< 23
s(93) =< C
s(90) =< -D+23

  with precondition: [M=5,22>=D,C>=1,A>=B+1] 

* Chain [67]: 1*s(94)+1*s(95)+1*s(96)+1*s(97)+1*s(98)+6
  Such that:s(94) =< 22
s(95) =< 23
s(96) =< -A+B
s(97) =< -A+B+1
s(98) =< C

  with precondition: [M=5,C>=1,D>=23,B>=A+1] 

* Chain [66]: 1*s(99)+1*s(100)+1*s(101)+6
  Such that:s(99) =< 22
s(100) =< 23
s(101) =< C

  with precondition: [M=5,C>=1,D>=23,A>=B+1] 


#### Cost of chains of eval_BZ2_hbCreateDecodeTables_bb0_in(V_minLen,V_maxLen,V_alphaSize,B):
* Chain [83]: 3*s(102)+1*s(104)+2*s(105)+7
  Such that:s(104) =< 22
aux(2) =< 1
aux(3) =< 23
s(102) =< aux(2)
s(105) =< aux(3)

  with precondition: [V_maxLen=V_minLen,0>=V_alphaSize] 

* Chain [82]: 3*s(107)+1*s(109)+1*s(111)+2*s(112)+1*s(113)+7
  Such that:s(111) =< 22
aux(4) =< 1
aux(5) =< 23
aux(6) =< V_alphaSize
s(107) =< aux(4)
s(112) =< aux(5)
s(113) =< aux(6)
s(109) =< s(107)*aux(6)

  with precondition: [V_maxLen=V_minLen,V_alphaSize>=1] 

* Chain [81]: 3*s(115)+1*s(116)+2*s(117)+1*s(118)+7
  Such that:s(116) =< 22
s(118) =< -V_minLen+V_maxLen
aux(7) =< 23
aux(8) =< -V_minLen+V_maxLen+1
s(117) =< aux(7)
s(115) =< aux(8)

  with precondition: [0>=V_alphaSize,V_maxLen>=V_minLen+1] 

* Chain [80]: 1*s(121)+2*s(122)+7
  Such that:s(121) =< 22
aux(9) =< 23
s(122) =< aux(9)

  with precondition: [0>=V_alphaSize,V_minLen>=V_maxLen+1] 

* Chain [79]: 3*s(124)+1*s(126)+1*s(127)+2*s(128)+1*s(129)+1*s(131)+7
  Such that:s(127) =< 22
s(129) =< -V_minLen+V_maxLen
aux(10) =< 23
aux(11) =< -V_minLen+V_maxLen+1
aux(12) =< V_alphaSize
s(128) =< aux(10)
s(124) =< aux(11)
s(131) =< aux(12)
s(126) =< s(124)*aux(12)

  with precondition: [V_alphaSize>=1,V_maxLen>=V_minLen+1] 

* Chain [78]: 1*s(133)+2*s(134)+1*s(135)+7
  Such that:s(133) =< 22
s(135) =< V_alphaSize
aux(13) =< 23
s(134) =< aux(13)

  with precondition: [V_alphaSize>=1,V_minLen>=V_maxLen+1] 


#### Cost of chains of eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B):
* Chain [89]: 1*s(137)+3*s(140)+2*s(141)+7
  Such that:s(138) =< 1
s(137) =< 22
s(139) =< 23
s(140) =< s(138)
s(141) =< s(139)

  with precondition: [V_maxLen=V_minLen,0>=V_alphaSize] 

* Chain [88]: 1*s(142)+3*s(146)+2*s(147)+1*s(148)+1*s(149)+7
  Such that:s(143) =< 1
s(142) =< 22
s(144) =< 23
s(145) =< V_alphaSize
s(146) =< s(143)
s(147) =< s(144)
s(148) =< s(145)
s(149) =< s(146)*s(145)

  with precondition: [V_maxLen=V_minLen,V_alphaSize>=1] 

* Chain [87]: 1*s(150)+1*s(151)+2*s(154)+3*s(155)+7
  Such that:s(150) =< 22
s(152) =< 23
s(151) =< -V_minLen+V_maxLen
s(153) =< -V_minLen+V_maxLen+1
s(154) =< s(152)
s(155) =< s(153)

  with precondition: [0>=V_alphaSize,V_maxLen>=V_minLen+1] 

* Chain [86]: 1*s(156)+2*s(158)+7
  Such that:s(156) =< 22
s(157) =< 23
s(158) =< s(157)

  with precondition: [0>=V_alphaSize,V_minLen>=V_maxLen+1] 

* Chain [85]: 1*s(159)+1*s(160)+2*s(164)+3*s(165)+1*s(166)+1*s(167)+7
  Such that:s(159) =< 22
s(161) =< 23
s(160) =< -V_minLen+V_maxLen
s(162) =< -V_minLen+V_maxLen+1
s(163) =< V_alphaSize
s(164) =< s(161)
s(165) =< s(162)
s(166) =< s(163)
s(167) =< s(165)*s(163)

  with precondition: [V_alphaSize>=1,V_maxLen>=V_minLen+1] 

* Chain [84]: 1*s(168)+1*s(169)+2*s(171)+7
  Such that:s(168) =< 22
s(170) =< 23
s(169) =< V_alphaSize
s(171) =< s(170)

  with precondition: [V_alphaSize>=1,V_minLen>=V_maxLen+1] 


Closed-form bounds of eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B): 
-------------------------------------
* Chain [89] with precondition: [V_maxLen=V_minLen,0>=V_alphaSize] 
    - Upper bound: 78 
    - Complexity: constant 
* Chain [88] with precondition: [V_maxLen=V_minLen,V_alphaSize>=1] 
    - Upper bound: 2*V_alphaSize+78 
    - Complexity: n 
* Chain [87] with precondition: [0>=V_alphaSize,V_maxLen>=V_minLen+1] 
    - Upper bound: -4*V_minLen+4*V_maxLen+78 
    - Complexity: n 
* Chain [86] with precondition: [0>=V_alphaSize,V_minLen>=V_maxLen+1] 
    - Upper bound: 75 
    - Complexity: constant 
* Chain [85] with precondition: [V_alphaSize>=1,V_maxLen>=V_minLen+1] 
    - Upper bound: V_alphaSize+75+ (-V_minLen+V_maxLen+1)*V_alphaSize+ (-V_minLen+V_maxLen)+ (-3*V_minLen+3*V_maxLen+3) 
    - Complexity: n^2 
* Chain [84] with precondition: [V_alphaSize>=1,V_minLen>=V_maxLen+1] 
    - Upper bound: V_alphaSize+75 
    - Complexity: n 

### Maximum cost of eval_BZ2_hbCreateDecodeTables_start(V_minLen,V_maxLen,V_alphaSize,B): max([max([3,nat(-V_minLen+V_maxLen+1)*3+nat(-V_minLen+V_maxLen)]),nat(V_alphaSize)+max([nat(V_alphaSize)+3,nat(-V_minLen+V_maxLen+1)*nat(V_alphaSize)+nat(-V_minLen+V_maxLen)+nat(-V_minLen+V_maxLen+1)*3])])+75 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 96 ms.
   - Backward Invariants 50 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 274 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 196 ms.
   - Equation cost structures 115 ms.
   - Phase cost structures 48 ms.
   - Chain cost structures 33 ms.
   - Solving cost expressions 3 ms.
* Total analysis performed in 691 ms.

