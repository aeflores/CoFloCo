Warning: Ignored call to eval_isheaderline_stop/1 in equation eval_isheaderline_41/1 
Warning: Ignored call to eval_isheaderline_stop/1 in equation eval_isheaderline_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_isheaderline_bb2_in/6]
1. non_recursive  : [eval_isheaderline_bb11_in/1]
2. non_recursive  : [eval_isheaderline_35/1]
3. non_recursive  : [eval_isheaderline_34/2]
4. non_recursive  : [eval_isheaderline_41/1]
5. non_recursive  : [eval_isheaderline_40/3]
6. non_recursive  : [eval_isheaderline_38/3]
7. non_recursive  : [eval_isheaderline_37/4]
8. non_recursive  : [eval_isheaderline_31/3]
9. non_recursive  : [eval_isheaderline_30/4]
10. non_recursive  : [loop_cont_eval_isheaderline_bb2_in/5]
11. non_recursive  : [eval_isheaderline_9/2]
12. non_recursive  : [eval_isheaderline_8/2]
13. non_recursive  : [eval_isheaderline_4/2]
14. non_recursive  : [eval_isheaderline_3/2]
15. non_recursive  : [eval_isheaderline_bb0_in/2]
16. non_recursive  : [eval_isheaderline_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_isheaderline_bb2_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_isheaderline_38/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_isheaderline_31/3
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_isheaderline_bb2_in/5
11. SCC is partially evaluated into eval_isheaderline_9/2
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_isheaderline_4/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_isheaderline_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_isheaderline_bb2_in/6 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations eval_isheaderline_bb2_in/6 
* CE 16: eval_isheaderline_bb2_in(A,B,C,A,B,B) = 0
     [B>=46,C=3] 
* CE 17: eval_isheaderline_bb2_in(A,B,C,A,B,B) = 0
     [B>=1,44>=B,C=3] 
* CE 18: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) = 0
     [V_i_0>=46,B=2] 
* CE 19: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) = 0
     [V_i_0>=1,44>=V_i_0,B=2] 
* CE 20: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,F,B,C,D,E)
     [V_i_0>=1,V_i_0+1=F] 

### Cost equations --> "Loop" of eval_isheaderline_bb2_in/6 
* CEs [20] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 

#### Loops of eval_isheaderline_bb2_in/6 
* Loop 13: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E)->  eval_isheaderline_bb2_in(V__use_charset_header,V_i_0',B,C,D,E)
                  [V_i_0>=1,V_i_0+1=V_i_0'] 
* Loop 14: eval_isheaderline_bb2_in(A,B,C,A,B,B) [B>=46,C=3] 
* Loop 15: eval_isheaderline_bb2_in(A,B,C,A,B,B) [B>=1,44>=B,C=3] 
* Loop 16: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) [V_i_0>=46,B=2] 
* Loop 17: eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) [V_i_0>=1,44>=V_i_0,B=2] 

### Ranking functions of CR eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) 

#### Partial ranking functions of CR eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) 


### Resulting Chains:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) 
* [[13]]...
* [[13],17]
* [[13],16]
* [[13],15]
* [[13],14]
* [17]
* [15]


### Merging Chains  eval_isheaderline_bb2_in/6 into  External patterns of execution 
* [[17],[16,[13]],[17,[13]]] --> 1 
* [[15]] --> 2 
* [[15,[13]]] --> 3 
* [[14,[13]]] --> 4 
* [[[13]]] --> 5 


### Specialization of cost equations eval_isheaderline_38/3 
* CE 15 is refined into CE [21] 


#### Refined cost equations eval_isheaderline_38/3 
* CE 21: eval_isheaderline_38(V__use_charset_header,V_i_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_isheaderline_38/3 
* CEs [21] --> Loop 18 

#### Loops of eval_isheaderline_38/3 
* Loop 18: eval_isheaderline_38(V__use_charset_header,V_i_0,B) [] 

### Ranking functions of CR eval_isheaderline_38(V__use_charset_header,V_i_0,B) 

#### Partial ranking functions of CR eval_isheaderline_38(V__use_charset_header,V_i_0,B) 


### Resulting Chains:eval_isheaderline_38(V__use_charset_header,V_i_0,B) 
* [18]


### Merging Chains  eval_isheaderline_38/3 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_isheaderline_31/3 
* CE 13 is refined into CE [22] 
* CE 14 is refined into CE [23] 


#### Refined cost equations eval_isheaderline_31/3 
* CE 22: eval_isheaderline_31(V__use_charset_header,V_i_0,B) = 0
     [] 
* CE 23: eval_isheaderline_31(V__use_charset_header,V_i_0,B) = 0+ eval_isheaderline_38(V__use_charset_header,V_i_0,B):1
     [] 

### Cost equations --> "Loop" of eval_isheaderline_31/3 
* CEs [22,23] --> Loop 19 

#### Loops of eval_isheaderline_31/3 
* Loop 19: eval_isheaderline_31(V__use_charset_header,V_i_0,B) [] 

### Ranking functions of CR eval_isheaderline_31(V__use_charset_header,V_i_0,B) 

#### Partial ranking functions of CR eval_isheaderline_31(V__use_charset_header,V_i_0,B) 


### Resulting Chains:eval_isheaderline_31(V__use_charset_header,V_i_0,B) 
* [19]


### Merging Chains  eval_isheaderline_31/3 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations loop_cont_eval_isheaderline_bb2_in/5 
* CE 12 is refined into CE [24] 
* CE 11 is refined into CE [25] 


#### Refined cost equations loop_cont_eval_isheaderline_bb2_in/5 
* CE 24: loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) = 0+ eval_isheaderline_31(A,B,D):1
     [F=3] 
* CE 25: loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_isheaderline_bb2_in/5 
* CEs [24] --> Loop 20 
* CEs [25] --> Loop 21 

#### Loops of loop_cont_eval_isheaderline_bb2_in/5 
* Loop 20: loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) [F=3] 
* Loop 21: loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) [F=2] 

### Ranking functions of CR loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) 


### Resulting Chains:loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D) 
* [21]
* [20]


### Merging Chains  loop_cont_eval_isheaderline_bb2_in/5 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_isheaderline_9/2 
* CE 5 is refined into CE [26,27,28,29,30] 


#### Refined cost equations eval_isheaderline_9/2 
* CE 26: eval_isheaderline_9(V__use_charset_header,B) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,C,D,E,F,G):1+ loop_cont_eval_isheaderline_bb2_in(H,E,F,G,B):1
     [H=2,D=2,C=1] 
* CE 27: eval_isheaderline_9(V__use_charset_header,B) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,C,D,V__use_charset_header,E,F):2+ loop_cont_eval_isheaderline_bb2_in(G,V__use_charset_header,H,I,B):2
     [I=1,H=1,G=3,F=1,E=1,D=3,C=1] 
* CE 28: eval_isheaderline_9(V__use_charset_header,B) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,C,D,V__use_charset_header,E,E):3+ loop_cont_eval_isheaderline_bb2_in(F,V__use_charset_header,E,E,B):2
     [E>=2,44>=E,F=3,D=3,C=1] 
* CE 29: eval_isheaderline_9(V__use_charset_header,B) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,C,D,V__use_charset_header,E,E):4+ loop_cont_eval_isheaderline_bb2_in(F,V__use_charset_header,E,E,B):2
     [E>=46,F=3,D=3,C=1] 
* CE 30: eval_isheaderline_9(V__use_charset_header,B) = 1+ eval_isheaderline_bb2_in(V__use_charset_header,C,D,E,F,G):5
     [C=1] 

### Cost equations --> "Loop" of eval_isheaderline_9/2 
* CEs [30] --> Loop 22 
* CEs [26,27,28,29] --> Loop 23 

#### Loops of eval_isheaderline_9/2 
* Loop 22: eval_isheaderline_9(V__use_charset_header,B) [] 
* Loop 23: eval_isheaderline_9(V__use_charset_header,B) [] 

### Ranking functions of CR eval_isheaderline_9(V__use_charset_header,B) 

#### Partial ranking functions of CR eval_isheaderline_9(V__use_charset_header,B) 


### Resulting Chains:eval_isheaderline_9(V__use_charset_header,B) 
* [23]
* [22]...


### Merging Chains  eval_isheaderline_9/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_isheaderline_4/2 
* CE 3 is refined into CE [31,32] 
* CE 4 is refined into CE [33] 


#### Refined cost equations eval_isheaderline_4/2 
* CE 31: eval_isheaderline_4(V__use_charset_header,B) = 0+ eval_isheaderline_9(V__use_charset_header,B):1
     [] 
* CE 32: eval_isheaderline_4(V__use_charset_header,B) = 0+ eval_isheaderline_9(V__use_charset_header,B):2
     [] 
* CE 33: eval_isheaderline_4(V__use_charset_header,B) = 0
     [] 

### Cost equations --> "Loop" of eval_isheaderline_4/2 
* CEs [31,33] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of eval_isheaderline_4/2 
* Loop 24: eval_isheaderline_4(V__use_charset_header,B) [] 
* Loop 25: eval_isheaderline_4(V__use_charset_header,B) [] 

### Ranking functions of CR eval_isheaderline_4(V__use_charset_header,B) 

#### Partial ranking functions of CR eval_isheaderline_4(V__use_charset_header,B) 


### Resulting Chains:eval_isheaderline_4(V__use_charset_header,B) 
* [25]...
* [24]


### Merging Chains  eval_isheaderline_4/2 into  External patterns of execution 
* [[24]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_isheaderline_start/2 
* CE 2 is refined into CE [34,35] 


#### Refined cost equations eval_isheaderline_start/2 
* CE 34: eval_isheaderline_start(V__use_charset_header,B) = 0+ eval_isheaderline_4(V__use_charset_header,B):1
     [] 
* CE 35: eval_isheaderline_start(V__use_charset_header,B) = 0+ eval_isheaderline_4(V__use_charset_header,B):2
     [] 

### Cost equations --> "Loop" of eval_isheaderline_start/2 
* CEs [35] --> Loop 26 
* CEs [34] --> Loop 27 

#### Loops of eval_isheaderline_start/2 
* Loop 26: eval_isheaderline_start(V__use_charset_header,B) [] 
* Loop 27: eval_isheaderline_start(V__use_charset_header,B) [] 

### Ranking functions of CR eval_isheaderline_start(V__use_charset_header,B) 

#### Partial ranking functions of CR eval_isheaderline_start(V__use_charset_header,B) 


### Resulting Chains:eval_isheaderline_start(V__use_charset_header,B) 
* [27]
* [26]...


### Merging Chains  eval_isheaderline_start/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1
#### Cost of phase [13]:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E) -> [eval_isheaderline_bb2_in(V__use_charset_header',V_i_0',B',C',D',E')] 
1*it(13)+0
#### Cost of chains of eval_isheaderline_bb2_in(V__use_charset_header,V_i_0,B,C,D,E):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V_i_0>=1] 

* Chain [[13],17]: 1*it(13)+0
  with precondition: [B=2,43>=V_i_0,V_i_0>=1] 

* Chain [[13],16]: 1*it(13)+0
  with precondition: [B=2,V_i_0>=1] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [B=3,V__use_charset_header=C,D=E,44>=D,V_i_0>=1,D>=V_i_0+1] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3,V__use_charset_header=C,D=E,V_i_0>=1,D>=46,D>=V_i_0+1] 

* Chain [17]: 0
  with precondition: [B=2,44>=V_i_0,V_i_0>=1] 

* Chain [15]: 0
  with precondition: [B=3,C=V__use_charset_header,V_i_0=D,V_i_0=E,44>=V_i_0,V_i_0>=1] 


#### Cost of chains of eval_isheaderline_38(V__use_charset_header,V_i_0,B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of chains of eval_isheaderline_31(V__use_charset_header,V_i_0,B):
* Chain [19]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_isheaderline_bb2_in(F,A,B,C,D):
* Chain [21]: 0
  with precondition: [F=2] 

* Chain [20]: 0
  with precondition: [F=3] 


#### Cost of chains of eval_isheaderline_9(V__use_charset_header,B):
* Chain [23]: 1*aux(2)+0
  with precondition: [] 

* Chain [22]...: 1*s(6)+1
  with precondition: [] 


#### Cost of chains of eval_isheaderline_4(V__use_charset_header,B):
* Chain [25]...: 1*s(7)+1
  with precondition: [] 

* Chain [24]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_isheaderline_start(V__use_charset_header,B):
* Chain [27]: 1*s(9)+0
  with precondition: [] 

* Chain [26]...: 1*s(10)+1
  with precondition: [] 


Closed-form bounds of eval_isheaderline_start(V__use_charset_header,B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_isheaderline_start(V__use_charset_header,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 32 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 104 ms.

