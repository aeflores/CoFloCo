Warning: Ignored call to eval_dict_is_permanent_on_dstack_stop/1 in equation eval_dict_is_permanent_on_dstack_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_dict_is_permanent_on_dstack_13/5,eval_dict_is_permanent_on_dstack_14/5,eval_dict_is_permanent_on_dstack_bb6_in/4]
1. non_recursive  : [eval_dict_is_permanent_on_dstack_bb9_in/1]
2. non_recursive  : [loop_cont_eval_dict_is_permanent_on_dstack_bb6_in/2]
3. non_recursive  : [eval_dict_is_permanent_on_dstack_9/3]
4. non_recursive  : [eval_dict_is_permanent_on_dstack_8/2]
5. recursive  : [eval_dict_is_permanent_on_dstack_bb2_in/3]
6. non_recursive  : [loop_cont_eval_dict_is_permanent_on_dstack_bb2_in/2]
7. non_recursive  : [eval_dict_is_permanent_on_dstack_bb0_in/2]
8. non_recursive  : [eval_dict_is_permanent_on_dstack_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_dict_is_permanent_on_dstack_bb6_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_dict_is_permanent_on_dstack_9/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_dict_is_permanent_on_dstack_bb2_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_dict_is_permanent_on_dstack_bb0_in/2
8. SCC is partially evaluated into eval_dict_is_permanent_on_dstack_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_is_permanent_on_dstack_bb6_in/4 
* CE 10 is refined into CE [12] 
* CE 11 is refined into CE [13] 
* CE 9 is refined into CE [14] 


#### Refined cost equations eval_dict_is_permanent_on_dstack_bb6_in/4 
* CE 12: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) = 0
     [V__min_dstack_size+V_i_1>=V_17,V_17>=V_i_1+1,B=2] 
* CE 13: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) = 0
     [V__min_dstack_size+V_i_1>=V_17,V_i_1>=V_17,B=2] 
* CE 14: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) = 1+ eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,C,D)
     [V__min_dstack_size+V_i_1>=V_17,V_17>=V_i_1+1,V_i_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_dict_is_permanent_on_dstack_bb6_in/4 
* CEs [14] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_dict_is_permanent_on_dstack_bb6_in/4 
* Loop 10: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B)->  eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1',B')
                  [V__min_dstack_size+V_i_1>=V_17,V_17>=V_i_1+1,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 11: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) [V__min_dstack_size+V_i_1>=V_17,V_17>=V_i_1+1,B=2] 
* Loop 12: eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) [V__min_dstack_size+V_i_1>=V_17,V_i_1>=V_17,B=2] 

### Ranking functions of CR eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) 
* RF of phase [10]: [V_17-V_i_1]

#### Partial ranking functions of CR eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_17-V_i_1


### Resulting Chains:eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_dict_is_permanent_on_dstack_bb6_in/4 into  External patterns of execution 
* [[12]] --> 1 
* [[11],[11,[10]],[12,[10]]] --> 2 


### Specialization of cost equations eval_dict_is_permanent_on_dstack_9/3 
* CE 8 is refined into CE [15,16] 


#### Refined cost equations eval_dict_is_permanent_on_dstack_9/3 
* CE 15: eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) = 1+ eval_dict_is_permanent_on_dstack_bb6_in(C,V_17,D,E):1
     [D>=V_17,V_17=C+D,V_17=V__min_dstack_size+D,E=2] 
* CE 16: eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) = 1+ eval_dict_is_permanent_on_dstack_bb6_in(C,V_17,D,E):2
     [V_17>=D+1,C+D=V_17,V__min_dstack_size+D=V_17,E=2] 

### Cost equations --> "Loop" of eval_dict_is_permanent_on_dstack_9/3 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_dict_is_permanent_on_dstack_9/3 
* Loop 13: eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) [V__min_dstack_size>=1] 
* Loop 14: eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) [0>=V__min_dstack_size] 

### Ranking functions of CR eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) 

#### Partial ranking functions of CR eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) 


### Resulting Chains:eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B) 
* [14]
* [13]


### Merging Chains  eval_dict_is_permanent_on_dstack_9/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_dict_is_permanent_on_dstack_bb2_in/3 
* CE 5 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 6 is refined into CE [19] 


#### Refined cost equations eval_dict_is_permanent_on_dstack_bb2_in/3 
* CE 17: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) = 0
     [V_6>=V_i_0+1,V_i_0>=0,B=2] 
* CE 18: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) = 0
     [V_i_0>=V_6,V_i_0>=0,B=2] 
* CE 19: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) = 1+ eval_dict_is_permanent_on_dstack_bb2_in(V_6,C,D)
     [V_6>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_dict_is_permanent_on_dstack_bb2_in/3 
* CEs [19] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_dict_is_permanent_on_dstack_bb2_in/3 
* Loop 15: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B)->  eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0',B')
                  [V_6>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 16: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) [V_6>=V_i_0+1,V_i_0>=0,B=2] 
* Loop 17: eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) [V_i_0>=V_6,V_i_0>=0,B=2] 

### Ranking functions of CR eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) 
* RF of phase [15]: [V_6-V_i_0]

#### Partial ranking functions of CR eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_6-V_i_0


### Resulting Chains:eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) 
* [[15],17]
* [[15],16]
* [17]
* [16]


### Merging Chains  eval_dict_is_permanent_on_dstack_bb2_in/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16],[16,[15]],[17,[15]]] --> 2 


### Specialization of cost equations eval_dict_is_permanent_on_dstack_bb0_in/2 
* CE 3 is refined into CE [20,21] 
* CE 4 is refined into CE [22,23] 


#### Refined cost equations eval_dict_is_permanent_on_dstack_bb0_in/2 
* CE 20: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) = 1+ eval_dict_is_permanent_on_dstack_bb2_in(V__min_dstack_size,C,D):1
     [0>=V__min_dstack_size,D=2,C=0] 
* CE 21: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) = 1+ eval_dict_is_permanent_on_dstack_bb2_in(V__min_dstack_size,C,D):2
     [V__min_dstack_size>=1,D=2,C=0] 
* CE 22: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) = 0+ eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,C,B):1
     [0>=V__min_dstack_size] 
* CE 23: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) = 0+ eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,C,B):2
     [V__min_dstack_size>=1] 

### Cost equations --> "Loop" of eval_dict_is_permanent_on_dstack_bb0_in/2 
* CEs [21,23] --> Loop 18 
* CEs [20,22] --> Loop 19 

#### Loops of eval_dict_is_permanent_on_dstack_bb0_in/2 
* Loop 18: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) [V__min_dstack_size>=1] 
* Loop 19: eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) [0>=V__min_dstack_size] 

### Ranking functions of CR eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) 

#### Partial ranking functions of CR eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) 


### Resulting Chains:eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B) 
* [19]
* [18]


### Merging Chains  eval_dict_is_permanent_on_dstack_bb0_in/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_dict_is_permanent_on_dstack_start/2 
* CE 2 is refined into CE [24,25] 


#### Refined cost equations eval_dict_is_permanent_on_dstack_start/2 
* CE 24: eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) = 0+ eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B):1
     [0>=V__min_dstack_size] 
* CE 25: eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) = 0+ eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B):2
     [V__min_dstack_size>=1] 

### Cost equations --> "Loop" of eval_dict_is_permanent_on_dstack_start/2 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of eval_dict_is_permanent_on_dstack_start/2 
* Loop 20: eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) [V__min_dstack_size>=1] 
* Loop 21: eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) [0>=V__min_dstack_size] 

### Ranking functions of CR eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) 

#### Partial ranking functions of CR eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) 


### Resulting Chains:eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B) 
* [21]
* [20]


### Merging Chains  eval_dict_is_permanent_on_dstack_start/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) -> [eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size',V_17',V_i_1',B')] 
1
#### Cost of phase [10]:eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) -> [eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size',V_17',V_i_1',B')] 
1*it(10)+0
  Such that:it(10) =< V_17-V_i_1
it(10) =< V_17-V_i_1-V_17'+V_i_1'

#### Cost of phase [10]:eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B) -> [eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size',V_17',V_i_1',B')] 
1*it(10)+0
  Such that:it(10) =< V_17-V_i_1
it(10) =< V_17-V_i_1-V_17'+V_i_1'

#### Cost of chains of eval_dict_is_permanent_on_dstack_bb6_in(V__min_dstack_size,V_17,V_i_1,B):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V_17-V_i_1

  with precondition: [B=2,V_17>=V_i_1+1,V__min_dstack_size+V_i_1>=V_17] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_17-V_i_1

  with precondition: [B=2,V_17>=V_i_1+2,V__min_dstack_size+V_i_1>=V_17] 

* Chain [12]: 0
  with precondition: [B=2,V_i_1>=V_17,V__min_dstack_size+V_i_1>=V_17] 

* Chain [11]: 0
  with precondition: [B=2,V_17>=V_i_1+1,V__min_dstack_size+V_i_1>=V_17] 


#### Cost of chains of eval_dict_is_permanent_on_dstack_9(V__min_dstack_size,V_17,B):
* Chain [14]: 1
  with precondition: [0>=V__min_dstack_size] 

* Chain [13]: 2*s(4)+1
  Such that:s(3) =< V__min_dstack_size
s(4) =< s(3)

  with precondition: [V__min_dstack_size>=1] 


#### Cost of loops [15] 

 * loop 15:eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) -> [eval_dict_is_permanent_on_dstack_bb2_in(V_6',V_i_0',B')] 
1
#### Cost of phase [15]:eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) -> [eval_dict_is_permanent_on_dstack_bb2_in(V_6',V_i_0',B')] 
1*it(15)+0
  Such that:it(15) =< V_6-V_i_0
it(15) =< V_6-V_i_0-V_6'+V_i_0'

#### Cost of phase [15]:eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B) -> [eval_dict_is_permanent_on_dstack_bb2_in(V_6',V_i_0',B')] 
1*it(15)+0
  Such that:it(15) =< V_6-V_i_0
it(15) =< V_6-V_i_0-V_6'+V_i_0'

#### Cost of chains of eval_dict_is_permanent_on_dstack_bb2_in(V_6,V_i_0,B):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_6-V_i_0

  with precondition: [B=2,V_i_0>=0,V_6>=V_i_0+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V_6-V_i_0

  with precondition: [B=2,V_i_0>=0,V_6>=V_i_0+2] 

* Chain [17]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_6] 

* Chain [16]: 0
  with precondition: [B=2,V_i_0>=0,V_6>=V_i_0+1] 


#### Cost of chains of eval_dict_is_permanent_on_dstack_bb0_in(V__min_dstack_size,B):
* Chain [19]: 1
  with precondition: [0>=V__min_dstack_size] 

* Chain [18]: 4*s(8)+1
  Such that:aux(3) =< V__min_dstack_size
s(8) =< aux(3)

  with precondition: [V__min_dstack_size>=1] 


#### Cost of chains of eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B):
* Chain [21]: 1
  with precondition: [0>=V__min_dstack_size] 

* Chain [20]: 4*s(12)+1
  Such that:s(11) =< V__min_dstack_size
s(12) =< s(11)

  with precondition: [V__min_dstack_size>=1] 


Closed-form bounds of eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B): 
-------------------------------------
* Chain [21] with precondition: [0>=V__min_dstack_size] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [V__min_dstack_size>=1] 
    - Upper bound: 4*V__min_dstack_size+1 
    - Complexity: n 

### Maximum cost of eval_dict_is_permanent_on_dstack_start(V__min_dstack_size,B): nat(V__min_dstack_size)*4+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 64 ms.
   - Backward Invariants 35 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 84 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 82 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 34 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 329 ms.

