Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_2/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_41/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main1_2/1]
1. non_recursive  : [eval_main1_1/1]
2. non_recursive  : [eval_main1_0/1]
3. recursive  : [eval_main1_10/4,eval_main1_21/4,eval_main1_22/4,eval_main1_23/4,eval_main1_24/4,eval_main1_25/4,eval_main1_26/4,eval_main1_27/4,eval_main1_5/3,eval_main1_6/4,eval_main1_7/4,eval_main1_8/4,eval_main1_9/4,eval_main1_bb3_in/3]
4. non_recursive  : [eval_main1_41/1]
5. non_recursive  : [eval_main1_40/1]
6. non_recursive  : [eval_main1_39/1]
7. recursive  : [eval_main1_50/7,eval_main1_51/7,eval_main1_bb12_in/4]
8. non_recursive  : [eval_main1_bb15_in/1]
9. non_recursive  : [eval_main1_54/1]
10. non_recursive  : [eval_main1_53/1]
11. non_recursive  : [loop_cont_eval_main1_bb12_in/2]
12. non_recursive  : [eval_main1_38/2]
13. non_recursive  : [eval_main1_37/2]
14. non_recursive  : [eval_main1_36/2]
15. non_recursive  : [eval_main1_35/2]
16. non_recursive  : [eval_main1_bb8_in/2]
17. non_recursive  : [eval_main1_34/2]
18. non_recursive  : [eval_main1_33/2]
19. non_recursive  : [eval_main1_32/2]
20. non_recursive  : [eval_main1_31/2]
21. non_recursive  : [eval_main1__critedge_in/2]
22. non_recursive  : [loop_cont_eval_main1_bb3_in/3]
23. non_recursive  : [eval_main1_4/1]
24. non_recursive  : [eval_main1_3/1]
25. non_recursive  : [eval_main1_bb0_in/1]
26. non_recursive  : [eval_main1_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_main1_bb3_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_main1_bb12_in/4
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_main1_38/2
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_main1_36/2
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_main1_32/2
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_main1_4/1
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_main1_bb0_in/1
26. SCC is partially evaluated into eval_main1_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb3_in/3 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 


#### Refined cost equations eval_main1_bb3_in/3 
* CE 17: eval_main1_bb3_in(V_count_0,B,C) = 1+ eval_main1_bb3_in(D,E,C)
     [V_count_0>=0,V_count_0+1=D,E=2,B=2] 
* CE 18: eval_main1_bb3_in(A,B,A) = 0
     [A>=0,B=2] 

### Cost equations --> "Loop" of eval_main1_bb3_in/3 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of eval_main1_bb3_in/3 
* Loop 11: eval_main1_bb3_in(A,B,A) [A>=0,B=2] 
* Loop 12: eval_main1_bb3_in(V_count_0,B,C)->  eval_main1_bb3_in(V_count_0',B',C)
                  [V_count_0>=0,V_count_0+1=V_count_0',B'=2,B=2] 

### Ranking functions of CR eval_main1_bb3_in(V_count_0,B,C) 

#### Partial ranking functions of CR eval_main1_bb3_in(V_count_0,B,C) 


### Resulting Chains:eval_main1_bb3_in(V_count_0,B,C) 
* [[12]]...
* [[12],11]
* [11]


### Merging Chains  eval_main1_bb3_in/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations eval_main1_bb12_in/4 
* CE 16 is refined into CE [19] 
* CE 15 is refined into CE [20] 


#### Refined cost equations eval_main1_bb12_in/4 
* CE 19: eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) = 0
     [100*V_60+99>=V_count_0,V_i_0>=V_count_0,V_count_0+99>=100*V_60,B=3] 
* CE 20: eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) = 1+ eval_main1_bb12_in(V_count_0,V_60,C,D)
     [V_count_0>=V_i_0+1,100*V_60+99>=V_count_0,V_count_0+99>=100*V_60,V_60+V_i_0=C,D=3,B=3] 

### Cost equations --> "Loop" of eval_main1_bb12_in/4 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of eval_main1_bb12_in/4 
* Loop 13: eval_main1_bb12_in(V_count_0,V_60,V_i_0,B)->  eval_main1_bb12_in(V_count_0,V_60,V_i_0',B')
                  [V_count_0>=V_i_0+1,100*V_60+99>=V_count_0,V_count_0+99>=100*V_60,V_60+V_i_0=V_i_0',B'=3,B=3] 
* Loop 14: eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) [100*V_60+99>=V_count_0,V_i_0>=V_count_0,V_count_0+99>=100*V_60,B=3] 

### Ranking functions of CR eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) 

#### Partial ranking functions of CR eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) 


### Resulting Chains:eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) 
* [[13]]...
* [[13],14]
* [14]


### Merging Chains  eval_main1_bb12_in/4 into  External patterns of execution 
* [[14,[13]]] --> 1 
* [[14]] --> 2 
* [[[13]]] --> 3 


### Specialization of cost equations eval_main1_38/2 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 13 is refined into CE [23,24] 
* CE 14 is refined into CE [25] 


#### Refined cost equations eval_main1_38/2 
* CE 21: eval_main1_38(V_count_0,B) = 0
     [] 
* CE 22: eval_main1_38(V_count_0,B) = 1+ eval_main1_bb12_in(C,D,E,F):2
     [F=3,E=0,D=0,C=0,V_count_0=0] 
* CE 23: eval_main1_38(V_count_0,B) = 1+ eval_main1_bb12_in(V_count_0,C,D,E):1
     [100*C+99>=V_count_0,V_count_0>=100*C,C>=1,E=3,D=0] 
* CE 24: eval_main1_38(V_count_0,B) = 1+ eval_main1_bb12_in(V_count_0,C,D,E):3
     [100*C+99>=V_count_0,V_count_0>=100*C,C>=0,V_count_0>=1,E=3,D=0] 
* CE 25: eval_main1_38(V_count_0,B) = 1+ eval_main1_bb12_in(V_count_0,C,D,E):2
     [100*C>=V_count_0,V_count_0+99>=100*C,0>=C,0>=V_count_0+1,E=3,D=0] 

### Cost equations --> "Loop" of eval_main1_38/2 
* CEs [21,22,23,25] --> Loop 15 
* CEs [24] --> Loop 16 

#### Loops of eval_main1_38/2 
* Loop 15: eval_main1_38(V_count_0,B) [] 
* Loop 16: eval_main1_38(V_count_0,B) [V_count_0>=1] 

### Ranking functions of CR eval_main1_38(V_count_0,B) 

#### Partial ranking functions of CR eval_main1_38(V_count_0,B) 


### Resulting Chains:eval_main1_38(V_count_0,B) 
* [16]...
* [15]


### Merging Chains  eval_main1_38/2 into  External patterns of execution 
* [[15]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_main1_36/2 
* CE 9 is refined into CE [26,27] 
* CE 10 is refined into CE [28] 


#### Refined cost equations eval_main1_36/2 
* CE 26: eval_main1_36(V_count_0,B) = 0+ eval_main1_38(V_count_0,B):1
     [] 
* CE 27: eval_main1_36(V_count_0,B) = 0+ eval_main1_38(V_count_0,B):2
     [V_count_0>=1] 
* CE 28: eval_main1_36(V_count_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_36/2 
* CEs [26,28] --> Loop 17 
* CEs [27] --> Loop 18 

#### Loops of eval_main1_36/2 
* Loop 17: eval_main1_36(V_count_0,B) [] 
* Loop 18: eval_main1_36(V_count_0,B) [V_count_0>=1] 

### Ranking functions of CR eval_main1_36(V_count_0,B) 

#### Partial ranking functions of CR eval_main1_36(V_count_0,B) 


### Resulting Chains:eval_main1_36(V_count_0,B) 
* [18]...
* [17]


### Merging Chains  eval_main1_36/2 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_main1_32/2 
* CE 8 is refined into CE [29,30] 


#### Refined cost equations eval_main1_32/2 
* CE 29: eval_main1_32(V_count_0,B) = 0+ eval_main1_36(V_count_0,B):1
     [] 
* CE 30: eval_main1_32(V_count_0,B) = 0+ eval_main1_36(V_count_0,B):2
     [V_count_0>=1] 

### Cost equations --> "Loop" of eval_main1_32/2 
* CEs [30] --> Loop 19 
* CEs [29] --> Loop 20 

#### Loops of eval_main1_32/2 
* Loop 19: eval_main1_32(V_count_0,B) [V_count_0>=1] 
* Loop 20: eval_main1_32(V_count_0,B) [] 

### Ranking functions of CR eval_main1_32(V_count_0,B) 

#### Partial ranking functions of CR eval_main1_32(V_count_0,B) 


### Resulting Chains:eval_main1_32(V_count_0,B) 
* [20]
* [19]...


### Merging Chains  eval_main1_32/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_main1_4/1 
* CE 5 is refined into CE [31,32,33,34] 


#### Refined cost equations eval_main1_4/1 
* CE 31: eval_main1_4(B) = 1+ eval_main1_bb3_in(C,D,E):1+ eval_main1_32(F,B):1
     [F=0,E=0,D=2,C=0] 
* CE 32: eval_main1_4(B) = 1+ eval_main1_bb3_in(C,D,E):2+ eval_main1_32(E,B):1
     [E>=1,D=2,C=0] 
* CE 33: eval_main1_4(B) = 1+ eval_main1_bb3_in(C,D,E):2+ eval_main1_32(E,B):2
     [E>=1,D=2,C=0] 
* CE 34: eval_main1_4(B) = 1+ eval_main1_bb3_in(C,D,E):3
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_main1_4/1 
* CEs [33,34] --> Loop 21 
* CEs [31,32] --> Loop 22 

#### Loops of eval_main1_4/1 
* Loop 21: eval_main1_4(B) [] 
* Loop 22: eval_main1_4(B) [] 

### Ranking functions of CR eval_main1_4(B) 

#### Partial ranking functions of CR eval_main1_4(B) 


### Resulting Chains:eval_main1_4(B) 
* [22]
* [21]...


### Merging Chains  eval_main1_4/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_main1_bb0_in/1 
* CE 3 is refined into CE [35] 
* CE 4 is refined into CE [36,37] 


#### Refined cost equations eval_main1_bb0_in/1 
* CE 35: eval_main1_bb0_in(B) = 0
     [] 
* CE 36: eval_main1_bb0_in(B) = 0+ eval_main1_4(B):1
     [] 
* CE 37: eval_main1_bb0_in(B) = 0+ eval_main1_4(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_bb0_in/1 
* CEs [37] --> Loop 23 
* CEs [35,36] --> Loop 24 

#### Loops of eval_main1_bb0_in/1 
* Loop 23: eval_main1_bb0_in(B) [] 
* Loop 24: eval_main1_bb0_in(B) [] 

### Ranking functions of CR eval_main1_bb0_in(B) 

#### Partial ranking functions of CR eval_main1_bb0_in(B) 


### Resulting Chains:eval_main1_bb0_in(B) 
* [24]
* [23]...


### Merging Chains  eval_main1_bb0_in/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_main1_start/3 
* CE 2 is refined into CE [38,39] 


#### Refined cost equations eval_main1_start/3 
* CE 38: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(B):1
     [] 
* CE 39: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_start/3 
* CEs [39] --> Loop 25 
* CEs [38] --> Loop 26 

#### Loops of eval_main1_start/3 
* Loop 25: eval_main1_start(V_argc,V_print,B) [] 
* Loop 26: eval_main1_start(V_argc,V_print,B) [] 

### Ranking functions of CR eval_main1_start(V_argc,V_print,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,V_print,B) 


### Resulting Chains:eval_main1_start(V_argc,V_print,B) 
* [26]
* [25]...


### Merging Chains  eval_main1_start/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_main1_bb3_in(V_count_0,B,C) -> [eval_main1_bb3_in(V_count_0',B',C')] 
1
#### Cost of phase [12]:eval_main1_bb3_in(V_count_0,B,C) -> [eval_main1_bb3_in(V_count_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_main1_bb3_in(V_count_0,B,C) -> [eval_main1_bb3_in(V_count_0',B',C')] 
1*it(12)+0
#### Cost of chains of eval_main1_bb3_in(V_count_0,B,C):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_count_0>=0,B=2] 

* Chain [[12],11]: 1*it(12)+0
  with precondition: [B=2,V_count_0>=0,C>=V_count_0+1] 

* Chain [11]: 0
  with precondition: [B=2,V_count_0=C,V_count_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) -> [eval_main1_bb12_in(V_count_0',V_60',V_i_0',B')] 
1
#### Cost of phase [13]:eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) -> [eval_main1_bb12_in(V_count_0',V_60',V_i_0',B')] 
1*it(13)+0
#### Cost of phase [13]:eval_main1_bb12_in(V_count_0,V_60,V_i_0,B) -> [eval_main1_bb12_in(V_count_0',V_60',V_i_0',B')] 
1*it(13)+0
#### Cost of chains of eval_main1_bb12_in(V_count_0,V_60,V_i_0,B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V_count_0+99>=100*V_60,V_count_0>=V_i_0+1,100*V_60+99>=V_count_0,B=3] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3,V_60>=1,V_count_0+99>=100*V_60,100*V_60+99>=V_count_0,V_count_0>=V_i_0+1] 

* Chain [14]: 0
  with precondition: [B=3,V_count_0+99>=100*V_60,V_i_0>=V_count_0,100*V_60+99>=V_count_0] 


#### Cost of chains of eval_main1_38(V_count_0,B):
* Chain [16]...: 1*s(1)+1
  with precondition: [V_count_0>=1] 

* Chain [15]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_main1_36(V_count_0,B):
* Chain [18]...: 1*s(3)+1
  with precondition: [V_count_0>=1] 

* Chain [17]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_main1_32(V_count_0,B):
* Chain [20]: 1*s(5)+0
  with precondition: [] 

* Chain [19]...: 1*s(6)+1
  with precondition: [V_count_0>=1] 


#### Cost of chains of eval_main1_4(B):
* Chain [22]: 1*aux(3)+0
  with precondition: [] 

* Chain [21]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_main1_bb0_in(B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 

* Chain [23]...: 1*s(14)+0
  with precondition: [] 


#### Cost of chains of eval_main1_start(V_argc,V_print,B):
* Chain [26]: 1*s(15)+0
  with precondition: [] 

* Chain [25]...: 1*s(16)+0
  with precondition: [] 


Closed-form bounds of eval_main1_start(V_argc,V_print,B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main1_start(V_argc,V_print,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 29 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 20 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 139 ms.

