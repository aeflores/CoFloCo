WARNING: Excluded non-linear constraints:[H=E*F,I=A*G]
Warning: Ignored call to eval_pre_process_data_stop/1 in equation eval_pre_process_data__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_pre_process_data_34/10,eval_pre_process_data_35/10,eval_pre_process_data_bb5_in/7]
1. recursive  : [eval_pre_process_data_13/5,eval_pre_process_data_14/5,eval_pre_process_data_44/6,eval_pre_process_data_45/6,eval_pre_process_data_bb10_in/6,eval_pre_process_data_bb1_in/5,eval_pre_process_data_bb8_in/6,loop_cont_eval_pre_process_data_bb5_in/7]
2. non_recursive  : [eval_pre_process_data__critedge_in/1]
3. recursive  : [eval_pre_process_data_64/6,eval_pre_process_data_65/6,eval_pre_process_data_bb13_in/3]
4. non_recursive  : [loop_cont_eval_pre_process_data_bb13_in/2]
5. non_recursive  : [loop_cont_eval_pre_process_data_bb1_in/4]
6. non_recursive  : [eval_pre_process_data_bb0_in/3]
7. non_recursive  : [eval_pre_process_data_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_pre_process_data_bb5_in/7
1. SCC is partially evaluated into eval_pre_process_data_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_pre_process_data_bb13_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_pre_process_data_bb1_in/4
6. SCC is partially evaluated into eval_pre_process_data_bb0_in/3
7. SCC is partially evaluated into eval_pre_process_data_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pre_process_data_bb5_in/7 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations eval_pre_process_data_bb5_in/7 
* CE 15: eval_pre_process_data_bb5_in(A,B,C,D,A,B,C) = 0
     [C>=0,D=2] 
* CE 16: eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) = 1+ eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,F,G,C,D,E)
     [V_ci_0>=0,V_ci_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_pre_process_data_bb5_in/7 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_pre_process_data_bb5_in/7 
* Loop 12: eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E)->  eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0',B',C,D,E)
                  [V_ci_0>=0,V_ci_0+1=V_ci_0',B'=2,B=2] 
* Loop 13: eval_pre_process_data_bb5_in(A,B,C,D,A,B,C) [C>=0,D=2] 

### Ranking functions of CR eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) 

#### Partial ranking functions of CR eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) 


### Resulting Chains:eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) 
* [[12]]...
* [[12],13]
* [13]


### Merging Chains  eval_pre_process_data_bb5_in/7 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations eval_pre_process_data_bb1_in/5 
* CE 8 is refined into CE [17] 
* CE 4 is refined into CE [18] 
* CE 5 is refined into CE [19,20,21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23,24,25] 


#### Refined cost equations eval_pre_process_data_bb1_in/5 
* CE 17: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 0
     [B=4] 
* CE 18: eval_pre_process_data_bb1_in(A,B,C,B,D) = 0
     [D=0,C=3] 
* CE 19: eval_pre_process_data_bb1_in(A,B,C,B,D) = 1+ eval_pre_process_data_bb5_in(A,B,E,F,A,B,G):1
     [G=0,F=2,E=0,D=0,C=3] 
* CE 20: eval_pre_process_data_bb1_in(A,B,C,B,D) = 1+ eval_pre_process_data_bb5_in(A,B,E,F,A,B,G):2
     [G>=1,F=2,E=0,D=0,C=3] 
* CE 21: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 1+ eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,E,F,G,C,H):3
     [F=2,E=0,D=0,B=3] 
* CE 22: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D)
     [] 
* CE 23: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 2+ eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,E,F,V_in_rows_avail,V_out_row_groups_avail,G):1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D)
     [G=0,F=2,E=0] 
* CE 24: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 2+ eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,E,F,V_in_rows_avail,V_out_row_groups_avail,G):2+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D)
     [G>=1,F=2,E=0] 
* CE 25: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) = 2+ eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,E,F,G,H,I):3
     [F=2,E=0] 

### Cost equations --> "Loop" of eval_pre_process_data_bb1_in/5 
* CEs [21,25] --> Loop 14 
* CEs [22,23,24] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18,19,20] --> Loop 17 

#### Loops of eval_pre_process_data_bb1_in/5 
* Loop 14: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) [] 
* Loop 15: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D)->  eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D)
                  [] 
* Loop 16: eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) [B=4] 
* Loop 17: eval_pre_process_data_bb1_in(A,B,C,B,D) [D=0,C=3] 

### Ranking functions of CR eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) 

#### Partial ranking functions of CR eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) 


### Resulting Chains:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) 
* [[15]]...
* [[15],17]
* [[15],16]
* [[15],14]...
* [17]
* [16]
* [14]...


### Merging Chains  eval_pre_process_data_bb1_in/5 into  External patterns of execution 
* [[17],[17,[15]]] --> 1 
* [[16],[16,[15]]] --> 2 
* [[14],[[15]],[14,[15]]] --> 3 


### Specialization of cost equations eval_pre_process_data_bb13_in/3 
* CE 14 is refined into CE [26] 
* CE 13 is refined into CE [27] 


#### Refined cost equations eval_pre_process_data_bb13_in/3 
* CE 26: eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) = 0
     [B=4] 
* CE 27: eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) = 1+ eval_pre_process_data_bb13_in(V_out_row_groups_avail,C,D)
     [C=V_ci_1+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_pre_process_data_bb13_in/3 
* CEs [27] --> Loop 18 
* CEs [26] --> Loop 19 

#### Loops of eval_pre_process_data_bb13_in/3 
* Loop 18: eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B)->  eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1',B')
                  [V_ci_1+1=V_ci_1',B'=4,B=4] 
* Loop 19: eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) [B=4] 

### Ranking functions of CR eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) 

#### Partial ranking functions of CR eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) 


### Resulting Chains:eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) 
* [[18]]...
* [[18],19]
* [19]


### Merging Chains  eval_pre_process_data_bb13_in/3 into  External patterns of execution 
* [[19],[19,[18]]] --> 1 
* [[[18]]] --> 2 


### Specialization of cost equations loop_cont_eval_pre_process_data_bb1_in/4 
* CE 10 is refined into CE [28] 
* CE 9 is refined into CE [29,30] 


#### Refined cost equations loop_cont_eval_pre_process_data_bb1_in/4 
* CE 28: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) = 0
     [E=4] 
* CE 29: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) = 1+ eval_pre_process_data_bb13_in(A,B,F):1
     [F=4,E=3] 
* CE 30: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) = 1+ eval_pre_process_data_bb13_in(A,B,F):2
     [F=4,E=3] 

### Cost equations --> "Loop" of loop_cont_eval_pre_process_data_bb1_in/4 
* CEs [30] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of loop_cont_eval_pre_process_data_bb1_in/4 
* Loop 20: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) [E=3] 
* Loop 21: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) [E=4] 
* Loop 22: loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) [E=3] 

### Ranking functions of CR loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) 


### Resulting Chains:loop_cont_eval_pre_process_data_bb1_in(E,A,B,C) 
* [22]
* [21]
* [20]...


### Merging Chains  loop_cont_eval_pre_process_data_bb1_in/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 


### Specialization of cost equations eval_pre_process_data_bb0_in/3 
* CE 3 is refined into CE [31,32,33,34] 


#### Refined cost equations eval_pre_process_data_bb0_in/3 
* CE 31: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) = 1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,C,V_out_row_groups_avail,D):1+ loop_cont_eval_pre_process_data_bb1_in(E,V_out_row_groups_avail,F,B):1
     [F=0,E=3,D=0,C=3] 
* CE 32: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) = 1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,C,V_out_row_groups_avail,D):1+ loop_cont_eval_pre_process_data_bb1_in(E,V_out_row_groups_avail,F,B):3
     [F=0,E=3,D=0,C=3] 
* CE 33: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) = 1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,C,D,E):2+ loop_cont_eval_pre_process_data_bb1_in(F,D,E,B):2
     [F=4,C=4] 
* CE 34: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) = 1+ eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,C,D,E):3
     [] 

### Cost equations --> "Loop" of eval_pre_process_data_bb0_in/3 
* CEs [32,34] --> Loop 23 
* CEs [31,33] --> Loop 24 

#### Loops of eval_pre_process_data_bb0_in/3 
* Loop 23: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) [] 
* Loop 24: eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) [] 

### Ranking functions of CR eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) 

#### Partial ranking functions of CR eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) 


### Resulting Chains:eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B) 
* [24]
* [23]...


### Merging Chains  eval_pre_process_data_bb0_in/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_pre_process_data_start/3 
* CE 2 is refined into CE [35,36] 


#### Refined cost equations eval_pre_process_data_start/3 
* CE 35: eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) = 0+ eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B):1
     [] 
* CE 36: eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) = 0+ eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B):2
     [] 

### Cost equations --> "Loop" of eval_pre_process_data_start/3 
* CEs [36] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of eval_pre_process_data_start/3 
* Loop 25: eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) [] 
* Loop 26: eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) [] 

### Ranking functions of CR eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) 

#### Partial ranking functions of CR eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) 


### Resulting Chains:eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B) 
* [26]
* [25]...


### Merging Chains  eval_pre_process_data_start/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) -> [eval_pre_process_data_bb5_in(V_in_rows_avail',V_out_row_groups_avail',V_ci_0',B',C',D',E')] 
1
#### Cost of phase [12]:eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) -> [eval_pre_process_data_bb5_in(V_in_rows_avail',V_out_row_groups_avail',V_ci_0',B',C',D',E')] 
1*it(12)+0
#### Cost of phase [12]:eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E) -> [eval_pre_process_data_bb5_in(V_in_rows_avail',V_out_row_groups_avail',V_ci_0',B',C',D',E')] 
1*it(12)+0
#### Cost of chains of eval_pre_process_data_bb5_in(V_in_rows_avail,V_out_row_groups_avail,V_ci_0,B,C,D,E):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_ci_0>=0,B=2] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=2,V_in_rows_avail=C,V_out_row_groups_avail=D,V_ci_0>=0,E>=V_ci_0+1] 

* Chain [13]: 0
  with precondition: [B=2,C=V_in_rows_avail,D=V_out_row_groups_avail,V_ci_0=E,V_ci_0>=0] 


#### Cost of loops [15] 

 * loop 15:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) -> [eval_pre_process_data_bb1_in(V_in_rows_avail',V_out_row_groups_avail',B',C',D')] 
1*s(2)+0
#### Cost of phase [15]:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) -> [eval_pre_process_data_bb1_in(V_in_rows_avail',V_out_row_groups_avail',B',C',D')] 
1*s(3)+0
#### Cost of phase [15]:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) -> [eval_pre_process_data_bb1_in(V_in_rows_avail',V_out_row_groups_avail',B',C',D')] 
1*s(3)+0
#### Cost of phase [15]:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) -> [eval_pre_process_data_bb1_in(V_in_rows_avail',V_out_row_groups_avail',B',C',D')] 
1*s(3)+0
#### Cost of phase [15]:eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D) -> [eval_pre_process_data_bb1_in(V_in_rows_avail',V_out_row_groups_avail',B',C',D')] 
1*s(3)+0
#### Cost of chains of eval_pre_process_data_bb1_in(V_in_rows_avail,V_out_row_groups_avail,B,C,D):
* Chain [[15]]...: 1*s(3)+0
  with precondition: [] 

* Chain [[15],17]: 2*aux(2)+0
  with precondition: [B=3,D=0,V_out_row_groups_avail=C] 

* Chain [[15],16]: 1*s(3)+0
  with precondition: [B=4] 

* Chain [[15],14]...: 2*aux(3)+0
  with precondition: [] 

* Chain [17]: 1*aux(2)+0
  with precondition: [B=3,D=0,C=V_out_row_groups_avail] 

* Chain [16]: 0
  with precondition: [B=4] 

* Chain [14]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of loops [18] 

 * loop 18:eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) -> [eval_pre_process_data_bb13_in(V_out_row_groups_avail',V_ci_1',B')] 
1
#### Cost of phase [18]:eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) -> [eval_pre_process_data_bb13_in(V_out_row_groups_avail',V_ci_1',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B) -> [eval_pre_process_data_bb13_in(V_out_row_groups_avail',V_ci_1',B')] 
1*it(18)+0
#### Cost of chains of eval_pre_process_data_bb13_in(V_out_row_groups_avail,V_ci_1,B):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [B=4] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=4] 

* Chain [19]: 0
  with precondition: [B=4] 


#### Cost of chains of loop_cont_eval_pre_process_data_bb1_in(E,A,B,C):
* Chain [22]: 1*s(14)+1
  with precondition: [E=3] 

* Chain [21]: 0
  with precondition: [E=4] 

* Chain [20]...: 1*s(15)+1
  with precondition: [E=3] 


#### Cost of chains of eval_pre_process_data_bb0_in(V_in_rows_avail,V_out_row_groups_avail,B):
* Chain [24]: 1*aux(8)+0
  with precondition: [] 

* Chain [23]...: 1*aux(9)+0
  with precondition: [] 


#### Cost of chains of eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B):
* Chain [26]: 1*s(22)+0
  with precondition: [] 

* Chain [25]...: 1*s(23)+0
  with precondition: [] 


Closed-form bounds of eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_pre_process_data_start(V_in_rows_avail,V_out_row_groups_avail,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 42 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 148 ms.

