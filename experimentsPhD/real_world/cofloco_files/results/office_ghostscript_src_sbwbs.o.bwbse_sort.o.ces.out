Warning: Ignored call to eval_bwbse_sort_stop/1 in equation loop_cont_eval_bwbse_sort_bb10_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bwbse_sort_bb1_in/5]
1. recursive  : [eval_bwbse_sort_bb4_in/5]
2. recursive  : [eval_bwbse_sort_bb7_in/5]
3. recursive  : [eval_bwbse_sort_35/4,eval_bwbse_sort_36/4,eval_bwbse_sort_bb10_in/3]
4. non_recursive  : [loop_cont_eval_bwbse_sort_bb10_in/2]
5. non_recursive  : [loop_cont_eval_bwbse_sort_bb7_in/4]
6. non_recursive  : [loop_cont_eval_bwbse_sort_bb4_in/4]
7. non_recursive  : [loop_cont_eval_bwbse_sort_bb1_in/4]
8. non_recursive  : [eval_bwbse_sort_1/2]
9. non_recursive  : [eval_bwbse_sort_0/2]
10. non_recursive  : [eval_bwbse_sort_bb0_in/2]
11. non_recursive  : [eval_bwbse_sort_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bwbse_sort_bb1_in/5
1. SCC is partially evaluated into eval_bwbse_sort_bb4_in/5
2. SCC is partially evaluated into eval_bwbse_sort_bb7_in/5
3. SCC is partially evaluated into eval_bwbse_sort_bb10_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_bwbse_sort_bb7_in/4
6. SCC is partially evaluated into loop_cont_eval_bwbse_sort_bb4_in/4
7. SCC is partially evaluated into loop_cont_eval_bwbse_sort_bb1_in/4
8. SCC is partially evaluated into eval_bwbse_sort_1/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_bwbse_sort_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bwbse_sort_bb1_in/5 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16] 


#### Refined cost equations eval_bwbse_sort_bb1_in/5 
* CE 15: eval_bwbse_sort_bb1_in(A,B,C,A,D) = 0
     [B>=A,B>=0,D=0,C=4] 
* CE 16: eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) = 1+ eval_bwbse_sort_bb1_in(V_N,E,B,C,D)
     [V_N>=V_j_0+1,V_j_0>=0,V_j_0+1=E] 

### Cost equations --> "Loop" of eval_bwbse_sort_bb1_in/5 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_bwbse_sort_bb1_in/5 
* Loop 14: eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D)->  eval_bwbse_sort_bb1_in(V_N,V_j_0',B,C,D)
                  [V_N>=V_j_0+1,V_j_0>=0,V_j_0+1=V_j_0'] 
* Loop 15: eval_bwbse_sort_bb1_in(A,B,C,A,D) [B>=A,B>=0,D=0,C=4] 

### Ranking functions of CR eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) 
* RF of phase [14]: [V_N-V_j_0]

#### Partial ranking functions of CR eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_N-V_j_0


### Resulting Chains:eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) 
* [[14],15]
* [15]


### Merging Chains  eval_bwbse_sort_bb1_in/5 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[14]]] --> 2 


### Specialization of cost equations eval_bwbse_sort_bb4_in/5 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eval_bwbse_sort_bb4_in/5 
* CE 17: eval_bwbse_sort_bb4_in(A,B,C,A,D) = 0
     [B>=256,D=0,C=3] 
* CE 18: eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) = 1+ eval_bwbse_sort_bb4_in(V_N,E,B,C,D)
     [255>=V_ch_0,V_ch_0+1=E] 

### Cost equations --> "Loop" of eval_bwbse_sort_bb4_in/5 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_bwbse_sort_bb4_in/5 
* Loop 16: eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D)->  eval_bwbse_sort_bb4_in(V_N,V_ch_0',B,C,D)
                  [255>=V_ch_0,V_ch_0+1=V_ch_0'] 
* Loop 17: eval_bwbse_sort_bb4_in(A,B,C,A,D) [B>=256,D=0,C=3] 

### Ranking functions of CR eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) 
* RF of phase [16]: [-V_ch_0+256]

#### Partial ranking functions of CR eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -V_ch_0+256


### Resulting Chains:eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) 
* [[16],17]
* [17]


### Merging Chains  eval_bwbse_sort_bb4_in/5 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_bwbse_sort_bb7_in/5 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations eval_bwbse_sort_bb7_in/5 
* CE 19: eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) = 0
     [V_j_1>=V_N,D=0,C=0,B=2] 
* CE 20: eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) = 1+ eval_bwbse_sort_bb7_in(V_N,E,B,C,D)
     [V_N>=V_j_1+1,V_j_1+1=E] 

### Cost equations --> "Loop" of eval_bwbse_sort_bb7_in/5 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_bwbse_sort_bb7_in/5 
* Loop 18: eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D)->  eval_bwbse_sort_bb7_in(V_N,V_j_1',B,C,D)
                  [V_N>=V_j_1+1,V_j_1+1=V_j_1'] 
* Loop 19: eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) [V_j_1>=V_N,D=0,C=0,B=2] 

### Ranking functions of CR eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) 
* RF of phase [18]: [V_N-V_j_1]

#### Partial ranking functions of CR eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_N-V_j_1


### Resulting Chains:eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) 
* [[18],19]
* [19]


### Merging Chains  eval_bwbse_sort_bb7_in/5 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[18]]] --> 2 


### Specialization of cost equations eval_bwbse_sort_bb10_in/3 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 


#### Refined cost equations eval_bwbse_sort_bb10_in/3 
* CE 21: eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) = 0
     [V_ch_1>=256,B=5] 
* CE 22: eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) = 1+ eval_bwbse_sort_bb10_in(C,D,E)
     [255>=V_ch_1,V_ch_1+1=C,E=5,B=5] 

### Cost equations --> "Loop" of eval_bwbse_sort_bb10_in/3 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of eval_bwbse_sort_bb10_in/3 
* Loop 20: eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B)->  eval_bwbse_sort_bb10_in(V_ch_1',V_sum_1',B')
                  [255>=V_ch_1,V_ch_1+1=V_ch_1',B'=5,B=5] 
* Loop 21: eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) [V_ch_1>=256,B=5] 

### Ranking functions of CR eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) 
* RF of phase [20]: [-V_ch_1+256]

#### Partial ranking functions of CR eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -V_ch_1+256


### Resulting Chains:eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) 
* [[20],21]
* [21]


### Merging Chains  eval_bwbse_sort_bb10_in/3 into  External patterns of execution 
* [[21,[20]]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations loop_cont_eval_bwbse_sort_bb7_in/4 
* CE 12 is refined into CE [23,24] 


#### Refined cost equations loop_cont_eval_bwbse_sort_bb7_in/4 
* CE 23: loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) = 1+ eval_bwbse_sort_bb10_in(A,B,H):1
     [255>=A,H=5,G=2] 
* CE 24: loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) = 1+ eval_bwbse_sort_bb10_in(A,B,H):2
     [A>=256,H=5,G=2] 

### Cost equations --> "Loop" of loop_cont_eval_bwbse_sort_bb7_in/4 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of loop_cont_eval_bwbse_sort_bb7_in/4 
* Loop 22: loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) [A>=256,G=2] 
* Loop 23: loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) [255>=A,G=2] 

### Ranking functions of CR loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C) 
* [23]
* [22]


### Merging Chains  loop_cont_eval_bwbse_sort_bb7_in/4 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations loop_cont_eval_bwbse_sort_bb4_in/4 
* CE 9 is refined into CE [25,26] 


#### Refined cost equations loop_cont_eval_bwbse_sort_bb4_in/4 
* CE 25: loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) = 1+ eval_bwbse_sort_bb7_in(A,B,I,J,K):1+ loop_cont_eval_bwbse_sort_bb7_in(L,M,N,C):1
     [B>=A,N=0,M=0,L=2,K=0,J=0,I=2,H=3] 
* CE 26: loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) = 1+ eval_bwbse_sort_bb7_in(A,B,I,J,K):2+ loop_cont_eval_bwbse_sort_bb7_in(L,M,N,C):1
     [A>=B+1,N=0,M=0,L=2,K=0,J=0,I=2,H=3] 

### Cost equations --> "Loop" of loop_cont_eval_bwbse_sort_bb4_in/4 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of loop_cont_eval_bwbse_sort_bb4_in/4 
* Loop 24: loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) [A>=B+1,H=3] 
* Loop 25: loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) [B>=A,H=3] 

### Ranking functions of CR loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) 


### Resulting Chains:loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C) 
* [25]
* [24]


### Merging Chains  loop_cont_eval_bwbse_sort_bb4_in/4 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations loop_cont_eval_bwbse_sort_bb1_in/4 
* CE 6 is refined into CE [27,28,29,30] 


#### Refined cost equations loop_cont_eval_bwbse_sort_bb1_in/4 
* CE 27: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) = 1+ eval_bwbse_sort_bb4_in(A,B,J,A,K):1+ loop_cont_eval_bwbse_sort_bb4_in(L,A,M,C):1
     [B>=256,0>=A,M=0,L=3,K=0,J=3,I=4] 
* CE 28: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) = 1+ eval_bwbse_sort_bb4_in(A,B,J,A,K):1+ loop_cont_eval_bwbse_sort_bb4_in(L,A,M,C):2
     [A>=1,B>=256,M=0,L=3,K=0,J=3,I=4] 
* CE 29: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) = 1+ eval_bwbse_sort_bb4_in(A,B,J,A,K):2+ loop_cont_eval_bwbse_sort_bb4_in(L,A,M,C):1
     [0>=A,255>=B,M=0,L=3,K=0,J=3,I=4] 
* CE 30: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) = 1+ eval_bwbse_sort_bb4_in(A,B,J,A,K):2+ loop_cont_eval_bwbse_sort_bb4_in(L,A,M,C):2
     [A>=1,255>=B,M=0,L=3,K=0,J=3,I=4] 

### Cost equations --> "Loop" of loop_cont_eval_bwbse_sort_bb1_in/4 
* CEs [28] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [29] --> Loop 29 

#### Loops of loop_cont_eval_bwbse_sort_bb1_in/4 
* Loop 26: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) [B>=256,A>=1,I=4] 
* Loop 27: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) [A>=1,255>=B,I=4] 
* Loop 28: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) [B>=256,0>=A,I=4] 
* Loop 29: loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) [255>=B,0>=A,I=4] 

### Ranking functions of CR loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) 


### Resulting Chains:loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C) 
* [29]
* [28]
* [27]
* [26]


### Merging Chains  loop_cont_eval_bwbse_sort_bb1_in/4 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 


### Specialization of cost equations eval_bwbse_sort_1/2 
* CE 3 is refined into CE [31,32] 


#### Refined cost equations eval_bwbse_sort_1/2 
* CE 31: eval_bwbse_sort_1(V_N,B) = 1+ eval_bwbse_sort_bb1_in(V_N,C,D,V_N,E):1+ loop_cont_eval_bwbse_sort_bb1_in(F,V_N,G,B):1
     [0>=V_N,G=0,F=4,E=0,D=4,C=0] 
* CE 32: eval_bwbse_sort_1(V_N,B) = 1+ eval_bwbse_sort_bb1_in(V_N,C,D,V_N,E):2+ loop_cont_eval_bwbse_sort_bb1_in(F,V_N,G,B):3
     [V_N>=1,G=0,F=4,E=0,D=4,C=0] 

### Cost equations --> "Loop" of eval_bwbse_sort_1/2 
* CEs [32] --> Loop 30 
* CEs [31] --> Loop 31 

#### Loops of eval_bwbse_sort_1/2 
* Loop 30: eval_bwbse_sort_1(V_N,B) [V_N>=1] 
* Loop 31: eval_bwbse_sort_1(V_N,B) [0>=V_N] 

### Ranking functions of CR eval_bwbse_sort_1(V_N,B) 

#### Partial ranking functions of CR eval_bwbse_sort_1(V_N,B) 


### Resulting Chains:eval_bwbse_sort_1(V_N,B) 
* [31]
* [30]


### Merging Chains  eval_bwbse_sort_1/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_bwbse_sort_start/2 
* CE 2 is refined into CE [33,34] 


#### Refined cost equations eval_bwbse_sort_start/2 
* CE 33: eval_bwbse_sort_start(V_N,B) = 0+ eval_bwbse_sort_1(V_N,B):1
     [0>=V_N] 
* CE 34: eval_bwbse_sort_start(V_N,B) = 0+ eval_bwbse_sort_1(V_N,B):2
     [V_N>=1] 

### Cost equations --> "Loop" of eval_bwbse_sort_start/2 
* CEs [34] --> Loop 32 
* CEs [33] --> Loop 33 

#### Loops of eval_bwbse_sort_start/2 
* Loop 32: eval_bwbse_sort_start(V_N,B) [V_N>=1] 
* Loop 33: eval_bwbse_sort_start(V_N,B) [0>=V_N] 

### Ranking functions of CR eval_bwbse_sort_start(V_N,B) 

#### Partial ranking functions of CR eval_bwbse_sort_start(V_N,B) 


### Resulting Chains:eval_bwbse_sort_start(V_N,B) 
* [33]
* [32]


### Merging Chains  eval_bwbse_sort_start/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) -> [eval_bwbse_sort_bb1_in(V_N',V_j_0',B',C',D')] 
1
#### Cost of phase [14]:eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D) -> [eval_bwbse_sort_bb1_in(V_N',V_j_0',B',C',D')] 
1*it(14)+0
  Such that:it(14) =< V_N-V_j_0
it(14) =< V_N-V_j_0-V_N'+V_j_0'

#### Cost of chains of eval_bwbse_sort_bb1_in(V_N,V_j_0,B,C,D):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_N-V_j_0

  with precondition: [B=4,D=0,V_N=C,V_j_0>=0,V_N>=V_j_0+1] 

* Chain [15]: 0
  with precondition: [B=4,D=0,V_N=C,V_j_0>=0,V_j_0>=V_N] 


#### Cost of loops [16] 

 * loop 16:eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) -> [eval_bwbse_sort_bb4_in(V_N',V_ch_0',B',C',D')] 
1
#### Cost of phase [16]:eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D) -> [eval_bwbse_sort_bb4_in(V_N',V_ch_0',B',C',D')] 
1*it(16)+0
  Such that:it(16) =< -V_ch_0+256
it(16) =< -V_ch_0+V_ch_0'

#### Cost of chains of eval_bwbse_sort_bb4_in(V_N,V_ch_0,B,C,D):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -V_ch_0+256

  with precondition: [B=3,D=0,V_N=C,255>=V_ch_0] 

* Chain [17]: 0
  with precondition: [B=3,D=0,C=V_N,V_ch_0>=256] 


#### Cost of loops [18] 

 * loop 18:eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) -> [eval_bwbse_sort_bb7_in(V_N',V_j_1',B',C',D')] 
1
#### Cost of phase [18]:eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D) -> [eval_bwbse_sort_bb7_in(V_N',V_j_1',B',C',D')] 
1*it(18)+0
  Such that:it(18) =< V_N-V_j_1
it(18) =< V_N-V_j_1-V_N'+V_j_1'

#### Cost of chains of eval_bwbse_sort_bb7_in(V_N,V_j_1,B,C,D):
* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V_N-V_j_1

  with precondition: [B=2,C=0,D=0,V_N>=V_j_1+1] 

* Chain [19]: 0
  with precondition: [B=2,C=0,D=0,V_j_1>=V_N] 


#### Cost of loops [20] 

 * loop 20:eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) -> [eval_bwbse_sort_bb10_in(V_ch_1',V_sum_1',B')] 
1
#### Cost of phase [20]:eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B) -> [eval_bwbse_sort_bb10_in(V_ch_1',V_sum_1',B')] 
1*it(20)+0
  Such that:it(20) =< -V_ch_1+256
it(20) =< -V_ch_1+V_ch_1'

#### Cost of chains of eval_bwbse_sort_bb10_in(V_ch_1,V_sum_1,B):
* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< -V_ch_1+256

  with precondition: [B=5,255>=V_ch_1] 

* Chain [21]: 0
  with precondition: [B=5,V_ch_1>=256] 


#### Cost of chains of loop_cont_eval_bwbse_sort_bb7_in(G,A,B,C):
* Chain [23]: 1*s(1)+1
  Such that:s(1) =< -A+256

  with precondition: [G=2,255>=A] 

* Chain [22]: 1
  with precondition: [G=2,A>=256] 


#### Cost of chains of loop_cont_eval_bwbse_sort_bb4_in(H,A,B,C):
* Chain [25]: 1*s(2)+2
  Such that:s(2) =< 256

  with precondition: [H=3,B>=A] 

* Chain [24]: 1*s(3)+1*s(4)+2
  Such that:s(4) =< 256
s(3) =< A-B

  with precondition: [H=3,A>=B+1] 


#### Cost of chains of loop_cont_eval_bwbse_sort_bb1_in(I,A,B,C):
* Chain [29]: 1*s(5)+1*s(6)+3
  Such that:s(6) =< 256
s(5) =< -B+256

  with precondition: [I=4,0>=A,255>=B] 

* Chain [28]: 1*s(7)+3
  Such that:s(7) =< 256

  with precondition: [I=4,0>=A,B>=256] 

* Chain [27]: 1*s(8)+1*s(9)+1*s(10)+3
  Such that:s(9) =< 256
s(10) =< A
s(8) =< -B+256

  with precondition: [I=4,255>=B,A>=1] 

* Chain [26]: 1*s(11)+1*s(12)+3
  Such that:s(11) =< 256
s(12) =< A

  with precondition: [I=4,A>=1,B>=256] 


#### Cost of chains of eval_bwbse_sort_1(V_N,B):
* Chain [31]: 2*s(13)+4
  Such that:aux(1) =< 256
s(13) =< aux(1)

  with precondition: [0>=V_N] 

* Chain [30]: 2*s(15)+2*s(16)+4
  Such that:aux(2) =< 256
aux(3) =< V_N
s(16) =< aux(2)
s(15) =< aux(3)

  with precondition: [V_N>=1] 


#### Cost of chains of eval_bwbse_sort_start(V_N,B):
* Chain [33]: 2*s(20)+4
  Such that:s(19) =< 256
s(20) =< s(19)

  with precondition: [0>=V_N] 

* Chain [32]: 2*s(23)+2*s(24)+4
  Such that:s(21) =< 256
s(22) =< V_N
s(23) =< s(21)
s(24) =< s(22)

  with precondition: [V_N>=1] 


Closed-form bounds of eval_bwbse_sort_start(V_N,B): 
-------------------------------------
* Chain [33] with precondition: [0>=V_N] 
    - Upper bound: 516 
    - Complexity: constant 
* Chain [32] with precondition: [V_N>=1] 
    - Upper bound: 2*V_N+516 
    - Complexity: n 

### Maximum cost of eval_bwbse_sort_start(V_N,B): nat(V_N)*2+516 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 56 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 161 ms.

