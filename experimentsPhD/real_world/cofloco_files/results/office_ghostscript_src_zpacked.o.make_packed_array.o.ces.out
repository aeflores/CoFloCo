Warning: Ignored call to eval_make_packed_array_stop/1 in equation eval_make_packed_array_bb51_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_make_packed_array_17/10,eval_make_packed_array_18/10,eval_make_packed_array_32/10,eval_make_packed_array_33/10,eval_make_packed_array_4/10,eval_make_packed_array_5/10,eval_make_packed_array_NewDefault_in/10,eval_make_packed_array_bb11_in/10,eval_make_packed_array_bb15_in/10,eval_make_packed_array_bb18_in/10,eval_make_packed_array_bb1_in/9,eval_make_packed_array_bb21_in/11,eval_make_packed_array_bb22_in/12,eval_make_packed_array_bb4_in/10]
1. recursive  : [eval_make_packed_array_bb25_in/9]
2. non_recursive  : [eval_make_packed_array_bb51_in/1]
3. recursive  : [eval_make_packed_array_142/14,eval_make_packed_array_143/14,eval_make_packed_array_bb43_in/13]
4. recursive  : [eval_make_packed_array_114/10,eval_make_packed_array_115/10,eval_make_packed_array_132/11,eval_make_packed_array_133/11,eval_make_packed_array_78/10,eval_make_packed_array_79/10,eval_make_packed_array_97/10,eval_make_packed_array_98/10,eval_make_packed_array_NewDefault13_in/10,eval_make_packed_array_bb27_in/9,eval_make_packed_array_bb30_in/10,eval_make_packed_array_bb36_in/10,eval_make_packed_array_bb40_in/10,eval_make_packed_array_bb42_in/10,eval_make_packed_array_bb46_in/10,loop_cont_eval_make_packed_array_bb43_in/11]
5. recursive  : [eval_make_packed_array_bb48_in/8]
6. non_recursive  : [eval_make_packed_array_153/3]
7. non_recursive  : [eval_make_packed_array_152/4]
8. non_recursive  : [loop_cont_eval_make_packed_array_bb48_in/5]
9. non_recursive  : [loop_cont_eval_make_packed_array_bb27_in/6]
10. non_recursive  : [loop_cont_eval_make_packed_array_bb25_in/6]
11. non_recursive  : [eval_make_packed_array_72/5]
12. non_recursive  : [eval_make_packed_array_71/5]
13. non_recursive  : [loop_cont_eval_make_packed_array_bb1_in/6]
14. non_recursive  : [eval_make_packed_array_bb0_in/2]
15. non_recursive  : [eval_make_packed_array_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_make_packed_array_bb1_in/9
1. SCC is partially evaluated into eval_make_packed_array_bb25_in/9
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_make_packed_array_bb43_in/13
4. SCC is partially evaluated into eval_make_packed_array_bb27_in/9
5. SCC is partially evaluated into eval_make_packed_array_bb48_in/8
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_make_packed_array_bb27_in/6
10. SCC is partially evaluated into loop_cont_eval_make_packed_array_bb25_in/6
11. SCC is partially evaluated into eval_make_packed_array_72/5
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into loop_cont_eval_make_packed_array_bb1_in/6
14. SCC is partially evaluated into eval_make_packed_array_bb0_in/2
15. SCC is partially evaluated into eval_make_packed_array_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_make_packed_array_bb1_in/9 
* CE 4 is refined into CE [30] 
* CE 5 is refined into CE [31] 
* CE 9 is refined into CE [32] 
* CE 10 is refined into CE [33] 
* CE 8 is refined into CE [34] 
* CE 6 is refined into CE [35] 
* CE 7 is refined into CE [36] 


#### Refined cost equations eval_make_packed_array_bb1_in/9 
* CE 30: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) = 0
     [V_size>=V_i_0,V_i_0>=1,B=6] 
* CE 31: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) = 0
     [V_size>=V_i_0,0>=V_i_0+1,B=6] 
* CE 32: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) = 0
     [8*G+7>=C+F,C+F>=8*G,C+F>=1,G>=0,A>=0,E=7,D=0] 
* CE 33: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) = 0
     [8*G>=C+F,C+F+7>=8*G,0>=C+F+1,A>=0,0>=G,E=7,D=0] 
* CE 34: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) = 0
     [A>=0,C+F=0,G=0,E=7,D=0] 
* CE 35: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) = 1+ eval_make_packed_array_bb1_in(V_size,G,H,I,B,C,D,E,F)
     [V_size>=I+1,I>=0,I+1=V_i_0] 
* CE 36: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) = 1+ eval_make_packed_array_bb1_in(V_size,G,H,I,B,C,D,E,F)
     [V_size>=I+1,0>=I+2,I+1=V_i_0] 

### Cost equations --> "Loop" of eval_make_packed_array_bb1_in/9 
* CEs [35] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 

#### Loops of eval_make_packed_array_bb1_in/9 
* Loop 26: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F)->  eval_make_packed_array_bb1_in(V_size,V_skip_0',V_idest_0',V_i_0',B,C,D,E,F)
                  [V_size>=V_i_0,V_i_0>=1,V_i_0=V_i_0'+1] 
* Loop 27: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F)->  eval_make_packed_array_bb1_in(V_size,V_skip_0',V_idest_0',V_i_0',B,C,D,E,F)
                  [V_size>=V_i_0,0>=V_i_0+1,V_i_0=V_i_0'+1] 
* Loop 28: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) [V_size>=V_i_0,V_i_0>=1,B=6] 
* Loop 29: eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) [V_size>=V_i_0,0>=V_i_0+1,B=6] 
* Loop 30: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) [8*G+7>=C+F,C+F>=8*G,C+F>=1,G>=0,A>=0,E=7,D=0] 
* Loop 31: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) [8*G>=C+F,C+F+7>=8*G,0>=C+F+1,A>=0,0>=G,E=7,D=0] 
* Loop 32: eval_make_packed_array_bb1_in(A,B,C,D,E,A,B,F,G) [A>=0,C+F=0,G=0,E=7,D=0] 

### Ranking functions of CR eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) 
* RF of phase [26]: [V_i_0]

#### Partial ranking functions of CR eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V_i_0


### Resulting Chains:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) 
* [[27]]...
* [[27],29]
* [[26],32]
* [[26],31]
* [[26],30]
* [[26],28]
* [32]
* [31]
* [30]
* [29]
* [28]


### Merging Chains  eval_make_packed_array_bb1_in/9 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29],[29,[27]]] --> 4 
* [[28],[28,[26]]] --> 5 
* [[31,[26]],[32,[26]]] --> 6 
* [[30,[26]]] --> 7 
* [[[27]]] --> 8 


### Specialization of cost equations eval_make_packed_array_bb25_in/9 
* CE 17 is refined into CE [37] 
* CE 16 is refined into CE [38] 
* CE 15 is refined into CE [39] 


#### Refined cost equations eval_make_packed_array_bb25_in/9 
* CE 37: eval_make_packed_array_bb25_in(A,B,C,D,E,A,B,C,A) = 0
     [E=5,D=0] 
* CE 38: eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,G,B,C,D,E,F)
     [V_skip_3>=1,V_skip_3=G+1] 
* CE 39: eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,G,B,C,D,E,F)
     [0>=V_skip_3+1,V_skip_3=G+1] 

### Cost equations --> "Loop" of eval_make_packed_array_bb25_in/9 
* CEs [38] --> Loop 33 
* CEs [39] --> Loop 34 
* CEs [37] --> Loop 35 

#### Loops of eval_make_packed_array_bb25_in/9 
* Loop 33: eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F)->  eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3',B,C,D,E,F)
                  [V_skip_3>=1,V_skip_3=V_skip_3'+1] 
* Loop 34: eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F)->  eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3',B,C,D,E,F)
                  [0>=V_skip_3+1,V_skip_3=V_skip_3'+1] 
* Loop 35: eval_make_packed_array_bb25_in(A,B,C,D,E,A,B,C,A) [E=5,D=0] 

### Ranking functions of CR eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) 
* RF of phase [33]: [V_skip_3]

#### Partial ranking functions of CR eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_skip_3


### Resulting Chains:eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) 
* [[34]]...
* [[33],35]
* [35]


### Merging Chains  eval_make_packed_array_bb25_in/9 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[33]]] --> 2 
* [[[34]]] --> 3 


### Specialization of cost equations eval_make_packed_array_bb43_in/13 
* CE 26 is refined into CE [40] 
* CE 25 is refined into CE [41] 


#### Refined cost equations eval_make_packed_array_bb43_in/13 
* CE 40: eval_make_packed_array_bb43_in(A,B,C,D,E,F,G,H,A,B,C,I,E) = 0
     [F>=G,0>=G,E+1=I,E+1=D,H=2] 
* CE 41: eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) = 1+ eval_make_packed_array_bb43_in(V_size,V_79,V_85,H,V_97,V_166,I,J,C,D,E,F,G)
     [V_166>=V_i3_0,V_i3_0>=1,V_i3_0=I+1,V_97+1=H,V_97+1=V_i_1,J=2,B=2] 

### Cost equations --> "Loop" of eval_make_packed_array_bb43_in/13 
* CEs [41] --> Loop 36 
* CEs [40] --> Loop 37 

#### Loops of eval_make_packed_array_bb43_in/13 
* Loop 36: eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G)->  eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1',V_97,V_166,V_i3_0',B',C,D,E,F,G)
                  [V_166>=V_i3_0,V_i3_0>=1,V_i3_0=V_i3_0'+1,V_97+1=V_i_1',V_97+1=V_i_1,B'=2,B=2] 
* Loop 37: eval_make_packed_array_bb43_in(A,B,C,D,E,F,G,H,A,B,C,I,E) [F>=G,0>=G,E+1=I,E+1=D,H=2] 

### Ranking functions of CR eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) 
* RF of phase [36]: [V_i3_0]

#### Partial ranking functions of CR eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    V_i3_0


### Resulting Chains:eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) 
* [[36],37]
* [37]


### Merging Chains  eval_make_packed_array_bb43_in/13 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[36]]] --> 2 


### Specialization of cost equations eval_make_packed_array_bb27_in/9 
* CE 23 is refined into CE [42] 
* CE 19 is refined into CE [43,44] 
* CE 21 is refined into CE [45] 
* CE 20 is refined into CE [46,47] 
* CE 22 is refined into CE [48] 


#### Refined cost equations eval_make_packed_array_bb27_in/9 
* CE 42: eval_make_packed_array_bb27_in(A,B,C,D,E,A,B,C,B) = 0
     [E=4,D=0] 
* CE 43: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 2+ eval_make_packed_array_bb43_in(V_size,V_79,V_85,G,H,I,I,J,V_size,V_79,V_85,K,H):1+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,H,B,C,D,E,F)
     [H>=0,0>=I,H+1=K,H+1=G,H+1=V_i_1,J=2] 
* CE 44: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 2+ eval_make_packed_array_bb43_in(V_size,V_79,V_85,G,H,I,I,J,V_size,V_79,V_85,K,H):2+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,H,B,C,D,E,F)
     [I>=1,H>=0,H+1=K,H+1=G,H+1=V_i_1,J=2] 
* CE 45: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 1+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,G,B,C,D,E,F)
     [G>=0,G+1=V_i_1] 
* CE 46: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 2+ eval_make_packed_array_bb43_in(V_size,V_79,V_85,G,H,I,I,J,V_size,V_79,V_85,K,H):1+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,H,B,C,D,E,F)
     [0>=I,0>=H+2,H+1=K,H+1=G,H+1=V_i_1,J=2] 
* CE 47: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 2+ eval_make_packed_array_bb43_in(V_size,V_79,V_85,G,H,I,I,J,V_size,V_79,V_85,K,H):2+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,H,B,C,D,E,F)
     [I>=1,0>=H+2,H+1=K,H+1=G,H+1=V_i_1,J=2] 
* CE 48: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) = 1+ eval_make_packed_array_bb27_in(V_size,V_79,V_85,G,B,C,D,E,F)
     [0>=G+2,G+1=V_i_1] 

### Cost equations --> "Loop" of eval_make_packed_array_bb27_in/9 
* CEs [43,44,45] --> Loop 38 
* CEs [46,47,48] --> Loop 39 
* CEs [42] --> Loop 40 

#### Loops of eval_make_packed_array_bb27_in/9 
* Loop 38: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F)->  eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1',B,C,D,E,F)
                  [V_i_1>=1,V_i_1=V_i_1'+1] 
* Loop 39: eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F)->  eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1',B,C,D,E,F)
                  [0>=V_i_1+1,V_i_1=V_i_1'+1] 
* Loop 40: eval_make_packed_array_bb27_in(A,B,C,D,E,A,B,C,B) [E=4,D=0] 

### Ranking functions of CR eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) 
* RF of phase [38]: [V_i_1]

#### Partial ranking functions of CR eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V_i_1


### Resulting Chains:eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) 
* [[39]]...
* [[38],40]
* [40]


### Merging Chains  eval_make_packed_array_bb27_in/9 into  External patterns of execution 
* [[40]] --> 1 
* [[40,[38]]] --> 2 
* [[[39]]] --> 3 


### Specialization of cost equations eval_make_packed_array_bb48_in/8 
* CE 29 is refined into CE [49] 
* CE 28 is refined into CE [50] 
* CE 27 is refined into CE [51] 


#### Refined cost equations eval_make_packed_array_bb48_in/8 
* CE 49: eval_make_packed_array_bb48_in(A,B,C,D,E,A,B,C) = 0
     [E=3,D=0] 
* CE 50: eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) = 1+ eval_make_packed_array_bb48_in(V_size,V_79,V_85,F,G,C,D,E)
     [V_pad_0>=1,V_pad_0=F+1,G=3,B=3] 
* CE 51: eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) = 1+ eval_make_packed_array_bb48_in(V_size,V_79,V_85,F,G,C,D,E)
     [0>=V_pad_0+1,V_pad_0=F+1,G=3,B=3] 

### Cost equations --> "Loop" of eval_make_packed_array_bb48_in/8 
* CEs [50] --> Loop 41 
* CEs [51] --> Loop 42 
* CEs [49] --> Loop 43 

#### Loops of eval_make_packed_array_bb48_in/8 
* Loop 41: eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E)->  eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0',B',C,D,E)
                  [V_pad_0>=1,V_pad_0=V_pad_0'+1,B'=3,B=3] 
* Loop 42: eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E)->  eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0',B',C,D,E)
                  [0>=V_pad_0+1,V_pad_0=V_pad_0'+1,B'=3,B=3] 
* Loop 43: eval_make_packed_array_bb48_in(A,B,C,D,E,A,B,C) [E=3,D=0] 

### Ranking functions of CR eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) 
* RF of phase [41]: [V_pad_0]

#### Partial ranking functions of CR eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) 
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    V_pad_0


### Resulting Chains:eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) 
* [[42]]...
* [[41],43]
* [43]


### Merging Chains  eval_make_packed_array_bb48_in/8 into  External patterns of execution 
* [[43]] --> 1 
* [[43,[41]]] --> 2 
* [[[42]]] --> 3 


### Specialization of cost equations loop_cont_eval_make_packed_array_bb27_in/6 
* CE 24 is refined into CE [52,53,54] 


#### Refined cost equations loop_cont_eval_make_packed_array_bb27_in/6 
* CE 52: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) = 1+ eval_make_packed_array_bb48_in(A,B,C,L,M,A,B,C):1
     [M=3,L=0,D=0,K=4] 
* CE 53: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) = 1+ eval_make_packed_array_bb48_in(A,B,C,D,L,A,B,C):2
     [D>=1,L=3,K=4] 
* CE 54: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) = 1+ eval_make_packed_array_bb48_in(A,B,C,D,L,M,N,O):3
     [0>=D+1,L=3,K=4] 

### Cost equations --> "Loop" of loop_cont_eval_make_packed_array_bb27_in/6 
* CEs [54] --> Loop 44 
* CEs [53] --> Loop 45 
* CEs [52] --> Loop 46 

#### Loops of loop_cont_eval_make_packed_array_bb27_in/6 
* Loop 44: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) [0>=D+1,K=4] 
* Loop 45: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) [D>=1,K=4] 
* Loop 46: loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) [D=0,K=4] 

### Ranking functions of CR loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E) 
* [46]
* [45]
* [44]...


### Merging Chains  loop_cont_eval_make_packed_array_bb27_in/6 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 


### Specialization of cost equations loop_cont_eval_make_packed_array_bb25_in/6 
* CE 18 is refined into CE [55,56,57,58,59,60,61] 


#### Refined cost equations loop_cont_eval_make_packed_array_bb25_in/6 
* CE 55: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,M,C,N,O,A,P,C,Q):1+ loop_cont_eval_make_packed_array_bb27_in(R,A,S,C,T,E):1
     [T=0,S=0,R=4,Q=0,P=0,O=4,N=0,M=0,D=0,B=0,L=5] 
* CE 56: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,B,C,M,N,A,B,C,B):1+ loop_cont_eval_make_packed_array_bb27_in(O,A,B,C,B,E):2
     [B>=1,O=4,N=4,M=0,D=0,L=5] 
* CE 57: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,B,C,M,N,A,B,C,B):1+ loop_cont_eval_make_packed_array_bb27_in(O,A,B,C,B,E):3
     [0>=B+1,O=4,N=4,M=0,D=0,L=5] 
* CE 58: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,M,C,D,N,A,O,C,P):2+ loop_cont_eval_make_packed_array_bb27_in(Q,A,R,C,S,E):1
     [D>=1,S=0,R=0,Q=4,P=0,O=0,N=4,M=0,B=0,L=5] 
* CE 59: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,B,C,D,M,A,B,C,B):2+ loop_cont_eval_make_packed_array_bb27_in(N,A,B,C,B,E):2
     [B>=1,D>=1,N=4,M=4,L=5] 
* CE 60: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,B,C,D,M,A,B,C,B):2+ loop_cont_eval_make_packed_array_bb27_in(N,A,B,C,B,E):3
     [D>=1,0>=B+1,N=4,M=4,L=5] 
* CE 61: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) = 1+ eval_make_packed_array_bb27_in(A,B,C,D,M,N,O,P,Q):3
     [0>=D+1,L=5] 

### Cost equations --> "Loop" of loop_cont_eval_make_packed_array_bb25_in/6 
* CEs [61] --> Loop 47 
* CEs [60] --> Loop 48 
* CEs [57] --> Loop 49 
* CEs [59] --> Loop 50 
* CEs [56] --> Loop 51 
* CEs [58] --> Loop 52 
* CEs [55] --> Loop 53 

#### Loops of loop_cont_eval_make_packed_array_bb25_in/6 
* Loop 47: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [0>=D+1,L=5] 
* Loop 48: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [D>=1,0>=B+1,L=5] 
* Loop 49: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [0>=B+1,D=0,L=5] 
* Loop 50: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [D>=1,B>=1,L=5] 
* Loop 51: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [B>=1,D=0,L=5] 
* Loop 52: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [D>=1,B=0,L=5] 
* Loop 53: loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) [D=0,B=0,L=5] 

### Ranking functions of CR loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E) 
* [53]
* [52]
* [51]
* [50]
* [49]...
* [48]...
* [47]...


### Merging Chains  loop_cont_eval_make_packed_array_bb25_in/6 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 
* [[51]] --> 3 
* [[50]] --> 4 
* [[49]] --> 5 
* [[48]] --> 6 
* [[47]] --> 7 


### Specialization of cost equations eval_make_packed_array_72/5 
* CE 13 is refined into CE [62] 
* CE 14 is refined into CE [63,64,65,66,67,68,69,70,71,72,73,74,75,76,77] 


#### Refined cost equations eval_make_packed_array_72/5 
* CE 62: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 0
     [] 
* CE 63: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,D,V_85,E,F,G,H,V_85,I):1+ loop_cont_eval_make_packed_array_bb25_in(J,K,L,V_85,M,B):1
     [M=0,L=0,K=0,J=5,I=0,H=0,G=0,F=5,E=0,D=0,C=0,V_79=0,V_skip_0=0,V_size=0] 
* CE 64: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,C,V_85,D,E,V_size,F,V_85,V_size):1+ loop_cont_eval_make_packed_array_bb25_in(G,V_size,H,V_85,V_size,B):2
     [V_size>=1,H=0,G=5,F=0,E=5,D=0,C=0,V_79=0,V_skip_0=0] 
* CE 65: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,V_79,V_85,D,E,F,V_79,V_85,G):1+ loop_cont_eval_make_packed_array_bb25_in(H,I,V_79,V_85,J,B):3
     [V_79>=1,J=0,I=0,H=5,G=0,F=0,E=5,D=0,C=0,V_skip_0=0,V_size=0] 
* CE 66: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,C,D,V_size,V_79,V_85,V_size):1+ loop_cont_eval_make_packed_array_bb25_in(E,V_size,V_79,V_85,V_size,B):4
     [V_size>=1,V_79>=1,E=5,D=5,C=0,V_skip_0=0] 
* CE 67: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,V_79,V_85,D,E,F,V_79,V_85,G):1+ loop_cont_eval_make_packed_array_bb25_in(H,I,V_79,V_85,J,B):5
     [0>=V_79+1,J=0,I=0,H=5,G=0,F=0,E=5,D=0,C=0,V_skip_0=0,V_size=0] 
* CE 68: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,C,D,V_size,V_79,V_85,V_size):1+ loop_cont_eval_make_packed_array_bb25_in(E,V_size,V_79,V_85,V_size,B):6
     [V_size>=1,0>=V_79+1,E=5,D=5,C=0,V_skip_0=0] 
* CE 69: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,C,D,V_size,V_79,V_85,V_size):1+ loop_cont_eval_make_packed_array_bb25_in(E,V_size,V_79,V_85,V_size,B):7
     [0>=V_size+1,E=5,D=5,C=0,V_skip_0=0] 
* CE 70: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,D,V_85,V_skip_0,E,F,G,V_85,H):2+ loop_cont_eval_make_packed_array_bb25_in(I,J,K,V_85,L,B):1
     [V_skip_0>=1,L=0,K=0,J=0,I=5,H=0,G=0,F=0,E=5,D=0,C=0,V_79=0,V_size=0] 
* CE 71: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,C,V_85,V_skip_0,D,V_size,E,V_85,V_size):2+ loop_cont_eval_make_packed_array_bb25_in(F,V_size,G,V_85,V_size,B):2
     [V_size>=1,V_skip_0>=1,G=0,F=5,E=0,D=5,C=0,V_79=0] 
* CE 72: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,V_79,V_85,V_skip_0,D,E,V_79,V_85,F):2+ loop_cont_eval_make_packed_array_bb25_in(G,H,V_79,V_85,I,B):3
     [V_79>=1,V_skip_0>=1,I=0,H=0,G=5,F=0,E=0,D=5,C=0,V_size=0] 
* CE 73: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_0,C,V_size,V_79,V_85,V_size):2+ loop_cont_eval_make_packed_array_bb25_in(D,V_size,V_79,V_85,V_size,B):4
     [V_size>=1,V_79>=1,V_skip_0>=1,D=5,C=5] 
* CE 74: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(C,V_79,V_85,V_skip_0,D,E,V_79,V_85,F):2+ loop_cont_eval_make_packed_array_bb25_in(G,H,V_79,V_85,I,B):5
     [V_skip_0>=1,0>=V_79+1,I=0,H=0,G=5,F=0,E=0,D=5,C=0,V_size=0] 
* CE 75: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_0,C,V_size,V_79,V_85,V_size):2+ loop_cont_eval_make_packed_array_bb25_in(D,V_size,V_79,V_85,V_size,B):6
     [V_size>=1,V_skip_0>=1,0>=V_79+1,D=5,C=5] 
* CE 76: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_0,C,V_size,V_79,V_85,V_size):2+ loop_cont_eval_make_packed_array_bb25_in(D,V_size,V_79,V_85,V_size,B):7
     [V_skip_0>=1,0>=V_size+1,D=5,C=5] 
* CE 77: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) = 1+ eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_0,C,D,E,F,G):3
     [0>=V_skip_0+1] 

### Cost equations --> "Loop" of eval_make_packed_array_72/5 
* CEs [75] --> Loop 54 
* CEs [77] --> Loop 55 
* CEs [76] --> Loop 56 
* CEs [68] --> Loop 57 
* CEs [69] --> Loop 58 
* CEs [74] --> Loop 59 
* CEs [67] --> Loop 60 
* CEs [62,63,64,65,66,70,71,72,73] --> Loop 61 

#### Loops of eval_make_packed_array_72/5 
* Loop 54: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [V_skip_0>=1,V_size>=1,0>=V_79+1] 
* Loop 55: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [0>=V_skip_0+1] 
* Loop 56: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [V_skip_0>=1,0>=V_size+1] 
* Loop 57: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [V_size>=1,0>=V_79+1,V_skip_0=0] 
* Loop 58: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [0>=V_size+1,V_skip_0=0] 
* Loop 59: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [V_skip_0>=1,0>=V_79+1,V_size=0] 
* Loop 60: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [0>=V_79+1,V_skip_0=0,V_size=0] 
* Loop 61: eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) [] 

### Ranking functions of CR eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) 

#### Partial ranking functions of CR eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) 


### Resulting Chains:eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B) 
* [61]
* [60]...
* [59]...
* [58]...
* [57]...
* [56]...
* [55]...
* [54]...


### Merging Chains  eval_make_packed_array_72/5 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 
* [[59]] --> 3 
* [[58]] --> 4 
* [[57]] --> 5 
* [[56]] --> 6 
* [[55]] --> 7 
* [[54]] --> 8 


### Specialization of cost equations loop_cont_eval_make_packed_array_bb1_in/6 
* CE 12 is refined into CE [78,79,80,81,82,83,84,85] 
* CE 11 is refined into CE [86] 


#### Refined cost equations loop_cont_eval_make_packed_array_bb1_in/6 
* CE 78: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,B,C,D,E):1
     [F=7] 
* CE 79: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(G,H,C,D,E):2
     [0>=C+1,H=0,G=0,B=0,A=0,F=7] 
* CE 80: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(G,B,C,D,E):3
     [B>=1,0>=C+1,G=0,A=0,F=7] 
* CE 81: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,G,C,D,E):4
     [0>=A+1,G=0,B=0,F=7] 
* CE 82: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,G,C,D,E):5
     [A>=1,0>=C+1,G=0,B=0,F=7] 
* CE 83: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,B,C,D,E):6
     [B>=1,0>=A+1,F=7] 
* CE 84: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,B,C,D,E):7
     [0>=B+1,F=7] 
* CE 85: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0+ eval_make_packed_array_72(A,B,C,D,E):8
     [B>=1,A>=1,0>=C+1,F=7] 
* CE 86: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) = 0
     [F=6] 

### Cost equations --> "Loop" of loop_cont_eval_make_packed_array_bb1_in/6 
* CEs [78] --> Loop 62 
* CEs [86] --> Loop 63 
* CEs [85] --> Loop 64 
* CEs [84] --> Loop 65 
* CEs [83] --> Loop 66 
* CEs [82] --> Loop 67 
* CEs [81] --> Loop 68 
* CEs [80] --> Loop 69 
* CEs [79] --> Loop 70 

#### Loops of loop_cont_eval_make_packed_array_bb1_in/6 
* Loop 62: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [F=7] 
* Loop 63: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [F=6] 
* Loop 64: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [B>=1,A>=1,0>=C+1,F=7] 
* Loop 65: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [0>=B+1,F=7] 
* Loop 66: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [B>=1,0>=A+1,F=7] 
* Loop 67: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [A>=1,0>=C+1,B=0,F=7] 
* Loop 68: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [0>=A+1,B=0,F=7] 
* Loop 69: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [B>=1,0>=C+1,A=0,F=7] 
* Loop 70: loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) [0>=C+1,B=0,A=0,F=7] 

### Ranking functions of CR loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E) 
* [70]...
* [69]...
* [68]...
* [67]...
* [66]...
* [65]...
* [64]...
* [63]
* [62]


### Merging Chains  loop_cont_eval_make_packed_array_bb1_in/6 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 
* [[70]] --> 3 
* [[69]] --> 4 
* [[68]] --> 5 
* [[67]] --> 6 
* [[66]] --> 7 
* [[65]] --> 8 
* [[64]] --> 9 


### Specialization of cost equations eval_make_packed_array_bb0_in/2 
* CE 3 is refined into CE [87,88,89,90,91,92,93,94,95,96,97,98,99,100,101] 


#### Refined cost equations eval_make_packed_array_bb0_in/2 
* CE 87: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(C,D,E,F,G,H,I,J,K):1+ loop_cont_eval_make_packed_array_bb1_in(L,M,N,O,P,B):2
     [P=0,O=0,N=0,M=0,L=7,K=0,J=0,I=0,H=0,G=7,F=0,E=0,D=0,C=0,V_size=0] 
* CE 88: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(C,D,E,F,G,H,I,J,K):2+ loop_cont_eval_make_packed_array_bb1_in(L,M,N,J,K,B):2
     [8*K>=J,J+7>=8*K,0>=K,0>=J+1,N=0,M=0,L=7,I=0,H=0,G=7,F=0,E=0,D=0,C=0,V_size=0] 
* CE 89: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(C,D,E,F,G,H,I,J,K):2+ loop_cont_eval_make_packed_array_bb1_in(L,M,N,J,K,B):3
     [8*K>=J,J+7>=8*K,0>=J+1,0>=K,N=0,M=0,L=7,I=0,H=0,G=7,F=0,E=0,D=0,C=0,V_size=0] 
* CE 90: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(C,D,E,F,G,H,I,J,K):3+ loop_cont_eval_make_packed_array_bb1_in(L,M,N,J,K,B):2
     [8*K+7>=J,J>=8*K,K>=0,J>=1,N=0,M=0,L=7,I=0,H=0,G=7,F=0,E=0,D=0,C=0,V_size=0] 
* CE 91: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,F,G,H,I):4+ loop_cont_eval_make_packed_array_bb1_in(J,F,G,H,I,B):1
     [0>=V_size+1,J=6,E=6,D=0,C=0] 
* CE 92: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,F,G,H,I):5+ loop_cont_eval_make_packed_array_bb1_in(J,F,G,H,I,B):1
     [V_size>=1,J=6,E=6,D=0,C=0] 
* CE 93: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):6+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):2
     [V_size>=1,0>=H,I=7,E=7,D=0,C=0] 
* CE 94: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):6+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,J,G,H,B):6
     [V_size>=1,0>=G+1,0>=H,J=0,I=7,F=0,E=7,D=0,C=0] 
* CE 95: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):6+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):8
     [V_size>=1,0>=F+1,0>=H,I=7,E=7,D=0,C=0] 
* CE 96: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):6+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):9
     [F>=1,V_size>=1,0>=G+1,0>=H,I=7,E=7,D=0,C=0] 
* CE 97: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):7+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):2
     [H>=0,V_size>=1,I=7,E=7,D=0,C=0] 
* CE 98: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):7+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,J,G,H,B):6
     [V_size>=1,H>=0,0>=G+1,J=0,I=7,F=0,E=7,D=0,C=0] 
* CE 99: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):7+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):8
     [H>=0,V_size>=1,0>=F+1,I=7,E=7,D=0,C=0] 
* CE 100: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,V_size,F,G,H):7+ loop_cont_eval_make_packed_array_bb1_in(I,V_size,F,G,H,B):9
     [F>=1,V_size>=1,H>=0,0>=G+1,I=7,E=7,D=0,C=0] 
* CE 101: eval_make_packed_array_bb0_in(V_size,B) = 1+ eval_make_packed_array_bb1_in(V_size,C,D,V_size,E,F,G,H,I):8
     [0>=V_size+1,D=0,C=0] 

### Cost equations --> "Loop" of eval_make_packed_array_bb0_in/2 
* CEs [94,95,96,98,99,100] --> Loop 71 
* CEs [101] --> Loop 72 
* CEs [89] --> Loop 73 
* CEs [92,93,97] --> Loop 74 
* CEs [91] --> Loop 75 
* CEs [87,88,90] --> Loop 76 

#### Loops of eval_make_packed_array_bb0_in/2 
* Loop 71: eval_make_packed_array_bb0_in(V_size,B) [V_size>=1] 
* Loop 72: eval_make_packed_array_bb0_in(V_size,B) [0>=V_size+1] 
* Loop 73: eval_make_packed_array_bb0_in(V_size,B) [V_size=0] 
* Loop 74: eval_make_packed_array_bb0_in(V_size,B) [V_size>=1] 
* Loop 75: eval_make_packed_array_bb0_in(V_size,B) [0>=V_size+1] 
* Loop 76: eval_make_packed_array_bb0_in(V_size,B) [V_size=0] 

### Ranking functions of CR eval_make_packed_array_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_make_packed_array_bb0_in(V_size,B) 


### Resulting Chains:eval_make_packed_array_bb0_in(V_size,B) 
* [76]
* [75]
* [74]
* [73]...
* [72]...
* [71]...


### Merging Chains  eval_make_packed_array_bb0_in/2 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[72]] --> 5 
* [[71]] --> 6 


### Specialization of cost equations eval_make_packed_array_start/2 
* CE 2 is refined into CE [102,103,104,105,106,107] 


#### Refined cost equations eval_make_packed_array_start/2 
* CE 102: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(C,B):1
     [C=0,V_size=0] 
* CE 103: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(V_size,B):2
     [0>=V_size+1] 
* CE 104: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(V_size,B):3
     [V_size>=1] 
* CE 105: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(C,B):4
     [C=0,V_size=0] 
* CE 106: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(V_size,B):5
     [0>=V_size+1] 
* CE 107: eval_make_packed_array_start(V_size,B) = 0+ eval_make_packed_array_bb0_in(V_size,B):6
     [V_size>=1] 

### Cost equations --> "Loop" of eval_make_packed_array_start/2 
* CEs [107] --> Loop 77 
* CEs [106] --> Loop 78 
* CEs [105] --> Loop 79 
* CEs [104] --> Loop 80 
* CEs [103] --> Loop 81 
* CEs [102] --> Loop 82 

#### Loops of eval_make_packed_array_start/2 
* Loop 77: eval_make_packed_array_start(V_size,B) [V_size>=1] 
* Loop 78: eval_make_packed_array_start(V_size,B) [0>=V_size+1] 
* Loop 79: eval_make_packed_array_start(V_size,B) [V_size=0] 
* Loop 80: eval_make_packed_array_start(V_size,B) [V_size>=1] 
* Loop 81: eval_make_packed_array_start(V_size,B) [0>=V_size+1] 
* Loop 82: eval_make_packed_array_start(V_size,B) [V_size=0] 

### Ranking functions of CR eval_make_packed_array_start(V_size,B) 

#### Partial ranking functions of CR eval_make_packed_array_start(V_size,B) 


### Resulting Chains:eval_make_packed_array_start(V_size,B) 
* [82]
* [81]
* [80]
* [79]...
* [78]...
* [77]...


### Merging Chains  eval_make_packed_array_start/2 into  External patterns of execution 
* [[82]] --> 1 
* [[81]] --> 2 
* [[80]] --> 3 
* [[79]] --> 4 
* [[78]] --> 5 
* [[77]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [27] 

 * loop 27:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1
#### Cost of phase [27]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(27)+0
#### Cost of phase [27]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(27)+0
#### Cost of loops [26] 

 * loop 26:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1
#### Cost of phase [26]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(26)+0
  Such that:it(26) =< V_i_0
it(26) =< V_i_0-V_i_0'

#### Cost of phase [26]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(26)+0
  Such that:it(26) =< V_i_0
it(26) =< V_i_0-V_i_0'

#### Cost of phase [26]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(26)+0
  Such that:it(26) =< V_i_0
it(26) =< V_i_0-V_i_0'

#### Cost of phase [26]:eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F) -> [eval_make_packed_array_bb1_in(V_size',V_skip_0',V_idest_0',V_i_0',B',C',D',E',F')] 
1*it(26)+0
  Such that:it(26) =< V_i_0
it(26) =< V_i_0-V_i_0'

#### Cost of chains of eval_make_packed_array_bb1_in(V_size,V_skip_0,V_idest_0,V_i_0,B,C,D,E,F):
* Chain [[27]]...: 1*it(27)+0
  with precondition: [0>=V_i_0+1,V_size>=V_i_0] 

* Chain [[27],29]: 1*it(27)+0
  with precondition: [B=6,0>=V_i_0+1,V_size>=V_i_0] 

* Chain [[26],32]: 1*it(26)+0
  Such that:it(26) =< V_i_0

  with precondition: [B=7,F=0,V_size=C,V_i_0>=1,V_size>=V_i_0] 

* Chain [[26],31]: 1*it(26)+0
  Such that:it(26) =< V_i_0

  with precondition: [B=7,V_size=C,0>=F,V_i_0>=1,V_size>=V_i_0] 

* Chain [[26],30]: 1*it(26)+0
  Such that:it(26) =< V_i_0

  with precondition: [B=7,V_size=C,V_i_0>=1,F>=0,V_size>=V_i_0] 

* Chain [[26],28]: 1*it(26)+0
  Such that:it(26) =< V_i_0

  with precondition: [B=6,V_i_0>=2,V_size>=V_i_0] 

* Chain [32]: 0
  with precondition: [V_i_0=0,B=7,F=0,D=V_skip_0,V_size=C,V_idest_0+E=0,V_size>=0] 

* Chain [31]: 0
  with precondition: [V_i_0=0,B=7,D=V_skip_0,V_size=C,0>=F,V_size>=0,0>=V_idest_0+E+1,V_idest_0+E+7>=8*F,8*F>=V_idest_0+E] 

* Chain [30]: 0
  with precondition: [V_i_0=0,B=7,D=V_skip_0,V_size=C,V_size>=0,F>=0,V_idest_0+E>=1,V_idest_0+E>=8*F,8*F+7>=V_idest_0+E] 

* Chain [29]: 0
  with precondition: [B=6,0>=V_i_0+1,V_size>=V_i_0] 

* Chain [28]: 0
  with precondition: [B=6,V_i_0>=1,V_size>=V_i_0] 


#### Cost of loops [34] 

 * loop 34:eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) -> [eval_make_packed_array_bb25_in(V_size',V_79',V_85',V_skip_3',B',C',D',E',F')] 
1
#### Cost of phase [34]:eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) -> [eval_make_packed_array_bb25_in(V_size',V_79',V_85',V_skip_3',B',C',D',E',F')] 
1*it(34)+0
#### Cost of loops [33] 

 * loop 33:eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) -> [eval_make_packed_array_bb25_in(V_size',V_79',V_85',V_skip_3',B',C',D',E',F')] 
1
#### Cost of phase [33]:eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F) -> [eval_make_packed_array_bb25_in(V_size',V_79',V_85',V_skip_3',B',C',D',E',F')] 
1*it(33)+0
  Such that:it(33) =< V_skip_3
it(33) =< V_skip_3-V_skip_3'

#### Cost of chains of eval_make_packed_array_bb25_in(V_size,V_79,V_85,V_skip_3,B,C,D,E,F):
* Chain [[34]]...: 1*it(34)+0
  with precondition: [0>=V_skip_3+1] 

* Chain [[33],35]: 1*it(33)+0
  Such that:it(33) =< V_skip_3

  with precondition: [B=5,V_size=C,V_79=D,V_85=E,V_size=F,V_skip_3>=1] 

* Chain [35]: 0
  with precondition: [V_skip_3=0,B=5,D=V_79,E=V_85,V_size=C,V_size=F] 


#### Cost of loops [36] 

 * loop 36:eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) -> [eval_make_packed_array_bb43_in(V_size',V_79',V_85',V_i_1',V_97',V_166',V_i3_0',B',C',D',E',F',G')] 
1
#### Cost of phase [36]:eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G) -> [eval_make_packed_array_bb43_in(V_size',V_79',V_85',V_i_1',V_97',V_166',V_i3_0',B',C',D',E',F',G')] 
1*it(36)+0
  Such that:it(36) =< V_i3_0
it(36) =< V_i3_0-V_i3_0'

#### Cost of chains of eval_make_packed_array_bb43_in(V_size,V_79,V_85,V_i_1,V_97,V_166,V_i3_0,B,C,D,E,F,G):
* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< V_i3_0

  with precondition: [B=2,V_i_1=V_97+1,V_size=C,V_79=D,V_85=E,V_i_1=F,V_i_1=G+1,V_i3_0>=1,V_166>=V_i3_0] 

* Chain [37]: 0
  with precondition: [B=2,C=V_size,D=V_79,E=V_85,V_i_1=V_97+1,V_i_1=F,V_i_1=G+1,0>=V_i3_0,V_166>=V_i3_0] 


#### Cost of loops [39] 

 * loop 39:eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) -> [eval_make_packed_array_bb27_in(V_size',V_79',V_85',V_i_1',B',C',D',E',F')] 
1*s(6)+0
#### Cost of phase [39]:eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) -> [eval_make_packed_array_bb27_in(V_size',V_79',V_85',V_i_1',B',C',D',E',F')] 
1*s(7)+0
#### Cost of loops [38] 

 * loop 38:eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) -> [eval_make_packed_array_bb27_in(V_size',V_79',V_85',V_i_1',B',C',D',E',F')] 
1*s(9)+0
#### Cost of phase [38]:eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F) -> [eval_make_packed_array_bb27_in(V_size',V_79',V_85',V_i_1',B',C',D',E',F')] 
1*s(10)+0
#### Cost of chains of eval_make_packed_array_bb27_in(V_size,V_79,V_85,V_i_1,B,C,D,E,F):
* Chain [[39]]...: 1*s(7)+0
  with precondition: [0>=V_i_1+1] 

* Chain [[38],40]: 1*s(10)+0
  with precondition: [B=4,V_size=C,V_79=D,V_85=E,V_79=F,V_i_1>=1] 

* Chain [40]: 0
  with precondition: [V_i_1=0,B=4,C=V_size,E=V_85,V_79=D,V_79=F] 


#### Cost of loops [42] 

 * loop 42:eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) -> [eval_make_packed_array_bb48_in(V_size',V_79',V_85',V_pad_0',B',C',D',E')] 
1
#### Cost of phase [42]:eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) -> [eval_make_packed_array_bb48_in(V_size',V_79',V_85',V_pad_0',B',C',D',E')] 
1*it(42)+0
#### Cost of loops [41] 

 * loop 41:eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) -> [eval_make_packed_array_bb48_in(V_size',V_79',V_85',V_pad_0',B',C',D',E')] 
1
#### Cost of phase [41]:eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E) -> [eval_make_packed_array_bb48_in(V_size',V_79',V_85',V_pad_0',B',C',D',E')] 
1*it(41)+0
  Such that:it(41) =< V_pad_0
it(41) =< V_pad_0-V_pad_0'

#### Cost of chains of eval_make_packed_array_bb48_in(V_size,V_79,V_85,V_pad_0,B,C,D,E):
* Chain [[42]]...: 1*it(42)+0
  with precondition: [0>=V_pad_0+1,B=3] 

* Chain [[41],43]: 1*it(41)+0
  Such that:it(41) =< V_pad_0

  with precondition: [B=3,V_size=C,V_79=D,V_85=E,V_pad_0>=1] 

* Chain [43]: 0
  with precondition: [V_pad_0=0,B=3,C=V_size,D=V_79,E=V_85] 


#### Cost of chains of loop_cont_eval_make_packed_array_bb27_in(K,A,B,C,D,E):
* Chain [46]: 1
  with precondition: [K=4,D=0] 

* Chain [45]: 1*s(11)+1
  Such that:s(11) =< D

  with precondition: [K=4,D>=1] 

* Chain [44]...: 1*s(12)+1
  with precondition: [K=4,0>=D+1] 


#### Cost of chains of loop_cont_eval_make_packed_array_bb25_in(L,A,B,C,D,E):
* Chain [53]: 2
  with precondition: [L=5,B=0,D=0] 

* Chain [52]: 1*s(13)+2
  with precondition: [L=5,B=0,D>=1] 

* Chain [51]: 1*s(14)+2
  Such that:s(14) =< B

  with precondition: [L=5,D=0,B>=1] 

* Chain [50]: 1*s(15)+1*s(16)+2
  Such that:s(16) =< B

  with precondition: [L=5,B>=1,D>=1] 

* Chain [49]...: 1*s(17)+2
  with precondition: [L=5,D=0,0>=B+1] 

* Chain [48]...: 2*s(18)+2
  with precondition: [L=5,0>=B+1,D>=1] 

* Chain [47]...: 1*s(20)+1
  with precondition: [L=5,0>=D+1] 


#### Cost of chains of eval_make_packed_array_72(V_size,V_skip_0,V_79,V_85,B):
* Chain [61]: 4*s(21)+4*s(22)+4*s(25)+3
  Such that:aux(5) =< V_skip_0
aux(6) =< V_79
s(25) =< aux(5)
s(22) =< aux(6)

  with precondition: [] 

* Chain [60]...: 1*s(33)+3
  with precondition: [V_size=0,V_skip_0=0,0>=V_79+1] 

* Chain [59]...: 1*s(34)+1*s(35)+3
  Such that:s(34) =< V_skip_0

  with precondition: [V_size=0,0>=V_79+1,V_skip_0>=1] 

* Chain [58]...: 1*s(36)+2
  with precondition: [V_skip_0=0,0>=V_size+1] 

* Chain [57]...: 2*s(37)+3
  with precondition: [V_skip_0=0,0>=V_79+1,V_size>=1] 

* Chain [56]...: 1*s(38)+1*s(39)+2
  Such that:s(38) =< V_skip_0

  with precondition: [0>=V_size+1,V_skip_0>=1] 

* Chain [55]...: 1*s(40)+1
  with precondition: [0>=V_skip_0+1] 

* Chain [54]...: 1*s(41)+2*s(42)+3
  Such that:s(41) =< V_skip_0

  with precondition: [0>=V_79+1,V_size>=1,V_skip_0>=1] 


#### Cost of chains of loop_cont_eval_make_packed_array_bb1_in(F,A,B,C,D,E):
* Chain [70]...: 1*s(43)+3
  with precondition: [F=7,A=0,B=0,0>=C+1] 

* Chain [69]...: 1*s(44)+1*s(45)+3
  Such that:s(44) =< B

  with precondition: [F=7,A=0,0>=C+1,B>=1] 

* Chain [68]...: 1*s(46)+2
  with precondition: [F=7,B=0,0>=A+1] 

* Chain [67]...: 2*s(47)+3
  with precondition: [F=7,B=0,0>=C+1,A>=1] 

* Chain [66]...: 1*s(48)+1*s(49)+2
  Such that:s(48) =< B

  with precondition: [F=7,0>=A+1,B>=1] 

* Chain [65]...: 1*s(50)+1
  with precondition: [F=7,0>=B+1] 

* Chain [64]...: 1*s(51)+2*s(52)+3
  Such that:s(51) =< B

  with precondition: [F=7,0>=C+1,A>=1,B>=1] 

* Chain [63]: 0
  with precondition: [F=6] 

* Chain [62]: 4*s(55)+4*s(56)+4*s(57)+3
  Such that:s(53) =< B
s(54) =< C
s(55) =< s(53)
s(56) =< s(54)

  with precondition: [F=7] 


#### Cost of chains of eval_make_packed_array_bb0_in(V_size,B):
* Chain [76]: 1*aux(9)+0
  with precondition: [V_size=0] 

* Chain [75]: 1*s(73)+1
  with precondition: [0>=V_size+1] 

* Chain [74]: 4*s(74)+24*s(79)+4
  Such that:aux(10) =< V_size
s(74) =< aux(10)

  with precondition: [V_size>=1] 

* Chain [73]...: 1*s(88)+4
  with precondition: [V_size=0] 

* Chain [72]...: 1*s(89)+1
  with precondition: [0>=V_size+1] 

* Chain [71]...: 9*s(91)+12*s(92)+4
  Such that:aux(11) =< V_size
s(91) =< aux(11)

  with precondition: [V_size>=1] 


#### Cost of chains of eval_make_packed_array_start(V_size,B):
* Chain [82]: 1*s(107)+0
  with precondition: [V_size=0] 

* Chain [81]: 1*s(108)+1
  with precondition: [0>=V_size+1] 

* Chain [80]: 4*s(110)+24*s(111)+4
  Such that:s(109) =< V_size
s(110) =< s(109)

  with precondition: [V_size>=1] 

* Chain [79]...: 1*s(112)+4
  with precondition: [V_size=0] 

* Chain [78]...: 1*s(113)+1
  with precondition: [0>=V_size+1] 

* Chain [77]...: 9*s(115)+12*s(116)+4
  Such that:s(114) =< V_size
s(115) =< s(114)

  with precondition: [V_size>=1] 


Closed-form bounds of eval_make_packed_array_start(V_size,B): 
-------------------------------------
* Chain [82] with precondition: [V_size=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [81] with precondition: [0>=V_size+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [80] with precondition: [V_size>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [79]... with precondition: [V_size=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [78]... with precondition: [0>=V_size+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [77]... with precondition: [V_size>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_make_packed_array_start(V_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 172 ms.
* Invariants computed in 96 ms.
   - Backward Invariants 48 ms.
   - Transitive Invariants 22 ms.
* Refinement performed in 284 ms.
* Termination proved in 18 ms.
* Upper bounds computed in 163 ms.
   - Equation cost structures 95 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 40 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 862 ms.

