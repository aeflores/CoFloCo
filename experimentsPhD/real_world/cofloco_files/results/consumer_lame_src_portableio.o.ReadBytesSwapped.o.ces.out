Warning: Ignored call to eval_ReadBytesSwapped_stop/1 in equation loop_cont_eval_ReadBytesSwapped_bb3_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ReadBytesSwapped_0/2,eval_ReadBytesSwapped_1/3,eval_ReadBytesSwapped_6/4,eval_ReadBytesSwapped_7/4,eval_ReadBytesSwapped_bb1_in/2]
1. recursive  : [eval_ReadBytesSwapped_bb3_in/1]
2. non_recursive  : [loop_cont_eval_ReadBytesSwapped_bb3_in/2]
3. non_recursive  : [loop_cont_eval_ReadBytesSwapped_bb1_in/2]
4. non_recursive  : [eval_ReadBytesSwapped_bb0_in/2]
5. non_recursive  : [eval_ReadBytesSwapped_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ReadBytesSwapped_bb1_in/2
1. SCC is partially evaluated into eval_ReadBytesSwapped_bb3_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_ReadBytesSwapped_bb1_in/2
4. SCC is partially evaluated into eval_ReadBytesSwapped_bb0_in/2
5. SCC is partially evaluated into eval_ReadBytesSwapped_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ReadBytesSwapped_bb1_in/2 
* CE 7 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 5 is refined into CE [14] 


#### Refined cost equations eval_ReadBytesSwapped_bb1_in/2 
* CE 11: eval_ReadBytesSwapped_bb1_in(V__01,B) = 0
     [V__01>=1,B=3] 
* CE 12: eval_ReadBytesSwapped_bb1_in(V__01,B) = 0
     [0>=V__01,B=3] 
* CE 13: eval_ReadBytesSwapped_bb1_in(V__01,B) = 1+ eval_ReadBytesSwapped_bb1_in(C,B)
     [V__01>=1,V__01=C+1] 
* CE 14: eval_ReadBytesSwapped_bb1_in(V__01,B) = 1+ eval_ReadBytesSwapped_bb1_in(C,B)
     [0>=V__01,V__01=C+1] 

### Cost equations --> "Loop" of eval_ReadBytesSwapped_bb1_in/2 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

#### Loops of eval_ReadBytesSwapped_bb1_in/2 
* Loop 10: eval_ReadBytesSwapped_bb1_in(V__01,B)->  eval_ReadBytesSwapped_bb1_in(V__01',B)
                  [V__01>=1,V__01=V__01'+1] 
* Loop 11: eval_ReadBytesSwapped_bb1_in(V__01,B)->  eval_ReadBytesSwapped_bb1_in(V__01',B)
                  [0>=V__01,V__01=V__01'+1] 
* Loop 12: eval_ReadBytesSwapped_bb1_in(V__01,B) [V__01>=1,B=3] 
* Loop 13: eval_ReadBytesSwapped_bb1_in(V__01,B) [0>=V__01,B=3] 

### Ranking functions of CR eval_ReadBytesSwapped_bb1_in(V__01,B) 
* RF of phase [10]: [V__01]

#### Partial ranking functions of CR eval_ReadBytesSwapped_bb1_in(V__01,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__01


### Resulting Chains:eval_ReadBytesSwapped_bb1_in(V__01,B) 
* [[11]]...
* [[11],13]
* [[10],[11]]...
* [[10],[11],13]
* [[10],13]
* [[10],12]
* [13]
* [12]


### Merging Chains  eval_ReadBytesSwapped_bb1_in/2 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12],[12,[10]],[13,[10]],[13,[11],[10]]] --> 2 
* [[[11]]] --> 3 
* [[[11],[10]]] --> 4 


### Specialization of cost equations eval_ReadBytesSwapped_bb3_in/1 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations eval_ReadBytesSwapped_bb3_in/1 
* CE 15: eval_ReadBytesSwapped_bb3_in(B) = 0
     [B=2] 
* CE 16: eval_ReadBytesSwapped_bb3_in(B) = 1+ eval_ReadBytesSwapped_bb3_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_ReadBytesSwapped_bb3_in/1 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_ReadBytesSwapped_bb3_in/1 
* Loop 14: eval_ReadBytesSwapped_bb3_in(B)->  eval_ReadBytesSwapped_bb3_in(B')
                  [B'=2,B=2] 
* Loop 15: eval_ReadBytesSwapped_bb3_in(B) [B=2] 

### Ranking functions of CR eval_ReadBytesSwapped_bb3_in(B) 

#### Partial ranking functions of CR eval_ReadBytesSwapped_bb3_in(B) 


### Resulting Chains:eval_ReadBytesSwapped_bb3_in(B) 
* [[14]]...
* [[14],15]
* [15]


### Merging Chains  eval_ReadBytesSwapped_bb3_in/1 into  External patterns of execution 
* [[15],[15,[14]]] --> 1 
* [[[14]]] --> 2 


### Specialization of cost equations loop_cont_eval_ReadBytesSwapped_bb1_in/2 
* CE 8 is refined into CE [17,18] 


#### Refined cost equations loop_cont_eval_ReadBytesSwapped_bb1_in/2 
* CE 17: loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) = 1+ eval_ReadBytesSwapped_bb3_in(F):1
     [F=2,E=3] 
* CE 18: loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) = 1+ eval_ReadBytesSwapped_bb3_in(F):2
     [F=2,E=3] 

### Cost equations --> "Loop" of loop_cont_eval_ReadBytesSwapped_bb1_in/2 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of loop_cont_eval_ReadBytesSwapped_bb1_in/2 
* Loop 16: loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) [E=3] 
* Loop 17: loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) [E=3] 

### Ranking functions of CR loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) 

#### Partial ranking functions of CR loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) 


### Resulting Chains:loop_cont_eval_ReadBytesSwapped_bb1_in(E,A) 
* [17]
* [16]...


### Merging Chains  loop_cont_eval_ReadBytesSwapped_bb1_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_ReadBytesSwapped_bb0_in/2 
* CE 3 is refined into CE [19,20,21,22,23,24] 


#### Refined cost equations eval_ReadBytesSwapped_bb0_in/2 
* CE 19: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):1+ loop_cont_eval_ReadBytesSwapped_bb1_in(D,B):1
     [0>=V_n,D=3,C=3] 
* CE 20: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):1+ loop_cont_eval_ReadBytesSwapped_bb1_in(D,B):2
     [0>=V_n,D=3,C=3] 
* CE 21: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):2+ loop_cont_eval_ReadBytesSwapped_bb1_in(D,B):1
     [V_n>=1,D=3,C=3] 
* CE 22: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):2+ loop_cont_eval_ReadBytesSwapped_bb1_in(D,B):2
     [V_n>=1,D=3,C=3] 
* CE 23: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):3
     [0>=V_n] 
* CE 24: eval_ReadBytesSwapped_bb0_in(V_n,B) = 1+ eval_ReadBytesSwapped_bb1_in(V_n,C):4
     [V_n>=1] 

### Cost equations --> "Loop" of eval_ReadBytesSwapped_bb0_in/2 
* CEs [22,24] --> Loop 18 
* CEs [20,23] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [19] --> Loop 21 

#### Loops of eval_ReadBytesSwapped_bb0_in/2 
* Loop 18: eval_ReadBytesSwapped_bb0_in(V_n,B) [V_n>=1] 
* Loop 19: eval_ReadBytesSwapped_bb0_in(V_n,B) [0>=V_n] 
* Loop 20: eval_ReadBytesSwapped_bb0_in(V_n,B) [V_n>=1] 
* Loop 21: eval_ReadBytesSwapped_bb0_in(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_ReadBytesSwapped_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_ReadBytesSwapped_bb0_in(V_n,B) 


### Resulting Chains:eval_ReadBytesSwapped_bb0_in(V_n,B) 
* [21]
* [20]
* [19]...
* [18]...


### Merging Chains  eval_ReadBytesSwapped_bb0_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 
* [[18]] --> 4 


### Specialization of cost equations eval_ReadBytesSwapped_start/2 
* CE 2 is refined into CE [25,26,27,28] 


#### Refined cost equations eval_ReadBytesSwapped_start/2 
* CE 25: eval_ReadBytesSwapped_start(V_n,B) = 0+ eval_ReadBytesSwapped_bb0_in(V_n,B):1
     [0>=V_n] 
* CE 26: eval_ReadBytesSwapped_start(V_n,B) = 0+ eval_ReadBytesSwapped_bb0_in(V_n,B):2
     [V_n>=1] 
* CE 27: eval_ReadBytesSwapped_start(V_n,B) = 0+ eval_ReadBytesSwapped_bb0_in(V_n,B):3
     [0>=V_n] 
* CE 28: eval_ReadBytesSwapped_start(V_n,B) = 0+ eval_ReadBytesSwapped_bb0_in(V_n,B):4
     [V_n>=1] 

### Cost equations --> "Loop" of eval_ReadBytesSwapped_start/2 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of eval_ReadBytesSwapped_start/2 
* Loop 22: eval_ReadBytesSwapped_start(V_n,B) [V_n>=1] 
* Loop 23: eval_ReadBytesSwapped_start(V_n,B) [0>=V_n] 
* Loop 24: eval_ReadBytesSwapped_start(V_n,B) [V_n>=1] 
* Loop 25: eval_ReadBytesSwapped_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_ReadBytesSwapped_start(V_n,B) 

#### Partial ranking functions of CR eval_ReadBytesSwapped_start(V_n,B) 


### Resulting Chains:eval_ReadBytesSwapped_start(V_n,B) 
* [25]
* [24]
* [23]...
* [22]...


### Merging Chains  eval_ReadBytesSwapped_start/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 
* [[22]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1
#### Cost of phase [11]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(11)+0
#### Cost of phase [11]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(11)+0
#### Cost of loops [10] 

 * loop 10:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1
#### Cost of phase [10]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of phase [10]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of phase [10]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of phase [10]:eval_ReadBytesSwapped_bb1_in(V__01,B) -> [eval_ReadBytesSwapped_bb1_in(V__01',B')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of chains of eval_ReadBytesSwapped_bb1_in(V__01,B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [0>=V__01] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=3,0>=V__01] 

* Chain [[10],[11]]...: 1*it(10)+1*it(11)+0
  Such that:it(10) =< V__01

  with precondition: [V__01>=1] 

* Chain [[10],[11],13]: 1*it(10)+1*it(11)+0
  Such that:it(10) =< V__01

  with precondition: [B=3,V__01>=1] 

* Chain [[10],13]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [B=3,V__01>=1] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [B=3,V__01>=2] 

* Chain [13]: 0
  with precondition: [B=3,0>=V__01] 

* Chain [12]: 0
  with precondition: [B=3,V__01>=1] 


#### Cost of loops [14] 

 * loop 14:eval_ReadBytesSwapped_bb3_in(B) -> [eval_ReadBytesSwapped_bb3_in(B')] 
1
#### Cost of phase [14]:eval_ReadBytesSwapped_bb3_in(B) -> [eval_ReadBytesSwapped_bb3_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_ReadBytesSwapped_bb3_in(B) -> [eval_ReadBytesSwapped_bb3_in(B')] 
1*it(14)+0
#### Cost of chains of eval_ReadBytesSwapped_bb3_in(B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_ReadBytesSwapped_bb1_in(E,A):
* Chain [17]: 1*s(7)+1
  with precondition: [E=3] 

* Chain [16]...: 1*s(8)+1
  with precondition: [E=3] 


#### Cost of chains of eval_ReadBytesSwapped_bb0_in(V_n,B):
* Chain [21]: 2*s(9)+2
  with precondition: [0>=V_n] 

* Chain [20]: 3*s(12)+2*s(13)+2
  Such that:s(11) =< V_n
s(12) =< s(11)

  with precondition: [V_n>=1] 

* Chain [19]...: 1*aux(4)+0
  with precondition: [0>=V_n] 

* Chain [18]...: 4*s(19)+3*s(20)+2
  Such that:aux(5) =< V_n
s(19) =< aux(5)

  with precondition: [V_n>=1] 


#### Cost of chains of eval_ReadBytesSwapped_start(V_n,B):
* Chain [25]: 2*s(24)+2
  with precondition: [0>=V_n] 

* Chain [24]: 3*s(26)+2*s(27)+2
  Such that:s(25) =< V_n
s(26) =< s(25)

  with precondition: [V_n>=1] 

* Chain [23]...: 1*s(28)+0
  with precondition: [0>=V_n] 

* Chain [22]...: 4*s(30)+3*s(31)+2
  Such that:s(29) =< V_n
s(30) =< s(29)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_ReadBytesSwapped_start(V_n,B): 
-------------------------------------
* Chain [25] with precondition: [0>=V_n] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24] with precondition: [V_n>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [0>=V_n] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [V_n>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ReadBytesSwapped_start(V_n,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 20 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 97 ms.

