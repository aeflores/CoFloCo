Warning: Ignored call to eval_treeoutput_stop/1 in equation eval_treeoutput_bb53_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_treeoutput_bb53_in/1]
1. non_recursive  : [eval_treeoutput_8/1]
2. non_recursive  : [eval_treeoutput_7/6]
3. recursive  : [eval_treeoutput_bb23_in/11]
4. recursive  : [eval_treeoutput_44/11,eval_treeoutput_45/11,eval_treeoutput_bb20_in/11,eval_treeoutput_bb25_in/11,loop_cont_eval_treeoutput_bb23_in/12]
5. recursive  : [eval_treeoutput_bb19_in/11,loop_cont_eval_treeoutput_bb20_in/12]
6. recursive  : [eval_treeoutput_bb38_in/13]
7. recursive  : [eval_treeoutput_bb35_in/13,eval_treeoutput_bb40_in/13,loop_cont_eval_treeoutput_bb38_in/14]
8. recursive  : [eval_treeoutput_bb34_in/13,loop_cont_eval_treeoutput_bb35_in/14]
9. recursive  : [eval_treeoutput_58/6,eval_treeoutput_59/6,eval_treeoutput_bb28_in/6,eval_treeoutput_bb33_in/6]
10. non_recursive  : [loop_cont_eval_treeoutput_bb28_in/2]
11. non_recursive  : [loop_cont_eval_treeoutput_bb19_in/7]
12. recursive  : [eval_treeoutput_bb43_in/14,eval_treeoutput_bb48_in/14]
13. recursive  : [eval_treeoutput_84/13,eval_treeoutput_85/13,eval_treeoutput_bb50_in/12]
14. non_recursive  : [eval_treeoutput_89/1]
15. non_recursive  : [eval_treeoutput_88/6]
16. non_recursive  : [eval_treeoutput_87/6]
17. non_recursive  : [eval_treeoutput_86/6]
18. non_recursive  : [loop_cont_eval_treeoutput_bb50_in/7]
19. non_recursive  : [eval_treeoutput_81/7]
20. non_recursive  : [eval_treeoutput_80/8]
21. non_recursive  : [loop_cont_eval_treeoutput_bb43_in/9]
22. non_recursive  : [loop_cont_eval_treeoutput_bb34_in/8]
23. non_recursive  : [eval_treeoutput_bb18_in/7]
24. recursive  : [eval_treeoutput_bb9_in/16]
25. recursive  : [eval_treeoutput_bb7_in/14,loop_cont_eval_treeoutput_bb9_in/15]
26. recursive  : [eval_treeoutput_bb6_in/13,loop_cont_eval_treeoutput_bb7_in/14]
27. recursive  : [eval_treeoutput_bb12_in/14,eval_treeoutput_bb16_in/15]
28. non_recursive  : [eval_treeoutput_37/7]
29. non_recursive  : [eval_treeoutput_36/8]
30. non_recursive  : [loop_cont_eval_treeoutput_bb12_in/9]
31. non_recursive  : [loop_cont_eval_treeoutput_bb6_in/8]
32. non_recursive  : [eval_treeoutput_3/6]
33. non_recursive  : [eval_treeoutput_2/6]
34. non_recursive  : [eval_treeoutput_bb0_in/6]
35. non_recursive  : [eval_treeoutput_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_treeoutput_bb23_in/11
4. SCC is partially evaluated into eval_treeoutput_bb20_in/11
5. SCC is partially evaluated into eval_treeoutput_bb19_in/11
6. SCC is partially evaluated into eval_treeoutput_bb38_in/13
7. SCC is partially evaluated into eval_treeoutput_bb35_in/13
8. SCC is partially evaluated into eval_treeoutput_bb34_in/13
9. SCC is partially evaluated into eval_treeoutput_bb28_in/6
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_treeoutput_bb19_in/7
12. SCC is partially evaluated into eval_treeoutput_bb43_in/14
13. SCC is partially evaluated into eval_treeoutput_bb50_in/12
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_treeoutput_81/7
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into loop_cont_eval_treeoutput_bb34_in/8
23. SCC is partially evaluated into eval_treeoutput_bb18_in/7
24. SCC is partially evaluated into eval_treeoutput_bb9_in/16
25. SCC is partially evaluated into eval_treeoutput_bb7_in/14
26. SCC is partially evaluated into eval_treeoutput_bb6_in/13
27. SCC is partially evaluated into eval_treeoutput_bb12_in/14
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into loop_cont_eval_treeoutput_bb6_in/8
32. SCC is partially evaluated into eval_treeoutput_3/6
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_treeoutput_bb0_in/6
35. SCC is partially evaluated into eval_treeoutput_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_treeoutput_bb23_in/11 
* CE 39 is refined into CE [44] 
* CE 38 is refined into CE [45] 


#### Refined cost equations eval_treeoutput_bb23_in/11 
* CE 44: eval_treeoutput_bb23_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=6] 
* CE 45: eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 1+ eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,C,D,E,F,G)
     [H=6,B=6] 

### Cost equations --> "Loop" of eval_treeoutput_bb23_in/11 
* CEs [45] --> Loop 36 
* CEs [44] --> Loop 37 

#### Loops of eval_treeoutput_bb23_in/11 
* Loop 36: eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G)->  eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B',C,D,E,F,G)
                  [B'=6,B=6] 
* Loop 37: eval_treeoutput_bb23_in(A,B,C,D,E,F,A,B,C,D,E) [F=6] 

### Ranking functions of CR eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 


### Resulting Chains:eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 
* [[36]]...
* [[36],37]
* [37]


### Merging Chains  eval_treeoutput_bb23_in/11 into  External patterns of execution 
* [[37],[37,[36]]] --> 1 
* [[[36]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb20_in/11 
* CE 27 is refined into CE [46] 
* CE 25 is refined into CE [47,48] 
* CE 26 is refined into CE [49] 


#### Refined cost equations eval_treeoutput_bb20_in/11 
* CE 46: eval_treeoutput_bb20_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=7] 
* CE 47: eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 2+ eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):1+ eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,I,C,D,E,F,G)
     [I=7,H=6,B=7] 
* CE 48: eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 2+ eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,I,J,K,L,M):2
     [N=7,H=6,B=7] 
* CE 49: eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 1+ eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,C,D,E,F,G)
     [H=7,B=7] 

### Cost equations --> "Loop" of eval_treeoutput_bb20_in/11 
* CEs [47,49] --> Loop 38 
* CEs [48] --> Loop 39 
* CEs [46] --> Loop 40 

#### Loops of eval_treeoutput_bb20_in/11 
* Loop 38: eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G)->  eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B',C,D,E,F,G)
                  [B'=7,B=7] 
* Loop 39: eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) [B=7] 
* Loop 40: eval_treeoutput_bb20_in(A,B,C,D,E,F,A,B,C,D,E) [F=7] 

### Ranking functions of CR eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 


### Resulting Chains:eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 
* [[38]]...
* [[38],40]
* [[38],39]...
* [40]
* [39]...


### Merging Chains  eval_treeoutput_bb20_in/11 into  External patterns of execution 
* [[40],[40,[38]]] --> 1 
* [[39],[[38]],[39,[38]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb19_in/11 
* CE 14 is refined into CE [50] 
* CE 13 is refined into CE [51,52] 


#### Refined cost equations eval_treeoutput_bb19_in/11 
* CE 50: eval_treeoutput_bb19_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=13] 
* CE 51: eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 2+ eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):1+ eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G)
     [H=7] 
* CE 52: eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) = 2+ eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,I,J,K,L,M):2
     [H=7] 

### Cost equations --> "Loop" of eval_treeoutput_bb19_in/11 
* CEs [52] --> Loop 41 
* CEs [51] --> Loop 42 
* CEs [50] --> Loop 43 

#### Loops of eval_treeoutput_bb19_in/11 
* Loop 41: eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) [] 
* Loop 42: eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G)->  eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G)
                  [] 
* Loop 43: eval_treeoutput_bb19_in(A,B,C,D,E,F,A,B,C,D,E) [F=13] 

### Ranking functions of CR eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 


### Resulting Chains:eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) 
* [[42]]...
* [[42],43]
* [[42],41]...
* [43]
* [41]...


### Merging Chains  eval_treeoutput_bb19_in/11 into  External patterns of execution 
* [[43],[43,[42]]] --> 1 
* [[41],[[42]],[41,[42]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb38_in/13 
* CE 41 is refined into CE [53] 
* CE 40 is refined into CE [54] 


#### Refined cost equations eval_treeoutput_bb38_in/13 
* CE 53: eval_treeoutput_bb38_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=4] 
* CE 54: eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 1+ eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,I,C,D,E,F,G,H)
     [I=4,B=4] 

### Cost equations --> "Loop" of eval_treeoutput_bb38_in/13 
* CEs [54] --> Loop 44 
* CEs [53] --> Loop 45 

#### Loops of eval_treeoutput_bb38_in/13 
* Loop 44: eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H)->  eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B',C,D,E,F,G,H)
                  [B'=4,B=4] 
* Loop 45: eval_treeoutput_bb38_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=4] 

### Ranking functions of CR eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 


### Resulting Chains:eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 
* [[44]]...
* [[44],45]
* [45]


### Merging Chains  eval_treeoutput_bb38_in/13 into  External patterns of execution 
* [[45],[45,[44]]] --> 1 
* [[[44]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb35_in/13 
* CE 32 is refined into CE [55] 
* CE 30 is refined into CE [56,57] 
* CE 31 is refined into CE [58] 


#### Refined cost equations eval_treeoutput_bb35_in/13 
* CE 55: eval_treeoutput_bb35_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=5] 
* CE 56: eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb38_in(I,J,K,L,M,V_pdictsize_6,N,I,J,K,L,M,V_pdictsize_6):1+ eval_treeoutput_bb35_in(I,J,K,L,M,V_pdictsize_6,O,C,D,E,F,G,H)
     [O=5,N=4,B=5] 
* CE 57: eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb38_in(I,J,K,L,M,V_pdictsize_6,N,O,P,Q,R,S,T):2
     [U=5,N=4,B=5] 
* CE 58: eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 1+ eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,I,C,D,E,F,G,H)
     [I=5,B=5] 

### Cost equations --> "Loop" of eval_treeoutput_bb35_in/13 
* CEs [56,58] --> Loop 46 
* CEs [57] --> Loop 47 
* CEs [55] --> Loop 48 

#### Loops of eval_treeoutput_bb35_in/13 
* Loop 46: eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H)->  eval_treeoutput_bb35_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6,B',C,D,E,F,G,H)
                  [B'=5,B=5] 
* Loop 47: eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) [B=5] 
* Loop 48: eval_treeoutput_bb35_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=5] 

### Ranking functions of CR eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 


### Resulting Chains:eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 
* [[46]]...
* [[46],48]
* [[46],47]...
* [48]
* [47]...


### Merging Chains  eval_treeoutput_bb35_in/13 into  External patterns of execution 
* [[48],[48,[46]]] --> 1 
* [[47],[[46]],[47,[46]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb34_in/13 
* CE 17 is refined into CE [59] 
* CE 16 is refined into CE [60,61] 


#### Refined cost equations eval_treeoutput_bb34_in/13 
* CE 59: eval_treeoutput_bb34_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=11] 
* CE 60: eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,I,J,K,L,M,N,V_pdictsize_6):1+ eval_treeoutput_bb34_in(J,K,L,M,N,V_pdictsize_6,B,C,D,E,F,G,H)
     [I=5] 
* CE 61: eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,I,J,K,L,M,N,O):2
     [I=5] 

### Cost equations --> "Loop" of eval_treeoutput_bb34_in/13 
* CEs [61] --> Loop 49 
* CEs [60] --> Loop 50 
* CEs [59] --> Loop 51 

#### Loops of eval_treeoutput_bb34_in/13 
* Loop 49: eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) [] 
* Loop 50: eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H)->  eval_treeoutput_bb34_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6,B,C,D,E,F,G,H)
                  [] 
* Loop 51: eval_treeoutput_bb34_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=11] 

### Ranking functions of CR eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 


### Resulting Chains:eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) 
* [[50]]...
* [[50],51]
* [[50],49]...
* [51]
* [49]...


### Merging Chains  eval_treeoutput_bb34_in/13 into  External patterns of execution 
* [[51],[51,[50]]] --> 1 
* [[49],[[50]],[49,[50]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb28_in/6 
* CE 29 is refined into CE [62] 
* CE 28 is refined into CE [63] 


#### Refined cost equations eval_treeoutput_bb28_in/6 
* CE 62: eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0
     [B=12] 
* CE 63: eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 1+ eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C)
     [C=12,B=12] 

### Cost equations --> "Loop" of eval_treeoutput_bb28_in/6 
* CEs [63] --> Loop 52 
* CEs [62] --> Loop 53 

#### Loops of eval_treeoutput_bb28_in/6 
* Loop 52: eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B)->  eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B')
                  [B'=12,B=12] 
* Loop 53: eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [B=12] 

### Ranking functions of CR eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 

#### Partial ranking functions of CR eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 


### Resulting Chains:eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 
* [[52]]...
* [[52],53]
* [53]


### Merging Chains  eval_treeoutput_bb28_in/6 into  External patterns of execution 
* [[53],[53,[52]]] --> 1 
* [[[52]]] --> 2 


### Specialization of cost equations loop_cont_eval_treeoutput_bb19_in/7 
* CE 15 is refined into CE [64,65] 


#### Refined cost equations loop_cont_eval_treeoutput_bb19_in/7 
* CE 64: loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) = 1+ eval_treeoutput_bb28_in(A,B,C,D,E,I):1
     [I=12,H=13] 
* CE 65: loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) = 1+ eval_treeoutput_bb28_in(A,B,C,D,E,I):2
     [I=12,H=13] 

### Cost equations --> "Loop" of loop_cont_eval_treeoutput_bb19_in/7 
* CEs [65] --> Loop 54 
* CEs [64] --> Loop 55 

#### Loops of loop_cont_eval_treeoutput_bb19_in/7 
* Loop 54: loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) [H=13] 
* Loop 55: loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) [H=13] 

### Ranking functions of CR loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) 

#### Partial ranking functions of CR loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) 


### Resulting Chains:loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F) 
* [55]
* [54]...


### Merging Chains  loop_cont_eval_treeoutput_bb19_in/7 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


### Specialization of cost equations eval_treeoutput_bb43_in/14 
* CE 34 is refined into CE [66] 
* CE 33 is refined into CE [67] 


#### Refined cost equations eval_treeoutput_bb43_in/14 
* CE 66: eval_treeoutput_bb43_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) = 0
     [G=10] 
* CE 67: eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) = 1+ eval_treeoutput_bb43_in(J,K,L,M,N,V_pdictsize_6,O,C,D,E,F,G,H,I)
     [O=10,B=10] 

### Cost equations --> "Loop" of eval_treeoutput_bb43_in/14 
* CEs [67] --> Loop 56 
* CEs [66] --> Loop 57 

#### Loops of eval_treeoutput_bb43_in/14 
* Loop 56: eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I)->  eval_treeoutput_bb43_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6,B',C,D,E,F,G,H,I)
                  [B'=10,B=10] 
* Loop 57: eval_treeoutput_bb43_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) [G=10] 

### Ranking functions of CR eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) 
* [[56]]...
* [[56],57]
* [57]


### Merging Chains  eval_treeoutput_bb43_in/14 into  External patterns of execution 
* [[57],[57,[56]]] --> 1 
* [[[56]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb50_in/12 
* CE 43 is refined into CE [68] 
* CE 42 is refined into CE [69] 


#### Refined cost equations eval_treeoutput_bb50_in/12 
* CE 68: eval_treeoutput_bb50_in(A,B,C,D,E,F,G,A,B,C,D,E) = 0
     [0>=F,G=9] 
* CE 69: eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) = 1+ eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,H,I,C,D,E,F,G)
     [V_pdictsize_7>=1,V_pdictsize_7=H+1,I=9,B=9] 

### Cost equations --> "Loop" of eval_treeoutput_bb50_in/12 
* CEs [69] --> Loop 58 
* CEs [68] --> Loop 59 

#### Loops of eval_treeoutput_bb50_in/12 
* Loop 58: eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G)->  eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7',B',C,D,E,F,G)
                  [V_pdictsize_7>=1,V_pdictsize_7=V_pdictsize_7'+1,B'=9,B=9] 
* Loop 59: eval_treeoutput_bb50_in(A,B,C,D,E,F,G,A,B,C,D,E) [0>=F,G=9] 

### Ranking functions of CR eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) 
* RF of phase [58]: [V_pdictsize_7]

#### Partial ranking functions of CR eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) 
* Partial RF of phase [58]:
  - RF of loop [58:1]:
    V_pdictsize_7


### Resulting Chains:eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) 
* [[58],59]
* [59]


### Merging Chains  eval_treeoutput_bb50_in/12 into  External patterns of execution 
* [[59]] --> 1 
* [[59,[58]]] --> 2 


### Specialization of cost equations eval_treeoutput_81/7 
* CE 35 is refined into CE [70,71] 


#### Refined cost equations eval_treeoutput_81/7 
* CE 70: eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):1
     [0>=V_pdictsize_6,C=9] 
* CE 71: eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):2
     [V_pdictsize_6>=1,C=9] 

### Cost equations --> "Loop" of eval_treeoutput_81/7 
* CEs [71] --> Loop 60 
* CEs [70] --> Loop 61 

#### Loops of eval_treeoutput_81/7 
* Loop 60: eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) [V_pdictsize_6>=1] 
* Loop 61: eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) [0>=V_pdictsize_6] 

### Ranking functions of CR eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 

#### Partial ranking functions of CR eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 


### Resulting Chains:eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 
* [61]
* [60]


### Merging Chains  eval_treeoutput_81/7 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 


### Specialization of cost equations loop_cont_eval_treeoutput_bb34_in/8 
* CE 18 is refined into CE [72,73,74] 


#### Refined cost equations loop_cont_eval_treeoutput_bb34_in/8 
* CE 72: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb43_in(A,B,C,D,E,F,Q,R,S,T,U,V,F,F):1+ eval_treeoutput_81(R,S,T,U,V,F,G):1
     [0>=F,Q=10,P=11] 
* CE 73: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb43_in(A,B,C,D,E,F,Q,R,S,T,U,V,F,F):1+ eval_treeoutput_81(R,S,T,U,V,F,G):2
     [F>=1,Q=10,P=11] 
* CE 74: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb43_in(A,B,C,D,E,F,Q,R,S,T,U,V,W,X):2
     [Q=10,P=11] 

### Cost equations --> "Loop" of loop_cont_eval_treeoutput_bb34_in/8 
* CEs [74] --> Loop 62 
* CEs [73] --> Loop 63 
* CEs [72] --> Loop 64 

#### Loops of loop_cont_eval_treeoutput_bb34_in/8 
* Loop 62: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) [P=11] 
* Loop 63: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) [F>=1,P=11] 
* Loop 64: loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) [0>=F,P=11] 

### Ranking functions of CR loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G) 
* [64]
* [63]
* [62]...


### Merging Chains  loop_cont_eval_treeoutput_bb34_in/8 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 
* [[62]] --> 3 


### Specialization of cost equations eval_treeoutput_bb18_in/7 
* CE 8 is refined into CE [75,76,77] 
* CE 9 is refined into CE [78,79,80,81] 


#### Refined cost equations eval_treeoutput_bb18_in/7 
* CE 75: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):1+ loop_cont_eval_treeoutput_bb19_in(D,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):1
     [D=13,C=13] 
* CE 76: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize):1+ loop_cont_eval_treeoutput_bb19_in(D,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):2
     [D=13,C=13] 
* CE 77: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,D,E,F,G,H):2
     [] 
* CE 78: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,D,E,F,G,H,V_pdictsize_6):1+ loop_cont_eval_treeoutput_bb34_in(I,D,E,F,G,H,V_pdictsize_6,B):1
     [0>=V_pdictsize_6,I=11,C=11] 
* CE 79: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,D,E,F,G,H,V_pdictsize_6):1+ loop_cont_eval_treeoutput_bb34_in(I,D,E,F,G,H,V_pdictsize_6,B):2
     [V_pdictsize_6>=1,I=11,C=11] 
* CE 80: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,D,E,F,G,H,V_pdictsize_6):1+ loop_cont_eval_treeoutput_bb34_in(I,D,E,F,G,H,V_pdictsize_6,B):3
     [I=11,C=11] 
* CE 81: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) = 1+ eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,C,D,E,F,G,H,I):2
     [] 

### Cost equations --> "Loop" of eval_treeoutput_bb18_in/7 
* CEs [76,77,80,81] --> Loop 65 
* CEs [75,78,79] --> Loop 66 

#### Loops of eval_treeoutput_bb18_in/7 
* Loop 65: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) [] 
* Loop 66: eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) [] 

### Ranking functions of CR eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 

#### Partial ranking functions of CR eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 


### Resulting Chains:eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B) 
* [66]
* [65]...


### Merging Chains  eval_treeoutput_bb18_in/7 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 


### Specialization of cost equations eval_treeoutput_bb9_in/16 
* CE 37 is refined into CE [82] 
* CE 36 is refined into CE [83] 


#### Refined cost equations eval_treeoutput_bb9_in/16 
* CE 82: eval_treeoutput_bb9_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,H) = 0
     [G+1>=H,H>=G,I=2] 
* CE 83: eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) = 1+ eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,J,C,D,E,F,G,H,I)
     [V_pdictsize_1+1>=V__pdictsize_1,V__pdictsize_1>=V_pdictsize_1,J=2,B=2] 

### Cost equations --> "Loop" of eval_treeoutput_bb9_in/16 
* CEs [83] --> Loop 67 
* CEs [82] --> Loop 68 

#### Loops of eval_treeoutput_bb9_in/16 
* Loop 67: eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I)->  eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B',C,D,E,F,G,H,I)
                  [V_pdictsize_1+1>=V__pdictsize_1,V__pdictsize_1>=V_pdictsize_1,B'=2,B=2] 
* Loop 68: eval_treeoutput_bb9_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,H) [G+1>=H,H>=G,I=2] 

### Ranking functions of CR eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) 
* [[67]]...
* [[67],68]
* [68]


### Merging Chains  eval_treeoutput_bb9_in/16 into  External patterns of execution 
* [[68],[68,[67]]] --> 1 
* [[[67]]] --> 2 


### Specialization of cost equations eval_treeoutput_bb7_in/14 
* CE 21 is refined into CE [84] 
* CE 19 is refined into CE [85,86] 
* CE 20 is refined into CE [87,88] 


#### Refined cost equations eval_treeoutput_bb7_in/14 
* CE 84: eval_treeoutput_bb7_in(A,B,C,D,E,F,G,H,A,B,C,D,E,G) = 0
     [H=3] 
* CE 85: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V_pdictsize_1,I,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1):1+ eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,J,C,D,E,F,G,H)
     [J=3,I=2,B=3] 
* CE 86: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V_pdictsize_1,I,J,K,L,M,N,O,P):2
     [Q=3,I=2,B=3] 
* CE 87: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,I,J,K,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,J):1+ eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,J,L,C,D,E,F,G,H)
     [J=I+1,J=V_pdictsize_1+1,L=3,K=2,B=3] 
* CE 88: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,I,J,K,L,M,N,O,P,Q):2
     [V_pdictsize_1+1=I,R=3,J=2,B=3] 

### Cost equations --> "Loop" of eval_treeoutput_bb7_in/14 
* CEs [86,88] --> Loop 69 
* CEs [85] --> Loop 70 
* CEs [87] --> Loop 71 
* CEs [84] --> Loop 72 

#### Loops of eval_treeoutput_bb7_in/14 
* Loop 69: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) [B=3] 
* Loop 70: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H)->  eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B',C,D,E,F,G,H)
                  [B'=3,B=3] 
* Loop 71: eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H)->  eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1',B',C,D,E,F,G,H)
                  [V_pdictsize_1+1=V_pdictsize_1',B'=3,B=3] 
* Loop 72: eval_treeoutput_bb7_in(A,B,C,D,E,F,G,H,A,B,C,D,E,G) [H=3] 

### Ranking functions of CR eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) 


### Resulting Chains:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) 
* [[70,71]]...
* [[70,71],72]
* [[70,71],69]...
* [72]
* [69]...


### Merging Chains  eval_treeoutput_bb7_in/14 into  External patterns of execution 
* [[72],[72,[70,71]]] --> 1 
* [[[70,71]]] --> 2 
* [[69],[69,[70,71]]] --> 3 


### Specialization of cost equations eval_treeoutput_bb6_in/13 
* CE 11 is refined into CE [89] 
* CE 10 is refined into CE [90,91,92] 


#### Refined cost equations eval_treeoutput_bb6_in/13 
* CE 89: eval_treeoutput_bb6_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=8] 
* CE 90: eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_0,I,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,J):1+ eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,J,B,C,D,E,F,G,H)
     [J>=V_pdictsize_0,I=3] 
* CE 91: eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_0,I,J,K,L,M,N,O):2
     [I=3] 
* CE 92: eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) = 2+ eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_0,I,J,K,L,M,N,O):3
     [I=3] 

### Cost equations --> "Loop" of eval_treeoutput_bb6_in/13 
* CEs [91,92] --> Loop 73 
* CEs [90] --> Loop 74 
* CEs [89] --> Loop 75 

#### Loops of eval_treeoutput_bb6_in/13 
* Loop 73: eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) [] 
* Loop 74: eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H)->  eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0',B,C,D,E,F,G,H)
                  [V_pdictsize_0'>=V_pdictsize_0] 
* Loop 75: eval_treeoutput_bb6_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=8] 

### Ranking functions of CR eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) 
* [[74]]...
* [[74],75]
* [[74],73]...
* [75]
* [73]...


### Merging Chains  eval_treeoutput_bb6_in/13 into  External patterns of execution 
* [[75],[75,[74]]] --> 1 
* [[[74]]] --> 2 
* [[73],[73,[74]]] --> 3 


### Specialization of cost equations eval_treeoutput_bb12_in/14 
* CE 24 is refined into CE [93] 
* CE 22 is refined into CE [94] 
* CE 23 is refined into CE [95] 


#### Refined cost equations eval_treeoutput_bb12_in/14 
* CE 93: eval_treeoutput_bb12_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) = 0
     [24*F=H,G=14] 
* CE 94: eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) = 1+ eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,J,C,D,E,F,G,H,I)
     [J=14,B=14] 
* CE 95: eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) = 1+ eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,J,K,C,D,E,F,G,H,I)
     [J=V_pdictsize_3+1,K=14,B=14] 

### Cost equations --> "Loop" of eval_treeoutput_bb12_in/14 
* CEs [94] --> Loop 76 
* CEs [95] --> Loop 77 
* CEs [93] --> Loop 78 

#### Loops of eval_treeoutput_bb12_in/14 
* Loop 76: eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I)->  eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B',C,D,E,F,G,H,I)
                  [B'=14,B=14] 
* Loop 77: eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I)->  eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3',B',C,D,E,F,G,H,I)
                  [V_pdictsize_3+1=V_pdictsize_3',B'=14,B=14] 
* Loop 78: eval_treeoutput_bb12_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) [24*F=H,G=14] 

### Ranking functions of CR eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) 
* [[76,77]]...
* [[76,77],78]
* [78]


### Merging Chains  eval_treeoutput_bb12_in/14 into  External patterns of execution 
* [[78],[78,[76,77]]] --> 1 
* [[[76,77]]] --> 2 


### Specialization of cost equations loop_cont_eval_treeoutput_bb6_in/8 
* CE 12 is refined into CE [96,97,98] 


#### Refined cost equations loop_cont_eval_treeoutput_bb6_in/8 
* CE 96: loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb12_in(A,B,C,D,E,F,Q,A,B,C,D,E,R,S):1+ eval_treeoutput_bb18_in(A,B,C,D,E,T,G):1
     [S>=24*F,S=24*T,S=24*R,Q=14,P=8] 
* CE 97: loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb12_in(A,B,C,D,E,F,Q,A,B,C,D,E,R,S):1+ eval_treeoutput_bb18_in(A,B,C,D,E,T,G):2
     [S>=24*F,S=24*T,S=24*R,Q=14,P=8] 
* CE 98: loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) = 1+ eval_treeoutput_bb12_in(A,B,C,D,E,F,Q,R,S,T,U,V,W,X):2
     [Q=14,P=8] 

### Cost equations --> "Loop" of loop_cont_eval_treeoutput_bb6_in/8 
* CEs [97,98] --> Loop 79 
* CEs [96] --> Loop 80 

#### Loops of loop_cont_eval_treeoutput_bb6_in/8 
* Loop 79: loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) [P=8] 
* Loop 80: loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) [P=8] 

### Ranking functions of CR loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G) 
* [80]
* [79]...


### Merging Chains  loop_cont_eval_treeoutput_bb6_in/8 into  External patterns of execution 
* [[80]] --> 1 
* [[79]] --> 2 


### Specialization of cost equations eval_treeoutput_3/6 
* CE 5 is refined into CE [99] 
* CE 6 is refined into CE [100,101] 
* CE 7 is refined into CE [102,103,104,105] 


#### Refined cost equations eval_treeoutput_3/6 
* CE 99: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0
     [] 
* CE 100: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,B):1
     [C=0] 
* CE 101: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,B):2
     [C=0] 
* CE 102: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 1+ eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,D,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,E):1+ loop_cont_eval_treeoutput_bb6_in(F,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,E,B):1
     [E>=0,F=8,D=8,C=0] 
* CE 103: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 1+ eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,D,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,E):1+ loop_cont_eval_treeoutput_bb6_in(F,V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,E,B):2
     [E>=0,F=8,D=8,C=0] 
* CE 104: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 1+ eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,D,E,F,G,H,I,J):2
     [C=0] 
* CE 105: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 1+ eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,C,D,E,F,G,H,I,J):3
     [C=0] 

### Cost equations --> "Loop" of eval_treeoutput_3/6 
* CEs [101,103,104,105] --> Loop 81 
* CEs [99,100,102] --> Loop 82 

#### Loops of eval_treeoutput_3/6 
* Loop 81: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 
* Loop 82: eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 

### Ranking functions of CR eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 

#### Partial ranking functions of CR eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 


### Resulting Chains:eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 
* [82]
* [81]...


### Merging Chains  eval_treeoutput_3/6 into  External patterns of execution 
* [[82]] --> 1 
* [[81]] --> 2 


### Specialization of cost equations eval_treeoutput_bb0_in/6 
* CE 3 is refined into CE [106] 
* CE 4 is refined into CE [107,108] 


#### Refined cost equations eval_treeoutput_bb0_in/6 
* CE 106: eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0
     [] 
* CE 107: eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):1
     [] 
* CE 108: eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):2
     [] 

### Cost equations --> "Loop" of eval_treeoutput_bb0_in/6 
* CEs [108] --> Loop 83 
* CEs [106,107] --> Loop 84 

#### Loops of eval_treeoutput_bb0_in/6 
* Loop 83: eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 
* Loop 84: eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 

### Ranking functions of CR eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 

#### Partial ranking functions of CR eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 


### Resulting Chains:eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 
* [84]
* [83]...


### Merging Chains  eval_treeoutput_bb0_in/6 into  External patterns of execution 
* [[84]] --> 1 
* [[83]] --> 2 


### Specialization of cost equations eval_treeoutput_start/6 
* CE 2 is refined into CE [109,110] 


#### Refined cost equations eval_treeoutput_start/6 
* CE 109: eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):1
     [] 
* CE 110: eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) = 0+ eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):2
     [] 

### Cost equations --> "Loop" of eval_treeoutput_start/6 
* CEs [110] --> Loop 85 
* CEs [109] --> Loop 86 

#### Loops of eval_treeoutput_start/6 
* Loop 85: eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 
* Loop 86: eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) [] 

### Ranking functions of CR eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 

#### Partial ranking functions of CR eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 


### Resulting Chains:eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) 
* [86]
* [85]...


### Merging Chains  eval_treeoutput_start/6 into  External patterns of execution 
* [[86]] --> 1 
* [[85]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [36] 

 * loop 36:eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb23_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1
#### Cost of phase [36]:eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb23_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*it(36)+0
#### Cost of phase [36]:eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb23_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*it(36)+0
#### Cost of chains of eval_treeoutput_bb23_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G):
* Chain [[36]]...: 1*it(36)+0
  with precondition: [B=6] 

* Chain [[36],37]: 1*it(36)+0
  with precondition: [B=6,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G] 

* Chain [37]: 0
  with precondition: [B=6,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize] 


#### Cost of loops [38] 

 * loop 38:eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb20_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*s(3)+0
#### Cost of phase [38]:eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb20_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*s(4)+0
#### Cost of phase [38]:eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb20_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*s(4)+0
#### Cost of phase [38]:eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb20_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*s(4)+0
#### Cost of chains of eval_treeoutput_bb20_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G):
* Chain [[38]]...: 1*s(4)+0
  with precondition: [B=7] 

* Chain [[38],40]: 1*s(4)+0
  with precondition: [B=7,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G] 

* Chain [[38],39]...: 2*s(4)+2
  with precondition: [B=7] 

* Chain [40]: 0
  with precondition: [B=7,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize] 

* Chain [39]...: 1*s(5)+2
  with precondition: [B=7] 


#### Cost of loops [42] 

 * loop 42:eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb19_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
1*s(11)+2
#### Cost of phase [42]:eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb19_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
3*it(42)+0
#### Cost of phase [42]:eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb19_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
3*it(42)+0
#### Cost of phase [42]:eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G) -> [eval_treeoutput_bb19_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B',C',D',E',F',G')] 
3*it(42)+0
#### Cost of chains of eval_treeoutput_bb19_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B,C,D,E,F,G):
* Chain [[42]]...: 3*it(42)+0
  with precondition: [] 

* Chain [[42],43]: 3*it(42)+0
  with precondition: [B=13,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G] 

* Chain [[42],41]...: 4*it(42)+2
  with precondition: [] 

* Chain [43]: 0
  with precondition: [B=13,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize] 

* Chain [41]...: 1*s(13)+2
  with precondition: [] 


#### Cost of loops [44] 

 * loop 44:eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb38_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1
#### Cost of phase [44]:eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb38_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*it(44)+0
#### Cost of phase [44]:eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb38_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*it(44)+0
#### Cost of chains of eval_treeoutput_bb38_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H):
* Chain [[44]]...: 1*it(44)+0
  with precondition: [B=4] 

* Chain [[44],45]: 1*it(44)+0
  with precondition: [B=4,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,V_pdictsize_6=H] 

* Chain [45]: 0
  with precondition: [B=4,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,H=V_pdictsize_6] 


#### Cost of loops [46] 

 * loop 46:eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb35_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*s(20)+0
#### Cost of phase [46]:eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb35_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*s(21)+0
#### Cost of phase [46]:eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb35_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*s(21)+0
#### Cost of phase [46]:eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb35_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*s(21)+0
#### Cost of chains of eval_treeoutput_bb35_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H):
* Chain [[46]]...: 1*s(21)+0
  with precondition: [B=5] 

* Chain [[46],48]: 1*s(21)+0
  with precondition: [B=5,V_pdictsize_6=H] 

* Chain [[46],47]...: 2*s(21)+2
  with precondition: [B=5] 

* Chain [48]: 0
  with precondition: [B=5,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,H=V_pdictsize_6] 

* Chain [47]...: 1*s(22)+2
  with precondition: [B=5] 


#### Cost of loops [50] 

 * loop 50:eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb34_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
1*s(28)+2
#### Cost of phase [50]:eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb34_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
3*it(50)+0
#### Cost of phase [50]:eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb34_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
3*it(50)+0
#### Cost of phase [50]:eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H) -> [eval_treeoutput_bb34_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H')] 
3*it(50)+0
#### Cost of chains of eval_treeoutput_bb34_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H):
* Chain [[50]]...: 3*it(50)+0
  with precondition: [] 

* Chain [[50],51]: 3*it(50)+0
  with precondition: [B=11,V_pdictsize_6=H] 

* Chain [[50],49]...: 4*it(50)+2
  with precondition: [] 

* Chain [51]: 0
  with precondition: [B=11,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,H=V_pdictsize_6] 

* Chain [49]...: 1*s(30)+2
  with precondition: [] 


#### Cost of loops [52] 

 * loop 52:eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) -> [eval_treeoutput_bb28_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B')] 
1
#### Cost of phase [52]:eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) -> [eval_treeoutput_bb28_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B')] 
1*it(52)+0
#### Cost of phase [52]:eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B) -> [eval_treeoutput_bb28_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',B')] 
1*it(52)+0
#### Cost of chains of eval_treeoutput_bb28_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):
* Chain [[52]]...: 1*it(52)+0
  with precondition: [B=12] 

* Chain [[52],53]: 1*it(52)+0
  with precondition: [B=12] 

* Chain [53]: 0
  with precondition: [B=12] 


#### Cost of chains of loop_cont_eval_treeoutput_bb19_in(H,A,B,C,D,E,F):
* Chain [55]: 1*s(36)+1
  with precondition: [H=13] 

* Chain [54]...: 1*s(37)+1
  with precondition: [H=13] 


#### Cost of loops [56] 

 * loop 56:eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb43_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [56]:eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb43_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H',I')] 
1*it(56)+0
#### Cost of phase [56]:eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb43_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_6',B',C',D',E',F',G',H',I')] 
1*it(56)+0
#### Cost of chains of eval_treeoutput_bb43_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B,C,D,E,F,G,H,I):
* Chain [[56]]...: 1*it(56)+0
  with precondition: [B=10] 

* Chain [[56],57]: 1*it(56)+0
  with precondition: [B=10,V_pdictsize_6=H,V_pdictsize_6=I] 

* Chain [57]: 0
  with precondition: [B=10,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,V_pdictsize_6=H,V_pdictsize_6=I] 


#### Cost of loops [58] 

 * loop 58:eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) -> [eval_treeoutput_bb50_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_7',B',C',D',E',F',G')] 
1
#### Cost of phase [58]:eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G) -> [eval_treeoutput_bb50_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_7',B',C',D',E',F',G')] 
1*it(58)+0
  Such that:it(58) =< V_pdictsize_7
it(58) =< V_pdictsize_7-V_pdictsize_7'

#### Cost of chains of eval_treeoutput_bb50_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_7,B,C,D,E,F,G):
* Chain [[58],59]: 1*it(58)+0
  Such that:it(58) =< V_pdictsize_7

  with precondition: [B=9,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,V_pdictsize_7>=1] 

* Chain [59]: 0
  with precondition: [B=9,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,0>=V_pdictsize_7] 


#### Cost of chains of eval_treeoutput_81(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B):
* Chain [61]: 1
  with precondition: [0>=V_pdictsize_6] 

* Chain [60]: 1*s(39)+1
  Such that:s(39) =< V_pdictsize_6

  with precondition: [V_pdictsize_6>=1] 


#### Cost of chains of loop_cont_eval_treeoutput_bb34_in(P,A,B,C,D,E,F,G):
* Chain [64]: 1*s(40)+2
  with precondition: [P=11,0>=F] 

* Chain [63]: 1*s(41)+1*s(42)+2
  Such that:s(42) =< F

  with precondition: [P=11,F>=1] 

* Chain [62]...: 1*s(43)+1
  with precondition: [P=11] 


#### Cost of chains of eval_treeoutput_bb18_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_6,B):
* Chain [66]: 6*s(44)+1*s(49)+3
  Such that:s(49) =< V_pdictsize_6

  with precondition: [] 

* Chain [65]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of loops [67] 

 * loop 67:eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb9_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',V__pdictsize_1',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [67]:eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb9_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',V__pdictsize_1',B',C',D',E',F',G',H',I')] 
1*it(67)+0
#### Cost of phase [67]:eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb9_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',V__pdictsize_1',B',C',D',E',F',G',H',I')] 
1*it(67)+0
#### Cost of chains of eval_treeoutput_bb9_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,V__pdictsize_1,B,C,D,E,F,G,H,I):
* Chain [[67]]...: 1*it(67)+0
  with precondition: [V_pdictsize_1+1>=V__pdictsize_1,V__pdictsize_1>=V_pdictsize_1,B=2] 

* Chain [[67],68]: 1*it(67)+0
  with precondition: [B=2,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,V_pdictsize_0=H,V__pdictsize_1=I,V__pdictsize_1>=V_pdictsize_1,V_pdictsize_1+1>=V__pdictsize_1] 

* Chain [68]: 0
  with precondition: [B=2,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,H=V_pdictsize_0,V__pdictsize_1=I,V__pdictsize_1>=V_pdictsize_1,V_pdictsize_1+1>=V__pdictsize_1] 


#### Cost of loops [70,71] 

 * loop 70:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) -> [eval_treeoutput_bb7_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',B',C',D',E',F',G',H')] 
1*s(59)+2
 * loop 71:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) -> [eval_treeoutput_bb7_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',B',C',D',E',F',G',H')] 
1*s(61)+2
#### Cost of phase [70,71]:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) -> [eval_treeoutput_bb7_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',B',C',D',E',F',G',H')] 
6*it(70)+0
#### Cost of phase [70,71]:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) -> [eval_treeoutput_bb7_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',B',C',D',E',F',G',H')] 
6*it(70)+0
#### Cost of phase [70,71]:eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H) -> [eval_treeoutput_bb7_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',V_pdictsize_1',B',C',D',E',F',G',H')] 
6*it(70)+0
#### Cost of chains of eval_treeoutput_bb7_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,V_pdictsize_1,B,C,D,E,F,G,H):
* Chain [[70,71]]...: 6*it(70)+0
  with precondition: [B=3] 

* Chain [[70,71],72]: 6*it(70)+0
  with precondition: [B=3,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,V_pdictsize_1>=V_pdictsize_0,H>=V_pdictsize_1] 

* Chain [[70,71],69]...: 7*aux(17)+0
  with precondition: [B=3,V_pdictsize_1>=V_pdictsize_0] 

* Chain [72]: 0
  with precondition: [B=3,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,V_pdictsize_1=H,V_pdictsize_1>=V_pdictsize_0] 

* Chain [69]...: 1*aux(17)+0
  with precondition: [B=3,V_pdictsize_1>=V_pdictsize_0] 


#### Cost of loops [74] 

 * loop 74:eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) -> [eval_treeoutput_bb6_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',B',C',D',E',F',G',H')] 
1*s(70)+2
#### Cost of phase [74]:eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) -> [eval_treeoutput_bb6_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',B',C',D',E',F',G',H')] 
3*it(74)+0
#### Cost of phase [74]:eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) -> [eval_treeoutput_bb6_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',B',C',D',E',F',G',H')] 
3*it(74)+0
#### Cost of phase [74]:eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H) -> [eval_treeoutput_bb6_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_0',B',C',D',E',F',G',H')] 
3*it(74)+0
#### Cost of chains of eval_treeoutput_bb6_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_0,B,C,D,E,F,G,H):
* Chain [[74]]...: 3*it(74)+0
  with precondition: [] 

* Chain [[74],75]: 3*it(74)+0
  with precondition: [B=8,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,V_pdictsize_0>=0,H>=V_pdictsize_0] 

* Chain [[74],73]...: 4*aux(20)+0
  with precondition: [V_pdictsize_0>=0] 

* Chain [75]: 0
  with precondition: [B=8,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,V_pdictsize_0=H,V_pdictsize_0>=0] 

* Chain [73]...: 1*aux(20)+0
  with precondition: [V_pdictsize_0>=0] 


#### Cost of loops [76,77] 

 * loop 76:eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb12_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_3',B',C',D',E',F',G',H',I')] 
1
 * loop 77:eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb12_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_3',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [76,77]:eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb12_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_3',B',C',D',E',F',G',H',I')] 
2*it(76)+0
#### Cost of phase [76,77]:eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I) -> [eval_treeoutput_bb12_in(V__cbench_print',V__hcount',V__pershsize',V__newwords',V__hashsize',V_pdictsize_3',B',C',D',E',F',G',H',I')] 
2*it(76)+0
#### Cost of chains of eval_treeoutput_bb12_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,V_pdictsize_3,B,C,D,E,F,G,H,I):
* Chain [[76,77]]...: 2*it(76)+0
  with precondition: [B=14] 

* Chain [[76,77],78]: 2*it(76)+0
  with precondition: [B=14,V__cbench_print=C,V__hcount=D,V__pershsize=E,V__newwords=F,V__hashsize=G,24*H=I,H>=V_pdictsize_3] 

* Chain [78]: 0
  with precondition: [B=14,C=V__cbench_print,D=V__hcount,E=V__pershsize,F=V__newwords,G=V__hashsize,V_pdictsize_3=H,24*V_pdictsize_3=I] 


#### Cost of chains of loop_cont_eval_treeoutput_bb6_in(P,A,B,C,D,E,F,G):
* Chain [80]: 8*s(78)+4
  with precondition: [P=8] 

* Chain [79]...: 1*aux(24)+0
  with precondition: [P=8] 


#### Cost of chains of eval_treeoutput_3(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):
* Chain [82]: 1*aux(25)+0
  with precondition: [] 

* Chain [81]...: 1*aux(26)+0
  with precondition: [] 


#### Cost of chains of eval_treeoutput_bb0_in(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):
* Chain [84]: 1*aux(27)+0
  with precondition: [] 

* Chain [83]...: 1*s(94)+0
  with precondition: [] 


#### Cost of chains of eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B):
* Chain [86]: 1*s(95)+0
  with precondition: [] 

* Chain [85]...: 1*s(96)+0
  with precondition: [] 


Closed-form bounds of eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B): 
-------------------------------------
* Chain [86] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [85]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_treeoutput_start(V__cbench_print,V__hcount,V__pershsize,V__newwords,V__hashsize,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 146 ms.
* Invariants computed in 159 ms.
   - Backward Invariants 81 ms.
   - Transitive Invariants 37 ms.
* Refinement performed in 316 ms.
* Termination proved in 29 ms.
* Upper bounds computed in 533 ms.
   - Equation cost structures 221 ms.
   - Phase cost structures 151 ms.
   - Chain cost structures 203 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1342 ms.

