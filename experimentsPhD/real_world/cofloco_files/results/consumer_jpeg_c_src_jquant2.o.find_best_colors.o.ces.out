Warning: Ignored call to eval_find_best_colors_stop/1 in equation loop_cont_eval_find_best_colors_bb4_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_find_best_colors_bb1_in/5]
1. recursive  : [eval_find_best_colors_bb11_in/10,eval_find_best_colors_bb8_in/10]
2. recursive  : [eval_find_best_colors_bb7_in/8,loop_cont_eval_find_best_colors_bb8_in/9]
3. recursive  : [eval_find_best_colors_bb6_in/6,loop_cont_eval_find_best_colors_bb7_in/7]
4. recursive  : [eval_find_best_colors_bb4_in/3,loop_cont_eval_find_best_colors_bb6_in/4]
5. non_recursive  : [loop_cont_eval_find_best_colors_bb4_in/2]
6. non_recursive  : [loop_cont_eval_find_best_colors_bb1_in/4]
7. non_recursive  : [eval_find_best_colors_bb0_in/2]
8. non_recursive  : [eval_find_best_colors_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_find_best_colors_bb1_in/5
1. SCC is partially evaluated into eval_find_best_colors_bb8_in/10
2. SCC is partially evaluated into eval_find_best_colors_bb7_in/8
3. SCC is partially evaluated into eval_find_best_colors_bb6_in/6
4. SCC is partially evaluated into eval_find_best_colors_bb4_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_find_best_colors_bb1_in/4
7. SCC is partially evaluated into eval_find_best_colors_bb0_in/2
8. SCC is partially evaluated into eval_find_best_colors_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_find_best_colors_bb1_in/5 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16] 


#### Refined cost equations eval_find_best_colors_bb1_in/5 
* CE 15: eval_find_best_colors_bb1_in(A,B,C,A,D) = 0
     [0>=B+1,D=0,C=4] 
* CE 16: eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) = 1+ eval_find_best_colors_bb1_in(V_numcolors,E,B,C,D)
     [V_i_0>=0,127>=V_i_0,V_i_0=E+1] 

### Cost equations --> "Loop" of eval_find_best_colors_bb1_in/5 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_find_best_colors_bb1_in/5 
* Loop 14: eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D)->  eval_find_best_colors_bb1_in(V_numcolors,V_i_0',B,C,D)
                  [V_i_0>=0,127>=V_i_0,V_i_0=V_i_0'+1] 
* Loop 15: eval_find_best_colors_bb1_in(A,B,C,A,D) [0>=B+1,D=0,C=4] 

### Ranking functions of CR eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) 
* RF of phase [14]: [V_i_0+1]

#### Partial ranking functions of CR eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_i_0+1


### Resulting Chains:eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) 
* [[14],15]


### Merging Chains  eval_find_best_colors_bb1_in/5 into  External patterns of execution 
* [[15,[14]]] --> 1 


### Specialization of cost equations eval_find_best_colors_bb8_in/10 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


#### Refined cost equations eval_find_best_colors_bb8_in/10 
* CE 17: eval_find_best_colors_bb8_in(A,B,C,D,E,F,A,B,C,G) = 0
     [D>=0,0>=E+1,D=G+1,F=2] 
* CE 18: eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) = 1+ eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,G,H,C,D,E,F)
     [V_ic2_0>=0,V_ic1_0>=0,3>=V_ic2_0,V_ic2_0=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_find_best_colors_bb8_in/10 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_find_best_colors_bb8_in/10 
* Loop 16: eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F)->  eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0',B',C,D,E,F)
                  [V_ic2_0>=0,V_ic1_0>=0,3>=V_ic2_0,V_ic2_0=V_ic2_0'+1,B'=2,B=2] 
* Loop 17: eval_find_best_colors_bb8_in(A,B,C,D,E,F,A,B,C,G) [D>=0,0>=E+1,D=G+1,F=2] 

### Ranking functions of CR eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) 
* RF of phase [16]: [V_ic2_0+1]

#### Partial ranking functions of CR eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_ic2_0+1


### Resulting Chains:eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) 
* [[16],17]


### Merging Chains  eval_find_best_colors_bb8_in/10 into  External patterns of execution 
* [[17,[16]]] --> 1 


### Specialization of cost equations eval_find_best_colors_bb7_in/8 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20] 


#### Refined cost equations eval_find_best_colors_bb7_in/8 
* CE 19: eval_find_best_colors_bb7_in(A,B,C,D,E,A,B,F) = 0
     [0>=D+1,F+1=C,E=3] 
* CE 20: eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) = 2+ eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,F,G,H,V_numcolors,V_i_1,V_ic0_0,I):1+ eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,I,J,C,D,E)
     [I+1>=0,I+1=F,I+1=V_ic1_0,J=3,H=2,G=3,B=3] 

### Cost equations --> "Loop" of eval_find_best_colors_bb7_in/8 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_find_best_colors_bb7_in/8 
* Loop 18: eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E)->  eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0',B',C,D,E)
                  [V_ic1_0'+1>=0,V_ic1_0'+1=V_ic1_0,B'=3,B=3] 
* Loop 19: eval_find_best_colors_bb7_in(A,B,C,D,E,A,B,F) [0>=D+1,C=F+1,E=3] 

### Ranking functions of CR eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) 
* RF of phase [18]: [V_ic1_0+1]

#### Partial ranking functions of CR eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_ic1_0+1


### Resulting Chains:eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) 
* [[18],19]


### Merging Chains  eval_find_best_colors_bb7_in/8 into  External patterns of execution 
* [[19,[18]]] --> 1 


### Specialization of cost equations eval_find_best_colors_bb6_in/6 
* CE 10 is refined into CE [21] 
* CE 9 is refined into CE [22] 


#### Refined cost equations eval_find_best_colors_bb6_in/6 
* CE 21: eval_find_best_colors_bb6_in(A,B,C,D,A,E) = 0
     [0>=C+1,E=B+1,D=4] 
* CE 22: eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) = 2+ eval_find_best_colors_bb7_in(V_numcolors,V_i_1,E,F,G,V_numcolors,V_i_1,H):1+ eval_find_best_colors_bb6_in(V_numcolors,V_i_1,H,I,C,D)
     [H+1>=0,H+1=E,H+1=V_ic0_0,I=4,G=3,F=7,B=4] 

### Cost equations --> "Loop" of eval_find_best_colors_bb6_in/6 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of eval_find_best_colors_bb6_in/6 
* Loop 20: eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D)->  eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0',B',C,D)
                  [V_ic0_0'+1>=0,V_ic0_0'+1=V_ic0_0,B'=4,B=4] 
* Loop 21: eval_find_best_colors_bb6_in(A,B,C,D,A,E) [0>=C+1,B+1=E,D=4] 

### Ranking functions of CR eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) 
* RF of phase [20]: [V_ic0_0+1]

#### Partial ranking functions of CR eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_ic0_0+1


### Resulting Chains:eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) 
* [[20],21]


### Merging Chains  eval_find_best_colors_bb6_in/6 into  External patterns of execution 
* [[21,[20]]] --> 1 


### Specialization of cost equations eval_find_best_colors_bb4_in/3 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24] 


#### Refined cost equations eval_find_best_colors_bb4_in/3 
* CE 23: eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) = 0
     [V_i_1>=V_numcolors,B=5] 
* CE 24: eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) = 2+ eval_find_best_colors_bb6_in(V_numcolors,C,D,E,V_numcolors,F):1+ eval_find_best_colors_bb4_in(V_numcolors,F,G)
     [V_numcolors>=F,F=C+1,F=V_i_1+1,G=5,E=4,D=3,B=5] 

### Cost equations --> "Loop" of eval_find_best_colors_bb4_in/3 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_find_best_colors_bb4_in/3 
* Loop 22: eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B)->  eval_find_best_colors_bb4_in(V_numcolors,V_i_1',B')
                  [V_numcolors>=V_i_1',V_i_1'=V_i_1+1,B'=5,B=5] 
* Loop 23: eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) [V_i_1>=V_numcolors,B=5] 

### Ranking functions of CR eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) 
* RF of phase [22]: [V_numcolors-V_i_1]

#### Partial ranking functions of CR eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V_numcolors-V_i_1


### Resulting Chains:eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) 
* [[22],23]
* [23]


### Merging Chains  eval_find_best_colors_bb4_in/3 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[22]]] --> 2 


### Specialization of cost equations loop_cont_eval_find_best_colors_bb1_in/4 
* CE 6 is refined into CE [25,26] 


#### Refined cost equations loop_cont_eval_find_best_colors_bb1_in/4 
* CE 25: loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) = 1+ eval_find_best_colors_bb4_in(A,B,G):1
     [B>=A,G=5,F=4] 
* CE 26: loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) = 1+ eval_find_best_colors_bb4_in(A,B,G):2
     [A>=B+1,G=5,F=4] 

### Cost equations --> "Loop" of loop_cont_eval_find_best_colors_bb1_in/4 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of loop_cont_eval_find_best_colors_bb1_in/4 
* Loop 24: loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) [A>=B+1,F=4] 
* Loop 25: loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) [B>=A,F=4] 

### Ranking functions of CR loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) 


### Resulting Chains:loop_cont_eval_find_best_colors_bb1_in(F,A,B,C) 
* [25]
* [24]


### Merging Chains  loop_cont_eval_find_best_colors_bb1_in/4 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_find_best_colors_bb0_in/2 
* CE 3 is refined into CE [27,28] 


#### Refined cost equations eval_find_best_colors_bb0_in/2 
* CE 27: eval_find_best_colors_bb0_in(V_numcolors,B) = 1+ eval_find_best_colors_bb1_in(V_numcolors,C,D,V_numcolors,E):1+ loop_cont_eval_find_best_colors_bb1_in(F,V_numcolors,G,B):1
     [0>=V_numcolors,G=0,F=4,E=0,D=4,C=127] 
* CE 28: eval_find_best_colors_bb0_in(V_numcolors,B) = 1+ eval_find_best_colors_bb1_in(V_numcolors,C,D,V_numcolors,E):1+ loop_cont_eval_find_best_colors_bb1_in(F,V_numcolors,G,B):2
     [V_numcolors>=1,G=0,F=4,E=0,D=4,C=127] 

### Cost equations --> "Loop" of eval_find_best_colors_bb0_in/2 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 

#### Loops of eval_find_best_colors_bb0_in/2 
* Loop 26: eval_find_best_colors_bb0_in(V_numcolors,B) [V_numcolors>=1] 
* Loop 27: eval_find_best_colors_bb0_in(V_numcolors,B) [0>=V_numcolors] 

### Ranking functions of CR eval_find_best_colors_bb0_in(V_numcolors,B) 

#### Partial ranking functions of CR eval_find_best_colors_bb0_in(V_numcolors,B) 


### Resulting Chains:eval_find_best_colors_bb0_in(V_numcolors,B) 
* [27]
* [26]


### Merging Chains  eval_find_best_colors_bb0_in/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_find_best_colors_start/5 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_find_best_colors_start/5 
* CE 29: eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) = 0+ eval_find_best_colors_bb0_in(V_numcolors,B):1
     [0>=V_numcolors] 
* CE 30: eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) = 0+ eval_find_best_colors_bb0_in(V_numcolors,B):2
     [V_numcolors>=1] 

### Cost equations --> "Loop" of eval_find_best_colors_start/5 
* CEs [30] --> Loop 28 
* CEs [29] --> Loop 29 

#### Loops of eval_find_best_colors_start/5 
* Loop 28: eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) [V_numcolors>=1] 
* Loop 29: eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) [0>=V_numcolors] 

### Ranking functions of CR eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) 

#### Partial ranking functions of CR eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) 


### Resulting Chains:eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B) 
* [29]
* [28]


### Merging Chains  eval_find_best_colors_start/5 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) -> [eval_find_best_colors_bb1_in(V_numcolors',V_i_0',B',C',D')] 
1
#### Cost of phase [14]:eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D) -> [eval_find_best_colors_bb1_in(V_numcolors',V_i_0',B',C',D')] 
1*it(14)+0
  Such that:it(14) =< V_i_0+1
it(14) =< V_i_0-V_i_0'

#### Cost of chains of eval_find_best_colors_bb1_in(V_numcolors,V_i_0,B,C,D):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_i_0+1

  with precondition: [B=4,D=0,V_numcolors=C,127>=V_i_0,V_i_0>=0] 


#### Cost of loops [16] 

 * loop 16:eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) -> [eval_find_best_colors_bb8_in(V_numcolors',V_i_1',V_ic0_0',V_ic1_0',V_ic2_0',B',C',D',E',F')] 
1
#### Cost of phase [16]:eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F) -> [eval_find_best_colors_bb8_in(V_numcolors',V_i_1',V_ic0_0',V_ic1_0',V_ic2_0',B',C',D',E',F')] 
1*it(16)+0
  Such that:it(16) =< V_ic2_0+1
it(16) =< V_ic2_0-V_ic2_0'

#### Cost of chains of eval_find_best_colors_bb8_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,V_ic2_0,B,C,D,E,F):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_ic2_0+1

  with precondition: [B=2,V_numcolors=C,V_i_1=D,V_ic0_0=E,V_ic1_0=F+1,3>=V_ic2_0,V_ic1_0>=0,V_ic2_0>=0] 


#### Cost of loops [18] 

 * loop 18:eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) -> [eval_find_best_colors_bb7_in(V_numcolors',V_i_1',V_ic0_0',V_ic1_0',B',C',D',E')] 
1*s(2)+2
  Such that:s(2) =< 4

#### Cost of phase [18]:eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E) -> [eval_find_best_colors_bb7_in(V_numcolors',V_i_1',V_ic0_0',V_ic1_0',B',C',D',E')] 
2*it(18)+1*s(3)+0
  Such that:aux(2) =< V_ic1_0+1
aux(3) =< V_ic1_0-V_ic1_0'
aux(1) =< aux(2)
it(18) =< aux(2)
aux(1) =< aux(3)
it(18) =< aux(3)
s(3) =< aux(1)*4

#### Cost of chains of eval_find_best_colors_bb7_in(V_numcolors,V_i_1,V_ic0_0,V_ic1_0,B,C,D,E):
* Chain [[18],19]: 2*it(18)+1*s(3)+0
  Such that:aux(4) =< V_ic1_0+1
it(18) =< aux(4)
s(3) =< aux(4)*4

  with precondition: [B=3,V_numcolors=C,V_i_1=D,V_ic0_0=E+1,V_ic0_0>=0,V_ic1_0>=0] 


#### Cost of loops [20] 

 * loop 20:eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) -> [eval_find_best_colors_bb6_in(V_numcolors',V_i_1',V_ic0_0',B',C',D')] 
2*s(8)+1*s(9)+2
  Such that:s(7) =< 8
s(8) =< s(7)
s(9) =< s(7)*4

#### Cost of phase [20]:eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D) -> [eval_find_best_colors_bb6_in(V_numcolors',V_i_1',V_ic0_0',B',C',D')] 
2*it(20)+2*s(10)+1*s(11)+0
  Such that:aux(6) =< V_ic0_0+1
aux(7) =< V_ic0_0-V_ic0_0'
aux(5) =< aux(6)
it(20) =< aux(6)
aux(5) =< aux(7)
it(20) =< aux(7)
s(12) =< aux(5)*8
s(10) =< s(12)
s(11) =< s(12)*4

#### Cost of chains of eval_find_best_colors_bb6_in(V_numcolors,V_i_1,V_ic0_0,B,C,D):
* Chain [[20],21]: 2*it(20)+2*s(10)+1*s(11)+0
  Such that:aux(8) =< V_ic0_0+1
it(20) =< aux(8)
s(12) =< aux(8)*8
s(10) =< s(12)
s(11) =< s(12)*4

  with precondition: [B=4,V_numcolors=C,V_i_1+1=D,V_ic0_0>=0,V_numcolors>=V_i_1+1] 


#### Cost of loops [22] 

 * loop 22:eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) -> [eval_find_best_colors_bb4_in(V_numcolors',V_i_1',B')] 
2*s(19)+2*s(21)+1*s(22)+2
  Such that:s(18) =< 4
s(19) =< s(18)
s(20) =< s(18)*8
s(21) =< s(20)
s(22) =< s(20)*4

#### Cost of phase [22]:eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B) -> [eval_find_best_colors_bb4_in(V_numcolors',V_i_1',B')] 
2*it(22)+2*s(23)+2*s(24)+1*s(25)+0
  Such that:aux(10) =< V_numcolors-V_i_1
aux(11) =< V_numcolors-V_i_1-V_numcolors'+V_i_1'
aux(9) =< aux(10)
it(22) =< aux(10)
aux(9) =< aux(11)
it(22) =< aux(11)
s(27) =< aux(9)*4
s(23) =< s(27)
s(26) =< s(27)*8
s(24) =< s(26)
s(25) =< s(26)*4

#### Cost of chains of eval_find_best_colors_bb4_in(V_numcolors,V_i_1,B):
* Chain [[22],23]: 2*it(22)+2*s(23)+2*s(24)+1*s(25)+0
  Such that:aux(12) =< V_numcolors-V_i_1
it(22) =< aux(12)
s(27) =< aux(12)*4
s(23) =< s(27)
s(26) =< s(27)*8
s(24) =< s(26)
s(25) =< s(26)*4

  with precondition: [B=5,V_numcolors>=V_i_1+1] 

* Chain [23]: 0
  with precondition: [B=5,V_i_1>=V_numcolors] 


#### Cost of chains of loop_cont_eval_find_best_colors_bb1_in(F,A,B,C):
* Chain [25]: 1
  with precondition: [F=4,B>=A] 

* Chain [24]: 2*s(29)+2*s(31)+2*s(33)+1*s(34)+1
  Such that:s(28) =< A-B
s(29) =< s(28)
s(30) =< s(28)*4
s(31) =< s(30)
s(32) =< s(30)*8
s(33) =< s(32)
s(34) =< s(32)*4

  with precondition: [F=4,A>=B+1] 


#### Cost of chains of eval_find_best_colors_bb0_in(V_numcolors,B):
* Chain [27]: 1*s(35)+2
  Such that:s(35) =< 128

  with precondition: [0>=V_numcolors] 

* Chain [26]: 1*s(36)+2*s(38)+2*s(40)+2*s(42)+1*s(43)+2
  Such that:s(36) =< 128
s(37) =< V_numcolors
s(38) =< s(37)
s(39) =< s(37)*4
s(40) =< s(39)
s(41) =< s(39)*8
s(42) =< s(41)
s(43) =< s(41)*4

  with precondition: [V_numcolors>=1] 


#### Cost of chains of eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B):
* Chain [29]: 1*s(44)+2
  Such that:s(44) =< 128

  with precondition: [0>=V_numcolors] 

* Chain [28]: 1*s(45)+2*s(47)+2*s(49)+2*s(51)+1*s(52)+2
  Such that:s(45) =< 128
s(46) =< V_numcolors
s(47) =< s(46)
s(48) =< s(46)*4
s(49) =< s(48)
s(50) =< s(48)*8
s(51) =< s(50)
s(52) =< s(50)*4

  with precondition: [V_numcolors>=1] 


Closed-form bounds of eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B): 
-------------------------------------
* Chain [29] with precondition: [0>=V_numcolors] 
    - Upper bound: 130 
    - Complexity: constant 
* Chain [28] with precondition: [V_numcolors>=1] 
    - Upper bound: 202*V_numcolors+130 
    - Complexity: n 

### Maximum cost of eval_find_best_colors_start(V_minc0,V_minc1,V_minc2,V_numcolors,B): nat(V_numcolors)*202+130 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 38 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 60 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 50 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 20 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 213 ms.

