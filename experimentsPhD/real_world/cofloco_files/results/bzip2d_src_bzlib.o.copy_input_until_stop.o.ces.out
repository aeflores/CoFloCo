Warning: Ignored call to eval_copy_input_until_stop_stop/1 in equation eval_copy_input_until_stop_bb19_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_copy_input_until_stop_106/1,eval_copy_input_until_stop_107/1,eval_copy_input_until_stop_bb16_in/1,eval_copy_input_until_stop_bb23_in/1,eval_copy_input_until_stop_bb25_in/1,eval_copy_input_until_stop_bb27_in/1,eval_copy_input_until_stop_bb29_in/1,eval_copy_input_until_stop_bb31_in/1]
1. recursive  : [eval_copy_input_until_stop_42/1,eval_copy_input_until_stop_43/1,eval_copy_input_until_stop_bb11_in/1,eval_copy_input_until_stop_bb13_in/1,eval_copy_input_until_stop_bb2_in/1,eval_copy_input_until_stop_bb7_in/1,eval_copy_input_until_stop_bb9_in/1]
2. non_recursive  : [eval_copy_input_until_stop_bb19_in/1]
3. non_recursive  : [loop_cont_eval_copy_input_until_stop_bb16_in/2]
4. non_recursive  : [loop_cont_eval_copy_input_until_stop_bb2_in/2]
5. non_recursive  : [eval_copy_input_until_stop_bb0_in/1]
6. non_recursive  : [eval_copy_input_until_stop_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_copy_input_until_stop_bb16_in/1
1. SCC is partially evaluated into eval_copy_input_until_stop_bb2_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_copy_input_until_stop_bb0_in/1
6. SCC is partially evaluated into eval_copy_input_until_stop_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_copy_input_until_stop_bb16_in/1 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_copy_input_until_stop_bb16_in/1 
* CE 9: eval_copy_input_until_stop_bb16_in(B) = 0
     [B=2] 
* CE 10: eval_copy_input_until_stop_bb16_in(B) = 1+ eval_copy_input_until_stop_bb16_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_copy_input_until_stop_bb16_in/1 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_copy_input_until_stop_bb16_in/1 
* Loop 7: eval_copy_input_until_stop_bb16_in(B)->  eval_copy_input_until_stop_bb16_in(B')
                  [B'=2,B=2] 
* Loop 8: eval_copy_input_until_stop_bb16_in(B) [B=2] 

### Ranking functions of CR eval_copy_input_until_stop_bb16_in(B) 

#### Partial ranking functions of CR eval_copy_input_until_stop_bb16_in(B) 


### Resulting Chains:eval_copy_input_until_stop_bb16_in(B) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_copy_input_until_stop_bb16_in/1 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_copy_input_until_stop_bb2_in/1 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_copy_input_until_stop_bb2_in/1 
* CE 11: eval_copy_input_until_stop_bb2_in(B) = 0
     [B=2] 
* CE 12: eval_copy_input_until_stop_bb2_in(B) = 1+ eval_copy_input_until_stop_bb2_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_copy_input_until_stop_bb2_in/1 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_copy_input_until_stop_bb2_in/1 
* Loop 9: eval_copy_input_until_stop_bb2_in(B)->  eval_copy_input_until_stop_bb2_in(B')
                  [B'=2,B=2] 
* Loop 10: eval_copy_input_until_stop_bb2_in(B) [B=2] 

### Ranking functions of CR eval_copy_input_until_stop_bb2_in(B) 

#### Partial ranking functions of CR eval_copy_input_until_stop_bb2_in(B) 


### Resulting Chains:eval_copy_input_until_stop_bb2_in(B) 
* [[9]]...
* [[9],10]
* [10]


### Merging Chains  eval_copy_input_until_stop_bb2_in/1 into  External patterns of execution 
* [[10],[10,[9]]] --> 1 
* [[[9]]] --> 2 


### Specialization of cost equations eval_copy_input_until_stop_bb0_in/1 
* CE 3 is refined into CE [13,14] 
* CE 4 is refined into CE [15,16] 


#### Refined cost equations eval_copy_input_until_stop_bb0_in/1 
* CE 13: eval_copy_input_until_stop_bb0_in(B) = 1+ eval_copy_input_until_stop_bb2_in(C):1
     [C=2] 
* CE 14: eval_copy_input_until_stop_bb0_in(B) = 1+ eval_copy_input_until_stop_bb2_in(C):2
     [C=2] 
* CE 15: eval_copy_input_until_stop_bb0_in(B) = 1+ eval_copy_input_until_stop_bb16_in(C):1
     [C=2] 
* CE 16: eval_copy_input_until_stop_bb0_in(B) = 1+ eval_copy_input_until_stop_bb16_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_copy_input_until_stop_bb0_in/1 
* CEs [14,16] --> Loop 11 
* CEs [13,15] --> Loop 12 

#### Loops of eval_copy_input_until_stop_bb0_in/1 
* Loop 11: eval_copy_input_until_stop_bb0_in(B) [] 
* Loop 12: eval_copy_input_until_stop_bb0_in(B) [] 

### Ranking functions of CR eval_copy_input_until_stop_bb0_in(B) 

#### Partial ranking functions of CR eval_copy_input_until_stop_bb0_in(B) 


### Resulting Chains:eval_copy_input_until_stop_bb0_in(B) 
* [12]
* [11]...


### Merging Chains  eval_copy_input_until_stop_bb0_in/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_copy_input_until_stop_start/1 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_copy_input_until_stop_start/1 
* CE 17: eval_copy_input_until_stop_start(B) = 0+ eval_copy_input_until_stop_bb0_in(B):1
     [] 
* CE 18: eval_copy_input_until_stop_start(B) = 0+ eval_copy_input_until_stop_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_copy_input_until_stop_start/1 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_copy_input_until_stop_start/1 
* Loop 13: eval_copy_input_until_stop_start(B) [] 
* Loop 14: eval_copy_input_until_stop_start(B) [] 

### Ranking functions of CR eval_copy_input_until_stop_start(B) 

#### Partial ranking functions of CR eval_copy_input_until_stop_start(B) 


### Resulting Chains:eval_copy_input_until_stop_start(B) 
* [14]
* [13]...


### Merging Chains  eval_copy_input_until_stop_start/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_copy_input_until_stop_bb16_in(B) -> [eval_copy_input_until_stop_bb16_in(B')] 
1
#### Cost of phase [7]:eval_copy_input_until_stop_bb16_in(B) -> [eval_copy_input_until_stop_bb16_in(B')] 
1*it(7)+0
#### Cost of phase [7]:eval_copy_input_until_stop_bb16_in(B) -> [eval_copy_input_until_stop_bb16_in(B')] 
1*it(7)+0
#### Cost of chains of eval_copy_input_until_stop_bb16_in(B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2] 

* Chain [8]: 0
  with precondition: [B=2] 


#### Cost of loops [9] 

 * loop 9:eval_copy_input_until_stop_bb2_in(B) -> [eval_copy_input_until_stop_bb2_in(B')] 
1
#### Cost of phase [9]:eval_copy_input_until_stop_bb2_in(B) -> [eval_copy_input_until_stop_bb2_in(B')] 
1*it(9)+0
#### Cost of phase [9]:eval_copy_input_until_stop_bb2_in(B) -> [eval_copy_input_until_stop_bb2_in(B')] 
1*it(9)+0
#### Cost of chains of eval_copy_input_until_stop_bb2_in(B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [B=2] 

* Chain [[9],10]: 1*it(9)+0
  with precondition: [B=2] 

* Chain [10]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_copy_input_until_stop_bb0_in(B):
* Chain [12]: 1*aux(3)+0
  with precondition: [] 

* Chain [11]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_copy_input_until_stop_start(B):
* Chain [14]: 1*s(7)+0
  with precondition: [] 

* Chain [13]...: 1*s(8)+0
  with precondition: [] 


Closed-form bounds of eval_copy_input_until_stop_start(B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_copy_input_until_stop_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 7 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 36 ms.

