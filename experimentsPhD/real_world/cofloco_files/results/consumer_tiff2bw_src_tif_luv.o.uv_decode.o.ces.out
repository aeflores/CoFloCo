Warning: Ignored call to eval_uv_decode_stop/1 in equation eval_uv_decode_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_uv_decode_bb1_in/3,eval_uv_decode_bb3_in/5]
1. non_recursive  : [eval_uv_decode_bb5_in/1]
2. non_recursive  : [eval_uv_decode_bb4_in/1]
3. non_recursive  : [loop_cont_eval_uv_decode_bb1_in/2]
4. non_recursive  : [eval_uv_decode_bb0_in/1]
5. non_recursive  : [eval_uv_decode_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_uv_decode_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_uv_decode_bb0_in/1
5. SCC is partially evaluated into eval_uv_decode_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_uv_decode_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_uv_decode_bb1_in/3 
* CE 8: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) = 1+ eval_uv_decode_bb1_in(C,V_upper_0,D)
     [V_upper_0>=C+2,V_upper_0>=V_lower_0+2,D=2,B=2] 
* CE 9: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) = 1+ eval_uv_decode_bb1_in(V_lower_0,C,D)
     [C>=V_lower_0+2,V_upper_0>=V_lower_0+2,D=2,B=2] 
* CE 10: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) = 0
     [V_upper_0>=V_lower_0+2,B=2] 

### Cost equations --> "Loop" of eval_uv_decode_bb1_in/3 
* CEs [10] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_uv_decode_bb1_in/3 
* Loop 6: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) [V_upper_0>=V_lower_0+2,B=2] 
* Loop 7: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B)->  eval_uv_decode_bb1_in(V_lower_0',V_upper_0,B')
                  [V_upper_0>=V_lower_0'+2,V_upper_0>=V_lower_0+2,B'=2,B=2] 
* Loop 8: eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B)->  eval_uv_decode_bb1_in(V_lower_0,V_upper_0',B')
                  [V_upper_0'>=V_lower_0+2,V_upper_0>=V_lower_0+2,B'=2,B=2] 

### Ranking functions of CR eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) 

#### Partial ranking functions of CR eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) 


### Resulting Chains:eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) 
* [[7,8]]...
* [[7,8],6]
* [6]


### Merging Chains  eval_uv_decode_bb1_in/3 into  External patterns of execution 
* [[6],[6,[7,8]]] --> 1 
* [[[7,8]]] --> 2 


### Specialization of cost equations eval_uv_decode_bb0_in/1 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12,13] 


#### Refined cost equations eval_uv_decode_bb0_in/1 
* CE 11: eval_uv_decode_bb0_in(B) = 0
     [] 
* CE 12: eval_uv_decode_bb0_in(B) = 1+ eval_uv_decode_bb1_in(C,D,E):1
     [E=2,D=163,C=0] 
* CE 13: eval_uv_decode_bb0_in(B) = 1+ eval_uv_decode_bb1_in(C,D,E):2
     [E=2,D=163,C=0] 

### Cost equations --> "Loop" of eval_uv_decode_bb0_in/1 
* CEs [13] --> Loop 9 
* CEs [11,12] --> Loop 10 

#### Loops of eval_uv_decode_bb0_in/1 
* Loop 9: eval_uv_decode_bb0_in(B) [] 
* Loop 10: eval_uv_decode_bb0_in(B) [] 

### Ranking functions of CR eval_uv_decode_bb0_in(B) 

#### Partial ranking functions of CR eval_uv_decode_bb0_in(B) 


### Resulting Chains:eval_uv_decode_bb0_in(B) 
* [10]
* [9]...


### Merging Chains  eval_uv_decode_bb0_in/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_uv_decode_start/2 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_uv_decode_start/2 
* CE 14: eval_uv_decode_start(V_c,B) = 0+ eval_uv_decode_bb0_in(B):1
     [] 
* CE 15: eval_uv_decode_start(V_c,B) = 0+ eval_uv_decode_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_uv_decode_start/2 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_uv_decode_start/2 
* Loop 11: eval_uv_decode_start(V_c,B) [] 
* Loop 12: eval_uv_decode_start(V_c,B) [] 

### Ranking functions of CR eval_uv_decode_start(V_c,B) 

#### Partial ranking functions of CR eval_uv_decode_start(V_c,B) 


### Resulting Chains:eval_uv_decode_start(V_c,B) 
* [12]
* [11]...


### Merging Chains  eval_uv_decode_start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7,8] 

 * loop 7:eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) -> [eval_uv_decode_bb1_in(V_lower_0',V_upper_0',B')] 
1
 * loop 8:eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) -> [eval_uv_decode_bb1_in(V_lower_0',V_upper_0',B')] 
1
#### Cost of phase [7,8]:eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) -> [eval_uv_decode_bb1_in(V_lower_0',V_upper_0',B')] 
2*it(7)+0
#### Cost of phase [7,8]:eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B) -> [eval_uv_decode_bb1_in(V_lower_0',V_upper_0',B')] 
2*it(7)+0
#### Cost of chains of eval_uv_decode_bb1_in(V_lower_0,V_upper_0,B):
* Chain [[7,8]]...: 2*it(7)+0
  with precondition: [V_upper_0>=V_lower_0+2,B=2] 

* Chain [[7,8],6]: 2*it(7)+0
  with precondition: [B=2,V_upper_0>=V_lower_0+2] 

* Chain [6]: 0
  with precondition: [B=2,V_upper_0>=V_lower_0+2] 


#### Cost of chains of eval_uv_decode_bb0_in(B):
* Chain [10]: 1*aux(2)+0
  with precondition: [] 

* Chain [9]...: 2*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_uv_decode_start(V_c,B):
* Chain [12]: 1*s(4)+0
  with precondition: [] 

* Chain [11]...: 2*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_uv_decode_start(V_c,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_uv_decode_start(V_c,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 37 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 148 ms.

