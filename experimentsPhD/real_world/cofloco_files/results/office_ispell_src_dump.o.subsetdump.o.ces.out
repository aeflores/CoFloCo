Warning: Ignored call to eval_subsetdump_stop/1 in equation loop_cont_eval_subsetdump_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_subsetdump_bb3_in/5]
1. recursive  : [eval_subsetdump_18/6,eval_subsetdump_19/6,eval_subsetdump_bb9_in/6]
2. recursive  : [eval_subsetdump_14/3,eval_subsetdump_15/3,eval_subsetdump_22/4,eval_subsetdump_23/4,eval_subsetdump_bb12_in/3,eval_subsetdump_bb1_in/2,eval_subsetdump_bb6_in/3,loop_cont_eval_subsetdump_bb3_in/4,loop_cont_eval_subsetdump_bb9_in/4]
3. non_recursive  : [loop_cont_eval_subsetdump_bb1_in/2]
4. non_recursive  : [eval_subsetdump_bb0_in/1]
5. non_recursive  : [eval_subsetdump_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_subsetdump_bb3_in/5
1. SCC is partially evaluated into eval_subsetdump_bb9_in/6
2. SCC is partially evaluated into eval_subsetdump_bb1_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_subsetdump_bb0_in/1
5. SCC is partially evaluated into eval_subsetdump_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_subsetdump_bb3_in/5 
* CE 10 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_subsetdump_bb3_in/5 
* CE 13: eval_subsetdump_bb3_in(A,B,C,A,B) = 0
     [B>=128,127>=A,C=2] 
* CE 14: eval_subsetdump_bb3_in(A,B,C,A,B) = 0
     [B>=A,127>=B,C=2] 
* CE 15: eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) = 1+ eval_subsetdump_bb3_in(V_cnum_0,E,F,C,D)
     [V_cnum_1>=V_cnum_0,127>=V_cnum_1,V_cnum_1+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_subsetdump_bb3_in/5 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_subsetdump_bb3_in/5 
* Loop 10: eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D)->  eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1',B',C,D)
                  [V_cnum_1>=V_cnum_0,127>=V_cnum_1,V_cnum_1+1=V_cnum_1',B'=2,B=2] 
* Loop 11: eval_subsetdump_bb3_in(A,B,C,A,B) [B>=A,127>=B,C=2] 
* Loop 12: eval_subsetdump_bb3_in(A,B,C,A,B) [B>=128,127>=A,C=2] 

### Ranking functions of CR eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) 
* RF of phase [10]: [-V_cnum_1+128]

#### Partial ranking functions of CR eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_cnum_1+128


### Resulting Chains:eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) 
* [[10],12]
* [[10],11]
* [11]


### Merging Chains  eval_subsetdump_bb3_in/5 into  External patterns of execution 
* [[12,[10]]] --> 1 
* [[11]] --> 2 
* [[11,[10]]] --> 3 


### Specialization of cost equations eval_subsetdump_bb9_in/6 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_subsetdump_bb9_in/6 
* CE 16: eval_subsetdump_bb9_in(A,B,C,D,A,B) = 0
     [C>=B,C>=A,D=3] 
* CE 17: eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) = 1+ eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,E,F,C,D)
     [V_cnum_1>=V_rangestart_0+1,V_rangestart_0>=V_cnum_0,V_rangestart_0+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_subsetdump_bb9_in/6 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of eval_subsetdump_bb9_in/6 
* Loop 13: eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D)->  eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0',B',C,D)
                  [V_cnum_1>=V_rangestart_0+1,V_rangestart_0>=V_cnum_0,V_rangestart_0+1=V_rangestart_0',B'=3,B=3] 
* Loop 14: eval_subsetdump_bb9_in(A,B,C,D,A,B) [C>=B,C>=A,D=3] 

### Ranking functions of CR eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) 
* RF of phase [13]: [V_cnum_1-V_rangestart_0]

#### Partial ranking functions of CR eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_cnum_1-V_rangestart_0


### Resulting Chains:eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) 
* [[13],14]
* [14]


### Merging Chains  eval_subsetdump_bb9_in/6 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations eval_subsetdump_bb1_in/2 
* CE 7 is refined into CE [18] 
* CE 4 is refined into CE [19,20,21] 
* CE 5 is refined into CE [22,23,24] 
* CE 6 is refined into CE [25] 


#### Refined cost equations eval_subsetdump_bb1_in/2 
* CE 18: eval_subsetdump_bb1_in(V_cnum_0,B) = 0
     [V_cnum_0>=128,B=4] 
* CE 19: eval_subsetdump_bb1_in(V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,D):1+ eval_subsetdump_bb1_in(E,F)
     [127>=V_cnum_0,F=4,E=129,D=128,C=2,B=4] 
* CE 20: eval_subsetdump_bb1_in(V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,V_cnum_0):2+ eval_subsetdump_bb1_in(D,E)
     [127>=V_cnum_0,V_cnum_0+1=D,E=4,C=2,B=4] 
* CE 21: eval_subsetdump_bb1_in(V_cnum_0,B) = 2+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,D):3+ eval_subsetdump_bb1_in(E,F)
     [D>=V_cnum_0+1,127>=D,D+1=E,F=4,C=2,B=4] 
* CE 22: eval_subsetdump_bb1_in(V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,D):1+ eval_subsetdump_bb9_in(V_cnum_0,E,V_cnum_0,F,V_cnum_0,G):2+ eval_subsetdump_bb1_in(H,I)
     [127>=V_cnum_0,I=4,H=129,G=128,F=3,E=128,D=128,C=2,B=4] 
* CE 23: eval_subsetdump_bb1_in(V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,V_cnum_0):2+ eval_subsetdump_bb9_in(V_cnum_0,V_cnum_0,V_cnum_0,D,V_cnum_0,V_cnum_0):1+ eval_subsetdump_bb1_in(E,F)
     [127>=V_cnum_0,V_cnum_0+1=E,F=4,D=3,C=2,B=4] 
* CE 24: eval_subsetdump_bb1_in(V_cnum_0,B) = 3+ eval_subsetdump_bb3_in(V_cnum_0,V_cnum_0,C,V_cnum_0,D):3+ eval_subsetdump_bb9_in(V_cnum_0,D,V_cnum_0,E,V_cnum_0,D):2+ eval_subsetdump_bb1_in(F,G)
     [D>=V_cnum_0+1,127>=D,D+1=F,G=4,E=3,C=2,B=4] 
* CE 25: eval_subsetdump_bb1_in(V_cnum_0,B) = 1+ eval_subsetdump_bb1_in(C,D)
     [127>=V_cnum_0,V_cnum_0+1=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_subsetdump_bb1_in/2 
* CEs [21,24] --> Loop 15 
* CEs [20,23,25] --> Loop 16 
* CEs [19,22] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of eval_subsetdump_bb1_in/2 
* Loop 15: eval_subsetdump_bb1_in(V_cnum_0,B)->  eval_subsetdump_bb1_in(V_cnum_0',B')
                  [V_cnum_0'>=V_cnum_0+2,128>=V_cnum_0',B'=4,B=4] 
* Loop 16: eval_subsetdump_bb1_in(V_cnum_0,B)->  eval_subsetdump_bb1_in(V_cnum_0',B')
                  [127>=V_cnum_0,V_cnum_0+1=V_cnum_0',B'=4,B=4] 
* Loop 17: eval_subsetdump_bb1_in(V_cnum_0,B)->  eval_subsetdump_bb1_in(V_cnum_0',B')
                  [127>=V_cnum_0,B'=4,V_cnum_0'=129,B=4] 
* Loop 18: eval_subsetdump_bb1_in(V_cnum_0,B) [V_cnum_0>=128,B=4] 

### Ranking functions of CR eval_subsetdump_bb1_in(V_cnum_0,B) 
* RF of phase [15,16]: [-V_cnum_0+128]

#### Partial ranking functions of CR eval_subsetdump_bb1_in(V_cnum_0,B) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    -V_cnum_0+127
  - RF of loop [16:1]:
    -V_cnum_0+128


### Resulting Chains:eval_subsetdump_bb1_in(V_cnum_0,B) 
* [[15,16],18]
* [[15,16],17,18]
* [17,18]


### Merging Chains  eval_subsetdump_bb1_in/2 into  External patterns of execution 
* [[18,17],[18,17,[15,16]],[18,[15,16]]] --> 1 


### Specialization of cost equations eval_subsetdump_bb0_in/1 
* CE 3 is refined into CE [26] 


#### Refined cost equations eval_subsetdump_bb0_in/1 
* CE 26: eval_subsetdump_bb0_in(B) = 1+ eval_subsetdump_bb1_in(C,D):1
     [D=4,C=0] 

### Cost equations --> "Loop" of eval_subsetdump_bb0_in/1 
* CEs [26] --> Loop 19 

#### Loops of eval_subsetdump_bb0_in/1 
* Loop 19: eval_subsetdump_bb0_in(B) [] 

### Ranking functions of CR eval_subsetdump_bb0_in(B) 

#### Partial ranking functions of CR eval_subsetdump_bb0_in(B) 


### Resulting Chains:eval_subsetdump_bb0_in(B) 
* [19]


### Merging Chains  eval_subsetdump_bb0_in/1 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_subsetdump_start/3 
* CE 2 is refined into CE [27] 


#### Refined cost equations eval_subsetdump_start/3 
* CE 27: eval_subsetdump_start(V_mask,V_dumpval,B) = 0+ eval_subsetdump_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_subsetdump_start/3 
* CEs [27] --> Loop 20 

#### Loops of eval_subsetdump_start/3 
* Loop 20: eval_subsetdump_start(V_mask,V_dumpval,B) [] 

### Ranking functions of CR eval_subsetdump_start(V_mask,V_dumpval,B) 

#### Partial ranking functions of CR eval_subsetdump_start(V_mask,V_dumpval,B) 


### Resulting Chains:eval_subsetdump_start(V_mask,V_dumpval,B) 
* [20]


### Merging Chains  eval_subsetdump_start/3 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) -> [eval_subsetdump_bb3_in(V_cnum_0',V_cnum_1',B',C',D')] 
1
#### Cost of phase [10]:eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) -> [eval_subsetdump_bb3_in(V_cnum_0',V_cnum_1',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< -V_cnum_1+128
it(10) =< -V_cnum_1+V_cnum_1'

#### Cost of phase [10]:eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D) -> [eval_subsetdump_bb3_in(V_cnum_0',V_cnum_1',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< -V_cnum_1+128
it(10) =< -V_cnum_1+V_cnum_1'

#### Cost of chains of eval_subsetdump_bb3_in(V_cnum_0,V_cnum_1,B,C,D):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -V_cnum_1+128

  with precondition: [B=2,D=128,V_cnum_0=C,127>=V_cnum_1,V_cnum_1>=V_cnum_0] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_cnum_1+D

  with precondition: [B=2,V_cnum_0=C,127>=D,V_cnum_1>=V_cnum_0,D>=V_cnum_1+1] 

* Chain [11]: 0
  with precondition: [B=2,V_cnum_0=C,V_cnum_1=D,127>=V_cnum_1,V_cnum_1>=V_cnum_0] 


#### Cost of loops [13] 

 * loop 13:eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) -> [eval_subsetdump_bb9_in(V_cnum_0',V_cnum_1',V_rangestart_0',B',C',D')] 
1
#### Cost of phase [13]:eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D) -> [eval_subsetdump_bb9_in(V_cnum_0',V_cnum_1',V_rangestart_0',B',C',D')] 
1*it(13)+0
  Such that:it(13) =< V_cnum_1-V_rangestart_0
it(13) =< V_cnum_1-V_rangestart_0-V_cnum_1'+V_rangestart_0'

#### Cost of chains of eval_subsetdump_bb9_in(V_cnum_0,V_cnum_1,V_rangestart_0,B,C,D):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< -V_rangestart_0+D

  with precondition: [B=3,V_cnum_0=C,V_cnum_1=D,V_rangestart_0>=V_cnum_0,V_cnum_1>=V_rangestart_0+1] 

* Chain [14]: 0
  with precondition: [B=3,V_cnum_0=C,V_cnum_1=D,V_rangestart_0>=V_cnum_0,V_rangestart_0>=V_cnum_1] 


#### Cost of loops [15,16] 

 * loop 15:eval_subsetdump_bb1_in(V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_cnum_0',B')] 
3*s(5)+3
  Such that:s(4) =< -V_cnum_0+V_cnum_0'
s(5) =< s(4)

 * loop 16:eval_subsetdump_bb1_in(V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_cnum_0',B')] 
3
#### Cost of phase [15,16]:eval_subsetdump_bb1_in(V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_cnum_0',B')] 
3*it(15)+3*it(16)+3*s(6)+0
  Such that:it(15) =< -V_cnum_0+127
aux(3) =< -V_cnum_0+128
aux(4) =< -V_cnum_0+V_cnum_0'
it(15) =< aux(3)
it(16) =< aux(3)
s(7) =< aux(3)
it(15) =< aux(4)
it(16) =< aux(4)
s(7) =< aux(4)
s(6) =< s(7)

#### Cost of phase [15,16]:eval_subsetdump_bb1_in(V_cnum_0,B) -> [eval_subsetdump_bb1_in(V_cnum_0',B')] 
3*it(15)+3*it(16)+3*s(6)+0
  Such that:it(15) =< -V_cnum_0+127
aux(3) =< -V_cnum_0+128
aux(4) =< -V_cnum_0+V_cnum_0'
it(15) =< aux(3)
it(16) =< aux(3)
s(7) =< aux(3)
it(15) =< aux(4)
it(16) =< aux(4)
s(7) =< aux(4)
s(6) =< s(7)

#### Cost of chains of eval_subsetdump_bb1_in(V_cnum_0,B):
* Chain [[15,16],18]: 3*it(15)+6*it(16)+0
  Such that:it(15) =< -V_cnum_0+127
aux(5) =< -V_cnum_0+128
it(15) =< aux(5)
it(16) =< aux(5)

  with precondition: [B=4,127>=V_cnum_0,V_cnum_0>=0] 

* Chain [[15,16],17,18]: 3*it(15)+9*it(16)+3
  Such that:it(15) =< -V_cnum_0+127
aux(8) =< -V_cnum_0+128
it(16) =< aux(8)
it(15) =< aux(8)

  with precondition: [B=4,126>=V_cnum_0,V_cnum_0>=0] 

* Chain [17,18]: 3*s(8)+3
  Such that:aux(7) =< -V_cnum_0+128
s(8) =< aux(7)

  with precondition: [B=4,127>=V_cnum_0,V_cnum_0>=0] 


#### Cost of chains of eval_subsetdump_bb0_in(B):
* Chain [19]: 6*s(21)+18*s(22)+4
  Such that:s(19) =< 127
s(20) =< 128
s(21) =< s(19)
s(22) =< s(20)
s(21) =< s(20)

  with precondition: [] 


#### Cost of chains of eval_subsetdump_start(V_mask,V_dumpval,B):
* Chain [20]: 6*s(25)+18*s(26)+4
  Such that:s(23) =< 127
s(24) =< 128
s(25) =< s(23)
s(26) =< s(24)
s(25) =< s(24)

  with precondition: [] 


Closed-form bounds of eval_subsetdump_start(V_mask,V_dumpval,B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: 3070 
    - Complexity: constant 

### Maximum cost of eval_subsetdump_start(V_mask,V_dumpval,B): 3070 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 54 ms.
* Invariants computed in 98 ms.
   - Backward Invariants 49 ms.
   - Transitive Invariants 17 ms.
* Refinement performed in 145 ms.
* Termination proved in 21 ms.
* Upper bounds computed in 161 ms.
   - Equation cost structures 44 ms.
   - Phase cost structures 71 ms.
   - Chain cost structures 54 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 560 ms.

