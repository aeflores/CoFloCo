Warning: Ignored call to eval_cap_ok_stop/1 in equation eval_cap_ok_bb30_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cap_ok_bb12_in/1]
1. recursive  : [eval_cap_ok_bb15_in/1]
2. recursive  : [eval_cap_ok_bb19_in/1]
3. recursive  : [eval_cap_ok_bb22_in/1]
4. recursive  : [eval_cap_ok_bb25_in/1]
5. recursive  : [eval_cap_ok_20/1,eval_cap_ok_21/1,eval_cap_ok_22/1,eval_cap_ok_23/1,eval_cap_ok_24/1,eval_cap_ok_25/1,eval_cap_ok_61/1,eval_cap_ok_62/1,eval_cap_ok_bb18_in/1,eval_cap_ok_bb28_in/1,eval_cap_ok_bb29_in/1,eval_cap_ok_bb6_in/1,loop_cont_eval_cap_ok_bb12_in/2,loop_cont_eval_cap_ok_bb15_in/2,loop_cont_eval_cap_ok_bb19_in/2,loop_cont_eval_cap_ok_bb22_in/2,loop_cont_eval_cap_ok_bb25_in/2]
6. non_recursive  : [eval_cap_ok_bb30_in/1]
7. non_recursive  : [loop_cont_eval_cap_ok_bb6_in/2]
8. non_recursive  : [eval_cap_ok_bb5_in/1]
9. non_recursive  : [eval_cap_ok_NewDefault_in/1]
10. non_recursive  : [eval_cap_ok_bb3_in/1]
11. non_recursive  : [eval_cap_ok_1/1]
12. non_recursive  : [eval_cap_ok_0/1]
13. non_recursive  : [eval_cap_ok_bb0_in/1]
14. non_recursive  : [eval_cap_ok_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cap_ok_bb12_in/1
1. SCC is partially evaluated into eval_cap_ok_bb15_in/1
2. SCC is partially evaluated into eval_cap_ok_bb19_in/1
3. SCC is partially evaluated into eval_cap_ok_bb22_in/1
4. SCC is partially evaluated into eval_cap_ok_bb25_in/1
5. SCC is partially evaluated into eval_cap_ok_bb6_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_cap_ok_bb5_in/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_cap_ok_1/1
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_cap_ok_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cap_ok_bb12_in/1 
* CE 41 is refined into CE [48] 
* CE 39 is refined into CE [49] 
* CE 40 is refined into CE [50] 


#### Refined cost equations eval_cap_ok_bb12_in/1 
* CE 48: eval_cap_ok_bb12_in(B) = 0
     [B=3] 
* CE 49: eval_cap_ok_bb12_in(B) = 0
     [B=2] 
* CE 50: eval_cap_ok_bb12_in(B) = 1+ eval_cap_ok_bb12_in(B)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_cap_ok_bb12_in/1 
* CEs [50] --> Loop 22 
* CEs [48] --> Loop 23 
* CEs [49] --> Loop 24 

#### Loops of eval_cap_ok_bb12_in/1 
* Loop 22: eval_cap_ok_bb12_in(B)->  eval_cap_ok_bb12_in(B)
                  [B>=2,3>=B] 
* Loop 23: eval_cap_ok_bb12_in(B) [B=3] 
* Loop 24: eval_cap_ok_bb12_in(B) [B=2] 

### Ranking functions of CR eval_cap_ok_bb12_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb12_in(B) 


### Resulting Chains:eval_cap_ok_bb12_in(B) 
* [[22]]...
* [[22],24]
* [[22],23]
* [24]
* [23]


### Merging Chains  eval_cap_ok_bb12_in/1 into  External patterns of execution 
* [[24],[24,[22]]] --> 1 
* [[23],[23,[22]]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations eval_cap_ok_bb15_in/1 
* CE 34 is refined into CE [51] 
* CE 32 is refined into CE [52] 
* CE 33 is refined into CE [53] 


#### Refined cost equations eval_cap_ok_bb15_in/1 
* CE 51: eval_cap_ok_bb15_in(B) = 0
     [B=3] 
* CE 52: eval_cap_ok_bb15_in(B) = 0
     [B=2] 
* CE 53: eval_cap_ok_bb15_in(B) = 1+ eval_cap_ok_bb15_in(B)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_cap_ok_bb15_in/1 
* CEs [53] --> Loop 25 
* CEs [51] --> Loop 26 
* CEs [52] --> Loop 27 

#### Loops of eval_cap_ok_bb15_in/1 
* Loop 25: eval_cap_ok_bb15_in(B)->  eval_cap_ok_bb15_in(B)
                  [B>=2,3>=B] 
* Loop 26: eval_cap_ok_bb15_in(B) [B=3] 
* Loop 27: eval_cap_ok_bb15_in(B) [B=2] 

### Ranking functions of CR eval_cap_ok_bb15_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb15_in(B) 


### Resulting Chains:eval_cap_ok_bb15_in(B) 
* [[25]]...
* [[25],27]
* [[25],26]
* [27]
* [26]


### Merging Chains  eval_cap_ok_bb15_in/1 into  External patterns of execution 
* [[27],[27,[25]]] --> 1 
* [[26],[26,[25]]] --> 2 
* [[[25]]] --> 3 


### Specialization of cost equations eval_cap_ok_bb19_in/1 
* CE 38 is refined into CE [54] 
* CE 37 is refined into CE [55] 
* CE 35 is refined into CE [56] 
* CE 36 is refined into CE [57] 


#### Refined cost equations eval_cap_ok_bb19_in/1 
* CE 54: eval_cap_ok_bb19_in(B) = 0
     [B=6] 
* CE 55: eval_cap_ok_bb19_in(B) = 0
     [B=5] 
* CE 56: eval_cap_ok_bb19_in(B) = 0
     [B=2] 
* CE 57: eval_cap_ok_bb19_in(B) = 1+ eval_cap_ok_bb19_in(B)
     [B>=2,6>=B] 

### Cost equations --> "Loop" of eval_cap_ok_bb19_in/1 
* CEs [57] --> Loop 28 
* CEs [54] --> Loop 29 
* CEs [55] --> Loop 30 
* CEs [56] --> Loop 31 

#### Loops of eval_cap_ok_bb19_in/1 
* Loop 28: eval_cap_ok_bb19_in(B)->  eval_cap_ok_bb19_in(B)
                  [B>=2,6>=B] 
* Loop 29: eval_cap_ok_bb19_in(B) [B=6] 
* Loop 30: eval_cap_ok_bb19_in(B) [B=5] 
* Loop 31: eval_cap_ok_bb19_in(B) [B=2] 

### Ranking functions of CR eval_cap_ok_bb19_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb19_in(B) 


### Resulting Chains:eval_cap_ok_bb19_in(B) 
* [[28]]...
* [[28],31]
* [[28],30]
* [[28],29]
* [31]
* [30]
* [29]


### Merging Chains  eval_cap_ok_bb19_in/1 into  External patterns of execution 
* [[31],[31,[28]]] --> 1 
* [[30],[30,[28]]] --> 2 
* [[29],[29,[28]]] --> 3 
* [[[28]]] --> 4 


### Specialization of cost equations eval_cap_ok_bb22_in/1 
* CE 47 is refined into CE [58] 
* CE 45 is refined into CE [59] 
* CE 46 is refined into CE [60] 


#### Refined cost equations eval_cap_ok_bb22_in/1 
* CE 58: eval_cap_ok_bb22_in(B) = 0
     [B=4] 
* CE 59: eval_cap_ok_bb22_in(B) = 0
     [B=2] 
* CE 60: eval_cap_ok_bb22_in(B) = 1+ eval_cap_ok_bb22_in(B)
     [B>=2,4>=B] 

### Cost equations --> "Loop" of eval_cap_ok_bb22_in/1 
* CEs [60] --> Loop 32 
* CEs [58] --> Loop 33 
* CEs [59] --> Loop 34 

#### Loops of eval_cap_ok_bb22_in/1 
* Loop 32: eval_cap_ok_bb22_in(B)->  eval_cap_ok_bb22_in(B)
                  [B>=2,4>=B] 
* Loop 33: eval_cap_ok_bb22_in(B) [B=4] 
* Loop 34: eval_cap_ok_bb22_in(B) [B=2] 

### Ranking functions of CR eval_cap_ok_bb22_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb22_in(B) 


### Resulting Chains:eval_cap_ok_bb22_in(B) 
* [[32]]...
* [[32],34]
* [[32],33]
* [34]
* [33]


### Merging Chains  eval_cap_ok_bb22_in/1 into  External patterns of execution 
* [[34],[34,[32]]] --> 1 
* [[33],[33,[32]]] --> 2 
* [[[32]]] --> 3 


### Specialization of cost equations eval_cap_ok_bb25_in/1 
* CE 44 is refined into CE [61] 
* CE 42 is refined into CE [62] 
* CE 43 is refined into CE [63] 


#### Refined cost equations eval_cap_ok_bb25_in/1 
* CE 61: eval_cap_ok_bb25_in(B) = 0
     [B=4] 
* CE 62: eval_cap_ok_bb25_in(B) = 0
     [B=2] 
* CE 63: eval_cap_ok_bb25_in(B) = 1+ eval_cap_ok_bb25_in(B)
     [B>=2,4>=B] 

### Cost equations --> "Loop" of eval_cap_ok_bb25_in/1 
* CEs [63] --> Loop 35 
* CEs [61] --> Loop 36 
* CEs [62] --> Loop 37 

#### Loops of eval_cap_ok_bb25_in/1 
* Loop 35: eval_cap_ok_bb25_in(B)->  eval_cap_ok_bb25_in(B)
                  [B>=2,4>=B] 
* Loop 36: eval_cap_ok_bb25_in(B) [B=4] 
* Loop 37: eval_cap_ok_bb25_in(B) [B=2] 

### Ranking functions of CR eval_cap_ok_bb25_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb25_in(B) 


### Resulting Chains:eval_cap_ok_bb25_in(B) 
* [[35]]...
* [[35],37]
* [[35],36]
* [37]
* [36]


### Merging Chains  eval_cap_ok_bb25_in/1 into  External patterns of execution 
* [[37],[37,[35]]] --> 1 
* [[36],[36,[35]]] --> 2 
* [[[35]]] --> 3 


### Specialization of cost equations eval_cap_ok_bb6_in/1 
* CE 12 is refined into CE [64,65,66] 
* CE 13 is refined into CE [67,68,69] 
* CE 14 is refined into CE [70,71,72,73] 
* CE 15 is refined into CE [74,75,76,77] 
* CE 16 is refined into CE [78,79,80,81] 
* CE 17 is refined into CE [82,83,84,85] 
* CE 18 is refined into CE [86,87,88,89] 
* CE 19 is refined into CE [90,91,92,93] 
* CE 20 is refined into CE [94,95,96,97] 
* CE 21 is refined into CE [98,99,100,101] 
* CE 28 is refined into CE [102,103] 
* CE 29 is refined into CE [104,105] 
* CE 31 is refined into CE [106] 
* CE 6 is refined into CE [107,108,109] 
* CE 7 is refined into CE [110,111,112] 
* CE 8 is refined into CE [113,114,115,116] 
* CE 9 is refined into CE [117,118,119,120] 
* CE 10 is refined into CE [121,122,123,124] 
* CE 11 is refined into CE [125,126,127,128] 
* CE 22 is refined into CE [129,130,131,132] 
* CE 23 is refined into CE [133,134,135,136] 
* CE 24 is refined into CE [137,138,139,140] 
* CE 25 is refined into CE [141,142,143,144] 
* CE 26 is refined into CE [145,146] 
* CE 27 is refined into CE [147,148] 
* CE 30 is refined into CE [149] 


#### Refined cost equations eval_cap_ok_bb6_in/1 
* CE 64: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):1+ eval_cap_ok_bb6_in(E)
     [E=7,D=2,C=3,B=7] 
* CE 65: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,D=2,C=3,B=7] 
* CE 66: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):3
     [D=7,E=2,C=3,B=7] 
* CE 67: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):1+ eval_cap_ok_bb6_in(E)
     [E=7,D=2,C=3,B=7] 
* CE 68: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,D=2,C=3,B=7] 
* CE 69: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):3
     [D=7,E=2,C=3,B=7] 
* CE 70: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):1+ eval_cap_ok_bb6_in(F)
     [F=7,E=2,D=6,C=3,B=7] 
* CE 71: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [F=7,E=2,D=6,C=3,B=7] 
* CE 72: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=2,D=6,C=3,B=7] 
* CE 73: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):3
     [D=7,E=2,F=6,C=3,B=7] 
* CE 74: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):1+ eval_cap_ok_bb6_in(F)
     [F=7,E=2,D=6,C=3,B=7] 
* CE 75: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [F=7,E=2,D=6,C=3,B=7] 
* CE 76: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=2,D=6,C=3,B=7] 
* CE 77: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):3
     [D=7,E=2,F=6,C=3,B=7] 
* CE 78: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):1+ eval_cap_ok_bb6_in(F)
     [F=7,E=2,D=5,C=3,B=7] 
* CE 79: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [F=7,E=2,D=5,C=3,B=7] 
* CE 80: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=2,D=5,C=3,B=7] 
* CE 81: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):3
     [D=7,E=2,F=5,C=3,B=7] 
* CE 82: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):1+ eval_cap_ok_bb6_in(F)
     [F=7,E=2,D=5,C=3,B=7] 
* CE 83: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [F=7,E=2,D=5,C=3,B=7] 
* CE 84: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=2,D=5,C=3,B=7] 
* CE 85: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):3
     [D=7,E=2,F=5,C=3,B=7] 
* CE 86: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):2+ eval_cap_ok_bb6_in(F)
     [F=7,E=4,D=6,C=3,B=7] 
* CE 87: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [F=7,E=4,D=6,C=3,B=7] 
* CE 88: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=4,D=6,C=3,B=7] 
* CE 89: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):3
     [D=7,E=4,F=6,C=3,B=7] 
* CE 90: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):2+ eval_cap_ok_bb6_in(F)
     [F=7,E=4,D=6,C=3,B=7] 
* CE 91: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [F=7,E=4,D=6,C=3,B=7] 
* CE 92: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=4,D=6,C=3,B=7] 
* CE 93: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):3
     [D=7,E=4,F=6,C=3,B=7] 
* CE 94: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):2+ eval_cap_ok_bb6_in(F)
     [F=7,E=4,D=5,C=3,B=7] 
* CE 95: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [F=7,E=4,D=5,C=3,B=7] 
* CE 96: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=4,D=5,C=3,B=7] 
* CE 97: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb15_in(C):3
     [D=7,E=4,F=5,C=3,B=7] 
* CE 98: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):2+ eval_cap_ok_bb6_in(F)
     [F=7,E=4,D=5,C=3,B=7] 
* CE 99: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [F=7,E=4,D=5,C=3,B=7] 
* CE 100: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=7,F=4,D=5,C=3,B=7] 
* CE 101: eval_cap_ok_bb6_in(B) = 4+ eval_cap_ok_bb12_in(C):3
     [D=7,E=4,F=5,C=3,B=7] 
* CE 102: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb15_in(C):1+ eval_cap_ok_bb6_in(D)
     [D=7,C=2,B=7] 
* CE 103: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb15_in(C):3
     [D=7,C=2,B=7] 
* CE 104: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb12_in(C):1+ eval_cap_ok_bb6_in(D)
     [D=7,C=2,B=7] 
* CE 105: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb12_in(C):3
     [D=7,C=2,B=7] 
* CE 106: eval_cap_ok_bb6_in(B) = 1+ eval_cap_ok_bb6_in(C)
     [C=7,B=7] 
* CE 107: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):1
     [D=2,C=3,B=7] 
* CE 108: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [D=2,C=3,B=7] 
* CE 109: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb15_in(C):3
     [D=2,C=3,B=7] 
* CE 110: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):1
     [D=2,C=3,B=7] 
* CE 111: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [D=2,C=3,B=7] 
* CE 112: eval_cap_ok_bb6_in(B) = 2+ eval_cap_ok_bb12_in(C):3
     [D=2,C=3,B=7] 
* CE 113: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):1
     [E=2,D=6,C=3,B=7] 
* CE 114: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [E=2,D=6,C=3,B=7] 
* CE 115: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=2,D=6,C=3,B=7] 
* CE 116: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):3
     [D=2,E=6,C=3,B=7] 
* CE 117: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):1
     [E=2,D=6,C=3,B=7] 
* CE 118: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [E=2,D=6,C=3,B=7] 
* CE 119: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=2,D=6,C=3,B=7] 
* CE 120: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):3
     [D=2,E=6,C=3,B=7] 
* CE 121: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):1
     [E=2,D=5,C=3,B=7] 
* CE 122: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [E=2,D=5,C=3,B=7] 
* CE 123: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=2,D=5,C=3,B=7] 
* CE 124: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):3
     [D=2,E=5,C=3,B=7] 
* CE 125: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):1
     [E=2,D=5,C=3,B=7] 
* CE 126: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [E=2,D=5,C=3,B=7] 
* CE 127: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=2,D=5,C=3,B=7] 
* CE 128: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):3
     [D=2,E=5,C=3,B=7] 
* CE 129: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):2
     [E=4,D=6,C=3,B=7] 
* CE 130: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [E=4,D=6,C=3,B=7] 
* CE 131: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=4,D=6,C=3,B=7] 
* CE 132: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):3
     [D=4,E=6,C=3,B=7] 
* CE 133: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):2
     [E=4,D=6,C=3,B=7] 
* CE 134: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):3+ eval_cap_ok_bb25_in(E):3
     [E=4,D=6,C=3,B=7] 
* CE 135: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=4,D=6,C=3,B=7] 
* CE 136: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):3
     [D=4,E=6,C=3,B=7] 
* CE 137: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):2
     [E=4,D=5,C=3,B=7] 
* CE 138: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [E=4,D=5,C=3,B=7] 
* CE 139: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=4,D=5,C=3,B=7] 
* CE 140: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb15_in(C):3
     [D=4,E=5,C=3,B=7] 
* CE 141: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):2
     [E=4,D=5,C=3,B=7] 
* CE 142: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):2+ eval_cap_ok_bb22_in(E):3
     [E=4,D=5,C=3,B=7] 
* CE 143: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):2+ eval_cap_ok_bb19_in(D):4
     [E=4,D=5,C=3,B=7] 
* CE 144: eval_cap_ok_bb6_in(B) = 3+ eval_cap_ok_bb12_in(C):3
     [D=4,E=5,C=3,B=7] 
* CE 145: eval_cap_ok_bb6_in(B) = 1+ eval_cap_ok_bb15_in(C):1
     [C=2,B=7] 
* CE 146: eval_cap_ok_bb6_in(B) = 1+ eval_cap_ok_bb15_in(C):3
     [C=2,B=7] 
* CE 147: eval_cap_ok_bb6_in(B) = 1+ eval_cap_ok_bb12_in(C):1
     [C=2,B=7] 
* CE 148: eval_cap_ok_bb6_in(B) = 1+ eval_cap_ok_bb12_in(C):3
     [C=2,B=7] 
* CE 149: eval_cap_ok_bb6_in(B) = 0
     [B=7] 

### Cost equations --> "Loop" of eval_cap_ok_bb6_in/1 
* CEs [107,110,113,117,121,125,129,133,137,141,145,147,149] --> Loop 38 
* CEs [65,66,68,69,71,72,73,75,76,77,79,80,81,83,84,85,87,88,89,91,92,93,95,96,97,99,100,101,103,105,108,109,111,112,114,115,116,118,119,120,122,123,124,126,127,128,130,131,132,134,135,136,138,139,140,142,143,144,146,148] --> Loop 39 
* CEs [64,67,70,74,78,82,86,90,94,98,102,104,106] --> Loop 40 

#### Loops of eval_cap_ok_bb6_in/1 
* Loop 38: eval_cap_ok_bb6_in(B) [B=7] 
* Loop 39: eval_cap_ok_bb6_in(B) [B=7] 
* Loop 40: eval_cap_ok_bb6_in(B)->  eval_cap_ok_bb6_in(B')
                  [B'=7,B=7] 

### Ranking functions of CR eval_cap_ok_bb6_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb6_in(B) 


### Resulting Chains:eval_cap_ok_bb6_in(B) 
* [[40]]...
* [[40],39]...
* [[40],38]
* [39]...
* [38]


### Merging Chains  eval_cap_ok_bb6_in/1 into  External patterns of execution 
* [[38],[38,[40]]] --> 1 
* [[39],[[40]],[39,[40]]] --> 2 


### Specialization of cost equations eval_cap_ok_bb5_in/1 
* CE 5 is refined into CE [150,151] 


#### Refined cost equations eval_cap_ok_bb5_in/1 
* CE 150: eval_cap_ok_bb5_in(B) = 1+ eval_cap_ok_bb6_in(C):1
     [C=7] 
* CE 151: eval_cap_ok_bb5_in(B) = 1+ eval_cap_ok_bb6_in(C):2
     [C=7] 

### Cost equations --> "Loop" of eval_cap_ok_bb5_in/1 
* CEs [151] --> Loop 41 
* CEs [150] --> Loop 42 

#### Loops of eval_cap_ok_bb5_in/1 
* Loop 41: eval_cap_ok_bb5_in(B) [] 
* Loop 42: eval_cap_ok_bb5_in(B) [] 

### Ranking functions of CR eval_cap_ok_bb5_in(B) 

#### Partial ranking functions of CR eval_cap_ok_bb5_in(B) 


### Resulting Chains:eval_cap_ok_bb5_in(B) 
* [42]
* [41]...


### Merging Chains  eval_cap_ok_bb5_in/1 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_cap_ok_1/1 
* CE 3 is refined into CE [152] 
* CE 4 is refined into CE [153,154] 


#### Refined cost equations eval_cap_ok_1/1 
* CE 152: eval_cap_ok_1(B) = 0
     [] 
* CE 153: eval_cap_ok_1(B) = 0+ eval_cap_ok_bb5_in(B):1
     [] 
* CE 154: eval_cap_ok_1(B) = 0+ eval_cap_ok_bb5_in(B):2
     [] 

### Cost equations --> "Loop" of eval_cap_ok_1/1 
* CEs [154] --> Loop 43 
* CEs [152,153] --> Loop 44 

#### Loops of eval_cap_ok_1/1 
* Loop 43: eval_cap_ok_1(B) [] 
* Loop 44: eval_cap_ok_1(B) [] 

### Ranking functions of CR eval_cap_ok_1(B) 

#### Partial ranking functions of CR eval_cap_ok_1(B) 


### Resulting Chains:eval_cap_ok_1(B) 
* [44]
* [43]...


### Merging Chains  eval_cap_ok_1/1 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_cap_ok_start/2 
* CE 2 is refined into CE [155,156] 


#### Refined cost equations eval_cap_ok_start/2 
* CE 155: eval_cap_ok_start(V_len,B) = 0+ eval_cap_ok_1(B):1
     [] 
* CE 156: eval_cap_ok_start(V_len,B) = 0+ eval_cap_ok_1(B):2
     [] 

### Cost equations --> "Loop" of eval_cap_ok_start/2 
* CEs [156] --> Loop 45 
* CEs [155] --> Loop 46 

#### Loops of eval_cap_ok_start/2 
* Loop 45: eval_cap_ok_start(V_len,B) [] 
* Loop 46: eval_cap_ok_start(V_len,B) [] 

### Ranking functions of CR eval_cap_ok_start(V_len,B) 

#### Partial ranking functions of CR eval_cap_ok_start(V_len,B) 


### Resulting Chains:eval_cap_ok_start(V_len,B) 
* [46]
* [45]...


### Merging Chains  eval_cap_ok_start/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_cap_ok_bb12_in(B) -> [eval_cap_ok_bb12_in(B')] 
1
#### Cost of phase [22]:eval_cap_ok_bb12_in(B) -> [eval_cap_ok_bb12_in(B')] 
1*it(22)+0
#### Cost of phase [22]:eval_cap_ok_bb12_in(B) -> [eval_cap_ok_bb12_in(B')] 
1*it(22)+0
#### Cost of phase [22]:eval_cap_ok_bb12_in(B) -> [eval_cap_ok_bb12_in(B')] 
1*it(22)+0
#### Cost of chains of eval_cap_ok_bb12_in(B):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [B>=2,3>=B] 

* Chain [[22],24]: 1*it(22)+0
  with precondition: [B=2] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=3] 

* Chain [24]: 0
  with precondition: [B=2] 

* Chain [23]: 0
  with precondition: [B=3] 


#### Cost of loops [25] 

 * loop 25:eval_cap_ok_bb15_in(B) -> [eval_cap_ok_bb15_in(B')] 
1
#### Cost of phase [25]:eval_cap_ok_bb15_in(B) -> [eval_cap_ok_bb15_in(B')] 
1*it(25)+0
#### Cost of phase [25]:eval_cap_ok_bb15_in(B) -> [eval_cap_ok_bb15_in(B')] 
1*it(25)+0
#### Cost of phase [25]:eval_cap_ok_bb15_in(B) -> [eval_cap_ok_bb15_in(B')] 
1*it(25)+0
#### Cost of chains of eval_cap_ok_bb15_in(B):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [B>=2,3>=B] 

* Chain [[25],27]: 1*it(25)+0
  with precondition: [B=2] 

* Chain [[25],26]: 1*it(25)+0
  with precondition: [B=3] 

* Chain [27]: 0
  with precondition: [B=2] 

* Chain [26]: 0
  with precondition: [B=3] 


#### Cost of loops [28] 

 * loop 28:eval_cap_ok_bb19_in(B) -> [eval_cap_ok_bb19_in(B')] 
1
#### Cost of phase [28]:eval_cap_ok_bb19_in(B) -> [eval_cap_ok_bb19_in(B')] 
1*it(28)+0
#### Cost of phase [28]:eval_cap_ok_bb19_in(B) -> [eval_cap_ok_bb19_in(B')] 
1*it(28)+0
#### Cost of phase [28]:eval_cap_ok_bb19_in(B) -> [eval_cap_ok_bb19_in(B')] 
1*it(28)+0
#### Cost of phase [28]:eval_cap_ok_bb19_in(B) -> [eval_cap_ok_bb19_in(B')] 
1*it(28)+0
#### Cost of chains of eval_cap_ok_bb19_in(B):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [B>=2,6>=B] 

* Chain [[28],31]: 1*it(28)+0
  with precondition: [B=2] 

* Chain [[28],30]: 1*it(28)+0
  with precondition: [B=5] 

* Chain [[28],29]: 1*it(28)+0
  with precondition: [B=6] 

* Chain [31]: 0
  with precondition: [B=2] 

* Chain [30]: 0
  with precondition: [B=5] 

* Chain [29]: 0
  with precondition: [B=6] 


#### Cost of loops [32] 

 * loop 32:eval_cap_ok_bb22_in(B) -> [eval_cap_ok_bb22_in(B')] 
1
#### Cost of phase [32]:eval_cap_ok_bb22_in(B) -> [eval_cap_ok_bb22_in(B')] 
1*it(32)+0
#### Cost of phase [32]:eval_cap_ok_bb22_in(B) -> [eval_cap_ok_bb22_in(B')] 
1*it(32)+0
#### Cost of phase [32]:eval_cap_ok_bb22_in(B) -> [eval_cap_ok_bb22_in(B')] 
1*it(32)+0
#### Cost of chains of eval_cap_ok_bb22_in(B):
* Chain [[32]]...: 1*it(32)+0
  with precondition: [B>=2,4>=B] 

* Chain [[32],34]: 1*it(32)+0
  with precondition: [B=2] 

* Chain [[32],33]: 1*it(32)+0
  with precondition: [B=4] 

* Chain [34]: 0
  with precondition: [B=2] 

* Chain [33]: 0
  with precondition: [B=4] 


#### Cost of loops [35] 

 * loop 35:eval_cap_ok_bb25_in(B) -> [eval_cap_ok_bb25_in(B')] 
1
#### Cost of phase [35]:eval_cap_ok_bb25_in(B) -> [eval_cap_ok_bb25_in(B')] 
1*it(35)+0
#### Cost of phase [35]:eval_cap_ok_bb25_in(B) -> [eval_cap_ok_bb25_in(B')] 
1*it(35)+0
#### Cost of phase [35]:eval_cap_ok_bb25_in(B) -> [eval_cap_ok_bb25_in(B')] 
1*it(35)+0
#### Cost of chains of eval_cap_ok_bb25_in(B):
* Chain [[35]]...: 1*it(35)+0
  with precondition: [B>=2,4>=B] 

* Chain [[35],37]: 1*it(35)+0
  with precondition: [B=2] 

* Chain [[35],36]: 1*it(35)+0
  with precondition: [B=4] 

* Chain [37]: 0
  with precondition: [B=2] 

* Chain [36]: 0
  with precondition: [B=4] 


#### Cost of loops [40] 

 * loop 40:eval_cap_ok_bb6_in(B) -> [eval_cap_ok_bb6_in(B')] 
1*s(42)+0
#### Cost of phase [40]:eval_cap_ok_bb6_in(B) -> [eval_cap_ok_bb6_in(B')] 
1*s(43)+0
#### Cost of phase [40]:eval_cap_ok_bb6_in(B) -> [eval_cap_ok_bb6_in(B')] 
1*s(43)+0
#### Cost of phase [40]:eval_cap_ok_bb6_in(B) -> [eval_cap_ok_bb6_in(B')] 
1*s(43)+0
#### Cost of chains of eval_cap_ok_bb6_in(B):
* Chain [[40]]...: 1*s(43)+0
  with precondition: [B=7] 

* Chain [[40],39]...: 2*aux(13)+0
  with precondition: [B=7] 

* Chain [[40],38]: 2*aux(14)+0
  with precondition: [B=7] 

* Chain [39]...: 1*aux(13)+0
  with precondition: [B=7] 

* Chain [38]: 1*aux(14)+0
  with precondition: [B=7] 


#### Cost of chains of eval_cap_ok_bb5_in(B):
* Chain [42]: 1*s(191)+1
  with precondition: [] 

* Chain [41]...: 1*s(192)+1
  with precondition: [] 


#### Cost of chains of eval_cap_ok_1(B):
* Chain [44]: 1*aux(17)+0
  with precondition: [] 

* Chain [43]...: 1*s(194)+1
  with precondition: [] 


#### Cost of chains of eval_cap_ok_start(V_len,B):
* Chain [46]: 1*s(195)+0
  with precondition: [] 

* Chain [45]...: 1*s(196)+1
  with precondition: [] 


Closed-form bounds of eval_cap_ok_start(V_len,B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cap_ok_start(V_len,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 40 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 93 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 56 ms.
   - Equation cost structures 29 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 251 ms.

