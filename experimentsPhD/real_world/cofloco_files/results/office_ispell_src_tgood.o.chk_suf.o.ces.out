Warning: Ignored call to eval_chk_suf_stop/1 in equation eval_chk_suf_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_chk_suf_10/13,eval_chk_suf_9/13,eval_chk_suf_bb1_in/13,eval_chk_suf_bb6_in/13]
1. non_recursive  : [eval_chk_suf_bb7_in/1]
2. non_recursive  : [eval_chk_suf_17/1]
3. non_recursive  : [eval_chk_suf_16/7]
4. non_recursive  : [eval_chk_suf__critedge_in/7]
5. non_recursive  : [loop_cont_eval_chk_suf_bb1_in/8]
6. non_recursive  : [eval_chk_suf_1/7]
7. non_recursive  : [eval_chk_suf_0/7]
8. non_recursive  : [eval_chk_suf_bb0_in/7]
9. non_recursive  : [eval_chk_suf_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_chk_suf_bb1_in/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_chk_suf_bb1_in/8
6. SCC is partially evaluated into eval_chk_suf_1/7
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_chk_suf_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_chk_suf_bb1_in/13 
* CE 6 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations eval_chk_suf_bb1_in/13 
* CE 9: eval_chk_suf_bb1_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=3] 
* CE 10: eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) = 0
     [B=2] 
* CE 11: eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) = 1+ eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H)
     [] 

### Cost equations --> "Loop" of eval_chk_suf_bb1_in/13 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_chk_suf_bb1_in/13 
* Loop 8: eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H)->  eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H)
                  [] 
* Loop 9: eval_chk_suf_bb1_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=3] 
* Loop 10: eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) [B=2] 

### Ranking functions of CR eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) 


### Resulting Chains:eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) 
* [[8]]...
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_chk_suf_bb1_in/13 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9],[9,[8]]] --> 2 
* [[[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_chk_suf_bb1_in/8 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations loop_cont_eval_chk_suf_bb1_in/8 
* CE 12: loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) = 0
     [H=3] 
* CE 13: loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_chk_suf_bb1_in/8 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of loop_cont_eval_chk_suf_bb1_in/8 
* Loop 11: loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) [H=3] 
* Loop 12: loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) [H=2] 

### Ranking functions of CR loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_chk_suf_bb1_in/8 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_chk_suf_1/7 
* CE 3 is refined into CE [14,15,16] 


#### Refined cost equations eval_chk_suf_1/7 
* CE 14: eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) = 1+ eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,C,D,E,F,G,H,I):1+ loop_cont_eval_chk_suf_bb1_in(J,D,E,F,G,H,I,B):1
     [J=2,C=2] 
* CE 15: eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) = 1+ eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,C,V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag):2+ loop_cont_eval_chk_suf_bb1_in(D,V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B):2
     [D=3,C=3] 
* CE 16: eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) = 1+ eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,C,D,E,F,G,H,I):3
     [] 

### Cost equations --> "Loop" of eval_chk_suf_1/7 
* CEs [16] --> Loop 13 
* CEs [14,15] --> Loop 14 

#### Loops of eval_chk_suf_1/7 
* Loop 13: eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) [] 
* Loop 14: eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) [] 

### Ranking functions of CR eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 

#### Partial ranking functions of CR eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 


### Resulting Chains:eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 
* [14]
* [13]...


### Merging Chains  eval_chk_suf_1/7 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_chk_suf_start/7 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_chk_suf_start/7 
* CE 17: eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) = 0+ eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B):1
     [] 
* CE 18: eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) = 0+ eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B):2
     [] 

### Cost equations --> "Loop" of eval_chk_suf_start/7 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_chk_suf_start/7 
* Loop 15: eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) [] 
* Loop 16: eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) [] 

### Ranking functions of CR eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 

#### Partial ranking functions of CR eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 


### Resulting Chains:eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B) 
* [16]
* [15]...


### Merging Chains  eval_chk_suf_start/7 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) -> [eval_chk_suf_bb1_in(V_len',V_optflags',V_ignoreflagbits',V_allhits',V__numhits',V__cflag',B',C',D',E',F',G',H')] 
1
#### Cost of phase [8]:eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) -> [eval_chk_suf_bb1_in(V_len',V_optflags',V_ignoreflagbits',V_allhits',V__numhits',V__cflag',B',C',D',E',F',G',H')] 
1*it(8)+0
#### Cost of phase [8]:eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) -> [eval_chk_suf_bb1_in(V_len',V_optflags',V_ignoreflagbits',V_allhits',V__numhits',V__cflag',B',C',D',E',F',G',H')] 
1*it(8)+0
#### Cost of phase [8]:eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H) -> [eval_chk_suf_bb1_in(V_len',V_optflags',V_ignoreflagbits',V_allhits',V__numhits',V__cflag',B',C',D',E',F',G',H')] 
1*it(8)+0
#### Cost of chains of eval_chk_suf_bb1_in(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B,C,D,E,F,G,H):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [] 

* Chain [[8],10]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=3,V_len=C,V_optflags=D,V_ignoreflagbits=E,V_allhits=F,V__numhits=G,V__cflag=H] 

* Chain [10]: 0
  with precondition: [B=2] 

* Chain [9]: 0
  with precondition: [B=3,C=V_len,D=V_optflags,E=V_ignoreflagbits,F=V_allhits,G=V__numhits,H=V__cflag] 


#### Cost of chains of loop_cont_eval_chk_suf_bb1_in(H,A,B,C,D,E,F,G):
* Chain [12]: 0
  with precondition: [H=2] 

* Chain [11]: 0
  with precondition: [H=3] 


#### Cost of chains of eval_chk_suf_1(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B):
* Chain [14]: 1*aux(3)+0
  with precondition: [] 

* Chain [13]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B):
* Chain [16]: 1*s(6)+0
  with precondition: [] 

* Chain [15]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_chk_suf_start(V_len,V_optflags,V_ignoreflagbits,V_allhits,V__numhits,V__cflag,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 71 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 23 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 96 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 364 ms.

