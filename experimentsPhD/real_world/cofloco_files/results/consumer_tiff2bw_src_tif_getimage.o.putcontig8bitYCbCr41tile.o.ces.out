Warning: Ignored call to eval_putcontig8bitYCbCr41tile_stop/1 in equation loop_cont_eval_putcontig8bitYCbCr41tile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_putcontig8bitYCbCr41tile_bb2_in/6]
1. recursive  : [eval_putcontig8bitYCbCr41tile_bb1_in/3,loop_cont_eval_putcontig8bitYCbCr41tile_bb2_in/4]
2. non_recursive  : [loop_cont_eval_putcontig8bitYCbCr41tile_bb1_in/2]
3. non_recursive  : [eval_putcontig8bitYCbCr41tile_bb0_in/2]
4. non_recursive  : [eval_putcontig8bitYCbCr41tile_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_putcontig8bitYCbCr41tile_bb2_in/6
1. SCC is partially evaluated into eval_putcontig8bitYCbCr41tile_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_putcontig8bitYCbCr41tile_bb0_in/2
4. SCC is partially evaluated into eval_putcontig8bitYCbCr41tile_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_putcontig8bitYCbCr41tile_bb2_in/6 
* CE 9 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15] 


#### Refined cost equations eval_putcontig8bitYCbCr41tile_bb2_in/6 
* CE 11: eval_putcontig8bitYCbCr41tile_bb2_in(A,B,C,D,A,E) = 0
     [B>=2,A>=1,B=E+1,D=2,C=1] 
* CE 12: eval_putcontig8bitYCbCr41tile_bb2_in(A,B,C,D,A,E) = 0
     [A>=1,0>=B,B=E+1,D=2,C=1] 
* CE 13: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) = 0
     [V_12>=1,B=3,V__01=1,V__02=1] 
* CE 14: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) = 1+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,E,B,C,D)
     [V_12>=V__01,B>=2,V__01>=2,3>=B,V__01=E+1] 
* CE 15: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) = 1+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,E,B,C,D)
     [V_12>=V__01,B>=2,3>=B,0>=V__01,V__01=E+1] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr41tile_bb2_in/6 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_putcontig8bitYCbCr41tile_bb2_in/6 
* Loop 10: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D)->  eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01',B,C,D)
                  [V_12>=V__01,B>=2,V__01>=2,3>=B,V__01=V__01'+1] 
* Loop 11: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D)->  eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01',B,C,D)
                  [V_12>=V__01,B>=2,3>=B,0>=V__01,V__01=V__01'+1] 
* Loop 12: eval_putcontig8bitYCbCr41tile_bb2_in(A,B,C,D,A,E) [B>=2,A>=1,B=E+1,D=2,C=1] 
* Loop 13: eval_putcontig8bitYCbCr41tile_bb2_in(A,B,C,D,A,E) [A>=1,0>=B,B=E+1,D=2,C=1] 
* Loop 14: eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) [V_12>=1,B=3,V__01=1,V__02=1] 

### Ranking functions of CR eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) 
* RF of phase [10]: [V__01-1]

#### Partial ranking functions of CR eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__01-1


### Resulting Chains:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) 
* [[11]]...
* [[10],14]
* [[10],13]
* [[10],12]
* [14]
* [13]
* [12]


### Merging Chains  eval_putcontig8bitYCbCr41tile_bb2_in/6 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[10]]] --> 2 
* [[13]] --> 3 
* [[12]] --> 4 
* [[13,[10]]] --> 5 
* [[12,[10]]] --> 6 
* [[[11]]] --> 7 


### Specialization of cost equations eval_putcontig8bitYCbCr41tile_bb1_in/3 
* CE 5 is refined into CE [16,17,18,19,20] 
* CE 4 is refined into CE [21,22,23] 


#### Refined cost equations eval_putcontig8bitYCbCr41tile_bb1_in/3 
* CE 16: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 2+ eval_putcontig8bitYCbCr41tile_bb2_in(C,D,E,F,G,H):3+ eval_putcontig8bitYCbCr41tile_bb1_in(I,H,J)
     [0>=H+1,H+1=D,H+1=V__02,J=3,I=1,G=1,F=2,E=1,C=1,B=3,V_12=1] 
* CE 17: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 2+ eval_putcontig8bitYCbCr41tile_bb2_in(C,D,E,F,G,H):4+ eval_putcontig8bitYCbCr41tile_bb1_in(I,H,J)
     [H>=1,H+1=D,H+1=V__02,J=3,I=1,G=1,F=2,E=1,C=1,B=3,V_12=1] 
* CE 18: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 2+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,C,V_12,D,V_12,E):5+ eval_putcontig8bitYCbCr41tile_bb1_in(V_12,E,F)
     [V_12>=2,0>=E+1,E+1=C,E+1=V__02,F=3,D=2,B=3] 
* CE 19: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 2+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,C,V_12,D,V_12,E):6+ eval_putcontig8bitYCbCr41tile_bb1_in(V_12,E,F)
     [E>=1,V_12>=2,E+1=C,E+1=V__02,F=3,D=2,B=3] 
* CE 20: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 2+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V_12,C,D,E):7
     [0>=V_12,F=3,C=2,B=3] 
* CE 21: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 1+ eval_putcontig8bitYCbCr41tile_bb2_in(C,D,E,F,G,H):1
     [F=3,E=1,D=1,C=1,B=3,V__02=1,V_12=1] 
* CE 22: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 1+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,C,V_12,D,E,F):2
     [V_12>=2,D=3,C=1,B=3,V__02=1] 
* CE 23: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) = 1+ eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V_12,C,D,E):7
     [0>=V_12,C=3,B=3] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr41tile_bb1_in/3 
* CEs [20,23] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [16] --> Loop 21 

#### Loops of eval_putcontig8bitYCbCr41tile_bb1_in/3 
* Loop 15: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) [0>=V_12,B=3] 
* Loop 16: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) [V_12>=2,B=3,V__02=1] 
* Loop 17: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) [B=3,V__02=1,V_12=1] 
* Loop 18: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B)->  eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02',B')
                  [V__02>=2,V_12>=2,V__02=V__02'+1,B'=3,B=3] 
* Loop 19: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B)->  eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02',B')
                  [V_12>=2,0>=V__02,V__02=V__02'+1,B'=3,B=3] 
* Loop 20: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B)->  eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')
                  [V__02>=2,V__02=V__02'+1,B'=3,V_12'=1,B=3,V_12=1] 
* Loop 21: eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B)->  eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')
                  [0>=V__02,V__02=V__02'+1,B'=3,V_12'=1,B=3,V_12=1] 

### Ranking functions of CR eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) 
* RF of phase [18]: [V__02-1]
* RF of phase [20]: [V__02-1]

#### Partial ranking functions of CR eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V__02-1
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V__02-1


### Resulting Chains:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) 
* [[21]]...
* [[20],17]
* [[19]]...
* [[18],16]
* [17]
* [16]
* [15]...


### Merging Chains  eval_putcontig8bitYCbCr41tile_bb1_in/3 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[20]]] --> 2 
* [[16]] --> 3 
* [[16,[18]]] --> 4 
* [[[21]]] --> 5 
* [[15]] --> 6 
* [[[19]]] --> 7 


### Specialization of cost equations eval_putcontig8bitYCbCr41tile_bb0_in/2 
* CE 3 is refined into CE [24,25,26,27,28,29,30] 


#### Refined cost equations eval_putcontig8bitYCbCr41tile_bb0_in/2 
* CE 24: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,D,E):1
     [E=3,D=1,C=1,V_h=1] 
* CE 25: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,V_h,D):2
     [V_h>=2,D=3,C=1] 
* CE 26: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,D,E):3
     [C>=2,E=3,D=1,V_h=1] 
* CE 27: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,V_h,D):4
     [V_h>=2,C>=2,D=3] 
* CE 28: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,V_h,D):5
     [0>=V_h,D=3,C=1] 
* CE 29: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,V_h,D):6
     [0>=C,D=3] 
* CE 30: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr41tile_bb1_in(C,V_h,D):7
     [C>=2,0>=V_h,D=3] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr41tile_bb0_in/2 
* CEs [28,29,30] --> Loop 22 
* CEs [25,27] --> Loop 23 
* CEs [24,26] --> Loop 24 

#### Loops of eval_putcontig8bitYCbCr41tile_bb0_in/2 
* Loop 22: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) [] 
* Loop 23: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) [V_h>=2] 
* Loop 24: eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) [V_h=1] 

### Ranking functions of CR eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) 

#### Partial ranking functions of CR eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) 


### Resulting Chains:eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B) 
* [24]
* [23]
* [22]...


### Merging Chains  eval_putcontig8bitYCbCr41tile_bb0_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations eval_putcontig8bitYCbCr41tile_start/7 
* CE 2 is refined into CE [31,32,33] 


#### Refined cost equations eval_putcontig8bitYCbCr41tile_start/7 
* CE 31: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr41tile_bb0_in(C,B):1
     [C=1,V_h=1] 
* CE 32: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B):2
     [V_h>=2] 
* CE 33: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B):3
     [] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr41tile_start/7 
* CEs [33] --> Loop 25 
* CEs [32] --> Loop 26 
* CEs [31] --> Loop 27 

#### Loops of eval_putcontig8bitYCbCr41tile_start/7 
* Loop 25: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [] 
* Loop 26: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=2] 
* Loop 27: eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h=1] 

### Ranking functions of CR eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 

#### Partial ranking functions of CR eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 


### Resulting Chains:eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 
* [27]
* [26]
* [25]...


### Merging Chains  eval_putcontig8bitYCbCr41tile_start/7 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1
#### Cost of phase [11]:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1*it(11)+0
#### Cost of loops [10] 

 * loop 10:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1
#### Cost of phase [10]:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of phase [10]:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of phase [10]:eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr41tile_bb2_in(V_12',V__02',V__01',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< V__01
it(10) =< V__01-V__01'

#### Cost of chains of eval_putcontig8bitYCbCr41tile_bb2_in(V_12,V__02,V__01,B,C,D):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [0>=V__01,V_12>=V__01,B>=2,3>=B] 

* Chain [[10],14]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [V__02=1,B=3,V__01>=2,V_12>=V__01] 

* Chain [[10],13]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [B=2,V_12=C,V__02=D+1,0>=V__02,V__01>=2,V_12>=V__01] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [B=2,V_12=C,V__02=D+1,V__02>=2,V__01>=2,V_12>=V__01] 

* Chain [14]: 0
  with precondition: [V__02=1,V__01=1,B=3,V_12>=1] 

* Chain [13]: 0
  with precondition: [V__01=1,B=2,V_12=C,V__02=D+1,0>=V__02,V_12>=1] 

* Chain [12]: 0
  with precondition: [V__01=1,B=2,V_12=C,V__02=D+1,V_12>=1,V__02>=2] 


#### Cost of loops [21] 

 * loop 21:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2
#### Cost of phase [21]:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2*it(21)+0
#### Cost of loops [20] 

 * loop 20:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2
#### Cost of phase [20]:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2*it(20)+0
  Such that:it(20) =< V__02
it(20) =< V__02-V__02'

#### Cost of loops [19] 

 * loop 19:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
1*s(2)+2
  Such that:s(2) =< V_12'

#### Cost of phase [19]:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2*it(19)+1*s(3)+0
#### Cost of loops [18] 

 * loop 18:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
1*s(6)+2
  Such that:s(6) =< V_12'

#### Cost of phase [18]:eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B) -> [eval_putcontig8bitYCbCr41tile_bb1_in(V_12',V__02',B')] 
2*it(18)+1*s(7)+0
  Such that:aux(2) =< V_12
it(18) =< V__02
it(18) =< V__02-V__02'
s(7) =< it(18)*aux(2)

#### Cost of chains of eval_putcontig8bitYCbCr41tile_bb1_in(V_12,V__02,B):
* Chain [[21]]...: 2*it(21)+0
  with precondition: [V_12=1,0>=V__02,B=3] 

* Chain [[20],17]: 2*it(20)+1
  Such that:it(20) =< V__02

  with precondition: [V_12=1,B=3,V__02>=2] 

* Chain [[19]]...: 3*it(19)+0
  with precondition: [V_12>=2,0>=V__02,B=3] 

* Chain [[18],16]: 2*it(18)+1*s(4)+1*s(7)+1
  Such that:it(18) =< V__02
aux(3) =< V_12
s(4) =< aux(3)
s(7) =< it(18)*aux(3)

  with precondition: [B=3,V_12>=2,V__02>=2] 

* Chain [17]: 1
  with precondition: [V_12=1,V__02=1,B=3] 

* Chain [16]: 1*s(4)+1
  Such that:s(4) =< V_12

  with precondition: [V__02=1,B=3,V_12>=2] 

* Chain [15]...: 1*aux(4)+0
  with precondition: [B=3,0>=V_12] 


#### Cost of chains of eval_putcontig8bitYCbCr41tile_bb0_in(V_h,B):
* Chain [24]: 1*aux(5)+0
  with precondition: [V_h=1] 

* Chain [23]: 4*s(11)+2*s(14)+2
  Such that:aux(6) =< V_h
s(11) =< aux(6)

  with precondition: [V_h>=2] 

* Chain [22]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B):
* Chain [27]: 1*s(19)+0
  with precondition: [V_h=1] 

* Chain [26]: 4*s(21)+2*s(22)+2
  Such that:s(20) =< V_h
s(21) =< s(20)

  with precondition: [V_h>=2] 

* Chain [25]...: 1*s(23)+0
  with precondition: [] 


Closed-form bounds of eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): 
-------------------------------------
* Chain [27] with precondition: [V_h=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26] with precondition: [V_h>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_putcontig8bitYCbCr41tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 45 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 67 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 66 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 29 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 226 ms.

