Warning: Ignored call to eval_ialloc_init_stop/1 in equation eval_ialloc_init_22/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ialloc_init_bb3_in/2]
1. non_recursive  : [eval_ialloc_init_22/1]
2. non_recursive  : [eval_ialloc_init_21/1]
3. non_recursive  : [loop_cont_eval_ialloc_init_bb3_in/2]
4. non_recursive  : [eval_ialloc_init_5/1]
5. non_recursive  : [eval_ialloc_init_4/2]
6. non_recursive  : [eval_ialloc_init_bb2_in/2]
7. non_recursive  : [eval_ialloc_init_3/2]
8. non_recursive  : [eval_ialloc_init_2/2]
9. non_recursive  : [eval_ialloc_init_1/2]
10. non_recursive  : [eval_ialloc_init_0/2]
11. non_recursive  : [eval_ialloc_init_bb0_in/2]
12. non_recursive  : [eval_ialloc_init_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ialloc_init_bb3_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_ialloc_init_5/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_ialloc_init_1/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_ialloc_init_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ialloc_init_bb3_in/2 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_ialloc_init_bb3_in/2 
* CE 7: eval_ialloc_init_bb3_in(V_i_0,B) = 0
     [V_i_0>=4,B=2] 
* CE 8: eval_ialloc_init_bb3_in(V_i_0,B) = 1+ eval_ialloc_init_bb3_in(C,D)
     [V_i_0>=0,3>=V_i_0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_ialloc_init_bb3_in/2 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_ialloc_init_bb3_in/2 
* Loop 6: eval_ialloc_init_bb3_in(V_i_0,B)->  eval_ialloc_init_bb3_in(V_i_0',B')
                  [V_i_0>=0,3>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 7: eval_ialloc_init_bb3_in(V_i_0,B) [V_i_0>=4,B=2] 

### Ranking functions of CR eval_ialloc_init_bb3_in(V_i_0,B) 
* RF of phase [6]: [-V_i_0+4]

#### Partial ranking functions of CR eval_ialloc_init_bb3_in(V_i_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    -V_i_0+4


### Resulting Chains:eval_ialloc_init_bb3_in(V_i_0,B) 
* [[6],7]


### Merging Chains  eval_ialloc_init_bb3_in/2 into  External patterns of execution 
* [[7,[6]]] --> 1 


### Specialization of cost equations eval_ialloc_init_5/1 
* CE 4 is refined into CE [9] 


#### Refined cost equations eval_ialloc_init_5/1 
* CE 9: eval_ialloc_init_5(B) = 1+ eval_ialloc_init_bb3_in(C,D):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_ialloc_init_5/1 
* CEs [9] --> Loop 8 

#### Loops of eval_ialloc_init_5/1 
* Loop 8: eval_ialloc_init_5(B) [] 

### Ranking functions of CR eval_ialloc_init_5(B) 

#### Partial ranking functions of CR eval_ialloc_init_5(B) 


### Resulting Chains:eval_ialloc_init_5(B) 
* [8]


### Merging Chains  eval_ialloc_init_5/1 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_ialloc_init_1/2 
* CE 3 is refined into CE [10] 


#### Refined cost equations eval_ialloc_init_1/2 
* CE 10: eval_ialloc_init_1(V_chunk_size,B) = 0+ eval_ialloc_init_5(B):1
     [] 

### Cost equations --> "Loop" of eval_ialloc_init_1/2 
* CEs [10] --> Loop 9 

#### Loops of eval_ialloc_init_1/2 
* Loop 9: eval_ialloc_init_1(V_chunk_size,B) [] 

### Ranking functions of CR eval_ialloc_init_1(V_chunk_size,B) 

#### Partial ranking functions of CR eval_ialloc_init_1(V_chunk_size,B) 


### Resulting Chains:eval_ialloc_init_1(V_chunk_size,B) 
* [9]


### Merging Chains  eval_ialloc_init_1/2 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_ialloc_init_start/3 
* CE 2 is refined into CE [11] 


#### Refined cost equations eval_ialloc_init_start/3 
* CE 11: eval_ialloc_init_start(V_chunk_size,V_level2,B) = 0+ eval_ialloc_init_1(V_chunk_size,B):1
     [] 

### Cost equations --> "Loop" of eval_ialloc_init_start/3 
* CEs [11] --> Loop 10 

#### Loops of eval_ialloc_init_start/3 
* Loop 10: eval_ialloc_init_start(V_chunk_size,V_level2,B) [] 

### Ranking functions of CR eval_ialloc_init_start(V_chunk_size,V_level2,B) 

#### Partial ranking functions of CR eval_ialloc_init_start(V_chunk_size,V_level2,B) 


### Resulting Chains:eval_ialloc_init_start(V_chunk_size,V_level2,B) 
* [10]


### Merging Chains  eval_ialloc_init_start/3 into  External patterns of execution 
* [[10]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_ialloc_init_bb3_in(V_i_0,B) -> [eval_ialloc_init_bb3_in(V_i_0',B')] 
1
#### Cost of phase [6]:eval_ialloc_init_bb3_in(V_i_0,B) -> [eval_ialloc_init_bb3_in(V_i_0',B')] 
1*it(6)+0
  Such that:it(6) =< -V_i_0+4
it(6) =< -V_i_0+V_i_0'

#### Cost of chains of eval_ialloc_init_bb3_in(V_i_0,B):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< -V_i_0+4

  with precondition: [B=2,3>=V_i_0,V_i_0>=0] 


#### Cost of chains of eval_ialloc_init_5(B):
* Chain [8]: 1*s(1)+1
  Such that:s(1) =< 4

  with precondition: [] 


#### Cost of chains of eval_ialloc_init_1(V_chunk_size,B):
* Chain [9]: 1*s(2)+1
  Such that:s(2) =< 4

  with precondition: [] 


#### Cost of chains of eval_ialloc_init_start(V_chunk_size,V_level2,B):
* Chain [10]: 1*s(3)+1
  Such that:s(3) =< 4

  with precondition: [] 


Closed-form bounds of eval_ialloc_init_start(V_chunk_size,V_level2,B): 
-------------------------------------
* Chain [10] with precondition: [] 
    - Upper bound: 5 
    - Complexity: constant 

### Maximum cost of eval_ialloc_init_start(V_chunk_size,V_level2,B): 5 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 23 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 104 ms.

