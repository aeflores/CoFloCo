Warning: Ignored call to eval_fill_inverse_cmap_stop/1 in equation loop_cont_eval_fill_inverse_cmap_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_fill_inverse_cmap_bb4_in/6]
1. recursive  : [eval_fill_inverse_cmap_bb2_in/4,loop_cont_eval_fill_inverse_cmap_bb4_in/5]
2. recursive  : [eval_fill_inverse_cmap_bb1_in/2,loop_cont_eval_fill_inverse_cmap_bb2_in/3]
3. non_recursive  : [loop_cont_eval_fill_inverse_cmap_bb1_in/2]
4. non_recursive  : [eval_fill_inverse_cmap_11/1]
5. non_recursive  : [eval_fill_inverse_cmap_10/5]
6. non_recursive  : [eval_fill_inverse_cmap_9/4]
7. non_recursive  : [eval_fill_inverse_cmap_bb0_in/1]
8. non_recursive  : [eval_fill_inverse_cmap_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_fill_inverse_cmap_bb4_in/6
1. SCC is partially evaluated into eval_fill_inverse_cmap_bb2_in/4
2. SCC is partially evaluated into eval_fill_inverse_cmap_bb1_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_fill_inverse_cmap_11/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_fill_inverse_cmap_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_fill_inverse_cmap_bb4_in/6 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_fill_inverse_cmap_bb4_in/6 
* CE 10: eval_fill_inverse_cmap_bb4_in(A,B,C,D,A,E) = 0
     [C>=4,7>=B,B+1=E,D=2] 
* CE 11: eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) = 1+ eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,E,F,C,D)
     [V_ic2_0>=0,3>=V_ic2_0,7>=V_ic1_0,V_ic2_0+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_fill_inverse_cmap_bb4_in/6 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_fill_inverse_cmap_bb4_in/6 
* Loop 9: eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D)->  eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0',B',C,D)
                  [V_ic2_0>=0,3>=V_ic2_0,7>=V_ic1_0,V_ic2_0+1=V_ic2_0',B'=2,B=2] 
* Loop 10: eval_fill_inverse_cmap_bb4_in(A,B,C,D,A,E) [C>=4,7>=B,B+1=E,D=2] 

### Ranking functions of CR eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) 
* RF of phase [9]: [-V_ic2_0+4]

#### Partial ranking functions of CR eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V_ic2_0+4


### Resulting Chains:eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) 
* [[9],10]


### Merging Chains  eval_fill_inverse_cmap_bb4_in/6 into  External patterns of execution 
* [[10,[9]]] --> 1 


### Specialization of cost equations eval_fill_inverse_cmap_bb2_in/4 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_fill_inverse_cmap_bb2_in/4 
* CE 12: eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) = 0
     [V_ic1_0>=8,C=V_ic0_0+1,B=3] 
* CE 13: eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) = 2+ eval_fill_inverse_cmap_bb4_in(V_ic0_0,D,E,F,V_ic0_0,G):1+ eval_fill_inverse_cmap_bb2_in(V_ic0_0,G,H,C)
     [8>=G,G=D+1,G=V_ic1_0+1,H=3,F=2,E=0,B=3] 

### Cost equations --> "Loop" of eval_fill_inverse_cmap_bb2_in/4 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_fill_inverse_cmap_bb2_in/4 
* Loop 11: eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C)->  eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0',B',C)
                  [7>=V_ic1_0,V_ic1_0+1=V_ic1_0',B'=3,B=3] 
* Loop 12: eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) [V_ic1_0>=8,V_ic0_0+1=C,B=3] 

### Ranking functions of CR eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) 
* RF of phase [11]: [-V_ic1_0+8]

#### Partial ranking functions of CR eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_ic1_0+8


### Resulting Chains:eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) 
* [[11],12]


### Merging Chains  eval_fill_inverse_cmap_bb2_in/4 into  External patterns of execution 
* [[12,[11]]] --> 1 


### Specialization of cost equations eval_fill_inverse_cmap_bb1_in/2 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15] 


#### Refined cost equations eval_fill_inverse_cmap_bb1_in/2 
* CE 14: eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) = 0
     [V_ic0_0>=4,B=4] 
* CE 15: eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) = 2+ eval_fill_inverse_cmap_bb2_in(C,D,E,F):1+ eval_fill_inverse_cmap_bb1_in(F,G)
     [4>=F,F=C+1,F=V_ic0_0+1,G=4,E=3,D=0,B=4] 

### Cost equations --> "Loop" of eval_fill_inverse_cmap_bb1_in/2 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_fill_inverse_cmap_bb1_in/2 
* Loop 13: eval_fill_inverse_cmap_bb1_in(V_ic0_0,B)->  eval_fill_inverse_cmap_bb1_in(V_ic0_0',B')
                  [3>=V_ic0_0,V_ic0_0+1=V_ic0_0',B'=4,B=4] 
* Loop 14: eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) [V_ic0_0>=4,B=4] 

### Ranking functions of CR eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) 
* RF of phase [13]: [-V_ic0_0+4]

#### Partial ranking functions of CR eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -V_ic0_0+4


### Resulting Chains:eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) 
* [[13],14]


### Merging Chains  eval_fill_inverse_cmap_bb1_in/2 into  External patterns of execution 
* [[14,[13]]] --> 1 


### Specialization of cost equations eval_fill_inverse_cmap_11/1 
* CE 3 is refined into CE [16] 


#### Refined cost equations eval_fill_inverse_cmap_11/1 
* CE 16: eval_fill_inverse_cmap_11(B) = 1+ eval_fill_inverse_cmap_bb1_in(C,D):1
     [D=4,C=0] 

### Cost equations --> "Loop" of eval_fill_inverse_cmap_11/1 
* CEs [16] --> Loop 15 

#### Loops of eval_fill_inverse_cmap_11/1 
* Loop 15: eval_fill_inverse_cmap_11(B) [] 

### Ranking functions of CR eval_fill_inverse_cmap_11(B) 

#### Partial ranking functions of CR eval_fill_inverse_cmap_11(B) 


### Resulting Chains:eval_fill_inverse_cmap_11(B) 
* [15]


### Merging Chains  eval_fill_inverse_cmap_11/1 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_fill_inverse_cmap_start/4 
* CE 2 is refined into CE [17] 


#### Refined cost equations eval_fill_inverse_cmap_start/4 
* CE 17: eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B) = 0+ eval_fill_inverse_cmap_11(B):1
     [] 

### Cost equations --> "Loop" of eval_fill_inverse_cmap_start/4 
* CEs [17] --> Loop 16 

#### Loops of eval_fill_inverse_cmap_start/4 
* Loop 16: eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B) [] 

### Ranking functions of CR eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B) 

#### Partial ranking functions of CR eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B) 


### Resulting Chains:eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B) 
* [16]


### Merging Chains  eval_fill_inverse_cmap_start/4 into  External patterns of execution 
* [[16]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) -> [eval_fill_inverse_cmap_bb4_in(V_ic0_0',V_ic1_0',V_ic2_0',B',C',D')] 
1
#### Cost of phase [9]:eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D) -> [eval_fill_inverse_cmap_bb4_in(V_ic0_0',V_ic1_0',V_ic2_0',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< -V_ic2_0+4
it(9) =< -V_ic2_0+V_ic2_0'

#### Cost of chains of eval_fill_inverse_cmap_bb4_in(V_ic0_0,V_ic1_0,V_ic2_0,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_ic2_0+4

  with precondition: [B=2,V_ic0_0=C,V_ic1_0+1=D,7>=V_ic1_0,3>=V_ic2_0,V_ic2_0>=0] 


#### Cost of loops [11] 

 * loop 11:eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) -> [eval_fill_inverse_cmap_bb2_in(V_ic0_0',V_ic1_0',B',C')] 
1*s(2)+2
  Such that:s(2) =< 4

#### Cost of phase [11]:eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C) -> [eval_fill_inverse_cmap_bb2_in(V_ic0_0',V_ic1_0',B',C')] 
2*it(11)+1*s(3)+0
  Such that:aux(2) =< -V_ic1_0+8
aux(3) =< -V_ic1_0+V_ic1_0'
aux(1) =< aux(2)
it(11) =< aux(2)
aux(1) =< aux(3)
it(11) =< aux(3)
s(3) =< aux(1)*4

#### Cost of chains of eval_fill_inverse_cmap_bb2_in(V_ic0_0,V_ic1_0,B,C):
* Chain [[11],12]: 2*it(11)+1*s(3)+0
  Such that:aux(4) =< -V_ic1_0+8
it(11) =< aux(4)
s(3) =< aux(4)*4

  with precondition: [B=3,V_ic0_0+1=C,3>=V_ic0_0,7>=V_ic1_0] 


#### Cost of loops [13] 

 * loop 13:eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) -> [eval_fill_inverse_cmap_bb1_in(V_ic0_0',B')] 
2*s(8)+1*s(9)+2
  Such that:s(7) =< 8
s(8) =< s(7)
s(9) =< s(7)*4

#### Cost of phase [13]:eval_fill_inverse_cmap_bb1_in(V_ic0_0,B) -> [eval_fill_inverse_cmap_bb1_in(V_ic0_0',B')] 
2*it(13)+2*s(10)+1*s(11)+0
  Such that:aux(6) =< -V_ic0_0+4
aux(7) =< -V_ic0_0+V_ic0_0'
aux(5) =< aux(6)
it(13) =< aux(6)
aux(5) =< aux(7)
it(13) =< aux(7)
s(12) =< aux(5)*8
s(10) =< s(12)
s(11) =< s(12)*4

#### Cost of chains of eval_fill_inverse_cmap_bb1_in(V_ic0_0,B):
* Chain [[13],14]: 2*it(13)+2*s(10)+1*s(11)+0
  Such that:aux(8) =< -V_ic0_0+4
it(13) =< aux(8)
s(12) =< aux(8)*8
s(10) =< s(12)
s(11) =< s(12)*4

  with precondition: [B=4,3>=V_ic0_0] 


#### Cost of chains of eval_fill_inverse_cmap_11(B):
* Chain [15]: 2*s(14)+2*s(16)+1*s(17)+1
  Such that:s(13) =< 4
s(14) =< s(13)
s(15) =< s(13)*8
s(16) =< s(15)
s(17) =< s(15)*4

  with precondition: [] 


#### Cost of chains of eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B):
* Chain [16]: 2*s(19)+2*s(21)+1*s(22)+1
  Such that:s(18) =< 4
s(19) =< s(18)
s(20) =< s(18)*8
s(21) =< s(20)
s(22) =< s(20)*4

  with precondition: [] 


Closed-form bounds of eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: 201 
    - Complexity: constant 

### Maximum cost of eval_fill_inverse_cmap_start(V_c0,V_c1,V_c2,B): 201 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 30 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 51 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 189 ms.

