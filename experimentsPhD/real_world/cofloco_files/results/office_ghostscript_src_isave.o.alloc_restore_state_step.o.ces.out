Warning: Ignored call to eval_alloc_restore_state_step_stop/1 in equation eval_alloc_restore_state_step_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_alloc_restore_state_step_1/2,eval_alloc_restore_state_step_2/2,eval_alloc_restore_state_step_3/2,eval_alloc_restore_state_step_4/2,eval_alloc_restore_state_step_bb1_in/1]
1. non_recursive  : [eval_alloc_restore_state_step_bb10_in/1]
2. non_recursive  : [eval_alloc_restore_state_step_bb8_in/1]
3. non_recursive  : [eval_alloc_restore_state_step_14/1]
4. non_recursive  : [eval_alloc_restore_state_step_13/1]
5. non_recursive  : [eval_alloc_restore_state_step_12/1]
6. non_recursive  : [eval_alloc_restore_state_step_11/1]
7. non_recursive  : [eval_alloc_restore_state_step_19/1]
8. non_recursive  : [eval_alloc_restore_state_step_18/1]
9. non_recursive  : [eval_alloc_restore_state_step_bb4_in/1]
10. non_recursive  : [loop_cont_eval_alloc_restore_state_step_bb1_in/2]
11. non_recursive  : [eval_alloc_restore_state_step_bb0_in/1]
12. non_recursive  : [eval_alloc_restore_state_step_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_alloc_restore_state_step_bb1_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_alloc_restore_state_step_bb4_in/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_alloc_restore_state_step_bb0_in/1
12. SCC is partially evaluated into eval_alloc_restore_state_step_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_alloc_restore_state_step_bb1_in/1 
* CE 5 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_alloc_restore_state_step_bb1_in/1 
* CE 7: eval_alloc_restore_state_step_bb1_in(B) = 1+ eval_alloc_restore_state_step_bb1_in(C)
     [C=2,B=2] 
* CE 8: eval_alloc_restore_state_step_bb1_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_alloc_restore_state_step_bb1_in/1 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_alloc_restore_state_step_bb1_in/1 
* Loop 6: eval_alloc_restore_state_step_bb1_in(B) [B=2] 
* Loop 7: eval_alloc_restore_state_step_bb1_in(B)->  eval_alloc_restore_state_step_bb1_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_alloc_restore_state_step_bb1_in(B) 

#### Partial ranking functions of CR eval_alloc_restore_state_step_bb1_in(B) 


### Resulting Chains:eval_alloc_restore_state_step_bb1_in(B) 
* [[7]]...
* [[7],6]
* [6]


### Merging Chains  eval_alloc_restore_state_step_bb1_in/1 into  External patterns of execution 
* [[6],[6,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_alloc_restore_state_step_bb4_in/1 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_alloc_restore_state_step_bb4_in/1 
* CE 9: eval_alloc_restore_state_step_bb4_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_alloc_restore_state_step_bb4_in/1 
* CEs [9] --> Loop 8 

#### Loops of eval_alloc_restore_state_step_bb4_in/1 
* Loop 8: eval_alloc_restore_state_step_bb4_in(B) [] 

### Ranking functions of CR eval_alloc_restore_state_step_bb4_in(B) 

#### Partial ranking functions of CR eval_alloc_restore_state_step_bb4_in(B) 


### Resulting Chains:eval_alloc_restore_state_step_bb4_in(B) 
* [8]


### Merging Chains  eval_alloc_restore_state_step_bb4_in/1 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_alloc_restore_state_step_bb0_in/1 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_alloc_restore_state_step_bb0_in/1 
* CE 10: eval_alloc_restore_state_step_bb0_in(B) = 1+ eval_alloc_restore_state_step_bb1_in(C):1+ eval_alloc_restore_state_step_bb4_in(B):1
     [C=2] 
* CE 11: eval_alloc_restore_state_step_bb0_in(B) = 1+ eval_alloc_restore_state_step_bb1_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_alloc_restore_state_step_bb0_in/1 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_alloc_restore_state_step_bb0_in/1 
* Loop 9: eval_alloc_restore_state_step_bb0_in(B) [] 
* Loop 10: eval_alloc_restore_state_step_bb0_in(B) [] 

### Ranking functions of CR eval_alloc_restore_state_step_bb0_in(B) 

#### Partial ranking functions of CR eval_alloc_restore_state_step_bb0_in(B) 


### Resulting Chains:eval_alloc_restore_state_step_bb0_in(B) 
* [10]
* [9]...


### Merging Chains  eval_alloc_restore_state_step_bb0_in/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_alloc_restore_state_step_start/1 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_alloc_restore_state_step_start/1 
* CE 12: eval_alloc_restore_state_step_start(B) = 0+ eval_alloc_restore_state_step_bb0_in(B):1
     [] 
* CE 13: eval_alloc_restore_state_step_start(B) = 0+ eval_alloc_restore_state_step_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_alloc_restore_state_step_start/1 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_alloc_restore_state_step_start/1 
* Loop 11: eval_alloc_restore_state_step_start(B) [] 
* Loop 12: eval_alloc_restore_state_step_start(B) [] 

### Ranking functions of CR eval_alloc_restore_state_step_start(B) 

#### Partial ranking functions of CR eval_alloc_restore_state_step_start(B) 


### Resulting Chains:eval_alloc_restore_state_step_start(B) 
* [12]
* [11]...


### Merging Chains  eval_alloc_restore_state_step_start/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_alloc_restore_state_step_bb1_in(B) -> [eval_alloc_restore_state_step_bb1_in(B')] 
1
#### Cost of phase [7]:eval_alloc_restore_state_step_bb1_in(B) -> [eval_alloc_restore_state_step_bb1_in(B')] 
1*it(7)+0
#### Cost of phase [7]:eval_alloc_restore_state_step_bb1_in(B) -> [eval_alloc_restore_state_step_bb1_in(B')] 
1*it(7)+0
#### Cost of chains of eval_alloc_restore_state_step_bb1_in(B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],6]: 1*it(7)+0
  with precondition: [B=2] 

* Chain [6]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_alloc_restore_state_step_bb4_in(B):
* Chain [8]: 0
  with precondition: [] 


#### Cost of chains of eval_alloc_restore_state_step_bb0_in(B):
* Chain [10]: 1*s(2)+1
  with precondition: [] 

* Chain [9]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_alloc_restore_state_step_start(B):
* Chain [12]: 1*s(4)+1
  with precondition: [] 

* Chain [11]...: 1*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_alloc_restore_state_step_start(B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_alloc_restore_state_step_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 3 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 4 ms.
   - Equation cost structures 0 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 27 ms.

