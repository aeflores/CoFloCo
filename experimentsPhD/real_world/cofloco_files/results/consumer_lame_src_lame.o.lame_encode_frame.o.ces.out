WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=<C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[F-D-C*G>=0,F-D-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-F+D+C*G>=0,-F+D+C*G+1=< -C]
Warning: Ignored call to eval_lame_encode_frame_stop/1 in equation eval_lame_encode_frame_32/1 
Warning: Ignored call to eval_lame_encode_frame_stop/1 in equation eval_lame_encode_frame_bb63_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_lame_encode_frame_32/1]
1. non_recursive  : [eval_lame_encode_frame_31/4]
2. recursive  : [eval_lame_encode_frame_bb26_in/15]
3. recursive  : [eval_lame_encode_frame_bb29_in/14]
4. recursive  : [eval_lame_encode_frame_92/12,eval_lame_encode_frame_93/12,eval_lame_encode_frame_bb24_in/10,loop_cont_eval_lame_encode_frame_bb26_in/13,loop_cont_eval_lame_encode_frame_bb29_in/11]
5. recursive  : [eval_lame_encode_frame_bb35_in/12]
6. recursive  : [eval_lame_encode_frame_bb33_in/10,loop_cont_eval_lame_encode_frame_bb35_in/11]
7. recursive  : [eval_lame_encode_frame_bb41_in/12,eval_lame_encode_frame_bb45_in/12]
8. recursive  : [eval_lame_encode_frame_bb39_in/10,loop_cont_eval_lame_encode_frame_bb41_in/11]
9. non_recursive  : [eval_lame_encode_frame_bb63_in/1]
10. non_recursive  : [eval_lame_encode_frame_194/1]
11. non_recursive  : [eval_lame_encode_frame_193/5]
12. non_recursive  : [eval_lame_encode_frame_188/4]
13. non_recursive  : [eval_lame_encode_frame_187/5]
14. non_recursive  : [eval_lame_encode_frame_bb61_in/5]
15. non_recursive  : [eval_lame_encode_frame_182/5]
16. non_recursive  : [eval_lame_encode_frame_181/8]
17. non_recursive  : [eval_lame_encode_frame_166/5]
18. non_recursive  : [eval_lame_encode_frame_165/6]
19. non_recursive  : [eval_lame_encode_frame_164/5]
20. non_recursive  : [eval_lame_encode_frame_163/5]
21. non_recursive  : [eval_lame_encode_frame_bb59_in/5]
22. non_recursive  : [eval_lame_encode_frame_160/5]
23. non_recursive  : [eval_lame_encode_frame_159/5]
24. non_recursive  : [eval_lame_encode_frame_162/5]
25. non_recursive  : [eval_lame_encode_frame_161/5]
26. non_recursive  : [eval_lame_encode_frame_bb56_in/5]
27. non_recursive  : [eval_lame_encode_frame_bb54_in/5]
28. non_recursive  : [eval_lame_encode_frame_bb51_in/5]
29. non_recursive  : [eval_lame_encode_frame_bb50_in/5]
30. non_recursive  : [eval_lame_encode_frame_139/5]
31. non_recursive  : [eval_lame_encode_frame_138/5]
32. non_recursive  : [loop_cont_eval_lame_encode_frame_bb39_in/6]
33. non_recursive  : [eval_lame_encode_frame_bb38_in/5]
34. non_recursive  : [loop_cont_eval_lame_encode_frame_bb24_in/6]
35. non_recursive  : [loop_cont_eval_lame_encode_frame_bb33_in/6]
36. non_recursive  : [eval_lame_encode_frame_bb22_in/5]
37. non_recursive  : [eval_lame_encode_frame_68/5]
38. non_recursive  : [eval_lame_encode_frame_67/9]
39. non_recursive  : [eval_lame_encode_frame_bb18_in/5]
40. non_recursive  : [eval_lame_encode_frame_NewDefault_in/5]
41. non_recursive  : [eval_lame_encode_frame_bb7_in/5]
42. non_recursive  : [eval_lame_encode_frame_bb5_in/5]
43. non_recursive  : [eval_lame_encode_frame_bb3_in/5]
44. non_recursive  : [eval_lame_encode_frame_19/5]
45. non_recursive  : [eval_lame_encode_frame_18/5]
46. non_recursive  : [eval_lame_encode_frame_17/5]
47. non_recursive  : [eval_lame_encode_frame_16/5]
48. non_recursive  : [eval_lame_encode_frame_4/5]
49. non_recursive  : [eval_lame_encode_frame_3/5]
50. non_recursive  : [eval_lame_encode_frame_2/5]
51. non_recursive  : [eval_lame_encode_frame_1/5]
52. non_recursive  : [eval_lame_encode_frame_bb0_in/5]
53. non_recursive  : [eval_lame_encode_frame_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_lame_encode_frame_bb26_in/15
3. SCC is partially evaluated into eval_lame_encode_frame_bb29_in/14
4. SCC is partially evaluated into eval_lame_encode_frame_bb24_in/10
5. SCC is partially evaluated into eval_lame_encode_frame_bb35_in/12
6. SCC is partially evaluated into eval_lame_encode_frame_bb33_in/10
7. SCC is partially evaluated into eval_lame_encode_frame_bb41_in/12
8. SCC is partially evaluated into eval_lame_encode_frame_bb39_in/10
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_lame_encode_frame_188/4
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_lame_encode_frame_166/5
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_lame_encode_frame_bb56_in/5
27. SCC is partially evaluated into eval_lame_encode_frame_bb54_in/5
28. SCC is partially evaluated into eval_lame_encode_frame_bb51_in/5
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_lame_encode_frame_139/5
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_lame_encode_frame_bb38_in/5
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_lame_encode_frame_bb22_in/5
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into eval_lame_encode_frame_bb18_in/5
40. SCC is partially evaluated into eval_lame_encode_frame_NewDefault_in/5
41. SCC is partially evaluated into eval_lame_encode_frame_bb7_in/5
42. SCC is partially evaluated into eval_lame_encode_frame_bb5_in/5
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is partially evaluated into eval_lame_encode_frame_4/5
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is completely evaluated into other SCCs
52. SCC is completely evaluated into other SCCs
53. SCC is partially evaluated into eval_lame_encode_frame_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_lame_encode_frame_bb26_in/15 
* CE 19 is refined into CE [44] 
* CE 18 is refined into CE [45] 


#### Refined cost equations eval_lame_encode_frame_bb26_in/15 
* CE 44: eval_lame_encode_frame_bb26_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [G>=F,G>=0,H=4] 
* CE 45: eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) = 1+ eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,J,K,C,D,E,F,G,H,I)
     [V_109>=V_ch_0+1,V_ch_0>=0,V_ch_0+1=J,K=4,B=4] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb26_in/15 
* CEs [45] --> Loop 29 
* CEs [44] --> Loop 30 

#### Loops of eval_lame_encode_frame_bb26_in/15 
* Loop 29: eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I)->  eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0',B',C,D,E,F,G,H,I)
                  [V_109>=V_ch_0+1,V_ch_0>=0,V_ch_0+1=V_ch_0',B'=4,B=4] 
* Loop 30: eval_lame_encode_frame_bb26_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [G>=F,G>=0,H=4] 

### Ranking functions of CR eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) 
* RF of phase [29]: [V_109-V_ch_0]

#### Partial ranking functions of CR eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_109-V_ch_0


### Resulting Chains:eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) 
* [[29],30]
* [30]


### Merging Chains  eval_lame_encode_frame_bb26_in/15 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb29_in/14 
* CE 21 is refined into CE [46] 
* CE 20 is refined into CE [47] 


#### Refined cost equations eval_lame_encode_frame_bb29_in/14 
* CE 46: eval_lame_encode_frame_bb29_in(A,B,C,D,E,F,G,H,I,A,B,C,D,J) = 0
     [H>=0,J=E+1,I=5] 
* CE 47: eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) = 1+ eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,H,I,C,D,E,F,G)
     [V_ch_1>=0,V_ch_1+1=H,I=5,B=5] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb29_in/14 
* CEs [47] --> Loop 31 
* CEs [46] --> Loop 32 

#### Loops of eval_lame_encode_frame_bb29_in/14 
* Loop 31: eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G)->  eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1',B',C,D,E,F,G)
                  [V_ch_1>=0,V_ch_1+1=V_ch_1',B'=5,B=5] 
* Loop 32: eval_lame_encode_frame_bb29_in(A,B,C,D,E,F,G,H,I,A,B,C,D,J) [H>=0,E+1=J,I=5] 

### Ranking functions of CR eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) 


### Resulting Chains:eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) 
* [[31]]...
* [[31],32]
* [32]


### Merging Chains  eval_lame_encode_frame_bb29_in/14 into  External patterns of execution 
* [[32],[32,[31]]] --> 1 
* [[[31]]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb24_in/10 
* CE 14 is refined into CE [48] 
* CE 13 is refined into CE [49,50,51,52] 


#### Refined cost equations eval_lame_encode_frame_bb24_in/10 
* CE 48: eval_lame_encode_frame_bb24_in(A,B,C,D,E,F,A,B,C,D) = 0
     [F=7] 
* CE 49: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) = 3+ eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,G,H,I,J,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,K,H,L):1+ eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,M,H,N,O,P,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,Q):1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,Q,R,C,D,E,F)
     [0>=H,Q=M+1,Q=K+1,Q=G+1,Q=V_gr_0+1,R=7,P=5,O=0,N=0,L=0,J=4,I=0,B=7] 
* CE 50: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) = 3+ eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,H,I,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,J):1+ eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,K,L,M,N,O,P,Q,R):2
     [0>=G,S=7,M=5,L=0,K=0,J=0,I=4,H=0,B=7] 
* CE 51: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) = 3+ eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,G,H,I,J,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,K,H,H):2+ eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,L,H,H,M,N,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,O):1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,O,P,C,D,E,F)
     [H>=1,O=L+1,O=K+1,O=G+1,O=V_gr_0+1,P=7,N=5,M=0,J=4,I=0,B=7] 
* CE 52: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) = 3+ eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,H,I,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,G):2+ eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,G,G,J,K,L,M,N,O,P):2
     [G>=1,Q=7,K=5,J=0,I=4,H=0,B=7] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb24_in/10 
* CEs [50,52] --> Loop 33 
* CEs [49,51] --> Loop 34 
* CEs [48] --> Loop 35 

#### Loops of eval_lame_encode_frame_bb24_in/10 
* Loop 33: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) [B=7] 
* Loop 34: eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F)->  eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0',B',C,D,E,F)
                  [V_gr_0+1=V_gr_0',B'=7,B=7] 
* Loop 35: eval_lame_encode_frame_bb24_in(A,B,C,D,E,F,A,B,C,D) [F=7] 

### Ranking functions of CR eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) 


### Resulting Chains:eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) 
* [[34]]...
* [[34],35]
* [[34],33]...
* [35]
* [33]...


### Merging Chains  eval_lame_encode_frame_bb24_in/10 into  External patterns of execution 
* [[35],[35,[34]]] --> 1 
* [[[34]]] --> 2 
* [[33],[33,[34]]] --> 3 


### Specialization of cost equations eval_lame_encode_frame_bb35_in/12 
* CE 26 is refined into CE [53] 
* CE 25 is refined into CE [54] 


#### Refined cost equations eval_lame_encode_frame_bb35_in/12 
* CE 53: eval_lame_encode_frame_bb35_in(A,B,C,D,E,F,G,A,B,C,D,H) = 0
     [F>=0,H=E+1,G=3] 
* CE 54: eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) = 1+ eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,H,I,C,D,E,F,G)
     [V_ch_2>=0,V_ch_2+1=H,I=3,B=3] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb35_in/12 
* CEs [54] --> Loop 36 
* CEs [53] --> Loop 37 

#### Loops of eval_lame_encode_frame_bb35_in/12 
* Loop 36: eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G)->  eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2',B',C,D,E,F,G)
                  [V_ch_2>=0,V_ch_2+1=V_ch_2',B'=3,B=3] 
* Loop 37: eval_lame_encode_frame_bb35_in(A,B,C,D,E,F,G,A,B,C,D,H) [F>=0,E+1=H,G=3] 

### Ranking functions of CR eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) 


### Resulting Chains:eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) 
* [[36]]...
* [[36],37]
* [37]


### Merging Chains  eval_lame_encode_frame_bb35_in/12 into  External patterns of execution 
* [[37],[37,[36]]] --> 1 
* [[[36]]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb33_in/10 
* CE 17 is refined into CE [55] 
* CE 16 is refined into CE [56,57] 


#### Refined cost equations eval_lame_encode_frame_bb33_in/10 
* CE 55: eval_lame_encode_frame_bb33_in(A,B,C,D,E,F,A,B,C,D) = 0
     [F=7] 
* CE 56: eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) = 2+ eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,G,H,I,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,J):1+ eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,J,K,C,D,E,F)
     [J=G+1,J=V_gr_1+1,K=7,I=3,H=0,B=7] 
* CE 57: eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) = 2+ eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,G,H,I,J,K,L,M):2
     [N=7,H=3,G=0,B=7] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb33_in/10 
* CEs [57] --> Loop 38 
* CEs [56] --> Loop 39 
* CEs [55] --> Loop 40 

#### Loops of eval_lame_encode_frame_bb33_in/10 
* Loop 38: eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) [B=7] 
* Loop 39: eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F)->  eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1',B',C,D,E,F)
                  [V_gr_1+1=V_gr_1',B'=7,B=7] 
* Loop 40: eval_lame_encode_frame_bb33_in(A,B,C,D,E,F,A,B,C,D) [F=7] 

### Ranking functions of CR eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) 


### Resulting Chains:eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) 
* [[39]]...
* [[39],40]
* [[39],38]...
* [40]
* [38]...


### Merging Chains  eval_lame_encode_frame_bb33_in/10 into  External patterns of execution 
* [[40],[40,[39]]] --> 1 
* [[[39]]] --> 2 
* [[38],[38,[39]]] --> 3 


### Specialization of cost equations eval_lame_encode_frame_bb41_in/12 
* CE 28 is refined into CE [58] 
* CE 27 is refined into CE [59] 


#### Refined cost equations eval_lame_encode_frame_bb41_in/12 
* CE 58: eval_lame_encode_frame_bb41_in(A,B,C,D,E,F,G,A,B,C,D,H) = 0
     [F>=0,H=E+1,G=2] 
* CE 59: eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) = 1+ eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,H,I,C,D,E,F,G)
     [V_ch_3>=0,V_ch_3+1=H,I=2,B=2] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb41_in/12 
* CEs [59] --> Loop 41 
* CEs [58] --> Loop 42 

#### Loops of eval_lame_encode_frame_bb41_in/12 
* Loop 41: eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G)->  eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3',B',C,D,E,F,G)
                  [V_ch_3>=0,V_ch_3+1=V_ch_3',B'=2,B=2] 
* Loop 42: eval_lame_encode_frame_bb41_in(A,B,C,D,E,F,G,A,B,C,D,H) [F>=0,E+1=H,G=2] 

### Ranking functions of CR eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) 


### Resulting Chains:eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) 
* [[41]]...
* [[41],42]
* [42]


### Merging Chains  eval_lame_encode_frame_bb41_in/12 into  External patterns of execution 
* [[42],[42,[41]]] --> 1 
* [[[41]]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb39_in/10 
* CE 23 is refined into CE [60] 
* CE 22 is refined into CE [61,62] 


#### Refined cost equations eval_lame_encode_frame_bb39_in/10 
* CE 60: eval_lame_encode_frame_bb39_in(A,B,C,D,E,F,A,B,C,D) = 0
     [F=6] 
* CE 61: eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) = 2+ eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,G,H,I,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,J):1+ eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,J,K,C,D,E,F)
     [J=G+1,J=V_gr_2+1,K=6,I=2,H=0,B=6] 
* CE 62: eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) = 2+ eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,G,H,I,J,K,L,M):2
     [N=6,H=2,G=0,B=6] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb39_in/10 
* CEs [62] --> Loop 43 
* CEs [61] --> Loop 44 
* CEs [60] --> Loop 45 

#### Loops of eval_lame_encode_frame_bb39_in/10 
* Loop 43: eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) [B=6] 
* Loop 44: eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F)->  eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2',B',C,D,E,F)
                  [V_gr_2+1=V_gr_2',B'=6,B=6] 
* Loop 45: eval_lame_encode_frame_bb39_in(A,B,C,D,E,F,A,B,C,D) [F=6] 

### Ranking functions of CR eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) 


### Resulting Chains:eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) 
* [[44]]...
* [[44],45]
* [[44],43]...
* [45]
* [43]...


### Merging Chains  eval_lame_encode_frame_bb39_in/10 into  External patterns of execution 
* [[45],[45,[44]]] --> 1 
* [[[44]]] --> 2 
* [[43],[43,[44]]] --> 3 


### Specialization of cost equations eval_lame_encode_frame_188/4 
* CE 41 is refined into CE [63] 
* CE 42 is refined into CE [64] 
* CE 43 is refined into CE [65] 


#### Refined cost equations eval_lame_encode_frame_188/4 
* CE 63: eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0
     [] 
* CE 64: eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0
     [V__lame_encode_frame_sentBits>=1] 
* CE 65: eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0
     [0>=V__lame_encode_frame_sentBits+1] 

### Cost equations --> "Loop" of eval_lame_encode_frame_188/4 
* CEs [63,64,65] --> Loop 46 

#### Loops of eval_lame_encode_frame_188/4 
* Loop 46: eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [46]


### Merging Chains  eval_lame_encode_frame_188/4 into  External patterns of execution 
* [[46]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_166/5 
* CE 32 is refined into CE [66] 
* CE 33 is refined into CE [67] 
* CE 34 is refined into CE [68] 
* CE 35 is refined into CE [69] 
* CE 36 is refined into CE [70] 
* CE 37 is refined into CE [71] 
* CE 38 is refined into CE [72] 
* CE 39 is refined into CE [73] 
* CE 40 is refined into CE [74] 


#### Refined cost equations eval_lame_encode_frame_166/5 
* CE 66: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [C=0] 
* CE 67: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,D,E,B):1
     [E=V__lame_encode_frame_sentBits+C,D=1,V__lame_encode_frame_bitsPerSlot=1] 
* CE 68: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,D,E,B):1
     [V__lame_encode_frame_sentBits>=E+1,E=V__lame_encode_frame_sentBits+C,D=1,V__lame_encode_frame_bitsPerSlot=1] 
* CE 69: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,D,E,B):1
     [E=V__lame_encode_frame_sentBits+C,D+1=0,V__lame_encode_frame_bitsPerSlot+1=0] 
* CE 70: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,D,E,B):1
     [V__lame_encode_frame_sentBits>=E+1,E=V__lame_encode_frame_sentBits+C,D+1=0,V__lame_encode_frame_bitsPerSlot+1=0] 
* CE 71: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,V__lame_encode_frame_bitsPerSlot,D,B):1
     [D>=V__lame_encode_frame_sentBits+1,V__lame_encode_frame_bitsPerSlot>=2,D=V__lame_encode_frame_sentBits+C] 
* CE 72: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,V__lame_encode_frame_bitsPerSlot,D,B):1
     [V__lame_encode_frame_sentBits>=D+1,V__lame_encode_frame_bitsPerSlot>=2,D=V__lame_encode_frame_sentBits+C] 
* CE 73: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,V__lame_encode_frame_bitsPerSlot,D,B):1
     [D>=V__lame_encode_frame_sentBits+1,0>=V__lame_encode_frame_bitsPerSlot+2,D=V__lame_encode_frame_sentBits+C] 
* CE 74: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_188(C,V__lame_encode_frame_bitsPerSlot,D,B):1
     [V__lame_encode_frame_sentBits>=D+1,0>=V__lame_encode_frame_bitsPerSlot+2,D=V__lame_encode_frame_sentBits+C] 

### Cost equations --> "Loop" of eval_lame_encode_frame_166/5 
* CEs [66,67,68,69,70,71,72,73,74] --> Loop 47 

#### Loops of eval_lame_encode_frame_166/5 
* Loop 47: eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [47]


### Merging Chains  eval_lame_encode_frame_166/5 into  External patterns of execution 
* [[47]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_bb56_in/5 
* CE 31 is refined into CE [75] 


#### Refined cost equations eval_lame_encode_frame_bb56_in/5 
* CE 75: eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb56_in/5 
* CEs [75] --> Loop 48 

#### Loops of eval_lame_encode_frame_bb56_in/5 
* Loop 48: eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [48]


### Merging Chains  eval_lame_encode_frame_bb56_in/5 into  External patterns of execution 
* [[48]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_bb54_in/5 
* CE 30 is refined into CE [76] 


#### Refined cost equations eval_lame_encode_frame_bb54_in/5 
* CE 76: eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb56_in(V_mp3buf_size,C,D,E,B):1
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb54_in/5 
* CEs [76] --> Loop 49 

#### Loops of eval_lame_encode_frame_bb54_in/5 
* Loop 49: eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [49]


### Merging Chains  eval_lame_encode_frame_bb54_in/5 into  External patterns of execution 
* [[49]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_bb51_in/5 
* CE 29 is refined into CE [77] 


#### Refined cost equations eval_lame_encode_frame_bb51_in/5 
* CE 77: eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb54_in(V_mp3buf_size,C,D,E,B):1
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb51_in/5 
* CEs [77] --> Loop 50 

#### Loops of eval_lame_encode_frame_bb51_in/5 
* Loop 50: eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [50]


### Merging Chains  eval_lame_encode_frame_bb51_in/5 into  External patterns of execution 
* [[50]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_139/5 
* CE 24 is refined into CE [78] 


#### Refined cost equations eval_lame_encode_frame_139/5 
* CE 78: eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_139/5 
* CEs [78] --> Loop 51 

#### Loops of eval_lame_encode_frame_139/5 
* Loop 51: eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [51]


### Merging Chains  eval_lame_encode_frame_139/5 into  External patterns of execution 
* [[51]] --> 1 


### Specialization of cost equations eval_lame_encode_frame_bb38_in/5 
* CE 15 is refined into CE [79,80,81] 


#### Refined cost equations eval_lame_encode_frame_bb38_in/5 
* CE 79: eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits):1+ eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [D=6,C=0] 
* CE 80: eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):2
     [D=6,C=0] 
* CE 81: eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):3
     [D=6,C=0] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb38_in/5 
* CEs [80,81] --> Loop 52 
* CEs [79] --> Loop 53 

#### Loops of eval_lame_encode_frame_bb38_in/5 
* Loop 52: eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 53: eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [53]
* [52]...


### Merging Chains  eval_lame_encode_frame_bb38_in/5 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb22_in/5 
* CE 11 is refined into CE [82,83,84,85] 
* CE 12 is refined into CE [86,87,88,89] 


#### Refined cost equations eval_lame_encode_frame_bb22_in/5 
* CE 82: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits):1+ eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [D=7,C=0] 
* CE 83: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits):1+ eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [D=7,C=0] 
* CE 84: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):2
     [D=7,C=0] 
* CE 85: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):3
     [D=7,C=0] 
* CE 86: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits):1+ eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [D=7,C=0] 
* CE 87: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits):1+ eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [D=7,C=0] 
* CE 88: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):2
     [D=7,C=0] 
* CE 89: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 1+ eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,C,D,E,F,G,H):3
     [D=7,C=0] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb22_in/5 
* CEs [83,84,85,87,88,89] --> Loop 54 
* CEs [82,86] --> Loop 55 

#### Loops of eval_lame_encode_frame_bb22_in/5 
* Loop 54: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 55: eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [55]
* [54]...


### Merging Chains  eval_lame_encode_frame_bb22_in/5 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb18_in/5 
* CE 9 is refined into CE [90,91] 


#### Refined cost equations eval_lame_encode_frame_bb18_in/5 
* CE 90: eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 
* CE 91: eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb18_in/5 
* CEs [91] --> Loop 56 
* CEs [90] --> Loop 57 

#### Loops of eval_lame_encode_frame_bb18_in/5 
* Loop 56: eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 57: eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [57]
* [56]...


### Merging Chains  eval_lame_encode_frame_bb18_in/5 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_NewDefault_in/5 
* CE 10 is refined into CE [92,93] 


#### Refined cost equations eval_lame_encode_frame_NewDefault_in/5 
* CE 92: eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb18_in(V_mp3buf_size,C,D,E,B):1
     [] 
* CE 93: eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb18_in(V_mp3buf_size,C,D,E,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_NewDefault_in/5 
* CEs [93] --> Loop 58 
* CEs [92] --> Loop 59 

#### Loops of eval_lame_encode_frame_NewDefault_in/5 
* Loop 58: eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 59: eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [59]
* [58]...


### Merging Chains  eval_lame_encode_frame_NewDefault_in/5 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb7_in/5 
* CE 7 is refined into CE [94,95] 
* CE 8 is refined into CE [96,97] 


#### Refined cost equations eval_lame_encode_frame_bb7_in/5 
* CE 94: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb18_in(V_mp3buf_size,C,D,E,B):1
     [] 
* CE 95: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb18_in(V_mp3buf_size,C,D,E,B):2
     [] 
* CE 96: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 
* CE 97: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb7_in/5 
* CEs [95,97] --> Loop 60 
* CEs [94,96] --> Loop 61 

#### Loops of eval_lame_encode_frame_bb7_in/5 
* Loop 60: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 61: eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [61]
* [60]...


### Merging Chains  eval_lame_encode_frame_bb7_in/5 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_bb5_in/5 
* CE 5 is refined into CE [98,99] 
* CE 6 is refined into CE [100] 


#### Refined cost equations eval_lame_encode_frame_bb5_in/5 
* CE 98: eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 
* CE 99: eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [] 
* CE 100: eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_bb5_in/5 
* CEs [98,100] --> Loop 62 
* CEs [99] --> Loop 63 

#### Loops of eval_lame_encode_frame_bb5_in/5 
* Loop 62: eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 63: eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [63]...
* [62]


### Merging Chains  eval_lame_encode_frame_bb5_in/5 into  External patterns of execution 
* [[62]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_4/5 
* CE 3 is refined into CE [101,102] 
* CE 4 is refined into CE [103,104] 


#### Refined cost equations eval_lame_encode_frame_4/5 
* CE 101: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb5_in(V_mp3buf_size,C,D,E,B):1
     [] 
* CE 102: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb5_in(V_mp3buf_size,C,D,E,B):2
     [] 
* CE 103: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb7_in(V_mp3buf_size,C,D,E,B):1
     [] 
* CE 104: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_bb7_in(V_mp3buf_size,C,D,E,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_4/5 
* CEs [102,104] --> Loop 64 
* CEs [101,103] --> Loop 65 

#### Loops of eval_lame_encode_frame_4/5 
* Loop 64: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 65: eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [65]
* [64]...


### Merging Chains  eval_lame_encode_frame_4/5 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 


### Specialization of cost equations eval_lame_encode_frame_start/6 
* CE 2 is refined into CE [105,106] 


#### Refined cost equations eval_lame_encode_frame_start/6 
* CE 105: eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):1
     [] 
* CE 106: eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) = 0+ eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_encode_frame_start/6 
* CEs [106] --> Loop 66 
* CEs [105] --> Loop 67 

#### Loops of eval_lame_encode_frame_start/6 
* Loop 66: eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 
* Loop 67: eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) [] 

### Ranking functions of CR eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 

#### Partial ranking functions of CR eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 


### Resulting Chains:eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B) 
* [67]
* [66]...


### Merging Chains  eval_lame_encode_frame_start/6 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [29] 

 * loop 29:eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) -> [eval_lame_encode_frame_bb26_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',V_109',V_ch_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [29]:eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I) -> [eval_lame_encode_frame_bb26_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',V_109',V_ch_0',B',C',D',E',F',G',H',I')] 
1*it(29)+0
  Such that:it(29) =< V_109-V_ch_0
it(29) =< V_109-V_ch_0-V_109'+V_ch_0'

#### Cost of chains of eval_lame_encode_frame_bb26_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,B,C,D,E,F,G,H,I):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -V_ch_0+H

  with precondition: [B=4,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_0=G,V_109=H,V_109=I,V_ch_0>=0,V_109>=V_ch_0+1] 

* Chain [30]: 0
  with precondition: [B=4,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,G=V_gr_0,V_109=H,V_ch_0=I,V_ch_0>=0,V_ch_0>=V_109] 


#### Cost of loops [31] 

 * loop 31:eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb29_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',V_109',V_ch_0',V_ch_1',B',C',D',E',F',G')] 
1
#### Cost of phase [31]:eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb29_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',V_109',V_ch_0',V_ch_1',B',C',D',E',F',G')] 
1*it(31)+0
#### Cost of phase [31]:eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb29_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',V_109',V_ch_0',V_ch_1',B',C',D',E',F',G')] 
1*it(31)+0
#### Cost of chains of eval_lame_encode_frame_bb29_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,V_109,V_ch_0,V_ch_1,B,C,D,E,F,G):
* Chain [[31]]...: 1*it(31)+0
  with precondition: [V_ch_1>=0,B=5] 

* Chain [[31],32]: 1*it(31)+0
  with precondition: [B=5,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_0+1=G,V_ch_1>=0] 

* Chain [32]: 0
  with precondition: [B=5,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,G=V_gr_0+1,V_ch_1>=0] 


#### Cost of loops [34] 

 * loop 34:eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) -> [eval_lame_encode_frame_bb24_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',B',C',D',E',F')] 
1*s(5)+0
#### Cost of phase [34]:eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) -> [eval_lame_encode_frame_bb24_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',B',C',D',E',F')] 
1*s(6)+0
#### Cost of phase [34]:eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) -> [eval_lame_encode_frame_bb24_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',B',C',D',E',F')] 
1*s(6)+0
#### Cost of phase [34]:eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F) -> [eval_lame_encode_frame_bb24_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_0',B',C',D',E',F')] 
1*s(6)+0
#### Cost of chains of eval_lame_encode_frame_bb24_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_0,B,C,D,E,F):
* Chain [[34]]...: 1*s(6)+0
  with precondition: [B=7] 

* Chain [[34],35]: 1*s(6)+0
  with precondition: [B=7,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_0>=0] 

* Chain [[34],33]...: 2*aux(3)+0
  with precondition: [B=7,V_gr_0>=0] 

* Chain [35]: 0
  with precondition: [B=7,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,V_gr_0>=0] 

* Chain [33]...: 1*aux(3)+0
  with precondition: [B=7,V_gr_0>=0] 


#### Cost of loops [36] 

 * loop 36:eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb35_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',V_ch_2',B',C',D',E',F',G')] 
1
#### Cost of phase [36]:eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb35_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',V_ch_2',B',C',D',E',F',G')] 
1*it(36)+0
#### Cost of phase [36]:eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb35_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',V_ch_2',B',C',D',E',F',G')] 
1*it(36)+0
#### Cost of chains of eval_lame_encode_frame_bb35_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,V_ch_2,B,C,D,E,F,G):
* Chain [[36]]...: 1*it(36)+0
  with precondition: [V_ch_2>=0,B=3] 

* Chain [[36],37]: 1*it(36)+0
  with precondition: [B=3,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_1+1=G,V_ch_2>=0] 

* Chain [37]: 0
  with precondition: [B=3,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,G=V_gr_1+1,V_ch_2>=0] 


#### Cost of loops [39] 

 * loop 39:eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) -> [eval_lame_encode_frame_bb33_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',B',C',D',E',F')] 
1*s(15)+2
#### Cost of phase [39]:eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) -> [eval_lame_encode_frame_bb33_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',B',C',D',E',F')] 
3*it(39)+0
#### Cost of phase [39]:eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) -> [eval_lame_encode_frame_bb33_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',B',C',D',E',F')] 
3*it(39)+0
#### Cost of phase [39]:eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F) -> [eval_lame_encode_frame_bb33_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_1',B',C',D',E',F')] 
3*it(39)+0
#### Cost of chains of eval_lame_encode_frame_bb33_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_1,B,C,D,E,F):
* Chain [[39]]...: 3*it(39)+0
  with precondition: [B=7] 

* Chain [[39],40]: 3*it(39)+0
  with precondition: [B=7,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_1>=0] 

* Chain [[39],38]...: 4*it(39)+2
  with precondition: [B=7,V_gr_1>=0] 

* Chain [40]: 0
  with precondition: [B=7,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,V_gr_1>=0] 

* Chain [38]...: 1*s(17)+2
  with precondition: [B=7,V_gr_1>=0] 


#### Cost of loops [41] 

 * loop 41:eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb41_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',V_ch_3',B',C',D',E',F',G')] 
1
#### Cost of phase [41]:eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb41_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',V_ch_3',B',C',D',E',F',G')] 
1*it(41)+0
#### Cost of phase [41]:eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G) -> [eval_lame_encode_frame_bb41_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',V_ch_3',B',C',D',E',F',G')] 
1*it(41)+0
#### Cost of chains of eval_lame_encode_frame_bb41_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,V_ch_3,B,C,D,E,F,G):
* Chain [[41]]...: 1*it(41)+0
  with precondition: [V_ch_3>=0,B=2] 

* Chain [[41],42]: 1*it(41)+0
  with precondition: [B=2,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_2+1=G,V_ch_3>=0] 

* Chain [42]: 0
  with precondition: [B=2,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,G=V_gr_2+1,V_ch_3>=0] 


#### Cost of loops [44] 

 * loop 44:eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) -> [eval_lame_encode_frame_bb39_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',B',C',D',E',F')] 
1*s(23)+2
#### Cost of phase [44]:eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) -> [eval_lame_encode_frame_bb39_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',B',C',D',E',F')] 
3*it(44)+0
#### Cost of phase [44]:eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) -> [eval_lame_encode_frame_bb39_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',B',C',D',E',F')] 
3*it(44)+0
#### Cost of phase [44]:eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F) -> [eval_lame_encode_frame_bb39_in(V_mp3buf_size',V__lame_encode_frame_frameBits',V__lame_encode_frame_bitsPerSlot',V__lame_encode_frame_sentBits',V_gr_2',B',C',D',E',F')] 
3*it(44)+0
#### Cost of chains of eval_lame_encode_frame_bb39_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,V_gr_2,B,C,D,E,F):
* Chain [[44]]...: 3*it(44)+0
  with precondition: [B=6] 

* Chain [[44],45]: 3*it(44)+0
  with precondition: [B=6,V_mp3buf_size=C,V__lame_encode_frame_frameBits=D,V__lame_encode_frame_bitsPerSlot=E,V__lame_encode_frame_sentBits=F,V_gr_2>=0] 

* Chain [[44],43]...: 4*it(44)+2
  with precondition: [B=6,V_gr_2>=0] 

* Chain [45]: 0
  with precondition: [B=6,C=V_mp3buf_size,D=V__lame_encode_frame_frameBits,E=V__lame_encode_frame_bitsPerSlot,F=V__lame_encode_frame_sentBits,V_gr_2>=0] 

* Chain [43]...: 1*s(25)+2
  with precondition: [B=6,V_gr_2>=0] 


#### Cost of chains of eval_lame_encode_frame_188(V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [46]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_166(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [47]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb56_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [48]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb54_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [49]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb51_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [50]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_139(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [51]: 0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb38_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [53]: 1*s(29)+1
  with precondition: [] 

* Chain [52]...: 1*aux(12)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb22_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [55]: 1*aux(13)+0
  with precondition: [] 

* Chain [54]...: 1*aux(14)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb18_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [57]: 1*s(44)+0
  with precondition: [] 

* Chain [56]...: 1*s(45)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_NewDefault_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [59]: 1*s(46)+0
  with precondition: [] 

* Chain [58]...: 1*s(47)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb7_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [61]: 1*aux(15)+0
  with precondition: [] 

* Chain [60]...: 1*aux(16)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_bb5_in(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [63]...: 1*s(52)+0
  with precondition: [] 

* Chain [62]: 1*aux(17)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_4(V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [65]: 1*aux(18)+0
  with precondition: [] 

* Chain [64]...: 1*aux(19)+0
  with precondition: [] 


#### Cost of chains of eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B):
* Chain [67]: 1*s(58)+0
  with precondition: [] 

* Chain [66]...: 1*s(59)+0
  with precondition: [] 


Closed-form bounds of eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B): 
-------------------------------------
* Chain [67] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [66]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_lame_encode_frame_start(V_mf_size,V_mp3buf_size,V__lame_encode_frame_frameBits,V__lame_encode_frame_bitsPerSlot,V__lame_encode_frame_sentBits,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 618 ms.
* Invariants computed in 241 ms.
   - Backward Invariants 118 ms.
   - Transitive Invariants 55 ms.
* Refinement performed in 464 ms.
* Termination proved in 45 ms.
* Upper bounds computed in 132 ms.
   - Equation cost structures 56 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 51 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 2406 ms.

