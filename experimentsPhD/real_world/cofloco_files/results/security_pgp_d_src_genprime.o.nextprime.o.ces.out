Warning: Ignored call to eval_nextprime_stop/1 in equation eval_nextprime_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_nextprime_bb2_in/4]
1. non_recursive  : [eval_nextprime_bb17_in/1]
2. non_recursive  : [eval_nextprime_27/1]
3. non_recursive  : [eval_nextprime_26/2]
4. recursive  : [eval_nextprime_50/7,eval_nextprime_51/7,eval_nextprime_53/7,eval_nextprime_54/7,eval_nextprime_55/7,eval_nextprime_56/7,eval_nextprime_60/8,eval_nextprime_61/8,eval_nextprime_62/8,eval_nextprime_63/8,eval_nextprime_64/8,eval_nextprime_bb11_in/7,eval_nextprime_bb9_in/7]
5. recursive  : [eval_nextprime_bb13_in/5]
6. non_recursive  : [eval_nextprime_76/2]
7. non_recursive  : [eval_nextprime_75/3]
8. non_recursive  : [loop_cont_eval_nextprime_bb13_in/4]
9. non_recursive  : [eval_nextprime_67/3]
10. non_recursive  : [eval_nextprime_66/3]
11. non_recursive  : [eval_nextprime_bb12_in/3]
12. non_recursive  : [loop_cont_eval_nextprime_bb9_in/4]
13. non_recursive  : [eval_nextprime_43/3]
14. non_recursive  : [eval_nextprime_42/3]
15. non_recursive  : [eval_nextprime_41/3]
16. non_recursive  : [eval_nextprime_35/3]
17. non_recursive  : [eval_nextprime_34/3]
18. non_recursive  : [eval_nextprime_bb6_in/2]
19. non_recursive  : [eval_nextprime_17/1]
20. non_recursive  : [eval_nextprime_16/3]
21. non_recursive  : [loop_cont_eval_nextprime_bb2_in/4]
22. non_recursive  : [eval_nextprime_2/2]
23. non_recursive  : [eval_nextprime_1/2]
24. non_recursive  : [eval_nextprime_0/2]
25. non_recursive  : [eval_nextprime_bb0_in/2]
26. non_recursive  : [eval_nextprime_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_nextprime_bb2_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_nextprime_bb9_in/7
5. SCC is partially evaluated into eval_nextprime_bb13_in/5
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_nextprime_67/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_nextprime_43/3
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_nextprime_bb6_in/2
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into loop_cont_eval_nextprime_bb2_in/4
22. SCC is partially evaluated into eval_nextprime_2/2
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_nextprime_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nextprime_bb2_in/4 
* CE 7 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations eval_nextprime_bb2_in/4 
* CE 18: eval_nextprime_bb2_in(A,B,A,C) = 0
     [B=4] 
* CE 19: eval_nextprime_bb2_in(A,B,A,C) = 0
     [B=3] 
* CE 20: eval_nextprime_bb2_in(V__global_precision,B,C,D) = 1+ eval_nextprime_bb2_in(V__global_precision,B,C,D)
     [] 

### Cost equations --> "Loop" of eval_nextprime_bb2_in/4 
* CEs [20] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 

#### Loops of eval_nextprime_bb2_in/4 
* Loop 15: eval_nextprime_bb2_in(V__global_precision,B,C,D)->  eval_nextprime_bb2_in(V__global_precision,B,C,D)
                  [] 
* Loop 16: eval_nextprime_bb2_in(A,B,A,C) [B=4] 
* Loop 17: eval_nextprime_bb2_in(A,B,A,C) [B=3] 

### Ranking functions of CR eval_nextprime_bb2_in(V__global_precision,B,C,D) 

#### Partial ranking functions of CR eval_nextprime_bb2_in(V__global_precision,B,C,D) 


### Resulting Chains:eval_nextprime_bb2_in(V__global_precision,B,C,D) 
* [[15]]...
* [[15],17]
* [[15],16]
* [17]
* [16]


### Merging Chains  eval_nextprime_bb2_in/4 into  External patterns of execution 
* [[17],[17,[15]]] --> 1 
* [[16],[16,[15]]] --> 2 
* [[[15]]] --> 3 


### Specialization of cost equations eval_nextprime_bb9_in/7 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 


#### Refined cost equations eval_nextprime_bb9_in/7 
* CE 21: eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) = 1+ eval_nextprime_bb9_in(V__global_precision,V_31,V_45,E,F,C,D)
     [V_45>=E,E>=4,E=V_pdelta_0+4,F=2,B=2] 
* CE 22: eval_nextprime_bb9_in(A,B,C,D,E,A,B) = 0
     [D>=0,E=2] 

### Cost equations --> "Loop" of eval_nextprime_bb9_in/7 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of eval_nextprime_bb9_in/7 
* Loop 18: eval_nextprime_bb9_in(A,B,C,D,E,A,B) [D>=0,E=2] 
* Loop 19: eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D)->  eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0',B',C,D)
                  [V_45>=V_pdelta_0',V_pdelta_0'>=4,V_pdelta_0'=V_pdelta_0+4,B'=2,B=2] 

### Ranking functions of CR eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) 
* RF of phase [19]: [V_45-V_pdelta_0-3]

#### Partial ranking functions of CR eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_45-V_pdelta_0-3


### Resulting Chains:eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) 
* [[19],18]
* [18]


### Merging Chains  eval_nextprime_bb9_in/7 into  External patterns of execution 
* [[18],[18,[19]]] --> 1 


### Specialization of cost equations eval_nextprime_bb13_in/5 
* CE 17 is refined into CE [23] 
* CE 16 is refined into CE [24] 


#### Refined cost equations eval_nextprime_bb13_in/5 
* CE 23: eval_nextprime_bb13_in(A,B,C,A,B) = 0
     [C=5] 
* CE 24: eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) = 1+ eval_nextprime_bb13_in(V__global_precision,V_31,E,C,D)
     [E=5,B=5] 

### Cost equations --> "Loop" of eval_nextprime_bb13_in/5 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 

#### Loops of eval_nextprime_bb13_in/5 
* Loop 20: eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D)->  eval_nextprime_bb13_in(V__global_precision,V_31,B',C,D)
                  [B'=5,B=5] 
* Loop 21: eval_nextprime_bb13_in(A,B,C,A,B) [C=5] 

### Ranking functions of CR eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) 

#### Partial ranking functions of CR eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) 


### Resulting Chains:eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) 
* [[20]]...
* [[20],21]
* [21]


### Merging Chains  eval_nextprime_bb13_in/5 into  External patterns of execution 
* [[21],[21,[20]]] --> 1 
* [[[20]]] --> 2 


### Specialization of cost equations eval_nextprime_67/3 
* CE 15 is refined into CE [25,26] 


#### Refined cost equations eval_nextprime_67/3 
* CE 25: eval_nextprime_67(V__global_precision,V_31,B) = 1+ eval_nextprime_bb13_in(V__global_precision,V_31,C,V__global_precision,V_31):1
     [C=5] 
* CE 26: eval_nextprime_67(V__global_precision,V_31,B) = 1+ eval_nextprime_bb13_in(V__global_precision,V_31,C,D,E):2
     [C=5] 

### Cost equations --> "Loop" of eval_nextprime_67/3 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of eval_nextprime_67/3 
* Loop 22: eval_nextprime_67(V__global_precision,V_31,B) [] 
* Loop 23: eval_nextprime_67(V__global_precision,V_31,B) [] 

### Ranking functions of CR eval_nextprime_67(V__global_precision,V_31,B) 

#### Partial ranking functions of CR eval_nextprime_67(V__global_precision,V_31,B) 


### Resulting Chains:eval_nextprime_67(V__global_precision,V_31,B) 
* [23]
* [22]...


### Merging Chains  eval_nextprime_67/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_nextprime_43/3 
* CE 12 is refined into CE [27,28] 


#### Refined cost equations eval_nextprime_43/3 
* CE 27: eval_nextprime_43(V__global_precision,V_31,B) = 1+ eval_nextprime_bb9_in(V__global_precision,V_31,C,D,E,V__global_precision,V_31):1+ eval_nextprime_67(V__global_precision,V_31,B):1
     [E=2,D=0] 
* CE 28: eval_nextprime_43(V__global_precision,V_31,B) = 1+ eval_nextprime_bb9_in(V__global_precision,V_31,C,D,E,V__global_precision,V_31):1+ eval_nextprime_67(V__global_precision,V_31,B):2
     [E=2,D=0] 

### Cost equations --> "Loop" of eval_nextprime_43/3 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of eval_nextprime_43/3 
* Loop 24: eval_nextprime_43(V__global_precision,V_31,B) [] 
* Loop 25: eval_nextprime_43(V__global_precision,V_31,B) [] 

### Ranking functions of CR eval_nextprime_43(V__global_precision,V_31,B) 

#### Partial ranking functions of CR eval_nextprime_43(V__global_precision,V_31,B) 


### Resulting Chains:eval_nextprime_43(V__global_precision,V_31,B) 
* [25]
* [24]...


### Merging Chains  eval_nextprime_43/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_nextprime_bb6_in/2 
* CE 10 is refined into CE [29] 
* CE 11 is refined into CE [30,31] 


#### Refined cost equations eval_nextprime_bb6_in/2 
* CE 29: eval_nextprime_bb6_in(V__global_precision,B) = 0
     [] 
* CE 30: eval_nextprime_bb6_in(V__global_precision,B) = 0+ eval_nextprime_43(C,D,B):1
     [] 
* CE 31: eval_nextprime_bb6_in(V__global_precision,B) = 0+ eval_nextprime_43(C,D,B):2
     [] 

### Cost equations --> "Loop" of eval_nextprime_bb6_in/2 
* CEs [31] --> Loop 26 
* CEs [29,30] --> Loop 27 

#### Loops of eval_nextprime_bb6_in/2 
* Loop 26: eval_nextprime_bb6_in(V__global_precision,B) [] 
* Loop 27: eval_nextprime_bb6_in(V__global_precision,B) [] 

### Ranking functions of CR eval_nextprime_bb6_in(V__global_precision,B) 

#### Partial ranking functions of CR eval_nextprime_bb6_in(V__global_precision,B) 


### Resulting Chains:eval_nextprime_bb6_in(V__global_precision,B) 
* [27]
* [26]...


### Merging Chains  eval_nextprime_bb6_in/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations loop_cont_eval_nextprime_bb2_in/4 
* CE 9 is refined into CE [32,33] 
* CE 8 is refined into CE [34] 


#### Refined cost equations loop_cont_eval_nextprime_bb2_in/4 
* CE 32: loop_cont_eval_nextprime_bb2_in(D,A,B,C) = 0+ eval_nextprime_bb6_in(A,C):1
     [D=4] 
* CE 33: loop_cont_eval_nextprime_bb2_in(D,A,B,C) = 0+ eval_nextprime_bb6_in(A,C):2
     [D=4] 
* CE 34: loop_cont_eval_nextprime_bb2_in(D,A,B,C) = 0
     [D=3] 

### Cost equations --> "Loop" of loop_cont_eval_nextprime_bb2_in/4 
* CEs [32] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [33] --> Loop 30 

#### Loops of loop_cont_eval_nextprime_bb2_in/4 
* Loop 28: loop_cont_eval_nextprime_bb2_in(D,A,B,C) [D=4] 
* Loop 29: loop_cont_eval_nextprime_bb2_in(D,A,B,C) [D=3] 
* Loop 30: loop_cont_eval_nextprime_bb2_in(D,A,B,C) [D=4] 

### Ranking functions of CR loop_cont_eval_nextprime_bb2_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_nextprime_bb2_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_nextprime_bb2_in(D,A,B,C) 
* [30]...
* [29]
* [28]


### Merging Chains  loop_cont_eval_nextprime_bb2_in/4 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[30]] --> 3 


### Specialization of cost equations eval_nextprime_2/2 
* CE 3 is refined into CE [35,36,37,38] 
* CE 4 is refined into CE [39,40] 


#### Refined cost equations eval_nextprime_2/2 
* CE 35: eval_nextprime_2(V__global_precision,B) = 1+ eval_nextprime_bb2_in(V__global_precision,C,V__global_precision,D):1+ loop_cont_eval_nextprime_bb2_in(E,V__global_precision,D,B):1
     [E=3,C=3] 
* CE 36: eval_nextprime_2(V__global_precision,B) = 1+ eval_nextprime_bb2_in(V__global_precision,C,V__global_precision,D):2+ loop_cont_eval_nextprime_bb2_in(E,V__global_precision,D,B):2
     [E=4,C=4] 
* CE 37: eval_nextprime_2(V__global_precision,B) = 1+ eval_nextprime_bb2_in(V__global_precision,C,V__global_precision,D):2+ loop_cont_eval_nextprime_bb2_in(E,V__global_precision,D,B):3
     [E=4,C=4] 
* CE 38: eval_nextprime_2(V__global_precision,B) = 1+ eval_nextprime_bb2_in(V__global_precision,C,D,E):3
     [] 
* CE 39: eval_nextprime_2(V__global_precision,B) = 0+ eval_nextprime_bb6_in(V__global_precision,B):1
     [] 
* CE 40: eval_nextprime_2(V__global_precision,B) = 0+ eval_nextprime_bb6_in(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_nextprime_2/2 
* CEs [37,38,40] --> Loop 31 
* CEs [35,36,39] --> Loop 32 

#### Loops of eval_nextprime_2/2 
* Loop 31: eval_nextprime_2(V__global_precision,B) [] 
* Loop 32: eval_nextprime_2(V__global_precision,B) [] 

### Ranking functions of CR eval_nextprime_2(V__global_precision,B) 

#### Partial ranking functions of CR eval_nextprime_2(V__global_precision,B) 


### Resulting Chains:eval_nextprime_2(V__global_precision,B) 
* [32]
* [31]...


### Merging Chains  eval_nextprime_2/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_nextprime_start/2 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_nextprime_start/2 
* CE 41: eval_nextprime_start(V__global_precision,B) = 0+ eval_nextprime_2(V__global_precision,B):1
     [] 
* CE 42: eval_nextprime_start(V__global_precision,B) = 0+ eval_nextprime_2(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_nextprime_start/2 
* CEs [42] --> Loop 33 
* CEs [41] --> Loop 34 

#### Loops of eval_nextprime_start/2 
* Loop 33: eval_nextprime_start(V__global_precision,B) [] 
* Loop 34: eval_nextprime_start(V__global_precision,B) [] 

### Ranking functions of CR eval_nextprime_start(V__global_precision,B) 

#### Partial ranking functions of CR eval_nextprime_start(V__global_precision,B) 


### Resulting Chains:eval_nextprime_start(V__global_precision,B) 
* [34]
* [33]...


### Merging Chains  eval_nextprime_start/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_nextprime_bb2_in(V__global_precision,B,C,D) -> [eval_nextprime_bb2_in(V__global_precision',B',C',D')] 
1
#### Cost of phase [15]:eval_nextprime_bb2_in(V__global_precision,B,C,D) -> [eval_nextprime_bb2_in(V__global_precision',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_nextprime_bb2_in(V__global_precision,B,C,D) -> [eval_nextprime_bb2_in(V__global_precision',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_nextprime_bb2_in(V__global_precision,B,C,D) -> [eval_nextprime_bb2_in(V__global_precision',B',C',D')] 
1*it(15)+0
#### Cost of chains of eval_nextprime_bb2_in(V__global_precision,B,C,D):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],17]: 1*it(15)+0
  with precondition: [B=3,V__global_precision=C] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=4,V__global_precision=C] 

* Chain [17]: 0
  with precondition: [B=3,C=V__global_precision] 

* Chain [16]: 0
  with precondition: [B=4,C=V__global_precision] 


#### Cost of loops [19] 

 * loop 19:eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) -> [eval_nextprime_bb9_in(V__global_precision',V_31',V_45',V_pdelta_0',B',C',D')] 
1
#### Cost of phase [19]:eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D) -> [eval_nextprime_bb9_in(V__global_precision',V_31',V_45',V_pdelta_0',B',C',D')] 
1*it(19)+0
  Such that:it(19) =< V_45-V_pdelta_0
it(19) =< V_45-V_pdelta_0-V_45'+V_pdelta_0'

#### Cost of chains of eval_nextprime_bb9_in(V__global_precision,V_31,V_45,V_pdelta_0,B,C,D):
* Chain [[19],18]: 1*it(19)+0
  Such that:it(19) =< V_45-V_pdelta_0

  with precondition: [B=2,V__global_precision=C,V_31=D,V_pdelta_0>=0,V_45>=V_pdelta_0+4] 

* Chain [18]: 0
  with precondition: [B=2,C=V__global_precision,D=V_31,V_pdelta_0>=0] 


#### Cost of loops [20] 

 * loop 20:eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) -> [eval_nextprime_bb13_in(V__global_precision',V_31',B',C',D')] 
1
#### Cost of phase [20]:eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) -> [eval_nextprime_bb13_in(V__global_precision',V_31',B',C',D')] 
1*it(20)+0
#### Cost of phase [20]:eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D) -> [eval_nextprime_bb13_in(V__global_precision',V_31',B',C',D')] 
1*it(20)+0
#### Cost of chains of eval_nextprime_bb13_in(V__global_precision,V_31,B,C,D):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [B=5] 

* Chain [[20],21]: 1*it(20)+0
  with precondition: [B=5,V__global_precision=C,V_31=D] 

* Chain [21]: 0
  with precondition: [B=5,C=V__global_precision,D=V_31] 


#### Cost of chains of eval_nextprime_67(V__global_precision,V_31,B):
* Chain [23]: 1*s(5)+1
  with precondition: [] 

* Chain [22]...: 1*s(6)+1
  with precondition: [] 


#### Cost of chains of eval_nextprime_43(V__global_precision,V_31,B):
* Chain [25]: 2*s(7)+2
  with precondition: [] 

* Chain [24]...: 2*s(9)+2
  with precondition: [] 


#### Cost of chains of eval_nextprime_bb6_in(V__global_precision,B):
* Chain [27]: 1*aux(4)+0
  with precondition: [] 

* Chain [26]...: 2*s(12)+2
  with precondition: [] 


#### Cost of chains of loop_cont_eval_nextprime_bb2_in(D,A,B,C):
* Chain [30]...: 2*s(13)+2
  with precondition: [D=4] 

* Chain [29]: 0
  with precondition: [D=3] 

* Chain [28]: 1*s(14)+0
  with precondition: [D=4] 


#### Cost of chains of eval_nextprime_2(V__global_precision,B):
* Chain [32]: 1*aux(5)+0
  with precondition: [] 

* Chain [31]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_nextprime_start(V__global_precision,B):
* Chain [34]: 1*s(23)+0
  with precondition: [] 

* Chain [33]...: 1*s(24)+0
  with precondition: [] 


Closed-form bounds of eval_nextprime_start(V__global_precision,B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_nextprime_start(V__global_precision,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 37 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 41 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 165 ms.

