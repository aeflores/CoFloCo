Warning: Ignored call to eval_setparams_stop/1 in equation eval_setparams_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_setparams_13/3,eval_setparams_14/3,eval_setparams_4/3,eval_setparams_5/3,eval_setparams_bb1_in/3,eval_setparams_bb7_in/3]
1. non_recursive  : [eval_setparams_bb15_in/1]
2. non_recursive  : [eval_setparams_NewDefault_in/1]
3. recursive  : [eval_setparams_21/2,eval_setparams_22/2,eval_setparams_24/2,eval_setparams_25/2,eval_setparams_bb13_in/2,eval_setparams_bb14_in/2,eval_setparams_bb9_in/2]
4. non_recursive  : [loop_cont_eval_setparams_bb9_in/2]
5. non_recursive  : [loop_cont_eval_setparams_bb1_in/3]
6. non_recursive  : [eval_setparams_bb0_in/1]
7. non_recursive  : [eval_setparams_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_setparams_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_setparams_bb9_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_setparams_bb1_in/3
6. SCC is partially evaluated into eval_setparams_bb0_in/1
7. SCC is partially evaluated into eval_setparams_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_setparams_bb1_in/3 
* CE 7 is refined into CE [13] 
* CE 4 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations eval_setparams_bb1_in/3 
* CE 13: eval_setparams_bb1_in(V_i_0,B,C) = 0
     [V_i_0>=0,C=0,B=4] 
* CE 14: eval_setparams_bb1_in(V_i_0,B,C) = 0
     [V_i_0>=0,B=3] 
* CE 15: eval_setparams_bb1_in(V_i_0,B,C) = 0
     [V_i_0>=0,B=2] 
* CE 16: eval_setparams_bb1_in(V_i_0,B,C) = 1+ eval_setparams_bb1_in(D,B,C)
     [V_i_0>=0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_setparams_bb1_in/3 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_setparams_bb1_in/3 
* Loop 12: eval_setparams_bb1_in(V_i_0,B,C)->  eval_setparams_bb1_in(V_i_0',B,C)
                  [V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 13: eval_setparams_bb1_in(V_i_0,B,C) [V_i_0>=0,C=0,B=4] 
* Loop 14: eval_setparams_bb1_in(V_i_0,B,C) [V_i_0>=0,B=3] 
* Loop 15: eval_setparams_bb1_in(V_i_0,B,C) [V_i_0>=0,B=2] 

### Ranking functions of CR eval_setparams_bb1_in(V_i_0,B,C) 

#### Partial ranking functions of CR eval_setparams_bb1_in(V_i_0,B,C) 


### Resulting Chains:eval_setparams_bb1_in(V_i_0,B,C) 
* [[12]]...
* [[12],15]
* [[12],14]
* [[12],13]
* [15]
* [14]
* [13]


### Merging Chains  eval_setparams_bb1_in/3 into  External patterns of execution 
* [[15],[15,[12]]] --> 1 
* [[14],[14,[12]]] --> 2 
* [[13],[13,[12]]] --> 3 
* [[[12]]] --> 4 


### Specialization of cost equations eval_setparams_bb9_in/2 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


#### Refined cost equations eval_setparams_bb9_in/2 
* CE 17: eval_setparams_bb9_in(V_i_1,B) = 0
     [B=2] 
* CE 18: eval_setparams_bb9_in(V_i_1,B) = 1+ eval_setparams_bb9_in(C,D)
     [C=V_i_1+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_setparams_bb9_in/2 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_setparams_bb9_in/2 
* Loop 16: eval_setparams_bb9_in(V_i_1,B)->  eval_setparams_bb9_in(V_i_1',B')
                  [V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 17: eval_setparams_bb9_in(V_i_1,B) [B=2] 

### Ranking functions of CR eval_setparams_bb9_in(V_i_1,B) 

#### Partial ranking functions of CR eval_setparams_bb9_in(V_i_1,B) 


### Resulting Chains:eval_setparams_bb9_in(V_i_1,B) 
* [[16]]...
* [[16],17]
* [17]


### Merging Chains  eval_setparams_bb9_in/2 into  External patterns of execution 
* [[17],[17,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations loop_cont_eval_setparams_bb1_in/3 
* CE 10 is refined into CE [19,20] 
* CE 9 is refined into CE [21] 
* CE 8 is refined into CE [22] 


#### Refined cost equations loop_cont_eval_setparams_bb1_in/3 
* CE 19: loop_cont_eval_setparams_bb1_in(C,A,B) = 1+ eval_setparams_bb9_in(A,D):1
     [D=2,C=4] 
* CE 20: loop_cont_eval_setparams_bb1_in(C,A,B) = 1+ eval_setparams_bb9_in(A,D):2
     [D=2,C=4] 
* CE 21: loop_cont_eval_setparams_bb1_in(C,A,B) = 0
     [C=3] 
* CE 22: loop_cont_eval_setparams_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_setparams_bb1_in/3 
* CEs [19] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of loop_cont_eval_setparams_bb1_in/3 
* Loop 18: loop_cont_eval_setparams_bb1_in(C,A,B) [C=4] 
* Loop 19: loop_cont_eval_setparams_bb1_in(C,A,B) [C=3] 
* Loop 20: loop_cont_eval_setparams_bb1_in(C,A,B) [C=2] 
* Loop 21: loop_cont_eval_setparams_bb1_in(C,A,B) [C=4] 

### Ranking functions of CR loop_cont_eval_setparams_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_setparams_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_setparams_bb1_in(C,A,B) 
* [21]...
* [20]
* [19]
* [18]


### Merging Chains  loop_cont_eval_setparams_bb1_in/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[21]] --> 4 


### Specialization of cost equations eval_setparams_bb0_in/1 
* CE 3 is refined into CE [23,24,25,26,27] 


#### Refined cost equations eval_setparams_bb0_in/1 
* CE 23: eval_setparams_bb0_in(B) = 1+ eval_setparams_bb1_in(C,D,E):1+ loop_cont_eval_setparams_bb1_in(F,E,B):1
     [F=2,D=2,C=0] 
* CE 24: eval_setparams_bb0_in(B) = 1+ eval_setparams_bb1_in(C,D,E):2+ loop_cont_eval_setparams_bb1_in(F,E,B):2
     [F=3,D=3,C=0] 
* CE 25: eval_setparams_bb0_in(B) = 1+ eval_setparams_bb1_in(C,D,E):3+ loop_cont_eval_setparams_bb1_in(F,G,B):3
     [G=0,F=4,E=0,D=4,C=0] 
* CE 26: eval_setparams_bb0_in(B) = 1+ eval_setparams_bb1_in(C,D,E):3+ loop_cont_eval_setparams_bb1_in(F,G,B):4
     [G=0,F=4,E=0,D=4,C=0] 
* CE 27: eval_setparams_bb0_in(B) = 1+ eval_setparams_bb1_in(C,D,E):4
     [C=0] 

### Cost equations --> "Loop" of eval_setparams_bb0_in/1 
* CEs [26,27] --> Loop 22 
* CEs [23,24,25] --> Loop 23 

#### Loops of eval_setparams_bb0_in/1 
* Loop 22: eval_setparams_bb0_in(B) [] 
* Loop 23: eval_setparams_bb0_in(B) [] 

### Ranking functions of CR eval_setparams_bb0_in(B) 

#### Partial ranking functions of CR eval_setparams_bb0_in(B) 


### Resulting Chains:eval_setparams_bb0_in(B) 
* [23]
* [22]...


### Merging Chains  eval_setparams_bb0_in/1 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_setparams_start/1 
* CE 2 is refined into CE [28,29] 


#### Refined cost equations eval_setparams_start/1 
* CE 28: eval_setparams_start(B) = 0+ eval_setparams_bb0_in(B):1
     [] 
* CE 29: eval_setparams_start(B) = 0+ eval_setparams_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_setparams_start/1 
* CEs [29] --> Loop 24 
* CEs [28] --> Loop 25 

#### Loops of eval_setparams_start/1 
* Loop 24: eval_setparams_start(B) [] 
* Loop 25: eval_setparams_start(B) [] 

### Ranking functions of CR eval_setparams_start(B) 

#### Partial ranking functions of CR eval_setparams_start(B) 


### Resulting Chains:eval_setparams_start(B) 
* [25]
* [24]...


### Merging Chains  eval_setparams_start/1 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_setparams_bb1_in(V_i_0,B,C) -> [eval_setparams_bb1_in(V_i_0',B',C')] 
1
#### Cost of phase [12]:eval_setparams_bb1_in(V_i_0,B,C) -> [eval_setparams_bb1_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_setparams_bb1_in(V_i_0,B,C) -> [eval_setparams_bb1_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_setparams_bb1_in(V_i_0,B,C) -> [eval_setparams_bb1_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_setparams_bb1_in(V_i_0,B,C) -> [eval_setparams_bb1_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of chains of eval_setparams_bb1_in(V_i_0,B,C):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_i_0>=0] 

* Chain [[12],15]: 1*it(12)+0
  with precondition: [B=2,V_i_0>=0] 

* Chain [[12],14]: 1*it(12)+0
  with precondition: [B=3,V_i_0>=0] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=4,C=0,V_i_0>=0] 

* Chain [15]: 0
  with precondition: [B=2,V_i_0>=0] 

* Chain [14]: 0
  with precondition: [B=3,V_i_0>=0] 

* Chain [13]: 0
  with precondition: [B=4,C=0,V_i_0>=0] 


#### Cost of loops [16] 

 * loop 16:eval_setparams_bb9_in(V_i_1,B) -> [eval_setparams_bb9_in(V_i_1',B')] 
1
#### Cost of phase [16]:eval_setparams_bb9_in(V_i_1,B) -> [eval_setparams_bb9_in(V_i_1',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_setparams_bb9_in(V_i_1,B) -> [eval_setparams_bb9_in(V_i_1',B')] 
1*it(16)+0
#### Cost of chains of eval_setparams_bb9_in(V_i_1,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_setparams_bb1_in(C,A,B):
* Chain [21]...: 1*s(5)+1
  with precondition: [C=4] 

* Chain [20]: 0
  with precondition: [C=2] 

* Chain [19]: 0
  with precondition: [C=3] 

* Chain [18]: 1*s(6)+1
  with precondition: [C=4] 


#### Cost of chains of eval_setparams_bb0_in(B):
* Chain [23]: 1*aux(5)+0
  with precondition: [] 

* Chain [22]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_setparams_start(B):
* Chain [25]: 1*s(14)+0
  with precondition: [] 

* Chain [24]...: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_setparams_start(B): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_setparams_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 36 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 65 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 50 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 255 ms.

