Warning: Ignored call to eval_PackBitsDecode_stop/1 in equation eval_PackBitsDecode_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_PackBitsDecode_bb5_in/9]
1. recursive  : [eval_PackBitsDecode_26/7,eval_PackBitsDecode_27/7,eval_PackBitsDecode_bb1_in/4,loop_cont_eval_PackBitsDecode_bb5_in/5]
2. non_recursive  : [eval_PackBitsDecode_bb9_in/1]
3. non_recursive  : [eval_PackBitsDecode_40/1]
4. non_recursive  : [eval_PackBitsDecode_39/2]
5. non_recursive  : [loop_cont_eval_PackBitsDecode_bb1_in/3]
6. non_recursive  : [eval_PackBitsDecode_bb0_in/2]
7. non_recursive  : [eval_PackBitsDecode_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_PackBitsDecode_bb5_in/9
1. SCC is partially evaluated into eval_PackBitsDecode_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_PackBitsDecode_bb1_in/3
6. SCC is partially evaluated into eval_PackBitsDecode_bb0_in/2
7. SCC is partially evaluated into eval_PackBitsDecode_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_PackBitsDecode_bb5_in/9 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 


#### Refined cost equations eval_PackBitsDecode_bb5_in/9 
* CE 14: eval_PackBitsDecode_bb5_in(A,B,C,D,E,F,G,E,D) = 0
     [B>=D+F,E+1>=0,B>=1,0>=F,E+1=C,E+2=A,G=2] 
* CE 15: eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) = 1+ eval_PackBitsDecode_bb5_in(E,V__02,F,V_19,V_23,G,H,C,D)
     [V__02>=V_19+V_n_1,V_n_1>=1,V_23+1>=0,V__02>=1,V_n_1=G+1,V_23+1=F,V_23+2=E,V_23+1=V_10,V_23+2=V_cc_0,H=2,B=2] 

### Cost equations --> "Loop" of eval_PackBitsDecode_bb5_in/9 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_PackBitsDecode_bb5_in/9 
* Loop 12: eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D)->  eval_PackBitsDecode_bb5_in(V_cc_0',V__02,V_10',V_19,V_23,V_n_1',B',C,D)
                  [V__02>=V_19+V_n_1,V_n_1>=1,V_23+1>=0,V__02>=1,V_n_1=V_n_1'+1,V_23+1=V_10',V_23+2=V_cc_0',V_23+1=V_10,V_23+2=V_cc_0,B'=2,B=2] 
* Loop 13: eval_PackBitsDecode_bb5_in(A,B,C,D,E,F,G,E,D) [B>=D+F,E+1>=0,B>=1,0>=F,E+1=C,E+2=A,G=2] 

### Ranking functions of CR eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) 
* RF of phase [12]: [V_n_1]

#### Partial ranking functions of CR eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_n_1


### Resulting Chains:eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) 
* [[12],13]
* [13]


### Merging Chains  eval_PackBitsDecode_bb5_in/9 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations eval_PackBitsDecode_bb1_in/4 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 
* CE 5 is refined into CE [22] 


#### Refined cost equations eval_PackBitsDecode_bb1_in/4 
* CE 16: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 0
     [0>=V__02,B=4] 
* CE 17: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 0
     [0>=V_cc_0,B=4] 
* CE 18: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 0
     [0>=V__02,B=3] 
* CE 19: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 0
     [0>=V_cc_0,B=3] 
* CE 20: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 2+ eval_PackBitsDecode_bb5_in(D,E,F,G,H,I,J,K,G):1+ eval_PackBitsDecode_bb1_in(L,G,B,C)
     [G+I>=1,F>=0,0>=I,G+I=E,G+I=V__02,F=L+1,F=K+1,F=H+1,F+1=D,F+1=V_cc_0,J=2] 
* CE 21: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 2+ eval_PackBitsDecode_bb5_in(D,V__02,E,F,G,H,I,J,F):2+ eval_PackBitsDecode_bb1_in(K,F,B,C)
     [V__02>=F+1,E>=0,V__02>=1,F+H=V__02,E=K+1,E=J+1,E=G+1,E+1=D,E+1=V_cc_0,I=2] 
* CE 22: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) = 1+ eval_PackBitsDecode_bb1_in(D,E,B,C)
     [V__02>=1,V_cc_0>=1,V__02+D+1=V_cc_0+E] 

### Cost equations --> "Loop" of eval_PackBitsDecode_bb1_in/4 
* CEs [22] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_PackBitsDecode_bb1_in/4 
* Loop 14: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C)->  eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B,C)
                  [V__02>=1,V_cc_0>=1,V_cc_0+V__02'=V__02+V_cc_0'+1] 
* Loop 15: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C)->  eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B,C)
                  [V__02>=V__02'+1,V__02>=1,V_cc_0>=1,V_cc_0=V_cc_0'+2] 
* Loop 16: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C)->  eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B,C)
                  [V__02'>=V__02,V__02>=1,V_cc_0>=1,V_cc_0=V_cc_0'+2] 
* Loop 17: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) [0>=V__02,B=4] 
* Loop 18: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) [0>=V_cc_0,B=4] 
* Loop 19: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) [0>=V__02,B=3] 
* Loop 20: eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) [0>=V_cc_0,B=3] 

### Ranking functions of CR eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) 

#### Partial ranking functions of CR eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) 
* Partial RF of phase [14,15,16]:
  - RF of loop [15:1]:
    V__02 depends on loops [14:1,16:1] 
  - RF of loop [15:1,16:1]:
    V_cc_0/2 depends on loops [14:1] 


### Resulting Chains:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) 
* [[14,15,16]]...
* [[14,15,16],20]
* [[14,15,16],19]
* [[14,15,16],18]
* [[14,15,16],17]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  eval_PackBitsDecode_bb1_in/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[19,[14,15,16]],[20,[14,15,16]]] --> 3 
* [[18]] --> 4 
* [[17]] --> 5 
* [[17,[14,15,16]],[18,[14,15,16]]] --> 6 
* [[[14,15,16]]] --> 7 


### Specialization of cost equations loop_cont_eval_PackBitsDecode_bb1_in/3 
* CE 11 is refined into CE [23] 
* CE 10 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_PackBitsDecode_bb1_in/3 
* CE 23: loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) = 0
     [D=4] 
* CE 24: loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) = 0
     [D=3] 

### Cost equations --> "Loop" of loop_cont_eval_PackBitsDecode_bb1_in/3 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of loop_cont_eval_PackBitsDecode_bb1_in/3 
* Loop 21: loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) [D=4] 
* Loop 22: loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) [D=3] 

### Ranking functions of CR loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_PackBitsDecode_bb1_in(D,A,B) 
* [22]
* [21]


### Merging Chains  loop_cont_eval_PackBitsDecode_bb1_in/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_PackBitsDecode_bb0_in/2 
* CE 3 is refined into CE [25,26,27,28,29,30,31] 


#### Refined cost equations eval_PackBitsDecode_bb0_in/2 
* CE 25: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):1+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):1
     [0>=C,F=3,D=3] 
* CE 26: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):2+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):1
     [0>=V_occ,F=3,D=3] 
* CE 27: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):3+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):1
     [V_occ>=1,C>=1,F=3,D=3] 
* CE 28: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):4+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):2
     [0>=C,F=4,D=4] 
* CE 29: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):5+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):2
     [0>=V_occ,F=4,D=4] 
* CE 30: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):6+ loop_cont_eval_PackBitsDecode_bb1_in(F,E,B):2
     [V_occ>=1,C>=1,F=4,D=4] 
* CE 31: eval_PackBitsDecode_bb0_in(V_occ,B) = 1+ eval_PackBitsDecode_bb1_in(C,V_occ,D,E):7
     [V_occ>=1,C>=1] 

### Cost equations --> "Loop" of eval_PackBitsDecode_bb0_in/2 
* CEs [31] --> Loop 23 
* CEs [25,26,27,28,29,30] --> Loop 24 

#### Loops of eval_PackBitsDecode_bb0_in/2 
* Loop 23: eval_PackBitsDecode_bb0_in(V_occ,B) [V_occ>=1] 
* Loop 24: eval_PackBitsDecode_bb0_in(V_occ,B) [] 

### Ranking functions of CR eval_PackBitsDecode_bb0_in(V_occ,B) 

#### Partial ranking functions of CR eval_PackBitsDecode_bb0_in(V_occ,B) 


### Resulting Chains:eval_PackBitsDecode_bb0_in(V_occ,B) 
* [24]
* [23]...


### Merging Chains  eval_PackBitsDecode_bb0_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_PackBitsDecode_start/3 
* CE 2 is refined into CE [32,33] 


#### Refined cost equations eval_PackBitsDecode_start/3 
* CE 32: eval_PackBitsDecode_start(V_occ,V_s,B) = 0+ eval_PackBitsDecode_bb0_in(V_occ,B):1
     [] 
* CE 33: eval_PackBitsDecode_start(V_occ,V_s,B) = 0+ eval_PackBitsDecode_bb0_in(V_occ,B):2
     [V_occ>=1] 

### Cost equations --> "Loop" of eval_PackBitsDecode_start/3 
* CEs [33] --> Loop 25 
* CEs [32] --> Loop 26 

#### Loops of eval_PackBitsDecode_start/3 
* Loop 25: eval_PackBitsDecode_start(V_occ,V_s,B) [V_occ>=1] 
* Loop 26: eval_PackBitsDecode_start(V_occ,V_s,B) [] 

### Ranking functions of CR eval_PackBitsDecode_start(V_occ,V_s,B) 

#### Partial ranking functions of CR eval_PackBitsDecode_start(V_occ,V_s,B) 


### Resulting Chains:eval_PackBitsDecode_start(V_occ,V_s,B) 
* [26]
* [25]...


### Merging Chains  eval_PackBitsDecode_start/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) -> [eval_PackBitsDecode_bb5_in(V_cc_0',V__02',V_10',V_19',V_23',V_n_1',B',C',D')] 
1
#### Cost of phase [12]:eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D) -> [eval_PackBitsDecode_bb5_in(V_cc_0',V__02',V_10',V_19',V_23',V_n_1',B',C',D')] 
1*it(12)+0
  Such that:it(12) =< V_n_1
it(12) =< V_n_1-V_n_1'

#### Cost of chains of eval_PackBitsDecode_bb5_in(V_cc_0,V__02,V_10,V_19,V_23,V_n_1,B,C,D):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_n_1

  with precondition: [B=2,V_cc_0=V_10+1,V_cc_0=V_23+2,V_cc_0=C+2,V_19=D,V_cc_0>=1,V__02>=1,V_n_1>=1,V__02>=V_19+V_n_1] 

* Chain [13]: 0
  with precondition: [B=2,V_cc_0=V_10+1,V_cc_0=V_23+2,V_cc_0=C+2,V_19=D,0>=V_n_1,V_cc_0>=1,V__02>=1,V__02>=V_19+V_n_1] 


#### Cost of loops [14,15,16] 

 * loop 14:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1
 * loop 15:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*s(2)+2
  Such that:s(2) =< V__02-V__02'

 * loop 16:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
2
#### Cost of phase [14,15,16]:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*it(14)+4*it(15)+1*s(3)+0
#### Cost of phase [14,15,16]:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*it(14)+4*it(15)+1*s(3)+0
#### Cost of phase [14,15,16]:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*it(14)+4*it(15)+1*s(3)+0
#### Cost of phase [14,15,16]:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*it(14)+4*it(15)+1*s(3)+0
#### Cost of phase [14,15,16]:eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C) -> [eval_PackBitsDecode_bb1_in(V_cc_0',V__02',B',C')] 
1*it(14)+4*it(15)+1*s(3)+0
#### Cost of chains of eval_PackBitsDecode_bb1_in(V_cc_0,V__02,B,C):
* Chain [[14,15,16]]...: 6*it(14)+0
  with precondition: [V_cc_0>=1,V__02>=1] 

* Chain [[14,15,16],20]: 6*it(14)+0
  with precondition: [B=3,V_cc_0>=1,V__02>=1] 

* Chain [[14,15,16],19]: 6*it(14)+0
  with precondition: [B=3,V_cc_0>=1,V__02>=1] 

* Chain [[14,15,16],18]: 6*it(14)+0
  with precondition: [B=4,V_cc_0>=1,V__02>=1] 

* Chain [[14,15,16],17]: 6*it(14)+0
  with precondition: [B=4,V_cc_0>=1,V__02>=1] 

* Chain [20]: 0
  with precondition: [B=3,0>=V_cc_0] 

* Chain [19]: 0
  with precondition: [B=3,0>=V__02] 

* Chain [18]: 0
  with precondition: [B=4,0>=V_cc_0] 

* Chain [17]: 0
  with precondition: [B=4,0>=V__02] 


#### Cost of chains of loop_cont_eval_PackBitsDecode_bb1_in(D,A,B):
* Chain [22]: 0
  with precondition: [D=3] 

* Chain [21]: 0
  with precondition: [D=4] 


#### Cost of chains of eval_PackBitsDecode_bb0_in(V_occ,B):
* Chain [24]: 1*aux(16)+0
  with precondition: [] 

* Chain [23]...: 6*s(10)+1
  with precondition: [V_occ>=1] 


#### Cost of chains of eval_PackBitsDecode_start(V_occ,V_s,B):
* Chain [26]: 1*s(11)+0
  with precondition: [] 

* Chain [25]...: 6*s(12)+1
  with precondition: [V_occ>=1] 


Closed-form bounds of eval_PackBitsDecode_start(V_occ,V_s,B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [V_occ>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_PackBitsDecode_start(V_occ,V_s,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 47 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 51 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 28 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 183 ms.

