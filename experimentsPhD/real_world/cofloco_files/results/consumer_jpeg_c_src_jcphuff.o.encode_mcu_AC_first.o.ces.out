Warning: Ignored call to eval_encode_mcu_AC_first_stop/1 in equation eval_encode_mcu_AC_first_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encode_mcu_AC_first_35/13,eval_encode_mcu_AC_first_36/13,eval_encode_mcu_AC_first_bb14_in/12]
1. recursive  : [eval_encode_mcu_AC_first_bb16_in/15]
2. recursive  : [eval_encode_mcu_AC_first_32/5,eval_encode_mcu_AC_first_33/5,eval_encode_mcu_AC_first_45/9,eval_encode_mcu_AC_first_46/9,eval_encode_mcu_AC_first_47/9,eval_encode_mcu_AC_first_bb10_in/5,eval_encode_mcu_AC_first_bb19_in/5,eval_encode_mcu_AC_first_bb4_in/4,loop_cont_eval_encode_mcu_AC_first_bb14_in/8,loop_cont_eval_encode_mcu_AC_first_bb16_in/10]
3. non_recursive  : [eval_encode_mcu_AC_first_bb27_in/1]
4. non_recursive  : [eval_encode_mcu_AC_first_bb26_in/1]
5. non_recursive  : [eval_encode_mcu_AC_first_bb23_in/1]
6. non_recursive  : [eval_encode_mcu_AC_first_56/1]
7. non_recursive  : [eval_encode_mcu_AC_first_55/1]
8. non_recursive  : [loop_cont_eval_encode_mcu_AC_first_bb4_in/2]
9. non_recursive  : [eval_encode_mcu_AC_first_bb3_in/2]
10. non_recursive  : [eval_encode_mcu_AC_first_11/2]
11. non_recursive  : [eval_encode_mcu_AC_first_10/3]
12. non_recursive  : [eval_encode_mcu_AC_first_bb0_in/1]
13. non_recursive  : [eval_encode_mcu_AC_first_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_AC_first_bb14_in/12
1. SCC is partially evaluated into eval_encode_mcu_AC_first_bb16_in/15
2. SCC is partially evaluated into eval_encode_mcu_AC_first_bb4_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_encode_mcu_AC_first_bb23_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_encode_mcu_AC_first_bb4_in/2
9. SCC is partially evaluated into eval_encode_mcu_AC_first_bb3_in/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_encode_mcu_AC_first_bb0_in/1
13. SCC is partially evaluated into eval_encode_mcu_AC_first_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_AC_first_bb14_in/12 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_encode_mcu_AC_first_bb14_in/12 
* CE 16: eval_encode_mcu_AC_first_bb14_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [C>=E,A>=B,E>=0,15>=E,G=1,F=2] 
* CE 17: eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) = 1+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,I,J,C,D,E,F,G,H)
     [V_r_0>=V_r_1,V_4>=V_k_0,V_r_1>=16,V_r_1=I+16,J=2,B=2] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb14_in/12 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_encode_mcu_AC_first_bb14_in/12 
* Loop 15: eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H)->  eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1',B',C,D,E,F,G,H)
                  [V_r_0>=V_r_1,V_4>=V_k_0,V_r_1>=16,V_r_1=V_r_1'+16,B'=2,B=2] 
* Loop 16: eval_encode_mcu_AC_first_bb14_in(A,B,C,D,E,F,A,B,C,D,E,G) [C>=E,A>=B,E>=0,15>=E,G=1,F=2] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) 
* RF of phase [15]: [V_r_1-15]

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_r_1-15


### Resulting Chains:eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) 
* [[15],16]
* [16]


### Merging Chains  eval_encode_mcu_AC_first_bb14_in/12 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_first_bb16_in/15 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations eval_encode_mcu_AC_first_bb16_in/15 
* CE 18: eval_encode_mcu_AC_first_bb16_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H,I) = 0
     [G=3] 
* CE 19: eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) = 1+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,K,L,C,D,E,F,G,H,I,J)
     [K=V_nbits_0+1,L=3,B=3] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb16_in/15 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of eval_encode_mcu_AC_first_bb16_in/15 
* Loop 17: eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J)->  eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0',B',C,D,E,F,G,H,I,J)
                  [V_nbits_0+1=V_nbits_0',B'=3,B=3] 
* Loop 18: eval_encode_mcu_AC_first_bb16_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H,I) [G=3] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) 


### Resulting Chains:eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) 
* [[17]]...
* [[17],18]
* [18]


### Merging Chains  eval_encode_mcu_AC_first_bb16_in/15 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 
* [[[17]]] --> 3 


### Specialization of cost equations eval_encode_mcu_AC_first_bb4_in/4 
* CE 8 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 5 is refined into CE [22] 
* CE 6 is refined into CE [23,24,25,26,27,28] 


#### Refined cost equations eval_encode_mcu_AC_first_bb4_in/4 
* CE 20: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 0
     [V_k_0>=V_4+1,V_r_0>=0,B=5] 
* CE 21: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 0
     [V_k_0>=V_4+1,V_r_0>=0,B=4] 
* CE 22: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,B)
     [V_4>=V_k_0,V_r_0>=0,V_r_0+1=D,V_k_0+1=C] 
* CE 23: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,V_r_0,E):1+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,V_r_0,F,G,V_4,V_k_0,V_r_0,C,V_r_0,H,I,J):1+ eval_encode_mcu_AC_first_bb4_in(V_4,K,L,B)
     [V_4>=V_k_0,V_r_0>=0,15>=V_r_0,V_k_0+1=K,L=0,H=1,G=3,F=1,E=1,D=2] 
* CE 24: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,V_r_0,E):1+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,V_r_0,F,G,V_4,V_k_0,V_r_0,C,V_r_0,H,I,J):2+ eval_encode_mcu_AC_first_bb4_in(V_4,K,L,B)
     [V_4>=V_k_0,H>=2,V_r_0>=0,15>=V_r_0,V_k_0+1=K,L=0,G=3,F=1,E=1,D=2] 
* CE 25: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,V_r_0,E):1+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,V_r_0,F,G,H,I,J,K,L,M,N,O):3
     [V_4>=V_k_0,V_r_0>=0,15>=V_r_0,P=I+1,Q=0,G=3,F=1,E=1,D=2] 
* CE 26: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,E,F):2+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,E,G,H,V_4,V_k_0,V_r_0,C,E,I,J,K):1+ eval_encode_mcu_AC_first_bb4_in(V_4,L,M,B)
     [V_r_0>=E+16,V_4>=V_k_0,E>=0,15>=E,V_k_0+1=L,M=0,I=1,H=3,G=1,F=1,D=2] 
* CE 27: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,E,F):2+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,E,G,H,V_4,V_k_0,V_r_0,C,E,I,J,K):2+ eval_encode_mcu_AC_first_bb4_in(V_4,L,M,B)
     [V_r_0>=E+16,V_4>=V_k_0,I>=2,E>=0,15>=E,V_k_0+1=L,M=0,H=3,G=1,F=1,D=2] 
* CE 28: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) = 3+ eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,C,V_r_0,D,V_4,V_k_0,V_r_0,C,E,F):2+ eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,C,E,G,H,I,J,K,L,M,N,O,P):3
     [V_r_0>=E+16,V_4>=V_k_0,E>=0,15>=E,Q=J+1,R=0,H=3,G=1,F=1,D=2] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb4_in/4 
* CEs [28] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [26,27] --> Loop 22 
* CEs [23,24] --> Loop 23 
* CEs [20] --> Loop 24 
* CEs [21] --> Loop 25 

#### Loops of eval_encode_mcu_AC_first_bb4_in/4 
* Loop 19: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) [V_4>=V_k_0,V_r_0>=16] 
* Loop 20: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) [V_4>=V_k_0,V_r_0>=0,15>=V_r_0] 
* Loop 21: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B)->  eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0',V_r_0',B)
                  [V_4>=V_k_0,V_r_0>=0,V_r_0+1=V_r_0',V_k_0+1=V_k_0'] 
* Loop 22: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B)->  eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0',V_r_0',B)
                  [V_4>=V_k_0,V_r_0>=16,V_k_0+1=V_k_0',V_r_0'=0] 
* Loop 23: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B)->  eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0',V_r_0',B)
                  [V_4>=V_k_0,V_r_0>=0,15>=V_r_0,V_k_0+1=V_k_0',V_r_0'=0] 
* Loop 24: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) [V_k_0>=V_4+1,V_r_0>=0,B=5] 
* Loop 25: eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) [V_k_0>=V_4+1,V_r_0>=0,B=4] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) 
* RF of phase [21,22,23]: [V_4-V_k_0+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) 
* Partial RF of phase [21,22,23]:
  - RF of loop [21:1,22:1,23:1]:
    V_4-V_k_0+1
  - RF of loop [22:1]:
    V_r_0/16-15/16 depends on loops [21:1] 


### Resulting Chains:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) 
* [[21,22,23],25]
* [[21,22,23],24]
* [[21,22,23],20]...
* [[21,22,23],19]...
* [25]
* [24]
* [20]...


### Merging Chains  eval_encode_mcu_AC_first_bb4_in/4 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[21,22,23]]] --> 2 
* [[24]] --> 3 
* [[24,[21,22,23]]] --> 4 
* [[20]] --> 5 
* [[20,[21,22,23]]] --> 6 
* [[19,[21,22,23]]] --> 7 


### Specialization of cost equations eval_encode_mcu_AC_first_bb23_in/1 
* CE 15 is refined into CE [29] 


#### Refined cost equations eval_encode_mcu_AC_first_bb23_in/1 
* CE 29: eval_encode_mcu_AC_first_bb23_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb23_in/1 
* CEs [29] --> Loop 26 

#### Loops of eval_encode_mcu_AC_first_bb23_in/1 
* Loop 26: eval_encode_mcu_AC_first_bb23_in(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb23_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb23_in(B) 


### Resulting Chains:eval_encode_mcu_AC_first_bb23_in(B) 
* [26]


### Merging Chains  eval_encode_mcu_AC_first_bb23_in/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations loop_cont_eval_encode_mcu_AC_first_bb4_in/2 
* CE 10 is refined into CE [30] 
* CE 9 is refined into CE [31] 


#### Refined cost equations loop_cont_eval_encode_mcu_AC_first_bb4_in/2 
* CE 30: loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) = 0+ eval_encode_mcu_AC_first_bb23_in(A):1
     [D=5] 
* CE 31: loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) = 0+ eval_encode_mcu_AC_first_bb23_in(A):1
     [D=4] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_AC_first_bb4_in/2 
* CEs [30] --> Loop 27 
* CEs [31] --> Loop 28 

#### Loops of loop_cont_eval_encode_mcu_AC_first_bb4_in/2 
* Loop 27: loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) [D=5] 
* Loop 28: loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) [D=4] 

### Ranking functions of CR loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) 


### Resulting Chains:loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A) 
* [28]
* [27]


### Merging Chains  loop_cont_eval_encode_mcu_AC_first_bb4_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_first_bb3_in/2 
* CE 4 is refined into CE [32,33,34,35,36,37,38] 


#### Refined cost equations eval_encode_mcu_AC_first_bb3_in/2 
* CE 32: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):1+ loop_cont_eval_encode_mcu_AC_first_bb4_in(F,B):1
     [C>=V_4+1,F=4,E=4,D=0] 
* CE 33: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):2+ loop_cont_eval_encode_mcu_AC_first_bb4_in(F,B):1
     [V_4>=C,F=4,E=4,D=0] 
* CE 34: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):3+ loop_cont_eval_encode_mcu_AC_first_bb4_in(F,B):2
     [C>=V_4+1,F=5,E=5,D=0] 
* CE 35: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):4+ loop_cont_eval_encode_mcu_AC_first_bb4_in(F,B):2
     [V_4>=C,F=5,E=5,D=0] 
* CE 36: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):5
     [V_4>=C,D=0] 
* CE 37: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):6
     [V_4>=C+1,D=0] 
* CE 38: eval_encode_mcu_AC_first_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_first_bb4_in(V_4,C,D,E):7
     [V_4>=C+16,D=0] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb3_in/2 
* CEs [36,37,38] --> Loop 29 
* CEs [32,33,34,35] --> Loop 30 

#### Loops of eval_encode_mcu_AC_first_bb3_in/2 
* Loop 29: eval_encode_mcu_AC_first_bb3_in(V_4,B) [] 
* Loop 30: eval_encode_mcu_AC_first_bb3_in(V_4,B) [] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb3_in(V_4,B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb3_in(V_4,B) 


### Resulting Chains:eval_encode_mcu_AC_first_bb3_in(V_4,B) 
* [30]
* [29]...


### Merging Chains  eval_encode_mcu_AC_first_bb3_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_first_bb0_in/1 
* CE 3 is refined into CE [39,40] 


#### Refined cost equations eval_encode_mcu_AC_first_bb0_in/1 
* CE 39: eval_encode_mcu_AC_first_bb0_in(B) = 0+ eval_encode_mcu_AC_first_bb3_in(C,B):1
     [] 
* CE 40: eval_encode_mcu_AC_first_bb0_in(B) = 0+ eval_encode_mcu_AC_first_bb3_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_bb0_in/1 
* CEs [40] --> Loop 31 
* CEs [39] --> Loop 32 

#### Loops of eval_encode_mcu_AC_first_bb0_in/1 
* Loop 31: eval_encode_mcu_AC_first_bb0_in(B) [] 
* Loop 32: eval_encode_mcu_AC_first_bb0_in(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_first_bb0_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_first_bb0_in(B) 


### Resulting Chains:eval_encode_mcu_AC_first_bb0_in(B) 
* [32]
* [31]...


### Merging Chains  eval_encode_mcu_AC_first_bb0_in/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_first_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_encode_mcu_AC_first_start/1 
* CE 41: eval_encode_mcu_AC_first_start(B) = 0+ eval_encode_mcu_AC_first_bb0_in(B):1
     [] 
* CE 42: eval_encode_mcu_AC_first_start(B) = 0+ eval_encode_mcu_AC_first_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_first_start/1 
* CEs [42] --> Loop 33 
* CEs [41] --> Loop 34 

#### Loops of eval_encode_mcu_AC_first_start/1 
* Loop 33: eval_encode_mcu_AC_first_start(B) [] 
* Loop 34: eval_encode_mcu_AC_first_start(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_first_start(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_first_start(B) 


### Resulting Chains:eval_encode_mcu_AC_first_start(B) 
* [34]
* [33]...


### Merging Chains  eval_encode_mcu_AC_first_start/1 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_AC_first_bb14_in(V_4',V_k_0',V_r_0',V_temp2_0',V_r_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [15]:eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_AC_first_bb14_in(V_4',V_k_0',V_r_0',V_temp2_0',V_r_1',B',C',D',E',F',G',H')] 
1*it(15)+0
  Such that:it(15) =< V_r_1
it(15) =< V_r_1-V_r_1'

#### Cost of chains of eval_encode_mcu_AC_first_bb14_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,B,C,D,E,F,G,H):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V_r_1-G

  with precondition: [B=2,H=1,V_4=C,V_k_0=D,V_r_0=E,V_temp2_0=F,15>=G,G>=0,V_4>=V_k_0,V_r_0>=V_r_1,V_r_1>=G+16] 

* Chain [16]: 0
  with precondition: [B=2,H=1,F=V_temp2_0,V_4=C,V_k_0=D,V_r_0=E,V_r_1=G,15>=V_r_1,V_r_1>=0,V_4>=V_k_0,V_r_0>=V_r_1] 


#### Cost of loops [17] 

 * loop 17:eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) -> [eval_encode_mcu_AC_first_bb16_in(V_4',V_k_0',V_r_0',V_temp2_0',V_r_1',V_nbits_0',B',C',D',E',F',G',H',I',J')] 
1
#### Cost of phase [17]:eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) -> [eval_encode_mcu_AC_first_bb16_in(V_4',V_k_0',V_r_0',V_temp2_0',V_r_1',V_nbits_0',B',C',D',E',F',G',H',I',J')] 
1*it(17)+0
#### Cost of phase [17]:eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J) -> [eval_encode_mcu_AC_first_bb16_in(V_4',V_k_0',V_r_0',V_temp2_0',V_r_1',V_nbits_0',B',C',D',E',F',G',H',I',J')] 
1*it(17)+0
#### Cost of chains of eval_encode_mcu_AC_first_bb16_in(V_4,V_k_0,V_r_0,V_temp2_0,V_r_1,V_nbits_0,B,C,D,E,F,G,H,I,J):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [B=3] 

* Chain [[17],18]: 1*it(17)+0
  with precondition: [B=3,V_4=C,V_k_0=D,V_r_0=E,V_temp2_0=F,V_r_1=G,H>=V_nbits_0+1] 

* Chain [18]: 0
  with precondition: [B=3,C=V_4,D=V_k_0,E=V_r_0,F=V_temp2_0,G=V_r_1,H=V_nbits_0] 


#### Cost of loops [21,22,23] 

 * loop 21:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1
 * loop 22:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
2*s(5)+1*s(6)+3
  Such that:s(4) =< V_r_0
s(5) =< s(4)

 * loop 23:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1*s(8)+0
#### Cost of phase [21,22,23]:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(5) =< V_r_0
aux(6) =< V_r_0-V_r_0'
aux(3) =< V_r_0/16
aux(4) =< V_r_0/16-V_r_0'/16
aux(8) =< V_4-V_k_0+1
aux(9) =< V_4-V_k_0-V_4'+V_k_0'
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(6)
s(11) =< it(21)+aux(5)
it(22) =< it(21)* (1/16)+aux(4)
it(22) =< it(21)* (1/16)+aux(3)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

#### Cost of phase [21,22,23]:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(5) =< V_r_0
aux(6) =< V_r_0-V_r_0'
aux(3) =< V_r_0/16
aux(4) =< V_r_0/16-V_r_0'/16
aux(8) =< V_4-V_k_0+1
aux(9) =< V_4-V_k_0-V_4'+V_k_0'
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(6)
s(11) =< it(21)+aux(5)
it(22) =< it(21)* (1/16)+aux(4)
it(22) =< it(21)* (1/16)+aux(3)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

#### Cost of phase [21,22,23]:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(5) =< V_r_0
aux(6) =< V_r_0-V_r_0'
aux(3) =< V_r_0/16
aux(4) =< V_r_0/16-V_r_0'/16
aux(8) =< V_4-V_k_0+1
aux(9) =< V_4-V_k_0-V_4'+V_k_0'
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(6)
s(11) =< it(21)+aux(5)
it(22) =< it(21)* (1/16)+aux(4)
it(22) =< it(21)* (1/16)+aux(3)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

#### Cost of phase [21,22,23]:eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B) -> [eval_encode_mcu_AC_first_bb4_in(V_4',V_k_0',V_r_0',B')] 
1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(5) =< V_r_0
aux(6) =< V_r_0-V_r_0'
aux(3) =< V_r_0/16
aux(4) =< V_r_0/16-V_r_0'/16
aux(8) =< V_4-V_k_0+1
aux(9) =< V_4-V_k_0-V_4'+V_k_0'
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(6)
s(11) =< it(21)+aux(5)
it(22) =< it(21)* (1/16)+aux(4)
it(22) =< it(21)* (1/16)+aux(3)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

#### Cost of chains of eval_encode_mcu_AC_first_bb4_in(V_4,V_k_0,V_r_0,B):
* Chain [[21,22,23],25]: 1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(10) =< V_4-V_k_0+1
aux(11) =< V_r_0
aux(12) =< V_r_0/16
it(21) =< aux(10)
it(22) =< aux(10)
s(11) =< it(21)+aux(11)
it(22) =< it(21)* (1/16)+aux(12)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

  with precondition: [B=4,V_r_0>=0,V_4>=V_k_0] 

* Chain [[21,22,23],24]: 1*it(21)+3*it(22)+2*s(9)+2*s(10)+0
  Such that:aux(7) =< V_4-V_k_0+V_r_0
aux(13) =< V_4-V_k_0+1
aux(14) =< V_r_0
aux(15) =< V_r_0/16
it(21) =< aux(13)
it(22) =< aux(13)
s(11) =< it(21)+aux(14)
it(22) =< it(21)* (1/16)+aux(15)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

  with precondition: [B=5,V_r_0>=0,V_4>=V_k_0] 

* Chain [[21,22,23],20]...: 1*it(21)+3*it(22)+2*s(9)+3*s(10)+3
  Such that:aux(9) =< V_4-V_k_0
aux(8) =< V_4-V_k_0+1
aux(7) =< V_4-V_k_0+V_r_0
aux(16) =< V_r_0
aux(17) =< V_r_0/16
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(16)
it(22) =< it(21)* (1/16)+aux(17)
s(11) =< it(22)*aux(7)
s(9) =< s(11)

  with precondition: [V_r_0>=0,V_4>=V_k_0+1] 

* Chain [[21,22,23],19]...: 1*it(21)+3*it(22)+2*s(9)+3*s(10)+1*s(14)+3
  Such that:aux(9) =< V_4-V_k_0
aux(8) =< V_4-V_k_0+1
aux(18) =< V_4-V_k_0+V_r_0
aux(19) =< V_r_0
aux(20) =< V_r_0/16
s(14) =< aux(18)
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)
it(22) =< aux(9)
s(11) =< it(21)+aux(19)
it(22) =< it(21)* (1/16)+aux(20)
s(11) =< it(22)*aux(18)
s(9) =< s(11)

  with precondition: [V_r_0>=0,V_4>=V_k_0+1,V_4+V_r_0>=V_k_0+16] 

* Chain [25]: 0
  with precondition: [B=4,V_r_0>=0,V_k_0>=V_4+1] 

* Chain [24]: 0
  with precondition: [B=5,V_r_0>=0,V_k_0>=V_4+1] 

* Chain [20]...: 1*s(13)+3
  with precondition: [15>=V_r_0,V_r_0>=0,V_4>=V_k_0] 


#### Cost of chains of eval_encode_mcu_AC_first_bb23_in(B):
* Chain [26]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_encode_mcu_AC_first_bb4_in(D,A):
* Chain [28]: 0
  with precondition: [D=4] 

* Chain [27]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_encode_mcu_AC_first_bb3_in(V_4,B):
* Chain [30]: 1*aux(23)+0
  with precondition: [] 

* Chain [29]...: 1*aux(26)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_AC_first_bb0_in(B):
* Chain [32]: 1*s(56)+0
  with precondition: [] 

* Chain [31]...: 1*s(57)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_AC_first_start(B):
* Chain [34]: 1*s(58)+0
  with precondition: [] 

* Chain [33]...: 1*s(59)+0
  with precondition: [] 


Closed-form bounds of eval_encode_mcu_AC_first_start(B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encode_mcu_AC_first_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 44 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 29 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 94 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 103 ms.
   - Equation cost structures 35 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 43 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 356 ms.

