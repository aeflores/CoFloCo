Warning: Ignored call to eval_find0span_stop/1 in equation eval_find0span_bb19_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_find0span_bb19_in/1]
1. recursive  : [eval_find0span_bb13_in/2]
2. recursive  : [eval_find0span_bb5_in/3]
3. non_recursive  : [loop_cont_eval_find0span_bb13_in/2]
4. recursive  : [eval_find0span_bb10_in/3]
5. non_recursive  : [eval_find0span__critedge_in/2]
6. non_recursive  : [loop_cont_eval_find0span_bb10_in/3]
7. non_recursive  : [loop_cont_eval_find0span_bb5_in/3]
8. non_recursive  : [eval_find0span_bb4_in/2]
9. non_recursive  : [eval_find0span_bb0_in/3]
10. non_recursive  : [eval_find0span_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_find0span_bb13_in/2
2. SCC is partially evaluated into eval_find0span_bb5_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_find0span_bb10_in/3
5. SCC is partially evaluated into eval_find0span__critedge_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_find0span_bb5_in/3
8. SCC is partially evaluated into eval_find0span_bb4_in/2
9. SCC is partially evaluated into eval_find0span_bb0_in/3
10. SCC is partially evaluated into eval_find0span_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_find0span_bb13_in/2 
* CE 12 is refined into CE [19] 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 


#### Refined cost equations eval_find0span_bb13_in/2 
* CE 19: eval_find0span_bb13_in(V_bits_4,B) = 0
     [V_bits_4>=8,B=2] 
* CE 20: eval_find0span_bb13_in(V_bits_4,B) = 0
     [7>=V_bits_4,B=2] 
* CE 21: eval_find0span_bb13_in(V_bits_4,B) = 1+ eval_find0span_bb13_in(C,D)
     [V_bits_4>=8,V_bits_4=C+8,D=2,B=2] 

### Cost equations --> "Loop" of eval_find0span_bb13_in/2 
* CEs [21] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_find0span_bb13_in/2 
* Loop 16: eval_find0span_bb13_in(V_bits_4,B)->  eval_find0span_bb13_in(V_bits_4',B')
                  [V_bits_4>=8,V_bits_4=V_bits_4'+8,B'=2,B=2] 
* Loop 17: eval_find0span_bb13_in(V_bits_4,B) [V_bits_4>=8,B=2] 
* Loop 18: eval_find0span_bb13_in(V_bits_4,B) [7>=V_bits_4,B=2] 

### Ranking functions of CR eval_find0span_bb13_in(V_bits_4,B) 
* RF of phase [16]: [V_bits_4-7]

#### Partial ranking functions of CR eval_find0span_bb13_in(V_bits_4,B) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_bits_4-7


### Resulting Chains:eval_find0span_bb13_in(V_bits_4,B) 
* [[16],18]
* [[16],17]
* [18]
* [17]


### Merging Chains  eval_find0span_bb13_in/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17],[17,[16]],[18,[16]]] --> 2 


### Specialization of cost equations eval_find0span_bb5_in/3 
* CE 9 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24] 


#### Refined cost equations eval_find0span_bb5_in/3 
* CE 22: eval_find0span_bb5_in(A,B,A) = 0
     [B=3] 
* CE 23: eval_find0span_bb5_in(V_bits_1,B,C) = 0
     [B=2] 
* CE 24: eval_find0span_bb5_in(V_bits_1,B,C) = 1+ eval_find0span_bb5_in(D,B,C)
     [D+8=V_bits_1] 

### Cost equations --> "Loop" of eval_find0span_bb5_in/3 
* CEs [24] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

#### Loops of eval_find0span_bb5_in/3 
* Loop 19: eval_find0span_bb5_in(V_bits_1,B,C)->  eval_find0span_bb5_in(V_bits_1',B,C)
                  [V_bits_1=V_bits_1'+8] 
* Loop 20: eval_find0span_bb5_in(A,B,A) [B=3] 
* Loop 21: eval_find0span_bb5_in(V_bits_1,B,C) [B=2] 

### Ranking functions of CR eval_find0span_bb5_in(V_bits_1,B,C) 

#### Partial ranking functions of CR eval_find0span_bb5_in(V_bits_1,B,C) 


### Resulting Chains:eval_find0span_bb5_in(V_bits_1,B,C) 
* [[19]]...
* [[19],21]
* [[19],20]
* [21]
* [20]


### Merging Chains  eval_find0span_bb5_in/3 into  External patterns of execution 
* [[21],[21,[19]]] --> 1 
* [[20]] --> 2 
* [[20,[19]]] --> 3 
* [[[19]]] --> 4 


### Specialization of cost equations eval_find0span_bb10_in/3 
* CE 16 is refined into CE [25] 
* CE 17 is refined into CE [26] 
* CE 15 is refined into CE [27] 


#### Refined cost equations eval_find0span_bb10_in/3 
* CE 25: eval_find0span_bb10_in(A,B,A) = 0
     [A>=64,B=4] 
* CE 26: eval_find0span_bb10_in(A,B,A) = 0
     [63>=A,B=4] 
* CE 27: eval_find0span_bb10_in(V_bits_2,B,C) = 1+ eval_find0span_bb10_in(D,E,C)
     [V_bits_2>=64,V_bits_2=D+64,E=4,B=4] 

### Cost equations --> "Loop" of eval_find0span_bb10_in/3 
* CEs [27] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 

#### Loops of eval_find0span_bb10_in/3 
* Loop 22: eval_find0span_bb10_in(V_bits_2,B,C)->  eval_find0span_bb10_in(V_bits_2',B',C)
                  [V_bits_2>=64,V_bits_2=V_bits_2'+64,B'=4,B=4] 
* Loop 23: eval_find0span_bb10_in(A,B,A) [A>=64,B=4] 
* Loop 24: eval_find0span_bb10_in(A,B,A) [63>=A,B=4] 

### Ranking functions of CR eval_find0span_bb10_in(V_bits_2,B,C) 
* RF of phase [22]: [V_bits_2-63]

#### Partial ranking functions of CR eval_find0span_bb10_in(V_bits_2,B,C) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V_bits_2-63


### Resulting Chains:eval_find0span_bb10_in(V_bits_2,B,C) 
* [[22],24]
* [[22],23]
* [24]
* [23]


### Merging Chains  eval_find0span_bb10_in/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[24,[22]]] --> 3 
* [[23,[22]]] --> 4 


### Specialization of cost equations eval_find0span__critedge_in/2 
* CE 18 is refined into CE [28,29] 


#### Refined cost equations eval_find0span__critedge_in/2 
* CE 28: eval_find0span__critedge_in(V_bits_2,B) = 1+ eval_find0span_bb13_in(V_bits_2,C):1
     [7>=V_bits_2,C=2] 
* CE 29: eval_find0span__critedge_in(V_bits_2,B) = 1+ eval_find0span_bb13_in(V_bits_2,C):2
     [V_bits_2>=8,C=2] 

### Cost equations --> "Loop" of eval_find0span__critedge_in/2 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of eval_find0span__critedge_in/2 
* Loop 25: eval_find0span__critedge_in(V_bits_2,B) [V_bits_2>=8] 
* Loop 26: eval_find0span__critedge_in(V_bits_2,B) [7>=V_bits_2] 

### Ranking functions of CR eval_find0span__critedge_in(V_bits_2,B) 

#### Partial ranking functions of CR eval_find0span__critedge_in(V_bits_2,B) 


### Resulting Chains:eval_find0span__critedge_in(V_bits_2,B) 
* [26]
* [25]


### Merging Chains  eval_find0span__critedge_in/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations loop_cont_eval_find0span_bb5_in/3 
* CE 11 is refined into CE [30,31,32,33,34,35] 
* CE 10 is refined into CE [36] 


#### Refined cost equations loop_cont_eval_find0span_bb5_in/3 
* CE 30: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,A):1+ eval_find0span__critedge_in(A,B):1
     [7>=A,D=4,C=3] 
* CE 31: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,A):1+ eval_find0span__critedge_in(A,B):2
     [A>=8,63>=A,D=4,C=3] 
* CE 32: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,A):2+ eval_find0span__critedge_in(A,B):2
     [A>=64,D=4,C=3] 
* CE 33: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,E):3+ eval_find0span__critedge_in(E,B):1
     [A>=E+64,E>=0,7>=E,D=4,C=3] 
* CE 34: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,E):3+ eval_find0span__critedge_in(E,B):2
     [A>=E+64,E>=8,63>=E,D=4,C=3] 
* CE 35: loop_cont_eval_find0span_bb5_in(C,A,B) = 1+ eval_find0span_bb10_in(A,D,E):4+ eval_find0span__critedge_in(E,B):2
     [A>=E+64,E>=64,D=4,C=3] 
* CE 36: loop_cont_eval_find0span_bb5_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_find0span_bb5_in/3 
* CEs [32,33,34,35] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [36] --> Loop 30 

#### Loops of loop_cont_eval_find0span_bb5_in/3 
* Loop 27: loop_cont_eval_find0span_bb5_in(C,A,B) [A>=64,C=3] 
* Loop 28: loop_cont_eval_find0span_bb5_in(C,A,B) [7>=A,C=3] 
* Loop 29: loop_cont_eval_find0span_bb5_in(C,A,B) [A>=8,63>=A,C=3] 
* Loop 30: loop_cont_eval_find0span_bb5_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_find0span_bb5_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_find0span_bb5_in(C,A,B) 


### Resulting Chains:loop_cont_eval_find0span_bb5_in(C,A,B) 
* [30]
* [29]
* [28]
* [27]


### Merging Chains  loop_cont_eval_find0span_bb5_in/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 


### Specialization of cost equations eval_find0span_bb4_in/2 
* CE 5 is refined into CE [37,38,39,40,41,42,43,44] 
* CE 6 is refined into CE [45,46] 


#### Refined cost equations eval_find0span_bb4_in/2 
* CE 37: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,D):1+ loop_cont_eval_find0span_bb5_in(E,D,B):1
     [E=2,C=2] 
* CE 38: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,V_bits_0):2+ loop_cont_eval_find0span_bb5_in(D,V_bits_0,B):2
     [V_bits_0>=8,63>=V_bits_0,D=3,C=3] 
* CE 39: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,V_bits_0):2+ loop_cont_eval_find0span_bb5_in(D,V_bits_0,B):3
     [7>=V_bits_0,D=3,C=3] 
* CE 40: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,V_bits_0):2+ loop_cont_eval_find0span_bb5_in(D,V_bits_0,B):4
     [V_bits_0>=64,D=3,C=3] 
* CE 41: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,D):3+ loop_cont_eval_find0span_bb5_in(E,D,B):2
     [V_bits_0>=D+8,D>=8,63>=D,E=3,C=3] 
* CE 42: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,D):3+ loop_cont_eval_find0span_bb5_in(E,D,B):3
     [V_bits_0>=D+8,7>=D,E=3,C=3] 
* CE 43: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,D):3+ loop_cont_eval_find0span_bb5_in(E,D,B):4
     [V_bits_0>=D+8,D>=64,E=3,C=3] 
* CE 44: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb5_in(V_bits_0,C,D):4
     [] 
* CE 45: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb13_in(V_bits_0,C):1
     [7>=V_bits_0,C=2] 
* CE 46: eval_find0span_bb4_in(V_bits_0,B) = 1+ eval_find0span_bb13_in(V_bits_0,C):2
     [V_bits_0>=8,C=2] 

### Cost equations --> "Loop" of eval_find0span_bb4_in/2 
* CEs [37,38,39,40,41,42,43,45,46] --> Loop 31 
* CEs [44] --> Loop 32 

#### Loops of eval_find0span_bb4_in/2 
* Loop 31: eval_find0span_bb4_in(V_bits_0,B) [] 
* Loop 32: eval_find0span_bb4_in(V_bits_0,B) [] 

### Ranking functions of CR eval_find0span_bb4_in(V_bits_0,B) 

#### Partial ranking functions of CR eval_find0span_bb4_in(V_bits_0,B) 


### Resulting Chains:eval_find0span_bb4_in(V_bits_0,B) 
* [32]...
* [31]


### Merging Chains  eval_find0span_bb4_in/2 into  External patterns of execution 
* [[31]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_find0span_bb0_in/3 
* CE 3 is refined into CE [47] 
* CE 4 is refined into CE [48,49] 


#### Refined cost equations eval_find0span_bb0_in/3 
* CE 47: eval_find0span_bb0_in(V_bs,V_be,B) = 0
     [] 
* CE 48: eval_find0span_bb0_in(V_bs,V_be,B) = 0+ eval_find0span_bb4_in(C,B):1
     [] 
* CE 49: eval_find0span_bb0_in(V_bs,V_be,B) = 0+ eval_find0span_bb4_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_find0span_bb0_in/3 
* CEs [49] --> Loop 33 
* CEs [47,48] --> Loop 34 

#### Loops of eval_find0span_bb0_in/3 
* Loop 33: eval_find0span_bb0_in(V_bs,V_be,B) [] 
* Loop 34: eval_find0span_bb0_in(V_bs,V_be,B) [] 

### Ranking functions of CR eval_find0span_bb0_in(V_bs,V_be,B) 

#### Partial ranking functions of CR eval_find0span_bb0_in(V_bs,V_be,B) 


### Resulting Chains:eval_find0span_bb0_in(V_bs,V_be,B) 
* [34]
* [33]...


### Merging Chains  eval_find0span_bb0_in/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_find0span_start/3 
* CE 2 is refined into CE [50,51] 


#### Refined cost equations eval_find0span_start/3 
* CE 50: eval_find0span_start(V_bs,V_be,B) = 0+ eval_find0span_bb0_in(V_bs,V_be,B):1
     [] 
* CE 51: eval_find0span_start(V_bs,V_be,B) = 0+ eval_find0span_bb0_in(V_bs,V_be,B):2
     [] 

### Cost equations --> "Loop" of eval_find0span_start/3 
* CEs [51] --> Loop 35 
* CEs [50] --> Loop 36 

#### Loops of eval_find0span_start/3 
* Loop 35: eval_find0span_start(V_bs,V_be,B) [] 
* Loop 36: eval_find0span_start(V_bs,V_be,B) [] 

### Ranking functions of CR eval_find0span_start(V_bs,V_be,B) 

#### Partial ranking functions of CR eval_find0span_start(V_bs,V_be,B) 


### Resulting Chains:eval_find0span_start(V_bs,V_be,B) 
* [36]
* [35]...


### Merging Chains  eval_find0span_start/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_find0span_bb13_in(V_bits_4,B) -> [eval_find0span_bb13_in(V_bits_4',B')] 
1
#### Cost of phase [16]:eval_find0span_bb13_in(V_bits_4,B) -> [eval_find0span_bb13_in(V_bits_4',B')] 
1*it(16)+0
  Such that:it(16) =< V_bits_4
it(16) =< V_bits_4-V_bits_4'

#### Cost of phase [16]:eval_find0span_bb13_in(V_bits_4,B) -> [eval_find0span_bb13_in(V_bits_4',B')] 
1*it(16)+0
  Such that:it(16) =< V_bits_4
it(16) =< V_bits_4-V_bits_4'

#### Cost of chains of eval_find0span_bb13_in(V_bits_4,B):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_bits_4

  with precondition: [B=2,V_bits_4>=8] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_bits_4

  with precondition: [B=2,V_bits_4>=16] 

* Chain [18]: 0
  with precondition: [B=2,7>=V_bits_4] 

* Chain [17]: 0
  with precondition: [B=2,V_bits_4>=8] 


#### Cost of loops [19] 

 * loop 19:eval_find0span_bb5_in(V_bits_1,B,C) -> [eval_find0span_bb5_in(V_bits_1',B',C')] 
1
#### Cost of phase [19]:eval_find0span_bb5_in(V_bits_1,B,C) -> [eval_find0span_bb5_in(V_bits_1',B',C')] 
1*it(19)+0
#### Cost of phase [19]:eval_find0span_bb5_in(V_bits_1,B,C) -> [eval_find0span_bb5_in(V_bits_1',B',C')] 
1*it(19)+0
#### Cost of phase [19]:eval_find0span_bb5_in(V_bits_1,B,C) -> [eval_find0span_bb5_in(V_bits_1',B',C')] 
1*it(19)+0
#### Cost of chains of eval_find0span_bb5_in(V_bits_1,B,C):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [] 

* Chain [[19],21]: 1*it(19)+0
  with precondition: [B=2] 

* Chain [[19],20]: 1*it(19)+0
  with precondition: [B=3,V_bits_1>=C+8] 

* Chain [21]: 0
  with precondition: [B=2] 

* Chain [20]: 0
  with precondition: [B=3,C=V_bits_1] 


#### Cost of loops [22] 

 * loop 22:eval_find0span_bb10_in(V_bits_2,B,C) -> [eval_find0span_bb10_in(V_bits_2',B',C')] 
1
#### Cost of phase [22]:eval_find0span_bb10_in(V_bits_2,B,C) -> [eval_find0span_bb10_in(V_bits_2',B',C')] 
1*it(22)+0
  Such that:it(22) =< V_bits_2
it(22) =< V_bits_2-V_bits_2'

#### Cost of phase [22]:eval_find0span_bb10_in(V_bits_2,B,C) -> [eval_find0span_bb10_in(V_bits_2',B',C')] 
1*it(22)+0
  Such that:it(22) =< V_bits_2
it(22) =< V_bits_2-V_bits_2'

#### Cost of chains of eval_find0span_bb10_in(V_bits_2,B,C):
* Chain [[22],24]: 1*it(22)+0
  Such that:it(22) =< V_bits_2-C

  with precondition: [B=4,63>=C,C>=0,V_bits_2>=C+64] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< V_bits_2-C

  with precondition: [B=4,C>=64,V_bits_2>=C+64] 

* Chain [24]: 0
  with precondition: [B=4,V_bits_2=C,63>=V_bits_2] 

* Chain [23]: 0
  with precondition: [B=4,V_bits_2=C,V_bits_2>=64] 


#### Cost of chains of eval_find0span__critedge_in(V_bits_2,B):
* Chain [26]: 1
  with precondition: [7>=V_bits_2] 

* Chain [25]: 2*s(5)+1
  Such that:s(4) =< V_bits_2
s(5) =< s(4)

  with precondition: [V_bits_2>=8] 


#### Cost of chains of loop_cont_eval_find0span_bb5_in(C,A,B):
* Chain [30]: 0
  with precondition: [C=2] 

* Chain [29]: 2*s(7)+2
  Such that:s(6) =< A
s(7) =< s(6)

  with precondition: [C=3,63>=A,A>=8] 

* Chain [28]: 2
  with precondition: [C=3,7>=A] 

* Chain [27]: 9*s(9)+2
  Such that:aux(5) =< A
s(9) =< aux(5)

  with precondition: [C=3,A>=64] 


#### Cost of chains of eval_find0span_bb4_in(V_bits_0,B):
* Chain [32]...: 1*s(17)+1
  with precondition: [] 

* Chain [31]: 4*s(18)+22*s(20)+2*s(25)+3
  Such that:s(24) =< 63
aux(6) =< V_bits_0
s(25) =< s(24)
s(20) =< aux(6)

  with precondition: [] 


#### Cost of chains of eval_find0span_bb0_in(V_bs,V_be,B):
* Chain [34]: 1*aux(7)+0
  with precondition: [] 

* Chain [33]...: 1*s(37)+1
  with precondition: [] 


#### Cost of chains of eval_find0span_start(V_bs,V_be,B):
* Chain [36]: 1*s(38)+0
  with precondition: [] 

* Chain [35]...: 1*s(39)+1
  with precondition: [] 


Closed-form bounds of eval_find0span_start(V_bs,V_be,B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_find0span_start(V_bs,V_be,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 44 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 141 ms.

