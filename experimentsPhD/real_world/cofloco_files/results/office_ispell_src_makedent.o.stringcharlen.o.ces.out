Warning: Ignored call to eval_stringcharlen_stop/1 in equation eval_stringcharlen_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_stringcharlen_bb3_in/7]
1. recursive  : [eval_stringcharlen_bb10_in/4,eval_stringcharlen_bb1_in/3,eval_stringcharlen_bb6_in/4,loop_cont_eval_stringcharlen_bb3_in/5]
2. non_recursive  : [eval_stringcharlen_bb16_in/1]
3. non_recursive  : [loop_cont_eval_stringcharlen_bb1_in/2]
4. non_recursive  : [eval_stringcharlen_bb0_in/1]
5. non_recursive  : [eval_stringcharlen_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_stringcharlen_bb3_in/7
1. SCC is partially evaluated into eval_stringcharlen_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_stringcharlen_bb0_in/1
5. SCC is partially evaluated into eval_stringcharlen_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_stringcharlen_bb3_in/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


#### Refined cost equations eval_stringcharlen_bb3_in/7 
* CE 12: eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) = 1+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,F,C,D,E)
     [V_highstringno_0>=V_lowstringno_0,F=2,B=2] 
* CE 13: eval_stringcharlen_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=B,D=2] 

### Cost equations --> "Loop" of eval_stringcharlen_bb3_in/7 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of eval_stringcharlen_bb3_in/7 
* Loop 8: eval_stringcharlen_bb3_in(A,B,C,D,A,B,C) [A>=B,D=2] 
* Loop 9: eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E)->  eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B',C,D,E)
                  [V_highstringno_0>=V_lowstringno_0,B'=2,B=2] 

### Ranking functions of CR eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) 

#### Partial ranking functions of CR eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) 


### Resulting Chains:eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) 
* [[9]]...
* [[9],8]
* [8]


### Merging Chains  eval_stringcharlen_bb3_in/7 into  External patterns of execution 
* [[8],[8,[9]]] --> 1 
* [[[9]]] --> 2 


### Specialization of cost equations eval_stringcharlen_bb1_in/3 
* CE 8 is refined into CE [14,15] 
* CE 9 is refined into CE [16] 
* CE 4 is refined into CE [17,18] 
* CE 5 is refined into CE [19,20] 
* CE 6 is refined into CE [21,22] 
* CE 7 is refined into CE [23,24] 


#### Refined cost equations eval_stringcharlen_bb1_in/3 
* CE 14: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 1+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,V_highstringno_0,V_lowstringno_0,C):1
     [V_highstringno_0>=V_lowstringno_0,D=2,B=3] 
* CE 15: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 1+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,E,F,G):2
     [V_highstringno_0>=V_lowstringno_0,D=2,B=3] 
* CE 16: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 0
     [V_lowstringno_0>=V_highstringno_0+1,B=3] 
* CE 17: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,V_highstringno_0,V_lowstringno_0,C):1+ eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,E)
     [V_highstringno_0>=V_lowstringno_0,E=3,D=2,B=3] 
* CE 18: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,E,F,G):2
     [V_highstringno_0>=V_lowstringno_0,H=3,D=2,B=3] 
* CE 19: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,V_highstringno_0,V_lowstringno_0,C):1+ eval_stringcharlen_bb1_in(E,F,G)
     [V_highstringno_0>=V_lowstringno_0,C+1=F,C=E+1,G=3,D=2,B=3] 
* CE 20: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,E,F,G):2
     [V_highstringno_0>=V_lowstringno_0,G+1=H,G=I+1,J=3,D=2,B=3] 
* CE 21: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,V_highstringno_0,V_lowstringno_0,C):1+ eval_stringcharlen_bb1_in(V_highstringno_0,E,F)
     [V_highstringno_0>=V_lowstringno_0,C+1=E,F=3,D=2,B=3] 
* CE 22: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,E,F,G):2
     [V_highstringno_0>=V_lowstringno_0,H=G+1,I=3,D=2,B=3] 
* CE 23: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,V_highstringno_0,V_lowstringno_0,C):1+ eval_stringcharlen_bb1_in(E,V_lowstringno_0,F)
     [V_highstringno_0>=V_lowstringno_0,C=E+1,F=3,D=2,B=3] 
* CE 24: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) = 2+ eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,C,D,E,F,G):2
     [V_highstringno_0>=V_lowstringno_0,H+1=G,I=3,D=2,B=3] 

### Cost equations --> "Loop" of eval_stringcharlen_bb1_in/3 
* CEs [15,18,20,22,24] --> Loop 10 
* CEs [19] --> Loop 11 
* CEs [23] --> Loop 12 
* CEs [17,21] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [16] --> Loop 15 

#### Loops of eval_stringcharlen_bb1_in/3 
* Loop 10: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) [V_highstringno_0>=V_lowstringno_0,B=3] 
* Loop 11: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B)->  eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')
                  [V_highstringno_0>=V_lowstringno_0,V_highstringno_0'+2=V_lowstringno_0',B'=3,B=3] 
* Loop 12: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B)->  eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0,B')
                  [V_highstringno_0>=V_lowstringno_0,B'=3,B=3] 
* Loop 13: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B)->  eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0',B')
                  [V_highstringno_0>=V_lowstringno_0,B'=3,B=3] 
* Loop 14: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) [V_highstringno_0>=V_lowstringno_0,B=3] 
* Loop 15: eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) [V_lowstringno_0>=V_highstringno_0+1,B=3] 

### Ranking functions of CR eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) 

#### Partial ranking functions of CR eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) 


### Resulting Chains:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) 
* [[12,13]]...
* [[12,13],15]
* [[12,13],14]
* [[12,13],11,15]
* [[12,13],10]...
* [15]
* [14]
* [11,15]
* [10]...


### Merging Chains  eval_stringcharlen_bb1_in/3 into  External patterns of execution 
* [[15]] --> 1 
* [[15,11],[14],[15,11,[12,13]],[14,[12,13]],[15,[12,13]]] --> 2 
* [[10],[10,[12,13]]] --> 3 
* [[[12,13]]] --> 4 


### Specialization of cost equations eval_stringcharlen_bb0_in/1 
* CE 3 is refined into CE [25,26,27,28] 


#### Refined cost equations eval_stringcharlen_bb0_in/1 
* CE 25: eval_stringcharlen_bb0_in(B) = 1+ eval_stringcharlen_bb1_in(C,D,E):1
     [0>=C+1,E=3,D=0] 
* CE 26: eval_stringcharlen_bb0_in(B) = 1+ eval_stringcharlen_bb1_in(C,D,E):2
     [C>=0,E=3,D=0] 
* CE 27: eval_stringcharlen_bb0_in(B) = 1+ eval_stringcharlen_bb1_in(C,D,E):3
     [C>=0,E=3,D=0] 
* CE 28: eval_stringcharlen_bb0_in(B) = 1+ eval_stringcharlen_bb1_in(C,D,E):4
     [C>=0,E=3,D=0] 

### Cost equations --> "Loop" of eval_stringcharlen_bb0_in/1 
* CEs [27,28] --> Loop 16 
* CEs [25,26] --> Loop 17 

#### Loops of eval_stringcharlen_bb0_in/1 
* Loop 16: eval_stringcharlen_bb0_in(B) [] 
* Loop 17: eval_stringcharlen_bb0_in(B) [] 

### Ranking functions of CR eval_stringcharlen_bb0_in(B) 

#### Partial ranking functions of CR eval_stringcharlen_bb0_in(B) 


### Resulting Chains:eval_stringcharlen_bb0_in(B) 
* [17]
* [16]...


### Merging Chains  eval_stringcharlen_bb0_in/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_stringcharlen_start/4 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_stringcharlen_start/4 
* CE 29: eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) = 0+ eval_stringcharlen_bb0_in(B):1
     [] 
* CE 30: eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) = 0+ eval_stringcharlen_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_stringcharlen_start/4 
* CEs [30] --> Loop 18 
* CEs [29] --> Loop 19 

#### Loops of eval_stringcharlen_start/4 
* Loop 18: eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) [] 
* Loop 19: eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) [] 

### Ranking functions of CR eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) 

#### Partial ranking functions of CR eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) 


### Resulting Chains:eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B) 
* [19]
* [18]...


### Merging Chains  eval_stringcharlen_start/4 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) -> [eval_stringcharlen_bb3_in(V_highstringno_0',V_lowstringno_0',V_8',B',C',D',E')] 
1
#### Cost of phase [9]:eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) -> [eval_stringcharlen_bb3_in(V_highstringno_0',V_lowstringno_0',V_8',B',C',D',E')] 
1*it(9)+0
#### Cost of phase [9]:eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E) -> [eval_stringcharlen_bb3_in(V_highstringno_0',V_lowstringno_0',V_8',B',C',D',E')] 
1*it(9)+0
#### Cost of chains of eval_stringcharlen_bb3_in(V_highstringno_0,V_lowstringno_0,V_8,B,C,D,E):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [V_highstringno_0>=V_lowstringno_0,B=2] 

* Chain [[9],8]: 1*it(9)+0
  with precondition: [B=2,V_highstringno_0=C,V_lowstringno_0=D,V_8=E,V_highstringno_0>=V_lowstringno_0] 

* Chain [8]: 0
  with precondition: [B=2,E=V_8,V_highstringno_0=C,V_lowstringno_0=D,V_highstringno_0>=V_lowstringno_0] 


#### Cost of loops [12,13] 

 * loop 12:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
1*s(3)+2
 * loop 13:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
1*s(6)+0
#### Cost of phase [12,13]:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
4*it(12)+0
#### Cost of phase [12,13]:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
4*it(12)+0
#### Cost of phase [12,13]:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
4*it(12)+0
#### Cost of phase [12,13]:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
4*it(12)+0
#### Cost of phase [12,13]:eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B) -> [eval_stringcharlen_bb1_in(V_highstringno_0',V_lowstringno_0',B')] 
4*it(12)+0
#### Cost of chains of eval_stringcharlen_bb1_in(V_highstringno_0,V_lowstringno_0,B):
* Chain [[12,13]]...: 4*it(12)+0
  with precondition: [V_highstringno_0>=V_lowstringno_0,B=3] 

* Chain [[12,13],15]: 4*it(12)+0
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [[12,13],14]: 5*it(12)+1
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [[12,13],11,15]: 5*it(12)+2
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [[12,13],10]...: 5*aux(3)+0
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [15]: 0
  with precondition: [B=3,V_lowstringno_0>=V_highstringno_0+1] 

* Chain [14]: 1*s(9)+1
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [11,15]: 1*s(10)+2
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 

* Chain [10]...: 1*aux(3)+0
  with precondition: [B=3,V_highstringno_0>=V_lowstringno_0] 


#### Cost of chains of eval_stringcharlen_bb0_in(B):
* Chain [17]: 1*aux(6)+0
  with precondition: [] 

* Chain [16]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B):
* Chain [19]: 1*s(26)+0
  with precondition: [] 

* Chain [18]...: 1*s(27)+0
  with precondition: [] 


Closed-form bounds of eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_stringcharlen_start(V_canonical,V__defdupchar,V__laststringch,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 40 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 125 ms.

