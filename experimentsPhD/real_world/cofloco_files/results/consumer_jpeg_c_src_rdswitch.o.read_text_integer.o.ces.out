Warning: Ignored call to eval_read_text_integer_stop/1 in equation eval_read_text_integer_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_read_text_integer_2/1,eval_read_text_integer_3/2,eval_read_text_integer_bb1_in/1]
1. recursive  : [eval_read_text_integer_21/1,eval_read_text_integer_22/2,eval_read_text_integer_bb6_in/1]
2. non_recursive  : [eval_read_text_integer_bb11_in/1]
3. non_recursive  : [eval_read_text_integer_bb9_in/1]
4. non_recursive  : [loop_cont_eval_read_text_integer_bb6_in/2]
5. non_recursive  : [eval_read_text_integer_20/1]
6. non_recursive  : [eval_read_text_integer_19/1]
7. non_recursive  : [eval_read_text_integer_13/1]
8. non_recursive  : [eval_read_text_integer_12/1]
9. non_recursive  : [loop_cont_eval_read_text_integer_bb1_in/2]
10. non_recursive  : [eval_read_text_integer_1/1]
11. non_recursive  : [eval_read_text_integer_0/1]
12. non_recursive  : [eval_read_text_integer_bb0_in/1]
13. non_recursive  : [eval_read_text_integer_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_read_text_integer_bb1_in/1
1. SCC is partially evaluated into eval_read_text_integer_bb6_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_read_text_integer_20/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_read_text_integer_13/1
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_read_text_integer_bb1_in/2
10. SCC is partially evaluated into eval_read_text_integer_1/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_read_text_integer_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_read_text_integer_bb1_in/1 
* CE 4 is refined into CE [14] 
* CE 6 is refined into CE [15] 
* CE 5 is refined into CE [16] 


#### Refined cost equations eval_read_text_integer_bb1_in/1 
* CE 14: eval_read_text_integer_bb1_in(B) = 0
     [B=4] 
* CE 15: eval_read_text_integer_bb1_in(B) = 0
     [B=3] 
* CE 16: eval_read_text_integer_bb1_in(B) = 1+ eval_read_text_integer_bb1_in(B)
     [] 

### Cost equations --> "Loop" of eval_read_text_integer_bb1_in/1 
* CEs [16] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_read_text_integer_bb1_in/1 
* Loop 12: eval_read_text_integer_bb1_in(B)->  eval_read_text_integer_bb1_in(B)
                  [] 
* Loop 13: eval_read_text_integer_bb1_in(B) [B=4] 
* Loop 14: eval_read_text_integer_bb1_in(B) [B=3] 

### Ranking functions of CR eval_read_text_integer_bb1_in(B) 

#### Partial ranking functions of CR eval_read_text_integer_bb1_in(B) 


### Resulting Chains:eval_read_text_integer_bb1_in(B) 
* [[12]]...
* [[12],14]
* [[12],13]
* [14]
* [13]


### Merging Chains  eval_read_text_integer_bb1_in/1 into  External patterns of execution 
* [[14],[14,[12]]] --> 1 
* [[13],[13,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations eval_read_text_integer_bb6_in/1 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_read_text_integer_bb6_in/1 
* CE 17: eval_read_text_integer_bb6_in(B) = 1+ eval_read_text_integer_bb6_in(C)
     [C=2,B=2] 
* CE 18: eval_read_text_integer_bb6_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_read_text_integer_bb6_in/1 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_read_text_integer_bb6_in/1 
* Loop 15: eval_read_text_integer_bb6_in(B) [B=2] 
* Loop 16: eval_read_text_integer_bb6_in(B)->  eval_read_text_integer_bb6_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_read_text_integer_bb6_in(B) 

#### Partial ranking functions of CR eval_read_text_integer_bb6_in(B) 


### Resulting Chains:eval_read_text_integer_bb6_in(B) 
* [[16]]...
* [[16],15]
* [15]


### Merging Chains  eval_read_text_integer_bb6_in/1 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_read_text_integer_20/1 
* CE 11 is refined into CE [19,20] 


#### Refined cost equations eval_read_text_integer_20/1 
* CE 19: eval_read_text_integer_20(B) = 1+ eval_read_text_integer_bb6_in(C):1
     [C=2] 
* CE 20: eval_read_text_integer_20(B) = 1+ eval_read_text_integer_bb6_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_read_text_integer_20/1 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_read_text_integer_20/1 
* Loop 17: eval_read_text_integer_20(B) [] 
* Loop 18: eval_read_text_integer_20(B) [] 

### Ranking functions of CR eval_read_text_integer_20(B) 

#### Partial ranking functions of CR eval_read_text_integer_20(B) 


### Resulting Chains:eval_read_text_integer_20(B) 
* [18]
* [17]...


### Merging Chains  eval_read_text_integer_20/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_read_text_integer_13/1 
* CE 9 is refined into CE [21,22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations eval_read_text_integer_13/1 
* CE 21: eval_read_text_integer_13(B) = 0+ eval_read_text_integer_20(B):1
     [] 
* CE 22: eval_read_text_integer_13(B) = 0+ eval_read_text_integer_20(B):2
     [] 
* CE 23: eval_read_text_integer_13(B) = 0
     [] 

### Cost equations --> "Loop" of eval_read_text_integer_13/1 
* CEs [21,23] --> Loop 19 
* CEs [22] --> Loop 20 

#### Loops of eval_read_text_integer_13/1 
* Loop 19: eval_read_text_integer_13(B) [] 
* Loop 20: eval_read_text_integer_13(B) [] 

### Ranking functions of CR eval_read_text_integer_13(B) 

#### Partial ranking functions of CR eval_read_text_integer_13(B) 


### Resulting Chains:eval_read_text_integer_13(B) 
* [20]...
* [19]


### Merging Chains  eval_read_text_integer_13/1 into  External patterns of execution 
* [[19]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations loop_cont_eval_read_text_integer_bb1_in/2 
* CE 8 is refined into CE [24,25] 
* CE 7 is refined into CE [26] 


#### Refined cost equations loop_cont_eval_read_text_integer_bb1_in/2 
* CE 24: loop_cont_eval_read_text_integer_bb1_in(C,A) = 0+ eval_read_text_integer_13(A):1
     [C=4] 
* CE 25: loop_cont_eval_read_text_integer_bb1_in(C,A) = 0+ eval_read_text_integer_13(A):2
     [C=4] 
* CE 26: loop_cont_eval_read_text_integer_bb1_in(C,A) = 0
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_read_text_integer_bb1_in/2 
* CEs [24] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of loop_cont_eval_read_text_integer_bb1_in/2 
* Loop 21: loop_cont_eval_read_text_integer_bb1_in(C,A) [C=4] 
* Loop 22: loop_cont_eval_read_text_integer_bb1_in(C,A) [C=3] 
* Loop 23: loop_cont_eval_read_text_integer_bb1_in(C,A) [C=4] 

### Ranking functions of CR loop_cont_eval_read_text_integer_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_read_text_integer_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_read_text_integer_bb1_in(C,A) 
* [23]...
* [22]
* [21]


### Merging Chains  loop_cont_eval_read_text_integer_bb1_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations eval_read_text_integer_1/1 
* CE 3 is refined into CE [27,28,29,30] 


#### Refined cost equations eval_read_text_integer_1/1 
* CE 27: eval_read_text_integer_1(B) = 1+ eval_read_text_integer_bb1_in(C):1+ loop_cont_eval_read_text_integer_bb1_in(D,B):1
     [D=3,C=3] 
* CE 28: eval_read_text_integer_1(B) = 1+ eval_read_text_integer_bb1_in(C):2+ loop_cont_eval_read_text_integer_bb1_in(D,B):2
     [D=4,C=4] 
* CE 29: eval_read_text_integer_1(B) = 1+ eval_read_text_integer_bb1_in(C):2+ loop_cont_eval_read_text_integer_bb1_in(D,B):3
     [D=4,C=4] 
* CE 30: eval_read_text_integer_1(B) = 1+ eval_read_text_integer_bb1_in(C):3
     [] 

### Cost equations --> "Loop" of eval_read_text_integer_1/1 
* CEs [29,30] --> Loop 24 
* CEs [27,28] --> Loop 25 

#### Loops of eval_read_text_integer_1/1 
* Loop 24: eval_read_text_integer_1(B) [] 
* Loop 25: eval_read_text_integer_1(B) [] 

### Ranking functions of CR eval_read_text_integer_1(B) 

#### Partial ranking functions of CR eval_read_text_integer_1(B) 


### Resulting Chains:eval_read_text_integer_1(B) 
* [25]
* [24]...


### Merging Chains  eval_read_text_integer_1/1 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_read_text_integer_start/1 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_read_text_integer_start/1 
* CE 31: eval_read_text_integer_start(B) = 0+ eval_read_text_integer_1(B):1
     [] 
* CE 32: eval_read_text_integer_start(B) = 0+ eval_read_text_integer_1(B):2
     [] 

### Cost equations --> "Loop" of eval_read_text_integer_start/1 
* CEs [32] --> Loop 26 
* CEs [31] --> Loop 27 

#### Loops of eval_read_text_integer_start/1 
* Loop 26: eval_read_text_integer_start(B) [] 
* Loop 27: eval_read_text_integer_start(B) [] 

### Ranking functions of CR eval_read_text_integer_start(B) 

#### Partial ranking functions of CR eval_read_text_integer_start(B) 


### Resulting Chains:eval_read_text_integer_start(B) 
* [27]
* [26]...


### Merging Chains  eval_read_text_integer_start/1 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_read_text_integer_bb1_in(B) -> [eval_read_text_integer_bb1_in(B')] 
1
#### Cost of phase [12]:eval_read_text_integer_bb1_in(B) -> [eval_read_text_integer_bb1_in(B')] 
1*it(12)+0
#### Cost of phase [12]:eval_read_text_integer_bb1_in(B) -> [eval_read_text_integer_bb1_in(B')] 
1*it(12)+0
#### Cost of phase [12]:eval_read_text_integer_bb1_in(B) -> [eval_read_text_integer_bb1_in(B')] 
1*it(12)+0
#### Cost of chains of eval_read_text_integer_bb1_in(B):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [] 

* Chain [[12],14]: 1*it(12)+0
  with precondition: [B=3] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=4] 

* Chain [14]: 0
  with precondition: [B=3] 

* Chain [13]: 0
  with precondition: [B=4] 


#### Cost of loops [16] 

 * loop 16:eval_read_text_integer_bb6_in(B) -> [eval_read_text_integer_bb6_in(B')] 
1
#### Cost of phase [16]:eval_read_text_integer_bb6_in(B) -> [eval_read_text_integer_bb6_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_read_text_integer_bb6_in(B) -> [eval_read_text_integer_bb6_in(B')] 
1*it(16)+0
#### Cost of chains of eval_read_text_integer_bb6_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_read_text_integer_20(B):
* Chain [18]: 1*s(4)+1
  with precondition: [] 

* Chain [17]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_read_text_integer_13(B):
* Chain [20]...: 1*s(6)+1
  with precondition: [] 

* Chain [19]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_read_text_integer_bb1_in(C,A):
* Chain [23]...: 1*s(8)+1
  with precondition: [C=4] 

* Chain [22]: 0
  with precondition: [C=3] 

* Chain [21]: 1*s(9)+0
  with precondition: [C=4] 


#### Cost of chains of eval_read_text_integer_1(B):
* Chain [25]: 1*aux(5)+0
  with precondition: [] 

* Chain [24]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_read_text_integer_start(B):
* Chain [27]: 1*s(16)+0
  with precondition: [] 

* Chain [26]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_read_text_integer_start(B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_read_text_integer_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 13 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 49 ms.

