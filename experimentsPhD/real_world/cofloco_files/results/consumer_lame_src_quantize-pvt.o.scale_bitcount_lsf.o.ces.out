Warning: Ignored call to eval_scale_bitcount_lsf_stop/1 in equation eval_scale_bitcount_lsf_110/1 
Warning: Ignored call to eval_scale_bitcount_lsf_stop/1 in equation eval_scale_bitcount_lsf_bb39_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_scale_bitcount_lsf_bb1_in/3]
1. recursive  : [eval_scale_bitcount_lsf_bb18_in/5,eval_scale_bitcount_lsf_bb21_in/5]
2. recursive  : [eval_scale_bitcount_lsf_bb16_in/2,loop_cont_eval_scale_bitcount_lsf_bb18_in/3]
3. recursive  : [eval_scale_bitcount_lsf_bb12_in/8,eval_scale_bitcount_lsf_bb9_in/8]
4. recursive  : [eval_scale_bitcount_lsf_bb7_in/5,loop_cont_eval_scale_bitcount_lsf_bb9_in/6]
5. recursive  : [eval_scale_bitcount_lsf_bb5_in/2,loop_cont_eval_scale_bitcount_lsf_bb7_in/3]
6. recursive  : [eval_scale_bitcount_lsf_bb24_in/3]
7. recursive  : [eval_scale_bitcount_lsf_bb28_in/2]
8. non_recursive  : [eval_scale_bitcount_lsf_bb39_in/1]
9. non_recursive  : [eval_scale_bitcount_lsf_110/1]
10. non_recursive  : [eval_scale_bitcount_lsf_109/1]
11. recursive  : [eval_scale_bitcount_lsf_bb36_in/2]
12. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb36_in/2]
13. non_recursive  : [eval_scale_bitcount_lsf_bb33_in/1]
14. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb28_in/2]
15. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb24_in/3]
16. non_recursive  : [eval_scale_bitcount_lsf_bb23_in/1]
17. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb16_in/2]
18. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb5_in/2]
19. non_recursive  : [loop_cont_eval_scale_bitcount_lsf_bb1_in/3]
20. non_recursive  : [eval_scale_bitcount_lsf_bb0_in/1]
21. non_recursive  : [eval_scale_bitcount_lsf_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_scale_bitcount_lsf_bb1_in/3
1. SCC is partially evaluated into eval_scale_bitcount_lsf_bb18_in/5
2. SCC is partially evaluated into eval_scale_bitcount_lsf_bb16_in/2
3. SCC is partially evaluated into eval_scale_bitcount_lsf_bb9_in/8
4. SCC is partially evaluated into eval_scale_bitcount_lsf_bb7_in/5
5. SCC is partially evaluated into eval_scale_bitcount_lsf_bb5_in/2
6. SCC is partially evaluated into eval_scale_bitcount_lsf_bb24_in/3
7. SCC is partially evaluated into eval_scale_bitcount_lsf_bb28_in/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_scale_bitcount_lsf_bb36_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_scale_bitcount_lsf_bb33_in/1
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_scale_bitcount_lsf_bb24_in/3
16. SCC is partially evaluated into eval_scale_bitcount_lsf_bb23_in/1
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into loop_cont_eval_scale_bitcount_lsf_bb1_in/3
20. SCC is partially evaluated into eval_scale_bitcount_lsf_bb0_in/1
21. SCC is partially evaluated into eval_scale_bitcount_lsf_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_scale_bitcount_lsf_bb1_in/3 
* CE 6 is refined into CE [32] 
* CE 5 is refined into CE [33] 
* CE 4 is refined into CE [34] 


#### Refined cost equations eval_scale_bitcount_lsf_bb1_in/3 
* CE 32: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) = 0
     [V_i_0>=4,C=0,B=4] 
* CE 33: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) = 0
     [V_i_0>=4,C=0,B=3] 
* CE 34: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) = 1+ eval_scale_bitcount_lsf_bb1_in(D,B,C)
     [V_i_0>=0,3>=V_i_0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb1_in/3 
* CEs [34] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [33] --> Loop 31 

#### Loops of eval_scale_bitcount_lsf_bb1_in/3 
* Loop 29: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C)->  eval_scale_bitcount_lsf_bb1_in(V_i_0',B,C)
                  [V_i_0>=0,3>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 30: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) [V_i_0>=4,C=0,B=4] 
* Loop 31: eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) [V_i_0>=4,C=0,B=3] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) 
* RF of phase [29]: [-V_i_0+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -V_i_0+4


### Resulting Chains:eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) 
* [[29],31]
* [[29],30]


### Merging Chains  eval_scale_bitcount_lsf_bb1_in/3 into  External patterns of execution 
* [[31,[29]]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb18_in/5 
* CE 23 is refined into CE [35] 
* CE 22 is refined into CE [36] 


#### Refined cost equations eval_scale_bitcount_lsf_bb18_in/5 
* CE 35: eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) = 0
     [V_i_2>=V_54,V_i_2>=0,3>=V_partition_1,V_partition_1+1=C,B=4] 
* CE 36: eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) = 1+ eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,D,E,C)
     [V_54>=V_i_2+1,V_i_2>=0,3>=V_partition_1,V_i_2+1=D,E=4,B=4] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb18_in/5 
* CEs [36] --> Loop 32 
* CEs [35] --> Loop 33 

#### Loops of eval_scale_bitcount_lsf_bb18_in/5 
* Loop 32: eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C)->  eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2',B',C)
                  [V_54>=V_i_2+1,V_i_2>=0,3>=V_partition_1,V_i_2+1=V_i_2',B'=4,B=4] 
* Loop 33: eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) [V_i_2>=V_54,V_i_2>=0,3>=V_partition_1,V_partition_1+1=C,B=4] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) 
* RF of phase [32]: [V_54-V_i_2]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_54-V_i_2


### Resulting Chains:eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) 
* [[32],33]
* [33]


### Merging Chains  eval_scale_bitcount_lsf_bb18_in/5 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb16_in/2 
* CE 14 is refined into CE [37] 
* CE 13 is refined into CE [38,39] 


#### Refined cost equations eval_scale_bitcount_lsf_bb16_in/2 
* CE 37: eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) = 0
     [V_partition_1>=4,B=5] 
* CE 38: eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) = 2+ eval_scale_bitcount_lsf_bb18_in(C,D,E,F,G):1+ eval_scale_bitcount_lsf_bb16_in(G,H)
     [4>=G,0>=D,G=C+1,G=V_partition_1+1,H=5,F=4,E=0,B=5] 
* CE 39: eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) = 2+ eval_scale_bitcount_lsf_bb18_in(C,D,E,F,G):2+ eval_scale_bitcount_lsf_bb16_in(G,H)
     [D>=1,4>=G,G=C+1,G=V_partition_1+1,H=5,F=4,E=0,B=5] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb16_in/2 
* CEs [38,39] --> Loop 34 
* CEs [37] --> Loop 35 

#### Loops of eval_scale_bitcount_lsf_bb16_in/2 
* Loop 34: eval_scale_bitcount_lsf_bb16_in(V_partition_1,B)->  eval_scale_bitcount_lsf_bb16_in(V_partition_1',B')
                  [3>=V_partition_1,V_partition_1+1=V_partition_1',B'=5,B=5] 
* Loop 35: eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) [V_partition_1>=4,B=5] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) 
* RF of phase [34]: [-V_partition_1+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    -V_partition_1+4


### Resulting Chains:eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) 
* [[34],35]
* [35]


### Merging Chains  eval_scale_bitcount_lsf_bb16_in/2 into  External patterns of execution 
* [[35,[34]]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb9_in/8 
* CE 25 is refined into CE [40] 
* CE 24 is refined into CE [41] 


#### Refined cost equations eval_scale_bitcount_lsf_bb9_in/8 
* CE 40: eval_scale_bitcount_lsf_bb9_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+1,D>=3,C+1=F,E=2] 
* CE 41: eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) = 1+ eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,F,G,C,D,E)
     [V_21>=V_i_1+1,V_window_0>=0,2>=V_window_0,V_window_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb9_in/8 
* CEs [41] --> Loop 36 
* CEs [40] --> Loop 37 

#### Loops of eval_scale_bitcount_lsf_bb9_in/8 
* Loop 36: eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E)->  eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0',B',C,D,E)
                  [V_21>=V_i_1+1,V_window_0>=0,2>=V_window_0,V_window_0+1=V_window_0',B'=2,B=2] 
* Loop 37: eval_scale_bitcount_lsf_bb9_in(A,B,C,D,E,A,B,F) [B>=C+1,D>=3,C+1=F,E=2] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) 
* RF of phase [36]: [-V_window_0+3]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    -V_window_0+3


### Resulting Chains:eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) 
* [[36],37]


### Merging Chains  eval_scale_bitcount_lsf_bb9_in/8 into  External patterns of execution 
* [[37,[36]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_lsf_bb7_in/5 
* CE 16 is refined into CE [42] 
* CE 15 is refined into CE [43] 


#### Refined cost equations eval_scale_bitcount_lsf_bb7_in/5 
* CE 42: eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) = 0
     [V_i_1>=V_21,C=V_partition_0+1,B=3] 
* CE 43: eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) = 2+ eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,D,E,F,V_partition_0,V_21,G):1+ eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,G,H,C)
     [V_21>=G,G=D+1,G=V_i_1+1,H=3,F=2,E=0,B=3] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb7_in/5 
* CEs [43] --> Loop 38 
* CEs [42] --> Loop 39 

#### Loops of eval_scale_bitcount_lsf_bb7_in/5 
* Loop 38: eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C)->  eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1',B',C)
                  [V_21>=V_i_1',V_i_1'=V_i_1+1,B'=3,B=3] 
* Loop 39: eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) [V_i_1>=V_21,V_partition_0+1=C,B=3] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) 
* RF of phase [38]: [V_21-V_i_1]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V_21-V_i_1


### Resulting Chains:eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) 
* [[38],39]
* [39]


### Merging Chains  eval_scale_bitcount_lsf_bb7_in/5 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[38]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb5_in/2 
* CE 11 is refined into CE [44] 
* CE 9 is refined into CE [45] 
* CE 10 is refined into CE [46,47] 


#### Refined cost equations eval_scale_bitcount_lsf_bb5_in/2 
* CE 44: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) = 0
     [V_partition_0>=4,B=5] 
* CE 45: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) = 2+ eval_scale_bitcount_lsf_bb7_in(C,D,E,F,G):1+ eval_scale_bitcount_lsf_bb5_in(G,H)
     [4>=G,0>=D,G=C+1,G=V_partition_0+1,H=5,F=3,E=0,B=5] 
* CE 46: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) = 2+ eval_scale_bitcount_lsf_bb7_in(C,D,E,F,G):1+ eval_scale_bitcount_lsf_bb5_in(G,H)
     [4>=G,G=C+1,G=V_partition_0+1,H=5,F=3,E=0,D=0,B=5] 
* CE 47: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) = 2+ eval_scale_bitcount_lsf_bb7_in(C,D,E,F,G):2+ eval_scale_bitcount_lsf_bb5_in(G,H)
     [D>=1,4>=G,G=C+1,G=V_partition_0+1,H=5,F=3,E=0,B=5] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb5_in/2 
* CEs [45,46,47] --> Loop 40 
* CEs [44] --> Loop 41 

#### Loops of eval_scale_bitcount_lsf_bb5_in/2 
* Loop 40: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B)->  eval_scale_bitcount_lsf_bb5_in(V_partition_0',B')
                  [3>=V_partition_0,V_partition_0+1=V_partition_0',B'=5,B=5] 
* Loop 41: eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) [V_partition_0>=4,B=5] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) 
* RF of phase [40]: [-V_partition_0+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    -V_partition_0+4


### Resulting Chains:eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) 
* [[40],41]
* [41]


### Merging Chains  eval_scale_bitcount_lsf_bb5_in/2 into  External patterns of execution 
* [[41,[40]]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb24_in/3 
* CE 18 is refined into CE [48] 
* CE 19 is refined into CE [49] 
* CE 17 is refined into CE [50] 


#### Refined cost equations eval_scale_bitcount_lsf_bb24_in/3 
* CE 48: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) = 0
     [V_partition_2>=4,C=0,B=8] 
* CE 49: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) = 0
     [V_partition_2>=4,B=6] 
* CE 50: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) = 1+ eval_scale_bitcount_lsf_bb24_in(D,B,C)
     [V_partition_2>=0,3>=V_partition_2,V_partition_2+1=D] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb24_in/3 
* CEs [50] --> Loop 42 
* CEs [48] --> Loop 43 
* CEs [49] --> Loop 44 

#### Loops of eval_scale_bitcount_lsf_bb24_in/3 
* Loop 42: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C)->  eval_scale_bitcount_lsf_bb24_in(V_partition_2',B,C)
                  [V_partition_2>=0,3>=V_partition_2,V_partition_2+1=V_partition_2'] 
* Loop 43: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) [V_partition_2>=4,C=0,B=8] 
* Loop 44: eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) [V_partition_2>=4,B=6] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) 
* RF of phase [42]: [-V_partition_2+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    -V_partition_2+4


### Resulting Chains:eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) 
* [[42],44]
* [[42],43]


### Merging Chains  eval_scale_bitcount_lsf_bb24_in/3 into  External patterns of execution 
* [[44,[42]]] --> 1 
* [[43,[42]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb28_in/2 
* CE 27 is refined into CE [51] 
* CE 26 is refined into CE [52] 


#### Refined cost equations eval_scale_bitcount_lsf_bb28_in/2 
* CE 51: eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) = 0
     [V_partition_3>=4,B=7] 
* CE 52: eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) = 1+ eval_scale_bitcount_lsf_bb28_in(C,D)
     [3>=V_partition_3,V_partition_3+1=C,D=7,B=7] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb28_in/2 
* CEs [52] --> Loop 45 
* CEs [51] --> Loop 46 

#### Loops of eval_scale_bitcount_lsf_bb28_in/2 
* Loop 45: eval_scale_bitcount_lsf_bb28_in(V_partition_3,B)->  eval_scale_bitcount_lsf_bb28_in(V_partition_3',B')
                  [3>=V_partition_3,V_partition_3+1=V_partition_3',B'=7,B=7] 
* Loop 46: eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) [V_partition_3>=4,B=7] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) 
* RF of phase [45]: [-V_partition_3+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) 
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    -V_partition_3+4


### Resulting Chains:eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) 
* [[45],46]
* [46]


### Merging Chains  eval_scale_bitcount_lsf_bb28_in/2 into  External patterns of execution 
* [[46,[45]]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_scale_bitcount_lsf_bb36_in/2 
* CE 31 is refined into CE [53] 
* CE 30 is refined into CE [54] 


#### Refined cost equations eval_scale_bitcount_lsf_bb36_in/2 
* CE 53: eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) = 0
     [V_partition_4>=4,B=6] 
* CE 54: eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) = 1+ eval_scale_bitcount_lsf_bb36_in(C,D)
     [V_partition_4>=0,3>=V_partition_4,V_partition_4+1=C,D=6,B=6] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb36_in/2 
* CEs [54] --> Loop 47 
* CEs [53] --> Loop 48 

#### Loops of eval_scale_bitcount_lsf_bb36_in/2 
* Loop 47: eval_scale_bitcount_lsf_bb36_in(V_partition_4,B)->  eval_scale_bitcount_lsf_bb36_in(V_partition_4',B')
                  [V_partition_4>=0,3>=V_partition_4,V_partition_4+1=V_partition_4',B'=6,B=6] 
* Loop 48: eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) [V_partition_4>=4,B=6] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) 
* RF of phase [47]: [-V_partition_4+4]

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) 
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    -V_partition_4+4


### Resulting Chains:eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) 
* [[47],48]


### Merging Chains  eval_scale_bitcount_lsf_bb36_in/2 into  External patterns of execution 
* [[48,[47]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_lsf_bb33_in/1 
* CE 28 is refined into CE [55] 
* CE 29 is refined into CE [56] 


#### Refined cost equations eval_scale_bitcount_lsf_bb33_in/1 
* CE 55: eval_scale_bitcount_lsf_bb33_in(B) = 0
     [] 
* CE 56: eval_scale_bitcount_lsf_bb33_in(B) = 1+ eval_scale_bitcount_lsf_bb36_in(C,D):1
     [D=6,C=0] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb33_in/1 
* CEs [55,56] --> Loop 49 

#### Loops of eval_scale_bitcount_lsf_bb33_in/1 
* Loop 49: eval_scale_bitcount_lsf_bb33_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb33_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb33_in(B) 


### Resulting Chains:eval_scale_bitcount_lsf_bb33_in(B) 
* [49]


### Merging Chains  eval_scale_bitcount_lsf_bb33_in/1 into  External patterns of execution 
* [[49]] --> 1 


### Specialization of cost equations loop_cont_eval_scale_bitcount_lsf_bb24_in/3 
* CE 20 is refined into CE [57,58] 
* CE 21 is refined into CE [59] 


#### Refined cost equations loop_cont_eval_scale_bitcount_lsf_bb24_in/3 
* CE 57: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb28_in(A,F):1+ eval_scale_bitcount_lsf_bb33_in(B):1
     [3>=A,F=7,E=8] 
* CE 58: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb28_in(A,F):2+ eval_scale_bitcount_lsf_bb33_in(B):1
     [A>=4,F=7,E=8] 
* CE 59: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) = 0
     [E=6] 

### Cost equations --> "Loop" of loop_cont_eval_scale_bitcount_lsf_bb24_in/3 
* CEs [58] --> Loop 50 
* CEs [57] --> Loop 51 
* CEs [59] --> Loop 52 

#### Loops of loop_cont_eval_scale_bitcount_lsf_bb24_in/3 
* Loop 50: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) [A>=4,E=8] 
* Loop 51: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) [3>=A,E=8] 
* Loop 52: loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) [E=6] 

### Ranking functions of CR loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) 


### Resulting Chains:loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B) 
* [52]
* [51]
* [50]


### Merging Chains  loop_cont_eval_scale_bitcount_lsf_bb24_in/3 into  External patterns of execution 
* [[52]] --> 1 
* [[51]] --> 2 
* [[50]] --> 3 


### Specialization of cost equations eval_scale_bitcount_lsf_bb23_in/1 
* CE 12 is refined into CE [60,61] 


#### Refined cost equations eval_scale_bitcount_lsf_bb23_in/1 
* CE 60: eval_scale_bitcount_lsf_bb23_in(B) = 1+ eval_scale_bitcount_lsf_bb24_in(C,D,E):1+ loop_cont_eval_scale_bitcount_lsf_bb24_in(F,E,B):1
     [F=6,D=6,C=0] 
* CE 61: eval_scale_bitcount_lsf_bb23_in(B) = 1+ eval_scale_bitcount_lsf_bb24_in(C,D,E):2+ loop_cont_eval_scale_bitcount_lsf_bb24_in(F,G,B):2
     [G=0,F=8,E=0,D=8,C=0] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb23_in/1 
* CEs [60,61] --> Loop 53 

#### Loops of eval_scale_bitcount_lsf_bb23_in/1 
* Loop 53: eval_scale_bitcount_lsf_bb23_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb23_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb23_in(B) 


### Resulting Chains:eval_scale_bitcount_lsf_bb23_in(B) 
* [53]


### Merging Chains  eval_scale_bitcount_lsf_bb23_in/1 into  External patterns of execution 
* [[53]] --> 1 


### Specialization of cost equations loop_cont_eval_scale_bitcount_lsf_bb1_in/3 
* CE 8 is refined into CE [62,63] 
* CE 7 is refined into CE [64,65] 


#### Refined cost equations loop_cont_eval_scale_bitcount_lsf_bb1_in/3 
* CE 62: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb16_in(A,F):1+ eval_scale_bitcount_lsf_bb23_in(B):1
     [3>=A,F=5,E=4] 
* CE 63: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb16_in(A,F):2+ eval_scale_bitcount_lsf_bb23_in(B):1
     [A>=4,F=5,E=4] 
* CE 64: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb5_in(A,F):1+ eval_scale_bitcount_lsf_bb23_in(B):1
     [3>=A,F=5,E=3] 
* CE 65: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) = 1+ eval_scale_bitcount_lsf_bb5_in(A,F):2+ eval_scale_bitcount_lsf_bb23_in(B):1
     [A>=4,F=5,E=3] 

### Cost equations --> "Loop" of loop_cont_eval_scale_bitcount_lsf_bb1_in/3 
* CEs [63] --> Loop 54 
* CEs [62] --> Loop 55 
* CEs [65] --> Loop 56 
* CEs [64] --> Loop 57 

#### Loops of loop_cont_eval_scale_bitcount_lsf_bb1_in/3 
* Loop 54: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) [A>=4,E=4] 
* Loop 55: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) [3>=A,E=4] 
* Loop 56: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) [A>=4,E=3] 
* Loop 57: loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) [3>=A,E=3] 

### Ranking functions of CR loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B) 
* [57]
* [56]
* [55]
* [54]


### Merging Chains  loop_cont_eval_scale_bitcount_lsf_bb1_in/3 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 
* [[55]] --> 3 
* [[54]] --> 4 


### Specialization of cost equations eval_scale_bitcount_lsf_bb0_in/1 
* CE 3 is refined into CE [66,67] 


#### Refined cost equations eval_scale_bitcount_lsf_bb0_in/1 
* CE 66: eval_scale_bitcount_lsf_bb0_in(B) = 1+ eval_scale_bitcount_lsf_bb1_in(C,D,E):1+ loop_cont_eval_scale_bitcount_lsf_bb1_in(F,G,B):1
     [G=0,F=3,E=0,D=3,C=0] 
* CE 67: eval_scale_bitcount_lsf_bb0_in(B) = 1+ eval_scale_bitcount_lsf_bb1_in(C,D,E):2+ loop_cont_eval_scale_bitcount_lsf_bb1_in(F,G,B):3
     [G=0,F=4,E=0,D=4,C=0] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_bb0_in/1 
* CEs [66,67] --> Loop 58 

#### Loops of eval_scale_bitcount_lsf_bb0_in/1 
* Loop 58: eval_scale_bitcount_lsf_bb0_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_lsf_bb0_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_lsf_bb0_in(B) 


### Resulting Chains:eval_scale_bitcount_lsf_bb0_in(B) 
* [58]


### Merging Chains  eval_scale_bitcount_lsf_bb0_in/1 into  External patterns of execution 
* [[58]] --> 1 


### Specialization of cost equations eval_scale_bitcount_lsf_start/1 
* CE 2 is refined into CE [68] 


#### Refined cost equations eval_scale_bitcount_lsf_start/1 
* CE 68: eval_scale_bitcount_lsf_start(B) = 0+ eval_scale_bitcount_lsf_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_scale_bitcount_lsf_start/1 
* CEs [68] --> Loop 59 

#### Loops of eval_scale_bitcount_lsf_start/1 
* Loop 59: eval_scale_bitcount_lsf_start(B) [] 

### Ranking functions of CR eval_scale_bitcount_lsf_start(B) 

#### Partial ranking functions of CR eval_scale_bitcount_lsf_start(B) 


### Resulting Chains:eval_scale_bitcount_lsf_start(B) 
* [59]


### Merging Chains  eval_scale_bitcount_lsf_start/1 into  External patterns of execution 
* [[59]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [29] 

 * loop 29:eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) -> [eval_scale_bitcount_lsf_bb1_in(V_i_0',B',C')] 
1
#### Cost of phase [29]:eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) -> [eval_scale_bitcount_lsf_bb1_in(V_i_0',B',C')] 
1*it(29)+0
  Such that:it(29) =< -V_i_0+4
it(29) =< -V_i_0+V_i_0'

#### Cost of phase [29]:eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C) -> [eval_scale_bitcount_lsf_bb1_in(V_i_0',B',C')] 
1*it(29)+0
  Such that:it(29) =< -V_i_0+4
it(29) =< -V_i_0+V_i_0'

#### Cost of chains of eval_scale_bitcount_lsf_bb1_in(V_i_0,B,C):
* Chain [[29],31]: 1*it(29)+0
  Such that:it(29) =< -V_i_0+4

  with precondition: [B=3,C=0,3>=V_i_0,V_i_0>=0] 

* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -V_i_0+4

  with precondition: [B=4,C=0,3>=V_i_0,V_i_0>=0] 


#### Cost of loops [32] 

 * loop 32:eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) -> [eval_scale_bitcount_lsf_bb18_in(V_partition_1',V_54',V_i_2',B',C')] 
1
#### Cost of phase [32]:eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C) -> [eval_scale_bitcount_lsf_bb18_in(V_partition_1',V_54',V_i_2',B',C')] 
1*it(32)+0
  Such that:it(32) =< V_54-V_i_2
it(32) =< V_54-V_i_2-V_54'+V_i_2'

#### Cost of chains of eval_scale_bitcount_lsf_bb18_in(V_partition_1,V_54,V_i_2,B,C):
* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< V_54-V_i_2

  with precondition: [B=4,V_partition_1+1=C,3>=V_partition_1,V_i_2>=0,V_54>=V_i_2+1] 

* Chain [33]: 0
  with precondition: [B=4,V_partition_1+1=C,3>=V_partition_1,V_i_2>=0,V_i_2>=V_54] 


#### Cost of loops [34] 

 * loop 34:eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) -> [eval_scale_bitcount_lsf_bb16_in(V_partition_1',B')] 
1*s(2)+0
#### Cost of phase [34]:eval_scale_bitcount_lsf_bb16_in(V_partition_1,B) -> [eval_scale_bitcount_lsf_bb16_in(V_partition_1',B')] 
1*s(3)+0
#### Cost of chains of eval_scale_bitcount_lsf_bb16_in(V_partition_1,B):
* Chain [[34],35]: 1*s(3)+0
  with precondition: [B=5,3>=V_partition_1] 

* Chain [35]: 0
  with precondition: [B=5,V_partition_1>=4] 


#### Cost of loops [36] 

 * loop 36:eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) -> [eval_scale_bitcount_lsf_bb9_in(V_partition_0',V_21',V_i_1',V_window_0',B',C',D',E')] 
1
#### Cost of phase [36]:eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E) -> [eval_scale_bitcount_lsf_bb9_in(V_partition_0',V_21',V_i_1',V_window_0',B',C',D',E')] 
1*it(36)+0
  Such that:it(36) =< -V_window_0+3
it(36) =< -V_window_0+V_window_0'

#### Cost of chains of eval_scale_bitcount_lsf_bb9_in(V_partition_0,V_21,V_i_1,V_window_0,B,C,D,E):
* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< -V_window_0+3

  with precondition: [B=2,V_partition_0=C,V_21=D,V_i_1+1=E,2>=V_window_0,V_window_0>=0,V_21>=V_i_1+1] 


#### Cost of loops [38] 

 * loop 38:eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) -> [eval_scale_bitcount_lsf_bb7_in(V_partition_0',V_21',V_i_1',B',C')] 
1*s(5)+2
  Such that:s(5) =< 3

#### Cost of phase [38]:eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C) -> [eval_scale_bitcount_lsf_bb7_in(V_partition_0',V_21',V_i_1',B',C')] 
2*it(38)+1*s(6)+0
  Such that:aux(3) =< V_21-V_i_1
aux(4) =< V_21-V_i_1-V_21'+V_i_1'
aux(2) =< aux(3)
it(38) =< aux(3)
aux(2) =< aux(4)
it(38) =< aux(4)
s(6) =< aux(2)*3

#### Cost of chains of eval_scale_bitcount_lsf_bb7_in(V_partition_0,V_21,V_i_1,B,C):
* Chain [[38],39]: 2*it(38)+1*s(6)+0
  Such that:aux(5) =< V_21-V_i_1
it(38) =< aux(5)
s(6) =< aux(5)*3

  with precondition: [B=3,V_partition_0+1=C,3>=V_partition_0,V_i_1>=0,V_21>=V_i_1+1] 

* Chain [39]: 0
  with precondition: [B=3,V_partition_0+1=C,3>=V_partition_0,V_i_1>=0,V_i_1>=V_21] 


#### Cost of loops [40] 

 * loop 40:eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) -> [eval_scale_bitcount_lsf_bb5_in(V_partition_0',B')] 
1*s(10)+0
#### Cost of phase [40]:eval_scale_bitcount_lsf_bb5_in(V_partition_0,B) -> [eval_scale_bitcount_lsf_bb5_in(V_partition_0',B')] 
1*s(11)+0
#### Cost of chains of eval_scale_bitcount_lsf_bb5_in(V_partition_0,B):
* Chain [[40],41]: 1*s(11)+0
  with precondition: [B=5,3>=V_partition_0] 

* Chain [41]: 0
  with precondition: [B=5,V_partition_0>=4] 


#### Cost of loops [42] 

 * loop 42:eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) -> [eval_scale_bitcount_lsf_bb24_in(V_partition_2',B',C')] 
1
#### Cost of phase [42]:eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) -> [eval_scale_bitcount_lsf_bb24_in(V_partition_2',B',C')] 
1*it(42)+0
  Such that:it(42) =< -V_partition_2+4
it(42) =< -V_partition_2+V_partition_2'

#### Cost of phase [42]:eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C) -> [eval_scale_bitcount_lsf_bb24_in(V_partition_2',B',C')] 
1*it(42)+0
  Such that:it(42) =< -V_partition_2+4
it(42) =< -V_partition_2+V_partition_2'

#### Cost of chains of eval_scale_bitcount_lsf_bb24_in(V_partition_2,B,C):
* Chain [[42],44]: 1*it(42)+0
  Such that:it(42) =< -V_partition_2+4

  with precondition: [B=6,3>=V_partition_2,V_partition_2>=0] 

* Chain [[42],43]: 1*it(42)+0
  Such that:it(42) =< -V_partition_2+4

  with precondition: [B=8,C=0,3>=V_partition_2,V_partition_2>=0] 


#### Cost of loops [45] 

 * loop 45:eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) -> [eval_scale_bitcount_lsf_bb28_in(V_partition_3',B')] 
1
#### Cost of phase [45]:eval_scale_bitcount_lsf_bb28_in(V_partition_3,B) -> [eval_scale_bitcount_lsf_bb28_in(V_partition_3',B')] 
1*it(45)+0
  Such that:it(45) =< -V_partition_3+4
it(45) =< -V_partition_3+V_partition_3'

#### Cost of chains of eval_scale_bitcount_lsf_bb28_in(V_partition_3,B):
* Chain [[45],46]: 1*it(45)+0
  Such that:it(45) =< -V_partition_3+4

  with precondition: [B=7,3>=V_partition_3] 

* Chain [46]: 0
  with precondition: [B=7,V_partition_3>=4] 


#### Cost of loops [47] 

 * loop 47:eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) -> [eval_scale_bitcount_lsf_bb36_in(V_partition_4',B')] 
1
#### Cost of phase [47]:eval_scale_bitcount_lsf_bb36_in(V_partition_4,B) -> [eval_scale_bitcount_lsf_bb36_in(V_partition_4',B')] 
1*it(47)+0
  Such that:it(47) =< -V_partition_4+4
it(47) =< -V_partition_4+V_partition_4'

#### Cost of chains of eval_scale_bitcount_lsf_bb36_in(V_partition_4,B):
* Chain [[47],48]: 1*it(47)+0
  Such that:it(47) =< -V_partition_4+4

  with precondition: [B=6,3>=V_partition_4,V_partition_4>=0] 


#### Cost of chains of eval_scale_bitcount_lsf_bb33_in(B):
* Chain [49]: 5
  with precondition: [] 


#### Cost of chains of loop_cont_eval_scale_bitcount_lsf_bb24_in(E,A,B):
* Chain [52]: 0
  with precondition: [E=6] 

* Chain [51]: 1*s(13)+6
  Such that:s(13) =< -A+4

  with precondition: [E=8,3>=A] 

* Chain [50]: 6
  with precondition: [E=8,A>=4] 


#### Cost of chains of eval_scale_bitcount_lsf_bb23_in(B):
* Chain [53]: 19
  with precondition: [] 


#### Cost of chains of loop_cont_eval_scale_bitcount_lsf_bb1_in(E,A,B):
* Chain [57]: 1*s(17)+20
  with precondition: [E=3,3>=A] 

* Chain [56]: 20
  with precondition: [E=3,A>=4] 

* Chain [55]: 1*s(18)+20
  with precondition: [E=4,3>=A] 

* Chain [54]: 20
  with precondition: [E=4,A>=4] 


#### Cost of chains of eval_scale_bitcount_lsf_bb0_in(B):
* Chain [58]: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_scale_bitcount_lsf_start(B):
* Chain [59]: 1*s(23)+0
  with precondition: [] 


Closed-form bounds of eval_scale_bitcount_lsf_start(B): 
-------------------------------------
* Chain [59] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_scale_bitcount_lsf_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 55 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 85 ms.
* Termination proved in 15 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 24 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 298 ms.

