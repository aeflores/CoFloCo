Warning: Ignored call to eval_calc_noise1_stop/1 in equation eval_calc_noise1_126/1 
Warning: Ignored call to eval_calc_noise1_stop/1 in equation eval_calc_noise1_128/1 
Warning: Ignored call to eval_calc_noise1_stop/1 in equation eval_calc_noise1_57/1 
Warning: Ignored call to eval_calc_noise1_stop/1 in equation eval_calc_noise1_59/1 
Warning: Ignored call to eval_calc_noise1_stop/1 in equation eval_calc_noise1_bb41_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_calc_noise1_29/7,eval_calc_noise1_30/7,eval_calc_noise1_bb7_in/7]
1. recursive  : [eval_calc_noise1_43/5,eval_calc_noise1_44/5,eval_calc_noise1_bb11_in/5,eval_calc_noise1_bb13_in/5,eval_calc_noise1_bb15_in/5,eval_calc_noise1_bb1_in/3,eval_calc_noise1_bb4_in/3,loop_cont_eval_calc_noise1_bb7_in/6]
2. non_recursive  : [eval_calc_noise1_57/1]
3. non_recursive  : [eval_calc_noise1_56/1]
4. non_recursive  : [eval_calc_noise1_59/1]
5. non_recursive  : [eval_calc_noise1_58/1]
6. recursive  : [eval_calc_noise1_86/9,eval_calc_noise1_87/9,eval_calc_noise1_bb25_in/9]
7. recursive  : [eval_calc_noise1_110/6,eval_calc_noise1_111/6,eval_calc_noise1_bb21_in/4,eval_calc_noise1_bb29_in/6,eval_calc_noise1_bb31_in/6,eval_calc_noise1_bb33_in/6,loop_cont_eval_calc_noise1_bb25_in/7]
8. recursive  : [eval_calc_noise1_bb19_in/2,loop_cont_eval_calc_noise1_bb21_in/3]
9. non_recursive  : [eval_calc_noise1_126/1]
10. non_recursive  : [eval_calc_noise1_125/1]
11. non_recursive  : [eval_calc_noise1_128/1]
12. non_recursive  : [eval_calc_noise1_127/1]
13. non_recursive  : [eval_calc_noise1_bb41_in/1]
14. non_recursive  : [eval_calc_noise1_bb39_in/1]
15. non_recursive  : [loop_cont_eval_calc_noise1_bb19_in/2]
16. non_recursive  : [loop_cont_eval_calc_noise1_bb1_in/3]
17. non_recursive  : [eval_calc_noise1_bb0_in/1]
18. non_recursive  : [eval_calc_noise1_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_calc_noise1_bb7_in/7
1. SCC is partially evaluated into eval_calc_noise1_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_calc_noise1_bb25_in/9
7. SCC is partially evaluated into eval_calc_noise1_bb21_in/4
8. SCC is partially evaluated into eval_calc_noise1_bb19_in/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_calc_noise1_bb19_in/2
16. SCC is partially evaluated into loop_cont_eval_calc_noise1_bb1_in/3
17. SCC is partially evaluated into eval_calc_noise1_bb0_in/1
18. SCC is partially evaluated into eval_calc_noise1_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_calc_noise1_bb7_in/7 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 


#### Refined cost equations eval_calc_noise1_bb7_in/7 
* CE 26: eval_calc_noise1_bb7_in(A,B,C,D,A,B,C) = 0
     [C>=B,D=2] 
* CE 27: eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) = 1+ eval_calc_noise1_bb7_in(V_sfb_0,V_34,F,G,C,D,E)
     [V_34>=V_l_0+1,V_l_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_calc_noise1_bb7_in/7 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of eval_calc_noise1_bb7_in/7 
* Loop 25: eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E)->  eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0',B',C,D,E)
                  [V_34>=V_l_0+1,V_l_0+1=V_l_0',B'=2,B=2] 
* Loop 26: eval_calc_noise1_bb7_in(A,B,C,D,A,B,C) [C>=B,D=2] 

### Ranking functions of CR eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) 
* RF of phase [25]: [V_34-V_l_0]

#### Partial ranking functions of CR eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V_34-V_l_0


### Resulting Chains:eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) 
* [[25],26]
* [26]


### Merging Chains  eval_calc_noise1_bb7_in/7 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 


### Specialization of cost equations eval_calc_noise1_bb1_in/3 
* CE 4 is refined into CE [28] 
* CE 5 is refined into CE [29] 
* CE 7 is refined into CE [30] 
* CE 6 is refined into CE [31,32] 


#### Refined cost equations eval_calc_noise1_bb1_in/3 
* CE 28: eval_calc_noise1_bb1_in(V_sfb_0,B,C) = 0
     [B=8] 
* CE 29: eval_calc_noise1_bb1_in(V_sfb_0,B,C) = 0
     [B=7] 
* CE 30: eval_calc_noise1_bb1_in(V_sfb_0,B,C) = 0
     [C=0,B=6] 
* CE 31: eval_calc_noise1_bb1_in(V_sfb_0,B,C) = 2+ eval_calc_noise1_bb7_in(V_sfb_0,D,E,F,V_sfb_0,D,E):1+ eval_calc_noise1_bb1_in(G,B,C)
     [E>=D,V_sfb_0+1=G,F=2] 
* CE 32: eval_calc_noise1_bb1_in(V_sfb_0,B,C) = 2+ eval_calc_noise1_bb7_in(V_sfb_0,D,E,F,V_sfb_0,D,D):2+ eval_calc_noise1_bb1_in(G,B,C)
     [D>=E+1,V_sfb_0+1=G,F=2] 

### Cost equations --> "Loop" of eval_calc_noise1_bb1_in/3 
* CEs [31,32] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [30] --> Loop 30 

#### Loops of eval_calc_noise1_bb1_in/3 
* Loop 27: eval_calc_noise1_bb1_in(V_sfb_0,B,C)->  eval_calc_noise1_bb1_in(V_sfb_0',B,C)
                  [V_sfb_0+1=V_sfb_0'] 
* Loop 28: eval_calc_noise1_bb1_in(V_sfb_0,B,C) [B=8] 
* Loop 29: eval_calc_noise1_bb1_in(V_sfb_0,B,C) [B=7] 
* Loop 30: eval_calc_noise1_bb1_in(V_sfb_0,B,C) [C=0,B=6] 

### Ranking functions of CR eval_calc_noise1_bb1_in(V_sfb_0,B,C) 

#### Partial ranking functions of CR eval_calc_noise1_bb1_in(V_sfb_0,B,C) 


### Resulting Chains:eval_calc_noise1_bb1_in(V_sfb_0,B,C) 
* [[27]]...
* [[27],30]
* [[27],29]
* [[27],28]
* [30]
* [29]
* [28]


### Merging Chains  eval_calc_noise1_bb1_in/3 into  External patterns of execution 
* [[30],[30,[27]]] --> 1 
* [[29],[29,[27]]] --> 2 
* [[28],[28,[27]]] --> 3 
* [[[27]]] --> 4 


### Specialization of cost equations eval_calc_noise1_bb25_in/9 
* CE 25 is refined into CE [33] 
* CE 24 is refined into CE [34] 


#### Refined cost equations eval_calc_noise1_bb25_in/9 
* CE 33: eval_calc_noise1_bb25_in(A,B,C,D,E,A,B,C,D) = 0
     [D>=C,11>=B,E=3] 
* CE 34: eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) = 1+ eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,G,H,C,D,E,F)
     [V_136>=V_l_1+1,11>=V_sfb_1,V_l_1+1=G,H=3,B=3] 

### Cost equations --> "Loop" of eval_calc_noise1_bb25_in/9 
* CEs [34] --> Loop 31 
* CEs [33] --> Loop 32 

#### Loops of eval_calc_noise1_bb25_in/9 
* Loop 31: eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F)->  eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1',B',C,D,E,F)
                  [V_136>=V_l_1+1,11>=V_sfb_1,V_l_1+1=V_l_1',B'=3,B=3] 
* Loop 32: eval_calc_noise1_bb25_in(A,B,C,D,E,A,B,C,D) [D>=C,11>=B,E=3] 

### Ranking functions of CR eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) 
* RF of phase [31]: [V_136-V_l_1]

#### Partial ranking functions of CR eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V_136-V_l_1


### Resulting Chains:eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) 
* [[31],32]
* [32]


### Merging Chains  eval_calc_noise1_bb25_in/9 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[31]]] --> 2 


### Specialization of cost equations eval_calc_noise1_bb21_in/4 
* CE 23 is refined into CE [35] 
* CE 22 is refined into CE [36] 
* CE 21 is refined into CE [37] 
* CE 20 is refined into CE [38,39] 


#### Refined cost equations eval_calc_noise1_bb21_in/4 
* CE 35: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) = 0
     [V_sfb_1>=12,C=V_i_0+1,B=6] 
* CE 36: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) = 0
     [11>=V_sfb_1,B=5] 
* CE 37: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) = 0
     [11>=V_sfb_1,B=4] 
* CE 38: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) = 2+ eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,D,E,F,V_i_0,V_sfb_1,D,E):1+ eval_calc_noise1_bb21_in(V_i_0,G,B,C)
     [E>=D,B>=4,11>=V_sfb_1,6>=B,V_sfb_1+1=G,F=3] 
* CE 39: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) = 2+ eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,D,E,F,V_i_0,V_sfb_1,D,D):2+ eval_calc_noise1_bb21_in(V_i_0,G,B,C)
     [D>=E+1,B>=4,11>=V_sfb_1,6>=B,V_sfb_1+1=G,F=3] 

### Cost equations --> "Loop" of eval_calc_noise1_bb21_in/4 
* CEs [38,39] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [37] --> Loop 36 

#### Loops of eval_calc_noise1_bb21_in/4 
* Loop 33: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C)->  eval_calc_noise1_bb21_in(V_i_0,V_sfb_1',B,C)
                  [B>=4,6>=B,11>=V_sfb_1,V_sfb_1+1=V_sfb_1'] 
* Loop 34: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) [V_sfb_1>=12,V_i_0+1=C,B=6] 
* Loop 35: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) [11>=V_sfb_1,B=5] 
* Loop 36: eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) [11>=V_sfb_1,B=4] 

### Ranking functions of CR eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) 
* RF of phase [33]: [-V_sfb_1+12]

#### Partial ranking functions of CR eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    -V_sfb_1+12


### Resulting Chains:eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) 
* [[33],36]
* [[33],35]
* [[33],34]
* [36]
* [35]
* [34]


### Merging Chains  eval_calc_noise1_bb21_in/4 into  External patterns of execution 
* [[36],[36,[33]]] --> 1 
* [[35],[35,[33]]] --> 2 
* [[34,[33]]] --> 3 
* [[34]] --> 4 


### Specialization of cost equations eval_calc_noise1_bb19_in/2 
* CE 16 is refined into CE [40] 
* CE 14 is refined into CE [41] 
* CE 15 is refined into CE [42] 
* CE 13 is refined into CE [43,44] 


#### Refined cost equations eval_calc_noise1_bb19_in/2 
* CE 40: eval_calc_noise1_bb19_in(V_i_0,B) = 0
     [V_i_0>=3,B=9] 
* CE 41: eval_calc_noise1_bb19_in(V_i_0,B) = 1+ eval_calc_noise1_bb21_in(V_i_0,C,D,E):2
     [11>=C,2>=V_i_0,D=5,B=5] 
* CE 42: eval_calc_noise1_bb19_in(V_i_0,B) = 1+ eval_calc_noise1_bb21_in(V_i_0,C,D,E):1
     [11>=C,2>=V_i_0,D=4,B=4] 
* CE 43: eval_calc_noise1_bb19_in(V_i_0,B) = 2+ eval_calc_noise1_bb21_in(C,D,E,F):3+ eval_calc_noise1_bb19_in(F,B)
     [3>=F,11>=D,F=C+1,F=V_i_0+1,E=6] 
* CE 44: eval_calc_noise1_bb19_in(V_i_0,B) = 2+ eval_calc_noise1_bb21_in(C,D,E,F):4+ eval_calc_noise1_bb19_in(F,B)
     [D>=12,3>=F,F=C+1,F=V_i_0+1,E=6] 

### Cost equations --> "Loop" of eval_calc_noise1_bb19_in/2 
* CEs [43,44] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [42] --> Loop 40 

#### Loops of eval_calc_noise1_bb19_in/2 
* Loop 37: eval_calc_noise1_bb19_in(V_i_0,B)->  eval_calc_noise1_bb19_in(V_i_0',B)
                  [2>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 38: eval_calc_noise1_bb19_in(V_i_0,B) [V_i_0>=3,B=9] 
* Loop 39: eval_calc_noise1_bb19_in(V_i_0,B) [2>=V_i_0,B=5] 
* Loop 40: eval_calc_noise1_bb19_in(V_i_0,B) [2>=V_i_0,B=4] 

### Ranking functions of CR eval_calc_noise1_bb19_in(V_i_0,B) 
* RF of phase [37]: [-V_i_0+3]

#### Partial ranking functions of CR eval_calc_noise1_bb19_in(V_i_0,B) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    -V_i_0+3


### Resulting Chains:eval_calc_noise1_bb19_in(V_i_0,B) 
* [[37],40]
* [[37],39]
* [[37],38]
* [40]
* [39]
* [38]


### Merging Chains  eval_calc_noise1_bb19_in/2 into  External patterns of execution 
* [[40],[40,[37]]] --> 1 
* [[39],[39,[37]]] --> 2 
* [[38,[37]]] --> 3 
* [[38]] --> 4 


### Specialization of cost equations loop_cont_eval_calc_noise1_bb19_in/2 
* CE 17 is refined into CE [45] 
* CE 19 is refined into CE [46] 
* CE 18 is refined into CE [47] 


#### Refined cost equations loop_cont_eval_calc_noise1_bb19_in/2 
* CE 45: loop_cont_eval_calc_noise1_bb19_in(C,A) = 0
     [C=9] 
* CE 46: loop_cont_eval_calc_noise1_bb19_in(C,A) = 0
     [C=5] 
* CE 47: loop_cont_eval_calc_noise1_bb19_in(C,A) = 0
     [C=4] 

### Cost equations --> "Loop" of loop_cont_eval_calc_noise1_bb19_in/2 
* CEs [45] --> Loop 41 
* CEs [46] --> Loop 42 
* CEs [47] --> Loop 43 

#### Loops of loop_cont_eval_calc_noise1_bb19_in/2 
* Loop 41: loop_cont_eval_calc_noise1_bb19_in(C,A) [C=9] 
* Loop 42: loop_cont_eval_calc_noise1_bb19_in(C,A) [C=5] 
* Loop 43: loop_cont_eval_calc_noise1_bb19_in(C,A) [C=4] 

### Ranking functions of CR loop_cont_eval_calc_noise1_bb19_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_calc_noise1_bb19_in(C,A) 


### Resulting Chains:loop_cont_eval_calc_noise1_bb19_in(C,A) 
* [43]
* [42]
* [41]


### Merging Chains  loop_cont_eval_calc_noise1_bb19_in/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 
* [[41]] --> 3 


### Specialization of cost equations loop_cont_eval_calc_noise1_bb1_in/3 
* CE 10 is refined into CE [48] 
* CE 9 is refined into CE [49] 
* CE 8 is refined into CE [50,51,52,53] 


#### Refined cost equations loop_cont_eval_calc_noise1_bb1_in/3 
* CE 48: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 0
     [D=8] 
* CE 49: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 0
     [D=7] 
* CE 50: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 1+ eval_calc_noise1_bb19_in(A,E):1+ loop_cont_eval_calc_noise1_bb19_in(F,B):1
     [2>=A,F=4,E=4,D=6] 
* CE 51: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 1+ eval_calc_noise1_bb19_in(A,E):2+ loop_cont_eval_calc_noise1_bb19_in(F,B):2
     [2>=A,F=5,E=5,D=6] 
* CE 52: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 1+ eval_calc_noise1_bb19_in(A,E):3+ loop_cont_eval_calc_noise1_bb19_in(F,B):3
     [2>=A,F=9,E=9,D=6] 
* CE 53: loop_cont_eval_calc_noise1_bb1_in(D,A,B) = 1+ eval_calc_noise1_bb19_in(A,E):4+ loop_cont_eval_calc_noise1_bb19_in(F,B):3
     [A>=3,F=9,E=9,D=6] 

### Cost equations --> "Loop" of loop_cont_eval_calc_noise1_bb1_in/3 
* CEs [48] --> Loop 44 
* CEs [49] --> Loop 45 
* CEs [53] --> Loop 46 
* CEs [50,51,52] --> Loop 47 

#### Loops of loop_cont_eval_calc_noise1_bb1_in/3 
* Loop 44: loop_cont_eval_calc_noise1_bb1_in(D,A,B) [D=8] 
* Loop 45: loop_cont_eval_calc_noise1_bb1_in(D,A,B) [D=7] 
* Loop 46: loop_cont_eval_calc_noise1_bb1_in(D,A,B) [A>=3,D=6] 
* Loop 47: loop_cont_eval_calc_noise1_bb1_in(D,A,B) [2>=A,D=6] 

### Ranking functions of CR loop_cont_eval_calc_noise1_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_calc_noise1_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_calc_noise1_bb1_in(D,A,B) 
* [47]
* [46]
* [45]
* [44]


### Merging Chains  loop_cont_eval_calc_noise1_bb1_in/3 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 
* [[45]] --> 3 
* [[44]] --> 4 


### Specialization of cost equations eval_calc_noise1_bb0_in/1 
* CE 3 is refined into CE [54,55,56,57] 


#### Refined cost equations eval_calc_noise1_bb0_in/1 
* CE 54: eval_calc_noise1_bb0_in(B) = 1+ eval_calc_noise1_bb1_in(C,D,E):1+ loop_cont_eval_calc_noise1_bb1_in(F,G,B):1
     [G=0,F=6,E=0,D=6,C=0] 
* CE 55: eval_calc_noise1_bb0_in(B) = 1+ eval_calc_noise1_bb1_in(C,D,E):2+ loop_cont_eval_calc_noise1_bb1_in(F,E,B):3
     [F=7,D=7,C=0] 
* CE 56: eval_calc_noise1_bb0_in(B) = 1+ eval_calc_noise1_bb1_in(C,D,E):3+ loop_cont_eval_calc_noise1_bb1_in(F,E,B):4
     [F=8,D=8,C=0] 
* CE 57: eval_calc_noise1_bb0_in(B) = 1+ eval_calc_noise1_bb1_in(C,D,E):4
     [C=0] 

### Cost equations --> "Loop" of eval_calc_noise1_bb0_in/1 
* CEs [57] --> Loop 48 
* CEs [54,55,56] --> Loop 49 

#### Loops of eval_calc_noise1_bb0_in/1 
* Loop 48: eval_calc_noise1_bb0_in(B) [] 
* Loop 49: eval_calc_noise1_bb0_in(B) [] 

### Ranking functions of CR eval_calc_noise1_bb0_in(B) 

#### Partial ranking functions of CR eval_calc_noise1_bb0_in(B) 


### Resulting Chains:eval_calc_noise1_bb0_in(B) 
* [49]
* [48]...


### Merging Chains  eval_calc_noise1_bb0_in/1 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations eval_calc_noise1_start/1 
* CE 2 is refined into CE [58,59] 


#### Refined cost equations eval_calc_noise1_start/1 
* CE 58: eval_calc_noise1_start(B) = 0+ eval_calc_noise1_bb0_in(B):1
     [] 
* CE 59: eval_calc_noise1_start(B) = 0+ eval_calc_noise1_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_calc_noise1_start/1 
* CEs [59] --> Loop 50 
* CEs [58] --> Loop 51 

#### Loops of eval_calc_noise1_start/1 
* Loop 50: eval_calc_noise1_start(B) [] 
* Loop 51: eval_calc_noise1_start(B) [] 

### Ranking functions of CR eval_calc_noise1_start(B) 

#### Partial ranking functions of CR eval_calc_noise1_start(B) 


### Resulting Chains:eval_calc_noise1_start(B) 
* [51]
* [50]...


### Merging Chains  eval_calc_noise1_start/1 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) -> [eval_calc_noise1_bb7_in(V_sfb_0',V_34',V_l_0',B',C',D',E')] 
1
#### Cost of phase [25]:eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E) -> [eval_calc_noise1_bb7_in(V_sfb_0',V_34',V_l_0',B',C',D',E')] 
1*it(25)+0
  Such that:it(25) =< V_34-V_l_0
it(25) =< V_34-V_l_0-V_34'+V_l_0'

#### Cost of chains of eval_calc_noise1_bb7_in(V_sfb_0,V_34,V_l_0,B,C,D,E):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< V_34-V_l_0

  with precondition: [B=2,V_sfb_0=C,V_34=D,V_34=E,V_34>=V_l_0+1] 

* Chain [26]: 0
  with precondition: [B=2,C=V_sfb_0,V_34=D,V_l_0=E,V_l_0>=V_34] 


#### Cost of loops [27] 

 * loop 27:eval_calc_noise1_bb1_in(V_sfb_0,B,C) -> [eval_calc_noise1_bb1_in(V_sfb_0',B',C')] 
1*s(2)+0
#### Cost of phase [27]:eval_calc_noise1_bb1_in(V_sfb_0,B,C) -> [eval_calc_noise1_bb1_in(V_sfb_0',B',C')] 
1*s(3)+0
#### Cost of phase [27]:eval_calc_noise1_bb1_in(V_sfb_0,B,C) -> [eval_calc_noise1_bb1_in(V_sfb_0',B',C')] 
1*s(3)+0
#### Cost of phase [27]:eval_calc_noise1_bb1_in(V_sfb_0,B,C) -> [eval_calc_noise1_bb1_in(V_sfb_0',B',C')] 
1*s(3)+0
#### Cost of phase [27]:eval_calc_noise1_bb1_in(V_sfb_0,B,C) -> [eval_calc_noise1_bb1_in(V_sfb_0',B',C')] 
1*s(3)+0
#### Cost of chains of eval_calc_noise1_bb1_in(V_sfb_0,B,C):
* Chain [[27]]...: 1*s(3)+0
  with precondition: [] 

* Chain [[27],30]: 1*s(3)+0
  with precondition: [B=6,C=0,V_sfb_0>=0] 

* Chain [[27],29]: 1*s(3)+0
  with precondition: [B=7,V_sfb_0>=0] 

* Chain [[27],28]: 1*s(3)+0
  with precondition: [B=8,V_sfb_0>=0] 

* Chain [30]: 0
  with precondition: [B=6,C=0,V_sfb_0>=0] 

* Chain [29]: 0
  with precondition: [B=7,V_sfb_0>=0] 

* Chain [28]: 0
  with precondition: [B=8,V_sfb_0>=0] 


#### Cost of loops [31] 

 * loop 31:eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) -> [eval_calc_noise1_bb25_in(V_i_0',V_sfb_1',V_136',V_l_1',B',C',D',E',F')] 
1
#### Cost of phase [31]:eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F) -> [eval_calc_noise1_bb25_in(V_i_0',V_sfb_1',V_136',V_l_1',B',C',D',E',F')] 
1*it(31)+0
  Such that:it(31) =< V_136-V_l_1
it(31) =< V_136-V_l_1-V_136'+V_l_1'

#### Cost of chains of eval_calc_noise1_bb25_in(V_i_0,V_sfb_1,V_136,V_l_1,B,C,D,E,F):
* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< V_136-V_l_1

  with precondition: [B=3,V_i_0=C,V_sfb_1=D,V_136=E,V_136=F,11>=V_sfb_1,V_136>=V_l_1+1] 

* Chain [32]: 0
  with precondition: [B=3,C=V_i_0,V_sfb_1=D,V_136=E,V_l_1=F,11>=V_sfb_1,V_l_1>=V_136] 


#### Cost of loops [33] 

 * loop 33:eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) -> [eval_calc_noise1_bb21_in(V_i_0',V_sfb_1',B',C')] 
1*s(8)+0
#### Cost of phase [33]:eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) -> [eval_calc_noise1_bb21_in(V_i_0',V_sfb_1',B',C')] 
1*s(9)+0
#### Cost of phase [33]:eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) -> [eval_calc_noise1_bb21_in(V_i_0',V_sfb_1',B',C')] 
1*s(9)+0
#### Cost of phase [33]:eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C) -> [eval_calc_noise1_bb21_in(V_i_0',V_sfb_1',B',C')] 
1*s(9)+0
#### Cost of chains of eval_calc_noise1_bb21_in(V_i_0,V_sfb_1,B,C):
* Chain [[33],36]: 1*s(9)+0
  with precondition: [B=4,2>=V_i_0,10>=V_sfb_1] 

* Chain [[33],35]: 1*s(9)+0
  with precondition: [B=5,2>=V_i_0,10>=V_sfb_1] 

* Chain [[33],34]: 1*s(9)+0
  with precondition: [B=6,V_i_0+1=C,2>=V_i_0,11>=V_sfb_1] 

* Chain [36]: 0
  with precondition: [B=4,2>=V_i_0,11>=V_sfb_1] 

* Chain [35]: 0
  with precondition: [B=5,2>=V_i_0,11>=V_sfb_1] 

* Chain [34]: 0
  with precondition: [B=6,V_i_0+1=C,2>=V_i_0,V_sfb_1>=12] 


#### Cost of loops [37] 

 * loop 37:eval_calc_noise1_bb19_in(V_i_0,B) -> [eval_calc_noise1_bb19_in(V_i_0',B')] 
1*s(14)+0
#### Cost of phase [37]:eval_calc_noise1_bb19_in(V_i_0,B) -> [eval_calc_noise1_bb19_in(V_i_0',B')] 
1*s(15)+0
#### Cost of phase [37]:eval_calc_noise1_bb19_in(V_i_0,B) -> [eval_calc_noise1_bb19_in(V_i_0',B')] 
1*s(15)+0
#### Cost of phase [37]:eval_calc_noise1_bb19_in(V_i_0,B) -> [eval_calc_noise1_bb19_in(V_i_0',B')] 
1*s(15)+0
#### Cost of chains of eval_calc_noise1_bb19_in(V_i_0,B):
* Chain [[37],40]: 2*s(12)+1
  with precondition: [B=4,1>=V_i_0] 

* Chain [[37],39]: 2*s(15)+1
  with precondition: [B=5,1>=V_i_0] 

* Chain [[37],38]: 1*s(15)+0
  with precondition: [B=9,2>=V_i_0] 

* Chain [40]: 1*s(12)+1
  with precondition: [B=4,2>=V_i_0] 

* Chain [39]: 1*s(16)+1
  with precondition: [B=5,2>=V_i_0] 

* Chain [38]: 0
  with precondition: [B=9,V_i_0>=3] 


#### Cost of chains of loop_cont_eval_calc_noise1_bb19_in(C,A):
* Chain [43]: 0
  with precondition: [C=4] 

* Chain [42]: 0
  with precondition: [C=5] 

* Chain [41]: 0
  with precondition: [C=9] 


#### Cost of chains of loop_cont_eval_calc_noise1_bb1_in(D,A,B):
* Chain [47]: 1*aux(11)+0
  with precondition: [D=6,2>=A] 

* Chain [46]: 1
  with precondition: [D=6,A>=3] 

* Chain [45]: 0
  with precondition: [D=7] 

* Chain [44]: 0
  with precondition: [D=8] 


#### Cost of chains of eval_calc_noise1_bb0_in(B):
* Chain [49]: 1*aux(12)+0
  with precondition: [] 

* Chain [48]...: 1*s(28)+1
  with precondition: [] 


#### Cost of chains of eval_calc_noise1_start(B):
* Chain [51]: 1*s(29)+0
  with precondition: [] 

* Chain [50]...: 1*s(30)+1
  with precondition: [] 


Closed-form bounds of eval_calc_noise1_start(B): 
-------------------------------------
* Chain [51] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_calc_noise1_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 114 ms.
* Invariants computed in 147 ms.
   - Backward Invariants 80 ms.
   - Transitive Invariants 27 ms.
* Refinement performed in 231 ms.
* Termination proved in 25 ms.
* Upper bounds computed in 175 ms.
   - Equation cost structures 70 ms.
   - Phase cost structures 59 ms.
   - Chain cost structures 66 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 847 ms.

