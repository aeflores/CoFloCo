WARNING: Excluded non-linear constraints:[O-A*P>=0,O-A*P+1=<A]
WARNING: Excluded non-linear constraints:[O-A*P>=0,O-A*P+1=< -A]
WARNING: Excluded non-linear constraints:[-O+A*P>=0,-O+A*P+1=<A]
WARNING: Excluded non-linear constraints:[-O+A*P>=0,-O+A*P+1=< -A]
Warning: Ignored call to eval_gx_ht_construct_bits_stop/1 in equation loop_cont_eval_gx_ht_construct_bits_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_gx_ht_construct_bits_bb3_in/14]
1. recursive  : [eval_gx_ht_construct_bits_bb6_in/12]
2. recursive  : [eval_gx_ht_construct_bits_bb1_in/5,loop_cont_eval_gx_ht_construct_bits_bb3_in/9,loop_cont_eval_gx_ht_construct_bits_bb6_in/6]
3. non_recursive  : [loop_cont_eval_gx_ht_construct_bits_bb1_in/2]
4. non_recursive  : [eval_gx_ht_construct_bits_bb0_in/1]
5. non_recursive  : [eval_gx_ht_construct_bits_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gx_ht_construct_bits_bb3_in/14
1. SCC is partially evaluated into eval_gx_ht_construct_bits_bb6_in/12
2. SCC is partially evaluated into eval_gx_ht_construct_bits_bb1_in/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_gx_ht_construct_bits_bb0_in/1
5. SCC is partially evaluated into eval_gx_ht_construct_bits_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_ht_construct_bits_bb3_in/14 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations eval_gx_ht_construct_bits_bb3_in/14 
* CE 12: eval_gx_ht_construct_bits_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) = 0
     [A>=E+1,B>=D+1,G=2] 
* CE 13: eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) = 1+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,J,K,L,C,D,E,F,G,H,I)
     [V_4>=V_i_0+1,V_pix_0>=V_2,V_2+J=V_pix_0,L=2,B=2] 

### Cost equations --> "Loop" of eval_gx_ht_construct_bits_bb3_in/14 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_gx_ht_construct_bits_bb3_in/14 
* Loop 10: eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I)->  eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0',V_mask_0',B',C,D,E,F,G,H,I)
                  [V_4>=V_i_0+1,V_pix_0>=V_2,V_2+V_pix_0'=V_pix_0,B'=2,B=2] 
* Loop 11: eval_gx_ht_construct_bits_bb3_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) [A>=E+1,B>=D+1,G=2] 

### Ranking functions of CR eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_gx_ht_construct_bits_bb3_in/14 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations eval_gx_ht_construct_bits_bb6_in/12 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations eval_gx_ht_construct_bits_bb6_in/12 
* CE 14: eval_gx_ht_construct_bits_bb6_in(A,B,C,D,E,F,G,H,A,B,C,I) = 0
     [I=D+1,H=3,G=0] 
* CE 15: eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) = 1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,G,H,C,D,E,F)
     [V_mask_1>=1,H=3,B=3] 
* CE 16: eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) = 1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,G,H,C,D,E,F)
     [0>=V_mask_1+1,H=3,B=3] 

### Cost equations --> "Loop" of eval_gx_ht_construct_bits_bb6_in/12 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_gx_ht_construct_bits_bb6_in/12 
* Loop 12: eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F)->  eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1',B',C,D,E,F)
                  [V_mask_1>=1,B'=3,B=3] 
* Loop 13: eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F)->  eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1',B',C,D,E,F)
                  [0>=V_mask_1+1,B'=3,B=3] 
* Loop 14: eval_gx_ht_construct_bits_bb6_in(A,B,C,D,E,F,G,H,A,B,C,I) [D+1=I,H=3,G=0] 

### Ranking functions of CR eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) 

#### Partial ranking functions of CR eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) 


### Resulting Chains:eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) 
* [[12,13]]...
* [[12,13],14]
* [14]


### Merging Chains  eval_gx_ht_construct_bits_bb6_in/12 into  External patterns of execution 
* [[14],[14,[12,13]]] --> 1 
* [[[12,13]]] --> 2 


### Specialization of cost equations eval_gx_ht_construct_bits_bb1_in/5 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18,19,20,21,22] 
* CE 5 is refined into CE [23,24,25,26,27] 


#### Refined cost equations eval_gx_ht_construct_bits_bb1_in/5 
* CE 17: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 0
     [V_i_0>=V_4,B=4] 
* CE 18: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,C,D,E,F,V_2,V_4,V_12,G,H,E,E):1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,I,J,E,E,K,V_2,V_4,V_12,L):1+ eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,L,M)
     [V_2+V_12>=33,V_4>=L,V_12+J=32,V_12+H=32,V_12+D=32,L=I+1,L=G+1,L=C+1,L=V_i_0+1,M=4,K=3,F=2,B=4] 
* CE 19: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,C,D,E,V_2,V_4,V_12,V_i_0,F,D,D):1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,G,D,D,H,I,J,K,L):2
     [V_2+V_12>=33,V_4>=V_i_0+1,V_12+G=32,V_12+F=32,V_12+C=32,M=4,H=3,E=2,B=4] 
* CE 20: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,C,D,E,F,V_2,V_4,V_12,G,H,I,I):2+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,J,H,I,I,K,V_2,V_4,V_12,L):1+ eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,L,M)
     [32>=V_2+V_12+H,V_4>=L,V_2>=H+1,H>=0,V_12+D=32,L=J+1,L=G+1,L=C+1,L=V_i_0+1,M=4,K=3,F=2,B=4] 
* CE 21: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,C,D,E,V_2,V_4,V_12,V_i_0,F,G,G):2+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,F,G,G,H,I,J,K,L):2
     [32>=V_2+V_12+F,V_2>=F+1,V_4>=V_i_0+1,F>=0,V_12+C=32,M=4,H=3,E=2,B=4] 
* CE 22: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,C,V_i_0,D,E,F,G,H,I,J,K,L,M):3
     [V_4>=V_i_0+1,D>=V_2,C+D=32,V_12+D=32,N=4,O=3,F=2,B=4] 
* CE 23: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,C,D,E,F,V_2,V_4,V_12,G,H,E,E):1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,I,J,E,E,K,V_2,V_4,V_12,L):1+ eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,L,M)
     [V_2+V_12>=33,V_4>=L,V_2>=1,V_12+J=32,V_12+H=32,V_12+D=32,L=I+1,L=G+1,L=C+1,L=V_i_0+1,M=4,K=3,F=2,B=4] 
* CE 24: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,C,D,E,V_2,V_4,V_12,V_i_0,F,D,D):1+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,G,D,D,H,I,J,K,L):2
     [V_2+V_12>=33,V_4>=V_i_0+1,V_2>=1,V_12+G=32,V_12+F=32,V_12+C=32,M=4,H=3,E=2,B=4] 
* CE 25: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,C,D,E,F,V_2,V_4,V_12,G,H,I,I):2+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,J,H,I,I,K,V_2,V_4,V_12,L):1+ eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,L,M)
     [32>=V_2+V_12+H,V_4>=L,V_2>=H+1,H>=0,V_12+D=32,L=J+1,L=G+1,L=C+1,L=V_i_0+1,M=4,K=3,F=2,B=4] 
* CE 26: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,C,D,E,V_2,V_4,V_12,V_i_0,F,G,G):2+ eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,F,G,G,H,I,J,K,L):2
     [32>=V_2+V_12+F,V_2>=F+1,V_4>=V_i_0+1,F>=0,V_12+C=32,M=4,H=3,E=2,B=4] 
* CE 27: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) = 3+ eval_gx_ht_construct_bits_bb3_in(V_2,V_4,C,V_i_0,D,E,F,G,H,I,J,K,L,M):3
     [V_4>=V_i_0+1,D>=V_2,V_2>=1,C+D=32,V_12+D=32,N=4,O=3,F=2,B=4] 

### Cost equations --> "Loop" of eval_gx_ht_construct_bits_bb1_in/5 
* CEs [19,24] --> Loop 15 
* CEs [21,22,26,27] --> Loop 16 
* CEs [18,23] --> Loop 17 
* CEs [20,25] --> Loop 18 
* CEs [17] --> Loop 19 

#### Loops of eval_gx_ht_construct_bits_bb1_in/5 
* Loop 15: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) [V_2+V_12>=33,V_4>=V_i_0+1,B=4] 
* Loop 16: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) [V_4>=V_i_0+1,32>=V_2+V_12,B=4] 
* Loop 17: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B)->  eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0',B')
                  [V_2+V_12>=33,V_4>=V_i_0+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 18: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B)->  eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0',B')
                  [V_4>=V_i_0+1,32>=V_2+V_12,V_2>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 19: eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) [V_i_0>=V_4,B=4] 

### Ranking functions of CR eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) 
* RF of phase [17]: [V_4-V_i_0]
* RF of phase [18]: [V_4-V_i_0]

#### Partial ranking functions of CR eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_4-V_i_0
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_4-V_i_0


### Resulting Chains:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) 
* [[18],19]
* [[18],16]...
* [[17],19]
* [[17],15]...
* [19]
* [16]...
* [15]...


### Merging Chains  eval_gx_ht_construct_bits_bb1_in/5 into  External patterns of execution 
* [[19,[18]]] --> 1 
* [[19,[17]]] --> 2 
* [[19]] --> 3 
* [[16,[18]]] --> 4 
* [[16]] --> 5 
* [[15]] --> 6 
* [[15,[17]]] --> 7 


### Specialization of cost equations eval_gx_ht_construct_bits_bb0_in/1 
* CE 3 is refined into CE [28,29,30,31,32,33,34] 


#### Refined cost equations eval_gx_ht_construct_bits_bb0_in/1 
* CE 28: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):1
     [C>=1,D>=1,16>=C,F=4,E=0] 
* CE 29: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):2
     [2*C>=33,D>=1,F=4,E=0] 
* CE 30: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):3
     [0>=D,F=4,E=0] 
* CE 31: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):4
     [C>=1,D>=2,16>=C,F=4,E=0] 
* CE 32: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):5
     [D>=1,16>=C,F=4,E=0] 
* CE 33: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):6
     [2*C>=33,D>=1,F=4,E=0] 
* CE 34: eval_gx_ht_construct_bits_bb0_in(B) = 1+ eval_gx_ht_construct_bits_bb1_in(C,D,C,E,F):7
     [2*C>=33,D>=2,F=4,E=0] 

### Cost equations --> "Loop" of eval_gx_ht_construct_bits_bb0_in/1 
* CEs [31,32,33,34] --> Loop 20 
* CEs [28,29,30] --> Loop 21 

#### Loops of eval_gx_ht_construct_bits_bb0_in/1 
* Loop 20: eval_gx_ht_construct_bits_bb0_in(B) [] 
* Loop 21: eval_gx_ht_construct_bits_bb0_in(B) [] 

### Ranking functions of CR eval_gx_ht_construct_bits_bb0_in(B) 

#### Partial ranking functions of CR eval_gx_ht_construct_bits_bb0_in(B) 


### Resulting Chains:eval_gx_ht_construct_bits_bb0_in(B) 
* [21]
* [20]...


### Merging Chains  eval_gx_ht_construct_bits_bb0_in/1 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_gx_ht_construct_bits_start/1 
* CE 2 is refined into CE [35,36] 


#### Refined cost equations eval_gx_ht_construct_bits_start/1 
* CE 35: eval_gx_ht_construct_bits_start(B) = 0+ eval_gx_ht_construct_bits_bb0_in(B):1
     [] 
* CE 36: eval_gx_ht_construct_bits_start(B) = 0+ eval_gx_ht_construct_bits_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_ht_construct_bits_start/1 
* CEs [36] --> Loop 22 
* CEs [35] --> Loop 23 

#### Loops of eval_gx_ht_construct_bits_start/1 
* Loop 22: eval_gx_ht_construct_bits_start(B) [] 
* Loop 23: eval_gx_ht_construct_bits_start(B) [] 

### Ranking functions of CR eval_gx_ht_construct_bits_start(B) 

#### Partial ranking functions of CR eval_gx_ht_construct_bits_start(B) 


### Resulting Chains:eval_gx_ht_construct_bits_start(B) 
* [23]
* [22]...


### Merging Chains  eval_gx_ht_construct_bits_start/1 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) -> [eval_gx_ht_construct_bits_bb3_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [10]:eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) -> [eval_gx_ht_construct_bits_bb3_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',B',C',D',E',F',G',H',I')] 
1*it(10)+0
#### Cost of phase [10]:eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I) -> [eval_gx_ht_construct_bits_bb3_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',B',C',D',E',F',G',H',I')] 
1*it(10)+0
#### Cost of chains of eval_gx_ht_construct_bits_bb3_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,B,C,D,E,F,G,H,I):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [V_pix_0>=V_2,V_4>=V_i_0+1,B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=2,V_2=C,V_4=D,V_12=E,V_i_0=F,H=I,G>=0,V_4>=V_i_0+1,V_2>=G+1,V_pix_0>=V_2+G] 

* Chain [11]: 0
  with precondition: [B=2,E=V_12,V_2=C,V_4=D,V_i_0=F,V_pix_0=G,V_mask_0=H,V_mask_0=I,V_4>=V_i_0+1,V_2>=V_pix_0+1] 


#### Cost of loops [12,13] 

 * loop 12:eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) -> [eval_gx_ht_construct_bits_bb6_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',V_mask_1',B',C',D',E',F')] 
1
 * loop 13:eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) -> [eval_gx_ht_construct_bits_bb6_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',V_mask_1',B',C',D',E',F')] 
1
#### Cost of phase [12,13]:eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) -> [eval_gx_ht_construct_bits_bb6_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',V_mask_1',B',C',D',E',F')] 
2*it(12)+0
#### Cost of phase [12,13]:eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F) -> [eval_gx_ht_construct_bits_bb6_in(V_2',V_4',V_12',V_i_0',V_pix_0',V_mask_0',V_mask_1',B',C',D',E',F')] 
2*it(12)+0
#### Cost of chains of eval_gx_ht_construct_bits_bb6_in(V_2,V_4,V_12,V_i_0,V_pix_0,V_mask_0,V_mask_1,B,C,D,E,F):
* Chain [[12,13]]...: 2*it(12)+0
  with precondition: [B=3] 

* Chain [[12,13],14]: 2*it(12)+0
  with precondition: [B=3,V_2=C,V_4=D,V_12=E,V_i_0+1=F] 

* Chain [14]: 0
  with precondition: [V_mask_1=0,B=3,C=V_2,D=V_4,E=V_12,F=V_i_0+1] 


#### Cost of loops [18] 

 * loop 18:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(6)+0
#### Cost of phase [18]:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(7)+0
#### Cost of phase [18]:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(7)+0
#### Cost of loops [17] 

 * loop 17:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(16)+0
#### Cost of phase [17]:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(17)+0
#### Cost of phase [17]:eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B) -> [eval_gx_ht_construct_bits_bb1_in(V_2',V_4',V_12',V_i_0',B')] 
1*s(17)+0
#### Cost of chains of eval_gx_ht_construct_bits_bb1_in(V_2,V_4,V_12,V_i_0,B):
* Chain [[18],19]: 1*s(7)+0
  with precondition: [B=4,V_2=V_12,16>=V_2,V_2>=1,V_i_0>=0,V_4>=V_i_0+1] 

* Chain [[18],16]...: 2*aux(3)+0
  with precondition: [B=4,V_2=V_12,16>=V_2,V_2>=1,V_i_0>=0,V_4>=V_i_0+2] 

* Chain [[17],19]: 1*s(17)+0
  with precondition: [B=4,V_2=V_12,V_i_0>=0,2*V_2>=33,V_4>=V_i_0+1] 

* Chain [[17],15]...: 2*aux(5)+0
  with precondition: [B=4,V_2=V_12,V_i_0>=0,2*V_2>=33,V_4>=V_i_0+2] 

* Chain [19]: 0
  with precondition: [B=4,V_2=V_12,V_i_0>=0,V_i_0>=V_4] 

* Chain [16]...: 1*aux(3)+0
  with precondition: [B=4,V_2=V_12,16>=V_2,V_i_0>=0,V_4>=V_i_0+1] 

* Chain [15]...: 1*aux(5)+0
  with precondition: [B=4,V_2=V_12,V_i_0>=0,2*V_2>=33,V_4>=V_i_0+1] 


#### Cost of chains of eval_gx_ht_construct_bits_bb0_in(B):
* Chain [21]: 1*aux(6)+0
  with precondition: [] 

* Chain [20]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_gx_ht_construct_bits_start(B):
* Chain [23]: 1*s(26)+0
  with precondition: [] 

* Chain [22]...: 1*s(27)+0
  with precondition: [] 


Closed-form bounds of eval_gx_ht_construct_bits_start(B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_ht_construct_bits_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 119 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 192 ms.
   - Equation cost structures 110 ms.
   - Phase cost structures 66 ms.
   - Chain cost structures 58 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 455 ms.

