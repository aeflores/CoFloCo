Warning: Ignored call to eval_decode_mcu_stop/1 in equation eval_decode_mcu_bb58_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_decode_mcu_100/38,eval_decode_mcu_109/39,eval_decode_mcu_110/39,eval_decode_mcu_81/33,eval_decode_mcu_82/33,eval_decode_mcu_99/38,eval_decode_mcu_bb21_in/33,eval_decode_mcu_bb25_in/35,eval_decode_mcu_bb27_in/38,eval_decode_mcu_bb29_in/37,eval_decode_mcu_bb33_in/41,eval_decode_mcu_bb35_in/42,eval_decode_mcu_bb38_in/41]
1. recursive  : [eval_decode_mcu_138/33,eval_decode_mcu_139/33,eval_decode_mcu_156/38,eval_decode_mcu_157/38,eval_decode_mcu_166/39,eval_decode_mcu_167/39,eval_decode_mcu_bb40_in/33,eval_decode_mcu_bb44_in/35,eval_decode_mcu_bb46_in/38,eval_decode_mcu_bb48_in/37,eval_decode_mcu_bb52_in/41,eval_decode_mcu_bb55_in/44]
2. recursive  : [eval_decode_mcu_28/4,eval_decode_mcu_29/4,eval_decode_mcu_46/9,eval_decode_mcu_47/10,eval_decode_mcu_51/9,eval_decode_mcu_52/9,eval_decode_mcu_bb10_in/9,eval_decode_mcu_bb12_in/9,eval_decode_mcu_bb16_in/11,eval_decode_mcu_bb18_in/13,eval_decode_mcu_bb39_in/13,eval_decode_mcu_bb4_in/4,eval_decode_mcu_bb56_in/18,eval_decode_mcu_bb8_in/6,loop_cont_eval_decode_mcu_bb21_in/19,loop_cont_eval_decode_mcu_bb40_in/19]
3. non_recursive  : [eval_decode_mcu_bb58_in/1]
4. non_recursive  : [eval_decode_mcu_187/1]
5. non_recursive  : [eval_decode_mcu_186/1]
6. non_recursive  : [loop_cont_eval_decode_mcu_bb4_in/2]
7. non_recursive  : [eval_decode_mcu_16/3]
8. non_recursive  : [eval_decode_mcu_15/3]
9. non_recursive  : [eval_decode_mcu_bb3_in/1]
10. non_recursive  : [eval_decode_mcu_5/1]
11. non_recursive  : [eval_decode_mcu_4/1]
12. non_recursive  : [eval_decode_mcu_bb0_in/1]
13. non_recursive  : [eval_decode_mcu_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_decode_mcu_bb21_in/33
1. SCC is partially evaluated into eval_decode_mcu_bb40_in/33
2. SCC is partially evaluated into eval_decode_mcu_bb4_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_decode_mcu_bb4_in/2
7. SCC is partially evaluated into eval_decode_mcu_16/3
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_decode_mcu_5/1
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_decode_mcu_bb0_in/1
13. SCC is partially evaluated into eval_decode_mcu_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decode_mcu_bb21_in/33 
* CE 24 is refined into CE [28] 
* CE 27 is refined into CE [29] 
* CE 26 is refined into CE [30] 
* CE 25 is refined into CE [31] 


#### Refined cost equations eval_decode_mcu_bb21_in/33 
* CE 28: eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Q,R) = 0
     [63>=O,P=3] 
* CE 29: eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,M,N) = 0
     [O>=64,P=3] 
* CE 30: eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) = 0
     [63>=V_k_0,B=2] 
* CE 31: eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) = 1+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,T,U,V,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)
     [B>=2,3>=B,63>=V_k_0] 

### Cost equations --> "Loop" of eval_decode_mcu_bb21_in/33 
* CEs [31] --> Loop 18 
* CEs [28] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [30] --> Loop 21 

#### Loops of eval_decode_mcu_bb21_in/33 
* Loop 18: eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)->  eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6',V_get_buffer_6',V_k_0',B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)
                  [B>=2,3>=B,63>=V_k_0] 
* Loop 19: eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Q,R) [63>=O,P=3] 
* Loop 20: eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,M,N) [O>=64,P=3] 
* Loop 21: eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) [63>=V_k_0,B=2] 

### Ranking functions of CR eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 

#### Partial ranking functions of CR eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 


### Resulting Chains:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 
* [[18]]...
* [[18],21]
* [[18],20]
* [[18],19]
* [21]
* [19]


### Merging Chains  eval_decode_mcu_bb21_in/33 into  External patterns of execution 
* [[21],[21,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[20,[18]]] --> 3 
* [[[18]]] --> 4 


### Specialization of cost equations eval_decode_mcu_bb40_in/33 
* CE 20 is refined into CE [32] 
* CE 23 is refined into CE [33] 
* CE 22 is refined into CE [34] 
* CE 21 is refined into CE [35] 


#### Refined cost equations eval_decode_mcu_bb40_in/33 
* CE 32: eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,Q,R,S,T,U) = 0
     [63>=O,P=3] 
* CE 33: eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,Q,R,S,M,N) = 0
     [O>=64,P=3] 
* CE 34: eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) = 0
     [63>=V_k_2,B=2] 
* CE 35: eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) = 1+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,T,U,V,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)
     [B>=2,3>=B,63>=V_k_2] 

### Cost equations --> "Loop" of eval_decode_mcu_bb40_in/33 
* CEs [35] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 

#### Loops of eval_decode_mcu_bb40_in/33 
* Loop 22: eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)->  eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13',V_get_buffer_13',V_k_2',B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)
                  [B>=2,3>=B,63>=V_k_2] 
* Loop 23: eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,Q,R,S,T,U) [63>=O,P=3] 
* Loop 24: eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,Q,R,S,M,N) [O>=64,P=3] 
* Loop 25: eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) [63>=V_k_2,B=2] 

### Ranking functions of CR eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 

#### Partial ranking functions of CR eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 


### Resulting Chains:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 
* [[22]]...
* [[22],25]
* [[22],24]
* [[22],23]
* [25]
* [23]


### Merging Chains  eval_decode_mcu_bb40_in/33 into  External patterns of execution 
* [[25],[25,[22]]] --> 1 
* [[23],[23,[22]],[24,[22]]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations eval_decode_mcu_bb4_in/4 
* CE 17 is refined into CE [36] 
* CE 8 is refined into CE [37] 
* CE 11 is refined into CE [38,39] 
* CE 12 is refined into CE [40,41] 
* CE 15 is refined into CE [42,43] 
* CE 16 is refined into CE [44,45] 
* CE 9 is refined into CE [46,47] 
* CE 10 is refined into CE [48,49] 
* CE 13 is refined into CE [50,51,52] 
* CE 14 is refined into CE [53,54,55] 


#### Refined cost equations eval_decode_mcu_bb4_in/4 
* CE 36: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 0
     [B=4] 
* CE 37: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 0
     [B=2] 
* CE 38: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):1
     [G+J=H,L=2,K=1,B=2] 
* CE 39: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):3
     [G+J=H,L=2,K=1,B=2] 
* CE 40: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):1
     [K=2,J=1,B=2] 
* CE 41: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):3
     [K=2,J=1,B=2] 
* CE 42: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):1
     [G+J=H,L=2,K=1,B=2] 
* CE 43: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):4
     [G+J=H,L=2,K=1,B=2] 
* CE 44: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):1
     [K=2,J=1,B=2] 
* CE 45: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):4
     [K=2,J=1,B=2] 
* CE 46: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,K,I,L,M,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,N,I,O,P,Q,R,S):2+ eval_decode_mcu_bb4_in(R,S,T,B)
     [G+N=H,G+K=H,G+J=H,V_blkn_0+1=T,M=3,L=1] 
* CE 47: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):3
     [G+J=H,D1=O+1,L=3,K=1] 
* CE 48: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,L,M,N,O,P):2+ eval_decode_mcu_bb4_in(O,P,Q,B)
     [V_blkn_0+1=Q,K=3,J=1] 
* CE 49: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):3
     [C1=N+1,K=3,J=1] 
* CE 50: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,K,I,L,M,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,N,I,O,P,Q,R,S):2+ eval_decode_mcu_bb4_in(R,S,T,B)
     [63>=Q,G+N=H,G+K=H,G+J=H,V_blkn_0+1=T,M=3,L=1] 
* CE 51: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,K,I,L,M,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,N,I,O,P,Q,O,P):3+ eval_decode_mcu_bb4_in(O,P,R,B)
     [Q>=64,G+N=H,G+K=H,G+J=H,V_blkn_0+1=R,M=3,L=1] 
* CE 52: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,J,I,J,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):4
     [G+J=H,D1=O+1,L=3,K=1] 
* CE 53: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,L,M,N,O,P):2+ eval_decode_mcu_bb4_in(O,P,Q,B)
     [63>=N,V_blkn_0+1=Q,K=3,J=1] 
* CE 54: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,L,M,N,L,M):3+ eval_decode_mcu_bb4_in(L,M,O,B)
     [N>=64,V_blkn_0+1=O,K=3,J=1] 
* CE 55: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 2+ eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,C,D,E,F,G,H,I,E,F,E,F,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):4
     [C1=N+1,K=3,J=1] 

### Cost equations --> "Loop" of eval_decode_mcu_bb4_in/4 
* CEs [39,41,43,45,47,49,52,55] --> Loop 26 
* CEs [46,48,50,51,53,54] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [37,38,40,42,44] --> Loop 29 

#### Loops of eval_decode_mcu_bb4_in/4 
* Loop 26: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) [] 
* Loop 27: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B)->  eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B)
                  [V_blkn_0+1=V_blkn_0'] 
* Loop 28: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) [B=4] 
* Loop 29: eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) [B=2] 

### Ranking functions of CR eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 

#### Partial ranking functions of CR eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 


### Resulting Chains:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 
* [[27]]...
* [[27],29]
* [[27],28]
* [[27],26]...
* [29]
* [28]
* [26]...


### Merging Chains  eval_decode_mcu_bb4_in/4 into  External patterns of execution 
* [[29],[29,[27]]] --> 1 
* [[28],[28,[27]]] --> 2 
* [[[27]]] --> 3 
* [[26],[26,[27]]] --> 4 


### Specialization of cost equations loop_cont_eval_decode_mcu_bb4_in/2 
* CE 19 is refined into CE [56] 
* CE 18 is refined into CE [57] 


#### Refined cost equations loop_cont_eval_decode_mcu_bb4_in/2 
* CE 56: loop_cont_eval_decode_mcu_bb4_in(B,A) = 0
     [B=4] 
* CE 57: loop_cont_eval_decode_mcu_bb4_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_decode_mcu_bb4_in/2 
* CEs [56] --> Loop 30 
* CEs [57] --> Loop 31 

#### Loops of loop_cont_eval_decode_mcu_bb4_in/2 
* Loop 30: loop_cont_eval_decode_mcu_bb4_in(B,A) [B=4] 
* Loop 31: loop_cont_eval_decode_mcu_bb4_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_decode_mcu_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_decode_mcu_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_decode_mcu_bb4_in(B,A) 
* [31]
* [30]


### Merging Chains  loop_cont_eval_decode_mcu_bb4_in/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_decode_mcu_16/3 
* CE 7 is refined into CE [58,59,60,61] 


#### Refined cost equations eval_decode_mcu_16/3 
* CE 58: eval_decode_mcu_16(V_27,V_30,B) = 1+ eval_decode_mcu_bb4_in(V_30,V_27,C,D):1+ loop_cont_eval_decode_mcu_bb4_in(E,B):1
     [E=2,D=2,C=0] 
* CE 59: eval_decode_mcu_16(V_27,V_30,B) = 1+ eval_decode_mcu_bb4_in(V_30,V_27,C,D):2+ loop_cont_eval_decode_mcu_bb4_in(E,B):2
     [E=4,D=4,C=0] 
* CE 60: eval_decode_mcu_16(V_27,V_30,B) = 1+ eval_decode_mcu_bb4_in(V_30,V_27,C,D):3
     [C=0] 
* CE 61: eval_decode_mcu_16(V_27,V_30,B) = 1+ eval_decode_mcu_bb4_in(V_30,V_27,C,D):4
     [C=0] 

### Cost equations --> "Loop" of eval_decode_mcu_16/3 
* CEs [60,61] --> Loop 32 
* CEs [58,59] --> Loop 33 

#### Loops of eval_decode_mcu_16/3 
* Loop 32: eval_decode_mcu_16(V_27,V_30,B) [] 
* Loop 33: eval_decode_mcu_16(V_27,V_30,B) [] 

### Ranking functions of CR eval_decode_mcu_16(V_27,V_30,B) 

#### Partial ranking functions of CR eval_decode_mcu_16(V_27,V_30,B) 


### Resulting Chains:eval_decode_mcu_16(V_27,V_30,B) 
* [33]
* [32]...


### Merging Chains  eval_decode_mcu_16/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_decode_mcu_5/1 
* CE 5 is refined into CE [62,63] 
* CE 6 is refined into CE [64] 


#### Refined cost equations eval_decode_mcu_5/1 
* CE 62: eval_decode_mcu_5(B) = 0+ eval_decode_mcu_16(C,D,B):1
     [] 
* CE 63: eval_decode_mcu_5(B) = 0+ eval_decode_mcu_16(C,D,B):2
     [] 
* CE 64: eval_decode_mcu_5(B) = 0
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_5/1 
* CEs [62,64] --> Loop 34 
* CEs [63] --> Loop 35 

#### Loops of eval_decode_mcu_5/1 
* Loop 34: eval_decode_mcu_5(B) [] 
* Loop 35: eval_decode_mcu_5(B) [] 

### Ranking functions of CR eval_decode_mcu_5(B) 

#### Partial ranking functions of CR eval_decode_mcu_5(B) 


### Resulting Chains:eval_decode_mcu_5(B) 
* [35]...
* [34]


### Merging Chains  eval_decode_mcu_5/1 into  External patterns of execution 
* [[34]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_decode_mcu_bb0_in/1 
* CE 3 is refined into CE [65,66] 
* CE 4 is refined into CE [67,68] 


#### Refined cost equations eval_decode_mcu_bb0_in/1 
* CE 65: eval_decode_mcu_bb0_in(B) = 0+ eval_decode_mcu_5(B):1
     [] 
* CE 66: eval_decode_mcu_bb0_in(B) = 0+ eval_decode_mcu_5(B):2
     [] 
* CE 67: eval_decode_mcu_bb0_in(B) = 0+ eval_decode_mcu_16(C,D,B):1
     [] 
* CE 68: eval_decode_mcu_bb0_in(B) = 0+ eval_decode_mcu_16(C,D,B):2
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_bb0_in/1 
* CEs [66,68] --> Loop 36 
* CEs [65,67] --> Loop 37 

#### Loops of eval_decode_mcu_bb0_in/1 
* Loop 36: eval_decode_mcu_bb0_in(B) [] 
* Loop 37: eval_decode_mcu_bb0_in(B) [] 

### Ranking functions of CR eval_decode_mcu_bb0_in(B) 

#### Partial ranking functions of CR eval_decode_mcu_bb0_in(B) 


### Resulting Chains:eval_decode_mcu_bb0_in(B) 
* [37]
* [36]...


### Merging Chains  eval_decode_mcu_bb0_in/1 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_decode_mcu_start/1 
* CE 2 is refined into CE [69,70] 


#### Refined cost equations eval_decode_mcu_start/1 
* CE 69: eval_decode_mcu_start(B) = 0+ eval_decode_mcu_bb0_in(B):1
     [] 
* CE 70: eval_decode_mcu_start(B) = 0+ eval_decode_mcu_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_start/1 
* CEs [70] --> Loop 38 
* CEs [69] --> Loop 39 

#### Loops of eval_decode_mcu_start/1 
* Loop 38: eval_decode_mcu_start(B) [] 
* Loop 39: eval_decode_mcu_start(B) [] 

### Ranking functions of CR eval_decode_mcu_start(B) 

#### Partial ranking functions of CR eval_decode_mcu_start(B) 


### Resulting Chains:eval_decode_mcu_start(B) 
* [39]
* [38]...


### Merging Chains  eval_decode_mcu_start/1 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb21_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_6',V_get_buffer_6',V_k_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1
#### Cost of phase [18]:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb21_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_6',V_get_buffer_6',V_k_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(18)+0
#### Cost of phase [18]:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb21_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_6',V_get_buffer_6',V_k_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(18)+0
#### Cost of phase [18]:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb21_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_6',V_get_buffer_6',V_k_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(18)+0
#### Cost of phase [18]:eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb21_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_6',V_get_buffer_6',V_k_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(18)+0
#### Cost of chains of eval_decode_mcu_bb21_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_6,V_get_buffer_6,V_k_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [63>=V_k_0,B>=2,3>=B] 

* Chain [[18],21]: 1*it(18)+0
  with precondition: [B=2,63>=V_k_0] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=3,V_bits_left_0=C,V_get_buffer_0=D,V_blkn_0=E,V_bits_left_1=F,V_get_buffer_1=G,V_bits_left_3=H,V_get_buffer_3=I,V_s_0=J,V_bits_left_4=K,V_get_buffer_4=L,V_bits_left_5=M,V_get_buffer_5=N,O=R,P=S,63>=V_k_0,Q>=64] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=3,V_bits_left_0=C,V_get_buffer_0=D,V_blkn_0=E,V_bits_left_1=F,V_get_buffer_1=G,V_bits_left_3=H,V_get_buffer_3=I,V_s_0=J,V_bits_left_4=K,V_get_buffer_4=L,V_bits_left_5=M,V_get_buffer_5=N,63>=V_k_0,63>=Q] 

* Chain [21]: 0
  with precondition: [B=2,63>=V_k_0] 

* Chain [19]: 0
  with precondition: [B=3,C=V_bits_left_0,D=V_get_buffer_0,E=V_blkn_0,F=V_bits_left_1,G=V_get_buffer_1,H=V_bits_left_3,I=V_get_buffer_3,J=V_s_0,K=V_bits_left_4,L=V_get_buffer_4,M=V_bits_left_5,N=V_get_buffer_5,O=V_bits_left_6,P=V_get_buffer_6,V_k_0=Q,63>=V_k_0] 


#### Cost of loops [22] 

 * loop 22:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb40_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_13',V_get_buffer_13',V_k_2',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1
#### Cost of phase [22]:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb40_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_13',V_get_buffer_13',V_k_2',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(22)+0
#### Cost of phase [22]:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb40_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_13',V_get_buffer_13',V_k_2',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(22)+0
#### Cost of phase [22]:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb40_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_13',V_get_buffer_13',V_k_2',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(22)+0
#### Cost of phase [22]:eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_decode_mcu_bb40_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_s_0',V_bits_left_4',V_get_buffer_4',V_bits_left_5',V_get_buffer_5',V_bits_left_13',V_get_buffer_13',V_k_2',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(22)+0
#### Cost of chains of eval_decode_mcu_bb40_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_s_0,V_bits_left_4,V_get_buffer_4,V_bits_left_5,V_get_buffer_5,V_bits_left_13,V_get_buffer_13,V_k_2,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [63>=V_k_2,B>=2,3>=B] 

* Chain [[22],25]: 1*it(22)+0
  with precondition: [B=2,63>=V_k_2] 

* Chain [[22],24]: 1*it(22)+0
  with precondition: [B=3,V_bits_left_0=C,V_get_buffer_0=D,V_blkn_0=E,V_bits_left_1=F,V_get_buffer_1=G,V_bits_left_3=H,V_get_buffer_3=I,V_s_0=J,V_bits_left_4=K,V_get_buffer_4=L,V_bits_left_5=M,V_get_buffer_5=N,63>=V_k_2] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=3,V_bits_left_0=C,V_get_buffer_0=D,V_blkn_0=E,V_bits_left_1=F,V_get_buffer_1=G,V_bits_left_3=H,V_get_buffer_3=I,V_s_0=J,V_bits_left_4=K,V_get_buffer_4=L,V_bits_left_5=M,V_get_buffer_5=N,63>=V_k_2] 

* Chain [25]: 0
  with precondition: [B=2,63>=V_k_2] 

* Chain [23]: 0
  with precondition: [B=3,C=V_bits_left_0,D=V_get_buffer_0,E=V_blkn_0,F=V_bits_left_1,G=V_get_buffer_1,H=V_bits_left_3,I=V_get_buffer_3,J=V_s_0,K=V_bits_left_4,L=V_get_buffer_4,M=V_bits_left_5,N=V_get_buffer_5,63>=V_k_2] 


#### Cost of loops [27] 

 * loop 27:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*s(12)+0
#### Cost of phase [27]:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*s(13)+0
#### Cost of phase [27]:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*s(13)+0
#### Cost of phase [27]:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*s(13)+0
#### Cost of phase [27]:eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*s(13)+0
#### Cost of chains of eval_decode_mcu_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B):
* Chain [[27]]...: 1*s(13)+0
  with precondition: [] 

* Chain [[27],29]: 2*aux(6)+0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [[27],28]: 1*s(13)+0
  with precondition: [B=4,V_blkn_0>=0] 

* Chain [[27],26]...: 2*aux(7)+0
  with precondition: [V_blkn_0>=0] 

* Chain [29]: 1*aux(6)+0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [28]: 0
  with precondition: [B=4,V_blkn_0>=0] 

* Chain [26]...: 1*aux(7)+0
  with precondition: [V_blkn_0>=0] 


#### Cost of chains of loop_cont_eval_decode_mcu_bb4_in(B,A):
* Chain [31]: 0
  with precondition: [B=2] 

* Chain [30]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_decode_mcu_16(V_27,V_30,B):
* Chain [33]: 1*aux(11)+0
  with precondition: [] 

* Chain [32]...: 1*aux(12)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_5(B):
* Chain [35]...: 1*s(35)+0
  with precondition: [] 

* Chain [34]: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_bb0_in(B):
* Chain [37]: 1*aux(14)+0
  with precondition: [] 

* Chain [36]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_start(B):
* Chain [39]: 1*s(41)+0
  with precondition: [] 

* Chain [38]...: 1*s(42)+0
  with precondition: [] 


Closed-form bounds of eval_decode_mcu_start(B): 
-------------------------------------
* Chain [39] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decode_mcu_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 1163 ms.
* Invariants computed in 334 ms.
   - Backward Invariants 202 ms.
   - Transitive Invariants 49 ms.
* Refinement performed in 713 ms.
* Termination proved in 37 ms.
* Upper bounds computed in 426 ms.
   - Equation cost structures 133 ms.
   - Phase cost structures 112 ms.
   - Chain cost structures 225 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 3052 ms.

