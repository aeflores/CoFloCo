WARNING: Excluded non-linear constraints:[D=4*A*B]
Warning: Ignored call to eval_susan_principle_stop/1 in equation loop_cont_eval_susan_principle_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_susan_principle_bb2_in/8,eval_susan_principle_bb5_in/8]
1. recursive  : [eval_susan_principle_bb1_in/4,loop_cont_eval_susan_principle_bb2_in/5]
2. non_recursive  : [loop_cont_eval_susan_principle_bb1_in/2]
3. non_recursive  : [eval_susan_principle_4/3]
4. non_recursive  : [eval_susan_principle_3/4]
5. non_recursive  : [eval_susan_principle_bb0_in/3]
6. non_recursive  : [eval_susan_principle_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_susan_principle_bb2_in/8
1. SCC is partially evaluated into eval_susan_principle_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_susan_principle_4/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_susan_principle_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_susan_principle_bb2_in/8 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_susan_principle_bb2_in/8 
* CE 8: eval_susan_principle_bb2_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+4,D+3>=A,D>=3,C+1=F,E=2] 
* CE 9: eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) = 1+ eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,F,G,C,D,E)
     [V_x_size>=V_j_0+4,V_y_size>=V_i_0+4,V_j_0>=3,V_j_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_susan_principle_bb2_in/8 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_susan_principle_bb2_in/8 
* Loop 7: eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E)->  eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0',B',C,D,E)
                  [V_x_size>=V_j_0+4,V_y_size>=V_i_0+4,V_j_0>=3,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 8: eval_susan_principle_bb2_in(A,B,C,D,E,A,B,F) [B>=C+4,D+3>=A,D>=3,C+1=F,E=2] 

### Ranking functions of CR eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [7]: [V_x_size-V_j_0-3]

#### Partial ranking functions of CR eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_x_size-V_j_0-3


### Resulting Chains:eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* [[7],8]
* [8]


### Merging Chains  eval_susan_principle_bb2_in/8 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_susan_principle_bb1_in/4 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 


#### Refined cost equations eval_susan_principle_bb1_in/4 
* CE 10: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) = 0
     [V_i_0+3>=V_y_size,B=3] 
* CE 11: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) = 2+ eval_susan_principle_bb2_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):1+ eval_susan_principle_bb1_in(V_x_size,V_y_size,F,G)
     [V_y_size>=F+3,6>=V_x_size,F=C+1,F=V_i_0+1,G=3,E=2,D=3,B=3] 
* CE 12: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) = 2+ eval_susan_principle_bb2_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):2+ eval_susan_principle_bb1_in(V_x_size,V_y_size,F,G)
     [V_y_size>=F+3,V_x_size>=7,F=C+1,F=V_i_0+1,G=3,E=2,D=3,B=3] 

### Cost equations --> "Loop" of eval_susan_principle_bb1_in/4 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of eval_susan_principle_bb1_in/4 
* Loop 9: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B)->  eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0',B')
                  [V_y_size>=V_i_0+4,V_x_size>=7,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 10: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B)->  eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0',B')
                  [V_y_size>=V_i_0+4,6>=V_x_size,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 11: eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) [V_i_0+3>=V_y_size,B=3] 

### Ranking functions of CR eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) 
* RF of phase [9]: [V_y_size-V_i_0-3]
* RF of phase [10]: [V_y_size-V_i_0-3]

#### Partial ranking functions of CR eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_y_size-V_i_0-3
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_y_size-V_i_0-3


### Resulting Chains:eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) 
* [[10],11]
* [[9],11]
* [11]


### Merging Chains  eval_susan_principle_bb1_in/4 into  External patterns of execution 
* [[11,[10]]] --> 1 
* [[11,[9]]] --> 2 
* [[11]] --> 3 


### Specialization of cost equations eval_susan_principle_4/3 
* CE 3 is refined into CE [13,14,15] 


#### Refined cost equations eval_susan_principle_4/3 
* CE 13: eval_susan_principle_4(V_x_size,V_y_size,B) = 1+ eval_susan_principle_bb1_in(V_x_size,V_y_size,C,D):1
     [V_y_size>=7,6>=V_x_size,D=3,C=3] 
* CE 14: eval_susan_principle_4(V_x_size,V_y_size,B) = 1+ eval_susan_principle_bb1_in(V_x_size,V_y_size,C,D):2
     [V_y_size>=7,V_x_size>=7,D=3,C=3] 
* CE 15: eval_susan_principle_4(V_x_size,V_y_size,B) = 1+ eval_susan_principle_bb1_in(V_x_size,V_y_size,C,D):3
     [6>=V_y_size,D=3,C=3] 

### Cost equations --> "Loop" of eval_susan_principle_4/3 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_susan_principle_4/3 
* Loop 12: eval_susan_principle_4(V_x_size,V_y_size,B) [V_y_size>=7,V_x_size>=7] 
* Loop 13: eval_susan_principle_4(V_x_size,V_y_size,B) [6>=V_y_size] 
* Loop 14: eval_susan_principle_4(V_x_size,V_y_size,B) [V_y_size>=7,6>=V_x_size] 

### Ranking functions of CR eval_susan_principle_4(V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_principle_4(V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_principle_4(V_x_size,V_y_size,B) 
* [14]
* [13]
* [12]


### Merging Chains  eval_susan_principle_4/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 


### Specialization of cost equations eval_susan_principle_start/4 
* CE 2 is refined into CE [16,17,18] 


#### Refined cost equations eval_susan_principle_start/4 
* CE 16: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_principle_4(V_x_size,V_y_size,B):1
     [V_y_size>=7,6>=V_x_size] 
* CE 17: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_principle_4(V_x_size,V_y_size,B):2
     [6>=V_y_size] 
* CE 18: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_principle_4(V_x_size,V_y_size,B):3
     [V_y_size>=7,V_x_size>=7] 

### Cost equations --> "Loop" of eval_susan_principle_start/4 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_susan_principle_start/4 
* Loop 15: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=7,V_x_size>=7] 
* Loop 16: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) [6>=V_y_size] 
* Loop 17: eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=7,6>=V_x_size] 

### Ranking functions of CR eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B) 
* [17]
* [16]
* [15]


### Merging Chains  eval_susan_principle_start/4 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_principle_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [7]:eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_principle_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1*it(7)+0
  Such that:it(7) =< V_x_size-V_j_0
it(7) =< V_x_size-V_j_0-V_x_size'+V_j_0'

#### Cost of chains of eval_susan_principle_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_x_size-V_j_0

  with precondition: [B=2,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=3,V_y_size>=V_i_0+4,V_x_size>=V_j_0+4] 

* Chain [8]: 0
  with precondition: [B=2,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=3,V_j_0+3>=V_x_size,V_y_size>=V_i_0+4] 


#### Cost of loops [10] 

 * loop 10:eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) -> [eval_susan_principle_bb1_in(V_x_size',V_y_size',V_i_0',B')] 
2
#### Cost of phase [10]:eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) -> [eval_susan_principle_bb1_in(V_x_size',V_y_size',V_i_0',B')] 
2*it(10)+0
  Such that:it(10) =< V_y_size-V_i_0
it(10) =< V_y_size-V_i_0-V_y_size'+V_i_0'

#### Cost of loops [9] 

 * loop 9:eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) -> [eval_susan_principle_bb1_in(V_x_size',V_y_size',V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_x_size'

#### Cost of phase [9]:eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B) -> [eval_susan_principle_bb1_in(V_x_size',V_y_size',V_i_0',B')] 
2*it(9)+1*s(3)+0
  Such that:aux(1) =< V_x_size
it(9) =< V_y_size-V_i_0
it(9) =< V_y_size-V_i_0-V_y_size'+V_i_0'
s(3) =< it(9)*aux(1)

#### Cost of chains of eval_susan_principle_bb1_in(V_x_size,V_y_size,V_i_0,B):
* Chain [[10],11]: 2*it(10)+0
  Such that:it(10) =< V_y_size-V_i_0

  with precondition: [B=3,6>=V_x_size,V_i_0>=3,V_y_size>=V_i_0+4] 

* Chain [[9],11]: 2*it(9)+1*s(3)+0
  Such that:aux(1) =< V_x_size
it(9) =< V_y_size-V_i_0
s(3) =< it(9)*aux(1)

  with precondition: [B=3,V_x_size>=7,V_i_0>=3,V_y_size>=V_i_0+4] 

* Chain [11]: 0
  with precondition: [B=3,V_i_0>=3,V_i_0+3>=V_y_size] 


#### Cost of chains of eval_susan_principle_4(V_x_size,V_y_size,B):
* Chain [14]: 2*s(4)+1
  Such that:s(4) =< V_y_size

  with precondition: [6>=V_x_size,V_y_size>=7] 

* Chain [13]: 1
  with precondition: [6>=V_y_size] 

* Chain [12]: 2*s(6)+1*s(7)+1
  Such that:s(5) =< V_x_size
s(6) =< V_y_size
s(7) =< s(6)*s(5)

  with precondition: [V_x_size>=7,V_y_size>=7] 


#### Cost of chains of eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B):
* Chain [17]: 2*s(8)+1
  Such that:s(8) =< V_y_size

  with precondition: [6>=V_x_size,V_y_size>=7] 

* Chain [16]: 1
  with precondition: [6>=V_y_size] 

* Chain [15]: 2*s(10)+1*s(11)+1
  Such that:s(9) =< V_x_size
s(10) =< V_y_size
s(11) =< s(10)*s(9)

  with precondition: [V_x_size>=7,V_y_size>=7] 


Closed-form bounds of eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B): 
-------------------------------------
* Chain [17] with precondition: [6>=V_x_size,V_y_size>=7] 
    - Upper bound: 2*V_y_size+1 
    - Complexity: n 
* Chain [16] with precondition: [6>=V_y_size] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [V_x_size>=7,V_y_size>=7] 
    - Upper bound: V_y_size*V_x_size+1+2*V_y_size 
    - Complexity: n^2 

### Maximum cost of eval_susan_principle_start(V_max_no,V_x_size,V_y_size,B): nat(V_y_size)*nat(V_x_size)+nat(V_y_size)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 33 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 131 ms.

