WARNING: Excluded non-linear constraints:[255*F-255*B-C*G>=0,255*F-255*B-C*G+1=<C]
WARNING: Excluded non-linear constraints:[255*F-255*B-C*G>=0,255*F-255*B-C*G+1=< -C]
WARNING: Excluded non-linear constraints:[-255*F+255*B+C*G>=0,-255*F+255*B+C*G+1=<C]
WARNING: Excluded non-linear constraints:[-255*F+255*B+C*G>=0,-255*F+255*B+C*G+1=< -C]
Warning: Ignored call to eval_int_to_uchar_stop/1 in equation loop_cont_eval_int_to_uchar_bb8_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_int_to_uchar_bb1_in/9,eval_int_to_uchar_bb4_in/10,eval_int_to_uchar_bb6_in/11]
1. recursive  : [eval_int_to_uchar_bb8_in/5]
2. non_recursive  : [loop_cont_eval_int_to_uchar_bb8_in/2]
3. non_recursive  : [loop_cont_eval_int_to_uchar_bb1_in/6]
4. non_recursive  : [eval_int_to_uchar_bb0_in/2]
5. non_recursive  : [eval_int_to_uchar_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_int_to_uchar_bb1_in/9
1. SCC is partially evaluated into eval_int_to_uchar_bb8_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_int_to_uchar_bb1_in/6
4. SCC is partially evaluated into eval_int_to_uchar_bb0_in/2
5. SCC is partially evaluated into eval_int_to_uchar_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_int_to_uchar_bb1_in/9 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_int_to_uchar_bb1_in/9 
* CE 9: eval_int_to_uchar_bb1_in(A,B,C,D,E,A,B,F,G) = 0
     [D>=A,D>=0,B+F=C,G=0,E=3] 
* CE 10: eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) = 1+ eval_int_to_uchar_bb1_in(V_size,G,H,I,B,C,D,E,F)
     [V_size>=V_i_0+1,V_i_0>=0,V_i_0+1=I] 

### Cost equations --> "Loop" of eval_int_to_uchar_bb1_in/9 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_int_to_uchar_bb1_in/9 
* Loop 8: eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F)->  eval_int_to_uchar_bb1_in(V_size,V_min_r_0',V_max_r_0',V_i_0',B,C,D,E,F)
                  [V_size>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 9: eval_int_to_uchar_bb1_in(A,B,C,D,E,A,B,F,G) [D>=A,D>=0,B+F=C,G=0,E=3] 

### Ranking functions of CR eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) 
* RF of phase [8]: [V_size-V_i_0]

#### Partial ranking functions of CR eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_size-V_i_0


### Resulting Chains:eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) 
* [[8],9]
* [9]


### Merging Chains  eval_int_to_uchar_bb1_in/9 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[8]]] --> 2 


### Specialization of cost equations eval_int_to_uchar_bb8_in/5 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_int_to_uchar_bb8_in/5 
* CE 11: eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) = 0
     [V_i_1>=V_size,B=2] 
* CE 12: eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) = 1+ eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,C,D)
     [V_size>=V_i_1+1,V_i_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_int_to_uchar_bb8_in/5 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_int_to_uchar_bb8_in/5 
* Loop 10: eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B)->  eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1',B')
                  [V_size>=V_i_1+1,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 11: eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) [V_i_1>=V_size,B=2] 

### Ranking functions of CR eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) 
* RF of phase [10]: [V_size-V_i_1]

#### Partial ranking functions of CR eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_size-V_i_1


### Resulting Chains:eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) 
* [[10],11]
* [11]


### Merging Chains  eval_int_to_uchar_bb8_in/5 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations loop_cont_eval_int_to_uchar_bb1_in/6 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations loop_cont_eval_int_to_uchar_bb1_in/6 
* CE 13: loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) = 1+ eval_int_to_uchar_bb8_in(A,B,C,D,J):1
     [D>=A,J=2,I=3] 
* CE 14: loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) = 1+ eval_int_to_uchar_bb8_in(A,B,C,D,J):2
     [A>=D+1,J=2,I=3] 

### Cost equations --> "Loop" of loop_cont_eval_int_to_uchar_bb1_in/6 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of loop_cont_eval_int_to_uchar_bb1_in/6 
* Loop 12: loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) [A>=D+1,I=3] 
* Loop 13: loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) [D>=A,I=3] 

### Ranking functions of CR loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E) 
* [13]
* [12]


### Merging Chains  loop_cont_eval_int_to_uchar_bb1_in/6 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_int_to_uchar_bb0_in/2 
* CE 3 is refined into CE [15,16] 


#### Refined cost equations eval_int_to_uchar_bb0_in/2 
* CE 15: eval_int_to_uchar_bb0_in(V_size,B) = 1+ eval_int_to_uchar_bb1_in(V_size,C,D,E,F,V_size,C,G,H):1+ loop_cont_eval_int_to_uchar_bb1_in(I,V_size,C,J,K,B):1
     [0>=V_size,C+J=D,C+G=D,K=0,I=3,H=0,F=3,E=0] 
* CE 16: eval_int_to_uchar_bb0_in(V_size,B) = 1+ eval_int_to_uchar_bb1_in(V_size,C,D,E,F,V_size,G,H,I):2+ loop_cont_eval_int_to_uchar_bb1_in(J,V_size,G,H,K,B):2
     [V_size>=1,K=0,J=3,I=0,F=3,E=0] 

### Cost equations --> "Loop" of eval_int_to_uchar_bb0_in/2 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_int_to_uchar_bb0_in/2 
* Loop 14: eval_int_to_uchar_bb0_in(V_size,B) [V_size>=1] 
* Loop 15: eval_int_to_uchar_bb0_in(V_size,B) [0>=V_size] 

### Ranking functions of CR eval_int_to_uchar_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_int_to_uchar_bb0_in(V_size,B) 


### Resulting Chains:eval_int_to_uchar_bb0_in(V_size,B) 
* [15]
* [14]


### Merging Chains  eval_int_to_uchar_bb0_in/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_int_to_uchar_start/2 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_int_to_uchar_start/2 
* CE 17: eval_int_to_uchar_start(V_size,B) = 0+ eval_int_to_uchar_bb0_in(V_size,B):1
     [0>=V_size] 
* CE 18: eval_int_to_uchar_start(V_size,B) = 0+ eval_int_to_uchar_bb0_in(V_size,B):2
     [V_size>=1] 

### Cost equations --> "Loop" of eval_int_to_uchar_start/2 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_int_to_uchar_start/2 
* Loop 16: eval_int_to_uchar_start(V_size,B) [V_size>=1] 
* Loop 17: eval_int_to_uchar_start(V_size,B) [0>=V_size] 

### Ranking functions of CR eval_int_to_uchar_start(V_size,B) 

#### Partial ranking functions of CR eval_int_to_uchar_start(V_size,B) 


### Resulting Chains:eval_int_to_uchar_start(V_size,B) 
* [17]
* [16]


### Merging Chains  eval_int_to_uchar_start/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) -> [eval_int_to_uchar_bb1_in(V_size',V_min_r_0',V_max_r_0',V_i_0',B',C',D',E',F')] 
1
#### Cost of phase [8]:eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F) -> [eval_int_to_uchar_bb1_in(V_size',V_min_r_0',V_max_r_0',V_i_0',B',C',D',E',F')] 
1*it(8)+0
  Such that:it(8) =< V_size-V_i_0
it(8) =< V_size-V_i_0-V_size'+V_i_0'

#### Cost of chains of eval_int_to_uchar_bb1_in(V_size,V_min_r_0,V_max_r_0,V_i_0,B,C,D,E,F):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_size-V_i_0

  with precondition: [B=3,F=0,V_size=C,V_i_0>=0,V_size>=V_i_0+1] 

* Chain [9]: 0
  with precondition: [B=3,F=0,V_size=C,V_min_r_0=D,V_min_r_0+E=V_max_r_0,V_i_0>=0,V_i_0>=V_size] 


#### Cost of loops [10] 

 * loop 10:eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) -> [eval_int_to_uchar_bb8_in(V_size',V_min_r_0',V_20',V_i_1',B')] 
1
#### Cost of phase [10]:eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B) -> [eval_int_to_uchar_bb8_in(V_size',V_min_r_0',V_20',V_i_1',B')] 
1*it(10)+0
  Such that:it(10) =< V_size-V_i_1
it(10) =< V_size-V_i_1-V_size'+V_i_1'

#### Cost of chains of eval_int_to_uchar_bb8_in(V_size,V_min_r_0,V_20,V_i_1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_size-V_i_1

  with precondition: [B=2,V_size>=V_i_1+1] 

* Chain [11]: 0
  with precondition: [B=2,V_i_1>=V_size] 


#### Cost of chains of loop_cont_eval_int_to_uchar_bb1_in(I,A,B,C,D,E):
* Chain [13]: 1
  with precondition: [I=3,D>=A] 

* Chain [12]: 1*s(1)+1
  Such that:s(1) =< A-D

  with precondition: [I=3,A>=D+1] 


#### Cost of chains of eval_int_to_uchar_bb0_in(V_size,B):
* Chain [15]: 2
  with precondition: [0>=V_size] 

* Chain [14]: 2*s(2)+2
  Such that:aux(1) =< V_size
s(2) =< aux(1)

  with precondition: [V_size>=1] 


#### Cost of chains of eval_int_to_uchar_start(V_size,B):
* Chain [17]: 2
  with precondition: [0>=V_size] 

* Chain [16]: 2*s(5)+2
  Such that:s(4) =< V_size
s(5) =< s(4)

  with precondition: [V_size>=1] 


Closed-form bounds of eval_int_to_uchar_start(V_size,B): 
-------------------------------------
* Chain [17] with precondition: [0>=V_size] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [16] with precondition: [V_size>=1] 
    - Upper bound: 2*V_size+2 
    - Complexity: n 

### Maximum cost of eval_int_to_uchar_start(V_size,B): nat(V_size)*2+2 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 33 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 21 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 124 ms.

