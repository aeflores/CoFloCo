Warning: Ignored call to eval_op_show_return_width_stop/1 in equation eval_op_show_return_width_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_op_show_return_width_15/7,eval_op_show_return_width_16/7,eval_op_show_return_width_bb3_in/7]
1. non_recursive  : [eval_op_show_return_width_bb7_in/1]
2. non_recursive  : [eval_op_show_return_width_22/1]
3. non_recursive  : [eval_op_show_return_width_21/2]
4. non_recursive  : [eval_op_show_return_width_20/2]
5. non_recursive  : [eval_op_show_return_width_19/3]
6. non_recursive  : [loop_cont_eval_op_show_return_width_bb3_in/4]
7. non_recursive  : [eval_op_show_return_width_14/5]
8. non_recursive  : [eval_op_show_return_width_13/4]
9. non_recursive  : [eval_op_show_return_width_7/3]
10. non_recursive  : [eval_op_show_return_width_6/2]
11. non_recursive  : [eval_op_show_return_width_5/2]
12. non_recursive  : [eval_op_show_return_width_4/2]
13. non_recursive  : [eval_op_show_return_width_3/3]
14. non_recursive  : [eval_op_show_return_width_1/2]
15. non_recursive  : [eval_op_show_return_width_0/1]
16. non_recursive  : [eval_op_show_return_width_bb0_in/1]
17. non_recursive  : [eval_op_show_return_width_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_op_show_return_width_bb3_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_op_show_return_width_bb3_in/4
7. SCC is partially evaluated into eval_op_show_return_width_14/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_op_show_return_width_7/3
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_op_show_return_width_5/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_op_show_return_width_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_op_show_return_width_bb3_in/7 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations eval_op_show_return_width_bb3_in/7 
* CE 14: eval_op_show_return_width_bb3_in(A,B,C,D,E,A,B) = 0
     [C>=D,E=3] 
* CE 15: eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) = 0
     [V_dcount_0>=V_29+1,B=2] 
* CE 16: eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) = 1+ eval_op_show_return_width_bb3_in(V_0,V_23,V_29,E,B,C,D)
     [V_dcount_0>=V_29+1,V_dcount_0=E+1] 

### Cost equations --> "Loop" of eval_op_show_return_width_bb3_in/7 
* CEs [16] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of eval_op_show_return_width_bb3_in/7 
* Loop 10: eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D)->  eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0',B,C,D)
                  [V_dcount_0>=V_29+1,V_dcount_0=V_dcount_0'+1] 
* Loop 11: eval_op_show_return_width_bb3_in(A,B,C,D,E,A,B) [C>=D,E=3] 
* Loop 12: eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) [V_dcount_0>=V_29+1,B=2] 

### Ranking functions of CR eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) 
* RF of phase [10]: [-V_29+V_dcount_0]

#### Partial ranking functions of CR eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_29+V_dcount_0


### Resulting Chains:eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_op_show_return_width_bb3_in/7 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11]] --> 2 
* [[11,[10]]] --> 3 


### Specialization of cost equations loop_cont_eval_op_show_return_width_bb3_in/4 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations loop_cont_eval_op_show_return_width_bb3_in/4 
* CE 17: loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) = 0
     [D=3] 
* CE 18: loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_op_show_return_width_bb3_in/4 
* CEs [17] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of loop_cont_eval_op_show_return_width_bb3_in/4 
* Loop 13: loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) [D=3] 
* Loop 14: loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_op_show_return_width_bb3_in/4 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_op_show_return_width_14/5 
* CE 7 is refined into CE [19] 
* CE 8 is refined into CE [20,21,22] 


#### Refined cost equations eval_op_show_return_width_14/5 
* CE 19: eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) = 0
     [] 
* CE 20: eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) = 1+ eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_30,C,D,E):1+ loop_cont_eval_op_show_return_width_bb3_in(F,D,E,B):1
     [V_30>=V_29+1,F=2,C=2] 
* CE 21: eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) = 1+ eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_30,C,V_0,V_23):2+ loop_cont_eval_op_show_return_width_bb3_in(D,V_0,V_23,B):2
     [V_29>=V_30,D=3,C=3] 
* CE 22: eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) = 1+ eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_30,C,V_0,V_23):3+ loop_cont_eval_op_show_return_width_bb3_in(D,V_0,V_23,B):2
     [V_30>=V_29+1,D=3,C=3] 

### Cost equations --> "Loop" of eval_op_show_return_width_14/5 
* CEs [19,20,21,22] --> Loop 15 

#### Loops of eval_op_show_return_width_14/5 
* Loop 15: eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) [] 

### Ranking functions of CR eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) 

#### Partial ranking functions of CR eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) 


### Resulting Chains:eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B) 
* [15]


### Merging Chains  eval_op_show_return_width_14/5 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_op_show_return_width_7/3 
* CE 5 is refined into CE [23] 
* CE 6 is refined into CE [24] 


#### Refined cost equations eval_op_show_return_width_7/3 
* CE 23: eval_op_show_return_width_7(V_0,V_17,B) = 0
     [] 
* CE 24: eval_op_show_return_width_7(V_0,V_17,B) = 0+ eval_op_show_return_width_14(V_0,C,D,E,B):1
     [] 

### Cost equations --> "Loop" of eval_op_show_return_width_7/3 
* CEs [23,24] --> Loop 16 

#### Loops of eval_op_show_return_width_7/3 
* Loop 16: eval_op_show_return_width_7(V_0,V_17,B) [] 

### Ranking functions of CR eval_op_show_return_width_7(V_0,V_17,B) 

#### Partial ranking functions of CR eval_op_show_return_width_7(V_0,V_17,B) 


### Resulting Chains:eval_op_show_return_width_7(V_0,V_17,B) 
* [16]


### Merging Chains  eval_op_show_return_width_7/3 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_op_show_return_width_5/2 
* CE 3 is refined into CE [25] 
* CE 4 is refined into CE [26] 


#### Refined cost equations eval_op_show_return_width_5/2 
* CE 25: eval_op_show_return_width_5(V_0,B) = 0
     [] 
* CE 26: eval_op_show_return_width_5(V_0,B) = 0+ eval_op_show_return_width_7(V_0,C,B):1
     [] 

### Cost equations --> "Loop" of eval_op_show_return_width_5/2 
* CEs [25,26] --> Loop 17 

#### Loops of eval_op_show_return_width_5/2 
* Loop 17: eval_op_show_return_width_5(V_0,B) [] 

### Ranking functions of CR eval_op_show_return_width_5(V_0,B) 

#### Partial ranking functions of CR eval_op_show_return_width_5(V_0,B) 


### Resulting Chains:eval_op_show_return_width_5(V_0,B) 
* [17]


### Merging Chains  eval_op_show_return_width_5/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_op_show_return_width_start/2 
* CE 2 is refined into CE [27] 


#### Refined cost equations eval_op_show_return_width_start/2 
* CE 27: eval_op_show_return_width_start(V_npop,B) = 0+ eval_op_show_return_width_5(C,B):1
     [] 

### Cost equations --> "Loop" of eval_op_show_return_width_start/2 
* CEs [27] --> Loop 18 

#### Loops of eval_op_show_return_width_start/2 
* Loop 18: eval_op_show_return_width_start(V_npop,B) [] 

### Ranking functions of CR eval_op_show_return_width_start(V_npop,B) 

#### Partial ranking functions of CR eval_op_show_return_width_start(V_npop,B) 


### Resulting Chains:eval_op_show_return_width_start(V_npop,B) 
* [18]


### Merging Chains  eval_op_show_return_width_start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) -> [eval_op_show_return_width_bb3_in(V_0',V_23',V_29',V_dcount_0',B',C',D')] 
1
#### Cost of phase [10]:eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) -> [eval_op_show_return_width_bb3_in(V_0',V_23',V_29',V_dcount_0',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< -V_29+V_dcount_0
it(10) =< -V_29+V_dcount_0+V_29'-V_dcount_0'

#### Cost of phase [10]:eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D) -> [eval_op_show_return_width_bb3_in(V_0',V_23',V_29',V_dcount_0',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< -V_29+V_dcount_0
it(10) =< -V_29+V_dcount_0+V_29'-V_dcount_0'

#### Cost of chains of eval_op_show_return_width_bb3_in(V_0,V_23,V_29,V_dcount_0,B,C,D):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -V_29+V_dcount_0

  with precondition: [B=2,V_dcount_0>=V_29+2] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_29+V_dcount_0

  with precondition: [B=3,V_0=C,V_23=D,V_dcount_0>=V_29+1] 

* Chain [12]: 0
  with precondition: [B=2,V_dcount_0>=V_29+1] 

* Chain [11]: 0
  with precondition: [B=3,C=V_0,D=V_23,V_29>=V_dcount_0] 


#### Cost of chains of loop_cont_eval_op_show_return_width_bb3_in(D,A,B,C):
* Chain [14]: 0
  with precondition: [D=2] 

* Chain [13]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_op_show_return_width_14(V_0,V_23,V_29,V_30,B):
* Chain [15]: 2*s(2)+1
  Such that:aux(1) =< -V_29+V_30
s(2) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_op_show_return_width_7(V_0,V_17,B):
* Chain [16]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_op_show_return_width_5(V_0,B):
* Chain [17]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_op_show_return_width_start(V_npop,B):
* Chain [18]: 1*s(7)+0
  with precondition: [] 


Closed-form bounds of eval_op_show_return_width_start(V_npop,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_op_show_return_width_start(V_npop,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 75 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 54 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 260 ms.

