Warning: Ignored call to eval_free_side_queues_stop/1 in equation loop_cont_eval_free_side_queues_bb4_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_free_side_queues_0/1,eval_free_side_queues_1/1,eval_free_side_queues_bb1_in/1]
1. recursive  : [eval_free_side_queues_4/1,eval_free_side_queues_5/1,eval_free_side_queues_bb4_in/1]
2. non_recursive  : [loop_cont_eval_free_side_queues_bb4_in/2]
3. non_recursive  : [loop_cont_eval_free_side_queues_bb1_in/2]
4. non_recursive  : [eval_free_side_queues_bb0_in/1]
5. non_recursive  : [eval_free_side_queues_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_free_side_queues_bb1_in/1
1. SCC is partially evaluated into eval_free_side_queues_bb4_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_free_side_queues_bb1_in/2
4. SCC is partially evaluated into eval_free_side_queues_bb0_in/1
5. SCC is partially evaluated into eval_free_side_queues_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_free_side_queues_bb1_in/1 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_free_side_queues_bb1_in/1 
* CE 9: eval_free_side_queues_bb1_in(B) = 0
     [B=3] 
* CE 10: eval_free_side_queues_bb1_in(B) = 1+ eval_free_side_queues_bb1_in(B)
     [] 

### Cost equations --> "Loop" of eval_free_side_queues_bb1_in/1 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_free_side_queues_bb1_in/1 
* Loop 8: eval_free_side_queues_bb1_in(B)->  eval_free_side_queues_bb1_in(B)
                  [] 
* Loop 9: eval_free_side_queues_bb1_in(B) [B=3] 

### Ranking functions of CR eval_free_side_queues_bb1_in(B) 

#### Partial ranking functions of CR eval_free_side_queues_bb1_in(B) 


### Resulting Chains:eval_free_side_queues_bb1_in(B) 
* [[8]]...
* [[8],9]
* [9]


### Merging Chains  eval_free_side_queues_bb1_in/1 into  External patterns of execution 
* [[9],[9,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_free_side_queues_bb4_in/1 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_free_side_queues_bb4_in/1 
* CE 11: eval_free_side_queues_bb4_in(B) = 0
     [B=2] 
* CE 12: eval_free_side_queues_bb4_in(B) = 1+ eval_free_side_queues_bb4_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_free_side_queues_bb4_in/1 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_free_side_queues_bb4_in/1 
* Loop 10: eval_free_side_queues_bb4_in(B)->  eval_free_side_queues_bb4_in(B')
                  [B'=2,B=2] 
* Loop 11: eval_free_side_queues_bb4_in(B) [B=2] 

### Ranking functions of CR eval_free_side_queues_bb4_in(B) 

#### Partial ranking functions of CR eval_free_side_queues_bb4_in(B) 


### Resulting Chains:eval_free_side_queues_bb4_in(B) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_free_side_queues_bb4_in/1 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[[10]]] --> 2 


### Specialization of cost equations loop_cont_eval_free_side_queues_bb1_in/2 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations loop_cont_eval_free_side_queues_bb1_in/2 
* CE 13: loop_cont_eval_free_side_queues_bb1_in(C,A) = 1+ eval_free_side_queues_bb4_in(D):1
     [D=2,C=3] 
* CE 14: loop_cont_eval_free_side_queues_bb1_in(C,A) = 1+ eval_free_side_queues_bb4_in(D):2
     [D=2,C=3] 

### Cost equations --> "Loop" of loop_cont_eval_free_side_queues_bb1_in/2 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of loop_cont_eval_free_side_queues_bb1_in/2 
* Loop 12: loop_cont_eval_free_side_queues_bb1_in(C,A) [C=3] 
* Loop 13: loop_cont_eval_free_side_queues_bb1_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_free_side_queues_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_free_side_queues_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_free_side_queues_bb1_in(C,A) 
* [13]
* [12]...


### Merging Chains  loop_cont_eval_free_side_queues_bb1_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_free_side_queues_bb0_in/1 
* CE 3 is refined into CE [15,16,17] 


#### Refined cost equations eval_free_side_queues_bb0_in/1 
* CE 15: eval_free_side_queues_bb0_in(B) = 1+ eval_free_side_queues_bb1_in(C):1+ loop_cont_eval_free_side_queues_bb1_in(D,B):1
     [D=3,C=3] 
* CE 16: eval_free_side_queues_bb0_in(B) = 1+ eval_free_side_queues_bb1_in(C):1+ loop_cont_eval_free_side_queues_bb1_in(D,B):2
     [D=3,C=3] 
* CE 17: eval_free_side_queues_bb0_in(B) = 1+ eval_free_side_queues_bb1_in(C):2
     [] 

### Cost equations --> "Loop" of eval_free_side_queues_bb0_in/1 
* CEs [16,17] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_free_side_queues_bb0_in/1 
* Loop 14: eval_free_side_queues_bb0_in(B) [] 
* Loop 15: eval_free_side_queues_bb0_in(B) [] 

### Ranking functions of CR eval_free_side_queues_bb0_in(B) 

#### Partial ranking functions of CR eval_free_side_queues_bb0_in(B) 


### Resulting Chains:eval_free_side_queues_bb0_in(B) 
* [15]
* [14]...


### Merging Chains  eval_free_side_queues_bb0_in/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_free_side_queues_start/1 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_free_side_queues_start/1 
* CE 18: eval_free_side_queues_start(B) = 0+ eval_free_side_queues_bb0_in(B):1
     [] 
* CE 19: eval_free_side_queues_start(B) = 0+ eval_free_side_queues_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_free_side_queues_start/1 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_free_side_queues_start/1 
* Loop 16: eval_free_side_queues_start(B) [] 
* Loop 17: eval_free_side_queues_start(B) [] 

### Ranking functions of CR eval_free_side_queues_start(B) 

#### Partial ranking functions of CR eval_free_side_queues_start(B) 


### Resulting Chains:eval_free_side_queues_start(B) 
* [17]
* [16]...


### Merging Chains  eval_free_side_queues_start/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_free_side_queues_bb1_in(B) -> [eval_free_side_queues_bb1_in(B')] 
1
#### Cost of phase [8]:eval_free_side_queues_bb1_in(B) -> [eval_free_side_queues_bb1_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_free_side_queues_bb1_in(B) -> [eval_free_side_queues_bb1_in(B')] 
1*it(8)+0
#### Cost of chains of eval_free_side_queues_bb1_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=3] 

* Chain [9]: 0
  with precondition: [B=3] 


#### Cost of loops [10] 

 * loop 10:eval_free_side_queues_bb4_in(B) -> [eval_free_side_queues_bb4_in(B')] 
1
#### Cost of phase [10]:eval_free_side_queues_bb4_in(B) -> [eval_free_side_queues_bb4_in(B')] 
1*it(10)+0
#### Cost of phase [10]:eval_free_side_queues_bb4_in(B) -> [eval_free_side_queues_bb4_in(B')] 
1*it(10)+0
#### Cost of chains of eval_free_side_queues_bb4_in(B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_free_side_queues_bb1_in(C,A):
* Chain [13]: 1*s(3)+1
  with precondition: [C=3] 

* Chain [12]...: 1*s(4)+1
  with precondition: [C=3] 


#### Cost of chains of eval_free_side_queues_bb0_in(B):
* Chain [15]: 2*s(5)+2
  with precondition: [] 

* Chain [14]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_free_side_queues_start(B):
* Chain [17]: 2*s(10)+2
  with precondition: [] 

* Chain [16]...: 1*s(11)+0
  with precondition: [] 


Closed-form bounds of eval_free_side_queues_start(B): 
-------------------------------------
* Chain [17] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_free_side_queues_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 8 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 32 ms.

