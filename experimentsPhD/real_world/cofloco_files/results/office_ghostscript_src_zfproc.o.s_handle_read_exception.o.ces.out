Warning: Ignored call to eval_s_handle_read_exception_stop/1 in equation eval_s_handle_read_exception_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_s_handle_read_exception_bb10_in/1]
1. non_recursive  : [eval_s_handle_read_exception_28/1]
2. non_recursive  : [eval_s_handle_read_exception_27/2]
3. non_recursive  : [eval_s_handle_read_exception_NewDefault_in/1]
4. recursive  : [eval_s_handle_read_exception_bb2_in/5]
5. non_recursive  : [eval_s_handle_read_exception_26/1]
6. non_recursive  : [eval_s_handle_read_exception_25/1]
7. non_recursive  : [eval_s_handle_read_exception_20/1]
8. non_recursive  : [eval_s_handle_read_exception_19/1]
9. non_recursive  : [eval_s_handle_read_exception_bb8_in/1]
10. non_recursive  : [eval_s_handle_read_exception_10/1]
11. non_recursive  : [eval_s_handle_read_exception_9/2]
12. non_recursive  : [eval_s_handle_read_exception_bb6_in/2]
13. non_recursive  : [eval_s_handle_read_exception_6/2]
14. non_recursive  : [eval_s_handle_read_exception_5/3]
15. non_recursive  : [loop_cont_eval_s_handle_read_exception_bb2_in/4]
16. non_recursive  : [eval_s_handle_read_exception_bb0_in/2]
17. non_recursive  : [eval_s_handle_read_exception_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_s_handle_read_exception_bb2_in/5
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_s_handle_read_exception_bb6_in/2
13. SCC is partially evaluated into eval_s_handle_read_exception_6/2
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_s_handle_read_exception_bb2_in/4
16. SCC is partially evaluated into eval_s_handle_read_exception_bb0_in/2
17. SCC is partially evaluated into eval_s_handle_read_exception_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_s_handle_read_exception_bb2_in/5 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 5 is refined into CE [15] 


#### Refined cost equations eval_s_handle_read_exception_bb2_in/5 
* CE 13: eval_s_handle_read_exception_bb2_in(A,B,C,A,D) = 0
     [A+4=B,C=3] 
* CE 14: eval_s_handle_read_exception_bb2_in(A,B,C,D,B) = 0
     [B=D+4,B=A+4,C=2] 
* CE 15: eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) = 1+ eval_s_handle_read_exception_bb2_in(E,V_0,B,C,D)
     [V_0=E+4,V_0=V_nstate+4] 

### Cost equations --> "Loop" of eval_s_handle_read_exception_bb2_in/5 
* CEs [15] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_s_handle_read_exception_bb2_in/5 
* Loop 10: eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D)->  eval_s_handle_read_exception_bb2_in(V_nstate',V_0,B,C,D)
                  [V_0=V_nstate'+4,V_0=V_nstate+4] 
* Loop 11: eval_s_handle_read_exception_bb2_in(A,B,C,A,D) [A+4=B,C=3] 
* Loop 12: eval_s_handle_read_exception_bb2_in(A,B,C,A,D) [A+4=D,A+4=B,C=2] 

### Ranking functions of CR eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) 

#### Partial ranking functions of CR eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) 


### Resulting Chains:eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) 
* [[10]]...
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_s_handle_read_exception_bb2_in/5 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations eval_s_handle_read_exception_bb6_in/2 
* CE 12 is refined into CE [16] 


#### Refined cost equations eval_s_handle_read_exception_bb6_in/2 
* CE 16: eval_s_handle_read_exception_bb6_in(V_nstate,B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_handle_read_exception_bb6_in/2 
* CEs [16] --> Loop 13 

#### Loops of eval_s_handle_read_exception_bb6_in/2 
* Loop 13: eval_s_handle_read_exception_bb6_in(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_read_exception_bb6_in(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_read_exception_bb6_in(V_nstate,B) 


### Resulting Chains:eval_s_handle_read_exception_bb6_in(V_nstate,B) 
* [13]


### Merging Chains  eval_s_handle_read_exception_bb6_in/2 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_s_handle_read_exception_6/2 
* CE 10 is refined into CE [17] 
* CE 11 is refined into CE [18] 


#### Refined cost equations eval_s_handle_read_exception_6/2 
* CE 17: eval_s_handle_read_exception_6(V_nstate,B) = 0
     [] 
* CE 18: eval_s_handle_read_exception_6(V_nstate,B) = 0+ eval_s_handle_read_exception_bb6_in(V_nstate,B):1
     [] 

### Cost equations --> "Loop" of eval_s_handle_read_exception_6/2 
* CEs [17,18] --> Loop 14 

#### Loops of eval_s_handle_read_exception_6/2 
* Loop 14: eval_s_handle_read_exception_6(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_read_exception_6(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_read_exception_6(V_nstate,B) 


### Resulting Chains:eval_s_handle_read_exception_6(V_nstate,B) 
* [14]


### Merging Chains  eval_s_handle_read_exception_6/2 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations loop_cont_eval_s_handle_read_exception_bb2_in/4 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations loop_cont_eval_s_handle_read_exception_bb2_in/4 
* CE 19: loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) = 0+ eval_s_handle_read_exception_bb6_in(A,C):1
     [D=3] 
* CE 20: loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) = 0+ eval_s_handle_read_exception_6(A,C):1
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_s_handle_read_exception_bb2_in/4 
* CEs [19] --> Loop 15 
* CEs [20] --> Loop 16 

#### Loops of loop_cont_eval_s_handle_read_exception_bb2_in/4 
* Loop 15: loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) [D=3] 
* Loop 16: loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_s_handle_read_exception_bb2_in/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_s_handle_read_exception_bb0_in/2 
* CE 3 is refined into CE [21,22,23] 
* CE 4 is refined into CE [24] 


#### Refined cost equations eval_s_handle_read_exception_bb0_in/2 
* CE 21: eval_s_handle_read_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_read_exception_bb2_in(C,D,E,F,D):1+ loop_cont_eval_s_handle_read_exception_bb2_in(G,H,D,B):1
     [D=H+4,D=F+4,D=C+4,D=V_nstate+4,G=2,E=2] 
* CE 22: eval_s_handle_read_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_read_exception_bb2_in(C,D,E,F,G):2+ loop_cont_eval_s_handle_read_exception_bb2_in(H,I,G,B):2
     [D=I+4,D=F+4,D=C+4,D=V_nstate+4,H=3,E=3] 
* CE 23: eval_s_handle_read_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_read_exception_bb2_in(V_nstate,C,D,E,F):3
     [V_nstate+4=C] 
* CE 24: eval_s_handle_read_exception_bb0_in(V_nstate,B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_handle_read_exception_bb0_in/2 
* CEs [21,22,24] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of eval_s_handle_read_exception_bb0_in/2 
* Loop 17: eval_s_handle_read_exception_bb0_in(V_nstate,B) [] 
* Loop 18: eval_s_handle_read_exception_bb0_in(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_read_exception_bb0_in(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_read_exception_bb0_in(V_nstate,B) 


### Resulting Chains:eval_s_handle_read_exception_bb0_in(V_nstate,B) 
* [18]...
* [17]


### Merging Chains  eval_s_handle_read_exception_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_s_handle_read_exception_start/3 
* CE 2 is refined into CE [25,26] 


#### Refined cost equations eval_s_handle_read_exception_start/3 
* CE 25: eval_s_handle_read_exception_start(V_status,V_nstate,B) = 0+ eval_s_handle_read_exception_bb0_in(V_nstate,B):1
     [] 
* CE 26: eval_s_handle_read_exception_start(V_status,V_nstate,B) = 0+ eval_s_handle_read_exception_bb0_in(V_nstate,B):2
     [] 

### Cost equations --> "Loop" of eval_s_handle_read_exception_start/3 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of eval_s_handle_read_exception_start/3 
* Loop 19: eval_s_handle_read_exception_start(V_status,V_nstate,B) [] 
* Loop 20: eval_s_handle_read_exception_start(V_status,V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_read_exception_start(V_status,V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_read_exception_start(V_status,V_nstate,B) 


### Resulting Chains:eval_s_handle_read_exception_start(V_status,V_nstate,B) 
* [20]
* [19]...


### Merging Chains  eval_s_handle_read_exception_start/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) -> [eval_s_handle_read_exception_bb2_in(V_nstate',V_0',B',C',D')] 
1
#### Cost of phase [10]:eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) -> [eval_s_handle_read_exception_bb2_in(V_nstate',V_0',B',C',D')] 
1*it(10)+0
#### Cost of phase [10]:eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) -> [eval_s_handle_read_exception_bb2_in(V_nstate',V_0',B',C',D')] 
1*it(10)+0
#### Cost of phase [10]:eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D) -> [eval_s_handle_read_exception_bb2_in(V_nstate',V_0',B',C',D')] 
1*it(10)+0
#### Cost of chains of eval_s_handle_read_exception_bb2_in(V_nstate,V_0,B,C,D):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [V_nstate+4=V_0] 

* Chain [[10],12]: 1*it(10)+0
  with precondition: [B=2,V_nstate+4=V_0,V_nstate=C,V_nstate+4=D] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3,V_nstate+4=V_0,V_nstate=C] 

* Chain [12]: 0
  with precondition: [B=2,V_0=V_nstate+4,V_0=C+4,V_0=D] 

* Chain [11]: 0
  with precondition: [B=3,V_0=V_nstate+4,V_0=C+4] 


#### Cost of chains of eval_s_handle_read_exception_bb6_in(V_nstate,B):
* Chain [13]: 0
  with precondition: [] 


#### Cost of chains of eval_s_handle_read_exception_6(V_nstate,B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_s_handle_read_exception_bb2_in(D,A,B,C):
* Chain [16]: 0
  with precondition: [D=2] 

* Chain [15]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_s_handle_read_exception_bb0_in(V_nstate,B):
* Chain [18]...: 1*s(3)+1
  with precondition: [] 

* Chain [17]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_s_handle_read_exception_start(V_status,V_nstate,B):
* Chain [20]: 1*s(6)+0
  with precondition: [] 

* Chain [19]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_s_handle_read_exception_start(V_status,V_nstate,B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_s_handle_read_exception_start(V_status,V_nstate,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 20 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 68 ms.

