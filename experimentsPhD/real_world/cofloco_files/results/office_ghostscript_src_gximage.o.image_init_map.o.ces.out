WARNING: Excluded non-linear constraints:[-A*D+65535>=0,-A*D+65535+1=<A-1]
WARNING: Excluded non-linear constraints:[-A*D+65535>=0,-A*D+65535+1=< -A+1]
Warning: Ignored call to eval_image_init_map_stop/1 in equation eval_image_init_map_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_image_init_map_bb2_in/1]
1. recursive  : [eval_image_init_map_bb4_in/3,eval_image_init_map_bb7_in/3]
2. non_recursive  : [eval_image_init_map_bb8_in/1]
3. non_recursive  : [loop_cont_eval_image_init_map_bb2_in/2]
4. non_recursive  : [loop_cont_eval_image_init_map_bb4_in/2]
5. non_recursive  : [eval_image_init_map_bb0_in/2]
6. non_recursive  : [eval_image_init_map_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_image_init_map_bb2_in/1
1. SCC is partially evaluated into eval_image_init_map_bb4_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_image_init_map_bb0_in/2
6. SCC is partially evaluated into eval_image_init_map_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_image_init_map_bb2_in/1 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations eval_image_init_map_bb2_in/1 
* CE 10: eval_image_init_map_bb2_in(B) = 0
     [B=2] 
* CE 11: eval_image_init_map_bb2_in(B) = 1+ eval_image_init_map_bb2_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_image_init_map_bb2_in/1 
* CEs [11] --> Loop 7 
* CEs [10] --> Loop 8 

#### Loops of eval_image_init_map_bb2_in/1 
* Loop 7: eval_image_init_map_bb2_in(B)->  eval_image_init_map_bb2_in(B')
                  [B'=2,B=2] 
* Loop 8: eval_image_init_map_bb2_in(B) [B=2] 

### Ranking functions of CR eval_image_init_map_bb2_in(B) 

#### Partial ranking functions of CR eval_image_init_map_bb2_in(B) 


### Resulting Chains:eval_image_init_map_bb2_in(B) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_image_init_map_bb2_in/1 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_image_init_map_bb4_in/3 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations eval_image_init_map_bb4_in/3 
* CE 12: eval_image_init_map_bb4_in(V_map_size,V_i_0,B) = 0
     [V_i_0>=V_map_size,V_i_0>=0,B=2] 
* CE 13: eval_image_init_map_bb4_in(V_map_size,V_i_0,B) = 1+ eval_image_init_map_bb4_in(V_map_size,C,D)
     [V_map_size>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_image_init_map_bb4_in/3 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of eval_image_init_map_bb4_in/3 
* Loop 9: eval_image_init_map_bb4_in(V_map_size,V_i_0,B)->  eval_image_init_map_bb4_in(V_map_size,V_i_0',B')
                  [V_map_size>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 10: eval_image_init_map_bb4_in(V_map_size,V_i_0,B) [V_i_0>=V_map_size,V_i_0>=0,B=2] 

### Ranking functions of CR eval_image_init_map_bb4_in(V_map_size,V_i_0,B) 
* RF of phase [9]: [V_map_size-V_i_0]

#### Partial ranking functions of CR eval_image_init_map_bb4_in(V_map_size,V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_map_size-V_i_0


### Resulting Chains:eval_image_init_map_bb4_in(V_map_size,V_i_0,B) 
* [[9],10]
* [10]


### Merging Chains  eval_image_init_map_bb4_in/3 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_image_init_map_bb0_in/2 
* CE 3 is refined into CE [14,15] 
* CE 4 is refined into CE [16,17] 
* CE 5 is refined into CE [18,19] 


#### Refined cost equations eval_image_init_map_bb0_in/2 
* CE 14: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb2_in(C):1
     [V_map_size>=2,C=2] 
* CE 15: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb2_in(C):2
     [V_map_size>=2,C=2] 
* CE 16: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb2_in(C):1
     [0>=V_map_size,C=2] 
* CE 17: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb2_in(C):2
     [0>=V_map_size,C=2] 
* CE 18: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb4_in(V_map_size,C,D):1
     [0>=V_map_size,D=2,C=0] 
* CE 19: eval_image_init_map_bb0_in(V_map_size,B) = 1+ eval_image_init_map_bb4_in(V_map_size,C,D):2
     [V_map_size>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_image_init_map_bb0_in/2 
* CEs [14,19] --> Loop 11 
* CEs [16,18] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_image_init_map_bb0_in/2 
* Loop 11: eval_image_init_map_bb0_in(V_map_size,B) [V_map_size>=1] 
* Loop 12: eval_image_init_map_bb0_in(V_map_size,B) [0>=V_map_size] 
* Loop 13: eval_image_init_map_bb0_in(V_map_size,B) [V_map_size>=2] 
* Loop 14: eval_image_init_map_bb0_in(V_map_size,B) [0>=V_map_size] 

### Ranking functions of CR eval_image_init_map_bb0_in(V_map_size,B) 

#### Partial ranking functions of CR eval_image_init_map_bb0_in(V_map_size,B) 


### Resulting Chains:eval_image_init_map_bb0_in(V_map_size,B) 
* [14]...
* [13]...
* [12]
* [11]


### Merging Chains  eval_image_init_map_bb0_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[14]] --> 3 
* [[13]] --> 4 


### Specialization of cost equations eval_image_init_map_start/2 
* CE 2 is refined into CE [20,21,22,23] 


#### Refined cost equations eval_image_init_map_start/2 
* CE 20: eval_image_init_map_start(V_map_size,B) = 0+ eval_image_init_map_bb0_in(V_map_size,B):1
     [0>=V_map_size] 
* CE 21: eval_image_init_map_start(V_map_size,B) = 0+ eval_image_init_map_bb0_in(V_map_size,B):2
     [V_map_size>=1] 
* CE 22: eval_image_init_map_start(V_map_size,B) = 0+ eval_image_init_map_bb0_in(V_map_size,B):3
     [0>=V_map_size] 
* CE 23: eval_image_init_map_start(V_map_size,B) = 0+ eval_image_init_map_bb0_in(V_map_size,B):4
     [V_map_size>=2] 

### Cost equations --> "Loop" of eval_image_init_map_start/2 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_image_init_map_start/2 
* Loop 15: eval_image_init_map_start(V_map_size,B) [V_map_size>=2] 
* Loop 16: eval_image_init_map_start(V_map_size,B) [0>=V_map_size] 
* Loop 17: eval_image_init_map_start(V_map_size,B) [V_map_size>=1] 
* Loop 18: eval_image_init_map_start(V_map_size,B) [0>=V_map_size] 

### Ranking functions of CR eval_image_init_map_start(V_map_size,B) 

#### Partial ranking functions of CR eval_image_init_map_start(V_map_size,B) 


### Resulting Chains:eval_image_init_map_start(V_map_size,B) 
* [18]
* [17]
* [16]...
* [15]...


### Merging Chains  eval_image_init_map_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 
* [[15]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_image_init_map_bb2_in(B) -> [eval_image_init_map_bb2_in(B')] 
1
#### Cost of phase [7]:eval_image_init_map_bb2_in(B) -> [eval_image_init_map_bb2_in(B')] 
1*it(7)+0
#### Cost of phase [7]:eval_image_init_map_bb2_in(B) -> [eval_image_init_map_bb2_in(B')] 
1*it(7)+0
#### Cost of chains of eval_image_init_map_bb2_in(B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2] 

* Chain [8]: 0
  with precondition: [B=2] 


#### Cost of loops [9] 

 * loop 9:eval_image_init_map_bb4_in(V_map_size,V_i_0,B) -> [eval_image_init_map_bb4_in(V_map_size',V_i_0',B')] 
1
#### Cost of phase [9]:eval_image_init_map_bb4_in(V_map_size,V_i_0,B) -> [eval_image_init_map_bb4_in(V_map_size',V_i_0',B')] 
1*it(9)+0
  Such that:it(9) =< V_map_size-V_i_0
it(9) =< V_map_size-V_i_0-V_map_size'+V_i_0'

#### Cost of chains of eval_image_init_map_bb4_in(V_map_size,V_i_0,B):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_map_size-V_i_0

  with precondition: [B=2,V_i_0>=0,V_map_size>=V_i_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_map_size] 


#### Cost of chains of eval_image_init_map_bb0_in(V_map_size,B):
* Chain [14]...: 1*s(2)+1
  with precondition: [0>=V_map_size] 

* Chain [13]...: 1*s(3)+1
  with precondition: [V_map_size>=2] 

* Chain [12]: 1*aux(2)+0
  with precondition: [0>=V_map_size] 

* Chain [11]: 1*s(5)+1*s(6)+1
  Such that:s(6) =< V_map_size

  with precondition: [V_map_size>=1] 


#### Cost of chains of eval_image_init_map_start(V_map_size,B):
* Chain [18]: 1*s(7)+0
  with precondition: [0>=V_map_size] 

* Chain [17]: 1*s(8)+1*s(9)+1
  Such that:s(8) =< V_map_size

  with precondition: [V_map_size>=1] 

* Chain [16]...: 1*s(10)+1
  with precondition: [0>=V_map_size] 

* Chain [15]...: 1*s(11)+1
  with precondition: [V_map_size>=2] 


Closed-form bounds of eval_image_init_map_start(V_map_size,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_map_size] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17] with precondition: [V_map_size>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [0>=V_map_size] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [V_map_size>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_image_init_map_start(V_map_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 17 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 58 ms.

