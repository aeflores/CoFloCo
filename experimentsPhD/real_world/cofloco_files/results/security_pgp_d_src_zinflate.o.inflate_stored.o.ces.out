Warning: Ignored call to eval_inflate_stored_stop/1 in equation eval_inflate_stored_bb21_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_inflate_stored_12/14,eval_inflate_stored_13/14,eval_inflate_stored_bb1_in/14,eval_inflate_stored_bb4_in/14]
1. non_recursive  : [eval_inflate_stored_bb21_in/1]
2. recursive  : [eval_inflate_stored_31/16,eval_inflate_stored_32/16,eval_inflate_stored_bb6_in/16,eval_inflate_stored_bb9_in/16]
3. recursive  : [eval_inflate_stored_54/23,eval_inflate_stored_55/23,eval_inflate_stored_bb13_in/23,eval_inflate_stored_bb16_in/23]
4. recursive  : [eval_inflate_stored_69/12,eval_inflate_stored_70/12,eval_inflate_stored_bb12_in/9,eval_inflate_stored_bb19_in/13,loop_cont_eval_inflate_stored_bb13_in/14]
5. non_recursive  : [loop_cont_eval_inflate_stored_bb12_in/2]
6. non_recursive  : [loop_cont_eval_inflate_stored_bb6_in/10]
7. non_recursive  : [loop_cont_eval_inflate_stored_bb1_in/9]
8. non_recursive  : [eval_inflate_stored_bb0_in/5]
9. non_recursive  : [eval_inflate_stored_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_inflate_stored_bb1_in/14
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_inflate_stored_bb6_in/16
3. SCC is partially evaluated into eval_inflate_stored_bb13_in/23
4. SCC is partially evaluated into eval_inflate_stored_bb12_in/9
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_inflate_stored_bb6_in/10
7. SCC is partially evaluated into loop_cont_eval_inflate_stored_bb1_in/9
8. SCC is partially evaluated into eval_inflate_stored_bb0_in/5
9. SCC is partially evaluated into eval_inflate_stored_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_inflate_stored_bb1_in/14 
* CE 6 is refined into CE [26] 
* CE 4 is refined into CE [27] 
* CE 5 is refined into CE [28] 


#### Refined cost equations eval_inflate_stored_bb1_in/14 
* CE 26: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,A,B,C,D,C,G,H) = 0
     [E>=16,E=H+16,F=6] 
* CE 27: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M) = 0
     [15>=E,F=2] 
* CE 28: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M) = 1+ eval_inflate_stored_bb1_in(A,B,C,N,C,O,F,G,H,I,J,K,L,M)
     [15>=E,E+8=O,N+1=D] 

### Cost equations --> "Loop" of eval_inflate_stored_bb1_in/14 
* CEs [28] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of eval_inflate_stored_bb1_in/14 
* Loop 23: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M)->  eval_inflate_stored_bb1_in(A,B,C,A',C,B',F,G,H,I,J,K,L,M)
                  [15>=E,E+8=B',D=A'+1] 
* Loop 24: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,A,B,C,D,C,G,H) [E>=16,E=H+16,F=6] 
* Loop 25: eval_inflate_stored_bb1_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M) [15>=E,F=2] 

### Ranking functions of CR eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) 
* RF of phase [23]: [-V_k_0/8+2]

#### Partial ranking functions of CR eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -V_k_0/8+2


### Resulting Chains:eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) 
* [[23],25]
* [[23],24]
* [25]
* [24]


### Merging Chains  eval_inflate_stored_bb1_in/14 into  External patterns of execution 
* [[25],[25,[23]]] --> 1 
* [[24]] --> 2 
* [[24,[23]]] --> 3 


### Specialization of cost equations eval_inflate_stored_bb6_in/16 
* CE 12 is refined into CE [29] 
* CE 11 is refined into CE [30] 
* CE 9 is refined into CE [31] 
* CE 10 is refined into CE [32] 


#### Refined cost equations eval_inflate_stored_bb6_in/16 
* CE 29: eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,H,A,B,C,D,I,J,E,F) = 0
     [G>=16,G=I+16,H=5] 
* CE 30: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) = 0
     [V_k_1>=16,B=2] 
* CE 31: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) = 0
     [15>=V_k_1,B=2] 
* CE 32: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) = 1+ eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,K,V_2,V_22,L,B,C,D,E,F,G,H,I,J)
     [15>=V_k_1,V_k_1+8=L,K+1=V__incnt] 

### Cost equations --> "Loop" of eval_inflate_stored_bb6_in/16 
* CEs [32] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 

#### Loops of eval_inflate_stored_bb6_in/16 
* Loop 26: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J)->  eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt',V_2,V_22,V_k_1',B,C,D,E,F,G,H,I,J)
                  [15>=V_k_1,V_k_1+8=V_k_1',V__incnt=V__incnt'+1] 
* Loop 27: eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,H,A,B,C,D,I,J,E,F) [G>=16,G=I+16,H=5] 
* Loop 28: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) [V_k_1>=16,B=2] 
* Loop 29: eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) [15>=V_k_1,B=2] 

### Ranking functions of CR eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) 
* RF of phase [26]: [-V_k_1/8+2]

#### Partial ranking functions of CR eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    -V_k_1/8+2


### Resulting Chains:eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) 
* [[26],29]
* [[26],28]
* [[26],27]
* [29]
* [28]
* [27]


### Merging Chains  eval_inflate_stored_bb6_in/16 into  External patterns of execution 
* [[29],[28,[26]],[29,[26]]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[27,[26]]] --> 4 


### Specialization of cost equations eval_inflate_stored_bb13_in/23 
* CE 25 is refined into CE [33] 
* CE 24 is refined into CE [34] 
* CE 22 is refined into CE [35] 
* CE 23 is refined into CE [36] 


#### Refined cost equations eval_inflate_stored_bb13_in/23 
* CE 33: eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,F,G,L,I,J,M,N) = 0
     [J>=E,J>=8,G+1=N,G+1=M,I+1=L,I+1=H,K=4] 
* CE 34: eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,F,G,L,I,J,M,N) = 0
     [J>=E,J>=8,G+1=M,I+1=L,I+1=H,K=3] 
* CE 35: eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) = 0
     [V_k_3>=V_k_2,7>=V_k_3,V_n_0=V_45+1,B=2] 
* CE 36: eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) = 1+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,O,V_k_2,V_b_2,V_w_0,P,V_45,Q,B,C,D,E,F,G,H,I,J,K,L,M,N)
     [V_k_3>=V_k_2,B>=2,4>=B,7>=V_k_3,V_k_3+8=Q,V_45+1=P,V_45+1=V_n_0,O+1=V__incnt] 

### Cost equations --> "Loop" of eval_inflate_stored_bb13_in/23 
* CEs [36] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 

#### Loops of eval_inflate_stored_bb13_in/23 
* Loop 30: eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N)->  eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt',V_k_2,V_b_2,V_w_0,V_n_0',V_45,V_k_3',B,C,D,E,F,G,H,I,J,K,L,M,N)
                  [V_k_3>=V_k_2,B>=2,4>=B,7>=V_k_3,V_k_3+8=V_k_3',V_45+1=V_n_0',V__incnt=V__incnt'+1,V_45+1=V_n_0] 
* Loop 31: eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,F,G,H,L,J,M,N) [J>=E,J>=8,G+1=N,G+1=M,H=L+1,H=I+1,K=4] 
* Loop 32: eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,E,F,G,H,L,J,M,N) [J>=E,J>=8,G+1=M,H=L+1,H=I+1,K=3] 
* Loop 33: eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) [V_k_3>=V_k_2,7>=V_k_3,V_n_0=V_45+1,B=2] 

### Ranking functions of CR eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) 
* RF of phase [30]: [-V_k_3/8+1]

#### Partial ranking functions of CR eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    -V_k_3/8+1


### Resulting Chains:eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) 
* [[30],33]
* [[30],32]
* [[30],31]
* [33]
* [32]
* [31]


### Merging Chains  eval_inflate_stored_bb13_in/23 into  External patterns of execution 
* [[33],[33,[30]]] --> 1 
* [[32]] --> 2 
* [[32,[30]]] --> 3 
* [[31]] --> 4 
* [[31,[30]]] --> 5 


### Specialization of cost equations eval_inflate_stored_bb12_in/9 
* CE 15 is refined into CE [37] 
* CE 16 is refined into CE [38] 
* CE 21 is refined into CE [39] 
* CE 17 is refined into CE [40,41] 
* CE 19 is refined into CE [42,43] 
* CE 18 is refined into CE [44,45] 
* CE 20 is refined into CE [46,47] 


#### Refined cost equations eval_inflate_stored_bb12_in/9 
* CE 37: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 1+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,F,G,H,I,J,K,L,M,N,O,P,Q):1
     [D>=0,7>=V_k_2,D+1=C,D+1=V_n_0,E=2,B=2] 
* CE 38: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 1+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,F,G,H,I,J,K,L,M,N,O,P,Q):1
     [7>=V_k_2,0>=D+2,D+1=C,D+1=V_n_0,E=2,B=2] 
* CE 39: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 0
     [B=2,V_n_0=0] 
* CE 40: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,F,D,V_k_2,G,H):4+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,I,J,K,D,L)
     [V_k_2>=8,D>=0,V_w_0+1=K,V_k_2=I+8,V_w_0+1=H,V_w_0+1=G,D+1=F,D+1=C,D+1=V_n_0,L=2,E=4,B=2] 
* CE 41: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,C,V_k_2,V_b_2,V_w_0,D,E,V_k_2,F,V__bb,V__bk,V__wp,G,V_k_2,V_b_2,V_w_0,H,E,I,J,K):5+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,G,L,M,N,E,O)
     [I>=V_k_2+8,I>=8,E>=0,15>=I,V_k_2+8*C=8*G+I,V_k_2+8*V__incnt=8*G+I,V_w_0+1=N,I=L+8,V_w_0+1=K,V_w_0+1=J,E+1=H,E+1=D,E+1=V_n_0,O=2,F=4,B=2] 
* CE 42: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,F,D,V_k_2,G,H):2+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,I,J,K,D,L)
     [V_k_2>=8,D>=0,V_k_2=I+8,V_w_0+1=G,D+1=F,D+1=C,D+1=V_n_0,L=2,K=0,E=3,B=2] 
* CE 43: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,C,V_k_2,V_b_2,V_w_0,D,E,V_k_2,F,V__bb,V__bk,V__wp,G,V_k_2,V_b_2,V_w_0,H,E,I,J,K):3+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,G,L,M,N,E,O)
     [I>=V_k_2+8,I>=8,E>=0,15>=I,V_k_2+8*C=8*G+I,V_k_2+8*V__incnt=8*G+I,I=L+8,V_w_0+1=J,E+1=H,E+1=D,E+1=V_n_0,O=2,N=0,F=3,B=2] 
* CE 44: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,F,D,V_k_2,G,H):4+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,I,J,K,D,L)
     [V_k_2>=8,0>=D+2,V_w_0+1=K,V_k_2=I+8,V_w_0+1=H,V_w_0+1=G,D+1=F,D+1=C,D+1=V_n_0,L=2,E=4,B=2] 
* CE 45: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,C,V_k_2,V_b_2,V_w_0,D,E,V_k_2,F,V__bb,V__bk,V__wp,G,V_k_2,V_b_2,V_w_0,H,E,I,J,K):5+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,G,L,M,N,E,O)
     [I>=V_k_2+8,I>=8,15>=I,0>=E+2,V_k_2+8*C=8*G+I,V_k_2+8*V__incnt=8*G+I,V_w_0+1=N,I=L+8,V_w_0+1=K,V_w_0+1=J,E+1=H,E+1=D,E+1=V_n_0,O=2,F=4,B=2] 
* CE 46: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,C,D,V_k_2,E,V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,F,D,V_k_2,G,H):2+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,I,J,K,D,L)
     [V_k_2>=8,0>=D+2,V_k_2=I+8,V_w_0+1=G,D+1=F,D+1=C,D+1=V_n_0,L=2,K=0,E=3,B=2] 
* CE 47: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) = 2+ eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,C,V_k_2,V_b_2,V_w_0,D,E,V_k_2,F,V__bb,V__bk,V__wp,G,V_k_2,V_b_2,V_w_0,H,E,I,J,K):3+ eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,G,L,M,N,E,O)
     [I>=V_k_2+8,I>=8,15>=I,0>=E+2,V_k_2+8*C=8*G+I,V_k_2+8*V__incnt=8*G+I,I=L+8,V_w_0+1=J,E+1=H,E+1=D,E+1=V_n_0,O=2,N=0,F=3,B=2] 

### Cost equations --> "Loop" of eval_inflate_stored_bb12_in/9 
* CEs [41] --> Loop 34 
* CEs [45] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [44] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [47] --> Loop 39 
* CEs [42] --> Loop 40 
* CEs [46] --> Loop 41 
* CEs [37] --> Loop 42 
* CEs [38] --> Loop 43 
* CEs [39] --> Loop 44 

#### Loops of eval_inflate_stored_bb12_in/9 
* Loop 34: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2+8*V__incnt>=8*V__incnt'+8,8*V__incnt'+15>=8*V__incnt+V_k_2,V__incnt>=V__incnt'+1,V_n_0>=1,V_k_2+8*V__incnt=8*V__incnt'+V_k_2'+8,V_n_0=V_n_0'+1,V_w_0+1=V_w_0',B'=2,B=2] 
* Loop 35: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2+8*V__incnt>=8*V__incnt'+8,8*V__incnt'+15>=8*V__incnt+V_k_2,V__incnt>=V__incnt'+1,0>=V_n_0+1,V_k_2+8*V__incnt=8*V__incnt'+V_k_2'+8,V_n_0=V_n_0'+1,V_w_0+1=V_w_0',B'=2,B=2] 
* Loop 36: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_n_0>=1,V_k_2>=8,V_n_0=V_n_0'+1,V_w_0+1=V_w_0',V_k_2=V_k_2'+8,B'=2,B=2] 
* Loop 37: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2>=8,0>=V_n_0+1,V_n_0=V_n_0'+1,V_w_0+1=V_w_0',V_k_2=V_k_2'+8,B'=2,B=2] 
* Loop 38: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2+8*V__incnt>=8*V__incnt'+8,8*V__incnt'+15>=8*V__incnt+V_k_2,V__incnt>=V__incnt'+1,V_n_0>=1,V_k_2+8*V__incnt=8*V__incnt'+V_k_2'+8,V_n_0=V_n_0'+1,B'=2,V_w_0'=0,B=2] 
* Loop 39: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2+8*V__incnt>=8*V__incnt'+8,8*V__incnt'+15>=8*V__incnt+V_k_2,V__incnt>=V__incnt'+1,0>=V_n_0+1,V_k_2+8*V__incnt=8*V__incnt'+V_k_2'+8,V_n_0=V_n_0'+1,B'=2,V_w_0'=0,B=2] 
* Loop 40: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_n_0>=1,V_k_2>=8,V_n_0=V_n_0'+1,V_k_2=V_k_2'+8,B'=2,V_w_0'=0,B=2] 
* Loop 41: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B)->  eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2',V_b_2',V_w_0',V_n_0',B')
                  [V_k_2>=8,0>=V_n_0+1,V_n_0=V_n_0'+1,V_k_2=V_k_2'+8,B'=2,V_w_0'=0,B=2] 
* Loop 42: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) [V_n_0>=1,7>=V_k_2,B=2] 
* Loop 43: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) [0>=V_n_0+1,7>=V_k_2,B=2] 
* Loop 44: eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) [B=2,V_n_0=0] 

### Ranking functions of CR eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) 
* RF of phase [34,38]: [V_n_0]
* RF of phase [36,40]: [V_k_2/8-7/8,V_n_0]
* RF of phase [37,41]: [V_k_2/8-7/8]

#### Partial ranking functions of CR eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) 
* Partial RF of phase [34,38]:
  - RF of loop [34:1,38:1]:
    V_n_0
* Partial RF of phase [36,40]:
  - RF of loop [36:1,40:1]:
    V_k_2/8-7/8
    V_n_0
* Partial RF of phase [37,41]:
  - RF of loop [37:1,41:1]:
    V_k_2/8-7/8


### Resulting Chains:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) 
* [[37,41],[35,39]]...
* [[37,41],[35,39],43]
* [[37,41],43]
* [[36,40],[34,38],44]
* [[36,40],[34,38],42]
* [[36,40],44]
* [[36,40],42]
* [[35,39]]...
* [[35,39],43]
* [[34,38],44]
* [[34,38],42]
* [44]
* [43]
* [42]


### Merging Chains  eval_inflate_stored_bb12_in/9 into  External patterns of execution 
* [[44]] --> 1 
* [[43],[43,[35,39]]] --> 2 
* [[42],[42,[34,38]],[44,[34,38]]] --> 3 
* [[43,[37,41]],[43,[35,39],[37,41]]] --> 4 
* [[42,[36,40]],[42,[34,38],[36,40]],[44,[34,38],[36,40]]] --> 5 
* [[44,[36,40]]] --> 6 
* [[[35,39],[37,41]]] --> 7 
* [[[35,39]]] --> 8 


### Specialization of cost equations loop_cont_eval_inflate_stored_bb6_in/10 
* CE 14 is refined into CE [48,49,50,51,52,53,54,55] 
* CE 13 is refined into CE [56] 


#### Refined cost equations loop_cont_eval_inflate_stored_bb6_in/10 
* CE 48: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,K,L):1
     [L=2,K=0,H=0,J=5] 
* CE 49: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):2
     [0>=H+1,7>=E,K=2,J=5] 
* CE 50: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):3
     [H>=1,7>=E,K=2,J=5] 
* CE 51: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):4
     [E>=8,0>=H+1,K=2,J=5] 
* CE 52: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):5
     [8*H>=E+1,H>=2,E>=8,K=2,J=5] 
* CE 53: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):6
     [E>=8*H,H>=1,K=2,J=5] 
* CE 54: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):7
     [E>=8,0>=H+1,K=2,J=5] 
* CE 55: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 1+ eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H,K):8
     [0>=H+1,7>=E,K=2,J=5] 
* CE 56: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) = 0
     [J=2] 

### Cost equations --> "Loop" of loop_cont_eval_inflate_stored_bb6_in/10 
* CEs [53] --> Loop 45 
* CEs [52] --> Loop 46 
* CEs [51] --> Loop 47 
* CEs [50] --> Loop 48 
* CEs [49] --> Loop 49 
* CEs [48] --> Loop 50 
* CEs [56] --> Loop 51 
* CEs [54] --> Loop 52 
* CEs [55] --> Loop 53 

#### Loops of loop_cont_eval_inflate_stored_bb6_in/10 
* Loop 45: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [E>=8*H,H>=1,J=5] 
* Loop 46: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [8*H>=E+1,H>=2,E>=8,J=5] 
* Loop 47: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [E>=8,0>=H+1,J=5] 
* Loop 48: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [H>=1,7>=E,J=5] 
* Loop 49: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [0>=H+1,7>=E,J=5] 
* Loop 50: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [H=0,J=5] 
* Loop 51: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [J=2] 
* Loop 52: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [E>=8,0>=H+1,J=5] 
* Loop 53: loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) [0>=H+1,7>=E,J=5] 

### Ranking functions of CR loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) 


### Resulting Chains:loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I) 
* [53]...
* [52]...
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]


### Merging Chains  loop_cont_eval_inflate_stored_bb6_in/10 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 
* [[49]] --> 3 
* [[48]] --> 4 
* [[47]] --> 5 
* [[46]] --> 6 
* [[45]] --> 7 
* [[53]] --> 8 
* [[52]] --> 9 


### Specialization of cost equations loop_cont_eval_inflate_stored_bb1_in/9 
* CE 8 is refined into CE [57,58,59,60,61,62,63,64,65,66,67,68,69,70] 
* CE 7 is refined into CE [71] 


#### Refined cost equations loop_cont_eval_inflate_stored_bb1_in/9 
* CE 57: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q,R):1+ loop_cont_eval_inflate_stored_bb6_in(S,K,L,M,N,O,P,Q,R,H):1
     [15>=G,S=2,J=2,I=6] 
* CE 58: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q,R):2+ loop_cont_eval_inflate_stored_bb6_in(S,K,L,M,N,O,P,Q,R,H):1
     [G>=16,S=2,J=2,I=6] 
* CE 59: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,J,K,L,A,B,C,D,M,N,E,O):3+ loop_cont_eval_inflate_stored_bb6_in(P,A,B,C,D,M,N,E,Q,H):2
     [M>=0,M+16=K,M+16=G,Q=0,P=5,O=0,L=5,J=0,F=0,I=6] 
* CE 60: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):3
     [L>=0,0>=F+1,7>=L,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 61: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):4
     [F>=1,L>=0,7>=L,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 62: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):5
     [L>=8,0>=F+1,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 63: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):6
     [8*F>=L+1,F>=2,L>=8,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 64: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):7
     [L>=8*F,F>=1,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 65: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):8
     [L>=0,0>=F+1,7>=L,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 66: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,D,E,F,J,K,A,B,C,D,L,M,E,F):3+ loop_cont_eval_inflate_stored_bb6_in(N,A,B,C,D,L,M,E,F,H):9
     [L>=8,0>=F+1,L+16=J,L+16=G,N=5,K=5,I=6] 
* CE 67: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,J,E,K,G,L,A,B,C,M,N,O,E,P):4+ loop_cont_eval_inflate_stored_bb6_in(Q,A,B,C,M,N,O,E,R,H):2
     [N+8>=G,N>=0,7>=N,N+8*M+16=8*J+G,N+8*M+16=8*D+G,R=0,Q=5,P=0,L=5,K=0,F=0,I=6] 
* CE 68: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,J,E,F,G,K,A,B,C,L,M,N,E,F):4+ loop_cont_eval_inflate_stored_bb6_in(O,A,B,C,L,M,N,E,F,H):3
     [M+8>=G,M>=0,0>=F+1,7>=M,M+8*L+16=8*J+G,M+8*L+16=8*D+G,O=5,K=5,I=6] 
* CE 69: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,J,E,F,G,K,A,B,C,L,M,N,E,F):4+ loop_cont_eval_inflate_stored_bb6_in(O,A,B,C,L,M,N,E,F,H):4
     [M+8>=G,F>=1,M>=0,7>=M,M+8*L+16=8*J+G,M+8*L+16=8*D+G,O=5,K=5,I=6] 
* CE 70: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 1+ eval_inflate_stored_bb6_in(A,B,C,J,E,F,G,K,A,B,C,L,M,N,E,F):4+ loop_cont_eval_inflate_stored_bb6_in(O,A,B,C,L,M,N,E,F,H):8
     [M+8>=G,M>=0,0>=F+1,7>=M,M+8*L+16=8*J+G,M+8*L+16=8*D+G,O=5,K=5,I=6] 
* CE 71: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) = 0
     [I=2] 

### Cost equations --> "Loop" of loop_cont_eval_inflate_stored_bb1_in/9 
* CEs [63] --> Loop 54 
* CEs [64] --> Loop 55 
* CEs [61] --> Loop 56 
* CEs [62] --> Loop 57 
* CEs [68] --> Loop 58 
* CEs [60] --> Loop 59 
* CEs [58,59] --> Loop 60 
* CEs [57,67,69] --> Loop 61 
* CEs [71] --> Loop 62 
* CEs [66] --> Loop 63 
* CEs [70] --> Loop 64 
* CEs [65] --> Loop 65 

#### Loops of loop_cont_eval_inflate_stored_bb1_in/9 
* Loop 54: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [8*F+15>=G,G>=24,F>=2,I=6] 
* Loop 55: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=8*F+16,F>=1,I=6] 
* Loop 56: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=16,F>=1,23>=G,I=6] 
* Loop 57: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=24,0>=F+1,I=6] 
* Loop 58: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [15>=G,0>=F+1,I=6] 
* Loop 59: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=16,23>=G,0>=F+1,I=6] 
* Loop 60: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=16,I=6] 
* Loop 61: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [15>=G,I=6] 
* Loop 62: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [I=2] 
* Loop 63: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=24,0>=F+1,I=6] 
* Loop 64: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [15>=G,0>=F+1,I=6] 
* Loop 65: loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) [G>=16,23>=G,0>=F+1,I=6] 

### Ranking functions of CR loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) 


### Resulting Chains:loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H) 
* [65]...
* [64]...
* [63]...
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]


### Merging Chains  loop_cont_eval_inflate_stored_bb1_in/9 into  External patterns of execution 
* [[62]] --> 1 
* [[59],[60]] --> 2 
* [[58],[61]] --> 3 
* [[57]] --> 4 
* [[56]] --> 5 
* [[55]] --> 6 
* [[54]] --> 7 
* [[65]] --> 8 
* [[64]] --> 9 
* [[63]] --> 10 


### Specialization of cost equations eval_inflate_stored_bb0_in/5 
* CE 3 is refined into CE [72,73,74,75,76,77,78,79,80,81,82,83] 


#### Refined cost equations eval_inflate_stored_bb0_in/5 
* CE 72: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,E,F,G,H,I,J,K):1+ loop_cont_eval_inflate_stored_bb1_in(L,E,F,G,H,I,J,K,B):1
     [15>=C,L=2,D=2] 
* CE 73: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):2
     [F>=16,F+16=C,G=6,D=6] 
* CE 74: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):3
     [F>=0,15>=F,F+16=C,G=6,D=6] 
* CE 75: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):4
     [F>=24,0>=E+1,F+16=C,G=6,D=6] 
* CE 76: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):5
     [F>=16,E>=1,23>=F,F+16=C,G=6,D=6] 
* CE 77: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):6
     [F>=8*E+16,E>=1,F+16=C,G=6,D=6] 
* CE 78: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):7
     [8*E+15>=F,F>=24,E>=2,F+16=C,G=6,D=6] 
* CE 79: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):8
     [F>=16,23>=F,0>=E+1,F+16=C,G=6,D=6] 
* CE 80: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):9
     [F>=0,15>=F,0>=E+1,F+16=C,G=6,D=6] 
* CE 81: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V__wp,C,D,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F):2+ loop_cont_eval_inflate_stored_bb1_in(G,V__bb,V__bk,V__wp,V__incnt,V__wp,E,F,B):10
     [F>=24,0>=E+1,F+16=C,G=6,D=6] 
* CE 82: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,C,V__wp,D,E,V__bb,V__bk,V__wp,F,V__wp,G,H):3+ loop_cont_eval_inflate_stored_bb1_in(I,V__bb,V__bk,V__wp,F,V__wp,G,H,B):3
     [H+8>=D,H>=0,7>=H,H+8*F+16=8*C+D,H+8*F+16=8*V__incnt+D,I=6,E=6] 
* CE 83: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) = 1+ eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,C,V__wp,D,E,V__bb,V__bk,V__wp,F,V__wp,G,H):3+ loop_cont_eval_inflate_stored_bb1_in(I,V__bb,V__bk,V__wp,F,V__wp,G,H,B):9
     [H+8>=D,H>=0,7>=H,0>=G+1,H+8*F+16=8*C+D,H+8*F+16=8*V__incnt+D,I=6,E=6] 

### Cost equations --> "Loop" of eval_inflate_stored_bb0_in/5 
* CEs [79,80,81,83] --> Loop 66 
* CEs [72,73,74,75,76,77,78,82] --> Loop 67 

#### Loops of eval_inflate_stored_bb0_in/5 
* Loop 66: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) [] 
* Loop 67: eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) [] 

### Ranking functions of CR eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) 

#### Partial ranking functions of CR eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) 


### Resulting Chains:eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B) 
* [67]
* [66]...


### Merging Chains  eval_inflate_stored_bb0_in/5 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


### Specialization of cost equations eval_inflate_stored_start/5 
* CE 2 is refined into CE [84,85] 


#### Refined cost equations eval_inflate_stored_start/5 
* CE 84: eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) = 0+ eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B):1
     [] 
* CE 85: eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) = 0+ eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B):2
     [] 

### Cost equations --> "Loop" of eval_inflate_stored_start/5 
* CEs [85] --> Loop 68 
* CEs [84] --> Loop 69 

#### Loops of eval_inflate_stored_start/5 
* Loop 68: eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) [] 
* Loop 69: eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) [] 

### Ranking functions of CR eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) 

#### Partial ranking functions of CR eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) 


### Resulting Chains:eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B) 
* [69]
* [68]...


### Merging Chains  eval_inflate_stored_start/5 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [23] 

 * loop 23:eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) -> [eval_inflate_stored_bb1_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_k_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [23]:eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) -> [eval_inflate_stored_bb1_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(23)+0
  Such that:it(23) =< -V_k_0/8+2
it(23) =< -V_k_0/8+V_k_0'/8

#### Cost of phase [23]:eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I) -> [eval_inflate_stored_bb1_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_k_0',B',C',D',E',F',G',H',I')] 
1*it(23)+0
  Such that:it(23) =< -V_k_0/8+2
it(23) =< -V_k_0/8+V_k_0'/8

#### Cost of chains of eval_inflate_stored_bb1_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_k_0,B,C,D,E,F,G,H,I):
* Chain [[23],25]: 1*it(23)+0
  Such that:it(23) =< -V_k_0/8+15/8

  with precondition: [B=2,V__wp=V_2,7>=V_k_0] 

* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< V__incnt-F-I/8

  with precondition: [B=6,V__wp=V_2,V__bb=C,V__bk=D,V__wp=E,V__wp=G,V_k_0+8*V__incnt=8*F+I+16,V__incnt>=F+1,8*F+23>=8*V__incnt+V_k_0,V_k_0+8*V__incnt>=8*F+16] 

* Chain [25]: 0
  with precondition: [B=2,V_2=V__wp,15>=V_k_0] 

* Chain [24]: 0
  with precondition: [B=6,C=V__bb,D=V__bk,V_2=V__wp,F=V__incnt,V_2=E,V_2=G,V_k_0=I+16,V_k_0>=16] 


#### Cost of loops [26] 

 * loop 26:eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) -> [eval_inflate_stored_bb6_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_22',V_k_1',B',C',D',E',F',G',H',I',J')] 
1
#### Cost of phase [26]:eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) -> [eval_inflate_stored_bb6_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_22',V_k_1',B',C',D',E',F',G',H',I',J')] 
1*it(26)+0
  Such that:it(26) =< -V_k_1/8+2
it(26) =< -V_k_1/8+V_k_1'/8

#### Cost of phase [26]:eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) -> [eval_inflate_stored_bb6_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_22',V_k_1',B',C',D',E',F',G',H',I',J')] 
1*it(26)+0
  Such that:it(26) =< -V_k_1/8+2
it(26) =< -V_k_1/8+V_k_1'/8

#### Cost of phase [26]:eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J) -> [eval_inflate_stored_bb6_in(V__bb',V__bk',V__wp',V__incnt',V_2',V_22',V_k_1',B',C',D',E',F',G',H',I',J')] 
1*it(26)+0
  Such that:it(26) =< -V_k_1/8+2
it(26) =< -V_k_1/8+V_k_1'/8

#### Cost of chains of eval_inflate_stored_bb6_in(V__bb,V__bk,V__wp,V__incnt,V_2,V_22,V_k_1,B,C,D,E,F,G,H,I,J):
* Chain [[26],29]: 1*it(26)+0
  Such that:it(26) =< -V_k_1/8+15/8

  with precondition: [B=2,7>=V_k_1] 

* Chain [[26],28]: 1*it(26)+0
  Such that:it(26) =< -V_k_1/8+2

  with precondition: [B=2,15>=V_k_1] 

* Chain [[26],27]: 1*it(26)+0
  Such that:it(26) =< -V_k_1/8+2

  with precondition: [B=5,V__bb=C,V__bk=D,V__wp=E,V_2=I,V_22=J,V_k_1+8*V__incnt=8*F+G+16,V__incnt>=F+1,8*F+23>=8*V__incnt+V_k_1,V_k_1+8*V__incnt>=8*F+16] 

* Chain [29]: 0
  with precondition: [B=2,15>=V_k_1] 

* Chain [28]: 0
  with precondition: [B=2,V_k_1>=16] 

* Chain [27]: 0
  with precondition: [B=5,C=V__bb,D=V__bk,E=V__wp,F=V__incnt,I=V_2,J=V_22,V_k_1=G+16,V_k_1>=16] 


#### Cost of loops [30] 

 * loop 30:eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) -> [eval_inflate_stored_bb13_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',V_45',V_k_3',B',C',D',E',F',G',H',I',J',K',L',M',N')] 
1
#### Cost of phase [30]:eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) -> [eval_inflate_stored_bb13_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',V_45',V_k_3',B',C',D',E',F',G',H',I',J',K',L',M',N')] 
1*it(30)+0
  Such that:it(30) =< -V_k_3/8+1
it(30) =< -V_k_3/8+V_k_3'/8

#### Cost of phase [30]:eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) -> [eval_inflate_stored_bb13_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',V_45',V_k_3',B',C',D',E',F',G',H',I',J',K',L',M',N')] 
1*it(30)+0
  Such that:it(30) =< -V_k_3/8+1
it(30) =< -V_k_3/8+V_k_3'/8

#### Cost of phase [30]:eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N) -> [eval_inflate_stored_bb13_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',V_45',V_k_3',B',C',D',E',F',G',H',I',J',K',L',M',N')] 
1*it(30)+0
  Such that:it(30) =< -V_k_3/8+1
it(30) =< -V_k_3/8+V_k_3'/8

#### Cost of chains of eval_inflate_stored_bb13_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,V_45,V_k_3,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [[30],33]: 1*it(30)+0
  Such that:it(30) =< -V_k_3/8+7/8

  with precondition: [B=2,V_n_0=V_45+1,0>=V_k_3+1,V_k_3>=V_k_2] 

* Chain [[30],32]: 1*it(30)+0
  Such that:it(30) =< V__incnt-F-L/8+1

  with precondition: [B=3,V_n_0=V_45+1,V__bb=C,V__bk=D,V__wp=E,V_k_2=G,V_b_2=H,V_w_0=I,V_n_0=J,V_n_0=K+1,V_w_0+1=M,V_k_3+8*V__incnt=8*F+L,V_k_3>=V_k_2,V__incnt>=F+1,8*F+15>=8*V__incnt+V_k_3,V_k_3+8*V__incnt>=8*F+8] 

* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< V__incnt-F-L/8+1

  with precondition: [B=4,V_n_0=V_45+1,V__bb=C,V__bk=D,V__wp=E,V_k_2=G,V_b_2=H,V_w_0=I,V_n_0=J,V_n_0=K+1,V_w_0+1=M,V_w_0+1=N,V_k_3+8*V__incnt=8*F+L,V_k_3>=V_k_2,V__incnt>=F+1,8*F+15>=8*V__incnt+V_k_3,V_k_3+8*V__incnt>=8*F+8] 

* Chain [33]: 0
  with precondition: [B=2,V_45+1=V_n_0,7>=V_k_3,V_k_3>=V_k_2] 

* Chain [32]: 0
  with precondition: [B=3,C=V__bb,D=V__bk,E=V__wp,F=V__incnt,H=V_b_2,V_45+1=V_n_0,V_k_2=G,V_w_0=I,V_45+1=J,V_45=K,V_k_3=L,V_w_0+1=M,V_k_3>=8,V_k_3>=V_k_2] 

* Chain [31]: 0
  with precondition: [B=4,C=V__bb,D=V__bk,E=V__wp,F=V__incnt,H=V_b_2,V_45+1=V_n_0,V_k_2=G,V_w_0=I,V_45+1=J,V_45=K,V_k_3=L,V_w_0+1=M,V_w_0+1=N,V_k_3>=8,V_k_3>=V_k_2] 


#### Cost of loops [35,39] 

 * loop 35:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
1*s(6)+2
  Such that:s(6) =< V__incnt-V__incnt'-V_k_2'/8

 * loop 39:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
1*s(8)+2
  Such that:s(8) =< V__incnt-V__incnt'-V_k_2'/8

#### Cost of phase [35,39]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(35)+1*s(9)+1*s(10)+0
#### Cost of loops [37,41] 

 * loop 37:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2
 * loop 41:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2
#### Cost of phase [37,41]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(37)+0
  Such that:aux(3) =< V_k_2/8
aux(4) =< V_k_2/8-V_k_2'/8
it(37) =< aux(3)
it(37) =< aux(4)

#### Cost of phase [35,39]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(35)+1*s(9)+1*s(10)+0
#### Cost of phase [37,41]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(37)+0
  Such that:aux(3) =< V_k_2/8
aux(4) =< V_k_2/8-V_k_2'/8
it(37) =< aux(3)
it(37) =< aux(4)

#### Cost of phase [37,41]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(37)+0
  Such that:aux(3) =< V_k_2/8
aux(4) =< V_k_2/8-V_k_2'/8
it(37) =< aux(3)
it(37) =< aux(4)

#### Cost of loops [34,38] 

 * loop 34:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
1*s(13)+2
  Such that:s(13) =< V__incnt-V__incnt'-V_k_2'/8

 * loop 38:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
1*s(15)+2
  Such that:s(15) =< V__incnt-V__incnt'-V_k_2'/8

#### Cost of phase [34,38]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2*it(34)+2*it(38)+2*s(16)+0
  Such that:aux(8) =< -V_k_2/8+V_n_0
aux(9) =< -V_k_2/8+V_n_0+V_k_2'/8-V_n_0'
aux(10) =< V_n_0
aux(11) =< V_n_0-V_n_0'
s(16) =< aux(8)
it(38) =< aux(9)
s(16) =< aux(9)
it(34) =< aux(10)
it(38) =< aux(10)
it(34) =< aux(11)
it(38) =< aux(11)

#### Cost of loops [36,40] 

 * loop 36:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2
 * loop 40:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2
#### Cost of phase [36,40]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(36)+0
  Such that:aux(13) =< V_k_2/8
aux(14) =< V_k_2/8-V_k_2'/8
aux(15) =< V_n_0
aux(16) =< V_n_0-V_n_0'
it(36) =< aux(13)
it(36) =< aux(14)
it(36) =< aux(15)
it(36) =< aux(16)

#### Cost of phase [34,38]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
2*it(34)+2*it(38)+2*s(16)+0
  Such that:aux(8) =< -V_k_2/8+V_n_0
aux(9) =< -V_k_2/8+V_n_0+V_k_2'/8-V_n_0'
aux(10) =< V_n_0
aux(11) =< V_n_0-V_n_0'
s(16) =< aux(8)
it(38) =< aux(9)
s(16) =< aux(9)
it(34) =< aux(10)
it(38) =< aux(10)
it(34) =< aux(11)
it(38) =< aux(11)

#### Cost of phase [36,40]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(36)+0
  Such that:aux(13) =< V_k_2/8
aux(14) =< V_k_2/8-V_k_2'/8
aux(15) =< V_n_0
aux(16) =< V_n_0-V_n_0'
it(36) =< aux(13)
it(36) =< aux(14)
it(36) =< aux(15)
it(36) =< aux(16)

#### Cost of phase [36,40]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(36)+0
  Such that:aux(13) =< V_k_2/8
aux(14) =< V_k_2/8-V_k_2'/8
aux(15) =< V_n_0
aux(16) =< V_n_0-V_n_0'
it(36) =< aux(13)
it(36) =< aux(14)
it(36) =< aux(15)
it(36) =< aux(16)

#### Cost of phase [36,40]:eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B) -> [eval_inflate_stored_bb12_in(V__bb',V__bk',V__wp',V__incnt',V_k_2',V_b_2',V_w_0',V_n_0',B')] 
4*it(36)+0
  Such that:aux(13) =< V_k_2/8
aux(14) =< V_k_2/8-V_k_2'/8
aux(15) =< V_n_0
aux(16) =< V_n_0-V_n_0'
it(36) =< aux(13)
it(36) =< aux(14)
it(36) =< aux(15)
it(36) =< aux(16)

#### Cost of chains of eval_inflate_stored_bb12_in(V__bb,V__bk,V__wp,V__incnt,V_k_2,V_b_2,V_w_0,V_n_0,B):
* Chain [[37,41],[35,39]]...: 6*it(35)+4*it(37)+0
  Such that:aux(5) =< V_k_2/8
it(37) =< aux(5)

  with precondition: [B=2,0>=V_n_0+1,V_k_2>=8] 

* Chain [[37,41],[35,39],43]: 6*it(35)+4*it(37)+1*s(11)+1
  Such that:s(11) =< 7/8
aux(6) =< V_k_2/8
it(37) =< aux(6)

  with precondition: [B=2,0>=V_n_0+1,V_k_2>=8] 

* Chain [[37,41],43]: 4*it(37)+1*s(11)+1
  Such that:s(11) =< 7/8
aux(7) =< V_k_2/8
it(37) =< aux(7)

  with precondition: [B=2,0>=V_n_0+1,V_k_2>=8] 

* Chain [[36,40],[34,38],44]: 2*it(34)+4*it(36)+2*it(38)+2*s(16)+0
  Such that:aux(8) =< -V_k_2/8+V_n_0
aux(13) =< V_k_2/8
aux(17) =< -V_k_2/8+V_n_0+7/8
aux(18) =< V_n_0
aux(12) =< aux(17)
aux(12) =< aux(18)
s(16) =< aux(8)
it(38) =< aux(17)
s(16) =< aux(17)
it(34) =< aux(12)
it(38) =< aux(12)
it(36) =< aux(13)
it(36) =< aux(18)

  with precondition: [B=2,V_k_2>=8,V_n_0>=2,8*V_n_0>=V_k_2+1] 

* Chain [[36,40],[34,38],42]: 2*it(34)+4*it(36)+2*it(38)+3*s(16)+1
  Such that:aux(19) =< -V_k_2/8+V_n_0
aux(13) =< V_k_2/8
aux(21) =< V_n_0
s(16) =< aux(19)
it(38) =< aux(19)
it(34) =< aux(21)
it(38) =< aux(21)
it(36) =< aux(13)
it(36) =< aux(21)

  with precondition: [B=2,V_k_2>=8,V_n_0>=3,8*V_n_0>=V_k_2+9] 

* Chain [[36,40],44]: 4*it(36)+0
  Such that:aux(13) =< V_k_2/8
aux(22) =< V_n_0
it(36) =< aux(13)
it(36) =< aux(22)

  with precondition: [B=2,V_n_0>=1,V_k_2>=8*V_n_0] 

* Chain [[36,40],42]: 4*it(36)+1*s(18)+1
  Such that:s(18) =< -V_k_2/8+V_n_0
aux(15) =< V_n_0
aux(23) =< V_k_2/8
it(36) =< aux(23)
it(36) =< aux(15)

  with precondition: [B=2,V_k_2>=8,V_n_0>=2,8*V_n_0>=V_k_2+1] 

* Chain [[35,39]]...: 6*it(35)+0
  with precondition: [7>=V_k_2,0>=V_n_0+1,B=2] 

* Chain [[35,39],43]: 6*it(35)+1*s(11)+1
  Such that:s(11) =< -V_k_2/8+7/8

  with precondition: [B=2,7>=V_k_2,0>=V_n_0+1] 

* Chain [[34,38],44]: 2*it(34)+2*it(38)+2*s(16)+0
  Such that:aux(8) =< -V_k_2/8+V_n_0
aux(9) =< -V_k_2/8+V_n_0+7/8
aux(12) =< V_n_0
s(16) =< aux(8)
it(38) =< aux(9)
s(16) =< aux(9)
it(34) =< aux(12)
it(38) =< aux(12)

  with precondition: [B=2,7>=V_k_2,V_n_0>=1] 

* Chain [[34,38],42]: 2*it(34)+2*it(38)+3*s(16)+1
  Such that:aux(19) =< -V_k_2/8+V_n_0
aux(20) =< V_n_0
s(16) =< aux(19)
it(38) =< aux(19)
it(34) =< aux(20)
it(38) =< aux(20)

  with precondition: [B=2,7>=V_k_2,V_n_0>=2] 

* Chain [44]: 0
  with precondition: [V_n_0=0,B=2] 

* Chain [43]: 1*s(11)+1
  Such that:s(11) =< -V_k_2/8+7/8

  with precondition: [B=2,7>=V_k_2,0>=V_n_0+1] 

* Chain [42]: 1*s(18)+1
  Such that:s(18) =< -V_k_2/8+7/8

  with precondition: [B=2,7>=V_k_2,V_n_0>=1] 


#### Cost of chains of loop_cont_eval_inflate_stored_bb6_in(J,A,B,C,D,E,F,G,H,I):
* Chain [53]...: 6*s(61)+1
  with precondition: [J=5,7>=E,0>=H+1] 

* Chain [52]...: 4*s(63)+6*s(64)+1
  Such that:s(62) =< E/8
s(63) =< s(62)

  with precondition: [J=5,0>=H+1,E>=8] 

* Chain [51]: 0
  with precondition: [J=2] 

* Chain [50]: 1
  with precondition: [J=5,H=0] 

* Chain [49]: 2*s(66)+6*s(67)+2
  Such that:s(65) =< -E/8+7/8
s(66) =< s(65)

  with precondition: [J=5,7>=E,0>=H+1] 

* Chain [48]: 1*s(68)+3*s(72)+2*s(73)+4*s(74)+2*s(75)+2*s(76)+2
  Such that:s(68) =< -E/8+7/8
s(70) =< -E/8+H
s(69) =< -E/8+H+7/8
s(71) =< H
s(72) =< s(70)
s(73) =< s(70)
s(74) =< s(71)
s(73) =< s(71)
s(75) =< s(70)
s(76) =< s(69)
s(75) =< s(69)
s(76) =< s(71)

  with precondition: [J=5,7>=E,H>=1] 

* Chain [47]: 2*s(79)+8*s(80)+6*s(81)+2
  Such that:s(77) =< 7/8
s(78) =< E/8
s(79) =< s(77)
s(80) =< s(78)

  with precondition: [J=5,0>=H+1,E>=8] 

* Chain [46]: 4*s(86)+12*s(87)+2*s(88)+2*s(89)+2*s(91)+2*s(92)+2*s(93)+2
  Such that:s(83) =< -E/8+H
s(82) =< -E/8+H+7/8
s(84) =< E/8
s(85) =< H
s(86) =< s(83)
s(87) =< s(84)
s(87) =< s(85)
s(88) =< s(83)
s(89) =< s(85)
s(88) =< s(85)
s(90) =< s(82)
s(90) =< s(85)
s(91) =< s(83)
s(92) =< s(82)
s(91) =< s(82)
s(93) =< s(90)
s(92) =< s(90)

  with precondition: [J=5,E>=8,H>=2,8*H>=E+1] 

* Chain [45]: 4*s(96)+1
  Such that:s(94) =< E/8
s(95) =< H
s(96) =< s(94)
s(96) =< s(95)

  with precondition: [J=5,H>=1,E>=8*H] 


#### Cost of chains of loop_cont_eval_inflate_stored_bb1_in(I,A,B,C,D,E,F,G,H):
* Chain [65]...: 6*s(97)+2
  with precondition: [I=6,0>=F+1,23>=G,G>=16] 

* Chain [64]...: 1*s(98)+6*s(99)+2
  Such that:s(98) =< -G/8+2

  with precondition: [I=6,0>=F+1,15>=G] 

* Chain [63]...: 4*s(101)+6*s(102)+2
  Such that:s(100) =< G/8
s(101) =< s(100)

  with precondition: [I=6,0>=F+1,G>=24] 

* Chain [62]: 0
  with precondition: [I=2] 

* Chain [61]: 3*s(103)+2*s(104)+9*s(111)+4*s(114)+3
  Such that:aux(32) =< F
s(109) =< F+7/8
aux(33) =< -G/8+2
aux(34) =< -G/8+15/8
s(103) =< aux(33)
s(104) =< aux(34)
s(111) =< aux(32)
s(114) =< aux(32)
s(114) =< s(109)

  with precondition: [I=6,15>=G] 

* Chain [60]: 2
  with precondition: [I=6,G>=16] 

* Chain [59]: 2*s(117)+6*s(118)+3
  Such that:s(116) =< -G/8+23/8
s(117) =< s(116)

  with precondition: [I=6,0>=F+1,23>=G,G>=16] 

* Chain [58]: 1*s(119)+2*s(121)+6*s(122)+3
  Such that:s(120) =< 7/8
s(119) =< -G/8+2
s(121) =< s(120)

  with precondition: [I=6,0>=F+1,15>=G] 

* Chain [57]: 2*s(125)+8*s(126)+6*s(127)+3
  Such that:s(123) =< 7/8
s(124) =< G/8
s(125) =< s(123)
s(126) =< s(124)

  with precondition: [I=6,0>=F+1,G>=24] 

* Chain [56]: 1*s(128)+3*s(132)+2*s(133)+4*s(134)+2*s(135)+2*s(136)+3
  Such that:s(131) =< F
s(129) =< F-G/8+2
s(130) =< F-G/8+23/8
s(128) =< -G/8+23/8
s(132) =< s(129)
s(133) =< s(129)
s(134) =< s(131)
s(133) =< s(131)
s(135) =< s(129)
s(136) =< s(130)
s(135) =< s(130)
s(136) =< s(131)

  with precondition: [I=6,23>=G,F>=1,G>=16] 

* Chain [55]: 4*s(139)+2
  Such that:s(138) =< F
s(137) =< G/8
s(139) =< s(137)
s(139) =< s(138)

  with precondition: [I=6,F>=1,G>=8*F+16] 

* Chain [54]: 4*s(144)+12*s(145)+2*s(146)+2*s(147)+2*s(149)+2*s(150)+2*s(151)+3
  Such that:s(143) =< F
s(140) =< F-G/8+2
s(141) =< F-G/8+23/8
s(142) =< G/8
s(144) =< s(140)
s(145) =< s(142)
s(145) =< s(143)
s(146) =< s(140)
s(147) =< s(143)
s(146) =< s(143)
s(148) =< s(141)
s(148) =< s(143)
s(149) =< s(140)
s(150) =< s(141)
s(149) =< s(141)
s(151) =< s(148)
s(150) =< s(148)

  with precondition: [I=6,F>=2,G>=24,8*F+15>=G] 


#### Cost of chains of eval_inflate_stored_bb0_in(V__bb,V__bk,V__wp,V__incnt,B):
* Chain [67]: 1*aux(39)+0
  with precondition: [] 

* Chain [66]...: 1*aux(41)+0
  with precondition: [] 


#### Cost of chains of eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B):
* Chain [69]: 1*s(232)+0
  with precondition: [] 

* Chain [68]...: 1*s(233)+0
  with precondition: [] 


Closed-form bounds of eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B): 
-------------------------------------
* Chain [69] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [68]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_inflate_stored_start(V__bb,V__bk,V__wp,V__incnt,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 138 ms.
* Invariants computed in 189 ms.
   - Backward Invariants 103 ms.
   - Transitive Invariants 37 ms.
* Refinement performed in 434 ms.
* Termination proved in 32 ms.
* Upper bounds computed in 349 ms.
   - Equation cost structures 136 ms.
   - Phase cost structures 113 ms.
   - Chain cost structures 119 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1254 ms.

