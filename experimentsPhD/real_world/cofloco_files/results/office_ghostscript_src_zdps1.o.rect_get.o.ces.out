Warning: Ignored call to eval_rect_get_stop/1 in equation eval_rect_get_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_rect_get_bb17_in/1]
1. non_recursive  : [eval_rect_get_38/1]
2. non_recursive  : [eval_rect_get_37/1]
3. non_recursive  : [eval_rect_get_NewDefault_in/1]
4. recursive  : [eval_rect_get_20/10,eval_rect_get_21/10,eval_rect_get_bb13_in/10,eval_rect_get_bb9_in/9]
5. recursive  : [eval_rect_get_bb7_in/4,loop_cont_eval_rect_get_bb9_in/5]
6. non_recursive  : [eval_rect_get_NewDefault3_in/1]
7. non_recursive  : [loop_cont_eval_rect_get_bb7_in/2]
8. non_recursive  : [eval_rect_get_bb6_in/3]
9. non_recursive  : [eval_rect_get_14/3]
10. non_recursive  : [eval_rect_get_13/3]
11. non_recursive  : [eval_rect_get_8/3]
12. non_recursive  : [eval_rect_get_7/2]
13. non_recursive  : [eval_rect_get_6/2]
14. non_recursive  : [eval_rect_get_5/1]
15. non_recursive  : [eval_rect_get_bb1_in/1]
16. non_recursive  : [eval_rect_get_bb0_in/1]
17. non_recursive  : [eval_rect_get_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_rect_get_bb9_in/9
5. SCC is partially evaluated into eval_rect_get_bb7_in/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_rect_get_bb7_in/2
8. SCC is partially evaluated into eval_rect_get_bb6_in/3
9. SCC is partially evaluated into eval_rect_get_14/3
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_rect_get_8/3
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_rect_get_6/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_rect_get_bb0_in/1
17. SCC is partially evaluated into eval_rect_get_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rect_get_bb9_in/9 
* CE 26 is refined into CE [27] 
* CE 24 is refined into CE [28] 
* CE 25 is refined into CE [29] 


#### Refined cost equations eval_rect_get_bb9_in/9 
* CE 27: eval_rect_get_bb9_in(A,B,C,D,E,F,A,B,G) = 0
     [B>=C+1,E>=4,C+1=G,F=3] 
* CE 28: eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) = 0
     [V_11>=V_n_0+1,V_i_0>=0,3>=V_i_0,B=2] 
* CE 29: eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) = 1+ eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,F,B,C,D,E)
     [V_11>=V_n_0+1,F>=1,B>=2,4>=F,3>=B,F=V_i_0+1] 

### Cost equations --> "Loop" of eval_rect_get_bb9_in/9 
* CEs [29] --> Loop 17 
* CEs [27] --> Loop 18 
* CEs [28] --> Loop 19 

#### Loops of eval_rect_get_bb9_in/9 
* Loop 17: eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E)->  eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0',B,C,D,E)
                  [V_11>=V_n_0+1,V_i_0'>=1,B>=2,4>=V_i_0',3>=B,V_i_0'=V_i_0+1] 
* Loop 18: eval_rect_get_bb9_in(A,B,C,D,E,F,A,B,G) [B>=C+1,E>=4,C+1=G,F=3] 
* Loop 19: eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) [V_11>=V_n_0+1,V_i_0>=0,3>=V_i_0,B=2] 

### Ranking functions of CR eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) 
* RF of phase [17]: [-V_i_0+4]

#### Partial ranking functions of CR eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -V_i_0+4


### Resulting Chains:eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) 
* [[17],19]
* [[17],18]
* [19]


### Merging Chains  eval_rect_get_bb9_in/9 into  External patterns of execution 
* [[19],[19,[17]]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations eval_rect_get_bb7_in/4 
* CE 21 is refined into CE [30] 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations eval_rect_get_bb7_in/4 
* CE 30: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) = 0
     [V_n_0>=V_11,B=4] 
* CE 31: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) = 1+ eval_rect_get_bb9_in(V_6,V_11,V_n_0,C,D,E,F,G,H):1
     [V_11>=V_n_0+1,E=2,D=0,B=2] 
* CE 32: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) = 2+ eval_rect_get_bb9_in(V_6,V_11,C,D,E,F,V_6,V_11,G):2+ eval_rect_get_bb7_in(V_6,V_11,G,B)
     [V_11>=G,G=C+1,G=V_n_0+1,F=3,E=0] 

### Cost equations --> "Loop" of eval_rect_get_bb7_in/4 
* CEs [32] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [31] --> Loop 22 

#### Loops of eval_rect_get_bb7_in/4 
* Loop 20: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B)->  eval_rect_get_bb7_in(V_6,V_11,V_n_0',B)
                  [V_11>=V_n_0',V_n_0'=V_n_0+1] 
* Loop 21: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) [V_n_0>=V_11,B=4] 
* Loop 22: eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) [V_11>=V_n_0+1,B=2] 

### Ranking functions of CR eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) 
* RF of phase [20]: [V_11-V_n_0]

#### Partial ranking functions of CR eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_11-V_n_0


### Resulting Chains:eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) 
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  eval_rect_get_bb7_in/4 into  External patterns of execution 
* [[22],[22,[20]]] --> 1 
* [[21]] --> 2 
* [[21,[20]]] --> 3 


### Specialization of cost equations loop_cont_eval_rect_get_bb7_in/2 
* CE 22 is refined into CE [33] 
* CE 23 is refined into CE [34] 


#### Refined cost equations loop_cont_eval_rect_get_bb7_in/2 
* CE 33: loop_cont_eval_rect_get_bb7_in(D,A) = 0
     [D=4] 
* CE 34: loop_cont_eval_rect_get_bb7_in(D,A) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_rect_get_bb7_in/2 
* CEs [33] --> Loop 23 
* CEs [34] --> Loop 24 

#### Loops of loop_cont_eval_rect_get_bb7_in/2 
* Loop 23: loop_cont_eval_rect_get_bb7_in(D,A) [D=4] 
* Loop 24: loop_cont_eval_rect_get_bb7_in(D,A) [D=2] 

### Ranking functions of CR loop_cont_eval_rect_get_bb7_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_rect_get_bb7_in(D,A) 


### Resulting Chains:loop_cont_eval_rect_get_bb7_in(D,A) 
* [24]
* [23]


### Merging Chains  loop_cont_eval_rect_get_bb7_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_rect_get_bb6_in/3 
* CE 16 is refined into CE [35,36,37] 


#### Refined cost equations eval_rect_get_bb6_in/3 
* CE 35: eval_rect_get_bb6_in(V_6,V_11,B) = 1+ eval_rect_get_bb7_in(V_6,V_11,C,D):1+ loop_cont_eval_rect_get_bb7_in(E,B):1
     [V_11>=1,E=2,D=2,C=0] 
* CE 36: eval_rect_get_bb6_in(V_6,V_11,B) = 1+ eval_rect_get_bb7_in(V_6,V_11,C,D):2+ loop_cont_eval_rect_get_bb7_in(E,B):2
     [0>=V_11,E=4,D=4,C=0] 
* CE 37: eval_rect_get_bb6_in(V_6,V_11,B) = 1+ eval_rect_get_bb7_in(V_6,V_11,C,D):3+ loop_cont_eval_rect_get_bb7_in(E,B):2
     [V_11>=1,E=4,D=4,C=0] 

### Cost equations --> "Loop" of eval_rect_get_bb6_in/3 
* CEs [35,37] --> Loop 25 
* CEs [36] --> Loop 26 

#### Loops of eval_rect_get_bb6_in/3 
* Loop 25: eval_rect_get_bb6_in(V_6,V_11,B) [V_11>=1] 
* Loop 26: eval_rect_get_bb6_in(V_6,V_11,B) [0>=V_11] 

### Ranking functions of CR eval_rect_get_bb6_in(V_6,V_11,B) 

#### Partial ranking functions of CR eval_rect_get_bb6_in(V_6,V_11,B) 


### Resulting Chains:eval_rect_get_bb6_in(V_6,V_11,B) 
* [26]
* [25]


### Merging Chains  eval_rect_get_bb6_in/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_rect_get_14/3 
* CE 17 is refined into CE [38] 
* CE 18 is refined into CE [39,40] 


#### Refined cost equations eval_rect_get_14/3 
* CE 38: eval_rect_get_14(V_6,V_11,B) = 0
     [] 
* CE 39: eval_rect_get_14(V_6,V_11,B) = 0+ eval_rect_get_bb6_in(V_6,V_11,B):1
     [0>=V_11] 
* CE 40: eval_rect_get_14(V_6,V_11,B) = 0+ eval_rect_get_bb6_in(V_6,V_11,B):2
     [V_11>=1] 

### Cost equations --> "Loop" of eval_rect_get_14/3 
* CEs [38,39,40] --> Loop 27 

#### Loops of eval_rect_get_14/3 
* Loop 27: eval_rect_get_14(V_6,V_11,B) [] 

### Ranking functions of CR eval_rect_get_14(V_6,V_11,B) 

#### Partial ranking functions of CR eval_rect_get_14(V_6,V_11,B) 


### Resulting Chains:eval_rect_get_14(V_6,V_11,B) 
* [27]


### Merging Chains  eval_rect_get_14/3 into  External patterns of execution 
* [[27]] --> 1 


### Specialization of cost equations eval_rect_get_8/3 
* CE 8 is refined into CE [41] 
* CE 11 is refined into CE [42,43] 
* CE 14 is refined into CE [44] 
* CE 9 is refined into CE [45] 
* CE 12 is refined into CE [46] 
* CE 15 is refined into CE [47] 
* CE 7 is refined into CE [48] 
* CE 10 is refined into CE [49] 
* CE 13 is refined into CE [50] 


#### Refined cost equations eval_rect_get_8/3 
* CE 41: eval_rect_get_8(V_6,V_8,B) = 0
     [V_8>=1] 
* CE 42: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_bb6_in(V_6,C,B):1
     [V_8>=1,3>=V_8,C=0] 
* CE 43: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_bb6_in(V_6,C,B):2
     [4*C+3>=V_8,V_8>=4*C,C>=1] 
* CE 44: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_14(V_6,C,B):1
     [4*C+3>=V_8,V_8>=4*C,C>=0,V_8>=1] 
* CE 45: eval_rect_get_8(V_6,V_8,B) = 0
     [0>=V_8+1] 
* CE 46: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_bb6_in(V_6,C,B):1
     [4*C>=V_8,V_8+3>=4*C,0>=C,0>=V_8+1] 
* CE 47: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_14(V_6,C,B):1
     [4*C>=V_8,V_8+3>=4*C,0>=C,0>=V_8+1] 
* CE 48: eval_rect_get_8(V_6,V_8,B) = 0
     [V_8=0] 
* CE 49: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_bb6_in(V_6,C,B):1
     [C=0,V_8=0] 
* CE 50: eval_rect_get_8(V_6,V_8,B) = 0+ eval_rect_get_14(V_6,C,B):1
     [C=0,V_8=0] 

### Cost equations --> "Loop" of eval_rect_get_8/3 
* CEs [45,46,47] --> Loop 28 
* CEs [41,42,43,44] --> Loop 29 
* CEs [48,49,50] --> Loop 30 

#### Loops of eval_rect_get_8/3 
* Loop 28: eval_rect_get_8(V_6,V_8,B) [0>=V_8+1] 
* Loop 29: eval_rect_get_8(V_6,V_8,B) [V_8>=1] 
* Loop 30: eval_rect_get_8(V_6,V_8,B) [V_8=0] 

### Ranking functions of CR eval_rect_get_8(V_6,V_8,B) 

#### Partial ranking functions of CR eval_rect_get_8(V_6,V_8,B) 


### Resulting Chains:eval_rect_get_8(V_6,V_8,B) 
* [30]
* [29]
* [28]


### Merging Chains  eval_rect_get_8/3 into  External patterns of execution 
* [[30]] --> 1 
* [[28]] --> 2 
* [[29]] --> 3 


### Specialization of cost equations eval_rect_get_6/2 
* CE 5 is refined into CE [51] 
* CE 6 is refined into CE [52,53,54] 


#### Refined cost equations eval_rect_get_6/2 
* CE 51: eval_rect_get_6(V_6,B) = 0
     [] 
* CE 52: eval_rect_get_6(V_6,B) = 0+ eval_rect_get_8(V_6,C,B):1
     [C=0] 
* CE 53: eval_rect_get_6(V_6,B) = 0+ eval_rect_get_8(V_6,C,B):2
     [0>=C+1] 
* CE 54: eval_rect_get_6(V_6,B) = 0+ eval_rect_get_8(V_6,C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_rect_get_6/2 
* CEs [51,52,53,54] --> Loop 31 

#### Loops of eval_rect_get_6/2 
* Loop 31: eval_rect_get_6(V_6,B) [] 

### Ranking functions of CR eval_rect_get_6(V_6,B) 

#### Partial ranking functions of CR eval_rect_get_6(V_6,B) 


### Resulting Chains:eval_rect_get_6(V_6,B) 
* [31]


### Merging Chains  eval_rect_get_6/2 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_rect_get_bb0_in/1 
* CE 3 is refined into CE [55] 
* CE 4 is refined into CE [56] 


#### Refined cost equations eval_rect_get_bb0_in/1 
* CE 55: eval_rect_get_bb0_in(B) = 0+ eval_rect_get_6(C,B):1
     [] 
* CE 56: eval_rect_get_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_rect_get_bb0_in/1 
* CEs [55,56] --> Loop 32 

#### Loops of eval_rect_get_bb0_in/1 
* Loop 32: eval_rect_get_bb0_in(B) [] 

### Ranking functions of CR eval_rect_get_bb0_in(B) 

#### Partial ranking functions of CR eval_rect_get_bb0_in(B) 


### Resulting Chains:eval_rect_get_bb0_in(B) 
* [32]


### Merging Chains  eval_rect_get_bb0_in/1 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_rect_get_start/1 
* CE 2 is refined into CE [57] 


#### Refined cost equations eval_rect_get_start/1 
* CE 57: eval_rect_get_start(B) = 0+ eval_rect_get_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_rect_get_start/1 
* CEs [57] --> Loop 33 

#### Loops of eval_rect_get_start/1 
* Loop 33: eval_rect_get_start(B) [] 

### Ranking functions of CR eval_rect_get_start(B) 

#### Partial ranking functions of CR eval_rect_get_start(B) 


### Resulting Chains:eval_rect_get_start(B) 
* [33]


### Merging Chains  eval_rect_get_start/1 into  External patterns of execution 
* [[33]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) -> [eval_rect_get_bb9_in(V_6',V_11',V_n_0',V_35',V_i_0',B',C',D',E')] 
1
#### Cost of phase [17]:eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) -> [eval_rect_get_bb9_in(V_6',V_11',V_n_0',V_35',V_i_0',B',C',D',E')] 
1*it(17)+0
  Such that:it(17) =< -V_i_0+4
it(17) =< -V_i_0+V_i_0'

#### Cost of phase [17]:eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E) -> [eval_rect_get_bb9_in(V_6',V_11',V_n_0',V_35',V_i_0',B',C',D',E')] 
1*it(17)+0
  Such that:it(17) =< -V_i_0+4
it(17) =< -V_i_0+V_i_0'

#### Cost of chains of eval_rect_get_bb9_in(V_6,V_11,V_n_0,V_35,V_i_0,B,C,D,E):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+3

  with precondition: [B=2,2>=V_i_0,V_i_0>=0,V_11>=V_n_0+1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+4

  with precondition: [B=3,V_6=C,V_11=D,V_n_0+1=E,3>=V_i_0,V_i_0>=0,V_11>=V_n_0+1] 

* Chain [19]: 0
  with precondition: [B=2,3>=V_i_0,V_i_0>=0,V_11>=V_n_0+1] 


#### Cost of loops [20] 

 * loop 20:eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) -> [eval_rect_get_bb7_in(V_6',V_11',V_n_0',B')] 
1*s(4)+2
  Such that:s(4) =< 4

#### Cost of phase [20]:eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) -> [eval_rect_get_bb7_in(V_6',V_11',V_n_0',B')] 
2*it(20)+1*s(5)+0
  Such that:aux(2) =< V_11-V_n_0
aux(3) =< V_11-V_n_0-V_11'+V_n_0'
aux(1) =< aux(2)
it(20) =< aux(2)
aux(1) =< aux(3)
it(20) =< aux(3)
s(5) =< aux(1)*4

#### Cost of phase [20]:eval_rect_get_bb7_in(V_6,V_11,V_n_0,B) -> [eval_rect_get_bb7_in(V_6',V_11',V_n_0',B')] 
2*it(20)+1*s(5)+0
  Such that:aux(2) =< V_11-V_n_0
aux(3) =< V_11-V_n_0-V_11'+V_n_0'
aux(1) =< aux(2)
it(20) =< aux(2)
aux(1) =< aux(3)
it(20) =< aux(3)
s(5) =< aux(1)*4

#### Cost of chains of eval_rect_get_bb7_in(V_6,V_11,V_n_0,B):
* Chain [[20],22]: 2*it(20)+1*s(2)+1*s(5)+1
  Such that:s(2) =< 3
aux(4) =< V_11-V_n_0
it(20) =< aux(4)
s(5) =< aux(4)*4

  with precondition: [B=2,V_n_0>=0,V_11>=V_n_0+2] 

* Chain [[20],21]: 2*it(20)+1*s(5)+0
  Such that:aux(5) =< V_11-V_n_0
it(20) =< aux(5)
s(5) =< aux(5)*4

  with precondition: [B=4,V_n_0>=0,V_11>=V_n_0+1] 

* Chain [22]: 1*s(2)+1
  Such that:s(2) =< 3

  with precondition: [B=2,V_n_0>=0,V_11>=V_n_0+1] 

* Chain [21]: 0
  with precondition: [B=4,V_n_0>=0,V_n_0>=V_11] 


#### Cost of chains of loop_cont_eval_rect_get_bb7_in(D,A):
* Chain [24]: 0
  with precondition: [D=2] 

* Chain [23]: 0
  with precondition: [D=4] 


#### Cost of chains of eval_rect_get_bb6_in(V_6,V_11,B):
* Chain [26]: 1
  with precondition: [0>=V_11] 

* Chain [25]: 2*s(13)+4*s(14)+2*s(15)+2
  Such that:s(12) =< 3
aux(7) =< V_11
s(13) =< s(12)
s(14) =< aux(7)
s(15) =< aux(7)*4

  with precondition: [V_11>=1] 


#### Cost of chains of eval_rect_get_14(V_6,V_11,B):
* Chain [27]: 2*s(21)+4*s(22)+2*s(23)+2
  Such that:s(19) =< 3
s(20) =< V_11
s(21) =< s(19)
s(22) =< s(20)
s(23) =< s(20)*4

  with precondition: [] 


#### Cost of chains of eval_rect_get_8(V_6,V_8,B):
* Chain [30]: 8
  with precondition: [V_8=0] 

* Chain [29]: 4*s(31)+8*s(32)+4*s(33)+2
  Such that:aux(8) =< 3
aux(9) =< V_8/4
s(31) =< aux(8)
s(32) =< aux(9)
s(33) =< aux(9)*4

  with precondition: [V_8>=1] 

* Chain [28]: 8
  with precondition: [0>=V_8+1] 


#### Cost of chains of eval_rect_get_6(V_6,B):
* Chain [31]: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_rect_get_bb0_in(B):
* Chain [32]: 1*aux(11)+0
  with precondition: [] 


#### Cost of chains of eval_rect_get_start(B):
* Chain [33]: 1*s(50)+0
  with precondition: [] 


Closed-form bounds of eval_rect_get_start(B): 
-------------------------------------
* Chain [33] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_rect_get_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 91 ms.
* Invariants computed in 81 ms.
   - Backward Invariants 43 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 157 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 134 ms.
   - Equation cost structures 63 ms.
   - Phase cost structures 27 ms.
   - Chain cost structures 45 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 604 ms.

