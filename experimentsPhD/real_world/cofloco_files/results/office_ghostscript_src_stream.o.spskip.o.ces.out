Warning: Ignored call to eval_spskip_stop/1 in equation eval_spskip_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_spskip_bb18_in/1]
1. non_recursive  : [eval_spskip_12/1]
2. non_recursive  : [eval_spskip_11/1]
3. non_recursive  : [eval_spskip_10/2]
4. non_recursive  : [eval_spskip_9/3]
5. non_recursive  : [eval_spskip_8/2]
6. non_recursive  : [eval_spskip_bb17_in/1]
7. recursive  : [eval_spskip_46/4,eval_spskip_47/4,eval_spskip_bb13_in/4,eval_spskip_bb7_in/3]
8. non_recursive  : [loop_cont_eval_spskip_bb7_in/2]
9. non_recursive  : [eval_spskip_bb6_in/2]
10. non_recursive  : [eval_spskip_bb0_in/2]
11. non_recursive  : [eval_spskip_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_spskip_bb7_in/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_spskip_bb6_in/2
10. SCC is partially evaluated into eval_spskip_bb0_in/2
11. SCC is partially evaluated into eval_spskip_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_spskip_bb7_in/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_spskip_bb7_in/3 
* CE 9: eval_spskip_bb7_in(V_31,V_n_0,B) = 0
     [V_31>=0,1>=V_31,B=2] 
* CE 10: eval_spskip_bb7_in(V_31,V_n_0,B) = 1+ eval_spskip_bb7_in(V_31,C,D)
     [V_31>=0,1>=V_31,D=2,B=2] 

### Cost equations --> "Loop" of eval_spskip_bb7_in/3 
* CEs [10] --> Loop 6 
* CEs [9] --> Loop 7 

#### Loops of eval_spskip_bb7_in/3 
* Loop 6: eval_spskip_bb7_in(V_31,V_n_0,B)->  eval_spskip_bb7_in(V_31,V_n_0',B')
                  [V_31>=0,1>=V_31,B'=2,B=2] 
* Loop 7: eval_spskip_bb7_in(V_31,V_n_0,B) [V_31>=0,1>=V_31,B=2] 

### Ranking functions of CR eval_spskip_bb7_in(V_31,V_n_0,B) 

#### Partial ranking functions of CR eval_spskip_bb7_in(V_31,V_n_0,B) 


### Resulting Chains:eval_spskip_bb7_in(V_31,V_n_0,B) 
* [[6]]...
* [[6],7]
* [7]


### Merging Chains  eval_spskip_bb7_in/3 into  External patterns of execution 
* [[7],[7,[6]]] --> 1 
* [[[6]]] --> 2 


### Specialization of cost equations eval_spskip_bb6_in/2 
* CE 5 is refined into CE [11,12] 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations eval_spskip_bb6_in/2 
* CE 11: eval_spskip_bb6_in(V_nskip,B) = 1+ eval_spskip_bb7_in(C,V_nskip,D):1
     [D=2,C=0] 
* CE 12: eval_spskip_bb6_in(V_nskip,B) = 1+ eval_spskip_bb7_in(C,V_nskip,D):2
     [D=2,C=0] 
* CE 13: eval_spskip_bb6_in(V_nskip,B) = 1+ eval_spskip_bb7_in(C,V_nskip,D):1
     [D=2,C=1] 
* CE 14: eval_spskip_bb6_in(V_nskip,B) = 1+ eval_spskip_bb7_in(C,V_nskip,D):2
     [D=2,C=1] 

### Cost equations --> "Loop" of eval_spskip_bb6_in/2 
* CEs [12,14] --> Loop 8 
* CEs [11,13] --> Loop 9 

#### Loops of eval_spskip_bb6_in/2 
* Loop 8: eval_spskip_bb6_in(V_nskip,B) [] 
* Loop 9: eval_spskip_bb6_in(V_nskip,B) [] 

### Ranking functions of CR eval_spskip_bb6_in(V_nskip,B) 

#### Partial ranking functions of CR eval_spskip_bb6_in(V_nskip,B) 


### Resulting Chains:eval_spskip_bb6_in(V_nskip,B) 
* [9]
* [8]...


### Merging Chains  eval_spskip_bb6_in/2 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_spskip_bb0_in/2 
* CE 3 is refined into CE [15] 
* CE 4 is refined into CE [16,17] 


#### Refined cost equations eval_spskip_bb0_in/2 
* CE 15: eval_spskip_bb0_in(V_nskip,B) = 0
     [] 
* CE 16: eval_spskip_bb0_in(V_nskip,B) = 0+ eval_spskip_bb6_in(V_nskip,B):1
     [] 
* CE 17: eval_spskip_bb0_in(V_nskip,B) = 0+ eval_spskip_bb6_in(V_nskip,B):2
     [] 

### Cost equations --> "Loop" of eval_spskip_bb0_in/2 
* CEs [17] --> Loop 10 
* CEs [15,16] --> Loop 11 

#### Loops of eval_spskip_bb0_in/2 
* Loop 10: eval_spskip_bb0_in(V_nskip,B) [] 
* Loop 11: eval_spskip_bb0_in(V_nskip,B) [] 

### Ranking functions of CR eval_spskip_bb0_in(V_nskip,B) 

#### Partial ranking functions of CR eval_spskip_bb0_in(V_nskip,B) 


### Resulting Chains:eval_spskip_bb0_in(V_nskip,B) 
* [11]
* [10]...


### Merging Chains  eval_spskip_bb0_in/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_spskip_start/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_spskip_start/2 
* CE 18: eval_spskip_start(V_nskip,B) = 0+ eval_spskip_bb0_in(V_nskip,B):1
     [] 
* CE 19: eval_spskip_start(V_nskip,B) = 0+ eval_spskip_bb0_in(V_nskip,B):2
     [] 

### Cost equations --> "Loop" of eval_spskip_start/2 
* CEs [19] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of eval_spskip_start/2 
* Loop 12: eval_spskip_start(V_nskip,B) [] 
* Loop 13: eval_spskip_start(V_nskip,B) [] 

### Ranking functions of CR eval_spskip_start(V_nskip,B) 

#### Partial ranking functions of CR eval_spskip_start(V_nskip,B) 


### Resulting Chains:eval_spskip_start(V_nskip,B) 
* [13]
* [12]...


### Merging Chains  eval_spskip_start/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_spskip_bb7_in(V_31,V_n_0,B) -> [eval_spskip_bb7_in(V_31',V_n_0',B')] 
1
#### Cost of phase [6]:eval_spskip_bb7_in(V_31,V_n_0,B) -> [eval_spskip_bb7_in(V_31',V_n_0',B')] 
1*it(6)+0
#### Cost of phase [6]:eval_spskip_bb7_in(V_31,V_n_0,B) -> [eval_spskip_bb7_in(V_31',V_n_0',B')] 
1*it(6)+0
#### Cost of chains of eval_spskip_bb7_in(V_31,V_n_0,B):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V_31>=0,1>=V_31,B=2] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,1>=V_31,V_31>=0] 

* Chain [7]: 0
  with precondition: [B=2,1>=V_31,V_31>=0] 


#### Cost of chains of eval_spskip_bb6_in(V_nskip,B):
* Chain [9]: 1*aux(2)+0
  with precondition: [] 

* Chain [8]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_spskip_bb0_in(V_nskip,B):
* Chain [11]: 1*aux(4)+0
  with precondition: [] 

* Chain [10]...: 1*s(7)+0
  with precondition: [] 


#### Cost of chains of eval_spskip_start(V_nskip,B):
* Chain [13]: 1*s(8)+0
  with precondition: [] 

* Chain [12]...: 1*s(9)+0
  with precondition: [] 


Closed-form bounds of eval_spskip_start(V_nskip,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_spskip_start(V_nskip,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 30 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 153 ms.

