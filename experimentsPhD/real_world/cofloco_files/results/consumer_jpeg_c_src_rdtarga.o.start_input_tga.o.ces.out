Warning: Ignored call to eval_start_input_tga_stop/1 in equation eval_start_input_tga_bb43_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_input_tga_128/5,eval_start_input_tga_129/5,eval_start_input_tga_bb33_in/4]
1. non_recursive  : [eval_start_input_tga_bb43_in/1]
2. non_recursive  : [eval_start_input_tga_bb42_in/1]
3. non_recursive  : [eval_start_input_tga_148/1]
4. non_recursive  : [eval_start_input_tga_147/1]
5. non_recursive  : [eval_start_input_tga_145/1]
6. non_recursive  : [eval_start_input_tga_144/3]
7. non_recursive  : [eval_start_input_tga_141/2]
8. non_recursive  : [eval_start_input_tga_140/2]
9. non_recursive  : [eval_start_input_tga_bb39_in/2]
10. non_recursive  : [eval_start_input_tga_139/2]
11. non_recursive  : [eval_start_input_tga_138/2]
12. non_recursive  : [eval_start_input_tga_bb38_in/2]
13. non_recursive  : [loop_cont_eval_start_input_tga_bb33_in/3]
14. non_recursive  : [eval_start_input_tga_bb31_in/3]
15. non_recursive  : [eval_start_input_tga_110/3]
16. non_recursive  : [eval_start_input_tga_109/3]
17. non_recursive  : [eval_start_input_tga_122/3]
18. non_recursive  : [eval_start_input_tga_121/3]
19. non_recursive  : [eval_start_input_tga_bb28_in/3]
20. non_recursive  : [eval_start_input_tga_75/3]
21. non_recursive  : [eval_start_input_tga_74/3]
22. non_recursive  : [eval_start_input_tga_bb16_in/3]
23. non_recursive  : [eval_start_input_tga_70/3]
24. non_recursive  : [eval_start_input_tga_69/3]
25. non_recursive  : [eval_start_input_tga_104/3]
26. non_recursive  : [eval_start_input_tga_103/3]
27. non_recursive  : [eval_start_input_tga_bb26_in/3]
28. non_recursive  : [eval_start_input_tga_99/3]
29. non_recursive  : [eval_start_input_tga_98/3]
30. non_recursive  : [eval_start_input_tga_91/3]
31. non_recursive  : [eval_start_input_tga_90/3]
32. non_recursive  : [eval_start_input_tga_bb22_in/3]
33. non_recursive  : [eval_start_input_tga_86/3]
34. non_recursive  : [eval_start_input_tga_85/3]
35. non_recursive  : [eval_start_input_tga_NewDefault8_in/3]
36. non_recursive  : [eval_start_input_tga_107/3]
37. non_recursive  : [eval_start_input_tga_106/3]
38. non_recursive  : [eval_start_input_tga_NewDefault_in/3]
39. non_recursive  : [eval_start_input_tga_bb12_in/3]
40. non_recursive  : [eval_start_input_tga_bb9_in/3]
41. non_recursive  : [eval_start_input_tga_54/3]
42. non_recursive  : [eval_start_input_tga_53/3]
43. non_recursive  : [eval_start_input_tga_bb8_in/3]
44. non_recursive  : [eval_start_input_tga_bb4_in/1]
45. non_recursive  : [eval_start_input_tga_bb2_in/1]
46. non_recursive  : [eval_start_input_tga_4/1]
47. non_recursive  : [eval_start_input_tga_3/1]
48. non_recursive  : [eval_start_input_tga_1/1]
49. non_recursive  : [eval_start_input_tga_0/1]
50. non_recursive  : [eval_start_input_tga_bb0_in/1]
51. non_recursive  : [eval_start_input_tga_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_input_tga_bb33_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into loop_cont_eval_start_input_tga_bb33_in/3
14. SCC is partially evaluated into eval_start_input_tga_bb31_in/3
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_start_input_tga_122/3
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_start_input_tga_bb28_in/3
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into eval_start_input_tga_bb12_in/3
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is partially evaluated into eval_start_input_tga_bb4_in/1
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is partially evaluated into eval_start_input_tga_1/1
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is partially evaluated into eval_start_input_tga_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_input_tga_bb33_in/4 
* CE 15 is refined into CE [20] 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 
* CE 12 is refined into CE [23] 
* CE 10 is refined into CE [24] 
* CE 11 is refined into CE [25] 


#### Refined cost equations eval_start_input_tga_bb33_in/4 
* CE 20: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) = 0
     [B=5,V_idlen_0=0] 
* CE 21: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) = 0
     [B=4,V_idlen_0=0] 
* CE 22: eval_start_input_tga_bb33_in(A,B,C,A) = 0
     [C=3,B=0] 
* CE 23: eval_start_input_tga_bb33_in(A,B,C,A) = 0
     [C=2,B=0] 
* CE 24: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) = 1+ eval_start_input_tga_bb33_in(V_36,D,B,C)
     [V_idlen_0>=1,V_idlen_0=D+1] 
* CE 25: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) = 1+ eval_start_input_tga_bb33_in(V_36,D,B,C)
     [0>=V_idlen_0+1,V_idlen_0=D+1] 

### Cost equations --> "Loop" of eval_start_input_tga_bb33_in/4 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_start_input_tga_bb33_in/4 
* Loop 18: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C)->  eval_start_input_tga_bb33_in(V_36,V_idlen_0',B,C)
                  [V_idlen_0>=1,V_idlen_0=V_idlen_0'+1] 
* Loop 19: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C)->  eval_start_input_tga_bb33_in(V_36,V_idlen_0',B,C)
                  [0>=V_idlen_0+1,V_idlen_0=V_idlen_0'+1] 
* Loop 20: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) [B=5,V_idlen_0=0] 
* Loop 21: eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) [B=4,V_idlen_0=0] 
* Loop 22: eval_start_input_tga_bb33_in(A,B,C,A) [C=3,B=0] 
* Loop 23: eval_start_input_tga_bb33_in(A,B,C,A) [C=2,B=0] 

### Ranking functions of CR eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) 
* RF of phase [18]: [V_idlen_0]

#### Partial ranking functions of CR eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_idlen_0


### Resulting Chains:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) 
* [[19]]...
* [[18],23]
* [[18],22]
* [[18],21]
* [[18],20]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_start_input_tga_bb33_in/4 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 
* [[23,[18]]] --> 5 
* [[22,[18]]] --> 6 
* [[21,[18]]] --> 7 
* [[20,[18]]] --> 8 
* [[[19]]] --> 9 


### Specialization of cost equations loop_cont_eval_start_input_tga_bb33_in/3 
* CE 19 is refined into CE [26] 
* CE 18 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 16 is refined into CE [29] 


#### Refined cost equations loop_cont_eval_start_input_tga_bb33_in/3 
* CE 26: loop_cont_eval_start_input_tga_bb33_in(D,A,B) = 0
     [D=5] 
* CE 27: loop_cont_eval_start_input_tga_bb33_in(D,A,B) = 0
     [D=4] 
* CE 28: loop_cont_eval_start_input_tga_bb33_in(D,A,B) = 0
     [D=3] 
* CE 29: loop_cont_eval_start_input_tga_bb33_in(D,A,B) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_start_input_tga_bb33_in/3 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 

#### Loops of loop_cont_eval_start_input_tga_bb33_in/3 
* Loop 24: loop_cont_eval_start_input_tga_bb33_in(D,A,B) [D=5] 
* Loop 25: loop_cont_eval_start_input_tga_bb33_in(D,A,B) [D=4] 
* Loop 26: loop_cont_eval_start_input_tga_bb33_in(D,A,B) [D=3] 
* Loop 27: loop_cont_eval_start_input_tga_bb33_in(D,A,B) [D=2] 

### Ranking functions of CR loop_cont_eval_start_input_tga_bb33_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_start_input_tga_bb33_in(D,A,B) 


### Resulting Chains:loop_cont_eval_start_input_tga_bb33_in(D,A,B) 
* [27]
* [26]
* [25]
* [24]


### Merging Chains  loop_cont_eval_start_input_tga_bb33_in/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25]] --> 3 
* [[24]] --> 4 


### Specialization of cost equations eval_start_input_tga_bb31_in/3 
* CE 8 is refined into CE [30,31,32,33,34,35,36,37,38] 


#### Refined cost equations eval_start_input_tga_bb31_in/3 
* CE 30: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,V_36):1+ loop_cont_eval_start_input_tga_bb33_in(E,V_36,B):1
     [E=2,D=2,C=0,V_22=0] 
* CE 31: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,V_36):2+ loop_cont_eval_start_input_tga_bb33_in(E,V_36,B):2
     [E=3,D=3,C=0,V_22=0] 
* CE 32: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,E):3+ loop_cont_eval_start_input_tga_bb33_in(F,E,B):3
     [F=4,D=4,C=0,V_22=0] 
* CE 33: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,E):4+ loop_cont_eval_start_input_tga_bb33_in(F,E,B):4
     [F=5,D=5,C=0,V_22=0] 
* CE 34: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,V_36):5+ loop_cont_eval_start_input_tga_bb33_in(D,V_36,B):1
     [V_22>=1,D=2,C=2] 
* CE 35: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,V_36):6+ loop_cont_eval_start_input_tga_bb33_in(D,V_36,B):2
     [V_22>=1,D=3,C=3] 
* CE 36: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):7+ loop_cont_eval_start_input_tga_bb33_in(E,D,B):3
     [V_22>=1,E=4,C=4] 
* CE 37: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):8+ loop_cont_eval_start_input_tga_bb33_in(E,D,B):4
     [V_22>=1,E=5,C=5] 
* CE 38: eval_start_input_tga_bb31_in(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):9
     [0>=V_22+1] 

### Cost equations --> "Loop" of eval_start_input_tga_bb31_in/3 
* CEs [38] --> Loop 28 
* CEs [34,35,36,37] --> Loop 29 
* CEs [30,31,32,33] --> Loop 30 

#### Loops of eval_start_input_tga_bb31_in/3 
* Loop 28: eval_start_input_tga_bb31_in(V_22,V_36,B) [0>=V_22+1] 
* Loop 29: eval_start_input_tga_bb31_in(V_22,V_36,B) [V_22>=1] 
* Loop 30: eval_start_input_tga_bb31_in(V_22,V_36,B) [V_22=0] 

### Ranking functions of CR eval_start_input_tga_bb31_in(V_22,V_36,B) 

#### Partial ranking functions of CR eval_start_input_tga_bb31_in(V_22,V_36,B) 


### Resulting Chains:eval_start_input_tga_bb31_in(V_22,V_36,B) 
* [30]
* [29]
* [28]...


### Merging Chains  eval_start_input_tga_bb31_in/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 


### Specialization of cost equations eval_start_input_tga_122/3 
* CE 9 is refined into CE [39,40,41,42,43,44,45,46,47] 


#### Refined cost equations eval_start_input_tga_122/3 
* CE 39: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,V_36):1+ loop_cont_eval_start_input_tga_bb33_in(E,V_36,B):1
     [E=2,D=2,C=0,V_22=0] 
* CE 40: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,V_36):2+ loop_cont_eval_start_input_tga_bb33_in(E,V_36,B):2
     [E=3,D=3,C=0,V_22=0] 
* CE 41: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,E):3+ loop_cont_eval_start_input_tga_bb33_in(F,E,B):3
     [F=4,D=4,C=0,V_22=0] 
* CE 42: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,C,D,E):4+ loop_cont_eval_start_input_tga_bb33_in(F,E,B):4
     [F=5,D=5,C=0,V_22=0] 
* CE 43: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,V_36):5+ loop_cont_eval_start_input_tga_bb33_in(D,V_36,B):1
     [V_22>=1,D=2,C=2] 
* CE 44: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,V_36):6+ loop_cont_eval_start_input_tga_bb33_in(D,V_36,B):2
     [V_22>=1,D=3,C=3] 
* CE 45: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):7+ loop_cont_eval_start_input_tga_bb33_in(E,D,B):3
     [V_22>=1,E=4,C=4] 
* CE 46: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):8+ loop_cont_eval_start_input_tga_bb33_in(E,D,B):4
     [V_22>=1,E=5,C=5] 
* CE 47: eval_start_input_tga_122(V_22,V_36,B) = 1+ eval_start_input_tga_bb33_in(V_36,V_22,C,D):9
     [0>=V_22+1] 

### Cost equations --> "Loop" of eval_start_input_tga_122/3 
* CEs [47] --> Loop 31 
* CEs [43,44,45,46] --> Loop 32 
* CEs [39,40,41,42] --> Loop 33 

#### Loops of eval_start_input_tga_122/3 
* Loop 31: eval_start_input_tga_122(V_22,V_36,B) [0>=V_22+1] 
* Loop 32: eval_start_input_tga_122(V_22,V_36,B) [V_22>=1] 
* Loop 33: eval_start_input_tga_122(V_22,V_36,B) [V_22=0] 

### Ranking functions of CR eval_start_input_tga_122(V_22,V_36,B) 

#### Partial ranking functions of CR eval_start_input_tga_122(V_22,V_36,B) 


### Resulting Chains:eval_start_input_tga_122(V_22,V_36,B) 
* [33]
* [32]
* [31]...


### Merging Chains  eval_start_input_tga_122/3 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 


### Specialization of cost equations eval_start_input_tga_bb28_in/3 
* CE 6 is refined into CE [48,49,50] 
* CE 7 is refined into CE [51,52,53] 


#### Refined cost equations eval_start_input_tga_bb28_in/3 
* CE 48: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb31_in(C,V_36,B):1
     [C=0,V_22=0] 
* CE 49: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb31_in(V_22,V_36,B):2
     [V_22>=1] 
* CE 50: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb31_in(V_22,V_36,B):3
     [0>=V_22+1] 
* CE 51: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_122(C,V_36,B):1
     [C=0,V_22=0] 
* CE 52: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_122(V_22,V_36,B):2
     [V_22>=1] 
* CE 53: eval_start_input_tga_bb28_in(V_22,V_36,B) = 0+ eval_start_input_tga_122(V_22,V_36,B):3
     [0>=V_22+1] 

### Cost equations --> "Loop" of eval_start_input_tga_bb28_in/3 
* CEs [50,53] --> Loop 34 
* CEs [49,52] --> Loop 35 
* CEs [48,51] --> Loop 36 

#### Loops of eval_start_input_tga_bb28_in/3 
* Loop 34: eval_start_input_tga_bb28_in(V_22,V_36,B) [0>=V_22+1] 
* Loop 35: eval_start_input_tga_bb28_in(V_22,V_36,B) [V_22>=1] 
* Loop 36: eval_start_input_tga_bb28_in(V_22,V_36,B) [V_22=0] 

### Ranking functions of CR eval_start_input_tga_bb28_in(V_22,V_36,B) 

#### Partial ranking functions of CR eval_start_input_tga_bb28_in(V_22,V_36,B) 


### Resulting Chains:eval_start_input_tga_bb28_in(V_22,V_36,B) 
* [36]
* [35]
* [34]...


### Merging Chains  eval_start_input_tga_bb28_in/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34]] --> 3 


### Specialization of cost equations eval_start_input_tga_bb12_in/3 
* CE 5 is refined into CE [54,55,56] 


#### Refined cost equations eval_start_input_tga_bb12_in/3 
* CE 54: eval_start_input_tga_bb12_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb28_in(C,V_36,B):1
     [C=0,V_22=0] 
* CE 55: eval_start_input_tga_bb12_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb28_in(V_22,V_36,B):2
     [V_22>=1] 
* CE 56: eval_start_input_tga_bb12_in(V_22,V_36,B) = 0+ eval_start_input_tga_bb28_in(V_22,V_36,B):3
     [0>=V_22+1] 

### Cost equations --> "Loop" of eval_start_input_tga_bb12_in/3 
* CEs [56] --> Loop 37 
* CEs [55] --> Loop 38 
* CEs [54] --> Loop 39 

#### Loops of eval_start_input_tga_bb12_in/3 
* Loop 37: eval_start_input_tga_bb12_in(V_22,V_36,B) [0>=V_22+1] 
* Loop 38: eval_start_input_tga_bb12_in(V_22,V_36,B) [V_22>=1] 
* Loop 39: eval_start_input_tga_bb12_in(V_22,V_36,B) [V_22=0] 

### Ranking functions of CR eval_start_input_tga_bb12_in(V_22,V_36,B) 

#### Partial ranking functions of CR eval_start_input_tga_bb12_in(V_22,V_36,B) 


### Resulting Chains:eval_start_input_tga_bb12_in(V_22,V_36,B) 
* [39]
* [38]
* [37]...


### Merging Chains  eval_start_input_tga_bb12_in/3 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 


### Specialization of cost equations eval_start_input_tga_bb4_in/1 
* CE 4 is refined into CE [57,58,59] 


#### Refined cost equations eval_start_input_tga_bb4_in/1 
* CE 57: eval_start_input_tga_bb4_in(B) = 0+ eval_start_input_tga_bb12_in(C,D,B):1
     [C=0] 
* CE 58: eval_start_input_tga_bb4_in(B) = 0+ eval_start_input_tga_bb12_in(C,D,B):2
     [C>=1] 
* CE 59: eval_start_input_tga_bb4_in(B) = 0+ eval_start_input_tga_bb12_in(C,D,B):3
     [0>=C+1] 

### Cost equations --> "Loop" of eval_start_input_tga_bb4_in/1 
* CEs [59] --> Loop 40 
* CEs [57,58] --> Loop 41 

#### Loops of eval_start_input_tga_bb4_in/1 
* Loop 40: eval_start_input_tga_bb4_in(B) [] 
* Loop 41: eval_start_input_tga_bb4_in(B) [] 

### Ranking functions of CR eval_start_input_tga_bb4_in(B) 

#### Partial ranking functions of CR eval_start_input_tga_bb4_in(B) 


### Resulting Chains:eval_start_input_tga_bb4_in(B) 
* [41]
* [40]...


### Merging Chains  eval_start_input_tga_bb4_in/1 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_start_input_tga_1/1 
* CE 3 is refined into CE [60,61] 


#### Refined cost equations eval_start_input_tga_1/1 
* CE 60: eval_start_input_tga_1(B) = 0+ eval_start_input_tga_bb4_in(B):1
     [] 
* CE 61: eval_start_input_tga_1(B) = 0+ eval_start_input_tga_bb4_in(B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_tga_1/1 
* CEs [61] --> Loop 42 
* CEs [60] --> Loop 43 

#### Loops of eval_start_input_tga_1/1 
* Loop 42: eval_start_input_tga_1(B) [] 
* Loop 43: eval_start_input_tga_1(B) [] 

### Ranking functions of CR eval_start_input_tga_1(B) 

#### Partial ranking functions of CR eval_start_input_tga_1(B) 


### Resulting Chains:eval_start_input_tga_1(B) 
* [43]
* [42]...


### Merging Chains  eval_start_input_tga_1/1 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations eval_start_input_tga_start/1 
* CE 2 is refined into CE [62,63] 


#### Refined cost equations eval_start_input_tga_start/1 
* CE 62: eval_start_input_tga_start(B) = 0+ eval_start_input_tga_1(B):1
     [] 
* CE 63: eval_start_input_tga_start(B) = 0+ eval_start_input_tga_1(B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_tga_start/1 
* CEs [63] --> Loop 44 
* CEs [62] --> Loop 45 

#### Loops of eval_start_input_tga_start/1 
* Loop 44: eval_start_input_tga_start(B) [] 
* Loop 45: eval_start_input_tga_start(B) [] 

### Ranking functions of CR eval_start_input_tga_start(B) 

#### Partial ranking functions of CR eval_start_input_tga_start(B) 


### Resulting Chains:eval_start_input_tga_start(B) 
* [45]
* [44]...


### Merging Chains  eval_start_input_tga_start/1 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1
#### Cost of phase [19]:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1*it(19)+0
#### Cost of loops [18] 

 * loop 18:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1
#### Cost of phase [18]:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1*it(18)+0
  Such that:it(18) =< V_idlen_0
it(18) =< V_idlen_0-V_idlen_0'

#### Cost of phase [18]:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1*it(18)+0
  Such that:it(18) =< V_idlen_0
it(18) =< V_idlen_0-V_idlen_0'

#### Cost of phase [18]:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1*it(18)+0
  Such that:it(18) =< V_idlen_0
it(18) =< V_idlen_0-V_idlen_0'

#### Cost of phase [18]:eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C) -> [eval_start_input_tga_bb33_in(V_36',V_idlen_0',B',C')] 
1*it(18)+0
  Such that:it(18) =< V_idlen_0
it(18) =< V_idlen_0-V_idlen_0'

#### Cost of chains of eval_start_input_tga_bb33_in(V_36,V_idlen_0,B,C):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [0>=V_idlen_0+1] 

* Chain [[18],23]: 1*it(18)+0
  Such that:it(18) =< V_idlen_0

  with precondition: [B=2,V_36=C,V_idlen_0>=1] 

* Chain [[18],22]: 1*it(18)+0
  Such that:it(18) =< V_idlen_0

  with precondition: [B=3,V_36=C,V_idlen_0>=1] 

* Chain [[18],21]: 1*it(18)+0
  Such that:it(18) =< V_idlen_0

  with precondition: [B=4,V_idlen_0>=1] 

* Chain [[18],20]: 1*it(18)+0
  Such that:it(18) =< V_idlen_0

  with precondition: [B=5,V_idlen_0>=1] 

* Chain [23]: 0
  with precondition: [V_idlen_0=0,B=2,C=V_36] 

* Chain [22]: 0
  with precondition: [V_idlen_0=0,B=3,C=V_36] 

* Chain [21]: 0
  with precondition: [V_idlen_0=0,B=4] 

* Chain [20]: 0
  with precondition: [V_idlen_0=0,B=5] 


#### Cost of chains of loop_cont_eval_start_input_tga_bb33_in(D,A,B):
* Chain [27]: 0
  with precondition: [D=2] 

* Chain [26]: 0
  with precondition: [D=3] 

* Chain [25]: 0
  with precondition: [D=4] 

* Chain [24]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_start_input_tga_bb31_in(V_22,V_36,B):
* Chain [30]: 1
  with precondition: [V_22=0] 

* Chain [29]: 4*s(1)+1
  Such that:aux(1) =< V_22
s(1) =< aux(1)

  with precondition: [V_22>=1] 

* Chain [28]...: 1*s(5)+1
  with precondition: [0>=V_22+1] 


#### Cost of chains of eval_start_input_tga_122(V_22,V_36,B):
* Chain [33]: 1
  with precondition: [V_22=0] 

* Chain [32]: 4*s(6)+1
  Such that:aux(2) =< V_22
s(6) =< aux(2)

  with precondition: [V_22>=1] 

* Chain [31]...: 1*s(10)+1
  with precondition: [0>=V_22+1] 


#### Cost of chains of eval_start_input_tga_bb28_in(V_22,V_36,B):
* Chain [36]: 1
  with precondition: [V_22=0] 

* Chain [35]: 8*s(12)+1
  Such that:aux(3) =< V_22
s(12) =< aux(3)

  with precondition: [V_22>=1] 

* Chain [34]...: 1*aux(4)+0
  with precondition: [0>=V_22+1] 


#### Cost of chains of eval_start_input_tga_bb12_in(V_22,V_36,B):
* Chain [39]: 1
  with precondition: [V_22=0] 

* Chain [38]: 8*s(18)+1
  Such that:s(17) =< V_22
s(18) =< s(17)

  with precondition: [V_22>=1] 

* Chain [37]...: 1*s(19)+0
  with precondition: [0>=V_22+1] 


#### Cost of chains of eval_start_input_tga_bb4_in(B):
* Chain [41]: 1*aux(5)+0
  with precondition: [] 

* Chain [40]...: 1*s(22)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_tga_1(B):
* Chain [43]: 1*s(23)+0
  with precondition: [] 

* Chain [42]...: 1*s(24)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_tga_start(B):
* Chain [45]: 1*s(25)+0
  with precondition: [] 

* Chain [44]...: 1*s(26)+0
  with precondition: [] 


Closed-form bounds of eval_start_input_tga_start(B): 
-------------------------------------
* Chain [45] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_start_input_tga_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 34 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 58 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 187 ms.

