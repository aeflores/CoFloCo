Warning: Ignored call to eval_dict_proc_array_param_stop/1 in equation eval_dict_proc_array_param_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_dict_proc_array_param_bb10_in/1]
1. recursive  : [eval_dict_proc_array_param_10/4,eval_dict_proc_array_param_9/4,eval_dict_proc_array_param_bb4_in/3]
2. non_recursive  : [eval_dict_proc_array_param_17/1]
3. non_recursive  : [eval_dict_proc_array_param_16/1]
4. non_recursive  : [eval_dict_proc_array_param_19/1]
5. non_recursive  : [eval_dict_proc_array_param_18/1]
6. non_recursive  : [loop_cont_eval_dict_proc_array_param_bb4_in/2]
7. non_recursive  : [eval_dict_proc_array_param_1/2]
8. non_recursive  : [eval_dict_proc_array_param_0/2]
9. non_recursive  : [eval_dict_proc_array_param_bb0_in/2]
10. non_recursive  : [eval_dict_proc_array_param_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_dict_proc_array_param_bb4_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_dict_proc_array_param_bb4_in/2
7. SCC is partially evaluated into eval_dict_proc_array_param_1/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_dict_proc_array_param_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_proc_array_param_bb4_in/3 
* CE 7 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 6 is refined into CE [12] 


#### Refined cost equations eval_dict_proc_array_param_bb4_in/3 
* CE 10: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) = 0
     [V_i_0>=V_count,V_i_0>=0,B=3] 
* CE 11: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) = 0
     [V_count>=V_i_0+1,V_i_0>=0,B=2] 
* CE 12: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) = 1+ eval_dict_proc_array_param_bb4_in(V_count,C,B)
     [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=C] 

### Cost equations --> "Loop" of eval_dict_proc_array_param_bb4_in/3 
* CEs [12] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_dict_proc_array_param_bb4_in/3 
* Loop 8: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B)->  eval_dict_proc_array_param_bb4_in(V_count,V_i_0',B)
                  [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 9: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) [V_i_0>=V_count,V_i_0>=0,B=3] 
* Loop 10: eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) [V_count>=V_i_0+1,V_i_0>=0,B=2] 

### Ranking functions of CR eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) 
* RF of phase [8]: [V_count-V_i_0]

#### Partial ranking functions of CR eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_count-V_i_0


### Resulting Chains:eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_dict_proc_array_param_bb4_in/3 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9]] --> 2 
* [[9,[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_dict_proc_array_param_bb4_in/2 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations loop_cont_eval_dict_proc_array_param_bb4_in/2 
* CE 13: loop_cont_eval_dict_proc_array_param_bb4_in(B,A) = 0
     [B=3] 
* CE 14: loop_cont_eval_dict_proc_array_param_bb4_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_proc_array_param_bb4_in/2 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of loop_cont_eval_dict_proc_array_param_bb4_in/2 
* Loop 11: loop_cont_eval_dict_proc_array_param_bb4_in(B,A) [B=3] 
* Loop 12: loop_cont_eval_dict_proc_array_param_bb4_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_dict_proc_array_param_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_dict_proc_array_param_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_dict_proc_array_param_bb4_in(B,A) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_dict_proc_array_param_bb4_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_dict_proc_array_param_1/2 
* CE 3 is refined into CE [15] 
* CE 4 is refined into CE [16,17,18] 


#### Refined cost equations eval_dict_proc_array_param_1/2 
* CE 15: eval_dict_proc_array_param_1(V_count,B) = 0
     [] 
* CE 16: eval_dict_proc_array_param_1(V_count,B) = 1+ eval_dict_proc_array_param_bb4_in(V_count,C,D):1+ loop_cont_eval_dict_proc_array_param_bb4_in(E,B):1
     [V_count>=1,E=2,D=2,C=0] 
* CE 17: eval_dict_proc_array_param_1(V_count,B) = 1+ eval_dict_proc_array_param_bb4_in(V_count,C,D):2+ loop_cont_eval_dict_proc_array_param_bb4_in(E,B):2
     [0>=V_count,E=3,D=3,C=0] 
* CE 18: eval_dict_proc_array_param_1(V_count,B) = 1+ eval_dict_proc_array_param_bb4_in(V_count,C,D):3+ loop_cont_eval_dict_proc_array_param_bb4_in(E,B):2
     [V_count>=1,E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_dict_proc_array_param_1/2 
* CEs [15,16,17,18] --> Loop 13 

#### Loops of eval_dict_proc_array_param_1/2 
* Loop 13: eval_dict_proc_array_param_1(V_count,B) [] 

### Ranking functions of CR eval_dict_proc_array_param_1(V_count,B) 

#### Partial ranking functions of CR eval_dict_proc_array_param_1(V_count,B) 


### Resulting Chains:eval_dict_proc_array_param_1(V_count,B) 
* [13]


### Merging Chains  eval_dict_proc_array_param_1/2 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_dict_proc_array_param_start/2 
* CE 2 is refined into CE [19] 


#### Refined cost equations eval_dict_proc_array_param_start/2 
* CE 19: eval_dict_proc_array_param_start(V_count,B) = 0+ eval_dict_proc_array_param_1(V_count,B):1
     [] 

### Cost equations --> "Loop" of eval_dict_proc_array_param_start/2 
* CEs [19] --> Loop 14 

#### Loops of eval_dict_proc_array_param_start/2 
* Loop 14: eval_dict_proc_array_param_start(V_count,B) [] 

### Ranking functions of CR eval_dict_proc_array_param_start(V_count,B) 

#### Partial ranking functions of CR eval_dict_proc_array_param_start(V_count,B) 


### Resulting Chains:eval_dict_proc_array_param_start(V_count,B) 
* [14]


### Merging Chains  eval_dict_proc_array_param_start/2 into  External patterns of execution 
* [[14]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) -> [eval_dict_proc_array_param_bb4_in(V_count',V_i_0',B')] 
1
#### Cost of phase [8]:eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) -> [eval_dict_proc_array_param_bb4_in(V_count',V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_count-V_i_0
it(8) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of phase [8]:eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B) -> [eval_dict_proc_array_param_bb4_in(V_count',V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_count-V_i_0
it(8) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of chains of eval_dict_proc_array_param_bb4_in(V_count,V_i_0,B):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_count-V_i_0

  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+2] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_count-V_i_0

  with precondition: [B=3,V_i_0>=0,V_count>=V_i_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+1] 

* Chain [9]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V_count] 


#### Cost of chains of loop_cont_eval_dict_proc_array_param_bb4_in(B,A):
* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_dict_proc_array_param_1(V_count,B):
* Chain [13]: 2*s(2)+1
  Such that:aux(1) =< V_count
s(2) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_dict_proc_array_param_start(V_count,B):
* Chain [14]: 2*s(5)+1
  Such that:s(4) =< V_count
s(5) =< s(4)

  with precondition: [] 


Closed-form bounds of eval_dict_proc_array_param_start(V_count,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: nat(V_count)*2+1 
    - Complexity: n 

### Maximum cost of eval_dict_proc_array_param_start(V_count,B): nat(V_count)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 44 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 175 ms.

