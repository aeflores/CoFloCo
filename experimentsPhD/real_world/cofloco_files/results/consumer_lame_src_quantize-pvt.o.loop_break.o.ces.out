Warning: Ignored call to eval_loop_break_stop/1 in equation eval_loop_break_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_loop_break_bb1_in/4]
1. non_recursive  : [eval_loop_break_bb11_in/1]
2. recursive  : [eval_loop_break_bb7_in/4]
3. recursive  : [eval_loop_break_bb5_in/2,loop_cont_eval_loop_break_bb7_in/3]
4. non_recursive  : [loop_cont_eval_loop_break_bb5_in/2]
5. non_recursive  : [loop_cont_eval_loop_break_bb1_in/3]
6. non_recursive  : [eval_loop_break_bb0_in/1]
7. non_recursive  : [eval_loop_break_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_loop_break_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_loop_break_bb7_in/4
3. SCC is partially evaluated into eval_loop_break_bb5_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_loop_break_bb1_in/3
6. SCC is partially evaluated into eval_loop_break_bb0_in/1
7. SCC is partially evaluated into eval_loop_break_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_loop_break_bb1_in/4 
* CE 6 is refined into CE [15] 
* CE 4 is refined into CE [16] 
* CE 5 is refined into CE [17] 


#### Refined cost equations eval_loop_break_bb1_in/4 
* CE 15: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) = 0
     [V_sfb_0>=V_1,V_sfb_0>=0,B=3] 
* CE 16: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) = 0
     [V_1>=V_sfb_0+1,V_sfb_0>=0,B=2] 
* CE 17: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) = 1+ eval_loop_break_bb1_in(V_1,D,B,C)
     [V_1>=V_sfb_0+1,V_sfb_0>=0,V_sfb_0+1=D] 

### Cost equations --> "Loop" of eval_loop_break_bb1_in/4 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_loop_break_bb1_in/4 
* Loop 14: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C)->  eval_loop_break_bb1_in(V_1,V_sfb_0',B,C)
                  [V_1>=V_sfb_0+1,V_sfb_0>=0,V_sfb_0+1=V_sfb_0'] 
* Loop 15: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) [V_sfb_0>=V_1,V_sfb_0>=0,B=3] 
* Loop 16: eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) [V_1>=V_sfb_0+1,V_sfb_0>=0,B=2] 

### Ranking functions of CR eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) 
* RF of phase [14]: [V_1-V_sfb_0]

#### Partial ranking functions of CR eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_1-V_sfb_0


### Resulting Chains:eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) 
* [[14],16]
* [[14],15]
* [16]
* [15]


### Merging Chains  eval_loop_break_bb1_in/4 into  External patterns of execution 
* [[16],[16,[14]]] --> 1 
* [[15]] --> 2 
* [[15,[14]]] --> 3 


### Specialization of cost equations eval_loop_break_bb7_in/4 
* CE 14 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 13 is refined into CE [20] 


#### Refined cost equations eval_loop_break_bb7_in/4 
* CE 18: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) = 0
     [V_i_0>=3,11>=V_sfb_1,V_sfb_1+1=C,B=3] 
* CE 19: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) = 0
     [V_i_0>=0,2>=V_i_0,11>=V_sfb_1,B=2] 
* CE 20: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) = 1+ eval_loop_break_bb7_in(V_sfb_1,D,B,C)
     [B>=2,V_i_0>=0,3>=B,2>=V_i_0,11>=V_sfb_1,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_loop_break_bb7_in/4 
* CEs [20] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_loop_break_bb7_in/4 
* Loop 17: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C)->  eval_loop_break_bb7_in(V_sfb_1,V_i_0',B,C)
                  [B>=2,V_i_0>=0,3>=B,2>=V_i_0,11>=V_sfb_1,V_i_0+1=V_i_0'] 
* Loop 18: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) [V_i_0>=3,11>=V_sfb_1,V_sfb_1+1=C,B=3] 
* Loop 19: eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) [V_i_0>=0,2>=V_i_0,11>=V_sfb_1,B=2] 

### Ranking functions of CR eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) 
* RF of phase [17]: [-V_i_0+3]

#### Partial ranking functions of CR eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -V_i_0+3


### Resulting Chains:eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) 
* [[17],19]
* [[17],18]
* [19]


### Merging Chains  eval_loop_break_bb7_in/4 into  External patterns of execution 
* [[19],[19,[17]]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations eval_loop_break_bb5_in/2 
* CE 11 is refined into CE [21] 
* CE 10 is refined into CE [22] 
* CE 9 is refined into CE [23] 


#### Refined cost equations eval_loop_break_bb5_in/2 
* CE 21: eval_loop_break_bb5_in(V_sfb_1,B) = 0
     [V_sfb_1>=12,B=2] 
* CE 22: eval_loop_break_bb5_in(V_sfb_1,B) = 1+ eval_loop_break_bb7_in(V_sfb_1,C,D,E):1
     [11>=V_sfb_1,D=2,C=0,B=2] 
* CE 23: eval_loop_break_bb5_in(V_sfb_1,B) = 2+ eval_loop_break_bb7_in(C,D,E,F):2+ eval_loop_break_bb5_in(F,G)
     [12>=F,F=C+1,F=V_sfb_1+1,G=2,E=3,D=0,B=2] 

### Cost equations --> "Loop" of eval_loop_break_bb5_in/2 
* CEs [23] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_loop_break_bb5_in/2 
* Loop 20: eval_loop_break_bb5_in(V_sfb_1,B)->  eval_loop_break_bb5_in(V_sfb_1',B')
                  [11>=V_sfb_1,V_sfb_1+1=V_sfb_1',B'=2,B=2] 
* Loop 21: eval_loop_break_bb5_in(V_sfb_1,B) [V_sfb_1>=12,B=2] 
* Loop 22: eval_loop_break_bb5_in(V_sfb_1,B) [11>=V_sfb_1,B=2] 

### Ranking functions of CR eval_loop_break_bb5_in(V_sfb_1,B) 
* RF of phase [20]: [-V_sfb_1+12]

#### Partial ranking functions of CR eval_loop_break_bb5_in(V_sfb_1,B) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -V_sfb_1+12


### Resulting Chains:eval_loop_break_bb5_in(V_sfb_1,B) 
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  eval_loop_break_bb5_in/2 into  External patterns of execution 
* [[22],[21,[20]],[22,[20]]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations loop_cont_eval_loop_break_bb1_in/3 
* CE 8 is refined into CE [24,25] 
* CE 7 is refined into CE [26] 


#### Refined cost equations loop_cont_eval_loop_break_bb1_in/3 
* CE 24: loop_cont_eval_loop_break_bb1_in(E,A,B) = 1+ eval_loop_break_bb5_in(A,F):1
     [11>=A,F=2,E=3] 
* CE 25: loop_cont_eval_loop_break_bb1_in(E,A,B) = 1+ eval_loop_break_bb5_in(A,F):2
     [A>=12,F=2,E=3] 
* CE 26: loop_cont_eval_loop_break_bb1_in(E,A,B) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_loop_break_bb1_in/3 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [26] --> Loop 25 

#### Loops of loop_cont_eval_loop_break_bb1_in/3 
* Loop 23: loop_cont_eval_loop_break_bb1_in(E,A,B) [A>=12,E=3] 
* Loop 24: loop_cont_eval_loop_break_bb1_in(E,A,B) [11>=A,E=3] 
* Loop 25: loop_cont_eval_loop_break_bb1_in(E,A,B) [E=2] 

### Ranking functions of CR loop_cont_eval_loop_break_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_loop_break_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_loop_break_bb1_in(E,A,B) 
* [25]
* [24]
* [23]


### Merging Chains  loop_cont_eval_loop_break_bb1_in/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations eval_loop_break_bb0_in/1 
* CE 3 is refined into CE [27,28,29,30,31] 


#### Refined cost equations eval_loop_break_bb0_in/1 
* CE 27: eval_loop_break_bb0_in(B) = 1+ eval_loop_break_bb1_in(C,D,E,F):1+ loop_cont_eval_loop_break_bb1_in(G,F,B):1
     [C>=1,G=2,E=2,D=0] 
* CE 28: eval_loop_break_bb0_in(B) = 1+ eval_loop_break_bb1_in(C,D,E,F):2+ loop_cont_eval_loop_break_bb1_in(G,F,B):2
     [11>=F,0>=C,G=3,E=3,D=0] 
* CE 29: eval_loop_break_bb0_in(B) = 1+ eval_loop_break_bb1_in(C,D,E,F):2+ loop_cont_eval_loop_break_bb1_in(G,F,B):3
     [F>=12,0>=C,G=3,E=3,D=0] 
* CE 30: eval_loop_break_bb0_in(B) = 1+ eval_loop_break_bb1_in(C,D,E,F):3+ loop_cont_eval_loop_break_bb1_in(G,F,B):2
     [C>=1,11>=F,G=3,E=3,D=0] 
* CE 31: eval_loop_break_bb0_in(B) = 1+ eval_loop_break_bb1_in(C,D,E,F):3+ loop_cont_eval_loop_break_bb1_in(G,F,B):3
     [F>=12,C>=1,G=3,E=3,D=0] 

### Cost equations --> "Loop" of eval_loop_break_bb0_in/1 
* CEs [27,28,29,30,31] --> Loop 26 

#### Loops of eval_loop_break_bb0_in/1 
* Loop 26: eval_loop_break_bb0_in(B) [] 

### Ranking functions of CR eval_loop_break_bb0_in(B) 

#### Partial ranking functions of CR eval_loop_break_bb0_in(B) 


### Resulting Chains:eval_loop_break_bb0_in(B) 
* [26]


### Merging Chains  eval_loop_break_bb0_in/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_loop_break_start/1 
* CE 2 is refined into CE [32] 


#### Refined cost equations eval_loop_break_start/1 
* CE 32: eval_loop_break_start(B) = 0+ eval_loop_break_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_loop_break_start/1 
* CEs [32] --> Loop 27 

#### Loops of eval_loop_break_start/1 
* Loop 27: eval_loop_break_start(B) [] 

### Ranking functions of CR eval_loop_break_start(B) 

#### Partial ranking functions of CR eval_loop_break_start(B) 


### Resulting Chains:eval_loop_break_start(B) 
* [27]


### Merging Chains  eval_loop_break_start/1 into  External patterns of execution 
* [[27]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) -> [eval_loop_break_bb1_in(V_1',V_sfb_0',B',C')] 
1
#### Cost of phase [14]:eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) -> [eval_loop_break_bb1_in(V_1',V_sfb_0',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_1-V_sfb_0
it(14) =< V_1-V_sfb_0-V_1'+V_sfb_0'

#### Cost of phase [14]:eval_loop_break_bb1_in(V_1,V_sfb_0,B,C) -> [eval_loop_break_bb1_in(V_1',V_sfb_0',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_1-V_sfb_0
it(14) =< V_1-V_sfb_0-V_1'+V_sfb_0'

#### Cost of chains of eval_loop_break_bb1_in(V_1,V_sfb_0,B,C):
* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_1-V_sfb_0

  with precondition: [B=2,V_sfb_0>=0,V_1>=V_sfb_0+2] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_1-V_sfb_0

  with precondition: [B=3,V_sfb_0>=0,V_1>=V_sfb_0+1] 

* Chain [16]: 0
  with precondition: [B=2,V_sfb_0>=0,V_1>=V_sfb_0+1] 

* Chain [15]: 0
  with precondition: [B=3,V_sfb_0>=0,V_sfb_0>=V_1] 


#### Cost of loops [17] 

 * loop 17:eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) -> [eval_loop_break_bb7_in(V_sfb_1',V_i_0',B',C')] 
1
#### Cost of phase [17]:eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) -> [eval_loop_break_bb7_in(V_sfb_1',V_i_0',B',C')] 
1*it(17)+0
  Such that:it(17) =< -V_i_0+3
it(17) =< -V_i_0+V_i_0'

#### Cost of phase [17]:eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C) -> [eval_loop_break_bb7_in(V_sfb_1',V_i_0',B',C')] 
1*it(17)+0
  Such that:it(17) =< -V_i_0+3
it(17) =< -V_i_0+V_i_0'

#### Cost of chains of eval_loop_break_bb7_in(V_sfb_1,V_i_0,B,C):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+2

  with precondition: [B=2,11>=V_sfb_1,1>=V_i_0,V_i_0>=0] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+3

  with precondition: [B=3,V_sfb_1+1=C,11>=V_sfb_1,2>=V_i_0,V_i_0>=0] 

* Chain [19]: 0
  with precondition: [B=2,11>=V_sfb_1,2>=V_i_0,V_i_0>=0] 


#### Cost of loops [20] 

 * loop 20:eval_loop_break_bb5_in(V_sfb_1,B) -> [eval_loop_break_bb5_in(V_sfb_1',B')] 
1*s(5)+2
  Such that:s(5) =< 3

#### Cost of phase [20]:eval_loop_break_bb5_in(V_sfb_1,B) -> [eval_loop_break_bb5_in(V_sfb_1',B')] 
2*it(20)+1*s(6)+0
  Such that:aux(2) =< -V_sfb_1+12
aux(3) =< -V_sfb_1+V_sfb_1'
aux(1) =< aux(2)
it(20) =< aux(2)
aux(1) =< aux(3)
it(20) =< aux(3)
s(6) =< aux(1)*3

#### Cost of phase [20]:eval_loop_break_bb5_in(V_sfb_1,B) -> [eval_loop_break_bb5_in(V_sfb_1',B')] 
2*it(20)+1*s(6)+0
  Such that:aux(2) =< -V_sfb_1+12
aux(3) =< -V_sfb_1+V_sfb_1'
aux(1) =< aux(2)
it(20) =< aux(2)
aux(1) =< aux(3)
it(20) =< aux(3)
s(6) =< aux(1)*3

#### Cost of chains of eval_loop_break_bb5_in(V_sfb_1,B):
* Chain [[20],22]: 2*it(20)+1*s(3)+1*s(6)+1
  Such that:s(3) =< 2
aux(3) =< -V_sfb_1+11
aux(2) =< -V_sfb_1+12
aux(1) =< aux(2)
it(20) =< aux(2)
aux(1) =< aux(3)
it(20) =< aux(3)
s(6) =< aux(1)*3

  with precondition: [B=2,10>=V_sfb_1] 

* Chain [[20],21]: 2*it(20)+1*s(6)+0
  Such that:aux(4) =< -V_sfb_1+12
it(20) =< aux(4)
s(6) =< aux(4)*3

  with precondition: [B=2,11>=V_sfb_1] 

* Chain [22]: 1*s(3)+1
  Such that:s(3) =< 2

  with precondition: [B=2,11>=V_sfb_1] 

* Chain [21]: 0
  with precondition: [B=2,V_sfb_1>=12] 


#### Cost of chains of loop_cont_eval_loop_break_bb1_in(E,A,B):
* Chain [25]: 0
  with precondition: [E=2] 

* Chain [24]: 2*s(20)+2*s(22)+1*s(23)+2*s(24)+1*s(25)+2
  Such that:s(18) =< 2
s(17) =< -A+11
s(19) =< -A+12
s(20) =< s(18)
s(21) =< s(19)
s(22) =< s(19)
s(21) =< s(17)
s(22) =< s(17)
s(23) =< s(21)*3
s(24) =< s(19)
s(25) =< s(19)*3

  with precondition: [E=3,11>=A] 

* Chain [23]: 1
  with precondition: [E=3,A>=12] 


#### Cost of chains of eval_loop_break_bb0_in(B):
* Chain [26]: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_loop_break_start(B):
* Chain [27]: 1*s(47)+0
  with precondition: [] 


Closed-form bounds of eval_loop_break_start(B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_loop_break_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 36 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 35 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 130 ms.

