Warning: Ignored call to eval_mp_dmul_stop/1 in equation loop_cont_eval_mp_dmul_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mp_dmul_17/5,eval_mp_dmul_18/5,eval_mp_dmul_bb1_in/4]
1. non_recursive  : [loop_cont_eval_mp_dmul_bb1_in/2]
2. non_recursive  : [eval_mp_dmul_6/3]
3. non_recursive  : [eval_mp_dmul_5/4]
4. non_recursive  : [eval_mp_dmul_bb0_in/3]
5. non_recursive  : [eval_mp_dmul_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mp_dmul_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mp_dmul_6/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_mp_dmul_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_dmul_bb1_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_mp_dmul_bb1_in/4 
* CE 8: eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) = 0
     [V_i_0>=V__munit_prec,16*V__global_precision+15>=16*V__munit_prec,16*V__munit_prec+15>=16*V__global_precision,V_i_0>=0,B=2] 
* CE 9: eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) = 1+ eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,C,D)
     [V__munit_prec>=V_i_0+1,16*V__global_precision+15>=16*V__munit_prec,16*V__munit_prec+15>=16*V__global_precision,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_mp_dmul_bb1_in/4 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_mp_dmul_bb1_in/4 
* Loop 7: eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B)->  eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0',B')
                  [V__munit_prec>=V_i_0+1,16*V__global_precision+15>=16*V__munit_prec,16*V__munit_prec+15>=16*V__global_precision,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) [V_i_0>=V__munit_prec,16*V__global_precision+15>=16*V__munit_prec,16*V__munit_prec+15>=16*V__global_precision,V_i_0>=0,B=2] 

### Ranking functions of CR eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) 
* RF of phase [7]: [V__global_precision-V_i_0+1,V__munit_prec-V_i_0]

#### Partial ranking functions of CR eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__global_precision-V_i_0+1
    V__munit_prec-V_i_0


### Resulting Chains:eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) 
* [[7],8]
* [8]


### Merging Chains  eval_mp_dmul_bb1_in/4 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_mp_dmul_6/3 
* CE 4 is refined into CE [10,11] 
* CE 5 is refined into CE [12] 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_mp_dmul_6/3 
* CE 10: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) = 1+ eval_mp_dmul_bb1_in(V__global_precision,C,D,E):1
     [16*V__global_precision>=1,15>=16*V__global_precision,E=2,D=0,C=0] 
* CE 11: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) = 1+ eval_mp_dmul_bb1_in(V__global_precision,C,D,E):2
     [V__global_precision>=C,16*C+15>=16*V__global_precision,C>=1,E=2,D=0] 
* CE 12: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) = 1+ eval_mp_dmul_bb1_in(V__global_precision,C,D,E):1
     [C>=V__global_precision,16*V__global_precision+15>=16*C,0>=C,0>=16*V__global_precision+1,E=2,D=0] 
* CE 13: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) = 1+ eval_mp_dmul_bb1_in(C,D,E,F):1
     [F=2,E=0,D=0,C=0,V__global_precision=0] 

### Cost equations --> "Loop" of eval_mp_dmul_6/3 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_mp_dmul_6/3 
* Loop 9: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) [V__global_precision>=1] 
* Loop 10: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) [0>=16*V__global_precision+1] 
* Loop 11: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) [16*V__global_precision>=1,15>=16*V__global_precision] 
* Loop 12: eval_mp_dmul_6(V__global_precision,V__munit_prec,B) [V__global_precision=0] 

### Ranking functions of CR eval_mp_dmul_6(V__global_precision,V__munit_prec,B) 

#### Partial ranking functions of CR eval_mp_dmul_6(V__global_precision,V__munit_prec,B) 


### Resulting Chains:eval_mp_dmul_6(V__global_precision,V__munit_prec,B) 
* [12]
* [11]
* [10]
* [9]


### Merging Chains  eval_mp_dmul_6/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 
* [[9]] --> 4 


### Specialization of cost equations eval_mp_dmul_start/3 
* CE 2 is refined into CE [14,15,16,17] 


#### Refined cost equations eval_mp_dmul_start/3 
* CE 14: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) = 0+ eval_mp_dmul_6(C,V__munit_prec,B):1
     [C=0,V__global_precision=0] 
* CE 15: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) = 0+ eval_mp_dmul_6(V__global_precision,V__munit_prec,B):2
     [16*V__global_precision>=1,15>=16*V__global_precision] 
* CE 16: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) = 0+ eval_mp_dmul_6(V__global_precision,V__munit_prec,B):3
     [0>=16*V__global_precision+1] 
* CE 17: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) = 0+ eval_mp_dmul_6(V__global_precision,V__munit_prec,B):4
     [V__global_precision>=1] 

### Cost equations --> "Loop" of eval_mp_dmul_start/3 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

#### Loops of eval_mp_dmul_start/3 
* Loop 13: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) [V__global_precision>=1] 
* Loop 14: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) [0>=16*V__global_precision+1] 
* Loop 15: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) [16*V__global_precision>=1,15>=16*V__global_precision] 
* Loop 16: eval_mp_dmul_start(V__global_precision,V__munit_prec,B) [V__global_precision=0] 

### Ranking functions of CR eval_mp_dmul_start(V__global_precision,V__munit_prec,B) 

#### Partial ranking functions of CR eval_mp_dmul_start(V__global_precision,V__munit_prec,B) 


### Resulting Chains:eval_mp_dmul_start(V__global_precision,V__munit_prec,B) 
* [16]
* [15]
* [14]
* [13]


### Merging Chains  eval_mp_dmul_start/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 
* [[13]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) -> [eval_mp_dmul_bb1_in(V__global_precision',V__munit_prec',V_i_0',B')] 
1
#### Cost of phase [7]:eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B) -> [eval_mp_dmul_bb1_in(V__global_precision',V__munit_prec',V_i_0',B')] 
1*it(7)+0
  Such that:it(7) =< V__global_precision-V_i_0+1
it(7) =< V__global_precision-V_i_0-V__global_precision'+V_i_0'
it(7) =< V__munit_prec-V_i_0
it(7) =< V__munit_prec-V_i_0-V__munit_prec'+V_i_0'

#### Cost of chains of eval_mp_dmul_bb1_in(V__global_precision,V__munit_prec,V_i_0,B):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__munit_prec-V_i_0

  with precondition: [B=2,V_i_0>=0,16*V__munit_prec+15>=16*V__global_precision,16*V__global_precision+15>=16*V__munit_prec,V__munit_prec>=V_i_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_i_0>=0,16*V__munit_prec+15>=16*V__global_precision,16*V__global_precision+15>=16*V__munit_prec,V_i_0>=V__munit_prec] 


#### Cost of chains of eval_mp_dmul_6(V__global_precision,V__munit_prec,B):
* Chain [12]: 1
  with precondition: [V__global_precision=0] 

* Chain [11]: 1
  with precondition: [15>=16*V__global_precision,16*V__global_precision>=1] 

* Chain [10]: 1
  with precondition: [0>=16*V__global_precision+1] 

* Chain [9]: 1*s(1)+1
  Such that:s(1) =< V__global_precision

  with precondition: [V__global_precision>=1] 


#### Cost of chains of eval_mp_dmul_start(V__global_precision,V__munit_prec,B):
* Chain [16]: 1
  with precondition: [V__global_precision=0] 

* Chain [15]: 1
  with precondition: [15>=16*V__global_precision,16*V__global_precision>=1] 

* Chain [14]: 1
  with precondition: [0>=16*V__global_precision+1] 

* Chain [13]: 1*s(2)+1
  Such that:s(2) =< V__global_precision

  with precondition: [V__global_precision>=1] 


Closed-form bounds of eval_mp_dmul_start(V__global_precision,V__munit_prec,B): 
-------------------------------------
* Chain [16] with precondition: [V__global_precision=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [15>=16*V__global_precision,16*V__global_precision>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [0>=16*V__global_precision+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V__global_precision>=1] 
    - Upper bound: V__global_precision+1 
    - Complexity: n 

### Maximum cost of eval_mp_dmul_start(V__global_precision,V__munit_prec,B): nat(V__global_precision)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 65 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 51 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 240 ms.

