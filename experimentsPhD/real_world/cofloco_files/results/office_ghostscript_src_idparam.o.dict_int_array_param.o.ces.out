Warning: Ignored call to eval_dict_int_array_param_stop/1 in equation eval_dict_int_array_param_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_dict_int_array_param_bb14_in/1]
1. recursive  : [eval_dict_int_array_param_bb13_in/3,eval_dict_int_array_param_bb5_in/3]
2. non_recursive  : [eval_dict_int_array_param_NewDefault_in/1]
3. non_recursive  : [loop_cont_eval_dict_int_array_param_bb5_in/2]
4. non_recursive  : [eval_dict_int_array_param_1/1]
5. non_recursive  : [eval_dict_int_array_param_0/1]
6. non_recursive  : [eval_dict_int_array_param_bb0_in/1]
7. non_recursive  : [eval_dict_int_array_param_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_dict_int_array_param_bb5_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_dict_int_array_param_bb5_in/2
4. SCC is partially evaluated into eval_dict_int_array_param_1/1
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_dict_int_array_param_bb0_in/1
7. SCC is partially evaluated into eval_dict_int_array_param_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_int_array_param_bb5_in/3 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 7 is refined into CE [16] 


#### Refined cost equations eval_dict_int_array_param_bb5_in/3 
* CE 13: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) = 0
     [V_15>=V_i_0+1,V_i_0>=0,B=3] 
* CE 14: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) = 0
     [V_15>=V_i_0+1,V_i_0>=0,B=2] 
* CE 15: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) = 0
     [V_i_0>=V_15,V_i_0>=0,B=2] 
* CE 16: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) = 1+ eval_dict_int_array_param_bb5_in(V_15,C,B)
     [V_15>=V_i_0+1,V_i_0>=0,V_i_0+1=C] 

### Cost equations --> "Loop" of eval_dict_int_array_param_bb5_in/3 
* CEs [16] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_dict_int_array_param_bb5_in/3 
* Loop 10: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B)->  eval_dict_int_array_param_bb5_in(V_15,V_i_0',B)
                  [V_15>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 11: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) [V_15>=V_i_0+1,V_i_0>=0,B=3] 
* Loop 12: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) [V_15>=V_i_0+1,V_i_0>=0,B=2] 
* Loop 13: eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) [V_i_0>=V_15,V_i_0>=0,B=2] 

### Ranking functions of CR eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) 
* RF of phase [10]: [V_15-V_i_0]

#### Partial ranking functions of CR eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_15-V_i_0


### Resulting Chains:eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) 
* [[10],13]
* [[10],12]
* [[10],11]
* [13]
* [12]
* [11]


### Merging Chains  eval_dict_int_array_param_bb5_in/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12],[12,[10]],[13,[10]]] --> 2 
* [[11],[11,[10]]] --> 3 


### Specialization of cost equations loop_cont_eval_dict_int_array_param_bb5_in/2 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


#### Refined cost equations loop_cont_eval_dict_int_array_param_bb5_in/2 
* CE 17: loop_cont_eval_dict_int_array_param_bb5_in(D,A) = 0
     [D=3] 
* CE 18: loop_cont_eval_dict_int_array_param_bb5_in(D,A) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_int_array_param_bb5_in/2 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of loop_cont_eval_dict_int_array_param_bb5_in/2 
* Loop 14: loop_cont_eval_dict_int_array_param_bb5_in(D,A) [D=3] 
* Loop 15: loop_cont_eval_dict_int_array_param_bb5_in(D,A) [D=2] 

### Ranking functions of CR loop_cont_eval_dict_int_array_param_bb5_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_dict_int_array_param_bb5_in(D,A) 


### Resulting Chains:loop_cont_eval_dict_int_array_param_bb5_in(D,A) 
* [15]
* [14]


### Merging Chains  loop_cont_eval_dict_int_array_param_bb5_in/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_dict_int_array_param_1/1 
* CE 5 is refined into CE [19] 
* CE 6 is refined into CE [20,21,22] 


#### Refined cost equations eval_dict_int_array_param_1/1 
* CE 19: eval_dict_int_array_param_1(B) = 0
     [] 
* CE 20: eval_dict_int_array_param_1(B) = 1+ eval_dict_int_array_param_bb5_in(C,D,E):1+ loop_cont_eval_dict_int_array_param_bb5_in(F,B):1
     [0>=C,F=2,E=2,D=0] 
* CE 21: eval_dict_int_array_param_1(B) = 1+ eval_dict_int_array_param_bb5_in(C,D,E):2+ loop_cont_eval_dict_int_array_param_bb5_in(F,B):1
     [C>=1,F=2,E=2,D=0] 
* CE 22: eval_dict_int_array_param_1(B) = 1+ eval_dict_int_array_param_bb5_in(C,D,E):3+ loop_cont_eval_dict_int_array_param_bb5_in(F,B):2
     [C>=1,F=3,E=3,D=0] 

### Cost equations --> "Loop" of eval_dict_int_array_param_1/1 
* CEs [19,20,21,22] --> Loop 16 

#### Loops of eval_dict_int_array_param_1/1 
* Loop 16: eval_dict_int_array_param_1(B) [] 

### Ranking functions of CR eval_dict_int_array_param_1(B) 

#### Partial ranking functions of CR eval_dict_int_array_param_1(B) 


### Resulting Chains:eval_dict_int_array_param_1(B) 
* [16]


### Merging Chains  eval_dict_int_array_param_1/1 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_dict_int_array_param_bb0_in/1 
* CE 3 is refined into CE [23] 
* CE 4 is refined into CE [24] 


#### Refined cost equations eval_dict_int_array_param_bb0_in/1 
* CE 23: eval_dict_int_array_param_bb0_in(B) = 0
     [] 
* CE 24: eval_dict_int_array_param_bb0_in(B) = 0+ eval_dict_int_array_param_1(B):1
     [] 

### Cost equations --> "Loop" of eval_dict_int_array_param_bb0_in/1 
* CEs [23,24] --> Loop 17 

#### Loops of eval_dict_int_array_param_bb0_in/1 
* Loop 17: eval_dict_int_array_param_bb0_in(B) [] 

### Ranking functions of CR eval_dict_int_array_param_bb0_in(B) 

#### Partial ranking functions of CR eval_dict_int_array_param_bb0_in(B) 


### Resulting Chains:eval_dict_int_array_param_bb0_in(B) 
* [17]


### Merging Chains  eval_dict_int_array_param_bb0_in/1 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_dict_int_array_param_start/2 
* CE 2 is refined into CE [25] 


#### Refined cost equations eval_dict_int_array_param_start/2 
* CE 25: eval_dict_int_array_param_start(V_maxlen,B) = 0+ eval_dict_int_array_param_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_dict_int_array_param_start/2 
* CEs [25] --> Loop 18 

#### Loops of eval_dict_int_array_param_start/2 
* Loop 18: eval_dict_int_array_param_start(V_maxlen,B) [] 

### Ranking functions of CR eval_dict_int_array_param_start(V_maxlen,B) 

#### Partial ranking functions of CR eval_dict_int_array_param_start(V_maxlen,B) 


### Resulting Chains:eval_dict_int_array_param_start(V_maxlen,B) 
* [18]


### Merging Chains  eval_dict_int_array_param_start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) -> [eval_dict_int_array_param_bb5_in(V_15',V_i_0',B')] 
1
#### Cost of phase [10]:eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) -> [eval_dict_int_array_param_bb5_in(V_15',V_i_0',B')] 
1*it(10)+0
  Such that:it(10) =< V_15-V_i_0
it(10) =< V_15-V_i_0-V_15'+V_i_0'

#### Cost of phase [10]:eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) -> [eval_dict_int_array_param_bb5_in(V_15',V_i_0',B')] 
1*it(10)+0
  Such that:it(10) =< V_15-V_i_0
it(10) =< V_15-V_i_0-V_15'+V_i_0'

#### Cost of phase [10]:eval_dict_int_array_param_bb5_in(V_15,V_i_0,B) -> [eval_dict_int_array_param_bb5_in(V_15',V_i_0',B')] 
1*it(10)+0
  Such that:it(10) =< V_15-V_i_0
it(10) =< V_15-V_i_0-V_15'+V_i_0'

#### Cost of chains of eval_dict_int_array_param_bb5_in(V_15,V_i_0,B):
* Chain [[10],13]: 1*it(10)+0
  Such that:it(10) =< V_15-V_i_0

  with precondition: [B=2,V_i_0>=0,V_15>=V_i_0+1] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V_15-V_i_0

  with precondition: [B=2,V_i_0>=0,V_15>=V_i_0+2] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_15-V_i_0

  with precondition: [B=3,V_i_0>=0,V_15>=V_i_0+2] 

* Chain [13]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_15] 

* Chain [12]: 0
  with precondition: [B=2,V_i_0>=0,V_15>=V_i_0+1] 

* Chain [11]: 0
  with precondition: [B=3,V_i_0>=0,V_15>=V_i_0+1] 


#### Cost of chains of loop_cont_eval_dict_int_array_param_bb5_in(D,A):
* Chain [15]: 0
  with precondition: [D=2] 

* Chain [14]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_dict_int_array_param_1(B):
* Chain [16]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_dict_int_array_param_bb0_in(B):
* Chain [17]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_dict_int_array_param_start(V_maxlen,B):
* Chain [18]: 1*s(8)+0
  with precondition: [] 


Closed-form bounds of eval_dict_int_array_param_start(V_maxlen,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_dict_int_array_param_start(V_maxlen,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 48 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 47 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 21 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 189 ms.

