Warning: Ignored call to eval_mem_true24_fill_rectangle_stop/1 in equation eval_mem_true24_fill_rectangle_bb53_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mem_true24_fill_rectangle_bb53_in/1]
1. non_recursive  : [eval_mem_true24_fill_rectangle_NewDefault63_in/1]
2. recursive  : [eval_mem_true24_fill_rectangle_bb16_in/5]
3. recursive  : [eval_mem_true24_fill_rectangle_NewDefault14_in/3,eval_mem_true24_fill_rectangle_NewDefault_in/3,eval_mem_true24_fill_rectangle_bb10_in/2,eval_mem_true24_fill_rectangle_bb13_in/3,eval_mem_true24_fill_rectangle_bb14_in/3,eval_mem_true24_fill_rectangle_bb15_in/3,eval_mem_true24_fill_rectangle_bb20_in/3,eval_mem_true24_fill_rectangle_bb21_in/3,eval_mem_true24_fill_rectangle_bb22_in/3,eval_mem_true24_fill_rectangle_bb24_in/3,eval_mem_true24_fill_rectangle_bb25_in/3,eval_mem_true24_fill_rectangle_bb26_in/3,loop_cont_eval_mem_true24_fill_rectangle_bb16_in/4]
4. recursive  : [eval_mem_true24_fill_rectangle_bb36_in/9]
5. recursive  : [eval_mem_true24_fill_rectangle_NewDefault41_in/4,eval_mem_true24_fill_rectangle_NewDefault52_in/5,eval_mem_true24_fill_rectangle_bb31_in/3,eval_mem_true24_fill_rectangle_bb42_in/5,loop_cont_eval_mem_true24_fill_rectangle_bb36_in/6]
6. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb31_in/2]
7. non_recursive  : [eval_mem_true24_fill_rectangle_bb30_in/3]
8. non_recursive  : [eval_mem_true24_fill_rectangle_bb27_in/3]
9. recursive  : [eval_mem_true24_fill_rectangle_bb46_in/2]
10. recursive  : [eval_mem_true24_fill_rectangle_bb48_in/2]
11. recursive  : [eval_mem_true24_fill_rectangle_bb50_in/2]
12. recursive  : [eval_mem_true24_fill_rectangle_bb52_in/2]
13. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb10_in/2]
14. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb46_in/2]
15. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb48_in/2]
16. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb50_in/2]
17. non_recursive  : [loop_cont_eval_mem_true24_fill_rectangle_bb52_in/2]
18. non_recursive  : [eval_mem_true24_fill_rectangle_bb6_in/3]
19. non_recursive  : [eval_mem_true24_fill_rectangle_bb4_in/4]
20. non_recursive  : [eval_mem_true24_fill_rectangle_bb2_in/5]
21. non_recursive  : [eval_mem_true24_fill_rectangle_bb0_in/5]
22. non_recursive  : [eval_mem_true24_fill_rectangle_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb16_in/5
3. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb10_in/2
4. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb36_in/9
5. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb31_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb30_in/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb46_in/2
10. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb48_in/2
11. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb50_in/2
12. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb52_in/2
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb6_in/3
19. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb4_in/4
20. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb2_in/5
21. SCC is partially evaluated into eval_mem_true24_fill_rectangle_bb0_in/5
22. SCC is partially evaluated into eval_mem_true24_fill_rectangle_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mem_true24_fill_rectangle_bb16_in/5 
* CE 54 is refined into CE [61] 
* CE 53 is refined into CE [62] 
* CE 52 is refined into CE [63] 
* CE 51 is refined into CE [64] 
* CE 50 is refined into CE [65] 
* CE 49 is refined into CE [66] 
* CE 48 is refined into CE [67] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb16_in/5 
* CE 61: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=9] 
* CE 62: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=8] 
* CE 63: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=7] 
* CE 64: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=6] 
* CE 65: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=5] 
* CE 66: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,D,B) = 0
     [B>=0,B+1=D,B+1=A,C=4] 
* CE 67: eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) = 1+ eval_mem_true24_fill_rectangle_bb16_in(E,V_55,B,C,D)
     [B>=4,V_55>=0,9>=B,V_55+1=E,V_55+1=V__3] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb16_in/5 
* CEs [67] --> Loop 33 
* CEs [61] --> Loop 34 
* CEs [62] --> Loop 35 
* CEs [63] --> Loop 36 
* CEs [64] --> Loop 37 
* CEs [65] --> Loop 38 
* CEs [66] --> Loop 39 

#### Loops of eval_mem_true24_fill_rectangle_bb16_in/5 
* Loop 33: eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D)->  eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55,B,C,D)
                  [B>=4,V_55>=0,9>=B,V_55+1=V__3',V_55+1=V__3] 
* Loop 34: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=9] 
* Loop 35: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=8] 
* Loop 36: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=7] 
* Loop 37: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=6] 
* Loop 38: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=5] 
* Loop 39: eval_mem_true24_fill_rectangle_bb16_in(A,B,C,A,D) [A>=1,A=D+1,A=B+1,C=4] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) 
* [[33]]...
* [[33],39]
* [[33],38]
* [[33],37]
* [[33],36]
* [[33],35]
* [[33],34]
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  eval_mem_true24_fill_rectangle_bb16_in/5 into  External patterns of execution 
* [[39],[39,[33]]] --> 1 
* [[38],[38,[33]]] --> 2 
* [[37],[37,[33]]] --> 3 
* [[36],[36,[33]]] --> 4 
* [[35],[35,[33]]] --> 5 
* [[34],[34,[33]]] --> 6 
* [[[33]]] --> 7 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb10_in/2 
* CE 34 is refined into CE [68] 
* CE 28 is refined into CE [69,70] 
* CE 29 is refined into CE [71,72] 
* CE 30 is refined into CE [73,74] 
* CE 31 is refined into CE [75,76] 
* CE 32 is refined into CE [77,78] 
* CE 33 is refined into CE [79,80] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb10_in/2 
* CE 68: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 0
     [0>=V__3,B=10] 
* CE 69: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):2+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=5,B=10] 
* CE 70: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=5,B=10] 
* CE 71: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):4+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=7,B=10] 
* CE 72: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=7,B=10] 
* CE 73: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):3+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=6,B=10] 
* CE 74: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=6,B=10] 
* CE 75: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):1+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=4,B=10] 
* CE 76: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=4,B=10] 
* CE 77: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):6+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=9,B=10] 
* CE 78: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=9,B=10] 
* CE 79: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,D):5+ eval_mem_true24_fill_rectangle_bb10_in(D,G)
     [D>=0,D+1=F,D+1=C,D+1=V__3,G=10,E=8,B=10] 
* CE 80: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) = 2+ eval_mem_true24_fill_rectangle_bb16_in(C,D,E,F,G):7
     [D>=0,D+1=C,D+1=V__3,H=10,E=8,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb10_in/2 
* CEs [70,72,74,76,78,80] --> Loop 40 
* CEs [69,71,73,75,77,79] --> Loop 41 
* CEs [68] --> Loop 42 

#### Loops of eval_mem_true24_fill_rectangle_bb10_in/2 
* Loop 40: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) [V__3>=1,B=10] 
* Loop 41: eval_mem_true24_fill_rectangle_bb10_in(V__3,B)->  eval_mem_true24_fill_rectangle_bb10_in(V__3',B')
                  [V__3'>=0,V__3'+1=V__3,B'=10,B=10] 
* Loop 42: eval_mem_true24_fill_rectangle_bb10_in(V__3,B) [0>=V__3,B=10] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb10_in(V__3,B) 
* RF of phase [41]: [V__3]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb10_in(V__3,B) 
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    V__3


### Resulting Chains:eval_mem_true24_fill_rectangle_bb10_in(V__3,B) 
* [[41],42]
* [[41],40]...
* [42]
* [40]...


### Merging Chains  eval_mem_true24_fill_rectangle_bb10_in/2 into  External patterns of execution 
* [[42]] --> 1 
* [[42,[41]]] --> 2 
* [[40]] --> 3 
* [[40,[41]]] --> 4 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb36_in/9 
* CE 60 is refined into CE [81] 
* CE 59 is refined into CE [82] 
* CE 58 is refined into CE [83] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb36_in/9 
* CE 81: eval_mem_true24_fill_rectangle_bb36_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=3] 
* CE 82: eval_mem_true24_fill_rectangle_bb36_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=2] 
* CE 83: eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) = 1+ eval_mem_true24_fill_rectangle_bb36_in(V_92,G,V_139,H,B,C,D,E,F)
     [V_92>=V_w1_0,B>=2,V_w1_0>=4,V_139>=0,3>=B,V_w1_0=H+4,V_139+1=G,V_139+1=V__4] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb36_in/9 
* CEs [83] --> Loop 43 
* CEs [81] --> Loop 44 
* CEs [82] --> Loop 45 

#### Loops of eval_mem_true24_fill_rectangle_bb36_in/9 
* Loop 43: eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F)->  eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4',V_139,V_w1_0',B,C,D,E,F)
                  [V_92>=V_w1_0,B>=2,V_w1_0>=4,V_139>=0,3>=B,V_w1_0=V_w1_0'+4,V_139+1=V__4',V_139+1=V__4] 
* Loop 44: eval_mem_true24_fill_rectangle_bb36_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=3] 
* Loop 45: eval_mem_true24_fill_rectangle_bb36_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=2] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) 
* RF of phase [43]: [V_w1_0/4-3/4]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) 
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    V_w1_0/4-3/4


### Resulting Chains:eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) 
* [[43],45]
* [[43],44]
* [45]
* [44]


### Merging Chains  eval_mem_true24_fill_rectangle_bb36_in/9 into  External patterns of execution 
* [[45]] --> 1 
* [[45,[43]]] --> 2 
* [[44]] --> 3 
* [[44,[43]]] --> 4 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb31_in/3 
* CE 57 is refined into CE [84] 
* CE 55 is refined into CE [85,86] 
* CE 56 is refined into CE [87,88] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb31_in/3 
* CE 84: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) = 0
     [0>=V__4,B=10] 
* CE 85: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) = 2+ eval_mem_true24_fill_rectangle_bb36_in(V_92,C,D,V_92,E,V_92,F,D,V_92):1+ eval_mem_true24_fill_rectangle_bb31_in(V_92,D,G)
     [D>=0,3>=V_92,D+1=F,D+1=C,D+1=V__4,G=10,E=2,B=10] 
* CE 86: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) = 2+ eval_mem_true24_fill_rectangle_bb36_in(V_92,C,D,V_92,E,V_92,F,D,G):2+ eval_mem_true24_fill_rectangle_bb31_in(V_92,D,H)
     [V_92>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__4,H=10,E=2,B=10] 
* CE 87: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) = 2+ eval_mem_true24_fill_rectangle_bb36_in(V_92,C,D,V_92,E,V_92,F,D,V_92):3+ eval_mem_true24_fill_rectangle_bb31_in(V_92,D,G)
     [D>=0,3>=V_92,D+1=F,D+1=C,D+1=V__4,G=10,E=3,B=10] 
* CE 88: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) = 2+ eval_mem_true24_fill_rectangle_bb36_in(V_92,C,D,V_92,E,V_92,F,D,G):4+ eval_mem_true24_fill_rectangle_bb31_in(V_92,D,H)
     [V_92>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__4,H=10,E=3,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb31_in/3 
* CEs [86,88] --> Loop 46 
* CEs [85,87] --> Loop 47 
* CEs [84] --> Loop 48 

#### Loops of eval_mem_true24_fill_rectangle_bb31_in/3 
* Loop 46: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B)->  eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4',B')
                  [V__4>=1,V_92>=4,V__4=V__4'+1,B'=10,B=10] 
* Loop 47: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B)->  eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4',B')
                  [V__4>=1,3>=V_92,V__4=V__4'+1,B'=10,B=10] 
* Loop 48: eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) [0>=V__4,B=10] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) 
* RF of phase [46]: [V__4]
* RF of phase [47]: [V__4]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) 
* Partial RF of phase [46]:
  - RF of loop [46:1]:
    V__4
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    V__4


### Resulting Chains:eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) 
* [[47],48]
* [[46],48]
* [48]


### Merging Chains  eval_mem_true24_fill_rectangle_bb31_in/3 into  External patterns of execution 
* [[48,[47]]] --> 1 
* [[48]] --> 2 
* [[48,[46]]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb30_in/3 
* CE 35 is refined into CE [89,90,91] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb30_in/3 
* CE 89: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) = 1+ eval_mem_true24_fill_rectangle_bb31_in(V_92,V__27,C):1
     [V__27>=1,3>=V_92,C=10] 
* CE 90: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) = 1+ eval_mem_true24_fill_rectangle_bb31_in(V_92,V__27,C):2
     [0>=V__27,C=10] 
* CE 91: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) = 1+ eval_mem_true24_fill_rectangle_bb31_in(V_92,V__27,C):3
     [V__27>=1,V_92>=4,C=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb30_in/3 
* CEs [91] --> Loop 49 
* CEs [89] --> Loop 50 
* CEs [90] --> Loop 51 

#### Loops of eval_mem_true24_fill_rectangle_bb30_in/3 
* Loop 49: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) [V_92>=4,V__27>=1] 
* Loop 50: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) [V__27>=1,3>=V_92] 
* Loop 51: eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) [0>=V__27] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B) 
* [51]
* [50]
* [49]


### Merging Chains  eval_mem_true24_fill_rectangle_bb30_in/3 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 
* [[49]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb46_in/2 
* CE 38 is refined into CE [92] 
* CE 37 is refined into CE [93] 
* CE 36 is refined into CE [94] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb46_in/2 
* CE 92: eval_mem_true24_fill_rectangle_bb46_in(V__8,B) = 0
     [B=10,V__8=1] 
* CE 93: eval_mem_true24_fill_rectangle_bb46_in(V__8,B) = 1+ eval_mem_true24_fill_rectangle_bb46_in(C,D)
     [V__8>=2,V__8=C+1,D=10,B=10] 
* CE 94: eval_mem_true24_fill_rectangle_bb46_in(V__8,B) = 1+ eval_mem_true24_fill_rectangle_bb46_in(C,D)
     [0>=V__8,V__8=C+1,D=10,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb46_in/2 
* CEs [93] --> Loop 52 
* CEs [94] --> Loop 53 
* CEs [92] --> Loop 54 

#### Loops of eval_mem_true24_fill_rectangle_bb46_in/2 
* Loop 52: eval_mem_true24_fill_rectangle_bb46_in(V__8,B)->  eval_mem_true24_fill_rectangle_bb46_in(V__8',B')
                  [V__8>=2,V__8=V__8'+1,B'=10,B=10] 
* Loop 53: eval_mem_true24_fill_rectangle_bb46_in(V__8,B)->  eval_mem_true24_fill_rectangle_bb46_in(V__8',B')
                  [0>=V__8,V__8=V__8'+1,B'=10,B=10] 
* Loop 54: eval_mem_true24_fill_rectangle_bb46_in(V__8,B) [B=10,V__8=1] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb46_in(V__8,B) 
* RF of phase [52]: [V__8-1]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb46_in(V__8,B) 
* Partial RF of phase [52]:
  - RF of loop [52:1]:
    V__8-1


### Resulting Chains:eval_mem_true24_fill_rectangle_bb46_in(V__8,B) 
* [[53]]...
* [[52],54]
* [54]


### Merging Chains  eval_mem_true24_fill_rectangle_bb46_in/2 into  External patterns of execution 
* [[54]] --> 1 
* [[54,[52]]] --> 2 
* [[[53]]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb48_in/2 
* CE 41 is refined into CE [95] 
* CE 40 is refined into CE [96] 
* CE 39 is refined into CE [97] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb48_in/2 
* CE 95: eval_mem_true24_fill_rectangle_bb48_in(V__7,B) = 0
     [B=10,V__7=1] 
* CE 96: eval_mem_true24_fill_rectangle_bb48_in(V__7,B) = 1+ eval_mem_true24_fill_rectangle_bb48_in(C,D)
     [V__7>=2,V__7=C+1,D=10,B=10] 
* CE 97: eval_mem_true24_fill_rectangle_bb48_in(V__7,B) = 1+ eval_mem_true24_fill_rectangle_bb48_in(C,D)
     [0>=V__7,V__7=C+1,D=10,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb48_in/2 
* CEs [96] --> Loop 55 
* CEs [97] --> Loop 56 
* CEs [95] --> Loop 57 

#### Loops of eval_mem_true24_fill_rectangle_bb48_in/2 
* Loop 55: eval_mem_true24_fill_rectangle_bb48_in(V__7,B)->  eval_mem_true24_fill_rectangle_bb48_in(V__7',B')
                  [V__7>=2,V__7=V__7'+1,B'=10,B=10] 
* Loop 56: eval_mem_true24_fill_rectangle_bb48_in(V__7,B)->  eval_mem_true24_fill_rectangle_bb48_in(V__7',B')
                  [0>=V__7,V__7=V__7'+1,B'=10,B=10] 
* Loop 57: eval_mem_true24_fill_rectangle_bb48_in(V__7,B) [B=10,V__7=1] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb48_in(V__7,B) 
* RF of phase [55]: [V__7-1]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb48_in(V__7,B) 
* Partial RF of phase [55]:
  - RF of loop [55:1]:
    V__7-1


### Resulting Chains:eval_mem_true24_fill_rectangle_bb48_in(V__7,B) 
* [[56]]...
* [[55],57]
* [57]


### Merging Chains  eval_mem_true24_fill_rectangle_bb48_in/2 into  External patterns of execution 
* [[57]] --> 1 
* [[57,[55]]] --> 2 
* [[[56]]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb50_in/2 
* CE 44 is refined into CE [98] 
* CE 43 is refined into CE [99] 
* CE 42 is refined into CE [100] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb50_in/2 
* CE 98: eval_mem_true24_fill_rectangle_bb50_in(V__6,B) = 0
     [B=10,V__6=1] 
* CE 99: eval_mem_true24_fill_rectangle_bb50_in(V__6,B) = 1+ eval_mem_true24_fill_rectangle_bb50_in(C,D)
     [V__6>=2,V__6=C+1,D=10,B=10] 
* CE 100: eval_mem_true24_fill_rectangle_bb50_in(V__6,B) = 1+ eval_mem_true24_fill_rectangle_bb50_in(C,D)
     [0>=V__6,V__6=C+1,D=10,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb50_in/2 
* CEs [99] --> Loop 58 
* CEs [100] --> Loop 59 
* CEs [98] --> Loop 60 

#### Loops of eval_mem_true24_fill_rectangle_bb50_in/2 
* Loop 58: eval_mem_true24_fill_rectangle_bb50_in(V__6,B)->  eval_mem_true24_fill_rectangle_bb50_in(V__6',B')
                  [V__6>=2,V__6=V__6'+1,B'=10,B=10] 
* Loop 59: eval_mem_true24_fill_rectangle_bb50_in(V__6,B)->  eval_mem_true24_fill_rectangle_bb50_in(V__6',B')
                  [0>=V__6,V__6=V__6'+1,B'=10,B=10] 
* Loop 60: eval_mem_true24_fill_rectangle_bb50_in(V__6,B) [B=10,V__6=1] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb50_in(V__6,B) 
* RF of phase [58]: [V__6-1]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb50_in(V__6,B) 
* Partial RF of phase [58]:
  - RF of loop [58:1]:
    V__6-1


### Resulting Chains:eval_mem_true24_fill_rectangle_bb50_in(V__6,B) 
* [[59]]...
* [[58],60]
* [60]


### Merging Chains  eval_mem_true24_fill_rectangle_bb50_in/2 into  External patterns of execution 
* [[60]] --> 1 
* [[60,[58]]] --> 2 
* [[[59]]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb52_in/2 
* CE 47 is refined into CE [101] 
* CE 46 is refined into CE [102] 
* CE 45 is refined into CE [103] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb52_in/2 
* CE 101: eval_mem_true24_fill_rectangle_bb52_in(V__5,B) = 0
     [B=10,V__5=1] 
* CE 102: eval_mem_true24_fill_rectangle_bb52_in(V__5,B) = 1+ eval_mem_true24_fill_rectangle_bb52_in(C,D)
     [V__5>=2,V__5=C+1,D=10,B=10] 
* CE 103: eval_mem_true24_fill_rectangle_bb52_in(V__5,B) = 1+ eval_mem_true24_fill_rectangle_bb52_in(C,D)
     [0>=V__5,V__5=C+1,D=10,B=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb52_in/2 
* CEs [102] --> Loop 61 
* CEs [103] --> Loop 62 
* CEs [101] --> Loop 63 

#### Loops of eval_mem_true24_fill_rectangle_bb52_in/2 
* Loop 61: eval_mem_true24_fill_rectangle_bb52_in(V__5,B)->  eval_mem_true24_fill_rectangle_bb52_in(V__5',B')
                  [V__5>=2,V__5=V__5'+1,B'=10,B=10] 
* Loop 62: eval_mem_true24_fill_rectangle_bb52_in(V__5,B)->  eval_mem_true24_fill_rectangle_bb52_in(V__5',B')
                  [0>=V__5,V__5=V__5'+1,B'=10,B=10] 
* Loop 63: eval_mem_true24_fill_rectangle_bb52_in(V__5,B) [B=10,V__5=1] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb52_in(V__5,B) 
* RF of phase [61]: [V__5-1]

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb52_in(V__5,B) 
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    V__5-1


### Resulting Chains:eval_mem_true24_fill_rectangle_bb52_in(V__5,B) 
* [[62]]...
* [[61],63]
* [63]


### Merging Chains  eval_mem_true24_fill_rectangle_bb52_in/2 into  External patterns of execution 
* [[63]] --> 1 
* [[63,[61]]] --> 2 
* [[[62]]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb6_in/3 
* CE 21 is refined into CE [104,105,106,107] 
* CE 22 is refined into CE [108,109,110] 
* CE 23 is refined into CE [111,112,113] 
* CE 24 is refined into CE [114] 
* CE 25 is refined into CE [115,116,117] 
* CE 26 is refined into CE [118,119,120] 
* CE 27 is refined into CE [121,122,123] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb6_in/3 
* CE 104: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb10_in(V__27,C):1
     [0>=V__27,C=10] 
* CE 105: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb10_in(V__27,C):2
     [V__27>=1,C=10] 
* CE 106: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb10_in(V__27,C):3
     [V__27>=1,C=10] 
* CE 107: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb10_in(V__27,C):4
     [V__27>=2,C=10] 
* CE 108: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 0+ eval_mem_true24_fill_rectangle_bb30_in(V__27,C,B):1
     [0>=V__27] 
* CE 109: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 0+ eval_mem_true24_fill_rectangle_bb30_in(V__27,C,B):2
     [V__27>=1,3>=C] 
* CE 110: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 0+ eval_mem_true24_fill_rectangle_bb30_in(V__27,C,B):3
     [C>=4,V__27>=1] 
* CE 111: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb46_in(C,D):1
     [D=10,C=1,V__27=1] 
* CE 112: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb46_in(V__27,C):2
     [V__27>=2,C=10] 
* CE 113: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb46_in(V__27,C):3
     [0>=V__27,C=10] 
* CE 114: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 0
     [] 
* CE 115: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb48_in(C,D):1
     [D=10,C=1,V__27=1] 
* CE 116: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb48_in(V__27,C):2
     [V__27>=2,C=10] 
* CE 117: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb48_in(V__27,C):3
     [0>=V__27,C=10] 
* CE 118: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb50_in(C,D):1
     [D=10,C=1,V__27=1] 
* CE 119: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb50_in(V__27,C):2
     [V__27>=2,C=10] 
* CE 120: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb50_in(V__27,C):3
     [0>=V__27,C=10] 
* CE 121: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb52_in(C,D):1
     [D=10,C=1,V__27=1] 
* CE 122: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb52_in(V__27,C):2
     [V__27>=2,C=10] 
* CE 123: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) = 1+ eval_mem_true24_fill_rectangle_bb52_in(V__27,C):3
     [0>=V__27,C=10] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb6_in/3 
* CEs [106,107] --> Loop 64 
* CEs [113,117,120,123] --> Loop 65 
* CEs [104,105,108,109,110,111,112,114,115,116,118,119,121,122] --> Loop 66 

#### Loops of eval_mem_true24_fill_rectangle_bb6_in/3 
* Loop 64: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) [V__27>=1] 
* Loop 65: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) [0>=V__27] 
* Loop 66: eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) [] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B) 
* [66]
* [65]...
* [64]...


### Merging Chains  eval_mem_true24_fill_rectangle_bb6_in/3 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb4_in/4 
* CE 20 is refined into CE [124,125,126] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb4_in/4 
* CE 124: eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) = 0+ eval_mem_true24_fill_rectangle_bb6_in(V__2,C,B):1
     [] 
* CE 125: eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) = 0+ eval_mem_true24_fill_rectangle_bb6_in(V__2,C,B):2
     [0>=C] 
* CE 126: eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) = 0+ eval_mem_true24_fill_rectangle_bb6_in(V__2,C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb4_in/4 
* CEs [125,126] --> Loop 67 
* CEs [124] --> Loop 68 

#### Loops of eval_mem_true24_fill_rectangle_bb4_in/4 
* Loop 67: eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) [] 
* Loop 68: eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) [] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B) 
* [68]
* [67]...


### Merging Chains  eval_mem_true24_fill_rectangle_bb4_in/4 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb2_in/5 
* CE 19 is refined into CE [127,128] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb2_in/5 
* CE 127: eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) = 0+ eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,C,B):1
     [] 
* CE 128: eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) = 0+ eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,C,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb2_in/5 
* CEs [128] --> Loop 69 
* CEs [127] --> Loop 70 

#### Loops of eval_mem_true24_fill_rectangle_bb2_in/5 
* Loop 69: eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) [] 
* Loop 70: eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) [] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B) 
* [70]
* [69]...


### Merging Chains  eval_mem_true24_fill_rectangle_bb2_in/5 into  External patterns of execution 
* [[70]] --> 1 
* [[69]] --> 2 


### Specialization of cost equations eval_mem_true24_fill_rectangle_bb0_in/5 
* CE 3 is refined into CE [129,130] 
* CE 4 is refined into CE [131,132] 
* CE 5 is refined into CE [133,134] 
* CE 6 is refined into CE [135,136] 
* CE 7 is refined into CE [137,138] 
* CE 8 is refined into CE [139,140] 
* CE 9 is refined into CE [141,142] 
* CE 10 is refined into CE [143,144] 
* CE 11 is refined into CE [145,146] 
* CE 12 is refined into CE [147,148] 
* CE 13 is refined into CE [149,150] 
* CE 14 is refined into CE [151,152] 
* CE 15 is refined into CE [153,154] 
* CE 16 is refined into CE [155,156] 
* CE 17 is refined into CE [157,158] 
* CE 18 is refined into CE [159,160] 


#### Refined cost equations eval_mem_true24_fill_rectangle_bb0_in/5 
* CE 129: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,E,F,B):1
     [C=V_y+V_h,D=V_x+V_w,F=0,E=0] 
* CE 130: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,E,F,B):2
     [C=V_y+V_h,D=V_x+V_w,F=0,E=0] 
* CE 131: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,V_y,E,B):1
     [V_y+V_h=C,D=V_x+V_w,E=0] 
* CE 132: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,V_y,E,B):2
     [V_y+V_h=C,D=V_x+V_w,E=0] 
* CE 133: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,D,E,B):1
     [C=V_x+V_w,E=0,D=0] 
* CE 134: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,D,E,B):2
     [C=V_x+V_w,E=0,D=0] 
* CE 135: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,V_y,D,B):1
     [C=V_x+V_w,D=0] 
* CE 136: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,V_y,D,B):2
     [C=V_x+V_w,D=0] 
* CE 137: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,E,V_x,B):1
     [V_x+V_w=D,C=V_y+V_h,E=0] 
* CE 138: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,E,V_x,B):2
     [V_x+V_w=D,C=V_y+V_h,E=0] 
* CE 139: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,V_y,V_x,B):1
     [V_x+V_w=D,V_y+V_h=C] 
* CE 140: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,D,V_y,V_x,B):2
     [V_x+V_w=D,V_y+V_h=C] 
* CE 141: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,D,V_x,B):1
     [V_x+V_w=C,D=0] 
* CE 142: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,D,V_x,B):2
     [V_x+V_w=C,D=0] 
* CE 143: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,V_y,V_x,B):1
     [V_x+V_w=C] 
* CE 144: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,C,V_y,V_x,B):2
     [V_x+V_w=C] 
* CE 145: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,D,E,B):1
     [C=V_y+V_h,E=0,D=0] 
* CE 146: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,D,E,B):2
     [C=V_y+V_h,E=0,D=0] 
* CE 147: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,V_y,D,B):1
     [V_y+V_h=C,D=0] 
* CE 148: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,V_y,D,B):2
     [V_y+V_h=C,D=0] 
* CE 149: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,C,D,B):1
     [D=0,C=0] 
* CE 150: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,C,D,B):2
     [D=0,C=0] 
* CE 151: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,V_y,C,B):1
     [C=0] 
* CE 152: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,V_y,C,B):2
     [C=0] 
* CE 153: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,D,V_x,B):1
     [C=V_y+V_h,D=0] 
* CE 154: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,D,V_x,B):2
     [C=V_y+V_h,D=0] 
* CE 155: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,V_y,V_x,B):1
     [V_y+V_h=C] 
* CE 156: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(C,V_w,V_y,V_x,B):2
     [V_y+V_h=C] 
* CE 157: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,C,V_x,B):1
     [C=0] 
* CE 158: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,C,V_x,B):2
     [C=0] 
* CE 159: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,V_y,V_x,B):1
     [] 
* CE 160: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_fill_rectangle_bb2_in(V_h,V_w,V_y,V_x,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_bb0_in/5 
* CEs [130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160] --> Loop 71 
* CEs [129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159] --> Loop 72 

#### Loops of eval_mem_true24_fill_rectangle_bb0_in/5 
* Loop 71: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) [] 
* Loop 72: eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 
* [72]
* [71]...


### Merging Chains  eval_mem_true24_fill_rectangle_bb0_in/5 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 


### Specialization of cost equations eval_mem_true24_fill_rectangle_start/6 
* CE 2 is refined into CE [161,162] 


#### Refined cost equations eval_mem_true24_fill_rectangle_start/6 
* CE 161: eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) = 0+ eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B):1
     [] 
* CE 162: eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) = 0+ eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_fill_rectangle_start/6 
* CEs [162] --> Loop 73 
* CEs [161] --> Loop 74 

#### Loops of eval_mem_true24_fill_rectangle_start/6 
* Loop 73: eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) [] 
* Loop 74: eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) [] 

### Ranking functions of CR eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 

#### Partial ranking functions of CR eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 


### Resulting Chains:eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 
* [74]
* [73]...


### Merging Chains  eval_mem_true24_fill_rectangle_start/6 into  External patterns of execution 
* [[74]] --> 1 
* [[73]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [33] 

 * loop 33:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of phase [33]:eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D) -> [eval_mem_true24_fill_rectangle_bb16_in(V__3',V_55',B',C',D')] 
1*it(33)+0
#### Cost of chains of eval_mem_true24_fill_rectangle_bb16_in(V__3,V_55,B,C,D):
* Chain [[33]]...: 1*it(33)+0
  with precondition: [V_55>=0,V__3=V_55+1,B>=4,9>=B] 

* Chain [[33],39]: 1*it(33)+0
  with precondition: [B=4,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [[33],38]: 1*it(33)+0
  with precondition: [B=5,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [[33],37]: 1*it(33)+0
  with precondition: [B=6,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [[33],36]: 1*it(33)+0
  with precondition: [B=7,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [[33],35]: 1*it(33)+0
  with precondition: [B=8,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [[33],34]: 1*it(33)+0
  with precondition: [B=9,D+1=V__3,D=V_55,D+1=C,D>=0] 

* Chain [39]: 0
  with precondition: [B=4,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 

* Chain [38]: 0
  with precondition: [B=5,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 

* Chain [37]: 0
  with precondition: [B=6,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 

* Chain [36]: 0
  with precondition: [B=7,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 

* Chain [35]: 0
  with precondition: [B=8,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 

* Chain [34]: 0
  with precondition: [B=9,V_55+1=V__3,V_55+1=C,V_55=D,V_55>=0] 


#### Cost of loops [41] 

 * loop 41:eval_mem_true24_fill_rectangle_bb10_in(V__3,B) -> [eval_mem_true24_fill_rectangle_bb10_in(V__3',B')] 
1*s(13)+0
#### Cost of phase [41]:eval_mem_true24_fill_rectangle_bb10_in(V__3,B) -> [eval_mem_true24_fill_rectangle_bb10_in(V__3',B')] 
1*s(14)+0
#### Cost of phase [41]:eval_mem_true24_fill_rectangle_bb10_in(V__3,B) -> [eval_mem_true24_fill_rectangle_bb10_in(V__3',B')] 
1*s(14)+0
#### Cost of chains of eval_mem_true24_fill_rectangle_bb10_in(V__3,B):
* Chain [[41],42]: 1*s(14)+0
  with precondition: [B=10,V__3>=1] 

* Chain [[41],40]...: 2*aux(8)+0
  with precondition: [B=10,V__3>=2] 

* Chain [42]: 0
  with precondition: [B=10,0>=V__3] 

* Chain [40]...: 1*aux(8)+0
  with precondition: [B=10,V__3>=1] 


#### Cost of loops [43] 

 * loop 43:eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) -> [eval_mem_true24_fill_rectangle_bb36_in(V_92',V__4',V_139',V_w1_0',B',C',D',E',F')] 
1
#### Cost of phase [43]:eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) -> [eval_mem_true24_fill_rectangle_bb36_in(V_92',V__4',V_139',V_w1_0',B',C',D',E',F')] 
1*it(43)+0
  Such that:it(43) =< V_w1_0/4
it(43) =< V_w1_0/4-V_w1_0'/4

#### Cost of phase [43]:eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F) -> [eval_mem_true24_fill_rectangle_bb36_in(V_92',V__4',V_139',V_w1_0',B',C',D',E',F')] 
1*it(43)+0
  Such that:it(43) =< V_w1_0/4
it(43) =< V_w1_0/4-V_w1_0'/4

#### Cost of chains of eval_mem_true24_fill_rectangle_bb36_in(V_92,V__4,V_139,V_w1_0,B,C,D,E,F):
* Chain [[43],45]: 1*it(43)+0
  Such that:it(43) =< V_w1_0/4-F/4

  with precondition: [B=2,V__4=V_139+1,V_92=C,V__4=D,V__4=E+1,3>=F,V__4>=1,F>=0,V_92>=V_w1_0,V_w1_0>=F+4] 

* Chain [[43],44]: 1*it(43)+0
  Such that:it(43) =< V_w1_0/4-F/4

  with precondition: [B=3,V__4=V_139+1,V_92=C,V__4=D,V__4=E+1,3>=F,V__4>=1,F>=0,V_92>=V_w1_0,V_w1_0>=F+4] 

* Chain [45]: 0
  with precondition: [B=2,V_139+1=V__4,V_92=C,V_139+1=D,V_139=E,V_w1_0=F,3>=V_w1_0,V_139>=0,V_92>=V_w1_0] 

* Chain [44]: 0
  with precondition: [B=3,V_139+1=V__4,V_92=C,V_139+1=D,V_139=E,V_w1_0=F,3>=V_w1_0,V_139>=0,V_92>=V_w1_0] 


#### Cost of loops [47] 

 * loop 47:eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) -> [eval_mem_true24_fill_rectangle_bb31_in(V_92',V__4',B')] 
2
#### Cost of phase [47]:eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) -> [eval_mem_true24_fill_rectangle_bb31_in(V_92',V__4',B')] 
2*it(47)+0
  Such that:it(47) =< V__4
it(47) =< V__4-V__4'

#### Cost of loops [46] 

 * loop 46:eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) -> [eval_mem_true24_fill_rectangle_bb31_in(V_92',V__4',B')] 
2*s(24)+2
  Such that:s(23) =< V_92'/4
s(24) =< s(23)

#### Cost of phase [46]:eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B) -> [eval_mem_true24_fill_rectangle_bb31_in(V_92',V__4',B')] 
2*it(46)+2*s(25)+0
  Such that:aux(10) =< V_92/4
it(46) =< V__4
it(46) =< V__4-V__4'
s(26) =< it(46)*aux(10)
s(25) =< s(26)

#### Cost of chains of eval_mem_true24_fill_rectangle_bb31_in(V_92,V__4,B):
* Chain [[47],48]: 2*it(47)+0
  Such that:it(47) =< V__4

  with precondition: [B=10,3>=V_92,V__4>=1] 

* Chain [[46],48]: 2*it(46)+2*s(25)+0
  Such that:aux(10) =< V_92/4
it(46) =< V__4
s(26) =< it(46)*aux(10)
s(25) =< s(26)

  with precondition: [B=10,V_92>=4,V__4>=1] 

* Chain [48]: 0
  with precondition: [B=10,0>=V__4] 


#### Cost of chains of eval_mem_true24_fill_rectangle_bb30_in(V__27,V_92,B):
* Chain [51]: 1
  with precondition: [0>=V__27] 

* Chain [50]: 2*s(27)+1
  Such that:s(27) =< V__27

  with precondition: [3>=V_92,V__27>=1] 

* Chain [49]: 2*s(29)+2*s(31)+1
  Such that:s(29) =< V__27
s(28) =< V_92/4
s(30) =< s(29)*s(28)
s(31) =< s(30)

  with precondition: [V__27>=1,V_92>=4] 


#### Cost of loops [53] 

 * loop 53:eval_mem_true24_fill_rectangle_bb46_in(V__8,B) -> [eval_mem_true24_fill_rectangle_bb46_in(V__8',B')] 
1
#### Cost of phase [53]:eval_mem_true24_fill_rectangle_bb46_in(V__8,B) -> [eval_mem_true24_fill_rectangle_bb46_in(V__8',B')] 
1*it(53)+0
#### Cost of loops [52] 

 * loop 52:eval_mem_true24_fill_rectangle_bb46_in(V__8,B) -> [eval_mem_true24_fill_rectangle_bb46_in(V__8',B')] 
1
#### Cost of phase [52]:eval_mem_true24_fill_rectangle_bb46_in(V__8,B) -> [eval_mem_true24_fill_rectangle_bb46_in(V__8',B')] 
1*it(52)+0
  Such that:it(52) =< V__8
it(52) =< V__8-V__8'

#### Cost of chains of eval_mem_true24_fill_rectangle_bb46_in(V__8,B):
* Chain [[53]]...: 1*it(53)+0
  with precondition: [0>=V__8,B=10] 

* Chain [[52],54]: 1*it(52)+0
  Such that:it(52) =< V__8

  with precondition: [B=10,V__8>=2] 

* Chain [54]: 0
  with precondition: [V__8=1,B=10] 


#### Cost of loops [56] 

 * loop 56:eval_mem_true24_fill_rectangle_bb48_in(V__7,B) -> [eval_mem_true24_fill_rectangle_bb48_in(V__7',B')] 
1
#### Cost of phase [56]:eval_mem_true24_fill_rectangle_bb48_in(V__7,B) -> [eval_mem_true24_fill_rectangle_bb48_in(V__7',B')] 
1*it(56)+0
#### Cost of loops [55] 

 * loop 55:eval_mem_true24_fill_rectangle_bb48_in(V__7,B) -> [eval_mem_true24_fill_rectangle_bb48_in(V__7',B')] 
1
#### Cost of phase [55]:eval_mem_true24_fill_rectangle_bb48_in(V__7,B) -> [eval_mem_true24_fill_rectangle_bb48_in(V__7',B')] 
1*it(55)+0
  Such that:it(55) =< V__7
it(55) =< V__7-V__7'

#### Cost of chains of eval_mem_true24_fill_rectangle_bb48_in(V__7,B):
* Chain [[56]]...: 1*it(56)+0
  with precondition: [0>=V__7,B=10] 

* Chain [[55],57]: 1*it(55)+0
  Such that:it(55) =< V__7

  with precondition: [B=10,V__7>=2] 

* Chain [57]: 0
  with precondition: [V__7=1,B=10] 


#### Cost of loops [59] 

 * loop 59:eval_mem_true24_fill_rectangle_bb50_in(V__6,B) -> [eval_mem_true24_fill_rectangle_bb50_in(V__6',B')] 
1
#### Cost of phase [59]:eval_mem_true24_fill_rectangle_bb50_in(V__6,B) -> [eval_mem_true24_fill_rectangle_bb50_in(V__6',B')] 
1*it(59)+0
#### Cost of loops [58] 

 * loop 58:eval_mem_true24_fill_rectangle_bb50_in(V__6,B) -> [eval_mem_true24_fill_rectangle_bb50_in(V__6',B')] 
1
#### Cost of phase [58]:eval_mem_true24_fill_rectangle_bb50_in(V__6,B) -> [eval_mem_true24_fill_rectangle_bb50_in(V__6',B')] 
1*it(58)+0
  Such that:it(58) =< V__6
it(58) =< V__6-V__6'

#### Cost of chains of eval_mem_true24_fill_rectangle_bb50_in(V__6,B):
* Chain [[59]]...: 1*it(59)+0
  with precondition: [0>=V__6,B=10] 

* Chain [[58],60]: 1*it(58)+0
  Such that:it(58) =< V__6

  with precondition: [B=10,V__6>=2] 

* Chain [60]: 0
  with precondition: [V__6=1,B=10] 


#### Cost of loops [62] 

 * loop 62:eval_mem_true24_fill_rectangle_bb52_in(V__5,B) -> [eval_mem_true24_fill_rectangle_bb52_in(V__5',B')] 
1
#### Cost of phase [62]:eval_mem_true24_fill_rectangle_bb52_in(V__5,B) -> [eval_mem_true24_fill_rectangle_bb52_in(V__5',B')] 
1*it(62)+0
#### Cost of loops [61] 

 * loop 61:eval_mem_true24_fill_rectangle_bb52_in(V__5,B) -> [eval_mem_true24_fill_rectangle_bb52_in(V__5',B')] 
1
#### Cost of phase [61]:eval_mem_true24_fill_rectangle_bb52_in(V__5,B) -> [eval_mem_true24_fill_rectangle_bb52_in(V__5',B')] 
1*it(61)+0
  Such that:it(61) =< V__5
it(61) =< V__5-V__5'

#### Cost of chains of eval_mem_true24_fill_rectangle_bb52_in(V__5,B):
* Chain [[62]]...: 1*it(62)+0
  with precondition: [0>=V__5,B=10] 

* Chain [[61],63]: 1*it(61)+0
  Such that:it(61) =< V__5

  with precondition: [B=10,V__5>=2] 

* Chain [63]: 0
  with precondition: [V__5=1,B=10] 


#### Cost of chains of eval_mem_true24_fill_rectangle_bb6_in(V__2,V__27,B):
* Chain [66]: 3*s(32)+8*s(33)+1
  Such that:aux(11) =< V__27
s(33) =< aux(11)

  with precondition: [] 

* Chain [65]...: 1*aux(12)+0
  with precondition: [0>=V__27] 

* Chain [64]...: 1*aux(13)+0
  with precondition: [V__27>=1] 


#### Cost of chains of eval_mem_true24_fill_rectangle_bb4_in(V__16,V__12,V__2,B):
* Chain [68]: 8*s(49)+3*s(50)+1
  with precondition: [] 

* Chain [67]...: 1*aux(14)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true24_fill_rectangle_bb2_in(V__16,V__14,V__12,V__1,B):
* Chain [70]: 11*s(53)+1
  with precondition: [] 

* Chain [69]...: 1*s(55)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true24_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B):
* Chain [72]: 1*aux(15)+0
  with precondition: [] 

* Chain [71]...: 1*aux(16)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B):
* Chain [74]: 1*s(88)+0
  with precondition: [] 

* Chain [73]...: 1*s(89)+0
  with precondition: [] 


Closed-form bounds of eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B): 
-------------------------------------
* Chain [74] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [73]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mem_true24_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 100 ms.
* Invariants computed in 89 ms.
   - Backward Invariants 49 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 179 ms.
* Termination proved in 19 ms.
* Upper bounds computed in 133 ms.
   - Equation cost structures 59 ms.
   - Phase cost structures 40 ms.
   - Chain cost structures 46 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 661 ms.

