WARNING: Excluded non-linear constraints:[E=B*D,-B*D+8192>=0,-B*D+8192+1=<B]
WARNING: Excluded non-linear constraints:[E=B*D,-B*D+8192>=0,-B*D+8192+1=< -B]
WARNING: Excluded non-linear constraints:[A-C*E-1>=0,A-C*E-1+1=<C]
WARNING: Excluded non-linear constraints:[A-C*E-1>=0,A-C*E-1+1=< -C]
WARNING: Excluded non-linear constraints:[-A+C*E+1>=0,-A+C*E+1+1=<C]
WARNING: Excluded non-linear constraints:[-A+C*E+1>=0,-A+C*E+1+1=< -C]
Warning: Ignored call to eval_ChopUpSingleUncompressedStrip_stop/1 in equation eval_ChopUpSingleUncompressedStrip_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_ChopUpSingleUncompressedStrip_bb11_in/1]
1. non_recursive  : [eval_ChopUpSingleUncompressedStrip_24/1]
2. non_recursive  : [eval_ChopUpSingleUncompressedStrip_23/1]
3. non_recursive  : [eval_ChopUpSingleUncompressedStrip_bb6_in/1]
4. non_recursive  : [eval_ChopUpSingleUncompressedStrip_22/1]
5. non_recursive  : [eval_ChopUpSingleUncompressedStrip_21/1]
6. recursive  : [eval_ChopUpSingleUncompressedStrip_bb8_in/5]
7. non_recursive  : [eval_ChopUpSingleUncompressedStrip_39/1]
8. non_recursive  : [eval_ChopUpSingleUncompressedStrip_38/1]
9. non_recursive  : [eval_ChopUpSingleUncompressedStrip_37/1]
10. non_recursive  : [eval_ChopUpSingleUncompressedStrip_36/2]
11. non_recursive  : [loop_cont_eval_ChopUpSingleUncompressedStrip_bb8_in/3]
12. non_recursive  : [eval_ChopUpSingleUncompressedStrip_20/3]
13. non_recursive  : [eval_ChopUpSingleUncompressedStrip_19/4]
14. non_recursive  : [eval_ChopUpSingleUncompressedStrip_16/3]
15. non_recursive  : [eval_ChopUpSingleUncompressedStrip_15/4]
16. non_recursive  : [eval_ChopUpSingleUncompressedStrip_bb2_in/4]
17. non_recursive  : [eval_ChopUpSingleUncompressedStrip_3/3]
18. non_recursive  : [eval_ChopUpSingleUncompressedStrip_2/2]
19. non_recursive  : [eval_ChopUpSingleUncompressedStrip_bb0_in/1]
20. non_recursive  : [eval_ChopUpSingleUncompressedStrip_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_bb6_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_bb8_in/5
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_20/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_bb2_in/4
17. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_3/3
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_ChopUpSingleUncompressedStrip_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_bb6_in/1 
* CE 14 is refined into CE [17] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_bb6_in/1 
* CE 17: eval_ChopUpSingleUncompressedStrip_bb6_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_bb6_in/1 
* CEs [17] --> Loop 8 

#### Loops of eval_ChopUpSingleUncompressedStrip_bb6_in/1 
* Loop 8: eval_ChopUpSingleUncompressedStrip_bb6_in(B) [] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb6_in(B) 

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb6_in(B) 


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_bb6_in(B) 
* [8]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_bb6_in/1 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_bb8_in/5 
* CE 16 is refined into CE [18] 
* CE 15 is refined into CE [19] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_bb8_in/5 
* CE 18: eval_ChopUpSingleUncompressedStrip_bb8_in(A,B,C,D,A) = 0
     [C>=B,C>=0,D=2] 
* CE 19: eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) = 1+ eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,D,E,C)
     [V_18>=V_strip_0+1,V_strip_0>=0,V_strip_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_bb8_in/5 
* CEs [19] --> Loop 9 
* CEs [18] --> Loop 10 

#### Loops of eval_ChopUpSingleUncompressedStrip_bb8_in/5 
* Loop 9: eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C)->  eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0',B',C)
                  [V_18>=V_strip_0+1,V_strip_0>=0,V_strip_0+1=V_strip_0',B'=2,B=2] 
* Loop 10: eval_ChopUpSingleUncompressedStrip_bb8_in(A,B,C,D,A) [C>=B,C>=0,D=2] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) 
* RF of phase [9]: [V_18-V_strip_0]

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_18-V_strip_0


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) 
* [[9],10]
* [10]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_bb8_in/5 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_20/3 
* CE 12 is refined into CE [20] 
* CE 13 is refined into CE [21,22] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_20/3 
* CE 20: eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) = 0+ eval_ChopUpSingleUncompressedStrip_bb6_in(B):1
     [] 
* CE 21: eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) = 1+ eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,C,D,V_rowsperstrip_0):1
     [0>=V_18,D=2,C=0] 
* CE 22: eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) = 1+ eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,C,D,V_rowsperstrip_0):2
     [V_18>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_20/3 
* CEs [20,21,22] --> Loop 11 

#### Loops of eval_ChopUpSingleUncompressedStrip_20/3 
* Loop 11: eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) [] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) 

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) 


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B) 
* [11]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_20/3 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_bb2_in/4 
* CE 6 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 10 is refined into CE [27] 
* CE 11 is refined into CE [28] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_bb2_in/4 
* CE 23: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0
     [] 
* CE 24: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0+ eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,C,B):1
     [V_4+V_stripbytes_0=1,C=0] 
* CE 25: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0+ eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,C,B):1
     [V_4+V_stripbytes_0>=2,C>=0,V_stripbytes_0>=1] 
* CE 26: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0+ eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,C,B):1
     [V_4+V_stripbytes_0>=2,0>=C,0>=V_stripbytes_0+1] 
* CE 27: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0+ eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,C,B):1
     [0>=V_4+V_stripbytes_0,V_stripbytes_0>=1,0>=C] 
* CE 28: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) = 0+ eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,C,B):1
     [0>=V_4+V_stripbytes_0,C>=0,0>=V_stripbytes_0+1] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_bb2_in/4 
* CEs [23,24,25,26,27,28] --> Loop 12 

#### Loops of eval_ChopUpSingleUncompressedStrip_bb2_in/4 
* Loop 12: eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) [] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) 

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) 


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B) 
* [12]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_bb2_in/4 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_3/3 
* CE 3 is refined into CE [29] 
* CE 4 is refined into CE [30] 
* CE 5 is refined into CE [31] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_3/3 
* CE 29: eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) = 0+ eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,C,V_9,B):1
     [C=1] 
* CE 30: eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) = 0+ eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,C,D,B):1
     [C>=0,V_9>=1] 
* CE 31: eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) = 0+ eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,C,D,B):1
     [0>=C,0>=V_9+1] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_3/3 
* CEs [29,30,31] --> Loop 13 

#### Loops of eval_ChopUpSingleUncompressedStrip_3/3 
* Loop 13: eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) [] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) 

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) 


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B) 
* [13]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_3/3 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_ChopUpSingleUncompressedStrip_start/1 
* CE 2 is refined into CE [32] 


#### Refined cost equations eval_ChopUpSingleUncompressedStrip_start/1 
* CE 32: eval_ChopUpSingleUncompressedStrip_start(B) = 0+ eval_ChopUpSingleUncompressedStrip_3(C,D,B):1
     [] 

### Cost equations --> "Loop" of eval_ChopUpSingleUncompressedStrip_start/1 
* CEs [32] --> Loop 14 

#### Loops of eval_ChopUpSingleUncompressedStrip_start/1 
* Loop 14: eval_ChopUpSingleUncompressedStrip_start(B) [] 

### Ranking functions of CR eval_ChopUpSingleUncompressedStrip_start(B) 

#### Partial ranking functions of CR eval_ChopUpSingleUncompressedStrip_start(B) 


### Resulting Chains:eval_ChopUpSingleUncompressedStrip_start(B) 
* [14]


### Merging Chains  eval_ChopUpSingleUncompressedStrip_start/1 into  External patterns of execution 
* [[14]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of eval_ChopUpSingleUncompressedStrip_bb6_in(B):
* Chain [8]: 0
  with precondition: [] 


#### Cost of loops [9] 

 * loop 9:eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) -> [eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0',V_18',V_strip_0',B',C')] 
1
#### Cost of phase [9]:eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C) -> [eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0',V_18',V_strip_0',B',C')] 
1*it(9)+0
  Such that:it(9) =< V_18-V_strip_0
it(9) =< V_18-V_strip_0-V_18'+V_strip_0'

#### Cost of chains of eval_ChopUpSingleUncompressedStrip_bb8_in(V_rowsperstrip_0,V_18,V_strip_0,B,C):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_18-V_strip_0

  with precondition: [B=2,V_rowsperstrip_0=C,V_strip_0>=0,V_18>=V_strip_0+1] 

* Chain [10]: 0
  with precondition: [B=2,C=V_rowsperstrip_0,V_strip_0>=0,V_strip_0>=V_18] 


#### Cost of chains of eval_ChopUpSingleUncompressedStrip_20(V_rowsperstrip_0,V_18,B):
* Chain [11]: 1*s(1)+1
  Such that:s(1) =< V_18

  with precondition: [] 


#### Cost of chains of eval_ChopUpSingleUncompressedStrip_bb2_in(V_4,V_rowsperstrip_0,V_stripbytes_0,B):
* Chain [12]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_ChopUpSingleUncompressedStrip_3(V_4,V_9,B):
* Chain [13]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_ChopUpSingleUncompressedStrip_start(B):
* Chain [14]: 1*s(10)+0
  with precondition: [] 


Closed-form bounds of eval_ChopUpSingleUncompressedStrip_start(B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ChopUpSingleUncompressedStrip_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 77 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 72 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 46 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 290 ms.

