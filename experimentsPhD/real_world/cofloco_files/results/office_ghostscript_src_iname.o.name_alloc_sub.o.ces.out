Warning: Ignored call to eval_name_alloc_sub_stop/1 in equation eval_name_alloc_sub_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_name_alloc_sub_bb1_in/4]
1. non_recursive  : [eval_name_alloc_sub_bb10_in/1]
2. recursive  : [eval_name_alloc_sub_bb7_in/4]
3. non_recursive  : [eval_name_alloc_sub_23/1]
4. non_recursive  : [eval_name_alloc_sub_22/2]
5. non_recursive  : [eval_name_alloc_sub_bb9_in/2]
6. non_recursive  : [loop_cont_eval_name_alloc_sub_bb7_in/3]
7. non_recursive  : [eval_name_alloc_sub_16/2]
8. non_recursive  : [eval_name_alloc_sub_15/2]
9. non_recursive  : [eval_name_alloc_sub_14/2]
10. non_recursive  : [eval_name_alloc_sub_13/2]
11. non_recursive  : [eval_name_alloc_sub_bb5_in/2]
12. non_recursive  : [loop_cont_eval_name_alloc_sub_bb1_in/3]
13. non_recursive  : [eval_name_alloc_sub_bb0_in/1]
14. non_recursive  : [eval_name_alloc_sub_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_name_alloc_sub_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_name_alloc_sub_bb7_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_name_alloc_sub_16/2
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_name_alloc_sub_14/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_name_alloc_sub_bb1_in/3
13. SCC is partially evaluated into eval_name_alloc_sub_bb0_in/1
14. SCC is partially evaluated into eval_name_alloc_sub_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_name_alloc_sub_bb1_in/4 
* CE 6 is refined into CE [15] 
* CE 5 is refined into CE [16] 
* CE 4 is refined into CE [17] 


#### Refined cost equations eval_name_alloc_sub_bb1_in/4 
* CE 15: eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) = 1+ eval_name_alloc_sub_bb1_in(V_3,D,B,C)
     [V_3>=V_sub_index_0,V_sub_index_0+1=D] 
* CE 16: eval_name_alloc_sub_bb1_in(A,B,C,B) = 0
     [A>=B,C=4] 
* CE 17: eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) = 0
     [V_sub_index_0>=V_3+1,B=3] 

### Cost equations --> "Loop" of eval_name_alloc_sub_bb1_in/4 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_name_alloc_sub_bb1_in/4 
* Loop 12: eval_name_alloc_sub_bb1_in(A,B,C,B) [A>=B,C=4] 
* Loop 13: eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) [V_sub_index_0>=V_3+1,B=3] 
* Loop 14: eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C)->  eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0',B,C)
                  [V_3>=V_sub_index_0,V_sub_index_0+1=V_sub_index_0'] 

### Ranking functions of CR eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) 
* RF of phase [14]: [V_3-V_sub_index_0+1]

#### Partial ranking functions of CR eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_3-V_sub_index_0+1


### Resulting Chains:eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) 
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  eval_name_alloc_sub_bb1_in/4 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[14]]] --> 2 
* [[12]] --> 3 
* [[12,[14]]] --> 4 


### Specialization of cost equations eval_name_alloc_sub_bb7_in/4 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations eval_name_alloc_sub_bb7_in/4 
* CE 18: eval_name_alloc_sub_bb7_in(A,B,C,A) = 0
     [B>=128,C=2] 
* CE 19: eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) = 1+ eval_name_alloc_sub_bb7_in(V_sub_index_0,D,E,C)
     [V_i_0>=0,127>=V_i_0,V_i_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_name_alloc_sub_bb7_in/4 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of eval_name_alloc_sub_bb7_in/4 
* Loop 15: eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C)->  eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0',B',C)
                  [V_i_0>=0,127>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 16: eval_name_alloc_sub_bb7_in(A,B,C,A) [B>=128,C=2] 

### Ranking functions of CR eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) 
* RF of phase [15]: [-V_i_0+128]

#### Partial ranking functions of CR eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V_i_0+128


### Resulting Chains:eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) 
* [[15],16]


### Merging Chains  eval_name_alloc_sub_bb7_in/4 into  External patterns of execution 
* [[16,[15]]] --> 1 


### Specialization of cost equations eval_name_alloc_sub_16/2 
* CE 11 is refined into CE [20] 
* CE 12 is refined into CE [21] 


#### Refined cost equations eval_name_alloc_sub_16/2 
* CE 20: eval_name_alloc_sub_16(V_sub_index_0,B) = 1+ eval_name_alloc_sub_bb7_in(V_sub_index_0,C,D,V_sub_index_0):1
     [D=2,C=0] 
* CE 21: eval_name_alloc_sub_16(V_sub_index_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_name_alloc_sub_16/2 
* CEs [20,21] --> Loop 17 

#### Loops of eval_name_alloc_sub_16/2 
* Loop 17: eval_name_alloc_sub_16(V_sub_index_0,B) [] 

### Ranking functions of CR eval_name_alloc_sub_16(V_sub_index_0,B) 

#### Partial ranking functions of CR eval_name_alloc_sub_16(V_sub_index_0,B) 


### Resulting Chains:eval_name_alloc_sub_16(V_sub_index_0,B) 
* [17]


### Merging Chains  eval_name_alloc_sub_16/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_name_alloc_sub_14/2 
* CE 9 is refined into CE [22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations eval_name_alloc_sub_14/2 
* CE 22: eval_name_alloc_sub_14(V_sub_index_0,B) = 0
     [] 
* CE 23: eval_name_alloc_sub_14(V_sub_index_0,B) = 0+ eval_name_alloc_sub_16(V_sub_index_0,B):1
     [] 

### Cost equations --> "Loop" of eval_name_alloc_sub_14/2 
* CEs [22,23] --> Loop 18 

#### Loops of eval_name_alloc_sub_14/2 
* Loop 18: eval_name_alloc_sub_14(V_sub_index_0,B) [] 

### Ranking functions of CR eval_name_alloc_sub_14(V_sub_index_0,B) 

#### Partial ranking functions of CR eval_name_alloc_sub_14(V_sub_index_0,B) 


### Resulting Chains:eval_name_alloc_sub_14(V_sub_index_0,B) 
* [18]


### Merging Chains  eval_name_alloc_sub_14/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations loop_cont_eval_name_alloc_sub_bb1_in/3 
* CE 8 is refined into CE [24] 
* CE 7 is refined into CE [25] 


#### Refined cost equations loop_cont_eval_name_alloc_sub_bb1_in/3 
* CE 24: loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) = 0+ eval_name_alloc_sub_14(A,B):1
     [E=4] 
* CE 25: loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) = 0
     [E=3] 

### Cost equations --> "Loop" of loop_cont_eval_name_alloc_sub_bb1_in/3 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of loop_cont_eval_name_alloc_sub_bb1_in/3 
* Loop 19: loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) [E=4] 
* Loop 20: loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) [E=3] 

### Ranking functions of CR loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_name_alloc_sub_bb1_in(E,A,B) 
* [20]
* [19]


### Merging Chains  loop_cont_eval_name_alloc_sub_bb1_in/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_name_alloc_sub_bb0_in/1 
* CE 3 is refined into CE [26,27,28,29] 


#### Refined cost equations eval_name_alloc_sub_bb0_in/1 
* CE 26: eval_name_alloc_sub_bb0_in(B) = 1+ eval_name_alloc_sub_bb1_in(C,D,E,F):1+ loop_cont_eval_name_alloc_sub_bb1_in(G,F,B):1
     [D>=C+1,G=3,E=3] 
* CE 27: eval_name_alloc_sub_bb0_in(B) = 1+ eval_name_alloc_sub_bb1_in(C,D,E,F):2+ loop_cont_eval_name_alloc_sub_bb1_in(G,F,B):1
     [C>=D,G=3,E=3] 
* CE 28: eval_name_alloc_sub_bb0_in(B) = 1+ eval_name_alloc_sub_bb1_in(C,D,E,D):3+ loop_cont_eval_name_alloc_sub_bb1_in(F,D,B):2
     [C>=D,F=4,E=4] 
* CE 29: eval_name_alloc_sub_bb0_in(B) = 1+ eval_name_alloc_sub_bb1_in(C,D,E,F):4+ loop_cont_eval_name_alloc_sub_bb1_in(G,F,B):2
     [C>=F,F>=D+1,G=4,E=4] 

### Cost equations --> "Loop" of eval_name_alloc_sub_bb0_in/1 
* CEs [26,27,28,29] --> Loop 21 

#### Loops of eval_name_alloc_sub_bb0_in/1 
* Loop 21: eval_name_alloc_sub_bb0_in(B) [] 

### Ranking functions of CR eval_name_alloc_sub_bb0_in(B) 

#### Partial ranking functions of CR eval_name_alloc_sub_bb0_in(B) 


### Resulting Chains:eval_name_alloc_sub_bb0_in(B) 
* [21]


### Merging Chains  eval_name_alloc_sub_bb0_in/1 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_name_alloc_sub_start/1 
* CE 2 is refined into CE [30] 


#### Refined cost equations eval_name_alloc_sub_start/1 
* CE 30: eval_name_alloc_sub_start(B) = 0+ eval_name_alloc_sub_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_name_alloc_sub_start/1 
* CEs [30] --> Loop 22 

#### Loops of eval_name_alloc_sub_start/1 
* Loop 22: eval_name_alloc_sub_start(B) [] 

### Ranking functions of CR eval_name_alloc_sub_start(B) 

#### Partial ranking functions of CR eval_name_alloc_sub_start(B) 


### Resulting Chains:eval_name_alloc_sub_start(B) 
* [22]


### Merging Chains  eval_name_alloc_sub_start/1 into  External patterns of execution 
* [[22]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) -> [eval_name_alloc_sub_bb1_in(V_3',V_sub_index_0',B',C')] 
1
#### Cost of phase [14]:eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) -> [eval_name_alloc_sub_bb1_in(V_3',V_sub_index_0',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_3-V_sub_index_0+1
it(14) =< V_3-V_sub_index_0-V_3'+V_sub_index_0'

#### Cost of phase [14]:eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C) -> [eval_name_alloc_sub_bb1_in(V_3',V_sub_index_0',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_3-V_sub_index_0+1
it(14) =< V_3-V_sub_index_0-V_3'+V_sub_index_0'

#### Cost of chains of eval_name_alloc_sub_bb1_in(V_3,V_sub_index_0,B,C):
* Chain [[14],13]: 1*it(14)+0
  Such that:it(14) =< V_3-V_sub_index_0+1

  with precondition: [B=3,V_3>=V_sub_index_0] 

* Chain [[14],12]: 1*it(14)+0
  Such that:it(14) =< -V_sub_index_0+C

  with precondition: [B=4,C>=V_sub_index_0+1,V_3>=C] 

* Chain [13]: 0
  with precondition: [B=3,V_sub_index_0>=V_3+1] 

* Chain [12]: 0
  with precondition: [B=4,V_sub_index_0=C,V_3>=V_sub_index_0] 


#### Cost of loops [15] 

 * loop 15:eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) -> [eval_name_alloc_sub_bb7_in(V_sub_index_0',V_i_0',B',C')] 
1
#### Cost of phase [15]:eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C) -> [eval_name_alloc_sub_bb7_in(V_sub_index_0',V_i_0',B',C')] 
1*it(15)+0
  Such that:it(15) =< -V_i_0+128
it(15) =< -V_i_0+V_i_0'

#### Cost of chains of eval_name_alloc_sub_bb7_in(V_sub_index_0,V_i_0,B,C):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_i_0+128

  with precondition: [B=2,V_sub_index_0=C,127>=V_i_0,V_i_0>=0] 


#### Cost of chains of eval_name_alloc_sub_16(V_sub_index_0,B):
* Chain [17]: 129
  with precondition: [] 


#### Cost of chains of eval_name_alloc_sub_14(V_sub_index_0,B):
* Chain [18]: 129
  with precondition: [] 


#### Cost of chains of loop_cont_eval_name_alloc_sub_bb1_in(E,A,B):
* Chain [20]: 0
  with precondition: [E=3] 

* Chain [19]: 129
  with precondition: [E=4] 


#### Cost of chains of eval_name_alloc_sub_bb0_in(B):
* Chain [21]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_name_alloc_sub_start(B):
* Chain [22]: 1*s(4)+0
  with precondition: [] 


Closed-form bounds of eval_name_alloc_sub_start(B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_name_alloc_sub_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 76 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 60 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 277 ms.

