Warning: Ignored call to eval_jpeg_huff_decode_stop/1 in equation eval_jpeg_huff_decode_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_jpeg_huff_decode_bb12_in/1]
1. recursive  : [eval_jpeg_huff_decode_19/4,eval_jpeg_huff_decode_20/4,eval_jpeg_huff_decode_bb4_in/4,eval_jpeg_huff_decode_bb8_in/6]
2. non_recursive  : [eval_jpeg_huff_decode_38/1]
3. non_recursive  : [eval_jpeg_huff_decode_37/1]
4. non_recursive  : [loop_cont_eval_jpeg_huff_decode_bb4_in/2]
5. non_recursive  : [eval_jpeg_huff_decode_bb3_in/4]
6. non_recursive  : [eval_jpeg_huff_decode_1/2]
7. non_recursive  : [eval_jpeg_huff_decode_0/4]
8. non_recursive  : [eval_jpeg_huff_decode_bb0_in/4]
9. non_recursive  : [eval_jpeg_huff_decode_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_jpeg_huff_decode_bb4_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_jpeg_huff_decode_bb4_in/2
5. SCC is partially evaluated into eval_jpeg_huff_decode_bb3_in/4
6. SCC is partially evaluated into eval_jpeg_huff_decode_1/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_jpeg_huff_decode_bb0_in/4
9. SCC is partially evaluated into eval_jpeg_huff_decode_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_jpeg_huff_decode_bb4_in/4 
* CE 10 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_jpeg_huff_decode_bb4_in/4 
* CE 13: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) = 0
     [B=3] 
* CE 14: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) = 0
     [B=2] 
* CE 15: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) = 1+ eval_jpeg_huff_decode_bb4_in(C,D,E,B)
     [] 

### Cost equations --> "Loop" of eval_jpeg_huff_decode_bb4_in/4 
* CEs [15] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_jpeg_huff_decode_bb4_in/4 
* Loop 10: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B)->  eval_jpeg_huff_decode_bb4_in(V_code_0',V__13',V__1',B)
                  [] 
* Loop 11: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) [B=3] 
* Loop 12: eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) [B=2] 

### Ranking functions of CR eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) 

#### Partial ranking functions of CR eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) 


### Resulting Chains:eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) 
* [[10]]...
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_jpeg_huff_decode_bb4_in/4 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations loop_cont_eval_jpeg_huff_decode_bb4_in/2 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations loop_cont_eval_jpeg_huff_decode_bb4_in/2 
* CE 16: loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) = 0
     [B=3] 
* CE 17: loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_jpeg_huff_decode_bb4_in/2 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of loop_cont_eval_jpeg_huff_decode_bb4_in/2 
* Loop 13: loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) [B=3] 
* Loop 14: loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_jpeg_huff_decode_bb4_in(B,A) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_jpeg_huff_decode_bb4_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_jpeg_huff_decode_bb3_in/4 
* CE 7 is refined into CE [18,19,20] 


#### Refined cost equations eval_jpeg_huff_decode_bb3_in/4 
* CE 18: eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) = 1+ eval_jpeg_huff_decode_bb4_in(C,D,V__01,E):1+ loop_cont_eval_jpeg_huff_decode_bb4_in(F,B):1
     [V__02=V_min_bits+D,F=2,E=2] 
* CE 19: eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) = 1+ eval_jpeg_huff_decode_bb4_in(C,D,V__01,E):2+ loop_cont_eval_jpeg_huff_decode_bb4_in(F,B):2
     [V__02=V_min_bits+D,F=3,E=3] 
* CE 20: eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) = 1+ eval_jpeg_huff_decode_bb4_in(C,D,V__01,E):3
     [V__02=V_min_bits+D] 

### Cost equations --> "Loop" of eval_jpeg_huff_decode_bb3_in/4 
* CEs [20] --> Loop 15 
* CEs [18,19] --> Loop 16 

#### Loops of eval_jpeg_huff_decode_bb3_in/4 
* Loop 15: eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) [] 
* Loop 16: eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) [] 

### Ranking functions of CR eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) 

#### Partial ranking functions of CR eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) 


### Resulting Chains:eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B) 
* [16]
* [15]...


### Merging Chains  eval_jpeg_huff_decode_bb3_in/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_jpeg_huff_decode_1/2 
* CE 5 is refined into CE [21,22] 
* CE 6 is refined into CE [23] 


#### Refined cost equations eval_jpeg_huff_decode_1/2 
* CE 21: eval_jpeg_huff_decode_1(V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb3_in(V_min_bits,C,D,B):1
     [] 
* CE 22: eval_jpeg_huff_decode_1(V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb3_in(V_min_bits,C,D,B):2
     [] 
* CE 23: eval_jpeg_huff_decode_1(V_min_bits,B) = 0
     [] 

### Cost equations --> "Loop" of eval_jpeg_huff_decode_1/2 
* CEs [21,23] --> Loop 17 
* CEs [22] --> Loop 18 

#### Loops of eval_jpeg_huff_decode_1/2 
* Loop 17: eval_jpeg_huff_decode_1(V_min_bits,B) [] 
* Loop 18: eval_jpeg_huff_decode_1(V_min_bits,B) [] 

### Ranking functions of CR eval_jpeg_huff_decode_1(V_min_bits,B) 

#### Partial ranking functions of CR eval_jpeg_huff_decode_1(V_min_bits,B) 


### Resulting Chains:eval_jpeg_huff_decode_1(V_min_bits,B) 
* [18]...
* [17]


### Merging Chains  eval_jpeg_huff_decode_1/2 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_jpeg_huff_decode_bb0_in/4 
* CE 3 is refined into CE [24,25] 
* CE 4 is refined into CE [26,27] 


#### Refined cost equations eval_jpeg_huff_decode_bb0_in/4 
* CE 24: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_1(V_min_bits,B):1
     [] 
* CE 25: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_1(V_min_bits,B):2
     [] 
* CE 26: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb3_in(V_min_bits,V_bits_left,V_get_buffer,B):1
     [] 
* CE 27: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb3_in(V_min_bits,V_bits_left,V_get_buffer,B):2
     [] 

### Cost equations --> "Loop" of eval_jpeg_huff_decode_bb0_in/4 
* CEs [25,27] --> Loop 19 
* CEs [24,26] --> Loop 20 

#### Loops of eval_jpeg_huff_decode_bb0_in/4 
* Loop 19: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) [] 
* Loop 20: eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) [] 

### Ranking functions of CR eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) 

#### Partial ranking functions of CR eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) 


### Resulting Chains:eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B) 
* [20]
* [19]...


### Merging Chains  eval_jpeg_huff_decode_bb0_in/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_jpeg_huff_decode_start/4 
* CE 2 is refined into CE [28,29] 


#### Refined cost equations eval_jpeg_huff_decode_start/4 
* CE 28: eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B):1
     [] 
* CE 29: eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) = 0+ eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B):2
     [] 

### Cost equations --> "Loop" of eval_jpeg_huff_decode_start/4 
* CEs [29] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of eval_jpeg_huff_decode_start/4 
* Loop 21: eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) [] 
* Loop 22: eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) [] 

### Ranking functions of CR eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) 

#### Partial ranking functions of CR eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) 


### Resulting Chains:eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B) 
* [22]
* [21]...


### Merging Chains  eval_jpeg_huff_decode_start/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) -> [eval_jpeg_huff_decode_bb4_in(V_code_0',V__13',V__1',B')] 
1
#### Cost of phase [10]:eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) -> [eval_jpeg_huff_decode_bb4_in(V_code_0',V__13',V__1',B')] 
1*it(10)+0
#### Cost of phase [10]:eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) -> [eval_jpeg_huff_decode_bb4_in(V_code_0',V__13',V__1',B')] 
1*it(10)+0
#### Cost of phase [10]:eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B) -> [eval_jpeg_huff_decode_bb4_in(V_code_0',V__13',V__1',B')] 
1*it(10)+0
#### Cost of chains of eval_jpeg_huff_decode_bb4_in(V_code_0,V__13,V__1,B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [] 

* Chain [[10],12]: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3] 

* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_jpeg_huff_decode_bb4_in(B,A):
* Chain [14]: 0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_jpeg_huff_decode_bb3_in(V_min_bits,V__02,V__01,B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_jpeg_huff_decode_1(V_min_bits,B):
* Chain [18]...: 1*s(6)+1
  with precondition: [] 

* Chain [17]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_jpeg_huff_decode_bb0_in(V_get_buffer,V_bits_left,V_min_bits,B):
* Chain [20]: 1*aux(5)+0
  with precondition: [] 

* Chain [19]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B):
* Chain [22]: 1*s(12)+0
  with precondition: [] 

* Chain [21]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_jpeg_huff_decode_start(V_get_buffer,V_bits_left,V_min_bits,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 11 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 0 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 50 ms.

