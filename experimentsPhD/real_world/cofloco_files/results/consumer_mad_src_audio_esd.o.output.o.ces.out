Warning: Ignored call to eval_output_stop/1 in equation eval_output_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_output_4/5,eval_output_5/6,eval_output_bb1_in/3]
1. non_recursive  : [eval_output_bb6_in/1]
2. non_recursive  : [loop_cont_eval_output_bb1_in/2]
3. non_recursive  : [eval_output_1/3]
4. non_recursive  : [eval_output_0/3]
5. non_recursive  : [eval_output_bb0_in/3]
6. non_recursive  : [eval_output_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_output_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_output_1/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_output_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_output_bb1_in/3 
* CE 6 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 4 is refined into CE [12] 
* CE 5 is refined into CE [13] 


#### Refined cost equations eval_output_bb1_in/3 
* CE 9: eval_output_bb1_in(V__esd,V__02,B) = 0
     [V__02>=1,B=2] 
* CE 10: eval_output_bb1_in(V__esd,V__02,B) = 0
     [0>=V__02+1,B=2] 
* CE 11: eval_output_bb1_in(V__esd,V__02,B) = 0
     [B=2,V__02=0] 
* CE 12: eval_output_bb1_in(V__esd,V__02,B) = 1+ eval_output_bb1_in(V__esd,C,D)
     [V__02>=1,D=2,B=2] 
* CE 13: eval_output_bb1_in(V__esd,V__02,B) = 1+ eval_output_bb1_in(V__esd,C,D)
     [0>=V__02+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_output_bb1_in/3 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_output_bb1_in/3 
* Loop 8: eval_output_bb1_in(V__esd,V__02,B)->  eval_output_bb1_in(V__esd,V__02',B')
                  [V__02>=1,B'=2,B=2] 
* Loop 9: eval_output_bb1_in(V__esd,V__02,B)->  eval_output_bb1_in(V__esd,V__02',B')
                  [0>=V__02+1,B'=2,B=2] 
* Loop 10: eval_output_bb1_in(V__esd,V__02,B) [V__02>=1,B=2] 
* Loop 11: eval_output_bb1_in(V__esd,V__02,B) [0>=V__02+1,B=2] 
* Loop 12: eval_output_bb1_in(V__esd,V__02,B) [B=2,V__02=0] 

### Ranking functions of CR eval_output_bb1_in(V__esd,V__02,B) 

#### Partial ranking functions of CR eval_output_bb1_in(V__esd,V__02,B) 


### Resulting Chains:eval_output_bb1_in(V__esd,V__02,B) 
* [[8,9]]...
* [[8,9],12]
* [[8,9],11]
* [[8,9],10]
* [12]
* [11]
* [10]


### Merging Chains  eval_output_bb1_in/3 into  External patterns of execution 
* [[10],[11],[12],[10,[8,9]],[11,[8,9]],[12,[8,9]]] --> 1 
* [[[8,9]]] --> 2 


### Specialization of cost equations eval_output_1/3 
* CE 3 is refined into CE [14,15] 


#### Refined cost equations eval_output_1/3 
* CE 14: eval_output_1(V_len,V__esd,B) = 1+ eval_output_bb1_in(V__esd,V_len,C):1
     [C=2] 
* CE 15: eval_output_1(V_len,V__esd,B) = 1+ eval_output_bb1_in(V__esd,V_len,C):2
     [C=2] 

### Cost equations --> "Loop" of eval_output_1/3 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_output_1/3 
* Loop 13: eval_output_1(V_len,V__esd,B) [] 
* Loop 14: eval_output_1(V_len,V__esd,B) [] 

### Ranking functions of CR eval_output_1(V_len,V__esd,B) 

#### Partial ranking functions of CR eval_output_1(V_len,V__esd,B) 


### Resulting Chains:eval_output_1(V_len,V__esd,B) 
* [14]
* [13]...


### Merging Chains  eval_output_1/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_output_start/3 
* CE 2 is refined into CE [16,17] 


#### Refined cost equations eval_output_start/3 
* CE 16: eval_output_start(V_len,V__esd,B) = 0+ eval_output_1(V_len,V__esd,B):1
     [] 
* CE 17: eval_output_start(V_len,V__esd,B) = 0+ eval_output_1(V_len,V__esd,B):2
     [] 

### Cost equations --> "Loop" of eval_output_start/3 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_output_start/3 
* Loop 15: eval_output_start(V_len,V__esd,B) [] 
* Loop 16: eval_output_start(V_len,V__esd,B) [] 

### Ranking functions of CR eval_output_start(V_len,V__esd,B) 

#### Partial ranking functions of CR eval_output_start(V_len,V__esd,B) 


### Resulting Chains:eval_output_start(V_len,V__esd,B) 
* [16]
* [15]...


### Merging Chains  eval_output_start/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8,9] 

 * loop 8:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
1
 * loop 9:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
1
#### Cost of phase [8,9]:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
2*it(8)+0
#### Cost of phase [8,9]:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
2*it(8)+0
#### Cost of phase [8,9]:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
2*it(8)+0
#### Cost of phase [8,9]:eval_output_bb1_in(V__esd,V__02,B) -> [eval_output_bb1_in(V__esd',V__02',B')] 
2*it(8)+0
#### Cost of chains of eval_output_bb1_in(V__esd,V__02,B):
* Chain [[8,9]]...: 2*it(8)+0
  with precondition: [B=2] 

* Chain [[8,9],12]: 2*it(8)+0
  with precondition: [B=2] 

* Chain [[8,9],11]: 2*it(8)+0
  with precondition: [B=2] 

* Chain [[8,9],10]: 2*it(8)+0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [V__02=0,B=2] 

* Chain [11]: 0
  with precondition: [B=2,0>=V__02+1] 

* Chain [10]: 0
  with precondition: [B=2,V__02>=1] 


#### Cost of chains of eval_output_1(V_len,V__esd,B):
* Chain [14]: 1*s(4)+1
  with precondition: [] 

* Chain [13]...: 2*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_output_start(V_len,V__esd,B):
* Chain [16]: 1*s(6)+1
  with precondition: [] 

* Chain [15]...: 2*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_output_start(V_len,V__esd,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_output_start(V_len,V__esd,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 35 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 39 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 174 ms.

