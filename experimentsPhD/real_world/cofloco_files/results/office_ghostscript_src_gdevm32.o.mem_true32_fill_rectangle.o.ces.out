Warning: Ignored call to eval_mem_true32_fill_rectangle_stop/1 in equation eval_mem_true32_fill_rectangle_bb24_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mem_true32_fill_rectangle_bb24_in/1]
1. non_recursive  : [eval_mem_true32_fill_rectangle_NewDefault_in/1]
2. recursive  : [eval_mem_true32_fill_rectangle_bb10_in/2]
3. recursive  : [eval_mem_true32_fill_rectangle_bb12_in/2]
4. recursive  : [eval_mem_true32_fill_rectangle_bb14_in/2]
5. recursive  : [eval_mem_true32_fill_rectangle_bb16_in/2]
6. recursive  : [eval_mem_true32_fill_rectangle_66/3,eval_mem_true32_fill_rectangle_67/3,eval_mem_true32_fill_rectangle_bb19_in/3]
7. recursive  : [eval_mem_true32_fill_rectangle_bb21_in/8]
8. recursive  : [eval_mem_true32_fill_rectangle_bb22_in/7]
9. recursive  : [eval_mem_true32_fill_rectangle_bb20_in/3,loop_cont_eval_mem_true32_fill_rectangle_bb21_in/6,loop_cont_eval_mem_true32_fill_rectangle_bb22_in/4]
10. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb10_in/2]
11. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb12_in/2]
12. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb14_in/2]
13. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb16_in/2]
14. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb19_in/2]
15. non_recursive  : [loop_cont_eval_mem_true32_fill_rectangle_bb20_in/2]
16. non_recursive  : [eval_mem_true32_fill_rectangle_bb6_in/3]
17. non_recursive  : [eval_mem_true32_fill_rectangle_bb4_in/4]
18. non_recursive  : [eval_mem_true32_fill_rectangle_bb2_in/5]
19. non_recursive  : [eval_mem_true32_fill_rectangle_bb0_in/5]
20. non_recursive  : [eval_mem_true32_fill_rectangle_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb10_in/2
3. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb12_in/2
4. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb14_in/2
5. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb16_in/2
6. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb19_in/3
7. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb21_in/8
8. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb22_in/7
9. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb20_in/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb6_in/3
17. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb4_in/4
18. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb2_in/5
19. SCC is partially evaluated into eval_mem_true32_fill_rectangle_bb0_in/5
20. SCC is partially evaluated into eval_mem_true32_fill_rectangle_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mem_true32_fill_rectangle_bb10_in/2 
* CE 29 is refined into CE [45] 
* CE 28 is refined into CE [46] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb10_in/2 
* CE 45: eval_mem_true32_fill_rectangle_bb10_in(V__3,B) = 0
     [1>=V__3,B=4] 
* CE 46: eval_mem_true32_fill_rectangle_bb10_in(V__3,B) = 1+ eval_mem_true32_fill_rectangle_bb10_in(C,D)
     [V__3>=2,V__3=C+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb10_in/2 
* CEs [46] --> Loop 23 
* CEs [45] --> Loop 24 

#### Loops of eval_mem_true32_fill_rectangle_bb10_in/2 
* Loop 23: eval_mem_true32_fill_rectangle_bb10_in(V__3,B)->  eval_mem_true32_fill_rectangle_bb10_in(V__3',B')
                  [V__3>=2,V__3=V__3'+1,B'=4,B=4] 
* Loop 24: eval_mem_true32_fill_rectangle_bb10_in(V__3,B) [1>=V__3,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb10_in(V__3,B) 
* RF of phase [23]: [V__3-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb10_in(V__3,B) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V__3-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb10_in(V__3,B) 
* [[23],24]
* [24]


### Merging Chains  eval_mem_true32_fill_rectangle_bb10_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb12_in/2 
* CE 31 is refined into CE [47] 
* CE 30 is refined into CE [48] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb12_in/2 
* CE 47: eval_mem_true32_fill_rectangle_bb12_in(V__4,B) = 0
     [1>=V__4,B=4] 
* CE 48: eval_mem_true32_fill_rectangle_bb12_in(V__4,B) = 1+ eval_mem_true32_fill_rectangle_bb12_in(C,D)
     [V__4>=2,V__4=C+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb12_in/2 
* CEs [48] --> Loop 25 
* CEs [47] --> Loop 26 

#### Loops of eval_mem_true32_fill_rectangle_bb12_in/2 
* Loop 25: eval_mem_true32_fill_rectangle_bb12_in(V__4,B)->  eval_mem_true32_fill_rectangle_bb12_in(V__4',B')
                  [V__4>=2,V__4=V__4'+1,B'=4,B=4] 
* Loop 26: eval_mem_true32_fill_rectangle_bb12_in(V__4,B) [1>=V__4,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb12_in(V__4,B) 
* RF of phase [25]: [V__4-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb12_in(V__4,B) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V__4-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb12_in(V__4,B) 
* [[25],26]
* [26]


### Merging Chains  eval_mem_true32_fill_rectangle_bb12_in/2 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb14_in/2 
* CE 33 is refined into CE [49] 
* CE 32 is refined into CE [50] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb14_in/2 
* CE 49: eval_mem_true32_fill_rectangle_bb14_in(V__5,B) = 0
     [1>=V__5,B=4] 
* CE 50: eval_mem_true32_fill_rectangle_bb14_in(V__5,B) = 1+ eval_mem_true32_fill_rectangle_bb14_in(C,D)
     [V__5>=2,V__5=C+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb14_in/2 
* CEs [50] --> Loop 27 
* CEs [49] --> Loop 28 

#### Loops of eval_mem_true32_fill_rectangle_bb14_in/2 
* Loop 27: eval_mem_true32_fill_rectangle_bb14_in(V__5,B)->  eval_mem_true32_fill_rectangle_bb14_in(V__5',B')
                  [V__5>=2,V__5=V__5'+1,B'=4,B=4] 
* Loop 28: eval_mem_true32_fill_rectangle_bb14_in(V__5,B) [1>=V__5,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb14_in(V__5,B) 
* RF of phase [27]: [V__5-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb14_in(V__5,B) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V__5-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb14_in(V__5,B) 
* [[27],28]
* [28]


### Merging Chains  eval_mem_true32_fill_rectangle_bb14_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[27]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb16_in/2 
* CE 35 is refined into CE [51] 
* CE 34 is refined into CE [52] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb16_in/2 
* CE 51: eval_mem_true32_fill_rectangle_bb16_in(V__6,B) = 0
     [1>=V__6,B=4] 
* CE 52: eval_mem_true32_fill_rectangle_bb16_in(V__6,B) = 1+ eval_mem_true32_fill_rectangle_bb16_in(C,D)
     [V__6>=2,V__6=C+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb16_in/2 
* CEs [52] --> Loop 29 
* CEs [51] --> Loop 30 

#### Loops of eval_mem_true32_fill_rectangle_bb16_in/2 
* Loop 29: eval_mem_true32_fill_rectangle_bb16_in(V__6,B)->  eval_mem_true32_fill_rectangle_bb16_in(V__6',B')
                  [V__6>=2,V__6=V__6'+1,B'=4,B=4] 
* Loop 30: eval_mem_true32_fill_rectangle_bb16_in(V__6,B) [1>=V__6,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb16_in(V__6,B) 
* RF of phase [29]: [V__6-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb16_in(V__6,B) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V__6-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb16_in(V__6,B) 
* [[29],30]
* [30]


### Merging Chains  eval_mem_true32_fill_rectangle_bb16_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb19_in/3 
* CE 37 is refined into CE [53] 
* CE 36 is refined into CE [54] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb19_in/3 
* CE 53: eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) = 1+ eval_mem_true32_fill_rectangle_bb19_in(V_83,C,D)
     [V__7>=2,V__7=C+1,D=4,B=4] 
* CE 54: eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) = 0
     [1>=V__7,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb19_in/3 
* CEs [54] --> Loop 31 
* CEs [53] --> Loop 32 

#### Loops of eval_mem_true32_fill_rectangle_bb19_in/3 
* Loop 31: eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) [1>=V__7,B=4] 
* Loop 32: eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B)->  eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7',B')
                  [V__7>=2,V__7=V__7'+1,B'=4,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) 
* RF of phase [32]: [V__7-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V__7-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) 
* [[32],31]
* [31]


### Merging Chains  eval_mem_true32_fill_rectangle_bb19_in/3 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[32]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb21_in/8 
* CE 41 is refined into CE [55] 
* CE 40 is refined into CE [56] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb21_in/8 
* CE 55: eval_mem_true32_fill_rectangle_bb21_in(A,B,C,D,A,B,C,E) = 0
     [A>=C,8>=C,C=E+4,D=2] 
* CE 56: eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) = 1+ eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,G,H,C,D,E,F)
     [V__2>=V_cnt_0,V_cnt_0>=9,V_cnt_0=G+4,H=2,B=2] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb21_in/8 
* CEs [56] --> Loop 33 
* CEs [55] --> Loop 34 

#### Loops of eval_mem_true32_fill_rectangle_bb21_in/8 
* Loop 33: eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F)->  eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0',B',C,D,E,F)
                  [V__2>=V_cnt_0,V_cnt_0>=9,V_cnt_0=V_cnt_0'+4,B'=2,B=2] 
* Loop 34: eval_mem_true32_fill_rectangle_bb21_in(A,B,C,D,A,B,C,E) [A>=C,8>=C,C=E+4,D=2] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) 
* RF of phase [33]: [V_cnt_0/4-2]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_cnt_0/4-2


### Resulting Chains:eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) 
* [[33],34]
* [34]


### Merging Chains  eval_mem_true32_fill_rectangle_bb21_in/8 into  External patterns of execution 
* [[34]] --> 1 
* [[34,[33]]] --> 2 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb22_in/7 
* CE 44 is refined into CE [57] 
* CE 43 is refined into CE [58] 
* CE 42 is refined into CE [59] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb22_in/7 
* CE 57: eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) = 0
     [1>=V_cnt_1,1>=V__8,B=4] 
* CE 58: eval_mem_true32_fill_rectangle_bb22_in(A,B,C,D,E,A,F) = 0
     [B>=2,1>=D,B=F+1,E=3] 
* CE 59: eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) = 1+ eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,E,B,C,D)
     [B>=3,V_cnt_1>=2,4>=B,V_cnt_1=E+1] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb22_in/7 
* CEs [59] --> Loop 35 
* CEs [57] --> Loop 36 
* CEs [58] --> Loop 37 

#### Loops of eval_mem_true32_fill_rectangle_bb22_in/7 
* Loop 35: eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D)->  eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1',B,C,D)
                  [B>=3,V_cnt_1>=2,4>=B,V_cnt_1=V_cnt_1'+1] 
* Loop 36: eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) [1>=V_cnt_1,1>=V__8,B=4] 
* Loop 37: eval_mem_true32_fill_rectangle_bb22_in(A,B,C,D,E,A,F) [B>=2,1>=D,B=F+1,E=3] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) 
* RF of phase [35]: [V_cnt_1-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_cnt_1-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) 
* [[35],37]
* [[35],36]
* [37]
* [36]


### Merging Chains  eval_mem_true32_fill_rectangle_bb22_in/7 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[35]]] --> 2 
* [[36]] --> 3 
* [[36,[35]]] --> 4 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb20_in/3 
* CE 39 is refined into CE [60,61,62,63] 
* CE 38 is refined into CE [64,65,66,67] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb20_in/3 
* CE 60: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 3+ eval_mem_true32_fill_rectangle_bb21_in(V__2,C,V__2,D,V__2,E,V__2,F):1+ eval_mem_true32_fill_rectangle_bb22_in(V__2,G,V__2,H,I,V__2,J):1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,J,K)
     [J>=1,5>=V__2,V__2=H+4,J+1=G,V__2=F+4,J+1=E,J+1=C,J+1=V__8,K=4,I=3,D=2,B=4] 
* CE 61: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 3+ eval_mem_true32_fill_rectangle_bb21_in(V__2,C,V__2,D,V__2,E,V__2,F):1+ eval_mem_true32_fill_rectangle_bb22_in(V__2,G,V__2,H,I,V__2,J):2+ eval_mem_true32_fill_rectangle_bb20_in(V__2,J,K)
     [J>=1,V__2>=6,8>=V__2,V__2=H+4,J+1=G,V__2=F+4,J+1=E,J+1=C,J+1=V__8,K=4,I=3,D=2,B=4] 
* CE 62: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 3+ eval_mem_true32_fill_rectangle_bb21_in(V__2,C,V__2,D,V__2,E,F,G):2+ eval_mem_true32_fill_rectangle_bb22_in(V__2,H,I,J,K,V__2,L):1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,L,M)
     [L>=1,V__2>=9,L+1=H,L+1=E,L+1=C,L+1=V__8,M=4,K=3,J=1,I=5,G=1,F=5,D=2,B=4] 
* CE 63: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 3+ eval_mem_true32_fill_rectangle_bb21_in(V__2,C,V__2,D,V__2,E,F,G):2+ eval_mem_true32_fill_rectangle_bb22_in(V__2,H,I,G,J,V__2,K):2+ eval_mem_true32_fill_rectangle_bb20_in(V__2,K,L)
     [V__2>=G+8,K>=1,G>=2,4>=G,G+4=I,K+1=H,G+4=F,K+1=E,K+1=C,K+1=V__8,L=4,J=3,D=2,B=4] 
* CE 64: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 2+ eval_mem_true32_fill_rectangle_bb21_in(C,V__8,D,E,F,V__8,G,H):1+ eval_mem_true32_fill_rectangle_bb22_in(I,V__8,J,H,K,L,M):3
     [1>=H,1>=V__8,H+4=J,H+4=I,H+4=G,H+4=F,H+4=D,H+4=C,H+4=V__2,K=4,E=2,B=4] 
* CE 65: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 2+ eval_mem_true32_fill_rectangle_bb21_in(C,V__8,D,E,F,V__8,G,H):1+ eval_mem_true32_fill_rectangle_bb22_in(I,V__8,J,H,K,L,M):4
     [H>=2,4>=H,1>=V__8,H+4=J,H+4=I,H+4=G,H+4=F,H+4=D,H+4=C,H+4=V__2,K=4,E=2,B=4] 
* CE 66: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 2+ eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V__2,C,V__2,V__8,D,E):2+ eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,F,G,H,I,J):3
     [V__2>=9,1>=V__8,H=4,G=1,F=5,E=1,D=5,C=2,B=4] 
* CE 67: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) = 2+ eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V__2,C,V__2,V__8,D,E):2+ eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,F,E,G,H,I):4
     [V__2>=E+8,E>=2,4>=E,1>=V__8,E+4=F,E+4=D,G=4,C=2,B=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb20_in/3 
* CEs [66,67] --> Loop 38 
* CEs [64] --> Loop 39 
* CEs [65] --> Loop 40 
* CEs [62,63] --> Loop 41 
* CEs [60] --> Loop 42 
* CEs [61] --> Loop 43 

#### Loops of eval_mem_true32_fill_rectangle_bb20_in/3 
* Loop 38: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) [V__2>=9,1>=V__8,B=4] 
* Loop 39: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) [1>=V__8,5>=V__2,B=4] 
* Loop 40: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) [V__2>=6,1>=V__8,8>=V__2,B=4] 
* Loop 41: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B)->  eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8',B')
                  [V__8>=2,V__2>=9,V__8=V__8'+1,B'=4,B=4] 
* Loop 42: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B)->  eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8',B')
                  [V__8>=2,5>=V__2,V__8=V__8'+1,B'=4,B=4] 
* Loop 43: eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B)->  eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8',B')
                  [V__8>=2,V__2>=6,8>=V__2,V__8=V__8'+1,B'=4,B=4] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) 
* RF of phase [41]: [V__8-1]
* RF of phase [42]: [V__8-1]
* RF of phase [43]: [V__8-1]

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) 
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    V__8-1
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V__8-1
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    V__8-1


### Resulting Chains:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) 
* [[43],40]
* [[42],39]
* [[41],38]
* [40]
* [39]
* [38]


### Merging Chains  eval_mem_true32_fill_rectangle_bb20_in/3 into  External patterns of execution 
* [[40]] --> 1 
* [[40,[43]]] --> 2 
* [[39]] --> 3 
* [[39,[42]]] --> 4 
* [[38]] --> 5 
* [[38,[41]]] --> 6 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb6_in/3 
* CE 21 is refined into CE [68] 
* CE 22 is refined into CE [69,70] 
* CE 23 is refined into CE [71,72] 
* CE 24 is refined into CE [73,74] 
* CE 25 is refined into CE [75,76] 
* CE 26 is refined into CE [77,78] 
* CE 27 is refined into CE [79,80,81,82,83,84] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb6_in/3 
* CE 68: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 0
     [] 
* CE 69: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb10_in(V__28,C):1
     [1>=V__28,C=4] 
* CE 70: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb10_in(V__28,C):2
     [V__28>=2,C=4] 
* CE 71: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb12_in(V__28,C):1
     [1>=V__28,C=4] 
* CE 72: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb12_in(V__28,C):2
     [V__28>=2,C=4] 
* CE 73: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb14_in(V__28,C):1
     [1>=V__28,C=4] 
* CE 74: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb14_in(V__28,C):2
     [V__28>=2,C=4] 
* CE 75: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb16_in(V__28,C):1
     [1>=V__28,C=4] 
* CE 76: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb16_in(V__28,C):2
     [V__28>=2,C=4] 
* CE 77: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb19_in(C,V__28,D):1
     [1>=V__28,D=4] 
* CE 78: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb19_in(C,V__28,D):2
     [V__28>=2,D=4] 
* CE 79: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):1
     [V__2>=6,1>=V__28,8>=V__2,C=4] 
* CE 80: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):2
     [V__28>=2,V__2>=6,8>=V__2,C=4] 
* CE 81: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):3
     [1>=V__28,5>=V__2,C=4] 
* CE 82: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):4
     [V__28>=2,5>=V__2,C=4] 
* CE 83: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):5
     [V__2>=9,1>=V__28,C=4] 
* CE 84: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) = 1+ eval_mem_true32_fill_rectangle_bb20_in(V__2,V__28,C):6
     [V__28>=2,V__2>=9,C=4] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb6_in/3 
* CEs [68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84] --> Loop 44 

#### Loops of eval_mem_true32_fill_rectangle_bb6_in/3 
* Loop 44: eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) [] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) 

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) 


### Resulting Chains:eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B) 
* [44]


### Merging Chains  eval_mem_true32_fill_rectangle_bb6_in/3 into  External patterns of execution 
* [[44]] --> 1 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb4_in/4 
* CE 20 is refined into CE [85] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb4_in/4 
* CE 85: eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B) = 0+ eval_mem_true32_fill_rectangle_bb6_in(V__2,C,B):1
     [] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb4_in/4 
* CEs [85] --> Loop 45 

#### Loops of eval_mem_true32_fill_rectangle_bb4_in/4 
* Loop 45: eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B) [] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B) 

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B) 


### Resulting Chains:eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B) 
* [45]


### Merging Chains  eval_mem_true32_fill_rectangle_bb4_in/4 into  External patterns of execution 
* [[45]] --> 1 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb2_in/5 
* CE 19 is refined into CE [86] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb2_in/5 
* CE 86: eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B) = 0+ eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,C,B):1
     [] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb2_in/5 
* CEs [86] --> Loop 46 

#### Loops of eval_mem_true32_fill_rectangle_bb2_in/5 
* Loop 46: eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B) [] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B) 

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B) 


### Resulting Chains:eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B) 
* [46]


### Merging Chains  eval_mem_true32_fill_rectangle_bb2_in/5 into  External patterns of execution 
* [[46]] --> 1 


### Specialization of cost equations eval_mem_true32_fill_rectangle_bb0_in/5 
* CE 3 is refined into CE [87] 
* CE 4 is refined into CE [88] 
* CE 5 is refined into CE [89] 
* CE 6 is refined into CE [90] 
* CE 7 is refined into CE [91] 
* CE 8 is refined into CE [92] 
* CE 9 is refined into CE [93] 
* CE 10 is refined into CE [94] 
* CE 11 is refined into CE [95] 
* CE 12 is refined into CE [96] 
* CE 13 is refined into CE [97] 
* CE 14 is refined into CE [98] 
* CE 15 is refined into CE [99] 
* CE 16 is refined into CE [100] 
* CE 17 is refined into CE [101] 
* CE 18 is refined into CE [102] 


#### Refined cost equations eval_mem_true32_fill_rectangle_bb0_in/5 
* CE 87: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,D,E,F,B):1
     [C=V_y+V_h,D=V_x+V_w,F=0,E=0] 
* CE 88: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,D,V_y,E,B):1
     [V_y+V_h=C,D=V_x+V_w,E=0] 
* CE 89: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,C,D,E,B):1
     [C=V_x+V_w,E=0,D=0] 
* CE 90: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,C,V_y,D,B):1
     [C=V_x+V_w,D=0] 
* CE 91: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,D,E,V_x,B):1
     [V_x+V_w=D,C=V_y+V_h,E=0] 
* CE 92: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,D,V_y,V_x,B):1
     [V_x+V_w=D,V_y+V_h=C] 
* CE 93: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,C,D,V_x,B):1
     [V_x+V_w=C,D=0] 
* CE 94: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,C,V_y,V_x,B):1
     [V_x+V_w=C] 
* CE 95: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,V_w,D,E,B):1
     [C=V_y+V_h,E=0,D=0] 
* CE 96: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,V_w,V_y,D,B):1
     [V_y+V_h=C,D=0] 
* CE 97: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,V_w,C,D,B):1
     [D=0,C=0] 
* CE 98: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,V_w,V_y,C,B):1
     [C=0] 
* CE 99: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,V_w,D,V_x,B):1
     [C=V_y+V_h,D=0] 
* CE 100: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(C,V_w,V_y,V_x,B):1
     [V_y+V_h=C] 
* CE 101: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,V_w,C,V_x,B):1
     [C=0] 
* CE 102: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true32_fill_rectangle_bb2_in(V_h,V_w,V_y,V_x,B):1
     [] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_bb0_in/5 
* CEs [87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102] --> Loop 47 

#### Loops of eval_mem_true32_fill_rectangle_bb0_in/5 
* Loop 47: eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B) 
* [47]


### Merging Chains  eval_mem_true32_fill_rectangle_bb0_in/5 into  External patterns of execution 
* [[47]] --> 1 


### Specialization of cost equations eval_mem_true32_fill_rectangle_start/6 
* CE 2 is refined into CE [103] 


#### Refined cost equations eval_mem_true32_fill_rectangle_start/6 
* CE 103: eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) = 0+ eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B):1
     [] 

### Cost equations --> "Loop" of eval_mem_true32_fill_rectangle_start/6 
* CEs [103] --> Loop 48 

#### Loops of eval_mem_true32_fill_rectangle_start/6 
* Loop 48: eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) [] 

### Ranking functions of CR eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 

#### Partial ranking functions of CR eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 


### Resulting Chains:eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B) 
* [48]


### Merging Chains  eval_mem_true32_fill_rectangle_start/6 into  External patterns of execution 
* [[48]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [23] 

 * loop 23:eval_mem_true32_fill_rectangle_bb10_in(V__3,B) -> [eval_mem_true32_fill_rectangle_bb10_in(V__3',B')] 
1
#### Cost of phase [23]:eval_mem_true32_fill_rectangle_bb10_in(V__3,B) -> [eval_mem_true32_fill_rectangle_bb10_in(V__3',B')] 
1*it(23)+0
  Such that:it(23) =< V__3
it(23) =< V__3-V__3'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb10_in(V__3,B):
* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< V__3

  with precondition: [B=4,V__3>=2] 

* Chain [24]: 0
  with precondition: [B=4,1>=V__3] 


#### Cost of loops [25] 

 * loop 25:eval_mem_true32_fill_rectangle_bb12_in(V__4,B) -> [eval_mem_true32_fill_rectangle_bb12_in(V__4',B')] 
1
#### Cost of phase [25]:eval_mem_true32_fill_rectangle_bb12_in(V__4,B) -> [eval_mem_true32_fill_rectangle_bb12_in(V__4',B')] 
1*it(25)+0
  Such that:it(25) =< V__4
it(25) =< V__4-V__4'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb12_in(V__4,B):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< V__4

  with precondition: [B=4,V__4>=2] 

* Chain [26]: 0
  with precondition: [B=4,1>=V__4] 


#### Cost of loops [27] 

 * loop 27:eval_mem_true32_fill_rectangle_bb14_in(V__5,B) -> [eval_mem_true32_fill_rectangle_bb14_in(V__5',B')] 
1
#### Cost of phase [27]:eval_mem_true32_fill_rectangle_bb14_in(V__5,B) -> [eval_mem_true32_fill_rectangle_bb14_in(V__5',B')] 
1*it(27)+0
  Such that:it(27) =< V__5
it(27) =< V__5-V__5'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb14_in(V__5,B):
* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< V__5

  with precondition: [B=4,V__5>=2] 

* Chain [28]: 0
  with precondition: [B=4,1>=V__5] 


#### Cost of loops [29] 

 * loop 29:eval_mem_true32_fill_rectangle_bb16_in(V__6,B) -> [eval_mem_true32_fill_rectangle_bb16_in(V__6',B')] 
1
#### Cost of phase [29]:eval_mem_true32_fill_rectangle_bb16_in(V__6,B) -> [eval_mem_true32_fill_rectangle_bb16_in(V__6',B')] 
1*it(29)+0
  Such that:it(29) =< V__6
it(29) =< V__6-V__6'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb16_in(V__6,B):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< V__6

  with precondition: [B=4,V__6>=2] 

* Chain [30]: 0
  with precondition: [B=4,1>=V__6] 


#### Cost of loops [32] 

 * loop 32:eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) -> [eval_mem_true32_fill_rectangle_bb19_in(V_83',V__7',B')] 
1
#### Cost of phase [32]:eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B) -> [eval_mem_true32_fill_rectangle_bb19_in(V_83',V__7',B')] 
1*it(32)+0
  Such that:it(32) =< V__7
it(32) =< V__7-V__7'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb19_in(V_83,V__7,B):
* Chain [[32],31]: 1*it(32)+0
  Such that:it(32) =< V__7

  with precondition: [B=4,V__7>=2] 

* Chain [31]: 0
  with precondition: [B=4,1>=V__7] 


#### Cost of loops [33] 

 * loop 33:eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) -> [eval_mem_true32_fill_rectangle_bb21_in(V__2',V__8',V_cnt_0',B',C',D',E',F')] 
1
#### Cost of phase [33]:eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F) -> [eval_mem_true32_fill_rectangle_bb21_in(V__2',V__8',V_cnt_0',B',C',D',E',F')] 
1*it(33)+0
  Such that:it(33) =< V_cnt_0/4
it(33) =< V_cnt_0/4-V_cnt_0'/4

#### Cost of chains of eval_mem_true32_fill_rectangle_bb21_in(V__2,V__8,V_cnt_0,B,C,D,E,F):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< V_cnt_0/4-E/4

  with precondition: [B=2,V__2=C,V__8=D,E=F+4,8>=E,E>=5,V__2>=V_cnt_0,V_cnt_0>=E+4] 

* Chain [34]: 0
  with precondition: [B=2,D=V__8,V__2=C,V_cnt_0=E,V_cnt_0=F+4,8>=V_cnt_0,V__2>=V_cnt_0] 


#### Cost of loops [35] 

 * loop 35:eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) -> [eval_mem_true32_fill_rectangle_bb22_in(V__2',V__8',V_cnt_0',V_cnt_1',B',C',D')] 
1
#### Cost of phase [35]:eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) -> [eval_mem_true32_fill_rectangle_bb22_in(V__2',V__8',V_cnt_0',V_cnt_1',B',C',D')] 
1*it(35)+0
  Such that:it(35) =< V_cnt_1
it(35) =< V_cnt_1-V_cnt_1'

#### Cost of phase [35]:eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D) -> [eval_mem_true32_fill_rectangle_bb22_in(V__2',V__8',V_cnt_0',V_cnt_1',B',C',D')] 
1*it(35)+0
  Such that:it(35) =< V_cnt_1
it(35) =< V_cnt_1-V_cnt_1'

#### Cost of chains of eval_mem_true32_fill_rectangle_bb22_in(V__2,V__8,V_cnt_0,V_cnt_1,B,C,D):
* Chain [[35],37]: 1*it(35)+0
  Such that:it(35) =< V_cnt_1

  with precondition: [B=3,V__2=C,V__8=D+1,V__8>=2,V_cnt_1>=2] 

* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< V_cnt_1

  with precondition: [B=4,1>=V__8,V_cnt_1>=2] 

* Chain [37]: 0
  with precondition: [B=3,C=V__2,V__8=D+1,1>=V_cnt_1,V__8>=2] 

* Chain [36]: 0
  with precondition: [B=4,1>=V__8,1>=V_cnt_1] 


#### Cost of loops [43] 

 * loop 43:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
1*s(3)+3
  Such that:s(3) =< V__2'

#### Cost of phase [43]:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
3*it(43)+1*s(4)+0
  Such that:it(43) =< V__8
it(43) =< V__8-V__8'
s(4) =< 8*V__8
s(4) =< 8*V__8-8*V__8'

#### Cost of loops [42] 

 * loop 42:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
3
#### Cost of phase [42]:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
3*it(42)+0
  Such that:it(42) =< V__8
it(42) =< V__8-V__8'

#### Cost of loops [41] 

 * loop 41:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
1*s(13)+1*s(12)+1*s(11)+3
  Such that:s(11) =< 4
s(12) =< V__2'
s(13) =< V__2'/4

#### Cost of phase [41]:eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B) -> [eval_mem_true32_fill_rectangle_bb20_in(V__2',V__8',B')] 
3*it(41)+1*s(14)+1*s(15)+1*s(16)+0
  Such that:aux(2) =< V__2
aux(4) =< V__8
aux(5) =< V__8-V__8'
aux(1) =< aux(4)
it(41) =< aux(4)
aux(1) =< aux(5)
it(41) =< aux(5)
aux(3) =< it(41)*aux(2)
s(15) =< it(41)*aux(2)
s(16) =< aux(1)*4
s(14) =< aux(3)* (1/4)

#### Cost of chains of eval_mem_true32_fill_rectangle_bb20_in(V__2,V__8,B):
* Chain [[43],40]: 3*it(43)+1*s(1)+1*s(4)+2
  Such that:s(1) =< V__2
it(43) =< V__8
s(4) =< 8*V__8

  with precondition: [B=4,8>=V__2,V__2>=6,V__8>=2] 

* Chain [[42],39]: 3*it(42)+2
  Such that:it(42) =< V__8

  with precondition: [B=4,5>=V__2,V__8>=2] 

* Chain [[41],38]: 3*it(41)+1*s(5)+1*s(6)+1*s(7)+1*s(14)+1*s(15)+1*s(16)+2
  Such that:s(7) =< 4
s(5) =< V__2/4
aux(6) =< V__2
aux(7) =< V__8
s(6) =< aux(6)
it(41) =< aux(7)
aux(3) =< it(41)*aux(6)
s(15) =< it(41)*aux(6)
s(16) =< aux(7)*4
s(14) =< aux(3)* (1/4)

  with precondition: [B=4,V__2>=9,V__8>=2] 

* Chain [40]: 1*s(1)+2
  Such that:s(1) =< V__2

  with precondition: [B=4,8>=V__2,1>=V__8,V__2>=6] 

* Chain [39]: 2
  with precondition: [B=4,5>=V__2,1>=V__8] 

* Chain [38]: 1*s(5)+1*s(6)+1*s(7)+2
  Such that:s(7) =< 4
s(6) =< V__2
s(5) =< V__2/4

  with precondition: [B=4,1>=V__8,V__2>=9] 


#### Cost of chains of eval_mem_true32_fill_rectangle_bb6_in(V__2,V__28,B):
* Chain [44]: 14*s(17)+4*s(22)+1*s(25)+2*s(27)+2*s(29)+1*s(37)+1*s(38)+1*s(39)+3
  Such that:s(25) =< 8*V__28
aux(8) =< 4
aux(9) =< V__2
aux(10) =< V__2/4
aux(11) =< V__28
s(27) =< aux(8)
s(22) =< aux(9)
s(29) =< aux(10)
s(17) =< aux(11)
s(36) =< s(17)*aux(9)
s(37) =< s(17)*aux(9)
s(38) =< aux(11)*4
s(39) =< s(36)* (1/4)

  with precondition: [] 


#### Cost of chains of eval_mem_true32_fill_rectangle_bb4_in(V__17,V__13,V__2,B):
* Chain [45]: 1*s(40)+2*s(45)+4*s(46)+2*s(47)+14*s(48)+1*s(50)+1*s(51)+1*s(52)+3
  Such that:s(41) =< 4
s(42) =< V__2
s(43) =< V__2/4
s(45) =< s(41)
s(46) =< s(42)
s(47) =< s(43)

  with precondition: [] 


#### Cost of chains of eval_mem_true32_fill_rectangle_bb2_in(V__17,V__15,V__13,V__1,B):
* Chain [46]: 2*s(56)+4*s(57)+2*s(58)+18*s(59)+3
  Such that:s(53) =< 4
s(56) =< s(53)

  with precondition: [] 


#### Cost of chains of eval_mem_true32_fill_rectangle_bb0_in(V_x,V_y,V_w,V_h,B):
* Chain [47]: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B):
* Chain [48]: 1*s(144)+0
  with precondition: [] 


Closed-form bounds of eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B): 
-------------------------------------
* Chain [48] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mem_true32_fill_rectangle_start(V_x,V_y,V_w,V_h,V_color,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 67 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 129 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 108 ms.
   - Equation cost structures 56 ms.
   - Phase cost structures 38 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 439 ms.

