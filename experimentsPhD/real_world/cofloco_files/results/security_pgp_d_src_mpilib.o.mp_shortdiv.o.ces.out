Warning: Ignored call to eval_mp_shortdiv_stop/1 in equation eval_mp_shortdiv_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mp_shortdiv_bb11_in/1]
1. recursive  : [eval_mp_shortdiv_bb3_in/3]
2. recursive  : [eval_mp_shortdiv_bb6_in/2,eval_mp_shortdiv_bb9_in/3]
3. non_recursive  : [loop_cont_eval_mp_shortdiv_bb6_in/2]
4. non_recursive  : [loop_cont_eval_mp_shortdiv_bb3_in/3]
5. non_recursive  : [eval_mp_shortdiv_2/1]
6. non_recursive  : [eval_mp_shortdiv_1/1]
7. non_recursive  : [eval_mp_shortdiv_0/1]
8. non_recursive  : [eval_mp_shortdiv_bb0_in/1]
9. non_recursive  : [eval_mp_shortdiv_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_mp_shortdiv_bb3_in/3
2. SCC is partially evaluated into eval_mp_shortdiv_bb6_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_mp_shortdiv_bb3_in/3
5. SCC is partially evaluated into eval_mp_shortdiv_2/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_mp_shortdiv_bb0_in/1
9. SCC is partially evaluated into eval_mp_shortdiv_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_shortdiv_bb3_in/3 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_mp_shortdiv_bb3_in/3 
* CE 13: eval_mp_shortdiv_bb3_in(A,B,A) = 0
     [B=3] 
* CE 14: eval_mp_shortdiv_bb3_in(V_bits_0,B,C) = 1+ eval_mp_shortdiv_bb3_in(D,B,C)
     [D+1=V_bits_0] 

### Cost equations --> "Loop" of eval_mp_shortdiv_bb3_in/3 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 

#### Loops of eval_mp_shortdiv_bb3_in/3 
* Loop 10: eval_mp_shortdiv_bb3_in(V_bits_0,B,C)->  eval_mp_shortdiv_bb3_in(V_bits_0',B,C)
                  [V_bits_0=V_bits_0'+1] 
* Loop 11: eval_mp_shortdiv_bb3_in(A,B,A) [B=3] 

### Ranking functions of CR eval_mp_shortdiv_bb3_in(V_bits_0,B,C) 

#### Partial ranking functions of CR eval_mp_shortdiv_bb3_in(V_bits_0,B,C) 


### Resulting Chains:eval_mp_shortdiv_bb3_in(V_bits_0,B,C) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_mp_shortdiv_bb3_in/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations eval_mp_shortdiv_bb6_in/2 
* CE 12 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_mp_shortdiv_bb6_in/2 
* CE 15: eval_mp_shortdiv_bb6_in(V_bits_1,B) = 0
     [B=2,V_bits_1=0] 
* CE 16: eval_mp_shortdiv_bb6_in(V_bits_1,B) = 1+ eval_mp_shortdiv_bb6_in(C,D)
     [V_bits_1>=1,V_bits_1=C+1,D=2,B=2] 
* CE 17: eval_mp_shortdiv_bb6_in(V_bits_1,B) = 1+ eval_mp_shortdiv_bb6_in(C,D)
     [0>=V_bits_1+1,V_bits_1=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_mp_shortdiv_bb6_in/2 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_mp_shortdiv_bb6_in/2 
* Loop 12: eval_mp_shortdiv_bb6_in(V_bits_1,B)->  eval_mp_shortdiv_bb6_in(V_bits_1',B')
                  [V_bits_1>=1,V_bits_1=V_bits_1'+1,B'=2,B=2] 
* Loop 13: eval_mp_shortdiv_bb6_in(V_bits_1,B)->  eval_mp_shortdiv_bb6_in(V_bits_1',B')
                  [0>=V_bits_1+1,V_bits_1=V_bits_1'+1,B'=2,B=2] 
* Loop 14: eval_mp_shortdiv_bb6_in(V_bits_1,B) [B=2,V_bits_1=0] 

### Ranking functions of CR eval_mp_shortdiv_bb6_in(V_bits_1,B) 
* RF of phase [12]: [V_bits_1]

#### Partial ranking functions of CR eval_mp_shortdiv_bb6_in(V_bits_1,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_bits_1


### Resulting Chains:eval_mp_shortdiv_bb6_in(V_bits_1,B) 
* [[13]]...
* [[12],14]
* [14]


### Merging Chains  eval_mp_shortdiv_bb6_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[12]]] --> 2 
* [[[13]]] --> 3 


### Specialization of cost equations loop_cont_eval_mp_shortdiv_bb3_in/3 
* CE 9 is refined into CE [18,19,20] 


#### Refined cost equations loop_cont_eval_mp_shortdiv_bb3_in/3 
* CE 18: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) = 1+ eval_mp_shortdiv_bb6_in(E,F):1
     [F=2,E=0,A=0,D=3] 
* CE 19: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) = 1+ eval_mp_shortdiv_bb6_in(A,E):2
     [A>=1,E=2,D=3] 
* CE 20: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) = 1+ eval_mp_shortdiv_bb6_in(A,E):3
     [0>=A+1,E=2,D=3] 

### Cost equations --> "Loop" of loop_cont_eval_mp_shortdiv_bb3_in/3 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of loop_cont_eval_mp_shortdiv_bb3_in/3 
* Loop 15: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) [0>=A+1,D=3] 
* Loop 16: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) [A>=1,D=3] 
* Loop 17: loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) [A=0,D=3] 

### Ranking functions of CR loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) 


### Resulting Chains:loop_cont_eval_mp_shortdiv_bb3_in(D,A,B) 
* [17]
* [16]
* [15]...


### Merging Chains  loop_cont_eval_mp_shortdiv_bb3_in/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations eval_mp_shortdiv_2/1 
* CE 5 is refined into CE [21,22,23,24,25,26,27] 
* CE 6 is refined into CE [28] 


#### Refined cost equations eval_mp_shortdiv_2/1 
* CE 21: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,E):1+ loop_cont_eval_mp_shortdiv_bb3_in(F,G,B):1
     [G=0,F=3,E=0,D=3,C=0] 
* CE 22: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,C):1+ loop_cont_eval_mp_shortdiv_bb3_in(E,C,B):2
     [C>=1,E=3,D=3] 
* CE 23: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,C):1+ loop_cont_eval_mp_shortdiv_bb3_in(E,C,B):3
     [0>=C+1,E=3,D=3] 
* CE 24: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,E):2+ loop_cont_eval_mp_shortdiv_bb3_in(F,G,B):1
     [C>=1,G=0,F=3,E=0,D=3] 
* CE 25: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,E):2+ loop_cont_eval_mp_shortdiv_bb3_in(F,E,B):2
     [C>=E+1,E>=1,F=3,D=3] 
* CE 26: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,E):2+ loop_cont_eval_mp_shortdiv_bb3_in(F,E,B):3
     [C>=E+1,0>=E+1,F=3,D=3] 
* CE 27: eval_mp_shortdiv_2(B) = 1+ eval_mp_shortdiv_bb3_in(C,D,E):3
     [] 
* CE 28: eval_mp_shortdiv_2(B) = 0
     [] 

### Cost equations --> "Loop" of eval_mp_shortdiv_2/1 
* CEs [21,22,24,25,28] --> Loop 18 
* CEs [23,26,27] --> Loop 19 

#### Loops of eval_mp_shortdiv_2/1 
* Loop 18: eval_mp_shortdiv_2(B) [] 
* Loop 19: eval_mp_shortdiv_2(B) [] 

### Ranking functions of CR eval_mp_shortdiv_2(B) 

#### Partial ranking functions of CR eval_mp_shortdiv_2(B) 


### Resulting Chains:eval_mp_shortdiv_2(B) 
* [19]...
* [18]


### Merging Chains  eval_mp_shortdiv_2/1 into  External patterns of execution 
* [[18]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_mp_shortdiv_bb0_in/1 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31] 


#### Refined cost equations eval_mp_shortdiv_bb0_in/1 
* CE 29: eval_mp_shortdiv_bb0_in(B) = 0+ eval_mp_shortdiv_2(B):1
     [] 
* CE 30: eval_mp_shortdiv_bb0_in(B) = 0+ eval_mp_shortdiv_2(B):2
     [] 
* CE 31: eval_mp_shortdiv_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_mp_shortdiv_bb0_in/1 
* CEs [29,31] --> Loop 20 
* CEs [30] --> Loop 21 

#### Loops of eval_mp_shortdiv_bb0_in/1 
* Loop 20: eval_mp_shortdiv_bb0_in(B) [] 
* Loop 21: eval_mp_shortdiv_bb0_in(B) [] 

### Ranking functions of CR eval_mp_shortdiv_bb0_in(B) 

#### Partial ranking functions of CR eval_mp_shortdiv_bb0_in(B) 


### Resulting Chains:eval_mp_shortdiv_bb0_in(B) 
* [21]...
* [20]


### Merging Chains  eval_mp_shortdiv_bb0_in/1 into  External patterns of execution 
* [[20]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_mp_shortdiv_start/2 
* CE 2 is refined into CE [32,33] 


#### Refined cost equations eval_mp_shortdiv_start/2 
* CE 32: eval_mp_shortdiv_start(V_divisor,B) = 0+ eval_mp_shortdiv_bb0_in(B):1
     [] 
* CE 33: eval_mp_shortdiv_start(V_divisor,B) = 0+ eval_mp_shortdiv_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mp_shortdiv_start/2 
* CEs [33] --> Loop 22 
* CEs [32] --> Loop 23 

#### Loops of eval_mp_shortdiv_start/2 
* Loop 22: eval_mp_shortdiv_start(V_divisor,B) [] 
* Loop 23: eval_mp_shortdiv_start(V_divisor,B) [] 

### Ranking functions of CR eval_mp_shortdiv_start(V_divisor,B) 

#### Partial ranking functions of CR eval_mp_shortdiv_start(V_divisor,B) 


### Resulting Chains:eval_mp_shortdiv_start(V_divisor,B) 
* [23]
* [22]...


### Merging Chains  eval_mp_shortdiv_start/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_mp_shortdiv_bb3_in(V_bits_0,B,C) -> [eval_mp_shortdiv_bb3_in(V_bits_0',B',C')] 
1
#### Cost of phase [10]:eval_mp_shortdiv_bb3_in(V_bits_0,B,C) -> [eval_mp_shortdiv_bb3_in(V_bits_0',B',C')] 
1*it(10)+0
#### Cost of phase [10]:eval_mp_shortdiv_bb3_in(V_bits_0,B,C) -> [eval_mp_shortdiv_bb3_in(V_bits_0',B',C')] 
1*it(10)+0
#### Cost of chains of eval_mp_shortdiv_bb3_in(V_bits_0,B,C):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3,V_bits_0>=C+1] 

* Chain [11]: 0
  with precondition: [B=3,C=V_bits_0] 


#### Cost of loops [13] 

 * loop 13:eval_mp_shortdiv_bb6_in(V_bits_1,B) -> [eval_mp_shortdiv_bb6_in(V_bits_1',B')] 
1
#### Cost of phase [13]:eval_mp_shortdiv_bb6_in(V_bits_1,B) -> [eval_mp_shortdiv_bb6_in(V_bits_1',B')] 
1*it(13)+0
#### Cost of loops [12] 

 * loop 12:eval_mp_shortdiv_bb6_in(V_bits_1,B) -> [eval_mp_shortdiv_bb6_in(V_bits_1',B')] 
1
#### Cost of phase [12]:eval_mp_shortdiv_bb6_in(V_bits_1,B) -> [eval_mp_shortdiv_bb6_in(V_bits_1',B')] 
1*it(12)+0
  Such that:it(12) =< V_bits_1
it(12) =< V_bits_1-V_bits_1'

#### Cost of chains of eval_mp_shortdiv_bb6_in(V_bits_1,B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [0>=V_bits_1+1,B=2] 

* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V_bits_1

  with precondition: [B=2,V_bits_1>=1] 

* Chain [14]: 0
  with precondition: [V_bits_1=0,B=2] 


#### Cost of chains of loop_cont_eval_mp_shortdiv_bb3_in(D,A,B):
* Chain [17]: 1
  with precondition: [D=3,A=0] 

* Chain [16]: 1*s(1)+1
  Such that:s(1) =< A

  with precondition: [D=3,A>=1] 

* Chain [15]...: 1*s(2)+1
  with precondition: [D=3,0>=A+1] 


#### Cost of chains of eval_mp_shortdiv_2(B):
* Chain [19]...: 1*aux(1)+0
  with precondition: [] 

* Chain [18]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_mp_shortdiv_bb0_in(B):
* Chain [21]...: 1*s(11)+0
  with precondition: [] 

* Chain [20]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_mp_shortdiv_start(V_divisor,B):
* Chain [23]: 1*s(13)+0
  with precondition: [] 

* Chain [22]...: 1*s(14)+0
  with precondition: [] 


Closed-form bounds of eval_mp_shortdiv_start(V_divisor,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_shortdiv_start(V_divisor,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 25 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 17 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 73 ms.

