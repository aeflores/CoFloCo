Warning: Ignored call to eval_entdump_stop/1 in equation eval_entdump_36/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_entdump_12/3,eval_entdump_13/3,eval_entdump_17/3,eval_entdump_18/3,eval_entdump_bb1_in/2,eval_entdump_bb4_in/3]
1. non_recursive  : [eval_entdump_36/1]
2. non_recursive  : [eval_entdump_35/1]
3. non_recursive  : [eval_entdump_bb11_in/1]
4. non_recursive  : [eval_entdump_34/1]
5. non_recursive  : [eval_entdump_33/1]
6. non_recursive  : [eval_entdump_bb9_in/1]
7. non_recursive  : [eval_entdump_29/1]
8. non_recursive  : [eval_entdump_28/1]
9. non_recursive  : [eval_entdump_27/1]
10. non_recursive  : [eval_entdump_25/1]
11. non_recursive  : [eval_entdump_24/1]
12. non_recursive  : [eval_entdump_23/1]
13. non_recursive  : [eval_entdump_bb7_in/1]
14. non_recursive  : [eval_entdump_22/1]
15. non_recursive  : [eval_entdump_21/1]
16. non_recursive  : [loop_cont_eval_entdump_bb1_in/2]
17. non_recursive  : [eval_entdump_7/1]
18. non_recursive  : [eval_entdump_6/2]
19. non_recursive  : [eval_entdump_bb0_in/1]
20. non_recursive  : [eval_entdump_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_entdump_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_entdump_bb9_in/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_entdump_25/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into loop_cont_eval_entdump_bb1_in/2
17. SCC is partially evaluated into eval_entdump_7/1
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_entdump_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_entdump_bb1_in/2 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_entdump_bb1_in/2 
* CE 11: eval_entdump_bb1_in(V_cond_0,B) = 0
     [V_cond_0>=0,B=3] 
* CE 12: eval_entdump_bb1_in(V_cond_0,B) = 0
     [V_cond_0>=0,B=2] 
* CE 13: eval_entdump_bb1_in(V_cond_0,B) = 1+ eval_entdump_bb1_in(C,B)
     [V_cond_0>=0,V_cond_0+1=C] 

### Cost equations --> "Loop" of eval_entdump_bb1_in/2 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_entdump_bb1_in/2 
* Loop 10: eval_entdump_bb1_in(V_cond_0,B)->  eval_entdump_bb1_in(V_cond_0',B)
                  [V_cond_0>=0,V_cond_0+1=V_cond_0'] 
* Loop 11: eval_entdump_bb1_in(V_cond_0,B) [V_cond_0>=0,B=3] 
* Loop 12: eval_entdump_bb1_in(V_cond_0,B) [V_cond_0>=0,B=2] 

### Ranking functions of CR eval_entdump_bb1_in(V_cond_0,B) 

#### Partial ranking functions of CR eval_entdump_bb1_in(V_cond_0,B) 


### Resulting Chains:eval_entdump_bb1_in(V_cond_0,B) 
* [[10]]...
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_entdump_bb1_in/2 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations eval_entdump_bb9_in/1 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_entdump_bb9_in/1 
* CE 14: eval_entdump_bb9_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_entdump_bb9_in/1 
* CEs [14] --> Loop 13 

#### Loops of eval_entdump_bb9_in/1 
* Loop 13: eval_entdump_bb9_in(B) [] 

### Ranking functions of CR eval_entdump_bb9_in(B) 

#### Partial ranking functions of CR eval_entdump_bb9_in(B) 


### Resulting Chains:eval_entdump_bb9_in(B) 
* [13]


### Merging Chains  eval_entdump_bb9_in/1 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_entdump_25/1 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_entdump_25/1 
* CE 15: eval_entdump_25(B) = 0+ eval_entdump_bb9_in(B):1
     [] 

### Cost equations --> "Loop" of eval_entdump_25/1 
* CEs [15] --> Loop 14 

#### Loops of eval_entdump_25/1 
* Loop 14: eval_entdump_25(B) [] 

### Ranking functions of CR eval_entdump_25(B) 

#### Partial ranking functions of CR eval_entdump_25(B) 


### Resulting Chains:eval_entdump_25(B) 
* [14]


### Merging Chains  eval_entdump_25/1 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations loop_cont_eval_entdump_bb1_in/2 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 


#### Refined cost equations loop_cont_eval_entdump_bb1_in/2 
* CE 16: loop_cont_eval_entdump_bb1_in(B,A) = 0+ eval_entdump_25(A):1
     [B=3] 
* CE 17: loop_cont_eval_entdump_bb1_in(B,A) = 0+ eval_entdump_25(A):1
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_entdump_bb1_in/2 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of loop_cont_eval_entdump_bb1_in/2 
* Loop 15: loop_cont_eval_entdump_bb1_in(B,A) [B=3] 
* Loop 16: loop_cont_eval_entdump_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_entdump_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_entdump_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_entdump_bb1_in(B,A) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_entdump_bb1_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_entdump_7/1 
* CE 3 is refined into CE [18,19,20] 


#### Refined cost equations eval_entdump_7/1 
* CE 18: eval_entdump_7(B) = 1+ eval_entdump_bb1_in(C,D):1+ loop_cont_eval_entdump_bb1_in(E,B):1
     [E=2,D=2,C=0] 
* CE 19: eval_entdump_7(B) = 1+ eval_entdump_bb1_in(C,D):2+ loop_cont_eval_entdump_bb1_in(E,B):2
     [E=3,D=3,C=0] 
* CE 20: eval_entdump_7(B) = 1+ eval_entdump_bb1_in(C,D):3
     [C=0] 

### Cost equations --> "Loop" of eval_entdump_7/1 
* CEs [20] --> Loop 17 
* CEs [18,19] --> Loop 18 

#### Loops of eval_entdump_7/1 
* Loop 17: eval_entdump_7(B) [] 
* Loop 18: eval_entdump_7(B) [] 

### Ranking functions of CR eval_entdump_7(B) 

#### Partial ranking functions of CR eval_entdump_7(B) 


### Resulting Chains:eval_entdump_7(B) 
* [18]
* [17]...


### Merging Chains  eval_entdump_7/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_entdump_start/1 
* CE 2 is refined into CE [21,22] 


#### Refined cost equations eval_entdump_start/1 
* CE 21: eval_entdump_start(B) = 0+ eval_entdump_7(B):1
     [] 
* CE 22: eval_entdump_start(B) = 0+ eval_entdump_7(B):2
     [] 

### Cost equations --> "Loop" of eval_entdump_start/1 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_entdump_start/1 
* Loop 19: eval_entdump_start(B) [] 
* Loop 20: eval_entdump_start(B) [] 

### Ranking functions of CR eval_entdump_start(B) 

#### Partial ranking functions of CR eval_entdump_start(B) 


### Resulting Chains:eval_entdump_start(B) 
* [20]
* [19]...


### Merging Chains  eval_entdump_start/1 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_entdump_bb1_in(V_cond_0,B) -> [eval_entdump_bb1_in(V_cond_0',B')] 
1
#### Cost of phase [10]:eval_entdump_bb1_in(V_cond_0,B) -> [eval_entdump_bb1_in(V_cond_0',B')] 
1*it(10)+0
#### Cost of phase [10]:eval_entdump_bb1_in(V_cond_0,B) -> [eval_entdump_bb1_in(V_cond_0',B')] 
1*it(10)+0
#### Cost of phase [10]:eval_entdump_bb1_in(V_cond_0,B) -> [eval_entdump_bb1_in(V_cond_0',B')] 
1*it(10)+0
#### Cost of chains of eval_entdump_bb1_in(V_cond_0,B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [V_cond_0>=0] 

* Chain [[10],12]: 1*it(10)+0
  with precondition: [B=2,V_cond_0>=0] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3,V_cond_0>=0] 

* Chain [12]: 0
  with precondition: [B=2,V_cond_0>=0] 

* Chain [11]: 0
  with precondition: [B=3,V_cond_0>=0] 


#### Cost of chains of eval_entdump_bb9_in(B):
* Chain [13]: 0
  with precondition: [] 


#### Cost of chains of eval_entdump_25(B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_entdump_bb1_in(B,A):
* Chain [16]: 0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_entdump_7(B):
* Chain [18]: 1*aux(3)+0
  with precondition: [] 

* Chain [17]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_entdump_start(B):
* Chain [20]: 1*s(6)+0
  with precondition: [] 

* Chain [19]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_entdump_start(B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_entdump_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 31 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 159 ms.

