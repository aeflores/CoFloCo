Warning: Ignored call to eval_expand_bottom_edge_stop/1 in equation loop_cont_eval_expand_bottom_edge_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_expand_bottom_edge_1/6,eval_expand_bottom_edge_2/6,eval_expand_bottom_edge_bb1_in/5]
1. non_recursive  : [loop_cont_eval_expand_bottom_edge_bb1_in/2]
2. non_recursive  : [eval_expand_bottom_edge_bb0_in/4]
3. non_recursive  : [eval_expand_bottom_edge_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_expand_bottom_edge_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_expand_bottom_edge_bb0_in/4
3. SCC is partially evaluated into eval_expand_bottom_edge_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_expand_bottom_edge_bb1_in/5 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


#### Refined cost equations eval_expand_bottom_edge_bb1_in/5 
* CE 6: eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) = 0
     [V_row_0>=V_output_rows,V_row_0>=V_input_rows,B=2] 
* CE 7: eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) = 1+ eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,C,D)
     [V_output_rows>=V_row_0+1,V_row_0>=V_input_rows,V_row_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_expand_bottom_edge_bb1_in/5 
* CEs [7] --> Loop 5 
* CEs [6] --> Loop 6 

#### Loops of eval_expand_bottom_edge_bb1_in/5 
* Loop 5: eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B)->  eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0',B')
                  [V_output_rows>=V_row_0+1,V_row_0>=V_input_rows,V_row_0+1=V_row_0',B'=2,B=2] 
* Loop 6: eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) [V_row_0>=V_output_rows,V_row_0>=V_input_rows,B=2] 

### Ranking functions of CR eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) 
* RF of phase [5]: [V_output_rows-V_row_0]

#### Partial ranking functions of CR eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V_output_rows-V_row_0


### Resulting Chains:eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) 
* [[5],6]
* [6]


### Merging Chains  eval_expand_bottom_edge_bb1_in/5 into  External patterns of execution 
* [[6]] --> 1 
* [[6,[5]]] --> 2 


### Specialization of cost equations eval_expand_bottom_edge_bb0_in/4 
* CE 3 is refined into CE [8,9] 


#### Refined cost equations eval_expand_bottom_edge_bb0_in/4 
* CE 8: eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) = 1+ eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_input_rows,C):1
     [V_input_rows>=V_output_rows,C=2] 
* CE 9: eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) = 1+ eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_input_rows,C):2
     [V_output_rows>=V_input_rows+1,C=2] 

### Cost equations --> "Loop" of eval_expand_bottom_edge_bb0_in/4 
* CEs [8] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_expand_bottom_edge_bb0_in/4 
* Loop 7: eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) [V_input_rows>=V_output_rows] 
* Loop 8: eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) [V_output_rows>=V_input_rows+1] 

### Ranking functions of CR eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) 

#### Partial ranking functions of CR eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) 


### Resulting Chains:eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B) 
* [8]
* [7]


### Merging Chains  eval_expand_bottom_edge_bb0_in/4 into  External patterns of execution 
* [[8]] --> 1 
* [[7]] --> 2 


### Specialization of cost equations eval_expand_bottom_edge_start/4 
* CE 2 is refined into CE [10,11] 


#### Refined cost equations eval_expand_bottom_edge_start/4 
* CE 10: eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) = 0+ eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B):1
     [V_output_rows>=V_input_rows+1] 
* CE 11: eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) = 0+ eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B):2
     [V_input_rows>=V_output_rows] 

### Cost equations --> "Loop" of eval_expand_bottom_edge_start/4 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_expand_bottom_edge_start/4 
* Loop 9: eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) [V_input_rows>=V_output_rows] 
* Loop 10: eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) [V_output_rows>=V_input_rows+1] 

### Ranking functions of CR eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) 

#### Partial ranking functions of CR eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) 


### Resulting Chains:eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B) 
* [10]
* [9]


### Merging Chains  eval_expand_bottom_edge_start/4 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) -> [eval_expand_bottom_edge_bb1_in(V_num_cols',V_input_rows',V_output_rows',V_row_0',B')] 
1
#### Cost of phase [5]:eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B) -> [eval_expand_bottom_edge_bb1_in(V_num_cols',V_input_rows',V_output_rows',V_row_0',B')] 
1*it(5)+0
  Such that:it(5) =< V_output_rows-V_row_0
it(5) =< V_output_rows-V_row_0-V_output_rows'+V_row_0'

#### Cost of chains of eval_expand_bottom_edge_bb1_in(V_num_cols,V_input_rows,V_output_rows,V_row_0,B):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< V_output_rows-V_row_0

  with precondition: [B=2,V_row_0>=V_input_rows,V_output_rows>=V_row_0+1] 

* Chain [6]: 0
  with precondition: [B=2,V_row_0>=V_input_rows,V_row_0>=V_output_rows] 


#### Cost of chains of eval_expand_bottom_edge_bb0_in(V_num_cols,V_input_rows,V_output_rows,B):
* Chain [8]: 1*s(1)+1
  Such that:s(1) =< -V_input_rows+V_output_rows

  with precondition: [V_output_rows>=V_input_rows+1] 

* Chain [7]: 1
  with precondition: [V_input_rows>=V_output_rows] 


#### Cost of chains of eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B):
* Chain [10]: 1*s(2)+1
  Such that:s(2) =< -V_input_rows+V_output_rows

  with precondition: [V_output_rows>=V_input_rows+1] 

* Chain [9]: 1
  with precondition: [V_input_rows>=V_output_rows] 


Closed-form bounds of eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B): 
-------------------------------------
* Chain [10] with precondition: [V_output_rows>=V_input_rows+1] 
    - Upper bound: -V_input_rows+V_output_rows+1 
    - Complexity: n 
* Chain [9] with precondition: [V_input_rows>=V_output_rows] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_expand_bottom_edge_start(V_num_cols,V_input_rows,V_output_rows,B): nat(-V_input_rows+V_output_rows)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 13 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 53 ms.

