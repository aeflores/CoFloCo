WARNING: Excluded non-linear constraints:[D*A+50=0]
WARNING: Excluded non-linear constraints:[D*A+50>=0+1,D*A-100*E+50>=0,D*A-100*E+50+1=<100]
WARNING: Excluded non-linear constraints:[D*A+50+1=<0,-D*A+100*E-50>=0,-D*A+100*E-50+1=<100]
Warning: Ignored call to eval_jpeg_add_quant_table_stop/1 in equation loop_cont_eval_jpeg_add_quant_table_bb5_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_jpeg_add_quant_table_bb5_in/3]
1. non_recursive  : [loop_cont_eval_jpeg_add_quant_table_bb5_in/2]
2. non_recursive  : [eval_jpeg_add_quant_table_bb4_in/2]
3. non_recursive  : [eval_jpeg_add_quant_table_9/2]
4. non_recursive  : [eval_jpeg_add_quant_table_8/2]
5. non_recursive  : [eval_jpeg_add_quant_table_bb2_in/2]
6. non_recursive  : [eval_jpeg_add_quant_table_7/2]
7. non_recursive  : [eval_jpeg_add_quant_table_6/2]
8. non_recursive  : [eval_jpeg_add_quant_table_bb0_in/2]
9. non_recursive  : [eval_jpeg_add_quant_table_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_jpeg_add_quant_table_bb5_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_jpeg_add_quant_table_bb4_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_jpeg_add_quant_table_bb2_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_jpeg_add_quant_table_bb0_in/2
9. SCC is partially evaluated into eval_jpeg_add_quant_table_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_jpeg_add_quant_table_bb5_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_jpeg_add_quant_table_bb5_in/3 
* CE 8: eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) = 0
     [V_i_0>=64,B=2] 
* CE 9: eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) = 1+ eval_jpeg_add_quant_table_bb5_in(V_25,C,D)
     [V_i_0>=0,63>=V_i_0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_jpeg_add_quant_table_bb5_in/3 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_jpeg_add_quant_table_bb5_in/3 
* Loop 7: eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B)->  eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0',B')
                  [V_i_0>=0,63>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) [V_i_0>=64,B=2] 

### Ranking functions of CR eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) 
* RF of phase [7]: [-V_i_0+64]

#### Partial ranking functions of CR eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V_i_0+64


### Resulting Chains:eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) 
* [[7],8]


### Merging Chains  eval_jpeg_add_quant_table_bb5_in/3 into  External patterns of execution 
* [[8,[7]]] --> 1 


### Specialization of cost equations eval_jpeg_add_quant_table_bb4_in/2 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_jpeg_add_quant_table_bb4_in/2 
* CE 10: eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B) = 1+ eval_jpeg_add_quant_table_bb5_in(V_scale_factor,C,D):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_jpeg_add_quant_table_bb4_in/2 
* CEs [10] --> Loop 9 

#### Loops of eval_jpeg_add_quant_table_bb4_in/2 
* Loop 9: eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B) [] 

### Ranking functions of CR eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B) 

#### Partial ranking functions of CR eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B) 


### Resulting Chains:eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B) 
* [9]


### Merging Chains  eval_jpeg_add_quant_table_bb4_in/2 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_jpeg_add_quant_table_bb2_in/2 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_jpeg_add_quant_table_bb2_in/2 
* CE 11: eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B) = 0+ eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B):1
     [] 

### Cost equations --> "Loop" of eval_jpeg_add_quant_table_bb2_in/2 
* CEs [11] --> Loop 10 

#### Loops of eval_jpeg_add_quant_table_bb2_in/2 
* Loop 10: eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B) [] 

### Ranking functions of CR eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B) 

#### Partial ranking functions of CR eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B) 


### Resulting Chains:eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B) 
* [10]


### Merging Chains  eval_jpeg_add_quant_table_bb2_in/2 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_jpeg_add_quant_table_bb0_in/2 
* CE 3 is refined into CE [12] 


#### Refined cost equations eval_jpeg_add_quant_table_bb0_in/2 
* CE 12: eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B) = 0+ eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B):1
     [] 

### Cost equations --> "Loop" of eval_jpeg_add_quant_table_bb0_in/2 
* CEs [12] --> Loop 11 

#### Loops of eval_jpeg_add_quant_table_bb0_in/2 
* Loop 11: eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B) [] 

### Ranking functions of CR eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B) 

#### Partial ranking functions of CR eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B) 


### Resulting Chains:eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B) 
* [11]


### Merging Chains  eval_jpeg_add_quant_table_bb0_in/2 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations eval_jpeg_add_quant_table_start/4 
* CE 2 is refined into CE [13] 


#### Refined cost equations eval_jpeg_add_quant_table_start/4 
* CE 13: eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B) = 0+ eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B):1
     [] 

### Cost equations --> "Loop" of eval_jpeg_add_quant_table_start/4 
* CEs [13] --> Loop 12 

#### Loops of eval_jpeg_add_quant_table_start/4 
* Loop 12: eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B) [] 

### Ranking functions of CR eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B) 

#### Partial ranking functions of CR eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B) 


### Resulting Chains:eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B) 
* [12]


### Merging Chains  eval_jpeg_add_quant_table_start/4 into  External patterns of execution 
* [[12]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) -> [eval_jpeg_add_quant_table_bb5_in(V_25',V_i_0',B')] 
1
#### Cost of phase [7]:eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B) -> [eval_jpeg_add_quant_table_bb5_in(V_25',V_i_0',B')] 
1*it(7)+0
  Such that:it(7) =< -V_i_0+64
it(7) =< -V_i_0+V_i_0'

#### Cost of chains of eval_jpeg_add_quant_table_bb5_in(V_25,V_i_0,B):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_i_0+64

  with precondition: [B=2,63>=V_i_0,V_i_0>=0] 


#### Cost of chains of eval_jpeg_add_quant_table_bb4_in(V_scale_factor,B):
* Chain [9]: 1*s(1)+1
  Such that:s(1) =< 64

  with precondition: [] 


#### Cost of chains of eval_jpeg_add_quant_table_bb2_in(V_scale_factor,B):
* Chain [10]: 1*s(2)+1
  Such that:s(2) =< 64

  with precondition: [] 


#### Cost of chains of eval_jpeg_add_quant_table_bb0_in(V_scale_factor,B):
* Chain [11]: 1*s(3)+1
  Such that:s(3) =< 64

  with precondition: [] 


#### Cost of chains of eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B):
* Chain [12]: 1*s(4)+1
  Such that:s(4) =< 64

  with precondition: [] 


Closed-form bounds of eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: 65 
    - Complexity: constant 

### Maximum cost of eval_jpeg_add_quant_table_start(V_which_tbl,V_scale_factor,V_force_baseline,B): 65 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 27 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 121 ms.

