Warning: Ignored call to eval_rightmatch_stop/1 in equation eval_rightmatch_bb46_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_rightmatch_35/3,eval_rightmatch_36/4,eval_rightmatch_bb10_in/2]
1. recursive  : [eval_rightmatch_108/2,eval_rightmatch_109/3,eval_rightmatch_bb40_in/1]
2. recursive  : [eval_rightmatch_112/2,eval_rightmatch_113/2,eval_rightmatch_31/2,eval_rightmatch_32/2,eval_rightmatch_bb19_in/1,eval_rightmatch_bb27_in/1,eval_rightmatch_bb2_in/1,eval_rightmatch_bb39_in/1,eval_rightmatch_bb44_in/1,eval_rightmatch_bb6_in/1,loop_cont_eval_rightmatch_bb10_in/2,loop_cont_eval_rightmatch_bb40_in/2]
3. non_recursive  : [eval_rightmatch_bb46_in/1]
4. non_recursive  : [eval_rightmatch_117/1]
5. non_recursive  : [eval_rightmatch_116/2]
6. non_recursive  : [eval_rightmatch_NewDefault_in/1]
7. non_recursive  : [loop_cont_eval_rightmatch_bb2_in/2]
8. non_recursive  : [eval_rightmatch_4/1]
9. non_recursive  : [eval_rightmatch_3/1]
10. non_recursive  : [eval_rightmatch_bb0_in/1]
11. non_recursive  : [eval_rightmatch_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rightmatch_bb10_in/2
1. SCC is partially evaluated into eval_rightmatch_bb40_in/1
2. SCC is partially evaluated into eval_rightmatch_bb2_in/1
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_rightmatch_bb2_in/2
8. SCC is partially evaluated into eval_rightmatch_4/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_rightmatch_bb0_in/1
11. SCC is partially evaluated into eval_rightmatch_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rightmatch_bb10_in/2 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


#### Refined cost equations eval_rightmatch_bb10_in/2 
* CE 17: eval_rightmatch_bb10_in(V_31,B) = 1+ eval_rightmatch_bb10_in(V_31,C)
     [C=2,B=2] 
* CE 18: eval_rightmatch_bb10_in(V_31,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_rightmatch_bb10_in/2 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_rightmatch_bb10_in/2 
* Loop 13: eval_rightmatch_bb10_in(V_31,B) [B=2] 
* Loop 14: eval_rightmatch_bb10_in(V_31,B)->  eval_rightmatch_bb10_in(V_31,B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_rightmatch_bb10_in(V_31,B) 

#### Partial ranking functions of CR eval_rightmatch_bb10_in(V_31,B) 


### Resulting Chains:eval_rightmatch_bb10_in(V_31,B) 
* [[14]]...
* [[14],13]
* [13]


### Merging Chains  eval_rightmatch_bb10_in/2 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[[14]]] --> 2 


### Specialization of cost equations eval_rightmatch_bb40_in/1 
* CE 16 is refined into CE [19] 
* CE 15 is refined into CE [20] 


#### Refined cost equations eval_rightmatch_bb40_in/1 
* CE 19: eval_rightmatch_bb40_in(B) = 1+ eval_rightmatch_bb40_in(C)
     [C=2,B=2] 
* CE 20: eval_rightmatch_bb40_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_rightmatch_bb40_in/1 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of eval_rightmatch_bb40_in/1 
* Loop 15: eval_rightmatch_bb40_in(B) [B=2] 
* Loop 16: eval_rightmatch_bb40_in(B)->  eval_rightmatch_bb40_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_rightmatch_bb40_in(B) 

#### Partial ranking functions of CR eval_rightmatch_bb40_in(B) 


### Resulting Chains:eval_rightmatch_bb40_in(B) 
* [[16]]...
* [[16],15]
* [15]


### Merging Chains  eval_rightmatch_bb40_in/1 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_rightmatch_bb2_in/1 
* CE 10 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24,25] 
* CE 9 is refined into CE [26,27] 


#### Refined cost equations eval_rightmatch_bb2_in/1 
* CE 21: eval_rightmatch_bb2_in(B) = 0
     [B=4] 
* CE 22: eval_rightmatch_bb2_in(B) = 0
     [B=3] 
* CE 23: eval_rightmatch_bb2_in(B) = 1+ eval_rightmatch_bb2_in(B)
     [] 
* CE 24: eval_rightmatch_bb2_in(B) = 2+ eval_rightmatch_bb10_in(C,D):1+ eval_rightmatch_bb2_in(B)
     [D=2] 
* CE 25: eval_rightmatch_bb2_in(B) = 2+ eval_rightmatch_bb10_in(C,D):2
     [D=2] 
* CE 26: eval_rightmatch_bb2_in(B) = 2+ eval_rightmatch_bb40_in(C):1+ eval_rightmatch_bb2_in(B)
     [C=2] 
* CE 27: eval_rightmatch_bb2_in(B) = 2+ eval_rightmatch_bb40_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_rightmatch_bb2_in/1 
* CEs [25,27] --> Loop 17 
* CEs [23,24,26] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 

#### Loops of eval_rightmatch_bb2_in/1 
* Loop 17: eval_rightmatch_bb2_in(B) [] 
* Loop 18: eval_rightmatch_bb2_in(B)->  eval_rightmatch_bb2_in(B)
                  [] 
* Loop 19: eval_rightmatch_bb2_in(B) [B=4] 
* Loop 20: eval_rightmatch_bb2_in(B) [B=3] 

### Ranking functions of CR eval_rightmatch_bb2_in(B) 

#### Partial ranking functions of CR eval_rightmatch_bb2_in(B) 


### Resulting Chains:eval_rightmatch_bb2_in(B) 
* [[18]]...
* [[18],20]
* [[18],19]
* [[18],17]...
* [20]
* [19]
* [17]...


### Merging Chains  eval_rightmatch_bb2_in/1 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[17],[[18]],[17,[18]]] --> 3 


### Specialization of cost equations loop_cont_eval_rightmatch_bb2_in/2 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 


#### Refined cost equations loop_cont_eval_rightmatch_bb2_in/2 
* CE 28: loop_cont_eval_rightmatch_bb2_in(B,A) = 0
     [B=4] 
* CE 29: loop_cont_eval_rightmatch_bb2_in(B,A) = 0
     [B=3] 

### Cost equations --> "Loop" of loop_cont_eval_rightmatch_bb2_in/2 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of loop_cont_eval_rightmatch_bb2_in/2 
* Loop 21: loop_cont_eval_rightmatch_bb2_in(B,A) [B=4] 
* Loop 22: loop_cont_eval_rightmatch_bb2_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_rightmatch_bb2_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_rightmatch_bb2_in(B,A) 


### Resulting Chains:loop_cont_eval_rightmatch_bb2_in(B,A) 
* [22]
* [21]


### Merging Chains  loop_cont_eval_rightmatch_bb2_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_rightmatch_4/1 
* CE 5 is refined into CE [30,31,32] 


#### Refined cost equations eval_rightmatch_4/1 
* CE 30: eval_rightmatch_4(B) = 1+ eval_rightmatch_bb2_in(C):1+ loop_cont_eval_rightmatch_bb2_in(D,B):1
     [D=3,C=3] 
* CE 31: eval_rightmatch_4(B) = 1+ eval_rightmatch_bb2_in(C):2+ loop_cont_eval_rightmatch_bb2_in(D,B):2
     [D=4,C=4] 
* CE 32: eval_rightmatch_4(B) = 1+ eval_rightmatch_bb2_in(C):3
     [] 

### Cost equations --> "Loop" of eval_rightmatch_4/1 
* CEs [32] --> Loop 23 
* CEs [30,31] --> Loop 24 

#### Loops of eval_rightmatch_4/1 
* Loop 23: eval_rightmatch_4(B) [] 
* Loop 24: eval_rightmatch_4(B) [] 

### Ranking functions of CR eval_rightmatch_4(B) 

#### Partial ranking functions of CR eval_rightmatch_4(B) 


### Resulting Chains:eval_rightmatch_4(B) 
* [24]
* [23]...


### Merging Chains  eval_rightmatch_4/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_rightmatch_bb0_in/1 
* CE 3 is refined into CE [33] 
* CE 4 is refined into CE [34,35] 


#### Refined cost equations eval_rightmatch_bb0_in/1 
* CE 33: eval_rightmatch_bb0_in(B) = 0
     [] 
* CE 34: eval_rightmatch_bb0_in(B) = 0+ eval_rightmatch_4(B):1
     [] 
* CE 35: eval_rightmatch_bb0_in(B) = 0+ eval_rightmatch_4(B):2
     [] 

### Cost equations --> "Loop" of eval_rightmatch_bb0_in/1 
* CEs [35] --> Loop 25 
* CEs [33,34] --> Loop 26 

#### Loops of eval_rightmatch_bb0_in/1 
* Loop 25: eval_rightmatch_bb0_in(B) [] 
* Loop 26: eval_rightmatch_bb0_in(B) [] 

### Ranking functions of CR eval_rightmatch_bb0_in(B) 

#### Partial ranking functions of CR eval_rightmatch_bb0_in(B) 


### Resulting Chains:eval_rightmatch_bb0_in(B) 
* [26]
* [25]...


### Merging Chains  eval_rightmatch_bb0_in/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_rightmatch_start/1 
* CE 2 is refined into CE [36,37] 


#### Refined cost equations eval_rightmatch_start/1 
* CE 36: eval_rightmatch_start(B) = 0+ eval_rightmatch_bb0_in(B):1
     [] 
* CE 37: eval_rightmatch_start(B) = 0+ eval_rightmatch_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_rightmatch_start/1 
* CEs [37] --> Loop 27 
* CEs [36] --> Loop 28 

#### Loops of eval_rightmatch_start/1 
* Loop 27: eval_rightmatch_start(B) [] 
* Loop 28: eval_rightmatch_start(B) [] 

### Ranking functions of CR eval_rightmatch_start(B) 

#### Partial ranking functions of CR eval_rightmatch_start(B) 


### Resulting Chains:eval_rightmatch_start(B) 
* [28]
* [27]...


### Merging Chains  eval_rightmatch_start/1 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_rightmatch_bb10_in(V_31,B) -> [eval_rightmatch_bb10_in(V_31',B')] 
1
#### Cost of phase [14]:eval_rightmatch_bb10_in(V_31,B) -> [eval_rightmatch_bb10_in(V_31',B')] 
1*it(14)+0
#### Cost of phase [14]:eval_rightmatch_bb10_in(V_31,B) -> [eval_rightmatch_bb10_in(V_31',B')] 
1*it(14)+0
#### Cost of chains of eval_rightmatch_bb10_in(V_31,B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],13]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=2] 


#### Cost of loops [16] 

 * loop 16:eval_rightmatch_bb40_in(B) -> [eval_rightmatch_bb40_in(B')] 
1
#### Cost of phase [16]:eval_rightmatch_bb40_in(B) -> [eval_rightmatch_bb40_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_rightmatch_bb40_in(B) -> [eval_rightmatch_bb40_in(B')] 
1*it(16)+0
#### Cost of chains of eval_rightmatch_bb40_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=2] 


#### Cost of loops [18] 

 * loop 18:eval_rightmatch_bb2_in(B) -> [eval_rightmatch_bb2_in(B')] 
1*s(5)+0
#### Cost of phase [18]:eval_rightmatch_bb2_in(B) -> [eval_rightmatch_bb2_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_rightmatch_bb2_in(B) -> [eval_rightmatch_bb2_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_rightmatch_bb2_in(B) -> [eval_rightmatch_bb2_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_rightmatch_bb2_in(B) -> [eval_rightmatch_bb2_in(B')] 
1*s(6)+0
#### Cost of chains of eval_rightmatch_bb2_in(B):
* Chain [[18]]...: 1*s(6)+0
  with precondition: [] 

* Chain [[18],20]: 1*s(6)+0
  with precondition: [B=3] 

* Chain [[18],19]: 1*s(6)+0
  with precondition: [B=4] 

* Chain [[18],17]...: 2*aux(4)+0
  with precondition: [] 

* Chain [20]: 0
  with precondition: [B=3] 

* Chain [19]: 0
  with precondition: [B=4] 

* Chain [17]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_rightmatch_bb2_in(B,A):
* Chain [22]: 0
  with precondition: [B=3] 

* Chain [21]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_rightmatch_4(B):
* Chain [24]: 1*aux(8)+0
  with precondition: [] 

* Chain [23]...: 1*s(16)+1
  with precondition: [] 


#### Cost of chains of eval_rightmatch_bb0_in(B):
* Chain [26]: 1*aux(9)+0
  with precondition: [] 

* Chain [25]...: 1*s(18)+1
  with precondition: [] 


#### Cost of chains of eval_rightmatch_start(B):
* Chain [28]: 1*s(19)+0
  with precondition: [] 

* Chain [27]...: 1*s(20)+1
  with precondition: [] 


Closed-form bounds of eval_rightmatch_start(B): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_rightmatch_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 37 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 46 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 42 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 217 ms.

