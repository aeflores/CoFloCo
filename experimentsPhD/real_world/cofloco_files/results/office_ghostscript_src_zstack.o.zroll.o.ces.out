Warning: Ignored call to eval_zroll_stop/1 in equation eval_zroll_bb48_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_zroll_bb48_in/1]
1. non_recursive  : [eval_zroll_134/1]
2. non_recursive  : [eval_zroll_133/1]
3. non_recursive  : [eval_zroll_136/1]
4. non_recursive  : [eval_zroll_135/1]
5. recursive  : [eval_zroll_46/20,eval_zroll_47/20,eval_zroll_48/20,eval_zroll_bb14_in/17]
6. recursive  : [eval_zroll_34/6,eval_zroll_35/6,eval_zroll_36/6,eval_zroll_41/10,eval_zroll_42/10,eval_zroll_bb12_in/5,loop_cont_eval_zroll_bb14_in/11]
7. non_recursive  : [loop_cont_eval_zroll_bb12_in/2]
8. non_recursive  : [eval_zroll_bb11_in/3]
9. non_recursive  : [eval_zroll_16/1]
10. non_recursive  : [eval_zroll_15/1]
11. recursive  : [eval_zroll_66/3,eval_zroll_67/3,eval_zroll_bb22_in/2]
12. non_recursive  : [eval_zroll_70/1]
13. non_recursive  : [eval_zroll_69/1]
14. non_recursive  : [eval_zroll_68/1]
15. non_recursive  : [loop_cont_eval_zroll_bb22_in/2]
16. non_recursive  : [eval_zroll_63/2]
17. non_recursive  : [eval_zroll_62/2]
18. non_recursive  : [eval_zroll_61/2]
19. recursive  : [eval_zroll_77/3,eval_zroll_78/3,eval_zroll_79/3,eval_zroll_bb26_in/2]
20. non_recursive  : [eval_zroll_82/1]
21. non_recursive  : [eval_zroll_81/1]
22. non_recursive  : [eval_zroll_80/1]
23. non_recursive  : [loop_cont_eval_zroll_bb26_in/2]
24. non_recursive  : [eval_zroll_74/2]
25. non_recursive  : [eval_zroll_73/2]
26. non_recursive  : [eval_zroll_72/2]
27. recursive  : [eval_zroll_131/3,eval_zroll_132/3,eval_zroll_bb44_in/2]
28. non_recursive  : [loop_cont_eval_zroll_bb44_in/2]
29. non_recursive  : [eval_zroll_127/2]
30. non_recursive  : [eval_zroll_126/3]
31. recursive  : [eval_zroll_106/5,eval_zroll_107/5,eval_zroll_bb38_in/4]
32. non_recursive  : [eval_zroll_111/1]
33. non_recursive  : [eval_zroll_110/2]
34. non_recursive  : [loop_cont_eval_zroll_bb38_in/3]
35. non_recursive  : [eval_zroll_bb34_in/3]
36. non_recursive  : [eval_zroll_NewDefault_in/3]
37. non_recursive  : [eval_zroll_bb0_in/1]
38. non_recursive  : [eval_zroll_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_zroll_bb14_in/17
6. SCC is partially evaluated into eval_zroll_bb12_in/5
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_zroll_bb11_in/3
9. SCC is partially evaluated into eval_zroll_16/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_zroll_bb22_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_zroll_63/2
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_zroll_bb26_in/2
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_zroll_74/2
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_zroll_bb44_in/2
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into eval_zroll_127/2
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_zroll_bb38_in/4
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is partially evaluated into eval_zroll_bb34_in/3
36. SCC is partially evaluated into eval_zroll_NewDefault_in/3
37. SCC is partially evaluated into eval_zroll_bb0_in/1
38. SCC is partially evaluated into eval_zroll_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zroll_bb14_in/17 
* CE 70 is refined into CE [77] 
* CE 71 is refined into CE [78] 
* CE 72 is refined into CE [79] 
* CE 73 is refined into CE [80] 
* CE 67 is refined into CE [81] 
* CE 68 is refined into CE [82] 
* CE 69 is refined into CE [83] 
* CE 60 is refined into CE [84] 
* CE 59 is refined into CE [85] 
* CE 58 is refined into CE [86] 
* CE 57 is refined into CE [87] 
* CE 56 is refined into CE [88] 
* CE 55 is refined into CE [89] 
* CE 54 is refined into CE [90] 
* CE 53 is refined into CE [91] 
* CE 66 is refined into CE [92] 
* CE 65 is refined into CE [93] 
* CE 64 is refined into CE [94] 
* CE 63 is refined into CE [95] 
* CE 62 is refined into CE [96] 
* CE 61 is refined into CE [97] 


#### Refined cost equations eval_zroll_bb14_in/17 
* CE 77: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) = 0
     [B+G>=1,D>=F,A>=C+1,C>=0,A>=2,F=J+1,C+2=I,C+2=E,H=2] 
* CE 78: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) = 0
     [A+C>=1,D>=F,0>=B+G+1,A>=2,0>=C,F=J+1,C+2=I,C+2=E,H=2] 
* CE 79: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) = 0
     [B+G>=1,D>=F,0>=A+C+1,C>=0,0>=A+2,F=J+1,C+2=I,C+2=E,H=2] 
* CE 80: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) = 0
     [D>=F,0>=B+G+1,C>=A+1,0>=C,0>=A+2,F=J+1,C+2=I,C+2=E,H=2] 
* CE 81: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,I,D,J,F,K,L,M) = 0
     [D>=F,B+K=0,B+G=0,F=L+1,M=0,J=2,I=0,H=2,E=2,C=0] 
* CE 82: eval_zroll_bb14_in(A,B,C,D,E,D,F,G,H,B,I,D,J,D,K,L,M) = 0
     [D=L+1,M=0,K=0,J=2,I=0,H=1,G=2,F=0,E=2,C=0,A=1] 
* CE 83: eval_zroll_bb14_in(A,B,C,D,E,D,F,G,H,B,I,D,J,D,K,L,M) = 0
     [D=L+1,M=0,K=0,J=2,I=0,H+1=0,G=2,F=0,E=2,C=0,A+1=0] 
* CE 84: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_mod_2+V_j_0>=1,V_i_0>=N+1,V_39>=N+1,V_left_0>=V_left_0_sink,N>=0,V_39>=2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 85: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_mod_2+V_j_0>=1,V_39>=N+1,V_left_0>=V_left_0_sink,N>=V_i_0+1,N>=0,V_39>=2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 86: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_39+N>=1,V_i_0>=N+1,V_left_0>=V_left_0_sink,0>=V_mod_2+V_j_0+1,V_39>=2,0>=N,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 87: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_39+N>=1,V_left_0>=V_left_0_sink,N>=V_i_0+1,0>=V_mod_2+V_j_0+1,V_39>=2,0>=N,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 88: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_mod_2+V_j_0>=1,V_i_0>=N+1,V_left_0>=V_left_0_sink,0>=V_39+N+1,N>=0,0>=V_39+2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 89: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_mod_2+V_j_0>=1,V_left_0>=V_left_0_sink,N>=V_i_0+1,0>=V_39+N+1,N>=0,0>=V_39+2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 90: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_i_0>=N+1,V_left_0>=V_left_0_sink,0>=V_mod_2+V_j_0+1,N>=V_39+1,0>=N,0>=V_39+2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 91: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,N>=V_i_0+1,0>=V_mod_2+V_j_0+1,N>=V_39+1,0>=N,0>=V_39+2,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,B=2] 
* CE 92: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,V_i_0>=1,V_mod_2+V_j_0=0,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,N=0,B=2] 
* CE 93: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,L,M,N,O,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_mod_2+V_j_0=0,V_left_0_sink=M+1,V_i_0+2=L,V_i_0+2=V_58,O=2,N=0,B=2] 
* CE 94: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(L,V_mod_2,V_i_0,V_left_0,M,N,O,P,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,V_i_0>=1,V_left_0_sink=N+1,V_i_0+2=M,V_i_0+2=V_58,P=2,O=0,L=1,B=2,V_39=1] 
* CE 95: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(L,V_mod_2,V_i_0,V_left_0,M,N,O,P,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_left_0_sink=N+1,V_i_0+2=M,V_i_0+2=V_58,P=2,O=0,L=1,B=2,V_39=1] 
* CE 96: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(L,V_mod_2,V_i_0,V_left_0,M,N,O,P,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,V_i_0>=1,V_left_0_sink=N+1,V_i_0+2=M,V_i_0+2=V_58,P=2,O=0,L+1=0,B=2,V_39+1=0] 
* CE 97: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_zroll_bb14_in(L,V_mod_2,V_i_0,V_left_0,M,N,O,P,C,D,E,F,G,H,I,J,K)
     [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_left_0_sink=N+1,V_i_0+2=M,V_i_0+2=V_58,P=2,O=0,L+1=0,B=2,V_39+1=0] 

### Cost equations --> "Loop" of eval_zroll_bb14_in/17 
* CEs [84] --> Loop 46 
* CEs [85] --> Loop 47 
* CEs [86] --> Loop 48 
* CEs [87] --> Loop 49 
* CEs [88] --> Loop 50 
* CEs [89] --> Loop 51 
* CEs [90] --> Loop 52 
* CEs [91] --> Loop 53 
* CEs [92] --> Loop 54 
* CEs [93] --> Loop 55 
* CEs [94] --> Loop 56 
* CEs [95] --> Loop 57 
* CEs [96] --> Loop 58 
* CEs [97] --> Loop 59 
* CEs [77] --> Loop 60 
* CEs [78] --> Loop 61 
* CEs [79] --> Loop 62 
* CEs [80] --> Loop 63 
* CEs [81] --> Loop 64 
* CEs [82] --> Loop 65 
* CEs [83] --> Loop 66 

#### Loops of eval_zroll_bb14_in/17 
* Loop 46: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_mod_2+V_j_0>=1,V_i_0>=V_j_0'+1,V_39>=V_j_0'+1,V_left_0>=V_left_0_sink,V_j_0'>=0,V_39>=2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 47: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_mod_2+V_j_0>=1,V_39>=V_j_0'+1,V_left_0>=V_left_0_sink,V_j_0'>=V_i_0+1,V_j_0'>=0,V_39>=2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 48: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_39+V_j_0'>=1,V_i_0>=V_j_0'+1,V_left_0>=V_left_0_sink,0>=V_mod_2+V_j_0+1,V_39>=2,0>=V_j_0',V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 49: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_39+V_j_0'>=1,V_left_0>=V_left_0_sink,V_j_0'>=V_i_0+1,0>=V_mod_2+V_j_0+1,V_39>=2,0>=V_j_0',V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 50: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_mod_2+V_j_0>=1,V_i_0>=V_j_0'+1,V_left_0>=V_left_0_sink,0>=V_39+V_j_0'+1,V_j_0'>=0,0>=V_39+2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 51: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_mod_2+V_j_0>=1,V_left_0>=V_left_0_sink,V_j_0'>=V_i_0+1,0>=V_39+V_j_0'+1,V_j_0'>=0,0>=V_39+2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 52: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_i_0>=V_j_0'+1,V_left_0>=V_left_0_sink,0>=V_mod_2+V_j_0+1,V_j_0'>=V_39+1,0>=V_j_0',0>=V_39+2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 53: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,V_j_0'>=V_i_0+1,0>=V_mod_2+V_j_0+1,V_j_0'>=V_39+1,0>=V_j_0',0>=V_39+2,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,B=2] 
* Loop 54: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,V_i_0>=1,V_mod_2+V_j_0=0,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,B=2] 
* Loop 55: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_mod_2+V_j_0=0,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,B=2] 
* Loop 56: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39',V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,V_i_0>=1,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,V_39'=1,B=2,V_39=1] 
* Loop 57: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39',V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,V_39'=1,B=2,V_39=1] 
* Loop 58: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39',V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,V_i_0>=1,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,V_39'+1=0,B=2,V_39+1=0] 
* Loop 59: eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K)->  eval_zroll_bb14_in(V_39',V_mod_2,V_i_0,V_left_0,V_58',V_left_0_sink',V_j_0',B',C,D,E,F,G,H,I,J,K)
                  [V_left_0>=V_left_0_sink,0>=V_i_0+1,V_left_0_sink=V_left_0_sink'+1,V_i_0+2=V_58',V_i_0+2=V_58,B'=2,V_j_0'=0,V_39'+1=0,B=2,V_39+1=0] 
* Loop 60: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) [B+G>=1,D>=F,A>=C+1,C>=0,A>=2,F=J+1,C+2=I,C+2=E,H=2] 
* Loop 61: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) [A+C>=1,D>=F,0>=B+G+1,A>=2,0>=C,F=J+1,C+2=I,C+2=E,H=2] 
* Loop 62: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) [B+G>=1,D>=F,0>=A+C+1,C>=0,0>=A+2,F=J+1,C+2=I,C+2=E,H=2] 
* Loop 63: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,C,D,I,F,G,J,C) [D>=F,0>=B+G+1,C>=A+1,0>=C,0>=A+2,F=J+1,C+2=I,C+2=E,H=2] 
* Loop 64: eval_zroll_bb14_in(A,B,C,D,E,F,G,H,A,B,I,D,J,F,K,L,M) [D>=F,B+K=0,B+G=0,F=L+1,M=0,J=2,I=0,H=2,E=2,C=0] 
* Loop 65: eval_zroll_bb14_in(A,B,C,D,E,D,F,G,H,B,I,D,J,D,K,L,M) [D=L+1,M=0,K=0,J=2,I=0,H=1,G=2,F=0,E=2,C=0,A=1] 
* Loop 66: eval_zroll_bb14_in(A,B,C,D,E,D,F,G,H,B,I,D,J,D,K,L,M) [D=L+1,M=0,K=0,J=2,I=0,H+1=0,G=2,F=0,E=2,C=0,A+1=0] 

### Ranking functions of CR eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) 


### Resulting Chains:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) 
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]...
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],64]
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],63]
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],62]
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],61]
* [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],60]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]


### Merging Chains  eval_zroll_bb14_in/17 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[64,[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 4 
* [[63]] --> 5 
* [[62]] --> 6 
* [[61]] --> 7 
* [[60]] --> 8 
* [[63,[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 9 
* [[62,[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 10 
* [[61,[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 11 
* [[60,[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 12 
* [[[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]] --> 13 


### Specialization of cost equations eval_zroll_bb12_in/5 
* CE 48 is refined into CE [98] 
* CE 46 is refined into CE [99,100,101,102,103,104,105,106,107,108,109,110,111] 
* CE 47 is refined into CE [112,113,114,115,116,117,118,119,120,121,122,123,124] 


#### Refined cost equations eval_zroll_bb12_in/5 
* CE 98: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 0
     [B=3,V_left_0=0] 
* CE 99: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(C,V_mod_2,D,V_left_0,E,V_left_0,F,G,H,V_mod_2,I,V_left_0,J,V_left_0,K,L,M):1+ eval_zroll_bb12_in(N,V_mod_2,O,P,Q)
     [V_left_0>=1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N+1=0,M=0,K=0,J=2,I=0,H+1=0,G=2,F=0,E=2,D=0,C+1=0,B=3,V_i_0=0,V_39+1=0] 
* CE 100: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(C,V_mod_2,D,V_left_0,E,V_left_0,F,G,H,V_mod_2,I,V_left_0,J,V_left_0,K,L,M):2+ eval_zroll_bb12_in(N,V_mod_2,O,P,Q)
     [V_left_0>=1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N=1,M=0,K=0,J=2,I=0,H=1,G=2,F=0,E=2,D=0,C=1,B=3,V_i_0=0,V_39=1] 
* CE 101: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,C,D,V_left_0,E,V_left_0,F,G,V_39,H,I,V_left_0,J,V_left_0,K,L,M):3+ eval_zroll_bb12_in(V_39,N,O,P,Q)
     [V_left_0>=1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N=0,M=0,K=0,J=2,I=0,H=0,G=2,F=0,E=2,D=0,C=0,B=3,V_i_0=0,V_mod_2=0] 
* CE 102: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,H,I,J,K,L):4+ eval_zroll_bb12_in(V_39,V_mod_2,M,K,N)
     [V_left_0>=K+2,V_left_0>=1,V_mod_2+J=0,K+1=I,N=3,M=1,L=0,H=2,G=0,F=2,E=0,D=2,C=0,B=3,V_i_0=0] 
* CE 103: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):5+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [D>=V_39+3,1>=V_mod_2+D,V_left_0>=1,0>=V_39+2,2>=D,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 104: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):6+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_mod_2+D>=3,1>=V_39+D,V_left_0>=1,D>=2,0>=V_39+2,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 105: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):7+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_39+D>=3,1>=V_mod_2+D,V_left_0>=1,V_39>=2,2>=D,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 106: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):8+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_mod_2+D>=3,V_39+1>=D,V_left_0>=1,V_39>=2,D>=2,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 107: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):9+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [D+I>=2*V_39+5,V_left_0>=J+2,0>=V_mod_2+I+1,I>=V_39+1,D>=V_39+3,0>=V_39+I+1,V_left_0>=1,0>=V_39+2,2>=D,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 108: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):10+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [0>=2*V_39+D+I+1,V_mod_2+I>=1,V_left_0>=J+2,I>=V_39+1,0>=V_39+I+1,1>=V_39+D,V_left_0>=1,D>=2,0>=V_39+2,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 109: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):11+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [D+I+2*V_39>=5,V_39+I>=1,V_39+D>=3,V_left_0>=J+2,V_39>=I+1,0>=V_mod_2+I+1,V_left_0>=1,V_39>=2,2>=D,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 110: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):12+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [2*V_39>=D+I+1,V_mod_2+I>=1,V_39+I>=1,V_left_0>=J+2,V_39>=I+1,V_39+1>=D,V_left_0>=1,V_39>=2,D>=2,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 111: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,C,V_left_0,V_i_0,D,E,F,G,H,I,J,K,L,M):13
     [V_left_0>=1,N=G+1,V_i_0+2=C,O=3,D=2,B=3] 
* CE 112: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(C,V_mod_2,D,V_left_0,E,V_left_0,F,G,H,V_mod_2,I,V_left_0,J,V_left_0,K,L,M):1+ eval_zroll_bb12_in(N,V_mod_2,O,P,Q)
     [0>=V_left_0+1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N+1=0,M=0,K=0,J=2,I=0,H+1=0,G=2,F=0,E=2,D=0,C+1=0,B=3,V_i_0=0,V_39+1=0] 
* CE 113: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(C,V_mod_2,D,V_left_0,E,V_left_0,F,G,H,V_mod_2,I,V_left_0,J,V_left_0,K,L,M):2+ eval_zroll_bb12_in(N,V_mod_2,O,P,Q)
     [0>=V_left_0+1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N=1,M=0,K=0,J=2,I=0,H=1,G=2,F=0,E=2,D=0,C=1,B=3,V_i_0=0,V_39=1] 
* CE 114: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,C,D,V_left_0,E,V_left_0,F,G,V_39,H,I,V_left_0,J,V_left_0,K,L,M):3+ eval_zroll_bb12_in(V_39,N,O,P,Q)
     [0>=V_left_0+1,V_left_0=P+1,V_left_0=L+1,Q=3,O=1,N=0,M=0,K=0,J=2,I=0,H=0,G=2,F=0,E=2,D=0,C=0,B=3,V_i_0=0,V_mod_2=0] 
* CE 115: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,H,I,J,K,L):4+ eval_zroll_bb12_in(V_39,V_mod_2,M,K,N)
     [V_left_0>=K+2,0>=V_left_0+1,V_mod_2+J=0,K+1=I,N=3,M=1,L=0,H=2,G=0,F=2,E=0,D=2,C=0,B=3,V_i_0=0] 
* CE 116: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):5+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [D>=V_39+3,1>=V_mod_2+D,0>=V_left_0+1,0>=V_39+2,2>=D,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 117: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):6+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_mod_2+D>=3,1>=V_39+D,D>=2,0>=V_left_0+1,0>=V_39+2,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 118: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):7+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_39+D>=3,1>=V_mod_2+D,V_39>=2,0>=V_left_0+1,2>=D,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 119: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,V_left_0,H,I,J):8+ eval_zroll_bb12_in(V_39,V_mod_2,K,L,M)
     [V_mod_2+D>=3,V_39+1>=D,V_39>=2,D>=2,0>=V_left_0+1,V_left_0=L+1,D=K+1,D=J+2,V_left_0=I+1,D=H+2,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 120: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):9+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [D+I>=2*V_39+5,V_left_0>=J+2,0>=V_mod_2+I+1,I>=V_39+1,D>=V_39+3,0>=V_39+I+1,0>=V_left_0+1,0>=V_39+2,2>=D,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 121: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):10+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [0>=2*V_39+D+I+1,V_mod_2+I>=1,V_left_0>=J+2,I>=V_39+1,0>=V_39+I+1,1>=V_39+D,D>=2,0>=V_left_0+1,0>=V_39+2,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 122: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):11+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [D+I+2*V_39>=5,V_39+I>=1,V_39+D>=3,V_left_0>=J+2,V_39>=I+1,0>=V_mod_2+I+1,V_39>=2,0>=V_left_0+1,2>=D,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 123: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,C,V_left_0,D,V_left_0,E,F,V_39,V_mod_2,G,V_left_0,D,H,I,J,K):12+ eval_zroll_bb12_in(V_39,V_mod_2,L,J,M)
     [2*V_39>=D+I+1,V_mod_2+I>=1,V_39+I>=1,V_left_0>=J+2,V_39>=I+1,V_39+1>=D,V_39>=2,D>=2,0>=V_left_0+1,D=L+1,D=K+2,J+1=H,D=G+2,D=E+2,D=C+2,D=V_i_0+2,M=3,F=2,B=3] 
* CE 124: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) = 2+ eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,C,V_left_0,V_i_0,D,E,F,G,H,I,J,K,L,M):13
     [0>=V_left_0+1,N=G+1,V_i_0+2=C,O=3,D=2,B=3] 

### Cost equations --> "Loop" of eval_zroll_bb12_in/5 
* CEs [111] --> Loop 67 
* CEs [124] --> Loop 68 
* CEs [110] --> Loop 69 
* CEs [123] --> Loop 70 
* CEs [109] --> Loop 71 
* CEs [122] --> Loop 72 
* CEs [106] --> Loop 73 
* CEs [119] --> Loop 74 
* CEs [105] --> Loop 75 
* CEs [118] --> Loop 76 
* CEs [108] --> Loop 77 
* CEs [107] --> Loop 78 
* CEs [121] --> Loop 79 
* CEs [120] --> Loop 80 
* CEs [104] --> Loop 81 
* CEs [117] --> Loop 82 
* CEs [103] --> Loop 83 
* CEs [116] --> Loop 84 
* CEs [102] --> Loop 85 
* CEs [115] --> Loop 86 
* CEs [101] --> Loop 87 
* CEs [114] --> Loop 88 
* CEs [100] --> Loop 89 
* CEs [113] --> Loop 90 
* CEs [99] --> Loop 91 
* CEs [112] --> Loop 92 
* CEs [98] --> Loop 93 

#### Loops of eval_zroll_bb12_in/5 
* Loop 67: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) [V_left_0>=1,B=3] 
* Loop 68: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) [0>=V_left_0+1,B=3] 
* Loop 69: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+2*V_39>=V_i_0+4,V_39+V_mod_2>=2,V_left_0>=V_left_0'+2,V_39>=V_i_0+1,V_left_0>=1,V_i_0>=0,V_39>=2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 70: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+2*V_39>=V_i_0+4,V_39+V_mod_2>=2,V_left_0>=V_left_0'+2,V_39>=V_i_0+1,V_i_0>=0,V_39>=2,0>=V_left_0+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 71: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_i_0+2*V_39>=V_mod_2+4,V_39+V_i_0>=1,V_left_0>=V_left_0'+2,V_39>=V_mod_2+2,V_left_0>=1,V_39>=2,0>=V_i_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 72: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_i_0+2*V_39>=V_mod_2+4,V_39+V_i_0>=1,V_left_0>=V_left_0'+2,V_39>=V_mod_2+2,V_39>=2,0>=V_left_0+1,0>=V_i_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 73: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+V_i_0>=1,V_39>=V_i_0+1,V_left_0>=1,V_i_0>=0,V_39>=2,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 74: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+V_i_0>=1,V_39>=V_i_0+1,V_i_0>=0,V_39>=2,0>=V_left_0+1,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 75: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_39+V_i_0>=1,0>=V_mod_2+V_i_0+1,V_left_0>=1,V_39>=2,0>=V_i_0,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 76: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_39+V_i_0>=1,0>=V_mod_2+V_i_0+1,V_39>=2,0>=V_left_0+1,0>=V_i_0,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 77: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2>=2*V_39+V_i_0+4,V_left_0>=V_left_0'+2,V_mod_2>=V_39+2,0>=V_39+V_i_0+1,V_left_0>=1,V_i_0>=0,0>=V_39+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 78: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_i_0>=2*V_39+V_mod_2+4,V_left_0>=V_left_0'+2,V_i_0>=V_39+1,0>=V_39+V_mod_2+2,V_left_0>=1,0>=V_i_0,0>=V_39+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 79: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2>=2*V_39+V_i_0+4,V_left_0>=V_left_0'+2,V_mod_2>=V_39+2,0>=V_39+V_i_0+1,V_i_0>=0,0>=V_left_0+1,0>=V_39+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 80: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_i_0>=2*V_39+V_mod_2+4,V_left_0>=V_left_0'+2,V_i_0>=V_39+1,0>=V_39+V_mod_2+2,0>=V_left_0+1,0>=V_i_0,0>=V_39+2,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 81: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+V_i_0>=1,0>=V_39+V_i_0+1,V_left_0>=1,V_i_0>=0,0>=V_39+2,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 82: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_mod_2+V_i_0>=1,0>=V_39+V_i_0+1,V_i_0>=0,0>=V_left_0+1,0>=V_39+2,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 83: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [0>=V_mod_2+V_i_0+1,V_i_0>=V_39+1,V_left_0>=1,0>=V_i_0,0>=V_39+2,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 84: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [0>=V_mod_2+V_i_0+1,V_i_0>=V_39+1,0>=V_left_0+1,0>=V_i_0,0>=V_39+2,V_left_0=V_left_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 85: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_left_0>=V_left_0'+2,V_left_0>=1,B'=3,V_i_0'=1,B=3,V_i_0=0] 
* Loop 86: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2,V_i_0',V_left_0',B')
                  [V_left_0>=V_left_0'+2,0>=V_left_0+1,B'=3,V_i_0'=1,B=3,V_i_0=0] 
* Loop 87: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2',V_i_0',V_left_0',B')
                  [V_left_0>=1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_mod_2'=0,B=3,V_i_0=0,V_mod_2=0] 
* Loop 88: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39,V_mod_2',V_i_0',V_left_0',B')
                  [0>=V_left_0+1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_mod_2'=0,B=3,V_i_0=0,V_mod_2=0] 
* Loop 89: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39',V_mod_2,V_i_0',V_left_0',B')
                  [V_left_0>=1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_39'=1,B=3,V_i_0=0,V_39=1] 
* Loop 90: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39',V_mod_2,V_i_0',V_left_0',B')
                  [0>=V_left_0+1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_39'=1,B=3,V_i_0=0,V_39=1] 
* Loop 91: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39',V_mod_2,V_i_0',V_left_0',B')
                  [V_left_0>=1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_39'+1=0,B=3,V_i_0=0,V_39+1=0] 
* Loop 92: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B)->  eval_zroll_bb12_in(V_39',V_mod_2,V_i_0',V_left_0',B')
                  [0>=V_left_0+1,V_left_0=V_left_0'+1,B'=3,V_i_0'=1,V_39'+1=0,B=3,V_i_0=0,V_39+1=0] 
* Loop 93: eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) [B=3,V_left_0=0] 

### Ranking functions of CR eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) 
* RF of phase [69,73]: [V_39-V_i_0,V_left_0]
* RF of phase [70,74]: [V_39-V_i_0]
* RF of phase [71,75]: [-V_i_0+1,V_left_0]
* RF of phase [72,76]: [-V_i_0+1]
* RF of phase [79,82]: [-V_39-V_i_0]
* RF of phase [80,84]: [-V_i_0+1]

#### Partial ranking functions of CR eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) 
* Partial RF of phase [69,73]:
  - RF of loop [69:1]:
    2*V_39+V_mod_2-V_i_0-3
    V_left_0/2
  - RF of loop [69:1,73:1]:
    V_39-V_i_0
  - RF of loop [73:1]:
    V_left_0
* Partial RF of phase [70,74]:
  - RF of loop [70:1]:
    2*V_39+V_mod_2-V_i_0-3
  - RF of loop [70:1,74:1]:
    V_39-V_i_0
* Partial RF of phase [71,75]:
  - RF of loop [71:1]:
    V_left_0/2
  - RF of loop [71:1,75:1]:
    -V_i_0+1
  - RF of loop [75:1]:
    V_left_0
* Partial RF of phase [72,76]:
  - RF of loop [72:1,76:1]:
    -V_i_0+1
* Partial RF of phase [79,82]:
  - RF of loop [79:1]:
    -2*V_39+V_mod_2-V_i_0-3
  - RF of loop [79:1,82:1]:
    -V_39-V_i_0
  - RF of loop [82:1]:
    -2*V_i_0-V_left_0 depends on loops [79:1] 
* Partial RF of phase [80,84]:
  - RF of loop [80:1,84:1]:
    -V_i_0+1


### Resulting Chains:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) 
* [[80,84],[79,82],68]...
* [[80,84],68]...
* [[79,82],68]...
* [[71,75],[70,74],68]...
* [[71,75],[69,73],[70,74],68]...
* [[71,75],[69,73],93]
* [[71,75],[69,73],68]...
* [[71,75],[69,73],67]...
* [[71,75],93]
* [[71,75],68]...
* [[71,75],67]...
* [[69,73],[70,74],68]...
* [[69,73],93]
* [[69,73],68]...
* [[69,73],67]...
* [93]
* [92,68]...
* [89,93]
* [88,[79,82],68]...
* [88,68]...
* [87,[69,73],[70,74],68]...
* [87,[69,73],93]
* [87,[69,73],68]...
* [87,[69,73],67]...
* [87,93]
* [87,67]...
* [86,[79,82],68]...
* [86,68]...
* [85,[70,74],68]...
* [85,[69,73],[70,74],68]...
* [85,[69,73],93]
* [85,[69,73],68]...
* [85,[69,73],67]...
* [85,93]
* [85,68]...
* [85,67]...
* [68]...
* [67]...


### Merging Chains  eval_zroll_bb12_in/5 into  External patterns of execution 
* [[93,89]] --> 1 
* [[93,87]] --> 2 
* [[93,[69,73],87],[93,[71,75]],[93,[69,73],[71,75]]] --> 3 
* [[93,85],[93,[69,73],85]] --> 4 
* [[93]] --> 5 
* [[93,[69,73]]] --> 6 
* [[68,92]] --> 7 
* [[68,[79,82],88]] --> 8 
* [[68,88]] --> 9 
* [[68,[70,74],[69,73],87]] --> 10 
* [[68,[69,73],87]] --> 11 
* [[67,87]] --> 12 
* [[67,[69,73],87]] --> 13 
* [[68,[80,84]]] --> 14 
* [[68,[79,82],86]] --> 15 
* [[68,86]] --> 16 
* [[68,[71,75]]] --> 17 
* [[68,[70,74],85]] --> 18 
* [[68,[69,73],[71,75]],[68,[70,74],[69,73],[71,75]]] --> 19 
* [[68,[70,74],[71,75]]] --> 20 
* [[68,85]] --> 21 
* [[67,[71,75]]] --> 22 
* [[67,[69,73],[71,75]]] --> 23 
* [[67,85]] --> 24 
* [[68,[69,73],85],[68,[70,74],[69,73],85]] --> 25 
* [[67,[69,73],85]] --> 26 
* [[68,[79,82],[80,84]]] --> 27 
* [[68,[79,82]]] --> 28 
* [[68]] --> 29 
* [[68,[69,73]]] --> 30 
* [[68,[70,74],[69,73]]] --> 31 
* [[67]] --> 32 
* [[67,[69,73]]] --> 33 


### Specialization of cost equations eval_zroll_bb11_in/3 
* CE 36 is refined into CE [125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157] 


#### Refined cost equations eval_zroll_bb11_in/3 
* CE 125: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(C,V_mod_2,D,E,F):1
     [F=3,E=1,D=0,C=1,V_39=1] 
* CE 126: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(C,D,E,F,G):2
     [G=3,F=1,E=0,D=0,C=1,V_mod_2=0,V_39=1] 
* CE 127: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):3
     [V_39>=V_mod_2+2,V_39>=2,D=3,C=0] 
* CE 128: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):4
     [V_39>=2,D=3,C=0] 
* CE 129: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(C,V_mod_2,D,E,F):5
     [F=3,E=0,D=0,C=0,V_39=0] 
* CE 130: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):6
     [V_39+V_mod_2>=2,V_39>=2,D=3,C=0] 
* CE 131: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(C,V_mod_2,D,E,F):7
     [F=3,E+1=0,D=0,C+1=0,V_39+1=0] 
* CE 132: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):8
     [0>=V_39+2,E=3,D=0,C=0,V_mod_2=0] 
* CE 133: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):9
     [0>=V_39+1,E=3,D=0,C=0,V_mod_2=0] 
* CE 134: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):10
     [V_39>=3,E=3,D=0,C=0,V_mod_2=0] 
* CE 135: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):11
     [2*V_39>=5,E=3,D=0,C=0,V_mod_2=0] 
* CE 136: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):12
     [V_39>=2,E=3,D=0,C=0,V_mod_2=0] 
* CE 137: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,C,D,V_39,E):13
     [V_39>=3,E=3,D=0,C=0,V_mod_2=0] 
* CE 138: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):14
     [0>=V_39+V_mod_2+2,0>=V_39+2,D=3,C=0] 
* CE 139: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):15
     [V_mod_2>=V_39+2,0>=V_39+2,D=3,C=0] 
* CE 140: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):16
     [0>=V_39+1,D=3,C=0] 
* CE 141: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):17
     [V_39>=V_mod_2+2,V_39>=2,D=3,C=0] 
* CE 142: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):18
     [V_39+V_mod_2>=2,V_39>=2,D=3,C=0] 
* CE 143: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):19
     [V_39+V_mod_2>=2,V_39>=V_mod_2+2,V_39>=3,D=3,C=0] 
* CE 144: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):20
     [V_39+V_mod_2>=2,V_39>=V_mod_2+2,D=3,C=0] 
* CE 145: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):21
     [V_39>=1,D=3,C=0] 
* CE 146: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):22
     [2*V_39>=V_mod_2+5,V_39>=V_mod_2+2,V_39>=2,D=3,C=0] 
* CE 147: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):23
     [V_mod_2+2*V_39>=6,V_39+V_mod_2>=2,6*V_39>=V_mod_2+22,V_39>=V_mod_2+2,D=3,C=0] 
* CE 148: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):24
     [V_39>=3,D=3,C=0] 
* CE 149: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):25
     [V_39+V_mod_2>=2,V_39>=3,D=3,C=0] 
* CE 150: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):26
     [V_mod_2+2*V_39>=7,V_39+V_mod_2>=2,V_39>=4,D=3,C=0] 
* CE 151: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):27
     [V_mod_2>=V_39+2,0>=V_39+V_mod_2+2,D=3,C=0] 
* CE 152: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):28
     [V_mod_2>=V_39+2,0>=V_39+2,D=3,C=0] 
* CE 153: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):29
     [0>=V_39+1,D=3,C=0] 
* CE 154: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):30
     [V_39+V_mod_2>=2,V_39>=2,D=3,C=0] 
* CE 155: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):31
     [V_39+V_mod_2>=2,V_39>=2,D=3,C=0] 
* CE 156: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):32
     [V_39>=1,D=3,C=0] 
* CE 157: eval_zroll_bb11_in(V_39,V_mod_2,B) = 1+ eval_zroll_bb12_in(V_39,V_mod_2,C,V_39,D):33
     [V_mod_2+2*V_39>=5,V_39+V_mod_2>=2,V_39>=2,D=3,C=0] 

### Cost equations --> "Loop" of eval_zroll_bb11_in/3 
* CEs [134,135,136,137,141,142,143,144,145,146,147,148,149,150,154,155,156,157] --> Loop 94 
* CEs [132,133] --> Loop 95 
* CEs [131,138,139,140,151,152,153] --> Loop 96 
* CEs [127,128,130] --> Loop 97 
* CEs [125,126] --> Loop 98 
* CEs [129] --> Loop 99 

#### Loops of eval_zroll_bb11_in/3 
* Loop 94: eval_zroll_bb11_in(V_39,V_mod_2,B) [V_39>=1] 
* Loop 95: eval_zroll_bb11_in(V_39,V_mod_2,B) [0>=V_39+1,V_mod_2=0] 
* Loop 96: eval_zroll_bb11_in(V_39,V_mod_2,B) [0>=V_39+1] 
* Loop 97: eval_zroll_bb11_in(V_39,V_mod_2,B) [V_39>=2] 
* Loop 98: eval_zroll_bb11_in(V_39,V_mod_2,B) [V_39=1] 
* Loop 99: eval_zroll_bb11_in(V_39,V_mod_2,B) [V_39=0] 

### Ranking functions of CR eval_zroll_bb11_in(V_39,V_mod_2,B) 

#### Partial ranking functions of CR eval_zroll_bb11_in(V_39,V_mod_2,B) 


### Resulting Chains:eval_zroll_bb11_in(V_39,V_mod_2,B) 
* [99]
* [98]
* [97]
* [96]...
* [95]...
* [94]...


### Merging Chains  eval_zroll_bb11_in/3 into  External patterns of execution 
* [[99]] --> 1 
* [[98]] --> 2 
* [[97]] --> 3 
* [[95]] --> 4 
* [[96]] --> 5 
* [[94]] --> 6 


### Specialization of cost equations eval_zroll_16/1 
* CE 8 is refined into CE [158] 
* CE 9 is refined into CE [159,160,161,162,163,164] 
* CE 10 is refined into CE [165,166] 
* CE 11 is refined into CE [167,168] 
* CE 12 is refined into CE [169,170] 
* CE 13 is refined into CE [171,172] 
* CE 14 is refined into CE [173,174,175,176,177] 
* CE 15 is refined into CE [178,179] 
* CE 16 is refined into CE [180,181] 
* CE 17 is refined into CE [182] 
* CE 18 is refined into CE [183] 


#### Refined cost equations eval_zroll_16/1 
* CE 158: eval_zroll_16(B) = 0
     [] 
* CE 159: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):1
     [C=0] 
* CE 160: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):2
     [C=1] 
* CE 161: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):3
     [C>=2] 
* CE 162: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):4
     [0>=C+1,D=0] 
* CE 163: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):5
     [0>=C+1] 
* CE 164: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):6
     [C>=1] 
* CE 165: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):3
     [C>=D+1,D>=0,C>=2] 
* CE 166: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):6
     [C>=D+1,D>=0,C>=2] 
* CE 167: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):3
     [C+D>=1,C>=2,0>=D] 
* CE 168: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):6
     [C+D>=1,C>=2,0>=D] 
* CE 169: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):4
     [0>=C+2,D=0] 
* CE 170: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):5
     [0>=C+D+1,D>=0,0>=C+2] 
* CE 171: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):4
     [0>=C+2,D=0] 
* CE 172: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):5
     [D>=C+1,0>=D,0>=C+2] 
* CE 173: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):1
     [D=0,C=0] 
* CE 174: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):2
     [D=1,C=1] 
* CE 175: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,C,B):3
     [C>=2] 
* CE 176: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,C,B):5
     [0>=C+1] 
* CE 177: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,C,B):6
     [C>=1] 
* CE 178: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):3
     [2*C>=D+1,D>=C,C>=2] 
* CE 179: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):6
     [2*C>=D+1,D>=C,C>=2] 
* CE 180: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):3
     [C>=D,D>=1,C>=2] 
* CE 181: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):6
     [C>=D,D>=1,C>=2] 
* CE 182: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):5
     [D>=C,0>=D+1,0>=C+2] 
* CE 183: eval_zroll_16(B) = 0+ eval_zroll_bb11_in(C,D,B):5
     [C>=D,D>=2*C+1,0>=C+2] 

### Cost equations --> "Loop" of eval_zroll_16/1 
* CEs [162,163,164,166,168,169,170,171,172,176,177,179,181,182,183] --> Loop 100 
* CEs [158,159,160,161,165,167,173,174,175,178,180] --> Loop 101 

#### Loops of eval_zroll_16/1 
* Loop 100: eval_zroll_16(B) [] 
* Loop 101: eval_zroll_16(B) [] 

### Ranking functions of CR eval_zroll_16(B) 

#### Partial ranking functions of CR eval_zroll_16(B) 


### Resulting Chains:eval_zroll_16(B) 
* [101]
* [100]...


### Merging Chains  eval_zroll_16/1 into  External patterns of execution 
* [[101]] --> 1 
* [[100]] --> 2 


### Specialization of cost equations eval_zroll_bb22_in/2 
* CE 39 is refined into CE [184] 
* CE 37 is refined into CE [185] 
* CE 38 is refined into CE [186] 


#### Refined cost equations eval_zroll_bb22_in/2 
* CE 184: eval_zroll_bb22_in(V_n_1,B) = 0
     [B=6,V_n_1=1] 
* CE 185: eval_zroll_bb22_in(V_n_1,B) = 1+ eval_zroll_bb22_in(C,D)
     [V_n_1>=2,V_n_1=C+1,D=6,B=6] 
* CE 186: eval_zroll_bb22_in(V_n_1,B) = 1+ eval_zroll_bb22_in(C,D)
     [0>=V_n_1,V_n_1=C+1,D=6,B=6] 

### Cost equations --> "Loop" of eval_zroll_bb22_in/2 
* CEs [185] --> Loop 102 
* CEs [186] --> Loop 103 
* CEs [184] --> Loop 104 

#### Loops of eval_zroll_bb22_in/2 
* Loop 102: eval_zroll_bb22_in(V_n_1,B)->  eval_zroll_bb22_in(V_n_1',B')
                  [V_n_1>=2,V_n_1=V_n_1'+1,B'=6,B=6] 
* Loop 103: eval_zroll_bb22_in(V_n_1,B)->  eval_zroll_bb22_in(V_n_1',B')
                  [0>=V_n_1,V_n_1=V_n_1'+1,B'=6,B=6] 
* Loop 104: eval_zroll_bb22_in(V_n_1,B) [B=6,V_n_1=1] 

### Ranking functions of CR eval_zroll_bb22_in(V_n_1,B) 
* RF of phase [102]: [V_n_1-1]

#### Partial ranking functions of CR eval_zroll_bb22_in(V_n_1,B) 
* Partial RF of phase [102]:
  - RF of loop [102:1]:
    V_n_1-1


### Resulting Chains:eval_zroll_bb22_in(V_n_1,B) 
* [[103]]...
* [[102],104]
* [104]


### Merging Chains  eval_zroll_bb22_in/2 into  External patterns of execution 
* [[104]] --> 1 
* [[104,[102]]] --> 2 
* [[[103]]] --> 3 


### Specialization of cost equations eval_zroll_63/2 
* CE 19 is refined into CE [187,188,189] 


#### Refined cost equations eval_zroll_63/2 
* CE 187: eval_zroll_63(V_77,B) = 1+ eval_zroll_bb22_in(C,D):1
     [D=6,C=1,V_77=1] 
* CE 188: eval_zroll_63(V_77,B) = 1+ eval_zroll_bb22_in(V_77,C):2
     [V_77>=2,C=6] 
* CE 189: eval_zroll_63(V_77,B) = 1+ eval_zroll_bb22_in(V_77,C):3
     [0>=V_77,C=6] 

### Cost equations --> "Loop" of eval_zroll_63/2 
* CEs [189] --> Loop 105 
* CEs [188] --> Loop 106 
* CEs [187] --> Loop 107 

#### Loops of eval_zroll_63/2 
* Loop 105: eval_zroll_63(V_77,B) [0>=V_77] 
* Loop 106: eval_zroll_63(V_77,B) [V_77>=2] 
* Loop 107: eval_zroll_63(V_77,B) [V_77=1] 

### Ranking functions of CR eval_zroll_63(V_77,B) 

#### Partial ranking functions of CR eval_zroll_63(V_77,B) 


### Resulting Chains:eval_zroll_63(V_77,B) 
* [107]
* [106]
* [105]...


### Merging Chains  eval_zroll_63/2 into  External patterns of execution 
* [[107]] --> 1 
* [[106]] --> 2 
* [[105]] --> 3 


### Specialization of cost equations eval_zroll_bb26_in/2 
* CE 45 is refined into CE [190] 
* CE 43 is refined into CE [191] 
* CE 44 is refined into CE [192] 


#### Refined cost equations eval_zroll_bb26_in/2 
* CE 190: eval_zroll_bb26_in(V_n_0,B) = 0
     [B=5,V_n_0=1] 
* CE 191: eval_zroll_bb26_in(V_n_0,B) = 1+ eval_zroll_bb26_in(C,D)
     [V_n_0>=2,V_n_0=C+1,D=5,B=5] 
* CE 192: eval_zroll_bb26_in(V_n_0,B) = 1+ eval_zroll_bb26_in(C,D)
     [0>=V_n_0,V_n_0=C+1,D=5,B=5] 

### Cost equations --> "Loop" of eval_zroll_bb26_in/2 
* CEs [191] --> Loop 108 
* CEs [192] --> Loop 109 
* CEs [190] --> Loop 110 

#### Loops of eval_zroll_bb26_in/2 
* Loop 108: eval_zroll_bb26_in(V_n_0,B)->  eval_zroll_bb26_in(V_n_0',B')
                  [V_n_0>=2,V_n_0=V_n_0'+1,B'=5,B=5] 
* Loop 109: eval_zroll_bb26_in(V_n_0,B)->  eval_zroll_bb26_in(V_n_0',B')
                  [0>=V_n_0,V_n_0=V_n_0'+1,B'=5,B=5] 
* Loop 110: eval_zroll_bb26_in(V_n_0,B) [B=5,V_n_0=1] 

### Ranking functions of CR eval_zroll_bb26_in(V_n_0,B) 
* RF of phase [108]: [V_n_0-1]

#### Partial ranking functions of CR eval_zroll_bb26_in(V_n_0,B) 
* Partial RF of phase [108]:
  - RF of loop [108:1]:
    V_n_0-1


### Resulting Chains:eval_zroll_bb26_in(V_n_0,B) 
* [[109]]...
* [[108],110]
* [110]


### Merging Chains  eval_zroll_bb26_in/2 into  External patterns of execution 
* [[110]] --> 1 
* [[110,[108]]] --> 2 
* [[[109]]] --> 3 


### Specialization of cost equations eval_zroll_74/2 
* CE 35 is refined into CE [193,194,195] 


#### Refined cost equations eval_zroll_74/2 
* CE 193: eval_zroll_74(V_77,B) = 1+ eval_zroll_bb26_in(C,D):1
     [D=5,C=1,V_77=1] 
* CE 194: eval_zroll_74(V_77,B) = 1+ eval_zroll_bb26_in(V_77,C):2
     [V_77>=2,C=5] 
* CE 195: eval_zroll_74(V_77,B) = 1+ eval_zroll_bb26_in(V_77,C):3
     [0>=V_77,C=5] 

### Cost equations --> "Loop" of eval_zroll_74/2 
* CEs [195] --> Loop 111 
* CEs [194] --> Loop 112 
* CEs [193] --> Loop 113 

#### Loops of eval_zroll_74/2 
* Loop 111: eval_zroll_74(V_77,B) [0>=V_77] 
* Loop 112: eval_zroll_74(V_77,B) [V_77>=2] 
* Loop 113: eval_zroll_74(V_77,B) [V_77=1] 

### Ranking functions of CR eval_zroll_74(V_77,B) 

#### Partial ranking functions of CR eval_zroll_74(V_77,B) 


### Resulting Chains:eval_zroll_74(V_77,B) 
* [113]
* [112]
* [111]...


### Merging Chains  eval_zroll_74/2 into  External patterns of execution 
* [[113]] --> 1 
* [[112]] --> 2 
* [[111]] --> 3 


### Specialization of cost equations eval_zroll_bb44_in/2 
* CE 76 is refined into CE [196] 
* CE 74 is refined into CE [197] 
* CE 75 is refined into CE [198] 


#### Refined cost equations eval_zroll_bb44_in/2 
* CE 196: eval_zroll_bb44_in(V_n_3,B) = 0
     [B=3,V_n_3=0] 
* CE 197: eval_zroll_bb44_in(V_n_3,B) = 1+ eval_zroll_bb44_in(C,D)
     [V_n_3>=1,V_n_3=C+1,D=3,B=3] 
* CE 198: eval_zroll_bb44_in(V_n_3,B) = 1+ eval_zroll_bb44_in(C,D)
     [0>=V_n_3+1,V_n_3=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_zroll_bb44_in/2 
* CEs [197] --> Loop 114 
* CEs [198] --> Loop 115 
* CEs [196] --> Loop 116 

#### Loops of eval_zroll_bb44_in/2 
* Loop 114: eval_zroll_bb44_in(V_n_3,B)->  eval_zroll_bb44_in(V_n_3',B')
                  [V_n_3>=1,V_n_3=V_n_3'+1,B'=3,B=3] 
* Loop 115: eval_zroll_bb44_in(V_n_3,B)->  eval_zroll_bb44_in(V_n_3',B')
                  [0>=V_n_3+1,V_n_3=V_n_3'+1,B'=3,B=3] 
* Loop 116: eval_zroll_bb44_in(V_n_3,B) [B=3,V_n_3=0] 

### Ranking functions of CR eval_zroll_bb44_in(V_n_3,B) 
* RF of phase [114]: [V_n_3]

#### Partial ranking functions of CR eval_zroll_bb44_in(V_n_3,B) 
* Partial RF of phase [114]:
  - RF of loop [114:1]:
    V_n_3


### Resulting Chains:eval_zroll_bb44_in(V_n_3,B) 
* [[115]]...
* [[114],116]
* [116]


### Merging Chains  eval_zroll_bb44_in/2 into  External patterns of execution 
* [[116]] --> 1 
* [[116,[114]]] --> 2 
* [[[115]]] --> 3 


### Specialization of cost equations eval_zroll_127/2 
* CE 52 is refined into CE [199,200,201] 


#### Refined cost equations eval_zroll_127/2 
* CE 199: eval_zroll_127(V_77,B) = 1+ eval_zroll_bb44_in(C,D):1
     [D=3,C=0,V_77=0] 
* CE 200: eval_zroll_127(V_77,B) = 1+ eval_zroll_bb44_in(V_77,C):2
     [V_77>=1,C=3] 
* CE 201: eval_zroll_127(V_77,B) = 1+ eval_zroll_bb44_in(V_77,C):3
     [0>=V_77+1,C=3] 

### Cost equations --> "Loop" of eval_zroll_127/2 
* CEs [201] --> Loop 117 
* CEs [200] --> Loop 118 
* CEs [199] --> Loop 119 

#### Loops of eval_zroll_127/2 
* Loop 117: eval_zroll_127(V_77,B) [0>=V_77+1] 
* Loop 118: eval_zroll_127(V_77,B) [V_77>=1] 
* Loop 119: eval_zroll_127(V_77,B) [V_77=0] 

### Ranking functions of CR eval_zroll_127(V_77,B) 

#### Partial ranking functions of CR eval_zroll_127(V_77,B) 


### Resulting Chains:eval_zroll_127(V_77,B) 
* [119]
* [118]
* [117]...


### Merging Chains  eval_zroll_127/2 into  External patterns of execution 
* [[119]] --> 1 
* [[118]] --> 2 
* [[117]] --> 3 


### Specialization of cost equations eval_zroll_bb38_in/4 
* CE 51 is refined into CE [202] 
* CE 49 is refined into CE [203] 
* CE 50 is refined into CE [204] 


#### Refined cost equations eval_zroll_bb38_in/4 
* CE 202: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) = 0
     [C=16*V_mod_6,B=4,V_n_2=0] 
* CE 203: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) = 1+ eval_zroll_bb38_in(V_mod_6,D,E,C)
     [V_n_2>=1,V_n_2=D+1,E=4,B=4] 
* CE 204: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) = 1+ eval_zroll_bb38_in(V_mod_6,D,E,C)
     [0>=V_n_2+1,V_n_2=D+1,E=4,B=4] 

### Cost equations --> "Loop" of eval_zroll_bb38_in/4 
* CEs [203] --> Loop 120 
* CEs [204] --> Loop 121 
* CEs [202] --> Loop 122 

#### Loops of eval_zroll_bb38_in/4 
* Loop 120: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C)->  eval_zroll_bb38_in(V_mod_6,V_n_2',B',C)
                  [V_n_2>=1,V_n_2=V_n_2'+1,B'=4,B=4] 
* Loop 121: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C)->  eval_zroll_bb38_in(V_mod_6,V_n_2',B',C)
                  [0>=V_n_2+1,V_n_2=V_n_2'+1,B'=4,B=4] 
* Loop 122: eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) [16*V_mod_6=C,B=4,V_n_2=0] 

### Ranking functions of CR eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) 
* RF of phase [120]: [V_n_2]

#### Partial ranking functions of CR eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) 
* Partial RF of phase [120]:
  - RF of loop [120:1]:
    V_n_2


### Resulting Chains:eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) 
* [[121]]...
* [[120],122]
* [122]


### Merging Chains  eval_zroll_bb38_in/4 into  External patterns of execution 
* [[122]] --> 1 
* [[122,[120]]] --> 2 
* [[[121]]] --> 3 


### Specialization of cost equations eval_zroll_bb34_in/3 
* CE 40 is refined into CE [205] 
* CE 41 is refined into CE [206,207,208] 
* CE 42 is refined into CE [209,210,211] 


#### Refined cost equations eval_zroll_bb34_in/3 
* CE 205: eval_zroll_bb34_in(V_77,V_mod_6,B) = 0
     [] 
* CE 206: eval_zroll_bb34_in(V_77,V_mod_6,B) = 1+ eval_zroll_bb38_in(C,D,E,F):1
     [F=16*C,F=16*V_mod_6,E=4,D=0,V_77=0] 
* CE 207: eval_zroll_bb34_in(V_77,V_mod_6,B) = 1+ eval_zroll_bb38_in(C,V_77,D,E):2
     [V_77>=1,E=16*C,E=16*V_mod_6,D=4] 
* CE 208: eval_zroll_bb34_in(V_77,V_mod_6,B) = 1+ eval_zroll_bb38_in(V_mod_6,V_77,C,D):3
     [0>=V_77+1,C=4] 
* CE 209: eval_zroll_bb34_in(V_77,V_mod_6,B) = 0+ eval_zroll_127(C,B):1
     [C=0,V_77=0] 
* CE 210: eval_zroll_bb34_in(V_77,V_mod_6,B) = 0+ eval_zroll_127(V_77,B):2
     [V_77>=1] 
* CE 211: eval_zroll_bb34_in(V_77,V_mod_6,B) = 0+ eval_zroll_127(V_77,B):3
     [0>=V_77+1] 

### Cost equations --> "Loop" of eval_zroll_bb34_in/3 
* CEs [208,211] --> Loop 123 
* CEs [205,206,207,209,210] --> Loop 124 

#### Loops of eval_zroll_bb34_in/3 
* Loop 123: eval_zroll_bb34_in(V_77,V_mod_6,B) [0>=V_77+1] 
* Loop 124: eval_zroll_bb34_in(V_77,V_mod_6,B) [] 

### Ranking functions of CR eval_zroll_bb34_in(V_77,V_mod_6,B) 

#### Partial ranking functions of CR eval_zroll_bb34_in(V_77,V_mod_6,B) 


### Resulting Chains:eval_zroll_bb34_in(V_77,V_mod_6,B) 
* [124]
* [123]...


### Merging Chains  eval_zroll_bb34_in/3 into  External patterns of execution 
* [[124]] --> 1 
* [[123]] --> 2 


### Specialization of cost equations eval_zroll_NewDefault_in/3 
* CE 20 is refined into CE [212,213] 
* CE 21 is refined into CE [214] 
* CE 22 is refined into CE [215,216] 
* CE 23 is refined into CE [217] 
* CE 24 is refined into CE [218] 
* CE 25 is refined into CE [219,220] 
* CE 26 is refined into CE [221,222] 
* CE 27 is refined into CE [223,224] 
* CE 28 is refined into CE [225] 
* CE 29 is refined into CE [226,227] 
* CE 30 is refined into CE [228] 
* CE 31 is refined into CE [229] 
* CE 32 is refined into CE [230,231] 
* CE 33 is refined into CE [232,233] 
* CE 34 is refined into CE [234,235] 


#### Refined cost equations eval_zroll_NewDefault_in/3 
* CE 212: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,V_77,B):1
     [V_77+V_86=0] 
* CE 213: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,V_77,B):2
     [0>=V_77+1,V_77+V_86=0] 
* CE 214: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):1
     [D=1,C=1,V_77=1] 
* CE 215: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):1
     [D+1=0,C+1=0,V_77+1=0] 
* CE 216: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):2
     [D+1=0,C+1=0,V_77+1=0] 
* CE 217: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77+V_86>=1,2*V_77>=C+1,C>=V_77,V_77>=2] 
* CE 218: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77>=C,0>=V_77+V_86+1,C>=1,V_77>=2] 
* CE 219: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77+V_86>=1,C>=V_77,0>=C+1,0>=V_77+2] 
* CE 220: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):2
     [V_77+V_86>=1,C>=V_77,0>=C+1,0>=V_77+2] 
* CE 221: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77>=C,0>=V_77+V_86+1,C>=2*V_77+1,0>=V_77+2] 
* CE 222: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):2
     [V_77>=C,0>=V_77+V_86+1,C>=2*V_77+1,0>=V_77+2] 
* CE 223: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77+V_86=C] 
* CE 224: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):2
     [0>=V_77+1,V_77+V_86=C] 
* CE 225: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):1
     [D=0,C=1,V_77=1] 
* CE 226: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):1
     [D=0,C+1=0,V_77+1=0] 
* CE 227: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(C,D,B):2
     [D=0,C+1=0,V_77+1=0] 
* CE 228: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77+V_86>=1,V_77>=C+1,C>=0,V_77>=2] 
* CE 229: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [V_77+C>=1,V_77>=2,0>=C,0>=V_86+1] 
* CE 230: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [0>=V_77+C+1,C>=0,V_86>=1,0>=V_77+2] 
* CE 231: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):2
     [0>=V_77+C+1,C>=0,V_86>=1,0>=V_77+2] 
* CE 232: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):1
     [C>=V_77+1,0>=V_77+V_86+1,0>=C,0>=V_77+2] 
* CE 233: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,C,B):2
     [C>=V_77+1,0>=V_77+V_86+1,0>=C,0>=V_77+2] 
* CE 234: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,V_86,B):1
     [] 
* CE 235: eval_zroll_NewDefault_in(V_77,V_86,B) = 0+ eval_zroll_bb34_in(V_77,V_86,B):2
     [0>=V_77+1] 

### Cost equations --> "Loop" of eval_zroll_NewDefault_in/3 
* CEs [213] --> Loop 125 
* CEs [216,220,222,224,227,231,233,235] --> Loop 126 
* CEs [212,214,215,217,218,219,221,223,225,226,228,229,230,232,234] --> Loop 127 

#### Loops of eval_zroll_NewDefault_in/3 
* Loop 125: eval_zroll_NewDefault_in(V_77,V_86,B) [0>=V_77+1,V_77+V_86=0] 
* Loop 126: eval_zroll_NewDefault_in(V_77,V_86,B) [0>=V_77+1] 
* Loop 127: eval_zroll_NewDefault_in(V_77,V_86,B) [] 

### Ranking functions of CR eval_zroll_NewDefault_in(V_77,V_86,B) 

#### Partial ranking functions of CR eval_zroll_NewDefault_in(V_77,V_86,B) 


### Resulting Chains:eval_zroll_NewDefault_in(V_77,V_86,B) 
* [127]
* [126]...
* [125]...


### Merging Chains  eval_zroll_NewDefault_in/3 into  External patterns of execution 
* [[127]] --> 1 
* [[125]] --> 2 
* [[126]] --> 3 


### Specialization of cost equations eval_zroll_bb0_in/1 
* CE 3 is refined into CE [236] 
* CE 4 is refined into CE [237,238] 
* CE 5 is refined into CE [239,240,241] 
* CE 6 is refined into CE [242,243,244] 
* CE 7 is refined into CE [245,246,247] 


#### Refined cost equations eval_zroll_bb0_in/1 
* CE 236: eval_zroll_bb0_in(B) = 0
     [] 
* CE 237: eval_zroll_bb0_in(B) = 0+ eval_zroll_16(B):1
     [] 
* CE 238: eval_zroll_bb0_in(B) = 0+ eval_zroll_16(B):2
     [] 
* CE 239: eval_zroll_bb0_in(B) = 0+ eval_zroll_63(C,B):1
     [C=1] 
* CE 240: eval_zroll_bb0_in(B) = 0+ eval_zroll_63(C,B):2
     [C>=2] 
* CE 241: eval_zroll_bb0_in(B) = 0+ eval_zroll_63(C,B):3
     [0>=C] 
* CE 242: eval_zroll_bb0_in(B) = 0+ eval_zroll_NewDefault_in(C,D,B):1
     [] 
* CE 243: eval_zroll_bb0_in(B) = 0+ eval_zroll_NewDefault_in(C,D,B):2
     [0>=C+1,C+D=0] 
* CE 244: eval_zroll_bb0_in(B) = 0+ eval_zroll_NewDefault_in(C,D,B):3
     [0>=C+1] 
* CE 245: eval_zroll_bb0_in(B) = 0+ eval_zroll_74(C,B):1
     [C=1] 
* CE 246: eval_zroll_bb0_in(B) = 0+ eval_zroll_74(C,B):2
     [C>=2] 
* CE 247: eval_zroll_bb0_in(B) = 0+ eval_zroll_74(C,B):3
     [0>=C] 

### Cost equations --> "Loop" of eval_zroll_bb0_in/1 
* CEs [238,241,243,244,247] --> Loop 128 
* CEs [236,237,239,240,242,245,246] --> Loop 129 

#### Loops of eval_zroll_bb0_in/1 
* Loop 128: eval_zroll_bb0_in(B) [] 
* Loop 129: eval_zroll_bb0_in(B) [] 

### Ranking functions of CR eval_zroll_bb0_in(B) 

#### Partial ranking functions of CR eval_zroll_bb0_in(B) 


### Resulting Chains:eval_zroll_bb0_in(B) 
* [129]
* [128]...


### Merging Chains  eval_zroll_bb0_in/1 into  External patterns of execution 
* [[129]] --> 1 
* [[128]] --> 2 


### Specialization of cost equations eval_zroll_start/1 
* CE 2 is refined into CE [248,249] 


#### Refined cost equations eval_zroll_start/1 
* CE 248: eval_zroll_start(B) = 0+ eval_zroll_bb0_in(B):1
     [] 
* CE 249: eval_zroll_start(B) = 0+ eval_zroll_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_zroll_start/1 
* CEs [249] --> Loop 130 
* CEs [248] --> Loop 131 

#### Loops of eval_zroll_start/1 
* Loop 130: eval_zroll_start(B) [] 
* Loop 131: eval_zroll_start(B) [] 

### Ranking functions of CR eval_zroll_start(B) 

#### Partial ranking functions of CR eval_zroll_start(B) 


### Resulting Chains:eval_zroll_start(B) 
* [131]
* [130]...


### Merging Chains  eval_zroll_start/1 into  External patterns of execution 
* [[131]] --> 1 
* [[130]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [46,47,48,49,50,51,52,53,54,55,56,57,58,59] 

 * loop 46:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 47:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 48:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 49:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 50:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 51:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 52:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 53:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 54:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 55:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 56:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 57:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 58:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
 * loop 59:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of phase [46,47,48,49,50,51,52,53,54,55,56,57,58,59]:eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K) -> [eval_zroll_bb14_in(V_39',V_mod_2',V_i_0',V_left_0',V_58',V_left_0_sink',V_j_0',B',C',D',E',F',G',H',I',J',K')] 
14*it(46)+0
#### Cost of chains of eval_zroll_bb14_in(V_39,V_mod_2,V_i_0,V_left_0,V_58,V_left_0_sink,V_j_0,B,C,D,E,F,G,H,I,J,K):
* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59]]...: 14*it(46)+0
  with precondition: [V_i_0+2=V_58,V_left_0>=V_left_0_sink,B=2] 

* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],64]: 14*it(46)+0
  with precondition: [V_i_0=0,V_58=2,B=2,E=0,G=2,K=0,V_39=C,V_mod_2=D,V_left_0=F,H=J+1,V_mod_2+I=0,V_left_0>=V_left_0_sink,V_left_0_sink>=H+1] 

* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],63]: 14*it(46)+0
  with precondition: [B=2,V_i_0+2=V_58,V_39=C,V_mod_2=D,V_i_0=E,V_left_0=F,V_i_0+2=G,H=J+1,V_i_0=K,0>=V_39+2,0>=V_i_0,0>=V_39+I+1,V_i_0>=V_39+1,I>=V_39+1,0>=V_mod_2+I+1,V_left_0>=V_left_0_sink,V_left_0_sink>=H+1,V_i_0+I>=2*V_39+3] 

* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],62]: 14*it(46)+0
  with precondition: [B=2,V_i_0+2=V_58,V_39=C,V_mod_2=D,V_i_0=E,V_left_0=F,V_i_0+2=G,H=J+1,V_i_0=K,0>=V_39+2,V_i_0>=0,0>=V_39+V_i_0+1,0>=V_39+I+1,I>=V_39+1,V_left_0>=V_left_0_sink,V_left_0_sink>=H+1,V_mod_2+I>=1,0>=2*V_39+V_i_0+I+3] 

* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],61]: 14*it(46)+0
  with precondition: [B=2,V_i_0+2=V_58,V_39=C,V_mod_2=D,V_i_0=E,V_left_0=F,V_i_0+2=G,H=J+1,V_i_0=K,0>=V_i_0,V_39>=2,0>=V_mod_2+I+1,V_left_0>=V_left_0_sink,V_left_0_sink>=H+1,V_39>=I+1,V_39+V_i_0>=1,V_39+I>=1,V_i_0+I+2*V_39>=3] 

* Chain [[46,47,48,49,50,51,52,53,54,55,56,57,58,59],60]: 14*it(46)+0
  with precondition: [B=2,V_i_0+2=V_58,V_39=C,V_mod_2=D,V_i_0=E,V_left_0=F,V_i_0+2=G,H=J+1,V_i_0=K,V_39>=2,V_i_0>=0,V_39>=V_i_0+1,V_left_0>=V_left_0_sink,V_left_0_sink>=H+1,V_39>=I+1,V_39+I>=1,V_mod_2+I>=1,2*V_39>=V_i_0+I+3] 

* Chain [66]: 0
  with precondition: [V_39+1=0,V_i_0=0,V_58=2,V_j_0=0,B=2,C+1=0,E=0,G=2,I=0,K=0,D=V_mod_2,V_left_0_sink=V_left_0,V_left_0_sink=F,V_left_0_sink=H,V_left_0_sink=J+1] 

* Chain [65]: 0
  with precondition: [V_39=1,V_i_0=0,V_58=2,V_j_0=0,B=2,C=1,E=0,G=2,I=0,K=0,D=V_mod_2,V_left_0_sink=V_left_0,V_left_0_sink=F,V_left_0_sink=H,V_left_0_sink=J+1] 

* Chain [64]: 0
  with precondition: [V_i_0=0,V_58=2,B=2,E=0,G=2,K=0,C=V_39,V_mod_2=D,V_left_0=F,V_left_0_sink=H,V_left_0_sink=J+1,V_j_0+V_mod_2=0,V_mod_2+I=0,V_left_0>=V_left_0_sink] 

* Chain [63]: 0
  with precondition: [B=2,V_58=V_i_0+2,V_39=C,V_mod_2=D,V_58=E+2,V_left_0=F,V_58=G,V_left_0_sink=H,V_j_0=I,V_left_0_sink=J+1,V_58=K+2,0>=V_39+2,2>=V_58,V_58>=V_39+3,0>=V_j_0+V_mod_2+1,V_left_0>=V_left_0_sink] 

* Chain [62]: 0
  with precondition: [B=2,V_58=V_i_0+2,V_39=C,V_mod_2=D,V_58=E+2,V_left_0=F,V_58=G,V_left_0_sink=H,V_j_0=I,V_left_0_sink=J+1,V_58=K+2,0>=V_39+2,V_58>=2,1>=V_39+V_58,V_left_0>=V_left_0_sink,V_j_0+V_mod_2>=1] 

* Chain [61]: 0
  with precondition: [B=2,V_58=V_i_0+2,V_39=C,V_mod_2=D,V_58=E+2,V_left_0=F,V_58=G,V_left_0_sink=H,V_j_0=I,V_left_0_sink=J+1,V_58=K+2,2>=V_58,V_39>=2,0>=V_j_0+V_mod_2+1,V_left_0>=V_left_0_sink,V_39+V_58>=3] 

* Chain [60]: 0
  with precondition: [B=2,V_58=V_i_0+2,V_39=C,V_mod_2=D,V_58=E+2,V_left_0=F,V_58=G,V_left_0_sink=H,V_j_0=I,V_left_0_sink=J+1,V_58=K+2,V_39>=2,V_58>=2,V_39+1>=V_58,V_left_0>=V_left_0_sink,V_j_0+V_mod_2>=1] 


#### Cost of loops [79,82] 

 * loop 79:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
14*s(3)+2
 * loop 82:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2
#### Cost of phase [79,82]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
4*it(79)+14*s(4)+0
  Such that:aux(1) =< -2*V_39+V_mod_2-V_i_0
aux(2) =< -2*V_39+V_mod_2-V_i_0+2*V_39'-V_mod_2'+V_i_0'
aux(3) =< -V_39-V_i_0
aux(4) =< -V_39-V_i_0+V_39'+V_i_0'
it(79) =< aux(1)
it(79) =< aux(2)
it(79) =< aux(3)
it(79) =< aux(4)

#### Cost of loops [80,84] 

 * loop 80:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
14*s(6)+2
 * loop 84:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2
#### Cost of phase [80,84]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
4*it(80)+14*s(7)+0
  Such that:aux(6) =< -V_i_0+1
aux(7) =< -V_i_0+V_i_0'
it(80) =< aux(6)
it(80) =< aux(7)

#### Cost of phase [80,84]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
4*it(80)+14*s(7)+0
  Such that:aux(6) =< -V_i_0+1
aux(7) =< -V_i_0+V_i_0'
it(80) =< aux(6)
it(80) =< aux(7)

#### Cost of loops [70,74] 

 * loop 70:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
14*s(9)+2
 * loop 74:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2
#### Cost of phase [70,74]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
4*it(70)+14*s(10)+0
  Such that:aux(10) =< V_39-V_i_0
aux(11) =< V_39-V_i_0-V_39'+V_i_0'
aux(12) =< 2*V_39+V_mod_2-V_i_0
aux(13) =< 2*V_39+V_mod_2-V_i_0-2*V_39'-V_mod_2'+V_i_0'
it(70) =< aux(10)
it(70) =< aux(11)
it(70) =< aux(12)
it(70) =< aux(13)

#### Cost of loops [71,75] 

 * loop 71:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
14*s(12)+2
 * loop 75:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2
#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of loops [69,73] 

 * loop 69:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
14*s(15)+2
 * loop 73:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2
#### Cost of phase [69,73]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(69)+2*it(73)+14*s(16)+0
  Such that:it(69) =< V_left_0/2
it(69) =< V_left_0/2-V_left_0'/2
aux(20) =< V_39-V_i_0
aux(21) =< V_39-V_i_0-V_39'+V_i_0'
aux(22) =< 2*V_39+V_mod_2-V_i_0
aux(23) =< 2*V_39+V_mod_2-V_i_0-2*V_39'-V_mod_2'+V_i_0'
aux(24) =< V_left_0
aux(25) =< V_left_0-V_left_0'
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(21)
it(73) =< aux(21)
it(69) =< aux(22)
it(73) =< aux(22)
it(69) =< aux(23)
it(73) =< aux(23)
it(69) =< aux(24)
it(73) =< aux(24)
it(69) =< aux(25)
it(73) =< aux(25)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [69,73]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(69)+2*it(73)+14*s(16)+0
  Such that:it(69) =< V_left_0/2
it(69) =< V_left_0/2-V_left_0'/2
aux(20) =< V_39-V_i_0
aux(21) =< V_39-V_i_0-V_39'+V_i_0'
aux(22) =< 2*V_39+V_mod_2-V_i_0
aux(23) =< 2*V_39+V_mod_2-V_i_0-2*V_39'-V_mod_2'+V_i_0'
aux(24) =< V_left_0
aux(25) =< V_left_0-V_left_0'
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(21)
it(73) =< aux(21)
it(69) =< aux(22)
it(73) =< aux(22)
it(69) =< aux(23)
it(73) =< aux(23)
it(69) =< aux(24)
it(73) =< aux(24)
it(69) =< aux(25)
it(73) =< aux(25)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [69,73]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(69)+2*it(73)+14*s(16)+0
  Such that:it(69) =< V_left_0/2
it(69) =< V_left_0/2-V_left_0'/2
aux(20) =< V_39-V_i_0
aux(21) =< V_39-V_i_0-V_39'+V_i_0'
aux(22) =< 2*V_39+V_mod_2-V_i_0
aux(23) =< 2*V_39+V_mod_2-V_i_0-2*V_39'-V_mod_2'+V_i_0'
aux(24) =< V_left_0
aux(25) =< V_left_0-V_left_0'
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(21)
it(73) =< aux(21)
it(69) =< aux(22)
it(73) =< aux(22)
it(69) =< aux(23)
it(73) =< aux(23)
it(69) =< aux(24)
it(73) =< aux(24)
it(69) =< aux(25)
it(73) =< aux(25)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [69,73]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(69)+2*it(73)+14*s(16)+0
  Such that:it(69) =< V_left_0/2
it(69) =< V_left_0/2-V_left_0'/2
aux(20) =< V_39-V_i_0
aux(21) =< V_39-V_i_0-V_39'+V_i_0'
aux(22) =< 2*V_39+V_mod_2-V_i_0
aux(23) =< 2*V_39+V_mod_2-V_i_0-2*V_39'-V_mod_2'+V_i_0'
aux(24) =< V_left_0
aux(25) =< V_left_0-V_left_0'
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(21)
it(73) =< aux(21)
it(69) =< aux(22)
it(73) =< aux(22)
it(69) =< aux(23)
it(73) =< aux(23)
it(69) =< aux(24)
it(73) =< aux(24)
it(69) =< aux(25)
it(73) =< aux(25)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of phase [71,75]:eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B) -> [eval_zroll_bb12_in(V_39',V_mod_2',V_i_0',V_left_0',B')] 
2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
it(71) =< V_left_0/2-V_left_0'/2
aux(15) =< -V_i_0+1
aux(16) =< -V_i_0+V_i_0'
aux(17) =< V_left_0
aux(18) =< V_left_0-V_left_0'
it(71) =< aux(15)
it(75) =< aux(15)
it(71) =< aux(16)
it(75) =< aux(16)
it(71) =< aux(17)
it(75) =< aux(17)
it(71) =< aux(18)
it(75) =< aux(18)

#### Cost of chains of eval_zroll_bb12_in(V_39,V_mod_2,V_i_0,V_left_0,B):
* Chain [[80,84],[79,82],68]...: 4*it(79)+4*it(80)+42*s(1)+2
  Such that:aux(1) =< -2*V_39+V_mod_2
aux(5) =< -V_39
aux(8) =< 1
it(79) =< aux(1)
it(79) =< aux(5)
it(80) =< aux(8)

  with precondition: [V_i_0=0,B=3,0>=V_39+V_mod_2+2,V_mod_2>=V_39+2,V_39>=V_left_0] 

* Chain [[80,84],68]...: 4*it(80)+28*s(1)+2
  Such that:aux(9) =< 1
it(80) =< aux(9)

  with precondition: [V_i_0=0,B=3,0>=V_39+2,0>=V_39+V_mod_2+2,V_39>=V_left_0] 

* Chain [[79,82],68]...: 4*it(79)+28*s(1)+2
  Such that:aux(1) =< -2*V_39+V_mod_2-V_i_0
aux(5) =< -V_39-V_i_0
it(79) =< aux(1)
it(79) =< aux(5)

  with precondition: [B=3,0>=V_39+2,V_i_0>=0,0>=V_39+V_i_0+1,V_mod_2>=V_39+2,V_39>=V_i_0+V_left_0] 

* Chain [[71,75],[70,74],68]...: 4*it(70)+2*it(71)+2*it(75)+42*s(1)+2
  Such that:aux(14) =< V_39
aux(12) =< 2*V_39+V_mod_2
aux(17) =< V_left_0
it(71) =< V_left_0/2
aux(19) =< 1
it(70) =< aux(14)
it(70) =< aux(12)
it(71) =< aux(19)
it(75) =< aux(19)
it(71) =< aux(17)
it(75) =< aux(17)

  with precondition: [V_i_0=0,B=3,V_left_0>=1,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_mod_2>=2] 

* Chain [[71,75],[69,73],[70,74],68]...: 2*it(69)+4*it(70)+2*it(71)+2*it(73)+2*it(75)+56*s(1)+2
  Such that:aux(26) =< V_39
aux(27) =< 2*V_39+V_mod_2
aux(28) =< 1
aux(29) =< V_left_0
aux(30) =< V_left_0/2
it(69) =< aux(29)
it(69) =< aux(30)
it(71) =< aux(30)
it(70) =< aux(26)
it(70) =< aux(27)
it(69) =< aux(26)
it(73) =< aux(26)
it(69) =< aux(27)
it(73) =< aux(27)
it(73) =< aux(29)
it(71) =< aux(28)
it(75) =< aux(28)
it(71) =< aux(29)
it(75) =< aux(29)

  with precondition: [V_i_0=0,B=3,V_39>=3,V_left_0>=2,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_mod_2>=2,V_39+2*V_left_0>=V_mod_2+8] 

* Chain [[71,75],[69,73],93]: 2*it(69)+2*it(71)+2*it(73)+2*it(75)+28*s(13)+0
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(32) =< 1
aux(33) =< V_left_0
aux(34) =< V_left_0/2
it(69) =< aux(33)
it(69) =< aux(34)
it(71) =< aux(34)
it(69) =< aux(20)
it(73) =< aux(20)
it(73) =< aux(33)
it(69) =< aux(22)
it(73) =< aux(22)
it(71) =< aux(32)
it(75) =< aux(32)
it(71) =< aux(33)
it(75) =< aux(33)

  with precondition: [V_i_0=0,B=3,V_39>=3,V_left_0>=2,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_mod_2>=2,V_39+2*V_left_0>=V_mod_2+8] 

* Chain [[71,75],[69,73],68]...: 2*it(69)+2*it(71)+2*it(73)+2*it(75)+42*s(1)+2
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(36) =< 1
aux(37) =< V_left_0
aux(38) =< V_left_0/2
it(69) =< aux(37)
it(69) =< aux(38)
it(71) =< aux(38)
it(69) =< aux(20)
it(73) =< aux(20)
it(73) =< aux(37)
it(69) =< aux(22)
it(73) =< aux(22)
it(71) =< aux(36)
it(75) =< aux(36)
it(71) =< aux(37)
it(75) =< aux(37)

  with precondition: [V_i_0=0,B=3,V_39>=3,V_left_0>=2,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_mod_2>=2,V_39+2*V_left_0>=V_mod_2+8] 

* Chain [[71,75],[69,73],67]...: 2*it(69)+2*it(71)+2*it(73)+2*it(75)+42*s(13)+2
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(40) =< 1
aux(41) =< V_left_0
aux(42) =< V_left_0/2
it(69) =< aux(41)
it(69) =< aux(42)
it(71) =< aux(42)
it(69) =< aux(20)
it(73) =< aux(20)
it(73) =< aux(41)
it(69) =< aux(22)
it(73) =< aux(22)
it(71) =< aux(40)
it(75) =< aux(40)
it(71) =< aux(41)
it(75) =< aux(41)

  with precondition: [V_i_0=0,B=3,V_left_0>=3,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_mod_2>=2,V_39+3*V_left_0>=V_mod_2+14,3*V_39+3*V_left_0>=V_mod_2+22,V_39+V_left_0+V_mod_2>=6] 

* Chain [[71,75],93]: 2*it(71)+2*it(75)+14*s(13)+0
  Such that:it(71) =< V_left_0/2
aux(43) =< 1
aux(44) =< V_left_0
it(71) =< aux(43)
it(75) =< aux(43)
it(71) =< aux(44)
it(75) =< aux(44)

  with precondition: [V_i_0=0,B=3,V_39>=2,V_left_0>=1,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_left_0>=V_mod_2+4] 

* Chain [[71,75],68]...: 2*it(71)+2*it(75)+28*s(1)+2
  Such that:aux(17) =< V_left_0
it(71) =< V_left_0/2
aux(45) =< 1
it(71) =< aux(45)
it(75) =< aux(45)
it(71) =< aux(17)
it(75) =< aux(17)

  with precondition: [V_i_0=0,B=3,V_39>=2,V_left_0>=1,V_39>=V_mod_2+2,V_39>=V_left_0] 

* Chain [[71,75],67]...: 2*it(71)+2*it(75)+28*s(13)+2
  Such that:it(71) =< V_left_0/2
aux(46) =< 1
aux(47) =< V_left_0
it(71) =< aux(46)
it(75) =< aux(46)
it(71) =< aux(47)
it(75) =< aux(47)

  with precondition: [V_i_0=0,B=3,V_left_0>=2,V_39>=V_mod_2+2,V_39>=V_left_0,V_39+V_left_0>=V_mod_2+5] 

* Chain [[69,73],[70,74],68]...: 2*it(69)+4*it(70)+2*it(73)+42*s(1)+2
  Such that:aux(24) =< V_left_0
it(69) =< V_left_0/2
aux(26) =< V_39-V_i_0
aux(27) =< 2*V_39+V_mod_2-V_i_0
it(70) =< aux(26)
it(70) =< aux(27)
it(69) =< aux(26)
it(73) =< aux(26)
it(69) =< aux(27)
it(73) =< aux(27)
it(69) =< aux(24)
it(73) =< aux(24)

  with precondition: [B=3,V_i_0>=0,V_left_0>=1,V_39>=V_i_0+2,V_39+V_mod_2>=2,V_39>=V_i_0+V_left_0] 

* Chain [[69,73],93]: 2*it(69)+2*it(73)+14*s(16)+0
  Such that:aux(20) =< V_39-V_i_0
aux(22) =< 2*V_39+V_mod_2-V_i_0
it(69) =< V_left_0/2
aux(31) =< V_left_0
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(31)
it(73) =< aux(31)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [B=3,V_39>=2,V_i_0>=0,V_left_0>=1,V_39+V_mod_2>=2,V_39>=V_i_0+V_left_0,V_39+V_i_0+V_left_0+V_mod_2>=4] 

* Chain [[69,73],68]...: 2*it(69)+2*it(73)+28*s(1)+2
  Such that:aux(20) =< V_39-V_i_0
aux(22) =< 2*V_39+V_mod_2-V_i_0
it(69) =< V_left_0/2
aux(35) =< V_left_0
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(35)
it(73) =< aux(35)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [B=3,V_39>=2,V_i_0>=0,V_left_0>=1,V_39+V_mod_2>=2,V_39>=V_i_0+V_left_0,V_mod_2+2*V_39>=V_i_0+4] 

* Chain [[69,73],67]...: 2*it(69)+2*it(73)+28*s(16)+2
  Such that:aux(20) =< V_39-V_i_0
aux(22) =< 2*V_39+V_mod_2-V_i_0
it(69) =< V_left_0/2
aux(39) =< V_left_0
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(39)
it(73) =< aux(39)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [B=3,V_i_0>=0,V_left_0>=2,V_39+V_mod_2>=2,V_39>=V_i_0+V_left_0,V_39+V_left_0+V_mod_2>=5] 

* Chain [93]: 0
  with precondition: [V_left_0=0,B=3,V_i_0>=0,V_39>=V_i_0] 

* Chain [92,68]...: 14*s(1)+4
  with precondition: [V_39+1=0,V_i_0=0,V_left_0+1=0,B=3] 

* Chain [89,93]: 2
  with precondition: [V_39=1,V_i_0=0,V_left_0=1,B=3] 

* Chain [88,[79,82],68]...: 4*it(79)+28*s(1)+4
  Such that:aux(1) =< -2*V_39
aux(5) =< -V_39
it(79) =< aux(1)
it(79) =< aux(5)

  with precondition: [V_mod_2=0,V_i_0=0,B=3,0>=V_39+2,V_39>=V_left_0] 

* Chain [88,68]...: 14*s(1)+4
  with precondition: [V_mod_2=0,V_i_0=0,B=3,0>=V_left_0+1,V_39>=V_left_0] 

* Chain [87,[69,73],[70,74],68]...: 2*it(69)+4*it(70)+2*it(73)+42*s(1)+4
  Such that:aux(26) =< V_39
aux(27) =< 2*V_39
aux(24) =< V_left_0
it(69) =< V_left_0/2
it(70) =< aux(26)
it(70) =< aux(27)
it(69) =< aux(26)
it(73) =< aux(26)
it(69) =< aux(27)
it(73) =< aux(27)
it(69) =< aux(24)
it(73) =< aux(24)

  with precondition: [V_mod_2=0,V_i_0=0,B=3,V_39>=3,V_left_0>=2,V_39>=V_left_0] 

* Chain [87,[69,73],93]: 2*it(69)+2*it(73)+14*s(16)+2
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39
aux(31) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(31)
it(73) =< aux(31)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_mod_2=0,V_i_0=0,B=3,V_left_0>=2,V_39>=V_left_0] 

* Chain [87,[69,73],68]...: 2*it(69)+2*it(73)+28*s(1)+4
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39
aux(35) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(35)
it(73) =< aux(35)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_mod_2=0,V_i_0=0,B=3,V_left_0>=2,2*V_39>=5,V_39>=V_left_0] 

* Chain [87,[69,73],67]...: 2*it(69)+2*it(73)+28*s(16)+4
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39
aux(39) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(39)
it(73) =< aux(39)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_mod_2=0,V_i_0=0,B=3,V_left_0>=3,V_39>=V_left_0] 

* Chain [87,93]: 2
  with precondition: [V_mod_2=0,V_i_0=0,V_left_0=1,B=3,V_39>=1] 

* Chain [87,67]...: 14*s(17)+4
  with precondition: [V_mod_2=0,V_i_0=0,B=3,V_left_0>=2,V_39>=V_left_0] 

* Chain [86,[79,82],68]...: 4*it(79)+42*s(1)+4
  Such that:aux(1) =< -2*V_39+V_mod_2
aux(5) =< -V_39
it(79) =< aux(1)
it(79) =< aux(5)

  with precondition: [V_i_0=0,B=3,0>=V_39+2,V_mod_2>=V_39+2,V_39>=V_left_0] 

* Chain [86,68]...: 28*s(1)+4
  with precondition: [V_i_0=0,B=3,0>=V_left_0+1,V_39>=V_left_0] 

* Chain [85,[70,74],68]...: 4*it(70)+42*s(1)+4
  Such that:aux(14) =< V_39
aux(12) =< 2*V_39+V_mod_2
it(70) =< aux(14)
it(70) =< aux(12)

  with precondition: [V_i_0=0,B=3,V_39>=2,V_left_0>=1,V_39>=V_left_0,V_39+V_mod_2>=2] 

* Chain [85,[69,73],[70,74],68]...: 2*it(69)+4*it(70)+2*it(73)+56*s(1)+4
  Such that:aux(26) =< V_39
aux(27) =< 2*V_39+V_mod_2
aux(24) =< V_left_0
it(69) =< V_left_0/2
it(70) =< aux(26)
it(70) =< aux(27)
it(69) =< aux(26)
it(73) =< aux(26)
it(69) =< aux(27)
it(73) =< aux(27)
it(69) =< aux(24)
it(73) =< aux(24)

  with precondition: [V_i_0=0,B=3,V_left_0>=3,V_39>=V_left_0,V_39+V_mod_2>=2] 

* Chain [85,[69,73],93]: 2*it(69)+2*it(73)+28*s(16)+2
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(31) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(31)
it(73) =< aux(31)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_i_0=0,B=3,V_left_0>=3,V_39>=V_left_0,V_39+V_mod_2>=2] 

* Chain [85,[69,73],68]...: 2*it(69)+2*it(73)+42*s(1)+4
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(35) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(35)
it(73) =< aux(35)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_i_0=0,B=3,V_left_0>=3,V_39>=V_left_0,V_39+V_mod_2>=2] 

* Chain [85,[69,73],67]...: 2*it(69)+2*it(73)+42*s(16)+4
  Such that:aux(20) =< V_39
aux(22) =< 2*V_39+V_mod_2
aux(39) =< V_left_0
it(69) =< V_left_0/2
it(69) =< aux(20)
it(73) =< aux(20)
it(69) =< aux(39)
it(73) =< aux(39)
it(69) =< aux(22)
it(73) =< aux(22)

  with precondition: [V_i_0=0,B=3,V_left_0>=4,V_39>=V_left_0,V_39+V_mod_2>=2,V_39+V_left_0+V_mod_2>=7] 

* Chain [85,93]: 14*s(19)+2
  with precondition: [V_i_0=0,B=3,V_left_0>=2,V_39>=V_left_0] 

* Chain [85,68]...: 28*s(1)+4
  with precondition: [V_i_0=0,B=3,V_left_0>=1,V_39>=V_left_0] 

* Chain [85,67]...: 28*s(17)+4
  with precondition: [V_i_0=0,B=3,V_left_0>=3,V_39>=V_left_0] 

* Chain [68]...: 14*s(1)+2
  with precondition: [B=3,0>=V_left_0+1,V_i_0>=0] 

* Chain [67]...: 14*s(17)+2
  with precondition: [B=3,V_i_0>=0,V_left_0>=1,V_39>=V_i_0+V_left_0] 


#### Cost of chains of eval_zroll_bb11_in(V_39,V_mod_2,B):
* Chain [99]: 1
  with precondition: [V_39=0] 

* Chain [98]: 3
  with precondition: [V_39=1] 

* Chain [97]: 2*s(88)+4*s(89)+2*s(90)+6*s(91)+6*s(92)+4*s(93)+112*s(94)+3
  Such that:s(84) =< 1
s(82) =< 2*V_39
aux(64) =< V_39
aux(65) =< 2*V_39+V_mod_2
aux(66) =< V_39/2
s(91) =< aux(66)
s(88) =< aux(66)
s(89) =< aux(66)
s(88) =< aux(64)
s(90) =< aux(64)
s(88) =< s(82)
s(90) =< s(82)
s(91) =< aux(64)
s(92) =< aux(64)
s(91) =< aux(65)
s(92) =< aux(65)
s(89) =< s(84)
s(93) =< s(84)
s(89) =< aux(64)
s(93) =< aux(64)

  with precondition: [V_39>=2] 

* Chain [96]...: 196*s(107)+8*s(109)+12*s(113)+5
  Such that:aux(67) =< 1
aux(68) =< -2*V_39+V_mod_2
aux(69) =< -V_39
s(109) =< aux(67)
s(113) =< aux(68)
s(113) =< aux(69)

  with precondition: [0>=V_39+1] 

* Chain [95]...: 4*s(129)+42*s(130)+5
  Such that:s(127) =< -2*V_39
s(128) =< -V_39
s(129) =< s(127)
s(129) =< s(128)

  with precondition: [V_mod_2=0,0>=V_39+1] 

* Chain [94]...: 6*s(135)+10*s(136)+700*s(138)+12*s(153)+12*s(155)+38*s(159)+18*s(166)+5
  Such that:aux(81) =< 1
aux(82) =< V_39
aux(83) =< 2*V_39
aux(84) =< 2*V_39+V_mod_2
aux(85) =< V_39/2
s(135) =< aux(85)
s(153) =< aux(85)
s(166) =< aux(85)
s(153) =< aux(81)
s(155) =< aux(81)
s(153) =< aux(82)
s(155) =< aux(82)
s(166) =< aux(82)
s(159) =< aux(82)
s(166) =< aux(84)
s(159) =< aux(84)
s(136) =< aux(82)
s(136) =< aux(83)
s(135) =< aux(82)
s(135) =< aux(83)

  with precondition: [V_39>=1] 


#### Cost of chains of eval_zroll_16(B):
* Chain [101]: 1*aux(87)+0
  with precondition: [] 

* Chain [100]...: 1*aux(89)+0
  with precondition: [] 


#### Cost of loops [103] 

 * loop 103:eval_zroll_bb22_in(V_n_1,B) -> [eval_zroll_bb22_in(V_n_1',B')] 
1
#### Cost of phase [103]:eval_zroll_bb22_in(V_n_1,B) -> [eval_zroll_bb22_in(V_n_1',B')] 
1*it(103)+0
#### Cost of loops [102] 

 * loop 102:eval_zroll_bb22_in(V_n_1,B) -> [eval_zroll_bb22_in(V_n_1',B')] 
1
#### Cost of phase [102]:eval_zroll_bb22_in(V_n_1,B) -> [eval_zroll_bb22_in(V_n_1',B')] 
1*it(102)+0
  Such that:it(102) =< V_n_1
it(102) =< V_n_1-V_n_1'

#### Cost of chains of eval_zroll_bb22_in(V_n_1,B):
* Chain [[103]]...: 1*it(103)+0
  with precondition: [0>=V_n_1,B=6] 

* Chain [[102],104]: 1*it(102)+0
  Such that:it(102) =< V_n_1

  with precondition: [B=6,V_n_1>=2] 

* Chain [104]: 0
  with precondition: [V_n_1=1,B=6] 


#### Cost of chains of eval_zroll_63(V_77,B):
* Chain [107]: 1
  with precondition: [V_77=1] 

* Chain [106]: 1*s(423)+1
  Such that:s(423) =< V_77

  with precondition: [V_77>=2] 

* Chain [105]...: 1*s(424)+1
  with precondition: [0>=V_77] 


#### Cost of loops [109] 

 * loop 109:eval_zroll_bb26_in(V_n_0,B) -> [eval_zroll_bb26_in(V_n_0',B')] 
1
#### Cost of phase [109]:eval_zroll_bb26_in(V_n_0,B) -> [eval_zroll_bb26_in(V_n_0',B')] 
1*it(109)+0
#### Cost of loops [108] 

 * loop 108:eval_zroll_bb26_in(V_n_0,B) -> [eval_zroll_bb26_in(V_n_0',B')] 
1
#### Cost of phase [108]:eval_zroll_bb26_in(V_n_0,B) -> [eval_zroll_bb26_in(V_n_0',B')] 
1*it(108)+0
  Such that:it(108) =< V_n_0
it(108) =< V_n_0-V_n_0'

#### Cost of chains of eval_zroll_bb26_in(V_n_0,B):
* Chain [[109]]...: 1*it(109)+0
  with precondition: [0>=V_n_0,B=5] 

* Chain [[108],110]: 1*it(108)+0
  Such that:it(108) =< V_n_0

  with precondition: [B=5,V_n_0>=2] 

* Chain [110]: 0
  with precondition: [V_n_0=1,B=5] 


#### Cost of chains of eval_zroll_74(V_77,B):
* Chain [113]: 1
  with precondition: [V_77=1] 

* Chain [112]: 1*s(425)+1
  Such that:s(425) =< V_77

  with precondition: [V_77>=2] 

* Chain [111]...: 1*s(426)+1
  with precondition: [0>=V_77] 


#### Cost of loops [115] 

 * loop 115:eval_zroll_bb44_in(V_n_3,B) -> [eval_zroll_bb44_in(V_n_3',B')] 
1
#### Cost of phase [115]:eval_zroll_bb44_in(V_n_3,B) -> [eval_zroll_bb44_in(V_n_3',B')] 
1*it(115)+0
#### Cost of loops [114] 

 * loop 114:eval_zroll_bb44_in(V_n_3,B) -> [eval_zroll_bb44_in(V_n_3',B')] 
1
#### Cost of phase [114]:eval_zroll_bb44_in(V_n_3,B) -> [eval_zroll_bb44_in(V_n_3',B')] 
1*it(114)+0
  Such that:it(114) =< V_n_3
it(114) =< V_n_3-V_n_3'

#### Cost of chains of eval_zroll_bb44_in(V_n_3,B):
* Chain [[115]]...: 1*it(115)+0
  with precondition: [0>=V_n_3+1,B=3] 

* Chain [[114],116]: 1*it(114)+0
  Such that:it(114) =< V_n_3

  with precondition: [B=3,V_n_3>=1] 

* Chain [116]: 0
  with precondition: [V_n_3=0,B=3] 


#### Cost of chains of eval_zroll_127(V_77,B):
* Chain [119]: 1
  with precondition: [V_77=0] 

* Chain [118]: 1*s(427)+1
  Such that:s(427) =< V_77

  with precondition: [V_77>=1] 

* Chain [117]...: 1*s(428)+1
  with precondition: [0>=V_77+1] 


#### Cost of loops [121] 

 * loop 121:eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) -> [eval_zroll_bb38_in(V_mod_6',V_n_2',B',C')] 
1
#### Cost of phase [121]:eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) -> [eval_zroll_bb38_in(V_mod_6',V_n_2',B',C')] 
1*it(121)+0
#### Cost of loops [120] 

 * loop 120:eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) -> [eval_zroll_bb38_in(V_mod_6',V_n_2',B',C')] 
1
#### Cost of phase [120]:eval_zroll_bb38_in(V_mod_6,V_n_2,B,C) -> [eval_zroll_bb38_in(V_mod_6',V_n_2',B',C')] 
1*it(120)+0
  Such that:it(120) =< V_n_2
it(120) =< V_n_2-V_n_2'

#### Cost of chains of eval_zroll_bb38_in(V_mod_6,V_n_2,B,C):
* Chain [[121]]...: 1*it(121)+0
  with precondition: [0>=V_n_2+1,B=4] 

* Chain [[120],122]: 1*it(120)+0
  Such that:it(120) =< V_n_2

  with precondition: [B=4,16*V_mod_6=C,V_n_2>=1] 

* Chain [122]: 0
  with precondition: [V_n_2=0,B=4,C=16*V_mod_6] 


#### Cost of chains of eval_zroll_bb34_in(V_77,V_mod_6,B):
* Chain [124]: 2*s(429)+1
  Such that:aux(90) =< V_77
s(429) =< aux(90)

  with precondition: [] 

* Chain [123]...: 1*aux(91)+0
  with precondition: [0>=V_77+1] 


#### Cost of chains of eval_zroll_NewDefault_in(V_77,V_86,B):
* Chain [127]: 22*s(434)+4*s(436)+1
  Such that:aux(92) =< 1
aux(93) =< V_77
s(436) =< aux(92)
s(434) =< aux(93)

  with precondition: [] 

* Chain [126]...: 1*aux(94)+0
  with precondition: [0>=V_77+1] 

* Chain [125]...: 1*s(471)+0
  with precondition: [V_77+V_86=0,0>=V_77+1] 


#### Cost of chains of eval_zroll_bb0_in(B):
* Chain [129]: 1*aux(95)+0
  with precondition: [] 

* Chain [128]...: 1*aux(96)+0
  with precondition: [] 


#### Cost of chains of eval_zroll_start(B):
* Chain [131]: 1*s(484)+0
  with precondition: [] 

* Chain [130]...: 1*s(485)+0
  with precondition: [] 


Closed-form bounds of eval_zroll_start(B): 
-------------------------------------
* Chain [131] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [130]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zroll_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 430 ms.
* Invariants computed in 3094 ms.
   - Backward Invariants 1550 ms.
   - Transitive Invariants 346 ms.
* Refinement performed in 2326 ms.
* Termination proved in 250 ms.
* Upper bounds computed in 1981 ms.
   - Equation cost structures 707 ms.
   - Phase cost structures 527 ms.
   - Chain cost structures 677 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 8388 ms.

