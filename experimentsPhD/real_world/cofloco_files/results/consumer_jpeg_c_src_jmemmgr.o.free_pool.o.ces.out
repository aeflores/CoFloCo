Warning: Ignored call to eval_free_pool_stop/1 in equation loop_cont_eval_free_pool_bb18_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_free_pool_26/2,eval_free_pool_27/2,eval_free_pool_bb15_in/1]
1. recursive  : [eval_free_pool_39/2,eval_free_pool_40/2,eval_free_pool_bb18_in/1]
2. non_recursive  : [loop_cont_eval_free_pool_bb18_in/2]
3. non_recursive  : [loop_cont_eval_free_pool_bb15_in/2]
4. non_recursive  : [eval_free_pool_bb14_in/1]
5. recursive  : [eval_free_pool_7/1,eval_free_pool_8/1,eval_free_pool_bb4_in/1,eval_free_pool_bb7_in/1]
6. recursive  : [eval_free_pool_14/1,eval_free_pool_15/1,eval_free_pool_bb12_in/1,eval_free_pool_bb9_in/1]
7. non_recursive  : [loop_cont_eval_free_pool_bb9_in/2]
8. non_recursive  : [loop_cont_eval_free_pool_bb4_in/2]
9. non_recursive  : [eval_free_pool_bb2_in/1]
10. non_recursive  : [eval_free_pool_3/1]
11. non_recursive  : [eval_free_pool_2/1]
12. non_recursive  : [eval_free_pool_bb0_in/1]
13. non_recursive  : [eval_free_pool_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_free_pool_bb15_in/1
1. SCC is partially evaluated into eval_free_pool_bb18_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_free_pool_bb15_in/2
4. SCC is partially evaluated into eval_free_pool_bb14_in/1
5. SCC is partially evaluated into eval_free_pool_bb4_in/1
6. SCC is partially evaluated into eval_free_pool_bb9_in/1
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_free_pool_bb4_in/2
9. SCC is partially evaluated into eval_free_pool_bb2_in/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_free_pool_bb0_in/1
13. SCC is partially evaluated into eval_free_pool_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_free_pool_bb15_in/1 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_free_pool_bb15_in/1 
* CE 17: eval_free_pool_bb15_in(B) = 0
     [B=5] 
* CE 18: eval_free_pool_bb15_in(B) = 1+ eval_free_pool_bb15_in(B)
     [] 

### Cost equations --> "Loop" of eval_free_pool_bb15_in/1 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_free_pool_bb15_in/1 
* Loop 15: eval_free_pool_bb15_in(B)->  eval_free_pool_bb15_in(B)
                  [] 
* Loop 16: eval_free_pool_bb15_in(B) [B=5] 

### Ranking functions of CR eval_free_pool_bb15_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb15_in(B) 


### Resulting Chains:eval_free_pool_bb15_in(B) 
* [[15]]...
* [[15],16]
* [16]


### Merging Chains  eval_free_pool_bb15_in/1 into  External patterns of execution 
* [[16],[16,[15]]] --> 1 
* [[[15]]] --> 2 


### Specialization of cost equations eval_free_pool_bb18_in/1 
* CE 16 is refined into CE [19] 
* CE 15 is refined into CE [20] 


#### Refined cost equations eval_free_pool_bb18_in/1 
* CE 19: eval_free_pool_bb18_in(B) = 0
     [B=4] 
* CE 20: eval_free_pool_bb18_in(B) = 1+ eval_free_pool_bb18_in(C)
     [C=4,B=4] 

### Cost equations --> "Loop" of eval_free_pool_bb18_in/1 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_free_pool_bb18_in/1 
* Loop 17: eval_free_pool_bb18_in(B)->  eval_free_pool_bb18_in(B')
                  [B'=4,B=4] 
* Loop 18: eval_free_pool_bb18_in(B) [B=4] 

### Ranking functions of CR eval_free_pool_bb18_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb18_in(B) 


### Resulting Chains:eval_free_pool_bb18_in(B) 
* [[17]]...
* [[17],18]
* [18]


### Merging Chains  eval_free_pool_bb18_in/1 into  External patterns of execution 
* [[18],[18,[17]]] --> 1 
* [[[17]]] --> 2 


### Specialization of cost equations loop_cont_eval_free_pool_bb15_in/2 
* CE 14 is refined into CE [21,22] 


#### Refined cost equations loop_cont_eval_free_pool_bb15_in/2 
* CE 21: loop_cont_eval_free_pool_bb15_in(C,A) = 1+ eval_free_pool_bb18_in(D):1
     [D=4,C=5] 
* CE 22: loop_cont_eval_free_pool_bb15_in(C,A) = 1+ eval_free_pool_bb18_in(D):2
     [D=4,C=5] 

### Cost equations --> "Loop" of loop_cont_eval_free_pool_bb15_in/2 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of loop_cont_eval_free_pool_bb15_in/2 
* Loop 19: loop_cont_eval_free_pool_bb15_in(C,A) [C=5] 
* Loop 20: loop_cont_eval_free_pool_bb15_in(C,A) [C=5] 

### Ranking functions of CR loop_cont_eval_free_pool_bb15_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_free_pool_bb15_in(C,A) 


### Resulting Chains:loop_cont_eval_free_pool_bb15_in(C,A) 
* [20]
* [19]...


### Merging Chains  loop_cont_eval_free_pool_bb15_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_free_pool_bb14_in/1 
* CE 9 is refined into CE [23,24,25] 


#### Refined cost equations eval_free_pool_bb14_in/1 
* CE 23: eval_free_pool_bb14_in(B) = 1+ eval_free_pool_bb15_in(C):1+ loop_cont_eval_free_pool_bb15_in(D,B):1
     [D=5,C=5] 
* CE 24: eval_free_pool_bb14_in(B) = 1+ eval_free_pool_bb15_in(C):1+ loop_cont_eval_free_pool_bb15_in(D,B):2
     [D=5,C=5] 
* CE 25: eval_free_pool_bb14_in(B) = 1+ eval_free_pool_bb15_in(C):2
     [] 

### Cost equations --> "Loop" of eval_free_pool_bb14_in/1 
* CEs [24,25] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of eval_free_pool_bb14_in/1 
* Loop 21: eval_free_pool_bb14_in(B) [] 
* Loop 22: eval_free_pool_bb14_in(B) [] 

### Ranking functions of CR eval_free_pool_bb14_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb14_in(B) 


### Resulting Chains:eval_free_pool_bb14_in(B) 
* [22]
* [21]...


### Merging Chains  eval_free_pool_bb14_in/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_free_pool_bb4_in/1 
* CE 7 is refined into CE [26] 
* CE 6 is refined into CE [27] 


#### Refined cost equations eval_free_pool_bb4_in/1 
* CE 26: eval_free_pool_bb4_in(B) = 0
     [B=3] 
* CE 27: eval_free_pool_bb4_in(B) = 1+ eval_free_pool_bb4_in(B)
     [] 

### Cost equations --> "Loop" of eval_free_pool_bb4_in/1 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 

#### Loops of eval_free_pool_bb4_in/1 
* Loop 23: eval_free_pool_bb4_in(B)->  eval_free_pool_bb4_in(B)
                  [] 
* Loop 24: eval_free_pool_bb4_in(B) [B=3] 

### Ranking functions of CR eval_free_pool_bb4_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb4_in(B) 


### Resulting Chains:eval_free_pool_bb4_in(B) 
* [[23]]...
* [[23],24]
* [24]


### Merging Chains  eval_free_pool_bb4_in/1 into  External patterns of execution 
* [[24],[24,[23]]] --> 1 
* [[[23]]] --> 2 


### Specialization of cost equations eval_free_pool_bb9_in/1 
* CE 11 is refined into CE [28] 
* CE 10 is refined into CE [29] 


#### Refined cost equations eval_free_pool_bb9_in/1 
* CE 28: eval_free_pool_bb9_in(B) = 0
     [B=2] 
* CE 29: eval_free_pool_bb9_in(B) = 1+ eval_free_pool_bb9_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_free_pool_bb9_in/1 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of eval_free_pool_bb9_in/1 
* Loop 25: eval_free_pool_bb9_in(B)->  eval_free_pool_bb9_in(B')
                  [B'=2,B=2] 
* Loop 26: eval_free_pool_bb9_in(B) [B=2] 

### Ranking functions of CR eval_free_pool_bb9_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb9_in(B) 


### Resulting Chains:eval_free_pool_bb9_in(B) 
* [[25]]...
* [[25],26]
* [26]


### Merging Chains  eval_free_pool_bb9_in/1 into  External patterns of execution 
* [[26],[26,[25]]] --> 1 
* [[[25]]] --> 2 


### Specialization of cost equations loop_cont_eval_free_pool_bb4_in/2 
* CE 8 is refined into CE [30,31,32] 


#### Refined cost equations loop_cont_eval_free_pool_bb4_in/2 
* CE 30: loop_cont_eval_free_pool_bb4_in(C,A) = 1+ eval_free_pool_bb9_in(D):1+ eval_free_pool_bb14_in(A):1
     [D=2,C=3] 
* CE 31: loop_cont_eval_free_pool_bb4_in(C,A) = 1+ eval_free_pool_bb9_in(D):1+ eval_free_pool_bb14_in(A):2
     [D=2,C=3] 
* CE 32: loop_cont_eval_free_pool_bb4_in(C,A) = 1+ eval_free_pool_bb9_in(D):2
     [D=2,C=3] 

### Cost equations --> "Loop" of loop_cont_eval_free_pool_bb4_in/2 
* CEs [31,32] --> Loop 27 
* CEs [30] --> Loop 28 

#### Loops of loop_cont_eval_free_pool_bb4_in/2 
* Loop 27: loop_cont_eval_free_pool_bb4_in(C,A) [C=3] 
* Loop 28: loop_cont_eval_free_pool_bb4_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_free_pool_bb4_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_free_pool_bb4_in(C,A) 


### Resulting Chains:loop_cont_eval_free_pool_bb4_in(C,A) 
* [28]
* [27]...


### Merging Chains  loop_cont_eval_free_pool_bb4_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_free_pool_bb2_in/1 
* CE 4 is refined into CE [33,34,35] 
* CE 5 is refined into CE [36,37] 


#### Refined cost equations eval_free_pool_bb2_in/1 
* CE 33: eval_free_pool_bb2_in(B) = 1+ eval_free_pool_bb4_in(C):1+ loop_cont_eval_free_pool_bb4_in(D,B):1
     [D=3,C=3] 
* CE 34: eval_free_pool_bb2_in(B) = 1+ eval_free_pool_bb4_in(C):1+ loop_cont_eval_free_pool_bb4_in(D,B):2
     [D=3,C=3] 
* CE 35: eval_free_pool_bb2_in(B) = 1+ eval_free_pool_bb4_in(C):2
     [] 
* CE 36: eval_free_pool_bb2_in(B) = 0+ eval_free_pool_bb14_in(B):1
     [] 
* CE 37: eval_free_pool_bb2_in(B) = 0+ eval_free_pool_bb14_in(B):2
     [] 

### Cost equations --> "Loop" of eval_free_pool_bb2_in/1 
* CEs [34,35,37] --> Loop 29 
* CEs [33,36] --> Loop 30 

#### Loops of eval_free_pool_bb2_in/1 
* Loop 29: eval_free_pool_bb2_in(B) [] 
* Loop 30: eval_free_pool_bb2_in(B) [] 

### Ranking functions of CR eval_free_pool_bb2_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb2_in(B) 


### Resulting Chains:eval_free_pool_bb2_in(B) 
* [30]
* [29]...


### Merging Chains  eval_free_pool_bb2_in/1 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_free_pool_bb0_in/1 
* CE 3 is refined into CE [38,39] 


#### Refined cost equations eval_free_pool_bb0_in/1 
* CE 38: eval_free_pool_bb0_in(B) = 0+ eval_free_pool_bb2_in(B):1
     [] 
* CE 39: eval_free_pool_bb0_in(B) = 0+ eval_free_pool_bb2_in(B):2
     [] 

### Cost equations --> "Loop" of eval_free_pool_bb0_in/1 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 

#### Loops of eval_free_pool_bb0_in/1 
* Loop 31: eval_free_pool_bb0_in(B) [] 
* Loop 32: eval_free_pool_bb0_in(B) [] 

### Ranking functions of CR eval_free_pool_bb0_in(B) 

#### Partial ranking functions of CR eval_free_pool_bb0_in(B) 


### Resulting Chains:eval_free_pool_bb0_in(B) 
* [32]
* [31]...


### Merging Chains  eval_free_pool_bb0_in/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_free_pool_start/2 
* CE 2 is refined into CE [40,41] 


#### Refined cost equations eval_free_pool_start/2 
* CE 40: eval_free_pool_start(V_pool_id,B) = 0+ eval_free_pool_bb0_in(B):1
     [] 
* CE 41: eval_free_pool_start(V_pool_id,B) = 0+ eval_free_pool_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_free_pool_start/2 
* CEs [41] --> Loop 33 
* CEs [40] --> Loop 34 

#### Loops of eval_free_pool_start/2 
* Loop 33: eval_free_pool_start(V_pool_id,B) [] 
* Loop 34: eval_free_pool_start(V_pool_id,B) [] 

### Ranking functions of CR eval_free_pool_start(V_pool_id,B) 

#### Partial ranking functions of CR eval_free_pool_start(V_pool_id,B) 


### Resulting Chains:eval_free_pool_start(V_pool_id,B) 
* [34]
* [33]...


### Merging Chains  eval_free_pool_start/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_free_pool_bb15_in(B) -> [eval_free_pool_bb15_in(B')] 
1
#### Cost of phase [15]:eval_free_pool_bb15_in(B) -> [eval_free_pool_bb15_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_free_pool_bb15_in(B) -> [eval_free_pool_bb15_in(B')] 
1*it(15)+0
#### Cost of chains of eval_free_pool_bb15_in(B):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=5] 

* Chain [16]: 0
  with precondition: [B=5] 


#### Cost of loops [17] 

 * loop 17:eval_free_pool_bb18_in(B) -> [eval_free_pool_bb18_in(B')] 
1
#### Cost of phase [17]:eval_free_pool_bb18_in(B) -> [eval_free_pool_bb18_in(B')] 
1*it(17)+0
#### Cost of phase [17]:eval_free_pool_bb18_in(B) -> [eval_free_pool_bb18_in(B')] 
1*it(17)+0
#### Cost of chains of eval_free_pool_bb18_in(B):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [B=4] 

* Chain [[17],18]: 1*it(17)+0
  with precondition: [B=4] 

* Chain [18]: 0
  with precondition: [B=4] 


#### Cost of chains of loop_cont_eval_free_pool_bb15_in(C,A):
* Chain [20]: 1*s(3)+1
  with precondition: [C=5] 

* Chain [19]...: 1*s(4)+1
  with precondition: [C=5] 


#### Cost of chains of eval_free_pool_bb14_in(B):
* Chain [22]: 2*s(5)+2
  with precondition: [] 

* Chain [21]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of loops [23] 

 * loop 23:eval_free_pool_bb4_in(B) -> [eval_free_pool_bb4_in(B')] 
1
#### Cost of phase [23]:eval_free_pool_bb4_in(B) -> [eval_free_pool_bb4_in(B')] 
1*it(23)+0
#### Cost of phase [23]:eval_free_pool_bb4_in(B) -> [eval_free_pool_bb4_in(B')] 
1*it(23)+0
#### Cost of chains of eval_free_pool_bb4_in(B):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=3] 

* Chain [24]: 0
  with precondition: [B=3] 


#### Cost of loops [25] 

 * loop 25:eval_free_pool_bb9_in(B) -> [eval_free_pool_bb9_in(B')] 
1
#### Cost of phase [25]:eval_free_pool_bb9_in(B) -> [eval_free_pool_bb9_in(B')] 
1*it(25)+0
#### Cost of phase [25]:eval_free_pool_bb9_in(B) -> [eval_free_pool_bb9_in(B')] 
1*it(25)+0
#### Cost of chains of eval_free_pool_bb9_in(B):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [B=2] 

* Chain [[25],26]: 1*it(25)+0
  with precondition: [B=2] 

* Chain [26]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_free_pool_bb4_in(C,A):
* Chain [28]: 3*s(12)+3
  with precondition: [C=3] 

* Chain [27]...: 1*aux(6)+0
  with precondition: [C=3] 


#### Cost of chains of eval_free_pool_bb2_in(B):
* Chain [30]: 1*aux(7)+0
  with precondition: [] 

* Chain [29]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_free_pool_bb0_in(B):
* Chain [32]: 1*s(24)+0
  with precondition: [] 

* Chain [31]...: 1*s(25)+0
  with precondition: [] 


#### Cost of chains of eval_free_pool_start(V_pool_id,B):
* Chain [34]: 1*s(26)+0
  with precondition: [] 

* Chain [33]...: 1*s(27)+0
  with precondition: [] 


Closed-form bounds of eval_free_pool_start(V_pool_id,B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_free_pool_start(V_pool_id,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 59 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 48 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 210 ms.

