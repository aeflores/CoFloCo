Warning: Ignored call to eval_mp_smul_stop/1 in equation loop_cont_eval_mp_smul_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mp_smul_bb1_in/3]
1. non_recursive  : [loop_cont_eval_mp_smul_bb1_in/2]
2. non_recursive  : [eval_mp_smul_bb0_in/2]
3. non_recursive  : [eval_mp_smul_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mp_smul_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mp_smul_bb0_in/2
3. SCC is partially evaluated into eval_mp_smul_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_smul_bb1_in/3 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


#### Refined cost equations eval_mp_smul_bb1_in/3 
* CE 6: eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) = 0
     [V_i_0>=V__munit_prec,V_i_0>=0,B=2] 
* CE 7: eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) = 1+ eval_mp_smul_bb1_in(C,D,E)
     [V__munit_prec>=V_i_0+1,V_i_0>=0,V_i_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_mp_smul_bb1_in/3 
* CEs [7] --> Loop 5 
* CEs [6] --> Loop 6 

#### Loops of eval_mp_smul_bb1_in/3 
* Loop 5: eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B)->  eval_mp_smul_bb1_in(V__munit_prec',V_i_0',B')
                  [V__munit_prec>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 6: eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) [V_i_0>=V__munit_prec,V_i_0>=0,B=2] 

### Ranking functions of CR eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) 

#### Partial ranking functions of CR eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) 


### Resulting Chains:eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) 
* [[5]]...
* [[5],6]
* [6]


### Merging Chains  eval_mp_smul_bb1_in/3 into  External patterns of execution 
* [[6]] --> 1 
* [[6,[5]]] --> 2 
* [[[5]]] --> 3 


### Specialization of cost equations eval_mp_smul_bb0_in/2 
* CE 3 is refined into CE [8,9,10] 


#### Refined cost equations eval_mp_smul_bb0_in/2 
* CE 8: eval_mp_smul_bb0_in(V__munit_prec,B) = 1+ eval_mp_smul_bb1_in(V__munit_prec,C,D):1
     [0>=V__munit_prec,D=2,C=0] 
* CE 9: eval_mp_smul_bb0_in(V__munit_prec,B) = 1+ eval_mp_smul_bb1_in(V__munit_prec,C,D):2
     [V__munit_prec>=1,D=2,C=0] 
* CE 10: eval_mp_smul_bb0_in(V__munit_prec,B) = 1+ eval_mp_smul_bb1_in(V__munit_prec,C,D):3
     [V__munit_prec>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_mp_smul_bb0_in/2 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

#### Loops of eval_mp_smul_bb0_in/2 
* Loop 7: eval_mp_smul_bb0_in(V__munit_prec,B) [V__munit_prec>=1] 
* Loop 8: eval_mp_smul_bb0_in(V__munit_prec,B) [V__munit_prec>=1] 
* Loop 9: eval_mp_smul_bb0_in(V__munit_prec,B) [0>=V__munit_prec] 

### Ranking functions of CR eval_mp_smul_bb0_in(V__munit_prec,B) 

#### Partial ranking functions of CR eval_mp_smul_bb0_in(V__munit_prec,B) 


### Resulting Chains:eval_mp_smul_bb0_in(V__munit_prec,B) 
* [9]
* [8]
* [7]...


### Merging Chains  eval_mp_smul_bb0_in/2 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 
* [[7]] --> 3 


### Specialization of cost equations eval_mp_smul_start/3 
* CE 2 is refined into CE [11,12,13] 


#### Refined cost equations eval_mp_smul_start/3 
* CE 11: eval_mp_smul_start(V_multiplier,V__munit_prec,B) = 0+ eval_mp_smul_bb0_in(V__munit_prec,B):1
     [0>=V__munit_prec] 
* CE 12: eval_mp_smul_start(V_multiplier,V__munit_prec,B) = 0+ eval_mp_smul_bb0_in(V__munit_prec,B):2
     [V__munit_prec>=1] 
* CE 13: eval_mp_smul_start(V_multiplier,V__munit_prec,B) = 0+ eval_mp_smul_bb0_in(V__munit_prec,B):3
     [V__munit_prec>=1] 

### Cost equations --> "Loop" of eval_mp_smul_start/3 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_mp_smul_start/3 
* Loop 10: eval_mp_smul_start(V_multiplier,V__munit_prec,B) [V__munit_prec>=1] 
* Loop 11: eval_mp_smul_start(V_multiplier,V__munit_prec,B) [V__munit_prec>=1] 
* Loop 12: eval_mp_smul_start(V_multiplier,V__munit_prec,B) [0>=V__munit_prec] 

### Ranking functions of CR eval_mp_smul_start(V_multiplier,V__munit_prec,B) 

#### Partial ranking functions of CR eval_mp_smul_start(V_multiplier,V__munit_prec,B) 


### Resulting Chains:eval_mp_smul_start(V_multiplier,V__munit_prec,B) 
* [12]
* [11]
* [10]...


### Merging Chains  eval_mp_smul_start/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) -> [eval_mp_smul_bb1_in(V__munit_prec',V_i_0',B')] 
1
#### Cost of phase [5]:eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) -> [eval_mp_smul_bb1_in(V__munit_prec',V_i_0',B')] 
1*it(5)+0
#### Cost of phase [5]:eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B) -> [eval_mp_smul_bb1_in(V__munit_prec',V_i_0',B')] 
1*it(5)+0
#### Cost of chains of eval_mp_smul_bb1_in(V__munit_prec,V_i_0,B):
* Chain [[5]]...: 1*it(5)+0
  with precondition: [V__munit_prec>=V_i_0+1,V_i_0>=0,B=2] 

* Chain [[5],6]: 1*it(5)+0
  with precondition: [B=2,V_i_0>=0,V__munit_prec>=V_i_0+1] 

* Chain [6]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V__munit_prec] 


#### Cost of chains of eval_mp_smul_bb0_in(V__munit_prec,B):
* Chain [9]: 1
  with precondition: [0>=V__munit_prec] 

* Chain [8]: 1*s(1)+1
  with precondition: [V__munit_prec>=1] 

* Chain [7]...: 1*s(2)+1
  with precondition: [V__munit_prec>=1] 


#### Cost of chains of eval_mp_smul_start(V_multiplier,V__munit_prec,B):
* Chain [12]: 1
  with precondition: [0>=V__munit_prec] 

* Chain [11]: 1*s(3)+1
  with precondition: [V__munit_prec>=1] 

* Chain [10]...: 1*s(4)+1
  with precondition: [V__munit_prec>=1] 


Closed-form bounds of eval_mp_smul_start(V_multiplier,V__munit_prec,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V__munit_prec] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [11] with precondition: [V__munit_prec>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [10]... with precondition: [V__munit_prec>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_smul_start(V_multiplier,V__munit_prec,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 35 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 120 ms.

