Warning: Ignored call to eval_BitrateIndex_stop/1 in equation eval_BitrateIndex_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BitrateIndex_bb1_in/7]
1. non_recursive  : [eval_BitrateIndex_bb5_in/1]
2. non_recursive  : [eval_BitrateIndex_9/1]
3. non_recursive  : [eval_BitrateIndex_8/3]
4. non_recursive  : [loop_cont_eval_BitrateIndex_bb1_in/4]
5. non_recursive  : [eval_BitrateIndex_bb0_in/3]
6. non_recursive  : [eval_BitrateIndex_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BitrateIndex_bb1_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_BitrateIndex_bb1_in/4
5. SCC is partially evaluated into eval_BitrateIndex_bb0_in/3
6. SCC is partially evaluated into eval_BitrateIndex_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BitrateIndex_bb1_in/7 
* CE 13 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 11 is discarded (unfeasible) 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 8 is discarded (unfeasible) 
* CE 4 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 


#### Refined cost equations eval_BitrateIndex_bb1_in/7 
* CE 16: eval_BitrateIndex_bb1_in(A,B,C,D,E,A,B) = 0
     [D>=15,C>=0,1>=C,E=3] 
* CE 17: eval_BitrateIndex_bb1_in(A,B,C,D,E,A,B) = 0
     [D>=0,15>=D,E=3,C=1] 
* CE 18: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 0
     [V_index_0>=15,V_found_0>=0,1>=V_found_0,B=2] 
* CE 19: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 0
     [V_index_0>=0,15>=V_index_0,B=2,V_found_0=1] 
* CE 20: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,E,V_index_0,B,C,D)
     [V_index_0>=0,14>=V_index_0,E=1,V_found_0=0] 
* CE 21: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,E,F,B,C,D)
     [V_index_0>=0,14>=V_index_0,V_index_0+1=F,E=1,V_found_0=0] 
* CE 22: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,E,V_index_0,B,C,D)
     [V_index_0>=0,14>=V_index_0,E=0,V_found_0=0] 
* CE 23: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,E,F,B,C,D)
     [V_index_0>=0,14>=V_index_0,V_index_0+1=F,E=0,V_found_0=0] 

### Cost equations --> "Loop" of eval_BitrateIndex_bb1_in/7 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [16] --> Loop 19 
* CEs [18] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [19] --> Loop 22 

#### Loops of eval_BitrateIndex_bb1_in/7 
* Loop 15: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D)->  eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0',V_index_0,B,C,D)
                  [V_index_0>=0,14>=V_index_0,V_found_0'=1,V_found_0=0] 
* Loop 16: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D)->  eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0',V_index_0',B,C,D)
                  [V_index_0>=0,14>=V_index_0,V_index_0+1=V_index_0',V_found_0'=1,V_found_0=0] 
* Loop 17: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D)->  eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0',V_index_0,B,C,D)
                  [V_index_0>=0,14>=V_index_0,V_found_0'=0,V_found_0=0] 
* Loop 18: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D)->  eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0',V_index_0',B,C,D)
                  [V_index_0>=0,14>=V_index_0,V_index_0+1=V_index_0',V_found_0'=0,V_found_0=0] 
* Loop 19: eval_BitrateIndex_bb1_in(A,B,C,D,E,A,B) [D>=15,C>=0,1>=C,E=3] 
* Loop 20: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) [V_index_0>=15,V_found_0>=0,1>=V_found_0,B=2] 
* Loop 21: eval_BitrateIndex_bb1_in(A,B,C,D,E,A,B) [D>=0,15>=D,E=3,C=1] 
* Loop 22: eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) [V_index_0>=0,15>=V_index_0,B=2,V_found_0=1] 

### Ranking functions of CR eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) 

#### Partial ranking functions of CR eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) 
* Partial RF of phase [17,18]:
  - RF of loop [18:1]:
    -V_index_0+15


### Resulting Chains:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) 
* [[17,18]]...
* [[17,18],20]
* [[17,18],19]
* [[17,18],16,22]
* [[17,18],16,21]
* [[17,18],16,20]
* [[17,18],16,19]
* [[17,18],15,22]
* [[17,18],15,21]
* [16,22]
* [16,21]
* [15,22]
* [15,21]


### Merging Chains  eval_BitrateIndex_bb1_in/7 into  External patterns of execution 
* [[22,15],[22,16],[22,15,[17,18]],[20,16,[17,18]],[22,16,[17,18]],[20,[17,18]]] --> 1 
* [[21,15],[21,16],[21,15,[17,18]],[19,16,[17,18]],[21,16,[17,18]],[19,[17,18]]] --> 2 
* [[[17,18]]] --> 3 


### Specialization of cost equations loop_cont_eval_BitrateIndex_bb1_in/4 
* CE 15 is refined into CE [24] 
* CE 14 is refined into CE [25] 


#### Refined cost equations loop_cont_eval_BitrateIndex_bb1_in/4 
* CE 24: loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) = 0
     [E=3] 
* CE 25: loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_BitrateIndex_bb1_in/4 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of loop_cont_eval_BitrateIndex_bb1_in/4 
* Loop 23: loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) [E=3] 
* Loop 24: loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) [E=2] 

### Ranking functions of CR loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) 


### Resulting Chains:loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C) 
* [24]
* [23]


### Merging Chains  loop_cont_eval_BitrateIndex_bb1_in/4 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_BitrateIndex_bb0_in/3 
* CE 3 is refined into CE [26,27,28] 


#### Refined cost equations eval_BitrateIndex_bb0_in/3 
* CE 26: eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,C,D,E,F,G):1+ loop_cont_eval_BitrateIndex_bb1_in(H,F,G,B):1
     [H=2,E=2,D=0,C=0] 
* CE 27: eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,C,D,E,V_bRate,V_samplerate):2+ loop_cont_eval_BitrateIndex_bb1_in(F,V_bRate,V_samplerate,B):2
     [F=3,E=3,D=0,C=0] 
* CE 28: eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) = 1+ eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,C,D,E,F,G):3
     [D=0,C=0] 

### Cost equations --> "Loop" of eval_BitrateIndex_bb0_in/3 
* CEs [28] --> Loop 25 
* CEs [26,27] --> Loop 26 

#### Loops of eval_BitrateIndex_bb0_in/3 
* Loop 25: eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) [] 
* Loop 26: eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) [] 

### Ranking functions of CR eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) 

#### Partial ranking functions of CR eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) 


### Resulting Chains:eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B) 
* [26]
* [25]...


### Merging Chains  eval_BitrateIndex_bb0_in/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_BitrateIndex_start/4 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_BitrateIndex_start/4 
* CE 29: eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) = 0+ eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B):1
     [] 
* CE 30: eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) = 0+ eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B):2
     [] 

### Cost equations --> "Loop" of eval_BitrateIndex_start/4 
* CEs [30] --> Loop 27 
* CEs [29] --> Loop 28 

#### Loops of eval_BitrateIndex_start/4 
* Loop 27: eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) [] 
* Loop 28: eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) [] 

### Ranking functions of CR eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) 

#### Partial ranking functions of CR eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) 


### Resulting Chains:eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B) 
* [28]
* [27]...


### Merging Chains  eval_BitrateIndex_start/4 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17,18] 

 * loop 17:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1
 * loop 18:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1
#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of phase [17,18]:eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D) -> [eval_BitrateIndex_bb1_in(V_bRate',V_samplerate',V_found_0',V_index_0',B',C',D')] 
1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15
it(18) =< -V_index_0+V_index_0'

#### Cost of chains of eval_BitrateIndex_bb1_in(V_bRate,V_samplerate,V_found_0,V_index_0,B,C,D):
* Chain [[17,18]]...: 1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15

  with precondition: [V_found_0=0,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],20]: 1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15

  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],19]: 1*it(17)+1*it(18)+0
  Such that:it(18) =< -V_index_0+15

  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],16,22]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],16,21]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],16,20]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],16,19]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],15,22]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [[17,18],15,21]: 1*it(17)+1*it(18)+1
  Such that:it(18) =< -V_index_0+14

  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 

* Chain [16,22]: 1
  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [16,21]: 1
  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 

* Chain [15,22]: 1
  with precondition: [V_found_0=0,B=2,14>=V_index_0,V_index_0>=0] 

* Chain [15,21]: 1
  with precondition: [V_found_0=0,B=3,V_bRate=C,V_samplerate=D,14>=V_index_0,V_index_0>=0] 


#### Cost of chains of loop_cont_eval_BitrateIndex_bb1_in(E,A,B,C):
* Chain [24]: 0
  with precondition: [E=2] 

* Chain [23]: 0
  with precondition: [E=3] 


#### Cost of chains of eval_BitrateIndex_bb0_in(V_bRate,V_samplerate,B):
* Chain [26]: 1*aux(5)+0
  with precondition: [] 

* Chain [25]...: 1*s(25)+1*s(26)+1
  Such that:s(25) =< 15

  with precondition: [] 


#### Cost of chains of eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B):
* Chain [28]: 1*s(27)+0
  with precondition: [] 

* Chain [27]...: 1*s(28)+1*s(29)+1
  Such that:s(28) =< 15

  with precondition: [] 


Closed-form bounds of eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_BitrateIndex_start(V_bRate,V_version,V_samplerate,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 52 ms.
* Invariants computed in 208 ms.
   - Backward Invariants 119 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 206 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 198 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 23 ms.
   - Chain cost structures 95 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 805 ms.

