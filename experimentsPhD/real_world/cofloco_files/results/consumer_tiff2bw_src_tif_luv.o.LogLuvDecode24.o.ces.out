WARNING: Excluded non-linear constraints:[A-D*C>=0,A-D*C+1=<D]
WARNING: Excluded non-linear constraints:[A-D*C>=0,A-D*C+1=< -D]
WARNING: Excluded non-linear constraints:[-A+D*C>=0,-A+D*C+1=<D]
WARNING: Excluded non-linear constraints:[-A+D*C>=0,-A+D*C+1=< -D]
WARNING: Excluded non-linear constraints:[A-C*D>=0,A-C*D+1=<C]
WARNING: Excluded non-linear constraints:[A-C*D>=0,A-C*D+1=< -C]
WARNING: Excluded non-linear constraints:[-A+C*D>=0,-A+C*D+1=<C]
WARNING: Excluded non-linear constraints:[-A+C*D>=0,-A+C*D+1=< -C]
Warning: Ignored call to eval_LogLuvDecode24_stop/1 in equation eval_LogLuvDecode24_40/1 
Warning: Ignored call to eval_LogLuvDecode24_stop/1 in equation eval_LogLuvDecode24_42/1 
Warning: Ignored call to eval_LogLuvDecode24_stop/1 in equation eval_LogLuvDecode24_44/1 
Warning: Ignored call to eval_LogLuvDecode24_stop/1 in equation eval_LogLuvDecode24_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_LogLuvDecode24_40/1]
1. non_recursive  : [eval_LogLuvDecode24_39/1]
2. non_recursive  : [eval_LogLuvDecode24_42/1]
3. non_recursive  : [eval_LogLuvDecode24_41/1]
4. non_recursive  : [eval_LogLuvDecode24_44/1]
5. non_recursive  : [eval_LogLuvDecode24_43/1]
6. recursive  : [eval_LogLuvDecode24_bb7_in/6]
7. non_recursive  : [eval_LogLuvDecode24_bb12_in/1]
8. non_recursive  : [eval_LogLuvDecode24_36/1]
9. non_recursive  : [eval_LogLuvDecode24_35/3]
10. non_recursive  : [eval_LogLuvDecode24_38/1]
11. non_recursive  : [eval_LogLuvDecode24_37/1]
12. non_recursive  : [loop_cont_eval_LogLuvDecode24_bb7_in/4]
13. non_recursive  : [eval_LogLuvDecode24_13/2]
14. non_recursive  : [eval_LogLuvDecode24_12/3]
15. non_recursive  : [eval_LogLuvDecode24_bb6_in/2]
16. non_recursive  : [eval_LogLuvDecode24_bb0_in/2]
17. non_recursive  : [eval_LogLuvDecode24_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_LogLuvDecode24_bb7_in/6
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_LogLuvDecode24_bb7_in/4
13. SCC is partially evaluated into eval_LogLuvDecode24_13/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_LogLuvDecode24_bb0_in/2
17. SCC is partially evaluated into eval_LogLuvDecode24_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_LogLuvDecode24_bb7_in/6 
* CE 15 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 12 is refined into CE [23] 


#### Refined cost equations eval_LogLuvDecode24_bb7_in/6 
* CE 19: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) = 0
     [V_i_0>=V_8,V_i_0>=0,B=3] 
* CE 20: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) = 0
     [V_i_0>=0,0>=V_cc_0,B=3] 
* CE 21: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) = 0
     [V_i_0>=V_8,V_i_0>=0,V_i_0+D=V_8,B=2] 
* CE 22: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) = 0
     [V_i_0>=0,0>=V_cc_0,V_i_0+D=V_8,B=2] 
* CE 23: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) = 1+ eval_LogLuvDecode24_bb7_in(V_8,E,F,B,C,D)
     [V_8>=V_i_0+1,V_cc_0>=1,V_i_0>=0,V_cc_0=F+3,V_i_0+1=E] 

### Cost equations --> "Loop" of eval_LogLuvDecode24_bb7_in/6 
* CEs [23] --> Loop 11 
* CEs [19] --> Loop 12 
* CEs [20] --> Loop 13 
* CEs [21] --> Loop 14 
* CEs [22] --> Loop 15 

#### Loops of eval_LogLuvDecode24_bb7_in/6 
* Loop 11: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D)->  eval_LogLuvDecode24_bb7_in(V_8,V_i_0',V_cc_0',B,C,D)
                  [V_8>=V_i_0+1,V_cc_0>=1,V_i_0>=0,V_cc_0=V_cc_0'+3,V_i_0+1=V_i_0'] 
* Loop 12: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) [V_i_0>=V_8,V_i_0>=0,B=3] 
* Loop 13: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) [V_i_0>=0,0>=V_cc_0,B=3] 
* Loop 14: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) [V_i_0>=V_8,V_i_0>=0,V_i_0+D=V_8,B=2] 
* Loop 15: eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) [V_i_0>=0,0>=V_cc_0,V_i_0+D=V_8,B=2] 

### Ranking functions of CR eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) 
* RF of phase [11]: [V_8-V_i_0,V_cc_0/3]

#### Partial ranking functions of CR eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_8-V_i_0
    V_cc_0/3


### Resulting Chains:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) 
* [[11],15]
* [[11],14]
* [[11],13]
* [[11],12]
* [15]
* [14]
* [13]
* [12]


### Merging Chains  eval_LogLuvDecode24_bb7_in/6 into  External patterns of execution 
* [[14,[11]]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 
* [[15,[11]]] --> 4 
* [[13]] --> 5 
* [[13,[11]]] --> 6 
* [[12]] --> 7 
* [[12,[11]]] --> 8 


### Specialization of cost equations loop_cont_eval_LogLuvDecode24_bb7_in/4 
* CE 18 is refined into CE [24] 
* CE 17 is refined into CE [25] 


#### Refined cost equations loop_cont_eval_LogLuvDecode24_bb7_in/4 
* CE 24: loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) = 0
     [F=3] 
* CE 25: loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_LogLuvDecode24_bb7_in/4 
* CEs [24] --> Loop 16 
* CEs [25] --> Loop 17 

#### Loops of loop_cont_eval_LogLuvDecode24_bb7_in/4 
* Loop 16: loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) [F=3] 
* Loop 17: loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) [F=2] 

### Ranking functions of CR loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) 


### Resulting Chains:loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C) 
* [17]
* [16]


### Merging Chains  loop_cont_eval_LogLuvDecode24_bb7_in/4 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_LogLuvDecode24_13/2 
* CE 11 is refined into CE [26,27,28,29,30,31,32,33] 


#### Refined cost equations eval_LogLuvDecode24_13/2 
* CE 26: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):1+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,I,B):1
     [D+2>=3*V_8,V_8>=1,I=0,H=2,G=0,E=2,C=0] 
* CE 27: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,V_8):2+ loop_cont_eval_LogLuvDecode24_bb7_in(G,F,V_8,B):1
     [0>=D,G=2,E=2,C=0] 
* CE 28: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,V_8):3+ loop_cont_eval_LogLuvDecode24_bb7_in(G,F,V_8,B):1
     [0>=V_8,G=2,E=2,C=0] 
* CE 29: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):4+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,G,B):1
     [3*V_8>=3*G+D,D+3*G+2>=3*V_8,V_8>=G+1,G>=0,H=2,E=2,C=0] 
* CE 30: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):5+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,G,B):2
     [0>=D,H=3,E=3,C=0] 
* CE 31: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):6+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,G,B):2
     [3*V_8>=D,D>=1,V_8>=1,H=3,E=3,C=0] 
* CE 32: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):7+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,G,B):2
     [0>=V_8,H=3,E=3,C=0] 
* CE 33: eval_LogLuvDecode24_13(V_8,B) = 1+ eval_LogLuvDecode24_bb7_in(V_8,C,D,E,F,G):8+ loop_cont_eval_LogLuvDecode24_bb7_in(H,F,G,B):2
     [D+2>=3*V_8,V_8>=1,H=3,E=3,C=0] 

### Cost equations --> "Loop" of eval_LogLuvDecode24_13/2 
* CEs [26,27,28,29,30,31,32,33] --> Loop 18 

#### Loops of eval_LogLuvDecode24_13/2 
* Loop 18: eval_LogLuvDecode24_13(V_8,B) [] 

### Ranking functions of CR eval_LogLuvDecode24_13(V_8,B) 

#### Partial ranking functions of CR eval_LogLuvDecode24_13(V_8,B) 


### Resulting Chains:eval_LogLuvDecode24_13(V_8,B) 
* [18]


### Merging Chains  eval_LogLuvDecode24_13/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_LogLuvDecode24_bb0_in/2 
* CE 3 is refined into CE [34] 
* CE 4 is refined into CE [35] 
* CE 5 is refined into CE [36] 
* CE 6 is refined into CE [37] 
* CE 7 is refined into CE [38] 
* CE 8 is refined into CE [39] 
* CE 9 is refined into CE [40] 
* CE 10 is refined into CE [41] 


#### Refined cost equations eval_LogLuvDecode24_bb0_in/2 
* CE 34: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0+ eval_LogLuvDecode24_13(C,B):1
     [C=0,V_occ=0] 
* CE 35: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0+ eval_LogLuvDecode24_13(C,B):1
     [C>=0,V_occ>=1] 
* CE 36: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0+ eval_LogLuvDecode24_13(C,B):1
     [V_occ>=1,0>=C] 
* CE 37: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0+ eval_LogLuvDecode24_13(C,B):1
     [0>=C,0>=V_occ+1] 
* CE 38: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0+ eval_LogLuvDecode24_13(C,B):1
     [C>=0,0>=V_occ+1] 
* CE 39: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0
     [] 
* CE 40: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0
     [] 
* CE 41: eval_LogLuvDecode24_bb0_in(V_occ,B) = 0
     [0>=V_occ+1] 

### Cost equations --> "Loop" of eval_LogLuvDecode24_bb0_in/2 
* CEs [34,35,36,37,38,39,40,41] --> Loop 19 

#### Loops of eval_LogLuvDecode24_bb0_in/2 
* Loop 19: eval_LogLuvDecode24_bb0_in(V_occ,B) [] 

### Ranking functions of CR eval_LogLuvDecode24_bb0_in(V_occ,B) 

#### Partial ranking functions of CR eval_LogLuvDecode24_bb0_in(V_occ,B) 


### Resulting Chains:eval_LogLuvDecode24_bb0_in(V_occ,B) 
* [19]


### Merging Chains  eval_LogLuvDecode24_bb0_in/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_LogLuvDecode24_start/3 
* CE 2 is refined into CE [42] 


#### Refined cost equations eval_LogLuvDecode24_start/3 
* CE 42: eval_LogLuvDecode24_start(V_occ,V_s,B) = 0+ eval_LogLuvDecode24_bb0_in(V_occ,B):1
     [] 

### Cost equations --> "Loop" of eval_LogLuvDecode24_start/3 
* CEs [42] --> Loop 20 

#### Loops of eval_LogLuvDecode24_start/3 
* Loop 20: eval_LogLuvDecode24_start(V_occ,V_s,B) [] 

### Ranking functions of CR eval_LogLuvDecode24_start(V_occ,V_s,B) 

#### Partial ranking functions of CR eval_LogLuvDecode24_start(V_occ,V_s,B) 


### Resulting Chains:eval_LogLuvDecode24_start(V_occ,V_s,B) 
* [20]


### Merging Chains  eval_LogLuvDecode24_start/3 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) -> [eval_LogLuvDecode24_bb7_in(V_8',V_i_0',V_cc_0',B',C',D')] 
1
#### Cost of phase [11]:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) -> [eval_LogLuvDecode24_bb7_in(V_8',V_i_0',V_cc_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_8-V_i_0
it(11) =< V_8-V_i_0-V_8'+V_i_0'
it(11) =< V_cc_0/3
it(11) =< V_cc_0/3-V_cc_0'/3

#### Cost of phase [11]:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) -> [eval_LogLuvDecode24_bb7_in(V_8',V_i_0',V_cc_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_8-V_i_0
it(11) =< V_8-V_i_0-V_8'+V_i_0'
it(11) =< V_cc_0/3
it(11) =< V_cc_0/3-V_cc_0'/3

#### Cost of phase [11]:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) -> [eval_LogLuvDecode24_bb7_in(V_8',V_i_0',V_cc_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_8-V_i_0
it(11) =< V_8-V_i_0-V_8'+V_i_0'
it(11) =< V_cc_0/3
it(11) =< V_cc_0/3-V_cc_0'/3

#### Cost of phase [11]:eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D) -> [eval_LogLuvDecode24_bb7_in(V_8',V_i_0',V_cc_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_8-V_i_0
it(11) =< V_8-V_i_0-V_8'+V_i_0'
it(11) =< V_cc_0/3
it(11) =< V_cc_0/3-V_cc_0'/3

#### Cost of chains of eval_LogLuvDecode24_bb7_in(V_8,V_i_0,V_cc_0,B,C,D):
* Chain [[11],15]: 1*it(11)+0
  Such that:it(11) =< V_cc_0/3

  with precondition: [B=2,V_i_0>=0,D>=0,V_8>=V_i_0+D+1,V_cc_0+3*V_i_0+3*D+2>=3*V_8,3*V_8>=3*V_i_0+3*D+V_cc_0] 

* Chain [[11],14]: 1*it(11)+0
  Such that:it(11) =< V_8-V_i_0

  with precondition: [B=2,D=0,V_i_0>=0,V_8>=V_i_0+1,V_cc_0+3*V_i_0+2>=3*V_8] 

* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_cc_0/3

  with precondition: [B=3,V_i_0>=0,V_cc_0>=1,V_8>=V_i_0+1,3*V_8>=3*V_i_0+V_cc_0] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_8-V_i_0

  with precondition: [B=3,V_i_0>=0,V_8>=V_i_0+1,V_cc_0+3*V_i_0+2>=3*V_8] 

* Chain [15]: 0
  with precondition: [B=2,V_i_0+D=V_8,0>=V_cc_0,V_i_0>=0] 

* Chain [14]: 0
  with precondition: [B=2,V_i_0+D=V_8,V_i_0>=0,V_i_0>=V_8] 

* Chain [13]: 0
  with precondition: [B=3,0>=V_cc_0,V_i_0>=0] 

* Chain [12]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V_8] 


#### Cost of chains of loop_cont_eval_LogLuvDecode24_bb7_in(F,A,B,C):
* Chain [17]: 0
  with precondition: [F=2] 

* Chain [16]: 0
  with precondition: [F=3] 


#### Cost of chains of eval_LogLuvDecode24_13(V_8,B):
* Chain [18]: 4*s(1)+1
  Such that:aux(1) =< V_8
s(1) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_LogLuvDecode24_bb0_in(V_occ,B):
* Chain [19]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_LogLuvDecode24_start(V_occ,V_s,B):
* Chain [20]: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_LogLuvDecode24_start(V_occ,V_s,B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_LogLuvDecode24_start(V_occ,V_s,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 38 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 18 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 139 ms.

