Warning: Ignored call to eval_cmd_put_ht_order_stop/1 in equation eval_cmd_put_ht_order_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cmd_put_ht_order_49/6,eval_cmd_put_ht_order_50/6,eval_cmd_put_ht_order_59/7,eval_cmd_put_ht_order_60/7,eval_cmd_put_ht_order_bb5_in/3]
1. recursive  : [eval_cmd_put_ht_order_74/5,eval_cmd_put_ht_order_75/5,eval_cmd_put_ht_order_84/6,eval_cmd_put_ht_order_85/6,eval_cmd_put_ht_order_bb10_in/2]
2. non_recursive  : [eval_cmd_put_ht_order_bb14_in/1]
3. non_recursive  : [loop_cont_eval_cmd_put_ht_order_bb10_in/2]
4. non_recursive  : [loop_cont_eval_cmd_put_ht_order_bb5_in/3]
5. non_recursive  : [eval_cmd_put_ht_order_36/1]
6. non_recursive  : [eval_cmd_put_ht_order_35/1]
7. non_recursive  : [eval_cmd_put_ht_order_34/2]
8. non_recursive  : [eval_cmd_put_ht_order_29/2]
9. non_recursive  : [eval_cmd_put_ht_order_28/4]
10. non_recursive  : [eval_cmd_put_ht_order_21/1]
11. non_recursive  : [eval_cmd_put_ht_order_20/2]
12. non_recursive  : [eval_cmd_put_ht_order_19/1]
13. non_recursive  : [eval_cmd_put_ht_order_18/2]
14. non_recursive  : [eval_cmd_put_ht_order_17/1]
15. non_recursive  : [eval_cmd_put_ht_order_16/2]
16. non_recursive  : [eval_cmd_put_ht_order_14/1]
17. non_recursive  : [eval_cmd_put_ht_order_13/2]
18. non_recursive  : [eval_cmd_put_ht_order_11/1]
19. non_recursive  : [eval_cmd_put_ht_order_10/2]
20. non_recursive  : [eval_cmd_put_ht_order_8/1]
21. non_recursive  : [eval_cmd_put_ht_order_7/2]
22. non_recursive  : [eval_cmd_put_ht_order_bb2_in/1]
23. non_recursive  : [eval_cmd_put_ht_order_4/1]
24. non_recursive  : [eval_cmd_put_ht_order_3/2]
25. non_recursive  : [eval_cmd_put_ht_order_2/2]
26. non_recursive  : [eval_cmd_put_ht_order_1/3]
27. non_recursive  : [eval_cmd_put_ht_order_bb0_in/3]
28. non_recursive  : [eval_cmd_put_ht_order_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cmd_put_ht_order_bb5_in/3
1. SCC is partially evaluated into eval_cmd_put_ht_order_bb10_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_cmd_put_ht_order_bb5_in/3
5. SCC is partially evaluated into eval_cmd_put_ht_order_36/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_cmd_put_ht_order_29/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_cmd_put_ht_order_2/2
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_cmd_put_ht_order_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cmd_put_ht_order_bb5_in/3 
* CE 9 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations eval_cmd_put_ht_order_bb5_in/3 
* CE 14: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) = 0
     [C=0,B=3] 
* CE 15: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) = 0
     [B=2] 
* CE 16: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) = 1+ eval_cmd_put_ht_order_bb5_in(D,B,C)
     [] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_bb5_in/3 
* CEs [16] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_cmd_put_ht_order_bb5_in/3 
* Loop 12: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C)->  eval_cmd_put_ht_order_bb5_in(V_i_0',B,C)
                  [] 
* Loop 13: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) [C=0,B=3] 
* Loop 14: eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) [B=2] 

### Ranking functions of CR eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) 


### Resulting Chains:eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) 
* [[12]]...
* [[12],14]
* [[12],13]
* [14]
* [13]


### Merging Chains  eval_cmd_put_ht_order_bb5_in/3 into  External patterns of execution 
* [[14],[14,[12]]] --> 1 
* [[13],[13,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations eval_cmd_put_ht_order_bb10_in/2 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_cmd_put_ht_order_bb10_in/2 
* CE 17: eval_cmd_put_ht_order_bb10_in(V_i_1,B) = 1+ eval_cmd_put_ht_order_bb10_in(C,D)
     [D=2,B=2] 
* CE 18: eval_cmd_put_ht_order_bb10_in(V_i_1,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_bb10_in/2 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_cmd_put_ht_order_bb10_in/2 
* Loop 15: eval_cmd_put_ht_order_bb10_in(V_i_1,B) [B=2] 
* Loop 16: eval_cmd_put_ht_order_bb10_in(V_i_1,B)->  eval_cmd_put_ht_order_bb10_in(V_i_1',B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_cmd_put_ht_order_bb10_in(V_i_1,B) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_bb10_in(V_i_1,B) 


### Resulting Chains:eval_cmd_put_ht_order_bb10_in(V_i_1,B) 
* [[16]]...
* [[16],15]
* [15]


### Merging Chains  eval_cmd_put_ht_order_bb10_in/2 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations loop_cont_eval_cmd_put_ht_order_bb5_in/3 
* CE 11 is refined into CE [19,20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations loop_cont_eval_cmd_put_ht_order_bb5_in/3 
* CE 19: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) = 1+ eval_cmd_put_ht_order_bb10_in(A,D):1
     [D=2,C=3] 
* CE 20: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) = 1+ eval_cmd_put_ht_order_bb10_in(A,D):2
     [D=2,C=3] 
* CE 21: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_cmd_put_ht_order_bb5_in/3 
* CEs [19] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of loop_cont_eval_cmd_put_ht_order_bb5_in/3 
* Loop 17: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) [C=3] 
* Loop 18: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) [C=2] 
* Loop 19: loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) [C=3] 

### Ranking functions of CR loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) 


### Resulting Chains:loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B) 
* [19]...
* [18]
* [17]


### Merging Chains  loop_cont_eval_cmd_put_ht_order_bb5_in/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations eval_cmd_put_ht_order_36/1 
* CE 6 is refined into CE [22,23,24,25] 


#### Refined cost equations eval_cmd_put_ht_order_36/1 
* CE 22: eval_cmd_put_ht_order_36(B) = 1+ eval_cmd_put_ht_order_bb5_in(C,D,E):1+ loop_cont_eval_cmd_put_ht_order_bb5_in(F,E,B):1
     [F=2,D=2,C=0] 
* CE 23: eval_cmd_put_ht_order_36(B) = 1+ eval_cmd_put_ht_order_bb5_in(C,D,E):2+ loop_cont_eval_cmd_put_ht_order_bb5_in(F,G,B):2
     [G=0,F=3,E=0,D=3,C=0] 
* CE 24: eval_cmd_put_ht_order_36(B) = 1+ eval_cmd_put_ht_order_bb5_in(C,D,E):2+ loop_cont_eval_cmd_put_ht_order_bb5_in(F,G,B):3
     [G=0,F=3,E=0,D=3,C=0] 
* CE 25: eval_cmd_put_ht_order_36(B) = 1+ eval_cmd_put_ht_order_bb5_in(C,D,E):3
     [C=0] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_36/1 
* CEs [24,25] --> Loop 20 
* CEs [22,23] --> Loop 21 

#### Loops of eval_cmd_put_ht_order_36/1 
* Loop 20: eval_cmd_put_ht_order_36(B) [] 
* Loop 21: eval_cmd_put_ht_order_36(B) [] 

### Ranking functions of CR eval_cmd_put_ht_order_36(B) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_36(B) 


### Resulting Chains:eval_cmd_put_ht_order_36(B) 
* [21]
* [20]...


### Merging Chains  eval_cmd_put_ht_order_36/1 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_cmd_put_ht_order_29/2 
* CE 4 is refined into CE [26] 
* CE 5 is refined into CE [27,28] 


#### Refined cost equations eval_cmd_put_ht_order_29/2 
* CE 26: eval_cmd_put_ht_order_29(V_31,B) = 0
     [] 
* CE 27: eval_cmd_put_ht_order_29(V_31,B) = 0+ eval_cmd_put_ht_order_36(B):1
     [] 
* CE 28: eval_cmd_put_ht_order_29(V_31,B) = 0+ eval_cmd_put_ht_order_36(B):2
     [] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_29/2 
* CEs [28] --> Loop 22 
* CEs [26,27] --> Loop 23 

#### Loops of eval_cmd_put_ht_order_29/2 
* Loop 22: eval_cmd_put_ht_order_29(V_31,B) [] 
* Loop 23: eval_cmd_put_ht_order_29(V_31,B) [] 

### Ranking functions of CR eval_cmd_put_ht_order_29(V_31,B) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_29(V_31,B) 


### Resulting Chains:eval_cmd_put_ht_order_29(V_31,B) 
* [23]
* [22]...


### Merging Chains  eval_cmd_put_ht_order_29/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_cmd_put_ht_order_2/2 
* CE 3 is refined into CE [29,30] 


#### Refined cost equations eval_cmd_put_ht_order_2/2 
* CE 29: eval_cmd_put_ht_order_2(V_cname,B) = 0+ eval_cmd_put_ht_order_29(C,B):1
     [] 
* CE 30: eval_cmd_put_ht_order_2(V_cname,B) = 0+ eval_cmd_put_ht_order_29(C,B):2
     [] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_2/2 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 

#### Loops of eval_cmd_put_ht_order_2/2 
* Loop 24: eval_cmd_put_ht_order_2(V_cname,B) [] 
* Loop 25: eval_cmd_put_ht_order_2(V_cname,B) [] 

### Ranking functions of CR eval_cmd_put_ht_order_2(V_cname,B) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_2(V_cname,B) 


### Resulting Chains:eval_cmd_put_ht_order_2(V_cname,B) 
* [25]
* [24]...


### Merging Chains  eval_cmd_put_ht_order_2/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_cmd_put_ht_order_start/3 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_cmd_put_ht_order_start/3 
* CE 31: eval_cmd_put_ht_order_start(V_cname,V_component,B) = 0+ eval_cmd_put_ht_order_2(V_cname,B):1
     [] 
* CE 32: eval_cmd_put_ht_order_start(V_cname,V_component,B) = 0+ eval_cmd_put_ht_order_2(V_cname,B):2
     [] 

### Cost equations --> "Loop" of eval_cmd_put_ht_order_start/3 
* CEs [32] --> Loop 26 
* CEs [31] --> Loop 27 

#### Loops of eval_cmd_put_ht_order_start/3 
* Loop 26: eval_cmd_put_ht_order_start(V_cname,V_component,B) [] 
* Loop 27: eval_cmd_put_ht_order_start(V_cname,V_component,B) [] 

### Ranking functions of CR eval_cmd_put_ht_order_start(V_cname,V_component,B) 

#### Partial ranking functions of CR eval_cmd_put_ht_order_start(V_cname,V_component,B) 


### Resulting Chains:eval_cmd_put_ht_order_start(V_cname,V_component,B) 
* [27]
* [26]...


### Merging Chains  eval_cmd_put_ht_order_start/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) -> [eval_cmd_put_ht_order_bb5_in(V_i_0',B',C')] 
1
#### Cost of phase [12]:eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) -> [eval_cmd_put_ht_order_bb5_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) -> [eval_cmd_put_ht_order_bb5_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_cmd_put_ht_order_bb5_in(V_i_0,B,C) -> [eval_cmd_put_ht_order_bb5_in(V_i_0',B',C')] 
1*it(12)+0
#### Cost of chains of eval_cmd_put_ht_order_bb5_in(V_i_0,B,C):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [] 

* Chain [[12],14]: 1*it(12)+0
  with precondition: [B=2] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=3,C=0] 

* Chain [14]: 0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=3,C=0] 


#### Cost of loops [16] 

 * loop 16:eval_cmd_put_ht_order_bb10_in(V_i_1,B) -> [eval_cmd_put_ht_order_bb10_in(V_i_1',B')] 
1
#### Cost of phase [16]:eval_cmd_put_ht_order_bb10_in(V_i_1,B) -> [eval_cmd_put_ht_order_bb10_in(V_i_1',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_cmd_put_ht_order_bb10_in(V_i_1,B) -> [eval_cmd_put_ht_order_bb10_in(V_i_1',B')] 
1*it(16)+0
#### Cost of chains of eval_cmd_put_ht_order_bb10_in(V_i_1,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_cmd_put_ht_order_bb5_in(C,A,B):
* Chain [19]...: 1*s(4)+1
  with precondition: [C=3] 

* Chain [18]: 0
  with precondition: [C=2] 

* Chain [17]: 1*s(5)+1
  with precondition: [C=3] 


#### Cost of chains of eval_cmd_put_ht_order_36(B):
* Chain [21]: 1*aux(4)+0
  with precondition: [] 

* Chain [20]...: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_cmd_put_ht_order_29(V_31,B):
* Chain [23]: 1*aux(6)+0
  with precondition: [] 

* Chain [22]...: 1*s(13)+0
  with precondition: [] 


#### Cost of chains of eval_cmd_put_ht_order_2(V_cname,B):
* Chain [25]: 1*s(14)+0
  with precondition: [] 

* Chain [24]...: 1*s(15)+0
  with precondition: [] 


#### Cost of chains of eval_cmd_put_ht_order_start(V_cname,V_component,B):
* Chain [27]: 1*s(16)+0
  with precondition: [] 

* Chain [26]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_cmd_put_ht_order_start(V_cname,V_component,B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cmd_put_ht_order_start(V_cname,V_component,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 15 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 84 ms.

