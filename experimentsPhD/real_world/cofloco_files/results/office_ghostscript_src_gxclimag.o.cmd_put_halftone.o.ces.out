Warning: Ignored call to eval_cmd_put_halftone_stop/1 in equation eval_cmd_put_halftone_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_cmd_put_halftone_bb9_in/1]
1. non_recursive  : [eval_cmd_put_halftone_17/1]
2. non_recursive  : [eval_cmd_put_halftone_16/1]
3. recursive  : [eval_cmd_put_halftone_23/4,eval_cmd_put_halftone_24/5,eval_cmd_put_halftone_bb7_in/2]
4. non_recursive  : [loop_cont_eval_cmd_put_halftone_bb7_in/2]
5. non_recursive  : [eval_cmd_put_halftone_15/2]
6. non_recursive  : [eval_cmd_put_halftone_14/2]
7. non_recursive  : [eval_cmd_put_halftone_7/2]
8. non_recursive  : [eval_cmd_put_halftone_6/4]
9. non_recursive  : [eval_cmd_put_halftone_5/4]
10. non_recursive  : [eval_cmd_put_halftone_4/3]
11. non_recursive  : [eval_cmd_put_halftone_bb2_in/2]
12. non_recursive  : [eval_cmd_put_halftone_bb0_in/1]
13. non_recursive  : [eval_cmd_put_halftone_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_cmd_put_halftone_bb7_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_cmd_put_halftone_15/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_cmd_put_halftone_7/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_cmd_put_halftone_bb0_in/1
13. SCC is partially evaluated into eval_cmd_put_halftone_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cmd_put_halftone_bb7_in/2 
* CE 9 is refined into CE [11] 
* CE 10 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations eval_cmd_put_halftone_bb7_in/2 
* CE 11: eval_cmd_put_halftone_bb7_in(V_i_0,B) = 0
     [V_i_0>=1,B=2] 
* CE 12: eval_cmd_put_halftone_bb7_in(V_i_0,B) = 0
     [0>=V_i_0,B=2] 
* CE 13: eval_cmd_put_halftone_bb7_in(V_i_0,B) = 1+ eval_cmd_put_halftone_bb7_in(C,D)
     [V_i_0>=1,V_i_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_cmd_put_halftone_bb7_in/2 
* CEs [13] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of eval_cmd_put_halftone_bb7_in/2 
* Loop 8: eval_cmd_put_halftone_bb7_in(V_i_0,B)->  eval_cmd_put_halftone_bb7_in(V_i_0',B')
                  [V_i_0>=1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 9: eval_cmd_put_halftone_bb7_in(V_i_0,B) [V_i_0>=1,B=2] 
* Loop 10: eval_cmd_put_halftone_bb7_in(V_i_0,B) [0>=V_i_0,B=2] 

### Ranking functions of CR eval_cmd_put_halftone_bb7_in(V_i_0,B) 
* RF of phase [8]: [V_i_0]

#### Partial ranking functions of CR eval_cmd_put_halftone_bb7_in(V_i_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_i_0


### Resulting Chains:eval_cmd_put_halftone_bb7_in(V_i_0,B) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_cmd_put_halftone_bb7_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9],[9,[8]],[10,[8]]] --> 2 


### Specialization of cost equations eval_cmd_put_halftone_15/2 
* CE 6 is refined into CE [14] 
* CE 7 is refined into CE [15,16] 


#### Refined cost equations eval_cmd_put_halftone_15/2 
* CE 14: eval_cmd_put_halftone_15(V_5,B) = 0
     [] 
* CE 15: eval_cmd_put_halftone_15(V_5,B) = 1+ eval_cmd_put_halftone_bb7_in(V_5,C):1
     [0>=V_5,C=2] 
* CE 16: eval_cmd_put_halftone_15(V_5,B) = 1+ eval_cmd_put_halftone_bb7_in(V_5,C):2
     [V_5>=1,C=2] 

### Cost equations --> "Loop" of eval_cmd_put_halftone_15/2 
* CEs [14,15,16] --> Loop 11 

#### Loops of eval_cmd_put_halftone_15/2 
* Loop 11: eval_cmd_put_halftone_15(V_5,B) [] 

### Ranking functions of CR eval_cmd_put_halftone_15(V_5,B) 

#### Partial ranking functions of CR eval_cmd_put_halftone_15(V_5,B) 


### Resulting Chains:eval_cmd_put_halftone_15(V_5,B) 
* [11]


### Merging Chains  eval_cmd_put_halftone_15/2 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations eval_cmd_put_halftone_7/2 
* CE 4 is refined into CE [17] 
* CE 5 is refined into CE [18] 


#### Refined cost equations eval_cmd_put_halftone_7/2 
* CE 17: eval_cmd_put_halftone_7(V_5,B) = 0
     [] 
* CE 18: eval_cmd_put_halftone_7(V_5,B) = 0+ eval_cmd_put_halftone_15(V_5,B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_put_halftone_7/2 
* CEs [17,18] --> Loop 12 

#### Loops of eval_cmd_put_halftone_7/2 
* Loop 12: eval_cmd_put_halftone_7(V_5,B) [] 

### Ranking functions of CR eval_cmd_put_halftone_7(V_5,B) 

#### Partial ranking functions of CR eval_cmd_put_halftone_7(V_5,B) 


### Resulting Chains:eval_cmd_put_halftone_7(V_5,B) 
* [12]


### Merging Chains  eval_cmd_put_halftone_7/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_cmd_put_halftone_bb0_in/1 
* CE 3 is refined into CE [19] 


#### Refined cost equations eval_cmd_put_halftone_bb0_in/1 
* CE 19: eval_cmd_put_halftone_bb0_in(B) = 0+ eval_cmd_put_halftone_7(C,B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_put_halftone_bb0_in/1 
* CEs [19] --> Loop 13 

#### Loops of eval_cmd_put_halftone_bb0_in/1 
* Loop 13: eval_cmd_put_halftone_bb0_in(B) [] 

### Ranking functions of CR eval_cmd_put_halftone_bb0_in(B) 

#### Partial ranking functions of CR eval_cmd_put_halftone_bb0_in(B) 


### Resulting Chains:eval_cmd_put_halftone_bb0_in(B) 
* [13]


### Merging Chains  eval_cmd_put_halftone_bb0_in/1 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_cmd_put_halftone_start/2 
* CE 2 is refined into CE [20] 


#### Refined cost equations eval_cmd_put_halftone_start/2 
* CE 20: eval_cmd_put_halftone_start(V_type,B) = 0+ eval_cmd_put_halftone_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_put_halftone_start/2 
* CEs [20] --> Loop 14 

#### Loops of eval_cmd_put_halftone_start/2 
* Loop 14: eval_cmd_put_halftone_start(V_type,B) [] 

### Ranking functions of CR eval_cmd_put_halftone_start(V_type,B) 

#### Partial ranking functions of CR eval_cmd_put_halftone_start(V_type,B) 


### Resulting Chains:eval_cmd_put_halftone_start(V_type,B) 
* [14]


### Merging Chains  eval_cmd_put_halftone_start/2 into  External patterns of execution 
* [[14]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_cmd_put_halftone_bb7_in(V_i_0,B) -> [eval_cmd_put_halftone_bb7_in(V_i_0',B')] 
1
#### Cost of phase [8]:eval_cmd_put_halftone_bb7_in(V_i_0,B) -> [eval_cmd_put_halftone_bb7_in(V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_i_0
it(8) =< V_i_0-V_i_0'

#### Cost of phase [8]:eval_cmd_put_halftone_bb7_in(V_i_0,B) -> [eval_cmd_put_halftone_bb7_in(V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_i_0
it(8) =< V_i_0-V_i_0'

#### Cost of chains of eval_cmd_put_halftone_bb7_in(V_i_0,B):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_i_0

  with precondition: [B=2,V_i_0>=1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_i_0

  with precondition: [B=2,V_i_0>=2] 

* Chain [10]: 0
  with precondition: [B=2,0>=V_i_0] 

* Chain [9]: 0
  with precondition: [B=2,V_i_0>=1] 


#### Cost of chains of eval_cmd_put_halftone_15(V_5,B):
* Chain [11]: 2*s(4)+1
  Such that:s(3) =< V_5
s(4) =< s(3)

  with precondition: [] 


#### Cost of chains of eval_cmd_put_halftone_7(V_5,B):
* Chain [12]: 2*s(6)+1
  Such that:s(5) =< V_5
s(6) =< s(5)

  with precondition: [] 


#### Cost of chains of eval_cmd_put_halftone_bb0_in(B):
* Chain [13]: 2*s(8)+1
  with precondition: [] 


#### Cost of chains of eval_cmd_put_halftone_start(V_type,B):
* Chain [14]: 2*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_cmd_put_halftone_start(V_type,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cmd_put_halftone_start(V_type,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 9 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 47 ms.

