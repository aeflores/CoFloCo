Warning: Ignored call to eval_get_id3_stop/1 in equation eval_get_id3_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_get_id3_bb15_in/1]
1. non_recursive  : [eval_get_id3_30/1]
2. non_recursive  : [eval_get_id3_29/1]
3. non_recursive  : [eval_get_id3_bb13_in/1]
4. non_recursive  : [eval_get_id3_28/1]
5. non_recursive  : [eval_get_id3_27/2]
6. non_recursive  : [eval_get_id3_bb12_in/2]
7. non_recursive  : [eval_get_id3_5/2]
8. non_recursive  : [eval_get_id3_4/2]
9. recursive  : [eval_get_id3_16/10,eval_get_id3_17/11,eval_get_id3_bb7_in/8]
10. recursive  : [eval_get_id3_NewDefault3_in/7,eval_get_id3_NewDefault_in/7,eval_get_id3_bb11_in/7,eval_get_id3_bb5_in/4,loop_cont_eval_get_id3_bb7_in/8]
11. non_recursive  : [eval_get_id3_21/1]
12. non_recursive  : [eval_get_id3_20/1]
13. non_recursive  : [eval_get_id3_23/1]
14. non_recursive  : [eval_get_id3_22/1]
15. non_recursive  : [eval_get_id3_bb10_in/1]
16. non_recursive  : [loop_cont_eval_get_id3_bb5_in/3]
17. non_recursive  : [eval_get_id3_13/3]
18. non_recursive  : [eval_get_id3_12/3]
19. non_recursive  : [eval_get_id3_11/3]
20. non_recursive  : [eval_get_id3_10/3]
21. non_recursive  : [eval_get_id3_9/1]
22. non_recursive  : [eval_get_id3_8/1]
23. non_recursive  : [eval_get_id3_7/3]
24. non_recursive  : [eval_get_id3_6/3]
25. non_recursive  : [eval_get_id3_bb0_in/2]
26. non_recursive  : [eval_get_id3_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_get_id3_bb13_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_get_id3_bb7_in/8
10. SCC is partially evaluated into eval_get_id3_bb5_in/4
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into loop_cont_eval_get_id3_bb5_in/3
17. SCC is partially evaluated into eval_get_id3_13/3
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_get_id3_7/3
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_get_id3_bb0_in/2
26. SCC is partially evaluated into eval_get_id3_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_get_id3_bb13_in/1 
* CE 5 is refined into CE [22] 


#### Refined cost equations eval_get_id3_bb13_in/1 
* CE 22: eval_get_id3_bb13_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_get_id3_bb13_in/1 
* CEs [22] --> Loop 18 

#### Loops of eval_get_id3_bb13_in/1 
* Loop 18: eval_get_id3_bb13_in(B) [] 

### Ranking functions of CR eval_get_id3_bb13_in(B) 

#### Partial ranking functions of CR eval_get_id3_bb13_in(B) 


### Resulting Chains:eval_get_id3_bb13_in(B) 
* [18]


### Merging Chains  eval_get_id3_bb13_in/1 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_get_id3_bb7_in/8 
* CE 21 is refined into CE [23] 
* CE 17 is refined into CE [24] 
* CE 18 is refined into CE [25] 
* CE 19 is refined into CE [26] 
* CE 20 is refined into CE [27] 


#### Refined cost equations eval_get_id3_bb7_in/8 
* CE 23: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) = 1+ eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G)
     [V_tagsize>=V_count_0+1,B>=2,5>=B] 
* CE 24: eval_get_id3_bb7_in(A,B,C,A,B,D,E,F) = 0
     [A>=B+1,B+E=A,C=5] 
* CE 25: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) = 0
     [V_tagsize>=V_count_0+1,B=4] 
* CE 26: eval_get_id3_bb7_in(A,B,C,A,B,D,E,F) = 0
     [A>=B+1,B+E=A,C=3] 
* CE 27: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) = 0
     [V_tagsize>=V_count_0+1,B=2] 

### Cost equations --> "Loop" of eval_get_id3_bb7_in/8 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_get_id3_bb7_in/8 
* Loop 19: eval_get_id3_bb7_in(A,B,C,A,B,D,E,F) [A>=B+1,A=B+E,C=5] 
* Loop 20: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) [V_tagsize>=V_count_0+1,B=4] 
* Loop 21: eval_get_id3_bb7_in(A,B,C,A,B,D,E,F) [A>=B+1,A=B+E,C=3] 
* Loop 22: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) [V_tagsize>=V_count_0+1,B=2] 
* Loop 23: eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G)->  eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G)
                  [V_tagsize>=V_count_0+1,B>=2,5>=B] 

### Ranking functions of CR eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) 


### Resulting Chains:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) 
* [[23]]...
* [[23],22]
* [[23],21]
* [[23],20]
* [[23],19]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  eval_get_id3_bb7_in/8 into  External patterns of execution 
* [[22],[22,[23]]] --> 1 
* [[21],[21,[23]]] --> 2 
* [[20],[20,[23]]] --> 3 
* [[19],[19,[23]]] --> 4 
* [[[23]]] --> 5 


### Specialization of cost equations eval_get_id3_bb5_in/4 
* CE 13 is refined into CE [28] 
* CE 9 is refined into CE [29,30] 
* CE 10 is refined into CE [31,32] 
* CE 11 is refined into CE [33,34] 
* CE 12 is refined into CE [35,36] 


#### Refined cost equations eval_get_id3_bb5_in/4 
* CE 28: eval_get_id3_bb5_in(A,B,C,A) = 0
     [B>=A,C=6] 
* CE 29: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 1+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):3
     [V_tagsize>=V_count_0+1,D=4,B=4] 
* CE 30: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 1+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):5
     [V_tagsize>=V_count_0+1,D=4,B=4] 
* CE 31: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 1+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):1
     [V_tagsize>=V_count_0+1,D=2,B=2] 
* CE 32: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 1+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):5
     [V_tagsize>=V_count_0+1,D=2,B=2] 
* CE 33: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 2+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,V_tagsize,V_count_0,E,F,G):2+ eval_get_id3_bb5_in(V_tagsize,H,B,C)
     [V_tagsize>=V_count_0+1,V_count_0+G=H,V_tagsize=V_count_0+F,D=3] 
* CE 34: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 2+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):5
     [V_tagsize>=V_count_0+1,J=F+I,D=3] 
* CE 35: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 2+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,V_tagsize,V_count_0,E,F,G):4+ eval_get_id3_bb5_in(V_tagsize,H,B,C)
     [V_tagsize>=V_count_0+1,V_count_0+G=H,V_tagsize=V_count_0+F,D=5] 
* CE 36: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) = 2+ eval_get_id3_bb7_in(V_tagsize,V_count_0,D,E,F,G,H,I):5
     [V_tagsize>=V_count_0+1,J=F+I,D=5] 

### Cost equations --> "Loop" of eval_get_id3_bb5_in/4 
* CEs [30] --> Loop 24 
* CEs [32,34,36] --> Loop 25 
* CEs [33,35] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [31] --> Loop 29 

#### Loops of eval_get_id3_bb5_in/4 
* Loop 24: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) [V_tagsize>=V_count_0+1,B=4] 
* Loop 25: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) [V_tagsize>=V_count_0+1] 
* Loop 26: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C)->  eval_get_id3_bb5_in(V_tagsize,V_count_0',B,C)
                  [V_tagsize>=V_count_0+1] 
* Loop 27: eval_get_id3_bb5_in(A,B,C,A) [B>=A,C=6] 
* Loop 28: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) [V_tagsize>=V_count_0+1,B=4] 
* Loop 29: eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) [V_tagsize>=V_count_0+1,B=2] 

### Ranking functions of CR eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) 

#### Partial ranking functions of CR eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) 


### Resulting Chains:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) 
* [[26]]...
* [[26],29]
* [[26],28]
* [[26],27]
* [[26],25]...
* [[26],24]...
* [29]
* [28]
* [27]
* [25]...
* [24]...


### Merging Chains  eval_get_id3_bb5_in/4 into  External patterns of execution 
* [[29],[29,[26]]] --> 1 
* [[28],[28,[26]]] --> 2 
* [[27]] --> 3 
* [[27,[26]]] --> 4 
* [[24],[24,[26]]] --> 5 
* [[25],[25,[26]]] --> 6 
* [[[26]]] --> 7 


### Specialization of cost equations loop_cont_eval_get_id3_bb5_in/3 
* CE 14 is refined into CE [37] 
* CE 16 is refined into CE [38] 
* CE 15 is refined into CE [39] 


#### Refined cost equations loop_cont_eval_get_id3_bb5_in/3 
* CE 37: loop_cont_eval_get_id3_bb5_in(E,A,B) = 0+ eval_get_id3_bb13_in(B):1
     [E=6] 
* CE 38: loop_cont_eval_get_id3_bb5_in(E,A,B) = 0+ eval_get_id3_bb13_in(B):1
     [E=4] 
* CE 39: loop_cont_eval_get_id3_bb5_in(E,A,B) = 0+ eval_get_id3_bb13_in(B):1
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_get_id3_bb5_in/3 
* CEs [37] --> Loop 30 
* CEs [38] --> Loop 31 
* CEs [39] --> Loop 32 

#### Loops of loop_cont_eval_get_id3_bb5_in/3 
* Loop 30: loop_cont_eval_get_id3_bb5_in(E,A,B) [E=6] 
* Loop 31: loop_cont_eval_get_id3_bb5_in(E,A,B) [E=4] 
* Loop 32: loop_cont_eval_get_id3_bb5_in(E,A,B) [E=2] 

### Ranking functions of CR loop_cont_eval_get_id3_bb5_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_get_id3_bb5_in(E,A,B) 


### Resulting Chains:loop_cont_eval_get_id3_bb5_in(E,A,B) 
* [32]
* [31]
* [30]


### Merging Chains  loop_cont_eval_get_id3_bb5_in/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 


### Specialization of cost equations eval_get_id3_13/3 
* CE 8 is refined into CE [40,41,42,43,44,45,46] 


#### Refined cost equations eval_get_id3_13/3 
* CE 40: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,D):1+ loop_cont_eval_get_id3_bb5_in(E,D,B):1
     [V_tagsize>=V_6+1,E=2,C=2] 
* CE 41: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,D):2+ loop_cont_eval_get_id3_bb5_in(E,D,B):2
     [V_tagsize>=V_6+1,E=4,C=4] 
* CE 42: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,V_tagsize):3+ loop_cont_eval_get_id3_bb5_in(D,V_tagsize,B):3
     [V_6>=V_tagsize,D=6,C=6] 
* CE 43: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,V_tagsize):4+ loop_cont_eval_get_id3_bb5_in(D,V_tagsize,B):3
     [V_tagsize>=V_6+1,D=6,C=6] 
* CE 44: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,D):5
     [V_tagsize>=V_6+1,E=4,C=4] 
* CE 45: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,D):6
     [V_tagsize>=V_6+1] 
* CE 46: eval_get_id3_13(V_tagsize,V_6,B) = 1+ eval_get_id3_bb5_in(V_tagsize,V_6,C,D):7
     [V_tagsize>=V_6+1] 

### Cost equations --> "Loop" of eval_get_id3_13/3 
* CEs [44,45,46] --> Loop 33 
* CEs [40,41,43] --> Loop 34 
* CEs [42] --> Loop 35 

#### Loops of eval_get_id3_13/3 
* Loop 33: eval_get_id3_13(V_tagsize,V_6,B) [V_tagsize>=V_6+1] 
* Loop 34: eval_get_id3_13(V_tagsize,V_6,B) [V_tagsize>=V_6+1] 
* Loop 35: eval_get_id3_13(V_tagsize,V_6,B) [V_6>=V_tagsize] 

### Ranking functions of CR eval_get_id3_13(V_tagsize,V_6,B) 

#### Partial ranking functions of CR eval_get_id3_13(V_tagsize,V_6,B) 


### Resulting Chains:eval_get_id3_13(V_tagsize,V_6,B) 
* [35]
* [34]
* [33]...


### Merging Chains  eval_get_id3_13/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations eval_get_id3_7/3 
* CE 6 is refined into CE [47] 
* CE 7 is refined into CE [48,49,50] 


#### Refined cost equations eval_get_id3_7/3 
* CE 47: eval_get_id3_7(V_tagsize,V_6,B) = 0+ eval_get_id3_bb13_in(B):1
     [] 
* CE 48: eval_get_id3_7(V_tagsize,V_6,B) = 0+ eval_get_id3_13(V_tagsize,V_6,B):1
     [V_6>=V_tagsize] 
* CE 49: eval_get_id3_7(V_tagsize,V_6,B) = 0+ eval_get_id3_13(V_tagsize,V_6,B):2
     [V_tagsize>=V_6+1] 
* CE 50: eval_get_id3_7(V_tagsize,V_6,B) = 0+ eval_get_id3_13(V_tagsize,V_6,B):3
     [V_tagsize>=V_6+1] 

### Cost equations --> "Loop" of eval_get_id3_7/3 
* CEs [50] --> Loop 36 
* CEs [47,48,49] --> Loop 37 

#### Loops of eval_get_id3_7/3 
* Loop 36: eval_get_id3_7(V_tagsize,V_6,B) [V_tagsize>=V_6+1] 
* Loop 37: eval_get_id3_7(V_tagsize,V_6,B) [] 

### Ranking functions of CR eval_get_id3_7(V_tagsize,V_6,B) 

#### Partial ranking functions of CR eval_get_id3_7(V_tagsize,V_6,B) 


### Resulting Chains:eval_get_id3_7(V_tagsize,V_6,B) 
* [37]
* [36]...


### Merging Chains  eval_get_id3_7/3 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_get_id3_bb0_in/2 
* CE 3 is refined into CE [51] 
* CE 4 is refined into CE [52,53] 


#### Refined cost equations eval_get_id3_bb0_in/2 
* CE 51: eval_get_id3_bb0_in(V_tagsize,B) = 0+ eval_get_id3_bb13_in(B):1
     [] 
* CE 52: eval_get_id3_bb0_in(V_tagsize,B) = 0+ eval_get_id3_7(V_tagsize,C,B):1
     [] 
* CE 53: eval_get_id3_bb0_in(V_tagsize,B) = 0+ eval_get_id3_7(V_tagsize,C,B):2
     [V_tagsize>=C+1] 

### Cost equations --> "Loop" of eval_get_id3_bb0_in/2 
* CEs [53] --> Loop 38 
* CEs [51,52] --> Loop 39 

#### Loops of eval_get_id3_bb0_in/2 
* Loop 38: eval_get_id3_bb0_in(V_tagsize,B) [] 
* Loop 39: eval_get_id3_bb0_in(V_tagsize,B) [] 

### Ranking functions of CR eval_get_id3_bb0_in(V_tagsize,B) 

#### Partial ranking functions of CR eval_get_id3_bb0_in(V_tagsize,B) 


### Resulting Chains:eval_get_id3_bb0_in(V_tagsize,B) 
* [39]
* [38]...


### Merging Chains  eval_get_id3_bb0_in/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_get_id3_start/2 
* CE 2 is refined into CE [54,55] 


#### Refined cost equations eval_get_id3_start/2 
* CE 54: eval_get_id3_start(V_tagsize,B) = 0+ eval_get_id3_bb0_in(V_tagsize,B):1
     [] 
* CE 55: eval_get_id3_start(V_tagsize,B) = 0+ eval_get_id3_bb0_in(V_tagsize,B):2
     [] 

### Cost equations --> "Loop" of eval_get_id3_start/2 
* CEs [55] --> Loop 40 
* CEs [54] --> Loop 41 

#### Loops of eval_get_id3_start/2 
* Loop 40: eval_get_id3_start(V_tagsize,B) [] 
* Loop 41: eval_get_id3_start(V_tagsize,B) [] 

### Ranking functions of CR eval_get_id3_start(V_tagsize,B) 

#### Partial ranking functions of CR eval_get_id3_start(V_tagsize,B) 


### Resulting Chains:eval_get_id3_start(V_tagsize,B) 
* [41]
* [40]...


### Merging Chains  eval_get_id3_start/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_get_id3_bb13_in(B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of loops [23] 

 * loop 23:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1
#### Cost of phase [23]:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1*it(23)+0
#### Cost of phase [23]:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1*it(23)+0
#### Cost of phase [23]:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1*it(23)+0
#### Cost of phase [23]:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1*it(23)+0
#### Cost of phase [23]:eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G) -> [eval_get_id3_bb7_in(V_tagsize',V_count_0',B',C',D',E',F',G')] 
1*it(23)+0
#### Cost of chains of eval_get_id3_bb7_in(V_tagsize,V_count_0,B,C,D,E,F,G):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [V_tagsize>=V_count_0+1,B>=2,5>=B] 

* Chain [[23],22]: 1*it(23)+0
  with precondition: [B=2,V_tagsize>=V_count_0+1] 

* Chain [[23],21]: 1*it(23)+0
  with precondition: [B=3,V_tagsize=C,V_tagsize=V_count_0+F,V_tagsize=D+F,F>=1] 

* Chain [[23],20]: 1*it(23)+0
  with precondition: [B=4,V_tagsize>=V_count_0+1] 

* Chain [[23],19]: 1*it(23)+0
  with precondition: [B=5,V_tagsize=C,V_tagsize=V_count_0+F,V_tagsize=D+F,F>=1] 

* Chain [22]: 0
  with precondition: [B=2,V_tagsize>=V_count_0+1] 

* Chain [21]: 0
  with precondition: [B=3,V_tagsize=C,V_count_0=D,V_tagsize=V_count_0+F,V_tagsize>=V_count_0+1] 

* Chain [20]: 0
  with precondition: [B=4,V_tagsize>=V_count_0+1] 

* Chain [19]: 0
  with precondition: [B=5,V_tagsize=C,V_count_0=D,V_tagsize=V_count_0+F,V_tagsize>=V_count_0+1] 


#### Cost of loops [26] 

 * loop 26:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(7)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of phase [26]:eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C) -> [eval_get_id3_bb5_in(V_tagsize',V_count_0',B',C')] 
1*s(8)+0
#### Cost of chains of eval_get_id3_bb5_in(V_tagsize,V_count_0,B,C):
* Chain [[26]]...: 1*s(8)+0
  with precondition: [V_tagsize>=V_count_0+1] 

* Chain [[26],29]: 2*s(8)+1
  with precondition: [B=2,V_tagsize>=V_count_0+1] 

* Chain [[26],28]: 2*s(8)+1
  with precondition: [B=4,V_tagsize>=V_count_0+1] 

* Chain [[26],27]: 1*s(8)+0
  with precondition: [B=6,V_tagsize=C,V_tagsize>=V_count_0+1] 

* Chain [[26],25]...: 2*aux(6)+0
  with precondition: [V_tagsize>=V_count_0+1] 

* Chain [[26],24]...: 2*s(8)+1
  with precondition: [B=4,V_tagsize>=V_count_0+1] 

* Chain [29]: 1*s(9)+1
  with precondition: [B=2,V_tagsize>=V_count_0+1] 

* Chain [28]: 1*s(10)+1
  with precondition: [B=4,V_tagsize>=V_count_0+1] 

* Chain [27]: 0
  with precondition: [B=6,V_tagsize=C,V_count_0>=V_tagsize] 

* Chain [25]...: 1*aux(6)+0
  with precondition: [V_tagsize>=V_count_0+1] 

* Chain [24]...: 1*s(14)+1
  with precondition: [B=4,V_tagsize>=V_count_0+1] 


#### Cost of chains of loop_cont_eval_get_id3_bb5_in(E,A,B):
* Chain [32]: 0
  with precondition: [E=2] 

* Chain [31]: 0
  with precondition: [E=4] 

* Chain [30]: 0
  with precondition: [E=6] 


#### Cost of chains of eval_get_id3_13(V_tagsize,V_6,B):
* Chain [35]: 1
  with precondition: [V_6>=V_tagsize] 

* Chain [34]: 1*aux(11)+0
  with precondition: [V_tagsize>=V_6+1] 

* Chain [33]...: 1*aux(12)+0
  with precondition: [V_tagsize>=V_6+1] 


#### Cost of chains of eval_get_id3_7(V_tagsize,V_6,B):
* Chain [37]: 1*aux(13)+0
  with precondition: [] 

* Chain [36]...: 1*s(30)+0
  with precondition: [V_tagsize>=V_6+1] 


#### Cost of chains of eval_get_id3_bb0_in(V_tagsize,B):
* Chain [39]: 1*aux(14)+0
  with precondition: [] 

* Chain [38]...: 1*s(32)+0
  with precondition: [] 


#### Cost of chains of eval_get_id3_start(V_tagsize,B):
* Chain [41]: 1*s(33)+0
  with precondition: [] 

* Chain [40]...: 1*s(34)+0
  with precondition: [] 


Closed-form bounds of eval_get_id3_start(V_tagsize,B): 
-------------------------------------
* Chain [41] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_get_id3_start(V_tagsize,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 110 ms.
* Invariants computed in 102 ms.
   - Backward Invariants 72 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 196 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 151 ms.
   - Equation cost structures 57 ms.
   - Phase cost structures 24 ms.
   - Chain cost structures 64 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 698 ms.

