Warning: Ignored call to eval_aufile_write_stop/1 in equation eval_aufile_write_58/1 
Warning: Ignored call to eval_aufile_write_stop/1 in equation eval_aufile_write_bb20_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_aufile_write_bb20_in/1]
1. non_recursive  : [eval_aufile_write_24/1]
2. non_recursive  : [eval_aufile_write_23/5]
3. non_recursive  : [eval_aufile_write_22/6]
4. non_recursive  : [eval_aufile_write_21/8]
5. non_recursive  : [eval_aufile_write_56/1]
6. non_recursive  : [eval_aufile_write_55/5]
7. recursive  : [eval_aufile_write_bb12_in/13]
8. non_recursive  : [eval_aufile_write_54/1]
9. non_recursive  : [eval_aufile_write_53/5]
10. non_recursive  : [eval_aufile_write_bb17_in/5]
11. non_recursive  : [eval_aufile_write_48/5]
12. non_recursive  : [eval_aufile_write_47/5]
13. non_recursive  : [eval_aufile_write_46/6]
14. non_recursive  : [eval_aufile_write_45/8]
15. non_recursive  : [loop_cont_eval_aufile_write_bb12_in/9]
16. non_recursive  : [eval_aufile_write_33/6]
17. non_recursive  : [eval_aufile_write_32/7]
18. non_recursive  : [eval_aufile_write_58/1]
19. non_recursive  : [eval_aufile_write_57/5]
20. non_recursive  : [eval_aufile_write_bb4_in/6]
21. non_recursive  : [eval_aufile_write_11/6]
22. non_recursive  : [eval_aufile_write_10/6]
23. non_recursive  : [eval_aufile_write_9/6]
24. non_recursive  : [eval_aufile_write_8/8]
25. non_recursive  : [eval_aufile_write_bb0_in/6]
26. non_recursive  : [eval_aufile_write_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_aufile_write_22/6
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_aufile_write_bb12_in/13
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_aufile_write_46/6
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_aufile_write_33/6
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_aufile_write_bb4_in/6
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_aufile_write_9/6
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_aufile_write_bb0_in/6
26. SCC is partially evaluated into eval_aufile_write_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_aufile_write_22/6 
* CE 10 is refined into CE [16] 


#### Refined cost equations eval_aufile_write_22/6 
* CE 16: eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B) = 0
     [] 

### Cost equations --> "Loop" of eval_aufile_write_22/6 
* CEs [16] --> Loop 10 

#### Loops of eval_aufile_write_22/6 
* Loop 10: eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B) [] 

### Ranking functions of CR eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B) 

#### Partial ranking functions of CR eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B) 


### Resulting Chains:eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B) 
* [10]


### Merging Chains  eval_aufile_write_22/6 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_aufile_write_bb12_in/13 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


#### Refined cost equations eval_aufile_write_bb12_in/13 
* CE 17: eval_aufile_write_bb12_in(A,B,C,D,E,F,A,B,C,D,E,B,A) = 0
     [F=2] 
* CE 18: eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) = 1+ eval_aufile_write_bb12_in(V_n,J,K,L,M,N,C,D,E,F,G,H,I)
     [N=2,B=2] 

### Cost equations --> "Loop" of eval_aufile_write_bb12_in/13 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of eval_aufile_write_bb12_in/13 
* Loop 11: eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I)->  eval_aufile_write_bb12_in(V_n,V__au_fd',V__au_encoding',V__au_size',V__linear_fd',B',C,D,E,F,G,H,I)
                  [B'=2,B=2] 
* Loop 12: eval_aufile_write_bb12_in(A,B,C,D,E,F,A,B,C,D,E,B,A) [F=2] 

### Ranking functions of CR eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_aufile_write_bb12_in/13 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_aufile_write_46/6 
* CE 15 is refined into CE [19] 


#### Refined cost equations eval_aufile_write_46/6 
* CE 19: eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_aufile_write_46/6 
* CEs [19] --> Loop 13 

#### Loops of eval_aufile_write_46/6 
* Loop 13: eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [13]


### Merging Chains  eval_aufile_write_46/6 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_aufile_write_33/6 
* CE 11 is refined into CE [20,21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations eval_aufile_write_33/6 
* CE 20: eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 1+ eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,C,V_n,D,E,F,G,D,V_n):1+ eval_aufile_write_46(V_n,D,E,F,G,B):1
     [C=2] 
* CE 21: eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 1+ eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,C,D,E,F,G,H,I,J):2
     [C=2] 
* CE 22: eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_aufile_write_33/6 
* CEs [20,22] --> Loop 14 
* CEs [21] --> Loop 15 

#### Loops of eval_aufile_write_33/6 
* Loop 14: eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 
* Loop 15: eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [15]...
* [14]


### Merging Chains  eval_aufile_write_33/6 into  External patterns of execution 
* [[14]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_aufile_write_bb4_in/6 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24,25] 
* CE 9 is refined into CE [26] 


#### Refined cost equations eval_aufile_write_bb4_in/6 
* CE 23: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,C,B):1
     [C=2*V_n] 
* CE 24: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):1
     [] 
* CE 25: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):2
     [] 
* CE 26: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_aufile_write_bb4_in/6 
* CEs [23,24,26] --> Loop 16 
* CEs [25] --> Loop 17 

#### Loops of eval_aufile_write_bb4_in/6 
* Loop 16: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 
* Loop 17: eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [17]...
* [16]


### Merging Chains  eval_aufile_write_bb4_in/6 into  External patterns of execution 
* [[16]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_aufile_write_9/6 
* CE 6 is refined into CE [27,28] 


#### Refined cost equations eval_aufile_write_9/6 
* CE 27: eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):1
     [] 
* CE 28: eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_aufile_write_9/6 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 

#### Loops of eval_aufile_write_9/6 
* Loop 18: eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 
* Loop 19: eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [19]
* [18]...


### Merging Chains  eval_aufile_write_9/6 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_aufile_write_bb0_in/6 
* CE 3 is refined into CE [29,30] 
* CE 4 is refined into CE [31,32] 
* CE 5 is refined into CE [33] 


#### Refined cost equations eval_aufile_write_bb0_in/6 
* CE 29: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):1
     [] 
* CE 30: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):2
     [] 
* CE 31: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):1
     [] 
* CE 32: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):2
     [] 
* CE 33: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_aufile_write_bb0_in/6 
* CEs [29,31,33] --> Loop 20 
* CEs [30,32] --> Loop 21 

#### Loops of eval_aufile_write_bb0_in/6 
* Loop 20: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 
* Loop 21: eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [21]...
* [20]


### Merging Chains  eval_aufile_write_bb0_in/6 into  External patterns of execution 
* [[20]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_aufile_write_start/6 
* CE 2 is refined into CE [34,35] 


#### Refined cost equations eval_aufile_write_start/6 
* CE 34: eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):1
     [] 
* CE 35: eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) = 0+ eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_aufile_write_start/6 
* CEs [35] --> Loop 22 
* CEs [34] --> Loop 23 

#### Loops of eval_aufile_write_start/6 
* Loop 22: eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 
* Loop 23: eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) [] 

### Ranking functions of CR eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 

#### Partial ranking functions of CR eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 


### Resulting Chains:eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B) 
* [23]
* [22]...


### Merging Chains  eval_aufile_write_start/6 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_aufile_write_22(V__au_fd,V__au_encoding,V__au_size,V__linear_fd,V_19,B):
* Chain [10]: 0
  with precondition: [] 


#### Cost of loops [11] 

 * loop 11:eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) -> [eval_aufile_write_bb12_in(V_n',V__au_fd',V__au_encoding',V__au_size',V__linear_fd',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [11]:eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) -> [eval_aufile_write_bb12_in(V_n',V__au_fd',V__au_encoding',V__au_size',V__linear_fd',B',C',D',E',F',G',H',I')] 
1*it(11)+0
#### Cost of phase [11]:eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I) -> [eval_aufile_write_bb12_in(V_n',V__au_fd',V__au_encoding',V__au_size',V__linear_fd',B',C',D',E',F',G',H',I')] 
1*it(11)+0
#### Cost of chains of eval_aufile_write_bb12_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B,C,D,E,F,G,H,I):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=2,V_n=C,D=H,V_n=I] 

* Chain [12]: 0
  with precondition: [B=2,E=V__au_encoding,F=V__au_size,G=V__linear_fd,V_n=C,V__au_fd=D,V__au_fd=H,V_n=I] 


#### Cost of chains of eval_aufile_write_46(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [13]: 0
  with precondition: [] 


#### Cost of chains of eval_aufile_write_33(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [15]...: 1*s(2)+1
  with precondition: [] 

* Chain [14]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_aufile_write_bb4_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [17]...: 1*s(4)+1
  with precondition: [] 

* Chain [16]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_aufile_write_9(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [19]: 1*s(6)+0
  with precondition: [] 

* Chain [18]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_aufile_write_bb0_in(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [21]...: 1*aux(4)+0
  with precondition: [] 

* Chain [20]: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B):
* Chain [23]: 1*s(12)+0
  with precondition: [] 

* Chain [22]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_aufile_write_start(V_n,V__au_fd,V__au_encoding,V__au_size,V__linear_fd,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 83 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 96 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 60 ms.
   - Equation cost structures 31 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 387 ms.

