Warning: Ignored call to eval_horDiff8_stop/1 in equation eval_horDiff8_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_horDiff8_bb9_in/6]
1. recursive  : [eval_horDiff8_NewDefault3_in/3,eval_horDiff8_bb11_in/3,eval_horDiff8_bb12_in/3,eval_horDiff8_bb13_in/3,eval_horDiff8_bb14_in/3,eval_horDiff8_bb15_in/3,eval_horDiff8_bb7_in/3,loop_cont_eval_horDiff8_bb9_in/4]
2. non_recursive  : [eval_horDiff8_bb16_in/1]
3. non_recursive  : [loop_cont_eval_horDiff8_bb7_in/2]
4. non_recursive  : [eval_horDiff8_NewDefault_in/3]
5. recursive  : [eval_horDiff8_bb3_in/2]
6. recursive  : [eval_horDiff8_bb5_in/2]
7. non_recursive  : [loop_cont_eval_horDiff8_bb3_in/2]
8. non_recursive  : [loop_cont_eval_horDiff8_bb5_in/2]
9. non_recursive  : [eval_horDiff8_bb0_in/2]
10. non_recursive  : [eval_horDiff8_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_horDiff8_bb9_in/6
1. SCC is partially evaluated into eval_horDiff8_bb7_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_horDiff8_NewDefault_in/3
5. SCC is partially evaluated into eval_horDiff8_bb3_in/2
6. SCC is partially evaluated into eval_horDiff8_bb5_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_horDiff8_bb0_in/2
10. SCC is partially evaluated into eval_horDiff8_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_horDiff8_bb9_in/6 
* CE 17 is refined into CE [18] 
* CE 16 is refined into CE [19] 


#### Refined cost equations eval_horDiff8_bb9_in/6 
* CE 18: eval_horDiff8_bb9_in(A,B,C,D,A,B) = 0
     [A>=C+4,0>=C,D=2] 
* CE 19: eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) = 1+ eval_horDiff8_bb9_in(V_4,V__2,E,F,C,D)
     [V_4>=V_i_0+4,V_i_0>=1,V_i_0=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_horDiff8_bb9_in/6 
* CEs [19] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of eval_horDiff8_bb9_in/6 
* Loop 12: eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D)->  eval_horDiff8_bb9_in(V_4,V__2,V_i_0',B',C,D)
                  [V_4>=V_i_0+4,V_i_0>=1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 13: eval_horDiff8_bb9_in(A,B,C,D,A,B) [A>=C+4,0>=C,D=2] 

### Ranking functions of CR eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) 
* RF of phase [12]: [V_i_0]

#### Partial ranking functions of CR eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_i_0


### Resulting Chains:eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) 
* [[12],13]
* [13]


### Merging Chains  eval_horDiff8_bb9_in/6 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations eval_horDiff8_bb7_in/3 
* CE 14 is refined into CE [20,21] 
* CE 15 is refined into CE [22] 
* CE 12 is refined into CE [23,24] 
* CE 13 is refined into CE [25] 


#### Refined cost equations eval_horDiff8_bb7_in/3 
* CE 20: eval_horDiff8_bb7_in(V_4,V__2,B) = 2+ eval_horDiff8_bb9_in(V_4,V__2,C,D,V_4,V__2):1+ eval_horDiff8_bb7_in(V_4,E,F)
     [V__2>=V_4+1,4>=V_4,V_4+E=V__2,V_4=C+4,F=3,D=2,B=3] 
* CE 21: eval_horDiff8_bb7_in(V_4,V__2,B) = 2+ eval_horDiff8_bb9_in(V_4,V__2,C,D,V_4,V__2):2+ eval_horDiff8_bb7_in(V_4,E,F)
     [V__2>=V_4+1,V_4>=5,V_4+E=V__2,V_4=C+4,F=3,D=2,B=3] 
* CE 22: eval_horDiff8_bb7_in(V_4,V__2,B) = 1+ eval_horDiff8_bb7_in(V_4,C,D)
     [V__2>=V_4+1,V_4+C=V__2,D=3,B=3] 
* CE 23: eval_horDiff8_bb7_in(V_4,V__2,B) = 1+ eval_horDiff8_bb9_in(V_4,V__2,C,D,V_4,V__2):1
     [V_4>=V__2,4>=V_4,V_4=C+4,D=2,B=3] 
* CE 24: eval_horDiff8_bb7_in(V_4,V__2,B) = 1+ eval_horDiff8_bb9_in(V_4,V__2,C,D,V_4,V__2):2
     [V_4>=V__2,V_4>=5,V_4=C+4,D=2,B=3] 
* CE 25: eval_horDiff8_bb7_in(V_4,V__2,B) = 0
     [V_4>=V__2,B=3] 

### Cost equations --> "Loop" of eval_horDiff8_bb7_in/3 
* CEs [24] --> Loop 14 
* CEs [23,25] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [20,22] --> Loop 17 

#### Loops of eval_horDiff8_bb7_in/3 
* Loop 14: eval_horDiff8_bb7_in(V_4,V__2,B) [V_4>=V__2,V_4>=5,B=3] 
* Loop 15: eval_horDiff8_bb7_in(V_4,V__2,B) [V_4>=V__2,B=3] 
* Loop 16: eval_horDiff8_bb7_in(V_4,V__2,B)->  eval_horDiff8_bb7_in(V_4,V__2',B')
                  [V__2>=V_4+1,V_4>=5,V_4+V__2'=V__2,B'=3,B=3] 
* Loop 17: eval_horDiff8_bb7_in(V_4,V__2,B)->  eval_horDiff8_bb7_in(V_4,V__2',B')
                  [V__2>=V_4+1,V_4+V__2'=V__2,B'=3,B=3] 

### Ranking functions of CR eval_horDiff8_bb7_in(V_4,V__2,B) 

#### Partial ranking functions of CR eval_horDiff8_bb7_in(V_4,V__2,B) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    -V_4/5+V__2/5 depends on loops [17:1] 
    V__2/5-1 depends on loops [17:1] 


### Resulting Chains:eval_horDiff8_bb7_in(V_4,V__2,B) 
* [[16,17]]...
* [[16,17],15]
* [[16,17],14]
* [15]
* [14]


### Merging Chains  eval_horDiff8_bb7_in/3 into  External patterns of execution 
* [[14,[16,17]],[15,[16,17]]] --> 1 
* [[14],[15]] --> 2 
* [[[16,17]]] --> 3 


### Specialization of cost equations eval_horDiff8_NewDefault_in/3 
* CE 9 is refined into CE [26,27,28] 


#### Refined cost equations eval_horDiff8_NewDefault_in/3 
* CE 26: eval_horDiff8_NewDefault_in(V_4,V_6,B) = 1+ eval_horDiff8_bb7_in(V_4,V_6,C):1
     [V_6>=V_4+1,V_4>=1,C=3] 
* CE 27: eval_horDiff8_NewDefault_in(V_4,V_6,B) = 1+ eval_horDiff8_bb7_in(V_4,V_6,C):2
     [V_4>=V_6,C=3] 
* CE 28: eval_horDiff8_NewDefault_in(V_4,V_6,B) = 1+ eval_horDiff8_bb7_in(V_4,V_6,C):3
     [V_6>=V_4+1,C=3] 

### Cost equations --> "Loop" of eval_horDiff8_NewDefault_in/3 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of eval_horDiff8_NewDefault_in/3 
* Loop 18: eval_horDiff8_NewDefault_in(V_4,V_6,B) [V_6>=V_4+1] 
* Loop 19: eval_horDiff8_NewDefault_in(V_4,V_6,B) [V_4>=V_6] 
* Loop 20: eval_horDiff8_NewDefault_in(V_4,V_6,B) [V_6>=V_4+1,V_4>=1] 

### Ranking functions of CR eval_horDiff8_NewDefault_in(V_4,V_6,B) 

#### Partial ranking functions of CR eval_horDiff8_NewDefault_in(V_4,V_6,B) 


### Resulting Chains:eval_horDiff8_NewDefault_in(V_4,V_6,B) 
* [20]
* [19]
* [18]...


### Merging Chains  eval_horDiff8_NewDefault_in/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_horDiff8_bb3_in/2 
* CE 8 is refined into CE [29] 
* CE 7 is refined into CE [30] 


#### Refined cost equations eval_horDiff8_bb3_in/2 
* CE 29: eval_horDiff8_bb3_in(V__0,B) = 0
     [3>=V__0,B=3] 
* CE 30: eval_horDiff8_bb3_in(V__0,B) = 1+ eval_horDiff8_bb3_in(C,D)
     [V__0>=4,V__0=C+3,D=3,B=3] 

### Cost equations --> "Loop" of eval_horDiff8_bb3_in/2 
* CEs [30] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of eval_horDiff8_bb3_in/2 
* Loop 21: eval_horDiff8_bb3_in(V__0,B)->  eval_horDiff8_bb3_in(V__0',B')
                  [V__0>=4,V__0=V__0'+3,B'=3,B=3] 
* Loop 22: eval_horDiff8_bb3_in(V__0,B) [3>=V__0,B=3] 

### Ranking functions of CR eval_horDiff8_bb3_in(V__0,B) 
* RF of phase [21]: [V__0/3-1]

#### Partial ranking functions of CR eval_horDiff8_bb3_in(V__0,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V__0/3-1


### Resulting Chains:eval_horDiff8_bb3_in(V__0,B) 
* [[21],22]
* [22]


### Merging Chains  eval_horDiff8_bb3_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations eval_horDiff8_bb5_in/2 
* CE 11 is refined into CE [31] 
* CE 10 is refined into CE [32] 


#### Refined cost equations eval_horDiff8_bb5_in/2 
* CE 31: eval_horDiff8_bb5_in(V__1,B) = 0
     [4>=V__1,B=3] 
* CE 32: eval_horDiff8_bb5_in(V__1,B) = 1+ eval_horDiff8_bb5_in(C,D)
     [V__1>=5,V__1=C+4,D=3,B=3] 

### Cost equations --> "Loop" of eval_horDiff8_bb5_in/2 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of eval_horDiff8_bb5_in/2 
* Loop 23: eval_horDiff8_bb5_in(V__1,B)->  eval_horDiff8_bb5_in(V__1',B')
                  [V__1>=5,V__1=V__1'+4,B'=3,B=3] 
* Loop 24: eval_horDiff8_bb5_in(V__1,B) [4>=V__1,B=3] 

### Ranking functions of CR eval_horDiff8_bb5_in(V__1,B) 
* RF of phase [23]: [V__1/4-1]

#### Partial ranking functions of CR eval_horDiff8_bb5_in(V__1,B) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V__1/4-1


### Resulting Chains:eval_horDiff8_bb5_in(V__1,B) 
* [[23],24]
* [24]


### Merging Chains  eval_horDiff8_bb5_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[24,[23]]] --> 2 


### Specialization of cost equations eval_horDiff8_bb0_in/2 
* CE 3 is refined into CE [33,34] 
* CE 4 is refined into CE [35,36,37] 
* CE 5 is refined into CE [38,39] 
* CE 6 is refined into CE [40] 


#### Refined cost equations eval_horDiff8_bb0_in/2 
* CE 33: eval_horDiff8_bb0_in(V_cc,B) = 1+ eval_horDiff8_bb3_in(C,D):1
     [3>=C,D=3] 
* CE 34: eval_horDiff8_bb0_in(V_cc,B) = 1+ eval_horDiff8_bb3_in(C,D):2
     [C>=4,D=3] 
* CE 35: eval_horDiff8_bb0_in(V_cc,B) = 0+ eval_horDiff8_NewDefault_in(C,D,B):1
     [D>=C+1,C>=1,C+D=V_cc] 
* CE 36: eval_horDiff8_bb0_in(V_cc,B) = 0+ eval_horDiff8_NewDefault_in(C,D,B):2
     [C>=D,C+D=V_cc] 
* CE 37: eval_horDiff8_bb0_in(V_cc,B) = 0+ eval_horDiff8_NewDefault_in(C,D,B):3
     [D>=C+1,C+D=V_cc] 
* CE 38: eval_horDiff8_bb0_in(V_cc,B) = 1+ eval_horDiff8_bb5_in(C,D):1
     [4>=C,D=3] 
* CE 39: eval_horDiff8_bb0_in(V_cc,B) = 1+ eval_horDiff8_bb5_in(C,D):2
     [C>=5,D=3] 
* CE 40: eval_horDiff8_bb0_in(V_cc,B) = 0
     [] 

### Cost equations --> "Loop" of eval_horDiff8_bb0_in/2 
* CEs [33,34,35,36,38,39,40] --> Loop 25 
* CEs [37] --> Loop 26 

#### Loops of eval_horDiff8_bb0_in/2 
* Loop 25: eval_horDiff8_bb0_in(V_cc,B) [] 
* Loop 26: eval_horDiff8_bb0_in(V_cc,B) [] 

### Ranking functions of CR eval_horDiff8_bb0_in(V_cc,B) 

#### Partial ranking functions of CR eval_horDiff8_bb0_in(V_cc,B) 


### Resulting Chains:eval_horDiff8_bb0_in(V_cc,B) 
* [26]...
* [25]


### Merging Chains  eval_horDiff8_bb0_in/2 into  External patterns of execution 
* [[25]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_horDiff8_start/2 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_horDiff8_start/2 
* CE 41: eval_horDiff8_start(V_cc,B) = 0+ eval_horDiff8_bb0_in(V_cc,B):1
     [] 
* CE 42: eval_horDiff8_start(V_cc,B) = 0+ eval_horDiff8_bb0_in(V_cc,B):2
     [] 

### Cost equations --> "Loop" of eval_horDiff8_start/2 
* CEs [42] --> Loop 27 
* CEs [41] --> Loop 28 

#### Loops of eval_horDiff8_start/2 
* Loop 27: eval_horDiff8_start(V_cc,B) [] 
* Loop 28: eval_horDiff8_start(V_cc,B) [] 

### Ranking functions of CR eval_horDiff8_start(V_cc,B) 

#### Partial ranking functions of CR eval_horDiff8_start(V_cc,B) 


### Resulting Chains:eval_horDiff8_start(V_cc,B) 
* [28]
* [27]...


### Merging Chains  eval_horDiff8_start/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) -> [eval_horDiff8_bb9_in(V_4',V__2',V_i_0',B',C',D')] 
1
#### Cost of phase [12]:eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D) -> [eval_horDiff8_bb9_in(V_4',V__2',V_i_0',B',C',D')] 
1*it(12)+0
  Such that:it(12) =< V_i_0
it(12) =< V_i_0-V_i_0'

#### Cost of chains of eval_horDiff8_bb9_in(V_4,V__2,V_i_0,B,C,D):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_i_0

  with precondition: [B=2,V_4=C,V__2=D,V_i_0>=1,V_4>=V_i_0+4] 

* Chain [13]: 0
  with precondition: [B=2,D=V__2,V_4=C,0>=V_i_0,V_4>=V_i_0+4] 


#### Cost of loops [16,17] 

 * loop 16:eval_horDiff8_bb7_in(V_4,V__2,B) -> [eval_horDiff8_bb7_in(V_4',V__2',B')] 
1*s(2)+2
  Such that:s(2) =< V_4'

 * loop 17:eval_horDiff8_bb7_in(V_4,V__2,B) -> [eval_horDiff8_bb7_in(V_4',V__2',B')] 
2
#### Cost of phase [16,17]:eval_horDiff8_bb7_in(V_4,V__2,B) -> [eval_horDiff8_bb7_in(V_4',V__2',B')] 
2*it(16)+2*it(17)+1*s(3)+0
#### Cost of phase [16,17]:eval_horDiff8_bb7_in(V_4,V__2,B) -> [eval_horDiff8_bb7_in(V_4',V__2',B')] 
2*it(16)+2*it(17)+1*s(3)+0
#### Cost of phase [16,17]:eval_horDiff8_bb7_in(V_4,V__2,B) -> [eval_horDiff8_bb7_in(V_4',V__2',B')] 
2*it(16)+2*it(17)+1*s(3)+0
#### Cost of chains of eval_horDiff8_bb7_in(V_4,V__2,B):
* Chain [[16,17]]...: 5*it(16)+0
  with precondition: [V__2>=V_4+1,B=3] 

* Chain [[16,17],15]: 5*it(16)+1
  with precondition: [B=3,V_4>=1,V__2>=V_4+1] 

* Chain [[16,17],14]: 5*it(16)+1*s(4)+1
  Such that:s(4) =< V_4

  with precondition: [B=3,V_4>=5,V__2>=V_4+1] 

* Chain [15]: 1
  with precondition: [B=3,V_4>=V__2] 

* Chain [14]: 1*s(4)+1
  Such that:s(4) =< V_4

  with precondition: [B=3,V_4>=5,V_4>=V__2] 


#### Cost of chains of eval_horDiff8_NewDefault_in(V_4,V_6,B):
* Chain [20]: 1*s(9)+10*s(10)+2
  Such that:s(9) =< V_4

  with precondition: [V_4>=1,V_6>=V_4+1] 

* Chain [19]: 1*s(11)+2
  Such that:s(11) =< V_4

  with precondition: [V_4>=V_6] 

* Chain [18]...: 5*s(12)+1
  with precondition: [V_6>=V_4+1] 


#### Cost of loops [21] 

 * loop 21:eval_horDiff8_bb3_in(V__0,B) -> [eval_horDiff8_bb3_in(V__0',B')] 
1
#### Cost of phase [21]:eval_horDiff8_bb3_in(V__0,B) -> [eval_horDiff8_bb3_in(V__0',B')] 
1*it(21)+0
  Such that:it(21) =< V__0/3
it(21) =< V__0/3-V__0'/3

#### Cost of chains of eval_horDiff8_bb3_in(V__0,B):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V__0/3

  with precondition: [B=3,V__0>=4] 

* Chain [22]: 0
  with precondition: [B=3,3>=V__0] 


#### Cost of loops [23] 

 * loop 23:eval_horDiff8_bb5_in(V__1,B) -> [eval_horDiff8_bb5_in(V__1',B')] 
1
#### Cost of phase [23]:eval_horDiff8_bb5_in(V__1,B) -> [eval_horDiff8_bb5_in(V__1',B')] 
1*it(23)+0
  Such that:it(23) =< V__1/4
it(23) =< V__1/4-V__1'/4

#### Cost of chains of eval_horDiff8_bb5_in(V__1,B):
* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< V__1/4

  with precondition: [B=3,V__1>=5] 

* Chain [24]: 0
  with precondition: [B=3,4>=V__1] 


#### Cost of chains of eval_horDiff8_bb0_in(V_cc,B):
* Chain [26]...: 5*s(13)+1
  with precondition: [] 

* Chain [25]: 13*s(14)+1*s(15)+2
  Such that:s(15) =< V_cc/2

  with precondition: [] 


#### Cost of chains of eval_horDiff8_start(V_cc,B):
* Chain [28]: 1*s(19)+13*s(20)+2
  Such that:s(19) =< V_cc/2

  with precondition: [] 

* Chain [27]...: 5*s(21)+1
  with precondition: [] 


Closed-form bounds of eval_horDiff8_start(V_cc,B): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_horDiff8_start(V_cc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 67 ms.
* Invariants computed in 84 ms.
   - Backward Invariants 43 ms.
   - Transitive Invariants 18 ms.
* Refinement performed in 143 ms.
* Termination proved in 24 ms.
* Upper bounds computed in 203 ms.
   - Equation cost structures 48 ms.
   - Phase cost structures 131 ms.
   - Chain cost structures 35 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 605 ms.

