Warning: Ignored call to eval_dict_next_stop/1 in equation eval_dict_next_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_dict_next_5/4,eval_dict_next_6/4,eval_dict_next_bb1_in/2]
1. non_recursive  : [eval_dict_next_bb6_in/1]
2. non_recursive  : [eval_dict_next_16/1]
3. non_recursive  : [eval_dict_next_15/1]
4. non_recursive  : [eval_dict_next_bb5_in/1]
5. non_recursive  : [loop_cont_eval_dict_next_bb1_in/2]
6. non_recursive  : [eval_dict_next_bb0_in/2]
7. non_recursive  : [eval_dict_next_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_dict_next_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_dict_next_bb1_in/2
6. SCC is partially evaluated into eval_dict_next_bb0_in/2
7. SCC is partially evaluated into eval_dict_next_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_next_bb1_in/2 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_dict_next_bb1_in/2 
* CE 9: eval_dict_next_bb1_in(V__01,B) = 0
     [0>=V__01,B=3] 
* CE 10: eval_dict_next_bb1_in(V__01,B) = 0
     [V__01>=1,B=2] 
* CE 11: eval_dict_next_bb1_in(V__01,B) = 1+ eval_dict_next_bb1_in(C,B)
     [C>=0,C+1=V__01] 

### Cost equations --> "Loop" of eval_dict_next_bb1_in/2 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_dict_next_bb1_in/2 
* Loop 8: eval_dict_next_bb1_in(V__01,B)->  eval_dict_next_bb1_in(V__01',B)
                  [V__01'>=0,V__01'+1=V__01] 
* Loop 9: eval_dict_next_bb1_in(V__01,B) [0>=V__01,B=3] 
* Loop 10: eval_dict_next_bb1_in(V__01,B) [V__01>=1,B=2] 

### Ranking functions of CR eval_dict_next_bb1_in(V__01,B) 
* RF of phase [8]: [V__01]

#### Partial ranking functions of CR eval_dict_next_bb1_in(V__01,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__01


### Resulting Chains:eval_dict_next_bb1_in(V__01,B) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_dict_next_bb1_in/2 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9]] --> 2 
* [[9,[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_dict_next_bb1_in/2 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations loop_cont_eval_dict_next_bb1_in/2 
* CE 12: loop_cont_eval_dict_next_bb1_in(B,A) = 0
     [B=3] 
* CE 13: loop_cont_eval_dict_next_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_next_bb1_in/2 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of loop_cont_eval_dict_next_bb1_in/2 
* Loop 11: loop_cont_eval_dict_next_bb1_in(B,A) [B=3] 
* Loop 12: loop_cont_eval_dict_next_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_dict_next_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_dict_next_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_dict_next_bb1_in(B,A) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_dict_next_bb1_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_dict_next_bb0_in/2 
* CE 3 is refined into CE [14,15,16] 


#### Refined cost equations eval_dict_next_bb0_in/2 
* CE 14: eval_dict_next_bb0_in(V_index,B) = 1+ eval_dict_next_bb1_in(V_index,C):1+ loop_cont_eval_dict_next_bb1_in(D,B):1
     [V_index>=1,D=2,C=2] 
* CE 15: eval_dict_next_bb0_in(V_index,B) = 1+ eval_dict_next_bb1_in(V_index,C):2+ loop_cont_eval_dict_next_bb1_in(D,B):2
     [0>=V_index,D=3,C=3] 
* CE 16: eval_dict_next_bb0_in(V_index,B) = 1+ eval_dict_next_bb1_in(V_index,C):3+ loop_cont_eval_dict_next_bb1_in(D,B):2
     [V_index>=1,D=3,C=3] 

### Cost equations --> "Loop" of eval_dict_next_bb0_in/2 
* CEs [14,16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_dict_next_bb0_in/2 
* Loop 13: eval_dict_next_bb0_in(V_index,B) [V_index>=1] 
* Loop 14: eval_dict_next_bb0_in(V_index,B) [0>=V_index] 

### Ranking functions of CR eval_dict_next_bb0_in(V_index,B) 

#### Partial ranking functions of CR eval_dict_next_bb0_in(V_index,B) 


### Resulting Chains:eval_dict_next_bb0_in(V_index,B) 
* [14]
* [13]


### Merging Chains  eval_dict_next_bb0_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_dict_next_start/2 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_dict_next_start/2 
* CE 17: eval_dict_next_start(V_index,B) = 0+ eval_dict_next_bb0_in(V_index,B):1
     [0>=V_index] 
* CE 18: eval_dict_next_start(V_index,B) = 0+ eval_dict_next_bb0_in(V_index,B):2
     [V_index>=1] 

### Cost equations --> "Loop" of eval_dict_next_start/2 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_dict_next_start/2 
* Loop 15: eval_dict_next_start(V_index,B) [V_index>=1] 
* Loop 16: eval_dict_next_start(V_index,B) [0>=V_index] 

### Ranking functions of CR eval_dict_next_start(V_index,B) 

#### Partial ranking functions of CR eval_dict_next_start(V_index,B) 


### Resulting Chains:eval_dict_next_start(V_index,B) 
* [16]
* [15]


### Merging Chains  eval_dict_next_start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_dict_next_bb1_in(V__01,B) -> [eval_dict_next_bb1_in(V__01',B')] 
1
#### Cost of phase [8]:eval_dict_next_bb1_in(V__01,B) -> [eval_dict_next_bb1_in(V__01',B')] 
1*it(8)+0
  Such that:it(8) =< V__01
it(8) =< V__01-V__01'

#### Cost of phase [8]:eval_dict_next_bb1_in(V__01,B) -> [eval_dict_next_bb1_in(V__01',B')] 
1*it(8)+0
  Such that:it(8) =< V__01
it(8) =< V__01-V__01'

#### Cost of chains of eval_dict_next_bb1_in(V__01,B):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__01

  with precondition: [B=2,V__01>=2] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__01

  with precondition: [B=3,V__01>=1] 

* Chain [10]: 0
  with precondition: [B=2,V__01>=1] 

* Chain [9]: 0
  with precondition: [B=3,0>=V__01] 


#### Cost of chains of loop_cont_eval_dict_next_bb1_in(B,A):
* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_dict_next_bb0_in(V_index,B):
* Chain [14]: 1
  with precondition: [0>=V_index] 

* Chain [13]: 2*s(2)+1
  Such that:aux(1) =< V_index
s(2) =< aux(1)

  with precondition: [V_index>=1] 


#### Cost of chains of eval_dict_next_start(V_index,B):
* Chain [16]: 1
  with precondition: [0>=V_index] 

* Chain [15]: 2*s(5)+1
  Such that:s(4) =< V_index
s(5) =< s(4)

  with precondition: [V_index>=1] 


Closed-form bounds of eval_dict_next_start(V_index,B): 
-------------------------------------
* Chain [16] with precondition: [0>=V_index] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [15] with precondition: [V_index>=1] 
    - Upper bound: 2*V_index+1 
    - Complexity: n 

### Maximum cost of eval_dict_next_start(V_index,B): nat(V_index)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 20 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 37 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 147 ms.

