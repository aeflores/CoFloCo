Warning: Ignored call to eval_moveshow_continue_stop/1 in equation eval_moveshow_continue_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_moveshow_continue_18/5,eval_moveshow_continue_19/6,eval_moveshow_continue_23/6,eval_moveshow_continue_24/6,eval_moveshow_continue_27/7,eval_moveshow_continue_28/8,eval_moveshow_continue_6/4,eval_moveshow_continue_7/5,eval_moveshow_continue_bb10_in/7,eval_moveshow_continue_bb1_in/4,eval_moveshow_continue_bb7_in/6]
1. non_recursive  : [eval_moveshow_continue_bb12_in/1]
2. non_recursive  : [eval_moveshow_continue_11/1]
3. non_recursive  : [eval_moveshow_continue_10/2]
4. non_recursive  : [eval_moveshow_continue_30/1]
5. non_recursive  : [eval_moveshow_continue_29/2]
6. non_recursive  : [eval_moveshow_continue_bb11_in/2]
7. non_recursive  : [loop_cont_eval_moveshow_continue_bb1_in/3]
8. non_recursive  : [eval_moveshow_continue_1/2]
9. non_recursive  : [eval_moveshow_continue_0/1]
10. non_recursive  : [eval_moveshow_continue_bb0_in/1]
11. non_recursive  : [eval_moveshow_continue_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_moveshow_continue_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_moveshow_continue_bb1_in/3
8. SCC is partially evaluated into eval_moveshow_continue_1/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_moveshow_continue_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_moveshow_continue_bb1_in/4 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_moveshow_continue_bb1_in/4 
* CE 10: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) = 0
     [C>=4,B=3] 
* CE 11: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) = 0
     [2>=C,B=3] 
* CE 12: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) = 0
     [B=2] 
* CE 13: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) = 1+ eval_moveshow_continue_bb1_in(V_3,D,B,C)
     [] 

### Cost equations --> "Loop" of eval_moveshow_continue_bb1_in/4 
* CEs [13] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_moveshow_continue_bb1_in/4 
* Loop 9: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C)->  eval_moveshow_continue_bb1_in(V_3,V_index_0',B,C)
                  [] 
* Loop 10: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) [C>=4,B=3] 
* Loop 11: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) [2>=C,B=3] 
* Loop 12: eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) [B=2] 

### Ranking functions of CR eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) 

#### Partial ranking functions of CR eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) 


### Resulting Chains:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) 
* [[9]]...
* [[9],12]
* [[9],11]
* [[9],10]
* [12]
* [11]
* [10]


### Merging Chains  eval_moveshow_continue_bb1_in/4 into  External patterns of execution 
* [[12],[12,[9]]] --> 1 
* [[11],[11,[9]]] --> 2 
* [[10],[10,[9]]] --> 3 
* [[[9]]] --> 4 


### Specialization of cost equations loop_cont_eval_moveshow_continue_bb1_in/3 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 


#### Refined cost equations loop_cont_eval_moveshow_continue_bb1_in/3 
* CE 14: loop_cont_eval_moveshow_continue_bb1_in(C,A,B) = 0
     [C=3] 
* CE 15: loop_cont_eval_moveshow_continue_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_moveshow_continue_bb1_in/3 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of loop_cont_eval_moveshow_continue_bb1_in/3 
* Loop 13: loop_cont_eval_moveshow_continue_bb1_in(C,A,B) [C=3] 
* Loop 14: loop_cont_eval_moveshow_continue_bb1_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_moveshow_continue_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_moveshow_continue_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_moveshow_continue_bb1_in(C,A,B) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_moveshow_continue_bb1_in/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_moveshow_continue_1/2 
* CE 3 is refined into CE [16,17,18,19] 


#### Refined cost equations eval_moveshow_continue_1/2 
* CE 16: eval_moveshow_continue_1(V_3,B) = 1+ eval_moveshow_continue_bb1_in(V_3,C,D,E):1+ loop_cont_eval_moveshow_continue_bb1_in(F,E,B):1
     [F=2,D=2] 
* CE 17: eval_moveshow_continue_1(V_3,B) = 1+ eval_moveshow_continue_bb1_in(V_3,C,D,E):2+ loop_cont_eval_moveshow_continue_bb1_in(F,E,B):2
     [2>=E,F=3,D=3] 
* CE 18: eval_moveshow_continue_1(V_3,B) = 1+ eval_moveshow_continue_bb1_in(V_3,C,D,E):3+ loop_cont_eval_moveshow_continue_bb1_in(F,E,B):2
     [E>=4,F=3,D=3] 
* CE 19: eval_moveshow_continue_1(V_3,B) = 1+ eval_moveshow_continue_bb1_in(V_3,C,D,E):4
     [] 

### Cost equations --> "Loop" of eval_moveshow_continue_1/2 
* CEs [19] --> Loop 15 
* CEs [16,17,18] --> Loop 16 

#### Loops of eval_moveshow_continue_1/2 
* Loop 15: eval_moveshow_continue_1(V_3,B) [] 
* Loop 16: eval_moveshow_continue_1(V_3,B) [] 

### Ranking functions of CR eval_moveshow_continue_1(V_3,B) 

#### Partial ranking functions of CR eval_moveshow_continue_1(V_3,B) 


### Resulting Chains:eval_moveshow_continue_1(V_3,B) 
* [16]
* [15]...


### Merging Chains  eval_moveshow_continue_1/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_moveshow_continue_start/2 
* CE 2 is refined into CE [20,21] 


#### Refined cost equations eval_moveshow_continue_start/2 
* CE 20: eval_moveshow_continue_start(V_xymask,B) = 0+ eval_moveshow_continue_1(C,B):1
     [] 
* CE 21: eval_moveshow_continue_start(V_xymask,B) = 0+ eval_moveshow_continue_1(C,B):2
     [] 

### Cost equations --> "Loop" of eval_moveshow_continue_start/2 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_moveshow_continue_start/2 
* Loop 17: eval_moveshow_continue_start(V_xymask,B) [] 
* Loop 18: eval_moveshow_continue_start(V_xymask,B) [] 

### Ranking functions of CR eval_moveshow_continue_start(V_xymask,B) 

#### Partial ranking functions of CR eval_moveshow_continue_start(V_xymask,B) 


### Resulting Chains:eval_moveshow_continue_start(V_xymask,B) 
* [18]
* [17]...


### Merging Chains  eval_moveshow_continue_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) -> [eval_moveshow_continue_bb1_in(V_3',V_index_0',B',C')] 
1
#### Cost of phase [9]:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) -> [eval_moveshow_continue_bb1_in(V_3',V_index_0',B',C')] 
1*it(9)+0
#### Cost of phase [9]:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) -> [eval_moveshow_continue_bb1_in(V_3',V_index_0',B',C')] 
1*it(9)+0
#### Cost of phase [9]:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) -> [eval_moveshow_continue_bb1_in(V_3',V_index_0',B',C')] 
1*it(9)+0
#### Cost of phase [9]:eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C) -> [eval_moveshow_continue_bb1_in(V_3',V_index_0',B',C')] 
1*it(9)+0
#### Cost of chains of eval_moveshow_continue_bb1_in(V_3,V_index_0,B,C):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [] 

* Chain [[9],12]: 1*it(9)+0
  with precondition: [B=2] 

* Chain [[9],11]: 1*it(9)+0
  with precondition: [B=3,2>=C] 

* Chain [[9],10]: 1*it(9)+0
  with precondition: [B=3,C>=4] 

* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3,2>=C] 

* Chain [10]: 0
  with precondition: [B=3,C>=4] 


#### Cost of chains of loop_cont_eval_moveshow_continue_bb1_in(C,A,B):
* Chain [14]: 0
  with precondition: [C=2] 

* Chain [13]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_moveshow_continue_1(V_3,B):
* Chain [16]: 1*aux(4)+0
  with precondition: [] 

* Chain [15]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_moveshow_continue_start(V_xymask,B):
* Chain [18]: 1*s(8)+0
  with precondition: [] 

* Chain [17]...: 1*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_moveshow_continue_start(V_xymask,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_moveshow_continue_start(V_xymask,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 12 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 9 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 79 ms.

