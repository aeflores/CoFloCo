WARNING: Excluded non-linear constraints:[G=D+C*E+32]
WARNING: Excluded non-linear constraints:[F=D+C*E+32]
Warning: Ignored call to eval_clist_add_tile_stop/1 in equation eval_clist_add_tile_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_clist_add_tile_25/7,eval_clist_add_tile_26/8,eval_clist_add_tile_31/8,eval_clist_add_tile_32/8,eval_clist_add_tile_bb5_in/7]
1. non_recursive  : [eval_clist_add_tile_bb11_in/1]
2. non_recursive  : [eval_clist_add_tile_62/1]
3. non_recursive  : [eval_clist_add_tile_61/2]
4. non_recursive  : [eval_clist_add_tile_60/1]
5. non_recursive  : [eval_clist_add_tile_59/5]
6. non_recursive  : [eval_clist_add_tile_50/3]
7. non_recursive  : [eval_clist_add_tile_49/4]
8. non_recursive  : [loop_cont_eval_clist_add_tile_bb5_in/5]
9. non_recursive  : [eval_clist_add_tile_bb4_in/4]
10. non_recursive  : [eval_clist_add_tile_22/4]
11. non_recursive  : [eval_clist_add_tile_21/4]
12. non_recursive  : [eval_clist_add_tile_bb3_in/4]
13. non_recursive  : [eval_clist_add_tile_20/4]
14. non_recursive  : [eval_clist_add_tile_19/5]
15. non_recursive  : [eval_clist_add_tile_15/4]
16. non_recursive  : [eval_clist_add_tile_14/5]
17. non_recursive  : [eval_clist_add_tile_bb0_in/2]
18. non_recursive  : [eval_clist_add_tile_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_clist_add_tile_bb5_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_clist_add_tile_bb5_in/5
9. SCC is partially evaluated into eval_clist_add_tile_bb4_in/4
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_clist_add_tile_15/4
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_clist_add_tile_bb0_in/2
18. SCC is partially evaluated into eval_clist_add_tile_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_clist_add_tile_bb5_in/7 
* CE 7 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations eval_clist_add_tile_bb5_in/7 
* CE 12: eval_clist_add_tile_bb5_in(A,B,C,D,A,B,E) = 0
     [D=3] 
* CE 13: eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) = 0
     [B=2] 
* CE 14: eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) = 1+ eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E)
     [] 

### Cost equations --> "Loop" of eval_clist_add_tile_bb5_in/7 
* CEs [14] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_clist_add_tile_bb5_in/7 
* Loop 10: eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E)->  eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E)
                  [] 
* Loop 11: eval_clist_add_tile_bb5_in(A,B,C,D,A,B,E) [D=3] 
* Loop 12: eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) [B=2] 

### Ranking functions of CR eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) 

#### Partial ranking functions of CR eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) 


### Resulting Chains:eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) 
* [[10]]...
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_clist_add_tile_bb5_in/7 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations loop_cont_eval_clist_add_tile_bb5_in/5 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations loop_cont_eval_clist_add_tile_bb5_in/5 
* CE 15: loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) = 0
     [F=3] 
* CE 16: loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_clist_add_tile_bb5_in/5 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of loop_cont_eval_clist_add_tile_bb5_in/5 
* Loop 13: loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) [F=3] 
* Loop 14: loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) [F=2] 

### Ranking functions of CR loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) 


### Resulting Chains:loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_clist_add_tile_bb5_in/5 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_clist_add_tile_bb4_in/4 
* CE 6 is refined into CE [17,18,19] 


#### Refined cost equations eval_clist_add_tile_bb4_in/4 
* CE 17: eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) = 1+ eval_clist_add_tile_bb5_in(V_sraster,V_1,V_12,C,D,E,F):1+ loop_cont_eval_clist_add_tile_bb5_in(G,D,E,F,B):1
     [G=2,C=2] 
* CE 18: eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) = 1+ eval_clist_add_tile_bb5_in(V_sraster,V_1,V_12,C,V_sraster,V_1,D):2+ loop_cont_eval_clist_add_tile_bb5_in(E,V_sraster,V_1,D,B):2
     [E=3,C=3] 
* CE 19: eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) = 1+ eval_clist_add_tile_bb5_in(V_sraster,V_1,V_12,C,D,E,F):3
     [] 

### Cost equations --> "Loop" of eval_clist_add_tile_bb4_in/4 
* CEs [19] --> Loop 15 
* CEs [17,18] --> Loop 16 

#### Loops of eval_clist_add_tile_bb4_in/4 
* Loop 15: eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) [] 
* Loop 16: eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) [] 

### Ranking functions of CR eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) 

#### Partial ranking functions of CR eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) 


### Resulting Chains:eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B) 
* [16]
* [15]...


### Merging Chains  eval_clist_add_tile_bb4_in/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_clist_add_tile_15/4 
* CE 5 is refined into CE [20,21] 


#### Refined cost equations eval_clist_add_tile_15/4 
* CE 20: eval_clist_add_tile_15(V_sraster,V_1,V_12,B) = 0+ eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B):1
     [] 
* CE 21: eval_clist_add_tile_15(V_sraster,V_1,V_12,B) = 0+ eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_add_tile_15/4 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_clist_add_tile_15/4 
* Loop 17: eval_clist_add_tile_15(V_sraster,V_1,V_12,B) [] 
* Loop 18: eval_clist_add_tile_15(V_sraster,V_1,V_12,B) [] 

### Ranking functions of CR eval_clist_add_tile_15(V_sraster,V_1,V_12,B) 

#### Partial ranking functions of CR eval_clist_add_tile_15(V_sraster,V_1,V_12,B) 


### Resulting Chains:eval_clist_add_tile_15(V_sraster,V_1,V_12,B) 
* [18]
* [17]...


### Merging Chains  eval_clist_add_tile_15/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_clist_add_tile_bb0_in/2 
* CE 3 is refined into CE [22,23] 
* CE 4 is refined into CE [24,25] 


#### Refined cost equations eval_clist_add_tile_bb0_in/2 
* CE 22: eval_clist_add_tile_bb0_in(V_sraster,B) = 0+ eval_clist_add_tile_15(V_sraster,C,D,B):1
     [] 
* CE 23: eval_clist_add_tile_bb0_in(V_sraster,B) = 0+ eval_clist_add_tile_15(V_sraster,C,D,B):2
     [] 
* CE 24: eval_clist_add_tile_bb0_in(V_sraster,B) = 0+ eval_clist_add_tile_bb4_in(V_sraster,C,D,B):1
     [] 
* CE 25: eval_clist_add_tile_bb0_in(V_sraster,B) = 0+ eval_clist_add_tile_bb4_in(V_sraster,C,D,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_add_tile_bb0_in/2 
* CEs [23,25] --> Loop 19 
* CEs [22,24] --> Loop 20 

#### Loops of eval_clist_add_tile_bb0_in/2 
* Loop 19: eval_clist_add_tile_bb0_in(V_sraster,B) [] 
* Loop 20: eval_clist_add_tile_bb0_in(V_sraster,B) [] 

### Ranking functions of CR eval_clist_add_tile_bb0_in(V_sraster,B) 

#### Partial ranking functions of CR eval_clist_add_tile_bb0_in(V_sraster,B) 


### Resulting Chains:eval_clist_add_tile_bb0_in(V_sraster,B) 
* [20]
* [19]...


### Merging Chains  eval_clist_add_tile_bb0_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_clist_add_tile_start/3 
* CE 2 is refined into CE [26,27] 


#### Refined cost equations eval_clist_add_tile_start/3 
* CE 26: eval_clist_add_tile_start(V_sraster,V_depth,B) = 0+ eval_clist_add_tile_bb0_in(V_sraster,B):1
     [] 
* CE 27: eval_clist_add_tile_start(V_sraster,V_depth,B) = 0+ eval_clist_add_tile_bb0_in(V_sraster,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_add_tile_start/3 
* CEs [27] --> Loop 21 
* CEs [26] --> Loop 22 

#### Loops of eval_clist_add_tile_start/3 
* Loop 21: eval_clist_add_tile_start(V_sraster,V_depth,B) [] 
* Loop 22: eval_clist_add_tile_start(V_sraster,V_depth,B) [] 

### Ranking functions of CR eval_clist_add_tile_start(V_sraster,V_depth,B) 

#### Partial ranking functions of CR eval_clist_add_tile_start(V_sraster,V_depth,B) 


### Resulting Chains:eval_clist_add_tile_start(V_sraster,V_depth,B) 
* [22]
* [21]...


### Merging Chains  eval_clist_add_tile_start/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) -> [eval_clist_add_tile_bb5_in(V_sraster',V_1',V_38',B',C',D',E')] 
1
#### Cost of phase [10]:eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) -> [eval_clist_add_tile_bb5_in(V_sraster',V_1',V_38',B',C',D',E')] 
1*it(10)+0
#### Cost of phase [10]:eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) -> [eval_clist_add_tile_bb5_in(V_sraster',V_1',V_38',B',C',D',E')] 
1*it(10)+0
#### Cost of phase [10]:eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E) -> [eval_clist_add_tile_bb5_in(V_sraster',V_1',V_38',B',C',D',E')] 
1*it(10)+0
#### Cost of chains of eval_clist_add_tile_bb5_in(V_sraster,V_1,V_38,B,C,D,E):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [] 

* Chain [[10],12]: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3,V_sraster=C,V_1=D] 

* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3,C=V_sraster,D=V_1] 


#### Cost of chains of loop_cont_eval_clist_add_tile_bb5_in(F,A,B,C,D):
* Chain [14]: 0
  with precondition: [F=2] 

* Chain [13]: 0
  with precondition: [F=3] 


#### Cost of chains of eval_clist_add_tile_bb4_in(V_sraster,V_1,V_12,B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_clist_add_tile_15(V_sraster,V_1,V_12,B):
* Chain [18]: 1*s(6)+0
  with precondition: [] 

* Chain [17]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_clist_add_tile_bb0_in(V_sraster,B):
* Chain [20]: 1*aux(4)+0
  with precondition: [] 

* Chain [19]...: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_clist_add_tile_start(V_sraster,V_depth,B):
* Chain [22]: 1*s(12)+0
  with precondition: [] 

* Chain [21]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_clist_add_tile_start(V_sraster,V_depth,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_clist_add_tile_start(V_sraster,V_depth,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 64 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 66 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 274 ms.

