Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_122/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_25/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_34/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_4/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_43/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_52/1 
Warning: Ignored call to eval_get_options_stop/1 in equation eval_get_options_66/1 
Warning: Ignored call to eval_get_options_stop/1 in equation loop_cont_eval_get_options_bb1_in/3 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_get_options_0/4,eval_get_options_1/4,eval_get_options_10/4,eval_get_options_100/4,eval_get_options_101/4,eval_get_options_105/4,eval_get_options_106/4,eval_get_options_11/4,eval_get_options_110/4,eval_get_options_111/4,eval_get_options_5/4,eval_get_options_53/4,eval_get_options_54/4,eval_get_options_56/4,eval_get_options_57/4,eval_get_options_58/4,eval_get_options_59/4,eval_get_options_6/4,eval_get_options_73/4,eval_get_options_74/4,eval_get_options_76/4,eval_get_options_77/4,eval_get_options_79/4,eval_get_options_80/4,eval_get_options_89/4,eval_get_options_90/4,eval_get_options_93/4,eval_get_options_94/4,eval_get_options_95/4,eval_get_options_96/4,eval_get_options_bb19_in/4,eval_get_options_bb1_in/4,eval_get_options_bb26_in/4,eval_get_options_bb28_in/4]
1. non_recursive  : [eval_get_options_4/1]
2. non_recursive  : [eval_get_options_3/2]
3. non_recursive  : [eval_get_options_2/2]
4. non_recursive  : [eval_get_options_25/1]
5. non_recursive  : [eval_get_options_24/2]
6. non_recursive  : [eval_get_options_23/2]
7. non_recursive  : [eval_get_options_34/1]
8. non_recursive  : [eval_get_options_33/2]
9. non_recursive  : [eval_get_options_32/2]
10. non_recursive  : [eval_get_options_43/1]
11. non_recursive  : [eval_get_options_42/2]
12. non_recursive  : [eval_get_options_41/2]
13. non_recursive  : [eval_get_options_52/1]
14. non_recursive  : [eval_get_options_51/2]
15. non_recursive  : [eval_get_options_50/2]
16. non_recursive  : [eval_get_options_49/2]
17. non_recursive  : [eval_get_options_48/2]
18. non_recursive  : [eval_get_options_66/1]
19. non_recursive  : [eval_get_options_65/2]
20. non_recursive  : [eval_get_options_64/2]
21. non_recursive  : [eval_get_options_122/1]
22. non_recursive  : [eval_get_options_121/2]
23. non_recursive  : [eval_get_options_NewDefault_in/2]
24. non_recursive  : [loop_cont_eval_get_options_bb1_in/3]
25. non_recursive  : [eval_get_options_bb0_in/3]
26. non_recursive  : [eval_get_options_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_get_options_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into loop_cont_eval_get_options_bb1_in/3
25. SCC is partially evaluated into eval_get_options_bb0_in/3
26. SCC is partially evaluated into eval_get_options_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_get_options_bb1_in/4 
* CE 12 is refined into CE [21] 
* CE 11 is refined into CE [22] 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 8 is refined into CE [25] 
* CE 7 is refined into CE [26] 
* CE 6 is refined into CE [27] 
* CE 5 is refined into CE [28] 
* CE 4 is refined into CE [29] 


#### Refined cost equations eval_get_options_bb1_in/4 
* CE 21: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=9] 
* CE 22: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=8] 
* CE 23: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=7] 
* CE 24: eval_get_options_bb1_in(V_argc,V__optind,B,C) = 0
     [B=6] 
* CE 25: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=5] 
* CE 26: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=4] 
* CE 27: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=3] 
* CE 28: eval_get_options_bb1_in(A,B,C,B) = 0
     [C=2] 
* CE 29: eval_get_options_bb1_in(V_argc,V__optind,B,C) = 1+ eval_get_options_bb1_in(V_argc,D,B,C)
     [] 

### Cost equations --> "Loop" of eval_get_options_bb1_in/4 
* CEs [29] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [28] --> Loop 28 

#### Loops of eval_get_options_bb1_in/4 
* Loop 20: eval_get_options_bb1_in(V_argc,V__optind,B,C)->  eval_get_options_bb1_in(V_argc,V__optind',B,C)
                  [] 
* Loop 21: eval_get_options_bb1_in(A,B,C,B) [C=9] 
* Loop 22: eval_get_options_bb1_in(A,B,C,B) [C=8] 
* Loop 23: eval_get_options_bb1_in(A,B,C,B) [C=7] 
* Loop 24: eval_get_options_bb1_in(V_argc,V__optind,B,C) [B=6] 
* Loop 25: eval_get_options_bb1_in(A,B,C,B) [C=5] 
* Loop 26: eval_get_options_bb1_in(A,B,C,B) [C=4] 
* Loop 27: eval_get_options_bb1_in(A,B,C,B) [C=3] 
* Loop 28: eval_get_options_bb1_in(A,B,C,B) [C=2] 

### Ranking functions of CR eval_get_options_bb1_in(V_argc,V__optind,B,C) 

#### Partial ranking functions of CR eval_get_options_bb1_in(V_argc,V__optind,B,C) 


### Resulting Chains:eval_get_options_bb1_in(V_argc,V__optind,B,C) 
* [[20]]...
* [[20],28]
* [[20],27]
* [[20],26]
* [[20],25]
* [[20],24]
* [[20],23]
* [[20],22]
* [[20],21]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]


### Merging Chains  eval_get_options_bb1_in/4 into  External patterns of execution 
* [[28],[28,[20]]] --> 1 
* [[27],[27,[20]]] --> 2 
* [[26],[26,[20]]] --> 3 
* [[25],[25,[20]]] --> 4 
* [[24],[24,[20]]] --> 5 
* [[23],[23,[20]]] --> 6 
* [[22],[22,[20]]] --> 7 
* [[21],[21,[20]]] --> 8 
* [[[20]]] --> 9 


### Specialization of cost equations loop_cont_eval_get_options_bb1_in/3 
* CE 20 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 18 is refined into CE [32] 
* CE 17 is refined into CE [33] 
* CE 16 is refined into CE [34] 
* CE 15 is refined into CE [35] 
* CE 14 is refined into CE [36] 
* CE 13 is refined into CE [37] 


#### Refined cost equations loop_cont_eval_get_options_bb1_in/3 
* CE 30: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=9] 
* CE 31: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=8] 
* CE 32: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=7] 
* CE 33: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=6] 
* CE 34: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=5] 
* CE 35: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=4] 
* CE 36: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=3] 
* CE 37: loop_cont_eval_get_options_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_get_options_bb1_in/3 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [34] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [37] --> Loop 36 

#### Loops of loop_cont_eval_get_options_bb1_in/3 
* Loop 29: loop_cont_eval_get_options_bb1_in(C,A,B) [C=9] 
* Loop 30: loop_cont_eval_get_options_bb1_in(C,A,B) [C=8] 
* Loop 31: loop_cont_eval_get_options_bb1_in(C,A,B) [C=7] 
* Loop 32: loop_cont_eval_get_options_bb1_in(C,A,B) [C=6] 
* Loop 33: loop_cont_eval_get_options_bb1_in(C,A,B) [C=5] 
* Loop 34: loop_cont_eval_get_options_bb1_in(C,A,B) [C=4] 
* Loop 35: loop_cont_eval_get_options_bb1_in(C,A,B) [C=3] 
* Loop 36: loop_cont_eval_get_options_bb1_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_get_options_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_get_options_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_get_options_bb1_in(C,A,B) 
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]


### Merging Chains  loop_cont_eval_get_options_bb1_in/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34]] --> 3 
* [[33]] --> 4 
* [[32]] --> 5 
* [[31]] --> 6 
* [[30]] --> 7 
* [[29]] --> 8 


### Specialization of cost equations eval_get_options_bb0_in/3 
* CE 3 is refined into CE [38,39,40,41,42,43,44,45,46] 


#### Refined cost equations eval_get_options_bb0_in/3 
* CE 38: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):1+ loop_cont_eval_get_options_bb1_in(E,D,B):1
     [E=2,C=2] 
* CE 39: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):2+ loop_cont_eval_get_options_bb1_in(E,D,B):2
     [E=3,C=3] 
* CE 40: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):3+ loop_cont_eval_get_options_bb1_in(E,D,B):3
     [E=4,C=4] 
* CE 41: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):4+ loop_cont_eval_get_options_bb1_in(E,D,B):4
     [E=5,C=5] 
* CE 42: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):5+ loop_cont_eval_get_options_bb1_in(E,D,B):5
     [E=6,C=6] 
* CE 43: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):6+ loop_cont_eval_get_options_bb1_in(E,D,B):6
     [E=7,C=7] 
* CE 44: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):7+ loop_cont_eval_get_options_bb1_in(E,D,B):7
     [E=8,C=8] 
* CE 45: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):8+ loop_cont_eval_get_options_bb1_in(E,D,B):8
     [E=9,C=9] 
* CE 46: eval_get_options_bb0_in(V_argc,V__optind,B) = 1+ eval_get_options_bb1_in(V_argc,V__optind,C,D):9
     [] 

### Cost equations --> "Loop" of eval_get_options_bb0_in/3 
* CEs [46] --> Loop 37 
* CEs [38,39,40,41,42,43,44,45] --> Loop 38 

#### Loops of eval_get_options_bb0_in/3 
* Loop 37: eval_get_options_bb0_in(V_argc,V__optind,B) [] 
* Loop 38: eval_get_options_bb0_in(V_argc,V__optind,B) [] 

### Ranking functions of CR eval_get_options_bb0_in(V_argc,V__optind,B) 

#### Partial ranking functions of CR eval_get_options_bb0_in(V_argc,V__optind,B) 


### Resulting Chains:eval_get_options_bb0_in(V_argc,V__optind,B) 
* [38]
* [37]...


### Merging Chains  eval_get_options_bb0_in/3 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_get_options_start/3 
* CE 2 is refined into CE [47,48] 


#### Refined cost equations eval_get_options_start/3 
* CE 47: eval_get_options_start(V_argc,V__optind,B) = 0+ eval_get_options_bb0_in(V_argc,V__optind,B):1
     [] 
* CE 48: eval_get_options_start(V_argc,V__optind,B) = 0+ eval_get_options_bb0_in(V_argc,V__optind,B):2
     [] 

### Cost equations --> "Loop" of eval_get_options_start/3 
* CEs [48] --> Loop 39 
* CEs [47] --> Loop 40 

#### Loops of eval_get_options_start/3 
* Loop 39: eval_get_options_start(V_argc,V__optind,B) [] 
* Loop 40: eval_get_options_start(V_argc,V__optind,B) [] 

### Ranking functions of CR eval_get_options_start(V_argc,V__optind,B) 

#### Partial ranking functions of CR eval_get_options_start(V_argc,V__optind,B) 


### Resulting Chains:eval_get_options_start(V_argc,V__optind,B) 
* [40]
* [39]...


### Merging Chains  eval_get_options_start/3 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_get_options_bb1_in(V_argc,V__optind,B,C) -> [eval_get_options_bb1_in(V_argc',V__optind',B',C')] 
1*it(20)+0
#### Cost of chains of eval_get_options_bb1_in(V_argc,V__optind,B,C):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [] 

* Chain [[20],28]: 1*it(20)+0
  with precondition: [B=2] 

* Chain [[20],27]: 1*it(20)+0
  with precondition: [B=3] 

* Chain [[20],26]: 1*it(20)+0
  with precondition: [B=4] 

* Chain [[20],25]: 1*it(20)+0
  with precondition: [B=5] 

* Chain [[20],24]: 1*it(20)+0
  with precondition: [B=6] 

* Chain [[20],23]: 1*it(20)+0
  with precondition: [B=7] 

* Chain [[20],22]: 1*it(20)+0
  with precondition: [B=8] 

* Chain [[20],21]: 1*it(20)+0
  with precondition: [B=9] 

* Chain [28]: 0
  with precondition: [B=2,C=V__optind] 

* Chain [27]: 0
  with precondition: [B=3,C=V__optind] 

* Chain [26]: 0
  with precondition: [B=4,C=V__optind] 

* Chain [25]: 0
  with precondition: [B=5,C=V__optind] 

* Chain [24]: 0
  with precondition: [B=6] 

* Chain [23]: 0
  with precondition: [B=7,C=V__optind] 

* Chain [22]: 0
  with precondition: [B=8,C=V__optind] 

* Chain [21]: 0
  with precondition: [B=9,C=V__optind] 


#### Cost of chains of loop_cont_eval_get_options_bb1_in(C,A,B):
* Chain [36]: 0
  with precondition: [C=2] 

* Chain [35]: 0
  with precondition: [C=3] 

* Chain [34]: 0
  with precondition: [C=4] 

* Chain [33]: 0
  with precondition: [C=5] 

* Chain [32]: 0
  with precondition: [C=6] 

* Chain [31]: 0
  with precondition: [C=7] 

* Chain [30]: 0
  with precondition: [C=8] 

* Chain [29]: 0
  with precondition: [C=9] 


#### Cost of chains of eval_get_options_bb0_in(V_argc,V__optind,B):
* Chain [38]: 1*aux(9)+0
  with precondition: [] 

* Chain [37]...: 1*s(17)+1
  with precondition: [] 


#### Cost of chains of eval_get_options_start(V_argc,V__optind,B):
* Chain [40]: 1*s(18)+0
  with precondition: [] 

* Chain [39]...: 1*s(19)+1
  with precondition: [] 


Closed-form bounds of eval_get_options_start(V_argc,V__optind,B): 
-------------------------------------
* Chain [40] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_get_options_start(V_argc,V__optind,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 41 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 33 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 21 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 158 ms.

