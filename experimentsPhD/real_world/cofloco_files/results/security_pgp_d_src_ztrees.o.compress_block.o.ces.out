Warning: Ignored call to eval_compress_block_stop/1 in equation eval_compress_block_83/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_compress_block_83/1]
1. non_recursive  : [eval_compress_block_82/4]
2. non_recursive  : [eval_compress_block_bb13_in/2]
3. recursive  : [eval_compress_block_21/8,eval_compress_block_22/8,eval_compress_block_35/8,eval_compress_block_36/8,eval_compress_block_42/10,eval_compress_block_43/10,eval_compress_block_64/12,eval_compress_block_65/12,eval_compress_block_71/14,eval_compress_block_72/14,eval_compress_block_bb10_in/10,eval_compress_block_bb12_in/8,eval_compress_block_bb1_in/4,eval_compress_block_bb3_in/4,eval_compress_block_bb7_in/9]
4. non_recursive  : [loop_cont_eval_compress_block_bb1_in/3]
5. non_recursive  : [eval_compress_block_bb0_in/2]
6. non_recursive  : [eval_compress_block_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_compress_block_bb1_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_compress_block_bb0_in/2
6. SCC is partially evaluated into eval_compress_block_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_compress_block_bb1_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_compress_block_bb1_in/4 
* CE 7: eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) = 1+ eval_compress_block_bb1_in(V__last_lit,D,E,C)
     [V__last_lit>=D+1,D>=1,D=V_lx_0+1,E=2,B=2] 
* CE 8: eval_compress_block_bb1_in(A,B,C,A) = 0
     [B+1>=A,B>=0,C=2] 

### Cost equations --> "Loop" of eval_compress_block_bb1_in/4 
* CEs [8] --> Loop 5 
* CEs [7] --> Loop 6 

#### Loops of eval_compress_block_bb1_in/4 
* Loop 5: eval_compress_block_bb1_in(A,B,C,A) [B+1>=A,B>=0,C=2] 
* Loop 6: eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C)->  eval_compress_block_bb1_in(V__last_lit,V_lx_0',B',C)
                  [V__last_lit>=V_lx_0'+1,V_lx_0'>=1,V_lx_0'=V_lx_0+1,B'=2,B=2] 

### Ranking functions of CR eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) 
* RF of phase [6]: [V__last_lit-V_lx_0-1]

#### Partial ranking functions of CR eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V__last_lit-V_lx_0-1


### Resulting Chains:eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) 
* [[6],5]
* [5]


### Merging Chains  eval_compress_block_bb1_in/4 into  External patterns of execution 
* [[5]] --> 1 
* [[5,[6]]] --> 2 


### Specialization of cost equations eval_compress_block_bb0_in/2 
* CE 3 is refined into CE [9,10] 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_compress_block_bb0_in/2 
* CE 9: eval_compress_block_bb0_in(V__last_lit,B) = 1+ eval_compress_block_bb1_in(V__last_lit,C,D,V__last_lit):1
     [1>=V__last_lit,D=2,C=0] 
* CE 10: eval_compress_block_bb0_in(V__last_lit,B) = 1+ eval_compress_block_bb1_in(V__last_lit,C,D,V__last_lit):2
     [V__last_lit>=2,D=2,C=0] 
* CE 11: eval_compress_block_bb0_in(V__last_lit,B) = 0
     [] 

### Cost equations --> "Loop" of eval_compress_block_bb0_in/2 
* CEs [9,10,11] --> Loop 7 

#### Loops of eval_compress_block_bb0_in/2 
* Loop 7: eval_compress_block_bb0_in(V__last_lit,B) [] 

### Ranking functions of CR eval_compress_block_bb0_in(V__last_lit,B) 

#### Partial ranking functions of CR eval_compress_block_bb0_in(V__last_lit,B) 


### Resulting Chains:eval_compress_block_bb0_in(V__last_lit,B) 
* [7]


### Merging Chains  eval_compress_block_bb0_in/2 into  External patterns of execution 
* [[7]] --> 1 


### Specialization of cost equations eval_compress_block_start/2 
* CE 2 is refined into CE [12] 


#### Refined cost equations eval_compress_block_start/2 
* CE 12: eval_compress_block_start(V__last_lit,B) = 0+ eval_compress_block_bb0_in(V__last_lit,B):1
     [] 

### Cost equations --> "Loop" of eval_compress_block_start/2 
* CEs [12] --> Loop 8 

#### Loops of eval_compress_block_start/2 
* Loop 8: eval_compress_block_start(V__last_lit,B) [] 

### Ranking functions of CR eval_compress_block_start(V__last_lit,B) 

#### Partial ranking functions of CR eval_compress_block_start(V__last_lit,B) 


### Resulting Chains:eval_compress_block_start(V__last_lit,B) 
* [8]


### Merging Chains  eval_compress_block_start/2 into  External patterns of execution 
* [[8]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) -> [eval_compress_block_bb1_in(V__last_lit',V_lx_0',B',C')] 
1
#### Cost of phase [6]:eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C) -> [eval_compress_block_bb1_in(V__last_lit',V_lx_0',B',C')] 
1*it(6)+0
  Such that:it(6) =< V__last_lit-V_lx_0
it(6) =< V__last_lit-V_lx_0-V__last_lit'+V_lx_0'

#### Cost of chains of eval_compress_block_bb1_in(V__last_lit,V_lx_0,B,C):
* Chain [[6],5]: 1*it(6)+0
  Such that:it(6) =< -V_lx_0+C

  with precondition: [B=2,V__last_lit=C,V_lx_0>=0,V__last_lit>=V_lx_0+2] 

* Chain [5]: 0
  with precondition: [B=2,V__last_lit=C,V_lx_0>=0,V_lx_0+1>=V__last_lit] 


#### Cost of chains of eval_compress_block_bb0_in(V__last_lit,B):
* Chain [7]: 1*s(1)+1
  Such that:s(1) =< V__last_lit

  with precondition: [] 


#### Cost of chains of eval_compress_block_start(V__last_lit,B):
* Chain [8]: 1*s(2)+1
  Such that:s(2) =< V__last_lit

  with precondition: [] 


Closed-form bounds of eval_compress_block_start(V__last_lit,B): 
-------------------------------------
* Chain [8] with precondition: [] 
    - Upper bound: nat(V__last_lit)+1 
    - Complexity: n 

### Maximum cost of eval_compress_block_start(V__last_lit,B): nat(V__last_lit)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 95 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 34 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 273 ms.

