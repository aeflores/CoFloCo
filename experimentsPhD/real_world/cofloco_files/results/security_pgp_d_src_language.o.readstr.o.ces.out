Warning: Ignored call to eval_readstr_stop/1 in equation eval_readstr_bb39_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_readstr_46/6,eval_readstr_47/7,eval_readstr_bb21_in/6]
1. recursive  : [eval_readstr_103/5,eval_readstr_104/5,eval_readstr_34/5,eval_readstr_35/5,eval_readstr_53/5,eval_readstr_54/5,eval_readstr_6/3,eval_readstr_69/5,eval_readstr_7/4,eval_readstr_70/5,eval_readstr_71/4,eval_readstr_72/4,eval_readstr_91/5,eval_readstr_92/5,eval_readstr_NewDefault35_in/4,eval_readstr_NewDefault46_in/4,eval_readstr_NewDefault4_in/4,eval_readstr_NewDefault53_in/4,eval_readstr_NewDefault89_in/4,eval_readstr_NewDefault_in/4,eval_readstr_bb11_in/4,eval_readstr_bb14_in/4,eval_readstr_bb1_in/3,eval_readstr_bb24_in/4,eval_readstr_bb33_in/4,eval_readstr_bb36_in/4,eval_readstr_bb6_in/4,loop_cont_eval_readstr_bb21_in/6]
2. non_recursive  : [eval_readstr_bb39_in/1]
3. non_recursive  : [eval_readstr_9/1]
4. non_recursive  : [eval_readstr_8/2]
5. non_recursive  : [loop_cont_eval_readstr_bb1_in/3]
6. non_recursive  : [eval_readstr_5/2]
7. non_recursive  : [eval_readstr_4/2]
8. non_recursive  : [eval_readstr_3/2]
9. non_recursive  : [eval_readstr_2/2]
10. non_recursive  : [eval_readstr_1/2]
11. non_recursive  : [eval_readstr_0/2]
12. non_recursive  : [eval_readstr_bb0_in/2]
13. non_recursive  : [eval_readstr_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_readstr_bb21_in/6
1. SCC is partially evaluated into eval_readstr_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_readstr_bb1_in/3
6. SCC is partially evaluated into eval_readstr_5/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_readstr_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_readstr_bb21_in/6 
* CE 13 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 12 is refined into CE [16] 


#### Refined cost equations eval_readstr_bb21_in/6 
* CE 14: eval_readstr_bb21_in(V__line,V_5,B,C,D,E) = 1+ eval_readstr_bb21_in(V__line,V_5,F,C,D,E)
     [F=2,B=2] 
* CE 15: eval_readstr_bb21_in(A,B,C,D,B,E) = 0
     [E>=56,C=2] 
* CE 16: eval_readstr_bb21_in(A,B,C,D,B,E) = 0
     [47>=E,C=2] 

### Cost equations --> "Loop" of eval_readstr_bb21_in/6 
* CEs [15] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_readstr_bb21_in/6 
* Loop 11: eval_readstr_bb21_in(A,B,C,D,B,E) [E>=56,C=2] 
* Loop 12: eval_readstr_bb21_in(A,B,C,D,B,E) [47>=E,C=2] 
* Loop 13: eval_readstr_bb21_in(V__line,V_5,B,C,D,E)->  eval_readstr_bb21_in(V__line,V_5,B',C,D,E)
                  [B'=2,B=2] 

### Ranking functions of CR eval_readstr_bb21_in(V__line,V_5,B,C,D,E) 

#### Partial ranking functions of CR eval_readstr_bb21_in(V__line,V_5,B,C,D,E) 


### Resulting Chains:eval_readstr_bb21_in(V__line,V_5,B,C,D,E) 
* [[13]]...
* [[13],12]
* [[13],11]
* [12]
* [11]


### Merging Chains  eval_readstr_bb21_in/6 into  External patterns of execution 
* [[12],[12,[13]]] --> 1 
* [[11],[11,[13]]] --> 2 
* [[[13]]] --> 3 


### Specialization of cost equations eval_readstr_bb1_in/3 
* CE 5 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 4 is refined into CE [19] 
* CE 6 is refined into CE [20,21,22] 
* CE 7 is refined into CE [23,24,25] 


#### Refined cost equations eval_readstr_bb1_in/3 
* CE 17: eval_readstr_bb1_in(V__line,B,C) = 0
     [B=4] 
* CE 18: eval_readstr_bb1_in(A,B,A) = 0
     [B=3] 
* CE 19: eval_readstr_bb1_in(V__line,B,C) = 1+ eval_readstr_bb1_in(D,B,C)
     [] 
* CE 20: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(D,E,F,G,E,H):1+ eval_readstr_bb1_in(G,B,C)
     [47>=H,D=V__line+1,F=2] 
* CE 21: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(D,E,F,G,E,H):2+ eval_readstr_bb1_in(G,B,C)
     [H>=56,D=V__line+1,F=2] 
* CE 22: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(D,E,F,G,H,I):3
     [D=V__line+1,F=2] 
* CE 23: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(V__line,D,E,F,D,G):1+ eval_readstr_bb1_in(F,B,C)
     [47>=G,E=2] 
* CE 24: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(V__line,D,E,F,D,G):2+ eval_readstr_bb1_in(F,B,C)
     [G>=56,E=2] 
* CE 25: eval_readstr_bb1_in(V__line,B,C) = 2+ eval_readstr_bb21_in(V__line,D,E,F,G,H):3
     [E=2] 

### Cost equations --> "Loop" of eval_readstr_bb1_in/3 
* CEs [22,25] --> Loop 14 
* CEs [19,20,21,23,24] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_readstr_bb1_in/3 
* Loop 14: eval_readstr_bb1_in(V__line,B,C) [] 
* Loop 15: eval_readstr_bb1_in(V__line,B,C)->  eval_readstr_bb1_in(V__line',B,C)
                  [] 
* Loop 16: eval_readstr_bb1_in(V__line,B,C) [B=4] 
* Loop 17: eval_readstr_bb1_in(A,B,A) [B=3] 

### Ranking functions of CR eval_readstr_bb1_in(V__line,B,C) 

#### Partial ranking functions of CR eval_readstr_bb1_in(V__line,B,C) 


### Resulting Chains:eval_readstr_bb1_in(V__line,B,C) 
* [[15]]...
* [[15],17]
* [[15],16]
* [[15],14]...
* [17]
* [16]
* [14]...


### Merging Chains  eval_readstr_bb1_in/3 into  External patterns of execution 
* [[17],[17,[15]]] --> 1 
* [[16],[16,[15]]] --> 2 
* [[14],[[15]],[14,[15]]] --> 3 


### Specialization of cost equations loop_cont_eval_readstr_bb1_in/3 
* CE 10 is refined into CE [26] 
* CE 9 is refined into CE [27] 


#### Refined cost equations loop_cont_eval_readstr_bb1_in/3 
* CE 26: loop_cont_eval_readstr_bb1_in(C,A,B) = 0
     [C=4] 
* CE 27: loop_cont_eval_readstr_bb1_in(C,A,B) = 0
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_readstr_bb1_in/3 
* CEs [26] --> Loop 18 
* CEs [27] --> Loop 19 

#### Loops of loop_cont_eval_readstr_bb1_in/3 
* Loop 18: loop_cont_eval_readstr_bb1_in(C,A,B) [C=4] 
* Loop 19: loop_cont_eval_readstr_bb1_in(C,A,B) [C=3] 

### Ranking functions of CR loop_cont_eval_readstr_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_readstr_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_readstr_bb1_in(C,A,B) 
* [19]
* [18]


### Merging Chains  loop_cont_eval_readstr_bb1_in/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_readstr_5/2 
* CE 3 is refined into CE [28,29,30] 


#### Refined cost equations eval_readstr_5/2 
* CE 28: eval_readstr_5(V__line,B) = 1+ eval_readstr_bb1_in(V__line,C,D):1+ loop_cont_eval_readstr_bb1_in(E,D,B):1
     [E=3,C=3] 
* CE 29: eval_readstr_5(V__line,B) = 1+ eval_readstr_bb1_in(V__line,C,D):2+ loop_cont_eval_readstr_bb1_in(E,D,B):2
     [E=4,C=4] 
* CE 30: eval_readstr_5(V__line,B) = 1+ eval_readstr_bb1_in(V__line,C,D):3
     [] 

### Cost equations --> "Loop" of eval_readstr_5/2 
* CEs [30] --> Loop 20 
* CEs [28,29] --> Loop 21 

#### Loops of eval_readstr_5/2 
* Loop 20: eval_readstr_5(V__line,B) [] 
* Loop 21: eval_readstr_5(V__line,B) [] 

### Ranking functions of CR eval_readstr_5(V__line,B) 

#### Partial ranking functions of CR eval_readstr_5(V__line,B) 


### Resulting Chains:eval_readstr_5(V__line,B) 
* [21]
* [20]...


### Merging Chains  eval_readstr_5/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_readstr_start/3 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_readstr_start/3 
* CE 31: eval_readstr_start(V_nlabort,V__line,B) = 0+ eval_readstr_5(V__line,B):1
     [] 
* CE 32: eval_readstr_start(V_nlabort,V__line,B) = 0+ eval_readstr_5(V__line,B):2
     [] 

### Cost equations --> "Loop" of eval_readstr_start/3 
* CEs [32] --> Loop 22 
* CEs [31] --> Loop 23 

#### Loops of eval_readstr_start/3 
* Loop 22: eval_readstr_start(V_nlabort,V__line,B) [] 
* Loop 23: eval_readstr_start(V_nlabort,V__line,B) [] 

### Ranking functions of CR eval_readstr_start(V_nlabort,V__line,B) 

#### Partial ranking functions of CR eval_readstr_start(V_nlabort,V__line,B) 


### Resulting Chains:eval_readstr_start(V_nlabort,V__line,B) 
* [23]
* [22]...


### Merging Chains  eval_readstr_start/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_readstr_bb21_in(V__line,V_5,B,C,D,E) -> [eval_readstr_bb21_in(V__line',V_5',B',C',D',E')] 
1
#### Cost of phase [13]:eval_readstr_bb21_in(V__line,V_5,B,C,D,E) -> [eval_readstr_bb21_in(V__line',V_5',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_readstr_bb21_in(V__line,V_5,B,C,D,E) -> [eval_readstr_bb21_in(V__line',V_5',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_readstr_bb21_in(V__line,V_5,B,C,D,E) -> [eval_readstr_bb21_in(V__line',V_5',B',C',D',E')] 
1*it(13)+0
#### Cost of chains of eval_readstr_bb21_in(V__line,V_5,B,C,D,E):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [B=2] 

* Chain [[13],12]: 1*it(13)+0
  with precondition: [B=2,V_5=D,47>=E] 

* Chain [[13],11]: 1*it(13)+0
  with precondition: [B=2,V_5=D,E>=56] 

* Chain [12]: 0
  with precondition: [B=2,D=V_5,47>=E] 

* Chain [11]: 0
  with precondition: [B=2,D=V_5,E>=56] 


#### Cost of loops [15] 

 * loop 15:eval_readstr_bb1_in(V__line,B,C) -> [eval_readstr_bb1_in(V__line',B',C')] 
1*s(7)+0
#### Cost of phase [15]:eval_readstr_bb1_in(V__line,B,C) -> [eval_readstr_bb1_in(V__line',B',C')] 
1*s(8)+0
#### Cost of phase [15]:eval_readstr_bb1_in(V__line,B,C) -> [eval_readstr_bb1_in(V__line',B',C')] 
1*s(8)+0
#### Cost of phase [15]:eval_readstr_bb1_in(V__line,B,C) -> [eval_readstr_bb1_in(V__line',B',C')] 
1*s(8)+0
#### Cost of phase [15]:eval_readstr_bb1_in(V__line,B,C) -> [eval_readstr_bb1_in(V__line',B',C')] 
1*s(8)+0
#### Cost of chains of eval_readstr_bb1_in(V__line,B,C):
* Chain [[15]]...: 1*s(8)+0
  with precondition: [] 

* Chain [[15],17]: 1*s(8)+0
  with precondition: [B=3] 

* Chain [[15],16]: 1*s(8)+0
  with precondition: [B=4] 

* Chain [[15],14]...: 2*aux(4)+0
  with precondition: [] 

* Chain [17]: 0
  with precondition: [B=3,C=V__line] 

* Chain [16]: 0
  with precondition: [B=4] 

* Chain [14]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_readstr_bb1_in(C,A,B):
* Chain [19]: 0
  with precondition: [C=3] 

* Chain [18]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_readstr_5(V__line,B):
* Chain [21]: 1*aux(8)+0
  with precondition: [] 

* Chain [20]...: 1*s(18)+1
  with precondition: [] 


#### Cost of chains of eval_readstr_start(V_nlabort,V__line,B):
* Chain [23]: 1*s(19)+0
  with precondition: [] 

* Chain [22]...: 1*s(20)+1
  with precondition: [] 


Closed-form bounds of eval_readstr_start(V_nlabort,V__line,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_readstr_start(V_nlabort,V__line,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 126 ms.
* Invariants computed in 40 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 84 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 62 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 446 ms.

