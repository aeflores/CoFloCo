Warning: Ignored call to eval_run_sync_stop/1 in equation eval_run_sync_bb24_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_run_sync_bb24_in/1]
1. recursive  : [eval_run_sync_12/1,eval_run_sync_13/1,eval_run_sync_14/1,eval_run_sync_15/1,eval_run_sync_19/1,eval_run_sync_20/1,eval_run_sync_21/1,eval_run_sync_22/1,eval_run_sync_23/1,eval_run_sync_24/1,eval_run_sync_28/1,eval_run_sync_29/1,eval_run_sync_34/1,eval_run_sync_35/1,eval_run_sync_36/1,eval_run_sync_37/1,eval_run_sync_38/1,eval_run_sync_39/1,eval_run_sync_NewDefault14_in/1,eval_run_sync_NewDefault21_in/1,eval_run_sync_NewDefault32_in/1,eval_run_sync_NewDefault43_in/1,eval_run_sync_NewDefault54_in/1,eval_run_sync_NewDefault7_in/1,eval_run_sync_bb13_in/1,eval_run_sync_bb18_in/1,eval_run_sync_bb20_in/1,eval_run_sync_bb6_in/1,eval_run_sync_bb8_in/1]
2. recursive  : [eval_run_sync_8/1,eval_run_sync_9/1,eval_run_sync_NewDefault_in/1,eval_run_sync_bb16_in/1,eval_run_sync_bb5_in/1,loop_cont_eval_run_sync_bb6_in/2]
3. non_recursive  : [eval_run_sync_42/1]
4. non_recursive  : [eval_run_sync_41/1]
5. non_recursive  : [eval_run_sync_40/1]
6. non_recursive  : [eval_run_sync_bb23_in/1]
7. non_recursive  : [eval_run_sync_bb22_in/1]
8. non_recursive  : [loop_cont_eval_run_sync_bb5_in/2]
9. non_recursive  : [eval_run_sync_5/1]
10. non_recursive  : [eval_run_sync_4/1]
11. non_recursive  : [eval_run_sync_3/1]
12. non_recursive  : [eval_run_sync_2/1]
13. non_recursive  : [eval_run_sync_bb4_in/1]
14. non_recursive  : [eval_run_sync_bb0_in/1]
15. non_recursive  : [eval_run_sync_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_run_sync_bb6_in/1
2. SCC is partially evaluated into eval_run_sync_bb5_in/1
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_run_sync_bb5_in/2
9. SCC is partially evaluated into eval_run_sync_5/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_run_sync_bb0_in/1
15. SCC is partially evaluated into eval_run_sync_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_run_sync_bb6_in/1 
* CE 18 is refined into CE [19] 
* CE 15 is refined into CE [20] 
* CE 16 is refined into CE [21] 
* CE 17 is refined into CE [22] 


#### Refined cost equations eval_run_sync_bb6_in/1 
* CE 19: eval_run_sync_bb6_in(B) = 0
     [B=4] 
* CE 20: eval_run_sync_bb6_in(B) = 0
     [B=3] 
* CE 21: eval_run_sync_bb6_in(B) = 0
     [B=2] 
* CE 22: eval_run_sync_bb6_in(B) = 1+ eval_run_sync_bb6_in(B)
     [B>=2,4>=B] 

### Cost equations --> "Loop" of eval_run_sync_bb6_in/1 
* CEs [22] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of eval_run_sync_bb6_in/1 
* Loop 13: eval_run_sync_bb6_in(B)->  eval_run_sync_bb6_in(B)
                  [B>=2,4>=B] 
* Loop 14: eval_run_sync_bb6_in(B) [B=4] 
* Loop 15: eval_run_sync_bb6_in(B) [B=3] 
* Loop 16: eval_run_sync_bb6_in(B) [B=2] 

### Ranking functions of CR eval_run_sync_bb6_in(B) 

#### Partial ranking functions of CR eval_run_sync_bb6_in(B) 


### Resulting Chains:eval_run_sync_bb6_in(B) 
* [[13]]...
* [[13],16]
* [[13],15]
* [[13],14]
* [16]
* [15]
* [14]


### Merging Chains  eval_run_sync_bb6_in/1 into  External patterns of execution 
* [[16],[16,[13]]] --> 1 
* [[15],[15,[13]]] --> 2 
* [[14],[14,[13]]] --> 3 
* [[[13]]] --> 4 


### Specialization of cost equations eval_run_sync_bb5_in/1 
* CE 6 is refined into CE [23] 
* CE 9 is refined into CE [24,25] 
* CE 12 is refined into CE [26,27] 
* CE 7 is refined into CE [28] 
* CE 11 is refined into CE [29,30] 
* CE 8 is refined into CE [31] 
* CE 10 is refined into CE [32,33] 


#### Refined cost equations eval_run_sync_bb5_in/1 
* CE 23: eval_run_sync_bb5_in(B) = 0
     [B=3] 
* CE 24: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):3
     [C=4,B=3] 
* CE 25: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):4
     [C=4,B=3] 
* CE 26: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):2
     [C=3,B=3] 
* CE 27: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):4
     [C=3,B=3] 
* CE 28: eval_run_sync_bb5_in(B) = 0
     [B=2] 
* CE 29: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):1
     [C=2,B=2] 
* CE 30: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb6_in(C):4
     [C=2,B=2] 
* CE 31: eval_run_sync_bb5_in(B) = 1+ eval_run_sync_bb5_in(B)
     [] 
* CE 32: eval_run_sync_bb5_in(B) = 2+ eval_run_sync_bb6_in(C):3+ eval_run_sync_bb5_in(B)
     [C=4] 
* CE 33: eval_run_sync_bb5_in(B) = 2+ eval_run_sync_bb6_in(C):4
     [C=4] 

### Cost equations --> "Loop" of eval_run_sync_bb5_in/1 
* CEs [25,27,30,33] --> Loop 17 
* CEs [31,32] --> Loop 18 
* CEs [23,24,26] --> Loop 19 
* CEs [28,29] --> Loop 20 

#### Loops of eval_run_sync_bb5_in/1 
* Loop 17: eval_run_sync_bb5_in(B) [] 
* Loop 18: eval_run_sync_bb5_in(B)->  eval_run_sync_bb5_in(B)
                  [] 
* Loop 19: eval_run_sync_bb5_in(B) [B=3] 
* Loop 20: eval_run_sync_bb5_in(B) [B=2] 

### Ranking functions of CR eval_run_sync_bb5_in(B) 

#### Partial ranking functions of CR eval_run_sync_bb5_in(B) 


### Resulting Chains:eval_run_sync_bb5_in(B) 
* [[18]]...
* [[18],20]
* [[18],19]
* [[18],17]...
* [20]
* [19]
* [17]...


### Merging Chains  eval_run_sync_bb5_in/1 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[17],[[18]],[17,[18]]] --> 3 


### Specialization of cost equations loop_cont_eval_run_sync_bb5_in/2 
* CE 14 is refined into CE [34] 
* CE 13 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_run_sync_bb5_in/2 
* CE 34: loop_cont_eval_run_sync_bb5_in(B,A) = 0
     [B=3] 
* CE 35: loop_cont_eval_run_sync_bb5_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_run_sync_bb5_in/2 
* CEs [34] --> Loop 21 
* CEs [35] --> Loop 22 

#### Loops of loop_cont_eval_run_sync_bb5_in/2 
* Loop 21: loop_cont_eval_run_sync_bb5_in(B,A) [B=3] 
* Loop 22: loop_cont_eval_run_sync_bb5_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_run_sync_bb5_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_run_sync_bb5_in(B,A) 


### Resulting Chains:loop_cont_eval_run_sync_bb5_in(B,A) 
* [22]
* [21]


### Merging Chains  loop_cont_eval_run_sync_bb5_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_run_sync_5/1 
* CE 5 is refined into CE [36,37,38] 


#### Refined cost equations eval_run_sync_5/1 
* CE 36: eval_run_sync_5(B) = 1+ eval_run_sync_bb5_in(C):1+ loop_cont_eval_run_sync_bb5_in(D,B):1
     [D=2,C=2] 
* CE 37: eval_run_sync_5(B) = 1+ eval_run_sync_bb5_in(C):2+ loop_cont_eval_run_sync_bb5_in(D,B):2
     [D=3,C=3] 
* CE 38: eval_run_sync_5(B) = 1+ eval_run_sync_bb5_in(C):3
     [] 

### Cost equations --> "Loop" of eval_run_sync_5/1 
* CEs [38] --> Loop 23 
* CEs [36,37] --> Loop 24 

#### Loops of eval_run_sync_5/1 
* Loop 23: eval_run_sync_5(B) [] 
* Loop 24: eval_run_sync_5(B) [] 

### Ranking functions of CR eval_run_sync_5(B) 

#### Partial ranking functions of CR eval_run_sync_5(B) 


### Resulting Chains:eval_run_sync_5(B) 
* [24]
* [23]...


### Merging Chains  eval_run_sync_5/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_run_sync_bb0_in/1 
* CE 3 is refined into CE [39] 
* CE 4 is refined into CE [40,41] 


#### Refined cost equations eval_run_sync_bb0_in/1 
* CE 39: eval_run_sync_bb0_in(B) = 0
     [] 
* CE 40: eval_run_sync_bb0_in(B) = 0+ eval_run_sync_5(B):1
     [] 
* CE 41: eval_run_sync_bb0_in(B) = 0+ eval_run_sync_5(B):2
     [] 

### Cost equations --> "Loop" of eval_run_sync_bb0_in/1 
* CEs [41] --> Loop 25 
* CEs [39,40] --> Loop 26 

#### Loops of eval_run_sync_bb0_in/1 
* Loop 25: eval_run_sync_bb0_in(B) [] 
* Loop 26: eval_run_sync_bb0_in(B) [] 

### Ranking functions of CR eval_run_sync_bb0_in(B) 

#### Partial ranking functions of CR eval_run_sync_bb0_in(B) 


### Resulting Chains:eval_run_sync_bb0_in(B) 
* [26]
* [25]...


### Merging Chains  eval_run_sync_bb0_in/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_run_sync_start/1 
* CE 2 is refined into CE [42,43] 


#### Refined cost equations eval_run_sync_start/1 
* CE 42: eval_run_sync_start(B) = 0+ eval_run_sync_bb0_in(B):1
     [] 
* CE 43: eval_run_sync_start(B) = 0+ eval_run_sync_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_run_sync_start/1 
* CEs [43] --> Loop 27 
* CEs [42] --> Loop 28 

#### Loops of eval_run_sync_start/1 
* Loop 27: eval_run_sync_start(B) [] 
* Loop 28: eval_run_sync_start(B) [] 

### Ranking functions of CR eval_run_sync_start(B) 

#### Partial ranking functions of CR eval_run_sync_start(B) 


### Resulting Chains:eval_run_sync_start(B) 
* [28]
* [27]...


### Merging Chains  eval_run_sync_start/1 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_run_sync_bb6_in(B) -> [eval_run_sync_bb6_in(B')] 
1
#### Cost of phase [13]:eval_run_sync_bb6_in(B) -> [eval_run_sync_bb6_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_run_sync_bb6_in(B) -> [eval_run_sync_bb6_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_run_sync_bb6_in(B) -> [eval_run_sync_bb6_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_run_sync_bb6_in(B) -> [eval_run_sync_bb6_in(B')] 
1*it(13)+0
#### Cost of chains of eval_run_sync_bb6_in(B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [B>=2,4>=B] 

* Chain [[13],16]: 1*it(13)+0
  with precondition: [B=2] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [B=3] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=4] 

* Chain [16]: 0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=3] 

* Chain [14]: 0
  with precondition: [B=4] 


#### Cost of loops [18] 

 * loop 18:eval_run_sync_bb5_in(B) -> [eval_run_sync_bb5_in(B')] 
1*s(5)+0
#### Cost of phase [18]:eval_run_sync_bb5_in(B) -> [eval_run_sync_bb5_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_run_sync_bb5_in(B) -> [eval_run_sync_bb5_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_run_sync_bb5_in(B) -> [eval_run_sync_bb5_in(B')] 
1*s(6)+0
#### Cost of phase [18]:eval_run_sync_bb5_in(B) -> [eval_run_sync_bb5_in(B')] 
1*s(6)+0
#### Cost of chains of eval_run_sync_bb5_in(B):
* Chain [[18]]...: 1*s(6)+0
  with precondition: [] 

* Chain [[18],20]: 2*aux(5)+0
  with precondition: [B=2] 

* Chain [[18],19]: 2*aux(6)+0
  with precondition: [B=3] 

* Chain [[18],17]...: 2*aux(7)+0
  with precondition: [] 

* Chain [20]: 1*aux(5)+0
  with precondition: [B=2] 

* Chain [19]: 1*aux(6)+0
  with precondition: [B=3] 

* Chain [17]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_run_sync_bb5_in(B,A):
* Chain [22]: 0
  with precondition: [B=2] 

* Chain [21]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_run_sync_5(B):
* Chain [24]: 1*aux(11)+0
  with precondition: [] 

* Chain [23]...: 1*s(23)+1
  with precondition: [] 


#### Cost of chains of eval_run_sync_bb0_in(B):
* Chain [26]: 1*aux(12)+0
  with precondition: [] 

* Chain [25]...: 1*s(25)+1
  with precondition: [] 


#### Cost of chains of eval_run_sync_start(B):
* Chain [28]: 1*s(26)+0
  with precondition: [] 

* Chain [27]...: 1*s(27)+1
  with precondition: [] 


Closed-form bounds of eval_run_sync_start(B): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_run_sync_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 18 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 93 ms.

