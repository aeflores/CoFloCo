Warning: Ignored call to eval_encode_mcu_DC_first_stop/1 in equation eval_encode_mcu_DC_first_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encode_mcu_DC_first_bb8_in/12]
1. recursive  : [eval_encode_mcu_DC_first_33/7,eval_encode_mcu_DC_first_34/7,eval_encode_mcu_DC_first_35/7,eval_encode_mcu_DC_first_36/7,eval_encode_mcu_DC_first_bb12_in/7,eval_encode_mcu_DC_first_bb4_in/2,eval_encode_mcu_DC_first_bb7_in/4,loop_cont_eval_encode_mcu_DC_first_bb8_in/8]
2. non_recursive  : [eval_encode_mcu_DC_first_bb17_in/1]
3. non_recursive  : [eval_encode_mcu_DC_first_bb16_in/1]
4. non_recursive  : [loop_cont_eval_encode_mcu_DC_first_bb4_in/2]
5. non_recursive  : [eval_encode_mcu_DC_first_bb3_in/1]
6. non_recursive  : [eval_encode_mcu_DC_first_10/1]
7. non_recursive  : [eval_encode_mcu_DC_first_9/2]
8. non_recursive  : [eval_encode_mcu_DC_first_bb0_in/1]
9. non_recursive  : [eval_encode_mcu_DC_first_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_DC_first_bb8_in/12
1. SCC is partially evaluated into eval_encode_mcu_DC_first_bb4_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_encode_mcu_DC_first_bb4_in/2
5. SCC is partially evaluated into eval_encode_mcu_DC_first_bb3_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_encode_mcu_DC_first_bb0_in/1
9. SCC is partially evaluated into eval_encode_mcu_DC_first_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_DC_first_bb8_in/12 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


#### Refined cost equations eval_encode_mcu_DC_first_bb8_in/12 
* CE 14: eval_encode_mcu_DC_first_bb8_in(A,B,C,D,E,F,A,B,C,D,G,H) = 0
     [D>=0,G=0,F=2,E=0] 
* CE 15: eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) = 1+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,I,J,K,C,D,E,F,G,H)
     [V_temp_1>=1,V_nbits_0>=0,V_nbits_0+1=I,K=2,B=2] 
* CE 16: eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) = 1+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,I,J,K,C,D,E,F,G,H)
     [V_nbits_0>=0,0>=V_temp_1+1,V_nbits_0+1=I,K=2,B=2] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_first_bb8_in/12 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_encode_mcu_DC_first_bb8_in/12 
* Loop 12: eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H)->  eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0',V_temp_1',B',C,D,E,F,G,H)
                  [V_temp_1>=1,V_nbits_0>=0,V_nbits_0+1=V_nbits_0',B'=2,B=2] 
* Loop 13: eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H)->  eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0',V_temp_1',B',C,D,E,F,G,H)
                  [V_nbits_0>=0,0>=V_temp_1+1,V_nbits_0+1=V_nbits_0',B'=2,B=2] 
* Loop 14: eval_encode_mcu_DC_first_bb8_in(A,B,C,D,E,F,A,B,C,D,G,H) [D>=0,G=0,F=2,E=0] 

### Ranking functions of CR eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) 


### Resulting Chains:eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) 
* [[12,13]]...
* [[12,13],14]
* [14]


### Merging Chains  eval_encode_mcu_DC_first_bb8_in/12 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[12,13]]] --> 2 
* [[[12,13]]] --> 3 


### Specialization of cost equations eval_encode_mcu_DC_first_bb4_in/2 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 5 is refined into CE [19,20,21] 
* CE 6 is refined into CE [22,23,24] 


#### Refined cost equations eval_encode_mcu_DC_first_bb4_in/2 
* CE 17: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 0
     [B=4] 
* CE 18: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 0
     [B=3] 
* CE 19: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,D,E,F,G,V_blkn_0,H,I,J,K,L):1+ eval_encode_mcu_DC_first_bb4_in(M,B)
     [V_blkn_0+1=M,K=0,J=0,I=0,H=0,G=2,F=0,E=0,D=0,C=0] 
* CE 20: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,C,D,C,E,V_blkn_0,C,C,F,G,H):2+ eval_encode_mcu_DC_first_bb4_in(I,B)
     [F>=1,V_blkn_0+1=I,G=0,E=2,D=0] 
* CE 21: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,C,D,C,E,F,G,H,I,J,K):3
     [L=F+1,E=2,D=0] 
* CE 22: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,D,E,F,G,V_blkn_0,H,I,J,K,L):1+ eval_encode_mcu_DC_first_bb4_in(M,B)
     [V_blkn_0+1=M,K=0,J=0,I=0,H+1=0,G=2,F=0,E=0,D=0,C+1=0] 
* CE 23: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,D,E,F,G,V_blkn_0,C,H,I,J,K):2+ eval_encode_mcu_DC_first_bb4_in(L,B)
     [I>=1,C+H+1=0,C+F+1=0,C+D+1=0,V_blkn_0+1=L,J=0,G=2,E=0] 
* CE 24: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) = 2+ eval_encode_mcu_DC_first_bb8_in(V_blkn_0,C,D,E,D,F,G,H,I,J,K,L):3
     [C+D+1=0,M=G+1,F=2,E=0] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_first_bb4_in/2 
* CEs [21,24] --> Loop 15 
* CEs [19,20,22,23] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of eval_encode_mcu_DC_first_bb4_in/2 
* Loop 15: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) [] 
* Loop 16: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B)->  eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B)
                  [V_blkn_0+1=V_blkn_0'] 
* Loop 17: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) [B=4] 
* Loop 18: eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) [B=3] 

### Ranking functions of CR eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) 


### Resulting Chains:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) 
* [[16]]...
* [[16],18]
* [[16],17]
* [[16],15]...
* [18]
* [17]
* [15]...


### Merging Chains  eval_encode_mcu_DC_first_bb4_in/2 into  External patterns of execution 
* [[18],[18,[16]]] --> 1 
* [[17],[17,[16]]] --> 2 
* [[[16]]] --> 3 
* [[15],[15,[16]]] --> 4 


### Specialization of cost equations loop_cont_eval_encode_mcu_DC_first_bb4_in/2 
* CE 10 is refined into CE [25] 
* CE 9 is refined into CE [26] 


#### Refined cost equations loop_cont_eval_encode_mcu_DC_first_bb4_in/2 
* CE 25: loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) = 0
     [B=4] 
* CE 26: loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) = 0
     [B=3] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_DC_first_bb4_in/2 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of loop_cont_eval_encode_mcu_DC_first_bb4_in/2 
* Loop 19: loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) [B=4] 
* Loop 20: loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A) 
* [20]
* [19]


### Merging Chains  loop_cont_eval_encode_mcu_DC_first_bb4_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_first_bb3_in/1 
* CE 4 is refined into CE [27,28,29,30] 


#### Refined cost equations eval_encode_mcu_DC_first_bb3_in/1 
* CE 27: eval_encode_mcu_DC_first_bb3_in(B) = 1+ eval_encode_mcu_DC_first_bb4_in(C,D):1+ loop_cont_eval_encode_mcu_DC_first_bb4_in(E,B):1
     [E=3,D=3,C=0] 
* CE 28: eval_encode_mcu_DC_first_bb3_in(B) = 1+ eval_encode_mcu_DC_first_bb4_in(C,D):2+ loop_cont_eval_encode_mcu_DC_first_bb4_in(E,B):2
     [E=4,D=4,C=0] 
* CE 29: eval_encode_mcu_DC_first_bb3_in(B) = 1+ eval_encode_mcu_DC_first_bb4_in(C,D):3
     [C=0] 
* CE 30: eval_encode_mcu_DC_first_bb3_in(B) = 1+ eval_encode_mcu_DC_first_bb4_in(C,D):4
     [C=0] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_first_bb3_in/1 
* CEs [29,30] --> Loop 21 
* CEs [27,28] --> Loop 22 

#### Loops of eval_encode_mcu_DC_first_bb3_in/1 
* Loop 21: eval_encode_mcu_DC_first_bb3_in(B) [] 
* Loop 22: eval_encode_mcu_DC_first_bb3_in(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_first_bb3_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_first_bb3_in(B) 


### Resulting Chains:eval_encode_mcu_DC_first_bb3_in(B) 
* [22]
* [21]...


### Merging Chains  eval_encode_mcu_DC_first_bb3_in/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_first_bb0_in/1 
* CE 3 is refined into CE [31,32] 


#### Refined cost equations eval_encode_mcu_DC_first_bb0_in/1 
* CE 31: eval_encode_mcu_DC_first_bb0_in(B) = 0+ eval_encode_mcu_DC_first_bb3_in(B):1
     [] 
* CE 32: eval_encode_mcu_DC_first_bb0_in(B) = 0+ eval_encode_mcu_DC_first_bb3_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_first_bb0_in/1 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of eval_encode_mcu_DC_first_bb0_in/1 
* Loop 23: eval_encode_mcu_DC_first_bb0_in(B) [] 
* Loop 24: eval_encode_mcu_DC_first_bb0_in(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_first_bb0_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_first_bb0_in(B) 


### Resulting Chains:eval_encode_mcu_DC_first_bb0_in(B) 
* [24]
* [23]...


### Merging Chains  eval_encode_mcu_DC_first_bb0_in/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_first_start/1 
* CE 2 is refined into CE [33,34] 


#### Refined cost equations eval_encode_mcu_DC_first_start/1 
* CE 33: eval_encode_mcu_DC_first_start(B) = 0+ eval_encode_mcu_DC_first_bb0_in(B):1
     [] 
* CE 34: eval_encode_mcu_DC_first_start(B) = 0+ eval_encode_mcu_DC_first_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_first_start/1 
* CEs [34] --> Loop 25 
* CEs [33] --> Loop 26 

#### Loops of eval_encode_mcu_DC_first_start/1 
* Loop 25: eval_encode_mcu_DC_first_start(B) [] 
* Loop 26: eval_encode_mcu_DC_first_start(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_first_start(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_first_start(B) 


### Resulting Chains:eval_encode_mcu_DC_first_start(B) 
* [26]
* [25]...


### Merging Chains  eval_encode_mcu_DC_first_start/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12,13] 

 * loop 12:eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_DC_first_bb8_in(V_blkn_0',V_temp2_0',V_temp_0',V_nbits_0',V_temp_1',B',C',D',E',F',G',H')] 
1
 * loop 13:eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_DC_first_bb8_in(V_blkn_0',V_temp2_0',V_temp_0',V_nbits_0',V_temp_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [12,13]:eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_DC_first_bb8_in(V_blkn_0',V_temp2_0',V_temp_0',V_nbits_0',V_temp_1',B',C',D',E',F',G',H')] 
2*it(12)+0
#### Cost of phase [12,13]:eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H) -> [eval_encode_mcu_DC_first_bb8_in(V_blkn_0',V_temp2_0',V_temp_0',V_nbits_0',V_temp_1',B',C',D',E',F',G',H')] 
2*it(12)+0
#### Cost of chains of eval_encode_mcu_DC_first_bb8_in(V_blkn_0,V_temp2_0,V_temp_0,V_nbits_0,V_temp_1,B,C,D,E,F,G,H):
* Chain [[12,13]]...: 2*it(12)+0
  with precondition: [V_nbits_0>=0,B=2] 

* Chain [[12,13],14]: 2*it(12)+0
  with precondition: [B=2,G=0,V_blkn_0=C,V_temp2_0=D,V_temp_0=E,V_nbits_0>=0,F>=V_nbits_0+1] 

* Chain [14]: 0
  with precondition: [V_temp_1=0,B=2,G=0,C=V_blkn_0,D=V_temp2_0,E=V_temp_0,V_nbits_0=F,V_nbits_0>=0] 


#### Cost of loops [16] 

 * loop 16:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B')] 
1*s(3)+0
#### Cost of phase [16]:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B')] 
1*s(4)+0
#### Cost of phase [16]:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B')] 
1*s(4)+0
#### Cost of phase [16]:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B')] 
1*s(4)+0
#### Cost of phase [16]:eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_first_bb4_in(V_blkn_0',B')] 
1*s(4)+0
#### Cost of chains of eval_encode_mcu_DC_first_bb4_in(V_blkn_0,B):
* Chain [[16]]...: 1*s(4)+0
  with precondition: [] 

* Chain [[16],18]: 1*s(4)+0
  with precondition: [B=3,V_blkn_0>=0] 

* Chain [[16],17]: 1*s(4)+0
  with precondition: [B=4,V_blkn_0>=0] 

* Chain [[16],15]...: 2*aux(2)+0
  with precondition: [V_blkn_0>=0] 

* Chain [18]: 0
  with precondition: [B=3,V_blkn_0>=0] 

* Chain [17]: 0
  with precondition: [B=4,V_blkn_0>=0] 

* Chain [15]...: 1*aux(2)+0
  with precondition: [V_blkn_0>=0] 


#### Cost of chains of loop_cont_eval_encode_mcu_DC_first_bb4_in(B,A):
* Chain [20]: 0
  with precondition: [B=3] 

* Chain [19]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_encode_mcu_DC_first_bb3_in(B):
* Chain [22]: 1*aux(6)+0
  with precondition: [] 

* Chain [21]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_DC_first_bb0_in(B):
* Chain [24]: 1*s(15)+0
  with precondition: [] 

* Chain [23]...: 1*s(16)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_DC_first_start(B):
* Chain [26]: 1*s(17)+0
  with precondition: [] 

* Chain [25]...: 1*s(18)+0
  with precondition: [] 


Closed-form bounds of eval_encode_mcu_DC_first_start(B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encode_mcu_DC_first_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 80 ms.
* Invariants computed in 84 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 157 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 92 ms.
   - Equation cost structures 37 ms.
   - Phase cost structures 38 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 521 ms.

