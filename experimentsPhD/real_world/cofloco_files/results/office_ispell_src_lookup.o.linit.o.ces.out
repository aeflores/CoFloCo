Warning: Ignored call to eval_linit_stop/1 in equation eval_linit_bb112_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_linit_bb112_in/1]
1. non_recursive  : [eval_linit_7/1]
2. non_recursive  : [eval_linit_6/7]
3. non_recursive  : [eval_linit_18/1]
4. non_recursive  : [eval_linit_17/7]
5. non_recursive  : [eval_linit_24/1]
6. non_recursive  : [eval_linit_23/7]
7. non_recursive  : [eval_linit_29/1]
8. non_recursive  : [eval_linit_28/8]
9. non_recursive  : [eval_linit_38/1]
10. non_recursive  : [eval_linit_37/8]
11. non_recursive  : [eval_linit_47/1]
12. non_recursive  : [eval_linit_46/8]
13. non_recursive  : [eval_linit_76/1]
14. non_recursive  : [eval_linit_75/7]
15. non_recursive  : [eval_linit_114/1]
16. non_recursive  : [eval_linit_113/7]
17. non_recursive  : [eval_linit_128/1]
18. non_recursive  : [eval_linit_127/7]
19. non_recursive  : [eval_linit_174/1]
20. non_recursive  : [eval_linit_173/7]
21. recursive  : [eval_linit_bb47_in/14,eval_linit_bb51_in/15,eval_linit_bb54_in/15]
22. recursive  : [eval_linit_bb56_in/15,eval_linit_bb60_in/16,eval_linit_bb63_in/16]
23. recursive  : [eval_linit_bb68_in/15]
24. recursive  : [eval_linit_242/15,eval_linit_243/15,eval_linit_255/16,eval_linit_256/16,eval_linit__critedge_in/15,eval_linit_bb65_in/15,eval_linit_bb74_in/15,eval_linit_bb81_in/16,loop_cont_eval_linit_bb68_in/16]
25. non_recursive  : [eval_linit_261/1]
26. non_recursive  : [eval_linit_260/7]
27. recursive  : [eval_linit_bb86_in/15]
28. recursive  : [eval_linit_292/15,eval_linit_293/15,eval_linit_305/16,eval_linit_306/16,eval_linit__critedge4_in/15,eval_linit_bb83_in/15,eval_linit_bb92_in/15,eval_linit_bb99_in/16,loop_cont_eval_linit_bb86_in/16]
29. non_recursive  : [eval_linit_311/1]
30. non_recursive  : [eval_linit_310/7]
31. non_recursive  : [eval_linit_329/1]
32. non_recursive  : [eval_linit_328/7]
33. recursive  : [eval_linit_361/15,eval_linit_362/15,eval_linit_bb108_in/15]
34. recursive  : [eval_linit_338/8,eval_linit_339/8,eval_linit_347/8,eval_linit_348/8,eval_linit_bb106_in/8,loop_cont_eval_linit_bb108_in/9]
35. non_recursive  : [eval_linit_bb111_in/1]
36. non_recursive  : [loop_cont_eval_linit_bb106_in/2]
37. non_recursive  : [eval_linit_324/7]
38. non_recursive  : [eval_linit_323/8]
39. non_recursive  : [loop_cont_eval_linit_bb83_in/9]
40. non_recursive  : [loop_cont_eval_linit_bb65_in/9]
41. non_recursive  : [loop_cont_eval_linit_bb56_in/9]
42. non_recursive  : [eval_linit_bb55_in/7]
43. non_recursive  : [loop_cont_eval_linit_bb47_in/8]
44. non_recursive  : [eval_linit_176/7]
45. non_recursive  : [eval_linit_175/8]
46. non_recursive  : [eval_linit_164/8]
47. non_recursive  : [eval_linit_163/9]
48. non_recursive  : [eval_linit_bb42_in/8]
49. non_recursive  : [eval_linit_139/8]
50. non_recursive  : [eval_linit_138/9]
51. non_recursive  : [eval_linit_123/8]
52. non_recursive  : [eval_linit_122/9]
53. non_recursive  : [eval_linit_157/1]
54. non_recursive  : [eval_linit_156/7]
55. non_recursive  : [eval_linit_bb40_in/7]
56. non_recursive  : [eval_linit_149/10]
57. non_recursive  : [eval_linit_148/10]
58. non_recursive  : [eval_linit_143/9]
59. non_recursive  : [eval_linit_142/9]
60. non_recursive  : [eval_linit_109/8]
61. non_recursive  : [eval_linit_108/9]
62. non_recursive  : [eval_linit_bb30_in/8]
63. non_recursive  : [eval_linit_85/8]
64. non_recursive  : [eval_linit_84/9]
65. non_recursive  : [eval_linit_71/8]
66. non_recursive  : [eval_linit_70/8]
67. non_recursive  : [eval_linit_97/10]
68. non_recursive  : [eval_linit_96/10]
69. non_recursive  : [eval_linit_91/9]
70. non_recursive  : [eval_linit_90/9]
71. non_recursive  : [eval_linit_66/1]
72. non_recursive  : [eval_linit_65/10]
73. non_recursive  : [eval_linit_bb22_in/7]
74. non_recursive  : [eval_linit_9/9]
75. non_recursive  : [eval_linit_8/8]
76. non_recursive  : [eval_linit_3/8]
77. non_recursive  : [eval_linit_2/7]
78. non_recursive  : [eval_linit_bb0_in/7]
79. non_recursive  : [eval_linit_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_linit_bb47_in/14
22. SCC is partially evaluated into eval_linit_bb56_in/15
23. SCC is partially evaluated into eval_linit_bb68_in/15
24. SCC is partially evaluated into eval_linit_bb65_in/15
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_linit_bb86_in/15
28. SCC is partially evaluated into eval_linit_bb83_in/15
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_linit_bb108_in/15
34. SCC is partially evaluated into eval_linit_bb106_in/8
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_linit_324/7
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into loop_cont_eval_linit_bb83_in/9
40. SCC is partially evaluated into loop_cont_eval_linit_bb65_in/9
41. SCC is partially evaluated into loop_cont_eval_linit_bb56_in/9
42. SCC is partially evaluated into eval_linit_bb55_in/7
43. SCC is completely evaluated into other SCCs
44. SCC is partially evaluated into eval_linit_176/7
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_linit_164/8
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is partially evaluated into eval_linit_123/8
52. SCC is completely evaluated into other SCCs
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is partially evaluated into eval_linit_bb40_in/7
56. SCC is partially evaluated into eval_linit_149/10
57. SCC is completely evaluated into other SCCs
58. SCC is partially evaluated into eval_linit_143/9
59. SCC is completely evaluated into other SCCs
60. SCC is partially evaluated into eval_linit_109/8
61. SCC is completely evaluated into other SCCs
62. SCC is completely evaluated into other SCCs
63. SCC is completely evaluated into other SCCs
64. SCC is completely evaluated into other SCCs
65. SCC is partially evaluated into eval_linit_71/8
66. SCC is completely evaluated into other SCCs
67. SCC is completely evaluated into other SCCs
68. SCC is completely evaluated into other SCCs
69. SCC is completely evaluated into other SCCs
70. SCC is completely evaluated into other SCCs
71. SCC is completely evaluated into other SCCs
72. SCC is completely evaluated into other SCCs
73. SCC is partially evaluated into eval_linit_bb22_in/7
74. SCC is partially evaluated into eval_linit_9/9
75. SCC is completely evaluated into other SCCs
76. SCC is partially evaluated into eval_linit_3/8
77. SCC is completely evaluated into other SCCs
78. SCC is partially evaluated into eval_linit_bb0_in/7
79. SCC is partially evaluated into eval_linit_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_linit_bb47_in/14 
* CE 30 is refined into CE [66] 
* CE 29 is refined into CE [67] 


#### Refined cost equations eval_linit_bb47_in/14 
* CE 66: eval_linit_bb47_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F) = 0
     [0>=G,H=12] 
* CE 67: eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) = 1+ eval_linit_bb47_in(I,J,K,L,M,N,O,P,C,D,E,F,G,H)
     [V_i_0>=1,V_i_0=O+1,P=12,B=12] 

### Cost equations --> "Loop" of eval_linit_bb47_in/14 
* CEs [67] --> Loop 45 
* CEs [66] --> Loop 46 

#### Loops of eval_linit_bb47_in/14 
* Loop 45: eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H)->  eval_linit_bb47_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_0',B',C,D,E,F,G,H)
                  [V_i_0>=1,V_i_0=V_i_0'+1,B'=12,B=12] 
* Loop 46: eval_linit_bb47_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F) [0>=G,H=12] 

### Ranking functions of CR eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) 
* RF of phase [45]: [V_i_0]

#### Partial ranking functions of CR eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) 
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    V_i_0


### Resulting Chains:eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) 
* [[45],46]
* [46]


### Merging Chains  eval_linit_bb47_in/14 into  External patterns of execution 
* [[46]] --> 1 
* [[46,[45]]] --> 2 


### Specialization of cost equations eval_linit_bb56_in/15 
* CE 32 is refined into CE [68] 
* CE 31 is refined into CE [69] 


#### Refined cost equations eval_linit_bb56_in/15 
* CE 68: eval_linit_bb56_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,E) = 0
     [0>=G,H=11] 
* CE 69: eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb56_in(J,K,L,M,N,O,P,B,C,D,E,F,G,H,I)
     [V_i_1>=1,V_i_1=P+1] 

### Cost equations --> "Loop" of eval_linit_bb56_in/15 
* CEs [69] --> Loop 47 
* CEs [68] --> Loop 48 

#### Loops of eval_linit_bb56_in/15 
* Loop 47: eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I)->  eval_linit_bb56_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_1',B,C,D,E,F,G,H,I)
                  [V_i_1>=1,V_i_1=V_i_1'+1] 
* Loop 48: eval_linit_bb56_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,E) [0>=G,H=11] 

### Ranking functions of CR eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) 
* RF of phase [47]: [V_i_1]

#### Partial ranking functions of CR eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) 
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    V_i_1


### Resulting Chains:eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) 
* [[47],48]
* [48]


### Merging Chains  eval_linit_bb56_in/15 into  External patterns of execution 
* [[48]] --> 1 
* [[48,[47]]] --> 2 


### Specialization of cost equations eval_linit_bb68_in/15 
* CE 45 is refined into CE [70] 
* CE 44 is refined into CE [71] 


#### Refined cost equations eval_linit_bb68_in/15 
* CE 70: eval_linit_bb68_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [G>=1,H=3] 
* CE 71: eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,C,D,E,F,G,H,I)
     [V_i_2>=1,J=3,B=3] 

### Cost equations --> "Loop" of eval_linit_bb68_in/15 
* CEs [71] --> Loop 49 
* CEs [70] --> Loop 50 

#### Loops of eval_linit_bb68_in/15 
* Loop 49: eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I)->  eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B',C,D,E,F,G,H,I)
                  [V_i_2>=1,B'=3,B=3] 
* Loop 50: eval_linit_bb68_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [G>=1,H=3] 

### Ranking functions of CR eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 
* [[49]]...
* [[49],50]
* [50]


### Merging Chains  eval_linit_bb68_in/15 into  External patterns of execution 
* [[50],[50,[49]]] --> 1 
* [[[49]]] --> 2 


### Specialization of cost equations eval_linit_bb65_in/15 
* CE 40 is refined into CE [72] 
* CE 36 is refined into CE [73,74] 
* CE 37 is refined into CE [75] 
* CE 34 is refined into CE [76,77] 
* CE 35 is refined into CE [78] 
* CE 38 is refined into CE [79,80] 
* CE 39 is refined into CE [81] 


#### Refined cost equations eval_linit_bb65_in/15 
* CE 72: eval_linit_bb65_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,F) = 0
     [0>=G,H=10] 
* CE 73: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2):1
     [V_i_2>=1,J=3,B=9] 
* CE 74: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,K,L,M,N,O,P,Q):2
     [V_i_2>=1,J=3,B=9] 
* CE 75: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 0
     [V_i_2>=1,B=9] 
* CE 76: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2):1
     [V_i_2>=1,J=3,B=6] 
* CE 77: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,K,L,M,N,O,P,Q):2
     [V_i_2>=1,J=3,B=6] 
* CE 78: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 0
     [V_i_2>=1,B=6] 
* CE 79: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 2+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2):1+ eval_linit_bb65_in(K,L,M,N,O,P,Q,B,C,D,E,F,G,H,I)
     [V_i_2>=1,J=3] 
* CE 80: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 2+ eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,J,K,L,M,N,O,P,Q):2
     [V_i_2>=1,J=3] 
* CE 81: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb65_in(J,K,L,M,N,O,P,B,C,D,E,F,G,H,I)
     [V_i_2>=1] 

### Cost equations --> "Loop" of eval_linit_bb65_in/15 
* CEs [79,81] --> Loop 51 
* CEs [74] --> Loop 52 
* CEs [77,80] --> Loop 53 
* CEs [72] --> Loop 54 
* CEs [73,75] --> Loop 55 
* CEs [76,78] --> Loop 56 

#### Loops of eval_linit_bb65_in/15 
* Loop 51: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I)->  eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B,C,D,E,F,G,H,I)
                  [V_i_2>=1] 
* Loop 52: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) [V_i_2>=1,B=9] 
* Loop 53: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) [V_i_2>=1] 
* Loop 54: eval_linit_bb65_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,F) [0>=G,H=10] 
* Loop 55: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) [V_i_2>=1,B=9] 
* Loop 56: eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) [V_i_2>=1,B=6] 

### Ranking functions of CR eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) 
* [[51]]...
* [[51],56]
* [[51],55]
* [[51],54]
* [[51],53]...
* [[51],52]...
* [56]
* [55]
* [54]
* [53]...
* [52]...


### Merging Chains  eval_linit_bb65_in/15 into  External patterns of execution 
* [[56],[56,[51]]] --> 1 
* [[55],[55,[51]]] --> 2 
* [[54]] --> 3 
* [[54,[51]]] --> 4 
* [[52],[52,[51]]] --> 5 
* [[53],[[51]],[53,[51]]] --> 6 


### Specialization of cost equations eval_linit_bb86_in/15 
* CE 59 is refined into CE [82] 
* CE 58 is refined into CE [83] 


#### Refined cost equations eval_linit_bb86_in/15 
* CE 82: eval_linit_bb86_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [G>=1,H=2] 
* CE 83: eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,C,D,E,F,G,H,I)
     [V_i_4>=1,J=2,B=2] 

### Cost equations --> "Loop" of eval_linit_bb86_in/15 
* CEs [83] --> Loop 57 
* CEs [82] --> Loop 58 

#### Loops of eval_linit_bb86_in/15 
* Loop 57: eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I)->  eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B',C,D,E,F,G,H,I)
                  [V_i_4>=1,B'=2,B=2] 
* Loop 58: eval_linit_bb86_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [G>=1,H=2] 

### Ranking functions of CR eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 
* [[57]]...
* [[57],58]
* [58]


### Merging Chains  eval_linit_bb86_in/15 into  External patterns of execution 
* [[58],[58,[57]]] --> 1 
* [[[57]]] --> 2 


### Specialization of cost equations eval_linit_bb83_in/15 
* CE 53 is refined into CE [84] 
* CE 52 is refined into CE [85] 
* CE 46 is refined into CE [86,87] 
* CE 47 is refined into CE [88] 
* CE 48 is refined into CE [89,90] 
* CE 49 is refined into CE [91] 
* CE 50 is refined into CE [92,93] 
* CE 51 is refined into CE [94] 


#### Refined cost equations eval_linit_bb83_in/15 
* CE 84: eval_linit_bb83_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) = 0
     [0>=G,H=8] 
* CE 85: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 0
     [0>=V_i_4,B=7] 
* CE 86: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4):1
     [V_i_4>=1,J=2,B=6] 
* CE 87: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,K,L,M,N,O,P,Q):2
     [V_i_4>=1,J=2,B=6] 
* CE 88: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 0
     [V_i_4>=1,B=6] 
* CE 89: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4):1
     [V_i_4>=1,J=2,B=5] 
* CE 90: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,K,L,M,N,O,P,Q):2
     [V_i_4>=1,J=2,B=5] 
* CE 91: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 0
     [V_i_4>=1,B=5] 
* CE 92: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 2+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4):1+ eval_linit_bb83_in(K,L,M,N,O,P,Q,B,C,D,E,F,G,H,I)
     [V_i_4>=1,J=2] 
* CE 93: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 2+ eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,J,K,L,M,N,O,P,Q):2
     [V_i_4>=1,J=2] 
* CE 94: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb83_in(J,K,L,M,N,O,P,B,C,D,E,F,G,H,I)
     [V_i_4>=1] 

### Cost equations --> "Loop" of eval_linit_bb83_in/15 
* CEs [92,94] --> Loop 59 
* CEs [87] --> Loop 60 
* CEs [90,93] --> Loop 61 
* CEs [84] --> Loop 62 
* CEs [85] --> Loop 63 
* CEs [86,88] --> Loop 64 
* CEs [89,91] --> Loop 65 

#### Loops of eval_linit_bb83_in/15 
* Loop 59: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I)->  eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B,C,D,E,F,G,H,I)
                  [V_i_4>=1] 
* Loop 60: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) [V_i_4>=1,B=6] 
* Loop 61: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) [V_i_4>=1] 
* Loop 62: eval_linit_bb83_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) [0>=G,H=8] 
* Loop 63: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) [0>=V_i_4,B=7] 
* Loop 64: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) [V_i_4>=1,B=6] 
* Loop 65: eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) [V_i_4>=1,B=5] 

### Ranking functions of CR eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) 
* [[59]]...
* [[59],65]
* [[59],64]
* [[59],63]
* [[59],62]
* [[59],61]...
* [[59],60]...
* [65]
* [64]
* [63]
* [62]
* [61]...
* [60]...


### Merging Chains  eval_linit_bb83_in/15 into  External patterns of execution 
* [[65],[65,[59]]] --> 1 
* [[64],[64,[59]]] --> 2 
* [[63]] --> 3 
* [[63,[59]]] --> 4 
* [[62]] --> 5 
* [[62,[59]]] --> 6 
* [[60],[60,[59]]] --> 7 
* [[61],[[59]],[61,[59]]] --> 8 


### Specialization of cost equations eval_linit_bb108_in/15 
* CE 65 is refined into CE [95] 
* CE 64 is refined into CE [96] 


#### Refined cost equations eval_linit_bb108_in/15 
* CE 95: eval_linit_bb108_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) = 0
     [I=G+1,H=4] 
* CE 96: eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) = 1+ eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,J,C,D,E,F,G,H,I)
     [J=4,B=4] 

### Cost equations --> "Loop" of eval_linit_bb108_in/15 
* CEs [96] --> Loop 66 
* CEs [95] --> Loop 67 

#### Loops of eval_linit_bb108_in/15 
* Loop 66: eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I)->  eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B',C,D,E,F,G,H,I)
                  [B'=4,B=4] 
* Loop 67: eval_linit_bb108_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) [G+1=I,H=4] 

### Ranking functions of CR eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) 
* [[66]]...
* [[66],67]
* [67]


### Merging Chains  eval_linit_bb108_in/15 into  External patterns of execution 
* [[67],[67,[66]]] --> 1 
* [[[66]]] --> 2 


### Specialization of cost equations eval_linit_bb106_in/8 
* CE 63 is refined into CE [97] 
* CE 62 is refined into CE [98,99] 


#### Refined cost equations eval_linit_bb106_in/8 
* CE 97: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) = 0
     [B=7] 
* CE 98: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) = 2+ eval_linit_bb108_in(C,D,E,F,G,H,I,J,C,D,E,F,G,H,K):1+ eval_linit_bb106_in(C,D,E,F,G,H,K,L)
     [K=I+1,K=V_i_6+1,L=7,J=4,B=7] 
* CE 99: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) = 2+ eval_linit_bb108_in(C,D,E,F,G,H,V_i_6,I,J,K,L,M,N,O,P):2
     [Q=7,I=4,B=7] 

### Cost equations --> "Loop" of eval_linit_bb106_in/8 
* CEs [99] --> Loop 68 
* CEs [98] --> Loop 69 
* CEs [97] --> Loop 70 

#### Loops of eval_linit_bb106_in/8 
* Loop 68: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) [B=7] 
* Loop 69: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B)->  eval_linit_bb106_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B')
                  [V_i_6+1=V_i_6',B'=7,B=7] 
* Loop 70: eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) [B=7] 

### Ranking functions of CR eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) 

#### Partial ranking functions of CR eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) 


### Resulting Chains:eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) 
* [[69]]...
* [[69],70]
* [[69],68]...
* [70]
* [68]...


### Merging Chains  eval_linit_bb106_in/8 into  External patterns of execution 
* [[70],[70,[69]]] --> 1 
* [[[69]]] --> 2 
* [[68],[68,[69]]] --> 3 


### Specialization of cost equations eval_linit_324/7 
* CE 60 is refined into CE [100] 
* CE 61 is refined into CE [101,102,103] 


#### Refined cost equations eval_linit_324/7 
* CE 100: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0
     [] 
* CE 101: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D):1
     [D=7,C=0] 
* CE 102: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D):2
     [D=7,C=0] 
* CE 103: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D):3
     [D=7,C=0] 

### Cost equations --> "Loop" of eval_linit_324/7 
* CEs [102,103] --> Loop 71 
* CEs [100,101] --> Loop 72 

#### Loops of eval_linit_324/7 
* Loop 71: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 
* Loop 72: eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 

### Ranking functions of CR eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [72]
* [71]...


### Merging Chains  eval_linit_324/7 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 


### Specialization of cost equations loop_cont_eval_linit_bb83_in/9 
* CE 57 is refined into CE [104,105] 
* CE 56 is refined into CE [106] 
* CE 55 is refined into CE [107] 
* CE 54 is refined into CE [108] 


#### Refined cost equations loop_cont_eval_linit_bb83_in/9 
* CE 104: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) = 0+ eval_linit_324(A,B,C,D,E,F,H):1
     [I=8] 
* CE 105: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) = 0+ eval_linit_324(A,B,C,D,E,F,H):2
     [I=8] 
* CE 106: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) = 0
     [I=7] 
* CE 107: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) = 0
     [I=6] 
* CE 108: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) = 0
     [I=5] 

### Cost equations --> "Loop" of loop_cont_eval_linit_bb83_in/9 
* CEs [104] --> Loop 73 
* CEs [106] --> Loop 74 
* CEs [107] --> Loop 75 
* CEs [108] --> Loop 76 
* CEs [105] --> Loop 77 

#### Loops of loop_cont_eval_linit_bb83_in/9 
* Loop 73: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) [I=8] 
* Loop 74: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) [I=7] 
* Loop 75: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) [I=6] 
* Loop 76: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) [I=5] 
* Loop 77: loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) [I=8] 

### Ranking functions of CR loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) 


### Resulting Chains:loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H) 
* [77]...
* [76]
* [75]
* [74]
* [73]


### Merging Chains  loop_cont_eval_linit_bb83_in/9 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[77]] --> 5 


### Specialization of cost equations loop_cont_eval_linit_bb65_in/9 
* CE 43 is refined into CE [109,110,111,112,113,114,115,116,117,118] 
* CE 41 is refined into CE [119] 
* CE 42 is refined into CE [120] 


#### Refined cost equations loop_cont_eval_linit_bb65_in/9 
* CE 109: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):1+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):1
     [G>=1,R=5,J=5,I=10] 
* CE 110: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):2+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):2
     [G>=1,R=6,J=6,I=10] 
* CE 111: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):3+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):3
     [0>=G,R=7,J=7,I=10] 
* CE 112: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):4+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):3
     [G>=1,R=7,J=7,I=10] 
* CE 113: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,A,B,C,D,E,F,K):5+ loop_cont_eval_linit_bb83_in(L,A,B,C,D,E,F,K,H):4
     [0>=G,L=8,J=8,I=10] 
* CE 114: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,A,B,C,D,E,F,K):5+ loop_cont_eval_linit_bb83_in(L,A,B,C,D,E,F,K,H):5
     [0>=G,L=8,J=8,I=10] 
* CE 115: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):6+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):4
     [G>=1,R=8,J=8,I=10] 
* CE 116: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):6+ loop_cont_eval_linit_bb83_in(R,K,L,M,N,O,P,Q,H):5
     [G>=1,R=8,J=8,I=10] 
* CE 117: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):7
     [G>=1,R=6,J=6,I=10] 
* CE 118: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb83_in(A,B,C,D,E,F,G,J,K,L,M,N,O,P,Q):8
     [G>=1,I=10] 
* CE 119: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 0
     [I=9] 
* CE 120: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) = 0
     [I=6] 

### Cost equations --> "Loop" of loop_cont_eval_linit_bb65_in/9 
* CEs [109,110,112,115] --> Loop 78 
* CEs [111,113] --> Loop 79 
* CEs [119] --> Loop 80 
* CEs [120] --> Loop 81 
* CEs [116,117,118] --> Loop 82 
* CEs [114] --> Loop 83 

#### Loops of loop_cont_eval_linit_bb65_in/9 
* Loop 78: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [G>=1,I=10] 
* Loop 79: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [0>=G,I=10] 
* Loop 80: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [I=9] 
* Loop 81: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [I=6] 
* Loop 82: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [G>=1,I=10] 
* Loop 83: loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) [0>=G,I=10] 

### Ranking functions of CR loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) 


### Resulting Chains:loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H) 
* [83]...
* [82]...
* [81]
* [80]
* [79]
* [78]


### Merging Chains  loop_cont_eval_linit_bb65_in/9 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 
* [[79]] --> 3 
* [[78]] --> 4 
* [[83]] --> 5 
* [[82]] --> 6 


### Specialization of cost equations loop_cont_eval_linit_bb56_in/9 
* CE 33 is refined into CE [121,122,123,124,125,126,127,128,129,130,131,132] 


#### Refined cost equations loop_cont_eval_linit_bb56_in/9 
* CE 121: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Z):1+ loop_cont_eval_linit_bb65_in(A1,T,U,V,W,X,Y,Z,H):1
     [G>=1,A1=6,S=6,R=11] 
* CE 122: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Z):2+ loop_cont_eval_linit_bb65_in(A1,T,U,V,W,X,Y,Z,H):2
     [G>=1,A1=9,S=9,R=11] 
* CE 123: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,A,B,C,D,E,F,F):3+ loop_cont_eval_linit_bb65_in(T,A,B,C,D,E,F,F,H):3
     [0>=F,0>=G,T=10,S=10,R=11] 
* CE 124: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,A,B,C,D,E,F,F):3+ loop_cont_eval_linit_bb65_in(T,A,B,C,D,E,F,F,H):4
     [F>=1,0>=G,T=10,S=10,R=11] 
* CE 125: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,A,B,C,D,E,F,F):3+ loop_cont_eval_linit_bb65_in(T,A,B,C,D,E,F,F,H):5
     [0>=F,0>=G,T=10,S=10,R=11] 
* CE 126: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,A,B,C,D,E,F,F):3+ loop_cont_eval_linit_bb65_in(T,A,B,C,D,E,F,F,H):6
     [F>=1,0>=G,T=10,S=10,R=11] 
* CE 127: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Y):4+ loop_cont_eval_linit_bb65_in(Z,T,U,V,W,X,Y,Y,H):3
     [G>=1,0>=Y,Z=10,S=10,R=11] 
* CE 128: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Y):4+ loop_cont_eval_linit_bb65_in(Z,T,U,V,W,X,Y,Y,H):4
     [Y>=1,G>=1,Z=10,S=10,R=11] 
* CE 129: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Y):4+ loop_cont_eval_linit_bb65_in(Z,T,U,V,W,X,Y,Y,H):5
     [G>=1,0>=Y,Z=10,S=10,R=11] 
* CE 130: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Y):4+ loop_cont_eval_linit_bb65_in(Z,T,U,V,W,X,Y,Y,H):6
     [Y>=1,G>=1,Z=10,S=10,R=11] 
* CE 131: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Z):5
     [G>=1,A1=9,S=9,R=11] 
* CE 132: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) = 1+ eval_linit_bb65_in(A,B,C,D,E,F,G,S,T,U,V,W,X,Y,Z):6
     [G>=1,R=11] 

### Cost equations --> "Loop" of loop_cont_eval_linit_bb56_in/9 
* CEs [129,130,131,132] --> Loop 84 
* CEs [126] --> Loop 85 
* CEs [125] --> Loop 86 
* CEs [121,122,127,128] --> Loop 87 
* CEs [124] --> Loop 88 
* CEs [123] --> Loop 89 

#### Loops of loop_cont_eval_linit_bb56_in/9 
* Loop 84: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [G>=1,R=11] 
* Loop 85: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [F>=1,0>=G,R=11] 
* Loop 86: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [0>=G,0>=F,R=11] 
* Loop 87: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [G>=1,R=11] 
* Loop 88: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [F>=1,0>=G,R=11] 
* Loop 89: loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) [0>=G,0>=F,R=11] 

### Ranking functions of CR loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) 


### Resulting Chains:loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H) 
* [89]
* [88]
* [87]
* [86]...
* [85]...
* [84]...


### Merging Chains  loop_cont_eval_linit_bb56_in/9 into  External patterns of execution 
* [[89]] --> 1 
* [[88]] --> 2 
* [[87]] --> 3 
* [[86]] --> 4 
* [[85]] --> 5 
* [[84]] --> 6 


### Specialization of cost equations eval_linit_bb55_in/7 
* CE 28 is refined into CE [133,134,135,136,137,138,139,140,141,142,143,144] 


#### Refined cost equations eval_linit_bb55_in/7 
* CE 133: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):1
     [0>=V__numsflags,0>=V__numpflags,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 134: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):2
     [0>=V__numsflags+V__numpflags,V__numpflags>=1,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 135: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):3
     [0>=V__numsflags+V__numpflags,V__numsflags>=1,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 136: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):4
     [0>=V__numsflags,0>=V__numpflags,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 137: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 138: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,D,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags):1+ loop_cont_eval_linit_bb56_in(E,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__numsflags,B):6
     [0>=V__numsflags+V__numpflags,V__numsflags>=1,V__numsflags+V__numpflags=C,E=11,D=11] 
* CE 139: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):1
     [D>=1,0>=J,0>=K,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 
* CE 140: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):2
     [K>=1,D>=1,0>=J,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 
* CE 141: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):3
     [J>=1,D>=1,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 
* CE 142: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):4
     [D>=1,0>=J,0>=K,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 
* CE 143: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):5
     [K>=1,D>=1,0>=J,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 
* CE 144: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,C,D,E,F,G,H,I,J,K,J):2+ loop_cont_eval_linit_bb56_in(L,F,G,H,I,J,K,J,B):6
     [J>=1,D>=1,D=V__numsflags+C,D=V__numsflags+V__numpflags,L=11,E=11] 

### Cost equations --> "Loop" of eval_linit_bb55_in/7 
* CEs [142,143,144] --> Loop 90 
* CEs [137] --> Loop 91 
* CEs [138] --> Loop 92 
* CEs [136] --> Loop 93 
* CEs [139,140,141] --> Loop 94 
* CEs [134] --> Loop 95 
* CEs [135] --> Loop 96 
* CEs [133] --> Loop 97 

#### Loops of eval_linit_bb55_in/7 
* Loop 90: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__numsflags+V__numpflags>=1] 
* Loop 91: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 92: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 93: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 94: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__numsflags+V__numpflags>=1] 
* Loop 95: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 96: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 97: eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numpflags,0>=V__numsflags] 

### Ranking functions of CR eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [97]
* [96]
* [95]
* [94]
* [93]...
* [92]...
* [91]...
* [90]...


### Merging Chains  eval_linit_bb55_in/7 into  External patterns of execution 
* [[97]] --> 1 
* [[96]] --> 2 
* [[95]] --> 3 
* [[94]] --> 4 
* [[93]] --> 5 
* [[92]] --> 6 
* [[91]] --> 7 
* [[90]] --> 8 


### Specialization of cost equations eval_linit_176/7 
* CE 26 is refined into CE [145,146,147,148,149,150,151,152] 
* CE 27 is refined into CE [153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168] 


#### Refined cost equations eval_linit_176/7 
* CE 145: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [0>=V__numpflags,0>=V__numsflags] 
* CE 146: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):2
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 147: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):3
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 148: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):4
     [V__numsflags+V__numpflags>=1] 
* CE 149: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):5
     [0>=V__numpflags,0>=V__numsflags] 
* CE 150: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):6
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 151: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):7
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 152: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):8
     [V__numsflags+V__numpflags>=1] 
* CE 153: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [0>=V__numpflags,0>=V__numsflags,0>=V__hashsize,C=12] 
* CE 154: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):2
     [0>=V__numsflags+V__numpflags,V__numsflags>=1,0>=V__hashsize,C=12] 
* CE 155: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):3
     [0>=V__numsflags+V__numpflags,V__numpflags>=1,0>=V__hashsize,C=12] 
* CE 156: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):4
     [V__numsflags+V__numpflags>=1,0>=V__hashsize,C=12] 
* CE 157: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):5
     [0>=V__numpflags,0>=V__numsflags,0>=V__hashsize,C=12] 
* CE 158: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):6
     [0>=V__numsflags+V__numpflags,V__numsflags>=1,0>=V__hashsize,C=12] 
* CE 159: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):7
     [0>=V__numsflags+V__numpflags,V__numpflags>=1,0>=V__hashsize,C=12] 
* CE 160: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags):1+ eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):8
     [V__numsflags+V__numpflags>=1,0>=V__hashsize,C=12] 
* CE 161: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):1
     [V__hashsize>=1,0>=I,0>=H,C=12] 
* CE 162: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):2
     [0>=H+I,H>=1,V__hashsize>=1,C=12] 
* CE 163: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):3
     [0>=H+I,I>=1,V__hashsize>=1,C=12] 
* CE 164: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):4
     [H+I>=1,V__hashsize>=1,C=12] 
* CE 165: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):5
     [V__hashsize>=1,0>=I,0>=H,C=12] 
* CE 166: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):6
     [0>=H+I,H>=1,V__hashsize>=1,C=12] 
* CE 167: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):7
     [0>=H+I,I>=1,V__hashsize>=1,C=12] 
* CE 168: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 1+ eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V__hashsize,C,D,E,F,G,H,I):2+ eval_linit_bb55_in(D,E,F,G,H,I,B):8
     [H+I>=1,V__hashsize>=1,C=12] 

### Cost equations --> "Loop" of eval_linit_176/7 
* CEs [165,166,167,168] --> Loop 98 
* CEs [152,160] --> Loop 99 
* CEs [151,159] --> Loop 100 
* CEs [150,158] --> Loop 101 
* CEs [149,157] --> Loop 102 
* CEs [161,162,163,164] --> Loop 103 
* CEs [148,156] --> Loop 104 
* CEs [147,155] --> Loop 105 
* CEs [146,154] --> Loop 106 
* CEs [145,153] --> Loop 107 

#### Loops of eval_linit_176/7 
* Loop 98: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__hashsize>=1] 
* Loop 99: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__numsflags+V__numpflags>=1] 
* Loop 100: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 101: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 102: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 103: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__hashsize>=1] 
* Loop 104: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [V__numsflags+V__numpflags>=1] 
* Loop 105: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 106: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 107: eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [0>=V__numpflags,0>=V__numsflags] 

### Ranking functions of CR eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [107]
* [106]
* [105]
* [104]
* [103]
* [102]...
* [101]...
* [100]...
* [99]...
* [98]...


### Merging Chains  eval_linit_176/7 into  External patterns of execution 
* [[107]] --> 1 
* [[103]] --> 2 
* [[106]] --> 3 
* [[105]] --> 4 
* [[104]] --> 5 
* [[102]] --> 6 
* [[98]] --> 7 
* [[101]] --> 8 
* [[100]] --> 9 
* [[99]] --> 10 


### Specialization of cost equations eval_linit_164/8 
* CE 21 is refined into CE [169] 
* CE 22 is refined into CE [170,171,172,173,174,175,176,177,178,179] 


#### Refined cost equations eval_linit_164/8 
* CE 169: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0
     [] 
* CE 170: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [0>=V__numpflags,0>=V__numsflags] 
* CE 171: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):2
     [V__hashsize>=1] 
* CE 172: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):3
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 173: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):4
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 174: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):5
     [V__numsflags+V__numpflags>=1] 
* CE 175: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):6
     [0>=V__numpflags,0>=V__numsflags] 
* CE 176: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):7
     [V__hashsize>=1] 
* CE 177: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):8
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 178: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):9
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 179: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):10
     [V__numsflags+V__numpflags>=1] 

### Cost equations --> "Loop" of eval_linit_164/8 
* CEs [179] --> Loop 108 
* CEs [178] --> Loop 109 
* CEs [177] --> Loop 110 
* CEs [176] --> Loop 111 
* CEs [175] --> Loop 112 
* CEs [169,170,171,172,173,174] --> Loop 113 

#### Loops of eval_linit_164/8 
* Loop 108: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__numsflags+V__numpflags>=1] 
* Loop 109: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 110: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 111: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__hashsize>=1] 
* Loop 112: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 113: eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [] 

### Ranking functions of CR eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 

#### Partial ranking functions of CR eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 


### Resulting Chains:eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 
* [113]
* [112]...
* [111]...
* [110]...
* [109]...
* [108]...


### Merging Chains  eval_linit_164/8 into  External patterns of execution 
* [[113]] --> 1 
* [[112]] --> 2 
* [[111]] --> 3 
* [[110]] --> 4 
* [[109]] --> 5 
* [[108]] --> 6 


### Specialization of cost equations eval_linit_123/8 
* CE 17 is refined into CE [180] 
* CE 18 is refined into CE [181,182,183,184,185,186] 


#### Refined cost equations eval_linit_123/8 
* CE 180: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0
     [] 
* CE 181: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):1
     [] 
* CE 182: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):2
     [0>=V__numpflags,0>=V__numsflags] 
* CE 183: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):3
     [V__hashsize>=1] 
* CE 184: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):4
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 185: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 186: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):6
     [V__numsflags+V__numpflags>=1] 

### Cost equations --> "Loop" of eval_linit_123/8 
* CEs [186] --> Loop 114 
* CEs [185] --> Loop 115 
* CEs [184] --> Loop 116 
* CEs [183] --> Loop 117 
* CEs [182] --> Loop 118 
* CEs [180,181] --> Loop 119 

#### Loops of eval_linit_123/8 
* Loop 114: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__numsflags+V__numpflags>=1] 
* Loop 115: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 116: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 117: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__hashsize>=1] 
* Loop 118: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 119: eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [] 

### Ranking functions of CR eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 

#### Partial ranking functions of CR eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 


### Resulting Chains:eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 
* [119]
* [118]...
* [117]...
* [116]...
* [115]...
* [114]...


### Merging Chains  eval_linit_123/8 into  External patterns of execution 
* [[119]] --> 1 
* [[118]] --> 2 
* [[117]] --> 3 
* [[116]] --> 4 
* [[115]] --> 5 
* [[114]] --> 6 


### Specialization of cost equations eval_linit_bb40_in/7 
* CE 23 is refined into CE [187] 


#### Refined cost equations eval_linit_bb40_in/7 
* CE 187: eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0
     [] 

### Cost equations --> "Loop" of eval_linit_bb40_in/7 
* CEs [187] --> Loop 120 

#### Loops of eval_linit_bb40_in/7 
* Loop 120: eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 

### Ranking functions of CR eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [120]


### Merging Chains  eval_linit_bb40_in/7 into  External patterns of execution 
* [[120]] --> 1 


### Specialization of cost equations eval_linit_149/10 
* CE 24 is refined into CE [188] 
* CE 25 is refined into CE [189,190,191,192,193,194] 


#### Refined cost equations eval_linit_149/10 
* CE 188: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [] 
* CE 189: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):1
     [] 
* CE 190: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):2
     [0>=V__numpflags,0>=V__numsflags] 
* CE 191: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):3
     [V__hashsize>=1] 
* CE 192: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):4
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 193: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 194: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) = 0+ eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):6
     [V__numsflags+V__numpflags>=1] 

### Cost equations --> "Loop" of eval_linit_149/10 
* CEs [194] --> Loop 121 
* CEs [193] --> Loop 122 
* CEs [192] --> Loop 123 
* CEs [191] --> Loop 124 
* CEs [190] --> Loop 125 
* CEs [188,189] --> Loop 126 

#### Loops of eval_linit_149/10 
* Loop 121: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [V__numsflags+V__numpflags>=1] 
* Loop 122: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 123: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 124: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [V__hashsize>=1] 
* Loop 125: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 126: eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) [] 

### Ranking functions of CR eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) 

#### Partial ranking functions of CR eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) 


### Resulting Chains:eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B) 
* [126]
* [125]...
* [124]...
* [123]...
* [122]...
* [121]...


### Merging Chains  eval_linit_149/10 into  External patterns of execution 
* [[126]] --> 1 
* [[125]] --> 2 
* [[124]] --> 3 
* [[123]] --> 4 
* [[122]] --> 5 
* [[121]] --> 6 


### Specialization of cost equations eval_linit_143/9 
* CE 19 is refined into CE [195] 
* CE 20 is refined into CE [196,197,198,199,200,201] 


#### Refined cost equations eval_linit_143/9 
* CE 195: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [] 
* CE 196: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):1
     [] 
* CE 197: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):2
     [0>=V__numpflags,0>=V__numsflags] 
* CE 198: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):3
     [V__hashsize>=1] 
* CE 199: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):4
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 200: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 201: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) = 0+ eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,C,B):6
     [V__numsflags+V__numpflags>=1] 

### Cost equations --> "Loop" of eval_linit_143/9 
* CEs [201] --> Loop 127 
* CEs [200] --> Loop 128 
* CEs [199] --> Loop 129 
* CEs [198] --> Loop 130 
* CEs [197] --> Loop 131 
* CEs [195,196] --> Loop 132 

#### Loops of eval_linit_143/9 
* Loop 127: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [V__numsflags+V__numpflags>=1] 
* Loop 128: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 129: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 130: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [V__hashsize>=1] 
* Loop 131: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 132: eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) [] 

### Ranking functions of CR eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) 

#### Partial ranking functions of CR eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) 


### Resulting Chains:eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B) 
* [132]
* [131]...
* [130]...
* [129]...
* [128]...
* [127]...


### Merging Chains  eval_linit_143/9 into  External patterns of execution 
* [[132]] --> 1 
* [[131]] --> 2 
* [[130]] --> 3 
* [[129]] --> 4 
* [[128]] --> 5 
* [[127]] --> 6 


### Specialization of cost equations eval_linit_109/8 
* CE 14 is refined into CE [202] 
* CE 15 is refined into CE [203,204,205,206,207,208] 
* CE 16 is refined into CE [209,210,211,212,213,214] 


#### Refined cost equations eval_linit_109/8 
* CE 202: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0
     [] 
* CE 203: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):1
     [] 
* CE 204: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):2
     [0>=V__numpflags,0>=V__numsflags] 
* CE 205: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):3
     [V__hashsize>=1] 
* CE 206: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):4
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 207: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 208: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):6
     [V__numsflags+V__numpflags>=1] 
* CE 209: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):1
     [] 
* CE 210: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):2
     [0>=V__numpflags,0>=V__numsflags] 
* CE 211: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):3
     [V__hashsize>=1] 
* CE 212: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):4
     [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* CE 213: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):5
     [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* CE 214: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):6
     [V__numsflags+V__numpflags>=1] 

### Cost equations --> "Loop" of eval_linit_109/8 
* CEs [208,214] --> Loop 133 
* CEs [207,213] --> Loop 134 
* CEs [206,212] --> Loop 135 
* CEs [205,211] --> Loop 136 
* CEs [204,210] --> Loop 137 
* CEs [202,203,209] --> Loop 138 

#### Loops of eval_linit_109/8 
* Loop 133: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__numsflags+V__numpflags>=1] 
* Loop 134: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numpflags>=1] 
* Loop 135: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numsflags+V__numpflags,V__numsflags>=1] 
* Loop 136: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__hashsize>=1] 
* Loop 137: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [0>=V__numpflags,0>=V__numsflags] 
* Loop 138: eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [] 

### Ranking functions of CR eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 

#### Partial ranking functions of CR eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 


### Resulting Chains:eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 
* [138]
* [137]...
* [136]...
* [135]...
* [134]...
* [133]...


### Merging Chains  eval_linit_109/8 into  External patterns of execution 
* [[138]] --> 1 
* [[137]] --> 2 
* [[136]] --> 3 
* [[135]] --> 4 
* [[134]] --> 5 
* [[133]] --> 6 


### Specialization of cost equations eval_linit_71/8 
* CE 12 is refined into CE [215] 
* CE 13 is refined into CE [216,217,218,219,220,221] 


#### Refined cost equations eval_linit_71/8 
* CE 215: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0
     [V__hashsize=1] 
* CE 216: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):1
     [V__hashsize=1] 
* CE 217: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):2
     [0>=H,0>=G,V__hashsize=1] 
* CE 218: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):3
     [E>=1,V__hashsize=1] 
* CE 219: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):4
     [0>=G+H,G>=1,V__hashsize=1] 
* CE 220: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):5
     [0>=G+H,H>=1,V__hashsize=1] 
* CE 221: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_109(C,D,E,F,G,H,V_3,B):6
     [G+H>=1,V__hashsize=1] 

### Cost equations --> "Loop" of eval_linit_71/8 
* CEs [217,218,219,220,221] --> Loop 139 
* CEs [215,216] --> Loop 140 

#### Loops of eval_linit_71/8 
* Loop 139: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__hashsize=1] 
* Loop 140: eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [V__hashsize=1] 

### Ranking functions of CR eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 

#### Partial ranking functions of CR eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 


### Resulting Chains:eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 
* [140]
* [139]...


### Merging Chains  eval_linit_71/8 into  External patterns of execution 
* [[140]] --> 1 
* [[139]] --> 2 


### Specialization of cost equations eval_linit_bb22_in/7 
* CE 11 is refined into CE [222] 


#### Refined cost equations eval_linit_bb22_in/7 
* CE 222: eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0
     [] 

### Cost equations --> "Loop" of eval_linit_bb22_in/7 
* CEs [222] --> Loop 141 

#### Loops of eval_linit_bb22_in/7 
* Loop 141: eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 

### Ranking functions of CR eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [141]


### Merging Chains  eval_linit_bb22_in/7 into  External patterns of execution 
* [[141]] --> 1 


### Specialization of cost equations eval_linit_9/9 
* CE 7 is refined into CE [223] 
* CE 8 is refined into CE [224] 
* CE 9 is refined into CE [225,226] 
* CE 10 is refined into CE [227,228,229,230,231,232] 


#### Refined cost equations eval_linit_9/9 
* CE 223: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0
     [] 
* CE 224: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_bb22_in(V__inited,V__cbench_print,V_12,V__nodictflag,V__numsflags,V__numpflags,B):1
     [] 
* CE 225: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_71(V__inited,V__cbench_print,C,V__nodictflag,V__numsflags,V__numpflags,V_3,B):1
     [C=1] 
* CE 226: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_71(V__inited,V__cbench_print,C,V__nodictflag,V__numsflags,V__numpflags,V_3,B):2
     [C=1] 
* CE 227: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):1
     [] 
* CE 228: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):2
     [0>=E,0>=D] 
* CE 229: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):3
     [C>=1] 
* CE 230: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):4
     [0>=D+E,D>=1] 
* CE 231: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):5
     [0>=D+E,E>=1] 
* CE 232: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) = 0+ eval_linit_109(V__inited,V__cbench_print,C,V__nodictflag,D,E,V_3,B):6
     [D+E>=1] 

### Cost equations --> "Loop" of eval_linit_9/9 
* CEs [226,228,229,230,231,232] --> Loop 142 
* CEs [223,224,225,227] --> Loop 143 

#### Loops of eval_linit_9/9 
* Loop 142: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) [] 
* Loop 143: eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) [] 

### Ranking functions of CR eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) 

#### Partial ranking functions of CR eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) 


### Resulting Chains:eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B) 
* [143]
* [142]...


### Merging Chains  eval_linit_9/9 into  External patterns of execution 
* [[143]] --> 1 
* [[142]] --> 2 


### Specialization of cost equations eval_linit_3/8 
* CE 5 is refined into CE [233] 
* CE 6 is refined into CE [234,235] 


#### Refined cost equations eval_linit_3/8 
* CE 233: eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0
     [] 
* CE 234: eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):1
     [] 
* CE 235: eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) = 0+ eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,C,B):2
     [] 

### Cost equations --> "Loop" of eval_linit_3/8 
* CEs [235] --> Loop 144 
* CEs [233,234] --> Loop 145 

#### Loops of eval_linit_3/8 
* Loop 144: eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [] 
* Loop 145: eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) [] 

### Ranking functions of CR eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 

#### Partial ranking functions of CR eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 


### Resulting Chains:eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B) 
* [145]
* [144]...


### Merging Chains  eval_linit_3/8 into  External patterns of execution 
* [[145]] --> 1 
* [[144]] --> 2 


### Specialization of cost equations eval_linit_bb0_in/7 
* CE 3 is refined into CE [236] 
* CE 4 is refined into CE [237,238] 


#### Refined cost equations eval_linit_bb0_in/7 
* CE 236: eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0
     [] 
* CE 237: eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,B):1
     [] 
* CE 238: eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,C,B):2
     [] 

### Cost equations --> "Loop" of eval_linit_bb0_in/7 
* CEs [238] --> Loop 146 
* CEs [236,237] --> Loop 147 

#### Loops of eval_linit_bb0_in/7 
* Loop 146: eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 
* Loop 147: eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 

### Ranking functions of CR eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [147]
* [146]...


### Merging Chains  eval_linit_bb0_in/7 into  External patterns of execution 
* [[147]] --> 1 
* [[146]] --> 2 


### Specialization of cost equations eval_linit_start/7 
* CE 2 is refined into CE [239,240] 


#### Refined cost equations eval_linit_start/7 
* CE 239: eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):1
     [] 
* CE 240: eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) = 0+ eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):2
     [] 

### Cost equations --> "Loop" of eval_linit_start/7 
* CEs [240] --> Loop 148 
* CEs [239] --> Loop 149 

#### Loops of eval_linit_start/7 
* Loop 148: eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 
* Loop 149: eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) [] 

### Ranking functions of CR eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 

#### Partial ranking functions of CR eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 


### Resulting Chains:eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B) 
* [149]
* [148]...


### Merging Chains  eval_linit_start/7 into  External patterns of execution 
* [[149]] --> 1 
* [[148]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [45] 

 * loop 45:eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) -> [eval_linit_bb47_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [45]:eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H) -> [eval_linit_bb47_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_0',B',C',D',E',F',G',H')] 
1*it(45)+0
  Such that:it(45) =< V_i_0
it(45) =< V_i_0-V_i_0'

#### Cost of chains of eval_linit_bb47_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_0,B,C,D,E,F,G,H):
* Chain [[45],46]: 1*it(45)+0
  Such that:it(45) =< V_i_0

  with precondition: [B=12,V_i_0>=1] 

* Chain [46]: 0
  with precondition: [B=12,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,H=V__numpflags,0>=V_i_0] 


#### Cost of loops [47] 

 * loop 47:eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) -> [eval_linit_bb56_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_1',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [47]:eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I) -> [eval_linit_bb56_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_1',B',C',D',E',F',G',H',I')] 
1*it(47)+0
  Such that:it(47) =< V_i_1
it(47) =< V_i_1-V_i_1'

#### Cost of chains of eval_linit_bb56_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_1,B,C,D,E,F,G,H,I):
* Chain [[47],48]: 1*it(47)+0
  Such that:it(47) =< V_i_1

  with precondition: [B=11,G=I,V_i_1>=1] 

* Chain [48]: 0
  with precondition: [B=11,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,H=V__numpflags,V__numsflags=G,V__numsflags=I,0>=V_i_1] 


#### Cost of loops [49] 

 * loop 49:eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb68_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [49]:eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb68_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*it(49)+0
#### Cost of phase [49]:eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb68_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*it(49)+0
#### Cost of chains of eval_linit_bb68_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I):
* Chain [[49]]...: 1*it(49)+0
  with precondition: [V_i_2>=1,B=3] 

* Chain [[49],50]: 1*it(49)+0
  with precondition: [B=3,V__inited=C,V__cbench_print=D,V__hashsize=E,V__nodictflag=F,V__numsflags=G,V__numpflags=H,V_i_2=I,V_i_2>=1] 

* Chain [50]: 0
  with precondition: [B=3,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,H=V__numpflags,V_i_2=I,V_i_2>=1] 


#### Cost of loops [51] 

 * loop 51:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(3)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of phase [51]:eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I) -> [eval_linit_bb65_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_2',B',C',D',E',F',G',H',I')] 
1*s(4)+0
#### Cost of chains of eval_linit_bb65_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_2,B,C,D,E,F,G,H,I):
* Chain [[51]]...: 1*s(4)+0
  with precondition: [V_i_2>=1] 

* Chain [[51],56]: 2*aux(3)+0
  with precondition: [B=6,V_i_2>=1] 

* Chain [[51],55]: 2*aux(4)+0
  with precondition: [B=9,V_i_2>=1] 

* Chain [[51],54]: 1*s(4)+0
  with precondition: [B=10,H=I,V_i_2>=1] 

* Chain [[51],53]...: 2*aux(5)+0
  with precondition: [V_i_2>=1] 

* Chain [[51],52]...: 2*s(4)+1
  with precondition: [B=9,V_i_2>=1] 

* Chain [56]: 1*aux(3)+0
  with precondition: [B=6,V_i_2>=1] 

* Chain [55]: 1*aux(4)+0
  with precondition: [B=9,V_i_2>=1] 

* Chain [54]: 0
  with precondition: [B=10,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,V__numpflags=H,V__numpflags=I,0>=V_i_2] 

* Chain [53]...: 1*aux(5)+0
  with precondition: [V_i_2>=1] 

* Chain [52]...: 1*s(9)+1
  with precondition: [B=9,V_i_2>=1] 


#### Cost of loops [57] 

 * loop 57:eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb86_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [57]:eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb86_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*it(57)+0
#### Cost of phase [57]:eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb86_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*it(57)+0
#### Cost of chains of eval_linit_bb86_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I):
* Chain [[57]]...: 1*it(57)+0
  with precondition: [V_i_4>=1,B=2] 

* Chain [[57],58]: 1*it(57)+0
  with precondition: [B=2,V__inited=C,V__cbench_print=D,V__hashsize=E,V__nodictflag=F,V__numsflags=G,V__numpflags=H,V_i_4=I,V_i_4>=1] 

* Chain [58]: 0
  with precondition: [B=2,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,H=V__numpflags,V_i_4=I,V_i_4>=1] 


#### Cost of loops [59] 

 * loop 59:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(21)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of phase [59]:eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I) -> [eval_linit_bb83_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_4',B',C',D',E',F',G',H',I')] 
1*s(22)+0
#### Cost of chains of eval_linit_bb83_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_4,B,C,D,E,F,G,H,I):
* Chain [[59]]...: 1*s(22)+0
  with precondition: [V_i_4>=1] 

* Chain [[59],65]: 2*aux(12)+0
  with precondition: [B=5,V_i_4>=1] 

* Chain [[59],64]: 2*aux(13)+0
  with precondition: [B=6,V_i_4>=1] 

* Chain [[59],63]: 1*s(22)+0
  with precondition: [B=7,V_i_4>=1] 

* Chain [[59],62]: 1*s(22)+0
  with precondition: [B=8,V_i_4>=1] 

* Chain [[59],61]...: 2*aux(14)+0
  with precondition: [V_i_4>=1] 

* Chain [[59],60]...: 2*s(22)+1
  with precondition: [B=6,V_i_4>=1] 

* Chain [65]: 1*aux(12)+0
  with precondition: [B=5,V_i_4>=1] 

* Chain [64]: 1*aux(13)+0
  with precondition: [B=6,V_i_4>=1] 

* Chain [63]: 0
  with precondition: [B=7,0>=V_i_4] 

* Chain [62]: 0
  with precondition: [B=8,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,H=V__numpflags,0>=V_i_4] 

* Chain [61]...: 1*aux(14)+0
  with precondition: [V_i_4>=1] 

* Chain [60]...: 1*s(27)+1
  with precondition: [B=6,V_i_4>=1] 


#### Cost of loops [66] 

 * loop 66:eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) -> [eval_linit_bb108_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [66]:eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) -> [eval_linit_bb108_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B',C',D',E',F',G',H',I')] 
1*it(66)+0
#### Cost of phase [66]:eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I) -> [eval_linit_bb108_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B',C',D',E',F',G',H',I')] 
1*it(66)+0
#### Cost of chains of eval_linit_bb108_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B,C,D,E,F,G,H,I):
* Chain [[66]]...: 1*it(66)+0
  with precondition: [B=4] 

* Chain [[66],67]: 1*it(66)+0
  with precondition: [B=4,V__inited=C,V__cbench_print=D,V__hashsize=E,V__nodictflag=F,V__numsflags=G,V__numpflags=H,V_i_6+1=I] 

* Chain [67]: 0
  with precondition: [B=4,C=V__inited,D=V__cbench_print,E=V__hashsize,F=V__nodictflag,G=V__numsflags,H=V__numpflags,I=V_i_6+1] 


#### Cost of loops [69] 

 * loop 69:eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) -> [eval_linit_bb106_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B')] 
1*s(39)+2
#### Cost of phase [69]:eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) -> [eval_linit_bb106_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B')] 
3*it(69)+0
#### Cost of phase [69]:eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) -> [eval_linit_bb106_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B')] 
3*it(69)+0
#### Cost of phase [69]:eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B) -> [eval_linit_bb106_in(V__inited',V__cbench_print',V__hashsize',V__nodictflag',V__numsflags',V__numpflags',V_i_6',B')] 
3*it(69)+0
#### Cost of chains of eval_linit_bb106_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_i_6,B):
* Chain [[69]]...: 3*it(69)+0
  with precondition: [B=7] 

* Chain [[69],70]: 3*it(69)+0
  with precondition: [B=7,V_i_6>=0] 

* Chain [[69],68]...: 4*it(69)+2
  with precondition: [B=7,V_i_6>=0] 

* Chain [70]: 0
  with precondition: [B=7,V_i_6>=0] 

* Chain [68]...: 1*s(41)+2
  with precondition: [B=7,V_i_6>=0] 


#### Cost of chains of eval_linit_324(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [72]: 1*aux(22)+0
  with precondition: [] 

* Chain [71]...: 1*aux(23)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_linit_bb83_in(I,A,B,C,D,E,F,G,H):
* Chain [77]...: 1*s(48)+0
  with precondition: [I=8] 

* Chain [76]: 0
  with precondition: [I=5] 

* Chain [75]: 0
  with precondition: [I=6] 

* Chain [74]: 0
  with precondition: [I=7] 

* Chain [73]: 1*s(49)+0
  with precondition: [I=8] 


#### Cost of chains of loop_cont_eval_linit_bb65_in(I,A,B,C,D,E,F,G,H):
* Chain [83]...: 1*s(50)+1
  with precondition: [I=10,0>=G] 

* Chain [82]...: 1*aux(24)+0
  with precondition: [I=10,G>=1] 

* Chain [81]: 0
  with precondition: [I=6] 

* Chain [80]: 0
  with precondition: [I=9] 

* Chain [79]: 1*aux(25)+0
  with precondition: [I=10,0>=G] 

* Chain [78]: 1*aux(26)+0
  with precondition: [I=10,G>=1] 


#### Cost of chains of loop_cont_eval_linit_bb56_in(R,A,B,C,D,E,F,G,H):
* Chain [89]: 1*s(61)+1
  with precondition: [R=11,0>=F,0>=G] 

* Chain [88]: 1*s(62)+1
  with precondition: [R=11,0>=G,F>=1] 

* Chain [87]: 1*aux(27)+0
  with precondition: [R=11,G>=1] 

* Chain [86]...: 1*s(69)+2
  with precondition: [R=11,0>=F,0>=G] 

* Chain [85]...: 1*s(70)+1
  with precondition: [R=11,0>=G,F>=1] 

* Chain [84]...: 1*aux(28)+0
  with precondition: [R=11,G>=1] 


#### Cost of chains of eval_linit_bb55_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [97]: 1*s(77)+2
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [96]: 1*s(78)+1
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [95]: 1*s(79)+2
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [94]: 3*s(80)+3*s(81)+2
  Such that:aux(29) =< V__numsflags+V__numpflags
s(80) =< aux(29)

  with precondition: [V__numpflags+V__numsflags>=1] 

* Chain [93]...: 1*s(86)+3
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [92]...: 1*s(87)+1
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [91]...: 1*s(88)+2
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [90]...: 3*s(89)+3*s(90)+3
  Such that:aux(30) =< V__numsflags+V__numpflags
s(89) =< aux(30)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_176(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [107]: 1*aux(31)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [106]: 1*aux(32)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [105]: 1*aux(33)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [104]: 6*s(102)+6*s(103)+3
  Such that:aux(34) =< V__numsflags+V__numpflags
s(102) =< aux(34)

  with precondition: [V__numpflags+V__numsflags>=1] 

* Chain [103]: 4*s(107)+9*s(108)+3
  Such that:aux(35) =< V__hashsize
s(107) =< aux(35)

  with precondition: [V__hashsize>=1] 

* Chain [102]...: 1*aux(36)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [101]...: 1*aux(37)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [100]...: 1*aux(38)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [99]...: 6*s(124)+6*s(125)+4
  Such that:aux(39) =< V__numsflags+V__numpflags
s(124) =< aux(39)

  with precondition: [V__numpflags+V__numsflags>=1] 

* Chain [98]...: 4*s(129)+9*s(130)+4
  Such that:aux(40) =< V__hashsize
s(129) =< aux(40)

  with precondition: [V__hashsize>=1] 


#### Cost of chains of eval_linit_164(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):
* Chain [113]: 18*s(139)+4*s(141)+6*s(146)+3
  Such that:s(140) =< V__hashsize
s(145) =< V__numsflags+V__numpflags
s(141) =< s(140)
s(146) =< s(145)

  with precondition: [] 

* Chain [112]...: 1*s(148)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [111]...: 4*s(150)+9*s(151)+4
  Such that:s(149) =< V__hashsize
s(150) =< s(149)

  with precondition: [V__hashsize>=1] 

* Chain [110]...: 1*s(152)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [109]...: 1*s(153)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [108]...: 6*s(155)+6*s(156)+4
  Such that:s(154) =< V__numsflags+V__numpflags
s(155) =< s(154)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_123(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):
* Chain [119]: 4*s(159)+6*s(160)+18*s(161)+3
  Such that:s(157) =< V__hashsize
s(158) =< V__numsflags+V__numpflags
s(159) =< s(157)
s(160) =< s(158)

  with precondition: [] 

* Chain [118]...: 1*s(162)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [117]...: 4*s(164)+9*s(165)+4
  Such that:s(163) =< V__hashsize
s(164) =< s(163)

  with precondition: [V__hashsize>=1] 

* Chain [116]...: 1*s(166)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [115]...: 1*s(167)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [114]...: 6*s(169)+6*s(170)+4
  Such that:s(168) =< V__numsflags+V__numpflags
s(169) =< s(168)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_bb40_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [120]: 0
  with precondition: [] 


#### Cost of chains of eval_linit_149(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,V_196,B):
* Chain [126]: 4*s(173)+6*s(174)+18*s(175)+3
  Such that:s(171) =< V__hashsize
s(172) =< V__numsflags+V__numpflags
s(173) =< s(171)
s(174) =< s(172)

  with precondition: [] 

* Chain [125]...: 1*s(176)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [124]...: 4*s(178)+9*s(179)+4
  Such that:s(177) =< V__hashsize
s(178) =< s(177)

  with precondition: [V__hashsize>=1] 

* Chain [123]...: 1*s(180)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [122]...: 1*s(181)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [121]...: 6*s(183)+6*s(184)+4
  Such that:s(182) =< V__numsflags+V__numpflags
s(183) =< s(182)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_143(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_186,B):
* Chain [132]: 4*s(187)+6*s(188)+18*s(189)+3
  Such that:s(185) =< V__hashsize
s(186) =< V__numsflags+V__numpflags
s(187) =< s(185)
s(188) =< s(186)

  with precondition: [] 

* Chain [131]...: 1*s(190)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [130]...: 4*s(192)+9*s(193)+4
  Such that:s(191) =< V__hashsize
s(192) =< s(191)

  with precondition: [V__hashsize>=1] 

* Chain [129]...: 1*s(194)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [128]...: 1*s(195)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [127]...: 6*s(197)+6*s(198)+4
  Such that:s(196) =< V__numsflags+V__numpflags
s(197) =< s(196)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_109(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):
* Chain [138]: 8*s(201)+12*s(202)+36*s(203)+3
  Such that:aux(41) =< V__hashsize
aux(42) =< V__numsflags+V__numpflags
s(201) =< aux(41)
s(202) =< aux(42)

  with precondition: [] 

* Chain [137]...: 1*aux(43)+0
  with precondition: [0>=V__numsflags,0>=V__numpflags] 

* Chain [136]...: 8*s(212)+18*s(213)+4
  Such that:aux(44) =< V__hashsize
s(212) =< aux(44)

  with precondition: [V__hashsize>=1] 

* Chain [135]...: 1*aux(45)+0
  with precondition: [V__numsflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [134]...: 1*aux(46)+0
  with precondition: [V__numpflags>=1,0>=V__numpflags+V__numsflags] 

* Chain [133]...: 12*s(222)+12*s(223)+4
  Such that:aux(47) =< V__numsflags+V__numpflags
s(222) =< aux(47)

  with precondition: [V__numpflags+V__numsflags>=1] 


#### Cost of chains of eval_linit_71(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):
* Chain [140]: 1*aux(48)+0
  with precondition: [V__hashsize=1] 

* Chain [139]...: 1*aux(49)+0
  with precondition: [V__hashsize=1] 


#### Cost of chains of eval_linit_bb22_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [141]: 0
  with precondition: [] 


#### Cost of chains of eval_linit_9(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,V_12,B):
* Chain [143]: 1*aux(50)+0
  with precondition: [] 

* Chain [142]...: 1*aux(51)+0
  with precondition: [] 


#### Cost of chains of eval_linit_3(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,V_3,B):
* Chain [145]: 1*aux(52)+0
  with precondition: [] 

* Chain [144]...: 1*s(258)+0
  with precondition: [] 


#### Cost of chains of eval_linit_bb0_in(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [147]: 1*aux(53)+0
  with precondition: [] 

* Chain [146]...: 1*s(260)+0
  with precondition: [] 


#### Cost of chains of eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B):
* Chain [149]: 1*s(261)+0
  with precondition: [] 

* Chain [148]...: 1*s(262)+0
  with precondition: [] 


Closed-form bounds of eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B): 
-------------------------------------
* Chain [149] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [148]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_linit_start(V__inited,V__cbench_print,V__hashsize,V__nodictflag,V__numsflags,V__numpflags,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 947 ms.
* Invariants computed in 375 ms.
   - Backward Invariants 212 ms.
   - Transitive Invariants 70 ms.
* Refinement performed in 1135 ms.
* Termination proved in 51 ms.
* Upper bounds computed in 290 ms.
   - Equation cost structures 195 ms.
   - Phase cost structures 32 ms.
   - Chain cost structures 62 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 3491 ms.

