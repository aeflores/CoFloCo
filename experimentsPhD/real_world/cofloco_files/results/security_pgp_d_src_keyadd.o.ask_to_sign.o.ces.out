Warning: Ignored call to eval_ask_to_sign_stop/1 in equation eval_ask_to_sign_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_ask_to_sign_bb22_in/1]
1. non_recursive  : [eval_ask_to_sign_14/1]
2. non_recursive  : [eval_ask_to_sign_13/2]
3. non_recursive  : [eval_ask_to_sign_19/1]
4. non_recursive  : [eval_ask_to_sign_18/2]
5. recursive  : [eval_ask_to_sign_20/3,eval_ask_to_sign_21/4,eval_ask_to_sign_24/5,eval_ask_to_sign_25/5,eval_ask_to_sign_bb8_in/3]
6. non_recursive  : [eval_ask_to_sign_33/1]
7. non_recursive  : [eval_ask_to_sign_32/2]
8. non_recursive  : [eval_ask_to_sign_37/1]
9. non_recursive  : [eval_ask_to_sign_36/2]
10. non_recursive  : [eval_ask_to_sign_43/1]
11. non_recursive  : [eval_ask_to_sign_42/2]
12. non_recursive  : [eval_ask_to_sign_51/1]
13. non_recursive  : [eval_ask_to_sign_50/2]
14. non_recursive  : [eval_ask_to_sign_64/1]
15. non_recursive  : [eval_ask_to_sign_63/2]
16. non_recursive  : [eval_ask_to_sign_62/2]
17. non_recursive  : [eval_ask_to_sign_61/2]
18. non_recursive  : [eval_ask_to_sign_60/2]
19. non_recursive  : [eval_ask_to_sign_59/2]
20. non_recursive  : [eval_ask_to_sign_58/2]
21. non_recursive  : [eval_ask_to_sign_57/2]
22. non_recursive  : [eval_ask_to_sign_56/2]
23. non_recursive  : [eval_ask_to_sign_55/2]
24. non_recursive  : [eval_ask_to_sign_54/3]
25. non_recursive  : [eval_ask_to_sign_bb19_in/2]
26. non_recursive  : [eval_ask_to_sign_49/2]
27. non_recursive  : [eval_ask_to_sign_48/2]
28. non_recursive  : [eval_ask_to_sign_47/2]
29. non_recursive  : [eval_ask_to_sign_46/2]
30. non_recursive  : [eval_ask_to_sign_35/2]
31. non_recursive  : [eval_ask_to_sign_34/2]
32. non_recursive  : [eval_ask_to_sign__critedge_in/2]
33. non_recursive  : [loop_cont_eval_ask_to_sign_bb8_in/3]
34. non_recursive  : [eval_ask_to_sign_11/2]
35. non_recursive  : [eval_ask_to_sign_10/2]
36. non_recursive  : [eval_ask_to_sign_9/1]
37. non_recursive  : [eval_ask_to_sign_8/2]
38. non_recursive  : [eval_ask_to_sign_7/2]
39. non_recursive  : [eval_ask_to_sign_6/2]
40. non_recursive  : [eval_ask_to_sign_5/3]
41. non_recursive  : [eval_ask_to_sign_3/2]
42. non_recursive  : [eval_ask_to_sign_2/2]
43. non_recursive  : [eval_ask_to_sign_1/2]
44. non_recursive  : [eval_ask_to_sign_0/2]
45. non_recursive  : [eval_ask_to_sign_bb0_in/2]
46. non_recursive  : [eval_ask_to_sign_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_ask_to_sign_bb8_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_ask_to_sign_62/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_ask_to_sign_60/2
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_ask_to_sign_49/2
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_ask_to_sign_35/2
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_ask_to_sign__critedge_in/2
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_ask_to_sign_11/2
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_ask_to_sign_7/2
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is partially evaluated into eval_ask_to_sign_3/2
42. SCC is completely evaluated into other SCCs
43. SCC is partially evaluated into eval_ask_to_sign_1/2
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_ask_to_sign_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ask_to_sign_bb8_in/3 
* CE 12 is refined into CE [23] 
* CE 11 is refined into CE [24] 


#### Refined cost equations eval_ask_to_sign_bb8_in/3 
* CE 23: eval_ask_to_sign_bb8_in(V__ask_first,B,C) = 1+ eval_ask_to_sign_bb8_in(V__ask_first,D,C)
     [D=2,B=2] 
* CE 24: eval_ask_to_sign_bb8_in(A,B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_ask_to_sign_bb8_in/3 
* CEs [24] --> Loop 13 
* CEs [23] --> Loop 14 

#### Loops of eval_ask_to_sign_bb8_in/3 
* Loop 13: eval_ask_to_sign_bb8_in(A,B,A) [B=2] 
* Loop 14: eval_ask_to_sign_bb8_in(V__ask_first,B,C)->  eval_ask_to_sign_bb8_in(V__ask_first,B',C)
                  [B'=2,B=2] 

### Ranking functions of CR eval_ask_to_sign_bb8_in(V__ask_first,B,C) 

#### Partial ranking functions of CR eval_ask_to_sign_bb8_in(V__ask_first,B,C) 


### Resulting Chains:eval_ask_to_sign_bb8_in(V__ask_first,B,C) 
* [[14]]...
* [[14],13]
* [13]


### Merging Chains  eval_ask_to_sign_bb8_in/3 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[[14]]] --> 2 


### Specialization of cost equations eval_ask_to_sign_62/2 
* CE 22 is refined into CE [25] 


#### Refined cost equations eval_ask_to_sign_62/2 
* CE 25: eval_ask_to_sign_62(V__ask_first,B) = 0
     [V__ask_first=0] 

### Cost equations --> "Loop" of eval_ask_to_sign_62/2 
* CEs [25] --> Loop 15 

#### Loops of eval_ask_to_sign_62/2 
* Loop 15: eval_ask_to_sign_62(V__ask_first,B) [V__ask_first=0] 

### Ranking functions of CR eval_ask_to_sign_62(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_62(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_62(V__ask_first,B) 
* [15]


### Merging Chains  eval_ask_to_sign_62/2 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_ask_to_sign_60/2 
* CE 20 is refined into CE [26] 
* CE 21 is refined into CE [27] 


#### Refined cost equations eval_ask_to_sign_60/2 
* CE 26: eval_ask_to_sign_60(V__ask_first,B) = 0+ eval_ask_to_sign_62(C,B):1
     [C=0,V__ask_first=0] 
* CE 27: eval_ask_to_sign_60(V__ask_first,B) = 0
     [V__ask_first=0] 

### Cost equations --> "Loop" of eval_ask_to_sign_60/2 
* CEs [26,27] --> Loop 16 

#### Loops of eval_ask_to_sign_60/2 
* Loop 16: eval_ask_to_sign_60(V__ask_first,B) [V__ask_first=0] 

### Ranking functions of CR eval_ask_to_sign_60(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_60(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_60(V__ask_first,B) 
* [16]


### Merging Chains  eval_ask_to_sign_60/2 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_ask_to_sign_49/2 
* CE 18 is refined into CE [28] 
* CE 19 is refined into CE [29] 


#### Refined cost equations eval_ask_to_sign_49/2 
* CE 28: eval_ask_to_sign_49(V__ask_first,B) = 0+ eval_ask_to_sign_60(C,B):1
     [C=0] 
* CE 29: eval_ask_to_sign_49(V__ask_first,B) = 0
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign_49/2 
* CEs [28,29] --> Loop 17 

#### Loops of eval_ask_to_sign_49/2 
* Loop 17: eval_ask_to_sign_49(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_49(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_49(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_49(V__ask_first,B) 
* [17]


### Merging Chains  eval_ask_to_sign_49/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_ask_to_sign_35/2 
* CE 15 is refined into CE [30] 
* CE 16 is refined into CE [31] 
* CE 17 is refined into CE [32] 


#### Refined cost equations eval_ask_to_sign_35/2 
* CE 30: eval_ask_to_sign_35(V__ask_first,B) = 0
     [] 
* CE 31: eval_ask_to_sign_35(V__ask_first,B) = 0+ eval_ask_to_sign_49(V__ask_first,B):1
     [] 
* CE 32: eval_ask_to_sign_35(V__ask_first,B) = 0+ eval_ask_to_sign_60(C,B):1
     [C=0] 

### Cost equations --> "Loop" of eval_ask_to_sign_35/2 
* CEs [30,31,32] --> Loop 18 

#### Loops of eval_ask_to_sign_35/2 
* Loop 18: eval_ask_to_sign_35(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_35(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_35(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_35(V__ask_first,B) 
* [18]


### Merging Chains  eval_ask_to_sign_35/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_ask_to_sign__critedge_in/2 
* CE 13 is refined into CE [33] 
* CE 14 is refined into CE [34] 


#### Refined cost equations eval_ask_to_sign__critedge_in/2 
* CE 33: eval_ask_to_sign__critedge_in(V__ask_first,B) = 0
     [] 
* CE 34: eval_ask_to_sign__critedge_in(V__ask_first,B) = 0+ eval_ask_to_sign_35(V__ask_first,B):1
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign__critedge_in/2 
* CEs [33,34] --> Loop 19 

#### Loops of eval_ask_to_sign__critedge_in/2 
* Loop 19: eval_ask_to_sign__critedge_in(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign__critedge_in(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign__critedge_in(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign__critedge_in(V__ask_first,B) 
* [19]


### Merging Chains  eval_ask_to_sign__critedge_in/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_ask_to_sign_11/2 
* CE 9 is refined into CE [35] 
* CE 10 is refined into CE [36,37] 


#### Refined cost equations eval_ask_to_sign_11/2 
* CE 35: eval_ask_to_sign_11(V__ask_first,B) = 0
     [] 
* CE 36: eval_ask_to_sign_11(V__ask_first,B) = 1+ eval_ask_to_sign_bb8_in(V__ask_first,C,V__ask_first):1+ eval_ask_to_sign__critedge_in(V__ask_first,B):1
     [C=2] 
* CE 37: eval_ask_to_sign_11(V__ask_first,B) = 1+ eval_ask_to_sign_bb8_in(V__ask_first,C,D):2
     [C=2] 

### Cost equations --> "Loop" of eval_ask_to_sign_11/2 
* CEs [37] --> Loop 20 
* CEs [35,36] --> Loop 21 

#### Loops of eval_ask_to_sign_11/2 
* Loop 20: eval_ask_to_sign_11(V__ask_first,B) [] 
* Loop 21: eval_ask_to_sign_11(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_11(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_11(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_11(V__ask_first,B) 
* [21]
* [20]...


### Merging Chains  eval_ask_to_sign_11/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_ask_to_sign_7/2 
* CE 7 is refined into CE [38] 
* CE 8 is refined into CE [39,40] 


#### Refined cost equations eval_ask_to_sign_7/2 
* CE 38: eval_ask_to_sign_7(V__ask_first,B) = 0
     [] 
* CE 39: eval_ask_to_sign_7(V__ask_first,B) = 0+ eval_ask_to_sign_11(V__ask_first,B):1
     [] 
* CE 40: eval_ask_to_sign_7(V__ask_first,B) = 0+ eval_ask_to_sign_11(V__ask_first,B):2
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign_7/2 
* CEs [40] --> Loop 22 
* CEs [38,39] --> Loop 23 

#### Loops of eval_ask_to_sign_7/2 
* Loop 22: eval_ask_to_sign_7(V__ask_first,B) [] 
* Loop 23: eval_ask_to_sign_7(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_7(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_7(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_7(V__ask_first,B) 
* [23]
* [22]...


### Merging Chains  eval_ask_to_sign_7/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_ask_to_sign_3/2 
* CE 5 is refined into CE [41] 
* CE 6 is refined into CE [42,43] 


#### Refined cost equations eval_ask_to_sign_3/2 
* CE 41: eval_ask_to_sign_3(V__ask_first,B) = 0
     [] 
* CE 42: eval_ask_to_sign_3(V__ask_first,B) = 0+ eval_ask_to_sign_7(V__ask_first,B):1
     [] 
* CE 43: eval_ask_to_sign_3(V__ask_first,B) = 0+ eval_ask_to_sign_7(V__ask_first,B):2
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign_3/2 
* CEs [43] --> Loop 24 
* CEs [41,42] --> Loop 25 

#### Loops of eval_ask_to_sign_3/2 
* Loop 24: eval_ask_to_sign_3(V__ask_first,B) [] 
* Loop 25: eval_ask_to_sign_3(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_3(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_3(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_3(V__ask_first,B) 
* [25]
* [24]...


### Merging Chains  eval_ask_to_sign_3/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_ask_to_sign_1/2 
* CE 3 is refined into CE [44] 
* CE 4 is refined into CE [45,46] 


#### Refined cost equations eval_ask_to_sign_1/2 
* CE 44: eval_ask_to_sign_1(V__ask_first,B) = 0
     [] 
* CE 45: eval_ask_to_sign_1(V__ask_first,B) = 0+ eval_ask_to_sign_3(V__ask_first,B):1
     [] 
* CE 46: eval_ask_to_sign_1(V__ask_first,B) = 0+ eval_ask_to_sign_3(V__ask_first,B):2
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign_1/2 
* CEs [46] --> Loop 26 
* CEs [44,45] --> Loop 27 

#### Loops of eval_ask_to_sign_1/2 
* Loop 26: eval_ask_to_sign_1(V__ask_first,B) [] 
* Loop 27: eval_ask_to_sign_1(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_1(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_1(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_1(V__ask_first,B) 
* [27]
* [26]...


### Merging Chains  eval_ask_to_sign_1/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_ask_to_sign_start/2 
* CE 2 is refined into CE [47,48] 


#### Refined cost equations eval_ask_to_sign_start/2 
* CE 47: eval_ask_to_sign_start(V__ask_first,B) = 0+ eval_ask_to_sign_1(V__ask_first,B):1
     [] 
* CE 48: eval_ask_to_sign_start(V__ask_first,B) = 0+ eval_ask_to_sign_1(V__ask_first,B):2
     [] 

### Cost equations --> "Loop" of eval_ask_to_sign_start/2 
* CEs [48] --> Loop 28 
* CEs [47] --> Loop 29 

#### Loops of eval_ask_to_sign_start/2 
* Loop 28: eval_ask_to_sign_start(V__ask_first,B) [] 
* Loop 29: eval_ask_to_sign_start(V__ask_first,B) [] 

### Ranking functions of CR eval_ask_to_sign_start(V__ask_first,B) 

#### Partial ranking functions of CR eval_ask_to_sign_start(V__ask_first,B) 


### Resulting Chains:eval_ask_to_sign_start(V__ask_first,B) 
* [29]
* [28]...


### Merging Chains  eval_ask_to_sign_start/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_ask_to_sign_bb8_in(V__ask_first,B,C) -> [eval_ask_to_sign_bb8_in(V__ask_first',B',C')] 
1
#### Cost of phase [14]:eval_ask_to_sign_bb8_in(V__ask_first,B,C) -> [eval_ask_to_sign_bb8_in(V__ask_first',B',C')] 
1*it(14)+0
#### Cost of phase [14]:eval_ask_to_sign_bb8_in(V__ask_first,B,C) -> [eval_ask_to_sign_bb8_in(V__ask_first',B',C')] 
1*it(14)+0
#### Cost of chains of eval_ask_to_sign_bb8_in(V__ask_first,B,C):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],13]: 1*it(14)+0
  with precondition: [B=2,V__ask_first=C] 

* Chain [13]: 0
  with precondition: [B=2,C=V__ask_first] 


#### Cost of chains of eval_ask_to_sign_62(V__ask_first,B):
* Chain [15]: 0
  with precondition: [V__ask_first=0] 


#### Cost of chains of eval_ask_to_sign_60(V__ask_first,B):
* Chain [16]: 0
  with precondition: [V__ask_first=0] 


#### Cost of chains of eval_ask_to_sign_49(V__ask_first,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_35(V__ask_first,B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign__critedge_in(V__ask_first,B):
* Chain [19]: 0
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_11(V__ask_first,B):
* Chain [21]: 1*aux(2)+0
  with precondition: [] 

* Chain [20]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_7(V__ask_first,B):
* Chain [23]: 1*aux(3)+0
  with precondition: [] 

* Chain [22]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_3(V__ask_first,B):
* Chain [25]: 1*aux(4)+0
  with precondition: [] 

* Chain [24]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_1(V__ask_first,B):
* Chain [27]: 1*aux(5)+0
  with precondition: [] 

* Chain [26]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_ask_to_sign_start(V__ask_first,B):
* Chain [29]: 1*s(10)+0
  with precondition: [] 

* Chain [28]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_ask_to_sign_start(V__ask_first,B): 
-------------------------------------
* Chain [29] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ask_to_sign_start(V__ask_first,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 13 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 82 ms.

