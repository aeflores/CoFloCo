Warning: Ignored call to eval_wrongletter_stop/1 in equation eval_wrongletter_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_wrongletter_27/8,eval_wrongletter_28/8,eval_wrongletter_29/8,eval_wrongletter_30/8,eval_wrongletter_bb3_in/8,eval_wrongletter_bb7_in/8,eval_wrongletter_bb9_in/8]
1. recursive  : [eval_wrongletter_bb1_in/4,loop_cont_eval_wrongletter_bb3_in/5]
2. non_recursive  : [eval_wrongletter_bb11_in/1]
3. non_recursive  : [loop_cont_eval_wrongletter_bb1_in/2]
4. non_recursive  : [eval_wrongletter_4/3]
5. non_recursive  : [eval_wrongletter_3/3]
6. non_recursive  : [eval_wrongletter_2/3]
7. non_recursive  : [eval_wrongletter_1/3]
8. non_recursive  : [eval_wrongletter_0/2]
9. non_recursive  : [eval_wrongletter_bb0_in/2]
10. non_recursive  : [eval_wrongletter_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_wrongletter_bb3_in/8
1. SCC is partially evaluated into eval_wrongletter_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_wrongletter_4/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_wrongletter_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_wrongletter_bb3_in/8 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_wrongletter_bb3_in/8 
* CE 10: eval_wrongletter_bb3_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+1,D>=A,D>=0,C+1=F,E=3] 
* CE 11: eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) = 0
     [V__Trynum>=V_j_0+1,V_1>=V_i_0+1,V_j_0>=0,B=2] 
* CE 12: eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) = 1+ eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,F,B,C,D,E)
     [V__Trynum>=V_j_0+1,V_1>=V_i_0+1,B>=2,V_j_0>=0,3>=B,V_j_0+1=F] 

### Cost equations --> "Loop" of eval_wrongletter_bb3_in/8 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_wrongletter_bb3_in/8 
* Loop 9: eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E)->  eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0',B,C,D,E)
                  [V__Trynum>=V_j_0+1,V_1>=V_i_0+1,B>=2,V_j_0>=0,3>=B,V_j_0+1=V_j_0'] 
* Loop 10: eval_wrongletter_bb3_in(A,B,C,D,E,A,B,F) [B>=C+1,D>=A,D>=0,C+1=F,E=3] 
* Loop 11: eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) [V__Trynum>=V_j_0+1,V_1>=V_i_0+1,V_j_0>=0,B=2] 

### Ranking functions of CR eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [9]: [V__Trynum-V_j_0]

#### Partial ranking functions of CR eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__Trynum-V_j_0


### Resulting Chains:eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  eval_wrongletter_bb3_in/8 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10]] --> 2 
* [[10,[9]]] --> 3 


### Specialization of cost equations eval_wrongletter_bb1_in/4 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 


#### Refined cost equations eval_wrongletter_bb1_in/4 
* CE 13: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) = 1+ eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,C,D,E,F,G):1
     [V_1>=V_i_0+1,V__Trynum>=1,D=2,C=0,B=2] 
* CE 14: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) = 0
     [V_i_0>=V_1,B=2] 
* CE 15: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) = 2+ eval_wrongletter_bb3_in(V__Trynum,V_1,C,D,E,V__Trynum,V_1,F):2+ eval_wrongletter_bb1_in(V__Trynum,V_1,F,G)
     [V_1>=F,0>=V__Trynum,F=C+1,F=V_i_0+1,G=2,E=3,D=0,B=2] 
* CE 16: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) = 2+ eval_wrongletter_bb3_in(V__Trynum,V_1,C,D,E,V__Trynum,V_1,F):3+ eval_wrongletter_bb1_in(V__Trynum,V_1,F,G)
     [V_1>=F,V__Trynum>=1,F=C+1,F=V_i_0+1,G=2,E=3,D=0,B=2] 

### Cost equations --> "Loop" of eval_wrongletter_bb1_in/4 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [13] --> Loop 15 

#### Loops of eval_wrongletter_bb1_in/4 
* Loop 12: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B)->  eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0',B')
                  [V_1>=V_i_0+1,V__Trynum>=1,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 13: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B)->  eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0',B')
                  [V_1>=V_i_0+1,0>=V__Trynum,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 14: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) [V_i_0>=V_1,B=2] 
* Loop 15: eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) [V_1>=V_i_0+1,V__Trynum>=1,B=2] 

### Ranking functions of CR eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) 
* RF of phase [12]: [V_1-V_i_0]
* RF of phase [13]: [V_1-V_i_0]

#### Partial ranking functions of CR eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_1-V_i_0
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_1-V_i_0


### Resulting Chains:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) 
* [[13],14]
* [[12],15]
* [[12],14]
* [15]
* [14]


### Merging Chains  eval_wrongletter_bb1_in/4 into  External patterns of execution 
* [[14,[13]]] --> 1 
* [[15],[14,[12]],[15,[12]]] --> 2 
* [[14]] --> 3 


### Specialization of cost equations eval_wrongletter_4/3 
* CE 3 is refined into CE [17,18,19] 


#### Refined cost equations eval_wrongletter_4/3 
* CE 17: eval_wrongletter_4(V__Trynum,V_1,B) = 1+ eval_wrongletter_bb1_in(V__Trynum,V_1,C,D):1
     [V_1>=1,0>=V__Trynum,D=2,C=0] 
* CE 18: eval_wrongletter_4(V__Trynum,V_1,B) = 1+ eval_wrongletter_bb1_in(V__Trynum,V_1,C,D):2
     [V_1>=1,V__Trynum>=1,D=2,C=0] 
* CE 19: eval_wrongletter_4(V__Trynum,V_1,B) = 1+ eval_wrongletter_bb1_in(V__Trynum,V_1,C,D):3
     [0>=V_1,D=2,C=0] 

### Cost equations --> "Loop" of eval_wrongletter_4/3 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [17] --> Loop 18 

#### Loops of eval_wrongletter_4/3 
* Loop 16: eval_wrongletter_4(V__Trynum,V_1,B) [V_1>=1,V__Trynum>=1] 
* Loop 17: eval_wrongletter_4(V__Trynum,V_1,B) [0>=V_1] 
* Loop 18: eval_wrongletter_4(V__Trynum,V_1,B) [V_1>=1,0>=V__Trynum] 

### Ranking functions of CR eval_wrongletter_4(V__Trynum,V_1,B) 

#### Partial ranking functions of CR eval_wrongletter_4(V__Trynum,V_1,B) 


### Resulting Chains:eval_wrongletter_4(V__Trynum,V_1,B) 
* [18]
* [17]
* [16]


### Merging Chains  eval_wrongletter_4/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 


### Specialization of cost equations eval_wrongletter_start/2 
* CE 2 is refined into CE [20,21,22] 


#### Refined cost equations eval_wrongletter_start/2 
* CE 20: eval_wrongletter_start(V__Trynum,B) = 0+ eval_wrongletter_4(V__Trynum,C,B):1
     [C>=1,0>=V__Trynum] 
* CE 21: eval_wrongletter_start(V__Trynum,B) = 0+ eval_wrongletter_4(V__Trynum,C,B):2
     [0>=C] 
* CE 22: eval_wrongletter_start(V__Trynum,B) = 0+ eval_wrongletter_4(V__Trynum,C,B):3
     [C>=1,V__Trynum>=1] 

### Cost equations --> "Loop" of eval_wrongletter_start/2 
* CEs [20,21,22] --> Loop 19 

#### Loops of eval_wrongletter_start/2 
* Loop 19: eval_wrongletter_start(V__Trynum,B) [] 

### Ranking functions of CR eval_wrongletter_start(V__Trynum,B) 

#### Partial ranking functions of CR eval_wrongletter_start(V__Trynum,B) 


### Resulting Chains:eval_wrongletter_start(V__Trynum,B) 
* [19]


### Merging Chains  eval_wrongletter_start/2 into  External patterns of execution 
* [[19]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) -> [eval_wrongletter_bb3_in(V__Trynum',V_1',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [9]:eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) -> [eval_wrongletter_bb3_in(V__Trynum',V_1',V_i_0',V_j_0',B',C',D',E')] 
1*it(9)+0
  Such that:it(9) =< V__Trynum-V_j_0
it(9) =< V__Trynum-V_j_0-V__Trynum'+V_j_0'

#### Cost of phase [9]:eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E) -> [eval_wrongletter_bb3_in(V__Trynum',V_1',V_i_0',V_j_0',B',C',D',E')] 
1*it(9)+0
  Such that:it(9) =< V__Trynum-V_j_0
it(9) =< V__Trynum-V_j_0-V__Trynum'+V_j_0'

#### Cost of chains of eval_wrongletter_bb3_in(V__Trynum,V_1,V_i_0,V_j_0,B,C,D,E):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V__Trynum-V_j_0

  with precondition: [B=2,V_j_0>=0,V_1>=V_i_0+1,V__Trynum>=V_j_0+2] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V__Trynum-V_j_0

  with precondition: [B=3,V__Trynum=C,V_1=D,V_i_0+1=E,V_j_0>=0,V_1>=V_i_0+1,V__Trynum>=V_j_0+1] 

* Chain [11]: 0
  with precondition: [B=2,V_j_0>=0,V_1>=V_i_0+1,V__Trynum>=V_j_0+1] 

* Chain [10]: 0
  with precondition: [B=3,V__Trynum=C,V_1=D,V_i_0+1=E,V_j_0>=0,V_j_0>=V__Trynum,V_1>=V_i_0+1] 


#### Cost of loops [13] 

 * loop 13:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) -> [eval_wrongletter_bb1_in(V__Trynum',V_1',V_i_0',B')] 
2
#### Cost of phase [13]:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) -> [eval_wrongletter_bb1_in(V__Trynum',V_1',V_i_0',B')] 
2*it(13)+0
  Such that:it(13) =< V_1-V_i_0
it(13) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of loops [12] 

 * loop 12:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) -> [eval_wrongletter_bb1_in(V__Trynum',V_1',V_i_0',B')] 
1*s(4)+2
  Such that:s(4) =< V__Trynum'

#### Cost of phase [12]:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) -> [eval_wrongletter_bb1_in(V__Trynum',V_1',V_i_0',B')] 
2*it(12)+1*s(5)+0
  Such that:aux(1) =< V__Trynum
it(12) =< V_1-V_i_0
it(12) =< V_1-V_i_0-V_1'+V_i_0'
s(5) =< it(12)*aux(1)

#### Cost of phase [12]:eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B) -> [eval_wrongletter_bb1_in(V__Trynum',V_1',V_i_0',B')] 
2*it(12)+1*s(5)+0
  Such that:aux(1) =< V__Trynum
it(12) =< V_1-V_i_0
it(12) =< V_1-V_i_0-V_1'+V_i_0'
s(5) =< it(12)*aux(1)

#### Cost of chains of eval_wrongletter_bb1_in(V__Trynum,V_1,V_i_0,B):
* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< V_1-V_i_0

  with precondition: [B=2,0>=V__Trynum,V_i_0>=0,V_1>=V_i_0+1] 

* Chain [[12],15]: 2*it(12)+1*s(2)+1*s(5)+1
  Such that:it(12) =< V_1-V_i_0
aux(2) =< V__Trynum
s(2) =< aux(2)
s(5) =< it(12)*aux(2)

  with precondition: [B=2,V__Trynum>=1,V_i_0>=0,V_1>=V_i_0+2] 

* Chain [[12],14]: 2*it(12)+1*s(5)+0
  Such that:aux(1) =< V__Trynum
it(12) =< V_1-V_i_0
s(5) =< it(12)*aux(1)

  with precondition: [B=2,V__Trynum>=1,V_i_0>=0,V_1>=V_i_0+1] 

* Chain [15]: 1*s(2)+1
  Such that:s(2) =< V__Trynum

  with precondition: [B=2,V__Trynum>=1,V_i_0>=0,V_1>=V_i_0+1] 

* Chain [14]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_1] 


#### Cost of chains of eval_wrongletter_4(V__Trynum,V_1,B):
* Chain [18]: 2*s(14)+1
  Such that:s(14) =< V_1

  with precondition: [0>=V__Trynum,V_1>=1] 

* Chain [17]: 1
  with precondition: [0>=V_1] 

* Chain [16]: 2*s(17)+4*s(18)+2*s(19)+2
  Such that:s(15) =< V__Trynum
s(16) =< V_1
s(17) =< s(15)
s(18) =< s(16)
s(19) =< s(18)*s(15)

  with precondition: [V__Trynum>=1,V_1>=1] 


#### Cost of chains of eval_wrongletter_start(V__Trynum,B):
* Chain [19]: 8*s(20)+2*s(23)+2
  Such that:s(21) =< V__Trynum
s(23) =< s(21)

  with precondition: [] 


Closed-form bounds of eval_wrongletter_start(V__Trynum,B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_wrongletter_start(V__Trynum,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 73 ms.
* Invariants computed in 101 ms.
   - Backward Invariants 53 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 127 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 146 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 55 ms.
   - Chain cost structures 57 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 562 ms.

