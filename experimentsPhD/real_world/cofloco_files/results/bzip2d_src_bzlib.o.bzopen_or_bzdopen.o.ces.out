Warning: Ignored call to eval_bzopen_or_bzdopen_stop/1 in equation eval_bzopen_or_bzdopen_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bzopen_or_bzdopen_NewDefault_in/7,eval_bzopen_or_bzdopen_bb2_in/7,eval_bzopen_or_bzdopen_bb8_in/9]
1. non_recursive  : [eval_bzopen_or_bzdopen_bb22_in/1]
2. non_recursive  : [eval_bzopen_or_bzdopen_36/1]
3. non_recursive  : [eval_bzopen_or_bzdopen_35/1]
4. non_recursive  : [eval_bzopen_or_bzdopen_bb19_in/1]
5. non_recursive  : [eval_bzopen_or_bzdopen_32/1]
6. non_recursive  : [eval_bzopen_or_bzdopen_31/2]
7. non_recursive  : [eval_bzopen_or_bzdopen_34/1]
8. non_recursive  : [eval_bzopen_or_bzdopen_33/2]
9. non_recursive  : [eval_bzopen_or_bzdopen_bb15_in/3]
10. non_recursive  : [eval_bzopen_or_bzdopen_26/3]
11. non_recursive  : [eval_bzopen_or_bzdopen_25/3]
12. non_recursive  : [eval_bzopen_or_bzdopen_bb12_in/3]
13. non_recursive  : [eval_bzopen_or_bzdopen_24/3]
14. non_recursive  : [eval_bzopen_or_bzdopen_23/3]
15. non_recursive  : [eval_bzopen_or_bzdopen_28/3]
16. non_recursive  : [eval_bzopen_or_bzdopen_27/4]
17. non_recursive  : [eval_bzopen_or_bzdopen_22/4]
18. non_recursive  : [eval_bzopen_or_bzdopen_21/4]
19. non_recursive  : [eval_bzopen_or_bzdopen_20/4]
20. non_recursive  : [loop_cont_eval_bzopen_or_bzdopen_bb2_in/5]
21. non_recursive  : [eval_bzopen_or_bzdopen_3/2]
22. non_recursive  : [eval_bzopen_or_bzdopen_2/2]
23. non_recursive  : [eval_bzopen_or_bzdopen_1/2]
24. non_recursive  : [eval_bzopen_or_bzdopen_0/2]
25. non_recursive  : [eval_bzopen_or_bzdopen_bb0_in/2]
26. non_recursive  : [eval_bzopen_or_bzdopen_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bzopen_or_bzdopen_bb2_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_bzopen_or_bzdopen_bb19_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_bzopen_or_bzdopen_bb15_in/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_bzopen_or_bzdopen_24/3
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_bzopen_or_bzdopen_22/4
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_bzopen_or_bzdopen_3/2
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_bzopen_or_bzdopen_1/2
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_bzopen_or_bzdopen_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bzopen_or_bzdopen_bb2_in/7 
* CE 8 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 7 is refined into CE [17] 


#### Refined cost equations eval_bzopen_or_bzdopen_bb2_in/7 
* CE 15: eval_bzopen_or_bzdopen_bb2_in(A,B,C,D,A,B,C) = 0
     [B>=0,1>=B,D=2] 
* CE 16: eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) = 1+ eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,F,G,C,D,E)
     [V_smallMode_0>=0,1>=V_smallMode_0,G=2,B=2] 
* CE 17: eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) = 1+ eval_bzopen_or_bzdopen_bb2_in(V_fd,F,V_blockSize100k_0,G,C,D,E)
     [V_smallMode_0>=0,1>=V_smallMode_0,G=2,F=1,B=2] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_bb2_in/7 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_bzopen_or_bzdopen_bb2_in/7 
* Loop 11: eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E)->  eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0',B',C,D,E)
                  [V_smallMode_0>=0,1>=V_smallMode_0,B'=2,B=2] 
* Loop 12: eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E)->  eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0',V_blockSize100k_0,B',C,D,E)
                  [V_smallMode_0>=0,1>=V_smallMode_0,B'=2,V_smallMode_0'=1,B=2] 
* Loop 13: eval_bzopen_or_bzdopen_bb2_in(A,B,C,D,A,B,C) [B>=0,1>=B,D=2] 

### Ranking functions of CR eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) 


### Resulting Chains:eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) 
* [[11,12]]...
* [[11,12],13]
* [13]


### Merging Chains  eval_bzopen_or_bzdopen_bb2_in/7 into  External patterns of execution 
* [[13],[13,[11,12]]] --> 1 
* [[[11,12]]] --> 2 


### Specialization of cost equations eval_bzopen_or_bzdopen_bb19_in/1 
* CE 14 is refined into CE [18] 


#### Refined cost equations eval_bzopen_or_bzdopen_bb19_in/1 
* CE 18: eval_bzopen_or_bzdopen_bb19_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_bb19_in/1 
* CEs [18] --> Loop 14 

#### Loops of eval_bzopen_or_bzdopen_bb19_in/1 
* Loop 14: eval_bzopen_or_bzdopen_bb19_in(B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_bb19_in(B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_bb19_in(B) 


### Resulting Chains:eval_bzopen_or_bzdopen_bb19_in(B) 
* [14]


### Merging Chains  eval_bzopen_or_bzdopen_bb19_in/1 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_bzopen_or_bzdopen_bb15_in/3 
* CE 11 is refined into CE [19] 
* CE 12 is refined into CE [20] 


#### Refined cost equations eval_bzopen_or_bzdopen_bb15_in/3 
* CE 19: eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) = 0
     [] 
* CE 20: eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) = 0+ eval_bzopen_or_bzdopen_bb19_in(B):1
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_bb15_in/3 
* CEs [19,20] --> Loop 15 

#### Loops of eval_bzopen_or_bzdopen_bb15_in/3 
* Loop 15: eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B) 
* [15]


### Merging Chains  eval_bzopen_or_bzdopen_bb15_in/3 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_bzopen_or_bzdopen_24/3 
* CE 13 is refined into CE [21] 


#### Refined cost equations eval_bzopen_or_bzdopen_24/3 
* CE 21: eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B) = 0+ eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B):1
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_24/3 
* CEs [21] --> Loop 16 

#### Loops of eval_bzopen_or_bzdopen_24/3 
* Loop 16: eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B) 
* [16]


### Merging Chains  eval_bzopen_or_bzdopen_24/3 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_bzopen_or_bzdopen_22/4 
* CE 9 is refined into CE [22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations eval_bzopen_or_bzdopen_22/4 
* CE 22: eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) = 0+ eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B):1
     [] 
* CE 23: eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) = 0+ eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B):1
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_22/4 
* CEs [22,23] --> Loop 17 

#### Loops of eval_bzopen_or_bzdopen_22/4 
* Loop 17: eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B) 
* [17]


### Merging Chains  eval_bzopen_or_bzdopen_22/4 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_bzopen_or_bzdopen_3/2 
* CE 5 is refined into CE [24,25] 


#### Refined cost equations eval_bzopen_or_bzdopen_3/2 
* CE 24: eval_bzopen_or_bzdopen_3(V_fd,B) = 1+ eval_bzopen_or_bzdopen_bb2_in(V_fd,C,D,E,V_fd,F,G):1+ eval_bzopen_or_bzdopen_22(V_fd,F,G,B):1
     [F>=0,1>=F,E=2,D=9,C=0] 
* CE 25: eval_bzopen_or_bzdopen_3(V_fd,B) = 1+ eval_bzopen_or_bzdopen_bb2_in(V_fd,C,D,E,F,G,H):2
     [E=2,D=9,C=0] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_3/2 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of eval_bzopen_or_bzdopen_3/2 
* Loop 18: eval_bzopen_or_bzdopen_3(V_fd,B) [] 
* Loop 19: eval_bzopen_or_bzdopen_3(V_fd,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_3(V_fd,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_3(V_fd,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_3(V_fd,B) 
* [19]
* [18]...


### Merging Chains  eval_bzopen_or_bzdopen_3/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_bzopen_or_bzdopen_1/2 
* CE 3 is refined into CE [26] 
* CE 4 is refined into CE [27,28] 


#### Refined cost equations eval_bzopen_or_bzdopen_1/2 
* CE 26: eval_bzopen_or_bzdopen_1(V_fd,B) = 0
     [] 
* CE 27: eval_bzopen_or_bzdopen_1(V_fd,B) = 0+ eval_bzopen_or_bzdopen_3(V_fd,B):1
     [] 
* CE 28: eval_bzopen_or_bzdopen_1(V_fd,B) = 0+ eval_bzopen_or_bzdopen_3(V_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_1/2 
* CEs [28] --> Loop 20 
* CEs [26,27] --> Loop 21 

#### Loops of eval_bzopen_or_bzdopen_1/2 
* Loop 20: eval_bzopen_or_bzdopen_1(V_fd,B) [] 
* Loop 21: eval_bzopen_or_bzdopen_1(V_fd,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_1(V_fd,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_1(V_fd,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_1(V_fd,B) 
* [21]
* [20]...


### Merging Chains  eval_bzopen_or_bzdopen_1/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_bzopen_or_bzdopen_start/3 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_bzopen_or_bzdopen_start/3 
* CE 29: eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) = 0+ eval_bzopen_or_bzdopen_1(V_fd,B):1
     [] 
* CE 30: eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) = 0+ eval_bzopen_or_bzdopen_1(V_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_bzopen_or_bzdopen_start/3 
* CEs [30] --> Loop 22 
* CEs [29] --> Loop 23 

#### Loops of eval_bzopen_or_bzdopen_start/3 
* Loop 22: eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) [] 
* Loop 23: eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) [] 

### Ranking functions of CR eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) 

#### Partial ranking functions of CR eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) 


### Resulting Chains:eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B) 
* [23]
* [22]...


### Merging Chains  eval_bzopen_or_bzdopen_start/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11,12] 

 * loop 11:eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) -> [eval_bzopen_or_bzdopen_bb2_in(V_fd',V_smallMode_0',V_blockSize100k_0',B',C',D',E')] 
1
 * loop 12:eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) -> [eval_bzopen_or_bzdopen_bb2_in(V_fd',V_smallMode_0',V_blockSize100k_0',B',C',D',E')] 
1
#### Cost of phase [11,12]:eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) -> [eval_bzopen_or_bzdopen_bb2_in(V_fd',V_smallMode_0',V_blockSize100k_0',B',C',D',E')] 
2*it(11)+0
#### Cost of phase [11,12]:eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E) -> [eval_bzopen_or_bzdopen_bb2_in(V_fd',V_smallMode_0',V_blockSize100k_0',B',C',D',E')] 
2*it(11)+0
#### Cost of chains of eval_bzopen_or_bzdopen_bb2_in(V_fd,V_smallMode_0,V_blockSize100k_0,B,C,D,E):
* Chain [[11,12]]...: 2*it(11)+0
  with precondition: [1>=V_smallMode_0,V_smallMode_0>=0,B=2] 

* Chain [[11,12],13]: 2*it(11)+0
  with precondition: [B=2,V_fd=C,1>=D,V_smallMode_0>=0,D>=V_smallMode_0] 

* Chain [13]: 0
  with precondition: [B=2,C=V_fd,E=V_blockSize100k_0,V_smallMode_0=D,1>=V_smallMode_0,V_smallMode_0>=0] 


#### Cost of chains of eval_bzopen_or_bzdopen_bb19_in(B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_bb15_in(V_smallMode_0,V_blockSize100k_0,B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_24(V_smallMode_0,V_blockSize100k_0,B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_22(V_fd,V_smallMode_0,V_blockSize100k_0,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_3(V_fd,B):
* Chain [19]: 1*s(2)+1
  with precondition: [] 

* Chain [18]...: 2*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_1(V_fd,B):
* Chain [21]: 1*aux(2)+0
  with precondition: [] 

* Chain [20]...: 2*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B):
* Chain [23]: 1*s(6)+0
  with precondition: [] 

* Chain [22]...: 2*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bzopen_or_bzdopen_start(V_fd,V_open_mode,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 26 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 16 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 106 ms.

