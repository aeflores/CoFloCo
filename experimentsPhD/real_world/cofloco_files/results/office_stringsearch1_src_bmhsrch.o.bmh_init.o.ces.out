Warning: Ignored call to eval_bmh_init_stop/1 in equation loop_cont_eval_bmh_init_bb6_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bmh_init_bb1_in/5]
1. recursive  : [eval_bmh_init_bb3_in/5]
2. recursive  : [eval_bmh_init_bb6_in/3,eval_bmh_init_bb9_in/3]
3. non_recursive  : [loop_cont_eval_bmh_init_bb6_in/2]
4. non_recursive  : [loop_cont_eval_bmh_init_bb3_in/4]
5. non_recursive  : [loop_cont_eval_bmh_init_bb1_in/4]
6. non_recursive  : [eval_bmh_init_2/3]
7. non_recursive  : [eval_bmh_init_1/3]
8. non_recursive  : [eval_bmh_init_bb0_in/3]
9. non_recursive  : [eval_bmh_init_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bmh_init_bb1_in/5
1. SCC is partially evaluated into eval_bmh_init_bb3_in/5
2. SCC is partially evaluated into eval_bmh_init_bb6_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_bmh_init_bb3_in/4
5. SCC is partially evaluated into loop_cont_eval_bmh_init_bb1_in/4
6. SCC is partially evaluated into eval_bmh_init_2/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_bmh_init_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bmh_init_bb1_in/5 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_bmh_init_bb1_in/5 
* CE 12: eval_bmh_init_bb1_in(A,B,C,A,D) = 0
     [B>=256,D=0,C=4] 
* CE 13: eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) = 1+ eval_bmh_init_bb1_in(V__patlen,E,B,C,D)
     [V_i_0>=0,255>=V_i_0,V_i_0+1=E] 

### Cost equations --> "Loop" of eval_bmh_init_bb1_in/5 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_bmh_init_bb1_in/5 
* Loop 11: eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D)->  eval_bmh_init_bb1_in(V__patlen,V_i_0',B,C,D)
                  [V_i_0>=0,255>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 12: eval_bmh_init_bb1_in(A,B,C,A,D) [B>=256,D=0,C=4] 

### Ranking functions of CR eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* RF of phase [11]: [-V_i_0+256]

#### Partial ranking functions of CR eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_i_0+256


### Resulting Chains:eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* [[11],12]


### Merging Chains  eval_bmh_init_bb1_in/5 into  External patterns of execution 
* [[12,[11]]] --> 1 


### Specialization of cost equations eval_bmh_init_bb3_in/5 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations eval_bmh_init_bb3_in/5 
* CE 14: eval_bmh_init_bb3_in(A,B,C,A,D) = 0
     [B>=A,D=0,C=3] 
* CE 15: eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) = 1+ eval_bmh_init_bb3_in(V__patlen,E,B,C,D)
     [V__patlen>=V_i_1+1,V_i_1+1=E] 

### Cost equations --> "Loop" of eval_bmh_init_bb3_in/5 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_bmh_init_bb3_in/5 
* Loop 13: eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D)->  eval_bmh_init_bb3_in(V__patlen,V_i_1',B,C,D)
                  [V__patlen>=V_i_1+1,V_i_1+1=V_i_1'] 
* Loop 14: eval_bmh_init_bb3_in(A,B,C,A,D) [B>=A,D=0,C=3] 

### Ranking functions of CR eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) 
* RF of phase [13]: [V__patlen-V_i_1]

#### Partial ranking functions of CR eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__patlen-V_i_1


### Resulting Chains:eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) 
* [[13],14]
* [14]


### Merging Chains  eval_bmh_init_bb3_in/5 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations eval_bmh_init_bb6_in/3 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_bmh_init_bb6_in/3 
* CE 16: eval_bmh_init_bb6_in(V__patlen,V_i_2,B) = 0
     [V_i_2+1>=V__patlen,B=2] 
* CE 17: eval_bmh_init_bb6_in(V__patlen,V_i_2,B) = 1+ eval_bmh_init_bb6_in(V__patlen,C,D)
     [V__patlen>=V_i_2+2,V_i_2+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_bmh_init_bb6_in/3 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_bmh_init_bb6_in/3 
* Loop 15: eval_bmh_init_bb6_in(V__patlen,V_i_2,B)->  eval_bmh_init_bb6_in(V__patlen,V_i_2',B')
                  [V__patlen>=V_i_2+2,V_i_2+1=V_i_2',B'=2,B=2] 
* Loop 16: eval_bmh_init_bb6_in(V__patlen,V_i_2,B) [V_i_2+1>=V__patlen,B=2] 

### Ranking functions of CR eval_bmh_init_bb6_in(V__patlen,V_i_2,B) 
* RF of phase [15]: [V__patlen-V_i_2-1]

#### Partial ranking functions of CR eval_bmh_init_bb6_in(V__patlen,V_i_2,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V__patlen-V_i_2-1


### Resulting Chains:eval_bmh_init_bb6_in(V__patlen,V_i_2,B) 
* [[15],16]
* [16]


### Merging Chains  eval_bmh_init_bb6_in/3 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations loop_cont_eval_bmh_init_bb3_in/4 
* CE 9 is refined into CE [18,19] 


#### Refined cost equations loop_cont_eval_bmh_init_bb3_in/4 
* CE 18: loop_cont_eval_bmh_init_bb3_in(G,A,B,C) = 1+ eval_bmh_init_bb6_in(A,B,H):1
     [B+1>=A,H=2,G=3] 
* CE 19: loop_cont_eval_bmh_init_bb3_in(G,A,B,C) = 1+ eval_bmh_init_bb6_in(A,B,H):2
     [A>=B+2,H=2,G=3] 

### Cost equations --> "Loop" of loop_cont_eval_bmh_init_bb3_in/4 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of loop_cont_eval_bmh_init_bb3_in/4 
* Loop 17: loop_cont_eval_bmh_init_bb3_in(G,A,B,C) [A>=B+2,G=3] 
* Loop 18: loop_cont_eval_bmh_init_bb3_in(G,A,B,C) [B+1>=A,G=3] 

### Ranking functions of CR loop_cont_eval_bmh_init_bb3_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bmh_init_bb3_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_bmh_init_bb3_in(G,A,B,C) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_bmh_init_bb3_in/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations loop_cont_eval_bmh_init_bb1_in/4 
* CE 6 is refined into CE [20,21,22,23] 


#### Refined cost equations loop_cont_eval_bmh_init_bb1_in/4 
* CE 20: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) = 1+ eval_bmh_init_bb3_in(A,B,I,A,J):1+ loop_cont_eval_bmh_init_bb3_in(K,A,L,C):1
     [B>=A,1>=A,L=0,K=3,J=0,I=3,H=4] 
* CE 21: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) = 1+ eval_bmh_init_bb3_in(A,B,I,A,J):1+ loop_cont_eval_bmh_init_bb3_in(K,A,L,C):2
     [B>=A,A>=2,L=0,K=3,J=0,I=3,H=4] 
* CE 22: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) = 1+ eval_bmh_init_bb3_in(A,B,I,A,J):2+ loop_cont_eval_bmh_init_bb3_in(K,A,L,C):1
     [A>=B+1,1>=A,L=0,K=3,J=0,I=3,H=4] 
* CE 23: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) = 1+ eval_bmh_init_bb3_in(A,B,I,A,J):2+ loop_cont_eval_bmh_init_bb3_in(K,A,L,C):2
     [A>=B+1,A>=2,L=0,K=3,J=0,I=3,H=4] 

### Cost equations --> "Loop" of loop_cont_eval_bmh_init_bb1_in/4 
* CEs [23] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [20] --> Loop 22 

#### Loops of loop_cont_eval_bmh_init_bb1_in/4 
* Loop 19: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) [A>=B+1,A>=2,H=4] 
* Loop 20: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) [B>=A,A>=2,H=4] 
* Loop 21: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) [A>=B+1,1>=A,H=4] 
* Loop 22: loop_cont_eval_bmh_init_bb1_in(H,A,B,C) [B>=A,1>=A,H=4] 

### Ranking functions of CR loop_cont_eval_bmh_init_bb1_in(H,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bmh_init_bb1_in(H,A,B,C) 


### Resulting Chains:loop_cont_eval_bmh_init_bb1_in(H,A,B,C) 
* [22]
* [21]
* [20]
* [19]


### Merging Chains  loop_cont_eval_bmh_init_bb1_in/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 


### Specialization of cost equations eval_bmh_init_2/3 
* CE 3 is refined into CE [24,25,26] 


#### Refined cost equations eval_bmh_init_2/3 
* CE 24: eval_bmh_init_2(V__patlen,V_0,B) = 1+ eval_bmh_init_bb1_in(V_0,C,D,V_0,E):1+ loop_cont_eval_bmh_init_bb1_in(F,V_0,G,B):1
     [0>=V_0,G=0,F=4,E=0,D=4,C=0] 
* CE 25: eval_bmh_init_2(V__patlen,V_0,B) = 1+ eval_bmh_init_bb1_in(C,D,E,F,G):1+ loop_cont_eval_bmh_init_bb1_in(H,I,J,B):2
     [J=0,I=1,H=4,G=0,F=1,E=4,D=0,C=1,V_0=1] 
* CE 26: eval_bmh_init_2(V__patlen,V_0,B) = 1+ eval_bmh_init_bb1_in(V_0,C,D,V_0,E):1+ loop_cont_eval_bmh_init_bb1_in(F,V_0,G,B):4
     [V_0>=2,G=0,F=4,E=0,D=4,C=0] 

### Cost equations --> "Loop" of eval_bmh_init_2/3 
* CEs [26] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of eval_bmh_init_2/3 
* Loop 23: eval_bmh_init_2(V__patlen,V_0,B) [V_0>=2] 
* Loop 24: eval_bmh_init_2(V__patlen,V_0,B) [0>=V_0] 
* Loop 25: eval_bmh_init_2(V__patlen,V_0,B) [V_0=1] 

### Ranking functions of CR eval_bmh_init_2(V__patlen,V_0,B) 

#### Partial ranking functions of CR eval_bmh_init_2(V__patlen,V_0,B) 


### Resulting Chains:eval_bmh_init_2(V__patlen,V_0,B) 
* [25]
* [24]
* [23]


### Merging Chains  eval_bmh_init_2/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations eval_bmh_init_start/3 
* CE 2 is refined into CE [27,28,29] 


#### Refined cost equations eval_bmh_init_start/3 
* CE 27: eval_bmh_init_start(V__patlen,V__skip2,B) = 0+ eval_bmh_init_2(V__patlen,C,B):1
     [C=1] 
* CE 28: eval_bmh_init_start(V__patlen,V__skip2,B) = 0+ eval_bmh_init_2(V__patlen,C,B):2
     [0>=C] 
* CE 29: eval_bmh_init_start(V__patlen,V__skip2,B) = 0+ eval_bmh_init_2(V__patlen,C,B):3
     [C>=2] 

### Cost equations --> "Loop" of eval_bmh_init_start/3 
* CEs [27,28,29] --> Loop 26 

#### Loops of eval_bmh_init_start/3 
* Loop 26: eval_bmh_init_start(V__patlen,V__skip2,B) [] 

### Ranking functions of CR eval_bmh_init_start(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmh_init_start(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmh_init_start(V__patlen,V__skip2,B) 
* [26]


### Merging Chains  eval_bmh_init_start/3 into  External patterns of execution 
* [[26]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmh_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
1
#### Cost of phase [11]:eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmh_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< -V_i_0+256
it(11) =< -V_i_0+V_i_0'

#### Cost of chains of eval_bmh_init_bb1_in(V__patlen,V_i_0,B,C,D):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V_i_0+256

  with precondition: [B=4,D=0,V__patlen=C,255>=V_i_0,V_i_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) -> [eval_bmh_init_bb3_in(V__patlen',V_i_1',B',C',D')] 
1
#### Cost of phase [13]:eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D) -> [eval_bmh_init_bb3_in(V__patlen',V_i_1',B',C',D')] 
1*it(13)+0
  Such that:it(13) =< V__patlen-V_i_1
it(13) =< V__patlen-V_i_1-V__patlen'+V_i_1'

#### Cost of chains of eval_bmh_init_bb3_in(V__patlen,V_i_1,B,C,D):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V__patlen-V_i_1

  with precondition: [B=3,D=0,V__patlen=C,V__patlen>=V_i_1+1] 

* Chain [14]: 0
  with precondition: [B=3,D=0,V__patlen=C,V_i_1>=V__patlen] 


#### Cost of loops [15] 

 * loop 15:eval_bmh_init_bb6_in(V__patlen,V_i_2,B) -> [eval_bmh_init_bb6_in(V__patlen',V_i_2',B')] 
1
#### Cost of phase [15]:eval_bmh_init_bb6_in(V__patlen,V_i_2,B) -> [eval_bmh_init_bb6_in(V__patlen',V_i_2',B')] 
1*it(15)+0
  Such that:it(15) =< V__patlen-V_i_2
it(15) =< V__patlen-V_i_2-V__patlen'+V_i_2'

#### Cost of chains of eval_bmh_init_bb6_in(V__patlen,V_i_2,B):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V__patlen-V_i_2

  with precondition: [B=2,V__patlen>=V_i_2+2] 

* Chain [16]: 0
  with precondition: [B=2,V_i_2+1>=V__patlen] 


#### Cost of chains of loop_cont_eval_bmh_init_bb3_in(G,A,B,C):
* Chain [18]: 1
  with precondition: [G=3,B+1>=A] 

* Chain [17]: 1*s(1)+1
  Such that:s(1) =< A-B

  with precondition: [G=3,A>=B+2] 


#### Cost of chains of loop_cont_eval_bmh_init_bb1_in(H,A,B,C):
* Chain [22]: 2
  with precondition: [H=4,1>=A,B>=A] 

* Chain [21]: 1*s(2)+2
  Such that:s(2) =< A-B

  with precondition: [H=4,1>=A,A>=B+1] 

* Chain [20]: 1*s(3)+2
  Such that:s(3) =< A

  with precondition: [H=4,A>=2,B>=A] 

* Chain [19]: 1*s(4)+1*s(5)+2
  Such that:s(5) =< A
s(4) =< A-B

  with precondition: [H=4,A>=2,A>=B+1] 


#### Cost of chains of eval_bmh_init_2(V__patlen,V_0,B):
* Chain [25]: 1*s(6)+1*s(7)+3
  Such that:s(7) =< 1
s(6) =< 256

  with precondition: [V_0=1] 

* Chain [24]: 1*s(8)+3
  Such that:s(8) =< 256

  with precondition: [0>=V_0] 

* Chain [23]: 1*s(9)+2*s(10)+3
  Such that:s(9) =< 256
aux(1) =< V_0
s(10) =< aux(1)

  with precondition: [V_0>=2] 


#### Cost of chains of eval_bmh_init_start(V__patlen,V__skip2,B):
* Chain [26]: 1*aux(3)+0
  with precondition: [] 


Closed-form bounds of eval_bmh_init_start(V__patlen,V__skip2,B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bmh_init_start(V__patlen,V__skip2,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 62 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 139 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 51 ms.
   - Phase cost structures 22 ms.
   - Chain cost structures 24 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 415 ms.

