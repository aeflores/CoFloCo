Warning: Ignored call to eval_initckch_stop/1 in equation eval_initckch__critedge_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_initckch_bb1_in/5,eval_initckch_bb7_in/5]
1. recursive  : [eval_initckch_83/2,eval_initckch_84/2,eval_initckch_85/2,eval_initckch_87/2,eval_initckch_88/2,eval_initckch_bb10_in/2,eval_initckch_bb15_in/2,eval_initckch_bb19_in/2,eval_initckch_bb23_in/2,eval_initckch_bb25_in/2,eval_initckch_bb27_in/2]
2. non_recursive  : [eval_initckch__critedge_in/1]
3. non_recursive  : [loop_cont_eval_initckch_bb10_in/2]
4. non_recursive  : [eval_initckch_34/2]
5. non_recursive  : [eval_initckch_33/2]
6. non_recursive  : [eval_initckch_32/2]
7. non_recursive  : [eval_initckch_31/2]
8. non_recursive  : [loop_cont_eval_initckch_bb1_in/3]
9. non_recursive  : [eval_initckch_bb0_in/2]
10. non_recursive  : [eval_initckch_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_initckch_bb1_in/5
1. SCC is partially evaluated into eval_initckch_bb10_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_initckch_34/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_initckch_bb1_in/3
9. SCC is partially evaluated into eval_initckch_bb0_in/2
10. SCC is partially evaluated into eval_initckch_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_initckch_bb1_in/5 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17] 
* CE 4 is refined into CE [18] 


#### Refined cost equations eval_initckch_bb1_in/5 
* CE 15: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) = 0
     [V_c_0>=V_1+128,V_c_0>=0,B=3] 
* CE 16: eval_initckch_bb1_in(A,B,C,D,A) = 0
     [C>=B+128,C>=0,D=2] 
* CE 17: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) = 1+ eval_initckch_bb1_in(V__Trynum,V_1,D,B,C)
     [V_1+127>=V_c_0,V_c_0>=0,V_c_0+1=D] 
* CE 18: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) = 1+ eval_initckch_bb1_in(D,V_1,E,B,C)
     [V_1+127>=V_c_0,V_c_0>=0,V_c_0+1=E,D=V__Trynum+1] 

### Cost equations --> "Loop" of eval_initckch_bb1_in/5 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_initckch_bb1_in/5 
* Loop 14: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C)->  eval_initckch_bb1_in(V__Trynum,V_1,V_c_0',B,C)
                  [V_1+127>=V_c_0,V_c_0>=0,V_c_0+1=V_c_0'] 
* Loop 15: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C)->  eval_initckch_bb1_in(V__Trynum',V_1,V_c_0',B,C)
                  [V_1+127>=V_c_0,V_c_0>=0,V_c_0+1=V_c_0',V__Trynum+1=V__Trynum'] 
* Loop 16: eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) [V_c_0>=V_1+128,V_c_0>=0,B=3] 
* Loop 17: eval_initckch_bb1_in(A,B,C,D,A) [C>=B+128,C>=0,D=2] 

### Ranking functions of CR eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) 
* RF of phase [14,15]: [V_1-V_c_0+128]

#### Partial ranking functions of CR eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1,15:1]:
    V_1-V_c_0+128


### Resulting Chains:eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) 
* [[14,15],17]
* [[14,15],16]
* [17]
* [16]


### Merging Chains  eval_initckch_bb1_in/5 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[14,15]]] --> 2 
* [[16]] --> 3 
* [[16,[14,15]]] --> 4 


### Specialization of cost equations eval_initckch_bb10_in/2 
* CE 14 is refined into CE [19] 
* CE 13 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 


#### Refined cost equations eval_initckch_bb10_in/2 
* CE 19: eval_initckch_bb10_in(V__Trynum,B) = 0
     [V__Trynum>=128,B=3] 
* CE 20: eval_initckch_bb10_in(V__Trynum,B) = 0
     [127>=V__Trynum,B=3] 
* CE 21: eval_initckch_bb10_in(V__Trynum,B) = 1+ eval_initckch_bb10_in(V__Trynum,C)
     [127>=V__Trynum,C=3,B=3] 
* CE 22: eval_initckch_bb10_in(V__Trynum,B) = 1+ eval_initckch_bb10_in(C,D)
     [127>=V__Trynum,V__Trynum+1=C,D=3,B=3] 

### Cost equations --> "Loop" of eval_initckch_bb10_in/2 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of eval_initckch_bb10_in/2 
* Loop 18: eval_initckch_bb10_in(V__Trynum,B)->  eval_initckch_bb10_in(V__Trynum,B')
                  [127>=V__Trynum,B'=3,B=3] 
* Loop 19: eval_initckch_bb10_in(V__Trynum,B)->  eval_initckch_bb10_in(V__Trynum',B')
                  [127>=V__Trynum,V__Trynum+1=V__Trynum',B'=3,B=3] 
* Loop 20: eval_initckch_bb10_in(V__Trynum,B) [V__Trynum>=128,B=3] 
* Loop 21: eval_initckch_bb10_in(V__Trynum,B) [127>=V__Trynum,B=3] 

### Ranking functions of CR eval_initckch_bb10_in(V__Trynum,B) 

#### Partial ranking functions of CR eval_initckch_bb10_in(V__Trynum,B) 
* Partial RF of phase [18,19]:
  - RF of loop [19:1]:
    -V__Trynum+128


### Resulting Chains:eval_initckch_bb10_in(V__Trynum,B) 
* [[18,19]]...
* [[18,19],21]
* [[18,19],20]
* [21]
* [20]


### Merging Chains  eval_initckch_bb10_in/2 into  External patterns of execution 
* [[21],[20,[18,19]],[21,[18,19]]] --> 1 
* [[20]] --> 2 
* [[[18,19]]] --> 3 


### Specialization of cost equations eval_initckch_34/2 
* CE 10 is refined into CE [23,24,25] 


#### Refined cost equations eval_initckch_34/2 
* CE 23: eval_initckch_34(V__Trynum,B) = 1+ eval_initckch_bb10_in(V__Trynum,C):1
     [127>=V__Trynum,C=3] 
* CE 24: eval_initckch_34(V__Trynum,B) = 1+ eval_initckch_bb10_in(V__Trynum,C):2
     [V__Trynum>=128,C=3] 
* CE 25: eval_initckch_34(V__Trynum,B) = 1+ eval_initckch_bb10_in(V__Trynum,C):3
     [127>=V__Trynum,C=3] 

### Cost equations --> "Loop" of eval_initckch_34/2 
* CEs [25] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

#### Loops of eval_initckch_34/2 
* Loop 22: eval_initckch_34(V__Trynum,B) [127>=V__Trynum] 
* Loop 23: eval_initckch_34(V__Trynum,B) [V__Trynum>=128] 
* Loop 24: eval_initckch_34(V__Trynum,B) [127>=V__Trynum] 

### Ranking functions of CR eval_initckch_34(V__Trynum,B) 

#### Partial ranking functions of CR eval_initckch_34(V__Trynum,B) 


### Resulting Chains:eval_initckch_34(V__Trynum,B) 
* [24]
* [23]
* [22]...


### Merging Chains  eval_initckch_34/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations loop_cont_eval_initckch_bb1_in/3 
* CE 9 is refined into CE [26] 
* CE 8 is refined into CE [27,28,29] 


#### Refined cost equations loop_cont_eval_initckch_bb1_in/3 
* CE 26: loop_cont_eval_initckch_bb1_in(E,A,B) = 0
     [E=3] 
* CE 27: loop_cont_eval_initckch_bb1_in(E,A,B) = 0+ eval_initckch_34(A,B):1
     [127>=A,E=2] 
* CE 28: loop_cont_eval_initckch_bb1_in(E,A,B) = 0+ eval_initckch_34(A,B):2
     [A>=128,E=2] 
* CE 29: loop_cont_eval_initckch_bb1_in(E,A,B) = 0+ eval_initckch_34(A,B):3
     [127>=A,E=2] 

### Cost equations --> "Loop" of loop_cont_eval_initckch_bb1_in/3 
* CEs [29] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 

#### Loops of loop_cont_eval_initckch_bb1_in/3 
* Loop 25: loop_cont_eval_initckch_bb1_in(E,A,B) [127>=A,E=2] 
* Loop 26: loop_cont_eval_initckch_bb1_in(E,A,B) [E=3] 
* Loop 27: loop_cont_eval_initckch_bb1_in(E,A,B) [A>=128,E=2] 
* Loop 28: loop_cont_eval_initckch_bb1_in(E,A,B) [127>=A,E=2] 

### Ranking functions of CR loop_cont_eval_initckch_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_initckch_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_initckch_bb1_in(E,A,B) 
* [28]
* [27]
* [26]
* [25]...


### Merging Chains  loop_cont_eval_initckch_bb1_in/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 


### Specialization of cost equations eval_initckch_bb0_in/2 
* CE 3 is refined into CE [30,31,32,33,34,35,36,37] 


#### Refined cost equations eval_initckch_bb0_in/2 
* CE 30: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,V__Trynum):1+ loop_cont_eval_initckch_bb1_in(F,V__Trynum,B):1
     [127>=V__Trynum,0>=C+128,F=2,E=2,D=0] 
* CE 31: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,V__Trynum):1+ loop_cont_eval_initckch_bb1_in(F,V__Trynum,B):2
     [V__Trynum>=128,0>=C+128,F=2,E=2,D=0] 
* CE 32: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,V__Trynum):1+ loop_cont_eval_initckch_bb1_in(F,V__Trynum,B):4
     [127>=V__Trynum,0>=C+128,F=2,E=2,D=0] 
* CE 33: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,F):2+ loop_cont_eval_initckch_bb1_in(G,F,B):1
     [V__Trynum+C+128>=F,F>=V__Trynum,C+127>=0,127>=F,G=2,E=2,D=0] 
* CE 34: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,F):2+ loop_cont_eval_initckch_bb1_in(G,F,B):2
     [V__Trynum+C+128>=F,F>=V__Trynum,F>=128,C+127>=0,G=2,E=2,D=0] 
* CE 35: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,F):2+ loop_cont_eval_initckch_bb1_in(G,F,B):4
     [V__Trynum+C+128>=F,F>=V__Trynum,C+127>=0,127>=F,G=2,E=2,D=0] 
* CE 36: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,F):3+ loop_cont_eval_initckch_bb1_in(G,F,B):3
     [0>=C+128,G=3,E=3,D=0] 
* CE 37: eval_initckch_bb0_in(V__Trynum,B) = 1+ eval_initckch_bb1_in(V__Trynum,C,D,E,F):4+ loop_cont_eval_initckch_bb1_in(G,F,B):3
     [C+127>=0,G=3,E=3,D=0] 

### Cost equations --> "Loop" of eval_initckch_bb0_in/2 
* CEs [30,31,33,34,36,37] --> Loop 29 
* CEs [32,35] --> Loop 30 

#### Loops of eval_initckch_bb0_in/2 
* Loop 29: eval_initckch_bb0_in(V__Trynum,B) [] 
* Loop 30: eval_initckch_bb0_in(V__Trynum,B) [127>=V__Trynum] 

### Ranking functions of CR eval_initckch_bb0_in(V__Trynum,B) 

#### Partial ranking functions of CR eval_initckch_bb0_in(V__Trynum,B) 


### Resulting Chains:eval_initckch_bb0_in(V__Trynum,B) 
* [30]...
* [29]


### Merging Chains  eval_initckch_bb0_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_initckch_start/2 
* CE 2 is refined into CE [38,39] 


#### Refined cost equations eval_initckch_start/2 
* CE 38: eval_initckch_start(V__Trynum,B) = 0+ eval_initckch_bb0_in(V__Trynum,B):1
     [] 
* CE 39: eval_initckch_start(V__Trynum,B) = 0+ eval_initckch_bb0_in(V__Trynum,B):2
     [127>=V__Trynum] 

### Cost equations --> "Loop" of eval_initckch_start/2 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 

#### Loops of eval_initckch_start/2 
* Loop 31: eval_initckch_start(V__Trynum,B) [127>=V__Trynum] 
* Loop 32: eval_initckch_start(V__Trynum,B) [] 

### Ranking functions of CR eval_initckch_start(V__Trynum,B) 

#### Partial ranking functions of CR eval_initckch_start(V__Trynum,B) 


### Resulting Chains:eval_initckch_start(V__Trynum,B) 
* [32]
* [31]...


### Merging Chains  eval_initckch_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14,15] 

 * loop 14:eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) -> [eval_initckch_bb1_in(V__Trynum',V_1',V_c_0',B',C')] 
1
 * loop 15:eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) -> [eval_initckch_bb1_in(V__Trynum',V_1',V_c_0',B',C')] 
1
#### Cost of phase [14,15]:eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) -> [eval_initckch_bb1_in(V__Trynum',V_1',V_c_0',B',C')] 
2*it(14)+0
  Such that:aux(1) =< V_1-V_c_0+128
aux(2) =< V_1-V_c_0-V_1'+V_c_0'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of phase [14,15]:eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C) -> [eval_initckch_bb1_in(V__Trynum',V_1',V_c_0',B',C')] 
2*it(14)+0
  Such that:aux(1) =< V_1-V_c_0+128
aux(2) =< V_1-V_c_0-V_1'+V_c_0'
it(14) =< aux(1)
it(14) =< aux(2)

#### Cost of chains of eval_initckch_bb1_in(V__Trynum,V_1,V_c_0,B,C):
* Chain [[14,15],17]: 2*it(14)+0
  Such that:aux(3) =< V_1-V_c_0+128
it(14) =< aux(3)

  with precondition: [B=2,V_c_0>=0,C>=V__Trynum,V_1+127>=V_c_0,V_1+V__Trynum+128>=V_c_0+C] 

* Chain [[14,15],16]: 2*it(14)+0
  Such that:aux(4) =< V_1-V_c_0+128
it(14) =< aux(4)

  with precondition: [B=3,V_c_0>=0,V_1+127>=V_c_0] 

* Chain [17]: 0
  with precondition: [B=2,C=V__Trynum,V_c_0>=0,V_c_0>=V_1+128] 

* Chain [16]: 0
  with precondition: [B=3,V_c_0>=0,V_c_0>=V_1+128] 


#### Cost of loops [18,19] 

 * loop 18:eval_initckch_bb10_in(V__Trynum,B) -> [eval_initckch_bb10_in(V__Trynum',B')] 
1
 * loop 19:eval_initckch_bb10_in(V__Trynum,B) -> [eval_initckch_bb10_in(V__Trynum',B')] 
1
#### Cost of phase [18,19]:eval_initckch_bb10_in(V__Trynum,B) -> [eval_initckch_bb10_in(V__Trynum',B')] 
1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+128
it(19) =< -V__Trynum+V__Trynum'

#### Cost of phase [18,19]:eval_initckch_bb10_in(V__Trynum,B) -> [eval_initckch_bb10_in(V__Trynum',B')] 
1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+128
it(19) =< -V__Trynum+V__Trynum'

#### Cost of phase [18,19]:eval_initckch_bb10_in(V__Trynum,B) -> [eval_initckch_bb10_in(V__Trynum',B')] 
1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+128
it(19) =< -V__Trynum+V__Trynum'

#### Cost of chains of eval_initckch_bb10_in(V__Trynum,B):
* Chain [[18,19]]...: 1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+128

  with precondition: [127>=V__Trynum,B=3] 

* Chain [[18,19],21]: 1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+127

  with precondition: [B=3,127>=V__Trynum] 

* Chain [[18,19],20]: 1*it(18)+1*it(19)+0
  Such that:it(19) =< -V__Trynum+128

  with precondition: [B=3,127>=V__Trynum] 

* Chain [21]: 0
  with precondition: [B=3,127>=V__Trynum] 

* Chain [20]: 0
  with precondition: [B=3,V__Trynum>=128] 


#### Cost of chains of eval_initckch_34(V__Trynum,B):
* Chain [24]: 1*s(5)+1*s(6)+2*s(7)+1
  Such that:s(5) =< -V__Trynum+127
s(6) =< -V__Trynum+128

  with precondition: [127>=V__Trynum] 

* Chain [23]: 1
  with precondition: [V__Trynum>=128] 

* Chain [22]...: 1*s(8)+1*s(9)+1
  Such that:s(8) =< -V__Trynum+128

  with precondition: [127>=V__Trynum] 


#### Cost of chains of loop_cont_eval_initckch_bb1_in(E,A,B):
* Chain [28]: 1*s(10)+1*s(11)+2*s(12)+1
  Such that:s(10) =< -A+127
s(11) =< -A+128

  with precondition: [E=2,127>=A] 

* Chain [27]: 1
  with precondition: [E=2,A>=128] 

* Chain [26]: 0
  with precondition: [E=3] 

* Chain [25]...: 1*s(13)+1*s(14)+1
  Such that:s(13) =< -A+128

  with precondition: [E=2,127>=A] 


#### Cost of chains of eval_initckch_bb0_in(V__Trynum,B):
* Chain [30]...: 2*s(15)+4*s(16)+2
  Such that:aux(5) =< -V__Trynum+128
s(15) =< aux(5)

  with precondition: [127>=V__Trynum] 

* Chain [29]: 2*s(21)+2*s(22)+10*s(23)+2
  Such that:aux(6) =< -V__Trynum+127
aux(7) =< -V__Trynum+128
s(21) =< aux(6)
s(22) =< aux(7)

  with precondition: [] 


#### Cost of chains of eval_initckch_start(V__Trynum,B):
* Chain [32]: 2*s(35)+2*s(36)+10*s(37)+2
  Such that:s(33) =< -V__Trynum+127
s(34) =< -V__Trynum+128
s(35) =< s(33)
s(36) =< s(34)

  with precondition: [] 

* Chain [31]...: 2*s(39)+4*s(40)+2
  Such that:s(38) =< -V__Trynum+128
s(39) =< s(38)

  with precondition: [127>=V__Trynum] 


Closed-form bounds of eval_initckch_start(V__Trynum,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [127>=V__Trynum] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_initckch_start(V__Trynum,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 78 ms.
   - Backward Invariants 41 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 149 ms.
* Termination proved in 15 ms.
* Upper bounds computed in 132 ms.
   - Equation cost structures 60 ms.
   - Phase cost structures 30 ms.
   - Chain cost structures 40 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 503 ms.

