Warning: Ignored call to eval_id3_util_unsynchronise_stop/1 in equation eval_id3_util_unsynchronise_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_id3_util_unsynchronise_bb17_in/1]
1. recursive  : [eval_id3_util_unsynchronise_bb2_in/3,eval_id3_util_unsynchronise_bb6_in/3,eval_id3_util_unsynchronise_bb7_in/4]
2. recursive  : [eval_id3_util_unsynchronise_bb10_in/2,eval_id3_util_unsynchronise_bb14_in/2,eval_id3_util_unsynchronise_bb15_in/3]
3. non_recursive  : [eval_id3_util_unsynchronise_bb16_in/1]
4. non_recursive  : [loop_cont_eval_id3_util_unsynchronise_bb10_in/2]
5. non_recursive  : [loop_cont_eval_id3_util_unsynchronise_bb2_in/3]
6. non_recursive  : [eval_id3_util_unsynchronise_bb0_in/1]
7. non_recursive  : [eval_id3_util_unsynchronise_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_id3_util_unsynchronise_bb2_in/3
2. SCC is partially evaluated into eval_id3_util_unsynchronise_bb10_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_id3_util_unsynchronise_bb2_in/3
6. SCC is partially evaluated into eval_id3_util_unsynchronise_bb0_in/1
7. SCC is partially evaluated into eval_id3_util_unsynchronise_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_id3_util_unsynchronise_bb2_in/3 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 


#### Refined cost equations eval_id3_util_unsynchronise_bb2_in/3 
* CE 16: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) = 0
     [V_bytes_0>=0,B=3] 
* CE 17: eval_id3_util_unsynchronise_bb2_in(A,B,A) = 0
     [A>=0,B=2] 
* CE 18: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) = 1+ eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C)
     [V_bytes_0>=0] 
* CE 19: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) = 1+ eval_id3_util_unsynchronise_bb2_in(D,B,C)
     [V_bytes_0>=0,V_bytes_0+1=D] 

### Cost equations --> "Loop" of eval_id3_util_unsynchronise_bb2_in/3 
* CEs [18] --> Loop 14 
* CEs [19] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_id3_util_unsynchronise_bb2_in/3 
* Loop 14: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C)->  eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C)
                  [V_bytes_0>=0] 
* Loop 15: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C)->  eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B,C)
                  [V_bytes_0>=0,V_bytes_0+1=V_bytes_0'] 
* Loop 16: eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) [V_bytes_0>=0,B=3] 
* Loop 17: eval_id3_util_unsynchronise_bb2_in(A,B,A) [A>=0,B=2] 

### Ranking functions of CR eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) 

#### Partial ranking functions of CR eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) 


### Resulting Chains:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) 
* [[14,15]]...
* [[14,15],17]
* [[14,15],16]
* [17]
* [16]


### Merging Chains  eval_id3_util_unsynchronise_bb2_in/3 into  External patterns of execution 
* [[17],[17,[14,15]]] --> 1 
* [[16],[16,[14,15]]] --> 2 
* [[[14,15]]] --> 3 


### Specialization of cost equations eval_id3_util_unsynchronise_bb10_in/2 
* CE 15 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 13 is refined into CE [23] 
* CE 14 is refined into CE [24] 


#### Refined cost equations eval_id3_util_unsynchronise_bb10_in/2 
* CE 20: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) = 0
     [B=3,V_count_0=0] 
* CE 21: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) = 1+ eval_id3_util_unsynchronise_bb10_in(C,D)
     [V_count_0>=1,V_count_0=C+1,D=3,B=3] 
* CE 22: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) = 1+ eval_id3_util_unsynchronise_bb10_in(C,D)
     [0>=V_count_0+1,V_count_0=C+1,D=3,B=3] 
* CE 23: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) = 1+ eval_id3_util_unsynchronise_bb10_in(V_count_0,C)
     [V_count_0>=1,C=3,B=3] 
* CE 24: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) = 1+ eval_id3_util_unsynchronise_bb10_in(V_count_0,C)
     [0>=V_count_0+1,C=3,B=3] 

### Cost equations --> "Loop" of eval_id3_util_unsynchronise_bb10_in/2 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [20] --> Loop 22 

#### Loops of eval_id3_util_unsynchronise_bb10_in/2 
* Loop 18: eval_id3_util_unsynchronise_bb10_in(V_count_0,B)->  eval_id3_util_unsynchronise_bb10_in(V_count_0',B')
                  [V_count_0>=1,V_count_0=V_count_0'+1,B'=3,B=3] 
* Loop 19: eval_id3_util_unsynchronise_bb10_in(V_count_0,B)->  eval_id3_util_unsynchronise_bb10_in(V_count_0',B')
                  [0>=V_count_0+1,V_count_0=V_count_0'+1,B'=3,B=3] 
* Loop 20: eval_id3_util_unsynchronise_bb10_in(V_count_0,B)->  eval_id3_util_unsynchronise_bb10_in(V_count_0,B')
                  [V_count_0>=1,B'=3,B=3] 
* Loop 21: eval_id3_util_unsynchronise_bb10_in(V_count_0,B)->  eval_id3_util_unsynchronise_bb10_in(V_count_0,B')
                  [0>=V_count_0+1,B'=3,B=3] 
* Loop 22: eval_id3_util_unsynchronise_bb10_in(V_count_0,B) [B=3,V_count_0=0] 

### Ranking functions of CR eval_id3_util_unsynchronise_bb10_in(V_count_0,B) 

#### Partial ranking functions of CR eval_id3_util_unsynchronise_bb10_in(V_count_0,B) 
* Partial RF of phase [18,20]:
  - RF of loop [18:1]:
    V_count_0


### Resulting Chains:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) 
* [[19,21]]...
* [[18,20]]...
* [[18,20],22]
* [22]


### Merging Chains  eval_id3_util_unsynchronise_bb10_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[18,20]]] --> 2 
* [[[19,21]]] --> 3 
* [[[18,20]]] --> 4 


### Specialization of cost equations loop_cont_eval_id3_util_unsynchronise_bb2_in/3 
* CE 10 is refined into CE [25] 
* CE 9 is refined into CE [26,27,28,29] 


#### Refined cost equations loop_cont_eval_id3_util_unsynchronise_bb2_in/3 
* CE 25: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) = 0
     [D=3] 
* CE 26: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) = 1+ eval_id3_util_unsynchronise_bb10_in(E,F):1
     [F=3,E=0,A=0,D=2] 
* CE 27: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) = 1+ eval_id3_util_unsynchronise_bb10_in(A,E):2
     [A>=1,E=3,D=2] 
* CE 28: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) = 1+ eval_id3_util_unsynchronise_bb10_in(A,E):3
     [0>=A+1,E=3,D=2] 
* CE 29: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) = 1+ eval_id3_util_unsynchronise_bb10_in(A,E):4
     [A>=1,E=3,D=2] 

### Cost equations --> "Loop" of loop_cont_eval_id3_util_unsynchronise_bb2_in/3 
* CEs [29] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [26] --> Loop 27 

#### Loops of loop_cont_eval_id3_util_unsynchronise_bb2_in/3 
* Loop 23: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) [A>=1,D=2] 
* Loop 24: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) [0>=A+1,D=2] 
* Loop 25: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) [D=3] 
* Loop 26: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) [A>=1,D=2] 
* Loop 27: loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) [A=0,D=2] 

### Ranking functions of CR loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) 


### Resulting Chains:loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B) 
* [27]
* [26]
* [25]
* [24]...
* [23]...


### Merging Chains  loop_cont_eval_id3_util_unsynchronise_bb2_in/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25]] --> 3 
* [[24]] --> 4 
* [[23]] --> 5 


### Specialization of cost equations eval_id3_util_unsynchronise_bb0_in/1 
* CE 3 is refined into CE [30] 
* CE 4 is refined into CE [31,32,33,34,35] 


#### Refined cost equations eval_id3_util_unsynchronise_bb0_in/1 
* CE 30: eval_id3_util_unsynchronise_bb0_in(B) = 0
     [] 
* CE 31: eval_id3_util_unsynchronise_bb0_in(B) = 1+ eval_id3_util_unsynchronise_bb2_in(C,D,E):1+ loop_cont_eval_id3_util_unsynchronise_bb2_in(F,G,B):1
     [G=0,F=2,E=0,D=2,C=0] 
* CE 32: eval_id3_util_unsynchronise_bb0_in(B) = 1+ eval_id3_util_unsynchronise_bb2_in(C,D,E):1+ loop_cont_eval_id3_util_unsynchronise_bb2_in(F,E,B):2
     [E>=1,F=2,D=2,C=0] 
* CE 33: eval_id3_util_unsynchronise_bb0_in(B) = 1+ eval_id3_util_unsynchronise_bb2_in(C,D,E):1+ loop_cont_eval_id3_util_unsynchronise_bb2_in(F,E,B):5
     [E>=1,F=2,D=2,C=0] 
* CE 34: eval_id3_util_unsynchronise_bb0_in(B) = 1+ eval_id3_util_unsynchronise_bb2_in(C,D,E):2+ loop_cont_eval_id3_util_unsynchronise_bb2_in(F,E,B):3
     [F=3,D=3,C=0] 
* CE 35: eval_id3_util_unsynchronise_bb0_in(B) = 1+ eval_id3_util_unsynchronise_bb2_in(C,D,E):3
     [C=0] 

### Cost equations --> "Loop" of eval_id3_util_unsynchronise_bb0_in/1 
* CEs [33,35] --> Loop 28 
* CEs [30,31,32,34] --> Loop 29 

#### Loops of eval_id3_util_unsynchronise_bb0_in/1 
* Loop 28: eval_id3_util_unsynchronise_bb0_in(B) [] 
* Loop 29: eval_id3_util_unsynchronise_bb0_in(B) [] 

### Ranking functions of CR eval_id3_util_unsynchronise_bb0_in(B) 

#### Partial ranking functions of CR eval_id3_util_unsynchronise_bb0_in(B) 


### Resulting Chains:eval_id3_util_unsynchronise_bb0_in(B) 
* [29]
* [28]...


### Merging Chains  eval_id3_util_unsynchronise_bb0_in/1 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_id3_util_unsynchronise_start/2 
* CE 2 is refined into CE [36,37] 


#### Refined cost equations eval_id3_util_unsynchronise_start/2 
* CE 36: eval_id3_util_unsynchronise_start(V_length,B) = 0+ eval_id3_util_unsynchronise_bb0_in(B):1
     [] 
* CE 37: eval_id3_util_unsynchronise_start(V_length,B) = 0+ eval_id3_util_unsynchronise_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_id3_util_unsynchronise_start/2 
* CEs [37] --> Loop 30 
* CEs [36] --> Loop 31 

#### Loops of eval_id3_util_unsynchronise_start/2 
* Loop 30: eval_id3_util_unsynchronise_start(V_length,B) [] 
* Loop 31: eval_id3_util_unsynchronise_start(V_length,B) [] 

### Ranking functions of CR eval_id3_util_unsynchronise_start(V_length,B) 

#### Partial ranking functions of CR eval_id3_util_unsynchronise_start(V_length,B) 


### Resulting Chains:eval_id3_util_unsynchronise_start(V_length,B) 
* [31]
* [30]...


### Merging Chains  eval_id3_util_unsynchronise_start/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14,15] 

 * loop 14:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) -> [eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B',C')] 
1
 * loop 15:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) -> [eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B',C')] 
1
#### Cost of phase [14,15]:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) -> [eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B',C')] 
2*it(14)+0
#### Cost of phase [14,15]:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) -> [eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B',C')] 
2*it(14)+0
#### Cost of phase [14,15]:eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C) -> [eval_id3_util_unsynchronise_bb2_in(V_bytes_0',B',C')] 
2*it(14)+0
#### Cost of chains of eval_id3_util_unsynchronise_bb2_in(V_bytes_0,B,C):
* Chain [[14,15]]...: 2*it(14)+0
  with precondition: [V_bytes_0>=0] 

* Chain [[14,15],17]: 2*it(14)+0
  with precondition: [B=2,V_bytes_0>=0,C>=V_bytes_0] 

* Chain [[14,15],16]: 2*it(14)+0
  with precondition: [B=3,V_bytes_0>=0] 

* Chain [17]: 0
  with precondition: [B=2,V_bytes_0=C,V_bytes_0>=0] 

* Chain [16]: 0
  with precondition: [B=3,V_bytes_0>=0] 


#### Cost of loops [19,21] 

 * loop 19:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1
 * loop 21:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1
#### Cost of phase [19,21]:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
2*it(19)+0
#### Cost of loops [18,20] 

 * loop 18:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1
 * loop 20:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1
#### Cost of phase [18,20]:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1*it(18)+1*it(20)+0
  Such that:it(18) =< V_count_0
it(18) =< V_count_0-V_count_0'

#### Cost of phase [18,20]:eval_id3_util_unsynchronise_bb10_in(V_count_0,B) -> [eval_id3_util_unsynchronise_bb10_in(V_count_0',B')] 
1*it(18)+1*it(20)+0
  Such that:it(18) =< V_count_0
it(18) =< V_count_0-V_count_0'

#### Cost of chains of eval_id3_util_unsynchronise_bb10_in(V_count_0,B):
* Chain [[19,21]]...: 2*it(19)+0
  with precondition: [0>=V_count_0+1,B=3] 

* Chain [[18,20]]...: 1*it(18)+1*it(20)+0
  Such that:it(18) =< V_count_0

  with precondition: [V_count_0>=1,B=3] 

* Chain [[18,20],22]: 1*it(18)+1*it(20)+0
  Such that:it(18) =< V_count_0

  with precondition: [B=3,V_count_0>=1] 

* Chain [22]: 0
  with precondition: [V_count_0=0,B=3] 


#### Cost of chains of loop_cont_eval_id3_util_unsynchronise_bb2_in(D,A,B):
* Chain [27]: 1
  with precondition: [D=2,A=0] 

* Chain [26]: 1*s(3)+1*s(4)+1
  Such that:s(3) =< A

  with precondition: [D=2,A>=1] 

* Chain [25]: 0
  with precondition: [D=3] 

* Chain [24]...: 2*s(5)+1
  with precondition: [D=2,0>=A+1] 

* Chain [23]...: 1*s(6)+1*s(7)+1
  Such that:s(6) =< A

  with precondition: [D=2,A>=1] 


#### Cost of chains of eval_id3_util_unsynchronise_bb0_in(B):
* Chain [29]: 1*aux(3)+0
  with precondition: [] 

* Chain [28]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_id3_util_unsynchronise_start(V_length,B):
* Chain [31]: 1*s(17)+0
  with precondition: [] 

* Chain [30]...: 1*s(18)+0
  with precondition: [] 


Closed-form bounds of eval_id3_util_unsynchronise_start(V_length,B): 
-------------------------------------
* Chain [31] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_id3_util_unsynchronise_start(V_length,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 60 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 16 ms.
* Refinement performed in 113 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 76 ms.
   - Equation cost structures 31 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 24 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 359 ms.

