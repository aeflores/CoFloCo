Warning: Ignored call to eval_scale_bitcount_stop/1 in equation loop_cont_eval_scale_bitcount_bb34_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_scale_bitcount_bb15_in/3,eval_scale_bitcount_bb18_in/3]
1. recursive  : [eval_scale_bitcount_bb4_in/6,eval_scale_bitcount_bb7_in/6]
2. recursive  : [eval_scale_bitcount_bb12_in/5,eval_scale_bitcount_bb9_in/5]
3. recursive  : [eval_scale_bitcount_bb2_in/2,loop_cont_eval_scale_bitcount_bb4_in/5,loop_cont_eval_scale_bitcount_bb9_in/3]
4. recursive  : [eval_scale_bitcount_bb21_in/2]
5. recursive  : [eval_scale_bitcount_bb29_in/2,eval_scale_bitcount_bb32_in/2]
6. recursive  : [eval_scale_bitcount_bb34_in/2,eval_scale_bitcount_bb39_in/2]
7. non_recursive  : [loop_cont_eval_scale_bitcount_bb34_in/2]
8. non_recursive  : [eval_scale_bitcount_bb33_in/1]
9. non_recursive  : [loop_cont_eval_scale_bitcount_bb29_in/2]
10. non_recursive  : [eval_scale_bitcount_bb28_in/1]
11. recursive  : [eval_scale_bitcount_bb26_in/2]
12. non_recursive  : [loop_cont_eval_scale_bitcount_bb26_in/2]
13. non_recursive  : [eval_scale_bitcount_bb24_in/1]
14. non_recursive  : [loop_cont_eval_scale_bitcount_bb21_in/2]
15. non_recursive  : [loop_cont_eval_scale_bitcount_bb15_in/3]
16. non_recursive  : [loop_cont_eval_scale_bitcount_bb2_in/2]
17. non_recursive  : [eval_scale_bitcount_bb0_in/1]
18. non_recursive  : [eval_scale_bitcount_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_scale_bitcount_bb15_in/3
1. SCC is partially evaluated into eval_scale_bitcount_bb4_in/6
2. SCC is partially evaluated into eval_scale_bitcount_bb9_in/5
3. SCC is partially evaluated into eval_scale_bitcount_bb2_in/2
4. SCC is partially evaluated into eval_scale_bitcount_bb21_in/2
5. SCC is partially evaluated into eval_scale_bitcount_bb29_in/2
6. SCC is partially evaluated into eval_scale_bitcount_bb34_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_scale_bitcount_bb33_in/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_scale_bitcount_bb28_in/1
11. SCC is partially evaluated into eval_scale_bitcount_bb26_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_scale_bitcount_bb24_in/1
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_scale_bitcount_bb15_in/3
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_scale_bitcount_bb0_in/1
18. SCC is partially evaluated into eval_scale_bitcount_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_scale_bitcount_bb15_in/3 
* CE 10 is refined into CE [29] 
* CE 9 is refined into CE [30] 
* CE 8 is refined into CE [31] 


#### Refined cost equations eval_scale_bitcount_bb15_in/3 
* CE 29: eval_scale_bitcount_bb15_in(V_sfb_2,B,C) = 0
     [V_sfb_2>=11,C=11,B=8] 
* CE 30: eval_scale_bitcount_bb15_in(V_sfb_2,B,C) = 0
     [V_sfb_2>=11,B=6] 
* CE 31: eval_scale_bitcount_bb15_in(V_sfb_2,B,C) = 1+ eval_scale_bitcount_bb15_in(D,B,C)
     [V_sfb_2>=0,10>=V_sfb_2,V_sfb_2+1=D] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb15_in/3 
* CEs [31] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 

#### Loops of eval_scale_bitcount_bb15_in/3 
* Loop 26: eval_scale_bitcount_bb15_in(V_sfb_2,B,C)->  eval_scale_bitcount_bb15_in(V_sfb_2',B,C)
                  [V_sfb_2>=0,10>=V_sfb_2,V_sfb_2+1=V_sfb_2'] 
* Loop 27: eval_scale_bitcount_bb15_in(V_sfb_2,B,C) [V_sfb_2>=11,C=11,B=8] 
* Loop 28: eval_scale_bitcount_bb15_in(V_sfb_2,B,C) [V_sfb_2>=11,B=6] 

### Ranking functions of CR eval_scale_bitcount_bb15_in(V_sfb_2,B,C) 
* RF of phase [26]: [-V_sfb_2+11]

#### Partial ranking functions of CR eval_scale_bitcount_bb15_in(V_sfb_2,B,C) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    -V_sfb_2+11


### Resulting Chains:eval_scale_bitcount_bb15_in(V_sfb_2,B,C) 
* [[26],28]
* [[26],27]


### Merging Chains  eval_scale_bitcount_bb15_in/3 into  External patterns of execution 
* [[28,[26]]] --> 1 
* [[27,[26]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_bb4_in/6 
* CE 14 is refined into CE [32] 
* CE 13 is refined into CE [33] 


#### Refined cost equations eval_scale_bitcount_bb4_in/6 
* CE 32: eval_scale_bitcount_bb4_in(A,B,C,A,B,D) = 0
     [B>=6,2>=A,D=6,C=2] 
* CE 33: eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) = 1+ eval_scale_bitcount_bb4_in(V_i_0,F,G,C,D,E)
     [V_sfb_0>=0,5>=V_sfb_0,2>=V_i_0,V_sfb_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb4_in/6 
* CEs [33] --> Loop 29 
* CEs [32] --> Loop 30 

#### Loops of eval_scale_bitcount_bb4_in/6 
* Loop 29: eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E)->  eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0',B',C,D,E)
                  [V_sfb_0>=0,5>=V_sfb_0,2>=V_i_0,V_sfb_0+1=V_sfb_0',B'=2,B=2] 
* Loop 30: eval_scale_bitcount_bb4_in(A,B,C,A,B,D) [B>=6,2>=A,D=6,C=2] 

### Ranking functions of CR eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) 
* RF of phase [29]: [-V_sfb_0+6]

#### Partial ranking functions of CR eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -V_sfb_0+6


### Resulting Chains:eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) 
* [[29],30]


### Merging Chains  eval_scale_bitcount_bb4_in/6 into  External patterns of execution 
* [[30,[29]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb9_in/5 
* CE 16 is refined into CE [34] 
* CE 15 is refined into CE [35] 


#### Refined cost equations eval_scale_bitcount_bb9_in/5 
* CE 34: eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) = 0
     [V_sfb_1>=12,C=V_i_0+1,B=3] 
* CE 35: eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) = 1+ eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,D,E,C)
     [11>=V_sfb_1,V_sfb_1+1=D,E=3,B=3] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb9_in/5 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 

#### Loops of eval_scale_bitcount_bb9_in/5 
* Loop 31: eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C)->  eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1',B',C)
                  [11>=V_sfb_1,V_sfb_1+1=V_sfb_1',B'=3,B=3] 
* Loop 32: eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) [V_sfb_1>=12,V_i_0+1=C,B=3] 

### Ranking functions of CR eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) 
* RF of phase [31]: [-V_sfb_1+12]

#### Partial ranking functions of CR eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    -V_sfb_1+12


### Resulting Chains:eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) 
* [[31],32]
* [32]


### Merging Chains  eval_scale_bitcount_bb9_in/5 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[31]]] --> 2 


### Specialization of cost equations eval_scale_bitcount_bb2_in/2 
* CE 6 is refined into CE [36] 
* CE 5 is refined into CE [37] 


#### Refined cost equations eval_scale_bitcount_bb2_in/2 
* CE 36: eval_scale_bitcount_bb2_in(V_i_0,B) = 0
     [V_i_0>=3,B=5] 
* CE 37: eval_scale_bitcount_bb2_in(V_i_0,B) = 3+ eval_scale_bitcount_bb4_in(C,D,E,F,G,H):1+ eval_scale_bitcount_bb9_in(I,J,K,L,M):2+ eval_scale_bitcount_bb2_in(M,N)
     [3>=M,M=I+1,M=F+1,M=C+1,M=V_i_0+1,N=5,L=3,K=6,J=6,H=6,G=6,E=2,D=0,B=5] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb2_in/2 
* CEs [37] --> Loop 33 
* CEs [36] --> Loop 34 

#### Loops of eval_scale_bitcount_bb2_in/2 
* Loop 33: eval_scale_bitcount_bb2_in(V_i_0,B)->  eval_scale_bitcount_bb2_in(V_i_0',B')
                  [2>=V_i_0,V_i_0+1=V_i_0',B'=5,B=5] 
* Loop 34: eval_scale_bitcount_bb2_in(V_i_0,B) [V_i_0>=3,B=5] 

### Ranking functions of CR eval_scale_bitcount_bb2_in(V_i_0,B) 
* RF of phase [33]: [-V_i_0+3]

#### Partial ranking functions of CR eval_scale_bitcount_bb2_in(V_i_0,B) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    -V_i_0+3


### Resulting Chains:eval_scale_bitcount_bb2_in(V_i_0,B) 
* [[33],34]


### Merging Chains  eval_scale_bitcount_bb2_in/2 into  External patterns of execution 
* [[34,[33]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb21_in/2 
* CE 22 is refined into CE [38] 
* CE 20 is refined into CE [39] 
* CE 21 is refined into CE [40] 


#### Refined cost equations eval_scale_bitcount_bb21_in/2 
* CE 38: eval_scale_bitcount_bb21_in(V_sfb_3,B) = 0
     [V_sfb_3>=21,B=7] 
* CE 39: eval_scale_bitcount_bb21_in(V_sfb_3,B) = 0
     [20>=V_sfb_3,B=7] 
* CE 40: eval_scale_bitcount_bb21_in(V_sfb_3,B) = 1+ eval_scale_bitcount_bb21_in(C,D)
     [20>=V_sfb_3,V_sfb_3+1=C,D=7,B=7] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb21_in/2 
* CEs [40] --> Loop 35 
* CEs [38] --> Loop 36 
* CEs [39] --> Loop 37 

#### Loops of eval_scale_bitcount_bb21_in/2 
* Loop 35: eval_scale_bitcount_bb21_in(V_sfb_3,B)->  eval_scale_bitcount_bb21_in(V_sfb_3',B')
                  [20>=V_sfb_3,V_sfb_3+1=V_sfb_3',B'=7,B=7] 
* Loop 36: eval_scale_bitcount_bb21_in(V_sfb_3,B) [V_sfb_3>=21,B=7] 
* Loop 37: eval_scale_bitcount_bb21_in(V_sfb_3,B) [20>=V_sfb_3,B=7] 

### Ranking functions of CR eval_scale_bitcount_bb21_in(V_sfb_3,B) 
* RF of phase [35]: [-V_sfb_3+21]

#### Partial ranking functions of CR eval_scale_bitcount_bb21_in(V_sfb_3,B) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    -V_sfb_3+21


### Resulting Chains:eval_scale_bitcount_bb21_in(V_sfb_3,B) 
* [[35],37]
* [[35],36]
* [37]
* [36]


### Merging Chains  eval_scale_bitcount_bb21_in/2 into  External patterns of execution 
* [[37],[36,[35]],[37,[35]]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_scale_bitcount_bb29_in/2 
* CE 26 is refined into CE [41] 
* CE 25 is refined into CE [42] 


#### Refined cost equations eval_scale_bitcount_bb29_in/2 
* CE 41: eval_scale_bitcount_bb29_in(V_sfb_5,B) = 0
     [V_sfb_5>=21,B=5] 
* CE 42: eval_scale_bitcount_bb29_in(V_sfb_5,B) = 1+ eval_scale_bitcount_bb29_in(C,D)
     [V_sfb_5>=11,20>=V_sfb_5,V_sfb_5+1=C,D=5,B=5] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb29_in/2 
* CEs [42] --> Loop 38 
* CEs [41] --> Loop 39 

#### Loops of eval_scale_bitcount_bb29_in/2 
* Loop 38: eval_scale_bitcount_bb29_in(V_sfb_5,B)->  eval_scale_bitcount_bb29_in(V_sfb_5',B')
                  [V_sfb_5>=11,20>=V_sfb_5,V_sfb_5+1=V_sfb_5',B'=5,B=5] 
* Loop 39: eval_scale_bitcount_bb29_in(V_sfb_5,B) [V_sfb_5>=21,B=5] 

### Ranking functions of CR eval_scale_bitcount_bb29_in(V_sfb_5,B) 
* RF of phase [38]: [-V_sfb_5+21]

#### Partial ranking functions of CR eval_scale_bitcount_bb29_in(V_sfb_5,B) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    -V_sfb_5+21


### Resulting Chains:eval_scale_bitcount_bb29_in(V_sfb_5,B) 
* [[38],39]


### Merging Chains  eval_scale_bitcount_bb29_in/2 into  External patterns of execution 
* [[39,[38]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb34_in/2 
* CE 18 is refined into CE [43] 
* CE 17 is refined into CE [44] 


#### Refined cost equations eval_scale_bitcount_bb34_in/2 
* CE 43: eval_scale_bitcount_bb34_in(V_k_0,B) = 0
     [V_k_0>=16,B=4] 
* CE 44: eval_scale_bitcount_bb34_in(V_k_0,B) = 1+ eval_scale_bitcount_bb34_in(C,D)
     [V_k_0>=0,15>=V_k_0,V_k_0+1=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb34_in/2 
* CEs [44] --> Loop 40 
* CEs [43] --> Loop 41 

#### Loops of eval_scale_bitcount_bb34_in/2 
* Loop 40: eval_scale_bitcount_bb34_in(V_k_0,B)->  eval_scale_bitcount_bb34_in(V_k_0',B')
                  [V_k_0>=0,15>=V_k_0,V_k_0+1=V_k_0',B'=4,B=4] 
* Loop 41: eval_scale_bitcount_bb34_in(V_k_0,B) [V_k_0>=16,B=4] 

### Ranking functions of CR eval_scale_bitcount_bb34_in(V_k_0,B) 
* RF of phase [40]: [-V_k_0+16]

#### Partial ranking functions of CR eval_scale_bitcount_bb34_in(V_k_0,B) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    -V_k_0+16


### Resulting Chains:eval_scale_bitcount_bb34_in(V_k_0,B) 
* [[40],41]


### Merging Chains  eval_scale_bitcount_bb34_in/2 into  External patterns of execution 
* [[41,[40]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb33_in/1 
* CE 7 is refined into CE [45] 


#### Refined cost equations eval_scale_bitcount_bb33_in/1 
* CE 45: eval_scale_bitcount_bb33_in(B) = 1+ eval_scale_bitcount_bb34_in(C,D):1
     [D=4,C=0] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb33_in/1 
* CEs [45] --> Loop 42 

#### Loops of eval_scale_bitcount_bb33_in/1 
* Loop 42: eval_scale_bitcount_bb33_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_bb33_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_bb33_in(B) 


### Resulting Chains:eval_scale_bitcount_bb33_in(B) 
* [42]


### Merging Chains  eval_scale_bitcount_bb33_in/1 into  External patterns of execution 
* [[42]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb28_in/1 
* CE 19 is refined into CE [46] 


#### Refined cost equations eval_scale_bitcount_bb28_in/1 
* CE 46: eval_scale_bitcount_bb28_in(B) = 1+ eval_scale_bitcount_bb29_in(C,D):1+ eval_scale_bitcount_bb33_in(B):1
     [D=5,C=11] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb28_in/1 
* CEs [46] --> Loop 43 

#### Loops of eval_scale_bitcount_bb28_in/1 
* Loop 43: eval_scale_bitcount_bb28_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_bb28_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_bb28_in(B) 


### Resulting Chains:eval_scale_bitcount_bb28_in(B) 
* [43]


### Merging Chains  eval_scale_bitcount_bb28_in/1 into  External patterns of execution 
* [[43]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb26_in/2 
* CE 28 is refined into CE [47] 
* CE 27 is refined into CE [48] 


#### Refined cost equations eval_scale_bitcount_bb26_in/2 
* CE 47: eval_scale_bitcount_bb26_in(V_sfb_4,B) = 0
     [V_sfb_4>=21,B=6] 
* CE 48: eval_scale_bitcount_bb26_in(V_sfb_4,B) = 1+ eval_scale_bitcount_bb26_in(C,D)
     [V_sfb_4>=11,20>=V_sfb_4,V_sfb_4+1=C,D=6,B=6] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb26_in/2 
* CEs [48] --> Loop 44 
* CEs [47] --> Loop 45 

#### Loops of eval_scale_bitcount_bb26_in/2 
* Loop 44: eval_scale_bitcount_bb26_in(V_sfb_4,B)->  eval_scale_bitcount_bb26_in(V_sfb_4',B')
                  [V_sfb_4>=11,20>=V_sfb_4,V_sfb_4+1=V_sfb_4',B'=6,B=6] 
* Loop 45: eval_scale_bitcount_bb26_in(V_sfb_4,B) [V_sfb_4>=21,B=6] 

### Ranking functions of CR eval_scale_bitcount_bb26_in(V_sfb_4,B) 
* RF of phase [44]: [-V_sfb_4+21]

#### Partial ranking functions of CR eval_scale_bitcount_bb26_in(V_sfb_4,B) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    -V_sfb_4+21


### Resulting Chains:eval_scale_bitcount_bb26_in(V_sfb_4,B) 
* [[44],45]


### Merging Chains  eval_scale_bitcount_bb26_in/2 into  External patterns of execution 
* [[45,[44]]] --> 1 


### Specialization of cost equations eval_scale_bitcount_bb24_in/1 
* CE 23 is refined into CE [49] 
* CE 24 is refined into CE [50] 


#### Refined cost equations eval_scale_bitcount_bb24_in/1 
* CE 49: eval_scale_bitcount_bb24_in(B) = 1+ eval_scale_bitcount_bb26_in(C,D):1+ eval_scale_bitcount_bb28_in(B):1
     [D=6,C=11] 
* CE 50: eval_scale_bitcount_bb24_in(B) = 0+ eval_scale_bitcount_bb28_in(B):1
     [] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb24_in/1 
* CEs [49,50] --> Loop 46 

#### Loops of eval_scale_bitcount_bb24_in/1 
* Loop 46: eval_scale_bitcount_bb24_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_bb24_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_bb24_in(B) 


### Resulting Chains:eval_scale_bitcount_bb24_in(B) 
* [46]


### Merging Chains  eval_scale_bitcount_bb24_in/1 into  External patterns of execution 
* [[46]] --> 1 


### Specialization of cost equations loop_cont_eval_scale_bitcount_bb15_in/3 
* CE 12 is refined into CE [51,52] 
* CE 11 is refined into CE [53] 


#### Refined cost equations loop_cont_eval_scale_bitcount_bb15_in/3 
* CE 51: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) = 1+ eval_scale_bitcount_bb21_in(A,E):1+ eval_scale_bitcount_bb24_in(B):1
     [20>=A,E=7,D=8] 
* CE 52: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) = 1+ eval_scale_bitcount_bb21_in(A,E):2+ eval_scale_bitcount_bb24_in(B):1
     [A>=21,E=7,D=8] 
* CE 53: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) = 0+ eval_scale_bitcount_bb28_in(B):1
     [D=6] 

### Cost equations --> "Loop" of loop_cont_eval_scale_bitcount_bb15_in/3 
* CEs [52] --> Loop 47 
* CEs [51] --> Loop 48 
* CEs [53] --> Loop 49 

#### Loops of loop_cont_eval_scale_bitcount_bb15_in/3 
* Loop 47: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) [A>=21,D=8] 
* Loop 48: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) [20>=A,D=8] 
* Loop 49: loop_cont_eval_scale_bitcount_bb15_in(D,A,B) [D=6] 

### Ranking functions of CR loop_cont_eval_scale_bitcount_bb15_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_scale_bitcount_bb15_in(D,A,B) 


### Resulting Chains:loop_cont_eval_scale_bitcount_bb15_in(D,A,B) 
* [49]
* [48]
* [47]


### Merging Chains  loop_cont_eval_scale_bitcount_bb15_in/3 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 


### Specialization of cost equations eval_scale_bitcount_bb0_in/1 
* CE 3 is refined into CE [54] 
* CE 4 is refined into CE [55,56] 


#### Refined cost equations eval_scale_bitcount_bb0_in/1 
* CE 54: eval_scale_bitcount_bb0_in(B) = 1+ eval_scale_bitcount_bb2_in(C,D):1+ eval_scale_bitcount_bb33_in(B):1
     [D=5,C=0] 
* CE 55: eval_scale_bitcount_bb0_in(B) = 1+ eval_scale_bitcount_bb15_in(C,D,E):1+ loop_cont_eval_scale_bitcount_bb15_in(F,E,B):1
     [F=6,D=6,C=0] 
* CE 56: eval_scale_bitcount_bb0_in(B) = 1+ eval_scale_bitcount_bb15_in(C,D,E):2+ loop_cont_eval_scale_bitcount_bb15_in(F,G,B):2
     [G=11,F=8,E=11,D=8,C=0] 

### Cost equations --> "Loop" of eval_scale_bitcount_bb0_in/1 
* CEs [54,55,56] --> Loop 50 

#### Loops of eval_scale_bitcount_bb0_in/1 
* Loop 50: eval_scale_bitcount_bb0_in(B) [] 

### Ranking functions of CR eval_scale_bitcount_bb0_in(B) 

#### Partial ranking functions of CR eval_scale_bitcount_bb0_in(B) 


### Resulting Chains:eval_scale_bitcount_bb0_in(B) 
* [50]


### Merging Chains  eval_scale_bitcount_bb0_in/1 into  External patterns of execution 
* [[50]] --> 1 


### Specialization of cost equations eval_scale_bitcount_start/1 
* CE 2 is refined into CE [57] 


#### Refined cost equations eval_scale_bitcount_start/1 
* CE 57: eval_scale_bitcount_start(B) = 0+ eval_scale_bitcount_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_scale_bitcount_start/1 
* CEs [57] --> Loop 51 

#### Loops of eval_scale_bitcount_start/1 
* Loop 51: eval_scale_bitcount_start(B) [] 

### Ranking functions of CR eval_scale_bitcount_start(B) 

#### Partial ranking functions of CR eval_scale_bitcount_start(B) 


### Resulting Chains:eval_scale_bitcount_start(B) 
* [51]


### Merging Chains  eval_scale_bitcount_start/1 into  External patterns of execution 
* [[51]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [26] 

 * loop 26:eval_scale_bitcount_bb15_in(V_sfb_2,B,C) -> [eval_scale_bitcount_bb15_in(V_sfb_2',B',C')] 
1
#### Cost of phase [26]:eval_scale_bitcount_bb15_in(V_sfb_2,B,C) -> [eval_scale_bitcount_bb15_in(V_sfb_2',B',C')] 
1*it(26)+0
  Such that:it(26) =< -V_sfb_2+11
it(26) =< -V_sfb_2+V_sfb_2'

#### Cost of phase [26]:eval_scale_bitcount_bb15_in(V_sfb_2,B,C) -> [eval_scale_bitcount_bb15_in(V_sfb_2',B',C')] 
1*it(26)+0
  Such that:it(26) =< -V_sfb_2+11
it(26) =< -V_sfb_2+V_sfb_2'

#### Cost of chains of eval_scale_bitcount_bb15_in(V_sfb_2,B,C):
* Chain [[26],28]: 1*it(26)+0
  Such that:it(26) =< -V_sfb_2+11

  with precondition: [B=6,10>=V_sfb_2,V_sfb_2>=0] 

* Chain [[26],27]: 1*it(26)+0
  Such that:it(26) =< -V_sfb_2+11

  with precondition: [B=8,C=11,10>=V_sfb_2,V_sfb_2>=0] 


#### Cost of loops [29] 

 * loop 29:eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) -> [eval_scale_bitcount_bb4_in(V_i_0',V_sfb_0',B',C',D',E')] 
1
#### Cost of phase [29]:eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E) -> [eval_scale_bitcount_bb4_in(V_i_0',V_sfb_0',B',C',D',E')] 
1*it(29)+0
  Such that:it(29) =< -V_sfb_0+6
it(29) =< -V_sfb_0+V_sfb_0'

#### Cost of chains of eval_scale_bitcount_bb4_in(V_i_0,V_sfb_0,B,C,D,E):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -V_sfb_0+6

  with precondition: [B=2,D=6,E=6,V_i_0=C,2>=V_i_0,5>=V_sfb_0,V_sfb_0>=0] 


#### Cost of loops [31] 

 * loop 31:eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) -> [eval_scale_bitcount_bb9_in(V_i_0',V_sfb_0',V_sfb_1',B',C')] 
1
#### Cost of phase [31]:eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C) -> [eval_scale_bitcount_bb9_in(V_i_0',V_sfb_0',V_sfb_1',B',C')] 
1*it(31)+0
  Such that:it(31) =< -V_sfb_1+12
it(31) =< -V_sfb_1+V_sfb_1'

#### Cost of chains of eval_scale_bitcount_bb9_in(V_i_0,V_sfb_0,V_sfb_1,B,C):
* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< -V_sfb_1+12

  with precondition: [B=3,V_i_0+1=C,11>=V_sfb_1] 

* Chain [32]: 0
  with precondition: [B=3,C=V_i_0+1,V_sfb_1>=12] 


#### Cost of loops [33] 

 * loop 33:eval_scale_bitcount_bb2_in(V_i_0,B) -> [eval_scale_bitcount_bb2_in(V_i_0',B')] 
2*s(4)+3
  Such that:s(3) =< 6
s(4) =< s(3)

#### Cost of phase [33]:eval_scale_bitcount_bb2_in(V_i_0,B) -> [eval_scale_bitcount_bb2_in(V_i_0',B')] 
3*it(33)+2*s(5)+0
  Such that:aux(3) =< -V_i_0+3
aux(4) =< -V_i_0+V_i_0'
aux(2) =< aux(3)
it(33) =< aux(3)
aux(2) =< aux(4)
it(33) =< aux(4)
s(6) =< aux(2)*6
s(5) =< s(6)

#### Cost of chains of eval_scale_bitcount_bb2_in(V_i_0,B):
* Chain [[33],34]: 3*it(33)+2*s(5)+0
  Such that:aux(5) =< -V_i_0+3
it(33) =< aux(5)
s(6) =< aux(5)*6
s(5) =< s(6)

  with precondition: [B=5,2>=V_i_0] 


#### Cost of loops [35] 

 * loop 35:eval_scale_bitcount_bb21_in(V_sfb_3,B) -> [eval_scale_bitcount_bb21_in(V_sfb_3',B')] 
1
#### Cost of phase [35]:eval_scale_bitcount_bb21_in(V_sfb_3,B) -> [eval_scale_bitcount_bb21_in(V_sfb_3',B')] 
1*it(35)+0
  Such that:it(35) =< -V_sfb_3+21
it(35) =< -V_sfb_3+V_sfb_3'

#### Cost of phase [35]:eval_scale_bitcount_bb21_in(V_sfb_3,B) -> [eval_scale_bitcount_bb21_in(V_sfb_3',B')] 
1*it(35)+0
  Such that:it(35) =< -V_sfb_3+21
it(35) =< -V_sfb_3+V_sfb_3'

#### Cost of chains of eval_scale_bitcount_bb21_in(V_sfb_3,B):
* Chain [[35],37]: 1*it(35)+0
  Such that:it(35) =< -V_sfb_3+20

  with precondition: [B=7,19>=V_sfb_3] 

* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< -V_sfb_3+21

  with precondition: [B=7,20>=V_sfb_3] 

* Chain [37]: 0
  with precondition: [B=7,20>=V_sfb_3] 

* Chain [36]: 0
  with precondition: [B=7,V_sfb_3>=21] 


#### Cost of loops [38] 

 * loop 38:eval_scale_bitcount_bb29_in(V_sfb_5,B) -> [eval_scale_bitcount_bb29_in(V_sfb_5',B')] 
1
#### Cost of phase [38]:eval_scale_bitcount_bb29_in(V_sfb_5,B) -> [eval_scale_bitcount_bb29_in(V_sfb_5',B')] 
1*it(38)+0
  Such that:it(38) =< -V_sfb_5+21
it(38) =< -V_sfb_5+V_sfb_5'

#### Cost of chains of eval_scale_bitcount_bb29_in(V_sfb_5,B):
* Chain [[38],39]: 1*it(38)+0
  Such that:it(38) =< -V_sfb_5+21

  with precondition: [B=5,20>=V_sfb_5,V_sfb_5>=11] 


#### Cost of loops [40] 

 * loop 40:eval_scale_bitcount_bb34_in(V_k_0,B) -> [eval_scale_bitcount_bb34_in(V_k_0',B')] 
1
#### Cost of phase [40]:eval_scale_bitcount_bb34_in(V_k_0,B) -> [eval_scale_bitcount_bb34_in(V_k_0',B')] 
1*it(40)+0
  Such that:it(40) =< -V_k_0+16
it(40) =< -V_k_0+V_k_0'

#### Cost of chains of eval_scale_bitcount_bb34_in(V_k_0,B):
* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< -V_k_0+16

  with precondition: [B=4,15>=V_k_0,V_k_0>=0] 


#### Cost of chains of eval_scale_bitcount_bb33_in(B):
* Chain [42]: 1*s(9)+1
  Such that:s(9) =< 16

  with precondition: [] 


#### Cost of chains of eval_scale_bitcount_bb28_in(B):
* Chain [43]: 1*s(10)+1*s(11)+2
  Such that:s(10) =< 10
s(11) =< 16

  with precondition: [] 


#### Cost of loops [44] 

 * loop 44:eval_scale_bitcount_bb26_in(V_sfb_4,B) -> [eval_scale_bitcount_bb26_in(V_sfb_4',B')] 
1
#### Cost of phase [44]:eval_scale_bitcount_bb26_in(V_sfb_4,B) -> [eval_scale_bitcount_bb26_in(V_sfb_4',B')] 
1*it(44)+0
  Such that:it(44) =< -V_sfb_4+21
it(44) =< -V_sfb_4+V_sfb_4'

#### Cost of chains of eval_scale_bitcount_bb26_in(V_sfb_4,B):
* Chain [[44],45]: 1*it(44)+0
  Such that:it(44) =< -V_sfb_4+21

  with precondition: [B=6,20>=V_sfb_4,V_sfb_4>=11] 


#### Cost of chains of eval_scale_bitcount_bb24_in(B):
* Chain [46]: 65
  with precondition: [] 


#### Cost of chains of loop_cont_eval_scale_bitcount_bb15_in(D,A,B):
* Chain [49]: 1*s(17)+1*s(18)+2
  Such that:s(17) =< 10
s(18) =< 16

  with precondition: [D=6] 

* Chain [48]: 1*s(19)+1*s(20)+66
  Such that:s(19) =< -A+20
s(20) =< -A+21

  with precondition: [D=8,20>=A] 

* Chain [47]: 66
  with precondition: [D=8,A>=21] 


#### Cost of chains of eval_scale_bitcount_bb0_in(B):
* Chain [50]: 195
  with precondition: [] 


#### Cost of chains of eval_scale_bitcount_start(B):
* Chain [51]: 195
  with precondition: [] 


Closed-form bounds of eval_scale_bitcount_start(B): 
-------------------------------------
* Chain [51] with precondition: [] 
    - Upper bound: 195 
    - Complexity: constant 

### Maximum cost of eval_scale_bitcount_start(B): 195 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 63 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 53 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 228 ms.

