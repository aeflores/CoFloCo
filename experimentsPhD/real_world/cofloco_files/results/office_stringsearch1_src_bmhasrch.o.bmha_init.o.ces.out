Warning: Ignored call to eval_bmha_init_stop/1 in equation loop_cont_eval_bmha_init_bb12_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bmha_init_bb3_in/7]
1. recursive  : [eval_bmha_init_bb10_in/6,eval_bmha_init_bb1_in/5,eval_bmha_init_bb6_in/6,eval_bmha_init_bb8_in/6,loop_cont_eval_bmha_init_bb3_in/7]
2. recursive  : [eval_bmha_init_bb12_in/3,eval_bmha_init_bb15_in/3]
3. non_recursive  : [loop_cont_eval_bmha_init_bb12_in/2]
4. non_recursive  : [loop_cont_eval_bmha_init_bb1_in/4]
5. non_recursive  : [eval_bmha_init_2/3]
6. non_recursive  : [eval_bmha_init_1/3]
7. non_recursive  : [eval_bmha_init_bb0_in/3]
8. non_recursive  : [eval_bmha_init_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bmha_init_bb3_in/7
1. SCC is partially evaluated into eval_bmha_init_bb1_in/5
2. SCC is partially evaluated into eval_bmha_init_bb12_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_bmha_init_bb1_in/4
5. SCC is partially evaluated into eval_bmha_init_2/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_bmha_init_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bmha_init_bb3_in/7 
* CE 7 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations eval_bmha_init_bb3_in/7 
* CE 12: eval_bmha_init_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=C+1,C>=0,255>=B,D=2] 
* CE 13: eval_bmha_init_bb3_in(A,B,C,D,A,B,C) = 0
     [A>=C+1,0>=C+1,255>=B,D=2] 
* CE 14: eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) = 1+ eval_bmha_init_bb3_in(V__patlen,V_i_0,F,G,C,D,E)
     [V__patlen>=V_j_0+1,V_j_0>=0,255>=V_i_0,V_j_0=F+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_bmha_init_bb3_in/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_bmha_init_bb3_in/7 
* Loop 11: eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E)->  eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0',B',C,D,E)
                  [V__patlen>=V_j_0+1,V_j_0>=0,255>=V_i_0,V_j_0=V_j_0'+1,B'=2,B=2] 
* Loop 12: eval_bmha_init_bb3_in(A,B,C,D,A,B,C) [A>=C+1,C>=0,255>=B,D=2] 
* Loop 13: eval_bmha_init_bb3_in(A,B,C,D,A,B,C) [A>=C+1,0>=C+1,255>=B,D=2] 

### Ranking functions of CR eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [11]: [V_j_0+1]

#### Partial ranking functions of CR eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_j_0+1


### Resulting Chains:eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_bmha_init_bb3_in/7 into  External patterns of execution 
* [[13,[11]]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 
* [[12,[11]]] --> 4 


### Specialization of cost equations eval_bmha_init_bb1_in/5 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16,17,18,19] 


#### Refined cost equations eval_bmha_init_bb1_in/5 
* CE 15: eval_bmha_init_bb1_in(A,B,C,A,D) = 0
     [B>=256,D=0,C=3] 
* CE 16: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) = 2+ eval_bmha_init_bb3_in(V__patlen,V_i_0,E,F,V__patlen,V_i_0,G):1+ eval_bmha_init_bb1_in(V__patlen,H,B,C,D)
     [V__patlen>=1,255>=V_i_0,V_i_0+1=H,V__patlen=E+1,G+1=0,F=2] 
* CE 17: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) = 2+ eval_bmha_init_bb3_in(V__patlen,V_i_0,E,F,V__patlen,V_i_0,G):2+ eval_bmha_init_bb1_in(V__patlen,H,B,C,D)
     [255>=V_i_0,0>=V__patlen,V_i_0+1=H,V__patlen=G+1,V__patlen=E+1,F=2] 
* CE 18: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) = 2+ eval_bmha_init_bb3_in(V__patlen,V_i_0,E,F,V__patlen,V_i_0,G):3+ eval_bmha_init_bb1_in(V__patlen,H,B,C,D)
     [V__patlen>=1,255>=V_i_0,V_i_0+1=H,V__patlen=G+1,V__patlen=E+1,F=2] 
* CE 19: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) = 2+ eval_bmha_init_bb3_in(V__patlen,V_i_0,E,F,V__patlen,V_i_0,G):4+ eval_bmha_init_bb1_in(V__patlen,H,B,C,D)
     [V__patlen>=G+2,G>=0,255>=V_i_0,V_i_0+1=H,V__patlen=E+1,F=2] 

### Cost equations --> "Loop" of eval_bmha_init_bb1_in/5 
* CEs [16,18,19] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 

#### Loops of eval_bmha_init_bb1_in/5 
* Loop 14: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D)->  eval_bmha_init_bb1_in(V__patlen,V_i_0',B,C,D)
                  [V__patlen>=1,255>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 15: eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D)->  eval_bmha_init_bb1_in(V__patlen,V_i_0',B,C,D)
                  [255>=V_i_0,0>=V__patlen,V_i_0+1=V_i_0'] 
* Loop 16: eval_bmha_init_bb1_in(A,B,C,A,D) [B>=256,D=0,C=3] 

### Ranking functions of CR eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* RF of phase [14]: [-V_i_0+256]
* RF of phase [15]: [-V_i_0+256]

#### Partial ranking functions of CR eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -V_i_0+256
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V_i_0+256


### Resulting Chains:eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) 
* [[15],16]
* [[14],16]


### Merging Chains  eval_bmha_init_bb1_in/5 into  External patterns of execution 
* [[16,[15]]] --> 1 
* [[16,[14]]] --> 2 


### Specialization of cost equations eval_bmha_init_bb12_in/3 
* CE 11 is refined into CE [20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations eval_bmha_init_bb12_in/3 
* CE 20: eval_bmha_init_bb12_in(V__patlen,V_i_1,B) = 0
     [V_i_1+1>=V__patlen,B=4] 
* CE 21: eval_bmha_init_bb12_in(V__patlen,V_i_1,B) = 1+ eval_bmha_init_bb12_in(V__patlen,C,D)
     [V__patlen>=V_i_1+2,V_i_1+1=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_bmha_init_bb12_in/3 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_bmha_init_bb12_in/3 
* Loop 17: eval_bmha_init_bb12_in(V__patlen,V_i_1,B)->  eval_bmha_init_bb12_in(V__patlen,V_i_1',B')
                  [V__patlen>=V_i_1+2,V_i_1+1=V_i_1',B'=4,B=4] 
* Loop 18: eval_bmha_init_bb12_in(V__patlen,V_i_1,B) [V_i_1+1>=V__patlen,B=4] 

### Ranking functions of CR eval_bmha_init_bb12_in(V__patlen,V_i_1,B) 
* RF of phase [17]: [V__patlen-V_i_1-1]

#### Partial ranking functions of CR eval_bmha_init_bb12_in(V__patlen,V_i_1,B) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__patlen-V_i_1-1


### Resulting Chains:eval_bmha_init_bb12_in(V__patlen,V_i_1,B) 
* [[17],18]
* [18]


### Merging Chains  eval_bmha_init_bb12_in/3 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations loop_cont_eval_bmha_init_bb1_in/4 
* CE 6 is refined into CE [22,23] 


#### Refined cost equations loop_cont_eval_bmha_init_bb1_in/4 
* CE 22: loop_cont_eval_bmha_init_bb1_in(F,A,B,C) = 1+ eval_bmha_init_bb12_in(A,B,G):1
     [B+1>=A,G=4,F=3] 
* CE 23: loop_cont_eval_bmha_init_bb1_in(F,A,B,C) = 1+ eval_bmha_init_bb12_in(A,B,G):2
     [A>=B+2,G=4,F=3] 

### Cost equations --> "Loop" of loop_cont_eval_bmha_init_bb1_in/4 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 

#### Loops of loop_cont_eval_bmha_init_bb1_in/4 
* Loop 19: loop_cont_eval_bmha_init_bb1_in(F,A,B,C) [A>=B+2,F=3] 
* Loop 20: loop_cont_eval_bmha_init_bb1_in(F,A,B,C) [B+1>=A,F=3] 

### Ranking functions of CR loop_cont_eval_bmha_init_bb1_in(F,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_bmha_init_bb1_in(F,A,B,C) 


### Resulting Chains:loop_cont_eval_bmha_init_bb1_in(F,A,B,C) 
* [20]
* [19]


### Merging Chains  loop_cont_eval_bmha_init_bb1_in/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_bmha_init_2/3 
* CE 3 is refined into CE [24,25,26] 


#### Refined cost equations eval_bmha_init_2/3 
* CE 24: eval_bmha_init_2(V__patlen,V_0,B) = 1+ eval_bmha_init_bb1_in(V_0,C,D,V_0,E):1+ loop_cont_eval_bmha_init_bb1_in(F,V_0,G,B):1
     [0>=V_0,G=0,F=3,E=0,D=3,C=0] 
* CE 25: eval_bmha_init_2(V__patlen,V_0,B) = 1+ eval_bmha_init_bb1_in(C,D,E,F,G):2+ loop_cont_eval_bmha_init_bb1_in(H,I,J,B):1
     [J=0,I=1,H=3,G=0,F=1,E=3,D=0,C=1,V_0=1] 
* CE 26: eval_bmha_init_2(V__patlen,V_0,B) = 1+ eval_bmha_init_bb1_in(V_0,C,D,V_0,E):2+ loop_cont_eval_bmha_init_bb1_in(F,V_0,G,B):2
     [V_0>=2,G=0,F=3,E=0,D=3,C=0] 

### Cost equations --> "Loop" of eval_bmha_init_2/3 
* CEs [26] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of eval_bmha_init_2/3 
* Loop 21: eval_bmha_init_2(V__patlen,V_0,B) [V_0>=2] 
* Loop 22: eval_bmha_init_2(V__patlen,V_0,B) [0>=V_0] 
* Loop 23: eval_bmha_init_2(V__patlen,V_0,B) [V_0=1] 

### Ranking functions of CR eval_bmha_init_2(V__patlen,V_0,B) 

#### Partial ranking functions of CR eval_bmha_init_2(V__patlen,V_0,B) 


### Resulting Chains:eval_bmha_init_2(V__patlen,V_0,B) 
* [23]
* [22]
* [21]


### Merging Chains  eval_bmha_init_2/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 


### Specialization of cost equations eval_bmha_init_start/3 
* CE 2 is refined into CE [27,28,29] 


#### Refined cost equations eval_bmha_init_start/3 
* CE 27: eval_bmha_init_start(V__patlen,V__skip2,B) = 0+ eval_bmha_init_2(V__patlen,C,B):1
     [C=1] 
* CE 28: eval_bmha_init_start(V__patlen,V__skip2,B) = 0+ eval_bmha_init_2(V__patlen,C,B):2
     [0>=C] 
* CE 29: eval_bmha_init_start(V__patlen,V__skip2,B) = 0+ eval_bmha_init_2(V__patlen,C,B):3
     [C>=2] 

### Cost equations --> "Loop" of eval_bmha_init_start/3 
* CEs [27,28,29] --> Loop 24 

#### Loops of eval_bmha_init_start/3 
* Loop 24: eval_bmha_init_start(V__patlen,V__skip2,B) [] 

### Ranking functions of CR eval_bmha_init_start(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmha_init_start(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmha_init_start(V__patlen,V__skip2,B) 
* [24]


### Merging Chains  eval_bmha_init_start/3 into  External patterns of execution 
* [[24]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) -> [eval_bmha_init_bb3_in(V__patlen',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [11]:eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) -> [eval_bmha_init_bb3_in(V__patlen',V_i_0',V_j_0',B',C',D',E')] 
1*it(11)+0
  Such that:it(11) =< V_j_0+1
it(11) =< V_j_0-V_j_0'

#### Cost of phase [11]:eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E) -> [eval_bmha_init_bb3_in(V__patlen',V_i_0',V_j_0',B',C',D',E')] 
1*it(11)+0
  Such that:it(11) =< V_j_0+1
it(11) =< V_j_0-V_j_0'

#### Cost of chains of eval_bmha_init_bb3_in(V__patlen,V_i_0,V_j_0,B,C,D,E):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_j_0+1

  with precondition: [B=2,E+1=0,V__patlen=C,V_i_0=D,255>=V_i_0,V_j_0>=0,V__patlen>=V_j_0+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_j_0-E

  with precondition: [B=2,V__patlen=C,V_i_0=D,255>=V_i_0,E>=0,V__patlen>=V_j_0+1,V_j_0>=E+1] 

* Chain [13]: 0
  with precondition: [B=2,V__patlen=C,V_i_0=D,V_j_0=E,255>=V_i_0,0>=V_j_0+1,V__patlen>=V_j_0+1] 

* Chain [12]: 0
  with precondition: [B=2,V__patlen=C,V_i_0=D,V_j_0=E,255>=V_i_0,V_j_0>=0,V__patlen>=V_j_0+1] 


#### Cost of loops [15] 

 * loop 15:eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmha_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
2
#### Cost of phase [15]:eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmha_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
2*it(15)+0
  Such that:it(15) =< -V_i_0+256
it(15) =< -V_i_0+V_i_0'

#### Cost of loops [14] 

 * loop 14:eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmha_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
2*s(4)+2
  Such that:s(3) =< V__patlen
s(4) =< s(3)

#### Cost of phase [14]:eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D) -> [eval_bmha_init_bb1_in(V__patlen',V_i_0',B',C',D')] 
2*it(14)+2*s(5)+0
  Such that:aux(2) =< V__patlen
it(14) =< -V_i_0+256
it(14) =< -V_i_0+V_i_0'
s(6) =< it(14)*aux(2)
s(5) =< s(6)

#### Cost of chains of eval_bmha_init_bb1_in(V__patlen,V_i_0,B,C,D):
* Chain [[15],16]: 2*it(15)+0
  Such that:it(15) =< -V_i_0+256

  with precondition: [B=3,D=0,V__patlen=C,0>=V__patlen,255>=V_i_0] 

* Chain [[14],16]: 2*it(14)+2*s(5)+0
  Such that:it(14) =< -V_i_0+256
aux(2) =< C
s(6) =< it(14)*aux(2)
s(5) =< s(6)

  with precondition: [B=3,D=0,V__patlen=C,255>=V_i_0,V__patlen>=1] 


#### Cost of loops [17] 

 * loop 17:eval_bmha_init_bb12_in(V__patlen,V_i_1,B) -> [eval_bmha_init_bb12_in(V__patlen',V_i_1',B')] 
1
#### Cost of phase [17]:eval_bmha_init_bb12_in(V__patlen,V_i_1,B) -> [eval_bmha_init_bb12_in(V__patlen',V_i_1',B')] 
1*it(17)+0
  Such that:it(17) =< V__patlen-V_i_1
it(17) =< V__patlen-V_i_1-V__patlen'+V_i_1'

#### Cost of chains of eval_bmha_init_bb12_in(V__patlen,V_i_1,B):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V__patlen-V_i_1

  with precondition: [B=4,V__patlen>=V_i_1+2] 

* Chain [18]: 0
  with precondition: [B=4,V_i_1+1>=V__patlen] 


#### Cost of chains of loop_cont_eval_bmha_init_bb1_in(F,A,B,C):
* Chain [20]: 1
  with precondition: [F=3,B+1>=A] 

* Chain [19]: 1*s(7)+1
  Such that:s(7) =< A-B

  with precondition: [F=3,A>=B+2] 


#### Cost of chains of eval_bmha_init_2(V__patlen,V_0,B):
* Chain [23]: 2*s(8)+2*s(11)+2
  Such that:s(9) =< 1
s(8) =< 256
s(10) =< s(8)*s(9)
s(11) =< s(10)

  with precondition: [V_0=1] 

* Chain [22]: 2*s(12)+2
  Such that:s(12) =< 256

  with precondition: [0>=V_0] 

* Chain [21]: 2*s(13)+2*s(16)+1*s(17)+2
  Such that:s(13) =< 256
aux(3) =< V_0
s(17) =< aux(3)
s(15) =< s(13)*aux(3)
s(16) =< s(15)

  with precondition: [V_0>=2] 


#### Cost of chains of eval_bmha_init_start(V__patlen,V__skip2,B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 


Closed-form bounds of eval_bmha_init_start(V__patlen,V__skip2,B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bmha_init_start(V__patlen,V__skip2,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 32 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 53 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 52 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 25 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 185 ms.

