Warning: Ignored call to eval_setdump_stop/1 in equation eval_setdump_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_setdump_bb1_in/5]
1. non_recursive  : [eval_setdump_bb9_in/1]
2. non_recursive  : [eval_setdump_11/1]
3. non_recursive  : [eval_setdump_10/2]
4. non_recursive  : [eval_setdump_13/1]
5. non_recursive  : [eval_setdump_12/1]
6. non_recursive  : [eval_setdump_17/1]
7. non_recursive  : [eval_setdump_16/1]
8. non_recursive  : [eval_setdump_15/2]
9. non_recursive  : [eval_setdump_14/2]
10. non_recursive  : [eval_setdump_21/1]
11. non_recursive  : [eval_setdump_20/1]
12. non_recursive  : [eval_setdump_19/2]
13. non_recursive  : [eval_setdump_18/2]
14. non_recursive  : [eval_setdump_NewDefault_in/2]
15. non_recursive  : [loop_cont_eval_setdump_bb1_in/3]
16. non_recursive  : [eval_setdump_bb0_in/2]
17. non_recursive  : [eval_setdump_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_setdump_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_setdump_NewDefault_in/2
15. SCC is partially evaluated into loop_cont_eval_setdump_bb1_in/3
16. SCC is partially evaluated into eval_setdump_bb0_in/2
17. SCC is partially evaluated into eval_setdump_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_setdump_bb1_in/5 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15] 
* CE 4 is refined into CE [16] 
* CE 5 is refined into CE [17] 


#### Refined cost equations eval_setdump_bb1_in/5 
* CE 13: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) = 0
     [16256>=127*V_cnum_0+V_firstnz_0,V_firstnz_0>=0,0>=V_cnum_0,B=4] 
* CE 14: eval_setdump_bb1_in(A,B,C,D,A) = 0
     [16256>=127*C+B,B>=0,0>=C,D=3] 
* CE 15: eval_setdump_bb1_in(A,B,C,D,B) = 0
     [16256>=127*C+B,B>=0,0>=C,D=2] 
* CE 16: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) = 1+ eval_setdump_bb1_in(V_mask,D,E,B,C)
     [16256>=127*V_cnum_0+V_firstnz_0,V_cnum_0>=1,V_firstnz_0>=0,V_cnum_0=E+1,V_cnum_0=D+1] 
* CE 17: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) = 1+ eval_setdump_bb1_in(V_mask,V_firstnz_0,D,B,C)
     [16256>=127*V_cnum_0+V_firstnz_0,V_cnum_0>=1,V_firstnz_0>=0,V_cnum_0=D+1] 

### Cost equations --> "Loop" of eval_setdump_bb1_in/5 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 

#### Loops of eval_setdump_bb1_in/5 
* Loop 12: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C)->  eval_setdump_bb1_in(V_mask,V_firstnz_0',V_cnum_0',B,C)
                  [16256>=127*V_cnum_0+V_firstnz_0,V_cnum_0>=1,V_firstnz_0>=0,V_cnum_0=V_cnum_0'+1,V_cnum_0=V_firstnz_0'+1] 
* Loop 13: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C)->  eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0',B,C)
                  [16256>=127*V_cnum_0+V_firstnz_0,V_cnum_0>=1,V_firstnz_0>=0,V_cnum_0=V_cnum_0'+1] 
* Loop 14: eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) [16256>=127*V_cnum_0+V_firstnz_0,V_firstnz_0>=0,0>=V_cnum_0,B=4] 
* Loop 15: eval_setdump_bb1_in(A,B,C,D,A) [16256>=127*C+B,B>=0,0>=C,D=3] 
* Loop 16: eval_setdump_bb1_in(A,B,C,D,B) [16256>=127*C+B,B>=0,0>=C,D=2] 

### Ranking functions of CR eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) 
* RF of phase [12,13]: [V_cnum_0]

#### Partial ranking functions of CR eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1,13:1]:
    V_cnum_0


### Resulting Chains:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) 
* [[12,13],16]
* [[12,13],15]
* [[12,13],14]


### Merging Chains  eval_setdump_bb1_in/5 into  External patterns of execution 
* [[16,[12,13]]] --> 1 
* [[15,[12,13]]] --> 2 
* [[14,[12,13]]] --> 3 


### Specialization of cost equations eval_setdump_NewDefault_in/2 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_setdump_NewDefault_in/2 
* CE 18: eval_setdump_NewDefault_in(V_mask,B) = 0
     [] 

### Cost equations --> "Loop" of eval_setdump_NewDefault_in/2 
* CEs [18] --> Loop 17 

#### Loops of eval_setdump_NewDefault_in/2 
* Loop 17: eval_setdump_NewDefault_in(V_mask,B) [] 

### Ranking functions of CR eval_setdump_NewDefault_in(V_mask,B) 

#### Partial ranking functions of CR eval_setdump_NewDefault_in(V_mask,B) 


### Resulting Chains:eval_setdump_NewDefault_in(V_mask,B) 
* [17]


### Merging Chains  eval_setdump_NewDefault_in/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations loop_cont_eval_setdump_bb1_in/3 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 


#### Refined cost equations loop_cont_eval_setdump_bb1_in/3 
* CE 19: loop_cont_eval_setdump_bb1_in(D,A,B) = 0
     [D=4] 
* CE 20: loop_cont_eval_setdump_bb1_in(D,A,B) = 0+ eval_setdump_NewDefault_in(A,B):1
     [D=3] 
* CE 21: loop_cont_eval_setdump_bb1_in(D,A,B) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_setdump_bb1_in/3 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of loop_cont_eval_setdump_bb1_in/3 
* Loop 18: loop_cont_eval_setdump_bb1_in(D,A,B) [D=4] 
* Loop 19: loop_cont_eval_setdump_bb1_in(D,A,B) [D=3] 
* Loop 20: loop_cont_eval_setdump_bb1_in(D,A,B) [D=2] 

### Ranking functions of CR loop_cont_eval_setdump_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_setdump_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_setdump_bb1_in(D,A,B) 
* [20]
* [19]
* [18]


### Merging Chains  loop_cont_eval_setdump_bb1_in/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_setdump_bb0_in/2 
* CE 3 is refined into CE [22,23,24] 


#### Refined cost equations eval_setdump_bb0_in/2 
* CE 22: eval_setdump_bb0_in(V_mask,B) = 1+ eval_setdump_bb1_in(V_mask,C,D,E,F):1+ loop_cont_eval_setdump_bb1_in(G,F,B):1
     [F>=0,G=2,E=2,D=128,C=0] 
* CE 23: eval_setdump_bb0_in(V_mask,B) = 1+ eval_setdump_bb1_in(V_mask,C,D,E,V_mask):2+ loop_cont_eval_setdump_bb1_in(F,V_mask,B):2
     [F=3,E=3,D=128,C=0] 
* CE 24: eval_setdump_bb0_in(V_mask,B) = 1+ eval_setdump_bb1_in(V_mask,C,D,E,F):3+ loop_cont_eval_setdump_bb1_in(G,F,B):3
     [G=4,E=4,D=128,C=0] 

### Cost equations --> "Loop" of eval_setdump_bb0_in/2 
* CEs [22,23,24] --> Loop 21 

#### Loops of eval_setdump_bb0_in/2 
* Loop 21: eval_setdump_bb0_in(V_mask,B) [] 

### Ranking functions of CR eval_setdump_bb0_in(V_mask,B) 

#### Partial ranking functions of CR eval_setdump_bb0_in(V_mask,B) 


### Resulting Chains:eval_setdump_bb0_in(V_mask,B) 
* [21]


### Merging Chains  eval_setdump_bb0_in/2 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_setdump_start/2 
* CE 2 is refined into CE [25] 


#### Refined cost equations eval_setdump_start/2 
* CE 25: eval_setdump_start(V_mask,B) = 0+ eval_setdump_bb0_in(V_mask,B):1
     [] 

### Cost equations --> "Loop" of eval_setdump_start/2 
* CEs [25] --> Loop 22 

#### Loops of eval_setdump_start/2 
* Loop 22: eval_setdump_start(V_mask,B) [] 

### Ranking functions of CR eval_setdump_start(V_mask,B) 

#### Partial ranking functions of CR eval_setdump_start(V_mask,B) 


### Resulting Chains:eval_setdump_start(V_mask,B) 
* [22]


### Merging Chains  eval_setdump_start/2 into  External patterns of execution 
* [[22]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [12,13] 

 * loop 12:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) -> [eval_setdump_bb1_in(V_mask',V_firstnz_0',V_cnum_0',B',C')] 
1
 * loop 13:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) -> [eval_setdump_bb1_in(V_mask',V_firstnz_0',V_cnum_0',B',C')] 
1
#### Cost of phase [12,13]:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) -> [eval_setdump_bb1_in(V_mask',V_firstnz_0',V_cnum_0',B',C')] 
2*it(12)+0
  Such that:aux(1) =< V_cnum_0
aux(2) =< V_cnum_0-V_cnum_0'
it(12) =< aux(1)
it(12) =< aux(2)

#### Cost of phase [12,13]:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) -> [eval_setdump_bb1_in(V_mask',V_firstnz_0',V_cnum_0',B',C')] 
2*it(12)+0
  Such that:aux(1) =< V_cnum_0
aux(2) =< V_cnum_0-V_cnum_0'
it(12) =< aux(1)
it(12) =< aux(2)

#### Cost of phase [12,13]:eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C) -> [eval_setdump_bb1_in(V_mask',V_firstnz_0',V_cnum_0',B',C')] 
2*it(12)+0
  Such that:aux(1) =< V_cnum_0
aux(2) =< V_cnum_0-V_cnum_0'
it(12) =< aux(1)
it(12) =< aux(2)

#### Cost of chains of eval_setdump_bb1_in(V_mask,V_firstnz_0,V_cnum_0,B,C):
* Chain [[12,13],16]: 2*it(12)+0
  Such that:aux(3) =< V_cnum_0
it(12) =< aux(3)

  with precondition: [B=2,V_firstnz_0>=0,V_cnum_0>=1,C>=0,16256>=127*V_cnum_0+V_firstnz_0] 

* Chain [[12,13],15]: 2*it(12)+0
  Such that:aux(4) =< V_cnum_0
it(12) =< aux(4)

  with precondition: [B=3,V_mask=C,V_firstnz_0>=0,V_cnum_0>=1,16256>=127*V_cnum_0+V_firstnz_0] 

* Chain [[12,13],14]: 2*it(12)+0
  Such that:aux(5) =< V_cnum_0
it(12) =< aux(5)

  with precondition: [B=4,V_firstnz_0>=0,V_cnum_0>=1,16256>=127*V_cnum_0+V_firstnz_0] 


#### Cost of chains of eval_setdump_NewDefault_in(V_mask,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_setdump_bb1_in(D,A,B):
* Chain [20]: 0
  with precondition: [D=2] 

* Chain [19]: 0
  with precondition: [D=3] 

* Chain [18]: 0
  with precondition: [D=4] 


#### Cost of chains of eval_setdump_bb0_in(V_mask,B):
* Chain [21]: 769
  with precondition: [] 


#### Cost of chains of eval_setdump_start(V_mask,B):
* Chain [22]: 769
  with precondition: [] 


Closed-form bounds of eval_setdump_start(V_mask,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 769 
    - Complexity: constant 

### Maximum cost of eval_setdump_start(V_mask,B): 769 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 30 ms.
* Invariants computed in 68 ms.
   - Backward Invariants 40 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 90 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 84 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 35 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 345 ms.

