Warning: Ignored call to eval_stack_param_read_stop/1 in equation eval_stack_param_read_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_stack_param_read_5/5,eval_stack_param_read_6/5,eval_stack_param_read_bb1_in/4,eval_stack_param_read_bb5_in/5]
1. non_recursive  : [eval_stack_param_read_bb6_in/1]
2. non_recursive  : [eval_stack_param_read_12/1]
3. non_recursive  : [eval_stack_param_read_11/2]
4. non_recursive  : [loop_cont_eval_stack_param_read_bb1_in/3]
5. non_recursive  : [eval_stack_param_read_bb0_in/1]
6. non_recursive  : [eval_stack_param_read_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_stack_param_read_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_stack_param_read_bb1_in/3
5. SCC is partially evaluated into eval_stack_param_read_bb0_in/1
6. SCC is partially evaluated into eval_stack_param_read_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_stack_param_read_bb1_in/4 
* CE 4 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations eval_stack_param_read_bb1_in/4 
* CE 11: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) = 0
     [V_count_0>=1,C+1=V_index_0,B=2] 
* CE 12: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) = 0
     [0>=V_count_0+1,C+1=V_index_0,B=2] 
* CE 13: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) = 0
     [B=3,V_count_0=0] 
* CE 14: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) = 1+ eval_stack_param_read_bb1_in(D,E,B,C)
     [V_count_0>=1,V_count_0=D+1,E=V_index_0+2] 
* CE 15: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) = 1+ eval_stack_param_read_bb1_in(D,E,B,C)
     [0>=V_count_0+1,V_count_0=D+1,E=V_index_0+2] 

### Cost equations --> "Loop" of eval_stack_param_read_bb1_in/4 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_stack_param_read_bb1_in/4 
* Loop 10: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C)->  eval_stack_param_read_bb1_in(V_count_0',V_index_0',B,C)
                  [V_count_0>=1,V_index_0+2=V_index_0',V_count_0=V_count_0'+1] 
* Loop 11: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C)->  eval_stack_param_read_bb1_in(V_count_0',V_index_0',B,C)
                  [0>=V_count_0+1,V_index_0+2=V_index_0',V_count_0=V_count_0'+1] 
* Loop 12: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) [V_count_0>=1,V_index_0=C+1,B=2] 
* Loop 13: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) [0>=V_count_0+1,V_index_0=C+1,B=2] 
* Loop 14: eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) [B=3,V_count_0=0] 

### Ranking functions of CR eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) 
* RF of phase [10]: [V_count_0]

#### Partial ranking functions of CR eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_count_0


### Resulting Chains:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) 
* [[11]]...
* [[11],13]
* [[10],14]
* [[10],12]
* [14]
* [13]
* [12]


### Merging Chains  eval_stack_param_read_bb1_in/4 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 
* [[13,[11]]] --> 4 
* [[12,[10]]] --> 5 
* [[14,[10]]] --> 6 
* [[[11]]] --> 7 


### Specialization of cost equations loop_cont_eval_stack_param_read_bb1_in/3 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations loop_cont_eval_stack_param_read_bb1_in/3 
* CE 16: loop_cont_eval_stack_param_read_bb1_in(C,A,B) = 0
     [C=3] 
* CE 17: loop_cont_eval_stack_param_read_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_stack_param_read_bb1_in/3 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of loop_cont_eval_stack_param_read_bb1_in/3 
* Loop 15: loop_cont_eval_stack_param_read_bb1_in(C,A,B) [C=3] 
* Loop 16: loop_cont_eval_stack_param_read_bb1_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_stack_param_read_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_stack_param_read_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_stack_param_read_bb1_in(C,A,B) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_stack_param_read_bb1_in/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_stack_param_read_bb0_in/1 
* CE 3 is refined into CE [18,19,20,21,22,23,24] 


#### Refined cost equations eval_stack_param_read_bb0_in/1 
* CE 18: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):1+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):2
     [G=3,E=3,C=0] 
* CE 19: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):2+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):1
     [0>=C+1,F+1=D,G=2,E=2] 
* CE 20: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):3+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):1
     [C>=1,F+1=D,G=2,E=2] 
* CE 21: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):4+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):1
     [F>=D+1,0>=C+1,G=2,E=2] 
* CE 22: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):5+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):1
     [D+2*C>=F+3,F>=D+1,G=2,E=2] 
* CE 23: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):6+ loop_cont_eval_stack_param_read_bb1_in(G,F,B):2
     [C>=1,G=3,E=3] 
* CE 24: eval_stack_param_read_bb0_in(B) = 1+ eval_stack_param_read_bb1_in(C,D,E,F):7
     [0>=C+1] 

### Cost equations --> "Loop" of eval_stack_param_read_bb0_in/1 
* CEs [24] --> Loop 17 
* CEs [18,19,20,21,22,23] --> Loop 18 

#### Loops of eval_stack_param_read_bb0_in/1 
* Loop 17: eval_stack_param_read_bb0_in(B) [] 
* Loop 18: eval_stack_param_read_bb0_in(B) [] 

### Ranking functions of CR eval_stack_param_read_bb0_in(B) 

#### Partial ranking functions of CR eval_stack_param_read_bb0_in(B) 


### Resulting Chains:eval_stack_param_read_bb0_in(B) 
* [18]
* [17]...


### Merging Chains  eval_stack_param_read_bb0_in/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_stack_param_read_start/1 
* CE 2 is refined into CE [25,26] 


#### Refined cost equations eval_stack_param_read_start/1 
* CE 25: eval_stack_param_read_start(B) = 0+ eval_stack_param_read_bb0_in(B):1
     [] 
* CE 26: eval_stack_param_read_start(B) = 0+ eval_stack_param_read_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_stack_param_read_start/1 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of eval_stack_param_read_start/1 
* Loop 19: eval_stack_param_read_start(B) [] 
* Loop 20: eval_stack_param_read_start(B) [] 

### Ranking functions of CR eval_stack_param_read_start(B) 

#### Partial ranking functions of CR eval_stack_param_read_start(B) 


### Resulting Chains:eval_stack_param_read_start(B) 
* [20]
* [19]...


### Merging Chains  eval_stack_param_read_start/1 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1
#### Cost of phase [11]:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1*it(11)+0
#### Cost of loops [10] 

 * loop 10:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1
#### Cost of phase [10]:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1*it(10)+0
  Such that:it(10) =< V_count_0
it(10) =< V_count_0-V_count_0'

#### Cost of phase [10]:eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C) -> [eval_stack_param_read_bb1_in(V_count_0',V_index_0',B',C')] 
1*it(10)+0
  Such that:it(10) =< V_count_0
it(10) =< V_count_0-V_count_0'

#### Cost of chains of eval_stack_param_read_bb1_in(V_count_0,V_index_0,B,C):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [0>=V_count_0+1] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=2,0>=V_count_0+1,C>=V_index_0+1] 

* Chain [[10],14]: 1*it(10)+0
  Such that:it(10) =< V_count_0

  with precondition: [B=3,V_count_0>=1] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -V_index_0/2+C/2+1/2

  with precondition: [B=2,C>=V_index_0+1,V_index_0+2*V_count_0>=C+3] 

* Chain [14]: 0
  with precondition: [V_count_0=0,B=3] 

* Chain [13]: 0
  with precondition: [B=2,C+1=V_index_0,0>=V_count_0+1] 

* Chain [12]: 0
  with precondition: [B=2,C+1=V_index_0,V_count_0>=1] 


#### Cost of chains of loop_cont_eval_stack_param_read_bb1_in(C,A,B):
* Chain [16]: 0
  with precondition: [C=2] 

* Chain [15]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_stack_param_read_bb0_in(B):
* Chain [18]: 1*aux(1)+0
  with precondition: [] 

* Chain [17]...: 1*s(4)+1
  with precondition: [] 


#### Cost of chains of eval_stack_param_read_start(B):
* Chain [20]: 1*s(5)+0
  with precondition: [] 

* Chain [19]...: 1*s(6)+1
  with precondition: [] 


Closed-form bounds of eval_stack_param_read_start(B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_stack_param_read_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 35 ms.
* Invariants computed in 39 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 81 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 60 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 275 ms.

