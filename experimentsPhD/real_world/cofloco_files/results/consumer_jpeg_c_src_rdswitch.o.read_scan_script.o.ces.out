Warning: Ignored call to eval_read_scan_script_stop/1 in equation eval_read_scan_script_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_read_scan_script_bb27_in/1]
1. non_recursive  : [eval_read_scan_script_3/1]
2. non_recursive  : [eval_read_scan_script_2/1]
3. recursive  : [eval_read_scan_script_18/5,eval_read_scan_script_19/5,eval_read_scan_script_bb7_in/5]
4. recursive  : [eval_read_scan_script_29/4,eval_read_scan_script_30/4,eval_read_scan_script_35/4,eval_read_scan_script_36/4,eval_read_scan_script_4/3,eval_read_scan_script_41/4,eval_read_scan_script_42/4,eval_read_scan_script_47/4,eval_read_scan_script_48/4,eval_read_scan_script_5/4,eval_read_scan_script_bb19_in/4,eval_read_scan_script_bb3_in/3,loop_cont_eval_read_scan_script_bb7_in/5]
5. non_recursive  : [eval_read_scan_script_17/1]
6. non_recursive  : [eval_read_scan_script_16/1]
7. non_recursive  : [eval_read_scan_script_15/1]
8. non_recursive  : [eval_read_scan_script_8/1]
9. non_recursive  : [eval_read_scan_script_7/1]
10. non_recursive  : [eval_read_scan_script_6/1]
11. non_recursive  : [eval_read_scan_script_70/1]
12. non_recursive  : [eval_read_scan_script_69/1]
13. non_recursive  : [eval_read_scan_script_68/1]
14. non_recursive  : [eval_read_scan_script_81/1]
15. non_recursive  : [eval_read_scan_script_80/1]
16. non_recursive  : [eval_read_scan_script_bb26_in/1]
17. non_recursive  : [eval_read_scan_script_77/1]
18. non_recursive  : [eval_read_scan_script_76/2]
19. non_recursive  : [eval_read_scan_script_74/2]
20. non_recursive  : [eval_read_scan_script_73/2]
21. non_recursive  : [eval_read_scan_script_63/1]
22. non_recursive  : [eval_read_scan_script_62/1]
23. non_recursive  : [eval_read_scan_script_61/1]
24. non_recursive  : [eval_read_scan_script_bb20_in/1]
25. non_recursive  : [loop_cont_eval_read_scan_script_bb3_in/3]
26. non_recursive  : [eval_read_scan_script_1/1]
27. non_recursive  : [eval_read_scan_script_0/1]
28. non_recursive  : [eval_read_scan_script_bb0_in/1]
29. non_recursive  : [eval_read_scan_script_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_read_scan_script_bb7_in/5
4. SCC is partially evaluated into eval_read_scan_script_bb3_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into loop_cont_eval_read_scan_script_bb3_in/3
26. SCC is partially evaluated into eval_read_scan_script_1/1
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into eval_read_scan_script_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_read_scan_script_bb7_in/5 
* CE 31 is refined into CE [32] 
* CE 30 is refined into CE [33] 
* CE 29 is refined into CE [34] 
* CE 27 is refined into CE [35] 
* CE 28 is refined into CE [36] 


#### Refined cost equations eval_read_scan_script_bb7_in/5 
* CE 32: eval_read_scan_script_bb7_in(A,B,C,A,B) = 0
     [C=5] 
* CE 33: eval_read_scan_script_bb7_in(A,B,C,A,B) = 0
     [C=4] 
* CE 34: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) = 0
     [B=3] 
* CE 35: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) = 0
     [B=2] 
* CE 36: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D)
     [B>=2,5>=B] 

### Cost equations --> "Loop" of eval_read_scan_script_bb7_in/5 
* CEs [36] --> Loop 21 
* CEs [32] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [35] --> Loop 25 

#### Loops of eval_read_scan_script_bb7_in/5 
* Loop 21: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D)->  eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D)
                  [B>=2,5>=B] 
* Loop 22: eval_read_scan_script_bb7_in(A,B,C,A,B) [C=5] 
* Loop 23: eval_read_scan_script_bb7_in(A,B,C,A,B) [C=4] 
* Loop 24: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) [B=3] 
* Loop 25: eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) [B=2] 

### Ranking functions of CR eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) 

#### Partial ranking functions of CR eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) 


### Resulting Chains:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) 
* [[21]]...
* [[21],25]
* [[21],24]
* [[21],23]
* [[21],22]
* [25]
* [24]
* [23]
* [22]


### Merging Chains  eval_read_scan_script_bb7_in/5 into  External patterns of execution 
* [[25],[25,[21]]] --> 1 
* [[24],[24,[21]]] --> 2 
* [[23],[23,[21]]] --> 3 
* [[22],[22,[21]]] --> 4 
* [[[21]]] --> 5 


### Specialization of cost equations eval_read_scan_script_bb3_in/3 
* CE 20 is refined into CE [37] 
* CE 19 is refined into CE [38] 
* CE 18 is refined into CE [39] 
* CE 17 is refined into CE [40] 
* CE 5 is refined into CE [41,42] 
* CE 6 is refined into CE [43,44] 
* CE 7 is refined into CE [45,46] 
* CE 8 is refined into CE [47,48] 
* CE 9 is refined into CE [49,50] 
* CE 10 is refined into CE [51,52] 
* CE 15 is refined into CE [53,54] 
* CE 16 is refined into CE [55,56] 
* CE 11 is refined into CE [57,58] 
* CE 12 is refined into CE [59,60] 
* CE 13 is refined into CE [61,62] 
* CE 14 is refined into CE [63,64] 


#### Refined cost equations eval_read_scan_script_bb3_in/3 
* CE 37: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 0
     [B=9] 
* CE 38: eval_read_scan_script_bb3_in(A,B,A) = 0
     [B=8] 
* CE 39: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 0
     [B=7] 
* CE 40: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 0
     [B=6] 
* CE 41: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):2
     [D>=1,E=3,B=3] 
* CE 42: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,E=3,B=3] 
* CE 43: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):2
     [0>=D+1,E=3,B=3] 
* CE 44: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,E=3,B=3] 
* CE 45: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):1
     [D>=1,E=2,B=2] 
* CE 46: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,E=2,B=2] 
* CE 47: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):1
     [0>=D+1,E=2,B=2] 
* CE 48: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,E=2,B=2] 
* CE 49: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):4
     [D>=1,E=5,B=2] 
* CE 50: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,E=5,B=2] 
* CE 51: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):4
     [0>=D+1,E=5,B=2] 
* CE 52: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,E=5,B=2] 
* CE 53: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):3
     [D>=1,E=4,B=2] 
* CE 54: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,E=4,B=2] 
* CE 55: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):3
     [0>=D+1,E=4,B=2] 
* CE 56: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 1+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,E=4,B=2] 
* CE 57: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):4+ eval_read_scan_script_bb3_in(F,B,C)
     [D>=1,V_scanno_0+1=F,E=5] 
* CE 58: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,H=F+1,E=5] 
* CE 59: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):4+ eval_read_scan_script_bb3_in(F,B,C)
     [0>=D+1,V_scanno_0+1=F,E=5] 
* CE 60: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,H=F+1,E=5] 
* CE 61: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):3+ eval_read_scan_script_bb3_in(F,B,C)
     [D>=1,V_scanno_0+1=F,E=4] 
* CE 62: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [D>=1,H=F+1,E=4] 
* CE 63: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,V_scanno_0,D):3+ eval_read_scan_script_bb3_in(F,B,C)
     [0>=D+1,V_scanno_0+1=F,E=4] 
* CE 64: eval_read_scan_script_bb3_in(V_scanno_0,B,C) = 2+ eval_read_scan_script_bb7_in(V_scanno_0,D,E,F,G):5
     [0>=D+1,H=F+1,E=4] 

### Cost equations --> "Loop" of eval_read_scan_script_bb3_in/3 
* CEs [42,44,46,48,50,52,54,56,58,60,62,64] --> Loop 26 
* CEs [57,59,61,63] --> Loop 27 
* CEs [37] --> Loop 28 
* CEs [38] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [40] --> Loop 31 
* CEs [41,43] --> Loop 32 
* CEs [45,47,49,51,53,55] --> Loop 33 

#### Loops of eval_read_scan_script_bb3_in/3 
* Loop 26: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [] 
* Loop 27: eval_read_scan_script_bb3_in(V_scanno_0,B,C)->  eval_read_scan_script_bb3_in(V_scanno_0',B,C)
                  [V_scanno_0+1=V_scanno_0'] 
* Loop 28: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [B=9] 
* Loop 29: eval_read_scan_script_bb3_in(A,B,A) [B=8] 
* Loop 30: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [B=7] 
* Loop 31: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [B=6] 
* Loop 32: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [B=3] 
* Loop 33: eval_read_scan_script_bb3_in(V_scanno_0,B,C) [B=2] 

### Ranking functions of CR eval_read_scan_script_bb3_in(V_scanno_0,B,C) 

#### Partial ranking functions of CR eval_read_scan_script_bb3_in(V_scanno_0,B,C) 


### Resulting Chains:eval_read_scan_script_bb3_in(V_scanno_0,B,C) 
* [[27]]...
* [[27],33]
* [[27],32]
* [[27],31]
* [[27],30]
* [[27],29]
* [[27],28]
* [[27],26]...
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]
* [26]...


### Merging Chains  eval_read_scan_script_bb3_in/3 into  External patterns of execution 
* [[33],[33,[27]]] --> 1 
* [[32],[32,[27]]] --> 2 
* [[31],[31,[27]]] --> 3 
* [[30],[30,[27]]] --> 4 
* [[29]] --> 5 
* [[29,[27]]] --> 6 
* [[28],[28,[27]]] --> 7 
* [[[27]]] --> 8 
* [[26],[26,[27]]] --> 9 


### Specialization of cost equations loop_cont_eval_read_scan_script_bb3_in/3 
* CE 25 is refined into CE [65] 
* CE 24 is refined into CE [66] 
* CE 23 is refined into CE [67] 
* CE 22 is refined into CE [68] 
* CE 26 is refined into CE [69] 
* CE 21 is refined into CE [70] 


#### Refined cost equations loop_cont_eval_read_scan_script_bb3_in/3 
* CE 65: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=9] 
* CE 66: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=8] 
* CE 67: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=7] 
* CE 68: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=6] 
* CE 69: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=3] 
* CE 70: loop_cont_eval_read_scan_script_bb3_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_read_scan_script_bb3_in/3 
* CEs [65] --> Loop 34 
* CEs [66] --> Loop 35 
* CEs [67] --> Loop 36 
* CEs [68] --> Loop 37 
* CEs [69] --> Loop 38 
* CEs [70] --> Loop 39 

#### Loops of loop_cont_eval_read_scan_script_bb3_in/3 
* Loop 34: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=9] 
* Loop 35: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=8] 
* Loop 36: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=7] 
* Loop 37: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=6] 
* Loop 38: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=3] 
* Loop 39: loop_cont_eval_read_scan_script_bb3_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_read_scan_script_bb3_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_read_scan_script_bb3_in(C,A,B) 


### Resulting Chains:loop_cont_eval_read_scan_script_bb3_in(C,A,B) 
* [39]
* [38]
* [37]
* [36]
* [35]
* [34]


### Merging Chains  loop_cont_eval_read_scan_script_bb3_in/3 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 
* [[37]] --> 3 
* [[36]] --> 4 
* [[35]] --> 5 
* [[34]] --> 6 


### Specialization of cost equations eval_read_scan_script_1/1 
* CE 3 is refined into CE [71] 
* CE 4 is refined into CE [72,73,74,75,76,77,78,79,80] 


#### Refined cost equations eval_read_scan_script_1/1 
* CE 71: eval_read_scan_script_1(B) = 0
     [] 
* CE 72: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):1+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):1
     [F=2,D=2,C=0] 
* CE 73: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):2+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):2
     [F=3,D=3,C=0] 
* CE 74: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):3+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):3
     [F=6,D=6,C=0] 
* CE 75: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):4+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):4
     [F=7,D=7,C=0] 
* CE 76: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):5+ loop_cont_eval_read_scan_script_bb3_in(F,G,B):5
     [G=0,F=8,E=0,D=8,C=0] 
* CE 77: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):6+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):5
     [E>=1,F=8,D=8,C=0] 
* CE 78: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):7+ loop_cont_eval_read_scan_script_bb3_in(F,E,B):6
     [F=9,D=9,C=0] 
* CE 79: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):8
     [C=0] 
* CE 80: eval_read_scan_script_1(B) = 1+ eval_read_scan_script_bb3_in(C,D,E):9
     [C=0] 

### Cost equations --> "Loop" of eval_read_scan_script_1/1 
* CEs [79,80] --> Loop 40 
* CEs [71,72,73,74,75,76,77,78] --> Loop 41 

#### Loops of eval_read_scan_script_1/1 
* Loop 40: eval_read_scan_script_1(B) [] 
* Loop 41: eval_read_scan_script_1(B) [] 

### Ranking functions of CR eval_read_scan_script_1(B) 

#### Partial ranking functions of CR eval_read_scan_script_1(B) 


### Resulting Chains:eval_read_scan_script_1(B) 
* [41]
* [40]...


### Merging Chains  eval_read_scan_script_1/1 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_read_scan_script_start/1 
* CE 2 is refined into CE [81,82] 


#### Refined cost equations eval_read_scan_script_start/1 
* CE 81: eval_read_scan_script_start(B) = 0+ eval_read_scan_script_1(B):1
     [] 
* CE 82: eval_read_scan_script_start(B) = 0+ eval_read_scan_script_1(B):2
     [] 

### Cost equations --> "Loop" of eval_read_scan_script_start/1 
* CEs [82] --> Loop 42 
* CEs [81] --> Loop 43 

#### Loops of eval_read_scan_script_start/1 
* Loop 42: eval_read_scan_script_start(B) [] 
* Loop 43: eval_read_scan_script_start(B) [] 

### Ranking functions of CR eval_read_scan_script_start(B) 

#### Partial ranking functions of CR eval_read_scan_script_start(B) 


### Resulting Chains:eval_read_scan_script_start(B) 
* [43]
* [42]...


### Merging Chains  eval_read_scan_script_start/1 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1
#### Cost of phase [21]:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1*it(21)+0
#### Cost of phase [21]:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1*it(21)+0
#### Cost of phase [21]:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1*it(21)+0
#### Cost of phase [21]:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1*it(21)+0
#### Cost of phase [21]:eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D) -> [eval_read_scan_script_bb7_in(V_scanno_0',V_7',B',C',D')] 
1*it(21)+0
#### Cost of chains of eval_read_scan_script_bb7_in(V_scanno_0,V_7,B,C,D):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [B>=2,5>=B] 

* Chain [[21],25]: 1*it(21)+0
  with precondition: [B=2] 

* Chain [[21],24]: 1*it(21)+0
  with precondition: [B=3] 

* Chain [[21],23]: 1*it(21)+0
  with precondition: [B=4,V_scanno_0=C,V_7=D] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=5,V_scanno_0=C,V_7=D] 

* Chain [25]: 0
  with precondition: [B=2] 

* Chain [24]: 0
  with precondition: [B=3] 

* Chain [23]: 0
  with precondition: [B=4,C=V_scanno_0,D=V_7] 

* Chain [22]: 0
  with precondition: [B=5,C=V_scanno_0,D=V_7] 


#### Cost of loops [27] 

 * loop 27:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(9)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of phase [27]:eval_read_scan_script_bb3_in(V_scanno_0,B,C) -> [eval_read_scan_script_bb3_in(V_scanno_0',B',C')] 
1*s(10)+0
#### Cost of chains of eval_read_scan_script_bb3_in(V_scanno_0,B,C):
* Chain [[27]]...: 1*s(10)+0
  with precondition: [] 

* Chain [[27],33]: 2*aux(6)+0
  with precondition: [B=2,V_scanno_0>=0] 

* Chain [[27],32]: 2*aux(7)+0
  with precondition: [B=3,V_scanno_0>=0] 

* Chain [[27],31]: 1*s(10)+0
  with precondition: [B=6,V_scanno_0>=0] 

* Chain [[27],30]: 1*s(10)+0
  with precondition: [B=7,V_scanno_0>=0] 

* Chain [[27],29]: 1*s(10)+0
  with precondition: [B=8,V_scanno_0>=0,C>=V_scanno_0+1] 

* Chain [[27],28]: 1*s(10)+0
  with precondition: [B=9,V_scanno_0>=0] 

* Chain [[27],26]...: 2*aux(8)+0
  with precondition: [V_scanno_0>=0] 

* Chain [33]: 1*aux(6)+0
  with precondition: [B=2,V_scanno_0>=0] 

* Chain [32]: 1*aux(7)+0
  with precondition: [B=3,V_scanno_0>=0] 

* Chain [31]: 0
  with precondition: [B=6,V_scanno_0>=0] 

* Chain [30]: 0
  with precondition: [B=7,V_scanno_0>=0] 

* Chain [29]: 0
  with precondition: [B=8,V_scanno_0=C,V_scanno_0>=0] 

* Chain [28]: 0
  with precondition: [B=9,V_scanno_0>=0] 

* Chain [26]...: 1*aux(8)+0
  with precondition: [V_scanno_0>=0] 


#### Cost of chains of loop_cont_eval_read_scan_script_bb3_in(C,A,B):
* Chain [39]: 0
  with precondition: [C=2] 

* Chain [38]: 0
  with precondition: [C=3] 

* Chain [37]: 0
  with precondition: [C=6] 

* Chain [36]: 0
  with precondition: [C=7] 

* Chain [35]: 0
  with precondition: [C=8] 

* Chain [34]: 0
  with precondition: [C=9] 


#### Cost of chains of eval_read_scan_script_1(B):
* Chain [41]: 1*aux(15)+0
  with precondition: [] 

* Chain [40]...: 1*aux(16)+0
  with precondition: [] 


#### Cost of chains of eval_read_scan_script_start(B):
* Chain [43]: 1*s(48)+0
  with precondition: [] 

* Chain [42]...: 1*s(49)+0
  with precondition: [] 


Closed-form bounds of eval_read_scan_script_start(B): 
-------------------------------------
* Chain [43] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_read_scan_script_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 64 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 44 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 237 ms.

