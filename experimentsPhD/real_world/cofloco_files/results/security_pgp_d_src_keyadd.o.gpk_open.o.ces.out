Warning: Ignored call to eval_gpk_open_stop/1 in equation eval_gpk_open_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gpk_open_bb6_in/1]
1. non_recursive  : [eval_gpk_open_1/1]
2. non_recursive  : [eval_gpk_open_0/2]
3. recursive  : [eval_gpk_open_10/3,eval_gpk_open_11/3,eval_gpk_open_19/4,eval_gpk_open_20/4,eval_gpk_open_21/4,eval_gpk_open_22/4,eval_gpk_open_23/4,eval_gpk_open_24/4,eval_gpk_open_27/4,eval_gpk_open_28/4,eval_gpk_open_31/4,eval_gpk_open_32/4,eval_gpk_open_48/4,eval_gpk_open_49/4,eval_gpk_open_NewDefault_in/3,eval_gpk_open_bb10_in/4,eval_gpk_open_bb12_in/4,eval_gpk_open_bb13_in/4,eval_gpk_open_bb4_in/3]
4. non_recursive  : [eval_gpk_open_17/1]
5. non_recursive  : [eval_gpk_open_16/2]
6. non_recursive  : [eval_gpk_open_15/2]
7. non_recursive  : [eval_gpk_open_14/2]
8. non_recursive  : [loop_cont_eval_gpk_open_bb4_in/3]
9. non_recursive  : [eval_gpk_open_9/2]
10. non_recursive  : [eval_gpk_open_8/2]
11. non_recursive  : [eval_gpk_open_7/2]
12. non_recursive  : [eval_gpk_open_6/2]
13. non_recursive  : [eval_gpk_open_4/2]
14. non_recursive  : [eval_gpk_open_3/2]
15. non_recursive  : [eval_gpk_open_2/2]
16. non_recursive  : [eval_gpk_open_bb0_in/2]
17. non_recursive  : [eval_gpk_open_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_gpk_open_bb4_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_gpk_open_bb4_in/3
9. SCC is partially evaluated into eval_gpk_open_9/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_gpk_open_4/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_gpk_open_bb0_in/2
17. SCC is partially evaluated into eval_gpk_open_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gpk_open_bb4_in/3 
* CE 10 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_gpk_open_bb4_in/3 
* CE 13: eval_gpk_open_bb4_in(V__hashleft,B,C) = 1+ eval_gpk_open_bb4_in(D,B,C)
     [] 
* CE 14: eval_gpk_open_bb4_in(V__hashleft,B,C) = 0
     [B=3] 
* CE 15: eval_gpk_open_bb4_in(A,B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_gpk_open_bb4_in/3 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_gpk_open_bb4_in/3 
* Loop 10: eval_gpk_open_bb4_in(V__hashleft,B,C) [B=3] 
* Loop 11: eval_gpk_open_bb4_in(A,B,A) [B=2] 
* Loop 12: eval_gpk_open_bb4_in(V__hashleft,B,C)->  eval_gpk_open_bb4_in(V__hashleft',B,C)
                  [] 

### Ranking functions of CR eval_gpk_open_bb4_in(V__hashleft,B,C) 

#### Partial ranking functions of CR eval_gpk_open_bb4_in(V__hashleft,B,C) 


### Resulting Chains:eval_gpk_open_bb4_in(V__hashleft,B,C) 
* [[12]]...
* [[12],11]
* [[12],10]
* [11]
* [10]


### Merging Chains  eval_gpk_open_bb4_in/3 into  External patterns of execution 
* [[11],[11,[12]]] --> 1 
* [[10],[10,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations loop_cont_eval_gpk_open_bb4_in/3 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations loop_cont_eval_gpk_open_bb4_in/3 
* CE 16: loop_cont_eval_gpk_open_bb4_in(C,A,B) = 0
     [C=3] 
* CE 17: loop_cont_eval_gpk_open_bb4_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_gpk_open_bb4_in/3 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of loop_cont_eval_gpk_open_bb4_in/3 
* Loop 13: loop_cont_eval_gpk_open_bb4_in(C,A,B) [C=3] 
* Loop 14: loop_cont_eval_gpk_open_bb4_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_gpk_open_bb4_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_gpk_open_bb4_in(C,A,B) 


### Resulting Chains:loop_cont_eval_gpk_open_bb4_in(C,A,B) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_gpk_open_bb4_in/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_gpk_open_9/2 
* CE 7 is refined into CE [18,19,20] 


#### Refined cost equations eval_gpk_open_9/2 
* CE 18: eval_gpk_open_9(V__hashleft,B) = 1+ eval_gpk_open_bb4_in(V__hashleft,C,D):1+ loop_cont_eval_gpk_open_bb4_in(E,D,B):1
     [E=2,C=2] 
* CE 19: eval_gpk_open_9(V__hashleft,B) = 1+ eval_gpk_open_bb4_in(V__hashleft,C,D):2+ loop_cont_eval_gpk_open_bb4_in(E,D,B):2
     [E=3,C=3] 
* CE 20: eval_gpk_open_9(V__hashleft,B) = 1+ eval_gpk_open_bb4_in(V__hashleft,C,D):3
     [] 

### Cost equations --> "Loop" of eval_gpk_open_9/2 
* CEs [20] --> Loop 15 
* CEs [18,19] --> Loop 16 

#### Loops of eval_gpk_open_9/2 
* Loop 15: eval_gpk_open_9(V__hashleft,B) [] 
* Loop 16: eval_gpk_open_9(V__hashleft,B) [] 

### Ranking functions of CR eval_gpk_open_9(V__hashleft,B) 

#### Partial ranking functions of CR eval_gpk_open_9(V__hashleft,B) 


### Resulting Chains:eval_gpk_open_9(V__hashleft,B) 
* [16]
* [15]...


### Merging Chains  eval_gpk_open_9/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_gpk_open_4/2 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22,23] 


#### Refined cost equations eval_gpk_open_4/2 
* CE 21: eval_gpk_open_4(V__hashleft,B) = 0
     [] 
* CE 22: eval_gpk_open_4(V__hashleft,B) = 0+ eval_gpk_open_9(V__hashleft,B):1
     [] 
* CE 23: eval_gpk_open_4(V__hashleft,B) = 0+ eval_gpk_open_9(V__hashleft,B):2
     [] 

### Cost equations --> "Loop" of eval_gpk_open_4/2 
* CEs [23] --> Loop 17 
* CEs [21,22] --> Loop 18 

#### Loops of eval_gpk_open_4/2 
* Loop 17: eval_gpk_open_4(V__hashleft,B) [] 
* Loop 18: eval_gpk_open_4(V__hashleft,B) [] 

### Ranking functions of CR eval_gpk_open_4(V__hashleft,B) 

#### Partial ranking functions of CR eval_gpk_open_4(V__hashleft,B) 


### Resulting Chains:eval_gpk_open_4(V__hashleft,B) 
* [18]
* [17]...


### Merging Chains  eval_gpk_open_4/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_gpk_open_bb0_in/2 
* CE 3 is refined into CE [24] 
* CE 4 is refined into CE [25,26] 


#### Refined cost equations eval_gpk_open_bb0_in/2 
* CE 24: eval_gpk_open_bb0_in(V__hashleft,B) = 0
     [] 
* CE 25: eval_gpk_open_bb0_in(V__hashleft,B) = 0+ eval_gpk_open_4(V__hashleft,B):1
     [] 
* CE 26: eval_gpk_open_bb0_in(V__hashleft,B) = 0+ eval_gpk_open_4(V__hashleft,B):2
     [] 

### Cost equations --> "Loop" of eval_gpk_open_bb0_in/2 
* CEs [26] --> Loop 19 
* CEs [24,25] --> Loop 20 

#### Loops of eval_gpk_open_bb0_in/2 
* Loop 19: eval_gpk_open_bb0_in(V__hashleft,B) [] 
* Loop 20: eval_gpk_open_bb0_in(V__hashleft,B) [] 

### Ranking functions of CR eval_gpk_open_bb0_in(V__hashleft,B) 

#### Partial ranking functions of CR eval_gpk_open_bb0_in(V__hashleft,B) 


### Resulting Chains:eval_gpk_open_bb0_in(V__hashleft,B) 
* [20]
* [19]...


### Merging Chains  eval_gpk_open_bb0_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_gpk_open_start/2 
* CE 2 is refined into CE [27,28] 


#### Refined cost equations eval_gpk_open_start/2 
* CE 27: eval_gpk_open_start(V__hashleft,B) = 0+ eval_gpk_open_bb0_in(V__hashleft,B):1
     [] 
* CE 28: eval_gpk_open_start(V__hashleft,B) = 0+ eval_gpk_open_bb0_in(V__hashleft,B):2
     [] 

### Cost equations --> "Loop" of eval_gpk_open_start/2 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of eval_gpk_open_start/2 
* Loop 21: eval_gpk_open_start(V__hashleft,B) [] 
* Loop 22: eval_gpk_open_start(V__hashleft,B) [] 

### Ranking functions of CR eval_gpk_open_start(V__hashleft,B) 

#### Partial ranking functions of CR eval_gpk_open_start(V__hashleft,B) 


### Resulting Chains:eval_gpk_open_start(V__hashleft,B) 
* [22]
* [21]...


### Merging Chains  eval_gpk_open_start/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_gpk_open_bb4_in(V__hashleft,B,C) -> [eval_gpk_open_bb4_in(V__hashleft',B',C')] 
1
#### Cost of phase [12]:eval_gpk_open_bb4_in(V__hashleft,B,C) -> [eval_gpk_open_bb4_in(V__hashleft',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_gpk_open_bb4_in(V__hashleft,B,C) -> [eval_gpk_open_bb4_in(V__hashleft',B',C')] 
1*it(12)+0
#### Cost of phase [12]:eval_gpk_open_bb4_in(V__hashleft,B,C) -> [eval_gpk_open_bb4_in(V__hashleft',B',C')] 
1*it(12)+0
#### Cost of chains of eval_gpk_open_bb4_in(V__hashleft,B,C):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [] 

* Chain [[12],11]: 1*it(12)+0
  with precondition: [B=2] 

* Chain [[12],10]: 1*it(12)+0
  with precondition: [B=3] 

* Chain [11]: 0
  with precondition: [B=2,C=V__hashleft] 

* Chain [10]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_gpk_open_bb4_in(C,A,B):
* Chain [14]: 0
  with precondition: [C=2] 

* Chain [13]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_gpk_open_9(V__hashleft,B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_gpk_open_4(V__hashleft,B):
* Chain [18]: 1*aux(4)+0
  with precondition: [] 

* Chain [17]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_gpk_open_bb0_in(V__hashleft,B):
* Chain [20]: 1*aux(5)+0
  with precondition: [] 

* Chain [19]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_gpk_open_start(V__hashleft,B):
* Chain [22]: 1*s(10)+0
  with precondition: [] 

* Chain [21]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_gpk_open_start(V__hashleft,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gpk_open_start(V__hashleft,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 13 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 66 ms.

