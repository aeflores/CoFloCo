Warning: Ignored call to eval_savetemp_stop/1 in equation eval_savetemp_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_savetemp_bb17_in/1]
1. recursive  : [eval_savetemp_6/4,eval_savetemp_7/4,eval_savetemp_bb1_in/4,eval_savetemp_bb4_in/4]
2. non_recursive  : [eval_savetemp_31/1]
3. non_recursive  : [eval_savetemp_30/2]
4. non_recursive  : [eval_savetemp_29/2]
5. non_recursive  : [eval_savetemp_28/2]
6. non_recursive  : [eval_savetemp_27/2]
7. non_recursive  : [eval_savetemp_bb13_in/2]
8. non_recursive  : [eval_savetemp_26/2]
9. non_recursive  : [eval_savetemp_25/2]
10. non_recursive  : [eval_savetemp_22/2]
11. non_recursive  : [eval_savetemp_21/2]
12. non_recursive  : [eval_savetemp_bb10_in/2]
13. non_recursive  : [eval_savetemp_20/1]
14. non_recursive  : [eval_savetemp_19/2]
15. non_recursive  : [eval_savetemp_bb8_in/2]
16. non_recursive  : [eval_savetemp_13/2]
17. non_recursive  : [eval_savetemp_12/2]
18. non_recursive  : [eval_savetemp_11/2]
19. non_recursive  : [eval_savetemp_10/2]
20. non_recursive  : [eval_savetemp_bb5_in/2]
21. non_recursive  : [loop_cont_eval_savetemp_bb1_in/3]
22. non_recursive  : [eval_savetemp_1/2]
23. non_recursive  : [eval_savetemp_0/2]
24. non_recursive  : [eval_savetemp_bb0_in/2]
25. non_recursive  : [eval_savetemp_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_savetemp_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_savetemp_28/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_savetemp_22/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_savetemp_bb8_in/2
16. SCC is partially evaluated into eval_savetemp_13/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_savetemp_11/2
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_savetemp_bb5_in/2
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_savetemp_1/2
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_savetemp_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_savetemp_bb1_in/4 
* CE 7 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations eval_savetemp_bb1_in/4 
* CE 18: eval_savetemp_bb1_in(A,B,C,A) = 0
     [B>=8,C=2] 
* CE 19: eval_savetemp_bb1_in(A,B,C,A) = 0
     [B>=0,7>=B,C=2] 
* CE 20: eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) = 1+ eval_savetemp_bb1_in(V__verbose,D,E,C)
     [V_i_0>=0,7>=V_i_0,V_i_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_savetemp_bb1_in/4 
* CEs [20] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 

#### Loops of eval_savetemp_bb1_in/4 
* Loop 12: eval_savetemp_bb1_in(V__verbose,V_i_0,B,C)->  eval_savetemp_bb1_in(V__verbose,V_i_0',B',C)
                  [V_i_0>=0,7>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 13: eval_savetemp_bb1_in(A,B,C,A) [B>=8,C=2] 
* Loop 14: eval_savetemp_bb1_in(A,B,C,A) [B>=0,7>=B,C=2] 

### Ranking functions of CR eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) 
* RF of phase [12]: [-V_i_0+8]

#### Partial ranking functions of CR eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    -V_i_0+8


### Resulting Chains:eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) 
* [[12],14]
* [[12],13]
* [14]


### Merging Chains  eval_savetemp_bb1_in/4 into  External patterns of execution 
* [[14],[13,[12]],[14,[12]]] --> 1 


### Specialization of cost equations eval_savetemp_28/2 
* CE 17 is refined into CE [21] 


#### Refined cost equations eval_savetemp_28/2 
* CE 21: eval_savetemp_28(V__verbose,B) = 0
     [] 

### Cost equations --> "Loop" of eval_savetemp_28/2 
* CEs [21] --> Loop 15 

#### Loops of eval_savetemp_28/2 
* Loop 15: eval_savetemp_28(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_28(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_28(V__verbose,B) 


### Resulting Chains:eval_savetemp_28(V__verbose,B) 
* [15]


### Merging Chains  eval_savetemp_28/2 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_savetemp_22/2 
* CE 12 is refined into CE [22] 
* CE 13 is refined into CE [23] 


#### Refined cost equations eval_savetemp_22/2 
* CE 22: eval_savetemp_22(V__verbose,B) = 0
     [] 
* CE 23: eval_savetemp_22(V__verbose,B) = 0+ eval_savetemp_28(V__verbose,B):1
     [] 

### Cost equations --> "Loop" of eval_savetemp_22/2 
* CEs [22,23] --> Loop 16 

#### Loops of eval_savetemp_22/2 
* Loop 16: eval_savetemp_22(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_22(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_22(V__verbose,B) 


### Resulting Chains:eval_savetemp_22(V__verbose,B) 
* [16]


### Merging Chains  eval_savetemp_22/2 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_savetemp_bb8_in/2 
* CE 14 is refined into CE [24] 


#### Refined cost equations eval_savetemp_bb8_in/2 
* CE 24: eval_savetemp_bb8_in(V__verbose,B) = 0
     [] 

### Cost equations --> "Loop" of eval_savetemp_bb8_in/2 
* CEs [24] --> Loop 17 

#### Loops of eval_savetemp_bb8_in/2 
* Loop 17: eval_savetemp_bb8_in(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_bb8_in(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_bb8_in(V__verbose,B) 


### Resulting Chains:eval_savetemp_bb8_in(V__verbose,B) 
* [17]


### Merging Chains  eval_savetemp_bb8_in/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_savetemp_13/2 
* CE 15 is refined into CE [25] 
* CE 16 is refined into CE [26] 


#### Refined cost equations eval_savetemp_13/2 
* CE 25: eval_savetemp_13(V__verbose,B) = 0+ eval_savetemp_bb8_in(V__verbose,B):1
     [] 
* CE 26: eval_savetemp_13(V__verbose,B) = 0+ eval_savetemp_22(V__verbose,B):1
     [] 

### Cost equations --> "Loop" of eval_savetemp_13/2 
* CEs [25,26] --> Loop 18 

#### Loops of eval_savetemp_13/2 
* Loop 18: eval_savetemp_13(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_13(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_13(V__verbose,B) 


### Resulting Chains:eval_savetemp_13(V__verbose,B) 
* [18]


### Merging Chains  eval_savetemp_13/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_savetemp_11/2 
* CE 10 is refined into CE [27] 
* CE 11 is refined into CE [28] 


#### Refined cost equations eval_savetemp_11/2 
* CE 27: eval_savetemp_11(V__verbose,B) = 0+ eval_savetemp_bb8_in(V__verbose,B):1
     [] 
* CE 28: eval_savetemp_11(V__verbose,B) = 0+ eval_savetemp_13(V__verbose,B):1
     [] 

### Cost equations --> "Loop" of eval_savetemp_11/2 
* CEs [27,28] --> Loop 19 

#### Loops of eval_savetemp_11/2 
* Loop 19: eval_savetemp_11(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_11(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_11(V__verbose,B) 


### Resulting Chains:eval_savetemp_11(V__verbose,B) 
* [19]


### Merging Chains  eval_savetemp_11/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_savetemp_bb5_in/2 
* CE 8 is refined into CE [29] 
* CE 9 is refined into CE [30] 


#### Refined cost equations eval_savetemp_bb5_in/2 
* CE 29: eval_savetemp_bb5_in(V__verbose,B) = 0+ eval_savetemp_11(V__verbose,B):1
     [] 
* CE 30: eval_savetemp_bb5_in(V__verbose,B) = 0+ eval_savetemp_22(V__verbose,B):1
     [] 

### Cost equations --> "Loop" of eval_savetemp_bb5_in/2 
* CEs [29,30] --> Loop 20 

#### Loops of eval_savetemp_bb5_in/2 
* Loop 20: eval_savetemp_bb5_in(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_bb5_in(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_bb5_in(V__verbose,B) 


### Resulting Chains:eval_savetemp_bb5_in(V__verbose,B) 
* [20]


### Merging Chains  eval_savetemp_bb5_in/2 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations eval_savetemp_1/2 
* CE 3 is refined into CE [31] 
* CE 4 is refined into CE [32] 


#### Refined cost equations eval_savetemp_1/2 
* CE 31: eval_savetemp_1(V__verbose,B) = 0
     [] 
* CE 32: eval_savetemp_1(V__verbose,B) = 1+ eval_savetemp_bb1_in(V__verbose,C,D,V__verbose):1+ eval_savetemp_bb5_in(V__verbose,B):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_savetemp_1/2 
* CEs [31,32] --> Loop 21 

#### Loops of eval_savetemp_1/2 
* Loop 21: eval_savetemp_1(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_1(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_1(V__verbose,B) 


### Resulting Chains:eval_savetemp_1(V__verbose,B) 
* [21]


### Merging Chains  eval_savetemp_1/2 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_savetemp_start/2 
* CE 2 is refined into CE [33] 


#### Refined cost equations eval_savetemp_start/2 
* CE 33: eval_savetemp_start(V__verbose,B) = 0+ eval_savetemp_1(V__verbose,B):1
     [] 

### Cost equations --> "Loop" of eval_savetemp_start/2 
* CEs [33] --> Loop 22 

#### Loops of eval_savetemp_start/2 
* Loop 22: eval_savetemp_start(V__verbose,B) [] 

### Ranking functions of CR eval_savetemp_start(V__verbose,B) 

#### Partial ranking functions of CR eval_savetemp_start(V__verbose,B) 


### Resulting Chains:eval_savetemp_start(V__verbose,B) 
* [22]


### Merging Chains  eval_savetemp_start/2 into  External patterns of execution 
* [[22]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) -> [eval_savetemp_bb1_in(V__verbose',V_i_0',B',C')] 
1
#### Cost of phase [12]:eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) -> [eval_savetemp_bb1_in(V__verbose',V_i_0',B',C')] 
1*it(12)+0
  Such that:it(12) =< -V_i_0+8
it(12) =< -V_i_0+V_i_0'

#### Cost of phase [12]:eval_savetemp_bb1_in(V__verbose,V_i_0,B,C) -> [eval_savetemp_bb1_in(V__verbose',V_i_0',B',C')] 
1*it(12)+0
  Such that:it(12) =< -V_i_0+8
it(12) =< -V_i_0+V_i_0'

#### Cost of chains of eval_savetemp_bb1_in(V__verbose,V_i_0,B,C):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< -V_i_0+7

  with precondition: [B=2,V__verbose=C,6>=V_i_0,V_i_0>=0] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -V_i_0+8

  with precondition: [B=2,V__verbose=C,7>=V_i_0,V_i_0>=0] 

* Chain [14]: 0
  with precondition: [B=2,C=V__verbose,7>=V_i_0,V_i_0>=0] 


#### Cost of chains of eval_savetemp_28(V__verbose,B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_22(V__verbose,B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_bb8_in(V__verbose,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_13(V__verbose,B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_11(V__verbose,B):
* Chain [19]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_bb5_in(V__verbose,B):
* Chain [20]: 0
  with precondition: [] 


#### Cost of chains of eval_savetemp_1(V__verbose,B):
* Chain [21]: 16
  with precondition: [] 


#### Cost of chains of eval_savetemp_start(V__verbose,B):
* Chain [22]: 16
  with precondition: [] 


Closed-form bounds of eval_savetemp_start(V__verbose,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 16 
    - Complexity: constant 

### Maximum cost of eval_savetemp_start(V__verbose,B): 16 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 14 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 77 ms.

