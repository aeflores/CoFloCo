WARNING: Excluded non-linear constraints:[I=F*A]
Warning: Ignored call to eval_clist_change_bits_stop/1 in equation eval_clist_change_bits_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_clist_change_bits_1/6,eval_clist_change_bits_122/8,eval_clist_change_bits_123/9,eval_clist_change_bits_2/7,eval_clist_change_bits_bb1_in/5]
1. non_recursive  : [eval_clist_change_bits_bb17_in/1]
2. non_recursive  : [eval_clist_change_bits_bb15_in/1]
3. non_recursive  : [eval_clist_change_bits_28/1]
4. non_recursive  : [eval_clist_change_bits_27/1]
5. non_recursive  : [eval_clist_change_bits_42/1]
6. non_recursive  : [eval_clist_change_bits_41/1]
7. non_recursive  : [eval_clist_change_bits_102/1]
8. non_recursive  : [eval_clist_change_bits_101/2]
9. non_recursive  : [eval_clist_change_bits_98/1]
10. non_recursive  : [eval_clist_change_bits_97/2]
11. non_recursive  : [eval_clist_change_bits_95/2]
12. non_recursive  : [eval_clist_change_bits_94/3]
13. non_recursive  : [eval_clist_change_bits_92/2]
14. non_recursive  : [eval_clist_change_bits_91/3]
15. non_recursive  : [eval_clist_change_bits_88/2]
16. non_recursive  : [eval_clist_change_bits_87/3]
17. non_recursive  : [eval_clist_change_bits_78/2]
18. non_recursive  : [eval_clist_change_bits_77/6]
19. non_recursive  : [eval_clist_change_bits_65/5]
20. non_recursive  : [eval_clist_change_bits_64/5]
21. non_recursive  : [eval_clist_change_bits_62/5]
22. non_recursive  : [eval_clist_change_bits_61/5]
23. non_recursive  : [eval_clist_change_bits_59/5]
24. non_recursive  : [eval_clist_change_bits_58/5]
25. non_recursive  : [eval_clist_change_bits_55/4]
26. non_recursive  : [eval_clist_change_bits_54/4]
27. non_recursive  : [loop_cont_eval_clist_change_bits_bb1_in/5]
28. non_recursive  : [eval_clist_change_bits_bb0_in/2]
29. non_recursive  : [eval_clist_change_bits_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_clist_change_bits_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_clist_change_bits_28/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_clist_change_bits_42/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_clist_change_bits_98/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_clist_change_bits_78/2
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into loop_cont_eval_clist_change_bits_bb1_in/5
28. SCC is partially evaluated into eval_clist_change_bits_bb0_in/2
29. SCC is partially evaluated into eval_clist_change_bits_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_clist_change_bits_bb1_in/5 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 4 is refined into CE [22] 


#### Refined cost equations eval_clist_change_bits_bb1_in/5 
* CE 18: eval_clist_change_bits_bb1_in(A,B,A,C,D) = 0
     [B=5] 
* CE 19: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) = 0
     [B=4] 
* CE 20: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) = 0
     [B=3] 
* CE 21: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) = 0
     [B=2] 
* CE 22: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) = 1+ eval_clist_change_bits_bb1_in(V_depth,B,C,D,E)
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_bb1_in/5 
* CEs [22] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_clist_change_bits_bb1_in/5 
* Loop 16: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E)->  eval_clist_change_bits_bb1_in(V_depth,B,C,D,E)
                  [] 
* Loop 17: eval_clist_change_bits_bb1_in(A,B,A,C,D) [B=5] 
* Loop 18: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) [B=4] 
* Loop 19: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) [B=3] 
* Loop 20: eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) [B=2] 

### Ranking functions of CR eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) 

#### Partial ranking functions of CR eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) 


### Resulting Chains:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) 
* [[16]]...
* [[16],20]
* [[16],19]
* [[16],18]
* [[16],17]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  eval_clist_change_bits_bb1_in/5 into  External patterns of execution 
* [[20],[20,[16]]] --> 1 
* [[19],[19,[16]]] --> 2 
* [[18],[18,[16]]] --> 3 
* [[17],[17,[16]]] --> 4 
* [[[16]]] --> 5 


### Specialization of cost equations eval_clist_change_bits_28/1 
* CE 13 is refined into CE [23] 


#### Refined cost equations eval_clist_change_bits_28/1 
* CE 23: eval_clist_change_bits_28(B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_28/1 
* CEs [23] --> Loop 21 

#### Loops of eval_clist_change_bits_28/1 
* Loop 21: eval_clist_change_bits_28(B) [] 

### Ranking functions of CR eval_clist_change_bits_28(B) 

#### Partial ranking functions of CR eval_clist_change_bits_28(B) 


### Resulting Chains:eval_clist_change_bits_28(B) 
* [21]


### Merging Chains  eval_clist_change_bits_28/1 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_clist_change_bits_42/1 
* CE 14 is refined into CE [24] 


#### Refined cost equations eval_clist_change_bits_42/1 
* CE 24: eval_clist_change_bits_42(B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_42/1 
* CEs [24] --> Loop 22 

#### Loops of eval_clist_change_bits_42/1 
* Loop 22: eval_clist_change_bits_42(B) [] 

### Ranking functions of CR eval_clist_change_bits_42(B) 

#### Partial ranking functions of CR eval_clist_change_bits_42(B) 


### Resulting Chains:eval_clist_change_bits_42(B) 
* [22]


### Merging Chains  eval_clist_change_bits_42/1 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations eval_clist_change_bits_98/1 
* CE 17 is refined into CE [25] 


#### Refined cost equations eval_clist_change_bits_98/1 
* CE 25: eval_clist_change_bits_98(B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_98/1 
* CEs [25] --> Loop 23 

#### Loops of eval_clist_change_bits_98/1 
* Loop 23: eval_clist_change_bits_98(B) [] 

### Ranking functions of CR eval_clist_change_bits_98(B) 

#### Partial ranking functions of CR eval_clist_change_bits_98(B) 


### Resulting Chains:eval_clist_change_bits_98(B) 
* [23]


### Merging Chains  eval_clist_change_bits_98/1 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations eval_clist_change_bits_78/2 
* CE 15 is refined into CE [26] 
* CE 16 is refined into CE [27] 


#### Refined cost equations eval_clist_change_bits_78/2 
* CE 26: eval_clist_change_bits_78(V_69,B) = 0
     [] 
* CE 27: eval_clist_change_bits_78(V_69,B) = 0+ eval_clist_change_bits_98(B):1
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_78/2 
* CEs [26,27] --> Loop 24 

#### Loops of eval_clist_change_bits_78/2 
* Loop 24: eval_clist_change_bits_78(V_69,B) [] 

### Ranking functions of CR eval_clist_change_bits_78(V_69,B) 

#### Partial ranking functions of CR eval_clist_change_bits_78(V_69,B) 


### Resulting Chains:eval_clist_change_bits_78(V_69,B) 
* [24]


### Merging Chains  eval_clist_change_bits_78/2 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations loop_cont_eval_clist_change_bits_bb1_in/5 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 9 is refined into CE [31] 


#### Refined cost equations loop_cont_eval_clist_change_bits_bb1_in/5 
* CE 28: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) = 0+ eval_clist_change_bits_78(B,D):1
     [F=5] 
* CE 29: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) = 0+ eval_clist_change_bits_42(D):1
     [F=4] 
* CE 30: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) = 0+ eval_clist_change_bits_28(D):1
     [F=3] 
* CE 31: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_clist_change_bits_bb1_in/5 
* CEs [28] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [31] --> Loop 28 

#### Loops of loop_cont_eval_clist_change_bits_bb1_in/5 
* Loop 25: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) [F=5] 
* Loop 26: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) [F=4] 
* Loop 27: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) [F=3] 
* Loop 28: loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) [F=2] 

### Ranking functions of CR loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) 


### Resulting Chains:loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D) 
* [28]
* [27]
* [26]
* [25]


### Merging Chains  loop_cont_eval_clist_change_bits_bb1_in/5 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 


### Specialization of cost equations eval_clist_change_bits_bb0_in/2 
* CE 3 is refined into CE [32,33,34,35,36] 


#### Refined cost equations eval_clist_change_bits_bb0_in/2 
* CE 32: eval_clist_change_bits_bb0_in(V_depth,B) = 1+ eval_clist_change_bits_bb1_in(V_depth,C,D,E,F):1+ loop_cont_eval_clist_change_bits_bb1_in(G,D,E,F,B):1
     [G=2,C=2] 
* CE 33: eval_clist_change_bits_bb0_in(V_depth,B) = 1+ eval_clist_change_bits_bb1_in(V_depth,C,D,E,F):2+ loop_cont_eval_clist_change_bits_bb1_in(G,D,E,F,B):2
     [G=3,C=3] 
* CE 34: eval_clist_change_bits_bb0_in(V_depth,B) = 1+ eval_clist_change_bits_bb1_in(V_depth,C,D,E,F):3+ loop_cont_eval_clist_change_bits_bb1_in(G,D,E,F,B):3
     [G=4,C=4] 
* CE 35: eval_clist_change_bits_bb0_in(V_depth,B) = 1+ eval_clist_change_bits_bb1_in(V_depth,C,V_depth,D,E):4+ loop_cont_eval_clist_change_bits_bb1_in(F,V_depth,D,E,B):4
     [F=5,C=5] 
* CE 36: eval_clist_change_bits_bb0_in(V_depth,B) = 1+ eval_clist_change_bits_bb1_in(V_depth,C,D,E,F):5
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_bb0_in/2 
* CEs [36] --> Loop 29 
* CEs [32,33,34,35] --> Loop 30 

#### Loops of eval_clist_change_bits_bb0_in/2 
* Loop 29: eval_clist_change_bits_bb0_in(V_depth,B) [] 
* Loop 30: eval_clist_change_bits_bb0_in(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_bits_bb0_in(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_bits_bb0_in(V_depth,B) 


### Resulting Chains:eval_clist_change_bits_bb0_in(V_depth,B) 
* [30]
* [29]...


### Merging Chains  eval_clist_change_bits_bb0_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_clist_change_bits_start/2 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_clist_change_bits_start/2 
* CE 37: eval_clist_change_bits_start(V_depth,B) = 0+ eval_clist_change_bits_bb0_in(V_depth,B):1
     [] 
* CE 38: eval_clist_change_bits_start(V_depth,B) = 0+ eval_clist_change_bits_bb0_in(V_depth,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_change_bits_start/2 
* CEs [38] --> Loop 31 
* CEs [37] --> Loop 32 

#### Loops of eval_clist_change_bits_start/2 
* Loop 31: eval_clist_change_bits_start(V_depth,B) [] 
* Loop 32: eval_clist_change_bits_start(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_bits_start(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_bits_start(V_depth,B) 


### Resulting Chains:eval_clist_change_bits_start(V_depth,B) 
* [32]
* [31]...


### Merging Chains  eval_clist_change_bits_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1
#### Cost of phase [16]:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1*it(16)+0
#### Cost of phase [16]:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1*it(16)+0
#### Cost of phase [16]:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1*it(16)+0
#### Cost of phase [16]:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1*it(16)+0
#### Cost of phase [16]:eval_clist_change_bits_bb1_in(V_depth,B,C,D,E) -> [eval_clist_change_bits_bb1_in(V_depth',B',C',D',E')] 
1*it(16)+0
#### Cost of chains of eval_clist_change_bits_bb1_in(V_depth,B,C,D,E):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [] 

* Chain [[16],20]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],19]: 1*it(16)+0
  with precondition: [B=3] 

* Chain [[16],18]: 1*it(16)+0
  with precondition: [B=4] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=5,V_depth=C] 

* Chain [20]: 0
  with precondition: [B=2] 

* Chain [19]: 0
  with precondition: [B=3] 

* Chain [18]: 0
  with precondition: [B=4] 

* Chain [17]: 0
  with precondition: [B=5,C=V_depth] 


#### Cost of chains of eval_clist_change_bits_28(B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_bits_42(B):
* Chain [22]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_bits_98(B):
* Chain [23]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_bits_78(V_69,B):
* Chain [24]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_clist_change_bits_bb1_in(F,A,B,C,D):
* Chain [28]: 0
  with precondition: [F=2] 

* Chain [27]: 0
  with precondition: [F=3] 

* Chain [26]: 0
  with precondition: [F=4] 

* Chain [25]: 0
  with precondition: [F=5] 


#### Cost of chains of eval_clist_change_bits_bb0_in(V_depth,B):
* Chain [30]: 1*aux(5)+0
  with precondition: [] 

* Chain [29]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_clist_change_bits_start(V_depth,B):
* Chain [32]: 1*s(10)+0
  with precondition: [] 

* Chain [31]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_clist_change_bits_start(V_depth,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_clist_change_bits_start(V_depth,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 106 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 71 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 52 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 430 ms.

