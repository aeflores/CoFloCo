Warning: Ignored call to eval_TIFFFetchAnyArray_stop/1 in equation eval_TIFFFetchAnyArray_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_TIFFFetchAnyArray_bb25_in/2]
1. non_recursive  : [eval_TIFFFetchAnyArray_bb29_in/1]
2. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb25_in/2]
3. non_recursive  : [eval_TIFFFetchAnyArray_71/1]
4. non_recursive  : [eval_TIFFFetchAnyArray_70/1]
5. non_recursive  : [eval_TIFFFetchAnyArray_81/1]
6. non_recursive  : [eval_TIFFFetchAnyArray_80/1]
7. non_recursive  : [eval_TIFFFetchAnyArray_86/1]
8. non_recursive  : [eval_TIFFFetchAnyArray_85/1]
9. non_recursive  : [eval_TIFFFetchAnyArray_84/2]
10. non_recursive  : [eval_TIFFFetchAnyArray_NewDefault_in/1]
11. recursive  : [eval_TIFFFetchAnyArray_bb15_in/2]
12. recursive  : [eval_TIFFFetchAnyArray_bb17_in/2]
13. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb15_in/2]
14. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb17_in/2]
15. non_recursive  : [eval_TIFFFetchAnyArray_42/1]
16. non_recursive  : [eval_TIFFFetchAnyArray_41/1]
17. non_recursive  : [eval_TIFFFetchAnyArray_bb13_in/1]
18. recursive  : [eval_TIFFFetchAnyArray_bb21_in/2]
19. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb21_in/2]
20. non_recursive  : [eval_TIFFFetchAnyArray_61/1]
21. non_recursive  : [eval_TIFFFetchAnyArray_60/1]
22. non_recursive  : [eval_TIFFFetchAnyArray_bb19_in/1]
23. recursive  : [eval_TIFFFetchAnyArray_bb3_in/2]
24. recursive  : [eval_TIFFFetchAnyArray_bb5_in/2]
25. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb3_in/2]
26. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb5_in/2]
27. non_recursive  : [eval_TIFFFetchAnyArray_4/1]
28. non_recursive  : [eval_TIFFFetchAnyArray_3/1]
29. non_recursive  : [eval_TIFFFetchAnyArray_bb1_in/1]
30. recursive  : [eval_TIFFFetchAnyArray_bb11_in/2]
31. recursive  : [eval_TIFFFetchAnyArray_bb9_in/2]
32. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb11_in/2]
33. non_recursive  : [loop_cont_eval_TIFFFetchAnyArray_bb9_in/2]
34. non_recursive  : [eval_TIFFFetchAnyArray_23/1]
35. non_recursive  : [eval_TIFFFetchAnyArray_22/1]
36. non_recursive  : [eval_TIFFFetchAnyArray_bb7_in/1]
37. non_recursive  : [eval_TIFFFetchAnyArray_bb0_in/1]
38. non_recursive  : [eval_TIFFFetchAnyArray_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb25_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_TIFFFetchAnyArray_71/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb15_in/2
12. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb17_in/2
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_TIFFFetchAnyArray_42/1
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb21_in/2
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_TIFFFetchAnyArray_61/1
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb3_in/2
24. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb5_in/2
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_TIFFFetchAnyArray_4/1
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb11_in/2
31. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb9_in/2
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_TIFFFetchAnyArray_23/1
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_TIFFFetchAnyArray_bb0_in/1
38. SCC is partially evaluated into eval_TIFFFetchAnyArray_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_TIFFFetchAnyArray_bb25_in/2 
* CE 37 is refined into CE [38] 
* CE 36 is refined into CE [39] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb25_in/2 
* CE 38: eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) = 0
     [0>=V_i_7+1,B=2] 
* CE 39: eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) = 1+ eval_TIFFFetchAnyArray_bb25_in(C,D)
     [V_i_7>=0,V_i_7=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb25_in/2 
* CEs [39] --> Loop 24 
* CEs [38] --> Loop 25 

#### Loops of eval_TIFFFetchAnyArray_bb25_in/2 
* Loop 24: eval_TIFFFetchAnyArray_bb25_in(V_i_7,B)->  eval_TIFFFetchAnyArray_bb25_in(V_i_7',B')
                  [V_i_7>=0,V_i_7=V_i_7'+1,B'=2,B=2] 
* Loop 25: eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) [0>=V_i_7+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) 
* RF of phase [24]: [V_i_7+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_i_7+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) 
* [[24],25]
* [25]


### Merging Chains  eval_TIFFFetchAnyArray_bb25_in/2 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[24]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_71/1 
* CE 20 is refined into CE [40,41] 
* CE 21 is refined into CE [42] 


#### Refined cost equations eval_TIFFFetchAnyArray_71/1 
* CE 40: eval_TIFFFetchAnyArray_71(B) = 1+ eval_TIFFFetchAnyArray_bb25_in(C,D):1
     [0>=C+1,D=2] 
* CE 41: eval_TIFFFetchAnyArray_71(B) = 1+ eval_TIFFFetchAnyArray_bb25_in(C,D):2
     [C>=0,D=2] 
* CE 42: eval_TIFFFetchAnyArray_71(B) = 0
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_71/1 
* CEs [40,41,42] --> Loop 26 

#### Loops of eval_TIFFFetchAnyArray_71/1 
* Loop 26: eval_TIFFFetchAnyArray_71(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_71(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_71(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_71(B) 
* [26]


### Merging Chains  eval_TIFFFetchAnyArray_71/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb15_in/2 
* CE 31 is refined into CE [43] 
* CE 30 is refined into CE [44] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb15_in/2 
* CE 43: eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) = 0
     [0>=V_i_4+1,B=2] 
* CE 44: eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) = 1+ eval_TIFFFetchAnyArray_bb15_in(C,D)
     [V_i_4>=0,V_i_4=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb15_in/2 
* CEs [44] --> Loop 27 
* CEs [43] --> Loop 28 

#### Loops of eval_TIFFFetchAnyArray_bb15_in/2 
* Loop 27: eval_TIFFFetchAnyArray_bb15_in(V_i_4,B)->  eval_TIFFFetchAnyArray_bb15_in(V_i_4',B')
                  [V_i_4>=0,V_i_4=V_i_4'+1,B'=2,B=2] 
* Loop 28: eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) [0>=V_i_4+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) 
* RF of phase [27]: [V_i_4+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V_i_4+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) 
* [[27],28]
* [28]


### Merging Chains  eval_TIFFFetchAnyArray_bb15_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[27]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb17_in/2 
* CE 33 is refined into CE [45] 
* CE 32 is refined into CE [46] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb17_in/2 
* CE 45: eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) = 0
     [0>=V_i_5+1,B=2] 
* CE 46: eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) = 1+ eval_TIFFFetchAnyArray_bb17_in(C,D)
     [V_i_5>=0,V_i_5=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb17_in/2 
* CEs [46] --> Loop 29 
* CEs [45] --> Loop 30 

#### Loops of eval_TIFFFetchAnyArray_bb17_in/2 
* Loop 29: eval_TIFFFetchAnyArray_bb17_in(V_i_5,B)->  eval_TIFFFetchAnyArray_bb17_in(V_i_5',B')
                  [V_i_5>=0,V_i_5=V_i_5'+1,B'=2,B=2] 
* Loop 30: eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) [0>=V_i_5+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) 
* RF of phase [29]: [V_i_5+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_i_5+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) 
* [[29],30]
* [30]


### Merging Chains  eval_TIFFFetchAnyArray_bb17_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[29]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_42/1 
* CE 15 is refined into CE [47,48] 
* CE 16 is refined into CE [49,50] 
* CE 17 is refined into CE [51] 


#### Refined cost equations eval_TIFFFetchAnyArray_42/1 
* CE 47: eval_TIFFFetchAnyArray_42(B) = 1+ eval_TIFFFetchAnyArray_bb15_in(C,D):1
     [0>=C+1,D=2] 
* CE 48: eval_TIFFFetchAnyArray_42(B) = 1+ eval_TIFFFetchAnyArray_bb15_in(C,D):2
     [C>=0,D=2] 
* CE 49: eval_TIFFFetchAnyArray_42(B) = 1+ eval_TIFFFetchAnyArray_bb17_in(C,D):1
     [0>=C+1,D=2] 
* CE 50: eval_TIFFFetchAnyArray_42(B) = 1+ eval_TIFFFetchAnyArray_bb17_in(C,D):2
     [C>=0,D=2] 
* CE 51: eval_TIFFFetchAnyArray_42(B) = 0
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_42/1 
* CEs [47,48,49,50,51] --> Loop 31 

#### Loops of eval_TIFFFetchAnyArray_42/1 
* Loop 31: eval_TIFFFetchAnyArray_42(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_42(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_42(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_42(B) 
* [31]


### Merging Chains  eval_TIFFFetchAnyArray_42/1 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb21_in/2 
* CE 35 is refined into CE [52] 
* CE 34 is refined into CE [53] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb21_in/2 
* CE 52: eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) = 0
     [0>=V_i_6+1,B=2] 
* CE 53: eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) = 1+ eval_TIFFFetchAnyArray_bb21_in(C,D)
     [V_i_6>=0,V_i_6=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb21_in/2 
* CEs [53] --> Loop 32 
* CEs [52] --> Loop 33 

#### Loops of eval_TIFFFetchAnyArray_bb21_in/2 
* Loop 32: eval_TIFFFetchAnyArray_bb21_in(V_i_6,B)->  eval_TIFFFetchAnyArray_bb21_in(V_i_6',B')
                  [V_i_6>=0,V_i_6=V_i_6'+1,B'=2,B=2] 
* Loop 33: eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) [0>=V_i_6+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) 
* RF of phase [32]: [V_i_6+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_i_6+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) 
* [[32],33]
* [33]


### Merging Chains  eval_TIFFFetchAnyArray_bb21_in/2 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_61/1 
* CE 18 is refined into CE [54,55] 
* CE 19 is refined into CE [56] 


#### Refined cost equations eval_TIFFFetchAnyArray_61/1 
* CE 54: eval_TIFFFetchAnyArray_61(B) = 1+ eval_TIFFFetchAnyArray_bb21_in(C,D):1
     [0>=C+1,D=2] 
* CE 55: eval_TIFFFetchAnyArray_61(B) = 1+ eval_TIFFFetchAnyArray_bb21_in(C,D):2
     [C>=0,D=2] 
* CE 56: eval_TIFFFetchAnyArray_61(B) = 0
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_61/1 
* CEs [54,55,56] --> Loop 34 

#### Loops of eval_TIFFFetchAnyArray_61/1 
* Loop 34: eval_TIFFFetchAnyArray_61(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_61(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_61(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_61(B) 
* [34]


### Merging Chains  eval_TIFFFetchAnyArray_61/1 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb3_in/2 
* CE 23 is refined into CE [57] 
* CE 22 is refined into CE [58] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb3_in/2 
* CE 57: eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) = 0
     [0>=V_i_0+1,B=2] 
* CE 58: eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) = 1+ eval_TIFFFetchAnyArray_bb3_in(C,D)
     [V_i_0>=0,V_i_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb3_in/2 
* CEs [58] --> Loop 35 
* CEs [57] --> Loop 36 

#### Loops of eval_TIFFFetchAnyArray_bb3_in/2 
* Loop 35: eval_TIFFFetchAnyArray_bb3_in(V_i_0,B)->  eval_TIFFFetchAnyArray_bb3_in(V_i_0',B')
                  [V_i_0>=0,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 36: eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) [0>=V_i_0+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) 
* RF of phase [35]: [V_i_0+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_i_0+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) 
* [[35],36]
* [36]


### Merging Chains  eval_TIFFFetchAnyArray_bb3_in/2 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[35]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb5_in/2 
* CE 25 is refined into CE [59] 
* CE 24 is refined into CE [60] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb5_in/2 
* CE 59: eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) = 0
     [0>=V_i_1+1,B=2] 
* CE 60: eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) = 1+ eval_TIFFFetchAnyArray_bb5_in(C,D)
     [V_i_1>=0,V_i_1=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb5_in/2 
* CEs [60] --> Loop 37 
* CEs [59] --> Loop 38 

#### Loops of eval_TIFFFetchAnyArray_bb5_in/2 
* Loop 37: eval_TIFFFetchAnyArray_bb5_in(V_i_1,B)->  eval_TIFFFetchAnyArray_bb5_in(V_i_1',B')
                  [V_i_1>=0,V_i_1=V_i_1'+1,B'=2,B=2] 
* Loop 38: eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) [0>=V_i_1+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) 
* RF of phase [37]: [V_i_1+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    V_i_1+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) 
* [[37],38]
* [38]


### Merging Chains  eval_TIFFFetchAnyArray_bb5_in/2 into  External patterns of execution 
* [[38]] --> 1 
* [[38,[37]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_4/1 
* CE 9 is refined into CE [61,62] 
* CE 10 is refined into CE [63,64] 
* CE 11 is refined into CE [65] 


#### Refined cost equations eval_TIFFFetchAnyArray_4/1 
* CE 61: eval_TIFFFetchAnyArray_4(B) = 1+ eval_TIFFFetchAnyArray_bb3_in(C,D):1
     [0>=C+1,D=2] 
* CE 62: eval_TIFFFetchAnyArray_4(B) = 1+ eval_TIFFFetchAnyArray_bb3_in(C,D):2
     [C>=0,D=2] 
* CE 63: eval_TIFFFetchAnyArray_4(B) = 1+ eval_TIFFFetchAnyArray_bb5_in(C,D):1
     [0>=C+1,D=2] 
* CE 64: eval_TIFFFetchAnyArray_4(B) = 1+ eval_TIFFFetchAnyArray_bb5_in(C,D):2
     [C>=0,D=2] 
* CE 65: eval_TIFFFetchAnyArray_4(B) = 0
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_4/1 
* CEs [61,62,63,64,65] --> Loop 39 

#### Loops of eval_TIFFFetchAnyArray_4/1 
* Loop 39: eval_TIFFFetchAnyArray_4(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_4(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_4(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_4(B) 
* [39]


### Merging Chains  eval_TIFFFetchAnyArray_4/1 into  External patterns of execution 
* [[39]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb11_in/2 
* CE 29 is refined into CE [66] 
* CE 28 is refined into CE [67] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb11_in/2 
* CE 66: eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) = 0
     [0>=V_i_3+1,B=2] 
* CE 67: eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) = 1+ eval_TIFFFetchAnyArray_bb11_in(C,D)
     [V_i_3>=0,V_i_3=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb11_in/2 
* CEs [67] --> Loop 40 
* CEs [66] --> Loop 41 

#### Loops of eval_TIFFFetchAnyArray_bb11_in/2 
* Loop 40: eval_TIFFFetchAnyArray_bb11_in(V_i_3,B)->  eval_TIFFFetchAnyArray_bb11_in(V_i_3',B')
                  [V_i_3>=0,V_i_3=V_i_3'+1,B'=2,B=2] 
* Loop 41: eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) [0>=V_i_3+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) 
* RF of phase [40]: [V_i_3+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V_i_3+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) 
* [[40],41]
* [41]


### Merging Chains  eval_TIFFFetchAnyArray_bb11_in/2 into  External patterns of execution 
* [[41]] --> 1 
* [[41,[40]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb9_in/2 
* CE 27 is refined into CE [68] 
* CE 26 is refined into CE [69] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb9_in/2 
* CE 68: eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) = 0
     [0>=V_i_2+1,B=2] 
* CE 69: eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) = 1+ eval_TIFFFetchAnyArray_bb9_in(C,D)
     [V_i_2>=0,V_i_2=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb9_in/2 
* CEs [69] --> Loop 42 
* CEs [68] --> Loop 43 

#### Loops of eval_TIFFFetchAnyArray_bb9_in/2 
* Loop 42: eval_TIFFFetchAnyArray_bb9_in(V_i_2,B)->  eval_TIFFFetchAnyArray_bb9_in(V_i_2',B')
                  [V_i_2>=0,V_i_2=V_i_2'+1,B'=2,B=2] 
* Loop 43: eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) [0>=V_i_2+1,B=2] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) 
* RF of phase [42]: [V_i_2+1]

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V_i_2+1


### Resulting Chains:eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) 
* [[42],43]
* [43]


### Merging Chains  eval_TIFFFetchAnyArray_bb9_in/2 into  External patterns of execution 
* [[43]] --> 1 
* [[43,[42]]] --> 2 


### Specialization of cost equations eval_TIFFFetchAnyArray_23/1 
* CE 12 is refined into CE [70,71] 
* CE 13 is refined into CE [72,73] 
* CE 14 is refined into CE [74] 


#### Refined cost equations eval_TIFFFetchAnyArray_23/1 
* CE 70: eval_TIFFFetchAnyArray_23(B) = 1+ eval_TIFFFetchAnyArray_bb9_in(C,D):1
     [0>=C+1,D=2] 
* CE 71: eval_TIFFFetchAnyArray_23(B) = 1+ eval_TIFFFetchAnyArray_bb9_in(C,D):2
     [C>=0,D=2] 
* CE 72: eval_TIFFFetchAnyArray_23(B) = 1+ eval_TIFFFetchAnyArray_bb11_in(C,D):1
     [0>=C+1,D=2] 
* CE 73: eval_TIFFFetchAnyArray_23(B) = 1+ eval_TIFFFetchAnyArray_bb11_in(C,D):2
     [C>=0,D=2] 
* CE 74: eval_TIFFFetchAnyArray_23(B) = 0
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_23/1 
* CEs [70,71,72,73,74] --> Loop 44 

#### Loops of eval_TIFFFetchAnyArray_23/1 
* Loop 44: eval_TIFFFetchAnyArray_23(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_23(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_23(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_23(B) 
* [44]


### Merging Chains  eval_TIFFFetchAnyArray_23/1 into  External patterns of execution 
* [[44]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_bb0_in/1 
* CE 3 is refined into CE [75] 
* CE 4 is refined into CE [76] 
* CE 5 is refined into CE [77] 
* CE 6 is refined into CE [78] 
* CE 7 is refined into CE [79] 
* CE 8 is refined into CE [80] 


#### Refined cost equations eval_TIFFFetchAnyArray_bb0_in/1 
* CE 75: eval_TIFFFetchAnyArray_bb0_in(B) = 0+ eval_TIFFFetchAnyArray_4(B):1
     [] 
* CE 76: eval_TIFFFetchAnyArray_bb0_in(B) = 0
     [] 
* CE 77: eval_TIFFFetchAnyArray_bb0_in(B) = 0+ eval_TIFFFetchAnyArray_23(B):1
     [] 
* CE 78: eval_TIFFFetchAnyArray_bb0_in(B) = 0+ eval_TIFFFetchAnyArray_42(B):1
     [] 
* CE 79: eval_TIFFFetchAnyArray_bb0_in(B) = 0+ eval_TIFFFetchAnyArray_61(B):1
     [] 
* CE 80: eval_TIFFFetchAnyArray_bb0_in(B) = 0+ eval_TIFFFetchAnyArray_71(B):1
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_bb0_in/1 
* CEs [75,76,77,78,79,80] --> Loop 45 

#### Loops of eval_TIFFFetchAnyArray_bb0_in/1 
* Loop 45: eval_TIFFFetchAnyArray_bb0_in(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_bb0_in(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_bb0_in(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_bb0_in(B) 
* [45]


### Merging Chains  eval_TIFFFetchAnyArray_bb0_in/1 into  External patterns of execution 
* [[45]] --> 1 


### Specialization of cost equations eval_TIFFFetchAnyArray_start/1 
* CE 2 is refined into CE [81] 


#### Refined cost equations eval_TIFFFetchAnyArray_start/1 
* CE 81: eval_TIFFFetchAnyArray_start(B) = 0+ eval_TIFFFetchAnyArray_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_TIFFFetchAnyArray_start/1 
* CEs [81] --> Loop 46 

#### Loops of eval_TIFFFetchAnyArray_start/1 
* Loop 46: eval_TIFFFetchAnyArray_start(B) [] 

### Ranking functions of CR eval_TIFFFetchAnyArray_start(B) 

#### Partial ranking functions of CR eval_TIFFFetchAnyArray_start(B) 


### Resulting Chains:eval_TIFFFetchAnyArray_start(B) 
* [46]


### Merging Chains  eval_TIFFFetchAnyArray_start/1 into  External patterns of execution 
* [[46]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) -> [eval_TIFFFetchAnyArray_bb25_in(V_i_7',B')] 
1
#### Cost of phase [24]:eval_TIFFFetchAnyArray_bb25_in(V_i_7,B) -> [eval_TIFFFetchAnyArray_bb25_in(V_i_7',B')] 
1*it(24)+0
  Such that:it(24) =< V_i_7+1
it(24) =< V_i_7-V_i_7'

#### Cost of chains of eval_TIFFFetchAnyArray_bb25_in(V_i_7,B):
* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< V_i_7+1

  with precondition: [B=2,V_i_7>=0] 

* Chain [25]: 0
  with precondition: [B=2,0>=V_i_7+1] 


#### Cost of chains of eval_TIFFFetchAnyArray_71(B):
* Chain [26]: 1*aux(1)+0
  with precondition: [] 


#### Cost of loops [27] 

 * loop 27:eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) -> [eval_TIFFFetchAnyArray_bb15_in(V_i_4',B')] 
1
#### Cost of phase [27]:eval_TIFFFetchAnyArray_bb15_in(V_i_4,B) -> [eval_TIFFFetchAnyArray_bb15_in(V_i_4',B')] 
1*it(27)+0
  Such that:it(27) =< V_i_4+1
it(27) =< V_i_4-V_i_4'

#### Cost of chains of eval_TIFFFetchAnyArray_bb15_in(V_i_4,B):
* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< V_i_4+1

  with precondition: [B=2,V_i_4>=0] 

* Chain [28]: 0
  with precondition: [B=2,0>=V_i_4+1] 


#### Cost of loops [29] 

 * loop 29:eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) -> [eval_TIFFFetchAnyArray_bb17_in(V_i_5',B')] 
1
#### Cost of phase [29]:eval_TIFFFetchAnyArray_bb17_in(V_i_5,B) -> [eval_TIFFFetchAnyArray_bb17_in(V_i_5',B')] 
1*it(29)+0
  Such that:it(29) =< V_i_5+1
it(29) =< V_i_5-V_i_5'

#### Cost of chains of eval_TIFFFetchAnyArray_bb17_in(V_i_5,B):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< V_i_5+1

  with precondition: [B=2,V_i_5>=0] 

* Chain [30]: 0
  with precondition: [B=2,0>=V_i_5+1] 


#### Cost of chains of eval_TIFFFetchAnyArray_42(B):
* Chain [31]: 1*aux(2)+0
  with precondition: [] 


#### Cost of loops [32] 

 * loop 32:eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) -> [eval_TIFFFetchAnyArray_bb21_in(V_i_6',B')] 
1
#### Cost of phase [32]:eval_TIFFFetchAnyArray_bb21_in(V_i_6,B) -> [eval_TIFFFetchAnyArray_bb21_in(V_i_6',B')] 
1*it(32)+0
  Such that:it(32) =< V_i_6+1
it(32) =< V_i_6-V_i_6'

#### Cost of chains of eval_TIFFFetchAnyArray_bb21_in(V_i_6,B):
* Chain [[32],33]: 1*it(32)+0
  Such that:it(32) =< V_i_6+1

  with precondition: [B=2,V_i_6>=0] 

* Chain [33]: 0
  with precondition: [B=2,0>=V_i_6+1] 


#### Cost of chains of eval_TIFFFetchAnyArray_61(B):
* Chain [34]: 1*aux(3)+0
  with precondition: [] 


#### Cost of loops [35] 

 * loop 35:eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) -> [eval_TIFFFetchAnyArray_bb3_in(V_i_0',B')] 
1
#### Cost of phase [35]:eval_TIFFFetchAnyArray_bb3_in(V_i_0,B) -> [eval_TIFFFetchAnyArray_bb3_in(V_i_0',B')] 
1*it(35)+0
  Such that:it(35) =< V_i_0+1
it(35) =< V_i_0-V_i_0'

#### Cost of chains of eval_TIFFFetchAnyArray_bb3_in(V_i_0,B):
* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< V_i_0+1

  with precondition: [B=2,V_i_0>=0] 

* Chain [36]: 0
  with precondition: [B=2,0>=V_i_0+1] 


#### Cost of loops [37] 

 * loop 37:eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) -> [eval_TIFFFetchAnyArray_bb5_in(V_i_1',B')] 
1
#### Cost of phase [37]:eval_TIFFFetchAnyArray_bb5_in(V_i_1,B) -> [eval_TIFFFetchAnyArray_bb5_in(V_i_1',B')] 
1*it(37)+0
  Such that:it(37) =< V_i_1+1
it(37) =< V_i_1-V_i_1'

#### Cost of chains of eval_TIFFFetchAnyArray_bb5_in(V_i_1,B):
* Chain [[37],38]: 1*it(37)+0
  Such that:it(37) =< V_i_1+1

  with precondition: [B=2,V_i_1>=0] 

* Chain [38]: 0
  with precondition: [B=2,0>=V_i_1+1] 


#### Cost of chains of eval_TIFFFetchAnyArray_4(B):
* Chain [39]: 1*aux(4)+0
  with precondition: [] 


#### Cost of loops [40] 

 * loop 40:eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) -> [eval_TIFFFetchAnyArray_bb11_in(V_i_3',B')] 
1
#### Cost of phase [40]:eval_TIFFFetchAnyArray_bb11_in(V_i_3,B) -> [eval_TIFFFetchAnyArray_bb11_in(V_i_3',B')] 
1*it(40)+0
  Such that:it(40) =< V_i_3+1
it(40) =< V_i_3-V_i_3'

#### Cost of chains of eval_TIFFFetchAnyArray_bb11_in(V_i_3,B):
* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< V_i_3+1

  with precondition: [B=2,V_i_3>=0] 

* Chain [41]: 0
  with precondition: [B=2,0>=V_i_3+1] 


#### Cost of loops [42] 

 * loop 42:eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) -> [eval_TIFFFetchAnyArray_bb9_in(V_i_2',B')] 
1
#### Cost of phase [42]:eval_TIFFFetchAnyArray_bb9_in(V_i_2,B) -> [eval_TIFFFetchAnyArray_bb9_in(V_i_2',B')] 
1*it(42)+0
  Such that:it(42) =< V_i_2+1
it(42) =< V_i_2-V_i_2'

#### Cost of chains of eval_TIFFFetchAnyArray_bb9_in(V_i_2,B):
* Chain [[42],43]: 1*it(42)+0
  Such that:it(42) =< V_i_2+1

  with precondition: [B=2,V_i_2>=0] 

* Chain [43]: 0
  with precondition: [B=2,0>=V_i_2+1] 


#### Cost of chains of eval_TIFFFetchAnyArray_23(B):
* Chain [44]: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_TIFFFetchAnyArray_bb0_in(B):
* Chain [45]: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_TIFFFetchAnyArray_start(B):
* Chain [46]: 1*s(14)+0
  with precondition: [] 


Closed-form bounds of eval_TIFFFetchAnyArray_start(B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_TIFFFetchAnyArray_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 61 ms.
* Invariants computed in 91 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 138 ms.
* Termination proved in 28 ms.
* Upper bounds computed in 109 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 37 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 540 ms.

