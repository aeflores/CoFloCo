Warning: Ignored call to eval_mp_recip_stop/1 in equation eval_mp_recip_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mp_recip_38/3,eval_mp_recip_39/3,eval_mp_recip_40/3,eval_mp_recip_42/3,eval_mp_recip_43/3,eval_mp_recip_bb3_in/2,eval_mp_recip_bb6_in/3]
1. non_recursive  : [eval_mp_recip_bb8_in/1]
2. non_recursive  : [eval_mp_recip_56/1]
3. non_recursive  : [eval_mp_recip_55/1]
4. non_recursive  : [loop_cont_eval_mp_recip_bb3_in/2]
5. non_recursive  : [eval_mp_recip_9/2]
6. non_recursive  : [eval_mp_recip_8/1]
7. non_recursive  : [eval_mp_recip_7/1]
8. non_recursive  : [eval_mp_recip_6/1]
9. non_recursive  : [eval_mp_recip_bb2_in/1]
10. non_recursive  : [eval_mp_recip_4/1]
11. non_recursive  : [eval_mp_recip_3/1]
12. non_recursive  : [eval_mp_recip_bb0_in/1]
13. non_recursive  : [eval_mp_recip_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mp_recip_bb3_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_mp_recip_9/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_mp_recip_4/1
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_mp_recip_bb0_in/1
13. SCC is partially evaluated into eval_mp_recip_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_recip_bb3_in/2 
* CE 10 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 9 is refined into CE [13] 


#### Refined cost equations eval_mp_recip_bb3_in/2 
* CE 11: eval_mp_recip_bb3_in(V_bits_0,B) = 0
     [B=2,V_bits_0=0] 
* CE 12: eval_mp_recip_bb3_in(V_bits_0,B) = 1+ eval_mp_recip_bb3_in(C,D)
     [V_bits_0>=1,V_bits_0=C+1,D=2,B=2] 
* CE 13: eval_mp_recip_bb3_in(V_bits_0,B) = 1+ eval_mp_recip_bb3_in(C,D)
     [0>=V_bits_0+1,V_bits_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_mp_recip_bb3_in/2 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_mp_recip_bb3_in/2 
* Loop 8: eval_mp_recip_bb3_in(V_bits_0,B)->  eval_mp_recip_bb3_in(V_bits_0',B')
                  [V_bits_0>=1,V_bits_0=V_bits_0'+1,B'=2,B=2] 
* Loop 9: eval_mp_recip_bb3_in(V_bits_0,B)->  eval_mp_recip_bb3_in(V_bits_0',B')
                  [0>=V_bits_0+1,V_bits_0=V_bits_0'+1,B'=2,B=2] 
* Loop 10: eval_mp_recip_bb3_in(V_bits_0,B) [B=2,V_bits_0=0] 

### Ranking functions of CR eval_mp_recip_bb3_in(V_bits_0,B) 
* RF of phase [8]: [V_bits_0]

#### Partial ranking functions of CR eval_mp_recip_bb3_in(V_bits_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_bits_0


### Resulting Chains:eval_mp_recip_bb3_in(V_bits_0,B) 
* [[9]]...
* [[8],10]
* [10]


### Merging Chains  eval_mp_recip_bb3_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[8]]] --> 2 
* [[[9]]] --> 3 


### Specialization of cost equations eval_mp_recip_9/2 
* CE 7 is refined into CE [14,15,16] 


#### Refined cost equations eval_mp_recip_9/2 
* CE 14: eval_mp_recip_9(V_7,B) = 1+ eval_mp_recip_bb3_in(C,D):1
     [D=2,C=0,V_7=0] 
* CE 15: eval_mp_recip_9(V_7,B) = 1+ eval_mp_recip_bb3_in(V_7,C):2
     [V_7>=1,C=2] 
* CE 16: eval_mp_recip_9(V_7,B) = 1+ eval_mp_recip_bb3_in(V_7,C):3
     [0>=V_7+1,C=2] 

### Cost equations --> "Loop" of eval_mp_recip_9/2 
* CEs [16] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_mp_recip_9/2 
* Loop 11: eval_mp_recip_9(V_7,B) [0>=V_7+1] 
* Loop 12: eval_mp_recip_9(V_7,B) [V_7>=1] 
* Loop 13: eval_mp_recip_9(V_7,B) [V_7=0] 

### Ranking functions of CR eval_mp_recip_9(V_7,B) 

#### Partial ranking functions of CR eval_mp_recip_9(V_7,B) 


### Resulting Chains:eval_mp_recip_9(V_7,B) 
* [13]
* [12]
* [11]...


### Merging Chains  eval_mp_recip_9/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[11]] --> 3 


### Specialization of cost equations eval_mp_recip_4/1 
* CE 5 is refined into CE [17] 
* CE 6 is refined into CE [18,19,20] 


#### Refined cost equations eval_mp_recip_4/1 
* CE 17: eval_mp_recip_4(B) = 0
     [] 
* CE 18: eval_mp_recip_4(B) = 0+ eval_mp_recip_9(C,B):1
     [C=0] 
* CE 19: eval_mp_recip_4(B) = 0+ eval_mp_recip_9(C,B):2
     [C>=1] 
* CE 20: eval_mp_recip_4(B) = 0+ eval_mp_recip_9(C,B):3
     [0>=C+1] 

### Cost equations --> "Loop" of eval_mp_recip_4/1 
* CEs [20] --> Loop 14 
* CEs [17,18,19] --> Loop 15 

#### Loops of eval_mp_recip_4/1 
* Loop 14: eval_mp_recip_4(B) [] 
* Loop 15: eval_mp_recip_4(B) [] 

### Ranking functions of CR eval_mp_recip_4(B) 

#### Partial ranking functions of CR eval_mp_recip_4(B) 


### Resulting Chains:eval_mp_recip_4(B) 
* [15]
* [14]...


### Merging Chains  eval_mp_recip_4/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_mp_recip_bb0_in/1 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23,24,25] 


#### Refined cost equations eval_mp_recip_bb0_in/1 
* CE 21: eval_mp_recip_bb0_in(B) = 0+ eval_mp_recip_4(B):1
     [] 
* CE 22: eval_mp_recip_bb0_in(B) = 0+ eval_mp_recip_4(B):2
     [] 
* CE 23: eval_mp_recip_bb0_in(B) = 0+ eval_mp_recip_9(C,B):1
     [C=0] 
* CE 24: eval_mp_recip_bb0_in(B) = 0+ eval_mp_recip_9(C,B):2
     [C>=1] 
* CE 25: eval_mp_recip_bb0_in(B) = 0+ eval_mp_recip_9(C,B):3
     [0>=C+1] 

### Cost equations --> "Loop" of eval_mp_recip_bb0_in/1 
* CEs [22,25] --> Loop 16 
* CEs [21,23,24] --> Loop 17 

#### Loops of eval_mp_recip_bb0_in/1 
* Loop 16: eval_mp_recip_bb0_in(B) [] 
* Loop 17: eval_mp_recip_bb0_in(B) [] 

### Ranking functions of CR eval_mp_recip_bb0_in(B) 

#### Partial ranking functions of CR eval_mp_recip_bb0_in(B) 


### Resulting Chains:eval_mp_recip_bb0_in(B) 
* [17]
* [16]...


### Merging Chains  eval_mp_recip_bb0_in/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_mp_recip_start/1 
* CE 2 is refined into CE [26,27] 


#### Refined cost equations eval_mp_recip_start/1 
* CE 26: eval_mp_recip_start(B) = 0+ eval_mp_recip_bb0_in(B):1
     [] 
* CE 27: eval_mp_recip_start(B) = 0+ eval_mp_recip_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mp_recip_start/1 
* CEs [27] --> Loop 18 
* CEs [26] --> Loop 19 

#### Loops of eval_mp_recip_start/1 
* Loop 18: eval_mp_recip_start(B) [] 
* Loop 19: eval_mp_recip_start(B) [] 

### Ranking functions of CR eval_mp_recip_start(B) 

#### Partial ranking functions of CR eval_mp_recip_start(B) 


### Resulting Chains:eval_mp_recip_start(B) 
* [19]
* [18]...


### Merging Chains  eval_mp_recip_start/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_mp_recip_bb3_in(V_bits_0,B) -> [eval_mp_recip_bb3_in(V_bits_0',B')] 
1
#### Cost of phase [9]:eval_mp_recip_bb3_in(V_bits_0,B) -> [eval_mp_recip_bb3_in(V_bits_0',B')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_mp_recip_bb3_in(V_bits_0,B) -> [eval_mp_recip_bb3_in(V_bits_0',B')] 
1
#### Cost of phase [8]:eval_mp_recip_bb3_in(V_bits_0,B) -> [eval_mp_recip_bb3_in(V_bits_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_bits_0
it(8) =< V_bits_0-V_bits_0'

#### Cost of chains of eval_mp_recip_bb3_in(V_bits_0,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V_bits_0+1,B=2] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_bits_0

  with precondition: [B=2,V_bits_0>=1] 

* Chain [10]: 0
  with precondition: [V_bits_0=0,B=2] 


#### Cost of chains of eval_mp_recip_9(V_7,B):
* Chain [13]: 1
  with precondition: [V_7=0] 

* Chain [12]: 1*s(1)+1
  Such that:s(1) =< V_7

  with precondition: [V_7>=1] 

* Chain [11]...: 1*s(2)+1
  with precondition: [0>=V_7+1] 


#### Cost of chains of eval_mp_recip_4(B):
* Chain [15]: 1*aux(1)+0
  with precondition: [] 

* Chain [14]...: 1*s(4)+1
  with precondition: [] 


#### Cost of chains of eval_mp_recip_bb0_in(B):
* Chain [17]: 1*aux(2)+0
  with precondition: [] 

* Chain [16]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_mp_recip_start(B):
* Chain [19]: 1*s(9)+0
  with precondition: [] 

* Chain [18]...: 1*s(10)+0
  with precondition: [] 


Closed-form bounds of eval_mp_recip_start(B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_recip_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 15 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 57 ms.

