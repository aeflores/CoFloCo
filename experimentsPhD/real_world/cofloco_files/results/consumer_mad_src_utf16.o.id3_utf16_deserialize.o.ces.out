Warning: Ignored call to eval_id3_utf16_deserialize_stop/1 in equation eval_id3_utf16_deserialize_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_id3_utf16_deserialize_27/3,eval_id3_utf16_deserialize_28/3,eval_id3_utf16_deserialize_bb7_in/3]
1. non_recursive  : [eval_id3_utf16_deserialize_bb12_in/1]
2. non_recursive  : [eval_id3_utf16_deserialize_40/1]
3. non_recursive  : [eval_id3_utf16_deserialize_39/1]
4. non_recursive  : [eval_id3_utf16_deserialize_bb11_in/1]
5. non_recursive  : [eval_id3_utf16_deserialize_38/1]
6. non_recursive  : [eval_id3_utf16_deserialize_37/1]
7. non_recursive  : [eval_id3_utf16_deserialize_36/1]
8. non_recursive  : [eval_id3_utf16_deserialize_35/2]
9. non_recursive  : [eval_id3_utf16_deserialize_33/2]
10. non_recursive  : [eval_id3_utf16_deserialize_32/1]
11. non_recursive  : [eval_id3_utf16_deserialize__critedge_in/1]
12. non_recursive  : [loop_cont_eval_id3_utf16_deserialize_bb7_in/2]
13. non_recursive  : [eval_id3_utf16_deserialize_bb6_in/2]
14. non_recursive  : [eval_id3_utf16_deserialize_NewDefault_in/2]
15. non_recursive  : [eval_id3_utf16_deserialize_5/2]
16. non_recursive  : [eval_id3_utf16_deserialize_4/3]
17. non_recursive  : [eval_id3_utf16_deserialize_bb0_in/3]
18. non_recursive  : [eval_id3_utf16_deserialize_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_id3_utf16_deserialize_bb7_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_id3_utf16_deserialize_36/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_id3_utf16_deserialize_bb6_in/2
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_id3_utf16_deserialize_5/2
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_id3_utf16_deserialize_bb0_in/3
18. SCC is partially evaluated into eval_id3_utf16_deserialize_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_id3_utf16_deserialize_bb7_in/3 
* CE 12 is refined into CE [14] 
* CE 11 is refined into CE [15] 


#### Refined cost equations eval_id3_utf16_deserialize_bb7_in/3 
* CE 14: eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) = 1+ eval_id3_utf16_deserialize_bb7_in(V__1,V_30,C)
     [C=2,B=2] 
* CE 15: eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_bb7_in/3 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 

#### Loops of eval_id3_utf16_deserialize_bb7_in/3 
* Loop 10: eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) [B=2] 
* Loop 11: eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B)->  eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) 


### Resulting Chains:eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) 
* [[11]]...
* [[11],10]
* [10]


### Merging Chains  eval_id3_utf16_deserialize_bb7_in/3 into  External patterns of execution 
* [[10],[10,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_id3_utf16_deserialize_36/1 
* CE 13 is refined into CE [16] 


#### Refined cost equations eval_id3_utf16_deserialize_36/1 
* CE 16: eval_id3_utf16_deserialize_36(B) = 0
     [] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_36/1 
* CEs [16] --> Loop 12 

#### Loops of eval_id3_utf16_deserialize_36/1 
* Loop 12: eval_id3_utf16_deserialize_36(B) [] 

### Ranking functions of CR eval_id3_utf16_deserialize_36(B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_36(B) 


### Resulting Chains:eval_id3_utf16_deserialize_36(B) 
* [12]


### Merging Chains  eval_id3_utf16_deserialize_36/1 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_id3_utf16_deserialize_bb6_in/2 
* CE 10 is refined into CE [17,18] 


#### Refined cost equations eval_id3_utf16_deserialize_bb6_in/2 
* CE 17: eval_id3_utf16_deserialize_bb6_in(V__1,B) = 1+ eval_id3_utf16_deserialize_bb7_in(V__1,C,D):1+ eval_id3_utf16_deserialize_36(B):1
     [D=2] 
* CE 18: eval_id3_utf16_deserialize_bb6_in(V__1,B) = 1+ eval_id3_utf16_deserialize_bb7_in(V__1,C,D):2
     [D=2] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_bb6_in/2 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_id3_utf16_deserialize_bb6_in/2 
* Loop 13: eval_id3_utf16_deserialize_bb6_in(V__1,B) [] 
* Loop 14: eval_id3_utf16_deserialize_bb6_in(V__1,B) [] 

### Ranking functions of CR eval_id3_utf16_deserialize_bb6_in(V__1,B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_bb6_in(V__1,B) 


### Resulting Chains:eval_id3_utf16_deserialize_bb6_in(V__1,B) 
* [14]
* [13]...


### Merging Chains  eval_id3_utf16_deserialize_bb6_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_id3_utf16_deserialize_5/2 
* CE 6 is refined into CE [19] 
* CE 7 is refined into CE [20,21] 
* CE 8 is refined into CE [22,23] 
* CE 9 is refined into CE [24,25] 


#### Refined cost equations eval_id3_utf16_deserialize_5/2 
* CE 19: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0
     [] 
* CE 20: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(C,B):1
     [C=1] 
* CE 21: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(C,B):2
     [C=1] 
* CE 22: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(V_byteorder,B):1
     [] 
* CE 23: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(V_byteorder,B):2
     [] 
* CE 24: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(C,B):1
     [C=2] 
* CE 25: eval_id3_utf16_deserialize_5(V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb6_in(C,B):2
     [C=2] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_5/2 
* CEs [21,23,25] --> Loop 15 
* CEs [19,20,22,24] --> Loop 16 

#### Loops of eval_id3_utf16_deserialize_5/2 
* Loop 15: eval_id3_utf16_deserialize_5(V_byteorder,B) [] 
* Loop 16: eval_id3_utf16_deserialize_5(V_byteorder,B) [] 

### Ranking functions of CR eval_id3_utf16_deserialize_5(V_byteorder,B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_5(V_byteorder,B) 


### Resulting Chains:eval_id3_utf16_deserialize_5(V_byteorder,B) 
* [16]
* [15]...


### Merging Chains  eval_id3_utf16_deserialize_5/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_id3_utf16_deserialize_bb0_in/3 
* CE 4 is refined into CE [26,27] 
* CE 5 is refined into CE [28,29] 
* CE 3 is refined into CE [30,31] 


#### Refined cost equations eval_id3_utf16_deserialize_bb0_in/3 
* CE 26: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):1
     [V_length>=1] 
* CE 27: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):2
     [V_length>=1] 
* CE 28: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):1
     [0>=V_length+1] 
* CE 29: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):2
     [0>=V_length+1] 
* CE 30: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):1
     [V_length=0] 
* CE 31: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_5(V_byteorder,B):2
     [V_length=0] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_bb0_in/3 
* CEs [27] --> Loop 17 
* CEs [29] --> Loop 18 
* CEs [31] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [30] --> Loop 22 

#### Loops of eval_id3_utf16_deserialize_bb0_in/3 
* Loop 17: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [V_length>=1] 
* Loop 18: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [0>=V_length+1] 
* Loop 19: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [V_length=0] 
* Loop 20: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [V_length>=1] 
* Loop 21: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [0>=V_length+1] 
* Loop 22: eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) [V_length=0] 

### Ranking functions of CR eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) 


### Resulting Chains:eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B) 
* [22]
* [21]
* [20]
* [19]...
* [18]...
* [17]...


### Merging Chains  eval_id3_utf16_deserialize_bb0_in/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 
* [[18]] --> 5 
* [[17]] --> 6 


### Specialization of cost equations eval_id3_utf16_deserialize_start/3 
* CE 2 is refined into CE [32,33,34,35,36,37] 


#### Refined cost equations eval_id3_utf16_deserialize_start/3 
* CE 32: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(C,V_byteorder,B):1
     [C=0,V_length=0] 
* CE 33: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B):2
     [0>=V_length+1] 
* CE 34: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B):3
     [V_length>=1] 
* CE 35: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(C,V_byteorder,B):4
     [C=0,V_length=0] 
* CE 36: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B):5
     [0>=V_length+1] 
* CE 37: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) = 0+ eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B):6
     [V_length>=1] 

### Cost equations --> "Loop" of eval_id3_utf16_deserialize_start/3 
* CEs [37] --> Loop 23 
* CEs [36] --> Loop 24 
* CEs [35] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [33] --> Loop 27 
* CEs [32] --> Loop 28 

#### Loops of eval_id3_utf16_deserialize_start/3 
* Loop 23: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [V_length>=1] 
* Loop 24: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [0>=V_length+1] 
* Loop 25: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [V_length=0] 
* Loop 26: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [V_length>=1] 
* Loop 27: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [0>=V_length+1] 
* Loop 28: eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) [V_length=0] 

### Ranking functions of CR eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) 

#### Partial ranking functions of CR eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) 


### Resulting Chains:eval_id3_utf16_deserialize_start(V_length,V_byteorder,B) 
* [28]
* [27]
* [26]
* [25]...
* [24]...
* [23]...


### Merging Chains  eval_id3_utf16_deserialize_start/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 
* [[24]] --> 5 
* [[23]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) -> [eval_id3_utf16_deserialize_bb7_in(V__1',V_30',B')] 
1
#### Cost of phase [11]:eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) -> [eval_id3_utf16_deserialize_bb7_in(V__1',V_30',B')] 
1*it(11)+0
#### Cost of phase [11]:eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B) -> [eval_id3_utf16_deserialize_bb7_in(V__1',V_30',B')] 
1*it(11)+0
#### Cost of chains of eval_id3_utf16_deserialize_bb7_in(V__1,V_30,B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],10]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [10]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_id3_utf16_deserialize_36(B):
* Chain [12]: 0
  with precondition: [] 


#### Cost of chains of eval_id3_utf16_deserialize_bb6_in(V__1,B):
* Chain [14]: 1*s(2)+1
  with precondition: [] 

* Chain [13]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_id3_utf16_deserialize_5(V_byteorder,B):
* Chain [16]: 1*aux(2)+0
  with precondition: [] 

* Chain [15]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_id3_utf16_deserialize_bb0_in(V_length,V_byteorder,B):
* Chain [22]: 1*s(10)+0
  with precondition: [V_length=0] 

* Chain [21]: 1*s(11)+0
  with precondition: [0>=V_length+1] 

* Chain [20]: 1*s(12)+0
  with precondition: [V_length>=1] 

* Chain [19]...: 1*s(13)+0
  with precondition: [V_length=0] 

* Chain [18]...: 1*s(14)+0
  with precondition: [0>=V_length+1] 

* Chain [17]...: 1*s(15)+0
  with precondition: [V_length>=1] 


#### Cost of chains of eval_id3_utf16_deserialize_start(V_length,V_byteorder,B):
* Chain [28]: 1*s(16)+0
  with precondition: [V_length=0] 

* Chain [27]: 1*s(17)+0
  with precondition: [0>=V_length+1] 

* Chain [26]: 1*s(18)+0
  with precondition: [V_length>=1] 

* Chain [25]...: 1*s(19)+0
  with precondition: [V_length=0] 

* Chain [24]...: 1*s(20)+0
  with precondition: [0>=V_length+1] 

* Chain [23]...: 1*s(21)+0
  with precondition: [V_length>=1] 


Closed-form bounds of eval_id3_utf16_deserialize_start(V_length,V_byteorder,B): 
-------------------------------------
* Chain [28] with precondition: [V_length=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [0>=V_length+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26] with precondition: [V_length>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [V_length=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [0>=V_length+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [V_length>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_id3_utf16_deserialize_start(V_length,V_byteorder,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 18 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 70 ms.

