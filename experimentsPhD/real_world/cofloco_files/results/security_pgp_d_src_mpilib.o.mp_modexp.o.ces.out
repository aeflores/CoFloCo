Warning: Ignored call to eval_mp_modexp_stop/1 in equation eval_mp_modexp_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mp_modexp_bb22_in/1]
1. non_recursive  : [eval_mp_modexp_bb4_in/1]
2. non_recursive  : [eval_mp_modexp_11/1]
3. non_recursive  : [eval_mp_modexp_10/2]
4. recursive  : [eval_mp_modexp_bb13_in/8]
5. recursive  : [eval_mp_modexp_66/7,eval_mp_modexp_67/7,eval_mp_modexp_72/7,eval_mp_modexp_73/7,eval_mp_modexp_78/8,eval_mp_modexp_79/8,eval_mp_modexp_bb16_in/6,eval_mp_modexp_bb20_in/8]
6. non_recursive  : [eval_mp_modexp_89/1]
7. non_recursive  : [eval_mp_modexp_88/2]
8. non_recursive  : [eval_mp_modexp_87/3]
9. non_recursive  : [eval_mp_modexp_86/3]
10. non_recursive  : [eval_mp_modexp_85/3]
11. non_recursive  : [loop_cont_eval_mp_modexp_bb16_in/4]
12. non_recursive  : [eval_mp_modexp_59/4]
13. non_recursive  : [eval_mp_modexp_58/5]
14. non_recursive  : [loop_cont_eval_mp_modexp_bb13_in/6]
15. non_recursive  : [eval_mp_modexp_37/3]
16. non_recursive  : [eval_mp_modexp_36/3]
17. non_recursive  : [eval_mp_modexp_33/3]
18. non_recursive  : [eval_mp_modexp_32/3]
19. non_recursive  : [eval_mp_modexp_27/3]
20. non_recursive  : [eval_mp_modexp_26/3]
21. non_recursive  : [eval_mp_modexp_23/2]
22. non_recursive  : [eval_mp_modexp_22/2]
23. non_recursive  : [eval_mp_modexp_20/2]
24. non_recursive  : [eval_mp_modexp_19/2]
25. non_recursive  : [eval_mp_modexp_bb7_in/2]
26. non_recursive  : [eval_mp_modexp_17/2]
27. non_recursive  : [eval_mp_modexp_16/2]
28. non_recursive  : [eval_mp_modexp_bb5_in/2]
29. non_recursive  : [eval_mp_modexp_5/2]
30. non_recursive  : [eval_mp_modexp_4/2]
31. non_recursive  : [eval_mp_modexp_1/2]
32. non_recursive  : [eval_mp_modexp_0/2]
33. non_recursive  : [eval_mp_modexp_bb0_in/2]
34. non_recursive  : [eval_mp_modexp_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mp_modexp_11/1
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_mp_modexp_bb13_in/8
5. SCC is partially evaluated into eval_mp_modexp_bb16_in/6
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_mp_modexp_59/4
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_mp_modexp_37/3
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_mp_modexp_33/3
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_mp_modexp_23/2
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_mp_modexp_20/2
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_mp_modexp_17/2
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_mp_modexp_bb5_in/2
29. SCC is partially evaluated into eval_mp_modexp_5/2
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_mp_modexp_1/2
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_mp_modexp_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_modexp_11/1 
* CE 10 is refined into CE [27] 


#### Refined cost equations eval_mp_modexp_11/1 
* CE 27: eval_mp_modexp_11(B) = 0
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_11/1 
* CEs [27] --> Loop 17 

#### Loops of eval_mp_modexp_11/1 
* Loop 17: eval_mp_modexp_11(B) [] 

### Ranking functions of CR eval_mp_modexp_11(B) 

#### Partial ranking functions of CR eval_mp_modexp_11(B) 


### Resulting Chains:eval_mp_modexp_11(B) 
* [17]


### Merging Chains  eval_mp_modexp_11/1 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_mp_modexp_bb13_in/8 
* CE 22 is refined into CE [28] 
* CE 21 is refined into CE [29] 


#### Refined cost equations eval_mp_modexp_bb13_in/8 
* CE 28: eval_mp_modexp_bb13_in(A,B,C,D,A,B,E,F) = 0
     [E+1=C,D=3] 
* CE 29: eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,G,H,C,D,E,F)
     [G+1=V_bits_0,H=3,B=3] 

### Cost equations --> "Loop" of eval_mp_modexp_bb13_in/8 
* CEs [29] --> Loop 18 
* CEs [28] --> Loop 19 

#### Loops of eval_mp_modexp_bb13_in/8 
* Loop 18: eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F)->  eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0',B',C,D,E,F)
                  [V_bits_0=V_bits_0'+1,B'=3,B=3] 
* Loop 19: eval_mp_modexp_bb13_in(A,B,C,D,A,B,E,F) [C=E+1,D=3] 

### Ranking functions of CR eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) 


### Resulting Chains:eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) 
* [[18]]...
* [[18],19]
* [19]


### Merging Chains  eval_mp_modexp_bb13_in/8 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[18]]] --> 2 
* [[[18]]] --> 3 


### Specialization of cost equations eval_mp_modexp_bb16_in/6 
* CE 26 is refined into CE [30] 
* CE 24 is refined into CE [31] 
* CE 25 is refined into CE [32] 


#### Refined cost equations eval_mp_modexp_bb16_in/6 
* CE 30: eval_mp_modexp_bb16_in(A,B,C,D,A,B) = 0
     [D=2,C=0] 
* CE 31: eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) = 1+ eval_mp_modexp_bb16_in(V__global_precision,V_24,E,F,C,D)
     [V_bits_1>=1,V_bits_1=E+1,F=2,B=2] 
* CE 32: eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) = 1+ eval_mp_modexp_bb16_in(V__global_precision,V_24,E,F,C,D)
     [0>=V_bits_1+1,V_bits_1=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_mp_modexp_bb16_in/6 
* CEs [31] --> Loop 20 
* CEs [32] --> Loop 21 
* CEs [30] --> Loop 22 

#### Loops of eval_mp_modexp_bb16_in/6 
* Loop 20: eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D)->  eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1',B',C,D)
                  [V_bits_1>=1,V_bits_1=V_bits_1'+1,B'=2,B=2] 
* Loop 21: eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D)->  eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1',B',C,D)
                  [0>=V_bits_1+1,V_bits_1=V_bits_1'+1,B'=2,B=2] 
* Loop 22: eval_mp_modexp_bb16_in(A,B,C,D,A,B) [D=2,C=0] 

### Ranking functions of CR eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) 
* RF of phase [20]: [V_bits_1]

#### Partial ranking functions of CR eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_bits_1


### Resulting Chains:eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) 
* [[21]]...
* [[20],22]
* [22]


### Merging Chains  eval_mp_modexp_bb16_in/6 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[20]]] --> 2 
* [[[21]]] --> 3 


### Specialization of cost equations eval_mp_modexp_59/4 
* CE 23 is refined into CE [33,34,35] 


#### Refined cost equations eval_mp_modexp_59/4 
* CE 33: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) = 1+ eval_mp_modexp_bb16_in(V__global_precision,V_24,C,D,V__global_precision,V_24):1
     [D=2,C=0,V_50=0] 
* CE 34: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) = 1+ eval_mp_modexp_bb16_in(V__global_precision,V_24,V_50,C,V__global_precision,V_24):2
     [V_50>=1,C=2] 
* CE 35: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) = 1+ eval_mp_modexp_bb16_in(V__global_precision,V_24,V_50,C,D,E):3
     [0>=V_50+1,C=2] 

### Cost equations --> "Loop" of eval_mp_modexp_59/4 
* CEs [35] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [33] --> Loop 25 

#### Loops of eval_mp_modexp_59/4 
* Loop 23: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) [0>=V_50+1] 
* Loop 24: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) [V_50>=1] 
* Loop 25: eval_mp_modexp_59(V__global_precision,V_24,V_50,B) [V_50=0] 

### Ranking functions of CR eval_mp_modexp_59(V__global_precision,V_24,V_50,B) 

#### Partial ranking functions of CR eval_mp_modexp_59(V__global_precision,V_24,V_50,B) 


### Resulting Chains:eval_mp_modexp_59(V__global_precision,V_24,V_50,B) 
* [25]
* [24]
* [23]...


### Merging Chains  eval_mp_modexp_59/4 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations eval_mp_modexp_37/3 
* CE 19 is refined into CE [36,37,38,39,40,41,42] 
* CE 20 is refined into CE [43] 


#### Refined cost equations eval_mp_modexp_37/3 
* CE 36: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):1+ eval_mp_modexp_59(V__global_precision,V_24,G,B):1
     [G=0,E=0,D=3,C=1] 
* CE 37: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):1+ eval_mp_modexp_59(V__global_precision,V_24,E,B):2
     [E>=1,E+1=C,D=3] 
* CE 38: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):1+ eval_mp_modexp_59(V__global_precision,V_24,E,B):3
     [0>=E+1,E+1=C,D=3] 
* CE 39: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):2+ eval_mp_modexp_59(V__global_precision,V_24,G,B):1
     [C>=2,G=0,E=0,D=3] 
* CE 40: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):2+ eval_mp_modexp_59(V__global_precision,V_24,E,B):2
     [C>=E+2,E>=1,D=3] 
* CE 41: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,V__global_precision,V_24,E,F):2+ eval_mp_modexp_59(V__global_precision,V_24,E,B):3
     [C>=E+2,0>=E+1,D=3] 
* CE 42: eval_mp_modexp_37(V__global_precision,V_24,B) = 1+ eval_mp_modexp_bb13_in(V__global_precision,V_24,C,D,E,F,G,H):3
     [D=3] 
* CE 43: eval_mp_modexp_37(V__global_precision,V_24,B) = 0
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_37/3 
* CEs [36,37,39,40,43] --> Loop 26 
* CEs [38,41,42] --> Loop 27 

#### Loops of eval_mp_modexp_37/3 
* Loop 26: eval_mp_modexp_37(V__global_precision,V_24,B) [] 
* Loop 27: eval_mp_modexp_37(V__global_precision,V_24,B) [] 

### Ranking functions of CR eval_mp_modexp_37(V__global_precision,V_24,B) 

#### Partial ranking functions of CR eval_mp_modexp_37(V__global_precision,V_24,B) 


### Resulting Chains:eval_mp_modexp_37(V__global_precision,V_24,B) 
* [27]...
* [26]


### Merging Chains  eval_mp_modexp_37/3 into  External patterns of execution 
* [[26]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_mp_modexp_33/3 
* CE 17 is refined into CE [44] 
* CE 18 is refined into CE [45,46] 


#### Refined cost equations eval_mp_modexp_33/3 
* CE 44: eval_mp_modexp_33(V__global_precision,V_24,B) = 0
     [] 
* CE 45: eval_mp_modexp_33(V__global_precision,V_24,B) = 0+ eval_mp_modexp_37(V__global_precision,V_24,B):1
     [] 
* CE 46: eval_mp_modexp_33(V__global_precision,V_24,B) = 0+ eval_mp_modexp_37(V__global_precision,V_24,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_33/3 
* CEs [46] --> Loop 28 
* CEs [44,45] --> Loop 29 

#### Loops of eval_mp_modexp_33/3 
* Loop 28: eval_mp_modexp_33(V__global_precision,V_24,B) [] 
* Loop 29: eval_mp_modexp_33(V__global_precision,V_24,B) [] 

### Ranking functions of CR eval_mp_modexp_33(V__global_precision,V_24,B) 

#### Partial ranking functions of CR eval_mp_modexp_33(V__global_precision,V_24,B) 


### Resulting Chains:eval_mp_modexp_33(V__global_precision,V_24,B) 
* [29]
* [28]...


### Merging Chains  eval_mp_modexp_33/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_mp_modexp_23/2 
* CE 15 is refined into CE [47] 
* CE 16 is refined into CE [48,49] 


#### Refined cost equations eval_mp_modexp_23/2 
* CE 47: eval_mp_modexp_23(V__global_precision,B) = 0
     [] 
* CE 48: eval_mp_modexp_23(V__global_precision,B) = 0+ eval_mp_modexp_33(C,V__global_precision,B):1
     [] 
* CE 49: eval_mp_modexp_23(V__global_precision,B) = 0+ eval_mp_modexp_33(C,V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_23/2 
* CEs [49] --> Loop 30 
* CEs [47,48] --> Loop 31 

#### Loops of eval_mp_modexp_23/2 
* Loop 30: eval_mp_modexp_23(V__global_precision,B) [] 
* Loop 31: eval_mp_modexp_23(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_23(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_23(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_23(V__global_precision,B) 
* [31]
* [30]...


### Merging Chains  eval_mp_modexp_23/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_mp_modexp_20/2 
* CE 13 is refined into CE [50] 
* CE 14 is refined into CE [51,52] 


#### Refined cost equations eval_mp_modexp_20/2 
* CE 50: eval_mp_modexp_20(V__global_precision,B) = 0
     [] 
* CE 51: eval_mp_modexp_20(V__global_precision,B) = 0+ eval_mp_modexp_23(V__global_precision,B):1
     [] 
* CE 52: eval_mp_modexp_20(V__global_precision,B) = 0+ eval_mp_modexp_23(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_20/2 
* CEs [52] --> Loop 32 
* CEs [50,51] --> Loop 33 

#### Loops of eval_mp_modexp_20/2 
* Loop 32: eval_mp_modexp_20(V__global_precision,B) [] 
* Loop 33: eval_mp_modexp_20(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_20(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_20(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_20(V__global_precision,B) 
* [33]
* [32]...


### Merging Chains  eval_mp_modexp_20/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_mp_modexp_17/2 
* CE 11 is refined into CE [53] 
* CE 12 is refined into CE [54,55] 


#### Refined cost equations eval_mp_modexp_17/2 
* CE 53: eval_mp_modexp_17(V__global_precision,B) = 0
     [] 
* CE 54: eval_mp_modexp_17(V__global_precision,B) = 0+ eval_mp_modexp_20(V__global_precision,B):1
     [] 
* CE 55: eval_mp_modexp_17(V__global_precision,B) = 0+ eval_mp_modexp_20(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_17/2 
* CEs [55] --> Loop 34 
* CEs [53,54] --> Loop 35 

#### Loops of eval_mp_modexp_17/2 
* Loop 34: eval_mp_modexp_17(V__global_precision,B) [] 
* Loop 35: eval_mp_modexp_17(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_17(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_17(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_17(V__global_precision,B) 
* [35]
* [34]...


### Merging Chains  eval_mp_modexp_17/2 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations eval_mp_modexp_bb5_in/2 
* CE 8 is refined into CE [56,57] 
* CE 9 is refined into CE [58,59] 


#### Refined cost equations eval_mp_modexp_bb5_in/2 
* CE 56: eval_mp_modexp_bb5_in(V__global_precision,B) = 0+ eval_mp_modexp_17(V__global_precision,B):1
     [] 
* CE 57: eval_mp_modexp_bb5_in(V__global_precision,B) = 0+ eval_mp_modexp_17(V__global_precision,B):2
     [] 
* CE 58: eval_mp_modexp_bb5_in(V__global_precision,B) = 0+ eval_mp_modexp_20(V__global_precision,B):1
     [] 
* CE 59: eval_mp_modexp_bb5_in(V__global_precision,B) = 0+ eval_mp_modexp_20(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_bb5_in/2 
* CEs [57,59] --> Loop 36 
* CEs [56,58] --> Loop 37 

#### Loops of eval_mp_modexp_bb5_in/2 
* Loop 36: eval_mp_modexp_bb5_in(V__global_precision,B) [] 
* Loop 37: eval_mp_modexp_bb5_in(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_bb5_in(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_bb5_in(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_bb5_in(V__global_precision,B) 
* [37]
* [36]...


### Merging Chains  eval_mp_modexp_bb5_in/2 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_mp_modexp_5/2 
* CE 5 is refined into CE [60] 
* CE 6 is refined into CE [61] 
* CE 7 is refined into CE [62,63] 


#### Refined cost equations eval_mp_modexp_5/2 
* CE 60: eval_mp_modexp_5(V__global_precision,B) = 0+ eval_mp_modexp_11(B):1
     [] 
* CE 61: eval_mp_modexp_5(V__global_precision,B) = 0
     [] 
* CE 62: eval_mp_modexp_5(V__global_precision,B) = 0+ eval_mp_modexp_bb5_in(V__global_precision,B):1
     [] 
* CE 63: eval_mp_modexp_5(V__global_precision,B) = 0+ eval_mp_modexp_bb5_in(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_5/2 
* CEs [63] --> Loop 38 
* CEs [60,61,62] --> Loop 39 

#### Loops of eval_mp_modexp_5/2 
* Loop 38: eval_mp_modexp_5(V__global_precision,B) [] 
* Loop 39: eval_mp_modexp_5(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_5(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_5(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_5(V__global_precision,B) 
* [39]
* [38]...


### Merging Chains  eval_mp_modexp_5/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_mp_modexp_1/2 
* CE 3 is refined into CE [64,65] 
* CE 4 is refined into CE [66,67] 


#### Refined cost equations eval_mp_modexp_1/2 
* CE 64: eval_mp_modexp_1(V__global_precision,B) = 0+ eval_mp_modexp_5(V__global_precision,B):1
     [] 
* CE 65: eval_mp_modexp_1(V__global_precision,B) = 0+ eval_mp_modexp_5(V__global_precision,B):2
     [] 
* CE 66: eval_mp_modexp_1(V__global_precision,B) = 0+ eval_mp_modexp_bb5_in(V__global_precision,B):1
     [] 
* CE 67: eval_mp_modexp_1(V__global_precision,B) = 0+ eval_mp_modexp_bb5_in(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_1/2 
* CEs [65,67] --> Loop 40 
* CEs [64,66] --> Loop 41 

#### Loops of eval_mp_modexp_1/2 
* Loop 40: eval_mp_modexp_1(V__global_precision,B) [] 
* Loop 41: eval_mp_modexp_1(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_1(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_1(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_1(V__global_precision,B) 
* [41]
* [40]...


### Merging Chains  eval_mp_modexp_1/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_mp_modexp_start/2 
* CE 2 is refined into CE [68,69] 


#### Refined cost equations eval_mp_modexp_start/2 
* CE 68: eval_mp_modexp_start(V__global_precision,B) = 0+ eval_mp_modexp_1(V__global_precision,B):1
     [] 
* CE 69: eval_mp_modexp_start(V__global_precision,B) = 0+ eval_mp_modexp_1(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_modexp_start/2 
* CEs [69] --> Loop 42 
* CEs [68] --> Loop 43 

#### Loops of eval_mp_modexp_start/2 
* Loop 42: eval_mp_modexp_start(V__global_precision,B) [] 
* Loop 43: eval_mp_modexp_start(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_modexp_start(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_modexp_start(V__global_precision,B) 


### Resulting Chains:eval_mp_modexp_start(V__global_precision,B) 
* [43]
* [42]...


### Merging Chains  eval_mp_modexp_start/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_mp_modexp_11(B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of loops [18] 

 * loop 18:eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) -> [eval_mp_modexp_bb13_in(V__global_precision',V_24',V_bits_0',B',C',D',E',F')] 
1
#### Cost of phase [18]:eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) -> [eval_mp_modexp_bb13_in(V__global_precision',V_24',V_bits_0',B',C',D',E',F')] 
1*it(18)+0
#### Cost of phase [18]:eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F) -> [eval_mp_modexp_bb13_in(V__global_precision',V_24',V_bits_0',B',C',D',E',F')] 
1*it(18)+0
#### Cost of chains of eval_mp_modexp_bb13_in(V__global_precision,V_24,V_bits_0,B,C,D,E,F):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [B=3] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=3,V__global_precision=C,V_24=D,V_bits_0>=E+2] 

* Chain [19]: 0
  with precondition: [B=3,C=V__global_precision,D=V_24,E+1=V_bits_0] 


#### Cost of loops [21] 

 * loop 21:eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) -> [eval_mp_modexp_bb16_in(V__global_precision',V_24',V_bits_1',B',C',D')] 
1
#### Cost of phase [21]:eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) -> [eval_mp_modexp_bb16_in(V__global_precision',V_24',V_bits_1',B',C',D')] 
1*it(21)+0
#### Cost of loops [20] 

 * loop 20:eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) -> [eval_mp_modexp_bb16_in(V__global_precision',V_24',V_bits_1',B',C',D')] 
1
#### Cost of phase [20]:eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D) -> [eval_mp_modexp_bb16_in(V__global_precision',V_24',V_bits_1',B',C',D')] 
1*it(20)+0
  Such that:it(20) =< V_bits_1
it(20) =< V_bits_1-V_bits_1'

#### Cost of chains of eval_mp_modexp_bb16_in(V__global_precision,V_24,V_bits_1,B,C,D):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [0>=V_bits_1+1,B=2] 

* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< V_bits_1

  with precondition: [B=2,V__global_precision=C,V_24=D,V_bits_1>=1] 

* Chain [22]: 0
  with precondition: [V_bits_1=0,B=2,C=V__global_precision,D=V_24] 


#### Cost of chains of eval_mp_modexp_59(V__global_precision,V_24,V_50,B):
* Chain [25]: 1
  with precondition: [V_50=0] 

* Chain [24]: 1*s(1)+1
  Such that:s(1) =< V_50

  with precondition: [V_50>=1] 

* Chain [23]...: 1*s(2)+1
  with precondition: [0>=V_50+1] 


#### Cost of chains of eval_mp_modexp_37(V__global_precision,V_24,B):
* Chain [27]...: 1*aux(1)+0
  with precondition: [] 

* Chain [26]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_33(V__global_precision,V_24,B):
* Chain [29]: 1*aux(3)+0
  with precondition: [] 

* Chain [28]...: 1*s(12)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_23(V__global_precision,B):
* Chain [31]: 1*aux(4)+0
  with precondition: [] 

* Chain [30]...: 1*s(14)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_20(V__global_precision,B):
* Chain [33]: 1*aux(5)+0
  with precondition: [] 

* Chain [32]...: 1*s(16)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_17(V__global_precision,B):
* Chain [35]: 1*aux(6)+0
  with precondition: [] 

* Chain [34]...: 1*s(18)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_bb5_in(V__global_precision,B):
* Chain [37]: 1*aux(7)+0
  with precondition: [] 

* Chain [36]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_5(V__global_precision,B):
* Chain [39]: 1*aux(9)+0
  with precondition: [] 

* Chain [38]...: 1*s(24)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_1(V__global_precision,B):
* Chain [41]: 1*aux(10)+0
  with precondition: [] 

* Chain [40]...: 1*aux(11)+0
  with precondition: [] 


#### Cost of chains of eval_mp_modexp_start(V__global_precision,B):
* Chain [43]: 1*s(29)+0
  with precondition: [] 

* Chain [42]...: 1*s(30)+0
  with precondition: [] 


Closed-form bounds of eval_mp_modexp_start(V__global_precision,B): 
-------------------------------------
* Chain [43] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_modexp_start(V__global_precision,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 20 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 50 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 182 ms.

