Warning: Ignored call to eval_show_line_stop/1 in equation eval_show_line_41/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_show_line_13/9,eval_show_line_14/10,eval_show_line_bb3_in/8]
1. recursive  : [eval_show_line_26/9,eval_show_line_27/10,eval_show_line_bb7_in/8]
2. recursive  : [eval_show_line_37/6,eval_show_line_38/7,eval_show_line_bb10_in/6]
3. non_recursive  : [eval_show_line_41/1]
4. non_recursive  : [eval_show_line_40/3]
5. non_recursive  : [eval_show_line__critedge2_in/3]
6. non_recursive  : [loop_cont_eval_show_line_bb10_in/4]
7. non_recursive  : [eval_show_line_30/4]
8. non_recursive  : [eval_show_line_29/4]
9. non_recursive  : [eval_show_line__critedge1_in/4]
10. non_recursive  : [loop_cont_eval_show_line_bb7_in/5]
11. non_recursive  : [eval_show_line_17/4]
12. non_recursive  : [eval_show_line_16/4]
13. non_recursive  : [eval_show_line__critedge_in/4]
14. non_recursive  : [loop_cont_eval_show_line_bb3_in/5]
15. non_recursive  : [eval_show_line_bb2_in/4]
16. non_recursive  : [eval_show_line_bb0_in/3]
17. non_recursive  : [eval_show_line_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_show_line_bb3_in/8
1. SCC is partially evaluated into eval_show_line_bb7_in/8
2. SCC is partially evaluated into eval_show_line_bb10_in/6
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_show_line_30/4
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_show_line_17/4
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_show_line__critedge_in/4
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_show_line_bb2_in/4
16. SCC is partially evaluated into eval_show_line_bb0_in/3
17. SCC is partially evaluated into eval_show_line_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_show_line_bb3_in/8 
* CE 6 is refined into CE [15] 
* CE 5 is refined into CE [16] 


#### Refined cost equations eval_show_line_bb3_in/8 
* CE 15: eval_show_line_bb3_in(A,B,C,D,E,A,B,D) = 0
     [E=3] 
* CE 16: eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) = 1+ eval_show_line_bb3_in(V__co,V__sg,V_5,F,G,C,D,E)
     [G=3,B=3] 

### Cost equations --> "Loop" of eval_show_line_bb3_in/8 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_show_line_bb3_in/8 
* Loop 13: eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E)->  eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0',B',C,D,E)
                  [B'=3,B=3] 
* Loop 14: eval_show_line_bb3_in(A,B,C,D,E,A,B,D) [E=3] 

### Ranking functions of CR eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) 

#### Partial ranking functions of CR eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) 


### Resulting Chains:eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) 
* [[13]]...
* [[13],14]
* [14]


### Merging Chains  eval_show_line_bb3_in/8 into  External patterns of execution 
* [[14],[14,[13]]] --> 1 
* [[[13]]] --> 2 


### Specialization of cost equations eval_show_line_bb7_in/8 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_show_line_bb7_in/8 
* CE 17: eval_show_line_bb7_in(A,B,C,D,E,A,B,D) = 0
     [E=2] 
* CE 18: eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) = 1+ eval_show_line_bb7_in(V__co,V__sg,V_20,F,G,C,D,E)
     [G=2,B=2] 

### Cost equations --> "Loop" of eval_show_line_bb7_in/8 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_show_line_bb7_in/8 
* Loop 15: eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E)->  eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1',B',C,D,E)
                  [B'=2,B=2] 
* Loop 16: eval_show_line_bb7_in(A,B,C,D,E,A,B,D) [E=2] 

### Ranking functions of CR eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) 

#### Partial ranking functions of CR eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) 


### Resulting Chains:eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) 
* [[15]]...
* [[15],16]
* [16]


### Merging Chains  eval_show_line_bb7_in/8 into  External patterns of execution 
* [[16],[16,[15]]] --> 1 
* [[[15]]] --> 2 


### Specialization of cost equations eval_show_line_bb10_in/6 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


#### Refined cost equations eval_show_line_bb10_in/6 
* CE 19: eval_show_line_bb10_in(A,B,C,D,A,B) = 0
     [D=4] 
* CE 20: eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) = 1+ eval_show_line_bb10_in(V__co,V__sg,E,F,C,D)
     [F=4,B=4] 

### Cost equations --> "Loop" of eval_show_line_bb10_in/6 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_show_line_bb10_in/6 
* Loop 17: eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D)->  eval_show_line_bb10_in(V__co,V__sg,V_width_3',B',C,D)
                  [B'=4,B=4] 
* Loop 18: eval_show_line_bb10_in(A,B,C,D,A,B) [D=4] 

### Ranking functions of CR eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) 

#### Partial ranking functions of CR eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) 


### Resulting Chains:eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) 
* [[17]]...
* [[17],18]
* [18]


### Merging Chains  eval_show_line_bb10_in/6 into  External patterns of execution 
* [[18],[18,[17]]] --> 1 
* [[[17]]] --> 2 


### Specialization of cost equations eval_show_line_30/4 
* CE 14 is refined into CE [21,22] 


#### Refined cost equations eval_show_line_30/4 
* CE 21: eval_show_line_30(V__co,V__sg,V_width_1,B) = 1+ eval_show_line_bb10_in(V__co,V__sg,V_width_1,C,V__co,V__sg):1
     [C=4] 
* CE 22: eval_show_line_30(V__co,V__sg,V_width_1,B) = 1+ eval_show_line_bb10_in(V__co,V__sg,V_width_1,C,D,E):2
     [C=4] 

### Cost equations --> "Loop" of eval_show_line_30/4 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_show_line_30/4 
* Loop 19: eval_show_line_30(V__co,V__sg,V_width_1,B) [] 
* Loop 20: eval_show_line_30(V__co,V__sg,V_width_1,B) [] 

### Ranking functions of CR eval_show_line_30(V__co,V__sg,V_width_1,B) 

#### Partial ranking functions of CR eval_show_line_30(V__co,V__sg,V_width_1,B) 


### Resulting Chains:eval_show_line_30(V__co,V__sg,V_width_1,B) 
* [20]
* [19]...


### Merging Chains  eval_show_line_30/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_show_line_17/4 
* CE 9 is refined into CE [23,24,25] 


#### Refined cost equations eval_show_line_17/4 
* CE 23: eval_show_line_17(V__co,V__sg,V_width_0,B) = 1+ eval_show_line_bb7_in(V__co,V__sg,C,V_width_0,D,V__co,V__sg,E):1+ eval_show_line_30(V__co,V__sg,E,B):1
     [D=2] 
* CE 24: eval_show_line_17(V__co,V__sg,V_width_0,B) = 1+ eval_show_line_bb7_in(V__co,V__sg,C,V_width_0,D,V__co,V__sg,E):1+ eval_show_line_30(V__co,V__sg,E,B):2
     [D=2] 
* CE 25: eval_show_line_17(V__co,V__sg,V_width_0,B) = 1+ eval_show_line_bb7_in(V__co,V__sg,C,V_width_0,D,E,F,G):2
     [D=2] 

### Cost equations --> "Loop" of eval_show_line_17/4 
* CEs [24,25] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of eval_show_line_17/4 
* Loop 21: eval_show_line_17(V__co,V__sg,V_width_0,B) [] 
* Loop 22: eval_show_line_17(V__co,V__sg,V_width_0,B) [] 

### Ranking functions of CR eval_show_line_17(V__co,V__sg,V_width_0,B) 

#### Partial ranking functions of CR eval_show_line_17(V__co,V__sg,V_width_0,B) 


### Resulting Chains:eval_show_line_17(V__co,V__sg,V_width_0,B) 
* [22]
* [21]...


### Merging Chains  eval_show_line_17/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_show_line__critedge_in/4 
* CE 7 is refined into CE [26,27] 
* CE 8 is refined into CE [28,29] 


#### Refined cost equations eval_show_line__critedge_in/4 
* CE 26: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) = 0+ eval_show_line_17(V__co,V__sg,V_width_0,B):1
     [] 
* CE 27: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) = 0+ eval_show_line_17(V__co,V__sg,V_width_0,B):2
     [] 
* CE 28: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) = 1+ eval_show_line_bb10_in(V__co,V__sg,V_width_0,C,V__co,V__sg):1
     [C=4] 
* CE 29: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) = 1+ eval_show_line_bb10_in(V__co,V__sg,V_width_0,C,D,E):2
     [C=4] 

### Cost equations --> "Loop" of eval_show_line__critedge_in/4 
* CEs [27,29] --> Loop 23 
* CEs [26,28] --> Loop 24 

#### Loops of eval_show_line__critedge_in/4 
* Loop 23: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) [] 
* Loop 24: eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) [] 

### Ranking functions of CR eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) 

#### Partial ranking functions of CR eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) 


### Resulting Chains:eval_show_line__critedge_in(V__co,V__sg,V_width_0,B) 
* [24]
* [23]...


### Merging Chains  eval_show_line__critedge_in/4 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_show_line_bb2_in/4 
* CE 4 is refined into CE [30,31,32] 


#### Refined cost equations eval_show_line_bb2_in/4 
* CE 30: eval_show_line_bb2_in(V__co,V__sg,V_4,B) = 1+ eval_show_line_bb3_in(V__co,V__sg,C,V_4,D,V__co,V__sg,E):1+ eval_show_line__critedge_in(V__co,V__sg,E,B):1
     [D=3] 
* CE 31: eval_show_line_bb2_in(V__co,V__sg,V_4,B) = 1+ eval_show_line_bb3_in(V__co,V__sg,C,V_4,D,V__co,V__sg,E):1+ eval_show_line__critedge_in(V__co,V__sg,E,B):2
     [D=3] 
* CE 32: eval_show_line_bb2_in(V__co,V__sg,V_4,B) = 1+ eval_show_line_bb3_in(V__co,V__sg,C,V_4,D,E,F,G):2
     [D=3] 

### Cost equations --> "Loop" of eval_show_line_bb2_in/4 
* CEs [31,32] --> Loop 25 
* CEs [30] --> Loop 26 

#### Loops of eval_show_line_bb2_in/4 
* Loop 25: eval_show_line_bb2_in(V__co,V__sg,V_4,B) [] 
* Loop 26: eval_show_line_bb2_in(V__co,V__sg,V_4,B) [] 

### Ranking functions of CR eval_show_line_bb2_in(V__co,V__sg,V_4,B) 

#### Partial ranking functions of CR eval_show_line_bb2_in(V__co,V__sg,V_4,B) 


### Resulting Chains:eval_show_line_bb2_in(V__co,V__sg,V_4,B) 
* [26]
* [25]...


### Merging Chains  eval_show_line_bb2_in/4 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_show_line_bb0_in/3 
* CE 3 is refined into CE [33,34] 


#### Refined cost equations eval_show_line_bb0_in/3 
* CE 33: eval_show_line_bb0_in(V__co,V__sg,B) = 0+ eval_show_line_bb2_in(V__co,V__sg,C,B):1
     [] 
* CE 34: eval_show_line_bb0_in(V__co,V__sg,B) = 0+ eval_show_line_bb2_in(V__co,V__sg,C,B):2
     [] 

### Cost equations --> "Loop" of eval_show_line_bb0_in/3 
* CEs [34] --> Loop 27 
* CEs [33] --> Loop 28 

#### Loops of eval_show_line_bb0_in/3 
* Loop 27: eval_show_line_bb0_in(V__co,V__sg,B) [] 
* Loop 28: eval_show_line_bb0_in(V__co,V__sg,B) [] 

### Ranking functions of CR eval_show_line_bb0_in(V__co,V__sg,B) 

#### Partial ranking functions of CR eval_show_line_bb0_in(V__co,V__sg,B) 


### Resulting Chains:eval_show_line_bb0_in(V__co,V__sg,B) 
* [28]
* [27]...


### Merging Chains  eval_show_line_bb0_in/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_show_line_start/4 
* CE 2 is refined into CE [35,36] 


#### Refined cost equations eval_show_line_start/4 
* CE 35: eval_show_line_start(V_invlen,V__co,V__sg,B) = 0+ eval_show_line_bb0_in(V__co,V__sg,B):1
     [] 
* CE 36: eval_show_line_start(V_invlen,V__co,V__sg,B) = 0+ eval_show_line_bb0_in(V__co,V__sg,B):2
     [] 

### Cost equations --> "Loop" of eval_show_line_start/4 
* CEs [36] --> Loop 29 
* CEs [35] --> Loop 30 

#### Loops of eval_show_line_start/4 
* Loop 29: eval_show_line_start(V_invlen,V__co,V__sg,B) [] 
* Loop 30: eval_show_line_start(V_invlen,V__co,V__sg,B) [] 

### Ranking functions of CR eval_show_line_start(V_invlen,V__co,V__sg,B) 

#### Partial ranking functions of CR eval_show_line_start(V_invlen,V__co,V__sg,B) 


### Resulting Chains:eval_show_line_start(V_invlen,V__co,V__sg,B) 
* [30]
* [29]...


### Merging Chains  eval_show_line_start/4 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) -> [eval_show_line_bb3_in(V__co',V__sg',V_5',V_width_0',B',C',D',E')] 
1
#### Cost of phase [13]:eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) -> [eval_show_line_bb3_in(V__co',V__sg',V_5',V_width_0',B',C',D',E')] 
1*it(13)+0
#### Cost of phase [13]:eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E) -> [eval_show_line_bb3_in(V__co',V__sg',V_5',V_width_0',B',C',D',E')] 
1*it(13)+0
#### Cost of chains of eval_show_line_bb3_in(V__co,V__sg,V_5,V_width_0,B,C,D,E):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [B=3] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3,V__co=C,V__sg=D] 

* Chain [14]: 0
  with precondition: [B=3,C=V__co,D=V__sg,E=V_width_0] 


#### Cost of loops [15] 

 * loop 15:eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) -> [eval_show_line_bb7_in(V__co',V__sg',V_20',V_width_1',B',C',D',E')] 
1
#### Cost of phase [15]:eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) -> [eval_show_line_bb7_in(V__co',V__sg',V_20',V_width_1',B',C',D',E')] 
1*it(15)+0
#### Cost of phase [15]:eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E) -> [eval_show_line_bb7_in(V__co',V__sg',V_20',V_width_1',B',C',D',E')] 
1*it(15)+0
#### Cost of chains of eval_show_line_bb7_in(V__co,V__sg,V_20,V_width_1,B,C,D,E):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [B=2] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=2,V__co=C,V__sg=D] 

* Chain [16]: 0
  with precondition: [B=2,C=V__co,D=V__sg,E=V_width_1] 


#### Cost of loops [17] 

 * loop 17:eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) -> [eval_show_line_bb10_in(V__co',V__sg',V_width_3',B',C',D')] 
1
#### Cost of phase [17]:eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) -> [eval_show_line_bb10_in(V__co',V__sg',V_width_3',B',C',D')] 
1*it(17)+0
#### Cost of phase [17]:eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D) -> [eval_show_line_bb10_in(V__co',V__sg',V_width_3',B',C',D')] 
1*it(17)+0
#### Cost of chains of eval_show_line_bb10_in(V__co,V__sg,V_width_3,B,C,D):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [B=4] 

* Chain [[17],18]: 1*it(17)+0
  with precondition: [B=4,V__co=C,V__sg=D] 

* Chain [18]: 0
  with precondition: [B=4,C=V__co,D=V__sg] 


#### Cost of chains of eval_show_line_30(V__co,V__sg,V_width_1,B):
* Chain [20]: 1*s(4)+1
  with precondition: [] 

* Chain [19]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_show_line_17(V__co,V__sg,V_width_0,B):
* Chain [22]: 2*s(6)+2
  with precondition: [] 

* Chain [21]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_show_line__critedge_in(V__co,V__sg,V_width_0,B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 

* Chain [23]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_show_line_bb2_in(V__co,V__sg,V_4,B):
* Chain [26]: 2*s(15)+1
  with precondition: [] 

* Chain [25]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_show_line_bb0_in(V__co,V__sg,B):
* Chain [28]: 2*s(20)+1
  with precondition: [] 

* Chain [27]...: 1*s(21)+0
  with precondition: [] 


#### Cost of chains of eval_show_line_start(V_invlen,V__co,V__sg,B):
* Chain [30]: 2*s(22)+1
  with precondition: [] 

* Chain [29]...: 1*s(23)+0
  with precondition: [] 


Closed-form bounds of eval_show_line_start(V_invlen,V__co,V__sg,B): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_show_line_start(V_invlen,V__co,V__sg,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 85 ms.
* Invariants computed in 60 ms.
   - Backward Invariants 31 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 136 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 93 ms.
   - Equation cost structures 39 ms.
   - Phase cost structures 20 ms.
   - Chain cost structures 32 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 487 ms.

