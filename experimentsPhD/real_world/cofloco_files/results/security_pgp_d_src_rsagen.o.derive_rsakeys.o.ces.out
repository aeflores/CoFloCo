Warning: Ignored call to eval_derive_rsakeys_stop/1 in equation eval_derive_rsakeys_76/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_derive_rsakeys_63/3,eval_derive_rsakeys_64/3,eval_derive_rsakeys_65/3,eval_derive_rsakeys_66/3,eval_derive_rsakeys_69/3,eval_derive_rsakeys_70/3,eval_derive_rsakeys__critedge_in/3]
1. non_recursive  : [eval_derive_rsakeys_76/1]
2. non_recursive  : [eval_derive_rsakeys_75/2]
3. non_recursive  : [eval_derive_rsakeys_74/2]
4. non_recursive  : [eval_derive_rsakeys_73/2]
5. non_recursive  : [eval_derive_rsakeys_72/2]
6. non_recursive  : [loop_cont_eval_derive_rsakeys__critedge_in/3]
7. non_recursive  : [eval_derive_rsakeys_62/2]
8. non_recursive  : [eval_derive_rsakeys_61/2]
9. non_recursive  : [eval_derive_rsakeys_60/2]
10. non_recursive  : [eval_derive_rsakeys_39/2]
11. non_recursive  : [eval_derive_rsakeys_38/2]
12. non_recursive  : [eval_derive_rsakeys_bb3_in/2]
13. non_recursive  : [eval_derive_rsakeys_29/2]
14. non_recursive  : [eval_derive_rsakeys_28/2]
15. non_recursive  : [eval_derive_rsakeys_24/2]
16. non_recursive  : [eval_derive_rsakeys_23/2]
17. non_recursive  : [eval_derive_rsakeys_22/2]
18. non_recursive  : [eval_derive_rsakeys_21/3]
19. non_recursive  : [eval_derive_rsakeys_17/2]
20. non_recursive  : [eval_derive_rsakeys_16/2]
21. non_recursive  : [eval_derive_rsakeys_15/2]
22. non_recursive  : [eval_derive_rsakeys_14/2]
23. non_recursive  : [eval_derive_rsakeys_13/2]
24. non_recursive  : [eval_derive_rsakeys_12/2]
25. non_recursive  : [eval_derive_rsakeys_11/3]
26. non_recursive  : [eval_derive_rsakeys_7/2]
27. non_recursive  : [eval_derive_rsakeys_6/3]
28. non_recursive  : [eval_derive_rsakeys_1/2]
29. non_recursive  : [eval_derive_rsakeys_0/2]
30. non_recursive  : [eval_derive_rsakeys_bb0_in/2]
31. non_recursive  : [eval_derive_rsakeys_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_derive_rsakeys__critedge_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_derive_rsakeys_62/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_derive_rsakeys_24/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_derive_rsakeys_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_derive_rsakeys__critedge_in/3 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_derive_rsakeys__critedge_in/3 
* CE 7: eval_derive_rsakeys__critedge_in(A,B,A) = 0
     [B=2] 
* CE 8: eval_derive_rsakeys__critedge_in(V__global_precision,B,C) = 1+ eval_derive_rsakeys__critedge_in(V__global_precision,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_derive_rsakeys__critedge_in/3 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_derive_rsakeys__critedge_in/3 
* Loop 6: eval_derive_rsakeys__critedge_in(V__global_precision,B,C)->  eval_derive_rsakeys__critedge_in(V__global_precision,B',C)
                  [B'=2,B=2] 
* Loop 7: eval_derive_rsakeys__critedge_in(A,B,A) [B=2] 

### Ranking functions of CR eval_derive_rsakeys__critedge_in(V__global_precision,B,C) 

#### Partial ranking functions of CR eval_derive_rsakeys__critedge_in(V__global_precision,B,C) 


### Resulting Chains:eval_derive_rsakeys__critedge_in(V__global_precision,B,C) 
* [[6]]...
* [[6],7]
* [7]


### Merging Chains  eval_derive_rsakeys__critedge_in/3 into  External patterns of execution 
* [[7],[7,[6]]] --> 1 
* [[[6]]] --> 2 


### Specialization of cost equations eval_derive_rsakeys_62/2 
* CE 4 is refined into CE [9,10] 


#### Refined cost equations eval_derive_rsakeys_62/2 
* CE 9: eval_derive_rsakeys_62(V__global_precision,B) = 1+ eval_derive_rsakeys__critedge_in(V__global_precision,C,V__global_precision):1
     [C=2] 
* CE 10: eval_derive_rsakeys_62(V__global_precision,B) = 1+ eval_derive_rsakeys__critedge_in(V__global_precision,C,D):2
     [C=2] 

### Cost equations --> "Loop" of eval_derive_rsakeys_62/2 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_derive_rsakeys_62/2 
* Loop 8: eval_derive_rsakeys_62(V__global_precision,B) [] 
* Loop 9: eval_derive_rsakeys_62(V__global_precision,B) [] 

### Ranking functions of CR eval_derive_rsakeys_62(V__global_precision,B) 

#### Partial ranking functions of CR eval_derive_rsakeys_62(V__global_precision,B) 


### Resulting Chains:eval_derive_rsakeys_62(V__global_precision,B) 
* [9]
* [8]...


### Merging Chains  eval_derive_rsakeys_62/2 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_derive_rsakeys_24/2 
* CE 3 is refined into CE [11,12] 


#### Refined cost equations eval_derive_rsakeys_24/2 
* CE 11: eval_derive_rsakeys_24(V__global_precision,B) = 0+ eval_derive_rsakeys_62(C,B):1
     [] 
* CE 12: eval_derive_rsakeys_24(V__global_precision,B) = 0+ eval_derive_rsakeys_62(C,B):2
     [] 

### Cost equations --> "Loop" of eval_derive_rsakeys_24/2 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_derive_rsakeys_24/2 
* Loop 10: eval_derive_rsakeys_24(V__global_precision,B) [] 
* Loop 11: eval_derive_rsakeys_24(V__global_precision,B) [] 

### Ranking functions of CR eval_derive_rsakeys_24(V__global_precision,B) 

#### Partial ranking functions of CR eval_derive_rsakeys_24(V__global_precision,B) 


### Resulting Chains:eval_derive_rsakeys_24(V__global_precision,B) 
* [11]
* [10]...


### Merging Chains  eval_derive_rsakeys_24/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_derive_rsakeys_start/3 
* CE 2 is refined into CE [13,14] 


#### Refined cost equations eval_derive_rsakeys_start/3 
* CE 13: eval_derive_rsakeys_start(V_ebits,V__global_precision,B) = 0+ eval_derive_rsakeys_24(V__global_precision,B):1
     [] 
* CE 14: eval_derive_rsakeys_start(V_ebits,V__global_precision,B) = 0+ eval_derive_rsakeys_24(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_derive_rsakeys_start/3 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_derive_rsakeys_start/3 
* Loop 12: eval_derive_rsakeys_start(V_ebits,V__global_precision,B) [] 
* Loop 13: eval_derive_rsakeys_start(V_ebits,V__global_precision,B) [] 

### Ranking functions of CR eval_derive_rsakeys_start(V_ebits,V__global_precision,B) 

#### Partial ranking functions of CR eval_derive_rsakeys_start(V_ebits,V__global_precision,B) 


### Resulting Chains:eval_derive_rsakeys_start(V_ebits,V__global_precision,B) 
* [13]
* [12]...


### Merging Chains  eval_derive_rsakeys_start/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_derive_rsakeys__critedge_in(V__global_precision,B,C) -> [eval_derive_rsakeys__critedge_in(V__global_precision',B',C')] 
1
#### Cost of phase [6]:eval_derive_rsakeys__critedge_in(V__global_precision,B,C) -> [eval_derive_rsakeys__critedge_in(V__global_precision',B',C')] 
1*it(6)+0
#### Cost of phase [6]:eval_derive_rsakeys__critedge_in(V__global_precision,B,C) -> [eval_derive_rsakeys__critedge_in(V__global_precision',B',C')] 
1*it(6)+0
#### Cost of chains of eval_derive_rsakeys__critedge_in(V__global_precision,B,C):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [B=2] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,V__global_precision=C] 

* Chain [7]: 0
  with precondition: [B=2,C=V__global_precision] 


#### Cost of chains of eval_derive_rsakeys_62(V__global_precision,B):
* Chain [9]: 1*s(2)+1
  with precondition: [] 

* Chain [8]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_derive_rsakeys_24(V__global_precision,B):
* Chain [11]: 1*s(4)+1
  with precondition: [] 

* Chain [10]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_derive_rsakeys_start(V_ebits,V__global_precision,B):
* Chain [13]: 1*s(6)+1
  with precondition: [] 

* Chain [12]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_derive_rsakeys_start(V_ebits,V__global_precision,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_derive_rsakeys_start(V_ebits,V__global_precision,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 44 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 23 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 20 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 163 ms.

