Warning: Ignored call to eval_main_stop/1 in equation eval_main_109/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_5/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_54/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_60/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_71/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_76/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_bb32_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main_109/1]
1. non_recursive  : [eval_main_108/1]
2. non_recursive  : [eval_main_107/1]
3. non_recursive  : [eval_main_5/1]
4. non_recursive  : [eval_main_4/1]
5. non_recursive  : [eval_main_3/1]
6. recursive  : [eval_main_23/5,eval_main_24/5,eval_main_bb13_in/5,eval_main_bb7_in/4]
7. non_recursive  : [eval_main_54/1]
8. non_recursive  : [eval_main_53/1]
9. non_recursive  : [eval_main_52/1]
10. non_recursive  : [eval_main_60/1]
11. non_recursive  : [eval_main_59/1]
12. non_recursive  : [eval_main_58/1]
13. non_recursive  : [eval_main_bb32_in/1]
14. non_recursive  : [eval_main_64/1]
15. non_recursive  : [eval_main_63/1]
16. non_recursive  : [eval_main_71/1]
17. non_recursive  : [eval_main_70/1]
18. non_recursive  : [eval_main_69/1]
19. non_recursive  : [eval_main_76/1]
20. non_recursive  : [eval_main_75/1]
21. non_recursive  : [eval_main_74/1]
22. recursive  : [eval_main_79/8,eval_main_80/9,eval_main_81/9,eval_main_82/9,eval_main_bb24_in/8]
23. recursive  : [eval_main_94/14,eval_main_95/14,eval_main_96/14,eval_main_bb27_in/14]
24. recursive  : [eval_main_101/10,eval_main_102/10,eval_main_bb29_in/9]
25. recursive  : [eval_main_77/2,eval_main_78/3,eval_main_88/5,eval_main_89/5,eval_main_bb23_in/2,loop_cont_eval_main_bb24_in/6,loop_cont_eval_main_bb27_in/9,loop_cont_eval_main_bb29_in/3]
26. non_recursive  : [eval_main_106/1]
27. non_recursive  : [eval_main_105/1]
28. non_recursive  : [eval_main_104/1]
29. non_recursive  : [loop_cont_eval_main_bb23_in/2]
30. non_recursive  : [eval_main_73/2]
31. non_recursive  : [eval_main_72/2]
32. non_recursive  : [eval_main_68/2]
33. non_recursive  : [eval_main_67/2]
34. non_recursive  : [eval_main_66/2]
35. non_recursive  : [eval_main_65/2]
36. non_recursive  : [eval_main_62/2]
37. non_recursive  : [eval_main_61/2]
38. non_recursive  : [eval_main_56/2]
39. non_recursive  : [eval_main_55/2]
40. non_recursive  : [eval_main__critedge_in/2]
41. non_recursive  : [loop_cont_eval_main_bb7_in/3]
42. non_recursive  : [eval_main_bb6_in/2]
43. non_recursive  : [eval_main_1/1]
44. non_recursive  : [eval_main_0/1]
45. non_recursive  : [eval_main_bb0_in/1]
46. non_recursive  : [eval_main_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_main_bb7_in/4
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_main_bb24_in/8
23. SCC is partially evaluated into eval_main_bb27_in/14
24. SCC is partially evaluated into eval_main_bb29_in/9
25. SCC is partially evaluated into eval_main_bb23_in/2
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_main_73/2
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_main_68/2
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_main_62/2
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_main_56/2
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is partially evaluated into loop_cont_eval_main_bb7_in/3
42. SCC is partially evaluated into eval_main_bb6_in/2
43. SCC is partially evaluated into eval_main_1/1
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_main_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main_bb7_in/4 
* CE 10 is refined into CE [31] 
* CE 9 is refined into CE [32] 
* CE 8 is refined into CE [33] 
* CE 7 is refined into CE [34] 


#### Refined cost equations eval_main_bb7_in/4 
* CE 31: eval_main_bb7_in(A,B,C,A) = 0
     [B>=64,A>=0,1>=A,C=6] 
* CE 32: eval_main_bb7_in(A,B,C,A) = 0
     [B>=0,A>=0,63>=B,1>=A,C=6] 
* CE 33: eval_main_bb7_in(V_encordec_0,V_i_0,B,C) = 0
     [V_i_0>=0,V_encordec_0>=0,63>=V_i_0,1>=V_encordec_0,B=5] 
* CE 34: eval_main_bb7_in(V_encordec_0,V_i_0,B,C) = 1+ eval_main_bb7_in(V_encordec_0,D,B,C)
     [V_i_0>=0,V_encordec_0>=0,63>=V_i_0,1>=V_encordec_0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_main_bb7_in/4 
* CEs [34] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [32] --> Loop 26 
* CEs [33] --> Loop 27 

#### Loops of eval_main_bb7_in/4 
* Loop 24: eval_main_bb7_in(V_encordec_0,V_i_0,B,C)->  eval_main_bb7_in(V_encordec_0,V_i_0',B,C)
                  [V_i_0>=0,V_encordec_0>=0,63>=V_i_0,1>=V_encordec_0,V_i_0+1=V_i_0'] 
* Loop 25: eval_main_bb7_in(A,B,C,A) [B>=64,A>=0,1>=A,C=6] 
* Loop 26: eval_main_bb7_in(A,B,C,A) [B>=0,A>=0,63>=B,1>=A,C=6] 
* Loop 27: eval_main_bb7_in(V_encordec_0,V_i_0,B,C) [V_i_0>=0,V_encordec_0>=0,63>=V_i_0,1>=V_encordec_0,B=5] 

### Ranking functions of CR eval_main_bb7_in(V_encordec_0,V_i_0,B,C) 
* RF of phase [24]: [-V_i_0+64]

#### Partial ranking functions of CR eval_main_bb7_in(V_encordec_0,V_i_0,B,C) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    -V_i_0+64


### Resulting Chains:eval_main_bb7_in(V_encordec_0,V_i_0,B,C) 
* [[24],27]
* [[24],26]
* [[24],25]
* [27]
* [26]


### Merging Chains  eval_main_bb7_in/4 into  External patterns of execution 
* [[27],[27,[24]]] --> 1 
* [[26],[25,[24]],[26,[24]]] --> 2 


### Specialization of cost equations eval_main_bb24_in/8 
* CE 26 is refined into CE [35] 
* CE 24 is refined into CE [36] 
* CE 23 is refined into CE [37] 
* CE 25 is refined into CE [38] 


#### Refined cost equations eval_main_bb24_in/8 
* CE 35: eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) = 1+ eval_main_bb24_in(V_encordec_0,G,H,I,C,D,E,F)
     [V_i_2>=0,39>=V_i_2,V_i_2+1=H,I=2,G=0,B=2,V_95=0] 
* CE 36: eval_main_bb24_in(A,B,C,D,A,E,C,F) = 0
     [F>=1,C>=0,E=0,D=2,B=0] 
* CE 37: eval_main_bb24_in(A,B,C,D,A,E,C,F) = 0
     [C>=40,E=0,D=2,B=0] 
* CE 38: eval_main_bb24_in(A,B,C,D,A,E,C,F) = 0
     [C>=0,0>=F+1,E=0,D=2,B=0] 

### Cost equations --> "Loop" of eval_main_bb24_in/8 
* CEs [37] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [35] --> Loop 31 

#### Loops of eval_main_bb24_in/8 
* Loop 28: eval_main_bb24_in(A,B,C,D,A,E,C,F) [C>=40,E=0,D=2,B=0] 
* Loop 29: eval_main_bb24_in(A,B,C,D,A,E,C,F) [F>=1,C>=0,E=0,D=2,B=0] 
* Loop 30: eval_main_bb24_in(A,B,C,D,A,E,C,F) [C>=0,0>=F+1,E=0,D=2,B=0] 
* Loop 31: eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F)->  eval_main_bb24_in(V_encordec_0,V_95',V_i_2',B',C,D,E,F)
                  [V_i_2>=0,39>=V_i_2,V_i_2+1=V_i_2',B'=2,V_95'=0,B=2,V_95=0] 

### Ranking functions of CR eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) 
* RF of phase [31]: [-V_i_2+40]

#### Partial ranking functions of CR eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    -V_i_2+40


### Resulting Chains:eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) 
* [[31],30]
* [[31],29]
* [[31],28]
* [30]
* [29]


### Merging Chains  eval_main_bb24_in/8 into  External patterns of execution 
* [[28,[31]]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[30,[31]]] --> 4 
* [[29,[31]]] --> 5 


### Specialization of cost equations eval_main_bb27_in/14 
* CE 28 is refined into CE [39] 
* CE 27 is refined into CE [40] 


#### Refined cost equations eval_main_bb27_in/14 
* CE 39: eval_main_bb27_in(A,B,C,D,C,E,F,A,B,C,D,C,E,G) = 0
     [E>=0,G=0,F=3] 
* CE 40: eval_main_bb27_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M) = 1+ eval_main_bb27_in(A,B,C,D,C,N,O,G,H,I,J,K,L,M)
     [E>=0,E+1=N,O=3,F=3] 

### Cost equations --> "Loop" of eval_main_bb27_in/14 
* CEs [40] --> Loop 32 
* CEs [39] --> Loop 33 

#### Loops of eval_main_bb27_in/14 
* Loop 32: eval_main_bb27_in(A,B,C,D,C,E,F,G,H,I,J,K,L,M)->  eval_main_bb27_in(A,B,C,D,C,A',B',G,H,I,J,K,L,M)
                  [E>=0,E+1=A',B'=3,F=3] 
* Loop 33: eval_main_bb27_in(A,B,C,D,C,E,F,A,B,C,D,C,E,G) [E>=0,G=0,F=3] 

### Ranking functions of CR eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) 
* [[32]]...
* [[32],33]
* [33]


### Merging Chains  eval_main_bb27_in/14 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 
* [[[32]]] --> 3 


### Specialization of cost equations eval_main_bb29_in/9 
* CE 30 is refined into CE [41] 
* CE 29 is refined into CE [42] 


#### Refined cost equations eval_main_bb29_in/9 
* CE 41: eval_main_bb29_in(A,B,C,D,E,F,G,H,A) = 0
     [G>=C,H=4] 
* CE 42: eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) = 1+ eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,D,E,C)
     [V_i_2>=V_j_0+1,V_j_0+1=D,E=4,B=4] 

### Cost equations --> "Loop" of eval_main_bb29_in/9 
* CEs [42] --> Loop 34 
* CEs [41] --> Loop 35 

#### Loops of eval_main_bb29_in/9 
* Loop 34: eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C)->  eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0',B',C)
                  [V_i_2>=V_j_0+1,V_j_0+1=V_j_0',B'=4,B=4] 
* Loop 35: eval_main_bb29_in(A,B,C,D,E,F,G,H,A) [G>=C,H=4] 

### Ranking functions of CR eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) 
* RF of phase [34]: [V_i_2-V_j_0]

#### Partial ranking functions of CR eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V_i_2-V_j_0


### Resulting Chains:eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) 
* [[34],35]
* [35]


### Merging Chains  eval_main_bb29_in/9 into  External patterns of execution 
* [[35]] --> 1 
* [[35,[34]]] --> 2 


### Specialization of cost equations eval_main_bb23_in/2 
* CE 22 is refined into CE [43,44,45,46,47,48,49,50,51,52,53,54,55,56,57] 
* CE 21 is refined into CE [58] 


#### Refined cost equations eval_main_bb23_in/2 
* CE 43: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):1+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):1+ eval_main_bb29_in(V_encordec_0,S,T,H,U,V,W,X,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,Y)
     [Y=7,X=4,W=0,V=0,U=40,T=40,S=0,R=0,Q=0,P=40,O=40,N=0,M=3,L=0,K=40,J=40,I=0,G=40,F=0,E=2,D=0,C=0,B=7] 
* CE 44: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):1+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):2+ eval_main_bb29_in(V_encordec_0,S,T,H,U,Q,V,W,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,X)
     [Q>=1,X=7,W=4,V=0,U=40,T=40,S=0,R=0,P=40,O=40,N=0,M=3,L=0,K=40,J=40,I=0,G=40,F=0,E=2,D=0,C=0,B=7] 
* CE 45: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):1+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,N,O,P,Q,R,S,T):3
     [U=7,V=4,M=3,L=0,K=40,J=40,I=0,G=40,F=0,E=2,D=0,C=0,B=7] 
* CE 46: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):2+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):1+ eval_main_bb29_in(V_encordec_0,S,T,H,U,V,W,X,V_encordec_0):1+ eval_main_bb23_in(V_encordec_0,Y)
     [0>=H+1,Y=7,X=4,W=0,V=0,U=0,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 47: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):2+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):2+ eval_main_bb29_in(V_encordec_0,S,T,H,U,Q,V,W,V_encordec_0):1+ eval_main_bb23_in(V_encordec_0,X)
     [Q>=1,0>=H+1,X=7,W=4,V=0,U=0,T=0,S=0,R=0,P=0,O=0,N=0,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 48: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):2+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,N,O,P,Q,R,S,T):3
     [0>=H+1,U=7,V=4,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 49: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):3+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):1+ eval_main_bb29_in(V_encordec_0,S,T,H,U,V,W,X,V_encordec_0):1+ eval_main_bb23_in(V_encordec_0,Y)
     [H>=1,Y=7,X=4,W=0,V=0,U=0,T=0,S=0,R=0,Q=0,P=0,O=0,N=0,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 50: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):3+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,V_encordec_0,N,O,H,P,Q,R):2+ eval_main_bb29_in(V_encordec_0,S,T,H,U,Q,V,W,V_encordec_0):1+ eval_main_bb23_in(V_encordec_0,X)
     [Q>=1,H>=1,X=7,W=4,V=0,U=0,T=0,S=0,R=0,P=0,O=0,N=0,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 51: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):3+ eval_main_bb27_in(V_encordec_0,I,J,H,K,L,M,N,O,P,Q,R,S,T):3
     [H>=1,U=7,V=4,M=3,L=0,K=0,J=0,I=0,G=0,F=0,E=2,D=0,C=0,B=7] 
* CE 52: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):4+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,V_encordec_0,L,G,H,G,M,N):1+ eval_main_bb29_in(V_encordec_0,O,G,H,G,P,Q,R,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,S)
     [G>=1,40>=G,0>=H+1,S=7,R=4,Q=0,P=0,O=0,N=0,M=0,L=0,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 53: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):4+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,V_encordec_0,L,G,H,G,M,N):2+ eval_main_bb29_in(V_encordec_0,O,G,H,G,M,P,Q,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,R)
     [G>=1,M>=1,40>=G,0>=H+1,R=7,Q=4,P=0,O=0,N=0,L=0,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 54: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):4+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,L,M,N,O,P,Q,R):3
     [G>=1,40>=G,0>=H+1,S=7,T=4,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 55: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):5+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,V_encordec_0,L,G,H,G,M,N):1+ eval_main_bb29_in(V_encordec_0,O,G,H,G,P,Q,R,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,S)
     [G>=1,H>=1,40>=G,S=7,R=4,Q=0,P=0,O=0,N=0,M=0,L=0,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 56: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):5+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,V_encordec_0,L,G,H,G,M,N):2+ eval_main_bb29_in(V_encordec_0,O,G,H,G,M,P,Q,V_encordec_0):2+ eval_main_bb23_in(V_encordec_0,R)
     [G>=1,M>=1,H>=1,40>=G,R=7,Q=4,P=0,O=0,N=0,L=0,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 57: eval_main_bb23_in(V_encordec_0,B) = 4+ eval_main_bb24_in(V_encordec_0,C,D,E,V_encordec_0,F,G,H):5+ eval_main_bb27_in(V_encordec_0,I,G,H,G,J,K,L,M,N,O,P,Q,R):3
     [G>=1,H>=1,40>=G,S=7,T=4,K=3,J=0,I=0,F=0,E=2,D=0,C=0,B=7] 
* CE 58: eval_main_bb23_in(V_encordec_0,B) = 0
     [B=7] 

### Cost equations --> "Loop" of eval_main_bb23_in/2 
* CEs [58] --> Loop 36 
* CEs [45,48,51,54,57] --> Loop 37 
* CEs [43,44,46,47,49,50,52,53,55,56] --> Loop 38 

#### Loops of eval_main_bb23_in/2 
* Loop 36: eval_main_bb23_in(V_encordec_0,B) [B=7] 
* Loop 37: eval_main_bb23_in(V_encordec_0,B) [B=7] 
* Loop 38: eval_main_bb23_in(V_encordec_0,B)->  eval_main_bb23_in(V_encordec_0,B')
                  [B'=7,B=7] 

### Ranking functions of CR eval_main_bb23_in(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_bb23_in(V_encordec_0,B) 


### Resulting Chains:eval_main_bb23_in(V_encordec_0,B) 
* [[38]]...
* [[38],37]...
* [[38],36]
* [37]...
* [36]


### Merging Chains  eval_main_bb23_in/2 into  External patterns of execution 
* [[36],[36,[38]]] --> 1 
* [[37],[[38]],[37,[38]]] --> 2 


### Specialization of cost equations eval_main_73/2 
* CE 19 is refined into CE [59] 
* CE 20 is refined into CE [60,61] 


#### Refined cost equations eval_main_73/2 
* CE 59: eval_main_73(V_encordec_0,B) = 0
     [] 
* CE 60: eval_main_73(V_encordec_0,B) = 1+ eval_main_bb23_in(V_encordec_0,C):1
     [C=7] 
* CE 61: eval_main_73(V_encordec_0,B) = 1+ eval_main_bb23_in(V_encordec_0,C):2
     [C=7] 

### Cost equations --> "Loop" of eval_main_73/2 
* CEs [61] --> Loop 39 
* CEs [59,60] --> Loop 40 

#### Loops of eval_main_73/2 
* Loop 39: eval_main_73(V_encordec_0,B) [] 
* Loop 40: eval_main_73(V_encordec_0,B) [] 

### Ranking functions of CR eval_main_73(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_73(V_encordec_0,B) 


### Resulting Chains:eval_main_73(V_encordec_0,B) 
* [40]
* [39]...


### Merging Chains  eval_main_73/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations eval_main_68/2 
* CE 17 is refined into CE [62] 
* CE 18 is refined into CE [63,64] 


#### Refined cost equations eval_main_68/2 
* CE 62: eval_main_68(V_encordec_0,B) = 0
     [] 
* CE 63: eval_main_68(V_encordec_0,B) = 0+ eval_main_73(V_encordec_0,B):1
     [] 
* CE 64: eval_main_68(V_encordec_0,B) = 0+ eval_main_73(V_encordec_0,B):2
     [] 

### Cost equations --> "Loop" of eval_main_68/2 
* CEs [64] --> Loop 41 
* CEs [62,63] --> Loop 42 

#### Loops of eval_main_68/2 
* Loop 41: eval_main_68(V_encordec_0,B) [] 
* Loop 42: eval_main_68(V_encordec_0,B) [] 

### Ranking functions of CR eval_main_68(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_68(V_encordec_0,B) 


### Resulting Chains:eval_main_68(V_encordec_0,B) 
* [42]
* [41]...


### Merging Chains  eval_main_68/2 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_main_62/2 
* CE 15 is refined into CE [65] 
* CE 16 is refined into CE [66,67] 


#### Refined cost equations eval_main_62/2 
* CE 65: eval_main_62(V_encordec_0,B) = 0
     [] 
* CE 66: eval_main_62(V_encordec_0,B) = 0+ eval_main_68(V_encordec_0,B):1
     [] 
* CE 67: eval_main_62(V_encordec_0,B) = 0+ eval_main_68(V_encordec_0,B):2
     [] 

### Cost equations --> "Loop" of eval_main_62/2 
* CEs [67] --> Loop 43 
* CEs [65,66] --> Loop 44 

#### Loops of eval_main_62/2 
* Loop 43: eval_main_62(V_encordec_0,B) [] 
* Loop 44: eval_main_62(V_encordec_0,B) [] 

### Ranking functions of CR eval_main_62(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_62(V_encordec_0,B) 


### Resulting Chains:eval_main_62(V_encordec_0,B) 
* [44]
* [43]...


### Merging Chains  eval_main_62/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_main_56/2 
* CE 13 is refined into CE [68] 
* CE 14 is refined into CE [69,70] 


#### Refined cost equations eval_main_56/2 
* CE 68: eval_main_56(V_encordec_0,B) = 0
     [] 
* CE 69: eval_main_56(V_encordec_0,B) = 0+ eval_main_62(V_encordec_0,B):1
     [] 
* CE 70: eval_main_56(V_encordec_0,B) = 0+ eval_main_62(V_encordec_0,B):2
     [] 

### Cost equations --> "Loop" of eval_main_56/2 
* CEs [70] --> Loop 45 
* CEs [68,69] --> Loop 46 

#### Loops of eval_main_56/2 
* Loop 45: eval_main_56(V_encordec_0,B) [] 
* Loop 46: eval_main_56(V_encordec_0,B) [] 

### Ranking functions of CR eval_main_56(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_56(V_encordec_0,B) 


### Resulting Chains:eval_main_56(V_encordec_0,B) 
* [46]
* [45]...


### Merging Chains  eval_main_56/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


### Specialization of cost equations loop_cont_eval_main_bb7_in/3 
* CE 12 is refined into CE [71,72] 
* CE 11 is refined into CE [73] 


#### Refined cost equations loop_cont_eval_main_bb7_in/3 
* CE 71: loop_cont_eval_main_bb7_in(C,A,B) = 0+ eval_main_56(A,B):1
     [C=6] 
* CE 72: loop_cont_eval_main_bb7_in(C,A,B) = 0+ eval_main_56(A,B):2
     [C=6] 
* CE 73: loop_cont_eval_main_bb7_in(C,A,B) = 0
     [C=5] 

### Cost equations --> "Loop" of loop_cont_eval_main_bb7_in/3 
* CEs [71] --> Loop 47 
* CEs [73] --> Loop 48 
* CEs [72] --> Loop 49 

#### Loops of loop_cont_eval_main_bb7_in/3 
* Loop 47: loop_cont_eval_main_bb7_in(C,A,B) [C=6] 
* Loop 48: loop_cont_eval_main_bb7_in(C,A,B) [C=5] 
* Loop 49: loop_cont_eval_main_bb7_in(C,A,B) [C=6] 

### Ranking functions of CR loop_cont_eval_main_bb7_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_main_bb7_in(C,A,B) 


### Resulting Chains:loop_cont_eval_main_bb7_in(C,A,B) 
* [49]...
* [48]
* [47]


### Merging Chains  loop_cont_eval_main_bb7_in/3 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[49]] --> 3 


### Specialization of cost equations eval_main_bb6_in/2 
* CE 6 is refined into CE [74,75,76] 


#### Refined cost equations eval_main_bb6_in/2 
* CE 74: eval_main_bb6_in(V_encordec_0,B) = 1+ eval_main_bb7_in(V_encordec_0,C,D,E):1+ loop_cont_eval_main_bb7_in(F,E,B):1
     [V_encordec_0>=0,1>=V_encordec_0,F=5,D=5,C=0] 
* CE 75: eval_main_bb6_in(V_encordec_0,B) = 1+ eval_main_bb7_in(V_encordec_0,C,D,V_encordec_0):2+ loop_cont_eval_main_bb7_in(E,V_encordec_0,B):2
     [V_encordec_0>=0,1>=V_encordec_0,E=6,D=6,C=0] 
* CE 76: eval_main_bb6_in(V_encordec_0,B) = 1+ eval_main_bb7_in(V_encordec_0,C,D,V_encordec_0):2+ loop_cont_eval_main_bb7_in(E,V_encordec_0,B):3
     [V_encordec_0>=0,1>=V_encordec_0,E=6,D=6,C=0] 

### Cost equations --> "Loop" of eval_main_bb6_in/2 
* CEs [76] --> Loop 50 
* CEs [74,75] --> Loop 51 

#### Loops of eval_main_bb6_in/2 
* Loop 50: eval_main_bb6_in(V_encordec_0,B) [V_encordec_0>=0,1>=V_encordec_0] 
* Loop 51: eval_main_bb6_in(V_encordec_0,B) [V_encordec_0>=0,1>=V_encordec_0] 

### Ranking functions of CR eval_main_bb6_in(V_encordec_0,B) 

#### Partial ranking functions of CR eval_main_bb6_in(V_encordec_0,B) 


### Resulting Chains:eval_main_bb6_in(V_encordec_0,B) 
* [51]
* [50]...


### Merging Chains  eval_main_bb6_in/2 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_main_1/1 
* CE 3 is refined into CE [77] 
* CE 4 is refined into CE [78,79] 
* CE 5 is refined into CE [80,81] 


#### Refined cost equations eval_main_1/1 
* CE 77: eval_main_1(B) = 0
     [] 
* CE 78: eval_main_1(B) = 0+ eval_main_bb6_in(C,B):1
     [C=1] 
* CE 79: eval_main_1(B) = 0+ eval_main_bb6_in(C,B):2
     [C=1] 
* CE 80: eval_main_1(B) = 0+ eval_main_bb6_in(C,B):1
     [C=0] 
* CE 81: eval_main_1(B) = 0+ eval_main_bb6_in(C,B):2
     [C=0] 

### Cost equations --> "Loop" of eval_main_1/1 
* CEs [79,81] --> Loop 52 
* CEs [77,78,80] --> Loop 53 

#### Loops of eval_main_1/1 
* Loop 52: eval_main_1(B) [] 
* Loop 53: eval_main_1(B) [] 

### Ranking functions of CR eval_main_1(B) 

#### Partial ranking functions of CR eval_main_1(B) 


### Resulting Chains:eval_main_1(B) 
* [53]
* [52]...


### Merging Chains  eval_main_1/1 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_main_start/2 
* CE 2 is refined into CE [82,83] 


#### Refined cost equations eval_main_start/2 
* CE 82: eval_main_start(V_argc,B) = 0+ eval_main_1(B):1
     [] 
* CE 83: eval_main_start(V_argc,B) = 0+ eval_main_1(B):2
     [] 

### Cost equations --> "Loop" of eval_main_start/2 
* CEs [83] --> Loop 54 
* CEs [82] --> Loop 55 

#### Loops of eval_main_start/2 
* Loop 54: eval_main_start(V_argc,B) [] 
* Loop 55: eval_main_start(V_argc,B) [] 

### Ranking functions of CR eval_main_start(V_argc,B) 

#### Partial ranking functions of CR eval_main_start(V_argc,B) 


### Resulting Chains:eval_main_start(V_argc,B) 
* [55]
* [54]...


### Merging Chains  eval_main_start/2 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_main_bb7_in(V_encordec_0,V_i_0,B,C) -> [eval_main_bb7_in(V_encordec_0',V_i_0',B',C')] 
1
#### Cost of phase [24]:eval_main_bb7_in(V_encordec_0,V_i_0,B,C) -> [eval_main_bb7_in(V_encordec_0',V_i_0',B',C')] 
1*it(24)+0
  Such that:it(24) =< -V_i_0+64
it(24) =< -V_i_0+V_i_0'

#### Cost of phase [24]:eval_main_bb7_in(V_encordec_0,V_i_0,B,C) -> [eval_main_bb7_in(V_encordec_0',V_i_0',B',C')] 
1*it(24)+0
  Such that:it(24) =< -V_i_0+64
it(24) =< -V_i_0+V_i_0'

#### Cost of phase [24]:eval_main_bb7_in(V_encordec_0,V_i_0,B,C) -> [eval_main_bb7_in(V_encordec_0',V_i_0',B',C')] 
1*it(24)+0
  Such that:it(24) =< -V_i_0+64
it(24) =< -V_i_0+V_i_0'

#### Cost of chains of eval_main_bb7_in(V_encordec_0,V_i_0,B,C):
* Chain [[24],27]: 1*it(24)+0
  Such that:it(24) =< -V_i_0+63

  with precondition: [B=5,1>=V_encordec_0,62>=V_i_0,V_encordec_0>=0,V_i_0>=0] 

* Chain [[24],26]: 1*it(24)+0
  Such that:it(24) =< -V_i_0+63

  with precondition: [B=6,V_encordec_0=C,1>=V_encordec_0,62>=V_i_0,V_encordec_0>=0,V_i_0>=0] 

* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< -V_i_0+64

  with precondition: [B=6,V_encordec_0=C,1>=V_encordec_0,63>=V_i_0,V_encordec_0>=0,V_i_0>=0] 

* Chain [27]: 0
  with precondition: [B=5,1>=V_encordec_0,63>=V_i_0,V_encordec_0>=0,V_i_0>=0] 

* Chain [26]: 0
  with precondition: [B=6,V_encordec_0=C,1>=V_encordec_0,63>=V_i_0,V_encordec_0>=0,V_i_0>=0] 


#### Cost of loops [31] 

 * loop 31:eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) -> [eval_main_bb24_in(V_encordec_0',V_95',V_i_2',B',C',D',E',F')] 
1
#### Cost of phase [31]:eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) -> [eval_main_bb24_in(V_encordec_0',V_95',V_i_2',B',C',D',E',F')] 
1*it(31)+0
  Such that:it(31) =< -V_i_2+40
it(31) =< -V_i_2+V_i_2'

#### Cost of phase [31]:eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) -> [eval_main_bb24_in(V_encordec_0',V_95',V_i_2',B',C',D',E',F')] 
1*it(31)+0
  Such that:it(31) =< -V_i_2+40
it(31) =< -V_i_2+V_i_2'

#### Cost of phase [31]:eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F) -> [eval_main_bb24_in(V_encordec_0',V_95',V_i_2',B',C',D',E',F')] 
1*it(31)+0
  Such that:it(31) =< -V_i_2+40
it(31) =< -V_i_2+V_i_2'

#### Cost of chains of eval_main_bb24_in(V_encordec_0,V_95,V_i_2,B,C,D,E,F):
* Chain [[31],30]: 1*it(31)+0
  Such that:it(31) =< -V_i_2+E

  with precondition: [V_95=0,B=2,D=0,V_encordec_0=C,40>=E,0>=F+1,V_i_2>=0,E>=V_i_2+1] 

* Chain [[31],29]: 1*it(31)+0
  Such that:it(31) =< -V_i_2+E

  with precondition: [V_95=0,B=2,D=0,V_encordec_0=C,40>=E,V_i_2>=0,F>=1,E>=V_i_2+1] 

* Chain [[31],28]: 1*it(31)+0
  Such that:it(31) =< -V_i_2+40

  with precondition: [V_95=0,B=2,D=0,E=40,V_encordec_0=C,39>=V_i_2,V_i_2>=0] 

* Chain [30]: 0
  with precondition: [V_95=0,B=2,D=0,C=V_encordec_0,V_i_2=E,0>=F+1,V_i_2>=0] 

* Chain [29]: 0
  with precondition: [V_95=0,B=2,D=0,C=V_encordec_0,V_i_2=E,V_i_2>=0,F>=1] 


#### Cost of loops [32] 

 * loop 32:eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) -> [eval_main_bb27_in(V_encordec_0',V_95',V_i_2',V_98',V_113',V_loop_wrap1_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [32]:eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) -> [eval_main_bb27_in(V_encordec_0',V_95',V_i_2',V_98',V_113',V_loop_wrap1_0',B',C',D',E',F',G',H',I')] 
1*it(32)+0
#### Cost of phase [32]:eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I) -> [eval_main_bb27_in(V_encordec_0',V_95',V_i_2',V_98',V_113',V_loop_wrap1_0',B',C',D',E',F',G',H',I')] 
1*it(32)+0
#### Cost of chains of eval_main_bb27_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,B,C,D,E,F,G,H,I):
* Chain [[32]]...: 1*it(32)+0
  with precondition: [V_i_2=V_113,V_loop_wrap1_0>=0,B=3] 

* Chain [[32],33]: 1*it(32)+0
  with precondition: [B=3,I=0,V_i_2=V_113,V_encordec_0=C,V_95=D,V_i_2=E,V_98=F,V_i_2=G,V_loop_wrap1_0>=0,H>=V_loop_wrap1_0+1] 

* Chain [33]: 0
  with precondition: [B=3,I=0,C=V_encordec_0,D=V_95,V_113=V_i_2,F=V_98,V_113=E,V_113=G,V_loop_wrap1_0=H,V_loop_wrap1_0>=0] 


#### Cost of loops [34] 

 * loop 34:eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) -> [eval_main_bb29_in(V_encordec_0',V_95',V_i_2',V_98',V_113',V_loop_wrap1_0',V_j_0',B',C')] 
1
#### Cost of phase [34]:eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C) -> [eval_main_bb29_in(V_encordec_0',V_95',V_i_2',V_98',V_113',V_loop_wrap1_0',V_j_0',B',C')] 
1*it(34)+0
  Such that:it(34) =< V_i_2-V_j_0
it(34) =< V_i_2-V_j_0-V_i_2'+V_j_0'

#### Cost of chains of eval_main_bb29_in(V_encordec_0,V_95,V_i_2,V_98,V_113,V_loop_wrap1_0,V_j_0,B,C):
* Chain [[34],35]: 1*it(34)+0
  Such that:it(34) =< V_i_2-V_j_0

  with precondition: [B=4,V_encordec_0=C,V_i_2>=V_j_0+1] 

* Chain [35]: 0
  with precondition: [B=4,C=V_encordec_0,V_j_0>=V_i_2] 


#### Cost of loops [38] 

 * loop 38:eval_main_bb23_in(V_encordec_0,B) -> [eval_main_bb23_in(V_encordec_0',B')] 
1*s(21)+0
#### Cost of phase [38]:eval_main_bb23_in(V_encordec_0,B) -> [eval_main_bb23_in(V_encordec_0',B')] 
1*s(22)+0
#### Cost of phase [38]:eval_main_bb23_in(V_encordec_0,B) -> [eval_main_bb23_in(V_encordec_0',B')] 
1*s(22)+0
#### Cost of phase [38]:eval_main_bb23_in(V_encordec_0,B) -> [eval_main_bb23_in(V_encordec_0',B')] 
1*s(22)+0
#### Cost of chains of eval_main_bb23_in(V_encordec_0,B):
* Chain [[38]]...: 1*s(22)+0
  with precondition: [B=7] 

* Chain [[38],37]...: 2*aux(10)+0
  with precondition: [B=7] 

* Chain [[38],36]: 1*s(22)+0
  with precondition: [B=7] 

* Chain [37]...: 1*aux(10)+0
  with precondition: [B=7] 

* Chain [36]: 0
  with precondition: [B=7] 


#### Cost of chains of eval_main_73(V_encordec_0,B):
* Chain [40]: 1*aux(13)+0
  with precondition: [] 

* Chain [39]...: 1*s(36)+1
  with precondition: [] 


#### Cost of chains of eval_main_68(V_encordec_0,B):
* Chain [42]: 1*aux(14)+0
  with precondition: [] 

* Chain [41]...: 1*s(38)+1
  with precondition: [] 


#### Cost of chains of eval_main_62(V_encordec_0,B):
* Chain [44]: 1*aux(15)+0
  with precondition: [] 

* Chain [43]...: 1*s(40)+1
  with precondition: [] 


#### Cost of chains of eval_main_56(V_encordec_0,B):
* Chain [46]: 1*aux(16)+0
  with precondition: [] 

* Chain [45]...: 1*s(42)+1
  with precondition: [] 


#### Cost of chains of loop_cont_eval_main_bb7_in(C,A,B):
* Chain [49]...: 1*s(43)+1
  with precondition: [C=6] 

* Chain [48]: 0
  with precondition: [C=5] 

* Chain [47]: 1*s(44)+0
  with precondition: [C=6] 


#### Cost of chains of eval_main_bb6_in(V_encordec_0,B):
* Chain [51]: 1*aux(18)+0
  with precondition: [1>=V_encordec_0,V_encordec_0>=0] 

* Chain [50]...: 1*s(49)+1*s(50)+1*s(51)+2
  Such that:s(49) =< 63
s(50) =< 64

  with precondition: [1>=V_encordec_0,V_encordec_0>=0] 


#### Cost of chains of eval_main_1(B):
* Chain [53]: 1*aux(19)+0
  with precondition: [] 

* Chain [52]...: 1*aux(22)+0
  with precondition: [] 


#### Cost of chains of eval_main_start(V_argc,B):
* Chain [55]: 1*s(60)+0
  with precondition: [] 

* Chain [54]...: 1*s(61)+0
  with precondition: [] 


Closed-form bounds of eval_main_start(V_argc,B): 
-------------------------------------
* Chain [55] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [54]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main_start(V_argc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 66 ms.
* Invariants computed in 62 ms.
   - Backward Invariants 34 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 180 ms.
* Termination proved in 12 ms.
* Upper bounds computed in 107 ms.
   - Equation cost structures 57 ms.
   - Phase cost structures 41 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 505 ms.

