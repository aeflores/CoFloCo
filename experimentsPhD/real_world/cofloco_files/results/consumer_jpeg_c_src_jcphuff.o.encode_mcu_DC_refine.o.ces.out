Warning: Ignored call to eval_encode_mcu_DC_refine_stop/1 in equation eval_encode_mcu_DC_refine_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encode_mcu_DC_refine_17/3,eval_encode_mcu_DC_refine_18/3,eval_encode_mcu_DC_refine_bb4_in/2]
1. non_recursive  : [eval_encode_mcu_DC_refine_bb10_in/1]
2. non_recursive  : [eval_encode_mcu_DC_refine_bb9_in/1]
3. non_recursive  : [loop_cont_eval_encode_mcu_DC_refine_bb4_in/2]
4. non_recursive  : [eval_encode_mcu_DC_refine_bb3_in/1]
5. non_recursive  : [eval_encode_mcu_DC_refine_10/1]
6. non_recursive  : [eval_encode_mcu_DC_refine_9/2]
7. non_recursive  : [eval_encode_mcu_DC_refine_bb0_in/1]
8. non_recursive  : [eval_encode_mcu_DC_refine_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_DC_refine_bb4_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into loop_cont_eval_encode_mcu_DC_refine_bb4_in/2
4. SCC is partially evaluated into eval_encode_mcu_DC_refine_bb3_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_encode_mcu_DC_refine_bb0_in/1
8. SCC is partially evaluated into eval_encode_mcu_DC_refine_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_DC_refine_bb4_in/2 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_encode_mcu_DC_refine_bb4_in/2 
* CE 10: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) = 0
     [V_blkn_0>=0,B=3] 
* CE 11: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) = 0
     [V_blkn_0>=0,B=2] 
* CE 12: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) = 1+ eval_encode_mcu_DC_refine_bb4_in(C,B)
     [V_blkn_0>=0,V_blkn_0+1=C] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_refine_bb4_in/2 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_encode_mcu_DC_refine_bb4_in/2 
* Loop 9: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B)->  eval_encode_mcu_DC_refine_bb4_in(V_blkn_0',B)
                  [V_blkn_0>=0,V_blkn_0+1=V_blkn_0'] 
* Loop 10: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) [V_blkn_0>=0,B=3] 
* Loop 11: eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) [V_blkn_0>=0,B=2] 

### Ranking functions of CR eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) 


### Resulting Chains:eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) 
* [[9]]...
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  eval_encode_mcu_DC_refine_bb4_in/2 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10],[10,[9]]] --> 2 
* [[[9]]] --> 3 


### Specialization of cost equations loop_cont_eval_encode_mcu_DC_refine_bb4_in/2 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations loop_cont_eval_encode_mcu_DC_refine_bb4_in/2 
* CE 13: loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) = 0
     [B=3] 
* CE 14: loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_DC_refine_bb4_in/2 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of loop_cont_eval_encode_mcu_DC_refine_bb4_in/2 
* Loop 12: loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) [B=3] 
* Loop 13: loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A) 
* [13]
* [12]


### Merging Chains  loop_cont_eval_encode_mcu_DC_refine_bb4_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_refine_bb3_in/1 
* CE 4 is refined into CE [15,16,17] 


#### Refined cost equations eval_encode_mcu_DC_refine_bb3_in/1 
* CE 15: eval_encode_mcu_DC_refine_bb3_in(B) = 1+ eval_encode_mcu_DC_refine_bb4_in(C,D):1+ loop_cont_eval_encode_mcu_DC_refine_bb4_in(E,B):1
     [E=2,D=2,C=0] 
* CE 16: eval_encode_mcu_DC_refine_bb3_in(B) = 1+ eval_encode_mcu_DC_refine_bb4_in(C,D):2+ loop_cont_eval_encode_mcu_DC_refine_bb4_in(E,B):2
     [E=3,D=3,C=0] 
* CE 17: eval_encode_mcu_DC_refine_bb3_in(B) = 1+ eval_encode_mcu_DC_refine_bb4_in(C,D):3
     [C=0] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_refine_bb3_in/1 
* CEs [17] --> Loop 14 
* CEs [15,16] --> Loop 15 

#### Loops of eval_encode_mcu_DC_refine_bb3_in/1 
* Loop 14: eval_encode_mcu_DC_refine_bb3_in(B) [] 
* Loop 15: eval_encode_mcu_DC_refine_bb3_in(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_refine_bb3_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_refine_bb3_in(B) 


### Resulting Chains:eval_encode_mcu_DC_refine_bb3_in(B) 
* [15]
* [14]...


### Merging Chains  eval_encode_mcu_DC_refine_bb3_in/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_refine_bb0_in/1 
* CE 3 is refined into CE [18,19] 


#### Refined cost equations eval_encode_mcu_DC_refine_bb0_in/1 
* CE 18: eval_encode_mcu_DC_refine_bb0_in(B) = 0+ eval_encode_mcu_DC_refine_bb3_in(B):1
     [] 
* CE 19: eval_encode_mcu_DC_refine_bb0_in(B) = 0+ eval_encode_mcu_DC_refine_bb3_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_refine_bb0_in/1 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_encode_mcu_DC_refine_bb0_in/1 
* Loop 16: eval_encode_mcu_DC_refine_bb0_in(B) [] 
* Loop 17: eval_encode_mcu_DC_refine_bb0_in(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_refine_bb0_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_refine_bb0_in(B) 


### Resulting Chains:eval_encode_mcu_DC_refine_bb0_in(B) 
* [17]
* [16]...


### Merging Chains  eval_encode_mcu_DC_refine_bb0_in/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_encode_mcu_DC_refine_start/1 
* CE 2 is refined into CE [20,21] 


#### Refined cost equations eval_encode_mcu_DC_refine_start/1 
* CE 20: eval_encode_mcu_DC_refine_start(B) = 0+ eval_encode_mcu_DC_refine_bb0_in(B):1
     [] 
* CE 21: eval_encode_mcu_DC_refine_start(B) = 0+ eval_encode_mcu_DC_refine_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_DC_refine_start/1 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of eval_encode_mcu_DC_refine_start/1 
* Loop 18: eval_encode_mcu_DC_refine_start(B) [] 
* Loop 19: eval_encode_mcu_DC_refine_start(B) [] 

### Ranking functions of CR eval_encode_mcu_DC_refine_start(B) 

#### Partial ranking functions of CR eval_encode_mcu_DC_refine_start(B) 


### Resulting Chains:eval_encode_mcu_DC_refine_start(B) 
* [19]
* [18]...


### Merging Chains  eval_encode_mcu_DC_refine_start/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_refine_bb4_in(V_blkn_0',B')] 
1
#### Cost of phase [9]:eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_refine_bb4_in(V_blkn_0',B')] 
1*it(9)+0
#### Cost of phase [9]:eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_refine_bb4_in(V_blkn_0',B')] 
1*it(9)+0
#### Cost of phase [9]:eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_DC_refine_bb4_in(V_blkn_0',B')] 
1*it(9)+0
#### Cost of chains of eval_encode_mcu_DC_refine_bb4_in(V_blkn_0,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [V_blkn_0>=0] 

* Chain [[9],11]: 1*it(9)+0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [[9],10]: 1*it(9)+0
  with precondition: [B=3,V_blkn_0>=0] 

* Chain [11]: 0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [10]: 0
  with precondition: [B=3,V_blkn_0>=0] 


#### Cost of chains of loop_cont_eval_encode_mcu_DC_refine_bb4_in(B,A):
* Chain [13]: 0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_encode_mcu_DC_refine_bb3_in(B):
* Chain [15]: 1*aux(3)+0
  with precondition: [] 

* Chain [14]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_DC_refine_bb0_in(B):
* Chain [17]: 1*s(6)+0
  with precondition: [] 

* Chain [16]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_DC_refine_start(B):
* Chain [19]: 1*s(8)+0
  with precondition: [] 

* Chain [18]...: 1*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_encode_mcu_DC_refine_start(B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encode_mcu_DC_refine_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 34 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 127 ms.

