Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_27/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_34/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_bb20_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main1_27/1]
1. non_recursive  : [eval_main1_26/1]
2. non_recursive  : [eval_main1_25/1]
3. non_recursive  : [eval_main1_34/1]
4. non_recursive  : [eval_main1_33/1]
5. non_recursive  : [eval_main1_32/1]
6. recursive  : [eval_main1_48/1,eval_main1_49/2,eval_main1_50/2,eval_main1_bb14_in/1]
7. non_recursive  : [eval_main1_bb20_in/1]
8. non_recursive  : [eval_main1_58/1]
9. non_recursive  : [eval_main1_57/1]
10. non_recursive  : [eval_main1_bb18_in/1]
11. non_recursive  : [eval_main1_56/1]
12. non_recursive  : [eval_main1_55/1]
13. non_recursive  : [eval_main1_54/1]
14. non_recursive  : [eval_main1_53/1]
15. non_recursive  : [eval_main1_52/1]
16. non_recursive  : [eval_main1_51/1]
17. non_recursive  : [loop_cont_eval_main1_bb14_in/2]
18. non_recursive  : [eval_main1_44/1]
19. non_recursive  : [eval_main1_43/1]
20. non_recursive  : [eval_main1_42/1]
21. non_recursive  : [eval_main1_41/2]
22. non_recursive  : [eval_main1_40/2]
23. non_recursive  : [eval_main1_39/2]
24. non_recursive  : [eval_main1_38/2]
25. non_recursive  : [eval_main1_37/2]
26. non_recursive  : [eval_main1_bb13_in/2]
27. non_recursive  : [eval_main1_31/2]
28. non_recursive  : [eval_main1_30/2]
29. non_recursive  : [eval_main1_36/2]
30. non_recursive  : [eval_main1_35/2]
31. non_recursive  : [eval_main1_bb9_in/2]
32. non_recursive  : [eval_main1_23/2]
33. non_recursive  : [eval_main1_22/2]
34. non_recursive  : [eval_main1_29/2]
35. non_recursive  : [eval_main1_28/2]
36. non_recursive  : [eval_main1_bb5_in/2]
37. non_recursive  : [eval_main1_20/2]
38. non_recursive  : [eval_main1_19/2]
39. non_recursive  : [eval_main1_18/2]
40. non_recursive  : [eval_main1_16/2]
41. non_recursive  : [eval_main1_15/2]
42. non_recursive  : [eval_main1_14/2]
43. non_recursive  : [eval_main1_10/2]
44. non_recursive  : [eval_main1_9/2]
45. non_recursive  : [eval_main1_8/2]
46. non_recursive  : [eval_main1_7/2]
47. non_recursive  : [eval_main1_bb3_in/2]
48. non_recursive  : [eval_main1_bb2_in/2]
49. non_recursive  : [eval_main1_bb0_in/2]
50. non_recursive  : [eval_main1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_main1_bb14_in/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_main1_bb18_in/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_main1_54/1
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_main1_44/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_main1_31/2
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_main1_bb9_in/2
32. SCC is partially evaluated into eval_main1_23/2
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_main1_bb5_in/2
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is partially evaluated into eval_main1_16/2
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is partially evaluated into eval_main1_bb0_in/2
50. SCC is partially evaluated into eval_main1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb14_in/1 
* CE 15 is refined into CE [18] 
* CE 14 is refined into CE [19] 


#### Refined cost equations eval_main1_bb14_in/1 
* CE 18: eval_main1_bb14_in(B) = 0
     [B=2] 
* CE 19: eval_main1_bb14_in(B) = 1+ eval_main1_bb14_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_main1_bb14_in/1 
* CEs [19] --> Loop 13 
* CEs [18] --> Loop 14 

#### Loops of eval_main1_bb14_in/1 
* Loop 13: eval_main1_bb14_in(B)->  eval_main1_bb14_in(B')
                  [B'=2,B=2] 
* Loop 14: eval_main1_bb14_in(B) [B=2] 

### Ranking functions of CR eval_main1_bb14_in(B) 

#### Partial ranking functions of CR eval_main1_bb14_in(B) 


### Resulting Chains:eval_main1_bb14_in(B) 
* [[13]]...
* [[13],14]
* [14]


### Merging Chains  eval_main1_bb14_in/1 into  External patterns of execution 
* [[14],[14,[13]]] --> 1 
* [[[13]]] --> 2 


### Specialization of cost equations eval_main1_bb18_in/1 
* CE 17 is refined into CE [20] 


#### Refined cost equations eval_main1_bb18_in/1 
* CE 20: eval_main1_bb18_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_bb18_in/1 
* CEs [20] --> Loop 15 

#### Loops of eval_main1_bb18_in/1 
* Loop 15: eval_main1_bb18_in(B) [] 

### Ranking functions of CR eval_main1_bb18_in(B) 

#### Partial ranking functions of CR eval_main1_bb18_in(B) 


### Resulting Chains:eval_main1_bb18_in(B) 
* [15]


### Merging Chains  eval_main1_bb18_in/1 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_main1_54/1 
* CE 16 is refined into CE [21] 


#### Refined cost equations eval_main1_54/1 
* CE 21: eval_main1_54(B) = 0+ eval_main1_bb18_in(B):1
     [] 

### Cost equations --> "Loop" of eval_main1_54/1 
* CEs [21] --> Loop 16 

#### Loops of eval_main1_54/1 
* Loop 16: eval_main1_54(B) [] 

### Ranking functions of CR eval_main1_54(B) 

#### Partial ranking functions of CR eval_main1_54(B) 


### Resulting Chains:eval_main1_54(B) 
* [16]


### Merging Chains  eval_main1_54/1 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_main1_44/1 
* CE 13 is refined into CE [22,23] 


#### Refined cost equations eval_main1_44/1 
* CE 22: eval_main1_44(B) = 1+ eval_main1_bb14_in(C):1+ eval_main1_54(B):1
     [C=2] 
* CE 23: eval_main1_44(B) = 1+ eval_main1_bb14_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_main1_44/1 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 

#### Loops of eval_main1_44/1 
* Loop 17: eval_main1_44(B) [] 
* Loop 18: eval_main1_44(B) [] 

### Ranking functions of CR eval_main1_44(B) 

#### Partial ranking functions of CR eval_main1_44(B) 


### Resulting Chains:eval_main1_44(B) 
* [18]
* [17]...


### Merging Chains  eval_main1_44/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_main1_31/2 
* CE 11 is refined into CE [24] 
* CE 12 is refined into CE [25,26] 


#### Refined cost equations eval_main1_31/2 
* CE 24: eval_main1_31(V_argc,B) = 0
     [] 
* CE 25: eval_main1_31(V_argc,B) = 0+ eval_main1_44(B):1
     [] 
* CE 26: eval_main1_31(V_argc,B) = 0+ eval_main1_44(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_31/2 
* CEs [26] --> Loop 19 
* CEs [24,25] --> Loop 20 

#### Loops of eval_main1_31/2 
* Loop 19: eval_main1_31(V_argc,B) [] 
* Loop 20: eval_main1_31(V_argc,B) [] 

### Ranking functions of CR eval_main1_31(V_argc,B) 

#### Partial ranking functions of CR eval_main1_31(V_argc,B) 


### Resulting Chains:eval_main1_31(V_argc,B) 
* [20]
* [19]...


### Merging Chains  eval_main1_31/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_main1_bb9_in/2 
* CE 9 is refined into CE [27,28] 
* CE 10 is refined into CE [29,30] 


#### Refined cost equations eval_main1_bb9_in/2 
* CE 27: eval_main1_bb9_in(V_argc,B) = 0+ eval_main1_31(V_argc,B):1
     [] 
* CE 28: eval_main1_bb9_in(V_argc,B) = 0+ eval_main1_31(V_argc,B):2
     [] 
* CE 29: eval_main1_bb9_in(V_argc,B) = 0+ eval_main1_44(B):1
     [] 
* CE 30: eval_main1_bb9_in(V_argc,B) = 0+ eval_main1_44(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_bb9_in/2 
* CEs [28,30] --> Loop 21 
* CEs [27,29] --> Loop 22 

#### Loops of eval_main1_bb9_in/2 
* Loop 21: eval_main1_bb9_in(V_argc,B) [] 
* Loop 22: eval_main1_bb9_in(V_argc,B) [] 

### Ranking functions of CR eval_main1_bb9_in(V_argc,B) 

#### Partial ranking functions of CR eval_main1_bb9_in(V_argc,B) 


### Resulting Chains:eval_main1_bb9_in(V_argc,B) 
* [22]
* [21]...


### Merging Chains  eval_main1_bb9_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_main1_23/2 
* CE 7 is refined into CE [31] 
* CE 8 is refined into CE [32,33] 


#### Refined cost equations eval_main1_23/2 
* CE 31: eval_main1_23(V_argc,B) = 0
     [] 
* CE 32: eval_main1_23(V_argc,B) = 0+ eval_main1_bb9_in(V_argc,B):1
     [] 
* CE 33: eval_main1_23(V_argc,B) = 0+ eval_main1_bb9_in(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_23/2 
* CEs [33] --> Loop 23 
* CEs [31,32] --> Loop 24 

#### Loops of eval_main1_23/2 
* Loop 23: eval_main1_23(V_argc,B) [] 
* Loop 24: eval_main1_23(V_argc,B) [] 

### Ranking functions of CR eval_main1_23(V_argc,B) 

#### Partial ranking functions of CR eval_main1_23(V_argc,B) 


### Resulting Chains:eval_main1_23(V_argc,B) 
* [24]
* [23]...


### Merging Chains  eval_main1_23/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_main1_bb5_in/2 
* CE 5 is refined into CE [34,35] 
* CE 6 is refined into CE [36,37] 


#### Refined cost equations eval_main1_bb5_in/2 
* CE 34: eval_main1_bb5_in(V_argc,B) = 0+ eval_main1_23(V_argc,B):1
     [] 
* CE 35: eval_main1_bb5_in(V_argc,B) = 0+ eval_main1_23(V_argc,B):2
     [] 
* CE 36: eval_main1_bb5_in(V_argc,B) = 0+ eval_main1_bb9_in(V_argc,B):1
     [] 
* CE 37: eval_main1_bb5_in(V_argc,B) = 0+ eval_main1_bb9_in(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_bb5_in/2 
* CEs [35,37] --> Loop 25 
* CEs [34,36] --> Loop 26 

#### Loops of eval_main1_bb5_in/2 
* Loop 25: eval_main1_bb5_in(V_argc,B) [] 
* Loop 26: eval_main1_bb5_in(V_argc,B) [] 

### Ranking functions of CR eval_main1_bb5_in(V_argc,B) 

#### Partial ranking functions of CR eval_main1_bb5_in(V_argc,B) 


### Resulting Chains:eval_main1_bb5_in(V_argc,B) 
* [26]
* [25]...


### Merging Chains  eval_main1_bb5_in/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_main1_16/2 
* CE 4 is refined into CE [38,39] 


#### Refined cost equations eval_main1_16/2 
* CE 38: eval_main1_16(V_argc,B) = 0+ eval_main1_bb5_in(V_argc,B):1
     [] 
* CE 39: eval_main1_16(V_argc,B) = 0+ eval_main1_bb5_in(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_16/2 
* CEs [39] --> Loop 27 
* CEs [38] --> Loop 28 

#### Loops of eval_main1_16/2 
* Loop 27: eval_main1_16(V_argc,B) [] 
* Loop 28: eval_main1_16(V_argc,B) [] 

### Ranking functions of CR eval_main1_16(V_argc,B) 

#### Partial ranking functions of CR eval_main1_16(V_argc,B) 


### Resulting Chains:eval_main1_16(V_argc,B) 
* [28]
* [27]...


### Merging Chains  eval_main1_16/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_main1_bb0_in/2 
* CE 3 is refined into CE [40,41] 


#### Refined cost equations eval_main1_bb0_in/2 
* CE 40: eval_main1_bb0_in(V_argc,B) = 0+ eval_main1_16(V_argc,B):1
     [] 
* CE 41: eval_main1_bb0_in(V_argc,B) = 0+ eval_main1_16(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_bb0_in/2 
* CEs [41] --> Loop 29 
* CEs [40] --> Loop 30 

#### Loops of eval_main1_bb0_in/2 
* Loop 29: eval_main1_bb0_in(V_argc,B) [] 
* Loop 30: eval_main1_bb0_in(V_argc,B) [] 

### Ranking functions of CR eval_main1_bb0_in(V_argc,B) 

#### Partial ranking functions of CR eval_main1_bb0_in(V_argc,B) 


### Resulting Chains:eval_main1_bb0_in(V_argc,B) 
* [30]
* [29]...


### Merging Chains  eval_main1_bb0_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_main1_start/2 
* CE 2 is refined into CE [42,43] 


#### Refined cost equations eval_main1_start/2 
* CE 42: eval_main1_start(V_argc,B) = 0+ eval_main1_bb0_in(V_argc,B):1
     [] 
* CE 43: eval_main1_start(V_argc,B) = 0+ eval_main1_bb0_in(V_argc,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_start/2 
* CEs [43] --> Loop 31 
* CEs [42] --> Loop 32 

#### Loops of eval_main1_start/2 
* Loop 31: eval_main1_start(V_argc,B) [] 
* Loop 32: eval_main1_start(V_argc,B) [] 

### Ranking functions of CR eval_main1_start(V_argc,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,B) 


### Resulting Chains:eval_main1_start(V_argc,B) 
* [32]
* [31]...


### Merging Chains  eval_main1_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_main1_bb14_in(B) -> [eval_main1_bb14_in(B')] 
1
#### Cost of phase [13]:eval_main1_bb14_in(B) -> [eval_main1_bb14_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_main1_bb14_in(B) -> [eval_main1_bb14_in(B')] 
1*it(13)+0
#### Cost of chains of eval_main1_bb14_in(B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [B=2] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=2] 

* Chain [14]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_main1_bb18_in(B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of eval_main1_54(B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of eval_main1_44(B):
* Chain [18]: 1*s(2)+1
  with precondition: [] 

* Chain [17]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_main1_31(V_argc,B):
* Chain [20]: 1*aux(2)+0
  with precondition: [] 

* Chain [19]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_main1_bb9_in(V_argc,B):
* Chain [22]: 1*aux(3)+0
  with precondition: [] 

* Chain [21]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_main1_23(V_argc,B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 

* Chain [23]...: 1*s(11)+0
  with precondition: [] 


#### Cost of chains of eval_main1_bb5_in(V_argc,B):
* Chain [26]: 1*aux(6)+0
  with precondition: [] 

* Chain [25]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_main1_16(V_argc,B):
* Chain [28]: 1*s(16)+0
  with precondition: [] 

* Chain [27]...: 1*s(17)+0
  with precondition: [] 


#### Cost of chains of eval_main1_bb0_in(V_argc,B):
* Chain [30]: 1*s(18)+0
  with precondition: [] 

* Chain [29]...: 1*s(19)+0
  with precondition: [] 


#### Cost of chains of eval_main1_start(V_argc,B):
* Chain [32]: 1*s(20)+0
  with precondition: [] 

* Chain [31]...: 1*s(21)+0
  with precondition: [] 


Closed-form bounds of eval_main1_start(V_argc,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main1_start(V_argc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 53 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 34 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 213 ms.

