Warning: Ignored call to eval_compress_output_stop/1 in equation eval_compress_output_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_compress_output_14/3,eval_compress_output_15/3,eval_compress_output_bb1_in/3]
1. recursive  : [eval_compress_output_bb16_in/13]
2. recursive  : [eval_compress_output_bb18_in/12]
3. recursive  : [eval_compress_output_bb12_in/9,eval_compress_output_bb15_in/9,loop_cont_eval_compress_output_bb16_in/11,loop_cont_eval_compress_output_bb18_in/10]
4. recursive  : [eval_compress_output_bb11_in/8,eval_compress_output_bb7_in/7,loop_cont_eval_compress_output_bb12_in/8]
5. recursive  : [eval_compress_output_72/5,eval_compress_output_73/5,eval_compress_output_bb6_in/4,loop_cont_eval_compress_output_bb7_in/6]
6. recursive  : [eval_compress_output_bb4_in/2,loop_cont_eval_compress_output_bb6_in/3]
7. non_recursive  : [eval_compress_output_bb27_in/1]
8. non_recursive  : [eval_compress_output_86/1]
9. non_recursive  : [eval_compress_output_85/1]
10. non_recursive  : [loop_cont_eval_compress_output_bb4_in/2]
11. non_recursive  : [loop_cont_eval_compress_output_bb1_in/3]
12. non_recursive  : [eval_compress_output_bb0_in/1]
13. non_recursive  : [eval_compress_output_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_compress_output_bb1_in/3
1. SCC is partially evaluated into eval_compress_output_bb16_in/13
2. SCC is partially evaluated into eval_compress_output_bb18_in/12
3. SCC is partially evaluated into eval_compress_output_bb12_in/9
4. SCC is partially evaluated into eval_compress_output_bb7_in/7
5. SCC is partially evaluated into eval_compress_output_bb6_in/4
6. SCC is partially evaluated into eval_compress_output_bb4_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_compress_output_bb4_in/2
11. SCC is partially evaluated into loop_cont_eval_compress_output_bb1_in/3
12. SCC is partially evaluated into eval_compress_output_bb0_in/1
13. SCC is partially evaluated into eval_compress_output_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_compress_output_bb1_in/3 
* CE 5 is refined into CE [24] 
* CE 4 is refined into CE [25] 


#### Refined cost equations eval_compress_output_bb1_in/3 
* CE 24: eval_compress_output_bb1_in(V_ci_0,B,C) = 0
     [V_ci_0>=0,B=7] 
* CE 25: eval_compress_output_bb1_in(V_ci_0,B,C) = 1+ eval_compress_output_bb1_in(D,B,C)
     [V_ci_0>=0,V_ci_0+1=D] 

### Cost equations --> "Loop" of eval_compress_output_bb1_in/3 
* CEs [25] --> Loop 22 
* CEs [24] --> Loop 23 

#### Loops of eval_compress_output_bb1_in/3 
* Loop 22: eval_compress_output_bb1_in(V_ci_0,B,C)->  eval_compress_output_bb1_in(V_ci_0',B,C)
                  [V_ci_0>=0,V_ci_0+1=V_ci_0'] 
* Loop 23: eval_compress_output_bb1_in(V_ci_0,B,C) [V_ci_0>=0,B=7] 

### Ranking functions of CR eval_compress_output_bb1_in(V_ci_0,B,C) 

#### Partial ranking functions of CR eval_compress_output_bb1_in(V_ci_0,B,C) 


### Resulting Chains:eval_compress_output_bb1_in(V_ci_0,B,C) 
* [[22]]...
* [[22],23]
* [23]


### Merging Chains  eval_compress_output_bb1_in/3 into  External patterns of execution 
* [[23],[23,[22]]] --> 1 
* [[[22]]] --> 2 


### Specialization of cost equations eval_compress_output_bb16_in/13 
* CE 21 is refined into CE [26] 
* CE 20 is refined into CE [27] 


#### Refined cost equations eval_compress_output_bb16_in/13 
* CE 26: eval_compress_output_bb16_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [F>=D,F>=0,G=2] 
* CE 27: eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) = 1+ eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,I,J,C,D,E,F,G,H)
     [V_66>=V_xindex_0+1,V_xindex_0>=0,V_xindex_0+1=I,J=2,B=2] 

### Cost equations --> "Loop" of eval_compress_output_bb16_in/13 
* CEs [27] --> Loop 24 
* CEs [26] --> Loop 25 

#### Loops of eval_compress_output_bb16_in/13 
* Loop 24: eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H)->  eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0',B',C,D,E,F,G,H)
                  [V_66>=V_xindex_0+1,V_xindex_0>=0,V_xindex_0+1=V_xindex_0',B'=2,B=2] 
* Loop 25: eval_compress_output_bb16_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [F>=D,F>=0,G=2] 

### Ranking functions of CR eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) 
* RF of phase [24]: [V_66-V_xindex_0]

#### Partial ranking functions of CR eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_66-V_xindex_0


### Resulting Chains:eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) 
* [[24],25]
* [25]


### Merging Chains  eval_compress_output_bb16_in/13 into  External patterns of execution 
* [[25]] --> 1 
* [[25,[24]]] --> 2 


### Specialization of cost equations eval_compress_output_bb18_in/12 
* CE 23 is refined into CE [28] 
* CE 22 is refined into CE [29] 


#### Refined cost equations eval_compress_output_bb18_in/12 
* CE 28: eval_compress_output_bb18_in(A,B,C,D,E,F,G,A,B,C,D,H) = 0
     [H=E+1,G=3] 
* CE 29: eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) = 1+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,H,I,C,D,E,F,G)
     [H=V_xindex_2+1,I=3,B=3] 

### Cost equations --> "Loop" of eval_compress_output_bb18_in/12 
* CEs [29] --> Loop 26 
* CEs [28] --> Loop 27 

#### Loops of eval_compress_output_bb18_in/12 
* Loop 26: eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G)->  eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2',B',C,D,E,F,G)
                  [V_xindex_2+1=V_xindex_2',B'=3,B=3] 
* Loop 27: eval_compress_output_bb18_in(A,B,C,D,E,F,G,A,B,C,D,H) [E+1=H,G=3] 

### Ranking functions of CR eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) 


### Resulting Chains:eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) 
* [[26]]...
* [[26],27]
* [27]


### Merging Chains  eval_compress_output_bb18_in/12 into  External patterns of execution 
* [[27],[27,[26]]] --> 1 
* [[[26]]] --> 2 


### Specialization of cost equations eval_compress_output_bb12_in/9 
* CE 19 is refined into CE [30] 
* CE 17 is refined into CE [31,32,33,34] 
* CE 18 is refined into CE [35,36] 


#### Refined cost equations eval_compress_output_bb12_in/9 
* CE 30: eval_compress_output_bb12_in(A,B,C,D,E,F,A,B,G) = 0
     [G=C+1,F=4] 
* CE 31: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 3+ eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,F,G,H,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,I,J):1+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,K,L,M,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,N):1+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,N,O,C,D,E)
     [0>=V_66,N=K+1,N=I+1,N=F+1,N=V_yindex_0+1,O=4,M=3,L=0,J=0,H=2,G=0,B=4] 
* CE 32: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 3+ eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,F,G,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,H):1+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,I,J,K,L,M,N,O):2
     [0>=V_66,P=4,J=3,I=0,H=0,G=2,F=0,B=4] 
* CE 33: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 3+ eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,F,G,H,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,I,V_66):2+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,J,V_66,K,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,L):1+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,L,M,C,D,E)
     [V_66>=1,L=J+1,L=I+1,L=F+1,L=V_yindex_0+1,M=4,K=3,H=2,G=0,B=4] 
* CE 34: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 3+ eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,F,G,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_66):2+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_66,H,I,J,K,L,M):2
     [V_66>=1,N=4,H=3,G=2,F=0,B=4] 
* CE 35: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 2+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,F,G,H,V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,I):1+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,I,J,C,D,E)
     [I=F+1,I=V_yindex_0+1,J=4,H=3,G=0,B=4] 
* CE 36: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) = 2+ eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,F,G,H,I,J,K,L):2
     [M=4,G=3,F=0,B=4] 

### Cost equations --> "Loop" of eval_compress_output_bb12_in/9 
* CEs [32,34,36] --> Loop 28 
* CEs [31,33,35] --> Loop 29 
* CEs [30] --> Loop 30 

#### Loops of eval_compress_output_bb12_in/9 
* Loop 28: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) [B=4] 
* Loop 29: eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E)->  eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0',B',C,D,E)
                  [V_yindex_0+1=V_yindex_0',B'=4,B=4] 
* Loop 30: eval_compress_output_bb12_in(A,B,C,D,E,F,A,B,G) [C+1=G,F=4] 

### Ranking functions of CR eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) 

#### Partial ranking functions of CR eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) 


### Resulting Chains:eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) 
* [[29]]...
* [[29],30]
* [[29],28]...
* [30]
* [28]...


### Merging Chains  eval_compress_output_bb12_in/9 into  External patterns of execution 
* [[30],[30,[29]]] --> 1 
* [[[29]]] --> 2 
* [[28],[28,[29]]] --> 3 


### Specialization of cost equations eval_compress_output_bb7_in/7 
* CE 16 is refined into CE [37] 
* CE 15 is refined into CE [38,39,40] 


#### Refined cost equations eval_compress_output_bb7_in/7 
* CE 37: eval_compress_output_bb7_in(A,B,C,D,A,B,C) = 0
     [D=5] 
* CE 38: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,F,G,H,I,V_yoffset_0,V_MCU_col_num_0,J):1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,J,K,C,D,E)
     [J=F+1,J=V_ci_1+1,K=5,I=4,H=0,B=5] 
* CE 39: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,F,G,H,I,J,K):2
     [L=5,H=4,G=0,B=5] 
* CE 40: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,F,G,H,I,J,K):3
     [L=5,H=4,G=0,B=5] 

### Cost equations --> "Loop" of eval_compress_output_bb7_in/7 
* CEs [39,40] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [37] --> Loop 33 

#### Loops of eval_compress_output_bb7_in/7 
* Loop 31: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) [B=5] 
* Loop 32: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E)->  eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1',B',C,D,E)
                  [V_ci_1+1=V_ci_1',B'=5,B=5] 
* Loop 33: eval_compress_output_bb7_in(A,B,C,D,A,B,C) [D=5] 

### Ranking functions of CR eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 

#### Partial ranking functions of CR eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 


### Resulting Chains:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 
* [[32]]...
* [[32],33]
* [[32],31]...
* [33]
* [31]...


### Merging Chains  eval_compress_output_bb7_in/7 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[32]]] --> 2 
* [[[32]]] --> 3 
* [[31],[31,[32]]] --> 4 


### Specialization of cost equations eval_compress_output_bb6_in/4 
* CE 14 is refined into CE [41] 
* CE 12 is refined into CE [42,43,44,45] 
* CE 13 is refined into CE [46,47,48,49] 


#### Refined cost equations eval_compress_output_bb6_in/4 
* CE 41: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 0
     [C=V_yoffset_0+1,B=7] 
* CE 42: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):1
     [F=0,E=5,D=0,B=6] 
* CE 43: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):2
     [F>=1,E=5,D=0,B=6] 
* CE 44: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):3
     [E=5,D=0,B=6] 
* CE 45: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):4
     [E=5,D=0,B=6] 
* CE 46: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):1+ eval_compress_output_bb6_in(V_yoffset_0,G,B,C)
     [B>=6,7>=B,V_MCU_col_num_0+1=G,F=0,E=5,D=0] 
* CE 47: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):2+ eval_compress_output_bb6_in(V_yoffset_0,G,B,C)
     [F>=1,B>=6,7>=B,V_MCU_col_num_0+1=G,E=5,D=0] 
* CE 48: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):3
     [B>=6,7>=B,I=G+1,E=5,D=0] 
* CE 49: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):4
     [B>=6,7>=B,I=G+1,E=5,D=0] 

### Cost equations --> "Loop" of eval_compress_output_bb6_in/4 
* CEs [44,45,48,49] --> Loop 34 
* CEs [46,47] --> Loop 35 
* CEs [41] --> Loop 36 
* CEs [42,43] --> Loop 37 

#### Loops of eval_compress_output_bb6_in/4 
* Loop 34: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [B>=6,7>=B] 
* Loop 35: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C)->  eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0',B,C)
                  [B>=6,7>=B,V_MCU_col_num_0+1=V_MCU_col_num_0'] 
* Loop 36: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [V_yoffset_0+1=C,B=7] 
* Loop 37: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [B=6] 

### Ranking functions of CR eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 

#### Partial ranking functions of CR eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 


### Resulting Chains:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 
* [[35]]...
* [[35],37]
* [[35],36]
* [[35],34]...
* [37]
* [36]
* [34]...


### Merging Chains  eval_compress_output_bb6_in/4 into  External patterns of execution 
* [[37],[37,[35]]] --> 1 
* [[36],[36,[35]]] --> 2 
* [[34],[34,[35]]] --> 3 
* [[[35]]] --> 4 


### Specialization of cost equations eval_compress_output_bb4_in/2 
* CE 9 is refined into CE [50] 
* CE 8 is refined into CE [51,52,53] 
* CE 7 is refined into CE [54,55,56] 


#### Refined cost equations eval_compress_output_bb4_in/2 
* CE 50: eval_compress_output_bb4_in(V_yoffset_0,B) = 0
     [B=8] 
* CE 51: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):1
     [D=6,B=6] 
* CE 52: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):3
     [D=6,B=6] 
* CE 53: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):4
     [D=6,B=6] 
* CE 54: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(C,D,E,F):2+ eval_compress_output_bb4_in(F,B)
     [F=C+1,F=V_yoffset_0+1,E=7] 
* CE 55: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):3
     [D=7] 
* CE 56: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):4
     [D=7] 

### Cost equations --> "Loop" of eval_compress_output_bb4_in/2 
* CEs [52,53,55,56] --> Loop 38 
* CEs [54] --> Loop 39 
* CEs [50] --> Loop 40 
* CEs [51] --> Loop 41 

#### Loops of eval_compress_output_bb4_in/2 
* Loop 38: eval_compress_output_bb4_in(V_yoffset_0,B) [] 
* Loop 39: eval_compress_output_bb4_in(V_yoffset_0,B)->  eval_compress_output_bb4_in(V_yoffset_0',B)
                  [V_yoffset_0+1=V_yoffset_0'] 
* Loop 40: eval_compress_output_bb4_in(V_yoffset_0,B) [B=8] 
* Loop 41: eval_compress_output_bb4_in(V_yoffset_0,B) [B=6] 

### Ranking functions of CR eval_compress_output_bb4_in(V_yoffset_0,B) 

#### Partial ranking functions of CR eval_compress_output_bb4_in(V_yoffset_0,B) 


### Resulting Chains:eval_compress_output_bb4_in(V_yoffset_0,B) 
* [[39]]...
* [[39],41]
* [[39],40]
* [[39],38]...
* [41]
* [40]
* [38]...


### Merging Chains  eval_compress_output_bb4_in/2 into  External patterns of execution 
* [[41],[41,[39]]] --> 1 
* [[40],[40,[39]]] --> 2 
* [[38],[[39]],[38,[39]]] --> 3 


### Specialization of cost equations loop_cont_eval_compress_output_bb4_in/2 
* CE 10 is refined into CE [57] 
* CE 11 is refined into CE [58] 


#### Refined cost equations loop_cont_eval_compress_output_bb4_in/2 
* CE 57: loop_cont_eval_compress_output_bb4_in(B,A) = 0
     [B=8] 
* CE 58: loop_cont_eval_compress_output_bb4_in(B,A) = 0
     [B=6] 

### Cost equations --> "Loop" of loop_cont_eval_compress_output_bb4_in/2 
* CEs [57] --> Loop 42 
* CEs [58] --> Loop 43 

#### Loops of loop_cont_eval_compress_output_bb4_in/2 
* Loop 42: loop_cont_eval_compress_output_bb4_in(B,A) [B=8] 
* Loop 43: loop_cont_eval_compress_output_bb4_in(B,A) [B=6] 

### Ranking functions of CR loop_cont_eval_compress_output_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_compress_output_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_compress_output_bb4_in(B,A) 
* [43]
* [42]


### Merging Chains  loop_cont_eval_compress_output_bb4_in/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations loop_cont_eval_compress_output_bb1_in/3 
* CE 6 is refined into CE [59,60,61] 


#### Refined cost equations loop_cont_eval_compress_output_bb1_in/3 
* CE 59: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):1+ loop_cont_eval_compress_output_bb4_in(F,B):1
     [F=6,E=6,D=7] 
* CE 60: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):2+ loop_cont_eval_compress_output_bb4_in(F,B):2
     [F=8,E=8,D=7] 
* CE 61: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):3
     [D=7] 

### Cost equations --> "Loop" of loop_cont_eval_compress_output_bb1_in/3 
* CEs [61] --> Loop 44 
* CEs [59,60] --> Loop 45 

#### Loops of loop_cont_eval_compress_output_bb1_in/3 
* Loop 44: loop_cont_eval_compress_output_bb1_in(D,A,B) [D=7] 
* Loop 45: loop_cont_eval_compress_output_bb1_in(D,A,B) [D=7] 

### Ranking functions of CR loop_cont_eval_compress_output_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_compress_output_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_compress_output_bb1_in(D,A,B) 
* [45]
* [44]...


### Merging Chains  loop_cont_eval_compress_output_bb1_in/3 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


### Specialization of cost equations eval_compress_output_bb0_in/1 
* CE 3 is refined into CE [62,63,64] 


#### Refined cost equations eval_compress_output_bb0_in/1 
* CE 62: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):1+ loop_cont_eval_compress_output_bb1_in(F,E,B):1
     [F=7,D=7,C=0] 
* CE 63: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):1+ loop_cont_eval_compress_output_bb1_in(F,E,B):2
     [F=7,D=7,C=0] 
* CE 64: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):2
     [C=0] 

### Cost equations --> "Loop" of eval_compress_output_bb0_in/1 
* CEs [63,64] --> Loop 46 
* CEs [62] --> Loop 47 

#### Loops of eval_compress_output_bb0_in/1 
* Loop 46: eval_compress_output_bb0_in(B) [] 
* Loop 47: eval_compress_output_bb0_in(B) [] 

### Ranking functions of CR eval_compress_output_bb0_in(B) 

#### Partial ranking functions of CR eval_compress_output_bb0_in(B) 


### Resulting Chains:eval_compress_output_bb0_in(B) 
* [47]
* [46]...


### Merging Chains  eval_compress_output_bb0_in/1 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_compress_output_start/1 
* CE 2 is refined into CE [65,66] 


#### Refined cost equations eval_compress_output_start/1 
* CE 65: eval_compress_output_start(B) = 0+ eval_compress_output_bb0_in(B):1
     [] 
* CE 66: eval_compress_output_start(B) = 0+ eval_compress_output_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_compress_output_start/1 
* CEs [66] --> Loop 48 
* CEs [65] --> Loop 49 

#### Loops of eval_compress_output_start/1 
* Loop 48: eval_compress_output_start(B) [] 
* Loop 49: eval_compress_output_start(B) [] 

### Ranking functions of CR eval_compress_output_start(B) 

#### Partial ranking functions of CR eval_compress_output_start(B) 


### Resulting Chains:eval_compress_output_start(B) 
* [49]
* [48]...


### Merging Chains  eval_compress_output_start/1 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1
#### Cost of phase [22]:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1*it(22)+0
#### Cost of chains of eval_compress_output_bb1_in(V_ci_0,B,C):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [V_ci_0>=0] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=7,V_ci_0>=0] 

* Chain [23]: 0
  with precondition: [B=7,V_ci_0>=0] 


#### Cost of loops [24] 

 * loop 24:eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) -> [eval_compress_output_bb16_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',V_xindex_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [24]:eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H) -> [eval_compress_output_bb16_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',V_xindex_0',B',C',D',E',F',G',H')] 
1*it(24)+0
  Such that:it(24) =< V_66-V_xindex_0
it(24) =< V_66-V_xindex_0-V_66'+V_xindex_0'

#### Cost of chains of eval_compress_output_bb16_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_0,B,C,D,E,F,G,H):
* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< -V_xindex_0+F

  with precondition: [B=2,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1=E,V_66=F,V_yindex_0=G,V_66=H,V_xindex_0>=0,V_66>=V_xindex_0+1] 

* Chain [25]: 0
  with precondition: [B=2,C=V_yoffset_0,D=V_MCU_col_num_0,E=V_ci_1,G=V_yindex_0,V_66=F,V_xindex_0=H,V_xindex_0>=0,V_xindex_0>=V_66] 


#### Cost of loops [26] 

 * loop 26:eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) -> [eval_compress_output_bb18_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',V_xindex_2',B',C',D',E',F',G')] 
1
#### Cost of phase [26]:eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) -> [eval_compress_output_bb18_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',V_xindex_2',B',C',D',E',F',G')] 
1*it(26)+0
#### Cost of phase [26]:eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G) -> [eval_compress_output_bb18_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',V_xindex_2',B',C',D',E',F',G')] 
1*it(26)+0
#### Cost of chains of eval_compress_output_bb18_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,V_xindex_2,B,C,D,E,F,G):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [B=3] 

* Chain [[26],27]: 1*it(26)+0
  with precondition: [B=3,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1=E,V_66=F,V_yindex_0+1=G] 

* Chain [27]: 0
  with precondition: [B=3,C=V_yoffset_0,D=V_MCU_col_num_0,E=V_ci_1,F=V_66,G=V_yindex_0+1] 


#### Cost of loops [29] 

 * loop 29:eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb12_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',B',C',D',E')] 
3*s(8)+1*s(7)+3
  Such that:s(7) =< V_66'

#### Cost of phase [29]:eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb12_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',B',C',D',E')] 
6*it(29)+1*s(10)+0
#### Cost of phase [29]:eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb12_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',B',C',D',E')] 
6*it(29)+1*s(10)+0
#### Cost of phase [29]:eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb12_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_66',V_yindex_0',B',C',D',E')] 
6*it(29)+1*s(10)+0
#### Cost of chains of eval_compress_output_bb12_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_66,V_yindex_0,B,C,D,E):
* Chain [[29]]...: 7*it(29)+0
  with precondition: [B=4] 

* Chain [[29],30]: 7*it(29)+0
  with precondition: [B=4,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1+1=E,V_yindex_0>=0] 

* Chain [[29],28]...: 10*it(29)+1*s(12)+3
  Such that:s(12) =< V_66

  with precondition: [B=4,V_yindex_0>=0] 

* Chain [30]: 0
  with precondition: [B=4,C=V_yoffset_0,D=V_MCU_col_num_0,E=V_ci_1+1,V_yindex_0>=0] 

* Chain [28]...: 3*s(11)+1*s(12)+3
  Such that:s(12) =< V_66

  with precondition: [B=4,V_yindex_0>=0] 


#### Cost of loops [32] 

 * loop 32:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
1*s(21)+2
#### Cost of phase [32]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(32)+0
#### Cost of phase [32]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(32)+0
#### Cost of phase [32]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(32)+0
#### Cost of chains of eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E):
* Chain [[32]]...: 3*it(32)+0
  with precondition: [B=5] 

* Chain [[32],33]: 3*it(32)+0
  with precondition: [B=5,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1>=0,E>=V_ci_1+1] 

* Chain [[32],31]...: 4*aux(6)+0
  with precondition: [B=5,V_ci_1>=0] 

* Chain [33]: 0
  with precondition: [B=5,C=V_yoffset_0,D=V_MCU_col_num_0,V_ci_1=E,V_ci_1>=0] 

* Chain [31]...: 1*aux(6)+0
  with precondition: [B=5,V_ci_1>=0] 


#### Cost of loops [35] 

 * loop 35:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(30)+0
#### Cost of phase [35]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(31)+0
#### Cost of phase [35]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(31)+0
#### Cost of phase [35]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(31)+0
#### Cost of phase [35]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(31)+0
#### Cost of chains of eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C):
* Chain [[35]]...: 1*s(31)+0
  with precondition: [B>=6,7>=B] 

* Chain [[35],37]: 2*aux(9)+0
  with precondition: [B=6] 

* Chain [[35],36]: 1*s(31)+0
  with precondition: [B=7,V_yoffset_0+1=C] 

* Chain [[35],34]...: 2*aux(10)+0
  with precondition: [7>=B,B>=6] 

* Chain [37]: 1*aux(9)+0
  with precondition: [B=6] 

* Chain [36]: 0
  with precondition: [B=7,C=V_yoffset_0+1] 

* Chain [34]...: 1*aux(10)+0
  with precondition: [7>=B,B>=6] 


#### Cost of loops [39] 

 * loop 39:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
1*s(43)+2
#### Cost of phase [39]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(39)+0
#### Cost of phase [39]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(39)+0
#### Cost of phase [39]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(39)+0
#### Cost of phase [39]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(39)+0
#### Cost of chains of eval_compress_output_bb4_in(V_yoffset_0,B):
* Chain [[39]]...: 3*it(39)+0
  with precondition: [] 

* Chain [[39],41]: 4*it(39)+1
  with precondition: [B=6] 

* Chain [[39],40]: 3*it(39)+0
  with precondition: [B=8] 

* Chain [[39],38]...: 4*aux(14)+0
  with precondition: [] 

* Chain [41]: 1*s(45)+1
  with precondition: [B=6] 

* Chain [40]: 0
  with precondition: [B=8] 

* Chain [38]...: 1*aux(14)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_compress_output_bb4_in(B,A):
* Chain [43]: 0
  with precondition: [B=6] 

* Chain [42]: 0
  with precondition: [B=8] 


#### Cost of chains of loop_cont_eval_compress_output_bb1_in(D,A,B):
* Chain [45]: 1*aux(18)+0
  with precondition: [D=7] 

* Chain [44]...: 1*s(58)+1
  with precondition: [D=7] 


#### Cost of chains of eval_compress_output_bb0_in(B):
* Chain [47]: 2*s(59)+1
  with precondition: [] 

* Chain [46]...: 1*aux(19)+0
  with precondition: [] 


#### Cost of chains of eval_compress_output_start(B):
* Chain [49]: 2*s(64)+1
  with precondition: [] 

* Chain [48]...: 1*s(65)+0
  with precondition: [] 


Closed-form bounds of eval_compress_output_start(B): 
-------------------------------------
* Chain [49] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_compress_output_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 45 ms.
* Invariants computed in 62 ms.
   - Backward Invariants 33 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 129 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 106 ms.
   - Equation cost structures 40 ms.
   - Phase cost structures 43 ms.
   - Chain cost structures 36 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 408 ms.

