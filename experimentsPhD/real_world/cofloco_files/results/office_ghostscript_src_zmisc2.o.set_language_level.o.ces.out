Warning: Ignored call to eval_set_language_level_stop/1 in equation eval_set_language_level_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_set_language_level_17/4,eval_set_language_level_18/5,eval_set_language_level_22/5,eval_set_language_level_23/5,eval_set_language_level_bb7_in/4]
1. recursive  : [eval_set_language_level_41/8,eval_set_language_level_42/9,eval_set_language_level_43/9,eval_set_language_level_44/9,eval_set_language_level_45/9,eval_set_language_level_46/9,eval_set_language_level_bb17_in/8]
2. recursive  : [eval_set_language_level_29/4,eval_set_language_level_30/5,eval_set_language_level_34/5,eval_set_language_level_35/5,eval_set_language_level_36/5,eval_set_language_level_37/5,eval_set_language_level_38/5,eval_set_language_level_39/6,eval_set_language_level_40/6,eval_set_language_level_47/5,eval_set_language_level_48/5,eval_set_language_level_bb12_in/4,eval_set_language_level_bb20_in/5,loop_cont_eval_set_language_level_bb17_in/5]
3. non_recursive  : [eval_set_language_level_bb22_in/1]
4. non_recursive  : [eval_set_language_level_50/1]
5. non_recursive  : [eval_set_language_level_49/2]
6. non_recursive  : [loop_cont_eval_set_language_level_bb12_in/3]
7. non_recursive  : [eval_set_language_level_28/3]
8. non_recursive  : [eval_set_language_level_27/2]
9. non_recursive  : [eval_set_language_level_bb11_in/2]
10. non_recursive  : [eval_set_language_level_25/2]
11. non_recursive  : [eval_set_language_level_24/2]
12. non_recursive  : [loop_cont_eval_set_language_level_bb7_in/3]
13. non_recursive  : [eval_set_language_level_16/3]
14. non_recursive  : [eval_set_language_level_15/2]
15. non_recursive  : [eval_set_language_level_bb5_in/2]
16. non_recursive  : [eval_set_language_level_12/2]
17. non_recursive  : [eval_set_language_level_11/2]
18. non_recursive  : [eval_set_language_level_7/2]
19. non_recursive  : [eval_set_language_level_6/2]
20. non_recursive  : [eval_set_language_level_5/2]
21. non_recursive  : [eval_set_language_level_4/2]
22. non_recursive  : [eval_set_language_level_3/3]
23. non_recursive  : [eval_set_language_level_1/3]
24. non_recursive  : [eval_set_language_level_0/2]
25. non_recursive  : [eval_set_language_level_bb0_in/2]
26. non_recursive  : [eval_set_language_level_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_set_language_level_bb7_in/4
1. SCC is partially evaluated into eval_set_language_level_bb17_in/8
2. SCC is partially evaluated into eval_set_language_level_bb12_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_set_language_level_bb12_in/3
7. SCC is partially evaluated into eval_set_language_level_28/3
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_set_language_level_16/3
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_set_language_level_7/2
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_set_language_level_5/2
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_set_language_level_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_set_language_level_bb7_in/4 
* CE 11 is refined into CE [22] 
* CE 10 is refined into CE [23] 


#### Refined cost equations eval_set_language_level_bb7_in/4 
* CE 22: eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) = 1+ eval_set_language_level_bb7_in(V__dict_auto_expand,D,E,C)
     [D>=0,E=4,B=4] 
* CE 23: eval_set_language_level_bb7_in(A,B,C,A) = 0
     [C=4] 

### Cost equations --> "Loop" of eval_set_language_level_bb7_in/4 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 

#### Loops of eval_set_language_level_bb7_in/4 
* Loop 16: eval_set_language_level_bb7_in(A,B,C,A) [C=4] 
* Loop 17: eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C)->  eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0',B',C)
                  [V_index_0'>=0,B'=4,B=4] 

### Ranking functions of CR eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) 

#### Partial ranking functions of CR eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) 


### Resulting Chains:eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) 
* [[17]]...
* [[17],16]
* [16]


### Merging Chains  eval_set_language_level_bb7_in/4 into  External patterns of execution 
* [[16],[16,[17]]] --> 1 
* [[[17]]] --> 2 


### Specialization of cost equations eval_set_language_level_bb17_in/8 
* CE 20 is refined into CE [24] 
* CE 21 is refined into CE [25] 
* CE 19 is refined into CE [26] 


#### Refined cost equations eval_set_language_level_bb17_in/8 
* CE 24: eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) = 0
     [V_59>=0,B=3] 
* CE 25: eval_set_language_level_bb17_in(A,B,C,D,E,F,A,C) = 0
     [C>=0,F=2] 
* CE 26: eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) = 1+ eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,E,B,C,D)
     [E>=0,B>=2,V_59>=0,3>=B] 

### Cost equations --> "Loop" of eval_set_language_level_bb17_in/8 
* CEs [26] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 

#### Loops of eval_set_language_level_bb17_in/8 
* Loop 18: eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D)->  eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0',B,C,D)
                  [V_isub_0'>=0,B>=2,V_59>=0,3>=B] 
* Loop 19: eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) [V_59>=0,B=3] 
* Loop 20: eval_set_language_level_bb17_in(A,B,C,D,E,F,A,C) [C>=0,F=2] 

### Ranking functions of CR eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) 

#### Partial ranking functions of CR eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) 


### Resulting Chains:eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) 
* [[18]]...
* [[18],20]
* [[18],19]
* [20]
* [19]


### Merging Chains  eval_set_language_level_bb17_in/8 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[[18]]] --> 3 


### Specialization of cost equations eval_set_language_level_bb12_in/4 
* CE 15 is refined into CE [27,28] 
* CE 16 is refined into CE [29] 
* CE 12 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 14 is refined into CE [32,33] 


#### Refined cost equations eval_set_language_level_bb12_in/4 
* CE 27: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 2+ eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,D,E,E,F,V__dict_auto_expand,D):1+ eval_set_language_level_bb12_in(V__dict_auto_expand,D,B,C)
     [D>=0,F=2] 
* CE 28: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 2+ eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,D,E,E,F,G,H):3
     [D>=0,F=2] 
* CE 29: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 1+ eval_set_language_level_bb12_in(V__dict_auto_expand,D,B,C)
     [D>=0] 
* CE 30: eval_set_language_level_bb12_in(A,B,C,A) = 0
     [C=5] 
* CE 31: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 0
     [B=3] 
* CE 32: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 1+ eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,D,E,E,F,G,H):2
     [D>=0,F=3,B=3] 
* CE 33: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) = 1+ eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,D,E,E,F,G,H):3
     [D>=0,F=3,B=3] 

### Cost equations --> "Loop" of eval_set_language_level_bb12_in/4 
* CEs [28,33] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31,32] --> Loop 23 
* CEs [27,29] --> Loop 24 

#### Loops of eval_set_language_level_bb12_in/4 
* Loop 21: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) [] 
* Loop 22: eval_set_language_level_bb12_in(A,B,C,A) [C=5] 
* Loop 23: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) [B=3] 
* Loop 24: eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C)->  eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0',B,C)
                  [V_index1_0'>=0] 

### Ranking functions of CR eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) 

#### Partial ranking functions of CR eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) 


### Resulting Chains:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) 
* [[24]]...
* [[24],23]
* [[24],22]
* [[24],21]...
* [23]
* [22]
* [21]...


### Merging Chains  eval_set_language_level_bb12_in/4 into  External patterns of execution 
* [[23],[23,[24]]] --> 1 
* [[22],[22,[24]]] --> 2 
* [[[24]]] --> 3 
* [[21],[21,[24]]] --> 4 


### Specialization of cost equations loop_cont_eval_set_language_level_bb12_in/3 
* CE 17 is refined into CE [34] 
* CE 18 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_set_language_level_bb12_in/3 
* CE 34: loop_cont_eval_set_language_level_bb12_in(D,A,B) = 0
     [D=5] 
* CE 35: loop_cont_eval_set_language_level_bb12_in(D,A,B) = 0
     [D=3] 

### Cost equations --> "Loop" of loop_cont_eval_set_language_level_bb12_in/3 
* CEs [34] --> Loop 25 
* CEs [35] --> Loop 26 

#### Loops of loop_cont_eval_set_language_level_bb12_in/3 
* Loop 25: loop_cont_eval_set_language_level_bb12_in(D,A,B) [D=5] 
* Loop 26: loop_cont_eval_set_language_level_bb12_in(D,A,B) [D=3] 

### Ranking functions of CR loop_cont_eval_set_language_level_bb12_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_set_language_level_bb12_in(D,A,B) 


### Resulting Chains:loop_cont_eval_set_language_level_bb12_in(D,A,B) 
* [26]
* [25]


### Merging Chains  loop_cont_eval_set_language_level_bb12_in/3 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_set_language_level_28/3 
* CE 9 is refined into CE [36,37,38,39] 


#### Refined cost equations eval_set_language_level_28/3 
* CE 36: eval_set_language_level_28(V__dict_auto_expand,V_39,B) = 1+ eval_set_language_level_bb12_in(V__dict_auto_expand,V_39,C,D):1+ loop_cont_eval_set_language_level_bb12_in(E,D,B):1
     [V__dict_auto_expand>=0,1>=V__dict_auto_expand,E=3,C=3] 
* CE 37: eval_set_language_level_28(V__dict_auto_expand,V_39,B) = 1+ eval_set_language_level_bb12_in(V__dict_auto_expand,V_39,C,V__dict_auto_expand):2+ loop_cont_eval_set_language_level_bb12_in(D,V__dict_auto_expand,B):2
     [V__dict_auto_expand>=0,1>=V__dict_auto_expand,D=5,C=5] 
* CE 38: eval_set_language_level_28(V__dict_auto_expand,V_39,B) = 1+ eval_set_language_level_bb12_in(V__dict_auto_expand,V_39,C,D):3
     [V__dict_auto_expand>=0,1>=V__dict_auto_expand] 
* CE 39: eval_set_language_level_28(V__dict_auto_expand,V_39,B) = 1+ eval_set_language_level_bb12_in(V__dict_auto_expand,V_39,C,D):4
     [V__dict_auto_expand>=0,1>=V__dict_auto_expand] 

### Cost equations --> "Loop" of eval_set_language_level_28/3 
* CEs [38,39] --> Loop 27 
* CEs [36,37] --> Loop 28 

#### Loops of eval_set_language_level_28/3 
* Loop 27: eval_set_language_level_28(V__dict_auto_expand,V_39,B) [V__dict_auto_expand>=0,1>=V__dict_auto_expand] 
* Loop 28: eval_set_language_level_28(V__dict_auto_expand,V_39,B) [V__dict_auto_expand>=0,1>=V__dict_auto_expand] 

### Ranking functions of CR eval_set_language_level_28(V__dict_auto_expand,V_39,B) 

#### Partial ranking functions of CR eval_set_language_level_28(V__dict_auto_expand,V_39,B) 


### Resulting Chains:eval_set_language_level_28(V__dict_auto_expand,V_39,B) 
* [28]
* [27]...


### Merging Chains  eval_set_language_level_28/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_set_language_level_16/3 
* CE 8 is refined into CE [40,41,42] 


#### Refined cost equations eval_set_language_level_16/3 
* CE 40: eval_set_language_level_16(V__dict_auto_expand,V_23,B) = 1+ eval_set_language_level_bb7_in(V__dict_auto_expand,V_23,C,V__dict_auto_expand):1+ eval_set_language_level_28(D,E,B):1
     [D=0,C=4] 
* CE 41: eval_set_language_level_16(V__dict_auto_expand,V_23,B) = 1+ eval_set_language_level_bb7_in(V__dict_auto_expand,V_23,C,V__dict_auto_expand):1+ eval_set_language_level_28(D,E,B):2
     [D=0,C=4] 
* CE 42: eval_set_language_level_16(V__dict_auto_expand,V_23,B) = 1+ eval_set_language_level_bb7_in(V__dict_auto_expand,V_23,C,D):2
     [E=0,C=4] 

### Cost equations --> "Loop" of eval_set_language_level_16/3 
* CEs [41,42] --> Loop 29 
* CEs [40] --> Loop 30 

#### Loops of eval_set_language_level_16/3 
* Loop 29: eval_set_language_level_16(V__dict_auto_expand,V_23,B) [] 
* Loop 30: eval_set_language_level_16(V__dict_auto_expand,V_23,B) [] 

### Ranking functions of CR eval_set_language_level_16(V__dict_auto_expand,V_23,B) 

#### Partial ranking functions of CR eval_set_language_level_16(V__dict_auto_expand,V_23,B) 


### Resulting Chains:eval_set_language_level_16(V__dict_auto_expand,V_23,B) 
* [30]
* [29]...


### Merging Chains  eval_set_language_level_16/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_set_language_level_7/2 
* CE 6 is refined into CE [43,44] 
* CE 7 is refined into CE [45] 


#### Refined cost equations eval_set_language_level_7/2 
* CE 43: eval_set_language_level_7(V__dict_auto_expand,B) = 0+ eval_set_language_level_28(C,D,B):1
     [C=1] 
* CE 44: eval_set_language_level_7(V__dict_auto_expand,B) = 0+ eval_set_language_level_28(C,D,B):2
     [C=1] 
* CE 45: eval_set_language_level_7(V__dict_auto_expand,B) = 0
     [] 

### Cost equations --> "Loop" of eval_set_language_level_7/2 
* CEs [43,45] --> Loop 31 
* CEs [44] --> Loop 32 

#### Loops of eval_set_language_level_7/2 
* Loop 31: eval_set_language_level_7(V__dict_auto_expand,B) [] 
* Loop 32: eval_set_language_level_7(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_set_language_level_7(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_set_language_level_7(V__dict_auto_expand,B) 


### Resulting Chains:eval_set_language_level_7(V__dict_auto_expand,B) 
* [32]...
* [31]


### Merging Chains  eval_set_language_level_7/2 into  External patterns of execution 
* [[31]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_set_language_level_5/2 
* CE 3 is refined into CE [46] 
* CE 4 is refined into CE [47,48] 
* CE 5 is refined into CE [49,50] 


#### Refined cost equations eval_set_language_level_5/2 
* CE 46: eval_set_language_level_5(V__dict_auto_expand,B) = 0
     [] 
* CE 47: eval_set_language_level_5(V__dict_auto_expand,B) = 0+ eval_set_language_level_7(V__dict_auto_expand,B):1
     [] 
* CE 48: eval_set_language_level_5(V__dict_auto_expand,B) = 0+ eval_set_language_level_7(V__dict_auto_expand,B):2
     [] 
* CE 49: eval_set_language_level_5(V__dict_auto_expand,B) = 0+ eval_set_language_level_16(V__dict_auto_expand,C,B):1
     [] 
* CE 50: eval_set_language_level_5(V__dict_auto_expand,B) = 0+ eval_set_language_level_16(V__dict_auto_expand,C,B):2
     [] 

### Cost equations --> "Loop" of eval_set_language_level_5/2 
* CEs [48,50] --> Loop 33 
* CEs [46,47,49] --> Loop 34 

#### Loops of eval_set_language_level_5/2 
* Loop 33: eval_set_language_level_5(V__dict_auto_expand,B) [] 
* Loop 34: eval_set_language_level_5(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_set_language_level_5(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_set_language_level_5(V__dict_auto_expand,B) 


### Resulting Chains:eval_set_language_level_5(V__dict_auto_expand,B) 
* [34]
* [33]...


### Merging Chains  eval_set_language_level_5/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_set_language_level_start/3 
* CE 2 is refined into CE [51,52] 


#### Refined cost equations eval_set_language_level_start/3 
* CE 51: eval_set_language_level_start(V_level,V__dict_auto_expand,B) = 0+ eval_set_language_level_5(V__dict_auto_expand,B):1
     [] 
* CE 52: eval_set_language_level_start(V_level,V__dict_auto_expand,B) = 0+ eval_set_language_level_5(V__dict_auto_expand,B):2
     [] 

### Cost equations --> "Loop" of eval_set_language_level_start/3 
* CEs [52] --> Loop 35 
* CEs [51] --> Loop 36 

#### Loops of eval_set_language_level_start/3 
* Loop 35: eval_set_language_level_start(V_level,V__dict_auto_expand,B) [] 
* Loop 36: eval_set_language_level_start(V_level,V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_set_language_level_start(V_level,V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_set_language_level_start(V_level,V__dict_auto_expand,B) 


### Resulting Chains:eval_set_language_level_start(V_level,V__dict_auto_expand,B) 
* [36]
* [35]...


### Merging Chains  eval_set_language_level_start/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) -> [eval_set_language_level_bb7_in(V__dict_auto_expand',V_index_0',B',C')] 
1
#### Cost of phase [17]:eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) -> [eval_set_language_level_bb7_in(V__dict_auto_expand',V_index_0',B',C')] 
1*it(17)+0
#### Cost of phase [17]:eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C) -> [eval_set_language_level_bb7_in(V__dict_auto_expand',V_index_0',B',C')] 
1*it(17)+0
#### Cost of chains of eval_set_language_level_bb7_in(V__dict_auto_expand,V_index_0,B,C):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [B=4] 

* Chain [[17],16]: 1*it(17)+0
  with precondition: [B=4,V__dict_auto_expand=C] 

* Chain [16]: 0
  with precondition: [B=4,C=V__dict_auto_expand] 


#### Cost of loops [18] 

 * loop 18:eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) -> [eval_set_language_level_bb17_in(V__dict_auto_expand',V_index1_0',V_59',V_69',V_isub_0',B',C',D')] 
1
#### Cost of phase [18]:eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) -> [eval_set_language_level_bb17_in(V__dict_auto_expand',V_index1_0',V_59',V_69',V_isub_0',B',C',D')] 
1*it(18)+0
#### Cost of phase [18]:eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) -> [eval_set_language_level_bb17_in(V__dict_auto_expand',V_index1_0',V_59',V_69',V_isub_0',B',C',D')] 
1*it(18)+0
#### Cost of phase [18]:eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D) -> [eval_set_language_level_bb17_in(V__dict_auto_expand',V_index1_0',V_59',V_69',V_isub_0',B',C',D')] 
1*it(18)+0
#### Cost of chains of eval_set_language_level_bb17_in(V__dict_auto_expand,V_index1_0,V_59,V_69,V_isub_0,B,C,D):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [V_59>=0,B>=2,3>=B] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=2,V__dict_auto_expand=C,V_59=D,V_59>=0] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=3,V_59>=0] 

* Chain [20]: 0
  with precondition: [B=2,C=V__dict_auto_expand,V_59=D,V_59>=0] 

* Chain [19]: 0
  with precondition: [B=3,V_59>=0] 


#### Cost of loops [24] 

 * loop 24:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) -> [eval_set_language_level_bb12_in(V__dict_auto_expand',V_index1_0',B',C')] 
1*s(5)+0
#### Cost of phase [24]:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) -> [eval_set_language_level_bb12_in(V__dict_auto_expand',V_index1_0',B',C')] 
1*s(6)+0
#### Cost of phase [24]:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) -> [eval_set_language_level_bb12_in(V__dict_auto_expand',V_index1_0',B',C')] 
1*s(6)+0
#### Cost of phase [24]:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) -> [eval_set_language_level_bb12_in(V__dict_auto_expand',V_index1_0',B',C')] 
1*s(6)+0
#### Cost of phase [24]:eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C) -> [eval_set_language_level_bb12_in(V__dict_auto_expand',V_index1_0',B',C')] 
1*s(6)+0
#### Cost of chains of eval_set_language_level_bb12_in(V__dict_auto_expand,V_index1_0,B,C):
* Chain [[24]]...: 1*s(6)+0
  with precondition: [] 

* Chain [[24],23]: 2*aux(5)+0
  with precondition: [B=3,1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [[24],22]: 1*s(6)+0
  with precondition: [B=5,V__dict_auto_expand=C,1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [[24],21]...: 2*aux(6)+0
  with precondition: [1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [23]: 1*aux(5)+0
  with precondition: [B=3,1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [22]: 0
  with precondition: [B=5,V__dict_auto_expand=C,1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [21]...: 1*aux(6)+0
  with precondition: [1>=V__dict_auto_expand,V__dict_auto_expand>=0] 


#### Cost of chains of loop_cont_eval_set_language_level_bb12_in(D,A,B):
* Chain [26]: 0
  with precondition: [D=3] 

* Chain [25]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_set_language_level_28(V__dict_auto_expand,V_39,B):
* Chain [28]: 1*aux(10)+0
  with precondition: [1>=V__dict_auto_expand,V__dict_auto_expand>=0] 

* Chain [27]...: 1*aux(11)+0
  with precondition: [1>=V__dict_auto_expand,V__dict_auto_expand>=0] 


#### Cost of chains of eval_set_language_level_16(V__dict_auto_expand,V_23,B):
* Chain [30]: 2*s(19)+1
  with precondition: [] 

* Chain [29]...: 1*aux(12)+0
  with precondition: [] 


#### Cost of chains of eval_set_language_level_7(V__dict_auto_expand,B):
* Chain [32]...: 1*s(24)+0
  with precondition: [] 

* Chain [31]: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_set_language_level_5(V__dict_auto_expand,B):
* Chain [34]: 1*aux(14)+0
  with precondition: [] 

* Chain [33]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_set_language_level_start(V_level,V__dict_auto_expand,B):
* Chain [36]: 1*s(30)+0
  with precondition: [] 

* Chain [35]...: 1*s(31)+0
  with precondition: [] 


Closed-form bounds of eval_set_language_level_start(V_level,V__dict_auto_expand,B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_set_language_level_start(V_level,V__dict_auto_expand,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 55 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 48 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 245 ms.

